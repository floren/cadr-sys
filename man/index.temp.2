(SETQ KEYWORD-INDEX (QUOTE (((|:defstruct| |  (for si:defstruct-define-type)|) 617) ((|:copier| |(for si:defstruct-define-type)|) 617) ((|:predicate| |(for si:defstruct-define-type)|) 617) ((|:defstruct-keywords| |  (for si:defstruct-define-type)|) 616) ((|:keywords| |(for si:defstruct-define-type)|) 616) ((|:cons-keywords| |  (for si:defstruct-define-type)|) 616) ((|:named| |  (for si:defstruct-define-type)|) 616) ((|:overhead| |  (for si:defstruct-define-type)|) 616) ((|:ref| |  (for si:defstruct-define-type)|) 615) ((|:cons| |  (for si:defstruct-define-type)|) 615) ((|:print| |(for defstruct)|) 600) ((|:property| |(for defstruct)|) 577) ((|:callable-constructors| |(for defstruct)|) 577) ((|:callable-accessors| |(for defstruct)|) 577) ((|:but-first| |  (for defstruct)|) 577) ((|:initial-offset| |  (for defstruct)|) 577) ((|:size-symbol| |  (for defstruct)|) 576) ((|:size-macro| |  (for defstruct)|) 576) ((|:times| |  (for defstruct)|) 576) ((|:make-array| |  (for defstruct)|) 575) ((|:named| |  (for defstruct)|) 575) ((|:include| |  (for defstruct)|) 573) ((|:conc-name| |  (for defstruct)|) 573) ((|:default-pointer| |  (for defstruct)|) 573) ((|:copier| |(for defstruct)|) 572) ((|:predicate| |(for defstruct)|) 572) ((|:alterant| |  (for defstruct)|) 572) ((|:constructor| |  (for defstruct)|) 572) ((|:grouped-array| |  (for defstruct)|) 571) ((|:fixnum| |  (for defstruct)|) 571) ((|:tree| |  (for defstruct)|) 571) ((|:named-flonum-array| |  (for defstruct)|) 571) ((|:named-fixnum-array| |  (for defstruct)|) 571) ((|:flonum-array| |  (for defstruct)|) 571) ((|:fixnum-array| |  (for defstruct)|) 571) ((|:named-array-leader| |  (for defstruct)|) 571) ((|:array-leader| |  (for defstruct)|) 571) ((|:phony-named-vector| |  (for defstruct)|) 571) ((|:named-vector| |  (for defstruct)|) 571) ((|:named-typed-array| |  (for defstruct)|) 571) ((|:named-array| |  (for defstruct)|) 570) ((|:vector| |  (for defstruct)|) 570) ((|:typed-array| |  (for defstruct)|) 570) ((|:array| |  (for defstruct)|) 570) ((|:named-list| |  (for defstruct)|) 570) ((|:list| |  (for defstruct)|) 570) ((|:type| |  (for defstruct)|) 570) ((|:documentation| |  (for defstruct slot option)|) 567) ((|:type| |  (for defstruct slot option)|) 567) ((|:read-only| |  (for defstruct slot option)|) 567) ((|:room| |  (for make-area)|) 452) ((|:pdl| |  (for make-area)|) 452) ((|:read-only| |  (for make-area)|) 452) ((|:gc| |  (for make-area)|) 452) ((|:representation| |  (for make-area)|) 452) ((|:region-size| |  (for make-area)|) 451) ((|:size| |  (for make-area)|) 451) ((|:name| |  (for make-area)|) 451) ((|:safe| |(for make-stack-group)|) 404) ((|:trap-enable| |(for make-stack-group)|) 403) ((|:swap-sv-of-sg-that-calls-me| |  (for make-stack-group)|) 403) ((|:swap-sv-on-call-out| |(for make-stack-group)|) 403) ((|:special-pdl-size| |(for make-stack-group)|) 403) ((|:regular-pdl-size| |(for make-stack-group)|) 403) ((|:special-pdl-area| |(for make-stack-group)|) 403) ((|:regular-pdl-area| |(for make-stack-group)|) 403) ((|:sg-area| |(for make-stack-group)|) 403) ((|:adjustable-p| |(for make-array)|) 251) ((|:named-structure-symbol| |(for make-array)|) 251) ((|:displaced-index-offset| |(for make-array)|) 251) ((|:fill-pointer| |(for make-array)|) 251) ((|:leader-list| |(for make-array)|) 250) ((|:leader-length| |(for make-array)|) 250) ((|:displaced-to| |(for make-array)|) 250) ((|:initial-contents| |(for make-array)|) 250) ((|:initial-element| |(for make-array)|) 250) ((|:initial-value| |(for make-array)|) 250) ((|:element-type| |(for make-array)|) 250) ((|:type| |(for make-array)|) 250) ((|:area| |(for make-array)|) 250) ((|:checker| |(for defresource)|) 175) ((|:matcher| |(for defresource)|) 175) ((|:finder| |(for defresource)|) 175) ((|:initializer| |(for defresource)|) 174) ((|:initial-copies| |(for defresource)|) 174) ((|:free-list-size| |(for defresource)|) 174) ((|:constructor| |(for defresource)|) 174) ((|:actual-size| |(for make-equal-hash-table)|) 167) ((|:rehash-before-cold| |(for make-equal-hash-table)|) 166) ((|:rehash-threshold| |(for make-equal-hash-table)|) 166) ((|:rehash-size| |(for make-equal-hash-table)|) 166) ((|:rehash-function| |(for make-equal-hash-table)|) 166) ((|:area| |(for make-equal-hash-table)|) 166) ((|:number-of-values| |(for make-equal-hash-table)|) 166) ((|:hash-function| |(for make-equal-hash-table)|) 166) ((|:compare-function| |(for make-equal-hash-table)|) 166) ((|:test| |(for make-equal-hash-table)|) 165) ((|:size| |(for make-equal-hash-table)|) 165) ((|:allow-other-keys| |  (for keyword arguments)|) 50)))) 
(SETQ CONCEPT-INDEX (QUOTE ((|named structure| 606) (|grouped array| 605) (|alterant macro| 603) (|constructor| 601) (|slot| 566) (|constructor| 565) (|accessor function| 564) (|macro defining macros| 564) (|record (structure)| 564) (|defstruct| 564) (|structures| 564) ((|array-elements| |loop iteration path|) 556) ((|hash-elements| |loop iteration path|) 555) ((|interned-symbols| |loop iteration path|) 555) ((|conditionalizing clause(s)| |in loop|) 547) ((|terminating the iteration| |in loop|) 546) ((|multiple accumulations| |in loop|) 545) ((|variable bindings| |in loop|) 542) ((|order of evaluation in iteration clauses| |in loop|) 541) ((|sequential vs parallel binding and initialization| |in loop|) 540) (|iteration| 536) (|loop| 536) (|displacing macros| 526) (|period, in symbols| 515) (|dot, in symbols| 515) (|substitutable function| 511) (|subst| 511) (|backquote| 505) (|defmacro| 502) (|macro-defining macros| 502) (|macros| 500) (|fasdump| 475) (|optimizer, compiler| 471) (|ignored arguments| 465) (|compiler warnings| 464) (|warnings from the compiler| 464) (|special variable| 461) (|eval-when| 460) (|input to the compiler| 457) (|QFASL files| 455) (|compiler| 455) (|area| 450) (|forwarding pointer| 420) (|invisible pointers| 420) (|subprimitive| 416) (|cell| 413) (|locative| 413) (|resumer| 401) (|initial function| 400) (|presetting stack groups| 400) (|special pdl| 400) (|regular pdl| 400) (|coroutine| 400) (|stack group| 400) (|entity| 377) (|external value cell| 373) (|internal value cell| 373) (|coroutine| 372) (|closure| 372) (|function renaming| 371) (|rename-within| 371) (|basic definition| 364) (|encapsulation| 364) (|lexpr| 356) (|special forms| 351) (FEF 350) (|function entry frame| 350) (|named-subst| 346) (|subst| 346) (|encapsulation| 340) (|basic definition| 340) (|function spec| 337) (|definition| 337) (|function| 337) (|paper tape punch| 327) (|lower case letter| 324) (|upper case letter| 324) (|alphabetic case| 324) (|case conversion| 324) (|special character| 323) (|character code values| 320) (|%%kbd fields| 316) (|keyboard character| 316) (|character set| 315) (|modifier bits (of a character)| 315) (|bits (of a character)| 315) (|font (of a character)| 315) (|character code| 315) (|characters| 314) (|character object| 313) (|string| 313) (|scream| 311) (|sorting| 310) (|generic sequence functions| 274) (|plane| 271) (|array leader| 252) (|index offset| 251) (|indirect array| 250) (|displaced array| 250) (|array initialization| 250) (|index offset| 247) (|indirect array| 247) (|displaced array| 246) (|fill pointer| 246) (|array leader| 246) (|stack group| 245) (|types of arrays| 243) (|string| 243) (|bit array| 243) (|numeric array| 243) (|specialized array| 243) (|general array| 243) (|simple array| 242) (|fill pointer| 242) (|total size of an array| 242) (|subscript| 242) (|vector| 242) (|rank of an array| 242) (|array| 242) (|byte specifiers| 233) (|byte| 233) (|complexnum| 207) (|short float| 207) (|float| 207) (|ratio| 207) (|bignum| 207) (|fixnum| 207) (|number| 207) (|uninterned symbol| 205) (|print name| 204) (|function cell| 202) (|value cell| 201) (|symbol| 201) (|storage allocation| 173) (|allocation of storage| 173) (|resource| 173) (|hash table| 171) (|hash table| 164) (|blocks| 162) (|disembodied property list| 162) (|attribute| 161) (|indicator| 161) (|plist| 161) (|property list| 161) (|stack lists| 160) (|association list| 156) (|kitty, yu-shiang| 155) (|sets| 153) (|alist| 146) (|association list| 146) (|substitution| 141) (|area| 130) (|dotted list| 126) (|elements (of a list)| 126) (|circular list| 126) (|tree| 126) (|list| 126) (|cdr| 126) (|car| 126) (|cons| 126) (|mapping| 124) (|cleanup handler| 122) (|unwind protection| 122) (|unwinding a stack| 122) (|tag| 120) (|throw| 120) (|catch| 120) (|non-local exit| 120) (|dynamic non-local exit| 120) (|statement| 116) (|go to| 116) (|tag| 116) (|prog tag| 116) (|non-local exit| 113) (|static non-local exit| 113) (|iteration| 106) (|equal versus =| 105) (|eq versus equal| 105) (|eq versus equal| 105) (|kitty| 104) (|fish| 101) (|exit| 76) (|non-local exit| 76) (|conditional| 76) (|iteration| 76) (|recursion| 76) (|flow of control| 76) (|control structure| 76) (|returning multiple values| 67) (|multiple values| 67) (|tail recursion| 67) (|declaration| 63) (|quote| 60) (|`&' keywords| 53) (|lambda-list keywords| 53) (|supplied-p variable| 52) (|rest parameters| 47) (|required parameters| 47) (|optional parameters| 47) (|positional parameters| 47) (|keyword parameters| 47) (|parameters| 47) (|lambda list| 46) (|setf| 43) (|special pdl| 35) (|value cell| 35) (|lexical closure| 34) (|free variable| 33) (|special variable| 32) (|dynamic scope| 32) (|lexical scope| 32) (|unbound variable| 32) (|void binding| 32) (|global binding| 31) (|scope of binding| 31) (|unbinding| 31) (|shadowing of bindings| 31) (|binding| 31) (|evaluation| 30) (|type specifiers| 16) (|locative| 16) (|entity| 15) (|closure| 15) (|applicable function| 15) (|function| 15) (|array| 14) (|string| 14) (|number| 13) (|atom| 13) (|cons| 13) (|symbol| 13) (|data type| 13) (|naming convention| 13) (|predicate| 13) (FEF 12) (|character object| 12) (|property list| 11) (|definition| 11) (|print name| 11) (|symbol| 11) (|common lisp| 7) (|atom| 5) (|dotted pair| 5) (|s-expression| 5)))) 
(SETQ VARIABLE-INDEX (QUOTE ((|*macroexpand-hook*| 530) (|inhibit-style-warnings-switch| 474) (|open-code-map-switch| 474) (|allow-variables-in-function-position-switch| 473) (|obsolete-function-warning-switch| 473) (|run-in-maclisp-switch| 473) (|ignore| 465) (|compiler:warn-on-errors| 465) (|sys:file-local-declarations| 460) (|compiler:qc-file-check-indentation| 460) (|compiler:peep-enable| 457) (|compiler:compiler-verbose| 457) (|compile-encapsulations-flag| 456) (|sys:property-list-area| 454) (|macro-compiled-program| 454) (|sys:pkg-area| 454) (|sys:resident-symbol-area| 454) (|sys:nr-sym| 454) (|sys:p-n-string| 454) (|sys:extra-pdl-area| 453) (|permanent-storage-area| 453) (|working-storage-area| 453) (|area-list| 452) (|background-cons-area| 451) (|default-cons-area| 451) (|sys:a-memory-counter-block-names| 447) (|sys:a-memory-location-names| 444) (|sys:amem-evcp-vector| 444) (|sys:lexical-environment| 444) (|sys:%meter-disk-count| 444) (|sys:%meter-disk-address| 444) (|sys:%meter-buffer-pointer| 444) (|sys:%meter-global-enable| 444) (|sys:currently-prepared-sheet| 443) (|sys:%mc-code-exit-vector| 443) (|sys:%qlaryl| 443) (|sys:%qlaryh| 443) (|sys:%disk-blocks-per-cylinder| 443) (|sys:%disk-blocks-per-track| 443) (|sys:%loaded-band| 443) (|sys:%disk-run-light| 443) (|sys:%gc-generation-number| 443) (|sys:%gc-flip-ready| 443) (|sys:%page-cons-alarm| 442) (|sys:%region-cons-alarm| 442) (|sys:scavenger-ws-enable| 442) (|inhibit-scavenging-flag| 442) (|sys:%inhibit-read-only| 442) (|%mar-high| 442) (|%mar-low| 442) (|sys:%chaos-csr-address| 442) (|sys:%scheduler-stack-group| 442) (|sys:%error-handler-stack-group| 442) (|sys:%initial-stack-group| 442) (|sys:%initial-fef| 441) (|sys:%trap-micro-pc| 441) (|sys:%current-stack-group-calling-args-number| 441) (|sys:%current-stack-group-calling-args-pointer| 441) (|sys:%current-stack-group-state| 441) (|sys:number-cons-area| 441) (|sys:%number-of-micro-entries| 441) (|%microcode-version-number| 441) (|sys:processor-type-code| 440) (|sys:%disk-switches| 434) (|cdr-error| 427) (|cdr-nil| 427) (|cdr-next| 427) (|cdr-normal| 427) (|%%q-low-half| 427) (|%%q-high-half| 427) (|%%q-all-but-cdr-code| 427) (|%%q-all-but-pointer| 427) (|%%q-all-but-typed-pointer| 426) (|%%q-typed-pointer| 426) (|%%q-pointer-within-page| 426) (|%%q-pointer| 426) (|%%q-data-type| 426) (|%%q-cdr-code| 426) (|q-data-types| 420) (|dtp-gc-forward| 420) (|dtp-one-q-forward| 420) (|dtp-body-forward| 420) (|dtp-header-forward| 420) (|dtp-self-ref-pointer| 420) (|dtp-external-value-cell-pointer| 420) (|dtp-free| 420) (|dtp-trap| 420) (|dtp-null| 417) (|dtp-instance-header| 417) (|dtp-symbol-header| 417) (|dtp-array-header| 417) (|dtp-header| 417) (|dtp-stack-group| 417) (|dtp-select-method| 417) (|dtp-entity| 417) (|dtp-instance| 417) (|dtp-stack-closure| 417) (|dtp-closure| 417) (|dtp-u-entry| 417) (|dtp-fef-pointer| 417) (|dtp-array-pointer| 417) (|dtp-locative| 417) (|dtp-list| 417) (|dtp-character| 417) (|dtp-extended-number| 417) (|dtp-small-flonum| 417) (|dtp-fix| 417) (|dtp-symbol| 417) (|eh:pdl-grow-ratio| 404) (|current-stack-group| 402) (|current-stack-group-resumer| 402) (|si:encapsulation-standard-order| 367) (|%arg-desc-fef-bind-hair| 364) (|%arg-desc-interpreted| 364) (|%arg-desc-fef-quote-hair| 364) (|%arg-desc-quoted-rest| 364) (|%arg-desc-evaled-rest| 364) (|%%arg-desc-max-args| 364) (|%%arg-desc-min-args| 363) (|inhibit-fdefine-warnings| 360) (|sys:fdefine-file-pathname| 357) (|alphabetic-case-affects-string-comparison| 332) (|%%kbd-mouse-n-clicks| 317) (|%%kbd-mouse-button| 317) (|%%kbd-control-meta| 317) (|%%kbd-hyper| 317) (|%%kbd-super| 317) (|%%kbd-meta| 317) (|%%kbd-control| 317) (|%%ch-font| 317) (|%%ch-char| 316) (|%%kbd-char| 316) (|char-hyper-bit| 316) (|char-super-bit| 316) (|char-meta-bit| 316) (|char-control-bit| 316) (|char-bits-limit| 316) (|char-font-limit| 316) (|char-code-limit| 316) (|sys:array-index-order| 267) (|array-bits-per-element| 245) (|array-elements-per-q| 245) (|array-types| 245) (|art-special-pdl| 245) (|art-reg-pdl| 245) (|art-stack-group-head| 245) (|art-complex-fps-float| 245) (|art-complex-float| 244) (|art-complex| 244) (|art-fps-float| 244) (|art-float| 244) (|art-half-fix| 244) (|art-32b| 244) (|art-16b| 243) (|art-8b| 243) (|art-4b| 243) (|art-2b| 243) (|art-1b| 243) (|art-fat-string| 243) (|art-string| 243) (|art-q-list| 243) (|art-q| 243) (|array-total-size-limit| 242) (|array-dimension-limit| 242) (|array-rank-limit| 242) (|long-float-negative-epsilon| 240) (|double-float-negative-epsilon| 240) (|single-float-negative-epsilon| 240) (|short-float-negative-epsilon| 237) (|long-float-epsilon| 237) (|double-float-epsilon| 237) (|single-float-epsilon| 237) (|short-float-epsilon| 237) (|most-negative-long-float| 237) (|least-negative-long-float| 237) (|least-positive-long-float| 237) (|most-positive-long-float| 237) (|most-negative-double-float| 237) (|least-negative-double-float| 237) (|least-positive-double-float| 237) (|most-positive-double-float| 237) (|most-negative-single-float| 237) (|least-negative-single-float| 237) (|least-positive-single-float| 237) (|most-positive-single-float| 237) (|most-negative-short-float| 237) (|least-negative-short-float| 237) (|least-positive-short-float| 237) (|most-positive-short-float| 237) (|most-positive-fixnum| 237) (|most-negative-fixnum| 236) (|*random-state*| 235) (|boole-2| 231) (|boole-1| 231) (|boole-set| 231) (|boole-clr| 231) (|boole-andc2| 231) (|boole-andc1| 231) (|boole-orc2| 231) (|boole-orc1| 231) (|boole-nor| 231) (|boole-nand| 231) (|boole-eqv| 231) (|boole-xor| 231) (|boole-and| 231) (|boole-ior| 231) (|pi| 223) (|zunderflow| 211) (|multiple-values-limit| 73) (|tail-recursion-flag| 67) (|call-arguments-limit| 57) (|lambda-list-keywords| 54) (|lambda-parameters-limit| 53)))) 
(SETQ FUNCTION-INDEX (QUOTE ((|si:defstruct-define-type| 614) (|cli:defstruct| 611) (|named-structure-invoke| 611) (|make-array-into-named-structure| 611) (|named-structure-p| 611) (|describe-defstruct| 570) (|defstruct| 566) (|si:loop-named-variable| 561) (|si:loop-tassoc| 560) (|si:loop-tmember| 560) (|si:loop-tequal| 560) (|define-loop-path| 557) (|define-loop-sequence-path| 556) (|define-loop-macro| 551) (|loop-finish| 546) (|loop| 536) (|deflocf| 535) (|define-modify-macro| 535) (|si:sublis-eval-once| 534) (|get-setf-method| 533) (|define-setf-method| 532) (|defsetf| 531) (|macro-function| 530) (|macroexpand-all| 527) (|macroexpand| 527) (|macroexpand-1| 527) (|displace| 526) (|mexp| 526) (|once-only| 522) (|defsubst| 511) (|macrolet| 511) (|defmacro| 502) (|macro| 500) (|si:unfasl-file| 477) (|si:unfasl-print| 477) (|compiler:fasd-file-symbols-properties| 476) (|compiler:fasd-font| 476) (|compiler:fasd-symbol-value| 476) (|dump-forms-to-file| 475) (|*fexpr| 474) (|*lexpr| 474) (|*expr| 474) (|compiler-let| 474) (|if-in-maclisp| 473) (|if-in-lispm| 473) (|if-for-maclisp-else-lispm| 473) (|if-for-maclisp| 472) (|if-for-lispm| 472) (|compiler:defcompiler-synonym| 472) (|compiler:defoptimizer| 472) (|compiler:add-optimizer| 471) (|sys:record-and-print-warning| 470) (|sys:record-warning| 470) (|sys:object-operation-with-warnings| 467) (|sys:file-operation-with-warnings| 467) (|compiler:make-obsolete| 466) (|compiler:compilation-define| 466) (|compiler:function-referenced| 466) (|inhibit-style-warnings| 465) (|si:dump-warnings| 465) (|defdecl| 463) (|putdecl| 463) (|getdecl| 463) (|dont-optimize| 462) (|eval-when| 461) (|qc-file-load| 457) (|qc-file| 456) (|compile-file| 456) (|compile-encapsulations| 456) (|compile-lambda| 456) (|uncompile| 455) (|compile| 455) (|si:reset-temporary-area| 453) (|area-name| 453) (|%region-number| 453) (|%area-number| 453) (|describe-area| 452) (|make-area| 451) (|sys:%halt| 447) (|write-meter| 444) (|read-meter| 444) (|select-processor| 440) (|if-in-lambda-else-cadr| 440) (|if-in-cadr-else-lambda| 440) (|if-in-lambda| 440) (|if-in-cadr| 440) (|sys:%internal-value-cell| 440) (|sys:%using-binding-instances| 437) (|sys:%binding-instances| 437) (|si:set-memory-size| 437) (|sys:%disk-save| 437) (|sys:%disk-restore| 437) (|sys:%delete-physical-page| 437) (|sys:%create-physical-page| 436) (|sys:%physical-address| 436) (|sys:%compute-page-hash| 436) (|sys:%change-page-status| 436) (|sys:%page-status| 436) (|sys:page-out-region| 436) (|sys:page-out-area| 436) (|sys:page-out-words| 436) (|sys:page-out-pixel-array| 436) (|sys:page-out-array| 436) (|sys:page-out-structure| 436) (|sys:page-in-region| 436) (|sys:page-in-area| 436) (|sys:page-in-words| 435) (|sys:page-in-pixel-array| 435) (|sys:page-in-array| 435) (|sys:page-in-structure| 435) (|si:unwire-page| 435) (|si:wire-page| 435) (|si:set-all-swap-recommendations| 435) (|si:set-swap-recommendations-of-area| 435) (|bind| 434) (|%bind| 434) (|%assure-pdl-room| 434) (|%pop| 434) (|%activate-open-call-block| 434) (|%push| 434) (|%open-call-block| 433) (|sys:%nubus-physical-address| 433) (|sys:%nubus-write| 433) (|sys:%nubus-read| 433) (|sys:%xbus-write-sync| 432) (|%xbus-write| 432) (|%xbus-read| 432) (|%unibus-write| 432) (|%unibus-read| 432) (|%store-conditional| 432) (|return-storage| 431) (|%blt-typed| 430) (|%blt| 430) (|%allocate-and-initialize-array| 430) (|%allocate-and-initialize| 430) (|%structure-total-size| 430) (|%structure-boxed-size| 427) (|%find-structure-leader| 427) (|%find-structure-header| 427) (|%stack-frame-pointer| 426) (|%p-store-cdr-code| 426) (|%p-store-data-type| 426) (|%p-store-pointer| 426) (|%p-cdr-code| 425) (|%p-data-type| 425) (|%p-pointer| 425) (|%p-deposit-field-offset| 425) (|%p-deposit-field| 425) (|%p-dpb-offset| 425) (|%p-dpb| 425) (|%p-mask-field-offset| 425) (|%p-mask-field| 425) (|%p-ldb-offset| 424) (|%p-ldb| 424) (|%p-store-tag-and-pointer| 424) (|%p-store-contents-offset| 424) (|%p-store-contents| 424) (|%p-safe-contents-offset| 424) (|%p-contents-as-locative-offset| 423) (|%p-contents-as-locative| 423) (|%p-contents-safe-p-offset| 423) (|%p-contents-safe-p| 423) (|%p-contents-offset| 423) (|%p-pointerp-offset| 423) (|%p-pointerp| 423) (|%pointer-type-p| 423) (|%pointerp| 422) (|%pointer-difference| 422) (|%make-pointer-offset| 422) (|%make-pointer| 422) (|%pointer| 422) (|%data-type| 422) (|follow-cell-forwarding| 422) (|forward-value-cell| 421) (|follow-structure-forwarding| 421) (|structure-forward| 421) (|q-data-types| 420) (|data-type| 416) (|location-makunbound| 414) (|location-boundp| 414) (|contents| 413) (|eh:sg-frame-special-pdl-range| 410) (|eh:sg-frame-value-list| 407) (|eh:sg-frame-value-value| 407) (|eh:sg-frame-local-value| 407) (|eh:sg-frame-number-of-locals| 407) (|eh:sg-frame-rest-arg-value| 407) (|eh:sg-frame-arg-value| 406) (|eh:sg-frame-number-of-spread-args| 406) (|sys:rp-function-word| 406) (|eh:sg-out-to-interesting-active| 406) (|eh:sg-previous-interesting-active| 406) (|eh:sg-next-interesting-active| 406) (|eh:sg-frame-active-p| 406) (|eh:sg-previous-open| 406) (|eh:sg-next-open| 406) (|eh:sg-innermost-open| 406) (|eh:sg-previous-active| 406) (|eh:sg-next-active| 405) (|eh:sg-innermost-active| 405) (|sg-special-pdl-pointer| 405) (|sg-special-pdl| 405) (|sg-regular-pdl-pointer| 405) (|sg-regular-pdl| 405) (|symeval-in-stack-group| 405) (|stack-group-return| 404) (|si:sg-resumable-p| 404) (|stack-group-resume| 404) (|stack-group-preset| 404) (|eh:require-pdl-room| 404) (|make-stack-group| 403) (|entity| 377) (|let-closed| 376) (|copy-closure| 376) (|closure-bindings| 376) (|closure-function| 376) (|closure-variables| 376) (|closure-alist| 376) (|makunbound-in-closure| 376) (|boundp-in-closure| 376) (|locate-in-closure| 376) (|set-in-closure| 375) (|symeval-in-closure| 375) (|closure| 375) (|si:rename-within-new-definition-maybe| 371) (|si:unencapsulate-function-spec| 367) (|si:encapsulation-body| 367) (|si:encapsulate| 365) (|%args-info| 364) (|args-info| 363) (|eh:local-name| 363) (|eh:rest-arg-name| 363) (|eh:arg-name| 363) (|function-name| 363) (|arglist| 362) (|debugging-info| 362) (|si:function-parent| 361) (|si:function-spec-lessp| 361) (|si:function-spec-putprop| 361) (|si:function-spec-get| 361) (|undefun| 361) (|fundefine| 361) (|fdefinition-location| 360) (|fdefinition| 360) (|fdefinedp| 360) (|fset-carefully| 360) (|si:get-all-source-file-names| 360) (|si:get-source-file-name| 357) (|si:record-source-file-name| 357) (|fdefine| 357) (|listify| 356) (|setarg| 356) (|arg| 356) (|defselect-incremental| 355) (|defselect| 354) (|si:defun-compatibility| 354) (|@define| 354) (|deff-macro| 354) (|deff| 353) (|def| 353) (|deffunction| 347) (|deflambda-macro| 347) (|lambda-macro| 347) (|defun| 343) (|implode| 336) (|maknam| 335) (|ascii| 335) (|getcharn| 335) (|getchar| 335) (|samepnamep| 335) (|alphalessp| 335) (|substring-after-char| 335) (|string-subst-char| 334) (|string-reverse-search-not-set| 334) (|string-reverse-search-set| 334) (|string-reverse-search| 334) (|string-reverse-search-not-char| 333) (|string-reverse-search-char| 333) (|string-search-not-set| 333) (|string-search-set| 333) (|string-search| 332) (|string-search-not-char| 332) (|%string-search-char| 332) (|string-search-char| 332) (|%string-equal| 331) (|string-append-a-or-an| 331) (|string-select-a-or-an| 331) (|string-pluralize| 331) (|string-nreverse| 331) (|string-reverse| 331) (|string-remove-fonts| 331) (|string-right-trim| 330) (|string-left-trim| 330) (|string-trim| 330) (|string-nconc| 330) (|string-append| 330) (|nsubstring| 330) (|substring| 327) (|string-compare| 327) (|string| 327) (|string| 327) (|string<=| 327) (|string>=| 327) (|string>| 327) (|string<| 327) (|string-not-lessp| 327) (|string-not-greaterp| 327) (|string-greaterp| 327) (|string-lessp| 327) (|string////=| 327) (|string| 327) (|string=| 326) (|string-not-equal| 326) (|string-equal| 326) (|string-length| 326) (|string| 326) (|make-string| 326) (|string-capitalize-words| 325) (|nstring-capitalize| 325) (|nstring-downcase| 325) (|nstring-upcase| 325) (|string-capitalize| 325) (|string-downcase| 325) (|string-upcase| 325) (|char-downcase| 325) (|char-upcase| 325) (|both-case-p| 324) (|lower-case-p| 324) (|upper-case-p| 324) (|name-char| 323) (|char-name| 323) (|char<=| 323) (|char>=| 323) (|char<| 323) (|char>| 323) (|char////=| 323) (|char=| 323) (|char-not-greaterp| 323) (|char-not-lessp| 323) (|char-greaterp| 323) (|char-lessp| 323) (|char-not-equal| 322) (|char-equal| 322) (|alphanumericp| 322) (|digit-char-p| 322) (|alpha-char-p| 322) (|graphic-char-p| 322) (|standard-char-p| 322) (|string-char-p| 322) (|tv:make-mouse-char| 320) (|digit-char| 317) (|make-char| 317) (|code-char| 317) (|tv:kbd-mouse-p| 317) (|set-char-bit| 316) (|char-bit| 316) (|char-bits| 316) (|char-font| 316) (|char-code| 316) (|char-int| 315) (|int-char| 314) (|cli:character| 314) (|character| 314) (|characterp| 314) (|merge| 312) (|sort-grouped-array-group-key| 312) (|sort-grouped-array| 312) (|stable-sortcar| 312) (|stable-sort| 312) (|sortcar| 311) (|sort| 310) (|search| 307) (|mismatch| 307) (|count| 306) (|count-if-not| 306) (|count-if| 306) (|find| 306) (|position| 306) (|find-if-not| 306) (|position-if-not| 306) (|find-if| 305) (|position-if| 305) (|nsubstitute| 305) (|substitute| 305) (|nsubstitute-if-not| 305) (|substitute-if-not| 305) (|nsubstitute-if| 304) (|substitute-if| 304) (|delete-duplicates| 304) (|remove-duplicates| 304) (|cli:delete| 303) (|cli:remove| 303) (|delete-if-not| 303) (|remove-if-not| 303) (|delete-if| 302) (|remove-if| 302) (|reduce| 300) (|notevery| 300) (|notany| 300) (|cli:every| 300) (|cli:some| 277) (|cli:map| 277) (|nreverse| 276) (|reverse| 276) (|fill| 276) (|replace| 275) (|subseq| 275) (|concatenate| 275) (|copy-seq| 275) (|length| 274) (|elt| 274) (|make-sequence| 274) (|arraycall| 273) (|xstore| 273) (|store| 273) (|*array| 273) (|array| 273) (|plane-store| 272) (|plane-aset| 272) (|plane-ref| 272) (|plane-aref| 272) (|plane-extension| 272) (|plane-default| 272) (|plane-origin| 272) (|make-plane| 271) (|math:fill-2d-array| 270) (|math:list-2d-array| 270) (|math:solve| 270) (|math:decompose| 270) (|math:determinant| 270) (|math:transpose-matrix| 267) (|math:invert-matrix| 267) (|math:multiply-matrices| 267) (|as-2-reverse| 267) (|ar-2-reverse| 267) (|pixel-array-height| 266) (|pixel-array-width| 266) (|make-pixel-array| 266) (|bitblt| 265) (|bit-not| 265) (|bit-orc2| 264) (|bit-orc1| 264) (|bit-andc2| 264) (|bit-andc1| 264) (|bit-nor| 264) (|bit-nand| 264) (|bit-eqv| 264) (|bit-xor| 264) (|bit-ior| 264) (|bit-and| 264) (|copy-array-portion| 264) (|copy-array-contents-and-leader| 264) (|copy-array-contents| 264) (|list-array-leader| 263) (|listarray| 263) (|fillarray| 263) (|array-initialize| 263) (|array-pop| 262) (|vector-pop| 262) (|array-push-extend| 262) (|vector-push-extend| 262) (|array-push| 262) (|vector-push| 262) (|get-locative-pointer-into-array| 262) (|get-list-pointer-into-array| 261) (|g-l-p| 261) (|si:change-indirect-array| 261) (|array-grow| 261) (|adjust-array-size| 260) (|adjust-array| 260) (|adjustable-array-p| 257) (|array-leader-length| 257) (|array-has-leader-p| 257) (|array-has-fill-pointer-p| 257) (|array-index-offset| 257) (|array-indexed-p| 257) (|array-indirect-p| 257) (|array-displaced-p| 257) (|array-in-bounds-p| 257) (|arraydims| 257) (|array-dimensions| 256) (|array-dimension-n| 256) (|array-dimension| 256) (|array-rank| 256) (|array-active-length| 256) (|array-total-size| 256) (|array-length| 256) (|array-element-type| 255) (|array-type| 255) (|schar| 254) (|char| 254) (|sbit| 254) (|bit| 254) (|svref| 254) (|ap-3| 254) (|ap-2| 254) (|ap-1| 254) (|as-3| 254) (|as-2| 254) (|as-1| 254) (|ar-3| 254) (|ar-2| 254) (|ar-1| 254) (|ap-leader| 254) (|store-array-leader| 253) (|array-leader| 253) (|array-row-major-index| 253) (|ap-1-force| 253) (|as-1-force| 253) (|ar-1-force| 253) (|aloc| 253) (|aset| 253) (|cli:aref| 252) (|aref| 252) (|make-array| 247) (|vector| 247) (|fill-pointer| 246) (|array-element-size| 245) (|array-bits-per-element| 245) (|array-elements-per-q| 245) (|array-types| 245) (|%float-double| 241) (|%remainder-double| 241) (|%divide-double| 241) (|%multiply-fractions| 241) (|%24-bit-times| 240) (|%24-bit-difference| 240) (|%24-bit-plus| 240) (|%pointer-times| 240) (|%pointer-difference| 240) (|%pointer-plus| 240) (|si:random-initialize| 236) (|si:random-create-array| 236) (|make-random-state| 236) (|random-state-p| 235) (|si:random-in-range| 235) (|random| 235) (|%logdpb| 235) (|%logldb| 235) (|deposit-field| 234) (|deposit-byte| 234) (|dpb| 234) (|mask-field| 234) (|logbitp| 234) (|ldb-test| 234) (|load-byte| 234) (|ldb| 233) (|byte-size| 233) (|byte-position| 233) (|byte| 233) (|haipart| 232) (|haulong| 232) (|integer-length| 232) (|logcount| 232) (|rot| 232) (|ash| 232) (|lsh| 231) (|logtest| 231) (|bit-test| 231) (|boole| 230) (|lognot| 230) (|logandc2| 230) (|logandc1| 230) (|logorc2| 230) (|logorc1| 230) (|lognor| 230) (|lognand| 230) (|logeqv| 230) (|logxor| 227) (|logand| 227) (|logior| 227) (|float-precision| 227) (|float-digits| 227) (|float-radix| 227) (|float-sign| 227) (|scale-float| 226) (|integer-decode-float| 226) (|decode-float| 226) (|fixr| 226) (|fix| 226) (|rationalize| 225) (|rational| 225) (|denominator| 225) (|numerator| 225) (|short-float| 225) (|small-float| 225) (|float| 225) (|atanh| 224) (|acosh| 224) (|asinh| 224) (|tanh| 224) (|cosh| 224) (|sinh| 224) (|cli:atan| 224) (|atan2| 224) (|atan| 224) (|acos| 224) (|asin| 224) (|tand| 224) (|cosd| 224) (|sind| 224) (|tan| 224) (|cos| 224) (|sin| 224) (|log| 223) (|exp| 223) (|signum| 223) (|cis| 223) (|phase| 223) (|conjugate| 223) (|imagpart| 223) (|realpart| 222) (|complex| 222) (|%div| 222) (|*times| 222) (|*quo| 222) (|*plus| 222) (|*dif| 222) (|isqrt| 222) (|sqrt| 222) (^$ 221) (^ 221) (|expt| 221) (|lcm| 221) (\\ 221) (|gcd| 221) (1-$ 221) (|sub1| 221) (1- 221) (1+$ 221) (|add1| 221) (1+ 221) (|fround| 221) (|ftruncate| 221) (|fceiling| 221) (|ffloor| 221) (|mod| 220) (|cli:rem| 220) (|remainder| 220) (\ 220) (|round| 217) (|truncate| 217) (|ceiling| 217) (|floor| 217) (|cli:////| 216) (|quotient| 216) (////$ 216) (//// 216) (*$ 216) (|times| 216) (* 216) (|abs| 215) (|difference| 215) (|minus| 215) (-$ 215) (- 215) (+$ 215) (|plus| 215) (+ 215) (|min| 214) (|max| 214) (////= 214) (|| 214) (|| 214) (<= 214) (|lessp| 214) (< 214) (|| 213) (>= 213) (|greaterp| 213) (> 213) (= 213) (|signp| 212) (|evenp| 212) (|oddp| 212) (|minusp| 212) (|plusp| 212) (|zerop| 212) (|gentemp| 206) (|gensym| 205) (|copy-symbol| 205) (|copysymbol| 205) (|make-symbol| 205) (|get-pname| 204) (|symbol-name| 204) (|property-cell-location| 204) (|setplist| 203) (|symbol-plist| 203) (|plist| 203) (|function-cell-location| 203) (|fmakunbound| 203) (|fboundp| 203) (|fset| 202) (|symbol-function| 202) (|fsymeval| 202) (|value-cell-location| 202) (|makunbound| 201) (|boundp| 201) (|set| 201) (|symbol-value| 201) (|symeval| 201) (|si:resource-parametizer| 177) (|si:resource-n-objects| 177) (|si:resource-parameters| 177) (|si:resource-in-use-p| 177) (|si:resource-object| 177) (|clear-resource| 177) (|map-resource| 177) (|deallocate-whole-resource| 177) (|using-resource| 176) (|deallocate-resource| 176) (|allocate-resource| 176) (|defresource| 174) (|sxhash| 171) (|hash-table-count| 170) (|clrhash| 170) (|maphash-return| 170) (|maphash| 167) (|swaphash| 167) (|remhash| 167) (|puthash| 167) (|gethash| 167) (|hash-table-p| 167) (|make-equal-hash-table| 165) (|make-hash-table| 165) (|get-properties| 163) (|remf| 163) (|getf| 163) (|remprop| 163) (|defprop| 163) (|putprop| 163) (|getl| 162) (|get| 162) (|with-stack-list*| 160) (|with-stack-list| 160) (|sassoc| 160) (|sassq| 157) (|rassoc-if-not| 157) (|rassoc-if| 157) (|cli:rassoc| 157) (|rass| 157) (|rassoc| 157) (|rassq| 157) (|memass| 157) (|assoc-if-not| 157) (|assoc-if| 157) (|ass| 157) (|cli:assoc| 156) (|assoc| 156) (|assq| 156) (|acons| 155) (|pairlis| 155) (|nset-exclusive-or| 155) (|nset-difference| 155) (|set-exclusive-or| 155) (|set-difference| 155) (|cli:nintersection| 154) (|cli:nunion| 154) (|cli:intersection| 154) (|cli:union| 154) (|nintersection| 154) (|nunion| 154) (|intersection| 154) (|union| 153) (|pushnew| 153) (|adjoin| 153) (|subsetp| 153) (|some| 152) (|every| 152) (|del-if-not| 152) (|del-if| 152) (|rem-if| 152) (|subset-not| 152) (|rem-if-not| 152) (|subset| 152) (|rem| 151) (|remove| 151) (|remq| 151) (|del| 151) (|delete| 151) (|delq| 150) (|tailp| 150) (|find-position-in-list-equal| 150) (|find-position-in-list| 150) (|mem| 150) (|member-if-not| 150) (|member-if| 147) (|cli:member| 147) (|member| 147) (|memq| 146) (|nsublis| 144) (|sublis| 143) (|nsubst-if-not| 143) (|nsubst-if| 143) (|subst-if-not| 143) (|subst-if| 143) (|nsubst| 142) (|cli:subst| 142) (|subst| 142) (|tree-equal| 141) (|copy-tree| 141) (|copytree| 141) (|nthcdr-safe| 141) (|nth-safe| 141) (|cddddr-safe| 141) (|cadddr-safe| 141) (|cdddr-safe| 141) (|caddr-safe| 141) (|cddr-safe| 141) (|cdar-safe| 141) (|cadr-safe| 141) (|caar-safe| 141) (|cdr-safe| 141) (|car-safe| 141) (|ldiff| 140) (|nleft| 140) (|firstn| 140) (|nbutlast| 140) (|butlast| 140) (|nreconc| 137) (|revappend| 137) (|nconc| 137) (|append| 136) (|copy-alist| 136) (|copyalist| 136) (|copylist*| 136) (|copy-list| 136) (|copylist| 136) (|circular-list| 135) (|make-list| 135) (|list*-in-area| 135) (|list-in-area| 135) (|list-match-p| 134) (|last| 134) (|nthcdr| 133) (|nth| 133) (|endp| 133) (|rest4| 132) (|rest3| 132) (|rest2| 132) (|rest1| 132) (|rest| 132) (|seventh| 132) (|sixth| 132) (|fifth| 132) (|fourth| 132) (|third| 132) (|second| 132) (|first| 132) (|list-length| 132) (|length| 132) (|list*| 132) (|list| 131) (|rplacd| 131) (|rplaca| 131) (|car-location| 131) (|pop| 130) (|push| 130) (|xcons-in-area| 130) (|ncons-in-area| 130) (|cons-in-area| 130) (|xcons| 130) (|ncons| 127) (|cons| 127) (|cddr| 127) (|cdddr| 127) (|cddddr| 127) (|cdddar| 127) (|cddar| 127) (|cddadr| 127) (|cddaar| 127) (|cdar| 127) (|cdadr| 127) (|cdaddr| 127) (|cdadar| 127) (|cdaar| 127) (|cdaadr| 127) (|cdaaar| 127) (|cadr| 127) (|caddr| 127) (|cadddr| 127) (|caddar| 127) (|cadar| 127) (|cadadr| 127) (|cadaar| 127) (|caar| 127) (|caadr| 127) (|caaddr| 127) (|caadar| 127) (|caaar| 127) (|caaadr| 127) (|caaaar| 127) (|c...r| 127) (|cdr| 127) (|car| 127) (|mapcan| 124) (|mapcon| 124) (|mapcar| 124) (|maplist| 124) (|mapc| 124) (|mapl| 124) (|map| 124) (|catch-all| 123) (|unwind-protect| 122) (|freturn| 122) (|*unwind-stack| 122) (|*throw| 121) (|*catch| 121) (|throw| 121) (|catch-continuation-if| 120) (|catch-continuation| 120) (|catch| 120) (|prog*| 120) (|prog| 117) (|go| 117) (|tagbody| 117) (|return-list| 116) (|return| 115) (|return-from| 115) (|block| 115) (|do-forever| 113) (|dolist| 112) (|dotimes| 112) (|do*-named| 112) (|do-named| 111) (|do*| 111) (|do| 106) (|null| 106) (|not| 106) (|equalp| 106) (|equal| 105) (|eql| 105) (|neq| 105) (|eq| 105) (|selectq-every| 104) (|dispatch| 104) (|select-match| 103) (|selector| 103) (|select| 103) (|ccase| 102) (|ecase| 102) (|caseq| 101) (|case| 101) (|selectq| 101) (|or| 101) (|and| 100) (|cond-every| 100) (|cond| 77) (|unless| 77) (|when| 77) (|if| 77) (|prog2| 77) (|prog1| 77) (|progn| 76) (|nth-value| 71) (|multiple-value-list| 71) (|multiple-value-prog1| 71) (|multiple-value-call| 71) (|multiple-value-bind| 70) (|multiple-value-setq| 70) (|multiple-value| 70) (|values-list| 70) (|values| 70) (|the| 66) (|unspecial| 66) (|special| 66) (|proclaim| 66) (|locally| 66) (|declare| 63) (|local-declare| 63) (|comment| 62) (|ignore| 62) (|true| 62) (|false| 62) (|function| 60) (|quote| 60) (|call| 60) (|lexpr-funcall| 57) (|apply| 57) (|lsubrcall| 57) (|subrcall| 57) (|funcall| 56) (|si:eval1| 56) (|eval| 56) (|labels| 55) (|flet| 55) (|locf| 46) (|decf| 46) (|incf| 45) (|swapf| 45) (|rotatef| 45) (|shiftf| 45) (|psetf| 45) (|setf| 44) (|symbol-value-globally| 43) (|symeval-globally| 43) (|boundp-globally| 43) (|makunbound-globally| 43) (|set-globally| 43) (|setq-globally| 43) (|defconstant| 42) (|defparameter| 42) (|defconst| 42) (|defvar| 41) (|progw| 41) (|progv| 40) (|let-globally-if| 40) (|let-globally| 40) (|let-if| 40) (|let*| 37) (|let| 37) (|variable-makunbound| 37) (|variable-boundp| 36) (|variable-location| 36) (|psetq| 36) (|setq| 36) (|subtypep| 26) (|coerce| 25) (|ctypecase| 25) (|etypecase| 25) (|typecase| 24) (|typep| 24) (|type-of| 24) (|deftype| 23) (|commonp| 16) (|locativep| 16) (|entityp| 15) (|closurep| 15) (|special-form-p| 15) (|subrp| 15) (|compiled-function-p| 15) (|functionp| 15) (|simple-string-p| 15) (|simple-bit-vector-p| 15) (|simple-vector-p| 15) (|bit-vector-p| 14) (|vectorp| 14) (|arrayp| 14) (|stringp| 14) (|characterp| 14) (|realp| 14) (|complexp| 14) (|rationalp| 14) (|small-floatp| 14) (|flonump| 14) (|bigp| 14) (|fixnump| 14) (|floatp| 14) (|fixp| 14) (|integerp| 14) (|numberp| 13) (|consp| 13) (|atom| 13) (|nlistp| 13) (|cli:listp| 13) (|listp| 13) (|nsymbolp| 13) (|symbolp| 13) (|common-lisp| 10))))