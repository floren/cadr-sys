23-May-84 14:07:10-EDT,3646;000000000000
Received: from MIT-MORRISON by MIT-OZ via Chaosnet; 23 May 84 14:06-EDT
Date: Wednesday, 23 May 1984, 14:06-EDT
From:  <kwh at MIT-OZ>
Subject: Namespace Lossage
To: BUG-LISPM at MIT-OZ

In Release 5.0 [Beta Test rev 7], FEP 18, on Lisp Machine Jim Morrison (3600):

This happend while booting on this machine... (no other noticeably extenuating circumstances)

>>Error: The NAMESPACE named DIAL was not found.
While in the function NETI:FIND-OBJECT-NAMED-IN-NAMESPACE  NETI:PARSE-NAME  (:INTERNAL (:PROPERTY :NAME NETI:PRIMITIVE-TYPE) 0)

NETI:FIND-OBJECT-NAMED-IN-NAMESPACE:  (P.C. = 141)
   Arg 0 (CLASS): :NAMESPACE
   Arg 1 (NAME): "DIAL"
   Arg 2 (NAMESPACE): #<NAMESPACE ARPANET 76063020>
   --Defaulted args:--
   Arg 3 (ERROR-P): T
   Local 4 (INTERNED-NAME): :DIAL
   Local 5 (QUALIFIED-P): NIL
   Local 6 (TRIED-NETWORK): NIL
   Local 7 (VALID-P): T
   Local 8 (NAME-ENTRY): (:DIAL (10 3176) NIL)
   Local 9 (OBJECT): NIL
   Local 10 (TIMESTAMP): 174

NETI:PARSE-NAME:  (P.C. = 104)
   Arg 0 (NAMESTRING): "DIAL|SCRC-RIVERSIDE"
   Arg 1 (GLOBAL-P): NIL
   Arg 2 (NAMESPACE): #<NAMESPACE ARPANET 76063020>
   --Defaulted args:--
   Arg 3 (SOFT): NIL

(:INTERNAL (:PROPERTY :NAME NETI:PRIMITIVE-TYPE) 0):  (P.C. = 6)
   Arg 0 (**DEFSELECT-OP**): :READ
   Arg 1 (NAMESPACE): #<NAMESPACE ARPANET 76063020>
   Arg 2 (IGNORE): NIL
   Arg 3 (TOKENS): ("DIAL|SCRC-RIVERSIDE")

(:PROPERTY :NAME NETI:PRIMITIVE-TYPE):  (P.C. = 12)
   Arg 0 (OPERATION): :READ
   Rest arg (SELECT-METHOD-ARGS): (#<NAMESPACE ARPANET 76063020> NIL ("DIAL|SCRC-RIVERSIDE"))

NETI:CONVERT-TOKENS:  (P.C. = 15)
   Arg 0 (NAMESPACE): #<NAMESPACE ARPANET 76063020>
   Arg 1 (TEMPLATE): (:NAME)
   Arg 2 (TOKENS): ("DIAL|SCRC-RIVERSIDE")

(:INTERNAL (:PROPERTY :ELEMENT NETI:PRIMITIVE-TYPE) 0):  (P.C. = 5)
   Arg 0 (**DEFSELECT-OP**): :READ
   Arg 1 (NAMESPACE): #<NAMESPACE ARPANET 76063020>
   Arg 2 (TEMPLATE): (:NAME)
   Arg 3 (TOKENS): ("DIAL|SCRC-RIVERSIDE")

(:PROPERTY :ELEMENT NETI:PRIMITIVE-TYPE):  (P.C. = 12)
   Arg 0 (OPERATION): :READ
   Rest arg (SELECT-METHOD-ARGS): (#<NAMESPACE ARPANET 76063020> (:NAME) ("DIAL|SCRC-RIVERSIDE"))

NETI:CONVERT-TOKENS:  (P.C. = 15)
   Arg 0 (NAMESPACE): #<NAMESPACE ARPANET 76063020>
   Arg 1 (TEMPLATE): (:ELEMENT :NAME)
   Arg 2 (TOKENS): ("DIAL|SCRC-RIVERSIDE")

Rest of stack:
NETI:RECORD-INTO-PROPERTY-LIST-1:  (P.C. = 40)
NETI:RECORD-INTO-PROPERTY-LIST:  (P.C. = 75)
NETI:QUERY-NAMESPACE-SERVER:  (P.C. = 357)
(:METHOD NET:OBJECT :CHECK-VALIDITY):  (P.C. = 201)
(:METHOD NET:OBJECT :CHECK-VALIDITY):  (P.C. = 30)
(:METHOD NET:OBJECT :BEFORE :GET):  (P.C. = 5)
(:METHOD NET:OBJECT :COMBINED :GET):  (P.C. = 7)
(:METHOD NET:HOST :NETWORK-SERVICES):  (P.C. = 5)
NET:FIND-PATHS-TO-SERVICE-ON-HOST:  (P.C. = 41)
NETI:FIND-PATH-TO-SERVICE-ON-HOST:  (P.C. = 7)
NETI:GET-LATEST-TIMESTAMP-FROM-NETWORK:  (P.C. = 34)
NETI:GET-INCREMENTAL-UPDATE-FROM-NETWORK:  (P.C. = 434)
(:METHOD NETI:NAMESPACE :GET-LATEST-TIMESTAMP):  (P.C. = 21)
(:METHOD NETI:NAMESPACE :VALIDATION-TIMESTAMP):  (P.C. = 27)
(:METHOD NET:OBJECT :CHECK-VALIDITY):  (P.C. = 70)
(:METHOD NET:OBJECT :CHECK-VALIDITY):  (P.C. = 30)
(:METHOD NET:OBJECT :BEFORE :GET):  (P.C. = 5)
(:METHOD NET:OBJECT :COMBINED :GET):  (P.C. = 7)
(:METHOD NETI:NAMESPACE :SERVER-HOSTS):  (P.C. = 5)
NETI:GET-LATEST-TIMESTAMP-FROM-NETWORK:  (P.C. = 5)
NETI:GET-INCREMENTAL-UPDATE-FROM-NETWORK:  (P.C. = 434)
(:METHOD NETI:NAMESPACE :GET-LATEST-TIMESTAMP):  (P.C. = 21)
NETI:INITIALIZE-NAMESPACES-AND-NETWORK:  (P.C. = 115)
LISP-REINITIALIZE:  (P.C. = 435)
SI:LISP-TOP-LEVEL:  (P.C. = 3)
23-May-84 15:05:47-EDT,865;000000000000
Received: from SCRC-YUKON by MIT-OZ via Chaosnet; 23 May 84 15:02-EDT
Received: from SCRC-MERRIMACK by SCRC-YUKON via CHAOS with CHAOS-MAIL id 42718; Wed 23-May-84 14:59:48-EDT
Date: Wednesday, 23 May 1984, 14:59-EDT
From: Mike McMahon <MMcM at SCRC-TENEX>
Subject: Finding out about lazy flavor compilation, etc.
To: Kent M Pitman <kmp at MIT-MC>
cc: BUG-LISPM at MIT-OZ, KBE-I at MIT-OZ
In-Reply-To: The message of 23 May 84 07:25-EDT from Kent M Pitman <kmp at MIT-MC>
Message-ID: <840523145934.7.MMCM@MERRIMACK.SCRC.Symbolics>

    Date: Wednesday, 23 May 1984, 07:25-EDT
    From: Kent M Pitman <kmp at MIT-MC>
				      Eg, if there were a variable
    TRACE-FLAVOR-COMPILATION which defaulted to NIL (no trace info)
    which I could set to a window upon which I'd like to see trace 
    info, that would be best.
SI:*FLAVOR-COMPILE-TRACE*.
23-May-84 15:27:55-EDT,1362;000000000000
Received: from SCRC-YUKON by MIT-OZ via Chaosnet; 23 May 84 15:26-EDT
Received: from SCRC-MERRIMACK by SCRC-YUKON via CHAOS with CHAOS-MAIL id 42735; Wed 23-May-84 15:25:58-EDT
Date: Wednesday, 23 May 1984, 15:25-EDT
From: Mike McMahon <MMcM at SCRC-TENEX>
Subject: Electric Font Lock Mode
To: Charles Rich <RICH at MIT-OZ>
cc: BUG-lispm at MIT-OZ
In-Reply-To: The message of 22 May 84 17:14-EDT from Charles Rich <RICH at MIT-OZ>
Message-ID: <840523152530.8.MMCM@MERRIMACK.SCRC.Symbolics>

    Date: Tuesday, 22 May 1984, 17:14-EDT
    From: Charles Rich <RICH at OZ>

    In Release 4.5, Reasoning Utility Package 14.0,
    Experimental Hybrid Reasoning System 19.0, FEP 18, site configuration 62, on PI Project:

    Electric Font lock mode is cute, but it has a serious aesthetic bug:
    the first semicolon is in the code font, and then the rest of
    characters (in comment) are the comment font -- which sounds
    logical enough.  However, it is common practice to use double and
    triple semi's for various kinds of comments, which gives the very
    odd appearance of one semi in a fixed font following by the second
    in another (e.g. italic) font.  This should be special-cased either
    to put all the semi's in comment font, or have all the semi's in
    code font.

In some future release, they're all in italic.
23-May-84 16:58:31-EDT,2547;000000000000
Received: from SCRC-YUKON by MIT-OZ via Chaosnet; 23 May 84 16:56-EDT
Received: from SCRC-EUPHRATES by SCRC-YUKON via CHAOS with CHAOS-MAIL id 42776; Wed 23-May-84 16:55:54-EDT
Date: Wednesday, 23 May 1984, 16:55-EDT
From: David A. Moon <Moon at SCRC-TENEX>
Subject: Finding out about lazy flavor compilation, etc.
To: Kent M Pitman <kmp at MIT-MC>
Cc: BUG-LISPM at MIT-OZ, KBE-I at MIT-OZ
In-reply-to: The message of 23 May 84 07:25-EDT from Kent M Pitman <kmp at MIT-MC>

    Date: Wednesday, 23 May 1984, 07:25-EDT
    From: Kent M Pitman <kmp at MIT-MC>
    ....A utility which allowed me to map over all flavors and ask 
    if they'd been compiled already would almost do, but is not
    as close to the interface I'd like. If I had this, though,
    I could do 
     (DEFUN UNCOMPILED-FLAVORS (PKG)
       (SETQ PKG (PKG-FIND-PACKAGE PKG))
       (LET ((RESULT '()))
	 (MAP-FLAVOR-NAMES
	   #'(LAMBDA (F)
	       (IF (AND (NOT (FLAVOR-COMPILED-P F))
			(EQ (SYMBOL-PACKAGE F) KBE-PACKAGE))
		   (PUSH F RESULT))))
	 RESULT))
     (UNCOMPILED-FLAVORS "KBE")

What about flavors that aren't supposed to be compiled, because they are mixins?

What about symbols the KBE package inherits or imports from another package?
The following works.  No guarantees that the undocumented functions it calls
won't change in future releases.

     (DEFUN UNCOMPILED-FLAVORS (PKG)
       (SETQ PKG (PKG-FIND-PACKAGE PKG))
       (LOOP FOR F IN *ALL-FLAVOR-NAMES*
	     AS FL = (GET F 'SI:FLAVOR)
	     WHEN (AND (EQ (SI:FLAVOR-PACKAGE FL) PKG)
		       (NOT (GET (LOCF (SI:FLAVOR-PLIST FL))
				 'COMPILE-FLAVOR-METHODS)))
	       COLLECT F))

Maybe your criterion should really be what system the file is part of?
The following works, except for flavors only defined in patch files.
It's pretty slow, though.  No guarantees that the undocumented functions it calls
won't change in future releases.

     (DEFUN UNCOMPILED-FLAVORS (SYSTEM)
       (SETQ SYSTEM (SI:FIND-SYSTEM-NAMED SYSTEM))
       (LOOP FOR F IN *ALL-FLAVOR-NAMES*
	     AS PATH = (SI:GET-INSTALLED-SOURCE-FILE-NAME F 'DEFFLAVOR)
	     WHEN (AND PATH
		       (EQ (SI:PATHNAME-PATCHABLE-SYSTEM PATH) SYSTEM)
		       (NOT (GET (LOCF (SI:FLAVOR-PLIST (GET F 'SI:FLAVOR)))
				 'COMPILE-FLAVOR-METHODS)))
	       COLLECT F))

Anyway, it's pretty easy for you to define a function to do whatever search
through flavors you want, provided you're willing to do a DESCRIBE-DEFSTRUCT
of a flavor and depend on the values you find there.
23-May-84 17:00:22-EDT,2625;000000000000
Received: from SCRC-YUKON by MIT-OZ via Chaosnet; 23 May 84 16:56-EDT
Received: from SCRC-EUPHRATES by SCRC-YUKON via CHAOS with CHAOS-MAIL id 42778; Wed 23-May-84 16:56:26-EDT
Date: Wednesday, 23 May 1984, 16:56-EDT
From: David A. Moon <Moon at SCRC-TENEX>
Subject: Finding out about lazy flavor compilation, etc.
To: Kent M Pitman <kmp at MIT-MC>
Cc: BUG-LISPM at MIT-OZ, KBE-I at MIT-OZ
In-reply-to: The message of 23 May 84 07:25-EDT from Kent M Pitman <kmp at MIT-MC>
Supersedes: The message of 23 May 84 16:55-EDT from David A. Moon <Moon at SCRC-TENEX>

    Date: Wednesday, 23 May 1984, 07:25-EDT
    From: Kent M Pitman <kmp at MIT-MC>
    ....A utility which allowed me to map over all flavors and ask 
    if they'd been compiled already would almost do, but is not
    as close to the interface I'd like. If I had this, though,
    I could do 
     (DEFUN UNCOMPILED-FLAVORS (PKG)
       (SETQ PKG (PKG-FIND-PACKAGE PKG))
       (LET ((RESULT '()))
	 (MAP-FLAVOR-NAMES
	   #'(LAMBDA (F)
	       (IF (AND (NOT (FLAVOR-COMPILED-P F))
			(EQ (SYMBOL-PACKAGE F) KBE-PACKAGE))
		   (PUSH F RESULT))))
	 RESULT))
     (UNCOMPILED-FLAVORS "KBE")

What about flavors that aren't supposed to be compiled, because they are mixins?

What about symbols the KBE package inherits or imports from another package?
The following works.  No guarantees that the undocumented functions it calls
won't change in future releases.

     (DEFUN UNCOMPILED-FLAVORS (PKG)
       (SETQ PKG (PKG-FIND-PACKAGE PKG))
       (LOOP FOR F IN *ALL-FLAVOR-NAMES*
	     AS FL = (GET F 'SI:FLAVOR)
	     WHEN (AND (EQ (SI:FLAVOR-PACKAGE FL) PKG)
		       (NOT (GET (LOCF (SI:FLAVOR-PLIST FL))
				 'COMPILE-FLAVOR-METHODS)))
	       COLLECT F))

Maybe your criterion should really be what system the file is part of?
The following works, except for flavors only defined in patch files.
It's pretty slow, though.  No guarantees that the undocumented functions it calls
won't change in future releases.

     (DEFUN UNCOMPILED-FLAVORS (SYSTEM)
       (SETQ SYSTEM (SI:FIND-SYSTEM-NAMED SYSTEM))
       (LOOP FOR F IN *ALL-FLAVOR-NAMES*
	     AS PATH = (SI:GET-SOURCE-FILE-NAME F 'DEFFLAVOR)
	     WHEN (AND PATH
		       (EQ (SI:PATHNAME-PATCHABLE-SYSTEM PATH) SYSTEM)
		       (NOT (GET (LOCF (SI:FLAVOR-PLIST (GET F 'SI:FLAVOR)))
				 'COMPILE-FLAVOR-METHODS)))
	       COLLECT F))

Anyway, it's pretty easy for you to define a function to do whatever search
through flavors you want, provided you're willing to do a DESCRIBE-DEFSTRUCT
of a flavor and depend on the values you find there.
23-May-84 19:57:12-EDT,3142;000000000000
Received: from MIT-LISPM-18 by MIT-OZ via Chaosnet; 23 May 84 19:56-EDT
Date: Wednesday, 23 May 1984, 19:57-EDT
From: Edward H Lay <EHL at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In System 98.48, CADR 3.6, ZMail 53.17, MIT-Specific 22.0, microcode 309,
ZM MIT, on Lisp Machine Eighteen:


Insert your description of the circumstances here:

This worked yesterday in 98.37 on CADR-8
I don't absolutely need this now that symbols in the keyword package
eveluate to themselves but this might be an indication of some deeper
problem ???

(DEFMACRO TELL (INSTANCE MESSAGE-NAME . ARGS)    
  (ONCE-ONLY (INSTANCE)
    `(AND (NOT-NULL ,INSTANCE)
	  (SEND ,INSTANCE ',MESSAGE-NAME . ,ARGS))))

(defun yow (foo)(tell foo :bar))

now when I say...

(COMPILE 'YOW)

I get the following error.

>>TRAP 5731 (ARGTYP CONS M-T T CAR CAR)
The argument to CAR, ARGS, was of the wrong type.
The function expected a cons.
Backtrace from the debugger:

COMPILER:CHECK-NUMBER-OF-ARGS (P.C. = 352)

 Arg 0 (FORM): (TELL FOO :BAR)
 Arg 1 (FUNCTION): TELL
Local 0 (TEM): (MACRO . #<DTP-FEF-POINTER TELL 4161661>)
Local 1 (ARGLIST): (INSTANCE MESSAGE-NAME . ARGS)
Local 2 (NARGS): NIL
Local 3 (MIN): NIL
Local 4 (MAX): 2
Local 5 (ARGS-INFO): NIL
Local 6 (LOCALP): NIL
Local 7 (FN): (MACRO . #<DTP-FEF-POINTER TELL 4161661>)
Local 8: #<DTP-CLOSURE 33353765>
Local 9: (5 . #<DTP-LOCATIVE 24474721>)
Local 10: ARGS
Local 11 (X): MESSAGE-NAME
Local 12 (KEYARGS): NIL
Local 13 (KEYFORM): NIL
Local 14 (ALLOW-OTHER-KEYS): NIL
Local 15 (KEY): NIL


COMPILER:OPTIMIZE (P.C. = 175)

 Arg 0 (FORM): (TELL FOO :BAR)
 Arg 1 (CHECK-STYLE): T
Local 0 (MACRO-CONS-AREA): 40
Local 1 (OPTIMIZATIONS-BEGUN-FLAG): NIL
Local 2 (TM): NIL
Local 3 (FN): TELL
Local 4: NIL
Local 5: NIL
Local 6: NIL
Local 7 (X): NIL
Local 8 (OPT): NIL
Local 9 (OLD-FORM): NIL
Local 10 (TEM1): NIL


COMPILER:P1 (P.C. = 155)

 Arg 0 (FORM): (TELL FOO :BAR)
   --Defaulted args:--
 Arg 1 (DONT-OPTIMIZE): NIL
Local 0 (TM): NIL
Local 1 (FCTN): NIL


COMPILER:P1PROGN-1 (P.C. = 42)

 Arg 0 (FORMS): ((TELL FOO :BAR))
Local 0 (FORMS-LEFT): ((TELL FOO :BAR))


COMPILER:P1BLOCK (P.C. = 111)

 Arg 0 (FORM): (BLOCK YOW (TELL FOO :BAR))
   --Defaulted args:--
 Arg 1 (BIND-RETPROGDESC): NIL
Local 0 (PROGNAME): YOW
Local 1 (BODY): ((TELL FOO :BAR))
Local 2 (RETTAG): #:G0633
Local 3 (BLOCK): NIL


Remainder of stack:

COMPILER:P1 (P.C. = 346)
COMPILER:QCOMPILE0 (P.C. = 1147)
COMPILER:QC-TRANSLATE-FUNCTION (P.C. = 566)
COMPILER:COMPILE-1 (P.C. = 103)
(:INTERNAL COMPILE 0) (P.C. = 240)
COMPILE (P.C. = 170)
SI:EVAL1 (P.C. = 1324)
SI:EVAL-ABORT-TRIVIAL-ERRORS (P.C. = 61)
BREAK (P.C. = 611)
ZWEI:COM-BREAK (P.C. = 44)
ZWEI:COMMAND-EXECUTE (P.C. = 115)
ZWEI:PROCESS-COMMAND-CHAR (P.C. = 65)
(:METHOD ZWEI:WINDOW :EDIT) (P.C. = 464)
(:INTERNAL (:METHOD ZWEI:ZMACS-WINDOW :COMBINED :EDIT) 0) (P.C. = 74)
FUNCALL (P.C. = 25)
(:METHOD ZWEI:DISPLAYER :AROUND :EDIT) (P.C. = 31)
(:METHOD ZWEI:ZMACS-WINDOW :COMBINED :EDIT) (P.C. = 47)
ZWEI:ZMACS-WINDOW-TOP-LEVEL (P.C. = 46)
SI:PROCESS-TOP-LEVEL (P.C. = 152)
23-May-84 21:06:56-EDT,1327;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 23 May 84 21:06-EDT
Received: from SCRC-EUPHRATES by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 55515; Wed 23-May-84 20:14:41-EDT
Date: Wednesday, 23 May 1984, 20:13-EDT
From: David A. Moon <Moon at SCRC-TENEX>
Subject: Mouse cursor esthetics
To: Scott W. Layson <X.GYRO at MIT-OZ>
Cc: bug-lispm at MIT-OZ
In-reply-to: The message of 18 May 84 11:44-EDT from Scott W. Layson <X.GYRO at MIT-OZ>

    Date: Fri 18 May 84 11:44-EDT
    From: Scott W. Layson <X.GYRO@MIT-OZ>

    For that matter, get a Macintosh and look at the mouse cursor.  The normal
    mouse cursor is a black arrow that's ORed (or ANDed or whatever, but anyhow
    not XORed) into the screen; but when you move it onto a black region you
    notice it has a one-pixel-thick white outline around it.  Now this is SNAZZY.

It only took me a few minutes to implement this, but I don't like the way it looks.
Since my Macintosh hasn't come yet, maybe you could look at it and tell me how I
failed to make it do the same as what the Macintosh does (assuming the problem isn't
that we have different ideas of what is snazzy).  The code is in
Q:>Moon>hacks>outlined-character-blinker.lisp; since there's no compiled file you
probably want to read it into the editor and m-X Compile Buffer.
23-May-84 21:18:59-EDT,1269;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 23 May 84 21:18-EDT
Received: from SCRC-MOBILE by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 37985; Wed 23-May-84 20:34:25-EDT
Date: Wednesday, 23 May 1984, 20:33-EDT
From: David E. Goldfarb <DEG at SCRC-TENEX>
Subject: make-system bad error
To: cfry at MIT-OZ, BUG-LISPM at MIT-OZ
Cc: DEG at SCRC-TENEX
In-reply-to: The message of 22 May 84 20:26-EDT from Christopher Fry <cfry at MIT-OZ>

    Date: Tuesday, 22 May 1984, 20:26-EDT
    From: Christopher Fry <cfry at MIT-OZ>
    In Release 5.0 [Beta Test rev 7], on Lisp Machine Robot-4 (3600):

    If (make-system 'foo) can't find a particular binary file, but can find the source code, it should
	    pop up a menu with the choices:
	    Load source code
	    load source and compile it
	    load other file

    in any event make-system should not prevent you from loading s source file as it does now.

No.  It the responsibility of whoever is maintaining the system (i.e. whoever
wrote the defsystem) to set up the defsystem to do the right one of these
things.  It is never right for a random user to have to make this decision.
(Imagine, for example, what would happen if she made the wrong choice and then
did a disk-save).
23-May-84 23:53:47-EDT,568;000000000000
Mail-From: HENRY created at 23-May-84 23:53:22
Date: Wed, 23 May 1984  23:53 EDT
Message-ID: <HENRY.12017772016.BABYL@MIT-OZ>
From: HENRY@MIT-OZ
To:   "David E. Goldfarb" <DEG@SCRC-TENEX>
Cc:   BUG-LISPM@MIT-OZ, cfry@MIT-OZ
Subject: make-system bad error
In-reply-to: Msg of 23 May 1984 20:33-EDT from David E. Goldfarb <DEG at SCRC-TENEX>


I agree with Fry. Make-System should at least allow you to 
load the source code. In general, Make-system should allow
loading systems in interpreted form, and not be insistent on 
compiled files as it is now.

24-May-84 13:35:08-EDT,717;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 24 May 84 13:33-EDT
Date: 24 May 1984  13:35 EDT (Thu)
Message-ID: <SR.EHPYC.12017921600.BABYL@MIT-SPEECH>
From: Scott Cyphers <SR.EHPYC@MIT-SPEECH>
To:   "David A. Moon" <Moon@SCRC-TENEX>
Cc:   bug-lispm@MIT-OZ, "Scott W. Layson" <X.GYRO@MIT-OZ>
Subject: Mouse cursor esthetics
In-reply-to: Msg of 23 May 1984 20:13-EDT from David A. Moon <Moon at SCRC-TENEX>

I tried it (on a 3600, not a Macintosh), and couldn;t see any reason
for liking it more than the current one, even if it wasn't a bit
slower.  The current way is simple and fast, so why not keep it that
way.  If someone wants a new one, it isn't hard for them to redefine
it for themselves.
24-May-84 15:50:14-EDT,499;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 24 May 84 15:47-EDT
Date: Thursday, 24 May 1984, 11:39-EDT
From: Henry Lieberman <Henry at MIT-OZ>
Subject: Creating Inspectors
To: BUG-LISPM at MIT-OZ

In Release 5.0 [Beta Test rev 7], FEP 18, on Lisp Machine Apiary-7 (3600):

If I mouse "Create" in the system menu, choose "Any", then type 
TV:INSPECT-FRAME, I get an Inspector, which I can't type to, 
unfortunately. If I "Reshape" the Inspector gotten by System-I, 
though, it works.

24-May-84 17:38:46-EDT,1145;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 24 May 84 17:36-EDT
Received: from SCRC-EUPHRATES by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 55780; Thu 24-May-84 17:12:33-EDT
Date: Thursday, 24 May 1984, 17:12-EDT
From: David A. Moon <Moon at SCRC-TENEX>
Subject: Creating Inspectors
To: Henry Lieberman <Henry at MIT-OZ>
Cc: BUG-LISPM at MIT-OZ
In-reply-to: The message of 24 May 84 11:39-EDT from Henry Lieberman <Henry at MIT-OZ>

    Date: Thursday, 24 May 1984, 11:39-EDT
    From: Henry Lieberman <Henry at MIT-OZ>

    In Release 5.0 [Beta Test rev 7], FEP 18, on Lisp Machine Apiary-7 (3600):

    If I mouse "Create" in the system menu, choose "Any", then type 
    TV:INSPECT-FRAME, I get an Inspector, which I can't type to, 
    unfortunately. 

Yes, that isn't how you create inspectors.  In general, when using "Any"
you have to know that the flavor name you tell it to use is one that will
work.

		   If I "Reshape" the Inspector gotten by System-I, 
    though, it works.

Select c-I works.

It would be good to have Inspect in the Create submenu of the system menu.
In the source and tested.
24-May-84 19:08:01-EDT,2137;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 24 May 84 19:06-EDT
Date: Thursday, 24 May 1984, 14:58-EDT
From: Henry Lieberman <Henry at MIT-OZ>
Subject: Evalhook bug
To: BUG-LISPM at MIT-OZ

In Release 5.0 [Beta Test rev 7], FEP 18, on Lisp Machine Apiary-7 (3600):

When using EVALHOOK to watch evaluations, sometimes a spurious evaluation of the 
symbol :JUST-CREATED appears out of nowhere. Sample follows ...

(DEFUN EVALHOOK-BUG ()
       (*CATCH 'EVALHOOK-BUG
               (EVALFOO '(+ (* 2 3) (A-FUNCTION-THAT-ISNT-DEFINED)))))

(DEFUN EVALFOO (FORM)
       (FORMAT T "~%About to Eval ~S" FORM)
       (LET ((VALUE 
              (CONDITION-CASE (ERROR-OBJECT)
                              (EVALHOOK FORM 'EVALFOO 'APPLYFOO)
                              (ERROR ERROR-OBJECT))))
	    (COND ((TYPEP VALUE 'ERROR)
                   (*THROW 'EVALHOOK-BUG (SEND VALUE ':REPORT-STRING)))
                  ((FORMAT T "~%~S returned ~S" FORM VALUE)))
	    VALUE))

(DEFUN APPLYFOO (FUNCTION ARGUMENTS)
       (FORMAT T "~%About to apply ~S to ~S" FUNCTION ARGUMENTS)
       (LET ((VALUE (CONDITION-CASE (ERROR-OBJECT)
                                    (APPLYHOOK FUNCTION
                                               ARGUMENTS
                                               'EVALFOO
                                               'APPLYFOO)
                                    (ERROR ERROR-OBJECT))))
	    (COND ((TYPEP VALUE 'ERROR)
                   (*THROW 'EVALHOOK-BUG (SEND VALUE ':REPORT-STRING)))
                  ((FORMAT T "~%Apply of ~S returned ~S" FUNCTION VALUE)))
	    VALUE))

(EVALHOOK-BUG)
About to Eval (+ (* 2 3) (A-FUNCTION-THAT-ISNT-DEFINED))
About to Eval (* 2 3)
About to Eval 2
2 returned 2
About to Eval 3
3 returned 3
About to apply #<DTP-COMPILED-FUNCTION TIMES 1252672> to (2 3)
Apply of #<DTP-COMPILED-FUNCTION TIMES 1252672> returned 6
(* 2 3) returned 6
About to Eval (A-FUNCTION-THAT-ISNT-DEFINED)
About to Eval (QUOTE :JUST-CREATED)
(QUOTE :JUST-CREATED) returned :JUST-CREATED
"The function A-FUNCTION-THAT-ISNT-DEFINED is undefined."

24-May-84 20:50:27-EDT,3327;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 24 May 84 20:49-EDT
Received: from SCRC-EUPHRATES by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 55843; Thu 24-May-84 20:49:59-EDT
Date: Thursday, 24 May 1984, 20:49-EDT
From: David A. Moon <Moon at SCRC-TENEX>
Subject: Evalhook bug
To: Henry Lieberman <Henry at MIT-OZ>, Lisp-Designers at SCRC-TENEX
Cc: BUG-LISPM at MIT-OZ
In-reply-to: The message of 24 May 84 14:58-EDT from Henry Lieberman <Henry at MIT-OZ>

    Date: Thursday, 24 May 1984, 14:58-EDT
    From: Henry Lieberman <Henry at MIT-OZ>

    In Release 5.0 [Beta Test rev 7], FEP 18, on Lisp Machine Apiary-7 (3600):

    When using EVALHOOK to watch evaluations, sometimes a spurious evaluation of the 
    symbol :JUST-CREATED appears out of nowhere. Sample follows ...

Actually a spurious evaluation of the form (QUOTE :JUST-CREATED) occurs;
read your trace output more carefully.  It's still spurious though.  The
reason for it is that when the undefined function error occurs, like all
errors it is reported by signalling a condition, which requires calling
MAKE-INSTANCE to make an error object.  MAKE-INSTANCE calls EVAL to
evaluate default value forms for unspecified instance variables, and all
condition objects, including error objects, have an instance variable
that defaults to :JUST-CREATED.

A good way for you to discover this would have been to temporarily modify
EVALFOO to contain (when (equal form '':just-created) (dbg)).

I think you are probably correct in saying that EVALHOOK should not catch this
evaluation.  I'm not 100% sure, maybe other people have an opinion.  Also there
are plenty of other "internal" calls to EVAL in the system--for an example,
try (EVALFOO '(TYI)) then hit c-Suspend and watch lots of (un)interesting
stuff come pouring out.

For reference, Henry's code:

    (DEFUN EVALHOOK-BUG ()
	   (*CATCH 'EVALHOOK-BUG
		   (EVALFOO '(+ (* 2 3) (A-FUNCTION-THAT-ISNT-DEFINED)))))

    (DEFUN EVALFOO (FORM)
	   (FORMAT T "~%About to Eval ~S" FORM)
	   (LET ((VALUE 
		  (CONDITION-CASE (ERROR-OBJECT)
				  (EVALHOOK FORM 'EVALFOO 'APPLYFOO)
				  (ERROR ERROR-OBJECT))))
		(COND ((TYPEP VALUE 'ERROR)
		       (*THROW 'EVALHOOK-BUG (SEND VALUE ':REPORT-STRING)))
		      ((FORMAT T "~%~S returned ~S" FORM VALUE)))
		VALUE))

    (DEFUN APPLYFOO (FUNCTION ARGUMENTS)
	   (FORMAT T "~%About to apply ~S to ~S" FUNCTION ARGUMENTS)
	   (LET ((VALUE (CONDITION-CASE (ERROR-OBJECT)
					(APPLYHOOK FUNCTION
						   ARGUMENTS
						   'EVALFOO
						   'APPLYFOO)
					(ERROR ERROR-OBJECT))))
		(COND ((TYPEP VALUE 'ERROR)
		       (*THROW 'EVALHOOK-BUG (SEND VALUE ':REPORT-STRING)))
		      ((FORMAT T "~%Apply of ~S returned ~S" FUNCTION VALUE)))
		VALUE))

    (EVALHOOK-BUG)
    About to Eval (+ (* 2 3) (A-FUNCTION-THAT-ISNT-DEFINED))
    About to Eval (* 2 3)
    About to Eval 2
    2 returned 2
    About to Eval 3
    3 returned 3
    About to apply #<DTP-COMPILED-FUNCTION TIMES 1252672> to (2 3)
    Apply of #<DTP-COMPILED-FUNCTION TIMES 1252672> returned 6
    (* 2 3) returned 6
    About to Eval (A-FUNCTION-THAT-ISNT-DEFINED)
    About to Eval (QUOTE :JUST-CREATED)
    (QUOTE :JUST-CREATED) returned :JUST-CREATED
    "The function A-FUNCTION-THAT-ISNT-DEFINED is undefined."

24-May-84 21:32:25-EDT,567;000000000000
Received: from MIT-LISPM-1 by MIT-OZ via Chaosnet; 24 May 84 21:31-EDT
Date: Thursday, 24 May 1984, 21:32-EDT
From: Edward H Lay <EHL at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In Don't-dump-a-band! Inconsistent (unreleased patches loaded) System 98.50,
CADR 3.6, ZMail 53.17, MIT-Specific 22.0, microcode 309,
on Lisp Machine One:

In the function DEFFLAVOR1 in both the source AND patch 98.44, the DEFFLAVOR
option :DEFAULT-HANDLER seems to be spelled :DEFAULT-nHANDLER.  Is this a
typo that got compiled ? or is the option REALLY supposed to be called this ?
25-May-84 00:07:12-EDT,1684;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 25 May 84 00:06-EDT
Received: from SCRC-YANGTZE by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 39159; Fri 25-May-84 00:06:41-EDT
Date: Friday, 25 May 1984, 00:06-EDT
From: Carl Hoffman <CWH at SCRC-TENEX>
Subject: Mouse cursor esthetics
To: Moon at SCRC-TENEX, X.GYRO at MIT-OZ
Cc: bug-lispm at MIT-OZ
In-reply-to: The message of 23 May 84 20:13-EDT from David A. Moon <Moon at SCRC-TENEX>

    Date: Wednesday, 23 May 1984, 20:13-EDT
    From: David A. Moon <Moon at SCRC-TENEX>
    It only took me a few minutes to implement this, but I don't like the way it looks.
    Since my Macintosh hasn't come yet, maybe you could look at it and tell me how I
    failed to make it do the same as what the Macintosh does (assuming the problem isn't
    that we have different ideas of what is snazzy).

I think it has potential.  In particular, when using it with the editor, it
gives one the impression that the arrow is on top of the other characters,
rather than mixed in with them.

It looks better on the Macintosh than on the 3600 because the former uses grey
backgrounds very heavily, so the white outline accents the arrow.  Our
backgrounds are usually white.

Would it help to reduce the flashing if you synchronized with the vertical
retrace?  If you can fix this, I'd like to see it installed as an option.

One very noticable difference is that this blinker doesn't have the time lag
of the usual blinker.  If you move a mouse on the 3600 quickly in circles, the
blinker keeps moving for a brief time after you stop moving the mouse.  This
blinker doesn't do that, which is an improvement.
25-May-84 00:31:46-EDT,1142;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 25 May 84 00:30-EDT
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 39164; Fri 25-May-84 00:30:40-EDT
Date: Friday, 25 May 1984, 00:30-EDT
From: David A. Moon <Moon at SCRC-TENEX>
Subject: Mouse cursor esthetics
To: Carl Hoffman <CWH at SCRC-TENEX>
Cc: X.GYRO at MIT-OZ, bug-lispm at MIT-OZ
In-reply-to: The message of 25 May 84 00:06-EDT from Carl Hoffman <CWH at SCRC-TENEX>

    Date: Friday, 25 May 1984, 00:06-EDT
    From: Carl Hoffman <CWH at SCRC-TENEX>
    ....One very noticable difference is that this blinker doesn't have the time lag
    of the usual blinker.  If you move a mouse on the 3600 quickly in circles, the
    blinker keeps moving for a brief time after you stop moving the mouse.  This
    blinker doesn't do that, which is an improvement.

That delay is in the FEP (a middleman in the transmission of mouse
motion from the console to Lisp memory).  I don't see how my blinker
could possibly affect that delay; the only difference from the standard
blinker that I can think of is that it takes longer to draw.
25-May-84 00:51:53-EDT,493;000000000000
Received: from SCRC-TENEX by MIT-OZ via Chaosnet; 25 May 84 00:51-EDT
Date: 25 May 1984 0049-EDT
From: Carl W. Hoffman <CWH@SCRC-TENEX>
Subject: Re: Mouse cursor esthetics
To: Moon@SCRC-TENEX
cc: X.GYRO@MIT-OZ, bug-lispm@MIT-OZ
In-Reply-To: The message of Friday, 25 May 1984, 00:30-EDT from David A. Moon <Moon at SCRC-TENEX>

Yep, I was being faked out.  The delay has disappeared from the standard
blinker too.  I switched from V18 to V22 proms today; I guess that's it.
-------
25-May-84 01:05:00-EDT,3651;000000000000
Received: from MIT-LISPM-18 by MIT-OZ via Chaosnet; 25 May 84 01:04-EDT
Date: Friday, 25 May 1984, 01:05-EDT
From:  <ehl at MIT-OZ>
Sender:  at MIT-OZ
To: BUG-LISPM at MIT-OZ

In System 98.48, CADR 3.6, ZMail 53.17, MIT-Specific 22.0, microcode 309,
ZM MIT, on Lisp Machine Eighteen:


Insert your description of the circumstances here:

There is a Possible bug in the peephole optimizer.
The following code cause the compiler to hang in "Run".  The problem goes away when
I set COMPILER:PEEP-ENABLE to NIL.

(DEFFLAVOR ANYTHING
	   ()
	   ()
  )

(DEFMACRO SEND-UNLESS-NIL (INSTANCE MESSAGE ARG)
  `(AND ,INSTANCE (SEND ,INSTANCE ,MESSAGE ,ARG)))

(DEFUN FOO ()
  (LET ((YOWIE (MAKE-INSTANCE 'ANYTHING)))
    (LOOP DOING (SEND-UNLESS-NIL YOWIE :MESSAGE "some arg"))))

>>Keyboard break.
Backtrace from the debugger:

MEMBER (P.C. = 24)

 Arg 0 (ITEM): (COMPILER:BRANCH COMPILER:NILIND TRUE NIL ...)
 Arg 1 (IN-LIST): ((COMPILER:MISC COMPILER:D-INDS FALSE) (COMPILER:MISC COMPILER:D-IGNORE FALSE) (COMPILER:MOVE COMPILER:D-PDL COMPILER:PDL-POP) (COMPILER:MOVE COMPILER:D-PDL **))


COMPILER:PEEP-ONE-SPOT (P.C. = 462)

 Arg 0 (INDEX): 20
Local 0 (X): NIL
Local 1 (X-PTR): NIL
Local 2 (Y): (COMPILER:BRANCH COMPILER:NILIND TRUE NIL ...)
Local 3 (Z): (CALL COMPILER:D-IGNORE (COMPILER:LOCBLOCK 0))
Local 4 (Z-PTR): 21
Local 5 (TAG-SKIPPED-FLAG): NIL
Local 6 (Y-JUST-SETS-INDS): NIL
Local 7 (Y-BRANCH-TARGET-INDEX): 16
Local 8 (LENGTH): 32
Local 9 (PREV-PTR): NIL
Local 10 (TARGET-PTR): 20
Local 11 (PREV-MATCH): NIL
Local 12 (TARGET-MATCH): NIL
Local 13 (OINSN): NIL
Local 14 (NTAG): NIL
Local 15 (TARGET): (COMPILER:BRANCH COMPILER:NILIND TRUE NIL ...)
Local 16 (X-PTR): NIL
Local 17 (OTAG): #:G0595
Local 18 (OY): NIL
Local 19 (CONST): NIL
Local 20 (*SELECTQ-ITEM*): NIL
Local 21 (INDS-USED): NIL
Local 22 (FINAL-BRANCH): NIL
Local 23 (INDICATOR): NIL
Local 24 (SENSE): NIL
Local 25 (TOTAL-POPS): NIL
Local 26 (I): NIL
Local 27 (F): NIL


COMPILER:PEEP-WHOLE-FUNCTION (P.C. = 43)

Local 0 (PEEP-QUEUE): NIL


COMPILER:PEEP (P.C. = 133)

 Arg 0 (PEEP-CODE-ARRAY): #<ART-Q-LIST-3000 27272624>
 Arg 1 (FUNCTION-NAME): FOO
Local 0 (INSN-COUNT): 0
Local 1: NIL
Local 2 (ELT): NIL
Local 3 (START-TIME): 21504344303


COMPILER:QC-TRANSLATE-FUNCTION (P.C. = 601)

 Arg 0 (FUNCTION-SPEC): FOO
 Arg 1 (EXP): (NAMED-LAMBDA FOO NIL (BLOCK FOO **))
 Arg 2 (QC-TF-PROCESSING-MODE): COMPILER:MACRO-COMPILE
 Arg 3 (QC-TF-OUTPUT-MODE): COMPILER:COMPILE-TO-CORE
 Arg 4 (NAME-FOR-FUNCTION): FOO
Local 0 (NEW-OBJECT-THIS-LEVEL): T
Local 1 (VAL): NIL
Local 2 (VARIABLES-LISTS): ((**))
Local 3 (L): ((FOO FOO ** NIL ...))
Local 4 (FUNCTION-TO-DEFINE): FOO
Local 5 (EXP): (NAMED-LAMBDA FOO NIL (BLOCK FOO **))
Local 6 (NAME-FOR-FUNCTION): FOO
Local 7 (NEW-OBJECT-THIS-LEVEL): NIL
Local 8: ("Give up on compiling ~S" FOO)
Local 9: (ERROR ("Give up on compiling ~S" FOO) T ("Give up on compiling ~S" FOO) ...)
Local 10 (VL): NIL
Local 11 (V): NIL


Remainder of stack:

COMPILER:COMPILE-1 (P.C. = 103)
(:INTERNAL COMPILE 0) (P.C. = 240)
COMPILE (P.C. = 170)
SI:EVAL1 (P.C. = 1324)
SI:EVAL-ABORT-TRIVIAL-ERRORS (P.C. = 61)
BREAK (P.C. = 611)
ZWEI:COM-BREAK (P.C. = 44)
ZWEI:COMMAND-EXECUTE (P.C. = 115)
ZWEI:PROCESS-COMMAND-CHAR (P.C. = 65)
(:METHOD ZWEI:WINDOW :EDIT) (P.C. = 464)
(:INTERNAL (:METHOD ZWEI:ZMACS-WINDOW :COMBINED :EDIT) 0) (P.C. = 74)
FUNCALL (P.C. = 25)
(:METHOD ZWEI:DISPLAYER :AROUND :EDIT) (P.C. = 31)
(:METHOD ZWEI:ZMACS-WINDOW :COMBINED :EDIT) (P.C. = 47)
ZWEI:ZMACS-WINDOW-TOP-LEVEL (P.C. = 46)
SI:PROCESS-TOP-LEVEL (P.C. = 152)
25-May-84 01:58:21-EDT,5169;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 25 May 84 01:57-EDT
Date: Friday, 25 May 1984, 01:55-EDT
From:  <TIM at MIT-MC>
Subject: Random lossage
To: BUG-LISPM at MIT-OZ

In Release 5.0 [Beta Test rev 7], FEP 18, on Lisp Machine Keith Moon (3600):

From Zmail, typed <END> to send a some mail.

>>Error: Attempt to to read from CHAOS Connection for SMTP to MC,
          which was closed by MC.
         Reason given was "Channel closed"
While in the function (:DEFUN-METHOD CHAOS:BASIC-INPUT-STREAM-BAD-INPUT-PACKET)  (:METHOD CHAOS:BASIC-INPUT-STREAM :GET-NEXT-INPUT-PKT)  (:METHOD CHAOS:CHARACTER-INPUT-STREAM-MIXIN :NEXT-INPUT-BUFFER)

(:DEFUN-METHOD CHAOS:BASIC-INPUT-STREAM-BAD-INPUT-PACKET):  (P.C. = 24)
   Arg 0 (SELF): #<ASCII-TRANSLATING-CHARACTER-STREAM 26275657>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor CHAOS:BASIC-INPUT-STREAM -- 2. IV's, 0. FL's 22105060>

(:METHOD CHAOS:BASIC-INPUT-STREAM :GET-NEXT-INPUT-PKT):  (P.C. = 111)
   Arg 0 (SELF): #<ASCII-TRANSLATING-CHARACTER-STREAM 26275657>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor CHAOS:BASIC-INPUT-STREAM -- 2. IV's, 0. FL's 22105060>
   Arg 2 (OPERATION): :GET-NEXT-INPUT-PKT
   Arg 3 (NO-HANG-P): NIL

(:METHOD CHAOS:CHARACTER-INPUT-STREAM-MIXIN :NEXT-INPUT-BUFFER):  (P.C. = 6)
   Arg 0 (SELF): #<ASCII-TRANSLATING-CHARACTER-STREAM 26275657>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor CHAOS:CHARACTER-INPUT-STREAM-MIXIN -- 1. IV's, 0. FL's 22105140>
   Arg 2 (OPERATION): :NEXT-INPUT-BUFFER
   Arg 3 (NO-HANG-P): NIL

(:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :SETUP-NEXT-INPUT-BUFFER):  (P.C. = 11)
   Arg 0 (SELF): #<ASCII-TRANSLATING-CHARACTER-STREAM 26275657>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:BASIC-BUFFERED-INPUT-STREAM -- 3. IV's, 0. FL's 22105113>
   Arg 2 (OPERATION): :SETUP-NEXT-INPUT-BUFFER
   --Defaulted args:--
   Arg 3 (NO-HANG-P): NIL

(:METHOD CHAOS:ASCII-TRANSLATING-CHARACTER-STREAM :COMBINED :SETUP-NEXT-INPUT-BUFFER):  (P.C. = 10)
   Arg 0 (SELF): #<ASCII-TRANSLATING-CHARACTER-STREAM 26275657>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor CHAOS:ASCII-TRANSLATING-CHARACTER-STREAM -- 0. IV's, 11. FL's 22105065>
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

(:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :TYI):  (P.C. = 13)
   Arg 0 (SELF): #<ASCII-TRANSLATING-CHARACTER-STREAM 26275657>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:BASIC-BUFFERED-INPUT-STREAM -- 3. IV's, 0. FL's 22105113>
   Arg 2 (OPERATION): :TYI
   --Defaulted args:--
   Arg 3 (EOF): NIL

(:INTERNAL (:METHOD CHAOS:ASCII-TRANSLATING-CHARACTER-STREAM :COMBINED :TYI) 0):  (P.C. = 10)
   Arg 0 (SELF): #<ASCII-TRANSLATING-CHARACTER-STREAM 26275657>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor CHAOS:ASCII-TRANSLATING-CHARACTER-STREAM -- 0. IV's, 11. FL's 22105065>
   Rest arg (.DAEMON-CALLER-ARGS.): (:TYI)

(:METHOD SI:ASCII-TRANSLATING-INPUT-STREAM-MIXIN :WHOPPER :TYI):  (P.C. = 11)
   Arg 0 (SELF): #<ASCII-TRANSLATING-CHARACTER-STREAM 26275657>
   Arg 1 (SELF-MAPPING-TABLE): SI:ASCII-TRANSLATING-INPUT-STREAM-MIXIN
   Arg 2 (.WHOPPER-CONTINUATION.): #<DTP-COMPILED-FUNCTION (:INTERNAL (:METHOD CHAOS:ASCII-TRANSLATING-CHARACTER-STREAM :COMBINED :TYI) 0) 7107134>
   Arg 3 (.OLD-SELF-MAPPING-TABLE.): #<Map to flavor CHAOS:ASCII-TRANSLATING-CHARACTER-STREAM -- 0. IV's, 11. FL's 22105065>
   Arg 4 (.OPERATION.): :TYI

Rest of stack:
(:METHOD CHAOS:ASCII-TRANSLATING-CHARACTER-STREAM :COMBINED :TYI):  (P.C. = 12)
SI:TYI-FROM-ASCII-STREAM:  (P.C. = 5)
(:METHOD SI:ASCII-TRANSLATING-INPUT-STREAM-MIXIN :WHOPPER :TYI):  (P.C. = 15)
(:METHOD CHAOS:ASCII-TRANSLATING-CHARACTER-STREAM :COMBINED :TYI):  (P.C. = 12)
(:METHOD SI:UNBUFFERED-LINE-INPUT-STREAM :LINE-IN):  (P.C. = 21)
ZWEI:SMTP-CHECK-REPLY:  (P.C. = 36)
ZWEI:SMTP-MAILER:  (P.C. = 213)
ZWEI:SMTP-MAIL-INTERNAL:  (P.C. = 54)
ZWEI:INVOKE-SERVICE-STORE-AND-FORWARD-MAIL-WITH-SMTP:  (P.C. = 3)
NET:INVOKE-SERVICE-ACCESS-PATH:  (P.C. = 21)
ZWEI:INVOKE-MAIL-SERVICE:  (P.C. = 6)
ZWEI:NETWORK-SEND-IT-1:  (P.C. = 331)
ZWEI:NETWORK-SEND-IT:  (P.C. = 75)
ZWEI:FUNCALL-TEMPLATE-EXPANSION:  (P.C. = 47)
(:METHOD ZWEI:BASIC-DRAFT-MSG :TRANSMIT):  (P.C. = 314)
(:METHOD ZWEI:DRAFT-MSG :COMBINED :TRANSMIT):  (P.C. = 25)
ZWEI:COM-SEND-MESSAGE:  (P.C. = 50)
ZWEI:COM-MAIL-END:  (P.C. = 4)
ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 200)
(:METHOD ZWEI:ZMAIL-FRAME :COMBINED :EDIT):  (P.C. = 50)
ZWEI:ZMAIL-MAIL:  (P.C. = 75)
ZWEI:CONTINUE-DRAFT-MSG:  (P.C. = 21)
ZWEI:COMPOSE-VIA-DRAFT-MSG:  (P.C. = 5)
ZWEI:FUNCALL-TEMPLATE-EXPANSION:  (P.C. = 47)
ZWEI:COMPOSE-FROM-TEMPLATE:  (P.C. = 20)
ZWEI:COM-ZMAIL-MAIL:  (P.C. = 15)
ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
ZWEI:ZMAIL-COMMAND-EXECUTE:  (P.C. = 6)
(:INTERNAL ZWEI:ZMAIL-COMMAND-LIST 0):  (P.C. = 10)
ZWEI:ZMAIL-COMMAND-LIST:  (P.C. = 12)
(:METHOD ZWEI:ZMAIL-FRAME :PROCESS-SPECIAL-COMMAND):  (P.C. = 5)
(:METHOD ZWEI:ZMAIL-FRAME :COMMAND-LOOP):  (P.C. = 141)
(:METHOD ZWEI:ZMAIL-FRAME :COMBINED :COMMAND-LOOP):  (P.C. = 47)
ZWEI:ZMAIL-PROCESS-TOP-LEVEL:  (P.C. = 52)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
25-May-84 01:59:16-EDT,5169;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 25 May 84 01:57-EDT
Date: Friday, 25 May 1984, 01:55-EDT
From:  <TIM at MIT-MC>
Subject: Random lossage
To: BUG-LISPM at MIT-OZ

In Release 5.0 [Beta Test rev 7], FEP 18, on Lisp Machine Keith Moon (3600):

From Zmail, typed <END> to send a some mail.

>>Error: Attempt to to read from CHAOS Connection for SMTP to MC,
          which was closed by MC.
         Reason given was "Channel closed"
While in the function (:DEFUN-METHOD CHAOS:BASIC-INPUT-STREAM-BAD-INPUT-PACKET)  (:METHOD CHAOS:BASIC-INPUT-STREAM :GET-NEXT-INPUT-PKT)  (:METHOD CHAOS:CHARACTER-INPUT-STREAM-MIXIN :NEXT-INPUT-BUFFER)

(:DEFUN-METHOD CHAOS:BASIC-INPUT-STREAM-BAD-INPUT-PACKET):  (P.C. = 24)
   Arg 0 (SELF): #<ASCII-TRANSLATING-CHARACTER-STREAM 26275657>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor CHAOS:BASIC-INPUT-STREAM -- 2. IV's, 0. FL's 22105060>

(:METHOD CHAOS:BASIC-INPUT-STREAM :GET-NEXT-INPUT-PKT):  (P.C. = 111)
   Arg 0 (SELF): #<ASCII-TRANSLATING-CHARACTER-STREAM 26275657>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor CHAOS:BASIC-INPUT-STREAM -- 2. IV's, 0. FL's 22105060>
   Arg 2 (OPERATION): :GET-NEXT-INPUT-PKT
   Arg 3 (NO-HANG-P): NIL

(:METHOD CHAOS:CHARACTER-INPUT-STREAM-MIXIN :NEXT-INPUT-BUFFER):  (P.C. = 6)
   Arg 0 (SELF): #<ASCII-TRANSLATING-CHARACTER-STREAM 26275657>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor CHAOS:CHARACTER-INPUT-STREAM-MIXIN -- 1. IV's, 0. FL's 22105140>
   Arg 2 (OPERATION): :NEXT-INPUT-BUFFER
   Arg 3 (NO-HANG-P): NIL

(:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :SETUP-NEXT-INPUT-BUFFER):  (P.C. = 11)
   Arg 0 (SELF): #<ASCII-TRANSLATING-CHARACTER-STREAM 26275657>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:BASIC-BUFFERED-INPUT-STREAM -- 3. IV's, 0. FL's 22105113>
   Arg 2 (OPERATION): :SETUP-NEXT-INPUT-BUFFER
   --Defaulted args:--
   Arg 3 (NO-HANG-P): NIL

(:METHOD CHAOS:ASCII-TRANSLATING-CHARACTER-STREAM :COMBINED :SETUP-NEXT-INPUT-BUFFER):  (P.C. = 10)
   Arg 0 (SELF): #<ASCII-TRANSLATING-CHARACTER-STREAM 26275657>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor CHAOS:ASCII-TRANSLATING-CHARACTER-STREAM -- 0. IV's, 11. FL's 22105065>
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

(:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :TYI):  (P.C. = 13)
   Arg 0 (SELF): #<ASCII-TRANSLATING-CHARACTER-STREAM 26275657>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:BASIC-BUFFERED-INPUT-STREAM -- 3. IV's, 0. FL's 22105113>
   Arg 2 (OPERATION): :TYI
   --Defaulted args:--
   Arg 3 (EOF): NIL

(:INTERNAL (:METHOD CHAOS:ASCII-TRANSLATING-CHARACTER-STREAM :COMBINED :TYI) 0):  (P.C. = 10)
   Arg 0 (SELF): #<ASCII-TRANSLATING-CHARACTER-STREAM 26275657>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor CHAOS:ASCII-TRANSLATING-CHARACTER-STREAM -- 0. IV's, 11. FL's 22105065>
   Rest arg (.DAEMON-CALLER-ARGS.): (:TYI)

(:METHOD SI:ASCII-TRANSLATING-INPUT-STREAM-MIXIN :WHOPPER :TYI):  (P.C. = 11)
   Arg 0 (SELF): #<ASCII-TRANSLATING-CHARACTER-STREAM 26275657>
   Arg 1 (SELF-MAPPING-TABLE): SI:ASCII-TRANSLATING-INPUT-STREAM-MIXIN
   Arg 2 (.WHOPPER-CONTINUATION.): #<DTP-COMPILED-FUNCTION (:INTERNAL (:METHOD CHAOS:ASCII-TRANSLATING-CHARACTER-STREAM :COMBINED :TYI) 0) 7107134>
   Arg 3 (.OLD-SELF-MAPPING-TABLE.): #<Map to flavor CHAOS:ASCII-TRANSLATING-CHARACTER-STREAM -- 0. IV's, 11. FL's 22105065>
   Arg 4 (.OPERATION.): :TYI

Rest of stack:
(:METHOD CHAOS:ASCII-TRANSLATING-CHARACTER-STREAM :COMBINED :TYI):  (P.C. = 12)
SI:TYI-FROM-ASCII-STREAM:  (P.C. = 5)
(:METHOD SI:ASCII-TRANSLATING-INPUT-STREAM-MIXIN :WHOPPER :TYI):  (P.C. = 15)
(:METHOD CHAOS:ASCII-TRANSLATING-CHARACTER-STREAM :COMBINED :TYI):  (P.C. = 12)
(:METHOD SI:UNBUFFERED-LINE-INPUT-STREAM :LINE-IN):  (P.C. = 21)
ZWEI:SMTP-CHECK-REPLY:  (P.C. = 36)
ZWEI:SMTP-MAILER:  (P.C. = 213)
ZWEI:SMTP-MAIL-INTERNAL:  (P.C. = 54)
ZWEI:INVOKE-SERVICE-STORE-AND-FORWARD-MAIL-WITH-SMTP:  (P.C. = 3)
NET:INVOKE-SERVICE-ACCESS-PATH:  (P.C. = 21)
ZWEI:INVOKE-MAIL-SERVICE:  (P.C. = 6)
ZWEI:NETWORK-SEND-IT-1:  (P.C. = 331)
ZWEI:NETWORK-SEND-IT:  (P.C. = 75)
ZWEI:FUNCALL-TEMPLATE-EXPANSION:  (P.C. = 47)
(:METHOD ZWEI:BASIC-DRAFT-MSG :TRANSMIT):  (P.C. = 314)
(:METHOD ZWEI:DRAFT-MSG :COMBINED :TRANSMIT):  (P.C. = 25)
ZWEI:COM-SEND-MESSAGE:  (P.C. = 50)
ZWEI:COM-MAIL-END:  (P.C. = 4)
ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 200)
(:METHOD ZWEI:ZMAIL-FRAME :COMBINED :EDIT):  (P.C. = 50)
ZWEI:ZMAIL-MAIL:  (P.C. = 75)
ZWEI:CONTINUE-DRAFT-MSG:  (P.C. = 21)
ZWEI:COMPOSE-VIA-DRAFT-MSG:  (P.C. = 5)
ZWEI:FUNCALL-TEMPLATE-EXPANSION:  (P.C. = 47)
ZWEI:COMPOSE-FROM-TEMPLATE:  (P.C. = 20)
ZWEI:COM-ZMAIL-MAIL:  (P.C. = 15)
ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
ZWEI:ZMAIL-COMMAND-EXECUTE:  (P.C. = 6)
(:INTERNAL ZWEI:ZMAIL-COMMAND-LIST 0):  (P.C. = 10)
ZWEI:ZMAIL-COMMAND-LIST:  (P.C. = 12)
(:METHOD ZWEI:ZMAIL-FRAME :PROCESS-SPECIAL-COMMAND):  (P.C. = 5)
(:METHOD ZWEI:ZMAIL-FRAME :COMMAND-LOOP):  (P.C. = 141)
(:METHOD ZWEI:ZMAIL-FRAME :COMBINED :COMMAND-LOOP):  (P.C. = 47)
ZWEI:ZMAIL-PROCESS-TOP-LEVEL:  (P.C. = 52)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
25-May-84 05:27:47-EDT,771;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 25 May 84 05:27-EDT
Date: 25 May 1984 05:28-EDT
From: Pandora B. Berman <CENT @ MIT-MC>
Subject: forwarded...
To: BUG-LISPM @ MIT-MC

Date: 25 May 84 04:55:12-EDT
From: Dumper <DUMPER%MIT-OZ@MIT-MC.ARPA>
Reply-to: File-Retrieve <FILE-R%MIT-OZ@MIT-MC.ARPA>
To: BUG-BACKUPERS%MIT-OZ@MIT-MC.ARPA
Subject: Archived files

[ARMAIL: Couldn't figure out what to do with PS:<L.DOC>!]


    The following files have been archived:

PS:<L.DOC>BUG.LISPM18.1 File archived, contents deleted
PS:<L.DOC>BUG.LISPM19.1 File archived, contents deleted
PS:<L.DOC>BUG.LISPM20.1 File archived, contents deleted
PS:<L.DOC>BUG.LISPM21.1 File archived, contents deleted
PS:<L.DOC>BUG.LISPM22.1 File archived, contents deleted
25-May-84 05:28:08-EDT,542;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 25 May 84 05:27-EDT
Date: 25 May 1984 05:28-EDT
From: Pandora B. Berman <CENT @ MIT-MC>
Subject: another one
To: BUG-LISPM @ MIT-MC

Date: 25 May 84 05:20:24-EDT
From: Dumper <DUMPER%MIT-OZ@MIT-MC.ARPA>
Reply-to: File-Retrieve <FILE-R%MIT-OZ@MIT-MC.ARPA>
To: BUG-BACKUPERS%MIT-OZ@MIT-MC.ARPA
Subject: Archived files

[ARMAIL: Couldn't figure out what to do with PS:<L.DOC>!]


    The following files have been archived:

PS:<L.DOC>BUG.LISPM23.1 File archived, contents deleted
25-May-84 11:53:52-EDT,1222;000000000000
Mail-From: X.GYRO created at 25-May-84 11:48:52
Date: Fri, 25 May 1984  11:48 EDT
Message-ID: <X.GYRO.12018164411.BABYL@MIT-OZ>
From: X.GYRO@MIT-OZ
To:   bug-lispm-mit@MIT-OZ
Subject: Incremental garbage collector

In system 98.39:

Doesn't anyone at MIT use the incremental GC anymore?  I have not
succeeded in running with it for more than two flips without it
crashing, in systems 94 or 98.  No I don't feel like duplicating the
circumstances -- it would take hours -- and since I only have one
CADR, I can't use CC to get useful information about the crashes.  I
can tell you that the only time I've tried it, in 98.39, it crashed
during or immediately after the second flip.  The first flip happened
when the machine was sitting idle at a Lisp listener, the second
happened during consing of vast amounts of garbage.

The only way I can see to fix this is for all of you daring systems
hackers at MIT to make a point of leaving the GC on all the time.  You
have CC -- including (salvage-editor) or whatever it's called -- and I
don't.

Well, I'll understand if nobody takes up the challenge.  It may just
not be worth the trouble.  But I would like to use it from time to
time.

-- Scott
25-May-84 12:31:42-EDT,804;000000000000
Received: from MIT-LISPM-1 by MIT-OZ via Chaosnet; 25 May 84 12:31-EDT
Date: Friday, 25 May 1984, 12:29-EDT
From: Robert P. Krajewski <RpK at MIT-OZ>
Subject: Incremental garbage collector
To: X.GYRO at MIT-OZ
CC: bug-lispm-mit at MIT-OZ
In-reply-to: <X.GYRO.12018164411.BABYL@MIT-OZ>
Message-ID: <[MIT-LISPM-1].5/25/84 12:29:47.RpK>

I've have occasionally turned the GC on 98, and it has flipped (a few
times) without crashing the machine.  That is, I have never seen it
crash the machine, but I'm probably doing less consing than you.
I'm not sure of the status of incremental garbage collection on the
Lambda at the moment, but I know as early as November batch GC was
effective.

I'll make a point to turn it on more often though.  *Somebody* has
to be the guinea pig !

``Bob''
25-May-84 14:03:37-EDT,2043;000000000000
Received: from SCC-WAIKATO by MIT-OZ via Chaosnet; 25 May 84 14:03-EDT
Received: from SCC-YOSEMITE by SCC-WAIKATO via CHAOS with CHAOS-MAIL id 28821; Fri 25-May-84 14:00:29-EDT
Date: Friday, 25 May 1984, 14:00-EDT
From: Jonathan L. Balgley <jlb at SCC-WAIKATO>
Subject: Mouse cursor esthetics
To: Moon at SCRC-TENEX, X.GYRO at MIT-OZ
Cc: bug-lispm at MIT-OZ
In-reply-to: The message of 23 May 84 20:13-EDT from David A. Moon <Moon at SCRC-TENEX>

    Date: Wednesday, 23 May 1984, 20:13-EDT
    From: David A. Moon <Moon at SCRC-TENEX>

	Date: Fri 18 May 84 11:44-EDT
	From: Scott W. Layson <X.GYRO@MIT-OZ>

	For that matter, get a Macintosh and look at the mouse cursor.  The normal
	mouse cursor is a black arrow that's ORed (or ANDed or whatever, but anyhow
	not XORed) into the screen; but when you move it onto a black region you
	notice it has a one-pixel-thick white outline around it.  Now this is SNAZZY.

    It only took me a few minutes to implement this, but I don't like the way it looks.
    Since my Macintosh hasn't come yet, maybe you could look at it and tell me how I
    failed to make it do the same as what the Macintosh does (assuming the problem isn't
    that we have different ideas of what is snazzy).  The code is in
    Q:>Moon>hacks>outlined-character-blinker.lisp; since there's no compiled file you
    probably want to read it into the editor and m-X Compile Buffer.

It's not really noticeable on white windows.  Try loading
waikato:>jlb>mouse-test after doing the above, and see how the mouse
behaves on the window it pops up.

Lisas, presumably Macs and Xerox machines make use of gray and black
windows a fair amount.  I've always thought they look flashy.  But you
can't use the same characters on gray windows.

BTW, try making another one of these windows (flavor "test") and use the
screen editor to move it on top of the first one.  Then move it
somewhere else.  The arrays don't get redisplayed properly.  [I'm using
the :blanks option to a constraint frame.]
25-May-84 15:17:39-EDT,955;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 25 May 84 15:16-EDT
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 39391; Fri 25-May-84 15:14:04-EDT
Date: Friday, 25 May 1984, 15:13-EDT
From: David A. Moon <Moon at SCRC-TENEX>
Subject: Random lossage
To: TIM at MIT-MC
Cc: BUG-LISPM at MIT-OZ
In-reply-to: The message of 25 May 84 01:55-EDT from TIM at MIT-MC

    Date: Friday, 25 May 1984, 01:55-EDT
    From:  <TIM at MIT-MC>

    In Release 5.0 [Beta Test rev 7], FEP 18, on Lisp Machine Keith Moon (3600):

    From Zmail, typed <END> to send a some mail.

    >>Error: Attempt to to read from CHAOS Connection for SMTP to MC,
	      which was closed by MC.
	     Reason given was "Channel closed"

This bug in MC's SMTP server was supposedly fixed a week ago, but there were a couple
of bugs in the fix.  It's really fixed now, I think; please let me know if the problem
still happens.
26-May-84 02:06:26-EDT,1874;000000000000
Received: from MIT-LISPM-23 by MIT-OZ via Chaosnet; 26 May 84 02:05-EDT
Date: Saturday, 26 May 1984, 02:04-EDT
From: Michael A. Patton <MAP at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In System 98.46, CADR 3.6, ZMail 53.17, MIT-Specific 22.0, microcode 309,
ZM MIT, on Lisp Machine Twenty-three:

There is a bug in CHOOSE-VARIABLE-VALUES (File reference: OZ:PS:<L.WINDOW>CHOICE.LISP.111).

Part way in as it is checking the types of the "ELEM"s there is the expression:
	(EQ (DATA-TYPE ELEM) 'LOCATIVE)
which will always evaluate to NIL since the value returned by DATA-TYPE is one of a select
list of atoms none of which is LOCATIVE.  It is my belief that this meant to be DTP-LOCATIVE
since that is one of the possible values (and it makes my program run).

Further details in case you need them:
The object in question was made with (LOCF (THIRD x)) where "x" is a three-element list,
which itself is about to be added to a list where the effect is desired to be reflected.
The code in question occurs in the file OZ:PS:<CCS.TMRC.MAP>TIMTBL.LISP.145 and is the only
occurance of the string "LOCF" in the file so it should be easy to find, it is in the body of
the definition of COM-ADD which is created with a call to (the home-grown) macro DEFCOM.

The problem is reproducible and the fix mentioned above does not appear to affect any other
system components that I tested.


	Mike


P.S. If you need more info, try mail, but in person might be better.  Unfortunately I am
	usually around only in the middle of the night on weekends, but you might try calling
	TMRC on a Saturday and asking for me.  If needed I would gladly come over from there
	to explain myself.  The number is 253-3269.

P.P.S. Does this mean nobody else uses this feature of CHOOSE-VARIABLE-VALUES?  I realize
	my application is strange, but is it really that strange?
26-May-84 15:32:26-EDT,3009;000000000000
Received: from MIT-MERLIN by MIT-OZ via Chaosnet; 26 May 84 15:32-EDT
Date: Saturday, 26 May 1984, 15:29-EDT
From: KMP at MIT-OZ
Sender: DICK at MIT-OZ
Subject: Attempt to unbind in a frame without bindings?
To: BUG-LISPM at MIT-OZ

In Release 4.5, Experimental Knowledge-Based-Editor 328.58, FEP 18,
site configuration 88, Black Magic, on PA Lisp Machine Merlin:

I typed c-m-R to the debugger at the 
 (:METHOD PROGRAMMER-VOCABULARY :CASE :INTERPRET ANALYZE) 
frame shown first here and got the following error. What does this mean?
It seems like an unnecessarily harsh thing to do to a confused user
who's just trying to retry some code he's recently recompiled after c-E
in the debugger. -kmp

>>Trap: Attempt to unbind in a frame without bindings.
While in the function (:METHOD PROGRAMMER-VOCABULARY :CASE :INTERPRET ANALYZE)  (:METHOD APPRENTICE :COMBINED :INTERPRET)  SEND-DELEGATE

(:METHOD PROGRAMMER-VOCABULARY :CASE :INTERPRET ANALYZE):
   Arg 0 (SELF): #<Apprentice 1@MIT-MERLIN>
   Arg 1 (SELF-MAPPING-TABLE): PROGRAMMER-VOCABULARY
   Arg 2 (OPERATION): ANALYZE
   Arg 3 (CODE): (QUOTE (DEF-ADA-TOP FF NIL NIL (DEF-ADA-FN (FF NIL) NIL NIL NIL)))

(:METHOD APPRENTICE :COMBINED :INTERPRET):  (P.C. = 430)
   Arg 0 (SELF): #<Apprentice 1@MIT-MERLIN>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor APPRENTICE -- 1. IV's, 12. FL's 4141302>
   Rest arg (.DAEMON-CALLER-ARGS.): (:INTERPRET ANALYZE (QUOTE (DEF-ADA-TOP FF NIL NIL (DEF-ADA-FN ** NIL NIL NIL))))

SEND-DELEGATE:  (P.C. = 6)
   Arg 0 (KWD): :INTERPRET
   Rest arg (ARGS): (ANALYZE (QUOTE (DEF-ADA-TOP FF NIL NIL (DEF-ADA-FN ** NIL NIL NIL))))

(:PROPERTY ANALYZE VERB-ACTION):  (P.C. = 10)
   Rest arg: ((QUOTE (DEF-ADA-TOP FF NIL NIL (DEF-ADA-FN ** NIL NIL NIL))))

EVAL-COMMAND:  (P.C. = 56)
   Arg 0 (COMMAND): (ANALYZE (QUOTE (DEF-ADA-TOP FF NIL NIL (DEF-ADA-FN ** NIL NIL NIL))))

APPRENTICE-EVAL-COMMAND:  (P.C. = 45)
   Arg 0 (COMMAND): (ANALYZE (QUOTE (DEF-ADA-TOP FF NIL NIL (DEF-ADA-FN ** NIL NIL NIL))))
   Arg 1 (MYSELF): #<Apprentice 1@MIT-MERLIN>

EVAL-COMMANDS:  (P.C. = 66)
   Arg 0 (COMMANDS): ((ANALYZE (QUOTE (DEF-ADA-TOP FF NIL NIL **))))
   Arg 1 (END-MODE): :DEFER
   Arg 2 (FN): #<DTP-COMPILED-FUNCTION APPRENTICE-EVAL-COMMAND 47264023>
   Rest arg (ARGS): (#<Apprentice 1@MIT-MERLIN>)

(:METHOD APPRENTICE :CASE :BEHAVIOR TASK):  (P.C. = 7)
   Arg 0 (SELF): #<Apprentice 1@MIT-MERLIN>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor APPRENTICE -- 1. IV's, 12. FL's 4141302>
   Arg 2 (OPERATION): TASK
   Arg 3 (REQUESTS): "Analyze '(DEF-ADA-TOP FF NIL NIL (DEF-ADA-FN (FF NIL) NIL NIL NIL))."

Rest of stack:
(:METHOD APPRENTICE :COMBINED :BEHAVIOR):  (P.C. = 17)
(:METHOD ACTOR-MESSAGE-PASSING-MIXIN :PROCESS-MESSAGE):  (P.C. = 126)
(:METHOD ACTOR-MESSAGE-PASSING-MIXIN :READ-MESSAGES):  (P.C. = 17)
SEND-DELEGATE:  (P.C. = 6)
(:METHOD ACTOR-WINDOW :PROCESS-TOPLEVEL):  (P.C. = 14)
PROCESS-TOPLEVEL:  (P.C. = 6)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
26-May-84 18:57:58-EDT,529;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 26 May 84 18:57-EDT
Received: from SCRC-MUDDY by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 39718; Sat 26-May-84 18:53:13-EDT
Date: Saturday, 26 May 1984, 18:54-EDT
From: Bruce Edwards <BEE at SCRC-TENEX>
Subject: Attempt to unbind in a frame without bindings?
To: KMP at MIT-OZ, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 26 May 84 15:29-EDT from KMP at MIT-OZ

This is fixed in release 5.0. It is complaining that the stack is in an
inconsistent state.
27-May-84 10:47:42-EDT,2476;000000000000
Received: from MIT-MORRISON by MIT-OZ via Chaosnet; 27 May 84 10:47-EDT
Date: Sunday, 27 May 1984, 10:40-EDT
From: Philip E. Agre <Agre at MIT-OZ>
Subject: One of our sites is missing, so this must be Topeka.  Or something.
To: BUG-LISPM at MIT-OZ
Cc: zvona at MIT-OZ

In Release 5.0 [Beta Test rev 7], FEP 18, on Lisp Machine Jim Morrison (3600):

I attempted to boot the machine.

Neither Resume nor Abort works.

Really now.

/phil

>>Error: The site :SLA does not have a local namespace to be updated in.
While in the function (:METHOD NETI:CLASS :NAMESPACE-FOR-OBJECT-UPDATE)  NETI:ADD-OR-CHANGE-OBJECT  NETI:DO-UNKNOWN-OBJECT-FIXUPS

(:METHOD NETI:CLASS :NAMESPACE-FOR-OBJECT-UPDATE):  (P.C. = 106)
   Arg 0 (SELF): #<CLASS SITE 76261512>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NETI:CLASS -- 1. IV's, 0. FL's 104041270>
   Arg 2 (OPERATION): :NAMESPACE-FOR-OBJECT-UPDATE
   Arg 3 (OBJECT-NAME): :SLA
   Arg 4 (OBJECT-PROPERTY-LIST): NIL
   Local 5 (.SELECTQ-ITEM.): :SITE

NETI:ADD-OR-CHANGE-OBJECT:  (P.C. = 350)
   Arg 0 (CLASS-NAME): :SITE
   Arg 1 (NAME): :SLA
   Arg 2 (PROPERTY-LIST): NIL

NETI:DO-UNKNOWN-OBJECT-FIXUPS:  (P.C. = 140)
   Arg 0 (DECACHE-FIRST): T

NETI:QUERY-NAMESPACE-SERVER:  (P.C. = 426)
   Arg 0 (CLASS): :CLASS
   Arg 1 (NAMESPACE): #<NAMESPACE SCRC 75213223>
   Rest arg (PROPERTY-LIST): (:NAME :USER :TIMESTAMP 2356)

(:METHOD NET:OBJECT :CHECK-VALIDITY):  (P.C. = 201)
   Arg 0 (SELF): #<CLASS USER 76261520>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NET:OBJECT -- 3. IV's, 1. FL's 104041254>
   Arg 2 (OPERATION): :CHECK-VALIDITY
   Arg 3 (RELATIVE-TO-NAMESPACE): #<NAMESPACE SCRC 75213223>

(:METHOD NET:OBJECT :CHECK-VALIDITY):  (P.C. = 30)
   Arg 0 (SELF): #<CLASS USER 76261520>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NET:OBJECT -- 3. IV's, 1. FL's 104041254>
   Arg 2 (OPERATION): :CHECK-VALIDITY
   Arg 3 (RELATIVE-TO-NAMESPACE): NIL

NETI:FIND-OBJECT-NAMED-IN-NAMESPACE:  (P.C. = 45)
   Arg 0 (CLASS): :CLASS
   Arg 1 (NAME): :USER
   Arg 2 (NAMESPACE): #<NAMESPACE MIT 76011143>
   Arg 3 (ERROR-P): NIL

NET:FIND-OBJECT-NAMED:  (P.C. = 41)
   Arg 0 (CLASS): :CLASS
   Arg 1 (NAME): :USER

Rest of stack:
NETI:GET-INCREMENTAL-UPDATE-FROM-NETWORK:  (P.C. = 263)
(:METHOD NETI:NAMESPACE :GET-LATEST-TIMESTAMP):  (P.C. = 21)
NETI:INITIALIZE-NAMESPACES-AND-NETWORK:  (P.C. = 115)
LISP-REINITIALIZE:  (P.C. = 435)
SI:LISP-TOP-LEVEL:  (P.C. = 3)
28-May-84 01:30:04-EDT,4955;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 28 May 84 01:29-EDT
Date: Monday, 28 May 1984, 01:26-EDT
From: Tim McNerney <TIM at MIT-MC>
To: BUG-LISPM at MIT-OZ

In System 98.37, CADR 3.6, ZMail 53.13, MIT-Specific 22.0,
Experimental DAEDALUS 6.1, microcode 309, 98.37, Daed 6.1,
on Lisp Machine Eight:


Insert your description of the circumstances here:

In System Menu -> Attributes (menu)

clicked in non mouse sensitive area (???)

>>ERROR: (:MOUSE-BUTTON 1048576. #<TEMPORARY-CHOOSE-VARIABLE-VALUES-WINDOW Temporary Choose Variable Values Window 1 2227401 deexposed> 189. ...) unknown message from #<TEMPORARY-CHOOSE-VARIABLE-VALUES-WINDOW Temporary Choose Variable Values Window 1 2227401 deexposed>
Backtrace from the debugger:

TV:CHOOSE-VARIABLE-VALUES-PROCESS-MESSAGE (P.C. = 70)

 Arg 0 (WINDOW): #<TEMPORARY-CHOOSE-VARIABLE-VALUES-WINDOW Temporary Choose Variable Values Window 1 2227401 deexposed>
 Arg 1 (MSG): (:MOUSE-BUTTON 1048576. #<TEMPORARY-CHOOSE-VARIABLE-VALUES-WINDOW Temporary Choose Variable Values Window 1 2227401 deexposed> 189. ...)


Additional information supplied with call:
 Expecting 2 values

TV:CHOOSE-VARIABLE-VALUES (P.C. = 544)

 Arg 0 (VARIABLES): ((TV:CURRENT-FONT-VALUE "Current font" :DOCUMENTATION "Set the current font to one of the fonts in the font map." ...) (TV:MORE-P-VALUE "More processing enabled" :DOCUMENTATION "Enable typing **MORE** and waiting for typein when there is too much typeout." ...) (TV:REVERSE-VIDEO-P "Reverse video" :DOCUMENTATION "Use white characters on a black background in this window." ...) (TV:VSP "Vertical spacing" :DOCUMENTATION "The number of pixels between successive lines of printed text" ...) ...)
 Rest arg: (:LABEL "Edit window attributes of Edit: WPROP > TIM; MC:." :MARGIN-CHOICES ("Done" **) ...)
Local 1 (FUNCTION): TV:ATTRIBUTE-EDITOR-HOOK
Local 2 (NEAR-MODE): (:MOUSE)
Local 3 (LABEL): "Edit window attributes of Edit: WPROP > TIM; MC:."
Local 4 (WIDTH): NIL
Local 5 (EXTRA-WIDTH): 10.
Local 6 (MARGIN-CHOICES): (("Done" NIL TV:CHOOSE-VARIABLE-VALUES-CHOICE-BOX-HANDLER 42. ...) ("Abort" NIL TV:CHOOSE-VARIABLE-VALUES-CHOICE-BOX-HANDLER 356. ...))
Local 7 (SUPERIOR): #<STANDARD-SCREEN Main Screen 2200147 exposed>
Local 8 (REVERSE-VIDEO-P): NIL
Local 9 (OSW): #<ZMACS-WINDOW-PANE Zmacs Window Pane 1 2202552 exposed>
Local 10 (L): ("Done" ("Abort" **))
Local 11: (("Done" NIL TV:CHOOSE-VARIABLE-VALUES-CHOICE-BOX-HANDLER 42. ...) ("Abort" NIL TV:CHOOSE-VARIABLE-VALUES-CHOICE-BOX-HANDLER 356. ...))
Local 12: (("Abort" NIL TV:CHOOSE-VARIABLE-VALUES-CHOICE-BOX-HANDLER 356. ...))
Local 13: NIL
Local 14 (X): ("Abort" (*THROW ** NIL))
Local 15 (ELEM): TV:BORDER-MARGIN-WIDTH-VALUE
Local 16 (WINDOW): #<TEMPORARY-CHOOSE-VARIABLE-VALUES-WINDOW Temporary Choose Variable Values Window 1 2227401 deexposed>
Local 17 (IOB): #<IO-BUFFER 33166371: 2 entries, State: NIL>
Local 18 (.QUEUE-LEFT.): NIL
Local 19 (E): NIL


TV:SCREEN-EDITOR-EDIT-ATTRIBUTES (P.C. = 413)

 Arg 0 (WINDOW): #<ZMACS-WINDOW-PANE Zmacs Window Pane 1 2202552 exposed>
Local 0 (BORDERS-P): T
Local 1 (LABEL-P): T
Local 2 (NAME-P): NIL
Local 3 (OLD-CURRENT-FONT-VALUE): #<FONT CPTFONTB 32323376>
Local 4 (OLD-MORE-P-VALUE): T
Local 5 (OLD-REVERSE-VIDEO-P): NIL
Local 6 (OLD-VSP): 2.
Local 7 (OLD-IN-ACTION): :NORMAL
Local 8 (OLD-OUT-ACTION): :NORMAL
Local 9 (OLD-OTHER-OUT-ACTION): NIL
Local 10 (OLD-CHAR-ALU-FCN): 7.
Local 11 (OLD-ERASE-ALU-FCN): 2.
Local 12 (OLD-PRIORITY-VALUE): NIL
Local 13 (OLD-SAVE-BITS-VALUE): T
Local 14 (OLD-LABEL-OR-NAME): (3. -16. -2. -2. ...)
Local 15 (OLD-BORDERS-SPEC): ((TV:DRAW-RECTANGULAR-BORDER 0. 0. 1. ...) (TV:DRAW-RECTANGULAR-BORDER 1. 0. 0. ...) (TV:DRAW-RECTANGULAR-BORDER -1. 1. 0. ...) (TV:DRAW-RECTANGULAR-BORDER 1. -1. -1. ...))
Local 16 (OLD-BORDER-MARGIN-WIDTH-VALUE): 1.
Local 17 (ABORT-P): NIL


TV:SYSTEM-MENU-EDIT-WINDOW-ATTRIBUTES (P.C. = 24)

 Arg 0 (WINDOW): #<ZMACS-WINDOW-PANE Zmacs Window Pane 1 2202552 exposed>
 Arg 1 (IGNORE): 542.
 Arg 2 (IGNORE): 242.


(:METHOD TV:WINDOW-HACKING-MENU-MIXIN :EXECUTE-WINDOW-OP) (P.C. = 32)
  (SELF is #<DYNAMIC-MULTICOLUMN-MOMENTARY-WINDOW-HACKING-MENU Dynamic Multicolumn Momentary Window Hacking Menu 1 2200761 deactivated>)

 Arg 0 (OPERATION): :EXECUTE-WINDOW-OP
 Arg 1 (FUNCTION): TV:SYSTEM-MENU-EDIT-WINDOW-ATTRIBUTES


Remainder of stack:

(:METHOD TV:MENU-EXECUTE-MIXIN :EXECUTE) (P.C. = 164)
(:METHOD TV:MOMENTARY-MENU :COMBINED :EXECUTE) (P.C. = 52)
(:METHOD TV:BASIC-MENU :CHOOSE) (P.C. = 64)
(:INTERNAL (:METHOD TV:DYNAMIC-MULTICOLUMN-MOMENTARY-WINDOW-HACKING-MENU :COMBINED :CHOOSE) 0.) (P.C. = 74)
(:METHOD TV:BASIC-MOMENTARY-MENU :AROUND :CHOOSE) (P.C. = 62)
(:METHOD TV:DYNAMIC-MULTICOLUMN-MOMENTARY-WINDOW-HACKING-MENU :COMBINED :CHOOSE) (P.C. = 47)
(:INTERNAL TV:MOUSE-CALL-SYSTEM-MENU 0.) (P.C. = 42)
SI:PROCESS-RUN-FUNCTION-INTERNAL (P.C. = 100)
SI:PROCESS-TOP-LEVEL (P.C. = 246)
28-May-84 11:14:37-EDT,333;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 28 May 84 11:13-EDT
Date: Monday, 28 May 1984, 11:08-EDT
From: David Chapman <Zvona at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In Release 5.0 [Beta Test rev 7], on Lisp Machine Buddy Holly (3600):

Is it not a bug that symbol-macros do not take effect in the
compile-time environment?
28-May-84 14:25:18-EDT,1099;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 28 May 84 14:21-EDT
Date: 28 May 1984 14:18-EDT
From: Kent M Pitman <KMP @ MIT-MC>
Subject: Referenced but not defined
To: BUG-LISPM @ MIT-MC

In Symbolics Release 4.5 on Avatar (CADR):

If (FOO X) is seen by the compiler but FOO is not defined, then later
FOO is defined by DEFMACRO, the compiler does not warn that FOO was
referenced but not defined. I suppose one can argue that strictly speaking
it is correct in doing so, but I would rather have a message saying FOO
was referenced as a function and not defined (which is slightly wrong)
than have no diagnostic for the fact that FOO was compiled as a function
call when FOO was really a macro (which is certainly wrong on my part,
and which the compiler should certainly trivially be able to grump at me
about). Especially if FOO was a macro which was not "function-like" and
which needed to set up critical state, it's a very bad thing to have it
execute its args before noticing the function is not defined, since their
might be dangerous things in the arg evaluation.
-kmp
28-May-84 15:16:57-EDT,2461;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 28 May 84 15:14-EDT
Date: Monday, 28 May 1984, 15:09-EDT
From: Christopher Fry <cfry at MIT-OZ>
Subject: make-system bad error
To: DEG at SCRC-TENEX, cfry at MIT-OZ, BUG-LISPM at MIT-OZ,
    henry at MIT-OZ
In-reply-to: The message of 23 May 84 20:33-EDT from David E. Goldfarb <DEG at SCRC-TENEX>

    Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 23 May 84 21:18-EDT
    Received: from SCRC-MOBILE by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 37985; Wed 23-May-84 20:34:25-EDT
    Date: Wednesday, 23 May 1984, 20:33-EDT
    From: David E. Goldfarb <DEG at SCRC-TENEX>
    Subject: make-system bad error
    To: cfry at MIT-OZ, BUG-LISPM at MIT-OZ
    Cc: DEG at SCRC-TENEX
    In-reply-to: The message of 22 May 84 20:26-EDT from Christopher Fry <cfry at MIT-OZ>

	Date: Tuesday, 22 May 1984, 20:26-EDT
	From: Christopher Fry <cfry at MIT-OZ>
	In Release 5.0 [Beta Test rev 7], on Lisp Machine Robot-4 (3600):

	If (make-system 'foo) can't find a particular binary file, but can find the
	source code, it should
		pop up a menu with the choices:
		Load source code
		load source and compile it
		load other file

	in any event make-system should not prevent you from loading s source file as it does now.

    No.  It the responsibility of whoever is maintaining the system (i.e. whoever
    wrote the defsystem) to set up the defsystem to do the right one of these
    things.  It is never right for a random user to have to make this decision.
    (Imagine, for example, what would happen if she made the wrong choice and then
    did a disk-save).

If make-system ws easier to use I might agree with you.
I don't know the syntax for specifying what you said is possible with the current
make-system. Sinc Henry doesn't either, its not commonly known.
Please tell me what it is.

...
DEG, we both know that make-system has lots of problems.
I'm glad that you are concerned about it.
Not many other people seem to be.
Another related feature I have wanted for a long time, that I
bet Henry was alluding to, was just being able to load the sources from
make-system, regardless of whether or not the binaries are available.
the syntax might be
(make-system 'foo :load-sources)
And, like for the rest of the cases where :noconfirm is used,
noconfirm should be true by default.
:confirm should be used explicitly if you want to be asked questions.
28-May-84 21:50:29-EDT,2562;000000000000
Received: from MIT-LISPM-3 by MIT-OZ via Chaosnet; 28 May 84 21:49-EDT
Date: Monday, 28 May 1984, 21:46-EDT
From: Edward H Lay <EHL at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In Don't-dump-a-band! Inconsistent (unreleased patches loaded) System 98.49,
CADR 3.6, ZMail 53.17, MIT-Specific 22.0, microcode 309, ZM MIT,
on Lisp Machine Three:


Insert your description of the circumstances here:

Tried to load patches.  Blew out while in the middle (36%) of loading
SYSTEM-98-50.QFASL

>>ERROR: Name conflicts created by EXPORT in package SYSTEM:
SYSTEM:PRINTING-RANDOM-OBJECT causes a conflict in package SYSTEM-INTERNALS.

Backtrace from the debugger:

EXPORT (P.C. = 205)

 Arg 0 (SYMBOLS): SYSTEM:PRINTING-RANDOM-OBJECT
 Arg 1 (PKG): #<Package SYSTEM 41043451>
   --Defaulted args:--
 Arg 2 (FORCE-FLAG): NIL
Local 0 (CONFLICTS): ((SYSTEM:PRINTING-RANDOM-OBJECT #<Package SYSTEM-INTERNALS 33640020> ** **))
Local 1: NIL
Local 2 (P1): #<Package CADR 41000020>
Local 3: NIL
Local 4 (SYMBOL): SYSTEM:PRINTING-RANDOM-OBJECT
Local 5 (CANDIDATES): NIL
Local 6 (SYM): NIL
Local 7 (INDEX): NIL
Local 8: NIL


SI:PKG-WITH-SUBPACKAGES-STORE (P.C. = 33)

 Arg 0 (HASH): 32631444
 Arg 1 (SYM): SYSTEM:PRINTING-RANDOM-OBJECT
 Arg 2 (PKG): #<Package SYSTEM 41043451>


Additional information supplied with call:
 Expecting 3 values

INTERN (P.C. = 314)

 Arg 0 (SYM): SYSTEM:PRINTING-RANDOM-OBJECT
 Arg 1 (PKG): #<Package SYSTEM 41043451>
Local 0 (HASH): 32631444
Local 1 (STR): "PRINTING-RANDOM-OBJECT"
Local 2 (LEN): 5037
Local 3 (X): NIL
Local 4 (Y): NIL
Local 5 (I): 2333
Local 6: NIL
Local 7 (PKG): #<Package GLOBAL 41111623>


SYSTEM:FASL-OP-PACKAGE-SYMBOL (P.C. = 222)

Local 0 (LEN): 2
Local 1 (DOUBLE-COLON): NIL
Local 2 (I): 0
Local 3 (SYM): NIL
Local 4 (FLAG): NIL
Local 5 (PKG-IN): NIL


SI:FASL-GROUP (P.C. = 132)

Local 0 (FASL-GROUP-BITS): 100160
Local 1 (FASL-GROUP-TYPE): 60


Remainder of stack:

SI:FASL-NEXT-VALUE (P.C. = 22)
SYSTEM:FASL-OP-LIST (P.C. = 117)
SI:FASL-GROUP (P.C. = 132)
SI:FASL-NEXT-VALUE (P.C. = 22)
SYSTEM:FASL-OP-LIST (P.C. = 117)
SI:FASL-GROUP (P.C. = 132)
SI:FASL-NEXT-VALUE (P.C. = 22)
SYSTEM:FASL-OP-LIST (P.C. = 117)
SI:FASL-GROUP (P.C. = 132)
SI:FASL-NEXT-VALUE (P.C. = 22)
...
FS:LOAD-1 (P.C. = 374)
LOAD (P.C. = 115)
LOAD-PATCHES (P.C. = 1267)
SI:EVAL1 (P.C. = 1324)
SI:EVAL-ABORT-TRIVIAL-ERRORS (P.C. = 61)
SI:LISP-TOP-LEVEL1 (P.C. = 426)
SI:LISP-TOP-LEVEL2 (P.C. = 27)
SI:PROCESS-TOP-LEVEL (P.C. = 246)
SI:LISP-TOP-LEVEL (P.C. = 47)
29-May-84 11:20:09-EDT,1317;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 29 May 84 11:18-EDT
Date: Tue, 29 May 84 11:14 EDT
From:  <TOMR%MIT-OZ@MIT-MC.ARPA>
Subject: GC Throws Machine Irretreivably into FEP
To: BUG-LISPM@MIT-MC.ARPA
Cc: MPSG%MIT-OZ@MIT-MC.ARPA

In Release 5.0 [Beta Test rev 7], FEP 18, on Lisp Machine Apiary-5 (3600):

This is a recurring problem that is, unfortunately, difficult to 
reproduce.  Nevertheless, it randomly rears its ugly head, throwing
the machine into the FEP and forcing a COLD-BOOT.
The program counters, etc., when asked to show status are:

FEP LBus Control: Use Uncorrected Data, Ignore Double ECC Error, Task 3 Dismiss
Sequencer Error Status: Microcode Halted
Sequencer Miscellaneous Status: Tsk-Stop (Sequencer Stopped), Errhalt Sync
3600 Program Counters:
Macro PC/(even) 1277700
->OPC+0/ 46477       OPC+10/44064
OPC+1/ 55523         OPC+11/40414
OPC+2/  6435         OPC+12/40410
OPC+3/10110          OPC+13/43737
OPC+4/43737          OPC+14/43361
OPC+5/41137          OPC+15/42632
OPC+6/50107          OPC+16/42631
OPC+7/44065          OPC+17/54000


Whatever can be done about this error would be most appreciated,
as large systems frequently exhaust flip space during compiles
and make-systems.  Hence, this becomes a very annoying situation.

Thanks,

TOMR
29-May-84 14:36:36-EDT,2523;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 29 May 84 14:31-EDT
Date: Tuesday, 29 May 1984, 14:25-EDT
From:  <cory at MIT-TWEETY-PIE>
Subject: Namespaces stink!
To: BUG-LISPM at MIT-OZ

In Release 5.0 [Beta Test rev 7], on Lisp Machine Tweety Pie (3600):

Just thought I'd bother you about this since it really bothers me not be able to boot my machine!

>>Error: The site :SLA does not have a local namespace to be updated in.
While in the function (:METHOD NETI:CLASS :NAMESPACE-FOR-OBJECT-UPDATE)  NETI:ADD-OR-CHANGE-OBJECT  NETI:DO-UNKNOWN-OBJECT-FIXUPS

(:METHOD NETI:CLASS :NAMESPACE-FOR-OBJECT-UPDATE):  (P.C. = 106)
   Arg 0 (SELF): #<CLASS SITE 76261512>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NETI:CLASS -- 1. IV's, 0. FL's 104041270>
   Arg 2 (OPERATION): :NAMESPACE-FOR-OBJECT-UPDATE
   Arg 3 (OBJECT-NAME): :SLA
   Arg 4 (OBJECT-PROPERTY-LIST): NIL
   Local 5 (.SELECTQ-ITEM.): :SITE

NETI:ADD-OR-CHANGE-OBJECT:  (P.C. = 350)
   Arg 0 (CLASS-NAME): :SITE
   Arg 1 (NAME): :SLA
   Arg 2 (PROPERTY-LIST): NIL

NETI:DO-UNKNOWN-OBJECT-FIXUPS:  (P.C. = 140)
   Arg 0 (DECACHE-FIRST): T

NETI:QUERY-NAMESPACE-SERVER:  (P.C. = 426)
   Arg 0 (CLASS): :CLASS
   Arg 1 (NAMESPACE): #<NAMESPACE SCRC 75213223>
   Rest arg (PROPERTY-LIST): (:NAME :HOST :TIMESTAMP 2356)

(:METHOD NET:OBJECT :CHECK-VALIDITY):  (P.C. = 201)
   Arg 0 (SELF): #<CLASS HOST 75363672>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NET:OBJECT -- 3. IV's, 1. FL's 104041254>
   Arg 2 (OPERATION): :CHECK-VALIDITY
   Arg 3 (RELATIVE-TO-NAMESPACE): #<NAMESPACE SCRC 75213223>

(:METHOD NET:OBJECT :CHECK-VALIDITY):  (P.C. = 30)
   Arg 0 (SELF): #<CLASS HOST 75363672>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NET:OBJECT -- 3. IV's, 1. FL's 104041254>
   Arg 2 (OPERATION): :CHECK-VALIDITY
   Arg 3 (RELATIVE-TO-NAMESPACE): NIL

NETI:FIND-OBJECT-NAMED-IN-NAMESPACE:  (P.C. = 45)
   Arg 0 (CLASS): :CLASS
   Arg 1 (NAME): :HOST
   Arg 2 (NAMESPACE): #<NAMESPACE MIT 76011143>
   Arg 3 (ERROR-P): NIL

NET:FIND-OBJECT-NAMED:  (P.C. = 41)
   Arg 0 (CLASS): :CLASS
   Arg 1 (NAME): :HOST

Rest of stack:
(:METHOD NET:OBJECT :UNCLAIMED-MESSAGE):  (P.C. = 5)
SI:FLAVOR-UNCLAIMED-MESSAGE:  (P.C. = 20)
SI:INSTANCE-HASH-UNCLAIMED-MESSAGE:  (P.C. = 35)
NETI:SET-LOCAL-HOST-VARIABLES:  (P.C. = 34)
SI:*EVAL:  (P.C. = 370)
INITIALIZATIONS:  (P.C. = 42)
NETI:INITIALIZE-NAMESPACES-AND-NETWORK:  (P.C. = 131)
LISP-REINITIALIZE:  (P.C. = 435)
SI:LISP-TOP-LEVEL:  (P.C. = 3)
29-May-84 15:11:12-EDT,2745;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 29 May 84 14:46-EDT
Received: from SCRC-AMSTEL by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 40844; Tue 29-May-84 11:55:18-EDT
Date: Tue, 29 May 84 11:53 EDT
From: New FEP system <DCP@SCRC-STONY-BROOK.ARPA>
Subject: GC Throws Machine Irretreivably into FEP
To: TOMR%MIT-OZ@SCRC-STONY-BROOK.ARPA, BUG-LISPM@MIT-MC.ARPA
cc: MPSG%MIT-OZ@SCRC-STONY-BROOK.ARPA, Joseph@SCRC-STONY-BROOK.ARPA
In-Reply-To: The message of 29 May 84 11:14-EDT from TOMR at MIT-OZ

    Date: Tue, 29 May 84 11:14 EDT
    From:  <TOMR%MIT-OZ@MIT-MC.ARPA>

    In Release 5.0 [Beta Test rev 7], FEP 18, on Lisp Machine Apiary-5 (3600):

    This is a recurring problem that is, unfortunately, difficult to 
    reproduce.  Nevertheless, it randomly rears its ugly head, throwing
    the machine into the FEP and forcing a COLD-BOOT.
    The program counters, etc., when asked to show status are:

    FEP LBus Control: Use Uncorrected Data, Ignore Double ECC Error, Task 3 Dismiss
    Sequencer Error Status: Microcode Halted
    Sequencer Miscellaneous Status: Tsk-Stop (Sequencer Stopped), Errhalt Sync
    3600 Program Counters:
    Macro PC/(even) 1277700
This is SI:STACK-GROUP-CALL at the %STACK-GROUP-SWITCH instruction
I determined you were running TMC5-MIC version 270
    ->OPC+0/  46477	(ERROR-TRAP TRUE)
      OPC+1/  55523	ERROR-TRAP
      OPC+2/   6435	(nop'd) (%STACK-GROUP-SWITCH 2 TRAP)
      OPC+3/  10110	(nop'd) (%STACK-GROUP-SWITCH 2)
      OPC+4/  43737	<waiting for memory>
      OPC+5/  41137	MEMREAD
      OPC+6/  50107	(%STACK-GROUP-SWITCH 1)
      OPC+7/  44065	(%STACK-GROUP-SWITCH TRUE)
      OPC+10/ 44064	%STACK-GROUP-SWITCH

    Whatever can be done about this error would be most appreciated,
    as large systems frequently exhaust flip space during compiles
    and make-systems.  Hence, this becomes a very annoying situation.

As far as I can tell, the stack group was not resumable.  There were
several bugs that were fixed and improvements made to make the system
less prone to this error.  One thing to avoid for now:	Don't type
c-Abort while an error is happening.  Doing so at the wrong time could
leave the bit on.  Among other things, you should try getting a real
Release 5.0 (which may come with a different microcode).  I can never
remember the file of what patches made it into Release 5.0.  If Joseph
sends me a pathname I promise to write it on my whiteboard.  Also, on
the Release 5.0 source tape there is a file called V18-debug.flod.  You
should put this on your FEP filesystem and use the FEP command Load Fep
to load it when your machine crashes.  I think this is described in the
Release 5.0 coverletter someplace.

29-May-84 15:58:42-EDT,834;000000000001
Received: from MIT-MC by MIT-OZ via Chaosnet; 29 May 84 15:37-EDT
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 41032; Tue 29-May-84 15:25:27-EDT
Date: Tue, 29 May 84 15:26 EDT
From: "David A. Moon" <Moon@SCRC-QUABBIN.ARPA>
Subject: Referenced but not defined
To: Kent M Pitman <KMP@MIT-MC.ARPA>
Cc: BUG-LISPM@MIT-MC.ARPA
In-reply-to: The message of 28 May 84 14:18-EDT from Kent M Pitman <KMP at MIT-MC>

    Date: 28 May 1984 14:18-EDT
    From: Kent M Pitman <KMP @ MIT-MC>

    In Symbolics Release 4.5 on Avatar (CADR):

    If (FOO X) is seen by the compiler but FOO is not defined, then later
    FOO is defined by DEFMACRO, the compiler does not warn that FOO was
    referenced but not defined.

In the current release you get a warning explaining exactly what happened.

30-May-84 09:46:51-EDT,747;000000000000
Mail-From: RICH created at 30-May-84 09:45:53
Date: 30 May 1984  09:45 EDT (Wed)
Message-ID: <RICH.12019452744.BABYL@MIT-OZ>
From: Charles Rich <RICH@MIT-OZ>
To:   cstacy@MIT-OZ
Subject: Release 5 Beta 7 on Sinatra
CC:   Info-Lispm@MIT-OZ

Chris - Whoever (I thought it might be you) installed the
new FEP0:>Rel5.boot.2 on Sinatra for Release 5 Beta 7
made a slight error by putting a comment (in parens)
in the text of the boot file which had an actual Beta
character in it.  This caused the boot to blow
up when it tried to read that character.  I fixed
it by changing the beta to be spelled out as "Beta".
Please not for other machines.  Note however that special
characters in the file label comments seem to work
ok.
		-CR
30-May-84 09:48:50-EDT,1489;000000000000
Received: from MIT-GRIZZLY by MIT-OZ via Chaosnet; 30 May 84 09:47-EDT
Date: Wednesday, 30 May 1984, 09:44-EDT
From: Scott Cyphers <sr.ehpyc at MIT-SPEECH>
Subject: File Server lossage
To: BUG-lispm at MIT-OZ

In Release 5.0 [Beta Test rev 7], Experimental MIT 1.2, Spire-Macros 1.6,
Compute 1.3, Attribute 1.4, Audio 1.2, Speech-Attributes 1.0,
Display 1.8, Speech-Layouts 1.8, Experimental Versatec 2.0,
Experimental Prtout 1.1, Spire 13.0, SpireX 10.3, FEP 18, on Lisp Machine Grizzly (3600):

One of the really big losses on the file system is that accessing files
conses a lot on the server machine.  It really shouldn't be necessary to
cons at all when file serving.  We can't even back up Goldy without
running out of memory, and it only has two eagles.  That was with the GC
on; it conses faster than it can GC, so after ten tapes or so the GC
stopped being useful.

Also, it takes forever to back up two eagles, and we will have more in
the future.  We have effectively implemented structures by having a few
top level directories which we back up one at a time.  It would be a lot
better if there was some kind of organized support for "Partial"
complete backups, particularly since a full back conses its way out of
memory right now.

And, finally, I hope you are working on local high density tape drive
support for 3600s.  Going over the network has us on our 20th reel in
its second day of complete backing up, and that's ethernet the whole
way.
30-May-84 10:05:41-EDT,548;000000000000
Received: from MIT-EECS by MIT-OZ via Chaosnet; 30 May 84 10:04-EDT
Date: Wednesday, 30 May 1984, 09:57-EDT
From:  <PONDY at MIT-PYGMALION>
Subject: DIAL:
To: BUG-LISPM at MIT-OZ

In Release 5.0 [Beta Test rev 7], FEP 18, on Lisp Machine Apiary-4 (3600):

It is an incredible pain for the system to give an error whenever it does anything
to do with the network (like booting, loging in, connecting to OZ, whatever)
just because some non-existant host called DIAL is messed up somewhere.  Why 
can't this be fixed permanently?

PONDY
30-May-84 11:11:11-EDT,1118;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 30 May 84 11:10-EDT
Received: from SCRC-AMSTEL by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 41469; Wed 30-May-84 10:53:36-EDT
Date: Wednesday, 30 May 1984, 10:52-EDT
From: New FEP system <DCP at SCRC-TENEX>
Subject: File Server lossage
To: Scott Cyphers <sr.ehpyc at MIT-SPEECH>, BUG-lispm at MIT-OZ
In-Reply-To: The message of 30 May 84 09:44-EDT from Scott Cyphers <sr.ehpyc at MIT-SPEECH>

One thing to check is how fast FS:PATHNAME-AREA is growing while you are
doing the backup.  It probably interns every single pathname there is in
your filesystem.  FS:PATHNAME-AREA is static so it can cause the GC to
get behind.

There is a 243 patch that causes pathname components to be consed in
WORKING-STORAGE-AREA and copied to FS:PATHNAME-AREA if the pathname is
really interned.  This might help, depending on how much junk it is
really consing in FS:PATHNAME-AREA.  You can probably find the patch and
experiment.  I doubt it is a critical enough thing to be migrated to a
future Release 5 patch release.  It may be if we have the time.
30-May-84 13:49:26-EDT,2667;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 30 May 84 13:40-EDT
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 41560; Wed 30-May-84 13:36:54-EDT
Date: Wednesday, 30 May 1984, 13:37-EDT
From: David A. Moon <Moon at SCRC-TENEX>
Subject: File Server lossage
To: Scott Cyphers <sr.ehpyc at MIT-SPEECH>, bug-lmdoc at SCRC-TENEX
Cc: BUG-lispm at MIT-OZ
In-reply-to: The message of 30 May 84 09:44-EDT from Scott Cyphers <sr.ehpyc at MIT-SPEECH>
Message-ID: <840530133715.3.MOON@EUPHRATES.SCRC.Symbolics>

    Date: Wednesday, 30 May 1984, 09:44-EDT
    From: Scott Cyphers <sr.ehpyc at MIT-SPEECH>

    One of the really big losses on the file system is that accessing files
    conses a lot on the server machine.  It really shouldn't be necessary to
    cons at all when file serving.  We can't even back up Goldy without
    running out of memory, and it only has two eagles.  That was with the GC
    on; it conses faster than it can GC, so after ten tapes or so the GC
    stopped being useful.

It's not supposed to be possible to cons faster than it can GC.  If what you
really mean is that it conses good data or data in a static area (in either case,
not garbage that the GC can reclaim) until it fills up virtual memory, then
you may need to increase the size of virtual memory (the amount of disk space
dedicated to paging).

BUG-LMDOC: If this is documented, I can't find it.  The documentation should
include the following paragraph, in SIG, SITE, or STOR.

You can add more paging space on any disk.  Create a file to be used for
paging, named (for example) FEP3:>Extra-page.page, then edit your boot file
(FEP0:>Boot.boot) to contain the following line immediately after the
Load World command:
	Add Paging FEP3:>Extra-page.page
substituting the particular file name and disk unit number you chose, of
course.  This will take effect the next time you cold boot.
One way to create a FEP file of a particular size is to evaluate
the form (with a size of 10000 blocks as an example):
	(close (open "FEP3:>Extra-page.page" :direction :output
		     :estimated-length (* 10000. 1152.)))
The magic number 1152. is the number of 8-bit bytes per FEP-file-system block.

If the problem is not lack of virtual memory, but that the garbage collector
really fails to collect garbage fast enough, I would definitely like to hear
more details.

    And, finally, I hope you are working on local high density tape drive
    support for 3600s.

You should ask your sales representative about this; he'll probably be
happy to push the product that I think was recently announced.
30-May-84 14:05:16-EDT,1315;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 30 May 84 13:54-EDT
Date: Wednesday, 30 May 1984, 13:51-EDT
From:  <MARC at MIT-MINNIE-MOUSE>
Subject: ZMACS bug
To: BUG-LISPM at MIT-OZ

In Release 5.0 [Beta Test rev 7], FEP 18, on Lisp Machine Minnie Mouse (3600):

When trying to kill windows in ZMACS, got into funny state and could not get back
to editor top-level...

>>Trap: The first argument given to the SYS:%INSTANCE-REF instruction, NIL, was not an instance.
While in the function ZWEI:REDISPLAY-MODE-LINE  (:METHOD ZWEI:EDITOR :EDIT)  (:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT)

ZWEI:REDISPLAY-MODE-LINE:  (P.C. = 3)

(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 23)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 77133001>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:EDITOR -- 11. IV's, 0. FL's 105007364>
   Arg 2 (OPERATION): :EDIT
   --Defaulted args:--
   Arg 3 (TOP-LEVEL-P): T
   Arg 4 (DESCRIPTION): NIL

(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 41)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 77133001>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:TOP-LEVEL-EDITOR -- 12. IV's, 1. FL's 105007335>
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)

SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
   Arg 0 (IGNORE): NIL
30-May-84 14:21:03-EDT,1819;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 30 May 84 14:16-EDT
Received: from SCRC-CONCORD by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 41595; Wed 30-May-84 14:13:40-EDT
Date: Wednesday, 30 May 1984, 14:14-EDT
From: Bernard S. Greenberg <BSG at SCRC-TENEX>
Subject: File Server lossage
To: sr.ehpyc at MIT-SPEECH, BUG-lispm at MIT-OZ
In-reply-to: The message of 30 May 84 09:44-EDT from Scott Cyphers <sr.ehpyc at MIT-SPEECH>

    Date: Wednesday, 30 May 1984, 09:44-EDT
    From: Scott Cyphers <sr.ehpyc at MIT-SPEECH>

    One of the really big losses on the file system is that accessing files
    conses a lot on the server machine.  It really shouldn't be necessary to
    cons at all when file serving.  We can't even back up Goldy without
    running out of memory, and it only has two eagles.  That was with the GC
    on; it conses faster than it can GC, so after ten tapes or so the GC
    stopped being useful.
Something unclear is clearly rotten.  Our servers run night and day,
and have incremental, complete, and consolidated dumps taken without
memory-space problems.
    Also, it takes forever to back up two eagles, and we will have more in
    the future.  We have effectively implemented structures by having a few
    top level directories which we back up one at a time.  It would be a lot
    better if there was some kind of organized support for "Partial"
    complete backups, particularly since a full back conses its way out of
    memory right now.
Do you know about [Restart Pathname]?  See the Dumper documentation in
Magnum Opus Symbolicorum VIII ("Site").  You can break up a complete
dump into any number of fits.
    And, finally, I hope you are working on local high density tape drive
    support for 3600s.  
It is quite on the way.
30-May-84 15:41:53-EDT,1046;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 30 May 84 15:25-EDT
Date: 30 May 1984  15:26 EDT (Wed)
Message-ID: <SR.EHPYC.12019514711.BABYL@MIT-SPEECH>
From: Scott Cyphers <SR.EHPYC@MIT-SPEECH>
To:   "David A. Moon" <Moon@SCRC-TENEX>
Cc:   BUG-lispm@MIT-OZ, bug-lmdoc@SCRC-TENEX
Subject: File Server lossage
In-reply-to: Msg of 30 May 1984 13:37-EDT from David A. Moon <Moon at SCRC-TENEX>

From DCP's comment, it looks like the problem is that the file names
are interned in a static area, so in a day or two I'll set up some
process to monitor the appropriate area and see how it grows, and
maybe try out the 243 patch.  At least for the present, we'd like to
keep the virtual memory down on Goldy and use the file space instead,
until we get some more Eagles.  It really shouldn't be necessary to do
much consing to find a file and send it off over the net.  There must
be a maximum any server could need.

I have some Rel 4.5 Cadr stuff that can cons faster than the GC can
uncons it.  I'll see how it does in Rel 5.
30-May-84 20:20:30-EDT,856;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 30 May 84 20:18-EDT
Date: Wednesday, 30 May 1984, 20:13-EDT
From:  < at MIT-OZ>
Subject: Interesting.
To: BUG-LISPM at MIT-OZ

    This data and information is proprietary to, and a valuable trade
    secret of, Symbolics, Inc.  ...
    
    The technical data and information provided herein are provided with
    `limited rights', and the computer software provided herein is provided
    with `restricted rights' as those terms are defined in DAR and ASPR 7-104.9(a).

Please forward me a copy of "DAR and ASPR 7-104.9(a)" so that I may be
certain that I am making proper use of your software.

Also I would appreciate some clarification about the status of the
defstruct source code which now seems to have a Symbolics trade secret
notification at the front (before the MIT copyrights).
30-May-84 20:27:43-EDT,1107;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 30 May 84 20:25-EDT
Date: Wednesday, 30 May 1984, 20:18-EDT
From: Alan at MIT-MC
Sender:  at MIT-OZ
Subject: Interesting.
To: BUG-LISPM at MIT-OZ

[Sorry about the version of this message without a From field.  I must
have told this machine about 20 times that my name was "Alan", but since
I refused to log in as Alan at some specific host it seems to have
ignored me.]

    This data and information is proprietary to, and a valuable trade
    secret of, Symbolics, Inc.  ...
    
    The technical data and information provided herein are provided with
    `limited rights', and the computer software provided herein is provided
    with `restricted rights' as those terms are defined in DAR and ASPR 7-104.9(a).

Please forward me a copy of "DAR and ASPR 7-104.9(a)" so that I may be
certain that I am making proper use of your software.

Also I would appreciate some clarification about the status of the
defstruct source code which now seems to have a Symbolics trade secret
notification at the front (before the MIT copyrights).
31-May-84 02:04:23-EDT,618;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 31 May 84 02:03-EDT
Date: Thursday, 31 May 1984, 02:00-EDT
From: Harry L. Voorhees <HLV at MIT-OZ>
Subject: compiling buffer bug
To: BUG-LISPM at MIT-OZ

In Release 5.0 [Beta Test rev 7], on Lisp Machine Robot-4 (3600):

For some reason, when doing a compile buffer (the file is
oz:ps:<hlv.edge>filter.lisp), I go into Fep> with a message "Lisp
stopped itself".  Typing "continue" successfully finishes the
compilation, but why should the machine go into Fep> in the first place?
This has happened on a previous occasion too.  Thanks.						

Harry Voorhees
31-May-84 02:48:00-EDT,1862;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 31 May 84 02:46-EDT
Date: 31 May 1984  02:47 EDT (Thu)
Message-ID: <SR.EHPYC.12019638697.BABYL@MIT-SPEECH>
From: Scott Cyphers <SR.EHPYC@MIT-SPEECH>
To:   New FEP system <DCP@SCRC-TENEX>
Cc:   BUG-lispm@MIT-OZ
Subject: File Server lossage
In-reply-to: Msg of 30 May 1984 10:52-EDT from New FEP system <DCP at SCRC-TENEX>

I started with a freshly booted Goldy, and did (fs:directory-list
"goldy:>**>*.*.*") from Grizzly and watched the size (as given by
room) of working-storage-area and fs:pathname-area.  After a while,
when it had gotten into the part where Goldy was sending the pathnames
to Grizzly, there was about 1300K used for fs:pathname-area, and about
3300K for working storage.  Subtracting off the initial values shows
that the fs:pathname-area is growing at half the rate of working
storage.  If that's the typical growth ratio, it's easy to see why
after a day of service the GC is going to start losing, since I've got
things set up with only 15000K swapping space, and I can't really add
any paging area since the file partition wouldn't like that.

To me, at least, it seems like 1300k is an awful lot of overhead for a
file system, particularly since it's static.  Making it dynamic loses
because then you lose half the free space you'd have with it static.
However, I also can't see how anything but the pathnames for things
for Goldy itself should have any pointers to them.  I'm 4/3s asleep
right now, but it seems like if the file server and backup stuff had a
dynmaic area, something like fs:temp-pathname-area, and it bound
fs:pathname-area to fs:temp-pathname-area in its processes, that would
at least let it get GC'd, and the GC ought to be able to reclaim all
of it if the severs and backup are all idle, and a good part of it
when they aren't idle.
31-May-84 03:43:46-EDT,1123;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 31 May 84 03:43-EDT
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 41913; Thu 31-May-84 03:40:30-EDT
Date: Thursday, 31 May 1984, 03:36-EDT
From: David A. Moon <Moon at SCRC-TENEX>
Subject: compiling buffer bug
To: Harry L. Voorhees <HLV at MIT-OZ>
Cc: BUG-LISPM at MIT-OZ
In-reply-to: The message of 31 May 84 02:00-EDT from Harry L. Voorhees <HLV at MIT-OZ>
Message-ID: <840531033658.3.MOON@EUPHRATES.SCRC.Symbolics>

    Date: Thursday, 31 May 1984, 02:00-EDT
    From: Harry L. Voorhees <HLV at MIT-OZ>

    In Release 5.0 [Beta Test rev 7], on Lisp Machine Robot-4 (3600):

    For some reason, when doing a compile buffer (the file is
    oz:ps:<hlv.edge>filter.lisp), I go into Fep> with a message "Lisp
    stopped itself".  Typing "continue" successfully finishes the
    compilation, but why should the machine go into Fep> in the first place?
    This has happened on a previous occasion too.  Thanks.						

Read pages 14-21 of NETIO, in binder 7 of the Release 5.0 documents you 
received recently.
31-May-84 09:38:43-EDT,1188;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 31 May 84 09:36-EDT
Received: from SCRC-AMSTEL by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 57087; Thu 31-May-84 09:32:25-EDT
Date: Thursday, 31 May 1984, 09:31-EDT
From: New FEP system <DCP at SCRC-TENEX>
Subject: File Server lossage
To: Scott Cyphers <SR.EHPYC at MIT-SPEECH>,
    New FEP system <DCP at SCRC-TENEX>
cc: BUG-lispm at MIT-OZ
In-Reply-To: <SR.EHPYC.12019638697.BABYL@MIT-SPEECH>

I don't think any of your solutions is workable in the current scheme.
Pathnames are currently interned, so listing goldy:>**>*.*.* will intern
the pathname of every file in goldy's filesystem, and will do the
interning on both goldy and the machine from which you requested the
listing.  Your fs:temp-pathname-area idea won't help because it has the
same effect as making fs:pathname-area dynamic.  Namely, because it is
dynamic and because pathnames are interned (and never go away except for
hacks in FULL-GC) you loose twice their amount of storage (once for the
original, one for the copy after the GC flips).  I would like to see the
growth of fs:pathname-area vs. working-storage-area with patch 243.646
loaded.
31-May-84 10:21:49-EDT,870;000000000000
Mail-From: RICH created at 31-May-84 10:21:00
Date: 31 May 1984  10:20 EDT (Thu)
Message-ID: <RICH.12019721281.BABYL@MIT-OZ>
From: Charles Rich <RICH@MIT-OZ>
To:   bug-lispm@MIT-OZ
Subject: [RICH: Release 5 Beta 7 on Sinatra]

Date: Wednesday, 30 May 1984  09:45-EDT
From: Charles Rich <RICH>
To:   cstacy
cc:   Info-Lispm
Re:   Release 5 Beta 7 on Sinatra

Chris - Whoever (I thought it might be you) installed the
new FEP0:>Rel5.boot.2 on Sinatra for Release 5 Beta 7
made a slight error by putting a comment (in parens)
in the text of the boot file which had an actual Beta
character in it.  This caused the boot to blow
up when it tried to read that character.  I fixed
it by changing the beta to be spelled out as "Beta".
Please not for other machines.  Note however that special
characters in the file label comments seem to work
ok.
		-CR
31-May-84 10:55:47-EDT,534;000000000000
Received: from MIT-XX by MIT-OZ via Chaosnet; 31 May 84 10:54-EDT
Date: Thu 31 May 84 10:55:36-EDT
From: John M. Lucassen <LUCASSEN@MIT-XX>
Subject: Auto-save mode
To: bug-lispm@MIT-OZ

Does 3600-Emacs (as found on MIT-MICKEY-MOUSE) have an
auto-save mode? One that works for remote edits? Can it be
established as a default for all file types by means of my
INIT file?

By the way, what's the best way to get the system going when
`LISP stopped itself' and there are unsaved editor buffers?

John M. Lucassen
-------
31-May-84 11:42:33-EDT,919;000000000000
Received: from SCRC-YUKON by MIT-OZ via Chaosnet; 31 May 84 11:39-EDT
Received: from SCRC-AMSTEL by SCRC-YUKON via CHAOS with CHAOS-MAIL id 44034; Thu 31-May-84 11:36:27-EDT
Date: Thursday, 31 May 1984, 11:33-EDT
From: New FEP system <DCP at SCRC-TENEX>
Subject: Auto-save mode
To: John M. Lucassen <LUCASSEN at MIT-XX>, bug-lispm at MIT-OZ
In-Reply-To: The message of 31 May 84 10:55-EDT from John M. Lucassen <LUCASSEN at MIT-XX>

    Date: Thu 31 May 84 10:55:36-EDT
    From: John M. Lucassen <LUCASSEN@MIT-XX>

    By the way, what's the best way to get the system going when
    `LISP stopped itself' and there are unsaved editor buffers?

See pages 14 to 21 of NETIO.  If the error did not trash your machine,
you might be able to warm boot by typing Start.  There is also a
debugger that runs in the FEP that lets you poke around.  A coverletter
is being prepared giving some details of this.
31-May-84 11:51:59-EDT,846;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 31 May 84 11:51-EDT
Date: 31 May 1984  11:51 EDT (Thu)
Message-ID: <SR.EHPYC.12019737825.BABYL@MIT-SPEECH>
From: Scott Cyphers <SR.EHPYC@MIT-SPEECH>
To:   New FEP system <DCP@SCRC-TENEX>
Cc:   BUG-lispm@MIT-OZ
Subject: File Server lossage
In-reply-to: Msg of 31 May 1984 09:31-EDT from New FEP system <DCP at SCRC-TENEX>

My second idea would probably do some terrible things to locality of
reference, but, whether or not the first idea would work with the
current system, I fail to see the purpose of interning pathnames that
are temporary.  I was hoping they weren't quite so interned as they
seem to be, so that binding an area would make them go away.  I don't
suppose the table they're interned within could be bound.

I'll try the 243-646 patch comparison on Goldy Friday.
31-May-84 12:09:50-EDT,680;000000000000
Mail-From: RICH created at 31-May-84 12:05:44
Date: 31 May 1984  12:05 EDT (Thu)
Message-ID: <RICH.12019740344.BABYL@MIT-OZ>
From: Charles Rich <RICH@MIT-OZ>
To:   info-lispm@MIT-OZ
CC:   Pondy@MIT-OZ, Mark.Robbins@MIT-OZ
Subject: Sinatra and Bing

Please note that the ethernet cable plugs into the
back of Sinatra and Bing have a tendency to get pulled
out (assumedly because someone is mucking around in
the cable nest back there).  The symptom is that these
machines can't talk to anyone at all (e.g. they can't
get the time when you boot).  It would probably help
if the locking brackets on these plugs were improved
(one of them is missing entirely).
		-CR
31-May-84 12:18:11-EDT,1720;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 31 May 84 12:11-EDT
Received: from SCRC-AMSTEL by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 42129; Thu 31-May-84 12:06:59-EDT
Date: Thursday, 31 May 1984, 12:05-EDT
From: New FEP system <DCP at SCRC-TENEX>
Subject: File Server lossage
To: Scott Cyphers <SR.EHPYC at MIT-SPEECH>,
    New FEP system <DCP at SCRC-TENEX>
cc: BUG-lispm at MIT-OZ
In-Reply-To: <SR.EHPYC.12019737825.BABYL@MIT-SPEECH>

    Date: 31 May 1984  11:51 EDT (Thu)
    From: Scott Cyphers <SR.EHPYC@MIT-SPEECH>

    My second idea would probably do some terrible things to locality of
    reference, but, whether or not the first idea would work with the
    current system, I fail to see the purpose of interning pathnames that
    are temporary.  I was hoping they weren't quite so interned as they
    seem to be, so that binding an area would make them go away.  I don't
    suppose the table they're interned within could be bound.

Pathnames are interned so that you can put (user) properties on them and
parsing the same namestring gets the access to the same properties.  The
hack in FULL-GC makes sure pathnames with properties are not GCed and it
tries to forget all other pathnames so they will fail to be copied if
there are other pointers to them.  Indeed, if you happened to know that
there weren't going to be any properties, you might be able cons them in
a dynamic area and flush the entry for them in the hash table.  However,
if you guessed wrong, you now have a pathname in a dynamic area with
possible loss of some locality.  There may be more implications I
haven't though of yet.  On the other hand, the problems may not be
unsolvable.
31-May-84 12:33:20-EDT,1541;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 31 May 84 12:32-EDT
Date: Thursday, 31 May 1984, 12:17-EDT
From: Charles Rich <RICH at OZ>
Subject: Mark Page
To: BUG-LISPM at OZ

In Release 4.5, Reasoning Utility Package 14.0, FEP 17,
site configuration 79, on Lisp Machine Bing Crosby:

C-X C-P blows up as below in what looks like a normal context, i.e.

text

text (with cursor)

text

>>Trap: The subscript given to AR-1, 0, on "" was beyond the length, 0.
While in the function ZWEI:MARK-PAGE-INTERNAL  ZWEI:COM-MARK-PAGE  ZWEI:COMMAND-EXECUTE

ZWEI:MARK-PAGE-INTERNAL:  (P.C. = 25)
   Arg 0 (BP): ("" 0 :NORMAL)
   Arg 1 (ARG): 0

ZWEI:COM-MARK-PAGE:  (P.C. = 16)

ZWEI:COMMAND-EXECUTE:  (P.C. = 65)
   Arg 0 (COMMAND): ZWEI:COM-MARK-PAGE
   Arg 1 (CHAR): 336
   Arg 2 (PREFIX-CHAR): 344
   --Defaulted args:--
   Arg 3 (HOOK-LIST): NIL

ZWEI:MAKE-EXTENDED-COMMAND-INTERNAL:  (P.C. = 106)

SYS:CALL-FUNNY-FUNCTION:  (P.C. = 73)
   Arg 0 (FUNCTION): #<DTP-CLOSURE 43040072>
   Rest arg (ARGS): NIL

Closure of ZWEI:MAKE-EXTENDED-COMMAND-INTERNAL:

ZWEI:COMMAND-EXECUTE:  (P.C. = 65)
   Arg 0 (COMMAND): #<DTP-CLOSURE 43040072>
   Arg 1 (CHAR): 344
   Arg 2 (PREFIX-CHAR): NIL
   Arg 3 (HOOK-LIST): (ZWEI:SHIFT-LOCK-HOOK)

ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 20)
   Arg 0 (CH): 344

Rest of stack:
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 173)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 42)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
31-May-84 12:42:37-EDT,615;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 31 May 84 12:40-EDT
Date: 31 May 1984  12:40 EDT (Thu)
Message-ID: <SR.EHPYC.12019746766.BABYL@MIT-SPEECH>
From: Scott Cyphers <SR.EHPYC@MIT-SPEECH>
To:   New FEP system <DCP@SCRC-TENEX>
Cc:   BUG-lispm@MIT-OZ
Subject: File Server lossage
In-reply-to: Msg of 31 May 1984 12:05-EDT from New FEP system <DCP at SCRC-TENEX>

Now I see.  Everything does the right thing for the non-server
non-backup case, but unfortunately screws the server case.  It doesn't
look like it's too bad to make it do what I want, so I'll give that a
try and see what happens.
31-May-84 20:49:12-EDT,739;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 31 May 84 20:48-EDT
Date: 31 May 1984  20:49 EDT (Thu)
Message-ID: <SR.EHPYC.12019835642.BABYL@MIT-SPEECH>
From: Scott Cyphers <SR.EHPYC@MIT-SPEECH>
To:   Scott Cyphers <SR.EHPYC@MIT-SPEECH>
Cc:   BUG-lispm@MIT-OZ, New FEP system <DCP@SCRC-TENEX>
Subject: File Server lossage
In-reply-to: Msg of 31 May 1984  02:47-EDT from Scott Cyphers <SR.EHPYC>

The patch didn't really help for the server case, still about 1300k
for a remote fs:directory-list of everything.  Doesn't the server code
cons the things in fs:pathname-area anyways, making the patch not
really apply in this case?  However, I can think of places where it
would help for the things we do on the non servers.
31-May-84 23:03:34-EDT,583;000000000000
Received: from MIT-LISPM-5 by MIT-OZ via Chaosnet; 31 May 84 23:02-EDT
Date: Thursday, 31 May 1984, 23:03-EDT
From: Edward H Lay <ehl at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In Don't-dump-a-band! Inconsistent (unreleased patches loaded) System 98.56,
CADR 3.6, ZMail 53.17, MIT-Specific 22.0, microcode 309, ZM MIT,
on Lisp Machine Five:

while loading in patch-98-50, I got an error that said
PKG-SYSTEM-INTERNALS-PACKAGE not bound or something like that and then
it asked me if I wanted to use SI:PKG-SYSTEM-INTERNALS-PACKAGE (I had to
reply "P" in order to make it work)
31-May-84 23:15:42-EDT,573;000000000000
Mail-From: CJL created at 31-May-84 23:14:54
Date: Thu, 31 May 1984  23:14 EDT
Message-ID: <CJL.12019862165.BABYL@MIT-OZ>
From: Chris Lindblad <CJL@MIT-OZ>
To:   bug-lispm@MIT-OZ
Subject: Fep add paging-file

Could add-paging file check whether or not the file already is a paging
file? I have seen a lot of people lose because they say:
    clear paging-files
    add paging-file >page.page
    add paging-file >page1.page
and are amazed about the swapping space that shows up in the herald when
they boot the machine. (Ohh wow I got something for nothing!)
 1-Jun-84 07:38:56-EDT,770;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 1 Jun 84 07:37-EDT
Date: Friday, 1 June 1984, 07:32-EDT
From: Ken Haase <KWH at MIT-OZ>
Subject: DEFSYSTEM - VMS file name interaction lossage
To: BUG-LISPM at MIT-OZ

In Release 5.0, Experimental MIT 1.4, Experimental ARLO 19.0, FEP 18, on Lisp Machine Janis Joplin (3600):

It seems that the system description files (patch files,
version files, etc) for a system are written out using
the full name of the system, rather than the short name.
Since these files have to exist on real file servers,
there can be conflicts.  Particularly, if the system is
being maintained on VMS server,	the format for system names
is extremely restricted.  Maybe the :SHORT-NAME of the system
should be used instead?

Ken
 1-Jun-84 11:38:00-EDT,1202;000000000000
Received: from SCRC-YUKON by MIT-OZ via Chaosnet; 1 Jun 84 11:36-EDT
Received: from SCRC-AMSTEL by SCRC-YUKON via CHAOS with CHAOS-MAIL id 44314; Fri 1-Jun-84 11:34:33-EDT
Date: Friday, 1 June 1984, 11:32-EDT
From: New FEP system <DCP at SCRC-TENEX>
Subject: Fep add paging-file
To: Chris Lindblad <CJL at MIT-OZ>, bug-lispm at MIT-OZ
In-Reply-To: <CJL.12019862165.BABYL@MIT-OZ>

    Date: Thu, 31 May 1984  23:14 EDT
    From: Chris Lindblad <CJL@MIT-OZ>

    Could add-paging file check whether or not the file already is a paging
    file? 
Probably, but not for some time yet.
    I have seen a lot of people lose because they say:
	clear paging-files
	add paging-file >page.page
	add paging-file >page1.page
    and are amazed about the swapping space that shows up in the herald when
    they boot the machine. (Ohh wow I got something for nothing!)
What you /really/ mean is that you do
	load world
	start
	... run for a while ...
	clear paging-files
	add paging-file >page.page
	add paging-file >page1.page
	start (warm boot)
The sequence you gave in your message is completely valid and should not
cause any problems provided you have not start Lisp running yet.
 1-Jun-84 12:27:08-EDT,2589;000000000000
Received: from MIT-MERLIN by MIT-OZ via Chaosnet; 1 Jun 84 12:26-EDT
Date: Friday, 1 June 1984, 12:21-EDT
From: dick at MIT-OZ
Sender: KBE at MIT-OZ
Subject: interface to KBE dead in 340.
To: BUG-LISPM at MIT-OZ

In Release 4.5, Experimental Knowledge-Based-Editor 340.0, FEP 18,
site configuration 88, on PA Lisp Machine Merlin:

things seem pretty totally broken in vesion 340.  If you try and do "Define a program BB."
you get the following.  If you try and do a "reinitialize database" or "use language"
nothing happens at all, all the processes just wait.  In particular, the apprentice says that it
is waiting for the DB.  Things seem to be working OK when you gives commands directly to
the kbe via (KBE), so the above problems must be just in the interface.

(I don't know if it is relevant, but merlin dropped into the
fep with a "lisp stopped itself" message as well when it was trying to test itself.)

>>Error: The object #<NON-FILE-BUFFER "ada-test" 42066261> received a :FUNCTION-SPEC message, which went unclaimed.
The rest of the message was ()
While in the function CURRENT-EDITOR-DEFINITION-NAME  ASSURE-BUFFERED-DEFINITIONS-CONSISTENT  BUFFER-COMMAND-PRESCAN

CURRENT-EDITOR-DEFINITION-NAME:  (P.C. = 114)
   --Defaulted args:--
   Arg 0 (BP): ("-*- Package: KBE -*-" 0 :NORMAL)
   Arg 1 (ERR?): NIL
   Local 2 (SPEC): NIL
   Local 3 (TYPE): NIL
   Local 4 (NODE): NIL
   Local 5: NIL
   Local 6: NIL
   Local 7 (N): #<NON-FILE-BUFFER "ada-test" 42066261>

ASSURE-BUFFERED-DEFINITIONS-CONSISTENT:  (P.C. = 56)
   Arg 0 (REQUESTS): ((DEFINE NIL (NAME PROGRAM-DEFINITION BB) NIL))

BUFFER-COMMAND-PRESCAN:  (P.C. = 6)
   Arg 0 (REQUESTS): ((DEFINE NIL (NAME PROGRAM-DEFINITION BB) NIL))

SUBMIT-STREAM-CONTENTS-TO-KBE:  (P.C. = 11)
   Arg 0 (STREAM): #<INTERVAL-STREAM 42104100>
   Arg 1 (AWAIT?): T
   Arg 2 (PRESCAN-FUNCTION): #<DTP-COMPILED-FUNCTION BUFFER-COMMAND-PRESCAN 47301244>

EXECUTE-STREAM-CONTENTS:  (P.C. = 14)
   Arg 0 (STREAM): #<INTERVAL-STREAM 42104100>
   --Defaulted args:--
   Arg 1 (UPDATE-BUFFER?): T

SEND-STREAM-CONTENTS:  (P.C. = 11)
   Arg 0 (STREAM): #<INTERVAL-STREAM 42104100>

EDITOR-PROMPT-AND-EXECUTE:  (P.C. = 32)
   Arg 0 (STRING): ""
   Arg 1 (ARG): NIL

COM-KBE-EXECUTE-ANYTHING:  (P.C. = 112)

Rest of stack:
ZWEI:COMMAND-EXECUTE:  (P.C. = 65)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 20)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 173)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 42)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
 1-Jun-84 15:20:28-EDT,1401;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 1 Jun 84 15:13-EDT
Received: from SCRC-HARLEM by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 42906; Fri 1-Jun-84 15:10:43-EDT
Date: Friday, 1 June 1984, 15:11-EDT
From: Joseph R Goldstone <joseph at SCRC-QUABBIN>
Subject: Brave New World for 3600's
To: info-lispm at MIT-OZ

The Release 5.0 world (with several namespace enhancements) is available
for 3600 users.  This world should cure the various boot-time problems common
to the Release 5.0 Beta Test worlds now in use on MIT 3600's.

With the availability of this world, the Release 5.0 product is no longer 
in beta test, hence bug reports should no longer be sent to BUG-BETA-TEST@OZ.
Instead, they should be sent to the appropriate list for the problem, be it
BUG-LISPM, BUG-ZWEI, BUG-ZMAIL, BUG-LMFS, or BUG-SYMBOLICS-HARDWARE.

Software questions (as opposed to bug reports) should be sent to HOSS@SCRC
(Home Office Software Support) or to Dennis Doughty, your Field Software
Support contact (doughty@SCRC).

The new world is available (via si:receive-band) as Release-5-0-plus.load
on the following machines:
 Aspen
 Buddy
 Elvis
 Jimi
 Janis
 Morrison
 
The world takes up 19763 blocks, and requires microcode 270 (the same 
microcode used in Release 5.0 Beta Test Rev 7).

A Release 5 world for CADR's should follow shortly.

-- joseph & Dennis
 1-Jun-84 16:15:02-EDT,3403;000000000000
Received: from SCRC-YUKON by MIT-OZ via Chaosnet; 1 Jun 84 15:45-EDT
Date: Friday, 1 June 1984, 15:42-EDT
From: Robert W. Kerns <RWK at SCRC-YUKON>
Subject: DEFSTRUCT notice
To: bug-lispm at MIT-OZ
Message-ID: <840601154225.5.RWK@YUKON.SCRC.Symbolics>

    Date: Wednesday, 30 May 1984, 20:18-EDT
    From: Alan at MIT-MC
[I am replacing your abridged text with the template from which it is generated.
This appeared in the beta-test version of STRUCT.LISP]

     *****************************************************************************************
     This data and information is proprietary to, and a valuable trade
     secret of, Symbolics, Inc.  It is given in confidence by Symbolics,
     and may only be used as permitted under the license agreement under
     which it has been distributed, and in no other way.
    
    >MIT-COPYRIGHT
    >OTHER-COPYRIGHTS
    >SYMBOLICS-COPYRIGHT
    
     Symbolics (TM), ZetaLisp (TM), and Macsyma (TM), are trademarks of Symbolics, Inc.
    
     The technical data and information provided herein are provided with
     `limited rights', and the computer software provided herein is provided
     with `restricted rights' as those terms are defined in DAR and ASPR 7-104.9(a).
     *****************************************************************************************
    
    Please forward me a copy of "DAR and ASPR 7-104.9(a)" so that I may be
    certain that I am making proper use of your software.

That section defines the software to be of a type covered by
certain government/defense procurement regulations.  DAR and
ASPR 7-104.9(a) shouldn't apply to you unless you are the government
or a defense contractor.  I hope you are not!  But if you are,
now you know what we're giving you.

    Also I would appreciate some clarification about the status of the
    defstruct source code which now seems to have a Symbolics trade secret
    notification at the front (before the MIT copyrights).

As required by our license agreement with MIT (not to mention common
sense and our lawyers), I wrote a tool to update and maintain the
copyright and related notices on our source files.  At the time I wrote
it, I did not realize that STRUCT.LISP was a special case, and so it was
included in the updating.  The error was pointed out to me after the
Beta-test tape was made, and I promptly implemented the capability of
alternate messages for special cases.  I then asked our lawyers for a
message which would allow our modifications to DEFSTRUCT to be shared
with the other users of DEFSTRUCT.  the file STRUCT.LISP now has a new
message, and this version is what is being distributed to all customers.

Below is the message now on the file, which our lawyers assure me will
allow the kind of sharing needed, without asserting any Symbolics proprietary
rights, while protecting the MIT ownership.  Since the Release 5.0 sources
haven't made it to OZ yet, I have copied this one file by hand.  Earlier
versions can be ignored.

******************************************************************************************
    This may only be used as permitted under the license agreement under
    which it has been distributed, and in no other way.
******************************************************************************************

>MIT-COPYRIGHTS
>OTHER-COPYRIGHTS
 1-Jun-84 19:39:36-EDT,4055;000000000000
Received: from MIT-LISPM-3 by MIT-OZ via Chaosnet; 1 Jun 84 19:38-EDT
Date: Friday, 1 June 1984, 19:39-EDT
From: Edward H Lay <ehl at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In Don't-dump-a-band! Inconsistent (unreleased patches loaded) System 98.56,
CADR 3.6, ZMail 53.17, MIT-Specific 22.0, Experimental Boxer 1.0,
microcode 309, ZM MIT, on Lisp Machine Three:


Insert your description of the circumstances here:

The compiler doesn't seem to be looking at EVAL-WHEN

#+MIT
(EVAL-WHEN (LOAD)
  (MAKE-PACKAGE "BOXER-USER"
		':NICKNAMES '(BU BOXER-USERS PKG-BU-PACKAGE PKG-BOXER-USER-PACKAGE)
		':SIZE 1000
		':USE NIL)
  )

>>ERROR: A package named BOXER-USER already exists.
Backtrace from the debugger:

MAKE-PACKAGE (P.C. = 446)

 Arg 0 (NAME): "BOXER-USER"
 Rest arg: (:NICKNAMES (BU BOXER-USERS PKG-BU-PACKAGE PKG-BOXER-USER-PACKAGE) :SIZE 1000. ...)
Local 1 (NICKNAMES): (BU BOXER-USERS PKG-BU-PACKAGE PKG-BOXER-USER-PACKAGE)
Local 2 (USE): NIL
Local 3 (SUPER): NIL
Local 4 (SIZE): 1000.
Local 5 (IGNORE): NIL
Local 6 (SHADOW): NIL
Local 7 (EXPORT): NIL
Local 8 (PREFIX-NAME): NIL
Local 9 (AUTO-EXPORT-P): NIL
Local 10 (INVISIBLE): NIL
Local 11 (IMPORT): NIL
Local 12 (SHADOWING-IMPORT): NIL
Local 13 (IMPORT-FROM): NIL
Local 14 (RELATIVE-NAMES): NIL
Local 15 (RELATIVE-NAMES-FOR-ME): NIL
Local 16 (IGNORE): NIL
Local 17: (NIL)
Local 18 (PROPERTIES): NIL
Local 19 (IGNORE): NIL
Local 20 (IGNORE): NIL
Local 21 (EXTERNAL-ONLY-P): NIL
Local 22 (EXTERNAL-ONLY): NIL
Local 23 (TABLE-SIZE): 1259.
Local 24: #<Package BOXER-USER 41154730>
Local 25 (PKG): #<Package BOXER-USER 41154730>
Local 26 (NICK): NIL
Local 27 (SUCCESS): NIL
Local 28 (NAME): NIL
Local 29 (P): NIL
Local 30: NIL
Local 31: NIL
Local 32 (ELT): NIL


SI:EVAL1 (P.C. = 1324)

 Arg 0 (FORM): (MAKE-PACKAGE "BOXER-USER" (QUOTE :NICKNAMES) (QUOTE **) ...)
   --Defaulted args:--
 Arg 1 (NOHOOK): NIL
Local 0 (ARGNUM): 7.
Local 1 (TEM): NIL
Local 2 (ENV): NIL
Local 3 (TAIL): NIL
Local 4 (FCTN): #<DTP-FEF-POINTER MAKE-PACKAGE 4156735>
Local 5 (ARG-DESC): 1179713.
Local 6 (NUM-ARGS): 7.
Local 7 (CLOSURE-PASSED): NIL
Local 8 (LAMBDA-LIST): NIL
Local 9 (LL): NIL
Local 10 (QUOTE-STATUS): NIL
Local 11 (REST-FLAG): NIL
Local 12 (ARGL): NIL
Local 13: NIL
Local 14: NIL
Local 15 (IGNORE): NIL
Local 16 (ADL): NIL
Local 17 (ITEM): NIL
Local 18 (*SELECTQ-ITEM*): NIL


EVAL (P.C. = 62)

 Arg 0 (FORM): (MAKE-PACKAGE "BOXER-USER" (QUOTE :NICKNAMES) (QUOTE **) ...)
   --Defaulted args:--
 Arg 1 (NOHOOK): NIL
Local 0 (TEM): NIL


COMPILER:QC-FILE-COMMON (P.C. = 104)

 Arg 0 (FORM): (MAKE-PACKAGE "BOXER-USER" (QUOTE :NICKNAMES) (QUOTE **) ...)
 Arg 1 (TYPE): SPECIAL


COMPILER:COMPILE-DRIVER (P.C. = 570)

 Arg 0 (FORM): (MAKE-PACKAGE "BOXER-USER" (QUOTE :NICKNAMES) (QUOTE **) ...)
 Arg 1 (PROCESS-FN): COMPILER:QC-FILE-COMMON
 Arg 2 (OVERRIDE-FN): NIL
   --Defaulted args:--
 Arg 3 (COMPILE-TIME-TOO): NIL
Local 0 (FN): MAKE-PACKAGE
Local 1 (OFORM): (MAKE-PACKAGE "BOXER-USER" (QUOTE :NICKNAMES) (QUOTE **) ...)
Local 2 (NFORM): (MAKE-PACKAGE "BOXER-USER" (QUOTE :NICKNAMES) (QUOTE **) ...)
Local 3: (#<DTP-FEF-POINTER EVAL 30417714> MAKE-PACKAGE "BOXER-USER" (QUOTE :NICKNAMES) ...)
Local 4: (NIL)
Local 5: (132871. . 724.)
Local 6 (TIME): NIL
Local 7 (COMPILE): NIL
Local 8 (LOAD): NIL
Local 9 (EVAL): NIL
Local 10 (EVAL-NOW): NIL
Local 11 (FORM1): NIL
Local 12 (FORM): NIL
Local 13 (TEM): NIL


Remainder of stack:

COMPILER:COMPILE-DRIVER (P.C. = 447)
COMPILER:QC-FILE-WORK-COMPILE (P.C. = 44)
COMPILER:COMPILE-STREAM (P.C. = 1075)
(:INTERNAL QC-FILE 1.) (P.C. = 101)
QC-FILE (P.C. = 1062)
SI:QC-FILE-1 (P.C. = 44)
SI:DO-FILE-TRANSFORMATIONS (P.C. = 251)
SI:PERFORM-TRANSFORMATIONS (P.C. = 122)
SI:PERFORM-TRANSFORMATIONS (P.C. = 77)
MAKE-SYSTEM (P.C. = 236)
SI:EVAL1 (P.C. = 1324)
SI:EVAL-ABORT-TRIVIAL-ERRORS (P.C. = 61)
SI:LISP-TOP-LEVEL1 (P.C. = 426)
SI:LISP-TOP-LEVEL2 (P.C. = 27)
SI:PROCESS-TOP-LEVEL (P.C. = 246)
SI:LISP-TOP-LEVEL (P.C. = 47)
 2-Jun-84 00:50:51-EDT,649;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 2 Jun 84 00:50-EDT
Date: Saturday, 2 June 1984, 00:44-EDT
From: Henry Lieberman <Henry at MIT-OZ>
Subject: Argument checking in APPEND
To: BUG-LISPM at MIT-OZ

In Release 5.0 [Beta Test rev 7], FEP 18, on Lisp Machine Apiary-4 (3600):

APPEND could issue a better error message if given an atom.

>>Error: The argument X to LENGTH, 4, was of the wrong type.
         The function expected A list.
While in the function LENGTH  APPEND  SI:*EVAL

LENGTH:  (P.C. = 24)
   Arg 0 (X): 4
   Local 1 (L): SI:X
   Local 2 (I): 4

APPEND:  (P.C. = 27)
   Rest arg (LISTS): ((1 2) 4 (8 9))
 2-Jun-84 16:59:22-EDT,792;000000000000
Mail-From: HQM created at  2-Jun-84 16:58:17
Date: Sat 2 Jun 84 16:58-EDT
From: Henry Minsky <HQM@MIT-OZ>
Subject: Compiled files :QFASL-SOURCE-UNIQUE-ID
To: bug-lispm@MIT-OZ


When a compiled file is written out, they contain (in
their file property list) a :QFASL-SOURCE-UNIQUE-ID which
is a site-dependent pathname (without even a namespace-qualified
host name).  This can cause great problems when the BIN file
is read in at another site which has no idea where the host
for the pathname it is generating came from.  This makes
it real hard to transfer binaries from site to site -- it
would be nice if there were a way that these properties could
be written out (when possibl) in a site-independent way,
with the  appropriately back-translated logical pathnames.

Ken
 2-Jun-84 17:01:48-EDT,219;000000000000
Mail-From: HQM created at  2-Jun-84 17:01:02
Date: Sat 2 Jun 84 17:01-EDT
From: kwh
Sender: Henry Minsky <HQM@MIT-OZ>
Subject: Whoops.
To: bug-lispm@MIT-OZ


That last message was from me (KWH) not HQM.

Ken
 2-Jun-84 18:15:54-EDT,2505;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 2 Jun 84 18:14-EDT
Date: Saturday, 2 June 1984, 18:08-EDT
From: KMP at OZ
Sender: KBE at OZ
Subject: ZWEI:REDISPLAY-ALL-WINDOWS sends :LISTEN to STANDARD-INPUT
To: BUG-LISPM at OZ
Cc: KBE-I-FILE at OZ

In Release 4.5, Experimental Knowledge-Based-Editor 341.6, FEP 18,
site configuration 88, on Lisp Machine Frank Sinatra:

When given a FORCE-TO-COMPLETION-P argument of T, the function
ZWEI:REDISPLAY-ALL-WINDOWS seems to send STANDARD-INPUT a :LISTEN
message. This is a real loss if STANDARD-INPUT is a file rather than
an interactive stream. It is especially a loss if the file held by
STANDARD-INPUT has been closed (eg, you were doing a LOAD and had
read the last form in the file).

Isn't it the case that files held by STANDARD-INPUT are not 
constrained to even handle :LISTEN at all, much less handle it
without sometimes erring? Perhaps files should quietly return NIL
for :LISTEN when they are closed rather than erring, which they
currently do.

In any case, I would suggest sending this message to TERMINAL-IO
rather than to STANDARD-INPUT, or if that won't work (perhaps due
to the way keyboard macros or some such things work) you should
either verify that the stream is something interactive or perhaps
introduce an ERROR-P argument to :LISTEN or put an (IGNORE-ERRORS ...)
around the (SEND STANDARD-INPUT ':LISTEN).

The relevant code from OZ:SRC:<S.ZWEI>DISPLA.LISP.124 is:

  ;;; Redisplay all the exposed windows associated with this editor,
  ;;; unless typeahead prevents, in which case T is returned.

  (DEFUN REDISPLAY-ALL-WINDOWS (&OPTIONAL (FORCE-TO-COMPLETION-P NIL)
					  (SELECT-P T))
    (COND ((AND (NOT FORCE-TO-COMPLETION-P)
		;Suppress redisplay if typeahead
		(FUNCALL STANDARD-INPUT ':LISTEN))
	   T)
	  ...))

The reason this all comes up is indeed that from an init file I do 
 (SEND ZWEI:*ZMACS-COMMAND-LOOP* ':FUNCALL-INSIDE-YOURSELF ...)
of something where the something does a 
 (ZWEI:REDISPLAY-ALL-WINDOWS T NIL)
and this causes ZWEI to try to :LISTEN out of the init file, 
which is sometimes closed (due to chaos net connection failure),
which then causes the debugger to get entered at this point, rather
than after evaluating the whole init file (which is all one form).
Getting an error saying the file was closed AFTER the whole init
had run would not be a problem, since there is no more stuff to 
do at that point, and typing c-Abort is not harmful. 
 3-Jun-84 02:18:17-EDT,444;000000000000
Mail-From: STRAZ created at  3-Jun-84 02:16:57
Date: Sun 3 Jun 84 02:16:57-EDT
From: Steve Strassmann <STRAZ@MIT-OZ>
Subject: suggestion for :no-select menu items
To: bug-lispm@MIT-OZ

I have a command menu with items like
("" :no-select) 
to create blank spaces. This loses in Rel 5.
You need to do
("" :no-select "") 
that is, give a no-op command an argument in order for it to win.
I suggest the arg be made optional.
-------
 3-Jun-84 17:35:55-EDT,547;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 3 Jun 84 17:34-EDT
Date: Sunday, 3 June 1984, 17:31-EDT
From: Daniel Huttenlocher <dph at MIT-OZ>
Subject: Namespace MIT not loaded?
To: BUG-LISPM at MIT-OZ

In Release 5.0, Experimental MIT 1.4, FEP 18, on Lisp Machine Jimi Hendrix (3600):


What is this (printed before the herald during boot):

[17:27 Error from server: The Namespace MIT is not loaded.;
Obsolete host information may be used]

LM15 is up and this machine was talking to it when/before it printed
the notification.
 3-Jun-84 22:52:15-EDT,2648;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 3 Jun 84 22:51-EDT
Date: Sunday, 3 June 1984, 22:48-EDT
From:  <KMP at MIT-MC>
Subject: Resume from a recursive breakpoint while inside scope of debugger
To: BUG-LISPM at MIT-OZ
Cc: KBE-I at MIT-OZ

In Symbolics Release 4.5 on Merlin (3600)
         and Release 5.0 (Beta 7) on Bing Crosby (3600):

Dick Waters came up with the following bug. It baffled me, too, so
I figured I'd report it.

If you type 
  (TYI)<Suspend><Resume>
you will be back in the TYI, but if you type
  (+ 'A) ;or anything you like to enter an error handler
and then type
  (TYI)<Suspend><Resume>
the Resume will take you back to the debugger rather than back to
the TYI.

The implication of this is (which is how we noticed it) that if you
are in a debugger and you invoke some other utility (eg, we have a function
called TEST-PARSER which gives a Read-Parse-Print loop) and you hit
Suspend from inside that function, then Resume will take you back to
the debugger rather than back into the TEST-PARSER function. This is 
very bad if you thought you were returning to TEST-PARSER and you typed
ahead c-C (which you do in Rel 4) to yank old input, because it proceeds
the debugger. Although in Rel 5 you could train yourself to use c-m-Y
and perhaps avoid some of the symptoms, the fact remains that Resume
is not doing the right thing.

By the way, one additional piece of information is that the rubout 
handler does refresh the display of the typed input even though the
Resume is not going to leave the person in the right place. eg,
if you type 
  (+ 'A) ;error
  (READ)foo<Suspend><Resume>
you return to the error breakpoint, but "foo" gets typed out on a line
by itself before typing "Back to trap ..." or whatever.

Also, in case it matters, TEST-PARSER calls PROMPT-AND-READ-COMMAND 
which TYIPEEKs before entering the rubout handler (as shown here):

  (COND ((SEND STREAM ':OPERATION-HANDLED-P ':RUBOUT-HANDLER)
	 (READ-COMMAND-PROMPT)
	 (DO () (NIL) ;forever
	   (WHEN (= (TYIPEEK) #\c-Z) ;Let the user type c-Z
	     (TYI)                   ;Remove char from input stream
	     (SIGNAL 'NULL-COMMAND)  ;Non-error signal in case caller cares
	     (SIGNAL 'SYS:ABORT))    ;Simulate having typed Abort
	   (CONDITION-RESTART-CASE
	       (RETURN-IF (SEND STREAM ':RUBOUT-HANDLER
				'((:FULL-RUBOUT T) (:REPROMPT ...))
				...))
	     ((SYS:ABORT "Retry typing this command.")))))
	(T ...))

This allows the user to type Abort in the middle of the line to return
to the beginning of the line, and Abort at the head of the line to exit 
the parser.
-kmp
 4-Jun-84 10:11:57-EDT,1331;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 4 Jun 84 10:10-EDT
Received: from SCRC-PEACE by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 43762; Mon 4-Jun-84 10:10:53-EDT
Date: Monday, 4 June 1984, 10:10-EDT
From: Charles Hornig <Hornig at SCRC-STONY-BROOK>
Subject: Namespace MIT not loaded?
To: Daniel Huttenlocher <dph at MIT-OZ>, BUG-LISPM at MIT-OZ
In-reply-to: The message of 3 Jun 84 17:31-EDT from Daniel Huttenlocher <dph at MIT-OZ>
Message-ID: <840604101016.2.HORNIG@PEACE.SCRC.Symbolics>

    Date: Sunday, 3 June 1984, 17:31-EDT
    From: Daniel Huttenlocher <dph at MIT-OZ>

    In Release 5.0, Experimental MIT 1.4, FEP 18, on Lisp Machine Jimi Hendrix (3600):


    What is this (printed before the herald during boot):

    [17:27 Error from server: The Namespace MIT is not loaded.;
    Obsolete host information may be used]

    LM15 is up and this machine was talking to it when/before it printed
    the notification.

It means that your machine gave up on LM15 (probably because it wasn't
fast enough) and decided to try either SCRC|STONY-BROOK or
SCRC|RIVERSIDE.  These servers are running newer software which "knew it
didn't know" about the MIT namespace and told you so.  The error means
what it says -- your machine decided to use the information it already
had.
 4-Jun-84 10:16:55-EDT,1362;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 4 Jun 84 10:16-EDT
Received: from SCRC-PEACE by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 43765; Mon 4-Jun-84 10:14:15-EDT
Date: Monday, 4 June 1984, 10:13-EDT
From: Charles Hornig <Hornig at SCRC-STONY-BROOK>
Subject: Compiled files :QFASL-SOURCE-UNIQUE-ID
To: kwh at SCRC-STONY-BROOK, bug-lispm at MIT-OZ
In-reply-to: The message of 2 Jun 84 16:58-EDT from Henry Minsky <HQM at MIT-OZ>
Message-ID: <840604101338.3.HORNIG@PEACE.SCRC.Symbolics>
Fonts: CPTFONT, CPTFONTI

    Date: Sat 2 Jun 84 16:58-EDT
    From: Henry Minsky <HQM@MIT-OZ>

    When a compiled file is written out, they contain (in
    their file property list) a :QFASL-SOURCE-UNIQUE-ID which
    is a site-dependent pathname (without even a namespace-qualified
    host name).  This can cause great problems when the BIN file
    is read in at another site which has no idea where the host
    for the pathname it is generating came from.  This makes
    it real hard to transfer binaries from site to site -- it
    would be nice if there were a way that these properties could
    be written out (when possibl) in a site-independent way,
    with the  appropriately back-translated logical pathnames.

This is fixed in Systems 247 1et seq0.  The :QFASL-SOURCE-FILE-UNIQUE-ID
will be a logical pathname.
 4-Jun-84 14:58:35-EDT,2432;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 4 Jun 84 14:57-EDT
Received: from SCRC-MERRIMACK by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 43950; Mon 4-Jun-84 14:57:12-EDT
Date: Monday, 4 June 1984, 14:56-EDT
From: Mike McMahon <MMcM at SCRC-TENEX>
Subject: ZWEI:REDISPLAY-ALL-WINDOWS sends :LISTEN to STANDARD-INPUT
To: KMP at MIT-OZ
cc: BUG-LISPM at MIT-OZ, KBE-I-FILE at MIT-OZ
In-Reply-To: The message of 2 Jun 84 18:08-EDT from KMP at MIT-OZ
Message-ID: <840604145622.1.MMCM@MERRIMACK.SCRC.Symbolics>

    Date: Saturday, 2 June 1984, 18:08-EDT
    From: KMP at OZ

    When given a FORCE-TO-COMPLETION-P argument of T, the function
    ZWEI:REDISPLAY-ALL-WINDOWS seems to send STANDARD-INPUT a :LISTEN
    message. This is a real loss if STANDARD-INPUT is a file rather than
    an interactive stream. It is especially a loss if the file held by
    STANDARD-INPUT has been closed (eg, you were doing a LOAD and had
    read the last form in the file).

    Isn't it the case that files held by STANDARD-INPUT are not 
    constrained to even handle :LISTEN at all, much less handle it
    without sometimes erring? Perhaps files should quietly return NIL
    for :LISTEN when they are closed rather than erring, which they
    currently do.

    In any case, I would suggest sending this message to TERMINAL-IO
    rather than to STANDARD-INPUT, or if that won't work (perhaps due
    to the way keyboard macros or some such things work) you should
    either verify that the stream is something interactive or perhaps
    introduce an ERROR-P argument to :LISTEN or put an (IGNORE-ERRORS ...)
    around the (SEND STANDARD-INPUT ':LISTEN).

The internals of the editor are allowed to depend on STANDARD-INPUT
being an interactive streams that works.  I don't see why it would be at
all reasonable for it quietly to ignore errors anywhere that is only
designed to be called from the editor process.

    The reason this all comes up is indeed that from an init file I do 
     (SEND ZWEI:*ZMACS-COMMAND-LOOP* ':FUNCALL-INSIDE-YOURSELF ...)

Here's your real problem.  It's only mildly okay to do the above
(running part of the editor outside the editor process and incurring the
risk of interfering with it).

    of something where the something does a 
     (ZWEI:REDISPLAY-ALL-WINDOWS T NIL)

It's certainly not okay to run redisplay from any other process.
 4-Jun-84 15:14:22-EDT,668;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 4 Jun 84 15:13-EDT
Date: Monday, 4 June 1984, 15:10-EDT
From: Charles Rich <RICH at OZ>
Subject: Tracing
To: BUG-LISPM at OZ

In Release 4.5, Reasoning Utility Package 14.0,
Experimental Hybrid Reasoning System 28.0, FEP 17, site configuration 79, on Lisp Machine Bing Crosby:

It would be nice if it were possibly to temporarily suspend
a set of traces in effect and then reinstate them without
having to respecify all the complex conditions.  A nice
way to support this would simply be to make (UNTRACE) return
a form which would recreate the environemtn when given back as
an argument to TRACE.

		-CR
 4-Jun-84 15:31:58-EDT,545;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 4 Jun 84 15:30-EDT
Date: Monday, 4 June 1984, 15:26-EDT
From: Charles Rich <RICH at OZ>
Subject: :COND option to Trace
To: BUG-LISPM at OZ

In Release 4.5, Reasoning Utility Package 14.0,
Experimental Hybrid Reasoning System 28.0, FEP 17, site configuration 79, on Lisp Machine Bing Crosby:

The :COND option to trace does not work as advertised.  Try

(trace (car (:cond nil)))

(car nil)
(1 ENTER CAR (NIL))
(1 EXIT CAR NIL)
NIL

This tracing lines should not print out!

-CR
 4-Jun-84 16:30:23-EDT,942;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 4 Jun 84 16:28-EDT
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 44004; Mon 4-Jun-84 16:25:28-EDT
Date: Monday, 4 June 1984, 16:24-EDT
From: David A. Moon <Moon at SCRC-TENEX>
Subject: suggestion for :no-select menu items
To: Steve Strassmann <STRAZ at MIT-OZ>
Cc: bug-lispm at MIT-OZ
In-reply-to: The message of 3 Jun 84 02:16-EDT from Steve Strassmann <STRAZ at MIT-OZ>
Message-ID: <840604162442.5.MOON@EUPHRATES.SCRC.Symbolics>

    Date: Sun 3 Jun 84 02:16:57-EDT
    From: Steve Strassmann <STRAZ@MIT-OZ>

    I have a command menu with items like
    ("" :no-select) 
    to create blank spaces. This loses in Rel 5.
    You need to do
    ("" :no-select "") 
    that is, give a no-op command an argument in order for it to win.
    I suggest the arg be made optional.

The menu item format (string object) is already used.
 4-Jun-84 17:20:21-EDT,1353;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 4 Jun 84 17:17-EDT
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 44049; Mon 4-Jun-84 17:15:06-EDT
Date: Monday, 4 June 1984, 17:14-EDT
From: David A. Moon <Moon at SCRC-TENEX>
Subject: :COND option to Trace
To: Charles Rich <RICH at MIT-OZ>
Cc: BUG-LISPM at MIT-OZ
In-reply-to: The message of 4 Jun 84 15:26-EDT from Charles Rich <RICH at MIT-OZ>
Message-ID: <840604171421.7.MOON@EUPHRATES.SCRC.Symbolics>

    Date: Monday, 4 June 1984, 15:26-EDT
    From: Charles Rich <RICH at OZ>

    In Release 4.5, Reasoning Utility Package 14.0,
    Experimental Hybrid Reasoning System 28.0, FEP 17, site configuration 79, on Lisp Machine Bing Crosby:

    The :COND option to trace does not work as advertised.  Try

    (trace (car (:cond nil)))

In current systems attempting to evaluate the above gives an error message.
The correct format is

    (trace (car :cond nil))

I realize the syntax of trace is truly arcane and horrible.  It comes from Maclisp.
I generally use the trace window so that I don't have to remember the syntax.

By the way, if some documentation misled you into thinking (trace (car (:cond nil)))
was the correct format, could you send another bug report saying what the document
was so it can be fixed?  Thanks.
 4-Jun-84 18:27:53-EDT,1489;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 4 Jun 84 18:26-EDT
Received: from SCRC-STILLWATER by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 44084; Mon 4-Jun-84 18:26:39-EDT
Date: Monday, 4 June 1984, 18:26-EDT
From: Philip Greenspun <philg at SCRC-STONY-BROOK>
Subject: :COND option to Trace
To: David A. Moon <Moon at SCRC-TENEX>
Cc: Charles Rich <RICH at MIT-OZ>, BUG-LISPM at MIT-OZ
In-reply-to: <840604171421.7.MOON@EUPHRATES.SCRC.Symbolics>
Message-ID: <840604182624.9.PHILG@STILLWATER.SCRC.Symbolics>

    Date: Monday, 4 June 1984, 17:14-EDT
    From: David A. Moon <Moon at SCRC-TENEX>

	Date: Monday, 4 June 1984, 15:26-EDT
	From: Charles Rich <RICH at OZ>

	The :COND option to trace does not work as advertised.  Try

	(trace (car (:cond nil)))

    In current systems attempting to evaluate the above gives an error message.
    The correct format is

	(trace (car :cond nil))

Actually, I think Mr. Rich made a typo, for indeed typing in the correct
format does not work properly in 243.741.  If I understand the
documentation correctly, when the argument to :COND evaluates to T, the
trace information is printed, if NIL, nothing is printed.  A value of
NIL therefore should suppress printing at all times and does not.

You have probably already tried this, Charles, but if you substitute a
form that always evaluates to NIL (like "(eq 'foo 'bar)"), the feature
does work "as advertised".

Thanks for the report,

Philip
 4-Jun-84 22:51:05-EDT,660;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 4 Jun 84 22:50-EDT
Date: Monday, 4 June 1984, 22:46-EDT
From:  <MUSE at MIT-OZ>
Subject: Generation Gap
To: BUG-LISPM at MIT-OZ

In Release 5.0 [Beta Test rev 7], FEP 18, on Lisp Machine Apiary-8 (3600):

Why isn't there an easy way to modify a directory on Oz so that it will save x
generations of lisp files, y generations of bin files, etc.

Since it is possible to do this tediously by editing the properties of individual files, it
should be possible to map this over a directory.

This would encourage economic use of disk space. 

The generations command of build does not seem to do this.
 4-Jun-84 23:36:11-EDT,1163;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 4 Jun 84 23:33-EDT
Date: Monday, 4 June 1984, 23:32-EDT
From: Henry Lieberman <Henry at MIT-OZ>
Subject: ZWEI:REDISPLAY-ALL-WINDOWS sends :LISTEN to STANDARD-INPUT
To: Mike McMahon <MMcM at SCRC-TENEX>, KMP at MIT-OZ,
    Bug-Lispm at MIT-OZ
In-reply-to: <840604145622.1.MMCM@MERRIMACK.SCRC.Symbolics>


        The reason this all comes up is indeed that from an init file I do 
         (SEND ZWEI:*ZMACS-COMMAND-LOOP* ':FUNCALL-INSIDE-YOURSELF ...)

    Here's your real problem.  It's only mildly okay to do the above
    (running part of the editor outside the editor process and incurring the
    risk of interfering with it).

        of something where the something does a 
         (ZWEI:REDISPLAY-ALL-WINDOWS T NIL)

    It's certainly not okay to run redisplay from any other process.

I need to do this kind of thing all the time. I have programs which use the 
editor to display stuff, and other processes must be run to compute what 
gets displayed. Can you suggest an alternative way of doing things? Should
everything be done with (:EXECUTE ...) blips, is that any better?

 4-Jun-84 23:53:17-EDT,2255;000000000000
Mail-From: KMP created at  4-Jun-84 23:51:37
Date: Mon 4 Jun 84 23:51:37-EDT
From: KMP@MIT-OZ
Subject: Re: ZWEI:REDISPLAY-ALL-WINDOWS sends :LISTEN to STANDARD-INPUT
To: Henry@MIT-OZ
cc: MMcM@SCRC-TENEX, Bug-Lispm@MIT-OZ
In-Reply-To: Message from "Henry Lieberman <Henry at MIT-OZ>" of Mon 4 Jun 84 23:36:13-EDT

    Date: Monday, 4 June 1984, 23:32-EDT
    From: Henry Lieberman <Henry at MIT-OZ>
    Subject: ZWEI:REDISPLAY-ALL-WINDOWS sends :LISTEN to STANDARD-INPUT
    To: Mike McMahon <MMcM at SCRC-TENEX>, KMP at MIT-OZ,
        Bug-Lispm at MIT-OZ
    In-reply-to: <840604145622.1.MMCM@MERRIMACK.SCRC.Symbolics>


            The reason this all comes up is indeed that from an init file I do 
             (SEND ZWEI:*ZMACS-COMMAND-LOOP* ':FUNCALL-INSIDE-YOURSELF ...)

        Here's your real problem.  It's only mildly okay to do the 
	above (running part of the editor outside the editor process 
	and incurring the risk of interfering with it).

            of something where the something does a 
             (ZWEI:REDISPLAY-ALL-WINDOWS T NIL)

        It's certainly not okay to run redisplay from any other process.

    I need to do this kind of thing all the time. I have programs which use 
    the editor to display stuff, and other processes must be run to compute 
    what gets displayed. Can you suggest an alternative way of doing things? 
    Should everything be done with (:EXECUTE ...) blips, is that any better?

I used to do this, but found it highly unreliable as a medium of 
communication. The problem is that there are things like String Search
which TYI discarding blips and also you can get :EXECUTE blips inside
a minibuffer when the context is not right to execute the blip.

As nearly as I can tell, it is not at all that we are doing anything
unreasonable in the abstract; the only unreasonable thing is that we expect
ZWEI has any way of helping us out in doing those abstract things. ZWEI was
designed as an interactive tool and really wants to be controlled by a live
user under keyboard control. Anything significantly beyond that which I
have ever tried has never worked. I can cite other examples if you think
this statement is an exaggeration.
-kmp
-------
 5-Jun-84 00:09:35-EDT,651;000000000000
Received: from MIT-MERLIN by MIT-OZ via Chaosnet; 5 Jun 84 00:08-EDT
Date: Tuesday, 5 June 1984, 00:04-EDT
From: KMP at MIT-OZ
Sender: KBE at MIT-OZ
Subject: c-E of an interpreted call in debugger always edits *EVAL
To: BUG-LISPM at MIT-OZ

In Release 4.5, Knowledge-Based-Editor 352.1, FEP 18,
site configuration 88, on PA Lisp Machine Merlin:

I would be willing to go into the editor and manually type
m-. *EVAL in the few cases where I really want to see its
definition in exchange for the possible feature of being
able to type c-E to the debugger to edit the definition of
a function whose interpreted call I am looking at.
-kmp
 5-Jun-84 00:59:39-EDT,1129;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 5 Jun 84 00:59-EDT
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 44223; Tue 5-Jun-84 00:59:28-EDT
Date: Tuesday, 5 June 1984, 00:58-EDT
From: David A. Moon <Moon at SCRC-TENEX>
Subject: c-E of an interpreted call in debugger always edits *EVAL
To: KMP at MIT-OZ
Cc: BUG-LISPM at MIT-OZ
In-reply-to: The message of 5 Jun 84 00:04-EDT from KMP at MIT-OZ
Message-ID: <840605005820.6.MOON@EUPHRATES.SCRC.Symbolics>

    Date: Tuesday, 5 June 1984, 00:04-EDT
    From: KMP at MIT-OZ

    In Release 4.5, Knowledge-Based-Editor 352.1, FEP 18,
    site configuration 88, on PA Lisp Machine Merlin:

    I would be willing to go into the editor and manually type
    m-. *EVAL in the few cases where I really want to see its
    definition in exchange for the possible feature of being
    able to type c-E to the debugger to edit the definition of
    a function whose interpreted call I am looking at.

It works for me.  Can you provide a testcase?  Maybe it was broken
in Release 4.5, but I can't remember back that far.
 5-Jun-84 09:43:52-EDT,638;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 5 Jun 84 09:42-EDT
Date: Tuesday, 5 June 1984, 09:44-EDT
From: Webster Dove <dove at MIT-SYLVESTER>
Subject: telnet won't talk to ll-sst
To: BUG-LISPM at MIT-OZ

In Release 5.0, Experimental MIT 1.4, on Lisp Machine Tweety Pie (3600):

Before the "official" release, I was able to talk to ll-sst with telnet.
Now when I try to connect it asks me to try different protocols but none
work.  It also says that ll-sst does not support login in a reachable
way even though the namespace entry has login support.  Is this because
we don't have tcp yet??  If so, is it coming soon??
 
 5-Jun-84 10:05:31-EDT,1313;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 5 Jun 84 10:04-EDT
Received: from SCRC-PEACE by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 44330; Tue 5-Jun-84 10:03:38-EDT
Date: Tuesday, 5 June 1984, 10:03-EDT
From: Charles Hornig <Hornig at SCRC-STONY-BROOK>
Subject: telnet won't talk to ll-sst
To: Webster Dove <dove at MIT-SYLVESTER>, BUG-LISPM at MIT-OZ,
    joseph at SCRC-STONY-BROOK
In-reply-to: The message of 5 Jun 84 09:44-EDT from Webster Dove <dove at MIT-SYLVESTER>
Message-ID: <840605100311.5.HORNIG@PEACE.SCRC.Symbolics>

    Date: Tuesday, 5 June 1984, 09:44-EDT
    From: Webster Dove <dove at MIT-SYLVESTER>

    In Release 5.0, Experimental MIT 1.4, on Lisp Machine Tweety Pie (3600):

    Before the "official" release, I was able to talk to ll-sst with telnet.
    Now when I try to connect it asks me to try different protocols but none
    work.  It also says that ll-sst does not support login in a reachable
    way even though the namespace entry has login support.  Is this because
    we don't have tcp yet??  If so, is it coming soon??
 
MIT patch 1.3 removes the definitions of the obsolete TCP functions
which are replaced by our almost-in-beta-test TCP product.  This leaves
you with no TCP support at all.  I do not know why MIT 1.3 does this.
 5-Jun-84 20:06:37-EDT,1064;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 5 Jun 84 20:06-EDT
Received: from SCRC-YANGTZE by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 44469; Tue 5-Jun-84 13:45:16-EDT
Date: Tuesday, 5 June 1984, 13:44-EDT
From: Carl Hoffman <CWH at SCRC-TENEX>
Subject: Re: ZWEI:REDISPLAY-ALL-WINDOWS sends :LISTEN to STANDARD-INPUT
To: KMP at MIT-OZ, Henry at MIT-OZ
cc: MMcM at SCRC-TENEX, Bug-Lispm at MIT-OZ
In-Reply-To: The message of 4 Jun 84 23:51-EDT from KMP at MIT-OZ

    Date: Mon 4 Jun 84 23:51:37-EDT
    From: KMP@MIT-OZ
    I used to do this, but found it highly unreliable as a medium of 
    communication. The problem is that there are things like String Search
    which TYI discarding blips and also you can get :EXECUTE blips inside
    a minibuffer when the context is not right to execute the blip.

In the latest Symbolics sources, one function is used whenever Zwei blocks for
input from the user, so this is now a reliable medium of communication.  There
is no place in Zwei which calls :TYI or :INPUT-WAIT directly.
 6-Jun-84 09:44:50-EDT,4725;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 6 Jun 84 09:44-EDT
Date: Wednesday, 6 June 1984, 00:04-EDT
From:  <dove at MIT-TWEETY-PIE>
Subject: fed won't start up
To: BUG-LISPM at MIT-OZ

In Release 5.0, Experimental MIT 1.4, on Lisp Machine Tweety Pie (3600):

I typed (fed) immediatly after cold boot and this happened!

>>Trap: The first argument given to the FOLLOW-CELL-FORWARDING instruction, NIL, was not a locative.
While in the function DBG:CELL-LOCATION-IN-STACK-GROUP  SYMEVAL-IN-STACK-GROUP  (:METHOD TV:BASIC-CHOOSE-VARIABLE-VALUES :ITEM-WIDTH)

DBG:CELL-LOCATION-IN-STACK-GROUP:  (P.C. = 60)
   Arg 0 (CELL): #<DTP-LOCATIVE 31221735>
   Arg 1 (SG): #<STACK-GROUP Fed-1 362337>
   Arg 2 (FRAME): NIL
   Local 3 (STACK-POINTER): NIL
   Local 4 (STACK-BOUNDARY): NIL
   Local 5 (STACK-LOW): #<DTP-LOCATIVE 362365>
   Local 6 (INSIDE-BOUNDARY): #<DTP-LOCATIVE 31221735>
   Local 7 (OUTSIDE-BOUNDARY): NIL

SYMEVAL-IN-STACK-GROUP:  (P.C. = 12)
   Arg 0 (SYM): FED:*CURFONT-BLINKER-HEIGHT*
   Arg 1 (SG): #<STACK-GROUP Fed-1 362337>
   --Defaulted args:--
   Arg 2 (FRAME): NIL
   Arg 3 (AS-IF-CURRENT): NIL

(:METHOD TV:BASIC-CHOOSE-VARIABLE-VALUES :ITEM-WIDTH):  (P.C. = 37)
   Arg 0 (SELF): #<UNSELECTABLE-CHVV-PANE Unselectable Chvv Pane 1 1000614 deactivated>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:BASIC-CHOOSE-VARIABLE-VALUES -- 7. IV's, 0. FL's 20225435>
   Arg 2 (OPERATION): :ITEM-WIDTH
   Arg 3 (ITEM): (FED:*CURFONT-BLINKER-HEIGHT* "Blinker Height" FED:FED-DECNUM)
   --Defaulted args:--
   Arg 4 (EXTRA-WIDTH): 0
   Arg 5 (STOP-X): NIL

(:METHOD TV:BASIC-CHOOSE-VARIABLE-VALUES :ADJUST-GEOMETRY-FOR-NEW-VARIABLES):  (P.C. = 24)
   Arg 0 (SELF): #<UNSELECTABLE-CHVV-PANE Unselectable Chvv Pane 1 1000614 deactivated>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:BASIC-CHOOSE-VARIABLE-VALUES -- 7. IV's, 0. FL's 20225435>
   Arg 2 (OPERATION): :ADJUST-GEOMETRY-FOR-NEW-VARIABLES
   Arg 3 (WID): NIL

(:METHOD TV:BASIC-CHOOSE-VARIABLE-VALUES :SET-VARIABLES):  (P.C. = 23)
   Arg 0 (SELF): #<UNSELECTABLE-CHVV-PANE Unselectable Chvv Pane 1 1000614 deactivated>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:BASIC-CHOOSE-VARIABLE-VALUES -- 7. IV's, 0. FL's 20225435>
   Arg 2 (OPERATION): :SET-VARIABLES
   Arg 3 (ELEMS): ((FED:*CURFONT-BLINKER-HEIGHT* "Blinker Height" FED:FED-DECNUM) (FED:*CURFONT-BLINKER-WIDTH* "Blinker Width" FED:FED-DECNUM) (FED:*CURFONT-BASELINE* "Base Line" FED:FED-DECNUM) (FED:*CURFONT-CHAR-HEIGHT* "Character Height" FED:FED-DECNUM))
   Arg 4 (NO-SET-HEIGHT): T

(:METHOD TV:BASIC-CHOOSE-VARIABLE-VALUES :AFTER :INIT):  (P.C. = 14)
   Arg 0 (SELF): #<UNSELECTABLE-CHVV-PANE Unselectable Chvv Pane 1 1000614 deactivated>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:BASIC-CHOOSE-VARIABLE-VALUES -- 7. IV's, 0. FL's 20225435>
   Arg 2 (OPERATION): :INIT
   Arg 3 (PLIST): #<DTP-LOCATIVE 140474>

(:METHOD TV:CHOOSE-VARIABLE-VALUES-WINDOW :COMBINED :INIT):  (P.C. = 131)
   Arg 0 (SELF): #<UNSELECTABLE-CHVV-PANE Unselectable Chvv Pane 1 1000614 deactivated>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:CHOOSE-VARIABLE-VALUES-WINDOW -- 2. IV's, 21. FL's 20225375>
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

TV:MAKE-WINDOW:  (P.C. = 66)
   Arg 0 (FLAVOR-NAME): FED:UNSELECTABLE-CHVV-PANE
   Rest arg (OPTIONS): (:SUPERIOR #<FED Fed 1 1000317 deactivated> :IO-BUFFER #<IO-BUFFER 360634: empty, State: NIL> :VARIABLES ((FED:*CURFONT-BLINKER-HEIGHT* "Blinker Height" FED:FED-DECNUM) (FED:*CURFONT-BLINKER-WIDTH* "Blinker Width" FED:FED-DECNUM) (FED:*CURFONT-BASELINE* "Base Line" FED:FED-DECNUM) (FED:*CURFONT-CHAR-HEIGHT* "Character Height" FED:FED-DECNUM)) :STACK-GROUP #<STACK-GROUP Fed-1 362337> :LABEL (:STRING "Font parameters (decimal)" :FONT FONTS:TR12I))

Rest of stack:
(:METHOD TV:CONSTRAINT-FRAME-WITH-SHARED-IO-BUFFER :CREATE-PANE):  (P.C. = 12)
(:DEFUN-METHOD TV:CONSTRAINT-FRAME-WINDOWS):  (P.C. = 11)
(:DEFUN-METHOD TV:CONSTRAINT-FRAME-PROCESS-CONSTRAINTS):  (P.C. = 20)
(:METHOD TV:BASIC-CONSTRAINT-FRAME :AFTER :INIT):  (P.C. = 5)
(:METHOD FED :COMBINED :INIT):  (P.C. = 100)
TV:MAKE-WINDOW:  (P.C. = 66)
(:METHOD TV:CONSTRAINT-FRAME-WITH-SHARED-IO-BUFFER :CREATE-PANE):  (P.C. = 12)
(:DEFUN-METHOD TV:CONSTRAINT-FRAME-WINDOWS):  (P.C. = 11)
(:DEFUN-METHOD TV:CONSTRAINT-FRAME-PROCESS-CONSTRAINTS):  (P.C. = 20)
(:METHOD TV:BASIC-CONSTRAINT-FRAME :AFTER :INIT):  (P.C. = 5)
(:METHOD FED:FED-GREAT-FRAME :COMBINED :INIT):  (P.C. = 106)
TV:MAKE-WINDOW:  (P.C. = 66)
FED:  (P.C. = 15)
SI:*EVAL:  (P.C. = 370)
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 200)
SI:LISP-COMMAND-LOOP:  (P.C. = 115)
SI:LISP-TOP-LEVEL1:  (P.C. = 22)
SI:LISP-TOP-LEVEL:  (P.C. = 7)
 6-Jun-84 13:44:30-EDT,1153;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 6 Jun 84 13:43-EDT
Received: from SCRC-CONCORD by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 44909; Wed 6-Jun-84 13:05:18-EDT
Date: Wednesday, 6 June 1984, 13:04-EDT
From: Bernard S. Greenberg <BSG at SCRC-TENEX>
Subject: fed won't start up
To: dove at MIT-TWEETY-PIE, BUG-LISPM at MIT-OZ
In-reply-to: The message of 6 Jun 84 00:04-EDT from dove at MIT-TWEETY-PIE
Message-ID: <840606130431.2.BSG@CONCORD.SCRC.Symbolics>

    Date: Wednesday, 6 June 1984, 00:04-EDT
    From:  <dove at MIT-TWEETY-PIE>

    In Release 5.0, Experimental MIT 1.4, on Lisp Machine Tweety Pie (3600):

    I typed (fed) immediatly after cold boot and this happened!

    >>Trap: The first argument given to the FOLLOW-CELL-FORWARDING instruction, NIL, was not a locative.
    While in the function DBG:CELL-LOCATION-IN-STACK-GROUP  SYMEVAL-IN-STACK-GROUP  (:METHOD TV:BASIC-CHOOSE-VARIABLE-VALUES :ITEM-WIDTH)

    DBG:CELL-LOCATION-IN-STACK-GROUP:  (P.C. = 60)
This was fixed in 243.659 a good while back.  I think this patch is pretty
important to get into the next software that goes out.
 6-Jun-84 21:15:21-EDT,515;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 6 Jun 84 21:14-EDT
Date: Wednesday, 6 June 1984, 21:12-EDT
From: Michael E. Sullivan <SULLIV at MIT-MC>
Subject: FED
To: BUG-LISPM at MIT-OZ

In Release 5.0 [Beta Test rev 7], Experimental Boxer 1.0,
Educational Computing Group, on Lisp Machine Joe Louis (3600):

I'd like to use FED on a font which contains 240b characters.  It looks
like FED only lets you deal with the lower 200b characters.  How can I
edit the other 32 characters?
					Mike Sullivan
 6-Jun-84 22:32:25-EDT,1462;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 6 Jun 84 22:31-EDT
Date: Wednesday, 6 June 1984, 22:10-EDT
From: Scott Cyphers <sr.ehpyc at MIT-SPEECH>
Subject: It's Super-Cadr with the 500 trillion byte file system
To: BUG-LISPM at MIT-OZ

In Release 5.0, Experimental MIT 1.4, Spire-Macros 1.8, Compute 1.3,
Attribute 1.4, Audio 1.2, Speech-Attributes 1.0, Display 1.11,
Speech-Layouts 1.8, Experimental Versatec 2.0, Experimental Prtout 1.1,
Spire 13.0, SpireX 10.3, LexiS 6.3, FEP 18, on Lisp Machine Grizzly (3600):

This is a neat trick.  With the new storage technique of using the
negative space of a disk, LM15 seems to have managed to pick up half a
quadrillion bytes (.5Qbytes.  Now I see why you called them Qbins) of
file space.  Can we be expecting this for 5.1? (or is it 4.9 now?)  Will
there be a new hardware option that allows us to have a -36 bit address
space to better utilize these new super disks?  LM15 seems to have been
namespace serving faster recently.  Could it also be that negative disk
usage has a negative seek time?  With these technological breakthroughs,
I expect the Symbolics Turing Superset software for the 3600 to be
coming out soon.

LM15:>sys>*.*.*
  134224790 free, -134206632/18158 used (-739104%)
  2 blocks in the files listed
      site.directory.1    1   DIRECTORY !   11/03/83 20:07:25 X=05/24/84  Chiron
      ubin.directory.1    1   DIRECTORY !   11/03/83 20:07:34 X=03/31/84  Chiron
 6-Jun-84 22:41:45-EDT,2577;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 6 Jun 84 22:40-EDT
Date: Wednesday, 6 June 1984, 22:37-EDT
From: Christopher C. Stacy <CStacy at MIT-MC>
To: BUG-LISPM at MIT-OZ

In Release 5.0, Experimental MIT 1.4, on Lisp Machine Bing Crosby (3600):

I tried to telnet to an ARPA Internet host via the Terminal window.

>>Trap: The variable NETI:*NAMESPACE-PROTOCOL-VERSION* is unbound.
While in the function NETI:OPEN-NAMESPACE-SERVER  NETI:QUERY-NAMESPACE-SERVER  NETI:FIND-OBJECT-NAMED-IN-NAMESPACE

NETI:OPEN-NAMESPACE-SERVER:  (P.C. = 333)
   Arg 0 (NAMESPACE): #<NAMESPACE MIT 35224312>
   --Defaulted args:--
   Arg 1 (FOR-UPDATE): NIL
   Local 2: (#<SERVICE-ACCESS-PATH NAMESPACE (NAMESPACE) -- CADR-15 on CHAOS 4000643>)
   Local 3: NIL
   Local 4 (HOSTS): (#<LISPM-HOST WAIKATO 16205041> #<LISPM-HOST SCH|GODZILLA 16205054> #<LISPM-HOST SWW|WHITE 16202600> #<LISPM-HOST SCRC-RIVERSIDE 35305113> #<LISPM-HOST SCRC-STONY-BROOK 16200530> #<LISPM-HOST CADR-15 35415363>)
   Local 5 (PENDING-FIXUPS): NIL
   Local 6 (SERVICES): (#<SERVICE-ACCESS-PATH NAMESPACE (NAMESPACE) -- CADR-15 on CHAOS 4000643>)
   Local 7 (ARGS): (#<NAMESPACE MIT 35224312>)
   Local 8 (SERVICES): (#<SERVICE-ACCESS-PATH NAMESPACE (NAMESPACE) -- CADR-15 on CHAOS 4000643>)
   Local 9 (SERVICE): #<SERVICE-ACCESS-PATH NAMESPACE (NAMESPACE) -- CADR-15 on CHAOS 4000643>
   Local 10 (STREAM): #<CHARACTER-STREAM 4001270>
   Local 11: #<DTP-ODD-PC 46611041>
   Local 12: NIL
   Local 13: NIL
   Local 14: #<DTP-COMPILED-FUNCTION SYS:MICROCODE-ERROR-HANDLER 5233077>

NETI:QUERY-NAMESPACE-SERVER:  (P.C. = 75)
   Arg 0 (CLASS): :HOST
   Arg 1 (NAMESPACE): #<NAMESPACE MIT 35224312>
   Rest arg (PROPERTY-LIST): (:NAME #<NAME MIT|NIC 16302476>)

NETI:FIND-OBJECT-NAMED-IN-NAMESPACE:  (P.C. = 205)
   Arg 0 (CLASS): :HOST
   Arg 1 (NAME): "nic"
   Arg 2 (NAMESPACE): #<NAMESPACE MIT 35224312>
   Arg 3 (ERROR-P): NIL

NET:FIND-OBJECT-NAMED:  (P.C. = 42)  (from MC: CSTACY; MOBY WORLD)
   Arg 0 (CLASS): :HOST
   Arg 1 (NAME): "nic"
   --Defaulted args:--
   Arg 2 (ERROR-P): T

SI:PARSE-HOST:  (P.C. = 50)
   Arg 0 (HOST): "nic"
   --Defaulted args:--
   Arg 1 (NO-ERROR-P): NIL
   Arg 2 (IGNORE): NIL

(:METHOD TELNET:NVT-WINDOW :TYPEIN-TOP-LEVEL):  (P.C. = 101)
   Arg 0 (SELF): #<NVT-WINDOW Terminal 1 1000077 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TELNET:NVT-WINDOW -- 18. IV's, 10. FL's 17421332>
   Arg 2 (OPERATION): :TYPEIN-TOP-LEVEL

SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
   --Defaulted args:--
   Arg 0 (IGNORE): NIL
 7-Jun-84 01:35:11-EDT,757;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 7 Jun 84 01:34-EDT
Date: 7 June 1984 01:37-EDT
From: Alan Bawden <ALAN @ MIT-MC>
Subject: New mode of lossage observed in chaos mail servers on MC.
To: BUG-MAIL @ MIT-MC, BUG-LISPM @ MIT-MC

Recently I have begun to notice an increase in the number of dead chaos
mail servers on MC.  Typically they have been created on behalf on a 3600
(the most recent half dozen were mostly from MIT-PI (running Beta test rev
7)), and have died with an IOC error after their CHAOS connection had gone
into a losing or closed state.  I dumped two of the recent batch into
MC:CRASH;CHMAIL LOSING and MC:CRASH;CHMAIL CLOSED.  (The second filename
reflects the state of the job's chaos connection when I dumped it.)
 7-Jun-84 03:09:51-EDT,694;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 7 Jun 84 03:09-EDT
Date: Thu, 7 Jun 84 03:08 EDT
From:  <ALAN@MIT-MC.ARPA>
Subject: Suppose I want to integrate?
To: BUG-LISPM@MIT-MC.ARPA

In Release 5.0, Experimental MIT 1.4, FEP 18, on Lisp Machine Jim Morrison (3600):

When I supdup to MC I notice that there is no way to transmit the character
#\Integral.  That is, when I hold down the Symbol key and strike "/", a
program on MC reading from a channel with the %TIFUL bit set recieves 177
octal, exactly what it would recieve if I had just struck the Rubout key.
I would expect to recieve %TXTOP+177 for that character.  It there a reason
for this, or is it just an oversight?
 7-Jun-84 17:08:18-EDT,1279;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 7 Jun 84 17:06-EDT
Received: from SCRC-MERRIMACK by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 45491; Thu 7-Jun-84 15:11:52-EDT
Date: Thursday, 7 June 1984, 15:11-EDT
From: Mike McMahon <MMcM at SCRC-TENEX>
To: Christopher C. Stacy <CStacy at MIT-MC>
cc: BUG-LISPM at MIT-OZ
In-Reply-To: The message of 6 Jun 84 22:37-EDT from Christopher C. Stacy <CStacy at MIT-MC>
Message-ID: <840607151149.4.MMCM@MERRIMACK.SCRC.Symbolics>

    Date: Wednesday, 6 June 1984, 22:37-EDT
    From: Christopher C. Stacy <CStacy at MIT-MC>

    In Release 5.0, Experimental MIT 1.4, on Lisp Machine Bing Crosby (3600):

    I tried to telnet to an ARPA Internet host via the Terminal window.

    >>Trap: The variable NETI:*NAMESPACE-PROTOCOL-VERSION* is unbound.
    While in the function NETI:OPEN-NAMESPACE-SERVER  NETI:QUERY-NAMESPACE-SERVER  NETI:FIND-OBJECT-NAMED-IN-NAMESPACE

    NETI:OPEN-NAMESPACE-SERVER:  (P.C. = 333)
    NETI:QUERY-NAMESPACE-SERVER:  (P.C. = 75)
    NETI:FIND-OBJECT-NAMED-IN-NAMESPACE:  (P.C. = 205)
    NET:FIND-OBJECT-NAMED:  (P.C. = 42)  (from MC: CSTACY; MOBY WORLD)

You need to recompile the above file.  Better yet, tell us why you have
a private version of that function.
 7-Jun-84 17:45:10-EDT,899;000000000000
Received: from MIT-EECS by MIT-OZ via Chaosnet; 7 Jun 84 17:44-EDT
Date: Thursday, 7 June 1984, 17:19-EDT
From: Scott Cyphers <sr.ehpyc at MIT-SPEECH>
Subject: Secondary servers seem to be getting off easy
To: BUG-LISPM at MIT-OZ

In Release 5.0, Experimental MIT 1.4, Spire-Macros 1.8, Compute 1.3,
Attribute 1.4, Audio 1.2, Speech-Attributes 1.0, Display 1.10,
Speech-Layouts 1.8, Experimental Versatec 2.0, Experimental Prtout 1.1,
Spire 13.0, SpireX 10.3, LexiS 6.3, FEP 18, on Lisp Machine Grizzly (3600):

When LM15 is down and I log in, the namespace stuuf doesn't know about
me, and I'm asked if I want to log in on some specific host.  Also, I've
seen similar behavior with Arpanet hosts, though I didn't happen to
check to see if Riverside was down at the time.  In both of these cases,
doing a TV:EDIT-NAMESPACE-OBJECT on the losing object causes it to win
from then on.
 7-Jun-84 19:59:17-EDT,3181;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 7 Jun 84 19:58-EDT
Received: from SCRC-HARLEM by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 45634; Thu 7-Jun-84 19:54:31-EDT
Date: Thursday, 7 June 1984, 19:54-EDT
From: Joseph R Goldstone <joseph at SCRC-QUABBIN>
Subject: keyboard
To: Carl R. Manning <crm at MIT-OZ>
Cc: ECC at MIT-OZ, BUG-APIARY-HARDWARE at MIT-OZ, info-lispm at MIT-OZ,
    HOSS at SCRC-TENEX
In-reply-to: The message of 7 Jun 84 17:00-EDT from Carl R. Manning <crm at MIT-OZ>

    Date: Thursday, 7 June 1984, 17:00-EDT
    From: Carl R. Manning <crm at MIT-OZ>
        Date: Thursday, 7 June 1984, 16:37-EDT
        From:  <ECC at MIT-OZ>
        In APIARY-HARDWARE in Release 5.0, Experimental MIT 1.4, FEP 18, on APIARY-9 (3600):

        This keyboard seems to have some trouble:
                FUNCTION doesn't do its normal thing,
                Backslash sends Back-space,
                Backspace sends vertical bar,
                Backquote sends backslash,
        and probably other problems.

    This probably has something to do with all the new keytops we received.
    In that set, it looks like <function> and <local> have been swapped and
    other keys rearranged as you noticed.

You are quite correct; Release 5 assumes the new keytops are installed.

Rather than hunt around for documentation that never got to you, let me just
type in some paragraphs from a document entitled "Release 5 Update", dated
31 May 1984.

4.  Keytops:

    Release 5.0 requires a small change to the 3600 keyboard.  You should
find a small bag containing six keytops enclosed in your Release 5 software
package.  To install the keytops on your keyboard please do the following:

(1) Open up a paper clip so that one side forms a straight edge.

(2) Open up the package of keys.  Enclosed should be six keys with the
following symbols printed on them:

  FUNCTION   LOCAL   BACK   {   }   ~
                     SPACE  |   \   `

(3) Take the paper clip and pry up the FUNCTION key on the keyboard.  Replace
this key with the new function labelled LOCAL.

[Note that since none of the old keys are re-used in the new layout, you can
avoid confusion by setting the old keys well aside as you pry them up.]

(4) Pry up the old LOCAL key and replace it with the new FUNCTION key.

(5) Remove the key under RESUME labelled BACK  and replace it with the new }.
                                         SPACE                             |

(6) Remove the key labelled } and replace it with the new key labelled {.
                            \                                          \

(7) Remove the key labelled { and replace it with the new key labelled ~.
                            ~                                          `

(8) Remove the key labelled | and replace it with the new key labelled BACK.
                            \                                          SPACE

One helpful hint: as you pry up each old key, tap the piece of metal or
plastic sticking up to make sure that what is printed on the screen
corresponds to the key that you are about to put on.
 8-Jun-84 02:16:42-EDT,665;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 8 Jun 84 02:16-EDT
Date: Friday, 8 June 1984, 02:08-EDT
From:  <GAVAN at MIT-OZ>
Subject: arglist of macros with no args returns a symbol.
To: BUG-LISPM at MIT-OZ

In Release 5.0, Experimental MIT 1.4, Experimental RELATUS 111.2, on Lisp Machine John Lennon (3600):

Say I have a macro with no arguments, like:

(DEFMACRO FOO ()
  `(NCONS 'FOO))


If I do ARGLIST of FOO, these multiple values are returned:

MACRO
NIL
MACRO

Shouldn't the first value be a list, for instance the null list?
This is what is returned for arglist of defuns with no args.
Why should macros behave any differently?

 8-Jun-84 10:01:32-EDT,1531;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 8 Jun 84 10:01-EDT
Date: 8 June 1984 08:45-EDT
From: Christopher C. Stacy <CSTACY @ MIT-MC>
To: MMcM @ SCRC-TENEX
cc: BUG-LISPM @ MIT-OZ
In-reply-to: Msg of 7 Jun 1984 15:11-EDT from Mike McMahon <MMcM at SCRC-TENEX>

    Date: Thursday, 7 June 1984, 15:11-EDT
    From: Mike McMahon <MMcM at SCRC-TENEX>
    To:   Christopher C. Stacy <CStacy>
    cc:   BUG-LISPM at MIT-OZ
    In-Reply-To: The message of 6 Jun 84 22:37-EDT from Christopher C. Stacy <CStacy at MIT-MC>
    Message-ID: <840607151149.4.MMCM@MERRIMACK.SCRC.Symbolics>

        Date: Wednesday, 6 June 1984, 22:37-EDT
        From: Christopher C. Stacy <CStacy at MIT-MC>

        In Release 5.0, Experimental MIT 1.4, on Lisp Machine Bing Crosby (3600):

        I tried to telnet to an ARPA Internet host via the Terminal window.

        >>Trap: The variable NETI:*NAMESPACE-PROTOCOL-VERSION* is unbound.
        While in the function NETI:OPEN-NAMESPACE-SERVER  NETI:QUERY-NAMESPACE-SERVER  NETI:FIND-OBJECT-NAMED-IN-NAMESPACE

        NETI:OPEN-NAMESPACE-SERVER:  (P.C. = 333)
        NETI:QUERY-NAMESPACE-SERVER:  (P.C. = 75)
        NETI:FIND-OBJECT-NAMED-IN-NAMESPACE:  (P.C. = 205)
        NET:FIND-OBJECT-NAMED:  (P.C. = 42)  (from MC: CSTACY; MOBY WORLD)

    You need to recompile the above file.  Better yet, tell us why you have
    a private version of that function.

Oh! I didn't look at the error very closely, did I?
That function is from Moon's finger patch file.
 8-Jun-84 10:14:42-EDT,3975;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 8 Jun 84 10:14-EDT
Date: Fri, 8 Jun 84 10:07 EDT
From:  <TOMR%MIT-APIARY-6@MIT-MC.ARPA>
Subject: Nasty <<Error Printing Value>> Bug
To: BUG-LISPM@MIT-MC.ARPA

In Release 5.0, Experimental MIT 1.4, FEP 18, on Lisp Machine Apiary-5 (3600):

This is not the first time this sort of error has occurred.  It seems to occur
randomly.  This particular instance occurred as I was demonstrating, with
examples from the LISP Manual, the simple use of flavors. . .most
disconcerting.  The circumstances that lead up to this error are as follows:  

(defflavor ship
        (x-pos y-pos mass)
        ()
        :gettable-instance-variables
        :settable-instance-variables
        :initable-instance-variables)     ;if this looks familiar, it
                                          ;is the example from the LISPM Man.

(setq my-ship (make-instance 'ship))

(defmethod (ship speed) ()
        (* x-pos y-pos))

(defflavor space-ship
        (astronauts)
        (ship)
        :gettable-instance-variables
        :settable-instance-variables
        :initable-instance-variables)

(setq my-spaceship (make-instance 'space-ship))

then this bug occurred.

TOMR@OZ
  

>>Error: The object <<Error printing object>> received a :OPERATION-HANDLED-P message, which went unclaimed.
         The rest of the message was (:UNCLAIMED-MESSAGE)
While in the function SI:PRINT-OBJECT  PRIN1  FORMAT:FORMAT-CTL-ASCII

SI:PRINT-OBJECT:  (P.C. = 332)
   Arg 0 (EXP): <<Error printing value>>
   Arg 1 (I-PRINDEPTH): 0.
   Arg 2 (SLASHIFY-P): T
   Arg 3 (STREAM): #<TYPEIN-WINDOW Typein Window 15 1002147 exposed>
   --Defaulted args:--
   Arg 4 (WHICH-OPERATIONS): (:TYO :STRING-OUT :LINE-OUT :LISTEN :TYI :TYI-NO-HANG :ANY-TYI :ANY-TYI-NO-HANG :WHO-LINE-DOCUMENTATION-STRING :MOUSE-OR-KBD-TYI ...)
   Local 5: #<CASE-HANDLER 37551060>
   Local 6: (#<CASE-HANDLER 37551422> #<BIND-HANDLER 37551266> #<BIND-HANDLER 37547304>)
   Local 7: (#<CASE-HANDLER 37551060> #<CASE-HANDLER 37551422> #<BIND-HANDLER 37551266> #<BIND-HANDLER 37547304>)
   Local 8: #<DTP-LOCATIVE 35773107>
   Local 9: DBG:|If you throw to this tag, you deserve to lose.|
   Local 10: #<DTP-ODD-PC 46154677>
   Local 11: #<DTP-LOCATIVE 35773107>
   Local 12: #<DTP-LOCATIVE 26500427>
   Local 13 (FASTP): (:STRING-OUT :LINE-OUT :LISTEN :TYI :TYI-NO-HANG :ANY-TYI :ANY-TYI-NO-HANG :WHO-LINE-DOCUMENTATION-STRING :MOUSE-OR-KBD-TYI :HANDLE-MOUSE ...)

PRIN1:  (P.C. = 10)
   Arg 0 (EXP): <<Error printing value>>
   Arg 1 (STREAM): #<TYPEIN-WINDOW Typein Window 15 1002147 exposed>

FORMAT:FORMAT-CTL-ASCII:  (P.C. = 52)
   Arg 0 (ARG): <<Error printing value>>
   Arg 1 (PARAMS): NIL
   Arg 2 (PRIN1P): T

(:PROPERTY FORMAT:S FORMAT:CTL-ONE-ARG):  (P.C. = 5)
   Arg 0 (ARG): <<Error printing value>>
   Arg 1 (PARAMS): NIL

FORMAT:FORMAT-CTL-OP:  (P.C. = 21)
   Arg 0 (OP): FORMAT:S
   Arg 1 (ARGS): (<<Error printing value>>
   Arg 2 (PARAMS): NIL

FORMAT:FORMAT-CTL-STRING:  (P.C. = 74)
   Arg 0 (ARGS): (<<Error printing value>>
   Arg 1 (CTL-STRING-initialization): "~S"

FORMAT:  (P.C. = 70)
   Arg 0 (STREAM): #<TYPEIN-WINDOW Typein Window 15 1002147 exposed>
   Arg 1 (CTL-STRING-initialization): "~S"
   Rest arg (ARGS): (<<Error printing value>>

ZWEI:TYPEIN-LINE:  (P.C. = 25)
   Arg 0 (STRING): "~S"
   Rest arg (ARGS): (<<Error printing value>>

Rest of stack:
ZWEI:EVAL-PRINT:  (P.C. = 16)
COMPILER:PROCESS-FORMS-FROM-STREAM:  (P.C. = 117)
ZWEI:COMPILE-INTERVAL:  (P.C. = 324)
ZWEI:COMPILE-PRINT-INTERVAL:  (P.C. = 76)
ZWEI:COMPILE-DEFINITION-INTERNAL:  (P.C. = 73)
ZWEI:COM-EVALUATE-REGION:  (P.C. = 7)
ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 200)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 41)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
 8-Jun-84 13:27:08-EDT,1637;000000000000
Mail-From: X.GYRO created at  8-Jun-84 13:26:32
Date: Fri 8 Jun 84 13:26-EDT
From: Scott W. Layson <X.GYRO@MIT-OZ>
Subject: package system extension request
To: bug-lispm@MIT-OZ

In both MIT and Symbolics systems,

There is a thing I'd like to do that, as far as I can tell, the package
system doesn't support at all.  Nor, offhand, do I see how it could.  I
thought I'd toss this out and see if anyone has any ideas.

The behavior I desire is to supply a "library" of "default functions", such
that other programs in several different packages can all use these functions,
but with the feature that any of the programs can shadow any of the defaults
without having to say in advance that it wants to do that.  It would be as
if FDEFINE, when it detects a redefinition conflict, were to reintern the
symbol locally, declare it shadowing, and then fset the new symbol.

Well, I see three choices.  One, I could try to do what I just said, by
handling the condition SYS:REDEFINITION.  This makes me nervous, because it
depends on PACKAGE being bound to the right thing across calls to FDEFINE,
but I guess it might work.  Two, I could live with having to declare
shadowing explicitly -- maybe not so bad.  Three, instead of using package
inheritance, I could just load the library into a fresh package, inhibit
fdefine warnings, and load the program on top of the library.

None of these is unacceptable, probably, but it bugs me in a philosophical
way that this behavior should be so hard to obtain.  It's really just the
equivalent on the function level of flavor method shadowing.

Comments?

-- Scott
 8-Jun-84 15:52:44-EDT,1149;000000000000
Received: from MIT-EECS by MIT-OZ via Chaosnet; 8 Jun 84 15:51-EDT
Date: Friday, 8 June 1984, 15:44-EDT
From: David H. Kaufman <sr.kaufman at MIT-SPEECH>
Subject: Bug with time parser and namespace
To: BUG-LISPM at MIT-OZ

In Release 5.0 [Beta Test rev 7], Spire-Macros 1.8, Compute 1.3,
Attribute 1.4, Audio 1.2, Speech-Attributes 1.0, Display 1.11,
Speech-Layouts 1.8, Experimental Versatec 2.0, Experimental Prtout 1.1,
Spire 13.0, SpireX 10.3, ZOO 1.2, mit GC, on Lisp Machine Yogi (LM-2):

(time:parse "dlw's birthday") (or indeed anybody's birthday) gets an
error because time:set-birthday passes time:dlw to
net:find-object-named.  The following code, adapted from TIMPAR.LISP,
works, though it may not be the right thing to do.  My addition is in
lowercase.

(DEFUN SET-BIRTHDAY (USER &OPTIONAL HOST)
  (PARSE-1 (LEXICALLY-ANALYZE
	     (IF (NOT (NULL HOST))
		 (FIND-BIRTHDAY (WITH-OUTPUT-TO-STRING (STANDARD-OUTPUT)
				  (CHAOS:WHOIS (STRING-APPEND USER #/@ HOST))))
		 (SEND
		   (IF (TYPEP USER 'SI:USER) USER
		       (NET:FIND-OBJECT-NAMED ':USER (string USER)))
		   ':GET ':BIRTHDAY)))
	   'MAIN))

DHK
 9-Jun-84 00:05:37-EDT,238;000000000001
Mail-From: RMS created at  9-Jun-84 00:05:06
Date: Sat 9 Jun 84 00:05:06-EDT
From: RMS@MIT-OZ
Subject: "Zetalisp is a trademark of Symbolics, Inc"
To: bug-lispm@MIT-OZ

It appears that the facts do not support this claim.
-------
 9-Jun-84 10:23:21-EDT,2721;000000000000
Mail-From: X.GYRO created at  9-Jun-84 10:22:59
Date: 9 Jun 1984  10:22 EDT (Sat)
Message-ID: <X.GYRO.12022080939.BABYL@MIT-OZ>
From: Scott Layson <X.GYRO@MIT-OZ>
To:   bug-lispm-mit@MIT-OZ
Subject: multiple file renaming on LMFS

In System 98.39, CADR 3.4, ZMail 53.5, Experimental Local-File 48.1,
Experimental FILE-Server 8.0, microcode 306, Zeta, on Astarte:


I tried to M-X Rename File "*.l" to "*.lisp".  Following the pattern of
several other methods in SYS:FILE;FSNAME, I have fixed this locally by
making the ERROR-P argument to (:METHOD FS:LOCAL-FILE-MIXIN :RENAME) optional,
defaulting to T.

>>TRAP 1670. (FUNCTION-ENTRY)
Function (:METHOD FS:LOCAL-FILE-MIXIN :RENAME) called with only 2 arguments.
Backtrace from the debugger:

(:METHOD FS:LOCAL-FILE-MIXIN :RENAME) (P.C. = 100)
  (SELF is #FS:LM-PATHNAME "ASTARTE: LQLOGO; COMMON.L#1")

 Arg 0 (OPERATION): :RENAME
 Arg 1 (NEW-NAME): #FS:LM-PATHNAME "ASTARTE: LQLOGO; COMMON.LISP#>"
   --Missing args:--
 Arg 2 (ERROR-P)
Local 0 (FILE): NIL
Local 1 (IGNORE): NIL


ZWEI:COM-RENAME-FILE (P.C. = 224)

Local 0 (PATHNAME): #FS:LM-PATHNAME "ASTARTE: LQLOGO; *.L#>"
Local 1 (TO-SPEC): "*.lisp"
...) (#FS:LM-PATHNAME "ASTARTE: LQLOGO; EVAL.L#1" :BYTE-SIZE 8. :LENGTH-IN-BLOCKS ...) ...)
Local 3 (TO-PATHNAME): #FS:LM-PATHNAME "ASTARTE: LQLOGO; *.LISP#>"
FS:LM-PATHNAME "ASTARTE: LQLOGO; GRAPH.L#1" :BYTE-SIZE 8. :LENGTH-IN-BLOCKS ...) ...)
Local 5 (ELT): (#FS:LM-PATHNAME "ASTARTE: LQLOGO; COMMON.L#1" :BYTE-SIZE 8. :LENGTH-IN-BLOCKS ...)
Local 6 (ERROR): NIL
Local 7: ((FS:FILE-ERROR SYSTEM:REMOTE-NETWORK-ERROR) SI:CONDITION-CASE-THROW G1725)
Local 8: ((** SI:CONDITION-CASE-THROW G1725))
Local 9 (ERROR): NIL
Local 10 (*SELECTQ-ITEM*): NIL
Local 11 (OLD-TRUENAME): NIL
Local 12 (NEW-TRUENAME): NIL


ZWEI:COM-EXTENDED-COMMAND (P.C. = 67)

Local 0 (ANS): ("Rename File" . ZWEI:COM-RENAME-FILE)


Additional information supplied with call:
 Expecting 3 values

ZWEI:COMMAND-EXECUTE (P.C. = 115)

 Arg 0 (COMMAND): ZWEI:COM-EXTENDED-COMMAND
 Arg 1 (CHAR): 4194392.
 Arg 2 (PREFIX-CHAR): NIL
 Arg 3 (HOOK-LIST): NIL
Local 0 (HOOK-SUCCESS): T
Local 1: NIL
Local 2 (HOOK): NIL


ZWEI:PROCESS-COMMAND-CHAR (P.C. = 65)

 Arg 0 (CH): 4194392.
Local 0 (VALUE): NIL
Local 1 (LINE): NIL
Local 2 (INDEX): NIL
Local 3: NIL
Local 4 (HOOK): NIL


Remainder of stack:

(:METHOD ZWEI:WINDOW :EDIT) (P.C. = 464)
(:INTERNAL (:METHOD ZWEI:ZMACS-WINDOW :COMBINED :EDIT) 0.) (P.C. = 74)
FUNCALL (P.C. = 25)
(:METHOD ZWEI:DISPLAYER :AROUND :EDIT) (P.C. = 31)
(:METHOD ZWEI:ZMACS-WINDOW :COMBINED :EDIT) (P.C. = 47)
ZWEI:ZMACS-WINDOW-TOP-LEVEL (P.C. = 46)
SI:PROCESS-TOP-LEVEL (P.C. = 152)

 9-Jun-84 10:28:48-EDT,3012;000000000000
Mail-From: X.GYRO created at  9-Jun-84 10:28:24
Date: 9 Jun 1984  10:28 EDT (Sat)
Message-ID: <X.GYRO.12022081925.BABYL@MIT-OZ>
From: Scott Layson <X.GYRO@MIT-OZ>
To:   bug-lispm-mit@MIT-OZ
Subject: two window mode startup

In System 98.39, CADR 3.4, ZMail 53.5, Experimental Local-File 48.1,
Experimental FILE-Server 8.0, microcode 306, on Zeta-Soft Astarte:

This happens sometimes when I do C-X 2, most often if I've done a lot
of editing and this is the first time I've done C-X 2 since the last
cold boot.  It never happens if I do the C-X 2 "sufficiently soon"
(whatever that is) after starting the editor.  It may have something
to do with which buffer it's trying to display in in the new lower
window.  Proceeding with a value of 0 always works.

This bug existed in System 94 too.


>>TRAP 7967. (TRANS-TRAP)
The instance variable ZWEI:N-PLINES is unbound in #<ZMACS-WINDOW-PANE Zmacs Window Pane 2 1665406 deactivated>.
Backtrace from the debugger:

ZWEI:MUNG-LINES-WITH-CHAR (P.C. = 43)

 Arg 0 (CH): 137.
 Arg 1 (WINDOW): #<ZMACS-WINDOW-PANE Zmacs Window Pane 2 1665406 deactivated>
Local 0 (I): GLOBAL:NIL
Local 1 (NPLINES): GLOBAL:NIL
Local 2 (LINE): GLOBAL:NIL
Local 3 (FLAG): GLOBAL:NIL


(:METHOD ZWEI:WINDOW :SET-TAB-NCHARS) (P.C. = 47)
  (SELF is #<ZMACS-WINDOW-PANE Zmacs Window Pane 2 1665406 deactivated>)

 Arg 0 (OPERATION): :SET-TAB-NCHARS
 Arg 1 (TAB-NCHARS): 5.
Local 0 (OLD): 8.


ZWEI:REDEFINE-WINDOW-TAB-NCHARS (P.C. = 23)

 Arg 0 (WINDOW): #<ZMACS-WINDOW-PANE Zmacs Window Pane 2 1665406 deactivated>
 Arg 1 (TAB-NCHARS): 5.


(:METHOD ZWEI:ZMACS-WINDOW :SET-INTERVAL-INTERNAL) (P.C. = 174)
  (SELF is #<ZMACS-WINDOW-PANE Zmacs Window Pane 2 1665406 deactivated>)

 Arg 0 (OPERATION): :SET-INTERVAL-INTERNAL
 Arg 1 (BUFFER): #<ZMACS-BUFFER "CPARSE.C#> GYRO.ZETAC; ASTARTE:" 50121537>


GLOBAL:FUNCALL (P.C. = 25)

 Arg 0 (FN): #<ZMACS-WINDOW-PANE Zmacs Window Pane 2 1665406 deactivated>
 Rest arg (ARGS): (:SET-INTERVAL-INTERNAL #<ZMACS-BUFFER "CPARSE.C#> GYRO.ZETAC; ASTARTE:" 50121537>)


Remainder of stack:

(:METHOD ZWEI:DISPLAYER :AFTER :INIT) (P.C. = 34)
(:INTERNAL (:METHOD ZWEI:ZMACS-WINDOW-PANE :COMBINED :INIT) 0.) (P.C. = 213)
(:METHOD TV:SHEET :INVERSE-AROUND :INIT) (P.C. = 140)
(:METHOD ZWEI:ZMACS-WINDOW-PANE :COMBINED :INIT) (P.C. = 43)
GLOBAL:INSTANTIATE-FLAVOR (P.C. = 473)
TV:MAKE-WINDOW (P.C. = 26)
(:METHOD ZWEI:ZWEI-FRAME :CREATE-WINDOW) (P.C. = 51)
(:METHOD ZWEI:ZMACS-FRAME :TWO-EDITOR-WINDOWS) (P.C. = 107)
ZWEI:SWITCH-WINDOWS (P.C. = 72)
ZWEI:COM-TWO-WINDOWS (P.C. = 27)
...
ZWEI:COMMAND-EXECUTE (P.C. = 115)
ZWEI:PROCESS-COMMAND-CHAR (P.C. = 65)
(:METHOD ZWEI:WINDOW :EDIT) (P.C. = 464)
(:INTERNAL (:METHOD ZWEI:ZMACS-WINDOW :COMBINED :EDIT) 0.) (P.C. = 74)
GLOBAL:FUNCALL (P.C. = 25)
(:METHOD ZWEI:DISPLAYER :AROUND :EDIT) (P.C. = 31)
(:METHOD ZWEI:ZMACS-WINDOW :COMBINED :EDIT) (P.C. = 47)
ZWEI:ZMACS-WINDOW-TOP-LEVEL (P.C. = 46)
SI:PROCESS-TOP-LEVEL (P.C. = 152)

 9-Jun-84 10:32:56-EDT,747;000000000000
Mail-From: X.GYRO created at  9-Jun-84 10:32:32
Date: 9 Jun 1984  10:32 EDT (Sat)
Message-ID: <X.GYRO.12022082680.BABYL@MIT-OZ>
From: Scott Layson <X.GYRO@MIT-OZ>
To:   bug-lispm-mit@MIT-OZ
Subject: miscompilation of SYS:ZWEI;COMA

In ZWEI in System 98.39, CADR 3.4, ZMail 53.5,
Experimental Local-File 48.1, Experimental FILE-Server 8.0,
microcode 306, on Zeta-Soft Astarte:

C-U C-U C-Space does the same thing as C-U C-Space, viz., pops the
mark and goes there.  It's supposed to pop the mark and throw it away.
You have to type C-U C-U C-U C-Space to throw away the mark.  The
problem is that SYS:ZWEI;COMA was compiled in base ten.
(Alternatively, one might say that the problem is that it was written
in octal.)

-- Scott
 9-Jun-84 10:35:10-EDT,914;000000000000
Mail-From: X.GYRO created at  9-Jun-84 10:34:47
Date: 9 Jun 1984  10:34 EDT (Sat)
Message-ID: <X.GYRO.12022083090.BABYL@MIT-OZ>
From: Scott Layson <X.GYRO@MIT-OZ>
To:   bug-lispm-mit@MIT-OZ
Subject: :SELECTED-PANE init option missing for TV:BASIC-CONSTRAINT-FRAME

In System 98.39, CADR 3.4, ZMail 53.5, Experimental Local-File 48.1,
Experimental FILE-Server 8.0, microcode 306, on Zeta-Soft Astarte:

>>ERROR: Flavor FOO-WINDOW does not handle the init keyword :SELECTED-PANE

even though it depends on TV:BASIC-CONSTRAINT-FRAME, which on p. 155 of
the Window System Manual is documented to accept this init keyword.  I
gather that :SELECTION-SUBSTITUTE will do the same thing, but
:SELECTED-PANE works in the Symbolics system, and I would like to
minimize conditionalization of code.  And after all, it @i<is>
documented to be there.  (FOO-WINDOW is just a random window I made.)

-- Scott

 9-Jun-84 12:01:10-EDT,1474;000000000000
Received: from SCRC-TENEX by MIT-OZ via Chaosnet; 9 Jun 84 12:00-EDT
Date:  8 Jun 1984 2323-EDT
From: Daniel L. Weinreb <DLW@SCRC-TENEX>
Subject: Re: package system extension request
To: X.GYRO@MIT-OZ
cc: bug-lispm@MIT-OZ
In-Reply-To: The message of Fri 8 Jun 84 13:26-EDT from Scott W. Layson <X.GYRO@MIT-OZ>

If I understand correctly what you're asking for, here is the flaw.
Suppose you have a library named LIB, which defines a utility function
called UTIL.  You also have your own application program APPL, which
is going to shadow (override) the UTIL function, even though APPL
in general depends on stuff in LIB.  Now suppose you have two functions
FOO and BAR in APPL, both of which contain forms that look like
(UTIL <arg1> <arg2> ..).  Suppose that when you load APPL into
the Lisp environment, FOO gets loaded first, then your own version
of UTIL gets loaded, and then BAR gets loaded (I am assuming that LIB
is loaded before any of these guys).  Well, FOO will get LIB's UTIL,
and BAR will get your own UTIL.  In other words, if we do something
that answers your request, then the applications program writer will
have to be extremely cautious about the order in which things are loaded,
which sometimes included the order in which functions appear in a file.
One of the Great Design Goals of the package system was to try to
alleviate the need for such caution, and that's why we don't provide
the feature you are asking for.
-------
 9-Jun-84 12:05:13-EDT,2014;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 9 Jun 84 12:04-EDT
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 46023; Fri 8-Jun-84 21:35:17-EDT
Date: Friday, 8 June 1984, 21:33-EDT
From: David A. Moon <Moon at SCRC-TENEX>
Subject: package system extension request
To: Scott W. Layson <X.GYRO at MIT-OZ>
Cc: bug-lispm at MIT-OZ
In-reply-to: The message of 8 Jun 84 13:26-EDT from Scott W. Layson <X.GYRO at MIT-OZ>
Message-ID: <840608213356.2.MOON@EUPHRATES.SCRC.Symbolics>

    Date: Fri 8 Jun 84 13:26-EDT
    From: Scott W. Layson <X.GYRO@MIT-OZ>

    There is a thing I'd like to do that, as far as I can tell, the package
    system doesn't support at all.  Nor, offhand, do I see how it could.  I
    thought I'd toss this out and see if anyone has any ideas.

    The behavior I desire is to supply a "library" of "default functions", such
    that other programs in several different packages can all use these functions,
    but with the feature that any of the programs can shadow any of the defaults
    without having to say in advance that it wants to do that.  It would be as
    if FDEFINE, when it detects a redefinition conflict, were to reintern the
    symbol locally, declare it shadowing, and then fset the new symbol.

The reason this is hard is that the package system deals with symbols, not with
function definitions.  The binding between a name and a symbol-object is decided
long before you know how the symbol is going to be used.

The Scheme package system, which deals with bindings of symbols to values (and
function definitions) instead of bindings of names to symbols, might be closer
to what you want.  But of course that won't save you from this problem:

What happens if two parts of your program use the name FOO, where one of them
wants the function from the library and the other wants its own function named
FOO?  I think you are better off using either explicit shadowing or explicit
importing.
 9-Jun-84 12:05:34-EDT,1971;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 9 Jun 84 12:05-EDT
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 46028; Fri 8-Jun-84 21:48:46-EDT
Date: Friday, 8 June 1984, 21:47-EDT
From: David A. Moon <Moon at SCRC-TENEX>
To: Christopher C. Stacy <CSTACY at MIT-MC>
Cc: MMcM at SCRC-TENEX, BUG-LISPM at MIT-OZ
In-reply-to: The message of 8 Jun 84 08:45-EDT from Christopher C. Stacy <CSTACY at MIT-MC>
Message-ID: <840608214728.5.MOON@EUPHRATES.SCRC.Symbolics>

    Date: 8 June 1984 08:45-EDT
    From: Christopher C. Stacy <CSTACY @ MIT-MC>

	Date: Thursday, 7 June 1984, 15:11-EDT
	From: Mike McMahon <MMcM at SCRC-TENEX>
	To:   Christopher C. Stacy <CStacy>
	cc:   BUG-LISPM at MIT-OZ
	In-Reply-To: The message of 6 Jun 84 22:37-EDT from Christopher C. Stacy <CStacy at MIT-MC>
	Message-ID: <840607151149.4.MMCM@MERRIMACK.SCRC.Symbolics>

	    Date: Wednesday, 6 June 1984, 22:37-EDT
	    From: Christopher C. Stacy <CStacy at MIT-MC>

	    In Release 5.0, Experimental MIT 1.4, on Lisp Machine Bing Crosby (3600):

	    I tried to telnet to an ARPA Internet host via the Terminal window.

	    >>Trap: The variable NETI:*NAMESPACE-PROTOCOL-VERSION* is unbound.
	    While in the function NETI:OPEN-NAMESPACE-SERVER  NETI:QUERY-NAMESPACE-SERVER  NETI:FIND-OBJECT-NAMED-IN-NAMESPACE

	    NETI:OPEN-NAMESPACE-SERVER:  (P.C. = 333)
	    NETI:QUERY-NAMESPACE-SERVER:  (P.C. = 75)
	    NETI:FIND-OBJECT-NAMED-IN-NAMESPACE:  (P.C. = 205)
	    NET:FIND-OBJECT-NAMED:  (P.C. = 42)  (from MC: CSTACY; MOBY WORLD)

	You need to recompile the above file.  Better yet, tell us why you have
	a private version of that function.

    Oh! I didn't look at the error very closely, did I?
    That function is from Moon's finger patch file.

If you mean Q:>Moon>Hacks>Function-F, there is no function named NET:FIND-OBJECT-NAMED
in that file and I don't remember it ever being there in the past.
 9-Jun-84 12:05:52-EDT,1306;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 9 Jun 84 12:05-EDT
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 46031; Fri 8-Jun-84 21:56:37-EDT
Date: Friday, 8 June 1984, 21:55-EDT
From: David A. Moon <Moon at SCRC-TENEX>
Subject: arglist of macros with no args returns a symbol.
To: GAVAN at MIT-OZ
Cc: BUG-LISPM at MIT-OZ
In-reply-to: The message of 8 Jun 84 02:08-EDT from GAVAN at MIT-OZ
Message-ID: <840608215514.7.MOON@EUPHRATES.SCRC.Symbolics>

    Date: Friday, 8 June 1984, 02:08-EDT
    From:  <GAVAN at MIT-OZ>

    In Release 5.0, Experimental MIT 1.4, Experimental RELATUS 111.2, on Lisp Machine John Lennon (3600):

    Say I have a macro with no arguments, like:

    (DEFMACRO FOO ()
      `(NCONS 'FOO))


    If I do ARGLIST of FOO, these multiple values are returned:

    MACRO
    NIL
    MACRO

    Shouldn't the first value be a list, for instance the null list?
    This is what is returned for arglist of defuns with no args.
    Why should macros behave any differently?

Thanks for the report.  In the source I fixed some code that was confused
about the difference between macros with no "arguments" and macros where
nobody said what the names of the "arguments" were.  It returns NIL NIL MACRO
now.
 9-Jun-84 18:12:20-EDT,1285;000000000000
Received: from MIT-LISPM-18 by MIT-OZ via Chaosnet; 9 Jun 84 18:11-EDT
Date: Saturday, 9 June 1984, 18:07-EDT
From: Eugene Ciccarelli <ECC at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In System 98.49, CADR 3.6, ZMail 53.17, MIT-Specific 22.1, microcode 309,
ZM MIT, on Lisp Machine Eighteen:


Insert your description of the circumstances here:

This came from (sxhash (pkg-find-package 'zwei)).  I first noticed this
when a package was part of a list arg to puthash-equal.  It got this
sxhash error, and when I aborted it, the machine stopped.  Warm-booting
stopped again after answering yes to the reset question.  (Resetting the
Zwei process, which was where I had executed the puthash-equal.)


>>TRAP 1312 (SELECTED-METHOD-NOT-FOUND M-A M-C)
No method for message :SXHASH was found in a call to #<DTP-SELECT-METHOD 33071222>.
Backtrace from the debugger:

NAMED-STRUCTURE-INVOKE (P.C. = 162)

 Arg 0 (OPERATION): :SXHASH
 Arg 1 (STRUCTURE): #<Package ZWEI 5065017>
 Rest arg (ARGS): (NIL)
Local 1 (C): #<DTP-SELECT-METHOD 33071222>


SXHASH (P.C. = 312)

 Arg 0 (X): #<Package ZWEI 5065017>
   --Defaulted args:--
 Arg 1 (RANDOM-OBJECT-ACTION): NIL
Local 0 (ROT): NIL
Local 1 (HASH): NIL
Local 2 (Y): NIL
Local 3 (X): NIL
Local 4: NIL
Local 5: NIL
10-Jun-84 10:58:30-EDT,1944;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 10 Jun 84 10:58-EDT
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 46222; Sun 10-Jun-84 10:59:01-EDT
Date: Sunday, 10 June 1984, 10:59-EDT
From: New FEP system <DCP at SCRC-TENEX>
Subject: Bug with time parser and namespace
To: David H. Kaufman <sr.kaufman at MIT-SPEECH>, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 8 Jun 84 15:44-EDT from David H. Kaufman <sr.kaufman at MIT-SPEECH>

    Date: Friday, 8 June 1984, 15:44-EDT
    From: David H. Kaufman <sr.kaufman at MIT-SPEECH>

    In Release 5.0 [Beta Test rev 7], Spire-Macros 1.8, Compute 1.3,
    Attribute 1.4, Audio 1.2, Speech-Attributes 1.0, Display 1.11,
    Speech-Layouts 1.8, Experimental Versatec 2.0, Experimental Prtout 1.1,
    Spire 13.0, SpireX 10.3, ZOO 1.2, mit GC, on Lisp Machine Yogi (LM-2):

    (time:parse "dlw's birthday") (or indeed anybody's birthday) gets an
    error because time:set-birthday passes time:dlw to
    net:find-object-named.  The following code, adapted from TIMPAR.LISP,
    works, though it may not be the right thing to do.  My addition is in
    lowercase.

    (DEFUN SET-BIRTHDAY (USER &OPTIONAL HOST)
      (PARSE-1 (LEXICALLY-ANALYZE
		 (IF (NOT (NULL HOST))
		     (FIND-BIRTHDAY (WITH-OUTPUT-TO-STRING (STANDARD-OUTPUT)
				      (CHAOS:WHOIS (STRING-APPEND USER #/@ HOST))))
		     (SEND
		       (IF (TYPEP USER 'SI:USER) USER
			   (NET:FIND-OBJECT-NAMED ':USER (string USER)))
		       ':GET ':BIRTHDAY)))
	       'MAIN))

This was fixed in the source on December 7th in exactly the way you came
up with.  Thanks anyway.  I don't know if anybody has time to patch the
current version (with yet more changes) into Release 5 and QA it.  (Not
many people have tripped over this bug and reported it.)  You can always
include your fix in your init file until you do notice it fixed in the
released world.
10-Jun-84 14:41:47-EDT,1416;000000000000
Received: from MIT-ROBOT-1 by MIT-OZ via Chaosnet; 10 Jun 84 14:41-EDT
Date: Sunday, 10 June 1984, 14:36-EDT
From: Harry L. Voorhees <HLV at MIT-OZ>
Subject: Going into >Fep when using Compile Region (Control-Shift-C)
To: BUG-LISPM at MIT-OZ

In Release 5.0 [Beta Test rev 7], FEP 18, on Lisp Machine Robot-1 (3600):

As you (Moon) suggested, I did a Show System Status, according the to
instructions in NETIO.  From decoding the macro PC, it seems that the
compiler bombs on instruction 10 (octal) of #<DTP-COMPILED-FUNCTION
SI:DECLARED-DEFINITION-INTERNAL 1274430>.  (The macro PC was 1274434).

The current micro PC was 15523 and the previous PC values were 46477,
55523, 143403, 57775, 57774, 47061, 43453, 56313, 52420, 46611, 46315,
56312, 52417, 50162, 47222, 44241.  I tried using (dbg:decode-micro-pc)
on the current PC value; it tried loading the microcode symbol table
from a file on SRC: which wasn't found.

By the way, the function which I was attempting to compile is:
  
(defun g (sigma)
  (local-declare (sigma))
  (closure '(sigma)
    #'(lambda (x)
	(let ((x2/sigma2 (// (* x x) (* sigma sigma))))
	  (* (// 1 (* (sqrt (* 2.0 pi)) sigma 3.))
	     (exp (* -0.5 x2/sigma2)))))))


Also, Compile Region does not appear to be documented in the new ZMACS
documentation.  Any ideas on what the problem is?  Thank you.

                                  Harry Voorhees
10-Jun-84 16:05:35-EDT,4539;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 10 Jun 84 16:05-EDT
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 46266; Sun 10-Jun-84 16:05:58-EDT
Date: Sunday, 10 June 1984, 16:06-EDT
From: New FEP system <DCP at SCRC-TENEX>
Subject: Going into >Fep when using Compile Region (Control-Shift-C)
To: Harry L. Voorhees <HLV at MIT-OZ>, BUG-LISPM at MIT-OZ,
    Maint at SCRC-TENEX
In-Reply-To: The message of 10 Jun 84 14:36-EDT from Harry L. Voorhees <HLV at MIT-OZ>

    Date: Sunday, 10 June 1984, 14:36-EDT
    From: Harry L. Voorhees <HLV at MIT-OZ>

    In Release 5.0 [Beta Test rev 7], FEP 18, on Lisp Machine Robot-1 (3600):

    As you (Moon) suggested, I did a Show System Status, according the to
    instructions in NETIO.  From decoding the macro PC, it seems that the
    compiler bombs on instruction 10 (octal) of #<DTP-COMPILED-FUNCTION
    SI:DECLARED-DEFINITION-INTERNAL 1274430>.  (The macro PC was 1274434).

    The current micro PC was 15523 and the previous PC values were 46477,
    55523, 143403, 57775, 57774, 47061, 43453, 56313, 52420, 46611, 46315,
    56312, 52417, 50162, 47222, 44241.  I tried using (dbg:decode-micro-pc)
    on the current PC value; it tried loading the microcode symbol table
    from a file on SRC: which wasn't found.
This [symbol table not found] is a bug.  Maint?

    By the way, the function which I was attempting to compile is:
  
    (defun g (sigma)
      (local-declare (sigma))
      (closure '(sigma)
	#'(lambda (x)
	    (let ((x2/sigma2 (// (* x x) (* sigma sigma))))
	      (* (// 1 (* (sqrt (* 2.0 pi)) sigma 3.))
		 (exp (* -0.5 x2/sigma2)))))))

Included below is the error it was trying to give you.  Your stack group
probably has non-trappability set somehow so you will go to the FEP on
any microcode signalled error in that stack group.  This can happen (in
5.0beta7 at least) if you hit [Abort] while in the middle of handling a
microcode generated error.  This is fixed by 243.580 and microcode 274.
I don't see any indication in Joseph's log that this is being migrated
to Release 5, though I don't know how up to date that log is.

There are a few bugs with your program.  The syntax of local-declare is
wrong.  What you probably want is something like
    (local-declare ((special sigma))
    (defun g (sigma)
      (closure '(sigma)
	#'(lambda (x)
	    (let ((x2/sigma2 (// (* x x) (* sigma sigma))))
	      (* (// 1 (* (sqrt (* 2.0 pi)) sigma 3.))
		 (exp (* -0.5 x2/sigma2))))))))

		     ------------------------------
Error it was trying to signal:

>>Trap: The argument given to the CAR instruction, SIGMA, was not a list, a locative or NIL.
While in the function SI:DECLARED-DEFINITION-INTERNAL  SI:CACHED-LOCAL-DECLARATION  SYS:DECLARED-DEFINITION
While compiling G

SI:DECLARED-DEFINITION-INTERNAL:  (P.C. = 10)
   Arg 0 (FUNCTION): QUOTE
   Local 1 (DEF): NIL
   Local 2 (SUBST-DEF): NIL
   Local 3: (SIGMA (COMPILER:LEXICAL SIGMA))
   Local 4 (L): SIGMA

SI:CACHED-LOCAL-DECLARATION:  (P.C. = 7)
   Arg 0 (FUNCTION): SI:DECLARED-DEFINITION-INTERNAL
   Arg 1 (ARG): QUOTE

SYS:DECLARED-DEFINITION:  (P.C. = 4)
   Arg 0 (FUNCTION): QUOTE

COMPILER:CLASSIFY-FORM:  (P.C. = 170)
   Arg 0 (FORM): (QUOTE NIL)

COMPILER:TRANSFORM:  (P.C. = 14)
   Arg 0 (FORM): (QUOTE NIL)
   Arg 1 (DESTINATION): IGNORE
   --Defaulted args:--
   Arg 2 (TRANSFORM-P): T
   Arg 3 (OPTIMIZE-P): T

COMPILER:PHASE-1:  (P.C. = 15)
   Arg 0 (FORM): (QUOTE NIL)
   Arg 1 (DESTINATION): IGNORE
   --Defaulted args:--
   Arg 2 (DO-TRANSFORM): T

(:PROPERTY COMPILER-LET COMPILER:PHASE-1):  (P.C. = 136)
   Arg 0 (BODY): (((LOCAL-DECLARATIONS (APPEND ** LOCAL-DECLARATIONS))))
   Arg 1 (DESTINATION): IGNORE

COMPILER:PHASE-1:  (P.C. = 251)
   Arg 0 (FORM): (SI:DISPLACED (LOCAL-DECLARE (SIGMA)) (COMPILER-LET ((LOCAL-DECLARATIONS **))))
   Local 0 (FORM): (COMPILER-LET ((LOCAL-DECLARATIONS (APPEND ** LOCAL-DECLARATIONS))))
   Arg 1 (DESTINATION): IGNORE
   --Defaulted args:--
   Arg 2 (DO-TRANSFORM): T

Rest of stack:
COMPILER:PHASE-1-PROGN:  (P.C. = 22)
COMPILER:PHASE-1-FUNCTION-DEFINITION:  (P.C. = 260)
COMPILER:PHASE-1-EXTERNAL-FUNCTION:  (P.C. = 24)
COMPILER:RUN-PHASE-1-FUNCTION:  (P.C. = 67)
COMPILER:COMPILE-DEFINITION-1:  (P.C. = 10)
COMPILER:COMPILE-DEFINITION:  (P.C. = 43)
(:INTERNAL COMPILER:COMPILE-TO-CORE 0):  (P.C. = 5)
COMPILER:COMPILE-TO-CORE:  (P.C. = 12)
COMPILER:COMPILE-FORM-FUNCTION:  (P.C. = 41)
10-Jun-84 17:32:16-EDT,1611;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 10 Jun 84 17:31-EDT
Received: from SCRC-HARLEM by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 46317; Sun 10-Jun-84 17:32:40-EDT
Date: Sunday, 10 June 1984, 17:27-EDT
From: Joseph R Goldstone <joseph at SCRC-QUABBIN>
Subject: Going into >Fep when using Compile Region (Control-Shift-C)
To: New FEP system <DCP at SCRC-TENEX>
Cc: BUG-LISPM at MIT-OZ, Maint at SCRC-TENEX
In-reply-to: The message of 10 Jun 84 16:06-EDT from New FEP system <DCP at SCRC-TENEX>

    Date: Sunday, 10 June 1984, 16:06-EDT
    From: New FEP system <DCP at SCRC-TENEX>
	Date: Sunday, 10 June 1984, 14:36-EDT
	From: Harry L. Voorhees <HLV at MIT-OZ>
	In Release 5.0 [Beta Test rev 7], FEP 18, on Lisp Machine Robot-1 (3600):

	As you (Moon) suggested, I did a Show System Status, according the to
	instructions in NETIO.  From decoding the macro PC, it seems that the
	compiler bombs on instruction 10 (octal) of #<DTP-COMPILED-FUNCTION
	SI:DECLARED-DEFINITION-INTERNAL 1274430>.  (The macro PC was 1274434).

	The current micro PC was 15523 and the previous PC values were 46477,
	55523, 143403, 57775, 57774, 47061, 43453, 56313, 52420, 46611, 46315,
	56312, 52417, 50162, 47222, 44241.  I tried using (dbg:decode-micro-pc)
	on the current PC value; it tried loading the microcode symbol table
	from a file on SRC: which wasn't found.
    This [symbol table not found] is a bug.  Maint?
I think they have yet to load their source tape.  DPH is working on it and I will
give him any help he needs (that I can give; presumably CENT has to help too).
10-Jun-84 18:06:35-EDT,7690;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 10 Jun 84 18:06-EDT
Date: Thursday, 31 May 1984, 13:31-EDT
From: Scott Cyphers <sr.ehpyc at MIT-SPEECH>
Subject: Error sending mail
To: BUG-LISPM at MIT-OZ

In Release 5.0 [Beta Test rev 7], Spire-Macros 1.8, Compute 1.3,
Attribute 1.6, Audio 1.2, Speech-Attributes 1.0, Display 1.11,
Speech-Layouts 1.8, Experimental Versatec 2.0, Experimental Prtout 1.1,
Spire 13.0, SpireX 10.3, mit GC, on Lisp Machine Yogi (LM-2):

MC is the first host on the list of places to try to send mail to, and
resuming from this error just tries MC again and gets the error.

>>Error: SMTP error: 421 Sorry, big mail backlog!  Try again later.
While in the function ZWEI:SMTP-CHECK-REPLY  ZWEI:SMTP-MAILER  ZWEI:SMTP-MAIL-INTERNAL

ZWEI:SMTP-CHECK-REPLY:  (P.C. = 165)
   Arg 0 (STREAM): #<ASCII-TRANSLATING-CHARACTER-STREAM 37325004>
   Arg 1 (EXPECTED): 250.
   Arg 2 (FORMAT): "~A From:<~A>"
   Rest arg (ARGS): ("MAIL" "Cypher%MIT-YOGI@MIT-MC.ARPA")
   Local 1 (MSG): "MAIL From:<Cypher%MIT-YOGI@MIT-MC.ARPA>"
   Local 2 (REPLY): "421 Sorry, big mail backlog!  Try again later."
   Local 3 (LINE): "421 Sorry, big mail backlog!  Try again later."
   Local 4 (EOF): NIL
   Local 5 (NUM): 421.
   Local 6 (DELIM): 3.
   Local 7 (ETYPE): (421. ZWEI:SMTP-HOST-NOT-AVAILABLE ZWEI:MAILER-TEMPORARY-ERROR)

ZWEI:SMTP-MAILER:  (P.C. = 140)
   Arg 0 (PATH): #<SERVICE-ACCESS-PATH STORE-AND-FORWARD-MAIL (SMTP) -- MC on CHAOS 37320237>
   Arg 1 (CMD): "MAIL"
   Arg 2 (FROM): (:NAME "Cypher" :HOST (:OBJECT #<LISPM-HOST YOGI 3767432>))
   Arg 3 (TO): ((:NAME "BUG-SPIRE" :HOST (:OBJECT #<TOPS20-HOST SPEECH 3766323>) :ORIGINAL-INTERVAL (("To: BUG-SPIRE" 4.) ("To: BUG-SPIRE" 13.)) :HOST-DEFAULTED T) (:NAME "dph" :HOST (:OBJECT #<TOPS20-HOST OZ 3765200>) :INTERVAL (("To: dph@MIT-OZ" 4.) ("To: dph@MIT-OZ" 14.))))
   Arg 4 (MESSAGE): "Date: Thursday, 31 May 1984, 13:25-EDT
From: Scott Cyphers <sr.ehpyc at MIT-SPEECH>
Subject: Spire loses while trying to load
To: dph at MIT-OZ, BUG-SPIRE at MIT-SPEECH
In-reply-to: The message of 10 Jun 84 13:06-EDT from dph at MIT-OZ

    Date: Sunday, 10 June 1984, 13:06-EDT
    From: <dph at MIT-OZ>
    To:   BUG-SPIRE
    Re:   Spire loses while trying to load

    In Release 5.0, Experimental MIT 1.4, Spire-Macros 1.8, Compute 1.3,
    Attribute 1.6, Audio 1.2, Speech-Attributes 1.0, FEP 18, on Lisp Machine Janis Joplin (3600):

    While trying to load Spire onto a vanilla Rel 5 band.

It should work now (as soon as I compile the patch on the 3600).

attribute-alist is now a hash table (the name will change on the next
compilation) so that systems which have many attributes will be faster
at finding them.  There may be one or two others of these lurking around
in various places, so if you get another one, it just needs to be changed
to use a hash table (see :set-attribute and :get-attribute messages in 
UTTERANCE).
"

ZWEI:SMTP-MAIL-INTERNAL:  (P.C. = 170)
   Arg 0 (PATH): #<SERVICE-ACCESS-PATH STORE-AND-FORWARD-MAIL (SMTP) -- MC on CHAOS 37320237>

ZWEI:INVOKE-SERVICE-STORE-AND-FORWARD-MAIL-WITH-SMTP:  (P.C. = 22)
   Arg 0 (PATH): #<SERVICE-ACCESS-PATH STORE-AND-FORWARD-MAIL (SMTP) -- MC on CHAOS 37320237>

NET:INVOKE-SERVICE-ACCESS-PATH:  (P.C. = 44)
   Arg 0 (SERVICE-ACCESS-PATH): #<SERVICE-ACCESS-PATH STORE-AND-FORWARD-MAIL (SMTP) -- MC on CHAOS 37320237>
   Arg 1 (SERVICE-ARGS): (((:NAME "BUG-SPIRE" :HOST (:OBJECT #<TOPS20-HOST SPEECH 3766323>) :ORIGINAL-INTERVAL (** **) :HOST-DEFAULTED T) (:NAME "dph" :HOST (:OBJECT #<TOPS20-HOST OZ 3765200>) :INTERVAL (** **))) (:TEXT #<NODE 37320203> :HEADERS (:DATE 2663861141. :FROM (**) :SUBJECT "Spire loses while trying to load" :TO (** **) :IN-REPLY-TO ("The message of 10 Jun 84 13:06-EDT from dph at MIT-OZ")) :HEADER-FORMAT :INCLUDE-PERSONAL :TRANSMIT-TIME 2663861141. :DRAFT-MSG #<DRAFT-MSG 37207365>))

ZWEI:INVOKE-MAIL-SERVICE:  (P.C. = 27)
   Arg 0 (SERVICE-ACCESS-PATH): #<SERVICE-ACCESS-PATH STORE-AND-FORWARD-MAIL (SMTP) -- MC on CHAOS 37320237>
   Arg 1 (RECIPIENTS): ((:NAME "BUG-SPIRE" :HOST (:OBJECT #<TOPS20-HOST SPEECH 3766323>) :ORIGINAL-INTERVAL (("To: BUG-SPIRE" 4.) ("To: BUG-SPIRE" 13.)) :HOST-DEFAULTED T) (:NAME "dph" :HOST (:OBJECT #<TOPS20-HOST OZ 3765200>) :INTERVAL (("To: dph@MIT-OZ" 4.) ("To: dph@MIT-OZ" 14.))))
   Arg 2 (TEMPLATE-EXPANSION): (:TEXT #<NODE 37320203> :HEADERS (:DATE 2663861141. :FROM ((:USER #<USER CYPHER 33670345>)) :SUBJECT "Spire loses while trying to load" :TO ((:NAME "dph" :HOST ** :INTERVAL **) (:NAME "BUG-SPIRE" :HOST ** :ORIGINAL-INTERVAL ** :HOST-DEFAULTED T)) :IN-REPLY-TO ("The message of 10 Jun 84 13:06-EDT from dph at MIT-OZ")) :HEADER-FORMAT :INCLUDE-PERSONAL :TRANSMIT-TIME 2663861141. :DRAFT-MSG #<DRAFT-MSG 37207365>)

ZWEI:NETWORK-SEND-IT-1:  (P.C. = 432)
   Arg 0 (RECIPIENTS): ((:NAME "BUG-SPIRE" :HOST (:OBJECT #<TOPS20-HOST SPEECH 3766323>) :ORIGINAL-INTERVAL (("To: BUG-SPIRE" 4.) ("To: BUG-SPIRE" 13.)) :HOST-DEFAULTED T) (:NAME "dph" :HOST (:OBJECT #<TOPS20-HOST OZ 3765200>) :INTERVAL (("To: dph@MIT-OZ" 4.) ("To: dph@MIT-OZ" 14.))))
   Arg 1 (TEMPLATE-EXPANSION): (:TEXT #<NODE 37320203> :HEADERS (:DATE 2663861141. :FROM ((:USER #<USER CYPHER 33670345>)) :SUBJECT "Spire loses while trying to load" :TO ((:NAME "dph" :HOST ** :INTERVAL **) (:NAME "BUG-SPIRE" :HOST ** :ORIGINAL-INTERVAL ** :HOST-DEFAULTED T)) :IN-REPLY-TO ("The message of 10 Jun 84 13:06-EDT from dph at MIT-OZ")) :HEADER-FORMAT :INCLUDE-PERSONAL :TRANSMIT-TIME 2663861141. :DRAFT-MSG #<DRAFT-MSG 37207365>)

ZWEI:NETWORK-SEND-IT:  (P.C. = 120)
   Arg 0 (RECIPIENTS): ((:NAME "dph" :HOST (:OBJECT #<TOPS20-HOST OZ 3765200>) :INTERVAL (("To: dph@MIT-OZ" 4.) ("To: dph@MIT-OZ" 14.))) (:NAME "BUG-SPIRE" :HOST (:OBJECT #<TOPS20-HOST SPEECH 3766323>) :ORIGINAL-INTERVAL (("To: BUG-SPIRE" 4.) ("To: BUG-SPIRE" 13.)) :HOST-DEFAULTED T))
   Arg 1 (TEMPLATE-EXPANSION): (:TEXT #<NODE 37320203> :HEADERS (:DATE 2663861141. :FROM ((:USER #<USER CYPHER 33670345>)) :SUBJECT "Spire loses while trying to load" :TO ((:NAME "dph" :HOST ** :INTERVAL **) (:NAME "BUG-SPIRE" :HOST ** :ORIGINAL-INTERVAL ** :HOST-DEFAULTED T)) :IN-REPLY-TO ("The message of 10 Jun 84 13:06-EDT from dph at MIT-OZ")) :HEADER-FORMAT :INCLUDE-PERSONAL :TRANSMIT-TIME 2663861141. :DRAFT-MSG #<DRAFT-MSG 37207365>)

Rest of stack:
ZWEI:FUNCALL-TEMPLATE-EXPANSION:  (P.C. = 50)
(:METHOD ZWEI:BASIC-DRAFT-MSG :TRANSMIT):  (P.C. = 370)
(:METHOD ZWEI:DRAFT-MSG :COMBINED :TRANSMIT):  (P.C. = 66)
ZWEI:COM-SEND-MESSAGE:  (P.C. = 111)
ZWEI:COM-MAIL-END:  (P.C. = 27)
ZWEI:COMMAND-EXECUTE:  (P.C. = 77)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 65)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 424)
(:METHOD ZWEI:ZMAIL-FRAME :COMBINED :EDIT):  (P.C. = 121)
ZWEI:ZMAIL-MAIL:  (P.C. = 303)
ZWEI:CONTINUE-DRAFT-MSG:  (P.C. = 45)
ZWEI:COMPOSE-VIA-DRAFT-MSG:  (P.C. = 27)
ZWEI:FUNCALL-TEMPLATE-EXPANSION:  (P.C. = 50)
ZWEI:COMPOSE-FROM-TEMPLATE:  (P.C. = 43)
ZWEI:NORMAL-REPLY-INTERNAL:  (P.C. = 116)
ZWEI:NORMAL-REPLY:  (P.C. = 25)
ZWEI:COM-ZMAIL-REPLY:  (P.C. = 51)
ZWEI:COMMAND-EXECUTE:  (P.C. = 77)
ZWEI:ZMAIL-COMMAND-EXECUTE:  (P.C. = 27)
(:METHOD ZWEI:ZMAIL-FRAME :PROCESS-COMMAND-CHAR):  (P.C. = 36)
(:INTERNAL (:METHOD ZWEI:ZMAIL-FRAME :COMBINED :PROCESS-COMMAND-CHAR) 0.):  (P.C. = 31)
(:METHOD ZWEI:ZMAIL-COMMAND-LOOP-MIXIN :WHOPPER :PROCESS-COMMAND-CHAR):  (P.C. = 55)
(:METHOD ZWEI:ZMAIL-FRAME :COMBINED :PROCESS-COMMAND-CHAR):  (P.C. = 36)
(:METHOD ZWEI:ZMAIL-FRAME :COMMAND-LOOP):  (P.C. = 301)
(:METHOD ZWEI:ZMAIL-FRAME :COMBINED :COMMAND-LOOP):  (P.C. = 112)
ZWEI:ZMAIL-PROCESS-TOP-LEVEL:  (P.C. = 153)
SI:PROCESS-TOP-LEVEL:  (P.C. = 123)
10-Jun-84 19:29:39-EDT,260;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 10 Jun 84 19:29-EDT
Date: Sunday, 10 June 1984, 19:24-EDT
From: Scott Cyphers <sr.ehpyc at MIT-SPEECH>
Subject: Goldilocks is now an operational secondary namespace server for MIT
To: info-lispm at MIT-OZ


10-Jun-84 20:45:47-EDT,6488;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 10 Jun 84 20:45-EDT
Date: Sunday, 10 June 1984, 20:33-EDT
From: Patrick A. O'Donnell <PAO at MIT-EECS>
Subject: DRAW-DASHED-LINE
To: BUG-LISPM at MIT-OZ

In Release 5.0 [Beta Test rev 7], FEP 18, on Lisp Machine Robot-2 (3600):

The following code for (:METHOD TV:GRAPHICS-MIXIN :DRAW-DASHED-LINE)
should work much better than the existing code in the case of RELAXED-P
(or "space-literally-p") being non-NIL.  At least the lines will go
where you expect them to, more or less.  The second version below is
slightly slower on the average (significantly slower in special cases),
but takes care not to draw beyond the endpoints.  The first version will
draw past the to-point, and, given a negative offset, will draw past the
from-point.  Granted, the second version does not exactly correspond to
the letter of the documentation, but does match what I believe to be the
spirit of the operation.

(DEFMETHOD (GRAPHICS-MIXIN :DRAW-DASHED-LINE)
	   (FROM-X FROM-Y TO-X TO-Y
		   &OPTIONAL (ALU CHAR-ALUF) (DASH-SPACING 20.)
		   RELAXED-P (OFFSET 0) (DASH-LENGTH (// DASH-SPACING 2)))
  (CHECK-ARG-TYPE ALU :FIXNUM)
  (MULTIPLE-VALUE (FROM-X FROM-Y TO-X TO-Y)	; clip the line and offset 
    (CLIP-AND-OFFSET-LINE FROM-X FROM-Y TO-X TO-Y))	; to screen coords
  (COND
    (FROM-X					; if this isn't NIL 
     (LET* ((LWIDTH (- TO-X FROM-X))		; (line is completely invisible)
	    (LHEIGHT (- TO-Y FROM-Y))
	    (LENGTH (ISQRT (+ (^ LWIDTH 2) (^ LHEIGHT 2)))))
       (COND ((NOT RELAXED-P)
	      ;; We want to draw line segments such that the last one ends up
	      ;; finishing at the end-point.  Therefore, separate the entire
	      ;; line length into an odd number of regions, each half of the
	      ;; dash-spacing, and fill in every other one with a line segment.
	      ;; Just use dash-spacing to decide how many segments, so the
	      ;; spacing may not be quite right.
	      (LET* ((N-HALF-SEGS (LOGIOR 1 (// LENGTH (// DASH-SPACING 2))))
		     (X-LEN (// (FLOAT LWIDTH) N-HALF-SEGS))
		     (Y-LEN (// (FLOAT LHEIGHT) N-HALF-SEGS)))
		(DRAW-DASHED-LINE-INTERNAL 
		  FROM-X FROM-Y
		  (* 2 X-LEN) (* 2 Y-LEN)
		  X-LEN Y-LEN
		  (ASH N-HALF-SEGS -1) ALU)))
	     (T
	      ;; Don't worry about where it ends.  Compute the sine and cosine and
	      ;; just draw dashes of the exact specified size.
	      (LET* ((TEM (IF (NOT (ZEROP LWIDTH))
			      (// (FLOAT (^ LHEIGHT 2)) (FLOAT (^ LWIDTH 2)))
			      NIL))
		     (SIN (IF TEM (SQRT (// TEM (+ 1.0 TEM))) 1.0))
		     (COS (SQRT (- 1.0 (^ SIN 2)))))
		(WHEN (< LHEIGHT 0) (SETQ SIN (- SIN)))
		(WHEN (< LWIDTH 0) (SETQ COS (- COS)))
		(DRAW-DASHED-LINE-INTERNAL
		  (+ FROM-X (* OFFSET COS))
		  (+ FROM-Y (* OFFSET SIN))
		  (* DASH-SPACING COS)
		  (* DASH-SPACING SIN)
		  (* DASH-LENGTH COS)
		  (* DASH-LENGTH SIN)
		  (// (- LENGTH (FIX OFFSET)) (FIX DASH-SPACING)) ALU))))))))







(DEFMETHOD (GRAPHICS-MIXIN :DRAW-DASHED-LINE)
	   (FROM-X FROM-Y TO-X TO-Y
		   &OPTIONAL (ALU CHAR-ALUF) (DASH-SPACING 20.)
		   RELAXED-P (OFFSET 0) (DASH-LENGTH (// DASH-SPACING 2)))
  (CHECK-ARG-TYPE ALU :FIXNUM)
  (MULTIPLE-VALUE (FROM-X FROM-Y TO-X TO-Y)	; clip the line and offset 
    (CLIP-AND-OFFSET-LINE FROM-X FROM-Y TO-X TO-Y))	; to screen coords
  (COND
    ((ZEROP DASH-LENGTH))			;don't bother
    (FROM-X					; if this isn't NIL 
     (LET* ((LWIDTH (- TO-X FROM-X))		; (line is completely invisible)
	    (LHEIGHT (- TO-Y FROM-Y))
	    (LENGTH (ISQRT (+ (^ LWIDTH 2) (^ LHEIGHT 2)))))
       (COND ((NOT RELAXED-P)
	      ;; We want to draw line segments such that the last one ends up
	      ;; finishing at the end-point.  Therefore, separate the entire
	      ;; line length into an odd number of regions, each half of the
	      ;; dash-spacing, and fill in every other one with a line segment.
	      ;; Just use dash-spacing to decide how many segments, so the
	      ;; spacing may not be quite right.
	      (LET* ((N-HALF-SEGS (LOGIOR 1 (// LENGTH (// DASH-SPACING 2))))
		     (X-LEN (// (FLOAT LWIDTH) N-HALF-SEGS))
		     (Y-LEN (// (FLOAT LHEIGHT) N-HALF-SEGS)))
		(DRAW-DASHED-LINE-INTERNAL 
		  FROM-X FROM-Y
		  (* 2 X-LEN) (* 2 Y-LEN)
		  X-LEN Y-LEN
		  (ASH N-HALF-SEGS -1) ALU)))
	     (T
	      ;; Don't worry about where it ends.  Compute the sine and cosine and
	      ;; just draw dashes of the exact specified size.
	      (SETQ OFFSET (FIX (\ OFFSET DASH-SPACING))
		    DASH-SPACING (FIX DASH-SPACING))
	      (LET* ((TEM (IF (NOT (ZEROP LWIDTH))
			      (// (FLOAT (^ LHEIGHT 2)) (FLOAT (^ LWIDTH 2)))
			      NIL))
		     (SIN (IF TEM (SQRT (// TEM (+ 1.0 TEM))) 1.0))
		     (COS (SQRT (- 1.0 (^ SIN 2))))
		     (N-SEGS (// (- LENGTH OFFSET) DASH-SPACING)))
		(WHEN (< LHEIGHT 0) (SETQ SIN (- SIN)))
		(WHEN (< LWIDTH 0) (SETQ COS (- COS)))

		(LET* ((X-LEN (* DASH-LENGTH COS))
		       (Y-LEN (* DASH-LENGTH SIN))
		       (X-SP (* DASH-SPACING COS))
		       (Y-SP (* DASH-SPACING SIN))
		       (X-OFF (* OFFSET COS))
		       (Y-OFF (* OFFSET SIN))
		       (TEM1 (+ OFFSET (* N-SEGS DASH-SPACING)))
		       (LAST-X (+ FROM-X (* COS TEM1)))
		       (LAST-Y (+ FROM-Y (* SIN TEM1))))

		  ;; Draw the first partial segment
		  (IF (< OFFSET 0)
		      (WHEN (< (ABS OFFSET) DASH-LENGTH)
			(PREPARE-SHEET (SELF)
			  (SHEET-DRAW-LINE FROM-X FROM-Y
					   (FIX (+ FROM-X X-OFF X-LEN))
					   (FIX (+ FROM-Y Y-OFF Y-LEN))
					   ALU NIL SELF)))
		      (WHEN (> OFFSET (- DASH-SPACING DASH-LENGTH))
			(PREPARE-SHEET (SELF)
			  (SHEET-DRAW-LINE FROM-X FROM-Y
					   (FIX (+ FROM-X X-OFF (- X-LEN X-SP)))
					   (FIX (+ FROM-Y Y-OFF (- Y-LEN Y-SP)))
					   ALU NIL SELF))))

		  (IF (< OFFSET 0)
		      ;; Draw most of the line
		      (DRAW-DASHED-LINE-INTERNAL
			(+ FROM-X X-SP X-OFF)
			(+ FROM-Y Y-SP Y-OFF)
			X-SP Y-SP X-LEN Y-LEN (- N-SEGS 2) ALU)
		      (DRAW-DASHED-LINE-INTERNAL
			(+ FROM-X X-OFF)
			(+ FROM-Y Y-OFF)
			X-SP Y-SP X-LEN Y-LEN (- N-SEGS 1) ALU))

		  ;; Draw the last partial segment
		  (PREPARE-SHEET (SELF)
		    (SHEET-DRAW-LINE (FIX LAST-X) (FIX LAST-Y)
				     (FIX (IF (< X-LEN 0) (MAX TO-X (+ LAST-X X-LEN))
					      (MIN TO-X (+ LAST-X X-LEN))))
				     (FIX (IF (< Y-LEN 0) (MAX TO-Y (+ LAST-Y Y-LEN))
					      (MIN TO-Y (+ LAST-Y Y-LEN))))
				     ALU NIL SELF))
		  (- OFFSET (\ LENGTH DASH-SPACING))))))))))

10-Jun-84 21:54:24-EDT,1640;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 10 Jun 84 21:53-EDT
Date: 10 June 1984 21:41-EDT
From: Alan Bawden <ALAN @ MIT-MC>
To: BUG-MAIL @ MIT-MC
cc: BUG-LISPM @ MIT-MC

The following two events have been observed to be closely correlated:

    Date: 7 June 1984 01:37-EDT
    From: Alan Bawden <ALAN at MC>
    To: BUG-MAIL at MC, BUG-LISPM at MC
    Recently I have begun to notice an increase in the number of dead chaos
    mail servers on MC.  Typically they have been created on behalf on a 3600
    (the most recent half dozen were mostly from MIT-PI (running Beta test rev
    7)), and have died with an IOC error after their CHAOS connection had gone
    into a losing or closed state.  I dumped two of the recent batch into
    MC:CRASH;CHMAIL LOSING and MC:CRASH;CHMAIL CLOSED.  (The second filename
    reflects the state of the job's chaos connection when I dumped it.)

    Date: Thursday, 31 May 1984, 13:31-EDT [* This date is totally bogus. *]
    From: Scott Cyphers <sr.ehpyc at SPEECH>
    Subject: Error sending mail
    To: BUG-LISPM at OZ
    MC is the first host on the list of places to try to send mail to, and
    resuming from this error just tries MC again and gets the error.

    >>Error: SMTP error: 421 Sorry, big mail backlog!  Try again later.

I noticed about a dozen dead mail servers on MC.  All had Chaos connections
(in the closed state) to the machine Scott was using tonight when he
experienced this problem.  I guess I now believe this is likely to be a
problem in the server itself.  Perhaps CStacy broke it when he assembled
the new one a couple weeks ago?
11-Jun-84 01:16:18-EDT,3091;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 11 Jun 84 01:16-EDT
Date: 11 June 1984 01:11-EDT
From: Christopher C. Stacy <CSTACY @ MIT-MC>
Subject:  SMTP error: 421 Sorry & dead mail servers on MC
To: ALAN @ MIT-MC
cc: BUG-LISPM @ MIT-MC, BUG-MAIL @ MIT-MC
In-reply-to: Msg of 10 Jun 1984 21:41-EDT from Alan Bawden <ALAN>

    Date: 10 June 1984 21:41-EDT
    From: Alan Bawden <ALAN>
    To:   BUG-MAIL
    cc:   BUG-LISPM

    The following two events have been observed to be closely correlated:

        Date: 7 June 1984 01:37-EDT
        From: Alan Bawden <ALAN at MC>
        To: BUG-MAIL at MC, BUG-LISPM at MC
        Recently I have begun to notice an increase in the number of dead chaos
        mail servers on MC.  Typically they have been created on behalf on a 
        3600 (the most recent half dozen were mostly from MIT-PI (running Beta
        test rev 7)), and have died with an IOC error after their CHAOS 
        connection had gone into a losing or closed state.  
        I dumped two of the recent batch into MC:CRASH;CHMAIL LOSING and 
        MC:CRASH;CHMAIL CLOSED.  (The second filename reflects the state of 
        the job's chaos connection when I dumped it.)

        Date: Thursday, 31 May 1984, 13:31-EDT
                       [* This date is totally bogus. *]
        From: Scott Cyphers <sr.ehpyc at SPEECH>
        Subject: Error sending mail
        To: BUG-LISPM at OZ
        MC is the first host on the list of places to try to send mail to, and
        resuming from this error just tries MC again and gets the error.

        >>Error: SMTP error: 421 Sorry, big mail backlog!  Try again later.

    I noticed about a dozen dead mail servers on MC.  All had Chaos connections
    (in the closed state) to the machine Scott was using tonight when he
    experienced this problem.  I guess I now believe this is likely to be a
    problem in the server itself.  Perhaps CStacy broke it when he assembled
    the new one a couple weeks ago?


No, the problem is in MC's SMTP server, which Moon recently enhanced
to support Chaosnet streams.  This is a different program from the
Chaos MAIL server.  When there is no more room for incoming mail, the
server gives that error reply and tries to RESET the SMTP session.
This apparently works fine for hosts on the Internet, but not with
Lisp Machines.  I have changed the server so that for the Chaosnet the
job will instead simply die after giving the error reply.  

I am not sure if this is exactly the right thing -- maybe the LispM
should be more robust and handle RESETs when using SMTP in this mode,
but on the other hand I cannot think of many times when the session
should be continued anyway. (Although there are some functions which
generate no mail, it shouldn't be that expensive to reconnect and do
them seperately.)

I have installed the fix on MC (CHAOS SMTP only) but have not tested
it since it's a hassle.  If there are any ill effects, let me know and
I will reassemble and install the older server version.

Chris
11-Jun-84 01:50:41-EDT,536;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 11 Jun 84 01:49-EDT
Date: Monday, 11 June 1984, 00:39-EDT
From: Henry Lieberman <Henry at MIT-OZ>
Subject: Bandage
To: Bug-Lispm at MIT-OZ


Suggestion: When a new band comes out, everybody always
has to spend some time copying the new band. Since there is 
a namespace server, why not just have it remember what the
current band on each machine is, and automatically send over
a new band if it isn't current when the machine is idle?
That would save everyone a lot of time.

11-Jun-84 01:59:35-EDT,1048;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 11 Jun 84 01:59-EDT
Date: Monday, 11 June 1984, 01:58-EDT
From: David Rogers <DROGERS at MIT-OZ>
Subject: host connection damage
To: BUG-LISPM at MIT-OZ

In Release 5.0, Experimental MIT 1.4, on Lisp Machine Robot-4 (3600):

(This is the new PLUS band by the way)

When I try to connect to host SUMEX-AIM I get:

SUMEX-AIM does not support LOGIN in a reachable way.

It used to. Then it takes me through a list of things to try, NOT 
REMEMBERING when I say "Y" and it tries and fails. Like:

Use protocol CHAT on a medium TCP? (Y or N) Yes.
SUMEX-AIM does not support LOGIN in a reachable way.
Use protocol CHAT on a medium TCP? (Y or N) Yes.
...ad infinitum.....

When I say NO, it continues onto the next one, but if that fails,
it again loops. When you say NO, it goes back to the beginning of
the list again!

First, the machine should be able to get to an ARPAnet host. Next,
if it fails, it should be a little more ... uh, intelligent? about
it.

Regards,

David
11-Jun-84 06:07:16-EDT,2066;000000000000
Received: from SCH-GODZILLA by MIT-OZ via Chaosnet; 11 Jun 84 06:07-EDT
Received: from SCH-PECOS by SCH-GODZILLA via CHAOS with CHAOS-MAIL id 30604; Sun 10-Jun-84 20:11:55-PDT
Date: Sunday, 10 June 1984, 20:13-PDT
From: RWK at SCH-GODZILLA
Sender: SOUTH at SCH-GODZILLA
Subject: Going into >Fep when using Compile Region (Control-Shift-C)
To: dcp at SCH-GODZILLA, hlv at MIT-OZ
Cc: bug-lispm at MIT-OZ, maint at SCH-GODZILLA

    Date: Sunday, 10 June 1984, 16:06-EDT
    From: New FEP system <DCP at SCRC-TENEX>
	Date: Sunday, 10 June 1984, 14:36-EDT
	From: Harry L. Voorhees <HLV at MIT-OZ>
    
	In Release 5.0 [Beta Test rev 7], FEP 18, on Lisp Machine Robot-1 (3600):

	The current micro PC was 15523 and the previous PC values were 46477,
	55523, 143403, 57775, 57774, 47061, 43453, 56313, 52420, 46611, 46315,
	56312, 52417, 50162, 47222, 44241.  I tried using (dbg:decode-micro-pc)
	on the current PC value; it tried loading the microcode symbol table
	from a file on SRC: which wasn't found.
    This [symbol table not found] is a bug.  Maint?
It is not a bug.  At least, it's not OUR bug.  MIT hasn't
loaded their source tape yet.

	By the way, the function which I was attempting to compile is:
      
	(defun g (sigma)
	  (local-declare (sigma))
	  (closure '(sigma)
	    #'(lambda (x)
		(let ((x2/sigma2 (// (* x x) (* sigma sigma))))
		  (* (// 1 (* (sqrt (* 2.0 pi)) sigma 3.))
		     (exp (* -0.5 x2/sigma2)))))))
    
    Included below is the error it was trying to give you.  Your stack group
    probably has non-trappability set somehow so you will go to the FEP on
    any microcode signalled error in that stack group.  This can happen (in
    5.0beta7 at least) if you hit [Abort] while in the middle of handling a
    microcode generated error.  This is fixed by 243.580 and microcode 274.
    I don't see any indication in Joseph's log that this is being migrated
    to Release 5, though I don't know how up to date that log is.

It is already in Release 5.1, which will start shipping shortly.
11-Jun-84 07:30:21-EDT,688;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 11 Jun 84 07:30-EDT
Received: from SCRC-CHICOPEE by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 46526; Mon 11-Jun-84 07:31:50-EDT
Date: Monday, 11 June 1984, 07:30-EDT
From: Daniel L. Weinreb <DLW at SCRC-TENEX>
Subject: Bandage
To: Henry at MIT-OZ, Bug-Lispm at MIT-OZ
In-reply-to: The message of 11 Jun 84 00:39-EDT from Henry Lieberman <Henry at MIT-OZ>
Message-ID: <840611073006.7.DLW@CHICOPEE.SCRC.Symbolics>

And if you didn't happen to have enough free space in your FEP file
system to accept the band?  I presume people usually keep their disks
almost full, to make maximum use of the limited space available.
11-Jun-84 08:52:47-EDT,2717;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 11 Jun 84 08:52-EDT
Date: Monday, 11 January -2941657, -17:-7-EST
From:  <KDF at MIT-PYGMALION>
Subject: Terminal program now unable to connect to BBNG
To: BUG-LISPM at MIT-OZ

In Release 5.0, Experimental MIT 1.4, FEP 18, on Lisp Machine Janis Joplin (3600):

Terminal program asks me a sequence of five questions.  Typing "Y" to each of them informs me
that "BBNG doesn't support login in a reasonable way", and then bumps me back to the first question.
If I type "N" for the final alternative, the error below occurs.

Come on, guys, this worked fine before...


>>Error: BBNG does not support LOGIN in a reachable way.
While in the function NET:INVOKE-SERVICE-ON-HOST  TELNET:GET-LOGIN-CONNECTION  (:METHOD TELNET:NVT-WINDOW :CONNECT)

NET:INVOKE-SERVICE-ON-HOST:  (P.C. = 62)
   Arg 0 (SERVICE): :LOGIN
   Arg 1 (HOST): #<TOPS20-HOST BBNG 16302552>
   Rest arg (SERVICE-ARGS): (:TERMINAL-SIMULATOR NIL)
   Local 3: ("Retry invoking ~A on ~A." :LOGIN #<TOPS20-HOST BBNG 16302552>)
   Local 4: NIL
   Local 5: NIL
   Local 6 (THESE-ARGS): (:TERMINAL-SIMULATOR NIL)
   Local 7: "Retry invoking ~A on ~A."
   Local 8: :LOGIN
   Local 9: #<TOPS20-HOST BBNG 16302552>
   Local 10: #<ERROR-RESTART-HANDLER 37551432>
   Local 11: #<DTP-LOCATIVE 1207705>
   Local 12: #<DTP-LOCATIVE 43500134>
   Local 13: (#<ERROR-RESTART-HANDLER 37551432> #<DTP-LOCATIVE 1207705> #<DTP-LOCATIVE 43500134>)
   Local 14: #<DTP-CLOSURE 43500143>
   Local 15: (#<DTP-CLOSURE 43500051> #<DTP-CLOSURE 43500016>)
   Local 16: #<DTP-LOCATIVE 43500147>
   Local 17: #<DTP-EVEN-PC 46364352>
   Local 18: #<DTP-LOCATIVE 3047644>
   Local 19: #<DTP-LOCATIVE 43500057>
   Local 20: NETI:FIND-PATH-RETRY
   Local 21: #<DTP-EVEN-PC 46364351>
   Local 22: #<DTP-LOCATIVE 3047644>
   Local 23: #<DTP-LOCATIVE 43500151>
   Local 24 (SERVICE-ACCESS-PATHS): NIL
   Local 25 (ERRORS): NIL

TELNET:GET-LOGIN-CONNECTION:  (P.C. = 37)
   Arg 0 (HOST): #<TOPS20-HOST BBNG 16302552>
   Rest arg: NIL

(:METHOD TELNET:NVT-WINDOW :CONNECT):  (P.C. = 6)
   Arg 0 (SELF): #<NVT-WINDOW Terminal 1 1000000 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TELNET:NVT-WINDOW -- 18. IV's, 10. FL's 17421332>
   Arg 2 (OPERATION): :CONNECT
   Arg 3 (HOST): #<TOPS20-HOST BBNG 16302552>
   Rest arg (OPTIONS): NIL

(:METHOD TELNET:NVT-WINDOW :TYPEIN-TOP-LEVEL):  (P.C. = 112)
   Arg 0 (SELF): #<NVT-WINDOW Terminal 1 1000000 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TELNET:NVT-WINDOW -- 18. IV's, 10. FL's 17421332>
   Arg 2 (OPERATION): :TYPEIN-TOP-LEVEL

SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
   --Defaulted args:--
   Arg 0 (IGNORE): NIL
11-Jun-84 10:10:19-EDT,1060;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 11 Jun 84 10:09-EDT
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 46585; Mon 11-Jun-84 10:11:25-EDT
Date: Monday, 11 June 1984, 10:11-EDT
From: New FEP system <DCP at SCRC-TENEX>
Subject: Bandage
To: Henry at MIT-OZ
cc: Daniel L. Weinreb <DLW at SCRC-TENEX>, Bug-Lispm at MIT-OZ
In-Reply-To: <840611073006.7.DLW@CHICOPEE.SCRC.Symbolics>

    Date: Monday, 11 June 1984, 07:30-EDT
    From: Daniel L. Weinreb <DLW at SCRC-TENEX>

    And if you didn't happen to have enough free space in your FEP file
    system to accept the band?  I presume people usually keep their disks
    almost full, to make maximum use of the limited space available.

...and it is considered anti-social to bash a band on somebody else's
machine unless the users/owners of the machine give you explicit
permission for you to maintain their FEP filesystem.  I know of one
site that does this.  They are smaller and a bit more uniform than MIT,
which makes it a bit smoother.
11-Jun-84 10:11:20-EDT,3577;000000000000
Mail-From: X.GYRO created at 11-Jun-84 10:10:25
Date: 11 Jun 1984  10:10 EDT (Mon)
Message-ID: <X.GYRO.12022602938.BABYL@MIT-OZ>
From: Scott Layson <X.GYRO@MIT-OZ>
To:   "Daniel L. Weinreb" <DLW@SCRC-TENEX>
Cc:   bug-lispm@MIT-OZ
Subject: package system extension request
In-reply-to: Msg of 8 Jun 1984  23:23-EDT from Daniel L. Weinreb <DLW at SCRC-TENEX>

    From: Daniel L. Weinreb <DLW at SCRC-TENEX>
    Re:   package system extension request

    If I understand correctly what you're asking for, here is the flaw.
    Suppose you have a library named LIB, which defines a utility function
    called UTIL.  You also have your own application program APPL, which
    is going to shadow (override) the UTIL function, even though APPL
    in general depends on stuff in LIB.  Now suppose you have two functions
    FOO and BAR in APPL, both of which contain forms that look like
    (UTIL <arg1> <arg2> ..).  Suppose that when you load APPL into
    the Lisp environment, FOO gets loaded first, then your own version
    of UTIL gets loaded, and then BAR gets loaded (I am assuming that LIB
    is loaded before any of these guys).  Well, FOO will get LIB's UTIL,
    and BAR will get your own UTIL.

I gather you imagine two packages, which we may as well call LIB and
UTIL, into which this loading is done, such that UTIL inherits from
LIB.  I belabor the obvious to make the point that other
implementations of the behavior I describe are possible.

    In other words, if we do something
    that answers your request, then the applications program writer will
    have to be extremely cautious about the order in which things are loaded,
    which sometimes included the order in which functions appear in a file.
    One of the Great Design Goals of the package system was to try to
    alleviate the need for such caution, and that's why we don't provide
    the feature you are asking for.

I understand that this would be a bug.  I don't see, however, that the
behavior I requested entails this bug in any abstract way.  What if,
for instance, symbols were always interned locally, and inheritance
were accomplished by forwarding the symbol's value and function cells
to those of the symbol in the parent package, and FDEFINE didn't
follow the forwarding pointers?  I understand that this is a radical
change and I'm not yet sure I'm seriously proposing it, but consider
for a moment.  What problems would it create?  Symbols written
identically in different contexts would not be EQ in cases where they
are EQ now, but this is only an expansion of a current problem, which
the use of the KEYWORD package solves handily.  It does seem to
introduce an inelegant and poorly motivated distinction between the
function and value cells, in that SETQ and binding would have to
follow the forwarding pointers while FDEFINE did not.  Perhaps a logic
could be found to make sense of this.  For instance, DEFVAR and
DEFCONST would presumably also not follow the forwarding pointer.

This would fix an annoying form of software rot that happens
currently, in which the system maintainers add new global functions
which happen to have the same names as functions in a user program.
When one loads the program, no answer to FDEFINE's query is correct --
allowing the definition breaks the system, and not allowing it breaks
the user program.  I personally try to avoid general-sounding function
names, but I have had this problem when using other people's code.

Well, it's an idea anyway.  Comments?

-- Scott
11-Jun-84 10:39:45-EDT,2096;000000000000
Mail-From: X.GYRO created at 11-Jun-84 10:38:22
Date: 11 Jun 1984  10:38 EDT (Mon)
Message-ID: <X.GYRO.12022608028.BABYL@MIT-OZ>
From: Scott Layson <X.GYRO@MIT-OZ>
To:   "David A. Moon" <Moon@SCRC-TENEX>
Cc:   bug-lispm@MIT-OZ
Subject: package system extension request
In-reply-to: Msg of 8 Jun 1984 21:33-EDT from David A. Moon <Moon at SCRC-TENEX>

    From: David A. Moon <Moon at SCRC-TENEX>
    Re:   package system extension request

        Date: Fri 8 Jun 84 13:26-EDT
        From: Scott W. Layson <X.GYRO@MIT-OZ>

        The behavior I desire is to supply a "library" of "default functions",
        such that other programs in several different packages can all use
        these functions, but with the feature that any of the programs can
        shadow any of the defaults without having to say in advance that it
        wants to do that.  It would be as if FDEFINE, when it detects a
        redefinition conflict, were to reintern the symbol locally, declare it
        shadowing, and then fset the new symbol.

    The reason this is hard is that the package system deals with symbols, not
    with function definitions.  The binding between a name and a symbol-object
    is decided long before you know how the symbol is going to be used.

This might be fixable.  See my reply to DLW on this subject.

    What happens if two parts of your program use the name FOO, where one of
    them wants the function from the library and the other wants its own
    function named FOO?

The behavior I desire is, after all, that of any traditional linking loader
that supports libraries.  I understand what you're saying intellectually, but
I don't recall ever having actually made that mistake in 5 years of writing C.
Shadowing of library functions is generally done in the same spirit as method
combination in flavors: one wants a slight variation on the usual behavior,
such as (for a simple example) newline counting for the purpose of --More--
processing.  And remember, too, one gets no warnings for flavor method
shadowing.

-- Scott
11-Jun-84 10:59:21-EDT,1566;000000000000
Mail-From: X.GYRO created at 11-Jun-84 10:58:15
Date: 11 Jun 1984  10:58 EDT (Mon)
Message-ID: <X.GYRO.12022611643.BABYL@MIT-OZ>
From: Scott Layson <X.GYRO@MIT-OZ>
To:   "David A. Moon" <Moon@SCRC-TENEX>
Cc:   bug-lispm@MIT-OZ
Subject: Mouse cursor esthetics
In-reply-to: Msg of 23 May 1984 20:13-EDT from David A. Moon <Moon at SCRC-TENEX>

Well, I guess we have different ideas of snazzyness.  I think your hack looks
nice.  A couple of comments, though:

If you put the normal tilted-arrow cursor on a large inverse video region, you
can see that the automatic one-pixel border generation didn't do exactly the
right thing.  The concave region under the left-hand arrow barb has at least
one pixel of white that should be transparent.  Also, the border around the
right-hand barb might be sharper.  These sorts of details may require a human
designer.

I didn't mean to imply that all the various mouse cursors on the Mac behaved
this way, though several of them do.  The I-beam cursor in MacWrite is
especially weird.  If you look very closely at it, you will notice that it has
no border, and some of its pixels are ORed in and some are XORed.  I think
someone got carried away, though there may be some reason for this.  Anyhow, I
agree that it's a little annoying how (in your hack) the X-shaped menu cursor
obscures the text under it; perhaps simply removing its border, while leaving
the X itself in OR mode, is the right thing?  The point again is just that a
human designer and some experimentation are called for.

-- Scott
11-Jun-84 12:25:36-EDT,1116;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 11 Jun 84 12:24-EDT
Date: Mon, 11 Jun 84 12:21 EDT
From:  <TOMR%MIT-OZ@MIT-MC.ARPA>
Subject: Apiary5 Thrown Into FEP Again.
To: BUG-LISPM@MIT-MC.ARPA
Cc: MPSG%MIT-OZ@MIT-MC.ARPA

In Release 5.0, Experimental MIT 1.4, FEP 18, on Lisp Machine Apiary-5 (3600):

I know that this subject has been brought to your attention last week, i.e.,
Apiary 5 gets thrown irretrievablely into the FEP.  Unlike last week's 
incident, though, I can guarantee that no one depressed c-abort, or the
abort key for that matter.

So, for your reading pleasure,

FEP Lbus Control: Use Uncorrected Data, Ignore Double ECC Error
Task 3 Dismiss
Sequencer Error Status: Microcode Halted
Sequence Misc Status: CTOS-came-from-IFU, Tsk-Stop (Sequencer stopped)
ErrHalt Sync

Macro PC / (even) 1303713

CPC/ 0  41654   
OPC+0/  41654   OPC+10/ 43361
OPC+1/  43737   OPC+11/ 42632
OPC+2/  43343   OPC+12/ 42631
OPC+3/  42622   OPC+13/ 54000
OPC+4/  43073   OPC+14/ 42357
OPC+5/  40371   OPC+15/ 44747
OPC+6/  40674   OPC+16/ 42236
OPC+7/  43737   OPC+17/ 46412

TOMR
11-Jun-84 12:44:00-EDT,2155;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 11 Jun 84 12:43-EDT
Received: from SCRC-NEPONSET by SCRC-YUKON via CHAOS with CHAOS-MAIL id 45758; Mon 11-Jun-84 12:44:25-EDT
Date: Mon, 11 Jun 84 12:45 EDT
From: "(probably) David C. Plummer" <DCP@SCRC-RIVERSIDE.ARPA>
Subject: Apiary5 Thrown Into FEP Again.
To: TOMR%MIT-OZ@SCRC-RIVERSIDE.ARPA, BUG-LISPM@MIT-MC.ARPA
cc: MPSG%MIT-OZ@SCRC-RIVERSIDE.ARPA
In-Reply-To: The message of 11 Jun 84 12:21-EDT from TOMR at MIT-OZ

    Date: Mon, 11 Jun 84 12:21 EDT
    From:  <TOMR%MIT-OZ@MIT-MC.ARPA>

    In Release 5.0, Experimental MIT 1.4, FEP 18, on Lisp Machine Apiary-5 (3600):

    I know that this subject has been brought to your attention last week, i.e.,
    Apiary 5 gets thrown irretrievablely into the FEP.  Unlike last week's 
    incident, though, I can guarantee that no one depressed c-abort, or the
    abort key for that matter.

Please learn to use V18-debug.flod.  It could save a lot of trouble.
There are also instructions in the FEP section of the NETIO document
saying what to do with the information you are sending us.

    So, for your reading pleasure,

    FEP Lbus Control: Use Uncorrected Data, Ignore Double ECC Error
    Task 3 Dismiss
    Sequencer Error Status: Microcode Halted
    Sequence Misc Status: CTOS-came-from-IFU, Tsk-Stop (Sequencer stopped)
    ErrHalt Sync

    Macro PC / (even) 1303713

This is SI:APPLY-LAMBDA at instruction #o1106.  The symbol table for
microcode 270 is coming in now, but at a guess I would say you tried to
call a function with more than 256 arguments.

    CPC/ 0  41654   
    OPC+0/  41654   OPC+10/ 43361
    OPC+1/  43737   OPC+11/ 42632
    OPC+2/  43343   OPC+12/ 42631
    OPC+3/  42622   OPC+13/ 54000
    OPC+4/  43073   OPC+14/ 42357
    OPC+5/  40371   OPC+15/ 44747
    OPC+6/  40674   OPC+16/ 42236
    OPC+7/  43737   OPC+17/ 46412

Probably not.  You hit an undefined opcode after a long-branch-immediate
instruction.  Unless SI:APPLY-LAMBDA has been damaged, this shouldn't
have happened and could be a hardware bug, I would guess in the MC.  Is
this at all reproducible?
11-Jun-84 13:52:15-EDT,814;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 11 Jun 84 13:51-EDT
Date: Monday, 11 June 1984, 13:54-EDT
From: David H. Kaufman <sr.kaufman at MIT-SPEECH>
Subject: For a good time, try: (chaos:whois "@harvard")
To: BUG-LISPM at MIT-OZ
Cc: Sr.Kaufman at MIT-SPEECH

In Release 5.0 [Beta Test rev 7], Spire-Macros 1.8, Compute 1.3,
Attribute 1.7, Audio 1.2, Speech-Attributes 1.0, Display 1.11,
Speech-Layouts 1.8, Experimental Versatec 2.0, Experimental Prtout 1.1,
Spire 13.0, SpireX 10.3, ZOO 1.2, on Lisp Machine Yogi (LM-2):

Doing (chaos:whois "@harvard") gives the usual "HARVARD does not support
SHOW-USERS in a usable way" error.  When I accept its offer to "Use
protocol ASCII-NAME on medium TCP", I am shown the same as
(chaos:whois "@mc")!

I didn't know Harvard was running ITS . . . .
11-Jun-84 14:31:55-EDT,709;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 11 Jun 84 14:31-EDT
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 46776; Mon 11-Jun-84 14:26:46-EDT
Date: Monday, 11 June 1984, 14:24-EDT
From: David A. Moon <Moon at SCRC-TENEX>
Subject: Mouse cursor esthetics
To: Scott Layson <X.GYRO at MIT-OZ>
Cc: bug-lispm at MIT-OZ
In-reply-to: <X.GYRO.12022611643.BABYL@MIT-OZ>
Message-ID: <840611142444.9.MOON@EUPHRATES.SCRC.Symbolics>

    Date: 11 Jun 1984  10:58 EDT (Mon)
    From: Scott Layson <X.GYRO@MIT-OZ>
    ...The point is just that a human designer and some experimentation are called for.

Thanks.  I think you have reached right to the heart of it.
11-Jun-84 14:51:03-EDT,852;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 11 Jun 84 14:50-EDT
Date: Sunday, 10 June 1984, 11:55-EDT
From: David Rogers <DROGERS at MIT-OZ>
Subject: SI:*NEED-TO-PRINT-COPYRIGHT-AND-TRADE-SECRET-NOTICE* and PRINT-HERALD
To: BUG-LISPM at MIT-OZ

In Release 5.0, Experimental MIT 1.4, FEP 18, on Lisp Machine Jim Morrison (3600):

The message

Note: For copyright and trade secret information (viewf "sys:site;notice.txt")

that gets printed when a PRINT-HERALD is done is not only antagonistic and
overly legalistic, it is wrong: typing (viewf "sys:site;notice.txt") returns the 
message:

No such file type
For SYS: SITE; NOTICE.TXT.NEWEST
NIL

If the legal department wants to put the irritating message in, fine, but at least
make sure it works right, or it's even *more* irritating, and useless to boot.

Regards,

David
11-Jun-84 15:03:21-EDT,1754;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 11 Jun 84 15:02-EDT
Date: 11 June 1984 15:02-EDT
From: Christopher C. Stacy <CSTACY @ MIT-MC>
Subject:  For a good time, try: (chaos:whois "@harvard")
To: BRADNER @ HARVARD, SR.KAUFMAN @ MIT-SPEECH
cc: CSTACY @ MIT-MC, BUG-LISPM @ MIT-OZ
In-reply-to: Msg of 11 Jun 1984 13:54-EDT from David H. Kaufman <sr.kaufman at MIT-SPEECH>


    Date: Monday, 11 June 1984, 13:54-EDT
    From: David H. Kaufman <sr.kaufman at MIT-SPEECH>
    To:   BUG-LISPM at MIT-OZ
    cc:   Sr.Kaufman at MIT-SPEECH
    Re:   For a good time, try: (chaos:whois "@harvard")

    In Release 5.0 [Beta Test rev 7], Spire-Macros 1.8, Compute 1.3,
    Attribute 1.7, Audio 1.2, Speech-Attributes 1.0, Display 1.11,
    Speech-Layouts 1.8, Experimental Versatec 2.0, Experimental Prtout 1.1,
    Spire 13.0, SpireX 10.3, ZOO 1.2, on Lisp Machine Yogi (LM-2):

    Doing (chaos:whois "@harvard") gives the usual "HARVARD does not support
    SHOW-USERS in a usable way" error.  When I accept its offer to "Use
    protocol ASCII-NAME on medium TCP", I am shown the same as
    (chaos:whois "@mc")!

    I didn't know Harvard was running ITS . . . .

------------
Imagine my surprise when I discovered that the problem is not on our
end: both the LispM and ITS are doing the right thing!  Connecting to
HARVARD on the TCP/TELNET port gives you a normal connection there.
However, if you connect to HARVARD on the TCP/NAME port you do not get
a list of users logged into HARVARD.  You get a list of users from the
machine which you are coming from!  They must have gone to some amount
of trouble to make their NAME Server connect back to the User host's
NAME server to get the wrong information.

Chris
11-Jun-84 15:21:52-EDT,858;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 11 Jun 84 15:21-EDT
Date: 11 June 1984 15:21-EDT
From: Christopher C. Stacy <CSTACY @ MIT-MC>
Subject:  SI:*NEED-TO-PRINT-COPYRIGHT-AND-TRADE-SECRET-NOTICE* and PRINT-HERALD
To: BUG-LISPM @ MIT-OZ
cc: DROGERS @ MIT-OZ
In-reply-to: Msg of 10 Jun 1984 11:55-EDT from David Rogers <DROGERS at MIT-OZ>


On no other vendor's operating systems, including: IBM, Honeywell,
DEC, HP, and many others, have I ever seen a copyright notice like
this.  It looks ugly, and seems pointless.

Everybody knows that the system software is copyrighted, and if they
did not they would learn this upon reading the source code, liscense
agreement, or any piece of documentation!  Some people here are
antagonized or insulted by the message; more than that, I think the
message makes Symbolics look quite foolish.

11-Jun-84 15:27:09-EDT,621;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 11 Jun 84 15:26-EDT
Date: 11 June 1984 15:26-EDT
From: Christopher C. Stacy <CSTACY @ MIT-MC>
Subject:  [research!rtm: forwarded]
To: SR.KAUFMAN @ MIT-SPEECH
cc: CSTACY @ MIT-MC, BUG-LISPM @ MIT-OZ

Date: Mon, 11 Jun 84 15:21:57 edt
From: research!rtm at harvard
To:   cstacy
Message-Id: <8406111921.AA18428@harvard.ARPA>

Yup, the finger server on harvard reflects global fingers from
other machines. Mostly as a joke, though there is some feeling
that we don't want to give away user names to outsiders. Finger
person@harvard should still work correctly.

11-Jun-84 15:33:37-EDT,663;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 11 Jun 84 15:33-EDT
Date: 11 June 1984 15:32-EDT
From: Christopher C. Stacy <CSTACY @ MIT-MC>
Subject:  [research!rtm: forwarded]
To: CSTACY @ MIT-MC
cc: BUG-LISPM @ MIT-OZ, SR.KAUFMAN @ MIT-SPEECH
In-reply-to: Msg of 11 Jun 1984 15:26-EDT from Christopher C. Stacy <CSTACY>


I am tempted to patch ITS so that any TCP connections from Harvard
will forward to another Internet host indexed from the host table by
the phase of the Moon.  This would be a funny joke, you see: I am sure
that their system programmers are so bored they could use a little
extraneous network experimentation and debugging.

11-Jun-84 15:36:13-EDT,1304;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 11 Jun 84 15:35-EDT
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 46837; Mon 11-Jun-84 15:37:26-EDT
Date: Monday, 11 June 1984, 15:37-EDT
From: "(probably) David C. Plummer" <DCP at SCRC-TENEX>
Subject: For a good time, try: (chaos:whois "@harvard")
To: Christopher C. Stacy <CSTACY at MIT-MC>, BRADNER at HARVARD,
    SR.KAUFMAN at MIT-SPEECH
cc: BUG-LISPM at MIT-OZ
In-Reply-To: The message of 11 Jun 84 15:02-EDT from Christopher C. Stacy <CSTACY at MIT-MC>

    Date: 11 June 1984 15:02-EDT
    From: Christopher C. Stacy <CSTACY @ MIT-MC>

    Imagine my surprise when I discovered that the problem is not on our
    end: both the LispM and ITS are doing the right thing!  Connecting to
    HARVARD on the TCP/TELNET port gives you a normal connection there.
    However, if you connect to HARVARD on the TCP/NAME port you do not get
    a list of users logged into HARVARD.  You get a list of users from the
    machine which you are coming from!  They must have gone to some amount
    of trouble to make their NAME Server connect back to the User host's
    NAME server to get the wrong information.

I wonder what happens if, from HARVARD, you open a TCP/NAME connection
to HARVARD!
11-Jun-84 15:45:27-EDT,1218;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 11 Jun 84 15:45-EDT
Received: from SCRC-HARLEM by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 46846; Mon 11-Jun-84 15:40:21-EDT
Date: Monday, 11 June 1984, 15:38-EDT
From: Joseph R Goldstone <joseph at SCRC-QUABBIN>
Subject: SI:*NEED-TO-PRINT-COPYRIGHT-AND-TRADE-SECRET-NOTICE* and PRINT-HERALD
To: David Rogers <DROGERS at MIT-OZ>
Cc: bug-lispm at MIT-OZ
In-reply-to: The message of 10 Jun 84 11:55-EDT from David Rogers <DROGERS at MIT-OZ>

    Date: Sunday, 10 June 1984, 11:55-EDT
    From: David Rogers <DROGERS at MIT-OZ>
    In Release 5.0, Experimental MIT 1.4, FEP 18, on Lisp Machine Jim Morrison (3600):

    The message

    Note: For copyright and trade secret information (viewf "sys:site;notice.txt")

    that gets printed when a PRINT-HERALD is done is not only antagonistic and
    overly legalistic, it is wrong: typing (viewf "sys:site;notice.txt") returns the 
    message:

    No such file type
    For SYS: SITE; NOTICE.TXT.NEWEST

Unless someone has changed it, that's sys:site;notice.text.  It's a logical pathname,
so it doesn't follow the Twenex .txt convention.

(I just checked, and it's still there.)
11-Jun-84 15:51:32-EDT,1118;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 11 Jun 84 15:50-EDT
Date: Monday, 11 June 1984, 15:44-EDT
From: Henry Lieberman <Henry at MIT-OZ>
Subject: Bandage
To: Daniel L. Weinreb <DLW at SCRC-TENEX>
Cc: Bug-Lispm at MIT-OZ
In-reply-to: The message of 11 Jun 84 07:30-EDT from Daniel L. Weinreb <DLW at SCRC-TENEX>


    And if you didn't happen to have enough free space in your FEP file
    system to accept the band?  I presume people usually keep their disks
    almost full, to make maximum use of the limited space available.

    ...and it is considered anti-social to bash a band on somebody else's
    machine unless the users/owners of the machine give you explicit
    permission for you to maintain their FEP filesystem.  I know of one
    site that does this.  They are smaller and a bit more uniform than MIT,
    which makes it a bit smoother.

The majority of users will, I expect, "just want to have the latest software", 
so that task should be made easy, at the expense of making other options 
[optimizing file space, maintaining private bands] take a little more hacking.
11-Jun-84 15:57:51-EDT,1865;000000000000
Received: from SCRC-YUKON by MIT-OZ via Chaosnet; 11 Jun 84 15:57-EDT
Received: from SCRC-MERRIMACK by SCRC-YUKON via CHAOS with CHAOS-MAIL id 45820; Mon 11-Jun-84 15:57:59-EDT
Date: Monday, 11 June 1984, 15:55-EDT
From: Mike McMahon <MMcM at SCRC-TENEX>
Subject: Going into >Fep when using Compile Region (Control-Shift-C)
To: RWK at SCH-GODZILLA
cc: dcp at SCH-GODZILLA, bug-lispm at MIT-OZ, maint at SCRC-YUKON
In-Reply-To: The message of 10 Jun 84 23:13-EDT from RWK at SCH-GODZILLA
Message-ID: <840611155551.1.MMCM@MERRIMACK.SCRC.Symbolics>

    Date: Sunday, 10 June 1984, 20:13-PDT
    From: RWK at SCH-GODZILLA

	Date: Sunday, 10 June 1984, 16:06-EDT
	From: New FEP system <DCP at SCRC-TENEX>
	    Date: Sunday, 10 June 1984, 14:36-EDT
	    From: Harry L. Voorhees <HLV at MIT-OZ>
    
	    In Release 5.0 [Beta Test rev 7], FEP 18, on Lisp Machine Robot-1 (3600):

	    By the way, the function which I was attempting to compile is:
      
	    (defun g (sigma)
	      (local-declare (sigma))
	      (closure '(sigma)
		#'(lambda (x)
		    (let ((x2/sigma2 (// (* x x) (* sigma sigma))))
		      (* (// 1 (* (sqrt (* 2.0 pi)) sigma 3.))
			 (exp (* -0.5 x2/sigma2)))))))
    
	Included below is the error it was trying to give you.  Your stack group
	probably has non-trappability set somehow so you will go to the FEP on
	any microcode signalled error in that stack group.  This can happen (in
	5.0beta7 at least) if you hit [Abort] while in the middle of handling a
	microcode generated error.  This is fixed by 243.580 and microcode 274.
	I don't see any indication in Joseph's log that this is being migrated
	to Release 5, though I don't know how up to date that log is.

    It is already in Release 5.1, which will start shipping shortly.

Nope.  This bug is fixed by 243.576, which isn't in 5.anything yet.
11-Jun-84 16:03:18-EDT,727;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 11 Jun 84 16:02-EDT
Date: 11 June 1984 16:00-EDT
From: Christopher C. Stacy <CSTACY @ MIT-MC>
Subject: Bandage
To: Henry @ MIT-OZ
cc: BUG-LISPM @ MIT-OZ, DLW @ SCRC-TENEX


It has been my experience on the LispMs that I look after
that most users do not want the latest software, but rather
working software.  We pretty carefully ensure that old bands
stay around if new bands are installed.  Almost always, some
juggling bands among 3 machines is required.  If there are
dumped bands of someone's system, it gets even more complicated.
We do not generally trust humans to install/manage the world
load bands, so I cannot see entrusting this to a computer program.
11-Jun-84 16:19:23-EDT,1183;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 11 Jun 84 16:17-EDT
Date: 11 Jun 1984  16:17 EDT (Mon)
Message-ID: <SR.EHPYC.12022669788.BABYL@MIT-SPEECH>
From: Scott Cyphers <SR.EHPYC@MIT-SPEECH>
To:   Henry Lieberman <Henry@MIT-OZ>
Cc:   Bug-Lispm@MIT-OZ, "Daniel L. Weinreb" <DLW@SCRC-TENEX>
Subject: Bandage
In-reply-to: Msg of 11 Jun 1984 15:44-EDT from Henry Lieberman <Henry at MIT-OZ>

What if host namespace entries had a "LATEST-BAND" field that, if
set, would be maintained with the latest software.  If this was blank,
then that host would not be subject to the automatic updates.

A problem I see with automatic updates to most or all machines is that
it takes a lot less time to do a single subnet transfer than it does
to do a multi-subnet transfer.  It would make more sense to have one
machine on each subnet be targetted for automatic updating, and let
people copy from there (which only takes a few minutes).  Perhaps
there could even be a function, SI:RECEIVE-LATEST-LISP which would
look for the cheapest (in a net sense) place to get the new software,
according to the namespace server's records of software, and then get
it from there.
11-Jun-84 16:20:47-EDT,1063;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 11 Jun 84 16:19-EDT
Date: 11 Jun 1984  16:19 EDT (Mon)
Message-ID: <SR.KAUFMAN.12022670041.BABYL@MIT-SPEECH>
From: David H Kaufman <SR.KAUFMAN@MIT-SPEECH>
To:   "Christopher C. Stacy" <CSTACY@MIT-MC>
Cc:   BUG-LISPM@MIT-OZ, mly@oz, gumby@mc
Subject: [research!rtm: forwarded]

    Date: Monday, 11 June 1984  15:32-EDT
    From: Christopher C. Stacy <CSTACY at MIT-MC>
    To:   CSTACY at MIT-MC
    cc:   BUG-LISPM at MIT-OZ, SR.KAUFMAN
    Re:   [research!rtm: forwarded]

    I am tempted to patch ITS so that any TCP connections from Harvard
    will forward to another Internet host indexed from the host table by
    the phase of the Moon.  This would be a funny joke, you see: I am sure
    that their system programmers are so bored they could use a little
    extraneous network experimentation and debugging.

The question is, how are you going to figure out the phase of the
Moon?  The code in Emacs and in Maclisp is broken such that it DOESN'T
depend on the pahse of the Moon!
11-Jun-84 16:25:28-EDT,868;000000000000
Received: from MIT-AVATAR by MIT-OZ via Chaosnet; 11 Jun 84 16:23-EDT
Date: Sunday, 10 June 1984, 22:10-EDT
From: Charles Rich <RICH at MIT-OZ>
Subject: Compiler Bug, Argh.....
To: BUG-LISPM at MIT-OZ

In Release 4.5, Reasoning Utility Package 15.0,
Experimental Layered Reasoning System 3.0, site configuration 61,
Vanilla, on PA Lisp Machine Avatar:

The following is a distillation of an obscure compiler
bug I tripped into today:

(DEFUN LOSE ()
  (DO ((L (MAP #'(LAMBDA (X) X) (LIST 1 2 3))))
      (T L)))

(DEFUN DOESNT-LOSE1 ()
  (DO ((L (MAP #'CAR (LIST 1 2 3))))
      (T L)))

(DEFUN DOESNT-LOSE2 ()
  (DO ((L (PRINT (MAP #'(LAMBDA (X) X) (LIST 1 2 3)))))
      (T L)))

Interpreted, all of these functions return (1 2 3).

Compiled, however (LOSE) returns NIL, whereas the other
two continue to return (1 2 3).

	-Chuck Rich
11-Jun-84 19:49:31-EDT,954;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 11 Jun 84 19:49-EDT
Received: from SCRC-CHICOPEE by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 46989; Mon 11-Jun-84 19:51:09-EDT
Date: Monday, 11 June 1984, 19:49-EDT
From: Daniel L. Weinreb <DLW at SCRC-TENEX>
Subject: package system extension request
To: X.GYRO at MIT-OZ
Cc: bug-lispm at MIT-OZ
In-reply-to: <X.GYRO.12022602938.BABYL@MIT-OZ>
Message-ID: <840611194921.8.DLW@CHICOPEE.SCRC.Symbolics>

Indeed, my comments assumed that you wanted a package system in the
sense of a read-time multiple-obarray package system.

The biggest problem with the scheme you suggest is that it doesn't
create multiple namespaces for things other than functions.  What if you
want your own property name that nobody else uses, for example?  Or your
own flavor name?

I think there are other problems, but it's been many years since I last
spent time thinking about this set of issues.
11-Jun-84 21:11:21-EDT,1788;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 11 Jun 84 21:10-EDT
Received: from SCRC-STILLWATER by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 47033; Mon 11-Jun-84 21:10:56-EDT
Date: Monday, 11 June 1984, 21:08-EDT
From: Philip Greenspun <philg at SCRC-STONY-BROOK>
Subject: DRAW-DASHED-LINE
To: Patrick A. O'Donnell <PAO at MIT-EECS>
Cc: bug-lispm at MIT-OZ
In-reply-to: The message of 10 Jun 84 20:33-EDT from Patrick A. O'Donnell <PAO at MIT-EECS>

    Date: Sunday, 10 June 1984, 20:33-EDT
    From: Patrick A. O'Donnell <PAO at MIT-EECS>

    In Release 5.0 [Beta Test rev 7], FEP 18, on Lisp Machine Robot-2 (3600):

    The following code for (:METHOD TV:GRAPHICS-MIXIN :DRAW-DASHED-LINE)
    should work much better than the existing code in the case of RELAXED-P
    (or "space-literally-p") being non-NIL.

Thank you very much for the code and the report.  Actually
:DRAW-DASHED-LINE has some larger problems.  Primarily it doesn't have
the same scan conversion as :DRAW-LINE so that if one XORs a :DRAW-LINE
and :DRAW-DASHED-LINE the result is not pretty.  Also, one can't easily
draw a dashed line wider than one pixel.  Lastly, there should be just
one method with keyword arguments for everything.

However, I have some PERSONAL code that solves some of these problems.
For solid lines of one pixel, it just uses the system %draw-line
function so it is quite fast in the usual case.  It draws arbitrarily
wide and arbitrarily dashed lines as well (I did not solve the corner
problem like :DRAW-WIDE-CURVE does), has the same scan-conversion as
:DRAW-LINE so XOR'd things look proper, and seems to clip properly.  If
you would like to try this out (you just load it and send a new message,
:HACK-DRAW-LINE), please send me mail.
12-Jun-84 14:44:47-EDT,986;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 12 Jun 84 14:43-EDT
Received: from SCRC-CHICOPEE by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 59349; Tue 12-Jun-84 13:31:15-EDT
Date: Tuesday, 12 June 1984, 13:32-EDT
From: Daniel L. Weinreb <DLW at SCRC-TENEX>
Subject: Compiler Bug, Argh.....
To: RICH at MIT-OZ, BUG-LISPM at MIT-OZ
In-reply-to: The message of 10 Jun 84 22:10-EDT from Charles Rich <RICH at MIT-OZ>
Message-ID: <840612133217.4.DLW@CHICOPEE.SCRC.Symbolics>

    Date: Sunday, 10 June 1984, 22:10-EDT
    From: Charles Rich <RICH at MIT-OZ>

    In Release 4.5, Reasoning Utility Package 15.0,
    Experimental Layered Reasoning System 3.0, site configuration 61,
    Vanilla, on PA Lisp Machine Avatar:

    The following is a distillation of an obscure compiler
    bug I tripped into today:

I can't reproduce this in the post-5.0 world that I am running.  Would
you please try it again in a Release 5.0 world -- it should work there.
Thanks.
12-Jun-84 14:54:27-EDT,2521;000000000000
Received: from MIT-LISPM-2 by MIT-OZ via Chaosnet; 12 Jun 84 14:52-EDT
Date: Monday, 11 June 1984, 11:57-EDT
From: Eugene Ciccarelli <ECC at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In System 98.59, CADR 3.6, ZMail 53.17, MIT-Specific 22.1, microcode 309,
gc@36, on Lisp Machine Two:


Insert your description of the circumstances here:

This error occurs immediately upon typing #

>>TRAP 3210 (FUNCTION-ENTRY)
Function SI:INFIX-TOPLEVEL-PARSE called with too many arguments (3).
Backtrace from the debugger:

SI:INFIX-TOPLEVEL-PARSE (P.C. = 26)

 Arg 0 (STANDARD-INPUT): #:TERMINAL-IO-SYN-STREAM
 Arg 1 (IGNORE): 33
   --Extraneous args:--
 Arg 2: NIL


Additional information supplied with call:
 Values to be collected for MULTIPLE-VALUE-LIST

SI:XR-DISPATCH-MACRO-DRIVER (P.C. = 141)

 Arg 0 (STREAM): #:TERMINAL-IO-SYN-STREAM
 Arg 1 (MACRO-CHAR): 43
Local 0 (ARG): NIL
Local 1 (TEM): NIL
Local 2 (CHAR): 33
Local 3 (FN): SI:INFIX-TOPLEVEL-PARSE


SI:INVOKE-READER-MACRO (P.C. = 36)

 Arg 0 (MACRO): (SI:XR-DISPATCH-MACRO-DRIVER T (47 SI:|XR-#'-MACRO|) (140 SI:|XR-#`-MACRO|) ...)
 Arg 1 (STREAM): #:TERMINAL-IO-SYN-STREAM


SI:INTERNAL-READ (P.C. = 310)

 Arg 0 (STREAM): #:TERMINAL-IO-SYN-STREAM
 Arg 1 (EOF-ERRORP): NIL
 Arg 2 (EOF-VALUE): SI:NO-EOF-OPTION
 Arg 3 (RECURSIVE-P): NIL
 Arg 4 (PRESERVE-WHITESPACE): NIL
 Arg 5 (DISCARD-CLOSEPARENS): T
   --Defaulted args:--
 Arg 6 (CHECK-INDENTATION): NIL
Local 0 (W-O): (:READ-BP :FORCE-RESCAN :RESCANNING-P :ELEMENT-TYPE ...)
Local 1 (THING): (SI:XR-DISPATCH-MACRO-DRIVER T (47 SI:|XR-#'-MACRO|) (140 SI:|XR-#`-MACRO|) ...)
Local 2 (TYPE): SI:READER-MACRO
Local 3 (VALUES): NIL


Additional information supplied with call:
 Multiple values being passed to frame at 424

READ-FOR-TOP-LEVEL (P.C. = 37)

 Rest arg (READ-ARGS): NIL
Local 1 (STREAM): #:TERMINAL-IO-SYN-STREAM
Local 2 (EOF-OPTION): SI:NO-EOF-OPTION


Remainder of stack:

(:METHOD TV:STREAM-MIXIN :RUBOUT-HANDLER) (P.C. = 306)
(:METHOD TV:TYPEOUT-WINDOW :COMBINED :RUBOUT-HANDLER) (P.C. = 52)
BREAK (P.C. = 546)
ZWEI:COM-BREAK (P.C. = 44)
ZWEI:COMMAND-EXECUTE (P.C. = 115)
ZWEI:PROCESS-COMMAND-CHAR (P.C. = 65)
(:METHOD ZWEI:WINDOW :EDIT) (P.C. = 464)
(:INTERNAL (:METHOD ZWEI:ZMACS-WINDOW :COMBINED :EDIT) 0) (P.C. = 74)
FUNCALL (P.C. = 25)
(:METHOD ZWEI:DISPLAYER :AROUND :EDIT) (P.C. = 31)
(:METHOD ZWEI:ZMACS-WINDOW :COMBINED :EDIT) (P.C. = 47)
ZWEI:ZMACS-WINDOW-TOP-LEVEL (P.C. = 46)
SI:PROCESS-TOP-LEVEL (P.C. = 152)
12-Jun-84 15:33:41-EDT,625;000000000000
Received: from MIT-LISPM-2 by MIT-OZ via Chaosnet; 12 Jun 84 15:32-EDT
Date: Monday, 11 June 1984, 12:38-EDT
From: Eugene Ciccarelli <ECC at MIT-OZ>
Subject: color screen menu loop
To: BUG-LISPM at MIT-OZ

In System 98.49, CADR 3.6, ZMail 53.17, MIT-Specific 22.1, microcode 309,
gc@36, on Lisp Machine Two:

(The following also occurs with the latest patches loaded.)

Terminal- to switch the mouse to the color screen, bring up the system
menu, and select Edit Screen.  This menu is ok for all but the "Exit"
item -- when the mouse is put over that item, the system menu process
goes into an infinite loop.
12-Jun-84 20:36:41-EDT,1168;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 12 Jun 84 20:35-EDT
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 47706; Tue 12-Jun-84 20:37:58-EDT
Date: Tuesday, 12 June 1984, 20:35-EDT
From: David A. Moon <Moon at SCRC-TENEX>
Subject: Compiler Bug, Argh.....
To: Daniel L. Weinreb <DLW at SCRC-TENEX>
Cc: RICH at MIT-OZ, BUG-LISPM at MIT-OZ
In-reply-to: <840612133217.4.DLW@CHICOPEE.SCRC.Symbolics>
Message-ID: <840612203529.4.MOON@EUPHRATES.SCRC.Symbolics>

    Date: Tuesday, 12 June 1984, 13:32-EDT
    From: Daniel L. Weinreb <DLW at SCRC-TENEX>

	Date: Sunday, 10 June 1984, 22:10-EDT
	From: Charles Rich <RICH at MIT-OZ>

	In Release 4.5, Reasoning Utility Package 15.0,
	Experimental Layered Reasoning System 3.0, site configuration 61,
	Vanilla, on PA Lisp Machine Avatar:

	The following is a distillation of an obscure compiler
	bug I tripped into today:

    I can't reproduce this in the post-5.0 world that I am running.  Would
    you please try it again in a Release 5.0 world -- it should work there.
    Thanks.

Avatar is a CADR, so you weren't testing the same compiler anyway.
12-Jun-84 22:04:38-EDT,984;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 12 Jun 84 22:04-EDT
Date: Tuesday, 12 June 1984, 14:13-EDT
From: Scott Cyphers <sr.ehpyc at MIT-SPEECH>
Subject: SQRT could be twice as fast without even being clever about it
To: BUG-LISPM at MIT-OZ

In Release 5.0, Experimental MIT 1.4, Spire-Macros 1.8, Compute 1.3,
Attribute 1.6, Audio 1.2, Speech-Attributes 1.0, Display 1.11,
Speech-Layouts 1.8, Experimental Versatec 2.0, Experimental Prtout 1.1,
Spire 13.0, SpireX 10.3, LexiS 6.3, FEP 18, on Lisp Machine Grizzly (3600):

I wanted to see how much faster something simple like SQRT was than LOG and
EXP, and I came up with this unexpected suprise:

It takes about 700 to 800 microseconds to do a square root with SQRT.

It takes about 400 to do one with (exp (// (log x) 2.0)).

There seems to be very little difference in the two values.  It would seem that
if Log and Exp can be that fast, there ought to be some algorithm of about the
same speed for Log.
12-Jun-84 22:55:55-EDT,2022;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 12 Jun 84 22:55-EDT
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 47754; Tue 12-Jun-84 22:54:48-EDT
Date: Tuesday, 12 June 1984, 22:52-EDT
From: "(probably) David C. Plummer" <DCP at SCRC-TENEX>
Subject: SQRT could be twice as fast without even being clever about it
To: Scott Cyphers <sr.ehpyc at MIT-SPEECH>, BUG-LISPM at MIT-OZ,
    Numerics at SCRC-TENEX
In-Reply-To: The message of 12 Jun 84 14:13-EDT from Scott Cyphers <sr.ehpyc at MIT-SPEECH>

    Date: Tuesday, 12 June 1984, 14:13-EDT
    From: Scott Cyphers <sr.ehpyc at MIT-SPEECH>

    In Release 5.0, Experimental MIT 1.4, Spire-Macros 1.8, Compute 1.3,
    Attribute 1.6, Audio 1.2, Speech-Attributes 1.0, Display 1.11,
    Speech-Layouts 1.8, Experimental Versatec 2.0, Experimental Prtout 1.1,
    Spire 13.0, SpireX 10.3, LexiS 6.3, FEP 18, on Lisp Machine Grizzly (3600):

    I wanted to see how much faster something simple like SQRT was than LOG and
    EXP, and I came up with this unexpected suprise:

    It takes about 700 to 800 microseconds to do a square root with SQRT.

    It takes about 400 to do one with (exp (// (log x) 2.0)).

    There seems to be very little difference in the two values.  It would seem that
    if Log and Exp can be that fast, there ought to be some algorithm of about the
    same speed for Log.

This is because of the following comment in SQRT-AUX:
	    ;;the following addition may well overflow into bignum, temporarily.
	    (setq y (%flonum (ash (+ (%fixnum y) (%fixnum z)) -1))))
Needless to say, it appears to always overflow into a bignum when the
argument to SQRT is >= to 4.0.  If the Numerics crew can guarentee
(shouldn't be hard) that (%fixnum y) and (%fixnum z) are both
non-negative fixnums, then the following code is equivalent and makes
SQRT take roughly 134 microseconds (for arguments >= 4.0):
	    (setq y (%flonum (lsh (%32-bit-plus (%fixnum y) (%fixnum z)) -1))))
13-Jun-84 03:30:08-EDT,405;000000000000
Mail-From: MLY.L created at 13-Jun-84 03:29:32
Date: Wed, 13 Jun 1984  03:29 EDT
Message-ID: <MLY.L.12023054248.BABYL@MIT-OZ>
From: MLY.L@MIT-OZ
To:   Eugene Ciccarelli <ECC@MIT-OZ>
Cc:   BUG-LISPM@MIT-OZ
In-reply-to: Msg of 11 Jun 1984 11:57-EDT from Eugene Ciccarelli <ECC>

Fixed in 98.63. Thanks.
PS. what on earth would you want to use that infix stuff for?
To me it seems so horrible!...
13-Jun-84 08:52:31-EDT,428;000000000000
Received: from MIT-EECS by MIT-OZ via Chaosnet; 13 Jun 84 08:52-EDT
Date: Wednesday, 13 June 1984, 08:51-EDT
From:  <GAVAN at MIT-OZ>
Subject: ML as mail route?
To: BUG-LISPM at MIT-OZ

In Release 5.0, Experimental MIT 1.4, Experimental RELATUS 112.9, FEP 18, on Lisp Machine Jim Morrison (3600):

When I send bug reports this machine tries to route them through ML, royally
wasting my time, a whole 15 seconds or so.
13-Jun-84 10:53:16-EDT,1297;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 13 Jun 84 10:51-EDT
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 47901; Wed 13-Jun-84 10:46:12-EDT
Date: Wednesday, 13 June 1984, 10:43-EDT
From: "(probably) David C. Plummer" <DCP at SCRC-TENEX>
Subject: Infix notation
To: MLY.L at MIT-OZ, Eugene Ciccarelli <ECC at MIT-OZ>
cc: BUG-LISPM at MIT-OZ
In-Reply-To: <MLY.L.12023054248.BABYL@MIT-OZ>

    Date: Wed, 13 Jun 1984  03:29 EDT
    From: MLY.L@MIT-OZ

    Fixed in 98.63. Thanks.
    PS. what on earth would you want to use that infix stuff for?
    To me it seems so horrible!...

The formula for the distance from a point (x,y) to a line (a,b) to (c,d)
is the determinant of the magic twice-area-of-triangle matrix divided by
the distance between the endpoints of the line

	| 1 x y |
	| 1 a b |
	| 1 c d |
	---------
	distance

or, 

	#  ((a*d-b*c)-(x*d-y*c)+(x*b-y*a))
		       /
	    sqrt((a-c)^2+(d-b)^2)  #

or,

(// (+ (- (* A D) (* B C))
       (- (- (* X D) (* Y C)))
       (- (* X B) (* Y A)))
    (SQRT (+ (^ (- A C) 2) (^ (- D B) 2))))

We don't have an input language for the first, the second is roughly
what you SEE in a textbook, and the third (lisp) is hopeless to
understand at a glance.
13-Jun-84 11:33:37-EDT,932;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 13 Jun 84 11:30-EDT
Received: from SCRC-PEACE by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 47945; Wed 13-Jun-84 11:31:43-EDT
Date: Wednesday, 13 June 1984, 11:29-EDT
From: Charles Hornig <Hornig at SCRC-STONY-BROOK>
Subject: ML as mail route?
To: GAVAN at MIT-OZ, BUG-LISPM at MIT-OZ
In-reply-to: The message of 13 Jun 84 08:51-EDT from GAVAN at MIT-OZ
Message-ID: <840613112917.3.HORNIG@PEACE.SCRC.Symbolics>

    Date: Wednesday, 13 June 1984, 08:51-EDT
    From:  <GAVAN at MIT-OZ>

    In Release 5.0, Experimental MIT 1.4, Experimental RELATUS 112.9, FEP 18, on Lisp Machine Jim Morrison (3600):

    When I send bug reports this machine tries to route them through ML, royally
    wasting my time, a whole 15 seconds or so.

Someone should develop the courage to delete ML from the namespace
database if it will not be running in the near future.
13-Jun-84 13:06:41-EDT,490;000000000000
Mail-From: DICK created at 13-Jun-84 13:05:48
Date: Wed, 13 Jun 1984  13:05 EDT
Message-ID: <DICK.12023159156.BABYL@MIT-OZ>
Sender: DICK@MIT-OZ
From: Dick@MIT-MC
To:   bug-lispm@MIT-OZ
Subject: SYMBOLCONC
cc:   rich@MIT-OZ


I just noticed that the function SYMBOLCONC is not documented in any
of the the lispm manuals.  Does this mean it isn't a supported
function?  If it isn't, I would like to argue that it should be
because it is a very useful function.

		Dick Waters
13-Jun-84 14:07:04-EDT,887;000000000001
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 13 Jun 84 14:05-EDT
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 48046; Wed 13-Jun-84 14:05:12-EDT
Date: Wednesday, 13 June 1984, 14:02-EDT
From: David A. Moon <Moon at SCRC-TENEX>
Subject: SYMBOLCONC
To: Dick at MIT-MC
Cc: bug-lispm at MIT-OZ, rich at MIT-OZ
In-reply-to: <DICK.12023159156.BABYL@MIT-OZ>
Message-ID: <840613140234.2.MOON@EUPHRATES.SCRC.Symbolics>

    Date: Wed, 13 Jun 1984  13:05 EDT
    From: Dick@MIT-MC

    I just noticed that the function SYMBOLCONC is not documented in any
    of the the lispm manuals.  Does this mean it isn't a supported
    function?  If it isn't, I would like to argue that it should be
    because it is a very useful function.

How about telling your readers who have never heard of SYMBOLCONC what it is,
or is proposed to be?
13-Jun-84 14:36:59-EDT,325;000000000000
Mail-From: ROB created at 13-Jun-84 14:31:52
Date: 13 Jun 1984  14:31 EDT (Wed)
Message-ID: <ROB.12023174819.BABYL@MIT-OZ>
From: "Robert H. Kassel" <rob@MIT-OZ>
To:   bug-lispm@MIT-OZ
Subject: whois


If you say whois@(a 5.0 machine) you will get the information
from the namespace sans the all-important remark.

13-Jun-84 15:57:19-EDT,1912;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 13 Jun 84 15:48-EDT
Date: Wednesday, 13 June 1984, 14:50-EDT
From: Scott Cyphers <sr.ehpyc at MIT-SPEECH>
Subject: Array register suggestions
To: BUG-LISPM at MIT-OZ

In Release 5.0, Experimental MIT 1.4, Spire-Macros 1.8, Compute 1.3,
Attribute 1.6, Audio 1.2, Speech-Attributes 1.0, Display 1.11,
Speech-Layouts 1.8, Experimental Versatec 2.0, Experimental Prtout 1.1,
Spire 13.0, SpireX 10.3, LexiS 6.3, FEP 18, on Lisp Machine Grizzly (3600):

Suppose I wanted to do something like this:

(defun prepare-werewolves (x y)
  (let ((x x)
	(y y))
    (declare (sys:array-register x y))
    (loop while (neq (phase-of-moon) :full)
	  do
	  [frob x into y]
	  (swapf x y)
	  finally (return y))))

The SWAPF gets compiled into something that just swaps the X and Y, and
doesn't swap the (X)+1 and (Y)+1 array register information.

And, as long as I'm on the subject, it would be nice if there was some
way to pass an array register as an argument to a function.  For
example, when preparing werewolves, one of the things you have to do is
take four elements of X, do some things to them, and then put them in Y.
As it is, you have to either open code it yourself, use a subst, or use
a macro.  If something like:

(defun prepare-werewolves-internal (x y)
  (declare (sys:array-register x y))
  (do stuff to x and y))

could be done, where the X and Y expanded into double arguments (so that
the function really took four arguments) then array crunching code could
be a lot simpler.  It would certainly be alright for the
prepare-werewolves-internal to have to be compiled before it was
referenced, so that anyone who called it would know to pass the extra
array register arguments, and it would be alright for anyone who changed
prepare-werewolves-internal's arguments to get screwed if they didn't
recompile the callers.
13-Jun-84 15:59:23-EDT,1621;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 13 Jun 84 15:51-EDT
Received: from SCRC-PEACE by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 48136; Wed 13-Jun-84 15:53:25-EDT
Date: Wednesday, 13 June 1984, 15:51-EDT
From: Charles Hornig <Hornig at SCRC-STONY-BROOK>
Subject: Terminal program now unable to connect to BBNG
To: KDF at MIT-PYGMALION, BUG-LISPM at MIT-OZ
In-reply-to: The message from KDF at MIT-PYGMALION
Message-ID: <840613155100.2.HORNIG@PEACE.SCRC.Symbolics>

    From:  <KDF at MIT-PYGMALION>

    In Release 5.0, Experimental MIT 1.4, FEP 18, on Lisp Machine Janis Joplin (3600):

    Terminal program asks me a sequence of five questions.  Typing "Y" to each of them informs me
    that "BBNG doesn't support login in a reasonable way", and then bumps me back to the first question.
    If I type "N" for the final alternative, the error below occurs.

    Come on, guys, this worked fine before...

    >>Error: BBNG does not support LOGIN in a reachable way.
    While in the function NET:INVOKE-SERVICE-ON-HOST  TELNET:GET-LOGIN-CONNECTION  (:METHOD TELNET:NVT-WINDOW :CONNECT)

The reason that you can't connect is that in release 5 the LispM TCP
support (including the TCP gateway) was moved to a separately loaded
system.  This system is now entering beta-test and should appear in some
MIT groups very soon.  The error is trying to say that BBNG only
supports remote login via TCP, and your machine does not know about TCP.

The fact that the program asks the questions in this case is a bug,
which has been fixed in the development version (243.766).
13-Jun-84 16:01:38-EDT,841;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 13 Jun 84 15:52-EDT
Received: from SCRC-PEACE by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 48138; Wed 13-Jun-84 15:55:08-EDT
Date: Wednesday, 13 June 1984, 15:52-EDT
From: Charles Hornig <Hornig at SCRC-STONY-BROOK>
Subject: [KDF at MIT-PYGMALION: Terminal program now unable to connect to BBNG]
To: bug-lispm at MIT-OZ
Message-ID: <840613155243.3.HORNIG@PEACE.SCRC.Symbolics>

Whatever system produced this header has a problem...

Received: from MIT-OZ by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 46559; Mon 11-Jun-84 08:54:49-EDT
Received: from MIT-MC by MIT-OZ via Chaosnet; 11 Jun 84 08:52-EDT
Date: Monday, 11 January -2941657, -17:-7-EST
From:  <KDF at MIT-PYGMALION>
Subject: Terminal program now unable to connect to BBNG
To: BUG-LISPM at MIT-OZ
...
13-Jun-84 16:03:50-EDT,1714;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 13 Jun 84 15:57-EDT
Received: from SCRC-PEACE by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 48140; Wed 13-Jun-84 15:56:47-EDT
Date: Wednesday, 13 June 1984, 15:54-EDT
From: Charles Hornig <Hornig at SCRC-STONY-BROOK>
Subject: host connection damage
To: David Rogers <DROGERS at MIT-OZ>, BUG-LISPM at MIT-OZ
In-reply-to: The message of 11 Jun 84 01:58-EDT from David Rogers <DROGERS at MIT-OZ>
Message-ID: <840613155422.4.HORNIG@PEACE.SCRC.Symbolics>

    Date: Monday, 11 June 1984, 01:58-EDT
    From: David Rogers <DROGERS at MIT-OZ>

    In Release 5.0, Experimental MIT 1.4, on Lisp Machine Robot-4 (3600):

    (This is the new PLUS band by the way)

    When I try to connect to host SUMEX-AIM I get:

    SUMEX-AIM does not support LOGIN in a reachable way.

    It used to. Then it takes me through a list of things to try, NOT 
    REMEMBERING when I say "Y" and it tries and fails. Like:

    Use protocol CHAT on a medium TCP? (Y or N) Yes.
    SUMEX-AIM does not support LOGIN in a reachable way.
    Use protocol CHAT on a medium TCP? (Y or N) Yes.
    ...ad infinitum.....

    When I say NO, it continues onto the next one, but if that fails,
    it again loops. When you say NO, it goes back to the beginning of
    the list again!

    First, the machine should be able to get to an ARPAnet host. Next,
    if it fails, it should be a little more ... uh, intelligent? about
    it.

1. TCP support is almost in beta-test, and should appear at MIT very
soon.  The TCP is part of this in release 5.

2. The pointless brain-damaged error recovery has been fixed in the
development version (243.766).
13-Jun-84 16:25:54-EDT,2431;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 13 Jun 84 16:24-EDT
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 48175; Wed 13-Jun-84 16:26:59-EDT
Date: Wednesday, 13 June 1984, 16:24-EDT
From: David C. Plummer <DCP at SCRC-TENEX>
Subject: Array register suggestions
To: Scott Cyphers <sr.ehpyc at MIT-SPEECH>, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 13 Jun 84 14:50-EDT from Scott Cyphers <sr.ehpyc at MIT-SPEECH>

    Date: Wednesday, 13 June 1984, 14:50-EDT
    From: Scott Cyphers <sr.ehpyc at MIT-SPEECH>

    In Release 5.0, Experimental MIT 1.4, 
    FEP 18, on Lisp Machine Grizzly (3600):

    And, as long as I'm on the subject, it would be nice if there was some
    way to pass an array register as an argument to a function.  For
    example, when preparing werewolves, one of the things you have to do is
    take four elements of X, do some things to them, and then put them in Y.
    As it is, you have to either open code it yourself, use a subst, or use
    a macro.  If something like:

    (defun prepare-werewolves-internal (x y)
      (declare (sys:array-register x y))
      (do stuff to x and y))

    could be done, where the X and Y expanded into double arguments (so that
    the function really took four arguments) then array crunching code could
    be a lot simpler.  It would certainly be alright for the
    prepare-werewolves-internal to have to be compiled before it was
    referenced, so that anyone who called it would know to pass the extra
    array register arguments, and it would be alright for anyone who changed
    prepare-werewolves-internal's arguments to get screwed if they didn't
    recompile the callers.

What you are really saying is you want to save the setup time.  I
believe the setup time is shorter than the time to do a function call
and return, so you would be better off using a subst anyway.  Also, The
total amount of data in an array register is 4 words (the local, the
decode, a locative to base of data, and event ticker), not 2 (I don't
know how you computed this).  Also, someday the syntax
    (defun prepare-werewolves-internal (x y)
      (declare (sys:array-register x y))
      (do stuff to x and y))
might be smart enough to do the local creation and array-register setup
automatically so you don't have to do the (let ((x x) (y y)) ...)
nonsense.  Someday...
13-Jun-84 17:16:16-EDT,2869;000000000000
Received: from SCC-WAIKATO by MIT-OZ via Chaosnet; 13 Jun 84 17:15-EDT
Received: from SCC-YOSEMITE by SCC-WAIKATO via CHAOS with CHAOS-MAIL id 34670; Wed 13-Jun-84 17:14:58-EDT
Date: Wednesday, 13 June 1984, 17:15-EDT
From: Jonathan L. Balgley <jlb at SCC-WAIKATO>
Subject: Array register suggestions
To: DCP at SCRC-TENEX, sr.ehpyc at MIT-SPEECH, BUG-LISPM at MIT-OZ
In-reply-to: The message of 13 Jun 84 16:24-EDT from David C. Plummer <DCP at SCRC-TENEX>

    Date: Wednesday, 13 June 1984, 16:24-EDT
    From: David C. Plummer <DCP at SCRC-TENEX>

	Date: Wednesday, 13 June 1984, 14:50-EDT
	From: Scott Cyphers <sr.ehpyc at MIT-SPEECH>

	In Release 5.0, Experimental MIT 1.4, 
	FEP 18, on Lisp Machine Grizzly (3600):

	And, as long as I'm on the subject, it would be nice if there was some
	way to pass an array register as an argument to a function.  For
	example, when preparing werewolves, one of the things you have to do is
	take four elements of X, do some things to them, and then put them in Y.
	As it is, you have to either open code it yourself, use a subst, or use
	a macro.  If something like:

	(defun prepare-werewolves-internal (x y)
	  (declare (sys:array-register x y))
	  (do stuff to x and y))

	could be done, where the X and Y expanded into double arguments (so that
	the function really took four arguments) 

Why would this be necessary?

v                 then array crunching code could
	be a lot simpler.  It would certainly be alright for the
	prepare-werewolves-internal to have to be compiled before it was
	referenced, so that anyone who called it would know to pass the extra
	array register arguments, and it would be alright for anyone who changed
	prepare-werewolves-internal's arguments to get screwed if they didn't
	recompile the callers.

    What you are really saying is you want to save the setup time.  I
    believe the setup time is shorter than the time to do a function call
    and return, so you would be better off using a subst anyway.  Also, The
    total amount of data in an array register is 4 words (the local, the
    decode, a locative to base of data, and event ticker), not 2 (I don't
    know how you computed this). 

What are these four words?

          Also, someday the syntax
	(defun prepare-werewolves-internal (x y)
	  (declare (sys:array-register x y))
	  (do stuff to x and y))
    might be smart enough to do the local creation and array-register setup
    automatically so you don't have to do the (let ((x x) (y y)) ...)
    nonsense.  Someday...

Why do you have to do the "(let..." nonsense?

Why does the declaration have to be done at all?  Couldn't the compiler
notice that you're passing a variable to AREF?

I plead total ignorance.  I'd be glad to hear a lecture about this.
[Especially since I'm giving one tomorrow.]
13-Jun-84 17:40:25-EDT,3051;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 13 Jun 84 17:39-EDT
Received: from SCRC-MUDDY by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 48228; Wed 13-Jun-84 17:42:21-EDT
Date: Wednesday, 13 June 1984, 17:39-EDT
From: Bruce Edwards <BEE at SCRC-TENEX>
Subject: Array register suggestions
To: jlb at SCC-WAIKATO, DCP at SCRC-TENEX, sr.ehpyc at MIT-SPEECH,
    BUG-LISPM at MIT-OZ
In-reply-to: The message of 13 Jun 84 17:15-EDT from Jonathan L. Balgley <jlb at SCC-WAIKATO>
Message-ID: <840613173936.3.BEE@MUDDY.SCRC.Symbolics>

    Date: Wednesday, 13 June 1984, 17:15-EDT
    From: Jonathan L. Balgley <jlb at SCC-WAIKATO>

	Date: Wednesday, 13 June 1984, 16:24-EDT
	From: David C. Plummer <DCP at SCRC-TENEX>

	    Date: Wednesday, 13 June 1984, 14:50-EDT
	    From: Scott Cyphers <sr.ehpyc at MIT-SPEECH>

	    In Release 5.0, Experimental MIT 1.4, 
	    FEP 18, on Lisp Machine Grizzly (3600):

    Why would this be necessary?
Because he wanted to pass the array-register variable to a function.
Since the array register is four words, if you wanted to pass the entire
variable, you would have to pass 4 words. This could be slower than
passing only the array, and recomputing the array register from the
array, as DCP said:

	What you are really saying is you want to save the setup time.  I
	believe the setup time is shorter than the time to do a function call
	and return, so you would be better off using a subst anyway.  Also, The
	total amount of data in an array register is 4 words (the local, the
	decode, a locative to base of data, and event ticker), not 2 (I don't
	know how you computed this). 

    What are these four words?
The four words as DCP said (not quite correctly) are: the original array
(since you might have to redecode it), the array-dispatch type and event
count, a locative to the base of the data, and the index limit of the
array for bounds checking. 

	      Also, someday the syntax
	might be smart enough to do the local creation and array-register setup
	automatically so you don't have to do the (let ((x x) (y y)) ...)
	nonsense.  Someday...
    Why do you have to do the "(let..." nonsense?
This is because the compiler is too dumb to allow you to have arguments
which are array registers.
    Why does the declaration have to be done at all?  Couldn't the compiler
    notice that you're passing a variable to AREF?
The declaration tells the compiler that you want variable X to be
different from a regular lisp variable. A regular lisp variable just
holds a pointer to the array header and data. An array-register type
variable contains the four words you mention above. The compiler is
smart enough to change an aref of an array-register variable into a
faster kind of array reference macroinstruction. Any other use of the
variable is simply compiled to be a reference to the original array word
of the array register variable. This probably is not a great
explanation, but hopefully it gives you some idea of what is going on.
13-Jun-84 18:40:46-EDT,1073;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 13 Jun 84 18:40-EDT
Date: 13 Jun 1984  18:40 EDT (Wed)
Message-ID: <SR.EHPYC.12023220069.BABYL@MIT-SPEECH>
From: Scott Cyphers <SR.EHPYC@MIT-SPEECH>
To:   Bruce Edwards <BEE@SCRC-TENEX>
Cc:   BUG-LISPM@MIT-OZ, DCP@SCRC-TENEX, jlb@SCC-WAIKATO
Subject: Array register suggestions
In-reply-to: Msg of 13 Jun 1984 17:39-EDT from Bruce Edwards <BEE at SCRC-TENEX>

Okay, that's good enough for the second part of the suggestion.  I
remember the two words from when I was thinking about doing something
like array registers for complex numbers, which would take two words,
and I guess I must have remembered two for some reason.

I see that in some cases swapf will not compile, and in other cases it
compiles but only swaps the array word itself, which can lead to some
strange looking errors when you reference an element out of bounds of
the former array occuring the cell, since the fast aref/aset is
looking at the wrong information now.  I can give examples later when
our computers are back in action.
13-Jun-84 19:10:30-EDT,768;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 13 Jun 84 19:10-EDT
Received: from SCRC-MERRIMACK by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 48266; Wed 13-Jun-84 19:12:35-EDT
Date: Wednesday, 13 June 1984, 19:09-EDT
From: Mike McMahon <MMcM at SCRC-TENEX>
Subject: Array register suggestions
To: Scott Cyphers <SR.EHPYC at MIT-SPEECH>
cc: BUG-LISPM at MIT-OZ
In-Reply-To: <SR.EHPYC.12023220069.BABYL@MIT-SPEECH>
Message-ID: <840613190949.1.MMCM@MERRIMACK.SCRC.Symbolics>

    Date: 13 Jun 1984  18:40 EDT (Wed)
    From: Scott Cyphers <SR.EHPYC@MIT-SPEECH>

    I see that in some cases swapf will not compile, and in other cases it
    compiles but only swaps the array word itself

I fixed at least one instance of this in the source.
13-Jun-84 20:29:09-EDT,1057;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 13 Jun 84 20:26-EDT
Received: from SCRC-MERRIMACK by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 46793; Mon 11-Jun-84 14:45:07-EDT
Date: Mon, 11 Jun 84 14:43 EDT
From: Mike McMahon <MMcM@SCRC-RIVERSIDE.ARPA>
Subject: Suppose I want to integrate?
To: ALAN@MIT-MC.ARPA, BUG-LISPM@MIT-MC.ARPA
In-reply-to: The message of 7 Jun 84 03:08-EDT from ALAN at MIT-MC
Supersedes: <840607151016.3.MMCM@MERRIMACK.SCRC.Symbolics>
Message-ID: <840611144301.2.MMcM@TENEX.SCRC.Symbolics>

    Date: Thu, 7 Jun 84 03:08 EDT
    From:  <ALAN@MIT-MC.ARPA>

    When I supdup to MC I notice that there is no way to transmit the character
    #\Integral.  That is, when I hold down the Symbol key and strike "/", a
    program on MC reading from a channel with the %TIFUL bit set recieves 177
    octal, exactly what it would recieve if I had just struck the Rubout key.
    I would expect to recieve %TXTOP+177 for that character.  It there a reason
    for this, or is it just an oversight?

Just oversight.
13-Jun-84 20:30:23-EDT,1197;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 13 Jun 84 20:26-EDT
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 46819; Mon 11-Jun-84 15:20:51-EDT
Date: Mon, 11 Jun 84 15:18 EDT
From: "David A. Moon" <Moon@SCRC-RIVERSIDE.ARPA>
Subject: SMTP error: 421 Sorry & dead mail servers on MC
To: "Christopher C. Stacy" <CSTACY@MIT-MC.ARPA>
Cc: ALAN@MIT-MC.ARPA, BUG-LISPM@MIT-MC.ARPA, BUG-MAIL@MIT-MC.ARPA
In-reply-to: The message of 11 Jun 84 01:11-EDT from Christopher C. Stacy <CSTACY at MIT-MC>
Message-ID: <840611151849.5.MOON@EUPHRATES.SCRC.Symbolics>

The real bug is that when I rearranged the initialization code to accomodate
Chaosnet SMTP protocol I forgot to enable interrupts in that case.  Thus the
IOC error that it legitimately gets when the user end closes the connection
was making the server crash instead of dying silently.

By the way, Chris, you assembled the server into MC:DEVICE;CHAOS SMTP,
smashing the link that was there to SYSBIN;FTPS BIN.  All fixed.
By the way, I changed it so AUTPSY will .VALUE even if DEBUG is not on.
This seems right, but if it starts getting obnoxious, put the commented-out
code at AUTPSY back in.
13-Jun-84 20:31:29-EDT,1162;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 13 Jun 84 20:28-EDT
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 47102; Tue 12-Jun-84 00:41:19-EDT
Date: Tue, 12 Jun 84 00:39 EDT
From: "David A. Moon" <Moon@SCRC-RIVERSIDE.ARPA>
Subject: Nasty <<Error Printing Value>> Bug
To: BUG-LISPM@MIT-MC.ARPA
In-reply-to: The message of 8 Jun 84 10:07-EDT from TOMR at MIT-APIARY-6
Supersedes: <840608214509.4.MOON@EUPHRATES.SCRC.Symbolics>
Message-ID: <840612003920.9.MOON@EUPHRATES.SCRC.Symbolics>

    Date: Fri, 8 Jun 84 10:07 EDT
    From:  <TOMR%MIT-APIARY-6@MIT-MC.ARPA>

    In Release 5.0, Experimental MIT 1.4, FEP 18, on Lisp Machine Apiary-5 (3600):

    This is not the first time this sort of error has occurred.  It seems to occur
    randomly....
    >>Error: The object <<Error printing object>> received a :OPERATION-HANDLED-P message, which went unclaimed.
	     The rest of the message was (:UNCLAIMED-MESSAGE)

Does this occur on any machine other than Apiary-5?  If not, you should report it
to hardware maintenance personnel.  I don't see anything in your typescript likely
to be a software bug.
14-Jun-84 06:10:45-EDT,464;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 14 Jun 84 06:10-EDT
Date: Thursday, 14 June 1984, 06:09-EDT
From:  <GAVAN at MIT-OZ>
Subject: load-patches
To: BUG-LISPM at MIT-OZ

In Release 5.0, Experimental MIT 1.4, Experimental RELATUS 113.9, on Lisp Machine Buddy Holly (3600):

The call to fquery in load-patches which asks whether to load (y), not load
(n) or proceed (p) should do a fresh-line, in case the query is happening in
the typein window.
14-Jun-84 11:39:51-EDT,523;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 14 Jun 84 11:38-EDT
Date: Thursday, 14 June 1984, 11:37-EDT
From:  <GAVAN at MIT-OZ>
Subject: connect to namespace when listing buffers?
To: BUG-LISPM at MIT-OZ

In Release 5.0, Experimental MIT 1.4, Experimental RELATUS 113.15, on Lisp Machine Buddy Holly (3600):

Often, but not always, when I do c-x c-b in zmacs, there's an attempt to
connect to the namespace server.  Is this really necessary?  It doesn't happen
when I mouse on list buffers in the zmacs menu.
14-Jun-84 13:31:50-EDT,2320;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 14 Jun 84 13:30-EDT
Received: from SCRC-ASSABET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 48626; Thu 14-Jun-84 13:30:11-EDT
Date: Thursday, 14 June 1984, 13:26-EDT
From: Robert A. Cassels <Cassels at SCRC-TENEX>
Subject: SQRT could be twice as fast without even being clever about it
To: DCP at SCRC-TENEX, sr.ehpyc at MIT-SPEECH, BUG-LISPM at MIT-OZ,
    Numerics at SCRC-TENEX
In-reply-to: The message of 12 Jun 84 22:52-EDT from "(probably) David C. Plummer" <DCP at SCRC-TENEX>
Message-ID: <840614132654.3.CASSELS@ASSABET.SCRC.Symbolics>

    Date: Tuesday, 12 June 1984, 22:52-EDT
    From: "(probably) David C. Plummer" <DCP at SCRC-TENEX>

	Date: Tuesday, 12 June 1984, 14:13-EDT
	From: Scott Cyphers <sr.ehpyc at MIT-SPEECH>

	In Release 5.0, Experimental MIT 1.4, Spire-Macros 1.8, Compute 1.3,
	Attribute 1.6, Audio 1.2, Speech-Attributes 1.0, Display 1.11,
	Speech-Layouts 1.8, Experimental Versatec 2.0, Experimental Prtout 1.1,
	Spire 13.0, SpireX 10.3, LexiS 6.3, FEP 18, on Lisp Machine Grizzly (3600):

	I wanted to see how much faster something simple like SQRT was than LOG and
	EXP, and I came up with this unexpected suprise:

	It takes about 700 to 800 microseconds to do a square root with SQRT.

	It takes about 400 to do one with (exp (// (log x) 2.0)).

	There seems to be very little difference in the two values.  It would seem that
	if Log and Exp can be that fast, there ought to be some algorithm of about the
	same speed for Log.

    This is because of the following comment in SQRT-AUX:
		;;the following addition may well overflow into bignum, temporarily.
		(setq y (%flonum (ash (+ (%fixnum y) (%fixnum z)) -1))))
    Needless to say, it appears to always overflow into a bignum when the
    argument to SQRT is >= to 4.0.  If the Numerics crew can guarentee
    (shouldn't be hard) that (%fixnum y) and (%fixnum z) are both
    non-negative fixnums, then the following code is equivalent and makes
    SQRT take roughly 134 microseconds (for arguments >= 4.0):
		(setq y (%flonum (lsh (%32-bit-plus (%fixnum y) (%fixnum z)) -1))))

Consider it so guaranteed.  (Yow!  That *was* easy.)  I'll patch this
in sometime.  I guess this means that %32-bit-plus is good for something.
14-Jun-84 15:05:22-EDT,1362;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 14 Jun 84 15:04-EDT
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 48692; Thu 14-Jun-84 15:07:06-EDT
Date: Thursday, 14 June 1984, 15:04-EDT
From: David A. Moon <Moon at SCRC-TENEX>
Subject: connect to namespace when listing buffers?
To: GAVAN at MIT-OZ
Cc: BUG-LISPM at MIT-OZ
In-reply-to: The message of 14 Jun 84 11:37-EDT from GAVAN at MIT-OZ
Message-ID: <840614150419.3.MOON@EUPHRATES.SCRC.Symbolics>

    Date: Thursday, 14 June 1984, 11:37-EDT
    From:  <GAVAN at MIT-OZ>

    In Release 5.0, Experimental MIT 1.4, Experimental RELATUS 113.15, on Lisp Machine Buddy Holly (3600):

    Often, but not always, when I do c-x c-b in zmacs, there's an attempt to
    connect to the namespace server.  Is this really necessary?  It doesn't happen
    when I mouse on list buffers in the zmacs menu.

Probably you use the Zmacs c-X M command to send mail.  The *mail-n* buffers
list the names of the recipients in the c-X c-B listing, which requires parsing
the header.  Sometimes this requires communicating with a namespace server to
get the hosts.  I don't think it has anything to do with List Buffers from the
mouse menu, you are just being faked out because it doesn't always happen, only
when you have a mail-buffer that needs to be parsed.
14-Jun-84 18:07:46-EDT,1314;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 14 Jun 84 18:07-EDT
Received: from SCRC-PEACE by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 48846; Thu 14-Jun-84 18:10:35-EDT
Date: Thursday, 14 June 1984, 18:07-EDT
From: Charles Hornig <Hornig at SCRC-STONY-BROOK>
Subject: Error sending mail
To: Scott Cyphers <sr.ehpyc at MIT-SPEECH>, BUG-LISPM at MIT-OZ
In-reply-to: The message of 31 May 84 13:31-EDT from Scott Cyphers <sr.ehpyc at MIT-SPEECH>
Message-ID: <840614180717.5.HORNIG@PEACE.SCRC.Symbolics>

    Date: Thursday, 31 May 1984, 13:31-EDT
    From: Scott Cyphers <sr.ehpyc at MIT-SPEECH>

    In Release 5.0 [Beta Test rev 7], Spire-Macros 1.8, Compute 1.3,
    Attribute 1.6, Audio 1.2, Speech-Attributes 1.0, Display 1.11,
    Speech-Layouts 1.8, Experimental Versatec 2.0, Experimental Prtout 1.1,
    Spire 13.0, SpireX 10.3, mit GC, on Lisp Machine Yogi (LM-2):

    MC is the first host on the list of places to try to send mail to, and
    resuming from this error just tries MC again and gets the error.

    >>Error: SMTP error: 421 Sorry, big mail backlog!  Try again later.
    While in the function ZWEI:SMTP-CHECK-REPLY  ZWEI:SMTP-MAILER  ZWEI:SMTP-MAIL-INTERNAL

This problem (not being able to step through the alternatives) is fixed
in Zmail 84.158.
14-Jun-84 22:03:55-EDT,474;000000000000
Received: from MIT-EECS by MIT-OZ via Chaosnet; 14 Jun 84 22:03-EDT
Date: Thursday, 14 June 1984, 22:03-EDT
From:  <DJB at MIT-OZ>
Subject: keytops for Release 5.0
To: BUG-LISPM at MIT-OZ

People,

When are we going to get the new keytops for Release 5.0?  I know that Symbolics has
them because at work (GTE Labs) we just installed Rel 5 *with the new keytops*.

In the mean time, what is the function that one runs to set the keyboard up the old
way?

Dave
14-Jun-84 22:28:51-EDT,25712;000000000000
Received: from MIT-EECS by MIT-OZ via Chaosnet; 14 Jun 84 22:28-EDT
Date: Thursday, 14 June 1984, 22:16-EDT
From:  <PHILIP at MIT-OZ>
Subject: <Ctrl><shift>D bug with FORMAT
To: BUG-LISPM at MIT-OZ

In Release 5.0, Experimental MIT 1.4, on Lisp Machine Bing Crosby (3600):

While doing "(format t <control><shift>D", FORMAT dies
typing out the documentation.



>>Error: Undefined FORMAT command.
                                                               
           ...The control string is copied to the stream, but ~ indicates special formatting commands:
         ~D  ~mincol,padchar,commacharD   Print number as a decimal integer.
             ~:D  Print the comma character every three digits.
             ~@D  Always print the sign.   ~:@D  Both.
         ~O  Analogous to ~D, but prints in octal.
         ~F  ~F  Print a floating point number.   ~nF  Round it to n digits.
         ~E  ~E  Print a floating-point number in exponential notation.   ~nE  Round to n digits.
         ~$  ~w,x,y,z prints a floating-point number with exactly w (default 2) digits to right of
              decimal, at least x (default 1) to left of decimal, right-justified in field y wide
              padded with z.  @ print + sign.  : sign to left of padding.
         ~R  ~R  Print number as an English cardinal number.
             ~:R  English ordinal number.   ~@R  Roman numeral.   ~:@R  Old Roman numeral.
             ~nR  Print number in radix n.  Thus ~8R = ~O, and ~10R = ~D.
             Extra parameters are as for ~D (~n,mincol,padchar,commacharR).
         ~A  Ascii output (PRINC).  Good for printing strings.  ~mincol,colinc,minpad,padcharA.
             ~@A  Right-justify the string.   ~:A  Make NIL print as ().  ~:@A  Both.
         ~S  Analogous to ~A, but uses PRIN1, not PRINC.
         ~C  Print a character.  Mouse characters print in standard format.
             ~C  Code, preceded by c-, m-, etc. if control bits are present.
             ~:C  Format effectors print as names.  Names of control bits ("Control-") precede.
             ~@C  Prints the character in READ format, using #/ or #\.
             ~:@C  Like ~:C, but topfrontgreek characters are followed by remark, e.g. " (Top-S)".
         ~*  Ignore an argument.   ~n*  Ignore n arguments.   ~:n*  Back up n arguments (default 1).
             ~n@* Go to argument n (default zero: first argument).  Operates relative to ~{...~} lists.
         ~%  Insert a newline.     ~n%  Insert n newlines.
         ~X  Insert a space.  (use ~n@T instead, as ~X will eventually mean hexadecimal output).
         ~~  Insert a tilde.       ~n~  Insert n tildes.
         ~|  Insert a form.        ~n|  Insert n forms.
             ~:|  Do :CLEAR-SCREEN if the stream supports it, otherwise insert a form.   ~:n|  Similar.
         ~<cr>  Ignore a CR and following whitespace in the control string.
             ~:<cr> Ignore the CR, retain the whitespace.  ~@<cr> Retain the CR, ignore the whitespace.
         ~&  Do a :FRESH-LINE.     ~n&  Do a FRESH-LINE, then insert n-1 newlines.
         ~^  Terminate processing if no more arguments.  Within ~{...~}, just terminate the loop.
             ~n;  Terminate if n is zero.  ~n,m;  Terminate if n=m.  ~n,m,p;  Terminate if nmp.
             ~:^  When within ~:{...~}, ~^ terminates this iteration.  Use ~:^ to exit the loop.
         ~T  ~mincol,colincT  Tab to column mincol+p*colinc, for the smallest integer p possible.
             ~mincol,colinc:T  Same, but tabs in TV pixels rather than characters.
             ~n@T  Output n spaces (n defaults to 1).
         ~Q  Apply next argument to no arguments.  ~a,b,c,...,zQ  Apply next argument to parameters
             a,b,c,...z.  In (Q ...) form, apply argument to unevaled parameters.
         ~P  Pluralize.  Insert "s", unless argument is 1.
             ~:P  Use previous argument, not next one (i.e. do ~:* first).
             ~@P  Insert "y" if argument is 1, otherwise insert "ies".   ~:@P  Both.
         ~G  Goto.  ~nG goes to the nth argument (0-origin).  Operates relative to ~{...~} lists.
             Use ~n@* instead, as ~G will eventually be replaced by a floating-point formatter.
         ~<  ~mincol,colinc,minpad,padchar<str0~;str1~;...~;strn~>  Do formatting for all formatting
             strings strj; then output all strings with padding between them at the ~; points.
             Each padding point must have at least minpad padding characters.  Subject to that,
             the total width must be at least mincol, and must be mincol+p*colinc for some p.
             If str0 is followed by ~:; instead of ~;, then str0 is not normally output, and the
             ~:; is not a padding point.  Instead, after the total width has been determined,
             if the text will not fit into the current line of output, then str0 is output before
             outputting the rest.  (Doesn't work when producing a string.)  An argument n (~:n;)
             means that the text plus n more columns must fit to avoid outputting str0.  A second
             argument m (~n,m:;) provides the line width to use instead of the stream's width.
             ~:<  Also have a padding point at the left.  Hence ~n:<x~> right-justifies x in n columns.
             ~@<  Also have a padding point at the right.   ~:@<  Both.   Hence ~n:@<x~> centers x.
         ~[  ~[str0~;str1~;...~;strn~]  Cases.  Argument selects one case to do.  If argument is not
             between 0 and n inclusive, then no alternative is performed.  If a parameter is given,
             then use the parameter instead of an argument.  (The only useful one is "#".)
             If the last string is preceded by ~:;, it is an "else" clause, and is processed if
             no other string is selected.
             One can also tag the cases explicitly by giving arguments to ~;.  In this case the
             first string must be null, and arguments to ~; tag the following string.  The
             argument is matched against the list of parameters for each ~;.  One can get ranges
             of tags by using ~:;.  Pairs of parameters serve as inclusive range limits.
             A ~:; with no parameters is still an "else" case.
             Example:  ~[~'+,'-,'*,'//;operator~:'A,'Z,'a,'z;letter~:'0,'9;digit~:;other~]
             will produce "operator", "letter", "digit", or "other" as appropriate.
             ~:[iffalse~;iftrue~]  The argument selects the first case if nil, the second if non-nil.
             ~@[str~]  If the argument is non-nil, then it is not swallowed, and str is processed.
             Otherwise, the nil is swallowed and str is ignored.  Thus ~@[~S~] will PRIN1 a
             non-null thing.
         ~{  ~{str~}  Use str as a format string for each element in the argument.  More generally,
             the argument is a list of things to be used as successive arguments, and str is used
             repeatedly as a format string until the arguments are exhausted (or ~^ is used).
             Within the iteration the commands ~* and ~G move among the iteration arguments,
             not among all the arguments given to FORMAT.
             ~n{str~} repeats the string at most n times.
             Terminating with ~:} forces str to be processed at least once.
             ~:{str}  The argument is a list of lists, and each repetition sees one sublist.
             ~@{str}  All remaining arguments are used as the list.
             ~:@{str}  Each remaining argument is a list.
             If the str within a ~{ is empty, then an argument (which must be a string) is used.
             This argument precedes any that are iterated over as loop arguments.
         In place of a numeric parameter, one may use V, which uses an argument to supply the number;
         or one may use #, which represents the number of arguments remaining to be processed;
         or one may use 'x, which uses the ascii value of x (good for pad characters).
         The control string may actually be a list of intermixed strings and sublists.
         In that case, the strings are printed literally.  The first atom in a sublist should be
         the name of a command, and remaining elements are parameters."
While in the function FORMAT:FORMAT-CTL-OP  FORMAT:FORMAT-CTL-STRING  FORMAT

FORMAT:FORMAT-CTL-OP:  (P.C. = 6)
   Arg 0 (OP): NIL
   Arg 1 (ARGS): NIL
   Arg 2 (PARAMS): NIL
   Local 3 (TEM): NIL

FORMAT:FORMAT-CTL-STRING:  (P.C. = 74)
   Arg 0 (ARGS): NIL
   Arg 1 (CTL-STRING-initialization): "Format arguments according to a control string and print to a stream.  (If the stream
is T, STANDARD-OUTPUT is used; if NIL, a string is returned containing the formatted text.)
The control string is copied to the stream, but ~ indicates special formatting commands:
~D  ~mincol,padchar,commacharD   Print number as a decimal integer.
    ~:D  Print the comma character every three digits.
    ~@D  Always print the sign.   ~:@D  Both.
~O  Analogous to ~D, but prints in octal.
~F  ~F  Print a floating point number.   ~nF  Round it to n digits.
~E  ~E  Print a floating-point number in exponential notation.   ~nE  Round to n digits.
~$  ~w,x,y,z prints a floating-point number with exactly w (default 2) digits to right of
     decimal, at least x (default 1) to left of decimal, right-justified in field y wide
     padded with z.  @ print + sign.  : sign to left of padding.
~R  ~R  Print number as an English cardinal number.
    ~:R  English ordinal number.   ~@R  Roman numeral.   ~:@R  Old Roman numeral.
    ~nR  Print number in radix n.  Thus ~8R = ~O, and ~10R = ~D.
    Extra parameters are as for ~D (~n,mincol,padchar,commacharR).
~A  Ascii output (PRINC).  Good for printing strings.  ~mincol,colinc,minpad,padcharA.
    ~@A  Right-justify the string.   ~:A  Make NIL print as ().  ~:@A  Both.
~S  Analogous to ~A, but uses PRIN1, not PRINC.
~C  Print a character.  Mouse characters print in standard format.
    ~C  Code, preceded by c-, m-, etc. if control bits are present.
    ~:C  Format effectors print as names.  Names of control bits (/"Control-/") precede.
    ~@C  Prints the character in READ format, using #// or #\.
    ~:@C  Like ~:C, but topfrontgreek characters are followed by remark, e.g. /" (Top-S)/".
~*  Ignore an argument.   ~n*  Ignore n arguments.   ~:n*  Back up n arguments (default 1).
    ~n@* Go to argument n (default zero: first argument).  Operates relative to ~{...~} lists.
~%  Insert a newline.     ~n%  Insert n newlines.
~X  Insert a space.  (use ~n@T instead, as ~X will eventually mean hexadecimal output).
~~  Insert a tilde.       ~n~  Insert n tildes.
~|  Insert a form.        ~n|  Insert n forms.
    ~:|  Do :CLEAR-SCREEN if the stream supports it, otherwise insert a form.   ~:n|  Similar.
~<cr>  Ignore a CR and following whitespace in the control string.
    ~:<cr> Ignore the CR, retain the whitespace.  ~@<cr> Retain the CR, ignore the whitespace.
~&  Do a :FRESH-LINE.     ~n&  Do a FRESH-LINE, then insert n-1 newlines.
~^  Terminate processing if no more arguments.  Within ~{...~}, just terminate the loop.
    ~n;  Terminate if n is zero.  ~n,m;  Terminate if n=m.  ~n,m,p;  Terminate if nmp.
    ~:^  When within ~:{...~}, ~^ terminates this iteration.  Use ~:^ to exit the loop.
~T  ~mincol,colincT  Tab to column mincol+p*colinc, for the smallest integer p possible.
    ~mincol,colinc:T  Same, but tabs in TV pixels rather than characters.
    ~n@T  Output n spaces (n defaults to 1).
~Q  Apply next argument to no arguments.  ~a,b,c,...,zQ  Apply next argument to parameters
    a,b,c,...z.  In (Q ...) form, apply argument to unevaled parameters.
~P  Pluralize.  Insert /"s/", unless argument is 1.
    ~:P  Use previous argument, not next one (i.e. do ~:* first).
    ~@P  Insert /"y/" if argument is 1, otherwise insert /"ies/".   ~:@P  Both.
~G  Goto.  ~nG goes to the nth argument (0-origin).  Operates relative to ~{...~} lists.
    Use ~n@* instead, as ~G will eventually be replaced by a floating-point formatter.
~<  ~mincol,colinc,minpad,padchar<str0~;str1~;...~;strn~>  Do formatting for all formatting
    strings strj; then output all strings with padding between them at the ~; points.
    Each padding point must have at least minpad padding characters.  Subject to that,
    the total width must be at least mincol, and must be mincol+p*colinc for some p.
    If str0 is followed by ~:; instead of ~;, then str0 is not normally output, and the
    ~:; is not a padding point.  Instead, after the total width has been determined,
    if the text will not fit into the current line of output, then str0 is output before
    outputting the rest.  (Doesn't work when producing a string.)  An argument n (~:n;)
    means that the text plus n more columns must fit to avoid outputting str0.  A second
    argument m (~n,m:;) provides the line width to use instead of the stream's width.
    ~:<  Also have a padding point at the left.  Hence ~n:<x~> right-justifies x in n columns.
    ~@<  Also have a padding point at the right.   ~:@<  Both.   Hence ~n:@<x~> centers x.
~[  ~[str0~;str1~;...~;strn~]  Cases.  Argument selects one case to do.  If argument is not
    between 0 and n inclusive, then no alternative is performed.  If a parameter is given,
    then use the parameter instead of an argument.  (The only useful one is /"#/".)
    If the last string is preceded by ~:;, it is an /"else/" clause, and is processed if
    no other string is selected.
    One can also tag the cases explicitly by giving arguments to ~;.  In this case the
    first string must be null, and arguments to ~; tag the following string.  The
    argument is matched against the list of parameters for each ~;.  One can get ranges
    of tags by using ~:;.  Pairs of parameters serve as inclusive range limits.
    A ~:; with no parameters is still an /"else/" case.
    Example:  ~[~'+,'-,'*,'////;operator~:'A,'Z,'a,'z;letter~:'0,'9;digit~:;other~]
    will produce /"operator/", /"letter/", /"digit/", or /"other/" as appropriate.
    ~:[iffalse~;iftrue~]  The argument selects the first case if nil, the second if non-nil.
    ~@[str~]  If the argument is non-nil, then it is not swallowed, and str is processed.
    Otherwise, the nil is swallowed and str is ignored.  Thus ~@[~S~] will PRIN1 a
    non-null thing.
~{  ~{str~}  Use str as a format string for each element in the argument.  More generally,
    the argument is a list of things to be used as successive arguments, and str is used
    repeatedly as a format string until the arguments are exhausted (or ~^ is used).
    Within the iteration the commands ~* and ~G move among the iteration arguments,
    not among all the arguments given to FORMAT.
    ~n{str~} repeats the string at most n times.
    Terminating with ~:} forces str to be processed at least once.
    ~:{str}  The argument is a list of lists, and each repetition sees one sublist.
    ~@{str}  All remaining arguments are used as the list.
    ~:@{str}  Each remaining argument is a list.
    If the str within a ~{ is empty, then an argument (which must be a string) is used.
    This argument precedes any that are iterated over as loop arguments.
In place of a numeric parameter, one may use V, which uses an argument to supply the number;
or one may use #, which represents the number of arguments remaining to be processed;
or one may use 'x, which uses the ascii value of x (good for pad characters).
The control string may actually be a list of intermixed strings and sublists.
In that case, the strings are printed literally.  The first atom in a sublist should be
the name of a command, and remaining elements are parameters."

FORMAT:  (P.C. = 70)
   Arg 0 (STREAM): #<LISP-LISTENER Lisp Listener 1 4140000 exposed>
   Arg 1 (CTL-STRING-initialization): "Format arguments according to a control string and print to a stream.  (If the stream
is T, STANDARD-OUTPUT is used; if NIL, a string is returned containing the formatted text.)
The control string is copied to the stream, but ~ indicates special formatting commands:
~D  ~mincol,padchar,commacharD   Print number as a decimal integer.
    ~:D  Print the comma character every three digits.
    ~@D  Always print the sign.   ~:@D  Both.
~O  Analogous to ~D, but prints in octal.
~F  ~F  Print a floating point number.   ~nF  Round it to n digits.
~E  ~E  Print a floating-point number in exponential notation.   ~nE  Round to n digits.
~$  ~w,x,y,z prints a floating-point number with exactly w (default 2) digits to right of
     decimal, at least x (default 1) to left of decimal, right-justified in field y wide
     padded with z.  @ print + sign.  : sign to left of padding.
~R  ~R  Print number as an English cardinal number.
    ~:R  English ordinal number.   ~@R  Roman numeral.   ~:@R  Old Roman numeral.
    ~nR  Print number in radix n.  Thus ~8R = ~O, and ~10R = ~D.
    Extra parameters are as for ~D (~n,mincol,padchar,commacharR).
~A  Ascii output (PRINC).  Good for printing strings.  ~mincol,colinc,minpad,padcharA.
    ~@A  Right-justify the string.   ~:A  Make NIL print as ().  ~:@A  Both.
~S  Analogous to ~A, but uses PRIN1, not PRINC.
~C  Print a character.  Mouse characters print in standard format.
    ~C  Code, preceded by c-, m-, etc. if control bits are present.
    ~:C  Format effectors print as names.  Names of control bits (/"Control-/") precede.
    ~@C  Prints the character in READ format, using #// or #\.
    ~:@C  Like ~:C, but topfrontgreek characters are followed by remark, e.g. /" (Top-S)/".
~*  Ignore an argument.   ~n*  Ignore n arguments.   ~:n*  Back up n arguments (default 1).
    ~n@* Go to argument n (default zero: first argument).  Operates relative to ~{...~} lists.
~%  Insert a newline.     ~n%  Insert n newlines.
~X  Insert a space.  (use ~n@T instead, as ~X will eventually mean hexadecimal output).
~~  Insert a tilde.       ~n~  Insert n tildes.
~|  Insert a form.        ~n|  Insert n forms.
    ~:|  Do :CLEAR-SCREEN if the stream supports it, otherwise insert a form.   ~:n|  Similar.
~<cr>  Ignore a CR and following whitespace in the control string.
    ~:<cr> Ignore the CR, retain the whitespace.  ~@<cr> Retain the CR, ignore the whitespace.
~&  Do a :FRESH-LINE.     ~n&  Do a FRESH-LINE, then insert n-1 newlines.
~^  Terminate processing if no more arguments.  Within ~{...~}, just terminate the loop.
    ~n;  Terminate if n is zero.  ~n,m;  Terminate if n=m.  ~n,m,p;  Terminate if nmp.
    ~:^  When within ~:{...~}, ~^ terminates this iteration.  Use ~:^ to exit the loop.
~T  ~mincol,colincT  Tab to column mincol+p*colinc, for the smallest integer p possible.
    ~mincol,colinc:T  Same, but tabs in TV pixels rather than characters.
    ~n@T  Output n spaces (n defaults to 1).
~Q  Apply next argument to no arguments.  ~a,b,c,...,zQ  Apply next argument to parameters
    a,b,c,...z.  In (Q ...) form, apply argument to unevaled parameters.
~P  Pluralize.  Insert /"s/", unless argument is 1.
    ~:P  Use previous argument, not next one (i.e. do ~:* first).
    ~@P  Insert /"y/" if argument is 1, otherwise insert /"ies/".   ~:@P  Both.
~G  Goto.  ~nG goes to the nth argument (0-origin).  Operates relative to ~{...~} lists.
    Use ~n@* instead, as ~G will eventually be replaced by a floating-point formatter.
~<  ~mincol,colinc,minpad,padchar<str0~;str1~;...~;strn~>  Do formatting for all formatting
    strings strj; then output all strings with padding between them at the ~; points.
    Each padding point must have at least minpad padding characters.  Subject to that,
    the total width must be at least mincol, and must be mincol+p*colinc for some p.
    If str0 is followed by ~:; instead of ~;, then str0 is not normally output, and the
    ~:; is not a padding point.  Instead, after the total width has been determined,
    if the text will not fit into the current line of output, then str0 is output before
    outputting the rest.  (Doesn't work when producing a string.)  An argument n (~:n;)
    means that the text plus n more columns must fit to avoid outputting str0.  A second
    argument m (~n,m:;) provides the line width to use instead of the stream's width.
    ~:<  Also have a padding point at the left.  Hence ~n:<x~> right-justifies x in n columns.
    ~@<  Also have a padding point at the right.   ~:@<  Both.   Hence ~n:@<x~> centers x.
~[  ~[str0~;str1~;...~;strn~]  Cases.  Argument selects one case to do.  If argument is not
    between 0 and n inclusive, then no alternative is performed.  If a parameter is given,
    then use the parameter instead of an argument.  (The only useful one is /"#/".)
    If the last string is preceded by ~:;, it is an /"else/" clause, and is processed if
    no other string is selected.
    One can also tag the cases explicitly by giving arguments to ~;.  In this case the
    first string must be null, and arguments to ~; tag the following string.  The
    argument is matched against the list of parameters for each ~;.  One can get ranges
    of tags by using ~:;.  Pairs of parameters serve as inclusive range limits.
    A ~:; with no parameters is still an /"else/" case.
    Example:  ~[~'+,'-,'*,'////;operator~:'A,'Z,'a,'z;letter~:'0,'9;digit~:;other~]
    will produce /"operator/", /"letter/", /"digit/", or /"other/" as appropriate.
    ~:[iffalse~;iftrue~]  The argument selects the first case if nil, the second if non-nil.
    ~@[str~]  If the argument is non-nil, then it is not swallowed, and str is processed.
    Otherwise, the nil is swallowed and str is ignored.  Thus ~@[~S~] will PRIN1 a
    non-null thing.
~{  ~{str~}  Use str as a format string for each element in the argument.  More generally,
    the argument is a list of things to be used as successive arguments, and str is used
    repeatedly as a format string until the arguments are exhausted (or ~^ is used).
    Within the iteration the commands ~* and ~G move among the iteration arguments,
    not among all the arguments given to FORMAT.
    ~n{str~} repeats the string at most n times.
    Terminating with ~:} forces str to be processed at least once.
    ~:{str}  The argument is a list of lists, and each repetition sees one sublist.
    ~@{str}  All remaining arguments are used as the list.
    ~:@{str}  Each remaining argument is a list.
    If the str within a ~{ is empty, then an argument (which must be a string) is used.
    This argument precedes any that are iterated over as loop arguments.
In place of a numeric parameter, one may use V, which uses an argument to supply the number;
or one may use #, which represents the number of arguments remaining to be processed;
or one may use 'x, which uses the ascii value of x (good for pad characters).
The control string may actually be a list of intermixed strings and sublists.
In that case, the strings are printed literally.  The first atom in a sublist should be
the name of a command, and remaining elements are parameters."
   Rest arg (ARGS): NIL

(:INTERNAL (:INTERNAL (:DEFUN-METHOD COM-DESCRIBE-FUNCTION) 0) 0):  (P.C. = 23)
   Arg 0 (SELF): #<LISP-LISTENER Lisp Listener 1 4140000 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:STREAM-MIXIN -- 14. IV's, 0. FL's 35613466>
   Arg 2 (IGNORE): 207
   Arg 3 (IGNORE): 64
   Arg 4 (SYMBOL): FORMAT

(:INTERNAL (:DEFUN-METHOD COM-DESCRIBE-FUNCTION) 0):  (P.C. = 12)
   Rest arg (ARGS): (207 64 FORMAT)

(:DEFUN-METHOD TV:RH-DISPLAY-INFO-WITH-FONTS-INTERNAL):  (P.C. = 65)
   Arg 0 (SELF): #<LISP-LISTENER Lisp Listener 1 4140000 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:STREAM-MIXIN -- 14. IV's, 0. FL's 35613466>
   Arg 2 (NUMERIC-ARG-P): 1
   Arg 3 (SWITCH-FONT-MAP): T
   Arg 4 (PRINTER): #<DTP-COMPILED-FUNCTION (:INTERNAL (:DEFUN-METHOD COM-DESCRIBE-FUNCTION) 0) 7306736>
   Rest arg (PRINTER-ARGS): (FORMAT)

TV:RH-DISPLAY-INFO-WITH-FONTS-INTERNAL:  (P.C. = 12)
   Rest arg (ARGS): (1 T #<DTP-COMPILED-FUNCTION (:INTERNAL (:DEFUN-METHOD COM-DESCRIBE-FUNCTION) 0) 7306736> FORMAT)

(:DEFUN-METHOD TV:RH-DISPLAY-INFO-INTERNAL):  (P.C. = 10)
   Arg 0 (SELF): #<LISP-LISTENER Lisp Listener 1 4140000 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:STREAM-MIXIN -- 14. IV's, 0. FL's 35613466>
   Arg 2 (NUMERIC-ARG-P): 1
   Arg 3 (PRINTER): #<DTP-COMPILED-FUNCTION (:INTERNAL (:DEFUN-METHOD COM-DESCRIBE-FUNCTION) 0) 7306736>
   Rest arg (PRINTER-ARGS): (FORMAT)

Rest of stack:
(:DEFUN-METHOD COM-DESCRIBE-FUNCTION):  (P.C. = 66)  (from OZ:VISION:<PHILIP.SRC>LISPM)
COM-DESCRIBE-FUNCTION:  (P.C. = 12)  (from OZ:VISION:<PHILIP.SRC>LISPM)
(:DEFUN-METHOD TV:ALTERNATE-RUBOUT-HANDLER-TYI):  (P.C. = 240)
TV:ALTERNATE-RUBOUT-HANDLER-TYI:  (P.C. = 12)
TV:RUBOUT-HANDLER-INVOKE:  (P.C. = 11)
(:METHOD TV:STREAM-MIXIN :ANY-TYI):  (P.C. = 43)
(:DEFUN-METHOD TV:TYI-INTERNAL):  (P.C. = 5)
(:METHOD TV:STREAM-MIXIN :TYI):  (P.C. = 7)
SI:XR-XRTYI:  (P.C. = 5)
SI:XR-READ-THING:  (P.C. = 163)
(:PROPERTY LIST SI:STANDARD-READ-FUNCTION):  (P.C. = 50)
SI:XR-READ-THING:  (P.C. = 60)
(:INTERNAL SI:READ-INTERNAL 0):  (P.C. = 15)
(:DEFUN-METHOD TV:RUBOUT-HANDLER-READ):  (P.C. = 61)
(:METHOD TV:STREAM-MIXIN :RUBOUT-HANDLER):  (P.C. = 72)
SI:READ-INTERNAL:  (P.C. = 46)
READ-FOR-TOP-LEVEL:  (P.C. = 6)
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 142)
SI:LISP-COMMAND-LOOP:  (P.C. = 115)
SI:LISP-TOP-LEVEL1:  (P.C. = 22)
SI:LISP-TOP-LEVEL:  (P.C. = 7)
15-Jun-84 00:36:44-EDT,882;000000000000
Received: from MIT-LISPM-2 by MIT-OZ via Chaosnet; 15 Jun 84 00:36-EDT
Date: Friday, 15 June 1984, 00:37-EDT
From: Eugene Ciccarelli <ECC at MIT-OZ>
Subject: QSEND
To: BUG-LISPM at MIT-OZ

In ZWEI in System 98.60, CADR 3.7, ZMail 53.17, MIT-Specific 22.1,
microcode 309, gc@36, on Lisp Machine Two:

QSEND (and Converse) gives no indication of a refusal to accept
at the other end.  E.g., if FOO@OZ has @REFUSE SYSTEM-MESSAGES
set, then sending to FOO returns just as if it got to FOO.  But,
actually, FOO never sees the message.

Is this just some limitation of the SEND (or whatever) server? --
that you can only find out whether it got to the host, not
whether it got to the user?

Also, the following line in the documentation seems to be misphrased:

(documentation 'qsend)
...
If WAIT-P is NIL, then queue up to message to be soon, but return NIL.
...
15-Jun-84 00:54:44-EDT,1742;000000000000
Mail-From: GAVAN created at 15-Jun-84 00:54:13
Date: Fri, 15 Jun 1984  00:54 EDT
Message-ID: <GAVAN.12023550258.BABYL@MIT-OZ>
From: GAVAN@MIT-OZ
To:   "David A. Moon" <Moon@SCRC-TENEX>
Cc:   BUG-LISPM@MIT-OZ
Subject: connect to namespace when listing buffers?
In-reply-to: Msg of 14 Jun 1984 15:04-EDT from David A. Moon <Moon at SCRC-TENEX>

    Date: Thursday, 14 June 1984, 15:04-EDT
    From: David A. Moon <Moon at SCRC-TENEX>

        Date: Thursday, 14 June 1984, 11:37-EDT
        From:  <GAVAN at MIT-OZ>

        In Release 5.0, Experimental MIT 1.4, Experimental RELATUS
        113.15, on Lisp Machine Buddy Holly (3600):

        Often, but not always, when I do c-x c-b in zmacs, there's an
        attempt to connect to the namespace server.  Is this really
        necessary?  It doesn't happen when I mouse on list buffers in
        the zmacs menu.

    Probably you use the Zmacs c-X M command to send mail.  
    
Actually, m-x Mail.

    The *mail-n* buffers list the names of the recipients in the c-X c-B
    listing, which requires parsing the header.  Sometimes this
    requires communicating with a namespace server to get the hosts.
    I don't think it has anything to do with List Buffers from the
    mouse menu, you are just being faked out because it doesn't always
    happen, only when you have a mail-buffer that needs to be parsed.

Well, I don't see why c-x c-b should have to do this while list
buffers from the mouse menu doesn't (maybe the latter doesn't show
recipients, or maybe there's some more obscure reason).  Anyway, it's
a real pain.  Is there any way to turn it off?  I'd rather not know
who the mail recipients are than wait for the namespace server.
15-Jun-84 01:04:03-EDT,1204;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 15 Jun 84 01:03-EDT
Received: from SCRC-STILLWATER by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 49014; Fri 15-Jun-84 01:07:12-EDT
Date: Friday, 15 June 1984, 01:05-EDT
From: Philip Greenspun <philg at SCRC-STONY-BROOK>
Subject: keytops for Release 5.0
To: DJB at MIT-OZ
Cc: bug-lispm at MIT-OZ
In-reply-to: The message of 14 Jun 84 22:03-EDT from DJB at MIT-OZ
Message-ID: <840615010511.8.PHILG@STILLWATER.SCRC.Symbolics>

    Date: Thursday, 14 June 1984, 22:03-EDT
    From:  <DJB at MIT-OZ>

    People,

    When are we going to get the new keytops for Release 5.0?  I know that Symbolics has
    them because at work (GTE Labs) we just installed Rel 5 *with the new keytops*.

    In the mean time, what is the function that one runs to set the keyboard up the old
    way?

I don't know when you will receive your new keytops (I'm waiting for
them too if that's any consolation).  Until then, you can say
"(si:set-keyboard-layout nil)" to tell the system you are using the
"old" keytops.  If you call this function without any argument, it will
query you.  Sorry we didn't get you the keytops in time.

Philip
15-Jun-84 05:17:39-EDT,4429;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 15 Jun 84 05:17-EDT
Date: Friday, 15 June 1984, 05:17-EDT
From:  <GAVAN at MIT-OZ>
Subject: FASD-FORM
To: bug-lispm at MIT-OZ

;;I would like to dump a lot of structure which includes many different flavors,
;;so I wrote a fasd-mixin that would presumably to the job.  Well, it almost does it.
;;Here it is, essentially.  

(DEFMACRO VARS-OF (OBJECT)
  "Gets the instance variables of an OBJECT."
  `(SI:FLAVOR-ALL-INSTANCE-VARIABLES (SI:%INSTANCE-FLAVOR ,OBJECT)))

(DEFFLAVOR FASD-MIXIN () ())

(DEFMETHOD (FASD-MIXIN :FASD-FORM) ()
  "Generic FASD-FORM message for any object which inherits the FASD-MIXIN."
  `(LOOP WITH INSTANCE = (MAKE-INSTANCE ',(TYPEP SELF))
	 FOR INSTANCE-VAR IN ',(VARS-OF SELF)	;my instance vars
	 FOR VALUE IN ',(SEND SELF :INSTANCE-VAR-VALUES)	;their values
	 DO (SET-IN-INSTANCE INSTANCE INSTANCE-VAR VALUE)
	 FINALLY (RETURN INSTANCE)))

(DEFMETHOD (FASD-MIXIN :INSTANCE-VAR-VALUES) ()
  (LOOP WITH RESULT
	FOR ITEM IN (VARS-OF SELF)
	DO (PUSH (SYMEVAL-IN-INSTANCE SELF ITEM) RESULT)
	FINALLY (RETURN (NREVERSE RESULT))))

;;Here's the screw.  On loading a dumped structure using objects with the
;;fasd-mixin, some of the objects (never the top-level one) can acquire
;;exceedingly random instance variables.  In particular, they acquire strings of
;;symbols I had used previously!!!
;;
;;I have to do the SET-IN-INSTANCE and the SYMEVAL-IN-INSTANCE because the
;;particular instance variable may not be gettable or settable.  I don't think
;;these cause the problem but I could be wrong.  Does anyone out there know what
;;I'm doing wrong, or is this a bug?
;;
;;Here's a test case.  A dribbled walk through the loaded structure follows.

(DEFFLAVOR TEST
	((TEST1 NIL)
	 (TEST2 NIL))
	(FASD-MIXIN)
  :SETTABLE-INSTANCE-VARIABLES
  :GETTABLE-INSTANCE-VARIABLES)

(DEFFLAVOR TEST1
	((TEST NIL)
	 (TEST2 NIL))
	(FASD-MIXIN)
  :GETTABLE-INSTANCE-VARIABLES
  :SETTABLE-INSTANCE-VARIABLES)

(DEFFLAVOR TEST2
	((TEST NIL)
	 (TEST1 NIL))
	(FASD-MIXIN)
  :GETTABLE-INSTANCE-VARIABLES
  :SETTABLE-INSTANCE-VARIABLES)

(DEFUN TEST ()
  (LET ((TEST (MAKE-INSTANCE 'TEST))
	(TEST1 (MAKE-INSTANCE 'TEST1))
	(TEST2 (MAKE-INSTANCE 'TEST2)))
    (SEND TEST :SET-TEST1 TEST1)
    (SEND TEST :SET-TEST2 TEST2)
    (SEND TEST1 :SET-TEST TEST)
    (SEND TEST1 :SET-TEST2 TEST2)
    (SEND TEST2 :SET-TEST TEST)
    (SEND TEST2 :SET-TEST1 TEST1)
    TEST))

;;OK.  Here's a dribble of the session with all this stuff loaded.
<= point to the random instance variable values.

(setq test (test))
#<TEST 45440720>
(compiler:dump-forms-to-file "oz:ps:<gavan>test" `((setq test ',test)))
#<TOPS20-PATHNAME "OZ:PS:<GAVAN>TEST.BIN.1">
(setq old-test test test nil)
NIL
(load "oz :ps:<gavan>test")
Loading OZ:PS:<GAVAN>TEST.BIN into package USER
#<TOPS20-PATHNAME "OZ:PS:<GAVAN>TEST.BIN">
NIL
test 
#<TEST 45442021>
(describe *)
#<TEST 45442021>, an object of flavor TEST,
 has instance variable values:
 TEST1:                    #<TEST1 45441776>
 TEST2:                    #<TEST2 45441753>
#<TEST 45442021>
(send * :test1)
#<TEST1 45441776>
(describe *)
#<TEST1 45441776>, an object of flavor TEST1,
 has instance variable values:
 TEST:                     "ZING"		<=
 TEST2:                    #<TEST2 45441753>
#<TEST1 45441776>
(send * :test2)
#<TEST2 45441753>
(describe *)
#<TEST2 45441753>, an object of flavor TEST2,
 has instance variable values:
 TEST:                     "ZING"		<=
 TEST1:                    RELATUS:INSTANCE-VAR	<=
#<TEST2 45441753>

;;Here's what a walk of the pre-dump structure looks like.

old-test 
#<TEST 45440720>
(describe *)
#<TEST 45440720>, an object of flavor TEST,
 has instance variable values:
 TEST1:                    #<TEST1 45440723>
 TEST2:                    #<TEST2 45440726>
#<TEST 45440720>
(send * :test1)
#<TEST1 45440723>
(describe *)
#<TEST1 45440723>, an object of flavor TEST1,
 has instance variable values:
 TEST:                     #<TEST 45440720>
 TEST2:                    #<TEST2 45440726>
#<TEST1 45440723>
(send * :test2)
#<TEST2 45440726>
(describe *)
#<TEST2 45440726>, an object of flavor TEST2,
 has instance variable values:
 TEST:                     #<TEST 45440720>
 TEST1:                    #<TEST1 45440723>
#<TEST2 45440726>
(dribble-end)

;;;???????
15-Jun-84 09:02:10-EDT,2571;000000000000
Received: from MIT-ML by MIT-OZ via Chaosnet; 15 Jun 84 09:01-EDT
Date: Friday, 15 June 1984, 09:01-EDT
From:  <BECKERLE at MIT-XX>
Subject: mail system hammer
To: BUG-LISPM at MIT-OZ

In Release 5.0, Experimental MIT 1.4, FEP 18, Tanglewood Version II, on Project Tanglewood Netleaf Hackberry (3600):

I tried to read my mail from host xx, and my mail.zmail file was read but not
my mail.txt file, This error occured when I tried a get-inbox, to read the
other file. It happens repeatedly, whenever you try to quit, or save or
get-inbox.

>>Error: Preparing to save buffer XX:PS:<BECKERLE>BECKERLE.BABYL,
         but associated inbox XX:PS:<BECKERLE>MAIL.TXT.1 is not awaiting save.
         Buffer status = :saving-required, inbox status = :loading-new-mail.
While in the function zwei:mail-buffer-save-setup  zwei:save-buffer-internal  zwei:save-mail-buffer

zwei:mail-buffer-save-setup:  (P.C. = 34)
   Arg 0 (buffer): #<BABYL-BUFFER "XX:PS:<BECKERLE>BECKERLE.BABYL" 504021>
   --Defaulted args:--
   Arg 1 (check-only): nil
   Local 2: nil
   Local 3 (other): #<TENEX-INBOX-BUFFER "XX:PS:<BECKERLE>MAIL.TXT.1" 505044>
   Local 4 (other-status): :loading-new-mail
   Local 5 (status): :saving-required

zwei:save-buffer-internal:  (P.C. = 6)
   Arg 0 (buffer): #<BABYL-BUFFER "XX:PS:<BECKERLE>BECKERLE.BABYL" 504021>
   Arg 1 (for-finish): nil

zwei:save-mail-buffer:  (P.C. = 77)
   Arg 0 (buffer): #<BABYL-BUFFER "XX:PS:<BECKERLE>BECKERLE.BABYL" 504021>
   --Defaulted args:--
   Arg 1 (for-finish): nil

zwei:expunge-and-save-sequence:  (P.C. = 11)
   Arg 0 (sequence): #<BABYL-BUFFER "XX:PS:<BECKERLE>BECKERLE.BABYL" 504021>

zwei:zmail-save-all:  (P.C. = 10)

zwei:com-zmail-quit:  (P.C. = 33)

zwei:command-execute:  (P.C. = 55)
   Arg 0 (command): zwei:com-zmail-quit
   Arg 1 (char): 113.
   --Defaulted args:--
   Arg 2 (prefix-char): nil
   Arg 3 (hook-list): nil

zwei:zmail-command-execute:  (P.C. = 6)
   Arg 0 (*current-command*-initialization): zwei:com-zmail-quit

Rest of stack:
(:method zwei:zmail-frame :process-command-char):  (P.C. = 7)
(:internal (:method zwei:zmail-frame :combined :process-command-char) 0.):  (P.C. = 7)
(:method zwei:zmail-command-loop-mixin :whopper :process-command-char):  (P.C. = 21)
(:method zwei:zmail-frame :combined :process-command-char):  (P.C. = 12)
(:method zwei:zmail-frame :command-loop):  (P.C. = 146)
(:method zwei:zmail-frame :combined :command-loop):  (P.C. = 47)
zwei:zmail-process-top-level:  (P.C. = 52)
si:process-top-level:  (P.C. = 53)
15-Jun-84 10:02:46-EDT,734;000000000000
Mail-From: X.GYRO created at 15-Jun-84 10:01:40
Date: 15 Jun 1984  10:01 EDT (Fri)
Message-ID: <X.GYRO.12023649922.BABYL@MIT-OZ>
From: Scott Layson <X.GYRO@MIT-OZ>
To:   bug-lispm@MIT-OZ
Subject: ZMail "Quit" command broken

I reported this to bug-lispm@acr-vax (Atari), but I've never seen any
evidence that that list gets forwarded to SCRC, so I thought I'd
mention it here.

In Release 5.0, on 3600s:

Typing the "q" command to ZMail beeps and says "Missing open option
for ACR: /u/gyro/gyro.bb".  The "s" command works correctly as long as
one has not tried "q", but once I've typed "q" and gotten the error, I
have not been able to find a way to save the mail buffer.  ACR: is a
Vax running 4.1bsd.

-- Scott
15-Jun-84 10:13:19-EDT,940;000000000000
Received: from MIT-AVATAR by MIT-OZ via Chaosnet; 15 Jun 84 10:12-EDT
Date: Thursday, 14 June 1984, 15:59-EDT
From: Charles Rich <RICH at MIT-OZ>
Subject: Saving Screen Layouts
To: BUG-LISPM at MIT-OZ

In Release 4.5, Reasoning Utility Package 15.0,
Experimental Layered Reasoning System 6.0, site configuration 61,
Vanilla, on PA Lisp Machine Avatar:

Is there a feature in the window system to support the following,
or if not, I suggest it would be very useful:

Is there any way to, after using Edit Screen to define a screen
layout, to have the system write out (e.g. as a file) a machine
readable description which could be read back in again on
future occasions to recreate the same layout?  Save Layout just
saves it for the current session.

Currently, I will be forced to write my own window code with lots
of coordinate numbers painfully obtained from querying the layout
I did manually.
			Thanks, Chuck.
15-Jun-84 10:22:11-EDT,3197;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 15 Jun 84 10:21-EDT
Date: 15 Jun 1984  10:22 EDT (Fri)
Message-ID: <SR.EHPYC.12023653671.BABYL@MIT-SPEECH>
From: Scott Cyphers <SR.EHPYC@MIT-SPEECH>
To:   <GAVAN@MIT-OZ>
Cc:   bug-lispm@MIT-OZ
Subject: FASD-FORM
In-reply-to: Msg of 15 Jun 1984 05:17-EDT from <GAVAN at MIT-OZ>

    Date: Friday, 15 June 1984, 05:17-EDT
    From: <GAVAN at MIT-OZ>
    To:   bug-lispm at MIT-OZ
    Re:   FASD-FORM

    ;;Here's the screw.  On loading a dumped structure using objects with the
    ;;fasd-mixin, some of the objects (never the top-level one) can acquire
    ;;exceedingly random instance variables.  In particular, they acquire strings of
    ;;symbols I had used previously!!!
    ;;
    ;;I have to do the SET-IN-INSTANCE and the SYMEVAL-IN-INSTANCE because the
    ;;particular instance variable may not be gettable or settable.  I don't think
    ;;these cause the problem but I could be wrong.  Does anyone out there know what
    ;;I'm doing wrong, or is this a bug?
    ;;
    ;;Here's a test case.  A dribbled walk through the loaded structure follows.

    (DEFFLAVOR TEST
    	((TEST1 NIL)
    	 (TEST2 NIL))
    	(FASD-MIXIN)
      :SETTABLE-INSTANCE-VARIABLES
      :GETTABLE-INSTANCE-VARIABLES)

    (DEFFLAVOR TEST1
    	((TEST NIL)
    	 (TEST2 NIL))
    	(FASD-MIXIN)
      :GETTABLE-INSTANCE-VARIABLES
      :SETTABLE-INSTANCE-VARIABLES)

    (DEFFLAVOR TEST2
    	((TEST NIL)
    	 (TEST1 NIL))
    	(FASD-MIXIN)
      :GETTABLE-INSTANCE-VARIABLES
      :SETTABLE-INSTANCE-VARIABLES)

    (DEFUN TEST ()
      (LET ((TEST (MAKE-INSTANCE 'TEST))
    	(TEST1 (MAKE-INSTANCE 'TEST1))
    	(TEST2 (MAKE-INSTANCE 'TEST2)))
        (SEND TEST :SET-TEST1 TEST1)
        (SEND TEST :SET-TEST2 TEST2)
        (SEND TEST1 :SET-TEST TEST)
        (SEND TEST1 :SET-TEST2 TEST2)
        (SEND TEST2 :SET-TEST TEST)
        (SEND TEST2 :SET-TEST1 TEST1)
        TEST))

TEST contains TEST1 which contains TEST.  To load TEST, you have to
load in TEST1.  To load TEST1, you have to load in TEST, or at least
have a pointer to it.  When FASD dumps a file, it makes a hash table
and dumps indexes to things it has already dumped.  FASL recreates the
hash table.  So, when you load in TEST1, it has an index to the yet
undumped TEST (or something like that) and you get screwed, since that
index is pointing to something from an earlier load.

It seems a bug that fasl/fasd doesn't catch this and just does
something instead of signalling an error.  But if you think about it
for a while, you'll see that flavors are a real pain to dump when they
have circular data structures because you have to do the make-instance
before you can refer to them, unless you get really clever, which
would probably slow things down in the normal case.

I have some stuff that will dump any list structure, no matter how
intertwined it may be, although it isn't the most efficient
space-wise, if you want to try something along those lines.  However,
this would still mean you'd have to list-ize your entire flavor
structure before you could dump it, and then de-listize it afterwards.
15-Jun-84 10:41:26-EDT,1957;000000000000
Received: from SCRC-YUKON by MIT-OZ via Chaosnet; 15 Jun 84 10:41-EDT
Received: from SCRC-ANNISQUAM by SCRC-YUKON via CHAOS with CHAOS-MAIL id 46393; Fri 15-Jun-84 10:43:30-EDT
Date: Friday, 15 June 1984, 10:41-EDT
From: Doug Dodds <DODDS at SCRC-TENEX>
Subject: mail system hammer
To: BECKERLE at MIT-XX
Cc: BUG-LISPM at MIT-OZ
In-reply-to: The message of 15 Jun 84 09:01-EDT from BECKERLE at MIT-XX
Message-ID: <840615104108.2.DODDS@ANNISQUAM.SCRC.Symbolics>

    Date: Friday, 15 June 1984, 09:01-EDT
    From:  <BECKERLE at MIT-XX>

    In Release 5.0, Experimental MIT 1.4, FEP 18, Tanglewood Version II, on Project Tanglewood Netleaf Hackberry (3600):

    I tried to read my mail from host xx, and my mail.zmail file was read but not
    my mail.txt file, This error occured when I tried a get-inbox, to read the
    other file. It happens repeatedly, whenever you try to quit, or save or
    get-inbox.

    >>Error: Preparing to save buffer XX:PS:<BECKERLE>BECKERLE.BABYL,
	     but associated inbox XX:PS:<BECKERLE>MAIL.TXT.1 is not awaiting save.
	     Buffer status = :saving-required, inbox status = :loading-new-mail.
    While in the function zwei:mail-buffer-save-setup  zwei:save-buffer-internal  zwei:save-mail-buffer

This backtrace is for a "q" command, but you will indeed get the same
thing, once the mailbox and inbox are in this kind of inconsistent
state.  It appears that the original problem occurred because you gave
another "g" command before Zmail was ready for it, and due to
insufficient interlocking, it accepted the command, and then set the
mailbox into an incorrect state.

This problem is fixed in the development system and will be in Release
5.2.  Meanwhile, to prevent this kind of thing from happening, don't do
any get-inbox, save, or quit commands until all file activity has ceased
from the previous get, select, whatever.  A pain, but better than
getting wedged like this.
15-Jun-84 10:59:07-EDT,1419;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 15 Jun 84 10:58-EDT
Received: from SCRC-MOBILE by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 59829; Fri 15-Jun-84 10:57:16-EDT
Date: Friday, 15 June 1984, 10:59-EDT
From: David E. Goldfarb <DEG at SCRC-TENEX>
Subject: <Ctrl><shift>D bug with FORMAT
To: PHILIP at MIT-OZ, BUG-LISPM at MIT-OZ
Cc: DEG at SCRC-TENEX
In-reply-to: The message of 14 Jun 84 22:16-EDT from PHILIP at MIT-OZ
Message-ID: <840615105902.9.DEG@MOBILE.SCRC.Symbolics>

    Date: Thursday, 14 June 1984, 22:16-EDT
    From:  <PHILIP at MIT-OZ>
    In Release 5.0, Experimental MIT 1.4, on Lisp Machine Bing Crosby (3600):

    While doing "(format t <control><shift>D", FORMAT dies
    typing out the documentation.

    >>Error: Undefined FORMAT command.
								   
	       ...The control string is copied to the stream, but ~ indicates special formatting commands:

    While in the function FORMAT:FORMAT-CTL-OP  FORMAT:FORMAT-CTL-STRING  FORMAT

    ...
    (:DEFUN-METHOD COM-DESCRIBE-FUNCTION):  (P.C. = 66)  (from OZ:VISION:<PHILIP.SRC>LISPM)
    COM-DESCRIBE-FUNCTION:  (P.C. = 12)  (from OZ:VISION:<PHILIP.SRC>LISPM)

The problem is in com-describe-function in your file.  You do
(FORMAT SELF (DOCUMENTATION SYMBOL)).
This breaks if the documentation string contains a ~.  You should replace this
form with (SEND SELF :STRING-OUT (DOCUMENTATION SYMBOL)).
15-Jun-84 12:07:38-EDT,1148;000000000000
Mail-From: ZVONA created at 15-Jun-84 12:07:08
Date: Fri, 15 Jun 1984  12:07 EDT
Message-ID: <ZVONA.12023672764.BABYL@MIT-OZ>
From: ZVONA@MIT-OZ
To:   Charles Rich <RICH@MIT-OZ>
Subject: Saving Screen Layouts
cc:   bug-lispm@MIT-OZ
In-reply-to: Msg of 14 Jun 1984 15:59-EDT from Charles Rich <RICH>

    Date: Thursday, 14 June 1984, 15:59-EDT
    From: Charles Rich <RICH>
    To:   BUG-LISPM
    Re:   Saving Screen Layouts

    Currently, I will be forced to write my own window code with lots
    of coordinate numbers painfully obtained from querying the layout
    I did manually.

Rather than that, you can probably use constraint frames with :EVEN
constraints (ergo no numbers).  Of course, that is not too great
either.  The real solution to make a new constraint frame constraint
language that people could read and write (unlike the current one);
then you could probably whomp together the code for a frame as easily
as using the mouse.  I don't think this would be so difficult.

ECC or JERRYB or someone like that has a nifty general-purpose
screen layout program you might ask one of them for a pointer to.
15-Jun-84 21:05:25-EDT,1542;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 15 Jun 84 21:04-EDT
Date: Friday, 15 June 1984, 21:04-EDT
From:  <PHILIP at MIT-OZ>
Subject: Required-init-keywords
To: BUG-LISPM at MIT-OZ
Cc: philip at MIT-OZ

In Release 5.0, Experimental MIT 1.4, on Lisp Machine Bing Crosby (3600):

The REQUIRED-INIT-KEYWORD item doesn't seem to be carried
over to flavors built upon the one containing the requirement.
[The documentation seems to say it should]

Ex: 

	   
(defflavor DATABASE-ITEM (array-index (modified-p nil)
			   (now-listed-on-screen nil)
			   (date-of-update (time:get-universal-time))
			   (date-of-creation (time:get-universal-time)))
	   ()
  :GETTABLE-INSTANCE-VARIABLES
  (:SETTABLE-INSTANCE-VARIABLES date-of-update array-index)
  (:REQUIRED-INIT-KEYWORDS index) ; <=== NOTE THIS LINE
  :INITABLE-INSTANCE-VARIABLES
  :ABSTRACT-FLAVOR
  (:DOCUMENTATION :ESSENTIAL-MIXIN "
	;;; Database-item: is mixed in with all the types of items found in the database."))


(defflavor PERSON (last-name first-name prefix
			     company division address title
			     office-phone-number home-address home-phone-number)
	   (database-item) ; <=== Included flavor
  :SETTABLE-INSTANCE-VARIABLES
  (:DOCUMENTATION :COMBINATION "
	;;; Person: defines a person with which a meeting was held. Some fancy processing 
	;;; done to obtain the address and phone number. "))


(make-instance 'PERSON) Doesn't complain that :INDEX is missing
but it would if   (:REQUIRED-INIT-KEYWORDS index) was included.

16-Jun-84 08:26:53-EDT,2292;000000000000
Mail-From: GAVAN created at 16-Jun-84 08:26:36
Date: Sat, 16 Jun 1984  08:26 EDT
Message-ID: <GAVAN.12023894760.BABYL@MIT-OZ>
From: GAVAN@MIT-OZ
To:   Scott Cyphers <SR.EHPYC@MIT-SPEECH>
Cc:   bug-lispm@MIT-OZ
Subject: FASD-FORM
In-reply-to: Msg of 15 Jun 1984  10:22-EDT from Scott Cyphers <SR.EHPYC at MIT-SPEECH>

    Date: Friday, 15 June 1984  10:22-EDT
    From: Scott Cyphers <SR.EHPYC at MIT-SPEECH>

    TEST contains TEST1 which contains TEST.  To load TEST, you have to
    load in TEST1.  To load TEST1, you have to load in TEST, or at least
    have a pointer to it.  When FASD dumps a file, it makes a hash table
    and dumps indexes to things it has already dumped.  FASL recreates the
    hash table.  So, when you load in TEST1, it has an index to the yet
    undumped TEST (or something like that) and you get screwed, since that
    index is pointing to something from an earlier load.

I understand.  But I don't understand why there couldn't be some sort
of placeholder (say a gensym) used to mark those places where the
something doesn't yet exist.  Then, just before the load finishes,
those placeholders could be replaced by the right thing.

    It seems a bug that fasl/fasd doesn't catch this and just does
    something instead of signalling an error.  But if you think about it
    for a while, you'll see that flavors are a real pain to dump when they
    have circular data structures because you have to do the make-instance
    before you can refer to them, unless you get really clever, which
    would probably slow things down in the normal case.

Better slow than broken.

    I have some stuff that will dump any list structure, no matter how
    intertwined it may be, although it isn't the most efficient
    space-wise, if you want to try something along those lines.  However,
    this would still mean you'd have to list-ize your entire flavor
    structure before you could dump it, and then de-listize it afterwards.

It doesn't seem worth it, since in my case I know where the losing
pointers will be and can just fix them up after the fasload.  I hope
that, if this bug is fixed by erroring out on attempts to fasdump
circular data structures, the error will be optional.

Thanks for you response.
16-Jun-84 16:33:52-EDT,837;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 16 Jun 84 16:33-EDT
Date: 16 Jun 1984  16:34 EDT (Sat)
Message-ID: <SR.EHPYC.12023983557.BABYL@MIT-SPEECH>
From: Scott Cyphers <SR.EHPYC@MIT-SPEECH>
To:   GAVAN@MIT-OZ
Cc:   bug-lispm@MIT-OZ
Subject: FASD-FORM
In-reply-to: Msg of 16 Jun 1984  08:26-EDT from GAVAN at MIT-OZ

What would probably be best is to have to versions of FASD, a simple
one like the current one, and a hairy one.  The hairy one would be
slow, but able to dump and reload anything preserving EQness, and the
fast one wouldn't try so hard.  When I wrote mine, I had the
additional problem of needing to be able to read and write things on
3600s and LM2s as well as be able to load in only portions of the data
while preserving EQness.  You'd be amazed at some of the subtle things
that can happen.
17-Jun-84 01:03:58-EDT,527;000000000000
Received: from MIT-EECS by MIT-OZ via Chaosnet; 17 Jun 84 01:03-EDT
Date: Sunday, 17 June 1984, 01:00-EDT
From:  <TIM at MIT-OZ>
Subject: Dead namespace server: Avoiding multiple "bee stings"
To: BUG-LISPM at MIT-OZ

In Release 5.0, Experimental MIT 1.4, FEP 18, on Lisp Machine Jimi Hendrix (3600):

Is there a way of telling your Lisp machine not to bother consulting the
namespace server every time it thinks it ought to?  This would be very
useful in cases where the site's namespace server is known to be dead.
17-Jun-84 08:37:37-EDT,2445;000000000000
Received: from MIT-EECS by MIT-OZ via Chaosnet; 17 Jun 84 08:37-EDT
Date: Sunday, 17 June 1984, 08:32-EDT
From: Ken Haase <KWH at MIT-OZ>
Subject: Too few arguments in system condition whopper continuation.
To: BUG-LISPM at MIT-OZ

In Release 5.0, Experimental MIT 1.4, Experimental ARLO 22.0,
Experimental ARLOX 2.0, FEP 18, on Lisp Machine Jim Morrison (3600):

This happened while trying to SI:SET-SYSTEM-DONT-DELETE on a system maintained
on a VMS file server.  (I know you can't set this property on VMS, but I wanted
to CONDITION-CASE the error to change protection.)

>>Trap: The function (:METHOD CONDITION :WHOPPER :REPORT) was called with too few arguments.
While in the function (:METHOD CONDITION :WHOPPER :REPORT)  (:METHOD FS:QUNKNOWN-PROPERTY :COMBINED :REPORT)  SI:SET-SYSTEM-DONT-DELETE

(:METHOD CONDITION :WHOPPER :REPORT):  (P.C. = 1)
   Arg 0 (SELF): #<QUNKNOWN-PROPERTY 42277002>
   Arg 1 (SELF-MAPPING-TABLE): CONDITION
   Arg 2 (.WHOPPER-CONTINUATION.): #<DTP-COMPILED-FUNCTION (:INTERNAL (:METHOD FS:QUNKNOWN-PROPERTY :COMBINED :REPORT) 0.) 7117677>
   Arg 3 (.OLD-SELF-MAPPING-TABLE.): #<Map to flavor FS:QUNKNOWN-PROPERTY -- 0. IV's, 2. FL's 27432121>
   Arg 4 (.OPERATION.): :REPORT
   --Missing args:--
   Arg 5 (STREAM)

(:METHOD FS:QUNKNOWN-PROPERTY :COMBINED :REPORT):  (P.C. = 12)
   Arg 0 (SELF): #<QUNKNOWN-PROPERTY 42277002>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:QUNKNOWN-PROPERTY -- 0. IV's, 2. FL's 27432121>
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

SI:SET-SYSTEM-DONT-DELETE:  (P.C. = 117)
   Arg 0 (SYSTEM-NAME): ARLO
   Arg 1 (VERSION): 21.

SI:*EVAL:  (P.C. = 370)
   Arg 0 (FORM): (SI:SET-SYSTEM-DONT-DELETE (QUOTE ARLO) 21.)

SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 200)
   Rest arg: (:NAME "Arlo Listener in Arlo Window 1" :ABORTED-FUNCTION NIL :BEFORE-PROMPT-FUNCTION NIL :READ-FUNCTION NIL :EVAL-FUNCTION NIL ...)

SI:LISP-COMMAND-LOOP:  (P.C. = 115)
   Arg 0 (STREAM): #<ARLO-WINDOW Arlo Window 1 1000277 exposed>
   Rest arg: (:NAME "Arlo Listener in Arlo Window 1")

ARLO-TOP-LEVEL1:  (P.C. = 36)  (from ARLO: SOURCES; WHISTLES)
   Arg 0 (STREAM): #<ARLO-WINDOW Arlo Window 1 1000277 exposed>

SI:PROCESS-RUN-FUNCTION-INTERNAL:  (P.C. = 51)
   Arg 0 (RESTART-ON-RESET): T
   Arg 1 (FUNCTION): ARLO-TOP-LEVEL1
   Rest arg (ARGS): (#<ARLO-WINDOW Arlo Window 1 1000277 exposed>)

Rest of stack:
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
17-Jun-84 11:48:27-EDT,2033;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 17 Jun 84 11:48-EDT
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 49972; Sun 17-Jun-84 11:49:00-EDT
Date: Sunday, 17 June 1984, 11:48-EDT
From: "(probably) David C. Plummer" <DCP at SCRC-TENEX>
Subject: Too few arguments in system condition whopper continuation.
To: Ken Haase <KWH at MIT-OZ>, BUG-LISPM at MIT-OZ
cc: Maint at SCRC-TENEX
In-Reply-To: The message of 17 Jun 84 08:32-EDT from Ken Haase <KWH at MIT-OZ>

    Date: Sunday, 17 June 1984, 08:32-EDT
    From: Ken Haase <KWH at MIT-OZ>

    In Release 5.0, Experimental MIT 1.4, Experimental ARLO 22.0,
    Experimental ARLOX 2.0, FEP 18, on Lisp Machine Jim Morrison (3600):

    This happened while trying to SI:SET-SYSTEM-DONT-DELETE on a system maintained
    on a VMS file server.  (I know you can't set this property on VMS, but I wanted
    to CONDITION-CASE the error to change protection.)

    >>Trap: The function (:METHOD CONDITION :WHOPPER :REPORT) was called with too few arguments.
    While in the function (:METHOD CONDITION :WHOPPER :REPORT)  (:METHOD FS:QUNKNOWN-PROPERTY :COMBINED :REPORT)  SI:SET-SYSTEM-DONT-DELETE

    (:METHOD FS:QUNKNOWN-PROPERTY :COMBINED :REPORT):  (P.C. = 12)
       Arg 0 (SELF): #<QUNKNOWN-PROPERTY 42277002>
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:QUNKNOWN-PROPERTY -- 0. IV's, 2. FL's 27432121>
       Rest arg (.DAEMON-CALLER-ARGS.): NIL

    SI:SET-SYSTEM-DONT-DELETE:  (P.C. = 117)
       Arg 0 (SYSTEM-NAME): ARLO
       Arg 1 (VERSION): 21.

I found the (ancient) source for this and patched a fix as 243.774.
Maint: This is probably a 5.2 candidate.

What it was trying to tell you is that :DONT-DELETE is an unknown option
for VMS (which you already knew).  The current version of this function is
called SI:SET-SYSTEM-FILE-PROPERTIES which may let you do what you want
by specifying the appropriate properties.  I regret to say you probably
won't see that until Release 6.
17-Jun-84 14:25:47-EDT,1276;000000000000
Received: from SCC-YOSEMITE by MIT-OZ via Chaosnet; 17 Jun 84 14:25-EDT
Date: Sunday, 17 June 1984, 14:26-EDT
From: Jonathan L. Balgley <jlb at SCC-WAIKATO>
Subject: FASD-FORM
To: SR.EHPYC at MIT-SPEECH, GAVAN at MIT-OZ
Cc: bug-lispm at MIT-OZ
In-reply-to: <SR.EHPYC.12023983557.BABYL@MIT-SPEECH>

    Date: 16 Jun 1984  16:34 EDT (Sat)
    From: Scott Cyphers <SR.EHPYC@MIT-SPEECH>

    What would probably be best is to have to versions of FASD, a simple
    one like the current one, and a hairy one.  The hairy one would be
    slow, but able to dump and reload anything preserving EQness, and the
    fast one wouldn't try so hard.  

Lots of customers are asking for something like this.  In the "Advanced
Lisp Programming" course, I explain the general concepts of how to dump
objects while maintaining EQness, and then say that they have to write
their own dumper.  This seems wrong both to me and to the students.

On the other hand, though, they DO seem to understand the difficulties.
For example, I showed how to write a dumper for arbitrary structures of
conses and symbols.  But when they saw all the extra work that it had to
do to dump a simple circular list, they realized that
application-specific dumpers might be the right thing.
17-Jun-84 18:26:47-EDT,3502;000000000000
Received: from MIT-EECS by MIT-OZ via Chaosnet; 17 Jun 84 18:23-EDT
Date: Sunday, 17 June 1984, 18:12-EDT
From: Ken Haase <KWH at MIT-OZ>
Subject: Tape user lock lossage
To: BUG-LISPM at MIT-OZ

In Release 5.0, Experimental MIT 1.4, ARLO 22.0, Experimental ARLOX 2.0,
FEP 18, on Lisp Machine Jim Morrison (3600):

I aborted out of a DIS:WRITE-DISTRIBUTION-TAPE and got this lock conflict.  I thought
this had been fixed at some point....

>>Error: Cannot mount reel ARLO-Dist: The tape hardware on this machine is in use by Tape server serving Lisp Machine Jim Morrison.
While in the function (:DEFUN-METHOD TAPE:REMOTE-TAPE-MIXIN-MOUNT)  TAPE:REMOTE-TAPE-MIXIN-MOUNT  (:METHOD TAPE:REMOTE-TAPE-MIXIN :AFTER :INIT)

(:DEFUN-METHOD TAPE:REMOTE-TAPE-MIXIN-MOUNT):  (P.C. = 32)
   Arg 0 (SELF): #<REMOTE-TAPE-OUTPUT-STREAM 11112434>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TAPE:REMOTE-TAPE-MIXIN -- 15. IV's, 0. FL's 27122402>

TAPE:REMOTE-TAPE-MIXIN-MOUNT:  (P.C. = 12)
   Rest arg (ARGS): NIL

(:METHOD TAPE:REMOTE-TAPE-MIXIN :AFTER :INIT):  (P.C. = 56)
   Arg 0 (SELF): #<REMOTE-TAPE-OUTPUT-STREAM 11112434>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TAPE:REMOTE-TAPE-MIXIN -- 15. IV's, 0. FL's 27122402>
   Arg 2 (OPERATION): :INIT
   Rest arg (IGNORE): (#<DTP-LOCATIVE 16500500>)

(:INTERNAL (:METHOD TAPE:REMOTE-TAPE-OUTPUT-STREAM :COMBINED :INIT) 0.):  (P.C. = 25)
   Arg 0 (SELF): #<REMOTE-TAPE-OUTPUT-STREAM 11112434>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TAPE:REMOTE-TAPE-OUTPUT-STREAM -- 0. IV's, 5. FL's 27122437>
   Rest arg (.DAEMON-CALLER-ARGS.): (:INIT #<DTP-LOCATIVE 16500500>)

(:METHOD TAPE:REMOTE-TAPE-MIXIN :WHOPPER :INIT):  (P.C. = 23)
   Arg 0 (SELF): #<REMOTE-TAPE-OUTPUT-STREAM 11112434>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TAPE:REMOTE-TAPE-MIXIN -- 15. IV's, 0. FL's 27122402>
   Arg 2 (.WHOPPER-CONTINUATION.): #<DTP-COMPILED-FUNCTION (:INTERNAL (:METHOD TAPE:REMOTE-TAPE-OUTPUT-STREAM :COMBINED :INIT) 0.) 45722607>
   Arg 3 (.OLD-SELF-MAPPING-TABLE.): #<Map to flavor TAPE:REMOTE-TAPE-OUTPUT-STREAM -- 0. IV's, 5. FL's 27122437>
   Arg 4 (.OPERATION.): :INIT
   Rest arg (ARGS): (#<DTP-LOCATIVE 16500500>)

(:METHOD TAPE:REMOTE-TAPE-OUTPUT-STREAM :COMBINED :INIT):  (P.C. = 12)
   Arg 0 (SELF): #<REMOTE-TAPE-OUTPUT-STREAM 11112434>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TAPE:REMOTE-TAPE-OUTPUT-STREAM -- 0. IV's, 5. FL's 27122437>
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

INSTANTIATE-FLAVOR:  (P.C. = 372)
   Arg 0 (FLAVOR-NAME): TAPE:REMOTE-TAPE-OUTPUT-STREAM
   Arg 1 (INIT-PLIST): #<DTP-LOCATIVE 16500500>
   Arg 2 (SEND-INIT-MESSAGE-P): :MAYBE
   --Defaulted args:--
   Arg 3 (RETURN-UNHANDLED-KEYWORDS-P): NIL
   Arg 4 (AREA-TO-CONS-INSTANCE-IN): NIL

MAKE-INSTANCE:  (P.C. = 6)
   Arg 0 (FLAVOR-NAME): TAPE:REMOTE-TAPE-OUTPUT-STREAM
   Rest arg (INIT-OPTIONS): (:DIRECTION :OUTPUT :UNIT NIL :NO-READ-AHEAD NIL :PAD-CHAR NIL :BUFFER-SIZE NIL ...)

Rest of stack:
TAPE:MAKE-REMOTE-TAPE-STREAM:  (P.C. = 40)
TAPE:MAKE-STREAM:  (P.C. = 343)
DIS:RAW-DISTRIBUTION-STREAM:  (P.C. = 75)
DIS:DISTRIBUTION-TAPE-STREAM:  (P.C. = 54)
DIS:GET-DISTRIBUTION-OPTIONS:  (P.C. = 74)
DIS:WRITE-DISTRIBUTION-TAPE:  (P.C. = 10)
SI:*EVAL:  (P.C. = 370)
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 200)
SI:LISP-COMMAND-LOOP:  (P.C. = 115)
ARLO-TOP-LEVEL1:  (P.C. = 36)  (from ARLO: SOURCES; WHISTLES)
SI:PROCESS-RUN-FUNCTION-INTERNAL:  (P.C. = 51)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
17-Jun-84 22:37:32-EDT,3096;000000000000
Received: from MIT-LISPM-2 by MIT-OZ via Chaosnet; 17 Jun 84 22:36-EDT
Date: Sunday, 17 June 1984, 22:37-EDT
From: Tim Mcnerney <TIM at MIT-OBERON>
To: BUG-LISPM at MIT-OZ

In System 98.59, CADR 3.7, ZMail 53.17, MIT-Specific 22.1, microcode 309,
gc@36, on Lisp Machine Two:


Insert your description of the circumstances here:

Just did (apropos 'map 'color :fboundp t)

>>TRAP 4544 (ARGTYP ARRAY M-A NIL GAHDR) ->  ARRAY-LENGTH 
Some argument to ARRAY-LENGTH, NIL, was of the wrong type.
The function expected an array.
Backtrace from the debugger:

Additional information supplied with call:
 Expecting 3 values

INTERN (P.C. = 112)

 Arg 0 (SYM): MAP
 Arg 1 (PKG): NIL
Local 0 (HASH): 3172360
Local 1 (STR): "MAP"
Local 2 (LEN): NIL
Local 3 (X): NIL
Local 4 (Y): NIL
Local 5 (I): NIL
Local 6: NIL
Local 7 (PKG): NIL


SI::PRINT-PNAME-STRING (P.C. = 233)

 Arg 0 (SYMBOL): GLOBAL:MAP
 Arg 1 (STREAM): #:TERMINAL-IO-SYN-STREAM
 Arg 2 (FASTP): (:STRING-OUT)
   --Defaulted args:--
 Arg 3 (NO-PACKAGE-PREFIXES): NIL
Local 0 (STRING): NIL
Local 1 (LEN): NIL
Local 2 (FSMWINS): NIL
Local 3 (MUST/): NIL
Local 4 (TEM): NIL
Local 5 (PKG-OR-STRING): #<Package GLOBAL 41111623>
Local 6 (INTERNAL-FLAG): NIL
Local 7 (TEM1): NIL
Local 8 (TEM2): MAP
Local 9 (POS): NIL
Local 10 (IF): NIL
Local 11 (I): NIL
Local 12: NIL
Local 13 (LENGTH): NIL
Local 14 (CHAR): NIL
Local 15 (PREV-LETTER): NIL
Local 16 (STATE): NIL
Local 17 (FSM): NIL
Local 18 (ESCAPE-CODE): NIL
Local 19 (MULTIPLE-ESCAPE-CODE): NIL
Local 20 (CHARACTER-CODE-ESCAPE-CODE): NIL
Local 21 (I): NIL
Local 22 (CODE): NIL
Local 23 (L): NIL
Local 24 (PREV-CHAR): NIL


SI:PRINT-OBJECT (P.C. = 405)

 Arg 0 (EXP): GLOBAL:MAP
 Arg 1 (I-PRINDEPTH): 0
 Arg 2 (STREAM): #:TERMINAL-IO-SYN-STREAM
   --Defaulted args:--
 Arg 3 (WHICH-OPERATIONS): (:STRING-OUT)
Local 0 (NSS): NIL
Local 1 (FASTP): (:STRING-OUT)
Local 2: NIL
Local 3: NIL
Local 4 (BITS): NIL
Local 5 (CHAR): NIL
Local 6 (CHNAME): NIL


PRIN1 (P.C. = 62)

 Arg 0 (OBJECT): GLOBAL:MAP
   --Defaulted args:--
 Arg 1 (STREAM): NIL
Local 0 (OLD): NIL


FORMAT::FORMAT-CTL-ASCII (P.C. = 122)

 Arg 0 (ARG): GLOBAL:MAP
 Arg 1 (PARAMS): NIL
 Arg 2 (PRIN1P): T
Local 0 (EDGE): NIL
Local 1 (PERIOD): NIL
Local 2 (MIN): NIL
Local 3 (PADCHAR): 32
Local 4 (WIDTH): NIL


Remainder of stack:

FORMAT::FORMAT-CTL-SEXP (P.C. = 24)
FORMAT::FORMAT-CTL-OP (P.C. = 63)
FORMAT::FORMAT-CTL-STRING (P.C. = 136)
GLOBAL:FORMAT (P.C. = 177)
SI::APROPOS-1 (P.C. = 146)
MAPATOMS (P.C. = 132)
APROPOS (P.C. = 205)
SI::EVAL1 (P.C. = 1324)
SI:EVAL-ABORT-TRIVIAL-ERRORS (P.C. = 61)
BREAK (P.C. = 611)
...
ZWEI::COMMAND-EXECUTE (P.C. = 115)
ZWEI::PROCESS-COMMAND-CHAR (P.C. = 65)
(:METHOD ZWEI:WINDOW :EDIT) (P.C. = 464)
(:INTERNAL (:METHOD ZWEI:ZMACS-WINDOW :COMBINED :EDIT) 0) (P.C. = 74)
FUNCALL (P.C. = 25)
(:METHOD ZWEI::DISPLAYER :AROUND :EDIT) (P.C. = 31)
(:METHOD ZWEI:ZMACS-WINDOW :COMBINED :EDIT) (P.C. = 47)
ZWEI::ZMACS-WINDOW-TOP-LEVEL (P.C. = 46)
SI::PROCESS-TOP-LEVEL (P.C. = 246)
18-Jun-84 00:44:08-EDT,868;000000000000
Received: from MIT-ML by MIT-OZ via Chaosnet; 18 Jun 84 00:43-EDT
Date: Monday, 18 June 1984, 00:40-EDT
From: Boyle at MIT-OZ, Henry at MIT-OZ
Sender: boyle at MIT-OZ
Subject: Window system problems
To: Bug-Lispm at MIT-OZ
Cc: Boyle at MIT-OZ


We were trying to take two systems [Graphic Lisp and Tinker] and 
create a frame containing both of them. Each is defined by a
TV:BORDERED-CONSTRAINT-FRAME with a TV:PROCESS-MIXIN.
It created the window OK, but the Tinker process had trouble starting 
up by itself. If we Selected the Tinker frame from the system menu
and mouse-selected the Graphic Lisp frame manually, the processes eventually
started up. What is the right way to do this? Does the combined frame
need a process of its own, and if so, what should its top level function do?
We can send a simplified example if you would like to see it.
18-Jun-84 13:04:12-EDT,2324;000000000000
Received: from SCC-WAIKATO by MIT-OZ via Chaosnet; 18 Jun 84 13:01-EDT
Received: from SCC-YOSEMITE by SCC-WAIKATO via CHAOS with CHAOS-MAIL id 35703; Mon 18-Jun-84 13:02:26-EDT
Date: Monday, 18 June 1984, 13:02-EDT
From: Jonathan L. Balgley <jlb at SCC-WAIKATO>
Subject: Window system problems
To: Boyle at MIT-OZ, Henry at MIT-OZ, Bug-Lispm at MIT-OZ
In-reply-to: The message of 18 Jun 84 00:40-EDT from Boyle at MIT-OZ

    Date: Monday, 18 June 1984, 00:40-EDT
    From: Boyle at MIT-OZ, Henry at MIT-OZ


    We were trying to take two systems [Graphic Lisp and Tinker] and 
    create a frame containing both of them. Each is defined by a
    TV:BORDERED-CONSTRAINT-FRAME with a TV:PROCESS-MIXIN.
    It created the window OK, but the Tinker process had trouble starting 
    up by itself. If we Selected the Tinker frame from the system menu
    and mouse-selected the Graphic Lisp frame manually, the processes eventually
    started up. What is the right way to do this? Does the combined frame
    need a process of its own, and if so, what should its top level function do?
    We can send a simplified example if you would like to see it.

Here is a simplified example that works.  Maybe your problem isn't with
processes, but is with selection?  Having more than one io-buffer in a
single frame can be confusing.  If you're having particular problems
with Graphic Lisp, let me know.


(defflavor frame-one ()
	   (tv:select-mixin
	    tv:process-mixin
	    tv:bordered-constraint-frame-with-shared-io-buffer)
  (:default-init-plist
   :panes '((pane-one tv:window-pane)
	    (pane-two tv:window-pane))
   :constraints '((only . ((pane-one pane-two)
			  ((pane-one 0.2))
			  ((pane-two :even)))))
   :selected-pane 'pane-two
   :process '(frame-one-top-level)))


(defun frame-one-top-level (frame)
  (let ((pane2 (send frame :get-pane 'pane-two)))
    (loop for i from 1 do
	  (format pane2 "~&This is line ~d." i))))


(defflavor big-frame-1 ()
	   (tv:constraint-frame)
  (:default-init-plist
   :panes '((frame1 frame-one)
	    (frame2 frame-one))
   :constraints '((only . ((frame1 frame2)
			   ((frame1 :even)
			    (frame2 :even)))))
   :selected-pane 'frame1))


(setq b (tv:make-window 'big-frame-1 :edges-from :mouse))

(send b :select)
19-Jun-84 18:06:25-EDT,1273;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 19 Jun 84 18:05-EDT
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 51815; Tue 19-Jun-84 17:31:18-EDT
Date: Tuesday, 19 June 1984, 17:30-EDT
From: David A. Moon <Moon at SCRC-TENEX>
Subject: Required-init-keywords
To: PHILIP at MIT-OZ
Cc: BUG-LISPM at MIT-OZ, Software-Maintenance at SCRC-YUKON
In-reply-to: The message of 15 Jun 84 21:04-EDT from PHILIP at MIT-OZ
Message-ID: <840619173021.0.MOON@EUPHRATES.SCRC.Symbolics>

    Date: Friday, 15 June 1984, 21:04-EDT
    From:  <PHILIP at MIT-OZ>

    In Release 5.0, Experimental MIT 1.4, on Lisp Machine Bing Crosby (3600):

    The REQUIRED-INIT-KEYWORD item doesn't seem to be carried
    over to flavors built upon the one containing the requirement.
    [The documentation seems to say it should]

Indeed, the :REQUIRED-INIT-KEYWORDS option to DEFFLAVOR is supposed to be
inherited by flavors built on the one containing the option.  In the source
(of SI:COMPOSE-INIT-INFO) I fixed the typographical error that made it not
work.  Thanks for the report.

Software-Maintenance: I suppose it's probably too late to put this into
5.2, but if you want to do so the latest source should work in a 5.2
system.
19-Jun-84 19:27:45-EDT,1466;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 19 Jun 84 19:27-EDT
Received: from SCRC-EUPHRATES by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 61445; Tue 19-Jun-84 19:26:02-EDT
Date: Tuesday, 19 June 1984, 19:27-EDT
From: David A. Moon <Moon at SCRC-TENEX>
Subject: QSEND
To: Eugene Ciccarelli <ECC at MIT-OZ>
Cc: BUG-LISPM at MIT-OZ, bug-twenex at MIT-OZ
In-reply-to: The message of 15 Jun 84 00:37-EDT from Eugene Ciccarelli <ECC at MIT-OZ>
Message-ID: <840619192726.0.MOON@EUPHRATES.SCRC.Symbolics>

    Date: Friday, 15 June 1984, 00:37-EDT
    From: Eugene Ciccarelli <ECC at MIT-OZ>

    In ZWEI in System 98.60, CADR 3.7, ZMail 53.17, MIT-Specific 22.1,
    microcode 309, gc@36, on Lisp Machine Two:

    QSEND (and Converse) gives no indication of a refusal to accept
    at the other end.  E.g., if FOO@OZ has @REFUSE SYSTEM-MESSAGES
    set, then sending to FOO returns just as if it got to FOO.  But,
    actually, FOO never sees the message.

    Is this just some limitation of the SEND (or whatever) server? --
    that you can only find out whether it got to the host, not
    whether it got to the user?

This must be a problem with the Tops-20 SEND server.  It's even better
on SPEECH; not only does the server not tell its client that the message
could not be delivered because messages were being refused, it actually
goes ahead and delivers the message anyway!

I don't know what @REFUSE SYSTEM-MESSAGES does.
19-Jun-84 19:53:50-EDT,1665;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 19 Jun 84 19:53-EDT
Date: Tue 19 Jun 84 19:53:14-EDT
From: John Wroclawski <JTW@MIT-SPEECH>
Subject: Re: QSEND
To: Moon@SCRC-TENEX, ECC@MIT-OZ
cc: BUG-LISPM@MIT-OZ, bug-twenex@MIT-OZ
In-Reply-To: Message from "David A. Moon <Moon at SCRC-TENEX>" of Tue 19 Jun 84 19:31:14-EDT

    From: David A. Moon <Moon at SCRC-TENEX>
    Subject: QSEND
    In-reply-to: The message of 15 Jun 84 00:37-EDT from Eugene Ciccarelli <ECC at MIT-OZ>
    
        Date: Friday, 15 June 1984, 00:37-EDT
        From: Eugene Ciccarelli <ECC at MIT-OZ>
	....
        QSEND (and Converse) gives no indication of a refusal to accept
        at the other end.  E.g., if FOO@OZ has @REFUSE SYSTEM-MESSAGES
        set, then sending to FOO returns just as if it got to FOO.  But,
        actually, FOO never sees the message.
	....    

    This must be a problem with the Tops-20 SEND server.  It's even better
    on SPEECH; not only does the server not tell its client that the
    message could not be delivered because messages were being refused, it
    actually goes ahead and delivers the message anyway!
    
    I don't know what @REFUSE SYSTEM-MESSAGES does.

On speech REFUSE SYSTEM-MESSAGES refuses system messages, like [Disk space
low on ...] and so forth. It does not refuse sends from other people, 
since they aren't system messages.

On OZ I think things were changed so that refuse system-messages also
refused sends. The info is actually by TTY, not by user, but it should
be available to the SEND server to return to the foreign site. I have
never seen one that did, though.
-------
19-Jun-84 21:49:01-EDT,519;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 19 Jun 84 21:45-EDT
Date: 19 Jun 1984  21:45 EDT (Tue)
Message-ID: <SR.EHPYC.12024826666.BABYL@MIT-SPEECH>
From: Scott Cyphers <SR.EHPYC@MIT-SPEECH>
Subject: Internal problems with Rel 5
To:   bug-lispm@oz, bug-lmdoc@scrc-tenex

According to Magnum Opus Symbolicorum VIII, INT, pg. 84, there are
functions si:verify-fep-file-system, si:print-fep-file-system,
and si:resequence-fep-file-system, but they don't exist in Rel 5, so
either Rel 5 or INT is wrong.
19-Jun-84 21:53:49-EDT,2526;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 19 Jun 84 21:51-EDT
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 51939; Tue 19-Jun-84 21:51:27-EDT
Date: Tuesday, 19 June 1984, 21:50-EDT
From: David A. Moon <Moon at SCRC-TENEX>
Subject: Re: QSEND
To: John Wroclawski <JTW at MIT-SPEECH>
Cc: ECC at MIT-OZ, BUG-LISPM at MIT-OZ, bug-twenex at MIT-OZ
In-reply-to: The message of 19 Jun 84 19:53-EDT from John Wroclawski <JTW at MIT-SPEECH>
Message-ID: <840619215030.7.MOON@EUPHRATES.SCRC.Symbolics>

    Date: Tue 19 Jun 84 19:53:14-EDT
    From: John Wroclawski <JTW@MIT-SPEECH>

	From: David A. Moon <Moon at SCRC-TENEX>
	Subject: QSEND
	In-reply-to: The message of 15 Jun 84 00:37-EDT from Eugene Ciccarelli <ECC at MIT-OZ>
    
	    Date: Friday, 15 June 1984, 00:37-EDT
	    From: Eugene Ciccarelli <ECC at MIT-OZ>
	    ....
	    QSEND (and Converse) gives no indication of a refusal to accept
	    at the other end.  E.g., if FOO@OZ has @REFUSE SYSTEM-MESSAGES
	    set, then sending to FOO returns just as if it got to FOO.  But,
	    actually, FOO never sees the message.
	    ....    

	This must be a problem with the Tops-20 SEND server.  It's even better
	on SPEECH; not only does the server not tell its client that the
	message could not be delivered because messages were being refused, it
	actually goes ahead and delivers the message anyway!
    
	I don't know what @REFUSE SYSTEM-MESSAGES does.

    On speech REFUSE SYSTEM-MESSAGES refuses system messages, like [Disk space
    low on ...] and so forth. It does not refuse sends from other people, 
    since they aren't system messages.

@refuse links and @refuse advice don't shut off Chaosnet SENDs on Speech, nor on OZ.
The source I have for the Chaosnet send server suggests that they should work,
so I guess I'll let somebody who knows where the real source is worry about this.

    On OZ I think things were changed so that refuse system-messages also
    refused sends. The info is actually by TTY, not by user, but it should
    be available to the SEND server to return to the foreign site. I have
    never seen one that did, though.

Well, now I guess that whoever made that change on OZ did it in some
highly-competent fashion so that the server's output to the user's terminal
is thrown away with the server not being able to tell.  Anyway I learned
long ago not to assume that OZ has any resemblance to any other TOPS-20,
so I'm not worrying about it.
19-Jun-84 21:56:56-EDT,498;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 19 Jun 84 21:51-EDT
Date: 19 Jun 1984  21:51 EDT (Tue)
Message-ID: <SR.EHPYC.12024827723.BABYL@MIT-SPEECH>
From: Scott Cyphers <SR.EHPYC@MIT-SPEECH>
To:   Scott Cyphers <SR.EHPYC@MIT-SPEECH>
Cc:   bug-lispm@oz, bug-lmdoc@scrc-tenex
Subject: Internal problems with Rel 5
In-reply-to: Msg of 19 Jun 1984  21:45-EDT from Scott Cyphers <SR.EHPYC>

I found the functions -- in the book they're file-system and in the
code they're filesystem.
19-Jun-84 22:01:03-EDT,980;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 19 Jun 84 21:55-EDT
Received: from SCRC-HUDSON by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 51942; Tue 19-Jun-84 21:55:26-EDT
Date: Tuesday, 19 June 1984, 21:54-EDT
From: Gerry Smith <gsmith at SCRC-YUKON>
Subject: Internal problems with Rel 5
To: Scott Cyphers <SR.EHPYC at MIT-SPEECH>, bug-lispm at MIT-OZ,
    bug-lmdoc at SCRC-TENEX
In-reply-to: <SR.EHPYC.12024826666.BABYL@MIT-SPEECH>

    Date: 19 Jun 1984  21:45 EDT (Tue)
    From: Scott Cyphers <SR.EHPYC@MIT-SPEECH>
    According to Magnum Opus Symbolicorum VIII, INT, pg. 84, there are
    functions si:verify-fep-file-system, si:print-fep-file-system,
    and si:resequence-fep-file-system, but they don't exist in Rel 5, so
    either Rel 5 or INT is wrong.

Those functions are actually named si:verify-fep-filesystem,
si:print-fep-filesystem, and si:resequence-fep-filesystem.  Note that
there is no hyphen between "file" and "system".
20-Jun-84 00:52:25-EDT,2402;000000000000
Mail-From: GZ created at 20-Jun-84 00:47:25
Date: Wed, 20 Jun 1984  00:47 EDT
Message-ID: <GZ.12024859745.BABYL@MIT-OZ>
From: Gail Zacharias <GZ@MIT-OZ>
To:   "David A. Moon" <Moon@SCRC-TENEX>
Cc:   BUG-LISPM@MIT-OZ, bug-twenex@MIT-OZ, ECC@MIT-OZ,
      John Wroclawski <JTW@MIT-SPEECH>, bug-send@MIT-OZ
Subject: QSEND
In-reply-to: Msg of 19 Jun 1984 21:50-EDT from David A. Moon <Moon at SCRC-TENEX>

    Date: Tuesday, 19 June 1984, 21:50-EDT
    From: David A. Moon <Moon at SCRC-TENEX>
        Date: Tue 19 Jun 84 19:53:14-EDT
        From: John Wroclawski <JTW@MIT-SPEECH>
    	    Date: Friday, 15 June 1984, 00:37-EDT
    	    From: Eugene Ciccarelli <ECC at MIT-OZ>
    	    ....
    	    QSEND (and Converse) gives no indication of a refusal to accept
    	    at the other end.  E.g., if FOO@OZ has @REFUSE SYSTEM-MESSAGES
    	    set, then sending to FOO returns just as if it got to FOO.  But,
    	    actually, FOO never sees the message.
    	    ....    

    	This must be a problem with the Tops-20 SEND server.  It's even better
    	on SPEECH; not only does the server not tell its client that the
    	message could not be delivered because messages were being refused, it
    	actually goes ahead and delivers the message anyway!
        
That's not what happens on OZ (see below).

        On OZ I think things were changed so that refuse system-messages also
        refused sends.

Right.  (I think GREN once put in all the necessary stuff for a separate
refuse user-messages bit in the monitor, but it never seems to have made
it into the exec and the send server.  Whatever happened to that, gren?)

    Well, now I guess that whoever made that change on OZ did it in some
    highly-competent fashion so that the server's output to the user's terminal
    is thrown away with the server not being able to tell.

No, that's not what happens.  When a user is refusing sends (via refuse
system-messages currently, but might be refuse user-message in the future)
attempts to send to him fail with a "user is refusing sends" error and the
message is not delivered.  The problem is that this is not compatible with
the chaosnet SEND protocol, which requires you to report such problems BEFORE
attempting to send the message (before accepting the connection in fact),
and has no provisions for reporting errors in message delivery.
20-Jun-84 01:00:05-EDT,1089;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 20 Jun 84 00:59-EDT
Date: Wed 20 Jun 84 00:59:54-EDT
From: John Wroclawski <JTW@MIT-SPEECH>
Subject: Re: QSEND
To: GZ@MIT-OZ, Moon@SCRC-TENEX
cc: BUG-LISPM@MIT-OZ, bug-twenex@MIT-OZ, ECC@MIT-OZ, bug-send@MIT-OZ
In-Reply-To: Message from "Gail Zacharias <GZ@MIT-OZ>" of Wed 20 Jun 84 00:53:27-EDT


    When a user is refusing sends (via refuse system-messages currently,
    but might be refuse user-message in the future) attempts to send to
    him fail with a "user is refusing sends" error and the message is not
    delivered.  The problem is that this is not compatible with the
    chaosnet SEND protocol, which requires you to report such problems
    BEFORE attempting to send the message (before accepting the connection
    in fact), and has no provisions for reporting errors in message
    delivery.

Come on. REFUSE SYSTEM-MESSAGES is a bit in a TTY flag word, and you
can read it with a MTOPR%. (.MORNT, octal 35). So how hard can it be
to do that before the server decides to accept the send?
-------
20-Jun-84 02:16:46-EDT,1501;000000000000
Mail-From: GZ created at 20-Jun-84 02:16:09
Date: Wed, 20 Jun 1984  02:16 EDT
Message-ID: <GZ.12024875896.BABYL@MIT-OZ>
From: Gail Zacharias <GZ@MIT-OZ>
To:   John Wroclawski <JTW@MIT-SPEECH>
Cc:   BUG-LISPM@MIT-OZ, bug-send@MIT-OZ, bug-twenex@MIT-OZ, ECC@MIT-OZ,
      Moon@SCRC-TENEX
Subject: QSEND
In-reply-to: Msg of 20 Jun 1984  00:59-EDT from John Wroclawski <JTW at MIT-SPEECH>

It's not that hard, but it would mean that much of the code in SENDER
related to the translation from user to terminal number would have to be
duplicated in the chaos send server and maintained compatibly in both
places (for example delivery to multiple terminals when the user is logged
in more than once, the precise location (system-messages vs. user-messages)
and semantics (there are provisions for overriding it) of the gag bit, what
is done with batch jobs (used to be they were included, but now they are
ignored), etc., etc.)  There is also a small chance of a timing screw in
the period between the server checking and SENDER checking...

I'll take a look at how much stuff SENDER does and see if it's worth
risking the divergence... However, it would be much better if the chaos
protocol was fixed somehow.  There are other errors that can occur with
message delivery which you should be able to report, that can't be checked
for ahead of time. Btw, VMS has a similar difficulty with this protocol (it
can't tell whether users can receive sends in PASSALL mode until it tries).
20-Jun-84 03:30:49-EDT,1067;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 20 Jun 84 03:29-EDT
Date: 20 Jun 1984  00:27 PDT (Wed)
Message-ID: <[SRI-NIC].IAN.20-Jun-84 00:27:25>
From: Ian Macky <Ian@SRI-NIC>
To:   Gail Zacharias <GZ%MIT-OZ@MIT-MC.ARPA>
Cc:   BUG-LISPM%MIT-OZ@MIT-MC.ARPA, bug-send%MIT-OZ@MIT-MC.ARPA,
      bug-twenex%MIT-OZ@MIT-MC.ARPA, ECC%MIT-OZ@MIT-MC.ARPA,
      John Wroclawski <JTW%MIT-SPEECH@MIT-MC.ARPA>,
      Moon%SCRC-TENEX@MIT-MC.ARPA
Subject: QSEND
In-reply-to: Msg of 19 Jun 1984  23:16-PDT from Gail Zacharias <GZ%MIT-OZ at MIT-MC.ARPA>

OK, folks, this is the last message.  I fixed the OZ and MC send servers
to check for gaggedness before accepting the connection, which will do
for now.  Also, OZ's send server will now accept Inquire username.  Which
reminds me that only OZ runs that Inquire system, so that part ought to
be conditional.  Anyway, not a great solution, but the real limitation's
in the protocol.

Moon, did you ever finalize that CONVERSE protocol?  If so, I volunteer
to do the TWENEX/ITS server/SEND changes necessary.
20-Jun-84 04:36:59-EDT,3518;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 20 Jun 84 04:36-EDT
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 52027; Wed 20-Jun-84 04:37:11-EDT
Date: Wednesday, 20 June 1984, 04:36-EDT
From: David A. Moon <Moon at SCRC-TENEX>
Subject: QSEND
To: Gail Zacharias <GZ at MIT-OZ>
Cc: BUG-LISPM at MIT-OZ, bug-twenex at MIT-OZ, ECC at MIT-OZ,
    John Wroclawski <JTW at MIT-SPEECH>, bug-send at MIT-OZ
In-reply-to: <GZ.12024859745.BABYL@MIT-OZ>
Message-ID: <840620043602.7.MOON@EUPHRATES.SCRC.Symbolics>

    Date: Wed, 20 Jun 1984  00:47 EDT
    From: Gail Zacharias <GZ@MIT-OZ>

	Date: Tuesday, 19 June 1984, 21:50-EDT
	From: David A. Moon <Moon at SCRC-TENEX>
	    Date: Tue 19 Jun 84 19:53:14-EDT
	    From: John Wroclawski <JTW@MIT-SPEECH>
		Date: Friday, 15 June 1984, 00:37-EDT
		From: Eugene Ciccarelli <ECC at MIT-OZ>
		....
		QSEND (and Converse) gives no indication of a refusal to accept
		at the other end.  E.g., if FOO@OZ has @REFUSE SYSTEM-MESSAGES
		set, then sending to FOO returns just as if it got to FOO.  But,
		actually, FOO never sees the message.
		....    

	    This must be a problem with the Tops-20 SEND server.  It's even better
	    on SPEECH; not only does the server not tell its client that the
	    message could not be delivered because messages were being refused, it
	    actually goes ahead and delivers the message anyway!
        
    That's not what happens on OZ (see below).

	    On OZ I think things were changed so that refuse system-messages also
	    refused sends.

    Right.  (I think GREN once put in all the necessary stuff for a separate
    refuse user-messages bit in the monitor, but it never seems to have made
    it into the exec and the send server.  Whatever happened to that, gren?)

	Well, now I guess that whoever made that change on OZ did it in some
	highly-competent fashion so that the server's output to the user's terminal
	is thrown away with the server not being able to tell.

    No, that's not what happens.  When a user is refusing sends (via refuse
    system-messages currently, but might be refuse user-message in the future)
    attempts to send to him fail with a "user is refusing sends" error and the
    message is not delivered.  

The fact that I don't understand this and want to say "but the SEND server just
opens the user's terminal and does a SOUT" probably indicates only that I don't
know where the current source of the OZ send server is.

I wish I knew how to do :BINPRT on Twenex.

			       The problem is that this is not compatible with
    the chaosnet SEND protocol, which requires you to report such problems BEFORE
    attempting to send the message (before accepting the connection in fact),
    and has no provisions for reporting errors in message delivery.

Actually the CLS packet sent after delivering the message contains an ascii string
that is supposed to be displayed to the user.  However, unless you want to test
for all the variations on "Message sent successfully" there is no way for a program
to know whether this denotes success or failure.

The newer CONVERSE protocol, which works over Chaosnet as well as other media,
does all this stuff right, of course.  No documentation yet, I guess.

I went to test what CLS packet OZ sends when it throws away the message, but found
that I couldn't because in the meantime Gren had fixed the SEND server to do the
right thing.  Thanks, Ian.
20-Jun-84 05:24:42-EDT,1595;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 20 Jun 84 05:24-EDT
Date: Monday, 18 June 1984, 23:26-EDT
From: Scott Cyphers <sr.ehpyc at MIT-SPEECH>
Subject:  never got past arithmetic
To: BUG-LISPM at MIT-OZ

In Release 5.0, Experimental MIT 1.4, Spire-Macros 1.8, Compute 1.3,
Attribute 1.7, Audio 1.2, Speech-Attributes 1.0, Display 1.12,
Speech-Layouts 1.8, Experimental Versatec 2.0, Experimental Prtout 1.1,
Spire 13.0, SpireX 10.3, LexiS 6.3, FEP 18, on Lisp Machine Grizzly (3600):

(exp -1e) should be 0.0
(log 0.0) should optionally be -1e
(sqrt 1e) should be 1e
etc.

>>Error: An invalid floating-point operation was attempted:
         %FLOAT-OPERATION-CONVERT-SINGLE-TO-INTEGER with arguments (-1e)
While in the function SI:ARITHMETIC-FUNCTION-FIX-FLOAT  FIX  SI:EXP2

SI:ARITHMETIC-FUNCTION-FIX-FLOAT:  (P.C. = 7)
   Arg 0 (F): -1e

FIX:  (P.C. = 16)
   Arg 0 (X): -1e

SI:EXP2:  (P.C. = 6)
   Arg 0 (N): -1e

EXP:  (P.C. = 26)
   Arg 0 (X): -1e

SI:*EVAL:  (P.C. = 370)
   Arg 0 (FORM): (EXP *)

SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 200)
   Rest arg: (:NAME "Lisp Top Level in Lisp Listener 1" :ABORTED-FUNCTION NIL :BEFORE-PROMPT-FUNCTION NIL :READ-FUNCTION NIL :EVAL-FUNCTION NIL ...)

SI:LISP-COMMAND-LOOP:  (P.C. = 115)
   Arg 0 (STREAM): #<LISP-LISTENER Lisp Listener 1 6140000 exposed>
   Rest arg: (:NAME "Lisp Top Level in Lisp Listener 1")

SI:LISP-TOP-LEVEL1:  (P.C. = 22)
   Arg 0 (TERMINAL-IO-initialization): #<LISP-LISTENER Lisp Listener 1 6140000 exposed>

Rest of stack:
SI:LISP-TOP-LEVEL:  (P.C. = 7)
20-Jun-84 11:01:24-EDT,1245;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 20 Jun 84 11:00-EDT
Received: from SCRC-CUYAHOGA by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 52521; Wed 20-Jun-84 10:53:22-EDT
Date: Wednesday, 20 June 1984, 10:52-EDT
From: Robert A. Cassels <Cassels at SCRC-TENEX>
Subject:  never got past arithmetic
To: sr.ehpyc at MIT-SPEECH, BUG-LISPM at MIT-OZ
In-reply-to: The message of 18 Jun 84 23:26-EDT from Scott Cyphers <sr.ehpyc at MIT-SPEECH>
Message-ID: <840620105202.7.CASSELS@CUYAHOGA.SCRC.Symbolics>

    Date: Monday, 18 June 1984, 23:26-EDT
    From: Scott Cyphers <sr.ehpyc at MIT-SPEECH>

    In Release 5.0, Experimental MIT 1.4, Spire-Macros 1.8, Compute 1.3,
    Attribute 1.7, Audio 1.2, Speech-Attributes 1.0, Display 1.12,
    Speech-Layouts 1.8, Experimental Versatec 2.0, Experimental Prtout 1.1,
    Spire 13.0, SpireX 10.3, LexiS 6.3, FEP 18, on Lisp Machine Grizzly (3600):

    (exp -1e) should be 0.0
Right.
    (log 0.0) should optionally be -1e
Right.
    (sqrt 1e) should be 1e
I think it is.  (sqrt +1e) => +1e
    etc.
We haven't had time to do all the special-cases yet.  It would of course
be a lot easier if someone (maybe you?) made a list, so we wouldn't have
to think.
20-Jun-84 17:13:19-EDT,586;000000000000
Received: from SCRC-TENEX by MIT-OZ via Chaosnet; 20 Jun 84 17:12-EDT
Date: Wednesday, 20 June 1984  17:14-EDT
From: David C. Plummer <DCP at SCRC-TENEX>
To:   Robert A. Cassels <Cassels at SCRC-TENEX>
Cc:   BUG-LISPM at MIT-OZ, sr.ehpyc at MIT-SPEECH
Subject:  never got past arithmetic
In-reply-to: The message of 20 Jun 1984 10:52-EDT from Robert A. Cassels <Cassels>

    Date: Wednesday, 20 June 1984, 10:52-EDT
    From: Robert A. Cassels <Cassels at SCRC-TENEX>

        (log 0.0) should optionally be -1e
    Right.
(log -0.0) should optionally be #C(-1e #.pi)
20-Jun-84 17:35:05-EDT,1147;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 20 Jun 84 17:34-EDT
Received: from SCRC-MISSISSIPPI by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 52780; Wed 20-Jun-84 17:35:38-EDT
Date: Wednesday, 20 June 1984, 17:34-EDT
From: James E. O'Dell <jim at SCRC-CUPID>
Subject:  never got past arithmetic
To: DCP at SCRC-TENEX
Cc: Cassels at SCRC-TENEX, BUG-LISPM at MIT-OZ, sr.ehpyc at MIT-SPEECH
In-reply-to: The message of 20 Jun 84 17:14-EDT from David C. Plummer <DCP at SCRC-TENEX>
Message-ID: <840620173414.4.JIM@MISSISSIPPI.SCRC.Symbolics>
Reply-to: Jim at SCRC-STONY-BROOK

    Date: Wednesday, 20 June 1984  17:14-EDT
    From: David C. Plummer <DCP@SCRC-TENEX>

	Date: Wednesday, 20 June 1984, 10:52-EDT
	From: Robert A. Cassels <Cassels at SCRC-TENEX>

	    (log 0.0) should optionally be -1e
	Right.
    (log -0.0) should optionally be #C(-1e #.pi)
I'd be careful with this stuff, it can get complicated quick.
    (log -0.0) should optionally be 
    #C(-1e #.(times odd-arbitrary-integer pi))
and then your stuck with the fact that you still only have a floating
point approximation to the answer.
20-Jun-84 17:58:05-EDT,2457;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 20 Jun 84 17:56-EDT
Date: 19 Jun 1984  17:29 PDT (Tue)
Message-ID: <[SRI-NIC].IAN.19-Jun-84 17:29:54>
From: Ian Macky <Ian@SRI-NIC>
To:   David A. Moon <Moon@SCRC-TENEX>
Cc:   BUG-LISPM@MIT-OZ, bug-twenex@MIT-OZ, Eugene Ciccarelli <ECC@MIT-OZ>
Subject: QSEND
In-reply-to: Msg of 19 Jun 1984 19:27-EDT from David A. Moon <Moon at SCRC-TENEX>

    Date: Tuesday, 19 June 1984, 19:27-EDT
    From: David A. Moon <Moon at SCRC-TENEX>

        Date: Friday, 15 June 1984, 00:37-EDT
        From: Eugene Ciccarelli <ECC at MIT-OZ>

        In ZWEI in System 98.60, CADR 3.7, ZMail 53.17, MIT-Specific 22.1,
        microcode 309, gc@36, on Lisp Machine Two:

        QSEND (and Converse) gives no indication of a refusal to accept
        at the other end.  E.g., if FOO@OZ has @REFUSE SYSTEM-MESSAGES
        set, then sending to FOO returns just as if it got to FOO.  But,
        actually, FOO never sees the message.

        Is this just some limitation of the SEND (or whatever) server? --
        that you can only find out whether it got to the host, not
        whether it got to the user?

    This must be a problem with the Tops-20 SEND server.  It's even better
    on SPEECH; not only does the server not tell its client that the message
    could not be delivered because messages were being refused, it actually
    goes ahead and delivers the message anyway!

    I don't know what @REFUSE SYSTEM-MESSAGES does.

It's as much a problem with MC's send server, it seems, which gets me
out of nothing since I wrote that one, too.

The problem is that the SEND protocol does not allow for any final
confirmation of delivery (plug here for converting over to CONVERSE
protocol).  There is a one-time recipient check when the RFC is
received, and the connection's either accepted and there is no further
control communication, or it's rejected.  If it's accepted, and the
message cannot be delivered after all, you're screwed.  Period.

On MC, the send server blows it in that it doesn't check if you're
gagged or not before accepting the connection.  On OZ, it's the same
thing: it needs to check the refuse-system-message.  I'll fix both
of them.

					-Luzer

PS & Plug#2: would some kind TWENEX monitor person add another similar
bit for refuse sends?  I think I tried that once, but it was probably
vile and disgusting and ought to be done right.
20-Jun-84 19:06:58-EDT,1362;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 20 Jun 84 19:06-EDT
Date: 20 Jun 1984  19:07 EDT (Wed)
Message-ID: <SR.EHPYC.12025060035.BABYL@MIT-SPEECH>
From: Scott Cyphers <SR.EHPYC@MIT-SPEECH>
To:   Jim@SCRC-STONY-BROOK
Cc:   BUG-LISPM@MIT-OZ, Cassels@SCRC-TENEX, DCP@SCRC-TENEX
Subject:  never got past arithmetic
In-reply-to: Msg of 20 Jun 1984 17:34-EDT from James E. O'Dell <jim at SCRC-CUPID>

You're right, SQRT does work.  The last time I had tried, I think it
didn't.

Log of anything is completely hopeless in the complex case unless you
restrict yourself to principle value, in which case you're okay.  But
then maybe it should be (log #C(-0.0 0.0)) should be #C(-1e ),
instead of (log -0.0), that is don't automatically mix reals and
complexes unless
SI:*MAKE-A-COMPLEX-NUMBER-IF-YOU-HAVE-TO-TO-AVOID-AN-ERROR* is set to
T.  Only in the last few days have I aquired a common lisp manual, so
I'm not sure what it says about this.

Other functions I can think of are ATAN and ^

Until the other day, my main use of infinity has been for things like
initial values for min and max types of things, since they simplify
the code (no need to check for NIL and things like that).  Then I had
to deal with logs of probabilities and there were these 0 probability
things and it didn't work to go to the probability itself.
21-Jun-84 18:43:29-EDT,1981;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 21 Jun 84 13:39-EDT
Received: from SCRC-CUYAHOGA by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 53223; Thu 21-Jun-84 11:54:59-EDT
Date: Thursday, 21 June 1984, 11:54-EDT
From: Robert A. Cassels <Cassels at SCRC-TENEX>
Subject:  never got past arithmetic
To: SR.EHPYC at MIT-SPEECH, Jim at SCRC-STONY-BROOK
Cc: BUG-LISPM at MIT-OZ, Cassels at SCRC-TENEX, DCP at SCRC-TENEX
In-reply-to: <SR.EHPYC.12025060035.BABYL@MIT-SPEECH>
Message-ID: <840621115441.4.CASSELS@CUYAHOGA.SCRC.Symbolics>

    Date: 20 Jun 1984  19:07 EDT (Wed)
    From: Scott Cyphers <SR.EHPYC@MIT-SPEECH>

    You're right, SQRT does work.  The last time I had tried, I think it
    didn't.

    Log of anything is completely hopeless in the complex case unless you
    restrict yourself to principle value, in which case you're okay.  But
    then maybe it should be (log #C(-0.0 0.0)) should be #C(-1e ),
    instead of (log -0.0), that is don't automatically mix reals and
    complexes unless
    SI:*MAKE-A-COMPLEX-NUMBER-IF-YOU-HAVE-TO-TO-AVOID-AN-ERROR* is set to
    T.  Only in the last few days have I aquired a common lisp manual, so
    I'm not sure what it says about this.
CL says the result will be of the same type as the input(s), unless
otherwise noted.  For EXPT, "The result ... can be a complex number,
even when neither argument is complex, if base-number is negative and
power-number is not an integer.  The result is always the principal
complex value."  Similarly for LOG, SQRT....

    Other functions I can think of are ATAN and ^

    Until the other day, my main use of infinity has been for things like
    initial values for min and max types of things, since they simplify
    the code (no need to check for NIL and things like that).  Then I had
    to deal with logs of probabilities and there were these 0 probability
    things and it didn't work to go to the probability itself.
23-Jun-84 04:33:35-EDT,478;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 23 Jun 84 04:32-EDT
Date: Thursday, 21 June 1984, 23:00-EDT
From:  <CYPHER at MIT-SPEECH>
Subject: Namespaces and LM15
To: bug-lispm at MIT-OZ

All you people who have been conspiring to keep LM15 broken:  We give
up.  Speech volunteers Goldy, a 3600, as a primary server for MIT.
There's a directory GOLDY:>NAMESPACE> for putting the files into.  Are
there any objections to this?  Can it be done without a working LM15?
23-Jun-84 04:34:14-EDT,3208;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 23 Jun 84 04:33-EDT
Date: Thursday, 21 June 1984, 15:45-EDT
From:  <ROB at MIT-SPEECH>
Subject: make-system lossage
To: BUG-LISPM at MIT-OZ

In Release 5.0, Experimental MIT 1.4, Spire-Macros 1.8,
Experimental Versatec 2.0, Print 34.3, Experimental Versatec-Spool 2.1,
ZOO 1.2, FEP 18, on Lisp Machine Goldilocks (3600):

What's going on here guys?  I can't seem to compile this system (with
component systems).

>>Error: The system directory file of #<SYSTEM Alexis-Television 13274340> has been changed.  It should be GOLDY:>s>patch>alexis>atv>calc>Pop-Up-Calculator.patch-dir.3,
         but currently is NIL
While in the function SI:WRITE-SYSTEM-DIRECTORY  SI:INCREMENT-PATCH-SYSTEM-MAJOR-VERSION  SI:INCREMENT-COMPILED-VERSION-1

SI:WRITE-SYSTEM-DIRECTORY:  (P.C. = 24)
   Arg 0 (SYSTEM): "Alexis-Television"
   Arg 1 (OLD-FILE): #<LMFS-PATHNAME "GOLDY:>s>patch>alexis>atv>calc>Pop-Up-Calculator.patch-dir.3">
   Arg 2 (PLIST): ("Pop-Up-Calculator" :LATEST 4.)
   Arg 3 (VERSIONS): NIL
   Local 4 (MAP-RESULT): NIL
   Local 5 (MAP-RESULT): NIL
   Local 6 (FILE): #<LMFS-PATHNAME "GOLDY:>s>patch>alexis>atv>Alexis-Television.patch-dir">
   Local 7 (OFILE): NIL

SI:INCREMENT-PATCH-SYSTEM-MAJOR-VERSION:  (P.C. = 35)
   Arg 0 (NAME): "Alexis-Television"
   Arg 1 (STATUS): :EXPERIMENTAL

SI:INCREMENT-COMPILED-VERSION-1:  (P.C. = 21)

SI:DO-FILE-TRANSFORMATIONS:  (P.C. = 242)

SI:PERFORM-TRANSFORMATIONS:  (P.C. = 166)
   Arg 0 (TRANSFORMATION-LIST): ((#<TRANSFORMATION COMPILE 13277024> ATV NIL #<SYSTEM Alexis-Television 13274340>) (#<TRANSFORMATION COMPILE 13304047> CALC (#<TRANSFORMATION FASLOAD 13277033>) #<SYSTEM Pop-Up-Calculator 13303402>) (#<TRANSFORMATION INCREMENT-COMPILED-VERSION 13304065> CALC (#<TRANSFORMATION FASLOAD 13277033>) #<SYSTEM Pop-Up-Calculator 13303402>) (#<TRANSFORMATION COMPILE 13277051> ATV NIL #<SYSTEM Alexis-Television 13274340>) (#<TRANSFORMATION INCREMENT-COMPILED-VERSION 13277067> ATV NIL #<SYSTEM Alexis-Television 13274340>))

SI:PERFORM-TRANSFORMATIONS:  (P.C. = 64)
   Arg 0 (TRANSFORMATION-LIST): ((#<TRANSFORMATION LOAD-BFD 13275320> ATV NIL #<SYSTEM Alexis-Television 13274340>) (#<TRANSFORMATION FASLOAD 13277033> ATV NIL #<SYSTEM Alexis-Television 13274340>) (#<TRANSFORMATION LOAD-BFD 13304004> CALC (#<TRANSFORMATION FASLOAD 13277033>) #<SYSTEM Pop-Up-Calculator 13303402>) (#<TRANSFORMATION FASLOAD 13304056> CALC (#<TRANSFORMATION FASLOAD 13277033>) #<SYSTEM Pop-Up-Calculator 13303402>) (#<TRANSFORMATION INCREMENT-LOADED-VERSION 13304074> CALC (#<TRANSFORMATION FASLOAD 13277033>) #<SYSTEM Pop-Up-Calculator 13303402>) (#<TRANSFORMATION FASLOAD 13277060> ATV NIL #<SYSTEM Alexis-Television 13274340>) (#<TRANSFORMATION INCREMENT-LOADED-VERSION 13277076> ATV NIL #<SYSTEM Alexis-Television 13274340>))

MAKE-SYSTEM:  (P.C. = 222)
   Arg 0 (SYSTEM): ATV
   Rest arg (KEYWORDS): (:COMPILE :NOCONFIRM)

SI:*EVAL:  (P.C. = 370)
   Arg 0 (FORM): (MAKE-SYSTEM (QUOTE ATV) :COMPILE :NOCONFIRM)

Rest of stack:
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 200)
SI:LISP-COMMAND-LOOP:  (P.C. = 115)
SI:LISP-TOP-LEVEL1:  (P.C. = 22)
SI:LISP-TOP-LEVEL:  (P.C. = 7)
23-Jun-84 04:46:32-EDT,1719;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 23 Jun 84 04:45-EDT
Date: Thursday, 21 June 1984, 09:03-EDT
From:  <ALAN at MIT-MC>
Subject: Auto Fill broken
To: BUG-LISPM at MIT-OZ

In Release 5.0, Experimental MIT 1.4, FEP 18, on Lisp Machine Jimi Hendrix (3600):

My fill prefix was "   ".  I was in auto fill mode.  I believe the last
character I typed was the space after the word "do", thus I was positioned
just before the "}" when the auto fill happened.

>>Error: The index 3 is greater than the length of the line ""
While in the function ZWEI:MOVE-BP  ZWEI:AUTO-FILL-HOOK  ZWEI:PROCESS-COMMAND-CHAR

ZWEI:MOVE-BP:  (P.C. = 35)
   Arg 0 (BP): ("\comment{This is actually bogus.  First off, the simulator has nothing to do }" 115 :MOVES)
   Arg 1 (LINE): ""
   Arg 2 (INDEX): 3
   Local 3 (OLINE): "\comment{This is actually bogus.  First off, the simulator has nothing to do }"

ZWEI:AUTO-FILL-HOOK:  (P.C. = 360)
   Arg 0 (CHAR): 40

ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 55)
   Arg 0 (CH): 40

(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 200)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 37132314>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:EDITOR -- 11. IV's, 0. FL's 17674377>
   Arg 2 (OPERATION): :EDIT
   --Defaulted args:--
   Arg 3 (TOP-LEVEL-P): T
   Arg 4 (DESCRIPTION): NIL

(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 41)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 37132314>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:TOP-LEVEL-EDITOR -- 12. IV's, 1. FL's 17674350>
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)

SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
   --Defaulted args:--
   Arg 0 (IGNORE): NIL
23-Jun-84 05:43:49-EDT,358;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 23 Jun 84 05:43-EDT
Date: Friday, 22 June 1984, 16:29-EDT
From: Roland Ouellette <Roly at MIT-MC>
Subject: cadr-20
To: BUG-LISPM at MIT-OZ

In Release 5.0 [Beta Test rev 7], Experimental Boxer 1.0,
Educational Computing Group, on Lisp Machine Joe Louis (3600):

Could we get cadr-20 back onto chaos?

23-Jun-84 20:41:53-EDT,1067;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 23 Jun 84 20:41-EDT
Date: Saturday, 23 June 1984, 20:42-EDT
From: Robert Kassel <rob at MIT-OZ>
Subject: systems and distribution tapes
To: BUG-LISPM at MIT-OZ

In Release 5.0, Experimental MIT 1.4, Spire-Macros 1.8, Compute 1.4,
Attribute 1.8, Audio 1.2, Speech-Attributes 1.1, Display 1.12,
Speech-Layouts 1.8, Experimental Versatec 2.0, Experimental Prtout 1.1,
Spire 13.0, SpireX 10.3, LexiS 6.3, ZOO 1.2,
Experimental Pop-Up-Calculator 1.0, Experimental Alexis-Television 1.0,
FEP 18, on Lisp Machine Grizzly (3600):

If you define a system with the :name option, that name is used for the
system patch directories.  It is not the "symbolic" name of the system,
which is used by dis:write-distribution-tape to find the patch
directories.  Yow!  Makeupyourmindandsendmethepatch.

BTW: dis:write-distribution-tape should know that when you specify a
system with component systems, it is dumping files from those component
systems and so should dump the component systems' patch directories,
etc.
23-Jun-84 22:29:03-EDT,4703;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 23 Jun 84 22:28-EDT
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 54103; Sat 23-Jun-84 22:29:45-EDT
Date: Saturday, 23 June 1984, 22:28-EDT
From: David A. Moon <Moon at SCRC-TENEX>
Subject: Dumping circular structures
To: GAVAN at MIT-OZ, Scott Cyphers <SR.EHPYC at MIT-SPEECH>,
    Jonathan L. Balgley <jlb at SCC-WAIKATO>
Cc: bug-lispm at MIT-OZ
In-reply-to: The message of 15 Jun 84 05:17-EDT from GAVAN at MIT-OZ,
             <SR.EHPYC.12023653671.BABYL@MIT-SPEECH>,
             <GAVAN.12023894760.BABYL@MIT-OZ>,
             <SR.EHPYC.12023983557.BABYL@MIT-SPEECH>,
             The message of 17 Jun 84 14:26-EDT from Jonathan L. Balgley <jlb at SCC-WAIKATO>
Message-ID: <840623222839.8.MOON@EUPHRATES.SCRC.Symbolics>

    Date: Friday, 15 June 1984, 05:17-EDT
    From:  <GAVAN at MIT-OZ>

    ;;I would like to dump a lot of structure which includes many different flavors,
    ;;so I wrote a fasd-mixin that would presumably to the job.  Well, it almost does it.
    ;;Here's the screw.  On loading a dumped structure using objects with the
    ;;fasd-mixin, some of the objects (never the top-level one) can acquire
    ;;exceedingly random instance variables.

    Date: 15 Jun 1984  10:22 EDT (Fri)
    From: Scott Cyphers <SR.EHPYC@MIT-SPEECH>

    It seems a bug that fasl/fasd doesn't catch this and just does
    something instead of signalling an error.  

It is a bug and it's fixed in the development system and in a future release.
It is certainly unfortunate that the system got to you before this bug was found,
since otherwise it would have been obvious what the problem was.

					       But if you think about it
    for a while, you'll see that flavors are a real pain to dump when they
    have circular data structures because you have to do the make-instance
    before you can refer to them, unless you get really clever, which
    would probably slow things down in the normal case.

    Date: Sat, 16 Jun 1984  08:26 EDT
    From: GAVAN@MIT-OZ

    I understand.  But I don't understand why there couldn't be some sort
    of placeholder (say a gensym) used to mark those places where the
    something doesn't yet exist.  Then, just before the load finishes,
    those placeholders could be replaced by the right thing.

You can't always find all the places where the placeholders are, to replace them.
For example, when dumping and loading flavor instances in the way that was in
your original message, if the value of one of the instance variables is a placeholder
then the load system would know that the placeholder was in your list of initial
values for instance variables, but wouldn't know that you had picked up the placeholder
and dropped it down into the instance with set-in-instance.

    Date: 16 Jun 1984  16:34 EDT (Sat)
    From: Scott Cyphers <SR.EHPYC@MIT-SPEECH>

    What would probably be best is to have two versions of FASD, a simple
    one like the current one, and a hairy one.  The hairy one would be
    slow, but able to dump and reload anything preserving EQness, and the
    fast one wouldn't try so hard.  When I wrote mine, I had the
    additional problem of needing to be able to read and write things on
    3600s and LM2s as well as be able to load in only portions of the data
    while preserving EQness.  You'd be amazed at some of the subtle things
    that can happen.

    I have some stuff that will dump any list structure, no matter how
    intertwined it may be, although it isn't the most efficient
    space-wise, if you want to try something along those lines.  However,
    this would still mean you'd have to list-ize your entire flavor
    structure before you could dump it, and then de-listize it afterwards.

    Date: Sunday, 17 June 1984, 14:26-EDT
    From: Jonathan L. Balgley <jlb at SCC-WAIKATO>

    Lots of customers are asking for something like this.  In the "Advanced
    Lisp Programming" course, I explain the general concepts of how to dump
    objects while maintaining EQness, and then say that they have to write
    their own dumper.  This seems wrong both to me and to the students.

    On the other hand, though, they DO seem to understand the difficulties.
    For example, I showed how to write a dumper for arbitrary structures of
    conses and symbols.  But when they saw all the extra work that it had to
    do to dump a simple circular list, they realized that
    application-specific dumpers might be the right thing.

Yes, this is basically why the system doesn't predefine such a facility currently.

23-Jun-84 23:11:31-EDT,1201;000000000000
Mail-From: GAVAN created at 23-Jun-84 23:10:53
Date: Sat, 23 Jun 1984  23:10 EDT
Message-ID: <GAVAN.12025890744.BABYL@MIT-OZ>
From: GAVAN@MIT-OZ
To:   "David A. Moon" <Moon@SCRC-TENEX>
Cc:   bug-lispm@MIT-OZ, "Jonathan L. Balgley" <jlb@SCC-WAIKATO>,
      Scott Cyphers <SR.EHPYC@MIT-SPEECH>
Subject: Dumping circular structures
In-reply-to: Msg of 23 Jun 1984 22:28-EDT from David A. Moon <Moon at SCRC-TENEX>

    Date: Saturday, 23 June 1984, 22:28-EDT
    From: David A. Moon <Moon at SCRC-TENEX>

        Date: 15 Jun 1984  10:22 EDT (Fri)
        From: Scott Cyphers <SR.EHPYC@MIT-SPEECH>

        It seems a bug that fasl/fasd doesn't catch this and just does
        something instead of signalling an error.  

    It is a bug and it's fixed in the development system and in a
    future release. 

Since I know where the circularities are (were) in the structures I'm
loading, I can easily fix them after loading by doing a map-hash.  In
other words, I'm depending on the fact that no error is signaled when
circularities are dumped/loaded.  Hopefully, in the future release I
will be able to stifle the error signal by setting a special variable
or something.  
24-Jun-84 00:18:38-EDT,585;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 24 Jun 84 00:18-EDT
Date: Sunday, 24 June 1984, 00:18-EDT
From: Henry Lieberman <Henry at MIT-OZ>
Subject: Suggestion
To: BUG-LISPM at MIT-OZ

In Release 5.0, Experimental MIT 1.4, FEP 18, on Lisp Machine Apiary-5 (3600):

Often, I only need my host OZ to do some little thing, say, send a press file to 
the Dover, retrieve an off-line file, etc. which hardly seems worth setting up a 
Supdup window. It would be nice if we had a Zmacs command Meta-X Tell Host
or something to just pass a text string to the host's monitor.

24-Jun-84 06:14:07-EDT,432;000000000000
Received: from MIT-LISPM-8 by MIT-OZ via Chaosnet; 24 Jun 84 06:13-EDT
Date: Sunday, 24 June 1984, 06:16-EDT
From: Eugene Ciccarelli <ECC at MIT-OZ>
Subject: TYPEP
To: BUG-LISPM at MIT-OZ

In System 98.60, CADR 3.7, ZMail 53.17, MIT-Specific 22.1, microcode 309,
ZM MIT, on Lisp Machine Eight:

(typep "foo" 'string)

returns (NIL *), which while non-nil, is not T.  And T is what the
function is advertised to return.
24-Jun-84 22:59:06-EDT,1703;000000000000
Received: from MIT-LISPM-8 by MIT-OZ via Chaosnet; 24 Jun 84 22:57-EDT
Date: Sunday, 24 June 1984, 22:59-EDT
From: Robert P. Krajewski <RpK at MIT-OZ>
Subject: Suggestion
To: Henry at MIT-OZ
CC: BUG-LISPM at MIT-OZ
In-reply-to: The message of 24 Jun 1984 00:18-EDT from Henry Lieberman <Henry at MIT-OZ>
Message-ID: <[MIT-LISPM-8].6/24/84 22:59:15.RpK>

    Date: Sunday, 24 June 1984, 00:18-EDT
    From: Henry Lieberman <Henry at MIT-OZ>

    Often, I only need my host OZ to do some little thing, say, send a press file to 
    the Dover, retrieve an off-line file, etc. which hardly seems worth setting up a 
    Supdup window. It would be nice if we had a Zmacs command Meta-X Tell Host
    or something to just pass a text string to the host's monitor.

Well, there is now a :SUBMIT open to OPEN.  OZ (maybe other Twenices) and VMS
Chaos file servers currently understand it.  The file that is written will be
submitted as a batch job for immediate execution.

Here is an example of its use.  It should work in both Manly MIT and Brand S
systems.  The description of the feature in the Symbolics file protocol
document implies that :DIRECTION must be :OUT to work, although it would be
nice if one could submit an already-existing file to the machine.

(DEFUN RETRIEVE-TWENEX-FILE (F) 
  "Submit a batch job that will retrieve the file F" 
  (SETQ F (FS:PARSE-PATHNAME F))
  (WITH-OPEN-FILE (S (SEND (SEND (SEND (SEND F :HOST) :SAMPLE-PATHNAME) 
				 :HOMEDIR)
			   :NEW-PATHNAME :NAME "_RETRIEVE" 
			   :TYPE "CTL" :VERSION :NEWEST)
		     :DIRECTION :OUTPUT
		     :TEMPORARY T
		     :SUBMIT T)
    (FORMAT S "@RETRIEVE ~A~%" (SEND F :STRING-FOR-HOST))))
25-Jun-84 13:00:16-EDT,1600;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 25 Jun 84 12:59-EDT
Date: Monday, 25 June 1984, 12:00-EDT
From: Henry Lieberman <Henry at MIT-OZ>
Subject: Solution to "Tell Host" 
To: Bug-Lispm at MIT-OZ


Thanks. I was able to write the Meta-X Tell Host command as follows 
(Works with Oz at least...)

(DEFCOM COM-TELL-HOST
        "Pass the string along as a command for the host"
        ()
        (WITH-OPEN-FILE (S (SEND (FS:USER-HOMEDIR)
                                 :NEW-PATHNAME
                                 :NAME "_Lispm" 
                                 :TYPE "Ctl" :VERSION :NEWEST)
                           :DIRECTION :OUTPUT
                           ;; :TEMPORARY T
                           :SUBMIT T)
                        (FORMAT S (TYPEIN-LINE-READLINE "Type a command for ~A"
                                                        (SEND FS:USER-LOGIN-MACHINE
                                                              ':STRING-FOR-PRINTING))))
        (TYPEIN-LINE "Type Meta-X View Host Response to see what happened")
        DIS-NONE)

(DEFCOM COM-VIEW-HOST-RESPONSE
        "See the response from the most recent command to the host"
        ()
        (LET ((RESPONSE-FILE (SEND (SEND (FS:USER-HOMEDIR)
                                         :NEW-PATHNAME
                                         :NAME "_Lispm" 
                                         :TYPE "Log" :VERSION :NEWEST)
                                   ':TRUENAME)))
             (IF (NOT (NULL RESPONSE-FILE)) (VIEWF RESPONSE-FILE)))
        DIS-NONE)
25-Jun-84 13:25:56-EDT,737;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 25 Jun 84 13:25-EDT
Date: Monday, 25 June 1984, 12:26-EDT
From: Daniel Weise <DANIEL at MIT-MC>
Subject: still buggy atfer all these years....
To: BUG-LISPM at MIT-OZ

In Release 5.0, Experimental MIT 1.4, FEP 18, on Lisp Machine Frank Sinatra (3600):

        Date: Saturday, 25 February 1984, 18:06-EST
        From: Daniel Weise <DANIEL at MIT-MC>
  
        In Release 5.0 [Beta Test rev 4], COLOR 5.1, imperial purple, on Lisp Machine Buddy Holly (3600):
  
        In Zmail when I do M-X View Mail it insists on showing me my MC mail twice.
        Once would be good enough.

Hey folks, it's four months and a real release later and the bug is still there.

Daniel
25-Jun-84 23:17:42-EDT,2474;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 25 Jun 84 23:17-EDT
Date: Friday, 15 June 1984, 18:44-EDT
From: sr.ehpyc at MIT-SPEECH
Sender: SR.KIM at MIT-SPEECH
Subject: Bug in si:page-array-calculate-bounds
To: BUG-LISPM at MIT-OZ

In Release 5.0 [Beta Test rev 7], Spire-Macros 1.8, Compute 1.4,
Attribute 1.8, Audio 1.2, Speech-Attributes 1.1, Display 1.12,
Speech-Layouts 1.8, Experimental Versatec 2.0, Experimental Prtout 1.1,
Spire 13.0, SpireX 10.3, ZOO 1.2, on Lisp Machine Yogi (LM-2):

This function should be changed to the following (changes in lower case)
Although the old version works on a 3600, it can't possibly work on a
Cadr when the array crosses the center of memory.

(DEFUN PAGE-ARRAY-CALCULATE-BOUNDS (ARRAY FROM TO)
  (SETQ ARRAY (FOLLOW-STRUCTURE-FORWARDING ARRAY))
  (PROG DONE (NDIMS TYPE START END SIZE ELTS-PER-Q)
    (SETQ NDIMS (ARRAY-/#-DIMS ARRAY)
	  TYPE (ARRAY-TYPE ARRAY))
    (OR ( (LENGTH FROM) NDIMS)
	(FERROR "Too many dimensions in starting index ~S" FROM))
    (OR ( (LENGTH TO) NDIMS)
	(FERROR "Too many dimensions in ending index ~S" TO))
    (SETQ START (OR (NTH (1- NDIMS) FROM) 0)
	  END (1- (OR (NTH (1- NDIMS) TO) (ARRAY-DIMENSION-N NDIMS ARRAY))))
    (DO ((I (1- NDIMS) (1- I))
	 (DIM))
	((ZEROP I))
      (SETQ START (+ (* START (SETQ DIM (ARRAY-DIMENSION-N I ARRAY)))
		     (OR (NTH (1- I) FROM) 0))
	    END (+ (* END DIM)
		   (1- (OR (NTH (1- I) TO) DIM)))))
    (SETQ END (1+ END))		;Convert from inclusive upper bound to exclusive
    (SETQ SIZE (- END START))
    (DO ((P))
	((ZEROP (%P-LDB-OFFSET %%ARRAY-DISPLACED-BIT ARRAY 0)))
      (SETQ NDIMS (%P-LDB-OFFSET %%ARRAY-NUMBER-DIMENSIONS ARRAY 0))
      (SETQ P
	    (%MAKE-POINTER-OFFSET DTP-LOCATIVE ARRAY
				  (+ NDIMS (%P-LDB-OFFSET %%ARRAY-LONG-LENGTH-FLAG ARRAY 0))))
      (AND (NOT (ZEROP (%P-FLAG-BIT P)))		;Index offset
	   (SETQ START (+ START (%P-CONTENTS-OFFSET P 2))))
      (SETQ ARRAY (%P-CONTENTS-OFFSET P 0))
      (OR (ARRAYP ARRAY)
	  (RETURN-FROM DONE NIL)))
    (SETQ ELTS-PER-Q (CDR (ASSOC TYPE ARRAY-ELEMENTS-PER-Q)))
    (SETQ START (%make-pointer-offset
		  dtp-fix array
		  (+ ndims (%p-ldb-offset %%array-long-length-flag array 0)
		     (if (plusp elts-per-q)
			 (// start elts-per-q)
			 (* start (minus elts-per-q)))))
	  SIZE (IF (PLUSP ELTS-PER-Q) (// (+ SIZE ELTS-PER-Q -1) ELTS-PER-Q)
		   (* SIZE (MINUS ELTS-PER-Q))))
    (RETURN-FROM DONE ARRAY START SIZE)))
26-Jun-84 00:09:19-EDT,2046;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 26 Jun 84 00:08-EDT
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 54851; Tue 26-Jun-84 00:10:15-EDT
Date: Tuesday, 26 June 1984, 00:08-EDT
From: "(probably) David C. Plummer" <DCP at SCRC-TENEX>
Subject: Bug in si:page-array-calculate-bounds
To: sr.ehpyc at MIT-SPEECH, BUG-LISPM at MIT-OZ
cc: Maint at SCRC-TENEX
In-Reply-To: The message of 15 Jun 84 18:44-EDT from sr.ehpyc at MIT-SPEECH
Message-ID: <840626000844.2.NFEP@NEPONSET.SCRC.Symbolics>

    Date: Friday, 15 June 1984, 18:44-EDT
    From: sr.ehpyc at MIT-SPEECH

    In Release 5.0 [Beta Test rev 7], Spire-Macros 1.8, Compute 1.4,
    Attribute 1.8, Audio 1.2, Speech-Attributes 1.1, Display 1.12,
    Speech-Layouts 1.8, Experimental Versatec 2.0, Experimental Prtout 1.1,
    Spire 13.0, SpireX 10.3, ZOO 1.2, on Lisp Machine Yogi (LM-2):

    This function should be changed to the following (changes in lower case)
    Although the old version works on a 3600, it can't possibly work on a
    Cadr when the array crosses the center of memory.

    (DEFUN PAGE-ARRAY-CALCULATE-BOUNDS (ARRAY FROM TO)

Yup, your diagnosis is correct.  I'm not going to fix this in the source
for these reasons:
	(1) The 5.2 patch freeze has already gone in.
	(2) I don't expect there to be a 5.3 patch release for fixing
	    bugs like this; we will be too busy worrying about Release
	    6.
	(3) We (99.99999%) won't be building a world for the
	    LM-2/CADR for Release 6.
If Maint disagrees with me, I'll fix the LM-2 version.  The 3600 source
is much more readable and more correct (and happens to be the new LM-2
version since last December or so).  Also, using %MAKE-POINTER-OFFSET
DTP-FIX shouldn't really be used.  It happens to work on both the CADR
and 3600, but it seems (to me) to be distasteful to make a "pointer" of
an "immediate" object.  Anyway, you should probably use %24-bit-plus to
construct the number.  You could make this an MIT patch, I guess.
26-Jun-84 15:51:43-EDT,989;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 26 Jun 84 15:50-EDT
Received: from SCRC-PEACE by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 55174; Tue 26-Jun-84 15:52:56-EDT
Date: Tuesday, 26 June 1984, 15:51-EDT
From: Charles Hornig <Hornig at SCRC-STONY-BROOK>
Subject: DIAL:
To: PONDY at MIT-PYGMALION, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 30 May 84 09:57-EDT from PONDY at MIT-PYGMALION
Message-ID: <840626155152.6.HORNIG@PEACE.SCRC.Symbolics>

    Date: Wednesday, 30 May 1984, 09:57-EDT
    From:  <PONDY at MIT-PYGMALION>

    In Release 5.0 [Beta Test rev 7], FEP 18, on Lisp Machine Apiary-4 (3600):

    It is an incredible pain for the system to give an error whenever it does anything
    to do with the network (like booting, loging in, connecting to OZ, whatever)
    just because some non-existant host called DIAL is messed up somewhere.  Why 
    can't this be fixed permanently?

This has been fixed in the development system.

26-Jun-84 15:53:26-EDT,975;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 26 Jun 84 15:51-EDT
Received: from SCRC-PEACE by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 55176; Tue 26-Jun-84 15:53:54-EDT
Date: Tuesday, 26 June 1984, 15:52-EDT
From: Charles Hornig <Hornig at SCRC-STONY-BROOK>
Subject: Namespace Lossage
To: kwh at MIT-OZ, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 23 May 84 14:06-EDT from kwh at MIT-OZ
Message-ID: <840626155250.7.HORNIG@PEACE.SCRC.Symbolics>

    Date: Wednesday, 23 May 1984, 14:06-EDT
    From:  <kwh at MIT-OZ>

    In Release 5.0 [Beta Test rev 7], FEP 18, on Lisp Machine Jim Morrison (3600):

    This happend while booting on this machine... (no other noticeably extenuating circumstances)

    >>Error: The NAMESPACE named DIAL was not found.
    While in the function NETI:FIND-OBJECT-NAMED-IN-NAMESPACE  NETI:PARSE-NAME  (:INTERNAL (:PROPERTY :NAME NETI:PRIMITIVE-TYPE) 0)

This has been fixed in the development system.
27-Jun-84 00:44:20-EDT,1316;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 27 Jun 84 00:43-EDT
Date: Wednesday, 27 June 1984, 00:43-EDT
From: Scott Cyphers <sr.ehpyc at MIT-SPEECH>
Subject: Funcall transformations
To: BUG-LISPM at MIT-OZ

In Release 5.0, Experimental MIT 1.4, Spire-Macros 1.8, Compute 1.4,
Attribute 1.8, Audio 1.2, Speech-Attributes 1.1, Display 1.12,
Speech-Layouts 1.8, Experimental Versatec 2.0, Experimental Prtout 1.1,
Spire 13.0, SpireX 10.3, LexiS 6.3, ZOO 1.2, FEP 18, on Lisp Machine Grizzly (3600):

(defun foo (x y)
  (funcall #'f x y))

Is there some reason I am not thinking of for not changing the above into

(defun foo (x y)
  (f x y)) 

when compiling it?  It's intentionally not done for that case, and the only cases
where I can see it might cause a problem are if F is a subst and there is some
name conflict that would happen if F were inline coded the way substs are currently
expanded, or if F were a macro or a special form, in which case the funcall version
would be illegal wheras the transformed version would not be (there are times where
such a behavior would be useful, although somewhat gross).  But all these cases are
easily detected.  By doing the transformation in the valid (?) cases, any other
optimizations may be performed, for example, if F happened to be +.
27-Jun-84 03:24:34-EDT,871;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 27 Jun 84 03:24-EDT
Date: Wednesday, 27 June 1984, 03:25-EDT
From:  <GAVAN at MIT-OZ>
Subject: (:METHOD LISP-SYNTAX-MIXIN :RELEVANT-FUNCTION-NAME)
To: BUG-LISPM at MIT-OZ

In Release 5.0, Experimental MIT 1.4, Experimental RELATUS 116.1, on Lisp Machine Buddy Holly (3600):

In zwei, in (:METHOD LISP-SYNTAX-MIXIN :RELEVANT-FUNCTION-NAME), 
this check on the value of the local variable X

(MEMQ X '(DEFUN DEFMACRO SEND LEXPR-SEND FUNCALL LEXPR-FUNCALL
		APPLY MAP MAPC MAPCAR MAPLIST MAPCAN MAPCON))

should probably be made on the value of a special variable (instead of this
quoted list), so that users who define special forms can keep themselves from
tracing them from inside ZMACS (and probably from doing all sorts of other
bad things, by simply pushing the name of the special form onto the list.

27-Jun-84 10:55:11-EDT,683;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 27 Jun 84 10:54-EDT
Date: Wednesday, 27 June 1984, 10:48-EDT
From:  <TIM at MIT-MC>
Subject: Menu non-deexposure lossage ???
To: BUG-LISPM at MIT-OZ

In Release 5.0, Experimental MIT 1.4, FEP 18, on Lisp Machine 
John Lennon (3600):

This morning as my brain was frying out, I tried to #\c-Abort out of
TV:MENU-CHOOSE  ZWEI:PICK-COMTAB-OR-INDIRECT, and the menu didn't go away!
I had to expicitly deexpose it myself with a (SEND (TV:WINDOW-UNDER-MOUSE)
:DEEXPOSE) Now I can't seem to reproduce it, but I think it showed a "Sheet
Deexpose" wholine state (just like it ough to), and then it just hung.
Bizzare!  Any ideas?
27-Jun-84 15:52:23-EDT,1714;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 27 Jun 84 14:03-EDT
Date: Wednesday, 27 June 1984, 13:58-EDT
From: David Chapman <Zvona at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In Release 5.0, Experimental MIT 1.4, on Lisp Machine Buddy Holly (3600):

Circumstances: I did c-x c-f on this file.  It hung half way through
reading, so I impatiently did neti:(progn (reset) (enable)).  Then I did
<resume> (= retry c-x c-f) to the error that the file had been closed
locally.  It finished reading the file in and closed it properly, but:

>>Trap: The first argument given to the SYS:+-INTERNAL instruction, NIL, was not a number.
While in the function ZWEI:FIND-FILE  ZWEI:COM-FIND-FILE  ZWEI:COMMAND-EXECUTE

ZWEI:FIND-FILE:
   Arg 0 (PATHNAME): #<TOPS20-PATHNAME "OZ:OZ:<ZVONA.LUSER>LOG.TEXT">
   --Defaulted args:--
   Arg 1 (SELECT-P): T

ZWEI:COM-FIND-FILE:  (P.C. = 13)

ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
   Arg 0 (COMMAND): ZWEI:COM-FIND-FILE
   Arg 1 (CHAR): 506
   Arg 2 (PREFIX-CHAR): 530
   --Defaulted args:--
   Arg 3 (HOOK-LIST): NIL

ZWEI:MAKE-EXTENDED-COMMAND-INTERNAL:  (P.C. = 77)

SYS:CALL-FUNNY-FUNCTION:  (P.C. = 101)
   Arg 0 (FUNCTION): #<DTP-CLOSURE 14263157>
   Rest arg (ARGS): NIL

Closure of ZWEI:MAKE-EXTENDED-COMMAND-INTERNAL:

ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
   Arg 0 (COMMAND): #<DTP-CLOSURE 14263157>
   Arg 1 (CHAR): 530
   Arg 2 (PREFIX-CHAR): NIL
   Arg 3 (HOOK-LIST): NIL

ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
   Arg 0 (CH): 530

Rest of stack:
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 200)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 41)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
28-Jun-84 00:10:42-EDT,978;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 28 Jun 84 00:09-EDT
Date: Wednesday, 27 June 1984, 23:58-EDT
From: Scott Cyphers <sr.ehpyc at MIT-SPEECH>
Subject: Loop enhancement
To: BUG-lispm at MIT-OZ

In Release 5.0, Experimental MIT 1.4, Spire-Macros 1.8, Compute 1.4,
Attribute 1.8, Audio 1.2, Speech-Attributes 1.1, Display 1.12,
Speech-Layouts 1.8, Experimental Versatec 2.0, Experimental Prtout 1.1,
Spire 13.0, SpireX 10.3, LexiS 6.3, ZOO 1.2, FEP 18, on Lisp Machine Grizzly (3600):

Often when I am maximizing something in a loop, I want to remember where
the maximum came from.  Sometimes I do not even care what the actual
maximum value was.  It would be nice if I could do something like:

(defun tallest-person (people)
  (loop for (name height) in people
	maximize height into max-height with-label name into tallest
	finally do
	(format "~%~a is the tallest person, with a height of ~d"
		max-height tallest)
	(values max-height tallest)))
28-Jun-84 16:37:23-EDT,1542;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 28 Jun 84 16:36-EDT
Received: from SCRC-YANGTZE by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 57015; Thu 28-Jun-84 16:18:18-EDT
Date: Thursday, 28 June 1984, 16:17-EDT
From: Mike McMahon <MMcM at SCRC-TENEX>
To: David Chapman <Zvona at MIT-OZ>
cc: BUG-LISPM at MIT-OZ
In-Reply-To: The message of 27 Jun 84 13:58-EDT from David Chapman <Zvona at MIT-OZ>
Message-ID: <840628161741.3.MMCM@YANGTZE.SCRC.Symbolics>

    Date: Wednesday, 27 June 1984, 13:58-EDT
    From: David Chapman <Zvona at MIT-OZ>

    In Release 5.0, Experimental MIT 1.4, on Lisp Machine Buddy Holly (3600):

    Circumstances: I did c-x c-f on this file.  It hung half way through
    reading, so I impatiently did neti:(progn (reset) (enable)).  Then I did
    <resume> (= retry c-x c-f) to the error that the file had been closed
    locally.  It finished reading the file in and closed it properly, but:

    >>Trap: The first argument given to the SYS:+-INTERNAL instruction, NIL, was not a number.
    While in the function ZWEI:FIND-FILE  ZWEI:COM-FIND-FILE  ZWEI:COMMAND-EXECUTE

    ZWEI:FIND-FILE:
       Arg 0 (PATHNAME): #<TOPS20-PATHNAME "OZ:OZ:<ZVONA.LUSER>LOG.TEXT">
       --Defaulted args:--
       Arg 1 (SELECT-P): T

I wonder why this frame doesn't have a PC.  Also, so far as I can tell,
there isn't a SYS:+-INTERNAL instruction in FIND-FILE at all.  My only
guess is that that instruction was really in an escape function and the
stack was somehow messed up.
28-Jun-84 17:00:37-EDT,1654;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 28 Jun 84 16:58-EDT
Date: Thursday, 28 June 1984, 13:21-EDT
From: David H Kaufman <Sr.Kaufman at MIT-SPEECH>
Sender: sr.kaufman at MIT-SPEECH
Subject: ARPA|YALE not a filecomputer
To: BUG-LISPM at MIT-OZ

In Release 5.0, Experimental MIT 1.4, Spire-Macros 1.8, Compute 1.4,
Attribute 1.8, Audio 1.2, Speech-Attributes 1.1, Display 1.12,
Speech-Layouts 1.8, Experimental Versatec 2.0, Experimental Prtout 1.1,
Spire 13.0, SpireX 10.3, LexiS 6.3, ZOO 1.2, FEP 18, on Lisp Machine Grizzly (3600):

I was logging in.  LM15 is of course down.  One of my userids (listed in the namespace)
is Kaufman@Yale; there should be a way to proceed from this error other than aborting to
the Lisp Listener.

>>Error: The host YALE cannot be a file computer.
While in the function FS:ADD-FILE-COMPUTER  SI:SET-USER-VARIABLES  LOGIN

FS:ADD-FILE-COMPUTER:  (P.C. = 23)
   Arg 0 (HOST): #<HOST YALE 22542664>

SI:SET-USER-VARIABLES:  (P.C. = 66)

LOGIN:  (P.C. = 64)
   Arg 0 (USER-NAME): QUX
   Rest arg: NIL

SI:*EVAL:  (P.C. = 370)
   Arg 0 (FORM): (LOGIN (QUOTE QUX))

SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 200)
   Rest arg: (:NAME "Lisp Top Level in Lisp Listener 1" :ABORTED-FUNCTION NIL :BEFORE-PROMPT-FUNCTION NIL :READ-FUNCTION NIL :EVAL-FUNCTION NIL ...)

SI:LISP-COMMAND-LOOP:  (P.C. = 115)
   Arg 0 (STREAM): #<LISP-LISTENER Lisp Listener 1 6440000 exposed>
   Rest arg: (:NAME "Lisp Top Level in Lisp Listener 1")

SI:LISP-TOP-LEVEL1:  (P.C. = 22)
   Arg 0 (TERMINAL-IO-initialization): #<LISP-LISTENER Lisp Listener 1 6440000 exposed>

SI:LISP-TOP-LEVEL:  (P.C. = 7)
28-Jun-84 17:31:33-EDT,391;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 28 Jun 84 17:30-EDT
Date: Thursday, 28 June 1984, 14:38-EDT
From: David Chapman <Zvona at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In Release 5.0, Experimental MIT 1.4, FEP 18, on Lisp Machine Jimi Hendrix (3600):

When you get an error in MAKE-SYSTEM, there should be a procede option
to punt the MAKE-SYSTEM.  There is only one to retry now.
28-Jun-84 19:07:51-EDT,1938;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 28 Jun 84 19:07-EDT
Received: from SCRC-EUPHRATES by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 62904; Wed 27-Jun-84 16:10:05-EDT
Date: Wednesday, 27 June 1984, 16:09-EDT
From: David A. Moon <Moon at SCRC-TENEX>
Subject: Funcall transformations
To: Scott Cyphers <sr.ehpyc at MIT-SPEECH>
cc: BUG-LISPM at MIT-OZ
In-Reply-To: The message of 27 Jun 84 00:43-EDT from Scott Cyphers <sr.ehpyc at MIT-SPEECH>
Message-ID: <840627160956.3.MOON@EUPHRATES.SCRC.Symbolics>

    Date: Wednesday, 27 June 1984, 00:43-EDT
    From: Scott Cyphers <sr.ehpyc at MIT-SPEECH>

    In Release 5.0, Experimental MIT 1.4, Spire-Macros 1.8, Compute 1.4,
    Attribute 1.8, Audio 1.2, Speech-Attributes 1.1, Display 1.12,
    Speech-Layouts 1.8, Experimental Versatec 2.0, Experimental Prtout 1.1,
    Spire 13.0, SpireX 10.3, LexiS 6.3, ZOO 1.2, FEP 18, on Lisp Machine Grizzly (3600):

    (defun foo (x y)
      (funcall #'f x y))

    Is there some reason I am not thinking of for not changing the above into

    (defun foo (x y)
      (f x y)) 

    when compiling it?  It's intentionally not done for that case, and the only cases
    where I can see it might cause a problem are if F is a subst and there is some
    name conflict that would happen if F were inline coded the way substs are currently
    expanded, or if F were a macro or a special form, in which case the funcall version
    would be illegal wheras the transformed version would not be (there are times where
    such a behavior would be useful, although somewhat gross).  But all these cases are
    easily detected.  By doing the transformation in the valid (?) cases, any other
    optimizations may be performed, for example, if F happened to be +.

I've seen some things somewhere that depend on this -not- doing such optimizations for
things like +.  I can't say whether that is reasonable.
28-Jun-84 20:14:18-EDT,1666;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 28 Jun 84 20:13-EDT
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 57166; Thu 28-Jun-84 20:15:38-EDT
Date: Thursday, 28 June 1984, 20:14-EDT
From: "(probably) David C. Plummer" <DCP at SCRC-TENEX>
Subject: Funcall transformations
To: David A. Moon <Moon at SCRC-TENEX>,
    Scott Cyphers <sr.ehpyc at MIT-SPEECH>
cc: BUG-LISPM at MIT-OZ
In-Reply-To: <840627160956.3.MOON@EUPHRATES.SCRC.Symbolics>
Message-ID: <840628201452.9.NFEP@NEPONSET.SCRC.Symbolics>

    Date: Wednesday, 27 June 1984, 16:09-EDT
    From: David A. Moon <Moon at SCRC-TENEX>

    I've seen some things somewhere that depend on this -not- doing such optimizations for
    things like +.  I can't say whether that is reasonable.
The places in system System that depend on this are:
    SYS;EVAL:
	(DEFUN RETURN (&QUOTE &REST VALS)
	  (FUNCALL #'RETURN-LIST	;This is so RETURN-LIST won't compile open.
		...))
    SYS;LMACRO (3600):
	(DEFUN DEFINE-ESCAPE-FUNCTION-PATCH (...)
	  ...
	  (FUNCALL #'DEFCONST-1 LISP-VARIABLE ESCAPE-PC))
        There is no comment here saying why.
    SYS2;LGC (3600):
	(DEFUN GC-FLIP-AREAS-HACK ()
	  (FUNCALL 'GC-FLIP-AREAS-1)
	  ...)
	This is because the function cell of the symbol can, in some
	circumstances, be bound.  Just doing (gc-flip-areas-1) or using
	#'gc-flip-areas will follow any forwarding pointers at load
	time, not at runtime.  [Moon: I put a comment to this effect in
	the source, though I don't know why the caller of GC-FLIP-AREAS
	dosn't use the sam technique.]

I didn't check the other systems (lmfs, zmail, etc.) 
28-Jun-84 20:17:34-EDT,900;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 28 Jun 84 20:17-EDT
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 57169; Thu 28-Jun-84 20:18:48-EDT
Date: Thursday, 28 June 1984, 20:18-EDT
From: "(probably) David C. Plummer" <DCP at SCRC-TENEX>
Subject: Funcall transformations
To: David A. Moon <Moon at SCRC-TENEX>,
    Scott Cyphers <sr.ehpyc at MIT-SPEECH>
cc: BUG-LISPM at MIT-OZ
In-Reply-To: <840627160956.3.MOON@EUPHRATES.SCRC.Symbolics>
Message-ID: <840628201807.0.NFEP@NEPONSET.SCRC.Symbolics>

    Date: Wednesday, 27 June 1984, 16:09-EDT
    From: David A. Moon <Moon at SCRC-TENEX>

    [Moon: I put a comment to this effect in
    the source, though I don't know why the caller of GC-FLIP-AREAS
    dosn't use the sam technique.]

I took the comment back out, since I'm full of it.  No I really don't
understand the motivation!
28-Jun-84 21:05:28-EDT,3036;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 28 Jun 84 21:03-EDT
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 57183; Thu 28-Jun-84 21:05:29-EDT
Date: Thursday, 28 June 1984, 21:04-EDT
From: David A. Moon <Moon at SCRC-TENEX>
Subject: Funcall transformations
To: "(probably) David C. Plummer" <DCP at SCRC-TENEX>
cc: Scott Cyphers <sr.ehpyc at MIT-SPEECH>, BUG-LISPM at MIT-OZ
In-Reply-To: <840628201452.9.NFEP@NEPONSET.SCRC.Symbolics>,
             The message of 28 Jun 84 20:14-EDT from DCP at SCRC-TENEX,
             <840628201452.9.NFEP@NEPONSET.SCRC.Symbolics>,
             The message of 28 Jun 84 20:18-EDT from DCP at SCRC-TENEX,
             <840628201807.0.NFEP@NEPONSET.SCRC.Symbolics>
Message-ID: <840628210447.2.MOON@EUPHRATES.SCRC.Symbolics>

    Date: Thursday, 28 June 1984, 20:14-EDT
    From: "(probably) David C. Plummer" <DCP at SCRC-TENEX>

	Date: Wednesday, 27 June 1984, 16:09-EDT
	From: David A. Moon <Moon at SCRC-TENEX>

	I've seen some things somewhere that depend on this -not- doing such optimizations for
	things like +.  I can't say whether that is reasonable.
    The places in system System that depend on this are:
	SYS;EVAL:
	    (DEFUN RETURN (&QUOTE &REST VALS)
	      (FUNCALL #'RETURN-LIST	;This is so RETURN-LIST won't compile open.
		    ...))

RETURN-LIST is really a special form, even though it doesn't take any
"quoted arguments"; this hides it from the compiler.

	SYS;LMACRO (3600):
	    (DEFUN DEFINE-ESCAPE-FUNCTION-PATCH (...)
	      ...
	      (FUNCALL #'DEFCONST-1 LISP-VARIABLE ESCAPE-PC))
	    There is no comment here saying why.

SI:DEFCONST-1 is a special form.

	SYS2;LGC (3600):
	    (DEFUN GC-FLIP-AREAS-HACK ()
	      (FUNCALL 'GC-FLIP-AREAS-1)
	      ...)
	    This is because the function cell of the symbol can, in some
	    circumstances, be bound.  Just doing (gc-flip-areas-1) or using
	    #'gc-flip-areas will follow any forwarding pointers at load
	    time, not at runtime.  [Moon: I put a comment to this effect in
	    the source, though I don't know why the caller of GC-FLIP-AREAS
	    dosn't use the sam technique.]

    Date: Thursday, 28 June 1984, 20:18-EDT
    From: "(probably) David C. Plummer" <DCP at SCRC-TENEX>

    I took the comment back out, since I'm full of it.  No I really don't
    understand the motivation!

I think this one was simply to prevent the compiler warning me about
calling an undefined function.  GC-FLIP-AREAS-1 has a dynamically-bound
function cell and normally has no function definition.  This whole bag
of hacks could have been done more tastefully by putting the needed hooks
into the garbage collector in the first place rather than dynamically
binding function cells.

So, in general this FUNCALL #'foo cliche is being used to hide things, usually
special forms, from the compiler.  I recommend phasing out use of this technique
(indeed, I have reasons to believe that it may stop working in a year or so).
29-Jun-84 05:57:21-EDT,5689;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 29 Jun 84 05:57-EDT
Date: Friday, 29 June 1984, 05:48-EDT
From:  <TIM at MIT-MC>
Subject: Edit Screen lossage
To: BUG-LISPM at MIT-OZ

In Release 5.0, Experimental MIT 1.4, FEP 18, on Lisp Machine Jimi Hendrix (3600):

Tried to expand a window.  It looked like the area that it was supposed to expand
into was ambiguous.  It is complaining about the Height, even though it should be
confused about the Width.

+----------------+----+-------------+
|                |    |             |
|                |    |             |
|                |    |             |
|                |    |             |
|                |    |             |
|                |    |G            |
|                +    +-------------+
|                |    |             |
|                |  |             |
|                |    |             |
|                |  |             |
|                |    |   
         |
|E1              |M   |E2           |
+----------------+----+-------------+

   E1 = Just Selected editor frame
   M  = Just Deselected ZMail frame (partially covered by E1)
   G  = Deexposed "Graphics Window" (partially covered by M)
 
 E2 = Exposed editor frame (the one being expanded)
    = Desired direction of expansion

>>Error: Attempt to change height
While in the function (:DEFUN-METHOD TV:SYSTEM-SET-EDGES)  (:METHOD TV:ESSENTIAL-SET-EDGES :SET-EDGES)  (:METHOD ZWEI:MODE-LINE-SUPERIOR-MIXIN :AFTER :CHANGE-OF-SIZE-OR-MARGINS)

(:DEFUN-METHOD TV:SYSTEM-SET-EDGES):  (P.C. = 62)
   Arg 0 (SELF): #<TYPEIN-WINDOW Typein Window 15 1000302 deexposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:ESSENTIAL-SET-EDGES -- 0. IV's, 1. FL's 17243340>
   Arg 2 (OPERATION): :SET-EDGES
   Arg 3 (NEW-LEFT): 2
   Arg 4 (NEW-TOP): 16
   Arg 5 (NEW-RIGHT): 603
   Arg 6 (NEW-BOTTOM): 102
   --Defaulted args:--
   Arg 7 (OPTION): NIL
   Local 8 (NEW-WIDTH): 601
   Local 9 (NEW-HEIGHT): 64
   Local 10 (ERROR): "Attempt to change height"
   Local 11 (WINDOW-TO-BE-DEEXPOSED): NIL
   Local 12 (.QUEUE-LEFT.): T
   Local 13: SYS:UNWIND-PROTECT-TAG
   Local 14: #<DTP-EVEN-PC 20735765>
   Local 15: #<DTP-LOCATIVE 36467625>
   Local 16: #<DTP-LOCATIVE 16500624>
   Local 17: #<DTP-LOCATIVE 36467625>
   Local 18: SYS:UNWIND-PROTECT-TAG
   Local 19: #<DTP-EVEN-PC 20736001>
   Local 20: #<DTP-LOCATIVE 36467625>
   Local 21: #<DTP-LOCATIVE 16500747>
   Local 22 (DONE): NIL
   Local 23 (RESULT): NIL

(:METHOD TV:ESSENTIAL-SET-EDGES :SET-EDGES):  (P.C. = 10)
   Arg 0 (SELF): #<TYPEIN-WINDOW Typein Window 15 1000302 deexposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:ESSENTIAL-SET-EDGES -- 0. IV's, 1. FL's 17243340>
   Arg 2 (OPERATION): :SET-EDGES
   Rest arg (.ARGS.): (2 16 603 102)

(:METHOD ZWEI:MODE-LINE-SUPERIOR-MIXIN :AFTER :CHANGE-OF-SIZE-OR-MARGINS):  (P.C. = 23)
   Arg 0 (SELF): #<ZMACS-MODE-LINE-WINDOW Zmacs Mode Line Window 3 1000177 deexposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:MODE-LINE-SUPERIOR-MIXIN -- 4. IV's, 0. FL's 17110576>
   Arg 2 (OPERATION): :CHANGE-OF-SIZE-OR-MARGINS
   Rest arg (IGNORE): (:LEFT 1 :TOP 1250 :WIDTH 605 :HEIGHT 104)

(:METHOD ZWEI:ZMACS-MODE-LINE-WINDOW :COMBINED :CHANGE-OF-SIZE-OR-MARGINS):  (P.C. = 32)
   Arg 0 (SELF): #<ZMACS-MODE-LINE-WINDOW Zmacs Mode Line Window 3 1000177 deexposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMACS-MODE-LINE-WINDOW -- 0. IV's, 11. FL's 17110636>
   Rest arg (.DAEMON-CALLER-ARGS.): (:CHANGE-OF-SIZE-OR-MARGINS :LEFT 1 :TOP 1250 :WIDTH 605 :HEIGHT 104)

(:DEFUN-METHOD TV:SYSTEM-SET-EDGES):  (P.C. = 342)
   Arg 0 (SELF): #<ZMACS-MODE-LINE-WINDOW Zmacs Mode Line Window 3 1000177 deexposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:ESSENTIAL-SET-EDGES -- 0. IV's, 1. FL's 17110611>
   Arg 2 (OPERATION): :SET-EDGES
   Arg 3 (NEW-LEFT): 1
   Arg 4 (NEW-TOP): 1250
   Arg 5 (NEW-RIGHT): 606
   Arg 6 (NEW-BOTTOM): 1354
   --Defaulted args:--
   Arg 7 (OPTION): NIL

(:METHOD TV:ESSENTIAL-SET-EDGES :SET-EDGES):  (P.C. = 10)
   Arg 0 (SELF): #<ZMACS-MODE-LINE-WINDOW Zmacs Mode Line Window 3 1000177 deexposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:ESSENTIAL-SET-EDGES -- 0. IV's, 1. FL's 17110611>
   Arg 2 (OPERATION): :SET-EDGES
   Rest arg (.ARGS.): (1 1250 606 1354)

(:METHOD ZWEI:ZWEI-FRAME :AFTER :CHANGE-OF-SIZE-OR-MARGINS):  (P.C. = 204)
   Arg 0 (SELF): #<ZMACS-FRAME Zmacs Frame 2 1000117 deexposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZWEI-FRAME -- 3. IV's, 8. FL's 17262402>
   Arg 2 (OPERATION): :CHANGE-OF-SIZE-OR-MARGINS
   Rest arg (IGNORE): (:LEFT 1271 :TOP 0 :WIDTH 607 :HEIGHT 1355)

(:METHOD ZWEI:ZWEI-FRAME :COMBINED :CHANGE-OF-SIZE-OR-MARGINS):  (P.C. = 34)
   Arg 0 (SELF): #<ZMACS-FRAME Zmacs Frame 2 1000117 deexposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZWEI-FRAME -- 3. IV's, 8. FL's 17262402>
   Rest arg (.DAEMON-CALLER-ARGS.): (:CHANGE-OF-SIZE-OR-MARGINS :LEFT 1271 :TOP 0 :WIDTH 607 :HEIGHT 1355)

Rest of stack:
(:DEFUN-METHOD TV:SYSTEM-SET-EDGES):  (P.C. = 342)
(:METHOD TV:ESSENTIAL-SET-EDGES :SET-EDGES):  (P.C. = 10)
TV:EDIT-SCREEN:  (P.C. = 232)
SI:*EVAL:  (P.C. = 370)
(:METHOD TV:MENU-EXECUTE-MIXIN :EXECUTE):  (P.C. = 53)
(:METHOD TV:DYNAMIC-MULTICOLUMN-MOMENTARY-WINDOW-HACKING-PROCESS-RENAMING-MENU :COMBINED :EXECUTE):  (P.C. = 24)
(:METHOD TV:BASIC-MENU :CHOOSE):  (P.C. = 21)
(:METHOD TV:DYNAMIC-MULTICOLUMN-MOMENTARY-WINDOW-HACKING-MENU :COMBINED :CHOOSE):  (P.C. = 34)
TV:CALL-SYSTEM-MENU:  (P.C. = 26)
SI:PROCESS-RUN-FUNCTION-INTERNAL:  (P.C. = 51)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
29-Jun-84 06:08:36-EDT,941;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 29 Jun 84 06:08-EDT
Date: Friday, 29 June 1984, 05:59-EDT
From:  <TIM at MIT-MC>
Subject: Edit Screen lossage, An Addendum
To: BUG-LISPM at MIT-OZ

In Release 5.0, Experimental MIT 1.4, FEP 18, on Lisp Machine Jimi Hendrix (3600):

Wow, you should have seen what happened to the window it tried to expand!
It tried to expand the Zmacs frame "E2" into the whole area to the right
of "E1".  Windows "M" and "G" are now completely obscured, and "E2" looks
like this:

    +----------+----+
    |          |    |
    |          |    |
    |          |    |
    |          |    |
    |          |    |
    |          |    |
    |Zmacs pane|    |
    +----------+    |
    |               |
    |    wtf?       |
    |               |
    +---------------+
    |Minibuffer Area|
    +---------------+

P.S.  If I didn't want "G" obscured, should I have exposed it first?
29-Jun-84 14:28:40-EDT,1183;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 29 Jun 84 14:27-EDT
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 57185; Thu 28-Jun-84 21:08:47-EDT
Date: Thu, 28 Jun 84 21:08 EDT
From: "David A. Moon" <Moon@SCRC-STONY-BROOK.ARPA>
Subject: Suppose I want to integrate?
To: ALAN@MIT-MC.ARPA
cc: BUG-LISPM@MIT-MC.ARPA
In-Reply-To: The message of 7 Jun 84 03:08-EDT from ALAN at MIT-MC
Message-ID: <840628210812.3.MOON@EUPHRATES.SCRC.Symbolics>

    Date: Thu, 7 Jun 84 03:08 EDT
    From:  <ALAN@MIT-MC.ARPA>

    In Release 5.0, Experimental MIT 1.4, FEP 18, on Lisp Machine Jim Morrison (3600):

    When I supdup to MC I notice that there is no way to transmit the character
    #\Integral.  That is, when I hold down the Symbol key and strike "/", a
    program on MC reading from a channel with the %TIFUL bit set recieves 177
    octal, exactly what it would recieve if I had just struck the Rubout key.
    I would expect to recieve %TXTOP+177 for that character.  It there a reason
    for this, or is it just an oversight?

The latest version of the development system (249.39) gave %txtop+177 when I tried
it just now.

29-Jun-84 16:38:49-EDT,918;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 29 Jun 84 16:35-EDT
Date: Friday, 29 June 1984, 16:31-EDT
From: Harry L. Voorhees <HLV at MIT-OZ>
Subject: mapcar'ing defstruct constructors
To: BUG-LISPM at MIT-OZ

In Release 5.0, Experimental MIT 1.4, FEP 18, on Lisp Machine Robot-2 (3600):

Is there any way to mapcar a defstruct contructor (or to force it to be
a function, not a macro)?  For example, after defining,

    (defstruct (fp-slice
                 (:constructor make-fp-slice (scale array)))
      scale
      array)

I cannot do

    (mapcar #'make-fp-slice scale-list array-list).

because make-fp-slice is a macro.

I can do

    (defun make-fp-slice* (scale array) (make-fp-slice scale array))
    (mapcar #'make-fp-slice* scale-list array-list)

but this extra constructor definition seems kind of silly.  Is there
a better way to do this?

Thank you,
Harry Voorhees
29-Jun-84 19:31:01-EDT,1454;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 29 Jun 84 19:29-EDT
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 57647; Fri 29-Jun-84 19:30:46-EDT
Date: Friday, 29 June 1984, 19:29-EDT
From: David A. Moon <Moon at SCRC-TENEX>
Subject: mapcar'ing defstruct constructors
To: Harry L. Voorhees <HLV at MIT-OZ>
cc: BUG-LISPM at MIT-OZ
In-Reply-To: The message of 29 Jun 84 16:31-EDT from Harry L. Voorhees <HLV at MIT-OZ>
Message-ID: <840629192943.4.MOON@EUPHRATES.SCRC.Symbolics>

    Date: Friday, 29 June 1984, 16:31-EDT
    From: Harry L. Voorhees <HLV at MIT-OZ>

    In Release 5.0, Experimental MIT 1.4, FEP 18, on Lisp Machine Robot-2 (3600):

    Is there any way to mapcar a defstruct contructor (or to force it to be
    a function, not a macro)?  For example, after defining,

	(defstruct (fp-slice
		     (:constructor make-fp-slice (scale array)))
	  scale
	  array)

    I cannot do

	(mapcar #'make-fp-slice scale-list array-list).

    because make-fp-slice is a macro.

This is fixed in the Common Lisp definition of DEFSTRUCT, where the constructor
is a callable function.

    I can do

	(defun make-fp-slice* (scale array) (make-fp-slice scale array))
	(mapcar #'make-fp-slice* scale-list array-list)

    but this extra constructor definition seems kind of silly.  Is there
    a better way to do this?

Not yet, but it's coming as part of Common Lisp.
29-Jun-84 19:46:52-EDT,862;000000000000
Received: from MIT-GRIZZLY by MIT-OZ via Chaosnet; 29 Jun 84 19:46-EDT
Date: Friday, 29 June 1984, 19:45-EDT
From: Scott Cyphers <sr.ehpyc at MIT-SPEECH>
Subject: conformal mapping
To: BUG-LISPM at MIT-OZ, bug-lmdoc at SCRC-TENEX

In Release 5.1, Experimental MIT 1.4, Spire-Macros 1.9, Compute 1.4,
Attribute 1.8, Audio 1.2, Speech-Attributes 1.1, Display 1.12,
Speech-Layouts 1.8, Experimental Versatec 2.0, Experimental Prtout 1.1,
Spire 13.0, SpireX 10.3, LexiS 6.3, ZOO 1.2, FEP 18, on Lisp Machine Grizzly (3600):

Either the documentation should be fixed to say the following functions don't work
with conformally mapped arrays, or the functions should be changed to work with
them.  I'm not sure it's worth the overhead to make them work unless there's some
easy way to do it.

Copy-array-contents
Copy-array-contents-and-leader
g-l-p
29-Jun-84 20:21:08-EDT,551;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 29 Jun 84 20:20-EDT
Date: Friday, 29 June 1984, 20:20-EDT
From: David Chapman <Zvona at MIT-OZ>
To: BUG-LISPM at MIT-OZ, bug-pig at MIT-OZ

In Release 5.0, Experimental MIT 1.4, FEP 18, on Lisp Machine Jim Morrison (3600):

I keep ending up with two buffers editing the same file, one of which is
PIG:USRD$:FOO.LSP, and the other is PIG:SYS$DSK:FOO.LSP.  Now, for sure
as hell I never type either of those device names, so they are coming
from inside one of these machines.  Can this be fixed?
29-Jun-84 22:18:43-EDT,1674;000000000000
Received: from SCRC-YUKON by MIT-OZ via Chaosnet; 29 Jun 84 22:17-EDT
Date: Friday, 29 June 1984, 22:15-EDT
From: Robert W. Kerns <RWK at SCRC-YUKON>
Subject: VMS logical names vs LISPM pathname system
To: David Chapman <Zvona at MIT-OZ>
Cc: BUG-LISPM at MIT-OZ, bug-pig at MIT-OZ
In-reply-to: The message of 29 Jun 84 20:20-EDT from David Chapman <Zvona at MIT-OZ>
Message-ID: <840629221550.6.RWK@YUKON.SCRC.Symbolics>

    Date: Friday, 29 June 1984, 20:20-EDT
    From: David Chapman <Zvona at MIT-OZ>
    I keep ending up with two buffers editing the same file, one of which is
    PIG:USRD$:FOO.LSP, and the other is PIG:SYS$DSK:FOO.LSP.  Now, for sure
    as hell I never type either of those device names, so they are coming
    from inside one of these machines.  Can this be fixed?

Not really.  There currently is no way for the Lisp machine to
determine whether they really are the same names.  You might
be able to reduce the problem somewhat by making sure your
SYSUAF entry has default directory field that's appropriate,
since that at least will determine SOME of the pathnames
generated.  If your user directory is on USRD$:, I'd try
calling it USRD$, rather than whatever other logical names
it might have.  If it's already that, try giving it one
of the other names.  Also, if you define your own logical
hosts, careful attention to the device names there can
reduce the problem.

After we see what VMS 4.0 does with logical names, we can
try to come up with a solution to this problem.  It is
likely to involve a fair amount of work, however, on both
the Lispm and the VAX ends, so I would not expect any
quick solutions.
 1-Jul-84 23:14:23-EDT,2828;000000000000
Received: from MIT-LISPM-24 by MIT-OZ via Chaosnet; 1 Jul 84 23:13-EDT
Date: Sunday, 1 July 1984, 23:13-EDT
From: Eugene Ciccarelli <ECC at MIT-OZ>
Subject: SXHASH of package
To: BUG-LISPM at MIT-OZ

In Don't-dump-a-band! Inconsistent (unreleased patches loaded) System 98.65,
CADR 3.7, ZMail 53.17, MIT-Specific 22.2, microcode 309, ZM MIT,
on Lisp Machine Twenty-four:


Insert your description of the circumstances here:


>>TRAP 1312 (SELECTED-METHOD-NOT-FOUND M-A M-C)
No method for message :SXHASH was found in a call to #<DTP-SELECT-METHOD 33071222>.
Backtrace from the debugger:

NAMED-STRUCTURE-INVOKE (P.C. = 162)

 Arg 0 (OPERATION): :SXHASH
 Arg 1 (STRUCTURE): #<Package GLOBAL 41111623>
 Rest arg (ARGS): (NIL)
Local 1 (C): #<DTP-SELECT-METHOD 33071222>


SXHASH (P.C. = 307)

 Arg 0 (X): #<Package GLOBAL 41111623>
   --Defaulted args:--
 Arg 1 (RANDOM-OBJECT-ACTION): NIL
Local 0 (ROT): NIL
Local 1 (HASH): NIL
Local 2 (Y): NIL
Local 3 (X): NIL
Local 4: NIL
Local 5: NIL


SI:EVAL1 (P.C. = 1324)

 Arg 0 (FORM): (SXHASH (PKG-FIND-PACKAGE **))
   --Defaulted args:--
 Arg 1 (NOHOOK): NIL
Local 0 (ARGNUM): 1
Local 1 (TEM): NIL
Local 2 (ENV): NIL
Local 3 (TAIL): NIL
Local 4 (FCTN): #<DTP-FEF-POINTER SXHASH 4227544>
Local 5 (ARG-DESC): 102
Local 6 (NUM-ARGS): 1
Local 7 (CLOSURE-PASSED): NIL
Local 8 (LAMBDA-LIST): NIL
Local 9 (LL): NIL
Local 10 (QUOTE-STATUS): NIL
Local 11 (REST-FLAG): NIL
Local 12 (ARGL): NIL
Local 13: NIL
Local 14: NIL
Local 15 (IGNORE): NIL
Local 16 (ADL): NIL
Local 17 (ITEM): NIL
Local 18 (*SELECTQ-ITEM*): NIL


Additional information supplied with call:
 SYSTEM:ADI-FEXPR-CALL

BLOCK (P.C. = 174)

 Arg 0 (NAME): FOO
 Rest arg (BODY): ((SXHASH **))
Local 1 (TEM): (FOO #<DTP-LOCATIVE 627000>)
Local 2 (BINDFRAME): (BLOCK (FOO #<DTP-LOCATIVE 627000>))
Local 3 (TEM1): (402432 . 1324)
Local 4 (L): ((SXHASH **))
Local 5 (DECLS-ENV): NIL


SI:EVAL1 (P.C. = 1324)

 Arg 0 (FORM): (BLOCK FOO (SXHASH **))
   --Defaulted args:--
 Arg 1 (NOHOOK): NIL
Local 0 (ARGNUM): 1
Local 1 (TEM): NIL
Local 2 (ENV): NIL
Local 3 (TAIL): NIL
Local 4 (FCTN): #<DTP-FEF-POINTER BLOCK 4231053>
Local 5 (ARG-DESC): 12000101
Local 6 (NUM-ARGS): 1
Local 7 (CLOSURE-PASSED): NIL
Local 8 (LAMBDA-LIST): NIL
Local 9 (LL): NIL
Local 10 (QUOTE-STATUS): NIL
Local 11 (REST-FLAG): NIL
Local 12 (ARGL): ((SXHASH **))
Local 13: NIL
Local 14: NIL
Local 15 (IGNORE): NIL
Local 16 (ADL): (440 145 145 40145 ...)
Local 17 (ITEM): 400
Local 18 (*SELECTQ-ITEM*): 0


Remainder of stack:

SI:APPLY-LAMBDA (P.C. = 1161)
FOO
SI:EVAL1 (P.C. = 1324)
SI:EVAL-ABORT-TRIVIAL-ERRORS (P.C. = 61)
SI:LISP-TOP-LEVEL1 (P.C. = 426)
SI:LISP-TOP-LEVEL2 (P.C. = 27)
SI:PROCESS-TOP-LEVEL (P.C. = 246)
SI:LISP-TOP-LEVEL (P.C. = 47)
 1-Jul-84 23:15:38-EDT,297;000000000000
Received: from MIT-LISPM-24 by MIT-OZ via Chaosnet; 1 Jul 84 23:15-EDT
Date: Sunday, 1 July 1984, 23:14-EDT
From: Eugene Ciccarelli <ECC at MIT-OZ>
Subject: P.S. SXHASH of package
To: BUG-LISPM at MIT-OZ

I should mention that the bug occurs in 98.63 and after.  Versions before that work.
 1-Jul-84 23:37:37-EDT,2599;000000000000
Received: from MIT-GRIZZLY by MIT-OZ via Chaosnet; 1 Jul 84 23:37-EDT
Date: Sunday, 1 July 1984, 23:27-EDT
From: Scott Cyphers <sr.ehpyc at MIT-SPEECH>
Subject: Zmail broke on me
To: BUG-LISPM at MIT-OZ

In Release 5.1, Experimental MIT 1.4, Spire-Macros 1.9, Compute 1.4,
Attribute 1.8, Audio 1.2, Speech-Attributes 1.1, Display 1.12,
Speech-Layouts 1.8, Experimental Versatec 2.0, Experimental Prtout 1.1,
Spire 13.0, SpireX 10.3, LexiS 6.3, Experimental ZOO 2.0, FEP 18, on Lisp Machine Grizzly (3600):

>>Error: Preparing to save buffer SPEECH:SPEECH:<SR.EHPYC>SR.EHPYC.BABYL,
         but associated inbox SPEECH:PS:<SR.EHPYC>MAIL.TXT.1 is not awaiting save.
         Buffer status = :SAVING-REQUIRED, inbox status = :LOADING-NEW-MAIL.
While in the function ZWEI:MAIL-BUFFER-SAVE-SETUP  ZWEI:SAVE-BUFFER-INTERNAL  ZWEI:SAVE-MAIL-BUFFER

ZWEI:MAIL-BUFFER-SAVE-SETUP:  (P.C. = 34)
   Arg 0 (BUFFER): #<BABYL-BUFFER "SPEECH:SPEECH:<SR.EHPYC>SR/.EHPYC.BABYL" 6415313>
   --Defaulted args:--
   Arg 1 (CHECK-ONLY): NIL
   Local 2: NIL
   Local 3 (OTHER): #<TENEX-INBOX-BUFFER "SPEECH:PS:<SR.EHPYC>MAIL.TXT.1" 15430037>
   Local 4 (OTHER-STATUS): :LOADING-NEW-MAIL
   Local 5 (STATUS): :SAVING-REQUIRED

ZWEI:SAVE-BUFFER-INTERNAL:  (P.C. = 6)
   Arg 0 (BUFFER): #<BABYL-BUFFER "SPEECH:SPEECH:<SR.EHPYC>SR/.EHPYC.BABYL" 6415313>
   Arg 1 (FOR-FINISH): NIL

ZWEI:SAVE-MAIL-BUFFER:  (P.C. = 77)
   Arg 0 (BUFFER): #<BABYL-BUFFER "SPEECH:SPEECH:<SR.EHPYC>SR/.EHPYC.BABYL" 6415313>
   --Defaulted args:--
   Arg 1 (FOR-FINISH): NIL

ZWEI:EXPUNGE-AND-SAVE-SEQUENCE:  (P.C. = 11)
   Arg 0 (SEQUENCE): #<BABYL-BUFFER "SPEECH:SPEECH:<SR.EHPYC>SR/.EHPYC.BABYL" 6415313>

ZWEI:ZMAIL-SAVE-ALL:  (P.C. = 10)

ZWEI:COM-ZMAIL-SAVE:  (P.C. = 16)

ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
   Arg 0 (COMMAND): ZWEI:COM-ZMAIL-SAVE
   Arg 1 (CHAR): 115.
   --Defaulted args:--
   Arg 2 (PREFIX-CHAR): NIL
   Arg 3 (HOOK-LIST): NIL

ZWEI:ZMAIL-COMMAND-EXECUTE:  (P.C. = 6)
   Arg 0 (*CURRENT-COMMAND*-initialization): ZWEI:COM-ZMAIL-SAVE

Rest of stack:
(:METHOD ZWEI:ZMAIL-FRAME :PROCESS-COMMAND-CHAR):  (P.C. = 7)
(:INTERNAL (:METHOD ZWEI:ZMAIL-FRAME :COMBINED :PROCESS-COMMAND-CHAR) 0.):  (P.C. = 7)
(:METHOD ZWEI:ZMAIL-COMMAND-LOOP-MIXIN :WHOPPER :PROCESS-COMMAND-CHAR):  (P.C. = 21)
(:METHOD ZWEI:ZMAIL-FRAME :COMBINED :PROCESS-COMMAND-CHAR):  (P.C. = 12)
(:METHOD ZWEI:ZMAIL-FRAME :COMMAND-LOOP):  (P.C. = 146)
(:METHOD ZWEI:ZMAIL-FRAME :COMBINED :COMMAND-LOOP):  (P.C. = 47)
ZWEI:ZMAIL-PROCESS-TOP-LEVEL:  (P.C. = 52)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
 1-Jul-84 23:39:23-EDT,2379;000000000000
Received: from MIT-GRIZZLY by MIT-OZ via Chaosnet; 1 Jul 84 23:38-EDT
Date: Sunday, 1 July 1984, 23:29-EDT
From: Scott Cyphers <sr.ehpyc at MIT-SPEECH>
Subject: More broken Zmail
To: BUG-LISPM at MIT-OZ

In Release 5.1, Experimental MIT 1.4, Spire-Macros 1.9, Compute 1.4,
Attribute 1.8, Audio 1.2, Speech-Attributes 1.1, Display 1.12,
Speech-Layouts 1.8, Experimental Versatec 2.0, Experimental Prtout 1.1,
Spire 13.0, SpireX 10.3, LexiS 6.3, Experimental ZOO 2.0, FEP 18, on Lisp Machine Grizzly (3600):

This is probably related to the last bug, but maybe it will give you more information.

>>Trap: The first argument given to the AP-1 instruction, NIL, was not an array.
While in the function ZWEI:ASSURE-MSG-PARSED  ZWEI:ZMAIL-SELECT-NEXT-MSG  ZWEI:MOVE-AFTER-DELETE

ZWEI:ASSURE-MSG-PARSED:  (P.C. = 5)
   Arg 0 (MSG): NIL
   --Defaulted args:--
   Arg 1 (KILLED-OK): NIL
   Local 2 (PARSED-P): NIL
   Local 3 (STATUS): NIL

ZWEI:ZMAIL-SELECT-NEXT-MSG:  (P.C. = 40)
   Arg 0 (CONDITION): ZWEI:DELETED
   Arg 1 (NO-ERROR-P): T
   --Defaulted args:--
   Arg 2 (TIMES): 1.

ZWEI:MOVE-AFTER-DELETE:  (P.C. = 27)
   Arg 0 (MODE): :FORWARD

ZWEI:COM-ZMAIL-DELETE-INTERNAL:  (P.C. = 34)
   Arg 0 (MODE): :FORWARD
   Arg 1 (MSG): #<MSG 1001736>

ZWEI:COM-ZMAIL-DELETE:  (P.C. = 22)

ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
   Arg 0 (COMMAND): ZWEI:COM-ZMAIL-DELETE
   Arg 1 (CHAR): 100.
   --Defaulted args:--
   Arg 2 (PREFIX-CHAR): NIL
   Arg 3 (HOOK-LIST): NIL

ZWEI:ZMAIL-COMMAND-EXECUTE:  (P.C. = 6)
   Arg 0 (*CURRENT-COMMAND*-initialization): ZWEI:COM-ZMAIL-DELETE

(:METHOD ZWEI:ZMAIL-FRAME :PROCESS-COMMAND-CHAR):  (P.C. = 7)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 6440161 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-FRAME -- 65. IV's, 20. FL's 57046346>
   Arg 2 (OPERATION): :PROCESS-COMMAND-CHAR
   Arg 3 (CH): 100.

Rest of stack:
(:INTERNAL (:METHOD ZWEI:ZMAIL-FRAME :COMBINED :PROCESS-COMMAND-CHAR) 0.):  (P.C. = 7)
(:METHOD ZWEI:ZMAIL-COMMAND-LOOP-MIXIN :WHOPPER :PROCESS-COMMAND-CHAR):  (P.C. = 21)
(:METHOD ZWEI:ZMAIL-FRAME :COMBINED :PROCESS-COMMAND-CHAR):  (P.C. = 12)
(:METHOD ZWEI:ZMAIL-FRAME :COMMAND-LOOP):  (P.C. = 146)
(:METHOD ZWEI:ZMAIL-FRAME :COMBINED :COMMAND-LOOP):  (P.C. = 47)
ZWEI:ZMAIL-PROCESS-TOP-LEVEL:  (P.C. = 52)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
 2-Jul-84 09:29:56-EDT,1398;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 2 Jul 84 09:29-EDT
Received: from SCRC-THAMES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 57933; Mon 2-Jul-84 09:32:21-EDT
Date: Monday, 2 July 1984, 09:32-EDT
From: Scott McKay <SWM at SCRC-QUABBIN>
To: Zvona at MIT-OZ, BUG-LISPM at MIT-OZ, bug-pig at MIT-OZ
In-reply-to: The message of 29 Jun 84 20:20-EDT from David Chapman <Zvona at MIT-OZ>
Message-ID: <840702093238.2.SWM@THAMES.SCRC.Symbolics>

    Date: Friday, 29 June 1984, 20:20-EDT
    From: David Chapman <Zvona at MIT-OZ>

    In Release 5.0, Experimental MIT 1.4, FEP 18, on Lisp Machine Jim Morrison (3600):

    I keep ending up with two buffers editing the same file, one of which is
    PIG:USRD$:FOO.LSP, and the other is PIG:SYS$DSK:FOO.LSP.  Now, for sure
    as hell I never type either of those device names, so they are coming
    from inside one of these machines.  Can this be fixed?

This is a consequence of the way logical device names are handled in the
current file protocol.  There is no good way to fix this except to ask
VMS to do the logical device translations when you try to parse a
pathname on a Lisp Machine (undesirable, since that means you can't
parse a VMS pathname if the host in question is down).  The other
``fix'' is to remove USRD$ as a synonym for SYS$DISK on Pig.  BTW, this
bug exists of Twenex, too.  Sorry.
 2-Jul-84 10:39:34-EDT,2072;000000000000
Received: from MIT-ML by MIT-OZ via Chaosnet; 2 Jul 84 10:38-EDT
Date: Monday, 2 July 1984, 10:37-EDT
From: Chris Lindblad <cjl at MIT-OZ>
Subject: more PIG$DISK vs. USRD$ discussion
To: SWM at SCRC-QUABBIN, Zvona at MIT-OZ, BUG-LISPM at MIT-OZ,
    bug-pig at MIT-OZ
In-reply-to: The message of 2 Jul 84 09:32-EDT from Scott McKay <SWM at SCRC-QUABBIN>

    Date: Monday, 2 July 1984, 09:32-EDT
    From: Scott McKay <SWM at SCRC-QUABBIN>
    To:   Zvona, BUG-LISPM, bug-pig

	Date: Friday, 29 June 1984, 20:20-EDT
	From: David Chapman <Zvona at MIT-OZ>

	In Release 5.0, Experimental MIT 1.4, FEP 18, on Lisp Machine Jim Morrison (3600):

	I keep ending up with two buffers editing the same file, one of which is
	PIG:USRD$:FOO.LSP, and the other is PIG:SYS$DSK:FOO.LSP.  Now, for sure
	as hell I never type either of those device names, so they are coming
	from inside one of these machines.  Can this be fixed?

    This is a consequence of the way logical device names are handled in the
    current file protocol.  There is no good way to fix this except to ask
    VMS to do the logical device translations when you try to parse a
    pathname on a Lisp Machine (undesirable, since that means you can't
    parse a VMS pathname if the host in question is down).  The other
    ``fix'' is to remove USRD$ as a synonym for SYS$DISK on Pig.  BTW, this
    bug exists of Twenex, too.  Sorry.

Here's a recommendation to improve the situation. How about setting the
default pathname to be in the user's homedir when the lisp machine logs
into a host?  Once you're logged into a host, you know a lot more about
where the user will expect files to come from, so make use of the
information.  I believe that this will improve pathname defaulting on
both VMS hosts and UNIX hosts.  It seems to be a simple change. Just add
a line to login-host-unit after the line that sets the homedir pathname.
Won't this get rid of sys$disk: as the default disk on a VMS once the
user has logged in?  Is there any reason why this shouldn't be done?
 2-Jul-84 14:05:09-EDT,1236;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 2 Jul 84 14:04-EDT
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 58305; Mon 2-Jul-84 14:04:04-EDT
Date: Monday, 2 July 1984, 14:04-EDT
From: David A. Moon <Moon at SCRC-TENEX>
Subject: conformal mapping
To: Scott Cyphers <sr.ehpyc at MIT-SPEECH>, Moon at SCRC-TENEX
cc: BUG-LISPM at MIT-OZ, bug-lmdoc at SCRC-TENEX
In-Reply-To: The message of 29 Jun 84 19:45-EDT from Scott Cyphers <sr.ehpyc at MIT-SPEECH>
Message-ID: <840702140427.0.MOON@EUPHRATES.SCRC.Symbolics>

    Date: Friday, 29 June 1984, 19:45-EDT
    From: Scott Cyphers <sr.ehpyc at MIT-SPEECH>

    Either the documentation should be fixed to say the following functions don't work
    with conformally mapped arrays, or the functions should be changed to work with
    them.  I'm not sure it's worth the overhead to make them work unless there's some
    easy way to do it.

    Copy-array-contents
    Copy-array-contents-and-leader
    g-l-p

I think making them work is too hard; the documentation should make a note.
This message reminds me to think about making them signal an error if applied
to a conformal indirect array, in the next major release.
 2-Jul-84 14:17:25-EDT,1179;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 2 Jul 84 14:15-EDT
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 58313; Mon 2-Jul-84 14:09:34-EDT
Date: Monday, 2 July 1984, 14:09-EDT
From: David A. Moon <Moon at SCRC-TENEX>
Subject: Edit Screen lossage, An Addendum
To: TIM at MIT-MC
cc: BUG-LISPM at MIT-OZ
In-Reply-To: The message of 29 Jun 84 05:59-EDT from TIM at MIT-MC
Message-ID: <840702140957.1.MOON@EUPHRATES.SCRC.Symbolics>

    Date: Friday, 29 June 1984, 05:59-EDT
    From:  <TIM at MIT-MC>
    ...P.S.  If I didn't want "G" obscured, should I have exposed it first?
Yes.  That is also the reason why the editor window E2 tried to expand its
height, stimulating the bug you reported.  The Expand Window command in
Edit Screen expands into all adjacent space not occupied by exposed windows.

Incidentally, I can't reproduce your bug, where the editor window tries to
expand its echo area when you change its height and blows out, in the latest
development system.  I think this was reported last year, too, so it was
probably fixed in the source.  Thanks for the report anyway, it keeps us
on our toes.
 2-Jul-84 14:24:47-EDT,3766;000000000000
Received: from SCRC-YUKON by MIT-OZ via Chaosnet; 2 Jul 84 14:23-EDT
Date: Monday, 2 July 1984, 14:23-EDT
From: Robert W. Kerns <RWK at SCRC-YUKON>
Subject: more PIG$DISK vs. USRD$ discussion
To: Chris Lindblad <cjl at MIT-OZ>
Cc: SWM at SCRC-QUABBIN, Zvona at MIT-OZ, BUG-LISPM at MIT-OZ,
    bug-pig at MIT-OZ
In-reply-to: The message of 2 Jul 84 10:37-EDT from Chris Lindblad <cjl at MIT-OZ>
Message-ID: <840702142332.8.RWK@YUKON.SCRC.Symbolics>

    Date: Monday, 2 July 1984, 10:37-EDT
    From: Chris Lindblad <cjl at MIT-OZ>

	Date: Monday, 2 July 1984, 09:32-EDT
	From: Scott McKay <SWM at SCRC-QUABBIN>
	To:   Zvona, BUG-LISPM, bug-pig

	    Date: Friday, 29 June 1984, 20:20-EDT
	    From: David Chapman <Zvona at MIT-OZ>

	    In Release 5.0, Experimental MIT 1.4, FEP 18, on Lisp Machine Jim Morrison (3600):

	    I keep ending up with two buffers editing the same file, one of which is
	    PIG:USRD$:FOO.LSP, and the other is PIG:SYS$DSK:FOO.LSP.  Now, for sure
	    as hell I never type either of those device names, so they are coming
	    from inside one of these machines.  Can this be fixed?

	This is a consequence of the way logical device names are handled in the
	current file protocol.  There is no good way to fix this except to ask
	VMS to do the logical device translations when you try to parse a
	pathname on a Lisp Machine (undesirable, since that means you can't
	parse a VMS pathname if the host in question is down).  The other
	``fix'' is to remove USRD$ as a synonym for SYS$DISK on Pig.  BTW, this
	bug exists of Twenex, too.  Sorry.

    Here's a recommendation to improve the situation. How about setting the
    default pathname to be in the user's homedir when the lisp machine logs
    into a host?  Once you're logged into a host, you know a lot more about
    where the user will expect files to come from, so make use of the
    information.  I believe that this will improve pathname defaulting on
    both VMS hosts and UNIX hosts.  It seems to be a simple change. Just add
    a line to login-host-unit after the line that sets the homedir pathname.
    Won't this get rid of sys$disk: as the default disk on a VMS once the
    user has logged in?  Is there any reason why this shouldn't be done?

Thanks for the suggestion, but it's not nearly so simple as that, but I
have an idea solution:  Put the home directory information into the
namespace as an optional third component to the :LOGIN-NAME attribute.
Use that whenever the data isn't available from the file server.

Anyway, about why it's so simple...

Defaults are per-entity-using-pathnames, rather than per-host.
(There are remnants of an earlier "per-host" option in the
code still, but that option has not been usable for some
time).  When a default does not have the information for a given
host, it does not use the homedir, although that's clearly
a bug.

Further, in the latest sources, I notice that the home-directory code
seems to *IGNORE* the device, but I'm probably just confused, since it
goes through so many levels of indirection.

It would have to search all defaults list.  (It will be on defaults
lists which were used to determine a VMS pathname PRIOR to logging in to
the VMS).  Doing so could cause some strange bugs, like seeing one
default displayed, and yet having the default used be different.  This
could result in the wrong file being deleted, for example.  These
problems could be avoided, for VMS only, by substituting for the device
SYS$DISK, rather than just using the home directory, but that is quite a
bit more hairy; we're clearly talking VMS-specific code.  I'm not sure
of the right modularity here, probably an :AFTER demon on the access
path.
 2-Jul-84 16:39:11-EDT,493;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 2 Jul 84 16:36-EDT
Date: 2 Jul 1984  16:39 EDT (Mon)
Message-ID: <SR.EHPYC.12028178766.BABYL@MIT-SPEECH>
From: Scott Cyphers <SR.EHPYC@MIT-SPEECH>
To:   "David A. Moon" <Moon@SCRC-TENEX>
Cc:   BUG-LISPM@MIT-OZ, bug-lmdoc@SCRC-TENEX
Subject: conformal mapping
In-reply-to: Msg of 2 Jul 1984 14:04-EDT from David A. Moon <Moon at SCRC-TENEX>

Good decision.  Add math:invert-matrix to that list because it does a
copy-array-contents.
 2-Jul-84 17:05:48-EDT,6693;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 2 Jul 84 17:04-EDT
Date: Monday, 2 July 1984, 16:59-EDT
From: David Rogers <DROGERS at MIT-OZ>
Subject: Two bugs in one!
To: BUG-LISPM at MIT-OZ

In Release 5.0, Experimental MIT 1.4, FEP 18, on Lisp Machine Janis Joplin (3600):

Two bugs in one! This bug is that the mailer shoudl have at one of its error options
sending the mail through a different host (it even lists the host names, but does not
allow you to send to any but the first one). The rest of this message is the original
message I was trying to send. 

>>Error: SMTP error: 421 Sorry, big mail backlog!  Try again later.
While in the function ZWEI:SMTP-CHECK-REPLY  ZWEI:SMTP-MAILER  ZWEI:SMTP-MAIL-INTERNAL

ZWEI:SMTP-CHECK-REPLY:  (P.C. = 116)
   Arg 0 (STREAM): #<ASCII-TRANSLATING-CHARACTER-STREAM 10574715>
   Arg 1 (EXPECTED): 250.
   Arg 2 (FORMAT): "~A From:<~A>"
   Rest arg (ARGS): ("MAIL" "DROGERS%MIT-JANIS@MIT-MC.ARPA")
   Local 4 (REPLY): "421 Sorry, big mail backlog!  Try again later."
   Local 5 (LINE): "421 Sorry, big mail backlog!  Try again later."
   Local 6 (EOF): NIL
   Local 7 (NUM): 421.
   Local 8 (DELIM): 3.
   Local 9 (ETYPE): (421. ZWEI:SMTP-HOST-NOT-AVAILABLE ZWEI:MAILER-TEMPORARY-ERROR)

ZWEI:SMTP-MAILER:  (P.C. = 31)
   Arg 0 (PATH): #<SERVICE-ACCESS-PATH STORE-AND-FORWARD-MAIL (SMTP) -- MC on CHAOS 10560544>
   Arg 1 (CMD): "MAIL"
   Arg 2 (FROM): (:NAME "DROGERS" :HOST (:OBJECT #<LISPM-HOST JANIS 36224760>))
   Arg 3 (TO): ((:NAME "BUG-LISPM" :HOST (:OBJECT #<TOPS20-HOST OZ 35140045>) :INTERVAL (("To: BUG-LISPM@OZ" 4.) ("To: BUG-LISPM@OZ" 16.))))
   Arg 4 (MESSAGE): "Date: Monday, 2 July 1984, 16:55-EDT
From: David Rogers <DROGERS at MIT-OZ>
Subject: LOAD should accept source files as well as BINary files.
To: BUG-LISPM at MIT-OZ

In Release 5.0, Experimental MIT 1.4, FEP 18, on Lisp Machine Janis Joplin (3600):

When was the LOAD function changed to only accept .BIN files?
COPYCAT.SYS is a file of LISP source code.

>>Error: PIG:USRD$:[DROGERS]COPYCAT.SYS;2 is not a BIN file
While in the function SI:BIN-LOAD-START  SI:BIN-LOAD-FILE-INTERNAL  FS:LOAD-STREAM

SI:BIN-LOAD-START:  (P.C. = 15)
   Arg 0 (STREAM): #<FILE-INPUT-BINARY-STREAM /"PIG:USRD$:[DROGERS]COPYCAT.SYS/" 10556115>
   Arg 1 (SKIP-READING-PROPERTY-LIST): NIL
   Local 2 (WORD): 15163.

SI:BIN-LOAD-FILE-INTERNAL:  (P.C. = 26)
   Arg 0 (STREAM): #<FILE-INPUT-BINARY-STREAM /"PIG:USRD$:[DROGERS]COPYCAT.SYS/" 10556115>
   Arg 1 (INTO-PACKAGE): NIL
   Arg 2 (NO-MSG-P): NIL

FS:LOAD-STREAM:  (P.C. = 16)
   Arg 0 (STREAM): #<FILE-INPUT-BINARY-STREAM /"PIG:USRD$:[DROGERS]COPYCAT.SYS/" 10556115>
   Arg 1 (PKG): NIL
   Arg 2 (NO-MSG-P): NIL

LOAD:  (P.C. = 122)
   Arg 0 (PATHNAME): /"copycat.sys/"
   --Defaulted args:--
   Arg 1 (PKG): NIL
   Arg 2 (NONEXISTENT-OK-FLAG): NIL
   Arg 3 (DONT-SET-DEFAULT-P): NIL
   Arg 4 (NO-MSG-P): NIL

SI:*EVAL:  (P.C. = 370)
   Arg 0 (FORM): (LOAD /"copycat.sys/")

SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 200)
   Rest arg: (:NAME /"Lisp Top Level in Lisp Listener 1/" :ABORTED-FUNCTION NIL :BEFORE-PROMPT-FUNCTION NIL :READ-FUNCTION NIL :EVAL-FUNCTION NIL ...)

SI:LISP-COMMAND-LOOP:  (P.C. = 115)
   Arg 0 (STREAM): #<LISP-LISTENER Lisp Listener 1 4140000 exposed>
   Rest arg: (:NAME /"Lisp Top Level in Lisp Listener 1/")

SI:LISP-TOP-LEVEL1:  (P.C. = 22)
   Arg 0 (TERMINAL-IO-initialization): #<LISP-LISTENER Lisp Listener 1 4140000 exposed>

Rest of stack:
SI:LISP-TOP-LEVEL:  (P.C. = 7)
"

ZWEI:SMTP-MAIL-INTERNAL:  (P.C. = 54)
   Arg 0 (PATH): #<SERVICE-ACCESS-PATH STORE-AND-FORWARD-MAIL (SMTP) -- MC on CHAOS 10560544>

ZWEI:INVOKE-SERVICE-STORE-AND-FORWARD-MAIL-WITH-SMTP:  (P.C. = 3)
   Arg 0 (PATH): #<SERVICE-ACCESS-PATH STORE-AND-FORWARD-MAIL (SMTP) -- MC on CHAOS 10560544>

NET:INVOKE-SERVICE-ACCESS-PATH:  (P.C. = 21)
   Arg 0 (SERVICE-ACCESS-PATH): #<SERVICE-ACCESS-PATH STORE-AND-FORWARD-MAIL (SMTP) -- MC on CHAOS 10560544>
   Arg 1 (SERVICE-ARGS): (((:NAME "BUG-LISPM" :HOST (:OBJECT #<TOPS20-HOST OZ 35140045>) :INTERVAL (** **))) (:TEXT #<NODE 10560055> :HEADERS (:DATE 2666638523. :FROM (**) :SUBJECT "LOAD should accept source files as well as BINary files." :TO (**)) :HEADER-FORMAT :INCLUDE-PERSONAL :TRANSMIT-TIME 2666638523. :DRAFT-MSG #<ZMACS-DRAFT-MSG 10560070>))

ZWEI:INVOKE-MAIL-SERVICE:  (P.C. = 6)
   Arg 0 (SERVICE-ACCESS-PATH): #<SERVICE-ACCESS-PATH STORE-AND-FORWARD-MAIL (SMTP) -- MC on CHAOS 10560544>
   Arg 1 (RECIPIENTS): ((:NAME "BUG-LISPM" :HOST (:OBJECT #<TOPS20-HOST OZ 35140045>) :INTERVAL (("To: BUG-LISPM@OZ" 4.) ("To: BUG-LISPM@OZ" 16.))))
   Arg 2 (TEMPLATE-EXPANSION): (:TEXT #<NODE 10560055> :HEADERS (:DATE 2666638523. :FROM ((:USER #<USER DROGERS 16302505>)) :SUBJECT "LOAD should accept source files as well as BINary files." :TO ((:NAME "BUG-LISPM" :HOST ** :INTERVAL **))) :HEADER-FORMAT :INCLUDE-PERSONAL :TRANSMIT-TIME 2666638523. :DRAFT-MSG #<ZMACS-DRAFT-MSG 10560070>)

ZWEI:NETWORK-SEND-IT-1:  (P.C. = 331)
   Arg 0 (RECIPIENTS): ((:NAME "BUG-LISPM" :HOST (:OBJECT #<TOPS20-HOST OZ 35140045>) :INTERVAL (("To: BUG-LISPM@OZ" 4.) ("To: BUG-LISPM@OZ" 16.))))
   Arg 1 (TEMPLATE-EXPANSION): (:TEXT #<NODE 10560055> :HEADERS (:DATE 2666638523. :FROM ((:USER #<USER DROGERS 16302505>)) :SUBJECT "LOAD should accept source files as well as BINary files." :TO ((:NAME "BUG-LISPM" :HOST ** :INTERVAL **))) :HEADER-FORMAT :INCLUDE-PERSONAL :TRANSMIT-TIME 2666638523. :DRAFT-MSG #<ZMACS-DRAFT-MSG 10560070>)

ZWEI:NETWORK-SEND-IT:  (P.C. = 75)
   Arg 0 (RECIPIENTS): ((:NAME "BUG-LISPM" :HOST (:OBJECT #<TOPS20-HOST OZ 35140045>) :INTERVAL (("To: BUG-LISPM@OZ" 4.) ("To: BUG-LISPM@OZ" 16.))))
   Arg 1 (TEMPLATE-EXPANSION): (:TEXT #<NODE 10560055> :HEADERS (:DATE 2666638523. :FROM ((:USER #<USER DROGERS 16302505>)) :SUBJECT "LOAD should accept source files as well as BINary files." :TO ((:NAME "BUG-LISPM" :HOST ** :INTERVAL **))) :HEADER-FORMAT :INCLUDE-PERSONAL :TRANSMIT-TIME 2666638523. :DRAFT-MSG #<ZMACS-DRAFT-MSG 10560070>)

Rest of stack:
ZWEI:FUNCALL-TEMPLATE-EXPANSION:  (P.C. = 47)
(:METHOD ZWEI:BASIC-DRAFT-MSG :TRANSMIT):  (P.C. = 314)
(:METHOD ZWEI:ZMACS-DRAFT-MSG :COMBINED :TRANSMIT):  (P.C. = 20)
ZWEI:SEND-MESSAGE:  (P.C. = 24)
ZWEI:COM-EXIT-COM-MAIL:  (P.C. = 26)
ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 200)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 41)
(:METHOD ZWEI:MAIL-TOP-LEVEL-EDITOR :MAIL):  (P.C. = 57)
MAIL:  (P.C. = 20)
BUG:  (P.C. = 27)
SI:PROCESS-RUN-FUNCTION-INTERNAL:  (P.C. = 51)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
 2-Jul-84 22:51:59-EDT,342;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 2 Jul 84 22:51-EDT
Date: 2 Jul 1984  22:54 EDT (Mon)
Message-ID: <SR.EHPYC.12028247043.BABYL@MIT-SPEECH>
From: Scott Cyphers <SR.EHPYC@MIT-SPEECH>
Subject: array elements
To:   bug-lispm@oz

Will Zetalisp be inverting the order array elements are stored to
conform with common lisp?
 3-Jul-84 08:23:43-EDT,857;000000000000
Mail-From: FLECK created at  3-Jul-84 08:23:22
Date: Tue, 3 Jul 1984  08:23 EDT
Message-ID: <FLECK.12028350621.BABYL@MIT-OZ>
From: FLECK@MIT-OZ
To:   bug-lispm@MIT-OZ
Subject: I'm not sure where the right place to send this is, but ...


	The 3600 window system provides a range of drawing functions,
e.g. draw-line, draw-curve, draw-wide-curve, that will draw things on
windows.  However, at least according to the documentation, only a
small number of these functions have analogs for drawing things onto
arrays.  Since I wanted to be able to draw curved objects in arrays
and then bitblt them to a window, I had to copy the code for
draw-curve and draw-wide-curve and produce slightly modified versions
that would draw to arrays.  This was not difficult to do, but it did
not seem like the type of thing I should be having to do.  

	
 3-Jul-84 08:59:08-EDT,1055;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 3 Jul 84 08:58-EDT
Date: Tuesday, 3 July 1984, 09:01-EDT
From:  <TIM at MIT-MC>
Subject: Random Window Debugger lossage
To: BUG-LISPM at MIT-OZ

In Release 5.0, Experimental MIT 1.4, FEP 18, on Lisp Machine Jimi Hendrix (3600):

  I leaned on a mouse button (over some random whitespace?) while scrolling
  through some disassembled code.  [Just about the only thing the window
  debugger is useful for...]

>>Trap: The argument given to the CDR instruction, 32768, was not a list, a locative or NIL.
While in the function TV:INSPECT-REAL-VALUE  DBG:PROCESS-SPECIAL-COMMAND  DBG:WINDOW-COMMAND-LOOP

TV:INSPECT-REAL-VALUE:  (P.C. = 64)
   Arg 0 (THING): (:MOUSE-BUTTON 32768 #<INSPECT-PANE Inspect Pane 3 16363522 exposed> 550 27)
   Local 1 (FUN): NIL
   Local 2 (.SELECTQ-ITEM.): :MOUSE-BUTTON

DBG:PROCESS-SPECIAL-COMMAND:  (P.C. = 60)
   Arg 0 (LIST): (:MOUSE-BUTTON 32768 #<INSPECT-PANE Inspect Pane 3 16363522 exposed> 550 27)

DBG:WINDOW-COMMAND-LOOP:  (P.C. = 172)

Etc...
 3-Jul-84 12:38:01-EDT,1644;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 3 Jul 84 12:37-EDT
Received: from SCRC-ANNISQUAM by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 58919; Tue 3-Jul-84 12:37:07-EDT
Date: Tuesday, 3 July 1984, 12:36-EDT
From: Doug Dodds <DODDS at SCRC-TENEX>
Subject: Zmail broke on me
To: sr.ehpyc at MIT-SPEECH
Cc: BUG-LISPM at MIT-OZ
In-reply-to: The message of 1 Jul 84 23:27-EDT from Scott Cyphers <sr.ehpyc at MIT-SPEECH>
Message-ID: <840703123625.8.DODDS@ANNISQUAM.SCRC.Symbolics>

    Date: Sunday, 1 July 1984, 23:27-EDT
    From: Scott Cyphers <sr.ehpyc at MIT-SPEECH>

    In Release 5.1, Experimental MIT 1.4, Spire-Macros 1.9, Compute 1.4,
    Attribute 1.8, Audio 1.2, Speech-Attributes 1.1, Display 1.12,
    Speech-Layouts 1.8, Experimental Versatec 2.0, Experimental Prtout 1.1,
    Spire 13.0, SpireX 10.3, LexiS 6.3, Experimental ZOO 2.0, FEP 18, on Lisp Machine Grizzly (3600):

    >>Error: Preparing to save buffer SPEECH:SPEECH:<SR.EHPYC>SR.EHPYC.BABYL,
	     but associated inbox SPEECH:PS:<SR.EHPYC>MAIL.TXT.1 is not awaiting save.
	     Buffer status = :SAVING-REQUIRED, inbox status = :LOADING-NEW-MAIL.
    While in the function ZWEI:MAIL-BUFFER-SAVE-SETUP  ZWEI:SAVE-BUFFER-INTERNAL  ZWEI:SAVE-MAIL-BUFFER

A description of the circumstances would have been nice, but I infer
that you did an "s" at a point when perhaps Zmail was still working on
inserting a (possibly large) inbox into the mailbox.  It has a bug that
allows it to accept save-type commands when it isn't yet prepared to
handle them.  This is fixed in the development system and the fix will
be in Release 5.2.
 3-Jul-84 13:03:25-EDT,506;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 3 Jul 84 13:01-EDT
Date: 3 Jul 1984  13:03 EDT (Tue)
Message-ID: <SR.EHPYC.12028401604.BABYL@MIT-SPEECH>
From: Scott Cyphers <SR.EHPYC@MIT-SPEECH>
To:   Doug Dodds <DODDS@SCRC-TENEX>
Cc:   BUG-LISPM@MIT-OZ
Subject: Zmail broke on me
In-reply-to: Msg of 3 Jul 1984 12:36-EDT from Doug Dodds <DODDS at SCRC-TENEX>

I was not paying close enough attention to exactly what I was typing
to give any more details.  It may be that it is what you said.
 3-Jul-84 15:04:59-EDT,3311;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 3 Jul 84 14:59-EDT
Date: Tuesday, 3 July 1984, 14:58-EDT
From: David Chapman <Zvona at MIT-OZ>
Subject: proceed option for make-package
To: BUG-LISPM at MIT-OZ

In Release 5.0, Experimental MIT 1.4, FEP 18, on Lisp Machine Elvis Presley (3600):

<resume> at this point should return the existing package named RUP from
MAKE-PACKAGE.

>>Error: The package name RUP is already in use.
While in the function MAKE-PACKAGE  SI:XR-PACKAGE-PREFIX  SI:XR-READ-THING

MAKE-PACKAGE:  (P.C. = 276)
   Arg 0 (NAME): "RUP"
   Rest arg: NIL
   Local 2: ("RUP")
   Local 3 (NICKNAMES): NIL
   Local 4 (PREFIX-NAME): NIL
   Local 5 (USE): "GLOBAL"
   Local 6 (SHADOW): NIL
   Local 7 (EXPORT): NIL
   Local 8 (IMPORT): NIL
   Local 9 (SHADOWING-IMPORT): NIL
   Local 10 (IMPORT-FROM): NIL
   Local 11 (RELATIVE-NAMES): NIL
   Local 12 (RELATIVE-NAMES-FOR-ME): NIL
   Local 13 (SIZE): 1002
   Local 14 (EXTERNAL-ONLY): NIL
   Local 15 (NEW-SYMBOL-FUNCTION): SI:PKG-NEW-SYMBOL
   Local 16 (HASH-INHERITED-SYMBOLS): NIL
   Local 17 (INVISIBLE): NIL
   Local 18 (COLON-MODE): :INTERNAL
   Local 19 (PREFIX-INTERN-FUNCTION): INTERN
   Local 20 (INCLUDE): NIL
   Local 21 (NAMES): ("RUP")
   Local 22 (PKG): #<Package RUP 23632701>
   Local 23 (MODULUS): 1203
   Local 24 (CONFLICTS): ("RUP")

SI:XR-PACKAGE-PREFIX:  (P.C. = 104)
   Arg 0 (STREAM): #<FILE-INPUT-CHARACTER-STREAM "PIG:USRD$:[ZVONA.LUSER]RUPLANNER.LSP" 5047410>
   Arg 1 (STRING): "RUP"
   Arg 2 (LAST-CH): 72

SI:XR-READ-THING:  (P.C. = 260)
   Arg 0 (STREAM): #<FILE-INPUT-CHARACTER-STREAM "PIG:USRD$:[ZVONA.LUSER]RUPLANNER.LSP" 5047410>

(:PROPERTY LIST SI:STANDARD-READ-FUNCTION):  (P.C. = 50)
   Arg 0 (STREAM): #<FILE-INPUT-CHARACTER-STREAM "PIG:USRD$:[ZVONA.LUSER]RUPLANNER.LSP" 5047410>
   Arg 1 (SHOULD-BE-NIL): NIL
   Arg 2 (FIFTY): 50

SI:XR-READ-THING:  (P.C. = 60)
   Arg 0 (STREAM): #<FILE-INPUT-CHARACTER-STREAM "PIG:USRD$:[ZVONA.LUSER]RUPLANNER.LSP" 5047410>

(:PROPERTY LIST SI:STANDARD-READ-FUNCTION):  (P.C. = 50)
   Arg 0 (STREAM): #<FILE-INPUT-CHARACTER-STREAM "PIG:USRD$:[ZVONA.LUSER]RUPLANNER.LSP" 5047410>
   Arg 1 (SHOULD-BE-NIL): NIL
   Arg 2 (FIFTY): 50

SI:XR-READ-THING:  (P.C. = 60)
   Arg 0 (STREAM): #<FILE-INPUT-CHARACTER-STREAM "PIG:USRD$:[ZVONA.LUSER]RUPLANNER.LSP" 5047410>

(:PROPERTY LIST SI:STANDARD-READ-FUNCTION):  (P.C. = 50)
   Arg 0 (STREAM): #<FILE-INPUT-CHARACTER-STREAM "PIG:USRD$:[ZVONA.LUSER]RUPLANNER.LSP" 5047410>
   Arg 1 (SHOULD-BE-NIL): NIL
   Arg 2 (FIFTY): 50

Rest of stack:
SI:XR-READ-THING:  (P.C. = 60)
(:PROPERTY LIST SI:STANDARD-READ-FUNCTION):  (P.C. = 50)
SI:XR-READ-THING:  (P.C. = 60)
(:INTERNAL SI:READ-INTERNAL 0):  (P.C. = 15)
SI:READ-INTERNAL:  (P.C. = 53)
READ:  (P.C. = 6)
(:INTERNAL COMPILER:COMPILE-PROCESS-DEFAULT 5):  (P.C. = 4)
COMPILER:COMPILE-PROCESS-DEFAULT:  (P.C. = 66)
COMPILER:COMPILE-TO-FILE:  (P.C. = 77)
COMPILER:PROCESS-FORMS-FROM-STREAM:  (P.C. = 102)
COMPILER:COMPILE-FROM-STREAM:  (P.C. = 235)
COMPILER:COMPILE-FILE:  (P.C. = 241)
COMPILER:COMPILE-FILE-LOAD:  (P.C. = 5)
SI:*EVAL:  (P.C. = 370)
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 200)
SI:LISP-COMMAND-LOOP:  (P.C. = 115)
SI:LISP-TOP-LEVEL1:  (P.C. = 22)
SI:LISP-TOP-LEVEL:  (P.C. = 7)
 3-Jul-84 20:45:22-EDT,1216;000000000000
Received: from MIT-GRIZZLY by MIT-OZ via Chaosnet; 3 Jul 84 20:44-EDT
Date: Tuesday, 3 July 1984, 20:44-EDT
From: Robert Kassel <rob at MIT-OZ>
Subject: a wish for the rubout-handler (oops, I mean input-editor)
To: BUG-LISPM at MIT-OZ

In Release 5.1, Experimental MIT 1.4, Spire-Macros 1.9, Compute 1.4,
Attribute 1.8, Audio 1.2, Speech-Attributes 1.1, Display 1.12,
Speech-Layouts 1.8, Experimental Versatec 2.0, Experimental Prtout 1.1,
Spire 13.0, SpireX 10.3, LexiS 6.3, Experimental ZOO 2.2,
Experimental Pop-Up-Calculator 2.0, Experimental Alexis-Television 2.0,
FEP 18, on Lisp Machine Grizzly (3600):

The rubout handler should really take an argument for the whostate, i.e.
if I don't want it to say "Tyi" I should be able to change it.  I have a
function that is called within the rh and it waits at certain times with
a specific whostate.  If I then do some c-b's, I see the state change to
tyi.  A minor point, 'tis true, but it will be confusing to a novice who
uses my program. There are only two (count 'em) places where a change
would have to be made, excluding the parsing for the new keyword, and
both changes are in the rubout-handler-read defun-method of tv:stream-mixin.

 3-Jul-84 22:12:25-EDT,3468;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 3 Jul 84 22:11-EDT
Date: Tuesday, 3 July 1984, 18:23-EDT
From: Melanie Mitchell <MM at MIT-OZ>
Subject: (from DRogers@OZ: UNIX file name bug)
To: BUG-LISPM at MIT-OZ

In Release 5.0, Experimental MIT 1.4, FEP 18, on Lisp Machine Janis Joplin (3600):

I typed the command:
(copyf "prep: //u//drogers//lispm-init.lisp" "prep: //u//mm//lispm-init.l")

lispm-init.lisp exists on prep:, I checked. Somehow it decided to truncate the file
name. DIRED did the same thing to me.

>>Error: File not found
         For PREP: /u/drogers/lispm-init.lis
While in the function (:METHOD FS:HOST-UNIT :COMMAND)  FS:OPEN-CHAOS  (:METHOD FS:QFILE-ACCESS-PATH :OPEN)

(:METHOD FS:HOST-UNIT :COMMAND):  (P.C. = 231)
   Arg 0 (SELF): #<HOST-UNIT 527354>
   Arg 1 (SELF-MAPPING-TABLE): FS:HOST-UNIT
   Arg 2 (OPERATION): :COMMAND
   Arg 3 (MARK-P): NIL
   Arg 4 (STREAM-OR-HANDLE): (:CREATE "I1910")
   Arg 5 (SIMPLE-P): NIL
   Arg 6 (WHOSTATE): "Open"
   Rest arg (COMMANDS): ("OPEN " :READ " " :DEFAULT "" "" "" "" "" "" ...)
   Local 8 (HANDLE): "I1910"
   Local 9 (STREAM): NIL
   Local 10 (PKT): #<Chaos Packet 22445437>
   Local 11 (SUCCESS): NIL
   Local 12 (STRING): "I1910 ERROR FNF C File not found"
   Local 13 (TRANSACTION-ID): "T1923"
   Local 14 (CREATE-P): T
   Local 15 (CONDITION): NIL

FS:OPEN-CHAOS:  (P.C. = 643)
   Arg 0 (ACCESS-PATH): #<NORMAL-QFILE-ACCESS-PATH PREP using QFILE 527343>
   Arg 1 (REAL-PATHNAME): #<UNIX-PATHNAME "PREP: //u//drogers//lispm-init.lis">
   Arg 2 (*COMMAND-PATHNAME*-initialization): #<UNIX-PATHNAME "PREP: //u//drogers//lispm-init.lis">
   Arg 3 (OPTIONS): (:DIRECTION :INPUT :BYTE-SIZE NIL :CHARACTERS :DEFAULT)

(:METHOD FS:QFILE-ACCESS-PATH :OPEN):  (P.C. = 7)
   Arg 0 (SELF): #<NORMAL-QFILE-ACCESS-PATH PREP using QFILE 527343>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:QFILE-ACCESS-PATH -- 3. IV's, 0. FL's 27450224>
   Arg 2 (OPERATION): :OPEN
   Arg 3 (REAL-PATHNAME): #<UNIX-PATHNAME "PREP: //u//drogers//lispm-init.lis">
   Arg 4 (PATHNAME): #<UNIX-PATHNAME "PREP: //u//drogers//lispm-init.lis">
   Rest arg (OPTIONS): (:DIRECTION :INPUT :BYTE-SIZE NIL :CHARACTERS :DEFAULT)

(:METHOD FS:ACTIVE-PATHNAME-MIXIN :OPEN):  (P.C. = 14)
   Arg 0 (SELF): #<UNIX-PATHNAME "PREP: //u//drogers//lispm-init.lis">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:ACTIVE-PATHNAME-MIXIN -- 1. IV's, 0. FL's 27322665>
   Arg 2 (OPERATION): :OPEN
   Arg 3 (PATHNAME): #<UNIX-PATHNAME "PREP: //u//drogers//lispm-init.lis">
   Rest arg (OPTIONS): (:DIRECTION :INPUT :BYTE-SIZE NIL :CHARACTERS :DEFAULT)

FS:COMMON-LISP-OPEN:  (P.C. = 445)
   Arg 0 (PATHNAME): #<UNIX-PATHNAME "PREP: //u//drogers//lispm-init.lis">
   Arg 1 (KEYWORD-ARGS): (:DIRECTION :INPUT :CHARACTERS :DEFAULT :BYTE-SIZE NIL)

OPEN:  (P.C. = 255)
   Arg 0 (PATHNAME): #<UNIX-PATHNAME "PREP: //u//drogers//lispm-init.lis">
   Rest arg (KEYWORD-ARGS): (:DIRECTION :INPUT :CHARACTERS :DEFAULT :BYTE-SIZE NIL)

COPYF:  (P.C. = 140)
   Arg 0 (FROM-PATHNAME): "prep: //u//drogers//lispm-init.lisp"
   Arg 1 (TO-PATHNAME): "prep: //u//mm//lispm-init.l"
   Rest arg: NIL

SI:*EVAL:  (P.C. = 370)
   Arg 0 (FORM): (COPYF "prep: //u//drogers//lispm-init.lisp" "prep: //u//mm//lispm-init.l")

Rest of stack:
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 200)
SI:LISP-COMMAND-LOOP:  (P.C. = 115)
SI:LISP-TOP-LEVEL1:  (P.C. = 22)
SI:LISP-TOP-LEVEL:  (P.C. = 7)
 4-Jul-84 12:09:57-EDT,264;000000000000
Mail-From: MLY created at  4-Jul-84 12:09:20
Date: Wed 4 Jul 84 12:09:20-EDT
From: Richard Mlynarik <MLY@MIT-OZ>
To: Accounts Notification Peoples
Cc: L
Subject: I killed the following account...

OZ:<L.FORUM>

Message:
a typical hdtism. Good riddance.
 6-Jul-84 01:12:40-EDT,433;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 6 Jul 84 01:12-EDT
Date: Friday, 6 July 1984, 01:02-EDT
From: Henry Lieberman <Henry at MIT-OZ>
Subject: Sys logical device
To: BUG-LISPM at MIT-OZ


In Release 5.0, Experimental MIT 1.4, FEP 18, on APIARY-10 (3600):

Trying to access the pathname SYS:EXAMPLES;MOUSE-SEN LISP on Oz
gives the error "No such device" for OZ:SRC:<S.R5.EXAMPLES>MOUSE-SEN.LISP
It used to work.

 6-Jul-84 15:28:25-EDT,644;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 6 Jul 84 15:23-EDT
Date: Friday, 6 July 1984, 05:29-EDT
From:  <TOMR at MIT-OZ>
Subject: Network Lossage...
To: BUG-LISPM at MIT-OZ
Cc: MPSG at MIT-OZ

In Release 5.0, Experimental MIT 1.4, FEP 18, on APIARY-10 (3600):

For some inexplicable reason...every machine in the Apiary has been 
connecting to SPA|RUSSIAN, SCRC|RIVERSIDE, and WAIKATO just to perform
a local connection...to Oz or Apiary-6, for example.  
I didn't notice this problem yesterday.  If anyone has any sort of
explaination for why this behaviour randomly crops up I'd be
grateful to have it.

Thanks,

TOMR
 6-Jul-84 15:37:33-EDT,1635;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 6 Jul 84 15:36-EDT
Date: Friday, 6 July 1984, 05:41-EDT
From:  <TOMR at MIT-OZ>
Subject: Apiary-5 Dies during GC
To: BUG-LISPM at MIT-OZ
Cc: MPSG at MIT-OZ

In Release 5.0, Experimental MIT 1.4, FEP 18, on APIARY-10 (3600):

This is a recurring problem we've been having with Apiary-5.  Seems that
if one turns on the garbage collector and exhausts the space, causing a
flip, one finds oneself irretrievably in the FEP.
I loaded v18-debug.flod and this is what little information I could glean
before it began to dump core...

The current frame pointed to the FIND-PACKAGE function.
Its arguments were:
Arg 0: "Sys"
Arg 1: :FIND
Arg 2: #<Art-Q-2406...>
I believe Arg2 is SI:*PACKAGE-NAME-TABLE*.  From what I saw,
the actual instruction was AR-1-LOCAL FP|4, hence it appeared to 
be looking something up in the above mentioned table.  

The VMA appeared:
VMA/ 23574032
23574032/ Nil
MD/ #<Dtp-75 773370766>

FIND-PACKAGE was called by
SI:PKG-USEABLE-NAME from PC=15, and its arguments were:
Arg0: #<Art-Q 12402...>
Arg1: #<Art-Q 2406...>
Arg2: T

and, this was called by:
SI:PKG-PACKAGE-PREFIX whose PC=73
and it argument[s?] appeared:
Arg0: #<Dtp-Compiled-Function ...=>garbage from here on out.

At this point the screen kept filling with indiscernable stuff.
After a few minutes it began to spew lines of strings that all
said something about bad data on different VMA's.

Is there any way I could have avoided loosing the state of the
debugger?
Is this of any use to anyone who might be following the saga of Apiary-5?

Thanks,

TOMR
 6-Jul-84 17:19:59-EDT,3304;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 6 Jul 84 17:17-EDT
Date: Friday, 6 July 1984, 17:13-EDT
From: Daniel Huttenlocher <dph at MIT-OZ>
Subject: valid????
To: BUG-LISPM at MIT-OZ

In Release 5.0, Experimental MIT 1.4, FEP 18, on Lisp Machine Jim Morrison (3600):

In a terminal window I tried connecting to oz 2 seconds after closing a
terminal connection to oz (same window even).  Why is it checking the
namespace servers to open this connection?  aaaarrrrgghhhhh!

>>Break: 
While in the function PROCESS-WAIT  CHAOS:WAIT  CHAOS:WAIT-FOR-CONNECT

PROCESS-WAIT:
   Arg 0 (WHOSTATE): "Connect R"
   Arg 1 (FUNCTION): #<DTP-COMPILED-FUNCTION (:INTERNAL CHAOS:WAIT 0) 7103724>
   Rest arg (ARGUMENTS): (#<CHAOS Connection for NAMESPACE to R 40160065> CHAOS:RFC-SENT-STATE 13262342 1130)

CHAOS:WAIT:  (P.C. = 34)
   Arg 0 (CONN): #<CHAOS Connection for NAMESPACE to R 40160065>
   Arg 1 (STATE): CHAOS:RFC-SENT-STATE
   Arg 2 (TIMEOUT): 1130
   Arg 3 (WHOSTATE): "Connect R"

CHAOS:WAIT-FOR-CONNECT:  (P.C. = 10)
   Arg 0 (CONN): #<CHAOS Connection for NAMESPACE to R 40160065>
   Arg 1 (EXPECTED-STATE): CHAOS:OPEN-STATE
   Arg 2 (TIMEOUT): 1130

CHAOS:CONNECT:  (P.C. = 250)
   Arg 0 (HOST): #<LISPM-HOST SCRC-RIVERSIDE 35305113>
   Arg 1 (CONTACT-NAME): "NAMESPACE"
   Arg 2 (WINDOW-SIZE): 15
   Arg 3 (TIMEOUT): 1130

CHAOS:OPEN-STREAM:  (P.C. = 65)
   Arg 0 (HOST): #<LISPM-HOST SCRC-RIVERSIDE 35305113>
   Arg 1 (CONTACT-NAME): "NAMESPACE"
   Rest arg: NIL

CHAOS:|MEDIUM-CHAOS-((NETWORK CHAOS))-G0223|:  (P.C. = 11)
   Arg 0 (SERVICE-ACCESS-PATH): #<SERVICE-ACCESS-PATH NAMESPACE (NAMESPACE) -- SCRC-RIVERSIDE on CHAOS 452335>
   Rest arg (ARGS): NIL

NETI:GET-CONNECTION-FOR-SERVICE-TO-HOST:  (P.C. = 12)
   Arg 0 (SERVICE-ACCESS-PATH): #<SERVICE-ACCESS-PATH NAMESPACE (NAMESPACE) -- SCRC-RIVERSIDE on CHAOS 452335>
   Arg 1 (NETWORK): #<CHAOS-NETWORK CHAOS 35271057>
   Arg 2 (IMPLEMENTATION): #<MEDIUM-IMPLEMENTATION 35224300>
   Arg 3 (CONNECTION-ARGS): NIL

NETI:GET-CONNECTION-FOR-SERVICE-1:  (P.C. = 220)
   Arg 0 (MEDIUM): #<MEDIUM-DESCRIPTION on CHAOS 452331>
   Arg 1 (SERVICE-ACCESS-PATH): #<SERVICE-ACCESS-PATH NAMESPACE (NAMESPACE) -- SCRC-RIVERSIDE on CHAOS 452335>
   Arg 2 (CONNECTION-ARGS): NIL

Rest of stack:
NET:GET-CONNECTION-FOR-SERVICE:  (P.C. = 7)
NETI:INVOKE-SERVICE-NAMESPACE-WITH-NAMESPACE:  (P.C. = 3)
NET:INVOKE-SERVICE-ACCESS-PATH:  (P.C. = 21)
NETI:INVOKE-SERVICE-ACCESS-PATH-WITH-CACHED-UNAVAILABILITY:  (P.C. = 43)
NETI:OPEN-NAMESPACE-SERVER:  (P.C. = 317)
NETI:QUERY-NAMESPACE-SERVER:  (P.C. = 75)
(:METHOD NET:OBJECT :CHECK-VALIDITY):  (P.C. = 227)
(:METHOD NET:OBJECT :CHECK-VALIDITY):  (P.C. = 34)
(:METHOD NET:OBJECT :BEFORE :GET):  (P.C. = 5)
(:METHOD NET:OBJECT :COMBINED :GET):  (P.C. = 7)
(:METHOD NET:NETWORK :NETWORK-TYPEP):  (P.C. = 6)
NETI:FIND-PATHS-FOR-MEDIUM-TO-HOST-1:  (P.C. = 330)
NETI:FIND-PATHS-FOR-MEDIUM-TO-HOST:  (P.C. = 31)
NETI:FIND-PATHS-TO-SERVICE-ON-HOST-1:  (P.C. = 6)
NET:FIND-PATHS-TO-SERVICE-ON-HOST:  (P.C. = 217)
NET:INVOKE-SERVICE-ON-HOST:  (P.C. = 50)
TELNET:GET-LOGIN-CONNECTION:  (P.C. = 37)
(:METHOD TELNET:NVT-WINDOW :CONNECT):  (P.C. = 6)
(:METHOD TELNET:NVT-WINDOW :TYPEIN-TOP-LEVEL):  (P.C. = 112)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
 6-Jul-84 18:50:17-EDT,4244;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 6 Jul 84 18:49-EDT
Date: Friday, 6 July 1984, 18:27-EDT
From:  <KDF at MIT-PYGMALION>
Subject: fasdump bug
To: BUG-LISPM at MIT-OZ

In Release 5.0, Experimental MIT 1.4, FEP 18, on Lisp Machine Jimi Hendrix (3600):

I was trying to FASDUMP a (rather large) s-expression, and got the following error:

>>Trap: The subscript given to the SYS:FAST-ASET instruction, 435728, on #<ART-Q-435728 136427424> was beyond the length, 435728.
While in the function COPY-ARRAY-PORTION  (:METHOD SI:EQ-HASH-TABLE :CLEAR-HASH)  SI:START-BIN-FILE

COPY-ARRAY-PORTION:  (P.C. = 51)
   Arg 0 (FROM-ARRAY): #<ART-Q-435728 136427424>
   Arg 1 (FROM-START): 0
   Arg 2 (FROM-END): 0
   Arg 3 (TO-ARRAY): #<ART-Q-435728 136427424>
   Arg 4 (TO-START): 0
   Arg 5 (TO-END): 566512
   Local 6 (FROM): #<ART-Q-435728 136427424>
   Local 7: 1342190937
   Local 8: #<DTP-LOCATIVE 136427427>
   Local 9: 435728
   Local 10 (TO): #<ART-Q-435728 136427424>
   Local 11: 1342190937
   Local 12: #<DTP-LOCATIVE 136427427>
   Local 13: 435728
   Local 14 (FROM-LENGTH): 0
   Local 15 (TO-LENGTH): 566512
   Local 16 (INDEX-FROM): 0
   Local 17 (INDEX-TO): 435728
   Local 18 (NULL-ELEM): NIL

(:METHOD SI:EQ-HASH-TABLE :CLEAR-HASH):  (P.C. = 40)
   Arg 0 (SELF): #<EQ-HASH-TABLE 136427342>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:EQ-HASH-TABLE -- 7. IV's, 0. FL's 43721035>
   Arg 2 (OPERATION): :CLEAR-HASH
   --Defaulted args:--
   Arg 3 (FORCE-P): NIL

SI:START-BIN-FILE:  (P.C. = 4)
   Arg 0 (STREAM): #<FILE-OUTPUT-BINARY-STREAM "PIG:SYS$DISK:[KDF.GIZMO]TNS3.FMP" 141061044>

SYS:DUMP-FORMS-TO-FILE:  (P.C. = 44)
   Arg 0 (FILENAME): "PIG:SYS$DISK:[KDF.GIZMO]TNS3.FMP"
   Arg 1 (FORMS): ((LOAD-ENVISIONMENT (QUOTE (ENVISIONMENT ** ** ** ** ** ** ** ** ** ...))))
   --Defaulted args:--
   Arg 2 (FILE-ATTRIBUTE-LIST): (:PACKAGE :USER)

FILE-OUT-ENV:  (P.C. = 12)  (from PIG:USRD$:[KDF]READER)
   Arg 0 (ENV): #<ENV-CF 16243476>
   Arg 1 (FILE): "PIG:SYS$DISK:[KDF.GIZMO]TNS3.FMP"

SI:*EVAL:  (P.C. = 370)
   Arg 0 (FORM): (FILE-OUT-ENV (SYMEVAL *ENVISIONMENT-NAME*) FILE-NAME)

COND:  (P.C. = 23)
   Rest arg (CLAUSES): (((EQ FORMAT (QUOTE ENGLISH)) (DUMP-ENVISIONER-RESULTS-IN-ENGLISH (SYMEVAL *ENVISIONMENT-NAME*) COMMENTS FILE-NAME) (SETQ *OLD-FILE-NAME* FILE-NAME) (SETQ *OLD-COMMENTS* COMMENTS) (SETQ *OLD-MODE* (QUOTE ENGLISH)) (TO-STATUS-LINE (FORMAT NIL "English dump of ~A complete." *ENVISIONMENT-NAME*))) ((EQ FORMAT (QUOTE LOADABLE)) (DUMP-RESULTS (DUMP-ENVISIONMENT **) FILE-NAME COMMENTS) (SETQ *OLD-FILE-NAME* FILE-NAME) (SETQ *OLD-COMMENTS* COMMENTS) (SETQ *OLD-MODE* (QUOTE LOADABLE)) (TO-STATUS-LINE (FORMAT NIL "Loadable dump of ~A complete." *ENVISIONMENT-NAME*))) ((EQ FORMAT (QUOTE FASDUMP)) (SETF (ENV-CF-COMMENTS **) COMMENTS) (FILE-OUT-ENV (SYMEVAL *ENVISIONMENT-NAME*) FILE-NAME)) (T (DUMP-ENVISIONING-RESULTS (SYMEVAL *ENVISIONMENT-NAME*) COMMENTS FILE-NAME) (SETQ *OLD-FILE-NAME* FILE-NAME) (SETQ *OLD-COMMENTS* COMMENTS) (SETQ *OLD-MODE* (QUOTE TERSE)) (TO-STATUS-LINE (FORMAT NIL "Terse dump of ~A complete." *ENVISIONMENT-NAME*))))

SI:*EVAL:  (P.C. = 421)
   Arg 0 (FORM): (SI:DISPLACED (CASEQ FORMAT (ENGLISH (DUMP-ENVISIONER-RESULTS-IN-ENGLISH ** COMMENTS FILE-NAME) (SETQ *OLD-FILE-NAME* FILE-NAME) (SETQ *OLD-COMMENTS* COMMENTS) (SETQ *OLD-MODE* **) (TO-STATUS-LINE **)) (LOADABLE (DUMP-RESULTS ** FILE-NAME COMMENTS) (SETQ *OLD-FILE-NAME* FILE-NAME) (SETQ *OLD-COMMENTS* COMMENTS) (SETQ *OLD-MODE* **) (TO-STATUS-LINE **)) (FASDUMP (SETF ** COMMENTS) (FILE-OUT-ENV ** FILE-NAME)) (T (DUMP-ENVISIONING-RESULTS ** COMMENTS FILE-NAME) (SETQ *OLD-FILE-NAME* FILE-NAME) (SETQ *OLD-COMMENTS* COMMENTS) (SETQ *OLD-MODE* **) (TO-STATUS-LINE **))) (SI:DISPLACED (SELECTQ FORMAT (ENGLISH ** ** ** ** **) (LOADABLE ** ** ** ** **) (FASDUMP ** **) (T ** ** ** ** **)) (COND (** ** ** ** ** **) (** ** ** ** ** **) (** ** **) (T ** ** ** ** **))))

Rest of stack:
MULTIPLE-VALUE-BIND:  (P.C. = 42)
SI:*EVAL:  (P.C. = 605)
COND:  (P.C. = 23)
SI:*EVAL:  (P.C. = 421)
(:METHOD TV:MENU-EXECUTE-MIXIN :EXECUTE):  (P.C. = 53)
DEBACLE-TOP-LEVEL:  (P.C. = 103)  (from PIG:USRD$:[KDF]DISPLAY)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
 6-Jul-84 22:06:20-EDT,4705;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 6 Jul 84 17:47-EDT
Date: Friday, 6 July 1984, 17:46-EDT
From:  <APIARY-SERVERS at MIT-APIARY-6>
Subject: tv:host bad keyword in choose-variable-value-window
To: BUG-LISPM at MIT-OZ

In Release 5.0 [Beta Test rev 7], FEP 18, on Lisp Machine Apiary-6 (3600):

Clicked on Reload/Retreive in the LMFS and got this.
Could this be a result of an old-world load, and if so, when
will the file server work with 5-0-Plus.Load???

Cheers,

TOMR


>>Error: TV:HOST bad keyword in a CHOOSE-VARIABLE-VALUES-WINDOW
While in the function (:METHOD TV:BASIC-CHOOSE-VARIABLE-VALUES :DECODE-VARIABLE-TYPE)  (:METHOD TV:BASIC-CHOOSE-VARIABLE-VALUES :DECODE-ITEM-FOR-PRINTING)  (:METHOD TV:BASIC-CHOOSE-VARIABLE-VALUES :ITEM-WIDTH)

(:METHOD TV:BASIC-CHOOSE-VARIABLE-VALUES :DECODE-VARIABLE-TYPE):  (P.C. = 52)
   Arg 0 (SELF): #<TEMPORARY-CHOOSE-VARIABLE-VALUES-WINDOW Temporary Choose Variable Values Window 1 3201312 deactivated>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:BASIC-CHOOSE-VARIABLE-VALUES -- 7. IV's, 0. FL's 104611070>
   Arg 2 (OPERATION): :DECODE-VARIABLE-TYPE
   Arg 3 (KWD-AND-ARGS): (TV:HOST)
   Local 4 (KEY): TV:HOST
   Local 5 (TEM): NIL
   Local 6 (PF): "~S bad keyword in a CHOOSE-VARIABLE-VALUES-WINDOW"
   Local 7 (RF): TV:HOST
   Local 8 (CHOICES): #<DTP-LOCATIVE 43400444>
   Local 9 (GPVF): #<DTP-LOCATIVE 43400451>
   Local 10 (GVVF): #<DTP-EVEN-PC 22766162>

(:METHOD TV:BASIC-CHOOSE-VARIABLE-VALUES :DECODE-ITEM-FOR-PRINTING):  (P.C. = 72)
   Arg 0 (SELF): #<TEMPORARY-CHOOSE-VARIABLE-VALUES-WINDOW Temporary Choose Variable Values Window 1 3201312 deactivated>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:BASIC-CHOOSE-VARIABLE-VALUES -- 7. IV's, 0. FL's 104611070>
   Arg 2 (OPERATION): :DECODE-ITEM-FOR-PRINTING
   Arg 3 (ITEM): (LMFS:*BACKUP-RELOAD-FILE-HOST* "File Host" TV:HOST)

(:METHOD TV:BASIC-CHOOSE-VARIABLE-VALUES :ITEM-WIDTH):  (P.C. = 13)
   Arg 0 (SELF): #<TEMPORARY-CHOOSE-VARIABLE-VALUES-WINDOW Temporary Choose Variable Values Window 1 3201312 deactivated>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:BASIC-CHOOSE-VARIABLE-VALUES -- 7. IV's, 0. FL's 104611070>
   Arg 2 (OPERATION): :ITEM-WIDTH
   Arg 3 (ITEM): (LMFS:*BACKUP-RELOAD-FILE-HOST* "File Host" TV:HOST)
   --Defaulted args:--
   Arg 4 (EXTRA-WIDTH): 0
   Arg 5 (STOP-X): NIL

(:METHOD TV:BASIC-CHOOSE-VARIABLE-VALUES :ADJUST-GEOMETRY-FOR-NEW-VARIABLES):  (P.C. = 24)
   Arg 0 (SELF): #<TEMPORARY-CHOOSE-VARIABLE-VALUES-WINDOW Temporary Choose Variable Values Window 1 3201312 deactivated>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:BASIC-CHOOSE-VARIABLE-VALUES -- 7. IV's, 0. FL's 104611070>
   Arg 2 (OPERATION): :ADJUST-GEOMETRY-FOR-NEW-VARIABLES
   Arg 3 (WID): 1120

TV:CHOOSE-VARIABLE-VALUES:  (P.C. = 330)
   Arg 0 (VARIABLES): ((LMFS:*BACKUP-RELOAD-ACTION* "Operation Wanted" :MENU-ALIST (("Reload all" :VALUE :ALL :DOCUMENTATION "Reload all files on this tape onto the local file system") (" Retrieve Single Files" :VALUE :RETRIEVE :DOCUMENTATION "Retrieve specific files or groups of file according to specs below") (" List tape" :VALUE :LIST :DOCUMENTATION "Display on the console a listing of what files are on this tape") (" Compare" :VALUE :COMPARE :DOCUMENTATION "Compare files on tape to files stored on machine"))) (LMFS:*BACKUP-TAPE-HOST* "Tape Host" :STRING) (LMFS:*BACKUP-DUMP-TAPE-DRIVE* "Tape Drive" :STRING) (LMFS:*BACKUP-DUMP-TAPE-NAME* "Tape Name" :STRING) (LMFS:*BACKUP-RELOAD-FILE-HOST* "File Host" TV:HOST) (LMFS:*BACKUP-RELOAD-LIST* "Files to retrieve (*'s ok)" LMFS:RELOADER-PATHNAME-LIST) "")
   Rest arg (OPTIONS): (:LABEL "Reloader//Retriever options" :MARGIN-CHOICES ("Do It" ("Abort" (*THROW ** **))) :WIDTH ">LONGDIR>THING.LISP.NEWEST,  >OTHERDIR>SUB>FOO.QFASL.268,  >LMIO>QFILE.*.*")

LMFS:RELOADER-CHOOSE-VARIABLE-VALUES:  (P.C. = 14)

LMFS:RELOADER:  (P.C. = 156)
   --Defaulted args:--
   Arg 0 (ACTION): :RETRIEVE
   Rest arg (OPTIONS): NIL

(:METHOD LMFS:FSMAINT-FRAME :EXECUTE):  (P.C. = 456)
   Arg 0 (SELF): #<FSMAINT-FRAME Fsmaint Frame 1 32642137 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor LMFS:FSMAINT-FRAME -- 11. IV's, 12. FL's 103732714>
   Arg 2 (OPERATION): :EXECUTE
   Arg 3 (KEY): :RELOAD

Rest of stack:
(:METHOD LMFS:FSMAINT-FRAME :INTERPRET-INPUT):  (P.C. = 167)
LMFS:FSMAINT-READ-FCN:  (P.C. = 20)
SYS:CALL-FUNNY-FUNCTION:  (P.C. = 101)
Closure of LMFS:FSMAINT-READ-FCN:
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 142)
SI:LISP-COMMAND-LOOP:  (P.C. = 115)
(:METHOD LMFS:FSMAINT-FRAME :FSMAINT-TOP-LEVEL):  (P.C. = 76)
LMFS:FSMAINT-TOP-LEVEL:  (P.C. = 6)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
 6-Jul-84 22:53:40-EDT,2998;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 6 Jul 84 22:52-EDT
Date: Thursday, 5 July 1984, 17:13-EDT
From: Jerry Roylance <GLR at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In Release 5.0, Experimental MIT 1.4, FEP 18, on Lisp Machine John Lennon (3600):

I had BYPASS and SYSPRV enabled for this operation....

>>Error: no privilege for attempted operation
         For PIG:USRD$:[GLR.FUNCT]ARITH.LSP;108
While in the function (:METHOD FS:HOST-UNIT :COMMAND)  FS:CHANGE-PROPERTIES-CHAOS  (:METHOD FS:QFILE-ACCESS-PATH :CHANGE-PROPERTIES)

(:METHOD FS:HOST-UNIT :COMMAND):  (P.C. = 231)
   Arg 0 (SELF): #<HOST-UNIT 536402>
   Arg 1 (SELF-MAPPING-TABLE): FS:HOST-UNIT
   Arg 2 (OPERATION): :COMMAND
   Arg 3 (MARK-P): NIL
   Arg 4 (STREAM-OR-HANDLE): NIL
   Arg 5 (SIMPLE-P): NIL
   Arg 6 (WHOSTATE): "Change Properties"
   Rest arg (COMMANDS): NIL
   Local 8 (HANDLE): NIL
   Local 9 (STREAM): NIL
   Local 10 (PKT): #<Chaos Packet 13042152>
   Local 11 (SUCCESS): NIL
   Local 12 (STRING): " ERROR ATF C no privilege for attempted operation"
   Local 13 (TRANSACTION-ID): "T2207"
   Local 14 (CREATE-P): NIL
   Local 15 (CONDITION): NIL

FS:CHANGE-PROPERTIES-CHAOS:  (P.C. = 24)
   Arg 0 (ACCESS-PATH): #<NORMAL-QFILE-ACCESS-PATH PIG using QFILE 536371>
   Arg 1 (*COMMAND-PATHNAME*-initialization): #<VMS-PATHNAME "PIG:USRD$:[GLR.FUNCT]ARITH.LSP;108">
   Arg 2 (PROPERTIES): (:CREATION-DATE 2666534400)

(:METHOD FS:QFILE-ACCESS-PATH :CHANGE-PROPERTIES):  (P.C. = 6)
   Arg 0 (SELF): #<NORMAL-QFILE-ACCESS-PATH PIG using QFILE 536371>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:QFILE-ACCESS-PATH -- 3. IV's, 0. FL's 43011662>
   Arg 2 (OPERATION): :CHANGE-PROPERTIES
   Arg 3 (PATHNAME): #<VMS-PATHNAME "PIG:USRD$:[GLR.FUNCT]ARITH.LSP;108">
   Rest arg (PROPERTIES): (:CREATION-DATE 2666534400)

(:METHOD FS:ACTIVE-PATHNAME-MIXIN :CHANGE-PROPERTIES):  (P.C. = 13)
   Arg 0 (SELF): #<VMS-PATHNAME "PIG:USRD$:[GLR.FUNCT]ARITH.LSP;108">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:ACTIVE-PATHNAME-MIXIN -- 1. IV's, 0. FL's 42612221>
   Arg 2 (OPERATION): :CHANGE-PROPERTIES
   Arg 3 (IGNORE): T
   Rest arg (PROPERTIES): (:CREATION-DATE 2666534400)

FS:CHANGE-FILE-PROPERTIES:  (P.C. = 101)
   Arg 0 (PATHNAME): #<VMS-PATHNAME "PIG:USRD$:[GLR.FUNCT]ARITH.LSP;108">
   Arg 1 (ERROR-P): T
   Rest arg (PROPERTIES): (:CREATION-DATE 2666534400)

ZWEI:CHANGE-FILE-PROPERTIES:  (P.C. = 133)
   Arg 0 (PATHNAME): #<VMS-PATHNAME "PIG:USRD$:[GLR.FUNCT]ARITH.LSP;108">

ZWEI:COM-DIRED-CHANGE-FILE-PROPERTIES:  (P.C. = 14)

ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
   Arg 0 (COMMAND): ZWEI:COM-DIRED-CHANGE-FILE-PROPERTIES
   Arg 1 (CHAR): 46
   Arg 2 (PREFIX-CHAR): NIL
   Arg 3 (HOOK-LIST): NIL

Rest of stack:
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 200)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 41)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
 6-Jul-84 23:18:17-EDT,488;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 6 Jul 84 23:17-EDT
Date: Thursday, 5 July 1984, 17:25-EDT
From:  <BOXER at MIT-OZ>
Subject: load-patches
To: BUG-LISPM at MIT-OZ

In Release 5.0, Experimental MIT 1.4, Experimental Boxer 2.4, on Lisp Machine Joe Louis (3600):

Load-patches doesn't work today. The machine cannot find the patch
directories. This error might (my uninformed guess) be due to the name
space server (LM15) being down.

		-Thanx
		Roland Ouellette

 6-Jul-84 23:28:41-EDT,616;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 6 Jul 84 23:28-EDT
Date: 6 Jul 1984  23:28 EDT (Fri)
Message-ID: <SR.EHPYC.12029301764.BABYL@MIT-SPEECH>
From: Scott Cyphers <SR.EHPYC@MIT-SPEECH>
To:   <BOXER@MIT-OZ>
Cc:   BUG-LISPM@MIT-OZ
Subject: load-patches
In-reply-to: Msg of 5 Jul 1984 17:25-EDT from <BOXER at MIT-OZ>

LM15 has been up for 35 hours, and that shouldn't affect anything with
patches anyways, unless you were booting a world from another site.  I
looked on Oz, and the System patch directory is there.  What system
didn't have the patches?  Maybe it's patch directory got reaped?
 7-Jul-84 00:18:43-EDT,345;000000000000
Mail-From: MDC.WAYNE created at  7-Jul-84 00:15:43
Date: Sat 7 Jul 84 00:15-EDT
From: Wayne H. McGuire <MDC.WAYNE@MIT-OZ>
Subject: sort anomaly
To: bug-lispm@MIT-OZ

The 3600 usually sorts lines with impeccable accuracy,
but I recently encountered this curiosity:

     catalog_entry_for
     catalog_about

Why?

--Wayne McGuire
 7-Jul-84 03:51:58-EDT,491;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 7 Jul 84 03:50-EDT
Date: Saturday, 7 July 1984, 03:51-EDT
From:  <TIM at MIT-MC>
Subject: VMS pathname lossage
To: BUG-LISPM at MIT-OZ

In Release 5.0, Experimental MIT 1.4, FEP 18, on Lisp Machine Keith Moon (3600):

The VMS pathname parser does not understand an explicit semi with a null
version to mean NEWEST (eg: *.LSP;).  It doesn't understand ;0 either.
So how can you, for instance, do a Dired of only the most recent files?
 7-Jul-84 17:39:00-EDT,940;000000000000
Mail-From: ZVONA created at  7-Jul-84 17:38:18
Date: Sat 7 Jul 84 17:38-EDT
From: David Chapman <ZVONA@MIT-OZ>
Subject: Namespace lossage
To: bug-lispm@MIT-OZ

We have this form of namespace lossage where somehow machines can't
talk to cadr15.  If you go and look at cadr15, it is up, but it gets
an error notification to the effect that "The object of type host was
not found" (it doesn't say which host object).  This causes your
machine to have to talk to Waikato, R, G, Russian, etc., in order to
load a file off of Oz.

What can I do to display and report the actual error that cadr15 gets?

By the way, why should doing (hostat "morrison") on cadr15 (morrison is
a local host) cause cadr15 to dicker with Russian?

Unsolicited barfage: This namespace crock is a complete loss.  The
idea was good, but the implementation sucks.  It isn't nearly worth
the trouble for what it buys you.  I'd dike it out if I could.
 7-Jul-84 22:47:50-EDT,1873;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 7 Jul 84 22:47-EDT
Date: 7 Jul 1984  22:46 EDT (Sat)
Message-ID: <SR.EHPYC.12029556415.BABYL@MIT-SPEECH>
From: Scott Cyphers <SR.EHPYC@MIT-SPEECH>
To:   David Chapman <ZVONA@MIT-OZ>
Cc:   bug-lispm@MIT-OZ
Subject: Namespace lossage
In-reply-to: Msg of 7 Jul 1984  17:38-EDT from David Chapman <ZVONA at MIT-OZ>

I think the problem is that Cadr15 isn't responding fast enough for
the namespace query, so the asker gives up.  Cadr15 keeps going on
with trying to answer the query, finds out that the other end closed
the connection, and gives an error.  We're using a Cadr to make
Versatec printouts, and it has the same kind of problem. File serving
a Cadr will often have it happen too.

I'd say the namespace stuff is only about 1/2 a complete loss or so,
particularly since I've got code depending upon it now (of course I've
also got code to get around some of the lossage).  On the surface, it
looks quite modular.  But try to add a module that isn't like the
other ones and you've got to figure out what the entire system is
doing (and that ain't easy) and then figure out which system function
to rewrite so that the least number of things will break when a new
system comes out.  We seem to be winning completely now by having made
ourselves a site separate from the MIT site, and have had no problems
with the Symbolics disappearance.  Anyone is welcome to take some of
the stuff in GOLDY:>S>ZOO>ZOO.LISP and GOLDY:>S>ZOO-KEEPER.LISP and
adapt it for Tech Square if you don't want to wait for release 78.  Of
course this code is proprietary and a valuable trade secret of MIT,
subject to change without notice, and should not be construed as a
committment by MIT, and MIT aassumes no responsibility.  Portions may
also be covered by some Symbolics copyright and similar conditions.
 8-Jul-84 00:58:45-EDT,2315;000000000000
Received: from MIT-YOGI by MIT-OZ via Chaosnet; 8 Jul 84 00:58-EDT
Date: Sunday, 8 July 1984, 00:57-EDT
From: Scott Cyphers <sr.ehpyc at MIT-SPEECH>
Subject: Mixed namespace lossage and distribution lossage
To: BUG-LISPM at MIT-OZ

In Release 5.1, Spire-Macros 1.9, Compute 1.4, Attribute 1.8, Audio 1.2,
Speech-Attributes 1.1, Display 1.12, Speech-Layouts 1.8,
Experimental Versatec 2.0, Experimental Prtout 1.1, Spire 13.0,
SpireX 10.3, Experimental ZOO 2.2, on Lisp Machine Yogi (LM-2):

Here's one for the complete loss half of the namespace code, as well as
the completely totally losing (but at least better than it used to be
thanks to the winning half of the namespace code) distribution tape
system.  I'm doing dis:write-distribution-tape, and I caught my who-line
trying to talk to SCH|G and broke in to investigate.  It seems that the
code thought I might want to do a remote tape to some host out on the
Arpanet and it was going to find hosts out there supporting the service
just in case I asked which ones supported it.  Now it would be amusing
to write this on a tape on a Dandelion at Xerox were it not so late at
night, and were it not that speech is so much more convenient.  Really,
there is no need to do this lookup unless I ask which ones support it,
and then I should have a choice of specifying which sites I'm interested
in asking about instead of getting every tape drive reachable via the
namespace.

>>Break: 
While in the function PROCESS-WAIT  CHAOS:WAIT  CHAOS:WAIT-FOR-CONNECT

TAPE:FIND-TAPE-SERVICE-HOSTS:  (P.C. = 60)

TAPE:DEFAULT-HOST:  (P.C. = 32)

DIS:GET-DISTRIBUTION-OPTIONS:  (P.C. = 126)

DIS:WRITE-DISTRIBUTION-TAPE:  (P.C. = 221)

SI:*EVAL:  (P.C. = 676)
   Arg 0 (FORM): (DIS:WRITE-DISTRIBUTION-TAPE)

SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 330)
   Rest arg: (:NAME "Lisp Top Level in Lisp Listener 1" :ABORTED-FUNCTION NIL :BEFORE-PROMPT-FUNCTION NIL :READ-FUNCTION NIL :EVAL-FUNCTION NIL ...)

SI:LISP-COMMAND-LOOP:  (P.C. = 251)
   Arg 0 (STREAM): #<LISP-LISTENER Lisp Listener 1 32127307 exposed>
   Rest arg: (:NAME "Lisp Top Level in Lisp Listener 1")

SI:LISP-TOP-LEVEL1:  (P.C. = 47)
   Arg 0 (TERMINAL-IO): #<LISP-LISTENER Lisp Listener 1 32127307 exposed>

Rest of stack:
SI:LISP-TOP-LEVEL:  (P.C. = 35)
 8-Jul-84 07:34:43-EDT,4149;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 8 Jul 84 07:34-EDT
Date: Sunday, 8 July 1984, 07:31-EDT
From:  <GAVAN at MIT-PYGMALION>
Subject: logical pathname
To: BUG-LISPM at MIT-OZ

In Release 5.0, Experimental MIT 1.4, on Lisp Machine Buddy Holly (3600):

Trying to load pig:[relatus]avant.lsp.  

>>Trap: The function (:METHOD FS:LOGICAL-HOST :TRANSLATE) was called with too many arguments.
While in the function (:METHOD FS:LOGICAL-HOST :TRANSLATE)  FS:LOGICAL-PATHNAME-EXTRA-TRANSLATION-CONDITION-HANDLER  (:METHOD DBG:BIND-HANDLER :HANDLE-CONDITION)

(:METHOD FS:LOGICAL-HOST :TRANSLATE):  (P.C. = 0)
   Arg 0 (SELF): #<LOGICAL-HOST RL>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:LOGICAL-HOST -- 5. IV's, 1. FL's 34762500>
   Arg 2 (OPERATION): :TRANSLATE
   Arg 3 (PATHNAME): :VMS
   --Extraneous args:--
   Arg 4: :NAME
   Arg 5: "DEFINE-DICTIONARY"

FS:LOGICAL-PATHNAME-EXTRA-TRANSLATION-CONDITION-HANDLER:  (P.C. = 44)
   Arg 0 (ERR): #<INVALID-PATHNAME-COMPONENT 12307660>

(:METHOD DBG:BIND-HANDLER :HANDLE-CONDITION):  (P.C. = 43)
   Arg 0 (SELF): #<BIND-HANDLER 47021527>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor DBG:BIND-HANDLER -- 1. IV's, 0. FL's 43725526>
   Arg 2 (OPERATION): :HANDLE-CONDITION
   Arg 3 (CONDITION): #<INVALID-PATHNAME-COMPONENT 12307660>
   Arg 4 (IGNORE): #<DTP-LOCATIVE 140625>

(:METHOD CONDITION :SIGNAL):  (P.C. = 114)
   Arg 0 (SELF): #<INVALID-PATHNAME-COMPONENT 12307660>
   Arg 1 (SELF-MAPPING-TABLE): CONDITION
   Arg 2 (OPERATION): :SIGNAL
   Arg 3 (PROCEEDABLY): T

(:METHOD CONDITION :COMBINED :SIGNAL):  (P.C. = 21)
   Arg 0 (SELF): #<INVALID-PATHNAME-COMPONENT 12307660>
   Arg 1 (SELF-MAPPING-TABLE): CONDITION
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

SIGNAL:  (P.C. = 10)
   Arg 0 (FLAVOR): FS:INVALID-PATHNAME-COMPONENT
   Rest arg (INIT-OPTIONS): (:PATHNAME #<VMS-PATHNAME "PIG:"> :COMPONENT :NAME :COMPONENT-VALUE "DEFINE-DICTIONARY" :COMPONENT-DESCRIPTION "file name" :PROCEED-TYPES (:NEW-COMPONENT))

(:METHOD FS:PATHNAME :VALIDATE-COMPONENT):  (P.C. = 40)
   Arg 0 (SELF): #<VMS-PATHNAME "PIG:">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:PATHNAME -- 0. IV's, 1. FL's 34762576>
   Arg 2 (OPERATION): :VALIDATE-COMPONENT
   Arg 3 (TEST-ARG): "DEFINE-DICTIONARY"
   Arg 4 (TEST-ARG-LOC): #<DTP-LOCATIVE 3312570>
   Arg 5 (VALID-MSG): :RAW-NAME
   Arg 6 (TEST-MSG): :VALID-NAME-P
   Arg 7 (CASE-MSG): :CASE-NAME
   Arg 8 (UNCASE-MSG): :UNCASE-NAME
   Arg 9 (COMPONENT): :NAME
   Arg 10 (PRETTY-NAME): "file name"

(:METHOD FS:PATHNAME :VALIDATE):  (P.C. = 43)
   Arg 0 (SELF): #<VMS-PATHNAME "PIG:">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:PATHNAME -- 0. IV's, 1. FL's 34762576>
   Arg 2 (OPERATION): :VALIDATE

Rest of stack:
(:METHOD FS:PATHNAME-HASH-TABLE-MIXIN :GET-PATHNAME):  (P.C. = 27)
(:METHOD NET:PATHNAME-HOST-MIXIN :GET-PATHNAME):  (P.C. = 27)
FS:MAKE-PATHNAME-1:  (P.C. = 562)
(:METHOD FS:PATHNAME :NEW-PATHNAME):  (P.C. = 21)
(:METHOD FS:VMS-MAILBOX-PATHNAME-MIXIN :COMBINED :NEW-PATHNAME):  (P.C. = 37)
FS:MAKE-PATHNAME:  (P.C. = 27)
(:METHOD FS:LOGICAL-PATHNAME :TRANSLATED-PATHNAME):  (P.C. = 33)
(:INTERNAL (:METHOD FS:LOGICAL-PATHNAME :COMBINED :TRANSLATED-PATHNAME) 0.):  (P.C. = 7)
(:METHOD FS:LOGICAL-PATHNAME :WHOPPER :TRANSLATED-PATHNAME):  (P.C. = 21)
(:METHOD FS:LOGICAL-PATHNAME :COMBINED :TRANSLATED-PATHNAME):  (P.C. = 11)
(:DEFUN-METHOD FS:LOGICAL-PATHNAME-PLIST-PASS-ON):  (P.C. = 5)
(:METHOD FS:LOGICAL-PATHNAME :PROPERTY-LIST):  (P.C. = 10)
FS:SET-LOGICAL-PATHNAME-HOST:  (P.C. = 477)
SI:*EVAL:  (P.C. = 370)
SI:LOAD-BIN-OP-FORM:  (P.C. = 4)
SI:BIN-LOAD-NEXT-COMMAND:  (P.C. = 20)
SI:BIN-LOAD-TOP-LEVEL:  (P.C. = 6)
SI:BIN-LOAD-FILE-INTERNAL:  (P.C. = 111)
SI:BIN-LOAD-FILE:  (P.C. = 22)
SI:FASLOAD-1:  (P.C. = 5)
SI:DO-FILE-TRANSFORMATIONS:  (P.C. = 242)
SI:PERFORM-TRANSFORMATIONS:  (P.C. = 166)
MAKE-SYSTEM:  (P.C. = 222)
SI:*EVAL:  (P.C. = 370)
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 200)
SI:LISP-COMMAND-LOOP:  (P.C. = 115)
SI:LISP-TOP-LEVEL1:  (P.C. = 22)
SI:LISP-TOP-LEVEL2:  (P.C. = 5)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
 8-Jul-84 12:08:09-EDT,491;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 8 Jul 84 12:07-EDT
Date: Sunday, 8 July 1984, 12:04-EDT
From:  <GAVAN at MIT-PYGMALION>
Subject: non-sensitive method specs.
To: BUG-LISPM at MIT-OZ

In Release 5.0, Experimental MIT 1.4, Experimental RELATUS 119.0, on Lisp Machine Buddy Holly (3600):

Doing m-. in a callers buffer makes all function specs mouse-sensitive but not
method specs.  You shouldn't have to go to the flavor examiner to find them so
you can edit them. No?
 8-Jul-84 15:49:06-EDT,590;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 8 Jul 84 15:48-EDT
Date: Sunday, 8 July 1984, 15:44-EDT
From:  <GAVAN at MIT-PYGMALION>
Subject: adding patches recursively.
To: BUG-LISPM at MIT-OZ

In Release 5.0, Experimental MIT 1.4, Experimental RELATUS 119.0, on Lisp Machine Buddy Holly (3600):

There should probably be a check that prevents sleepy-heads from typing m-x
add patch from inside a patch file (they usually mean m-x finish patch).  If
done from the top of the current patch file, at least, it infinitely
reproduces the contents of the patch file inside itself.
 8-Jul-84 15:53:41-EDT,2431;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 8 Jul 84 15:52-EDT
Date: Sunday, 8 July 1984, 15:46-EDT
From:  <GAVAN at MIT-PYGMALION>
Subject: redisplay
To: BUG-LISPM at MIT-OZ

In Release 5.0, Experimental MIT 1.4, Experimental RELATUS 119.0, on Lisp Machine Buddy Holly (3600):

While trying to kill the region in which I had recursively added patches
(see previous report).

>>Error: Recenter type :ABSOLUTE left point outside the window
While in the function ZWEI:REDISPLAY  ZWEI:REDISPLAY-ALL-WINDOWS  (:METHOD ZWEI:EDITOR :EDIT)

ZWEI:REDISPLAY:  (P.C. = 1471)
   Arg 0 (WINDOW): #<WINDOW 56636212>
   --Defaulted args:--
   Arg 1 (RECENTER-TYPE): :ABSOLUTE
   Arg 2 (RC1): NIL
   Arg 3 (RC2): NIL
   Arg 4 (FORCE-TO-COMPLETION-P): NIL
   Local 5 (N-PLINES): 48.
   Local 6 (POINT): ("" 0. :NORMAL)
   Local 7 (SHEET): #<ZMACS-WINDOW-PANE Zmacs Window Pane 4 25240514 exposed>
   Local 8 (DEGREE): 4.
   Local 9 (POINT-BLINKER): #<RECTANGULAR-BLINKER 35040074>
   Local 10 (INTERVAL): #<FILE-BUFFER "19X6.LSP SYS$DISK:[RELATUS.PATCH] PIG:" 107233277>
   Local 11 (START-BP): (";;; -*- Mode: Lisp; Package: User; Base: 10.; Patch-File: T -*-" 0. :NORMAL)
   Local 12 (NOW): 55802.
   Local 13 (POINT-PLINE): NIL
   Local 14 (LH): 14.
   Local 15 (POINT-LINE): ""
   Local 16 (POINT-INDEX): 0.
   Local 17 (TOP-LINE): ";;; -*- Mode: Lisp; Package: User; Base: 10.; Patch-File: T -*-"
   Local 18 (TOP-INDEX): 0.
   Local 19 (LAST-BP): ("" 0. :MOVES)
   Local 20 (INITIAL-DEGREE): 4.
   Local 21 (*INTERVAL*-initialization): #<FILE-BUFFER "19X6.LSP SYS$DISK:[RELATUS.PATCH] PIG:" 107233277>

ZWEI:REDISPLAY-ALL-WINDOWS:  (P.C. = 34)
   --Defaulted args:--
   Arg 0 (FORCE-TO-COMPLETION-P): NIL
   Arg 1 (SELECT-P): T

(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 134)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 34325601>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:EDITOR -- 11. IV's, 0. FL's 41735612>
   Arg 2 (OPERATION): :EDIT
   --Defaulted args:--
   Arg 3 (TOP-LEVEL-P): T
   Arg 4 (DESCRIPTION): NIL

(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 41)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 34325601>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:TOP-LEVEL-EDITOR -- 12. IV's, 1. FL's 41735577>
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)

SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
   Arg 0 (IGNORE): NIL
 9-Jul-84 08:53:13-EDT,3967;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 9 Jul 84 08:52-EDT
Date: Monday, 9 July 1984, 08:52-EDT
From:  <GAVAN at MIT-PYGMALION>
Subject: Can't load patches.
To: BUG-LISPM at MIT-OZ

In Release 5.0, Experimental MIT 1.4, on Lisp Machine Buddy Holly (3600):

While trying to load patches.

>>Error: No such device
         For SYS: SITE; SYS.TRANSLATIONS.NEWEST
While in the function (:METHOD FS:HOST-UNIT :COMMAND)  FS:OPEN-CHAOS  (:METHOD FS:QFILE-ACCESS-PATH :OPEN)

(:METHOD FS:HOST-UNIT :COMMAND):  (P.C. = 231)
   Arg 0 (SELF): #<HOST-UNIT 501322>
   Arg 1 (SELF-MAPPING-TABLE): FS:HOST-UNIT
   Arg 2 (OPERATION): :COMMAND
   Arg 3 (MARK-P): NIL
   Arg 4 (STREAM-OR-HANDLE): (:CREATE "I1918")
   Arg 5 (SIMPLE-P): NIL
   Arg 6 (WHOSTATE): "Open"
   Rest arg (COMMANDS): ("OPEN " :READ " " :CHARACTER "" "" "" "" "" "" ...)
   Local 8 (HANDLE): "I1918"
   Local 9 (STREAM): NIL
   Local 10 (PKT): #<Chaos Packet 5143313>
   Local 11 (SUCCESS): NIL
   Local 12 (STRING): "I1918 ERROR DEV F No such device"
   Local 13 (TRANSACTION-ID): "T1928"
   Local 14 (CREATE-P): T
   Local 15 (CONDITION): NIL

FS:OPEN-CHAOS:  (P.C. = 643)
   Arg 0 (ACCESS-PATH): #<TOPS20-QFILE-ACCESS-PATH OZ using QFILE 501252>
   Arg 1 (REAL-PATHNAME): #<TOPS20-PATHNAME "OZ:SRC:<S.R5.SITE>SYS.TRANSLATIONS">
   Arg 2 (*COMMAND-PATHNAME*-initialization): #<LOGICAL-PATHNAME "SYS: SITE; SYS.TRANSLATIONS.NEWEST">
   Arg 3 (OPTIONS): (:DIRECTION :INPUT)

(:METHOD FS:QFILE-ACCESS-PATH :OPEN):  (P.C. = 7)
   Arg 0 (SELF): #<TOPS20-QFILE-ACCESS-PATH OZ using QFILE 501252>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:QFILE-ACCESS-PATH -- 3. IV's, 0. FL's 44411050>
   Arg 2 (OPERATION): :OPEN
   Arg 3 (REAL-PATHNAME): #<TOPS20-PATHNAME "OZ:SRC:<S.R5.SITE>SYS.TRANSLATIONS">
   Arg 4 (PATHNAME): #<LOGICAL-PATHNAME "SYS: SITE; SYS.TRANSLATIONS.NEWEST">
   Rest arg (OPTIONS): (:DIRECTION :INPUT)

(:METHOD FS:ACTIVE-PATHNAME-MIXIN :OPEN):  (P.C. = 14)
   Arg 0 (SELF): #<TOPS20-PATHNAME "OZ:SRC:<S.R5.SITE>SYS.TRANSLATIONS">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:ACTIVE-PATHNAME-MIXIN -- 1. IV's, 0. FL's 44246312>
   Arg 2 (OPERATION): :OPEN
   Arg 3 (PATHNAME): #<LOGICAL-PATHNAME "SYS: SITE; SYS.TRANSLATIONS.NEWEST">
   Rest arg (OPTIONS): (:DIRECTION :INPUT)

(:DEFUN-METHOD FS:LOGICAL-PATHNAME-PASS-ON):  (P.C. = 7)
   Arg 0 (SELF): #<LOGICAL-PATHNAME "SYS: SITE; SYS.TRANSLATIONS.NEWEST">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:LOGICAL-PATHNAME -- 0. IV's, 4. FL's 44242337>
   Rest arg (REST): (:OPEN #<LOGICAL-PATHNAME "SYS: SITE; SYS.TRANSLATIONS.NEWEST"> :DIRECTION :INPUT)

(:METHOD FS:LOGICAL-PATHNAME :OPEN):  (P.C. = 10)
   Arg 0 (SELF): #<LOGICAL-PATHNAME "SYS: SITE; SYS.TRANSLATIONS.NEWEST">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:LOGICAL-PATHNAME -- 0. IV's, 4. FL's 44242337>
   Arg 2 (OPERATION): :OPEN
   Rest arg (.ARGS.): (#<LOGICAL-PATHNAME "SYS: SITE; SYS.TRANSLATIONS.NEWEST"> :DIRECTION :INPUT)

FS:COMMON-LISP-OPEN:  (P.C. = 445)
   Arg 0 (PATHNAME): #<LOGICAL-PATHNAME "SYS: SITE; SYS.TRANSLATIONS.NEWEST">
   Arg 1 (KEYWORD-ARGS): NIL

OPEN:  (P.C. = 255)
   Arg 0 (PATHNAME): #<LOGICAL-PATHNAME "SYS: SITE; SYS.TRANSLATIONS.NEWEST">
   Rest arg (KEYWORD-ARGS): NIL

Rest of stack:
READFILE:  (P.C. = 62)
SI:READFILE-1:  (P.C. = 5)
SI:DO-FILE-TRANSFORMATIONS:  (P.C. = 242)
SI:PERFORM-TRANSFORMATIONS:  (P.C. = 166)
MAKE-SYSTEM:  (P.C. = 222)
LOAD-PATCHES:  (P.C. = 1066)
PATCH-LOAD:  (P.C. = 23)  (from PIG:USRD$:[GAVAN]LISPMINI)
HELLO:  (P.C. = 76)  (from PIG:USRD$:[GAVAN]LISPMINI)
SI:*EVAL:  (P.C. = 370)
PROGN:  (P.C. = 22)
SI:*EVAL:  (P.C. = 421)
COND:  (P.C. = 23)
SI:*EVAL:  (P.C. = 421)
LET:  (P.C. = 102)
SI:*EVAL:  (P.C. = 605)
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 200)
SI:LISP-COMMAND-LOOP:  (P.C. = 115)
SI:LISP-TOP-LEVEL1:  (P.C. = 22)
SI:LISP-TOP-LEVEL2:  (P.C. = 5)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
 9-Jul-84 10:08:04-EDT,680;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 9 Jul 84 10:07-EDT
Date: 9 Jul 1984  10:06 EDT (Mon)
Message-ID: <SR.EHPYC.12029942312.BABYL@MIT-SPEECH>
From: Scott Cyphers <SR.EHPYC@MIT-SPEECH>
To:   <GAVAN@MIT-PYGMALION>
Cc:   BUG-LISPM@MIT-OZ
Subject: Can't load patches.
In-reply-to: Msg of 9 Jul 1984 08:52-EDT from <GAVAN at MIT-PYGMALION>

Until Symbolics rises from the dead, if you haven't done this already,
this ought to get you back in action if you've got room for it on your
disk (or just make an SRC: a device on Oz that goes to PS: in your
logicals.cmd file)

boot
(si:login-to-sys-host)
(load "OZ:<S.R5.SITE>SYS.TRANSLATIONS")
(disk-save ...)
 9-Jul-84 14:06:33-EDT,2737;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 9 Jul 84 14:05-EDT
Date: Monday, 9 July 1984, 14:01-EDT
From: Steven C. Bagley <bagley at MIT-OZ>
Subject: M-X Hardcopy Buffer lossage
To: BUG-LISPM at MIT-OZ

In Release 5.0, Experimental MIT 1.4, on Lisp Machine Bing Crosby (3600):

M-X Hardcopy Buffer results in the following:

>>Trap: The function PRESS:NEXT-WORD was called with too many arguments.
While in the function PRESS:NEXT-WORD  PRESS:READ-SEGMENT-DATA  PRESS:LOAD-FONT-WIDTHS-1

PRESS:NEXT-WORD:  (from OZ:OZ:<L.IO1>RFONTW.BIN-5)
   --Extraneous args:--
   Arg 0: #<FILE-INPUT-BINARY-STREAM "SYS: PRESS-FONTS; FONTS.WIDTHS.NEWEST" 41564256>

PRESS:READ-SEGMENT-DATA:  (P.C. = 22)
   Arg 0 (WIDTHS-FILE): #<FILE-INPUT-BINARY-STREAM "SYS: PRESS-FONTS; FONTS.WIDTHS.NEWEST" 41564256>

PRESS:LOAD-FONT-WIDTHS-1:  (P.C. = 15)
   Arg 0 (FILENAME): #<LOGICAL-PATHNAME "SYS: PRESS-FONTS; FONTS.WIDTHS.NEWEST">
   --Defaulted args:--
   Arg 1 (FONTS-DESIRED): NIL

PRESS:GET-FONT-WIDTH-DATA-FOR-FILE:  (P.C. = 44)
   Arg 0 (FILENAME): #<LOGICAL-PATHNAME "SYS: PRESS-FONTS; FONTS.WIDTHS.NEWEST">

PRESS:GET-FONT-WIDTH-DATA-FOR-PRINTER:  (P.C. = 21)
   Arg 0 (PRINTER): #<PRINTER TREMONT-VIA-MC 16202726>
   --Defaulted args:--
   Arg 1 (PROBE): T

(:METHOD PRESS:PRESS-STREAM :BEFORE :INIT):  (P.C. = 3)
   Arg 0 (SELF): #<PRESS-STREAM 41562017>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor PRESS:PRESS-STREAM -- 34. IV's, 4. FL's 2672353>
   Arg 2 (OPERATION): :INIT
   Arg 3 (IGNORE): #<DTP-LOCATIVE 26500340>

(:METHOD PRESS:PRESS-STREAM :COMBINED :INIT):  (P.C. = 7)
   Arg 0 (SELF): #<PRESS-STREAM 41562017>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor PRESS:PRESS-STREAM -- 34. IV's, 4. FL's 2672353>
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

INSTANTIATE-FLAVOR:  (P.C. = 372)
   Arg 0 (FLAVOR-NAME): PRESS:PRESS-STREAM
   Arg 1 (INIT-PLIST): #<DTP-LOCATIVE 26500340>
   Arg 2 (SEND-INIT-MESSAGE-P): :MAYBE
   --Defaulted args:--
   Arg 3 (RETURN-UNHANDLED-KEYWORDS-P): NIL
   Arg 4 (AREA-TO-CONS-INSTANCE-IN): NIL

Rest of stack:
MAKE-INSTANCE:  (P.C. = 6)
SI:MAKE-HARDCOPY-STREAM:  (P.C. = 33)
SI:HARDCOPY-FROM-STREAM:  (P.C. = 27)
ZWEI:COM-HARDCOPY-BUFFER:  (P.C. = 20)
ZWEI:MAKE-MENU-COMMAND-DRIVER:  (P.C. = 17)
SYS:CALL-FUNNY-FUNCTION:  (P.C. = 101)
Closure of ZWEI:MAKE-MENU-COMMAND-DRIVER:
ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:INTERNAL ZWEI:PROCESS-SPECIAL-COMMAND 6):  (P.C. = 100)
ZWEI:PROCESS-SPECIAL-COMMAND:  (P.C. = 72)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 166)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 41)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
 9-Jul-84 14:58:35-EDT,702;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 9 Jul 84 14:55-EDT
Date: Monday, 9 July 1984, 14:57-EDT
From: Roland Ouellette <Roly at MIT-MC>
Subject: searching all of the servers
To: BUG-LISPM at MIT-OZ

In Release 5.0, Experimental MIT 1.4, Experimental Boxer 2.5, on Lisp Machine Joe Louis (3600):

For some brain damaged reason my machine is searching all of the
namespace servers when my server--lm15 is in fact up for once.  Perhaps 
this rather annoying anouncement of servers being down or unavailable
across the country is just a sideeffect of Chaos address tables or other
net tables just needing a little updating.  

			-Thanks Much,
			Roland Ouellette
			(roly@MIT-MC)

10-Jul-84 14:51:02-EDT,347;000000000000
Mail-From: KOCH created at 10-Jul-84 14:47:23
Date: Tue 10 Jul 84 14:47:22-EDT
From: KOCH@MIT-OZ
Subject: CADR-31 and CAR-2
To: BUG-LISPM@MIT-OZ

Could whoever fixed CADR 2 and 31 look at them again. The problem
is that they don't seem to be connected to CHAOS, just like
last time. In fact all CADR's are off the CHAOS network.
-------
10-Jul-84 18:43:02-EDT,1178;000000000000
Received: from MIT-GRIZZLY by MIT-OZ via Chaosnet; 10 Jul 84 18:41-EDT
Date: Tuesday, 10 July 1984, 18:38-EDT
From: Robert Kassel <rob at MIT-OZ>
Subject: tv:sheet-line-no
To: BUG-LISPM at MIT-OZ

In Release 5.1, Experimental MIT 1.4, Spire-Macros 1.9, Compute 1.4,
Attribute 1.8, Audio 1.2, Speech-Attributes 1.1, Display 1.12,
Speech-Layouts 1.8, Experimental Versatec 2.0, Experimental Prtout 1.1,
Spire 13.0, SpireX 10.3, LexiS 6.5, Experimental ZOO 2.3,
Experimental Pop-Up-Calculator 2.0, Experimental Alexis-Television 2.0,
FEP 18, on Lisp Machine Grizzly (3600):

The macro tv:sheet-line-no expand into a form which does not return the
line number.  If the y-position is in the top margin but near the inside
of the window, the // function will equal zero (because of integer
round-off).  It should be negative.  In fact, the line number for all
lines in the top margin are one more than what they should be.  A simple
fix is to use floating division and then FIX the answer.

In recent times I've send n bug-reports and I haven't gotten one reply.
I know you've been moving, but some reports I sent went out a long time
ago.  What's the story?  
10-Jul-84 18:50:22-EDT,1208;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 10 Jul 84 18:49-EDT
Received: from SCRC-PEACE by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 59428; Tue 10-Jul-84 07:38:59-EDT
Date: Tuesday, 10 July 1984, 07:37-EDT
From: Charles Hornig <Hornig at SCRC-STONY-BROOK>
Subject: Two bugs in one!
To: David Rogers <DROGERS at MIT-OZ>, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 2 Jul 84 16:59-EDT from David Rogers <DROGERS at MIT-OZ>
Message-ID: <840710073758.1.HORNIG@PEACE.SCRC.Symbolics>

    Date: Monday, 2 July 1984, 16:59-EDT
    From: David Rogers <DROGERS at MIT-OZ>

    In Release 5.0, Experimental MIT 1.4, FEP 18, on Lisp Machine Janis Joplin (3600):

    Two bugs in one! This bug is that the mailer shoudl have at one of its error options
    sending the mail through a different host (it even lists the host names, but does not
    allow you to send to any but the first one). The rest of this message is the original
    message I was trying to send. 

    >>Error: SMTP error: 421 Sorry, big mail backlog!  Try again later.
    While in the function ZWEI:SMTP-CHECK-REPLY  ZWEI:SMTP-MAILER  ZWEI:SMTP-MAIL-INTERNAL

This will be fixed in a future release.
10-Jul-84 21:18:43-EDT,1135;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 10 Jul 84 21:18-EDT
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 59543; Tue 10-Jul-84 21:18:57-EDT
Date: Tuesday, 10 July 1984, 21:17-EDT
From: "(probably) David C. Plummer" <DCP at SCRC-TENEX>
Subject: array elements
To: Scott Cyphers <SR.EHPYC at MIT-SPEECH>, bug-lispm at MIT-OZ
In-Reply-To: <SR.EHPYC.12028247043.BABYL@MIT-SPEECH>
Message-ID: <840710211720.3.NFEP@NEPONSET.SCRC.Symbolics>

    Date: 2 Jul 1984  22:54 EDT (Mon)
    From: Scott Cyphers <SR.EHPYC@MIT-SPEECH>

    Will Zetalisp be inverting the order array elements are stored to
    conform with common lisp?

I didn't see any reply to this.  "Zetalisp" arrays are column major.
"Common Lisp" arrays are row major.  When the system is converted from
Zetalisp to Common Lisp, array references will be in row major order (by
definition).  I have heard plans of a Zetalisp Compatibility Package to
ease the transition of user programs.  I would hope that ZL:AREF would
be a macro that reverses its arguments (preserving order of evaluation)
and calls AREF.
11-Jul-84 00:20:52-EDT,1404;000000000001
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 11 Jul 84 00:20-EDT
Date: 11 Jul 1984  00:19 EDT (Wed)
Message-ID: <SR.EHPYC.12030359720.BABYL@MIT-SPEECH>
From: Scott Cyphers <SR.EHPYC@MIT-SPEECH>
Subject: Bird Watch
To:   bug-lispm@oz

Goldy is a 3600 with 3 eagles.  Occasionally I have noticed that it
will get into a state where it does not boot because of a disk
mounting problem which shows up as follows:

CLEAR SCREEN    works
CLEAR MACHINE   works
MOUNT 0
MOUNT 1  occasionally bombs
MOUNT 2  bombs

The problem is that the FEP claims the disk is not ready, and then
aborts the boot file.  Once Goldy gets into this state, it stays in
it.  Halting the FEP and letting the disks spin down and then back up
fixes it.  Doing the mounts by hand works fine, but in the process of
starting up lisp, when the file system is booting itself, you'll get
thrown into the FEP. This has happenned to me twice, and I think to
another person once, and it is not common.  The FEP version is 18.

Tonight when it happenned, I had just done a
(si:full-gc :system-release t)
followed by a disk save, which I let update the boot file for
me and I vaguely recall maybe having done something like that the
other time, but can't say for sure, there having been environmental
reasons for any kinds of wierdness the other times.  Has this been
noticed on any other multi-eagle systems?
