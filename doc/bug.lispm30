16-Jan-85 19:11:21-EST,8814;000000000000
Received: from MIT-GRIZZLY by MIT-OZ via Chaosnet; 16 Jan 85 19:11-EST
Date: Wednesday, 16 January 1985, 19:09-EST
From: sr.ehpyc at MIT-SPEECH
Sender: LISPM at MIT-MC
Subject: It happened one make-system
To: BUG-LISPM at MIT-OZ, bug-beta-test at MIT-OZ
Message-ID: <850116190924.1.LISP-MACHINE@GRIZZLY.MIT>

In Symbolics 3600 Release 6.0 Beta IIc, Experimental Spire-Macros 4.0,
Experimental Compute 3.0, Experimental Attribute 4.0,
Experimental Audio 3.0, Experimental Speech-Attributes 3.0,
Experimental Display 4.0, microcode TMC5-MIC 315, FEP 18, on Lisp Machine Grizzly:

All I did was a make-system.  Goldy is also running Rel 6.   I earlier did a make-system
of the same thing, so this is probably not repeatable.  I doubt it's related, but the EGC
was on.

>>Error: DIRECTORY/MULTIPLE-FILE-PLISTS: Handle I2871 still (already?) in use.
While in the function (:METHOD FS:NFILE-SERVER-UNIT :WAIT-FOR-COMMAND)  (:METHOD FS:NFILE-SERVER-UNIT :SEND-AND-WAIT-FOR-COMMAND)  (:METHOD FS:NFILE-SERVER-UNIT :SEND-IN-COMMAND-CONDITION-ENVIRONMENT)

(:METHOD FS:NFILE-SERVER-UNIT :WAIT-FOR-COMMAND):  (P.C. = 65)
   Arg 0 (SELF): #<NFILE-SERVER-UNIT 37672542>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:NFILE-SERVER-UNIT -- 15. IV's, 0. FL's 105453736>
   Arg 2 (OPERATION): :WAIT-FOR-COMMAND
   Arg 3 (TID-CONS-ARGS): ("T3245" :MULTIPLE-FILE-PLISTS "Multiple File PLISTs" #<NFILE-DATA-CHANNEL I2871 11040055>)
   Local 4 (DATA-CHANNEL): #<NFILE-DATA-CHANNEL I2871 11040055>
   Local 5 (COMMAND-TID): "T3245"
   Local 6 (COMMAND-NAME): :MULTIPLE-FILE-PLISTS
   Local 7 (WHOSTATE): "Multiple File PLISTs"
   Local 8 (RESPONSE-ARGS): ("BUG" NIL "DIRECTORY//MULTIPLE-FILE-PLISTS: Handle I2871 still (already?) in use.")
   Local 9 (RESPONSE-NAME): :ERROR

(:METHOD FS:NFILE-SERVER-UNIT :SEND-AND-WAIT-FOR-COMMAND):  (P.C. = 40)
   Arg 0 (SELF): #<NFILE-SERVER-UNIT 37672542>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:NFILE-SERVER-UNIT -- 15. IV's, 0. FL's 105453736>
   Arg 2 (OPERATION): :SEND-AND-WAIT-FOR-COMMAND
   Arg 3 (DATA): (:MULTIPLE-FILE-PLISTS "Multiple File PLISTs" #<NFILE-DATA-CHANNEL I2871 11040055> "I2871" (">s>spire>misc-att.bin.12") T (:CREATION-DATE :LENGTH))

(:METHOD FS:NFILE-SERVER-UNIT :SEND-IN-COMMAND-CONDITION-ENVIRONMENT):  (P.C. = 54)
   Arg 0 (SELF): #<NFILE-SERVER-UNIT 37672542>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:NFILE-SERVER-UNIT -- 15. IV's, 0. FL's 105453736>
   Arg 2 (OPERATION): :SEND-IN-COMMAND-CONDITION-ENVIRONMENT
   Arg 3 (MESSAGE): :SEND-AND-WAIT-FOR-COMMAND
   Arg 4 (DATA): (:MULTIPLE-FILE-PLISTS "Multiple File PLISTs" #<NFILE-DATA-CHANNEL I2871 11040055> "I2871" (">s>spire>misc-att.bin.12") T (:CREATION-DATE :LENGTH))

(:METHOD FS:NFILE-SERVER-UNIT :COMMAND):  (P.C. = 7)
   Arg 0 (SELF): #<NFILE-SERVER-UNIT 37672542>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:NFILE-SERVER-UNIT -- 15. IV's, 0. FL's 105453736>
   Arg 2 (OPERATION): :COMMAND
   Rest arg (DATA): (:MULTIPLE-FILE-PLISTS "Multiple File PLISTs" #<NFILE-DATA-CHANNEL I2871 11040055> "I2871" (">s>spire>misc-att.bin.12") T (:CREATION-DATE :LENGTH))

FS:NFILE-KEYWORD-LIST-CALLER:  (P.C. = 165)
   Arg 0 (INSTANCE): #<NFILE-SERVER-UNIT 37672542>
   Arg 1 (CMDNAME): :MULTIPLE-FILE-PLISTS
   Arg 2 (WHOSTATE): "Multiple File PLISTs"
   Arg 3 (DATA-CHANNEL): #<NFILE-DATA-CHANNEL I2871 11040055>
   Arg 4 (CONSTANT-ARGS): ("I2871" (">s>spire>misc-att.bin.12") T (:CREATION-DATE :LENGTH))
   Local 4 (CONSTANT-ARGS): NIL
   Arg 5 (KEYWORD-VALUE-PAIRS): NIL

(:METHOD FS:NFILE-ACCESS-PATH :MULTIPLE-FILE-PLISTS):  (P.C. = 157)
   Arg 0 (SELF): #<LMFS-NFILE-ACCESS-PATH GOLDY using NEW-FILE 37672531>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:NFILE-ACCESS-PATH -- 4. IV's, 2. FL's 124523447>
   Arg 2 (OPERATION): :MULTIPLE-FILE-PLISTS
   Arg 3 (PATHNAMES): (#<LMFS-PATHNAME "GOLDY:>s>spire>misc-att.bin.12">)
   Arg 4 (OPTIONS): NIL

(:METHOD FS:ACTIVE-PATHNAME-MIXIN :MULTIPLE-FILE-PLISTS):  (P.C. = 13)
   Arg 0 (SELF): #<LMFS-PATHNAME "GOLDY:>s>spire>misc-att.bin.12">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:ACTIVE-PATHNAME-MIXIN -- 1. IV's, 0. FL's 105417052>
   Arg 2 (OPERATION): :MULTIPLE-FILE-PLISTS
   Arg 3 (FILES): (#<LMFS-PATHNAME "GOLDY:>s>spire>misc-att.bin.12">)
   Arg 4 (OPTIONS): NIL

(:METHOD FS:LOGICAL-PATHNAME :MULTIPLE-FILE-PLISTS):  (P.C. = 64)
   Arg 0 (SELF): #<LOGICAL-PATHNAME "SPIRE: SPIRE; MISC-ATT.BIN.12">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:LOGICAL-PATHNAME -- 8. IV's, 3. FL's 105360754>
   Arg 2 (OPERATION): :MULTIPLE-FILE-PLISTS
   Arg 3 (PATHNAMES): (#<LOGICAL-PATHNAME "SPIRE: SPIRE; MISC-ATT.BIN.12">)
   Arg 4 (OPTIONS): NIL

FS:MULTIPLE-FILE-PLISTS:  (P.C. = 133)
   Arg 0 (FILENAMES): (#<LOGICAL-PATHNAME "SPIRE: SPIRE; MISC-ATT.BIN.12">)
   Rest arg (OPTIONS): NIL

SI:SYSTEM-GET-FILE-PROPERTY-LIST:  (P.C. = 33)
   Arg 0 (FILE): #<LOGICAL-PATHNAME "SPIRE: SPIRE; MISC-ATT.BIN.12">
   --Defaulted args:--
   Arg 1 (ERROR-P): NIL

SI:SYSTEM-GET-FILE-INFO:  (P.C. = 3)
   Arg 0 (FILE): #<LOGICAL-PATHNAME "SPIRE: SPIRE; MISC-ATT.BIN.12">

SI:FILE-NEWER-THAN-INSTALLED-P:  (P.C. = 11)
   Arg 0 (FILE): #<LOGICAL-PATHNAME "SPIRE: SPIRE; MISC-ATT.BIN.12">

SI:QUEUE-FILES-AS-NEEDED:  (P.C. = 46)
   Arg 0 (LIST): (((NIL (:COMPILE ** SI:COMPILE-FILE-1 ** **) NIL #<SYSTEM Attribute 11041245> #<DTP-CLOSURE 10002516> (#<LOGICAL-PATHNAME "SPIRE: SPIRE; MISC-ATT.BIN.12">) #<LOGICAL-PATHNAME "SPIRE: SPIRE; MISC-ATT.LISP.7"> #<LOGICAL-PATHNAME "SPIRE: SPIRE; MISC-ATT.BIN.12">) NIL (:FASLOAD ("Load" "Loading" "loaded") SI:FASLOAD-1 (:BIN) NIL) NIL #<SYSTEM Attribute 11041245> SI:FILE-NEWER-THAN-INSTALLED-P NIL #<LOGICAL-PATHNAME "SPIRE: SPIRE; MISC-ATT.BIN.12">))

SI:QUEUE-ONE-TRANSFORMATION:  (P.C. = 33)
   Arg 0 (TRANSFORMATION): #<TRANSFORMATION FASLOAD 11041333>
   Arg 1 (FORCE-DEPENDENCIES): NIL
   Rest arg (OTHERS): NIL

SI:PERFORM-TRANSFORMATIONS:  (P.C. = 122)
   Arg 0 (TRANSFORMATION-LIST): ((#<TRANSFORMATION FASLOAD 11041270> NIL NIL #<SYSTEM Attribute 11041245>) (#<TRANSFORMATION FASLOAD 11041315> NIL NIL #<SYSTEM Attribute 11041245>) (#<TRANSFORMATION FASLOAD 11041333> NIL NIL #<SYSTEM Attribute 11041245>) (#<TRANSFORMATION FASLOAD 11041351> NIL NIL #<SYSTEM Attribute 11041245>) (#<TRANSFORMATION FASLOAD 11041367> NIL NIL #<SYSTEM Attribute 11041245>) (#<TRANSFORMATION FASLOAD 11041405> NIL NIL #<SYSTEM Attribute 11041245>) (#<TRANSFORMATION FASLOAD 11041423> NIL NIL #<SYSTEM Attribute 11041245>) (#<TRANSFORMATION FASLOAD 11041441> NIL NIL #<SYSTEM Attribute 11041245>) (#<TRANSFORMATION FASLOAD 11041457> NIL NIL #<SYSTEM Attribute 11041245>) (#<TRANSFORMATION FASLOAD 11041475> NIL NIL #<SYSTEM Attribute 11041245>) ...)

MAKE-SYSTEM:  (P.C. = 241)
   Arg 0 (SYSTEM): ATTRIBUTE
   Rest arg (KEYWORDS): (:LOAD-REQUIRED-SYSTEMS :NOCONFIRM)

(:PROPERTY :LOAD-REQUIRED-SYSTEMS SI:MAKE-SYSTEM-KEYWORD):  (from SPIRE: SPIRE; SYSDCL)

MAKE-SYSTEM:  (P.C. = 134)
   Arg 0 (SYSTEM): SPEECH-ATTRIBUTES
   Rest arg (KEYWORDS): (:LOAD-REQUIRED-SYSTEMS :NOCONFIRM)

(:PROPERTY :LOAD-REQUIRED-SYSTEMS SI:MAKE-SYSTEM-KEYWORD):  (from SPIRE: SPIRE; SYSDCL)

MAKE-SYSTEM:  (P.C. = 134)
   Arg 0 (SYSTEM): SPEECH-LAYOUTS
   Rest arg (KEYWORDS): (:LOAD-REQUIRED-SYSTEMS :NOCONFIRM)

(:PROPERTY :LOAD-REQUIRED-SYSTEMS SI:MAKE-SYSTEM-KEYWORD):  (from SPIRE: SPIRE; SYSDCL)

MAKE-SYSTEM:  (P.C. = 134)
   Arg 0 (SYSTEM): SPIRE
   Rest arg (KEYWORDS): (:LOAD-REQUIRED-SYSTEMS :NOCONFIRM)

(:PROPERTY :LOAD-REQUIRED-SYSTEMS SI:MAKE-SYSTEM-KEYWORD):  (from SPIRE: SPIRE; SYSDCL)

MAKE-SYSTEM:  (P.C. = 134)
   Arg 0 (SYSTEM): SPIREX
   Rest arg (KEYWORDS): (:LOAD-REQUIRED-SYSTEMS :NOCONFIRM)

SI:*EVAL:  (P.C. = 403)
   Arg 0 (FORM): (MAKE-SYSTEM (QUOTE SPIREX) :LOAD-REQUIRED-SYSTEMS :NOCONFIRM)
   Local 0 (FORM): NIL
   --Defaulted args:--
   Arg 1 (ENV): NIL
   Arg 2 (HOOK): NIL

(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0):  (P.C. = 152)
   Arg 0 (.LEXICAL-ENVIRONMENT-POINTER.): #<DTP-LOCATIVE 500047>

TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)  (from SYS: PATCH; SYSTEM-269-48)
   Arg 0 (NEW-MODE): :BLAST
   Arg 1 (STREAM): #:TERMINAL-IO-SYN-STREAM
   Arg 2 (CONTINUATION): #<LEXICAL-CLOSURE (:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0) 500054>

SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
   Arg 0 (NAME): "Lisp Top Level"
   Arg 1 (ABORT-FUNCTION): NIL
   Arg 2 (READ-FUNCTION): NIL
   Arg 3 (EVAL-FUNCTION): NIL
   Arg 4 (PRINT-FUNCTION): NIL

SI:LISP-COMMAND-LOOP:  (P.C. = 67)
   Arg 0: #<LISP-LISTENER Lisp Listener 1 36641015 exposed>
   Rest arg: (:NAME "Lisp Top Level")

SI:LISP-TOP-LEVEL1:  (P.C. = 5)
   Arg 0 (STREAM): #<LISP-LISTENER Lisp Listener 1 36641015 exposed>

SI:LISP-TOP-LEVEL:  (P.C. = 7)
16-Jan-85 19:13:40-EST,606;000000000000
Received: from MIT-GRIZZLY by MIT-OZ via Chaosnet; 16 Jan 85 19:13-EST
Date: Wednesday, 16 January 1985, 19:11-EST
From: A Lisp Machine <LISPM at MIT-MC>
Subject: It happened one make-system (continued)
To: BUG-LISPM at MIT-OZ, Bug-beta-test at MIT-OZ
Message-ID: <850116191124.2.LISP-MACHINE@GRIZZLY.MIT>

In Symbolics 3600 Release 6.0 Beta IIc, Experimental Spire-Macros 4.0,
Experimental Compute 3.0, Experimental Attribute 4.0,
Experimental Audio 3.0, Experimental Speech-Attributes 3.0,
Experimental Display 4.0, microcode TMC5-MIC 315, FEP 18, on Lisp Machine Grizzly:

Resuming worked.
16-Jan-85 21:19:08-EST,5101;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 16 Jan 85 21:19-EST
Date: Wednesday, 16 January 1985, 21:18-EST
From: Scott Cyphers <sr.ehpyc at MIT-SPEECH>
Subject: DTP-NULL
To: BUG-LISPM at MIT-OZ
Message-ID: <850116211844.1.CYPHER@GRIZZLY.MIT>

In Symbolics 3600 Release 6.0 Beta IIc, Experimental Spire-Macros 4.0,
Experimental Compute 3.0, Experimental Attribute 4.0,
Experimental Audio 3.0, Experimental Speech-Attributes 3.0,
Experimental Display 4.0, Experimental Speech-Layouts 5.0,
Experimental Versatec 4.0, Prtout 2.0, Experimental Spire 15.0,
Experimental SpireX 12.0, Experimental ZOO 4.0, ZOO-SPIRE 1.0,
microcode TMC5-MIC 315, FEP 18, on Lisp Machine Grizzly:

I did an (si:full-gc :system-release t :gc-compiled-functions t)

When in a breakpoint, typing any character to be read produces this error.
This doesn't happen in the un-gc'd system, and doesn't happen at top level.

(I guess you guys intend to enforce that thing about system-release t only
being meant for Symbolics people now.)

>>Trap: The word #<DTP-NULL 3306153> was read from location 3306153 (in GC-TABLE-AREA).
While in the function (:INTERNAL (:INTERNAL SI:CP-COMMAND-LOOP-BREAK-READ-FUNCTION 0) 0)  (:INTERNAL READ-OR-CHARACTER 0 SI:.WITH-INPUT-EDITING-FUNCTION.)  READ-OR-CHARACTER

(:INTERNAL (:INTERNAL SI:CP-COMMAND-LOOP-BREAK-READ-FUNCTION 0) 0):  (P.C. = 4)
   Arg 0 (STREAM): #:TERMINAL-IO-SYN-STREAM

(:INTERNAL READ-OR-CHARACTER 0 SI:.WITH-INPUT-EDITING-FUNCTION.):  (P.C. = 75)
   Arg 0 (.LEXICAL-ENVIRONMENT-POINTER.): #<DTP-LOCATIVE 501263>
   Arg 1 (STREAM): #:TERMINAL-IO-SYN-STREAM

READ-OR-CHARACTER:  (P.C. = 107)
   Arg 0 (DELIMITERS): (146 145 131 346 129 641)
   Arg 1 (STREAM): #:TERMINAL-IO-SYN-STREAM
   Arg 2 (READER): #<DTP-COMPILED-FUNCTION (:INTERNAL (:INTERNAL SI:CP-COMMAND-LOOP-BREAK-READ-FUNCTION 0) 0) 36332231>

(:INTERNAL SI:CP-COMMAND-LOOP-BREAK-READ-FUNCTION 0):  (P.C. = 5)

(:INTERNAL SI:CP-INPUT-EDITING 0 SI:.WITH-INPUT-EDITING-FUNCTION.):  (P.C. = 75)
   Arg 0 (.LEXICAL-ENVIRONMENT-POINTER.): #<DTP-LOCATIVE 501127>
   Arg 1 (STREAM): #:TERMINAL-IO-SYN-STREAM

(:DEFUN-METHOD SI:INPUT-EDITOR-READ):  (P.C. = 67)
   Arg 0 (SELF): #<LISP-LISTENER Lisp Listener 1 1200000 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:INTERACTIVE-STREAM -- 20. IV's, 1. FL's 52503034>
   Arg 2 (READ-FUNCTION): #<LEXICAL-CLOSURE (:INTERNAL SI:CP-INPUT-EDITING 0 SI:.WITH-INPUT-EDITING-FUNCTION.) 501133>
   Arg 3 (READ-ARGS): (#:TERMINAL-IO-SYN-STREAM)

(:METHOD SI:INTERACTIVE-STREAM :INPUT-EDITOR):  (P.C. = 133)
   Arg 0 (SELF): #<LISP-LISTENER Lisp Listener 1 1200000 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:INTERACTIVE-STREAM -- 20. IV's, 1. FL's 52503034>
   Arg 2 (OPERATION): :INPUT-EDITOR
   Arg 3 (READ-FUNCTION): #<LEXICAL-CLOSURE (:INTERNAL SI:CP-INPUT-EDITING 0 SI:.WITH-INPUT-EDITING-FUNCTION.) 501133>
   Rest arg (READ-ARGS): NIL
   Local 4 (READ-ARGS): (#:TERMINAL-IO-SYN-STREAM)

SI:CP-INPUT-EDITING:  (P.C. = 110)
   Arg 0 (STREAM): #:TERMINAL-IO-SYN-STREAM
   Arg 1 (PROMPT): "Command: "
   Arg 2 (BLANK-LINE-MODE): :REPROMPT
   Arg 3 (CONTINUATION): #<DTP-COMPILED-FUNCTION (:INTERNAL SI:CP-COMMAND-LOOP-BREAK-READ-FUNCTION 0) 36332217>

Rest of stack:
SI:CP-COMMAND-LOOP-BREAK-READ-FUNCTION:  (P.C. = 76)
SI:BREAK-READ-FUNCTION:  (P.C. = 3)
(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0):  (P.C. = 105)
TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)  (from SYS: PATCH; SYSTEM-269-48)
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
SI:BREAK-INTERNAL:  (P.C. = 176)
SYS:KBD-INTERCEPT-CHARACTER:  (P.C. = 52)
(:DEFUN-METHOD SI:STANDARD-INPUT-EDITOR-TYI):  (P.C. = 405)
SI:STANDARD-INPUT-EDITOR-TYI:  (P.C. = 12)
SI:INPUT-EDITOR-INVOKE:  (P.C. = 11)
(:METHOD SI:INTERACTIVE-STREAM :WHOPPER :ANY-TYI):  (P.C. = 67)
(:METHOD TV:WINDOW :COMBINED :ANY-TYI):  (P.C. = 13)
(:DEFUN-METHOD SI:TYI-INTERNAL):  (P.C. = 6)
(:METHOD SI:INTERACTIVE-STREAM :TYI):  (P.C. = 10)
SI:XR-XRTYI:  (P.C. = 6)
SI:XR-READ-THING:  (P.C. = 155)
(:INTERNAL SI:READ-INTERNAL 0 SI:.WITH-INPUT-EDITING-FUNCTION.):  (P.C. = 15)
SI:READ-INTERNAL:  (P.C. = 35)
READ-FOR-TOP-LEVEL:  (P.C. = 6)
(:INTERNAL READ-EXPRESSION 0 SI:.WITH-INPUT-EDITING-FUNCTION.):  (P.C. = 3)
READ-EXPRESSION:  (P.C. = 153)
(:INTERNAL READ-FORM 0 SI:.WITH-INPUT-EDITING-FUNCTION.):  (P.C. = 10)
READ-FORM:  (P.C. = 46)
SI:READ-FORM-DISPATCH:  (P.C. = 5)
(:INTERNAL READ-COMMAND-OR-FORM 0):  (P.C. = 66)
(:INTERNAL SI:CP-INPUT-EDITING 0 SI:.WITH-INPUT-EDITING-FUNCTION.):  (P.C. = 75)
(:DEFUN-METHOD SI:INPUT-EDITOR-READ):  (P.C. = 67)
(:METHOD SI:INTERACTIVE-STREAM :INPUT-EDITOR):  (P.C. = 133)
SI:CP-INPUT-EDITING:  (P.C. = 110)
READ-COMMAND-OR-FORM:  (P.C. = 146)
SI:CP-COMMAND-LOOP-READ-FUNCTION:  (P.C. = 13)
(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0):  (P.C. = 105)
TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)  (from SYS: PATCH; SYSTEM-269-48)
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
SI:LISP-COMMAND-LOOP:  (P.C. = 67)
SI:LISP-TOP-LEVEL1:  (P.C. = 5)
SI:LISP-TOP-LEVEL:  (P.C. = 7)
16-Jan-85 22:03:11-EST,1014;000000000000
Received: from SCRC-TENEX by MIT-OZ via Chaosnet; 16 Jan 85 22:02-EST
Date: 16 Jan 1985 2203-EST
From: Bernard S. Greenberg <BSG@SCRC-TENEX>
Subject: Re: It happened one make-system
To: sr.ehpyc@MIT-SPEECH
cc: BUG-LISPM@MIT-OZ, bug-beta-test@MIT-OZ
In-Reply-To: <850116190924.1.LISP-MACHINE@GRIZZLY.MIT>

    Date: Wednesday, 16 January 1985, 19:09-EST
    From: sr.ehpyc at MIT-SPEECH

    In Symbolics 3600 Release 6.0 Beta IIc, Experimental Spire-Macros 4.0,

    All I did was a make-system.  Goldy is also running Rel 6.   
Which subspecies thereof?
								 I earlier did a make-system
    of the same thing, so this is probably not repeatable.  I doubt it's related, but the EGC
    was on.
Care to say anthing about the previous make-system?  DId it succeed?
Did it fail in some way?  Was there some error listing a directory
(this sounds like a bug I fixed many months ago, of this nature.)
    >>Error: DIRECTORY/MULTIPLE-FILE-PLISTS: Handle I2871 still (already?) in use.
-------
16-Jan-85 22:14:27-EST,4390;000000000000
Received: from MIT-HTVAX by MIT-OZ via Chaosnet; 16 Jan 85 22:14-EST
Received: from MIT-GRIZZLY by MIT-HTVAX (4.12/4.7) with CHAOS 
	id AA14968; Wed, 16 Jan 85 22:08:41 est
Date: Wednesday, 16 January 1985, 22:08-EST
From: Scott Cyphers <sr.ehpyc@MIT-SPEECH>
Subject: Random Printers
To: BUG-LISPM@MIT-OZ
Message-Id: <850116220854.2.CYPHER@GRIZZLY.MIT>

In Symbolics 3600 Release 6.0 Beta IIc, Experimental Spire-Macros 4.0,
Experimental Compute 3.0, Experimental Attribute 4.0,
Experimental Audio 3.0, Experimental Speech-Attributes 3.0,
Experimental Display 4.0, Experimental Speech-Layouts 5.0,
Experimental Versatec 4.0, Prtout 2.0, Experimental Spire 15.0,
Experimental SpireX 12.0, Experimental ZOO 4.0, ZOO-SPIRE 1.0,
microcode TMC5-MIC 315, FEP 18, on Lisp Machine Grizzly:
Warm booted from: Lisp Listener 1.

(neti:find-object-named :printer :papa-bear) => #<VERSATEC-PRINTER PAPA-BEAR 7647317>

So why does screen hardcopy insist on using the "Random Printer" object?  Shouldn't
things like this have been reinitialized at boot time so that it's possible to have
printer types other than the ones in the standard system without resorting to doing
things like adding an initialization myself that gets it right?

>>Error: Don't know how to format hardcopy output for #<RANDOM-PRINTER PAPA-BEAR 7640211>.
While in the function (:METHOD SI:RANDOM-PRINTER :HARDCOPY-STREAM-FLAVOR)  (:INTERNAL (:METHOD SI:RANDOM-PRINTER :COMBINED :HARDCOPY-STREAM-FLAVOR) 0)  (:METHOD SI:HARDCOPY-DEVICE-MIXIN :WHOPPER :HARDCOPY-STREAM-FLAVOR)

(:METHOD SI:RANDOM-PRINTER :HARDCOPY-STREAM-FLAVOR):  (P.C. = 5)
   Arg 0 (SELF): #<RANDOM-PRINTER PAPA-BEAR 7640211>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:RANDOM-PRINTER -- 0. IV's, 2. FL's 52724352>
   Arg 2 (OPERATION): :HARDCOPY-STREAM-FLAVOR
   Rest arg (IGNORE): ((:LANDSCAPE-P T :BITMAP-ONLY-P T :BANNER-FILE-NAME "Screen Hardcopy"))

(:INTERNAL (:METHOD SI:RANDOM-PRINTER :COMBINED :HARDCOPY-STREAM-FLAVOR) 0):  (P.C. = 11)
   Arg 0 (SELF): #<RANDOM-PRINTER PAPA-BEAR 7640211>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:RANDOM-PRINTER -- 0. IV's, 2. FL's 52724352>
   Arg 2 (.OPERATION.): :HARDCOPY-STREAM-FLAVOR
   Rest arg (.DAEMON-CALLER-ARGS.): ((:LANDSCAPE-P T :BITMAP-ONLY-P T :BANNER-FILE-NAME "Screen Hardcopy"))

(:METHOD SI:HARDCOPY-DEVICE-MIXIN :WHOPPER :HARDCOPY-STREAM-FLAVOR):  (P.C. = 14)
   Arg 0 (SELF): #<RANDOM-PRINTER PAPA-BEAR 7640211>
   Arg 1 (SELF-MAPPING-TABLE): SI:HARDCOPY-DEVICE-MIXIN
   Arg 2 (.WHOPPER-CONTINUATION.): #<DTP-COMPILED-FUNCTION (:INTERNAL (:METHOD SI:RANDOM-PRINTER :COMBINED :HARDCOPY-STREAM-FLAVOR) 0) 63550311>
   Arg 3 (.OLD-SELF-MAPPING-TABLE.): #<Map to flavor SI:RANDOM-PRINTER -- 0. IV's, 2. FL's 52724352>
   Arg 4 (.OPERATION.): :HARDCOPY-STREAM-FLAVOR
   Arg 5 (OPTIONS): (:LANDSCAPE-P T :BITMAP-ONLY-P T :BANNER-FILE-NAME "Screen Hardcopy")

(:METHOD SI:RANDOM-PRINTER :COMBINED :HARDCOPY-STREAM-FLAVOR):  (P.C. = 13)
   Arg 0 (SELF): #<RANDOM-PRINTER PAPA-BEAR 7640211>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:RANDOM-PRINTER -- 0. IV's, 2. FL's 52724352>
   Arg 2 (.OPERATION.): :HARDCOPY-STREAM-FLAVOR
   Rest arg (.DAEMON-CALLER-ARGS.): NIL
   Local 3 (.DAEMON-CALLER-ARGS.): ((:LANDSCAPE-P T :BITMAP-ONLY-P T :BANNER-FILE-NAME "Screen Hardcopy"))

(:METHOD SI:HARDCOPY-DEVICE-MIXIN :MAKE-HARDCOPY-STREAM):  (P.C. = 113)
   Arg 0 (SELF): #<RANDOM-PRINTER PAPA-BEAR 7640211>
   Arg 1 (SELF-MAPPING-TABLE): SI:HARDCOPY-DEVICE-MIXIN
   Arg 2 (OPERATION): :MAKE-HARDCOPY-STREAM
   Arg 3 (OPTIONS): (:LANDSCAPE-P T :BITMAP-ONLY-P T :BANNER-FILE-NAME "Screen Hardcopy")

SI:MAKE-HARDCOPY-STREAM:  (P.C. = 52)
   Arg 0 (DEVICE): #<RANDOM-PRINTER PAPA-BEAR 7640211>
   Rest arg (OPTIONS): (:LANDSCAPE-P T :BITMAP-ONLY-P T :BANNER-FILE-NAME "Screen Hardcopy")

TV:KBD-HARDCOPY-SHEET:  (P.C. = 62)
   Arg 0 (SHEET): #<ART-1B-1088-773 16404022>

TV:KBD-HARDCOPY-WHOLE-SCREEN:  (P.C. = 3)
   Arg 0 (ARG): NIL

(:INTERNAL TV:KBD-ESC 1):  (P.C. = 4)
   Arg 0 (FCN): TV:KBD-HARDCOPY-WHOLE-SCREEN
   Arg 1 (ARG): NIL

SI:PROCESS-RUN-FUNCTION-INTERNAL:  (P.C. = 52)
   Arg 0 (RESTART-ON-RESET): NIL
   Arg 1 (FUNCTION): #<DTP-COMPILED-FUNCTION (:INTERNAL TV:KBD-ESC 1) 36052770>
   Rest arg (ARGS): (TV:KBD-HARDCOPY-WHOLE-SCREEN NIL)

SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
   Arg 0 (IGNORE): NIL
16-Jan-85 22:17:07-EST,1873;000000000000
Received: from MIT-SMOKEY by MIT-OZ via Chaosnet; 16 Jan 85 22:16-EST
Date: Wednesday, 16 January 1985, 22:16-EST
From: Scott Cyphers <sr.ehpyc at MIT-SPEECH>
Subject: Re: It happened one make-system
To: BSG at SCRC-TENEX, sr.ehpyc at MIT-SPEECH
cc: BUG-LISPM at MIT-OZ, bug-beta-test at MIT-OZ
In-Reply-To: The message of 16 Jan 85 22:03-EST from Bernard S. Greenberg <BSG at SCRC-TENEX>
Message-ID: <850116221645.1.CYPHER@MIT-SMOKEY.MIT>

    Received: from SCRC-TENEX by MIT-OZ via Chaosnet; 16 Jan 85 22:02-EST
    Date: 16 Jan 1985 2203-EST
    From: Bernard S. Greenberg <BSG@SCRC-TENEX>
    Subject: Re: It happened one make-system
    To: sr.ehpyc@MIT-SPEECH
    cc: BUG-LISPM@MIT-OZ, bug-beta-test@MIT-OZ
    In-Reply-To: <850116190924.1.LISP-MACHINE@GRIZZLY.MIT>

	Date: Wednesday, 16 January 1985, 19:09-EST
	From: sr.ehpyc at MIT-SPEECH

	In Symbolics 3600 Release 6.0 Beta IIc, Experimental Spire-Macros 4.0,

	All I did was a make-system.  Goldy is also running Rel 6.   
    Which subspecies thereof?

The two world loads were exact clones of each other.

								     I earlier did a make-system
	of the same thing, so this is probably not repeatable.  I doubt it's related, but the EGC
	was on.
    Care to say anthing about the previous make-system?  DId it succeed?

It succeeded, and then failed on the GC when it ran out of memory (I think I can
skip the GC stuff now anyways, since the EGC seems to catch all the load
consing).

The following make-system succeeded, and the numerous ones involved in the compiling
process also suceeded, so it's not at all a common thing.

    Did it fail in some way?  Was there some error listing a directory
    (this sounds like a bug I fixed many months ago, of this nature.)
	>>Error: DIRECTORY/MULTIPLE-FILE-PLISTS: Handle I2871 still (already?) in use.
    -------

16-Jan-85 22:38:16-EST,831;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 16 Jan 85 22:38-EST
Date: Wednesday, 16 January 1985, 22:37-EST
From: Scott Cyphers <sr.ehpyc at MIT-SPEECH>
Subject: Print Spoolers
To: BUG-LISPM at MIT-OZ
Message-ID: <850116223759.3.CYPHER@GRIZZLY.MIT>

In Symbolics 3600 Release 6.0 Beta IIc, Experimental Spire-Macros 4.0,
Experimental Compute 3.0, Experimental Attribute 4.0,
Experimental Audio 3.0, Experimental Speech-Attributes 3.0,
Experimental Display 4.0, Experimental Speech-Layouts 5.0,
Experimental Versatec 4.0, Prtout 2.0, Experimental Spire 15.0,
Experimental SpireX 12.0, Experimental ZOO 4.0, ZOO-SPIRE 1.0,
microcode TMC5-MIC 315, FEP 18, on Lisp Machine Grizzly:
Warm booted from: Lisp Listener 1.

(si:printer-spooler-hosts si:*screen-hardcopy-device*) => 
NIL
T

It should be finding Goldy.
16-Jan-85 23:28:12-EST,5868;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 16 Jan 85 23:28-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 160588; Wed 16-Jan-85 23:26:48-EST
Date: Wednesday, 16 January 1985, 23:27-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: DTP-NULL
To: Scott Cyphers <sr.ehpyc at MIT-SPEECH>, BUG-LISPM at MIT-OZ
In-Reply-To: <850116211844.1.CYPHER@GRIZZLY.MIT>
Message-ID: <850116232715.2.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Wednesday, 16 January 1985, 21:18-EST
    From: Scott Cyphers <sr.ehpyc at MIT-SPEECH>

    In Symbolics 3600 Release 6.0 Beta IIc, Experimental Spire-Macros 4.0,
    Experimental Compute 3.0, Experimental Attribute 4.0,
    Experimental Audio 3.0, Experimental Speech-Attributes 3.0,
    Experimental Display 4.0, Experimental Speech-Layouts 5.0,
    Experimental Versatec 4.0, Prtout 2.0, Experimental Spire 15.0,
    Experimental SpireX 12.0, Experimental ZOO 4.0, ZOO-SPIRE 1.0,
    microcode TMC5-MIC 315, FEP 18, on Lisp Machine Grizzly:

    I did an (si:full-gc :system-release t :gc-compiled-functions t)

It may be that :GC-COMPILED-FUNCTIONS T is broken in Release 6.
Investigation will be needed.

    When in a breakpoint, typing any character to be read produces this error.
    This doesn't happen in the un-gc'd system, and doesn't happen at top level.

    (I guess you guys intend to enforce that thing about system-release t only
    being meant for Symbolics people now.)

    >>Trap: The word #<DTP-NULL 3306153> was read from location 3306153 (in GC-TABLE-AREA).
    While in the function (:INTERNAL (:INTERNAL SI:CP-COMMAND-LOOP-BREAK-READ-FUNCTION 0) 0)  (:INTERNAL READ-OR-CHARACTER 0 SI:.WITH-INPUT-EDITING-FUNCTION.)  READ-OR-CHARACTER

    (:INTERNAL (:INTERNAL SI:CP-COMMAND-LOOP-BREAK-READ-FUNCTION 0) 0):  (P.C. = 4)
       Arg 0 (STREAM): #:TERMINAL-IO-SYN-STREAM

    (:INTERNAL READ-OR-CHARACTER 0 SI:.WITH-INPUT-EDITING-FUNCTION.):  (P.C. = 75)
       Arg 0 (.LEXICAL-ENVIRONMENT-POINTER.): #<DTP-LOCATIVE 501263>
       Arg 1 (STREAM): #:TERMINAL-IO-SYN-STREAM

    READ-OR-CHARACTER:  (P.C. = 107)
       Arg 0 (DELIMITERS): (146 145 131 346 129 641)
       Arg 1 (STREAM): #:TERMINAL-IO-SYN-STREAM
       Arg 2 (READER): #<DTP-COMPILED-FUNCTION (:INTERNAL (:INTERNAL SI:CP-COMMAND-LOOP-BREAK-READ-FUNCTION 0) 0) 36332231>

    (:INTERNAL SI:CP-COMMAND-LOOP-BREAK-READ-FUNCTION 0):  (P.C. = 5)

    (:INTERNAL SI:CP-INPUT-EDITING 0 SI:.WITH-INPUT-EDITING-FUNCTION.):  (P.C. = 75)
       Arg 0 (.LEXICAL-ENVIRONMENT-POINTER.): #<DTP-LOCATIVE 501127>
       Arg 1 (STREAM): #:TERMINAL-IO-SYN-STREAM

    (:DEFUN-METHOD SI:INPUT-EDITOR-READ):  (P.C. = 67)
       Arg 0 (SELF): #<LISP-LISTENER Lisp Listener 1 1200000 exposed>
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:INTERACTIVE-STREAM -- 20. IV's, 1. FL's 52503034>
       Arg 2 (READ-FUNCTION): #<LEXICAL-CLOSURE (:INTERNAL SI:CP-INPUT-EDITING 0 SI:.WITH-INPUT-EDITING-FUNCTION.) 501133>
       Arg 3 (READ-ARGS): (#:TERMINAL-IO-SYN-STREAM)

    (:METHOD SI:INTERACTIVE-STREAM :INPUT-EDITOR):  (P.C. = 133)
       Arg 0 (SELF): #<LISP-LISTENER Lisp Listener 1 1200000 exposed>
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:INTERACTIVE-STREAM -- 20. IV's, 1. FL's 52503034>
       Arg 2 (OPERATION): :INPUT-EDITOR
       Arg 3 (READ-FUNCTION): #<LEXICAL-CLOSURE (:INTERNAL SI:CP-INPUT-EDITING 0 SI:.WITH-INPUT-EDITING-FUNCTION.) 501133>
       Rest arg (READ-ARGS): NIL
       Local 4 (READ-ARGS): (#:TERMINAL-IO-SYN-STREAM)

    SI:CP-INPUT-EDITING:  (P.C. = 110)
       Arg 0 (STREAM): #:TERMINAL-IO-SYN-STREAM
       Arg 1 (PROMPT): "Command: "
       Arg 2 (BLANK-LINE-MODE): :REPROMPT
       Arg 3 (CONTINUATION): #<DTP-COMPILED-FUNCTION (:INTERNAL SI:CP-COMMAND-LOOP-BREAK-READ-FUNCTION 0) 36332217>

    Rest of stack:
    SI:CP-COMMAND-LOOP-BREAK-READ-FUNCTION:  (P.C. = 76)
    SI:BREAK-READ-FUNCTION:  (P.C. = 3)
    (:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0):  (P.C. = 105)
    TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)  (from SYS: PATCH; SYSTEM-269-48)
    SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
    SI:BREAK-INTERNAL:  (P.C. = 176)
    SYS:KBD-INTERCEPT-CHARACTER:  (P.C. = 52)
    (:DEFUN-METHOD SI:STANDARD-INPUT-EDITOR-TYI):  (P.C. = 405)
    SI:STANDARD-INPUT-EDITOR-TYI:  (P.C. = 12)
    SI:INPUT-EDITOR-INVOKE:  (P.C. = 11)
    (:METHOD SI:INTERACTIVE-STREAM :WHOPPER :ANY-TYI):  (P.C. = 67)
    (:METHOD TV:WINDOW :COMBINED :ANY-TYI):  (P.C. = 13)
    (:DEFUN-METHOD SI:TYI-INTERNAL):  (P.C. = 6)
    (:METHOD SI:INTERACTIVE-STREAM :TYI):  (P.C. = 10)
    SI:XR-XRTYI:  (P.C. = 6)
    SI:XR-READ-THING:  (P.C. = 155)
    (:INTERNAL SI:READ-INTERNAL 0 SI:.WITH-INPUT-EDITING-FUNCTION.):  (P.C. = 15)
    SI:READ-INTERNAL:  (P.C. = 35)
    READ-FOR-TOP-LEVEL:  (P.C. = 6)
    (:INTERNAL READ-EXPRESSION 0 SI:.WITH-INPUT-EDITING-FUNCTION.):  (P.C. = 3)
    READ-EXPRESSION:  (P.C. = 153)
    (:INTERNAL READ-FORM 0 SI:.WITH-INPUT-EDITING-FUNCTION.):  (P.C. = 10)
    READ-FORM:  (P.C. = 46)
    SI:READ-FORM-DISPATCH:  (P.C. = 5)
    (:INTERNAL READ-COMMAND-OR-FORM 0):  (P.C. = 66)
    (:INTERNAL SI:CP-INPUT-EDITING 0 SI:.WITH-INPUT-EDITING-FUNCTION.):  (P.C. = 75)
    (:DEFUN-METHOD SI:INPUT-EDITOR-READ):  (P.C. = 67)
    (:METHOD SI:INTERACTIVE-STREAM :INPUT-EDITOR):  (P.C. = 133)
    SI:CP-INPUT-EDITING:  (P.C. = 110)
    READ-COMMAND-OR-FORM:  (P.C. = 146)
    SI:CP-COMMAND-LOOP-READ-FUNCTION:  (P.C. = 13)
    (:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0):  (P.C. = 105)
    TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)  (from SYS: PATCH; SYSTEM-269-48)
    SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
    SI:LISP-COMMAND-LOOP:  (P.C. = 67)
    SI:LISP-TOP-LEVEL1:  (P.C. = 5)
    SI:LISP-TOP-LEVEL:  (P.C. = 7)
17-Jan-85 09:55:05-EST,648;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 17 Jan 85 09:55-EST
Date: Thu, 17 Jan 85 09:57 EST
From: David Vinayak Wallace <Gumby@MIT-MC.ARPA>
Subject: SUPDUP
To: "David C. Plummer in disguise" <DCP@SCRC-QUABBIN.ARPA>
Cc: BUG-LISPM%MIT-OZ@MIT-MC.ARPA, Hornig@SCRC-QUABBIN.ARPA,
    Gumby@MIT-MC.ARPA
In-reply-to: <850114164013.4.NFEP@NEPONSET.SCRC.Symbolics.COM>

Well, I did some poking around, and I found that variable
TELNET:*TERMINAL-SIMULATOR-TYPES* contains the list 
TELNET:(VT100-TERMINAL-SIMULATOR AMBASSADOR-TERMINAL-SIMULATOR
	IMLAC-TERMINAL-SIMULATOR NULL-TERMINAL-SIMULATOR)

But how do I switch one or the other on?
17-Jan-85 11:38:04-EST,1126;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 17 Jan 85 11:37-EST
Received: from SCRC-PEACE by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 160834; Thu 17-Jan-85 11:37:27-EST
Date: Thursday, 17 January 1985, 11:37-EST
From: Charles Hornig <Hornig at SCRC-STONY-BROOK>
Subject: SUPDUP
To: David Vinayak Wallace <Gumby at MIT-MC>,
    David C. Plummer in disguise <DCP at SCRC-QUABBIN>
cc: BUG-LISPM at MIT-OZ
In-Reply-To: The message of 17 Jan 85 09:57-EST from David Vinayak Wallace <Gumby at MIT-MC>
Message-ID: <850117113746.1.HORNIG@PEACE.SCRC.Symbolics.COM>

    Date: Thu, 17 Jan 85 09:57 EST
    From: David Vinayak Wallace <Gumby@MIT-MC.ARPA>

    Well, I did some poking around, and I found that variable
    TELNET:*TERMINAL-SIMULATOR-TYPES* contains the list 
    TELNET:(VT100-TERMINAL-SIMULATOR AMBASSADOR-TERMINAL-SIMULATOR
	    IMLAC-TERMINAL-SIMULATOR NULL-TERMINAL-SIMULATOR)

    But how do I switch one or the other on?

In TELNET, you do <Network>-X and then pick it out of the menu.  In
SUPDUP, it is irrelevant, since you are using the SUPDUP virtual
terminal protocol.
17-Jan-85 11:54:36-EST,2268;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 17 Jan 85 11:54-EST
Date: 17 Jan 1985  11:54 EST (Thu)
Message-ID: <SR.EHPYC.12080304512.BABYL@MIT-SPEECH>
From: Scott Cyphers <SR.EHPYC@MIT-SPEECH>
To:   Scott Cyphers <sr.ehpyc@MIT-SPEECH>
Cc:   BUG-LISPM@MIT-OZ
Subject: Print Spoolers
In-reply-to: Msg of 16 Jan 1985 22:37-EST from Scott Cyphers <sr.ehpyc>

    Date: Wednesday, 16 January 1985, 22:37-EST
    From: Scott Cyphers <sr.ehpyc>
    To:   BUG-LISPM at MIT-OZ
    Re:   Print Spoolers

    In Symbolics 3600 Release 6.0 Beta IIc, Experimental Spire-Macros 4.0,
    Experimental Compute 3.0, Experimental Attribute 4.0,
    Experimental Audio 3.0, Experimental Speech-Attributes 3.0,
    Experimental Display 4.0, Experimental Speech-Layouts 5.0,
    Experimental Versatec 4.0, Prtout 2.0, Experimental Spire 15.0,
    Experimental SpireX 12.0, Experimental ZOO 4.0, ZOO-SPIRE 1.0,
    microcode TMC5-MIC 315, FEP 18, on Lisp Machine Grizzly:
    Warm booted from: Lisp Listener 1.

    (si:printer-spooler-hosts si:*screen-hardcopy-device*) => 
    NIL
    T

    It should be finding Goldy.

I figured out the reason for this, and it was because having manually
set si:*screen-hardcopy-device* to the Versatec-printer object
returned by (neti:find-object-named :printer :papa-bear), Goldy's
property list still had the random-printer object.  After poking
around for a while, (no easy problem with only Rel 5 sources) I was
able to manage to find a way that fixes these two things:

(defun frob-cached-versatec-objects ()
  (let* ((printer si:*screen-hardcopy-device*)
	 (spoolers (si:printer-spooler-hosts printer)))
    (when (eq (send printer :get :type) :versatec)
      (setq printer
	    (setq si:*screen-hardcopy-device*
		  (neti:find-object-named
		    :printer
		    (intern (send (send printer :name) :string) 'keyword))))
      (dolist (spooler spoolers)
	(send spooler :check-validity nil t)))))

(add-initialization "Frob Versatecs" '(frob-cached-versatec-objects)
'(:now :warm))

It was late at night, so it may be doing a little more than it needed
to on the find-object-named stuff, but I had thought I remembered it
finding random-printer with the string but not with the keyword.
17-Jan-85 11:58:42-EST,2443;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 17 Jan 85 11:58-EST
Received: from SCRC-PEACE by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 160853; Thu 17-Jan-85 11:56:25-EST
Date: Thursday, 17 January 1985, 11:56-EST
From: Charles Hornig <Hornig at SCRC-STONY-BROOK>
Subject: Random Printers
To: Scott Cyphers <sr.ehpyc at MIT-SPEECH>, BUG-LISPM at MIT-OZ
In-Reply-To: <850116220854.2.CYPHER@GRIZZLY.MIT>
Message-ID: <850117115644.4.HORNIG@PEACE.SCRC.Symbolics.COM>

    Date: Wednesday, 16 January 1985, 22:08-EST
    From: Scott Cyphers <sr.ehpyc@MIT-SPEECH>

    In Symbolics 3600 Release 6.0 Beta IIc, Experimental Spire-Macros 4.0,
    Experimental Compute 3.0, Experimental Attribute 4.0,
    Experimental Audio 3.0, Experimental Speech-Attributes 3.0,
    Experimental Display 4.0, Experimental Speech-Layouts 5.0,
    Experimental Versatec 4.0, Prtout 2.0, Experimental Spire 15.0,
    Experimental SpireX 12.0, Experimental ZOO 4.0, ZOO-SPIRE 1.0,
    microcode TMC5-MIC 315, FEP 18, on Lisp Machine Grizzly:
    Warm booted from: Lisp Listener 1.

    (neti:find-object-named :printer :papa-bear) => #<VERSATEC-PRINTER PAPA-BEAR 7647317>

    So why does screen hardcopy insist on using the "Random Printer" object?  Shouldn't
    things like this have been reinitialized at boot time so that it's possible to have
    printer types other than the ones in the standard system without resorting to doing
    things like adding an initialization myself that gets it right?

    >>Error: Don't know how to format hardcopy output for #<RANDOM-PRINTER PAPA-BEAR 7640211>.
    While in the function (:METHOD SI:RANDOM-PRINTER :HARDCOPY-STREAM-FLAVOR)  (:INTERNAL (:METHOD SI:RANDOM-PRINTER :COMBINED :HARDCOPY-STREAM-FLAVOR) 0)  (:METHOD SI:HARDCOPY-DEVICE-MIXIN :WHOPPER :HARDCOPY-STREAM-FLAVOR)

There are two problems here.  First, FIND-OBJECT-NAMED will do the wrong
thing if it is given a symbol for a non-globally-named object.  It
always creates a new object which is improperly interned.  You should
say (NET:FIND-OBJECT-NAMED :PRINTER "PAPA-BEAR").  This is fixed in the
real release 6.

I assume that your local code adds a SI:PRINTER-TYPE-FLAVOR property to
:VERSATEC.  Whenever you do something like that, you have to call
(NETI:REDEFINE-OBJECTS-OF-CLASS :PRINTER) to make sure that all of the
existing objects get updated.  (Yes, this is not documented.  It should
be.)
17-Jan-85 12:01:02-EST,1249;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 17 Jan 85 11:58-EST
Received: from SCRC-PEACE by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 160854; Thu 17-Jan-85 11:56:51-EST
Date: Thursday, 17 January 1985, 11:57-EST
From: Charles Hornig <Hornig at SCRC-STONY-BROOK>
Subject: Print Spoolers
To: Scott Cyphers <sr.ehpyc at MIT-SPEECH>, BUG-LISPM at MIT-OZ
In-Reply-To: <850116223759.3.CYPHER@GRIZZLY.MIT>
Message-ID: <850117115714.5.HORNIG@PEACE.SCRC.Symbolics.COM>

    Date: Wednesday, 16 January 1985, 22:37-EST
    From: Scott Cyphers <sr.ehpyc at MIT-SPEECH>

    In Symbolics 3600 Release 6.0 Beta IIc, Experimental Spire-Macros 4.0,
    Experimental Compute 3.0, Experimental Attribute 4.0,
    Experimental Audio 3.0, Experimental Speech-Attributes 3.0,
    Experimental Display 4.0, Experimental Speech-Layouts 5.0,
    Experimental Versatec 4.0, Prtout 2.0, Experimental Spire 15.0,
    Experimental SpireX 12.0, Experimental ZOO 4.0, ZOO-SPIRE 1.0,
    microcode TMC5-MIC 315, FEP 18, on Lisp Machine Grizzly:
    Warm booted from: Lisp Listener 1.

    (si:printer-spooler-hosts si:*screen-hardcopy-device*) => 
    NIL
    T

    It should be finding Goldy.

What was SI:*SCREEN-HARDCOPY-DEVICE*?
17-Jan-85 12:04:52-EST,2797;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 17 Jan 85 12:02-EST
Received: from SCRC-PEACE by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 160859; Thu 17-Jan-85 12:02:08-EST
Date: Thursday, 17 January 1985, 12:02-EST
From: Charles Hornig <Hornig at SCRC-STONY-BROOK>
Subject: Print Spoolers
To: Scott Cyphers <SR.EHPYC at MIT-SPEECH>
cc: BUG-LISPM at MIT-OZ
In-Reply-To: <SR.EHPYC.12080304512.BABYL@MIT-SPEECH>
Message-ID: <850117120224.6.HORNIG@PEACE.SCRC.Symbolics.COM>

    Date: 17 Jan 1985  11:54 EST (Thu)
    From: Scott Cyphers <SR.EHPYC@MIT-SPEECH>

	Date: Wednesday, 16 January 1985, 22:37-EST
	From: Scott Cyphers <sr.ehpyc>
	To:   BUG-LISPM at MIT-OZ
	Re:   Print Spoolers

	In Symbolics 3600 Release 6.0 Beta IIc, Experimental Spire-Macros 4.0,
	Experimental Compute 3.0, Experimental Attribute 4.0,
	Experimental Audio 3.0, Experimental Speech-Attributes 3.0,
	Experimental Display 4.0, Experimental Speech-Layouts 5.0,
	Experimental Versatec 4.0, Prtout 2.0, Experimental Spire 15.0,
	Experimental SpireX 12.0, Experimental ZOO 4.0, ZOO-SPIRE 1.0,
	microcode TMC5-MIC 315, FEP 18, on Lisp Machine Grizzly:
	Warm booted from: Lisp Listener 1.

	(si:printer-spooler-hosts si:*screen-hardcopy-device*) => 
	NIL
	T

	It should be finding Goldy.

    I figured out the reason for this, and it was because having manually
    set si:*screen-hardcopy-device* to the Versatec-printer object
    returned by (neti:find-object-named :printer :papa-bear), Goldy's
    property list still had the random-printer object.  After poking
    around for a while, (no easy problem with only Rel 5 sources) I was
    able to manage to find a way that fixes these two things:

    (defun frob-cached-versatec-objects ()
      (let* ((printer si:*screen-hardcopy-device*)
	     (spoolers (si:printer-spooler-hosts printer)))
	(when (eq (send printer :get :type) :versatec)
	  (setq printer
		(setq si:*screen-hardcopy-device*
		      (neti:find-object-named
			:printer
			(intern (send (send printer :name) :string) 'keyword))))
	  (dolist (spooler spoolers)
	    (send spooler :check-validity nil t)))))

    (add-initialization "Frob Versatecs" '(frob-cached-versatec-objects)
    '(:now :warm))

    It was late at night, so it may be doing a little more than it needed
    to on the find-object-named stuff, but I had thought I remembered it
    finding random-printer with the string but not with the keyword.

I responded to the, but I thought I'd clarify it.  You get back a bogus
object by passing a symbol to FIND-OBJECT-NAMED.  The RANDOM-PRINTER
object is the correct one.  What you want is to call
(NETI:REDEFINE-OBJECTS-OF-TYPE :PRINTER) to get the flavors right.  It
will change PAPA-BEAR to a VERSATEC-PRINTER.
17-Jan-85 12:07:03-EST,471;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 17 Jan 85 12:02-EST
Date: 17 Jan 1985  12:02 EST (Thu)
Message-ID: <SR.EHPYC.12080305956.BABYL@MIT-SPEECH>
From: Scott Cyphers <SR.EHPYC@MIT-SPEECH>
To:   Charles Hornig <Hornig@SCRC-STONY-BROOK>
Cc:   BUG-LISPM@MIT-OZ
Subject: Random Printers
In-reply-to: Msg of 17 Jan 1985 11:56-EST from Charles Hornig <Hornig at SCRC-STONY-BROOK>

Thanks.  I'll try that.  I did figure out about the printer flavor
thing.
17-Jan-85 12:12:39-EST,4259;000000000000
Received: from MIT-TELLURIDE by MIT-OZ via Chaosnet; 17 Jan 85 12:11-EST
Date: Thursday, 17 January 1985, 12:07-EST
From: Tom at MIT-OZ
Sender: darth at NEWTOWNE-VARIETY
Subject: "Directory access privileges required", but I can't enter them.
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 18, on TELLURIDE:

When I tried to save out this buffer into a file on my directory, <TOM>, I
got a msg of the variety "Enter username or type <RETURN> for anonymous" . I
typed <RETURN>, and got this error for my directory. So I aborted out of the
error, and tried again, expecting the "Enter username etc." again. Instead I
instantly got this error again. So I tried to save out into someone else's
directory, but again got this error.

Great loss. One mistake, and I'm doomed forever.

>>Error: Directory access privileges required
         For OZ:PS:<CUSTER>ILLUS.DARTH
While in the function (:METHOD FS:HOST-UNIT :COMMAND)  FS:OPEN-CHAOS  (:METHOD FS:QFILE-ACCESS-PATH :OPEN)

(:METHOD FS:HOST-UNIT :COMMAND):  (P.C. = 236)
   Arg 0 (SELF): #<HOST-UNIT 27542013>
   Arg 1 (SELF-MAPPING-TABLE): FS:HOST-UNIT
   Arg 2 (OPERATION): :COMMAND
   Arg 3 (MARK-P): NIL
   Arg 4 (STREAM-OR-HANDLE): (:CREATE "O2343")
   Arg 5 (SIMPLE-P): NIL
   Arg 6 (WHOSTATE): "Open"
   Rest arg (COMMANDS): ("OPEN " :WRITE " " :BINARY " BYTE-SIZE 8" "" "" "" "" "" ...)
   Local 8 (HANDLE): "O2343"
   Local 9 (STREAM): NIL
   Local 10 (PKT): #<Chaos Packet 6144271>
   Local 11 (SUCCESS): NIL
   Local 12 (STRING): "O2343 ERROR ATD F Directory access privileges required"
   Local 13 (TRANSACTION-ID): "T2351"
   Local 14 (CREATE-P): T
   Local 15 (CONDITION): NIL
   Local 16: T
   Local 17: #<CASE-HANDLER 10564155>
   Local 18: NIL
   Local 19: (#<CASE-HANDLER 10564155>)

FS:OPEN-CHAOS:  (P.C. = 674)
   Arg 0 (ACCESS-PATH): #<TOPS20-QFILE-ACCESS-PATH OZ using QFILE 27542002>
   Arg 1 (REAL-PATHNAME): #<TOPS20-PATHNAME "OZ:PS:<CUSTER>ILLUS.DARTH">
   Arg 2 (*COMMAND-PATHNAME*-initialization): #<TOPS20-PATHNAME "OZ:PS:<CUSTER>ILLUS.DARTH">
   Arg 3 (OPTIONS): (:DIRECTION :OUTPUT :BYTE-SIZE 10 :CHARACTERS NIL)

(:METHOD FS:QFILE-ACCESS-PATH :OPEN):  (P.C. = 7)
   Arg 0 (SELF): #<TOPS20-QFILE-ACCESS-PATH OZ using QFILE 27542002>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:QFILE-ACCESS-PATH -- 4. IV's, 0. FL's 10376335>
   Arg 2 (OPERATION): :OPEN
   Arg 3 (REAL-PATHNAME): #<TOPS20-PATHNAME "OZ:PS:<CUSTER>ILLUS.DARTH">
   Arg 4 (PATHNAME): #<TOPS20-PATHNAME "OZ:PS:<CUSTER>ILLUS.DARTH">
   Rest arg (OPTIONS): (:DIRECTION :OUTPUT :BYTE-SIZE 10 :CHARACTERS NIL)

(:METHOD FS:ACTIVE-PATHNAME-MIXIN :OPEN):  (P.C. = 14)
   Arg 0 (SELF): #<TOPS20-PATHNAME "OZ:PS:<CUSTER>ILLUS.DARTH">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:ACTIVE-PATHNAME-MIXIN -- 1. IV's, 0. FL's 52530461>
   Arg 2 (OPERATION): :OPEN
   Arg 3 (PATHNAME): #<TOPS20-PATHNAME "OZ:PS:<CUSTER>ILLUS.DARTH">
   Rest arg (OPTIONS): (:DIRECTION :OUTPUT :BYTE-SIZE 10 :CHARACTERS NIL)

FS:COMMON-LISP-OPEN:  (P.C. = 445)
   Arg 0 (PATHNAME): #<TOPS20-PATHNAME "OZ:PS:<CUSTER>ILLUS.DARTH">
   Arg 1 (KEYWORD-ARGS): (:DIRECTION :OUT :CHARACTERS NIL :BYTE-SIZE 10)

OPEN:  (P.C. = 255)
   Arg 0 (PATHNAME): #<TOPS20-PATHNAME "OZ:PS:<TOM>ILLUS.DARTH">
   Rest arg (KEYWORD-ARGS): (:DIRECTION :OUT :CHARACTERS NIL :BYTE-SIZE 10)

(:METHOD ILL-FRAME :WRITE-ILL-FILE-TO-FILE):  (P.C. = 13)  (from ILL: CODE; COMMANDS)
   Arg 0 (SELF): #<ILL-FRAME Ill Frame 1 640174 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ILL-FRAME -- 62. IV's, 12. FL's 4173537>
   Arg 2 (OPERATION): :WRITE-ILL-FILE-TO-FILE
   Arg 3 (PATHNAME): #<TOPS20-PATHNAME "OZ:PS:<TOM>ILLUS.DARTH">

(:METHOD ILL-FRAME :WRITE-ILL-FILE):  (P.C. = 24)  (from ILL: CODE; COMMANDS)
   Arg 0 (SELF): #<ILL-FRAME Ill Frame 1 640174 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ILL-FRAME -- 62. IV's, 12. FL's 4173537>
   Arg 2 (OPERATION): :WRITE-ILL-FILE

Rest of stack:
PROCESS-COMMAND:  (P.C. = 12)  (from ILL: CODE; TOPLEVEL)
(:METHOD ILL-FRAME :ILL-TOP-LEVEL-LOOP):  (P.C. = 304)  (from ILL: CODE; TOPLEVEL)
ILL-TOP-LEVEL:  (P.C. = 17)  (from ILL: CODE; TOPLEVEL)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
17-Jan-85 13:16:18-EST,2259;000000000000
Received: from MIT-PI by MIT-OZ via Chaosnet; 17 Jan 85 13:16-EST
Date: Thursday, 17 January 1985, 13:14-EST
From: Tom Trobaugh <TOM at MIT-OZ>
Subject: Defconst demands second arg---ARRGGGHH.
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10,
Experimental Useful 1.0, FEP 18, on PI Project:

Defconst's 2nd arg used to be optional, and c-sh-A still claims it is.
The manual says so, too.
	
Am I doing something wrong, or what? 

>>Trap: The function SI:DEFCONST-1 was called with too few arguments.
While in the function SI:DEFCONST-1  SI:*EVAL  (:INTERNAL COMPILER:COMPILE-TO-CORE 2)

SI:DEFCONST-1:
   Arg 0 (SYMBOL): UTZ
   --Missing args:--
   Arg 1 (VALUE)
   --Optional args:--
   Arg 2 (DOCUMENTATION)

SI:*EVAL:  (P.C. = 644)
   Arg 0 (FORM): (SI:DEFCONST-1 UTZ)

(:INTERNAL COMPILER:COMPILE-TO-CORE 2):  (P.C. = 3)
   Arg 0 (**DEFSELECT-OP**): :DUMP-FORM
   Arg 1 (FORM): (SI:DEFCONST-1 UTZ)

COMPILER:COMPILE-TO-CORE:  (P.C. = 32)
   Arg 0 (OPERATION): :DUMP-FORM
   Rest arg (SELECT-METHOD-ARGS): ((SI:DEFCONST-1 UTZ))

COMPILER:COMPILE-FORM-FUNCTION:  (P.C. = 41)
   Arg 0 (FORM): (SI:DEFCONST-1 UTZ)
   Arg 1 (COMPILE-TIME-P): NIL
   Arg 2 (LOAD-TIME-P): T

COMPILER:COMPILE-FROM-STREAM-1:  (P.C. = 324)
   Arg 0 (FORM-initialization): (SI:DEFCONST-1 UTZ)
   Arg 1 (COMPILE-TIME-TOO): NIL

COMPILER:COMPILE-FROM-STREAM-1:  (P.C. = 105)
   Arg 0 (FORM-initialization): (EVAL-WHEN (LOAD EVAL) (SI:DEFCONST-1 UTZ))
   Arg 1 (COMPILE-TIME-TOO): NIL

COMPILER:COMPILE-FROM-STREAM-1:  (P.C. = 172)
   Arg 0 (FORM-initialization): (DEFCONST UTZ)
   --Defaulted args:--
   Arg 1 (COMPILE-TIME-TOO): NIL

Rest of stack:
COMPILER:PROCESS-FORMS-FROM-STREAM:  (P.C. = 117)
COMPILER:COMPILE-FROM-STREAM:  (P.C. = 235)
ZWEI:COMPILE-INTERVAL:  (P.C. = 141)
ZWEI:COMPILE-PRINT-INTERVAL:  (P.C. = 76)
ZWEI:COMPILE-BUFFER:  (P.C. = 34)
ZWEI:COM-COMPILE-BUFFER:  (P.C. = 5)
ZWEI:COM-EXTENDED-COMMAND:  (P.C. = 27)
ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 214)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 41)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
17-Jan-85 13:54:31-EST,1210;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 17 Jan 85 13:53-EST
Received: from SCRC-PEACE by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 160959; Thu 17-Jan-85 13:53:30-EST
Date: Thursday, 17 January 1985, 13:53-EST
From: Charles Hornig <Hornig at SCRC-STONY-BROOK>
Subject: Defconst demands second arg---ARRGGGHH.
To: Tom Trobaugh <TOM at MIT-OZ>, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 17 Jan 85 13:14-EST from Tom Trobaugh <TOM at MIT-OZ>
Message-ID: <850117135346.7.HORNIG@PEACE.SCRC.Symbolics.COM>

    Date: Thursday, 17 January 1985, 13:14-EST
    From: Tom Trobaugh <TOM at MIT-OZ>

    In Symbolics 3600 System 242.356, Hardcopy 20.10,
    Experimental Useful 1.0, FEP 18, on PI Project:

    Defconst's 2nd arg used to be optional, and c-sh-A still claims it is.
    The manual says so, too.
	
    Am I doing something wrong, or what? 

    >>Trap: The function SI:DEFCONST-1 was called with too few arguments.
    While in the function SI:DEFCONST-1  SI:*EVAL  (:INTERNAL COMPILER:COMPILE-TO-CORE 2)

The documentation and c-sh-A are wrong -- the initial value is required.
We will fix the documentation (probably not for the next release,
though).
17-Jan-85 15:43:45-EST,995;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 17 Jan 85 15:43-EST
Date: Thursday, 17 January 1985, 15:39-EST
From: Scott Cyphers <sr.ehpyc at MIT-SPEECH>
Subject: Square root of -1.0
To: BUG-LISPM at MIT-OZ
Message-ID: <850117153936.1.CYPHER@MIT-SMOKEY.MIT>

In Symbolics 3670 Release 6.0 Beta IIc, Experimental Spire-Macros 4.0,
Experimental Compute 3.0, Experimental Attribute 4.0,
Experimental Audio 3.0, Experimental Speech-Attributes 3.0,
Experimental Speech-Layouts 5.0, Experimental Versatec 4.0,
Experimental Prtout 3.0, Experimental Spire 15.0,
Experimental SpireX 12.0, Experimental ZOO 4.0, ZOO-SPIRE 1.0,
Experimental Display 5.0, microcode TMC5-IO4-MIC 315, FEP 22, on Lisp Machine Smokey:

This should offer to return #c(-1.0 0.0)

>>Error: Attempt to take the square root of -1.0, which is negative.
While in the function SQRT  SI:*EVAL  (:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0)

SQRT:  (P.C. = 136)
   Arg 0 (N): -1.0
   Local 1 (*SELECTQ-ITEM*): 127
17-Jan-85 16:16:01-EST,1053;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 17 Jan 85 16:13-EST
Date: 17 Jan 1985  16:13 EST (Thu)
Message-ID: <SR.EHPYC.12080351565.BABYL@MIT-SPEECH>
From: Scott Cyphers <SR.EHPYC@MIT-SPEECH>
To:   Charles Hornig <Hornig@SCRC-STONY-BROOK>
Cc:   BUG-LISPM@MIT-OZ
Subject: Print Spoolers
In-reply-to: Msg of 17 Jan 1985 12:02-EST from Charles Hornig <Hornig at SCRC-STONY-BROOK>

    Date: Thursday, 17 January 1985, 12:02-EST
    From: Charles Hornig <Hornig at SCRC-STONY-BROOK>
    To:   Scott Cyphers <SR.EHPYC>
    cc:   BUG-LISPM at MIT-OZ
    Re:   Print Spoolers

    I responded to the, but I thought I'd clarify it.  You get back a bogus
    object by passing a symbol to FIND-OBJECT-NAMED.  The RANDOM-PRINTER
    object is the correct one.  What you want is to call
    (NETI:REDEFINE-OBJECTS-OF-TYPE :PRINTER) to get the flavors right.  It
    will change PAPA-BEAR to a VERSATEC-PRINTER.

Thansk, It worked, except for the small matter of the function name
being NETI:REDEFINE-OBJECTS-OF-CLASS instead of TYPE.
17-Jan-85 16:22:09-EST,5275;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 17 Jan 85 16:21-EST
Received: from SCRC-NEPONSET by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 123522; Thu 17-Jan-85 16:20:24-EST
Date: Thursday, 17 January 1985, 16:21-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: "Directory access privileges required", but I can't enter them.
To: Tom at MIT-OZ, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 17 Jan 85 12:07-EST from Tom at MIT-OZ
Message-ID: <850117162140.7.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Thursday, 17 January 1985, 12:07-EST
    From: Tom at MIT-OZ

    In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 18, on TELLURIDE:

    When I tried to save out this buffer into a file on my directory, <TOM>, I
    got a msg of the variety "Enter username or type <RETURN> for anonymous" . I
    typed <RETURN>, and got this error for my directory. So I aborted out of the
    error, and tried again, expecting the "Enter username etc." again. Instead I
    instantly got this error again. So I tried to save out into someone else's
    directory, but again got this error.

    Great loss. One mistake, and I'm doomed forever.

No, there are various things you can do.  The most extreme is cold
booting!!  More realistic things are
	(send (dbg:arg 0) :reset)
to reset the host unit.  Or
	(fs:file-login nil)
to logout all current file connections so it will login next time.  Or
	(neti:reset) (neti:enable)
to punch the network in the nose.  You can also go into peek and clobber
the control connection from F(ile system) mode.

    >>Error: Directory access privileges required
	     For OZ:PS:<CUSTER>ILLUS.DARTH
    While in the function (:METHOD FS:HOST-UNIT :COMMAND)  FS:OPEN-CHAOS  (:METHOD FS:QFILE-ACCESS-PATH :OPEN)

    (:METHOD FS:HOST-UNIT :COMMAND):  (P.C. = 236)
       Arg 0 (SELF): #<HOST-UNIT 27542013>
       Arg 1 (SELF-MAPPING-TABLE): FS:HOST-UNIT
       Arg 2 (OPERATION): :COMMAND
       Arg 3 (MARK-P): NIL
       Arg 4 (STREAM-OR-HANDLE): (:CREATE "O2343")
       Arg 5 (SIMPLE-P): NIL
       Arg 6 (WHOSTATE): "Open"
       Rest arg (COMMANDS): ("OPEN " :WRITE " " :BINARY " BYTE-SIZE 8" "" "" "" "" "" ...)
       Local 8 (HANDLE): "O2343"
       Local 9 (STREAM): NIL
       Local 10 (PKT): #<Chaos Packet 6144271>
       Local 11 (SUCCESS): NIL
       Local 12 (STRING): "O2343 ERROR ATD F Directory access privileges required"
       Local 13 (TRANSACTION-ID): "T2351"
       Local 14 (CREATE-P): T
       Local 15 (CONDITION): NIL
       Local 16: T
       Local 17: #<CASE-HANDLER 10564155>
       Local 18: NIL
       Local 19: (#<CASE-HANDLER 10564155>)

    FS:OPEN-CHAOS:  (P.C. = 674)
       Arg 0 (ACCESS-PATH): #<TOPS20-QFILE-ACCESS-PATH OZ using QFILE 27542002>
       Arg 1 (REAL-PATHNAME): #<TOPS20-PATHNAME "OZ:PS:<CUSTER>ILLUS.DARTH">
       Arg 2 (*COMMAND-PATHNAME*-initialization): #<TOPS20-PATHNAME "OZ:PS:<CUSTER>ILLUS.DARTH">
       Arg 3 (OPTIONS): (:DIRECTION :OUTPUT :BYTE-SIZE 10 :CHARACTERS NIL)

    (:METHOD FS:QFILE-ACCESS-PATH :OPEN):  (P.C. = 7)
       Arg 0 (SELF): #<TOPS20-QFILE-ACCESS-PATH OZ using QFILE 27542002>
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:QFILE-ACCESS-PATH -- 4. IV's, 0. FL's 10376335>
       Arg 2 (OPERATION): :OPEN
       Arg 3 (REAL-PATHNAME): #<TOPS20-PATHNAME "OZ:PS:<CUSTER>ILLUS.DARTH">
       Arg 4 (PATHNAME): #<TOPS20-PATHNAME "OZ:PS:<CUSTER>ILLUS.DARTH">
       Rest arg (OPTIONS): (:DIRECTION :OUTPUT :BYTE-SIZE 10 :CHARACTERS NIL)

    (:METHOD FS:ACTIVE-PATHNAME-MIXIN :OPEN):  (P.C. = 14)
       Arg 0 (SELF): #<TOPS20-PATHNAME "OZ:PS:<CUSTER>ILLUS.DARTH">
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:ACTIVE-PATHNAME-MIXIN -- 1. IV's, 0. FL's 52530461>
       Arg 2 (OPERATION): :OPEN
       Arg 3 (PATHNAME): #<TOPS20-PATHNAME "OZ:PS:<CUSTER>ILLUS.DARTH">
       Rest arg (OPTIONS): (:DIRECTION :OUTPUT :BYTE-SIZE 10 :CHARACTERS NIL)

    FS:COMMON-LISP-OPEN:  (P.C. = 445)
       Arg 0 (PATHNAME): #<TOPS20-PATHNAME "OZ:PS:<CUSTER>ILLUS.DARTH">
       Arg 1 (KEYWORD-ARGS): (:DIRECTION :OUT :CHARACTERS NIL :BYTE-SIZE 10)

    OPEN:  (P.C. = 255)
       Arg 0 (PATHNAME): #<TOPS20-PATHNAME "OZ:PS:<TOM>ILLUS.DARTH">
       Rest arg (KEYWORD-ARGS): (:DIRECTION :OUT :CHARACTERS NIL :BYTE-SIZE 10)

    (:METHOD ILL-FRAME :WRITE-ILL-FILE-TO-FILE):  (P.C. = 13)  (from ILL: CODE; COMMANDS)
       Arg 0 (SELF): #<ILL-FRAME Ill Frame 1 640174 exposed>
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ILL-FRAME -- 62. IV's, 12. FL's 4173537>
       Arg 2 (OPERATION): :WRITE-ILL-FILE-TO-FILE
       Arg 3 (PATHNAME): #<TOPS20-PATHNAME "OZ:PS:<TOM>ILLUS.DARTH">

    (:METHOD ILL-FRAME :WRITE-ILL-FILE):  (P.C. = 24)  (from ILL: CODE; COMMANDS)
       Arg 0 (SELF): #<ILL-FRAME Ill Frame 1 640174 exposed>
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ILL-FRAME -- 62. IV's, 12. FL's 4173537>
       Arg 2 (OPERATION): :WRITE-ILL-FILE

    Rest of stack:
    PROCESS-COMMAND:  (P.C. = 12)  (from ILL: CODE; TOPLEVEL)
    (:METHOD ILL-FRAME :ILL-TOP-LEVEL-LOOP):  (P.C. = 304)  (from ILL: CODE; TOPLEVEL)
    ILL-TOP-LEVEL:  (P.C. = 17)  (from ILL: CODE; TOPLEVEL)
    SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
17-Jan-85 16:45:04-EST,2491;000000000000
Received: from MIT-APIARY-3 by MIT-OZ via Chaosnet; 17 Jan 85 16:42-EST
Date: Thursday, 17 January 1985, 16:42-EST
From:  <WARD at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 18, on Lisp Machine Apiary-3:



>>Break: 
While in the function TV:KBD-DEFAULT-OUTPUT-FUNCTION  TV:IO-BUFFER-GET  TV:KBD-IO-BUFFER-GET

TV:KBD-DEFAULT-OUTPUT-FUNCTION:  (P.C. = 17)
   Arg 0 (IGNORE): #<IO-BUFFER 10665011: empty, State: NIL>
   Arg 1 (CHAR): 1201

TV:IO-BUFFER-GET:  (P.C. = 54)
   Arg 0 (BUFFER): #<IO-BUFFER 10665011: empty, State: NIL>
   Arg 1 (NO-HANG-P): T
   --Defaulted args:--
   Arg 2 (WHOSTATE): "Buffer Empty"

TV:KBD-IO-BUFFER-GET:  (P.C. = 17)
   Arg 0 (BUFFER): #<IO-BUFFER 10665011: empty, State: NIL>
   --Defaulted args:--
   Arg 1 (NO-HANG-P): NIL
   Arg 2 (WHOSTATE): "Tyi"

(:METHOD TV:STREAM-MIXIN :ANY-TYI):  (P.C. = 67)
   Arg 0 (SELF): #<LISP-LISTENER Lisp Listener 1 3640000 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:STREAM-MIXIN -- 14. IV's, 0. FL's 10664165>
   Arg 2 (OPERATION): :ANY-TYI
   --Defaulted args:--
   Arg 3 (IGNORE): NIL

(:DEFUN-METHOD TV:RH-TYI):  (P.C. = 12)
   Arg 0 (SELF): #<LISP-LISTENER Lisp Listener 1 3640000 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:STREAM-MIXIN -- 14. IV's, 0. FL's 10664165>
   Arg 2 (TOP-LEVEL?): T

(:DEFUN-METHOD TV:ALTERNATE-RUBOUT-HANDLER-TYI):  (P.C. = 45)
   Arg 0 (SELF): #<LISP-LISTENER Lisp Listener 1 3640000 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:STREAM-MIXIN -- 14. IV's, 0. FL's 10664165>
   Arg 2 (RUBBED-OUT-SOME?): NIL

TV:ALTERNATE-RUBOUT-HANDLER-TYI:  (P.C. = 12)
   Rest arg (ARGS): (NIL)

TV:RUBOUT-HANDLER-INVOKE:  (P.C. = 11)
   Arg 0 (OPERATION): TYI
   Rest arg (ARGS): (NIL)

Rest of stack:
(:METHOD TV:STREAM-MIXIN :ANY-TYI):  (P.C. = 43)
(:DEFUN-METHOD TV:TYI-INTERNAL):  (P.C. = 5)
(:METHOD TV:STREAM-MIXIN :TYI):  (P.C. = 7)
SI:XR-XRTYI-WHITE-OUT:  (P.C. = 5)
SI:XR-READ-THING:  (P.C. = 15)
(:INTERNAL SI:READ-INTERNAL 0):  (P.C. = 15)
(:DEFUN-METHOD TV:RUBOUT-HANDLER-READ):  (P.C. = 61)
(:METHOD TV:STREAM-MIXIN :RUBOUT-HANDLER):  (P.C. = 72)
SI:READ-INTERNAL:  (P.C. = 46)
READ-FOR-TOP-LEVEL:  (P.C. = 6)
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 142)
SI:LISP-COMMAND-LOOP:  (P.C. = 115)
SI:LISP-TOP-LEVEL1:  (P.C. = 22)
SI:LISP-TOP-LEVEL:  (P.C. = 7)

(greaterp 60000. 70000) returns T.  I called it originally using funcall.
17-Jan-85 16:53:56-EST,2088;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 17 Jan 85 16:45-EST
Date: Thu, 17 Jan 1985  16:43 EST
Message-ID: <LBAGNALL.12080357121.BABYL@BBNG.ARPA>
From: LBAGNALL@BBNG.ARPA
To:   "David C. Plummer in disguise" <DCP@SCRC-RIVERSIDE.ARPA>
Cc:   BUG-LISPM%MIT-OZ@MIT-MC.ARPA, Tom%MIT-OZ@MIT-MC.ARPA
Subject: "Directory access privileges required", but I can't enter them.

    Date: Thursday, 17 January 1985, 16:21-EST
    From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
    To:   Tom at MIT-OZ, BUG-LISPM at MIT-OZ
    Re:   "Directory access privileges required", but I can't enter them.

        Date: Thursday, 17 January 1985, 12:07-EST
        From: Tom at MIT-OZ

        In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 18, on TELLURIDE:

        When I tried to save out this buffer into a file on my directory, <TOM>, I
        got a msg of the variety "Enter username or type <RETURN> for anonymous" . I
        typed <RETURN>, and got this error for my directory. So I aborted out of the
        error, and tried again, expecting the "Enter username etc." again. Instead I
        instantly got this error again. So I tried to save out into someone else's
        directory, but again got this error.

        Great loss. One mistake, and I'm doomed forever.

    No, there are various things you can do.  The most extreme is cold
    booting!!  More realistic things are
    	(send (dbg:arg 0) :reset)
    to reset the host unit.  Or
    	(fs:file-login nil)
    to logout all current file connections so it will login next time.  Or
    	(neti:reset) (neti:enable)
    to punch the network in the nose.  You can also go into peek and clobber
    the control connection from F(ile system) mode.

        >>Error: Directory access privileges required
    	     For OZ:PS:<CUSTER>ILLUS.DARTH
        While in the function (:METHOD FS:HOST-UNIT :COMMAND)  FS:OPEN-CHAOS  (:METHOD FS:QFILE-ACCESS-PATH :OPEN)

Maybe one or more of these fixes should be a resume option?  It
happens often enough to deserve one, I think.
17-Jan-85 17:28:38-EST,3176;000000000000
Received: from SCRC-RIVERSIDE by MIT-OZ via Chaosnet; 17 Jan 85 17:28-EST
Received: from SCRC-CONCORD by SCRC-RIVERSIDE via CHAOS with CHAOS-MAIL id 30068; Thu 17-Jan-85 17:28:01-EST
Date: Thursday, 17 January 1985, 17:30-EST
From: Bernard S. Greenberg <BSG at SCRC-TENEX>
Subject: ????
To: WARD at MIT-OZ, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 17 Jan 85 16:42-EST from WARD at MIT-OZ
Message-ID: <850117173024.6.BSG@CONCORD.SCRC.Symbolics.COM>

    Date: Thursday, 17 January 1985, 16:42-EST
    From:  <WARD at MIT-OZ>

    In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 18, on Lisp Machine Apiary-3:



    >>Break: 
    While in the function TV:KBD-DEFAULT-OUTPUT-FUNCTION  TV:IO-BUFFER-GET  TV:KBD-IO-BUFFER-GET

    TV:KBD-DEFAULT-OUTPUT-FUNCTION:  (P.C. = 17)
       Arg 0 (IGNORE): #<IO-BUFFER 10665011: empty, State: NIL>
       Arg 1 (CHAR): 1201

    TV:IO-BUFFER-GET:  (P.C. = 54)
       Arg 0 (BUFFER): #<IO-BUFFER 10665011: empty, State: NIL>
       Arg 1 (NO-HANG-P): T
       --Defaulted args:--
       Arg 2 (WHOSTATE): "Buffer Empty"

    TV:KBD-IO-BUFFER-GET:  (P.C. = 17)
       Arg 0 (BUFFER): #<IO-BUFFER 10665011: empty, State: NIL>
       --Defaulted args:--
       Arg 1 (NO-HANG-P): NIL
       Arg 2 (WHOSTATE): "Tyi"

    (:METHOD TV:STREAM-MIXIN :ANY-TYI):  (P.C. = 67)
       Arg 0 (SELF): #<LISP-LISTENER Lisp Listener 1 3640000 exposed>
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:STREAM-MIXIN -- 14. IV's, 0. FL's 10664165>
       Arg 2 (OPERATION): :ANY-TYI
       --Defaulted args:--
       Arg 3 (IGNORE): NIL

    (:DEFUN-METHOD TV:RH-TYI):  (P.C. = 12)
       Arg 0 (SELF): #<LISP-LISTENER Lisp Listener 1 3640000 exposed>
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:STREAM-MIXIN -- 14. IV's, 0. FL's 10664165>
       Arg 2 (TOP-LEVEL?): T

    (:DEFUN-METHOD TV:ALTERNATE-RUBOUT-HANDLER-TYI):  (P.C. = 45)
       Arg 0 (SELF): #<LISP-LISTENER Lisp Listener 1 3640000 exposed>
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:STREAM-MIXIN -- 14. IV's, 0. FL's 10664165>
       Arg 2 (RUBBED-OUT-SOME?): NIL

    TV:ALTERNATE-RUBOUT-HANDLER-TYI:  (P.C. = 12)
       Rest arg (ARGS): (NIL)

    TV:RUBOUT-HANDLER-INVOKE:  (P.C. = 11)
       Arg 0 (OPERATION): TYI
       Rest arg (ARGS): (NIL)

    Rest of stack:
    (:METHOD TV:STREAM-MIXIN :ANY-TYI):  (P.C. = 43)
    (:DEFUN-METHOD TV:TYI-INTERNAL):  (P.C. = 5)
    (:METHOD TV:STREAM-MIXIN :TYI):  (P.C. = 7)
    SI:XR-XRTYI-WHITE-OUT:  (P.C. = 5)
    SI:XR-READ-THING:  (P.C. = 15)
    (:INTERNAL SI:READ-INTERNAL 0):  (P.C. = 15)
    (:DEFUN-METHOD TV:RUBOUT-HANDLER-READ):  (P.C. = 61)
    (:METHOD TV:STREAM-MIXIN :RUBOUT-HANDLER):  (P.C. = 72)
    SI:READ-INTERNAL:  (P.C. = 46)
    READ-FOR-TOP-LEVEL:  (P.C. = 6)
    SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 142)
    SI:LISP-COMMAND-LOOP:  (P.C. = 115)
    SI:LISP-TOP-LEVEL1:  (P.C. = 22)
    SI:LISP-TOP-LEVEL:  (P.C. = 7)

    (greaterp 60000. 70000) returns T.  I called it originally using funcall.

This is the unclearest bug report I have ever seen.
What did you do?  What did it do?  What happened?
17-Jan-85 17:36:41-EST,588;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 17 Jan 85 17:36-EST
Date: 17 Jan 1985  17:36 EST (Thu)
Message-ID: <SR.EHPYC.12080366810.BABYL@MIT-SPEECH>
From: Scott Cyphers <SR.EHPYC@MIT-SPEECH>
To:   "Bernard S. Greenberg" <BSG@SCRC-TENEX>
Cc:   BUG-LISPM@MIT-OZ, WARD@MIT-OZ
Subject: ????
In-reply-to: Msg of 17 Jan 1985 17:30-EST from Bernard S. Greenberg <BSG at SCRC-TENEX>

Look at the end of the message.  I think the "error" he is talking
about is

(greater-p 60000. 70000) -> T

due to base being 8 instead of 10, and the . forcing read of 60000. in
base 10.
17-Jan-85 21:29:06-EST,3359;000000000000
Received: from MIT-FORD by MIT-OZ via Chaosnet; 17 Jan 85 21:28-EST
Date: Thursday, 17 January 1985, 21:26-EST
From: Robert L. Krawitz <ZZZ.RLK at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In System 98.80, CADR 3.10, ZMail 53.19, MIT-Specific 22.5,
microcode 309, ZM MIT gc*2, on Ford Prefect:


Insert your description of the circumstances here:

In profile editing filters.  I clicked on OR, and then on to/cc, and
typed "bandykin".

>>TRAP 13526 (ARGTYP NUMBER PP T XZEROP)
The argument to ZEROP, NIL, was of the wrong type.
The function expected a number.
Backtrace from the debugger:

INSERT-FORM-INTO-WINDOW (P.C. = 221)

 Arg 0 (FORM): (MSG-HEADER-RECIPIENT-SEARCH *RECIPIENT-TYPE-HEADERS* "bandykin")
   --Defaulted args:--
 Arg 1 (NCHARS): 0
Local 0 (BP): ("                             /"bandykin/")" 50)
Local 1 (POINT): ("                             /"bandykin/")" 50 :NORMAL)
Local 2 (N): NIL
Local 3 (FLAG): T
Local 4 (BP): ("(DEFINE-FILTER |lts| (MSG)" 0)


INSERT-FILTER (P.C. = 364)

 Arg 0 (NAME): "To//Cc"
 Arg 1 (TYPE): :TO//CC
Local 0: ((MSG-HEADER-RECIPIENT-SEARCH *RECIPIENT-TYPE-HEADERS* "bandykin"))
Local 1: (("                             /"bandykin/")" 50) ("                             /"bandykin/")" 50 :NORMAL) NIL T ...)
Local 2 (KEY): "bandykin"
Local 3 (DATE): NIL
Local 4 (RELATIVE-P): NIL


(:SELECT-METHOD ZMAIL-FILTER-COMMAND-LIST :MENU) (P.C. = 133)

 Arg 0 (IGNORE): :MENU
 Arg 1 (ITEM): :TO//CC
 Arg 2 (IGNORE): 1
 Arg 3 (WINDOW): #<ZMAIL-COMMAND-MENU-PANE Zmail Command Menu Pane 4 3406122 exposed>
Local 0 (WINDOW-NAME): HEADER-FILTER-MENU
Local 1 (ITEM-NAME): "To//Cc"


(:METHOD ZMAIL-FILTER-FRAME :PROCESS-SPECIAL-COMMAND) (P.C. = 25)
  (SELF is #<ZMAIL-FILTER-FRAME Zmail Filter Frame 1 3402614 exposed>)

 Arg 0 (OPERATION): :PROCESS-SPECIAL-COMMAND
 Rest arg (ARGS): (:MENU ("To//Cc" :VALUE :TO//CC :DOCUMENTATION ...) 1 #<ZMAIL-COMMAND-MENU-PANE Zmail Command Menu Pane 4 3406122 exposed>)


(:METHOD ZMAIL-COMMAND-LOOP-MIXIN :COMMAND-LOOP) (P.C. = 252)
  (SELF is #<ZMAIL-FILTER-FRAME Zmail Filter Frame 1 3402614 exposed>)

 Arg 0 (OPERATION): :COMMAND-LOOP
Local 0: ("Return to ZMAIL command loop.")
Local 1: ((SYSTEM:ABORT ERROR) ("Return to ZMAIL command loop.") T ("Return to ZMAIL command loop.") ...)
Local 2 (RESPONSE): NIL
Local 3 (DEGREE): 0


Remainder of stack:

(:INTERNAL (:METHOD ZMAIL-UTILITY-FRAME :COMBINED :COMMAND-LOOP) 0) (P.C. = 44)
FUNCALL (P.C. = 25)
(:METHOD ZMAIL-COMMAND-LOOP-MIXIN :AROUND :COMMAND-LOOP) (P.C. = 57)
(:METHOD ZMAIL-UTILITY-FRAME :COMBINED :COMMAND-LOOP) (P.C. = 43)
DEFINE-NEW-FILTER (P.C. = 133)
PROFILE-NEW-FILTER (P.C. = 27)
(:METHOD ZMAIL-MULTIPLE-MENU-MIXIN :MULTIPLE-CHOOSE) (P.C. = 155)
ZMAIL-MULTIPLE-MENU-CHOOSE (P.C. = 77)
PROFILE-FILTERS-OR-UNIVERSES (P.C. = 122)
PROFILE-FILTERS-BUTTON (P.C. = 107)
...
(:SELECT-METHOD ZMAIL-COMMAND-LIST :MENU) (P.C. = 32)
(:METHOD ZMAIL-FRAME :PROCESS-SPECIAL-COMMAND) (P.C. = 25)
(:METHOD ZMAIL-COMMAND-LOOP-MIXIN :COMMAND-LOOP) (P.C. = 252)
(:INTERNAL (:METHOD ZMAIL-FRAME :COMBINED :COMMAND-LOOP) 0) (P.C. = 44)
FUNCALL (P.C. = 25)
(:METHOD ZMAIL-COMMAND-LOOP-MIXIN :AROUND :COMMAND-LOOP) (P.C. = 57)
(:METHOD ZMAIL-FRAME :COMBINED :COMMAND-LOOP) (P.C. = 43)
ZMAIL-PROCESS-TOP-LEVEL (P.C. = 115)
SI:PROCESS-TOP-LEVEL (P.C. = 152)
17-Jan-85 21:52:10-EST,1054;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 17 Jan 85 21:51-EST
Received: from ti-csl by csnet-relay.csnet id a002146; 17 Jan 85 21:21 EST
Date: 17 Jan 1985 1742-CST
From: Sloat%ti-csl.csnet@csnet-relay.arpa
Subject: Any cures for 5.2 Namespace Login Glitch
To: Info-Lispm-Mit%MIT-OZ@mit-mc.ARPA
Received: from csl60 by ti-csl; Thu, 17 Jan 85 18:15 CST

Lispm Users,
        While running 5.2 on a 3600 made at TI CSL from 5.0/5.1 via
loading Patches I find that under certain conditions our Namespace
machine requires manual login (ie. force-user-to-login).  I have heard
some rumors about a "5.2 Prime" but I haven't heard what fixes are
incorporated in that Release. Did anyone have a fix for this bug
before Release 6 was installed? (other than dedicating a Lispm as
Namespace Server)
                                Thanks in Advance,
                                        Jay Sloat
                                        Texas Instruments, Dallas
                                        Sloat%TI-CSL@csnet-relay
-------

17-Jan-85 21:58:42-EST,1133;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 17 Jan 85 21:51-EST
Date: Thursday, 17 January 1985, 21:43-EST
From: David Vinayak Wallace <Gumby at MIT-MC>
Subject: SUPDUP
To: Charles Hornig <Hornig at SCRC-STONY-BROOK>
Cc: David C. Plummer in disguise <DCP at SCRC-QUABBIN>,
    BUG-LISPM at MIT-OZ
In-reply-to: <850117113746.1.HORNIG@PEACE.SCRC.Symbolics.COM>

    Date: Thu, 17 Jan 85 11:37 EST
    From: Charles Hornig <Hornig@SCRC-STONY-BROOK.ARPA>

	Date: Thu, 17 Jan 85 09:57 EST
	From: David Vinayak Wallace <Gumby@MIT-MC.ARPA>

	Well, I did some poking around, and I found that variable
	TELNET:*TERMINAL-SIMULATOR-TYPES* contains the list 
	TELNET:(VT100-TERMINAL-SIMULATOR AMBASSADOR-TERMINAL-SIMULATOR
		IMLAC-TERMINAL-SIMULATOR NULL-TERMINAL-SIMULATOR)

	But how do I switch one or the other on?

    In TELNET, you do <Network>-X and then pick it out of the menu.  In
    SUPDUP, it is irrelevant, since you are using the SUPDUP virtual
    terminal protocol.

It's not irrelevent.  To run, e.g. EMACS at STANFORD I must connect to
an intermediate machine (which will use SUPDUP by default).
17-Jan-85 22:58:12-EST,447;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 17 Jan 85 22:57-EST
Date: 17 January 1985 22:56-EST
From: David Vinayak Wallace <GUMBY @ MIT-MC>
Subject:  :CALLABLE-ACCESSORS to DEFSTRUCT
To: BUG-LISPM @ MIT-MC

Using callable-accessors does indeed make accessors that are SUBST's, but
not a creator.  Is there any way to get the functionality of (apply
#'make-foo '(vars-and-inits)), the way you can apply MAKE-INSTANCE to make
a flavor?
18-Jan-85 00:21:27-EST,418;000000000000
Received: by MIT-OZ via Chaosnet; 18 Jan 85 00:21-EST
Date: Friday, 18 January 1985, 00:20-EST
From: Edward H Lay <EHL at MIT-OZ>
Subject: sys:%beep
To: BUG-LISPM at MIT-OZ
Message-ID: <850118002051.1.EHL@TAHOE.MIT>

In Symbolics 3640 Release 6.0 Beta IIc, microcode TMC5-IO4-ST506-MIC 315,
on TAHOE:
Warm booted from: Lisp Listener 1, Lisp Listener 1.

Everytime this is called, I am thrown into the fep.
18-Jan-85 05:10:10-EST,2068;000000000000
Received: from MIT-MORRISON by MIT-OZ via Chaosnet; 18 Jan 85 05:10-EST
Date: Friday, 18 January 1985, 05:10-EST
From: jcma@MIT-MC
Subject: New Finger System
To: BUG-LISPM@MIT-OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10,
Experimental RELATUS 131.189, FEP 22, on Lisp Machine Jim Morrison:

Now that there are so many Lisp Machines on the chaos net at MIT as well as
the symbolics net, we need a better finger system to avoid cluttered screen
and to get the information desired.  It should have the following features:

* It should be constraint oriented.  You specify some constraints on what you
want to see and you get it.  Typical constraints are a user logged in, a home
machine, idle times, namespaces, location (e.g., 7th floor), organization
(e.g., MIT).

* Constraints should be recordable so that particular patterns can be bound to
numveric args to function F.

* Constraints should be extensible by users.

* Better layout for large amounts of information.

* No namespace lossage slowing up the works.

* Periodic retrying of patterns until success in the background, with 
notification oriented reporting of success.

* Mouse sensitive users and hosts displayed.  For users, whois, read their
mail, dired their homedir, or converse with then is a good start.  For hosts,
examination of the file system, printing the disk label, transfering bands,
spying on the screen array, remote login, telnet, batch jobs, eval serving,
booting from bands, and file serving from zmacs as well as zmail is a good
start.  Menus should be dynamically computed, showing only executable options.
Operations should be user extensible.

* Finger system should be able to use gateways and networks to do many of the
above, when protocols support the functionality.  The pathway should be either
specifiable by the user or automatically computed by the namespace loser.

* A prize collection of DCP's random hacks should be available by setting a
*random* variable.

* Fingering should be fast when done in the foreground.
18-Jan-85 05:26:01-EST,671;000000000000
Received: from MIT-MORRISON by MIT-OZ via Chaosnet; 18 Jan 85 05:25-EST
Date: Friday, 18 January 1985, 05:25-EST
From: jcma@MIT-MC
Subject: CONTROL-Z
To: BUG-LISPM@MIT-OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10,
Experimental RELATUS 131.189, FEP 22, on Lisp Machine Jim Morrison:

* Understanding of Control-Z by the window system is inconsistent.  Older
windows (e.g., ZMACS), bury themselves and new ones don't know what to do.  

* I like it and think all major window should know about it.

* Maybe there should an analog to META-CONTROL-L in ZMACS for the system key.

* An equivalent to CONTROL-Z could also be a plus for the system key.
18-Jan-85 05:44:06-EST,1069;000000000000
Received: from MIT-MORRISON by MIT-OZ via Chaosnet; 18 Jan 85 05:44-EST
Date: Friday, 18 January 1985, 05:44-EST
From: jcma@MIT-MC
Subject: Applying Constraints to Namespaces
To: BUG-LISPM@MIT-OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10,
Experimental RELATUS 131.189, FEP 22, on Lisp Machine Jim Morrison:

If the namespace loser was a well-defined database system, it would be
possible to reference namespace objects using constraints that specified
features of the objects desired.  

* Only objects satisfying the constraint description should be returned.

* The descriptive constraints should be user extensible.

* Evaluation time should not be a function of the size of the database for
constraints utilizing information cached by the namespace system.  (A little
hierarchy can help here.)

* This could be very useful for the new finger system.

The namespace would then be able to answer questions such as what machines at
MIT are running rel 6 and what machines in the pacific time zone, on the arpa
net, are tops-20 sites.
18-Jan-85 12:44:57-EST,988;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 18 Jan 85 12:44-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 161763; Fri 18-Jan-85 12:42:58-EST
Date: Friday, 18 January 1985, 12:42-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: ????
To: Scott Cyphers <SR.EHPYC at MIT-SPEECH>,
    Bernard S. Greenberg <BSG at SCRC-TENEX>
cc: BUG-LISPM at MIT-OZ, WARD at MIT-OZ
In-Reply-To: <SR.EHPYC.12080366810.BABYL@MIT-SPEECH>
Message-ID: <850118124258.6.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: 17 Jan 1985  17:36 EST (Thu)
    From: Scott Cyphers <SR.EHPYC@MIT-SPEECH>

    Look at the end of the message.  I think the "error" he is talking
    about is

    (greater-p 60000. 70000) -> T

    due to base being 8 instead of 10, and the . forcing read of 60000. in
    base 10.

Relax everybody.  In Release 6 we have changed the base to #10r10 so
people can once again use their thumbs to count with.
18-Jan-85 12:56:52-EST,376;000000000000
Received: from MIT-JANIS by MIT-OZ via Chaosnet; 18 Jan 85 12:56-EST
Date: Friday, 18 January 1985, 12:54-EST
From: Ken Haase <KWH at MIT-OZ>
Subject: Applying Constraints to Namespaces
To: jcma at MIT-MC, BUG-LISPM at MIT-OZ
In-reply-to: The message of 18 Jan 85 05:44-EST from jcma at MIT-MC


Try NET:FIND-OBJECTS-FROM-PROPERTY-LIST for a limited version of this.
18-Jan-85 13:07:09-EST,1442;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 18 Jan 85 13:06-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 161782; Fri 18-Jan-85 13:00:11-EST
Date: Friday, 18 January 1985, 13:00-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: Square root of -1.0
To: Scott Cyphers <sr.ehpyc at MIT-SPEECH>, BUG-LISPM at MIT-OZ
In-Reply-To: <850117153936.1.CYPHER@MIT-SMOKEY.MIT>
Message-ID: <850118130010.0.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Thursday, 17 January 1985, 15:39-EST
    From: Scott Cyphers <sr.ehpyc at MIT-SPEECH>

    In Symbolics 3670 Release 6.0 Beta IIc, Experimental Spire-Macros 4.0,
    Experimental Compute 3.0, Experimental Attribute 4.0,
    Experimental Audio 3.0, Experimental Speech-Attributes 3.0,
    Experimental Speech-Layouts 5.0, Experimental Versatec 4.0,
    Experimental Prtout 3.0, Experimental Spire 15.0,
    Experimental SpireX 12.0, Experimental ZOO 4.0, ZOO-SPIRE 1.0,
    Experimental Display 5.0, microcode TMC5-IO4-MIC 315, FEP 22, on Lisp Machine Smokey:

    This should offer to return #c(-1.0 0.0)

    >>Error: Attempt to take the square root of -1.0, which is negative.
    While in the function SQRT  SI:*EVAL  (:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0)

    SQRT:  (P.C. = 136)
       Arg 0 (N): -1.0
       Local 1 (*SELECTQ-ITEM*): 127

Use CL:SQRT, which returns #c(0.0 1.0) for this case.
18-Jan-85 14:58:27-EST,883;000000000000
Received: from SCC-WAIKATO by MIT-OZ via Chaosnet; 18 Jan 85 14:01-EST
Received: from SCRC-HILLSBOROUGH by WAIKATO via CHAOS with CHAOS-MAIL id 76791; Fri 18-Jan-85 10:11:01-EST
Date: Friday, 18 January 1985, 10:11-EST
From: Dennis L. Doughty <doughty at WAIKATO>
Subject: CONTROL-Z
To: jcma at MIT-MC
cc: BUG-LISPM at MIT-OZ, doughty at WAIKATO
In-Reply-To: The message of 18 Jan 85 05:25-EST from jcma at MIT-MC
Message-ID: <850118101132.3.DOUGHTY@HILLSBOROUGH.SCRC.Symbolics.COM>

    Date: Friday, 18 January 1985, 05:25-EST
    From: jcma@MIT-MC

    In Symbolics 3600 System 242.356, Hardcopy 20.10,
    Experimental RELATUS 131.189, FEP 22, on Lisp Machine Jim Morrison:

    * Maybe there should an analog to META-CONTROL-L in ZMACS for the system key.

Function S

    * An equivalent to CONTROL-Z could also be a plus for the system key.

Function B
18-Jan-85 15:14:16-EST,1823;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 18 Jan 85 14:11-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 161818; Fri 18-Jan-85 13:31:47-EST
Date: Friday, 18 January 1985, 13:31-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: SUPDUP
To: David Vinayak Wallace <Gumby at MIT-MC>,
    Charles Hornig <Hornig at SCRC-STONY-BROOK>
cc: David C. Plummer in disguise <DCP at SCRC-QUABBIN>,
    BUG-LISPM at MIT-OZ
In-Reply-To: The message of 17 Jan 85 21:43-EST from David Vinayak Wallace <Gumby at MIT-MC>
Message-ID: <850118133146.6.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Thursday, 17 January 1985, 21:43-EST
    From: David Vinayak Wallace <Gumby at MIT-MC>

	Date: Thu, 17 Jan 85 11:37 EST
	From: Charles Hornig <Hornig@SCRC-STONY-BROOK.ARPA>

	    Date: Thu, 17 Jan 85 09:57 EST
	    From: David Vinayak Wallace <Gumby@MIT-MC.ARPA>

	    Well, I did some poking around, and I found that variable
	    TELNET:*TERMINAL-SIMULATOR-TYPES* contains the list 
	    TELNET:(VT100-TERMINAL-SIMULATOR AMBASSADOR-TERMINAL-SIMULATOR
		    IMLAC-TERMINAL-SIMULATOR NULL-TERMINAL-SIMULATOR)

	    But how do I switch one or the other on?

	In TELNET, you do <Network>-X and then pick it out of the menu.  In
	SUPDUP, it is irrelevant, since you are using the SUPDUP virtual
	terminal protocol.

    It's not irrelevent.  To run, e.g. EMACS at STANFORD I must connect to
    an intermediate machine (which will use SUPDUP by default).

Technically, it is irrelevent.  It is not the duty of the LispM to
emulate an AAA (or whatever) over a SUPDUP connection, it is the
responsibility of the TELNET program on your gateway machine to do the
emulation (from AAA (or whatever) to local VTS which eventually winds up
as SUPDUP).
18-Jan-85 15:25:15-EST,1017;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 18 Jan 85 14:30-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 161881; Fri 18-Jan-85 14:23:45-EST
Date: Friday, 18 January 1985, 14:23-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: sys:%beep
To: Edward H Lay <EHL at MIT-OZ>, BUG-LISPM at MIT-OZ
In-Reply-To: <850118002051.1.EHL@TAHOE.MIT>
Message-ID: <850118142343.3.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Friday, 18 January 1985, 00:20-EST
    From: Edward H Lay <EHL at MIT-OZ>

    In Symbolics 3640 Release 6.0 Beta IIc, microcode TMC5-IO4-ST506-MIC 315,
    on TAHOE:
    Warm booted from: Lisp Listener 1, Lisp Listener 1.

    Everytime this is called, I am thrown into the fep.

What does Show Status say?  What does the FEP debugger (do Show Status
first) say?  I just tried it on a 3640 here running the same microcode
and it works correctly.  It might be a good idea to (setq beep :flash)
until this is resolved.
18-Jan-85 15:30:48-EST,1459;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 18 Jan 85 14:32-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 161888; Fri 18-Jan-85 14:28:47-EST
Date: Friday, 18 January 1985, 14:28-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: CONTROL-Z
To: jcma at MIT-MC, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 18 Jan 85 05:25-EST from jcma at MIT-MC
Message-ID: <850118142841.4.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Friday, 18 January 1985, 05:25-EST
    From: jcma@MIT-MC

    In Symbolics 3600 System 242.356, Hardcopy 20.10,
    Experimental RELATUS 131.189, FEP 22, on Lisp Machine Jim Morrison:

    * Understanding of Control-Z by the window system is inconsistent.  Older
    windows (e.g., ZMACS), bury themselves and new ones don't know what to do.  

c-Z is a Zmacs command and has nothing to do with the type of window.  I
turn c-Z off in my Zmacs because I dislike that behavior.

    * I like it and think all major window should know about it.

I disagree (if "it" means Control-Z), because of your possible confusion
on the above point.

    * Maybe there should an analog to META-CONTROL-L in ZMACS for the system key.

What's wrong with Function S or Function O, depending on what you mean?

    * An equivalent to CONTROL-Z could also be a plus for the system key.

What's wrong with Function B, if I understand your question correctly?
18-Jan-85 16:04:43-EST,2161;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 18 Jan 85 14:52-EST
Date: Thu, 17 Jan 1985  16:41 EST
Message-ID: <LBAGNALL.12080356670.BABYL@BBNG.ARPA>
From: LBAGNALL@BBNG.ARPA
To:   "David C. Plummer in disguise" <DCP@SCRC-QUABBIN.ARPA>
Cc:   BUG-LISPM@MIT-OZ, Tom@MIT-OZ
Subject: "Directory access privileges required", but I can't enter them.
In-reply-to: Msg of 17 Jan 1985 16:21-EST from David C. Plummer in disguise <DCP at SCRC-QUABBIN>

    Date: Thursday, 17 January 1985, 16:21-EST
    From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
    To:   Tom at MIT-OZ, BUG-LISPM at MIT-OZ
    Re:   "Directory access privileges required", but I can't enter them.

        Date: Thursday, 17 January 1985, 12:07-EST
        From: Tom at MIT-OZ

        In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 18, on TELLURIDE:

        When I tried to save out this buffer into a file on my directory, <TOM>, I
        got a msg of the variety "Enter username or type <RETURN> for anonymous" . I
        typed <RETURN>, and got this error for my directory. So I aborted out of the
        error, and tried again, expecting the "Enter username etc." again. Instead I
        instantly got this error again. So I tried to save out into someone else's
        directory, but again got this error.

        Great loss. One mistake, and I'm doomed forever.

    No, there are various things you can do.  The most extreme is cold
    booting!!  More realistic things are
    	(send (dbg:arg 0) :reset)
    to reset the host unit.  Or
    	(fs:file-login nil)
    to logout all current file connections so it will login next time.  Or
    	(neti:reset) (neti:enable)
    to punch the network in the nose.  You can also go into peek and clobber
    the control connection from F(ile system) mode.

        >>Error: Directory access privileges required
    	     For OZ:PS:<CUSTER>ILLUS.DARTH
        While in the function (:METHOD FS:HOST-UNIT :COMMAND)  FS:OPEN-CHAOS  (:METHOD FS:QFILE-ACCESS-PATH :OPEN)

Maybe one or more of these fixes should be a resume option?  It
happens often enough to deserve one, I think.
18-Jan-85 16:31:23-EST,1584;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 18 Jan 85 15:28-EST
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 161944; Fri 18-Jan-85 15:26:19-EST
Date: Friday, 18 January 1985, 15:26-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: CONTROL-Z
To: jcma at MIT-MC, User-Interface at SCRC-TENEX
cc: BUG-LISPM at MIT-OZ
In-Reply-To: The message of 18 Jan 85 05:25-EST from jcma at MIT-MC
Message-ID: <850118152611.9.MOON@EUPHRATES.SCRC.Symbolics.COM>

    Date: Friday, 18 January 1985, 05:25-EST
    From: jcma@MIT-MC

    In Symbolics 3600 System 242.356, Hardcopy 20.10,
    Experimental RELATUS 131.189, FEP 22, on Lisp Machine Jim Morrison:

    * Understanding of Control-Z by the window system is inconsistent.  Older
    windows (e.g., ZMACS), bury themselves and new ones don't know what to do.  

    * I like it and think all major window should know about it.

    * Maybe there should an analog to META-CONTROL-L in ZMACS for the system key.

As someone else pointed out, Function S does this now.

    * An equivalent to CONTROL-Z could also be a plus for the system key.

Function 1 S does this now.

Thanks for the suggestions.  I think your meta-suggestion, that the user
interface for switching between windows needs to be made more consistent
across the entire system and easier to understand and remember, is an
excellent one.  I think these suggestions will go into the planning for
the next major release.  I wouldn't count on the specific character c-Z
being used for this, though.
18-Jan-85 16:48:18-EST,922;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 18 Jan 85 15:42-EST
Date: Friday, 18 January 1985, 15:37-EST
From: Webster Dove <dove at MIT-BUGS-BUNNY>
Subject: lisp halted by disk DCR?
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10, Experimental FPA 2.0,
Experimental UTIL 9.0, on Lisp Machine Tweety Pie:

I was happily reading a file from PIG: when lisp stopped.
Error status: Microcode Halted
OPC+0/ 43462
Fep version 17

>I loaded v17-debug.flod

stack trace:
(sys:page-fault 22462152 2)
(si:page-fault-handler 22462152 2)
(si:wait-for-page-idle 45144 11730)
(si:wired-wait t 72460 <#dtp-compiled-function si:page-idle-p 22533>
  45144 11730)
(si:page-idle-p 45144 11730)

>I warm booted and typed (dbg:decode-micro-pc #o43462)
"3462 halts because: supposed DCR value in disk DCW does not contain
plausible tags (old bug-trap)"
......
How do I get this fixed???
18-Jan-85 16:49:11-EST,979;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 18 Jan 85 15:42-EST
Received: from SCRC-PEACE by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 161605; Fri 18-Jan-85 11:17:26-EST
Date: Fri, 18 Jan 85 11:17 EST
From: Charles Hornig <Hornig@SCRC-STONY-BROOK.ARPA>
Subject: :CALLABLE-ACCESSORS to DEFSTRUCT
To: David Vinayak Wallace <GUMBY@MIT-MC.ARPA>, BUG-LISPM@MIT-MC.ARPA
In-Reply-To: The message of 17 Jan 85 22:56-EST from David Vinayak Wallace <GUMBY at MIT-MC>
Message-ID: <850118111734.2.HORNIG@PEACE.SCRC.Symbolics.COM>

    Date: 17 January 1985 22:56-EST
    From: David Vinayak Wallace <GUMBY @ MIT-MC>

    Using callable-accessors does indeed make accessors that are SUBST's, but
    not a creator.  Is there any way to get the functionality of (apply
    #'make-foo '(vars-and-inits)), the way you can apply MAKE-INSTANCE to make
    a flavor?

In release 6.0, CL:DEFSTRUCT, along with other Common Lisp changes,
makes constructors that are SUBST's.
18-Jan-85 17:10:16-EST,507;000000000000
Received: from MIT-LENNON by MIT-OZ via Chaosnet; 18 Jan 85 15:56-EST
Date: Friday, 18 January 1985, 15:47-EST
From: CJL at MIT-OZ
Sender: GLR at MIT-OZ
Reply-to: CJL at MIT-OZ
Subject: What if I don't like mice. Can't I use my keyboard?
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 24, on Lisp Machine John Lennon:

In the network mode of the peek program you have to use a mouse in
order to see the active connections. Couldn't pressing "C" show connections?
18-Jan-85 19:13:05-EST,1040;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 18 Jan 85 19:13-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 162132; Fri 18-Jan-85 19:07:40-EST
Date: Friday, 18 January 1985, 19:07-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: What if I don't like mice. Can't I use my keyboard?
To: CJL at MIT-OZ, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 18 Jan 85 15:47-EST from CJL at MIT-OZ
Message-ID: <850118190736.6.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Friday, 18 January 1985, 15:47-EST
    From: CJL at MIT-OZ

    In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 24, on Lisp Machine John Lennon:

    In the network mode of the peek program you have to use a mouse in
    order to see the active connections. Couldn't pressing "C" show connections?
Not in today's user interface.  That would break if we put in a top
level command that used C as it's "go to this mode" character.
Furthermore, C for "Chaos Connections" isn't very generic.
19-Jan-85 07:37:49-EST,2690;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 19 Jan 85 07:37-EST
Received: from SCRC-CROW by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 162389; Sat 19-Jan-85 07:36:27-EST
Date: Saturday, 19 January 1985, 07:36-EST
From: Robert W. Kerns <RWK at SCRC-YUKON>
To: Chris Hanson <CPH at MIT-OZ>
cc: BUG-LISPM at MIT-OZ
In-Reply-To: The message of 14 Jan 85 14:15-EST from Chris Hanson <CPH at MIT-OZ>
Message-ID: <850119073610.0.RWK@CROW.SCRC.Symbolics.COM>

    Date: Monday, 14 January 1985, 14:15-EST
    From: Chris Hanson <CPH at MIT-OZ>

    In Release 5.1, on Lisp Machine Four (LM-2):

Someone jumped the gun, and made PREP be a UNIX42 host before
everyone was running Rel 5.2, the first release that supports
that.  You can do (tv:edit-namespace-object :host "PREP" :locally t)
to edit the information in your machine to think PREP is running
4.1 (System Type of UNIX rather than UNIX42).  You'll have to live
with unix 4.1 filenames, though.

    >>Error: The host PREP (of system type UNIX42) cannot be a file computer.
    While in the function FS:ADD-FILE-COMPUTER  FS:GET-PATHNAME-HOST  FS:PARSE-PATHNAME-FIND-COLON

    FS:ADD-FILE-COMPUTER:  (P.C. = 64)
       Arg 0 (HOST): #<HOST PREP 31304722>

    FS:GET-PATHNAME-HOST:  (P.C. = 70)
       Arg 0 (HOST-NAME): "prep"
       --Defaulted args:--
       Arg 1 (NO-ERROR-P): NIL
       Arg 2 (NO-AUTO-ADD-P): NIL

    FS:PARSE-PATHNAME-FIND-COLON:  (P.C. = 70)
       Arg 0 (STRING): "prep://u3//scheme"

    FS:PARSE-PATHNAME:  (P.C. = 332)
       Arg 0 (THING): "prep://u3//scheme"
       Arg 1 (WITH-RESPECT-TO): NIL
       Arg 2 (DEFAULTS): #<TOPS20-PATHNAME "OZ:PS:<CPH>*.*.*">

    FS:MERGE-PATHNAMES:  (P.C. = 110)
       Arg 0 (PATHNAME): "prep://u3//scheme"
       Arg 1 (DEFAULTS): #<TOPS20-PATHNAME "OZ:PS:<CPH>*.*.*">
       Arg 2 (DEFAULT-VERSION): :WILD

    ZWEI:READ-DIRECTORY-NAME:  (P.C. = 267)
       Arg 0 (PROMPT): "Edit directory"
       Arg 1 (DEFAULT): #<TOPS20-PATHNAME "OZ:PS:<CPH>*.*.*">
       --Defaulted args:--
       Arg 2 (WILDP): T

    ZWEI:COM-DIRED:  (P.C. = 30)

    ZWEI:COM-R-DIRED:  (P.C. = 66)

    Rest of stack:
    ZWEI:RE-EXECUTE-MINI-BUFFER-COMMAND:  (P.C. = 145)
    ZWEI:COM-REPEAT-LAST-MINI-BUFFER-COMMAND:  (P.C. = 70)
    ZWEI:COMMAND-EXECUTE:  (P.C. = 77)
    ZWEI:MAKE-EXTENDED-COMMAND-INTERNAL:  (P.C. = 214)
    ZWEI:COMMAND-EXECUTE:  (P.C. = 77)
    ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 65)
    (:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 424)
    (:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 102)
    ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 52)
    SI:PROCESS-TOP-LEVEL:  (P.C. = 123)
19-Jan-85 16:36:38-EST,4095;000000000000
Received: from MIT-HTVAX by MIT-OZ via Chaosnet; 19 Jan 85 16:36-EST
Received: from MIT-CHERRY by MIT-HTVAX (4.12/4.7) with CHAOS 
	id AA28380; Sat, 19 Jan 85 16:29:56 est
Date: Saturday, 19 January 1985, 16:28-EST
From: Dinarte R. Morais <DRM@MIT-XX>
Subject: Bug in sys:dump-forms-to-file
To: BUG-LISPM@MIT-OZ
Cc: drm@MIT-XX

In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 22,
Tanglewood Version VII, on Project Tanglewood Cherry:

There is a bug in sys:dump-forms-to-file.  The following bit of code
generated the error which follows:

(defvar *this-wont-dump*)

;;; This just makes a list with 70000. elements counting down from
;;; 131091. which, at the critical point, looks like:
;;;       ( ... 65552. 65551. 65550. 65550. 65548. ... )
(defun make-troubled-list ()
  (setq *this-wont-dump*
	(loop repeat 70000.
	      for element downfrom 131091.
	      collect (if (= element 65549.) 65550. element))))

(make-troubled-list)

(sys:dump-forms-to-file "oak:>drm>foo.temp" `((setq *foo* ',*this-wont-dump*)))

The troubled-list was carefully constructed such that when the first
65550. is written to the file it is inserted into the hash table with a
*bin-dump-index* of 65550.  When the second 65550. is to be dumped, it
is first looked up in the *bin-dump-table* and the index of 65550. is
found.  Because of this, the function si:dump-form writes out the
BIN-OP-TABLE-FETCH opcode and then calls si:dump-form to dump out the
index into the table.  But since the index is 65550. is recurses
forever trying to dump 65550.

-- Dinarte R. Morais

>>Error: The control stack overflowed.
While in the function SI:ARRAY-DATA-OFFSET  (:METHOD SI:EQ-HASH-TABLE :BLOCK-POINTER)  (:METHOD SI:EQ-HASH-TABLE :GET-HASH)

SI:ARRAY-DATA-OFFSET:
   Arg 0 (ARRAY): #<ART-Q-152464. 10240000>

(:METHOD SI:EQ-HASH-TABLE :BLOCK-POINTER):  (P.C. = 4)
   Arg 0 (SELF): #<EQ-HASH-TABLE 410523>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:EQ-HASH-TABLE -- 7. IV's, 0. FL's 43741772>
   Arg 2 (OPERATION): :BLOCK-POINTER
   Arg 3 (KEY): 65550.

(:METHOD SI:EQ-HASH-TABLE :GET-HASH):  (P.C. = 47)
   Arg 0 (SELF): #<EQ-HASH-TABLE 410523>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:EQ-HASH-TABLE -- 7. IV's, 0. FL's 43741772>
   Arg 2 (OPERATION): :GET-HASH
   Arg 3 (KEY): 65550.

SI:DUMP-FORM:  (P.C. = 32)
   Arg 0 (FORM): 65550.
   Arg 1 (STREAM): #<FILE-OUTPUT-BINARY-STREAM "OAK:>drm>foo.temp" 437533>

SI:DUMP-FORM:  (P.C. = 76)
   Arg 0 (FORM): 65550.
   Arg 1 (STREAM): #<FILE-OUTPUT-BINARY-STREAM "OAK:>drm>foo.temp" 437533>

SI:DUMP-FORM:  (P.C. = 76)
   Arg 0 (FORM): 65550.
   Arg 1 (STREAM): #<FILE-OUTPUT-BINARY-STREAM "OAK:>drm>foo.temp" 437533>

SI:DUMP-FORM:  (P.C. = 76)
   Arg 0 (FORM): 65550.
   Arg 1 (STREAM): #<FILE-OUTPUT-BINARY-STREAM "OAK:>drm>foo.temp" 437533>

SI:DUMP-FORM:  (P.C. = 76)
   Arg 0 (FORM): 65550.
   Arg 1 (STREAM): #<FILE-OUTPUT-BINARY-STREAM "OAK:>drm>foo.temp" 437533>

Rest of stack:
SI:DUMP-FORM:  (P.C. = 76)
SI:DUMP-FORM:  (P.C. = 76)

... I deleted about 300. SI:DUMP-FORM:  (P.C. = 76) ...

SI:DUMP-FORM:  (P.C. = 76)
SI:DUMP-FORM:  (P.C. = 76)
SI:DUMP-LIST:  (P.C. = 116)
SI:DUMP-FORM:  (P.C. = 146)
SI:DUMP-FORM-TO-EVAL:  (P.C. = 41)
SI:DUMP-FORM-TO-EVAL:  (P.C. = 243)
SYS:DUMP-FORMS-TO-FILE:  (P.C. = 65)
Si:*EVAL:  (P.C. = 370)
(:INTERNAL COMPILER:COMPILE-TO-CORE 2.):  (P.C. = 3)
COMPILER:COMPILE-TO-CORE:  (P.C. = 32)
COMPILER:COMPILE-FORM-FUNCTION:  (P.C. = 41)
COMPILER:COMPILE-FROM-STREAM-1:  (P.C. = 324)
COMPILER:PROCESS-FORMS-FROM-STREAM:  (P.C. = 117)
COMPILER:COMPILE-FROM-STREAM:  (P.C. = 235)
ZWEI:COMPILE-INTERVAL:  (P.C. = 141)
ZWEI:COMPILE-PRINT-INTERVAL:  (P.C. = 76)
ZWEI:COMPILE-DEFINITION-INTERNAL:  (P.C. = 73)
ZWEI:COM-COMPILE-REGION:  (P.C. = 5)
ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 214)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 41)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
19-Jan-85 22:44:15-EST,2902;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 19 Jan 85 22:44-EST
Date: 19 January 1985 22:40-EST
From: Leigh L. Klotz <KLOTZ @ MIT-MC>
To: BUG-LISPM @ MIT-MC

Date: Wednesday, 16 January 1985, 11:26-EST
From: Dennis L. Doughty <doughty at WAIKATO>
To:   godot!art%AQUINAS at MIT-EDDIE
cc:   godot!CAL%AQUINAS at MIT-EDDIE, BUG-LISPM%GODOT at MIT-EDDIE
Re:   Untabify with fonts

    Date: Monday, 14 January 1985, 22:31-EST
    From: godot!art@AQUINAS

    In Symbolics 3600 Release 5.2, FEP 18, on St. Valentine:

    this error was encountered while untabifing a file with multiple fonts.

    -art

Could you mail me a minimum case that exhibits this behavior?  I just
tried this in Release 6 and it seems to have been fixed, but I'd like to
make sure.  --Dennis

    >>Error: The negative array length -1 is illegal.
    While in the function MAKE-ARRAY  ZWEI:INSERT-CHARS  ZWEI:TAB-CONVERT

    MAKE-ARRAY:  (P.C. = 300)
       Arg 0 (DIMENSIONS): -1
       Rest arg (OPTIONS): (:TYPE ART-STRING)
       Local 2 (AREA): NIL
       Local 3 (TYPE): ART-STRING
       Local 4 (LEADER-LIST): NIL
       Local 5 (LEADER-LENGTH): NIL
       Local 6 (DISPLACED-TO): NIL
       Local 7 (DISPLACED-INDEX-OFFSET): NIL
       Local 8 (NAMED-STRUCTURE-SYMBOL): NIL
       Local 9 (DISPLACED-CONFORMALLY): NIL
       Local 10 (DISPATCH): NIL
       Local 11 (N-HEADER-WORDS): NIL
       Local 12 (N-ELEMS): NIL
       Local 13 (ARRAY): NIL
       Local 14 (INDEX-P): NIL
       Local 15 (Q-P): NIL
       Local 16 (N-WORDS): NIL
       Local 17 (N-DIMS): NIL
       Local 18 (TOTAL-SIZE): NIL
       Local 19 (INITIAL-VALUE): NIL
       Local 20 (FILL-POINTER): NIL

    ZWEI:INSERT-CHARS:  (P.C. = 14)
       Arg 0 (BP): ("                                -x      	a" 47)
       Arg 1 (CHAR): 40
       Arg 2 (N): -1

    ZWEI:TAB-CONVERT:  (P.C. = 31)
       Arg 0 (BP-BEFORE): ("                                -x      	a" 47)
       Arg 1 (BP-AFTER): ("                                -x      	a" 50)

    ZWEI:COM-UNTABIFY:  (P.C. = 21)

    ZWEI:COM-EXTENDED-COMMAND:  (P.C. = 27)

    ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
       Arg 0 (COMMAND): ZWEI:COM-EXTENDED-COMMAND
       Arg 1 (CHAR): 1130
       Arg 2 (PREFIX-CHAR): NIL
       Arg 3 (HOOK-LIST): NIL

    ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
       Arg 0 (CH): 1130

    (:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 214)
       Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 55046335>
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:EDITOR -- 12. IV's, 0. FL's 55030465>
       Arg 2 (OPERATION): :EDIT
       --Defaulted args:--
       Arg 3 (TOP-LEVEL-P): T
       Arg 4 (DESCRIPTION): NIL

    Rest of stack:
    (:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 41)
    ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)
    SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
19-Jan-85 23:54:49-EST,325;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 19 Jan 85 23:54-EST
Date: Saturday, 19 January 1985, 23:53-EST
From: David Vinayak Wallace <Gumby at MIT-MC>
Subject: How do I generate back-next on a 3600?
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 18, on Lisp Machine Jimi Hendrix:

20-Jan-85 06:38:35-EST,599;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 20 Jan 85 06:38-EST
Date: Sunday, 20 January 1985, 06:37-EST
From: David Vinayak Wallace <Gumby at MIT-MC>
Subject: TIME functions
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 18, on Lisp Machine Jimi Hendrix:

(TIME:PARSE "CHRISTMAS") works, bt gives me christmas 85 (ok, what
should I expect, I know).  But I can't specify e.g. "Christmas, 1984" or
any of its obvious permutations; TIME:PARSE blows up with "Hour
specified twice."  Also, I can't use "LAST CHRISTMAS" (or last anything,
for that matter).
20-Jan-85 10:30:58-EST,401;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 20 Jan 85 10:30-EST
Date: 20 January 1985 10:27-EST
From: Christopher C. Stacy <CSTACY @ MIT-MC>
Subject:  How do I generate back-next on a 3600?
To: GUMBY @ MIT-MC
cc: BUG-LISPM @ MIT-OZ
In-reply-to: Msg of 19 Jan 1985 23:53-EST from David Vinayak Wallace <Gumby>

SCROLL (the semantics "BACK-NEXT" on ITS never did get around to implementing).
20-Jan-85 16:09:28-EST,2624;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 20 Jan 85 16:08-EST
Date: Sunday, 20 January 1985, 16:06-EST
From:  <TIM at MIT-MC>
Subject: Non-coherent error messages in flavor system, or something.
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 24, on Lisp Machine Keith Moon:

I don't know what the semantics of this is supposed to be but it is advertised to work:

  (defflavor x () (y))
  (defflavor y () (x))

>>Trap: The first argument given to the AR-1 instruction, NIL, was not an array.
While in the function PERFORM-FLAVOR-REDEFINITION  PERFORM-FLAVOR-REDEFINITION  DEFFLAVOR1

PERFORM-FLAVOR-REDEFINITION:  (P.C. = 6)
   Arg 0 (FLAVOR-NAME): Y
   Arg 1 (NEW-PLIST): T
   Arg 2 (BECAUSE-OF-FLAVOR): X
   Local 3 (FL): NIL
   Local 4 (NFL): NIL
   Local 5 (PLIST): NIL

PERFORM-FLAVOR-REDEFINITION:  (P.C. = 145)
   Arg 0 (FLAVOR-NAME): X
   Arg 1 (NEW-PLIST): NIL
   Arg 2 (BECAUSE-OF-FLAVOR): X

DEFFLAVOR1:  (P.C. = 1076)
   Arg 0 (FLAVOR-NAME): X
   Arg 1 (INSTANCE-VARIABLES): NIL
   Arg 2 (COMPONENT-FLAVORS): (Y)
   Arg 3 (OPTIONS): NIL

*EVAL:  (P.C. = 370)
   Arg 0 (FORM): (DEFFLAVOR1 (QUOTE X) (QUOTE NIL) (QUOTE (Y)) (QUOTE NIL))

(:INTERNAL COMPILER:COMPILE-PROCESS-DEFAULT 0):  (P.C. = 3)
   Arg 0 (**DEFSELECT-OP**): :EVAL-FORM
   Arg 1 (FORM): (DEFFLAVOR1 (QUOTE X) (QUOTE NIL) (QUOTE (Y)) (QUOTE NIL))

COMPILER:COMPILE-PROCESS-DEFAULT:  (P.C. = 12)
   Arg 0 (OPERATION): :EVAL-FORM
   Rest arg (SELECT-METHOD-ARGS): ((DEFFLAVOR1 (QUOTE X) (QUOTE NIL) (QUOTE (Y)) (QUOTE NIL)))

COMPILER:COMPILE-TO-CORE:  (P.C. = 67)
   Arg 0 (OPERATION): :EVAL-FORM
   Rest arg (SELECT-METHOD-ARGS): ((DEFFLAVOR1 (QUOTE X) (QUOTE NIL) (QUOTE (Y)) (QUOTE NIL)))

COMPILER:COMPILE-FORM-FUNCTION:  (P.C. = 22)
   Arg 0 (FORM): (DEFFLAVOR1 (QUOTE X) (QUOTE NIL) (QUOTE (Y)) (QUOTE NIL))
   Arg 1 (COMPILE-TIME-P): :FORCE
   Arg 2 (LOAD-TIME-P): T

Rest of stack:
COMPILER:COMPILE-FROM-STREAM-1:  (P.C. = 324)
COMPILER:COMPILE-FROM-STREAM-1:  (P.C. = 105)
COMPILER:COMPILE-FROM-STREAM-1:  (P.C. = 172)
COMPILER:PROCESS-FORMS-FROM-STREAM:  (P.C. = 117)
COMPILER:COMPILE-FROM-STREAM:  (P.C. = 235)
ZWEI:COMPILE-INTERVAL:  (P.C. = 141)
ZWEI:COMPILE-PRINT-INTERVAL:  (P.C. = 76)
ZWEI:COMPILE-DEFINITION-INTERNAL:  (P.C. = 73)
ZWEI:COM-COMPILE-REGION:  (P.C. = 5)
ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 214)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 41)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)
PROCESS-TOP-LEVEL:  (P.C. = 53)
20-Jan-85 16:40:11-EST,1607;000000000000
Received: from SCRC-TENEX by MIT-OZ via Chaosnet; 20 Jan 85 16:39-EST
Date: Sunday, 20 January 1985  16:35-EST
From: MOON at SCRC-TENEX
To:   <TIM at MIT-MC>
Cc:   BUG-LISPM at MIT-OZ
Subject: Non-coherent error messages in flavor system, or something.
In-reply-to: The message of 20 Jan 1985 16:06-EST from <TIM at MIT-MC>

    Date: Sunday, 20 January 1985, 16:06-EST
    From:  <TIM at MIT-MC>

    In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 24, on Lisp Machine Keith Moon:

    I don't know what the semantics of this is supposed to be but it is advertised to work:

      (defflavor x () (y))
      (defflavor y () (x))

    >>Trap: The first argument given to the AR-1 instruction, NIL, was not an array.
    While in the function PERFORM-FLAVOR-REDEFINITION  PERFORM-FLAVOR-REDEFINITION  DEFFLAVOR1

    PERFORM-FLAVOR-REDEFINITION:  (P.C. = 6)
       Arg 0 (FLAVOR-NAME): Y
       Arg 1 (NEW-PLIST): T
       Arg 2 (BECAUSE-OF-FLAVOR): X
       Local 3 (FL): NIL
       Local 4 (NFL): NIL
       Local 5 (PLIST): NIL

This was never actually intended to work.  The place in the Chine Nual
that says that circular flavor dependencies are allowed was a mistake.
Did you find that statement in the Symbolics documentation or the Chine
Nual?  I thought it had been removed from the Symbolics documentation,
but perhaps I am misremembering.

Of course you should get a decent error message instead of it blowing out
AREF'ing NIL.  There is a fair amount of this kind of sleaziness in the
flavor system--perhaps in a future release it can be cleaned up.
21-Jan-85 12:24:41-EST,1219;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 21 Jan 85 12:24-EST
Received: from SCRC-SUDBURY by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 163030; Mon 21-Jan-85 12:24:00-EST
Date: Monday, 21 January 1985, 12:22-EST
From: Richard L. Bryan <RLB at SCRC-TENEX>
Subject: sys:%beep
To: DCP at SCRC-QUABBIN, EHL at MIT-OZ, BUG-LISPM at MIT-OZ
In-Reply-To: <850118142343.3.NFEP@NEPONSET.SCRC.Symbolics.COM>
Message-ID: <850121122243.2.RLB@SUDBURY.SCRC.Symbolics.COM>

    Date: Friday, 18 January 1985, 14:23-EST
    From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>

	Date: Friday, 18 January 1985, 00:20-EST
	From: Edward H Lay <EHL at MIT-OZ>

	In Symbolics 3640 Release 6.0 Beta IIc, microcode TMC5-IO4-ST506-MIC 315,
	on TAHOE:
	Warm booted from: Lisp Listener 1, Lisp Listener 1.

	Everytime this is called, I am thrown into the fep.

    What does Show Status say?  What does the FEP debugger (do Show Status
    first) say?  I just tried it on a 3640 here running the same microcode
    and it works correctly.  It might be a good idea to (setq beep :flash)
    until this is resolved.
I recently heard, in a rumor-ish context, that beep
needs real memory in slot zero.
21-Jan-85 13:21:04-EST,3388;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 21 Jan 85 13:20-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 163072; Mon 21-Jan-85 13:19:53-EST
Date: Monday, 21 January 1985, 13:18-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: ????
To: David C. Plummer in disguise <DCP at SCRC-QUABBIN>,
    Scott Cyphers <SR.EHPYC at MIT-SPEECH>,
    Bernard S. Greenberg <BSG at SCRC-TENEX>
cc: BUG-LISPM at MIT-OZ, WARD at MIT-OZ
In-Reply-To: <850118124258.6.NFEP@NEPONSET.SCRC.Symbolics.COM>
Message-ID: <850121131856.8.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Friday, 18 January 1985, 12:42-EST
    From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>

	Date: 17 Jan 1985  17:36 EST (Thu)
	From: Scott Cyphers <SR.EHPYC@MIT-SPEECH>

	Look at the end of the message.  I think the "error" he is talking
	about is

	(greater-p 60000. 70000) -> T

	due to base being 8 instead of 10, and the . forcing read of 60000. in
	base 10.

    Relax everybody.  In Release 6 we have changed the base to #10r10 so
    people can once again use their thumbs to count with.

[Everybody can safely ignore this message!]

In retrospect, I have come to the conclusion that this was a test, and
that we failed.  Here is another possible, long winded, answer:

When I was first introduced to Lisp (MACLISP to be precise) as an MIT
freshman in 1978, I found it a bit odd at first that 9 printed out as
11.  Then I was told it was using base 8.  Knowing that (most) computers
use binary to represent data (there are still some BCD holdouts), this
made sense.  Besides, Lisp wasn't (at least wasn't then) a "traditional"
language.  I prefered base 8 to base 2 because it was more compact, and
prefered base 8 to base 16 because I could never add or subtract when
A-F came up.  Octal was also the default base for assemblers, and still
is for the assemblers I know.  It lets you "feel the bits between your
toes."  [I attribute this phrase to Bawden.]

[Aside: In TECO, "60000" is decimal and "60000." is octal!!]

MACLISP, the MIDAS assembler (PDP-10) and the PALX assembler (PDP-11)
were all developed at MIT.  When the Lisp Machine project formed, many
of the people that worked on these base 8 languages also worked on the
Lisp Machine project.  These people, being system programers and
implementing another operating system (the Lisp Machine operating
system) might not have even considered which base to use to be an issue.

Then it went commercial and Lisp as a language was gaining popularity
outside of universities and by peoples other than system programmers.
In other words, it was moving into the "real world."  "Real world"
people invariably think in base 10 because that's the way people are
taught in grade school.  At about the same time, a group of people got
together to standardize the Lisp language, the result being the Common
Lisp language.  They recoginized this real worldness and declared that
Common Lisp shall be base 10 by default.

I am under the impression that the MIT system, the LMI system and the TI
system have already switched to base 10 by default.  Symbolics is
switching to base 10 by default in Release 6.0.  I believe all modern
Lisps have variables that you can set and/or bind to affect the reading
and printing behavior of integers.
21-Jan-85 14:17:22-EST,1668;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 21 Jan 85 14:10-EST
Received: from SCRC-CONCORD by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 124648; Mon 21-Jan-85 14:06:47-EST
Date: Monday, 21 January 1985, 14:10-EST
From: Bernard S. Greenberg <BSG at SCRC-TENEX>
Subject: ????
To: DCP at SCRC-QUABBIN, SR.EHPYC at MIT-SPEECH
cc: BUG-LISPM at MIT-OZ, WARD at MIT-OZ
In-Reply-To: <850121131856.8.NFEP@NEPONSET.SCRC.Symbolics.COM>
Message-ID: <850121141014.2.BSG@CONCORD.SCRC.Symbolics.COM>

[Everybody can safely ignore this message!]
    Date: Monday, 21 January 1985, 13:18-EST
    From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>


    [Everybody can safely ignore this message!]

    In retrospect, I have come to the conclusion that this was a test, and
    that we failed.  Here is another possible, long winded, answer:

    When I was first introduced to Lisp (MACLISP to be precise) as an MIT
    freshman in 1978, I found it a bit odd at first that 9 printed out as
    11.  Then I was told it was using base 8.  Knowing that (most) computers
    use binary to represent data (there are still some BCD holdouts), this
    made sense.  Besides, Lisp wasn't (at least wasn't then) a "traditional"
    language.  I prefered base 8 to base 2 because it was more compact, and
    prefered base 8 to base 16 because I could never add or subtract when
    A-F came up.  Octal was also the default base for assemblers, and still
    is for the assemblers I know.  
I guess you only know DEC assemblers.  For all the IBM assemblers I know,
the default base is decimal and you have to say something special for
octal or hex.
21-Jan-85 14:19:54-EST,1772;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 21 Jan 85 14:17-EST
Received: from SCRC-CONCORD by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 124650; Mon 21-Jan-85 14:07:18-EST
Date: Monday, 21 January 1985, 14:10-EST
From: Bernard S. Greenberg <BSG at SCRC-TENEX>
Subject: ????
To: DCP at SCRC-QUABBIN, SR.EHPYC at MIT-SPEECH
cc: BUG-LISPM at MIT-OZ, WARD at MIT-OZ
In-Reply-To: <850121131856.8.NFEP@NEPONSET.SCRC.Symbolics.COM>
Supersedes: <850121141014.2.BSG@CONCORD.SCRC.Symbolics.COM>
Message-ID: <850121141047.3.BSG@CONCORD.SCRC.Symbolics.COM>

[Everybody can safely ignore this message!]
    Date: Monday, 21 January 1985, 13:18-EST
    From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>


    [Everybody can safely ignore this message!]

    In retrospect, I have come to the conclusion that this was a test, and
    that we failed.  Here is another possible, long winded, answer:

    When I was first introduced to Lisp (MACLISP to be precise) as an MIT
    freshman in 1978, I found it a bit odd at first that 9 printed out as
    11.  Then I was told it was using base 8.  Knowing that (most) computers
    use binary to represent data (there are still some BCD holdouts), this
    made sense.  Besides, Lisp wasn't (at least wasn't then) a "traditional"
    language.  I prefered base 8 to base 2 because it was more compact, and
    prefered base 8 to base 16 because I could never add or subtract when
    A-F came up.  Octal was also the default base for assemblers, and still
    is for the assemblers I know.  
I guess you only know DEC assemblers.  For all the IBM assemblers I know,
the default base is decimal and you have to say something special for
octal or hex.  Ditto GE assemblers, Multics assembler...
21-Jan-85 14:54:34-EST,1495;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 21 Jan 85 14:54-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 163189; Mon 21-Jan-85 14:46:54-EST
Date: Monday, 21 January 1985, 14:45-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: sys:%beep
To: Richard L. Bryan <RLB at SCRC-TENEX>, DCP at SCRC-QUABBIN,
    EHL at MIT-OZ, BUG-LISPM at MIT-OZ
In-Reply-To: <850121122243.2.RLB@SUDBURY.SCRC.Symbolics.COM>
Message-ID: <850121144551.1.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Monday, 21 January 1985, 12:22-EST
    From: Richard L. Bryan <RLB at SCRC-TENEX>

	Date: Friday, 18 January 1985, 14:23-EST
	From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>

	    Date: Friday, 18 January 1985, 00:20-EST
	    From: Edward H Lay <EHL at MIT-OZ>

	    In Symbolics 3640 Release 6.0 Beta IIc, microcode TMC5-IO4-ST506-MIC 315,
	    on TAHOE:
	    Warm booted from: Lisp Listener 1, Lisp Listener 1.

	    Everytime this is called, I am thrown into the fep.

	What does Show Status say?  What does the FEP debugger (do Show Status
	first) say?  I just tried it on a 3640 here running the same microcode
	and it works correctly.  It might be a good idea to (setq beep :flash)
	until this is resolved.
    I recently heard, in a rumor-ish context, that beep
    needs real memory in slot zero.
Rumor was true.  I made a patch Friday night after Moon and I
(mostly Moon) determined what was going on.
21-Jan-85 15:47:27-EST,2584;000000000000
Received: from MIT-ROBOT-3 by MIT-OZ via Chaosnet; 21 Jan 85 15:47-EST
Date: Monday, 21 January 1985, 15:45-EST
From:  <HLV at MIT-OZ>
Subject: more on character vs. binary files
To: Moon at SCRC-TENEX
Cc: bug-lispm at MIT-OZ
In-reply-to: <850104193059.5.MOON@EUPHRATES.SCRC.Symbolics.COM>

    Date: Friday, 4 January 1985, 19:30-EST
    From: David A. Moon <Moon at SCRC-TENEX>

	Date: Friday, 4 January 1985, 18:49-EST
	From:  <HLV at MIT-OZ>

	In Symbolics 3600 System 242.356, Hardcopy 20.10,
	Experimental Useful 1.0, Color 1.0, FEP 22, on Lisp Machine Buddy Holly:

	I would like to save images in a file by first saving an image header,
	consisting of an association-list (of varying size), and then the image
	array itself.  The header contains the size of the array, documentation,
	etc.  I also want to be able to read just the header from the file,
	without the data.  (I think this precludes the use of
	sys:dump-forms-to-file.)

    Put the header in the file's attribute list (third argument to
    SYS:DUMP-FORMS-TO-FILE) and you can read it back with
    FS:PATHNAME-ATTRIBUTE-LIST without reading the rest of the file.

Ok, thanks, this works in 5.2.  But...is it possible for me to write
both the a-list and the array data to the file myself (i.e. not dumping
the compiled forms)?  (Details from previous message follow, if needed.) 

    Currently, the a-list is stored/loaded, using a prin1/read operation.         
    The array is stored/loaded by addressing it as a string (each adjacent 8
    bits forms a character) and using a :string-out/:string-in operation.
    (I thought this would be more efficient than :tyi's/:tyo's.  Is there a
    better way?)  I discovered the file must be a binary file (:characters
    nil) for this to work (otherwise, sometimes more than one character
    output is read in as a single character into the array string.)

    The problem is that the characters are apparently stored using 16 bits,
    even though each character represents only 8 bits of array data.  If I
    use (:byte-size 8.) option, then the header can't be read (it reads
    to end-of-file).  I tried converting the a-list to a string and using
    :line-out/:line-in, but these operations are apparently not supported
    for a binary file.  (I can't use :string-in to read the a-list because
    one does not know its length a priori.)

    How can both the a-list and array data be conveniently kept in a single
    file?  I can't find an answer in the documentation.  Thanks.

    Harry Voorhees
21-Jan-85 16:31:44-EST,2146;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 21 Jan 85 16:13-EST
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 163289; Mon 21-Jan-85 16:12:09-EST
Date: Monday, 21 January 1985, 16:11-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: more on character vs. binary files
To: HLV at MIT-OZ
cc: bug-lispm at MIT-OZ, HOSS at SCRC-TENEX
In-Reply-To: The message of 21 Jan 85 15:45-EST from HLV at MIT-OZ
Message-ID: <850121161124.5.MOON@EUPHRATES.SCRC.Symbolics.COM>

    Date: Monday, 21 January 1985, 15:45-EST
    From:  <HLV at MIT-OZ>

	Date: Friday, 4 January 1985, 19:30-EST
	From: David A. Moon <Moon at SCRC-TENEX>

	    Date: Friday, 4 January 1985, 18:49-EST
	    From:  <HLV at MIT-OZ>

	    I would like to save images in a file by first saving an image header,
	    consisting of an association-list (of varying size), and then the image
	    array itself.  The header contains the size of the array, documentation,
	    etc.  I also want to be able to read just the header from the file,
	    without the data.  (I think this precludes the use of
	    sys:dump-forms-to-file.)

	Put the header in the file's attribute list (third argument to
	SYS:DUMP-FORMS-TO-FILE) and you can read it back with
	FS:PATHNAME-ATTRIBUTE-LIST without reading the rest of the file.

    Ok, thanks, this works in 5.2.  But...is it possible for me to write
    both the a-list and the array data to the file myself (i.e. not dumping
    the compiled forms)?

I'm not sure what you mean by "not dumping the compiled forms", but let me guess:
You want to output the array elements one at a time, as you compute them, rather
than making an array, filling in all the elements, and then passing it to
sys:dump-forms-to-file (inside of a SETQ).

There is no way to do that using documented interfaces.  By reading the source you
can probably find a way to do it, but I wouldn't recommend that since I think
it is likely to be a lot more trouble than it's worth.

If you're writing a lot of image files you can use the same array over and over,
which will save some time.
21-Jan-85 16:50:39-EST,846;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 21 Jan 85 16:25-EST
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 163306; Mon 21-Jan-85 16:25:03-EST
Date: Monday, 21 January 1985, 16:24-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: Toes
To: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
cc: Scott Cyphers <SR.EHPYC at MIT-SPEECH>,
    Bernard S. Greenberg <BSG at SCRC-TENEX>, BUG-LISPM at MIT-OZ,
    WARD at MIT-OZ
In-Reply-To: <850121131856.8.NFEP@NEPONSET.SCRC.Symbolics.COM>
Message-ID: <850121162423.0.MOON@EUPHRATES.SCRC.Symbolics.COM>

    Date: Monday, 21 January 1985, 13:18-EST
    From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
    ....It lets you "feel the bits between your
    toes."  [I attribute this phrase to Bawden.]

Drew McDermott I believe.
21-Jan-85 17:09:58-EST,1740;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 21 Jan 85 16:41-EST
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 163319; Mon 21-Jan-85 16:40:08-EST
Date: Monday, 21 January 1985, 16:39-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: sys:%beep
To: Richard L. Bryan <RLB at SCRC-TENEX>, EHL at MIT-OZ
cc: DCP at SCRC-QUABBIN, BUG-LISPM at MIT-OZ
In-Reply-To: <850121122243.2.RLB@SUDBURY.SCRC.Symbolics.COM>
Message-ID: <850121163926.2.MOON@EUPHRATES.SCRC.Symbolics.COM>

    Date: Monday, 21 January 1985, 12:22-EST
    From: Richard L. Bryan <RLB at SCRC-TENEX>

	    Date: Friday, 18 January 1985, 00:20-EST
	    From: Edward H Lay <EHL at MIT-OZ>

	    In Symbolics 3640 Release 6.0 Beta IIc, microcode TMC5-IO4-ST506-MIC 315,
	    on TAHOE:

	    Everytime sys:%beep is called, I am thrown into the fep.

    I recently heard, in a rumor-ish context, that beep
    needs real memory in slot zero.

For the record: there were two problems with Tahoe.  One was a problem in
putting the hardware together, which has been fixed.  The memory board in
slot 0 contained a spurious ID prom that said it was not a memory board,
so the machine didn't know that it was there.  I replaced the bozo ID prom
with a correct one when I stopped by Tahoe for a visit on Friday.

The other problem was a software problem, only made visible by the
hardware problem.  The software problem is still present in the software
running on Tahoe, but will have no effect now that the hardware problem
has been fixed.  The software problem will be fixed when the
non-beta-test Release 6.0 comes out.

DCP and I should have sent mail earlier following up on this.  Sorry about that.
21-Jan-85 17:19:53-EST,862;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 21 Jan 85 17:10-EST
Received: from SCRC-CONCORD by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 124737; Mon 21-Jan-85 16:55:33-EST
Date: Monday, 21 January 1985, 16:58-EST
From: Bernard S. Greenberg <BSG at SCRC-TENEX>
Subject: Toes
To: Moon at SCRC-TENEX, DCP at SCRC-QUABBIN
cc: SR.EHPYC at MIT-SPEECH, BUG-LISPM at MIT-OZ, WARD at MIT-OZ
In-Reply-To: <850121162423.0.MOON@EUPHRATES.SCRC.Symbolics.COM>
Message-ID: <850121165852.5.BSG@CONCORD.SCRC.Symbolics.COM>

    Date: Monday, 21 January 1985, 16:24-EST
    From: David A. Moon <Moon at SCRC-TENEX>

	Date: Monday, 21 January 1985, 13:18-EST
	From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
	....It lets you "feel the bits between your
	toes."  [I attribute this phrase to Bawden.]

    Drew McDermott I believe.
That's right.
21-Jan-85 22:31:24-EST,2188;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 21 Jan 85 22:31-EST
Date: Monday, 21 January 1985, 22:29-EST
From: Chris Lindblad <cjl at MIT-OZ>
Subject: Hardcopy File prints too many lines per page
To: BUG-LISPM at MIT-OZ
Message-ID: <850121222928.1.CJL@MOON.MIT>

In Symbolics 3600 Release 6.0 Beta IIc, microcode TMC5-MIC 315, on Lisp Machine Keith Moon:

Isn't it true that  means the text that follows belongs on a new
page?  Doesn't that mean that if you say to a printer "hello there",
then the text "hello there" will appear on the first line of a
new page?  If that is true, then if a newline follows , then the only
thing that can logically be done is assume that there is a blank line to
be printed, and to put nothing on the first line of the new page. 
If that is true, then the hardcopy software on my lisp machine is broken, 
because it puts a blank line at the beginning of every page, except the 
first one, and hence tries to print 67 lines on a ASCII printer that has 
only 66 lines per page. 

OK, now suppose that  doesn't mean that the text follows it belongs on 
a new page. Does it mean that that the text after the first newline after
the  character belongs on the new page? Where does the text between 
the  character and the newline character go? The old page? 
Is text not allowed between the  character and the newline character?
Is that what "ASCII" format printer means? Come on!

Here's what was sent to my printer. There is 1 page feed and 66 newlines per page.
Right after the page feed, there is a newline. My printer infers from this that
the first line of the page is a blank line.

061
062
063
foo                                                                                  Page 2


064
065
066
067
068
069
070
071
072
073
074
075
076
077
078
079
080
081
082
083
084
085
086
087
088
089
090
091
092
093
094
095
096
097
098
099
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
foo                                                                                  Page 3


127
22-Jan-85 02:36:19-EST,1902;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 22 Jan 85 02:36-EST
Date: Tuesday, 22 January 1985, 02:17-EST
From:  <TIM at MIT-MC>
Subject: TV:PRINT-ITEM-CONCISELY loses its lunch printing a nonexistent function (?)
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 18, on Lisp Machine Jimi Hendrix:

  I suppose I should have known better than to inspect SI:*UNDEFINED-METHOD-HASH-TABLE*,
  but... shouldn't TV:PRINT-ITEM-CONCISELY be as robust as PRINT?

>>Trap: The function (:METHOD FS:MULTICS-PATHNAME :COMBINED :NEW-PATHNAME) is undefined.
While in the function TV:PRINT-ITEM-CONCISELY  (:METHOD TV:MOUSE-SENSITIVE-TEXT-SCROLL-WINDOW-WITHOUT-CLICK :ITEM)  TV:INSPECT-HASH-TABLE-PRINTER

TV:PRINT-ITEM-CONCISELY:  (P.C. = 104)
   Arg 0 (ITEM): ((:METHOD FS:MULTICS-PATHNAME :COMBINED :NEW-PATHNAME) <<Error printing value>>
   Arg 1 (STREAM): #<INSPECT-PANE-WITH-TYPEOUT Inspect Pane With Typeout 1 3726523 exposed>
   --Defaulted args:--
   Arg 2 (LEVEL): 0
   Local 3 (L): (<<Error printing value>>
   Local 4 (FLAG): T
   Local 5 (I): 2

(:METHOD TV:MOUSE-SENSITIVE-TEXT-SCROLL-WINDOW-WITHOUT-CLICK :ITEM):  (P.C. = 34)
   Arg 0 (SELF): #<INSPECT-PANE-WITH-TYPEOUT Inspect Pane With Typeout 1 3726523 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:MOUSE-SENSITIVE-TEXT-SCROLL-WINDOW-WITHOUT-CLICK -- 3. IV's, 0. FL's 60203566>
   Arg 2 (OPERATION): :ITEM
   Arg 3 (ITEM): ((:METHOD FS:MULTICS-PATHNAME :COMBINED :NEW-PATHNAME) <<Error printing value>>
   Arg 4 (TYPE): :VALUE
   Arg 5 (FUNCTION): #<DTP-COMPILED-FUNCTION TV:PRINT-ITEM-CONCISELY 54271413>
   Rest arg (PRINT-ARGS): NIL

TV:INSPECT-HASH-TABLE-PRINTER:  (P.C. = 41)
   Arg 0 (ITEM): 0
   Arg 1 (DATA-ARRAY): #<ART-Q-146 571503>
   Arg 2 (STREAM): #<INSPECT-PANE-WITH-TYPEOUT Inspect Pane With Typeout 1 3726523 exposed>
   Arg 3 (ARG3): 15

etc...
22-Jan-85 11:26:36-EST,1465;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 22 Jan 85 11:26-EST
Received: from SCRC-PEACE by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 163759; Tue 22-Jan-85 11:26:01-EST
Date: Tuesday, 22 January 1985, 11:25-EST
From: Charles Hornig <Hornig at SCRC-STONY-BROOK>
Subject: Newt doesn't like serving LISPM's
To: wes at NEWTOWNE-VARIETY, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 16 Jan 85 12:17-EST from wes at NEWTOWNE-VARIETY
Message-ID: <850122112505.4.HORNIG@PEACE.SCRC.Symbolics.COM>

    Date: Wednesday, 16 January 1985, 12:17-EST
    From:  <wes at NEWTOWNE-VARIETY>

    In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 18, on TELLURIDE:

    I'm having trouble talking with newt (MIT-NEWTOWNE-VARIETY) .. specifically, using
    newt as a file server.  When I attempt to log in, it gives me numerous errors, 
    most of which involve changing newt's flavor from unix-host to net-host & back again.
    Once the deluge stops, and I attempt to do things within Zmacs to access newt (like
    DIRED), it gives an unrecognized message error.. All of this worked perfectly 
    yesterday.. What happened??

       Just for the record, I'm WES@NEWT..
			    Thanks
				    Bill

You probably got bitten by some instability in the network database.
Now that the MIT namespace servers are running newer code, this
shouldn't happen as much.  The release 6 code is much more robust in the
face of these things.
23-Jan-85 11:51:04-EST,3423;000000000000
Received: from MIT-BUGS-BUNNY by MIT-OZ via Chaosnet; 23 Jan 85 11:50-EST
Received: by MIT-BUGS-BUNNY.ARPA (4.12/4.8)
	id AA19067; Wed, 23 Jan 85 11:46:50 est
Date: Wed, 23 Jan 85 11:46:50 est
From: Web Dove <dove@bugs-bunny>
To: bug-lispm@oz
Subject: BAD DATES!

As of about 1/21/85 the mail coming into our bug-lispm
from lispms mbox has bad dates.  The problem is with a comma appearing
between the year and time (which is not allowed according to the copy of
rfc822 that I have).

Here is a message with both correct and incorrect dates
(note the lack of commas from bunny or speech on the received lines, and
the presence of a comma in the date from grizzly)
It appears that 3600's are putting in the commas.
-------
BBoard-ID: 17
BB-Posted: 17 Jan 85 12:02:48 EST (Thu)
Received: from MIT-OZ by MIT-BUGS-BUNNY (4.12/4.8) via Chaosnet
	id AA01136; Thu, 17 Jan 85 11:54:14 est
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 17 Jan 85 11:54-EST
Date: 17 Jan 1985  11:54 EST (Thu)
Message-Id: <SR.EHPYC.12080304512.BABYL@MIT-SPEECH>
From: Scott Cyphers <SR.EHPYC@MIT-SPEECH>
To: Scott Cyphers <sr.ehpyc@MIT-SPEECH>
Cc: BUG-LISPM@MIT-OZ
Subject: Print Spoolers
In-Reply-To: Msg of 16 Jan 1985 22:37-EST from Scott Cyphers <sr.ehpyc>

    Date: Wednesday, 16 January 1985, 22:37-EST
    From: Scott Cyphers <sr.ehpyc>
    To:   BUG-LISPM at MIT-OZ
    Re:   Print Spoolers

    In Symbolics 3600 Release 6.0 Beta IIc, Experimental Spire-Macros 4.0,
    Experimental Compute 3.0, Experimental Attribute 4.0,
    Experimental Audio 3.0, Experimental Speech-Attributes 3.0,
    Experimental Display 4.0, Experimental Speech-Layouts 5.0,
    Experimental Versatec 4.0, Prtout 2.0, Experimental Spire 15.0,
    Experimental SpireX 12.0, Experimental ZOO 4.0, ZOO-SPIRE 1.0,
    microcode TMC5-MIC 315, FEP 18, on Lisp Machine Grizzly:
    Warm booted from: Lisp Listener 1.

----- more recently (from scrc->oz->bunny)

Received: from MIT-OZ by MIT-BUGS-BUNNY (4.12/4.8) via Chaosnet
	id AA02307; Sun, 20 Jan 85 16:38:53 est
Message-Id: <8501202138.AA02307@MIT-BUGS-BUNNY.ARPA>
Received: from SCRC-TENEX by MIT-OZ via Chaosnet; 20 Jan 85 16:39-EST
Date: Sunday, 20 January 1985  16:35-EST
From: MOON@SCRC-TENEX
To: <TIM@MIT-MC>
Cc: BUG-LISPM@MIT-OZ
Subject: Non-coherent error messages in flavor system, or something.
In-Reply-To: The message of 20 Jan 1985 16:06-EST from <TIM at MIT-MC>

    Date: Sunday, 20 January 1985, 16:06-EST
    From:  <TIM at MIT-MC>

    In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 24, on Lisp Machine Keith Moon:

----- from sudbury->stony->oz->bunny

Received: from MIT-OZ by MIT-BUGS-BUNNY (4.12/4.8) via Chaosnet
	id AA00978; Mon, 21 Jan 85 12:22:37 est
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 21 Jan 85 12:24-EST
Received: from SCRC-SUDBURY by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 163030; Mon 21-Jan-85 12:24:00-EST
Date: Monday, 21 January 1985, 12:22-EST
From: Richard L. Bryan <RLB@SCRC-TENEX>
Subject: sys:%beep
To: DCP@SCRC-QUABBIN, EHL@MIT-OZ, BUG-LISPM@MIT-OZ
In-Reply-To: <850118142343.3.NFEP@NEPONSET.SCRC.Symbolics.COM>
Message-Id: <850121122243.2.RLB@SUDBURY.SCRC.Symbolics.COM>

    Date: Friday, 18 January 1985, 14:23-EST
    From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>

	Date: Friday, 18 January 1985, 00:20-EST
	From: Edward H Lay <EHL at MIT-OZ>
23-Jan-85 15:02:44-EST,1490;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 23 Jan 85 15:01-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 164877; Wed 23-Jan-85 14:55:34-EST
Date: Wednesday, 23 January 1985, 14:54-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: Defconst demands second arg---ARRGGGHH.
To: Charles Hornig <Hornig at SCRC-STONY-BROOK>,
    Tom Trobaugh <TOM at MIT-OZ>, BUG-LISPM at MIT-OZ
In-Reply-To: <850117135346.7.HORNIG@PEACE.SCRC.Symbolics.COM>
Message-ID: <850123145413.1.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Thursday, 17 January 1985, 13:53-EST
    From: Charles Hornig <Hornig at SCRC-STONY-BROOK>

	Date: Thursday, 17 January 1985, 13:14-EST
	From: Tom Trobaugh <TOM at MIT-OZ>

	In Symbolics 3600 System 242.356, Hardcopy 20.10,
	Experimental Useful 1.0, FEP 18, on PI Project:

	Defconst's 2nd arg used to be optional, and c-sh-A still claims it is.
	The manual says so, too.
	
	Am I doing something wrong, or what? 

	>>Trap: The function SI:DEFCONST-1 was called with too few arguments.
	While in the function SI:DEFCONST-1  SI:*EVAL  (:INTERNAL COMPILER:COMPILE-TO-CORE 2)

    The documentation and c-sh-A are wrong -- the initial value is required.
    We will fix the documentation (probably not for the next release,
    though).

In Release 6, c-sh-A will correctly claim that the initial value is
required.  I will notify documentation that the initial value is
required.
24-Jan-85 00:30:59-EST,1715;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 24 Jan 85 00:30-EST
Date: Thursday, 24 January 1985, 00:28-EST
From:  <TIM at MIT-MC>
Subject: Perhaps a little extra error checking would be nice
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 22, on Lisp Machine Sid Vicious:

  Typed "SI:" rather than "SI" to Set Package, then answered "No" when it asked me
  if I wanted to create an "SI:" package...

>>Error: SI: is not meaningful as a package name.
While in the function PKG-FIND-PACKAGE  ZWEI:COM-SET-PACKAGE  ZWEI:COM-EXTENDED-COMMAND

PKG-FIND-PACKAGE:  (P.C. = 157)
   Arg 0 (THING): "SI:"
   Arg 1 (CREATE-P): :ASK
   --Defaulted args:--
   Arg 2 (RELATIVE-TO): NIL
   Local 3 (PKG): NIL

ZWEI:COM-SET-PACKAGE:  (P.C. = 10)

ZWEI:COM-EXTENDED-COMMAND:  (P.C. = 27)

ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
   Arg 0 (COMMAND): ZWEI:COM-EXTENDED-COMMAND
   Arg 1 (CHAR): 600
   Arg 2 (PREFIX-CHAR): NIL
   Arg 3 (HOOK-LIST): NIL

ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
   Arg 0 (CH): 600

(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 214)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 56044432>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:EDITOR -- 12. IV's, 0. FL's 56044271>
   Arg 2 (OPERATION): :EDIT
   --Defaulted args:--
   Arg 3 (TOP-LEVEL-P): T
   Arg 4 (DESCRIPTION): NIL

(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 41)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 56044432>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:TOP-LEVEL-EDITOR -- 12. IV's, 1. FL's 60246144>
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)

Rest of stack:
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
24-Jan-85 01:16:26-EST,1555;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 24 Jan 85 01:16-EST
Received: from SCRC-NEPONSET by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 125709; Thu 24-Jan-85 01:14:49-EST
Date: Thursday, 24 January 1985, 01:15-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: Perhaps a little extra error checking would be nice
To: TIM at MIT-MC, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 24 Jan 85 00:28-EST from TIM at MIT-MC
Message-ID: <850124011516.8.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Thursday, 24 January 1985, 00:28-EST
    From:  <TIM at MIT-MC>

    In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 22, on Lisp Machine Sid Vicious:

      Typed "SI:" rather than "SI" to Set Package, then answered "No" when it asked me
      if I wanted to create an "SI:" package...

I /think/ what you are asking is that zwei:com-set-package somehow tells
pkg-find-package that if the package doesn't exist and the user says no
to the creation question, it doesn't do anything.  Right?
PKG-FIND-PACKAGE >>is<< doing error checking.  If the package doesn't
exist and you don't create it, what do you want it to return??

    >>Error: SI: is not meaningful as a package name.
    While in the function PKG-FIND-PACKAGE  ZWEI:COM-SET-PACKAGE  ZWEI:COM-EXTENDED-COMMAND

    PKG-FIND-PACKAGE:  (P.C. = 157)
       Arg 0 (THING): "SI:"
       Arg 1 (CREATE-P): :ASK
       --Defaulted args:--
       Arg 2 (RELATIVE-TO): NIL
       Local 3 (PKG): NIL

    ZWEI:COM-SET-PACKAGE:  (P.C. = 10)

24-Jan-85 05:05:03-EST,808;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 24 Jan 85 05:05-EST
Date: Thursday, 24 January 1985, 05:03-EST
From:  <TIM at MIT-MC>
Subject: FUNCTION-SPEC-REMPROP of methods doesn't!
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 22, on Lisp Machine Sid Vicious:

It defaults to FUNCTION-SPEC-DEFAULT-HANDLER which does something completely random!


  (DEFUN METHOD-FUNCTION-SPEC-HANDLER (FUNCTION FUNCTION-SPEC &OPTIONAL ARG1 ARG2 &AUX FL)
    .
    .
		 (SELECTQ FUNCTION
		   .
		   .
		   (GET (AND METH (GET (LOCF (METH-PLIST METH)) ARG1)))
		   (PUTPROP (PUTPROP (LOCF (METH-PLIST METH)) ARG1 ARG2))
		   **** what about remprop? ****
		   (OTHERWISE
		     (FUNCTION-SPEC-DEFAULT-HANDLER FUNCTION FUNCTION-SPEC ARG1 ARG2)))
    .
    .
    .)
24-Jan-85 05:35:09-EST,531;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 24 Jan 85 05:35-EST
Date: 24 January 1985 05:30-EST
From: Tim McNerney <TIM @ MIT-MC>
Subject:  Perhaps a little extra error checking would be nice
To: DCP @ SCRC-QUABBIN
cc: BUG-LISPM @ MIT-OZ
In-reply-to: Msg of Thu 24 Jan 85 01:15 EST from David C. Plummer in disguise <DCP at SCRC-QUABBIN.ARPA>

How about some trivial DWIM?  Both "SI:" and "SI" => #<PACKAGE SYSTEM-INTERNALS>
In any case if it doesn't exist and I don't want to create it, I porbably just
want to punt!
24-Jan-85 10:29:55-EST,2317;000000000000
Received: from MIT-GOLDILOCKS by MIT-OZ via Chaosnet; 24 Jan 85 10:29-EST
Date: Thursday, 24 January 1985, 10:27-EST
From: sr.ehpyc at MIT-SPEECH
Sender: Print Spooler at GOLDILOCKS
Subject: Chaos connection table full
To: BUG-LISPM at MIT-OZ
Message-ID: <"850124102759.1.Print Spooler@GOLDILOCKS"@GOLDILOCKS.MIT>

In Symbolics 3600 Release 6.0 Beta IIc, Experimental Spire-Macros 4.0,
Experimental Versatec-Spool 6.0, Print 34.3, Experimental Versatec 4.0,
microcode TMC5-MIC 315, FEP 18, on Lisp Machine Goldilocks:

This happened after almost 9 days of namespacing, file serving, and
versatec spooling.

There have been 152 ephemeral GCs, and 1 of full and dynamic.

>>Error: Chaos connection table full
While in the function CHAOS:MAKE-CONNECTION  CHAOS:LISTEN  CHAOS:RECEIVE-RFC

CHAOS:MAKE-CONNECTION:  (P.C. = 161)
   --Defaulted args:--
   Arg 0 (CONN): #<<<Error printing value>>
   Local 1 (CONS): NIL
   Local 2 (INDEX): 1
   Local 3 (COUNTER): -1

CHAOS:LISTEN:  (P.C. = 14)
   Arg 0 (CONTACT-NAME): "NAMESPACE"
   Arg 1 (WINDOW-SIZE): 13
   Arg 2 (WAIT-FOR-RFC): NIL

CHAOS:RECEIVE-RFC:  (P.C. = 217)
   Arg 0 (PKT): #<Chaos Packet 5531647>

CHAOS:RECEIVE-CHAOS-PACKET:  (P.C. = 547)
   Arg 0 (PKT): #<Chaos Packet 5531647>

(:METHOD CHAOS:CHAOS-NETWORK :RECEIVE-PACKET):  (P.C. = 112)
   Arg 0 (SELF): #<CHAOS-NETWORK CHAOS 62302203>
   Arg 1 (SELF-MAPPING-TABLE): CHAOS:CHAOS-NETWORK
   Arg 2 (OPERATION): :RECEIVE-PACKET
   Arg 3 (PACKET): #<ART-8B-1942 5531556>
   Arg 4 (INTERFACE): #<3600-ETHERNET-INTERFACE 5506563>
   Arg 5 (INTERFACE-CHAOS-ADDRESS): 6968

(:METHOD NETI:ADDRESS-RESOLUTION-INTERFACE-MIXIN :RECEIVE-PROTOCOL-PACKET):  (P.C. = 31)
   Arg 0 (SELF): #<3600-ETHERNET-INTERFACE 5506563>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NETI:ADDRESS-RESOLUTION-INTERFACE-MIXIN -- 4. IV's, 0. FL's 105721041>
   Arg 2 (OPERATION): :RECEIVE-PROTOCOL-PACKET
   Arg 3 (PROTOCOL-PACKET): #<ART-8B-1942 5531556>
   Arg 4 (PROTOCOL): 2052

(:METHOD NETI:3600-ETHERNET-INTERFACE :TOP-LEVEL):  (P.C. = 171)
   Arg 0 (SELF): #<3600-ETHERNET-INTERFACE 5506563>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NETI:3600-ETHERNET-INTERFACE -- 6. IV's, 2. FL's 105721023>
   Arg 2 (OPERATION): :TOP-LEVEL

SI:PROCESS-SCHEDULER:  (P.C. = 345)
24-Jan-85 10:36:59-EST,445;000000000000
Received: from MIT-GOLDILOCKS by MIT-OZ via Chaosnet; 24 Jan 85 10:36-EST
Date: Thursday, 24 January 1985, 10:34-EST
From: Scott Cyphers <sr.ehpyc at MIT-SPEECH>
Subject: The last message
To: bug-lispm at MIT-OZ
Message-ID: <850124103456.2.CYPHER@GOLDILOCKS.MIT>

I checked peek.  There were a zillion versatec servers in a buffer full
state.  Evidently something is the old Rel 5 print server doesn't work
quite right with release 6.
24-Jan-85 13:17:20-EST,1320;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 24 Jan 85 13:17-EST
Received: from SCRC-PEACE by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 165562; Thu 24-Jan-85 12:54:59-EST
Date: Thu, 24 Jan 85 12:54 EST
From: Charles Hornig <Hornig at SCRC-STONY-BROOK>
Subject: FUNCTION-SPEC-REMPROP of methods doesn't!
To: TIM at MIT-MC, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 24 Jan 85 05:03-EST from TIM at MIT-MC
Message-ID: <850124125437.1.HORNIG@PEACE.SCRC.Symbolics.COM>

    Date: Thursday, 24 January 1985, 05:03-EST
    From:  <TIM at MIT-MC>

    In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 22, on Lisp Machine Sid Vicious:

    It defaults to FUNCTION-SPEC-DEFAULT-HANDLER which does something completely random!


      (DEFUN METHOD-FUNCTION-SPEC-HANDLER (FUNCTION FUNCTION-SPEC &OPTIONAL ARG1 ARG2 &AUX FL)
	.
	.
		     (SELECTQ FUNCTION
		       .
		       .
		       (GET (AND METH (GET (LOCF (METH-PLIST METH)) ARG1)))
		       (PUTPROP (PUTPROP (LOCF (METH-PLIST METH)) ARG1 ARG2))
		       **** what about remprop? ****
		       (OTHERWISE
			 (FUNCTION-SPEC-DEFAULT-HANDLER FUNCTION FUNCTION-SPEC ARG1 ARG2)))
	.
	.
	.)

Fixed in the source.  The fix is to add the clause

		   (REMPROP (REMPROP (LOCF (METH-PLIST METH)) ARG1))

to the SELECTQ.
24-Jan-85 16:54:38-EST,1142;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 24 Jan 85 16:20-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 165581; Thu 24-Jan-85 13:31:37-EST
Date: Thursday, 24 January 1985, 13:31-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: Perhaps a little extra error checking would be nice
To: Tim McNerney <TIM at MIT-MC>, DCP at SCRC-QUABBIN
cc: BUG-LISPM at MIT-OZ
In-Reply-To: The message of 24 Jan 85 05:30-EST from Tim McNerney <TIM at MIT-MC>
Message-ID: <850124133120.9.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: 24 January 1985 05:30-EST
    From: Tim McNerney <TIM @ MIT-MC>

    How about some trivial DWIM?  Both "SI:" and "SI" => #<PACKAGE SYSTEM-INTERNALS>
No they don't.  "SI:" => #<PACKAGE SI:>, and symbols in it look like
|SI:|:FOO. 
    In any case if it doesn't exist and I don't want to create it, I porbably just
    want to punt!
That's my point.  In this case you want to punt.  What about other
cases, such as make-system trying to compile some file that has a
package in the attribute list that does not have its declaration loaded?
24-Jan-85 17:02:11-EST,1389;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 24 Jan 85 16:20-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 165596; Thu 24-Jan-85 13:50:35-EST
Date: Thursday, 24 January 1985, 13:50-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: FUNCTION-SPEC-REMPROP of methods doesn't!
To: TIM at MIT-MC, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 24 Jan 85 05:03-EST from TIM at MIT-MC
Message-ID: <850124135016.2.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Thursday, 24 January 1985, 05:03-EST
    From:  <TIM at MIT-MC>

    In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 22, on Lisp Machine Sid Vicious:

    It defaults to FUNCTION-SPEC-DEFAULT-HANDLER which does something completely random!


      (DEFUN METHOD-FUNCTION-SPEC-HANDLER (FUNCTION FUNCTION-SPEC &OPTIONAL ARG1 ARG2 &AUX FL)
	.
	.
		     (SELECTQ FUNCTION
		       .
		       .
		       (GET (AND METH (GET (LOCF (METH-PLIST METH)) ARG1)))
		       (PUTPROP (PUTPROP (LOCF (METH-PLIST METH)) ARG1 ARG2))
		       **** what about remprop? ****
		       (OTHERWISE
			 (FUNCTION-SPEC-DEFAULT-HANDLER FUNCTION FUNCTION-SPEC ARG1 ARG2)))
	.
	.
	.)

I think I reported this myself a while ago, but hid it in a mailbox that
I didn't look in for fixes to make to 6.0.  6.1 at the latest, maybe I
can get permission for 6.0.
24-Jan-85 17:06:33-EST,686;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 24 Jan 85 16:21-EST
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 165600; Thu 24-Jan-85 13:56:37-EST
Date: Thursday, 24 January 1985, 13:56-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: BAD DATES!
To: Web Dove <dove at MIT-BUGS-BUNNY>
cc: bug-lispm at MIT-OZ
In-Reply-To: The message of 23 Jan 85 11:46-EST from Web Dove <dove at bugs-bunny>
Message-ID: <850124135603.5.MOON@EUPHRATES.SCRC.Symbolics.COM>

The oldest message in my mailbox, from 51 weeks ago, has a date in the same format,
with a comma between the date and the time.  So I don't think this is a recent change.
24-Jan-85 17:09:11-EST,2940;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 24 Jan 85 16:21-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 165613; Thu 24-Jan-85 14:04:12-EST
Date: Thursday, 24 January 1985, 14:03-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: Chaos connection table full
To: sr.ehpyc at MIT-SPEECH, BUG-LISPM at MIT-OZ
In-Reply-To: <"850124102759.1.Print Spooler@GOLDILOCKS"@GOLDILOCKS.MIT>
Message-ID: <850124140353.4.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Thursday, 24 January 1985, 10:27-EST
    From: sr.ehpyc at MIT-SPEECH

    In Symbolics 3600 Release 6.0 Beta IIc, Experimental Spire-Macros 4.0,
    Experimental Versatec-Spool 6.0, Print 34.3, Experimental Versatec 4.0,
    microcode TMC5-MIC 315, FEP 18, on Lisp Machine Goldilocks:

    This happened after almost 9 days of namespacing, file serving, and
    versatec spooling.

10 to 1 the versatec spooling code is missing an unwind-protect or
something to free connections.  All the connections are kept on
chaos:*conn-list*.  What did they have in them?

    There have been 152 ephemeral GCs, and 1 of full and dynamic.

    >>Error: Chaos connection table full
    While in the function CHAOS:MAKE-CONNECTION  CHAOS:LISTEN  CHAOS:RECEIVE-RFC

    CHAOS:MAKE-CONNECTION:  (P.C. = 161)
       --Defaulted args:--
       Arg 0 (CONN): #<<<Error printing value>>
       Local 1 (CONS): NIL
       Local 2 (INDEX): 1
       Local 3 (COUNTER): -1

    CHAOS:LISTEN:  (P.C. = 14)
       Arg 0 (CONTACT-NAME): "NAMESPACE"
       Arg 1 (WINDOW-SIZE): 13
       Arg 2 (WAIT-FOR-RFC): NIL

    CHAOS:RECEIVE-RFC:  (P.C. = 217)
       Arg 0 (PKT): #<Chaos Packet 5531647>

    CHAOS:RECEIVE-CHAOS-PACKET:  (P.C. = 547)
       Arg 0 (PKT): #<Chaos Packet 5531647>

    (:METHOD CHAOS:CHAOS-NETWORK :RECEIVE-PACKET):  (P.C. = 112)
       Arg 0 (SELF): #<CHAOS-NETWORK CHAOS 62302203>
       Arg 1 (SELF-MAPPING-TABLE): CHAOS:CHAOS-NETWORK
       Arg 2 (OPERATION): :RECEIVE-PACKET
       Arg 3 (PACKET): #<ART-8B-1942 5531556>
       Arg 4 (INTERFACE): #<3600-ETHERNET-INTERFACE 5506563>
       Arg 5 (INTERFACE-CHAOS-ADDRESS): 6968

    (:METHOD NETI:ADDRESS-RESOLUTION-INTERFACE-MIXIN :RECEIVE-PROTOCOL-PACKET):  (P.C. = 31)
       Arg 0 (SELF): #<3600-ETHERNET-INTERFACE 5506563>
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NETI:ADDRESS-RESOLUTION-INTERFACE-MIXIN -- 4. IV's, 0. FL's 105721041>
       Arg 2 (OPERATION): :RECEIVE-PROTOCOL-PACKET
       Arg 3 (PROTOCOL-PACKET): #<ART-8B-1942 5531556>
       Arg 4 (PROTOCOL): 2052

    (:METHOD NETI:3600-ETHERNET-INTERFACE :TOP-LEVEL):  (P.C. = 171)
       Arg 0 (SELF): #<3600-ETHERNET-INTERFACE 5506563>
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NETI:3600-ETHERNET-INTERFACE -- 6. IV's, 2. FL's 105721023>
       Arg 2 (OPERATION): :TOP-LEVEL

    SI:PROCESS-SCHEDULER:  (P.C. = 345)
24-Jan-85 17:10:02-EST,6769;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 24 Jan 85 16:22-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 165702; Thu 24-Jan-85 15:29:34-EST
Date: Thursday, 24 January 1985, 15:29-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: DTP-NULL
To: David C. Plummer in disguise <DCP at SCRC-QUABBIN>,
    Scott Cyphers <sr.ehpyc at MIT-SPEECH>, BUG-LISPM at MIT-OZ
In-Reply-To: <850116232715.2.NFEP@NEPONSET.SCRC.Symbolics.COM>
Message-ID: <850124152912.2.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Wednesday, 16 January 1985, 23:27-EST
    From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>

	Date: Wednesday, 16 January 1985, 21:18-EST
	From: Scott Cyphers <sr.ehpyc at MIT-SPEECH>

	In Symbolics 3600 Release 6.0 Beta IIc, Experimental Spire-Macros 4.0,
	Experimental Compute 3.0, Experimental Attribute 4.0,
	Experimental Audio 3.0, Experimental Speech-Attributes 3.0,
	Experimental Display 4.0, Experimental Speech-Layouts 5.0,
	Experimental Versatec 4.0, Prtout 2.0, Experimental Spire 15.0,
	Experimental SpireX 12.0, Experimental ZOO 4.0, ZOO-SPIRE 1.0,
	microcode TMC5-MIC 315, FEP 18, on Lisp Machine Grizzly:

	I did an (si:full-gc :system-release t :gc-compiled-functions t)

    It may be that :GC-COMPILED-FUNCTIONS T is broken in Release 6.
    Investigation will be needed.

I tried to reproduce this, and couldn't.  I did 3 full-gc
:gc-compiled-functions and they all worked.  I also turned the EGC on,
loaded a system, and then did a full-gc :gc-compiled-functions and that
worked.  Can you reproduce it at all?

Instruction 4 of 
  (:INTERNAL (:INTERNAL SI:CP-COMMAND-LOOP-BREAK-READ-FUNCTION 0) 0)
is a CALL-3-RETURN.  I don't know if it got this during the call
sequence or during the return sequence.  Probably the call.  If you go
back one frame to MICROCODE-ERROR-HANDLER it will tell you the VMA and
the micro PC of the problem.

Note that the DTP-NULL address is also the location of the DTP-NULL.
This is how the storage system initializes pages.  Without a description
of gc-table-area, and without the micro PC, I can't tell who is at
fault.  The only thing I could think of is that gc-table-area got
reclaimed.  This is supposed to be impossible since that region is
always safeguarded before flipping.

	When in a breakpoint, typing any character to be read produces this error.
	This doesn't happen in the un-gc'd system, and doesn't happen at top level.

	(I guess you guys intend to enforce that thing about system-release t only
	being meant for Symbolics people now.)

	>>Trap: The word #<DTP-NULL 3306153> was read from location 3306153 (in GC-TABLE-AREA).
	While in the function (:INTERNAL (:INTERNAL SI:CP-COMMAND-LOOP-BREAK-READ-FUNCTION 0) 0)  (:INTERNAL READ-OR-CHARACTER 0 SI:.WITH-INPUT-EDITING-FUNCTION.)  READ-OR-CHARACTER

	(:INTERNAL (:INTERNAL SI:CP-COMMAND-LOOP-BREAK-READ-FUNCTION 0) 0):  (P.C. = 4)
	   Arg 0 (STREAM): #:TERMINAL-IO-SYN-STREAM

	(:INTERNAL READ-OR-CHARACTER 0 SI:.WITH-INPUT-EDITING-FUNCTION.):  (P.C. = 75)
	   Arg 0 (.LEXICAL-ENVIRONMENT-POINTER.): #<DTP-LOCATIVE 501263>
	   Arg 1 (STREAM): #:TERMINAL-IO-SYN-STREAM

	READ-OR-CHARACTER:  (P.C. = 107)
	   Arg 0 (DELIMITERS): (146 145 131 346 129 641)
	   Arg 1 (STREAM): #:TERMINAL-IO-SYN-STREAM
	   Arg 2 (READER): #<DTP-COMPILED-FUNCTION (:INTERNAL (:INTERNAL SI:CP-COMMAND-LOOP-BREAK-READ-FUNCTION 0) 0) 36332231>

	(:INTERNAL SI:CP-COMMAND-LOOP-BREAK-READ-FUNCTION 0):  (P.C. = 5)

	(:INTERNAL SI:CP-INPUT-EDITING 0 SI:.WITH-INPUT-EDITING-FUNCTION.):  (P.C. = 75)
	   Arg 0 (.LEXICAL-ENVIRONMENT-POINTER.): #<DTP-LOCATIVE 501127>
	   Arg 1 (STREAM): #:TERMINAL-IO-SYN-STREAM

	(:DEFUN-METHOD SI:INPUT-EDITOR-READ):  (P.C. = 67)
	   Arg 0 (SELF): #<LISP-LISTENER Lisp Listener 1 1200000 exposed>
	   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:INTERACTIVE-STREAM -- 20. IV's, 1. FL's 52503034>
	   Arg 2 (READ-FUNCTION): #<LEXICAL-CLOSURE (:INTERNAL SI:CP-INPUT-EDITING 0 SI:.WITH-INPUT-EDITING-FUNCTION.) 501133>
	   Arg 3 (READ-ARGS): (#:TERMINAL-IO-SYN-STREAM)

	(:METHOD SI:INTERACTIVE-STREAM :INPUT-EDITOR):  (P.C. = 133)
	   Arg 0 (SELF): #<LISP-LISTENER Lisp Listener 1 1200000 exposed>
	   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:INTERACTIVE-STREAM -- 20. IV's, 1. FL's 52503034>
	   Arg 2 (OPERATION): :INPUT-EDITOR
	   Arg 3 (READ-FUNCTION): #<LEXICAL-CLOSURE (:INTERNAL SI:CP-INPUT-EDITING 0 SI:.WITH-INPUT-EDITING-FUNCTION.) 501133>
	   Rest arg (READ-ARGS): NIL
	   Local 4 (READ-ARGS): (#:TERMINAL-IO-SYN-STREAM)

	SI:CP-INPUT-EDITING:  (P.C. = 110)
	   Arg 0 (STREAM): #:TERMINAL-IO-SYN-STREAM
	   Arg 1 (PROMPT): "Command: "
	   Arg 2 (BLANK-LINE-MODE): :REPROMPT
	   Arg 3 (CONTINUATION): #<DTP-COMPILED-FUNCTION (:INTERNAL SI:CP-COMMAND-LOOP-BREAK-READ-FUNCTION 0) 36332217>

	Rest of stack:
	SI:CP-COMMAND-LOOP-BREAK-READ-FUNCTION:  (P.C. = 76)
	SI:BREAK-READ-FUNCTION:  (P.C. = 3)
	(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0):  (P.C. = 105)
	TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)  (from SYS: PATCH; SYSTEM-269-48)
	SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
	SI:BREAK-INTERNAL:  (P.C. = 176)
	SYS:KBD-INTERCEPT-CHARACTER:  (P.C. = 52)
	(:DEFUN-METHOD SI:STANDARD-INPUT-EDITOR-TYI):  (P.C. = 405)
	SI:STANDARD-INPUT-EDITOR-TYI:  (P.C. = 12)
	SI:INPUT-EDITOR-INVOKE:  (P.C. = 11)
	(:METHOD SI:INTERACTIVE-STREAM :WHOPPER :ANY-TYI):  (P.C. = 67)
	(:METHOD TV:WINDOW :COMBINED :ANY-TYI):  (P.C. = 13)
	(:DEFUN-METHOD SI:TYI-INTERNAL):  (P.C. = 6)
	(:METHOD SI:INTERACTIVE-STREAM :TYI):  (P.C. = 10)
	SI:XR-XRTYI:  (P.C. = 6)
	SI:XR-READ-THING:  (P.C. = 155)
	(:INTERNAL SI:READ-INTERNAL 0 SI:.WITH-INPUT-EDITING-FUNCTION.):  (P.C. = 15)
	SI:READ-INTERNAL:  (P.C. = 35)
	READ-FOR-TOP-LEVEL:  (P.C. = 6)
	(:INTERNAL READ-EXPRESSION 0 SI:.WITH-INPUT-EDITING-FUNCTION.):  (P.C. = 3)
	READ-EXPRESSION:  (P.C. = 153)
	(:INTERNAL READ-FORM 0 SI:.WITH-INPUT-EDITING-FUNCTION.):  (P.C. = 10)
	READ-FORM:  (P.C. = 46)
	SI:READ-FORM-DISPATCH:  (P.C. = 5)
	(:INTERNAL READ-COMMAND-OR-FORM 0):  (P.C. = 66)
	(:INTERNAL SI:CP-INPUT-EDITING 0 SI:.WITH-INPUT-EDITING-FUNCTION.):  (P.C. = 75)
	(:DEFUN-METHOD SI:INPUT-EDITOR-READ):  (P.C. = 67)
	(:METHOD SI:INTERACTIVE-STREAM :INPUT-EDITOR):  (P.C. = 133)
	SI:CP-INPUT-EDITING:  (P.C. = 110)
	READ-COMMAND-OR-FORM:  (P.C. = 146)
	SI:CP-COMMAND-LOOP-READ-FUNCTION:  (P.C. = 13)
	(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0):  (P.C. = 105)
	TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)  (from SYS: PATCH; SYSTEM-269-48)
	SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
	SI:LISP-COMMAND-LOOP:  (P.C. = 67)
	SI:LISP-TOP-LEVEL1:  (P.C. = 5)
	SI:LISP-TOP-LEVEL:  (P.C. = 7)
24-Jan-85 17:12:09-EST,1807;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 24 Jan 85 16:29-EST
Date: 24 Jan 1985  16:30 EST (Thu)
Message-ID: <SR.EHPYC.12082189653.BABYL@MIT-SPEECH>
From: Scott Cyphers <SR.EHPYC@MIT-SPEECH>
To:   "David C. Plummer in disguise" <DCP@SCRC-QUABBIN>
Cc:   BUG-LISPM@MIT-OZ
Subject: Chaos connection table full
In-reply-to: Msg of 24 Jan 1985 14:03-EST from David C. Plummer in disguise <DCP at SCRC-QUABBIN>

As far as I can tell (Goldy's monitor is more or less pitch black
these days) what happened is that somehow the guy that sits around
waiting for things to appear for spooling decided that he didn't want
to do something (maybe it got an error or something).  In conjunction
with this, someone spooled zillions of printouts overnight.  The
spooler has an io-buffer which it puts these requests in, and it
filled itself.  So, the versatec servers would be sitting these doing
an io-buffer-put into the full buffer, which turned into a
process-wait, I imagine with all the chaos resources still held,
waiting for this one final step to take place.  After a while, there
were several zillion of these processes waiting around to finish up,
and someone tried to load a file or finger or something, and chaos
decided that it had allocated enough connections already (I don't
blame it) and gave the error.

The thing that looks for spooled files and sends them off to the
Versatec is more or less the Rel 5 LGP spooler with a few minor
changes to make it work across the net most of the time until we put a
unibus on Goldy so it can run the Versatec itself.  I guess I could
try recompiling the prit system, but I'm not sure if the Rel 5 sources
correspond to the Rel 5 bins, and I think I'll wait until we fix
Goldy's screen anyways so I can see what I'm doing (soon).
24-Jan-85 17:15:13-EST,485;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 24 Jan 85 16:32-EST
Date: 24 Jan 1985  16:33 EST (Thu)
Message-ID: <SR.EHPYC.12082190276.BABYL@MIT-SPEECH>
From: Scott Cyphers <SR.EHPYC@MIT-SPEECH>
To:   "David C. Plummer in disguise" <DCP@SCRC-QUABBIN>
Cc:   BUG-LISPM@MIT-OZ
Subject: DTP-NULL
In-reply-to: Msg of 24 Jan 1985 15:29-EST from David C. Plummer in disguise <DCP at SCRC-QUABBIN>

I'll try it again in a few days, although it won't be an identical
world load.
25-Jan-85 01:02:58-EST,4248;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 25 Jan 85 01:02-EST
Date: Friday, 25 January 1985, 01:00-EST
From: David Vinayak Wallace <Gumby at MIT-MC>
Subject: FED barfs on this file
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 22, on Lisp Machine Buddy Holly:

WHen I try to read in the kst file OZ:<FONTS>ENT.KST.1 The following occurs:

>>Error: Not enough room for margins
While in the function (:DEFUN-METHOD TV:SYSTEM-SET-EDGES)  (:METHOD TV:ESSENTIAL-SET-EDGES :SET-EDGES)  (:METHOD TV:WINDOW-PANE :COMBINED :SET-EDGES)

(:DEFUN-METHOD TV:SYSTEM-SET-EDGES):  (P.C. = 62)
   Arg 0 (SELF): #<REGISTER-PANE Register Pane 2 1004115 deactivated>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:ESSENTIAL-SET-EDGES -- 0. IV's, 1. FL's 60607702>
   Arg 2 (OPERATION): :SET-EDGES
   Arg 3 (NEW-LEFT): 760.
   Arg 4 (NEW-TOP): 744.
   Arg 5 (NEW-RIGHT): 1085.
   Arg 6 (NEW-BOTTOM): 746.
   Arg 7 (OPTION): NIL
   Local 8 (NEW-WIDTH): 325.
   Local 9 (NEW-HEIGHT): 2.
   Local 10 (ERROR): "Not enough room for margins"
   Local 11 (WINDOW-TO-BE-DEEXPOSED): NIL
   Local 12 (.QUEUE-LEFT.): T
   Local 13: SYS:UNWIND-PROTECT-TAG
   Local 14: #<DTP-EVEN-PC 7130506>
   Local 15: #<DTP-LOCATIVE 27350730>
   Local 16: #<DTP-LOCATIVE 44040255>
   Local 17: #<DTP-LOCATIVE 27350730>
   Local 18: SYS:UNWIND-PROTECT-TAG
   Local 19: #<DTP-EVEN-PC 7130522>
   Local 20: #<DTP-LOCATIVE 27350730>
   Local 21: #<DTP-LOCATIVE 44040440>
   Local 22 (DONE): NIL
   Local 23 (RESULT): NIL

(:METHOD TV:ESSENTIAL-SET-EDGES :SET-EDGES):  (P.C. = 10)
   Arg 0 (SELF): #<REGISTER-PANE Register Pane 2 1004115 deactivated>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:ESSENTIAL-SET-EDGES -- 0. IV's, 1. FL's 60607702>
   Arg 2 (OPERATION): :SET-EDGES
   Rest arg (.ARGS.): (760. 744. 1085. 746. NIL)

(:METHOD TV:WINDOW-PANE :COMBINED :SET-EDGES):  (P.C. = 56)
   Arg 0 (SELF): #<REGISTER-PANE Register Pane 2 1004115 deactivated>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:WINDOW-PANE -- 0. IV's, 8. FL's 60607745>
   Rest arg (.DAEMON-CALLER-ARGS.): (:SET-EDGES 760. 744. 1085. 746. NIL)

TV:CONSTRAINT-FRAME-SET-EDGES:  (P.C. = 77)
   Arg 0 (CONSTRS): (((FED:DRAW-MODE-MENU . #<ART-Q-14. 27363263>) (FED:COMMAND-MENU-1 . #<ART-Q-14. 27363302>) (FED:COMMAND-MENU-2 . #<ART-Q-14. 27363321>) (FED:COMMAND-MENU-3 . #<ART-Q-14. 27363340>) (FED:STATUS-PANE . #<ART-Q-14. 27363357>) (FED:ALPHABET-MENU . #<ART-Q-14. 27363376>) (FED:PARAM-CHVV . #<ART-Q-14. 27363415>) (FED:REGISTER-PANE . #<ART-Q-14. 27363434>)) (#<ART-Q-14. 27363263>) (#<ART-Q-14. 27363302>) (#<ART-Q-14. 27363321>) (#<ART-Q-14. 27363340>) (#<ART-Q-14. 27363357>) (#<ART-Q-14. 27363376>) (#<ART-Q-14. 27363415>) (#<ART-Q-14. 27363434>))
   Arg 1 (OPTION): NIL

TV:CONSTRAINT-FRAME-SET-EDGES:  (P.C. = 110)
   Arg 0 (CONSTRS): (((FED:FED-PANE . #<ART-Q-14. 27363453>) (FED:OTHER-SLAB . #<ART-Q-14. 27363244>)) (#<ART-Q-14. 27363244>) (#<ART-Q-14. 27363453>))
   Arg 1 (OPTION): NIL

TV:CONSTRAINT-FRAME-SET-EDGES:  (P.C. = 110)
   Arg 0 (CONSTRS): (((FED:CHARACTER-PANE . #<ART-Q-14. 27363167>) (FED:PROMPT-PANE . #<ART-Q-14. 27363206>) (FED:TOP-SECTION . #<ART-Q-14. 27363225>)) (#<ART-Q-14. 27363167>) (#<ART-Q-14. 27363206>) (#<ART-Q-14. 27363225>))
   Arg 1 (OPTION): NIL

(:DEFUN-METHOD TV:CONSTRAINT-FRAME-RECOMPUTE-CONFIGURATION):  (P.C. = 105)
   Arg 0 (SELF): #<FED Fed 2 1003103 deexposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:BASIC-CONSTRAINT-FRAME -- 11. IV's, 0. FL's 53023772>

(:METHOD TV:BASIC-CONSTRAINT-FRAME :SET-CONFIGURATION):  (P.C. = 30)
   Arg 0 (SELF): #<FED Fed 2 1003103 deexposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:BASIC-CONSTRAINT-FRAME -- 11. IV's, 0. FL's 53023772>
   Arg 2 (OPERATION): :SET-CONFIGURATION
   Arg 3 (NEW-CONFIG-NAME): :STANDARD

Rest of stack:
(:METHOD FED :UPDATE-BASE-CONFIG):  (P.C. = 61)
(:METHOD FED :SPECIFY-FONT):  (P.C. = 12)
(:DEFUN-METHOD FED:SELECT-FONT):  (P.C. = 47)
(:DEFUN-METHOD FED:FED-READ-FILE):  (P.C. = 74)
(:METHOD FED:BASIC-FED :COM-READ-ANY-FILE):  (P.C. = 22)
(:METHOD FED :COMMAND-LOOP):  (P.C. = 421)
FED:FED-TOP-LEVEL:  (P.C. = 65)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
25-Jan-85 15:19:26-EST,565;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 25 Jan 85 15:19-EST
Date: Friday, 25 January 1985, 15:16-EST
From: Webster Dove <dove at MIT-BUGS-BUNNY>
Subject: ? messages on the stack
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10, Experimental FPA 2.0,
Experimental UTIL 9.0, on Lisp Machine Tweety Pie:

This is not a bug.

I am using the function that finds self on the stack for debugging.  Has
anyone written or is there anyone who can tell me how to get the message
name from the same stack frame that self came from?
25-Jan-85 17:43:57-EST,1432;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 25 Jan 85 17:38-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 166533; Fri 25-Jan-85 17:37:59-EST
Date: Friday, 25 January 1985, 17:37-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: ? messages on the stack
To: Webster Dove <dove at MIT-BUGS-BUNNY>, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 25 Jan 85 15:16-EST from Webster Dove <dove at MIT-BUGS-BUNNY>
Message-ID: <850125173705.5.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Friday, 25 January 1985, 15:16-EST
    From: Webster Dove <dove at MIT-BUGS-BUNNY>

    In Symbolics 3600 System 242.356, Hardcopy 20.10, Experimental FPA 2.0,
    Experimental UTIL 9.0, on Lisp Machine Tweety Pie:

    This is not a bug.

    I am using the function that finds self on the stack for debugging.  Has
    anyone written or is there anyone who can tell me how to get the message
    name from the same stack frame that self came from?

What??  There is a function called si:%find-self-on-stack, but it
probably doesn't do exactly what you want.  Maybe
si:get-flavor-mapping-table-and-self to find the type with the flavor
you want.  Using the concepts in those INTERNAL functions you can get
the message name with (%p-contents-offset fp 2).

Maybe you should tell us what you are trying to do, as my answer is a
rather large bag of kludges.
26-Jan-85 10:26:32-EST,2116;000000000000
Received: from MIT-DUANE by MIT-OZ via Chaosnet; 26 Jan 85 10:26-EST
Date: Saturday, 26 January 1985, 10:24-EST
From: Ken Haase <KWH at MIT-OZ>
Subject: Pointer has no hash stash.
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10, ARLO 25.49, ARLOX 5.52,
FEP 22, on Lisp Machine Duane Allman:

While doing an SI:FULL-GC (preliminary to saving a band to go off-site).

>>Error: The object #<HOST POINTER 15140073> received a :PATHNAME-HASH-TABLE message, which went unclaimed.
         The rest of the message was ()
While in the function (:METHOD NET:OBJECT :UNCLAIMED-MESSAGE)  SI:FLAVOR-UNCLAIMED-MESSAGE  SI:INSTANCE-HASH-UNCLAIMED-MESSAGE

(:METHOD NET:OBJECT :UNCLAIMED-MESSAGE):  (P.C. = 31)
   Arg 0 (SELF): #<HOST POINTER 15140073>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NET:OBJECT -- 3. IV's, 1. FL's 52504505>
   Arg 2 (OPERATION): :UNCLAIMED-MESSAGE
   Arg 3 (MESSAGE): :PATHNAME-HASH-TABLE
   Rest arg (ARGS): NIL

SI:FLAVOR-UNCLAIMED-MESSAGE:  (P.C. = 20)
   Arg 0 (SELF): #<HOST POINTER 15140073>
   Arg 1 (IGNORE): NIL
   Rest arg (MESSAGE): (:PATHNAME-HASH-TABLE)

SI:INSTANCE-HASH-UNCLAIMED-MESSAGE:  (P.C. = 35)
   Arg 0 (SELF): #<HOST POINTER 15140073>
   Arg 1 (SELF-MAPPING-TABLE): NIL
   Rest arg (MESSAGE): NIL

SI:GC-PATHNAMES-RE-INTERN:  (P.C. = 52)

SI:*EVAL:  (P.C. = 370)
   Arg 0 (FORM): (SI:GC-PATHNAMES-RE-INTERN)

COND:  (P.C. = 23)
   Rest arg (CLAUSES): ((SI:*FULL-GC-FOR-SYSTEM-RELEASE* (SI:GC-PATHNAMES-RE-INTERN)) (T NIL))

SI:*EVAL:  (P.C. = 421)
   Arg 0 (FORM): (SI:DISPLACED (IF SI:*FULL-GC-FOR-SYSTEM-RELEASE* (SI:GC-PATHNAMES-RE-INTERN)) (COND (SI:*FULL-GC-FOR-SYSTEM-RELEASE* (SI:GC-PATHNAMES-RE-INTERN)) (T NIL)))

INITIALIZATIONS:  (P.C. = 42)
   Arg 0 (LIST-NAME): SI:AFTER-FULL-GC-INITIALIZATION-LIST
   Arg 1 (REDO-FLAG): T
   --Defaulted args:--
   Arg 2 (FLAG): T

Rest of stack:
SI:FULL-GC:  (P.C. = 202)
SI:*EVAL:  (P.C. = 370)
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 200)
SI:LISP-COMMAND-LOOP:  (P.C. = 115)
SI:LISP-TOP-LEVEL1:  (P.C. = 22)
SI:LISP-TOP-LEVEL:  (P.C. = 7)
26-Jan-85 15:54:29-EST,1993;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 26 Jan 85 15:54-EST
Date: Saturday, 26 January 1985, 15:52-EST
From: Webster Dove <dove at MIT-BUGS-BUNNY>
Subject: why find-self-and-msg-on-stack
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10, Experimental FPA 2.0,
Experimental UTIL 9.0, on Lisp Machine Tweety Pie:

I was just looking for a debugging msg shortcut.

(DEFUN %FIND-SELF-AND-MSG-ON-STACK ()
  (DO ((FP (SI:%STACK-FRAME-POINTER) (SI:FRAME-PREVIOUS-FRAME FP))) (NIL)
    (AND (NOT (ZEROP (SI:FRAME-INSTANCE-CALLED FP)))
	 (RETURN (CAR FP) (%P-CONTENTS-OFFSET FP 2.)))
    (AND (NOT (ZEROP (SI:FRAME-BOTTOM-BIT FP))) (RETURN NIL))))

(DEFUN DEBUG (FORMAT &REST ARGLIST &AUX PREFIX)
  "the debug message should return a string-prefix if debugging is on nil if not"
  (MULTIPLE-VALUE-BIND (SLF MSG) (%FIND-SELF-AND-MSG-ON-STACK)
    (WHEN (AND SLF (SETQ PREFIX (SEND SLF :DEBUG MSG)))
      (LEXPR-FUNCALL #'FORMAT ERROR-OUTPUT
		     (STRING-APPEND "~&" PREFIX ": " FORMAT) ARGLIST))))

(DEFMETHOD (KM :DEBUG) (MSG)
  (WHEN *DEBUG-KM* (FORMAT NIL "KM(~a)" MSG)))

These two fcns and method allow me to conveniently put debug msgs into a
flavor.  The :debug msg returns a string if it is being debugged.  The
debug form acts like format but prefices the containing instance and the
msg.  This saves me having to put the instance and msg into each debug
statement (which I need, to keep track of what I am seeing).

(DEFMETHOD (RULE :TRIGGER-P) (OBJECT &AUX (TYPE (TYPEP OBJECT)))
  "determine quickly whether this object might lead to bindings from this rule"
  (DEBUG "~a (type ~a)" OBJECT TYPE)
  (LET ((VARS (LOOP FOR (VAR VAR-TYPE) IN TYPE-ALIST WHEN (EQ TYPE VAR-TYPE) COLLECT VAR)))
    (LOOP WITH TRIGGERED = NIL
	  FOR VAR IN VARS DO			;always trigger
	  (UNLESS TRIGGERED
	    (DEBUG "var ~a triggers" VAR)
	    (SETQ TRIGGERED T))
	  (SEND SELF :ADD-TRIGGER VAR OBJECT)
	  FINALLY (RETURN TRIGGERED))))

26-Jan-85 17:48:33-EST,760;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 26 Jan 85 17:48-EST
Date: Saturday, 26 January 1985, 17:41-EST
From: Kent M Pitman <KMP at MIT-MC>
Subject: Time lost to WHO-AM-I server
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 System 242.356, ... on Lisp Machine Jim Morrison:

Periodically, my machine starts running/paging a lot in background seemingly
without provocation. I just now managed to notice it and do Select P P 
fast enough to see a WHO-AM-I server eating 35% of the machine for 15 seconds.
Is this reasonable? What's it doing -- asking Riverside? It seems to me that
if that information isn't instantly available, then random non-namespace-server
LispMs shouldn't be straining themselves trying to hunt down the information.
-kmp
26-Jan-85 18:00:28-EST,2873;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 26 Jan 85 18:00-EST
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 166851; Sat 26-Jan-85 18:00:03-EST
Date: Saturday, 26 January 1985, 17:59-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: why find-self-and-msg-on-stack
To: Webster Dove <dove at MIT-BUGS-BUNNY>
cc: BUG-LISPM at MIT-OZ
In-Reply-To: The message of 26 Jan 85 15:52-EST from Webster Dove <dove at MIT-BUGS-BUNNY>
Message-ID: <850126175927.3.MOON@EUPHRATES.SCRC.Symbolics.COM>

    Date: Saturday, 26 January 1985, 15:52-EST
    From: Webster Dove <dove at MIT-BUGS-BUNNY>

    In Symbolics 3600 System 242.356, Hardcopy 20.10, Experimental FPA 2.0,
    Experimental UTIL 9.0, on Lisp Machine Tweety Pie:

    I was just looking for a debugging msg shortcut.

    (DEFUN %FIND-SELF-AND-MSG-ON-STACK ()
      (DO ((FP (SI:%STACK-FRAME-POINTER) (SI:FRAME-PREVIOUS-FRAME FP))) (NIL)
	(AND (NOT (ZEROP (SI:FRAME-INSTANCE-CALLED FP)))
	     (RETURN (CAR FP) (%P-CONTENTS-OFFSET FP 2.)))
	(AND (NOT (ZEROP (SI:FRAME-BOTTOM-BIT FP))) (RETURN NIL))))

    (DEFUN DEBUG (FORMAT &REST ARGLIST &AUX PREFIX)
      "the debug message should return a string-prefix if debugging is on nil if not"
      (MULTIPLE-VALUE-BIND (SLF MSG) (%FIND-SELF-AND-MSG-ON-STACK)
	(WHEN (AND SLF (SETQ PREFIX (SEND SLF :DEBUG MSG)))
	  (LEXPR-FUNCALL #'FORMAT ERROR-OUTPUT
			 (STRING-APPEND "~&" PREFIX ": " FORMAT) ARGLIST))))

    (DEFMETHOD (KM :DEBUG) (MSG)
      (WHEN *DEBUG-KM* (FORMAT NIL "KM(~a)" MSG)))

    These two fcns and method allow me to conveniently put debug msgs into a
    flavor.  The :debug msg returns a string if it is being debugged.  The
    debug form acts like format but prefices the containing instance and the
    msg.  This saves me having to put the instance and msg into each debug
    statement (which I need, to keep track of what I am seeing).

    (DEFMETHOD (RULE :TRIGGER-P) (OBJECT &AUX (TYPE (TYPEP OBJECT)))
      "determine quickly whether this object might lead to bindings from this rule"
      (DEBUG "~a (type ~a)" OBJECT TYPE)
      (LET ((VARS (LOOP FOR (VAR VAR-TYPE) IN TYPE-ALIST WHEN (EQ TYPE VAR-TYPE) COLLECT VAR)))
	(LOOP WITH TRIGGERED = NIL
	      FOR VAR IN VARS DO			;always trigger
	      (UNLESS TRIGGERED
		(DEBUG "var ~a triggers" VAR)
		(SETQ TRIGGERED T))
	      (SEND SELF :ADD-TRIGGER VAR OBJECT)
	      FINALLY (RETURN TRIGGERED))))

If you make DEBUG a macro instead of a function, you will not need so much kludgery.
Viz:
    (DEFMACRO DEBUG (FORMAT &REST ARGLIST)
      "the debug message should return a string-prefix if debugging is on nil if not"
      `(LET ((PREFIX (SEND SELF :DEBUG SI:OPERATION)))
	 (WHEN PREFIX
	   (FORMAT ERROR-OUTPUT
		   (STRING-APPEND "~&" PREFIX ": " ,FORMAT)
		   ,@ARGLIST))))
27-Jan-85 15:07:56-EST,1833;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 27 Jan 85 15:07-EST
Received: from SCRC-HARLEM by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 126479; Sun 27-Jan-85 14:44:24-EST
Date: Sunday, 27 January 1985, 14:44-EST
From: Joseph R Goldstone <joseph at SCRC-QUABBIN>
Subject: Time lost to WHO-AM-I server
To: Kent M Pitman <KMP at MIT-MC>, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 26 Jan 85 17:41-EST from Kent M Pitman <KMP at MIT-MC>
Message-ID: <850127144422.1.JOSEPH@HARLEM.SCRC.Symbolics.COM>

    Date: Saturday, 26 January 1985, 17:41-EST
    From: Kent M Pitman <KMP at MIT-MC>

    In Symbolics 3600 System 242.356, ... on Lisp Machine Jim Morrison:

    Periodically, my machine starts running/paging a lot in background seemingly
    without provocation. I just now managed to notice it and do Select P P 
    fast enough to see a WHO-AM-I server eating 35% of the machine for 15 seconds.
    Is this reasonable? What's it doing -- asking Riverside? It seems to me that
    if that information isn't instantly available, then random non-namespace-server
    LispMs shouldn't be straining themselves trying to hunt down the information.

The present algorithm is for the booted host to send WHO-AM-I requests to hosts
that it "remembers" as having offered that service.  If none respond, then it 
broadcasts the query.

I think this went in around 5.2, but I'm not sure.  Even if it did, the host that
asked the question could still be running 5.1 (e.g. it could be a CADR).  Or, it
could be a 5.2 world that was created before Reagan was inaugurated (so it doesn't
know that Reagan offers WHO-AM-I service) and the microwave could be down.

Summary: The problem was "solved" some time ago; the present difficulty is due
to the solution not having completely diffused through MIT.
27-Jan-85 15:36:41-EST,2664;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 27 Jan 85 15:36-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 166993; Sun 27-Jan-85 15:36:42-EST
Date: Sunday, 27 January 1985, 15:35-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: Time lost to WHO-AM-I server
To: Joseph R Goldstone <joseph at SCRC-QUABBIN>,
    Kent M Pitman <KMP at MIT-MC>, BUG-LISPM at MIT-OZ
In-Reply-To: <850127144422.1.JOSEPH@HARLEM.SCRC.Symbolics.COM>
Message-ID: <850127153515.8.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Sunday, 27 January 1985, 14:44-EST
    From: Joseph R Goldstone <joseph at SCRC-QUABBIN>

	Date: Saturday, 26 January 1985, 17:41-EST
	From: Kent M Pitman <KMP at MIT-MC>

	In Symbolics 3600 System 242.356, ... on Lisp Machine Jim Morrison:

	Periodically, my machine starts running/paging a lot in background seemingly
	without provocation. I just now managed to notice it and do Select P P 
	fast enough to see a WHO-AM-I server eating 35% of the machine for 15 seconds.
	Is this reasonable? What's it doing -- asking Riverside? It seems to me that
	if that information isn't instantly available, then random non-namespace-server
	LispMs shouldn't be straining themselves trying to hunt down the information.

    The present algorithm is for the booted host to send WHO-AM-I requests to hosts
    that it "remembers" as having offered that service.  If none respond, then it 
    broadcasts the query.

    I think this went in around 5.2, but I'm not sure.  Even if it did, the host that
    asked the question could still be running 5.1 (e.g. it could be a CADR).  Or, it
    could be a 5.2 world that was created before Reagan was inaugurated (so it doesn't
    know that Reagan offers WHO-AM-I service) and the microwave could be down.

    Summary: The problem was "solved" some time ago; the present difficulty is due
    to the solution not having completely diffused through MIT.

I believe there was another change that may not have made it into 5.2.
If a random machine DOES get a WHO-AM-I, it turns off validity checking
while trying to convert the address to the host.  Thus, it does a very
fast lookup that should page minimally and could easily fail.  Before
this change, it would (and so would all the other user machines) have a
WHO-AM-I server contacting a namespace server (and possibly overloading
it).  Thus, you could always tell when somebody booted because your
machine would run for a few seconds.

Namespace servers, being namespace servers, do not turn off validity
checking, so they are guarenteed to give a valid reply.
27-Jan-85 19:32:26-EST,1827;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 27 Jan 85 19:31-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 167045; Sun 27-Jan-85 19:31:01-EST
Date: Sunday, 27 January 1985, 19:29-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: FUNCTION-SPEC-REMPROP of methods doesn't!
To: Charles Hornig <Hornig at SCRC-STONY-BROOK>, TIM at MIT-MC,
    BUG-LISPM at MIT-OZ
In-Reply-To: <850124125437.1.HORNIG@PEACE.SCRC.Symbolics.COM>
References: The message of 24 Jan 85 05:03-EST from TIM at MIT-MC,
            The message of 24 Jan 85 05:03-EST from TIM at MIT-MC,
            <850124125437.1.HORNIG@PEACE.SCRC.Symbolics.COM>,
            <850124135016.2.NFEP@NEPONSET.SCRC.Symbolics.COM>
Message-ID: <850127192928.0.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Thu, 24 Jan 85 12:54 EST
    From: Charles Hornig <Hornig at SCRC-STONY-BROOK>

	Date: Thursday, 24 January 1985, 05:03-EST
	From:  <TIM at MIT-MC>

	In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 22, on Lisp Machine Sid Vicious:

	It defaults to FUNCTION-SPEC-DEFAULT-HANDLER which does something completely random!


	  (DEFUN METHOD-FUNCTION-SPEC-HANDLER (FUNCTION FUNCTION-SPEC &OPTIONAL ARG1 ARG2 &AUX FL)
	    .
	    .
			 (SELECTQ FUNCTION
			   .
			   .
			   (GET (AND METH (GET (LOCF (METH-PLIST METH)) ARG1)))
			   (PUTPROP (PUTPROP (LOCF (METH-PLIST METH)) ARG1 ARG2))
			   **** what about remprop? ****
			   (OTHERWISE
			     (FUNCTION-SPEC-DEFAULT-HANDLER FUNCTION FUNCTION-SPEC ARG1 ARG2)))
	    .
	    .
	    .)

    Fixed in the source.  
Also fixed for 6.0.
    The fix is to add the clause
		       (REMPROP (REMPROP (LOCF (METH-PLIST METH)) ARG1))
    to the SELECTQ.
I also added the same clause to the handler for DEFUN-METHOD.
27-Jan-85 21:06:34-EST,1670;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 27 Jan 85 21:06-EST
Date: Sunday, 27 January 1985, 21:02-EST
From: Kent M Pitman <KMP at MIT-MC>
Subject: Disembodied property lists
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 System 242.356 ... on Lisp Machine Jimi Hendrix:

If disembodied plists are to be at all useful, PROPERTY-CELL-LOCATION 
should work on them. In particular, it seems to me that:

    (SETF (PLIST '(NIL FOO BAR)) '(BAZ QUUX))

should work. It doesn't. It blows out as in:

    >>Trap: The argument given to the PROPERTY-CELL-LOCATION instruction,
	    (NIL FOO BAR), was not a symbol or NIL.
    While in the function SETPLIST  SI:*EVAL  SI:LISP-COMMAND-LOOP-INTERNAL

    SETPLIST:  (P.C. = 2)
       Arg 0 (X): (NIL FOO BAR)
       Arg 1 (L): (BAZ QUUX)

    SI:*EVAL:  (P.C. = 370)
       Arg 0 (FORM): (SETF (PLIST (QUOTE (NIL FOO BAR))) (QUOTE (BAZ QUUX)))

    ...etc

This same problem occurs if you do:

    (SETQ X '((FOO BAR BAZ QUUX)))
    (SETQ Y (LOCF (CAR X)))
    (SETF (PLIST Y) '(...))

Note that in both of these cases, PLIST, GET, and PUTPROP work just fine.
It's only SETPLIST that's making trouble.

It would also be nice if there were a function MAKE-PLIST which gave back a
locative to a disembodied property list. I am also somewhat troubled by
having to do (NCONS NIL) to make them in the first place, but I don't
really feel comfortable consing gensyms. Actually, I suppose I'd be better
off doing (LOCF (CAR (LIST NIL))) than doing (NCONS NIL), which is another
reason for making a MAKE-PLIST function -- so that the memory allocation
could be made maximally efficient.
-kmp
27-Jan-85 21:43:57-EST,773;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 27 Jan 85 21:43-EST
Date: Sunday, 27 January 1985, 21:38-EST
From: Kent M Pitman <KMP at MIT-MC>
Subject: Wording of notification from doing Function Control-A
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 System 242.356 ... on Lisp Machine Jimi Hendrix:

I typed Function Control-A (by accident) and it said it had arrested
all other processes. I was pleased it told me how to unarrest them
but for the fact that I didn't read the message correctly. It says
something like:
 Type Function - Control-A to unarrest them.
I read that as <Function><Control-A> figuring it was just badly syntaxed.
I think it should say
 Type Function Minus Control-A to unarrest them.
so that the minus doesn't get lost in the wash.
27-Jan-85 22:34:52-EST,687;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 27 Jan 85 22:34-EST
Date: Sunday, 27 January 1985, 22:32-EST
From: Kent M Pitman <KMP at MIT-MC>
Subject: Menu blinkers touch letters at top but not sides or bottom.
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 System 242.356 ... on Lisp Machine Jimi Hendrix:

In a menu (with the Jess14 font), the mouse recognition blinker touches
the top of the capital letters but leaves one pixel of gap on all other
sides of letters, which I find fairly distracting. I wish it would leave
a pixel on all four sides. (This problem is probably not unique to the
Jess14 font; it just happens to be that I didn't try it with other
fonts.) -kmp
27-Jan-85 22:53:37-EST,1222;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 27 Jan 85 22:53-EST
Date: 27 January 1985 22:49-EST
From: Tim McNerney <TIM @ MIT-MC>
Subject:  Sectionization of user-defined fuction-defining special forms
To: DCP @ SCRC-QUABBIN
cc: BUG-LISPM @ MIT-MC
In-reply-to: Msg of Sun 27 Jan 85 20:15 EST from David C. Plummer in disguise <DCP at SCRC-QUABBIN.ARPA>

        Date: 24 January 1985 17:50-EST
        From: Tim McNerney <TIM @ MIT-MC>

        Re:  ZWEI:SYMBOL-TO-STRING

    Date: Sun, 27 Jan 85 20:15 EST
    From: David C. Plummer in disguise <DCP at SCRC-QUABBIN.ARPA>

    This function doesn't exist in my world.

Oops, I meant ZWEI:SYMBOL-FROM-STRING.  Now the following should make more sense:

In this function there is the constant list:

("(DEFMETHOD" 12 NIL) "(DEFWRAPPER" 13 :WRAPPER) "(DEFWHOPPER" 13 :WHOPPER))

It is used to turn the abbreviated function spec in the defining line into
a real function spec.  If this were put in a special variable, then it
would be possible to PUSH onto this list data about new method-defining
special forms so that sectionizing and m-. could would work right on them.
(Its "usage" could be something like zwei:*lisp-indent-offset-alist*)
28-Jan-85 09:33:16-EST,1215;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 28 Jan 85 09:33-EST
Received: from SCRC-PEACE by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 167229; Mon 28-Jan-85 09:32:29-EST
Date: Mon, 28 Jan 85 09:31 EST
From: Charles Hornig <Hornig at SCRC-STONY-BROOK>
Subject: Pointer has no hash stash.
To: Ken Haase <KWH at MIT-OZ>, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 26 Jan 85 10:24-EST from Ken Haase <KWH at MIT-OZ>
Message-ID: <850128093120.6.HORNIG@PEACE.SCRC.Symbolics.COM>

    Date: Saturday, 26 January 1985, 10:24-EST
    From: Ken Haase <KWH at MIT-OZ>

    In Symbolics 3600 System 242.356, Hardcopy 20.10, ARLO 25.49, ARLOX 5.52,
    FEP 22, on Lisp Machine Duane Allman:

    While doing an SI:FULL-GC (preliminary to saving a band to go off-site).

    >>Error: The object #<HOST POINTER 15140073> received a :PATHNAME-HASH-TABLE message, which went unclaimed.
	     The rest of the message was ()
    While in the function (:METHOD NET:OBJECT :UNCLAIMED-MESSAGE)  SI:FLAVOR-UNCLAIMED-MESSAGE  SI:INSTANCE-HASH-UNCLAIMED-MESSAGE

Fixed in release 6.  In the mean time, you should just splice Pointer's
host object (which is bogus) from FS:*PATHNAME-HOST-LIST*.
28-Jan-85 12:56:01-EST,2411;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 28 Jan 85 12:55-EST
Date: Monday, 28 January 1985, 12:39-EST
From: Webster Dove <dove at MIT-BUGS-BUNNY>
Subject: nil namespace arg
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10, Experimental FPA 2.0,
Experimental UTIL 9.0, on Lisp Machine Tweety Pie:

I was trying (lgp:write-lgp-record-file-from-press-file ">dove>junk.press" "dspg-lgp")

>>Error: The symbol NIL has an invalid function definition
While in the function NIL  NETI:FIND-OBJECT-NAMED-IN-NAMESPACE  NET:FIND-OBJECT-NAMED

NIL:
   Arg 0: :GET-NAME-ENTRY
   Arg 1: :CLASS
   Arg 2: :HOST
   Arg 3: NIL

NETI:FIND-OBJECT-NAMED-IN-NAMESPACE:  (P.C. = 27)
   Arg 0 (CLASS): :CLASS
   Arg 1 (NAME): :HOST
   Arg 2 (NAMESPACE): NIL
   Arg 3 (ERROR-P): NIL

NET:FIND-OBJECT-NAMED:  (P.C. = 46)
   Arg 0 (CLASS): :CLASS
   Arg 1 (NAME): :HOST
   --Defaulted args:--
   Arg 2 (ERROR-P): T

NETI:FINDING-OBJECTS:  (P.C. = 42)
   Arg 0 (CLASS): :HOST
   Arg 1 (PROPERTY-LIST-initialization): (:SPOOLED-PRINTER ((#<PRINTER dspg-lgp 14634535> :*)))
   Arg 2 (FUNCTION-initialization): #<DTP-COMPILED-FUNCTION (:INTERNAL NET:FIND-OBJECTS-FROM-PROPERTY-LIST 0) 11211154>
   Rest arg (OTHER-ARGS-initialization): (#<DTP-LOCATIVE 140256> #<DTP-LOCATIVE 140257>)

NET:FIND-OBJECTS-FROM-PROPERTY-LIST:  (P.C. = 15)
   Arg 0 (CLASS): :HOST
   Rest arg (PROPERTY-LIST): (:SPOOLED-PRINTER ((#<PRINTER dspg-lgp 14634535> :*)))

SI:PRINTER-SPOOLER-HOSTS:  (P.C. = 47)
   Arg 0 (PRINTER): #<PRINTER dspg-lgp 14634535>

SI:GET-HARDCOPY-DEVICE-OUTPUT-STREAM:  (P.C. = 4)
   Arg 0 (DEVICE): #<PRINTER dspg-lgp 14634535>
   Arg 1 (OPTIONS): (:MARGINS NIL :PRESS-FONTS (("TIMESROMAND" 0 30 0) ("NEWVEC" 0 10 0)) :BANNER-FILE-NAME "TWEETY-PIE:>dove>junk.press" :BANNER-CREATION-DATE 23734012250)

SI:MAKE-HARDCOPY-STREAM:  (P.C. = 23)
   Arg 0 (DEVICE): #<PRINTER dspg-lgp 14634535>
   Rest arg (OPTIONS): (:MARGINS NIL :PRESS-FONTS (("TIMESROMAND" 0 30 0) ("NEWVEC" 0 10 0)) :BANNER-FILE-NAME "TWEETY-PIE:>dove>junk.press" :BANNER-CREATION-DATE 23734012250)

Rest of stack:
PRESS:HARDCOPY-PRESS-FILE:  (P.C. = 143)
LGP:WRITE-LGP-RECORD-FILE-FROM-PRESS-FILE:  (P.C. = 10)
SI:*EVAL:  (P.C. = 370)
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 200)
SI:LISP-COMMAND-LOOP:  (P.C. = 115)
SI:LISP-TOP-LEVEL1:  (P.C. = 22)
SI:LISP-TOP-LEVEL:  (P.C. = 7)
28-Jan-85 12:56:48-EST,1642;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 28 Jan 85 12:56-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 167356; Mon 28-Jan-85 12:44:25-EST
Date: Mon, 28 Jan 85 12:42 EST
From: David C. Plummer in disguise <DCP@SCRC-QUABBIN.ARPA>
Subject: Sectionization of user-defined fuction-defining special forms
To: Tim McNerney <TIM@MIT-MC.ARPA>, DCP@SCRC-QUABBIN.ARPA
cc: BUG-LISPM@MIT-MC.ARPA
In-Reply-To: The message of 27 Jan 85 22:49-EST from Tim McNerney <TIM at MIT-MC>
Message-ID: <850128124239.3.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: 27 January 1985 22:49-EST
    From: Tim McNerney <TIM @ MIT-MC>

	    Date: 24 January 1985 17:50-EST
	    From: Tim McNerney <TIM @ MIT-MC>

	    Re:  ZWEI:SYMBOL-TO-STRING

	Date: Sun, 27 Jan 85 20:15 EST
	From: David C. Plummer in disguise <DCP at SCRC-QUABBIN.ARPA>

	This function doesn't exist in my world.

    Oops, I meant ZWEI:SYMBOL-FROM-STRING.  Now the following should make more sense:

    In this function there is the constant list:

    ("(DEFMETHOD" 12 NIL) "(DEFWRAPPER" 13 :WRAPPER) "(DEFWHOPPER" 13 :WHOPPER))

    It is used to turn the abbreviated function spec in the defining line into
    a real function spec.  If this were put in a special variable, then it
    would be possible to PUSH onto this list data about new method-defining
    special forms so that sectionizing and m-. could would work right on them.
    (Its "usage" could be something like zwei:*lisp-indent-offset-alist*)

This is probably a reasonable idea in general.  However, time
constraints do not let us slide this into 6.0.
28-Jan-85 13:20:48-EST,1153;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 28 Jan 85 13:20-EST
Received: from SCRC-PEACE by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 167387; Mon 28-Jan-85 13:23:05-EST
Date: Mon, 28 Jan 85 13:20 EST
From: Charles Hornig <Hornig at SCRC-STONY-BROOK>
Subject: nil namespace arg
To: Webster Dove <dove at MIT-BUGS-BUNNY>, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 28 Jan 85 12:39-EST from Webster Dove <dove at MIT-BUGS-BUNNY>
Message-ID: <850128132046.1.HORNIG@PEACE.SCRC.Symbolics.COM>

    Date: Monday, 28 January 1985, 12:39-EST
    From: Webster Dove <dove at MIT-BUGS-BUNNY>

    In Symbolics 3600 System 242.356, Hardcopy 20.10, Experimental FPA 2.0,
    Experimental UTIL 9.0, on Lisp Machine Tweety Pie:

    I was trying (lgp:write-lgp-record-file-from-press-file ">dove>junk.press" "dspg-lgp")

    >>Error: The symbol NIL has an invalid function definition
    While in the function NIL  NETI:FIND-OBJECT-NAMED-IN-NAMESPACE  NET:FIND-OBJECT-NAMED

Tracking this down at this point would be pretty hopeless, I'm afraid.
This code was all scrapped for release 6.

Does this happen consistently?
28-Jan-85 17:14:01-EST,1076;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 28 Jan 85 17:13-EST
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 167560; Mon 28-Jan-85 16:38:41-EST
Date: Monday, 28 January 1985, 16:36-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: Menu blinkers touch letters at top but not sides or bottom.
To: Kent M Pitman <KMP at MIT-MC>
cc: BUG-LISPM at MIT-OZ
In-Reply-To: The message of 27 Jan 85 22:32-EST from Kent M Pitman <KMP at MIT-MC>
Message-ID: <850128163657.3.MOON@EUPHRATES.SCRC.Symbolics.COM>

    Date: Sunday, 27 January 1985, 22:32-EST
    From: Kent M Pitman <KMP at MIT-MC>

    In Symbolics 3600 System 242.356 ... on Lisp Machine Jimi Hendrix:

    In a menu (with the Jess14 font), the mouse recognition blinker touches
    the top of the capital letters but leaves one pixel of gap on all other
    sides of letters, which I find fairly distracting. I wish it would leave
    a pixel on all four sides.

Try it on Reagan (running Release 6 beta test) and let us know if you think it is better.
28-Jan-85 17:40:28-EST,2465;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 28 Jan 85 17:40-EST
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 167625; Mon 28-Jan-85 17:38:59-EST
Date: Monday, 28 January 1985, 17:37-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: Disembodied property lists
To: Kent M Pitman <KMP at MIT-MC>
cc: BUG-LISPM at MIT-OZ
In-Reply-To: The message of 27 Jan 85 21:02-EST from Kent M Pitman <KMP at MIT-MC>
Message-ID: <850128173716.1.MOON@EUPHRATES.SCRC.Symbolics.COM>

    Date: Sunday, 27 January 1985, 21:02-EST
    From: Kent M Pitman <KMP at MIT-MC>

    In Symbolics 3600 System 242.356 ... on Lisp Machine Jimi Hendrix:

    If disembodied plists are to be at all useful, PROPERTY-CELL-LOCATION 
    should work on them. 

Not so: PROPERTY-CELL-LOCATION is an operation on symbols.

			 In particular, it seems to me that:

	(SETF (PLIST '(NIL FOO BAR)) '(BAZ QUUX))

    should work. It doesn't. It blows out as in:

	>>Trap: The argument given to the PROPERTY-CELL-LOCATION instruction,
		(NIL FOO BAR), was not a symbol or NIL.
	While in the function SETPLIST  SI:*EVAL  SI:LISP-COMMAND-LOOP-INTERNAL

	SETPLIST:  (P.C. = 2)
	   Arg 0 (X): (NIL FOO BAR)
	   Arg 1 (L): (BAZ QUUX)

	SI:*EVAL:  (P.C. = 370)
	   Arg 0 (FORM): (SETF (PLIST (QUOTE (NIL FOO BAR))) (QUOTE (BAZ QUUX)))

This is a bug in SETPLIST rather than in PROPERTY-CELL-LOCATION.  Our
PLIST function successfully imitates pdp-10 Maclisp's, but our SETPLIST
function doesn't.

    ....Note that in both of these cases, PLIST, GET, and PUTPROP work just fine.
    It's only SETPLIST that's making trouble.

Ayup.

    It would also be nice if there were a function MAKE-PLIST which gave back a
    locative to a disembodied property list. I am also somewhat troubled by
    having to do (NCONS NIL) to make them in the first place, but I don't
    really feel comfortable consing gensyms. Actually, I suppose I'd be better
    off doing (LOCF (CAR (LIST NIL))) than doing (NCONS NIL), which is another
    reason for making a MAKE-PLIST function -- so that the memory allocation
    could be made maximally efficient.

As soon as you do a PUTPROP the (NCONS NIL) method has more efficient memory
allocation.

I guess what all this really shows is that it wasn't such a bad idea for
Common Lisp to flush disembodied property lists entirely.  But I agree that
SETPLIST needs to be fixed.
28-Jan-85 19:53:34-EST,825;000000000000
Received: from MIT-HTVAX by MIT-OZ via Chaosnet; 28 Jan 85 19:53-EST
Received: from MIT-MICKEY-MOUSE by MIT-HTVAX (4.12/4.7) with CHAOS 
	id AA15093; Mon, 28 Jan 85 19:53:59 est
Date: Monday, 28 January 1985, 19:51-EST
From: Jonathan Connell <JHC@MIT-OZ>
Subject: control stack overflow
To: bug-lispm@MIT-OZ

Hi,
I wrote a highly recursive program which eats up stack space.
When I get "Control Stack Overflow" errors I tell it to continue with a larger stack. 
This however causes all sorts of problems. I get errors like:
   <DTP-NULL some address> READ FROM same address IN [... WORKING-MEMEORY-AREA]
which asks for some value to use as <DTP-LOCATIVE same address>. I tell it NIL.
I also get scheduler problems and have to "arrest" some processes.
What should I do (besides writing iteratively)?

-- JHC
28-Jan-85 21:52:50-EST,2537;000000000000
Received: from MIT-JIMI by MIT-OZ via Chaosnet; 28 Jan 85 21:52-EST
Date: Monday, 28 January 1985, 21:54-EST
From: Steve Strassmann <STRAZ at MIT-OZ>
Subject: maybe a fencepost bug in CLRHASH-EQUAL
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 18, on Lisp Machine Jimi Hendrix:

There seems to be a fencepost bug in CLRHASH-EQUAL.

>>Trap: The subscript given to the SYS:FAST-ASET instruction, 60483., on #<ART-Q-20161.-3. 4652571> was beyond the length, 60483..
While in the function COPY-ARRAY-PORTION  (:METHOD SI:EQUAL-HASH-TABLE :CLEAR-HASH)  CLRHASH-EQUAL

COPY-ARRAY-PORTION:  (P.C. = 51)
   Arg 0 (FROM-ARRAY): #<ART-Q-20161.-3. 4652571>
   Arg 1 (FROM-START): 0.
   Arg 2 (FROM-END): 0.
   Arg 3 (TO-ARRAY): #<ART-Q-20161.-3. 4652571>
   Arg 4 (TO-START): 0.
   Arg 5 (TO-END): 80277.
   Local 6 (FROM): #<ART-Q-20161.-3. 4652571>
   Local 7: 1342178854.
   Local 8: #<DTP-LOCATIVE 4652577>
   Local 9: 60483.
   Local 10 (TO): #<ART-Q-20161.-3. 4652571>
   Local 11: 1342178854.
   Local 12: #<DTP-LOCATIVE 4652577>
   Local 13: 60483.
   Local 14 (FROM-LENGTH): 0.
   Local 15 (TO-LENGTH): 80277.
   Local 16 (INDEX-FROM): 0.
   Local 17 (INDEX-TO): 60483.
   Local 18 (NULL-ELEM): NIL

(:METHOD SI:EQUAL-HASH-TABLE :CLEAR-HASH):  (P.C. = 42)
   Arg 0 (SELF): #<EQUAL-HASH-TABLE 4652560>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:EQUAL-HASH-TABLE -- 8. IV's, 0. FL's 52401740>
   Arg 2 (OPERATION): :CLEAR-HASH
   Arg 3 (FORCE-P): NIL

CLRHASH-EQUAL:  (P.C. = 6)
   Arg 0 (HASH-TABLE): #<EQUAL-HASH-TABLE 4652560>
   --Defaulted args:--
   Arg 1 (FORCE-P): NIL

SI:*EVAL:  (P.C. = 370)
   Arg 0 (FORM): (CLRHASH-EQUAL SPELL-PHONE)

SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 200)
   Rest arg: (:NAME "Breakpoint ZMACS" :ABORTED-FUNCTION SI:BREAK-ABORTED-FUNCTION :READ-FUNCTION SI:BREAK-READ-FUNCTION)

BREAK:  (P.C. = 173)
   Arg 0 (TAG): ZWEI:ZMACS
   --Defaulted args:--
   Arg 1 (CONDITIONAL): T

(:DEFUN-METHOD ZWEI:COM-BREAK):  (P.C. = 112)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 56044432>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:EDITOR -- 12. IV's, 0. FL's 56044271>

ZWEI:COM-BREAK:  (P.C. = 12)
   Rest arg (ARGS): NIL

Rest of stack:
ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 214)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 41)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
28-Jan-85 23:53:19-EST,1553;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 28 Jan 85 23:53-EST
Date: Monday, 28 January 1985, 23:45-EST
From: Kent M Pitman <KMP at MIT-MC>
Subject: That mandatory Peek refresher course
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 System 242.356 ... on Lisp Machine Apiary-7:

I strongly object to the way Peek starts up.  The tutorial it offers is
an unnecessary intrusion and takes far too long to be displayed.

There are no other programs in the system which when entered burden
the user with a tutorial. Peek is already friendlier than most programs
because it has a Help menu item in its standard display. That should be
completely adequate.

It should surely be the case that if I enter Peek and there is
typeahead (as in having done Select P P), that Peek should withhold 
its usual help text and go immediately to the meat of the matter.
Frequently there is something going on in background that I want to
study and sometimes before I can get into Peek and get the mode 
changed it has gone away. This can be really frustrating.

In the worst case, it should be the case that if another mode is selected
(by keyboard or mouse), any display of help information which has not yet 
reached the screen should be flushed immediately. That is, the commands
should work by interrupt; they should not just sit on some input stream
waiting to be seen when the toplevel loop is finally returned to.

This kind of rapid response is essential to a tool which is going to tell
me anything useful about what's going on.
-kmp
29-Jan-85 01:36:19-EST,1594;000000000000
Received: from MIT-APIARY-7 by MIT-OZ via Chaosnet; 29 Jan 85 01:36-EST
Date: Tuesday, 29 January 1985, 01:36-EST
From: Kent M Pitman <KMP at MIT-MC>
Subject: Sending mail about system patches
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 System 242.356, PA 7.0x, ... on Lisp Machine Apiary-7:

I really like all the new code for keeping track of patch comments.

It would be nice if there were a way that one could tell it in the
DEFSYSTEM form what default address should be used for mail about
patches. If you ask me, Doc-Changes is not a reasonable default 
since it is almost universally not useful and even if it existed
would get tons of mis-routed mail sent to it. Perhaps it should be
 {short-name-of-system}-Doc-Changes
eg,      SYS-Doc-Changes (for System) 
      or PA-Doc-Changes  (for Programmer's Apprentice)
Don't be tempted to use the long name since it could contain
characters that would test the limits of many mail systems' quoting
conventions.

Note also that successfully building a new version of a system might
also want to ask if I want to send mail about the new system.
My guess is that such mail could best be addressed as
 To: INFO-{short-name-of-system}
 Cc: {short-name-of-system}-DOC-CHANGES
since it probably needs to reach the documentation people, but might
also have more reason to go to the "real users". Arguably, this could
just go to ...-DOC-CHANGES, though, and mail to INFO-... might need 
to be more carefully worded than someone would be willing to do after
nursing a large system through a major recompilation.

-kmp
29-Jan-85 01:47:54-EST,1046;000000000000
Received: from MIT-APIARY-7 by MIT-OZ via Chaosnet; 29 Jan 85 01:47-EST
Date: Tuesday, 29 January 1985, 01:48-EST
From: Kent M Pitman <KMP at MIT-MC>
Subject: Visual harmony: "field" vs "file" in c-X c-B
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 System 242.356, ... on Lisp Machine Apiary-7:

This obviously is a low-priority issue, but I'll mention it 
because I become actively conscious of it a lot. Whenever I see:

    means field truncated

at the bottom of a buffer listing done by c-X c-B (List Buffers),
my eye always catches on it because I misread it as

    means file truncated

I suppose this is because I see a lot of file names and my visual
system is primed for the word "file" at that point. Anyway, there
is really no typo, but an alarm goes off in my head anyway which
causes me to have to consciously control my lowlevel urge to panic.
I wonder if someone could just change the word "field" to something
more distinctive, such as "buffer name" or just "name". eg,

    means name truncated

-kmp
29-Jan-85 02:01:33-EST,780;000000000000
Received: from MIT-APIARY-7 by MIT-OZ via Chaosnet; 29 Jan 85 02:01-EST
Date: Tuesday, 29 January 1985, 02:01-EST
From: Kent M Pitman <KMP at MIT-MC>
Subject: Sending mail about patches before patches are finished
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 System 242.356, ... on Lisp Machine Apiary-7:

I'm curious why the offer to send mail about a patch comes before compiling
it rather than after. Since the compilation might have bugs that would
keep it from being released or since the compilation might not finish due
to some machine going down, it seems to me that it would make more sense
to announce the patch after compiling it. The order I suggest is 
 Write the patch buffer.
 Ask about the comment.
 Compile the patch file.
 Ask about sending mail.
29-Jan-85 02:27:37-EST,3338;000000000000
Received: from MIT-APIARY-7 by MIT-OZ via Chaosnet; 29 Jan 85 02:27-EST
Date: Tuesday, 29 January 1985, 02:26-EST
From: Kent M Pitman <KMP at MIT-MC>
Subject: ZMACS left dead after 1st arg to ARRAY-LEADER was NIL in ZWEI:PLINE-OF-POINT
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10,
Experimental Programmer's Apprentice 7.0, FEP 18, on Lisp Machine Apiary-7:

I hadn't done anything tricky. I'd been adding some patches and was doing
m-X Compiled Changed Definitions
and it got an error about unbalanced parens or some such. I did m-> from
the position I'd been left at and got some error like:
 "The BP you've gotten to is not in the interval being edited."
By typing c-Z followed quickly by Escape (Prefix Meta) -- which suppressed
redisplay long enough for me to type another char (I could never have
shifted bucky bits fast enough) -- and then a "<" to get to the beginning
of the buffer. This time it gave me the error you see the backtrace for
below. My real gripe is that no useful proceed options were provided.
There should be something which is willing to correct the state of my 
window so that I am left with something I can legitimately exit. By typing
c-Z c-X very fast, I was able to get a Control-X: prompt and type B, 
letting me get to another buffer, but I later typed c-m-L before realizing
what I'd done and got back into this error. 

I can't imagine that a novice would know to do much else besides boot his
machine at this point. It seems to me extremely important that this sort
of stuff trap errors quietly.

>>Trap: The first argument given to the ARRAY-LEADER instruction, NIL, was not an array.
While in the function ZWEI:PLINE-OF-POINT  ZWEI:REDISPLAY  ZWEI:REDISPLAY-ALL-WINDOWS

ZWEI:PLINE-OF-POINT:  (P.C. = 102)
   Arg 0 (IN-BOUNDS-P): T
   Arg 1 (WINDOW): #<WINDOW 32071076>
   Arg 2 (POINT): (";; -*- Mode:LISP; Package:KBE; Base:10; Fonts:MEDFNB; -*-" 0. :NORMAL)
   Local 3 (START-BP): ("			     nil ,seg-ref))" 0. :NORMAL)
   Local 4 (POINT-LINE): ";; -*- Mode:LISP; Package:KBE; Base:10; Fonts:MEDFNB; -*-"
   Local 5 (POINT-INDEX): 0.
   Local 6 (TOP-LINE): "			     nil ,seg-ref))"
   Local 7 (TOP-INDEX): 0.
   Local 8 (SHEET): #<ZMACS-WINDOW-PANE Zmacs Window Pane 4 704123 exposed>
   Local 9 (POINT-PLINE): NIL

ZWEI:REDISPLAY:  (P.C. = 251)
   Arg 0 (WINDOW): #<WINDOW 32071076>
   --Defaulted args:--
   Arg 1 (RECENTER-TYPE): :POINT
   Arg 2 (RC1): NIL
   Arg 3 (RC2): NIL
   Arg 4 (FORCE-TO-COMPLETION-P): NIL

ZWEI:REDISPLAY-ALL-WINDOWS:  (P.C. = 34)
   --Defaulted args:--
   Arg 0 (FORCE-TO-COMPLETION-P): NIL
   Arg 1 (SELECT-P): T

(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 140)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 56044432>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:EDITOR -- 12. IV's, 0. FL's 56044271>
   Arg 2 (OPERATION): :EDIT
   --Defaulted args:--
   Arg 3 (TOP-LEVEL-P): T
   Arg 4 (DESCRIPTION): NIL

(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 41)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 56044432>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:TOP-LEVEL-EDITOR -- 12. IV's, 1. FL's 60246144>
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)

SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
   Arg 0 (IGNORE): NIL
29-Jan-85 05:04:45-EST,969;000000000000
Received: from MIT-MORRISON by MIT-OZ via Chaosnet; 29 Jan 85 05:04-EST
Date: Tuesday, 29 January 1985, 05:07-EST
From: jcma@MIT-MC
Subject: If a function is bigger than a screen full, you have lost!
To: BUG-LISPM@MIT-OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10,
Experimental RELATUS 131.215, FEP 22, on Lisp Machine Jim Morrison:

I notice that there are many functions in the system code that are bigger than
a screen full.  This is indicative of poor abstraction.  Wouldn't open coding
techniques achieve the same functionality while affording gains in readability
and abstraction?  

In fact, improvement in abstraction articulate a language for desribing a
task.  Such languages increase productivity because one works with more
powerful tools. They also increase modularity. (Just ask KMP) This holds for
not only implementors and bug-fixers but also for users.  It also provides an
example of good programming practice for new users.
29-Jan-85 05:11:09-EST,313;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 29 Jan 85 05:11-EST
Date: 29 January 1985 05:10-EST
From: Bill Gosper <RWG @ MIT-MC>
Subject: If a function is bigger than a screenful, you have lost!
To: JCMA @ MIT-MC, BUG-LISPM @ MIT-MC

Foo.  The reason you have lost is that the screen is to goddam small.
29-Jan-85 09:56:18-EST,455;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 29 Jan 85 09:56-EST
Date: Tue 29 Jan 85 09:58:38-EST
From: John F. Pitrelli <SR.PITRELLI@MIT-SPEECH>
Subject: If a function is bigger than a screenful, you have lost!
To: bug-lispm@MIT-OZ


True.  Though this is not a "bug", I really dislike the excessive
border width and margin space in Release 6.  Why widen the screen
(LM2 --> 3600) and then waste so much of it?

		John Pitrelli
-------
29-Jan-85 16:56:37-EST,550;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 29 Jan 85 16:35-EST
Date: Tue, 29 Jan 85 16:24 EST
From: David Vinayak Wallace <Gumby@MC>
Subject: If a function is bigger than a screenful, you have lost!
To: Bill Gosper <RWG@MC>
Cc: JCMA@MC, BUG-LISPM@MC
In-reply-to: The message of 29 Jan 85 05:10-EST from Bill Gosper <RWG at MC>

    Date: 29 January 1985 05:10-EST
    From: Bill Gosper <RWG @ MIT-MC>

    Foo.  The reason you have lost is that the screen is to goddam small.

Hear hear!  Let's go back to TV:*SCREEN-ON-ITS-SIDE-P*!
29-Jan-85 17:19:20-EST,2453;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 29 Jan 85 16:52-EST
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 168198; Tue 29-Jan-85 16:50:48-EST
Date: Tuesday, 29 January 1985, 16:51-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: ZMACS left dead after 1st arg to ARRAY-LEADER was NIL in ZWEI:PLINE-OF-POINT
To: Kent M Pitman <KMP at MIT-MC>
cc: BUG-LISPM at MIT-OZ, bug-zmacs at SCRC-YUKON
In-Reply-To: The message of 29 Jan 85 02:26-EST from Kent M Pitman <KMP at MIT-MC>
Message-ID: <850129165101.3.MOON@EUPHRATES.SCRC.Symbolics.COM>

    Date: Tuesday, 29 January 1985, 02:26-EST
    From: Kent M Pitman <KMP at MIT-MC>

    In Symbolics 3600 System 242.356, Hardcopy 20.10,
    Experimental Programmer's Apprentice 7.0, FEP 18, on Lisp Machine Apiary-7:

    I hadn't done anything tricky. I'd been adding some patches and was doing
    m-X Compiled Changed Definitions
    and it got an error about unbalanced parens or some such. I did m-> from
    the position I'd been left at and got some error like:
     "The BP you've gotten to is not in the interval being edited."
    By typing c-Z followed quickly by Escape (Prefix Meta) -- which suppressed
    redisplay long enough for me to type another char (I could never have
    shifted bucky bits fast enough) -- and then a "<" to get to the beginning
    of the buffer. This time it gave me the error you see the backtrace for
    below. My real gripe is that no useful proceed options were provided.
    There should be something which is willing to correct the state of my 
    window so that I am left with something I can legitimately exit. By typing
    c-Z c-X very fast, I was able to get a Control-X: prompt and type B, 
    letting me get to another buffer, but I later typed c-m-L before realizing
    what I'd done and got back into this error. 

    I can't imagine that a novice would know to do much else besides boot his
    machine at this point. It seems to me extremely important that this sort
    of stuff trap errors quietly.

    >>Trap: The first argument given to the ARRAY-LEADER instruction, NIL, was not an array.
    While in the function ZWEI:PLINE-OF-POINT  ZWEI:REDISPLAY  ZWEI:REDISPLAY-ALL-WINDOWS

I believe that in Release 6 this has been changed to offer, on the Resume key,
to correct the problem.  It's hard to confirm this by reproducing your syndrome
though.
29-Jan-85 17:26:46-EST,3482;000000000000
Received: from SANCHO-PANZA by MIT-OZ via Chaosnet; 29 Jan 85 17:03-EST
Date: Tuesday, 29 January 1985, 17:02-EST
From: Christopher Eliot <CRE at SANCHO-PANZA>
Subject: TERPRI bombed inside a More break
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 18, on Lisp Machine Sancho Panza:

I am afraid this probably doesn't contain enough information to be useful, but here
it is anyhow.

I originally got into the debugger because one of my functions tried to take the CAR of an atom.
When I tried to DESCRIBE a flavor instance from the debugger the following error occurred.

>>Trap: The second argument given to the SYS:+-INTERNAL instruction, NIL, was not an extended number, a fixnum or a single-precision floating-point number.
While in the function (:DEFUN-METHOD TV:SHEET-MORE-HANDLER)  (:METHOD TV:SHEET :MORE-EXCEPTION)  (:METHOD TV:SHEET :HANDLE-EXCEPTIONS)

(:DEFUN-METHOD TV:SHEET-MORE-HANDLER):  (P.C. = 15)
   Arg 0 (SELF): #<LISP-LISTENER Lisp Listener 1 2600000 exposed>
   Arg 1 (SELF-MAPPING-TABLE): TV:SHEET
   --Defaulted args:--
   Arg 2 (OPERATION): :TYI
   Arg 3 (MORE-STRING): "**MORE**"
   Local 4 (CURRENT-X): 3
   Local 5 (CHAR): NIL

(:METHOD TV:SHEET :MORE-EXCEPTION):  (P.C. = 11)
   Arg 0 (SELF): #<LISP-LISTENER Lisp Listener 1 2600000 exposed>
   Arg 1 (SELF-MAPPING-TABLE): TV:SHEET
   Arg 2 (OPERATION): :MORE-EXCEPTION

(:METHOD TV:SHEET :HANDLE-EXCEPTIONS):  (P.C. = 30)
   Arg 0 (SELF): #<LISP-LISTENER Lisp Listener 1 2600000 exposed>
   Arg 1 (SELF-MAPPING-TABLE): TV:SHEET
   Arg 2 (OPERATION): :HANDLE-EXCEPTIONS

(:METHOD TV:SHEET :TYO):  (P.C. = 55)
   Arg 0 (SELF): #<LISP-LISTENER Lisp Listener 1 2600000 exposed>
   Arg 1 (SELF-MAPPING-TABLE): TV:SHEET
   Arg 2 (OPERATION): :TYO
   Arg 3 (CHAR): 141
   --Defaulted args:--
   Arg 4 (FONT): NIL

TERPRI:  (P.C. = 10)
   --Defaulted args:--
   Arg 0 (STREAM): NIL

DBG:COMMAND-LOOP:  (P.C. = 500)

DBG:DEBUGGER-TOP-LEVEL:  (P.C. = 517)
   Arg 0 (*ERROR*-initialization): #<WRONG-TYPE-ARGUMENT-TRAP 25667216>
   Arg 1 (*INNERMOST-VISIBLE-FRAME*-initialization): #<DTP-LOCATIVE 140710>
   Arg 2 (*REASON-DEBUGGER-ENTERED*-initialization): NIL
   Arg 3 (SPECIAL-COMMANDS): NIL

DBG:ENTER-DEBUGGER:  (P.C. = 16)
   Arg 0 (ERROR): #<WRONG-TYPE-ARGUMENT-TRAP 25667216>
   --Defaulted args:--
   Arg 1 (REASON): NIL
   Arg 2 (SPECIAL-COMMANDS): NIL

Rest of stack:
DBG:DEBUGGER-HANDLER-HANDLE-CONDITION:  (P.C. = 7)
DBG:DEBUGGER-HANDLER:  (P.C. = 12)
(:METHOD CONDITION :SIGNAL):  (P.C. = 114)
(:METHOD CONDITION :COMBINED :SIGNAL):  (P.C. = 21)
SIGNAL:  (P.C. = 10)
DBG:SIGNAL-TRAP:  (P.C. = 3)
SYS:MICROCODE-ERROR-HANDLER:  (P.C. = 101)
(:METHOD DESCRIPTION-TYPE :CHECK-VALUE-PATTERN-SYNTAX):  (P.C. = 11)  (from SANCHO:>bridge>description)
PARSE-SENTENCE:  (P.C. = 70)  (from SANCHO:>bridge>evoker)
(:INTERNAL .DEFINE-DESCRIPTION-CLAUSE-INTERNAL. 0):  (P.C. = 10)
%DEFINE-DESCRIPTION-TYPE:  (P.C. = 124)  (from SANCHO:>bridge>description)
SI:*EVAL:  (P.C. = 370)
PROGN:  (P.C. = 22)
SI:*EVAL:  (P.C. = 421)
SI:READFILE-INTERNAL:  (P.C. = 77)
READFILE:  (P.C. = 72)
SI:READFILE-1:  (P.C. = 5)
SI:DO-FILE-TRANSFORMATIONS:  (P.C. = 242)
SI:PERFORM-TRANSFORMATIONS:  (P.C. = 166)
MAKE-SYSTEM:  (P.C. = 222)
SI:*EVAL:  (P.C. = 370)
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 200)
SI:LISP-COMMAND-LOOP:  (P.C. = 115)
SI:LISP-TOP-LEVEL1:  (P.C. = 22)
SI:LISP-TOP-LEVEL:  (P.C. = 7)
29-Jan-85 17:28:31-EST,3044;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 29 Jan 85 17:04-EST
Received: from SCRC-CUYAHOGA by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 127648; Tue 29-Jan-85 14:50:16-EST
Date: Tuesday, 29 January 1985, 14:50-EST
From: Robert A. Cassels <Cassels at SCRC-TENEX>
Subject: ZMACS left dead after 1st arg to ARRAY-LEADER was NIL in ZWEI:PLINE-OF-POINT
To: KMP at MIT-MC, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 29 Jan 85 02:26-EST from Kent M Pitman <KMP at MIT-MC>
Message-ID: <850129145004.1.CASSELS@CUYAHOGA.SCRC.Symbolics.COM>

    Date: Tuesday, 29 January 1985, 02:26-EST
    From: Kent M Pitman <KMP at MIT-MC>

    In Symbolics 3600 System 242.356, Hardcopy 20.10,
    Experimental Programmer's Apprentice 7.0, FEP 18, on Lisp Machine Apiary-7:

    I hadn't done anything tricky. I'd been adding some patches and was doing
    m-X Compiled Changed Definitions
    and it got an error about unbalanced parens or some such. I did m-> from
    the position I'd been left at and got some error like:
     "The BP you've gotten to is not in the interval being edited."
    By typing c-Z followed quickly by Escape (Prefix Meta) -- which suppressed
    redisplay long enough for me to type another char (I could never have
    shifted bucky bits fast enough) -- and then a "<" to get to the beginning
    of the buffer. This time it gave me the error you see the backtrace for
    below. My real gripe is that no useful proceed options were provided.
    There should be something which is willing to correct the state of my 
    window so that I am left with something I can legitimately exit. By typing
    c-Z c-X very fast, I was able to get a Control-X: prompt and type B, 
    letting me get to another buffer, but I later typed c-m-L before realizing
    what I'd done and got back into this error. 

    I can't imagine that a novice would know to do much else besides boot his
    machine at this point. It seems to me extremely important that this sort
    of stuff trap errors quietly.

Well, it shouldn't blow out like this in the first place.  What's going
on is that it's trying to compile something it shouldn't (like a text
file or something) in another buffer.  Thus the unbalanced parens error.
(Has this been fixed yet?)  That wouldn't be fatal, except that on the
error, it forgets to move POINT back into the buffer you're looking at.
(I don't know whether this has been fixed yet.)  So you've got this
buffer with its POINT in another buffer, and it's very confused.

I guess if we believe that errors like this will be common, we should
provide a proceed option like "Move POINT to the beginning of the
interval being edited".

Meanwhile, m-X Compile Changed Definitions Of Buffer is a little safer.
That way you can make certain it doesn't try to compile your mail.

    >>Trap: The first argument given to the ARRAY-LEADER instruction, NIL, was not an array.
    While in the function ZWEI:PLINE-OF-POINT  ZWEI:REDISPLAY  ZWEI:REDISPLAY-ALL-WINDOWS
29-Jan-85 19:04:19-EST,3250;000000000000
Received: from MIT-MOON by MIT-OZ via Chaosnet; 29 Jan 85 19:04-EST
Date: Tuesday, 29 January 1985, 19:04-EST
From: David Vinayak Wallace <Gumby at MC>
Subject: GMSGS doesn't work with ITS host
To: BUG-LISPM at OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 24, on Lisp Machine Keith Moon:



>>Error: :GMSGS is an invalid canonical type for FS:ITS-PATHNAME
While in the function (:METHOD FS:PATHNAME :TYPE-FOR-NEW-CANONICAL-TYPE)  FS:MAKE-PATHNAME-1  (:METHOD FS:PATHNAME :NEW-PATHNAME)

(:METHOD FS:PATHNAME :TYPE-FOR-NEW-CANONICAL-TYPE):  (P.C. = 65)
   Arg 0 (SELF): #<ITS-PATHNAME "MC: ">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:PATHNAME -- 0. IV's, 1. FL's 10376016>
   Arg 2 (OPERATION): :TYPE-FOR-NEW-CANONICAL-TYPE
   Arg 3 (CANONICAL-TYPE): :GMSGS
   Arg 4 (ORIGINAL-TYPE): NIL
   Arg 5 (ORIGINAL-TYPE-P): NIL

FS:MAKE-PATHNAME-1:  (P.C. = 551)
   Rest arg (OPTIONS): (:DEFAULT-HOST #<ITS-HOST MC 10676436> :DEFAULT-DEVICE "DSK" :DEFAULT-DIRECTORY "GUMBY" :DEFAULT-NAME NIL :DEFAULT-TYPE NIL ...)

(:METHOD FS:PATHNAME :NEW-PATHNAME):  (P.C. = 21)
   Arg 0 (SELF): #<ITS-PATHNAME "MC: GUMBY;">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:PATHNAME -- 0. IV's, 1. FL's 10376016>
   Arg 2 (OPERATION): :NEW-PATHNAME
   Rest arg (OPTIONS): (:NAME "GUMBY" :TYPE :GMSGS)

(:METHOD FS:ITS-MAILBOX-PATHNAME-MIXIN :COMBINED :NEW-PATHNAME):  (P.C. = 37)
   Arg 0 (SELF): #<ITS-PATHNAME "MC: GUMBY;">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:ITS-MAILBOX-PATHNAME-MIXIN -- 2. IV's, 2. FL's 10376023>
   Rest arg (.DAEMON-CALLER-ARGS.): (:NEW-PATHNAME :NAME "GUMBY" :TYPE :GMSGS)

(:METHOD FS:ITS-MAILBOX-PATHNAME-MIXIN :GMSGS-INBOX-PATHNAME):  (P.C. = 12)
   Arg 0 (SELF): #<ITS-PATHNAME "MC: GUMBY;">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:ITS-MAILBOX-PATHNAME-MIXIN -- 2. IV's, 2. FL's 10376023>
   Arg 2 (OPERATION): :GMSGS-INBOX-PATHNAME

ZWEI:GMSGS:  (P.C. = 20)
   Arg 0 (HOST): #<ITS-HOST MC 10676436>
   --Defaulted args:--
   Arg 1 (STREAM): #:TERMINAL-IO-SYN-STREAM
   Arg 2 (BARF-P): NIL

ZWEI:COM-GET-INBOX-INTERNAL:  (P.C. = 247)
   Arg 0 (FIRST-TIME-P): T
   --Defaulted args:--
   Arg 1 (FOR-BUFFER): #<BABYL-BUFFER "MC: GUMBY; GUMBY BABYL" 671700>

ZWEI:STARTUP-MAIL-FILE:  (P.C. = 172)
   --Defaulted args:--
   Arg 0 (NEW-PATHNAME): NIL

Rest of stack:
ZWEI:COM-GET-INBOX-INTERNAL:  (P.C. = 37)
ZWEI:COM-GET-NEW-MAIL-FROM-INBOX:  (P.C. = 7)  (from H: L; LIB)
ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
ZWEI:ZMAIL-COMMAND-EXECUTE:  (P.C. = 6)
(:METHOD ZWEI:ZMAIL-FRAME :PROCESS-COMMAND-CHAR):  (P.C. = 7)
(:INTERNAL (:INTERNAL (:METHOD ZWEI:ZMAIL-FRAME :COMBINED :PROCESS-COMMAND-CHAR) 0.) 0.):  (P.C. = 7)
(:METHOD ZWEI:ZMAIL-COMMAND-LOOP-MIXIN :WHOPPER :PROCESS-COMMAND-CHAR):  (P.C. = 21)
(:INTERNAL (:METHOD ZWEI:ZMAIL-FRAME :COMBINED :PROCESS-COMMAND-CHAR) 0.):  (P.C. = 12)
(:METHOD ZWEI:ZMAIL-FRAME :WHOPPER :PROCESS-COMMAND-CHAR):  (P.C. = 21)
(:METHOD ZWEI:ZMAIL-FRAME :COMBINED :PROCESS-COMMAND-CHAR):  (P.C. = 11)
(:METHOD ZWEI:ZMAIL-FRAME :COMMAND-LOOP):  (P.C. = 146)
(:METHOD ZWEI:ZMAIL-FRAME :COMBINED :COMMAND-LOOP):  (P.C. = 47)
ZWEI:ZMAIL-PROCESS-TOP-LEVEL:  (P.C. = 52)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
29-Jan-85 19:13:26-EST,1315;000000000000
Received: from MIT-EDDIE by MIT-OZ via Chaosnet; 29 Jan 85 19:13-EST
Received: by mit-eddie.Mit-chaos.Arpa id AA00708; Tue, 29 Jan 85 19:11:21 est
Received: by godot with CHAOS id AA01476; Tue, 29 Jan 85 19:08:49 est
Date: Tuesday, 29 January 1985, 19:10-EST
From: Paul Rosenblum <godot!PSR@mit-eddie>
Subject: FORMAT's ~<CR> and friends
To: bug-lispm%oz@GODOT
Cc: psr%oz@GODOT

I have just been screwed again by Zwei and FORMAT.  The way that it goes
is that you put a tilde (or maybe atsign tilde) at the end of your
command line and expect it to do something reasonable with the <CR>
character.  However, at some point Zwei sticks some whitespace (like a
space character) at the end of the line between the tilde and the <CR>.
Of course, you can't see the space and so, later when you try to have
your output created, FORMAT (actually FERROR) says <<error printing
report>>.

When you look at the code, it looks ok since you can't SEE anything
after the tilde.  You pull your hair and gnash your teeth and remember
the next morning in the shower that there just might be some invisible
characters at the end of the line.

Fix:  make ~<whitespace><CR> be equivalent to ~<CR>.  At the very least,
have FORMAT diagnose the problem instead of just giving the generic
error message.

Paul
29-Jan-85 20:07:27-EST,1420;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 29 Jan 85 20:07-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 168405; Tue 29-Jan-85 20:07:21-EST
Date: Tuesday, 29 January 1985, 20:07-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: control stack overflow
To: Jonathan Connell <JHC at MIT-OZ>, bug-lispm at MIT-OZ
In-Reply-To: The message of 28 Jan 85 19:51-EST from Jonathan Connell <JHC at MIT-OZ>
Message-ID: <850129200708.5.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Monday, 28 January 1985, 19:51-EST
    From: Jonathan Connell <JHC@MIT-OZ>

    Hi,
    I wrote a highly recursive program which eats up stack space.
    When I get "Control Stack Overflow" errors I tell it to continue with a larger stack. 
    This however causes all sorts of problems. I get errors like:
       <DTP-NULL some address> READ FROM same address IN [... WORKING-MEMEORY-AREA]
    which asks for some value to use as <DTP-LOCATIVE same address>. I tell it NIL.
    I also get scheduler problems and have to "arrest" some processes.
    What should I do (besides writing iteratively)?

One thing you should do is supply a proper bug herald.  I can only
assume you are using Symbolics Release 5.2.  Several bugs with stack
overflow have been fixed in Release 6.  If you can find a reproducible
failure you can send us a pointer so we can try it.
29-Jan-85 20:12:53-EST,3692;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 29 Jan 85 20:12-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 168414; Tue 29-Jan-85 20:13:08-EST
Date: Tuesday, 29 January 1985, 20:12-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: maybe a fencepost bug in CLRHASH-EQUAL
To: Steve Strassmann <STRAZ at MIT-OZ>, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 28 Jan 85 21:54-EST from Steve Strassmann <STRAZ at MIT-OZ>
Message-ID: <850129201255.6.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Monday, 28 January 1985, 21:54-EST
    From: Steve Strassmann <STRAZ at MIT-OZ>

    In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 18, on Lisp Machine Jimi Hendrix:

    There seems to be a fencepost bug in CLRHASH-EQUAL.

I'll bet you hit c-Abort during a previous :COPY-HASH (during a grow).
There was a missing WITHOUT-INTERRUPTS between the time it set the new
size and the time it set the new array.  Therefore, it things you have
an array which is (// 80277 3) = 26759 entries (which is on the list of
good numbers) instead of the array you actually do have, which is 20161,
also on the list of good numbers.  This was fixed a while ago and is
be fixed in Release 6.  For now, don't c-Abort hash table operations you
care about.

    >>Trap: The subscript given to the SYS:FAST-ASET instruction, 60483., on #<ART-Q-20161.-3. 4652571> was beyond the length, 60483..
    While in the function COPY-ARRAY-PORTION  (:METHOD SI:EQUAL-HASH-TABLE :CLEAR-HASH)  CLRHASH-EQUAL

    COPY-ARRAY-PORTION:  (P.C. = 51)
       Arg 0 (FROM-ARRAY): #<ART-Q-20161.-3. 4652571>
       Arg 1 (FROM-START): 0.
       Arg 2 (FROM-END): 0.
       Arg 3 (TO-ARRAY): #<ART-Q-20161.-3. 4652571>
       Arg 4 (TO-START): 0.
       Arg 5 (TO-END): 80277.
       Local 6 (FROM): #<ART-Q-20161.-3. 4652571>
       Local 7: 1342178854.
       Local 8: #<DTP-LOCATIVE 4652577>
       Local 9: 60483.
       Local 10 (TO): #<ART-Q-20161.-3. 4652571>
       Local 11: 1342178854.
       Local 12: #<DTP-LOCATIVE 4652577>
       Local 13: 60483.
       Local 14 (FROM-LENGTH): 0.
       Local 15 (TO-LENGTH): 80277.
       Local 16 (INDEX-FROM): 0.
       Local 17 (INDEX-TO): 60483.
       Local 18 (NULL-ELEM): NIL

    (:METHOD SI:EQUAL-HASH-TABLE :CLEAR-HASH):  (P.C. = 42)
       Arg 0 (SELF): #<EQUAL-HASH-TABLE 4652560>
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:EQUAL-HASH-TABLE -- 8. IV's, 0. FL's 52401740>
       Arg 2 (OPERATION): :CLEAR-HASH
       Arg 3 (FORCE-P): NIL

    CLRHASH-EQUAL:  (P.C. = 6)
       Arg 0 (HASH-TABLE): #<EQUAL-HASH-TABLE 4652560>
       --Defaulted args:--
       Arg 1 (FORCE-P): NIL

    SI:*EVAL:  (P.C. = 370)
       Arg 0 (FORM): (CLRHASH-EQUAL SPELL-PHONE)

    SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 200)
       Rest arg: (:NAME "Breakpoint ZMACS" :ABORTED-FUNCTION SI:BREAK-ABORTED-FUNCTION :READ-FUNCTION SI:BREAK-READ-FUNCTION)

    BREAK:  (P.C. = 173)
       Arg 0 (TAG): ZWEI:ZMACS
       --Defaulted args:--
       Arg 1 (CONDITIONAL): T

    (:DEFUN-METHOD ZWEI:COM-BREAK):  (P.C. = 112)
       Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 56044432>
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:EDITOR -- 12. IV's, 0. FL's 56044271>

    ZWEI:COM-BREAK:  (P.C. = 12)
       Rest arg (ARGS): NIL

    Rest of stack:
    ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
    ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
    (:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 214)
    (:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 41)
    ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)
    SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
29-Jan-85 21:00:05-EST,1770;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 29 Jan 85 21:00-EST
Received: from SCRC-NEPONSET by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 127847; Tue 29-Jan-85 21:00:18-EST
Date: Tuesday, 29 January 1985, 21:00-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: If a function is bigger than a screen full, you have lost!
To: jcma at MIT-MC
cc: BUG-LISPM at MIT-OZ
In-Reply-To: The message of 29 Jan 85 05:07-EST from jcma at MIT-MC
Message-ID: <850129210020.9.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Tuesday, 29 January 1985, 05:07-EST
    From: jcma@MIT-MC

    In Symbolics 3600 System 242.356, Hardcopy 20.10,
    Experimental RELATUS 131.215, FEP 22, on Lisp Machine Jim Morrison:

    I notice that there are many functions in the system code that are bigger than
    a screen full.  This is indicative of poor abstraction.  Wouldn't open coding
    techniques achieve the same functionality while affording gains in readability
    and abstraction?  

    In fact, improvement in abstraction articulate a language for desribing a
    task.  Such languages increase productivity because one works with more
    powerful tools. They also increase modularity. (Just ask KMP) This holds for
    not only implementors and bug-fixers but also for users.  It also provides an
    example of good programming practice for new users.

This is all well and good.  There are two things you haven't done.  (1)
You didn't point out some sample functions and how they can be made
smaller and more abstract, and (2) you didn't offer to the world to
audit your code so we know you are practicing what you preach.  I think
I disagree with some of your premises, but I won't really know until I
get an answer to (1).
29-Jan-85 22:06:32-EST,1380;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 29 Jan 85 22:06-EST
Received: from SCRC-NEPONSET by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 127864; Tue 29-Jan-85 21:56:04-EST
Date: Tuesday, 29 January 1985, 21:56-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: GMSGS doesn't work with ITS host
To: David Vinayak Wallace <Gumby at MIT-MC>, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 29 Jan 85 19:04-EST from David Vinayak Wallace <Gumby at MIT-MC>
Message-ID: <850129215607.5.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Tuesday, 29 January 1985, 19:04-EST
    From: David Vinayak Wallace <Gumby at MC>

    In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 24, on Lisp Machine Keith Moon:

This is broken in the current Release 6 as well.

    >>Error: :GMSGS is an invalid canonical type for FS:ITS-PATHNAME
    While in the function (:METHOD FS:PATHNAME :TYPE-FOR-NEW-CANONICAL-TYPE)  FS:MAKE-PATHNAME-1  (:METHOD FS:PATHNAME :NEW-PATHNAME)

    (:METHOD FS:PATHNAME :TYPE-FOR-NEW-CANONICAL-TYPE):  (P.C. = 65)
       Arg 0 (SELF): #<ITS-PATHNAME "MC: ">
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:PATHNAME -- 0. IV's, 1. FL's 10376016>
       Arg 2 (OPERATION): :TYPE-FOR-NEW-CANONICAL-TYPE
       Arg 3 (CANONICAL-TYPE): :GMSGS
       Arg 4 (ORIGINAL-TYPE): NIL
       Arg 5 (ORIGINAL-TYPE-P): NIL

29-Jan-85 22:07:12-EST,1469;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 29 Jan 85 22:06-EST
Received: from SCRC-NEPONSET by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 127866; Tue 29-Jan-85 21:56:15-EST
Date: Tuesday, 29 January 1985, 21:56-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: GMSGS doesn't work with ITS host
To: David Vinayak Wallace <Gumby at MIT-MC>, BUG-LISPM at MIT-OZ,
    RWK at SCRC-QUABBIN
In-Reply-To: The message of 29 Jan 85 19:04-EST from David Vinayak Wallace <Gumby at MIT-MC>
Supersedes: <850129215607.5.NFEP@NEPONSET.SCRC.Symbolics.COM>
Message-ID: <850129215618.6.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Tuesday, 29 January 1985, 19:04-EST
    From: David Vinayak Wallace <Gumby at MC>

    In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 24, on Lisp Machine Keith Moon:

This is broken in the current Release 6 as well.

    >>Error: :GMSGS is an invalid canonical type for FS:ITS-PATHNAME
    While in the function (:METHOD FS:PATHNAME :TYPE-FOR-NEW-CANONICAL-TYPE)  FS:MAKE-PATHNAME-1  (:METHOD FS:PATHNAME :NEW-PATHNAME)

    (:METHOD FS:PATHNAME :TYPE-FOR-NEW-CANONICAL-TYPE):  (P.C. = 65)
       Arg 0 (SELF): #<ITS-PATHNAME "MC: ">
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:PATHNAME -- 0. IV's, 1. FL's 10376016>
       Arg 2 (OPERATION): :TYPE-FOR-NEW-CANONICAL-TYPE
       Arg 3 (CANONICAL-TYPE): :GMSGS
       Arg 4 (ORIGINAL-TYPE): NIL
       Arg 5 (ORIGINAL-TYPE-P): NIL

29-Jan-85 22:07:41-EST,2137;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 29 Jan 85 22:06-EST
Received: from SCRC-NEPONSET by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 127871; Tue 29-Jan-85 22:02:22-EST
Date: Tue, 29 Jan 85 22:02 EST
From: David C. Plummer in disguise <DCP@SCRC-QUABBIN.ARPA>
Subject: FORMAT's ~<CR> and friends
To: Paul Rosenblum <godot!PSR%MIT-EDDIE@MIT-MC.ARPA>,
    bug-lispm%oz@SCRC-QUABBIN.ARPA
cc: psr%oz@SCRC-QUABBIN.ARPA
In-Reply-To: The message of 29 Jan 85 19:10-EST from Paul Rosenblum <godot!PSR at mit-eddie>
Message-ID: <850129220225.8.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Tuesday, 29 January 1985, 19:10-EST
    From: Paul Rosenblum <godot!PSR@mit-eddie>

    I have just been screwed again by Zwei and FORMAT.  The way that it goes
    is that you put a tilde (or maybe atsign tilde) at the end of your
    command line and expect it to do something reasonable with the <CR>
    character.  However, at some point Zwei sticks some whitespace (like a
    space character) at the end of the line between the tilde and the <CR>.
    Of course, you can't see the space and so, later when you try to have
    your output created, FORMAT (actually FERROR) says <<error printing
    report>>.

    When you look at the code, it looks ok since you can't SEE anything
    after the tilde.  You pull your hair and gnash your teeth and remember
    the next morning in the shower that there just might be some invisible
    characters at the end of the line.

    Fix:  make ~<whitespace><CR> be equivalent to ~<CR>.  At the very least,
    have FORMAT diagnose the problem instead of just giving the generic
    error message.

In Release 6 (I have no idea what release you are running since you
failed to provide the appropriate bug header), I get 
  (format t (format nil "alkdjf~~~3@T~%adlkfj"))
failing with this error report.

>>Error: Undefined FORMAT command.
                     
             "alkdjf~   
         adlkfj"

I believe it is wrong for it to throw away the whitespace.  I could
perversely see spaces and tabs as format directives to somehow hack
columnation.
30-Jan-85 00:13:34-EST,1215;000000000000
Mail-From: PSR created at 30-Jan-85 00:13:22
Date: Wed, 30 Jan 1985  00:13 EST
Message-ID: <PSR.12083584723.BABYL@MIT-OZ>
From: PSR@MIT-OZ
To:   "David C. Plummer in disguise" <DCP@SCRC-QUABBIN.ARPA>
Cc:   bug-lispm@MIT-OZ
Subject: FORMAT's ~<CR> and friends
In-reply-to: Msg of 29 Jan 1985  22:02-EST from David C. Plummer in disguise <DCP at SCRC-QUABBIN.ARPA>

I am running 5.2.

The problem isn't with ~%, but with tilde carriage return.  My problem isn't
anything like your test case.  Try something like:

(ferror "This is a test string with~@
         a carriage return but no white space printed on the next line.")

If there is a carriage return immediately following the atsign, FERROR
will properly print the error report with the carriage return and no
extra white space at the beginning of the second line.

If on the other hand, there is a space character after the atsign on
the first line, FERROR will print the first line and will then type
out <<Error printing error report>> and leave you in the error handler
with no indication of what went wrong.

Perhaps at the very least it could attempt to tell you what FORMAT
decided was wrong with the control string.

Paul
30-Jan-85 03:48:11-EST,569;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 30 Jan 85 03:48-EST
Date: Wednesday, 30 January 1985, 03:13-EST
From: Patrick A. O'Donnell <PAO at MIT-EECS>
Subject: FORMAT glitch
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 18, on Lisp Machine Robot-2:

(format nil "~5,,5$" 0.00095390115)
"0.00095"

(format nil "~4,,4$" 0.00095390115)
"0.000:"

(format nil "~3,,3$" 0.00095390115)
"0.001"

(format nil "~4,,4$" 0.00095)
"0.000:"

(format nil "~4,,4$" 0.00097)
"0.000:"

(format nil "~4,,4$" 0.00098)
"0.0010"
30-Jan-85 07:15:22-EST,2672;000000000000
Received: from MIT-BUDDY by MIT-OZ via Chaosnet; 30 Jan 85 07:15-EST
Date: Wednesday, 30 January 1985, 07:15-EST
From: Christopher Fry <cfry at MIT-OZ>
Subject: zmacs endless error loop
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10, Color 1.0,
Experimental FB 231.0, FEP 24, on Lisp Machine Buddy Holly:

I have gotten this error many times before.
I have reported it many times before.
The reason it is so bad is that you can warm boot and or
kill/flush/reset zmacs and you remain in an endless loop of error.

This time, I entered the error by doing:
m-x compile changed definitions 

I had one buffer which I created via program and wrote into it via program.
I suspect this is the buffer that caused the error.

>>Trap: The first argument given to the AP-LEADER instruction, NIL, was not an array.
While in the function ZWEI:PUT-POINT-AT-PLINE  ZWEI:RECENTER-WINDOW  ZWEI:REDISPLAY

ZWEI:PUT-POINT-AT-PLINE:  (P.C. = 23)
   Arg 0 (SHEET): #<ZMACS-WINDOW-PANE Zmacs Window Pane 1 3722145 exposed>
   Arg 1 (POINT-LINE): "1//30//85 06:44:31"
   Arg 2 (POINT-INDEX): 13
   Arg 3 (POINT-PLINE): 30
   Arg 4 (FIRST-BP): (";;; -*- Package: FB; Base: 10. -*-" 0 :NORMAL)
   Arg 5 (LAST-BP): ("  new-event-listi)" 22 :MOVES)
   Local 6 (LH): 16
   Local 7 (P): 2
   Local 8 (STOP-LINE): ";;; -*- Package: FB; Base: 10. -*-"
   Local 9 (DIAGRAM-NPLINES): NIL
   Local 10 (LINE): NIL
   Local 11 (POINT-LINE-P): NIL
   Local 12 (DIAGRAM): NIL

ZWEI:RECENTER-WINDOW:  (P.C. = 101)
   Arg 0 (WINDOW): #<WINDOW 11636645>
   Arg 1 (RECENTER-TYPE): :ABSOLUTE
   Arg 2 (RC1): NIL
   Arg 3 (RC2): NIL

ZWEI:REDISPLAY:  (P.C. = 266)
   Arg 0 (WINDOW): #<WINDOW 11636645>
   --Defaulted args:--
   Arg 1 (RECENTER-TYPE): :ABSOLUTE
   Arg 2 (RC1): NIL
   Arg 3 (RC2): NIL
   Arg 4 (FORCE-TO-COMPLETION-P): NIL

ZWEI:REDISPLAY-ALL-WINDOWS:  (P.C. = 34)
   --Defaulted args:--
   Arg 0 (FORCE-TO-COMPLETION-P): NIL
   Arg 1 (SELECT-P): T

(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 140)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 56044432>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:EDITOR -- 12. IV's, 0. FL's 56044271>
   Arg 2 (OPERATION): :EDIT
   --Defaulted args:--
   Arg 3 (TOP-LEVEL-P): T
   Arg 4 (DESCRIPTION): NIL

(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 41)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 56044432>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:TOP-LEVEL-EDITOR -- 12. IV's, 1. FL's 60246144>
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)

SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
   Arg 0 (IGNORE): NIL
30-Jan-85 09:37:20-EST,1180;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 30 Jan 85 09:37-EST
Received: from SCRC-CUYAHOGA by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 168667; Wed 30-Jan-85 09:37:49-EST
Date: Wednesday, 30 January 1985, 09:37-EST
From: Robert A. Cassels <Cassels at SCRC-TENEX>
Subject: FORMAT glitch
To: PAO at MIT-EECS, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 30 Jan 85 03:13-EST from Patrick A. O'Donnell <PAO at MIT-EECS>
Message-ID: <850130093729.3.CASSELS@CUYAHOGA.SCRC.Symbolics.COM>

    Date: Wednesday, 30 January 1985, 03:13-EST
    From: Patrick A. O'Donnell <PAO at MIT-EECS>

    In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 18, on Lisp Machine Robot-2:

Thanks for the report.  This has been fixed in Release 6, as can be seen below:

    (format nil "~5,,5$" 0.00095390115) => "0.00095"
    "0.00095"

    (format nil "~4,,4$" 0.00095390115) => "0.0010"
    "0.000:"

    (format nil "~3,,3$" 0.00095390115) => "0.001"
    "0.001"

    (format nil "~4,,4$" 0.00095) => "0.0010"
    "0.000:"

    (format nil "~4,,4$" 0.00097) => "0.0010"
    "0.000:"

    (format nil "~4,,4$" 0.00098) => "0.0010"
    "0.0010"
30-Jan-85 10:46:27-EST,2662;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 30 Jan 85 10:46-EST
Date: Wednesday, 30 January 1985, 10:46-EST
From: Gavan Duffy <GAVAN at MIT-OZ>
Subject: >>Error: Bad status line SIDNEY.G.HECHT, TTY14, 22-Jan-85  4:55am
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10,
Experimental RELATUS 131.226, FEP 22, on Lisp Machine Jim Morrison:

What does this mean?  This error occured in the zmail-background-process.
Is the locative causing the error?  How'd it get there?

>>Error: Bad status line SIDNEY.G.HECHT, TTY14, 22-Jan-85  4:55am
While in the function ZWEI:PARSE-MSG-NEW-BABYL-STATUS-LINE  (:METHOD ZWEI:BABYL-BUFFER :BEFORE :PARSE-MSG)  (:METHOD ZWEI:BABYL-BUFFER :COMBINED :PARSE-MSG)

ZWEI:PARSE-MSG-NEW-BABYL-STATUS-LINE:  (P.C. = 27)
   Arg 0 (LINE): "SIDNEY.G.HECHT, TTY14, 22-Jan-85  4:55am"
   Arg 1 (STATUS): #<DTP-LOCATIVE 1106536>
   Local 2 (KEYWORDS): NIL
   Local 3 (I): 16.
   Local 4 (STATE): 1.
   Local 5 (LEN): 40.
   Local 6 (J): 21.
   Local 7 (STR): "TTY14"
   Local 8 (TEM): NIL

(:METHOD ZWEI:BABYL-BUFFER :BEFORE :PARSE-MSG):  (P.C. = 120)
   Arg 0 (SELF): #<BABYL-BUFFER "PIG:USRD$:[GAVAN.MAIL]PROGD.XML" 7162412>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:BABYL-BUFFER -- 3. IV's, 6. FL's 66103043>
   Arg 2 (OPERATION): :PARSE-MSG
   Arg 3 (MSG): #<MSG 1106526>
   Arg 4 (STAT): #<DTP-LOCATIVE 1106536>

(:METHOD ZWEI:BABYL-BUFFER :COMBINED :PARSE-MSG):  (P.C. = 7)
   Arg 0 (SELF): #<BABYL-BUFFER "PIG:USRD$:[GAVAN.MAIL]PROGD.XML" 7162412>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:BABYL-BUFFER -- 3. IV's, 6. FL's 66103043>
   Rest arg (.DAEMON-CALLER-ARGS.): (:PARSE-MSG #<MSG 1106526> #<DTP-LOCATIVE 1106536>)

ZWEI:ASSURE-MSG-PARSED:  (P.C. = 71)
   Arg 0 (MSG): #<MSG 1106526>
   --Defaulted args:--
   Arg 1 (KILLED-OK): NIL

ZWEI:ZMAIL-BACKGROUND-PARSE-MSGS:  (P.C. = 113)
   Arg 0 (REQUEST): (ZWEI:ZMAIL-BACKGROUND-PARSE-MSGS #<BABYL-BUFFER "PIG:USRD$:[GAVAN.MAIL]PROGD.XML" 7162412> 25.)

ZWEI:ZMAIL-BACKGROUND-PERFORM:  (P.C. = 20)
   Arg 0 (CURRENT-REQUEST): (ZWEI:ZMAIL-BACKGROUND-PARSE-MSGS #<BABYL-BUFFER "PIG:USRD$:[GAVAN.MAIL]PROGD.XML" 7162412> 25.)

ZWEI:ZMAIL-BACKGROUND-LOOP-BODY:  (P.C. = 37)
   Arg 0 (LOCK): #<DTP-LOCATIVE 45010024>
   Arg 1 (COMMAND-BUFFER-POINTER): #<DTP-LOCATIVE 45010023>
   Arg 2 (PRELOAD-QUEUE-POINTER): #<DTP-LOCATIVE 45010025>
   Arg 3 (PRELOAD-FILE-POINTER): #<DTP-LOCATIVE 45010026>

ZWEI:ZMAIL-BACKGROUND:  (P.C. = 32)
   Arg 0 (*FOREGROUND-WINDOW*-initialization): #<ZMAIL-FRAME Main Zmail Window 11740161 deexposed>

Rest of stack:
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
30-Jan-85 10:50:40-EST,471;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 30 Jan 85 10:50-EST
Date: Wednesday, 30 January 1985, 10:50-EST
From: Gavan Duffy <GAVAN at MIT-OZ>
Subject: The bug report I just sent about the `bad status line' 
To: BUG-LISPM at MIT-OZ

That error in the zmail-background-process is more serious than I thought.  It
effectively blew zmail away.  I can't save, because it throws me into a
background lock.  AN I can't continue, because the error keeps reoccuring.
30-Jan-85 11:02:31-EST,1869;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 30 Jan 85 11:02-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 168726; Wed 30-Jan-85 11:02:54-EST
Date: Wednesday, 30 January 1985, 11:02-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: FORMAT's ~<CR> and friends
To: PSR at MIT-OZ, David C. Plummer in disguise <DCP at SCRC-QUABBIN>
cc: bug-lispm at MIT-OZ
In-Reply-To: <PSR.12083584723.BABYL@MIT-OZ>
Message-ID: <850130110227.2.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Wed, 30 Jan 1985  00:13 EST
    From: PSR%MIT-OZ@MIT-MC.ARPA

    I am running 5.2.

    The problem isn't with ~%, but with tilde carriage return.  My problem isn't
    anything like your test case.  Try something like:

    (ferror "This is a test string with~@
	     a carriage return but no white space printed on the next line.")

    If there is a carriage return immediately following the atsign, FERROR
    will properly print the error report with the carriage return and no
    extra white space at the beginning of the second line.

    If on the other hand, there is a space character after the atsign on
    the first line, FERROR will print the first line and will then type
    out <<Error printing error report>> and leave you in the error handler
    with no indication of what went wrong.

    Perhaps at the very least it could attempt to tell you what FORMAT
    decided was wrong with the control string.

I understood your message; you didn't understand my message.  The
diddly-squat with 
	(format nil "text~~~4@T~%more text")
was in order to create an unambiguous >>FORMAT string<< that is then
passed in to (FORMAT T *).  Please read my message again, including the
part that says (roughly) "This is what it does in Release 6", which
isn't <<Error printing report>>.
30-Jan-85 11:10:08-EST,2723;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 30 Jan 85 11:09-EST
Date: Wednesday, 30 January 1985, 11:08-EST
From: Gavan Duffy <GAVAN at MIT-OZ>
Subject: More ZMAIL lossage.
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10,
Experimental RELATUS 131.226, FEP 22, on Lisp Machine Jim Morrison:

Lose, lose, lose.   Can't get to my zmail profile now because clicking on it
creates a background lock.  Hitting c-m abort three times rapidly produced
this:

>>Error: Attempt to unlock #<DTP-LOCATIVE 45010024>, which you don't have locked
While in the function PROCESS-UNLOCK  (:DEFUN-METHOD ZWEI:COM-ZMAIL-PROFILE)  ZWEI:COM-ZMAIL-PROFILE

PROCESS-UNLOCK:  (P.C. = 21)
   Arg 0 (LOCATIVE-POINTER): #<DTP-LOCATIVE 45010024>
   --Defaulted args:--
   Arg 1 (LOCK-VALUE): #<PROCESS Main Zmail Window 45010030>
   Arg 2 (ERROR-P): T

(:DEFUN-METHOD ZWEI:COM-ZMAIL-PROFILE):  (P.C. = 54)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 11740161 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-COMMAND-LOOP-MIXIN -- 10. IV's, 1. FL's 60767560>

ZWEI:COM-ZMAIL-PROFILE:
   Rest arg (ARGS): NIL

ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
   Arg 0 (COMMAND): ZWEI:COM-ZMAIL-PROFILE
   Arg 1 (CHAR): (:MENU ("Profile" . ZWEI:COM-ZMAIL-PROFILE) 4. #<ZMAIL-MAIN-COMMAND-MENU-PANE Zmail Main Command Menu Pane 7 11774127 exposed>)
   --Defaulted args:--
   Arg 2 (PREFIX-CHAR): NIL
   Arg 3 (HOOK-LIST): NIL

ZWEI:ZMAIL-COMMAND-EXECUTE:  (P.C. = 6)
   Arg 0 (*CURRENT-COMMAND*-initialization): ZWEI:COM-ZMAIL-PROFILE

(:INTERNAL ZWEI:ZMAIL-COMMAND-LIST 0.):  (P.C. = 10)
   Arg 0 (**DEFSELECT-OP**): :MENU
   Arg 1 (ITEM): ("Profile" . ZWEI:COM-ZMAIL-PROFILE)
   Arg 2 (CH): 4.
   Arg 3 (WINDOW): #<ZMAIL-MAIN-COMMAND-MENU-PANE Zmail Main Command Menu Pane 7 11774127 exposed>

ZWEI:ZMAIL-COMMAND-LIST:  (P.C. = 12)
   Arg 0 (OPERATION): :MENU
   Rest arg (SELECT-METHOD-ARGS): (("Profile" . ZWEI:COM-ZMAIL-PROFILE) 4. #<ZMAIL-MAIN-COMMAND-MENU-PANE Zmail Main Command Menu Pane 7 11774127 exposed>)

(:METHOD ZWEI:ZMAIL-FRAME :PROCESS-SPECIAL-COMMAND):  (P.C. = 16)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 11740161 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-FRAME -- 68. IV's, 20. FL's 70504333>
   Arg 2 (OPERATION): :PROCESS-SPECIAL-COMMAND
   Rest arg (ARGS): (:MENU ("Profile" . ZWEI:COM-ZMAIL-PROFILE) 4. #<ZMAIL-MAIN-COMMAND-MENU-PANE Zmail Main Command Menu Pane 7 11774127 exposed>)

Rest of stack:
(:METHOD ZWEI:ZMAIL-FRAME :COMMAND-LOOP):  (P.C. = 141)
(:METHOD ZWEI:ZMAIL-FRAME :COMBINED :COMMAND-LOOP):  (P.C. = 47)
ZWEI:ZMAIL-PROCESS-TOP-LEVEL:  (P.C. = 52)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
