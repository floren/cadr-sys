;-*- Mode:Text; Fonts:(TR12 CPTFONT TR12I HL12B TR12B TR12BI) -*-

System 99 is nigh!! Beware the coming of system 99!
Who knows what microcode version it will use, but
it will be  315.

Files compiled in System 98 will probably run in System 99.
Files compiled in System 99 will probably not run in System 98. Stay tuned.

Using some as-yet-unwritten magic, it will be possible to debug System 99 from
System 98 and perhaps also System 97, but not any earlier systems.
System 99 can debug all earlier systems. Yow!

Contents of the rest of this file:

    4Incompatible Changes* 
    4Compatible Lisp Programming Changes* 
    4Window System Changes* 
    4User Interface Changes* 
    4Editor Changes* 
    4Network Changes*
    4Site option Changes

Incompatible Changes* 

1] 4Decimal radix is now the default.** 

The default values for reading and printing integers is now base 10.
The value of 1*nopoint* is now 1T* by default. All files (except init files) written
out by Zmacs in the last few systems have automatically had a base attribute
added to the "1-*-*" line, so this should not break many existing files.
If you want your init file to be in base 8, add 1Base:8* to the 1-*-* line.

To get back the old behaviour, do 1(setq *print-base* 8. *read-base* 8.* 1*nopoint nil)*

] 4Lexical Evaluator is now the default.* 

hacks declarations, leaps tall buildings in a single bound.
semantics are now exactly the same as those of compiler.
say something about lexical closures??
1(set 'a 3)* 
1(defun foo ()* 
   1(declare (special a))* 
   1(print a))* 
1(let ((a 1))* 
   1(foo))* 
will print "13*" just as it would if compiled.

Say more!!!

]1 4Changes to 3FORMAT* control argument.** 

The control argument to 1FORMAT* has changed for compatibility with Common Lisp.
There are no longer separate functions 1FORMAT* and 1CLI:FORMAT*, as there were in
System 98.  This change will affects the following 1FORMAT* directives:

1~X*	1~2width,padchar,commachar*X* 
	1      *Prints its argument in hexadecimal. (Analogous to 1~O*, 1~B* and 1~D*)
	This command used to be used to insert spaces into the output.

	Use 1~2number-of-spaces*@T* to achieve the same result as the old 1~2number-of-spaces*X* directive.

1~F*	1~2width,decimal-places,scale,overflowchar,padchar*F* 
	1      *Prints a floating-point number in nonexponential notation.
	        Multiplies by 10^2scale* before printing if 2scale* is specified.
	        Prints in 2width* positions, with 2decimal-places* digits after the decimal point.
	        Pads on left with 2padchar* if necessary.  If then number doesn't fit in 2width* positions,
	        and 2overflowchar* is specified, this command just fills the 2width* positions with
	        that character.
	This directive used to just take one optional prefix control arg, which specified how many
	        mantissa digits to print. This is the same as 2+2decimal-places* for the new 1FORMAT*.

	Use 1~,2n+2*F* to achieve the same result as the old 1~2n*F* directive.

1~E*	1~2width**,2decimal-places*,2exponent-places*,2scale*,2overflowchar,padchar,exptchar1E** 
	1      *Prints a floating-point number in exponential notation.
	        Prints in 2width* positions, with 2exponent-places* digits of exponent.
	        If 2scale* (default is 1) is positive, prints 2scale* digits before point, 2decimal-places*-2scale*+1 after.
	        If 2scale* is zero, prints 2decimal-places* digits after the point, and a zero before if there's room.
	        If 2scale* is negative, prints 2decimal-places* digits after the point, of which the first -2scale*
	        are zeros.
	        If 2exptchar* is specified, it is used to delimit the exponent2 *(instead of "e" or whatever.)
	        If2 overflowchar* is specified, then if the number doesn't fit in the specified2 width*,
	        or if the exponent doesn't fit in 2exponent-places* positions, the field is filled with 2overflowchar*
	        instead.
	This directive used to just take one optional prefix control arg, which specified how many
	        mantissa digits to print. This is the same as 2+2decimal-places* for the new 1FORMAT*.

	Use 1~,2n+2*E* to achieve the same result as the old 1~2n*E* directive.

1~G*	1~2width**,2decimal-places*,2exponent-places*,2scale*,2overflowchar,padchar,exptchar1G** 
	1      *Like 1~E*, but if the number fits without an exponent, it is printed without one.
	This command used to be used to go to a particular argument.

	Use 1~2argument-number*@** to achieve the same result as the old 1~2argument-number*G* directive.

1  *In System 99, 1CLI:FORMAT* has the same function definition as 1GLOBAL:FORMAT*, so code written
for1 *System 98 which use1d CLI:FORMAT* will work correctly in System 99.
1  *Only code which used 1GLOBAL:FORMAT* with any of the above changed1 FORMAT* directives will need
to be altered to run in System 99.

] 4The3 FONTS* package no longer3 USE*s3 GLOBAL.** 

This means that any fonts created in earlier systems will have to be redumped
in order to work with system 99. This has been done for all the system's fonts
appearing  in the 1SYS: FONTS;* directory.
There are two ways to do update the fonts to run in system 99. The first is to
write out (using 1FED*) a 1KST* format file of the font, load that into a system 99
world and then write out a 1QFASL* font file.
The other technique is to do the following (in either system 98 or system 99)
   1(use-package "GLOBAL" "FONTS")* 
   1(load 2file-containing-font*)* 
   1(unuse-package "GLOBAL" "FONTS")* 
   1(compiler:fasd-symbol-value 2file-to-contain-font *'fonts:2name-of-font*)* 
Fonts from system 99 will load into system 98, but to load a system 98 font into
a system 99 world, you will have to perform one of the above conversions.

] 4Using Common Lisp in the MIT Lisp Machine System.* 

The variable 1*DEFAULT-COMMON-LISP** has now gone --- readtables now contain all
the data which relied upon this variable. To use make a lisp listener use Common
Lisp reader syntax and functions by default, do
1 (SETQ *READTABLE* SI:COMMON-LISP-READTABLE)* 
  or equivalently,  1(COMMON-LISP T)* 
To use traditional Zetalisp syntax and functions, do
1 (SETQ *READTABLE* SI:STANDARD-READTABLE)* or 1(COMMON-LISP NIL)* 

To make a file read in using common-lisp syntax, and use common-lisp functions,
put "1Readtable: Common-Lisp*" or "1Readtable: CL*" in the attribute list
(the "1-*-*" line) of the file.
To make a file always read using traditional syntax and functions, use
"1Readtable: Traditional*" or just "1Readtable: T*".

The new editor command 1m-x Set Readtable* will frob this for you.

1SI:FIND-READTABLE-NAMED SI:*ALL-READTABLES* SI:RDTBL-NAMES* 
1COMMON-LISP* 

] 4Arguments to 3APROPOS* and 3WHERE-IS* extended* 

The arguments to apropos are now
1SUBSTRING &OPTIONAL (PACKAGE *ALL-PACKAGES*)* 
1          &KEY (INHERITORS NIL) (INHERITED T)* 1DONT-PRINT* 
1               PREDICATE BOUNDP FBOUNDP*
The 1PACKAGE* argument is now the always the second argument
(it used to be a keyword argument)
The value of this argument may be 1NIL*, meaning to search all packages,
a single package or package name, or a list of packages and/or package names.

1WHERE-IS* now accepts a package or a package name or a list of packages
and/or package names as it second argument

] 4Ratios read and print according to current value of 3*READ-BASE** and 3*PRINT-BASE*** 

Ratios used to be always read and printed using decimal notation when using
traditional (non-common-lisp) syntax.
Thus, 1#5r-10\12* (or 1#5r -10/12* in common-lisp syntax) now represents
``minus five sevenths.''

] 3SELECTQ4 now uses *EQL4 as its test function.** 

1SELECTQ* formerly performed all its comparisons using 1EQ*.
Since everything that is 1EQ* is also 1EQL*, and the only things which are 1EQL* but not 1EQ* 
are flonums, bignums and ratios (which should never have been used as tests for
1SELECTQ* in the past for this very reason) there should be no effect on any existing code.
1SELECTQ* and the Common Lisp macro 1CASE* are thus now identical.


] 3CATCH4 and *THROW4 are now synonymous with **CATCH4 and **THROW4 respectively.** 

1CATCH* and 1THROW* used to be defined in a way which was compatible with Maclisp.
1(CATCH *form1 TAG)* used to be what 1(CATCH 'TAG *form1)* is now, and
1(THROW *form1 TAG)* used to be what 1(THROW 'TAG *form1)* is now.
Since Maclisp itself has been issuing warnings for years saying to use 1*CATCH*, this
should cause no problems.
The implementation restrictions and general weirdness associated with the values from
1CATCH* (aka 1*CATCH*) in older system versions have been fixed; 1CATCH* now returns all the
values from the last form executed (if no 1THROW* occurs) or else the values supplied by
the second argument to 1THROW*.

] defstruct macro constructors frob 'foo???

4Compatible Lisp Programming Changes*

] 4New way of initializing process of 3TV:PROCESS-MIXIN** 

Normally, if the 1PROCESS* argument to 1TV:PROCESS-MIXIN* is  a symbol,
it is used as the top level function and 1MAKE-PROCESS* is called with
no keyword arguments.
But, as an exception, if1 PROCESS* is1 T*, the top level function is
to send the window a 1:PROCESS-TOP-LEVEL* message with no arguments.
So, for example, one could write:

1(defflavor crock-window ()* 
1                        (tv:process-mixin tv:window)* 
1  (:default-init-plist :process t)* 
1  (:documentation "A window which displays a crock."))* 

1(defmethod (crock-window :process-top-level) ()* 
1  (draw-crock self)* 
1  (do-forever* 
1    (update-hands)* 
1    (process-sleep 60.)))* 

] 4Compiler Optimization changed.* 

Many compiler optimizers have been reimplemented, and should often produce
better code. The most visible change is that any form is only optimized once,
no matter where it appears. (In earlier systems, a form could sometimes be optimized
twice, which could produce duplicate compiler warnings) In addition, the order in which
optimizations are carried out has changed. All the arguments to a function are optimized
before the call to the function on those arguments, unless the "function" is a macro
or special form, in which case it is expected to take responsibility for doing its own
optimizations.

4] New 3:SUBMIT* option for opening files* 

A new 1:submit* option available in 1OPEN* and 1WITH-OPEN-FILE* and friends, when 1T*
(default 1NIL*) will submit the file for batch processing.  Thus, the 1:direction*
must be 1:output* as well.  The 1:submit* option is currently effective on VMS and
Twenex Chaosnet FILE servers.

An example:

1(DEFUN RETRIEVE-TWENEX-FILE (F) 
  "Submit a batch job that will retrieve the file F" 
  (SETQ F (FS:PARSE-PATHNAME F))
  (WITH-OPEN-FILE (S (SEND (SEND (SEND (SEND F :HOST) :SAMPLE-PATHNAME) *
				1 :HOMEDIR)*
			1   :NEW-PATHNAME :NAME "_RETRIEVE" *
			1   :TYPE "CTL" :VERSION :NEWEST)*
		1     :DIRECTION :OUTPUT*
		1     :TEMPORARY T*
		1     :SUBMIT T)
    (FORMAT S "@RETRIEVE ~A~%" (SEND F :STRING-FOR-HOST))))

4] New 3:PROPERTIES* operation on** 4file streams* 

Sending a 1:properties* message to a file stream returns two values: a property
list, like the kind which is a element of the list returns by 1FS:DIRECTORY-LIST*,
and a list of settable properties.  There is the usual optional ``error-p'' argument,
as well.  This operation uses a new 1PROPERTIES* command in the Chaosnet file
protocol, so it may not work with servers running old software.

4User Interface Changes* 

] 4Standard hardcopy options can be defaulted on a per-printer-type basis* 

1(SET-PRINTER-DEFAULT-OPTION* printer-type option value1)* allows the user to set a
default option for a printer type, which the hardcopy functions look at.
A common use at MIT may be 1(SET-PRINTER-DEFAULT-OPTION :DOVER :SPOOL* 1T)*,
which will cause Dover output to be spooled unless the 1:SPOOL* option to a
hardcopy function is supplied.  Currently defaultable options are 1:FONT*,
1:FONT-LIST*, 1:HEADING-FONT*, 1:PAGE-HEADINGS*, 1:VSP*, 1:COPIES*, and 1:SPOOL*.

] 4Usual mail file* 4directory option for ZMail* 

You can set this option in the Profile editor in ZMail.  It simply informs ZMail to
use a short name for a mail file in a menu, if that file is found in the directory.

]4 New beep types* 4for the type argument to* 3TV:BEEP* 

	2Name*			      2Condition* 
	1FQUERY*		      1FQUERY* asks for something and needs to beep.
	1SUPDUP:TERMINAL-BELL*   Bell character received

4] 3DRIBBLE-START*, 3DRIBBLE-END** 4gone* 
Use 1(DRIBBLE 2filename*)* or 1(DRIBBLE-ALL 2filename*)* to start wallpapering output
to a file, and 1(DRIBBLE)* with no arguments to terminate output and close the
file.

multiple-cerror

4] 3SELECT-MATCH* and 3LIST-MATCH-P* now accept logical combinations of patterns* 
Hack and, or, not appearing at top-level. Not ambiguous, since not quoted.
(defun hack-add-sub (x)
  (select-match x
    ((or `(+ ,y 0) `(- ,y 0) `(+ y)) t
     y)
    ((not (or `(+ . ,ignore) `(- . ,ignore))) t
     (ferror nil "You lose"))
    (t x)))

4] Complex and rational arithmetic is now common-lisp compatible.* 

4] Short-floats have one more bit of mantissa.* 
qfasls still ok if mantissa is within old range -- can be loaded into 98 world.  If
not, will barf... 
Short-floats now have 17 bits of mantissa, 7 bits of exponent magnitude, and 1 bit
of exponent sign.

4] New types 3NON-COMPLEX-NUMBER* and 3REAL** 
1(TYPEP 2x *(NON-COMPLEX-NUMBER 2low high*))* returns 1T* if 2x* is a non-complex
number (ie a floating-point number, a ratio or an integer) between 2low* and2 high*,
the limits as usual being inclusive normally, or exclusive if they constist of a
list of one element.
Note that complex-numbers with imaginary part = 0 are never of 1NON-COMPLEX-NUMBER*,
since they are always of type 1COMPLEX*. To account for this additional case, there
is another new type, 1REAL*, which is defined such that 
1(TYPEP 2x *(REAL 2low high*))* returns 1T* if 2x* is a either a non-complex
number between 2low* and2 high*, or a complex number with a zero imaginary part
and a real part lying between 2low* and 2high*.

4] Changes to forms specially treated at top-level in the compiler.* 
make-package, require, progn, 
use eval-when to change this

4] New macro: 3TV:WITH-WHO-LINE-RUN-STATE** 

4] New variable 3TIME:*DEFAULT-DATE-PRINT-MODE**

] Changes to logical pathnames* 
fs:make-logical-pathname-host fs:set-logical-pathname-host
sys:site;foo translations
logical pathnames now have structured directories.
Manly pathname merging function

terminal c-clear-input is now terminal c-m-clear-input

4Editor Changes* 
m-x set readtable m-x set common-lisp
lisp mode sets quoting character as appropriate
c-x j doesn't barf if register points to another buffer.
m-x lisp lower/uppercase region renamed lower/uppercase lisp code in region
  -- m-x lisp now completes to "lisp mode"
c-m-y in minibuffers yanks hostory, m-sh-y hacks previous command
zwei:search renamed zwei:zwei-search to avoid name conflict with global:search

4Network Changes* 

]4 3SI:PARSE-HOST* Uses the 3HOSTAB* Servers By Default* 

1SI:PARSE-HOST*'s second argument, 1UNKNOWN-OK*, now defaults to 1T*.  That means that if it
can't find the host on 1SI:HOST-ALIST*, it tries contacting a host table server to see if 2it* 
knows about the host.  If the server contact does not, an error is signalled (or 1NIL* is
returned) as usual.  The change was made to minimise the penalty for not loading the
latest site files.  (Up-to-date site information can be a problem at large installations.)

The list of hosts that may be contacted on the Chaosnet for this service are listed in the
site option 1:CHAOS-HOST-TABLE-SERVER-HOSTS*.

]4 New Chaos Routing Inspector Functions.* 

These two functions make use of the 3DUMP-ROUTING-TABLE* protocol,
documented in the new edition of the Lisp Machine Manual.  They are primarily
for inspecting the operation of the network and the localisation of
bridging and routing problems.

(1CHAOS:SHOW-ROUTING-TABLE* host &optional (stream 1*STANDARD-OUTPUT**)) will
print out the routing table of 2host* onto2 stream*.

(1CHAOS:SHOW-ROUTING-PATH* &key (from 1SI:LOCAL-HOST*) to (stream 1*STANDARD-OUTPUT**))
will show how packets will flow from 2from* to 2to*, using the routing information
supplied by 2from* and any intervening bridges to figure out the path.

For example, 1(chaos:show-routing-path :from "charon" :to "nu-1")* may produce
the following output:

1MIT-CHARON will bounce the packet off MIT-SIPB-11 at cost 81.* 
1MIT-SIPB-11 will bounce the packet off MIT-INFINITE at cost 63.* 
1MIT-INFINITE will bounce the packet off MIT-BYPASS at cost 51.* 
1MIT-BYPASS will bounce the packet off MIT-OZ-11 at cost 37.* 
1MIT-OZ-11 will bounce the packet off XI (XX-Network-11) at cost 23.* 
1Direct path from XI (XX-Network-11) to host MIT-NU-1 on subnet 32 at interface 1.* 

]4 Chaosnet source files have been reorganised* 

The old files 1SYS: IO; CHSNCP *and1 CHSAUX *have been moved to the1 CHNCP* 
directory.  (See the 2Site option Changes* section for advice before restoring the
new sources.)  These files have been augmented by a new file, 1CHUSE*, which
now contains the user connection-level functions previously found in 1CHSAUX*.
Also moved from the 1IO1* directory are 1CHATST* (low-level testing functions) and
1EFTP*, an interface to the 3Mb (old) Ethernet Easy File Transfer Protocol that
requires a protocol-translating gateway.

4Site option Changes* 

]4 New source directories need to be created* 

A few new directoires will be used to hold Lisp Machine source files that relate
to network software.  Please create these directories on the 1SYS* host, and update
the appropriate 2sys-host-translations* variable(s) in 1SYS: SITE; SITE LISP :* 

	2Logical directory*	2Suggested translation*
	1NETWORK*		1L.NETWORK* 
	1NETWORK; CHAOS*	1L.NETWORK.CHAOS* 
	1NETWORK; IP*		1L.NETWORK.IP* 

Of course, the names of the directories will be different if you don't store
sources under a 1L* hierarchy, but the names should follow this form.

]4 New meaning for site option* 3:CHAOS* 

Before, this site option was merely 1T* or 1NIL*.  Now, a non-1NIL* value of
this option should be a string, the name of the Chaosnet.  This is to
formalize the fact that there is more than one Chaosnet in the world,
and to facilitate addressing a Chaosnet other than the local one, which
which probably be implemented through a special gateway server.  A
site's Chaosnet name is usually the site name.

]4 New site option* 3:INTERNET* 

This site option will be needed when IP is implemented for the Lisp Machine.
The value is a list of Internet subnetwork specifications.  Each specification
associates an Internet subnet with some kind of transport, usually
another type of network capable of encapsulating packets.  The spec is
of the form:

 (2internet-address transport-type . transport-parameters*) 

The Internet address actually describes a subnet of the Internet, and
will have at least one trailing zero field.  Currently defined transport
types are:

	1:CHAOS* 2chaosnet-name* 2subnet* A Chaosnet which forms
	part of the Internet by encapsulating Internet packets
	in Chaosnet UNC packets.  The subnet field is decribed below.

	1:ETHERNET* 1T* Ethernet II hardware which is an IP-active cable.
	In this case, Internet packets are in Ethernet frames with the
	standard Internet type code for Ethernet.  The T is a
	placeholder until some way of differentating IP/Ethernet
	networks is needed, if ever.

The purpose of such an option is to allow the Lisp Machine to determine,
assuming it has an NCP for Internet, how to use its interfaces and local
networks to talk IP.  For example, a Lambda running at MIT could use
either of the above transports.  It can use 1:CHAOS* because of the Internet
routing set up at MIT (even though the Chaos network at the Lambda
itself is using Ethernet as a packet medium  !), and it can use the
Ethernet interface to talk IP also, since Ethernet provides for this.
If the Lambda was just given its Internet addresses, it would have no
way of knowing for sure what interface or network it was supposed to
use.  (The site option is most useful if a machine has more than one interface to
the Internet.)

For example, MIT's Chaosnet serves as TCP medium:

	1("18.20.0.0" :CHAOS "MIT")* 

The first two components of the Internet address must be non-zero.  The
remaining fields yield the Chaosnet subnet number and host number.  If the
third field is non-zero, then this is used; the subnet number is thrown away.
This is an instance of the local Chaosnet functioning as a Class C network.
Unless your site has a particularly large number (> 5) of existing Chaosnet
subnets, it is better to ask (from the NIC) for a class C network number for
each subnet.  This will include most sites; only the MIT Chaosnet really
requires a Class B network.  Note that the Chaosnet internal (subnet)
routing is transparent from an Internet point of view, even when several
Class C networks (carrying Chaosnet packets) are in use.  At MIT, Internet
118.20.26.64* (decimal numbers) maps to Chaosnet subnet 32, host 100
(octal numbers).

Things are more complicated in the Class C case.  It is desirable for the
third component of the Internet address for the subnet to be the same
as the Chaos subnet number, but this cannot always be the case.  In such
a case (which will be fairly common), the subnet number must be obtained
in a way other than looking at the third component.  The subnet parameter
mentioned above provides the correct Chaos subnet.  Here are two
translations:

	1("192.13.4.0" :CHAOS "WIDGET")* 
	1("192.13.5.0" :CHAOS "WIDGET" 6)* 

The WIDGET CHaosnet has two subnets numbered 4 and 6, but they could not
get an Internet Class C subnet number that matched 1*.*.6.0*.
So, 1192.13.4.5* maps to Chaos subnet 4, host 5, while Internet
1"192.13.5.5* maps to subnet 6, host 5.

A ``TCP on a LAN'' using Ethernet would probably look something like
this:

	1("128.31.6.0" :ETHERNET T)* 

In the Ethernet scheme, address translation to Ethernet hardware address
is accomplished by the address resolution protocol.  The option here is
merely for informative purposes.

]4 New site option* 3:STANDALONE* 

If the Lisp Machine is just by itself, the option should be supplied with value T.
This will cause the Lisp Machine to not to try to use the Chaosnet for getting
the time, for one thing.  On the Lambda, the time will obtained from the SDU's
clock.  On the CADR, the time will be obtained from the user.

]4 New site option* 3:LOCAL-INTERNET-HOST-TABLE* 

Defaults to 1SYS: SITE; IN-HOSTS TEXT* (if not supplied or with the value
T), but can be changed to share with other subsystems or machine types.

#|

]4 New site option* 3:NET-REGIONS* 

Describes an ``area'' of the network.

	1:CHAOS* 2subnets*   One argument of 1T* includes all subnets.  Currently only
	        refers to the local Chaosnet.
	1:INTERNET* 2subnets*  Matching is done.
	1:REGION* 2region-names*  (Obviously, circularity is discouraged !)

A list of the form 1(:EXCEPT .* 2subnets1)** is also allowed.

The new predicate 1(NET:IN-NETWORK-REGION-P* network network-address
region-name1)* uses this.

|#

]4 New site option* 3:VERIFY-LM-DUMPS* 

If this site option is T, Lisp Machine file system dump tapes will be verified.
