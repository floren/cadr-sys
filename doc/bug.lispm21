 6-Oct-83 14:01:38-EDT,2243;000000000000
Date: Thursday, 6 October 1983, 14:02-EDT
From: Robert H. Kassel <sr.rob at MIT-SPEECH>
Subject: BAD bug in Zwei (can't restart)
To: BUG-LISPM at OZ

In Release 4.5, site configuration 65, on Lisp Machine Grizzly:

While in DIRED, doing a ^S

>>Trap: The first argument given to SYS:*-INTERNAL, #<DTP-LOCATIVE 13062215>, was not a number.
While in the function ZWEI:RECENTER-WINDOW  ZWEI:REDISPLAY  ZWEI:REDISPLAY-ALL-WINDOWS

ZWEI:RECENTER-WINDOW:  (P.C. = 71)
   Arg 0 (WINDOW): #<WINDOW 52456655>
   Arg 1 (RECENTER-TYPE): ABSOLUTE
   Arg 2 (RC1): NIL
   Arg 3 (RC2): NIL
   Local 4 (TOP-LINE): NIL
   Local 5 (TOP-INDEX): NIL
   Local 6 (POINT-PLINE): NIL
   Local 7 (POINT): ("      DEMO.SPIREX.4    1   1267(7)         01//26//83 10:05:36 (01//26//83)   SR.LAMEL" 16 NORMAL)
   Local 8 (SHEET): #<ZMACS-WINDOW-PANE Zmacs Window Pane 1 3001252 exposed>
   Local 9 (INTERVAL): #<DIRED-BUFFER "*Dired-2*" 5477353>
   Local 10 (LH): 16
   Local 11 (FIRST-BP): ("SPEECH:SS:<SPIRE>*.*.*" 0 NORMAL)
   Local 12 (LAST-BP): ("" 0 MOVES)
   Local 13 (DEGREE): 4
   Local 14 (N-PLINES): 60
   Local 15 (START-BP): ("      12-13-INTERFACE.LISP.9    1   2403(7)     08//28//83 21:56:21 (09//02//83) SR.CYPHER" 0 NORMAL)

ZWEI:REDISPLAY:  (P.C. = 254)
   Arg 0 (WINDOW): #<WINDOW 52456655>
   --Defaulted args:--
   Arg 1 (RECENTER-TYPE): ABSOLUTE
   Arg 2 (RC1): NIL
   Arg 3 (RC2): NIL
   Arg 4 (FORCE-TO-COMPLETION-P): NIL

ZWEI:REDISPLAY-ALL-WINDOWS:  (P.C. = 36)
   --Defaulted args:--
   Arg 0 (FORCE-TO-COMPLETION-P): NIL
   Arg 1 (SELECT-P): T

(METHOD ZWEI:EDITOR EDIT):  (P.C. = 122)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 53421127>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:EDITOR -- 11. IV's, 0. FL's 61300021>
   Arg 2 (OPERATION): EDIT
   --Defaulted args:--
   Arg 3 (TOP-LEVEL-P): T

(METHOD ZWEI:TOP-LEVEL-EDITOR COMBINED EDIT):  (P.C. = 42)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 53421127>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:TOP-LEVEL-EDITOR -- 13. IV's, 1. FL's 61300005>
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)

SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
   --Defaulted args:--
   Arg 0 (IGNORE): NIL
 6-Oct-83 16:24:18-EDT,1240;000000000000
Mail-From: ROB created at  6-Oct-83 16:22:08
Date: Thu, 6 Oct 1983  16:22 EDT
Message-ID: <[MIT-OZ].ROB. 6-Oct-83 16:22:08>
From: ROB@MIT-OZ
To:   RMS@MIT-OZ
Cc:   bug-lispm@MIT-OZ, hal@MIT-OZ
Subject: slippy-scroll
In-reply-to: Msg of 19 Sep 1983 22:01-EDT from Kent M. Pitman <kmp at MIT-MC>

    Date: Monday, 19 September 1983, 22:01-EDT
    From: Kent M. Pitman <kmp at MIT-MC>
    To:   ROB
    cc:   cstacy
    Re:   slippy-scroll

        Date: 17 Sep 1983 2030-EDT
        From: ROB at MIT-OZ
        To:   cstacy at MIT-OZ
        Re:   slippy-scroll
        Redistributed-to: kmp at MC
        Redistributed-by: CStacy at MIT-MC
        Redistributed-date: Sunday, 18 September 1983, 15:37-EDT

        Slippy scroll hack is available as a demo by loading
        "speech:ss:<lexis>demo-slippy"
        its source is contained in
        "speech:ss:<lexis>slippy-scroll"

    I tried this. It's very cute. You should show it to RMS and 
    the Symbolics folks. Maybe someone will pick up on the idea and
    really use it. It has some very nice properties. The BOXER group
    (Abelson, etc.) might also be interested.

Remember, this was only a quick hack and needs LOTS of
work!

			ROB

 6-Oct-83 16:34:37-EDT,1129;000000000000
Received: from SCRC-CHARLES by SCRC-TENEX with CHAOS; Thu 6-Oct-83 14:38:01-EDT
Date: Thursday, 6 October 1983, 14:35-EDT
From: David C. Plummer <DCP@SCRC-TENEX>
Subject: BAD bug in Zwei (can't restart)
To: sr.rob@MIT-SPEECH, BUG-LISPM@MIT-OZ
In-reply-to: The message of 6 Oct 83 14:02-EDT from Robert H. Kassel <sr.rob at SPEECH>

    Date: Thursday, 6 October 1983, 14:02-EDT
    From: Robert H. Kassel <sr.rob at MIT-SPEECH>
    In Release 4.5, site configuration 65, on Lisp Machine Grizzly:

    While in DIRED, doing a ^S

    >>Trap: The first argument given to SYS:*-INTERNAL, #<DTP-LOCATIVE 13062215>, was not a number.
    While in the function ZWEI:RECENTER-WINDOW  ZWEI:REDISPLAY  ZWEI:REDISPLAY-ALL-WINDOWS

    ZWEI:RECENTER-WINDOW:  (P.C. = 71)
    ZWEI:REDISPLAY:  (P.C. = 254)

The way I have found to recover from this major a Zwei lossage is to return from
the ZWEI:REDISPLAY frame and c-X c-K the buffer without even thinking of doing
anything else.  (You could also (c-m-1) c-m-L the buffer to make it not current,
but if you happen to reselect it you'll be stuck in the mud again.)
 6-Oct-83 23:55:23-EDT,2271;000000000000
Date: Thursday, 6 October 1983, 22:13-EDT
From: Lori F. Lamel <Lori at MIT-SPEECH>
Subject: plots
To: BUG-LISPM at OZ

In System 222.296, Zmail 74.47, LMFS 30.46, Spire 11.44,
site configuration 63, on Lisp Machine Boo Boo:

looks like this cummulative distribution is a bug in this version of spirex.
In addition, the scales for histograms and smoothed histograms of the same data are
offset.  I'm not convinced that scatterplots are right either.

>>Trap: The subscript into "", -1., was negative in DRAW-AXIS-LABEL
While in the function DRAW-AXIS-LABEL  DRAW-BOTTOM-AXIS  DRAW-AXES

DRAW-AXIS-LABEL:  (P.C. = 132)
   Arg 0 (LABEL): ""
   Arg 1 (POWER-OF-TEN): 3.
   Arg 2 (X): 359.
   Arg 3 (Y): 519.
   Arg 4 (VERTICAL?): NIL
   Local 0 (LENGTH): NIL
   Local 1 (X-START): NIL
   Local 2 (Y-START): NIL
   Local 3 (ROTATIONS): NIL
   Local 4 (LABEL-LENGTH): 0.
   Local 5 (ENDS-IN-PAREN?): NIL
   Local 6 (TRUNCATED-LENGTH): NIL
   Local 7 (TIMES-TEN): NIL
   Local 8 (SUPERSCRIPT): NIL
   Local 9 (CLOSING): NIL
   Local 10 (SUPERSCRIPT-X-OFFSET): NIL
   Local 11 (SUPERSCRIPT-Y-OFFSET): NIL
   Local 12 (X): NIL
   Local 13 (Y): NIL
   Local 14 (X): NIL
   Local 15 (Y): NIL
   Local 16 (X): NIL
   Local 17 (Y): NIL

DRAW-BOTTOM-AXIS:  (P.C. = 314)
   Arg 0 (LABEL): ""
   Arg 1 (RANGE): (0. 2000.0)

DRAW-AXES:  (P.C. = 115)
   Arg 0 (GRAPH-LABEL): "Cumulative Distribution of cog-1000-1900 son"
   Arg 1 (LEFT-LABEL): "Number of Samples"
   Arg 2 (LEFT-RANGE): 64.
   Arg 3 (BOTTOM-LABEL): ""
   Arg 4 (BOTTOM-RANGE): (0. 2000.0)
   Arg 5 (RIGHT-LABEL): "Percent of Total"
   Arg 6 (RIGHT-RANGE): (0.0 100.0)

DISPLAY-CUMULATIVE-DISTRIBUTION:  (P.C. = 123)
   Arg 0 (LABEL): "Cumulative Distribution of cog-1000-1900 son"
   Arg 1 (NUMBERS): (1356.044376 1444.748016 1293.095508 1363.675293 1230.60083 1232.833475 1328.391638 1400.007866 1347.129325 1228.890523 ...)
   Arg 2 (X-RANGE): (0. 2000.0)
   Arg 3 (Y-RANGE): 64.

SI:*EVAL:  (P.C. = 653)
   Arg 0 (FORM): (DISPLAY-CUMULATIVE-DISTRIBUTION *GRAPH-LABEL* (NUMBERS *X-AXIS*) *X-RANGE* *Y-RANGE*)

PERFORM-DISPLAY:  (P.C. = 40)

VIEW-DISPLAY:  (P.C. = 101)

MAIN-LOOP:  (P.C. = 157)

Rest of stack:
SI:PROCESS-TOP-LEVEL:  (P.C. = 125)
 7-Oct-83 17:41:46-EDT,730;000000000000
Date: Friday, 7 October 1983, 17:25-EDT
From: sr.cypher at speech
Sender: SR.HUME at MIT-SPEECH
To: BUG-LISPM at OZ

In Release 4.5, site configuration 65, on Lisp Machine Grizzly:
On the 3600

The following improperly tries to do non-integral points for draw-line.
Rather than giving an error, this does not signal an error, but, instead, produces
an interesting display and crashes lisp and fep.


(defun Spinner (&optional (Limit 13.)(R 256.)(Cx 256.)(Cy 256.)
		&aux (Pi (atan2 0. -1.)))
  (do ((I 0. (1+ I)))
      ((> I Limit))
    (let ((Angle (// (* 2. Pi I) Limit)))
      (send standard-output ':draw-line
	    Cx Cy
	    (+ Cx (* R (cos Angle)))
	    (+ Cy (* R (sin Angle)))
	    tv:alu-xor))))
 7-Oct-83 22:23:25-EDT,942;000000000000
Received: from SCRC-EUPHRATES by SCRC-TENEX with CHAOS; Fri 7-Oct-83 22:20:09-EDT
Date: Friday, 7 October 1983, 22:15-EDT
From: David A. Moon <Moon@SCRC-TENEX>
Subject: :draw-line with floating-point arguments
To: sr.cypher@MIT-SPEECH
Cc: BUG-LISPM@MIT-OZ
In-reply-to: The message of 7 Oct 83 17:25-EDT from sr.cypher at SPEECH

    Date: Friday, 7 October 1983, 17:25-EDT
    From: sr.cypher at speech
    In Release 4.5, site configuration 65, on Lisp Machine Grizzly:
    On the 3600

    The following improperly tries to do non-integral points for draw-line.
    Rather than giving an error, this does not signal an error, but, instead, produces
    an interesting display and crashes lisp and fep.

Lack of type-checking in several places in the microcode.  This was fixed
in the microcode that comes with Release 5; all places that only allow fixnums
do the appropriate type-checking and signal a reasonable error.
 7-Oct-83 23:18:08-EDT,942;000000000000
Received: from SCRC-EUPHRATES by SCRC-TENEX with CHAOS; Fri 7-Oct-83 22:20:09-EDT
Date: Friday, 7 October 1983, 22:15-EDT
From: David A. Moon <Moon@SCRC-TENEX>
Subject: :draw-line with floating-point arguments
To: sr.cypher@MIT-SPEECH
Cc: BUG-LISPM@MIT-OZ
In-reply-to: The message of 7 Oct 83 17:25-EDT from sr.cypher at SPEECH

    Date: Friday, 7 October 1983, 17:25-EDT
    From: sr.cypher at speech
    In Release 4.5, site configuration 65, on Lisp Machine Grizzly:
    On the 3600

    The following improperly tries to do non-integral points for draw-line.
    Rather than giving an error, this does not signal an error, but, instead, produces
    an interesting display and crashes lisp and fep.

Lack of type-checking in several places in the microcode.  This was fixed
in the microcode that comes with Release 5; all places that only allow fixnums
do the appropriate type-checking and signal a reasonable error.
 8-Oct-83 14:20:41-EDT,974;000000000000
Date: Saturday, 8 October 1983, 14:18-EDT
From: Michael A. Patton <MAP at MIT-MC>
To: BUG-LISPM at MIT-OZ

In MIT-Specific 19.5, System 94.39, ZMail 50.17,
Experimental Local-File 44.3, microcode 239, gc@34,
on Lisp Machine Nine:

Several problems:

1:
When I tried to log in with user name CCS.TMRC.MAP on host OZ, I got an
error that said something like: "File server claims to be logged in as
someone else".  I couldn't make this work, I tried no-init-file and
others (in fact I tried to send a bug report then, but it insisted I log
in which crashed again).

To get around this I tried logging in with MC as my host which led to:

2:
This LISP Machine appears (at only some times?) to think MIT-MC is a
TENEX.  In particular while loading my INIT file from MC (which I know
is quite obsolete).  I got an error about version number must be numeric
or some such, anyway it was inside a flavor which said something about
TENEX family file systems!
 8-Oct-83 18:45:58-EDT,335;000000000000
Date: Saturday, 8 October 1983, 18:43-EDT
From: Christopher N. Hume <SR.HUME at MIT-SPEECH>
Subject: Array Compatiblity
To: BUG-LISPM at OZ

In Release 4.5, site configuration 65, on Lisp Machine Grizzly:

On an LM2 fillarray works with 2 dimensional arrays as INPUT.
The 3600 works for the 1 dimensional case, but NOPs on 2.
 9-Oct-83 04:17:51-EDT,2579;000000000000
Date: Sunday, 9 October 1983, 04:16-EDT
From: Tim McNerney <TIM at MIT-OZ>
Subject: Random Save bug
To: BUG-LISPM at MIT-OZ

In Release 4.5, site configuration 75, on Lisp Machine Keith Moon:

[Get Inbox]  (There wasn't any new mail)
Walked up and down summary (noticed that some messages needed to be expunged)
Selected a message
[Save] (Mouse Left)
...whirr, buzz, and then suddenly... Shazam!

>>Error: The argument ARRAY to ARRAY-ACTIVE-LENGTH, NIL, was of the wrong type.
The function expected an array.
While in the function ARRAY-ACTIVE-LENGTH  APPEND-TO-ARRAY  ZWEI:UPDATE-MSG-NEW-BABYL-STATUS-LINE

ARRAY-ACTIVE-LENGTH:  (P.C. = 7)
   Arg 0 (ARRAY): NIL
   Local 1 (TEM): NIL

APPEND-TO-ARRAY:  (P.C. = 11)
   Arg 0 (TO-ARRAY): "1, answered,, "
   Arg 1 (FROM-ARRAY): NIL
   --Defaulted args:--
   Arg 2 (FROM-START): 0
   Arg 3 (FROM-END): NIL

ZWEI:UPDATE-MSG-NEW-BABYL-STATUS-LINE:  (P.C. = 77)
   Arg 0 (LINE): "1, answered,, "
   Arg 1 (STATUS): #<DTP-LOCATIVE 5700262>

(METHOD ZWEI:BABYL-BUFFER UPDATE-MSG-OPTIONS-IN-FILE):  (P.C. = 37)
   Arg 0 (SELF): #<BABYL-BUFFER "OZ:PS:<TIM>TIM.BABYL" 7274473>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:BABYL-BUFFER -- 3. IV's, 6. FL's 62060554>
   Arg 2 (OPERATION): UPDATE-MSG-OPTIONS-IN-FILE
   Arg 3 (MSG): #<MSG 5700252>

(METHOD ZWEI:FILE-MAIL-BUFFER UPDATE-MSG-OPTIONS-IN-FILE-IF-NECESSARY):  (P.C. = 16)
   Arg 0 (SELF): #<BABYL-BUFFER "OZ:PS:<TIM>TIM.BABYL" 7274473>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:FILE-MAIL-BUFFER -- 9. IV's, 0. FL's 62060613>
   Arg 2 (OPERATION): UPDATE-MSG-OPTIONS-IN-FILE-IF-NECESSARY
   Arg 3 (MSG): #<MSG 5700252>

ZWEI:MSG-BUFFER-SAVE-P:  (P.C. = 30)
   Arg 0 (BUFFER): #<BABYL-BUFFER "OZ:PS:<TIM>TIM.BABYL" 7274473>

ZWEI:SAVE-MAIL-BUFFER:  (P.C. = 11)
   Arg 0 (BUFFER): #<BABYL-BUFFER "OZ:PS:<TIM>TIM.BABYL" 7274473>
   --Defaulted args:--
   Arg 1 (FOR-FINISH): NIL

ZWEI:EXPUNGE-AND-SAVE-SEQUENCE:  (P.C. = 11)
   Arg 0 (SEQUENCE): #<BABYL-BUFFER "OZ:PS:<TIM>TIM.BABYL" 7274473>

Rest of stack:
ZWEI:ZMAIL-SAVE-ALL:  (P.C. = 11)
ZWEI:COM-ZMAIL-SAVE:  (P.C. = 16)
ZWEI:COMMAND-EXECUTE:  (P.C. = 65)
ZWEI:ZMAIL-COMMAND-EXECUTE:  (P.C. = 6)
(INTERNAL ZWEI:ZMAIL-COMMAND-LIST 0):  (P.C. = 10)
ZWEI:ZMAIL-COMMAND-LIST:  (P.C. = 12)
(METHOD ZWEI:ZMAIL-FRAME PROCESS-SPECIAL-COMMAND):  (P.C. = 5)
(METHOD ZWEI:ZMAIL-FRAME COMMAND-LOOP):  (P.C. = 136)
(METHOD ZWEI:ZMAIL-FRAME COMBINED COMMAND-LOOP):  (P.C. = 45)
ZWEI:ZMAIL-PROCESS-TOP-LEVEL:  (P.C. = 56)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
 9-Oct-83 05:50:06-EDT,1429;000000000000
Date: Sunday, 9 October 1983, 05:46-EDT
From: Tim McNerney <TIM at MIT-OZ>
Subject: M-. of ZMAIL failed (tried to get source from SCRC-Pointer)
To: BUG-LISPM at MIT-OZ

In Release 4.5, site configuration 75, on Lisp Machine Keith Moon:
Zmail version 74.47

Tried to Meta-. ZMAIL (to see what flavor of scrolling window it uses).
I found out (the hard way) that the SOURCE-FILE-NAME property of ZMAIL is

((DEFSYSTEM #<LMFS-PATHNAME "F:>sys>zmail>system"> #<LOGICAL-PATHNAME "SYS: ZMAIL; SYSTEM">)
 (DEFUN #<LOGICAL-PATHNAME "SYS: ZMAIL; TOP">))

so this is understandable, but shouldn't this file be on OZ?  If it is too much trouble to
keep the latest sources on OZ, could you hack the property list of the symbols to point to
(perhaps out of date) files that we can access?  (Then again, keeping the sources on OZ is
probably a lot easier)


>>Error: #<LISPM-CHAOS-HOST SCRC-POINTER> is not a known file server host.
While in the function FS:GET-PATHNAME-HOST  FS:MAKE-PATHNAME-1  (:METHOD FS:PATHNAME :NEW-PATHNAME)

FS:GET-PATHNAME-HOST:  (P.C. = 75)
   Arg 0 (HOST-NAME): #<LISPM-CHAOS-HOST SCRC-POINTER>
   --Defaulted args:--
   Arg 1 (NO-ERROR-P): NIL
   Local 2 (INHIBIT-SCHEDULING-FLAG-initialization): T
   Local 3 (HOSTP): T
   Local 4 (L): NIL
   Local 5 (L1): (#<ITS-CHAOS-HOST MIT-ML>)

If you really want the rest of the stack, send me a message and I'll make it break again...
 9-Oct-83 15:22:37-EDT,1159;000000000000
Received: from SCRC-EUPHRATES by SCRC-TENEX with CHAOS; Sun 9-Oct-83 15:20:41-EDT
Date: Sunday, 9 October 1983, 15:17-EDT
From: David A. Moon <Moon@SCRC-TENEX>
Subject: M-. of ZMAIL failed (tried to get source from SCRC-Pointer)
To: Tim McNerney <TIM@MIT-OZ>
Cc: BUG-LISPM@MIT-OZ
In-reply-to: The message of 9 Oct 83 05:46-EDT from Tim McNerney <TIM at OZ>

    Date: Sunday, 9 October 1983, 05:46-EDT
    From: Tim McNerney <TIM at MIT-OZ>
    In Release 4.5, site configuration 75, on Lisp Machine Keith Moon:
    Zmail version 74.47

    Tried to Meta-. ZMAIL (to see what flavor of scrolling window it uses).
    I found out (the hard way) that the SOURCE-FILE-NAME property of ZMAIL is

    ((DEFSYSTEM #<LMFS-PATHNAME "F:>sys>zmail>system"> #<LOGICAL-PATHNAME "SYS: ZMAIL; SYSTEM">)
     (DEFUN #<LOGICAL-PATHNAME "SYS: ZMAIL; TOP">))

All the systems in Release 4 have physical instead of logical pathnames as source file
names.  This bug was fixed nearly a year ago, but Release 4 had already been generated
before it was noticed.  I think if you just read in the logically-named file by hand
before doing the m-. it will work.
 9-Oct-83 15:32:42-EDT,971;000000000000
Received: from SCRC-EUPHRATES by SCRC-TENEX with CHAOS; Sun 9-Oct-83 15:29:52-EDT
Date: Sunday, 9 October 1983, 15:26-EDT
From: David A. Moon <Moon@SCRC-TENEX>
Subject: Array Compatiblity
To: Christopher N. Hume <SR.HUME@MIT-SPEECH>
Cc: BUG-LISPM@MIT-OZ
In-reply-to: The message of 8 Oct 83 18:43-EDT from Christopher N. Hume <SR.HUME at SPEECH>

    Date: Saturday, 8 October 1983, 18:43-EDT
    From: Christopher N. Hume <SR.HUME at MIT-SPEECH>
    In Release 4.5, site configuration 65, on Lisp Machine Grizzly:

    On an LM2 fillarray works with 2 dimensional arrays as INPUT.
    The 3600 works for the 1 dimensional case, but NOPs on 2.

It works for me, so either it's fixed in Release 5 or I didn't understand
your bug report.  The test case I tried was:

(setq a (make-array 10) b (make-array '(2 5)))
(fillarray b '( 1 2 3 4 5 6 7 8 9 10.))
(listarray b)
=> (1 2 3 4 5 6 7 10 11 12)
(fillarray a b)
(listarray a)
=> (1 2 3 4 5 6 7 10)
 9-Oct-83 23:24:32-EDT,2030;000000000000
Date: Sunday, 9 October 1983, 23:22-EDT
From: Web Dove <dove at MIT-DSPG>
Subject: Does :unclaimed-message work for arbitrary flavors?
To: BUG-LISPM at OZ

In Release 4.5, Experimental KBSP 2.8, site configuration 65, on Lisp Machine Tweety Pie:

I defined an flavor with an :unclaimed-message handler.  It doesn't seem
to get called when an unclaimed message arrives.  I tried mixing in
flavor si:unclaimed-message (because user:unclaimed-message is
apparently not the name of a flavor as patch notes 4.2 would have one
believe), but then ordered instance variables of mine conflicted.
Should this have worked without a special mixin?

>>Error: The object #<BFR 24645401> received a FOO message, which went unclaimed.
The rest of the message was ()
While in the function SEND  SI:*EVAL  BREAK

SEND:  (P.C. = 6)
   Arg 0 (OBJECT): #<BFR 24645401>
   Arg 1 (MESSAGE-NAME): FOO
   Rest arg (ARGUMENTS): NIL

SI:*EVAL:  (P.C. = 405)
   Arg 0 (FORM): (SEND (BFR (HAMMING 31.)) (QUOTE FOO))

BREAK:  (P.C. = 360)
   Arg 0 (TAG): ZWEI:ZMACS
   --Defaulted args:--
   Arg 1 (CONDITIONAL): T

(DEFUN-METHOD ZWEI:COM-BREAK):  (P.C. = 7)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 53421127>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:EDITOR -- 11. IV's, 0. FL's 61300021>

ZWEI:COM-BREAK:  (P.C. = 12)
   Rest arg (ARGS): NIL

ZWEI:COMMAND-EXECUTE:  (P.C. = 65)
   Arg 0 (COMMAND): ZWEI:COM-BREAK
   Arg 1 (CHAR): 129.
   Arg 2 (PREFIX-CHAR): NIL
   Arg 3 (HOOK-LIST): (ZWEI:SHIFT-LOCK-HOOK)

ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 20)
   Arg 0 (CH): 129.

(METHOD ZWEI:EDITOR EDIT):  (P.C. = 173)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 53421127>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:EDITOR -- 11. IV's, 0. FL's 61300021>
   Arg 2 (OPERATION): EDIT
   --Defaulted args:--
   Arg 3 (TOP-LEVEL-P): T

Rest of stack:
(METHOD ZWEI:TOP-LEVEL-EDITOR COMBINED EDIT):  (P.C. = 42)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)



10-Oct-83 03:12:45-EDT,558;000000000000
Date: Monday, 10 October 1983, 03:11-EDT
From: Kent M. Pitman <kmp at MIT-MC>
Subject: Arguments to LEXPR-SEND
To: BUG-LISPM at MIT-MC

In a flavor method where I am dispatching on blips (and 
things like them where the car is some key and the cdr 
is related data) I would like to be able to write:

   (LEXPR-SEND SELF BLIP)

but I seem to have to write:

    (LEXPR-SEND    SELF (CAR BLIP) (CDR BLIP))
 or (LEXPR-FUNCALL SELF BLIP)
 or (LEXPR-FUNCALL #'SEND SELF BLIP)

I believe I've complained about this before a long time ago.
-kmp
10-Oct-83 14:12:37-EDT,1333;000000000000
Received: from SCRC-EUPHRATES by SCRC-TENEX with CHAOS; Mon 10-Oct-83 14:09:35-EDT
Date: Monday, 10 October 1983, 14:06-EDT
From: David A. Moon <Moon@SCRC-TENEX>
Subject: Does :unclaimed-message work for arbitrary flavors?
To: Web Dove <dove@MIT-DSPG>
Cc: BUG-LISPM@MIT-OZ
In-reply-to: The message of 9 Oct 83 23:22-EDT from Web Dove <dove at DSPG>

    Date: Sunday, 9 October 1983, 23:22-EDT
    From: Web Dove <dove at MIT-DSPG>
    In Release 4.5, Experimental KBSP 2.8, site configuration 65, on Lisp Machine Tweety Pie:

    I defined an flavor with an :unclaimed-message handler.  It doesn't seem
    to get called when an unclaimed message arrives.  

It works for me.  Can you provide a specific test case?

						      I tried mixing in
    flavor si:unclaimed-message (because user:unclaimed-message is
    apparently not the name of a flavor as patch notes 4.2 would have one
    believe), but then ordered instance variables of mine conflicted.

That flavor is the condition that is signalled by default when a message is
unclaimed.  You don't want to mix it into your flavor.

I can't believe this!  Someone actually broke into my office and stole
all the release 4 patch notes from my file cabinet!  So I'm afraid I can't
look at the 4.2 patch notes and clarify what it says there for you.
10-Oct-83 14:37:58-EDT,1452;000000000000
Mail-From: ZVONA created at 10-Oct-83 14:36:56
Date: Mon, 10 Oct 1983  14:36 EDT
Message-ID: <[MIT-OZ].ZVONA.10-Oct-83 14:36:55>
From: ZVONA@MIT-OZ
To:   tim@MIT-OZ
cc:   bug-lispm@MIT-OZ

From: Tim McNerney <TIM at MIT-OZ>
Subject: Wanted:  Documentation about Interfacing to Zwei AND A Winning Structure Editor

    ... The world could really use a Zwei-based structure editor.

    It seems so close, yet so far away.  The current concept of a
    structure editor (a la Interlisp, for example) could be vastly
    improved upon by keeping text (in upper and/or lower case, different
    fonts, comments, etc.) IN PARALLEL with the Lisp object being edited.
    Updating of the Lisp object could be delayed if the text were to
    specify some impossible state, but conversely, if the Lisp object were
    changed, the text would be updated immediately.  In a sense, the Lisp
    object would be "wired" to the screen.

    What do you think?  C'est reasonable?  C'est in ze works?  C'est no,
    I'll write one, if you tell me how to really win with Zwei.

Take a look at oz:<zvona>zwei.lisp.  It tries to make Zwei look like a
structure editor, and comes pretty close.  Specifically, all parens
can only be inserted and deleted in balanced pairs; it won't let you get
unbalanced parens.  There are some bugs and extensions that would have
to made to make it "real"; I work around them.  But none are very
difficult. 
10-Oct-83 15:23:33-EDT,2305;000000000000
Date: Monday, 10 October 1983, 15:21-EDT
From: Robert H. Kassel <sr.rob at MIT-SPEECH>
Subject: bug in srial streams
To: BUG-LISPM at OZ

In Release 4.5, site configuration 65, on Lisp Machine Grizzly:

After typing C-M-Break, I selected S-B, close serial stream 1.
This used to work corectly.

>>Error: FEP rejected an Add-FEP-Channel command of type SERIAL to unit 1..  Unit already in use?
While in the function SI:FEP-CHANNEL-ALLOCATE  (DEFUN-METHOD SI:SERIAL-GET-CHANNELS)  (METHOD SI:BASIC-SERIAL-STREAM OPEN)

SI:FEP-CHANNEL-ALLOCATE:  (P.C. = 221)
   Arg 0 (TYPE): SERIAL
   Arg 1 (DIRECTION): OUTPUT
   Arg 2 (UNIT): 1.
   Local 3 (CHANNEL): #<FEP-CHANNEL 5603000>

(DEFUN-METHOD SI:SERIAL-GET-CHANNELS):  (P.C. = 16)
   Arg 0 (SELF): #<SERIAL-FORCE-OUTPUT-CHARACTER-STREAM Unit = 1, baud = 1200 6753045>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:BASIC-SERIAL-STREAM -- 13. IV's, 0. FL's 4031345>

(METHOD SI:BASIC-SERIAL-STREAM OPEN):  (P.C. = 57)
   Arg 0 (SELF): #<SERIAL-FORCE-OUTPUT-CHARACTER-STREAM Unit = 1, baud = 1200 6753045>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:BASIC-SERIAL-STREAM -- 13. IV's, 0. FL's 4031345>
   Arg 2 (OPERATION): OPEN

(METHOD SI:BASIC-SERIAL-STREAM MAKE-SERIAL-STREAM):  (P.C. = 4)
   Arg 0 (SELF): #<SERIAL-FORCE-OUTPUT-CHARACTER-STREAM Unit = 1, baud = 1200 6753045>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:BASIC-SERIAL-STREAM -- 13. IV's, 0. FL's 4031345>
   Arg 2 (OPERATION): MAKE-SERIAL-STREAM

SI:MAKE-SERIAL-STREAM:  (P.C. = 40)
   Rest arg (KEYWORDS): (UNIT 1. ASCII-CHARACTERS T FORCE-OUTPUT T BAUD 1200. NUMBER-OF-DATA-BITS 8. ...)

MAKE-SPEECH-STREAM:  (P.C. = 33)

RESET-SPEECH:  (P.C. = 5)

SI:*EVAL:  (P.C. = 405)
   Arg 0 (FORM): (RESET-SPEECH)

Rest of stack:
ZWEI:EVAL-PRINT:  (P.C. = 3)
COMPILER:PROCESS-FORMS-FROM-STREAM:  (P.C. = 114)
ZWEI:COMPILE-INTERVAL:  (P.C. = 241)
ZWEI:COMPILE-PRINT-INTERVAL:  (P.C. = 101)
ZWEI:COMPILE-DEFINITION-INTERNAL:  (P.C. = 104)
ZWEI:COM-EVALUATE-REGION:  (P.C. = 7)
ZWEI:COMMAND-EXECUTE:  (P.C. = 65)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 20)
(METHOD ZWEI:EDITOR EDIT):  (P.C. = 173)
(METHOD ZWEI:TOP-LEVEL-EDITOR COMBINED EDIT):  (P.C. = 42)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
10-Oct-83 15:38:52-EDT,1136;000000000000
Received: from SCRC-NEPONSET by SCRC-TENEX with CHAOS; Mon 10-Oct-83 15:36:52-EDT
Date: Mon, 10 Oct 83 15:33 EDT
From: Mike McMahon <MMcM@SCRC-TENEX>
Subject: Random Save bug
To: TIM@MIT-OZ
Cc: BUG-LISPM@MIT-OZ
In-reply-to: The message of 9 Oct 83 04:16-EDT from Tim McNerney <TIM at OZ>
Message-ID: <831010153329.6.MMcM@SCRC.SCRC>

    Date: Sunday, 9 October 1983, 04:16-EDT
    From: Tim McNerney <TIM at MIT-OZ>
    In Release 4.5, site configuration 75, on Lisp Machine Keith Moon:

    [Get Inbox]  (There wasn't any new mail)
    Walked up and down summary (noticed that some messages needed to be expunged)
    Selected a message
    [Save] (Mouse Left)
    ...whirr, buzz, and then suddenly... Shazam!

    >>Error: The argument ARRAY to ARRAY-ACTIVE-LENGTH, NIL, was of the wrong type.
    The function expected an array.
    While in the function ARRAY-ACTIVE-LENGTH  APPEND-TO-ARRAY  ZWEI:UPDATE-MSG-NEW-BABYL-STATUS-LINE
Had the machine previously been logged in as someone else?
This is what happens when a message is encountered with an unknown keyword (which
shouldn't happen) at saving time.
10-Oct-83 23:10:57-EDT,2646;000000000000
Date: Monday, 10 October 1983, 23:08-EDT
From: Ken Forbus <KDF at MIT-PYGMALION>
Subject: Compiler bug
To: BUG-LISPM at OZ

In Release 4.5, site configuration 75, on Lisp Machine John Lennon:

I tried to compile the function ask-and-filter , both in the middle of a file
(PIG:[KDF]DISPLAY.LSP or OZ:SRC:<KDF.QP>DISPLAY.LSP) and from the editor, this is
what consistently happened:

>>Error: Cannot address the variable #<NORMAL-LEXICAL-VARIABLE 11545346>
While in the function COMPILER:USE-STACK-ADDRESSING-P  (PROPERTY COMPILER:VAR COMPILER:PEEP-HOLE-OPTIMIZER)  COMPILER:ASSEMBLE-INTERVAL
Error occurred while compiling NIL

COMPILER:USE-STACK-ADDRESSING-P:  (P.C. = 33)
   Arg 0 (VARIABLE): #<NORMAL-LEXICAL-VARIABLE 11545346>
   Arg 1 (LEVEL): 2
   Arg 2 (LOCATION): 3
   Local 3 (FUNCTION): #<EXTERNAL-FUNCTION 11542723>

(PROPERTY COMPILER:VAR COMPILER:PEEP-HOLE-OPTIMIZER):  (P.C. = 51)
   Arg 0 (INST): #<Inst (Var TYPE S.3)>

COMPILER:ASSEMBLE-INTERVAL:  (P.C. = 30)
   Arg 0 (INTERVAL): #<INTERVAL 11546030>

COMPILER:ASSEMBLE-FUNCTION:  (P.C. = 57)
   Arg 0 (FUNCTION): #<INTERNAL-FUNCTION 11545772>

MAPC:  (P.C. = 42)
   Arg 0 (FCN): COMPILER:ASSEMBLE-FUNCTION
   Rest arg (LISTS): ((#<INTERNAL-FUNCTION 11544367> #<EXTERNAL-FUNCTION 11542723>))

COMPILER:RUN-PHASE-4:  (P.C. = 4)

COMPILER:COMPILE-DEFINITION-1:  (P.C. = 57)
   Arg 0 (TYPE): DEFUN
   Arg 1 (FUNCTION-SPEC): ASK-AND-FILTER
   Arg 2 (LAMBDA-LIST): NIL
   Arg 3 (DEBUG-INFO): NIL
   Arg 4 (DEFINITION): ((LET ((FILTER-TYPES **)) (SETQ *FILTERED-PREMISES* *THE-PREMISES*) (SI:DISPLACED (DOLIST ** **) (DO ** ** ** **))))
   Arg 5 (FIXUP-P): T

COMPILER:COMPILE-DEFINITION:  (P.C. = 46)
   Arg 0 (EXP): (DEFUN ASK-AND-FILTER NIL (LET ((FILTER-TYPES **)) (SETQ *FILTERED-PREMISES* *THE-PREMISES*) (SI:DISPLACED (DOLIST ** **) (DO ** ** ** **))))
   Arg 1 (FIXUP-P): T
   Arg 2 (DEBUG-INFO): NIL

Rest of stack:
(INTERNAL COMPILER:COMPILE-TO-CORE 0):  (P.C. = 5)
COMPILER:COMPILE-TO-CORE:  (P.C. = 12)
COMPILER:COMPILE-FORM-FUNCTION:  (P.C. = 41)
COMPILER:COMPILE-FROM-STREAM-1:  (P.C. = 362)
COMPILER:PROCESS-FORMS-FROM-STREAM:  (P.C. = 114)
COMPILER:COMPILE-FROM-STREAM:  (P.C. = 250)
ZWEI:COMPILE-INTERVAL:  (P.C. = 124)
ZWEI:COMPILE-PRINT-INTERVAL:  (P.C. = 101)
ZWEI:COMPILE-DEFINITION-INTERNAL:  (P.C. = 104)
ZWEI:COM-COMPILE-REGION:  (P.C. = 5)
ZWEI:COMMAND-EXECUTE:  (P.C. = 65)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 20)
(METHOD ZWEI:EDITOR EDIT):  (P.C. = 173)
(METHOD ZWEI:TOP-LEVEL-EDITOR COMBINED EDIT):  (P.C. = 42)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
11-Oct-83 02:45:34-EDT,2787;000000000000
Date: 11 October 1983 01:34 EDT
From: Kent M. Pitman <KMP @ MIT-MC>
Subject:  Lisp Stopped Itself, The Saga Continues
To: BUG-LISPM @ MIT-MC
cc: RZ @ MIT-MC, KMP @ MIT-MC

Why are stack groups so hard to look at? Couldn't primitives be created
which allow you to simply view another stopped stack group? It seems to
me that an arrested process is an excellent candidate for viewing from
another process, yet the primitives provided seem to make that hard.

Even the inspector knows it has ahold of a stack group, but does nothing good
with it. It just shows you the object without even telling you it is an
array with slots and tells you that if you click left on it you can inspect
it (which is, of course, next to worthless).

RZ was getting a Lisp Stopped Itself problem in a reproducible way and
I joined in to try [unsuccessfully] to help him find clues about the 
cause. Since the problem was apparently reproducible and we didn't mind 
blowing our environment away, we came up with the following idea...

 (defwhopper (si:process :reset) (&rest args)
    (cond ((eq self *process-to-salvage*)
	   (send self ':arrest-reason))
	  (t
	   (lexpr-continue-whopper args))))

 (defwhopper (si:process :preset) (&rest args)
   ;this might be wrong or unnecessary but didn't seem harmful...
   (if (not (eq self *process-to-salvage*))
       (lexpr-continue-whopper args)))

We then set *process-to-salvage* to the particular process we knew would
lose and let the bug happen. It did and when we warm booted, there appeared
to be cruft on the processes stack which we hoped to look at for debugging
info. 

Unfortunately, we couldn't seem to get anything out of that stack because
it was arrested and we could run DBG on it. Enabling the process didn't help.
Finding the #'FALSE in the data structure of SYS:ACTIVE-PROCESSES and
forcing it to be #'TRUE instead got us a nasty scolding from the scheduler
saying that we were being bad by trying to restart a non-restartable process.
Note also that there are no handlers for Abort if you get in the error 
handler in this way, so we had to warm boot to get out of that one.

If we could have just poked a little bit up the stack, we thought perhaps
we could have gotten enough clues -- even if only heuristic ones -- to have
won. If this was not the case, we'd be interested in knowing why. If it
is something we should have been able to do, what would be the chances of
making some sort of autopsy facility?

Such a thing might even want to prompt on warm boots as in.

 Warm boot while in process #<PROCESS Foo>. Its unwind protects will
 have been lost. Would you like to see a trace of roughly what its stack
 looked like before it died? (Y or N) Yes.
  ... debugging data ...

11-Oct-83 03:49:43-EDT,350;000000000000
Date: 11 October 1983 03:47 EDT
From: Kent M. Pitman <KMP @ MIT-MC>
To: BUG-LISPM @ MIT-MC

Shouldn't system source files have a font attribute since they obviously
intend you to edit them in CPTFONT. We use a default font of MEDFNT on
our screens and reading in a system source file always shows you stuff
that runs over the end of lines...
11-Oct-83 11:37:54-EDT,1435;000000000000
Date: Tuesday, 11 October 1983, 11:35-EDT
From: Christopher N. Hume <SR.HUME at MIT-SPEECH>
Subject: Pinning down fillarray
To: BUG-LISPM at OZ

In Release 4.5, Experimental Spire Macros 2.0, Experimental Compute 2.0,
Experimental Attribute 2.2, Experimental Audio 3.1,
Experimental Speech Attributes 2.0, Experimental Display 3.1,
Experimental Speech Layouts 2.0, Experimental SpireX 9.0,
site configuration 65, on Lisp Machine Grizzly:

Release 4.5 seems to be what I've got.  I just went through it again:

(setq dst-array (make-array '(3 3)))
#<ART-Q-3.-3. 26476250>
(setq src-array (make-array '(3 3)))
#<ART-Q-3.-3. 26476313>
(fillarray src-array '(1 2 3 4 5))
#<ART-Q-3.-3. 26476313>
(listarray src-array)
(1. 2. 3. 4. 5. 5. 5. 5. 5.)
(fillarray dst-array src-array)
#<ART-Q-3.-3. 26476250>
(listarray dst-array)
(NIL NIL NIL NIL NIL NIL NIL NIL NIL)

An LM2, however, produces the same listarray result in both cases.

Now, to complicate matters with an unrelated problem.  Unfortunately,
this one is intermittent.  However, when I showed it to Scott Cyphers
he seemed to recognize it.  A cold boot made it go away.

The situation was one of having used defun and then defmacro with
the same name argument.  The defmacro would not superceed the defun.
I suppose I'm advising you of this in case it happens to catch your
eye.  I'll let you know if I can figure out how to reproduce this one.
11-Oct-83 13:37:50-EDT,725;000000000000
Received: from SCRC-MUDDY by SCRC-TENEX with CHAOS; Tue 11-Oct-83 08:30:19-EDT
Date: Tuesday, 11 October 1983, 08:28-EDT
From: Bruce Edwards <BEE@SCRC-TENEX>
Subject: Compiler bug
To: KDF@MIT-PYGMALION
Cc: BUG-LISPM@MIT-OZ
In-reply-to: The message of 10 Oct 83 23:08-EDT from Ken Forbus <KDF at PYGMALION>

First of all, the file name you gave on OZ: does not exist. It takes a
couple days to get an account on PIG if you dont already have one, and
finally your <KDF.QP> directory is protected. If you dont want us to
take up mind reading, you will have to do better at giving examples. I
believe that this bug is fixed in Release 5 (there were lots of bugs
there in release 4), but please help us verify this.
11-Oct-83 16:01:31-EDT,927;000000000000
Received: from SCRC-MUDDY by SCRC-TENEX with CHAOS; Tue 11-Oct-83 15:47:32-EDT
Date: Tuesday, 11 October 1983, 15:53-EDT
From: Bruce Edwards <BEE@SCRC-TENEX>
Subject: Not Compiler bug but not a feature yet
To: KDF@MIT-PYGMALION
Cc: BUG-LISPM@MIT-OZ
In-reply-to: The message of 10 Oct 83 23:08-EDT from Ken Forbus <KDF at PYGMALION>

In release 5 it gives the better error message:

   While compiling TYPE
   Lexical scoping not implemented for the variable TYPE
>>Error: Cannot address the variable #<NORMAL-LEXICAL-VARIABLE 20313337>
While in the function COMPILER:USE-STACK-ADDRESSING-P  (:PROPERTY COMPILER:VAR COMPILER:PEEP-HOLE-OPTIMIZER)  COMPILER:ASSEMBLE-INTERVAL
Error occurred while compiling (:INTERNAL ASK-AND-FILTER 1.)

The problem is that you are using a lexical closure, and we dont support
that yet. Wrapping a (local-declare ((special type)) ) around the whole
dolist will do the trick.
11-Oct-83 19:40:09-EDT,244;000000000000
Date: Tuesday, 11 October 1983, 19:37-EDT
From: John Canny <JfC at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In MIT-Specific 19.5, System 94.41, ZMail 50.17, microcode 239,
on Lisp Machine Thirty-two:

The (CC) subcommand :? is not recognised. 
12-Oct-83 03:32:58-EDT,2429;000000000000
Date: Tuesday, 11 October 1983, 13:04-EDT
From: Carl Hewitt <Hewitt at%MIT-OZ@MIT-ML.ARPA>
Subject: What would a wizard do?
To: BUG-LISPM at MIT-MC.ARPA

In Release 4.5, site configuration 75, on Lisp Machine Apiary-6:

When trying to save my mail file on oz: 

>>Error: Inbox buffer out of synch, get a wizard
While in the function (METHOD ZWEI:FILE-MAIL-BUFFER SAVING-DONE)  (METHOD ZWEI:BABYL-BUFFER COMBINED SAVING-DONE)  ZWEI:SAVE-BUFFER-INTERNAL

(METHOD ZWEI:FILE-MAIL-BUFFER SAVING-DONE):  (P.C. = 33)
   Arg 0 (SELF): #<BABYL-BUFFER "OZ:PS:<HEWITT>HEWITT.BABYL" 5523303>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:FILE-MAIL-BUFFER -- 9. IV's, 0. FL's 62060613>
   Arg 2 (OPERATION): SAVING-DONE
   Arg 3 (FORCING-OUT): T

(METHOD ZWEI:BABYL-BUFFER COMBINED SAVING-DONE):  (P.C. = 23)
   Arg 0 (SELF): #<BABYL-BUFFER "OZ:PS:<HEWITT>HEWITT.BABYL" 5523303>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:BABYL-BUFFER -- 3. IV's, 6. FL's 62060554>
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

ZWEI:SAVE-BUFFER-INTERNAL:  (P.C. = 61)
   Arg 0 (BUFFER): #<BABYL-BUFFER "OZ:PS:<HEWITT>HEWITT.BABYL" 5523303>
   Arg 1 (FOR-FINISH): T

ZWEI:SAVE-MAIL-BUFFER:  (P.C. = 102)
   Arg 0 (BUFFER): #<BABYL-BUFFER "OZ:PS:<HEWITT>HEWITT.BABYL" 5523303>
   Arg 1 (FOR-FINISH): T

ZWEI:FOREGROUND-BACKGROUND-FINISH:  (P.C. = 235)
   Arg 0 (BUFFER): #<BABYL-BUFFER "OZ:PS:<HEWITT>HEWITT.BABYL" 5523303>
   Arg 1 (ABORT-P): NIL

ZWEI:COM-GET-INBOX-INTERNAL:  (P.C. = 117)
   Arg 0 (FIRST-TIME-P): NIL
   --Defaulted args:--
   Arg 1 (FOR-BUFFER): #<BABYL-BUFFER "OZ:PS:<HEWITT>HEWITT.BABYL" 5523303>

ZWEI:COM-GET-NEW-MAIL-FROM-INBOX:  (P.C. = 7)

ZWEI:COMMAND-EXECUTE:  (P.C. = 65)
   Arg 0 (COMMAND): ZWEI:COM-GET-NEW-MAIL-FROM-INBOX
   Arg 1 (CHAR): (MENU ("Get inbox" . ZWEI:COM-GET-NEW-MAIL-FROM-INBOX) 1. #<ZMAIL-MAIN-COMMAND-MENU-PANE Zmail Main Command Menu Pane 1 3005415 exposed>)
   --Defaulted args:--
   Arg 2 (PREFIX-CHAR): NIL
   Arg 3 (HOOK-LIST): NIL

Rest of stack:
ZWEI:ZMAIL-COMMAND-EXECUTE:  (P.C. = 6)
(INTERNAL ZWEI:ZMAIL-COMMAND-LIST 0.):  (P.C. = 10)
ZWEI:ZMAIL-COMMAND-LIST:  (P.C. = 12)
(METHOD ZWEI:ZMAIL-FRAME PROCESS-SPECIAL-COMMAND):  (P.C. = 5)
(METHOD ZWEI:ZMAIL-FRAME COMMAND-LOOP):  (P.C. = 136)
(METHOD ZWEI:ZMAIL-FRAME COMBINED COMMAND-LOOP):  (P.C. = 45)
ZWEI:ZMAIL-PROCESS-TOP-LEVEL:  (P.C. = 56)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
12-Oct-83 03:35:17-EDT,1259;000000000000
Received: from SCRC-EUPHRATES by SCRC-TENEX with CHAOS; Tue 11-Oct-83 13:27:53-EDT
Date: Tuesday, 11 October 1983, 13:26-EDT
From: Robert A. Cassels <Cassels@SCRC-TENEX>
Subject: Font attribute for system source files
To: KMP@MIT-MC, BUG-LISPM@MIT-MC
In-reply-to: The message of 11 Oct 83 03:47-EDT from Kent M. Pitman <KMP at MC>

    Date: 11 October 1983 03:47 EDT
    From: Kent M. Pitman <KMP @ MIT-MC>
    Shouldn't system source files have a font attribute since they obviously
    intend you to edit them in CPTFONT. We use a default font of MEDFNT on
    our screens and reading in a system source file always shows you stuff
    that runs over the end of lines...

Good idea.  CPTFONT is a lot more readable in release 5 (thanks, RLB!)
so you can stop looking at that ugly MEDFNT if you want.  But you're
right that we should use all these nice features we've built into the
system.

In fact, the file attribute line is probably the right way to deal with
the LM-2 vs. 3600 editor width problem.  There should be a line-width
attribute or something like that, and probably a m-X Set System File
Attributes command which makes the file conform to system standards.
That way we don't impose our standards on all our customers.
12-Oct-83 12:11:23-EDT,2984;000000000000
Date: Wednesday, 12 October 1983, 12:07-EDT
From: Ken Forbus <KDF at MIT-PYGMALION>
Subject: Dribble files & Chaos:Reset
To: BUG-LISPM at OZ

In Release 4.5, site configuration 75, on Lisp Machine John Lennon:

Was making a dribble file.
Chaos net flakey, zapped system with (CHAOS:RESET).  Whenever I tried to print something
out (longer than some minimum length, which I suspect was the input buffer size), I get
this crapout.  It had said "locally closed", I sent it a "CLOSE" message in order to get it
working again.  Sigh


>>Error: Attempt to write to #<FILE-OUTPUT-CHARACTER-STREAM "OZ:SRC:<KDF.QP>LIMIT.BUG" 15617737>, which is in illegal state CLOSED
While in the function (METHOD FS:FILE-OUTPUT-STREAM-MIXIN SEND-OUTPUT-BUFFER)  (METHOD FS:FILE-OUTPUT-CHARACTER-STREAM COMBINED SEND-OUTPUT-BUFFER)  (METHOD SI:BASIC-BUFFERED-OUTPUT-STREAM SEND-CURRENT-OUTPUT-BUFFER)

(METHOD FS:FILE-OUTPUT-STREAM-MIXIN SEND-OUTPUT-BUFFER):  (P.C. = 54)
   Arg 0 (SELF): #<FILE-OUTPUT-CHARACTER-STREAM "OZ:SRC:<KDF.QP>LIMIT.BUG" 15617737>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:FILE-OUTPUT-STREAM-MIXIN -- 6. IV's, 1. FL's 60527352>
   Arg 2 (OPERATION): SEND-OUTPUT-BUFFER
   Rest arg (ARGS): ("" 488)

(METHOD FS:FILE-OUTPUT-CHARACTER-STREAM COMBINED SEND-OUTPUT-BUFFER):  (P.C. = 16)
   Arg 0 (SELF): #<FILE-OUTPUT-CHARACTER-STREAM "OZ:SRC:<KDF.QP>LIMIT.BUG" 15617737>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:FILE-OUTPUT-CHARACTER-STREAM -- 0. IV's, 6. FL's 60527622>
   Rest arg (.DAEMON-CALLER-ARGS.): (SEND-OUTPUT-BUFFER "" 488)

(METHOD SI:BASIC-BUFFERED-OUTPUT-STREAM SEND-CURRENT-OUTPUT-BUFFER):  (P.C. = 12)
   Arg 0 (SELF): #<FILE-OUTPUT-CHARACTER-STREAM "OZ:SRC:<KDF.QP>LIMIT.BUG" 15617737>
   Arg 1: #<Map to flavor SI:BASIC-BUFFERED-OUTPUT-STREAM -- 3. IV's, 0. FL's 60527400>
   Arg 2: SEND-CURRENT-OUTPUT-BUFFER

(METHOD SI:BUFFERED-FAST-STRING-OUT-MIXIN STRING-OUT):  (P.C. = 61)
   Arg 0 (SELF): #<FILE-OUTPUT-CHARACTER-STREAM "OZ:SRC:<KDF.QP>LIMIT.BUG" 15617737>
   Arg 1: #<Map to flavor SI:BUFFERED-FAST-STRING-OUT-MIXIN -- 3. IV's, 0. FL's 60527672>
   Arg 2: STRING-OUT
   Arg 3 (STRING): "   ~30A~S~%"
   Arg 4 (START): 0
   Arg 5 (END): 3

SI:DRIBBLE-STREAM-IO:  (P.C. = 16)
   Arg 0 (OP): STRING-OUT
   Rest arg (ARGS): ("   ~30A~S~%" 0 3)

SYS:CALL-FUNNY-FUNCTION:  (P.C. = 73)
   Arg 0 (FUNCTION): #<DTP-CLOSURE 14577374>
   Rest arg (ARGS): (STRING-OUT "   ~30A~S~%" 0 3)

Closure of SI:DRIBBLE-STREAM-IO:
   Arg 0: STRING-OUT
   Arg 1: "   ~30A~S~%"
   Arg 2: 0
   Arg 3: 3

FORMAT:FORMAT-CTL-STRING:  (P.C. = 40)
   Arg 0 (ARGS): ("NAME:" "S0")
   Arg 1 (CTL-STRING-initialization): "   ~30A~S~%"

Rest of stack:
FORMAT:  (P.C. = 75)
DESCRIBE-DEFSTRUCT:  (P.C. = 72)
DESCRIBE:  (P.C. = 61)
SI:*EVAL:  (P.C. = 405)
SI:LISP-TOP-LEVEL1:  (P.C. = 130)
DRIBBLE-START:  (P.C. = 37)
SI:*EVAL:  (P.C. = 405)
SI:LISP-TOP-LEVEL1:  (P.C. = 130)
SYS:LISP-TOP-LEVEL:  (P.C. = 7)
12-Oct-83 13:00:48-EDT,1369;000000000000
Received: from SCRC-CHARLES by SCRC-TENEX with CHAOS; Wed 12-Oct-83 13:01:03-EDT
Date: Wednesday, 12 October 1983, 12:55-EDT
From: David C. Plummer <DCP@SCRC-TENEX>
Subject: Dribble files & Chaos:Reset
To: KDF@MIT-PYGMALION, BUG-LISPM@MIT-OZ
In-reply-to: The message of 12 Oct 83 12:07-EDT from Ken Forbus <KDF at MIT-PYGMALION>

    Date: Wednesday, 12 October 1983, 12:07-EDT
    From: Ken Forbus <KDF at MIT-PYGMALION>
    In Release 4.5, site configuration 75, on Lisp Machine John Lennon:

    Was making a dribble file.
    Chaos net flakey, zapped system with (CHAOS:RESET).  Whenever I tried to print something
    out (longer than some minimum length, which I suspect was the input buffer size), I get
    this crapout.  It had said "locally closed", I sent it a "CLOSE" message in order to get it
    working again.  Sigh


    >>Error: Attempt to write to #<FILE-OUTPUT-CHARACTER-STREAM "OZ:SRC:<KDF.QP>LIMIT.BUG" 15617737>, which is in illegal state CLOSED
    While in the function (METHOD FS:FILE-OUTPUT-STREAM-MIXIN SEND-OUTPUT-BUFFER)  (METHOD FS:FILE-OUTPUT-CHARACTER-STREAM COMBINED SEND-OUTPUT-BUFFER)  (METHOD SI:BASIC-BUFFERED-OUTPUT-STREAM SEND-CURRENT-OUTPUT-BUFFER)

That looks like the correct behavior to me.  Do you have suggestions how
dribble should try and recover from having the floor pulled out from
under it?
12-Oct-83 14:24:00-EDT,2515;000000000000
Date: Wednesday, 12 October 1983, 14:21-EDT
From: Robert H. Kassel <sr.rob at MIT-SPEECH>
Subject: bug in fonts
To: BUG-LISPM at MIT-OZ

In Release 4.5, site configuration 65, on Lisp Machine Grizzly:(3600)

While loading font "SYMBOLICS50" from oz into fed.

>>Error: The negative array dimension -177777 is illegal.
While in the function MAKE-ARRAY  FED:FONT-INTO-FONT-DESCRIPTOR  FED:FONT-NAME-FONT-DESCRIPTOR

MAKE-ARRAY:  (P.C. = 325)
   Arg 0 (DIMENSIONS): (62 -177777)
   Rest arg (OPTIONS): (LEADER-LENGTH 6 NAMED-STRUCTURE-SYMBOL FED:CHAR-DESCRIPTOR TYPE ART-1B)
   Local 2 (AREA): 4
   Local 3 (TYPE): ART-1B
   Local 4 (LEADER-LIST): NIL
   Local 5 (LEADER-LENGTH): 6
   Local 6 (DISPLACED-TO): NIL
   Local 7 (DISPLACED-INDEX-OFFSET): NIL
   Local 8 (NAMED-STRUCTURE-SYMBOL): FED:CHAR-DESCRIPTOR
   Local 9 (DISPATCH): NIL
   Local 10 (N-HEADER-WORDS): NIL
   Local 11 (N-ELEMS): NIL
   Local 12 (ARRAY): NIL
   Local 13 (INDEX-P): NIL
   Local 14 (Q-P): NIL
   Local 15 (N-WORDS): NIL
   Local 16 (N-DIMS): NIL
   Local 17 (TOTAL-SIZE): NIL
   Local 18 (INITIAL-VALUE): NIL
   Local 19 (FILL-POINTER): NIL
   Local 20: (-177777)
   Local 21 (DIM): -177777

FED:FONT-INTO-FONT-DESCRIPTOR:  (P.C. = 151)
   Arg 0 (FONT): #<FONT SYMBOLICS50 10753777>

FED:FONT-NAME-FONT-DESCRIPTOR:  (P.C. = 22)
   Arg 0 (FONTNAME): FONTS:SYMBOLICS50

FED:FONT-GET-FD:  (P.C. = 7)
   Arg 0 (FONT-SYMBOL): FONTS:SYMBOLICS50

(DEFUN-METHOD FED:SELECT-FONT):  (P.C. = 10)
   Arg 0 (SELF): #<BASIC-FED-PANE Basic Fed Pane 1 6341153 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FED:BASIC-FED -- 23. IV's, 10. FL's 53542174>
   Arg 2 (FONT-SYM): FONTS:SYMBOLICS50
   Arg 3 (NEW): NIL

(METHOD FED:BASIC-FED COM-SPECIFY-FONT):  (P.C. = 102)
   Arg 0 (SELF): #<BASIC-FED-PANE Basic Fed Pane 1 6341153 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FED:BASIC-FED -- 23. IV's, 10. FL's 53542174>
   Arg 2 (OPERATION): COM-SPECIFY-FONT
   Arg 3 (IGNORE): (MENU (NIL VALUE COM-SPECIFY-FONT) 1 #<COMMAND-MENU-PANE Command Menu Pane 8 6342417 exposed>)
   --Defaulted args:--
   Arg 4 (FONT-NAME): NIL

(METHOD FED COMMAND-LOOP):  (P.C. = 423)
   Arg 0 (SELF): #<FED Fed 1 6341045 deexposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FED -- 16. IV's, 15. FL's 61630427>
   Arg 2 (OPERATION): COMMAND-LOOP

FED:FED-TOP-LEVEL:  (P.C. = 73)
   Arg 0 (WINDOW): #<FED Fed 1 6341045 deexposed>

Rest of stack:
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
12-Oct-83 15:38:36-EDT,663;000000000000
Date: Wednesday, 12 October 1983, 15:36-EDT
From: Hewitt at%MIT-OZ@MIT-ML.ARPA
Sender: TIM at%MIT-OZ@MIT-ML.ARPA
Subject: Feature needed in Tags Search
To: BUG-LISPM at MIT-MC.ARPA

We make extensive use of Tags Search and find that it would be highly desirable
if there were a kind of Tags Search that behaved much like List Callers.  That
is, instead of acting like a search, bringing you to each occurance of the
string, it would make a list of functions where the string occured in a buffer.
This way one would have a handy reference of functions that need to be changed.
Any chances of this happening in the forseeable future?

Thanks,

Carl
12-Oct-83 16:05:49-EDT,752;000000000000
Date: 12 October 1983 15:59 EDT
From: Richard E. Zippel <RZ @ MIT-MC>
Subject:  Lisp Stopped Itself, The Saga Continues
To: BUG-LISPM @ MIT-MC
cc: KMP @ MIT-MC
In-reply-to: Msg of 12 Oct 1983 01:38 EDT from Kent M. Pitman <KMP>

Assume I have a flavor that includes two other flavors, one which provides
a :display method that took two arguments and the other whih provides an
:after :display method that took only one argument.  If I send a :display 
message to to the original flavor (on a 3600) you will get Lisp stopped itself.
This is was the original bug KMP and I were trying to track down earlier.

Apparently, there isn't any argument checking inside combined methods.  It
would be nice if a more useful symptom were generated.
12-Oct-83 16:22:59-EDT,1083;000000000000
Received: from scrc-shepherd by scrc-vixen with CHAOS; 11 Oct 1983 10:58:52-EDT
Date: Tuesday, 11 October 1983, 11:01-EDT
From: Daniel L. Weinreb <DLW at SCRC>
Subject: Showing deleted files in Dired -- d vs D
To: kmp at MC, BUG-LISPM at MC
In-reply-to: The message of 28 Sep 83 19:44-EDT from Kent M. Pitman <kmp at MC>

    Date: Wednesday, 28 September 1983, 19:44-EDT
    From: Kent M. Pitman <kmp at MIT-MC>
	    Would it be possible to mark the to-be-deleted files with little
    d's instead of big D's so that the two sets of things could be visually
    distinguished?
    -kmp
We discussed this extensively a few months ago, along with general
discussion of undeletion and the old fsedit/dired problem.  In Rel 6
(or some upcoming release) there should be some big changes in Dired,
including a solution to this problem.  The latest theory I liked involved
having two columns instead of one; one telling current status of a file
(e.g. "it is a deleted file") and one saying what you plan to do ("I am
going to delete this file when you tell me to go").
12-Oct-83 17:04:25-EDT,3050;000000000000
Date: Wednesday, 12 October 1983, 17:02-EDT
From: Philip E. Agre <Agre at MIT-OZ>
Subject: incremental search X wraparound lines X Suspend-Resume X ...
To: BUG-LISPM at MIT-OZ

In Release 4.5, site configuration 62, on Lisp Machine Jimi Hendrix:

I was doing an incremental search that had placed the cursor in the
middle of a line that wrapped around a few times (that is, the line was
several hundred characters long).  I hit Suspend, evaluated a few simple
forms, and hit Resume, and I got this error:

>>Trap: The subscript given to AR-1, 256 (from local variable TV:I), on "    (1 ENTER TRY-SIMULTANEOUS-PARTITIONS  ((P1301 P0361 P1296 P1292 P0350 P1288 P0336 P1276 P0330 P1271 P0323 P1267 P1263 P0311 P0308 P0305 P0302 P0299 P0291 P0288) NIL NIL))" was beyond the length, 256.
While in the function (METHOD TV:SHEET COMPUTE-MOTION)  ZWEI:REDISPLAY  ZWEI:INCREMENTAL-SEARCH

(METHOD TV:SHEET COMPUTE-MOTION):  (P.C. = 425)
   Arg 0 (SELF): #<ZMACS-WINDOW-PANE Zmacs Window Pane 1 3001252 exposed>
   Arg 1 (SELF-MAPPING-TABLE): TV:SHEET
   Arg 2 (OPERATION): COMPUTE-MOTION
   Arg 3 (STRING): "    (1 ENTER TRY-SIMULTANEOUS-PARTITIONS  ((P1301 P0361 P1296 P1292 P0350 P1288 P0336 P1276 P0330 P1271 P0323 P1267 P1263 P0311 P0308 P0305 P0302 P0299 P0291 P0288) NIL NIL))"
   Arg 4 (START): 0
   Arg 5 (END): 663
   Arg 6 (X): 0
   Arg 7 (Y): 0
   Arg 8 (CR-AT-END-P): NIL
   Arg 9 (STOP-X): 0
   Arg 10 (STOP-Y): 17777777
   Arg 11 (BOTTOM-LIMIT): 17777777
   --Defaulted args:--
   Arg 12 (RIGHT-LIMIT): 1361
   Arg 13 (ACCOUNT-FOR-CONTINUATION-AFTER): NIL
   Local 14 (CWA): NIL
   Local 15 (CW): 10
   Local 16 (CH): 63
   Local 17 (FONT): #<FONT CPTFONT 52027561>
   Local 18 (FONTX): NIL
   Local 19 (TEM): 200
   Local 20 (I): 256
   Local 21 (N): 663
   Local 22 (NN): 274
   Local 23 (II): 136
   Local 24 (MARGIN-FLAG): T

ZWEI:REDISPLAY:  (P.C. = 137)
   Arg 0 (WINDOW): #<WINDOW 52456655>
   Arg 1 (RECENTER-TYPE): POINT
   --Defaulted args:--
   Arg 2 (RC1): NIL
   Arg 3 (RC2): NIL
   Arg 4 (FORCE-TO-COMPLETION-P): NIL

ZWEI:INCREMENTAL-SEARCH:  (P.C. = 102)
   Arg 0 (REVERSE-P): NIL

ZWEI:COM-INCREMENTAL-SEARCH:  (P.C. = 7)

ZWEI:COMMAND-EXECUTE:  (P.C. = 65)
   Arg 0 (COMMAND): ZWEI:COM-INCREMENTAL-SEARCH
   Arg 1 (CHAR): 523
   Arg 2 (PREFIX-CHAR): NIL
   Arg 3 (HOOK-LIST): NIL

ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 20)
   Arg 0 (CH): 523

(METHOD ZWEI:EDITOR EDIT):  (P.C. = 173)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 53421127>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:EDITOR -- 11. IV's, 0. FL's 61300021>
   Arg 2 (OPERATION): EDIT
   --Defaulted args:--
   Arg 3 (TOP-LEVEL-P): T

(METHOD ZWEI:TOP-LEVEL-EDITOR COMBINED EDIT):  (P.C. = 42)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 53421127>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:TOP-LEVEL-EDITOR -- 13. IV's, 1. FL's 61300005>
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

Rest of stack:
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
12-Oct-83 18:14:06-EDT,1786;000000000000
Received: from scrc-euphrates by scrc-vixen with CHAOS; 11 Oct 1983 17:37:17-EDT
Date: Tuesday, 11 October 1983, 17:40-EDT
From: David A. Moon <Moon at SCRC>
Subject: Lisp Stopped Itself, The Saga Continues
To: Kent M. Pitman <KMP at MC>
Cc: BUG-LISPM at MC, RZ at MC
In-reply-to: The message of 11 Oct 83 01:34-EDT from Kent M. Pitman <KMP at MC>

    Date: 11 October 1983 01:34 EDT
    From: Kent M. Pitman <KMP @ MIT-MC>
    Why are stack groups so hard to look at? Couldn't primitives be created
    which allow you to simply view another stopped stack group?
There are such subprimitives, not documented, and there is the DBG function.

However, the rest of your message reveals that that isn't what you want, anyway.
What you actually want is a way to warm-boot without losing the state of the
running process.  On the LM-2 this is impossible for hardware reasons.  On the
3600 we planned to do it, but haven't had time so far.  The most obvious problem
is that some of the process's stack is in memory and some is in the stack buffer
hardware, and when warm-booting you would have to figure out what's where, being
careful not to get screwed by garbage that could be there as a result of whatever
caused you to have to warm-boot in the first place.  Not in Release 5.0, but
someday perhaps.

    If we could have just poked a little bit up the stack, we thought perhaps
    we could have gotten enough clues -- even if only heuristic ones -- to have
    won.

Unfortunately the facilities for getting a stack trace of the current stack group
in a halted machine only work at SCRC, and just barely work at all here.  Someday
you'll be able to give a FEP command and get a backtrace.  I can't promise when,
although it shouldn't really be so hard.
12-Oct-83 18:14:30-EDT,1259;000000000000
Received: from scrc-euphrates by scrc-vixen with CHAOS; 11 Oct 1983 17:45:41-EDT
Date: Tuesday, 11 October 1983, 17:48-EDT
From: David A. Moon <Moon at SCRC>
Subject: Pinning down fillarray
To: Christopher N. Hume <SR.HUME at SPEECH>
Cc: BUG-LISPM at OZ
In-reply-to: The message of 11 Oct 83 11:35-EDT from Christopher N. Hume <SR.HUME at SPEECH>

    Date: Tuesday, 11 October 1983, 11:35-EDT
    From: Christopher N. Hume <SR.HUME at MIT-SPEECH>
Okay, evidently the fillarray problem with multi-dimensional arrays
is fixed in Release 5, which you should get soon for beta-test purposes.

    Now, to complicate matters with an unrelated problem.  Unfortunately,
    this one is intermittent.  However, when I showed it to Scott Cyphers
    he seemed to recognize it.  A cold boot made it go away.

    The situation was one of having used defun and then defmacro with
    the same name argument.  The defmacro would not superceed the defun.

Conceivably this could be caused by warm-booting out of compiling a file,
since defmacro is treated specially by the compiler while compiling a file.
The variables that control that appear to get correctly reset when you
warm boot, however.  Let me know if you find a way to reproduce this.
12-Oct-83 18:35:11-EDT,2419;000000000000
Mail-From: GZ created at 12-Oct-83 18:33:51
Date: Wed, 12 Oct 1983  18:33 EDT
Message-ID: <[MIT-OZ].GZ.12-Oct-83 18:33:49>
From: Gail Zacharias <GZ@MIT-OZ>
To:   Bug-lispm@MIT-OZ
cc:   bug-mail@MIT-OZ, "Barry Margolin"@MIT-MULTICS.ARPA
Subject: Bad addresses in headers
In-reply-to: Msg of 12 Oct 1983  17:06-EDT from "Barry Margolin" at MIT-MULTICS.ARPA

Some lispms seem to be writing illegal (RFC822-wise) headers, which
are also causing practical problems.  They are sending " at " instead of
"@".  The problem is that they are putting the host names in rubouts for
OZ's mailer, which would be fine except that the mailer requires that host
names in rubouts be preceded by an "@".

Here is a sample queue file, written from AP-6 I think:
    _MIT-OZ
    Marty
    MIT-OZ
    GZ.rand
    
    Date: Wednesday, 12 October 1983, 18:01-EDT
    From: Martin David Connor <Marty at MIT-OZ>
    Subject: testing mail sending
    To: gz.rand at oz,
        GZ.rand at OZ,
        GZ.rand at MIT-OZ

    I wonder what this header will come out looking like....


Here are some samples of the bad headers (the dates don't look too hot
either) from various other lispms:

    Date: Wednesday, 28 September 1983, 19:42-EDT
    From: Kent M. Pitman <kmp at MIT-MC>
    Subject: Info given prior to confirmation of m-X Delete File
    To: BUG-LISPM at MC

    In Release 4.5, site configuration 75, on Lisp Machine Apiary-4:
    ----------------------------------------------------------------
    Date: Tuesday, 11 October 1983, 11:15-EDT
    From: Philip E. Agre <Agre at MIT-OZ>
    Subject: Hey, wizard.
    To: BUG-zmail at MIT-OZ

    In Release 4.5, site configuration 62, on Lisp Machine Jimi Hendrix:
    ----------------------------------------------------------------
    Date: Tuesday, 11 October 1983, 19:37-EDT
    From: John Canny <JfC at MIT-OZ>
    To: BUG-LISPM at MIT-OZ

    In MIT-Specific 19.5, System 94.41, ZMail 50.17, microcode 239,
    on Lisp Machine Thirty-two:
    ----------------------------------------------------------------
    Date: Wednesday, 12 October 1983, 14:21-EDT
    From: Robert H. Kassel <sr.rob at MIT-SPEECH>
    Subject: bug in fonts
    To: BUG-LISPM at MIT-OZ

    In Release 4.5, site configuration 65, on Lisp Machine Grizzly:(3600)
    ----------------------------------------------------------------
12-Oct-83 19:03:25-EDT,2021;000000000000
Date: 12 October 1983  18:58-EDT (Wednesday)
From: Scott Cyphers <SR.CYPHER at MIT-SPEECH>
To:   David A. Moon <Moon at SCRC>
Cc:   BUG-LISPM at OZ, Christopher N. Hume <SR.HUME at SPEECH>
Subject: Pinning down fillarray

    Date: Tuesday, 11 October 1983, 17:48-EDT
    From: David A. Moon <Moon at SCRC>
    To:   Christopher N. Hume <SR.HUME at SPEECH>
    cc:   BUG-LISPM at OZ
    Re:   Pinning down fillarray
    Received: from scrc-euphrates by scrc-vixen with CHAOS; 11 Oct 1983 17:45:41-EDT

        Date: Tuesday, 11 October 1983, 11:35-EDT
        From: Christopher N. Hume <SR.HUME at MIT-SPEECH>
    Okay, evidently the fillarray problem with multi-dimensional arrays
    is fixed in Release 5, which you should get soon for beta-test purposes.

        Now, to complicate matters with an unrelated problem.  Unfortunately,
        this one is intermittent.  However, when I showed it to Scott Cyphers
        he seemed to recognize it.  A cold boot made it go away.

        The situation was one of having used defun and then defmacro with
        the same name argument.  The defmacro would not superceed the defun.

    Conceivably this could be caused by warm-booting out of compiling a file,
    since defmacro is treated specially by the compiler while compiling a file.
    The variables that control that appear to get correctly reset when you
    warm boot, however.  Let me know if you find a way to reproduce this.

No, it was weirder than that.  First, this was all being interpreted.
Second, as I recall, it was happening to defuns also, i.e. the new
definition was not replacing the old, whether macro or lambda -- I am
about 70% sure of that, but, unfortuneately was tired at the time and
don't remember for sure.  Compiling a definition seemed to do the
replacement.  The situation was very much like about a month ago when
things would get in a state where functions on propertys of a symbol
weren't ending up there unless a compile region were done.
12-Oct-83 22:31:03-EDT,1740;000000000000
Received: from scrc-euphrates by scrc-vixen with CHAOS; 12 Oct 1983 22:20:02-EDT
Date: Wednesday, 12 October 1983, 22:19-EDT
From: David A. Moon <Moon at SCRC-TENEX>
Subject: Lisp Stopped Itself, The Saga Continues
To: Richard E. Zippel <RZ at MIT-MC>
Cc: BUG-LISPM at MIT-MC, KMP at MIT-MC
In-reply-to: The message of 12 Oct 83 15:59-EDT from Richard E. Zippel <RZ at MIT-MC>

    Date: 12 October 1983 15:59 EDT
    From: Richard E. Zippel <RZ @ MIT-MC>
    Assume I have a flavor that includes two other flavors, one which provides
    a :display method that took two arguments and the other whih provides an
    :after :display method that took only one argument.  If I send a :display 
    message to to the original flavor (on a 3600) you will get Lisp stopped itself.
    This is was the original bug KMP and I were trying to track down earlier.

Does this happen on more than one machine?  Do ordinary number of arguments
work correctly on the machine in question?  Why did you not include the standard
bug report header, with machine name, software version, and microcode version?

    Apparently, there isn't any argument checking inside combined methods.  

Of course there is.  But something must be going haywire.

Please provide a reproducible test case.  I tried the following, both interpreted
and compiled, in both Release 4.5 and (pre) Release 5.0.  In all cases it went
into the debugger with a too-many-arguments error for b's method.

(defflavor c () (a b))

(defflavor a () ())

(defflavor b () ())

(defmethod (a :display) (x y)
  (list x y))

(defmethod (b :after :display) (z)
  (list z))

(compile-flavor-methods c)

(setq c (make-instance 'c))

(send c ':display 1 2)
12-Oct-83 22:38:36-EDT,1747;000000000000
Received: from scrc-euphrates by scrc-vixen with CHAOS; 12 Oct 1983 22:20:16-EDT
Date: Wednesday, 12 October 1983, 22:20-EDT
From: David A. Moon <Moon at SCRC-TENEX>
Subject: Lisp Stopped Itself, The Saga Continues
To: Richard E. Zippel <RZ at MIT-MC>
Cc: BUG-LISPM at MIT-MC, KMP at MIT-MC
In-reply-to: The message of 12 Oct 83 15:59-EDT from Richard E. Zippel <RZ at MIT-MC>

    Date: 12 October 1983 15:59 EDT
    From: Richard E. Zippel <RZ @ MIT-MC>
    Assume I have a flavor that includes two other flavors, one which provides
    a :display method that took two arguments and the other whih provides an
    :after :display method that took only one argument.  If I send a :display 
    message to to the original flavor (on a 3600) you will get Lisp stopped itself.
    This is was the original bug KMP and I were trying to track down earlier.

Does this happen on more than one machine?  Do ordinary number of arguments
errors work correctly on the machine in question?  Why did you not include the standard
bug report header, with machine name, software version, and microcode version?

    Apparently, there isn't any argument checking inside combined methods.  

Of course there is.  But something must be going haywire.

Please provide a reproducible test case.  I tried the following, both interpreted
and compiled, in both Release 4.5 and (pre) Release 5.0.  In all cases it went
into the debugger with a too-many-arguments error for b's method.

(defflavor c () (a b))

(defflavor a () ())

(defflavor b () ())

(defmethod (a :display) (x y)
  (list x y))

(defmethod (b :after :display) (z)
  (list z))

(compile-flavor-methods c)

(setq c (make-instance 'c))

(send c ':display 1 2)
13-Oct-83 01:01:02-EDT,2776;000000000000
Date: Thursday, 13 October 1983, 00:58-EDT
From: Kent M. Pitman <kmp at OZ>
Subject: Mouse process died in ZWEI:COUNT-LINES computing a scroll bar for ZMail
To: BUG-LISPM at OZ

In Symbolics Release 4.5, Knowledge-Based-Editor 214.0,
site configuration 55, Sorcerer's Apprentice, on PA Lisp Machine Merlin:

I got an error in the mouse process while moving the mouse in ZMail while
my Babyl file was reading in background. It's hard to tell exactly where
the mouse was, but it appeared to be over the window that shows the message
and the mouse blinker had turned into the fat up/down arrow, so it was probably
trying to compute the scroll bar info. The message in view was one that
I'm pretty sure had been fully read from disk (at least many subsequent messages
were summarized in the summary pane). I hadn't clicked on the mouse. I was just
moving it about. Here's the backtrace in case that's useful. If there is more
data I could have supplied which would help, please let me know and I'll
send it if I ever see the bug again...

>>Trap: The array given to ARRAY-LEADER, NIL, was not an array.
While in the function ZWEI:COUNT-LINES 
                    (METHOD ZWEI:ZWEI SCROLL-POSITION)
                    (DEFUN-METHOD TV:SCROLL-BAR-DRAW)

ZWEI:COUNT-LINES:  (P.C. = 41)
   Arg 0 (FROM-BP): ("Date: Tuesday, 11 October 1983, 19:05-EDT" 0. NORMAL)
   Arg 1 (TO-BP): ("Date: Tuesday, 11 October 1983, 19:05-EDT" 0. NORMAL)
   Arg 2 (IN-ORDER-P): T
   Local 3 (LINE): NIL
   Local 4 (LAST-LINE): "0, recent,,"
   Local 5 (I): 14.

(METHOD ZWEI:ZWEI SCROLL-POSITION):  (P.C. = 17)
   Arg 0 (SELF): #<ZMAIL-WINDOW Zmail Window 1 3001631 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZWEI -- 5. IV's, 0. FL's 62126434>
   Arg 2 (OPERATION): SCROLL-POSITION

(DEFUN-METHOD TV:SCROLL-BAR-DRAW):  (P.C. = 22)
   Arg 0 (SELF): #<ZMAIL-WINDOW Zmail Window 1 3001631 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:BASIC-SCROLL-BAR -- 3. IV's, 1. FL's 62126523>

(METHOD TV:BASIC-SCROLL-BAR HANDLE-MOUSE-SCROLL):  (P.C. = 34)
   Arg 0 (SELF): #<ZMAIL-WINDOW Zmail Window 1 3001631 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:BASIC-SCROLL-BAR -- 3. IV's, 1. FL's 62126523>
   Arg 2 (OPERATION): HANDLE-MOUSE-SCROLL

TV:MOUSE-DEFAULT-HANDLER:  (P.C. = 220)
   Arg 0 (WINDOW): #<ZMAIL-WINDOW Zmail Window 1 3001631 exposed>
   Arg 1 (SCROLL-BAR-FLAG): T

(METHOD ZWEI:ZWEI HANDLE-MOUSE):  (P.C. = 27)
   Arg 0 (SELF): #<ZMAIL-WINDOW Zmail Window 1 3001631 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZWEI -- 5. IV's, 0. FL's 62126434>
   Arg 2 (OPERATION): HANDLE-MOUSE

TV:MOUSE-OVERSEER:  (P.C. = 100)

SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
   Arg 0 (IGNORE): NIL
13-Oct-83 02:58:04-EDT,680;000000000000
Date: Thursday, 13 October 1983, 02:56-EDT
From: Kent M. Pitman <kmp at OZ>
Subject: Waste of time: Fully sampling a filter, then clicking on Done
To: BUG-LISPM at OZ

In ZMail in Symbolics Release 4.5 on PA Lisp Machine Merlin:

ZMail doesn't take advantage of information gained from its
Sample menu option. I just spent a long time waiting to get 
a few samples so figured I'd let it run all the way through.
The samples looked right, so I clicked Done since I figured I
couldn't do anything more useful without getting my normal window
configuration back. But the first thing it did was start the
whole filter process over just to regain the same information...
13-Oct-83 03:14:46-EDT,4995;000000000000
Date: Thursday, 13 October 1983, 03:12-EDT
From: Kent M. Pitman <kmp at OZ>
Subject: A disappearing ZMail frame, then multiple ZMail frames
To: BUG-LISPM at OZ

In Release 4.5, Knowledge-Based-Editor 214.0, site configuration 55,
Sorcerer's Apprentice, on PA Lisp Machine Merlin:

For a while ZMail was refusing to be selected via System M. Then 
I accidentally got two ZMail windows, one of which immediately died.
Here's the full story...

I sent my last ZMail bug report from ZMacs while I was waiting for
summarization in the background process. I then typed System M
to return to ZMail. Slight flicker of runbar, then nothing. System
M again. Nothing happened. Being pretty irritated, I then brought
up a system menu and clicked Left on Mail in the right (programs)
column. The runbar flashed a long time and I knew I had lost --
finally, a ZMail window appeared which called itself ZMail Frame 1
rather than Main ZMail window, but it died as illustrated below.
When I went into Peek to see what had happened, I was able to reselect
the original window from W mode there. (Possibly by then other things
would have worked also, it's hard to say. As I send this, System M seems 
willing to rotate me between the new and old ZMail frames.)

I have no idea what I could have done to make the ZMail frame be 
uninterested in getting selected in the first place. I was not doing
anything out of the ordinary at the time this all happened.

>>Trap: The instance variable *ZMAIL-SEQUENCE-NAME* is unbound in #<ZMAIL-FRAME Zmail Frame 1 5543575 exposed>.
While in the function (:METHOD MODE-LINE-WINDOW-MIXIN :REDISPLAY)  (:METHOD ZMAIL-MOUSE-SENSITIVE-MODE-LINE-PANE :COMBINED :REDISPLAY)  (:METHOD MODE-LINE-WINDOW-MIXIN :REDISPLAY)

(:METHOD MODE-LINE-WINDOW-MIXIN :REDISPLAY):  (P.C. = 67)
   Arg 0 (SELF): #<ZMAIL-MOUSE-SENSITIVE-MODE-LINE-PANE Zmail Mouse Sensitive Mode Line Pane 2 5544036 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor MODE-LINE-WINDOW-MIXIN -- 1. IV's, 0. FL's 62143310>
   Arg 2 (OPERATION): :REDISPLAY
   Arg 3 (MODE-LINE-LIST): ("Zmail " *ZMAIL-SEQUENCE-NAME* *CURRENT-MSG-NAME* (*CURRENT-MSG-KEYWORDS-STRING* "  " *CURRENT-MSG-KEYWORDS-STRING*) (*MACRO-LEVEL* "  Macro-level: " *MACRO-LEVEL*) (*MSG-MORE-STRING* "  " *MSG-MORE-STRING*))
   Arg 4 (FORCE): T
   Local 5 (MODES): (*CURRENT-MSG-NAME* (*CURRENT-MSG-KEYWORDS-STRING* "  " *CURRENT-MSG-KEYWORDS-STRING*) (*MACRO-LEVEL* "  Macro-level: " *MACRO-LEVEL*) (*MSG-MORE-STRING* "  " *MSG-MORE-STRING*))
   Local 6 (PREV): NIL
   Local 7 (L): NIL
   Local 8 (THING): *ZMAIL-SEQUENCE-NAME*

(:METHOD ZMAIL-MOUSE-SENSITIVE-MODE-LINE-PANE :COMBINED :REDISPLAY):  (P.C. = 20)
   Arg 0 (SELF): #<ZMAIL-MOUSE-SENSITIVE-MODE-LINE-PANE Zmail Mouse Sensitive Mode Line Pane 2 5544036 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZMAIL-MOUSE-SENSITIVE-MODE-LINE-PANE -- 0. IV's, 16. FL's 62143245>
   Rest arg (.DAEMON-CALLER-ARGS.): (:REDISPLAY ("Zmail " *ZMAIL-SEQUENCE-NAME* *CURRENT-MSG-NAME* (*CURRENT-MSG-KEYWORDS-STRING* "  " *CURRENT-MSG-KEYWORDS-STRING*) (*MACRO-LEVEL* "  Macro-level: " *MACRO-LEVEL*) (*MSG-MORE-STRING* "  " *MSG-MORE-STRING*)) T)

(:METHOD MODE-LINE-WINDOW-MIXIN :REDISPLAY):  (P.C. = 220)
   Arg 0 (SELF): #<ZMAIL-MOUSE-SENSITIVE-MODE-LINE-PANE Zmail Mouse Sensitive Mode Line Pane 2 5544036 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor MODE-LINE-WINDOW-MIXIN -- 1. IV's, 0. FL's 62143310>
   Arg 2 (OPERATION): :REDISPLAY
   Arg 3 (MODE-LINE-LIST): ("Zmail " *ZMAIL-SEQUENCE-NAME* *CURRENT-MSG-NAME* (*CURRENT-MSG-KEYWORDS-STRING* "  " *CURRENT-MSG-KEYWORDS-STRING*) (*MACRO-LEVEL* "  Macro-level: " *MACRO-LEVEL*) (*MSG-MORE-STRING* "  " *MSG-MORE-STRING*))
   --Defaulted args:--
   Arg 4 (FORCE): NIL

(:METHOD ZMAIL-MOUSE-SENSITIVE-MODE-LINE-PANE :COMBINED :REDISPLAY):  (P.C. = 20)
   Arg 0 (SELF): #<ZMAIL-MOUSE-SENSITIVE-MODE-LINE-PANE Zmail Mouse Sensitive Mode Line Pane 2 5544036 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZMAIL-MOUSE-SENSITIVE-MODE-LINE-PANE -- 0. IV's, 16. FL's 62143245>
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

REDISPLAY-MODE-LINE:  (P.C. = 5)

REDISPLAY-ALL-WINDOWS:  (P.C. = 50)
   --Defaulted args:--
   Arg 0 (FORCE-TO-COMPLETION-P): NIL
   Arg 1 (SELECT-P): T

(:METHOD ZMAIL-COMMAND-LOOP-MIXIN-WITH-SUMMARY :REDISPLAY):  (P.C. = 3)
   Arg 0 (SELF): #<ZMAIL-FRAME Zmail Frame 1 5543575 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZMAIL-COMMAND-LOOP-MIXIN-WITH-SUMMARY -- 1. IV's, 0. FL's 62047232>
   Arg 2 (OPERATION): :REDISPLAY

(:METHOD ZMAIL-FRAME :COMMAND-LOOP):  (P.C. = 74)
   Arg 0 (SELF): #<ZMAIL-FRAME Zmail Frame 1 5543575 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZMAIL-FRAME -- 60. IV's, 20. FL's 62046770>
   Arg 2 (OPERATION): :COMMAND-LOOP

Rest of stack:
(:METHOD ZMAIL-FRAME :COMBINED :COMMAND-LOOP):  (P.C. = 45)
ZMAIL-PROCESS-TOP-LEVEL:  (P.C. = 56)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
13-Oct-83 03:43:48-EDT,560;000000000000
Date: 13 October 1983 03:41 EDT
From: Kent M. Pitman <KMP @ MIT-MC>
To: BUG-LISPM @ MIT-MC

In ZMail in Symbolics Release 4.5 on MIT Merlin ...

I just noticed as I was reading my mail that when ZMail munched up
my MAIL.TXT file from OZ (this is my first time using it with Twenex
as an associated machine), it blew it when trying to break up the
messages. Some messages are attached to the ends of others. I have
already deleted and expunged many messages; I wonder if I have lost
anything important. 

I consider this to be a major bug.
--kmp
13-Oct-83 04:35:58-EDT,953;000000000000
Date: Thursday, 13 October 1983, 04:34-EDT
From: Kent M. Pitman <kmp at OZ>
Subject: ZMail -- foreground/background process [dead?]locks
To: BUG-LISPM at OZ

In ZMail in Symbolics Release 4.5 on MIT Merlin...

I moused Select and asked to see Unseen messages from the filter menu.
It started looking but I decided I didn't want to wait so I aborted it
and it went nearly immediately to Tyi. However, any command I type now
(even Help) now just goes into a whostate of "Background Lock". As nearly
as I can tell from the runbar, the background process right now isn't 
doing anything. Peek shows its whostate is "Parse". 

When I abort out of requests like this in the foreground, shouldn't 
the background process get told about it?

Why on earth does it require the background process's permission
to run Help, anyway? Shouldn't the commands that do negotiation
that might depend on the background hack process locking
themselves?
13-Oct-83 13:16:35-EDT,2454;000000000000
Date: Thursday, 13 October 1983, 13:13-EDT
From: Robert H. Kassel <sr.rob at MIT-SPEECH>
Subject: Bug in Serial Streams
To: BUG-LISPM at OZ

In Release 4.5, site configuration 65, on Lisp Machine Grizzly: (3600)

While trying to create a serial stream.

>>Error: FEP did not respond to an Add-FEP-Channel command of type SERIAL to unit 1.
While in the function SI:FEP-CHANNEL-ALLOCATE  (DEFUN-METHOD SI:SERIAL-GET-CHANNELS)  (METHOD SI:BASIC-SERIAL-STREAM OPEN)

SI:FEP-CHANNEL-ALLOCATE:  (P.C. = 211)
   Arg 0 (TYPE): SERIAL
   Arg 1 (DIRECTION): INPUT
   Arg 2 (UNIT): 1.
   Local 3 (CHANNEL): #<FEP-CHANNEL 5600400>

(DEFUN-METHOD SI:SERIAL-GET-CHANNELS):  (P.C. = 7)
   Arg 0 (SELF): #<SERIAL-FORCE-OUTPUT-CHARACTER-STREAM Unit = 1, baud = 9600 5503212>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:BASIC-SERIAL-STREAM -- 13. IV's, 0. FL's 4031345>

(METHOD SI:BASIC-SERIAL-STREAM OPEN):  (P.C. = 57)
   Arg 0 (SELF): #<SERIAL-FORCE-OUTPUT-CHARACTER-STREAM Unit = 1, baud = 9600 5503212>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:BASIC-SERIAL-STREAM -- 13. IV's, 0. FL's 4031345>
   Arg 2 (OPERATION): OPEN

(METHOD SI:BASIC-SERIAL-STREAM MAKE-SERIAL-STREAM):  (P.C. = 4)
   Arg 0 (SELF): #<SERIAL-FORCE-OUTPUT-CHARACTER-STREAM Unit = 1, baud = 9600 5503212>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:BASIC-SERIAL-STREAM -- 13. IV's, 0. FL's 4031345>
   Arg 2 (OPERATION): MAKE-SERIAL-STREAM

SI:MAKE-SERIAL-STREAM:  (P.C. = 40)
   Rest arg (KEYWORDS): (UNIT 1. ASCII-CHARACTERS T FORCE-OUTPUT T BAUD 9600. NUMBER-OF-DATA-BITS 8. ...)

MAKE-SPEECH-STREAM:  (P.C. = 33)

SPEAK:  (P.C. = 5)
   Arg 0 (STRING): "[17;100l[13;100l[3;40l[10;250[9;60[1g"

SI:*EVAL:  (P.C. = 405)
   Arg 0 (FORM): (SPEAK (STRING-APPEND 27. "[17;100l" 27. "[13;100l" 27. "[3;40l" 27. "[10;250" 27. ...))

Rest of stack:
SI:DO-INTERNAL:  (P.C. = 415)
DO:  (P.C. = 5)
SI:*EVAL:  (P.C. = 443)
ZWEI:EVAL-PRINT:  (P.C. = 3)
COMPILER:PROCESS-FORMS-FROM-STREAM:  (P.C. = 114)
ZWEI:COMPILE-INTERVAL:  (P.C. = 241)
ZWEI:COMPILE-PRINT-INTERVAL:  (P.C. = 101)
ZWEI:COMPILE-DEFINITION-INTERNAL:  (P.C. = 104)
ZWEI:COM-EVALUATE-REGION:  (P.C. = 7)
ZWEI:COMMAND-EXECUTE:  (P.C. = 65)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 20)
(METHOD ZWEI:EDITOR EDIT):  (P.C. = 173)
(METHOD ZWEI:TOP-LEVEL-EDITOR COMBINED EDIT):  (P.C. = 42)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
13-Oct-83 14:18:04-EDT,365;000000000000
Date: Thursday, 13 October 1983, 14:16-EDT
From: Henry Lieberman <Henry at MIT-OZ>
Subject: Nature abhors a vacuum
To: Bug-Lispm at MIT-OZ


How about making use of the empty space to the right of the
initial editor window, by putting a Supdup window there.
That's what I usually use it for, and it can't hurt since
it isn't being used for anything else.
13-Oct-83 15:16:41-EDT,579;000000000000
Date: Thursday, 13 October 1983  15:15-EDT
From: MOON at SCRC-TENEX
To:   Kent M. Pitman <kmp at OZ>
Cc:   BUG-LISPM at OZ
Subject: ZMail -- foreground/background process [dead?]locks
In-reply-to: The message of 13 Oct 1983 04:34-EDT from Kent M. Pitman <kmp at OZ>

Function 4 W will put the background process in the wholine.  By
coincidence or design, the Zmail background process is always the
next process in the list of processes after the Zmail foreground
process.  Function 1 W returns the wholine to normal.  Function Help
when you forget the magic numbers.
13-Oct-83 15:37:48-EDT,917;000000000000
Date: Thursday, 13 October 1983  15:36-EDT
From: MOON at SCRC-TENEX
To:   Henry Lieberman <Henry at MIT-OZ>
Cc:   Bug-Lispm at MIT-OZ
Subject: Nature abhors a vacuum
In-reply-to: The message of 13 Oct 1983 14:16-EDT from Henry Lieberman <Henry at MIT-OZ>

    Date: Thursday, 13 October 1983, 14:16-EDT
    From: Henry Lieberman <Henry at MIT-OZ>
    Subject: Nature abhors a vacuum
    To: Bug-Lispm at MIT-OZ

    How about making use of the empty space to the right of the
    initial editor window, by putting a Supdup window there.
    That's what I usually use it for, and it can't hurt since
    it isn't being used for anything else.
You can easily make your init file put a Supdup window there.
Just call tv:make-window with a :left argument equal to the
right-hand edge of the zmacs frame, and a :activate-p t.

That space will be used for something else in a future release (not 5.0).
14-Oct-83 10:38:43-EDT,3341;000000000000
Date: Friday, 14 October 1983, 07:07-EDT
From: Richard Mlynarik <Mly at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In System 97.18, CADR 1.0, ZMail 51.6, MIT-Specific 21.0, microcode 257,
ZM MIT, on Lisp Machine Eighteen:

fingering all lispmachines via terminal-<strange-argument>-f:

>>TRAP 16555 (TRANS-TRAP)
The variable SI:OTHER-MACHINE-LOCATION-ALIST is unbound.
Backtrace from the debugger:

CHAOS#:LISPM-FINGER-INFO (P.C. = 47)

 Arg 0 (LM-HOST): "SNOWBIRD"
Local 0 (NAME): "SCC-SNOWBIRD"


CHAOS#:FINGER-LISPMS (P.C. = 571)

 Arg 0 (STREAM): #<TRUNCATING-POP-UP-TEXT-WINDOW-WITH-RESET Truncating Pop Up Text Window With Reset 2 1025450 exposed>
 Arg 1 (HOSTS): (#FS#:LISPM-CHAOS-HOST "MIT-APIARY-1" #FS#:LISPM-CHAOS-HOST "MIT-APIARY-2" #FS#:LISPM-CHAOS-HOST "MIT-APIARY-3" #FS#:LISPM-CHAOS-HOST "MIT-APIARY-4" ...)
 Arg 2 (PRINT-FREE): T
 Arg 3 (RETURN-FREE): NIL
 Arg 4 (PRINT-INUSE): T
 Arg 5 (PRINT-DOWN): T
Local 0 (FREE): (("SCHUYLKILL" "Cherry (x243) (1024K 3600)") ("SAMOYED" "257 Training (512K)") ("NEPONSET" "243 LSS (1024K 3600)") ("MERRIMACK" "243 LSS (1024K 3600)") ...)
Local 1 (DOWN): (#FS#:LISPM-CHAOS-HOST "MIT-APIARY-2" #FS#:LISPM-CHAOS-HOST "MIT-EURIDICE" #FS#:LISPM-CHAOS-HOST "MIT-LISPM-24" #FS#:LISPM-CHAOS-HOST "MIT-LISPM-29" ...)
Local 2 (ELEMS): ((#FS#:LISPM-CHAOS-HOST "MIT-APIARY-2" **) (#FS#:LISPM-CHAOS-HOST "MIT-EURIDICE" **) (#FS#:LISPM-CHAOS-HOST "MIT-LISPM-24" **) (#FS#:LISPM-CHAOS-HOST "MIT-LISPM-29" **) ...)
Local 3 (HOST): "SNOWBIRD"
Local 4 (OLD-TIME): 26246622
Local 5: (#FS#:LISPM-CHAOS-HOST "SCC-SNOWBIRD" #FS#:LISPM-CHAOS-HOST "SCH-COLD-DUCK" #FS#:LISPM-CHAOS-HOST "SCH-DAFFY-DUCK" #FS#:LISPM-CHAOS-HOST "SCH-DONALD-DUCK" ...)
Local 6 (ELEM): (#FS#:LISPM-CHAOS-HOST "SPA-SCYLLA" (22200))
Local 7 (CONN): NIL
Local 8 (STATE): NIL
Local 9 (PKT): #<PKT 35652664>
Local 10 (STR): "seg
257 seg x308 (512K)
12:01
Sarah E. Graziano
 
"
Local 11 (HOST-NAME): "SPANIEL"
Local 12 (IDX): 57
Local 13 (ENTRY): #FS#:LISPM-CHAOS-HOST "SCC-SNOWBIRD"


CHAOS:FINGER-ALL-LISPMS (P.C. = 63)

 Arg 0 (STREAM): #<TRUNCATING-POP-UP-TEXT-WINDOW-WITH-RESET Truncating Pop Up Text Window With Reset 2 1025450 exposed>
   --Defaulted args:--
 Arg 1 (HOSTS): (#FS#:LISPM-CHAOS-HOST "MIT-APIARY-1" #FS#:LISPM-CHAOS-HOST "MIT-APIARY-2" #FS#:LISPM-CHAOS-HOST "MIT-APIARY-3" #FS#:LISPM-CHAOS-HOST "MIT-APIARY-4" ...)
 Arg 2 (PRINT-FREE): T
 Arg 3 (RETURN-FREE): NIL
 Arg 4 (PRINT-INUSE): T
 Arg 5 (PRINT-DOWN): T


TV#:KBD-FINGER (P.C. = 472)

 Arg 0 (ARG): 7
Local 0 (MODE): ALL-LISP-MACHINES
Local 1 (HOSTS): ALL-LISP-MACHINES
Local 2 (LISPMS-P): T
Local 3 (ALL-LISPMS-P): T
Local 4 (ORIGINAL-HOSTS): NIL
Local 5 (WINDOW): #<TRUNCATING-POP-UP-TEXT-WINDOW-WITH-RESET Truncating Pop Up Text Window With Reset 2 1025450 exposed>
Local 6: NIL
Local 7: NIL
Local 8: NIL
Local 9 (X): NIL
Local 10 (STREAM): #<DTP-CLOSURE 34110432>
Local 11 (HOST): NIL
Local 12 (AND-P): NIL
Local 13 (.CURRENT-WINDOW.): #<SUPDUP Supdup 1 1000553 exposed>
Local 14 (.QUEUE-LEFT.): NIL
Local 15 (.FLAG.): NIL
Local 16 (E): NIL


(INTERNAL TV#:KBD-ESC 0) (P.C. = 30)

 Arg 0 (FCN): TV#:KBD-FINGER
 Arg 1 (ARG): 7


Remainder of stack:

SI#:PROCESS-RUN-FUNCTION-INTERNAL (P.C. = 102)
SI#:PROCESS-TOP-LEVEL (P.C. = 115)
14-Oct-83 10:49:01-EDT,869;000000000000
Received: from SCRC-YAMASKA by SCRC-QUABBIN with CHAOS; Fri 14-Oct-83 08:05:29-EDT
Date: Fri, 14 Oct 83 08:05 EDT
From: Charles Hornig <Hornig@SCRC.SCRC>
Subject: Bug in Serial Streams
To: Robert H. Kassel <sr.rob@SPEECH.MIT>, BUG-LISPM@OZ.ARPA
In-reply-to: The message of 13 Oct 83 13:13-EDT from Robert H. Kassel <sr.rob at MIT-SPEECH>
Message-ID: <831014080528.2.Hornig@SCRC.SCRC>

    Date: Thursday, 13 October 1983, 13:13-EDT
    From: Robert H. Kassel <sr.rob at MIT-SPEECH>
    In Release 4.5, site configuration 65, on Lisp Machine Grizzly: (3600)

    While trying to create a serial stream.

    >>Error: FEP did not respond to an Add-FEP-Channel command of type SERIAL to unit 1.
    While in the function SI:FEP-CHANNEL-ALLOCATE  (DEFUN-METHOD SI:SERIAL-GET-CHANNELS)  (METHOD SI:BASIC-SERIAL-STREAM OPEN)

Does this happen repeatably?
14-Oct-83 17:37:06-EDT,874;000000000000
Date: Friday, 14 October 1983, 17:34-EDT
From: Kent M. Pitman <kmp at MIT-MC>
Subject: c-sh-A calls INTERN rather than INTERN-SOFT
To: BUG-LISPM at OZ

In Symbolics Release 4.5 on PA Lisp Machine Merlin ...

I notice that both RH and ZWEI will intern a symbol when you
type c-sh-A in order to look for its arglist. It seems to me
that this should be an intern-soft, since if the symbol isn't
interned arglist isn't going to win and that will keep the obarray
from getting filled with random cruft. I (and others) use c-sh-A
sometimes to help remember how a name is spelled and the current
behavior means that every call to APROPOS which I do after having
c-sh-A'd a mis-spelling will find not only the stuff I want but
also all my typos.

This would involve slight extra hair to hack packages correctly
but it seems to me that it would be worth the work.
15-Oct-83 12:28:22-EDT,1630;000000000000
Date: Saturday, 15 October 1983, 12:28-EDT
From: Robert H. Kassel <sr.rob at MIT-SPEECH>
Subject: Bug in Serial Streams
To: Hornig at SCRC.SCRC, BUG-LISPM at OZ.ARPA
In-reply-to: <831014080528.2.Hornig@SCRC.SCRC>

    Received: from SCRC-YAMASKA by SCRC-QUABBIN with CHAOS; Fri 14-Oct-83 08:05:29-EDT
    Date: Fri, 14 Oct 83 08:05 EDT
    From: Charles Hornig <Hornig@SCRC.SCRC>
    Subject: Bug in Serial Streams
    To: Robert H. Kassel <sr.rob@SPEECH.MIT>, BUG-LISPM@OZ.ARPA
    In-reply-to: The message of 13 Oct 83 13:13-EDT from Robert H. Kassel <sr.rob at MIT-SPEECH>
    Message-ID: <831014080528.2.Hornig@SCRC.SCRC>

	Date: Thursday, 13 October 1983, 13:13-EDT
	From: Robert H. Kassel <sr.rob at MIT-SPEECH>
	In Release 4.5, site configuration 65, on Lisp Machine Grizzly: (3600)

	While trying to create a serial stream.

	>>Error: FEP did not respond to an Add-FEP-Channel command of type SERIAL to unit 1.
	While in the function SI:FEP-CHANNEL-ALLOCATE  (DEFUN-METHOD SI:SERIAL-GET-CHANNELS)  (METHOD SI:BASIC-SERIAL-STREAM OPEN)

    Does this happen repeatably?

It seems to happen rather infrequently and randomly.  Once it has happened,
the serial stream seems to be wedged, i.e. all attempts to make a stream
to that port signal an error.  I never tried opening a stream to a different
port, but if I can get it to wedge again, I will.

One important note:  my application is using port 1 and allocates and de-allocates
the port by using a with-open-stream around short segments of code.  You may look
at the hack by reading the file SPEECH:PS:<SR.ROB>SPEAK.LISP

					ROB

15-Oct-83 13:13:54-EDT,1711;000000000000
Date: Saturday, 15 October 1983, 13:14-EDT
From: Robert H. Kassel <sr.rob at MIT-SPEECH>
Subject: Bug in Serial Streams
To: Hornig at SCRC.SCRC, sr.rob at SPEECH.MIT, BUG-LISPM at OZ.ARPA
In-reply-to: <831014080528.2.Hornig@SCRC.SCRC>

    Received: from SCRC-YAMASKA by SCRC-QUABBIN with CHAOS; Fri 14-Oct-83 08:05:29-EDT
    Date: Fri, 14 Oct 83 08:05 EDT
    From: Charles Hornig <Hornig@SCRC.SCRC>
    Subject: Bug in Serial Streams
    To: Robert H. Kassel <sr.rob@SPEECH.MIT>, BUG-LISPM@OZ.ARPA
    In-reply-to: The message of 13 Oct 83 13:13-EDT from Robert H. Kassel <sr.rob at MIT-SPEECH>
    Message-ID: <831014080528.2.Hornig@SCRC.SCRC>

	Date: Thursday, 13 October 1983, 13:13-EDT
	From: Robert H. Kassel <sr.rob at MIT-SPEECH>
	In Release 4.5, site configuration 65, on Lisp Machine Grizzly: (3600)

	While trying to create a serial stream.

	>>Error: FEP did not respond to an Add-FEP-Channel command of type SERIAL to unit 1.
	While in the function SI:FEP-CHANNEL-ALLOCATE  (DEFUN-METHOD SI:SERIAL-GET-CHANNELS)  (METHOD SI:BASIC-SERIAL-STREAM OPEN)

    Does this happen repeatably?


I have been able to repeat this!

While in the editor, evaluate something to send lots of data to 
a serial stream.  My sends involved many opens and closes so FEP
chanels were continuously being opend and closed.

During the sending, type c-m-suspend.  At the propmt type abort.
You will be returned to top level.

Now evaluate something to send to the port again.  You will get 
a serial unit lock.  Type c-m-suspend again.  At the prompt, type
s-b to close and abort the unit.  The error will occur.

If I can be of any other help, please let me know.

				ROB

15-Oct-83 23:13:17-EDT,700;000000000000
Date: Saturday, 15 October 1983, 23:13-EDT
From: Robert H. Kassel <sr.rob at MIT-SPEECH>
Subject: Slippy Scroll Windows
To: Bug-LispM at MIT-OZ, Gavan at MIT-OZ, Cstacy at MIT-OZ, kmp at MIT-MC,
    hal at MIT-OZ, dph at MIT-OZ, tim at MIT-OZ, sr.chen at MIT-SPEECH


1>  There has been a SLIGHT improvement in slippy
	scroll window.  The mouse does the right
	thing on the 3600 and also handles calls
	to the system menu through mouse-r-1 &
	mouse-r-2.

2> To the anonymous fixer of the code...  Thanks! 
	Please step forward.

3> If you would like to get mail about updates to
	slippy-scroll-windows, please send me your
	name.  I will be making a mailing list soon.


			ROB
15-Oct-83 23:33:36-EDT,368;000000000000
Date: 15 Oct 1983 2330-EDT
From: Randy Haskins <rh at MIT-EECS>
Subject: cursorpos
To: bug-lispm at MIT-OZ

I noticed recently that at least the Symbolics band doesn't support
cursorpos 's and cursorpos 'r (saving and restoring the cursor).  
Admittedly, I could easily write my own functions to do this, but
it should probably be included.

Randy
-------
15-Oct-83 23:41:29-EDT,3598;000000000000
Date: Saturday, 15 October 1983, 23:40-EDT
From: Scott Cyphers <SR.CYPHER at MIT-SPEECH>
To: BUG-LISPM at OZ

In Release 4.5, Spire 11.51, SpireX 9.6, site configuration 61, on Lisp Machine Yogi:

I had been away long enough for my file connections to have gone away.
I went into Zmail and typed G for get new mail and got this error.

>>Error: ANONYMOUS is an invalid file name for FS:TOPS20-PATHNAME
While in the function (METHOD FS:PATHNAME VALIDATE-COMPONENT)  (METHOD FS:PATHNAME VALIDATE)  (METHOD FS:PATHNAME-HASH-TABLE-MIXIN GET-PATHNAME)

(METHOD FS:PATHNAME VALIDATE-COMPONENT):  (P.C. = 105)
   (SELF = #<TOPS20-PATHNAME "SPEECH:PS:<SR.CYPHER>.BABYL">)
   Arg 0 (OPERATION): VALIDATE-COMPONENT
   Arg 1 (TEST-ARG): ANONYMOUS
   Arg 2 (TEST-ARG-LOC): #<DTP-LOCATIVE -30033312>
   Arg 3 (VALID-MSG): RAW-NAME
   Arg 4 (TEST-MSG): VALID-NAME-P
   Arg 5 (CASE-MSG): CASE-NAME
   Arg 6 (UNCASE-MSG): UNCASE-NAME
   Arg 7 (COMPONENT): NAME
   Arg 8 (PRETTY-NAME): "file name"
   Local 0 (NEW-VALUE): NIL

(METHOD FS:PATHNAME VALIDATE):  (P.C. = 161)
   (SELF = #<TOPS20-PATHNAME "SPEECH:PS:<SR.CYPHER>.BABYL">)
   Arg 0 (OPERATION): VALIDATE

(METHOD FS:PATHNAME-HASH-TABLE-MIXIN GET-PATHNAME):  (P.C. = 66)
   (SELF = #<CASE-SENSITIVE-PATHNAME-HASH-TABLE MIT-SPEECH>)
   Arg 0 (OPERATION): GET-PATHNAME
   Arg 1 (DEV): "PS"
   Arg 2 (DIR): ("SR" "CYPHER")
   Arg 3 (NAM): ANONYMOUS
   Arg 4 (TYP): "BABYL"
   Arg 5 (VRS): NEWEST
   Arg 6 (KEY): ("PS" ("SR" "CYPHER") ANONYMOUS "BABYL" NEWEST)

(METHOD SI:PATHNAME-HOST-MIXIN GET-PATHNAME):  (P.C. = 50)
   (SELF = #<TOPS20-CHAOS-HOST MIT-SPEECH>)
   Arg 0 (OPERATION): GET-PATHNAME
   Arg 1 (DEV): "PS"
   Arg 2 (DIR): ("SR" "CYPHER")
   Arg 3 (NAM): ANONYMOUS
   Arg 4 (TYP): "BABYL"
   Arg 5 (VRS): NEWEST

FS:MAKE-PATHNAME-1:  (P.C. = 605)
   Rest arg (OPTIONS): (DEFAULT-HOST #<TOPS20-CHAOS-HOST MIT-SPEECH> DEFAULT-DEVICE "PS" DEFAULT-DIRECTORY ("SR" "CYPHER") DEFAULT-NAME "SR.CYPHER" DEFAULT-TYPE "BABYL" ...)

(METHOD FS:PATHNAME NEW-PATHNAME):  (P.C. = 111)
   (SELF = #<TOPS20-PATHNAME "SPEECH:PS:<SR.CYPHER>SR/.CYPHER.BABYL">)
   Arg 0 (OPERATION): NEW-PATHNAME
   Rest arg (OPTIONS): NIL

(METHOD FS:TOPS20-MAILBOX-PATHNAME-MIXIN COMBINED NEW-PATHNAME):  (P.C. = 202)
   (SELF = #<TOPS20-PATHNAME "SPEECH:PS:<SR.CYPHER>SR/.CYPHER.BABYL">)
   Rest arg (.DAEMON-CALLER-ARGS.): (NEW-PATHNAME NAME ANONYMOUS TYPE BABYL VERSION NEWEST)

(METHOD FS:TENEX-FAMILY-PATHNAME-MIXIN POSSIBLE-MAIL-FILE-PATHNAMES):  (P.C. = 55)
   (SELF = #<TOPS20-PATHNAME "SPEECH:PS:<SR.CYPHER>SR/.CYPHER.BABYL">)
   Arg 0 (OPERATION): POSSIBLE-MAIL-FILE-PATHNAMES

Rest of stack:
(METHOD FS:MAILBOX-PATHNAME-MIXIN WHOPPER INBOX-PATHNAME):  (P.C. = 26)
(METHOD FS:TOPS20-PATHNAME COMBINED INBOX-PATHNAME):  (P.C. = 36)
(METHOD ZWEI:BABYL-BUFFER GET-INBOX):  (P.C. = 67)
ZWEI:GET-INBOX-FOR-BUFFER:  (P.C. = 172)
ZWEI:COM-GET-INBOX-INTERNAL:  (P.C. = 356)
ZWEI:COM-GET-NEW-MAIL-FROM-INBOX:  (P.C. = 32)
ZWEI:COMMAND-EXECUTE:  (P.C. = 100)
ZWEI:ZMAIL-COMMAND-EXECUTE:  (P.C. = 27)
(METHOD ZWEI:ZMAIL-FRAME PROCESS-COMMAND-CHAR):  (P.C. = 36)
(INTERNAL (METHOD ZWEI:ZMAIL-FRAME COMBINED PROCESS-COMMAND-CHAR) 0.):  (P.C. = 31)
(METHOD ZWEI:ZMAIL-COMMAND-LOOP-MIXIN WHOPPER PROCESS-COMMAND-CHAR):  (P.C. = 55)
(METHOD ZWEI:ZMAIL-FRAME COMBINED PROCESS-COMMAND-CHAR):  (P.C. = 36)
(METHOD ZWEI:ZMAIL-FRAME COMMAND-LOOP):  (P.C. = 266)
(METHOD ZWEI:ZMAIL-FRAME COMBINED COMMAND-LOOP):  (P.C. = 106)
ZWEI:ZMAIL-PROCESS-TOP-LEVEL:  (P.C. = 153)
SI:PROCESS-TOP-LEVEL:  (P.C. = 125)
15-Oct-83 23:43:03-EDT,2329;000000000000
Date: Saturday, 15 October 1983, 23:43-EDT
From: Scott Cyphers <SR.CYPHER at MIT-SPEECH>
To: BUG-LISPM at OZ

In Release 4.5, Spire 11.51, SpireX 9.6, site configuration 61, on Lisp Machine Yogi:

Evidently the Zmail bug I just ran into left me logged into speech anonymously
instead of as myself.  I tried expunging my directory.

>>Error: WHEEL or OPERATOR capability required
For SPEECH:SS:<SR.CYPHER.CODE>*.*.*
While in the function (:METHOD FS:HOST-UNIT :COMMAND)  FS:EXPUNGE-CHAOS  (:METHOD FS:CHAOS-PATHNAME :EXPUNGE)

(:METHOD FS:HOST-UNIT :COMMAND):  (P.C. = 363)
   (SELF = #<HOST-UNIT 3204022>)
   Arg 0 (OPERATION): :COMMAND
   Arg 1 (MARK-P): NIL
   Arg 2 (STREAM-OR-HANDLE): NIL
   Arg 3 (SIMPLE-P): NIL
   Arg 4 (WHOSTATE): "Expunge"
   Rest arg (COMMANDS): ("EXPUNGE" 141. "SS:<SR.CYPHER.CODE>*.*.*" 141.)
   Local 1 (HANDLE): NIL
   Local 2 (STREAM): NIL
   Local 3 (PKT): #<CHAOS Packet -34633354>
   Local 4 (SUCCESS): NIL
   Local 5 (STRING): " ERROR ACC F WHEEL or OPERATOR capability required"
   Local 6 (TRANSACTION-ID): "T2665"
   Local 7 (CREATE-P): NIL
   Local 8 (FROM): 1.
   Local 9 (CONDITION): NIL
   Local 10: T
   Local 11: (#<CASE-HANDLER 6411607> #<BIND-HANDLER 6405041> #<BIND-HANDLER 6405553>)

FS:EXPUNGE-CHAOS:  (P.C. = 112)
   Arg 0 (HOST): #<TOPS20-CHAOS-HOST MIT-SPEECH>
   Arg 1 (*COMMAND-PATHNAME*): #<TOPS20-PATHNAME "SPEECH:SS:<SR.CYPHER.CODE>*.*.*">
   Arg 2 (OPTIONS): (ERROR NIL)

(:METHOD FS:CHAOS-PATHNAME :EXPUNGE):  (P.C. = 30)
   (SELF = #<TOPS20-PATHNAME "SPEECH:SS:<SR.CYPHER.CODE>*.*.*">)
   Arg 0 (OPERATION): :EXPUNGE
   Rest arg (OPTIONS): (ERROR NIL)

FS:EXPUNGE-DIRECTORY:  (P.C. = 176)
   Arg 0 (PATHNAME): #<TOPS20-PATHNAME "SPEECH:SS:<SR.CYPHER.CODE>*.*.*">
   Rest arg (OPTIONS): (ERROR NIL)

ZWEI:COM-EXPUNGE-DIRECTORY:  (P.C. = 54)

ZWEI:COM-EXTENDED-COMMAND:  (P.C. = 67)

ZWEI:COMMAND-EXECUTE:  (P.C. = 100)
   Arg 0 (COMMAND): ZWEI:COM-EXTENDED-COMMAND
   Arg 1 (CHAR): 600.
   Arg 2 (PREFIX-CHAR): NIL
   Arg 3 (HOOK-LIST): NIL

ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 67)
   Arg 0 (CH): 600.

Rest of stack:
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 377)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 102)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 52)
SI:PROCESS-TOP-LEVEL:  (P.C. = 125)
16-Oct-83 02:42:32-EDT,1921;000000000000
Mail-From: KMP created at 16-Oct-83 02:42:14
Date: Sun 16 Oct 83 02:42:14-EDT
From: KMP@MIT-OZ
Subject: TIME:PARSE failure
To: Moon@SCRC-TENEX
cc: bug-lispm@MIT-OZ
In-Reply-To: Message from "David A. Moon <Moon at SCRC-TENEX>" of Sat 15 Oct 83 22:18:13-EDT

    Date: Saturday, 15 October 1983, 22:00-EDT
    From: David A. Moon <Moon at SCRC-TENEX>
    To: Kent M. Pitman <kmp at MIT-AI>

        Date: Saturday, 15 October 1983, 01:44-EDT
        From: Kent M. Pitman <kmp at OZ>
        Note that in the case of stray numbers bigger than 1959 and 
	smaller than 2000, it's nearly a sure bet they are years and 
	not bad forms of time-of-day...

    I -knew- there was some reason it was good to be alive in the last 
    third of the twentieth century....

Chuckle. Well, I'm definitely not a fan of random 2 and 4 digit numbers
meaning times. In my book, times need ":" or "pm" or "am" to announce
themselves; random unqualified numbers are years.

I sure wouldn't mind waking up when 2000 rolls around and finding that
this ambiguous time syntax had been mysteriously disallowed...

My new Babyl date parser gets by with only one special case to recognize
all the formats for time I've thus far seen generated by random mailers.
That special case is just to accept an unqualified number as a time iff
the date is already fully specified. This heuristic seems to be pretty
productive. This frees a standalone "1984" to mean a year, not a time.

By the way, I note that time:parse parses "1 jan 1215" as 
"10/06/-12177 -23:00:00". There's an interesting heuristic here that 
might apply here to override my previous heuristic prohibiting 4-digit
numbers to mean times there.  The heuristic says that given an ambiguity
between two semantic interpretations of a string, choose the one for which
there is a non-garbage representation. ... Only a half-serious suggestion.
-------
16-Oct-83 13:48:29-EDT,742;000000000000
Date: Sunday, 16 October 1983, 13:50-EDT
From: Philippe Brou <PHILIP at MIT-OZ>
Subject: Problem with global
To: BUG-LISPM at MIT-OZ

In Release 4.4, site configuration 68, on Lisp Machine Robot-1:

Did (apropos 'string 'global)
The system listed a whole page of functions and
variables. Stopped with *more*. I typed <ctrl><abort>.

Afterwards every expression typed (such as 'A for example)
lead to 

>>Trap: The array given to GLOBAL:ARRAY-LEADER, GLOBAL:NIL, was not an
array
Type <rubout> to correct your input.

In this mode, () returned GLOBAL:NIL

An UNWIND-PROTECT is probably missing in APROPOS.
Please don't tell me I shouldn't have typed GLOBAL at
the APROPOS; that's besides the point.

Thanks.
Philippe
16-Oct-83 16:51:43-EDT,2459;000000000000
Date: Sunday, 16 October 1983, 16:52-EDT
From: Philippe Brou <PHILIP at MIT-OZ>
Subject: ADVISE-WITHIN
To: BUG-LISPM at MIT-OZ

In Release 4.4, site configuration 68, on Lisp Machine Robot-1:

Example: (defun x () (+ 1. 1.))
         
Error occurs when compiling: (advise-within x + :after nil nil ...)
Am I doing something wrong?


>>Error: The function spec (:WITHIN X +) is undefined.
While in the function SI:ADVISE-1  SI:ADVISE-WITHIN-1  SI:*EVAL

SI:ADVISE-1:  (P.C. = 4)
   Arg 0 (FUNCTION): (:WITHIN X +)
   Arg 1 (CLASS): :AFTER
   Arg 2 (NAME): NIL
   Arg 3 (POSITION): NIL
   Arg 4 (FORMS): (NIL)

SI:ADVISE-WITHIN-1:  (P.C. = 14)
   Arg 0 (WITHIN-FUNCTION): X
   Arg 1 (FUNCTION-TO-ADVISE): +
   Arg 2 (CLASS): :AFTER
   Arg 3 (NAME): NIL
   Arg 4 (POSITION): NIL
   Arg 5 (FORMS): (NIL)

SI:*EVAL:  (P.C. = 405)
   Arg 0 (FORM): (SI:ADVISE-WITHIN-1 (QUOTE X) (QUOTE +) (QUOTE :AFTER) (QUOTE NIL) (QUOTE NIL) (QUOTE (NIL)))

(:INTERNAL COMPILER:COMPILE-TO-CORE 2):  (P.C. = 3)
   Arg 0 (**DEFSELECT-OP**): :DUMP-FORM
   Arg 1 (FORM): (SI:ADVISE-WITHIN-1 (QUOTE X) (QUOTE +) (QUOTE :AFTER) (QUOTE NIL) (QUOTE NIL) (QUOTE (NIL)))

COMPILER:COMPILE-TO-CORE:  (P.C. = 32)
   Arg 0 (OPERATION): :DUMP-FORM
   Rest arg (SELECT-METHOD-ARGS): ((SI:ADVISE-WITHIN-1 (QUOTE X) (QUOTE +) (QUOTE :AFTER) (QUOTE NIL) (QUOTE NIL) (QUOTE (NIL))))

COMPILER:COMPILE-FORM-FUNCTION:  (P.C. = 41)
   Arg 0 (FORM): (SI:ADVISE-WITHIN-1 (QUOTE X) (QUOTE +) (QUOTE :AFTER) (QUOTE NIL) (QUOTE NIL) (QUOTE (NIL)))
   Arg 1 (COMPILE-TIME-P): NIL
   Arg 2 (LOAD-TIME-P): T

COMPILER:COMPILE-FROM-STREAM-1:  (P.C. = 400)
   Arg 0 (FORM-initialization): (ADVISE-WITHIN X + :AFTER NIL NIL NIL)
   --Defaulted args:--
   Arg 1 (COMPILE-TIME-TOO): NIL

COMPILER:PROCESS-FORMS-FROM-STREAM:  (P.C. = 114)
   Arg 0 (INPUT-STREAM): #<INTERVAL-STREAM 7355617>
   Arg 1 (PROCESS-FUNCTION): COMPILER:COMPILE-FROM-STREAM-1
   Arg 2 (FOR-FILE): NIL
   Arg 3 (AREA-FOR-READING): 4

Rest of stack:
COMPILER:COMPILE-FROM-STREAM:  (P.C. = 250)
COMPILE-INTERVAL:  (P.C. = 124)
COMPILE-PRINT-INTERVAL:  (P.C. = 101)
COMPILE-DEFINITION-INTERNAL:  (P.C. = 104)
COM-COMPILE-REGION:  (P.C. = 5)
COMMAND-EXECUTE:  (P.C. = 65)
PROCESS-COMMAND-CHAR:  (P.C. = 34)
(:METHOD EDITOR :EDIT):  (P.C. = 173)
(:METHOD TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 42)
ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
16-Oct-83 20:14:40-EDT,1376;000000000000
Date: Sunday, 16 October 1983  20:17-EDT
From: DCP at SCRC-TENEX
To:   Philippe Brou <PHILIP at MIT-OZ>
Cc:   BUG-LISPM at MIT-OZ
Subject: ADVISE-WITHIN
In-reply-to: The message of 16 Oct 1983 16:52-EDT from Philippe Brou <PHILIP at MIT-OZ>

    Date: Sunday, 16 October 1983, 16:52-EDT
    From: Philippe Brou <PHILIP at MIT-OZ>

    In Release 4.4, site configuration 68, on Lisp Machine Robot-1:

    Example: (defun x () (+ 1. 1.))
             
    Error occurs when compiling: (advise-within x + :after nil nil ...)
    Am I doing something wrong?


    >>Error: The function spec (:WITHIN X +) is undefined.
    While in the function SI:ADVISE-1  SI:ADVISE-WITHIN-1  SI:*EVAL

Advise-within was fixed ages ago (between Release 4 and 5).  It works
in Release 5.  However... it is a very bad idea to trace or advise
primitives (or even comonly used functins, e.g., FORMAT) in any way.
Trace/advise wraps an encapsulater around the function which must be
evaluated, so if something during that evaluation gets traced, your
machine is effectively dead.  Also (this is your real bug), as soon as
you compile your function X, + will turn into an instruction instead
of a function call and cannot be traced or advised without bashing all
candidate instructions in ways I don't care to think about (provided
it has a prayer of working anyway).
16-Oct-83 20:53:56-EDT,1145;000000000000
Date: Sunday, 16 October 1983, 20:54-EDT
From: Carl Richard Feynman <CARLF at MIT-OZ>
Subject: bad error handling in MAKE-PLANE
To: BUG-LISPM at MIT-OZ

In Release 4.5, site configuration 62, on Lisp Machine Janis Joplin:

I just tried to define a plane without giving a default value.  It would
be nice if this error were caught by MAKE-PLANE, rather than
several function calls later.  The error message is pretty cryptic.

			--carlf

>>Trap: The first argument given to AS-2, NIL, was not a fixnum.
While in the function SYS:%LEXPR-ASET  SI:MAKE-PLANE-INTERNAL  MAKE-PLANE

SYS:%LEXPR-ASET:  (P.C. = 52)
   Arg 0 (DATA): NIL
   Arg 1 (ARRAY): #<ART-8B-1-1 5617140>
   Arg 2 (INDICES): (0 0)
   Local 3 (NDIMS): 2
   Local 4 (DATA-POINTER): NIL
   Local 5 (LINEAR-INDEX): NIL
   Local 6 (TYPE): NIL
   Local 7 (BITS-PER-ELEM): NIL
   Local 8 (ELEMS-PER-Q): NIL

SI:MAKE-PLANE-INTERNAL:  (P.C. = 36)
   Arg 0 (TYPE): ART-8B
   Arg 1 (SIZE): (1 1)
   Arg 2 (ORIGIN): (0 0)
   Arg 3 (DEFAULT): NIL
   Arg 4 (EXTENSION): 40

MAKE-PLANE:  (P.C. = 110)
   Arg 0 (RANK): 2
   Rest arg (OPTIONS): (TYPE ART-8B)
16-Oct-83 22:14:36-EDT,3468;000000000000
Date: Sunday, 16 October 1983, 22:14-EDT
From: Joseph Bates <PRL at MIT-PYGMALION>
Subject: 3600 compiler/VMS file server bug
To: BUG-LISPM at MIT-OZ

In Release 4.5, Knowledge-Based-Editor 214.0, site configuration 55,
Sorcerer's Apprentice, on PA Lisp Machine Merlin:

I had run make-system on zprlsys.lsp.  This is a "novice" defsystem, just
a series of compile-load-init forms with appropriate dependencies.  The compiler
was running on the first file when I aborted it (I think ctrl-abort, but meta-ctrl-suspend
followed by abort has led to this problem too).  I went to change the defsystem in
zprlsys.lsp by select-e, ctrl-x ctrl-f zprlsys.lsp (it may have been already in a buffer).
After changing it, I did ctrl-x ctrl-s and the error occurred.

This has happened to me several times (>3).  I judge that it happens when I abort
the compiler (maybe make-system) and then change and try to save a file.

Joseph Bates (NE43-815, AI Lab, PA group)
bates@oz


>>Error: File Handle in Use
For PIG:USRD$:[PRL]ZPRLSYS.LSP
While in the function (METHOD FS:HOST-UNIT COMMAND)  FS:OPEN-CHAOS  (METHOD FS:CHAOS-PATHNAME OPEN)

(METHOD FS:HOST-UNIT COMMAND):  (P.C. = 245)
   Arg 0 (SELF): #<HOST-UNIT 12056234>
   Arg 1 (SELF-MAPPING-TABLE): FS:HOST-UNIT
   Arg 2 (OPERATION): COMMAND
   Arg 3 (MARK-P): NIL
   Arg 4 (STREAM-OR-HANDLE): (CREATE "O2035")
   Arg 5 (SIMPLE-P): NIL
   Arg 6 (WHOSTATE): "Open"
   Rest arg (COMMANDS): ("OPEN " WRITE " " CHARACTER "" "" "" "" "" "" ...)
   Local 8 (HANDLE): "O2035"
   Local 9 (STREAM): NIL
   Local 10 (PKT): #<CHAOS Packet 5272701>
   Local 11 (SUCCESS): NIL
   Local 12 (STRING): "O2035 ERROR MSC C File Handle in Use"
   Local 13 (TRANSACTION-ID): "T2154"
   Local 14 (CREATE-P): T
   Local 15 (CONDITION): NIL

FS:OPEN-CHAOS:  (P.C. = 424)
   Arg 0: #<VMS-CHAOS-HOST MIT-PYGMALION>
   Arg 1 (*COMMAND-PATHNAME*-initialization): #<VMS-PATHNAME "PIG:USRD$:[PRL]ZPRLSYS.LSP">
   Arg 2 (OPTIONS): (CHARACTERS T DIRECTION OUTPUT)

(METHOD FS:CHAOS-PATHNAME OPEN):  (P.C. = 6)
   Arg 0 (SELF): #<VMS-PATHNAME "PIG:USRD$:[PRL]ZPRLSYS.LSP">
   Arg 1 (SELF-MAPPING-TABLE): FS:CHAOS-PATHNAME
   Arg 2 (OPERATION): OPEN
   Arg 3 (PATHNAME): #<VMS-PATHNAME "PIG:USRD$:[PRL]ZPRLSYS.LSP">
   Rest arg (OPTIONS): (CHARACTERS T DIRECTION OUTPUT)

FS:MACLISP-COMPATIBILITY-OPEN:  (P.C. = 421)
   Arg 0 (FILENAME): #<VMS-PATHNAME "PIG:USRD$:[PRL]ZPRLSYS.LSP">
   Arg 1 (OPTIONS): (ZWEI:OUT)

OPEN:  (P.C. = 276)
   Arg 0 (PATHNAME): #<VMS-PATHNAME "PIG:USRD$:[PRL]ZPRLSYS.LSP">
   Rest arg (KEYWORD-ARGS): ((ZWEI:OUT))

(METHOD ZWEI:FILE-BUFFER-MIXIN SAVE):  (P.C. = 47)
   Arg 0 (SELF): #<FILE-BUFFER "ZPRLSYS.LSP USRD$:[PRL] PIG:" 12174551>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:FILE-BUFFER-MIXIN -- 9. IV's, 0. FL's 61305555>
   Arg 2 (OPERATION): SAVE

ZWEI:SAVE-BUFFER:  (P.C. = 214)
   Arg 0 (BUFFER): #<FILE-BUFFER "ZPRLSYS.LSP USRD$:[PRL] PIG:" 12174551>

ZWEI:COM-SAVE-FILE:  (P.C. = 15)

Rest of stack:
ZWEI:COMMAND-EXECUTE:  (P.C. = 65)
ZWEI:MAKE-EXTENDED-COMMAND-INTERNAL:  (P.C. = 106)
SYS:CALL-FUNNY-FUNCTION:  (P.C. = 73)
Closure of ZWEI:MAKE-EXTENDED-COMMAND-INTERNAL:
ZWEI:COMMAND-EXECUTE:  (P.C. = 65)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 20)
(METHOD ZWEI:EDITOR EDIT):  (P.C. = 173)
(METHOD ZWEI:TOP-LEVEL-EDITOR COMBINED EDIT):  (P.C. = 42)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
16-Oct-83 23:50:28-EDT,1425;000000000000
Received: from SCRC-YANGTZE by SCRC-QUABBIN with CHAOS; Sun 16-Oct-83 23:49:28-EDT
Date: Sunday, 16 October 1983, 23:49-EDT
From: Carl W. Hoffman <CWH at SCRC-TENEX>
Subject: c-sh-A calls INTERN rather than INTERN-SOFT
To: kmp at MIT-MC, BUG-LISPM at MIT-AI
In-reply-to: The message of 14 Oct 83 17:34-EDT from Kent M. Pitman <kmp at MIT-MC>

    Date: Friday, 14 October 1983, 17:34-EDT
    From: Kent M. Pitman <kmp at MIT-MC>
    In Symbolics Release 4.5 on PA Lisp Machine Merlin ...

    I notice that both RH and ZWEI will intern a symbol when you
    type c-sh-A in order to look for its arglist. It seems to me
    that this should be an intern-soft, since if the symbol isn't
    interned arglist isn't going to win and that will keep the obarray
    from getting filled with random cruft. I (and others) use c-sh-A
    sometimes to help remember how a name is spelled and the current
    behavior means that every call to APROPOS which I do after having
    c-sh-A'd a mis-spelling will find not only the stuff I want but
    also all my typos.

    This would involve slight extra hair to hack packages correctly
    but it seems to me that it would be worth the work.

Fixed in the input editor's versions of c-sh-A and c-sh-V by calling
READ-FROM-STRING with SI:*READER-INTERN* bound to INTERN-SOFT.  Of course, if
you type a space after typing "(foo", READ will intern "foo" for you.
17-Oct-83 05:08:46-EDT,1288;000000000000
Date: Monday, 17 October 1983, 05:09-EDT
From: Kent M. Pitman <kmp at MIT-MC>
Subject: TV:SET-DEFAULT-WINDOW-SIZE
To: BUG-LISPM at MIT-MC
Cc: KBE-I-FILE at OZ

In System 222.296 on PA Lisp Machine Avatar...

There needs to be an advertised way to read the data set up by
TV:SET-DEFAULT-WINDOW-SIZE. The KBE wants to be able to set up
a replacement for the ZMACS-FRAME on System E and wants to
inherit the size information. I wrote the following piece of
code to do that, but it violates data abstractions left and
right in order to succeed...

    (let ((main-screen-info (assq tv:main-screen
				  tv:*default-window-size-alist*)))
      (when main-screen-info
	(let ((zmacs-frame-info (assq 'zwei:zmacs-frame
				      (cdr main-screen-info))))
	  (when zmacs-frame-info
	    (lexpr-funcall #'tv:set-default-window-size
			   'edit-frame tv:main-screen nil
			   (cdr zmacs-frame-info))))))
    
I would rather have written

    (lexpr-funcall #'tv:set-default-window-size
	           'edit-frame tv:main-screen nil
	           (tv:default-window-size 'zwei:zmacs-frame tv:main-screen))

I assume that such a TV:DEFAULT-WINDOW-SIZE function could also be used 
internally by whatever's actually doing the window creation rather than
calling ASSQ, etc.
17-Oct-83 13:42:41-EDT,1568;000000000000
Received: from SCRC-NEPONSET by SCRC-TENEX with CHAOS; Mon 17-Oct-83 13:41:39-EDT
Date: Mon, 17 Oct 83 13:39 EDT
From: Mike McMahon <MMcM@SCRC-TENEX>
Subject: c-sh-A calls INTERN rather than INTERN-SOFT
To: kmp@MIT-MC
Cc: CWH@SCRC-TENEX, BUG-LISPM@MIT-OZ
In-reply-to: The message of 16 Oct 83 23:49-EDT from Carl W. Hoffman <CWH at SCRC-TENEX>
Message-ID: <831017133934.4.MMcM@SCRC.SCRC>

    Date: Sunday, 16 October 1983, 23:49-EDT
    From: Carl W. Hoffman <CWH at SCRC-TENEX>
	Date: Friday, 14 October 1983, 17:34-EDT
	From: Kent M. Pitman <kmp at MIT-MC>
	In Symbolics Release 4.5 on PA Lisp Machine Merlin ...

	I notice that both RH and ZWEI will intern a symbol when you
	type c-sh-A in order to look for its arglist. It seems to me
	that this should be an intern-soft, since if the symbol isn't
	interned arglist isn't going to win and that will keep the obarray
	from getting filled with random cruft. I (and others) use c-sh-A
	sometimes to help remember how a name is spelled and the current
	behavior means that every call to APROPOS which I do after having
	c-sh-A'd a mis-spelling will find not only the stuff I want but
	also all my typos.

	This would involve slight extra hair to hack packages correctly
	but it seems to me that it would be worth the work.

    Fixed in the input editor's versions of c-sh-A and c-sh-V by calling
    READ-FROM-STRING with SI:*READER-INTERN* bound to INTERN-SOFT.  Of course, if
    you type a space after typing "(foo", READ will intern "foo" for you.
Similarly fixed in the editor.
17-Oct-83 15:30:37-EDT,3107;000000000000
Date: Monday, 17 October 1983, 15:13-EDT
From: Thomas J. Reinhardt <TomR%MIT-OZ@MIT-MC.ARPA>
Subject: Bug in Biography File
To: BUG-LISPM at MIT-MC.ARPA

In Release 4.5, site configuration 57, on Lisp Machine Apiary-5:

Lije,


You probably forgot to convert this method to a named-lambda or
a subst. . .I am trying to fix this presently, if I don't
succeed I will leave the appropriate notes in the Biography
file.

>>Error: EVENT-RECORD is not a flavor
While in the function DEFMETHOD  MACROEXPAND-1  MACROEXPAND
While processing (DEFMETHOD (EVENT-RECORD THIS-EVENT?) (TSK) (SAME-TASK? TSK (DO-INITIAL-TASK SELF)))

DEFMETHOD:  (P.C. = 204)
   Arg 0 (*MACROARG*): (DEFMETHOD (EVENT-RECORD THIS-EVENT?) (TSK) (SAME-TASK? TSK (DO-INITIAL-TASK SELF)))
   Local 1 (SPEC): (EVENT-RECORD THIS-EVENT?)
   Local 2 (LAMBDA-LIST): (TSK)
   Local 3 (BODY): ((SAME-TASK? TSK (DO-INITIAL-TASK SELF)))
   Local 4 (FLAVOR-NAME): EVENT-RECORD
   Local 5 (JUST-SYMBOL-FLAG): NIL
   Local 6 (FUNCTION-SPEC): (METHOD EVENT-RECORD THIS-EVENT?)

MACROEXPAND-1:  (P.C. = 116)
   Arg 0 (MACRO-CALL): (DEFMETHOD (EVENT-RECORD THIS-EVENT?) (TSK) (SAME-TASK? TSK (DO-INITIAL-TASK SELF)))
   --Defaulted args:--
   Arg 1 (IGNORE): NIL

MACROEXPAND:  (P.C. = 7)
   Arg 0 (MACRO-CALL): (DEFMETHOD (EVENT-RECORD THIS-EVENT?) (TSK) (SAME-TASK? TSK (DO-INITIAL-TASK SELF)))
   Arg 1 (IGNORE): T

COMPILER:COMPILE-FROM-STREAM-1:  (P.C. = 22)
   Arg 0 (FORM-initialization): (DEFMETHOD (EVENT-RECORD THIS-EVENT?) (TSK) (SAME-TASK? TSK (DO-INITIAL-TASK SELF)))
   --Defaulted args:--
   Arg 1 (COMPILE-TIME-TOO): NIL

COMPILER:PROCESS-FORMS-FROM-STREAM:  (P.C. = 114)
   Arg 0 (INPUT-STREAM): #<FILE-INPUT-CHARACTER-STREAM "OZ:TINMAN:<ACTOR>BIOGRAPHY.LISP" 24775315>
   Arg 1 (PROCESS-FUNCTION): COMPILER:COMPILE-FROM-STREAM-1
   Arg 2 (FOR-FILE): T
   Arg 3 (AREA-FOR-READING): 4.

COMPILER:COMPILE-FROM-STREAM:  (P.C. = 250)
   Arg 0 (INPUT-STREAM): #<FILE-INPUT-CHARACTER-STREAM "OZ:TINMAN:<ACTOR>BIOGRAPHY.LISP" 24775315>
   Arg 1 (GENERIC-PATHNAME): #<TOPS20-PATHNAME "OZ:TINMAN:<ACTOR>BIOGRAPHY">
   Arg 2 (PACKAGE-SPEC): USER
   Arg 3 (*COMPILE-FUNCTION*-initialization): COMPILER:COMPILE-TO-FILE
   --Defaulted args:--
   Arg 4 (BASE-SPEC): NIL

COMPILER:COMPILE-FILE:  (P.C. = 207)
   Arg 0 (INFILE): #<TOPS20-PATHNAME "OZ:TINMAN:<ACTOR>BIOGRAPHY.LISP">
   Arg 1 (OUTFILE): #<TOPS20-PATHNAME "OZ:TINMAN:<ACTOR>BIOGRAPHY.BIN">
   Arg 2 (IN-PACKAGE): USER
   Arg 3 (DONT-SET-DEFAULT-P): T

SI:COMPILE-FILE-1:  (P.C. = 6)
   Arg 0 (INFILE): #<TOPS20-PATHNAME "OZ:TINMAN:<ACTOR>BIOGRAPHY.LISP">
   Arg 1 (OUTFILE): #<TOPS20-PATHNAME "OZ:TINMAN:<ACTOR>BIOGRAPHY.BIN">

Rest of stack:
SI:DO-FILE-TRANSFORMATIONS:  (P.C. = 235)
SI:PERFORM-TRANSFORMATIONS:  (P.C. = 175)
SI:PERFORM-TRANSFORMATIONS:  (P.C. = 71)
MAKE-SYSTEM:  (P.C. = 170)
MS:
SI:*EVAL:  (P.C. = 715)
SI:READFILE-INTERNAL:  (P.C. = 106)
LOAD:  (P.C. = 237)
LOAD-ACT2:
LOAD-ACT2-FROM-SCRATCH-ON-OZ:
SI:*EVAL:  (P.C. = 715)
SI:LISP-TOP-LEVEL1:  (P.C. = 130)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
17-Oct-83 16:07:12-EDT,943;000000000000
Received: from SCRC-EUPHRATES by SCRC-TENEX with CHAOS; Mon 17-Oct-83 16:05:31-EDT
Date: Monday, 17 October 1983, 16:03-EDT
From: David A. Moon <Moon@SCRC-TENEX>
Subject: Problem with global
To: Philippe Brou <PHILIP@MIT-OZ>
Cc: BUG-LISPM@MIT-OZ
In-reply-to: The message of 16 Oct 83 13:50-EDT from Philippe Brou <PHILIP at MIT-AI>

    Date: Sunday, 16 October 1983, 13:50-EDT
    From: Philippe Brou <PHILIP at MIT-OZ>
    In Release 4.4, site configuration 68, on Lisp Machine Robot-1:

    Did (apropos 'string 'global)
    The system listed a whole page of functions and
    variables. Stopped with *more*. I typed <ctrl><abort>.

    Afterwards every expression typed (such as 'A for example)
    lead to 

    >>Trap: The array given to GLOBAL:ARRAY-LEADER, GLOBAL:NIL, was not an
    array
    Type <rubout> to correct your input.

    In this mode, () returned GLOBAL:NIL

This bug was fixed in Release 4.5.
17-Oct-83 18:21:17-EDT,401;000000000000
Date: Monday, 17 October 1983, 18:05-EDT
From: Tim McNerney <TIM at MIT-OZ>
Subject: Random Chaos Error
To: BUG-LISPM at MIT-OZ

In Release 4.5, site configuration 57, on Lisp Machine Apiary-3:

Received an "Error: 262 Packet too long" out of the clear blue sky.

Could not report bug, or anything else for that matter, except warm boot.
I understand that Rel 5 will be more robust.  Whew!
17-Oct-83 20:48:27-EDT,1075;000000000000
Received: from SCRC-CHARLES by SCRC-TENEX with CHAOS; Mon 17-Oct-83 19:55:36-EDT
Date: Monday, 17 October 1983, 19:55-EDT
From: David C. Plummer <DCP@SCRC-TENEX>
Subject: Random Chaos Error
To: TIM@MIT-OZ, BUG-LISPM@MIT-OZ
In-reply-to: The message of 17 Oct 83 18:05-EDT from Tim McNerney <TIM at MIT-AI>

    Date: Monday, 17 October 1983, 18:05-EDT
    From: Tim McNerney <TIM at MIT-OZ>
    In Release 4.5, site configuration 57, on Lisp Machine Apiary-3:

    Received an "Error: 262 Packet too long" out of the clear blue sky.
How about the yellow ether, instead?

    Could not report bug, or anything else for that matter, except warm boot.
    I understand that Rel 5 will be more robust.  Whew!

Yes.  Not only is it more careful about letting packets get doubly
allocated, but microcode 247 (part of Rel5) fixes the problem that
causes them to get doubly allocated in the first place.

Instead of warm booting you could have done (in Rel4) a (CHAOS:RESET),
find an appropriate place to restart, and when things calm down, do
(CHAOS:ENABLE).
18-Oct-83 16:59:45-EDT,191;000000000000
Date: 18 October 1983 17:00 EDT
From: The-Dover-Spooler @ MIT-MC
Sender: DVRSPL @ MIT-MC
To: lispm @ MIT-OZ

Your file ps:<daniel.g.mly.l>mit-fonts.press.1 has been sent to the Dover.
19-Oct-83 11:18:54-EDT,1820;000000000000
Received: from SCRC-SHEPHERD by SCRC-QUABBIN with CHAOS; Wed 19-Oct-83 11:15:10-EDT
Date: Wednesday, 19 October 1983, 11:15-EDT
From: Daniel L. Weinreb <DLW at SCRC-TENEX>
Subject: Does :unclaimed-message work for arbitrary flavors?
To: Moon at SCRC-TENEX, dove at MIT-DSPG
Cc: BUG-LISPM at MIT-AI
In-reply-to: The message of 10 Oct 83 14:06-EDT from David A. Moon <Moon at SCRC-TENEX>

    Date: Monday, 10 October 1983, 14:06-EDT
    From: David A. Moon <Moon@SCRC-TENEX>
	Date: Sunday, 9 October 1983, 23:22-EDT
	From: Web Dove <dove at MIT-DSPG>
	In Release 4.5, Experimental KBSP 2.8, site configuration 65, on Lisp Machine Tweety Pie:

	I defined an flavor with an :unclaimed-message handler.  It doesn't seem
	to get called when an unclaimed message arrives.  

    It works for me.  Can you provide a specific test case?

							  I tried mixing in
	flavor si:unclaimed-message (because user:unclaimed-message is
	apparently not the name of a flavor as patch notes 4.2 would have one
	believe), but then ordered instance variables of mine conflicted.

    That flavor is the condition that is signalled by default when a message is
    unclaimed.  You don't want to mix it into your flavor.

    I can't believe this!  Someone actually broke into my office and stole
    all the release 4 patch notes from my file cabinet!  So I'm afraid I can't
    look at the 4.2 patch notes and clarify what it says there for you.

unclaimed-message is indeed a condition flavor.  The documentation is
quite clear on this point.  It never suggests that unclaimed-message
should be mixed in.  The only bug in the documentation is that the
package prefix is omitted; indeed, as Dove says, user:unclaimed-message
is not a flavor.  I will send mail about this to the appropriate
authorities.
19-Oct-83 17:51:30-EDT,2281;000000000000
Date: Wednesday, 19 October 1983, 17:46-EDT
From: Tim McNerney <TIM at MIT-OZ>
Subject: TV:EXPAND-WINDOW tried to make a one dimensional window
To: BUG-LISPM at MIT-OZ

In Release 4.5, site configuration 57, on Lisp Machine Apiary-4:

Trying to get my ZWEI window to expand to full screen width in
my init file, thought this was the way to do it.  Why did it
decide to make the window so thin?  (My fault or yours?)

>>Error: Not enough room for margins
While in the function (DEFUN-METHOD TV:SYSTEM-SET-EDGES)  (METHOD TV:ESSENTIAL-SET-EDGES SET-EDGES)  TV:EXPAND-WINDOW

(DEFUN-METHOD TV:SYSTEM-SET-EDGES):  (P.C. = 70)
   Arg 0 (SELF): #<ZMACS-FRAME Zmacs Frame 1 3001105 deexposed>
   Arg 1: #<Map to flavor TV:ESSENTIAL-SET-EDGES -- 0. IV's, 1. FL's 61452535>
   Arg 2 (OPERATION): SET-EDGES
   Arg 3 (NEW-LEFT): 0
   Arg 4 (NEW-TOP): 0
   Arg 5 (NEW-RIGHT): 0
   Arg 6 (NEW-BOTTOM): 749
   --Defaulted args:--
   Arg 7 (OPTION): NIL
   Local 8 (NEW-WIDTH): 0
   Local 9 (NEW-HEIGHT): 749
   Local 10 (ERROR): "Not enough room for margins"
   Local 11 (WINDOW-TO-BE-DEEXPOSED): NIL
   Local 12 (.QUEUE-LEFT.): T
   Local 13: T
   Local 14: #<DTP-ODD-PC 13302671>
   Local 15: #<DTP-LOCATIVE 700024>
   Local 16: #<DTP-LOCATIVE 100027>
   Local 17: #<DTP-LOCATIVE 700024>
   Local 18: T
   Local 19: #<DTP-ODD-PC 13302710>
   Local 20: #<DTP-LOCATIVE 700026>
   Local 21: #<DTP-LOCATIVE 100150>
   Local 22 (INHIBIT-SCREEN-MANAGEMENT-initialization): T
   Local 23 (SCREEN-MANAGER-TOP-LEVEL-initialization): NIL
   Local 24 (DONE): NIL
   Local 25 (RESULT): NIL

(METHOD TV:ESSENTIAL-SET-EDGES SET-EDGES):  (P.C. = 10)
   Arg 0 (SELF): #<ZMACS-FRAME Zmacs Frame 1 3001105 deexposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:ESSENTIAL-SET-EDGES -- 0. IV's, 1. FL's 61452535>
   Arg 2 (OPERATION): SET-EDGES
   Rest arg (.ARGS.): (0 0 0 749)

TV:EXPAND-WINDOW:  (P.C. = 36)
   Arg 0 (WINDOW): #<ZMACS-FRAME Zmacs Frame 1 3001105 deexposed>
   --Defaulted args:--
   Arg 1 (MOVE-P): T

SI:*EVAL:  (P.C. = 405)
   Arg 0 (FORM): (TV:EXPAND-WINDOW TV:ZM)

SI:LISP-TOP-LEVEL1:  (P.C. = 130)
   Arg 0 (TERMINAL-IO-initialization): #<LISP-LISTENER Lisp Listener 1 3000000 exposed>

SYS:LISP-TOP-LEVEL:  (P.C. = 7)
19-Oct-83 17:55:04-EDT,407;000000000000
Date: Wednesday, 19 October 1983, 17:50-EDT
From: John Canny <JfC at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In System 97.6, CADR 1.0, ZMail 51.2, MIT-Specific 21.0, microcode 257,
ZM MIT, on Lisp Machine Thirty-two:

doing 

(UA:READ-SYM-FILE UA:%MICROCODE-VERSION-NUMBER)

Causes the file input character stream for the SYM file to receive a
GLOBAL:TYI message, which it doesnt know anything about.
19-Oct-83 19:16:21-EDT,949;000000000000
Date: Wednesday, 19 October 1983, 19:15-EDT
From: Tim McNerney <TIM at MIT-OZ>
Subject: :DRAW-CIRCLE and :DRAW-FILLED-IN-CIRCLE inconsistent
To: BUG-LISPM at MIT-OZ

In Release 4.5, site configuration 57, on Lisp Machine Apiary-8:

The algorithms used by the graphics primitives, :DRAW-CIRCLE and
:DRAW-FILLED-IN-CIRCLE, are inconsistent in the respect that the OUTLINES of the
respective circles will be drawn slightly differently by the two methods even
thought they are given the same parameters.

Although you might consider this trivial, consider the case where you are
drawing an outlined gray circle by drawing a gray rectangle through a circular
mask (this of course involves a scratch sheet) and then drawing a circular
border around it.  Because of this bug, you will lose.  The gray circle will not
be bounded by the circular border because the outlines of the circular border
and the circular mask do not always agree)
19-Oct-83 19:32:08-EDT,973;000000000000
Received: from SCRC-AMAZON by SCRC-QUABBIN with CHAOS; Wed 19-Oct-83 19:31:19-EDT
Date: Wednesday, 19 October 1983, 19:27-EDT
From: Joseph R. Goldstone <joseph at SCRC-AMAZON>
Subject: TV:EXPAND-WINDOW tried to make a one dimensional window
To: Tim McNerney <TIM at MIT-AI>
Cc: BUG-LISPM at MIT-AI
In-reply-to: The message of 19 Oct 83 17:46-EDT from Tim McNerney <TIM at MIT-AI>

    Date: Wednesday, 19 October 1983, 17:46-EDT
    From: Tim McNerney <TIM at MIT-OZ>
    In Release 4.5, site configuration 57, on Lisp Machine Apiary-4:

    Trying to get my ZWEI window to expand to full screen width in
    my init file, thought this was the way to do it.

the preferred way to bloat this window (beyond the width of a cadr's zmacs frame)
is to use tv:set-default-window-size.

(tv:set-default-window-size 'zwei:zmacs-frame tv:main-screen t ':width 1400)

just happens to be the example in the Release 4.3 patch notes (sec 3.8 on p. 8).

-- joseph
19-Oct-83 19:41:02-EDT,1495;000000000000
Received: from SCRC-EUPHRATES by SCRC-TENEX with CHAOS; Wed 19-Oct-83 19:39:33-EDT
Date: Wednesday, 19 October 1983, 19:39-EDT
From: David A. Moon <Moon@SCRC-TENEX>
Subject: TV:EXPAND-WINDOW tried to make a one dimensional window
To: Tim McNerney <TIM@MIT-OZ>
Cc: BUG-LISPM@MIT-OZ
In-reply-to: The message of 19 Oct 83 17:46-EDT from Tim McNerney <TIM at MIT-AI>

    Date: Wednesday, 19 October 1983, 17:46-EDT
    From: Tim McNerney <TIM at MIT-OZ>
    In Release 4.5, site configuration 57, on Lisp Machine Apiary-4:

    Trying to get my ZWEI window to expand to full screen width in
    my init file, thought this was the way to do it.  Why did it
    decide to make the window so thin?  (My fault or yours?)

    >>Error: Not enough room for margins
    While in the function (DEFUN-METHOD TV:SYSTEM-SET-EDGES)  (METHOD TV:ESSENTIAL-SET-EDGES SET-EDGES)  TV:EXPAND-WINDOW

    (DEFUN-METHOD TV:SYSTEM-SET-EDGES):  (P.C. = 70)
       Arg 3 (NEW-LEFT): 0
       Arg 4 (NEW-TOP): 0
       Arg 5 (NEW-RIGHT): 0
       Arg 6 (NEW-BOTTOM): 749

TV:EXPAND-WINDOW is an internal routine of the screen editor.  It's not clear that you're
supposed to call it.  In any case, what it does is not what you were trying to do (it
expands a window to fill any adjacent area not occupied by exposed windows; when the window
itself is not exposed, the available area can be even smaller than the size the window
would be if it were exposed).

Try the :FULL-SCREEN message.
19-Oct-83 19:53:25-EDT,2854;000000000000
Date: Wednesday, 19 October 1983, 19:52-EDT
From: Ken Forbus <KDF at MIT-PYGMALION>
Subject: Compiler bug
To: BUG-LISPM at OZ

In Release 4.5, site configuration 75, on Lisp Machine John Lennon:

The compiler blow-up below was performed by attempting to compile this function:
(defun loser (ll)
	(print (every ll '#(lambda (mumble) (numberp mumble))))
	(dolist (mumble ll)
	  (let ((grump (rem-if #'(lambda (el) (eq el mumble)) ll)))
	    (print mumble))))

(This is a simplification of where the bug actually occurs, and
 of course works fine interpreted).  Sigh.

>>Error: Cannot address the variable #<NORMAL-LEXICAL-VARIABLE 63246620>
While in the function COMPILER:USE-STACK-ADDRESSING-P  (PROPERTY COMPILER:VAR COMPILER:PEEP-HOLE-OPTIMIZER)  COMPILER:ASSEMBLE-INTERVAL
Error occurred while compiling NIL

COMPILER:USE-STACK-ADDRESSING-P:  (P.C. = 33)
   Arg 0 (VARIABLE): #<NORMAL-LEXICAL-VARIABLE 63246620>
   Arg 1 (LEVEL): 2
   Arg 2 (LOCATION): 2
   Local 3 (FUNCTION): #<EXTERNAL-FUNCTION 63245414>

(PROPERTY COMPILER:VAR COMPILER:PEEP-HOLE-OPTIMIZER):  (P.C. = 51)
   Arg 0 (INST): #<Inst (Var MUMBLE S.2)>

COMPILER:ASSEMBLE-INTERVAL:  (P.C. = 30)
   Arg 0 (INTERVAL): #<INTERVAL 63247072>

COMPILER:ASSEMBLE-FUNCTION:  (P.C. = 57)
   Arg 0 (FUNCTION): #<INTERNAL-FUNCTION 63247034>

MAPC:  (P.C. = 42)
   Arg 0 (FCN): COMPILER:ASSEMBLE-FUNCTION
   Rest arg (LISTS): ((#<EXTERNAL-FUNCTION 63245414>))

COMPILER:RUN-PHASE-4:  (P.C. = 4)

COMPILER:COMPILE-DEFINITION-1:  (P.C. = 57)
   Arg 0 (TYPE): DEFUN
   Arg 1 (FUNCTION-SPEC): LOSER
   Arg 2 (LAMBDA-LIST): (LL)
   Arg 3 (DEBUG-INFO): NIL
   Arg 4 (DEFINITION): ((PRINT (SI:DISPLACED (EVERY LL **) (DO ** ** **))) (SI:DISPLACED (DOLIST (MUMBLE LL) (LET ** **)) (DO (** **) (**) (SETQ MUMBLE **) (LET ** **))))
   Arg 5 (FIXUP-P): T

COMPILER:COMPILE-DEFINITION:  (P.C. = 46)
   Arg 0 (EXP): (DEFUN LOSER (LL) (PRINT (SI:DISPLACED (EVERY LL **) (DO ** ** **))) (SI:DISPLACED (DOLIST (MUMBLE LL) (LET ** **)) (DO (** **) (**) (SETQ MUMBLE **) (LET ** **))))
   Arg 1 (FIXUP-P): T
   Arg 2 (DEBUG-INFO): NIL

Rest of stack:
(INTERNAL COMPILER:COMPILE-TO-CORE 0):  (P.C. = 5)
COMPILER:COMPILE-TO-CORE:  (P.C. = 12)
COMPILER:COMPILE-FORM-FUNCTION:  (P.C. = 41)
COMPILER:COMPILE-FROM-STREAM-1:  (P.C. = 362)
COMPILER:PROCESS-FORMS-FROM-STREAM:  (P.C. = 114)
COMPILER:COMPILE-FROM-STREAM:  (P.C. = 250)
ZWEI:COMPILE-INTERVAL:  (P.C. = 124)
ZWEI:COMPILE-PRINT-INTERVAL:  (P.C. = 101)
ZWEI:COMPILE-DEFINITION-INTERNAL:  (P.C. = 104)
ZWEI:COM-COMPILE-REGION:  (P.C. = 5)
ZWEI:COMMAND-EXECUTE:  (P.C. = 65)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 20)
(METHOD ZWEI:EDITOR EDIT):  (P.C. = 173)
(METHOD ZWEI:TOP-LEVEL-EDITOR COMBINED EDIT):  (P.C. = 42)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
19-Oct-83 20:50:51-EDT,1303;000000000000
Date: Wednesday, 19 October 1983, 20:50-EDT
From: Tim McNerney <TIM at MIT-OZ>
Subject: ZWEI's scroll bar is driving me nuts!
To: BUG-ZWEI at MIT-OZ
Cc: BUG-3600-SOFTWARE at MIT-OZ

In ZWEI in Release 4.5, site configuration 57, on Lisp Machine Apiary-8:

My absolutely greatest annoyance with ZWEI stems from having the scroll bar on
the left side of the screen--right next to column one!  This is one of the most
frequently pointed-at columns on the entire screen (expecially in Dired), and I
am constanly running into it unintentionally.  Could you please implement one
of the following as soon as you possibly can:

  1) Provide a command for turning the scroll bar off entirely, thus making it
     impossible to "enter."

  2) Provide an option for having the scroll bar on the right.

  3) Keep the scroll bar on the left, but make it explicit (a la Brand X) with
     some width> and as little hysteresis as possible, then move column one
     a short distance away, providing for small "margin of safety."

If you all don't have time to implement 2 or 3, please implement number 1 as an
interim solution.  Now that you have all this added screen width, perhaps you
can improve the ergonomics of the 3600 and make better use of it.

				Thanks, 

				Tim McNerney
19-Oct-83 21:12:15-EDT,691;000000000000
Date: Wednesday, 19 October 1983, 20:56-EDT
From: Richard E. Zippel <RZ at MIT-MC>
Subject: Lisp stopped itself
To: BUG-LISPM at OZ

In Release 4.5, Experimental Schema 4.5, site configuration 62, on Lisp Machine Jimi Hendrix:

Sorry about not giving a more precise specification of the bug.  The
following scenario seems to cause the 3600 to stop itself reliably,
on several machines, in release 4.5.

(defflavor a () ())

(defflavor b () ())

(defflavor c () (a b))

(defmethod (a :display) (&optional x)
  (list x))

(defmethod (b :after :display) (&optional a b)
  (list a b))

(compile-flavor-methods c) 

(setq c (make-instance 'c))

(send c ':display 1 2)
19-Oct-83 21:22:23-EDT,951;000000000000
Date: Wednesday, 19 October 1983, 21:21-EDT
From: Tim McNerney <TIM at MIT-OZ>
Subject: TV:EXPAND-WINDOW tried to make a one dimensional window
To: joseph at SCRC-AMAZON
Cc: BUG-LISPM at MIT-OZ
In-reply-to: The message of 19 Oct 83 19:27-EDT from Joseph R. Goldstone <joseph at SCRC-AMAZON>

    The preferred way to bloat this window (beyond the width of a cadr's zmacs frame)
    is to use tv:set-default-window-size.

    (tv:set-default-window-size 'zwei:zmacs-frame tv:main-screen t ':width 1400)

    just happens to be the example in the Release 4.3 patch notes (sec 3.8 on p. 8).
--------------------
Thanks for the info.

There really should be some way of doing this without having to know the width
of the screen.

Something more like 
  ':WIDTH ':SCREEN-WIDTH or ':WIDTH ':MAX 
rather than
  ':WIDTH (SEND TV:MAIN-SCREEN ':WIDTH)
or explicitly 
  ':WIDTH 2100 (or 1088.)    [where did 1400 come from?]

			--Tim
19-Oct-83 23:45:09-EDT,1579;000000000000
Received: from SCRC-EUPHRATES by SCRC-TENEX with CHAOS; Wed 19-Oct-83 22:16:14-EDT
Date: Wednesday, 19 October 1983, 22:16-EDT
From: David A. Moon <Moon@SCRC-TENEX>
Subject: Compiler bug
To: Ken Forbus <KDF@MIT-PYGMALION>
Cc: BUG-LISPM@MIT-OZ
In-reply-to: The message of 19 Oct 83 19:52-EDT from Ken Forbus <KDF at MIT-PYGMALION>

    Date: Wednesday, 19 October 1983, 19:52-EDT
    From: Ken Forbus <KDF at MIT-PYGMALION>
    In Release 4.5, site configuration 75, on Lisp Machine John Lennon:

    The compiler blow-up below was performed by attempting to compile this function:
    (defun loser (ll)
	    (print (every ll #'(lambda (mumble) (numberp mumble))))
	    (dolist (mumble ll)
	      (let ((grump (rem-if #'(lambda (el) (eq el mumble)) ll)))
		(print mumble))))

    (This is a simplification of where the bug actually occurs, and
     of course works fine interpreted).  Sigh.

    >>Error: Cannot address the variable #<NORMAL-LEXICAL-VARIABLE 63246620>

Didn't you just report this same bug last week?  Or was that someone at MIT?
In Release 5 you'll get a better error message, but you still won't have
lexical closures since we haven't implemented them yet.  Put in a
(declare (special mumble)) just like in most other Lisp dialects.  E.g.

    (defun loser (ll)
	    (print (every ll #'(lambda (mumble) (numberp mumble))))
	    (dolist (mumble ll)
	      (declare (special mumble))
	      (let ((grump (rem-if #'(lambda (el)
				       (declare (special mumble))
				       (eq el mumble))
				   ll)))
		(print mumble))))
20-Oct-83 00:37:04-EDT,476;000000000000
Date: Thursday, 20 October 1983, 00:36-EDT
From: Richard Mlynarik <Mly at MIT-OZ>
Subject: site file changes
To: bug-lispm at MIT-OZ

  If you are going to change the site information for mit
in the mit system (ie mung stuff in oz:src:<l.site>)
please do so in system 97 or later.
  This is necessary since the new package system may
produce different (more common-lisp-ful) qfasl files.
In 94: (eq 'global:read ':read) => t
In 97: (eq 'global:read ':read) => nil
20-Oct-83 04:35:43-EDT,1117;000000000000
Date: Thursday, 20 October 1983, 04:35-EDT
From: Kent M. Pitman <kmp at MIT-MC>
Subject: In the cold load stream with a process that's losing
To: BUG-LISPM at MIT-MC

In Symbolics Release 4.5 on MIT Merlin...

Every process should have at its base, in addition to a restart
handler that lets you reset it, a restart handler that lets
you throw out of it but leave it asleep for a while. 

If you're debugging it in the cold load stream, you need to
be able to throw out of that context in order to get back to
your other windows.

Even if you're not in the cold load stream, it may be the case
that you want to exit the process (to release some locks) but
not have the process restart (perhaps because it will immediately
either err or do something else bad).

Mere words cannot describe the frustration that happens right now 
when you're in an error in a process in the cold load stream 
and type Abort and before you can do anything you end up back 
in the error handler with the same error message, but if you've
ever been in this situation, I'm sure you'll know what I'm talking
about.
20-Oct-83 10:58:50-EDT,1098;000000000000
Received: from SCRC-CHARLES by SCRC-QUABBIN with CHAOS; Thu 20-Oct-83 10:58:13-EDT
Date: Thursday, 20 October 1983, 10:56-EDT
From: David C. Plummer <DCP at SCRC-TENEX>
Subject: In the cold load stream with a process that's losing
To: kmp at MIT-MC, BUG-LISPM at MIT-MC
In-reply-to: The message of 20 Oct 83 04:35-EDT from Kent M. Pitman <kmp at MIT-MC>

    Date: Thursday, 20 October 1983, 04:35-EDT
    From: Kent M. Pitman <kmp at MIT-MC>
    In Symbolics Release 4.5 on MIT Merlin...

    Every process should have at its base, in addition to a restart
    handler that lets you reset it, a restart handler that lets
    you throw out of it but leave it asleep for a while. 

In Release 5, there is a proceed option to arrest the offending process
and restart the scheduler.  It works for simple processes, at least.  I
can't remember if it works when you enter the cold load stream because
the window system got locked.  Arresting, even if you have to send the
process the message manually, sounds like it will help you, but doesn't
solve some of the problems you raise.
21-Oct-83 12:13:39-EDT,493;000000000000
Date: Friday, 21 October 1983, 12:12-EDT
From: Bruce R. Donald <Brd at MIT-OZ>
Subject: electric font lock
To: BUG-symbolics-software at MIT-OZ

In Release 4.4, site configuration 68, on Lisp Machine Robot-1:

ELECTRIC-FONT-LOCK goes away when you switch buffers.
(i.e., if you turn it on in buffer FOO and switch to BAR,
when you go back to FOO it has been turned off).

 ELECTRIC-FONT-LOCK-IF-APPROPRIATE doesn't seem to work at all, i.e.,
it never turns on ELECTRIC-FONT-LOCK.
21-Oct-83 13:00:39-EDT,414;000000000000
Date: Friday, 21 October 1983, 12:58-EDT
From: Bruce R. Donald <Brd at MIT-OZ>
Subject: fonts, hardcopy
To: BUG-symbolics-software at MIT-OZ

In Release 4.4, site configuration 68, on Lisp Machine Robot-1:

If I have a file containing several fonts (eg.,
;;; -*- mode:lisp; fonts: CPTFONT, TR8 -*-)
How can I get hardcopy of it in these fonts 
(or more than one font in general) (i.e., on the dover?)

21-Oct-83 15:47:47-EDT,370;000000000000
Date: Friday, 21 October 1983, 15:45-EDT
From: Tim McNerney <TIM at MIT-OZ>
Subject: fonts, hardcopy
To: Brd at MIT-OZ, BUG-symbolics-software at MIT-OZ
In-reply-to: The message of 21 Oct 83 12:58-EDT from Bruce R. Donald <Brd at MIT-OZ>

M-X Hardcopy buffer should work.  Keep in mind that there is only a
loose mapping from lisp Machine fonts and Dover fonts.
21-Oct-83 16:20:32-EDT,665;000000000000
Mail-From: BRD created at 21-Oct-83 16:17:18
Date: 21 Oct 1983  16:17 EDT (Fri)
Message-ID: <BRD.11961328031.BABYL@MIT-OZ>
From: Bruce R. Donald <BRD@MIT-OZ>
To:   bug-symbolics-software@MIT-OZ
Subject: [~MAILER~DAEMON~: Unable to deliver mail]

Date: Friday, 21 October 1983, 12:58-EDT
From: Bruce R. Donald <Brd at MIT-OZ>
Subject: fonts, hardcopy
To: BUG-symbolics-software at MIT-OZ

In Release 4.4, site configuration 68, on Lisp Machine Robot-1:

If I have a file containing several fonts (eg.,
;;; -*- mode:lisp; fonts: CPTFONT, TR8 -*-)
How can I get hardcopy of it in these fonts 
(or more than one font in general) (i.e., on the dover?)
21-Oct-83 16:42:05-EDT,3265;000000000000
Date: Friday, 21 October 1983, 15:58-EDT
From: Robert H. Kassel <sr.rob at MIT-SPEECH>
Subject: bug in serial streams
To: BUG-LISPM at OZ

In Release 4.5, site configuration 65, on Lisp Machine Grizzly:

After closing and aborting serial 1 from breakpoint in
zwei.

>>Error: The argument CHANNEL to SI:FEP-CHANNEL-NOT-FULL, NIL, was of the wrong type.
The function expected a FEP channel.
While in the function SI:FEP-CHANNEL-NOT-FULL  SI:FEP-CHANNEL-OUTPUT-BLOCK  (METHOD SI:BASIC-SERIAL-STREAM NEW-OUTPUT-BUFFER)

SI:FEP-CHANNEL-NOT-FULL:  (P.C. = 7)
   Arg 0 (CHANNEL): NIL
   --Defaulted args:--
   Arg 1 (BUFFER-SIZE-LIMIT): NIL

SI:FEP-CHANNEL-OUTPUT-BLOCK:  (P.C. = 4)
   Arg 0 (CHANNEL): NIL
   Arg 1 (WHOSTATE): "Serial Out"

(METHOD SI:BASIC-SERIAL-STREAM NEW-OUTPUT-BUFFER):  (P.C. = 4)
   Arg 0 (SELF): #<SERIAL-FORCE-OUTPUT-CHARACTER-STREAM Unit = 1, baud = 9600 5476263>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:BASIC-SERIAL-STREAM -- 13. IV's, 0. FL's 4031345>
   Arg 2 (OPERATION): NEW-OUTPUT-BUFFER

(METHOD SI:BASIC-BUFFERED-OUTPUT-STREAM SETUP-NEW-OUTPUT-BUFFER):  (P.C. = 7)
   Arg 0 (SELF): #<SERIAL-FORCE-OUTPUT-CHARACTER-STREAM Unit = 1, baud = 9600 5476263>
   Arg 1: #<Map to flavor SI:BASIC-BUFFERED-OUTPUT-STREAM -- 3. IV's, 0. FL's 4030510>
   Arg 2: SETUP-NEW-OUTPUT-BUFFER

(METHOD SI:BASIC-BUFFERED-OUTPUT-STREAM TYO):  (P.C. = 13)
   Arg 0 (SELF): #<SERIAL-FORCE-OUTPUT-CHARACTER-STREAM Unit = 1, baud = 9600 5476263>
   Arg 1: #<Map to flavor SI:BASIC-BUFFERED-OUTPUT-STREAM -- 3. IV's, 0. FL's 4030510>
   Arg 2: TYO
   Arg 3 (CH): 27.

(INTERNAL (INTERNAL (METHOD SI:SERIAL-FORCE-OUTPUT-CHARACTER-STREAM COMBINED TYO) 0.) 0.):  (P.C. = 11)
   Arg 0 (SELF): #<SERIAL-FORCE-OUTPUT-CHARACTER-STREAM Unit = 1, baud = 9600 5476263>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:SERIAL-FORCE-OUTPUT-CHARACTER-STREAM -- 0. IV's, 2. FL's 4031367>
   Rest arg (.DAEMON-CALLER-ARGS.): (TYO 27.)

(INTERNAL (METHOD SI:SERIAL-FORCE-OUTPUT-CHARACTER-STREAM COMBINED TYO) 0.):  (P.C. = 12)
   Rest arg (ARGS): (TYO 27.)

SI:TYO-TO-ASCII-STREAM:  (P.C. = 55)
   Arg 0 (ASCII-STREAM): #<DTP-COMPILED-FUNCTION (INTERNAL (METHOD SI:SERIAL-FORCE-OUTPUT-CHARACTER-STREAM COMBINED TYO) 0.) 46672255>
   Arg 1 (CH): 27.

Rest of stack:
(METHOD SI:SERIAL-FORCE-OUTPUT-CHARACTER-STREAM COMBINED TYO):  (P.C. = 11)
(METHOD SI:OUTPUT-STREAM STRING-OUT):  (P.C. = 21)
FORMAT:FORMAT-CTL-STRING:  (P.C. = 40)
FORMAT:  (P.C. = 75)
SI:*EVAL:  (P.C. = 405)
UNWIND-PROTECT:  (P.C. = 15)
SI:*EVAL:  (P.C. = 647)
LET:  (P.C. = 110)
SI:*EVAL:  (P.C. = 647)
SI:*EVAL:  (P.C. = 371)
UNWIND-PROTECT:  (P.C. = 5)
SI:*EVAL:  (P.C. = 647)
LET:  (P.C. = 110)
SI:*EVAL:  (P.C. = 647)
ZWEI:EVAL-PRINT:  (P.C. = 3)
COMPILER:PROCESS-FORMS-FROM-STREAM:  (P.C. = 114)
ZWEI:COMPILE-INTERVAL:  (P.C. = 241)
ZWEI:COMPILE-PRINT-INTERVAL:  (P.C. = 101)
ZWEI:COMPILE-DEFINITION-INTERNAL:  (P.C. = 104)
ZWEI:COM-EVALUATE-REGION:  (P.C. = 7)
ZWEI:COMMAND-EXECUTE:  (P.C. = 65)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 20)
(METHOD ZWEI:EDITOR EDIT):  (P.C. = 173)
(METHOD ZWEI:TOP-LEVEL-EDITOR COMBINED EDIT):  (P.C. = 42)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
21-Oct-83 22:51:13-EDT,942;000000000000
Received: from SCRC-YAMASKA by SCRC-TENEX with CHAOS; Fri 21-Oct-83 22:48:30-EDT
Date: Friday, 21 October 1983, 22:48-EDT
From: David A. Moon <Moon@SCRC-TENEX>
Subject: bad error handling in MAKE-PLANE
To: Carl Richard Feynman <CARLF@MIT-OZ>
Cc: BUG-LISPM@MIT-OZ
In-reply-to: The message of 16 Oct 83 20:54-EDT from Carl Richard Feynman <CARLF at MIT-AI>

    Date: Sunday, 16 October 1983, 20:54-EDT
    From: Carl Richard Feynman <CARLF at MIT-OZ>
    In Release 4.5, site configuration 62, on Lisp Machine Janis Joplin:

    I just tried to define a plane without giving a default value.  It would
    be nice if this error were caught by MAKE-PLANE, rather than
    several function calls later.  The error message is pretty cryptic.

			    --carlf

    >>Trap: The first argument given to AS-2, NIL, was not a fixnum.
    While in the function SYS:%LEXPR-ASET  SI:MAKE-PLANE-INTERNAL  MAKE-PLANE

In the source.
22-Oct-83 22:46:26-EDT,1720;000000000000
Date: Saturday, 22 October 1983, 22:41-EDT
From: Robert H. Kassel <sr.rob at MIT-SPEECH>
Subject: bug in array-push-extend
To: BUG-LISPM at MIT-OZ

In Release 4.5, Experimental LexiS 5.1, site configuration 65, on Lisp Machine Grizzly:(3600)

Array-push-extend did not work properly.

>>Trap: The first argument given to SYS:+-INTERNAL, NIL, was not a number.
While in the function ARRAY-PUSH  ARRAY-PUSH-EXTEND  (METHOD UNIVERSE-FLAVOR BASIC-EXTEND)

ARRAY-PUSH:  (P.C. = 4)
   Arg 0 (ARRAY): #<ART-Q-0 11175373>
   Arg 1 (X): NIL
   Local 2 (OLD-LENGTH): NIL

ARRAY-PUSH-EXTEND:  (P.C. = 7)
   Arg 0 (ARRAY): #<ART-Q-0 11175373>
   Arg 1 (DATA): NIL
   --Defaulted args:--
   Arg 2 (EXTENSION): NIL

(METHOD UNIVERSE-FLAVOR BASIC-EXTEND):  (P.C. = 22)
   Arg 0 (SELF): #<UNIVERSE-FLAVOR 11175344>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor UNIVERSE-FLAVOR -- 5. IV's, 0. FL's 4134573>
   Arg 2 (OPERATION): BASIC-EXTEND

(METHOD UNIVERSE-FLAVOR EXTEND-AND-SET-ENTRY-VALUES):  (P.C. = 24)
   Arg 0 (SELF): #<UNIVERSE-FLAVOR 11175344>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor UNIVERSE-FLAVOR -- 5. IV's, 0. FL's 4134573>
   Arg 2 (OPERATION): EXTEND-AND-SET-ENTRY-VALUES
   Arg 3 (NEW-VALUES): (1 2)

SEND:  (P.C. = 6)
   Arg 0 (OBJECT): #<UNIVERSE-FLAVOR 11175344>
   Arg 1 (MESSAGE-NAME): EXTEND-AND-SET-ENTRY-VALUES
   Rest arg (ARGUMENTS): ((1 2))

SI:*EVAL:  (P.C. = 405)
   Arg 0 (FORM): (SEND FOO (QUOTE EXTEND-AND-SET-ENTRY-VALUES) (QUOTE (1 2)))

SI:LISP-TOP-LEVEL1:  (P.C. = 130)
   Arg 0 (TERMINAL-IO-initialization): #<LISP-LISTENER Lisp Listener 2 5602150 exposed>

SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
   --Defaulted args:--
   Arg 0 (IGNORE): NIL
22-Oct-83 23:08:03-EDT,1021;000000000000
Received: from SCRC-YAMASKA by SCRC-TENEX with CHAOS; Sat 22-Oct-83 23:02:33-EDT
Date: Saturday, 22 October 1983, 22:58-EDT
From: David A. Moon <Moon@SCRC-TENEX>
Subject: not a bug in array-push-extend
To: Robert H. Kassel <sr.rob@MIT-SPEECH>
Cc: BUG-LISPM@MIT-OZ
In-reply-to: The message of 22 Oct 83 22:41-EDT from Robert H. Kassel <sr.rob at MIT-SPEECH>

    Date: Saturday, 22 October 1983, 22:41-EDT
    From: Robert H. Kassel <sr.rob at MIT-SPEECH>
    In Release 4.5, Experimental LexiS 5.1, site configuration 65, on Lisp Machine Grizzly:(3600)

    Array-push-extend did not work properly.

    >>Trap: The first argument given to SYS:+-INTERNAL, NIL, was not a number.
    While in the function ARRAY-PUSH  ARRAY-PUSH-EXTEND  (METHOD UNIVERSE-FLAVOR BASIC-EXTEND)

    ARRAY-PUSH:  (P.C. = 4)
       Arg 0 (ARRAY): #<ART-Q-0 11175373>
       Arg 1 (X): NIL
       Local 2 (OLD-LENGTH): NIL

Jusdging by that PC, it worked properly but you gave it an array with NIL for
a fill-pointer.
23-Oct-83 23:32:29-EDT,1071;000000000000
Date: Sunday, 23 October 1983, 22:31-EST
From: David Vinayak Wallace <Gumby at MIT-OZ>
Subject: electric font lock fix
To: Bruce R. Donald <Brd at MIT-OZ>
Cc: BUG-symbolics-software at MIT-OZ
In-reply-to: The message of 21 Oct 83 12:12-EDT from Bruce R. Donald <Brd at MIT-OZ>

    Date: Friday, 21 October 1983, 12:12-EDT
    From: Bruce R. Donald <Brd at MIT-OZ>
    In Release 4.4, site configuration 68, on Lisp Machine Robot-1:

    ELECTRIC-FONT-LOCK goes away when you switch buffers.
    (i.e., if you turn it on in buffer FOO and switch to BAR,
    when you go back to FOO it has been turned off).

     ELECTRIC-FONT-LOCK-IF-APPROPRIATE doesn't seem to work at all, i.e.,
    it never turns on ELECTRIC-FONT-LOCK.

These are the same problem.  Put this in your init file:

(defun electric-font-lock-if-appropriate ()	;Bolix's font-lock is broken.
  (if (cdr (send *interval* ':get ':font-alist))        ;don't do it if only one font specified.
      (turn-on-mode 'electric-font-lock-mode)
    (turn-off-mode 'electric-font-lock-mode)))
23-Oct-83 23:41:29-EDT,2099;000000000000
Date: Sunday, 23 October 1983, 22:40-EST
From: David Vinayak Wallace <Gumby at MIT-OZ>
Subject: mail loses when host is too busy.
To: BUG-LISPM at MIT-OZ

In Release 4.5, site configuration 64, on Lisp Machine Janis Joplin:

Perhaps there could be a new proceed-option of "try via another host."
Right now I patch the chaos:send-it-one argument and retry.  Is that the
right thing to do?

>>Error: Request to MIT-MC for a MAIL connection was refused.
Reason given was "Mailer too busy to accept mail now"
While in the function CHAOS:CONNECT  CHAOS:OPEN-STREAM  ZWEI:CHAOS-SEND-IT-1

ZWEI:CHAOS-SEND-IT-1:  (P.C. = 15)
   Arg 0 (HOST): #<ITS-CHAOS-HOST MIT-MC>
   Arg 1 (RECIPIENTS): ((PERSONAL-NAME "Keith Petersen" NAME "W8SDZ" HOST (SINGLE "MIT-MC") INTERVAL (("To: Keith Petersen <W8SDZ @ MIT-MC>" 4.) ("To: Keith Petersen <W8SDZ @ MIT-MC>" 35.))))
   Arg 2 (TEMPLATE-EXPANSION): (TEXT #<NODE 11577622> HEADERS (DATE 2644803427. FROM ((HOST ** PERSONAL-NAME "David Vinayak Wallace" NAME "Gumby")) SUBJECT "IMHOFF" TO ((PERSONAL-NAME "Keith Petersen" NAME "W8SDZ" HOST ** INTERVAL **)) IN-REPLY-TO ("The message of 21 Oct 83 05:04-EDT from Keith Petersen <W8SDZ at MIT-MC>")) HEADER-FORMAT INCLUDE-PERSONAL TRANSMIT-TIME 2644803427. DRAFT-MSG #<DRAFT-MSG 10176246>)
   Local 3 (RCPT): NIL
   Local 4 (DRAFT-MSG): #<DRAFT-MSG 10176246>
   Local 5: NIL
   Local 6 (.FILE-ABORTED-FLAG.): ABORT

ZWEI:CHAOS-DIRECT-SEND-IT:  (P.C. = 155)
   Arg 0 (RECIPIENTS): ((PERSONAL-NAME "Keith Petersen" NAME "W8SDZ" HOST (SINGLE "MIT-MC") INTERVAL (("To: Keith Petersen <W8SDZ @ MIT-MC>" 4.) ("To: Keith Petersen <W8SDZ @ MIT-MC>" 35.))))
   Arg 1 (TEMPLATE-EXPANSION): (TEXT #<NODE 11577622> HEADERS (DATE 2644803427. FROM ((HOST ** PERSONAL-NAME "David Vinayak Wallace" NAME "Gumby")) SUBJECT "IMHOFF" TO ((PERSONAL-NAME "Keith Petersen" NAME "W8SDZ" HOST ** INTERVAL **)) IN-REPLY-TO ("The message of 21 Oct 83 05:04-EDT from Keith Petersen <W8SDZ at MIT-MC>")) HEADER-FORMAT INCLUDE-PERSONAL TRANSMIT-TIME 2644803427. DRAFT-MSG #<DRAFT-MSG 10176246>)

<rest of stack deleted>
24-Oct-83 01:31:18-EDT,788;000000000000
Date: Monday, 24 October 1983, 01:30-EST
From: David Vinayak Wallace <Gumby at MIT-OZ>
Subject: finding out about time servers
To: BUG-LISPM at MIT-OZ

In Release 4.5, site configuration 64, on Lisp Machine Janis Joplin:

Janis's time was exactly an hour off.  I did (TIME:INITIALIZE-TIMEBASE)
but this set the time to a hour off.  Is there a way to
1> find out what host is being used?  Perhaps time:initialize-timebase
and similar functions should return an extra value which is the host
used.
2> specify a host to try first for such services?

I fixed it by doing (TIME:INITIALIZE-TIMEBASE (TIME:PARSE-UNIVERSAL-TIME
"one hour from now")).  Did anything (like mail and file transations)
get screwed by having the time an hour slow?  I didn't notice anything.

david
24-Oct-83 09:31:46-EDT,1052;000000000000
Received: from SCRC-YAMASKA by SCRC-TENEX with CHAOS; Mon 24-Oct-83 09:27:03-EDT
Date: Mon, 24 Oct 83 09:29 EDT
From: Charles Hornig <Hornig@SCRC-TENEX>
Subject: bug in serial streams
To: Robert H. Kassel <sr.rob@MIT-SPEECH>, BUG-LISPM@MIT-OZ
In-reply-to: The message of 21 Oct 83 15:58-EDT from Robert H. Kassel <sr.rob at MIT-SPEECH>
Message-ID: <831024092914.2.Hornig@SCRC-TENEX>

    Date: Friday, 21 October 1983, 15:58-EDT
    From: Robert H. Kassel <sr.rob at MIT-SPEECH>
    In Release 4.5, site configuration 65, on Lisp Machine Grizzly:

    After closing and aborting serial 1 from breakpoint in
    zwei.

    >>Error: The argument CHANNEL to SI:FEP-CHANNEL-NOT-FULL, NIL, was of the wrong type.
    The function expected a FEP channel.
    While in the function SI:FEP-CHANNEL-NOT-FULL  SI:FEP-CHANNEL-OUTPUT-BLOCK  (METHOD SI:BASIC-SERIAL-STREAM NEW-OUTPUT-BUFFER)

You tried (in an unwind-protect) to do output to the stream after it was
closed.  What did you expect?  The error message is better in Release
5.0.
24-Oct-83 11:18:05-EDT,1461;000000000000
Date: Monday, 24 October 1983  11:11-EDT
From: SR.ROB at MIT-SPEECH
To:   David A. Moon <Moon at SCRC-TENEX>
Cc:   BUG-LISPM at MIT-OZ
Subject: not a bug in array-push-extend

    Date: Saturday, 22 October 1983, 22:58-EDT
    From: David A. Moon <Moon at SCRC-TENEX>
    To:   Robert H. Kassel <sr.rob>
    cc:   BUG-LISPM at MIT-OZ
    Re:   not a bug in array-push-extend
    Received: from SCRC-YAMASKA by SCRC-TENEX with CHAOS; Sat 22-Oct-83 23:02:33-EDT

        Date: Saturday, 22 October 1983, 22:41-EDT
        From: Robert H. Kassel <sr.rob at MIT-SPEECH>
        In Release 4.5, Experimental LexiS 5.1, site configuration 65, on Lisp Machine Grizzly:(3600)

        Array-push-extend did not work properly.

        >>Trap: The first argument given to SYS:+-INTERNAL, NIL, was not a number.
        While in the function ARRAY-PUSH  ARRAY-PUSH-EXTEND  (METHOD UNIVERSE-FLAVOR BASIC-EXTEND)

        ARRAY-PUSH:  (P.C. = 4)
           Arg 0 (ARRAY): #<ART-Q-0 11175373>
           Arg 1 (X): NIL
           Local 2 (OLD-LENGTH): NIL

    Jusdging by that PC, it worked properly but you gave it an array with NIL for
    a fill-pointer.

That's what I thought.  I created an array with a leader-list.  The first
element of that list should have contained the length but it did not.  Do
I have to  initialize this variable when I create the array?  It should really
be done automagically by make array.

					ROB

24-Oct-83 12:45:06-EDT,1763;000000000000
Received: from SCRC-EUPHRATES by SCRC-TENEX with CHAOS; Mon 24-Oct-83 12:24:07-EDT
Date: Monday, 24 October 1983, 12:23-EDT
From: David A. Moon <Moon@SCRC-TENEX>
Subject: not a bug in array-push-extend
To: SR.ROB@MIT-SPEECH
Cc: BUG-LISPM@MIT-OZ
In-reply-to: The message of 24 Oct 83 11:11-EDT from SR.ROB at MIT-SPEECH

    Date: Monday, 24 October 1983  11:11-EDT
    From: SR.ROB at MIT-SPEECH
	Date: Saturday, 22 October 1983, 22:58-EDT
	From: David A. Moon <Moon at SCRC-TENEX>
	    Date: Saturday, 22 October 1983, 22:41-EDT
	    From: Robert H. Kassel <sr.rob at MIT-SPEECH>
	    In Release 4.5, Experimental LexiS 5.1, site configuration 65, on Lisp Machine Grizzly:(3600)

	    Array-push-extend did not work properly.

	    >>Trap: The first argument given to SYS:+-INTERNAL, NIL, was not a number.
	    While in the function ARRAY-PUSH  ARRAY-PUSH-EXTEND  (METHOD UNIVERSE-FLAVOR BASIC-EXTEND)

	    ARRAY-PUSH:  (P.C. = 4)
	       Arg 0 (ARRAY): #<ART-Q-0 11175373>
	       Arg 1 (X): NIL
	       Local 2 (OLD-LENGTH): NIL

	Jusdging by that PC, it worked properly but you gave it an array with NIL for
	a fill-pointer.

    That's what I thought.  I created an array with a leader-list.  The first
    element of that list should have contained the length but it did not.  Do
    I have to  initialize this variable when I create the array?  It should really
    be done automagically by make array.

If you give the :leader-list argument to make-array, the elements of the list are
what to initialize the elements of the leader to; make-array has no choice about
how to initialize the elements.  If you're not using the leader yourself,
use something like (make-array 100 ':fill-pointer 0) to make your array.
25-Oct-83 01:22:47-EDT,2272;000000000000
Date: Monday, 24 October 1983, 18:03-EST
From: Tim McNerney <TIM at MIT-OZ>
Subject: Random FED freak
To: BUG-LISPM at OZ

In Release 4.5, site configuration 57, on Lisp Machine Apiary-5:

Hit <space> to clear display of font after [Read File] in FED

>>Trap: The second argument given to SYS:--INTERNAL, NIL (from local variable TV:KERN), was not a number.
While in the function (METHOD TV:SHEET TYO)  FED:FED-TYO  (METHOD FED:CHARACTER-PANE REDISPLAY)

(METHOD TV:SHEET TYO):  (P.C. = 164)
   Arg 0 (SELF): #<CHARACTER-PANE Character Pane 1 11101104 exposed>
   Arg 1 (SELF-MAPPING-TABLE): TV:SHEET
   Arg 2 (OPERATION): TYO
   Arg 3 (CHAR): 111
   --Defaulted args:--
   Arg 4 (FONT): #<FONT BORDERS 11772371>
   Local 5 (BASE-ADJ): 0
   Local 6 (CHAR-WIDTHS): #<ART-Q-118 11771706>
   Local 7 (WIDE-P): NIL
   Local 8 (WID): 0
   Local 9 (KERN): NIL
   Local 10 (KERN-TABLE): #<ART-Q-118 11772175>
   Local 11 (XPOS): 2
   Local 12 (RIGHT-LIM): 1082

FED:FED-TYO:  (P.C. = 12)
   Arg 0 (SHEET): #<CHARACTER-PANE Character Pane 1 11101104 exposed>
   Arg 1 (CH): 111
   Arg 2 (CHARACTER): NIL

(METHOD FED:CHARACTER-PANE REDISPLAY):  (P.C. = 74)
   Arg 0 (SELF): #<CHARACTER-PANE Character Pane 1 11101104 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FED:CHARACTER-PANE -- 3. IV's, 10. FL's 61577240>
   Arg 2 (OPERATION): REDISPLAY

(METHOD FED REDISPLAY-CHAR-PANE):  (P.C. = 4)
   Arg 0 (SELF): #<FED Fed 1 11100263 deexposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FED -- 16. IV's, 15. FL's 61630427>
   Arg 2 (OPERATION): REDISPLAY-CHAR-PANE

(METHOD FED:BASIC-FED-PANE COMBINED REDISPLAY):  (P.C. = 100)
   Arg 0 (SELF): #<BASIC-FED-PANE Basic Fed Pane 1 11100371 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FED:BASIC-FED-PANE -- 2. IV's, 18. FL's 61557312>
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

(METHOD FED COMMAND-LOOP):  (P.C. = 36)
   Arg 0 (SELF): #<FED Fed 1 11100263 deexposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FED -- 16. IV's, 15. FL's 61630427>
   Arg 2 (OPERATION): COMMAND-LOOP

FED:FED-TOP-LEVEL:  (P.C. = 73)
   Arg 0 (WINDOW): #<FED Fed 1 11100263 deexposed>

SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
   --Defaulted args:--
   Arg 0 (IGNORE): NIL
25-Oct-83 01:27:55-EDT,1156;000000000000
Date: Monday, 24 October 1983, 20:30-EST
From: Tim McNerney <TIM at MIT-OZ>
Subject: Undefined command in FED
To: BUG-LISPM at OZ

In Release 4.5, site configuration 57, on Lisp Machine Apiary-5:



>>Trap: The function COM-MERGE-PLANES is undefined.
While in the function COM-MERGE-PLANES  (METHOD FED:BASIC-FED COM-ADD-GRAY-MENU)  (METHOD FED COMMAND-LOOP)

COM-MERGE-PLANES:

(METHOD FED:BASIC-FED COM-ADD-GRAY-MENU):  (P.C. = 35)
   Arg 0 (SELF): #<BASIC-FED-PANE Basic Fed Pane 1 5700371 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FED:BASIC-FED -- 23. IV's, 10. FL's 53542174>
   Arg 2 (OPERATION): COM-ADD-GRAY-MENU
   Arg 3 (IGNORE): (MENU (NIL VALUE COM-ADD-GRAY-MENU) 4 #<COMMAND-MENU-PANE Command Menu Pane 7 5701537 exposed>)

(METHOD FED COMMAND-LOOP):  (P.C. = 423)
   Arg 0 (SELF): #<FED Fed 1 5700263 deexposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FED -- 16. IV's, 15. FL's 61630427>
   Arg 2 (OPERATION): COMMAND-LOOP

FED:FED-TOP-LEVEL:  (P.C. = 73)
   Arg 0 (WINDOW): #<FED Fed 1 5700263 deexposed>

SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
   --Defaulted args:--
   Arg 0 (IGNORE): NIL
25-Oct-83 10:55:04-EDT,853;000000000000
Received: from SCRC-CONCORD by SCRC-QUABBIN with CHAOS; Tue 25-Oct-83 10:45:01-EDT
Date: Tuesday, 25 October 1983, 10:43-EDT
From: Bernard S. Greenberg <BSG at SCRC-TENEX>
Subject: Random FED freak
To: TIM at MIT-AI, BUG-LISPM at MIT-AI
In-reply-to: The message of 24 Oct 83 19:03-EDT from Tim McNerney <TIM at MIT-AI>

    Date: Monday, 24 October 1983, 18:03-EST
    From: Tim McNerney <TIM at MIT-OZ>
    In Release 4.5, site configuration 57, on Lisp Machine Apiary-5:

    Hit <space> to clear display of font after [Read File] in FED

    >>Trap: The second argument given to SYS:--INTERNAL, NIL (from local variable TV:KERN), was not a number.
    While in the function (METHOD TV:SHEET TYO)  FED:FED-TYO  (METHOD FED:CHARACTER-PANE REDISPLAY)
This is not a general feature of FED.  Can you point me
to the file that you read?
25-Oct-83 12:19:21-EDT,786;000000000000
Received: from SCRC-CONCORD by SCRC-TENEX with CHAOS; Tue 25-Oct-83 11:00:37-EDT
Date: Tuesday, 25 October 1983, 11:01-EDT
From: Bernard S. Greenberg <BSG@SCRC-TENEX>
Subject: Undefined command in FED
To: TIM@MIT-OZ, BUG-LISPM@MIT-OZ
In-reply-to: The message of 24 Oct 83 21:30-EDT from Tim McNerney <TIM at MIT-AI>

    Date: Monday, 24 October 1983, 20:30-EST
    From: Tim McNerney <TIM at MIT-OZ>
    In Release 4.5, site configuration 57, on Lisp Machine Apiary-5:
    >>Trap: The function COM-MERGE-PLANES is undefined.
    While in the function COM-MERGE-PLANES  (METHOD FED:BASIC-FED COM-ADD-GRAY-MENU)  (METHOD FED COMMAND-LOOP)

    COM-MERGE-PLANES:
Fixed, 243.165, which is 5.0.

In the meantime, just click left on "Add in Gray" to
achieve this effect.
25-Oct-83 16:01:59-EDT,2356;000000000000
Date: Tuesday, 25 October 1983, 14:21-EST
From: Robert H. Kassel <sr.rob at MIT-SPEECH>
Subject: bug in zwei
To: BUG-LISPM at OZ

In Release 4.5, Experimental LexiS 5.1, site configuration 65, on Lisp Machine Grizzly:(3600)

While trying to get text from kill buffer using mouse.

>>Trap: The subscript given to AR-1, 64 (from local variable TV:I), on "  (defun loop-do-collect (type)" was beyond the length, 64.
While in the function (METHOD TV:SHEET COMPUTE-MOTION)  ZWEI:REDISPLAY  ZWEI:REDISPLAY-ALL-WINDOWS

(METHOD TV:SHEET COMPUTE-MOTION):  (P.C. = 425)
   Arg 0 (SELF): #<ZMACS-WINDOW-PANE Zmacs Window Pane 1 3001252 exposed>
   Arg 1 (SELF-MAPPING-TABLE): TV:SHEET
   Arg 2 (OPERATION): COMPUTE-MOTION
   Arg 3 (STRING): "  (defun loop-do-collect (type)"
   Arg 4 (START): 0
   Arg 5 (END): 74
   Arg 6 (X): 0
   Arg 7 (Y): 0
   Arg 8 (CR-AT-END-P): NIL
   Arg 9 (STOP-X): 0
   Arg 10 (STOP-Y): 17777777
   Arg 11 (BOTTOM-LIMIT): 17777777
   --Defaulted args:--
   Arg 12 (RIGHT-LIMIT): 1361
   Arg 13 (ACCOUNT-FOR-CONTINUATION-AFTER): NIL
   Local 14 (CWA): NIL
   Local 15 (CW): 10
   Local 16 (CH): NIL
   Local 17 (FONT): #<FONT CPTFONT 52027561>
   Local 18 (FONTX): NIL
   Local 19 (TEM): 200
   Local 20 (I): 64
   Local 21 (N): 74
   Local 22 (NN): 74
   Local 23 (II): 0
   Local 24 (MARGIN-FLAG): T

ZWEI:REDISPLAY:  (P.C. = 137)
   Arg 0 (WINDOW): #<WINDOW 52456655>
   --Defaulted args:--
   Arg 1 (RECENTER-TYPE): POINT
   Arg 2 (RC1): NIL
   Arg 3 (RC2): NIL
   Arg 4 (FORCE-TO-COMPLETION-P): NIL

ZWEI:REDISPLAY-ALL-WINDOWS:  (P.C. = 36)
   --Defaulted args:--
   Arg 0 (FORCE-TO-COMPLETION-P): NIL
   Arg 1 (SELECT-P): T

(METHOD ZWEI:EDITOR EDIT):  (P.C. = 122)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 53421127>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:EDITOR -- 11. IV's, 0. FL's 61300021>
   Arg 2 (OPERATION): EDIT
   --Defaulted args:--
   Arg 3 (TOP-LEVEL-P): T

(METHOD ZWEI:TOP-LEVEL-EDITOR COMBINED EDIT):  (P.C. = 42)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 53421127>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:TOP-LEVEL-EDITOR -- 13. IV's, 1. FL's 61300005>
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)

SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
   --Defaulted args:--
   Arg 0 (IGNORE): NIL
25-Oct-83 19:16:42-EDT,456;000000000000
Date: Tuesday, 25 October 1983, 18:16-EST
From: Kent M. Pitman <KMP at MIT-MC>
Subject: TIME:INITIALIZE-TIMEBASE
To: BUG-LISPM at MIT-MC

In Release 4.5 on MIT-Avatar...

There is some machine on the net which has the wrong time. Is there 
a way I can tell TIME:INITIALIZE-TIMEBASE to query me per-site as to
whether I want to believe its time? That would also allow me to know
which sites do not have the right time so I can report them.
-kmp
25-Oct-83 22:14:21-EDT,1479;000000000000
Date: Tuesday, 25 October 1983, 21:12-EST
From: Tim McNerney <TIM at MIT-OZ>
Subject: Random FED freak (...problem with "Show Font"?)
To: BSG at SCRC-TENEX, BUG-LISPM at MIT-OZ
In-reply-to: The message of 25 Oct 83 09:43-EST from Bernard S. Greenberg <BSG at SCRC-TENEX>

    Date: Monday, 24 October 1983, 18:03-EST
    From: Tim McNerney <TIM at MIT-OZ>
    In Release 4.5, site configuration 57, on Lisp Machine Apiary-5:

    Hit <space> to clear display of font after [Read File] in FED

    >>Trap: The second argument given to SYS:--INTERNAL, NIL (from local variable TV:KERN), was not a number.
    While in the function (METHOD TV:SHEET TYO)  FED:FED-TYO  (METHOD FED:CHARACTER-PANE REDISPLAY)

  Date: Tuesday, 25 October 1983, 10:43-EDT
  From: Bernard S. Greenberg <BSG at SCRC-TENEX>

  This is not a general feature of FED.  Can you point me to the file that you read?

Sorry I can't point to the offending file--it has long since been deleted.
However, I can tell you that I made it with FED and that SRC:<S.FONTS>ICONS.BIN
is a great, great, grandson of that file.  This bug looks more like a redisplay
problem:  the same error occured over and over again as FED tried to clean up
after "Show Font".  I just kept ing out of the error, and this seemed to
work.  I could not reproduce the bug at will, although rebooting the machine did
not make the problem go away (By the way, how can "Read File" not be a general
feature of FED?).
26-Oct-83 08:45:50-EDT,1658;000000000000
Date: Wednesday, 26 October 1983, 07:45-EST
From: Tim McNerney <TIM at MIT-OZ>
Subject: Magical properties of symbol ARRAY?
To: BUG-LISPM at MIT-OZ

In Release 4.5, site configuration 57, on Lisp Machine Apiary-5:

;;; -*- Mode: LISP; Package: TV; Base: 8 -*-
			      
(DEFFLAVOR BITBLT-BLINKER     
	((WIDTH NIL)	      
	 (HEIGHT NIL)	      
	 (ARRAY NIL)             	; It looks like it should be in the TV: package like the other instance variables...
	 (DELTA-X 0)									
	 (DELTA-Y 0))									
	(BLINKER)									
  :INITABLE-INSTANCE-VARIABLES)								
											
(describe (tv:make-blinker terminal-io							
			   'tv:bitblt-blinker						
			   ':array (make-array '(32 32) ':type 'art-1b)			
			   ':width 32 ':height 32))					
										        
 #<BITBLT-BLINKER 11140637>, an object of flavor TV:BITBLT-BLINKER,		       but...
  has instance variable values:								
  TV:X-POS:  0										
  TV:Y-POS:  0										
  TV:SHEET:  #<EDITOR-TYPEOUT-WINDOW Editor Typeout Window 5 3024414 deactivated>	
  TV:VISIBILITY:  BLINK									
  TV:DESELECTED-VISIBILITY:  ON								
  TV:HALF-PERIOD:  15									
  TV:PHASE:  NIL									
  TV:TIME-UNTIL-BLINK:  0								
  TV:FOLLOW-P:  NIL									
  TV:WIDTH:  32										
  TV:HEIGHT:  32									
  ARRAY:  #<ART-1B-32-32 15624665>       	; ... for some strange reason it is in the USER package!  Why does this happen?
  TV:DELTA-X:  0				;     This seems rather benign, but can you see any possible screws?
  TV:DELTA-Y:  0				;     Does the new package system in Release 5 eliminate such anomalies?
						
26-Oct-83 09:18:38-EDT,1622;000000000000
Received: from SCRC-CONCORD by SCRC-TENEX with CHAOS; Wed 26-Oct-83 09:12:30-EDT
Date: Wednesday, 26 October 1983, 10:14-EDT
From: Bernard S. Greenberg <BSG@SCRC-TENEX>
Subject: Magical properties of symbol ARRAY?
To: TIM@MIT-OZ, BUG-LISPM@MIT-OZ
In-reply-to: The message of 26 Oct 83 08:45-EDT from Tim McNerney <TIM at MIT-AI>

    Date: Wednesday, 26 October 1983, 07:45-EST
    From: Tim McNerney <TIM at MIT-OZ>
    In Release 4.5, site configuration 57, on Lisp Machine Apiary-5:

    ;;; -*- Mode: LISP; Package: TV; Base: 8 -*-
				  <213>
    (DEFFLAVOR BITBLT-BLINKER     <213>
	    ((WIDTH NIL)	      <213>
	     (HEIGHT NIL)	      <213>
	     (ARRAY NIL)             	; It looks like it should be in the TV: package like the other instance variables...
      TV:WIDTH:  32										
      TV:HEIGHT:  32									
      ARRAY:  #<ART-1B-32-32 15624665>       	; ... for some strange reason it is in the USER package!  Why does this happen?
      TV:DELTA-X:  0				;     This seems rather benign, but can you see any possible screws?
      TV:DELTA-Y:  0				;     Does the new package system in Release 5 eliminate such anomalies?
						
User package?  You forget that the USER package inherits from the GLOBAL
package, as does the TV package.  The symbol ARRAY is accessible from all
three of these packages, without a package prefix.  It is the symbol ARRAY
on the GLOBAL package that you are seeing.  The new package system preserves
this feature.  The silly MacLisp-compatible ARRAY function has to be accessible
everywhere.  This is a misfeature of LISP.  
26-Oct-83 10:02:37-EDT,2679;000000000000
Received: from SCRC-CUYAHOGA by SCRC-TENEX with CHAOS; Wed 26-Oct-83 09:58:52-EDT
Date: Wednesday, 26 October 1983, 10:00-EDT
From: Robert A. Cassels <Cassels@SCRC-TENEX>
Subject: TIME:What-time-is-it-REALLY?
To: KMP@MIT-MC, BUG-LISPM@MIT-MC
In-reply-to: The message of 25 Oct 83 19:16-EDT from Kent M. Pitman <KMP at MIT-MC>

    Date: Tuesday, 25 October 1983, 18:16-EST
    From: Kent M. Pitman <KMP at MIT-MC>
    In Release 4.5 on MIT-Avatar...

    There is some machine on the net which has the wrong time. Is there 
    a way I can tell TIME:INITIALIZE-TIMEBASE to query me per-site as to
    whether I want to believe its time? That would also allow me to know
    which sites do not have the right time so I can report them.
    -kmp

(chaos:brd-host-time) won't query, but will tell you what time everyone
thinks it is.  For example, right now:

 PLASMA:         10/26/83 09:58:59
 Connecticut:    10/26/83 09:59:19
 NE43-3B-HUB:    10/26/83 10:00:10
 Anduin:         10/26/83 09:59:12
 Amazon:         10/26/83 09:56:02
 SPEECH-11:      10/26/83 08:10:34
 MIT-SCRC-MICROWAVE: 10/26/83 09:59:01
 SCHUYLKILL:     10/26/83 10:57:40
 Lethe:          10/26/83 09:59:00
 Sudbury:        10/26/83 09:59:10
 Euphrates:      10/26/83 09:55:59
 Orinoco:        10/26/83 09:54:31
 Quabbin:        10/26/83 09:59:21
 Collie:         10/26/83 10:00:07
 INFINITE:       10/26/83 09:59:41
 BYPASS:         10/26/83 09:59:06
 Lisp Machine Boo Boo: 10/26/83 09:59:07
 Beagle:         10/26/83 09:59:58
 Lisp Machine Panda: 10/26/83 09:59:06
 PA Lisp Machine Avatar: 10/26/83 09:59:07
 TACOMA-NARROWS: 10/26/83 09:58:58
 Afghan:         10/26/83 09:59:19
 Lisp Machine Six: 10/26/83 10:59:21
 Dalmatian:      10/26/83 11:04:16
 Assabet:        10/26/83 10:59:15
 Samoyed:        10/26/83 09:59:29
 Husky:          10/26/83 09:59:32
 Spaniel:        10/26/83 11:04:11
 Lisp Machine Grizzly: 10/26/83 09:58:58
 Lisp Machine Eight: 10/26/83 09:58:54
 Neponset:       10/26/83 09:58:58
 DANCER:         10/26/83 09:59:01
 Cuyahoga:       10/26/83 09:59:19
 DACHSHUND:      10/26/83 09:59:03
 Shepherd:       10/26/83 11:04:15
 PI Project:     10/26/83 09:59:00
 Harlem:         10/26/83 08:55:59
 VIXEN:          10/26/83 09:57:38
 CUPID:          10/26/83 09:56:03
 Concord:        10/26/83 09:59:00
 Annisquam:      10/26/83 10:59:07
 Yangtze:        10/26/83 09:58:49
 Yukon:          10/26/83 09:59:06
 Yamaska:        10/26/83 10:59:07
 Muddy:          10/26/83 09:59:20
 Basset:         10/26/83 10:00:09
 Lisp Machine Polar: 10/26/83 09:59:08
 DuPage:         10/26/83 10:59:05
 Big River:      10/26/83 09:59:14
26-Oct-83 10:16:06-EDT,3741;000000000000
Date: Wednesday, 26 October 1983, 09:12-EST
From: Patrick G. Sobalvarro <PGS at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In System 97.20, CADR 1.0, ZMail 51.8, MIT-Specific 21.0, microcode 257,
ZM MIT, on Lisp Machine Thirty-two:

I logged in and entered Zmail from my init file with (zwei:zmail).

>>ERROR: Lock #<DTP-LOCATIVE 32456407> already locked by this process
Backtrace from the debugger:

GLOBAL:PROCESS-LOCK (P.C. = 74)

 Arg 0 (LOCATIVE-POINTER): #<DTP-LOCATIVE 32456407>
   --Defaulted args:--
 Arg 1 (LOCK-VALUE): #<PROCESS Main ZMail window 7010217>
 Arg 2 (WHOSTATE): "Lock"
 Arg 3 (TIMEOUT): NIL
Local 0 (LOCKER): #<PROCESS Main ZMail window 7010217>


ZWEI#:LOAD-ZMAIL-INIT-FILE (P.C. = 114)

 Arg 0 (SILENT): NIL
Local 0 (LOCK): #<DTP-LOCATIVE 32456407>
Local 1: NIL
Local 2 (.FILE-ABORTED-FLAG.): NIL
Local 3 (STREAM): NIL


ZWEI#:SET-ZMAIL-USER (P.C. = 123)

   --Defaulted args:--
 Arg 0 (SILENT): NIL
Local 0 (OLD-FRACT): 0.45s0
Local 1 (LOCK): #<DTP-LOCATIVE 32456407>


ZWEI#:STARTUP-ZMAIL-BUFFER (P.C. = 115)

 Arg 0 (NEW-PATHNAME): NIL
Local 0 (STREAM): NIL
Local 1 (PATHNAME): NIL
Local 2 (ZMAIL-BUFFER): NIL
Local 3 (.LOCKED-P.): NIL
Local 4 (LIST): NIL
Local 5 (TEM): NIL


(SELECT-METHOD ZWEI#:ZMAIL-COMMAND-LIST-DEFAULT ZWEI#:SUMMARY-EXECUTE) (P.C. = 21)

 Arg 0 (IGNORE): EXECUTE
 Arg 1 (FUNCTION): ZWEI#:STARTUP-ZMAIL-BUFFER
 Rest arg (ARGS): (NIL)


(METHOD ZWEI#:ZMAIL-FRAME PROCESS-SPECIAL-COMMAND) (P.C. = 25)
  (SELF is #<ZMAIL-FRAME Main ZMail window 1000311 exposed>)

 Arg 0 (OPERATION): PROCESS-SPECIAL-COMMAND
 Rest arg (ARGS): (EXECUTE ZWEI#:STARTUP-ZMAIL-BUFFER NIL)


(METHOD ZWEI#:ZMAIL-COMMAND-LOOP-MIXIN COMMAND-LOOP) (P.C. = 256)
  (SELF is #<ZMAIL-FRAME Main ZMail window 1000311 exposed>)

 Arg 0 (OPERATION): COMMAND-LOOP
Local 0: ("Return to ZMAIL command loop.")
Local 1: ((SYSTEM:ABORT GLOBAL:ERROR) ("Return to ZMAIL command loop.") T ("Return to ZMAIL command loop.") ...)
Local 2 (RESPONSE): NIL
Local 3 (DEGREE): NIL


Additional information supplied with call:
 SYSTEM:ADI-FEXPR-CALL

(INTERNAL (METHOD ZWEI#:ZMAIL-FRAME COMBINED COMMAND-LOOP) 0) (P.C. = 50)

 Rest arg (.DAEMON-CALLER-ARGS.): (COMMAND-LOOP)
Local 1 (.DAEMON-MAPPING-TABLE.): #<ART-16B-15 21401242>


GLOBAL:FUNCALL (P.C. = 25)

 Arg 0 (FN): #<DTP-FEF-POINTER (INTERNAL (METHOD ZWEI#:ZMAIL-FRAME COMBINED COMMAND-LOOP) 0) 23054016>
 Rest arg (ARGS): (COMMAND-LOOP)


(METHOD ZWEI#:ZMAIL-COMMAND-LOOP-MIXIN AROUND COMMAND-LOOP) (P.C. = 57)
  (SELF is #<ZMAIL-FRAME Main ZMail window 1000311 exposed>)

 Arg 0 (OPERATION): COMMAND-LOOP
 Arg 1 (CONT): #<DTP-FEF-POINTER (INTERNAL (METHOD ZWEI#:ZMAIL-FRAME COMBINED COMMAND-LOOP) 0) 23054016>
 Arg 2 (MT): #<ART-16B-15 21401242>
 Arg 3 (ARGS): (COMMAND-LOOP)
   --Defaulted args:--
 Arg 4 (EDITOR-CLOSURE-1): NIL
 Rest arg (IGNORE): NIL
Local 1: (ZWEI#:UNKNOWN-SPECIAL-COMMAND ZWEI#:ZMAIL-COMMAND-LOOP-UNKNOWN-SPECIAL-COMMAND)
Local 2: ((ZWEI#:UNKNOWN-SPECIAL-COMMAND ZWEI#:ZMAIL-COMMAND-LOOP-UNKNOWN-SPECIAL-COMMAND))


(METHOD ZWEI#:ZMAIL-FRAME COMBINED COMMAND-LOOP) (P.C. = 47)
  (SELF is #<ZMAIL-FRAME Main ZMail window 1000311 exposed>)

 Rest arg (.DAEMON-CALLER-ARGS.): (COMMAND-LOOP)
Local 1 (.DAEMON-MAPPING-TABLE.): #<ART-16B-15 21401242>


ZWEI#:ZMAIL-PROCESS-TOP-LEVEL (P.C. = 115)

 Arg 0 (WINDOW): #<ZMAIL-FRAME Main ZMail window 1000311 exposed>


SI#:PROCESS-TOP-LEVEL (P.C. = 115)

   --Defaulted args:--
 Arg 0 (IGNORE): NIL
Local 0: ("Restart process ~A." "Main ZMail window")
Local 1: ((SYSTEM:ABORT GLOBAL:ERROR) ("Restart process ~A." "Main ZMail window") T ("Restart process ~A." "Main ZMail window") ...)
Local 2 (IGNORE): NIL
26-Oct-83 11:17:22-EDT,2051;000000000000
Date: Wednesday, 26 October 1983, 10:01-EST
From: Leigh L. Klotz <klotz at MIT-MC>
Subject: NETWORK-C in SUPDUP -> SET-SUPER-IMAGE-MODE message unclaimed
To: BUG-LISPM at OZ

In Release 4.5, site configuration 64, on Lisp Machine Joe Louis:

I had supdup'd to MC and logged out.  I typed NETWORK-C, thinking it might
close the connection, but instead it prompted for a new escape character and
errored out.

>>Error: The object #<SUPDUP Supdup 1 3001426 exposed> received a SET-SUPER-IMAGE-MODE message, which went unclaimed.
The rest of the message was (NIL)
While in the function (METHOD SUPDUP:BASIC-NVT HANDLE-ESCAPE)  (INTERNAL (METHOD SUPDUP COMBINED HANDLE-ESCAPE) 0)  (METHOD SUPDUP:SUPDUP-OUTPUT-MIXIN WHOPPER HANDLE-ESCAPE)

(METHOD SUPDUP:BASIC-NVT HANDLE-ESCAPE):  (P.C. = 77)
   Arg 0 (SELF): #<SUPDUP Supdup 1 3001426 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SUPDUP:BASIC-NVT -- 14. IV's, 0. FL's 61267745>
   Arg 2 (OPERATION): HANDLE-ESCAPE
   Local 3 (.OLD.OUTPUT.HOLD.): NIL
   Local 4 (CH): 103
   Local 5 (XPOS): 0
   Local 6 (YPOS): 124

(INTERNAL (METHOD SUPDUP COMBINED HANDLE-ESCAPE) 0):  (P.C. = 10)
   Arg 0 (SELF): #<SUPDUP Supdup 1 3001426 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SUPDUP -- 2. IV's, 15. FL's 61267702>
   Rest arg (.DAEMON-CALLER-ARGS.): (HANDLE-ESCAPE)

(METHOD SUPDUP:SUPDUP-OUTPUT-MIXIN WHOPPER HANDLE-ESCAPE):  (P.C. = 15)
   Arg 0 (SELF): #<SUPDUP Supdup 1 3001426 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SUPDUP:SUPDUP-OUTPUT-MIXIN -- 20. IV's, 0. FL's 61270014>
   Arg 2 (.WHOPPER-CONTINUATION.): #<DTP-COMPILED-FUNCTION (INTERNAL (METHOD SUPDUP COMBINED HANDLE-ESCAPE) 0) 17001477>
   Arg 3 (.OLD-SELF-MAPPING-TABLE.): #<Map to flavor SUPDUP -- 2. IV's, 15. FL's 61267702>
   Arg 4 (.OPERATION.): HANDLE-ESCAPE

Rest of stack:
(METHOD SUPDUP COMBINED HANDLE-ESCAPE):  (P.C. = 12)
(METHOD SUPDUP:BASIC-NVT TYPEIN-TOP-LEVEL):  (P.C. = 236)
SUPDUP:TYPEIN-TOP-LEVEL:  (P.C. = 4)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
26-Oct-83 12:00:16-EDT,1025;000000000000
Received: from SCRC-CHARLES by SCRC-TENEX with CHAOS; Wed 26-Oct-83 11:19:40-EDT
Date: Wednesday, 26 October 1983, 11:21-EDT
From: David C. Plummer <DCP@SCRC-QUABBIN>
Subject: TIME:What-time-is-it-REALLY?
To: Cassels@SCRC-TENEX, KMP@MIT-MC, BUG-LISPM@MIT-MC
In-reply-to: The message of 26 Oct 83 10:00-EDT from Robert A. Cassels <Cassels at SCRC-TENEX>

    Date: Wednesday, 26 October 1983, 10:00-EDT
    From: Robert A. Cassels <Cassels@SCRC-TENEX>
	Date: Tuesday, 25 October 1983, 18:16-EST
	From: Kent M. Pitman <KMP at MIT-MC>
	In Release 4.5 on MIT-Avatar...

	There is some machine on the net which has the wrong time. Is there 
	a way I can tell TIME:INITIALIZE-TIMEBASE to query me per-site as to
	whether I want to believe its time? That would also allow me to know
	which sites do not have the right time so I can report them.
	-kmp

    (chaos:brd-host-time) won't query, but will tell you what time everyone
    thinks it is.  For example, right now:

Ummm... that's a Release 5 function.
26-Oct-83 12:03:09-EDT,566;000000000000
Date: Wednesday, 26 October 1983, 12:03-EDT
From: Leigh L. Klotz <klotz at MIT-MC>
Subject: Lispm one-hour-off time bug
To: bug-lispm at MIT-MC

Here's the fix, due to Berlin.

;;; Domain-dependent knowledge
(DEFUN LAST-SUNDAY-IN-OCTOBER (YEAR)
  (LET ((LSA (LAST-SUNDAY-IN-APRIL YEAR)))
    ;; Days between April and October = 31+30+31+31+30 = 153  6 mod 7
    ;; Therefore the last Sunday in October is as follows: (remembering that Oct has one
    ;; day more than April does.)
    (cond ((= lsa 24.) 30.)
	  ((= lsa 25.) 31.)
	  (t (1- LSA)))))
26-Oct-83 15:34:39-EDT,421;000000000000
Date: Wednesday, 26 October 1983, 14:07-EST
From: Robert H. Kassel <sr.rob at MIT-SPEECH>
Subject: SETF not quite right
To: BUG-LISPM at MIT-OZ

In Release 4.5, Experimental LexiS 5.1, site configuration 65, on Lisp Machine Grizzly: (3600)

(setf (send foo ':bar) baz barf) will not work.
Why limit setf on flavors to working with messages that
only accept one argument?  It seems like an easy fix.

			ROB

26-Oct-83 17:46:24-EDT,1709;000000000000
Received: from SCRC-EUPHRATES by SCRC-QUABBIN with CHAOS; Wed 26-Oct-83 17:21:19-EDT
Date: Wednesday, 26 October 1983, 17:20-EDT
From: David A. Moon <Moon at SCRC-TENEX>
Subject: SETF not quite right
To: Robert H. Kassel <sr.rob at MIT-SPEECH>
Cc: BUG-LISPM at MIT-AI
In-reply-to: The message of 26 Oct 83 15:07-EDT from Robert H. Kassel <sr.rob at MIT-SPEECH>

    Date: Wednesday, 26 October 1983, 14:07-EST
    From: Robert H. Kassel <sr.rob at MIT-SPEECH>
    In Release 4.5, Experimental LexiS 5.1, site configuration 65, on Lisp Machine Grizzly: (3600)

    (setf (send foo ':bar) baz barf) will not work.
    Why limit setf on flavors to working with messages that
    only accept one argument?  It seems like an easy fix.

I don't think this is as obvious an extension as you think it is.  That just means
that different people have different tastes.  Note, by the way, that this has nothing
whatever to do with flavors.  You might just as well have proposed:
    I have functions (foo x) and (sfoo x y z) and I would like to be able
    to write (setf (foo x) y z) to mean (sfoo x y z).

One very convincing reason not to change setf is that in Common Lisp setf accepts
multiple place,value pairs, by analogy with setq which accepts multiple variable,value
pairs.  It of course would not be possible to do this if the value was an arbitrary
number of forms.  Since we are trying to move toward the eventual goal of upward
compatibility with Common Lisp, it does not make sense to put in extensions that we
will just have to take out again.

Summary: you're better off writing (send w :set-edges l t r b) and not trying to
get setf to help you for this particular case.
26-Oct-83 17:53:32-EDT,2778;000000000000
Date: Wednesday, 26 October 1983, 16:22-EST
From: Richard Mlynarik <Mly at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In System 97.20, CADR 1.0, ZMail 51.8, MIT-Specific 21.0, microcode 257,
ZM MIT, on Lisp Machine Two:


zmail...
Click right on select
Click on subset, to use filter
Click on new filter
lossage...
>>TRAP 16555 (TRANS-TRAP)
The instance variable ZWEI#:BASE-TICK is unbound in #<ZMAIL-WINDOW Zmail Window 4 1016764 exposed>.
Backtrace from the debugger:

(METHOD ZWEI#:DISPLAYER BASE-TICK) (P.C. = 23)
  (SELF is #<ZMAIL-WINDOW Zmail Window 4 1016764 exposed>)

 Arg 0 (IGNORE): BASE-TICK


(METHOD ZWEI#:NODE MODIFIED-P) (P.C. = 31)
  (SELF is #<NODE 17427456>)

 Arg 0 (OPERATION): MODIFIED-P


ZWEI#:BUFFER-MODIFIED-P (P.C. = 22)

 Arg 0 (BUFFER): #<NODE 17427456>


ZWEI#:UNDO-SAVE-NEW-SMALL-CHANGE (P.C. = 523)

 Arg 0 (BP1): ("" 0 NORMAL)
 Arg 1 (BP2): ("" 0 MOVES)
Local 0 (UNDO-STATUS): (#<NODE 17427456> NIL ("" 0 NORMAL) ("" 0 MOVES) ...)
Local 1 (BP1-INSIDE): NIL
Local 2 (BP2-INSIDE): NIL
Local 3 (LINE): NIL
Local 4 (END-LINE): NIL
Local 5 (ALIST): ((** 0 0) (** 0 0))
Local 6 (COUNT): 0
Local 7 (INDEX): 0


ZWEI#:DELETE-INTERVAL (P.C. = 117)

 Arg 0 (FROM-BP): ("" 0 NORMAL)
   --Defaulted args:--
 Arg 1 (TO-BP): ("" 0 MOVES)
 Arg 2 (IN-ORDER-P): NIL
Local 0 (KEPT-LINE): NIL
Local 1 (FROM-LINE): NIL
Local 2 (FROM-INDEX): NIL
Local 3 (TO-LINE): NIL
Local 4 (TO-INDEX): NIL
Local 5 (LINE-LENGTH): NIL
Local 6 (NDEL): NIL
Local 7 (FL): NIL
Local 8 (TL): NIL
Local 9: NIL
Local 10 (BP): NIL
Local 11 (I): NIL
Local 12 (TO-LENGTH): NIL
Local 13 (FTL): NIL
Local 14 (TFL): NIL
Local 15 (16B-P): NIL
Local 16 (CH): NIL
Local 17 (LINE): NIL
Local 18 (LINE-BEFORE): NIL
Local 19 (LINE-AFTER): NIL


Remainder of stack:

(METHOD ZWEI#:ZMAIL-FILTER-FRAME INITIALIZE) (P.C. = 175)
(METHOD ZWEI#:ZMAIL-FRAME SET-WINDOW-CONFIGURATION) (P.C. = 233)
ZWEI#:DEFINE-NEW-FILTER (P.C. = 106)
ZWEI#:GET-FILTER-FUNCTION-1 (P.C. = 600)
ZWEI#:GET-FILTER-FUNCTION (P.C. = 46)
ZWEI#:READ-SUBSET-ZMAIL-BUFFER (P.C. = 27)
ZWEI#:MENU-GET-ZMAIL-BUFFER-FOR-SELECTION (P.C. = 206)
ZWEI#:COM-ZMAIL-SELECT (P.C. = 62)
ZWEI#:COMMAND-EXECUTE (P.C. = 120)
ZWEI#:ZMAIL-COMMAND-EXECUTE (P.C. = 27)
(SELECT-METHOD ZWEI#:ZMAIL-COMMAND-LIST MENU) (P.C. = 32)
(METHOD ZWEI#:ZMAIL-FRAME PROCESS-SPECIAL-COMMAND) (P.C. = 25)
(METHOD ZWEI#:ZMAIL-COMMAND-LOOP-MIXIN COMMAND-LOOP) (P.C. = 256)
(INTERNAL (METHOD ZWEI#:ZMAIL-FRAME COMBINED COMMAND-LOOP) 0) (P.C. = 50)
GLOBAL:FUNCALL (P.C. = 25)
(METHOD ZWEI#:ZMAIL-COMMAND-LOOP-MIXIN AROUND COMMAND-LOOP) (P.C. = 57)
(METHOD ZWEI#:ZMAIL-FRAME COMBINED COMMAND-LOOP) (P.C. = 47)
ZWEI#:ZMAIL-PROCESS-TOP-LEVEL (P.C. = 115)
SI#:PROCESS-TOP-LEVEL (P.C. = 115)
26-Oct-83 19:05:42-EDT,328;000000000000
Received: from SCRC-AFGHAN by SCRC-TENEX with CHAOS; Wed 26-Oct-83 18:30:04-EDT
Date: Wednesday, 26 October 1983, 17:32-EST
From: Rebecca Waning <RSW@SCRC-VIXEN>
Subject: Magical properties of symbol ARRAY?
To: TIM@MIT-OZ, BUG-LISPM@MIT-OZ
In-reply-to: The message of 26 Oct 83 07:45-EST from Tim McNerney <TIM at OZ>


27-Oct-83 02:05:13-EDT,849;000000000000
Date: Thursday, 27 October 1983, 02:06-EDT
From: David Vinayak Wallace <GUMBY at MIT-OZ>
Subject: keys, documentation
To: BUG-lispm at MIT-OZ

In Release 5.0 [GC'd Beta Test], on Lisp Machine Keith Moon (3600):

1> Somehow, under rel 5, key bindings are completely screwed up, at
least on this machine.  local is function, backspace is |, ~ is `, etc.
Needless to say, this was a bit confusing at first.

2> Can some rel 5 documentation be put in sys:doc;?  We seem to have
none.

3> I tried to TERMINAL to PIG (to check out the supdup/telnet
smartness).  The machine wedged (run bar on, clock not updating, blinker
not blinking) and had to be warm-booted.  Warm boot said it was running
#<simple process Ether connect> I think -- ether something.  I didn't
see if this was repeatable because warm-booting takes so long.

david
27-Oct-83 08:57:23-EDT,885;000000000000
Received: from SCRC-YAMASKA by SCRC-QUABBIN with CHAOS; Thu 27-Oct-83 08:58:15-EDT
Date: Thu, 27 Oct 83 08:57 EDT
From: Charles Hornig <Hornig@SCRC-TENEX>
Subject: keys, documentation
To: David Vinayak Wallace <GUMBY@MIT-AI>, BUG-lispm@MIT-AI
In-reply-to: The message of 27 Oct 83 02:06-EDT from David Vinayak Wallace <GUMBY at MIT-AI>
Message-ID: <831027085755.1.Hornig@SCRC-TENEX>

    Date: Thursday, 27 October 1983, 02:06-EDT
    From: David Vinayak Wallace <GUMBY at MIT-OZ>
    In Release 5.0 [GC'd Beta Test], on Lisp Machine Keith Moon (3600):

    1> Somehow, under rel 5, key bindings are completely screwed up, at
    least on this machine.  local is function, backspace is |, ~ is `, etc.
    Needless to say, this was a bit confusing at first.

(SI:SET-KEYBOARD-LAYOUT nil)

When the real release 5 goes out, the keys will be relabeled
appropriately.
27-Oct-83 12:51:01-EDT,1215;000000000000
Received: from SCRC-CHARLES by SCRC-QUABBIN with CHAOS; Thu 27-Oct-83 12:52:06-EDT
Date: Thursday, 27 October 1983, 11:51-EST
From: David C. Plummer <DCP at SCRC-QUABBIN>
Subject: keys, documentation
To: Hornig at SCRC-TENEX, GUMBY at MIT-AI, BUG-lispm at MIT-AI
In-reply-to: <831027085755.1.Hornig@SCRC-TENEX>

    Date: Thu, 27 Oct 83 08:57 EDT
    From: Charles Hornig <Hornig@SCRC-TENEX>
	Date: Thursday, 27 October 1983, 02:06-EDT
	From: David Vinayak Wallace <GUMBY at MIT-OZ>
	In Release 5.0 [GC'd Beta Test], on Lisp Machine Keith Moon (3600):

	1> Somehow, under rel 5, key bindings are completely screwed up, at
	least on this machine.  local is function, backspace is |, ~ is `, etc.
	Needless to say, this was a bit confusing at first.

Actually, Rel 5 is correct and the keyboard is screwed up.  To get
around this hardware lossage there is, as Hornig says, 

    (SI:SET-KEYBOARD-LAYOUT nil)
and
    When the real release 5 goes out, the keys will be relabeled
    appropriately.
will fix the hardware.

p.s., some of us use the new layout despite the disassociation between
keytops and characters.  It's confusing at first, but at least it puts ~
as a shifted cahracter.
27-Oct-83 17:23:52-EDT,1316;000000000000
Received: from SCRC-BLACKSTONE by SCRC-TENEX with CHAOS; Thu 27-Oct-83 13:31:09-EDT
Date: Thursday, 27 October 1983, 13:33-EDT
From: Neal Feinberg <Feinberg@SCRC-VIXEN>
Subject: keys, documentation
To: GUMBY@MIT-OZ, BUG-lispm@MIT-OZ
In-reply-to: The message of 27 Oct 83 02:06-EDT from David Vinayak Wallace <GUMBY at MIT-AI>


    Date: Thursday, 27 October 1983, 02:06-EDT
    From: David Vinayak Wallace <GUMBY at MIT-OZ>

    In Release 5.0 [GC'd Beta Test], on Lisp Machine Keith Moon (3600):

    1> Somehow, under rel 5, key bindings are completely screwed up, at
    least on this machine.  local is function, backspace is |, ~ is `, etc.
    Needless to say, this was a bit confusing at first.

    2> Can some rel 5 documentation be put in sys:doc;?  We seem to have
    none.

As soon as we have the docementation together, we will send it out.

    3> I tried to TERMINAL to PIG (to check out the supdup/telnet
    smartness).  The machine wedged (run bar on, clock not updating, blinker
    not blinking) and had to be warm-booted.  Warm boot said it was running
    #<simple process Ether connect> I think -- ether something.  I didn't
    see if this was repeatable because warm-booting takes so long.

    david

Please try again.  I have no trouble connecting to PIG.
27-Oct-83 20:17:04-EDT,1973;000000000000
Date: Thursday, 27 October 1983, 20:18-EDT
From: Daniel Weise <DANIEL at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In Release 5.0 [GC'd Beta Test], on Lisp Machine Keith Moon (3600):

I logged in, it went to create a user object for me, and then when I moused QUIT (after saving)
on the menu creating me, it exited and this happened.

>>Error: The object #<NAMESPACE-EDITOR-FRAME Namespace Editor 1 340000 deexposed> received a :IDLE-P message, which went unclaimed.
         The rest of the message was ()
While in the function (:INTERNAL TV:EDIT-NAMESPACE-OBJECT 0)  PROCESS-WAIT  TV:EDIT-NAMESPACE-OBJECT

(:INTERNAL TV:EDIT-NAMESPACE-OBJECT 0):  (P.C. = 4)
   Arg 0 (EDITOR): #<NAMESPACE-EDITOR-FRAME Namespace Editor 1 340000 deexposed>

PROCESS-WAIT:  (P.C. = 10)
   Arg 0 (WHOSTATE): "Finish Namespace Edit"
   Arg 1 (FUNCTION): #<DTP-COMPILED-FUNCTION (:INTERNAL TV:EDIT-NAMESPACE-OBJECT 0) 46360476>
   Rest arg (ARGUMENTS): (#<NAMESPACE-EDITOR-FRAME Namespace Editor 1 340000 deexposed>)

TV:EDIT-NAMESPACE-OBJECT:  (P.C. = 102)
   Arg 0 (CLASS): :USER
   Arg 1 (NAME): "DANIEL"
   Rest arg: (:CREATE T :PROPERTY-LIST (:PERSONAL-NAME "Daniel Weise" :LISPM-NAME "DANIEL" :HOME-HOST #<TOPS20-HOST OZ 24406356> :LOGIN-NAME (("DANIEL" #<TOPS20-HOST OZ 24406356>)) :MAIL-ADDRESS ("DANIEL" #<TOPS20-HOST OZ 24406356>)) :WAIT T)

SI:OBJECTIFY-USER:  (P.C. = 60)

LOGIN:  (P.C. = 504)
   Arg 0 (USER-NAME): DANIEL
   Rest arg: NIL

SI:*EVAL:  (P.C. = 370)
   Arg 0 (FORM): (LOGIN (QUOTE DANIEL))

SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 200)
   Rest arg: (:NAME "Lisp Top Level in Lisp Listener 1" :ABORTED-FUNCTION NIL :BEFORE-PROMPT-FUNCTION NIL :READ-FUNCTION NIL :EVAL-FUNCTION NIL ...)

SI:LISP-COMMAND-LOOP:  (P.C. = 115)
   Arg 0 (STREAM): #<LISP-LISTENER Lisp Listener 1 2500000 exposed>
   Rest arg: (:NAME "Lisp Top Level in Lisp Listener 1")

Rest of stack:
SI:LISP-TOP-LEVEL1:  (P.C. = 22)
SI:LISP-TOP-LEVEL:  (P.C. = 7)
27-Oct-83 20:24:43-EDT,343;000000000000
Date: Thursday, 27 October 1983, 20:25-EDT
From: Daniel Weise <DANIEL at MIT-OZ>
Subject: chaos net misnamed.
To: BUG-LISPM at MIT-OZ

In Release 5.0 [GC'd Beta Test], on Lisp Machine Keith Moon (3600):

When I system T to OZ the bottom line says

Terminal 1 (SUPDUP) -- OZ  on SCRC|CHAOS

Uh, when do I start receiving paychecks?
27-Oct-83 20:34:12-EDT,841;000000000000
Received: from SCRC-ASSABET by SCRC-TENEX with CHAOS; Thu 27-Oct-83 20:29:21-EDT
Date: Thu, 27 Oct 83 20:32 EDT
From: Mike McMahon <MMcM@SCRC-TENEX>
To: DANIEL@MIT-OZ
Cc: BUG-LISPM@MIT-OZ
In-reply-to: The message of 27 Oct 83 20:18-EDT from Daniel Weise <DANIEL at MIT-AI>
Message-ID: <831027203224.6.MMcM@SCRC-TENEX>

    Date: Thursday, 27 October 1983, 20:18-EDT
    From: Daniel Weise <DANIEL at MIT-OZ>
    In Release 5.0 [GC'd Beta Test], on Lisp Machine Keith Moon (3600):

    I logged in, it went to create a user object for me, and then when I moused QUIT (after saving)
    on the menu creating me, it exited and this happened.

    >>Error: The object #<NAMESPACE-EDITOR-FRAME Namespace Editor 1 340000 deexposed> received a :IDLE-P message, which went unclaimed.
243.274.  Hopefully making its way to you soon.
27-Oct-83 20:55:16-EDT,286;000000000000
Date: Thursday, 27 October 1983, 20:55-EDT
From: Daniel Weise <DANIEL at MIT-OZ>
Subject: When I do M-X select system as tags table
To: BUG-LISPM at MIT-OZ

In Release 5.0 [GC'd Beta Test], on Lisp Machine Keith Moon (3600):

the default is G0231.  This is not very meaningful.
27-Oct-83 21:08:43-EDT,795;000000000000
Date: Thursday, 27 October 1983, 21:09-EDT
From: Daniel Weise <DANIEL at MIT-OZ>
Subject: (re)moved functionality?
To: BUG-LISPM at MIT-OZ

In Release 5.0 [GC'd Beta Test], on Lisp Machine Keith Moon (3600):

We don't have any documentation here which might otherwise answer my questions...

Question 1:

In the past when I mistyped a function name to meta-. I could do C-M-Y to 
edit the function name.  Now C-M-Y causes the defaulted filename to be 
edited.  Where did the old functionality go?  How can I make it the default?
In all the time of doing meta-. I have never typed in a filename to the question
asked by mistyping.

Question 2:

MIT-PREP, a unix, has a supdup server but the system-t guy insists on using
telnet protocol.  How do I inform it to use supdup?

27-Oct-83 21:37:42-EDT,698;000000000000
Received: from SCRC-AMAZON by SCRC-QUABBIN with CHAOS; Thu 27-Oct-83 21:38:00-EDT
Date: Thursday, 27 October 1983, 21:37-EDT
From: Joseph R. Goldstone <joseph at SCRC-QUABBIN>
Subject: chaos net misnamed.
To: Daniel Weise <DANIEL at MIT-AI>
Cc: BUG-LISPM at MIT-AI
In-reply-to: The message of 27 Oct 83 20:25-EDT from Daniel Weise <DANIEL at MIT-AI>

    Date: Thursday, 27 October 1983, 20:25-EDT
    From: Daniel Weise <DANIEL at MIT-OZ>
    In Release 5.0 [GC'd Beta Test], on Lisp Machine Keith Moon (3600):

    When I system T to OZ the bottom line says

    Terminal 1 (SUPDUP) -- OZ  on SCRC|CHAOS

    Uh, when do I start receiving paychecks?

The check is in the mail.
27-Oct-83 21:47:09-EDT,582;000000000000
Date: Thursday, 27 October 1983, 21:47-EDT
From: Daniel Weise <DANIEL at MIT-AI>
Subject: supdup vs. telnet
To: BUG-LISPM at MIT-AI

In Release 5.0 [GC'd Beta Test], on Lisp Machine Keith Moon (3600):

it seems that TERMINAL first tries supdup then telnet protocol.  When
machines aren't fast enough telnet connections end up happening.  
This faked me out with prep and this 3600 will establish a supdup
connection with prep after all.  When OZ's load average gets above 
9 or so one gets telnet more often than supdup.  There really should
be some control over this.
27-Oct-83 22:04:20-EDT,689;000000000000
Received: from SCRC-NEPONSET by SCRC-TENEX with CHAOS; Thu 27-Oct-83 22:02:13-EDT
Date: Thu, 27 Oct 83 22:05 EDT
From: Mike McMahon <MMcM@SCRC-TENEX>
Subject: When I do M-X select system as tags table
To: DANIEL@MIT-OZ
Cc: BUG-LISPM@MIT-OZ
In-reply-to: The message of 27 Oct 83 20:55-EDT from Daniel Weise <DANIEL at MIT-AI>
Message-ID: <831027220510.1.MMcM@SCRC-TENEX>

    Date: Thursday, 27 October 1983, 20:55-EDT
    From: Daniel Weise <DANIEL at MIT-OZ>
    In Release 5.0 [GC'd Beta Test], on Lisp Machine Keith Moon (3600):

    the default is G0231.  This is not very meaningful.
You were looking at a file that contains the defsystem, right?
Fixed in the source.
28-Oct-83 02:02:01-EDT,661;000000000000
Date: Friday, 28 October 1983, 02:02-EDT
From: Daniel Huttenlocher <dph at MIT-OZ>
Subject: namespaciness
To: BUG-LISPM at MIT-OZ

In Release 5.0 [GC'd Beta Test], on Lisp Machine Elvis Presley (3600):

Trying to connect to CIT-VAX timed out trying to use MC and ML as TCP
gateways to CIT-CS-GW.  What is strange is that message says MC and ML
were both tried at chaos address 1440 which is MC's address.  The
namespace seems to have the correct address for ML, however.

Why are we (MIT) on the SCRC chaosnet, as evidenced by hosts named
things like SCRC|MC?

Also, this machine seem to connect to PTR at least once per network
transaction...
28-Oct-83 02:32:33-EDT,1033;000000000000
Received: from SCRC-HARLEM by SCRC-QUABBIN with CHAOS; Fri 28-Oct-83 02:34:03-EDT
Date: Friday, 28 October 1983, 02:34-EDT
From: Joseph R. Goldstone <joseph at SCRC-QUABBIN>
Subject: namespaciness
To: Daniel Huttenlocher <dph at MIT-AI>
Cc: bug-lispm at MIT-AI
In-reply-to: The message of 28 Oct 83 02:02-EDT from Daniel Huttenlocher <dph at MIT-AI>

    Date: Friday, 28 October 1983, 02:02-EDT
    From: Daniel Huttenlocher <dph at MIT-OZ>
    In Release 5.0 [GC'd Beta Test], on Lisp Machine Elvis Presley (3600):

    Why are we (MIT) on the SCRC chaosnet, as evidenced by hosts named
    things like SCRC|MC?

This is because we decided it would be easier to service MIT if it was part of Symbolics.
Gray will announce the purchase Monday, and should be out of his office by the end of the
week.  It's been a real pain; you should see how much hassle the people in 261 Vassar have
had with the movers.

We're going to need to get another espresso machine for bldg. 3.  Where did you get yours?

-- joseph
28-Oct-83 10:57:39-EDT,1078;000000000000
Received: from SCRC-YAMASKA by SCRC-QUABBIN with CHAOS; Fri 28-Oct-83 10:58:46-EDT
Date: Fri, 28 Oct 83 10:58 EDT
From: Charles Hornig <Hornig@SCRC-TENEX>
Subject: chaos net misnamed.
To: Daniel Weise <DANIEL@MIT-AI>, BUG-LISPM@MIT-AI
In-reply-to: The message of 27 Oct 83 20:25-EDT from Daniel Weise <DANIEL at MIT-AI>
Message-ID: <831028105827.1.Hornig@SCRC-TENEX>

    Date: Thursday, 27 October 1983, 20:25-EDT
    From: Daniel Weise <DANIEL at MIT-OZ>
    In Release 5.0 [GC'd Beta Test], on Lisp Machine Keith Moon (3600):

    When I system T to OZ the bottom line says

    Terminal 1 (SUPDUP) -- OZ  on SCRC|CHAOS

    Uh, when do I start receiving paychecks?
The problem is that MIT and SCRC (and SPA etc.) all share a CHAOS
network.  Since we wrote the software, we made SCRC|CHAOS be its primary
name.  MIT|CHAOS etc. are nicknames.  The display programs display the
primary name.  You can get rid of this unsightly display by changing the
primary name.  How?  I don't know.  Sometimes I think that Lisp Machines
are getting too smart for us.
28-Oct-83 11:01:25-EDT,1172;000000000000
Received: from SCRC-CHARLES by SCRC-QUABBIN with CHAOS; Fri 28-Oct-83 11:01:13-EDT
Date: Friday, 28 October 1983, 11:00-EDT
From: David C. Plummer <DCP at SCRC-QUABBIN>
Subject: namespaciness
To: dph at MIT-OZ, BUG-LISPM at MIT-OZ
In-reply-to: The message of 28 Oct 83 02:02-EDT from Daniel Huttenlocher <dph at MIT-OZ>

    Date: Friday, 28 October 1983, 02:02-EDT
    From: Daniel Huttenlocher <dph at MIT-OZ>
    In Release 5.0 [GC'd Beta Test], on Lisp Machine Elvis Presley (3600):

    Trying to connect to CIT-VAX timed out trying to use MC and ML as TCP
    gateways to CIT-CS-GW.  What is strange is that message says MC and ML
    were both tried at chaos address 1440 which is MC's address.  The
    namespace seems to have the correct address for ML, however.

This is a modularity problem.  The connection goes into the error
instance, but gets later reused.  When the error instance reports, it
gets the host from the host instance variable but the chaos address from
the (now-invalid) connection.  I got around this in the source until we
have a better grasp on how to handle the general problem.  I'll patch it
when I run Rel5 again.
28-Oct-83 11:24:24-EDT,1182;000000000000
Received: from SCRC-YANGTZE by SCRC-QUABBIN with CHAOS; Fri 28-Oct-83 11:25:34-EDT
Date: Friday, 28 October 1983, 11:25-EDT
From: Carl W. Hoffman <CWH at SCRC-TENEX>
Subject: (re)moved functionality?
To: DANIEL at MIT-AI, BUG-LISPM at MIT-AI
In-reply-to: The message of 27 Oct 83 21:09-EDT from Daniel Weise <DANIEL at MIT-AI>

    Date: Thursday, 27 October 1983, 21:09-EDT
    From: Daniel Weise <DANIEL at MIT-OZ>
    In Release 5.0 [GC'd Beta Test], on Lisp Machine Keith Moon (3600):

    We don't have any documentation here which might otherwise answer my questions...

    Question 1:

    In the past when I mistyped a function name to meta-. I could do C-M-Y to 
    edit the function name.  Now C-M-Y causes the defaulted filename to be 
    edited.  Where did the old functionality go?  How can I make it the default?
    In all the time of doing meta-. I have never typed in a filename to the question
    asked by mistyping.

Type m-Y to get the old functionality.  Meta-point asks you for a
filename so that you can edit definitions which are not known about by
the running world.  c-m-Y allows you to yank the displayed default for
editing.
28-Oct-83 12:36:47-EDT,3639;000000000000
Received: from MIT-MOON by SCRC-QUABBIN with CHAOS; Fri 28-Oct-83 12:36:45-EDT
Date: Friday, 28 October 1983, 12:36-EDT
From: Joseph R. Goldstone <joseph at SCRC-QUABBIN>
Subject: Keyboard Wars '83, contd.
To: BUG-LISPM at MIT-AI

In Release 5.0 [GC'd Beta Test rev 2], on Lisp Machine Keith Moon (3600):

there's no creamsicle font over here, so i can't get to my humor mailbox AT ALL.
perhaps it should just mark the message as undisplayable and think about the
rest of the stuff in that mailbox...

>>Break: 
While in the function PROCESS-WAIT  TV:KBD-IO-BUFFER-GET  (:METHOD TV:STREAM-MIXIN :ANY-TYI)

PROCESS-WAIT:
   Arg 0 (WHOSTATE): "Tyi"
   Arg 1 (FUNCTION): #<DTP-COMPILED-FUNCTION (:INTERNAL TV:KBD-IO-BUFFER-GET 0) 20753311>
   Rest arg (ARGUMENTS): (#<IO-BUFFER 13563403: empty, State: NIL>)

TV:KBD-IO-BUFFER-GET:  (P.C. = 135)
   Arg 0 (BUFFER): #<IO-BUFFER 13563403: empty, State: NIL>
   --Defaulted args:--
   Arg 1 (NO-HANG-P): NIL
   Arg 2 (WHOSTATE): "Tyi"

(:METHOD TV:STREAM-MIXIN :ANY-TYI):  (P.C. = 67)
   Arg 0 (SELF): #<BACKGROUND-LISP-INTERACTOR Background Lisp Interactor 1 3310770 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:STREAM-MIXIN -- 14. IV's, 0. FL's 13556114>
   Arg 2 (OPERATION): :ANY-TYI
   --Defaulted args:--
   Arg 3 (IGNORE): NIL

(:DEFUN-METHOD TV:RH-TYI):  (P.C. = 12)
   Arg 0 (SELF): #<BACKGROUND-LISP-INTERACTOR Background Lisp Interactor 1 3310770 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:STREAM-MIXIN -- 14. IV's, 0. FL's 13556114>
   Arg 2 (TOP-LEVEL?): T

(:DEFUN-METHOD TV:ALTERNATE-RUBOUT-HANDLER-TYI):  (P.C. = 45)
   Arg 0 (SELF): #<BACKGROUND-LISP-INTERACTOR Background Lisp Interactor 1 3310770 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:STREAM-MIXIN -- 14. IV's, 0. FL's 13556114>
   Arg 2 (RUBBED-OUT-SOME?): NIL

TV:ALTERNATE-RUBOUT-HANDLER-TYI:  (P.C. = 12)
   Rest arg (ARGS): (NIL)

TV:RUBOUT-HANDLER-INVOKE:  (P.C. = 11)
   Arg 0 (OPERATION): TYI
   Rest arg (ARGS): (NIL)

(:METHOD TV:STREAM-MIXIN :ANY-TYI):  (P.C. = 43)
   Arg 0 (SELF): #<BACKGROUND-LISP-INTERACTOR Background Lisp Interactor 1 3310770 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:STREAM-MIXIN -- 14. IV's, 0. FL's 13556114>
   Arg 2 (OPERATION): :ANY-TYI
   Arg 3 (IGNORE): NIL

Rest of stack:
(:METHOD SI:VANILLA-FLAVOR :SEND-IF-HANDLES):  (P.C. = 41)
SI:READ-DELIMITED-STRING-INTERNAL:  (P.C. = 14)
(:DEFUN-METHOD TV:RUBOUT-HANDLER-READ):  (P.C. = 61)
(:METHOD TV:STREAM-MIXIN :RUBOUT-HANDLER):  (P.C. = 72)
READ-DELIMITED-STRING:  (P.C. = 111)
READLINE:  (P.C. = 20)
(:PROPERTY :PATHNAME PROMPT-AND-READ):  (P.C. = 17)
PROMPT-AND-READ:  (P.C. = 135)
FS:PROMPT-FOR-NEW-PATHNAME:  (P.C. = 14)
(:METHOD FS:MULTIPLE-FILE-NOT-FOUND :CASE :PROCEED :NEW-PATHNAME):  (P.C. = 11)
(:METHOD FS:MULTIPLE-FILE-NOT-FOUND :COMBINED :PROCEED):  (P.C. = 17)
FS:MULTIPLE-FILE-NOT-FOUND-HANDLER:  (P.C. = 5)
(:METHOD DBG:BIND-HANDLER :HANDLE-CONDITION):  (P.C. = 43)
(:METHOD CONDITION :SIGNAL):  (P.C. = 114)
(:METHOD CONDITION :COMBINED :SIGNAL):  (P.C. = 21)
SIGNAL:  (P.C. = 10)
FED:FIND-AND-LOAD-BFD:  (P.C. = 116)
FED:FIND-AND-LOAD-FONT:  (P.C. = 10)
ZWEI:GET-FONT-ALIST-ATTRIBUTE:  (P.C. = 35)
(:METHOD ZWEI:MSG-BUFFER :AFTER :PARSE-MSG):  (P.C. = 10)
(:METHOD ZWEI:BABYL-BUFFER :COMBINED :PARSE-MSG):  (P.C. = 23)
ZWEI:ASSURE-MSG-PARSED:  (P.C. = 65)
ZWEI:ZMAIL-BACKGROUND-PARSE-MSGS:  (P.C. = 74)
ZWEI:ZMAIL-BACKGROUND-PERFORM:  (P.C. = 20)
ZWEI:ZMAIL-BACKGROUND-LOOP-BODY:  (P.C. = 37)
ZWEI:ZMAIL-BACKGROUND:  (P.C. = 32)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
28-Oct-83 12:57:32-EDT,1242;000000000000
Mail-From: BRD created at 28-Oct-83 12:55:19
Date: 28 Oct 1983  12:55 EDT (Fri)
Message-ID: <BRD.11963126267.BABYL@MIT-OZ>
From: Bruce R. Donald <BRD@MIT-OZ>
To:   bug-symbolics-software@MIT-OZ
Subject:   Compiling a file with fonts & local (DECLARE (SPECIAL...


The file OZ:PS:<BRD>BUG.LISP compiles fine in a ZWEI buffer,
but when compiled with COMPILER:COMPILE-FILE results in
the following errors (and throws you into the error handler).
I suspect it is because COMPILER:COMPILE-FILE is not as smart about
fonts as ZWEI.

On ROBOT-1, band >WORLD2.LOAD, release 4.4, Site Version 68.

(compiler:compile-file "ps:<brd>bug.lisp")
For Function USING-THEN-CLEARING-HASH-TABLE
  While compiling ||:
  The variable || is unknown and has been declared SPECIAL
For Function SET-DIF
  While compiling ||:
  The variable || is unknown and has been declared SPECIAL
  While compiling DIF:
  Lexical scoping not implemented for the variable DIF
  While compiling (SI:DISPLACED (PUSH KEY DIF) (SETF DIF (CONS KEY DIF))):
  Lexical scoping not implemented for the variable DIF
  While compiling TABLE:
  Lexical scoping not implemented for the variable TABLE
Back to Lisp Top Level in Lisp Listener 1

(dribble-end)
28-Oct-83 13:38:32-EDT,2566;000000000000
Received: from SCRC-YAMASKA by SCRC-QUABBIN with CHAOS; Fri 28-Oct-83 13:31:28-EDT
Date: Fri, 28 Oct 83 13:31 EDT
From: Charles Hornig <Hornig@SCRC-TENEX>
Subject: Bug in Serial Streams
To: Robert H. Kassel <sr.rob@MIT-SPEECH>, Hornig@SCRC-TENEX,
    BUG-LISPM@MIT-OZ
In-reply-to: The message of 15 Oct 83 12:28-EDT from Robert H. Kassel <sr.rob at MIT-SPEECH>,
             The message of 15 Oct 83 13:14-EDT from Robert H. Kassel <sr.rob at MIT-SPEECH>
Message-ID: <831028133110.8.Hornig@SCRC-TENEX>

    Date: Saturday, 15 October 1983, 12:28-EDT
    From: Robert H. Kassel <sr.rob at MIT-SPEECH>
	Date: Fri, 14 Oct 83 08:05 EDT
	From: Charles Hornig <Hornig@SCRC.SCRC>
	    Date: Thursday, 13 October 1983, 13:13-EDT
	    From: Robert H. Kassel <sr.rob at MIT-SPEECH>
	    In Release 4.5, site configuration 65, on Lisp Machine Grizzly: (3600)

	    While trying to create a serial stream.

	    >>Error: FEP did not respond to an Add-FEP-Channel command of type SERIAL to unit 1.
	    While in the function SI:FEP-CHANNEL-ALLOCATE  (DEFUN-METHOD SI:SERIAL-GET-CHANNELS)  (METHOD SI:BASIC-SERIAL-STREAM OPEN)

	Does this happen repeatably?

    It seems to happen rather infrequently and randomly.  Once it has happened,
    the serial stream seems to be wedged, i.e. all attempts to make a stream
    to that port signal an error.  I never tried opening a stream to a different
    port, but if I can get it to wedge again, I will.

    One important note:  my application is using port 1 and allocates and de-allocates
    the port by using a with-open-stream around short segments of code.  You may look
    at the hack by reading the file SPEECH:PS:<SR.ROB>SPEAK.LISP

					    ROB


    Date: Saturday, 15 October 1983, 13:14-EDT
    From: Robert H. Kassel <sr.rob at MIT-SPEECH>

    I have been able to repeat this!

    While in the editor, evaluate something to send lots of data to 
    a serial stream.  My sends involved many opens and closes so FEP
    chanels were continuously being opend and closed.

    During the sending, type c-m-suspend.  At the propmt type abort.
    You will be returned to top level.

    Now evaluate something to send to the port again.  You will get 
    a serial unit lock.  Type c-m-suspend again.  At the prompt, type
    s-b to close and abort the unit.  The error will occur.

    If I can be of any other help, please let me know.

				    ROB

I don't seem to be able to make this happen after the changes in
243.276.  It looks like it's been fixed.
28-Oct-83 14:54:30-EDT,232;000000000000
Mail-From: RMS created at 28-Oct-83 14:48:27
Date: Fri 28 Oct 83 14:48:25-EDT
From: RMS@MIT-OZ
Subject: namespaciness
To: bug-lispm@MIT-OZ

I warned you all, but you didn't listen.  Have fun being part of Symbolics.
-------
28-Oct-83 15:35:58-EDT,303;000000000000
Mail-From: NIS created at 28-Oct-83 15:19:10
Date: Fri 28 Oct 83 15:19-EDT
From: H. Keith Nishihara <NIS@MIT-OZ>
Subject: micro-code-symbol-area-size is unbound
To: bug-lispm@MIT-OZ

in system 97.20 microcode 257
while running ua:add-assembly
error came from cons-lap-allocate-arrays

-keith
29-Oct-83 04:12:39-EDT,405;000000000000
Date: Saturday, 29 October 1983, 05:17-EDT
From: Christopher C. Stacy <CStacy at MIT-MC>
To: BUG-LISPM at MIT-AI

In Release 5.0 [GC'd Beta Test rev 2], on Lisp Machine Keith Moon (3600):

>>Error: The host SU-AI (of system type WAITS) cannot be a file computer.
While in the function FS:ADD-FILE-COMPUTER  FS:GET-PATHNAME-HOST  FS:PARSE-PATHNAME-FIND-COLON

Why not?  I think it has TCP/FTP.
29-Oct-83 04:24:56-EDT,349;000000000000
Date: Saturday, 29 October 1983, 05:30-EDT
From: Christopher C. Stacy <CStacy at MIT-MC>
Subject: FTP
To: BUG-LISPM at MIT-AI

In Release 5.0 [GC'd Beta Test rev 2], on Lisp Machine Keith Moon (3600):

It looks like no Unixes on the Internet implement "MODE B" in TCP/FTP.
Ya know, this Dired-ing all over the network is really pretty fun.
29-Oct-83 14:57:37-EDT,862;000000000000
Received: from SCRC-CONCORD by SCRC-QUABBIN with CHAOS; Sat 29-Oct-83 14:58:21-EDT
Date: Sat, 29 Oct 83 13:57 EDT
From: Charles Hornig <Hornig@SCRC-TENEX>
Subject: WAITS pathnames
To: Christopher C. Stacy <CStacy@MIT-MC>, BUG-LISPM@MIT-OZ
In-reply-to: The message of 29 Oct 83 05:17-EDT from Christopher C. Stacy <CStacy at MIT-MC>
Message-ID: <831029135733.1.Hornig@SCRC-TENEX>

    Date: Saturday, 29 October 1983, 05:17-EDT
    From: Christopher C. Stacy <CStacy at MIT-MC>
    In Release 5.0 [GC'd Beta Test rev 2], on Lisp Machine Keith Moon (3600):

    >>Error: The host SU-AI (of system type WAITS) cannot be a file computer.
    While in the function FS:ADD-FILE-COMPUTER  FS:GET-PATHNAME-HOST  FS:PARSE-PATHNAME-FIND-COLON

    Why not?  I think it has TCP/FTP.

Because no one ever tought the system how to parse WAITS file names.
29-Oct-83 15:33:40-EDT,1140;000000000000
Date: 29 October 1983 15:14 EDT
From: Alan Bawden <ALAN @ MIT-MC>
Subject:  Oh yeah...
To: BUG-LISPM @ MIT-MC

joseph reminds me of a couple of complaints about TV:EDIT-NAMESPACE-OBJECT
that I forgot in my last message.  I'm sure these are all obvious but just
for the record:

Why is it in the TV package?!

The prompts it gives are worthless.  I would have never figured several
things out (having never seen anything but a completely empty entry)
without an experienced user in the room.  WOrds like "Token", "Pair", etc,
are less descriptive than you want.  Tell an experienced lisp user to type
a pair, and you have to expect him to try "(foo bar)" or perhaps even "(foo
. bar)".  "Type a token" is a little vague when what you mean is "Type your
username", or something like that...

The inquir programs around MIT all support separate group and relation
fields.  This frob appears to have only one field of that general nature.
It's called something like Affiliation or something else that leaves it's
intent pretty vague.  If we can't have the familiar two, then it would be
less confusing to just flush it.
29-Oct-83 16:22:22-EDT,608;000000000000
Mail-From: DCB.TECH created at 29-Oct-83 16:21:36
Date: Sat, 29 Oct 1983  16:21 EDT
Message-ID: <DCB.TECH.11963425969.BABYL@MIT-OZ>
From: Rich $alz <DCB.TECH@MIT-OZ>
To:   info-lispm@MIT-OZ
Cc:   dcb.tech@MIT-OZ
Subject: lispm fonts

The company I work for is interested in licensing/snarfing the fonts
used in the lisp machine for use in their own display system and laser
printer.  (We make a text editing/composition system for typesetters.)
It's for incorporation into a commercial product.  Anyone help me out
with pointers and/or info?  Best bet: 938-8095, MWF 9-1.
 tnx much,
	rich$alz
29-Oct-83 16:51:13-EDT,1477;000000000000
Received: from SCRC-YANGTZE by SCRC-TENEX with CHAOS; Sat 29-Oct-83 16:41:48-EDT
Date: Saturday, 29 October 1983, 16:44-EDT
From: James E. Kulp <jek@SCRC-VIXEN>
Subject: Oh yeah...
To: Alan Bawden <ALAN@MIT-MC>
Cc: BUG-LISPM@MIT-MC
In-reply-to: The message of 29 Oct 83 15:14-EDT from Alan Bawden <ALAN at MIT-MC>

    Date: 29 October 1983 15:14 EDT
    From: Alan Bawden <ALAN @ MIT-MC>
    joseph reminds me of a couple of complaints about TV:EDIT-NAMESPACE-OBJECT
    that I forgot in my last message.  I'm sure these are all obvious but just
    for the record:

    Why is it in the TV package?!
Good question.
    The prompts it gives are worthless.  I would have never figured several
    things out (having never seen anything but a completely empty entry)
    without an experienced user in the room.  WOrds like "Token", "Pair", etc,
    are less descriptive than you want.  Tell an experienced lisp user to type
    a pair, and you have to expect him to try "(foo bar)" or perhaps even "(foo
    . bar)".  "Type a token" is a little vague when what you mean is "Type your
    username", or something like that...
This is because you are a very early recipient of this software and haven't
received the document that describes the network database and its notions
of data type, which must necessarily be system independent and not necessarily
transparently mappable into lisp.  And of course the prompts could indeed be
improved a bit...
29-Oct-83 19:33:35-EDT,595;000000000000
Date: Saturday, 29 October 1983, 18:34-EST
From: Bruce R. Donald <Brd at MIT-OZ>
Subject: M-. when function name is in a different font
To: BUG-symbolics-software at MIT-OZ

In Release 4.4, site configuration 68, on Lisp Machine Robot-1:

If the names of functions are in a different font, M-. has trouble
finding the function. It seems to resectionize the buffer and do a textual
search which wins most of the time but loses enough to qualify as a bug.
If you need an example file, see SRC:<BRD.6DOF>PLANNER.LISP.
(It can find the function if you take out all fonts and recompile).
30-Oct-83 16:29:48-EST,1413;000000000000
Received: from SCRC-CHARLES by SCRC-TENEX with CHAOS; Sun 30-Oct-83 16:24:15-EST
Date: Sunday, 30 October 1983, 16:23-EST
From: David C. Plummer <DCP@SCRC-TENEX>
Subject: namespaciness
To: DCP@SCRC-QUABBIN, dph@MIT-OZ, BUG-LISPM@MIT-OZ, Maint@SCRC-TENEX
In-reply-to: The message of 28 Oct 83 11:00-EDT from David C. Plummer <DCP at SCRC-QUABBIN>

    Date: Friday, 28 October 1983, 11:00-EDT
    From: David C. Plummer <DCP at SCRC-QUABBIN>
	Date: Friday, 28 October 1983, 02:02-EDT
	From: Daniel Huttenlocher <dph at MIT-OZ>
	In Release 5.0 [GC'd Beta Test], on Lisp Machine Elvis Presley (3600):

	Trying to connect to CIT-VAX timed out trying to use MC and ML as TCP
	gateways to CIT-CS-GW.  What is strange is that message says MC and ML
	were both tried at chaos address 1440 which is MC's address.  The
	namespace seems to have the correct address for ML, however.

    This is a modularity problem.  The connection goes into the error
    instance, but gets later reused.  When the error instance reports, it
    gets the host from the host instance variable but the chaos address from
    the (now-invalid) connection.  I got around this in the source until we
    have a better grasp on how to handle the general problem.  I'll patch it
    when I run Rel5 again.

243.286 (now that I'm allowed to use the new system again).  The patch
comment says it should wander up to MIT.
30-Oct-83 21:04:20-EST,685;000000000000
Date: Sunday, 30 October 1983, 22:08-EST
From: David Vinayak Wallace <GUMBY at MIT-OZ>
Subject: Overstrike in TERMINAL
To: BUG-LISPM at MIT-OZ

In Release 5.0 [GC'd Beta Test rev 2], on Lisp Machine Jim Morrison (3600):

It is very hard to use UNIX and MULTICS remotely on REL 5: you can't
tell the TERMINAL program to overstrike (<network> O under 4.5).

Also, If you type MULTICS to the prompt, you get multics, but the label
of the window is: "MIT-MULTICS (via ML on CHAOS or MC on CHAOS)" which
is a little unnerving.  I hope it knows where to send the packets!

Is there any way to spped up cold-booting?  It seems to spend a lot of
time logging into OZ.

david
30-Oct-83 21:31:42-EST,703;000000000000
Date: Sunday, 30 October 1983, 22:37-EST
From: David Vinayak Wallace <GUMBY at MIT-OZ>
Subject: telnet server under 4.5
To: BUG-LISPM at MIT-OZ

In Release 4.5, on Lisp Machine Buddy Holly (3600):

If I connect to buddy's telnet server and try to log in:  It takes a
long time to echo the closing ")".  this makes me think that the
connection crashes.  But eventually I types the ")" and the pasword
prompt.  If then types the following error message: "The object
#<TELENET-mumble> received a READ-CURSORPOS message which went
unclaimed.  The rest of the message was NIL.

Also, if there any way to get rubut handling to work when telnetting to
a lispm?  Typos are alwys fatal.

david
30-Oct-83 21:38:13-EST,2859;000000000000
Date: Sunday, 30 October 1983, 22:43-EST
From: David Vinayak Wallace <GUMBY at MIT-OZ>
Subject: its pathnames with the machine name at the end under 5.0
To: BUG-LISPM at MIT-OZ

In Release 5.0 [GC'd Beta Test rev 2], on Lisp Machine Jim Morrison (3600):

This always used to work:

The default pathname in zwei was "oz:ps:<tardis>lispm.init" I typed ^X^F
gumby;foo bar mc: and lost:

>>Error: "gumby;foo bar mc" is not a known file server host.
While in the function FS:GET-PATHNAME-HOST  FS:PARSE-PATHNAME-FIND-COLON  FS:PARSE-PATHNAME

FS:GET-PATHNAME-HOST:  (P.C. = 45)
   Arg 0 (HOST-NAME): "gumby;foo bar mc"
   --Defaulted args:--
   Arg 1 (NO-ERROR-P): NIL
   Arg 2 (NO-AUTO-ADD-P): NIL
   Local 3 (HOST): NIL

FS:PARSE-PATHNAME-FIND-COLON:  (P.C. = 31)
   Arg 0 (STRING): "gumby;foo bar mc:"

FS:PARSE-PATHNAME:  (P.C. = 245)
   Arg 0 (THING): "gumby;foo bar mc:"
   Arg 1 (WITH-RESPECT-TO): NIL
   Arg 2 (DEFAULTS): #<TOPS20-PATHNAME "OZ:PS:<TARDIS>LISPM.INIT">

FS:MERGE-PATHNAMES:  (P.C. = 10)
   Arg 0 (PATHNAME): "gumby;foo bar mc:"
   Arg 1 (DEFAULTS): #<TOPS20-PATHNAME "OZ:PS:<TARDIS>LISPM.INIT">
   Arg 2 (DEFAULT-VERSION): NIL

ZWEI:MAKE-DEFAULTED-PATHNAME:  (P.C. = 52)
   Arg 0 (STRING): "gumby;foo bar mc:"
   Arg 1 (DEFAULTS): ((#<TOPS20-HOST OZ 12276751> . #<TOPS20-PATHNAME "OZ:PS:<TARDIS>LISPM.INIT">) (#<LOGICAL-HOST SYS> . #<LOGICAL-PATHNAME "SYS: IO; FILE-ACCESS-PATHS.LISP.NEWEST">) (NIL . #<TOPS20-PATHNAME "OZ:PS:<TARDIS>LISPM.INIT">))
   Arg 2 (SPECIAL-TYPE): NIL
   Arg 3 (SPECIAL-VERSION): NIL
   Arg 4 (MERGE-IN-SPECIAL-VERSION): T

ZWEI:READ-DEFAULTED-PATHNAME:  (P.C. = 73)
   Arg 0 (PROMPT): "Find file:"
   Arg 1 (*READING-PATHNAME-DEFAULTS*-initialization): ((#<TOPS20-HOST OZ 12276751> . #<TOPS20-PATHNAME "OZ:PS:<TARDIS>LISPM.INIT">) (#<LOGICAL-HOST SYS> . #<LOGICAL-PATHNAME "SYS: IO; FILE-ACCESS-PATHS.LISP.NEWEST">) (NIL . #<TOPS20-PATHNAME "OZ:PS:<TARDIS>LISPM.INIT">))
   Arg 2 (*READING-PATHNAME-SPECIAL-TYPE*-initialization): NIL
   Arg 3 (*READING-PATHNAME-SPECIAL-VERSION*-initialization): NIL
   Arg 4 (*READING-PATHNAME-DIRECTION*-initialization): :NEW-OK
   --Defaulted args:--
   Arg 5 (MERGE-IN-SPECIAL-VERSION): T

ZWEI:COM-FIND-FILE:  (P.C. = 7)

ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
   Arg 0 (COMMAND): ZWEI:COM-FIND-FILE
   Arg 1 (CHAR): 506
   Arg 2 (PREFIX-CHAR): 530
   --Defaulted args:--
   Arg 3 (HOOK-LIST): NIL

Rest of stack:
ZWEI:MAKE-EXTENDED-COMMAND-INTERNAL:  (P.C. = 77)
SYS:CALL-FUNNY-FUNCTION:  (P.C. = 101)
Closure of ZWEI:MAKE-EXTENDED-COMMAND-INTERNAL:
ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 200)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 41)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
30-Oct-83 21:48:36-EST,665;000000000000
Received: from SCRC-YANGTZE by SCRC-QUABBIN with CHAOS; Sun 30-Oct-83 21:45:45-EST
Date: Sunday, 30 October 1983, 21:49-EST
From: Carl W. Hoffman <CWH at SCRC-TENEX>
Subject: telnet server under 4.5
To: GUMBY at MIT-OZ, BUG-LISPM at MIT-OZ
In-reply-to: The message of 30 Oct 83 22:37-EST from David Vinayak Wallace <GUMBY at MIT-OZ>

    Date: Sunday, 30 October 1983, 22:37-EST
    From: David Vinayak Wallace <GUMBY at MIT-OZ>
    In Release 4.5, on Lisp Machine Buddy Holly (3600):

    Also, if there any way to get rubut handling to work when telnetting to
    a lispm?  Typos are alwys fatal.

Not easily.  This is planned for a later release.
30-Oct-83 23:50:26-EST,1414;000000000000
Date: Sunday, 30 October 1983, 23:51-EST
From: Tim McNerney <TIM at MIT-OZ>
Subject: Zmail crash
To: BUG-LISPM at MIT-OZ

In Release 4.5, site configuration 57, on Lisp Machine Apiary-5:

Clicked on Zmail [Sort]
It wrote out the file and then died.

>>Trap: The first argument given to SYS:INTERNAL-=, NIL, was not a number.
While in the function ZWEI:MUST-REDISPLAY  (METHOD ZWEI:ZMAIL-FRAME COMMAND-LOOP)  (METHOD ZWEI:ZMAIL-FRAME COMBINED COMMAND-LOOP)

ZWEI:MUST-REDISPLAY:  (P.C. = 12)
   Arg 0 (WINDOW): #<WINDOW 52265661>
   Arg 1 (DEGREE): NIL
   --Defaulted args:--
   Arg 2 (LINE): NIL
   Arg 3 (INDEX): NIL
   Arg 4 (FOO): NIL
   Local 5 (W-DEGREE): 0

(METHOD ZWEI:ZMAIL-FRAME COMMAND-LOOP):  (P.C. = 176)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 3000143 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-FRAME -- 60. IV's, 20. FL's 62046770>
   Arg 2 (OPERATION): COMMAND-LOOP

(METHOD ZWEI:ZMAIL-FRAME COMBINED COMMAND-LOOP):  (P.C. = 45)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 3000143 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-FRAME -- 60. IV's, 20. FL's 62046770>
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

ZWEI:ZMAIL-PROCESS-TOP-LEVEL:  (P.C. = 56)
   Arg 0 (WINDOW): #<ZMAIL-FRAME Main Zmail Window 3000143 exposed>

SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
   --Defaulted args:--
   Arg 0 (IGNORE): NIL
31-Oct-83 00:28:21-EST,1953;000000000000
Date: Monday, 31 October 1983, 00:29-EST
From: David Vinayak Wallace <GUMBY at MIT-OZ>
Subject: more 5.0 pathname defaulting problems.
To: BUG-LISPM at MIT-OZ

In Release 5.0 [GC'd Beta Test rev 2], on Lisp Machine Jim Morrison (3600):

I did ^U^XD.  The default was OZ:PS:<GUMBY>*.*.*.  I typed "src:<gumby.lispm>

>>Error: "src" is not a known file server host.
While in the function FS:GET-PATHNAME-HOST  FS:PARSE-PATHNAME-FIND-COLON  FS:PARSE-PATHNAME

FS:GET-PATHNAME-HOST:  (P.C. = 45)
   Arg 0 (HOST-NAME): "src"
   --Defaulted args:--
   Arg 1 (NO-ERROR-P): NIL
   Arg 2 (NO-AUTO-ADD-P): NIL
   Local 3 (HOST): NIL

FS:PARSE-PATHNAME-FIND-COLON:  (P.C. = 31)
   Arg 0 (STRING): "src:<gumby.lispm>*.lisp.*"

FS:PARSE-PATHNAME:  (P.C. = 245)
   Arg 0 (THING): "src:<gumby.lispm>*.lisp.*"
   Arg 1 (WITH-RESPECT-TO): NIL
   Arg 2 (DEFAULTS): #<TOPS20-PATHNAME "OZ:PS:<GUMBY>*.*.*">

FS:MERGE-PATHNAMES:  (P.C. = 10)
   Arg 0 (PATHNAME): "src:<gumby.lispm>*.lisp.*"
   Arg 1 (DEFAULTS): #<TOPS20-PATHNAME "OZ:PS:<GUMBY>*.*.*">
   Arg 2 (DEFAULT-VERSION): :WILD

ZWEI:READ-DIRECTORY-NAME:  (P.C. = 130)
   Arg 0 (PROMPT): "Edit directory"
   Arg 1 (DEFAULT): #<TOPS20-PATHNAME "OZ:PS:<GUMBY>FOO.LISP">
   --Defaulted args:--
   Arg 2 (WILDP): T

ZWEI:COM-DIRED:  (P.C. = 4)

ZWEI:COM-R-DIRED:  (P.C. = 26)

ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
   Arg 0 (COMMAND): ZWEI:COM-R-DIRED
   Arg 1 (CHAR): 144
   Arg 2 (PREFIX-CHAR): 530
   --Defaulted args:--
   Arg 3 (HOOK-LIST): NIL

Rest of stack:
ZWEI:MAKE-EXTENDED-COMMAND-INTERNAL:  (P.C. = 77)
SYS:CALL-FUNNY-FUNCTION:  (P.C. = 101)
Closure of ZWEI:MAKE-EXTENDED-COMMAND-INTERNAL:
ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 200)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 41)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
31-Oct-83 00:29:30-EST,2795;000000000000
Date: Monday, 31 October 1983, 00:30-EST
From: David Vinayak Wallace <GUMBY at MIT-OZ>
Subject: Yank bug in 5.0
To: BUG-LISPM at MIT-OZ

In Release 5.0 [GC'd Beta Test rev 2], on Lisp Machine Jim Morrison (3600):

I typed M-Y by mistake.  I hadn't used the rubout handler yet.

>>Trap: The argument given to the MINUSP instruction, NIL, was not a number.
While in the function (:METHOD ZWEI:HISTORY :ELEMENT)  (:METHOD ZWEI:HISTORY :YANK-NEXT)  ZWEI:COM-MINI-BUFFER-OR-YANK-POP

(:METHOD ZWEI:HISTORY :ELEMENT):  (P.C. = 27)
   Arg 0 (SELF): #<MINI-BUFFER-HISTORY Command 27442003>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:HISTORY -- 7. IV's, 0. FL's 25257665>
   Arg 2 (OPERATION): :ELEMENT
   Arg 3 (N): NIL
   --Defaulted args:--
   Arg 4 (FIXUP-P): NIL
   Local 5 (DELTA): 0

(:METHOD ZWEI:HISTORY :YANK-NEXT):  (P.C. = 20)
   Arg 0 (SELF): #<MINI-BUFFER-HISTORY Command 27442003>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:HISTORY -- 7. IV's, 0. FL's 25257665>
   Arg 2 (OPERATION): :YANK-NEXT
   Arg 3 (N): 1
   --Defaulted args:--
   Arg 4 (STRING): NIL

ZWEI:COM-MINI-BUFFER-OR-YANK-POP:  (P.C. = 56)

ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
   Arg 0 (COMMAND): ZWEI:COM-MINI-BUFFER-OR-YANK-POP
   Arg 1 (CHAR): 1131
   Arg 2 (PREFIX-CHAR): NIL
   Arg 3 (HOOK-LIST): NIL

ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
   Arg 0 (CH): 1131

(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 200)
   Arg 0 (SELF): #<EDITOR 522171>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:EDITOR -- 11. IV's, 0. FL's 15630541>
   Arg 2 (OPERATION): :EDIT
   Arg 3 (TOP-LEVEL-P): NIL
   Arg 4 (DESCRIPTION): "Minibuffer Command Level"

ZWEI:COMMAND-LOOP:  (P.C. = 73)
   Arg 0 (COMTAB): #<COMTAB Pathname Reading 26731253>
   Arg 1 (WINDOW): #<WINDOW 12462066>
   Arg 2 (TYPE): ZWEI:EDITOR
   Arg 3 (DESCRIPTION): "Minibuffer Command Level"

ZWEI:EDIT-IN-MINI-BUFFER:  (P.C. = 122)
   Arg 0 (COMTAB): #<COMTAB Pathname Reading 26731253>
   Arg 1 (INITIAL-CONTENTS): NIL
   Arg 2 (INITIAL-CHAR-POS): NIL
   Arg 3 (MODE-LINE-LIST): ("Edit directory" " (Default is " "OZ:PS:<GUMBY>*.*.*" ")" (:RIGHT-FLUSH " (Completion)"))

Rest of stack:
(:METHOD ZWEI:HISTORY :FUNCALL-WITH-DEFAULT):  (P.C. = 12)
ZWEI:READ-DIRECTORY-NAME:  (P.C. = 70)
ZWEI:COM-DIRED:  (P.C. = 4)
ZWEI:COM-R-DIRED:  (P.C. = 26)
ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
ZWEI:MAKE-EXTENDED-COMMAND-INTERNAL:  (P.C. = 77)
SYS:CALL-FUNNY-FUNCTION:  (P.C. = 101)
Closure of ZWEI:MAKE-EXTENDED-COMMAND-INTERNAL:
ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 200)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 41)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
31-Oct-83 00:53:05-EST,1360;000000000000
Date: Monday, 31 October 1983, 00:52-EST
From: Kent M. Pitman <kmp at MIT-MC>
Subject: PROBEF, errors, ...
To: BUG-LISPM at MC

In Release 4.5, Knowledge-Based-Editor 221.0, site configuration 65,
Black Magic, on PA Lisp Machine Avatar:

The following observed behavior of PROBEF seems inconsistent...

 (PROBEF "MC: FOO; NOSUCH FILE")
    NIL						; Good

 (PROBEF "MC: FOO; LINKTO NOFILE")
   >> Error: LINK TO NON-EXISTENT FILE			; Good

 (PROBEF "OZ:PS:<FOO>OFFLINE.FILE")
    #<TOPS20-PATHNAME "OZ:PS:<FOO>OFFLINE.FILE.17">	; Bad

I understand PROBEF's contract to be:

  Return a pathname if the argument specifies a file which is on disk.
  Return NIL if the argument specifies a file which is not on disk.
  Err if it is not currently possible to determine if a given file is
   on disk.

It seems to me that PROBEF should either return NIL or err for the third
case above. I would prefer that it err since otherwise I cannot use 
CONDITION-CASE to watch for the problem and I definitely consider it
an exception. Returning a pathname seems to me to be maximally misleading.

Documentation of PROBEF should clearly indicate either the defined
functionality for odd cases such as file not found, link to non-existent
file, file offline, etc. or should warn appropriately about file-system-
dependent behavior.
-kmp
31-Oct-83 01:15:19-EST,5062;000000000000
Date: Monday, 31 October 1983, 01:14-EST
From: Apprentice for KMP <KBE at OZ>
Subject: Bogus FNF error from MAKE-SYSTEM
To: BUG-LISPM at MC

In Release 4.5, site configuration 65, on PA Lisp Machine Merlin:

The following error message, gotten during a MAKE-SYSTEM, is either
false or somehow very misleading.

    >>Error: File KBE: SOURCE; DEFLIB LISP > does not exist
    While in the function SI:SYSTEM-GET-CREATION-DATE 
        SI:FILE-NEWER-THAN-FILE-P  SI:COMPILE-LOAD-INIT-CONDITION

The directory "KBE: SOURCE;" is defined as "OZ:PS:<KBE.SOURCE>". 
The files OZ:PS:<KBE.SOURCE>DEFLIB.LISP.0 and DEFLIB.BIN.0 are
both definitely existing, according to a directory list on OZ itself.

If I try to PROBEF "KBE: SOURCE; DEFLIB LISP >" I get some odd error 
message that looks like it was generated on OZ which says 
UNABLE TO FIND ERROR MESSAGE FILE or some such thing.

Interestingly, I hadn't noticed before doing this MAKE-SYSTEM that
almost all of the BIN files I was going to need had gone ;OFFLINE.  
The really curious part was that DEFLIB is one of the only BIN 
files which had NOT gone offline. I would have believed/expected 
this error message about nearly any of the other files in the 
directory but am very confused about this.

About the only other thing I can offer is the stack trace below.
I'm going to delete all the ;OFFLINE .BIN files, retry the compilation
from ground zero, and hope the problem goes away...
-kmp

SI:SYSTEM-GET-CREATION-DATE:  (P.C. = 70)
   Arg 0 (FILE): #<LOGICAL-PATHNAME "KBE: SOURCE; DEFLIB LISP >">
   --Defaulted args:--
   Arg 1 (NO-ERROR-P): NIL
   Local 2: ("Retry getting creation date of ~A." #<LOGICAL-PATHNAME "KBE: SOURCE; DEFLIB LISP >">)
   Local 3: "Retry getting creation date of ~A."
   Local 4: #<LOGICAL-PATHNAME "KBE: SOURCE; DEFLIB LISP >">
   Local 5: #<ERROR-RESTART-HANDLER 53711111>
   Local 6: #<DTP-LOCATIVE 1143114>
   Local 7: #<DTP-LOCATIVE 100623>
   Local 8: (#<ERROR-RESTART-HANDLER 53711111> #<DTP-LOCATIVE 1143114> #<DTP-LOCATIVE 100623>)
   Local 9: #<DTP-CLOSURE 100626>
   Local 10: (#<DTP-CLOSURE 100167> #<DTP-CLOSURE 100152> #<DTP-CLOSURE 100115> #<DTP-CLOSURE 100100> #<DTP-CLOSURE 100021>)
   Local 11 (*RESTART-HANDLERS*-initialization): (#<DTP-CLOSURE 100626> #<DTP-CLOSURE 100167> #<DTP-CLOSURE 100152> #<DTP-CLOSURE 100115> #<DTP-CLOSURE 100100> #<DTP-CLOSURE 100021>)

SI:FILE-NEWER-THAN-FILE-P:  (P.C. = 3)
   Arg 0 (FILE-1): #<LOGICAL-PATHNAME "KBE: SOURCE; DEFLIB LISP >">
   Arg 1 (FILE-2): #<LOGICAL-PATHNAME "KBE: SOURCE; DEFLIB BIN >">

SI:COMPILE-LOAD-INIT-CONDITION:  (P.C. = 4)
   Arg 0 (SOURCE-FILE): #<LOGICAL-PATHNAME "KBE: SOURCE; DEFLIB LISP >">
   Arg 1 (BINARY-FILE): #<LOGICAL-PATHNAME "KBE: SOURCE; DEFLIB BIN >">

SYS:CALL-FUNNY-FUNCTION:  (P.C. = 73)
   Arg 0 (FUNCTION): #<DTP-CLOSURE 4415343>
   Rest arg (ARGS): (#<LOGICAL-PATHNAME "KBE: SOURCE; DEFLIB LISP >"> #<LOGICAL-PATHNAME "KBE: SOURCE; DEFLIB BIN >">)

Closure of SI:COMPILE-LOAD-INIT-CONDITION:
   Extraneous Rest Arg: (#<LOGICAL-PATHNAME "KBE: SOURCE; DEFLIB LISP >"> #<LOGICAL-PATHNAME "KBE: SOURCE; DEFLIB BIN >">)

SI:QUEUE-FILES-AS-NEEDED:  (P.C. = 54)
   Arg 0 (LIST): ((NIL NIL (COMPILE ("Compile" "Compiling" "compiled") SI:COMPILE-FILE-1 (LISP) (BIN)) NIL #<SYSTEM Knowledge-Based-Editor 5277164> #<DTP-CLOSURE 4415343> (#<LOGICAL-PATHNAME "KBE: SOURCE; DEFLIB BIN >">) #<LOGICAL-PATHNAME "KBE: SOURCE; DEFLIB LISP >"> #<LOGICAL-PATHNAME "KBE: SOURCE; DEFLIB BIN >">))

SI:QUEUE-ONE-TRANSFORMATION:  (P.C. = 34)
   Arg 0 (TRANSFORMATION): #<TRANSFORMATION COMPILE 5300523>
   Arg 1 (FORCE-DEPENDENCIES): NIL
   Rest arg (OTHERS): NIL

SI:PERFORM-TRANSFORMATIONS:  (P.C. = 127)
   Arg 0 (TRANSFORMATION-LIST): ((#<TRANSFORMATION COMPILE 5277765> NIL NIL #<SYSTEM Knowledge-Based-Editor 5277164>) (#<TRANSFORMATION COMPILE 5300003> NIL NIL #<SYSTEM Knowledge-Based-Editor 5277164>) (#<TRANSFORMATION COMPILE 5300021> NIL NIL #<SYSTEM Knowledge-Based-Editor 5277164>) (#<TRANSFORMATION COMPILE 5300037> NIL NIL #<SYSTEM Knowledge-Based-Editor 5277164>) (#<TRANSFORMATION COMPILE 5300055> NIL NIL #<SYSTEM Knowledge-Based-Editor 5277164>) (#<TRANSFORMATION COMPILE 5300073> NIL NIL #<SYSTEM Knowledge-Based-Editor 5277164>) (#<TRANSFORMATION COMPILE 5300111> NIL NIL #<SYSTEM Knowledge-Based-Editor 5277164>) (#<TRANSFORMATION COMPILE 5300127> NIL NIL #<SYSTEM Knowledge-Based-Editor 5277164>) (#<TRANSFORMATION COMPILE 5300145> NIL NIL #<SYSTEM Knowledge-Based-Editor 5277164>) (#<TRANSFORMATION COMPILE 5300163> NIL NIL #<SYSTEM Knowledge-Based-Editor 5277164>) ...)

Rest of stack:
SI:PERFORM-TRANSFORMATIONS:  (P.C. = 71)
MAKE-SYSTEM:  (P.C. = 170)
SI:*EVAL:  (P.C. = 405)
LET*:  (P.C. = 62)
SI:*EVAL:  (P.C. = 647)
UNWIND-PROTECT:  (P.C. = 5)
SI:*EVAL:  (P.C. = 647)
LET:  (P.C. = 110)
SI:*EVAL:  (P.C. = 647)
SI:READFILE-INTERNAL:  (P.C. = 106)
LOAD:  (P.C. = 237)
LOGIN:  (P.C. = 253)
SI:*EVAL:  (P.C. = 405)
SI:LISP-TOP-LEVEL1:  (P.C. = 130)
SYS:LISP-TOP-LEVEL:  (P.C. = 7)
31-Oct-83 01:23:36-EST,960;000000000000
Mail-From: KMP created at 31-Oct-83 01:23:10
Date: Mon 31 Oct 83 01:23-EST
From: Kent M. Pitman <KMP@MIT-OZ>
Subject: ;OFFLINE files
To: bug-lispm@MIT-OZ

In Release 4.5 on MIT-Merlin...

MAKE-SYSTEM should not be so sensitive to ;OFFLINE .BIN files.

It should signal a proceed case which allows you to pretend the
;OFFLINE file is not present at all, forcing recompilation. This
is in case it will take longer to retrieve the file than to just
compile it again. The reason this is desirable (as opposed to
deleting the .BIN file and recompiling as I was just about to try)
is that this way you don't have potentially-important files on tape
with the same name.type.version which are really different files.
As such, it is important that even though recompilation is forced
by this proceed operation, a higher version number should still be
selected so that it doesn't overwrite the ;OFFLINE info for the 
other file(s) in the directory.
31-Oct-83 01:29:36-EST,405;000000000000
Date: Monday, 31 October 1983, 01:30-EST
From: David Vinayak Wallace <GUMBY at MIT-OZ>
Subject: FS:ADD-LOGICAL-PATHNAME-HOST under 5.0
To: BUG-LISPM at MIT-OZ

In Release 5.0 [GC'd Beta Test rev 2], on Lisp Machine Jim Morrison (3600):

How does FS:ADD-LOGICAL-PATHNAME-HOST work under 5.0?  Can logical
pathnames stretch across machines?  It now bombs when you give it a
pathname with no host.
31-Oct-83 04:19:48-EST,1355;000000000000
Date: Monday, 31 October 1983, 04:20-EST
From: Tim McNerney <TIM at MIT-OZ>
Subject: Braindamaged system sources on OZ?
To: BUG-LISPM at MIT-OZ

In Release 4.5, site configuration 57, on Lisp Machine Apiary-5:

Tried to load SRC:<S.WINDOW>CHOICE.LISP.101 so that I could list callers of a
subst.  This turned out to be a bad idea because, among other things, it was the
wrong version of the file.  First I got all sort of warnings about flavors that
got incompatibly changed, then it really blew up when it saw this:

  (DEFMETHOD (BASIC-MULTIPL-CHOICE :SCROLL-BAR-P) ()	;>> Error: BASIC-MULTIPL-CHOICE is not a flavor
    SCROLL-BAR-ALWAYS-DISPLAYED)

This particular version of CHOICE seems to be slightly braindamaged.  Could you
send us a fresh copy?  

Incidentally, it would be very helpful if Meta-. could dig up the source file
that actually corresponds to the currently loaded system.  Unfortunately, the
set of sources that we have on OZ appears to be a random "snapshot" of your
sources, not corresponding to Rel 4 OR Rel 5.  Part of the problem stems from
our having only one version of each source file.  I assume that this is because
of limited file space on OZ.  I suppose that this becomes a moot point if you
update all the sources when Rel 5 becomes sturdy enough to propagate throughout
MIT.  Any suggestions?
31-Oct-83 08:05:09-EST,1338;000000000000
Date: Monday, 31 October 1983, 08:04-EST
From:  <PGS at MIT-MC>
Sender:  at MIT-MC
To: BUG-HARDWARE at MIT-OZ
CC: bug-lispm at MIT-OZ

In HARDWARE in System 97.23, CADR 1.0, ZMail 51.9, MIT-Specific 21.0,
microcode 257, ZM MIT, on Lisp Machine Thirty:

CADR-30 seems to be broken.  I can't tell whether the print error is a
legitimate error message, but looks to me like CC is having trouble,
too.

Machine being debugged is MIT-LISPM-31.

Microcode halted via ILLOP from TRAP
Micro PC History (OPC's), oldest first:
   16553   TRANS-REALLY-TRAP
   16554   (TRANS-REALLY-TRAP 1)
   16555   (TRANS-REALLY-TRAP 2)
   16556   (TRANS-REALLY-TRAP 3)
   24025   TRAP
   24026   (TRAP 1)
   00023   ILLOP
   00024   XWIPM
Backtrace of microcode subroutine stack:
    7  016551   TRANS-DROP-THROUGH
    6  026141   (BEG03 13)
    5  000000   COPY-BUFFER-CCW-ORIGIN
    4  000000   COPY-BUFFER-CCW-ORIGIN
    3  000000   COPY-BUFFER-CCW-ORIGIN
    2  000000   COPY-BUFFER-CCW-ORIGIN
    1  000000   COPY-BUFFER-CCW-ORIGIN
    0  000000   COPY-BUFFER-CCW-ORIGIN
Halted trying to signal an error, because trapping is disabled
Error was signalled from (TRANS-REALLY-TRAP 2)
  Error table says: (TRANS-TRAP)

>>ERROR: 300000000 NOT AN ARRAY-POINTER - QF-ARRAY-SETUP

[Sorry, error while trying to print that.]
31-Oct-83 09:33:06-EST,831;000000000000
Received: from SCRC-HARLEM by SCRC-QUABBIN with CHAOS; Mon 31-Oct-83 09:30:06-EST
Date: Monday, 31 October 1983, 09:30-EST
From: Joseph R. Goldstone <joseph at SCRC-QUABBIN>
Subject: Overstrike in TERMINAL
To: David Vinayak Wallace <GUMBY at MIT-AI>
Cc: BUG-LISPM at MIT-AI
In-reply-to: The message of 30 Oct 83 22:08-EST from David Vinayak Wallace <GUMBY at MIT-AI>

    Date: Sunday, 30 October 1983, 22:08-EST
    From: David Vinayak Wallace <GUMBY at MIT-OZ>
    In Release 5.0 [GC'd Beta Test rev 2], on Lisp Machine Jim Morrison (3600):

    It is very hard to use UNIX and MULTICS remotely on REL 5: you can't
    tell the TERMINAL program to overstrike (<network> O under 4.5).

NETWORK X will let you tell Terminal to enable or disable Overstrike (it puts up
a CVV window).  Hope that helps.

-- joseph
31-Oct-83 10:23:48-EST,1120;000000000000
Received: from SCRC-SHEPHERD by SCRC-TENEX with CHAOS; Mon 31-Oct-83 10:03:54-EST
Date: Monday, 31 October 1983, 11:08-EST
From: Daniel L. Weinreb <DLW@SCRC-TENEX>
Subject: PROBEF, errors, ...
To: kmp@MIT-MC, BUG-LISPM@MIT-MC
In-reply-to: The message of 31 Oct 83 00:52-EST from Kent M. Pitman <kmp at MIT-MC>

    Date: Monday, 31 October 1983, 00:52-EST
    From: Kent M. Pitman <kmp at MIT-MC>
     (PROBEF "OZ:PS:<FOO>OFFLINE.FILE")
        #<TOPS20-PATHNAME "OZ:PS:<FOO>OFFLINE.FILE.17">	; Bad

    I understand PROBEF's contract to be:

      Return a pathname if the argument specifies a file which is on disk.
      Return NIL if the argument specifies a file which is not on disk.
      Err if it is not currently possible to determine if a given file is
       on disk.

No, actually its formal contract is to return NIL if OPEN of the same
pathname would have signalled FS:FILE-NOT-FOUND.  If OPEN would have
signalled any other error, signal that error.  If OPEN would have
succeeded, return a non-NIL value.

What would OPEN have done in the third case?  This is the key question.
31-Oct-83 10:38:51-EST,1207;000000000000
Received: from SCRC-CONNECTICUT by SCRC-TENEX with CHAOS; Mon 31-Oct-83 10:18:06-EST
Date: Monday, 31 October 1983, 10:20-EST
From: Clark M. Baker <cmb@SCRC-CUPID>
Subject: Overstrike in TERMINAL
To: David Vinayak Wallace <GUMBY@MIT-OZ>
Cc: BUG-LISPM@MIT-OZ
In-reply-to: The message of 30 Oct 83 22:08-EST from David Vinayak Wallace <GUMBY at MIT-OZ>

    Date: Sunday, 30 October 1983, 22:08-EST
    From: David Vinayak Wallace <GUMBY at MIT-OZ>
    In Release 5.0 [GC'd Beta Test rev 2], on Lisp Machine Jim Morrison (3600):

    It is very hard to use UNIX and MULTICS remotely on REL 5: you can't
    tell the TERMINAL program to overstrike (<network> O under 4.5).

    Also, If you type MULTICS to the prompt, you get multics, but the label
    of the window is: "MIT-MULTICS (via ML on CHAOS or MC on CHAOS)" which
    is a little unnerving.  I hope it knows where to send the packets!

    Is there any way to spped up cold-booting?  It seems to spend a lot of
    time logging into OZ.

    david

Typing Network Help to telnet (after you have connected to a machine)
shows one that Network X will show you some extended commands.  The
overstrike toggle is hidden there.
31-Oct-83 11:28:28-EST,1190;000000000000
Received: from SCRC-NEPONSET by SCRC-TENEX with CHAOS; Mon 31-Oct-83 10:01:34-EST
Date: Monday, 31 October 1983, 10:04-EST
From: Bernard S. Greenberg <BSG@SCRC-TENEX>
Subject: its pathnames with the machine name at the end under 5.0
To: GUMBY@MIT-OZ, BUG-LISPM@MIT-OZ
In-reply-to: The message of 30 Oct 83 22:43-EST from David Vinayak Wallace <GUMBY at MIT-OZ>

    Date: Sunday, 30 October 1983, 22:43-EST
    From: David Vinayak Wallace <GUMBY at MIT-OZ>
    In Release 5.0 [GC'd Beta Test rev 2], on Lisp Machine Jim Morrison (3600):

    This always used to work:

    The default pathname in zwei was "oz:ps:<tardis>lispm.init" I typed ^X^F
    gumby;foo bar mc: and lost:

    >>Error: "gumby;foo bar mc" is not a known file server host.
    While in the function FS:GET-PATHNAME-HOST  FS:PARSE-PATHNAME-FIND-COLON  FS:PARSE-PATHNAME
Sorry, there is no Release documentation yet.
Whatever precedes the first colon in any name is now the host name.
Every time, any circumstance, valid host or invalid.
If you think it through, you will see that this is a win.
Please do not flood the mail with design debate about this,
we already did so for six months here.
31-Oct-83 11:31:50-EST,1406;000000000000
Received: from SCRC-SHEPHERD by SCRC-TENEX with CHAOS; Mon 31-Oct-83 10:07:30-EST
Date: Monday, 31 October 1983, 11:12-EST
From: Daniel L. Weinreb <DLW@SCRC-TENEX>
Subject: more 5.0 pathname defaulting problems.
To: GUMBY@MIT-OZ, BUG-LISPM@MIT-OZ
In-reply-to: The message of 31 Oct 83 00:29-EST from David Vinayak Wallace <GUMBY at MIT-AI>

    Date: Monday, 31 October 1983, 00:29-EST
    From: David Vinayak Wallace <GUMBY at MIT-OZ>
    In Release 5.0 [GC'd Beta Test rev 2], on Lisp Machine Jim Morrison (3600):

    I did ^U^XD.  The default was OZ:PS:<GUMBY>*.*.*.  I typed "src:<gumby.lispm>

    >>Error: "src" is not a known file server host.
    While in the function FS:GET-PATHNAME-HOST  FS:PARSE-PATHNAME-FIND-COLON  FS:PARSE-PATHNAME

If you had received documentation, it would have told you that this is
an intentional effect.  In Rel 5, you have to type the OZ: explicitly.
Unfortunately,this was necessary to solve other, worse problems, that
were affecting a lot of people.  I assure you that we spent a great deal
of time and countless mail messages debating this; we appreciate the
problem you have encountered, we were aware of it all along, and did not
decide lightly to intentionally put it in.  The set of tradeoffs was
extremely complicated, and we are convinced that there's no way to make
everything work at once.  We apologize for the inconvenience.
31-Oct-83 12:49:21-EST,2900;000000000000
Received: from SCRC-CHARLES by SCRC-QUABBIN with CHAOS; Mon 31-Oct-83 11:48:04-EST
Date: Monday, 31 October 1983, 11:47-EST
From: David C. Plummer <DCP at SCRC-TENEX>
Subject: its pathnames with the machine name at the end under 5.0
To: BSG at SCRC-TENEX, DLW at SCRC-TENEX, GUMBY at MIT-OZ,
    BUG-LISPM at MIT-OZ
In-reply-to: The message of 31 Oct 83 10:04-EST from Bernard S. Greenberg <BSG at SCRC-TENEX>,
             The message of 31 Oct 83 11:12-EST from Daniel L. Weinreb <DLW at SCRC-TENEX>

    Date: Monday, 31 October 1983, 10:04-EST
    From: Bernard S. Greenberg <BSG@SCRC-TENEX>
	Date: Sunday, 30 October 1983, 22:43-EST
	From: David Vinayak Wallace <GUMBY at MIT-OZ>
	In Release 5.0 [GC'd Beta Test rev 2], on Lisp Machine Jim Morrison (3600):

	This always used to work:

	The default pathname in zwei was "oz:ps:<tardis>lispm.init" I typed ^X^F
	gumby;foo bar mc: and lost:

	>>Error: "gumby;foo bar mc" is not a known file server host.
	While in the function FS:GET-PATHNAME-HOST  FS:PARSE-PATHNAME-FIND-COLON  FS:PARSE-PATHNAME
    Sorry, there is no Release documentation yet.
    Whatever precedes the first colon in any name is now the host name.
    Every time, any circumstance, valid host or invalid.
    If you think it through, you will see that this is a win.
Saying that is a good way to get the flood of mail you just asked not to
receive.
    Please do not flood the mail with design debate about this,
    we already did so for six months here.

    Date: Monday, 31 October 1983, 11:12-EST
    From: Daniel L. Weinreb <DLW@SCRC-TENEX>
	Date: Monday, 31 October 1983, 00:29-EST
	From: David Vinayak Wallace <GUMBY at MIT-OZ>
	In Release 5.0 [GC'd Beta Test rev 2], on Lisp Machine Jim Morrison (3600):

	I did ^U^XD.  The default was OZ:PS:<GUMBY>*.*.*.  I typed "src:<gumby.lispm>

	>>Error: "src" is not a known file server host.
	While in the function FS:GET-PATHNAME-HOST  FS:PARSE-PATHNAME-FIND-COLON  FS:PARSE-PATHNAME

    If you had received documentation, it would have told you that this is
    an intentional effect.  In Rel 5, you have to type the OZ: explicitly.
That is not true.  If colon is the leading character, the host defaults.
Therefore, if the default is some-random-20-someplace:ps:<foo>bar.baz
and you want to access the SRC: structure, you just have to type :SRC:.
    Unfortunately,this was necessary to solve other, worse problems, that
    were affecting a lot of people.  I assure you that we spent a great deal
    of time and countless mail messages debating this; we appreciate the
    problem you have encountered, we were aware of it all along, and did not
    decide lightly to intentionally put it in.  The set of tradeoffs was
    extremely complicated, and we are convinced that there's no way to make
    everything work at once.  We apologize for the inconvenience.
31-Oct-83 14:14:51-EST,559;000000000000
Date: Monday, 31 October 1983  13:29-EST
From: MOON at SCRC-TENEX
To:   Tim McNerney <TIM at MIT-OZ>
Cc:   BUG-LISPM at MIT-OZ
Subject: Braindamaged system sources on OZ?
In-reply-to: The message of 31 Oct 1983 04:20-EST from Tim McNerney <TIM at MIT-OZ>

Loading interpreted versions of system source files is -not- a good idea
and will not work in general, even if you had the right sources.  MIT
will get the Release 5 sources as soon as they exist, this week I hear,
and they will be much more accurate than the sources you got with Release 4.
31-Oct-83 14:19:44-EST,1003;000000000000
Received: from SCRC-BIG by SCRC-TENEX with CHAOS; Mon 31-Oct-83 11:49:32-EST
Date: Monday, 31 October 1983, 11:48-EST
From: Scott W. McKay <SWM@SCRC-VIXEN>
Subject: more 5.0 pathname defaulting problems.
To: GUMBY@MIT-OZ, BUG-LISPM@MIT-OZ
In-reply-to: The message of 31 Oct 83 00:29-EST from David Vinayak Wallace <GUMBY at MIT-OZ>

    Date: Monday, 31 October 1983, 00:29-EST
    From: David Vinayak Wallace <GUMBY at MIT-OZ>
    In Release 5.0 [GC'd Beta Test rev 2], on Lisp Machine Jim Morrison (3600):

    I did ^U^XD.  The default was OZ:PS:<GUMBY>*.*.*.  I typed "src:<gumby.lispm>

    >>Error: "src" is not a known file server host.
    While in the function FS:GET-PATHNAME-HOST  FS:PARSE-PATHNAME-FIND-COLON  FS:PARSE-PATHNAME

This is the part of the "great host colon debate".  The first colon in a
pathname now /always/ delimits the host name.  So if you want the device
name src: and want to correctly default the host name, you'll need to type
:src:<gumby.lispm>
31-Oct-83 15:25:47-EST,1042;000000000000
Received: from SCRC-NEPONSET by SCRC-QUABBIN with CHAOS; Mon 31-Oct-83 15:17:55-EST
Date: Mon, 31 Oct 83 15:21 EST
From: Mike McMahon <MMcM@SCRC-TENEX>
Subject: Bogus FNF error from MAKE-SYSTEM
To: KBE@MIT-OZ
Cc: BUG-LISPM@MIT-MC
In-reply-to: The message of 31 Oct 83 01:14-EST from Apprentice for KMP <KBE at MIT-OZ>
Message-ID: <831031152127.9.MMcM@SCRC-TENEX>

    Date: Monday, 31 October 1983, 01:14-EST
    From: Apprentice for KMP <KBE at OZ>
    The following error message, gotten during a MAKE-SYSTEM, is either
    false or somehow very misleading.

	>>Error: File KBE: SOURCE; DEFLIB LISP > does not exist
	While in the function SI:SYSTEM-GET-CREATION-DATE 
	    SI:FILE-NEWER-THAN-FILE-P  SI:COMPILE-LOAD-INIT-CONDITION

Some time ago I fixed the source to signal the real error gotten from
the file computer, rather than disguising everything as file does not
exist.  Evidently this didn't make it into release 5.0.  I will include
the change in my next patch, so maybe it will make it into release 5.1.
31-Oct-83 16:36:36-EST,1058;000000000000
Received: from SCRC-EUPHRATES by SCRC-YUKON with CHAOS; Mon 31-Oct-83 16:21:55-EST
Date: Monday, 31 October 1983, 16:21-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: PROBEF, errors, ...
To: Kent M. Pitman <kmp at MIT-MC>,
    Daniel L. Weinreb <DLW at SCRC-TENEX>
Cc: BUG-LISPM at MIT-MC, bug-file at MIT-OZ
In-reply-to: The message of 31 Oct 83 00:52-EST from Kent M. Pitman <kmp at MIT-MC>,
             The message of 31 Oct 83 11:08-EST from Daniel L. Weinreb <DLW at SCRC-TENEX>,
             The message of 31 Oct 83 01:23-EST from Kent M. Pitman <KMP at MIT-OZ>

There is specific code in the FILE server (at OPNJER) to make probe
opening when the file is "not available" (offline, archived, structure
not mounted, and a few other synonymous-looking errors) not be an error,
but simply return whatever attributes of the file it can get.  I assume
this was put in for a reason, although there is no comment saying what
the reason was, just a comment saying what the code does.  Consequently
I am not going to change anything.
 1-Nov-83 00:31:02-EST,572;000000000000
Date: Tuesday, 1 November 1983, 00:33-EST
From: Kent M. Pitman <kmp at MIT-MC>
Subject: Why is there no m-X Edit Options
To: BUG-LISPM at OZ

In Release 4.5, Knowledge-Based-Editor 221.0, site configuration 65,
Black Magic, on PA Lisp Machine Avatar:

Why does ZWEI not have m-X Edit Options? Typing m-X Set Variable and then
typing Help is bad because it is clumsy and because it doesn't provide
documentation strings with the display of the variable names which are shown.
It would be nice to have something like a Choose Variable Values window 
available.
 1-Nov-83 01:01:20-EST,776;000000000000
Date: Tuesday, 1 November 1983, 01:04-EST
From: Kent M. Pitman <kmp at MIT-MC>
Subject: Case and m-X Source Compare
To: BUG-LISPM at OZ

In Release 4.5, Knowledge-Based-Editor 221.0, site configuration 65,
Black Magic, on PA Lisp Machine Avatar:

m-X Source Compare seems to ignore case information. I do not believe this
is appropriate for comparison of arbitrary kinds of files. For those who
believe otherwise, it seems to me the right thing is to make option variables
which are defaultly set to safe settings (verbose) and which users can set
in his init or in something like m-X Edit Options. The sorts of option 
variables I assume that one would want are things like the ones given by
SRCCOM on ITS and Twenex; ie, ignore blank lines, ignore case, etc.
 1-Nov-83 04:47:49-EST,3148;000000000000
Date: Tuesday, 1 November 1983, 04:51-EST
From: Kent M. Pitman <kmp at MIT-MC>
Subject: Bogus "The window system is locked" error
To: BUG-LISPM at MC
Cc: KBE-I at OZ

In Release 4.5, Knowledge-Based-Editor 221.0, site configuration 65,
Black Magic, on PA Lisp Machine Avatar:

I was getting "The window-system is locked, using the cold load stream"
in a place which used to not get this message. I further could not think
of anything I could possibly be doing which should generate this error.

I then spent a half hour writing some debugging tools to tell me what
in the window system was being locked (in similar fashion to how 
Terminal Control-Clear-Input works). It seems like tools like that 
should be standardly provided in the system. For a sample of the kind
of thing I ended up writing, see OZ:PS:<KMP.LISPM>SHOW-WINDOW-LOCKS.LISP

In any case, these tools only told me that, as I had originally believed,
the window system wasn't really locked and that the message I was getting
was probably bogus. After poking around for a bit in <S.WINDOW>SHEET.LISP,
I found and traced TV:REASON-NOT-TO-USE-TERMINAL-IO-FOR-ERROR. This turned
out to be the culprit. It should probably not be calling itself recursively
on NEW-WINDOW (really TV:SELECTED-WINDOW); the purposes of the two calls
seem semantically different and the particular bug which hit me grows out
of this difference. 

In my case, TV:SELECTED-WINDOW was too small to run the debugger; not 
that it should have had to be big enough since it was only going to get 
used for notification anyway. Notification takes only one or two lines,
not five. Also, even if there hadn't been room for notification, the window
had TV:POP-UP-NOTIFICATION-MIXIN, so its own size didn't matter anyway.

The problem then, was that when TV:REASON-NOT-TO-USE-TERMINAL-IO-FOR-ERROR
was called on the outer call, it was finding the erring window to be
de-exposed so it recursed on TV:SELECTED-WINDOW to see if that was ok
to notify you on. This second call returned "The window is too small",
which was simply wrong. It should have returned NIL meaning things were fine.
By returning the string, though, it forced the outer call to incorrectly
claim "The window system is locked".

The code in question was last modified by RWK as part of patch 222.30.
A minimal patch seems to be to modify the first COND clause in
TV:REASON-NOT-TO-USE-TERMINAL-IO-FOR-ERROR to check for (NOT RECURSION) 
as in:

  (COND ((AND (NOT RECURSION)
	      (OR (< (SHEET-INSIDE-WIDTH SHEET) (* (SHEET-CHAR-WIDTH SHEET) 35.))
		  (< (SHEET-INSIDE-HEIGHT SHEET) (* (SHEET-LINE-HEIGHT SHEET) 5))))
	 "The window is too small")
	...)

This only patches the symptom, though. It's effectively just an 
acknowledgement that only one-third of that definition (the middle clause)
is the part the recursive call wants to get ahold of. That code is enough of
a mess, though, that I'd recommend just rewriting it, factoring out the
middle clause of the COND under its own name so that the last clause can call
it directly and forget about that silly RECURSION flag variable.
-kmp
 1-Nov-83 05:31:56-EST,1704;000000000000
Date: Tuesday, 1 November 1983, 05:33-EST
From: Kent M. Pitman <KMP at MIT-MC>
Subject: Lossage on 3600 when trying to do LOGIN twice in the same session without booting
To: BUG-LISPM at MC
Cc: Dick at OZ, Weld at OZ, Faust at OZ

In Release 4.5, Knowledge-Based-Editor 214.0, site configuration 55,
Sorcerer's Apprentice, on PA Lisp Machine Merlin:

Some members of my group have complained that in Rel 4.4 and 4.5 on a
3600 that they cannot log in again if someone else has logged in before
them without booting the machine. The problem seems to be caused by getting into
a state where FS:USER-LOGIN-MACHINE is bound to #<TOP20-CHAOS-HOST OZ>,
but where (FS:USER-HOMEDIR FS:USER-LOGIN-MACHINE) returns NIL. In fact,
I found that doing (CHAOS:RESET) was enough to fix things.

This problem seems to be reproducible in both a Rel 4.4 and Rel 4.5 by
doing the following in a freshly booted environment:

(LOGIN 'ANONYMOUS 'OZ)
T

(LOGIN 'ANONYMOUS 'OZ)
>>Error: The symbol NIL has an invalid definition
While in the function NIL  FS:INIT-FILE-PATHNAME  LOGIN

NIL:
   Arg 0: INIT-FILE
   Arg 1: "LISPM"

FS:INIT-FILE-PATHNAME:  (P.C. = 12)
   Arg 0 (PROGRAM-NAME): "LISPM"
   Arg 1 (HOST): #<TOPS20-CHAOS-HOST OZ>
   --Defaulted args:--
   Arg 2 (FORCE-P): NIL

LOGIN:  (P.C. = 247)
   Arg 0 (USER-NAME): ANONYMOUS
   Arg 1 (HOST): OZ
   --Defaulted args:--
   Arg 2 (*LOGIN-LOAD-INIT-FILE-P*-initialization): T

...etc.

Note that this problem is also common when trying to boot a Rel 4.3 in
microcode 219 since the first thing that happens is that the machine logs
into OZ looking for an error table or some such for microcode it hadn't been
expecting.
 1-Nov-83 09:07:01-EST,489;000000000000
Date: Tuesday, 1 November 1983, 10:14-EST
From: Thomas Knight <tk at MIT-MC>
Subject: EVAL-WHEN keywords aren't
To: BUG-LISPM at MIT-OZ

In Release 5.0 [GC'd Beta Test rev 2], on Lisp Machine Elvis Presley (3600):

Hmm...  Shouldn't these be keywords?

>>Error: (:EVAL) invalid EVAL-WHEN times; must be a list of EVAL, LOAD, and/or COMPILE.
         Note that these symbols are not supposed to be keywords.
While in the function SI:CHECK-EVAL-WHEN-TIMES  EVAL-WHEN  SI:*EVAL
 1-Nov-83 11:34:07-EST,632;000000000000
Date: Tuesday, 1 November 1983, 11:35-EST
From: W. Eric L. Grimson <welg at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In System 97.23, CADR 1.0, ZMail 51.9, MIT-Specific 21.0, microcode 257,
ZM MIT, on Lisp Machine Thirty:

The compiler seems to have great difficulty in this system, especially with
LOOP macros.  

I can attempt to compile a simple function, and have the machine wedge so that
only a warm boot will resurrect it, then warm boot the machine, and attempt to 
complie the same function and have  it succeed.

(if you want to test this yourself, try the functions in
ps:<welg>bell-new.lisp for example)

eric
 1-Nov-83 14:33:47-EST,854;000000000000
Received: from SCRC-EUPHRATES by SCRC-TENEX with CHAOS; Tue 1-Nov-83 14:25:24-EST
Date: Tuesday, 1 November 1983, 14:28-EST
From: "David A. Moon" <Moon at SCRC-TENEX>
Subject: EVAL-WHEN keywords aren't
To: Thomas Knight <tk at MIT-MC>
Cc: BUG-LISPM at MIT-OZ
In-reply-to: The message of 1 Nov 83 10:14-EST from Thomas Knight <tk at MIT-MC>

    Date: Tuesday, 1 November 1983, 10:14-EST
    From: Thomas Knight <tk at MIT-MC>
    In Release 5.0 [GC'd Beta Test rev 2], on Lisp Machine Elvis Presley (3600):

    Hmm...  Shouldn't these be keywords?

    >>Error: (:EVAL) invalid EVAL-WHEN times; must be a list of EVAL, LOAD, and/or COMPILE.
	     Note that these symbols are not supposed to be keywords.

No they shouldn't be.  They are not documented with colons in either the Lisp Machine
Manual nor the (draft) Common Lisp Manual.
 1-Nov-83 14:37:41-EST,1574;000000000000
Received: from SCRC-NEPONSET by SCRC-QUABBIN with CHAOS; Tue 1-Nov-83 14:31:10-EST
Date: Tue, 1 Nov 83 14:35 EST
From: Mike McMahon <MMcM@SCRC.SCRC.Symbolics>
Subject: Bogus "The window system is locked" error
To: kmp@MC.ARPA
Cc: BUG-LISPM@MC.ARPA, KBE-I@MIT-OZ.ARPA
In-reply-to: The message of 1 Nov 83 04:51-EST from "Kent M. Pitman" <kmp at MIT-MC>
Message-ID: <831101143508.3.MMcM@SCRC.SCRC.Symbolics>

    Date: Tuesday, 1 November 1983, 04:51-EST
    From: Kent M. Pitman <kmp at MIT-MC>
    In any case, these tools only told me that, as I had originally believed,
    the window system wasn't really locked and that the message I was getting
    was probably bogus. After poking around for a bit in <S.WINDOW>SHEET.LISP,
    I found and traced TV:REASON-NOT-TO-USE-TERMINAL-IO-FOR-ERROR. This turned
    out to be the culprit. It should probably not be calling itself recursively
    on NEW-WINDOW (really TV:SELECTED-WINDOW); the purposes of the two calls
    seem semantically different and the particular bug which hit me grows out
    of this difference. 

    In my case, TV:SELECTED-WINDOW was too small to run the debugger; not 
    that it should have had to be big enough since it was only going to get 
    used for notification anyway. Notification takes only one or two lines,
    not five. Also, even if there hadn't been room for notification, the window
    had TV:POP-UP-NOTIFICATION-MIXIN, so its own size didn't matter anyway.

I found this one some time ago with the editor's mini-buffer.  It comes
fixed in release 5.
 1-Nov-83 17:17:12-EST,1415;000000000000
Received: from SPA-LOS-TRANCOS by SPA-Nimbus with CHAOS; Tue 1-Nov-83 13:56:33-PST
Date: Tuesday, 1 November 1983, 13:56-PST
From: Eric Benson <benson at SPA-Nimbus>
Subject: EVAL-WHEN keywords aren't
To: "David A. Moon" <Moon at SCRC-TENEX>, Thomas Knight <tk at MIT-MC>
Cc: BUG-LISPM at MIT-OZ, lisp-designers at SPA-Nimbus
In-reply-to: The message of 1 Nov 83 11:28-PST from "David A. Moon" <Moon at SCRC-TENEX>

    Date: Tuesday, 1 November 1983, 14:28-EST
    From: "David A. Moon" <Moon at SCRC-TENEX>

	Date: Tuesday, 1 November 1983, 10:14-EST
	From: Thomas Knight <tk at MIT-MC>
	In Release 5.0 [GC'd Beta Test rev 2], on Lisp Machine Elvis Presley (3600):

	Hmm...  Shouldn't these be keywords?

	>>Error: (:EVAL) invalid EVAL-WHEN times; must be a list of EVAL, LOAD, and/or COMPILE.
		 Note that these symbols are not supposed to be keywords.

    No they shouldn't be.  They are not documented with colons in either the Lisp Machine
    Manual nor the (draft) Common Lisp Manual.

Perhaps they "should" be in some sense, but they aren't.  They are like
the symbol OTHERWISE in SELECTQ, LOOP keywords, and sort of like
&lambda-list keywords.  They are "keywords," i.e. symbols which are used
as syntactic markers (used intensionally rather than extensionally, in
3-Lisp jargon), but not KEYWORDS living in the KEYWORD package. Should
there be another name for such things?
 1-Nov-83 17:45:38-EST,3765;000000000000
Received: from SCRC-EUPHRATES by SCRC-TENEX with CHAOS; Tue 1-Nov-83 15:48:46-EST
Date: Tuesday, 1 November 1983, 15:51-EST
From: "David A. Moon" <Moon at SCRC-TENEX>
Subject: Bogus "The window system is locked" error
To: "Kent M. Pitman" <kmp at MIT-MC>, rwk at SCRC-TENEX
Cc: BUG-LISPM at MIT-MC, KBE-I at MIT-OZ
In-reply-to: The message of 1 Nov 83 04:51-EST from "Kent M. Pitman" <kmp at MIT-MC>

All of the enclosed was fixed long ago and is included in Release 5, I believe.
RWK might want to verify this.

    Date: Tuesday, 1 November 1983, 04:51-EST
    From: Kent M. Pitman <kmp at MIT-MC>
    In Release 4.5, Knowledge-Based-Editor 221.0, site configuration 65,
    Black Magic, on PA Lisp Machine Avatar:

    I was getting "The window-system is locked, using the cold load stream"
    in a place which used to not get this message. I further could not think
    of anything I could possibly be doing which should generate this error.

    I then spent a half hour writing some debugging tools to tell me what
    in the window system was being locked (in similar fashion to how 
    Terminal Control-Clear-Input works). It seems like tools like that 
    should be standardly provided in the system. For a sample of the kind
    of thing I ended up writing, see OZ:PS:<KMP.LISPM>SHOW-WINDOW-LOCKS.LISP

    In any case, these tools only told me that, as I had originally believed,
    the window system wasn't really locked and that the message I was getting
    was probably bogus. After poking around for a bit in <S.WINDOW>SHEET.LISP,
    I found and traced TV:REASON-NOT-TO-USE-TERMINAL-IO-FOR-ERROR. This turned
    out to be the culprit. It should probably not be calling itself recursively
    on NEW-WINDOW (really TV:SELECTED-WINDOW); the purposes of the two calls
    seem semantically different and the particular bug which hit me grows out
    of this difference. 

    In my case, TV:SELECTED-WINDOW was too small to run the debugger; not 
    that it should have had to be big enough since it was only going to get 
    used for notification anyway. Notification takes only one or two lines,
    not five. Also, even if there hadn't been room for notification, the window
    had TV:POP-UP-NOTIFICATION-MIXIN, so its own size didn't matter anyway.

    The problem then, was that when TV:REASON-NOT-TO-USE-TERMINAL-IO-FOR-ERROR
    was called on the outer call, it was finding the erring window to be
    de-exposed so it recursed on TV:SELECTED-WINDOW to see if that was ok
    to notify you on. This second call returned "The window is too small",
    which was simply wrong. It should have returned NIL meaning things were fine.
    By returning the string, though, it forced the outer call to incorrectly
    claim "The window system is locked".

    The code in question was last modified by RWK as part of patch 222.30.
    A minimal patch seems to be to modify the first COND clause in
    TV:REASON-NOT-TO-USE-TERMINAL-IO-FOR-ERROR to check for (NOT RECURSION) 
    as in:

      (COND ((AND (NOT RECURSION)
		  (OR (< (SHEET-INSIDE-WIDTH SHEET) (* (SHEET-CHAR-WIDTH SHEET) 35.))
		      (< (SHEET-INSIDE-HEIGHT SHEET) (* (SHEET-LINE-HEIGHT SHEET) 5))))
	     "The window is too small")
	    ...)

    This only patches the symptom, though. It's effectively just an 
    acknowledgement that only one-third of that definition (the middle clause)
    is the part the recursive call wants to get ahold of. That code is enough of
    a mess, though, that I'd recommend just rewriting it, factoring out the
    middle clause of the COND under its own name so that the last clause can call
    it directly and forget about that silly RECURSION flag variable.
    -kmp
 1-Nov-83 22:40:33-EST,845;000000000000
Date: Tuesday, 1 November 1983, 22:43-EST
From: Henry Lieberman <Henry at MIT-OZ>
Subject: A mouse with a five-speed transmission?
To: Bug-Lispm at MIT-OZ, Works at MIT-OZ


I kid you not. 

I recently had a demo of CMU's son-of-Zog system on the
Perq.  One thing that was impressive about it was the mouse interaction.
They had adjusted their mouse software so that the distance the 
cursor moved in response to a unit distance movement of the mouse
varied with the speed of the mouse movement. If you tried to move the mouse
rapidly, it moved faster, good for getting the mouse across large screen distances 
quickly. If you moved it slowly, it moved more slowly, good for fine positioning.
They used five different speeds. It made the mouse feel a lot more responsive. 
How 'bout the same thing for the Lisp machines, folks?
 1-Nov-83 23:34:16-EST,1968;000000000000
Date: Tue, 1 Nov 83 23:34 EST
From: "Robert W. Kerns" <RWK@YUKON.SCRC.Symbolics>
Subject: Braindamaged system sources on OZ?
To: Tim McNerney <TIM@MIT-OZ.ARPA>
Cc: BUG-LISPM@MIT-OZ.ARPA
In-reply-to: The message of 31 Oct 83 04:20-EST from Tim McNerney <TIM at MIT-OZ>
Message-ID: <831101233431.6.RWK@YUKON.SCRC.Symbolics>

    Date: Monday, 31 October 1983, 04:20-EST
    From: Tim McNerney <TIM at MIT-OZ>
    Incidentally, it would be very helpful if Meta-. could dig up the source file
    that actually corresponds to the currently loaded system.  Unfortunately, the
    set of sources that we have on OZ appears to be a random "snapshot" of your
    sources, not corresponding to Rel 4 OR Rel 5.  Part of the problem stems from
    our having only one version of each source file.  I assume that this is because
    of limited file space on OZ.  I suppose that this becomes a moot point if you
    update all the sources when Rel 5 becomes sturdy enough to propagate throughout
    MIT.  Any suggestions?

As Moon pointed out, you'll be receiving sources for the Rel 5
Beta Rev 2 release very soon.  (You may already have them).  I do
not think they will be going onto OZ.  Perhaps Pygmalion; we'll
see.

The sources which were on OZ were unfortunately updated to an inconsistant
state by someone who mistakenly believed he was helping you by getting you
newer sources.  This won't happen again, and you'll have your very own
tape of the sources to load on as many machines as you like, or reload
whenever you like.

If desired, you can maintain separate copies of the sources for
each release.  Each minor release will come with updated source
files.  Thus 5.0 will have a complete set of sources, 5.1 will
have new copies of all source files modified between 5.0 and 5.1.
It is no longer necessary to search through patch files to figure
out which is the current version of a function; it will be in the
source you receive.
 1-Nov-83 23:57:31-EST,2005;000000000000
Received: from SCRC-EUPHRATES by SCRC-TENEX with CHAOS; Tue 1-Nov-83 23:58:39-EST
Date: Tuesday, 1 November 1983, 23:58-EST
From: "David A. Moon" <Moon at SCRC-TENEX>
Subject: A mouse with a five-speed transmission?
To: Henry Lieberman <Henry at MIT-OZ>
Cc: Bug-Lispm at MIT-OZ, Works at MIT-OZ
In-reply-to: The message of 1 Nov 83 22:43-EST from Henry Lieberman <Henry at MIT-OZ>

    Date: Tuesday, 1 November 1983, 22:43-EST
    From: Henry Lieberman <Henry at MIT-OZ>
    I kid you not. 

    I recently had a demo of CMU's son-of-Zog system on the
    Perq.  One thing that was impressive about it was the mouse interaction.
    They had adjusted their mouse software so that the distance the 
    cursor moved in response to a unit distance movement of the mouse
    varied with the speed of the mouse movement. If you tried to move the mouse
    rapidly, it moved faster, good for getting the mouse across large screen distances 
    quickly. If you moved it slowly, it moved more slowly, good for fine positioning.
    They used five different speeds. It made the mouse feel a lot more responsive. 
    How 'bout the same thing for the Lisp machines, folks?

This has existed on the CADR (LM-2) for many years.  Not on the 3600 yet,
unfortunately.  Probably it never got documented.  Example code that uses it
(found in my init file):

(DEFUN HAWLEY-MOUSE-HACK ()
  (MOUSE-SPEED-HACK 1 120 2))

;Aids to trying speed-dependent scaling
;Specs are scale-factor speed-break
;No attempt to treat X and Y differently
;Args of (1 120 2) seem to be about right for the Hawley mouse (10-second experiment)
(DEFUN MOUSE-SPEED-HACK (&REST SPECS)
  (LOOP FOR (SCALE SPEED) ON SPECS BY 'CDDR
	FOR I FROM 0 BY 2
	DO (ASET (OR SPEED 37777777) TV:MOUSE-X-SCALE-ARRAY I)
	   (ASET (OR SPEED 37777777) TV:MOUSE-Y-SCALE-ARRAY I)
	   (ASET (// (FIX (* 2 SCALE 1024.)) 3) TV:MOUSE-X-SCALE-ARRAY (1+ I))
	   (ASET (// (FIX (* 3 SCALE 1024.)) 5) TV:MOUSE-Y-SCALE-ARRAY (1+ I))))
 2-Nov-83 01:17:39-EST,1053;000000000000
Received: from SCRC-BLACKSTONE by SCRC-TENEX with CHAOS; Wed 2-Nov-83 01:20:33-EST
Date: Wednesday, 2 November 1983, 01:19-EST
From: RWK@SCRC-YUKON
Sender: Feinberg@SCRC-YUKON
Subject: A mouse with a five-speed transmission?
To: Henry@MIT-OZ
Cc: bug-lispm@MIT-OZ, works@MIT-OZ
In-reply-to: The message of 1 Nov 83 22:43-EST from Henry Lieberman <Henry at MIT-OZ>

    Date: Tuesday, 1 November 1983, 22:43-EST
    From: Henry Lieberman <Henry at MIT-OZ>
    They used five different speeds. It made the mouse feel a lot more responsive. 
    How 'bout the same thing for the Lisp machines, folks?
Lisp machines have been doing this for many years,
although it isn't implemented on the 3600 just yet.

See the variables tv:mouse-x-scale-array and tv:mouse-y-scale-array.

My experience is that it's OK, but not that much of an improvement.
In fact, occasionally it is rather a distraction.  A mouse with good
sensitivity (to cover the entire screen with a reasonable range of
movement) and smooth fine resolution is more important.
 2-Nov-83 10:33:52-EST,452;000000000000
Date: Wednesday, 2 November 1983, 11:40-EST
From: Patrick Odonnell <PAO at MIT-PYGMALION>
To: BUG-LISPM at MIT-OZ

In System 97.23, CADR 1.0, ZMail 51.9, MIT-Specific 21.0, microcode 257,
ZM MIT, on Lisp Machine Thirty-two:

Doing (make-system 'puma ':recompile ':selective) and answering "No" to
all queries to load files, I was somewhat surprized to notice that
make-system nevertheless loaded wnatever files it decided were
necessary.	

 2-Nov-83 10:39:42-EST,772;000000000000
Date: Wednesday, 2 November 1983, 11:49-EST
From: Patrick Odonnell <PAO at MIT-PYGMALION>
To: BUG-LISPM at MIT-OZ

In System 97.23, CADR 1.0, ZMail 51.9, MIT-Specific 21.0, microcode 257,
ZM MIT, on Lisp Machine Thirty-two:

Are GLOBAL:ART-FPS-FLOAT (for example) and USER:ART-FPS-FLOAT intended
to be distinct symbols?  I see that USER:ART-FPS-FLOAT is actually
inherited from the keyword package, and "no symbols are shared between
GLOBAL and KEYWORD packages".  However,

(SETQ FOO (MAKE-ARRAY NVALS ':TYPE 'ART-FPS-FLOAT))

works fine, yet,

(SELECTQ (ARRAY-TYPE FOO)
  (ART-FPS-FLOAT <do one thing>)
  (ART-16B <do the other>)
  (OTHERWISE (FERROR NIL "Bad array type: ~A" (ARRAY-TYPE FOO))))

takes the OTHERWISE clause, unexpectedly.
		- Pat
 2-Nov-83 11:45:22-EST,747;000000000000
Date: Wednesday, 2 November 1983, 11:43-EST
From: Tim McNerney <TIM at MIT-OZ>
Subject: Blinker VISIBILITY of :ON different than T?
To: BUG-LISPM at MIT-OZ

In Release 4.5, site configuration 57, on Lisp Machine Apiary-5:

Initializing a blinker's  VISIBILTIY to :ON
           and DESELECTED-VISIBILITY to T
causes the following (unexpected) behavior:
						   VISIBILITY

                                   After creation:   :ON
 After deselecting and then reselecting the sheet:   :BLINK
After again deselecting and reselecting the sheet:   T
                                       After that:   T

Is this supposed to happen?  I was under the impression that
for a blinker's VISIBILITY, :ON and T were essentially the same.
 2-Nov-83 15:32:01-EST,2718;000000000000
Date: Wednesday, 2 November 1983, 15:34-EST
From: David Vinayak Wallace <Gumby at MIT-OZ>
Subject: 4.5: compiler bug
To: BUG-LISPM at MIT-OZ

In Release 4.5, site configuration 65, on Lisp Machine Jim Morrison:

This first gave me the compiler warning that lexical scoping was not
implemented for the variable KEY (which I expected), but then bombed
out.  Is there any way to tell the compiler to make the two MY-VAR's the
same?  I don't like declaring them special.

(defun test-2 (table)
  (let ((my-var ()))
    (maphash #'(lambda (key ignore) (setq my-var (cons key my-var))) table)
    my-var))

>>Error: Cannot address the variable #<NORMAL-LEXICAL-VARIABLE 6672274>
While in the function COMPILER:USE-STACK-ADDRESSING-P  (PROPERTY COMPILER:VAR COMPILER:PEEP-HOLE-OPTIMIZER)  COMPILER:ASSEMBLE-INTERVAL
Error occurred while compiling NIL

COMPILER:USE-STACK-ADDRESSING-P:  (P.C. = 33)
   Arg 0 (VARIABLE): #<NORMAL-LEXICAL-VARIABLE 6672274>
   Arg 1 (LEVEL): 3.
   Arg 2 (LOCATION): 1.
   Local 3 (FUNCTION): #<EXTERNAL-FUNCTION 6672130>

(PROPERTY COMPILER:VAR COMPILER:PEEP-HOLE-OPTIMIZER):  (P.C. = 51)
   Arg 0 (INST): #<Inst (Var MY-VAR S.1)>

COMPILER:ASSEMBLE-INTERVAL:  (P.C. = 30)
   Arg 0 (INTERVAL): #<INTERVAL 6672402>

COMPILER:ASSEMBLE-FUNCTION:  (P.C. = 57)
   Arg 0 (FUNCTION): #<INTERNAL-FUNCTION 6672344>

MAPC:  (P.C. = 42)
   Arg 0 (FCN): COMPILER:ASSEMBLE-FUNCTION
   Rest arg (LISTS): ((#<EXTERNAL-FUNCTION 6672130>))

COMPILER:RUN-PHASE-4:  (P.C. = 4)

COMPILER:COMPILE-DEFINITION-1:  (P.C. = 57)
   Arg 0 (TYPE): DEFUN
   Arg 1 (FUNCTION-SPEC): TEST-2
   Arg 2 (LAMBDA-LIST): (TABLE)
   Arg 3 (DEBUG-INFO): NIL
   Arg 4 (DEFINITION): ((LET ((MY-VAR NIL)) (MAPHASH (FUNCTION **) TABLE) MY-VAR))
   Arg 5 (FIXUP-P): T

COMPILER:COMPILE-DEFINITION:  (P.C. = 46)
   Arg 0 (EXP): (DEFUN TEST-2 (TABLE) (LET ((MY-VAR NIL)) (MAPHASH (FUNCTION **) TABLE) MY-VAR))
   Arg 1 (FIXUP-P): T
   Arg 2 (DEBUG-INFO): NIL

Rest of stack:
(INTERNAL COMPILER:COMPILE-TO-CORE 0.):  (P.C. = 5)
COMPILER:COMPILE-TO-CORE:  (P.C. = 12)
COMPILER:COMPILE-FORM-FUNCTION:  (P.C. = 41)
COMPILER:COMPILE-FROM-STREAM-1:  (P.C. = 362)
COMPILER:PROCESS-FORMS-FROM-STREAM:  (P.C. = 114)
COMPILER:COMPILE-FROM-STREAM:  (P.C. = 250)
ZWEI:COMPILE-INTERVAL:  (P.C. = 124)
ZWEI:COMPILE-PRINT-INTERVAL:  (P.C. = 101)
ZWEI:COMPILE-DEFINITION-INTERNAL:  (P.C. = 104)
ZWEI:COM-COMPILE-REGION:  (P.C. = 5)
ZWEI:COMMAND-EXECUTE:  (P.C. = 65)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 20)
(METHOD ZWEI:EDITOR EDIT):  (P.C. = 173)
(METHOD ZWEI:TOP-LEVEL-EDITOR COMBINED EDIT):  (P.C. = 42)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
 2-Nov-83 15:53:53-EST,406;000000000000
Date: Wednesday, 2 November 1983, 15:56-EST
From: David Vinayak Wallace <Gumby at MIT-OZ>
Subject: sort question
To: BUG-LISPM at MIT-OZ

In Release 4.5, site configuration 65, on Lisp Machine Jim Morrison:

The Chinual says that SORT sorts cdr-coded lists like arrays.  Does this
mean I can use SORT for effect on cdr-coded lists?  I'm sorting large
lists, so I don't want to have to copy them.
 2-Nov-83 16:30:51-EST,1226;000000000000
Received: from SCRC-EUPHRATES by SCRC-TENEX with CHAOS; Wed 2-Nov-83 16:28:36-EST
Date: Wed, 2 Nov 83 16:27 EST
From: "David A. Moon" <Moon%SCRC-TENEX@MIT-MC.ARPA>
Subject: 4.5: compiler bug
To: David Vinayak Wallace <Gumby@OZ.ARPA>
Cc: BUG-LISPM@OZ.ARPA
In-reply-to: The message of 2 Nov 83 15:34-EST from David Vinayak Wallace <Gumby at MIT-OZ>

    Date: Wednesday, 2 November 1983, 15:34-EST
    From: David Vinayak Wallace <Gumby at MIT-OZ>
    In Release 4.5, site configuration 65, on Lisp Machine Jim Morrison:

    This first gave me the compiler warning that lexical scoping was not
    implemented for the variable KEY (which I expected), but then bombed
    out.  Is there any way to tell the compiler to make the two MY-VAR's the
    same?  I don't like declaring them special.

    (defun test-2 (table)
      (let ((my-var ()))
	(maphash #'(lambda (key ignore) (setq my-var (cons key my-var))) table)
	my-var))

The compiler blow out was fixed in Release 5.0.  Declaring things special
-is- the way you tell the compiler to make two variables the same!

An alternate answer to your question might be: there is a LOOP iteration
path named HASH-ELEMENTS; it has a WITH-KEY preposition.
 2-Nov-83 17:26:09-EST,3853;000000000000
Date: Wednesday, 2 November 1983, 17:28-EST
From: David Vinayak Wallace <GUMBY at MIT-MC>
Subject: >>Error: !UL byte record too large for user's buffer
To: BUG-LISPM at OZ

In Release 4.5, site configuration 57, on Lisp Machine Apiary-6:

Trying to do a copyf and I repeatedly get this error.  It's ather cryptic, to say the least!

>>Error: !UL byte record too large for user's buffer
For PIG:SYS$DISK:[KWH.ARLO]BELLS.VAS;2
While in the function (DEFUN-METHOD FS:FILE-PROCESS-ASYNC-MARK)  (DEFUN-METHOD FS:FILE-NEXT-READ-PKT)  (METHOD FS:FILE-INPUT-STREAM-MIXIN GET-NEXT-INPUT-PKT)

(DEFUN-METHOD FS:FILE-PROCESS-ASYNC-MARK):  (P.C. = 20)
   Arg 0 (SELF): #<FILE-INPUT-BINARY-STREAM "PIG:SYS$DISK:[KWH.ARLO]BELLS.VAS;2" 7211255>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:FILE-DATA-STREAM-MIXIN -- 6. IV's, 0. FL's 60527321>
   Arg 2 (PKT): #<CHAOS Packet 2213243>
   Local 3 (STRING): "I1871 ERROR MSC F !UL byte record too large for user's buffer"

(DEFUN-METHOD FS:FILE-NEXT-READ-PKT):  (P.C. = 70)
   Arg 0 (SELF): #<FILE-INPUT-BINARY-STREAM "PIG:SYS$DISK:[KWH.ARLO]BELLS.VAS;2" 7211255>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:FILE-INPUT-STREAM-MIXIN -- 5. IV's, 1. FL's 60527530>
   Arg 2 (NO-HANG-P): NIL
   Arg 3 (FOR-SYNC-MARK-P): NIL

(METHOD FS:FILE-INPUT-STREAM-MIXIN GET-NEXT-INPUT-PKT):  (P.C. = 17)
   Arg 0 (SELF): #<FILE-INPUT-BINARY-STREAM "PIG:SYS$DISK:[KWH.ARLO]BELLS.VAS;2" 7211255>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:FILE-INPUT-STREAM-MIXIN -- 5. IV's, 1. FL's 60527530>
   Arg 2 (OPERATION): GET-NEXT-INPUT-PKT
   Arg 3 (NO-HANG-P): NIL

(METHOD CHAOS:BINARY-INPUT-STREAM-MIXIN NEXT-INPUT-BUFFER):  (P.C. = 6)
   Arg 0 (SELF): #<FILE-INPUT-BINARY-STREAM "PIG:SYS$DISK:[KWH.ARLO]BELLS.VAS;2" 7211255>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor CHAOS:BINARY-INPUT-STREAM-MIXIN -- 1. IV's, 0. FL's 60527570>
   Arg 2 (OPERATION): NEXT-INPUT-BUFFER
   Arg 3 (NO-HANG-P): NIL

(METHOD SI:BASIC-BUFFERED-INPUT-STREAM SETUP-NEXT-INPUT-BUFFER):  (P.C. = 11)
   Arg 0 (SELF): #<FILE-INPUT-BINARY-STREAM "PIG:SYS$DISK:[KWH.ARLO]BELLS.VAS;2" 7211255>
   Arg 1: #<Map to flavor SI:BASIC-BUFFERED-INPUT-STREAM -- 3. IV's, 0. FL's 60527330>
   Arg 2: SETUP-NEXT-INPUT-BUFFER
   --Defaulted args:--
   Arg 3 (NO-HANG-P): NIL

(METHOD FS:FILE-INPUT-BINARY-STREAM COMBINED SETUP-NEXT-INPUT-BUFFER):  (P.C. = 13)
   Arg 0 (SELF): #<FILE-INPUT-BINARY-STREAM "PIG:SYS$DISK:[KWH.ARLO]BELLS.VAS;2" 7211255>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:FILE-INPUT-BINARY-STREAM -- 0. IV's, 5. FL's 60527540>
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

(METHOD SI:BUFFERED-INPUT-STREAM READ-INPUT-BUFFER):  (P.C. = 14)
   Arg 0 (SELF): #<FILE-INPUT-BINARY-STREAM "PIG:SYS$DISK:[KWH.ARLO]BELLS.VAS;2" 7211255>
   Arg 1: #<Map to flavor SI:BUFFERED-INPUT-STREAM -- 3. IV's, 0. FL's 60527602>
   Arg 2: READ-INPUT-BUFFER
   --Defaulted args:--
   Arg 3 (EOF): NIL

STREAM-COPY-UNTIL-EOF:  (P.C. = 31)
   Arg 0 (FROM-STREAM): #<FILE-INPUT-BINARY-STREAM "PIG:SYS$DISK:[KWH.ARLO]BELLS.VAS;2" 7211255>
   Arg 1 (TO-STREAM): #<LMFS-BINARY-OUTPUT-OPENING "AP6:>kwh>arlo>bells.vas.2" 7211661>
   --Defaulted args:--
   Arg 2 (LEADER-SIZE): NIL

Rest of stack:
COPYF:  (P.C. = 321)
COPIER:  (P.C. = 11)
MAPCAR:  (P.C. = 44)
SI:*EVAL:  (P.C. = 405)
ZWEI:EVAL-PRINT:  (P.C. = 3)
COMPILER:PROCESS-FORMS-FROM-STREAM:  (P.C. = 114)
ZWEI:COMPILE-INTERVAL:  (P.C. = 241)
ZWEI:COMPILE-PRINT-INTERVAL:  (P.C. = 101)
ZWEI:COMPILE-DEFINITION-INTERNAL:  (P.C. = 104)
ZWEI:COM-EVALUATE-REGION:  (P.C. = 7)
ZWEI:COMMAND-EXECUTE:  (P.C. = 65)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 20)
(METHOD ZWEI:EDITOR EDIT):  (P.C. = 173)
(METHOD ZWEI:TOP-LEVEL-EDITOR COMBINED EDIT):  (P.C. = 42)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
 2-Nov-83 17:35:14-EST,3111;000000000000
Date: Wednesday, 2 November 1983, 17:37-EST
From: David Vinayak Wallace <GUMBY at MIT-MC>
To: BUG-LISPM at OZ

In Release 4.5, site configuration 57, on Lisp Machine Apiary-6:

I don't understand why I am getting this error.  It should be CREATING
the file, not looking for it!

>>Error: The file was not found.
For AP6:>kwh>arlo>bells.vas.2
While in the function LMFS:OPEN-LOCAL-LMFS  (METHOD FS:LOCAL-LMFS-PATHNAME-MIXIN WHOPPER OPEN)  (METHOD FS:LMFS-PATHNAME COMBINED OPEN)

LMFS:OPEN-LOCAL-LMFS:  (P.C. = 637)
   Arg 0 (PATHNAME): #<LMFS-PATHNAME "AP6:>kwh>arlo>bells.vas.2">
   Arg 1 (LOGPATH): #<LMFS-PATHNAME "AP6:>kwh>arlo>bells.vas.2">
   Arg 2 (OPTIONS): (DIRECTION OUTPUT CHARACTERS NIL BYTE-SIZE NIL)
   Local 3 (MODE): WRITE
   Local 4 (TYPE): BINARY
   Local 5 (DELETED-P): NIL
   Local 6 (BYTE-SIZE): NIL
   Local 7 (FFLAVOR): NIL
   Local 8 (LINK-TO): NIL
   Local 9 (NEWFILE-OPT): T
   Local 10 (OLDFILE-OPT): NIL
   Local 11 (RANDOM-OPTIONS): (NAMEDUP-RENAME-DUP-DELETE BINARY)
   Local 12 (FULL-PROBE-OPENING): NIL

(METHOD FS:LOCAL-LMFS-PATHNAME-MIXIN WHOPPER OPEN):  (P.C. = 17)
   Arg 0 (SELF): #<LMFS-PATHNAME "AP6:>kwh>arlo>bells.vas.2">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:LOCAL-LMFS-PATHNAME-MIXIN -- 5. IV's, 1. FL's 53111000>
   Arg 2 (.WHOPPER-CONTINUATION.): #<DTP-COMPILED-FUNCTION (INTERNAL (METHOD FS:LMFS-PATHNAME COMBINED OPEN) 0) 5056116>
   Arg 3 (.OLD-SELF-MAPPING-TABLE.): #<Map to flavor FS:LMFS-PATHNAME -- 4. IV's, 13. FL's 60530660>
   Arg 4 (.OPERATION.): OPEN
   Arg 5 (PATH): #<LMFS-PATHNAME "AP6:>kwh>arlo>bells.vas.2">
   Rest arg (ARGS): (DIRECTION OUTPUT CHARACTERS NIL BYTE-SIZE NIL)

(METHOD FS:LMFS-PATHNAME COMBINED OPEN):  (P.C. = 12)
   Arg 0 (SELF): #<LMFS-PATHNAME "AP6:>kwh>arlo>bells.vas.2">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:LMFS-PATHNAME -- 4. IV's, 13. FL's 60530660>
   Rest arg (.DAEMON-CALLER-ARGS.): (OPEN #<LMFS-PATHNAME "AP6:>kwh>arlo>bells.vas.2"> DIRECTION OUTPUT CHARACTERS NIL BYTE-SIZE NIL)

OPEN:  (P.C. = 303)
   Arg 0 (PATHNAME): #<LMFS-PATHNAME "AP6:>kwh>arlo>bells.vas.2">
   Rest arg (KEYWORD-ARGS): (DIRECTION OUTPUT CHARACTERS NIL BYTE-SIZE NIL)

COPYF:  (P.C. = 313)
   Arg 0 (FROM-PATHNAME): "PIG:[KWH.ARLO]BELLS.VAS;2"
   Arg 1 (TO-PATHNAME): #<LMFS-PATHNAME "AP6:>kwh>arlo>bells.vas.2">
   Rest arg: NIL

COPIER:  (P.C. = 11)
   Arg 0 (FILE): "PIG:[KWH.ARLO]BELLS.VAS;2"

SI:*EVAL:  (P.C. = 405)
   Arg 0 (FORM): (COPIER "PIG:[KWH.ARLO]BELLS.VAS;2")

ZWEI:EVAL-PRINT:  (P.C. = 3)
   Arg 0 (OBJECT): (COPIER "PIG:[KWH.ARLO]BELLS.VAS;2")

Rest of stack:
COMPILER:PROCESS-FORMS-FROM-STREAM:  (P.C. = 114)
ZWEI:COMPILE-INTERVAL:  (P.C. = 241)
ZWEI:COMPILE-PRINT-INTERVAL:  (P.C. = 101)
ZWEI:COMPILE-DEFINITION-INTERNAL:  (P.C. = 104)
ZWEI:COM-EVALUATE-REGION:  (P.C. = 7)
ZWEI:COMMAND-EXECUTE:  (P.C. = 65)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 20)
(METHOD ZWEI:EDITOR EDIT):  (P.C. = 173)
(METHOD ZWEI:TOP-LEVEL-EDITOR COMBINED EDIT):  (P.C. = 42)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
 2-Nov-83 18:34:19-EST,1404;000000000000
Received: from SCRC-THAMES by SCRC-QUABBIN with CHAOS; Wed 2-Nov-83 18:32:12-EST
Date: Wednesday, 2 November 1983, 18:37-EST
From: Scott W McKay <SWM at SCRC-VIXEN>
Subject: >>Error: !UL byte record too large for user's buffer
To: GUMBY at MIT-MC, BUG-LISPM at MIT-OZ, bug-vms at SCRC-VIXEN
In-reply-to: The message of 2 Nov 83 17:28-EST from David Vinayak Wallace <GUMBY at MIT-MC>

    Date: Wednesday, 2 November 1983, 17:28-EST
    From: David Vinayak Wallace <GUMBY at MIT-MC>
    In Release 4.5, site configuration 57, on Lisp Machine Apiary-6:

    Trying to do a copyf and I repeatedly get this error.  It's ather cryptic, to say the least!

    >>Error: !UL byte record too large for user's buffer
    For PIG:SYS$DISK:[KWH.ARLO]BELLS.VAS;2
    While in the function (DEFUN-METHOD FS:FILE-PROCESS-ASYNC-MARK)  (DEFUN-METHOD FS:FILE-NEXT-READ-PKT)  (METHOD FS:FILE-INPUT-STREAM-MIXIN GET-NEXT-INPUT-PKT)

Well, I thought we had got all the $FAO bugs out.  That's where the !UL
is coming from.  On the other hand, the file BELLS.VAS must have a
fairly large RMS record size.  Unfortunately, the FILE server only
handles recordsizes of 2048 bytes.  Perhaps I should bite the bullet
and just give the FILE server massive buffers.  The /real/ bug is
that on VMS you cannot read an arbitrary file as a byte stream...
flame, flame...

BTW, this should have gone to BUG-VMS.
 2-Nov-83 19:31:07-EST,3665;000000000000
Date: Wednesday, 2 November 1983, 19:33-EST
From: David Vinayak Wallace <Gumby at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In Release 4.5, site configuration 65, on Lisp Machine Jim Morrison:

I was saving this buffer zwei said it had unbalanced ()'s.  So I said to
abort the save.  This error results.  What then happens is that you
can't write any more files to that machine.  CHAOS:RESET and ENABLE
fixes things.  This is very repeatable.

>>Error: Illegal File Handle, not open
For PIG:SYS$DISK:[GUMBY.LISPM]ATSIGN.LSP
While in the function (METHOD FS:HOST-UNIT COMMAND)  (METHOD FS:FILE-DATA-STREAM-MIXIN COMMAND)  (METHOD FS:FILE-OUTPUT-STREAM-MIXIN REAL-CLOSE)

(METHOD FS:HOST-UNIT COMMAND):  (P.C. = 245)
   Arg 0 (SELF): #<HOST-UNIT 10133241>
   Arg 1 (SELF-MAPPING-TABLE): FS:HOST-UNIT
   Arg 2 (OPERATION): COMMAND
   Arg 3 (MARK-P): NIL
   Arg 4 (STREAM-OR-HANDLE): #<FILE-OUTPUT-CHARACTER-STREAM "PIG:SYS$DISK:[GUMBY.LISPM]ATSIGN.LSP" 12434156>
   Arg 5 (SIMPLE-P): NIL
   Arg 6 (WHOSTATE): "Delete"
   Rest arg (COMMANDS): NIL
   Local 8 (HANDLE): "O2049"
   Local 9 (STREAM): #<FILE-OUTPUT-CHARACTER-STREAM "PIG:SYS$DISK:[GUMBY.LISPM]ATSIGN.LSP" 12434156>
   Local 10 (PKT): #<CHAOS Packet 11514635>
   Local 11 (SUCCESS): NIL
   Local 12 (STRING): "O2049 ERROR MSC C Illegal File Handle, not open"
   Local 13 (TRANSACTION-ID): "T2059"
   Local 14 (CREATE-P): NIL
   Local 15 (CONDITION): NIL

(METHOD FS:FILE-DATA-STREAM-MIXIN COMMAND):  (P.C. = 15)
   Arg 0 (SELF): #<FILE-OUTPUT-CHARACTER-STREAM "PIG:SYS$DISK:[GUMBY.LISPM]ATSIGN.LSP" 12434156>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:FILE-DATA-STREAM-MIXIN -- 6. IV's, 0. FL's 60527362>
   Arg 2 (OPERATION): COMMAND
   Arg 3 (MARK-P): NIL
   Arg 4 (WHOSTATE): "Delete"
   Arg 5 (COM): "DELETE"
   Rest arg (STRINGS): NIL

(METHOD FS:FILE-OUTPUT-STREAM-MIXIN REAL-CLOSE):  (P.C. = 42)
   Arg 0 (SELF): #<FILE-OUTPUT-CHARACTER-STREAM "PIG:SYS$DISK:[GUMBY.LISPM]ATSIGN.LSP" 12434156>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:FILE-OUTPUT-STREAM-MIXIN -- 6. IV's, 1. FL's 60527352>
   Arg 2 (OPERATION): REAL-CLOSE
   Arg 3 (ABORTP): ABORT

(METHOD FS:FILE-DATA-STREAM-MIXIN CLOSE):  (P.C. = 27)
   Arg 0 (SELF): #<FILE-OUTPUT-CHARACTER-STREAM "PIG:SYS$DISK:[GUMBY.LISPM]ATSIGN.LSP" 12434156>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:FILE-DATA-STREAM-MIXIN -- 6. IV's, 0. FL's 60527362>
   Arg 2 (OPERATION): CLOSE
   Arg 3 (ABORTP): ABORT

(METHOD FS:FILE-OUTPUT-CHARACTER-STREAM COMBINED CLOSE):  (P.C. = 22)
   Arg 0 (SELF): #<FILE-OUTPUT-CHARACTER-STREAM "PIG:SYS$DISK:[GUMBY.LISPM]ATSIGN.LSP" 12434156>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:FILE-OUTPUT-CHARACTER-STREAM -- 0. IV's, 6. FL's 60527622>
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

(METHOD ZWEI:FILE-BUFFER-MIXIN SAVE):  (P.C. = 147)
   Arg 0 (SELF): #<FILE-BUFFER "ATSIGN.LSP SYS$DISK:[GUMBY.LISPM] PIG:" 11500104>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:FILE-BUFFER-MIXIN -- 9. IV's, 0. FL's 61305555>
   Arg 2 (OPERATION): SAVE

ZWEI:SAVE-BUFFER:
   Arg 0 (BUFFER): #<FILE-BUFFER "ATSIGN.LSP SYS$DISK:[GUMBY.LISPM] PIG:" 11500104>

ZWEI:COM-SAVE-FILE:  (P.C. = 15)

Rest of stack:
ZWEI:COMMAND-EXECUTE:  (P.C. = 65)
ZWEI:MAKE-EXTENDED-COMMAND-INTERNAL:  (P.C. = 106)
SYS:CALL-FUNNY-FUNCTION:  (P.C. = 73)
Closure of ZWEI:MAKE-EXTENDED-COMMAND-INTERNAL:
ZWEI:COMMAND-EXECUTE:  (P.C. = 65)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 20)
(METHOD ZWEI:EDITOR EDIT):  (P.C. = 173)
(METHOD ZWEI:TOP-LEVEL-EDITOR COMBINED EDIT):  (P.C. = 42)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
 2-Nov-83 19:43:36-EST,1390;000000000000
Received: from SCRC-EUPHRATES by SCRC-TENEX with CHAOS; Wed 2-Nov-83 19:43:17-EST
Date: Wed, 2 Nov 83 19:42 EST
From: "David A. Moon" <Moon%SCRC-TENEX@MIT-MC.ARPA>
Subject: sort question
To: David Vinayak Wallace <Gumby@OZ.ARPA>
Cc: BUG-LISPM@OZ.ARPA
In-reply-to: The message of 2 Nov 83 15:56-EST from David Vinayak Wallace <Gumby at MIT-OZ>

    Date: Wednesday, 2 November 1983, 15:56-EST
    From: David Vinayak Wallace <Gumby at MIT-OZ>
    In Release 4.5, site configuration 65, on Lisp Machine Jim Morrison:

    The Chinual says that SORT sorts cdr-coded lists like arrays.  Does this
    mean I can use SORT for effect on cdr-coded lists?  I'm sorting large
    lists, so I don't want to have to copy them.

It means that if you are absolutely sure that the list is fully cdr-coded,
then the value of SORT will be EQ to its first argument.

It is generally a bad idea to use SORT for effect.  This has nothing to do
with copying of lists; the result of SORT will either be EQ to its first
argument or EQ to some piece of its first argument, but it's generally risky
to depend on which it is.

But maybe you didn't really mean copying at all; maybe you really meant that
you didn't want to have to find all the references to the old list and change
them to refer to the sorted list, if you can rely on the two being EQ.  You can
do that, but it's risky.
 3-Nov-83 07:21:38-EST,1037;000000000000
Date: Thursday, 3 November 1983, 07:24-EST
From: David Vinayak Wallace <Gumby at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In Release 4.5, site configuration 65, on Lisp Machine Jim Morrison:

Disassemble should not pay attention to the current value of base when
printing branch locations.  The following disassembly was very confusing
at first (look at line 6).

FOO2  0 ENTRY: 0. REQUIRED, 0. OPTIONAL
  1 CALL-0-STACK #'TEST-1
  2 BRANCH-FALSE 5.
  3 PUSH-N-NILS 1.
  4 RETURN-STACK 
  5 CALL-0-STACK #'TEST-2
  6 BRANCH-TRUE 9.
  7 CALL-0-STACK #'TEST-3
 10 BRANCH-FALSE 11.
 11 PUSH-CONSTANT 'T
 12 RETURN-STACK 
 13 PUSH-N-NILS 1.
 14 RETURN-STACK 

Also: could the compiler optimise the following case:

(cond ((test-1)
       nil)
      ((test-2)
       t)
      ((test-3)
       t))

Into 
(cond ((test-1)
       nil)
      ((or (test-2)
	   (test-3))
       t))

The first is sometimes clearer to write.  Perhaps this is unreasonable;
I don't know anything about compiler optimising.

david
 3-Nov-83 08:11:30-EST,960;000000000000
Received: from SCRC-MUDDY by SCRC-TENEX with CHAOS; Thu 3-Nov-83 08:08:17-EST
Date: Thursday, 3 November 1983, 08:07-EST
From: Bruce Edwards <BEE@SCRC-TENEX>
Subject: 4.5: compiler bug
To: Gumby@MIT-OZ, Moon%SCRC-TENEX@MIT-MC, BUG-LISPM@MIT-OZ
In-reply-to: The message of 2 Nov 83 15:34-EST from David Vinayak Wallace <Gumby at MIT-OZ>,
             The message of 2 Nov 83 16:27-EST from "David A. Moon" <Moon%SCRC-TENEX at MIT-MC>

The maphash function (in rev5) and the :map-hash message to hash tables
(in both systems) takes (function &rest args) the args are appended to
normal key value args calling the function supplied. For example I could
write your function as:

(defun test-2 (table)
  (let ((my-var ())
	(var-loc (locf my-var)))
    (maphash #'(lambda (key ignore var-loc)
		 (push key (car var-loc)))
	     table var-loc)
    my-var))

Slightly more obscure, but function. As Moon points out the LOOP path
will also work.
 3-Nov-83 11:11:24-EST,655;000000000000
Date: Thursday, 3 November 1983  11:14-EST
From: DCP at SCRC-TENEX
To:   David Vinayak Wallace <Gumby at MIT-OZ>
Cc:   BUG-LISPM at MIT-OZ
In-reply-to: The message of 3 Nov 1983 07:24-EST from David Vinayak Wallace <Gumby at MIT-OZ>

    Date: Thursday, 3 November 1983, 07:24-EST
    From: David Vinayak Wallace <Gumby at MIT-OZ>

    In Release 4.5, site configuration 65, on Lisp Machine Jim Morrison:

    Disassemble should not pay attention to the current value of base when
    printing branch locations.  The following disassembly was very confusing
    at first (look at line 6).

Fixed loooooong ago.  Check it out in Release 5.
 3-Nov-83 11:46:00-EST,655;000000000000
Date: Thursday, 3 November 1983  11:14-EST
From: DCP at SCRC-TENEX
To:   David Vinayak Wallace <Gumby at MIT-OZ>
Cc:   BUG-LISPM at MIT-OZ
In-reply-to: The message of 3 Nov 1983 07:24-EST from David Vinayak Wallace <Gumby at MIT-OZ>

    Date: Thursday, 3 November 1983, 07:24-EST
    From: David Vinayak Wallace <Gumby at MIT-OZ>

    In Release 4.5, site configuration 65, on Lisp Machine Jim Morrison:

    Disassemble should not pay attention to the current value of base when
    printing branch locations.  The following disassembly was very confusing
    at first (look at line 6).

Fixed loooooong ago.  Check it out in Release 5.
 3-Nov-83 21:44:07-EST,10894;000000000000
Date: Thursday, 3 November 1983, 22:52-EST
From: JCMA@MIT-OZ
Subject: TCP and namespace bug?
To: BUG-LISPM@MIT-OZ

In Release 5.0 [GC'd Beta Test rev 2], Experimental RELATUS 7.2, on Lisp Machine Keith Moon (3600):

tried to send mail.

>>Error: Bad SMTP reply (expected 250). 550 Sorry, I never heard of a domain named "MOON.MIT"
         .
While in the function ZWEI:SMTP-CHECK-REPLY  ZWEI:SMTP-MAILER  ZWEI:SMTP-MAIL-INTERNAL

ZWEI:SMTP-CHECK-REPLY:  (P.C. = 103)
   Arg 0 (STREAM): #<TCP Connection to PARC-MAXC port 25 via ML 31060423>
   Arg 1 (EXPECTED): 250.
   Arg 2 (FORMAT): "~A From:<~A>"
   Rest arg (ARGS): ("MAIL" "JCMa@MOON.MIT")
   Local 4 (REPLY): "550 Sorry, I never heard of a domain named /"MOON.MIT/"
"
   Local 5 (LINE): "550 Sorry, I never heard of a domain named /"MOON.MIT/""
   Local 6 (EOF): NIL
   Local 7 (NUM): 550.
   Local 8 (DELIM): 3.

ZWEI:SMTP-MAILER:  (P.C. = 31)
   Arg 0 (PATH): #<SERVICE-ACCESS-PATH STORE-AND-FORWARD-MAIL (SMTP) -- PARC-MAXC (via ML on CHAOS or via MC on CHAOS) 31057673>
   Arg 1 (CMD): "MAIL"
   Arg 2 (FROM): (:NAME "JCMa" :HOST (:OBJECT #<LISPM-HOST MOON 12300721>))
   Arg 3 (TO): ((:NAME "LLi.es" :HOST (:OBJECT #<TENEX-HOST PARC-MAXC 30763224>) :INTERVAL (("To: LLi.es@PARC-MAXC" 4.) ("To: LLi.es@PARC-MAXC" 20.))))
   Arg 4 (MESSAGE): "Date: Thursday, 3 November 1983, 22:50-EST
From: JCMA@MIT-AI
Subject: Request to Join the List
To: LLi.es@PARC-MAXC
Cc: PHIL-SCI-REQUEST@MIT-MC
In-reply-to: The message of 3 Nov 83 19:16-EST from LLi.es at PARC-MAXC

    Date: Thu, 3 Nov 83 16:16 PST
    From: LLi.es@PARC-MAXC.ARPA
    Subject: Request to Join the List
    To: PHIL-SCI-REQUEST@MIT-MC.ARPA
    cc: LLi.es@PARC-MAXC.ARPA

    Please add my name to the List, and remove Li.WBST@PARC-MAXC (my old net
    address) if it still exists on your distribution list.  Thanks.

    Leonard Li.  Xerox Corporation. 701 S. Aviation Blvd. El Segundo, CA
    90245.

    (213) 536-7985.
Done.
"

ZWEI:SMTP-MAIL-INTERNAL:  (P.C. = 54)
   Arg 0 (PATH): #<SERVICE-ACCESS-PATH STORE-AND-FORWARD-MAIL (SMTP) -- PARC-MAXC (via ML on CHAOS or via MC on CHAOS) 31057673>

ZWEI:INVOKE-SERVICE-STORE-AND-FORWARD-MAIL-WITH-SMTP:  (P.C. = 3)
   Arg 0 (PATH): #<SERVICE-ACCESS-PATH STORE-AND-FORWARD-MAIL (SMTP) -- PARC-MAXC (via ML on CHAOS or via MC on CHAOS) 31057673>

NET:INVOKE-SERVICE-ACCESS-PATH:  (P.C. = 21)
   Arg 0 (SERVICE-ACCESS-PATH): #<SERVICE-ACCESS-PATH STORE-AND-FORWARD-MAIL (SMTP) -- PARC-MAXC (via ML on CHAOS or via MC on CHAOS) 31057673>
   Arg 1 (SERVICE-ARGS): (((:NAME "LLi.es" :HOST (:OBJECT #<TENEX-HOST PARC-MAXC 30763224>) :INTERVAL (** **))) (:MULTIPLE-SENDINGS T :TEXT #<NODE 31056712> :HEADERS (:DATE 2645754608. :FROM (**) :SUBJECT "Request to Join the List" :TO (**) :CC (**) ...) :HEADER-FORMAT :SHORT :TRANSMIT-TIME 2645754608. ...))

ZWEI:INVOKE-SERVICE-STORE-AND-FORWARD-MAIL-WITH-DUMMY-MAILER:  (P.C. = 573)
   Arg 0 (SERVICE): #<SERVICE-ACCESS-PATH STORE-AND-FORWARD-MAIL (DUMMY-MAILER) -- MOON locally 31057577>

NET:INVOKE-SERVICE-ACCESS-PATH:  (P.C. = 21)
   Arg 0 (SERVICE-ACCESS-PATH): #<SERVICE-ACCESS-PATH STORE-AND-FORWARD-MAIL (DUMMY-MAILER) -- MOON locally 31057577>
   Arg 1 (SERVICE-ARGS): (((:NAME "LLi.es" :HOST (:OBJECT #<TENEX-HOST PARC-MAXC 30763224>) :INTERVAL (** **)) (:NAME "PHIL-SCI-REQUEST" :HOST (:OBJECT #<ITS-HOST MC 12277271>) :INTERVAL (** **))) (:TEXT #<NODE 31056712> :HEADERS (:DATE 2645754608. :FROM (**) :SUBJECT "Request to Join the List" :TO (**) :CC (**) ...) :HEADER-FORMAT :SHORT :TRANSMIT-TIME 2645754608. :DRAFT-MSG #<DRAFT-MSG 31056350>))

ZWEI:NETWORK-SEND-IT:  (P.C. = 152)
   Arg 0 (RECIPIENTS): ((:NAME "LLi.es" :HOST (:OBJECT #<TENEX-HOST PARC-MAXC 30763224>) :INTERVAL (("To: LLi.es@PARC-MAXC" 4.) ("To: LLi.es@PARC-MAXC" 20.))) (:NAME "PHIL-SCI-REQUEST" :HOST (:OBJECT #<ITS-HOST MC 12277271>) :INTERVAL (("Cc: PHIL-SCI-REQUEST@MIT-MC" 4.) ("Cc: PHIL-SCI-REQUEST@MIT-MC" 27.))))
   Arg 1 (TEMPLATE-EXPANSION): (:TEXT #<NODE 31056712> :HEADERS (:DATE 2645754608. :FROM ((:HOST ** :PERSONAL-NAME "John C. Mallery" :NAME "JCMA")) :SUBJECT "Request to Join the List" :TO ((:NAME "LLi.es" :HOST ** :INTERVAL **)) :CC ((:NAME "PHIL-SCI-REQUEST" :HOST ** :INTERVAL **)) ...) :HEADER-FORMAT :SHORT :TRANSMIT-TIME 2645754608. :DRAFT-MSG #<DRAFT-MSG 31056350>)

ZWEI:FUNCALL-TEMPLATE-EXPANSION:  (P.C. = 47)
   Arg 0 (TEMPLATE-EXPANSION): (:TEXT #<NODE 31056712> :HEADERS (:DATE 2645754608. :FROM ((:HOST ** :PERSONAL-NAME "John C. Mallery" :NAME "JCMA")) :SUBJECT "Request to Join the List" :TO ((:NAME "LLi.es" :HOST ** :INTERVAL **)) :CC ((:NAME "PHIL-SCI-REQUEST" :HOST ** :INTERVAL **)) ...) :HEADER-FORMAT :SHORT :TRANSMIT-TIME 2645754608. :DRAFT-MSG #<DRAFT-MSG 31056350>)
   Arg 1 (FUNCTION): ZWEI:NETWORK-SEND-IT
   Rest arg (ARGS): (((:NAME "LLi.es" :HOST (:OBJECT #<TENEX-HOST PARC-MAXC 30763224>) :INTERVAL (** **)) (:NAME "PHIL-SCI-REQUEST" :HOST (:OBJECT #<ITS-HOST MC 12277271>) :INTERVAL (** **))) (:TEXT #<NODE 31056712> :HEADERS (:DATE 2645754608. :FROM (**) :SUBJECT "Request to Join the List" :TO (**) :CC (**) ...) :HEADER-FORMAT :SHORT :TRANSMIT-TIME 2645754608. :DRAFT-MSG #<DRAFT-MSG 31056350>))

(:METHOD ZWEI:BASIC-DRAFT-MSG :TRANSMIT):  (P.C. = 314)
   Arg 0 (SELF): #<DRAFT-MSG 31056350>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:BASIC-DRAFT-MSG -- 6. IV's, 0. FL's 24444312>
   Arg 2 (OPERATION): :TRANSMIT

(:METHOD ZWEI:DRAFT-MSG :COMBINED :TRANSMIT):  (P.C. = 25)
   Arg 0 (SELF): #<DRAFT-MSG 31056350>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:DRAFT-MSG -- 16. IV's, 3. FL's 24444273>
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

ZWEI:COM-SEND-MESSAGE:  (P.C. = 46)

ZWEI:COM-MAIL-END:  (P.C. = 4)

ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
   Arg 0 (COMMAND): ZWEI:COM-MAIL-END
   Arg 1 (CHAR): 148.
   Arg 2 (PREFIX-CHAR): NIL
   Arg 3 (HOOK-LIST): NIL

ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
   Arg 0 (CH): 148.

(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 200)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 2500161 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:EDITOR -- 11. IV's, 0. FL's 16477720>
   Arg 2 (OPERATION): :EDIT
   --Defaulted args:--
   Arg 3 (TOP-LEVEL-P): T
   Arg 4 (DESCRIPTION): NIL

(:METHOD ZWEI:ZMAIL-FRAME :COMBINED :EDIT):  (P.C. = 50)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 2500161 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-FRAME -- 60. IV's, 20. FL's 16477632>
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

(:DEFUN-METHOD ZWEI:ZMAIL-MAIL):  (P.C. = 77)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 2500161 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-FRAME -- 60. IV's, 20. FL's 16477632>
   Arg 2 (CONFIGURATION): :MAIL
   Arg 3 (STARTING-WINDOW): #<WINDOW 12043232>

ZWEI:ZMAIL-MAIL:  (P.C. = 12)
   Rest arg (ARGS): (:MAIL #<WINDOW 12043232>)

ZWEI:CONTINUE-DRAFT-MSG:  (P.C. = 21)
   Arg 0 (DRAFT-MSG): #<DRAFT-MSG 31056350>

ZWEI:COMPOSE-VIA-DRAFT-MSG:  (P.C. = 5)
   Arg 0 (TEMPLATE-EXPANSION): (:HEADER-FORMAT :SHORT :HEADERS (:TO ((:NAME "LLi.es" :HOST ** :INTERVAL **)) :CC ((:NAME "PHIL-SCI-REQUEST" :HOST ** :INTERVAL **)) :SUBJECT "Request to Join the List" :IN-REPLY-TO ((:DATE 2645741760. :FROM **))) :WINDOW-CONFIGURATION :MAIL :TEXT #<NODE 31056310> :DONT-REPLY-TO ("info-*") ...)

ZWEI:FUNCALL-TEMPLATE-EXPANSION:  (P.C. = 47)
   Arg 0 (TEMPLATE-EXPANSION): (:HEADER-FORMAT :SHORT :HEADERS (:TO ((:NAME "LLi.es" :HOST ** :INTERVAL **)) :CC ((:NAME "PHIL-SCI-REQUEST" :HOST ** :INTERVAL **)) :SUBJECT "Request to Join the List" :IN-REPLY-TO ((:DATE 2645741760. :FROM **))) :WINDOW-CONFIGURATION :MAIL :TEXT #<NODE 31056310> :DONT-REPLY-TO ("info-*") ...)
   Arg 1 (FUNCTION): #<DTP-COMPILED-FUNCTION ZWEI:COMPOSE-VIA-DRAFT-MSG 31650100>
   Rest arg (ARGS): ((:HEADER-FORMAT :SHORT :HEADERS (:TO (**) :CC (**) :SUBJECT "Request to Join the List" :IN-REPLY-TO (**)) :WINDOW-CONFIGURATION :MAIL :TEXT #<NODE 31056310> :DONT-REPLY-TO ("info-*") ...))

ZWEI:COMPOSE-FROM-TEMPLATE:  (P.C. = 20)
   Arg 0 (TEMPLATE): ZWEI:REPLY-TEMPLATE
   Rest arg (PLIST): (:MSGS (#<MSG 17440322>))

ZWEI:NORMAL-REPLY-INTERNAL:  (P.C. = 54)
   Arg 0 (MSGS): (#<MSG 17440322>)

ZWEI:NORMAL-REPLY:  (P.C. = 5)
   Rest arg (MSGS): (#<MSG 17440322>)

ZWEI:COM-ZMAIL-REPLY:  (P.C. = 20)

ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
   Arg 0 (COMMAND): ZWEI:COM-ZMAIL-REPLY
   Arg 1 (CHAR): 114.
   --Defaulted args:--
   Arg 2 (PREFIX-CHAR): NIL
   Arg 3 (HOOK-LIST): NIL

ZWEI:ZMAIL-COMMAND-EXECUTE:  (P.C. = 6)
   Arg 0 (*CURRENT-COMMAND*-initialization): ZWEI:COM-ZMAIL-REPLY

(:METHOD ZWEI:ZMAIL-FRAME :PROCESS-COMMAND-CHAR):  (P.C. = 7)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 2500161 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-FRAME -- 60. IV's, 20. FL's 16477632>
   Arg 2 (OPERATION): :PROCESS-COMMAND-CHAR
   Arg 3 (CH): 114.

(:INTERNAL (:METHOD ZWEI:ZMAIL-FRAME :COMBINED :PROCESS-COMMAND-CHAR) 0.):  (P.C. = 7)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 2500161 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-FRAME -- 60. IV's, 20. FL's 16477632>
   Rest arg (.DAEMON-CALLER-ARGS.): (:PROCESS-COMMAND-CHAR 114.)

(:METHOD ZWEI:ZMAIL-COMMAND-LOOP-MIXIN :WHOPPER :PROCESS-COMMAND-CHAR):  (P.C. = 21)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 2500161 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-COMMAND-LOOP-MIXIN -- 10. IV's, 1. FL's 16477744>
   Arg 2 (.WHOPPER-CONTINUATION.): #<DTP-COMPILED-FUNCTION (:INTERNAL (:METHOD ZWEI:ZMAIL-FRAME :COMBINED :PROCESS-COMMAND-CHAR) 0.) 31755706>
   Arg 3 (.OLD-SELF-MAPPING-TABLE.): #<Map to flavor ZWEI:ZMAIL-FRAME -- 60. IV's, 20. FL's 16477632>
   Arg 4 (.OPERATION.): :PROCESS-COMMAND-CHAR
   Arg 5 (CHAR): 114.

(:METHOD ZWEI:ZMAIL-FRAME :COMBINED :PROCESS-COMMAND-CHAR):  (P.C. = 12)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 2500161 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-FRAME -- 60. IV's, 20. FL's 16477632>
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

(:METHOD ZWEI:ZMAIL-FRAME :COMMAND-LOOP):  (P.C. = 135)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 2500161 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-FRAME -- 60. IV's, 20. FL's 16477632>
   Arg 2 (OPERATION): :COMMAND-LOOP

(:METHOD ZWEI:ZMAIL-FRAME :COMBINED :COMMAND-LOOP):  (P.C. = 43)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 2500161 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-FRAME -- 60. IV's, 20. FL's 16477632>
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

ZWEI:ZMAIL-PROCESS-TOP-LEVEL:  (P.C. = 52)
   Arg 0 (WINDOW): #<ZMAIL-FRAME Main Zmail Window 2500161 exposed>

SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
   --Defaulted args:--
   Arg 0 (IGNORE): NIL
 3-Nov-83 22:20:24-EST,1134;000000000000
Date: Thursday, 3 November 1983  22:17-EST
From: DCP at SCRC-TENEX
To:   JCMA at MIT-OZ
Cc:   BUG-LISPM at MIT-OZ, Maint at SCRC-TENEX
Subject: TCP and namespace bug?
In-reply-to: The message of 3 Nov 1983 22:52-EST from JCMA at MIT-OZ

    Date: Thursday, 3 November 1983, 22:52-EST
    From: JCMA@MIT-OZ

    In Release 5.0 [GC'd Beta Test rev 2], Experimental RELATUS 7.2, on Lisp Machine Keith Moon (3600):

    tried to send mail.

    >>Error: Bad SMTP reply (expected 250). 550 Sorry, I never heard of a domain named "MOON.MIT"
             .
    While in the function ZWEI:SMTP-CHECK-REPLY  ZWEI:SMTP-MAILER  ZWEI:SMTP-MAIL-INTERNAL

Mostly a (big I) Internet admistration bug not assigning (allowing?)
domains other than .ARPA.  The version of the Lisp software you have
appears to insist on domains in some cases.  I think we just made a
243 patch to take away domain names because of MM or something.

Thanks for reporting this, that's part of beta test.  My inclination
would be not to do domain names (yet) since there are obviously hosts
out there that aren't "liberal in what they receive".
 4-Nov-83 03:41:08-EST,667;000000000000
Date: Friday, 4 November 1983, 03:43-EST
From: Kent M. Pitman <kmp at MIT-MC>
Subject: Wraparound of mouse sensitive typeout in ZWEI
To: BUG-LISPM at MC

In ZWEI in Release 4.5, ..., on PA Lisp Machine Avatar:

If I type Help C and document a command which has a long name
such that the name of the implementing function wraps around
over the end of the line, neither the part before nor the part
after the wraparound is mouse sensitive.  It would be useful if
at least the half of the text on one line or the other were
mouse sensitive; I have seen this in other contexts and while I
find it unaesthetic, I have to agree it is far better than nothing.
 4-Nov-83 03:55:25-EST,1839;000000000000
Date: Friday, 4 November 1983, 03:57-EST
From: Christopher C. Stacy <CSTACY at MIT-MC>
Subject: TCP and namespace bug?
To: DCP at SCRC-TENEX
Cc: JCMA at MIT-OZ, BUG-LISPM at MIT-OZ, Maint at SCRC-TENEX
In-reply-to: The message of 3 Nov 83 22:17-EST from DCP at SCRC-TENEX

    Date: Thursday, 3 November 1983  22:17-EST
    From: DCP at SCRC-TENEX
	Date: Thursday, 3 November 1983, 22:52-EST
	From: JCMA@MIT-OZ
	In Release 5.0 [GC'd Beta Test rev 2], Experimental RELATUS 7.2, on Lisp Machine Keith Moon (3600):

	tried to send mail.

	>>Error: Bad SMTP reply (expected 250). 550 Sorry, I never heard of a domain named "MOON.MIT"
		 .
	While in the function ZWEI:SMTP-CHECK-REPLY  ZWEI:SMTP-MAILER  ZWEI:SMTP-MAIL-INTERNAL

    Mostly a (big I) Internet admistration bug not assigning (allowing?)
    domains other than .ARPA.  The version of the Lisp software you have
    appears to insist on domains in some cases.  I think we just made a
    243 patch to take away domain names because of MM or something.

    Thanks for reporting this, that's part of beta test.  My inclination
    would be not to do domain names (yet) since there are obviously hosts
    out there that aren't "liberal in what they receive".

As you are no doubt (?) aware, the current Internet protocol officially
states that no one is to use any domains except the top-level "ARPA"
domain.  I don't think you can claim a host is not liberal enough if it
you simply cannot communicate with it because you refuse to follow such
a simple, clear, important part of the protocol.

Now, I don't like the situation either.  I know you are lobbying in the
correct places to get the protocol fixed, but I think your inclination
to use no domain names at this time is going to make things work most
often.  And that's what counts.

 4-Nov-83 09:44:53-EST,1875;000000000000
Date: Friday, 4 November 1983  08:46-EST
From: DCP at SCRC-TENEX
To:   Christopher C. Stacy <CSTACY at MIT-MC>
Cc:   BUG-LISPM at MIT-OZ, JCMA at MIT-OZ
Subject: TCP and namespace bug?
In-reply-to: The message of 4 Nov 1983 03:57-EST from Christopher C. Stacy <CSTACY at MIT-MC>

    Date: Friday, 4 November 1983, 03:57-EST
    From: Christopher C. Stacy <CSTACY at MIT-MC>

    As you are no doubt (?) aware, the current Internet protocol officially
    states that no one is to use any domains except the top-level "ARPA"
    domain.  I don't think you can claim a host is not liberal enough if it
    you simply cannot communicate with it because you refuse to follow such
    a simple, clear, important part of the protocol.

I hope you really don't mean that.  I hope you are just provoking me
to flame so other people learn what the issues are.  Ok...

What good is it to have only ONE allowed domain?  That is a no-op.
You might as well make the name of the domain be 3000 characters long.
That way you sould make sure every programmer typed it in correctly,
make sure everybody adheres to it, and waste a lot of disk space.

What in hell are domains good for then?  Are you trying to tell me
Symbolics should put .ARPA after our hosts because that's the
protocol?  Does that mean we are ARPA funded?  Well, we aren't.

Since it would appear we aren't allowed to put .ARPA after our host
names, does that mean we aren't allowed to talk on the Internet?  If
you answer yes (we are not allowed) you might as well kiss our
implementation of Common Lisp goodbye.  If you answer no (we are
allowed) you better tell us something other than .ARPA to put on our
host names.  If you say "don't use anything" then why in hell are
there domains to begin with?  Catch-22.

I will repeat:  This is mostly a bug in the Internet administration.
 4-Nov-83 09:56:15-EST,2850;000000000000
Received: from SCRC-YAMASKA by SCRC-QUABBIN with CHAOS; Fri 4-Nov-83 09:55:07-EST
Date: Fri, 4 Nov 83 09:59 EST
From: Charles Hornig <Hornig%SCRC-QUABBIN@MIT-MC.ARPA>
Subject: TCP and namespace bug?
To: JCMA@MIT-OZ.ARPA, "/"Carl W. Hoffman/"" <CWH%SCRC-TENEX@MIT-MC.ARPA>,
    DCP%SCRC-TENEX@MIT-MC.ARPA,
    "/"Christopher C. Stacy/"" <CSTACY@MIT-MC.ARPA>,
    BUG-LISPM@MIT-OZ.ARPA
Cc: Maint%SCRC-TENEX@MIT-MC.ARPA
In-reply-to: The message of 3 Nov 83 22:52-EST from JCMA at MIT-OZ,
             The message of 3 Nov 83 22:16-EST from "Carl W. Hoffman" <CWH at SCRC-TENEX>,
             The message of 3 Nov 83 22:17-EST from DCP at SCRC-TENEX,
             The message of 4 Nov 83 03:57-EST from "Christopher C. Stacy" <CSTACY at MIT-MC>
Message-ID: <831104095914.2.Hornig@QUABBIN.SCRC.Symbolics>

    Date: Thursday, 3 November 1983, 22:52-EST
    From: JCMA@MIT-OZ
    In Release 5.0 [GC'd Beta Test rev 2], Experimental RELATUS 7.2, on Lisp Machine Keith Moon (3600):

    tried to send mail.

    >>Error: Bad SMTP reply (expected 250). 550 Sorry, I never heard of a domain named "MOON.MIT"
	     .
    While in the function ZWEI:SMTP-CHECK-REPLY  ZWEI:SMTP-MAILER  ZWEI:SMTP-MAIL-INTERNAL


    Date: Thursday, 3 November 1983, 22:16-EST
    From: Carl W. Hoffman <CWH at SCRC-TENEX>

    I would like to know why the dummy mailer service was being invoked.  There
    are almost twenty store-and-forward mailers at MIT.
Perhaps he had done (SETF ZWEI:*NETWORK-MAIL-HOST* NET:*local-host*).


    Date: Thursday, 3 November 1983  22:17-EST
    From: DCP at SCRC-TENEX
    Mostly a (big I) Internet admistration bug not assigning (allowing?)
    domains other than .ARPA.  The version of the Lisp software you have
    appears to insist on domains in some cases.  I think we just made a
    243 patch to take away domain names because of MM or something.

    Thanks for reporting this, that's part of beta test.  My inclination
    would be not to do domain names (yet) since there are obviously hosts
    out there that aren't "liberal in what they receive".

    Date: Friday, 4 November 1983, 03:57-EST
    From: Christopher C. Stacy <CSTACY at MIT-MC>
    As you are no doubt (?) aware, the current Internet protocol officially
    states that no one is to use any domains except the top-level "ARPA"
    domain.  I don't think you can claim a host is not liberal enough if it
    you simply cannot communicate with it because you refuse to follow such
    a simple, clear, important part of the protocol.

It is true that the current standard (RFC 821) says that only hosts in
the ARPA domain may appear here.  We will fix it to say
   MAIL FROM:<JCMA%MIT-MOON@MIT-MC.ARPA>
or sonething like that.  It will also be fixed to use your mail-address
rather than the local machine.
 4-Nov-83 10:51:00-EST,416;000000000000
Date: Friday, 4 November 1983, 10:53-EST
From: Carl Hewitt <Hewitt at MIT-OZ>
Subject: routing bug reports to vendors
To: bug-lispm at MIT-OZ
Cc: Hewitt at MIT-OZ

The various competing vendors to MIT are touchy about having to deal
with bug reports for competing products.  Therefore I suggest that we
establish separate bug report lists for each vendor as per suggestion of
CStacy.

Cheers,

Carl
 
 4-Nov-83 11:31:59-EST,953;000000000000
Date: Friday, 4 November 1983, 11:33-EST
From: Daniel Weise <DANIEL at MIT-OZ>
Subject: still connecting to symbolics.
To: BUG-LISPM at MIT-OZ

In Release 5.0 [GC'd Beta Test rev 2], on Lisp Machine Jimi Hendrix (3600):

When logging in to this machine after connecting to LM-15 it connected to
R (riverside).  Just out of curiousity: Is this necessary?  Also, it managed
to determine the time was 11:48 when in fact the time was 10:35.  

How does one deal with Lisp Stopped Itself problems?  (or at least rationally
report them?)  Every once in a while lisp stops itself.  In each case warm
booting got the machine going OK in a reasonable state  (ie, the lisp stopped
itself hasn't been reproducable).  The most recent one was after logging in
on this machine and typing system-e.  Before giving me the editor it stopped
itself.  Warm booting said it died during <process get common property lists>.
A subsequent system-e worked.

 4-Nov-83 11:52:25-EST,302;000000000000
Date: Friday, 4 November 1983, 11:55-EST
From: David Vinayak Wallace <GUMBY at MIT-PYGMALION>
To: BUG-LISPM at MIT-OZ

In Release 5.0 [GC'd Beta Test rev 2], on Lisp Machine Jim Morrison (3600):

There seems to be no way to tell <function>-0-f to finger :all-lispms
:local-lispms, :login, etc.
 4-Nov-83 12:24:24-EST,1109;000000000000
Date: Fri, 4 Nov 83 12:29 EST
From: "Robert W. Kerns" <RWK%SCRC-YUKON@MIT-MC.ARPA>
Subject: TCP and namespace bug?
To: Charles Hornig <Hornig%SCRC-QUABBIN@MIT-MC.ARPA>
Cc: JCMA@MIT-OZ.ARPA, "/"Carl W. Hoffman/"" <CWH%SCRC-TENEX@MIT-MC.ARPA>,
    DCP%SCRC-TENEX@MIT-MC.ARPA,
    "/"Christopher C. Stacy/"" <CSTACY@MIT-MC.ARPA>,
    BUG-LISPM@MIT-OZ.ARPA, Maint%SCRC-TENEX@MIT-MC.ARPA
In-reply-to: <831104095914.2.Hornig@QUABBIN.SCRC.Symbolics>
Message-ID: <831104122903.9.RWK@YUKON.SCRC.Symbolics>

    Date: Friday, 4 November 1983, 09:59-EST
    From: Charles Hornig <Hornig at SCRC-QUABBIN>
	Date: Thursday, 3 November 1983, 22:52-EST
	From: JCMA@MIT-OZ
    It is true that the current standard (RFC 821) says that only hosts in
    the ARPA domain may appear here.  We will fix it to say
       MAIL FROM:<JCMA%MIT-MOON@MIT-MC.ARPA>
    or sonething like that.  It will also be fixed to use your mail-address
    rather than the local machine.
You mean JCMA%MIT-OZ@MIT-MC.ARPA, I hope.

We will try to get the patches to MIT after things settle down here
and are a bit more tested.
 4-Nov-83 12:54:18-EST,1408;000000000000
Received: from SCRC-CHARLES by SCRC-TENEX with CHAOS; Fri 4-Nov-83 12:47:21-EST
Date: Friday, 4 November 1983, 12:43-EST
From: "David C. Plummer" <DCP at SCRC-TENEX>
Subject: Dealing with Lisp Stopped Itself
To: DANIEL at MIT-OZ, BUG-LISPM at MIT-OZ
In-reply-to: The message of 4 Nov 83 11:33-EST from Daniel Weise <DANIEL at MIT-OZ>

    Date: Friday, 4 November 1983, 11:33-EST
    From: Daniel Weise <DANIEL at MIT-OZ>
    In Release 5.0 [GC'd Beta Test rev 2], on Lisp Machine Jimi Hendrix (3600):

    How does one deal with Lisp Stopped Itself problems?  

Currently, warm boot.  You can try a Show Status, but it usually doesn't
give very much useful information, yet.

    (or at least rationally report them?)

When Version 16 FEPs are blessed and distributed, the FEP's Show Status
command will print out the macro PC and some micro PCs.  You can use
%find-structure-header on the macro PC and report the micro PCs.  Moon
was threating to write a function which you would feed one of the OPCs
(I think OPC+1) to and it would tell you where in the microcode it was.
I think he said this requires a new error table, maybe a new microcode,
but I can't remember.

One thing to do is make sure all your boards are up to ECO level.  I
used to have a problem that the first time I typed m-X to Zmacs I would
get a Lisp Stopped Itself error.  Getting up to ECO level fixed it.
 4-Nov-83 13:17:12-EST,409;000000000000
Date: Friday, 4 November 1983, 13:19-EST
From: David Vinayak Wallace <GUMBY at MIT-PYGMALION>
Subject: lost featurality in 5.0
To: BUG-LISPM at MIT-OZ

In Release 5.0 [GC'd Beta Test rev 2], on Lisp Machine Jim Morrison (3600):

1> It would be nice to have an argument to globalize to tell it to be
quiet.

2> I miss being able to type (login'gumby'mc).  I now have to use
(login'gumby :host'mc).
 4-Nov-83 13:41:52-EST,796;000000000000
Date: Friday, 4 November 1983, 13:43-EST
From: David Vinayak Wallace <GUMBY at MIT-PYGMALION>
Subject: converse and fep
To: BUG-lispm at MIT-OZ

In converse in Release 5.0 [GC'd Beta Test rev 2], on Lisp Machine Jim Morrison (3600):

1> <end> in converse no longer exits.  <HELP> says it does.

2> It would be nice if the fep filesystem were a little easier to use.
Specifically, it would be nice to have it realise what directory you're
connected to, and if commands would default filenames.

I was thinking of "boot rel5" instead of "boot >rel5.fep".  I always
forget the ">", which is infuriating.  Oh yea, when it can't find a file
it should say "file not found," not "Null header page when returning."
The first few times I saw THAT I though it meant that the file was bad.
 4-Nov-83 14:14:48-EST,708;000000000000
Received: from SCRC-CHARLES by SCRC-TENEX with CHAOS; Fri 4-Nov-83 14:16:40-EST
Date: Friday, 4 November 1983, 14:12-EST
From: "David C. Plummer" <DCP at SCRC-TENEX>
Subject: lost featurality in 5.0
To: GUMBY at MIT-PYGMALION, BUG-LISPM at MIT-OZ
In-reply-to: The message of 4 Nov 83 13:19-EST from David Vinayak Wallace <GUMBY at MIT-PYGMALION>

    Date: Friday, 4 November 1983, 13:19-EST
    From: David Vinayak Wallace <GUMBY at MIT-PYGMALION>
    In Release 5.0 [GC'd Beta Test rev 2], on Lisp Machine Jim Morrison (3600):

    2> I miss being able to type (login'gumby'mc).  I now have to use
    (login'gumby :host'mc).
How is the information in your user object insufficient for this?
 4-Nov-83 14:16:40-EST,426;000000000000
Date: Friday, 4 November 1983, 14:19-EST
From: Daniel Weise <DANIEL at MIT-OZ>
Subject: network network don't work
To: BUG-LISPM at MIT-OZ

In Release 5.0 [GC'd Beta Test rev 2], on Lisp Machine Jimi Hendrix (3600):

when supduped to mc from oz from this 3600 network network does not cause
the oz->mc supdup to ask for a command.  Instead the second network is
ignored.

network help says this should still work.
 4-Nov-83 14:51:48-EST,1438;000000000000
Received: from SCRC-CHARLES by SCRC-TENEX with CHAOS; Fri 4-Nov-83 14:45:43-EST
Date: Friday, 4 November 1983, 14:41-EST
From: "David C. Plummer" <DCP at SCRC-TENEX>
Subject: converse and fep
To: GUMBY at MIT-PYGMALION, BUG-lispm at MIT-OZ
In-reply-to: The message of 4 Nov 83 13:43-EST from David Vinayak Wallace <GUMBY at MIT-PYGMALION>

    Date: Friday, 4 November 1983, 13:43-EST
    From: David Vinayak Wallace <GUMBY at MIT-PYGMALION>
    In converse in Release 5.0 [GC'd Beta Test rev 2], on Lisp Machine Jim Morrison (3600):

    1> <end> in converse no longer exits.  <HELP> says it does.

You're right.  The modeline is also correct.  So... the Help message is
broken.

    2> It would be nice if the fep filesystem were a little easier to use.
    Specifically, it would be nice to have it realise what directory you're
    connected to, and if commands would default filenames.

    I was thinking of "boot rel5" instead of "boot >rel5.fep".  I always
    forget the ">", which is infuriating.

This [pathname defaulting] is already on my queue of things to do when
we give the FEP a complete shakedown.  If you ask for completion I'll
probably send you a letter bomb.

    Oh yea, when it can't find a file
    it should say "file not found," not "Null header page when returning."
    The first few times I saw THAT I though it meant that the file was bad.

This is fixed in FEP version 16.
 4-Nov-83 14:56:39-EST,675;000000000000
Date: Friday, 4 November 1983  14:35-EST
From: MOON at SCRC-TENEX
To:   David Vinayak Wallace <GUMBY at MIT-PYGMALION>
Cc:   BUG-LISPM at MIT-OZ
Subject: lost featurality in 5.0
In-reply-to: The message of 4 Nov 1983 13:19-EST from David Vinayak Wallace <GUMBY at MIT-PYGMALION>

    Date: Friday, 4 November 1983, 13:19-EST
    From: David Vinayak Wallace <GUMBY at MIT-PYGMALION>

    1> It would be nice to have an argument to globalize to tell it to be
    quiet.

As with all warnings, you are free to redirect ERROR-OUTPUT to
wherever you want the warning to go.  The symbol SI:NULL-STREAM,
not global for some reason, is a good way to throw them away.
 4-Nov-83 15:00:11-EST,879;000000000000
Received: from SCRC-THAMES by SCRC-QUABBIN with CHAOS; Fri 4-Nov-83 14:50:07-EST
Date: Fri, 4 Nov 83 14:54 EST
From: Scott W McKay <SWM%SCRC-VIXEN@MIT-MC.ARPA>
Subject: lost featurality in 5.0
To: GUMBY%MIT-PYGMALION@MIT-MC.ARPA, BUG-LISPM@MIT-OZ.ARPA
In-reply-to: The message of 4 Nov 83 13:19-EST from David Vinayak Wallace <GUMBY at MIT-PYGMALION>

    Date: Friday, 4 November 1983, 13:19-EST
    From: David Vinayak Wallace <GUMBY at MIT-PYGMALION>
    In Release 5.0 [GC'd Beta Test rev 2], on Lisp Machine Jim Morrison (3600):

    1> It would be nice to have an argument to globalize to tell it to be
    quiet.
Huh?
    2> I miss being able to type (login'gumby'mc).  I now have to use
    (login'gumby :host'mc).
(tv:edit-namespace-object :user "gumby")
Add login names which are pairs of login-name and host.  The editor
should be pretty obvious...
 4-Nov-83 15:27:42-EST,4143;000000000000
Date: Friday, 4 November 1983, 15:24-EST
From: Carl Hewitt <Hewitt%MIT-OZ@MIT-MC.ARPA>
Subject: attempt to parse a dead message?
To: BUG-LISPM at MIT-MC

In Release 4.5, site configuration 57, on Lisp Machine Apiary-7:

I killed a mail buffer and then got this.

>>Error: Attempt to parse a dead message.
While in the function ZWEI:ASSURE-MSG-PARSED  (DEFUN-METHOD ZWEI:SUMMARY-DISPLAY-UPDATE)  ZWEI:SUMMARY-DISPLAY-UPDATE

ZWEI:ASSURE-MSG-PARSED:  (P.C. = 62)
   Arg 0 (MSG): #<MSG 5602726>
   --Defaulted args:--
   Arg 1 (KILLED-OK): NIL
   Local 2 (PARSED-P): #<DTP-LOCATIVE 5602737>
   Local 3 (STATUS): #<DTP-LOCATIVE 5602736>
   Local 4 (DONE-P): NIL

(DEFUN-METHOD ZWEI:SUMMARY-DISPLAY-UPDATE):  (P.C. = 4)
   Arg 0 (SELF): #<ZMAIL-SUMMARY-SCROLL-WINDOW Zmail Summary Scroll Window 1 3003312 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-SUMMARY-SCROLL-WINDOW -- 10. IV's, 21. FL's 62140037>
   Arg 2 (MSG): #<MSG 5602726>

ZWEI:SUMMARY-DISPLAY-UPDATE:  (P.C. = 12)
   Rest arg (ARGS): (#<MSG 5602726>)

(INTERNAL (INTERNAL (PROPERTY TV:SCROLL-ENTRY-CALL-FUNCTION-FUNCTION DEFUN-SELECT-METHOD) 0.) 0.):  (P.C. = 11)
   Arg 0 (SELF-initialization): #<ZMAIL-SUMMARY-SCROLL-WINDOW Zmail Summary Scroll Window 1 3003312 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:BASIC-SCROLL-WINDOW -- 8. IV's, 0. FL's 62140006>
   Arg 2 (ENTRY): #<ART-Q-12. 12167742>

(INTERNAL (PROPERTY TV:SCROLL-ENTRY-CALL-FUNCTION-FUNCTION DEFUN-SELECT-METHOD) 0.):  (P.C. = 11)
   Arg 0 (**DEFSELECT-OP**): RECOMPUTE
   Arg 1 (SELF-initialization): #<ZMAIL-SUMMARY-SCROLL-WINDOW Zmail Summary Scroll Window 1 3003312 exposed>
   Arg 2 (SELF-MAPPING-TABLE): #<Map to flavor TV:BASIC-SCROLL-WINDOW -- 8. IV's, 0. FL's 62140006>
   Rest arg (.ARGS.): (#<ART-Q-12. 12167742>)

(PROPERTY TV:SCROLL-ENTRY-CALL-FUNCTION-FUNCTION DEFUN-SELECT-METHOD):  (P.C. = 12)
   Arg 0 (OPERATION): RECOMPUTE
   Rest arg (SELECT-METHOD-ARGS): (#<ZMAIL-SUMMARY-SCROLL-WINDOW Zmail Summary Scroll Window 1 3003312 exposed> #<Map to flavor TV:BASIC-SCROLL-WINDOW -- 8. IV's, 0. FL's 62140006> #<ART-Q-12. 12167742>)

(DEFUN-METHOD TV:SCROLL-ENTRY-CALL-FUNCTION-FUNCTION):  (P.C. = 14)
   Arg 0 (SELF-initialization): #<ZMAIL-SUMMARY-SCROLL-WINDOW Zmail Summary Scroll Window 1 3003312 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:BASIC-SCROLL-WINDOW -- 8. IV's, 0. FL's 62140006>
   Arg 2 (.OP.): RECOMPUTE
   Rest arg (.ARGS.): (#<ART-Q-12. 12167742>)

TV:SCROLL-ENTRY-CALL-FUNCTION-FUNCTION:  (P.C. = 14)
   Rest arg (ARGS): (RECOMPUTE #<ART-Q-12. 12167742>)

Rest of stack:
(INTERNAL (INTERNAL (PROPERTY TV:SCROLL-ENTRY-SYMBOL-VALUE-FUNCTION DEFUN-SELECT-METHOD) 1.) 0.):  (P.C. = 7)
(INTERNAL (PROPERTY TV:SCROLL-ENTRY-SYMBOL-VALUE-FUNCTION DEFUN-SELECT-METHOD) 1.):  (P.C. = 7)
(PROPERTY TV:SCROLL-ENTRY-SYMBOL-VALUE-FUNCTION DEFUN-SELECT-METHOD):  (P.C. = 22)
(DEFUN-METHOD TV:SCROLL-ENTRY-SYMBOL-VALUE-FUNCTION):  (P.C. = 12)
TV:SCROLL-ENTRY-SYMBOL-VALUE-FUNCTION:  (P.C. = 12)
TV:SCROLL-ENTRY-CALL-FUNCTION-FUNCTION-TAIL-POINTER:  (P.C. = 10)
(PROPERTY TV:SCROLL-ENTRY-CALL-FUNCTION-FUNCTION DEFUN-SELECT-METHOD):  (P.C. = 31)
(DEFUN-METHOD TV:SCROLL-ENTRY-CALL-FUNCTION-FUNCTION):  (P.C. = 14)
TV:SCROLL-ENTRY-CALL-FUNCTION-FUNCTION:  (P.C. = 14)
(DEFUN-METHOD TV:SCROLL-REDISPLAY-DISPLAY-ITEM):  (P.C. = 171)
TV:SCROLL-REDISPLAY-DISPLAY-ITEM:  (P.C. = 12)
(DEFUN-METHOD TV:SCROLL-REDISPLAY-ITEM-LOOP):  (P.C. = 142)
TV:SCROLL-REDISPLAY-ITEM-LOOP:  (P.C. = 12)
(DEFUN-METHOD TV:SCROLL-REDISPLAY-ITEM-LOOP):  (P.C. = 104)
(DEFUN-METHOD TV:SCROLL-REDISPLAY):  (P.C. = 113)
(METHOD TV:BASIC-SCROLL-WINDOW REDISPLAY):  (P.C. = 36)
(METHOD ZWEI:ZMAIL-SUMMARY-SCROLL-WINDOW COMBINED REDISPLAY):  (P.C. = 26)
(METHOD ZWEI:ZMAIL-SUMMARY-SCROLL-WINDOW REDISPLAY-AS-NECESSARY):  (P.C. = 32)
(METHOD ZWEI:ZMAIL-COMMAND-LOOP-MIXIN-WITH-SUMMARY REDISPLAY):  (P.C. = 23)
(METHOD ZWEI:ZMAIL-FRAME COMMAND-LOOP):  (P.C. = 74)
(METHOD ZWEI:ZMAIL-FRAME COMBINED COMMAND-LOOP):  (P.C. = 45)
ZWEI:ZMAIL-PROCESS-TOP-LEVEL:  (P.C. = 56)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
 4-Nov-83 15:53:17-EST,1945;000000000000
Date: Friday, 4 November 1983  14:06-EST
From: MOON at SCRC-TENEX
To:   Daniel Weise <DANIEL at MIT-OZ>
Cc:   BUG-LISPM at MIT-OZ
Subject: still connecting to symbolics.
In-reply-to: The message of 4 Nov 1983 11:33-EST from Daniel Weise <DANIEL at MIT-OZ>

    Date: Friday, 4 November 1983, 11:33-EST
    From: Daniel Weise <DANIEL at MIT-OZ>
    Subject: still connecting to symbolics.
    To: BUG-LISPM at MIT-OZ

    In Release 5.0 [GC'd Beta Test rev 2], on Lisp Machine Jimi Hendrix (3600):

    When logging in to this machine after connecting to LM-15 it connected to
    R (riverside).  Just out of curiousity: Is this necessary?  

This is because SCRC is in your namespace's search list, so that you can
refer to SCRC-TENEX rather than SCRC|SCRC-TENEX (for example).  It is
also because ARPANET is in your namespace's search list and currently
SCRC|Riverside is the name server for ARPANET.  Once we are confident that
secondary namespace servers work, some machine at MIT (LM-15 for instance)
will be made a secondary namespace server for these namespaces and then
you will no longer normally connect to Riverside.

								Also, it managed
    to determine the time was 11:48 when in fact the time was 10:35.  

I hope it says in the Release notes (which I haven't seen yet) that
you can examine the variable CHAOS:*BRD-HISTORY* to find out where your
machine got the time from.  Then you can go shout at the person on that
machine to fix its idea of the time.

    How does one deal with Lisp Stopped Itself problems?

If it's a hardware problem of the parity-error variety, the FEP
show status command will give information that should be forwarded
to field service.  If it isn't, there currently (in the released
FEP software) isn't much you can find out.  You should have received
documentation with your machine (Front End Processor) explaining
"Lisp Stopped Itself" and "Show Status."
 4-Nov-83 15:54:48-EST,954;000000000000
Received: from SCRC-NEPONSET by SCRC-TENEX with CHAOS; Fri 4-Nov-83 15:22:26-EST
Date: Fri, 4 Nov 83 15:23 EST
From: Mike McMahon <MMcM%SCRC-TENEX@MIT-MC.ARPA>
Subject: network network don't work
To: DANIEL@OZ.ARPA
Cc: BUG-LISPM@OZ.ARPA
In-reply-to: The message of 4 Nov 83 14:19-EST from Daniel Weise <DANIEL at MIT-OZ>
Message-ID: <831104152312.1.MMcM@SCRC.SCRC.Symbolics>

    Date: Friday, 4 November 1983, 14:19-EST
    From: Daniel Weise <DANIEL at MIT-OZ>
    In Release 5.0 [GC'd Beta Test rev 2], on Lisp Machine Jimi Hendrix (3600):

    when supduped to mc from oz from this 3600 network network does not cause
    the oz->mc supdup to ask for a command.  Instead the second network is
    ignored.

    network help says this should still work.

Fixed in the source, due to be patched.  It wasn't quite ignored.  If
you'd been persistent enough to type it a bunch of times, you'd have
been rewarded with a PDL overflow.
 4-Nov-83 20:28:06-EST,974;000000000000
Received: from SCRC-AMAZON by SCRC-QUABBIN with CHAOS; Fri 4-Nov-83 20:26:59-EST
Date: Friday, 4 November 1983, 20:26-EST
From: Joseph R Goldstone <joseph at SCRC-QUABBIN>
Subject: converse and fep
To: "David C. Plummer" <DCP at SCRC-TENEX>
Cc: GUMBY at MIT-PYGMALION, BUG-lispm at MIT-AI
In-reply-to: The message of 4 Nov 83 14:41-EST from "David C. Plummer" <DCP at SCRC-TENEX>

    Date: Friday, 4 November 1983, 14:41-EST
    From: "David C. Plummer" <DCP at SCRC-TENEX>
	Date: Friday, 4 November 1983, 13:43-EST
	From: David Vinayak Wallace <GUMBY at MIT-PYGMALION>
        ...
	Oh yea, when it can't find a file
	it should say "file not found," not "Null header page when returning."
	The first few times I saw THAT I though it meant that the file was bad.
    This is fixed in FEP version 16.
there are FEP v16's in Keith Moon.  please try them out if you get a chance.

for amusement value, try the fep "show config" command in v16.

-- joseph
 4-Nov-83 21:28:01-EST,1190;000000000000
Mail-From: SAZ created at  4-Nov-83 21:26:59
Date: Fri 4 Nov 83 21:26:59-EST
From: SAZ@MIT-OZ
Subject: Stack Groups
To: gregor@MIT-OZ
cc: bug-lispm@MIT-OZ


Even the "top hackers" over here are having some trouble
with this one -- any help you might give would be greatly
appreciated:

Problem:  How to automatically increase (or even better, setq)
the pdl-special-area or pdl-regular-area to any high value
up to the maximum allowed, without having to hit a RESUME
key six or seven times because your stack overflowed.

One huge kludge (no rhyme intended) was written by RMS and now lies
in <SAZ>LISPM.INIT on PS: , but I need something that will do the
right thing for a Symbolics system as well.

I would like something that can be put into an init file and yet
will not break the world I'm in just because system innards are being
frobbed.  I've left writing priveleges open to anyone who would care 
to include such a hack into my init file or I will even settle for
getting it all mailed to me.  I'm just tired of dealing with a too
small stack in the course of my heavily recursive depth searching
programs.

Thank you very much.

---Dave---
-------
 4-Nov-83 23:57:44-EST,682;000000000000
Date: Friday, 4 November 1983, 23:59-EST
From: Bruce R. Donald <Brd at MIT-OZ>
Subject: Macros that expand to DECLARE don't always work.
To: bug-symbolics-software at MIT-OZ
Cc: brd at MIT-OZ


machine: ROBOT-1, Release 4.4, >world2.load

I'm having trouble with macros that expand to DECLAREs. For example,

(DEFMACRO RETURNS (&REST ARGS)
  `(DECLARE (RETURN-LIST . ,ARGS)))

does not corrrectly declare the RETURN-LIST for

(DEFUN FOO (X)
  (RETURNS BAZ HOO)
  ())

in other words (ARGLIST 'FOO) returns (X)  NIL instead of (X)  (BAZ HOO).
I notice that eval-time DECLARE is nulled out in the source. Any
suggestions on making this kind of thing work? 

 5-Nov-83 02:48:00-EST,1384;000000000000
Posted-Date:  5 November 1983 02:45 est
Date:  Saturday, 5 November 1983 02:43 est
From:  "Barry Margolin"@MIT-MULTICS.ARPA
Subject:  Re: TCP and namespace bug?
To:  DCP@SCRC-TENEX.ARPA
cc:  Christopher C. Stacy <CSTACY@MIT-MC.ARPA>, BUG-LISPM@MIT-OZ.ARPA, 
     JCMA@MIT-OZ.ARPA
In-Reply-To:  Message of 4 November 1983 08:46 est from "DCP at SCRC-TENEX"
Message-ID:  <831105074335.764558@MIT-MULTICS.ARPA>

    Date:  4 November 1983 08:46 est
    From:  DCP at SCRC-TENEX
    Subject:  TCP and namespace bug?

    ... then why in hell are
    there domains to begin with?  Catch-22.

There aren't.  There is a domain syntax, and a pseudo-domain (ending a
name in .ARPA is defined to be a no-op).

    I will repeat:  This is mostly a bug in the Internet administration.

It is not just an administrative bug, it is a technical problem. Does
the Symbolics domain have a name server that follows the standard
protocols?  I doubt it, since the RFC defining the protocol (RFC 883)
was only published today (although draft copies were announced on
NameDroppers a couple of months ago).  And if you don't have a domain
name server, then what good is your use of domains? You might as well be
using SYMBOLICS-SCRC-NIMBUS instead of NIMBUS.SCRC.SYMBOLICS (which is
pretty much the way the Honeywell machines have been renamed until
domains are implemented).
 5-Nov-83 03:01:32-EST,365;000000000000
Date: Saturday, 5 November 1983, 03:03-EST
From: Kent M. Pitman <kmp at MIT-MC>
Subject: [Save] in ZMail
To: BUG-LISPM at OZ

In ZMail in Symbolics Release 4.5, ..., on PA Lisp Machine Merlin:

I find it very sad that there is no simple command that just
saves the current file as-is without doing any expunging, without
worrying about other files, etc. 
 5-Nov-83 03:08:05-EST,959;000000000000
Date: Saturday, 5 November 1983, 03:09-EST
From: Kent M. Pitman <kmp at MIT-MC>
Subject: [Select] in ZMail
To: BUG-LISPM at OZ

In ZMail in Symbolics Release 4.5, ..., on PA Lisp Machine Merlin:

If you mouse Right on [Select] and put the moouse over [Read/Create File],
the mouse documentation line documents what Right click will do but
does not mention what Middle and Left will do.

I didn't realize that L: and R: were going to do something different here.
So I moused Right on [Select] and clicked Right on [Read/Create File],
and I typed the filename. I was surprised it came up asking me what 
its file type was. I was surprised that it was asking me that, so I waved
the mouse off of the menu hoping it would abort. It didn't fully.  My
wholine (and FS:ALL-OPEN-FILES) show the file is still open for input 
and 0% read. How do I make that go away? It looks some file code isn't 
setting up the right UNWIND-PROTECTs here.

-kmp
 5-Nov-83 04:06:08-EST,1003;000000000000
Date: Saturday, 5 November 1983, 04:06-EST
From: Leigh L. Klotz <KLOTZ at MIT-MC>
Subject: magnifying mouse blinkers
To: bug-lispm at MIT-MC

With a magnification of greater than 2, the code in MAGNIFYING-BLINKER :BEFORE :BLINK
blows out on a outside-bounds array reference any time some pixels cross the bottom
boundary of the rectangle.  Making the array one multiple of 32. larger in the width
arg, and putting in a similar rounding clause in the height fixes this problem.

Probably a more conservative array size would still work, but it seems necessary
to round both dimensions for the moment.

Here's the code.  It's NOT installed in sys:window;sheet.

(DEFMETHOD (BITBLT-BLINKER :SET-SIZE) (NWIDTH NHEIGHT)
  (UNLESS (AND ( (PIXEL-ARRAY-WIDTH ARRAY) NWIDTH) ( HEIGHT NHEIGHT))
    (SETQ ARRAY (MAKE-PIXEL-ARRAY (* 32. (1+ (CEILING NWIDTH 32.)))
			          (* 32. (1+ (ceiling NHEIGHT 32.)))
				  ':TYPE (SHEET-ARRAY-TYPE SHEET))))
  (SETQ WIDTH NWIDTH HEIGHT NHEIGHT))
 5-Nov-83 11:56:45-EST,1402;000000000000
Received: from SCRC-CUYAHOGA by SCRC-TENEX with CHAOS; Sat 5-Nov-83 11:56:54-EST
Date: Sat, 5 Nov 83 11:56 EST
From: "Robert A. Cassels" <Cassels%SCRC-TENEX@MIT-MC.ARPA>
Subject: Macros that expand to DECLARE don't always work.
To: Brd@MIT-OZ.ARPA, bug-symbolics-software@MIT-OZ.ARPA
In-reply-to: The message of 4 Nov 83 23:59-EST from "Bruce R. Donald" <Brd at MIT-OZ>

    Date: Friday, 4 November 1983, 23:59-EST
    From: Bruce R. Donald <Brd at MIT-OZ>
    machine: ROBOT-1, Release 4.4, >world2.load

    I'm having trouble with macros that expand to DECLAREs. For example,

    (DEFMACRO RETURNS (&REST ARGS)
      `(DECLARE (RETURN-LIST . ,ARGS)))

    does not corrrectly declare the RETURN-LIST for

    (DEFUN FOO (X)
      (RETURNS BAZ HOO)
      ())

    in other words (ARGLIST 'FOO) returns (X)  NIL instead of (X)  (BAZ HOO).
    I notice that eval-time DECLARE is nulled out in the source. Any
    suggestions on making this kind of thing work? 

Two problems here -- one yours and one ours.  Yours is that the value
of an &REST arg is not valid after the function returns.  Try:
    (DEFMACRO RETURNS (&REST ARGS)
      `(DECLARE (RETURN-LIST . ,(copylist ARGS))))
See the bottom of page 22 of the grey ChineNual for a full explanation.

Unfortunately that still won't work because the compiler processes
DECLAREs before macro-expansion.  Hmmm....
 5-Nov-83 12:28:01-EST,1435;000000000000
Date: 5 Nov 1983  12:27 EST (Sat)
Message-ID: <BRD.11965229227.BABYL@MIT-OZ>
From: "Bruce R. Donald" <BRD%MIT-OZ@MIT-MC.ARPA>
To:   "Robert A. Cassels" <Cassels%SCRC-TENEX@MIT-MC.ARPA>
Cc:   brd%MIT-OZ@MIT-MC.ARPA, bug-symbolics-software@MIT-OZ.ARPA
Subject: Macros that expand to DECLARE don't always work.

    Date: Saturday, 5 November 1983  11:56-EST
    From: Robert A. Cassels <Cassels%SCRC-TENEX at MIT-MC.ARPA>

    Two problems here -- one yours and one ours.  Yours is that the value
    of an &REST arg is not valid after the function returns.  Try:
        (DEFMACRO RETURNS (&REST ARGS)
          `(DECLARE (RETURN-LIST . ,(copylist ARGS))))
    See the bottom of page 22 of the grey ChineNual for a full explanation.

    Unfortunately that still won't work because the compiler processes
    DECLAREs before macro-expansion.  Hmmm....

Thanks. I tried copying the arglist before reporting it, though of
course you're perfectly right that it should have used COPYLIST all
along.  It (and related DECLARE macros) are in old code I'm converting
for the robot 3600s. I don't suppose there's something clever they can
expand to like a COMPILER:FILE-DECLARATION or COMPILER:PUTDECL?  If
RETURNS (eg) did expand to a COMPILER:FILE-DECLARATION what's the
easiest way for it to ask the name of the current function (i.e., FOO
in

    (DEFUN FOO (X)
      (RETURNS BAZ HOO)
      ...)
         )?
 5-Nov-83 13:15:46-EST,1930;000000000000
Received: from SCRC-CUYAHOGA by SCRC-TENEX with CHAOS; Sat 5-Nov-83 13:17:06-EST
Date: Sat, 5 Nov 83 13:16 EST
From: "Robert A. Cassels" <Cassels%SCRC-TENEX@MIT-MC.ARPA>
Subject: Macros that expand to DECLARE don't always work.
To: BRD@MIT-OZ.ARPA, Cassels%SCRC-TENEX@MIT-MC.ARPA
Cc: bug-symbolics-software@MIT-OZ.ARPA
In-reply-to: <BRD.11965229227.BABYL@MIT-OZ>

    Date: 5 Nov 1983  12:27 EST (Sat)
    From: "Bruce R. Donald" <BRD%MIT-OZ@MIT-MC.ARPA>
	Date: Saturday, 5 November 1983  11:56-EST
	From: Robert A. Cassels <Cassels%SCRC-TENEX at MIT-MC.ARPA>

	Unfortunately that still won't work because the compiler processes
	DECLAREs before macro-expansion.  Hmmm....

          It (and related DECLARE macros) are in old code I'm converting
    for the robot 3600s. I don't suppose there's something clever they can
    expand to like a COMPILER:FILE-DECLARATION or COMPILER:PUTDECL?  If
    RETURNS (eg) did expand to a COMPILER:FILE-DECLARATION what's the
    easiest way for it to ask the name of the current function (i.e., FOO
    in

	(DEFUN FOO (X)
	  (RETURNS BAZ HOO)
	  ...)
	     )?

Actually, if you're into gross and lewd hacks, the following will work
today for declaring the RETURN-LIST.  Since it messes around with
compiler internals, don't expect it to still work tomorrow.  [Of course
I assume that we'll soon have the macro-expanded DECLARE bug fixed, so
you won't need this.]

(defun macro-declare-hack (declare)
  (setf compiler:(function-user-declares *function*)
	(append compiler:(function-user-declares *function*)
		(subset #'(lambda (x) (get (car x) 'si:debug-info))
			(compiler:parse-declares (list declare)))))
  nil)

(DEFMACRO RETURNS (&REST ARGS)
  (macro-declare-hack
    `(DECLARE (RETURN-LIST . ,(COPYLIST ARGS)))))

You can get the name of the function by: compiler:(function-spec *function*)
Again, don't count on it to continue working.
 5-Nov-83 13:24:26-EST,985;000000000000
Date: Saturday, 5 November 1983, 13:26-EST
From: David Vinayak Wallace <GUMBY at MIT-OZ>
Subject: logical pathnames and rel 5.
To: BUG-LISPM at MIT-OZ

In Release 5.0 [GC'd Beta Test rev 2], on Lisp Machine Jimi Hendrix (3600):

In rel5: 
	(FS:ADD-LOGICAL-PATHNAME-HOST "foo" "oz" '(("t1" "ps:<gumby>")))
Does not work because PS is not a known host.  I've heard about this.  Now,
	(FS:ADD-LOGICAL-PATHNAME-HOST "foo" "oz" '(("t1" "oz:ps:<gumby>")
						   ("t2" "pig:[gumby]")))
Does not work because I'm not allowed to span physical hosts in a
logical pathname (it signals an error when I try).  If it is going to be
THIS picky, i.e., it knows what physical host it is on, why must I use a
colon in the first example?

Why not extend the functionality of logical pathnames to allow them to
span multiple hosts?

On the pathname problem: wasn't there a plan to have the host describe
pathnames to you when you logged into it?  What became of this idea?

david
 5-Nov-83 14:15:11-EST,819;000000000000
Date: Saturday, 5 November 1983, 14:08-EST
From: David Vinayak Wallace <GUMBY at MIT-AI>
Subject: converse <end> exiting
To: "David C. Plummer" <DCP at SCRC-TENEX>
Cc: BUG-lispm at MIT-AI
In-reply-to: The message of 4 Nov 83 14:41-EST from "David C. Plummer" <DCP at SCRC-TENEX>

    Date: Friday, 4 November 1983, 14:41-EST
    From: "David C. Plummer" <DCP at SCRC-TENEX>
	Date: Friday, 4 November 1983, 13:43-EST
	From: David Vinayak Wallace <GUMBY at MIT-PYGMALION>
	In converse in Release 5.0 [GC'd Beta Test rev 2], on Lisp Machine Jim Morrison (3600):

	1> <end> in converse no longer exits.  <HELP> says it does.

    You're right.  The modeline is also correct.  So... the Help message is
    broken.

I like the way it's documented to work.  Could it be controlled with a
switch?

david
 5-Nov-83 14:22:26-EST,825;000000000000
Received: from SCRC-CUYAHOGA by SCRC-TENEX with CHAOS; Sat 5-Nov-83 14:21:06-EST
Date: Sat, 5 Nov 83 14:20 EST
From: "Robert A. Cassels" <Cassels%SCRC-TENEX@MIT-MC.ARPA>
Subject: Macros that expand to DECLARE don't always work.
To: BRD@MIT-OZ.ARPA, Cassels%SCRC-TENEX@MIT-MC.ARPA
Cc: bug-symbolics-software@MIT-OZ.ARPA
In-reply-to: The message of 5 Nov 83 14:00-EST from "Howard I. Cannon" <HIC at SCRC-TENEX>

    Date: Saturday, 5 November 1983, 11:00-PST
    From: Howard I. Cannon <HIC@SCRC-TENEX>

    I think you're wrong about &REST in macros -- &REST just causes a CDR of
    the macro form to be passed in.  It's completely legitimate to return
    this, but you probably shouldn't side-effect it.

Right.  It ought to work to return the value of a MACRO &REST arg.
Sorry if I caused any confusion.
 5-Nov-83 15:04:12-EST,661;000000000000
Received: from SCRC-EUPHRATES by SCRC-TENEX with CHAOS; Sat 5-Nov-83 14:59:39-EST
Date: Sat, 5 Nov 83 15:00 EST
From: "David A. Moon" <Moon%SCRC-TENEX@MIT-MC.ARPA>
Subject: Macros that expand to DECLARE don't always work.
To: "Bruce R. Donald" <Brd@MIT-OZ.ARPA>
Cc: bug-symbolics-software@MIT-OZ.ARPA
In-reply-to: The message of 4 Nov 83 23:59-EST from "Bruce R. Donald" <Brd at MIT-OZ>

    Date: Friday, 4 November 1983, 23:59-EST
    From: Bruce R. Donald <Brd at MIT-OZ>
    machine: ROBOT-1, Release 4.4, >world2.load

    I'm having trouble with macros that expand to DECLAREs.

There is no such feature in "Zetalisp", only in Common Lisp.
 5-Nov-83 15:04:52-EST,621;000000000000
Date: Saturday, 5 November 1983  14:59-EST
From: DCP at SCRC-TENEX
To:   David Vinayak Wallace <GUMBY at MIT-AI>
Cc:   BUG-lispm at MIT-AI
Subject: converse <end> exiting
In-reply-to: The message of 5 Nov 1983 14:08-EST from David Vinayak Wallace <GUMBY at MIT-AI>

    Date: Saturday, 5 November 1983, 14:08-EST
    From: David Vinayak Wallace <GUMBY at MIT-AI>

    I like the way it's documented to work.  Could it be controlled with a
    switch?

I thought it already was.  Check the 4.4 or 4.5 release notes.  As I
recall, it was made compatible with 4.5 back then, and the default
changed for 5.0.
 5-Nov-83 15:05:37-EST,1018;000000000000
Received: from SCRC-EUPHRATES by SCRC-TENEX with CHAOS; Sat 5-Nov-83 15:03:39-EST
Date: Sat, 5 Nov 83 15:04 EST
From: "David A. Moon" <Moon%SCRC-TENEX@MIT-MC.ARPA>
Subject: Stack Groups
To: SAZ@MIT-OZ.ARPA
Cc: gregor@MIT-OZ.ARPA, bug-lispm@MIT-OZ.ARPA
In-reply-to: The message of 4 Nov 83 21:26-EST from SAZ at MIT-OZ

    Date: Fri 4 Nov 83 21:26:59-EST
    From: SAZ@MIT-OZ

    Problem:  How to automatically increase (or even better, setq)
    the pdl-special-area or pdl-regular-area to any high value
    up to the maximum allowed, without having to hit a RESUME
    key six or seven times because your stack overflowed.

Put a CONDITION-BIND handler for the SYS:PDL-OVERFLOW condition around
your program.  It's documented in Signalling and Handling Conditions.
Be sure to make your handler give up eventually so that if you really
have a true infinite recursion you will get to the debugger before you
fill up all of virtual memory with stacks.

Please let us know if this doesn't work.
 5-Nov-83 15:55:30-EST,1607;000000000000
Received: from SCRC-EUPHRATES by SCRC-TENEX with CHAOS; Sat 5-Nov-83 15:26:40-EST
Date: Sat, 5 Nov 83 15:27 EST
From: "David A. Moon" <Moon%SCRC-TENEX@MIT-MC.ARPA>
Subject: magnifying mouse blinkers
To: "Leigh L. Klotz" <KLOTZ@MIT-MC.ARPA>
Cc: bug-lispm@MIT-MC.ARPA
In-reply-to: The message of 5 Nov 83 04:06-EST from "Leigh L. Klotz" <KLOTZ at MIT-MC>

    Date: Saturday, 5 November 1983, 04:06-EST
    From: Leigh L. Klotz <KLOTZ at MIT-MC>
    With a magnification of greater than 2, the code in MAGNIFYING-BLINKER :BEFORE :BLINK
    blows out on a outside-bounds array reference any time some pixels cross the bottom
    boundary of the rectangle.  Making the array one multiple of 32. larger in the width
    arg, and putting in a similar rounding clause in the height fixes this problem.

    Probably a more conservative array size would still work, but it seems necessary
    to round both dimensions for the moment.

    Here's the code.  It's NOT installed in sys:window;sheet.

    (DEFMETHOD (BITBLT-BLINKER :SET-SIZE) (NWIDTH NHEIGHT)
      (UNLESS (AND ( (PIXEL-ARRAY-WIDTH ARRAY) NWIDTH) ( HEIGHT NHEIGHT))
	(SETQ ARRAY (MAKE-PIXEL-ARRAY (* 32. (1+ (CEILING NWIDTH 32.)))
				      (* 32. (1+ (ceiling NHEIGHT 32.)))
				      ':TYPE (SHEET-ARRAY-TYPE SHEET))))
      (SETQ WIDTH NWIDTH HEIGHT NHEIGHT))

There is neither a flavor MAGNIFYING-BLINKER not a method (BITBLT-BLINKER :SET-SIZE)
in the system, so I'm unsure what you're talking about.  Or is this for RMS's system?
(You should use m-X Bug to get a system version header at the front of your mail.)
 5-Nov-83 17:41:53-EST,348;000000000000
Date: Saturday, 5 November 1983, 17:42-EST
From: David Vinayak Wallace <GUMBY at MIT-OZ>
Subject: global condition handlers?
To: BUG-LISPM at MIT-OZ

In Release 5.0 [GC'd Beta Test rev 2], on Lisp Machine Jimi Hendrix (3600):

What is the function that lets me set up a condition handler globally?

That is: condition-bind:X::setq:let?

 5-Nov-83 18:12:44-EST,3048;000000000000
Date: Saturday, 5 November 1983, 18:13-EST
From: David Vinayak Wallace <GUMBY at MIT-OZ>
Subject: vms as mail host
To: BUG-LISPM at MIT-OZ
Cc: bug-vms at MIT-OZ

In Release 5.0 [GC'd Beta Test rev 2], on Lisp Machine Jimi Hendrix (3600):

I tried to get my mail from pig.  Got the following error.

Is there any way to have my mail forward?  I sent a bunch of bug reports
after having logged in with pig as my primary host.  All the responses
to my mail apparently went to pig and collected dust.

>>Error: The object #<VMS-PATHNAME "PYGMALION:PIG:[GUMBY]MAIL.MAI"> received a :ZMAIL-TEMP-FILE-TYPE message, which went unclaimed.
         The rest of the message was ()
While in the function (:METHOD ZWEI:BABYL-BUFFER :GET-INBOX)  ZWEI:GET-INBOX-FOR-BUFFER  ZWEI:COM-GET-INBOX-INTERNAL

(:METHOD ZWEI:BABYL-BUFFER :GET-INBOX):  (P.C. = 56)
   Arg 0 (SELF): #<BABYL-BUFFER "PYGMALION:SYS$DISK:[GUMBY]DUMMY.BAB" 31032074>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:BABYL-BUFFER -- 3. IV's, 6. FL's 24433611>
   Arg 2 (OPERATION): :GET-INBOX
   Arg 3 (NEW-PATHNAME): NIL
   Arg 4 (DELETE-P): NIL
   Local 5: NIL
   Local 6 (DEFAULT-INBOX): NIL
   Local 7 (NEW-PATHNAME): #<VMS-PATHNAME "PYGMALION:PIG:[GUMBY]MAIL.MAI">
   Local 8: NIL
   Local 9 (OLD-TYPE): "MAI"
   Local 10: #<DTP-LOCATIVE 43300304>

ZWEI:GET-INBOX-FOR-BUFFER:  (P.C. = 44)
   Arg 0 (BUFFER): #<BABYL-BUFFER "PYGMALION:SYS$DISK:[GUMBY]DUMMY.BAB" 31032074>
   Arg 1 (FROM-PATHNAME): NIL
   Arg 2 (DELETE-P): NIL
   Arg 3 (TELL-BACKGROUND-P): NIL

ZWEI:COM-GET-INBOX-INTERNAL:  (P.C. = 245)
   Arg 0 (FIRST-TIME-P): NIL
   --Defaulted args:--
   Arg 1 (FOR-BUFFER): #<BABYL-BUFFER "PYGMALION:SYS$DISK:[GUMBY]DUMMY.BAB" 31032074>

ZWEI:COM-GET-NEW-MAIL-FROM-INBOX:  (P.C. = 7)

ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
   Arg 0 (COMMAND): ZWEI:COM-GET-NEW-MAIL-FROM-INBOX
   Arg 1 (CHAR): (:MENU ("Get inbox" . ZWEI:COM-GET-NEW-MAIL-FROM-INBOX) 4. #<ZMAIL-MAIN-COMMAND-MENU-PANE Zmail Main Command Menu Pane 1 2502576 exposed>)
   --Defaulted args:--
   Arg 2 (PREFIX-CHAR): NIL
   Arg 3 (HOOK-LIST): NIL

ZWEI:ZMAIL-COMMAND-EXECUTE:  (P.C. = 6)
   Arg 0 (*CURRENT-COMMAND*-initialization): ZWEI:COM-GET-NEW-MAIL-FROM-INBOX

(:INTERNAL ZWEI:ZMAIL-COMMAND-LIST 0.):  (P.C. = 10)
   Arg 0 (**DEFSELECT-OP**): :MENU
   Arg 1 (ITEM): ("Get inbox" . ZWEI:COM-GET-NEW-MAIL-FROM-INBOX)
   Arg 2 (CH): 4.
   Arg 3 (WINDOW): #<ZMAIL-MAIN-COMMAND-MENU-PANE Zmail Main Command Menu Pane 1 2502576 exposed>

ZWEI:ZMAIL-COMMAND-LIST:  (P.C. = 12)
   Arg 0 (OPERATION): :MENU
   Rest arg (SELECT-METHOD-ARGS): (("Get inbox" . ZWEI:COM-GET-NEW-MAIL-FROM-INBOX) 4. #<ZMAIL-MAIN-COMMAND-MENU-PANE Zmail Main Command Menu Pane 1 2502576 exposed>)

Rest of stack:
(:METHOD ZWEI:ZMAIL-FRAME :PROCESS-SPECIAL-COMMAND):  (P.C. = 5)
(:METHOD ZWEI:ZMAIL-FRAME :COMMAND-LOOP):  (P.C. = 130)
(:METHOD ZWEI:ZMAIL-FRAME :COMBINED :COMMAND-LOOP):  (P.C. = 43)
ZWEI:ZMAIL-PROCESS-TOP-LEVEL:  (P.C. = 52)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
 5-Nov-83 21:07:51-EST,539;000000000000
Date: Saturday, 5 November 1983, 21:07-EST
From: David Vinayak Wallace <GUMBY at MIT-OZ>
Subject: copyf message, dired
To: BUG-lispm at MIT-OZ

In Release 5.0 [GC'd Beta Test rev 2], on Lisp Machine Jimi Hendrix (3600):

copyf prints a warning message "Can't change author because wheel or
operator required."  It shoud do a frsh-line before printing the message.

Also, could DIRED be fixed so that when exiting:
1> the "e" option was only offered for filesystems that support it, and
2> Space is equivalent to Yes?

david
 6-Nov-83 04:35:17-EST,358;000000000000
Mail-From: TU77-MAN created at  6-Nov-83 04:34:04
Date:  6 Nov 83 04:34:04-EST
From: Dumper <DUMPER@MIT-OZ>
Reply-to: File-Retrieve <FILE-R@MIT-OZ>
To: LISPM@MIT-OZ
Subject: Archived files


    The following files have been archived:

PS:<LISPM>LATER.LOG.1 File archived, contents deleted
PS:<LISPM>LISPM.BABYL.1 File archived, contents deleted
 6-Nov-83 05:44:50-EST,1063;000000000000
Received: from SCRC-BLACKSTONE by SCRC-TENEX with CHAOS; Sun 6-Nov-83 05:47:12-EST
Date: Sun, 6 Nov 83 05:42 EST
From: Neal Feinberg <Feinberg%SCRC-YUKON@MIT-MC.ARPA>
Subject: global condition handlers?
To: GUMBY@MIT-OZ.ARPA, BUG-LISPM@MIT-OZ.ARPA
In-reply-to: The message of 5 Nov 83 17:42-EST from David Vinayak Wallace <GUMBY at MIT-OZ>


    Date: Saturday, 5 November 1983, 17:42-EST
    From: David Vinayak Wallace <GUMBY at MIT-OZ>

    In Release 5.0 [GC'd Beta Test rev 2], on Lisp Machine Jimi Hendrix (3600):

    What is the function that lets me set up a condition handler globally?

    That is: condition-bind:X::setq:let?

Do you mean  condition-bind:X::let:setq? If you are willing to explain
in more detail exactly what you are trying to do, I could probably
answer your question better.  The error system is documented in detail
in the release 4.0 document "Signalling and Handling Conditions".  If
you do not have this document, perhaps some arrangement can be made to
ship many documentation sets to MIT in the future.
 6-Nov-83 09:50:13-EST,5644;000000000000
Received: from SCRC-CONNECTICUT by SCRC-TENEX with CHAOS; Sun 6-Nov-83 09:51:30-EST
Date: Sun, 6 Nov 83 09:52 EST
From: Clark Baker <cmb%SCRC-CUPID@MIT-MC.ARPA>
Subject: Stack Groups
To: SAZ@MIT-OZ.ARPA
Cc: gregor@MIT-OZ.ARPA, bug-lispm@MIT-OZ.ARPA
In-reply-to: The message of 4 Nov 83 21:26-EST from SAZ at MIT-OZ

    Date: Fri 4 Nov 83 21:26:59-EST
    From: SAZ@MIT-OZ
    Even the "top hackers" over here are having some trouble
    with this one -- any help you might give would be greatly
    appreciated:

    Problem:  How to automatically increase (or even better, setq)
    the pdl-special-area or pdl-regular-area to any high value
    up to the maximum allowed, without having to hit a RESUME
    key six or seven times because your stack overflowed.

    One huge kludge (no rhyme intended) was written by RMS and now lies
    in <SAZ>LISPM.INIT on PS: , but I need something that will do the
    right thing for a Symbolics system as well.

    I would like something that can be put into an init file and yet
    will not break the world I'm in just because system innards are being
    frobbed.  I've left writing priveleges open to anyone who would care 
    to include such a hack into my init file or I will even settle for
    getting it all mailed to me.  I'm just tired of dealing with a too
    small stack in the course of my heavily recursive depth searching
    programs.

    Thank you very much.

    ---Dave---

I answered a similar question from someone else a while ago and will
give you a slightly edited response.  Hope that some of this helps:

Someone has a program that uses a lot of stack and would like to avoid
the stack overflow type resume to allocate more messages.  What should
he do?

As I see it, he can either catch the error and automatically continue
with more stack (this is what signalling and handling errors is all
about, isn't it?), or he can create a process that has lots of control
stack.

First, let's try creating a lisp listener with more control stack.  Read
chapter 25 in LMM in processes.  See that there is an init option to
make-process called :regular-pdl-size.  Try

	(tv:make-window 'tv:lisp-listener ':regular-pdl-size 10000)

which doesn't work since it is an unknown init option to
tv:lisp-listener.  Next go look at process-mixin.  It has an after init
that does the following:

(DEFMETHOD (PROCESS-MIXIN :AFTER :INIT) (IGNORE)
  (AND (LISTP PROCESS)
       (LET ((PRESET PROCESS))
	 (SETQ PROCESS (LEXPR-FUNCALL #'MAKE-PROCESS NAME (CDR PRESET)))
	 (PROCESS-PRESET PROCESS (CAR PRESET) SELF))))

So some how before it gets here, the instance variable process is a list
and after this it is a process.  The init options to make-process come
from that list.  How does that list get set?

(DEFMETHOD (LISTENER-MIXIN-INTERNAL :BEFORE :INIT) (IGNORE)
  (OR PROCESS (SETQ PROCESS '(SI:LISP-TOP-LEVEL1 :REGULAR-PDL-SIZE 40000
						 :SPECIAL-PDL-SIZE 4000))))


From this we see that the correct form is

	(tv:make-window 'tv:lisp-listener
			:process '(si:lisp-top-level1 :regular-pdl-size 100000
						      :special-pdl-size 4000))

Let's look at the error system way of doing things.  Read the signalling
and handling manual. <time passes> Boy, this stuff is confusing.  It
looks like the event is already defined, it will be signaled
automatically, and I have to provide a handler.  I currently don't know
the name of the condition, but can find this out by getting the error,
entering the window debugger, and looking at the stack.  The condition
object is easy to find (and is of flavor sys:pdl-overflow).  My handler
will try to proceed.

OK, I wade through conditions chapter and maybe condition-case is the
wrong thing since I can only return an answer, not proceed.  Chapter 4
indicates that condition-bind might be the right thing.  Too bad the
example on page 10 doesn't show me the code for my-fnf-handler.  Well,
now I needed something about proceeding and got to chapter 9.  Section
9.3 said that I should send my condition object a valid proceed type and
that proceed types depend on the flavor of condition object.  I didn't
know what the correct proceed type to signal was, but saw by inspecting
the condition object (remember, I was using the window debugger) there
was a proceed list, whose only element was grow-pdl.  I thought that
this was the wrong way to discover these names and that they must be
documented.  Sure enough, chapter 11 contains more errors than you would
want to know.  However, I looked sys:pdl-overflow up in the index and
page 49 contained the correct information.  Then I tried out my
new-found knowledge with the following:

(defun stack (n)
  (if (= n 0)
      t
      (stack (- n 1))))

(defun doit ()
  (condition-bind ((sys:pdl-overflow #'(lambda (x) (print x) (send x ':proceed ':grow-pdl))))
    (loop for i from 0 by 100
	  do (print i)
	     (stack i))))

Believe it or not, it worked first time!  I conclude that this is the
correct way to do it.

Neither of these two solutions is what SAZ asked for.  A possible reason
why what he asked for would be wrong is that the stack overflow messages
are there for a reason (and not because the implementors can't figure
out how to make the go away).  The messages help stop runnaway programs
that use stack.  Granted, there is nothing that automatically stops
runaway compute-bound programs, or runaway cons-bound programs, but
stopping runnaway stack-bound programs is useful.  Hopefully you can put
your stack-bound piece of code in a condition-bind.
 6-Nov-83 11:08:54-EST,482;000000000000
Date: Sunday, 6 November 1983, 11:11-EST
From: Daniel Weise <DANIEL at MIT-OZ>
Subject: miscompletion in zmacs.
To: BUG-LISPM at MIT-OZ

In Release 5.0 [GC'd Beta Test rev 2], on Lisp Machine Jim Morrison (3600):

When the prompt for C-X C-F is oz:ps:<daniel>foo.lisp why does

:src:<sp>exam
complete to

OZ::

but 
oz:src:<sp>exam

complete to
OZ:SRC:<SP>EXAMPLE.LISP

which is the correct completion.

That is, why ain't the first form completing properly?
 6-Nov-83 12:11:57-EST,1305;000000000000
Received: from SCRC-YANGTZE by SCRC-QUABBIN with CHAOS; Sun 6-Nov-83 12:11:31-EST
Date: Sun, 6 Nov 83 12:13 EST
From: Carl Hoffman <CWH%SCRC-TENEX@MIT-MC.ARPA>
Subject: [Save] in ZMail
To: kmp@MIT-MC.ARPA, BUG-LISPM@MIT-OZ.ARPA
In-reply-to: The message of 5 Nov 83 03:03-EST from "Kent M. Pitman" <kmp at MIT-MC>

    Date: Saturday, 5 November 1983, 03:03-EST
    From: Kent M. Pitman <kmp at MIT-MC>
    In ZMail in Symbolics Release 4.5, ..., on PA Lisp Machine Merlin:

    I find it very sad that there is no simple command that just
    saves the current file as-is without doing any expunging, without
    worrying about other files, etc. 

I think that the closest you can come to this is by clicking Right on "Save",
and then filling in only the "Save" box for the current file.  This allows you
to save one file without expunging it, and without touching any of the other
files.  Unfortunately, it takes forever for the menu to pop up if you have any
large mail files loaded, since it first looks over every message to determine
which mail files are candidates for expunging.

I agree that there should be some pre-defined keystroke commands for saving
the current file only.  They probably aren't hard to write for yourself, if
you take some time to study the sources.
 6-Nov-83 13:12:34-EST,326;000000000000
Date: Sun, 6 Nov 1983  13:10 EST
Message-ID: <ROB.11965499342.BABYL@MIT-OZ>
From: ROB%MIT-OZ@MIT-MC.ARPA
To:   Carl Hoffman <CWH%SCRC-TENEX@MIT-MC.ARPA>
Cc:   BUG-LISPM@MIT-OZ.ARPA, kmp@MIT-MC.ARPA
Subject: [Save] in ZMail
In-reply-to: Msg of 6 Nov 1983  12:13-EST from Carl Hoffman <CWH%SCRC-TENEX at MIT-MC.ARPA>


 6-Nov-83 14:19:37-EST,3453;000000000000
Date: Sunday, 6 November 1983, 14:19-EST
From: Tom Knight <TK at MIT-MC>
Subject: inappropriate interpretation of press files
To: BUG-LISPM at OZ

In Release 4.5, site configuration 62, on Lisp Machine Elvis Presley:

Bomb when trying to use the hardcopy menu to print an already existing press file
(oz:<alan>prop.press).
What business does the lisp machine print facility have in trying to interpret the press
file I want to print at all?  If it can't find a font, perhaps it could have the graciousness
to simply send the damn file to the dover so it could be printed.

>>Error: No information for font:  TimesRoman 0 12
While in the function PRESS:FIND-FONT-DATA  PRESS:GET-FONT-WIDTH-AND-HEIGHT  (METHOD PRESS:PRESS-STREAM CANONICALIZE-FONT)

PRESS:FIND-FONT-DATA:  (P.C. = 13)
   Arg 0 (FAMILY-NAME): "TimesRoman"
   Arg 1 (FACE-NAME): 0
   Arg 2 (POINT-SIZE): 14

PRESS:GET-FONT-WIDTH-AND-HEIGHT:  (P.C. = 5)
   Arg 0 (FAMILY-NAME): "TimesRoman"
   Arg 1 (FACE-NAME): 0
   Arg 2 (POINT-SIZE): 14

(METHOD PRESS:PRESS-STREAM CANONICALIZE-FONT):  (P.C. = 65)
   Arg 0: #<PRESS-STREAM 10015332>
   Arg 1: #<Map to flavor PRESS:PRESS-STREAM -- 32. IV's, 4. FL's 62035742>
   Arg 2: CANONICALIZE-FONT
   Arg 3 (FONT): ("TimesRoman" 0 14 0)
   Arg 4 (TYPE): PRESS-FONT

(METHOD SI:HARDCOPY-STREAM-FONT-MIXIN AFTER INIT):  (P.C. = 122)
   Arg 0 (SELF): #<PRESS-STREAM 10015332>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:HARDCOPY-STREAM-FONT-MIXIN -- 6. IV's, 0. FL's 53543022>
   Arg 2 (OPERATION): INIT
   Arg 3 (PLIST): #<DTP-LOCATIVE 46140342>

(METHOD PRESS:PRESS-STREAM COMBINED INIT):  (P.C. = 25)
   Arg 0 (SELF): #<PRESS-STREAM 10015332>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor PRESS:PRESS-STREAM -- 32. IV's, 4. FL's 62035742>
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

INSTANTIATE-FLAVOR:  (P.C. = 345)
   Arg 0 (FLAVOR-NAME): PRESS:PRESS-STREAM
   Arg 1 (INIT-PLIST): #<DTP-LOCATIVE 46140342>
   Arg 2 (SEND-INIT-MESSAGE-P): MAYBE
   --Defaulted args:--
   Arg 3 (RETURN-UNHANDLED-KEYWORDS-P): NIL
   Arg 4 (AREA-TO-CONS-INSTANCE-IN): NIL

MAKE-INSTANCE:  (P.C. = 6)
   Arg 0 (FLAVOR-NAME): PRESS:PRESS-STREAM
   Rest arg (INIT-OPTIONS): (DEVICE ("Tremont via MC" FORMAT PRESS SPOOLER ITS-DOVER FILE-NAME "MC:.DOVR.;") OUTPUT-STREAM #<FILE-OUTPUT-BINARY-STREAM "MC: .DOVR.; TK >" 10015314> MARGINS NIL PRESS-FONTS (("TimesRoman" 0 14 0) ("TimesRoman" 2 14 0) ("TimesRoman" 1 14 0) ("TimesRoman" 0 22 0) ("LPT" 0 12 0)) BANNER-FILE-NAME "<ALAN>PROP.press" ...)

SI:MAKE-HARDCOPY-STREAM:  (P.C. = 30)
   Arg 0 (DEVICE): ("Tremont via MC" FORMAT PRESS SPOOLER ITS-DOVER FILE-NAME "MC:.DOVR.;")
   Rest arg (OPTIONS): (MARGINS NIL PRESS-FONTS (("TimesRoman" 0 14 0) ("TimesRoman" 2 14 0) ("TimesRoman" 1 14 0) ("TimesRoman" 0 22 0) ("LPT" 0 12 0)) BANNER-FILE-NAME "<ALAN>PROP.press" BANNER-USER-NAME "ALAN" BANNER-CREATION-DATE "5 October 1983 13:43:51")

Rest of stack:
PRESS:HARDCOPY-PRESS-FILE:  (P.C. = 102)
PRESS:HARDCOPY-VIA-MENUS:  (P.C. = 1477)
SI:*EVAL:  (P.C. = 405)
(METHOD TV:MENU-EXECUTE-MIXIN EXECUTE):  (P.C. = 53)
(METHOD TV:MOMENTARY-MENU COMBINED EXECUTE):  (P.C. = 16)
(METHOD TV:BASIC-MENU CHOOSE):  (P.C. = 21)
(METHOD TV:DYNAMIC-MULTICOLUMN-MOMENTARY-WINDOW-HACKING-MENU COMBINED CHOOSE):  (P.C. = 34)
(INTERNAL TV:MOUSE-CALL-SYSTEM-MENU 0):  (P.C. = 12)
SI:PROCESS-RUN-FUNCTION-INTERNAL:  (P.C. = 51)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
 6-Nov-83 15:10:00-EST,2534;000000000000
Date: Sunday, 6 November 1983, 15:08-EST
From: Tim McNerney <TIM at MIT-OZ>
Subject: Zwei blowout?
To: BUG-LISPM at MIT-OZ

In Release 4.5, site configuration 57, on Lisp Machine Apiary-8:

c-c c-c c-c c-c [saw that there was nothing in the kill ring] 

>>Trap: The subscript given to AR-1, 512 (from local variable SI:INDEX1), on "" was beyond the length, 512.
While in the function %STRING-EQUAL  (DEFUN-METHOD RH-RING-MATCH)  (DEFUN-METHOD COM-COPY-POP-INPUT)

%STRING-EQUAL:  (P.C. = 35)
   Arg 0 (STRING1): ""
   Arg 1 (INDEX1): 1
   Arg 2 (STRING2): ""
   Arg 3 (INDEX2): 0
   Arg 4 (COUNT): -1

(DEFUN-METHOD RH-RING-MATCH):  (P.C. = 32)
   Arg 0 (SELF): #<EDITOR-TYPEOUT-WINDOW Editor Typeout Window 41 7707646 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor STREAM-MIXIN -- 3. IV's, 1. FL's 61322463>
   Arg 2 (RING): ("" "" "" "" "" "" "" "" "" "" ...)
   Arg 3 (CHOP): 1

(DEFUN-METHOD COM-COPY-POP-INPUT):  (P.C. = 15)
   Arg 0 (SELF): #<EDITOR-TYPEOUT-WINDOW Editor Typeout Window 41 7707646 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor STREAM-MIXIN -- 3. IV's, 1. FL's 61322463>
   Arg 2 (IGNORE): 1

COM-COPY-POP-INPUT:  (P.C. = 12)
   Rest arg (ARGS): (1)

(DEFUN-METHOD ALTERNATE-RUBOUT-HANDLER-TYI):  (P.C. = 61)
   Arg 0 (SELF): #<EDITOR-TYPEOUT-WINDOW Editor Typeout Window 41 7707646 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor STREAM-MIXIN -- 3. IV's, 1. FL's 61322463>

ALTERNATE-RUBOUT-HANDLER-TYI:  (P.C. = 12)
   Rest arg (ARGS): NIL

RUBOUT-HANDLER-INVOKE:  (P.C. = 13)
   Arg 0 (OPERATION): TYI
   Rest arg (ARGS): NIL

(DEFUN-METHOD TYI-INTERNAL):  (P.C. = 34)
   Arg 0 (SELF): #<EDITOR-TYPEOUT-WINDOW Editor Typeout Window 41 7707646 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor STREAM-MIXIN -- 3. IV's, 1. FL's 61322463>
   Arg 2 (IGNORE): :ANY-TYI
   --Defaulted args:--
   Arg 3 (IGNORE): NIL

Rest of stack:
(:METHOD ANY-TYI-MIXIN :ANY-TYI):  (P.C. = 11)
(:METHOD LIST-TYI-MIXIN TYI):  (P.C. = 6)
(DEFUN-METHOD RUBOUT-HANDLER-READ):  (P.C. = 47)
(:METHOD STREAM-MIXIN RUBOUT-HANDLER):  (P.C. = 102)
BREAK:  (P.C. = 310)
(DEFUN-METHOD ZWEI:COM-BREAK):  (P.C. = 7)
ZWEI:COM-BREAK:  (P.C. = 12)
ZWEI:COMMAND-EXECUTE:  (P.C. = 65)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 20)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 173)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 42)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
SI:PROCESS-KILL-TOP-LEVEL:  (P.C. = 17)
 6-Nov-83 23:13:15-EST,280;000000000000
Date: 6 November 1983 23:13 EST
From: Christopher C. Stacy <CSTACY @ MIT-MC>
Subject: In Release 5.0
To: bug-lispm @ MIT-OZ

I would like LOGIN to take args of (USER-NAME &OPTIONAL (LOAD-INIT-FILE? T) HOST ...other junk maybe),
rather than the keyworded thing we have now.
 6-Nov-83 23:19:06-EST,2488;000000000000
Date: Sunday, 6 November 1983, 23:22-EST
From: Kent M. Pitman <KMP at MC>
Subject: Rel 5
To: BUG-LISPM at OZ

In Release 5.0 [GC'd Beta Test rev 2], on PA Lisp Machine Avatar (CADR):

My first time in Release 5. Some initial comments...

* Booting is unacceptably slow. Zillions of net accesses, including to sites
  called "P", "R", and "LM15". I expected "LM15", I was rather surprised by
  the others. 

* There is some background process running constantly eating 10-25% of my
  cpu cycles which is called "Get common property lists". Is this really
  necessary? What is it doing?

If I redumped this band now that it has done this, will it have cached most 
of this kind of cruft so that I don't have to relive this nightmare daily?
I would expect it to say something like "Hello, name space server. I have 
idea version 47 of what the world looks like. Is that right? Can I just forego
the rest of this nonsense? If not, please send me only incremental update
info because I've no stomach for this kind of thing."

* (si:get-release-version) returns a second value of "0 [GC'd Beta Test rev 2]".
  I find it irritating that this second value should be anything other than a
  fixnum. I have programs that like to do <, >, and = on the first and second
  return values of that function and having strings come back really confuses
  them.

  Perhaps this function could return a fourth value which was a comment string
  provided by the person generating the particular release, or maybe something
  even more structured. Failing that, I would prefer this comment just go in 
  SI:SYSTEM-ADDITIONAL-INFO.

* There was no blank line between the herald and the place my cursor was left
  in the Lisp Listener. I find this very unaesthetic.

* LOGIN's argument conventions are too complicated. The function which is now
  called LOGIN should be called LOGIN-INTERNAL and the simple version of LOGIN
  should be restored. This may become moot with the fabled command processor
  but until then, ... I know some people who will (rightly) claim that the
  fast version of the login procedure is 
   (LOGIN user)
  because they are not good typists and
   (LOGIN user :LOAD-INIT-FILE NIL)
  takes longer to remember and type than the time that would be wasted 
  in loading the init. Until you instal completion on keywords (which is what
  the command processor will amount to, I suppose), I think simplicity is the
  right thing.

-kmp
 6-Nov-83 23:30:52-EST,723;000000000000
Date: Sunday, 6 November 1983, 23:33-EST
From: Kent M. Pitman <KMP at MC>
Subject: Recycling *Mail-N* buffers
To: BUG-LISPM at OZ

In Release 5.0 [GC'd Beta Test rev 2], on PA Lisp Machine Avatar (CADR):

Is it intentional that *Mail-N* buffers no longer get recycled after I
send them?

The only way I know to tell if a *Mail-N* buffer has been sent is to
look at its buffer-modified flag. In fact, I sometimes accidentally
modify them and then it is even harder to tell.

Especially if there are going to be growing numbers of such buffers, I
would very much like for c-X c-B (and maybe the buffer mode line) to
show an annotation saying that some version of what's in the buffer has
been sent already.
 6-Nov-83 23:45:47-EST,1758;000000000000
Date: Sunday, 6 November 1983, 23:48-EST
From: Kent M. Pitman <KMP at MC>
Subject: Band transfer protocols
To: BUG-LISPM at MC

This bug occurred in LMIT System 97.0 on LM27 (Cadr), but may occur
in Symbolics systems as well...

SI:RECEIVE-PARTITION (or whatever it's called; it's something different
in Symbolics systems and I'm doing this from memory for reasons 
explained later) sends the transfer request without marking the base
on numbers it sends. It should bind BASE to 10 and *NOPOINT to NIL
when consing up the transfer request. The symptom is that if you
do (SI:RECEIVE-PARTITION site-x 3 3) it will transfer from site-x's
LOD3 to the local machine's LOD3. But if you do 
(SI:RECEIVE-PARTITION site-x 8 8), you find that even if there is a LOD8
on the foreign machine, it may claim there is not. The reason is that
the request references partition "10" (because I was in base 8 when I typed
it). It would be better for it to reference "8." since that is unambiguous.
The alternative would be to establish a base which all hosts agree to
use uniformly in such cases. That's hard to establish backward compatibly,
though, and binding BASE and *NOPOINT will have some good effects when
negotiating with unfixed machines, so I'd recommend it as a patch instead.

ps to System 97 maintainers...
  I tried to send some bug reports on Cadr27 from system 97 there, but
  was unable because the BUG command was broken. Some variable holding
  the header/text separator was unbound. I typed c-M in the debugger to
  report this, but that died in the same way. Anyway, I corrected that
  error and proceeded, then it lost because some function it needed in
  order to mail the message was undefined. At that point, I gave up.
 7-Nov-83 00:11:20-EST,507;000000000000
Received: from SCRC-CHARLES by SCRC-TENEX with CHAOS; Mon 7-Nov-83 00:11:58-EST
Date: Monday, 7 November 1983, 00:08-EST
From: "David C. Plummer" <DCP at SCRC-TENEX>
Subject: In Release 5.0
To: CSTACY at MIT-MC, KMP at MIT-MC, bug-lispm at MIT-OZ
In-reply-to: The message of 6 Nov 83 23:13-EST from "Christopher C. Stacy" <CSTACY at MIT-MC>,
             The message of 6 Nov 83 23:22-EST from "Kent M. Pitman" <KMP at MIT-MC>

I'll bet the arguments to login assumed the CP would be in Release 5.
 7-Nov-83 00:37:22-EST,537;000000000000
Date: Monday, 7 November 1983, 00:36-EST
From: Kent M. Pitman <KMP at MC>
Subject: Self-documentation of <End> in RH in Rel 5
To: CWH at SCRC
Cc: BUG-LISPM at MC

I notice that in Rel 5 (rev 2 for CADR), the End key is not 
documented by c-Help in the RH. I don't know how that is hacked
up. Is it not logically a subpart of the RH? If it is not, I
guess it feels like a modularity violation for it to be 
documented there, but on the other hand the user does sort of
need to find out about it when he is looking for help...
 7-Nov-83 00:40:35-EST,3125;000000000000
Date: Monday, 7 November 1983, 00:43-EST
From: Kent M. Pitman <KMP at MC>
Subject: TV:EDIT-NAMESPACE-OBJECT
To: BUG-LISPM at MC

In Symbolics Release 5.0 [GC'd Beta Test rev 2], on PA Lisp Machine Avatar (CADR):

Using TV:EDIT-NAMESPACE-OBJECT, ...

 * Why is this function in the TV package? I'm surprised it's not global 
   but even given that it's in a package, the TV package is the last place I'd
   have expected such a thing to be.

 * What is this silly "Pair:" in displayed in bold between the two items
   on many of the lines in a user object? Is it really necessary? Why not
   just make the whole line mouse sensitive in the case of such groupings.
   The mouse documentation line could explain the significance of what you
   were pointing at.

 * What is the significance of the "*" after some entries? Eg, why "Lispm Name*"
   and not just "Lispm Name"?

 * Why isn't the order of the items in the help information the same
   as the order of the items in the window's command menu.

 * When typing a "pair" of name and host, I am not told what the separator is.
   In particular, if I use "@" as a separator (it is clearly not what is being
   asked for, but is an easy mistake I could see novices making), as in:
     KMP@MC
   I get back the following unintelligible diagnostic:
     No object named NIL of class HOST was found.
     Entry not changed.
   Would it be so hard for ZMail and this namespace object editor to share
   a subroutine that parses "uname@host", which is the obvious syntax users
   are going to want to use?
   Also, If I say 
    KMP, MC
   it thinks "KMP," was the first token. This is inconsistent with things like
   :STRING-LIST stuff in attribute lists and choose-variable-values stuff.

 * Fields like Home-Address and Remarks should allow multi-line entries.

 * Reselecting this window does not leave me in the same place as I was.
   It seems to return to the toplevel command loop, making me click again
   on the thing I was in the middle of to resume what I was doing.

 * It is not documented to work, but I have several times in the past few 
   minutes typed Abort to this window, wishing it would bury itself and it
   just types Abort. I suspect that making Abort do a bury would be a handy
   thing.

Actually, I just figured out that typing Help doesn't always present the same 
text. I think I was surprised by this. Most things that have "Help" commands 
(eg, Peek) give you the same canned text no matter what context you are
in when you click on it so one gets used to not even asking for Help after
having seen it the first time. I only accidentally clicked on Help and
was pretty surprised the displayed text was not the same as before. This
obviates the need to answer the "why" part of *'d entries and about 
token syntax, but my gripes about why I should have to use such a clumsy
syntax for entering username/sitename pairs still stands. This is the one of
the first programs users are likely to have to see, so it should go out 
of its way to be flexible and comfortable to use.

-kmp
 7-Nov-83 01:10:19-EST,721;000000000000
Received: from SCRC-CHARLES by SCRC-TENEX with CHAOS; Mon 7-Nov-83 00:10:33-EST
Date: Monday, 7 November 1983, 00:07-EST
From: "David C. Plummer" <DCP at SCRC-TENEX>
Subject: Recycling *Mail-N* buffers
To: KMP at MIT-MC, BUG-LISPM at MIT-OZ
In-reply-to: The message of 6 Nov 83 23:33-EST from "Kent M. Pitman" <KMP at MIT-MC>

    Date: Sunday, 6 November 1983, 23:33-EST
    From: Kent M. Pitman <KMP at MC>
    In Release 5.0 [GC'd Beta Test rev 2], on PA Lisp Machine Avatar (CADR):

    Is it intentional that *Mail-N* buffers no longer get recycled after I
    send them?

I was told it was and that there would (someday) be tools to give
annotated buffer listings and help in deleting such buffers.
 7-Nov-83 10:33:58-EST,2379;000000000000
Received: from SCRC-YAMASKA by SCRC-QUABBIN with CHAOS; Mon 7-Nov-83 10:33:27-EST
Date: Mon, 7 Nov 83 10:33 EST
From: Charles Hornig <Hornig%SCRC-QUABBIN@MIT-MC.ARPA>
Subject: Re: TCP and namespace bug?
To: Barry Margolin@MIT-MULTICS.ARPA, DCP%SCRC-TENEX@MIT-MC.ARPA
Cc: "Christopher C. Stacy" <CSTACY@MIT-MC.ARPA>, BUG-LISPM@MIT-OZ.ARPA,
    JCMA@MIT-OZ.ARPA
In-reply-to: <831105074335.764558@MIT-MULTICS.ARPA>
Message-ID: <831107103319.6.Hornig@QUABBIN.SCRC.Symbolics>

    Posted-Date:  5 November 1983 02:45 est
    Date:  Saturday, 5 November 1983 02:43 est
    From:  "Barry Margolin"@MIT-MULTICS.ARPA
    Subject:  Re: TCP and namespace bug?
    To:  DCP@SCRC-TENEX.ARPA
    cc:  Christopher C. Stacy <CSTACY@MIT-MC.ARPA>, BUG-LISPM@MIT-OZ.ARPA, 
	 JCMA@MIT-OZ.ARPA
    In-Reply-To:  Message of 4 November 1983 08:46 est from "DCP at SCRC-TENEX"
    Message-ID:  <831105074335.764558@MIT-MULTICS.ARPA>

(SCRC-TENEX.ARPA?  No way!  We're not in the ARPA domain.  Just ask the
NIC.)

	Date:  4 November 1983 08:46 est
	From:  DCP at SCRC-TENEX
	Subject:  TCP and namespace bug?

	... then why in hell are
	there domains to begin with?  Catch-22.

    There aren't.  There is a domain syntax, and a pseudo-domain (ending a
    name in .ARPA is defined to be a no-op).

.ARPA isn't a no-op.  It means that you are in the ARPA domain
administered by the NIC. The rule is that only Internet hosts registered
by the NIC can send Internet mail.

	I will repeat:  This is mostly a bug in the Internet administration.

    It is not just an administrative bug, it is a technical problem. Does
    the Symbolics domain have a name server that follows the standard
    protocols?  I doubt it, since the RFC defining the protocol (RFC 883)
    was only published today (although draft copies were announced on
    NameDroppers a couple of months ago).  And if you don't have a domain
    name server, then what good is your use of domains? You might as well be
    using SYMBOLICS-SCRC-NIMBUS instead of NIMBUS.SCRC.SYMBOLICS (which is
    pretty much the way the Honeywell machines have been renamed until
    domains are implemented).

Yes, we might as well. The point is that the domain syntax is equally
meaningless, equally illegal, and will someday be useful.  Our system
names here are illegal no matter what syntax we use.

 7-Nov-83 11:57:37-EST,1361;000000000000
Received: from CHAOS|24427 by SCRC-TENEX with CHAOS; Mon 7-Nov-83 11:58:18-EST
Date: Mon, 7 Nov 83 12:00 EST
From: Scott W McKay <SWM%SCRC-VIXEN@MIT-MC.ARPA>
Subject: vms as mail host
To: GUMBY@MIT-OZ.ARPA, BUG-LISPM@MIT-OZ.ARPA
Cc: bug-vms@MIT-OZ.ARPA
In-reply-to: The message of 5 Nov 83 18:13-EST from David Vinayak Wallace <GUMBY at MIT-OZ>

    Date: Saturday, 5 November 1983, 18:13-EST
    From: David Vinayak Wallace <GUMBY at MIT-OZ>
    In Release 5.0 [GC'd Beta Test rev 2], on Lisp Machine Jimi Hendrix (3600):

    I tried to get my mail from pig.  Got the following error.

    Is there any way to have my mail forward?  I sent a bunch of bug reports
    after having logged in with pig as my primary host.  All the responses
    to my mail apparently went to pig and collected dust.

    >>Error: The object #<VMS-PATHNAME "PYGMALION:PIG:[GUMBY]MAIL.MAI"> received a :ZMAIL-TEMP-FILE-TYPE message, which went unclaimed.
	     The rest of the message was ()
    While in the function (:METHOD ZWEI:BABYL-BUFFER :GET-INBOX)  ZWEI:GET-INBOX-FOR-BUFFER  ZWEI:COM-GET-INBOX-INTERNAL

There is currently no real mailer for VMS.  PAO@EE has written a simple
one which appears to include forwarding, but I have not included it in
the VMS Chaos distribution yet.  Sorry.  This is in the works, but it
will probably be a while.
 7-Nov-83 13:02:54-EST,1030;000000000000
Received: from SCRC-YANGTZE by SCRC-QUABBIN with CHAOS; Mon 7-Nov-83 13:00:13-EST
Date: Mon, 7 Nov 83 12:58 EST
From: "Carl W. Hoffman" <CWH%SCRC-TENEX@MIT-MC.ARPA>
Subject: Self-documentation of <End> in RH in Rel 5
To: KMP@MIT-MC.ARPA
Cc: BUG-LISPM@MIT-MC.ARPA
In-reply-to: The message of 7 Nov 83 00:36-EST from "Kent M. Pitman" <KMP at MIT-MC>

    Date: Monday, 7 November 1983, 00:36-EST
    From: Kent M. Pitman <KMP at MC>
    I notice that in Rel 5 (rev 2 for CADR), the End key is not 
    documented by c-Help in the RH. I don't know how that is hacked
    up. Is it not logically a subpart of the RH? If it is not, I
    guess it feels like a modularity violation for it to be 
    documented there, but on the other hand the user does sort of
    need to find out about it when he is looking for help...

In the source.  Thanks for catching this.

End is not an input editor command the same way that c-F is, but the
documentation can be constructed from the information provided by the
caller.
 7-Nov-83 13:50:00-EST,651;000000000000
Received: from SCRC-YANGTZE by SCRC-QUABBIN with CHAOS; Mon 7-Nov-83 13:49:15-EST
Date: Mon, 7 Nov 83 13:48 EST
From: "Carl W. Hoffman" <CWH%SCRC-TENEX@MIT-MC.ARPA>
Subject: Rel 5
To: KMP%MITMC@MIT-MC.ARPA, BUG-LISPM@MIT-OZ.ARPA
In-reply-to: The message of 6 Nov 83 23:22-EST from "Kent M. Pitman" <KMP at MITMC>

    Date: Sunday, 6 November 1983, 23:22-EST
    From: Kent M. Pitman <KMP at MC>
    In Release 5.0 [GC'd Beta Test rev 2], on PA Lisp Machine Avatar (CADR):

    * There was no blank line between the herald and the place my cursor was left
      in the Lisp Listener. I find this very unaesthetic.

Fixed in the source.
 7-Nov-83 13:50:41-EST,814;000000000000
Received: from SCRC-YANGTZE by SCRC-QUABBIN with CHAOS; Mon 7-Nov-83 13:49:42-EST
Date: Mon, 7 Nov 83 13:49 EST
From: "Carl W. Hoffman" <CWH%SCRC-TENEX@MIT-MC.ARPA>
Subject: Zwei blowout?
To: TIM@MIT-OZ.ARPA, BUG-LISPM@MIT-OZ.ARPA
In-reply-to: The message of 6 Nov 83 15:08-EST from Tim McNerney <TIM at MIT-OZ>

    Date: Sunday, 6 November 1983, 15:08-EST
    From: Tim McNerney <TIM at MIT-OZ>
    In Release 4.5, site configuration 57, on Lisp Machine Apiary-8:

    c-c c-c c-c c-c [saw that there was nothing in the kill ring] 

    >>Trap: The subscript given to AR-1, 512 (from local variable SI:INDEX1), on "" was beyond the length, 512.
    While in the function %STRING-EQUAL  (DEFUN-METHOD RH-RING-MATCH)  (DEFUN-METHOD COM-COPY-POP-INPUT)

Fixed almost a year ago.  Try Release 5.
 7-Nov-83 14:36:42-EST,1194;000000000000
Received: from SCRC-EUPHRATES by SCRC-YUKON with CHAOS; Mon 7-Nov-83 14:35:51-EST
Date: Mon, 7 Nov 83 14:35 EST
From: "David A. Moon" <Moon%SCRC-TENEX@MIT-MC.ARPA>
Subject: Rel 5
To: "Kent M. Pitman" <KMP@MIT-MC.ARPA>
Cc: BUG-LISPM@MIT-OZ.ARPA
In-reply-to: The message of 6 Nov 83 23:22-EST from "Kent M. Pitman" <KMP at MIT-MC>

    Date: Sunday, 6 November 1983, 23:22-EST
    From: Kent M. Pitman <KMP at MC>
    In Release 5.0 [GC'd Beta Test rev 2], on PA Lisp Machine Avatar (CADR):

    My first time in Release 5. Some initial comments...

    If I redumped this band now that it has done this, will it have cached most 
    of this kind of cruft so that I don't have to relive this nightmare daily?
Yes.  I don't know where you got a band that had not already had that done to it.
But perhaps someone radically changed the host table, or other namespace information,
at MIT some time after the band was disk-saved.

    * (si:get-release-version) returns a second value of "0 [GC'd Beta Test rev 2]".
It does this for a reason.

    * LOGIN's argument conventions are too complicated.
You'll get used to it.  It's simpler than it was in Release 4, by the way.
 7-Nov-83 14:52:51-EST,666;000000000000
Date: 7 November 1983 14:52 EST
From: Kent M. Pitman <KMP @ MIT-MC>
Subject:  Rel 5
To: Moon @ SCRC-TENEX
cc: KMP @ MIT-MC, BUG-LISPM @ MIT-OZ

    Date: Mon, 7 Nov 83 14:35 EST
    From: David A. Moon <Moon%SCRC-TENEX at MIT-MC.ARPA>

        Date: Sunday, 6 November 1983, 23:22-EST
        From: Kent M. Pitman <KMP at MC>
        In Release 5.0 [GC'd Beta Test rev 2], on MIT-Avatar (CADR):

        ...

        * (si:get-release-version) returns a second value of 
          "0 [GC'd Beta Test rev 2]".

    It does this for a reason.

Is it blasphemy to suggest to a wizard that he has been perhaps
too cryptic in something he has said?
 7-Nov-83 16:29:18-EST,1188;000000000000
Received: from SCRC-NEPONSET by SCRC-QUABBIN with CHAOS; Mon 7-Nov-83 16:27:02-EST
Date: Mon, 7 Nov 83 16:32 EST
From: Mike McMahon <MMcM%SCRC-TENEX@MIT-MC.ARPA>
Subject: inappropriate interpretation of press files
To: TK@MIT-DMS.ARPA
Cc: BUG-LISPM@MIT-OZ.ARPA
In-reply-to: The message of 6 Nov 83 14:19-EST from Tom Knight <TK at MIT-MC>
Message-ID: <831107163201.6.MMcM@SCRC.SCRC.Symbolics>

    Date: Sunday, 6 November 1983, 14:19-EST
    From: Tom Knight <TK at MIT-MC>
    In Release 4.5, site configuration 62, on Lisp Machine Elvis Presley:

    Bomb when trying to use the hardcopy menu to print an already existing press file
    (oz:<alan>prop.press).
    What business does the lisp machine print facility have in trying to interpret the press
    file I want to print at all?  If it can't find a font, perhaps it could have the graciousness
    to simply send the damn file to the dover so it could be printed.

The necessary optimization is in the source, but cannot be patched into
release 5 because it depends on some of the other unpatched changes.

I believe release 5 manages to work anyway, since it has a clearer idea
of the font widths data.
 7-Nov-83 19:56:05-EST,1346;000000000000
Date: Monday, 7 November 1983, 19:56-EST
From: Alan Bawden <Alan at MIT-MC>
Subject: global condition handlers?
To: Feinberg%SCRC-YUKON at MIT-MC
Cc: GUMBY at MIT-AI, BUG-LISPM at MIT-AI
In-reply-to: The message of 6 Nov 83 05:42-EST from Neal Feinberg <Feinberg%SCRC-YUKON at MIT-MC>

    Date: Sun, 6 Nov 83 05:42 EST
    From: Neal Feinberg <Feinberg%SCRC-YUKON@MIT-MC.ARPA>
	Date: Saturday, 5 November 1983, 17:42-EST
	From: David Vinayak Wallace <GUMBY at MIT-OZ>
	That is: condition-bind:X::setq:let?

    Do you mean  condition-bind:X::let:setq? 

Yes, he does.
					     If you are willing to explain
    in more detail exactly what you are trying to do, I could probably
    answer your question better.  

He wants to install a condition handler globally.  He wants his handler to be
run whenever anyone anywhere signals fs:invalid-pathname-component.
Condition-bind will not do this.  Perhaps it would be more accurate to ask for
condition-bind:X::let:setq-globally.

				  The error system is documented in detail
    in the release 4.0 document "Signalling and Handling Conditions".  If
    you do not have this document, perhaps some arrangement can be made to
    ship many documentation sets to MIT in the future.

We have this document, thank you.  But it does not appear to answer this
question.
 7-Nov-83 20:23:31-EST,612;000000000000
Received: from SCRC-CHARLES by SCRC-QUABBIN with CHAOS; Mon 7-Nov-83 20:22:47-EST
Date: Mon, 7 Nov 83 20:26 EST
From: "David C. Plummer" <DCP%SCRC-TENEX@MIT-MC.ARPA>
Subject: global condition handlers?
To: GUMBY@MIT-OZ.ARPA
Cc: Alan@MIT-DMS.ARPA, Feinberg%SCRC-TENEX@MIT-MC.ARPA,
    BUG-LISPM@MIT-OZ.ARPA
In-reply-to: The message of 7 Nov 83 19:56-EST from Alan Bawden <Alan at MIT-MC>

Hozza bout trying putting something on the interactive handler list,
Section 7, page 27 of Signalling and Handling Conditions?  It encourages
your experimentation, and this sounds like it might be what you want.
 7-Nov-83 22:25:56-EST,1857;000000000000
Mail-From: KMP created at  7-Nov-83 22:25:11
Date: Mon, 7 Nov 1983  22:25 EST
Message-ID: <KMP.11965862374.BABYL@MIT-OZ>
From: KMP@MIT-OZ
To:   BUG-LISPM@MIT-OZ
Subject: NAME server

In LISPM on MIT-OZ:

Why is it that the NAME server for a LispM doesn't put something
more useful in the reply than the machine name. For example, it
could say what the user is doing. 

eg, right now if you do something like FINGER @MERLIN, you get:

[MIT-MERLIN]
KMP    A Kent M. Pitman         MIT-MERLIN          823 Faust, Weld, Wertheimer

but what you really want to see is

[MIT-MERLIN]
KMP    A Kent M. Pitman         Supdup              823 Faust, Weld, Wertheimer

I wrote some code to do this. It's in OZ:PS:<KMP.LISPM>NAME-SERVER
and runs in Rel 4.5. Conversion to Rel 5 is trivial but I haven't
edited the code in yet. I imagine when the alleged new activity
system goes in you can do something more sophisticated, but for now
I just do some simple poking around in the window hierarchy near
TV:SELECTED-WINDOW looking for likely text to put in. It tries to 
mash this into six chars in an effort to be friendly to the remote
FINGER program (since LispM names for things are often quite long),
so for Lisp Listeners, Zmacs, and Converse for example it will say
 "Lisp", "Zmacs", and "CONVRS" respectively.

Such a feature still doesn't change how FINGER /L works from the local
mainframes (since that uses the FINGER protocol), but it does allow
someone wondering specifically about your machine to do (FINGER @machine),
which uses the NAME protocol, and get the more detailed information.

ps Sorry about the silly banner up top. That's what m-X Bug does now 
   in my Emacs environment on OZ. Now you know how the BUG-EMACS 
   people have probably felt for ages when people send Emacs bug 
   reports from a LispM.
 7-Nov-83 22:29:19-EST,1223;000000000000
Received: from SCRC-NEPONSET by SCRC-TENEX with CHAOS; Mon 7-Nov-83 22:28:48-EST
Date: Mon, 7 Nov 83 22:31 EST
From: Mike McMahon <MMcM%SCRC-TENEX@MIT-MC.ARPA>
Subject: [Save] in ZMail
To: CWH%SCRC-TENEX@MIT-MC.ARPA
Cc: kmp@MIT-MC.ARPA, BUG-LISPM@MIT-OZ.ARPA
In-reply-to: The message of 6 Nov 83 12:13-EST from Carl Hoffman <CWH at SCRC-TENEX>
Message-ID: <831107223123.4.MMcM@SCRC.SCRC.Symbolics>

    Date: Sun, 6 Nov 83 12:13 EST
    From: Carl Hoffman <CWH%SCRC-TENEX@MIT-MC.ARPA>
	Date: Saturday, 5 November 1983, 03:03-EST
	From: Kent M. Pitman <kmp at MIT-MC>
	In ZMail in Symbolics Release 4.5, ..., on PA Lisp Machine Merlin:

	I find it very sad that there is no simple command that just
	saves the current file as-is without doing any expunging, without
	worrying about other files, etc. 

    I agree that there should be some pre-defined keystroke commands for saving
    the current file only.  They probably aren't hard to write for yourself, if
    you take some time to study the sources.

I added COM-ZMAIL-SAVE-CURRENT-BUFFER from my init file.

It's c-X c-S there.  Since c-X isn't normal zmail, I guess you need your
own keystroke assignment or a suggestion for the default.
 8-Nov-83 02:40:30-EST,620;000000000000
Date: Tuesday, 8 November 1983, 02:42-EST
From: Kent M. Pitman <kmp at MIT-OZ>
Subject: Compiled code for (SETQ X X)
To: BUG-LISPM at MIT-OZ

In Release 4.5, Knowledge-Based-Editor 221.1, site configuration 65,
Black Magic, on PA Lisp Machine Avatar:

Compiling (DO ((X *X* X) ...) ...) produces crufty code that
reads the value of x and puts it back in the same place on
every iteration. (SETQ X X) produces similarly crufty code.

Certain programs would be a lot easier to write if they could
just generate this sort of code and assume the compiler was
going to pick it up and do the right thing.
-kmp
 8-Nov-83 09:27:02-EST,750;000000000000
Date: Tuesday, 8 November 1983, 09:29-EST
From: W. Eric L. Grimson <welg at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In System 97.23, CADR 1.0, ZMail 51.9, MIT-Specific 21.0, microcode 257,
ZM MIT, on Lisp Machine Thirty-one:

While loading in the file
src:<tlp.touch>disam.lisp
into the editor, the machine was thrown into the error handler
with the message that the regular push-down list had overflown.
This occured while in the function GLOBAL:MAKE-ARRAY, called by SI#:SIMPLE-MAKE-ARRAY
called by  SI#:PKG-REHASH.

The only things that had been done on the machine were to load two other files into
the editor, and compile them.  These files were
src:<tlp.touch>redo-touch-3600.lisp
and
src:<tlp.touch>redo-rotate-3600.lisp

eric

 8-Nov-83 09:50:21-EST,645;000000000000
Date: Tuesday, 8 November 1983, 09:52-EST
From: W. Eric L. Grimson <welg at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In System 97.23, CADR 1.0, ZMail 51.9, MIT-Specific 21.0, microcode 257,
ZM MIT, on Lisp Machine Thirty-one:

While loading the file
ps:<tlp.lisp>lmd.qfasl
the machine hit a regular push-down list overflow bug.

This occurred while in the function si:pkg-good-size, called by si:pkg-rehash, 
called by si:pkg-intern-store.
Only three files had been loaded and compiled into the machine, before this occurred.
Moreover, on a previous incantation, this file passed through a (qc-file-load ...)
function with no problem.

 8-Nov-83 11:13:11-EST,345;000000000000
Date: Tuesday, 8 November 1983, 11:15-EST
From: David Vinayak Wallace <GUMBY at MIT-OZ>
Subject: NOT MIT-AI!!!!!
To: BUG-LISPM at MIT-OZ

In Release 5.0 [GC'd Beta Test rev 2], on Lisp Machine Janis Joplin (3600):

This machine is using mit-ai as a primary name for oz again.  This tends
to disturb some of us religious types.

david
 8-Nov-83 13:21:21-EST,742;000000000000
Date: Tue, 8 Nov 83 13:23 EST
From: "Robert W. Kerns" <RWK%SCRC-YUKON@MIT-MC.ARPA>
Subject: vms as mail host
To: David Vinayak Wallace <GUMBY@MIT-OZ.ARPA>
Cc: BUG-LISPM@MIT-OZ.ARPA, bug-vms@MIT-OZ.ARPA
In-reply-to: <GZ.11965531825.BABYL@MIT-OZ>
Message-ID: <831108132354.0.RWK@YUKON.SCRC.Symbolics>

    Date: Saturday, 5 November 1983, 18:13-EST
    From: David Vinayak Wallace <GUMBY@MIT-OZ>
    In Release 5.0 [GC'd Beta Test rev 2], on Lisp Machine Jimi Hendrix (3600):

    I tried to get my mail from pig.  Got the following error.

Zmail does not support VMS mail.  There are difficulties with
doing so over the network; I don't know if they can be worked
out or not.  It might be necessary to write a special server.
 8-Nov-83 14:31:09-EST,664;000000000000
Date: Tuesday, 8 November 1983, 14:30-EST
From: Kent M. Pitman <kmp at MIT-OZ>
Subject: The FOOBAR field would not have been transmitted
To: BUG-LISPM at MIT-OZ

In Release 4.5, Knowledge-Based-Editor 221.1, site configuration 65,
Black Magic, on PA Lisp Machine Avatar:

When using non-standard header fields, c-X M just grumps that
the fields would not have been transmitted rather than offering
to superquote them (or just doing that silently, which I would
prefer). How am I supposed to send mail with Start-Date,
Expiration-Date, Keywords, References, Supersedes, etc. type
headers if your mailing routines are going to fight with me this
way?
 8-Nov-83 15:43:09-EST,1221;000000000000
Date: Tuesday, 8 November 1983, 14:56-EST
From: Kent M. Pitman <kmp at MIT-OZ>
Subject: SETF of #'(:PROPERTY ...)
To: BUG-LISPM at MIT-OZ

In Release 4.5, Knowledge-Based-Editor 221.1, site configuration 65,
Black Magic, on PA Lisp Machine Avatar:

I don't see any reason why the following shouldn't have worked ...

  (SETF #'(:PROPERTY LET* MACRO-EXPAND-NORMAL)
        #'(:PROPERTY LET  MACRO-EXPAND-NORMAL))

The error message was:

  >>Error: Cannot setf (FUNCTION (PROPERTY LET* MACRO-EXPAND-NORMAL))
  While in the function SI:FUNCTION-SETF  SI:LOCF-APPLY  SI:SETF-1

  SI:FUNCTION-SETF:  (P.C. = 36)
     Arg 0 (REF):  #'(PROPERTY LET* MACRO-EXPAND-NORMAL)
     Arg 1 (VAL):  #'(PROPERTY LET MACRO-EXPAND-NORMAL)

  SI:LOCF-APPLY:  (P.C. = 44)
     Arg 0 (FCN): SI:FUNCTION-SETF
     Arg 1 (REF): #'(PROPERTY LET* MACRO-EXPAND-NORMAL)
     Arg 2 (VAL-P): T
     Arg 3 (VAL): #'(PROPERTY LET MACRO-EXPAND-NORMAL)

  SI:SETF-1:  (P.C. = 121)
     Arg 0 (X): (SETF #'(PROPERTY LET* MACRO-EXPAND-NORMAL)
		      #'(PROPERTY LET MACRO-EXPAND-NORMAL))

  SETF:  (P.C. = 22)
     Arg 0 (X): (SETF #'(PROPERTY LET* MACRO-EXPAND-NORMAL)
		      #'(PROPERTY LET MACRO-EXPAND-NORMAL))

 8-Nov-83 15:56:51-EST,687;000000000000
Date: Tuesday, 8 November 1983, 15:59-EST
From: Kent M. Pitman <kmp at MIT-OZ>
Subject: Argument to ZWEI's Complete Redisplay
To: BUG-LISPM at MIT-OZ

In ZWEI in Symbolics Release 4.5, ... on MIT-Avatar (CADR):

ZWEI's Complete Redisplay ignores its argument. I wish when
it did its thing it would recenter the current window as
Recenter Window would have done.

The motivation for this is that Recenter Window is not on a
key in my environment. I don't like typing it and having it
slide my window around at random. The only feature of it that
I like is positioning the screen on a particular line, which
I am currently forced to do via
  c-m-<n> c-m-X Recenter Window
 8-Nov-83 17:46:07-EST,661;000000000000
Date: Tuesday, 8 November 1983  17:23-EST
From: MOON at SCRC-TENEX
To:   Kent M. Pitman <kmp at MIT-OZ>
Cc:   BUG-LISPM at MIT-OZ
Subject: SETF of #'(:PROPERTY ...)
In-reply-to: The message of 8 Nov 1983 14:56-EST from Kent M. Pitman <kmp at MIT-OZ>

Use the FDEFINITION function rather than the FUNCTION special form
and it will work.  Having SETF know about FUNCTION is not really
inherently brain-damaged; maybe I'll get enthusiastic and put it
in the source, at least of the Common Lisp version.  By the way if
you really need this it shouldn't be at all hard for you to figure
out what to put in the SETF property of FUNCTION to make it work.
 8-Nov-83 18:44:09-EST,1425;000000000000
Date: Tuesday, 8 November 1983, 18:37-EST
From: Kent M. Pitman <kmp at MIT-OZ>
Subject: ONE, TWO, THREE, ...
To: BUG-LISPM at MIT-OZ
Cc: Rees at YALE.ARPA, Guy.Steele at CMU-CS-A.ARPA, KMP at MIT-MC

In Symbolics Release 4.5 on MIT-Avatar...

I just found myself writing 

   (IF (CDDDDR X) (FIFTH X))

where I would probably have rather written

   (IF (CDDDDR X) (CADDDDR X))

if there had been 5-level C...R forms, mostly 
just for symmetry. It got me thinking. I wouldn't
mind if the symmetry went the other way. What if 

  (DEFSUBST ONE   (X) (AND       X  T))
  (DEFSUBST TWO   (X) (AND (CDR  X) T))
  (DEFSUBST THREE (X) (AND (CDDR X) T))
  ...

such that one could do

  (IF (FIVE X) (FIFTH X))

to mean roughly

  If there are at least 5 x's, then the fifth x.

It's even more handy for the short cases. How many
times do you do 

  (IF X (CAR X))         or (IF (CDR X) (CADR X))

or something like that in your code. Mightn't it
be more intuitive to write something like

  (IF (ONE X) (FIRST X)) or (IF (TWO X) (SECOND X))
  
Probably. The names ONE, TWO, THREE, etc. might be slightly 
misleading because they mean "at least <n>" but they have
the feature of being short and I think people would get
used to them. They also neatly describe a sort of relation
between the pairs X, (CAR X); (CDR X), (CADR X); etc.
giving a certain pleasant symmetry to the world.
 8-Nov-83 18:52:36-EST,2409;000000000000
Date: Tuesday, 8 November 1983, 18:53-EST
From: Tim McNerney <TIM at MIT-OZ>
Subject: Zmail death
To: BUG-LISPM at MIT-OZ

In Release 4.5, site configuration 57, on Lisp Machine Apiary-5:

Saw that I had new mail (1 message)
G[ot it] 
It was immediately obvious that it was junk, so I immediately
D[eleted it] and
S[aved my file]

...death.

P.S.  I KNOW that I am using Rel 4.5.  I will use Rel 5 when it is stable.

>>Error: Inbox buffer out of synch, get a wizard
While in the function (METHOD ZWEI:FILE-MAIL-BUFFER SAVING-DONE)  (METHOD ZWEI:BABYL-BUFFER COMBINED SAVING-DONE)  ZWEI:SAVE-BUFFER-INTERNAL

(METHOD ZWEI:FILE-MAIL-BUFFER SAVING-DONE):  (P.C. = 33)
   Arg 0 (SELF): #<BABYL-BUFFER "OZ:PS:<TIM>TIM.BABYL" 7233405>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:FILE-MAIL-BUFFER -- 9. IV's, 0. FL's 62060613>
   Arg 2 (OPERATION): SAVING-DONE
   Arg 3 (FORCING-OUT): NIL

(METHOD ZWEI:BABYL-BUFFER COMBINED SAVING-DONE):  (P.C. = 23)
   Arg 0 (SELF): #<BABYL-BUFFER "OZ:PS:<TIM>TIM.BABYL" 7233405>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:BABYL-BUFFER -- 3. IV's, 6. FL's 62060554>
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

ZWEI:SAVE-BUFFER-INTERNAL:  (P.C. = 61)
   Arg 0 (BUFFER): #<BABYL-BUFFER "OZ:PS:<TIM>TIM.BABYL" 7233405>
   Arg 1 (FOR-FINISH): NIL

ZWEI:SAVE-MAIL-BUFFER:  (P.C. = 102)
   Arg 0 (BUFFER): #<BABYL-BUFFER "OZ:PS:<TIM>TIM.BABYL" 7233405>
   --Defaulted args:--
   Arg 1 (FOR-FINISH): NIL

ZWEI:EXPUNGE-AND-SAVE-SEQUENCE:  (P.C. = 11)
   Arg 0 (SEQUENCE): #<BABYL-BUFFER "OZ:PS:<TIM>TIM.BABYL" 7233405>

ZWEI:ZMAIL-SAVE-ALL:  (P.C. = 11)

ZWEI:COM-ZMAIL-SAVE:  (P.C. = 16)

ZWEI:COMMAND-EXECUTE:  (P.C. = 65)
   Arg 0 (COMMAND): ZWEI:COM-ZMAIL-SAVE
   Arg 1 (CHAR): 115
   --Defaulted args:--
   Arg 2 (PREFIX-CHAR): NIL
   Arg 3 (HOOK-LIST): NIL

Rest of stack:
ZWEI:ZMAIL-COMMAND-EXECUTE:  (P.C. = 6)
(METHOD ZWEI:ZMAIL-FRAME PROCESS-COMMAND-CHAR):  (P.C. = 7)
(INTERNAL (METHOD ZWEI:ZMAIL-FRAME COMBINED PROCESS-COMMAND-CHAR) 0):  (P.C. = 7)
(METHOD ZWEI:ZMAIL-COMMAND-LOOP-MIXIN WHOPPER PROCESS-COMMAND-CHAR):  (P.C. = 21)
(METHOD ZWEI:ZMAIL-FRAME COMBINED PROCESS-COMMAND-CHAR):  (P.C. = 12)
(METHOD ZWEI:ZMAIL-FRAME COMMAND-LOOP):  (P.C. = 143)
(METHOD ZWEI:ZMAIL-FRAME COMBINED COMMAND-LOOP):  (P.C. = 45)
ZWEI:ZMAIL-PROCESS-TOP-LEVEL:  (P.C. = 56)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
 8-Nov-83 18:54:45-EST,546;000000000000
Date: Tuesday, 8 November 1983, 18:55-EST
From: Tim McNerney <TIM at MIT-OZ>
Subject: Zmail death (P.S.)
To: BUG-LISPM at MIT-OZ

In Release 4.5, site configuration 57, on Lisp Machine Apiary-5:

P.P.S  Oops, apparently there were more messages still being read in when it died.
       It was only 22% of the way through MAIL._ZMAIL_TXT.1

>>Error: Inbox buffer out of synch, get a wizard
While in the function (METHOD ZWEI:FILE-MAIL-BUFFER SAVING-DONE)  (METHOD ZWEI:BABYL-BUFFER COMBINED SAVING-DONE)  ZWEI:SAVE-BUFFER-INTERNAL

 8-Nov-83 20:03:35-EST,784;000000000000
Received: from SCRC-EUPHRATES by SCRC-YUKON with CHAOS; Tue 8-Nov-83 20:01:40-EST
Date: Tue, 8 Nov 83 20:07 EST
From: "David A. Moon" <Moon%SCRC-TENEX@MIT-MC.ARPA>
Subject: Compiled code for (SETQ X X)
To: "Kent M. Pitman" <kmp@MIT-OZ.ARPA>
Cc: BUG-LISPM@MIT-OZ.ARPA
In-reply-to: The message of 8 Nov 83 02:42-EST from "Kent M. Pitman" <kmp at MIT-OZ>

    Date: Tuesday, 8 November 1983, 02:42-EST
    From: Kent M. Pitman <kmp at MIT-OZ>
    In Release 4.5, Knowledge-Based-Editor 221.1, site configuration 65,
    Black Magic, on PA Lisp Machine Avatar:

    Compiling (DO ((X *X* X) ...) ...) produces crufty code that
    reads the value of x and puts it back in the same place on
    every iteration. (SETQ X X) produces similarly crufty code.

Use Release 5.
 8-Nov-83 21:22:47-EST,1205;000000000000
Received: from SCRC-HOUSATONIC by SCRC-TENEX with CHAOS; Tue 8-Nov-83 21:19:06-EST
Date: Tue, 8 Nov 83 21:23 EST
From: Clark Baker <cmb%SCRC-CUPID@MIT-MC.ARPA>
Subject: The FOOBAR field would not have been transmitted
To: "Kent M. Pitman" <kmp@MIT-OZ.ARPA>
Cc: BUG-LISPM@MIT-OZ.ARPA
In-reply-to: The message of 8 Nov 83 14:30-EST from "Kent M. Pitman" <kmp at MIT-OZ>

    Date: Tuesday, 8 November 1983, 14:30-EST
    From: Kent M. Pitman <kmp at MIT-OZ>
    In Release 4.5, Knowledge-Based-Editor 221.1, site configuration 65,
    Black Magic, on PA Lisp Machine Avatar:

    When using non-standard header fields, c-X M just grumps that
    the fields would not have been transmitted rather than offering
    to superquote them (or just doing that silently, which I would
    prefer). How am I supposed to send mail with Start-Date,
    Expiration-Date, Keywords, References, Supersedes, etc. type
    headers if your mailing routines are going to fight with me this
    way?

For Zmail, MMcM told me to add the following to my zmail-init.l:

(DEFTEMPLATE USER-TRANSMIT-TEMPLATE
  (:TYPE :TRANSMIT)
  (:HEADER-FROM-DRAFT :START-DATE)
  (:HEADER-FROM-DRAFT :EXPIRATION-DATE))
 8-Nov-83 23:57:11-EST,447;000000000000
Mail-From: MILLGRAM created at  8-Nov-83 23:56:36
Date: Tue, 8 Nov 1983  23:56 EST
Message-ID: <MILLGRAM.11966141159.BABYL@MIT-OZ>
From: MILLGRAM@MIT-OZ
To:   Tim McNerney <TIM@MIT-OZ>
Cc:   BUG-LISPM@MIT-OZ
Subject: Zmail death
In-reply-to: Msg of 8 Nov 1983 18:53-EST from Tim McNerney <TIM>

Something very much the same happened to me.
I'm still trying to figure out what was in the messages
that ZMAIL ate as a side dish.

Lije
 9-Nov-83 07:08:12-EST,1175;000000000000
Date: 9 November 1983 07:14 EST
From: Patrick G. Sobalvarro <PGS @ MIT-MC>
Subject:  vms as mail host
To: RWK @ SCRC-YUKON
cc: BUG-LISPM @ MIT-OZ, bug-vms @ MIT-OZ, GUMBY @ MIT-OZ
In-reply-to: Msg of Tue 8 Nov 83 13:23 EST from Robert W. Kerns <RWK%SCRC-YUKON at MIT-MC.ARPA>

    Date: Tue, 8 Nov 83 13:23 EST
    From: Robert W. Kerns <RWK%SCRC-YUKON at MIT-MC.ARPA>
    To:   David Vinayak Wallace <GUMBY at MIT-OZ.ARPA>
    cc:   BUG-LISPM at MIT-OZ.ARPA, bug-vms at MIT-OZ.ARPA
    Re:   vms as mail host

        Date: Saturday, 5 November 1983, 18:13-EST
        From: David Vinayak Wallace <GUMBY@MIT-OZ>
        In Release 5.0 [GC'd Beta Test rev 2], on Lisp Machine Jimi Hendrix (3600):

        I tried to get my mail from pig.  Got the following error.

    Zmail does not support VMS mail.  There are difficulties with
    doing so over the network; I don't know if they can be worked
    out or not.  It might be necessary to write a special server.

Not to be inflammatory or anything, but the MIT/RMS system has supported VMS
mail for about a month now.  It did take him (RMS) a little hacking, but he
didn't have to write a server.
 9-Nov-83 17:42:49-EST,2717;000000000000
Date: Wednesday, 9 November 1983, 17:44-EST
From: Kent M. Pitman <KMP at MC>
Subject: Confusing terms in bug report banner lines
To: BUG-LISPM at MC

In Symbolics Release 5.0 [GC'd Beta Test rev 2], Vanilla, 
on PA Lisp Machine Avatar (CADR):

This bug report contains information relevant to maintainers of the MIT system
as well.

Something Symbolics people might not have noticed but which I know people here 
notice is that the following banner

  In Release 5.0 [GC'd Beta Test rev 2], Vanilla, on PA Lisp Machine Avatar (LM-2):

is incorrect in a very bad way. A CADR is not an LM-2. It runs the same software
but it was not built by Symbolics. LM-2 is a brand name. I often use the terms
interchangeably in conversation, but some people have (I think rightly) jumped on
me about the fact that we should call them CADRs if they were made here. An issue
of pride, I think.

I imagine the hardware type could be part of the host object known to the namespace
server. I would appreciate it if the bug report banner line could be made to say
CADR instead of LM-2 where appropriate. But in the worst case, since there is a 
fixed, non-growing number of CADRs in the world, and since all of those machines
conveniently have a nickname of "CADRn", then it shouldn't be hard to figure out
using a reliable heuristic.

You might find there are other random benefits of this, such as the fact that
CADRs are more prone to register parity errors in large memory configurations since
they can't always drive the number of memory boards as an LM-2, which seems to be
better packaged for a full complement of boards.

Oh, and while we're on the subject, I prefer to see some modifier to the word
"Release" or "System" since in fact there are these two competing systems and
users are not always aware that they are different. I'd like to suggest that 
the banner also routinely say "Symbolics Release" rather than just "Release"
since it's chauvanistic to presume that the word "Release" implies Symbolics.

In fact, I think Unix and Twenex and several other major systems are also 
in range such that "Release 5" is pretty meaningless out of context, but given
the existing of two diverging software systems, the other of which should be
entitled to number its releases as well (and having so done, might catch up
in numbering), it is an especially good idea in this context.

Note well, I am not suggesting changing the name of the system/release thing(s)
interally; only adding the word "Symbolics" as a constant literal after the 
word "In" in the bug report banner line.

By analogy, the MIT system should say "MIT" or "LMI" or some such in the same
position.

-kmp
 9-Nov-83 18:05:00-EST,1947;000000000000
Date: Wednesday, 9 November 1983, 18:05-EST
From: Kent M. Pitman <KMP at MC>
Subject: Rel 5 slowness, revisited
To: BUG-LISPM at MC

In Symbolics Release 5.0 [GC'd Beta Test rev 2] on Avatar (CADR):

Well, I redumped the Rel 5 that I got from LM15 and it boots faster.

In thinking about this, though, I am confused about why that should
be true. The band I had booted before was taken from what LM15 was
running as a current band. Unless I'm confused, it seems to me that 
this should have maximized my chances of running an up-to-date version
of the namespace world. I don't understand why as long as I am in
the same namespace, it should need to be redumped just because it was
copied to my machine. The only thing my machine should have to do is
notice that it is not the machine it thought it was, but it should not
have to do any net traffic to get itself up to date with a machine 
which is running an identical world load, should it?

The only way I can figure this to have happened would be if the namespace
server stored all its info in its file system and didn't cache things
itself. Shouldn't it also cache things if possible and shouldn't it be
advertised that the namespace server should be redumped frequently 
loading host data, etc. into a clean environment to maximize its chances
of starting fast and to maximize chances that people who take the band
it is using will be able to use the band directly without redumping it?

Also, even with this freshly cached environment I am running, I 
find that I still have to sit with the wholine in "Connect P" for several
seconds while it decides that P (Pointer) is not avaliable. This strikes
me as extraneous, since I don't see any reason for the MIT site to be
talking to P if LM15 is up (which it is). Also, when P finally doesn't 
respond, the system seems to still be able to run fine, so whatever it
was trying to get from it seems extraneous.
 9-Nov-83 18:45:57-EST,2368;000000000000
Date: 9 November 1983 18:49 EST
From: Kent M. Pitman <KMP @ MIT-MC>
Subject:  [Save] in ZMail
To: MMcM @ SCRC-TENEX
cc: KMP @ MIT-MC, BUG-LISPM @ MIT-OZ, CWH @ SCRC-TENEX
	    Msg of Sat, 5 Nov 83 03:03-EST from kmp at MIT-MC
	    Msg of Sun, 6 Nov 83 12:13 EST from CWH at SCRC-TENEX
	    Msg of Tue, 8 Nov 83 19:30 EST from CWH at SCRC-TENEX
References: <831107223123.4.MMcM@SCRC.SCRC.Symbolics>,

    Date: Monday, 7 November 1983, 22:31-EST
    From: Mike McMahon <MMcM at SCRC-TENEX>

    I added COM-ZMAIL-SAVE-CURRENT-BUFFER from my init file.

    It's c-X c-S there.  Since c-X isn't normal zmail, I guess you 
    need your own keystroke assignment or a suggestion for the default.

My gripe is partly that this should be the primitive command and 
the m-X command should be the hairier version. Just as in Zmacs, 
it isn't the case that c-X c-S saves all buffers and you have to do
m-X Save Current Buffer to save just one buffer, I think ZMail should
behave similarly. I would rather that the "S" command save one file.
Perhaps with an argument it could query for each file or just save all.
I think doing m-X Save All Files or some such (perhaps Save All Mail Files)
should do in ZMail the analagous thing to what it does in Zmacs.

I also think it is important that this work quickly. The issue is that
what "S" provides you is a way to instantaneously save state. eg, when 
you get a "System going down in 2 minutes" message. You might know that
you don't have time to save everything and might still want to selectively
save certain things. In that case, you want the commands that allow you to
be selective to be very fast. Also, even in the multiple files case, you
want something which just blindly saves all files without checking about
need to expunge, etc. If I wanted to expunge them, I'd use Left click
on Save.

By the way, I consider the M option of [Save] (just expunge this) to be 
misplaced. That key should be labelled "... M: Save This ...". I also 
believe that the Right click option for Save should either document that
it will take a lot of time to compute the menu it offers or should pop
up a preliminary menu which offers the hairy menu as one of the options
and also offers simpler options like "Just Save" vs "Just Expunge" vs
"Save and Expunge" and "Just this" vs "All mail files". 
 9-Nov-83 19:43:06-EST,2919;000000000000
Date: Wednesday, 9 November 1983, 19:42-EST
From: Daniel Huttenlocher <dph at MIT-OZ>
Subject: mit namespace illogic
To: BUG-LISPM at MIT-OZ

In Release 5.0 [GC'd Beta Test rev 3], dusty plum, on Lisp Machine Keith Moon (3600):

Trying to update the MIT site namespace object.  Why is LM15 trying to
connect to OZ anyway?  Shouldn't this information be stored on the LM15
local lmfs?

BTW, sending this bug report wasn't easy.  If you c-M from the error
handler in the edit-namespace window, when you type end to send the
message it hangs in LOCK.  I had to cause the error to happen, then c-M,
then abort the bug mail frame, then select the edit-namespace window,
then abort from the error, then continue mailing with (mail t).  sigh.

>>Error: Error from server: Host OZ requires login for user ANONYMOUS
While in the function NET:UPDATE-OBJECT-PERMANENTLY  (:DEFUN-METHOD TV:PERFORM-COMMAND)  (:METHOD TV:NAMESPACE-EDITOR-FRAME :TOP-LEVEL)

NET:UPDATE-OBJECT-PERMANENTLY:  (P.C. = 172)
   Arg 0 (CLASS): #<CLASS SITE 12415242>
   Arg 1 (NAMESPACE): #<NAMESPACE MIT 12334060>
   Arg 2 (NAME): :MIT
   Arg 3 (PROPERTY-LIST): (:LOCAL-NAMESPACE #<NAMESPACE MIT 12334060> :SITE-DIRECTORY "oz:src:<s.r5.site>" :HOST-FOR-BUG-REPORTS #<TOPS20-HOST OZ 12536514> :TIMEZONE :EST :PRETTY-NAME "MIT" ...)
   Local 4 (.ME-P.): T
   Local 5 (.CLOSE-MODE.): :ABORT
   Local 6: #<DTP-LOCATIVE 310746>
   Local 7: SYS:UNWIND-PROTECT-TAG
   Local 8: #<DTP-EVEN-PC 46310316>
   Local 9: #<DTP-LOCATIVE 310754>
   Local 10: #<DTP-LOCATIVE 43440064>
   Local 11 (.CELL.): #<DTP-LOCATIVE 12334061>
   Local 12 (.LOCK-P.): :LOCKED
   Local 13: SYS:UNWIND-PROTECT-TAG
   Local 14: #<DTP-EVEN-PC 46310322>
   Local 15: #<DTP-LOCATIVE 310754>
   Local 16: #<DTP-LOCATIVE 43440133>
   Local 17 (OBJECT): #<OBJECT SITE MIT 12523166>
   Local 18 (STREAM): #<CHARACTER-STREAM 317545>
   Local 19 (*NAMESPACE*-initialization): #<NAMESPACE MIT 12334060>
   Local 20 (*NAMESPACE-SEARCH-LIST*-initialization): (#<NAMESPACE MIT 12334060>)
   Local 21 (RECORD): (("ERROR" "Host OZ requires login for user ANONYMOUS"))
   Local 22 (*SELECTQ-ITEM*): "ERROR"

(:DEFUN-METHOD TV:PERFORM-COMMAND):  (P.C. = 444)
   Arg 0 (SELF): #<NAMESPACE-EDITOR-FRAME Namespace Editor 1 2240000 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:NAMESPACE-EDITOR-FRAME -- 15. IV's, 12. FL's 27615632>
   Arg 2 (CH): 163

(:METHOD TV:NAMESPACE-EDITOR-FRAME :TOP-LEVEL):  (P.C. = 120)
   Arg 0 (SELF): #<NAMESPACE-EDITOR-FRAME Namespace Editor 1 2240000 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:NAMESPACE-EDITOR-FRAME -- 15. IV's, 12. FL's 27615632>
   Arg 2 (OPERATION): :TOP-LEVEL

TV:START-NAMESPACE-EDITOR:  (P.C. = 4)
   Arg 0 (WINDOW): #<NAMESPACE-EDITOR-FRAME Namespace Editor 1 2240000 exposed>

SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
   --Defaulted args:--
   Arg 0 (IGNORE): NIL
 9-Nov-83 22:16:59-EST,2734;000000000000
Date: Wednesday, 9 November 1983, 22:18-EST
From: Jim Davis <x.jrd at MIT-OZ>
Subject: RTAPE lossage :after :close
To: BUG-LISPM at MIT-OZ

In Release 4.5, site configuration 65, on Lisp Machine Four:

I mounted a distribution tape on CADR27, which was runnning an MIT System.
It errored, saying that CADR-27 did not respond to an RTAPE request.
So I aborted, and got this error.

>>Trap: The function NIL is undefined.
While in the function (METHOD TAPE:REMOTE-TAPE-INPUT-MIXIN AFTER CLOSE)  (METHOD TAPE:REMOTE-TAPE-INPUT-STREAM COMBINED CLOSE)  (METHOD TAPE:REMOTE-TAPE-MIXIN WHOPPER INIT)

(METHOD TAPE:REMOTE-TAPE-INPUT-MIXIN AFTER CLOSE):  (P.C. = 47)
   (SELF = #<REMOTE-TAPE-INPUT-STREAM 27071373>)
   Arg 0 (OPERATION): CLOSE
   Arg 1 (ABORT): ABORT

(METHOD TAPE:REMOTE-TAPE-INPUT-STREAM COMBINED CLOSE):  (P.C. = 115)
   (SELF = #<REMOTE-TAPE-INPUT-STREAM 27071373>)
   Rest arg (.DAEMON-CALLER-ARGS.): (CLOSE ABORT)

(METHOD TAPE:REMOTE-TAPE-MIXIN WHOPPER INIT):  (P.C. = 104)
   (SELF = #<REMOTE-TAPE-INPUT-STREAM 27071373>)
   Arg 0 (.WHOPPER-CONTINUATION.): #<DTP-FEF-POINTER (INTERNAL (METHOD TAPE:REMOTE-TAPE-INPUT-STREAM COMBINED INIT) 0) 24030313>
   Arg 1 (.OLD-SELF-MAPPING-TABLE.): #<Map to flavor TAPE:REMOTE-TAPE-INPUT-STREAM -- 0. IV's, 5. FL's 25457260>
   Arg 2 (SELF-MAPPING-TABLE): #<Map to flavor TAPE:REMOTE-TAPE-MIXIN -- 15. IV's, 0. FL's 25457214>
   Arg 3 (.OPERATION.): INIT
   Rest arg (ARGS): (#<DTP-LOCATIVE 214062>)

(METHOD TAPE:REMOTE-TAPE-INPUT-STREAM COMBINED INIT):  (P.C. = 36)
   (SELF = #<REMOTE-TAPE-INPUT-STREAM 27071373>)
   Rest arg (.DAEMON-CALLER-ARGS.): (INIT #<DTP-LOCATIVE 214062>)

INSTANTIATE-FLAVOR:  (P.C. = 354)
   Arg 0 (FLAVOR-NAME): TAPE:REMOTE-TAPE-INPUT-STREAM
   Arg 1 (INIT-PLIST): #<DTP-LOCATIVE 214062>
   Arg 2 (SEND-INIT-MESSAGE-P): MAYBE
   --Defaulted args:--
   Arg 3 (RETURN-UNHANDLED-KEYWORDS-P): NIL
   Arg 4 (AREA-TO-CONS-INSTANCE-IN): NIL

MAKE-INSTANCE:  (P.C. = 26)
   Arg 0 (FLAVOR-NAME): TAPE:REMOTE-TAPE-INPUT-STREAM
   Rest arg (INIT-OPTIONS): (DIRECTION INPUT UNIT NIL NO-READ-AHEAD NIL PAD-CHAR NIL BUFFER-SIZE NIL ...)

TAPE:MAKE-REMOTE-TAPE-STREAM:  (P.C. = 74)
   Rest arg (ARGS): (DIRECTION INPUT UNIT NIL NO-READ-AHEAD NIL PAD-CHAR NIL BUFFER-SIZE NIL ...)

TAPE:MAKE-STREAM:  (P.C. = 567)
   Rest arg: (DIRECTION INPUT UNIT NIL HOST "cadr27" REEL "md1" LOCK-REASON "Distribution tape" ...)

Rest of stack:
DIS:RAW-DISTRIBUTION-STREAM:  (P.C. = 215)
DIS:DISTRIBUTION-TAPE-STREAM:  (P.C. = 146)
DIS:DISTRIBUTION-RELOADER-GET-STREAM:  (P.C. = 306)
DIS:LOAD-DISTRIBUTION-TAPE:  (P.C. = 171)
SI:*EVAL:  (P.C. = 653)
SI:LISP-TOP-LEVEL1:  (P.C. = 210)
SI:LISP-TOP-LEVEL:  (P.C. = 35)
 9-Nov-83 22:17:59-EST,434;000000000000
Date: 9 November 1983 22:22 EST
From: Kent M. Pitman <KMP @ MIT-MC>
Subject: My message of 9-Nov-83 18:49-EST
To: BUG-LISPM @ MIT-OZ, MMcM @ SCRC-TENEX, CWH @ SCRC-TENEX

Sorry about the bad format in the cc/references field. I sent that
from Babyl and either it or COMSAT seems to have run the original
text through a meat grinder before delivering it. I'll track that
down and report the problem to the appropriate people.
 9-Nov-83 23:21:17-EST,3308;000000000000
Date: Wednesday, 9 November 1983, 23:23-EST
From: Jim Davis <x.jrd at MIT-OZ>
Subject: File system bug
To: BUG-LISPM at MIT-OZ

In Release 4.5, Experimental Useful 3.2, site configuration 65, on Lisp Machine Four:

loading a distribution tape into a logical pathname where the
corresponding oz dir does not yet exist.

>>Error: File system bug on host MIT-OZ:
Invalid directory specification (at 11737 inside FILE server)
For OZ:SRC:<MUSIC.TIME>LMMACS.LISP
While in the function (METHOD FS:HOST-UNIT COMMAND)  FS:CREATE-DIRECTORY-CHAOS  (METHOD FS:CHAOS-PATHNAME CREATE-DIRECTORY)

(METHOD FS:HOST-UNIT COMMAND):  (P.C. = 363)
   (SELF = #<HOST-UNIT 2732006>)
   Arg 0 (OPERATION): COMMAND
   Arg 1 (MARK-P): NIL
   Arg 2 (STREAM-OR-HANDLE): NIL
   Arg 3 (SIMPLE-P): NIL
   Arg 4 (WHOSTATE): "Create Directory"
   Rest arg (COMMANDS): ("CREATE-DIRECTORY" 215 "SRC:<MUSIC.TIME>LMMACS.LISP" 215)
   Local 1 (HANDLE): NIL
   Local 2 (STREAM): NIL
   Local 3 (PKT): #<CHAOS Packet 27341045>
   Local 4 (SUCCESS): NIL
   Local 5 (STRING): " ERROR BUG F Invalid directory specification (at 11737 inside FILE server)"
   Local 6 (TRANSACTION-ID): "T2202"
   Local 7 (CREATE-P): NIL
   Local 8 (FROM): 1
   Local 9 (CONDITION): NIL
   Local 10: T
   Local 11: (#<CASE-HANDLER 2351607> #<CASE-HANDLER 2346372>)

FS:CREATE-DIRECTORY-CHAOS:  (P.C. = 102)
   Arg 0 (HOST): #<TOPS20-CHAOS-HOST MIT-OZ>
   Arg 1 (*COMMAND-PATHNAME*): #<TOPS20-PATHNAME "OZ:SRC:<MUSIC.TIME>LMMACS.LISP">
   Arg 2 (OPTIONS): NIL

(METHOD FS:CHAOS-PATHNAME CREATE-DIRECTORY):  (P.C. = 30)
   (SELF = #<TOPS20-PATHNAME "OZ:SRC:<MUSIC.TIME>LMMACS.LISP">)
   Arg 0 (OPERATION): CREATE-DIRECTORY
   --Defaulted args:--
   Arg 1 (IGNORED): NIL
   Rest arg (OPTIONS): NIL

DIS:DISTRIBUTION-LOAD-CREATE-DIR:  (P.C. = 76)
   Arg 0 (PATH): #<TOPS20-PATHNAME "OZ:SRC:<MUSIC.TIME>LMMACS.LISP">

DIS:DISTRIBUTION-LOAD-OPEN-OUTPUT-FILE:  (P.C. = 113)
   Arg 0 (LOGPATH): #<LOGICAL-PATHNAME "Music: TIME; LMMACS LISP >">
   Arg 1 (CHARACTERS): T
   Arg 2 (BYTE-SIZE): NIL

DIS:DISTRIBUTION-LOAD-FILE-1:  (P.C. = 106)
   Arg 0 (STREAM): #<EMBEDDED-LENGTH-CHARACTER-INPUT-STREAM 27350516>
   Arg 1 (DESCRIP): #<LOGICAL-PATHNAME "Music: TIME; LMMACS LISP >">
   Arg 2 (TARGET-PATH): #<LOGICAL-PATHNAME "Music: TIME; LMMACS LISP >">
   Arg 3 (CHARS): T
   Arg 4 (BYTE-SIZE): NIL
   Arg 5 (TAPE-AUTHOR): "tom"
   Arg 6 (TAPE-DATE): 23533776244

DIS:DISTRIBUTION-LOAD-PATH:  (P.C. = 354)
   Arg 0 (STREAM): #<EMBEDDED-LENGTH-CHARACTER-INPUT-STREAM 27350516>
   Arg 1 (PATH): #<LOGICAL-PATHNAME "Music: TIME; LMMACS LISP >">
   Arg 2 (STORY): (NIL RECORD-TYPE SOURCE-FILE CHARACTERS T BYTE-SIZE 10 CREATION-DATE 23533776244 AUTHOR ...)
   --Defaulted args:--
   Arg 3 (DESCRIP): #<LOGICAL-PATHNAME "Music: TIME; LMMACS LISP >">

DIS:DISTRIBUTION-LOAD-FILE:  (P.C. = 446)
   Arg 0 (STREAM): #<EMBEDDED-LENGTH-CHARACTER-INPUT-STREAM 27350516>
   Arg 1 (STORY): (NIL RECORD-TYPE SOURCE-FILE CHARACTERS T BYTE-SIZE 10 CREATION-DATE 23533776244 AUTHOR ...)

Rest of stack:
DIS:DISTRIBUTION-TAPE-SCAN:  (P.C. = 524)
DIS:LOAD-DISTRIBUTION-TAPE:  (P.C. = 504)
SI:*EVAL:  (P.C. = 653)
SI:LISP-TOP-LEVEL1:  (P.C. = 210)
SI:LISP-TOP-LEVEL2:  (P.C. = 27)
SI:PROCESS-TOP-LEVEL:  (P.C. = 125)
 9-Nov-83 23:23:06-EST,2427;000000000000
Date: Wednesday, 9 November 1983, 23:25-EST
From: Jim Davis <x.jrd at MIT-OZ>
Subject: File system loss
To: BUG-LISPM at MIT-OZ

In Release 4.5, Experimental Useful 3.2, site configuration 65, on Lisp Machine Four:

meta-x Create Directory 

>>Error: File system bug on host MIT-OZ:
Invalid directory specification (at 11737 inside FILE server)
For OZ:SRC:<MUSIC.PATCHES>MUSIC.SYSTEM
While in the function (:METHOD FS:HOST-UNIT :COMMAND)  FS:CREATE-DIRECTORY-CHAOS  (:METHOD FS:CHAOS-PATHNAME :CREATE-DIRECTORY)

(:METHOD FS:HOST-UNIT :COMMAND):  (P.C. = 363)
   (SELF = #<HOST-UNIT 2732006>)
   Arg 0 (OPERATION): :COMMAND
   Arg 1 (MARK-P): NIL
   Arg 2 (STREAM-OR-HANDLE): NIL
   Arg 3 (SIMPLE-P): NIL
   Arg 4 (WHOSTATE): "Create Directory"
   Rest arg (COMMANDS): ("CREATE-DIRECTORY" 215 "SRC:<MUSIC.PATCHES>MUSIC.SYSTEM" 215)
   Local 1 (HANDLE): NIL
   Local 2 (STREAM): NIL
   Local 3 (PKT): #<CHAOS Packet 27377224>
   Local 4 (SUCCESS): NIL
   Local 5 (STRING): " ERROR BUG F Invalid directory specification (at 11737 inside FILE server)"
   Local 6 (TRANSACTION-ID): "T2203"
   Local 7 (CREATE-P): NIL
   Local 8 (FROM): 1
   Local 9 (CONDITION): NIL
   Local 10: T
   Local 11: (#<CASE-HANDLER 2351607> #<CASE-HANDLER 2345465> #<BIND-HANDLER 2345041> #<BIND-HANDLER 2345553>)

FS:CREATE-DIRECTORY-CHAOS:  (P.C. = 102)
   Arg 0 (HOST): #<TOPS20-CHAOS-HOST MIT-OZ>
   Arg 1 (*COMMAND-PATHNAME*): #<TOPS20-PATHNAME "OZ:SRC:<MUSIC.PATCHES>MUSIC.SYSTEM">
   Arg 2 (OPTIONS): NIL

(:METHOD FS:CHAOS-PATHNAME :CREATE-DIRECTORY):  (P.C. = 30)
   (SELF = #<TOPS20-PATHNAME "OZ:SRC:<MUSIC.PATCHES>MUSIC.SYSTEM">)
   Arg 0 (OPERATION): :CREATE-DIRECTORY
   --Defaulted args:--
   Arg 1 (IGNORED): NIL
   Rest arg (OPTIONS): NIL

ZWEI:COM-CREATE-DIRECTORY:  (P.C. = 104)

ZWEI:COM-EXTENDED-COMMAND:  (P.C. = 67)

ZWEI:COMMAND-EXECUTE:  (P.C. = 100)
   Arg 0 (COMMAND): ZWEI:COM-EXTENDED-COMMAND
   Arg 1 (CHAR): 1130
   Arg 2 (PREFIX-CHAR): NIL
   Arg 3 (HOOK-LIST): NIL

ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 67)
   Arg 0 (CH): 1130

(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 377)
   (SELF = #<ZMACS-TOP-LEVEL-EDITOR 2635601>)
   Arg 0 (OPERATION): :EDIT
   --Defaulted args:--
   Arg 1 (TOP-LEVEL-P): T

Rest of stack:
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 102)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 52)
SI:PROCESS-TOP-LEVEL:  (P.C. = 125)
10-Nov-83 04:00:35-EST,2036;000000000000
Date: 10 November 1983 04:05 EST
From: Kent M. Pitman <KMP @ MIT-MC>
Subject:  I/O in Rel 5 Supdup is almost 4 times slower than Rel 4.5 on CADRs
To: BUG-LISPM @ MIT-MC

In Symbolics Releases 4.5 and 5.0.2 on Avatar (CADR):

Tonight, for the first time, I tried Supdup in Release 5 from Avatar.
It was a lot slower than it had been in Release 4.5 ... about four
times as slow, in fact.

I made some timings of the speed. The timings were made by netting to
ITS and printing a long file from DDT. This I hoped would be an easy
enough experiment as to be reproducible without regard to MC's paging
performance. I did the timings twice to get an idea of variance. And
I interleaved the experiments (first working in Rel 4.5, then Rel 5,
then Rel 4.5 again, then Rel 5 again) so that if MC's load changed
drastically, the change would be fairly distributed. I think the timings
show pretty clearly that it's really the Supdup connections' performance
we were measuring (as we'd hoped) and not some random ITS phenomenon.

The file printed was 22,244 words (111,220 chars).
Timings, taken from Avatar, were as follows:

		Rel 5.0.2	Rel 4.5
 Trial 1
  Start		02:08:30	02:24:00
  End		02:16:27	02:26:08
  Elapsed	    7:57	    2:08

 Trial 2
  Start		02:34:45	03:04:00
  End		02:42:43	03:06:09
  Elapsed	    7:58	    2:09

These timings could be off by a second or two, since I was just using my
wholine clock as a timer and relying on my reflexes to measure the times,
but the magnitude of the numbers involved should make such errors 
insignificant.

This means about 870cps (about 9570 baud) in Rel 4.5
  but only about 235cps (about 2585 baud) in Rel 5.0.2

By the way, it's pretty frustrating typing c-G to stop a running program
and finding another 50 lines get typed out before I see the effect of 
the c-G. At the very least, if it's going to run this slowly, is there
some way it could tell ITS it's a slow-speed line so Emacs could know to
load the SLOWLY library and things like that?
10-Nov-83 04:50:59-EST,289;000000000000
Date: Thursday, 10 November 1983, 04:53-EST
From: A Lisp Machine <LISPM at MIT-ELVIS>
Subject: is MIT-MC == SCRC|DM?
To: BUG-LISPM at MIT-AI

In Release 5.0 [GC'd Beta Test rev 3], dusty plum, on Lisp Machine Robot-4 (3600):

In tv:edit-namespace-object, mc prints out as SCRC|DM.
10-Nov-83 07:24:23-EST,1923;000000000000
Date: Wed, 9 Nov 83 10:30 EST
From: "Robert W. Kerns" <RWK%SCRC-YUKON@MIT-MC.ARPA>
Subject: vms as mail host
To: "Patrick G. Sobalvarro" <PGS@MIT-DMS.ARPA>
Cc: BUG-LISPM@MIT-OZ.ARPA, bug-vms@MIT-OZ.ARPA, GUMBY@MIT-OZ.ARPA
In-reply-to: The message of 9 Nov 83 07:14-EST from "Patrick G. Sobalvarro" <PGS at MIT-MC>
Message-ID: <831109103002.1.RWK@YUKON.SCRC.Symbolics>

    Date: 9 November 1983 07:14 EST
    From: Patrick G. Sobalvarro <PGS @ MIT-MC>
	Date: Tue, 8 Nov 83 13:23 EST
	From: Robert W. Kerns <RWK%SCRC-YUKON at MIT-MC.ARPA>
	    Date: Saturday, 5 November 1983, 18:13-EST
	    From: David Vinayak Wallace <GUMBY@MIT-OZ>
	    In Release 5.0 [GC'd Beta Test rev 2], on Lisp Machine Jimi Hendrix (3600):

	    I tried to get my mail from pig.  Got the following error.

	Zmail does not support VMS mail.  There are difficulties with
	doing so over the network; I don't know if they can be worked
	out or not.  It might be necessary to write a special server.

    Not to be inflammatory or anything, but the MIT/RMS system has supported VMS
    mail for about a month now.  It did take him (RMS) a little hacking, but he
    didn't have to write a server.
Fine; does he address such issues as:

> Deleting the file removing all clue as to the desired file protection?
  (This may just be a price you have to pay; the VMS mail command I believe
   creates mailboxes in fascist mode).

> You can't safely overwrite them over the network.  Of course, you have
  the same problem with 20X mail files, but at least you can read your mail
  with BABYL on 20X.

You could use BABYL files, and simply parse the VMS mail file format.
Since I haven't known anybody who cared a whit about crufty VMS mail,
it hasn't seemed worth bothering with.  Are there people who read their
mail on Pig, and would they be happy with not being able to read mail
on the VAX that was read by Zmail?
10-Nov-83 07:31:18-EST,1338;000000000000
Date: 9 Nov 1983 16:14-EST
Sender: JWALKER@SCRC-TENEX
Subject: Re: ONE, TWO, THREE, ...
From: Jan Walker <JWALKER@SCRC-TENEX>
To: kmp@MIT-OZ
Cc: BUG-LISPM@MIT-OZ, Rees@YALE, Guy.Steele@CMU-CS-A
Cc: KMP@MIT-MC
Message-ID: <[SCRC-TENEX] 9-Nov-83 16:14:28.JWALKER>
In-Reply-To: The message of Tuesday, 8 November 1983, 18:37-EST from Kent M. Pitman <kmp at MIT-OZ>

    Date: Tuesday, 8 November 1983, 18:37-EST
    From: Kent M. Pitman <kmp at MIT-OZ>
    In Symbolics Release 4.5 on MIT-Avatar...
    Mightn't it
    be more intuitive to write something like
    
      (IF (ONE X) (FIRST X)) or (IF (TWO X) (SECOND X))
      
    Probably. The names ONE, TWO, THREE, etc. might be slightly 
    misleading because they mean "at least <n>" but they have
    the feature of being short and I think people would get
    used to them. They also neatly describe a sort of relation
    between the pairs X, (CAR X); (CDR X), (CADR X); etc.
    giving a certain pleasant symmetry to the world.
              --------------------
This looks confusing to me.  "one" does not suggest "make sure
there is at least one".  Why go for all different function names
anyhow?  Seems to me more general to have something like

(IF (ENSURE 2 X) (SECOND X))

GUARANTEE would be nice too but not without a spelling corrector...
10-Nov-83 08:17:29-EST,1312;000000000000
Date: 10 November 1983 08:23 EST
From: David Vinayak Wallace <GUMBY @ MIT-MC>
Subject:  vms as mail host
To: RWK @ SCRC-YUKON
cc: PGS @ MIT-MC, BUG-LISPM @ MIT-OZ, bug-vms @ SCRC-TENEX
In-reply-to: Msg of Wed 9 Nov 83 10:30 EST from Robert W. Kerns <RWK%SCRC-YUKON at MIT-MC.ARPA>

    Date: Wed, 9 Nov 83 10:30 EST
    From: Robert W. Kerns <RWK%SCRC-YUKON at MIT-MC.ARPA>

    You could use BABYL files, and simply parse the VMS mail file
    format.  Since I haven't known anybody who cared a whit about
    crufty VMS mail, it hasn't seemed worth bothering with.  Are there
    people who read their mail on Pig, and would they be happy with
    not being able to read mail on the VAX that was read by Zmail?

No.  I did (login'gumby':host'pig) because oz was down.  I sent a
bunch of bug messages, assuming that rel 5 would put GUMBY@OZ in the
header as from or reply-to or something (because that was the info in
my namespace user object for mail address).  I then complained because
nobody at symbolics responded to my bug messages.  Imagine my surprise
when I noticed a file called MAIL.MAI or somesuch on my directory..

So, at least for the pig community, the desired behavior is to have a
mailer for pig that either 1>forwards all mail correctly, or 2>refuses
mail requests.
10-Nov-83 13:58:59-EST,685;000000000000
Received: from SCRC-YAMASKA by SCRC-QUABBIN with CHAOS; Thu 10-Nov-83 13:52:45-EST
Date: Thu, 10 Nov 83 13:50 EST
From: Charles Hornig <Hornig%SCRC-QUABBIN@MIT-MC.ARPA>
Subject: is MIT-MC == SCRC|DM?
To: BUG-LISPM@MIT-OZ.ARPA
In-reply-to: The message of 10 Nov 83 04:53-EST from A Lisp Machine <LISPM at MIT-ELVIS>
Message-ID: <831110135051.6.Hornig@QUABBIN.SCRC.Symbolics>

    Date: Thursday, 10 November 1983, 04:53-EST
    From: A Lisp Machine <LISPM at MIT-ELVIS>
    In Release 5.0 [GC'd Beta Test rev 3], dusty plum, on Lisp Machine Robot-4 (3600):

    In tv:edit-namespace-object, mc prints out as SCRC|DM.

This has been fixed in LM-15's copy of the database.
10-Nov-83 14:10:08-EST,1156;000000000000
Date: Thursday, 10 November 1983, 12:32-EST
From: David Chapman <Zvona at MIT-AI>
Subject: restart handler for no such package prefix
To: BUG-LISPM at MIT-AI

In Release 5.0 [GC'd Beta Test rev 3], FEP 16, dusty plum, on Lisp Machine Buddy Holly (3600):

An option to try again (presumably after declaring the package) would be featureful?

>>Error: ZVAL is not meaningful as a package name relative to USER.
         While reading from #<FILE-INPUT-CHARACTER-STREAM "OZ:PS:<ZVONA>LISPM-INIT.LISP" 307150>
While in the function SI:XR-PACKAGE-PREFIX  (:PROPERTY SI:PACKAGE-PREFIX SI:STANDARD-READ-FUNCTION)  SI:XR-READ-THING

SI:XR-PACKAGE-PREFIX:  (P.C. = 57)
   Arg 0 (STREAM): #<FILE-INPUT-CHARACTER-STREAM "OZ:PS:<ZVONA>LISPM-INIT.LISP" 307150>
   Arg 1 (STRING): "ZVAL"
   Arg 2 (INTERNAL-P): NIL

(:PROPERTY SI:PACKAGE-PREFIX SI:STANDARD-READ-FUNCTION):  (P.C. = 5)
   Arg 0 (STREAM): #<FILE-INPUT-CHARACTER-STREAM "OZ:PS:<ZVONA>LISPM-INIT.LISP" 307150>
   Arg 1 (STRING): "ZVAL"
   Arg 2 (LAST-CH): 72

SI:XR-READ-THING:  (P.C. = 260)
   Arg 0 (STREAM): #<FILE-INPUT-CHARACTER-STREAM "OZ:PS:<ZVONA>LISPM-INIT.LISP" 307150>
10-Nov-83 14:11:14-EST,465;000000000000
Date: Thursday, 10 November 1983, 12:35-EST
From: David Chapman <Zvona at MIT-AI>
Subject: I see no SCRC|DM here.
To: BUG-LISPM at MIT-AI

In Release 5.0 [GC'd Beta Test rev 3], FEP 16, dusty plum, on Lisp Machine Buddy Holly (3600):

When I send mail, it claims to send it via "SCRC|DM".  DM was powered off 
permanently recently, so that can't be true.  SCRC|DM is a pretty funny name 
for MIT-DM anyway.  I notice that (hostat "dm") tells me about MC.
10-Nov-83 14:55:30-EST,929;000000000000
Received: from SCRC-YAMASKA by SCRC-QUABBIN with CHAOS; Thu 10-Nov-83 14:16:43-EST
Date: Thu, 10 Nov 83 14:14 EST
From: Charles Hornig <Hornig%SCRC-QUABBIN@MIT-MC.ARPA>
Subject: I see no SCRC|DM here.
To: David Chapman <Zvona@MIT-OZ.ARPA>, BUG-LISPM@MIT-OZ.ARPA
In-reply-to: The message of 10 Nov 83 12:35-EST from David Chapman <Zvona at MIT-OZ>
Message-ID: <831110141448.7.Hornig@QUABBIN.SCRC.Symbolics>

    Date: Thursday, 10 November 1983, 12:35-EST
    From: David Chapman <Zvona at MIT-AI>
    In Release 5.0 [GC'd Beta Test rev 3], FEP 16, dusty plum, on Lisp Machine Buddy Holly (3600):

    When I send mail, it claims to send it via "SCRC|DM".  DM was powered off 
    permanently recently, so that can't be true.  SCRC|DM is a pretty funny name 
    for MIT-DM anyway.  I notice that (hostat "dm") tells me about MC.

The problem where rel5 LispM's thought that MC was called DM should go
away now.
10-Nov-83 15:06:42-EST,1282;000000000000
Received: from SPA-LOS-TRANCOS by SPA-Nimbus with CHAOS; Thu 10-Nov-83 11:03:38-PST
Date: Thursday, 10 November 1983, 11:05-PST
From: Eric Benson <benson at SPA-Nimbus>
Subject: Re: ONE, TWO, THREE, ...
To: Jan Walker <JWALKER at SCRC-TENEX>, kmp at MIT-OZ
Cc: Lisp-Designers at SPA-Nimbus, BUG-LISPM at MIT-OZ, Rees at YALE,
    Guy.Steele at CMU-CS-A
In-reply-to: <[SCRC-TENEX] 9-Nov-83 16:14:28.JWALKER>

    Date: 9 Nov 1983 16:14-EST
    From: Jan Walker <JWALKER@SCRC-TENEX>
	Date: Tuesday, 8 November 1983, 18:37-EST
	From: Kent M. Pitman <kmp at MIT-OZ>
	In Symbolics Release 4.5 on MIT-Avatar...
	Mightn't it
	be more intuitive to write something like
    
	  (IF (ONE X) (FIRST X)) or (IF (TWO X) (SECOND X))
      
    This looks confusing to me.  "one" does not suggest "make sure
    there is at least one".  Why go for all different function names
    anyhow?  Seems to me more general to have something like

    (IF (ENSURE 2 X) (SECOND X))

    GUARANTEE would be nice too but not without a spelling corrector...

Is it really worth having a new idiom for

(IF (>= (LENGTH X) 2) (SECOND X))?

Especially wasting a nice word like ENSURE on it?

BTW, Bug-Lispm is a silly place for this discussion.  It should go to
Lisp-Designers.
10-Nov-83 15:28:03-EST,1026;000000000000
Received: from SCRC-YANGTZE by SCRC-QUABBIN with CHAOS; Thu 10-Nov-83 15:18:42-EST
Date: Thu, 10 Nov 83 15:22 EST
From: Carl Hoffman <CWH%SCRC-TENEX@MIT-MC.ARPA>
Subject: Re: ONE, TWO, THREE, ...
To: benson%SPA-NIMBUS@MIT-MC.ARPA, JWALKER%SCRC-TENEX@MIT-MC.ARPA,
    kmp@OZ.ARPA
Cc: Lisp-Designers%SCRC-TENEX@MIT-MC.ARPA, BUG-LISPM@OZ.ARPA,
    Rees@YALE.ARPA, Guy.Steele@CMU-CS-A.ARPA
In-reply-to: The message of 10 Nov 83 14:05-EST from Eric Benson <benson at SPA-NIMBUS>

    Date: Thursday, 10 November 1983, 11:05-PST
    From: Eric Benson <benson at SPA-Nimbus>
    Is it really worth having a new idiom for

    (IF (>= (LENGTH X) 2) (SECOND X))?

    Especially wasting a nice word like ENSURE on it?

Unless you have a smart compiler, (>= (LENGTH X) 2) may take longer than
(CDR X), since it must cdr to the end of X.

We already have ENSURE.  It is called NTHCDR.  KMP can write perfectly
symmetric code using NTHCDR and NTH.  Taking the names ONE, TWO, THREE,
away from users is a bad idea.
10-Nov-83 15:30:43-EST,620;000000000000
Date: Thursday, 10 November 1983, 15:26-EST
From: David Chapman <Zvona at MIT-OZ>
To: Jan Walker <JWALKER at SCRC-TENEX>, kmp at MIT-OZ,
    Eric Benson <benson at SPA-NIMBUS>
Cc: Lisp-Designers at SPA-NIMBUS, BUG-LISPM at MIT-OZ, Rees at YALE.ARPA,
    Guy.Steele at CMU-CS-A.ARPA

I like ENSURE.  (The functionality, that is; the name is not bad,
either.)  I do write (IF (>= (LENGTH X) 2) (SECOND X)) a lot, and that
is really inefficient if X is long.  (You want (NOT (NULL (NTHCDR X n)))
for efficiency, but it looks awful -- wrong abstraction level.  A good
compiler would do the optimization, but...)
10-Nov-83 16:27:47-EST,3455;000000000000
Date: Thursday, 10 November 1983, 16:33-EST
From: Patrick A O'Donnell <PAO at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In System 97.23, CADR 1.0, ZMail 51.9, MIT-Specific 21.0, microcode 257,
ZM MIT, on Lisp Machine Twenty-five:

Attempting to compile DUMP-DATA-FOO (see below) results in the machine
hanging, requiring a warm boot.  This is repeatable, on both cadr-5
(with 97.24) and cadr-25.  DUMP-ITEMS expands correctly on its own.
The function compiles fine using DUMP-ITEM to describe each item, as in
DUMP-DATA below.





(DEFMACRO DUMP-ITEMS ITEMS
  (CONS 'PROGN
	(LOOP FOR ((SUBTITLE . ARGS) . FORMS) IN ITEMS
	      NCONC `((PRINC TITLE-STRING FOO)
		      (FORMAT FOO ,SUBTITLE . ,ARGS)
		      (FORMAT FOO "~2%")
		      . ,FORMS))))


(DEFUN DUMP-DATA-FOO (FILE TITLE)
  (LET ((TITLE-STRING
	  (FORMAT NIL "~%~|Puma Compliance data, ~\datime\~%~
                       Wrist cycle time = ~DHz~%~
                       ~A~%"
		  (// 60. (PUMA ':GET-PARAMETER ':WSTTIM))
		  TITLE))
	(METJNT (PUMA ':GET-PARAMETER ':METERED-JOINT)))
    (WITH-OPEN-FILE (FOO FILE ':DIRECTION ':OUTPUT)
      (DUMP-ITEMS
	(("From-wrist input buffer data")
	 (GROK-INPUT-BUFFER ':OUTPUT FOO))
	(("To-wrist output buffer data")
	 (GROK-OUTPUT-BUFFER ':OUTPUT FOO))
	(("Times for input buffer data")
	 (SHOW-METER 5 ':WORD FOO))
	(("Times for output buffer data")
	 (SHOW-METER 6 ':WORD FOO))
	(("Addresses for input buffer data")
	 (SHOW-METER 7 ':WORD FOO))
	(("Addresses for output buffer data")
	 (SHOW-METER 10 ':WORD FOO))
	(("Last 128. sensed positions for joint ~D" METJNT)
	 (SHOW-METER 2 ':FLOAT FOO NIL))
	(("Last 128. sensed velocities for joint ~D" METJNT)
	 (SHOW-METER 3 ':FLOAT FOO NIL))
	(("Last 128. commanded velocities for joint ~D (from Wrist-11)" METJNT)
	 (SHOW-METER 4 ':FLOAT FOO NIL))
	(("Last 128. velocities sent to micros for joint ~D" METJNT)
	 (SHOW-METER 9. ':FLOAT FOO NIL))
	))))





(DEFMACRO DUMP-ITEM ((SUBTITLE . ARGS) . FORMS)
  `(PROGN (PRINC TITLE-STRING FOO)
	  (FORMAT FOO ,SUBTITLE . ,ARGS)
	  (FORMAT FOO "~2%")
	  . ,FORMS))

(DEFUN DUMP-DATA (FILE TITLE)
  (LET ((TITLE-STRING
	  (FORMAT NIL "~%~|Puma Compliance data, ~\datime\~%~
                       Wrist cycle time = ~DHz~%~
                       ~A~%"
		  (// 60. (PUMA ':GET-PARAMETER ':WSTTIM))
		  TITLE))
	(METJNT (PUMA ':GET-PARAMETER ':METERED-JOINT)))
    (WITH-OPEN-FILE (FOO FILE ':DIRECTION ':OUTPUT)
      (DUMP-ITEM ("From-wrist input buffer data")
		 (GROK-INPUT-BUFFER ':OUTPUT FOO))
      (DUMP-ITEM ("To-wrist output buffer data")
		 (GROK-OUTPUT-BUFFER ':OUTPUT FOO))
      (DUMP-ITEM ("Times for input buffer data")
		 (SHOW-METER 5 ':WORD FOO))
      (DUMP-ITEM ("Times for output buffer data")
		 (SHOW-METER 6 ':WORD FOO))
      (DUMP-ITEM ("Addresses for input buffer data")
		 (SHOW-METER 7 ':WORD FOO))
      (DUMP-ITEM ("Addresses for output buffer data")
		 (SHOW-METER 10 ':WORD FOO))
      (DUMP-ITEM ("Last 128. sensed positions for joint ~D" METJNT)
		 (SHOW-METER 2 ':FLOAT FOO NIL))
      (DUMP-ITEM ("Last 128. sensed velocities for joint ~D" METJNT)
		 (SHOW-METER 3 ':FLOAT FOO NIL))
      (DUMP-ITEM ("Last 128. commanded velocities for joint ~D (from Wrist-11)" METJNT)
		 (SHOW-METER 4 ':FLOAT FOO NIL))
      (DUMP-ITEM ("Last 128. velocities sent to micros for joint ~D" METJNT)
		 (SHOW-METER 9. ':FLOAT FOO NIL))
      )))
10-Nov-83 17:14:59-EST,1845;000000000000
Date: Thursday, 10 November 1983, 17:20-EST
From: Patrick A O'Donnell <PAO at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In MIT-Specific 19.5, System 94.42, ZMail 50.17, microcode 239, uC239,
on Lisp Machine Twenty-five:


Insert your description of the circumstances here:

I realize that system 94 is no longer being supported, but...
MANIPULATOR-REQUEST is a structure.  PIG:USRD$:[PUMA.NETSYS]PUMA.LSP is
compiled in system 97.  Attempting to load it into system 94 results in
the following error:



>>TRAP 16412 (TRANS-TRAP)
The function DEFF-MACRO is undefined.
Backtrace from the debugger:

SI:*EVAL (P.C. = 244)

 Arg 0 (FORM): (DEFF-MACRO MAKE-MANIPULATOR-REQUEST (QUOTE **))
Local 0 (ARGNUM): NIL
Local 1 (FCTN): DEFF-MACRO
Local 2 (ARG-DESC): NIL
Local 3 (NUM-ARGS): NIL
Local 4 (CLOSURE-PASSED): NIL
Local 5 (LAMBDA-LIST): NIL
Local 6 (LL): NIL
Local 7 (QUOTE-STATUS): NIL
Local 8 (REST-FLAG): NIL
Local 9 (ARGL): NIL
Local 10: NIL
Local 11: NIL
Local 12 (IGNORE): NIL
Local 13 (ADL): NIL
Local 14 (ITEM): NIL
Local 15 (*SELECTQ-ITEM*): NIL


SYS:FASL-OP-EVAL1 (P.C. = 115)

Local 0 (FORM): (DEFF-MACRO MAKE-MANIPULATOR-REQUEST (QUOTE **))


SI:FASL-GROUP (P.C. = 101)

Local 0 (FASL-GROUP-FLAG): NIL
Local 1 (FASL-GROUP-BITS): 100061
Local 2 (FASL-GROUP-TYPE): 61
Local 3 (FASL-GROUP-LENGTH): 0


SI:FASL-WHACK-SAVE-FASL-TABLE (P.C. = 67)

Local 0 (FASL-RETURN-FLAG): NIL


SI:FASL-WHACK (P.C. = 23)



Remainder of stack:

SI:FASL-TOP-LEVEL (P.C. = 32)
SI:FASLOAD-INTERNAL (P.C. = 467)
FASLOAD (P.C. = 100)
SI:FASLOAD-1 (P.C. = 32)
SI:DO-FILE-TRANSFORMATIONS (P.C. = 261)
SI:PERFORM-TRANSFORMATIONS (P.C. = 125)
MAKE-SYSTEM (P.C. = 210)
SI:*EVAL (P.C. = 1234)
SI:EVAL-ABORT-TRIVIAL-ERRORS (P.C. = 44)
SI:LISP-TOP-LEVEL1 (P.C. = 254)
SI:LISP-TOP-LEVEL (P.C. = 35)
10-Nov-83 18:19:24-EST,295;000000000000
Date: Thursday, 10 November 1983, 18:18-EST
From: Henry Lieberman <Henry at MIT-OZ>
Subject: A compliment, for a change
To: BUG-LISPM at MIT-OZ

In Release 5.0 [GC'd Beta Test rev 3], dusty plum, on Lisp Machine Apiary-7 (3600):

The new CPTFONT looks much better than the old one!

 
10-Nov-83 19:50:07-EST,2133;000000000000
Mail-From: KMP created at 10-Nov-83 19:45:57
Date: Thu 10 Nov 83 19:45:56-EST
From: KMP@MIT-OZ
Subject: ONE, TWO, THREE, ...
To: CWH%SCRC-TENEX@MIT-MC.ARPA, PhilG@SCRC-TENEX, JWalker@SCRC-TENEX,
    Benson@SCRC-TENEX
cc: Lisp-Designers%SCRC-TENEX@MIT-MC.ARPA, Rees@YALE.ARPA,
    Guy.Steele@CMU-CS-A.ARPA, bug-lispm@MIT-OZ
In-Reply-To: Message from "Carl Hoffman <CWH%SCRC-TENEX@MIT-MC.ARPA>" of Thu 10 Nov 83 15:28:04-EST

    Date: Thu, 10 Nov 83 15:22 EST
    From: Carl Hoffman <CWH%SCRC-TENEX@MIT-MC.ARPA>
    Re:   Re: ONE, TWO, THREE, ...

        Date: Thursday, 10 November 1983, 11:05-PST
        From: Eric Benson <benson at SPA-Nimbus>

        Is it really worth having a new idiom for

        (IF (>= (LENGTH X) 2) (SECOND X))?

        Especially wasting a nice word like ENSURE on it?

    Unless you have a smart compiler, (>= (LENGTH X) 2) may take longer than
    (CDR X), since it must cdr to the end of X.

    We already have ENSURE.  It is called NTHCDR.  KMP can write perfectly
    symmetric code using NTHCDR and NTH.  Taking the names ONE, TWO, THREE,
    away from users is a bad idea.

I agree with all of this except one point. If you want me to use NTH/NTHCDR,
why are FIRST, SECOND, THIRD, ... in the language? I feel they need more
support than they are getting in order to be happy. If they don't get that
support, I am of the mind to say they should be flushed. They suggest an
incompatible (1-based) abstraction for lists and then don't offer much
support for that abstraction.

On the other hand, Eric's and Jan's suggestions give me another idea.
What if a second argument to LENGTH caused it to return a truth value.
Even an interpreter could deal with that, returning in reasonable time
even if X were circular.
eg,	   (IF (LENGTH X 2) (SECOND X)) 
would mean (IF (= (LENGTH X) 2) (SECOND X))
You could add two more primitives, SHORTER and LONGER, for symmetry.
This is basically in the spirit of Jan's remarks but with better naming.
So my code would read
	   (IF (LONGER X 1) (SECOND X))
meaning    (IF (>= (LENGTH X) 2) (SECOND X))
-------
10-Nov-83 20:46:05-EST,1011;000000000000
Received: from SCRC-EUPHRATES by SCRC-TENEX with CHAOS; Thu 10-Nov-83 20:42:07-EST
Date: Thu, 10 Nov 83 20:47 EST
From: "David A. Moon" <Moon%SCRC-TENEX@MIT-MC.ARPA>
To: David Chapman <Zvona@MIT-OZ.ARPA>,
    Jan Walker <JWALKER%SCRC-TENEX@MIT-MC.ARPA>, kmp@MIT-OZ.ARPA,
    Eric Benson <benson%SPA-NIMBUS@MIT-MC.ARPA>
Cc: Lisp-Designers%SPA-NIMBUS@MIT-MC.ARPA, BUG-LISPM@MIT-OZ.ARPA,
    Rees@YALE.ARPA, Guy.Steele@CMU-CS-A.ARPA
In-reply-to: The message of 10 Nov 83 15:26-EST from David Chapman <Zvona at MIT-OZ>

    Date: Thursday, 10 November 1983, 15:26-EST
    From: David Chapman <Zvona at MIT-OZ>
    I like ENSURE.  (The functionality, that is; the name is not bad,
    either.)  I do write (IF (>= (LENGTH X) 2) (SECOND X)) a lot, and that
    is really inefficient if X is long.

I wasn't going to participate in this discussion, but why don't you simply
write (SECOND X) and leave the testing for null up to the implementation of
CDR instead of writing it out painfully by hand?
10-Nov-83 21:07:47-EST,1002;000000000000
Received: from SCRC-EUPHRATES by SCRC-TENEX with CHAOS; Thu 10-Nov-83 21:04:33-EST
Date: Thu, 10 Nov 83 21:09 EST
From: "David A. Moon" <Moon%SCRC-TENEX@MIT-MC.ARPA>
Subject: restart handler for no such package prefix
To: David Chapman <Zvona@MIT-OZ.ARPA>
Cc: BUG-LISPM@MIT-OZ.ARPA
In-reply-to: The message of 10 Nov 83 12:32-EST from David Chapman <Zvona at MIT-OZ>

    Date: Thursday, 10 November 1983, 12:32-EST
    From: David Chapman <Zvona at MIT-AI>

    An option to try again (presumably after declaring the package) would be featureful?

    >>Error: ZVAL is not meaningful as a package name relative to USER.
	     While reading from #<FILE-INPUT-CHARACTER-STREAM "OZ:PS:<ZVONA>LISPM-INIT.LISP" 307150>
    While in the function SI:XR-PACKAGE-PREFIX  (:PROPERTY SI:PACKAGE-PREFIX SI:STANDARD-READ-FUNCTION)  SI:XR-READ-THING

Added in the source (SI:XR-PACKAGE-PREFIX).  It offers the same proceed types
as other package-not-found errors.  Doesn't seem worth patching.
10-Nov-83 21:37:02-EST,1208;000000000000
Received: from SCRC-EUPHRATES by SCRC-TENEX with CHAOS; Thu 10-Nov-83 21:35:04-EST
Date: Thu, 10 Nov 83 21:40 EST
From: "David A. Moon" <Moon%SCRC-TENEX@MIT-MC.ARPA>
Subject: File system bug
To: Jim Davis <x.jrd@MIT-OZ.ARPA>
Cc: BUG-LISPM@MIT-OZ.ARPA
In-reply-to: The message of 9 Nov 83 23:23-EST from Jim Davis <x.jrd at MIT-OZ>,
             The message of 9 Nov 83 23:25-EST from Jim Davis <x.jrd at MIT-OZ>

    Date: Wednesday, 9 November 1983, 23:23-EST
    From: Jim Davis <x.jrd at MIT-OZ>
    Subject: File system bug
    To: BUG-LISPM at MIT-OZ
    
    In Release 4.5, Experimental Useful 3.2, site configuration 65, on Lisp Machine Four:
    
    loading a distribution tape into a logical pathname where the
    corresponding oz dir does not yet exist.
    
    >>Error: File system bug on host MIT-OZ:
    Invalid directory specification (at 11737 inside FILE server)
    For OZ:SRC:<MUSIC.TIME>LMMACS.LISP
    While in the function (METHOD FS:HOST-UNIT COMMAND)  FS:CREATE-DIRECTORY-CHAOS  (METHOD FS:CHAOS-PATHNAME CREATE-DIRECTORY)

Creating directories on Tops-20 only works in release 5.  Just telnet over,
create it by hand, and return from create-directory.
10-Nov-83 21:43:06-EST,1331;000000000000
Received: from SCRC-EUPHRATES by SCRC-TENEX with CHAOS; Thu 10-Nov-83 21:38:26-EST
Date: Thu, 10 Nov 83 21:43 EST
From: "David A. Moon" <Moon%SCRC-TENEX@MIT-MC.ARPA>
Subject: vms as mail host
To: David Vinayak Wallace <GUMBY@MC.ARPA>
Cc: RWK%SCRC-YUKON@MIT-MC.ARPA, PGS@MC.ARPA, BUG-LISPM@MIT-OZ.ARPA
In-reply-to: The message of 10 Nov 83 08:23-EST from David Vinayak Wallace <GUMBY at MIT-MC>

    Date: 10 November 1983 08:23 EST
    From: David Vinayak Wallace <GUMBY @ MIT-MC>

    No.  I did (login'gumby':host'pig) because oz was down.  I sent a
    bunch of bug messages, assuming that rel 5 would put GUMBY@OZ in the
    header as from or reply-to or something (because that was the info in
    my namespace user object for mail address).

By specifying the :host argument to login, you told the system "I'm not
the gumby that's in the namespace system; I'm someone known to the host pig
as gumby but not known to the Lisp machine.  Thus it didn't have any namespace
data and assumed your mail address was gumby@pig.

When OZ is down if you just login normally you'll get an error with a proceed
type of "use some other host as your home directory".  It seems reasonable
to want a way to say this with login, rather than waiting for the error.
We should consider this for the future login command.
10-Nov-83 21:52:48-EST,2367;000000000000
Received: from SCRC-EUPHRATES by SCRC-TENEX with CHAOS; Thu 10-Nov-83 21:42:58-EST
Date: Thu, 10 Nov 83 21:48 EST
From: "David A. Moon" <Moon%SCRC-TENEX@MIT-MC.ARPA>
Subject: Rel 5 slowness, revisited
To: "Kent M. Pitman" <KMP@MC.ARPA>
Cc: BUG-LISPM@MC.ARPA
In-reply-to: The message of 9 Nov 83 18:05-EST from Kent M. Pitman <KMP at MIT-MC>

    Date: Wednesday, 9 November 1983, 18:05-EST
    From: Kent M. Pitman <KMP at MC>
    In Symbolics Release 5.0 [GC'd Beta Test rev 2] on Avatar (CADR):

    Well, I redumped the Rel 5 that I got from LM15 and it boots faster.

    In thinking about this, though, I am confused about why that should
    be true. The band I had booted before was taken from what LM15 was
    running as a current band. Unless I'm confused, it seems to me that 
    this should have maximized my chances of running an up-to-date version
    of the namespace world. 

Copying a band from a machine copies the saved band, not the current contents
of virtual memory.  No doubt someone changed some namespace objects after
the last time DISK-SAVE was done on LM15.

You probably don't really want to copy the namespace server's band, since
it will be larger than bands for other machines.  For example, it has complete
data on every (registered) user in it, which you clearly don't need.

    Also, even with this freshly cached environment I am running, I 
    find that I still have to sit with the wholine in "Connect P" for several
    seconds while it decides that P (Pointer) is not avaliable. This strikes
    me as extraneous, since I don't see any reason for the MIT site to be
    talking to P if LM15 is up (which it is). Also, when P finally doesn't 
    respond, the system seems to still be able to run fine, so whatever it
    was trying to get from it seems extraneous.

Hasn't this question been asked and answered several times already?  The
secondary namespace server feature takes care of this.  Secondary namespace
servers have not been installed at MIT yet because we felt that it would
be a good idea to debug them first, and until recently we didn't have enough
machines at SCRC to be able to set up a realistic test of secondary namespace
servers.  LM15 will be a secondary server for SCRC and ARPANET, and MIT
machines other than LM15 will normally not contact SCRC machines.
10-Nov-83 22:09:50-EST,1054;000000000000
Received: from CHAOS|22300 by SPA-Nimbus with CHAOS; Thu 10-Nov-83 19:11:30-PST
Date: Thursday, 10 November 1983, 19:13-PST
From: Marc LeBrun <mlb at SPA-NIMBUS>
Subject: Re: ONE, TWO, THREE, ...
To: CWH at SCRC-TENEX, benson at SPA-NIMBUS, JWALKER at SCRC-TENEX,
    kmp at MIT-OZ
Cc: Lisp-Designers at SCRC-TENEX, BUG-LISPM at MIT-OZ, Rees at YALE,
    Guy.Steele at CMU-CS-A
In-reply-to: The message of 10 Nov 83 12:22-PST from Carl Hoffman <CWH at SCRC-TENEX>

The Common Lisp function LIST-LENGTH takes an optional argument LIMIT which is
returned if the list turns out to be at least that long (or circular).  Hence
trundling down to the end can be avoided if all you want to know is whether the
list is at least n long.  Besides for the functionality being discussed, this
will be good in general.  For example the curent sorting code has things like 
 (> (length l) 12) in it, and many things hang in length ungracefully (eg just
in number of argument checks) when given circular lists, which can be a pain
in debugging.  FICL?
10-Nov-83 22:28:46-EST,1985;000000000000
Date: Thursday, 10 November 1983, 22:31-EST
From: Carl Hewitt <HEWITT at MIT-OZ>
Subject: Bug in Release 5 Zmail
To: BUG-LISPM at MIT-OZ

In Release 5.0 [GC'd Beta Test rev 3], dusty plum, on Lisp Machine Apiary-7 (3600):

Trying to save my Zmail file:

>>Trap: The first argument given to the AR-1 instruction, NIL, was not an array.
While in the function ZWEI:ZMAIL-BACKGROUND-PARSE-MSGS  ZWEI:ZMAIL-BACKGROUND-PERFORM  ZWEI:ZMAIL-BACKGROUND-LOOP-BODY

ZWEI:ZMAIL-BACKGROUND-PARSE-MSGS:  (P.C. = 70)
   Arg 0 (REQUEST): (ZWEI:ZMAIL-BACKGROUND-PARSE-MSGS #<BABYL-BUFFER "XX:PS:<HEWITT>HEWITT.BABYL" 435727> 40.)
   Local 1 (BUFFER): #<BABYL-BUFFER "XX:PS:<HEWITT>HEWITT.BABYL" 435727>
   Local 2 (START): 40.
   Local 3 (ARRAY): #<ART-Q-512. 435751>
   Local 4 (.ME-P.): T
   Local 5 (.CLOSE-MODE.): :ABORT
   Local 6: #<DTP-LOCATIVE 12072655>
   Local 7: SYS:UNWIND-PROTECT-TAG
   Local 8: #<DTP-ODD-PC 31607524>
   Local 9: #<DTP-LOCATIVE 12072663>
   Local 10: #<DTP-LOCATIVE 43340063>
   Local 11: #<DTP-LOCATIVE 435730>
   Local 12: T
   Local 13: SYS:UNWIND-PROTECT-TAG
   Local 14: #<DTP-ODD-PC 31607530>
   Local 15: #<DTP-LOCATIVE 12072663>
   Local 16: #<DTP-LOCATIVE 43340121>
   Local 17 (INDEX): 290.
   Local 18 (MAX): 294.
   Local 19 (COUNT): 0.
   Local 20 (MSG): NIL

ZWEI:ZMAIL-BACKGROUND-PERFORM:  (P.C. = 20)
   Arg 0 (CURRENT-REQUEST): (ZWEI:ZMAIL-BACKGROUND-PARSE-MSGS #<BABYL-BUFFER "XX:PS:<HEWITT>HEWITT.BABYL" 435727> 40.)

ZWEI:ZMAIL-BACKGROUND-LOOP-BODY:  (P.C. = 37)
   Arg 0 (LOCK): #<DTP-LOCATIVE 12072574>
   Arg 1 (COMMAND-BUFFER-POINTER): #<DTP-LOCATIVE 12072573>
   Arg 2 (PRELOAD-QUEUE-POINTER): #<DTP-LOCATIVE 12072575>
   Arg 3 (PRELOAD-FILE-POINTER): #<DTP-LOCATIVE 12072576>

ZWEI:ZMAIL-BACKGROUND:  (P.C. = 32)
   Arg 0 (*FOREGROUND-WINDOW*-initialization): #<ZMAIL-FRAME Main Zmail Window 2300161 deexposed>

SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
   --Defaulted args:--
   Arg 0 (IGNORE): NIL
10-Nov-83 23:58:01-EST,859;000000000000
Date: Thu 10 Nov 83 23:55:40-EST
From: KMP%MIT-OZ@MIT-MC.ARPA
To: Moon%SCRC-TENEX@MIT-MC.ARPA
cc: Zvona@MIT-OZ.ARPA, JWALKER%SCRC-TENEX@MIT-MC.ARPA,
    benson%SPA-NIMBUS@MIT-MC.ARPA, Lisp-Designers%SPA-NIMBUS@MIT-MC.ARPA,
    BUG-LISPM@MIT-OZ.ARPA, Rees@YALE.ARPA, Guy.Steele@CMU-CS-A.ARPA
In-Reply-To: Message from ""David A. Moon" <Moon%SCRC-TENEX@MIT-MC.ARPA>" of Thu 10 Nov 83 20:45:37-EST

The actual case in point did something hairier in the consequent. Somehow
the discussion has seen fit to truncate the example. It was really a case
of (IF (>= (LENGTH X) 2) (F (SECOND X))) 
or (IF (>= (LENGTH X) 2) (SECOND X) (SOMETHING ELSE)),
neither of which can be left up to the implementation of CDR.

Sorry for the confusion. I noticed this earlier but figured I'd not
mention it as long as everyone else was politely ignoring it.
-------
11-Nov-83 01:05:04-EST,2586;000000000000
Date: Friday, 11 November 1983  00:54-EST
From: Alan Bawden <ALAN at SCRC-TENEX>
To:   Benson at SCRC-TENEX, CWH at SCRC-TENEX, Zvona at OZ, KMP at OZ
Cc:   Guy.Steele at CMU-CS-A, Bug-LISPM at OZ,
      Lisp-Designers at SCRC-TENEX, Rees at YALE, PhilG at SCRC-TENEX
JWalker, MLB, Alan@MC
Subject: One, two, three, everybody think carefully.
In-reply-to: The message of 10 Nov 1983 11:05-PST from Eric Benson <benson at SPA-Nimbus>

    Date: Thursday, 10 November 1983, 11:05-PST
    From: Eric Benson <benson at SPA-Nimbus>
    Is it really worth having a new idiom for

    (IF (>= (LENGTH X) 2) (SECOND X))?

    Especially wasting a nice word like ENSURE on it?

Depends what KMP had in mind originally.  If the contract of ENSURE (or
TWO, or whatever) is to check that an object is a cons whose CDR is another
cons, then using LENGTH like this is not just inefficient (as already been
noted), it is also wrong:

 (LENGTH '(A B . C))  =>  <<error>>

while I presume that ENSURE is intended to be such that 

 (ENSURE 2 '(A B . C))  =>  T.

After all, you are allowed to use FIRST, SECOND and NTH on "dotted" lists.

    Date: Thursday, 10 November 1983, 15:22-EST
    From: Carl Hoffman <CWH>
    We already have ENSURE.  It is called NTHCDR.

Perhaps not:

 (NTHCDR 2 '(A . B))  =>  <<error>>

while I presume (with perhaps less basis than my last presumption) that

 (ENSURE 3 '(A . B))  =>  NIL.

In fact

 (NTHCDR 1 '(A . B))  =>  B

which would represent truth in Lisp, while (persuming again)

 (ENSURE 2 '(A . B))  =>  NIL.

BTW I don't think that the names ONE, TWO, THREE are particularly
suggestive of this kind of predicate.  Let's save them for when they are
more clearly right.

On a related issue let me reiterate my complaint to Lisp-Designers of a
couple weeks back.  It is sometimes inconvienient that LENGTH is defined to
signal an error when handed a "dotted" or "improper" list.  I find myself
wanting a function that just counts the number of CDRs I have to take
before I get to an atom.  Suggested names so far:

WIDTH		I think these names are all both too vague and too good to 
DEPTH		steal away from programmers.
RADIUS

LENGTH*		Note that (LENGTH (LIST A B C)) is always 3, while
		(LENGTH* (LIST* A B C)) is not always 2.

TREE-WIDTH
TREE-DEPTH
TREE-RADIUS
TREE-LENGTH
IMPROPER-LENGTH
DOTTED-LENGTH

CDR-DEPTH	This gets my vote if I had to vote.  CAR-DEPTH might have
		it's uses as well.  (CADDAR-DEPTH?)

CDR-LENGTH	Aren't all CDR's the same length?
CDR-WIDTH
CDR-RADIUS
11-Nov-83 11:26:58-EST,2194;000000000000
Date: Friday, 11 November 1983, 11:25-EST
From: Elijah Millgram <MILLGRAM at MIT-OZ>
Subject: rel5 doesn't know supdup
To: BUG-LISPM at MIT-OZ

In Release 5.0 [GC'd Beta Test rev 3], dusty plum, on Lisp Machine Apriary-3 (3600):

What is one supposed to do instead?

>>Error: SUPDUP is not meaningful as a package name relative to USER.
         While reading from #<FILE-INPUT-CHARACTER-STREAM "OZ:PS:<MILLGRAM>LISPM-INIT.LISP" 401673>
While in the function SI:XR-PACKAGE-PREFIX  (:PROPERTY SI:PACKAGE-PREFIX SI:STANDARD-READ-FUNCTION)  SI:XR-READ-THING

SI:XR-PACKAGE-PREFIX:  (P.C. = 57)
   Arg 0 (STREAM): #<FILE-INPUT-CHARACTER-STREAM "OZ:PS:<MILLGRAM>LISPM-INIT.LISP" 401673>
   Arg 1 (STRING): "SUPDUP"
   Arg 2 (INTERNAL-P): NIL

(:PROPERTY SI:PACKAGE-PREFIX SI:STANDARD-READ-FUNCTION):  (P.C. = 5)
   Arg 0 (STREAM): #<FILE-INPUT-CHARACTER-STREAM "OZ:PS:<MILLGRAM>LISPM-INIT.LISP" 401673>
   Arg 1 (STRING): "SUPDUP"
   Arg 2 (LAST-CH): 72

SI:XR-READ-THING:  (P.C. = 260)
   Arg 0 (STREAM): #<FILE-INPUT-CHARACTER-STREAM "OZ:PS:<MILLGRAM>LISPM-INIT.LISP" 401673>

(:PROPERTY LIST SI:STANDARD-READ-FUNCTION):  (P.C. = 50)
   Arg 0 (STREAM): #<FILE-INPUT-CHARACTER-STREAM "OZ:PS:<MILLGRAM>LISPM-INIT.LISP" 401673>
   Arg 1 (SHOULD-BE-NIL): NIL
   Arg 2 (FIFTY): 50

SI:XR-READ-THING:  (P.C. = 60)
   Arg 0 (STREAM): #<FILE-INPUT-CHARACTER-STREAM "OZ:PS:<MILLGRAM>LISPM-INIT.LISP" 401673>

(:INTERNAL SI:READ-INTERNAL 0):  (P.C. = 15)
   Arg 0 (STREAM): #<FILE-INPUT-CHARACTER-STREAM "OZ:PS:<MILLGRAM>LISPM-INIT.LISP" 401673>
   Arg 1 (FUNCTION): READ
   Arg 2 (EOF-OPTION): (NIL)

SI:READ-INTERNAL:  (P.C. = 53)
   Arg 0 (FUNCTION): READ
   Rest arg (READ-ARGS): (#<FILE-INPUT-CHARACTER-STREAM "OZ:PS:<MILLGRAM>LISPM-INIT.LISP" 401673> (NIL))

READ:  (P.C. = 6)
   Rest arg (READ-ARGS): (#<FILE-INPUT-CHARACTER-STREAM "OZ:PS:<MILLGRAM>LISPM-INIT.LISP" 401673> (NIL))

Rest of stack:
SI:READFILE-INTERNAL:  (P.C. = 102)
LOAD:  (P.C. = 266)
LOGIN:  (P.C. = 422)
SI:*EVAL:  (P.C. = 370)
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 200)
SI:LISP-COMMAND-LOOP:  (P.C. = 115)
SI:LISP-TOP-LEVEL1:  (P.C. = 22)
SI:LISP-TOP-LEVEL:  (P.C. = 7)
11-Nov-83 11:28:03-EST,3199;000000000000
Date: Friday, 11 November 1983, 11:27-EST
From: Ken Forbus <KDF at MIT-PYGMALION>
Subject: File confusion...
To: BUG-LISPM at OZ

In Release 4.5, site configuration 75, on Lisp Machine John Lennon:

Calling (load "oz:src:<kdf.physics>nst-scenario0.lisp") caused the following:

>>Error: "LISP" is an invalid file type for FS:VMS-PATHNAME
While in the function (METHOD FS:PATHNAME VALIDATE-COMPONENT)  (METHOD FS:PATHNAME VALIDATE)  (METHOD FS:PATHNAME-HASH-TABLE-MIXIN GET-PATHNAME)

(METHOD FS:PATHNAME VALIDATE-COMPONENT):  (P.C. = 41)
   Arg 0 (SELF): #<VMS-PATHNAME "PIG:USRD$:[KDF]NQP">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:PATHNAME -- 0. IV's, 1. FL's 60530213>
   Arg 2 (OPERATION): VALIDATE-COMPONENT
   Arg 3 (TEST-ARG): "LISP"
   Arg 4 (TEST-ARG-LOC): #<DTP-LOCATIVE 6155020>
   Arg 5 (VALID-MSG): RAW-TYPE
   Arg 6 (TEST-MSG): VALID-TYPE-P
   Arg 7 (CASE-MSG): CASE-TYPE
   Arg 8 (UNCASE-MSG): UNCASE-TYPE
   Arg 9 (COMPONENT): TYPE
   Arg 10 (PRETTY-NAME): "file type"

(METHOD FS:PATHNAME VALIDATE):  (P.C. = 30)
   Arg 0 (SELF): #<VMS-PATHNAME "PIG:USRD$:[KDF]NQP">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:PATHNAME -- 0. IV's, 1. FL's 60530213>
   Arg 2 (OPERATION): VALIDATE

(METHOD FS:PATHNAME-HASH-TABLE-MIXIN GET-PATHNAME):  (P.C. = 30)
   Arg 0 (SELF): #<CASE-INSENSITIVE-PATHNAME-HASH-TABLE MIT-PYGMALION>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:PATHNAME-HASH-TABLE-MIXIN -- 1. IV's, 0. FL's 60513752>
   Arg 2 (OPERATION): GET-PATHNAME
   Arg 3 (DEV): "USRD$"
   Arg 4 (DIR): "KDF"
   Arg 5 (NAM): "NQP"
   Arg 6 (TYP): "LISP"
   Arg 7 (VRS): NEWEST
   Arg 8 (KEY): ("USRD$" "KDF" "NQP" "LISP" NEWEST)

(METHOD SI:PATHNAME-HOST-MIXIN GET-PATHNAME):  (P.C. = 27)
   Arg 0 (SELF): #<VMS-CHAOS-HOST MIT-PYGMALION>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:PATHNAME-HOST-MIXIN -- 2. IV's, 0. FL's 60531555>
   Arg 2 (OPERATION): GET-PATHNAME
   Arg 3 (DEV): "USRD$"
   Arg 4 (DIR): "KDF"
   Arg 5 (NAM): "NQP"
   Arg 6 (TYP): "LISP"
   Arg 7 (VRS): NEWEST

FS:MAKE-PATHNAME-1:  (P.C. = 672)
   Rest arg (OPTIONS): (DEFAULT-HOST #<VMS-CHAOS-HOST MIT-PYGMALION> DEFAULT-DEVICE "USRD$" DEFAULT-DIRECTORY "KDF" DEFAULT-NAME "NQP" DEFAULT-TYPE "LSP" ...)

(METHOD FS:PATHNAME NEW-PATHNAME):  (P.C. = 37)
   Arg 0 (SELF): #<VMS-PATHNAME "PIG:USRD$:[KDF]NQP.LSP">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:PATHNAME -- 0. IV's, 1. FL's 60530213>
   Arg 2 (OPERATION): NEW-PATHNAME
   Rest arg (OPTIONS): (TYPE "LISP")

(METHOD FS:PATHNAME COMBINED NEW-PATHNAME):  (P.C. = 36)
   Arg 0 (SELF): #<VMS-PATHNAME "PIG:USRD$:[KDF]NQP.LSP">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:PATHNAME -- 0. IV's, 1. FL's 60530213>
   Rest arg (.DAEMON-CALLER-ARGS.): (NEW-PATHNAME TYPE "LISP")

(METHOD FS:PATHNAME NEW-TYPE):  (P.C. = 6)
   Arg 0 (SELF): #<VMS-PATHNAME "PIG:USRD$:[KDF]NQP.LSP">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:PATHNAME -- 0. IV's, 1. FL's 60530213>
   Arg 2 (OPERATION): NEW-TYPE
   Arg 3 (NEW-TYPE): "LISP"

Rest of stack:
LOAD:  (P.C. = 132)
SI:*EVAL:  (P.C. = 405)
SI:LISP-TOP-LEVEL1:  (P.C. = 130)
SYS:LISP-TOP-LEVEL:  (P.C. = 7)
11-Nov-83 11:30:15-EST,346;000000000000
Mail-From: MILLGRAM created at 11-Nov-83 11:28:10
Date: Fri, 11 Nov 1983  11:28 EST
Message-ID: <MILLGRAM.11966791342.BABYL@MIT-OZ>
From: MILLGRAM@MIT-OZ
To:   bug-lispm@MIT-OZ
cc:   jba@MIT-OZ

Rel 5 doesn't seem to know about that little diamond-shaped
character one used to find on the COMPLETE key?
Where can one find such a thing?
11-Nov-83 13:35:58-EST,589;000000000000
Received: from SCRC-YANGTZE by SCRC-QUABBIN with CHAOS; Fri 11-Nov-83 13:35:22-EST
Date: Fri, 11 Nov 83 13:38 EST
From: Carl Hoffman <CWH%SCRC-TENEX@MIT-MC.ARPA>
To: MILLGRAM@MIT-OZ.ARPA, bug-lispm@MIT-OZ.ARPA
Cc: jba@MIT-OZ.ARPA
In-reply-to: <MILLGRAM.11966791342.BABYL@MIT-OZ>

    Date: Fri, 11 Nov 1983  11:28 EST
    From: MILLGRAM@MIT-OZ
    Rel 5 doesn't seem to know about that little diamond-shaped
    character one used to find on the COMPLETE key?
    Where can one find such a thing?

Type Symbol-Escape.  Type Symbol-Help for a list of all of the Symbol- keys.
11-Nov-83 13:41:20-EST,994;000000000000
Received: from SCRC-YANGTZE by SCRC-QUABBIN with CHAOS; Fri 11-Nov-83 13:40:35-EST
Date: Fri, 11 Nov 83 13:43 EST
From: Carl Hoffman <CWH%SCRC-TENEX@MIT-MC.ARPA>
Subject: rel5 doesn't know supdup
To: MILLGRAM@MIT-OZ.ARPA, BUG-LISPM@MIT-OZ.ARPA
In-reply-to: The message of 11 Nov 83 11:25-EST from Elijah Millgram <MILLGRAM at MIT-OZ>

    Date: Friday, 11 November 1983, 11:25-EST
    From: Elijah Millgram <MILLGRAM at MIT-OZ>
    In Release 5.0 [GC'd Beta Test rev 3], dusty plum, on Lisp Machine Apriary-3 (3600):

    What is one supposed to do instead?

    >>Error: SUPDUP is not meaningful as a package name relative to USER.
	     While reading from #<FILE-INPUT-CHARACTER-STREAM "OZ:PS:<MILLGRAM>LISPM-INIT.LISP" 401673>
    While in the function SI:XR-PACKAGE-PREFIX  (:PROPERTY SI:PACKAGE-PREFIX SI:STANDARD-READ-FUNCTION)  SI:XR-READ-THING

SUPDUP:SUPDUP-DEFAULT-PATH is obsolete.
Release 5 has more sophisticated mechanisms for choosing routes to the Arpanet.
11-Nov-83 14:06:43-EST,1784;000000000000
Date: Fri, 11 Nov 83 13:56 EST
From: "Robert W. Kerns" <RWK%SCRC-YUKON@MIT-MC.ARPA>
Subject: vms as mail host
To: David Vinayak Wallace <GUMBY@MC.ARPA>
Cc: PGS@MC.ARPA, BUG-LISPM@MIT-OZ.ARPA, bug-vms%SCRC-TENEX@MIT-MC.ARPA
In-reply-to: The message of 10 Nov 83 08:23-EST from David Vinayak Wallace <GUMBY at MIT-MC>
Message-ID: <831111135608.7.RWK@YUKON.SCRC.Symbolics>

    Date: 10 November 1983 08:23 EST
    From: David Vinayak Wallace <GUMBY @ MIT-MC>
	Date: Wed, 9 Nov 83 10:30 EST
	From: Robert W. Kerns <RWK%SCRC-YUKON at MIT-MC.ARPA>
	You could use BABYL files, and simply parse the VMS mail file
	format.  Since I haven't known anybody who cared a whit about
	crufty VMS mail, it hasn't seemed worth bothering with.  Are there
	people who read their mail on Pig, and would they be happy with
	not being able to read mail on the VAX that was read by Zmail?

    No.  I did (login'gumby':host'pig) because oz was down.  I sent a
    bunch of bug messages, assuming that rel 5 would put GUMBY@OZ in the
    header as from or reply-to or something (because that was the info in
    my namespace user object for mail address).  I then complained because
    nobody at symbolics responded to my bug messages.  Imagine my surprise
    when I noticed a file called MAIL.MAI or somesuch on my directory..

    So, at least for the pig community, the desired behavior is to have a
    mailer for pig that either 1>forwards all mail correctly, or 2>refuses
    mail requests.
If this really represents the opinion of the PIG community, you could
do $ RENAME CHAOS$RFC:MAIL.EXE CHAOS$RFC:MAIL.FOO
Better still may be to control it on a per-user basis by creating
a file MAIL.MAI on your direction with null access.  I don't actually
know if this works.
11-Nov-83 15:04:28-EST,1978;000000000000
Received: from SPA-CUMULUS by SPA-Nimbus with CHAOS; Fri 11-Nov-83 11:52:49-PST
Date: Friday, 11 November 1983, 11:52-PST
From: Eric Benson <benson at SPA-Nimbus>
Subject: One, two, three, everybody think carefully.
To: Alan Bawden <ALAN at SCRC-TENEX>, Benson at SCRC-TENEX,
    CWH at SCRC-TENEX, Zvona at OZ, KMP at OZ
Cc: Guy.Steele at CMU-CS-A, Bug-LISPM at OZ,
    Lisp-Designers at SCRC-TENEX, Rees at YALE, PhilG at SCRC-TENEX
In-reply-to: The message of 10 Nov 83 21:54-PST from Alan Bawden <ALAN at SCRC-TENEX>

    Date: Friday, 11 November 1983  00:54-EST
    From: Alan Bawden <ALAN at SCRC-TENEX>
	Date: Thursday, 10 November 1983, 11:05-PST
	From: Eric Benson <benson at SPA-Nimbus>
	Is it really worth having a new idiom for

	(IF (>= (LENGTH X) 2) (SECOND X))?

	Especially wasting a nice word like ENSURE on it?

    On a related issue let me reiterate my complaint to Lisp-Designers of a
    couple weeks back.  It is sometimes inconvienient that LENGTH is defined to
    signal an error when handed a "dotted" or "improper" list.  I find myself
    wanting a function that just counts the number of CDRs I have to take
    before I get to an atom.  Suggested names so far...

How about LENGTH, or rather LIST-LENGTH?  I realize it is late in the
game to make such a change to Common Lisp, but I think there are some
good arguments for LENGTH not signalling an error for non-lists.  It is
silly to have two different names for functions which differ by so
little.  How often do you really use the error checking in LENGTH?  When
you do need it, you can put it in explicitly.

There is one minor argument against such a change that I can think of,
but it is insignificant.  It would introduce an incompatibility between
LENGTH, which applies to all sequences, and LIST-LENGTH.  LIST-LENGTH of
a 1-d array with 30 elements would be 0, while LENGTH would be 30.
By the current definition, LIST-LENGTH would signal an error.
11-Nov-83 21:59:12-EST,858;000000000000
Received: from SCRC-HUDSON by SCRC-TENEX with CHAOS; Fri 11-Nov-83 21:54:12-EST
Date: Friday, 11 November 1983, 21:59-EST
From: RWK@SCRC-YUKON, Feinberg@SCRC-TENEX
Sender: gsmith@SCRC-YUKON
Subject: New Mailing List
To: info-lispm@MIT-OZ

OK, all you hackers have been testing away on our latest stuff; now all
the bugs are getting too much for us to keep track of...

In our never-ending struggle to keep up with all your bug reports,
especially the ones you're testing for us, we'd like you to help
us by sending bugs in Rel 5 Beta Test to a separate mailing list.

All bug reports concerning the Symbolics Release 5.0 Beta Test should be
sent to BUG-BETA-TEST@SCRC.  This will help us ensure these problems
receive proper attention before we send out the Real Thing.  Thanks for
all your help, and keep those packets and cards coming...
12-Nov-83 00:37:18-EST,584;000000000000
Date: 12 November 1983 00:41 EST
From: Pandora B. Berman <CENT @ MIT-MC>
Subject: that little diamond-shaped character
To: MILLGRAM @ MIT-OZ
cc: BUG-LISPM @ MIT-MC, jba @ MIT-OZ

    Date: Fri, 11 Nov 1983  11:28 EST
    From: MILLGRAM%MIT-OZ@MIT-MC.ARPA
    To:   bug-lispm%MIT-OZ@MIT-MC.ARPA
    cc:   jba%MIT-OZ@MIT-MC.ARPA
    Rel 5 doesn't seem to know about that little diamond-shaped character
    one used to find on the COMPLETE key?  Where can one find such a thing?

is an altmode. all representations of <altmode> by the character "$" are
poor substitutes.
12-Nov-83 01:21:17-EST,5896;000000000000
Date: Saturday, 12 November 1983, 01:21-EST
From: File Server at CADR-15
Subject: namespacer server wedged
To: BUG-LISPM at OZ, beta-test at SCRC

In Release 5.0 [GC'd Beta Test rev 2], on Lisp Machine Fifteen (LM-2):

LM15 servers were all hung in lock because this namespace server was
hung in output hold trying to output to to a deexposed screen.

>>Break: 
While in the function PROCESS-WAIT  (:METHOD TV:SHEET :OUTPUT-HOLD-EXCEPTION)  TV:SHEET-PREPARE-SHEET-INTERNAL

PROCESS-WAIT:  (P.C. = 46)
   Arg 0 (WHOSTATE): "Output Hold"
   Arg 1 (FUNCTION): #<DTP-FEF-POINTER (:INTERNAL (:METHOD TV:SHEET :OUTPUT-HOLD-EXCEPTION) 0) 11664474>
   Rest arg (ARGUMENTS): (#<BACKGROUND-LISP-INTERACTOR Background Lisp Interactor 1 26670314 deexposed>)
   Local 1 (PROCESS-P): NIL
   Local 2 (UNSIMPLE-P): NIL
   Local 3 (STATE): 7

(:METHOD TV:SHEET :OUTPUT-HOLD-EXCEPTION):  (P.C. = 157)
   (SELF = #<BACKGROUND-LISP-INTERACTOR Background Lisp Interactor 1 26670314 deexposed>)
   Arg 0 (OPERATION): :OUTPUT-HOLD-EXCEPTION

TV:SHEET-PREPARE-SHEET-INTERNAL:  (P.C. = 46)
   Arg 0 (SHEET): #<BACKGROUND-LISP-INTERACTOR Background Lisp Interactor 1 26670314 deexposed>

(:METHOD TV:SHEET :CLEAR-EOL):  (P.C. = 101)
   (SELF = #<BACKGROUND-LISP-INTERACTOR Background Lisp Interactor 1 26670314 deexposed>)
   Arg 0 (OPERATION): :CLEAR-EOL

(:METHOD TV:STREAM-MIXIN :FRESH-LINE):  (P.C. = 35)
   (SELF = #<BACKGROUND-LISP-INTERACTOR Background Lisp Interactor 1 26670314 deexposed>)
   Arg 0 (OPERATION): :FRESH-LINE

TV:BACKGROUND-STREAM:  (P.C. = 152)
   Arg 0 (OP): :FRESH-LINE
   Rest arg (ARGS): NIL

(:PROPERTY FORMAT:& FORMAT:CTL-NO-ARG):  (P.C. = 32)
   Arg 0 (PARAMS): NIL

FORMAT:FORMAT-CTL-OP:  (P.C. = 75)
   Arg 0 (OP): FORMAT:&
   Arg 1 (ARGS): (#<NAME SCRC|DM -32375257> #<ITS-HOST ARPANET|MIT-DMS -32330140> #<ITS-HOST MC 1454671>)
   Arg 2 (PARAMS): NIL

FORMAT:FORMAT-CTL-STRING:  (P.C. = 151)
   Arg 0 (ARGS): (#<NAME SCRC|DM -32375257> #<ITS-HOST ARPANET|MIT-DMS -32330140> #<ITS-HOST MC 1454671>)
   Arg 1 (CTL-STRING): "~&Moving name ~A from ~A to ~A."

FORMAT:  (P.C. = 175)
   Arg 0 (STREAM): #:TERMINAL-IO-SYN-STREAM
   Arg 1 (CTL-STRING): "~&Moving name ~A from ~A to ~A."
   Rest arg (ARGS): (#<NAME SCRC|DM -32375257> #<ITS-HOST ARPANET|MIT-DMS -32330140> #<ITS-HOST MC 1454671>)

NETI:ADD-OR-CHANGE-OBJECT:  (P.C. = 236)  (from LM15:>sys>site>aoco-patch)
   Arg 0 (CLASS-NAME): :HOST
   Arg 1 (NAME): #<NAME MIT|MITMC 1332466>
   Arg 2 (PROPERTY-LIST): (:SYSTEM-TYPE :ITS :FILE-CONTROL-LIFETIME "108000" :SERVICE ((:TCP-GATEWAY :CHAOS :TCP-GATEWAY) (:SOURCE :CHAOS :BABEL) (:ECHO :CHAOS :ECHO) (:FILE :CHAOS :QFILE) (:GENSYM :CHAOS-SIMPLE :GENSYM) (:GMSGS :CHAOS :GMSGS) (:MAIL-TO-USER :CHAOS :CHAOS-MAIL) (:STORE-AND-FORWARD-MAIL :CHAOS :CHAOS-MAIL) (:SHOW-USERS :CHAOS :NAME) (:SEND :CHAOS :SEND) ...) :SITE #<OBJECT SITE MIT 1341463> :NICKNAME (#<NAME MIT|MITMC 1332466> #<NAME MIT|DM -32340765> #<NAME ARPANET|MC 1324113> #<NAME ARPANET|MITMC -32140271> #<NAME ARPANET|MIT-DMS -32232756> #<NAME ARPANET|DM -32140301> #<NAME ARPANET|DMS -32234466> #<NAME ARPANET|MITDM -32140275> #<NAME MIT|MIT-MC 1331746> #<NAME ARPANET|MIT-MC 1324117> ...) ...)
   Arg 3 (REPLACE): T

NET:UPDATE-OBJECT-PERMANENTLY:  (P.C. = 233)
   Arg 0 (CLASS): #<CLASS HOST 737153>
   Arg 1 (NAMESPACE): #<NAMESPACE MIT 2134400>
   Arg 2 (NAME): #<NAME MIT|MITMC 1332466>
   Arg 3 (PROPERTY-LIST): (:SYSTEM-TYPE :ITS :FILE-CONTROL-LIFETIME "108000" :SERVICE ((:TCP-GATEWAY :CHAOS :TCP-GATEWAY) (:SOURCE :CHAOS :BABEL) (:ECHO :CHAOS :ECHO) (:FILE :CHAOS :QFILE) (:GENSYM :CHAOS-SIMPLE :GENSYM) (:GMSGS :CHAOS :GMSGS) (:MAIL-TO-USER :CHAOS :CHAOS-MAIL) (:STORE-AND-FORWARD-MAIL :CHAOS :CHAOS-MAIL) (:SHOW-USERS :CHAOS :NAME) (:SEND :CHAOS :SEND) ...) :SITE #<OBJECT SITE MIT 1341463> :NICKNAME (#<NAME MIT|MITMC 1332466> #<NAME MIT|DM -32340765> #<NAME ARPANET|MC 1324113> #<NAME ARPANET|MITMC -32140271> #<NAME ARPANET|MIT-DMS -32232756> #<NAME ARPANET|DM -32140301> #<NAME ARPANET|DMS -32234466> #<NAME ARPANET|MITDM -32140275> #<NAME MIT|MIT-MC 1331746> #<NAME ARPANET|MIT-MC 1324117> ...) ...)

NETI:NAMESPACE-SERVER-UPDATE:  (P.C. = 55)
   Arg 0 (*UPDATE-ON-BEHALF-OF*): "RWK"
   Arg 1 (STREAM): #<CHARACTER-STREAM -22716723>
   Arg 2 (CLASS): #<CLASS HOST 737153>
   Arg 3 (NAMESPACE): #<NAMESPACE MIT 2134400>
   Arg 4 (PROPERTY-LIST): (:SYSTEM-TYPE :ITS :FILE-CONTROL-LIFETIME "108000" :SERVICE ((:TCP-GATEWAY :CHAOS :TCP-GATEWAY) (:SOURCE :CHAOS :BABEL) (:ECHO :CHAOS :ECHO) (:FILE :CHAOS :QFILE) (:GENSYM :CHAOS-SIMPLE :GENSYM) (:GMSGS :CHAOS :GMSGS) (:MAIL-TO-USER :CHAOS :CHAOS-MAIL) (:STORE-AND-FORWARD-MAIL :CHAOS :CHAOS-MAIL) (:SHOW-USERS :CHAOS :NAME) (:SEND :CHAOS :SEND) ...) :SITE #<OBJECT SITE MIT 1341463> :NICKNAME (#<NAME MIT|MITMC 1332466> #<NAME MIT|DM -32340765> #<NAME ARPANET|MC 1324113> #<NAME ARPANET|MITMC -32140271> #<NAME ARPANET|MIT-DMS -32232756> #<NAME ARPANET|DM -32140301> #<NAME ARPANET|DMS -32234466> #<NAME ARPANET|MITDM -32140275> #<NAME MIT|MIT-MC 1331746> #<NAME ARPANET|MIT-MC 1324117> ...) ...)

NETI:NAMESPACE-SERVER-FUNCTION-INTERNAL:  (P.C. = 541)
   Arg 0 (STREAM): #<CHARACTER-STREAM -22716723>
   Arg 1 (TRUSTED-P): T

NETI:FUNCALL-SERVER-INTERNAL-FUNCTION:  (P.C. = 61)
   Arg 0 (SERVER): #<SERVER NAMESPACE 1003411>
   Rest arg (ARGUMENTS): (:STREAM #<CHARACTER-STREAM -22716723> :HOST NIL :NETWORK #<CHAOS-NETWORK CHAOS 2731067> :TRUSTED-P T)

CHAOS:CHAOS-SERVER-INTERNAL:  (P.C. = 441)
   Arg 0 (CONTACT-NAME): "NAMESPACE"
   Arg 1 (SERVER): #<SERVER NAMESPACE 1003411>

SI:PROCESS-RUN-FUNCTION-INTERNAL:  (P.C. = 104)
   Arg 0 (RESTART-ON-RESET): NIL
   Arg 1 (FUNCTION): #<DTP-FEF-POINTER CHAOS:CHAOS-SERVER-INTERNAL 7607576>
   Rest arg (ARGS): ("NAMESPACE" #<SERVER NAMESPACE 1003411>)

SI:PROCESS-TOP-LEVEL:  (P.C. = 123)
   Arg 0 (IGNORE): NIL
12-Nov-83 13:34:33-EST,1679;000000000000
Mail-From: BRD created at 12-Nov-83 13:34:09
Date: 12 Nov 1983  13:34 EST (Sat)
Message-ID: <BRD.11967076422.BABYL@MIT-OZ>
From: "Bruce R. Donald" <BRD@MIT-OZ>
To:   "David A. Moon" <Moon%SCRC-TENEX@MIT-MC.ARPA>
cc:   "Bruce R. Donald" <BRD@MIT-OZ>, bug-symbolics-software@MIT-OZ
Subject: Macros that expand to DECLARE don't always work.
In-reply-to: Msg of 6 Nov 1983  00:36-EST from Bruce R. Donald <BRD>


        Date: Saturday, 5 November 1983  15:00-EST
        From: David A. Moon <Moon%SCRC-TENEX at MIT-MC.ARPA>
        To:   Bruce R. Donald <Brd at MIT-OZ.ARPA>
        cc:   bug-symbolics-software at MIT-OZ.ARPA
        Re:   Macros that expand to DECLARE don't always work.

            Date: Friday, 4 November 1983, 23:59-EST
            From: Bruce R. Donald <Brd at MIT-OZ>
            machine: ROBOT-1, Release 4.4, >world2.load

            I'm having trouble with macros that expand to DECLAREs.

        There is no such feature in "Zetalisp", only in Common Lisp.

What about page 219 of the grey Chinual? Sure looks like
macros expanding to DECLAREs to me.

Paragraph 1: "... suppose you wanted to implement DEFCONST as a
macro...  DEFCONST must do two things: declare the variable to be
special, and set the variable to its initial value..."

Before the last paragraph:

(DEFMACRO DEFCONST (VARIABLE INIT-FORM)
  `(PROGN 'COMPILE
	  (DECLARE (SPECIAL ,VARIABLE))
	  (SETQ ,VARIABLE ,INIT-FORM)))

Second to last paragraph: "...the compiler behaves exactly as if
it had encountered the DECLARE form at top level..."

Bruce.

P.S. The problems I encountered cannot be fixed by a (PROGN 'COMPILE
... ) wrapper.

12-Nov-83 14:40:29-EST,3015;000000000000
Received: from SCRC-EUPHRATES by SCRC-TENEX with CHAOS; Sat 12-Nov-83 14:34:28-EST
Date: Sat, 12 Nov 83 14:40 EST
From: "David A. Moon" <Moon%SCRC-TENEX@MIT-MC.ARPA>
Subject: Macros that expand to DECLARE don't always work.
To: "Bruce R. Donald" <Brd@MIT-OZ.ARPA>
Cc: bug-symbolics-software@MIT-OZ.ARPA
In-reply-to: The message of 4 Nov 83 23:59-EST from Bruce R. Donald <Brd at MIT-OZ>,
             The message of 5 Nov 83 11:56-EST from Robert A. Cassels <Cassels at SCRC-TENEX>,
             <BRD.11965229227.BABYL@MIT-OZ>,
             The message of 5 Nov 83 13:16-EST from Robert A. Cassels <Cassels at SCRC-TENEX>,
             The message of 5 Nov 83 14:20-EST from Robert A. Cassels <Cassels at SCRC-TENEX>,
             The message of 5 Nov 83 15:00-EST from David A. Moon <Moon at SCRC-TENEX>,
             <BRD.11967076422.BABYL@MIT-OZ>

    Date: Friday, 4 November 1983, 23:59-EST
    From: Bruce R. Donald <Brd at MIT-OZ>
    I'm having trouble with macros that expand to DECLAREs. For example,

    (DEFMACRO RETURNS (&REST ARGS)
      `(DECLARE (RETURN-LIST . ,ARGS)))

    Date: Sat, 5 Nov 83 15:00 EST
    From: "David A. Moon" <Moon%SCRC-TENEX@MIT-MC.ARPA>
    There is no such feature in "Zetalisp", only in Common Lisp.

    Date: 12 Nov 1983  13:34 EST (Sat)
    From: "Bruce R. Donald" <BRD@MIT-OZ>
    What about page 219 of the grey Chinual? Sure looks like
    macros expanding to DECLAREs to me.

Sorry, we're talking about two different things.  Top-level forms in a file
being compiled are macro-expanded by the compiler until they expand into
something the compiler recognizes, or are simply a form to be evaluated
when the compiled file is loaded.  Thus top-level declares can be the result
of macroexpansion.

Local declarations are really rather different from top-level declarations,
and it's somewhat unfortunate that the word DECLARE is used for both of these.
The compiler and other declaration-processing programs check for a local
declaration at the front of a function (or other blocks such as LET and PROG)
before it expands macros in the body; consequently a local declaration must be
explicit in the source code, and cannot come from macro expansion.  This
unfortunate anomaly will be fixed by Common Lisp.

Note that you can write a macro that expands into a complete block with
a DECLARE inside it.  This is because the macro must be expanded before the
compiler even knows there is a block, and once the macro has been expanded
there is an explicit DECLARE visible in the code.
E.g. (no implication that this is good taste):
	(DEFMACRO DEFUNV (NAME ARGS VALUES &BODY BODY)
	  `(DEFUN ,NAME ,ARGS
	     (DECLARE (VALUES ,@VALUES))
	     ,@BODY))
Alternatively, you can use the LOCAL-DECLARE special form, which cannot lead
to this confusion because it has normal Lisp nesting syntax.  Of course it's
less convenient for you for the same reason.

By the way, (DECLARE (VALUES v1 v2 ...)) is preferred nowadays.
12-Nov-83 15:24:08-EST,1005;000000000000
Mail-From: KMP created at 12-Nov-83 15:23:28
Date: Sat 12 Nov 83 15:23:28-EST
From: KMP@MIT-OZ
Subject: Alternate mail address for Beta Test stuff
To: rwk@SCRC-TENEX, feinberg@SCRC-TENEX
cc: bug-lispm@MIT-OZ

I am not sure I agree that sending mail to BUG-BETA-TEST@SCRC. It may be
hard for users to distinguish Beta Test bugs from other bugs that may have
existed for a while. In such case, the bug reports may be relevant to 
maintainers of the MIT system and sending them to BUG-BETA-TEST@SCRC will
mean that those people do not see them. Are you really sure that it would
not be adequate to have a filter on BUG-LISPM which seeks messages for
which line 1 contains the word "Beta Test" or some such? If you really
want us to send to a separate list, I guess I will cons up a list locally
called BUG-LISPM-BETA or something which goes to BUG-BETA-TEST@SCRC and 
which people can also attach themselves to locally so they are in on
locally generated commentary. 

Comments?
-------
12-Nov-83 16:12:51-EST,590;000000000000
Date: 12 Nov 1983  16:07 EST (Sat)
Message-ID: <SR.CYPHER.11967104260.BABYL@MIT-SPEECH>
From: Scott Cyphers <SR.CYPHER@MIT-SPEECH>
To:   KMP@MIT-OZ
Cc:   bug-lispm@MIT-OZ, feinberg@SCRC-TENEX, rwk@SCRC-TENEX
Subject: Alternate mail address for Beta Test stuff
In-reply-to: Msg of 12 Nov 1983  15:23-EST from KMP at MIT-OZ

bug-lispm-beta sounds good, as it would reduce multiple reportings of
the same bug and also let us MIT people know what constitutes a bug
and what constitutes an incompatibility, etc., and what to do about
them, unless all replies were cc'd to bug-lispm.
12-Nov-83 17:29:45-EST,1057;000000000000
Mail-From: ALAN created at 12-Nov-83 17:26:41
Date: Sat, 12 Nov 1983  17:26 EST
Message-ID: <ALAN.11967118747.BABYL@MIT-OZ>
From: Alan Bawden <ALAN@MIT-OZ>
To:   bug-lispm@MIT-OZ
Subject: [Zvona: :do-components] (no "BUG-beta-test" mailing list...)

Date: Saturday, 12 November 1983, 15:05-EST
From: David Chapman <Zvona>
To:   BUG-beta-test
Re:   :do-components

In Release 5.0 [GC'd Beta Test rev 3], dusty plum, on Lisp Machine Elvis Presley (3600):

Probably I am confused, but:

(defsystem luser
  (:pathname-default "pig:[zvona.luser]")

  (:module worlds "worlds")	
  (:fasload worlds)

  (:component-systems shadow)
  (:do-components (:fasload worlds))

  (:module reasoner "reasoner")
  (:compile-load reasoner (:fasload (shadow source)) (:fasload (shadow source)))
  )

(make-system 'luser ':compile ':nowarn ':print-only)

(defsystem luser
  (:pathname-default "pig:[zvona.luser]")

  (:module worlds "worlds")	
  (:fasload worlds)

  (:component-systems shadow)
  (:do-components (:fasload worlds))

  )
