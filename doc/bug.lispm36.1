22-Sep-85 14:31:45-EDT,4527;000000000000
Received: from MIT-SID by MIT-OZ via Chaosnet; 22 Sep 85 14:31-EDT
Date: Sun, 22 Sep 85 14:30 EDT
From: Daniel Weise <DANIEL@MIT-MC>
Subject: But the pathname isn't wild!
To: BUG-LISPM@OZ
Message-ID: <850922143033.1.DANIEL@SID>

In Symbolics 3670 Release 6.0, IP-TCP 29.0, AISite 10.3,
microcode TMC5-IO4-MIC 319, FEP 22, on Lisp Machine Sid Vicious:

I did a dired of mc:daniel;* *.  In the list was the file named *mail* 7.
When I E'd the file to see what was in it, the who line rapidly typed
"close" and "directory" at the speed of light, while continously rereading
mc:daniel;*mail* 7.  After aborting and trying again this happened.  The
problem is that the system thinks the pathname mc:daniel;*mail* 7 is wildcarded,
which it isn't.  Issues of the system using a wildcard character which can appear
in filenames aside, if the system knew it got the pathname from a dired
listing on an ITS host, then it wouldn't interpret the *'s as wildcards.

Daniel

>>Error: Can't have more than one directory open at a time
         For MC: DANIEL; * *
While in the function (:METHOD FS:HOST-UNIT :COMMAND)  FS:DIRECTORY-CHAOS  (:METHOD FS:QFILE-ACCESS-PATH :DIRECTORY-STREAM)

(:METHOD FS:HOST-UNIT :COMMAND):  (P.C. = 236)
   Arg 0 (SELF): #<HOST-UNIT 13655365>
   Arg 1 (SELF-MAPPING-TABLE): FS:HOST-UNIT
   Arg 2 (OPERATION): :COMMAND
   Arg 3 (MARK-P): NIL
   Arg 4 (STREAM-OR-HANDLE): (:CREATE "I2866")
   Local 4 (STREAM-OR-HANDLE): "I2866"
   Arg 5 (SIMPLE-P): NIL
   Arg 6 (WHOSTATE): "Directory"
   Rest arg (COMMANDS): ("DIRECTORY" " DELETED" "" "" "" 141 "DSK: DANIEL; * *" 141)
   Local 8 (HANDLE): "I2866"
   Local 9 (STREAM): NIL
   Local 10 (PKT): #<Chaos Packet 74506346>
   Local 11 (SUCCESS): NIL
   Local 12 (STRING): "I2866 ERROR NER F Can't have more than one directory open at a time"
   Local 13 (TRANSACTION-ID): "T2884"
   Local 14 (CREATE-P): T
   Local 15 (CONDITION): NIL
   Local 16: T
   Local 17: #<CASE-HANDLER 120711625>
   Local 18: (#<CASE-HANDLER 120775543> #<LEXICAL-CLOSURE (:INTERNAL ** 0) 43440054>)
   Local 19: (#<CASE-HANDLER 120711625> #<CASE-HANDLER 120775543> #<LEXICAL-CLOSURE (:INTERNAL ** 0) 43440054>)

FS:DIRECTORY-CHAOS:  (P.C. = 141)
   Arg 0 (ACCESS-PATH): #<ITS-QFILE-ACCESS-PATH MC using QFILE 13655354>
   Arg 1: #<ITS-PATHNAME "MC: DANIEL; * *">
   Arg 2 (OPTIONS): (:DELETED)

(:METHOD FS:QFILE-ACCESS-PATH :DIRECTORY-STREAM):  (P.C. = 6)
   Arg 0 (SELF): #<ITS-QFILE-ACCESS-PATH MC using QFILE 13655354>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:QFILE-ACCESS-PATH -- 4. IV's, 0. FL's 121666066>
   Arg 2 (OPERATION): :DIRECTORY-STREAM
   Arg 3 (PATHNAME): #<ITS-PATHNAME "MC: DANIEL; * *">
   Arg 4 (OPTIONS): (:DELETED)

(:METHOD FS:DIRECTORY-STREAM-FILE-ACCESS-PATH-MIXIN :DIRECTORY-LIST):  (P.C. = 13)
   Arg 0 (SELF): #<ITS-QFILE-ACCESS-PATH MC using QFILE 13655354>
   Arg 1 (SELF-MAPPING-TABLE): FS:DIRECTORY-STREAM-FILE-ACCESS-PATH-MIXIN
   Arg 2 (OPERATION): :DIRECTORY-LIST
   Arg 3 (PATHNAME): #<ITS-PATHNAME "MC: DANIEL; * *">
   Arg 4 (OPTIONS): (:SORTED :DELETED)

(:METHOD FS:ACTIVE-PATHNAME-MIXIN :DIRECTORY-LIST):  (P.C. = 12)
   Arg 0 (SELF): #<ITS-PATHNAME "MC: DANIEL; * *">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:ACTIVE-PATHNAME-MIXIN -- 1. IV's, 0. FL's 105230317>
   Arg 2 (OPERATION): :DIRECTORY-LIST
   Arg 3 (OPTIONS): (:SORTED :DELETED)

FS:DIRECTORY-LIST:  (P.C. = 114)
   Arg 0 (FILENAME): #<ITS-PATHNAME "MC: DANIEL; * *">
   Rest arg (OPTIONS): (:SORTED :DELETED)

(:METHOD DIRED-NODE-MIXIN :REVERT):  (P.C. = 42)
   Arg 0 (SELF): #<DIRED-BUFFER "*Dired-3*" 76100136>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor DIRED-NODE-MIXIN -- 4. IV's, 0. FL's 143215622>
   Arg 2 (OPERATION): :REVERT

(:METHOD DIRED-BUFFER :COMBINED :REVERT):  (P.C. = 11)
   Arg 0 (SELF): #<DIRED-BUFFER "*Dired-3*" 76100136>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor DIRED-BUFFER -- 3. IV's, 4. FL's 143215610>
   Arg 2 (.OPERATION.): :REVERT
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

Rest of stack:
(:METHOD ZMACS-EDITOR :FIND-SPECIAL-BUFFER):  (P.C. = 45)
(:METHOD ZMACS-EDITOR :SELECT-SPECIAL-BUFFER):  (P.C. = 10)
DIRECTORY-EDIT:  (P.C. = 22)
COM-DIRED:  (P.C. = 5)
COM-EXTENDED-COMMAND:  (P.C. = 27)
COMMAND-EXECUTE:  (P.C. = 57)
PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD EDITOR :EDIT):  (P.C. = 233)
(:METHOD TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 60)
ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 51)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
22-Sep-85 19:26:19-EDT,380;000000000000
Received: from MIT-JIMI by MIT-OZ via Chaosnet; 22 Sep 85 19:26-EDT
Date: Sun, 22 Sep 85 19:27 EDT
From: David Vinayak Wallace <Gumby@MIT-MC>
Subject: %TSSAI
To: BUG-LISPM@OZ
Message-ID: <850922192748.6.GUMBY@JIMI>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 10.3,
microcode TMC5-MIC 319, on Lisp Machine Jimi Hendrix:

How do I tell SUPDUP to specify %TSSAIL?
22-Sep-85 22:23:12-EDT,524;000000000000
Received: from MIT-MC.ARPA by MIT-OZ via Chaosnet; 22 Sep 85 22:23-EDT
Received: from MIT-LISPM-9 by MIT-MC.ARPA via Chaosnet; 22 SEP 85  22:21:39 EDT
Date: Sunday, 22 September 1985, 22:22-EDT
From: Devon S. McCullough <Devon@MIT-MC>
To: Devon@MIT-MC, BUG-LISPM@MIT-OZ

In System 99.27, CADR 4.2, Experimental ZMail 54.4, MIT-Specific 23.0,
Experimental Macsyma 6.1, microcode 320, GC@2, on Lisp Machine Nine:

defresource should clear-resource, or at least offer to do so when
recompiling an existing resource.
22-Sep-85 22:24:21-EDT,598;000000000000
Received: from MIT-JIMI by MIT-OZ via Chaosnet; 22 Sep 85 22:24-EDT
Date: Sun, 22 Sep 85 22:25 EDT
From: David Vinayak Wallace <Gumby@MIT-MC>
Subject: -*- Package: (TEST :use (TV SYS SI)); -*-
To: BUG-LISPM@OZ
Message-ID: <850922222544.5.GUMBY@JIMI>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 10.3,
microcode TMC5-MIC 319, on Lisp Machine Jimi Hendrix:

If I put the the above form in the attribute list of my file I still
can't reference symbols from TV:, etc natively.  This is a pain.  And a
bug.

BTW, the manual section on file attribute lists could use some examples.
23-Sep-85 13:31:00-EDT,998;000000000000
Received: from MIT-ELVIS by MIT-OZ via Chaosnet; 23 Sep 85 13:30-EDT
Date: Mon, 23 Sep 85 13:32 EDT
From: Jonathan A Rees <JAR@MIT-MC>
Subject: In Common Lisp, (macroexpand-1 '(cadr x)) => (car (cdr x))
To: BUG-LISPM@OZ
cc: JAR@MIT-MC, KMP@MIT-MC
Message-ID: <850923133201.1.JAR@ELVIS>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.7,
microcode TMC5-MIC 319, FEP 22, on Lisp Machine Elvis Presley:

(macroexpand-1 '(cadr x))
(CAR (CDR X))
T

This behavior is not permitted by the Common Lisp manual.  MACROEXPAND-1
can only expand when the car of the form is defined as a macro.  CADR is
not defined by a macro for two reasons:  (a) CLtL says it must be a
function, not a macro, and (b) (macro-function 'cadr) => NIL.

Regardless of whether or not you want Zetalisp's MACROEXPAND and
MACROEXPAND-1 to expand DEFSUBST function calls, you should fix the CL
versions so that they don't.  This kind of misbehavior can wreak havoc
on code-walking tools.

Jonathan Rees
23-Sep-85 21:09:11-EDT,1308;000000000000
Received: from MIT-EDDIE.MIT.EDU by MIT-OZ via Chaosnet; 23 Sep 85 21:08-EDT
Received: from MEDIA-LAB (MEDIA-LAB.MIT.EDU) by mit-eddie.MIT.EDU (4.12/4.8)  id AA24865; Mon, 23 Sep 85 21:07:43 edt
Received: by MEDIA-LAB (4.12/4.8)  id AA28562; Mon, 23 Sep 85 21:09:36 edt
Date: Mon, 23 Sep 85 21:09:36 edt
From: Jim Davis <jrd@MEDIA-LAB.MIT.EDU>
Message-Id: <8509240109.AA28562@MEDIA-LAB>
To: bug-lispm@oz
Subject: TCP bugs
Cc: info-lispm@MEDIA-LAB.MIT.EDU

My apologies for not using the Bug command but I have
tried twice to send this bug report from my Lispm
(Xevious, running release 6.0) through this Vax
to Oz.  (But that's a different problem.)  The problem
is that attempts to delete or rename files, or to
create a directory on the 4.2 Unix via TCP all get
errors.  The errors are that Unix sends back a reply
code that the Lispm isn't expecting.  The reply code
includes a cheerful message (such as "DELE OKAY") and
the action is performed.  It's just that the message
number is not what Lispm expects.

This bug should be easy for you to reproduce if you
have a TCP Unix.  if not, the Media lab is close to
SCRC, and I'd be happy to show you myself.  On the
other hand, if this is a bug in the Unix TCP side,
my apologies, and I shall try to patch the Lispm
side anyway.
23-Sep-85 21:14:01-EDT,1123;000000000000
Received: from MIT-EDDIE.MIT.EDU by MIT-OZ via Chaosnet; 23 Sep 85 21:13-EDT
Received: from MEDIA-LAB (MEDIA-LAB.MIT.EDU) by mit-eddie.MIT.EDU (4.12/4.8)  id AA24919; Mon, 23 Sep 85 21:13:08 edt
Received: by MEDIA-LAB (4.12/4.8)  id AA28615; Mon, 23 Sep 85 21:15:03 edt
Date: Mon, 23 Sep 85 21:15:03 edt
From: Jim Davis <jrd@MEDIA-LAB.MIT.EDU>
Message-Id: <8509240115.AA28615@MEDIA-LAB>
To: bug-lispm@oz
Subject: Telling Zmail my homedir
Cc: info-lispm@MEDIA-LAB.MIT.EDU

My host for mail is this Unix Vax, and my login dir
is /u2/jrd.  When I invoke Zmail it asks me where
my login dir is.  Needless to say this is annoying.

1) Is there a way I can tell either Zmail or
perhaps the Namespace where my Unix login dir is?

2) Perhaps Zmail could be made smarter.  Perhaps
it is assuming that all user's login dirs are
under /usr/.  Since Unix (perhaps the shell)
is willing to expand the sequence tilde user-name
into the abs path of a login dir for that
user, it may be that Zmail can improve by
asking the remote host where the user's login
dir is, instead of assuming.  Does this make
sense?

24-Sep-85 02:01:34-EDT,716;000000000000
Received: from MIT-JIMI by MIT-OZ via Chaosnet; 24 Sep 85 02:01-EDT
Date: Tue, 24 Sep 85 01:59 EDT
From: David Vinayak Wallace <Gumby@MIT-MC>
Subject: Disk overrun
To: BUG-LISPM@OZ
Message-ID: <850924015951.2.GUMBY@JIMI>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 10.4,
microcode TMC5-MIC 319, on Lisp Machine Jimi Hendrix:

My machine halted with ("Proceedable disk overrun at unit ~O cylinder ~O Head ~O sector ~O" 0(8) 122(8) 13(8) 21(8) "Irrecoverable disk overrun")

Lots of ghubbish in the registers but I didn't want to copy it all down
since I didn't know what was useful.

Oddly enough, JOHANN encountered this same bug just as I was copying
down the above message (but on Buddy).
24-Sep-85 10:04:37-EDT,1459;000000000000
Received: from MIT-MC.ARPA by MIT-OZ via Chaosnet; 24 Sep 85 10:04-EDT
Received: from SCRC-STONY-BROOK.ARPA by MIT-MC.ARPA 24 Sep 85 10:03:59 EDT
Received: from HARLEM.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 319870; Tue 24-Sep-85 10:02:51-EDT
Date: Tue, 24 Sep 85 10:02 EDT
From: jean-pierre tanaka <joseph@SCRC-QUABBIN.ARPA>
Subject: Disk overrun
To: David Vinayak Wallace <Gumby@MIT-MC.ARPA>, BUG-LISPM%OZ@MIT-MC.ARPA
In-Reply-To: <850924015951.2.GUMBY@JIMI>
Message-ID: <850924100240.6.JPT@HARLEM.SCRC.Symbolics.COM>

    Date: Tue, 24 Sep 85 01:59 EDT
    From: David Vinayak Wallace <Gumby@MIT-MC>

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 10.4,
    microcode TMC5-MIC 319, on Lisp Machine Jimi Hendrix:

    My machine halted with ("Proceedable disk overrun at unit ~O cylinder ~O Head ~O sector ~O" 0(8) 122(8) 13(8) 21(8) "Irrecoverable disk overrun")

    Lots of ghubbish in the registers but I didn't want to copy it all down
    since I didn't know what was useful.

    Oddly enough, JOHANN encountered this same bug just as I was copying
    down the above message (but on Buddy).

The network and disk paths in the 3600 share some hardware in such a way that a
completely swamped network can cause you to blow out with a disk overrun.  Those
machines with Fujitsu Eagle (M2351?) drives are the most vulnerable to this kind
of lossage (I know from bitter experience).

24-Sep-85 10:31:25-EDT,1837;000000000000
Received: from MIT-REAGAN.ARPA by MIT-OZ via Chaosnet; 24 Sep 85 10:31-EDT
Received: from SCRC-STONY-BROOK by MIT-REAGAN via INTERNET with SMTP id 8262; 24 Sep 85 10:33:32-EDT
Received: from PEACE.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 319911; Tue 24-Sep-85 10:29:46-EDT
Date: Tue, 24 Sep 85 10:29 EDT
From: Charles Hornig <Hornig@SCRC-STONY-BROOK.ARPA>
Subject: TCP bugs
To: bug-lispm%oz@MIT-REAGAN.ARPA, jrd%MEDIA-LAB@MIT-REAGAN.ARPA
In-Reply-To: <8509240109.AA28562@MEDIA-LAB>
Message-ID: <850924102921.7.HORNIG@PEACE.SCRC.Symbolics.COM>

    Date: Mon, 23 Sep 85 21:09:36 edt
    From: Jim Davis <jrd@MEDIA-LAB.MIT.EDU>

    My apologies for not using the Bug command but I have
    tried twice to send this bug report from my Lispm
    (Xevious, running release 6.0) through this Vax
    to Oz.  (But that's a different problem.)  The problem
    is that attempts to delete or rename files, or to
    create a directory on the 4.2 Unix via TCP all get
    errors.  The errors are that Unix sends back a reply
    code that the Lispm isn't expecting.  The reply code
    includes a cheerful message (such as "DELE OKAY") and
    the action is performed.  It's just that the message
    number is not what Lispm expects.

    This bug should be easy for you to reproduce if you
    have a TCP Unix.  if not, the Media lab is close to
    SCRC, and I'd be happy to show you myself.  On the
    other hand, if this is a bug in the Unix TCP side,
    my apologies, and I shall try to patch the Lispm
    side anyway.

This is a known problem.  You can either fix your Unix to follow the FTP
spec (RFC 765) for you can patch for LispM FTP to accept whatever weird
reply codes your Unix wants to send.  See tcp-ftp.lisp in the code than
sends DELE and RNTO commands.

24-Sep-85 11:04:20-EDT,322;000000000000
Mail-From: CJL created at 24-Sep-85 11:04:08
Date: Tue, 24 Sep 1985  11:04 EDT
Message-ID: <CJL.12145820398.BABYL@MIT-OZ>
From: Chris Lindblad <CJL@MIT-OZ>
To:   bug-lispm@MIT-OZ
Subject: It would be nice if...


The protocols NAMESPACE, NAMESPACE-TIMESTAMP, and BAND-TRANSFER were
supported for the TCP medium.
24-Sep-85 11:21:36-EDT,1314;000000000000
Received: from MIT-REAGAN.ARPA by MIT-OZ via Chaosnet; 24 Sep 85 11:21-EDT
Date: Tue, 24 Sep 85 11:23 EDT
From: CJL@OZ
Sender: File-Server@MIT-REAGAN
Subject: File server error notifications - Are they necessary?
To: BUG-LISPM@OZ
Message-ID: <850924112326.2.FILE-SERVER@MIT-REAGAN>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, Mailer 43.0, AISite 9.6,
microcode TMC5-MIC 319, Network-Security patch,
Update-Internet-Namespace patch, Server-Finger patch,
Inquir-update patch, Rodent Free Namespace Editor, on Lisp Machine Ronald Reagan:

Are these really necessary?

09:13:00 QFile server (Ward@RTS-1) got an error - "mug" is an invalid version component for REAGAN (a LISPM host).
00:48:19 QFile server (gumby@OBERON) got an error - "" is an invalid version component for REAGAN (a LISPM host).
9/15 11:58:11 QFile server (lispm@PREP) got an error - "lisp" is an invalid version component for REAGAN (a LISPM host).

It seems to me that file server command parser errors are very
uninteresting to report in a notification. I really don't care when
somebody using cftp or some Explorer mistypes a pathname or time. The
error really is only theirs, and they don't need the public humiliation
of a notification on the server machine. "Heh, heh, look who can't even
type a filename correctly"
24-Sep-85 11:48:07-EDT,1790;000000000000
Received: from MIT-MC.ARPA by MIT-OZ via Chaosnet; 24 Sep 85 11:47-EDT
Received: from SCRC-STONY-BROOK.ARPA by MIT-MC.ARPA 24 Sep 85 11:47:28 EDT
Received: from WESER.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 320029; Tue 24-Sep-85 11:46:24-EDT
Date: Tue, 24 Sep 85 11:46 EDT
From: Kalman Reti <Reti@SCRC-STONY-BROOK.ARPA>
Subject: Disk overrun
To: joseph@SCRC-QUABBIN.ARPA
cc: Gumby@MIT-MC.ARPA, BUG-LISPM%OZ@MIT-MC.ARPA
In-Reply-To: <850924100240.6.JPT@HARLEM.SCRC.Symbolics.COM>
Message-ID: <850924114656.7.RETI@WESER.SCRC.Symbolics.COM>

    Date: Tue, 24 Sep 85 10:02 EDT
    From: jean-pierre tanaka <joseph@SCRC-QUABBIN.ARPA>

	Date: Tue, 24 Sep 85 01:59 EDT
	From: David Vinayak Wallace <Gumby@MIT-MC>

	In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 10.4,
	microcode TMC5-MIC 319, on Lisp Machine Jimi Hendrix:

	My machine halted with ("Proceedable disk overrun at unit ~O cylinder ~O Head ~O sector ~O" 0(8) 122(8) 13(8) 21(8) "Irrecoverable disk overrun")

	Lots of ghubbish in the registers but I didn't want to copy it all down
	since I didn't know what was useful.

	Oddly enough, JOHANN encountered this same bug just as I was copying
	down the above message (but on Buddy).

    The network and disk paths in the 3600 share some hardware in such a way that a
    completely swamped network can cause you to blow out with a disk overrun.  Those
    machines with Fujitsu Eagle (M2351?) drives are the most vulnerable to this kind
    of lossage (I know from bitter experience).

What Joseph didn't say is:  1) this swamping is usually caused by babbling on the network
(at least over here) and 2) CONTINUE command after removing the babbler works (except for
some hoary old versions of the FEP proms).

24-Sep-85 14:15:47-EDT,1868;000000000000
Received: from MIT-MC.ARPA by MIT-OZ via Chaosnet; 24 Sep 85 14:15-EDT
Received: from SCRC-STONY-BROOK.ARPA by MIT-MC.ARPA 24 Sep 85 13:07:14 EDT
Received: from CONCORD.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 320127; Tue 24-Sep-85 13:06:09-EDT
Date: Tue, 24 Sep 85 13:05 EDT
From: Bernard S. Greenberg <BSG@SCRC-STONY-BROOK.ARPA>
Subject: File server error notifications - Are they necessary?
To: CJL%oz@MIT-MC.ARPA, BUG-LISPM%oz@MIT-MC.ARPA
In-Reply-To: <850924112326.2.FILE-SERVER@MIT-REAGAN>
Message-ID: <850924130552.2.BSG@CONCORD.SCRC.Symbolics.COM>

    Date: Tue, 24 Sep 85 11:23 EDT
    From: CJL@OZ

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, Mailer 43.0, AISite 9.6,
    microcode TMC5-MIC 319, Network-Security patch,
    Update-Internet-Namespace patch, Server-Finger patch,
    Inquir-update patch, Rodent Free Namespace Editor, on Lisp Machine Ronald Reagan:

    Are these really necessary?

    09:13:00 QFile server (Ward@RTS-1) got an error - "mug" is an invalid version component for REAGAN (a LISPM host).
    00:48:19 QFile server (gumby@OBERON) got an error - "" is an invalid version component for REAGAN (a LISPM host).
    9/15 11:58:11 QFile server (lispm@PREP) got an error - "lisp" is an invalid version component for REAGAN (a LISPM host).

    It seems to me that file server command parser errors are very
    uninteresting to report in a notification. I really don't care when
    somebody using cftp or some Explorer mistypes a pathname or time. The
    error really is only theirs, and they don't need the public humiliation
    of a notification on the server machine. "Heh, heh, look who can't even
    type a filename correctly"
This is supposed to indicate a bug in the user-side QFILE, in this case doubtless 
simply a user error with CFTP, not a real bug.

24-Sep-85 14:22:38-EDT,3937;000000000000
Received: from MIT-AI.ARPA by MIT-OZ via Chaosnet; 24 Sep 85 14:22-EDT
Received: from MIT-APIARY-4 by MIT-AI.ARPA via Chaosnet; 24 SEP 85  13:07:07 EDT
Date: Tue, 24 Sep 85 13:08 EDT
From: Aaron F. Bobick <AFB@OZ>
Subject: Disk structue damaged
To: BUG-LISPM@OZ
Message-ID: <850924130835.1.AFB@APIARY-4>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.7,
Experimental Apiary: The Actor Computing System 1.0,
Experimental Traveler: The Apiary Observatory 1.0,
microcode TMC5-MIC 319, on Lisp Machine Apiary-4:



Got this error message when trying to save to OZ.  There is plenty of room
in PS:<afb.lisp>.   Is this OZ about to croak?

aaron


>>Error: Disk structure damaged, cannot allocate space
         For OZ:OZ:<AFB.LISP>LMT.LISP
While in the function (:METHOD FS:HOST-UNIT :COMMAND)  FS:OPEN-CHAOS  (:METHOD FS:QFILE-ACCESS-PATH :OPEN)

(:METHOD FS:HOST-UNIT :COMMAND):  (P.C. = 236)
   Arg 0 (SELF): #<HOST-UNIT 37170637>
   Arg 1 (SELF-MAPPING-TABLE): FS:HOST-UNIT
   Arg 2 (OPERATION): :COMMAND
   Arg 3 (MARK-P): NIL
   Arg 4 (STREAM-OR-HANDLE): (:CREATE "O2628")
   Local 4 (STREAM-OR-HANDLE): "O2628"
   Arg 5 (SIMPLE-P): NIL
   Arg 6 (WHOSTATE): "Open"
   Rest arg (COMMANDS): ("OPEN " :WRITE " " :CHARACTER "" "" "" "" "" "" ...)
   Local 8 (HANDLE): "O2628"
   Local 9 (STREAM): NIL
   Local 10 (PKT): #<Chaos Packet 10041364>
   Local 11 (SUCCESS): NIL
   Local 12 (STRING): "O2628 ERROR NAV F Disk structure damaged, cannot allocate space"
   Local 13 (TRANSACTION-ID): "T2645"
   Local 14 (CREATE-P): T
   Local 15 (CONDITION): NIL
   Local 16: T
   Local 17: #<CASE-HANDLER 120711625>
   Local 18: (#<LEXICAL-CLOSURE (:INTERNAL ** 0) 43440053>)
   Local 19: (#<CASE-HANDLER 120711625> #<LEXICAL-CLOSURE (:INTERNAL ** 0) 43440053>)

FS:OPEN-CHAOS:  (P.C. = 674)
   Arg 0 (ACCESS-PATH): #<TOPS20-QFILE-ACCESS-PATH OZ using QFILE 37170567>
   Arg 1 (REAL-PATHNAME): #<TOPS20-PATHNAME "OZ:OZ:<AFB.LISP>LMT.LISP">
   Arg 2: #<TOPS20-PATHNAME "OZ:OZ:<AFB.LISP>LMT.LISP">
   Arg 3 (OPTIONS): (:CHARACTERS T :DIRECTION :OUTPUT)

(:METHOD FS:QFILE-ACCESS-PATH :OPEN):  (P.C. = 7)
   Arg 0 (SELF): #<TOPS20-QFILE-ACCESS-PATH OZ using QFILE 37170567>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:QFILE-ACCESS-PATH -- 4. IV's, 0. FL's 121666243>
   Arg 2 (OPERATION): :OPEN
   Arg 3 (REAL-PATHNAME): #<TOPS20-PATHNAME "OZ:OZ:<AFB.LISP>LMT.LISP">
   Arg 4 (PATHNAME): #<TOPS20-PATHNAME "OZ:OZ:<AFB.LISP>LMT.LISP">
   Rest arg (OPTIONS): (:CHARACTERS T :DIRECTION :OUTPUT)

(:METHOD FS:ACTIVE-PATHNAME-MIXIN :OPEN):  (P.C. = 14)
   Arg 0 (SELF): #<TOPS20-PATHNAME "OZ:OZ:<AFB.LISP>LMT.LISP">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:ACTIVE-PATHNAME-MIXIN -- 1. IV's, 0. FL's 105211451>
   Arg 2 (OPERATION): :OPEN
   Arg 3 (PATHNAME): #<TOPS20-PATHNAME "OZ:OZ:<AFB.LISP>LMT.LISP">
   Rest arg (OPTIONS): (:CHARACTERS T :DIRECTION :OUTPUT)

FS:MACLISP-COMPATIBILITY-OPEN:  (P.C. = 365)
   Arg 0 (FILENAME): #<TOPS20-PATHNAME "OZ:OZ:<AFB.LISP>LMT.LISP">
   Arg 1 (OPTIONS): (ZWEI:OUT)

OPEN:  (P.C. = 254)
   Arg 0 (PATHNAME): #<TOPS20-PATHNAME "OZ:OZ:<AFB.LISP>LMT.LISP">
   Rest arg (KEYWORD-ARGS): ((ZWEI:OUT))

(:METHOD ZWEI:FILE-BUFFER-MIXIN :SAVE):  (P.C. = 46)
   Arg 0 (SELF): #<FILE-BUFFER "LMT.LISP OZ:<AFB.LISP> OZ:" 26140050>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:FILE-BUFFER-MIXIN -- 9. IV's, 0. FL's 104512643>
   Arg 2 (OPERATION): :SAVE

ZWEI:COM-WRITE-FILE:  (P.C. = 20)

Rest of stack:
ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
ZWEI:MAKE-EXTENDED-COMMAND-INTERNAL:  (P.C. = 107)
Closure of ZWEI:MAKE-EXTENDED-COMMAND-INTERNAL:
ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 233)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 60)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 51)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)




28-Sep-85 11:14:18-EDT,685;000000000000
Received: from MIT-EDDIE.MIT.EDU by MIT-OZ via Chaosnet; 28 Sep 85 11:06-EDT
Received: from MEDIA-LAB (MEDIA-LAB.MIT.EDU) by mit-eddie.MIT.EDU (4.12/4.8)  id AA15131; Wed, 25 Sep 85 11:25:42 edt
Received: by MEDIA-LAB (4.12/4.8)  id AA16663; Wed, 25 Sep 85 11:27:48 edt
Date: Wed, 25 Sep 85 11:27:48 edt
From: Dave Ross  <daver@MEDIA-LAB.MIT.EDU>
Message-Id: <8509251527.AA16663@MEDIA-LAB>
To: bug-lispm@MEDIA-LAB.MIT.EDU
Subject: si:equal-hash doesn't repect case

(I am not using Bug because it doesn't work here.)
In release 6.0

(let ((alphabetic-case-affects-string-comparison T))
  (= (si:equal-hash "foo")
     (si:equal-hash "FOO")))

=> T

Need I say more?
29-Sep-85 16:10:15-EDT,1396;000000000000
Mail-From: CJL created at 29-Sep-85 15:38:10
Received: from MIT-EDDIE.MIT.EDU by MIT-OZ via Chaosnet; 29 Sep 85 15:38-EDT
Received: from MEDIA-LAB (MEDIA-LAB.MIT.EDU) by mit-eddie.MIT.EDU (4.12/4.8)  id AA17568; Sun, 29 Sep 85 02:44:57 edt
Received: from MIT-MC.ARPA (2c00030a) by MEDIA-LAB (4.12/4.8)  id AA09378; Sun, 29 Sep 85 02:49:32 edt
Received: from SCRC-VALLECITO.ARPA by MIT-MC.ARPA 28 Sep 85 14:09:11 EDT
Received: from WOODPECKER.SCRC.Symbolics.COM by SCRC-VALLECITO.ARPA via CHAOS with CHAOS-MAIL id 38029; Sat 28-Sep-85 14:10:16-EDT
Date: Sat, 28 Sep 85 13:59 EDT
From: Charles Hornig <Hornig@SCRC-STONY-BROOK.ARPA>
Subject: si:equal-hash doesn't repect case
To: Dave Ross <daver%media-lab@MIT-MC.ARPA>, bug-lispm%media-lab@MIT-MC.ARPA
In-Reply-To: <8509251527.AA16663@MEDIA-LAB>
Message-Id: <850928135950.2.HORNIG@WOODPECKER.SCRC.Symbolics.COM>

    Date: Wed, 25 Sep 85 11:27:48 edt
    From: Dave Ross  <daver@MEDIA-LAB.MIT.EDU>

    (I am not using Bug because it doesn't work here.)
    In release 6.0

    (let ((alphabetic-case-affects-string-comparison T))
      (= (si:equal-hash "foo")
	 (si:equal-hash "FOO")))

    => T

    Need I say more?

1) Hash functions are not required to return different values for
different keys, it merely improves their performance.

2) ALPHABETIC-CASE-AFFECTS-STRING-COMPARISON is obsolete in release 6.


29-Sep-85 16:11:20-EDT,1321;000000000000
Mail-From: CJL created at 29-Sep-85 15:39:38
Received: from MIT-EDDIE.MIT.EDU by MIT-OZ via Chaosnet; 29 Sep 85 15:39-EDT
Received: from MEDIA-LAB (MEDIA-LAB.MIT.EDU) by mit-eddie.MIT.EDU (4.12/4.8)  id AA17362; Sun, 29 Sep 85 02:15:16 edt
Received: from MIT-MC.ARPA (MIT-MC.MIT.EDU) by MEDIA-LAB (4.12/4.8)  id AA09269; Sun, 29 Sep 85 02:19:55 edt
Received: from SCRC-QUABBIN.ARPA by MIT-MC.ARPA 28 Sep 85 13:40:54 EDT
Received: from HARLEM.SCRC.Symbolics.COM by SCRC-QUABBIN.ARPA via CHAOS with CHAOS-MAIL id 205814; Sat 28-Sep-85 13:42:48-EDT
Date: Sat, 28 Sep 85 13:42 EDT
From: jean-pierre tanaka <joseph@SCRC-QUABBIN.ARPA>
Subject: si:equal-hash doesn't repect case
To: Dave Ross <daver%MEDIA-LAB@MIT-MC.ARPA>, bug-lispm%MEDIA-LAB@MIT-MC.ARPA
In-Reply-To: <8509251527.AA16663@MEDIA-LAB>
Message-Id: <850928134200.6.JPT@HARLEM.SCRC.Symbolics.COM>

    Date: Wed, 25 Sep 85 11:27:48 edt
    From: Dave Ross  <daver@MEDIA-LAB.MIT.EDU>

    (I am not using Bug because it doesn't work here.)
    In release 6.0

    (let ((alphabetic-case-affects-string-comparison T))
      (= (si:equal-hash "foo")
	 (si:equal-hash "FOO")))

    => T

    Need I say more?

See the Release 6.0 release notes, page 31, sec. 2.2.16, entitled
"alphabetic-case-affects-string-comparison is Now Obsolete".


29-Sep-85 21:10:54-EDT,2149;000000000000
Received: from MIT-MC.ARPA by MIT-OZ via Chaosnet; 29 Sep 85 21:10-EDT
Received: from SCRC-QUABBIN.ARPA by MIT-MC.ARPA 25 Sep 85 03:01:22 EDT
Received: from RUSSIAN.SPA.Symbolics.COM by SCRC-QUABBIN.ARPA via CHAOS with CHAOS-MAIL id 204782; Wed 25-Sep-85 02:59:25-EDT
Date: Wed, 25 Sep 85 00:00 PDT
From: Bill Gosper <rwg@RUSSIAN.SPA.Symbolics.COM>
Subject: Disk overrun
To: Reti@SCRC-STONY-BROOK.ARPA
cc: joseph@SCRC-QUABBIN.ARPA, Gumby@MIT-MC.ARPA,
    BUG-LISPM%OZ@MIT-MC.ARPA
In-Reply-To: <850924114656.7.RETI@WESER.SCRC.Symbolics.COM>
Message-ID: <850925000003.2.RWG@RUSSIAN.SPA.Symbolics.COM>

    Date: Tue, 24 Sep 85 11:46 EDT
    From: Kalman Reti <Reti@SCRC-STONY-BROOK.ARPA>
	Date: Tue, 24 Sep 85 10:02 EDT
	From: jean-pierre tanaka <joseph@SCRC-QUABBIN.ARPA>
	    Date: Tue, 24 Sep 85 01:59 EDT
	    From: David Vinayak Wallace <Gumby@MIT-MC>
	    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 10.4,
	    microcode TMC5-MIC 319, on Lisp Machine Jimi Hendrix:

	    My machine halted with ("Proceedable disk overrun at unit ~O cylinder ~O Head ~O sector ~O" 0(8) 122(8) 13(8) 21(8) "Irrecoverable disk overrun")

	    Lots of ghubbish in the registers but I didn't want to copy it all down
	    since I didn't know what was useful.

	    Oddly enough, JOHANN encountered this same bug just as I was copying
	    down the above message (but on Buddy).

	The network and disk paths in the 3600 share some hardware in such a way that a
	completely swamped network can cause you to blow out with a disk overrun.  Those
	machines with Fujitsu Eagle (M2351?) drives are the most vulnerable to this kind
	of lossage (I know from bitter experience).

    What Joseph didn't say is:  1) this swamping is usually caused by babbling on the network
    (at least over here) and 2) CONTINUE command after removing the babbler works (except for
    some hoary old versions of the FEP proms).

This happened to me on a small, quiet network during a double machine-room airconditioner
failure.  I thought it was the disk getting floppy, but it could have been the thermal
deathbabble of the net-bridge 11.

30-Sep-85 07:39:07-EDT,683;000000000000
Received: from MIT-MC.ARPA by MIT-OZ via Chaosnet; 30 Sep 85 07:39-EDT
Received: from MIT-REAGAN.ARPA by MIT-MC.ARPA via Chaosnet; 27 SEP 85  10:39:04 EDT
Date: Fri, 27 Sep 85 10:42 EDT
From: Gumby@MIT-REAGAN.ARPA
Sender: File-Server@MIT-REAGAN.ARPA
Subject: The Scroll key should work in PEEK
To: BUG-LISPM@MIT-MC.ARPA
Message-ID: <850927104232.3.FILE-SERVER@MIT-REAGAN>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, Mailer 43.0, AISite 9.6,
microcode TMC5-MIC 319, Network-Security patch,
Update-Internet-Namespace patch, Server-Finger patch,
Inquir-update patch, Rodent Free Namespace Editor, on Lisp Machine Ronald Reagan:

It's annoying to have to use the rodent.
30-Sep-85 12:54:25-EDT,3278;000000000000
Received: from MIT-MC.ARPA by MIT-OZ via Chaosnet; 30 Sep 85 12:54-EDT
Received: from MIT-TWEETY-PIE.ARPA by MIT-MC.ARPA via Chaosnet; 30 SEP 85  12:52:28 EDT
Date: Monday, 30 September 1985, 12:50-EDT
From: Webster Dove <dove at MIT-BUGS-BUNNY>
Subject: FTP to local 4.2bsd vax is slow
To: BUG-LISPM at OZ
Message-ID: <850930125020.1.DOVE@TWEETY-PIE.MIT>

In Symbolics 3600 Release 6.0, IP-TCP 29.0,
microcode TMC5-IO4-FPA-MIC 319, with UTIL, on Lisp Machine Tweety Pie:


Between our two vaxes using ftp we get 30-60kbytes/sec.  Between lispms
and vaxes with chaos we get ~10kbytes/sec.  With ftp it seems like
~1kbyte/sec.  The following are headers from a communication between
tweety (18.27.0.16) and bunny (18.27.0.17) using FTP to get the file
bunny:/etc/termcap.  Judging from this can any FTP wizards suggest why
the xfer is so slow?

Current internal time is 0744.912132 
DIR UAPRSF from-from->to-to Sequence (Acknowledge) Window (Urgent) Recorded
In   A R   18.27.0.17-21->18.27.0.16-1026 Seq=29829952. Ack=2567001167.  Len=0 Window=2048.  Rcrded: 0520.812157
Out  A R   18.27.0.16-1026->18.27.0.17-21 Seq=2567001167. Ack=29829952.  Len=0 Window=19763.  Rcrded: 0520.790633
In   A     18.27.0.17-21->18.27.0.16-1026 Seq=29829952. Ack=2567001167.  Len=0 Window=2048.  Rcrded: 0516.778325
Out  A     18.27.0.16-1026->18.27.0.17-21 Seq=2567001167. Ack=29829952.  Len=0 Window=19763.  Rcrded: 0516.660931
In   A   F 18.27.0.17-21->18.27.0.16-1026 Seq=29829951. Ack=2567001167.  Len=1 Window=2048.  Rcrded: 0516.542419
In   A     18.27.0.17-21->18.27.0.16-1026 Seq=29829951. Ack=2567001167.  Len=0 Window=2042.  Rcrded: 0516.459446
In   A R   18.27.0.17-20->18.27.0.16-1027 Seq=29860866. Ack=2586719503.  Len=0 Window=2048.  Rcrded: 0516.456715
Out  AP    18.27.0.16-1026->18.27.0.17-21 Seq=2567001161. Ack=29829951.  Len=6 Window=19764.  Rcrded: 0516.447426
Out  A R   18.27.0.16-1027->18.27.0.17-20 Seq=2586719503. Ack=29858818.  Len=0 Window=19390.  Rcrded: 0516.434631
In   A     18.27.0.17-20->18.27.0.16-1027 Seq=29858818. Ack=2586719503.  Len=0 Window=2048.  Rcrded: 0507.791121
Out  A     18.27.0.16-1027->18.27.0.17-20 Seq=2586719503. Ack=29858818.  Len=0 Window=19390.  Rcrded: 0507.676753
In   AP    18.27.0.17-20->18.27.0.16-1027 Seq=29858208. Ack=2586719503.  Len=610 Window=2048.  Rcrded: 0507.668767
In   A     18.27.0.17-20->18.27.0.16-1027 Seq=29856770. Ack=2586719503.  Len=1438 Window=2048.  Rcrded: 0507.663235
In   A     18.27.0.17-20->18.27.0.16-1027 Seq=29856770. Ack=2586719503.  Len=0 Window=2048.  Rcrded: 0498.358532
Out  A     18.27.0.16-1027->18.27.0.17-20 Seq=2586719503. Ack=29856770.  Len=0 Window=13246.  Rcrded: 0498.292833
In   A     18.27.0.17-20->18.27.0.16-1027 Seq=29854722. Ack=2586719503.  Len=1438 Window=2048.  Rcrded: 0498.177664
In   AP    18.27.0.17-20->18.27.0.16-1027 Seq=29856160. Ack=2586719503.  Len=610 Window=2048.  Rcrded: 0498.173808
In   A     18.27.0.17-20->18.27.0.16-1027 Seq=29854722. Ack=2586719503.  Len=0 Window=2048.  Rcrded: 0489.814933
Out  A     18.27.0.16-1027->18.27.0.17-20 Seq=2586719503. Ack=29854722.  Len=0 Window=15294.  Rcrded: 0489.756034
In   AP    18.27.0.17-20->18.27.0.16-1027 Seq=29854112. Ack=2586719503.  Len=610 Window=2048.  Rcrded: 0489.636122
30-Sep-85 13:10:10-EDT,3916;000000000000
Received: from MIT-REAGAN.ARPA by MIT-OZ via Chaosnet; 30 Sep 85 13:09-EDT
Received: from SCRC-RIVERSIDE by MIT-REAGAN via INTERNET with SMTP id 8430; 30 Sep 85 13:10:06-EDT
Received: from HUDSON.SCRC.Symbolics.COM by SCRC-RIVERSIDE.ARPA via CHAOS with CHAOS-MAIL id 51545; Mon 30-Sep-85 13:10:55-EDT
Date: Mon, 30 Sep 85 13:12 EDT
From: Charles Hornig <Hornig@SCRC-STONY-BROOK.ARPA>
Subject: FTP to local 4.2bsd vax is slow
To: Webster Dove <dove%MIT-BUGS-BUNNY@MIT-REAGAN.ARPA>,
    BUG-LISPM%OZ@MIT-REAGAN.ARPA
In-Reply-To: <850930125020.1.DOVE@TWEETY-PIE.MIT>
Message-ID: <850930131229.7.HORNIG@HUDSON.SCRC.Symbolics.COM>

    Date: Monday, 30 September 1985, 12:50-EDT
    From: Webster Dove <dove at MIT-BUGS-BUNNY>

    In Symbolics 3600 Release 6.0, IP-TCP 29.0,
    microcode TMC5-IO4-FPA-MIC 319, with UTIL, on Lisp Machine Tweety Pie:

    Between our two vaxes using ftp we get 30-60kbytes/sec.  Between lispms
    and vaxes with chaos we get ~10kbytes/sec.  With ftp it seems like
    ~1kbyte/sec.  The following are headers from a communication between
    tweety (18.27.0.16) and bunny (18.27.0.17) using FTP to get the file
    bunny:/etc/termcap.  Judging from this can any FTP wizards suggest why
    the xfer is so slow?

I see a block of 2048 octets arriving at the LispM every 6-8 seconds.
The LispM ACK's them immediately.  Why would the Unix be so slow?

    Current internal time is 0744.912132 
    DIR UAPRSF from-from->to-to Sequence (Acknowledge) Window (Urgent) Recorded
    In   A R   18.27.0.17-21->18.27.0.16-1026 Seq=29829952. Ack=2567001167.  Len=0 Window=2048.  Rcrded: 0520.812157
    Out  A R   18.27.0.16-1026->18.27.0.17-21 Seq=2567001167. Ack=29829952.  Len=0 Window=19763.  Rcrded: 0520.790633
    In   A     18.27.0.17-21->18.27.0.16-1026 Seq=29829952. Ack=2567001167.  Len=0 Window=2048.  Rcrded: 0516.778325
    Out  A     18.27.0.16-1026->18.27.0.17-21 Seq=2567001167. Ack=29829952.  Len=0 Window=19763.  Rcrded: 0516.660931
    In   A   F 18.27.0.17-21->18.27.0.16-1026 Seq=29829951. Ack=2567001167.  Len=1 Window=2048.  Rcrded: 0516.542419
    In   A     18.27.0.17-21->18.27.0.16-1026 Seq=29829951. Ack=2567001167.  Len=0 Window=2042.  Rcrded: 0516.459446
    In   A R   18.27.0.17-20->18.27.0.16-1027 Seq=29860866. Ack=2586719503.  Len=0 Window=2048.  Rcrded: 0516.456715
    Out  AP    18.27.0.16-1026->18.27.0.17-21 Seq=2567001161. Ack=29829951.  Len=6 Window=19764.  Rcrded: 0516.447426
    Out  A R   18.27.0.16-1027->18.27.0.17-20 Seq=2586719503. Ack=29858818.  Len=0 Window=19390.  Rcrded: 0516.434631
    In   A     18.27.0.17-20->18.27.0.16-1027 Seq=29858818. Ack=2586719503.  Len=0 Window=2048.  Rcrded: 0507.791121
    Out  A     18.27.0.16-1027->18.27.0.17-20 Seq=2586719503. Ack=29858818.  Len=0 Window=19390.  Rcrded: 0507.676753
    In   AP    18.27.0.17-20->18.27.0.16-1027 Seq=29858208. Ack=2586719503.  Len=610 Window=2048.  Rcrded: 0507.668767
    In   A     18.27.0.17-20->18.27.0.16-1027 Seq=29856770. Ack=2586719503.  Len=1438 Window=2048.  Rcrded: 0507.663235
    In   A     18.27.0.17-20->18.27.0.16-1027 Seq=29856770. Ack=2586719503.  Len=0 Window=2048.  Rcrded: 0498.358532
    Out  A     18.27.0.16-1027->18.27.0.17-20 Seq=2586719503. Ack=29856770.  Len=0 Window=13246.  Rcrded: 0498.292833
    In   A     18.27.0.17-20->18.27.0.16-1027 Seq=29854722. Ack=2586719503.  Len=1438 Window=2048.  Rcrded: 0498.177664
    In   AP    18.27.0.17-20->18.27.0.16-1027 Seq=29856160. Ack=2586719503.  Len=610 Window=2048.  Rcrded: 0498.173808
    In   A     18.27.0.17-20->18.27.0.16-1027 Seq=29854722. Ack=2586719503.  Len=0 Window=2048.  Rcrded: 0489.814933
    Out  A     18.27.0.16-1027->18.27.0.17-20 Seq=2586719503. Ack=29854722.  Len=0 Window=15294.  Rcrded: 0489.756034
    In   AP    18.27.0.17-20->18.27.0.16-1027 Seq=29854112. Ack=2586719503.  Len=610 Window=2048.  Rcrded: 0489.636122




 1-Oct-85 01:27:09-EDT,1092;000000000000
Received: from MIT-MC.ARPA by MIT-OZ via Chaosnet; 1 Oct 85 01:26-EDT
Received: from SCRC-STONY-BROOK.ARPA by MIT-MC.ARPA 30 Sep 85 10:23:56 EDT
Received: from THAMES.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 323139; Mon 30-Sep-85 10:24:16-EDT
Date: Mon, 30 Sep 85 10:23 EDT
From: Scott McKay <SWM@SCRC-QUABBIN.ARPA>
Subject: The Scroll key should work in PEEK
To: Gumby@MIT-REAGAN.ARPA, BUG-LISPM@MIT-MC.ARPA
In-Reply-To: <850927104232.3.FILE-SERVER@MIT-REAGAN>
Message-ID: <850930102301.1.SWM@THAMES.SCRC.Symbolics.COM>

    Date: Fri, 27 Sep 85 10:42 EDT
    From: Gumby@MIT-REAGAN.ARPA

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, Mailer 43.0, AISite 9.6,
    microcode TMC5-MIC 319, Network-Security patch,
    Update-Internet-Namespace patch, Server-Finger patch,
    Inquir-update patch, Rodent Free Namespace Editor, on Lisp Machine Ronald Reagan:

    It's annoying to have to use the rodent.

My patience ran out last Wednesday, and I made c-V (and Scroll), m-V
(and m-Scroll), m-<, and m-> work in our development system.

 1-Oct-85 20:47:29-EDT,1691;000000000000
Received: from MIT-XX.ARPA by MIT-OZ via Chaosnet; 1 Oct 85 20:47-EDT
Date: Thu 26 Sep 85 10:01:57-EDT
From: Andrew A. Chien <CHIEN@MIT-XX>
Subject: gc-bug
To: bug-lispm@MIT-OZ


In SYSTEM 1.11, Compiler 1.0, File System 1.0,
Universal Command Loop 1.0, Window System 1.1, Input Editor 1.1,
ZMACS 1.2, font editor 1.0, Error Handler 1.0, Suggestions 1.0,
Debug Utilities 1.0, Explorer-Net 1.1, Telnet 1.0, VT100 1.0, ZMail 1.0,
Local-File 1.5, Net-Config 1.2, Explorer Serial & Parallel Ports 1.0,
Printer 1.0, Glossary 1.0, Explorer Streamer Tape 1.1, NVRAM 1.0,
User Profile Utility 1.1, microcode 200, REL 1.0.minprod, on IRONWOOD:


Insert your description of the circumstances here:

Was simply running a program that creates some arrays and
then throws them away.  We're doing some hw development on
the Nubus also.
		Andrew


>>TRAP 101 (ARGTYP LOCATIVE PP 0)
The first argument to %STORE-CONDITIONAL was of the wrong type.
The function expected a locative.
Backtrace from the debugger:

SI:GC-PROCESS (P.C. = 170)

 Local 0 (COMMITTED-FREE-SPACE): 5639773
 Local 1 (FREE-SPACE): 5603328
 Local 2 (POINTER): NIL
 Local 3 (ALREADY-MINE): NIL


SI:PROCESS-TOP-LEVEL (P.C. = 244)

   --Defaulted args:--
 Arg 0 (IGNORE): NIL
 Local 0: ("Reset and arrest process ~A." "Garbage Collector")
 Local 1: (CONDITION ("Reset and arrest process ~A." "Garbage Collector") T ("Reset and arrest process ~A." "Garbage Collector") ...)
 Local 2: ("Restart process ~A." "Garbage Collector")
 Local 3: ((SYSTEM:ABORT CONDITION) ("Restart process ~A." "Garbage Collector") T ("Restart process ~A." "Garbage Collector") ...)
 Local 4 (IGNORE): NIL

-------
 1-Oct-85 21:22:10-EDT,1691;000000000000
Received: from MIT-XX.ARPA by MIT-OZ via Chaosnet; 1 Oct 85 21:22-EDT
Date: Thu 26 Sep 85 10:01:57-EDT
From: Andrew A. Chien <CHIEN@MIT-XX>
Subject: gc-bug
To: bug-lispm@MIT-OZ


In SYSTEM 1.11, Compiler 1.0, File System 1.0,
Universal Command Loop 1.0, Window System 1.1, Input Editor 1.1,
ZMACS 1.2, font editor 1.0, Error Handler 1.0, Suggestions 1.0,
Debug Utilities 1.0, Explorer-Net 1.1, Telnet 1.0, VT100 1.0, ZMail 1.0,
Local-File 1.5, Net-Config 1.2, Explorer Serial & Parallel Ports 1.0,
Printer 1.0, Glossary 1.0, Explorer Streamer Tape 1.1, NVRAM 1.0,
User Profile Utility 1.1, microcode 200, REL 1.0.minprod, on IRONWOOD:


Insert your description of the circumstances here:

Was simply running a program that creates some arrays and
then throws them away.  We're doing some hw development on
the Nubus also.
		Andrew


>>TRAP 101 (ARGTYP LOCATIVE PP 0)
The first argument to %STORE-CONDITIONAL was of the wrong type.
The function expected a locative.
Backtrace from the debugger:

SI:GC-PROCESS (P.C. = 170)

 Local 0 (COMMITTED-FREE-SPACE): 5639773
 Local 1 (FREE-SPACE): 5603328
 Local 2 (POINTER): NIL
 Local 3 (ALREADY-MINE): NIL


SI:PROCESS-TOP-LEVEL (P.C. = 244)

   --Defaulted args:--
 Arg 0 (IGNORE): NIL
 Local 0: ("Reset and arrest process ~A." "Garbage Collector")
 Local 1: (CONDITION ("Reset and arrest process ~A." "Garbage Collector") T ("Reset and arrest process ~A." "Garbage Collector") ...)
 Local 2: ("Restart process ~A." "Garbage Collector")
 Local 3: ((SYSTEM:ABORT CONDITION) ("Restart process ~A." "Garbage Collector") T ("Restart process ~A." "Garbage Collector") ...)
 Local 4 (IGNORE): NIL

-------
 1-Oct-85 21:56:20-EDT,1691;000000000000
Received: from MIT-XX.ARPA by MIT-OZ via Chaosnet; 1 Oct 85 21:56-EDT
Date: Thu 26 Sep 85 10:01:57-EDT
From: Andrew A. Chien <CHIEN@MIT-XX>
Subject: gc-bug
To: bug-lispm@MIT-OZ


In SYSTEM 1.11, Compiler 1.0, File System 1.0,
Universal Command Loop 1.0, Window System 1.1, Input Editor 1.1,
ZMACS 1.2, font editor 1.0, Error Handler 1.0, Suggestions 1.0,
Debug Utilities 1.0, Explorer-Net 1.1, Telnet 1.0, VT100 1.0, ZMail 1.0,
Local-File 1.5, Net-Config 1.2, Explorer Serial & Parallel Ports 1.0,
Printer 1.0, Glossary 1.0, Explorer Streamer Tape 1.1, NVRAM 1.0,
User Profile Utility 1.1, microcode 200, REL 1.0.minprod, on IRONWOOD:


Insert your description of the circumstances here:

Was simply running a program that creates some arrays and
then throws them away.  We're doing some hw development on
the Nubus also.
		Andrew


>>TRAP 101 (ARGTYP LOCATIVE PP 0)
The first argument to %STORE-CONDITIONAL was of the wrong type.
The function expected a locative.
Backtrace from the debugger:

SI:GC-PROCESS (P.C. = 170)

 Local 0 (COMMITTED-FREE-SPACE): 5639773
 Local 1 (FREE-SPACE): 5603328
 Local 2 (POINTER): NIL
 Local 3 (ALREADY-MINE): NIL


SI:PROCESS-TOP-LEVEL (P.C. = 244)

   --Defaulted args:--
 Arg 0 (IGNORE): NIL
 Local 0: ("Reset and arrest process ~A." "Garbage Collector")
 Local 1: (CONDITION ("Reset and arrest process ~A." "Garbage Collector") T ("Reset and arrest process ~A." "Garbage Collector") ...)
 Local 2: ("Restart process ~A." "Garbage Collector")
 Local 3: ((SYSTEM:ABORT CONDITION) ("Restart process ~A." "Garbage Collector") T ("Restart process ~A." "Garbage Collector") ...)
 Local 4 (IGNORE): NIL

-------
 2-Oct-85 00:05:30-EDT,4526;000000000000
Received: from MIT-SID by MIT-OZ via Chaosnet; 2 Oct 85 00:05-EDT
Date: Wed, 2 Oct 85 00:05 EDT
From: Philip E. Agre <AGRE@OZ>
Subject: providing a new pathname component to replace an invalid one
To: BUG-LISPM@OZ
Message-ID: <"851002000500.1.agre@OZ"@SID>

In Symbolics 3670 Release 6.0, IP-TCP 29.0, AISite 10.6,
microcode TMC5-IO4-MIC 319, FEP 22, on Lisp Machine Sid Vicious:

I did M-X Copy File from OZ:PS:<AGRE-CARRY.LIFE>ST*.*.* to PIG:<AGREC>.
One of the files was called STATISTICS, which name was too long for VMS,
so VALIDATE-COMPONENT went into the debugger.  I hit Resume and gave it
the alternate name STAT, which it then claimed was invalid also.
Experimentation reveals that nothing you provide it will be considered
valid.  But if you back down to the :GET-PATHNAME frame and bash the
NAM argument to "STAT" and use C-M-R to re-enter :GET-PATHNAME then it
works fine.  I suspect it's checking the validity of the old invalid
pathname component instead of the one I'm giving it in response to its
prompt, but I don't know the condition system well enough to easily
follow the flow of control in the code.

>>Error: STAT is an invalid name component for PYGMALION (a VMS host).
While in the function (:METHOD PATHNAME :VALIDATE-COMPONENT)  (:METHOD PATHNAME :VALIDATE)  (:METHOD PATHNAME-HASH-TABLE-MIXIN :GET-PATHNAME)

(:METHOD PATHNAME :VALIDATE-COMPONENT):  (P.C. = 40)
   Arg 0 (SELF): #<VMS-PATHNAME "PIG:SYS$DISK:[AGREC]FOO.BIN;1">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor PATHNAME -- 8. IV's, 1. FL's 105216320>
   Arg 2 (OPERATION): :VALIDATE-COMPONENT
   Arg 3 (TEST-ARG): "STATISTICS"
   Local 3 (TEST-ARG): STAT
   Arg 4 (TEST-ARG-LOC): #<DTP-LOCATIVE 10275003>
   Arg 5 (VALID-MSG): :RAW-NAME
   Arg 6 (TEST-MSG): :VALID-NAME-P
   Arg 7 (CASE-MSG): :CASE-NAME
   Arg 8 (UNCASE-MSG): :UNCASE-NAME
   Arg 9 (COMPONENT): :NAME
   Arg 10 (PRETTY-NAME): "name component"

(:METHOD PATHNAME :VALIDATE):  (P.C. = 45)
   Arg 0 (SELF): #<VMS-PATHNAME "PIG:SYS$DISK:[AGREC]FOO.BIN;1">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor PATHNAME -- 8. IV's, 1. FL's 105216320>
   Arg 2 (OPERATION): :VALIDATE

(:METHOD PATHNAME-HASH-TABLE-MIXIN :GET-PATHNAME):  (P.C. = 30)
   Arg 0 (SELF): #<CASE-INSENSITIVE-PATHNAME-HASH-TABLE PYGMALION>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor PATHNAME-HASH-TABLE-MIXIN -- 1. IV's, 0. FL's 104225614>
   Arg 2 (OPERATION): :GET-PATHNAME
   Arg 3 (DEV): "SYS$DISK"
   Arg 4 (DIR): ("AGREC")
   Arg 5 (NAM): "STATISTICS"
   Arg 6 (TYP): "BIN"
   Arg 7 (VRS): 1
   Arg 8 (OTHERS): NIL
   Arg 9 (KEY): ("SYS$DISK" ("AGREC") "STATISTICS" "BIN" 1)

(:METHOD NET:PATHNAME-HOST-MIXIN :GET-PATHNAME):  (P.C. = 31)
   Arg 0 (SELF): #<VMS-HOST PYGMALION 56302224>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NET:PATHNAME-HOST-MIXIN -- 3. IV's, 0. FL's 105232643>
   Arg 2 (OPERATION): :GET-PATHNAME
   Arg 3 (DEV): "SYS$DISK"
   Arg 4 (DIR): ("AGREC")
   Arg 5 (NAM): "STATISTICS"
   Arg 6 (TYP): "BIN"
   Arg 7 (VRS): 1
   Arg 8 (OTHERS): NIL

MAKE-PATHNAME-1:  (P.C. = 607)
   Arg 0 (ACTOR): #<VMS-PATHNAME "PIG:SYS$DISK:[AGREC]ST*.*;*">
   Rest arg (OPTIONS): (:DEFAULT-HOST #<VMS-HOST PYGMALION 56302224> :DEFAULT-DEVICE "SYS$DISK" :DEFAULT-DIRECTORY ("AGREC") :DEFAULT-NAME "ST*" :DEFAULT-TYPE :WILD ...)

(:METHOD PATHNAME :NEW-PATHNAME):  (P.C. = 22)
   Arg 0 (SELF): #<VMS-PATHNAME "PIG:SYS$DISK:[AGREC]ST*.*;*">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor PATHNAME -- 8. IV's, 1. FL's 105216320>
   Arg 2 (OPERATION): :NEW-PATHNAME
   Rest arg (OPTIONS): (:DEVICE "SYS$DISK" :DIRECTORY ("AGREC") :NAME "STATISTICS" :TYPE "BIN" :VERSION 1)

(:METHOD PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 67)
   Arg 0 (SELF): #<VMS-PATHNAME "PIG:SYS$DISK:[AGREC]ST*.*;*">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor PATHNAME -- 8. IV's, 1. FL's 105216320>
   Arg 2 (.OPERATION.): :NEW-PATHNAME
   Rest arg (.DAEMON-CALLER-ARGS.): (:DEVICE "SYS$DISK" :DIRECTORY ("AGREC") :NAME "STATISTICS" :TYPE "BIN" :VERSION 1)

(:METHOD PATHNAME :TRANSLATE-WILD-PATHNAME):  (P.C. = 76)
   Arg 0 (SELF): #<TOPS20-PATHNAME "OZ:PS:<AGRE-CARRY.LIFE>ST*.*.*">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor PATHNAME -- 8. IV's, 1. FL's 105211410>
   Arg 2 (OPERATION): :TRANSLATE-WILD-PATHNAME
   Arg 3 (WILD-PATHNAME): #<VMS-PATHNAME "PIG:SYS$DISK:[AGREC]ST*.*;*">
   Arg 4 (SOURCE-PATHNAME): #<TOPS20-PATHNAME "OZ:PS:<AGRE-CARRY.LIFE>STATISTICS.BIN.1">

ZWEI:COM-COPY-FILE:  (P.C. = 235)

 3-Oct-85 10:05:04-EDT,757;000000000000
Received: from MIT-BUGS-BUNNY.ARPA by MIT-OZ via Chaosnet; 3 Oct 85 10:04-EDT
Received: by MIT-BUGS-BUNNY.ARPA (4.12/4.8)
	id AA07091; Thu, 3 Oct 85 10:04:44 edt
Date: Thu, 3 Oct 85 10:04:44 edt
From: Web Dove <dove@mit-bugs-bunny>
To: bug-lispm@oz
Subject: faster floating arithmetic on 36xx's

I have heard that the Ytek chip used in the 36xx series is capable of
>3mfops/sec.  Will this capability ever be available as vector
operators or anything else?

On a related note, double precision arithmetic is currently very slow
and complex arithmetic is sluggish.  Both tend to use up storage
quickly because the objects don't fit in the same space as a pointer.

Will there be changes in software/architecture to eliminate these problems?
 4-Oct-85 15:32:54-EDT,1658;000000000000
Received: from MIT-REAGAN.ARPA by MIT-OZ via Chaosnet; 4 Oct 85 15:32-EDT
Received: from SCRC-QUABBIN by MIT-REAGAN via INTERNET with SMTP id 8608; 4 Oct 85 15:32:27-EDT
Received: from NEPONSET.SCRC.Symbolics.COM by SCRC-QUABBIN.ARPA via CHAOS with CHAOS-MAIL id 207658; Fri 4-Oct-85 15:34:12-EDT
Date: Fri, 4 Oct 85 15:34 EDT
From: David C. Plummer <DCP@SCRC-QUABBIN.ARPA>
Subject: In Common Lisp, (macroexpand-1 '(cadr x)) => (car (cdr x))
To: Jonathan A Rees <JAR@MIT-MC.ARPA>, BUG-LISPM@OZ.mit
cc: KMP@MIT-MC.ARPA
In-Reply-To: <850923133201.1.JAR@ELVIS>
Message-ID: <851004153405.5.DCP@NEPONSET.SCRC.Symbolics.COM>

    Date: Mon, 23 Sep 85 13:32 EDT
    From: Jonathan A Rees <JAR@MIT-MC>

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.7,
    microcode TMC5-MIC 319, FEP 22, on Lisp Machine Elvis Presley:

    (macroexpand-1 '(cadr x))
    (CAR (CDR X))
    T

    This behavior is not permitted by the Common Lisp manual.  MACROEXPAND-1
    can only expand when the car of the form is defined as a macro.  CADR is
    not defined by a macro for two reasons:  (a) CLtL says it must be a
    function, not a macro, and (b) (macro-function 'cadr) => NIL.

    Regardless of whether or not you want Zetalisp's MACROEXPAND and
    MACROEXPAND-1 to expand DEFSUBST function calls, you should fix the CL
    versions so that they don't.  This kind of misbehavior can wreak havoc
    on code-walking tools.

Are you using your own code walking tools or those provided, but
possibly undocumented, by the system?  LT:MAPFORMS and LT:COPYFORMS take
a keyword, defaultly off, saying whether or not to expand substs.

 4-Oct-85 16:00:03-EDT,1524;000000000000
Received: from MIT-REAGAN.ARPA by MIT-OZ via Chaosnet; 4 Oct 85 15:59-EDT
Received: from SCRC-QUABBIN by MIT-REAGAN via INTERNET with SMTP id 8611; 4 Oct 85 15:59:57-EDT
Received: from NEPONSET.SCRC.Symbolics.COM by SCRC-QUABBIN.ARPA via CHAOS with CHAOS-MAIL id 207677; Fri 4-Oct-85 16:01:39-EDT
Date: Fri, 4 Oct 85 16:01 EDT
From: David C. Plummer <DCP@SCRC-QUABBIN.ARPA>
Subject: faster floating arithmetic on 36xx's
To: Web Dove <dove@MIT-BUGS-BUNNY.ARPA>, bug-lispm@oz.mit
In-Reply-To: The message of 3 Oct 85 10:04-EDT from Web Dove <dove@mit-bugs-bunny>
Message-ID: <851004160130.3.DCP@NEPONSET.SCRC.Symbolics.COM>

    Date: Thu, 3 Oct 85 10:04:44 edt
    From: Web Dove <dove@mit-bugs-bunny>

    I have heard that the Ytek chip used in the 36xx series is capable of
    >3mfops/sec.  Will this capability ever be available as vector
    operators or anything else?

    On a related note, double precision arithmetic is currently very slow
    and complex arithmetic is sluggish.  Both tend to use up storage
    quickly because the objects don't fit in the same space as a pointer.

    Will there be changes in software/architecture to eliminate these problems?

I have been toying around with a package that lets you naturally use the
microcode subprimitives for double, complex and even complex of double
operations.  As for architecture, a complex number of double floats
would require an immediate data field of 128 bits.  That's a bit too
ambitious for today's technologies...

 4-Oct-85 22:18:57-EDT,1412;000000000000
Received: from MIT-MC.ARPA by MIT-OZ via Chaosnet; 4 Oct 85 22:18-EDT
Date: Fri,  4 Oct 85 22:20:01 EDT
From: Jonathan A Rees <JAR@MIT-MC.ARPA>
Subject:  In Common Lisp, (macroexpand-1 '(cadr x)) => (car (cdr x))
To: DCP@SCRC-QUABBIN.ARPA
cc: KMP@MIT-MC.ARPA, JAR@MIT-MC.ARPA, BUG-LISPM@MIT-OZ
Message-ID: <[MIT-MC.ARPA].669106.851004.JAR>

    Date: Fri, 4 Oct 85 15:34 EDT
    From: David C. Plummer <DCP at SCRC-QUABBIN.ARPA>

        Date: Mon, 23 Sep 85 13:32 EDT
        From: Jonathan A Rees <JAR@MIT-MC>

        In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.7,
        microcode TMC5-MIC 319, FEP 22, on Lisp Machine Elvis Presley:

        (macroexpand-1 '(cadr x))
        (CAR (CDR X))
        T

        Regardless of whether or not you want Zetalisp's MACROEXPAND and
        MACROEXPAND-1 to expand DEFSUBST function calls, you should fix the CL
        versions...  This kind of misbehavior can wreak havoc
        on code-walking tools.

    Are you using your own code walking tools or those provided, but
    possibly undocumented, by the system?  LT:MAPFORMS and LT:COPYFORMS take
    a keyword, defaultly off, saying whether or not to expand substs.

Thank you for this bit of information, but no, I am not using 3600
features, only Common Lisp.  I only mentioned code-walking to emphasize
the importance of the problem.  Sorry if that was confusing.
 5-Oct-85 18:35:00-EDT,775;000000000000
Received: from MIT-GOLDILOCKS.ARPA by MIT-OZ via Chaosnet; 5 Oct 85 18:34-EDT
Received: from YOGI by GOLDILOCKS via CHAOS with CHAOS-MAIL id 8001; Sat 5-Oct-85 13:21:44-EDT
Date: Sat, 5 Oct 85 13:21 EDT
From: Scott Cyphers <sr.ehpyc%MIT-SPEECH@MIT-REAGAN.ARPA>
Subject: #\; and the editor
To: BUG-LISPM@MIT-GOLDILOCKS.ARPA
Message-ID: <851005132127.1.CYPHER@YOGI.MIT>

In Symbolics 3670 Release 6.0, IP-TCP 29.0, Spire-Macros 5.1,
Attribute 5.6, Compute 5.6, Audio 4.0, Speech-Attributes 4.3,
Display 6.22, Speech-Layouts 6.4, Prtout 4.0, Versatec 5.1, Spire 16.0,
ZOO 6.15, ZOO-SPIRE 2.3, microcode TMC5-IO4-FPA-MIC 319, on Lisp Machine Yogi:

In Zetalisp syntax:

(char= char #\;)


Try, for example, doing c-m-F with the cursor where the arrow points.
 5-Oct-85 18:35:15-EDT,2216;000000000000
Received: from MIT-GOLDILOCKS.ARPA by MIT-OZ via Chaosnet; 5 Oct 85 18:35-EDT
Received: from MIT-SPEECH by GOLDILOCKS via CHAOS with CHAOS-MAIL id 8004; Sat 5-Oct-85 18:31:59-EDT
Received: from SCRC-QUABBIN by MIT-REAGAN via INTERNET with SMTP id 8604; 4 Oct 85 14:45:42-EDT
Received: from NEPONSET.SCRC.Symbolics.COM by SCRC-QUABBIN.ARPA via CHAOS with CHAOS-MAIL id 207625; Fri 4-Oct-85 14:47:34-EDT
Date: Fri, 4 Oct 85 14:47 EDT
From: David C. Plummer <DCP@SCRC-QUABBIN.ARPA>
Subject: Hash table bug
To: sr.ehpyc@MIT-SPEECH.mit, bug-lispm@MIT-SPEECH.mit
In-Reply-To: <850921152048.2.RANDOLPH@GRIZZLY.MIT>
Message-ID: <851004144727.4.DCP@NEPONSET.SCRC.Symbolics.COM>

    Date: Saturday, 21 September 1985, 15:20-EDT
    From: sr.ehpyc at MIT-SPEECH

    I think this should fix the problem.  I don't see why old-loc was a
    locative instead of an index, since it gets converted back into an index
    each time anyways.

As I just said, this is fixed in 6.1, I think a little differently.
There was some good reason it was a locative that I figured out before,
but I don't remember what it was.

    (DEFMETHOD (EQ-HASH-TABLE :NEXT-ELEMENT) (OLD-LOC)
      (DECLARE (VALUES NEW-LOCATIVE-OR-NIL KEY VALUE))
      (LET* ((ARRAY-LOC (%MAKE-POINTER-OFFSET DTP-LOCATIVE HASH-ARRAY
					      (ARRAY-DATA-OFFSET HASH-ARRAY)))
	     (START-INDEX
	       (COND ((NULL OLD-LOC)		;Initialize on first call
		      ;; Rehash now so that deleting the current element won't
		      ;; disturb the mapping operation
		      (IF ( GC-GENERATION-NUMBER %GC-GENERATION-NUMBER)
			  (SEND SELF ':COPY-HASH-LOCKED HASH-ARRAY SIZE))
		      0)
		     (T (1+ old-loc)))))
	(IF (OR (< START-INDEX 0) ( START-INDEX (ARRAY-LENGTH HASH-ARRAY)))
	    (FERROR "Location given to :NEXT-ELEMENT is outside of the hash table."))
	(LOOP FOR I FROM START-INDEX BELOW (ARRAY-LENGTH HASH-ARRAY)
	      FOR LOC = (%MAKE-POINTER-OFFSET DTP-LOCATIVE ARRAY-LOC I)
	      DO (COND ((LDB-TEST (BYTE 1 3) I)	; (ODDP (// I 8))
			(INCF I 7))
		       ((= (%P-DATA-TYPE LOC) DTP-NULL))
		       (T (RETURN (VALUES i (CAR LOC) (%P-CONTENTS-OFFSET LOC 8)))))
	      FINALLY (RETURN (VALUES NIL NIL NIL)))))


 5-Oct-85 23:27:58-EDT,3324;000000000000
Received: from MIT-GOLDILOCKS.ARPA by MIT-OZ via Chaosnet; 5 Oct 85 23:27-EDT
Received: from SCRC-QUABBIN.MIT by GOLDILOCKS.MIT via INTERNET with SMTP id 8012; 5 Oct 85 23:27:15-EDT
Received: from NEPONSET.SCRC.Symbolics.COM by SCRC-QUABBIN.ARPA via CHAOS with CHAOS-MAIL id 207620; Fri 4-Oct-85 14:43:50-EDT
Date: Fri, 4 Oct 85 14:43 EDT
From: David C. Plummer <DCP@SCRC-QUABBIN.ARPA>
Subject: GC/Hash table bug
To: sr.ehpyc%MIT-SPEECH@MIT-REAGAN.ARPA, BUG-LISPM@MIT-GOLDILOCKS.ARPA
In-Reply-To: <850921150654.1.RANDOLPH@GRIZZLY.MIT>
References: <850921150654.1.RANDOLPH@GRIZZLY.MIT>,
            <850921154608.1.CYPHER@YOGI.MIT>
Message-ID: <851004144340.2.DCP@NEPONSET.SCRC.Symbolics.COM>

    Date: Sat, 21 Sep 85 15:06 EDT
    From: sr.ehpyc%MIT-SPEECH@MIT-REAGAN.ARPA

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, Spire-Macros 5.1,
    Attribute 5.6, Compute 5.4, Audio 4.0, Speech-Attributes 4.3,
    Display 6.22, Speech-Layouts 6.4, Prtout 4.0, Versatec 5.1, Spire 16.0,
    ZOO 6.14, ZOO-SPIRE 2.3, microcode TMC5-MIC 319, on Lisp Machine Grizzly:

    It looks like a dynamic flip (old-loc wasn't in an ephemeral area)
    happened during the looping through the hash table, causing the table to
    get moved without the place-holding locative getting changed to the new
    location.  When the error happened, the GC was waiting to flip (I think
    ephemerally).

I thought this fix made it into 6.0, but I guess it was isolated shortly
after 6.0 was sent out.  In any case, this sounds exactly like the bug
fixed by 271.23, which happens to be the very first patch after 6.0.

    >>Error: Location given to :NEXT-ELEMENT is outside of the hash table.
    While in the function (:METHOD SI:EQ-HASH-TABLE :NEXT-ELEMENT)  (:METHOD EDA:SAMPLE :FORCE)  (:METHOD EDA:SAMPLE :COLUMN-OPERATION)

    (:METHOD SI:EQ-HASH-TABLE :NEXT-ELEMENT):  (P.C. = 41)
       Arg 0 (SELF): #<EQ-HASH-TABLE 127710656>
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:EQ-HASH-TABLE -- 8. IV's, 0. FL's 104704256>
       Arg 2 (OPERATION): :NEXT-ELEMENT
       Arg 3 (OLD-LOC): #<DTP-LOCATIVE 127724415>
       Local 4 (ARRAY-LOC): #<DTP-LOCATIVE 55736400>
       Local 5 (START-INDEX): 11004942

    (:METHOD EDA:SAMPLE :FORCE):  (P.C. = 105)  (from GOLDY:>p>randolph>statistics>experimental>spire-eda-interface)
       Arg 0 (SELF): #<SAMPLE 117707133>
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor EDA:SAMPLE -- 2. IV's, 0. FL's 31033524>
       Arg 2 (OPERATION): :FORCE
       Arg 3 (COLUMN-IDS): ("Zero Crossing Rate")

    (:METHOD EDA:SAMPLE :COLUMN-OPERATION):  (P.C. = 40)  (from GOLDY:>p>randolph>statistics>experimental>basic-eda-data-structure)
       Arg 0 (SELF): #<SAMPLE 117707133>
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor EDA:SAMPLE -- 2. IV's, 0. FL's 31033524>
       Arg 2 (OPERATION): :COLUMN-OPERATION
       Arg 3 (OPERATION): EDA:MAX-IN-ARRAY
       Arg 4 (COLUMN-ID): "Zero Crossing Rate"
       Arg 5 (NEW-COLUMN-ID): "Peak Zero Crossing Rate"
       --Defaulted args:--
       Arg 6 (REMOVE-OLD-COLUMN?): NIL

    SEND:  (P.C. = 6)
       Arg 0 (OBJECT): #<SAMPLE 117707133>
       Arg 1 (MESSAGE-NAME): :COLUMN-OPERATION
       Rest arg (ARGUMENTS): (EDA:MAX-IN-ARRAY "Zero Crossing Rate" "Peak Zero Crossing Rate")

 6-Oct-85 11:34:32-EDT,516;000000000000
Received: from MIT-JANIS by MIT-OZ via Chaosnet; 6 Oct 85 11:34-EDT
Date: Sun, 6 Oct 85 11:34 EDT
From: Jonathan A Rees <JAR@MIT-MC>
Subject: ~0T doesn't work in FORMAT
To: BUG-LISPM@OZ
cc: JAR@MIT-MC
Message-ID: <851006113440.1.JAR@JANIS>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 10.6,
microcode TMC5-MIC 319, on Lisp Machine Janis Joplin:

(format t "~%~vtx" 0)
 x
(format t "~%~vtx" 1)
 x
(format t "~%~vtx" 2)
  x

If you ask FORMAT to tab to column 0, it tabs to column 1 instead.
 7-Oct-85 11:40:23-EDT,2554;000000000000
Received: from MIT-HUREWICZ by MIT-OZ via Chaosnet; 7 Oct 85 11:39-EDT
Date: Mon, 7 Oct 85 11:40 EDT
From: PAO@MIT-REAGAN
Sender: Lisp-Machine@MIT-REAGAN
Subject: Servers vs. PRINLEVEL and PRINLENGTH
To: BUG-LISPM@OZ
Message-ID: <851007114005.1.LISP-MACHINE@HUREWICZ>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.0,
Experimental NS 23.61, microcode TMC5-MIC 319, FEP 18,
Local NS patches  V1, on Lisp Machine Witold Hurewicz:

Servers which print list structure should bind PRINLEVEL and PRINLENGTH to NIL.

>>Trap: The argument given to the MINUS instruction, :|...|, was not a number.
While in the function CEILING  SI:RECEIVE-BAND-WITH-RETRY  SI:RECEIVE-BAND

CEILING:  (P.C. = 3)
   Arg 0 (NUMBER): :|...|
   Arg 1 (DIVISOR): 1152

SI:RECEIVE-BAND-WITH-RETRY:  (P.C. = 66)
   Arg 0 (MODE): :FAST
   Arg 1 (STREAM): #<CHARACTER-STREAM 30132566>
   Arg 2 (SOURCE-HOST): "hilbert"
   Arg 3 (SOURCE-BAND): ">cable-6-a.load"
   Local 3 (SOURCE-BAND): "FEP0:>cable-6-A.load.2"
   Arg 4 (TARGET-BAND): NIL
   Local 4 (TARGET-BAND): #<FEP-PATHNAME "FEP0:>cable-6-a.load">
   Arg 5 (SUBSET-START): NIL
   Local 5 (SUBSET-START): 0
   Arg 6 (SUBSET-N-BLOCKS): NIL
   Local 6 (SUBSET-N-BLOCKS): 1073741824
   Arg 7 (OFFER-BOOT-FILE-UPDATE): NIL

SI:RECEIVE-BAND:  (P.C. = 51)
   Arg 0 (SOURCE-HOST): "hilbert"
   Arg 1 (SOURCE-BAND): ">cable-6-a.load"
   --Defaulted args:--
   Arg 2 (TARGET-BAND): NIL
   Arg 3 (SUBSET-START): NIL
   Arg 4 (SUBSET-N-BLOCKS): NIL
   Arg 5 (BOOT-FILE): NIL

SI:*EVAL:  (P.C. = 403)
   Arg 0 (FORM): (SI:RECEIVE-BAND "hilbert" ">cable-6-a.load")
   Local 0 (FORM): NIL
   --Defaulted args:--
   Arg 1 (ENV): NIL
   Arg 2 (HOOK): NIL

(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0):  (P.C. = 152)
   Arg 0 (.LEXICAL-ENVIRONMENT-POINTER.): #<DTP-LOCATIVE 500047>

TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
   Arg 0 (NEW-MODE): :BLAST
   Arg 1 (STREAM): #:TERMINAL-IO-SYN-STREAM
   Arg 2 (CONTINUATION): #<LEXICAL-CLOSURE (:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0) 500054>

SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
   Arg 0 (NAME): "Lisp Top Level"
   Arg 1 (ABORT-FUNCTION): NIL
   Arg 2 (READ-FUNCTION): NIL
   Arg 3 (EVAL-FUNCTION): NIL
   Arg 4 (PRINT-FUNCTION): NIL

SI:LISP-COMMAND-LOOP:  (P.C. = 67)
   Arg 0: #<LISP-LISTENER Lisp Listener 1 43200216 exposed>
   Rest arg: (:NAME "Lisp Top Level")

SI:LISP-TOP-LEVEL1:  (P.C. = 5)
   Arg 0 (STREAM): #<LISP-LISTENER Lisp Listener 1 43200216 exposed>

SI:LISP-TOP-LEVEL:  (P.C. = 7)
 8-Oct-85 14:23:28-EDT,3701;000000000000
Received: from MIT-MC.ARPA by MIT-OZ via Chaosnet; 8 Oct 85 14:23-EDT
Received: from 40700015427 by MIT-MC.ARPA via Chaosnet; 8 OCT 85  10:49:47 EDT
Date: Tuesday, 8 October 1985, 10:48-EDT
From: Cory Myers <cory at MIT-BUGS-BUNNY>
Subject: The message :set-typein-font
To: BUG-LISPM at OZ
Message-ID: <851008104829.1.CORY@DAFFY-DUCK.MIT>

In Symbolics 3670 Release 6.0, IP-TCP 29.0,
microcode TMC5-IO4-FPA-MIC 319, FEP 22, with UTIL, on Lisp Machine Daffy Duck:

The message :set-typein-font should accept either a font or a  number
and should check that the font is in the font-map.  Since it does no
checking I can set it to very bad things and total disable my window.

As long as I am at it, there should be a least three different messages
- :set-typein-font, :set-typeout-font, :set-font (for setting both at
the same time).  :set-current-font is misleading - it sets the typeout
font and gives no clue how to set the input font.

>>Trap: The first argument given to the SYS:INTERNAL-< instruction, #<FONT MEDFNT 120517012>, was not a number.
While in the function TV:FONT-MAP-FONT-N  (:DEFUN-METHOD SI:IE-ADJUST-BLINKER)  (:DEFUN-METHOD SI:IE-TYI)

TV:FONT-MAP-FONT-N:  (P.C. = 5)
   Arg 0 (FONT-MAP): #<ART-Q-26 55366072>
   Arg 1 (N): #<FONT MEDFNT 120517012>

(:DEFUN-METHOD SI:IE-ADJUST-BLINKER):  (P.C. = 52)
   Arg 0 (SELF): #<KBSP-LISP-WINDOW Kbsp Lisp Window 1 601570 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:INTERACTIVE-STREAM -- 20. IV's, 2. FL's 5323662>

(:DEFUN-METHOD SI:IE-TYI):  (P.C. = 13)
   Arg 0 (SELF): #<KBSP-LISP-WINDOW Kbsp Lisp Window 1 601570 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:INTERACTIVE-STREAM -- 20. IV's, 2. FL's 5323662>
   Arg 2 (TOP-LEVEL?): T

(:DEFUN-METHOD SI:STANDARD-INPUT-EDITOR-TYI):  (P.C. = 63)
   Arg 0 (SELF): #<KBSP-LISP-WINDOW Kbsp Lisp Window 1 601570 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:INTERACTIVE-STREAM -- 20. IV's, 2. FL's 5323662>
   Arg 2: NIL

SI:STANDARD-INPUT-EDITOR-TYI:  (P.C. = 12)
   Rest arg (ARGS): (NIL)

SI:INPUT-EDITOR-INVOKE:  (P.C. = 11)
   Arg 0 (OPERATION): TYI
   Local 0 (OPERATION): SI:STANDARD-INPUT-EDITOR-TYI
   Rest arg (ARGS): (NIL)

(:METHOD SI:INTERACTIVE-STREAM :WHOPPER :ANY-TYI):  (P.C. = 67)
   Arg 0 (SELF): #<KBSP-LISP-WINDOW Kbsp Lisp Window 1 601570 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:INTERACTIVE-STREAM -- 20. IV's, 2. FL's 5323662>
   Arg 2 (.WHOPPER-CONTINUATION.): #<DTP-COMPILED-FUNCTION (:INTERNAL (:METHOD TV:WINDOW :COMBINED :ANY-TYI) 0) 31301556>
   Arg 3 (.OLD-SELF-MAPPING-TABLE.): #<Map to flavor TV:WINDOW -- 0. IV's, 12. FL's 5326717>
   Arg 4 (.OPERATION.): :ANY-TYI
   --Defaulted args:--
   Arg 5 (EOF): NIL

(:METHOD TV:WINDOW :COMBINED :ANY-TYI):  (P.C. = 13)
   Arg 0 (SELF): #<KBSP-LISP-WINDOW Kbsp Lisp Window 1 601570 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:WINDOW -- 0. IV's, 12. FL's 5326717>
   Arg 2 (.OPERATION.): :ANY-TYI
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

Rest of stack:
(:INTERNAL SI:CP-INPUT-EDITING 0):  (P.C. = 5)
(:DEFUN-METHOD SI:INPUT-EDITOR-READ):  (P.C. = 53)
(:METHOD SI:INTERACTIVE-STREAM :INPUT-EDITOR):  (P.C. = 131)
SI:WITH-INPUT-EDITING-INTERNAL:  (P.C. = 113)
SI:CP-INPUT-EDITING:  (P.C. = 76)
READ-COMMAND-OR-FORM:  (P.C. = 146)
SI:CP-COMMAND-LOOP-READ-FUNCTION:  (P.C. = 13)
(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0):  (P.C. = 105)
TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
SI:LISP-COMMAND-LOOP:  (P.C. = 67)
KBSP-LISP-TOP-LEVEL1:  (P.C. = 40)  (from KBSP: KBSP; KBSP-WIND)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
 8-Oct-85 16:10:27-EDT,1322;000000000000
Received: from MIT-MC.ARPA by MIT-OZ via Chaosnet; 8 Oct 85 16:10-EDT
Received: from MIT-REAGAN.ARPA by MIT-MC.ARPA via Chaosnet; 8 OCT 85  16:11:03 EDT
Received: from SCRC-STONY-BROOK by MIT-REAGAN via INTERNET with SMTP id 8826; 8 Oct 85 16:09:51-EDT
Received: from PEACE.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 329030; Tue 8-Oct-85 16:11:00-EDT
Date: Tue, 8 Oct 85 16:10 EDT
From: Charles Hornig <Hornig@SCRC-STONY-BROOK.ARPA>
Subject: Servers vs. PRINLEVEL and PRINLENGTH
To: PAO@MIT-REAGAN.ARPA, BUG-LISPM@MIT-REAGAN.ARPA
In-Reply-To: <851007114005.1.LISP-MACHINE@HUREWICZ>
Message-ID: <851008161028.1.HORNIG@PEACE.SCRC.Symbolics.COM>

    Date: Mon, 7 Oct 85 11:40 EDT
    From: PAO@MIT-REAGAN

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.0,
    Experimental NS 23.61, microcode TMC5-MIC 319, FEP 18,
    Local NS patches  V1, on Lisp Machine Witold Hurewicz:

    Servers which print list structure should bind PRINLEVEL and PRINLENGTH to NIL.

    >>Trap: The argument given to the MINUS instruction, :|...|, was not a number.
    While in the function CEILING  SI:RECEIVE-BAND-WITH-RETRY  SI:RECEIVE-BAND

Thank you for this report.  This problem is fixed in the development
system and the fix will be distributed in some future release.

 9-Oct-85 02:18:04-EDT,4056;000000000000
Received: from MIT-ZERMATT.ARPA by MIT-OZ via Chaosnet; 9 Oct 85 02:18-EDT
Received: from GSTAAD by ZERMATT via CHAOS with CHAOS-MAIL id 13759; Wed 9-Oct-85 02:18:25-EDT
Date: Wed, 9 Oct 85 02:18 EDT
From: GSB@MIT-MC.ARPA
Sender: SOHN@MIT-MC.ARPA
Subject: lambda indigestion
To: BUG-LISPM@MIT-ZERMATT.ARPA
Message-ID: <851009021839.1.SOHN@GSTAAD>

In Symbolics 3670 Release 6.0, IP-TCP 29.0, MLSite 7.3,
LIVE-WINDOW 267.24, Experimental GRAPHER 1.0, Experimental NIKL6 2.0,
microcode TMC5-IO4-MIC 319, on Lisp Machine Gstaad:

When si:*eval applies a lambda expression, it always calls a digested
lambda expression on an environment argument.  This occurs irrespective
of whether the lambda expression was digested by *eval and hence is
intended to be given an environment argument (as recorded in the
lambda-info bits of the digested lambda).

So, a lambda expression digested by funcall, for instance, will get a
too-many-aguments error if it gets used as the functional part of
a combination.

>>Error: The function (LAMBDA (X) (FUNCALL #<DTP-COMPILED-FUNCTION SQRT 6770527> (FUNCALL #<DTP-COMPILED-FUNCTION ABS 2111454> X))) was called with too many arguments.
While in the function SI:APPLY-LAMBDA  SYS:CALL-FUNNY-FUNCTION  (LAMBDA (X) (FUNCALL #<DTP-COMPILED-FUNCTION SQRT 6770527> (FUNCALL #<DTP-COMPILED-FUNCTION ABS 2111454> X)))

SI:APPLY-LAMBDA:  (P.C. = 134)
   Arg 0 (FUNCTION): (SI:DIGESTED-LAMBDA (LAMBDA (X) (FUNCALL #<DTP-COMPILED-FUNCTION SQRT 6770527> (FUNCALL #<DTP-COMPILED-FUNCTION ABS 2111454> X))) NIL 2049 262401 NIL (X) NIL (FUNCALL #<DTP-COMPILED-FUNCTION SQRT 6770527> (FUNCALL #<DTP-COMPILED-FUNCTION ABS 2111454> X)))
   Arg 1 (ARGUMENTS): (NIL 25)
   Local 2 (BODY): ((FUNCALL #<DTP-COMPILED-FUNCTION SQRT 6770527> (FUNCALL #<DTP-COMPILED-FUNCTION ABS 2111454> X)))
   Local 3 (LAMBDA-INFO): 2049
   Local 4 (ARGS-INFO): 262401
   Local 5 (SPECIALS): NIL
   Local 6 (BINDINGS): (X)
   Local 7 (DECLARATIONS): NIL
   Local 8 (OLD-ENV): NIL
   Local 9 (TEM): NIL
   Local 10 (N): 1
   Local 11 (BP): NIL
   Local 12 (VAR): NIL
   Local 13 (VAL): 2
   Local 14 (L): NIL

SYS:CALL-FUNNY-FUNCTION:  (P.C. = 102)
   Arg 0 (FUNCTION): (SI:DIGESTED-LAMBDA (LAMBDA (X) (FUNCALL #<DTP-COMPILED-FUNCTION SQRT 6770527> (FUNCALL #<DTP-COMPILED-FUNCTION ABS 2111454> X))) NIL 2049 262401 NIL (X) NIL (FUNCALL #<DTP-COMPILED-FUNCTION SQRT 6770527> (FUNCALL #<DTP-COMPILED-FUNCTION ABS 2111454> X)))
   Rest arg (ARGS): (NIL 25)

(LAMBDA (X) (FUNCALL #<DTP-COMPILED-FUNCTION SQRT 6770527> (FUNCALL #<DTP-COMPILED-FUNCTION ABS 2111454> X))):
   Arg 0 (X): NIL
   --Extraneous args:--
   Arg 1: 25

SI:*EVAL:  (P.C. = 162)
   Arg 0 (FORM): ((SI:DIGESTED-LAMBDA (LAMBDA (X) (FUNCALL #<DTP-COMPILED-FUNCTION SQRT 6770527> **)) NIL 2049 262401 NIL (X) NIL (FUNCALL #<DTP-COMPILED-FUNCTION SQRT 6770527> (FUNCALL #<DTP-COMPILED-FUNCTION ABS 2111454> X))) 25)
   Local 0 (FORM): NIL
   --Defaulted args:--
   Arg 1 (ENV): NIL
   Arg 2 (HOOK): NIL

SI:*EVAL:  (P.C. = 403)
   Arg 0 (FORM): (EVAL (SI:XR-BQ-CONS Q (QUOTE (25))))
   Local 0 (FORM): NIL
   --Defaulted args:--
   Arg 1 (ENV): NIL
   Arg 2 (HOOK): NIL

(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0):  (P.C. = 152)
   Arg 0 (.LEXICAL-ENVIRONMENT-POINTER.): #<DTP-LOCATIVE 11100074>

TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
   Arg 0 (NEW-MODE): :BLAST
   Arg 1 (STREAM): #:TERMINAL-IO-SYN-STREAM
   Arg 2 (CONTINUATION): #<LEXICAL-CLOSURE (:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0) 11100101>

SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
   Arg 0 (NAME): "Lisp Top Level"
   Arg 1 (ABORT-FUNCTION): NIL
   Arg 2 (READ-FUNCTION): NIL
   Arg 3 (EVAL-FUNCTION): NIL
   Arg 4 (PRINT-FUNCTION): NIL

SI:LISP-COMMAND-LOOP:  (P.C. = 67)
   Arg 0: #<LISP-LISTENER Lisp Listener 2 17604060 exposed>
   Rest arg: (:NAME "Lisp Top Level")

SI:LISP-TOP-LEVEL1:  (P.C. = 5)
   Arg 0 (STREAM): #<LISP-LISTENER Lisp Listener 2 17604060 exposed>

SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
   Arg 0 (IGNORE): NIL
10-Oct-85 17:18:59-EDT,5941;000000000000
Received: from MIT-MC.ARPA by MIT-OZ via Chaosnet; 10 Oct 85 17:18-EDT
Received: from MCC.ARPA by MIT-MC.ARPA 10 Oct 85 17:18:35 EDT
Received: from mcchi-leaf by MCC.ARPA with TCP; Thu 10 Oct 85 16:16:13-CDT
Posted-Date: Thu, 10 Oct 85 16:17 CDT
Received: from ARIES (mcc-ganesh) by mcchi-leaf (4.24/Dave01Apr) 
	id AA04048; Thu, 10 Oct 85 16:25:37 cdt
Date: Thu, 10 Oct 85 16:17 CDT
From: Gumby@MCC-AI
Sender: ai.bridgeland@MCC-AI
Reply-To: Gumby@MCC-AI
Subject: CL require vs make-system
To: BUG-LISPM%mc@MCC-AI
Message-Id: <851010161717.2.DB@ARIES>

In Symbolics 3640 Release 6.0, MCC-Site 3.0, IP-TCP 29.0,
microcode TMC5-IO4-ST506-MIC 319, on Aries:

I am trying to do a MAKE-SYSTEM of a bunch of CL files (the SYSDCL file
is in zippy-lisp, tho).  The top of the files have REQUIRE/PROVIDE,
because the files have to load into the 20 too.  When I do a make-system
I get the following problem, which is caused by REQUIRE's passing its
argument (a CL string) to MAKE-SYSTEM, which requires a ZL string.

gumby

>>Trap: The first argument given to the ZETALISP-SYSTEM:LDB-INTERNAL instruction, #\L, was not a number.
While in the function ZL:STRING-UPCASE  SI:MAYBE-RELOAD-SYSTEM-DECLARATION  SI:FIND-SYSTEM-NAMED

ZL:STRING-UPCASE:  (P.C. = 26)
   Arg 0 (STRING): "Level-1"
   Local 0 (STRING): "Level-1"
   --Defaulted args:--
   Arg 1 (FROM): 0
   Arg 2 (TO): NIL
   Arg 3 (COPY-P): T
   Local 4 (LEN): 7
   Local 5 (CHAR): #\L
   Local 6 (SUBCHAR): NIL
   Local 7 (I): 0

SI:MAYBE-RELOAD-SYSTEM-DECLARATION:  (P.C. = 44)
   Arg 0 (SYSTEM-NAME): "Level-1"
   Arg 1 (KEYWORDS): (:NOCONFIRM)

SI:FIND-SYSTEM-NAMED:  (P.C. = 50)
   Arg 0 (NAME): "Level-1"
   --Defaulted args:--
   Arg 1 (NO-ERROR-P): NIL
   Arg 2 (LOADED-ONLY): NIL

MAKE-SYSTEM:  (P.C. = 6)
   Arg 0 (SYSTEM): "Level-1"
   Rest arg (KEYWORDS): (:NOCONFIRM)

REQUIRE:  (P.C. = 17)
   Arg 0 (MODULE-NAME): "Level-1"
   --Defaulted args:--
   Arg 1 (PATHNAME): NIL

SI:*EVAL:  (P.C. = 403)
   Arg 0 (FORM): (REQUIRE "Level-1")
   Local 0 (FORM): NIL
   --Defaulted args:--
   Arg 1 (ENV): NIL
   Arg 2 (HOOK): NIL

SI:LOAD-BIN-OP-FORM:  (P.C. = 4)
   Arg 0 (STREAM): #<FILE-INPUT-BINARY-STREAM #"CYC: SOURCE-5; LEVEL-2.BIN.NEWEST" 17467455>

SI:BIN-LOAD-NEXT-COMMAND:  (P.C. = 24)
   Arg 0 (STREAM): #<FILE-INPUT-BINARY-STREAM #"CYC: SOURCE-5; LEVEL-2.BIN.NEWEST" 17467455>

SI:BIN-LOAD-TOP-LEVEL:  (P.C. = 6)
   Arg 0 (STREAM): #<FILE-INPUT-BINARY-STREAM #"CYC: SOURCE-5; LEVEL-2.BIN.NEWEST" 17467455>

(:METHOD ZWEI:MAJOR-MODE :DEFAULT :LOAD-BINARY-FILE):  (P.C. = 4)
   Arg 0 (SELF): #<LISP-MODE 120576060>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:MAJOR-MODE -- 1. IV's, 1. FL's 142357032>
   Arg 2 (OPERATION): :LOAD-BINARY-FILE
   Arg 3 (IGNORE): #<DTP-LOCATIVE 134442162>
   Arg 4 (STREAM): #<FILE-INPUT-BINARY-STREAM #"CYC: SOURCE-5; LEVEL-2.BIN.NEWEST" 17467455>

SI:BIN-LOAD-FILE-INTERNAL:  (P.C. = 147)
   Arg 0 (STREAM): #<FILE-INPUT-BINARY-STREAM #"CYC: SOURCE-5; LEVEL-2.BIN.NEWEST" 17467455>
   Arg 1 (INTO-PACKAGE): ZL-USER:CYC
   Arg 2 (NO-MSG-P): T

SI:BIN-LOAD-FILE:  (P.C. = 22)
   Arg 0 (FILE): #P"CYC: SOURCE-5; LEVEL-2.BIN.NEWEST"
   Arg 1 (INTO-PACKAGE): ZL-USER:CYC
   Arg 2 (NO-MSG-P): T

SI:FASLOAD-1:  (P.C. = 5)
   Arg 0 (INFILE): #P"CYC: SOURCE-5; LEVEL-2.BIN.NEWEST"

SI:DO-FILE-TRANSFORMATIONS:  (P.C. = 244)

SI:PERFORM-TRANSFORMATIONS:  (P.C. = 167)
   Arg 0 (TRANSFORMATION-LIST): ((#<TRANSFORMATION COMPILE 16667771> ZL-USER:CYC NIL #<SYSTEM CYC-5 16602436>) (#<TRANSFORMATION COMPILE 16670032> ZL-USER:CYC NIL #<SYSTEM CYC-5 16602436>) (#<TRANSFORMATION COMPILE 16670073> ZL-USER:CYC NIL #<SYSTEM CYC-5
 16602436>) (#<TRANSFORMATION COMPILE 16670126> ZL-USER:CYC NIL #<SYSTEM CYC-5 16602436>) (#<TRANSFORMATION COMPILE 16670135> ZL-USER:CYC NIL #<SYSTEM CYC-5 16602436>) (#<TRANSFORMATION COMPILE 16670144> ZL-USER:CYC NIL #<SYSTEM CYC-5 16602436>) (#<TRANSF
ORMATION INCREMENT-COMPILED-VERSION 16670153> ZL-USER:CYC NIL #<SYSTEM CYC-5 16602436>))

SI:PERFORM-TRANSFORMATIONS:  (P.C. = 64)
   Arg 0 (TRANSFORMATION-LIST): ((#<TRANSFORMATION FASLOAD 16667762> ZL-USER:CYC NIL #<SYSTEM CYC-5 16602436>) (#<TRANSFORMATION FASLOAD 16670006> ZL-USER:CYC NIL #<SYSTEM CYC-5 16602436>) (#<TRANSFORMATION FASLOAD 16670023> ZL-USER:CYC NIL #<SYSTEM CYC-5
 16602436>) (#<TRANSFORMATION FASLOAD 16670047> ZL-USER:CYC NIL #<SYSTEM CYC-5 16602436>) (#<TRANSFORMATION FASLOAD 16670064> ZL-USER:CYC NIL #<SYSTEM CYC-5 16602436>) (#<TRANSFORMATION FASLOAD 16670110> ZL-USER:CYC NIL #<SYSTEM CYC-5 16602436>) (#<TRANSF
ORMATION INCREMENT-LOADED-VERSION 16670117> ZL-USER:CYC NIL #<SYSTEM CYC-5 16602436>))

MAKE-SYSTEM:  (P.C. = 241)
   Arg 0 (SYSTEM): CYC-5
   Rest arg (KEYWORDS): (:BATCH :COMPILE)

SI:*EVAL:  (P.C. = 403)
   Arg 0 (FORM): (MAKE-SYSTEM (QUOTE CYC-5) (QUOTE :BATCH) :COMPILE)
   Local 0 (FORM): NIL
   --Defaulted args:--
   Arg 1 (ENV): NIL
   Arg 2 (HOOK): NIL

(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0):  (P.C. = 152)
   Arg 0 (.LEXICAL-ENVIRONMENT-POINTER.): #<DTP-LOCATIVE 15440101>

TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
   Arg 0 (NEW-MODE): :BLAST
   Arg 1 (STREAM): #:TERMINAL-IO-SYN-STREAM
   Arg 2 (CONTINUATION): #<LEXICAL-CLOSURE (:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0) 15440106>

SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
   Arg 0 (NAME): #"Common Lisp Top Level"
   Arg 1 (ABORT-FUNCTION): NIL
   Arg 2 (READ-FUNCTION): NIL
   Arg 3 (EVAL-FUNCTION): NIL
   Arg 4 (PRINT-FUNCTION): NIL

SI:LISP-COMMAND-LOOP:  (P.C. = 67)
   Arg 0: #<COMMON-LISP-LISTENER Common Lisp Listener 1 1501525 exposed>
   Rest arg: (:NAME #"Common Lisp Top Level")

SI:COMMON-LISP-TOP-LEVEL:  (P.C. = 46)
   Arg 0 (WINDOW): #<COMMON-LISP-LISTENER Common Lisp Listener 1 1501525 exposed>

SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
   --Defaulted args:--
   Arg 0 (IGNORE): NIL

11-Oct-85 12:40:16-EDT,696;000000000000
Received: from MIT-MC.ARPA by MIT-OZ via Chaosnet; 11 Oct 85 12:40-EDT
Received: from MCC.ARPA by MIT-MC.ARPA 11 Oct 85 12:39:41 EDT
Received: from INANNA by MCC.ARPA via Chaosnet; Fri 11 Oct 85 11:33:12-CDT
Date: Fri, 11 Oct 85 11:34 CDT
From: David Vinayak Wallace <Gumby@MCC-AI>
Subject: in-package to a lisp-listener
To: Bug-Lispm%mc@MCC-AI
Message-ID: <851011113456.1.GUMBY@INANNA>

In Symbolics 3640 Release 6.0, MCC-Site 3.0, IP-TCP 29.0,
Experimental CYC-5 1.1, microcode TMC5-IO4-ST506-MIC 319, on Inanna:

It's really annoying that (in-package'foo) to a CL listener still causes
"Warning: binding zl:package to xxx...."  It should do the
setq-standard-value or whatever.
11-Oct-85 14:01:19-EDT,956;000000000000
Received: from MIT-MC.ARPA by MIT-OZ via Chaosnet; 11 Oct 85 14:01-EDT
Received: from MCC.ARPA by MIT-MC.ARPA 11 Oct 85 14:00:17 EDT
Received: from INANNA by MCC.ARPA via Chaosnet; Fri 11 Oct 85 12:54:17-CDT
Date: Fri, 11 Oct 85 12:55 CDT
From: David Vinayak Wallace <Gumby@MCC-AI>
Subject: ASSERT
To: BUG-LISPM%mc@MCC-AI
Message-ID: <851011125559.1.GUMBY@INANNA>

In Symbolics 3640 Release 6.0, MCC-Site 3.0, IP-TCP 29.0,
Experimental CYC-5 2.0, microcode TMC5-IO4-ST506-MIC 319, on Inanna:

CL:ASSERT has two implementational bugs, arising from its using
multiple-value-choose menus for its operations:

First, I can't end my typeing with a carriage-return, which is
non-intuitive.  I have to end it with a space.

Secondly, I can only enter symbols this way.  What if I want to use
ASSERT to require that something be, e.g. a pathname for a particular
host?  I can do this by typing #. but I have to use ZL, and not CL
with it(!).
11-Oct-85 17:20:50-EDT,1280;000000000000
Received: from MIT-MC.ARPA by MIT-OZ via Chaosnet; 11 Oct 85 17:20-EDT
Received: from MCC.ARPA by MIT-MC.ARPA 11 Oct 85 17:21:57 EDT
Received: from INANNA by MCC.ARPA via Chaosnet; Fri 11 Oct 85 16:19:31-CDT
Date: Fri, 11 Oct 85 16:21 CDT
From: David Vinayak Wallace <Gumby@MCC-AI>
Subject: incorrect compiler warning w/zl:destructuring-bind
To: BUG-LISPM%mc@MCC-AI
Message-ID: <851011162119.2.GUMBY@INANNA>

In Symbolics 3640 Release 6.0, MCC-Site 3.0, IP-TCP 29.0,
Experimental CYC-5 2.0, microcode TMC5-IO4-ST506-MIC 319, on Inanna:

The following function, when compiles, generates the error:
  For Function CONVERT-XCHG-FORMS
    The variable NAME was never used.

(compiled via c-sh-c in a buffer w/CL syntax)

Though that is correct, the variable SLOT-P is also not used. That
should generate a warning too.

(defun convert-xchg-forms (instream outstream)
  (si:with-indentation (outstream 2)
    (do ((form (cc-read instream) (cc-read instream)))
	((and (listp form)
	      (eq (car form) 'end-load-u))
	 (format outstream ")~%"))
      (zl:destructuring-bind (ignore name slotzenvalues slot-p) form
	(format outstream "~%(~:[UNIT~;SLOT~] ~S")
	(si:with-indentation (outstream 2)
	  (format-all-slots-to-stream slotzenvalues outstream))))))
11-Oct-85 17:36:38-EDT,1075;000000000000
Received: from MIT-MC.ARPA by MIT-OZ via Chaosnet; 11 Oct 85 17:36-EDT
Received: from MCC.ARPA by MIT-MC.ARPA 11 Oct 85 17:37:38 EDT
Received: from SCRC-STONY-BROOK.ARPA by MCC.ARPA with TCP; Fri 11 Oct 85 16:35:20-CDT
Received: from THAMES.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 332347; Fri 11-Oct-85 16:47:00-EDT
Date: Fri, 11 Oct 85 16:48 EDT
From: Scott McKay <SWM@SCRC-QUABBIN.ARPA>
Subject: in-package to a lisp-listener
To: Gumby@MCC.ARPA, Bug-Lispm%mc@MCC.ARPA
In-Reply-To: <851011113456.1.GUMBY@INANNA>
Message-ID: <851011164827.3.SWM@THAMES.SCRC.Symbolics.COM>

    Date: Fri, 11 Oct 85 11:34 CDT
    From: David Vinayak Wallace <Gumby@MCC-AI>

    In Symbolics 3640 Release 6.0, MCC-Site 3.0, IP-TCP 29.0,
    Experimental CYC-5 1.1, microcode TMC5-IO4-ST506-MIC 319, on Inanna:

    It's really annoying that (in-package'foo) to a CL listener still causes
    "Warning: binding zl:package to xxx...."  It should do the
    setq-standard-value or whatever.

You're right.  Fixed in the development system.

11-Oct-85 18:47:34-EDT,2959;000000000000
Received: from MIT-MC.ARPA by MIT-OZ via Chaosnet; 11 Oct 85 18:47-EDT
Received: from MCC.ARPA by MIT-MC.ARPA 11 Oct 85 18:34:22 EDT
Received: from INANNA by MCC.ARPA via Chaosnet; Fri 11 Oct 85 17:30:06-CDT
Date: Fri, 11 Oct 85 17:31 CDT
From: David Vinayak Wallace <Gumby@MCC-AI>
Subject: write-to-string broken
To: BUG-LISPM%mc@MCC-AI
Message-ID: <851011173155.3.GUMBY@INANNA>

In Symbolics 3640 Release 6.0, MCC-Site 3.0, IP-TCP 29.0,
Experimental CYC-5 2.0, microcode TMC5-IO4-ST506-MIC 319, on Inanna:

I did (write-to-string'foo) and got:

>>Trap: The first argument given to the ZETALISP-SYSTEM:FAST-ASET instruction, 70, was not a character.
While in the function ZETALISP:COPY-ARRAY-PORTION  SCL::OUTPUT-TO-STRING-STREAM  (:INTERNAL WRITE-TO-STRING 0)

ZETALISP:COPY-ARRAY-PORTION:  (P.C. = 26)
   Arg 0 (FROM-ARRAY): #"FOO"
   Arg 1 (FROM-START): 0
   Arg 2 (FROM-END): 3
   Arg 3 (TO-ARRAY): "                                                                                                    "
   Arg 4 (TO-START): 0
   Arg 5 (TO-END): 3
   Local 6 (FROM): #"FOO"
   Local 7: 805340394
   Local 8: #<DTP-LOCATIVE 142166124>
   Local 9: 3
   Local 10 (TO): "                                                                                                    "
   Local 11: -1342143254
   Local 12: #<DTP-LOCATIVE 17724202>
   Local 13: 100
   Local 14 (FROM-LENGTH): 3
   Local 15 (TO-LENGTH): 3
   Local 16 (INDEX-FROM): 0
   Local 17 (INDEX-TO): 0
   Local 18: 2

SCL::OUTPUT-TO-STRING-STREAM:  (P.C. = 154)
   Arg 0 (OP): :STRING-OUT
   Arg 1 (THING): ("                                                                                                    " 0 100)
   Arg 2 (STREAM): #<LEXICAL-CLOSURE (:INTERNAL WRITE-TO-STRING 0) 43440377>
   Arg 3 (ARG1): #"FOO"
   Rest arg (ARGS): NIL

(:INTERNAL WRITE-TO-STRING 0):  (P.C. = 12)
   Arg 0 (.LEXICAL-ENVIRONMENT-POINTER.): #<DTP-LOCATIVE 43440375>
   Arg 1 (OPERATION): :STRING-OUT
   Rest arg (ARGS): (#"FOO")

SI:PRINT-PNAME-STRING:  (P.C. = 433)
   Arg 0 (SYMBOL): FOO
   Arg 1 (SLASHIFY-P): T
   Arg 2 (STREAM): #<LEXICAL-CLOSURE (:INTERNAL WRITE-TO-STRING 0) 43440377>

SI:PRINT-OBJECT:  (P.C. = 70)
   Arg 0 (EXP): FOO
   Arg 1 (I-PRINDEPTH): 0
   Arg 2 (SLASHIFY-P): T
   Arg 3 (STREAM): #<LEXICAL-CLOSURE (:INTERNAL WRITE-TO-STRING 0) 43440377>
   --Defaulted args:--
   Arg 4 (WHICH-OPERATIONS): (:TYO :STRING-OUT :LINE-OUT :FRESH-LINE :READ-POINTER :SET-POINTER :READ-CURSORPOS :SET-CURSORPOS :INCREMENT-CURSORPOS :FINISH)

SCL::WRITE-INTERNAL:  (P.C. = 21)
   Arg 0 (OBJECT): FOO
   Arg 1 (STREAM): #<LEXICAL-CLOSURE (:INTERNAL WRITE-TO-STRING 0) 43440377>

WRITE-TO-STRING:  (P.C. = 34)
   Arg 0 (OBJECT): FOO
   Rest arg (KEYWORD-ARGS): NIL

SI:*EVAL:  (P.C. = 403)
   Arg 0 (FORM): (WRITE-TO-STRING (QUOTE FOO))
   Local 0 (FORM): NIL
   --Defaulted args:--
   Arg 1 (ENV): NIL
   Arg 2 (HOOK): NIL
12-Oct-85 10:11:31-EDT,1152;000000000000
Received: from MIT-MC.ARPA by MIT-OZ via Chaosnet; 12 Oct 85 10:11-EDT
Received: from MCC.ARPA by MIT-MC.ARPA 12 Oct 85 09:57:51 EDT
Received: from SCRC-STONY-BROOK.ARPA by MCC.ARPA with TCP; Sat 12 Oct 85 08:55:31-CDT
Received: from COCKATIEL.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 332600; Sat 12-Oct-85 09:57:22-EDT
Date: Sat, 12 Oct 85 09:57 EDT
From: Joanne Hukee <hukee@SCRC-STONY-BROOK.ARPA>
Subject: write-to-string broken
To: Gumby@MCC.ARPA
cc: BUG-LISPM%mc@MCC.ARPA
In-Reply-To: <851011173155.3.GUMBY@INANNA>
Message-ID: <851012095732.6.HUKEE@COCKATIEL.SCRC.Symbolics.COM>

    Date: Fri, 11 Oct 85 17:31 CDT
    From: David Vinayak Wallace <Gumby@MCC-AI>

    In Symbolics 3640 Release 6.0, MCC-Site 3.0, IP-TCP 29.0,
    Experimental CYC-5 2.0, microcode TMC5-IO4-ST506-MIC 319, on Inanna:

    I did (write-to-string'foo) and got:

    >>Trap: The first argument given to the ZETALISP-SYSTEM:FAST-ASET instruction, 70, was not a character.
    While in the function ZETALISP:COPY-ARRAY-PORTION  SCL::OUTPUT-TO-STRING-STREAM  (:INTERNAL WRITE-TO-STRING 0)

This is fixed in 6.1.

12-Oct-85 19:42:47-EDT,907;000000000000
Received: from MIT-GOLDILOCKS.ARPA by MIT-OZ via Chaosnet; 12 Oct 85 19:42-EDT
Received: from SMOKEY by GOLDILOCKS via CHAOS with CHAOS-MAIL id 8206; Sat 12-Oct-85 19:43:49-EDT
Date: Sat, 12 Oct 85 19:43 EDT
From: Scott Cyphers <sr.ehpyc%MIT-SPEECH@MIT-REAGAN.ARPA>
Subject: Bogus compiler warning
To: BUG-LISPM@MIT-GOLDILOCKS.ARPA
Message-ID: <851012194305.5.CYPHER@SMOKEY.MIT>

In Symbolics 3670 Release 6.0, IP-TCP 29.0, Spire-Macros 5.1,
Attribute 5.6, Compute 5.9, Audio 4.0, Speech-Attributes 4.7,
Display 6.22, Speech-Layouts 6.4, Prtout 4.2, Versatec 5.1, Spire 16.0,
ZOO 6.17, ZOO-SPIRE 2.3, microcode TMC5-IO4-FPA-MIC 319, on Lisp Machine Smokey:

Compiling this function gives the warning that the variable
.TEST-FUNCTION-CELL. was never used.

(defun foo (x)
  (block baz
    (flet ((test (n)
	     (if (= n x)
		 (return-from baz 'yes))))
      (funcall 'bar #'test))))

12-Oct-85 20:24:31-EDT,6858;000000000000
Received: from MIT-GOLDILOCKS.ARPA by MIT-OZ via Chaosnet; 12 Oct 85 20:24-EDT
Received: from SMOKEY by GOLDILOCKS via CHAOS with CHAOS-MAIL id 8207; Sat 12-Oct-85 20:25:34-EDT
Date: Sat, 12 Oct 85 20:24 EDT
From: Scott Cyphers <sr.ehpyc%MIT-SPEECH@MIT-REAGAN.ARPA>
Subject: Compiler doesn't work
To: BUG-LISPM@MIT-GOLDILOCKS.ARPA
Message-ID: <851012202452.6.CYPHER@SMOKEY.MIT>

In Symbolics 3670 Release 6.0, IP-TCP 29.0, Spire-Macros 5.1,
Attribute 5.6, Compute 5.9, Audio 4.0, Speech-Attributes 4.7,
Display 6.22, Speech-Layouts 6.4, Prtout 4.2, Versatec 5.1, Spire 16.0,
ZOO 6.17, ZOO-SPIRE 2.3, microcode TMC5-IO4-FPA-MIC 319, on Lisp Machine Smokey:

This doesn't compile.

(defun make-counting-generator (from to increment)
  #'(lambda (operation &rest args)
      (case operation
	(:value (apply #'(lambda (&optional (offset 0))
			   (- from (* offset increment)))
		       args))
	(:next (apply #'(lambda (termination)
			  (incf from increment)
			  (if (> from to)
			      (funcall termination)))
		      args))
	(otherwise (ferror "Illegal Operation")))))

>>Error: Function #<EXTERNAL-FUNCTION 40172020> does not have a local variable named COMPILER:.LEXICAL-ENVIRONMENT-POINTER.
While in the function COMPILER:FIND-FUNCTION-LEXICAL-VARIABLE-NAMED  COMPILER:GET-LEXICAL-POINTER  COMPILER:GET-ENVIRONMENT-LIST-POINTER
Error occurred while compiling MAKE-COUNTING-GENERATOR

COMPILER:FIND-FUNCTION-LEXICAL-VARIABLE-NAMED:  (P.C. = 27)
   Arg 0 (FUNCTION): #<EXTERNAL-FUNCTION 40172020>
   Arg 1 (NAME): COMPILER:.LEXICAL-ENVIRONMENT-POINTER.
   Arg 2 (ERRORP): T
   Local 3 (V): #<NORMAL-LEXICAL-VARIABLE FROM 40172070>
   Local 4: NIL

COMPILER:GET-LEXICAL-POINTER:  (P.C. = 23)
   Arg 0 (FUNCTION): #<EXTERNAL-FUNCTION 40172020>
   Arg 1 (VARIABLE): COMPILER:.LEXICAL-ENVIRONMENT-POINTER.
   Arg 2 (ERRORP): T

COMPILER:GET-ENVIRONMENT-LIST-POINTER:  (P.C. = 6)
   Arg 0 (FUNCTION): #<EXTERNAL-FUNCTION 40172020>
   --Defaulted args:--
   Arg 1 (ERRORP): T

COMPILER:FIND-ENVIRONMENT-VARIABLE-FOR-CLOSURE:  (P.C. = 16)
   Arg 0 (FUN): #<EXTERNAL-FUNCTION 40172020>

COMPILER:ASSEMBLE-LEXICAL-CLOSURE:  (P.C. = 44)
   Arg 0 (INST): #<Inst (Fun (INTERNAL MAKE-COUNTING-GENERATOR 0))>
   Arg 1 (FUN): #<INTERNAL-FUNCTION 40172310>

(:PROPERTY COMPILER:FUN COMPILER:ASSEMBLE):  (P.C. = 45)
   Arg 0 (INST): #<Inst (Fun (INTERNAL MAKE-COUNTING-GENERATOR 0))>

COMPILER:ASSEMBLE-INTERVAL:  (P.C. = 101)
   Arg 0 (INTERVAL): #<INTERVAL 40172052>
   Arg 1 (FUNCTION): #<EXTERNAL-FUNCTION 40172020>

COMPILER:ASSEMBLE-FUNCTION:  (P.C. = 76)
   Arg 0 (FUNCTION): #<EXTERNAL-FUNCTION 40172020>

MAPC:  (P.C. = 37)
   Arg 0 (FCN): #<DTP-COMPILED-FUNCTION COMPILER:ASSEMBLE-FUNCTION 22225714>
   Rest arg (LISTS): (NIL)

COMPILER:RUN-PHASE-4:  (P.C. = 6)
   Arg 0: T

COMPILER:COMPILE-DEFINITION-1:  (P.C. = 50)
   Arg 0 (TYPE): ZL:DEFUN
   Arg 1 (FUNCTION-SPEC): MAKE-COUNTING-GENERATOR
   Arg 2 (LAMBDA-LIST): (FROM TO INCREMENT)
   Arg 3 (DEBUG-INFO): NIL
   Arg 4 (DEFINITION): ((BLOCK MAKE-COUNTING-GENERATOR (FUNCTION (LAMBDA # #))))
   Arg 5 (FIXUP-P): T

COMPILER:COMPILE-DEFINITION:  (P.C. = 122)
   Arg 0 (EXP): (ZL:DEFUN MAKE-COUNTING-GENERATOR (FROM TO INCREMENT) (BLOCK MAKE-COUNTING-GENERATOR (FUNCTION (LAMBDA # #))))
   Arg 1 (FIXUP-P): T
   Arg 2 (DEBUG-INFO): NIL

(:INTERNAL COMPILER:COMPILE-TO-CORE 0 (:DUMP-DEFINITION)):  (P.C. = 5)
   Arg 0 (**DEFSELECT-OP**): :DUMP-DEFINITION
   Arg 1 (EXP): (ZL:DEFUN MAKE-COUNTING-GENERATOR (FROM TO INCREMENT) (BLOCK MAKE-COUNTING-GENERATOR (FUNCTION (LAMBDA # #))))

COMPILER:COMPILE-TO-CORE:  (P.C. = 12)
   Arg 0 (OPERATION): :DUMP-DEFINITION
   Rest arg (SELECT-METHOD-ARGS): ((ZL:DEFUN MAKE-COUNTING-GENERATOR (FROM TO INCREMENT) (BLOCK MAKE-COUNTING-GENERATOR (FUNCTION #))))

COMPILER:COMPILE-FORM-FUNCTION:  (P.C. = 41)
   Arg 0 (FORM): (ZL:DEFUN MAKE-COUNTING-GENERATOR (FROM TO INCREMENT) (BLOCK MAKE-COUNTING-GENERATOR (FUNCTION (LAMBDA # #))))
   Arg 1 (COMPILE-TIME-P): NIL
   Arg 2 (LOAD-TIME-P): T

COMPILER:COMPILE-FROM-STREAM-1:  (P.C. = 330)
   Arg 0: (DEFUN MAKE-COUNTING-GENERATOR (FROM TO INCREMENT) (FUNCTION (LAMBDA (OPERATION &REST ARGS) (CASE OPERATION # # #))))
   --Defaulted args:--
   Arg 1 (COMPILE-TIME-TOO): NIL

COMPILER:PROCESS-FORMS-FROM-STREAM:  (P.C. = 117)
   Arg 0 (INPUT-STREAM): #<INTERVAL-STREAM 40171452>
   Arg 1 (PROCESS-FUNCTION): COMPILER:COMPILE-FROM-STREAM-1
   Arg 2 (FOR-FILE): NIL
   Arg 3 (AREA-FOR-READING): 4

COMPILER:COMPILE-FROM-STREAM:  (P.C. = 237)
   Arg 0 (INPUT-STREAM): #<INTERVAL-STREAM 40171452>
   Arg 1 (GENERIC-PATHNAME): #P"GOLDY:>environment>ire>fft"
   Arg 2: #<DTP-COMPILED-FUNCTION COMPILER:COMPILE-TO-CORE 22236230>
   Arg 3 (ADDITIONAL-BINDINGS): (:SYNTAX :COMMON-LISP :BASE 10 :PACKAGE #<Package USER (really COMMON-LISP-USER) 16452106>)

ZWEI:COMPILE-INTERVAL:  (P.C. = 142)
   Arg 0 (COMPILE-P): T
   Arg 1: NIL
   Arg 2: T
   Arg 3 (BP1): (#"(defun make-counting-generator (from to increment)" 0)
   Arg 4 (BP2): (#"" 0)
   Arg 5 (IN-ORDER-P): T
   Arg 6 (SPECIAL-COMPILER-FUNCTION): NIL
   Arg 7: NIL

ZWEI:COMPILE-PRINT-INTERVAL:  (P.C. = 121)
   Arg 0 (BP1): (#"(defun make-counting-generator (from to increment)" 0)
   Arg 1 (BP2): (#"" 0)
   Arg 2 (IN-ORDER-P): T
   Arg 3 (COMPILE-P): T
   Arg 4 (DEFINITION-NAME): #"Function MAKE-COUNTING-GENERATOR"
   Arg 5 (MODE-NAME): #"Compiling"
   Arg 6 (ECHO-NAME): #"compiled."
   Arg 7 (USE-TYPEOUT): NIL
   Arg 8 (DEFVAR-HACK): T
   Arg 9 (SPECIAL-COMPILER-FUNCTION): NIL

ZWEI:COMPILE-DEFINITION-INTERNAL:  (P.C. = 100)
   Arg 0 (COMPILE-P): T
   Arg 1 (MODE-NAME): #"Compiling"
   Arg 2 (ECHO-NAME): #"compiled."
   --Defaulted args:--
   Arg 3 (USE-TYPEOUT): NIL
   Arg 4 (DEFVAR-HACK): T
   Arg 5 (SPECIAL-COMPILER-FUNCTION): NIL

ZWEI:COM-COMPILE-REGION:  (P.C. = 5)

ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
   Arg 0 (COMMAND): ZWEI:COM-COMPILE-REGION
   Arg 1 (CHAR): 355
   Arg 2 (PREFIX-CHAR): NIL
   Arg 3 (HOOK-LIST): (ZWEI:FONT-LOCK-HOOK)

ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
   Arg 0 (CH): 355

(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 233)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 121171573>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:EDITOR -- 12. IV's, 0. FL's 142346020>
   Arg 2 (OPERATION): :EDIT
   --Defaulted args:--
   Arg 3 (TOP-LEVEL-P): T
   Arg 4 (DESCRIPTION): NIL

(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 60)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 121171573>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:TOP-LEVEL-EDITOR -- 13. IV's, 1. FL's 142345776>
   Arg 2 (.OPERATION.): :EDIT
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 51)

SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
   Arg 0 (IGNORE): NIL
12-Oct-85 20:30:02-EDT,2043;000000000000
Received: from MIT-GOLDILOCKS.ARPA by MIT-OZ via Chaosnet; 12 Oct 85 20:29-EDT
Received: from SMOKEY by GOLDILOCKS via CHAOS with CHAOS-MAIL id 8208; Sat 12-Oct-85 20:31:08-EDT
Date: Sat, 12 Oct 85 20:30 EDT
From: Scott Cyphers <sr.ehpyc%MIT-SPEECH@MIT-REAGAN.ARPA>
Subject: Compiler doesn't work
To: BUG-LISPM@MIT-GOLDILOCKS.ARPA
In-Reply-To: <851012202452.6.CYPHER@SMOKEY.MIT>
Message-ID: <851012203026.7.CYPHER@SMOKEY.MIT>

    Received: from MIT-GOLDILOCKS.ARPA by MIT-OZ via Chaosnet; 12 Oct 85 20:24-EDT
    Received: from SMOKEY by GOLDILOCKS via CHAOS with CHAOS-MAIL id 8207; Sat 12-Oct-85 20:25:34-EDT
    Date: Sat, 12 Oct 85 20:24 EDT
    From: Scott Cyphers <sr.ehpyc%MIT-SPEECH@MIT-REAGAN.ARPA>
    Subject: Compiler doesn't work
    To: BUG-LISPM@MIT-GOLDILOCKS.ARPA
    Message-ID: <851012202452.6.CYPHER@SMOKEY.MIT>

    In Symbolics 3670 Release 6.0, IP-TCP 29.0, Spire-Macros 5.1,
    Attribute 5.6, Compute 5.9, Audio 4.0, Speech-Attributes 4.7,
    Display 6.22, Speech-Layouts 6.4, Prtout 4.2, Versatec 5.1, Spire 16.0,
    ZOO 6.17, ZOO-SPIRE 2.3, microcode TMC5-IO4-FPA-MIC 319, on Lisp Machine Smokey:

    This doesn't compile.

    (defun make-counting-generator (from to increment)
      #'(lambda (operation &rest args)
	  (case operation
	    (:value (apply #'(lambda (&optional (offset 0))
			       (- from (* offset increment)))
			   args))
	    (:next (apply #'(lambda (termination)
			      (incf from increment)
			      (if (> from to)
				  (funcall termination)))
			  args))
	    (otherwise (ferror "Illegal Operation")))))

But, fortunately for me, this one does compile properly:

(defun make-counting-generator (from to increment)
  #'(lambda (operation &rest args)
      (apply
	(case operation
	  (:value #'(lambda (&optional (offset 0))
			   (+ from (* offset increment))))
	  (:next #'(lambda (termination)
			  (incf from increment)
			  (if (> from to)
			      (funcall termination))))
	  (otherwise (ferror "Illegal Operation")))
	args)))
12-Oct-85 21:46:06-EDT,6274;000000000000
Received: from MIT-GOLDILOCKS.ARPA by MIT-OZ via Chaosnet; 12 Oct 85 21:46-EDT
Received: from SMOKEY by GOLDILOCKS via CHAOS with CHAOS-MAIL id 8209; Sat 12-Oct-85 21:47:10-EDT
Date: Sat, 12 Oct 85 21:46 EDT
From: Scott Cyphers <sr.ehpyc%MIT-SPEECH@MIT-REAGAN.ARPA>
Subject: Edit definition doesn't always work
To: BUG-LISPM@MIT-GOLDILOCKS.ARPA
Message-ID: <851012214622.8.CYPHER@SMOKEY.MIT>

In Symbolics 3670 Release 6.0, IP-TCP 29.0, Spire-Macros 5.1,
Attribute 5.6, Compute 5.9, Audio 4.0, Speech-Attributes 4.7,
Display 6.22, Speech-Layouts 6.4, Prtout 4.2, Versatec 5.1, Spire 16.0,
ZOO 6.17, ZOO-SPIRE 2.3, microcode TMC5-IO4-FPA-MIC 319, on Lisp Machine Smokey:

I tried to edit the definition of
(:INTERNAL (:INTERNAL CL-USER::MAKE-ARRAY-ELEMENT-GENERATOR 0) 0)
using C-E in the debugger.  The function does exist and is inside of

(defun make-array-element-generator (array generator edge-value)
  #'(lambda (operation &rest args)
      (apply (case operation
	       (:value #'(lambda (&optional (array-offset 0) &rest args)
			   (let ((index (+ array-offset (apply generator :value args))))
			     (cond ((or (< index 0)
					(> index (length array)))
				    edge-value)
				   (t (aref array index))))))
	       (otherwise #'(lambda (&rest args)
			      (apply generator operation args))))
	     args)))

>>Error: The function spec (:INTERNAL CL-USER::MAKE-ARRAY-ELEMENT-GENERATOR 0) is out of range
While in the function SI:INTERNAL-FUNCTION-SPEC-HANDLER  FDEFINEDP  SI:INTERNAL-FUNCTION-SPEC-HANDLER

SI:INTERNAL-FUNCTION-SPEC-HANDLER:  (P.C. = 167)
   Arg 0 (FUNCTION): FDEFINEDP
   Arg 1 (FUNCTION-SPEC): (:INTERNAL CL-USER::MAKE-ARRAY-ELEMENT-GENERATOR 0)
   --Defaulted args:--
   Arg 2 (ARG1): NIL
   Arg 3 (ARG2): NIL
   Local 4 (PARENT): CL-USER::MAKE-ARRAY-ELEMENT-GENERATOR
   Local 5 (INDEX): 0
   Local 6 (DIRECT-COMPILED): NIL
   Local 7 (COMPILED-FUNCTION): #<DTP-COMPILED-FUNCTION CL-USER::MAKE-ARRAY-ELEMENT-GENERATOR 77061114>
   Local 8 (TABLE): (NIL NIL 1)
   Local 9 (OFFSET): NIL

FDEFINEDP:  (P.C. = 23)
   Arg 0 (FUNCTION-SPEC): (:INTERNAL CL-USER::MAKE-ARRAY-ELEMENT-GENERATOR 0)

SI:INTERNAL-FUNCTION-SPEC-HANDLER:  (P.C. = 107)
   Arg 0 (FUNCTION): FDEFINEDP
   Arg 1 (FUNCTION-SPEC): (:INTERNAL (:INTERNAL CL-USER::MAKE-ARRAY-ELEMENT-GENERATOR 0) 0)
   --Defaulted args:--
   Arg 2 (ARG1): NIL
   Arg 3 (ARG2): NIL

FDEFINEDP:  (P.C. = 23)
   Arg 0 (FUNCTION-SPEC): (:INTERNAL (:INTERNAL CL-USER::MAKE-ARRAY-ELEMENT-GENERATOR 0) 0)

SYS:FUNCTION-PARENT:  (P.C. = 10)
   Arg 0 (FUNCTION-SPEC): (:INTERNAL (:INTERNAL CL-USER::MAKE-ARRAY-ELEMENT-GENERATOR 0) 0)

(:METHOD ZWEI:DEFINITIONS-EDITING-BUFFER :ADD-NODES-FOR-FUNCTION-SPEC):  (P.C. = 16)
   Arg 0 (SELF): #<DEFINITIONS-EDITING-BUFFER "*Definitions-1*" 7140251>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:DEFINITIONS-EDITING-BUFFER -- 4. IV's, 3. FL's 142432013>
   Arg 2 (OPERATION): :ADD-NODES-FOR-FUNCTION-SPEC
   Arg 3 (FUNCTION-SPEC): (:INTERNAL (:INTERNAL CL-USER::MAKE-ARRAY-ELEMENT-GENERATOR 0) 0)
   Arg 4 (ALLOWED-TYPES): NIL

(:METHOD ZWEI:DEFINITIONS-EDITING-BUFFER :REVERT):  (P.C. = 14)
   Arg 0 (SELF): #<DEFINITIONS-EDITING-BUFFER "*Definitions-1*" 7140251>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:DEFINITIONS-EDITING-BUFFER -- 4. IV's, 3. FL's 142432013>
   Arg 2 (OPERATION): :REVERT

(:METHOD ZWEI:DEFINITIONS-EDITING-BUFFER :COMBINED :REVERT):  (P.C. = 17)
   Arg 0 (SELF): #<DEFINITIONS-EDITING-BUFFER "*Definitions-1*" 7140251>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:DEFINITIONS-EDITING-BUFFER -- 4. IV's, 3. FL's 142432013>
   Arg 2 (.OPERATION.): :REVERT
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

(:METHOD ZWEI:ZMACS-EDITOR :FIND-SPECIAL-BUFFER):  (P.C. = 45)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 121171573>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMACS-EDITOR -- 3. IV's, 0. FL's 142345763>
   Arg 2 (OPERATION): :FIND-SPECIAL-BUFFER
   Arg 3 (TYPE): :DEFINITIONS
   Arg 4 (NEW-P): T
   Rest arg (SETS): (:SET-FUNCTION-SPECS ((:INTERNAL (:INTERNAL CL-USER::MAKE-ARRAY-ELEMENT-GENERATOR 0) 0)) :SET-ALLOWED-DEFINITION-TYPES NIL :SET-LOOKALIKES-ALLOWED NIL :SET-EDIT-INSTALLED-DEFINITION-P NIL)

(:METHOD ZWEI:ZMACS-EDITOR :SETUP-FUNCTION-SPECS-TO-EDIT):  (P.C. = 24)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 121171573>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMACS-EDITOR -- 3. IV's, 0. FL's 142345763>
   Arg 2 (OPERATION): :SETUP-FUNCTION-SPECS-TO-EDIT
   Arg 3 (FUNCTION-SPECS): ((:INTERNAL (:INTERNAL CL-USER::MAKE-ARRAY-ELEMENT-GENERATOR 0) 0))
   Arg 4 (ALLOWED-DEFINITION-TYPES): NIL
   --Defaulted args:--
   Arg 5 (START-EDITING): T
   Arg 6 (LOOKALIKES-ALLOWED): NIL
   Arg 7 (EDIT-INSTALLED-DEFINITION-P): NIL

ZWEI:EDIT-DEFINITION:  (P.C. = 32)
   Arg 0 (FSPEC): (:INTERNAL (:INTERNAL CL-USER::MAKE-ARRAY-ELEMENT-GENERATOR 0) 0)
   Arg 1 (ALLOWED-DEFINITION-TYPES): NIL
   Arg 2 (OK-TO-ASK): T

ZWEI:EDIT-THING:  (P.C. = 103)
   Arg 0 (THING): (:INTERNAL (:INTERNAL CL-USER::MAKE-ARRAY-ELEMENT-GENERATOR 0) 0)

(:INTERNAL ZWEI:PROCESS-SPECIAL-COMMAND 7 ((:TYPEOUT-EXECUTE :EXECUTE))):  (P.C. = 5)
   Arg 0 (**DEFSELECT-OP**): :EXECUTE
   Arg 1 (FUNCTION): ZWEI:EDIT-THING
   Rest arg (ARGS): ((:INTERNAL (:INTERNAL CL-USER::MAKE-ARRAY-ELEMENT-GENERATOR 0) 0))

ZWEI:PROCESS-SPECIAL-COMMAND:  (P.C. = 106)
   Arg 0 (OPERATION): :EXECUTE
   Rest arg (SELECT-METHOD-ARGS): (ZWEI:EDIT-THING (:INTERNAL (:INTERNAL CL-USER::MAKE-ARRAY-ELEMENT-GENERATOR 0) 0))

(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 205)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 121171573>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:EDITOR -- 12. IV's, 0. FL's 142346020>
   Arg 2 (OPERATION): :EDIT
   --Defaulted args:--
   Arg 3 (TOP-LEVEL-P): T
   Arg 4 (DESCRIPTION): NIL

(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 60)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 121171573>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:TOP-LEVEL-EDITOR -- 13. IV's, 1. FL's 142345776>
   Arg 2 (.OPERATION.): :EDIT
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 51)

SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
   Arg 0 (IGNORE): NIL

13-Oct-85 16:03:48-EDT,1545;000000000000
Received: from MIT-GOLDILOCKS.ARPA by MIT-OZ via Chaosnet; 13 Oct 85 16:03-EDT
Received: from SCRC-STONY-BROOK.MIT by GOLDILOCKS.MIT via INTERNET with SMTP id 8210; 13 Oct 85 16:03:29-EDT
Received: from WAIKATO.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 332780; Sun 13-Oct-85 16:03:27-EDT
Received: from NEPONSET.SCRC.Symbolics.COM by WAIKATO.SCRC.Symbolics.COM via CHAOS with CHAOS-MAIL id 127574; Sun 13-Oct-85 16:03:47-EDT
Date: Sun, 13 Oct 85 16:03 EDT
From: David C. Plummer <DCP@SCRC-QUABBIN.ARPA>
Subject: Bogus compiler warning
To: Scott Cyphers <sr.ehpyc%MIT-SPEECH@MIT-REAGAN.ARPA>,
    BUG-LISPM@MIT-GOLDILOCKS.ARPA
In-Reply-To: <851012194305.5.CYPHER@SMOKEY.MIT>
Message-ID: <851013160358.5.DCP@NEPONSET.SCRC.Symbolics.COM>

    Date: Sat, 12 Oct 85 19:43 EDT
    From: Scott Cyphers <sr.ehpyc%MIT-SPEECH@MIT-REAGAN.ARPA>

    In Symbolics 3670 Release 6.0, IP-TCP 29.0, Spire-Macros 5.1,
    Attribute 5.6, Compute 5.9, Audio 4.0, Speech-Attributes 4.7,
    Display 6.22, Speech-Layouts 6.4, Prtout 4.2, Versatec 5.1, Spire 16.0,
    ZOO 6.17, ZOO-SPIRE 2.3, microcode TMC5-IO4-FPA-MIC 319, on Lisp Machine Smokey:

    Compiling this function gives the warning that the variable
    .TEST-FUNCTION-CELL. was never used.

    (defun foo (x)
      (block baz
	(flet ((test (n)
		 (if (= n x)
		     (return-from baz 'yes))))
	  (funcall 'bar #'test))))

This compiles without warning in the development system, so it should
likewise compile without error in Release 7.

13-Oct-85 16:06:01-EDT,2188;000000000000
Received: from MIT-GOLDILOCKS.ARPA by MIT-OZ via Chaosnet; 13 Oct 85 16:05-EDT
Received: from SCRC-STONY-BROOK.MIT by GOLDILOCKS.MIT via INTERNET with SMTP id 8212; 13 Oct 85 16:05:41-EDT
Received: from WAIKATO.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 332782; Sun 13-Oct-85 16:05:41-EDT
Received: from NEPONSET.SCRC.Symbolics.COM by WAIKATO.SCRC.Symbolics.COM via CHAOS with CHAOS-MAIL id 127576; Sun 13-Oct-85 16:06:02-EDT
Date: Sun, 13 Oct 85 16:06 EDT
From: David C. Plummer <DCP@SCRC-QUABBIN.ARPA>
Subject: Edit definition doesn't always work
To: Scott Cyphers <sr.ehpyc%MIT-SPEECH@MIT-REAGAN.ARPA>,
    BUG-LISPM@MIT-GOLDILOCKS.ARPA
In-Reply-To: <851012214622.8.CYPHER@SMOKEY.MIT>
Message-ID: <851013160614.7.DCP@NEPONSET.SCRC.Symbolics.COM>

    Date: Sat, 12 Oct 85 21:46 EDT
    From: Scott Cyphers <sr.ehpyc%MIT-SPEECH@MIT-REAGAN.ARPA>

    In Symbolics 3670 Release 6.0, IP-TCP 29.0, Spire-Macros 5.1,
    Attribute 5.6, Compute 5.9, Audio 4.0, Speech-Attributes 4.7,
    Display 6.22, Speech-Layouts 6.4, Prtout 4.2, Versatec 5.1, Spire 16.0,
    ZOO 6.17, ZOO-SPIRE 2.3, microcode TMC5-IO4-FPA-MIC 319, on Lisp Machine Smokey:

    I tried to edit the definition of
    (:INTERNAL (:INTERNAL CL-USER::MAKE-ARRAY-ELEMENT-GENERATOR 0) 0)
    using C-E in the debugger.  The function does exist and is inside of

Various compiler confusions about internal function offsets were fixed
for 6.1.  This is one of them.

    (defun make-array-element-generator (array generator edge-value)
      #'(lambda (operation &rest args)
	  (apply (case operation
		   (:value #'(lambda (&optional (array-offset 0) &rest args)
			       (let ((index (+ array-offset (apply generator :value args))))
				 (cond ((or (< index 0)
					    (> index (length array)))
					edge-value)
				       (t (aref array index))))))
		   (otherwise #'(lambda (&rest args)
				  (apply generator operation args))))
		 args)))

    >>Error: The function spec (:INTERNAL CL-USER::MAKE-ARRAY-ELEMENT-GENERATOR 0) is out of range
    While in the function SI:INTERNAL-FUNCTION-SPEC-HANDLER  FDEFINEDP  SI:INTERNAL-FUNCTION-SPEC-HANDLER

13-Oct-85 16:17:32-EDT,2166;000000000000
Received: from MIT-GOLDILOCKS.ARPA by MIT-OZ via Chaosnet; 13 Oct 85 16:17-EDT
Received: from SCRC-STONY-BROOK.MIT by GOLDILOCKS.MIT via INTERNET with SMTP id 8213; 13 Oct 85 16:17:38-EDT
Received: from WAIKATO.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 332781; Sun 13-Oct-85 16:05:36-EDT
Received: from NEPONSET.SCRC.Symbolics.COM by WAIKATO.SCRC.Symbolics.COM via CHAOS with CHAOS-MAIL id 127575; Sun 13-Oct-85 16:05:56-EDT
Date: Sun, 13 Oct 85 16:06 EDT
From: David C. Plummer <DCP@SCRC-QUABBIN.ARPA>
Subject: Edit definition doesn't always work
To: Scott Cyphers <sr.ehpyc%MIT-SPEECH@MIT-REAGAN.ARPA>,
    BUG-LISPM@MIT-GOLDILOCKS.ARPA
In-Reply-To: <851012214622.8.CYPHER@SMOKEY.MIT>
Message-ID: <851013160609.6.DCP@NEPONSET.SCRC.Symbolics.COM>

    Date: Sat, 12 Oct 85 21:46 EDT
    From: Scott Cyphers <sr.ehpyc%MIT-SPEECH@MIT-REAGAN.ARPA>

    In Symbolics 3670 Release 6.0, IP-TCP 29.0, Spire-Macros 5.1,
    Attribute 5.6, Compute 5.9, Audio 4.0, Speech-Attributes 4.7,
    Display 6.22, Speech-Layouts 6.4, Prtout 4.2, Versatec 5.1, Spire 16.0,
    ZOO 6.17, ZOO-SPIRE 2.3, microcode TMC5-IO4-FPA-MIC 319, on Lisp Machine Smokey:

    I tried to edit the definition of
    (:INTERNAL (:INTERNAL CL-USER::MAKE-ARRAY-ELEMENT-GENERATOR 0) 0)
    using C-E in the debugger.  The function does exist and is inside of

Various compiler confusions about internal function offsets were fixed
for 6.1.

    (defun make-array-element-generator (array generator edge-value)
      #'(lambda (operation &rest args)
	  (apply (case operation
		   (:value #'(lambda (&optional (array-offset 0) &rest args)
			       (let ((index (+ array-offset (apply generator :value args))))
				 (cond ((or (< index 0)
					    (> index (length array)))
					edge-value)
				       (t (aref array index))))))
		   (otherwise #'(lambda (&rest args)
				  (apply generator operation args))))
		 args)))

    >>Error: The function spec (:INTERNAL CL-USER::MAKE-ARRAY-ELEMENT-GENERATOR 0) is out of range
    While in the function SI:INTERNAL-FUNCTION-SPEC-HANDLER  FDEFINEDP  SI:INTERNAL-FUNCTION-SPEC-HANDLER

14-Oct-85 18:59:03-EDT,709;000000000000
Received: from MIT-GOLDILOCKS.ARPA by MIT-OZ via Chaosnet; 14 Oct 85 18:58-EDT
Received: from YOGI by GOLDILOCKS via CHAOS with CHAOS-MAIL id 8224; Mon 14-Oct-85 19:00:24-EDT
Date: Mon, 14 Oct 85 18:59 EDT
From: Scott Cyphers <sr.ehpyc%MIT-SPEECH@MIT-MC.ARPA>
Subject: Is this a bug?
To: BUG-LISPM@MIT-GOLDILOCKS.ARPA
Message-ID: <851014185909.4.CYPHER@YOGI.MIT>

In Symbolics 3670 Release 6.0, IP-TCP 29.0, Spire-Macros 5.1,
Attribute 5.6, Compute 5.9, Audio 4.0, Speech-Attributes 4.7,
Display 6.22, Speech-Layouts 6.4, Prtout 4.2, Versatec 5.1, Spire 16.0,
ZOO 6.17, ZOO-SPIRE 2.3, microcode TMC5-IO4-FPA-MIC 319, on Lisp Machine Yogi:

(* 'a) ==> A
(+ 'a) ==> A

interpreted or compiled.
14-Oct-85 20:15:52-EDT,3364;000000000000
Received: from MIT-HTVAX.ARPA by MIT-OZ via Chaosnet; 14 Oct 85 20:15-EDT
Received: from SCRC-QUABBIN.ARPA (scrc-quabbin.arpa.ARPA) by MIT-HTVAX.ARPA (4.12/4.7) 
	id AA17746; Mon, 14 Oct 85 20:08:14 edt
Received: from PEACE.SCRC.Symbolics.COM by SCRC-QUABBIN.ARPA via CHAOS with CHAOS-MAIL id 210848; Mon 14-Oct-85 20:09:31-EDT
Date: Mon, 14 Oct 85 20:10 EDT
From: Charles Hornig <Hornig@SCRC-STONY-BROOK.ARPA>
Subject: Namespace lossage
To: Chris Lindblad <CJL%OZ@MIT-HTVAX.ARPA>
Cc: BUG-LISPM%OZ@MIT-HTVAX.ARPA, Bug-Tracking-Replies@SCRC-STONY-BROOK.ARPA
In-Reply-To: The message of 24 Jun 85 16:15-EDT from Chris Lindblad <CJL%OZ@MIT-HTVAX.ARPA>
Disposition: COMPLETED
Category: namespace
Message-Id: <851014201014.0.HORNIG@PEACE.SCRC.Symbolics.COM>

Synopsis:  This problem has been fixed in release 6.1.

  -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --

    Date: Mon, 24 Jun 85 16:15 EDT
    From: Chris Lindblad <CJL%OZ@MIT-HTVAX.ARPA>

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.4,
    Experimental NS 23.61, microcode TMC5-MIC 319, FEP 22, on Lisp Machine Elvis Presley:

    Editing the namespace object HOST REAGAN, type s, get this.

    >>Error: No servers are known for namespace MIT.
    While in the function NETI:FIND-NAMESPACE-ACCESS-PATH  NETI:UPDATE-OBJECT-THROUGH-NETWORK  NET:UPDATE-OBJECT-PERMANENTLY

    NETI:FIND-NAMESPACE-ACCESS-PATH:  (P.C. = 350)
       Arg 0 (NAMESPACE): #<NAMESPACE MIT 1400115>
       Rest arg: (:PRIMARY-ONLY T)
       Local 2 (MAP-RESULT): (#<SERVICE-ACCESS-PATH NAMESPACE (NAMESPACE) -- REAGAN on CHAOS 37236241>)
       Local 3 (PRIMARY-ONLY): T
       Local 4 (SERVICES): ((#<LISPM-HOST REAGAN 1400000> #<SERVICE-ACCESS-PATH NAMESPACE (NAMESPACE) -- REAGAN on CHAOS 37236241> #<SERVICE-ACCESS-PATH NAMESPACE-TIMESTAMP (NAMESPACE-TIMESTAMP) -- REAGAN on CHAOS 37236256>))
       Local 5 (ERRORS): NIL

    NETI:UPDATE-OBJECT-THROUGH-NETWORK:  (P.C. = 45)
       Arg 0 (NAMESPACE): #<NAMESPACE MIT 1400115>
       Arg 1 (OBJECT): #<LISPM-HOST REAGAN 1400000>

    NET:UPDATE-OBJECT-PERMANENTLY:  (P.C. = 34)
       Arg 0 (CLASS): :HOST
       Arg 1 (NAMESPACE): #<NAMESPACE MIT 1400115>
       Arg 2 (NAME): #<NAME MIT|REAGAN 1400111>
       Arg 3 (PROPERTY-LIST): (:SYSTEM-TYPE :LISPM :NICKNAME (#<NAME MIT|BONZO 1400071> #<NAME MIT|MIT-REAGAN 1400075>) :SHORT-NAME (#<NAME MIT|B 1400101>) :SITE #<SITE MIT 1400014> :MACHINE-TYPE :|3600| ...)
       Arg 4 (DONT-UPDATE-FILES): NIL

    (:DEFUN-METHOD NETI:PERFORM-COMMAND):  (P.C. = 445)
       Arg 0 (SELF): #<NAMESPACE-EDITOR-FRAME Namespace Editor 1 542045 exposed>
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NETI:NAMESPACE-EDITOR-FRAME -- 15. IV's, 13. FL's 122665776>
       Arg 2 (CH): 115.
       Local 2 (CH): 83.

    (:METHOD NETI:NAMESPACE-EDITOR-FRAME :TOP-LEVEL):  (P.C. = 121)
       Arg 0 (SELF): #<NAMESPACE-EDITOR-FRAME Namespace Editor 1 542045 exposed>
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NETI:NAMESPACE-EDITOR-FRAME -- 15. IV's, 13. FL's 122665776>
       Arg 2 (OPERATION): :TOP-LEVEL

    NETI:START-NAMESPACE-EDITOR:  (P.C. = 4)
       Arg 0 (WINDOW): #<NAMESPACE-EDITOR-FRAME Namespace Editor 1 542045 exposed>

    SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
       --Defaulted args:--
       Arg 0 (IGNORE): NIL

15-Oct-85 09:57:22-EDT,1325;000000000000
Received: from MIT-GOLDILOCKS.ARPA by MIT-OZ via Chaosnet; 15 Oct 85 09:57-EDT
Received: from SCRC-STONY-BROOK.MIT by GOLDILOCKS.MIT via INTERNET with SMTP id 8228; 15 Oct 85 09:57:17-EDT
Received: from THAMES.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 333854; Tue 15-Oct-85 09:50:31-EDT
Date: Tue, 15 Oct 85 09:50 EDT
From: Scott McKay <SWM@SCRC-QUABBIN.ARPA>
Subject: Is this a bug?
To: sr.ehpyc%MIT-SPEECH@MIT-MC.ARPA, BUG-LISPM@MIT-GOLDILOCKS.ARPA
In-Reply-To: <851014185909.4.CYPHER@YOGI.MIT>
Message-ID: <851015095040.5.SWM@THAMES.SCRC.Symbolics.COM>

    Date: Mon, 14 Oct 85 18:59 EDT
    From: Scott Cyphers <sr.ehpyc%MIT-SPEECH@MIT-MC.ARPA>

    In Symbolics 3670 Release 6.0, IP-TCP 29.0, Spire-Macros 5.1,
    Attribute 5.6, Compute 5.9, Audio 4.0, Speech-Attributes 4.7,
    Display 6.22, Speech-Layouts 6.4, Prtout 4.2, Versatec 5.1, Spire 16.0,
    ZOO 6.17, ZOO-SPIRE 2.3, microcode TMC5-IO4-FPA-MIC 319, on Lisp Machine Yogi:

    (* 'a) ==> A
    (+ 'a) ==> A

    interpreted or compiled.

It's a "feature".  * and + used to be "optimized" for the 1 arg case to
just return the arg.  The interpreter now complains, and the compiler
will generate a warning (but the compiled code will obligingly behave
the same buggy way if you choose to run it).

15-Oct-85 19:59:44-EDT,604;000000000000
Received: from MIT-MC.ARPA by MIT-OZ via Chaosnet; 15 Oct 85 19:59-EDT
Received: from CSNET-RELAY.ARPA by MIT-MC.ARPA 15 Oct 85 20:00:56 EDT
Received: from brown by csnet-relay.csnet id ag16139; 15 Oct 85 18:12 EDT
Received:  from  with MMDF via PhoneNet
	  by Brown.CSnet; 14 Oct 85 12:17-EDT
Message-Id: <8510141617.AA06243@mailhost.CS.Brown.CSNet>
Date:     14 Oct 85 (Mon) 12:17:25 EDT
From:     Keiji Kanazawa <kgk%brown.csnet@CSNET-RELAY.ARPA>
To:       bug-lispm@mit-mc.arpa
Subject:  Please put me on your mailing list


Thanks.

Keiji Kanazawa
kgk%Brown.csnet@csnet-relay.arpa

16-Oct-85 11:14:08-EDT,3292;000000000000
Received: from MIT-REAGAN.ARPA by MIT-OZ via Chaosnet; 16 Oct 85 11:13-EDT
Date: Wed, 16 Oct 85 11:14 EDT
From: DPH@REAGAN
Sender: File-Server@REAGAN
Subject: Sources to Dumper
To: BUG-LISPM@OZ
Message-ID: <851016111432.1.FILE-SERVER@REAGAN>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, Mailer 43.0, AISite 9.7,
microcode TMC5-MIC 319, Network-Security patch,
Update-Internet-Namespace patch, Server-Finger patch,
Inquir-update patch, Rodent Free Namespace Editor,
Update-AI-Domain patch, on Lisp Machine Ronald Reagan:

I'd like to prevent certain large data files on our lmfs from being
dumped.  However, we don't seem to have the sources to the dumper, and
I can't fine any sort of "don't dump bit" in the file property list.
Please send either sources or instructions on how to win here.  Even
pinheaded tops-20 lets me do this.

>>Break: 
While in the function PROCESS-WAIT  TV:KBD-IO-BUFFER-INPUT-WAIT  (:METHOD TV:STREAM-MIXIN :INPUT-WAIT)

LMFS:BACKUP-DUMPER:  (P.C. = 413)
   Rest arg (ARGS): (:DUMP-TYPE :INCREMENTAL)
   Local 1: ""
   Local 2 (HOST): NIL
   Local 3 (DEVICE): NIL
   Local 4 (DENSITY): NIL
   Local 5: "File-Server"
   Local 6: T
   Local 7: :OFFLINE
   Local 8: NIL
   Local 9: NIL
   Local 10: "        "
   Local 11: 1.
   Local 12: :INCREMENTAL
   Local 13: (#<LMFS-PATHNAME "B:>**>*.*.*">)
   Local 14: ""
   Local 15: ""
   Local 16: ""
   Local 17: NIL
   Local 18: NIL
   Local 19: 2706707450.
   Local 20: 2707312250.
   Local 21: NIL
   Local 22 (QUERY): NIL

(:METHOD LMFS:FSMAINT-FRAME :EXECUTE):  (P.C. = 201)
   Arg 0 (SELF): #<FSMAINT-FRAME Fsmaint Frame 1 43234143 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor LMFS:FSMAINT-FRAME -- 11. IV's, 13. FL's 142306073>
   Arg 2 (OPERATION): :EXECUTE
   Arg 3 (KEY): :INCREMENTAL-DUMP

(:METHOD LMFS:FSMAINT-FRAME :INTERPRET-INPUT):  (P.C. = 150)
   Arg 0 (SELF): #<FSMAINT-FRAME Fsmaint Frame 1 43234143 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor LMFS:FSMAINT-FRAME -- 11. IV's, 13. FL's 142306073>
   Arg 2 (OPERATION): :INTERPRET-INPUT
   Arg 3 (INPUT): (:MENU ("Incremental Dump" :VALUE :INCREMENTAL-DUMP :DOCUMENTATION "Start an incremental backup dump") 1. #<COMMAND-MENU-PANE Command Menu Pane 4 43234574 exposed>)

LMFS:FSMAINT-READ-FCN:  (P.C. = 72)

(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0.):  (P.C. = 105)
   Arg 0 (.LEXICAL-ENVIRONMENT-POINTER.): #<DTP-LOCATIVE 44140130>

TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
   Arg 0 (NEW-MODE): :BLAST
   Arg 1 (STREAM): #:TERMINAL-IO-SYN-STREAM
   Arg 2 (CONTINUATION): #<LEXICAL-CLOSURE (:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0.) 44140135>

SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
   Arg 0 (NAME): "FS Maintenance Lisp Listener"
   Arg 1 (ABORT-FUNCTION): NIL
   Arg 2 (READ-FUNCTION): LMFS:FSMAINT-READ-FCN
   Arg 3 (EVAL-FUNCTION): NIL
   Arg 4 (PRINT-FUNCTION): NIL

SI:LISP-COMMAND-LOOP:  (P.C. = 67)
   Arg 0: #<FSMAINT-INTERACTION-PANE Fsmaint Interaction Pane 1 43234466 exposed>
   Rest arg: (:NAME "FS Maintenance Lisp Listener" :READ-FUNCTION LMFS:FSMAINT-READ-FCN)

Rest of stack:
(:METHOD LMFS:FSMAINT-FRAME :FSMAINT-TOP-LEVEL):  (P.C. = 72)
LMFS:FSMAINT-TOP-LEVEL:  (P.C. = 6)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
16-Oct-85 13:26:04-EDT,2317;000000000000
Received: from MIT-MC.ARPA by MIT-OZ via Chaosnet; 16 Oct 85 13:25-EDT
Received: from SCRC-STONY-BROOK.ARPA by MIT-MC.ARPA 16 Oct 85 13:21:20 EDT
Received: from CONCORD.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 334970; Wed 16-Oct-85 12:50:42-EDT
Date: Wed, 16 Oct 85 12:55 EDT
From: Bernard S. Greenberg <BSG@SCRC-STONY-BROOK.ARPA>
Subject: Sources to Dumper
To: DPH@MIT-REAGAN.ARPA, BUG-LISPM%OZ@MIT-MC.ARPA
In-Reply-To: <851016111432.1.FILE-SERVER@REAGAN>
Message-ID: <851016125546.8.BSG@CONCORD.SCRC.Symbolics.COM>

    Date: Wed, 16 Oct 85 11:14 EDT
    From: DPH@REAGAN

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, Mailer 43.0, AISite 9.7,
    microcode TMC5-MIC 319, Network-Security patch,
    Update-Internet-Namespace patch, Server-Finger patch,
    Inquir-update patch, Rodent Free Namespace Editor,
    Update-AI-Domain patch, on Lisp Machine Ronald Reagan:

    I'd like to prevent certain large data files on our lmfs from being
    dumped.  However, we don't seem to have the sources to the dumper, and
    I can't fine any sort of "don't dump bit" in the file property list.
    Please send either sources or instructions on how to win here.  Even
    pinheaded tops-20 lets me do this.

    >>Break: 
    While in the function PROCESS-WAIT  TV:KBD-IO-BUFFER-INPUT-WAIT  (:METHOD TV:STREAM-MIXIN :INPUT-WAIT)

Here's the necessary sources.  You can change it to look for a property of your
own putting, or send the car of "file" pathname messages and compare it to anything you want.
If it returns the last line, it gets dumped.  If nil, no dump.

Thank you for your design input to better solutions.
			    
LMFS:
(defun dumper-file-filter (file)
  (let* ((props file)				;a cons is a plist ..
	 (comp-date (get props ':complete-dump-date))
	 (inc-date (get props ':incremental-dump-date)))
    (let ((latest-backup-date (max (or inc-date 0) (or comp-date 0)))
	  (latest-mod-date (max (or (get props ':creation-date) 1)
				(or (get props ':modification-date) 1))))
      (if (selectq
	    *backup-dump-type*
	    (:complete t)
	    (:incremental  (> latest-mod-date latest-backup-date))
	    (:consolidated (> latest-mod-date *backup-dump-consolidation-time*)))
	  (list (car file) comp-date inc-date props)))))

17-Oct-85 11:12:14-EDT,1304;000000000000
Received: from MIT-MC.ARPA by MIT-OZ via Chaosnet; 17 Oct 85 11:12-EDT
Received: from 40700015427 by MIT-MC.ARPA via Chaosnet; 17 OCT 85  11:02:31 EDT
Date: Thursday, 17 October 1985, 11:04-EDT
From: Cory Myers <cory at MIT-BUGS-BUNNY>
Subject: A minor complaint about printing objects
To: BUG-LISPM at OZ
Fcc: BUGS-BUNNY: /u0/cory/mbox
Message-ID: <851017110450.1.CORY@DAFFY-DUCK.MIT>

In Symbolics 3670 Release 6.0, IP-TCP 29.0,
microcode TMC5-IO4-FPA-MIC 319, FEP 22, with UTIL, on Lisp Machine Daffy Duck:

In SI:PRINT-OBJECT there is the following clause in a typecase statement
for printing instances:

((:INSTANCE #+CADR :ENTITY)
	     (IF (MEMQ ':PRINT-SELF (FUNCALL EXP ':WHICH-OPERATIONS))
		 (FUNCALL EXP ':PRINT-SELF STREAM I-PRINDEPTH SLASHIFY-P)
		 (PRINT-RANDOM-OBJECT EXP STREAM NIL I-PRINDEPTH WHICH-OPERATIONS)))

Why is the test (memq :print-self ...) rather than (send exp
:operation-handled-p :print) or (send exp :send-if-handles :print-self
...)?  I have a rather funny flavor which does not mixin
si:vanilla-flavor in which the test :operation-handled-p :print-self (or
:send-if-handles) is easy to handle but the :which-operations message is
hard to do (and has some side effects which I do not want to happen just
to print something).

	-Cory Myers
17-Oct-85 11:58:03-EDT,1927;000000000000
Received: from MIT-REAGAN.ARPA by MIT-OZ via Chaosnet; 17 Oct 85 11:57-EDT
Received: from SCRC-STONY-BROOK by REAGAN via INTERNET with SMTP id 9547; 17 Oct 85 11:56:17-EDT
Received: from NEPONSET.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 335771; Thu 17-Oct-85 11:56:12-EDT
Date: Thu, 17 Oct 85 11:57 EDT
From: David C. Plummer <DCP@SCRC-QUABBIN.ARPA>
Subject: A minor complaint about printing objects
To: Cory Myers <cory@MIT-BUGS-BUNNY.ARPA>, BUG-LISPM@OZ.mit
In-Reply-To: <851017110450.1.CORY@DAFFY-DUCK.MIT>
Message-ID: <851017115739.0.DCP@NEPONSET.SCRC.Symbolics.COM>

    Date: Thursday, 17 October 1985, 11:04-EDT
    From: Cory Myers <cory at MIT-BUGS-BUNNY>

    In Symbolics 3670 Release 6.0, IP-TCP 29.0,
    microcode TMC5-IO4-FPA-MIC 319, FEP 22, with UTIL, on Lisp Machine Daffy Duck:

    In SI:PRINT-OBJECT there is the following clause in a typecase statement
    for printing instances:

    ((:INSTANCE #+CADR :ENTITY)
		 (IF (MEMQ ':PRINT-SELF (FUNCALL EXP ':WHICH-OPERATIONS))
		     (FUNCALL EXP ':PRINT-SELF STREAM I-PRINDEPTH SLASHIFY-P)
		     (PRINT-RANDOM-OBJECT EXP STREAM NIL I-PRINDEPTH WHICH-OPERATIONS)))

    Why is the test (memq :print-self ...) rather than (send exp
    :operation-handled-p :print) or (send exp :send-if-handles :print-self
    ...)?  I have a rather funny flavor which does not mixin
    si:vanilla-flavor in which the test :operation-handled-p :print-self (or
    :send-if-handles) is easy to handle but the :which-operations message is
    hard to do (and has some side effects which I do not want to happen just
    to print something).

	    -Cory Myers

If the :PRINT-SELF method returns NIL, which is very often the case,
then this code would have no way of knowing if something got printed or
not.  You could have your flavor return NIL for which-operations, and
everything would probably work.

17-Oct-85 12:54:03-EDT,907;000000000000
Received: from MIT-MC.ARPA by MIT-OZ via Chaosnet; 17 Oct 85 12:53-EDT
Received: from MIT-OZ by MIT-MC.ARPA via Chaosnet; 17 OCT 85  12:49:00 EDT
Date: Thu 17 Oct 85 12:53:18-EDT
From: "Daniel Huttenlocher" <DPH%MIT-OZ@MIT-MC.ARPA>
Subject: Re: Sources to Dumper
To: BSG@SCRC-STONY-BROOK.ARPA
cc: BUG-LISPM%OZ@MIT-MC.ARPA
In-Reply-To: <851016125546.8.BSG@CONCORD.SCRC.Symbolics.COM>
Message-ID: <12151869585.85.DPH@MIT-OZ>

For posterity's sake, I ended up doing this using dumper-prefilter rather than dumper-file-filter
because it is more general.  It checks for a :DONT-DUMP property of a file, and if it exists then
the dumper (specifically dump-recurse) ignores the file.  This allows directories as well as files
to be given the :DONT-DUMP property.  The semantics is that if a directory has the property then the
directory and its contents (including subdirs) are not dumped.
-------
17-Oct-85 13:49:38-EDT,860;000000000000
Received: from MIT-REAGAN.ARPA by MIT-OZ via Chaosnet; 17 Oct 85 13:49-EDT
Received: from MERLIN by REAGAN via CHAOS with CHAOS-MAIL id 9554; Thu 17-Oct-85 13:48:08-EDT
Date: Thu, 17 Oct 85 13:47 EDT
From: Randy Parker <PARKER@REAGAN>
Subject: Trivial TV bug
To: BUG-LISPM@OZ
Message-ID: <851017134745.3.PARKER@MERLIN>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.7,
microcode TMC5-MIC 319, FEP 18, VisiStep, Rodent Free Namespace Editor,
Logical Pathname Completion patch, on PA Lisp Machine Merlin:

This code needs VALUE as the last arg to FERROR.

;;From sys:window;sheet.lisp.609
tv:
(DEFMETHOD (SHEET :SET-DEEXPOSED-TYPEIN-ACTION) (VALUE)
  (SETF (SHEET-DEEXPOSED-TYPEIN-NOTIFY)
	(SELECTQ VALUE
	  (:NORMAL 0)
	  (:NOTIFY 1)
	  (OTHERWISE
	   (FERROR NIL "~S illegal deexposed-typein-action; use :NORMAL or :NOTIFY"))))) 
17-Oct-85 20:18:03-EDT,1390;000000000000
Received: from MIT-HTVAX.ARPA by MIT-OZ via Chaosnet; 17 Oct 85 20:17-EDT
Received: from SCRC-STONY-BROOK.ARPA (scrc-stony-brook.arpa.ARPA) by MIT-HTVAX.ARPA (4.12/4.7) 
	id AA07202; Thu, 17 Oct 85 20:06:05 edt
Received: from NEPONSET.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 336229; Thu 17-Oct-85 20:07:08-EDT
Date: Thu, 17 Oct 85 20:08 EDT
From: David C. Plummer <DCP@SCRC-QUABBIN.ARPA>
Subject: Trivial TV bug
To: Randy Parker <PARKER%REAGAN@MIT-HTVAX.ARPA>, BUG-LISPM%OZ@MIT-HTVAX.ARPA
In-Reply-To: <851017134745.3.PARKER@MERLIN>
Message-Id: <851017200841.8.DCP@NEPONSET.SCRC.Symbolics.COM>

    Date: Thu, 17 Oct 85 13:47 EDT
    From: Randy Parker <PARKER%REAGAN@MIT-HTVAX.ARPA>

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.7,
    microcode TMC5-MIC 319, FEP 18, VisiStep, Rodent Free Namespace Editor,
    Logical Pathname Completion patch, on PA Lisp Machine Merlin:

    This code needs VALUE as the last arg to FERROR.

    ;;From sys:window;sheet.lisp.609
    tv:
    (DEFMETHOD (SHEET :SET-DEEXPOSED-TYPEIN-ACTION) (VALUE)
      (SETF (SHEET-DEEXPOSED-TYPEIN-NOTIFY)
	    (SELECTQ VALUE
	      (:NORMAL 0)
	      (:NOTIFY 1)
	      (OTHERWISE
	       (FERROR NIL "~S illegal deexposed-typein-action; use :NORMAL or :NOTIFY"))))) 

Fixed in the source (I had it in an editor buffer already).  Thanks.

21-Oct-85 10:33:18-EDT,520;000000000000
Received: from MIT-MC.ARPA by MIT-OZ via Chaosnet; 21 Oct 85 10:33-EDT
Received: from CSNET-RELAY.ARPA by MIT-MC.ARPA 21 Oct 85 10:28:01 EDT
Received: from gmr by csnet-relay.csnet id ae22721; 21 Oct 85 10:20 EDT
Date:     Mon, 21 Oct 85 09:41 EST
From:     "Andrea M. Simon" <simon%gmr.csnet@CSNET-RELAY.ARPA>
To:       bug=lispm@mit-mc.arpa
cc:       BUG-LISPM@mit-mc.arpa
Subject:  new member


Could you please add SIMON.GMR@CSNET-RELAY to the above list

andrea simon
gm research labs
(313) 575-2807
21-Oct-85 12:22:36-EDT,9567;000000000000
Received: from MIT-REAGAN.ARPA by MIT-OZ via Chaosnet; 21 Oct 85 12:22-EDT
Received: from MERLIN by REAGAN via CHAOS with CHAOS-MAIL id 9753; Mon 21-Oct-85 12:20:43-EDT
Date: Mon, 21 Oct 85 12:20 EDT
From: Randy Parker <PARKER@REAGAN>
Subject: si:indenting-stream cursorpos messages
To: BUG-LISPM@OZ
cc: dick@OZ
Message-ID: <851021122003.2.PARKER@MERLIN.MIT.EDU>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.7,
microcode TMC5-MIC 319, FEP 18, Rodent Free Namespace Editor,
Logical Pathname Completion patch, on PA Lisp Machine Merlin:

(setq foo (make-instance 'si:indenting-stream))
#<DTP-INSTANCE 20105034>

(setq file (open "rp:me;tester.file" :out))
#<FILE-OUTPUT-CHARACTER-STREAM "RP: ME; TESTER.FILE.NEWEST" 20105245>

(set-in-instance  foo 'si:stream file)
#<FILE-OUTPUT-CHARACTER-STREAM "RP: ME; TESTER.FILE.NEWEST" 20105245>

(pp:pp si:system-initialization-list foo) then errors (PP is the pretty-printer).

(send foo :operation-handled-p :read-cursorpos)
T
(send file :operation-handled-p :read-cursorpos)
NIL

What is happening is that FOO (the indenting stream) sees if it handles :READ-CURSORPOS, 
which returns T.  It then sends itself :READ-CURSORPOS, which the code below shows it sending
on to FILE, which doesn't handle it.  :SET-CURSORPOS has same bug.

;;; From sys:io;indenting-stream.lisp.7
si:
(defmethod (indenting-stream :read-cursorpos) (&optional (unit :pixel))
  (multiple-value-bind (x y) (send stream ':read-cursorpos unit)
    (values (- x indentation) y)))

>>Error: The object #<FILE-OUTPUT-CHARACTER-STREAM "RP: ME; TESTER.FILE.NEWEST" 20105245> received a :READ-CURSORPOS message, which went unclaimed.
         The rest of the message was (:CHARACTER)
While in the function (:METHOD SI:INDENTING-STREAM :READ-CURSORPOS)  (:METHOD
                                                                       SI:INDENTING-STREAM
                                                                       :SEND-IF-HANDLES)  (:METHOD
                                                                                            PP:PP-STREAM
                                                                                            PP:INITIALIZE)

(:METHOD SI:INDENTING-STREAM :READ-CURSORPOS):  (P.C. = 6)  (from B:>sys>r6>io>indenting-stream)
   Arg 0 (SELF): #<INDENTING-STREAM 20105034>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:INDENTING-STREAM -- 0. IV's, 1. FL's 104710430>
   Arg 2 (OPERATION): :READ-CURSORPOS
   Arg 3 (UNIT): :CHARACTER

(:METHOD SI:INDENTING-STREAM :SEND-IF-HANDLES):  (P.C. = 16)
   Arg 0 (SELF): #<INDENTING-STREAM 20105034>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:INDENTING-STREAM -- 0. IV's, 1. FL's 104710430>
   Arg 2 (OPERATION): :SEND-IF-HANDLES
   Arg 3 (OP): :READ-CURSORPOS
   Rest arg (MSG): (:CHARACTER)

(:METHOD PP:PP-STREAM PP:INITIALIZE):  (P.C. = 55)  (from SYS: LMLIB; PP-6)
   Arg 0 (SELF): #<PP:PRETTY-PRINT-STREAM buffer="">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor PP:PP-STREAM -- 19. IV's, 0. FL's 1207003>
   Arg 2 (OPERATION): PP:INITIALIZE
   Arg 3 (STREAM): #<INDENTING-STREAM 20105034>

PP:GET-PRETTY-PRINT-STREAM:  (P.C. = 35)  (from SYS: LMLIB; PP-6)
   Arg 0 (STREAM): #<INDENTING-STREAM 20105034>

PP:HANDLE-LOGICAL-BLOCK:  (P.C. = 30)  (from SYS: LMLIB; PP-6)
   Arg 0 (DEFAULT-PARENS?): T
   Arg 1 (OBJ): (("Process" (SI:PROCESS-INITIALIZE) T #<LOGICAL-PATHNAME "SYS: SYS2; PROCES">)
                 ("Flush Open Streams"
                  (SETQ FS:ALL-OPEN-STREAMS NIL
                        FS:ALL-OPEN-STREAMS-LAST-UPDATED 0)
                  T #<LOGICAL-PATHNAME "SYS: IO; OPEN">)
                 ("Reset file hosts" (FS:FILE-HOST-RESET) T
                  #<LOGICAL-PATHNAME "SYS: IO; FILE-ACCESS-PATHS">)
                 ("FILE-USER-INIT" (FS:FILE-USER-INIT) T
                  #<LOGICAL-PATHNAME "SYS: IO; FILE-USER-UTIL">)
                 ("NFILE-USER-INIT" (FS:NFILE-USER-INIT) T
                  #<LOGICAL-PATHNAME "SYS: IO; NFILE-USER">)
                 ("QFILE-INIT" (FS:QFILE-INIT) T #<LOGICAL-PATHNAME "SYS: IO; QFILE">)
                 ("Invalidate %BEEP array indices"
                  (SETQ TV:*%BEEP-REP1-INDEX* NIL
                        TV:*%BEEP-REP2-INDEX* NIL)
                  T #<LOGICAL-PATHNAME "SYS: WINDOW; LSCREEN">)
                 ("WINDOW" (TV:WINDOW-INITIALIZE) T #<LOGICAL-PATHNAME "SYS: WINDOW; COMETH">))
   Arg 2 (STREAM): #<INDENTING-STREAM 20105034>
   Arg 3 (PREFIX): NIL
   Arg 4 (ON-EACH-LINE?): NIL
   Arg 5 (SUFFIX): NIL
   Arg 6 (FN): #<DTP-COMPILED-FUNCTION (:INTERNAL PP:FILL 0) 76640777>
   Rest arg (PARAMS): NIL

PP:FILL:  (P.C. = 12)  (from SYS: LMLIB; PP-6)
   Arg 0 (LIST): (("Process" (SI:PROCESS-INITIALIZE) T
                   #<LOGICAL-PATHNAME "SYS: SYS2; PROCES">)
                  ("Flush Open Streams"
                   (SETQ FS:ALL-OPEN-STREAMS NIL
                         FS:ALL-OPEN-STREAMS-LAST-UPDATED 0)
                   T #<LOGICAL-PATHNAME "SYS: IO; OPEN">)
                  ("Reset file hosts" (FS:FILE-HOST-RESET) T
                   #<LOGICAL-PATHNAME "SYS: IO; FILE-ACCESS-PATHS">)
                  ("FILE-USER-INIT" (FS:FILE-USER-INIT) T
                   #<LOGICAL-PATHNAME "SYS: IO; FILE-USER-UTIL">)
                  ("NFILE-USER-INIT" (FS:NFILE-USER-INIT) T
                   #<LOGICAL-PATHNAME "SYS: IO; NFILE-USER">)
                  ("QFILE-INIT" (FS:QFILE-INIT) T #<LOGICAL-PATHNAME "SYS: IO; QFILE">)
                  ("Invalidate %BEEP array indices"
                   (SETQ TV:*%BEEP-REP1-INDEX* NIL
                         TV:*%BEEP-REP2-INDEX* NIL)
                   T #<LOGICAL-PATHNAME "SYS: WINDOW; LSCREEN">)
                  ("WINDOW" (TV:WINDOW-INITIALIZE) T
                   #<LOGICAL-PATHNAME "SYS: WINDOW; COMETH">))
   Arg 1 (S): #<INDENTING-STREAM 20105034>
   Arg 2 (PARENS?): 1

PP:PRINT-LIST:  (P.C. = 34)  (from SYS: LMLIB; PP-6)
   Arg 0 (LIST): (("Process" (SI:PROCESS-INITIALIZE) T
                   #<LOGICAL-PATHNAME "SYS: SYS2; PROCES">)
                  ("Flush Open Streams"
                   (SETQ FS:ALL-OPEN-STREAMS NIL
                         FS:ALL-OPEN-STREAMS-LAST-UPDATED 0)
                   T #<LOGICAL-PATHNAME "SYS: IO; OPEN">)
                  ("Reset file hosts" (FS:FILE-HOST-RESET) T
                   #<LOGICAL-PATHNAME "SYS: IO; FILE-ACCESS-PATHS">)
                  ("FILE-USER-INIT" (FS:FILE-USER-INIT) T
                   #<LOGICAL-PATHNAME "SYS: IO; FILE-USER-UTIL">)
                  ("NFILE-USER-INIT" (FS:NFILE-USER-INIT) T
                   #<LOGICAL-PATHNAME "SYS: IO; NFILE-USER">)
                  ("QFILE-INIT" (FS:QFILE-INIT) T #<LOGICAL-PATHNAME "SYS: IO; QFILE">)
                  ("Invalidate %BEEP array indices"
                   (SETQ TV:*%BEEP-REP1-INDEX* NIL
                         TV:*%BEEP-REP2-INDEX* NIL)
                   T #<LOGICAL-PATHNAME "SYS: WINDOW; LSCREEN">)
                  ("WINDOW" (TV:WINDOW-INITIALIZE) T
                   #<LOGICAL-PATHNAME "SYS: WINDOW; COMETH">))
   Arg 1 (STREAM): #<INDENTING-STREAM 20105034>

PP:PRINT-OBJECT:  (P.C. = 125)  (from SYS: LMLIB; PP-6)
   Arg 0 (OBJ): (("Process" (SI:PROCESS-INITIALIZE) T #<LOGICAL-PATHNAME "SYS: SYS2; PROCES">)
                 ("Flush Open Streams"
                  (SETQ FS:ALL-OPEN-STREAMS NIL
                        FS:ALL-OPEN-STREAMS-LAST-UPDATED 0)
                  T #<LOGICAL-PATHNAME "SYS: IO; OPEN">)
                 ("Reset file hosts" (FS:FILE-HOST-RESET) T
                  #<LOGICAL-PATHNAME "SYS: IO; FILE-ACCESS-PATHS">)
                 ("FILE-USER-INIT" (FS:FILE-USER-INIT) T
                  #<LOGICAL-PATHNAME "SYS: IO; FILE-USER-UTIL">)
                 ("NFILE-USER-INIT" (FS:NFILE-USER-INIT) T
                  #<LOGICAL-PATHNAME "SYS: IO; NFILE-USER">)
                 ("QFILE-INIT" (FS:QFILE-INIT) T #<LOGICAL-PATHNAME "SYS: IO; QFILE">)
                 ("Invalidate %BEEP array indices"
                  (SETQ TV:*%BEEP-REP1-INDEX* NIL
                        TV:*%BEEP-REP2-INDEX* NIL)
                  T #<LOGICAL-PATHNAME "SYS: WINDOW; LSCREEN">)
                 ("WINDOW" (TV:WINDOW-INITIALIZE) T #<LOGICAL-PATHNAME "SYS: WINDOW; COMETH">))
   Arg 1 (PRINDEPTH): 0
   Arg 2: T
   Arg 3 (STREAM): #<INDENTING-STREAM 20105034>
   --Defaulted args:--
   Arg 4 (OPS): NIL

Rest of stack:
PP:DO-PRINT-OBJECT:  (P.C. = 7)  (from SYS: LMLIB; PP-6)
CL:PPRINT:  (from SYS: LMLIB; PP-6)
PP:PP:  (P.C. = 21)  (from SYS: LMLIB; PP-6)
SI:*EVAL:  (P.C. = 403)
ZWEI:COM-EVALUATE-INTO-BUFFER:  (P.C. = 275)
ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 233)
(:METHOD ZWEI:ZMAIL-FRAME :COMBINED :EDIT):  (P.C. = 70)
ZWEI:ZMAIL-MAIL:  (P.C. = 105)
ZWEI:CONTINUE-DRAFT-MSG:  (P.C. = 21)
ZWEI:COMPOSE-VIA-DRAFT-MSG:  (P.C. = 5)
ZWEI:FUNCALL-TEMPLATE-EXPANSION:  (P.C. = 47)
ZWEI:COMPOSE-FROM-TEMPLATE:  (P.C. = 20)
ZWEI:COM-ZMAIL-MAIL:  (P.C. = 11)
ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
ZWEI:ZMAIL-COMMAND-EXECUTE:  (P.C. = 6)
(:INTERNAL ZWEI:ZMAIL-COMMAND-LIST 0 (:MENU)):  (P.C. = 10)
ZWEI:ZMAIL-COMMAND-LIST:  (P.C. = 12)
(:METHOD ZWEI:ZMAIL-FRAME :PROCESS-SPECIAL-COMMAND):  (P.C. = 16)
(:METHOD ZWEI:ZMAIL-FRAME :COMMAND-LOOP):  (P.C. = 136)
(:METHOD ZWEI:ZMAIL-FRAME :COMBINED :COMMAND-LOOP):  (P.C. = 70)
ZWEI:ZMAIL-PROCESS-TOP-LEVEL:  (P.C. = 105)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
21-Oct-85 17:00:22-EDT,2492;000000000000
Received: from MIT-ZERMATT.ARPA by MIT-OZ via Chaosnet; 21 Oct 85 17:00-EDT
Received: from GSTAAD by ZERMATT via CHAOS with CHAOS-MAIL id 14787; Mon 21-Oct-85 16:57:32-EDT
Date: Mon, 21 Oct 85 16:56 EDT
From: Ramesh S. Patil <ramesh@MIT-MC.ARPA>
Subject: Bug in make-simple-stack-array
To: BUG-LISPM@MIT-ZERMATT.ARPA
Message-ID: <851021165647.2.RAMESH@GSTAAD>

In Symbolics 3670 Release 6.0, IP-TCP 29.0, MLSite 7.3,
LIVE-WINDOW 267.24, Experimental GRAPHER 1.0, Experimental NIKL6 2.0,
microcode TMC5-IO4-MIC 319, on Lisp Machine Gstaad:

I encountered this error while running NIKL (New Implementation of KL/ONE) it appears to be a system error.
If it is could you fix it.  If not could you let me know so that I could bug the implementors of the system at ISI - ramesh@mc


>>Trap: The first argument given to the SYS:+-INTERNAL instruction, #<DTP-LOCATIVE 14100001>, was not a number.
While in the function SI:MAKE-GENERAL-STACK-ARRAY  SI:MAKE-SIMPLE-STACK-ARRAY  (:METHOD TV:FANCY-GRAPH-DRAWING-WINDOW :HARDCOPY)

SI:MAKE-GENERAL-STACK-ARRAY:  (P.C. = 551)
   Arg 0 (DIMENSIONS): (832 644)
   Arg 1 (TYPE): ART-1B
   Local 1 (TYPE): 0
   Arg 2 (INITIAL-VALUE): NIL
   Arg 3 (LEADER-LIST): NIL
   Arg 4 (LEADER-LENGTH): NIL
   Arg 5 (FILL-POINTER): NIL
   Arg 6 (NAMED-STRUCTURE-SYMBOL): NIL
   Local 7 (N-DIMS): 2
   Local 8 (N-ELEMS): 535808
   Local 9 (Q-P): NIL
   Local 10 (DISPATCH): 14
   Local 11 (N-HEADER-WORDS): 6
   Local 12 (N-WORDS): 16744
   Local 13 (ARRAY): #<DTP-LOCATIVE 14100001>

SI:MAKE-SIMPLE-STACK-ARRAY:  (P.C. = 13)
   Arg 0 (LENGTH): (832 644)
   Arg 1 (TYPE): ART-1B

(:METHOD TV:FANCY-GRAPH-DRAWING-WINDOW :HARDCOPY):  (P.C. = 105)
   Arg 0 (SELF): #<FANCY-GRAPH-DRAWING-WINDOW Fancy Graph Drawing Window 4 17604142 deexposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:FANCY-GRAPH-DRAWING-WINDOW -- 13. IV's, 19. FL's 40763663>
   Arg 2 (OPERATION): :HARDCOPY
   Arg 3 (DEVICE): #<LGP-PRINTER PRAVDA-LGP 14040671>
   Arg 4 (HOW-MUCH): :WHOLE

(:INTERNAL (:PROPERTY TV:GRAPHER-HARDCOPY-HANDLER :MARGIN-CHOICE-HANDLER) 0):  (P.C. = 6)
   Arg 0 (.LEXICAL-ENVIRONMENT-POINTER.): (#<FANCY-GRAPH-DRAWING-WINDOW Fancy Graph Drawing Window 4 17604142 deexposed> :WHOLE)

SI:PROCESS-RUN-FUNCTION-INTERNAL:  (P.C. = 52)
   Arg 0 (RESTART-ON-RESET): NIL
   Arg 1 (FUNCTION): #<LEXICAL-CLOSURE (:INTERNAL ** 0) 20656765>
   Rest arg (ARGS): NIL

SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
   Arg 0 (IGNORE): NIL
21-Oct-85 23:41:35-EDT,684;000000000000
Received: from MIT-MC.ARPA by MIT-OZ via Chaosnet; 21 Oct 85 23:41-EDT
Date: Mon, 21 Oct 85 23:36:41 EDT
From: David Vinayak Wallace <GUMBY@MIT-MC.ARPA>
Subject:  Bogus header
To: BUG-LISPM@MIT-MC.ARPA
Message-ID: <[MIT-MC.ARPA].687883.851021.GUMBY>

The lispm shouldn't allow you to send a header like this.  Presumably
this is form the LMIT system:

Received: from MIT-OZ by MIT-MC.ARPA via Chaosnet; 21 OCT 85  12:25:44 EDT
Received: from MIT-MC.ARPA by MIT-OZ via Chaosnet; 21 Oct 85 12:29-EDT
Received: from MIT-LISPM-2 by MIT-MC.ARPA via Chaosnet; 21 OCT 85  12:24:10 EDT
Date: Monday, 21 October 1985, 12:24-EDT
From: >markus> <MARKUS@MIT-REAGAN>
To: user-a@oz
22-Oct-85 04:50:53-EDT,2469;000000000000
Received: from MIT-MC.ARPA by MIT-OZ via Chaosnet; 22 Oct 85 04:50-EDT
Received: from MIT-LISPM-23 by MIT-MC.ARPA via Chaosnet; 22 OCT 85  04:46:18 EDT
Date: Tuesday, 22 October 1985, 04:46-EDT
From: Devon S. McCullough <Devon@MIT-MC>
To: BUG-LISPM@MIT-OZ
CC: devon@MIT-MC

In System 99.27, CADR 4.2, Experimental ZMail 54.4, MIT-Specific 23.0,
microcode 320, GC@2, on Lisp Machine Twenty-three:

Meta-. loses, presumably because READ-FUNCTION-NAME is broken.
I typed in "( setq  " and the completing reader correctly
displayed "(:PROPERTY SETQ P2)" but barfed when I hit return.

>>ERROR: Cannot convert ("(:PROPERTY SETQ P2)" :PROPERTY SETQ COMPILER::P2) into a string.
Backtrace from the debugger:

STRING (P.C. = 69)

 Arg 0 (X): ("(:PROPERTY SETQ P2)" :PROPERTY SETQ COMPILER::P2)


STRING-SEARCH-NOT-SET (P.C. = 57)

 Arg 0 (CHAR-SET): " ABCDEFGHIJKLMNOPQRSTUVWXYZ-"
 Arg 1 (STRING): ("(:PROPERTY SETQ P2)" :PROPERTY SETQ COMPILER::P2)
   --Defaulted args:--
 Arg 2 (FROM): 0
 Arg 3 (TO): NIL
 Arg 4 (CONSIDER-CASE): NIL
Local 0 (I): NIL
Local 1 (FUN): NIL


Additional information supplied with call:
 Expecting 3 values

READ-FUNCTION-NAME (P.C. = 198)

 Arg 0 (PROMPT): "Edit definition (Default: COMPLETING-READ-FROM-MINI-BUFFER)"
 Arg 1 (DEFAULT): COMPLETING-READ-FROM-MINI-BUFFER
 Arg 2 (MUST-BE-DEFINED): AARRAY-OK
   --Defaulted args:--
 Arg 3 (STRINGP): NIL
Local 0 (EXPLICIT-PACKAGE-P): NIL
Local 1 (NAME): ("(:PROPERTY SETQ P2)" :PROPERTY SETQ COMPILER::P2)
Local 2 (SYM): NIL
Local 3 (ERRORP): NIL
Local 4 (NON-LETTER-INDEX): NIL
Local 5: NIL
Local 6 (SPEC): NIL


COM-EDIT-DEFINITION (P.C. = 61)

Local 0 (SPEC): NIL
Local 1 (EXPLICIT-PACKAGE-P): NIL
Local 2 (THIS-PKG-SYMBOL): NIL
Local 3 (FOUNDP): NIL


Additional information supplied with call:
 Expecting 3 values

COMMAND-EXECUTE (P.C. = 92)

 Arg 0 (COMMAND): COM-EDIT-DEFINITION
 Arg 1 (CHAR): #/m-/.
 Arg 2 (PREFIX-CHAR): NIL
 Arg 3 (HOOK-LIST): NIL
Local 0 (HOOK-SUCCESS): T
Local 1: NIL
Local 2 (HOOK): NIL


Remainder of stack:

PROCESS-COMMAND-CHAR (P.C. = 61)
(:METHOD WINDOW :PROCESS-COMMAND-CHAR) (P.C. = 20)
(:METHOD WINDOW :EDIT) (P.C. = 307)
(:INTERNAL (:METHOD ZMACS-WINDOW :COMBINED :EDIT) 0) (P.C. = 60)
FUNCALL (P.C. = 21)
(:METHOD DISPLAYER :AROUND :EDIT) (P.C. = 25)
(:METHOD ZMACS-WINDOW :COMBINED :EDIT) (P.C. = 39)
ZMACS-WINDOW-TOP-LEVEL (P.C. = 38)
SI::PROCESS-TOP-LEVEL (P.C. = 115)
22-Oct-85 11:27:30-EDT,3073;000000000000
Received: from MIT-ZERMATT.ARPA by MIT-OZ via Chaosnet; 22 Oct 85 11:27-EDT
Received: from SCRC-STONY-BROOK.MIT.EDU by ZERMATT.MIT.EDU via INTERNET with SMTP id 14819; 22 Oct 85 11:24:35-EDT
Received: from NEPONSET.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 338583; Tue 22-Oct-85 11:24:45-EDT
Date: Tue, 22 Oct 85 11:27 EDT
From: David C. Plummer <DCP@SCRC-QUABBIN.ARPA>
Subject: Bug in make-simple-stack-array
To: Ramesh S. Patil <ramesh@MIT-MC.ARPA>, BUG-LISPM@MIT-ZERMATT.ARPA
In-Reply-To: <851021165647.2.RAMESH@GSTAAD>
Message-ID: <851022112732.1.DCP@NEPONSET.SCRC.Symbolics.COM>

    Date: Mon, 21 Oct 85 16:56 EDT
    From: Ramesh S. Patil <ramesh@MIT-MC.ARPA>

    In Symbolics 3670 Release 6.0, IP-TCP 29.0, MLSite 7.3,
    LIVE-WINDOW 267.24, Experimental GRAPHER 1.0, Experimental NIKL6 2.0,
    microcode TMC5-IO4-MIC 319, on Lisp Machine Gstaad:

    I encountered this error while running NIKL (New Implementation of
    KL/ONE) it appears to be a system error.  If it is could you fix it.
    If not could you let me know so that I could bug the implementors of
    the system at ISI - ramesh@mc

This and a few other stack array bugs have been fixed for 6.1.

    >>Trap: The first argument given to the SYS:+-INTERNAL instruction, #<DTP-LOCATIVE 14100001>, was not a number.
    While in the function SI:MAKE-GENERAL-STACK-ARRAY  SI:MAKE-SIMPLE-STACK-ARRAY  (:METHOD TV:FANCY-GRAPH-DRAWING-WINDOW :HARDCOPY)

    SI:MAKE-GENERAL-STACK-ARRAY:  (P.C. = 551)
       Arg 0 (DIMENSIONS): (832 644)
       Arg 1 (TYPE): ART-1B
       Local 1 (TYPE): 0
       Arg 2 (INITIAL-VALUE): NIL
       Arg 3 (LEADER-LIST): NIL
       Arg 4 (LEADER-LENGTH): NIL
       Arg 5 (FILL-POINTER): NIL
       Arg 6 (NAMED-STRUCTURE-SYMBOL): NIL
       Local 7 (N-DIMS): 2
       Local 8 (N-ELEMS): 535808
       Local 9 (Q-P): NIL
       Local 10 (DISPATCH): 14
       Local 11 (N-HEADER-WORDS): 6
       Local 12 (N-WORDS): 16744
       Local 13 (ARRAY): #<DTP-LOCATIVE 14100001>

    SI:MAKE-SIMPLE-STACK-ARRAY:  (P.C. = 13)
       Arg 0 (LENGTH): (832 644)
       Arg 1 (TYPE): ART-1B

    (:METHOD TV:FANCY-GRAPH-DRAWING-WINDOW :HARDCOPY):  (P.C. = 105)
       Arg 0 (SELF): #<FANCY-GRAPH-DRAWING-WINDOW Fancy Graph Drawing Window 4 17604142 deexposed>
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:FANCY-GRAPH-DRAWING-WINDOW -- 13. IV's, 19. FL's 40763663>
       Arg 2 (OPERATION): :HARDCOPY
       Arg 3 (DEVICE): #<LGP-PRINTER PRAVDA-LGP 14040671>
       Arg 4 (HOW-MUCH): :WHOLE

    (:INTERNAL (:PROPERTY TV:GRAPHER-HARDCOPY-HANDLER :MARGIN-CHOICE-HANDLER) 0):  (P.C. = 6)
       Arg 0 (.LEXICAL-ENVIRONMENT-POINTER.): (#<FANCY-GRAPH-DRAWING-WINDOW Fancy Graph Drawing Window 4 17604142 deexposed> :WHOLE)

    SI:PROCESS-RUN-FUNCTION-INTERNAL:  (P.C. = 52)
       Arg 0 (RESTART-ON-RESET): NIL
       Arg 1 (FUNCTION): #<LEXICAL-CLOSURE (:INTERNAL ** 0) 20656765>
       Rest arg (ARGS): NIL

    SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
       Arg 0 (IGNORE): NIL


22-Oct-85 14:11:33-EDT,1881;000000000000
Received: from MIT-MC.ARPA by MIT-OZ via Chaosnet; 22 Oct 85 14:04-EDT
Received: from SCRC-STONY-BROOK.ARPA by MIT-MC.ARPA 22 Oct 85 13:57:37 EDT
Received: from JUBJUB.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 338750; Tue 22-Oct-85 13:58:36-EDT
Date: Tue, 22 Oct 85 13:59 EDT
From: Christopher Garrigues <7thSon@SCRC-STONY-BROOK.ARPA>
Subject: new member
To: simon%gmr.csnet@CSNET-RELAY.ARPA
cc: BUG-LISPM@MIT-MC.ARPA, hoss@SCRC-STONY-BROOK.ARPA
In-Reply-To: The message of 21 Oct 85 10:41-EDT from Andrea M. Simon <simon%gmr.csnet@CSNET-RELAY.ARPA>
Message-ID: <851022135948.7.7THSON@JUBJUB.SCRC.Symbolics.COM>

    Date:     Mon, 21 Oct 85 09:41 EST
    From:     "Andrea M. Simon" <simon%gmr.csnet@CSNET-RELAY.ARPA>


    Could you please add SIMON.GMR@CSNET-RELAY to the above list

    andrea simon
    gm research labs
    (313) 575-2807


The BUG-LISPM at MC is not intended for non-MIT users.  It's where MIT
users send their bug-reports and is occupied by select MIT people who
are responsible for maintaining the Symbolics lisp machines at MIT with
a redistribution to Symbolics.  Essentially, it's a write-only list for
MIT people and we try to discourage non-MIT people from using it.  As a
non-MIT lispm user, you should send any reports to
HOSS@SCRC-STONY-BROOK.  HOSS is the Home Office Software Support group
at Symbolics and although primarily intended for use by customers with
support contracts, we will always be willing to get reports from others
although the paying support customers will get a higher priority in
replies.

Chris Garrigues,  Symbolics Home Office Software Support


P.S.  BUG-LISPM@MC wouldn't be all that interesting anyway.  You'd see
stack traces of obscure errors and not all that much else.  Are you on
the SLUG mailing list out of UTEXAS?  It's more interesting.

23-Oct-85 04:14:41-EDT,1350;000000000000
Received: from MIT-MC.ARPA by MIT-OZ via Chaosnet; 23 Oct 85 04:14-EDT
Date: Wed, 23 Oct 85 04:10:02 EDT
From: David Vinayak Wallace <GUMBY@MIT-MC.ARPA>
Subject:  new member
To: 7thSon@SCRC-STONY-BROOK.ARPA
cc: BUG-LISPM@MIT-MC.ARPA, GUMBY@MIT-MC.ARPA,
    hoss@SCRC-STONY-BROOK.ARPA
In-reply-to: Msg of Tue 22 Oct 85 13:59 EDT from Christopher Garrigues <7thSon at SCRC-STONY-BROOK.ARPA>
Message-ID: <[MIT-MC.ARPA].689631.851023.GUMBY>

    Date: Tue, 22 Oct 85 13:59 EDT
    From: Christopher Garrigues <7thSon at SCRC-STONY-BROOK.ARPA>

    The BUG-LISPM at MC is not intended for non-MIT users.  It's where MIT
    users send their bug-reports and is occupied by select MIT people who
    are responsible for maintaining the Symbolics lisp machines at MIT with
    a redistribution to Symbolics.  Essentially, it's a write-only list for
    MIT people and we try to discourage non-MIT people from using it.

Wait a second.  I report any bugs with Lisp Machines to bug-lispm.  I
was under the impression that there were Lisp Machines at MIT which
weren't built by Symbolics.

I also don't understand this write-only business.  I read it, despite
not being one of the "select."  Lots of people here read it -- would
you prefer that I report every bug I encounter rather than only the
ones I haven't seen reported before?
23-Oct-85 10:49:46-EDT,591;000000000000
Received: from MIT-JANIS by MIT-OZ via Chaosnet; 23 Oct 85 10:49-EDT
Date: Wed, 23 Oct 85 10:47 EDT
From: James V. Mahoney <M@OZ>
Subject: Namespace problem makes Lisp Machine Hurewicz unusable
To: BUG-LISPM@OZ
Message-ID: <851023104732.1.M@JANIS.AI.MIT.EDU>

An error occurs when booting Lisp Machine Hurewicz, apparently when
running function (neti:initialize-namespaces-and-network).  Something
about LGP Pravda and the AI namespace and not knowing what its namespace
server is.  Typing in Reagan and its Chaos address doesn't help--the
machine is unusable.

Harry Voorhees
23-Oct-85 11:28:36-EDT,988;000000000000
Mail-From: CJL created at 23-Oct-85 11:28:01
Date: Wed, 23 Oct 1985  11:28 EDT
Message-ID: <CJL.12153426921.BABYL@MIT-OZ>
From: Chris Lindblad <CJL@MIT-OZ>
To:   "James V. Mahoney" <M@MIT-OZ>
Cc:   BUG-LISPM@MIT-OZ
Subject: Namespace problem makes Lisp Machine Hurewicz unusable
In-reply-to: Msg of 23 Oct 1985  10:47-EDT from James V. Mahoney <M at OZ>

    Date: Wednesday, 23 October 1985  10:47-EDT
    From: James V. Mahoney <M at OZ>

    An error occurs when booting Lisp Machine Hurewicz, apparently when
    running function (neti:initialize-namespaces-and-network).  Something
    about LGP Pravda and the AI namespace and not knowing what its namespace
    server is.  Typing in Reagan and its Chaos address doesn't help--the
    machine is unusable.

Hurewicz needs a new world load: the same world load that every other AI
lab machine (thats not locked up) is running. Since you keep the machine
in a locked room you have to put the band on it yourself.
23-Oct-85 20:26:11-EDT,3524;000000000000
Received: from MIT-TWEETY-PIE.ARPA by MIT-OZ via Chaosnet; 23 Oct 85 20:26-EDT
Date: Wednesday, 23 October 1985, 20:23-EDT
From: Webster Dove <dove at MIT-BUGS-BUNNY>
Subject: dump-forms-to-file broken?
To: BUG-LISPM at OZ
Message-ID: <851023202355.1.DOVE@TWEETY-PIE.MIT.EDU>

In Symbolics 3600 Release 6.0, IP-TCP 29.0,
microcode TMC5-IO4-FPA-MIC 319, with UTIL, on Lisp Machine Tweety Pie:

I tried to evaluate the following form:

(sys:dump-forms-to-file "tweety:>eem>junk"
	(list `(setq junk ',junk)))

where junk is a very simple flavor instance, generated by:

(defflavor junk (x y z) () :initable-instance-variables)
(setq junk (make-instance 'junk :x 1 :y 2 :z 3))

The error I get is the following:

>>Error: The object #<JUNK 172645327> received a :FASD-FORM message, which went unclaimed.
         The rest of the message was ()
While in the function SI:DUMP-INSTANCE  SI:DUMP-INSTANCE  SI:DUMP-OBJECT

SI:DUMP-INSTANCE:  (P.C. = 11)
   Arg 0 (INSTANCE): #<JUNK 172645327>
   Arg 1 (STREAM): #<LMFS-BINARY-OUTPUT-OPENING "TWEETY-PIE:>eem>junk.bin" 173077346>
   Local 2 (INDEX): 9

SI:DUMP-INSTANCE:  (encapsulated for TRACE)
   Rest arg (ARGLIST): (#<JUNK 172645327> #<LMFS-BINARY-OUTPUT-OPENING "TWEETY-PIE:>eem>junk.bin" 173077346>)

SI:DUMP-OBJECT:  (P.C. = 202)
   Arg 0 (OBJECT): #<JUNK 172645327>
   Arg 1 (STREAM): #<LMFS-BINARY-OUTPUT-OPENING "TWEETY-PIE:>eem>junk.bin" 173077346>

SI:DUMP-OBJECT:  (encapsulated for TRACE)
   Rest arg (ARGLIST): (#<JUNK 172645327> #<LMFS-BINARY-OUTPUT-OPENING "TWEETY-PIE:>eem>junk.bin" 173077346>)

SI:DUMP-FORM-TO-EVAL:  (P.C. = 41)
   Arg 0 (FORM): (QUOTE #<JUNK 172645327>)
   Arg 1 (STREAM): #<LMFS-BINARY-OUTPUT-OPENING "TWEETY-PIE:>eem>junk.bin" 173077346>

SI:DUMP-FORM-TO-EVAL:  (encapsulated for TRACE)
   Rest arg (ARGLIST): ((QUOTE #<JUNK 172645327>) #<LMFS-BINARY-OUTPUT-OPENING "TWEETY-PIE:>eem>junk.bin" 173077346>)

SI:DUMP-FORM-TO-EVAL:  (P.C. = 243)
   Arg 0 (FORM): (SETQ JUNK (QUOTE #<JUNK 172645327>))
   Arg 1 (STREAM): #<LMFS-BINARY-OUTPUT-OPENING "TWEETY-PIE:>eem>junk.bin" 173077346>

SI:DUMP-FORM-TO-EVAL:  (encapsulated for TRACE)
   Rest arg (ARGLIST): ((SETQ JUNK (QUOTE #<JUNK 172645327>)) #<LMFS-BINARY-OUTPUT-OPENING "TWEETY-PIE:>eem>junk.bin" 173077346>)

Rest of stack:
SYS:DUMP-FORMS-TO-FILE:  (P.C. = 61)
SYS:DUMP-FORMS-TO-FILE:
SI:*EVAL:  (P.C. = 403)
(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0):  (P.C. = 152)
TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
SI:BREAK-INTERNAL:  (P.C. = 176)
SYS:KBD-INTERCEPT-CHARACTER:  (P.C. = 53)
(:DEFUN-METHOD SI:STANDARD-INPUT-EDITOR-TYI):  (P.C. = 361)
SI:STANDARD-INPUT-EDITOR-TYI:  (P.C. = 12)
SI:INPUT-EDITOR-INVOKE:  (P.C. = 11)
(:METHOD SI:INTERACTIVE-STREAM :WHOPPER :ANY-TYI):  (P.C. = 67)
(:METHOD TV:WINDOW :COMBINED :ANY-TYI):  (P.C. = 13)
SAGE:TYI-CLOSING-OPEN-STREAMS-AT-TIMEOUT:  (P.C. = 11)
(:INTERNAL (:METHOD SAGE:DEX :READ-COMPLETED-STRING) 0):  (P.C. = 3)
(:DEFUN-METHOD SI:INPUT-EDITOR-READ):  (P.C. = 53)
(:METHOD SI:INTERACTIVE-STREAM :INPUT-EDITOR):  (P.C. = 131)
SI:WITH-INPUT-EDITING-INTERNAL:  (P.C. = 113)
(:METHOD SAGE:DEX :READ-COMPLETED-STRING):  (P.C. = 276)
(:METHOD SAGE:DEX :READ-COMMAND):  (P.C. = 25)
(:INTERNAL (:METHOD SAGE:DEX :COMMAND-LOOP) 0 SAGE:DOIT):  (P.C. = 4)
(:METHOD SAGE:DEX :COMMAND-LOOP):  (P.C. = 55)
(:METHOD SAGE:DEX :TOPLEVEL):  (P.C. = 255)
SAGE:DEX-TOPLEVEL:  (P.C. = 4)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
23-Oct-85 20:41:37-EDT,2523;000000000000
Received: from MIT-MC.ARPA by MIT-OZ via Chaosnet; 23 Oct 85 20:41-EDT
Received: from SCRC-STONY-BROOK.ARPA by MIT-MC.ARPA 23 Oct 85 20:30:29 EDT
Received: from WAIKATO.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 339333; Wed 23-Oct-85 09:58:10-EDT
Received: from JUBJUB.SCRC.Symbolics.COM by WAIKATO.SCRC.Symbolics.COM via CHAOS with CHAOS-MAIL id 130267; Wed 23-Oct-85 10:01:40-EDT
Date: Wed, 23 Oct 85 09:59 EDT
From: Christopher Garrigues <7thSon@SCRC-STONY-BROOK.ARPA>
Subject: new member
To: GUMBY@MIT-MC.ARPA
cc: 7thSon@SCRC-STONY-BROOK.ARPA, BUG-LISPM@MIT-MC.ARPA,
    hoss@SCRC-STONY-BROOK.ARPA, 7thSon@SCRC-STONY-BROOK.ARPA
In-Reply-To: <[MIT-MC.ARPA].689631.851023.GUMBY>
Supersedes: <851023095426.4.7THSON@JUBJUB.SCRC.Symbolics.COM>
Message-ID: <851023095958.5.7THSON@JUBJUB.SCRC.Symbolics.COM>

    Date: Wed, 23 Oct 85 04:10:02 EDT
    From: David Vinayak Wallace <GUMBY@MIT-MC.ARPA>

	Date: Tue, 22 Oct 85 13:59 EDT
	From: Christopher Garrigues <7thSon at SCRC-STONY-BROOK.ARPA>

	The BUG-LISPM at MC is not intended for non-MIT users.  It's where MIT
	users send their bug-reports and is occupied by select MIT people who
	are responsible for maintaining the Symbolics lisp machines at MIT with
	a redistribution to Symbolics.  Essentially, it's a write-only list for
	MIT people and we try to discourage non-MIT people from using it.

    Wait a second.  I report any bugs with Lisp Machines to bug-lispm.

You are at MIT.  You're expected to report bugs via BUG-LISPM.

    I
    was under the impression that there were Lisp Machines at MIT which
    weren't built by Symbolics.

    I also don't understand this write-only business.  I read it, despite
    not being one of the "select."  

That's a matter of perspective.  As an MIT person, you are one of the
"select" from the point of view of someone who isn't at MIT.

    Lots of people here read it -- would
    you prefer that I report every bug I encounter rather than only the
    ones I haven't seen reported before?

The intent of the original message was simply to try to hold back the
tide of non-MIT people from using BUG-LISPM@MC.  To be honest, I don't
know exactly who reads the list, nor does it matter.  What does matter
is that MLY has been flooded with requests from outside people to be
added to what is supposed to be a MIT internal list and has asked us to
help him hold back this tide.


Chris Garrigues, Symbolics Home Office Software Support.

24-Oct-85 08:37:54-EDT,2182;000000000000
Received: from MIT-HTVAX.ARPA by MIT-OZ via Chaosnet; 24 Oct 85 08:37-EDT
Received: from SCRC-STONY-BROOK.ARPA (scrc-stony-brook.arpa.ARPA) by MIT-HTVAX.ARPA (4.12/4.7) 
	id AA20956; Thu, 24 Oct 85 08:33:45 edt
Received: from CONCORD.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 340128; Thu 24-Oct-85 08:22:56-EDT
Date: Thu, 24 Oct 85 08:29 EDT
From: Bernard S. Greenberg <BSG@SCRC-STONY-BROOK.ARPA>
Subject: dump-forms-to-file broken?
To: dove%MIT-BUGS-BUNNY@MIT-HTVAX.ARPA, BUG-LISPM%OZ@MIT-HTVAX.ARPA
In-Reply-To: <851023202355.1.DOVE@TWEETY-PIE.MIT.EDU>
Message-Id: <851024082945.2.BSG@CONCORD.SCRC.Symbolics.COM>

    Date: Wednesday, 23 October 1985, 20:23-EDT
    From: Webster Dove <dove%MIT-BUGS-BUNNY@MIT-HTVAX.ARPA>

    In Symbolics 3600 Release 6.0, IP-TCP 29.0,
    microcode TMC5-IO4-FPA-MIC 319, with UTIL, on Lisp Machine Tweety Pie:
My previous reply seems to have gotten lost, because I sent it from Unix.
I tried to evaluate the following form:

(sys:dump-forms-to-file "tweety:>eem>junk"
	    (list `(setq junk ',junk)))

    where junk is a very simple flavor instance, generated by:

    (defflavor junk (x y z) () :initable-instance-variables)
    (setq junk (make-instance 'junk :x 1 :y 2 :z 3))

    The error I get is the following:

    >>Error: The object #<JUNK 172645327> received a :FASD-FORM message, which went unclaimed.
	     The rest of the message was ()
    While in the function SI:DUMP-INSTANCE  SI:DUMP-INSTANCE  SI:DUMP-OBJECT
This is exactly the purpose of the :FASD-FORM message.  The system does
not believe that it knows how to dump instances in general.  It is thought
that most uses of instances contain references to other objects or their
environment, or are contained in data structures in their environment,
that would make "image" dumping meaningless, infinite, or both.

When the system attempts to dump an instance, it sends it :FASD-FORM.
The instance is expected to return a FORM, in your case
    `(make-instance ,junk :x ',x :y ',y :z ',z)
that will reconstruct the instance at load time, hooking it in however
it needs be hooked to its environs.

24-Oct-85 09:17:49-EDT,2396;000000000000
Received: from MIT-HTVAX.ARPA by MIT-OZ via Chaosnet; 24 Oct 85 09:17-EDT
Received: from SCRC-STONY-BROOK.ARPA (scrc-stony-brook.arpa.ARPA) by MIT-HTVAX.ARPA (4.12/4.7) 
	id AA21077; Thu, 24 Oct 85 09:08:55 edt
Received: from WARE.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 340189; Thu 24-Oct-85 09:08:58-EDT
Date: Thu, 24 Oct 85 09:12 EDT
From: David Schatsky <schatsky@WAIKATO.SCRC.Symbolics.COM>
Subject: dump-forms-to-file broken?
To: dove%MIT-BUGS-BUNNY@MIT-HTVAX.ARPA, BUG-LISPM%OZ@MIT-HTVAX.ARPA
Fcc: WAIKATO:>schatsky>outgoing-mail.text
In-Reply-To: <851023202355.1.DOVE@TWEETY-PIE.MIT.EDU>
Message-Id: <851024091244.4.SCHATSKY@WARE.SCRC.Symbolics.COM>

    Date: Wednesday, 23 October 1985, 20:23-EDT
    From: Webster Dove <dove%MIT-BUGS-BUNNY@MIT-HTVAX.ARPA>

    In Symbolics 3600 Release 6.0, IP-TCP 29.0,
    microcode TMC5-IO4-FPA-MIC 319, with UTIL, on Lisp Machine Tweety Pie:

    I tried to evaluate the following form:

    (sys:dump-forms-to-file "tweety:>eem>junk"
	    (list `(setq junk ',junk)))

    where junk is a very simple flavor instance, generated by:

    (defflavor junk (x y z) () :initable-instance-variables)
    (setq junk (make-instance 'junk :x 1 :y 2 :z 3))

    The error I get is the following:

    >>Error: The object #<JUNK 172645327> received a :FASD-FORM message, which went unclaimed.
	     The rest of the message was ()
    While in the function SI:DUMP-INSTANCE  SI:DUMP-INSTANCE  SI:DUMP-OBJECT

The dumper knows how to dump some things, like arrays and list
structure, and does so without your help.  But it doesn't know how to
dump instances of flavors you dream up.  When faced with an instance of
an unknown flavor, the dumper resorts to sending the instance the
:FASD-FORM message.  You have the responsibility of defining a
:FASD-FORM method that will return a form which, when evaluated, will
create an "equivalent" instance.  The returned form is what is dumped,
and is evaluated at the time the file is loaded.

An example of a suitable :FASD-FORM method in your case follows:

(defmethod (junk :fasd-form) ()
   `(make-instance 'junk :x ',x :y ',y :z ',z))

Thanks for the report; the documentation for sys:dump-forms-to-file
doesn't explain this at all.  I'll pass this on to our documentation
group.

David Schatsky
Symbolics Software Support

24-Oct-85 10:01:17-EDT,465;000000000000
Received: from MIT-BUGS-BUNNY.ARPA by MIT-OZ via Chaosnet; 24 Oct 85 09:58-EDT
Received: by MIT-BUGS-BUNNY.ARPA (4.12/4.8)
	id AA11634; Thu, 24 Oct 85 09:55:23 edt
Date: Thu, 24 Oct 85 09:55:23 edt
From: Web Dove <dove@mit-bugs-bunny>
To: bug-lispm@oz
Subject: dump-to-file broken msg wasn't mine

The msg was sent by eem@mit-bugs-bunny from a machine I was logged into.
I am aware of the fasd-form issue, so send replies to his message to
him.  THanks.
24-Oct-85 13:07:27-EDT,2484;000000000000
Received: from MIT-AI.ARPA by MIT-OZ via Chaosnet; 24 Oct 85 13:07-EDT
Date: Thu, 24 Oct 85 13:06:25 EDT
From: Ken Haase <KWH%MIT-AI.ARPA@MIT-MC.ARPA>
Subject:  dump-forms-to-file broken?
To: BSG@SCRC-STONY-BROOK.ARPA
cc: KWH@MIT-AI.ARPA, BUG-LISPM@MIT-OZ
In-reply-to: Msg of Thu 24 Oct 85 08:29 EDT from Bernard S. Greenberg <BSG at SCRC-STONY-BROOK.ARPA>
Message-ID: <[MIT-AI.ARPA].5648.851024.KWH>


This --- while unrelated to DOVE's bug --- is a patch to the fasdumper which
makes it possible to specify ways of dumping circular structures:
;----------------------------------------------------------------

;; This may have to be changed for new versions of the compiler
(DEFINE-COMMAND-BIN-OP BIN-OP-SIDE-EFFECT #o77)

(DEFINE-LOAD-COMMAND-FOR-EFFECT BIN-OP-SIDE-EFFECT (STREAM)
  (eval (BIN-NEXT-VALUE STREAM)))

(defun dump-for-side-effect (form stream)
  (SEND STREAM ':TYO BIN-OP-SIDE-EFFECT)
  (DUMP-OBJECT FORM STREAM))

(DEFUN DUMP-INSTANCE (INSTANCE STREAM)
  ;; Prepare for the result of evaluating the form to be stored into the bin-load-table
  (LET ((INDEX (ENTER-TABLE INSTANCE STREAM T T)))
    (multiple-value-bind (create-form init-form)
	(SEND INSTANCE ':FASD-FORM)
      (DUMP-FORM-TO-EVAL create-form STREAM)
      (prog1 (FINISH-ENTER-TABLE INSTANCE INDEX)
	     (when init-form (dump-for-side-effect init-form stream))))))
;----------------------------------------------------------------

In essence, the way this works is to define a ``side effect'' BINOP
which is then used by DUMP-INSTANCE to dump out an ``initialization
form'' for given instances.  The trick is that since the
initialization form is dumped AFTER the instance is created and stored
in the dump table, it can refer to itself ``circularly'' in its
initialization.  For instance, suppose the flavor KONS has instance
variables KAR and KDR; then we can define KONS' :FASD-FORM message as:

(defmethod (KONS :FASD-FORM) ()
   (values `(make-instance 'kons) 
           `(progn (send ',self :set-kar ',kar) (send ',self :set-kdr ',kdr))))

This method will dump even circular KONSes.  Note that this is upward compatible
with the current semantics of :FASD-FORM, since it currently returns only one
value, and if the initialization form is NIL, nothing will be dumped.

Ken

P.S. If anyone is thinking about extending the dumper, the file
Reagan:>LMLib>Dump.LISP extends the dumper to be smart or flexible
about dumping most things.

24-Oct-85 18:40:36-EDT,6553;000000000000
Received: from MIT-MC.ARPA by MIT-OZ via Chaosnet; 24 Oct 85 18:40-EDT
Received: from MIT-XX.ARPA by MIT-MC.ARPA 24 Oct 85 18:37:20 EDT
Date: Thu 24 Oct 85 18:09:26-EDT
From: Andrew A. Chien <CHIEN@MIT-XX.ARPA>
Subject: copy-array-contents bug
To: bug-lispm@MIT-MC.ARPA
Message-ID: <12153762143.23.CHIEN@MIT-XX.ARPA>


I evaluated the following expressions at the lisp listener.
The second word of the array is complemented by the copy-array-contents
function.  The code for the function "messy-extender" is given below.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(setq a (make-array '(1) :type 'art-32b :initial-value 0))
#<ART-32B-1 21737767>
(listarray a)
(0)
(build-out a 7)
(0) 
0 
1 
1110000011100000000 
(1110000011100000000) 
0 
10 
1110000011000000110 
(1110000011000000110) 
Messy extender got (1110000011000000110)
(1110000011000000110 0) 
(1110000011000000101 0) 
(1110000011000000101 101000000000000000000000000) 
(1110000011000000101 101000000000000000000000000) 
1 
0 
100000001000000000000000000 
(1110000011000000101 100000001000000000000000000) 
1 
1 
100000000110000001100000000 
(1110000011000000101 100000000110000001100000000) 
1 
10 
100000000110000001000000010 
(1110000011000000101 100000000110000001000000010) 
Messy extender got (1110000011000000101 100000000110000001000000010)
(1110000011000000101 11111011111111001111110111111110 0) 
(1110000011000000101 11111011111111001111110100000001 0) 
(1110000011000000101 11111011111111001111110100000001 1000000000000000000000000) 
#<ART-32B-11 21740215>

(dribble)

;;; -*- Mode:Common-Lisp; Package:MEF-NETWORK; Base:10 -*-

(defvar *seen-time-stamps* nil)

;;
;;  Send out the begin initialization signal to all of the neighbors
;;
(defun begin-initialization ()
  (let*
    ((my-address (convert-network-address *my-network-address*))
     (packed-address (+ (* (car my-address) (^ 2 8))
			(cadr my-address)))
    (time-stamp (dpb (cadr my-address) (byte 8 24) (time)))
    (new-data (make-array '(1) :type 'art-32b)))
    (aset (dpb node-number
	       (byte 8 24)
	       (dpb node-number
		    (byte 8 16)
		    0)) new-data 0)
    (send-neighbors :data new-data 
		    :header (build-fp-init-header (list-packed-address time-stamp)))
    time-stamp))



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; 
;;  The idea here is that we want to forward copies to all of
;;  our neighbors, but not if we have seen the message before.
;;
;;  Each message carries a list of nodes and a set of routing
;;  nibbles used to traverse that list.
;;
;;  We want to include the link that we sent the message
;;  into the data field, so a routing string accumulates.  The
;;  idea is that if we're in the path already, we know that
;;  we've seen the message before and throw it away.
;;
;;  This algorithm is the one executed by "ordinary" (non-Front
;;  Panel) node identified by "node-number".
;;
(defun flooding-algorithm (new-message node-number)
  (let*
    ((header (get-header new-message))
     (opcode (get-opcode header)))
    (cond ((equal opcode (opcode-text-to-binary I-am-Front-Panel-begin-initialization))
	   (initialization-flooding new-message node-number header))
	  ((equal opcode (opcode-text-to-binary I-am-node-x-reached-by-routing-string))
	   (return-flooding new-message node-number))
	  (t (throw 'error-flooding new-message)))))

(defun initialization-flooding (new-message node-number header)
  (let
    ((time-stamp (aref header 1)))
    (cond ((member time-stamp *seen-time-stamps*))
	  (t (setq *seen-time-stamps* (cons time-stamp *seen-time-stamps*))
	     (let
	       ((new-message (extend-route-by-id node-number new-message t)))
	       (send-to-neighbors new-message)
	       (flood-back-to-fp-with-route new-message node-number))))))
;;
;;  flood back to the fp with a new time stamp, and the route from the fp to here
;;  building up the return path
;;
(defun flood-back-to-fp-with-route (a-message node-number)
  (let*
    ((my-address (convert-network-address *my-network-address*))
     (packed-address (+ (* (car my-address) (^ 2 8))
			(cadr my-address)))
     (time-stamp (dpb (cadr my-address) (byte 8 24) (time)))

    (aset (dpb node-number
	       (byte 8 24)
	       (dpb node-number
		    (byte 8 16)
		    0)) new-data 0)
     (
(build-nx-rbrs-header
;;
;;  Assumes the route is stored in the data section with the front panel's id
;;  in the first byte, and those on the path in the following bytes.  The string
;;  is terminated by the repetition of the last byte.
;;
(defun extend-route-by-id (id old-message from-fp?)
  (print (listarray old-message))
  (let*
    ((data (get-data old-message))
     (word-to-change (if from-fp? (find-termination-byte data 0)
			 (find-termination-byte data (find-termination-byte data 0))))
     (which-byte (mod word-to-change 4)))
    (cond ((>= which-byte 3) (messy-extender old-message id))
	  (t (let 
	       ((word-num (fix (/ word-to-change 4))))
	       (print word-num)
	       (print which-byte)
	       (aset (let 
		       ((temp (dpb id (byte 8 (* 8 (- 3 which-byte)))
				   (aref old-message word-num))))
		       (dpb id (byte 8 (* 8 (- 2 which-byte))) temp))
		     old-message
		     word-num)
	       (print (aref old-message word-num))
	       old-message)))))


(defun find-termination-byte (alist start-byte)   ;;find two repeated bytes in a list
  (let*
    ((new-list (nth-cdr start-byte (break-into-bytes alist))))
    (loop for x on new-list
	  for y from 0  until (equal (car x)
				     (cadr x))
	  finally (return (+ start-byte y 1)))))

(defun break-into-bytes (alist)
  (cond ((null alist) nil)
	(t (let
	     ((first-el (car alist)))
	     (nconc (list (ldb (byte 8 24) first-el)
			  (ldb (byte 8 16) first-el)
			  (ldb (byte 8 8) first-el)
			  (ldb (byte 8 0) first-el))
		    (break-into-bytes (cdr alist)))))))

(defun messy-extender (old-array id)
  (let*
    ((a-dims (car (array-dimensions old-array)))
     (new-arr (make-array (list (1+ a-dims)) :type 'art-32b)))
    (format t "~%Messy extender got ~S" (listarray old-array))
    (copy-array-contents old-array new-arr)
    (print (listarray new-arr))
    (aset (dpb id (byte 8 0) (aref new-arr (1- a-dims)))
	  new-arr (1- a-dims))
    (print (listarray new-arr))
    (aset (dpb id (byte 8 24) 0) new-arr a-dims)
    (print (listarray new-arr))
    new-arr))


-------
24-Oct-85 18:41:48-EDT,1745;000000000000
Received: from 15340 by MIT-OZ via Chaosnet; 24 Oct 85 18:41-EDT
Date: Thursday, 24 October 1985, 19:40-EDT
From: Edward H. Lay <EHL at MIT-ZERMATT.ARPA>
Reply-to: ehl at MIT-MC.ARPA
Subject: typo in DEFSTRUCT patch
To: BUG-LISPM at MIT-OZ

In SYSTEM 1.72, Compiler 1.9, File System 1.0,
Universal Command Loop 1.0, Window System 1.5, Input Editor 1.1,
ZMACS 1.2, font editor 1.0, Error Handler 1.0, Suggestions 1.0,
Debug Utilities 1.3, Explorer-Net 1.2, Telnet 1.0, VT100 1.0, ZMail 1.0,
Local-File 1.21, Net-Config 1.5, Explorer Serial & Parallel Ports 1.0,
Printer 1.0, Glossary 1.0, Explorer Streamer Tape 1.11, NVRAM 1.3,
User Profile Utility 1.2, microcode 213, REL 1.0.1minprod,
on SUGAR-RAY:

Does anyone on this list know where bugs in Explorer software should be
sent to ?  The default bug host (RTS) has been down for at least a week 
now and no one seems to respond to it anyway....

The patch to defstruct defined in system-1-33 is incorrect.

(defstruct-define-type :named-list
  (:overhead 1)
  (:cons (arg description etc) :list
    etc			;ignored
    `(list ',(defstruct-description-name)
	   ,.(if (null arg)
		 (make-list (defstruct-description-size))
		 arg)))
  (:ref (n description arg)
    description		;ignored


;>>>>>>    `(nth  l (1+ ,n) ,arg))  ;THIS LINE SHOULD BE
	`(nth ,(1+ n) ,arg))

  (:predicate (description name)
    `(defun ,name (x)
       (and
	 (not (atom x))
	 (eq (car x) ',(defstruct-description-name)))))
  (:copier (description name)
    (do ((l `((car x)) (cons `(prog1 (car x) (setq x (cdr x))) l))
	 (i (defstruct-description-size) (1- i)))
	((<= i 1)
	 `(defun ,name (x)
	    (setq x (cdr x))
	    (list ',(defstruct-description-name) ,@l))))))
24-Oct-85 21:57:29-EDT,7343;000000000000
Received: from MIT-MC.ARPA by MIT-OZ via Chaosnet; 24 Oct 85 21:57-EDT
Received: from SCRC-QUABBIN.ARPA by MIT-MC.ARPA 24 Oct 85 21:54:52 EDT
Received: from NEPONSET.SCRC.Symbolics.COM by SCRC-QUABBIN.ARPA via CHAOS with CHAOS-MAIL id 214494; Thu 24-Oct-85 21:54:01-EDT
Date: Thu, 24 Oct 85 21:57 EDT
From: David C. Plummer <DCP@SCRC-QUABBIN.ARPA>
Subject: copy-array-contents bug
To: Andrew A. Chien <CHIEN@MIT-XX.ARPA>, bug-lispm@MIT-MC.ARPA
In-Reply-To: <12153762143.23.CHIEN@MIT-XX.ARPA>
Message-ID: <851024215739.4.DCP@NEPONSET.SCRC.Symbolics.COM>

    Date: Thu 24 Oct 85 18:09:26-EDT
    From: Andrew A. Chien <CHIEN@MIT-XX.ARPA>

Please use m-X Bug.  If that isn't available, please say what system you
are using.  Because you use array type ART-32B, you are either using a
CADR, LM-2 or Explorer, each of which has a different maintainer.

    I evaluated the following expressions at the lisp listener.
    The second word of the array is complemented by the copy-array-contents
    function.  The code for the function "messy-extender" is given below.

    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

    (setq a (make-array '(1) :type 'art-32b :initial-value 0))
    #<ART-32B-1 21737767>
    (listarray a)
    (0)
    (build-out a 7)
    (0) 
    0 
    1 
    1110000011100000000 
    (1110000011100000000) 
    0 
    10 
    1110000011000000110 
    (1110000011000000110) 
    Messy extender got (1110000011000000110)
    (1110000011000000110 0) 
    (1110000011000000101 0) 
    (1110000011000000101 101000000000000000000000000) 
    (1110000011000000101 101000000000000000000000000) 
    1 
    0 
    100000001000000000000000000 
    (1110000011000000101 100000001000000000000000000) 
    1 
    1 
    100000000110000001100000000 
    (1110000011000000101 100000000110000001100000000) 
    1 
    10 
    100000000110000001000000010 
    (1110000011000000101 100000000110000001000000010) 
    Messy extender got (1110000011000000101 100000000110000001000000010)
    (1110000011000000101 11111011111111001111110111111110 0) 
    (1110000011000000101 11111011111111001111110100000001 0) 
    (1110000011000000101 11111011111111001111110100000001 1000000000000000000000000) 
    #<ART-32B-11 21740215>

    (dribble)

    ;;; -*- Mode:Common-Lisp; Package:MEF-NETWORK; Base:10 -*-

    (defvar *seen-time-stamps* nil)

    ;;
    ;;  Send out the begin initialization signal to all of the neighbors
    ;;
    (defun begin-initialization ()
      (let*
	((my-address (convert-network-address *my-network-address*))
	 (packed-address (+ (* (car my-address) (^ 2 8))
			    (cadr my-address)))
	(time-stamp (dpb (cadr my-address) (byte 8 24) (time)))
	(new-data (make-array '(1) :type 'art-32b)))
	(aset (dpb node-number
		   (byte 8 24)
		   (dpb node-number
			(byte 8 16)
			0)) new-data 0)
	(send-neighbors :data new-data 
			:header (build-fp-init-header (list-packed-address time-stamp)))
	time-stamp))



    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    ;; 
    ;;  The idea here is that we want to forward copies to all of
    ;;  our neighbors, but not if we have seen the message before.
    ;;
    ;;  Each message carries a list of nodes and a set of routing
    ;;  nibbles used to traverse that list.
    ;;
    ;;  We want to include the link that we sent the message
    ;;  into the data field, so a routing string accumulates.  The
    ;;  idea is that if we're in the path already, we know that
    ;;  we've seen the message before and throw it away.
    ;;
    ;;  This algorithm is the one executed by "ordinary" (non-Front
    ;;  Panel) node identified by "node-number".
    ;;
    (defun flooding-algorithm (new-message node-number)
      (let*
	((header (get-header new-message))
	 (opcode (get-opcode header)))
	(cond ((equal opcode (opcode-text-to-binary I-am-Front-Panel-begin-initialization))
	       (initialization-flooding new-message node-number header))
	      ((equal opcode (opcode-text-to-binary I-am-node-x-reached-by-routing-string))
	       (return-flooding new-message node-number))
	      (t (throw 'error-flooding new-message)))))

    (defun initialization-flooding (new-message node-number header)
      (let
	((time-stamp (aref header 1)))
	(cond ((member time-stamp *seen-time-stamps*))
	      (t (setq *seen-time-stamps* (cons time-stamp *seen-time-stamps*))
		 (let
		   ((new-message (extend-route-by-id node-number new-message t)))
		   (send-to-neighbors new-message)
		   (flood-back-to-fp-with-route new-message node-number))))))
    ;;
    ;;  flood back to the fp with a new time stamp, and the route from the fp to here
    ;;  building up the return path
    ;;
    (defun flood-back-to-fp-with-route (a-message node-number)
      (let*
	((my-address (convert-network-address *my-network-address*))
	 (packed-address (+ (* (car my-address) (^ 2 8))
			    (cadr my-address)))
	 (time-stamp (dpb (cadr my-address) (byte 8 24) (time)))

	(aset (dpb node-number
		   (byte 8 24)
		   (dpb node-number
			(byte 8 16)
			0)) new-data 0)
	 (
    (build-nx-rbrs-header
    ;;
    ;;  Assumes the route is stored in the data section with the front panel's id
    ;;  in the first byte, and those on the path in the following bytes.  The string
    ;;  is terminated by the repetition of the last byte.
    ;;
    (defun extend-route-by-id (id old-message from-fp?)
      (print (listarray old-message))
      (let*
	((data (get-data old-message))
	 (word-to-change (if from-fp? (find-termination-byte data 0)
			     (find-termination-byte data (find-termination-byte data 0))))
	 (which-byte (mod word-to-change 4)))
	(cond ((>= which-byte 3) (messy-extender old-message id))
	      (t (let 
		   ((word-num (fix (/ word-to-change 4))))
		   (print word-num)
		   (print which-byte)
		   (aset (let 
			   ((temp (dpb id (byte 8 (* 8 (- 3 which-byte)))
				       (aref old-message word-num))))
			   (dpb id (byte 8 (* 8 (- 2 which-byte))) temp))
			 old-message
			 word-num)
		   (print (aref old-message word-num))
		   old-message)))))


    (defun find-termination-byte (alist start-byte)   ;;find two repeated bytes in a list
      (let*
	((new-list (nth-cdr start-byte (break-into-bytes alist))))
	(loop for x on new-list
	      for y from 0  until (equal (car x)
					 (cadr x))
	      finally (return (+ start-byte y 1)))))

    (defun break-into-bytes (alist)
      (cond ((null alist) nil)
	    (t (let
		 ((first-el (car alist)))
		 (nconc (list (ldb (byte 8 24) first-el)
			      (ldb (byte 8 16) first-el)
			      (ldb (byte 8 8) first-el)
			      (ldb (byte 8 0) first-el))
			(break-into-bytes (cdr alist)))))))

    (defun messy-extender (old-array id)
      (let*
	((a-dims (car (array-dimensions old-array)))
	 (new-arr (make-array (list (1+ a-dims)) :type 'art-32b)))
	(format t "~%Messy extender got ~S" (listarray old-array))
	(copy-array-contents old-array new-arr)
	(print (listarray new-arr))
	(aset (dpb id (byte 8 0) (aref new-arr (1- a-dims)))
	      new-arr (1- a-dims))
	(print (listarray new-arr))
	(aset (dpb id (byte 8 24) 0) new-arr a-dims)
	(print (listarray new-arr))
	new-arr))


    -------


26-Oct-85 11:07:48-EDT,1864;000000000000
Received: from MIT-GOLDILOCKS.ARPA by MIT-OZ via Chaosnet; 26 Oct 85 11:07-EDT
Received: from YOGI by GOLDILOCKS via CHAOS with CHAOS-MAIL id 8527; Sat 26-Oct-85 11:07:33-EDT
Date: Sat, 26 Oct 85 11:07 EDT
From: Scott Cyphers <sr.ehpyc%MIT-SPEECH@MIT-MC.ARPA>
Subject: Some Editor suggestions
To: BUG-LISPM@MIT-GOLDILOCKS.ARPA
Message-ID: <851026110707.2.CYPHER@YOGI.MIT.EDU>

In Symbolics 3670 Release 6.0, IP-TCP 29.0, Spire-Macros 5.1,
Attribute 5.7, Compute 5.10, Audio 4.0, Speech-Attributes 4.8,
Display 6.23, Speech-Layouts 6.4, Prtout 4.4, Versatec 5.1, Spire 16.0,
ZOO 6.19, ZOO-SPIRE 2.3, microcode TMC5-IO4-FPA-MIC 319, on Lisp Machine Yogi:

In auto fill comments mode, it would be nice if m-] and m-[ would go to
the beginning and end of paragraphs in the comments, and if m-s
centerred the comments, leaving the semicolons where they belong instead
of moving them with it.

Most of the time when I use Indent Region (C-M-\), I make the region be
an entire definition.  I think that when there is no region, then the
entire definition should be used, i.e. it should be Indent Region or
Definition instead.  I think there are a couple other functions that
have this same region-only behavior.

This is more difficult:  When my cursor is in a comment area, feel like
I am in text mode, and when it is in a lisp area, I feel like I am in
Lisp mode.  This sometimes causes problems since the comments are only
in a pseudo-text mode.  It would be nice if being in a comment area
actually put you in "Text Comment Mode" while you were there.  This
would be like text mode, expcet that it makes sure that each line is
commented in whatever manner is appropriate for the syntax.  This would
allow things like M-Q to fill a pragraph in a comment and do an Indent
Region or Definition kind of thing when you are in a Lisp area.
27-Oct-85 11:34:36-EST,2081;000000000000
Received: from MIT-GOLDILOCKS.ARPA by MIT-OZ via Chaosnet; 27 Oct 85 11:34-EST
Received: from YOGI by GOLDILOCKS via CHAOS with CHAOS-MAIL id 8531; Sun 27-Oct-85 11:34:32-EST
Date: Sun, 27 Oct 85 11:33 EST
From: Scott Cyphers <sr.ehpyc%MIT-SPEECH@MIT-MC.ARPA>
Subject: 6.1 Compiler Fixes
To: BUG-LISPM@MIT-GOLDILOCKS.ARPA
Message-ID: <851027113325.3.CYPHER@YOGI.MIT.EDU>

In Symbolics 3670 Release 6.0, IP-TCP 29.0, Spire-Macros 5.1,
Attribute 5.7, Compute 5.10, Audio 4.0, Speech-Attributes 4.8,
Display 6.23, Speech-Layouts 6.4, Prtout 4.4, Versatec 5.1, Spire 16.0,
ZOO 6.19, ZOO-SPIRE 2.3, microcode TMC5-IO4-FPA-MIC 319, on Lisp Machine Yogi:

Would it be possible to get whatever it is that makes compiling things
like this work in Release 6.1 without having to wait for 6.1?

(defsubst polar (r theta)
  (* r (cis theta)))

(defun foo (r s)
  (MACROLET
    ((LTI ((INPUT) &BODY BODY)
       `(Z ,INPUT (PROGN . ,BODY)))
     (WITH-SYSTEM ((INPUT) &BODY BODY)
       `(Z ,INPUT (PROGN . ,BODY))))
    (FUNCTION
      (LAMBDA
	(INPUT)
	(PROGN
	  (FLET
	    ((LOW (INPUT) (PROGN (PROGN (- 1.0 (/ (POLAR S 0.0) INPUT)))))
	     (MED (INPUT)
	       (PROGN (PROGN (* (- 1.0 (/ (POLAR S 0.5) INPUT))
				(CONJUGATE (- 1.0 (/ (POLAR S 0.5) (CONJUGATE INPUT))))))))
	     (HIGH (INPUT)
	       (PROGN (PROGN (* (- 1.0 (/ (POLAR S 1.0) INPUT))
				(CONJUGATE (- 1.0 (/ (POLAR S 1.0) (CONJUGATE INPUT))))))))
	     (FIRST (INPUT) (PROGN (PROGN (/ (- 1.0 (/ (POLAR R 0.0) INPUT))))))
	     (SECOND (INPUT)
		     (PROGN (PROGN (EXPT (* (/ (- 1.0 (/ (POLAR R 0.5) INPUT)))
					    (CONJUGATE (/ (- 1.0
							     (/ (POLAR R 0.5)
								(CONJUGATE INPUT))))))
					 2))))
	     (THIRD (INPUT)
		    (PROGN (PROGN (EXPT (* (/ (- 1.0 (/ (POLAR R 1.0) INPUT)))
					   (CONJUGATE (/ (- 1.0
							    (/ (POLAR R 1.0)
							       (CONJUGATE INPUT))))))
					2)))))
	    (PROGN (LET* ((LOW (LOW INPUT))
			  (MED (MED LOW))
			  (HIGH (HIGH MED)))
		     (PROGN (VALUES LOW (FIRST LOW) MED (SECOND MED) HIGH (THIRD HIGH)))))))))))
29-Oct-85 10:53:57-EST,4506;000000000000
Received: from MIT-ZERMATT.ARPA by MIT-OZ via Chaosnet; 29 Oct 85 10:53-EST
Received: from PI by ZERMATT via CHAOS with CHAOS-MAIL id 15392; Tue 29-Oct-85 10:51:36-EST
Date: Tue, 29 Oct 85 10:52 EST
From: Jeffrey Mark Siskind <qobi@MIT-NEWTOWNE-VARIETY.ARPA>
Subject: hung in TCP Connect stat
To: BUG-LISPM@MIT-ZERMATT.ARPA
Message-ID: <851029105225.1.QOBI@PI.MIT.EDU>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, MLSite 7.2,
microcode TMC5-MIC 319, FEP 18, on PI Project:

Why does it hang in TCP Connect state when I try to login
(this happens before I my lispm-init file is loaded)

Also why sometimes when I Login qobi does it not get the
appropriate namespace information and log me in locally
instead of onto NEWTOWNE-VARIETY. This seems to happen
at random, I only find out because I have no >QOBI>
directory nor a lispm-init file locally?

The flakeness of the network situation is really annoying.

>>Break: 
While in the function PROCESS-WAIT  TCP::TCB-TRAVEL-THROUGH-STATES  TCP::COMPLETE-OPEN-TCB

PROCESS-WAIT:
   Arg 0 (WHOSTATE): "TCP Connect"
   Local 0 (WHOSTATE): #<BREAK 5674501>
   Arg 1 (FUNCTION): #<DTP-COMPILED-FUNCTION (:INTERNAL TCP::TCB-TRAVEL-THROUGH-STATES 0) 76545116>
   Local 1 (FUNCTION): #<DTP-LOCATIVE 500764>
   Rest arg (ARGUMENTS): (#<TCP connection to NEWTOWNE-VARIETY 20, local port 1040 1052160> :LISTEN 2494230 NIL)
   Local 2 (ARGUMENTS): #<DTP-LOCATIVE 500763>

TCP::TCB-TRAVEL-THROUGH-STATES:  (P.C. = 45)
   Arg 0 (TCB): #<TCP connection to NEWTOWNE-VARIETY 20, local port 1040 1052160>
   Arg 1 (WHOSTATE): "TCP Connect"
   Arg 2 (TIMEOUT): NIL
   Rest arg (STATES): (:LISTEN :SYN-SENT :SYN-RECEIVED)

TCP::COMPLETE-OPEN-TCB:  (P.C. = 11)
   Arg 0 (TCB): #<TCP connection to NEWTOWNE-VARIETY 20, local port 1040 1052160>
   Arg 1 (TIMEOUT): NIL

(:METHOD TCP::BASIC-TCP-STREAM :COMPLETE-CONNECTION):  (P.C. = 13)
   Arg 0 (SELF): #<TCP-BINARY-STREAM 5672353>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TCP::BASIC-TCP-STREAM -- 1. IV's, 0. FL's 1515566>
   Arg 2 (OPERATION): :COMPLETE-CONNECTION
   Rest arg: NIL

(:DEFUN-METHOD FS:TCP-FTP-MAKE-DATA-CONNECTION):  (P.C. = 210)
   Arg 0 (SELF): #<TCP-FTP-CONN 5633535>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:TCP-FTP-CONN -- 8. IV's, 0. FL's 1527156>
   Arg 2 (TRANSLATED): #<UNIX42-PATHNAME "NEWTOWNE-VARIETY: //toc//qobi//lispm-init.lisp">
   Arg 3 (PATHNAME): #<UNIX42-PATHNAME "NEWTOWNE-VARIETY: //toc//qobi//lispm-init.lisp">
   Arg 4 (BYTE-SIZE): NIL
   Arg 5 (COMMAND): "RETR"

(:DEFUN-METHOD FS:TCP-FTP-OPEN-DATA-CONNECTION):  (P.C. = 12)
   Arg 0 (SELF): #<TCP-FTP-CONN 5633535>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:TCP-FTP-CONN -- 8. IV's, 0. FL's 1527156>
   Arg 2 (TRANSLATED): #<UNIX42-PATHNAME "NEWTOWNE-VARIETY: //toc//qobi//lispm-init.lisp">
   Arg 3 (PATHNAME): #<UNIX42-PATHNAME "NEWTOWNE-VARIETY: //toc//qobi//lispm-init.lisp">
   Arg 4 (DIRECTION): :INPUT
   Arg 5 (BINARY-BYTE-SIZE): NIL
   Arg 6 (COMMAND): "RETR"

(:METHOD FS:TCP-FTP-CONN :OPEN):  (P.C. = 72)
   Arg 0 (SELF): #<TCP-FTP-CONN 5633535>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:TCP-FTP-CONN -- 8. IV's, 0. FL's 1527156>
   Arg 2 (OPERATION): :OPEN
   Arg 3 (TRANSLATED): #<UNIX42-PATHNAME "NEWTOWNE-VARIETY: //toc//qobi//lispm-init.lisp">
   Arg 4 (PATHNAME): #<UNIX42-PATHNAME "NEWTOWNE-VARIETY: //toc//qobi//lispm-init.lisp">
   Rest arg: (:DIRECTION :INPUT :CHARACTERS :DEFAULT)

(:METHOD FS:TCP-FTP-FILE-ACCESS-PATH :OPEN):  (P.C. = 12)
   Arg 0 (SELF): #<UNIX-TCP-FTP-FILE-ACCESS-PATH NEWTOWNE-VARIETY using TCP-FTP 5633524>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:TCP-FTP-FILE-ACCESS-PATH -- 2. IV's, 2. FL's 17620507>
   Arg 2 (OPERATION): :OPEN
   Rest arg (ARGS): (#<UNIX42-PATHNAME "NEWTOWNE-VARIETY: //toc//qobi//lispm-init.lisp"> #<UNIX42-PATHNAME "NEWTOWNE-VARIETY: //toc//qobi//lispm-init.lisp"> :DIRECTION :INPUT :CHARACTERS :DEFAULT)

Rest of stack:
(:METHOD FS:ACTIVE-PATHNAME-MIXIN :OPEN):  (P.C. = 14)
FS:COMMON-LISP-OPEN:  (P.C. = 450)
OPEN:  (P.C. = 257)
FS:LOAD-OPEN:  (P.C. = 122)
LOGIN:  (P.C. = 564)
(:PROPERTY SI:COM-LOGIN SI:CP-FUNCTION):  (P.C. = 22)
SI:COM-LOGIN:  (P.C. = 24)
SI:*EVAL:  (P.C. = 403)
(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0):  (P.C. = 152)
TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
SI:LISP-COMMAND-LOOP:  (P.C. = 67)
SI:LISP-TOP-LEVEL1:  (P.C. = 5)
SI:LISP-TOP-LEVEL:  (P.C. = 7)
29-Oct-85 11:50:00-EST,2943;000000000000
Received: from MIT-ZERMATT.ARPA by MIT-OZ via Chaosnet; 29 Oct 85 11:48-EST
Received: from VIOLIN by ZERMATT via CHAOS with CHAOS-MAIL id 15398; Tue 29-Oct-85 11:46:31-EST
Date: Tue, 29 Oct 85 11:47 EST
From: Richard E. Zippel <RZ@MIT-ZERMATT.ARPA>
Subject: hung in TCP Connect stat
To: qobi@MIT-ZERMATT.ARPA, BUG-LISPM@MIT-ZERMATT.ARPA,
    ml-lispm-users@MIT-ZERMATT.ARPA
In-Reply-To: <851029105225.1.QOBI@PI.MIT.EDU>
Message-ID: <851029114732.2.RZ@VIOLIN.MIT.EDU>

    Date: Tue, 29 Oct 85 10:52 EST
    From: Jeffrey Mark Siskind <qobi@MIT-NEWTOWNE-VARIETY.ARPA>

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, MLSite 7.2,
    microcode TMC5-MIC 319, FEP 18, on PI Project:

    Why does it hang in TCP Connect state when I try to login
    (this happens before I my lispm-init file is loaded)

    Also why sometimes when I Login qobi does it not get the
    appropriate namespace information and log me in locally
    instead of onto NEWTOWNE-VARIETY. This seems to happen
    at random, I only find out because I have no >QOBI>
    directory nor a lispm-init file locally?

I suspect that some of these problems are because you were unable to get
to Zermatt.  This is due some confusion about how to find gateways at
MIT.  Basically, the problem is that when searching for gateways the 6.0
code looks only for gateways in the local site.  Since there is an ML
site and all the gateways are in the MIT site, you don't find any.  

Why should this matter, you ask?  After all, Zermatt and Pi are on the
same cable.

Both Zermatt and Pi are part of internet 18.0.0.0 which uses subnet
routing.  Thus the Lisp machines depend upon a gateway to tell them how
to route a message to machines on that subnet.  Upon sending a packet to
Sludge, which will be forwarded to Zermatt; Sludge sends a REDIRECT to
Pi telling it send future packets directed to Zermatt directly.   

Unfortunately, Pi can't find a gateway so this scheme doesn't work.
MLSite patch 7.2 changes things so that when looking for a gateway, all
sites are searched in the current namespace.  But since the patch is
loaded after Pi is booted, it doesn't really accomplish anything.  There
are several solutions.  The cleanest is to disk save the band after 7.2
has been loaded.  Booting from this saved band will not have these
problems.  Alternatively, before loggin in you can type
(reset-networks-gateways) which  redetermines the gateways, using the
new code in patch 7.2.

One way to check to see if you are having this type of problem is to go
into the Network portion of Peek and look at the line after Interfaces:
(for TCP).  There should be a listing for Sludge, indicating it is a
gateway machine you might use.

If you take the (reset-networks-gateways) option.  It will be about 30
seconds before you machine notices that Sludge is up.  During this 30 seconds
you won't be able to talk to Zermatt via TCP.
29-Oct-85 12:13:00-EST,5956;000000000000
Received: from MIT-ZERMATT.ARPA by MIT-OZ via Chaosnet; 29 Oct 85 12:12-EST
Received: from TELLURIDE by ZERMATT via CHAOS with CHAOS-MAIL id 15401; Tue 29-Oct-85 12:11:07-EST
Date: Tue, 29 Oct 85 12:12 EST
From: Jeffrey Mark Siskind <qobi@MIT-NEWTOWNE-VARIETY.ARPA>
Subject: TCP bug while logging into a lisp machine with UNIX home host NEWTOWNE-VARIETY
To: BUG-LISPM@MIT-ZERMATT.ARPA
Message-ID: <851029121203.1.QOBI@TELLURIDE.MIT.EDU>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, MLSite 7.0,
microcode TMC5-MIC 319, FEP 18, on Lisp Machine Telluride:

Why does this happen, This is very annoying.
Somebody has to make TCP (and the network connection between ML lispms and
NEWTOWNE-VARIETY more reliable.

- Jeffrey Mark Siskind (qobi@mit-mc) 253-5293 NE43-326

>>Error: 425 Can't create data socket (18.10.0.75,20): Address already in use.
While in the function (:DEFUN-METHOD FS:TCP-FTP-CHECK-COMMAND-RESPONSE)  (:DEFUN-METHOD FS:TCP-FTP-MAKE-DATA-CONNECTION)  (:DEFUN-METHOD FS:TCP-FTP-OPEN-DATA-CONNECTION)

(:DEFUN-METHOD FS:TCP-FTP-CHECK-COMMAND-RESPONSE):  (P.C. = 171)
   Arg 0 (SELF): #<TCP-FTP-CONN 7673363>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:TCP-FTP-CONN -- 8. IV's, 0. FL's 1153620>
   Arg 2 (EXPECTED-VALUE): (125 150)
   Arg 3 (CTL-STRING): "~A ~A"
   Rest arg (ARGS): ("RETR" "//toc//qobi//lispm-init.lisp")
   Local 5: SYS:UNWIND-PROTECT-TAG
   Local 6: #<DTP-ODD-PC 76567600>
   Local 7: #<DTP-LOCATIVE 440070>
   Local 8: #<DTP-LOCATIVE 500675>
   Local 9 (OLD-STATE): :ALLOCATED
   Local 10 (NUM): 425
   Local 11 (LINE): "425 Can't create data socket (18.10.0.75,20): Address already in use."
   Local 12 (ELEM): (425 FS:TCP-FTP-CANNOT-OPEN-DATA FS:NETWORK-LOSSAGE)
   Local 13 (CONDITION): NIL
   Local 14: "~A ~A"
   Local 15: #<CASE-HANDLER 5571175>
   Local 16: (#<CASE-HANDLER 120653373> #<CASE-HANDLER 120571540>)
   Local 17: (#<CASE-HANDLER 5571175> #<CASE-HANDLER 120653373> #<CASE-HANDLER 120571540>)

(:DEFUN-METHOD FS:TCP-FTP-MAKE-DATA-CONNECTION):  (P.C. = 205)
   Arg 0 (SELF): #<TCP-FTP-CONN 7673363>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:TCP-FTP-CONN -- 8. IV's, 0. FL's 1153620>
   Arg 2 (TRANSLATED): #<UNIX42-PATHNAME "FLA: //toc//qobi//lispm-init.lisp">
   Arg 3 (PATHNAME): #<UNIX42-PATHNAME "FLA: //toc//qobi//lispm-init.lisp">
   Arg 4 (BYTE-SIZE): NIL
   Arg 5 (COMMAND): "RETR"

(:DEFUN-METHOD FS:TCP-FTP-OPEN-DATA-CONNECTION):  (P.C. = 12)
   Arg 0 (SELF): #<TCP-FTP-CONN 7673363>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:TCP-FTP-CONN -- 8. IV's, 0. FL's 1153620>
   Arg 2 (TRANSLATED): #<UNIX42-PATHNAME "FLA: //toc//qobi//lispm-init.lisp">
   Arg 3 (PATHNAME): #<UNIX42-PATHNAME "FLA: //toc//qobi//lispm-init.lisp">
   Arg 4 (DIRECTION): :INPUT
   Arg 5 (BINARY-BYTE-SIZE): NIL
   Arg 6 (COMMAND): "RETR"

(:METHOD FS:TCP-FTP-CONN :OPEN):  (P.C. = 72)
   Arg 0 (SELF): #<TCP-FTP-CONN 7673363>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:TCP-FTP-CONN -- 8. IV's, 0. FL's 1153620>
   Arg 2 (OPERATION): :OPEN
   Arg 3 (TRANSLATED): #<UNIX42-PATHNAME "FLA: //toc//qobi//lispm-init.lisp">
   Arg 4 (PATHNAME): #<UNIX42-PATHNAME "FLA: //toc//qobi//lispm-init.lisp">
   Rest arg: (:DIRECTION :INPUT :CHARACTERS :DEFAULT)

(:METHOD FS:TCP-FTP-FILE-ACCESS-PATH :OPEN):  (P.C. = 12)
   Arg 0 (SELF): #<UNIX-TCP-FTP-FILE-ACCESS-PATH FLA using TCP-FTP 7673352>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:TCP-FTP-FILE-ACCESS-PATH -- 2. IV's, 2. FL's 1154473>
   Arg 2 (OPERATION): :OPEN
   Rest arg (ARGS): (#<UNIX42-PATHNAME "FLA: //toc//qobi//lispm-init.lisp"> #<UNIX42-PATHNAME "FLA: //toc//qobi//lispm-init.lisp"> :DIRECTION :INPUT :CHARACTERS :DEFAULT)

(:METHOD FS:ACTIVE-PATHNAME-MIXIN :OPEN):  (P.C. = 14)
   Arg 0 (SELF): #<UNIX42-PATHNAME "FLA: //toc//qobi//lispm-init.lisp">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:ACTIVE-PATHNAME-MIXIN -- 1. IV's, 0. FL's 105223247>
   Arg 2 (OPERATION): :OPEN
   Arg 3 (PATHNAME): #<UNIX42-PATHNAME "FLA: //toc//qobi//lispm-init.lisp">
   Rest arg (OPTIONS): (:DIRECTION :INPUT :CHARACTERS :DEFAULT)

FS:COMMON-LISP-OPEN:  (P.C. = 450)
   Arg 0 (PATHNAME): #<UNIX42-PATHNAME "FLA: //toc//qobi//lispm-init.lisp">
   Arg 1 (KEYWORD-ARGS): (:CHARACTERS :DEFAULT)

OPEN:  (P.C. = 257)
   Arg 0 (PATHNAME): #<UNIX42-PATHNAME "FLA: //toc//qobi//lispm-init.lisp">
   Rest arg (KEYWORD-ARGS): (:CHARACTERS :DEFAULT)

FS:LOAD-OPEN:  (P.C. = 122)
   Arg 0 (PATHNAME): #<UNIX42-PATHNAME "FLA: //toc//qobi//lispm-init.">
   Arg 1 (NONEXISTENT-OK-FLAG): NIL
   Arg 2 (DONT-SET-DEFAULT-P): T

LOGIN:  (P.C. = 564)
   Arg 0 (USER-NAME): "qobi"
   Local 0 (USER-NAME): "qobi"
   Rest arg: (:HOST NIL :LOAD-INIT-FILE T)

(:PROPERTY SI:COM-LOGIN SI:CP-FUNCTION):  (P.C. = 22)
   Arg 0 (USER): "qobi"
   Arg 1 (HOST): NIL
   Arg 2 (INIT-FILE): :DEFAULT-INIT-FILE

SI:COM-LOGIN:  (P.C. = 24)
   Arg 0 (USER): "qobi"
   Rest arg: NIL

SI:*EVAL:  (P.C. = 403)
   Arg 0 (FORM): (SI:COM-LOGIN "qobi")
   Local 0 (FORM): NIL
   --Defaulted args:--
   Arg 1 (ENV): NIL
   Arg 2 (HOOK): NIL

(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0):  (P.C. = 152)
   Arg 0 (.LEXICAL-ENVIRONMENT-POINTER.): #<DTP-LOCATIVE 500047>

TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
   Arg 0 (NEW-MODE): :BLAST
   Arg 1 (STREAM): #:TERMINAL-IO-SYN-STREAM
   Arg 2 (CONTINUATION): #<LEXICAL-CLOSURE (:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0) 500054>

SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
   Arg 0 (NAME): "Lisp Top Level"
   Arg 1 (ABORT-FUNCTION): NIL
   Arg 2 (READ-FUNCTION): NIL
   Arg 3 (EVAL-FUNCTION): NIL
   Arg 4 (PRINT-FUNCTION): NIL

SI:LISP-COMMAND-LOOP:  (P.C. = 67)
   Arg 0: #<LISP-LISTENER Lisp Listener 1 43200216 exposed>
   Rest arg: (:NAME "Lisp Top Level")

SI:LISP-TOP-LEVEL1:  (P.C. = 5)
   Arg 0 (STREAM): #<LISP-LISTENER Lisp Listener 1 43200216 exposed>

SI:LISP-TOP-LEVEL:  (P.C. = 7)
29-Oct-85 14:19:10-EST,892;000000000000
Received: from MIT-ZERMATT.ARPA by MIT-OZ via Chaosnet; 29 Oct 85 14:18-EST
Received: from MIT-MC by ZERMATT via CHAOS with CHAOS-MAIL id 15409; Tue 29-Oct-85 14:16:26-EST
Date: Tue, 29 Oct 85 14:17:36 EST
From: David Vinayak Wallace <GUMBY@MIT-MC.ARPA>
Subject:  TCP bug while logging into a lisp machine with UNIX home host NEWTOWNE-VARIETY
To: qobi@MIT-NEWTOWNE-VARIETY.ARPA
cc: BUG-LISPM@MIT-ZERMATT.ARPA
In-reply-to: Msg of Tue 29 Oct 85 12:12 EST from Jeffrey Mark Siskind <qobi at MIT-NEWTOWNE-VARIETY.ARPA>
Message-ID: <[MIT-MC.ARPA].696937.851029.GUMBY>

    Date: Tue, 29 Oct 85 12:12 EST
    From: Jeffrey Mark Siskind <qobi at MIT-NEWTOWNE-VARIETY.ARPA>

    Why does this happen, This is very annoying.
    Somebody has to make TCP (and the network connection between ML lispms and
    NEWTOWNE-VARIETY more reliable.

You're right.  I am glad you volunteered.
29-Oct-85 21:41:59-EST,1321;000000000000
Received: from MIT-GOLDILOCKS.ARPA by MIT-OZ via Chaosnet; 29 Oct 85 21:41-EST
Received: from SMOKEY by GOLDILOCKS via CHAOS with CHAOS-MAIL id 8538; Tue 29-Oct-85 21:36:57-EST
Date: Tue, 29 Oct 85 21:36 EST
From: Scott Cyphers <sr.ehpyc%MIT-SPEECH@MIT-MC.ARPA>
Subject: Common Lisp Flame: What good is coerce?
To: BUG-LISPM@MIT-GOLDILOCKS.ARPA
Message-ID: <851029213609.1.CYPHER@SMOKEY.MIT.EDU>

In Symbolics 3670 Release 6.0, IP-TCP 29.0, Spire-Macros 5.1,
Attribute 5.7, Compute 5.10, Audio 4.0, Speech-Attributes 4.8,
Display 6.23, Speech-Layouts 6.4, Prtout 4.4, Versatec 5.1, Spire 16.0,
ZOO 6.19, ZOO-SPIRE 2.3, microcode TMC5-IO4-FPA-MIC 319, on Lisp Machine Smokey:

It lets you coerce some primitive common lisp types to other primitive
common lisp types, and that's it.  You can't define coercions from your
own types to other of your own types (or common lisp types) without
defining your own coercion function, and common lisp already took the
good name for such a function with its primitive version.  This seems
completely against the philosophy that you should be able to extend Lisp
easily and transparently from what comes on the world load tape.  The
disassembled code looks like SCL's coerce is extendable by adding to the
hash table, but that's not a CL-compatible thing to do.
30-Oct-85 08:05:52-EST,4937;000000000000
Received: from MIT-REAGAN.ARPA by MIT-OZ via Chaosnet; 30 Oct 85 08:05-EST
Received: from MORRISON by REAGAN via CHAOS with CHAOS-MAIL id 10453; Wed 30-Oct-85 08:06:05-EST
Date: Wed, 30 Oct 85 08:05 EST
From: jcma@MIT-MC
Subject: Direct Mail Sending
To: CSTACY@MIT-MC
cc: POSTMASTER@MIT-MC, Postmaster%JADE.BERKELEY.EDU@MIT-MC,
    bug-zmail@SCRC-STONY-BROOK, bug-lispm@OZ
In-Reply-To: <[MIT-MC.ARPA].696444.851029.CSTACY>
Message-ID: <851030080519.0.JCMA@MORRISON.AI.MIT.EDU>

The problem described below arises because lispms can send mail directly to
host on the internet (and any other net they talk to).  I set the switch to
send directly, using the local host as a mail host.  This should be reasonable
as long as my machine is willing to play the right protocol games.  If not,
either it should or the network protocols should allow for this possibility.
Mail should not just get lost in the cracks.

    Date: Tue, 29 Oct 85 05:30:14 EST
    From: "Christopher C. Stacy" <CSTACY@MIT-MC.ARPA>

    A message was SMTPd over the Internet by a Lisp Machine.  As nearly as I
    can tell from looking at this, the LispM (MORRISON, I think) used its own
    address in the return-path, but created headers which said "@MIT-MC.ARPA"
    in them.  So, when things got gummed up because the sending machine does
    not really provide mail service server, humans decided to come to MIT-MC
    with the problem.

    Workstations should not be sending their own mail if they do not receive
    mail.  In any case they should not be claiming to be MIT-MC when they do
    this.  I am dropping this in your lap since I know REAGAN is where the
    involved user receives his mail, and since it is the only Lisp Machine I
    know of which runs an SMTP server and it is where alot of site dependant
    things are set up an maintained.  Maybe you will forward the problem to
    BUG-LISPM, or maybe it is a site configuration problem you can fix.

    Chris

    ------------ Begin forwarded message ------------

    Date: 28 Oct 85 22:37:12 PST (Mon)
    From: Postmaster at jade.berkeley.edu
    Sender: rhc at jade.berkeley.edu
    To:   Postmaster at mit-mc.arpa
    Re:   Undelivered Mail

    It's fairly tacky to advertize an address which refuses Mail.

    It's also fairly tacky to refuse a valid address;
    we are fixing that bug, now that this message has discovered it..

    ------- Forwarded Message

    Forwarded: 28 Oct 85 22:32:28 PST (Mon)
    Forwarded: To: STHORSON@SUVM.BITNET
    Received: from UCB-VAX (ucbvax.ARPA)
	    by ucbjade.Berkeley.Edu (4.19/4.40)
	    id AA04005; Sat, 26 Oct 85 14:25:40 pdt
    Received: by UCB-VAX (5.29/5.14)
	    id AA16171; Sat, 26 Oct 85 14:20:59 PDT
    Subject: Returned mail: Remote protocol error
    Received: by ucbjade.Berkeley.Edu (4.19/4.40)
	    id AA03353; Sat, 26 Oct 85 13:57:28 pdt
    Date: Fri, 25 Oct 85 23:41 EDT
    From: MAILER-DAEMON@ucbjade (Mail Delivery Subsystem)
    Subject: Returned mail: Remote protocol error
    Message-Id: <8510262057.AA03353@ucbjade.Berkeley.Edu>
    To: <MAILER-DAEMON@ucbjade>
    To: <@[128.52.22.45]:jcma@MIT-MC.ARPA>

       ----- Transcript of session follows -----
    >>> MAIL From:<MAILER-DAEMON@ucbjade>
    <<< 550  This host does not offer mail service.
    554 <@[128.52.22.45]:jcma@MIT-MC.ARPA>... Remote protocol error: Bad file number

       ----- Unsent message follows -----
    Received: by UCB-VAX (5.29/5.14)
	    id AA16163; Sat, 26 Oct 85 14:20:59 PDT
    Received: by ucbjade.Berkeley.Edu (4.19/4.40)
	    id AA03353; Sat, 26 Oct 85 13:57:28 pdt
    Date: Fri, 25 Oct 85 23:41 EDT
    From: MAILER-DAEMON@ucbjade (Mail Delivery Subsystem)
    Subject: Returned mail: Remote protocol error
    Message-Id: <8510262057.AA03353@ucbjade.Berkeley.Edu>
    To: <@[128.52.22.45]:jcma@MIT-MC.ARPA>

       ----- Transcript of session follows -----
    >>> MAIL From:<@[128.52.22.45]:jcma@MIT-MC.ARPA>
    <<< 500 Illegal mailbox specification
    554 <STHORSON@SUVM.BITNET>... Remote protocol error

       ----- Unsent message follows -----
    Received: from UCB-VAX (ucbvax.ARPA)
	    by ucbjade.Berkeley.Edu (4.19/4.40)
	    id AA02797; Sat, 26 Oct 85 13:41:41 pdt
    Received: by UCB-VAX (5.29/5.14)
	    id AA03619; Fri, 25 Oct 85 20:39:27 PDT
    Date: Fri, 25 Oct 85 23:41 EDT
    From: jcma@MIT-MC.ARPA
    Subject: ISA Panel
    To: STHORSON@SUVM.BITNET
    Cc: gavan@MIT-MC.ARPA, jcma@MIT-MC.ARPA
    Message-Id: <851025234135.1.JCMA@MORRISON.AI.MIT.EDU>

    How about firing your abstract off to me ASAP?  We are already
    a month late so we don't want to tempt fate anymore than necessary.

    I need also need:

    1) Your addresses (both authors) and phone numbers
    2) Kristi's net address
    3) Your ISA membership statuses (stati?).


    ------- End of Forwarded Message
30-Oct-85 08:06:29-EST,4976;000000000000
Received: from MIT-REAGAN.ARPA by MIT-OZ via Chaosnet; 30 Oct 85 08:06-EST
Received: from MORRISON by REAGAN via CHAOS with CHAOS-MAIL id 10456; Wed 30-Oct-85 08:06:39-EST
Date: Wed, 30 Oct 85 08:05 EST
From: jcma@MIT-MC
Subject: Direct Mail Sending
To: CSTACY@MIT-MC
cc: POSTMASTER@MIT-MC, Postmaster@BBN-JADE, bug-zmail@SCRC-STONY-BROOK,
    bug-lispm@OZ
In-Reply-To: <[MIT-MC.ARPA].696444.851029.CSTACY>
Supersedes: <851030080519.0.JCMA@MORRISON.AI.MIT.EDU>
Message-ID: <851030080555.1.JCMA@MORRISON.AI.MIT.EDU>

The problem described below arises because lispms can send mail directly to
host on the internet (and any other net they talk to).  I set the switch to
send directly, using the local host as a mail host.  This should be reasonable
as long as my machine is willing to play the right protocol games.  If not,
either it should or the network protocols should allow for this possibility.
Mail should not just get lost in the cracks.

    Date: Tue, 29 Oct 85 05:30:14 EST
    From: "Christopher C. Stacy" <CSTACY@MIT-MC.ARPA>

    A message was SMTPd over the Internet by a Lisp Machine.  As nearly as I
    can tell from looking at this, the LispM (MORRISON, I think) used its own
    address in the return-path, but created headers which said "@MIT-MC.ARPA"
    in them.  So, when things got gummed up because the sending machine does
    not really provide mail service server, humans decided to come to MIT-MC
    with the problem.

    Workstations should not be sending their own mail if they do not receive
    mail.  In any case they should not be claiming to be MIT-MC when they do
    this.  I am dropping this in your lap since I know REAGAN is where the
    involved user receives his mail, and since it is the only Lisp Machine I
    know of which runs an SMTP server and it is where alot of site dependant
    things are set up an maintained.  Maybe you will forward the problem to
    BUG-LISPM, or maybe it is a site configuration problem you can fix.

    Chris

    ------------ Begin forwarded message ------------

    Date: 28 Oct 85 22:37:12 PST (Mon)
    From: Postmaster at jade.berkeley.edu
    Sender: rhc at jade.berkeley.edu
    To:   Postmaster at mit-mc.arpa
    Re:   Undelivered Mail

    It's fairly tacky to advertize an address which refuses Mail.

    It's also fairly tacky to refuse a valid address;
    we are fixing that bug, now that this message has discovered it..

    ------- Forwarded Message

    Forwarded: 28 Oct 85 22:32:28 PST (Mon)
    Forwarded: To: STHORSON@SUVM.BITNET
    Received: from UCB-VAX (ucbvax.ARPA)
	    by ucbjade.Berkeley.Edu (4.19/4.40)
	    id AA04005; Sat, 26 Oct 85 14:25:40 pdt
    Received: by UCB-VAX (5.29/5.14)
	    id AA16171; Sat, 26 Oct 85 14:20:59 PDT
    Subject: Returned mail: Remote protocol error
    Received: by ucbjade.Berkeley.Edu (4.19/4.40)
	    id AA03353; Sat, 26 Oct 85 13:57:28 pdt
    Date: Fri, 25 Oct 85 23:41 EDT
    From: MAILER-DAEMON@ucbjade (Mail Delivery Subsystem)
    Subject: Returned mail: Remote protocol error
    Message-Id: <8510262057.AA03353@ucbjade.Berkeley.Edu>
    To: <MAILER-DAEMON@ucbjade>
    To: <@[128.52.22.45]:jcma@MIT-MC.ARPA>

       ----- Transcript of session follows -----
    >>> MAIL From:<MAILER-DAEMON@ucbjade>
    <<< 550  This host does not offer mail service.
    554 <@[128.52.22.45]:jcma@MIT-MC.ARPA>... Remote protocol error: Bad file number

       ----- Unsent message follows -----
    Received: by UCB-VAX (5.29/5.14)
	    id AA16163; Sat, 26 Oct 85 14:20:59 PDT
    Received: by ucbjade.Berkeley.Edu (4.19/4.40)
	    id AA03353; Sat, 26 Oct 85 13:57:28 pdt
    Date: Fri, 25 Oct 85 23:41 EDT
    From: MAILER-DAEMON@ucbjade (Mail Delivery Subsystem)
    Subject: Returned mail: Remote protocol error
    Message-Id: <8510262057.AA03353@ucbjade.Berkeley.Edu>
    To: <@[128.52.22.45]:jcma@MIT-MC.ARPA>

       ----- Transcript of session follows -----
    >>> MAIL From:<@[128.52.22.45]:jcma@MIT-MC.ARPA>
    <<< 500 Illegal mailbox specification
    554 <STHORSON@SUVM.BITNET>... Remote protocol error

       ----- Unsent message follows -----
    Received: from UCB-VAX (ucbvax.ARPA)
	    by ucbjade.Berkeley.Edu (4.19/4.40)
	    id AA02797; Sat, 26 Oct 85 13:41:41 pdt
    Received: by UCB-VAX (5.29/5.14)
	    id AA03619; Fri, 25 Oct 85 20:39:27 PDT
    Date: Fri, 25 Oct 85 23:41 EDT
    From: jcma@MIT-MC.ARPA
    Subject: ISA Panel
    To: STHORSON@SUVM.BITNET
    Cc: gavan@MIT-MC.ARPA, jcma@MIT-MC.ARPA
    Message-Id: <851025234135.1.JCMA@MORRISON.AI.MIT.EDU>

    How about firing your abstract off to me ASAP?  We are already
    a month late so we don't want to tempt fate anymore than necessary.

    I need also need:

    1) Your addresses (both authors) and phone numbers
    2) Kristi's net address
    3) Your ISA membership statuses (stati?).


    ------- End of Forwarded Message
30-Oct-85 14:01:05-EST,1441;000000000000
Mail-From: GZ created at 30-Oct-85 14:00:58
Received: from MIT-RIEMANN by MIT-OZ via Chaosnet; 28 Oct 85 16:40-EST
Date: Mon, 28 Oct 85 16:40 EST
From: Philippe Brou <PHILIP@OZ>
Subject: DIS:WRITE-DISTRIBUTION-TAPE
To: BUG-SYMBOLICS@OZ
cc: philip@OZ
Message-ID: <"851028164009.1.philip@OZ"@RIEMANN.AI.MIT.EDU>
ReSent-Date: Wed 30 Oct 85 14:00:58-EST
ReSent-From: "Gail Zacharias" <GZ@MIT-OZ>
ReSent-To: bug-lispm@MIT-OZ
ReSent-Message-ID: <12155300699.85.GZ@MIT-OZ>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 10.6,
microcode TMC5-MIC 319, FEP 17, on Lisp Machine Georg Friedrich Bernhard Riemann:

(DIS:WRITE-DISTRIBUTION-TAPE) does not dump files that are specified
using (:FASLOAD...). These are usually data files which have no LISP
sources.  This has already made it necessary for me to come back to the
lab to get a single data file for a Symbolics symposium where I was
going to demo by CAD system.

It also makes it necessary to create a pseudo-system for such
files. 

It would also be nice if we could use (:SKIP :FASLOAD ...) to 
specify other files (and modules) which are not in the system 
but often have to be carried around (such as sys:site;...system).
[By looking at demo tapes from Symbolics, it is clear that the
same problem exists there since the defsystem file often 
includes a pseudo-system just for the sys:site; files].

Note that, it correctly dumps (:LOAD-BFD  files).

31-Oct-85 09:56:44-EST,2293;000000000000
Received: from MIT-MC.ARPA by MIT-OZ via Chaosnet; 31 Oct 85 09:56-EST
Received: from 40700015427 by MIT-MC.ARPA via Chaosnet; 31 OCT 85  09:57:07 EST
Date: Thursday, 31 October 1985, 09:56-EST
From: Cory Myers <cory at MIT-BUGS-BUNNY>
Subject: Lambda Lists
To: BUG-LISPM at OZ
Message-ID: <851031095657.1.CORY@DAFFY-DUCK.MIT.EDU>

In Symbolics 3670 Release 6.0, IP-TCP 29.0,
microcode TMC5-IO4-FPA-MIC 319, FEP 22, with UTIL, on Lisp Machine Daffy Duck:

I have had several problems with lambda-lists.

1. I try (defun foo (&allow-other-keys) t) and I get the error that
&allow-other-keys is illegal in this position in the lambda list (from
si:digest-lamda).  According to Volume 2, page 152 this should be a
legal lambda list.  It looks like si:digest-lambda looks for
&allow-other-keys only when a &key is present.  This would be ok except
that then I try:

2. I try (defun foo (&key &allow-other-keys) t).  This works interpreted
but gives the following error when I compile foo and then try (foo :a
'a).  (arglist 'foo) returns (&KEY &ALLOW-OTHER-KEYS) ^ NIL ^ NIL.

>>Trap: The function FOO was called with too many arguments.
While in the function FOO  SI:*EVAL  (:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0)

FOO:
   --Extraneous args:--
   Arg 0: :A
   Arg 1: A

SI:*EVAL:  (P.C. = 403)
   Arg 0 (FORM): (FOO :A (QUOTE A))
   Local 0 (FORM): NIL
   --Defaulted args:--
   Arg 1 (ENV): NIL
   Arg 2 (HOOK): NIL

(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0):  (P.C. = 152)
   Arg 0 (.LEXICAL-ENVIRONMENT-POINTER.): #<DTP-LOCATIVE 500047>

TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
   Arg 0 (NEW-MODE): :BLAST
   Arg 1 (STREAM): #:TERMINAL-IO-SYN-STREAM
   Arg 2 (CONTINUATION): #<LEXICAL-CLOSURE (:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0) 500054>

SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
   Arg 0 (NAME): "Lisp Top Level"
   Arg 1 (ABORT-FUNCTION): NIL
   Arg 2 (READ-FUNCTION): NIL
   Arg 3 (EVAL-FUNCTION): NIL
   Arg 4 (PRINT-FUNCTION): NIL

SI:LISP-COMMAND-LOOP:  (P.C. = 67)
   Arg 0: #<LISP-LISTENER Lisp Listener 1 43200216 exposed>
   Rest arg: (:NAME "Lisp Top Level")

SI:LISP-TOP-LEVEL1:  (P.C. = 5)
   Arg 0 (STREAM): #<LISP-LISTENER Lisp Listener 1 43200216 exposed>

SI:LISP-TOP-LEVEL:  (P.C. = 7)
31-Oct-85 16:20:57-EST,448;000000000000
Received: from MIT-MC.ARPA by MIT-OZ via Chaosnet; 31 Oct 85 16:20-EST
Date: Thu, 31 Oct 85 16:21:04 EST
From: Bill Long <WJL@MIT-MC.ARPA>
To: BUG-LISPM@MIT-MC.ARPA
Message-ID: <[MIT-MC.ARPA].700173.851031.WJL>

On Starling, a 3640 running 6.0
I used <network>x to turn wallpapering on.  It claimed to put all my
dribble into oberon:usrd$:[wjl]foo.txt but when I turned wallpapering
off, no such file existed.  What happened?
-Bill Long
31-Oct-85 16:22:32-EST,315;000000000000
Received: from MIT-MC.ARPA by MIT-OZ via Chaosnet; 31 Oct 85 16:22-EST
Date: Thu, 31 Oct 85 16:23:03 EST
From: Bill Long <WJL@MIT-MC.ARPA>
To: BUG-LISPM@MIT-MC.ARPA
Message-ID: <[MIT-MC.ARPA].700180.851031.WJL>

How do I convince meta-Q to leave lines starting with "."
alone?  (I'm an R user.)
-Bill Long
 1-Nov-85 12:30:11-EST,1738;000000000000
Received: from MIT-REAGAN.ARPA by MIT-OZ via Chaosnet; 1 Nov 85 12:30-EST
Received: from SCRC-QUABBIN.MIT.EDU by REAGAN.AI.MIT.EDU via INTERNET with SMTP id 10641; 1 Nov 85 12:32:19-EST
Received: from NEPONSET.SCRC.Symbolics.COM by SCRC-QUABBIN.ARPA via CHAOS with CHAOS-MAIL id 216952; Fri 1-Nov-85 12:30:50-EST
Date: Fri, 1 Nov 85 12:34 EST
From: David C. Plummer <DCP@SCRC-QUABBIN.ARPA>
Subject: Lambda Lists
To: Cory Myers <cory@MIT-BUGS-BUNNY.ARPA>, BUG-LISPM@OZ.mit
In-Reply-To: <851031095657.1.CORY@DAFFY-DUCK.MIT.EDU>
Message-ID: <851101123415.4.DCP@NEPONSET.SCRC.Symbolics.COM>

    Date: Thursday, 31 October 1985, 09:56-EST
    From: Cory Myers <cory at MIT-BUGS-BUNNY>

    In Symbolics 3670 Release 6.0, IP-TCP 29.0,
    microcode TMC5-IO4-FPA-MIC 319, FEP 22, with UTIL, on Lisp Machine Daffy Duck:

    I have had several problems with lambda-lists.

    1. I try (defun foo (&allow-other-keys) t) and I get the error that
    &allow-other-keys is illegal in this position in the lambda list (from
    si:digest-lamda).  According to Volume 2, page 152 this should be a
    legal lambda list.  It looks like si:digest-lambda looks for
    &allow-other-keys only when a &key is present.  This would be ok except
    that then I try:

    2. I try (defun foo (&key &allow-other-keys) t).  This works interpreted
    but gives the following error when I compile foo and then try (foo :a
    'a).  (arglist 'foo) returns (&KEY &ALLOW-OTHER-KEYS) ^ NIL ^ NIL.

&key &allow-other-keys is a degenerate case our compiler doesn't hack.
Semantically, I'm not really sure it should since you aren't accepting
anything that might be useful and you didn't declare a &rest arg so you
could pass it on.

 5-Nov-85 12:33:29-EST,638;000000000000
Received: from MIT-MC.ARPA by MIT-OZ via Chaosnet; 5 Nov 85 12:33-EST
Received: from MIT-LISPM-9 by MIT-MC.ARPA via Chaosnet; 5 NOV 85  12:21:07 EST
Date: Tuesday, 5 November 1985, 12:21-EST
From: Devon S. McCullough <Devon@MIT-MC>
To: BUG-LISPM@MIT-OZ
CC: devon@MIT-MC

In System 99.27, CADR 4.2, Experimental ZMail 54.4, MIT-Specific 23.0,
Experimental Macsyma 6.1, microcode 320, GC@2, on Lisp Machine Nine:

Documentation string for TV:GRIND-INTO-LIST incorrectly describes the
second returned value as (location :LOCATIVE flag start-index end-index)
when in fact it looks like (location :LOCATIVE start-index end-index)
 6-Nov-85 14:53:52-EST,4036;000000000000
Received: from MIT-EDDIE.ARPA by MIT-OZ via Chaosnet; 6 Nov 85 14:53-EST
Received: from MEDIA-LAB (2005512) by mit-eddie (4.12/4.7)
	id AA01856; Wed, 6 Nov 85 14:44:00 est
Received: from ZAXXON.ARPA (5005512) by MEDIA-LAB (4.12/4.8)  id AA29877; Wed, 6 Nov 85 14:54:45 est
Received: from XEVIOUS.ARPA by ZAXXON.ARPA via INTERNET with SMTP id 13; 6 Nov 85 14:53:42-EST
Date: Wed, 6 Nov 85 14:51 EST
From: Steve Strassmann <STRAZ@MEDIA-LAB.MIT.EDU>
Subject: Lossage in TCP file transfers from AMT lispms to XX
To: bug-tcp@MIT-XX.ARPA, BUG-LISPM@MEDIA-LAB.MIT.EDU
Message-Id: <851106145124.1.STRAZ@XEVIOUS.ARPA>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, Experimental COLOR 135.1,
Experimental COLOR-DEMO 68.0, Experimental IMAGES 56.0,
Experimental COLOR-EDITOR 4.0, Experimental COLOR-PALETTE 2.0,
Experimental MENU 6.0, microcode TMC5-MIC 319, on Xevious:

This happens upon trying to write a text file (from the editor) to XX
via TCP.  The directory ends up with an empty file, and the filejob goes
away.  This is repeatable.

>>Error: Unknown response from host: 2048 (8) bytes transferred. (expecting (226 250 426 451)).
While in the function (:DEFUN-METHOD FS:TCP-FTP-CHECK-COMMAND-RESPONSE)  (:METHOD FS:TCP-FTP-CONN :DATA-STREAM-CLOSE)  (:METHOD TCP::FTP-AUX-STREAM :AFTER :CLOSE)

(:DEFUN-METHOD FS:TCP-FTP-CHECK-COMMAND-RESPONSE):  (P.C. = 222)
   Arg 0 (SELF): #<TCP-FTP-CONN 17604544>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:TCP-FTP-CONN -- 8. IV's, 0. FL's 1156706>
   Arg 2 (EXPECTED-VALUE): (226 250 426 451)
   --Defaulted args:--
   Arg 3 (CTL-STRING): NIL
   Rest arg (ARGS): NIL
   Local 5: SYS:UNWIND-PROTECT-TAG
   Local 6: #<DTP-ODD-PC 76567657>
   Local 7: #<DTP-LOCATIVE 36200210>
   Local 8: #<DTP-LOCATIVE 43440364>
   Local 9 (OLD-STATE): :OPEN
   Local 10 (NUM): 2048
   Local 11 (LINE): "2048 (8) bytes transferred."
   Local 12 (ELEM): NIL

(:METHOD FS:TCP-FTP-CONN :DATA-STREAM-CLOSE):  (P.C. = 52)
   Arg 0 (SELF): #<TCP-FTP-CONN 17604544>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:TCP-FTP-CONN -- 8. IV's, 0. FL's 1156706>
   Arg 2 (OPERATION): :DATA-STREAM-CLOSE
   Arg 3 (STREAM): #<FTP-STREAM-MODE-CHARACTER-OUTPUT-STREAM "MIT-XX:PS:<MT.CLISP.OBL>SYSDEF.LISP" 17605765>
   Arg 4 (ABORT-P): NIL

(:METHOD TCP::FTP-AUX-STREAM :AFTER :CLOSE):  (P.C. = 7)
   Arg 0 (SELF): #<FTP-STREAM-MODE-CHARACTER-OUTPUT-STREAM "MIT-XX:PS:<MT.CLISP.OBL>SYSDEF.LISP" 17605765>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TCP::FTP-AUX-STREAM -- 3. IV's, 0. FL's 1143563>
   Arg 2 (OPERATION): :CLOSE
   Arg 3 (ABORT-P): NIL

(:METHOD TCP::FTP-STREAM-MODE-CHARACTER-OUTPUT-STREAM :COMBINED :CLOSE):  (P.C. = 37)
   Arg 0 (SELF): #<FTP-STREAM-MODE-CHARACTER-OUTPUT-STREAM "MIT-XX:PS:<MT.CLISP.OBL>SYSDEF.LISP" 17605765>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TCP::FTP-STREAM-MODE-CHARACTER-OUTPUT-STREAM -- 1. IV's, 8. FL's 1144431>
   Arg 2 (.OPERATION.): :CLOSE
   Rest arg (.DAEMON-CALLER-ARGS.): (NIL)

CLOSE:  (P.C. = 6)
   Arg 0 (STREAM): #<FTP-STREAM-MODE-CHARACTER-OUTPUT-STREAM "MIT-XX:PS:<MT.CLISP.OBL>SYSDEF.LISP" 17605765>
   --Defaulted args:--
   Arg 1 (ABORTP): NIL

(:METHOD ZWEI:FILE-BUFFER-MIXIN :SAVE):  (P.C. = 203)
   Arg 0 (SELF): #<FILE-BUFFER "SYSDEF.LISP PS:<MT.CLISP.OBL> MIT-XX:" 76100105>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:FILE-BUFFER-MIXIN -- 9. IV's, 0. FL's 104512643>
   Arg 2 (OPERATION): :SAVE

ZWEI:SAVE-BUFFER:  (P.C. = 203)
   Arg 0 (BUFFER): #<FILE-BUFFER "SYSDEF.LISP PS:<MT.CLISP.OBL> MIT-XX:" 76100105>

ZWEI:COM-SAVE-FILE:  (P.C. = 14)

Rest of stack:
ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
ZWEI:MAKE-EXTENDED-COMMAND-INTERNAL:  (P.C. = 107)
Closure of ZWEI:MAKE-EXTENDED-COMMAND-INTERNAL:
ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 233)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 60)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 51)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)


 6-Nov-85 17:23:23-EST,1323;000000000000
Received: from MIT-MC.ARPA by MIT-OZ via Chaosnet; 6 Nov 85 17:19-EST
Received: from MIT-CHERRY.ARPA by MIT-MC.ARPA via Chaosnet; 6 NOV 85  16:56:22 EST
Date: Wednesday, 6 November 1985, 16:56-EST
From: Soley@MIT-MC
Subject: Common Lisp meeting
To: RZ@ZERMATT
cc: Soley@MIT-MC, INFO-LISPM-MIT@OZ, INFO-NIL@MIT-MC,
    INFO-MACLISP-LOCALS@MIT-MC
In-Reply-To: The message of 6 Nov 85 10:27-EST from Richard E. Zippel <RZ at ZERMATT>
Message-ID: <851106165614.1.SOLEY@CHERRY.MIT.EDU>

    Date: Wed, 6 Nov 85 10:27 EST
    From: Richard E. Zippel <RZ at MIT-ZERMATT.ARPA>
    To:   Soley at MIT-MC.ARPA
    Re:   Common Lisp meeting

	Date: Tue, 5 Nov 85 17:04 EST
	From: Soley@MIT-MC.ARPA

	    Date: Tue, 5 Nov 85 10:59 EST
	    From: Richard E. Zippel <RZ@MIT-ZERMATT.ARPA>

	    Is there any organization among the MIT people as to who will represent
	    MIT at the meeting?

    Do you want to send a message out to BUG-LISPM, INFO-LISPM asking for
    volunteers?

RZ has pointed out that there should probably be some organization among
the MIT people attending the next Common Lisp meeting, especially since
there will probably be a limit to the number of VOTING attendees from
each organization.  Anyone want to volunteer, or have any other good
organizational ideas?

	-- Richard
 7-Nov-85 12:00:52-EST,484;000000000000
Received: from MIT-REAGAN.ARPA by MIT-OZ via Chaosnet; 7 Nov 85 12:00-EST
Received: from SID by REAGAN via CHAOS with CHAOS-MAIL id 13954; Thu 7-Nov-85 09:36:57-EST
Date: Thu, 7 Nov 85 09:36 EST
From: David Chapman <Zvona@OZ>
Subject: gc-off should be undoable
To: BUG-LISPM@OZ
Message-ID: <851107093610.1.ZVONA@SID.AI.MIT.EDU>

In Symbolics 3670 Release 6.0, IP-TCP 29.0, AISite 10.6,
microcode TMC5-IO4-MIC 319, FEP 22, on Lisp Machine Sid Vicious:

from a login-forms.
 8-Nov-85 04:43:53-EST,1187;000000000000
Received: from MIT-MC.ARPA by MIT-OZ via Chaosnet; 8 Nov 85 04:43-EST
Received: from MIT-REAGAN.ARPA by MIT-MC.ARPA via Chaosnet; 8 NOV 85  04:29:23 EST
Received: from OZ by REAGAN via CHAOS with CHAOS-MAIL id 14030; Fri 8-Nov-85 04:29:54-EST
Received: from MIT-MORRISON by MIT-OZ via Chaosnet; 8 Nov 85 04:29-EST
Date: Fri, 8 Nov 85 04:29 EST
From: jcma@MIT-MC.ARPA
Subject: Converse Address Lossage over Internet [Combined with source retension pinheadedness]
To: BUG-LISPM@MIT-REAGAN.ARPA
Message-ID: <851108042931.8.JCMA@MORRISON.AI.MIT.EDU>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 10.6,
Experimental RELATUS 145.26, microcode TMC5-MIC 319, FEP 22, on Lisp Machine Jim Morrison:

I have been using converse to communicate with a collaborator in Texas.  He
gets my qsends with the return address JCMA%MORRISON@MIT-REAGAN.  This brain
damage cannot be fixed by me because we don't have the sources for qsend, even
though it was written at MIT!  I would like a fix to this ASAP.   If this is
too much trouble, kindly hand over the sources so I can fix it.

Note that login host, mail network host, default mail host, and host for bug
reports is reagan.
 8-Nov-85 05:11:42-EST,2057;000000000000
Received: from MIT-MC.ARPA by MIT-OZ via Chaosnet; 8 Nov 85 05:11-EST
Received: from MIT-REAGAN.ARPA by MIT-MC.ARPA via Chaosnet; 8 NOV 85  05:07:57 EST
Received: from OZ by REAGAN via CHAOS with CHAOS-MAIL id 14032; Fri 8-Nov-85 05:08:41-EST
Received: from MIT-MORRISON by MIT-OZ via Chaosnet; 8 Nov 85 05:07-EST
Date: Fri, 8 Nov 85 05:08 EST
From: jcma@MIT-MC.ARPA
Subject: Converse Address Lossage over Internet [Brain in 2nd gear, flaming turned down]
To: BUG-LISPM@MIT-REAGAN.ARPA
cc: joseph@SCRC-STONY-BROOK.ARPA, jnc@MIT-MC.ARPA
Message-ID: <851108050816.3.JCMA@MORRISON.AI.MIT.EDU>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 10.6,
Experimental RELATUS 145.26, microcode TMC5-MIC 319, FEP 22, on Lisp Machine Jim Morrison:

[disregard previous flaming message]

I have been trying to use Converse to communicate with a collaborator in
Texas.  

THE SITUATION:  the other user has modified their namespace so that it knows
the internet address of Morrison.  Sends to me.  I respond (no problem because
his lispm is listed in the internet host table).  Now, since my lispm has an
internet address, it should put something reasonable in for the return
address.  It cannot know (maybe it could) that his namespace knows about
Morrison.  It knows that it is not listed in the internet host table.  So,
instead of jcma%morrison@reagan it could use the internet address.  At least
it would get a reply that way.  Alternatively, jcma%morrison@reagan could be
made to work by using a send forwarding service by the mailer.  (Of course,
that doesn't work now.)

THE PROBLEM is the absence of domain hacking that is causing the whole thing
to lose.  His lispm is trying to send to MORRISON.AI.MIT.EDU but cannot not
find out about the host.  So, the kludge is to list morrison in the internet
host table at the NIC.

THE REAL FIX is for Symbolics to get their act in gear and implment domains,
instead of giving up because it is too hard!

(or some gateways at MIT don't know how to figure out where morrison is)
 8-Nov-85 11:39:18-EST,4574;000000000000
Received: from MIT-MC.ARPA by MIT-OZ via Chaosnet; 8 Nov 85 11:39-EST
Received: from MIT-TWEETY-PIE.ARPA by MIT-MC.ARPA via Chaosnet; 8 NOV 85  11:34:55 EST
Date: Friday, 8 November 1985, 11:34-EST
From: Webster Dove <dove at MIT-BUGS-BUNNY>
Subject: Defining new method combination types and FLAVEX
To: BUG-LISPM at OZ
Message-ID: <851108113443.1.DOVE@TWEETY-PIE.MIT.EDU>

In Symbolics 3600 Release 6.0, IP-TCP 29.0,
microcode TMC5-IO4-FPA-MIC 319, with UTIL, on Lisp Machine Tweety Pie:

I defined a new method combination type :FOO and build a flavor FLAV
using it for the message :MSG.

(SI:DEFINE-SIMPLE-METHOD-COMBINATION :FOO AND T)

(DEFFLAVOR FLAV ()
	   ()
  (:METHOD-COMBINATION
   (:FOO :BASE-FLAVOR-LAST :MSG)))

(DEFMETHOD (FLAV :FOO :MSG) () (PRINT '(FOO FOR FLAV)))

(COMPILE-FLAVOR-METHODS FLAV)

I then when into the Flavor Examiner and tried to look at all the
handlers for the flavor FLAV.

I see in the Flavor Examiner code the trick to do (modify the alist of
method-combination-types and flavor-examiner-handlers). This could be
done in define-simple-method-combination.  However, I also have soe very
esoteric method combination mechanisms whcih I define directly using
(method-combination-name si:method-combination) functioons and I would
like to know, in generral, how to interface these to the flavor
examiner.

>>Error: Method combination type NIL unknown.
While in the function (:METHOD FLAVEX:FLAVOR :COMPUTE-ALL-HANDLERS-ONCE)  (:METHOD FLAVEX:FLAVOR :GET-ALL-HANDLERS)  (:METHOD FLAVEX:FRAME :GET-ALL-HANDLERS)

(:METHOD FLAVEX:FLAVOR :COMPUTE-ALL-HANDLERS-ONCE):  (P.C. = 42)
   Arg 0 (SELF): #<FLAVOR (KBSP:FLAV) 240062543>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FLAVEX:FLAVOR -- 16. IV's, 0. FL's 105332701>
   Arg 2 (OPERATION): :COMPUTE-ALL-HANDLERS-ONCE
   --Defaulted args:--
   Arg 3 (FORCE?): NIL
   Local 4 (DUMMY): NIL
   Local 5 (METHOD): NIL
   Local 6 (COMBINATION-TYPE): :FOO
   Local 7: ((:MSG :FOO :BASE-FLAVOR-LAST (:FOO (:METHOD KBSP:FLAV :FOO :MSG))) (:APROPOS NIL NIL (NIL (:METHOD SI:VANILLA-FLAVOR :APROPOS))) (:FUNCALL-INSIDE-YOURSELF NIL NIL (NIL (:METHOD SI:VANILLA-FLAVOR :FUNCALL-INSIDE-YOURSELF))) (:EVAL-INSIDE-YOURSELF NIL NIL (NIL (:METHOD SI:VANILLA-FLAVOR :EVAL-INSIDE-YOURSELF))) (:GET-HANDLER-FOR NIL NIL (NIL (:METHOD SI:VANILLA-FLAVOR :GET-HANDLER-FOR))) (:SEND-IF-HANDLES NIL NIL (NIL (:METHOD SI:VANILLA-FLAVOR :SEND-IF-HANDLES))) (:OPERATION-HANDLED-P NIL NIL (NIL (:METHOD SI:VANILLA-FLAVOR :OPERATION-HANDLED-P))) (:WHICH-OPERATIONS NIL NIL (NIL (:METHOD SI:VANILLA-FLAVOR :WHICH-OPERATIONS))) (:DESCRIBE NIL NIL (NIL (:METHOD SI:VANILLA-FLAVOR :DESCRIBE))) (:PRINT-SELF NIL NIL (:DEFAULT (:METHOD SI:VANILLA-FLAVOR :DEFAULT :PRINT-SELF))))
   Local 8 (MLE): (:MSG :FOO :BASE-FLAVOR-LAST (:FOO (:METHOD KBSP:FLAV :FOO :MSG)))

(:METHOD FLAVEX:FLAVOR :GET-ALL-HANDLERS):  (P.C. = 4)
   Arg 0 (SELF): #<FLAVOR (KBSP:FLAV) 240062543>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FLAVEX:FLAVOR -- 16. IV's, 0. FL's 105332701>
   Arg 2 (OPERATION): :GET-ALL-HANDLERS

(:METHOD FLAVEX:FRAME :GET-ALL-HANDLERS):  (P.C. = 4)
   Arg 0 (SELF): #<FRAME Flavor Examiner 1 43235475 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FLAVEX:FRAME -- 21. IV's, 12. FL's 105332554>
   Arg 2 (OPERATION): :GET-ALL-HANDLERS
   Arg 3 (FLAVOR): #<FLAVOR (KBSP:FLAV) 240062543>

(:METHOD FLAVEX:FRAME :FLAVOR-LEFT-CLICK-MENU):  (P.C. = 17)
   Arg 0 (SELF): #<FRAME Flavor Examiner 1 43235475 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FLAVEX:FRAME -- 21. IV's, 12. FL's 105332554>
   Arg 2 (OPERATION): :FLAVOR-LEFT-CLICK-MENU
   Arg 3 (FLAVOR): #<FLAVOR (KBSP:FLAV) 240062543>

SEND:  (P.C. = 6)
   Arg 0 (OBJECT): #<FRAME Flavor Examiner 1 43235475 exposed>
   Arg 1 (MESSAGE-NAME): :FLAVOR-LEFT-CLICK-MENU
   Rest arg (ARGUMENTS): (#<FLAVOR (KBSP:FLAV) 240062543>)

SI:*EVAL:  (P.C. = 403)
   Arg 0 (FORM): (SEND (QUOTE #<FRAME Flavor Examiner 1 43235475 exposed>) (QUOTE :FLAVOR-LEFT-CLICK-MENU) (QUOTE #<FLAVOR (KBSP:FLAV) 240062543>))
   Local 0 (FORM): NIL
   --Defaulted args:--
   Arg 1 (ENV): NIL
   Arg 2 (HOOK): NIL

(:METHOD FLAVEX:ITEM :HANDLE-CLICK):  (P.C. = 32)
   Arg 0 (SELF): #<ITEM 240062574>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FLAVEX:ITEM -- 7. IV's, 0. FL's 105326705>
   Arg 2 (OPERATION): :HANDLE-CLICK

FLAVEX:FRAME-FUNCTION:  (P.C. = 305)
   Arg 0 (FRAME): #<FRAME Flavor Examiner 1 43235475 exposed>

SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
   Arg 0 (IGNORE): NIL
10-Nov-85 00:49:39-EST,577;000000000000
Received: from MIT-JIMI by MIT-OZ via Chaosnet; 10 Nov 85 00:49-EST
Date: Sun, 10 Nov 85 00:47 EST
From: David Vinayak Wallace <Gumby@MIT-MC>
Subject: standalone editor window
To: BUG-LISPM@OZ
Message-ID: <851110004745.5.GUMBY@JIMI.AI.MIT.EDU>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 10.6,
microcode TMC5-MIC 319, on Lisp Machine Jimi Hendrix:

I have a standalone editor window with tv:pane-mixin mixed in.  It
doesn't update its display when I do a :set-interval-string; not until I
send it an :edit message.  How can I get it to update its display?
11-Nov-85 02:22:39-EST,2520;000000000000
Received: from MIT-EDDIE.ARPA by MIT-OZ via Chaosnet; 11 Nov 85 02:22-EST
Received: from MEDIA-LAB (2005512) by mit-eddie (4.12/4.7)
	id AA19440; Mon, 11 Nov 85 02:18:37 est
Received: from MIT-XX.ARPA (2c00000a) by MEDIA-LAB (4.12/4.8)  id AA13017; Mon, 11 Nov 85 02:22:26 est
Date: Mon, 11 Nov 1985  02:22 EST
Message-Id: <SRA.12158319247.BABYL@MIT-XX.ARPA>
From: Rob Austein <SRA@MIT-XX.ARPA>
To: Charles Hornig <Hornig@SCRC-STONY-BROOK.ARPA>
Cc: BUG-LISPM@MIT-MEDIA-LAB.MIT.EDU, bug-tcp@MIT-XX.ARPA,
        Steve Strassmann <STRAZ@MIT-MEDIA-LAB.MIT.EDU>
Subject: Lossage in TCP file transfers from AMT lispms to XX
In-Reply-To: Msg of 6 Nov 1985  21:53-EST from Charles Hornig <Hornig@SCRC-STONY-BROOK.ARPA>

    Date: Wednesday, 6 November 1985  21:53-EST
    From: Charles Hornig <Hornig@SCRC-STONY-BROOK.ARPA>

	:
	:

    XX is sending the response line "2048 (8) ..." which, as it begins with
    a number, is interpreted as a FTP response by the LispM.  XX should be
    fixed.

[PHOTO:  Recording initiated  Mon 11-Nov-85 2:07AM]

 MIT TOPS-20 Command Processor 5(312142)-2
@ftp xx
< MIT-XX.ARPA FTP Server Process 5Z(32)-7 at Mon 11-Nov-85 02:07-EST
Setting default transfer type to paged.
FTP>log sra
Password: 
< User SRA logged in at Mon 11-Nov-85 02:08-EST, job 34. 
FTP>stat con
Connected to TCP host MIT-XX.ARPA
MIT-XX.ARPA FTP Server Process 5Z(32)-7
The current data transfer parameters are:
    MODE S
    STRU F
    TYPE A N
A connection is open to host MIT-XX.ARPA
The data connection is CLOSED.
FTP>deb
FTP>send login.cmd foo.bar
U: STAT foo.bar.0
S: 213 PS:<SRA>FOO.BAR.3;P777700;ASYS,1,25-Mar-85 21:02:28,25-Mar-85 21:02:28,11-Nov-85 02:06:55,SRA,SRA
U: MODE S
S: 200 Mode S ok.
U: TYPE L 36
S: 200 Type L bytesize 36 ok.
U: STRU P
S: 200 Structure P ok.
U: PORT 10,0,0,44,21,12
S: 200 Port 21.12 at host 10.0.0.44 accepted.
U: STOR PS:<SRA>FOO.BAR.-1
S: 150 Paged Store of <SRA>FOO.BAR.4;P777700;ASYS started.
![OK]
S: 250 Transfer completed. 15 (36) bytes transferred.
FTP>no deb
FTP>exit
@pop

[PHOTO:  Recording terminated  Mon 11-Nov-85 2:08AM]

So you are telling me that FTPSRT isn't allowed to use numbers in the
arbitrary text following the reply code?  Hmm.  Of course I will eat
my words if somebody shows me an example of this *starting* a line,
but I very much doubt that is the case.  Since we run the same FTPSRT
as every other Twenex in the known universe, you'd think somebody'd
have noticed by now.

--Rob
12-Nov-85 17:27:56-EST,875;000000000000
Received: from MIT-ZERMATT.ARPA by MIT-OZ via Chaosnet; 12 Nov 85 17:27-EST
Received: from BRECKENRIDGE by ZERMATT via CHAOS with CHAOS-MAIL id 16232; Tue 12-Nov-85 17:22:52-EST
Date: Tue, 12 Nov 85 17:25 EST
From: Jonathan A Rees <JAR@MIT-MC.ARPA>
Subject: (set-syntax-from-char #\: #\a)
To: BUG-LISPM@MIT-ZERMATT.ARPA
cc: JAR@MIT-MC.ARPA
Message-ID: <851112172523.3.JAR@BRECKENRIDGE.MIT.EDU>

In Symbolics 3640 Release 6.0, IP-TCP 29.0, MLSite 7.3,
Experimental Schema 99.2, microcode TMC5-IO4-ST506-MIC 322, on Lisp Machine Breckenridge:

[Symbolics Common Lisp bug:]

Doing (set-syntax-from-char #\: #\a), according to the CL manual, ought
to be a no-op.  (See bottom of page 361 of CLtL: "only attributes as
shown in table 22-1 are copied.")  Instead, it turns off the
package-prefix-character-ness of colon, which it isn't supposed to be
able to do.
12-Nov-85 17:36:57-EST,2561;000000000000
Received: from MIT-ZERMATT.ARPA by MIT-OZ via Chaosnet; 12 Nov 85 17:36-EST
Received: from BRECKENRIDGE by ZERMATT via CHAOS with CHAOS-MAIL id 16235; Tue 12-Nov-85 17:31:22-EST
Date: Tue, 12 Nov 85 17:33 EST
From: Jonathan A Rees <JAR@MIT-MC.ARPA>
Subject: (set-macro-character #\$ #'(lambda (&rest ignore) 'foo) t)
To: BUG-LISPM@MIT-ZERMATT.ARPA
cc: JAR@MIT-MC.ARPA
Message-ID: <851112173355.6.JAR@BRECKENRIDGE.MIT.EDU>

In Symbolics 3640 Release 6.0, IP-TCP 29.0, MLSite 7.3,
Experimental Schema 99.2, microcode TMC5-IO4-ST506-MIC 322, on Lisp Machine Breckenridge:

The following ought to work, but doesn't.

(set-macro-character #\$ #'(lambda (&rest ignore) 'foo) t)

>>Trap: The first argument given to the ZL:AS-2 instruction, NIL, was not a fixnum.
While in the function SCL::SET-MACRO-CHARACTER-INTERNAL  SET-MACRO-CHARACTER  SI:*EVAL

SCL::SET-MACRO-CHARACTER-INTERNAL:  (P.C. = 21)
   Arg 0 (CHAR): #\$
   Local 0 (CHAR): 36
   Arg 1 (NON-TERMINATING-P): T
   Arg 2 (A-READTABLE): #<READTABLE 120362317>
   Arg 3 (FUNCTION): #<LEXICAL-CLOSURE (:INTERNAL SET-MACRO-CHARACTER 0) 12222763>
   Local 4 (SYNTAX): NIL

SET-MACRO-CHARACTER:  (P.C. = 22)
   Arg 0: #\$
   Arg 1: #<LEXICAL-CLOSURE (LAMBDA # #) 12222757>
   Arg 2 (NON-TERMINATING-P): T
   --Defaulted args:--
   Arg 3 (A-READTABLE): #<READTABLE 120362317>

SI:*EVAL:  (P.C. = 403)
   Arg 0 (FORM): (SET-MACRO-CHARACTER #\$ (FUNCTION (SI:DIGESTED-LAMBDA (LAMBDA # #) NIL 257 327680 NIL (&REST IGNORE) NIL (QUOTE FOO))) T)
   Local 0 (FORM): NIL
   --Defaulted args:--
   Arg 1 (ENV): NIL
   Arg 2 (HOOK): NIL

(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0):  (P.C. = 152)
   Arg 0 (.LEXICAL-ENVIRONMENT-POINTER.): #<DTP-LOCATIVE 36300101>

TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
   Arg 0 (NEW-MODE): :BLAST
   Arg 1 (STREAM): #:TERMINAL-IO-SYN-STREAM
   Arg 2 (CONTINUATION): #<LEXICAL-CLOSURE (:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0) 36300106>

SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
   Arg 0 (NAME): #"Common Lisp Top Level"
   Arg 1 (ABORT-FUNCTION): NIL
   Arg 2 (READ-FUNCTION): NIL
   Arg 3 (EVAL-FUNCTION): NIL
   Arg 4 (PRINT-FUNCTION): NIL

SI:LISP-COMMAND-LOOP:  (P.C. = 67)
   Arg 0: #<COMMON-LISP-LISTENER Common Lisp Listener 1 35207215 exposed>
   Rest arg: (:NAME #"Common Lisp Top Level")

SI:COMMON-LISP-TOP-LEVEL:  (P.C. = 46)
   Arg 0 (WINDOW): #<COMMON-LISP-LISTENER Common Lisp Listener 1 35207215 exposed>

SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
   --Defaulted args:--
   Arg 0 (IGNORE): NIL
12-Nov-85 17:42:50-EST,1343;000000000000
Received: from MIT-ZERMATT.ARPA by MIT-OZ via Chaosnet; 12 Nov 85 17:42-EST
Received: from SCRC-STONY-BROOK.MIT.EDU by ZERMATT.MIT.EDU via INTERNET with SMTP id 16240; 12 Nov 85 17:37:46-EST
Received: from SWALLOW.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 353253; Tue 12-Nov-85 17:39:32-EST
Date: Tue, 12 Nov 85 17:37 EST
From: Michael Greenwald <Greenwald@SCRC-STONY-BROOK.ARPA>
Subject: (set-syntax-from-char #\: #\a)
To: JAR@MIT-MC.ARPA, BUG-LISPM@MIT-ZERMATT.ARPA
In-Reply-To: <851112172523.3.JAR@BRECKENRIDGE.MIT.EDU>
Message-ID: <851112173740.3.GREENWALD@SWALLOW.SCRC.Symbolics.COM>

    Date: Tue, 12 Nov 85 17:25 EST
    From: Jonathan A Rees <JAR@MIT-MC.ARPA>

    In Symbolics 3640 Release 6.0, IP-TCP 29.0, MLSite 7.3,
    Experimental Schema 99.2, microcode TMC5-IO4-ST506-MIC 322, on Lisp Machine Breckenridge:

    [Symbolics Common Lisp bug:]

    Doing (set-syntax-from-char #\: #\a), according to the CL manual, ought
    to be a no-op.  (See bottom of page 361 of CLtL: "only attributes as
    shown in table 22-1 are copied.")  Instead, it turns off the
    package-prefix-character-ness of colon, which it isn't supposed to be
    able to do.

This difference is documented in Vol. 2. of the Encyclopedia Symbolica,
Pg 643, under "SCL and Common Lisp Differences"

12-Nov-85 18:41:28-EST,1569;000000000000
Received: from MIT-ZERMATT.ARPA by MIT-OZ via Chaosnet; 12 Nov 85 18:41-EST
Received: from SCRC-STONY-BROOK.MIT.EDU by ZERMATT.MIT.EDU via INTERNET with SMTP id 16245; 12 Nov 85 18:36:33-EST
Received: from SWALLOW.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 353315; Tue 12-Nov-85 18:35:59-EST
Date: Tue, 12 Nov 85 18:34 EST
From: Michael Greenwald <Greenwald@SCRC-STONY-BROOK.ARPA>
Subject: (set-macro-character #\$ #'(lambda (&rest ignore) 'foo) t)
To: JAR@MIT-MC.ARPA, BUG-LISPM@MIT-ZERMATT.ARPA
In-Reply-To: <851112173355.6.JAR@BRECKENRIDGE.MIT.EDU>
Message-ID: <851112183405.4.GREENWALD@SWALLOW.SCRC.Symbolics.COM>

    Date: Tue, 12 Nov 85 17:33 EST
    From: Jonathan A Rees <JAR@MIT-MC.ARPA>

    In Symbolics 3640 Release 6.0, IP-TCP 29.0, MLSite 7.3,
    Experimental Schema 99.2, microcode TMC5-IO4-ST506-MIC 322, on Lisp Machine Breckenridge:

    The following ought to work, but doesn't.

    (set-macro-character #\$ #'(lambda (&rest ignore) 'foo) t)

    >>Trap: The first argument given to the ZL:AS-2 instruction, NIL, was not a fixnum.
    While in the function SCL::SET-MACRO-CHARACTER-INTERNAL  SET-MACRO-CHARACTER  SI:*EVAL

This is one of the few times I can be happy saying, "Fixed in 6.1",
since you will probably be running it *very* soon.  I think that 6.1 has
already been mailed to MIT.  

(Remember, though, that your other bug report from early September
(about the CL<=>SCL incompatibility of GET-MACRO-CHARACTER of
builtin-macros) won't be changed until release 7.  Sorry.)

12-Nov-85 22:26:26-EST,5630;000000000000
Received: from MIT-JIMI by MIT-OZ via Chaosnet; 12 Nov 85 22:26-EST
Date: Tue, 12 Nov 85 22:24 EST
From: Chris Lindblad <CJL@OZ.AI.MIT.EDU>
Subject: 6.1 NFILE & IP-TCP 29.0
To: BUG-LISPM@OZ.AI.MIT.EDU
Message-ID: <851112222429.1.CJL@JIMI.AI.MIT.EDU>

In Symbolics 3600 Release 6.1, IP-TCP 29.0, 6-1-Patches 1.0, AISite 11.0,
microcode TMC5-MIC 336, on Lisp Machine Jimi Hendrix:

Is there a release of IP-TCP that goes with Release 6.1? 
IP-TCP 29.0 doesn't work too well if I follow the documentation 
for enabling the NFILE protocol. In my initial pass over the 
documentation, I also can't find out which release of IP-TCP
is required. 

>>Error: Protocol :NFILE does not have a TCP port number.
While in the function TCP:PROTOCOL-NAME-TCP-PORT  NETI:|MEDIUM-TCP-((NETWORK INTERNET))-G0663|  NETI:GET-CONNECTION-FOR-SERVICE-TO-HOST

TCP:PROTOCOL-NAME-TCP-PORT:  (P.C. = 14)
   Arg 0 (TCP::PROTOCOL-NAME): :NFILE
   Arg 1 (ERRORP): T

NETI:|MEDIUM-TCP-((NETWORK INTERNET))-G0663|:  (P.C. = 13)
   Arg 0 (NETI:SERVICE-ACCESS-PATH): #<SERVICE-ACCESS-PATH FILE (NFILE) -- REAGAN on INTERNET 12740054>
   Rest arg (NETI:CONNECTION-ARGS): NIL

NETI:GET-CONNECTION-FOR-SERVICE-TO-HOST:  (P.C. = 12)
   Arg 0 (NETI:SERVICE-ACCESS-PATH): #<SERVICE-ACCESS-PATH FILE (NFILE) -- REAGAN on INTERNET 12740054>
   Arg 1 (NET:NETWORK): #<INTERNET-NETWORK INTERNET 43300670>
   Arg 2 (NETI:IMPLEMENTATION): #<MEDIUM-IMPLEMENTATION 6575557>
   Arg 3 (NETI:CONNECTION-ARGS): NIL

NETI:GET-CONNECTION-FOR-SERVICE-ON-MEDIUM:  (P.C. = 262)
   Arg 0 (NETI:MEDIUM): #<MEDIUM-DESCRIPTION on INTERNET 12740017>
   Arg 1 (NETI:SERVICE-ACCESS-PATH): #<SERVICE-ACCESS-PATH FILE (NFILE) -- REAGAN on INTERNET 12740054>
   Arg 2 (NETI:CONNECTION-ARGS): NIL

NETI:GET-CONNECTION-FOR-SERVICE-ON-MEDIUM:  (P.C. = 174)
   Arg 0 (NETI:MEDIUM): #<MEDIUM-DESCRIPTION on INTERNET 12740050>
   Arg 1 (NETI:SERVICE-ACCESS-PATH): #<SERVICE-ACCESS-PATH FILE (NFILE) -- REAGAN on INTERNET 12740054>
   Arg 2 (NETI:CONNECTION-ARGS): (:TOKEN-LIST T)

NET:GET-CONNECTION-FOR-SERVICE:  (P.C. = 7)
   Arg 0 (NETI:SERVICE-ACCESS-PATH): #<SERVICE-ACCESS-PATH FILE (NFILE) -- REAGAN on INTERNET 12740054>
   Rest arg (NETI:CONNECTION-ARGS): (:TOKEN-LIST T)

(:METHOD FS:NFILE-SERVER-UNIT :VALIDATE-CONTROL-STREAM):  (P.C. = 66)
   Arg 0 (SELF): #<NFILE-SERVER-UNIT 12740113>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor FS:NFILE-SERVER-UNIT -- 15. IV's, 0. FL's 120223317>
   Arg 2 (SI:OPERATION): :VALIDATE-CONTROL-STREAM
   Arg 3 (FS:NO-ERROR-P): T

(:METHOD FS:NFILE-ACCESS-PATH :GET-DATA-CHANNEL):  (P.C. = 17)
   Arg 0 (SELF): #<LMFS-NFILE-ACCESS-PATH B using NFILE 12740102>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor FS:NFILE-ACCESS-PATH -- 4. IV's, 2. FL's 146561447>
   Arg 2 (SI:OPERATION): :GET-DATA-CHANNEL
   Arg 3 (FS:DIRECTION): :INPUT

(:METHOD FS:NFILE-ACCESS-PATH :OPEN):  (P.C. = 300)
   Arg 0 (SELF): #<LMFS-NFILE-ACCESS-PATH B using NFILE 12740102>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor FS:NFILE-ACCESS-PATH -- 4. IV's, 2. FL's 146561447>
   Arg 2 (SI:OPERATION): :OPEN
   Arg 3 (FS:REAL-PATHNAME): #<LMFS-PATHNAME "B:>CJL>lispm-init.bin">
   Arg 4 (FS:COMMAND-PATHNAME): #<LMFS-PATHNAME "B:>CJL>lispm-init.bin">
   Rest arg: (:DIRECTION :INPUT :CHARACTERS :DEFAULT)

(:METHOD FS:ACTIVE-PATHNAME-MIXIN :OPEN):  (P.C. = 14)
   Arg 0 (SELF): #<LMFS-PATHNAME "B:>CJL>lispm-init.bin">
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor FS:ACTIVE-PATHNAME-MIXIN -- 1. IV's, 0. FL's 120157311>
   Arg 2 (SI:OPERATION): :OPEN
   Arg 3 (FS:PATHNAME): #<LMFS-PATHNAME "B:>CJL>lispm-init.bin">
   Rest arg (FS:OPTIONS): (:DIRECTION :INPUT :CHARACTERS :DEFAULT)

FS:COMMON-LISP-OPEN:  (P.C. = 450)
   Arg 0 (FS:PATHNAME): #<LMFS-PATHNAME "B:>CJL>lispm-init.bin">
   Arg 1 (FS:KEYWORD-ARGS): (:CHARACTERS :DEFAULT)

OPEN:  (P.C. = 257)
   Arg 0 (FS:PATHNAME): #<LMFS-PATHNAME "B:>CJL>lispm-init.bin">
   Rest arg (FS:KEYWORD-ARGS): (:CHARACTERS :DEFAULT)

FS:LOAD-OPEN:  (P.C. = 122)
   Arg 0 (FS:PATHNAME): #<LMFS-PATHNAME "B:>CJL>lispm-init">
   Arg 1 (FS:NONEXISTENT-OK-FLAG): NIL
   Arg 2 (FS:DONT-SET-DEFAULT-P): T

LOGIN:  (P.C. = 564)
   Arg 0 (SI:USER-NAME): "cjl"
   Local 0 (SI:USER-NAME): "cjl"
   Rest arg: (:HOST NIL :LOAD-INIT-FILE T)

(:PROPERTY SI:COM-LOGIN SI:CP-FUNCTION):  (P.C. = 22)
   Arg 0 (SI:USER): "cjl"
   Arg 1 (SI:HOST): NIL
   Arg 2 (SI:INIT-FILE): :DEFAULT-INIT-FILE

SI:COM-LOGIN:  (P.C. = 24)
   Arg 0 (SI:USER): "cjl"
   Rest arg: NIL

SI:*EVAL:  (P.C. = 401)<<Error printing function name>>
   Arg 0 (SI:FORM): (SI:COM-LOGIN "cjl")
   Local 0 (SI:FORM): NIL
   --Defaulted args:--
   Arg 1 (SI:ENV): NIL
   Arg 2 (SI:HOOK): NIL

(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0):  (P.C. = 152)
   Arg 0 (COMPILER:.LEXICAL-ENVIRONMENT-POINTER.): #<DTP-LOCATIVE 500047>

TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
   Arg 0 (TV:NEW-MODE): :BLAST
   Arg 1 (TV:STREAM): #:TERMINAL-IO-SYN-STREAM
   Arg 2 (TV:CONTINUATION): #<LEXICAL-CLOSURE (:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0) 500054>

SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
   Arg 0 (SI:NAME): "Lisp Top Level"
   Arg 1 (SI:ABORT-FUNCTION): NIL
   Arg 2 (SI:READ-FUNCTION): NIL
   Arg 3 (SI:EVAL-FUNCTION): NIL
   Arg 4 (SI:PRINT-FUNCTION): NIL

SI:LISP-COMMAND-LOOP:  (P.C. = 67)
   Arg 0: #<LISP-LISTENER Lisp Listener 1 43200064 exposed>
   Rest arg: (:NAME "Lisp Top Level")

SI:LISP-TOP-LEVEL1:  (P.C. = 5)
   Arg 0 (SI:STREAM): #<LISP-LISTENER Lisp Listener 1 43200064 exposed>

SI:LISP-TOP-LEVEL:  (P.C. = 7)
13-Nov-85 13:10:54-EST,639;000000000000
Received: from MIT-BUGS-BUNNY.ARPA by MIT-OZ via Chaosnet; 13 Nov 85 13:10-EST
Return-Path: <cory@mit-bugs-bunny>
Received: by mit-bugs-bunny.ARPA (4.12/MIT.1x)
	 on Wed, 13 Nov 85 13:07:09 est; User info-lispm@oz; Host oz
Date: Wed, 13 Nov 85 13:07:09 est
From: Cory Myers <cory@mit-bugs-bunny>
To: info-lispm@oz
Subject: Magnifying Blinker Wanted

I seem to remember once playing with a magnifying blinker but I can not
remember where I saw it.  I find some stuff in HACKS for magnifying blinkers
but the actual blinker definition code is missing.  I would appreciate any
leads.  Thank,

	Cory Myers (cory@mit-bugs-bunny)
14-Nov-85 12:04:35-EST,609;000000000000
Received: from MIT-JANIS by MIT-OZ via Chaosnet; 14 Nov 85 12:04-EST
Date: Thu, 14 Nov 85 12:02 EST
From: Harry L. Voorhees <HLV@OZ>
Subject: growing the data stack
To: BUG-LISPM@OZ
Message-ID: <851114120247.3.HLV@JANIS.AI.MIT.EDU>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 10.6,
microcode TMC5-MIC 319, on Lisp Machine Janis Joplin:

How can I automatically increase the size of the data stack
so that sys:make-stack-array does not result in a data
stack overflow error?  Typically, I'll want to allocate
up to half a megaword of storage on the data stack.
Thanks.

Harry Voorhees
14-Nov-85 13:55:10-EST,562;000000000000
Received: from MIT-MC.ARPA by MIT-OZ via Chaosnet; 14 Nov 85 13:51-EST
Date: Thu, 14 Nov 85 13:52:44 EST
From: David Vinayak Wallace <GUMBY@MIT-MC.ARPA>
Subject:  growing the data stack
To: HLV@MIT-OZ
cc: BUG-LISPM@MIT-OZ
In-reply-to: Msg of Thu 14 Nov 85 12:02 EST from Harry L. Voorhees <HLV at OZ>
Message-ID: <[MIT-MC.ARPA].717997.851114.GUMBY>

The next time the stack blows out look at the condition it signalled
with, and then wrap a condition handler around your initial call.

There's a varibale you can set to tell it how much to grow by.
14-Nov-85 14:17:14-EST,4873;000000000000
Received: from MIT-GOLDILOCKS.ARPA by MIT-OZ via Chaosnet; 14 Nov 85 14:17-EST
Received: from KOALA.MIT.EDU by MIT-GOLDILOCKS.ARPA via CHAOS with CHAOS-MAIL id 9105; Thu 14-Nov-85 14:08:23-EST
Date: Thu, 14 Nov 85 14:08 EST
From: rob%MIT-SPEECH@MIT-MC.ARPA
Sender: sr.jack%MIT-SPEECH@MIT-MC.ARPA
Subject: Deleted Directory
To: BUG-LISPM@MIT-GOLDILOCKS.ARPA
Message-ID: <851114140815.2.JACK@KOALA.MIT.EDU>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, Spire-Macros 5.1,
Attribute 5.6, Compute 5.4, Audio 4.0, Speech-Attributes 4.3,
Display 6.18, Speech-Layouts 6.4, Prtout 4.0, Versatec 5.1, Spire 16.0,
ZOO 6.12, ZOO-SPIRE 2.2, microcode TMC5-MIC 319, on Lisp Machine Koala:

Did someone delete this?  Is this a 6.1 problem?

>>Error: The directory >sys>cl>patch>cl-4 does not exist.
         For SYS: CL; PATCH; CL-4-2.BIN.NEWEST
While in the function (:METHOD FS:HOST-UNIT :COMMAND)  FS:OPEN-CHAOS  (:METHOD FS:QFILE-ACCESS-PATH :OPEN)

(:METHOD FS:HOST-UNIT :COMMAND):  (P.C. = 236)
   Arg 0 (SELF): #<HOST-UNIT 32356514>
   Arg 1 (SELF-MAPPING-TABLE): FS:HOST-UNIT
   Arg 2 (OPERATION): :COMMAND
   Arg 3 (MARK-P): NIL
   Arg 4 (STREAM-OR-HANDLE): (:CREATE "I3046")
   Local 4 (STREAM-OR-HANDLE): "I3046"
   Arg 5 (SIMPLE-P): NIL
   Arg 6 (WHOSTATE): "Open"
   Rest arg (COMMANDS): ("OPEN " :READ " " :BINARY "" "" "" "" "" "" ...)
   Local 8 (HANDLE): "I3046"
   Local 9 (STREAM): NIL
   Local 10 (PKT): #<Chaos Packet 6243372>
   Local 11 (SUCCESS): NIL
   Local 12 (STRING): "I3046 ERROR DNF F The directory >sys>cl>patch>cl-4 does not exist."
   Local 13 (TRANSACTION-ID): "T3092"
   Local 14 (CREATE-P): T
   Local 15 (CONDITION): NIL
   Local 16: T
   Local 17: #<CASE-HANDLER 120711625>
   Local 18: (#<CASE-HANDLER 120662437>)
   Local 19: (#<CASE-HANDLER 120711625> #<CASE-HANDLER 120662437>)

FS:OPEN-CHAOS:  (P.C. = 674)
   Arg 0 (ACCESS-PATH): #<LMFS-QFILE-ACCESS-PATH GOLDY using QFILE 32356503>
   Arg 1 (REAL-PATHNAME): #<LMFS-PATHNAME "GOLDY:>sys>cl>patch>cl-4>cl-4-2.bin">
   Arg 2: #<LOGICAL-PATHNAME "SYS: CL; PATCH; CL-4-2.BIN.NEWEST">
   Arg 3 (OPTIONS): (:DIRECTION :INPUT :CHARACTERS NIL)

(:METHOD FS:QFILE-ACCESS-PATH :OPEN):  (P.C. = 7)
   Arg 0 (SELF): #<LMFS-QFILE-ACCESS-PATH GOLDY using QFILE 32356503>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:QFILE-ACCESS-PATH -- 4. IV's, 0. FL's 104676437>
   Arg 2 (OPERATION): :OPEN
   Arg 3 (REAL-PATHNAME): #<LMFS-PATHNAME "GOLDY:>sys>cl>patch>cl-4>cl-4-2.bin">
   Arg 4 (PATHNAME): #<LOGICAL-PATHNAME "SYS: CL; PATCH; CL-4-2.BIN.NEWEST">
   Rest arg (OPTIONS): (:DIRECTION :INPUT :CHARACTERS NIL)

(:METHOD FS:ACTIVE-PATHNAME-MIXIN :OPEN):  (P.C. = 14)
   Arg 0 (SELF): #<LMFS-PATHNAME "GOLDY:>sys>cl>patch>cl-4>cl-4-2.bin">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:ACTIVE-PATHNAME-MIXIN -- 1. IV's, 0. FL's 104225115>
   Arg 2 (OPERATION): :OPEN
   Arg 3 (PATHNAME): #<LOGICAL-PATHNAME "SYS: CL; PATCH; CL-4-2.BIN.NEWEST">
   Rest arg (OPTIONS): (:DIRECTION :INPUT :CHARACTERS NIL)

(:DEFUN-METHOD FS:LOGICAL-PATHNAME-PASS-ON):  (P.C. = 10)
   Arg 0 (SELF): #<LOGICAL-PATHNAME "SYS: CL; PATCH; CL-4-2.BIN.NEWEST">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:LOGICAL-PATHNAME -- 8. IV's, 3. FL's 104206646>
   Arg 2 (MESSAGE): :OPEN
   Rest arg (REST): (#<LOGICAL-PATHNAME "SYS: CL; PATCH; CL-4-2.BIN.NEWEST"> :DIRECTION :INPUT :CHARACTERS NIL)

(:METHOD FS:LOGICAL-PATHNAME :OPEN):  (P.C. = 10)
   Arg 0 (SELF): #<LOGICAL-PATHNAME "SYS: CL; PATCH; CL-4-2.BIN.NEWEST">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:LOGICAL-PATHNAME -- 8. IV's, 3. FL's 104206646>
   Arg 2 (OPERATION): :OPEN
   Rest arg (.ARGS.): (#<LOGICAL-PATHNAME "SYS: CL; PATCH; CL-4-2.BIN.NEWEST"> :DIRECTION :INPUT :CHARACTERS NIL)

FS:COMMON-LISP-OPEN:  (P.C. = 450)
   Arg 0 (PATHNAME): #<LOGICAL-PATHNAME "SYS: CL; PATCH; CL-4-2.BIN.NEWEST">
   Arg 1 (KEYWORD-ARGS): (:CHARACTERS NIL)

OPEN:  (P.C. = 257)
   Arg 0 (PATHNAME): #<LOGICAL-PATHNAME "SYS: CL; PATCH; CL-4-2.BIN.NEWEST">
   Rest arg (KEYWORD-ARGS): (:CHARACTERS NIL)

Rest of stack:
SI:LOAD-PATCH:  (P.C. = 57)
LOAD-PATCHES:  (P.C. = 554)
SI:*EVAL:  (P.C. = 403)
COND:  (P.C. = 46)
SI:*EVAL:  (P.C. = 165)
SI:LOAD-BIN-OP-FORM:  (P.C. = 4)
SI:BIN-LOAD-NEXT-COMMAND:  (P.C. = 24)
SI:BIN-LOAD-TOP-LEVEL:  (P.C. = 6)
(:METHOD ZWEI:MAJOR-MODE :DEFAULT :LOAD-BINARY-FILE):  (P.C. = 4)
SI:BIN-LOAD-FILE-INTERNAL:  (P.C. = 147)
FS:LOAD-STREAM:  (P.C. = 16)
LOGIN:  (P.C. = 604)
(:PROPERTY SI:COM-LOGIN SI:CP-FUNCTION):  (P.C. = 22)
SI:COM-LOGIN:  (P.C. = 24)
SI:*EVAL:  (P.C. = 403)
(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0):  (P.C. = 152)
TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
SI:LISP-COMMAND-LOOP:  (P.C. = 67)
SI:LISP-TOP-LEVEL1:  (P.C. = 5)
SI:LISP-TOP-LEVEL:  (P.C. = 7)
14-Nov-85 14:41:35-EST,323;000000000000
Mail-From: ROB created at 14-Nov-85 14:41:15
Date: 14 Nov 1985  14:41 EST (Thu)
Message-ID: <ROB.12159240190.BABYL@MIT-OZ>
From: "Robert H. Kassel" <rob@MIT-OZ>
To:   bug-lispm@MIT-OZ
Subject: Previous Message
In-reply-to: Msg of 14 Nov 1985  14:08-EST from rob%MIT-SPEECH at MIT-MC.ARPA


Please disregard it.

14-Nov-85 17:07:11-EST,2747;000000000000
Received: from MIT-MOON by MIT-OZ via Chaosnet; 14 Nov 85 17:06-EST
Date: Thu, 14 Nov 85 17:05 EST
From: Daniel Huttenlocher <dph@OZ>
Subject: no timeout in tcp-ftp connect
To: BUG-LISPM@OZ
Message-ID: <851114170522.1.DPH@MOON.AI.MIT.EDU>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 10.6,
microcode TMC5-MIC 319, on Lisp Machine Keith Moon:

This method should send astream a keyword :timeout argument when doing a
:complete-connection.

(defun-method tcp-ftp-make-data-connection tcp-ftp-conn
	      (translated pathname byte-size command &aux (using-image-mode nil))
  (when (and aux-stream (not (send aux-stream :connected-p)))
    (send aux-stream :close :abort)
    (setq aux-stream nil))
  ;; Get into right byte size mode
  (if byte-size
      (let ((image-mode (send file-access-path :send-if-handles
			      :image-decoding-parameters byte-size)))
	(condition-case-if image-mode ()
	    (tcp-ftp-check-command-response 200 "TYPE L ~D" byte-size)
	  (tcp-ftp-unimplemented-parameter
	    (tcp-ftp-check-command-response 200 "TYPE I")
	    (setf using-image-mode image-mode))))
      (tcp-ftp-check-command-response 200 "TYPE A"))
  ;; Open another bidirectional connection for use in the data transfer
  ;; Because of the way this procotol works, we must first set up a listen
  ;; on the right port, then send the command, then wait for the response.
  ;; It would be a whole lot easier if more than just a few hosts implemented
  ;; the PASV command.
  ;; To avoid the TCP design bug with opening two connections between the same
  ;; pair of ports within a finite time, let's try to use the PORT command
  ;; if the server implements it.
  (values
    (send file-access-path :parse-xfer-response
	  (if aux-stream
	      (tcp-ftp-check-command-response
		125 "~A ~A" command (send translated :string-for-host))
	      (multiple-value-bind (astream port)	;Allocate a local port and listen on it
		  (send telnet-stream :start-open-auxiliary-stream nil
			:local-id nil :foreign-id :1-)
		(unwind-protect
		    (progn
		      (multiple-value-bind (ignore num)
			  (tcp-ftp-check-command-response '(200 500) "PORT ~A" port)
			(when (= num 500)	;Server doesn't support PORT, too bad
			  (send astream :close :abort)
			  (setq astream (send telnet-stream :start-open-auxiliary-stream nil
					      :local-id :same :foreign-id :1-))))
		      (let ((line (tcp-ftp-check-command-response
				    '(125 150) "~A ~A" command
				    (send translated :string-for-host))))
			(send astream :complete-connection)
			(setf aux-stream (prog1 astream (setf astream nil)))
			line))
		  (when astream
		    (send astream :close :abort)))))
	  pathname)
    using-image-mode))
14-Nov-85 21:39:23-EST,4097;000000000000
Received: from MIT-BUDDY by MIT-OZ via Chaosnet; 14 Nov 85 21:39-EST
Date: Thu, 14 Nov 85 21:37 EST
From: Chris Lindblad <CJL@OZ>
Subject: Bug in open
To: BUG-LISPM@OZ
Message-ID: <851114213755.1.CJL@BUDDY.AI.MIT.EDU>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 10.6,
microcode TMC5-MIC 319, on Lisp Machine Buddy Holly:

I eval this form. Of course, it blows out, because there isn't room on
my disk. The bug is if I hit abort from the error, the file
fep0:>foo.bar is left open. It should be closed.

(with-open-file (foo "fep0:>foo.bar" :direction :output :estimated-length 100000000.)
  ())

>>Error: FEP No more room.
         For FEP0:>foo.bar
While in the function (:METHOD FS:FEP-FILE-ACCESS-PATH :ALLOCATE-FREE-BLOCKS)  (:METHOD SI:BASE-DISK-STREAM :GROW)  (:METHOD SI:BASE-DISK-STREAM :ALLOCATE)

(:METHOD FS:FEP-FILE-ACCESS-PATH :ALLOCATE-FREE-BLOCKS):  (P.C. = 314)
   Arg 0 (SELF): #<FEP-FILE-ACCESS-PATH FEP0 7510776>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:FEP-FILE-ACCESS-PATH -- 10. IV's, 1. FL's 104411736>
   Arg 2 (OPERATION): :ALLOCATE-FREE-BLOCKS
   Arg 3 (NBLOCKS): 86806.
   Arg 4 (PATHNAME): #<FEP-PATHNAME "FEP0:>foo.bar">
   Local 5 (FREE-BLOCKS): (476. 370004. 21. 369982. 931. 369050. 2011. 367038. 840. 366197. ...)
   Local 6 (LAST-DPN): 370479.
   Local 7 (NBLKS): 27052.
   Local 8: 41.
   Local 9 (BLOCKN): 41.
   Local 10 (CACHE): #<ART-Q-4. 7511604>
   Local 11 (BLOCK): #<ART-Q-288. 44370341>

(:METHOD SI:BASE-DISK-STREAM :GROW):  (P.C. = 52)
   Arg 0 (SELF): #<OUTPUT-CHARACTER-DISK-STREAM "FEP0:>foo.bar" 16326611>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:BASE-DISK-STREAM -- 8. IV's, 0. FL's 142517166>
   Arg 2 (OPERATION): :GROW
   Arg 3 (N-BLOCKS): 86806.
   Rest arg: (:AREA 4. :ZERO-P NIL)

(:METHOD SI:BASE-DISK-STREAM :ALLOCATE):  (P.C. = 65)
   Arg 0 (SELF): #<OUTPUT-CHARACTER-DISK-STREAM "FEP0:>foo.bar" 16326611>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:BASE-DISK-STREAM -- 8. IV's, 0. FL's 142517166>
   Arg 2 (OPERATION): :ALLOCATE
   Arg 3 (N-BLOCKS): 86806.
   Rest arg: NIL

(:METHOD FS:FEP-FILE-ACCESS-PATH :OPEN):  (P.C. = 447)
   Arg 0 (SELF): #<FEP-FILE-ACCESS-PATH FEP0 7510776>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:FEP-FILE-ACCESS-PATH -- 10. IV's, 1. FL's 104411736>
   Arg 2 (OPERATION): :OPEN
   Arg 3 (TRANSLATED-PATHNAME): #<FEP-PATHNAME "FEP0:>foo.bar">
   Arg 4 (PATHNAME): #<FEP-PATHNAME "FEP0:>foo.bar">
   Rest arg: (:DIRECTION :OUTPUT :ESTIMATED-LENGTH 100000000.)

(:METHOD FS:ACTIVE-PATHNAME-MIXIN :OPEN):  (P.C. = 14)
   Arg 0 (SELF): #<FEP-PATHNAME "FEP0:>foo.bar">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:ACTIVE-PATHNAME-MIXIN -- 1. IV's, 0. FL's 105121160>
   Arg 2 (OPERATION): :OPEN
   Arg 3 (PATHNAME): #<FEP-PATHNAME "FEP0:>foo.bar">
   Rest arg (OPTIONS): (:DIRECTION :OUTPUT :ESTIMATED-LENGTH 100000000.)

FS:COMMON-LISP-OPEN:  (P.C. = 450)
   Arg 0 (PATHNAME): #<FEP-PATHNAME "FEP0:>foo.bar">
   Arg 1 (KEYWORD-ARGS): (:DIRECTION :OUTPUT :ESTIMATED-LENGTH 100000000.)

OPEN:  (P.C. = 257)
   Arg 0 (PATHNAME): "fep0:>foo.bar"
   Local 0 (PATHNAME): #<FEP-PATHNAME "FEP0:>foo.bar">
   Rest arg (KEYWORD-ARGS): (:DIRECTION :OUTPUT :ESTIMATED-LENGTH 100000000.)

SI:*EVAL:  (P.C. = 403)
   Arg 0 (FORM): (OPEN "fep0:>foo.bar" :DIRECTION :OUTPUT :ESTIMATED-LENGTH 100000000.)
   Local 0 (FORM): NIL
   Arg 1 (ENV): NIL
   --Defaulted args:--
   Arg 2 (HOOK): NIL

Rest of stack:
SI:DIGESTED-LET:  (P.C. = 161)
SI:DIGEST-INTERNAL:  (P.C. = 30)
LET:  (P.C. = 37)
SI:*EVAL:  (P.C. = 165)
(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0.):  (P.C. = 152)
TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
SI:BREAK-INTERNAL:  (P.C. = 176)
ZWEI:COM-BREAK:  (P.C. = 64)
ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 233)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 60)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 51)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
14-Nov-85 22:31:03-EST,890;000000000000
Received: from MIT-BUDDY by MIT-OZ via Chaosnet; 14 Nov 85 22:31-EST
Date: Thu, 14 Nov 85 22:29 EST
From: Chris Lindblad <CJL@OZ>
Subject: bug in si:with-band-stream macro
To: BUG-LISPM@OZ
Message-ID: <851114222937.2.CJL@BUDDY.AI.MIT.EDU>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 10.6,
microcode TMC5-MIC 319, on Lisp Machine Buddy Holly:

The macro si:with-band-stream makes a reference to the variable "stream"
which just coincidentally works wherever it's used. It really should be
referring to ,var.

(defmacro with-band-stream ((var host) &body body)
  `(progn (fs:force-user-to-login)
	  (with-open-stream (,var (chaos:open-stream ,host "BAND-TRANSFER"))
	    (let ((*band-version-which-operations* (get-band-which-operations stream)))
	      (multiple-value-prog1 (progn ,@body)
				    (remote-command ,var "~%")
				    (send ,var ':close t))))))

15-Nov-85 09:22:53-EST,1966;000000000000
Received: from MIT-EDDIE.ARPA by MIT-OZ via Chaosnet; 15 Nov 85 09:22-EST
Received: from MEDIA-LAB (2005512) by mit-eddie (4.12/4.7)
	id AA17358; Fri, 15 Nov 85 09:19:16 est
Received: from SCRC-STONY-BROOK.ARPA (90290ac0) by MEDIA-LAB (4.12/4.8)  id AA01750; Fri, 15 Nov 85 09:23:21 est
Received: from PEACE.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 355540; Fri 15-Nov-85 09:16:30-EST
Date: Fri, 15 Nov 85 09:16 EST
From: Charles Hornig <Hornig@SCRC-STONY-BROOK.ARPA>
Subject: Lossage in TCP file transfers from AMT lispms to XX
To: Charles Hornig <Hornig@SCRC-STONY-BROOK.ARPA>,
        Steve Strassmann <STRAZ@MIT-MEDIA-LAB.MIT.EDU>, bug-tcp@MIT-XX.ARPA,
        BUG-LISPM@MIT-MEDIA-LAB.MIT.EDU
In-Reply-To: <SRA.12158722659.BABYL@MIT-XX.ARPA>
Message-Id: <851115091649.2.HORNIG@PEACE.SCRC.Symbolics.COM>

    Date: Wednesday, 6 November 1985  21:53-EST
    From: Charles Hornig <Hornig@SCRC-STONY-BROOK.ARPA>

	Date: Wed, 6 Nov 85 14:51 EST
	From: Steve Strassmann <STRAZ@MEDIA-LAB.MIT.EDU>

	In Symbolics 3600 Release 6.0, IP-TCP 29.0, Experimental COLOR 135.1,
	Experimental COLOR-DEMO 68.0, Experimental IMAGES 56.0,
	Experimental COLOR-EDITOR 4.0, Experimental COLOR-PALETTE 2.0,
	Experimental MENU 6.0, microcode TMC5-MIC 319, on Xevious:

	This happens upon trying to write a text file (from the editor) to XX
	via TCP.  The directory ends up with an empty file, and the filejob goes
	away.  This is repeatable.

	>>Error: Unknown response from host: 2048 (8) bytes transferred. (expecting (226 250 426 451)).
	While in the function (:DEFUN-METHOD FS:TCP-FTP-CHECK-COMMAND-RESPONSE)  (:METHOD FS:TCP-FTP-CONN :DATA-STREAM-CLOSE)  (:METHOD TCP::FTP-AUX-STREAM :AFTER :CLOSE)

    XX is sending the response line "2048 (8) ..." which, as it begins with
    a number, is interpreted as a FTP response by the LispM.  XX should be
    fixed.

I can't reproduce this problem in release 6.1.

15-Nov-85 12:48:33-EST,1702;000000000000
Received: from MIT-MC.ARPA by MIT-OZ via Chaosnet; 15 Nov 85 12:48-EST
Received: from SCRC-STONY-BROOK.ARPA by MIT-MC.ARPA 15 Nov 85 11:15:56 EST
Received: from PEACE.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 355677; Fri 15-Nov-85 11:13:02-EST
Date: Fri, 15 Nov 85 11:19 EST
From: Charles Hornig <Hornig@SCRC-STONY-BROOK.ARPA>
Subject: open file servers
To: David Vinayak Wallace <Gumby@MIT-MC.ARPA>, Bug-Lispm@MIT-MC.ARPA
cc: SRA@MIT-XX.ARPA
In-Reply-To: The message of 16 Apr 85 05:13-EST from David Vinayak Wallace <Gumby@MIT-MC.ARPA>
Message-ID: <851115111922.7.HORNIG@PEACE.SCRC.Symbolics.COM>

    Date: Tue, 16 Apr 85 05:13 EST
    From: David Vinayak Wallace <Gumby@MIT-MC.ARPA>

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 8.2,
    microcode TMC5-MIC 319, on Lisp Machine Keith Moon:

    XX was having trouble with charfc earlier to-day, so I accessed XX via
    TCP/FTP.  Two processes (ZMAIL and ZWEI) got files from XX.  About three
    hours later SRA asked me whether I was still using my TWO ftp servers.

    Well I did "F" in peek and it said 'access path to XX via tcp-ftp" and
    "not logged in."  I wrote out a file to see what happened.  Well the
    file was written all right, usig one of the servers, and peek updated
    the bytes-written count, but continued to say "not logged in."

    1> Why didn't it close the connexion?

You dodn't tell it to do so.  In a future release, we will hook up FTP
to the file connection scavenger.

    2> [probably related] why did it lie about my not being logged in?
       It didn't ask me for a password.

I can't reproduce this is the most recent system.

15-Nov-85 12:57:49-EST,1211;000000000000
Received: from MIT-MC.ARPA by MIT-OZ via Chaosnet; 15 Nov 85 12:57-EST
Date: Fri, 15 Nov 85 13:00:29 EST
From: David Vinayak Wallace <GUMBY@MIT-MC.ARPA>
Subject:  open file servers
To: Hornig@SCRC-STONY-BROOK.ARPA
cc: BUG-LISPM@MIT-MC.ARPA, SRA@MIT-XX.ARPA
In-reply-to: Msg of Fri 15 Nov 85 11:19 EST from Charles Hornig <Hornig at SCRC-STONY-BROOK.ARPA>
Message-ID: <[MIT-MC.ARPA].719366.851115.GUMBY>

    Date: Fri, 15 Nov 85 11:19 EST
    From: Charles Hornig <Hornig@SCRC-STONY-BROOK.ARPA>
    In-Reply-To: The message of 16 Apr 85 05:13-EST from David Vinayak Wallace <Gumby@MIT-MC.ARPA>

        Date: Tue, 16 Apr 85 05:13 EST
        From: David Vinayak Wallace <Gumby@MIT-MC.ARPA>

        In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 8.2,
        microcode TMC5-MIC 319, on Lisp Machine Keith Moon:

        XX was having trouble with charfc earlier to-day, so I
        accessed XX via TCP/FTP.  Two processes (ZMAIL and ZWEI) got
        files from XX.  About three hours later SRA asked me whether I
        was still using my TWO ftp servers.

Maybe I should have added:
3> Why did it open TWO connexions?

I hope this will take less than seven months to answer.
16-Nov-85 03:04:47-EST,1539;000000000000
Mail-From: CJL created at 16-Nov-85 03:04:10
Date: Sat, 16 Nov 1985  03:04 EST
Message-ID: <CJL.12159637575.BABYL@MIT-OZ>
From: Chris Lindblad <CJL@MIT-OZ>
To:   info-lispm-mit@MIT-OZ
Subject: Availiability of Symbolics Release 6.1 for 3600's at MIT

We now have Release 6.1 of the Symbolics system here at MIT.  Here's how
to get it onto your machine.

If you use an AI lab machine, you have to get a FEP:>AI-6-1-A.load
world load on your machine. There are many machines at the lab that
already have this world installed on them. Use the Copy World command to
copy the world from one of them to your machine.

If you use any other machine, you have to get a FEP:>MIT-6-1-A.load
world load on your machine. You can copy it over from other machines
that you might know have it with the Copy World command. Two machines
that surely have this band are JANIS and BUDDY, but look around first
before transferring from one of those machines, because they might be
busy.

You will also need microcode version 336 to run Release 6.1. Make sure
to type Copy Microcode 336 to your machine before you try to run 6.1.

People with FPA's on their machine should note a warning included with
the distribution: "If our machine has a Floating Point Accelerator, then
you should use FPA microcode. Instead of using the standard FPA
microcode you would ordinarily use, you should use the color version of
the FPA microcode." Consult the paper titled "Documentation Updates for
Release 6.1" for the full text of this warning.
16-Nov-85 23:15:57-EST,2410;000000000000
Received: from MIT-APIARY-6 by MIT-OZ via Chaosnet; 16 Nov 85 23:15-EST
Date: Sat, 16 Nov 85 23:17 EST
From: Henry Lieberman <Henry@OZ>
Subject: Pathnames
To: BUG-LISPM@OZ
Message-ID: <851116231707.5.HENRY@APIARY-6.AI.MIT.EDU>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 10.6,
microcode TMC5-MIC 319, including Apiary and Traveler, on Lisp Machine Apiary-6:

I just did this to ask "Is there a file named fep0:>Boot.Abbrev?" I should be able
to create a pathname to any name, even if it is one the host does not know about. 
After all, suppose I invent a new file type? Why does it insist on a "canonical
type", whatever that is?

(SETQ BB (FS:PARSE-PATHNAME "fep0:>Boot.Boot"))
; #<FEP-PATHNAME "FEP0:>Boot.Boot">

(SEND BB :NEW-TYPE 'ABBREV)

>>Error: ABBREV is an invalid canonical type for FEP0 (a FEP host).
While in the function (:METHOD FS:PATHNAME :TYPE-FOR-NEW-CANONICAL-TYPE)  FS:MAKE-PATHNAME-1  (:METHOD FS:PATHNAME :NEW-PATHNAME)

(:METHOD FS:PATHNAME :TYPE-FOR-NEW-CANONICAL-TYPE):  (P.C. = 65)
   Arg 0 (SELF): #<FEP-PATHNAME "FEP0:>Boot.Boot">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:PATHNAME -- 8. IV's, 1. FL's 105120557>
   Arg 2 (OPERATION): :TYPE-FOR-NEW-CANONICAL-TYPE
   Arg 3 (CANONICAL-TYPE): ABBREV
   Arg 4 (ORIGINAL-TYPE): NIL
   Arg 5 (ORIGINAL-TYPE-P): NIL

FS:MAKE-PATHNAME-1:  (P.C. = 575)
   Arg 0 (ACTOR): #<FEP-PATHNAME "FEP0:>Boot.Boot">
   Rest arg (OPTIONS): (:DEFAULT-HOST #<FEP-FILE-HOST FEP0> :DEFAULT-DEVICE :UNSPECIFIC :DEFAULT-DIRECTORY :ROOT :DEFAULT-NAME "Boot" :DEFAULT-TYPE "Boot" ...)

(:METHOD FS:PATHNAME :NEW-PATHNAME):  (P.C. = 22)
   Arg 0 (SELF): #<FEP-PATHNAME "FEP0:>Boot.Boot">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:PATHNAME -- 8. IV's, 1. FL's 105120557>
   Arg 2 (OPERATION): :NEW-PATHNAME
   Rest arg (OPTIONS): (:TYPE ABBREV)

(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 67)
   Arg 0 (SELF): #<FEP-PATHNAME "FEP0:>Boot.Boot">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:PATHNAME -- 8. IV's, 1. FL's 105120557>
   Arg 2 (.OPERATION.): :NEW-PATHNAME
   Rest arg (.DAEMON-CALLER-ARGS.): (:TYPE ABBREV)

(:METHOD FS:PATHNAME :NEW-TYPE):  (P.C. = 6)
   Arg 0 (SELF): #<FEP-PATHNAME "FEP0:>Boot.Boot">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:PATHNAME -- 8. IV's, 1. FL's 105120557>
   Arg 2 (OPERATION): :NEW-TYPE
   Arg 3 (NEW-TYPE): ABBREV
17-Nov-85 00:25:49-EST,1501;000000000000
Received: from MIT-MC.ARPA by MIT-OZ via Chaosnet; 17 Nov 85 00:25-EST
Received: from SCRC-STONY-BROOK.ARPA by MIT-MC.ARPA 17 Nov 85 00:28:18 EST
Received: from CONCORD.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 356429; Sun 17-Nov-85 00:25:29-EST
Date: Sun, 17 Nov 85 00:26 EST
From: Bernard S. Greenberg <BSG@SCRC-STONY-BROOK.ARPA>
Subject: Pathnames
To: Henry%oz@MIT-MC.ARPA, BUG-LISPM%oz@MIT-MC.ARPA
In-Reply-To: <851116231707.5.HENRY@APIARY-6.AI.MIT.EDU>
Message-ID: <851117002648.9.BSG@CONCORD.SCRC.Symbolics.COM>

    Date: Sat, 16 Nov 85 23:17 EST
    From: Henry Lieberman <Henry@OZ>

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 10.6,
    microcode TMC5-MIC 319, including Apiary and Traveler, on Lisp Machine Apiary-6:

    I just did this to ask "Is there a file named fep0:>Boot.Abbrev?" I should be able
    to create a pathname to any name, even if it is one the host does not know about. 
    After all, suppose I invent a new file type? Why does it insist on a "canonical
    type", whatever that is?

    (SETQ BB (FS:PARSE-PATHNAME "fep0:>Boot.Boot"))
    ; #<FEP-PATHNAME "FEP0:>Boot.Boot">

    (SEND BB :NEW-TYPE 'ABBREV)

    >>Error: ABBREV is an invalid canonical type for FEP0 (a FEP host).
    While in the function (:METHOD FS:PATHNAME :TYPE-FOR-NEW-CANONICAL-TYPE)  FS:MAKE-PATHNAME-1  (:METHOD FS:PATHNAME :NEW-PATHNAME)

Try using a string instead of a symbol.  A symbol denotes a canonical type.

17-Nov-85 02:14:24-EST,1565;000000000000
Received: from MIT-MC.ARPA by MIT-OZ via Chaosnet; 17 Nov 85 02:14-EST
Received: from SCRC-STONY-BROOK.ARPA by MIT-MC.ARPA 17 Nov 85 02:16:51 EST
Received: from OWL.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 356445; Sun 17-Nov-85 02:14:00-EST
Date: Sun, 17 Nov 85 02:11 EST
From: Mike McMahon <MMcM@SCRC-STONY-BROOK.ARPA>
Subject: Pathnames
To: Henry Lieberman <Henry%OZ@MIT-MC.ARPA>
cc: BUG-LISPM%OZ@MIT-MC.ARPA
In-Reply-To: <851116231707.5.HENRY@APIARY-6.AI.MIT.EDU>
Supersedes: <851117021102.6.MMCM@OWL.SCRC.Symbolics.COM>
Message-ID: <851117021135.7.MMCM@OWL.SCRC.Symbolics.COM>

    Date: Sat, 16 Nov 85 23:17 EST
    From: Henry Lieberman <Henry@OZ>

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 10.6,
    microcode TMC5-MIC 319, including Apiary and Traveler, on Lisp Machine Apiary-6:

    I just did this to ask "Is there a file named fep0:>Boot.Abbrev?" I should be able
    to create a pathname to any name, even if it is one the host does not know about. 
    After all, suppose I invent a new file type? Why does it insist on a "canonical
    type", whatever that is?

    (SETQ BB (FS:PARSE-PATHNAME "fep0:>Boot.Boot"))
    ; #<FEP-PATHNAME "FEP0:>Boot.Boot">

    (SEND BB :NEW-TYPE 'ABBREV)

    >>Error: ABBREV is an invalid canonical type for FEP0 (a FEP host).
    While in the function (:METHOD FS:PATHNAME :TYPE-FOR-NEW-CANONICAL-TYPE)  FS:MAKE-PATHNAME-1  (:METHOD FS:PATHNAME :NEW-PATHNAME)

The type field of a fep pathname has a maximum length of four characters.

17-Nov-85 02:24:32-EST,2027;000000000000
Received: from MIT-REAGAN.ARPA by MIT-OZ via Chaosnet; 17 Nov 85 02:24-EST
Date: Sun, 17 Nov 85 02:24 EST
From: CJL@OZ.AI.MIT.EDU
Sender: File-Server@MIT-REAGAN.ARPA
Subject: Worthless notifications
To: BUG-LISPM@OZ.AI.MIT.EDU
Message-ID: <851117022433.2.FILE-SERVER@MIT-REAGAN.ARPA>

In Symbolics 3600 Release 6.1, IP-TCP 29.13, Mailer 43.6,
6-1-Patches 1.0, AISite 11.1, microcode TMC5-MIC 336,
Network-Security patch, Update-Internet-Namespace patch,
Server-Finger patch, Inquir-update patch, Update-AI-Domain patch,
Rodent Free Namespace Editor, on Lisp Machine Ronald Reagan:

I thought these notifications were going to go away in 6.1.

02:07:34 Redirecting Internet route #<IP-ROUTE (18.58.0.13) via 128.52.22.8 (AI-GW)> to go via 128.52.22.9
01:43:11 Redirecting Internet route #<IP-ROUTE SPEAKER (18.70.0.4) via 128.52.22.8 (AI-GW)> to go via 128.52.22.9
01:42:59 Redirecting Internet route #<IP-ROUTE EMS (18.85.0.6) via 128.52.22.8 (AI-GW)> to go via 128.52.22.9
01:42:56 Redirecting Internet route #<IP-ROUTE SCRC-CUPID (192.10.41.27) via 128.52.22.8 (AI-GW)> to go via 128.52.22.9
01:42:39 Redirecting Internet route #<IP-ROUTE RING-WORLD (18.70.0.1) via 128.52.22.8 (AI-GW)> to go via 128.52.22.9
01:42:39 Redirecting Internet route #<IP-ROUTE ATRP (18.85.0.3) via 128.52.22.8 (AI-GW)> to go via 128.52.22.9
01:42:39 Redirecting Internet route #<IP-ROUTE CSR (18.10.0.8) via 128.52.22.8 (AI-GW)> to go via 128.52.22.9
01:42:37 Redirecting Internet route #<IP-ROUTE AMTGW (18.85.0.1) via 128.52.22.8 (AI-GW)> to go via 128.52.22.9
01:42:31 Redirecting Internet route #<IP-ROUTE OLYMPUS (18.48.0.240) via 128.52.22.8 (AI-GW)> to go via 128.52.22.9
01:42:28 Redirecting Internet route #<IP-ROUTE PRILL (18.70.0.6) via 128.52.22.8 (AI-GW)> to go via 128.52.22.9
01:42:28 Redirecting Internet route #<IP-ROUTE LOUISWU (18.70.0.2) via 128.52.22.8 (AI-GW)> to go via 128.52.22.9
01:42:24 Redirecting Internet route #<IP-ROUTE NESSUS (18.70.0.3) via 128.52.22.8 (AI-GW)> to go via 128.52.22.9
17-Nov-85 03:03:59-EST,1208;000000000000
Received: from MIT-APIARY-6 by MIT-OZ via Chaosnet; 17 Nov 85 03:03-EST
Date: Sun, 17 Nov 85 03:04 EST
From: Henry Lieberman <HENRY@OZ.AI.MIT.EDU>
Subject: EVALHOOK
To: BUG-LISPM@OZ.AI.MIT.EDU
Message-ID: <"851117030409.2.Henry@OZ"@APIARY-6.AI.MIT.EDU>

In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.0,
AISite 11.0, microcode TMC5-MIC 336,
on Lisp Machine Apiary-6:
Warm booted from: ZMACS-WINDOWS, Zstep Frame 1.

Step through any usage of MAKE-INSTANCE, and you'll see that just before
the object gets created there's an evaluation of NIL that doesn't seem to 
belong there.  It didn't used to happen [before Rel 6], and it screws up
my stepper.  In general, the EVALHOOK feature tends to present you with 
many spurious evaluations [The symbol :JUST-CREATED also appears out of 
nowhere sometimes] that did not appear in the code being stepped through.  
I presume they are some sort of artifact of the evaluator.  When stepping 
through code interactively, you can ignore them if you know they weren't yours, 
but they are confusing.  If a program is trying to step the code, figuring
out which of the evaluations that EVALHOOK hands you are real is a major
headache.
17-Nov-85 17:20:45-EST,892;000000000000
Received: from MIT-LENNON by MIT-OZ via Chaosnet; 17 Nov 85 17:20-EST
Date: Sun, 17 Nov 85 17:20 EST
From: Chris Lindblad <CJL@OZ.AI.MIT.EDU>
Subject: IDS question
To: BUG-LISPM@OZ.AI.MIT.EDU
Message-ID: <851117172052.1.CJL@LENNON.AI.MIT.EDU>

In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.0,
AISite 11.1, microcode TMC5-MIC 336, on Lisp Machine John Lennon:

Is there any function that reads a world load file and give me the
pathname of its parent if its an incrementally saved world?

Basically what would be nice is the functionality similar to that of the
fep commands Find IDS Files, and Show IDS Files, except in a a format
readable by lisp.

I have a utility that assists in making room in fep filesystems by
finding the least useful (and best to delete) world load, and it would
be useful for it to know if a world load is some other world's parent.
18-Nov-85 12:29:56-EST,2586;000000000000
Received: from MIT-MC.ARPA by MIT-OZ via Chaosnet; 18 Nov 85 12:29-EST
Received: from SCRC-STONY-BROOK.ARPA by MIT-MC.ARPA 18 Nov 85 12:25:17 EST
Received: from PEACE.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 356770; Mon 18-Nov-85 09:44:45-EST
Date: Mon, 18 Nov 85 09:51 EST
From: Charles Hornig <Hornig@SCRC-STONY-BROOK.ARPA>
Subject: Worthless notifications
To: CJL%OZ@MIT-MC.ARPA, BUG-LISPM%OZ@MIT-MC.ARPA
Message-ID: <851118095122.8.HORNIG@PEACE.SCRC.Symbolics.COM>

    Date: Sun, 17 Nov 85 02:24 EST
    From: CJL@OZ.AI.MIT.EDU

    In Symbolics 3600 Release 6.1, IP-TCP 29.13, Mailer 43.6,
    6-1-Patches 1.0, AISite 11.1, microcode TMC5-MIC 336,
    Network-Security patch, Update-Internet-Namespace patch,
    Server-Finger patch, Inquir-update patch, Update-AI-Domain patch,
    Rodent Free Namespace Editor, on Lisp Machine Ronald Reagan:

    I thought these notifications were going to go away in 6.1.

    02:07:34 Redirecting Internet route #<IP-ROUTE (18.58.0.13) via 128.52.22.8 (AI-GW)> to go via 128.52.22.9
    01:43:11 Redirecting Internet route #<IP-ROUTE SPEAKER (18.70.0.4) via 128.52.22.8 (AI-GW)> to go via 128.52.22.9
    01:42:59 Redirecting Internet route #<IP-ROUTE EMS (18.85.0.6) via 128.52.22.8 (AI-GW)> to go via 128.52.22.9
    01:42:56 Redirecting Internet route #<IP-ROUTE SCRC-CUPID (192.10.41.27) via 128.52.22.8 (AI-GW)> to go via 128.52.22.9
    01:42:39 Redirecting Internet route #<IP-ROUTE RING-WORLD (18.70.0.1) via 128.52.22.8 (AI-GW)> to go via 128.52.22.9
    01:42:39 Redirecting Internet route #<IP-ROUTE ATRP (18.85.0.3) via 128.52.22.8 (AI-GW)> to go via 128.52.22.9
    01:42:39 Redirecting Internet route #<IP-ROUTE CSR (18.10.0.8) via 128.52.22.8 (AI-GW)> to go via 128.52.22.9
    01:42:37 Redirecting Internet route #<IP-ROUTE AMTGW (18.85.0.1) via 128.52.22.8 (AI-GW)> to go via 128.52.22.9
    01:42:31 Redirecting Internet route #<IP-ROUTE OLYMPUS (18.48.0.240) via 128.52.22.8 (AI-GW)> to go via 128.52.22.9
    01:42:28 Redirecting Internet route #<IP-ROUTE PRILL (18.70.0.6) via 128.52.22.8 (AI-GW)> to go via 128.52.22.9
    01:42:28 Redirecting Internet route #<IP-ROUTE LOUISWU (18.70.0.2) via 128.52.22.8 (AI-GW)> to go via 128.52.22.9
    01:42:24 Redirecting Internet route #<IP-ROUTE NESSUS (18.70.0.3) via 128.52.22.8 (AI-GW)> to go via 128.52.22.9

They really have gone away in the development system and will go away in
some future release.  In the mean time, you can make them go away
forcibly be redefining TCP::IP-NOTIFY to be #'IGNORE.


18-Nov-85 16:09:54-EST,1354;000000000000
Received: from MIT-REAGAN.ARPA by MIT-OZ via Chaosnet; 18 Nov 85 16:09-EST
Received: from SCRC-STONY-BROOK.ARPA by MIT-REAGAN.ARPA via INTERNET with SMTP id 15050; 18 Nov 85 16:10:30-EST
Received: from THAMES.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 357214; Mon 18-Nov-85 16:09:07-EST
Date: Mon, 18 Nov 85 16:18 EST
From: Scott McKay <SWM@SCRC-QUABBIN.ARPA>
Subject: bug in si:with-band-stream macro
To: CJL@OZ, BUG-LISPM@OZ.mit
In-Reply-To: <851114222937.2.CJL@BUDDY.AI.MIT.EDU>
Message-ID: <851118161807.9.SWM@THAMES.SCRC.Symbolics.COM>

    Date: Thu, 14 Nov 85 22:29 EST
    From: Chris Lindblad <CJL@OZ>

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 10.6,
    microcode TMC5-MIC 319, on Lisp Machine Buddy Holly:

    The macro si:with-band-stream makes a reference to the variable "stream"
    which just coincidentally works wherever it's used. It really should be
    referring to ,var.

    (defmacro with-band-stream ((var host) &body body)
      `(progn (fs:force-user-to-login)
	      (with-open-stream (,var (chaos:open-stream ,host "BAND-TRANSFER"))
		(let ((*band-version-which-operations* (get-band-which-operations stream)))
		  (multiple-value-prog1 (progn ,@body)
					(remote-command ,var "~%")
					(send ,var ':close t))))))


Right you are.  In the source.

18-Nov-85 16:10:37-EST,1418;000000000000
Received: from MIT-REAGAN.ARPA by MIT-OZ via Chaosnet; 18 Nov 85 16:10-EST
Received: from SCRC-STONY-BROOK.ARPA by MIT-REAGAN.ARPA via INTERNET with SMTP id 15051; 18 Nov 85 16:11:13-EST
Received: from THAMES.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 357216; Mon 18-Nov-85 16:09:26-EST
Date: Mon, 18 Nov 85 16:18 EST
From: Scott McKay <SWM@SCRC-QUABBIN.ARPA>
Subject: bug in si:with-band-stream macro
To: CJL@OZ.mit, BUG-LISPM@OZ.mit
In-Reply-To: <851114222937.2.CJL@BUDDY.AI.MIT.EDU>
Supersedes: <851118161807.9.SWM@THAMES.SCRC.Symbolics.COM>
Message-ID: <851118161826.0.SWM@THAMES.SCRC.Symbolics.COM>

    Date: Thu, 14 Nov 85 22:29 EST
    From: Chris Lindblad <CJL@OZ>

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 10.6,
    microcode TMC5-MIC 319, on Lisp Machine Buddy Holly:

    The macro si:with-band-stream makes a reference to the variable "stream"
    which just coincidentally works wherever it's used. It really should be
    referring to ,var.

    (defmacro with-band-stream ((var host) &body body)
      `(progn (fs:force-user-to-login)
	      (with-open-stream (,var (chaos:open-stream ,host "BAND-TRANSFER"))
		(let ((*band-version-which-operations* (get-band-which-operations stream)))
		  (multiple-value-prog1 (progn ,@body)
					(remote-command ,var "~%")
					(send ,var ':close t))))))


Right you are.  In the source.

18-Nov-85 16:29:33-EST,1364;000000000000
Received: from MIT-REAGAN.ARPA by MIT-OZ via Chaosnet; 18 Nov 85 16:29-EST
Date: Mon, 18 Nov 85 16:30 EST
From: CJL@OZ.AI.MIT.EDU
Sender: File-Server@MIT-REAGAN.ARPA
Subject: There should be some simple way to disable remote logins to server machines  
To: BUG-LISPM@OZ.AI.MIT.EDU
Message-ID: <851118163013.1.FILE-SERVER@MIT-REAGAN.ARPA>

In Symbolics 3600 Release 6.1, IP-TCP 29.13, Mailer 43.6,
6-1-Patches 1.0, AISite 11.1, microcode TMC5-MIC 336,
Network-Security patch, Update-Internet-Namespace patch,
Server-Finger patch, Inquir-update patch, Update-AI-Domain patch,
Rodent Free Namespace Editor, on Lisp Machine Ronald Reagan:

If a machine is a server machine, then the value of net:remote-login-on
is ignored. Is this supposed to be a feature? How am I supposed to
disable remote logins on a server machine? I'll probably end up advising
neti:network-terminal-server to do the right thing.

You ask, "Why would I want to do that?", well, I want my machine to come
up with services disabled, so I set the server machine attribute in the
namespace entry for the machine. Well now I find out that this also
means that net:remote-login-on is ignored as to whether or not to allow
randoms around MIT from supduping to the server machine, and breaking
it. 

It really would be nice of there were a pword system in the lisp
machine.
18-Nov-85 16:41:21-EST,1334;000000000000
Received: from MIT-MC.ARPA by MIT-OZ via Chaosnet; 18 Nov 85 16:41-EST
Received: from SCRC-STONY-BROOK.ARPA by MIT-MC.ARPA 18 Nov 85 16:20:20 EST
Received: from THAMES.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 357206; Mon 18-Nov-85 16:02:49-EST
Date: Mon, 18 Nov 85 16:11 EST
From: Scott McKay <SWM@SCRC-QUABBIN.ARPA>
Subject: IDS question
To: CJL@OZ.AI.MIT.EDU, BUG-LISPM@OZ.AI.MIT.EDU
In-Reply-To: <851117172052.1.CJL@LENNON.AI.MIT.EDU>
Message-ID: <851118161146.6.SWM@THAMES.SCRC.Symbolics.COM>

    Date: Sun, 17 Nov 85 17:20 EST
    From: Chris Lindblad <CJL@OZ.AI.MIT.EDU>

    In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.0,
    AISite 11.1, microcode TMC5-MIC 336, on Lisp Machine John Lennon:

    Is there any function that reads a world load file and give me the
    pathname of its parent if its an incrementally saved world?

    Basically what would be nice is the functionality similar to that of the
    fep commands Find IDS Files, and Show IDS Files, except in a a format
    readable by lisp.

This is on the queue.

    I have a utility that assists in making room in fep filesystems by
    finding the least useful (and best to delete) world load, and it would
    be useful for it to know if a world load is some other world's parent.


18-Nov-85 20:49:56-EST,1074;000000000000
Received: from MIT-GOLDILOCKS.ARPA by MIT-OZ via Chaosnet; 18 Nov 85 20:49-EST
Received: from GRIZZLY.MIT.EDU by MIT-GOLDILOCKS.ARPA via CHAOS with CHAOS-MAIL id 9207; Mon 18-Nov-85 20:50:26-EST
Date: Mon, 18 Nov 85 20:49 EST
From: Niels Lauritzen <SR.LAURITZEN%MIT-SPEECH@MIT-MC.ARPA>
Subject: filename completion on disk when no lmfs e.g. FOO|FEP0:
To: BUG-LISPM@MIT-GOLDILOCKS.ARPA
Message-ID: <851118204951.1.LAURITZEN@GRIZZLY.MIT.EDU>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, Spire-Macros 5.1,
Attribute 5.6, Compute 5.4, Audio 4.0, Speech-Attributes 4.3,
Display 6.18, Speech-Layouts 6.4, Prtout 4.0, Versatec 5.1, Spire 16.0,
ZOO 6.12, ZOO-SPIRE 2.2, microcode TMC5-MIC 319, on Lisp Machine Grizzly:

When a filename is completed for a file that on just a local disk, it completes
to a LMFS name and we may subsequently get an error.

Specifically, KODIAK|FEP0:>*.*.*  completes to KODIAK:>*.*.*
where it has removed the "|FEP0". This is not nice because
KODIAK: is undefined, while kodiak|fep0: is defined.

Luckily, I can work around this.
19-Nov-85 13:08:39-EST,4132;000000000000
Received: from MIT-GOLDILOCKS.ARPA by MIT-OZ via Chaosnet; 19 Nov 85 13:08-EST
Received: from YOGI.MIT.EDU by MIT-GOLDILOCKS.ARPA via CHAOS with CHAOS-MAIL id 9208; Tue 19-Nov-85 13:09:30-EST
Date: Tue, 19 Nov 85 13:09 EST
From: Niels Lauritzen <SR.LAURITZEN@SPEECH.MIT.EDU>
Subject: author unknown shouldn't cause error
To: BUG-LISPM@MIT-GOLDILOCKS.ARPA
Message-ID: <851119130904.1.LAURITZEN@YOGI.MIT.EDU>

In Symbolics 3670 Release 6.1, IP-TCP 29.13,
Experimental Spire-Macros 7.0, Attribute 5.8, Experimental Compute 6.0,
Audio 4.1, Speech-Attributes 4.8, Display 6.23, Speech-Layouts 6.4,
Prtout 4.5, Experimental Versatec 6.0, Spire 16.0, Experimental Zoo 8.0,
microcode TMC5-IO4-FPA-COLOR-MIC 336, on Lisp Machine Yogi:

Here's a bug in IP-TCP 29.13:  I was going to write a file onto GOLDY|FEP0:
but the host GOLDY|FEP0: couldn't supply the author--because, of course, the file doesn't exist yet!

>>Error: Bad string for parameter AUTHOR returned by host GOLDY|FEP0
While in the function FS:NFILE-USER-DECODE-KEYWORD-VALUES  (:METHOD FS:NFILE-ACCESS-PATH :OPEN)  (:METHOD FS:ACTIVE-PATHNAME-MIXIN :OPEN)

FS:NFILE-USER-DECODE-KEYWORD-VALUES:  (P.C. = 107)
   Arg 0 (FS:DATA-PAIRS): (:AUTHOR NIL :CREATION-DATE 2710260216 :POINTER-BASE 0)
   Arg 1 (FS:DESCRIPTORS): ((:CREATION-DATE :UNIVERSAL-TIME) (:AUTHOR :STRING) (:BYTE-SIZE :NUMBER) (:LENGTH :NUMBER) (:POINTER-BASE :NUMBER) (:CREATION-TIME :UNIVERSAL-TIME))
   Arg 2 (FS:PATHNAME-FOR-TRUENAME-PARSING-AND-ERROR-HOST): #<FEP-PATHNAME "GOLDY|FEP0:>sync.boot">
   --Defaulted args:--
   Arg 3 (FS:BARF-IF-NOT-KNOWN): NIL
   Local 4: NIL
   Local 5 (FS:HOST): #<FEP-FILE-HOST GOLDY|FEP0>
   Local 6 (FS:INDICATOR): :AUTHOR
   Local 7 (FS:VALUE): NIL
   Local 8: (:AUTHOR NIL :CREATION-DATE 2710260216 :POINTER-BASE 0)
   Local 9: #<DTP-LOCATIVE 43440540>
   Local 10: #<DTP-LOCATIVE 43440540>
   Local 11: #<DTP-LOCATIVE 43440540>
   Local 12 (FS:KEYWORD): :AUTHOR
   Local 13 (DATA-TYPE): :STRING
   Local 14: ((:BYTE-SIZE :NUMBER) (:LENGTH :NUMBER) (:POINTER-BASE :NUMBER) (:CREATION-TIME :UNIVERSAL-TIME))

(:METHOD FS:NFILE-ACCESS-PATH :OPEN):  (P.C. = 444)
   Arg 0 (SELF): #<REMOTE-FEP-NFILE-ACCESS-PATH GOLDY, FEP unit 0, using New File. 20147572>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor FS:NFILE-ACCESS-PATH -- 4. IV's, 2. FL's 121364653>
   Arg 2 (SI:OPERATION): :OPEN
   Arg 3 (FS:REAL-PATHNAME): #<FEP-PATHNAME "GOLDY|FEP0:>sync.boot">
   Arg 4 (FS:COMMAND-PATHNAME): #<FEP-PATHNAME "GOLDY|FEP0:>sync.boot">
   Rest arg: (:CHARACTERS T :DIRECTION :OUTPUT)

(:METHOD FS:ACTIVE-PATHNAME-MIXIN :OPEN):  (P.C. = 14)
   Arg 0 (SELF): #<FEP-PATHNAME "GOLDY|FEP0:>sync.boot">
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor FS:ACTIVE-PATHNAME-MIXIN -- 1. IV's, 0. FL's 121257237>
   Arg 2 (SI:OPERATION): :OPEN
   Arg 3 (FS:PATHNAME): #<FEP-PATHNAME "GOLDY|FEP0:>sync.boot">
   Rest arg (FS:OPTIONS): (:CHARACTERS T :DIRECTION :OUTPUT)

FS:MACLISP-COMPATIBILITY-OPEN:  (P.C. = 365)
   Arg 0 (FS:FILENAME): #<FEP-PATHNAME "GOLDY|FEP0:>sync.boot">
   Arg 1 (FS:OPTIONS): (ZWEI:OUT)

OPEN:  (P.C. = 254)
   Arg 0 (FS:PATHNAME): #<FEP-PATHNAME "GOLDY|FEP0:>sync.boot">
   Rest arg (FS:KEYWORD-ARGS): ((ZWEI:OUT))

(:METHOD ZWEI:FILE-BUFFER-MIXIN :SAVE):  (P.C. = 46)
   Arg 0 (SELF): #<FILE-BUFFER "sync.boot > GOLDY|FEP0:" 116400161>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor ZWEI:FILE-BUFFER-MIXIN -- 9. IV's, 0. FL's 170424075>
   Arg 2 (SI:OPERATION): :SAVE

ZWEI:COM-WRITE-FILE:  (P.C. = 35)

ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
   Arg 0 (ZWEI:COMMAND): ZWEI:COM-WRITE-FILE
   Arg 1 (ZWEI:CHAR): 343
   Arg 2 (ZWEI:PREFIX-CHAR): 344
   --Defaulted args:--
   Arg 3 (ZWEI:HOOK-LIST): NIL

Rest of stack:
ZWEI:MAKE-EXTENDED-COMMAND-INTERNAL:  (P.C. = 112)
Closure of ZWEI:MAKE-EXTENDED-COMMAND-INTERNAL:
ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 233)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 60)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 51)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
19-Nov-85 21:12:21-EST,2564;000000000000
Received: from MIT-MC.ARPA by MIT-OZ via Chaosnet; 19 Nov 85 21:12-EST
Received: from SCRC-STONY-BROOK.ARPA by MIT-MC.ARPA 19 Nov 85 21:06:18 EST
Received: from EUPHRATES.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 358336; Tue 19-Nov-85 20:40:24-EST
Date: Tue, 19 Nov 85 20:39 EST
From: David A. Moon <Moon@SCRC-STONY-BROOK.ARPA>
Subject: EVALHOOK
To: Henry Lieberman <HENRY@OZ.AI.MIT.EDU>
cc: BUG-LISPM@OZ.AI.MIT.EDU
In-Reply-To: <"851117030409.2.Henry@OZ"@APIARY-6.AI.MIT.EDU>
Message-ID: <851119203943.6.MOON@EUPHRATES.SCRC.Symbolics.COM>

    Date: Sun, 17 Nov 85 03:04 EST
    From: Henry Lieberman <HENRY@OZ.AI.MIT.EDU>

    In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.0,
    AISite 11.0, microcode TMC5-MIC 336,
    on Lisp Machine Apiary-6:
    Warm booted from: ZMACS-WINDOWS, Zstep Frame 1.

    Step through any usage of MAKE-INSTANCE, and you'll see that just before
    the object gets created there's an evaluation of NIL that doesn't seem to 
    belong there.  

Are you sure it's not an initial-value form for an instance variable or
a default-init-plist entry?  I'm not positive that there isn't a totally
unmotivated evaluation of NIL, but it seems less likely.

		   It didn't used to happen [before Rel 6], and it screws up
    my stepper.  

I don't think your stepper should assume that system utility functions won't
call EVAL as part of their operation.

		 In general, the EVALHOOK feature tends to present you with 
    many spurious evaluations [The symbol :JUST-CREATED also appears out of 
    nowhere sometimes] 

I happen to know that's an initial-value form for an instance variable of
a condition, so signalling any condition will evaluate that.

		       that did not appear in the code being stepped through.  
    I presume they are some sort of artifact of the evaluator.  When stepping 
    through code interactively, you can ignore them if you know they weren't yours, 
    but they are confusing.  If a program is trying to step the code, figuring
    out which of the evaluations that EVALHOOK hands you are real is a major
    headache.

Maybe using the (documented somewhere in our manuals) facilities for tracing back
up the stack to see who called EVAL could help you?

I don't want to hear an argument that NIL and :JUST-CREATED are constants and
therefore can be evaluated without actually calling EVAL.  I think that's besides
the point; it's only coincidence that the forms you mentioned happened to be constants.

20-Nov-85 17:02:59-EST,1238;000000000000
Received: from MIT-GOLDILOCKS.ARPA by MIT-OZ via Chaosnet; 20 Nov 85 16:37-EST
Received: from YOGI.MIT.EDU by MIT-GOLDILOCKS.ARPA via CHAOS with CHAOS-MAIL id 9216; Wed 20-Nov-85 14:46:22-EST
Date: Wed, 20 Nov 85 14:45 EST
From: Niels Lauritzen <SR.LAURITZEN@SPEECH.MIT.EDU>
Subject: [Postmaster@MIT-GOLDILOCKS.ARPA: Unable to deliver letter]
To: bug-lispm@OZ.MIT.EDU
Message-ID: <851120144550.1.LAURITZEN@YOGI.MIT.EDU>

There is something wrong with the mail system under 6.1
I sent myself a test message and I get the message but
the postmaster also sends me this junk...

Date: Wednesday, 20 November 1985, 14:32-EST
From: Postmaster at MIT-GOLDILOCKS.ARPA
Subject: Unable to deliver letter
To: SR.LAURITZEN@SPEECH

Unable to deliver letter to the following recipient:
  lauritzen@SPEECH: Mail error from SPEECH: -No such mailbox at this site.

----- Text of letter follows -----
Received: from YOGI.MIT.EDU by MIT-GOLDILOCKS.ARPA via CHAOS with CHAOS-MAIL id 9214; Wed 20-Nov-85 14:32:10-EST
Date: Wed, 20 Nov 85 14:31 EST
From: Niels Lauritzen <SR.LAURITZEN@SPEECH.MIT.EDU>
Subject: test
To: sr.lauritzen@SPEECH.MIT.EDU, lauritzen@SPEECH.MIT.EDU
Message-ID: <851120143145.2.LAURITZEN@YOGI.MIT.EDU>

well
20-Nov-85 17:22:12-EST,5377;000000000000
Received: from MIT-DUANE by MIT-OZ via Chaosnet; 20 Nov 85 17:19-EST
Date: Wed, 20 Nov 85 17:18 EST
From: Patrick A. O'Donnell <PAO@EECS.MIT.EDU>
Subject: Ethernet receiver simple process calling PROCESS-WAIT
To: BUG-LISPM@OZ.AI.MIT.EDU
Message-ID: <851120171847.3.PAO@DUANE.AI.MIT.EDU>

In Symbolics 3670 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.0,
AISite 11.2, microcode TMC5-IO4-MIC 336, FEP 22, on Lisp Machine Duane Allman:

I don't know if it's relevant, but the GC was running when this happened.  I wasn't
doing anything particularly special.  Switching from a Lisp Listener to the Editor.

>>Error: Attempt to call PROCESS-WAIT from the simple process #<SIMPLE-PROCESS 3600 Ethernet Receiver 5600045>
While in the function PROCESS-WAIT  PROCESS-LOCK  (:METHOD SI:EQ-HASH-TABLE :GET-HASH)

PROCESS-WAIT:  (P.C. = 45)
   Arg 0 (SI:WHOSTATE): "Hash Table Lock"
   Arg 1 (FUNCTION): #<DTP-COMPILED-FUNCTION (:INTERNAL PROCESS-LOCK 0.) 6742041>
   Rest arg (SI:ARGUMENTS): (#<PROCESS IP Background 144245146> #<DTP-LOCATIVE 36622760>)
   Local 3 (SI:PROCESS-P): T
   Local 4 (SI:UNSIMPLE-P): NIL

PROCESS-LOCK:  (P.C. = 26)
   Arg 0 (SI:LOCATIVE-POINTER): #<DTP-LOCATIVE 36622760>
   Arg 1 (SI:LOCK-VALUE): NIL
   Local 1 (SI:LOCK-VALUE): #<SIMPLE-PROCESS 3600 Ethernet Receiver 5600045>
   Arg 2 (SI:WHOSTATE): "Hash Table Lock"

(:METHOD SI:EQ-HASH-TABLE :GET-HASH):  (P.C. = 15)
   Arg 0 (SELF): #<INTERNET-ADDRESS-HASH-TABLE 36622750>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor SI:EQ-HASH-TABLE -- 8. IV's, 0. FL's 5704213>
   Arg 2 (SI:OPERATION): :GET-HASH
   Arg 3 (SI:KEY): -2144075776.

(:INTERNAL (:METHOD TCP:INTERNET-ADDRESS-HASH-TABLE :COMBINED :GET-HASH) 0.):  (P.C. = 11)
   Arg 0 (SELF): #<INTERNET-ADDRESS-HASH-TABLE 36622750>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor TCP:INTERNET-ADDRESS-HASH-TABLE -- 0. IV's, 1. FL's 5704223>
   Arg 2 (SI:.OPERATION.): :GET-HASH
   Rest arg (SI:.DAEMON-CALLER-ARGS.): (-2144075776.)

(:METHOD TCP::INHIBIT-INTERRUPTS-HASH-TABLE-MIXIN :WHOPPER :GET-HASH):  (P.C. = 12)
   Arg 0 (SELF): #<INTERNET-ADDRESS-HASH-TABLE 36622750>
   Arg 1 (SYS:SELF-MAPPING-TABLE): TCP::INHIBIT-INTERRUPTS-HASH-TABLE-MIXIN
   Arg 2 (SI:.WHOPPER-CONTINUATION.): #<DTP-COMPILED-FUNCTION (:INTERNAL (:METHOD TCP:INTERNET-ADDRESS-HASH-TABLE :COMBINED :GET-HASH) 0.) 67301524>
   Arg 3 (SI:.OLD-SELF-MAPPING-TABLE.): #<Map to flavor TCP:INTERNET-ADDRESS-HASH-TABLE -- 0. IV's, 1. FL's 5704223>
   Arg 4 (SI:.OPERATION.): :GET-HASH
   Arg 5 (TCP::KEY): -2144075776.

(:METHOD TCP:INTERNET-ADDRESS-HASH-TABLE :COMBINED :GET-HASH):  (P.C. = 13)
   Arg 0 (SELF): #<INTERNET-ADDRESS-HASH-TABLE 36622750>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor TCP:INTERNET-ADDRESS-HASH-TABLE -- 0. IV's, 1. FL's 5704223>
   Arg 2 (SI:.OPERATION.): :GET-HASH
   Rest arg (SI:.DAEMON-CALLER-ARGS.): (-2144075776.)

(:METHOD TCP::IP-PROTOCOL :ROUTE-TO-ADDRESS):  (P.C. = 5)
   Arg 0 (SELF): #<IP-PROTOCOL 36622724>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor TCP::IP-PROTOCOL -- 19. IV's, 0. FL's 5703665>
   Arg 2 (SI:OPERATION): :ROUTE-TO-ADDRESS
   Arg 3 (TCP::FOREIGN-ADDRESS): -2144075776.

(:DEFUN-METHOD TCP::IP-RETRANSMIT-PACKET):  (P.C. = 21)<<Error printing function name>>
   Arg 0 (SELF): #<IP-PROTOCOL 36622724>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor TCP::IP-PROTOCOL -- 19. IV's, 0. FL's 5703665>
   Arg 2 (TCP::IP): #<IP-HEADER 5600371>
   Arg 3 (TCP::HEADER-LENGTH): 20.
   Arg 4 (TCP::TOTAL-LENGTH): 256.
   Arg 5 (TCP::SOURCE): -2144070107.
   Arg 6 (TCP::DESTINATION): -2144075776.
   Arg 7 (TCP::ROUTE): NIL
   Arg 8 (TCP::SOURCE-INTERFACE): #<3600-ETHERNET-INTERFACE 5600000>
   Arg 9 (TCP::FREE-FLAG): T

(:METHOD TCP::IP-PROTOCOL :RECEIVE-PACKET):  (P.C. = 211)<<Error printing function name>>
   Arg 0 (SELF): #<IP-PROTOCOL 36622724>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor TCP::IP-PROTOCOL -- 19. IV's, 0. FL's 5703665>
   Arg 2 (SI:OPERATION): :RECEIVE-PACKET
   Arg 3 (TCP::PKT): #(69. 0. 1. 0. 197. 147. 0. 0. 255. 17. ...))
   Arg 4 (TCP::SOURCE-INTERFACE): #<3600-ETHERNET-INTERFACE 5600000>
   Arg 5 (IGNORE): -2144070093.

(:METHOD TCP:INTERNET-NETWORK :RECEIVE-PACKET):  (P.C. = 11)
   Arg 0 (SELF): #<INTERNET-NETWORK INTERNET 1440424>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor TCP:INTERNET-NETWORK -- 1. IV's, 0. FL's 36710031>
   Arg 2 (SI:OPERATION): :RECEIVE-PACKET
   Arg 3 (TCP::PKT): #(69. 0. 1. 0. 197. 147. 0. 0. 255. 17. ...))
   Arg 4 (TCP::INTERFACE): #<3600-ETHERNET-INTERFACE 5600000>
   Arg 5 (TCP::ADDRESS): -2144070093.

(:METHOD NETI:ADDRESS-RESOLUTION-INTERFACE-MIXIN :RECEIVE-PROTOCOL-PACKET):  (P.C. = 31)
   Arg 0 (SELF): #<3600-ETHERNET-INTERFACE 5600000>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor NETI:ADDRESS-RESOLUTION-INTERFACE-MIXIN -- 4. IV's, 0. FL's 120212026>
   Arg 2 (SI:OPERATION): :RECEIVE-PROTOCOL-PACKET
   Arg 3 (NETI:PROTOCOL-PACKET): #(69. 0. 1. 0. 197. 147. 0. 0. 255. 17. ...))
   Arg 4 (NETI:PROTOCOL): 2048.

(:METHOD NETI:3600-ETHERNET-INTERFACE :TOP-LEVEL):  (P.C. = 171)
   Arg 0 (SELF): #<3600-ETHERNET-INTERFACE 5600000>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor NETI:3600-ETHERNET-INTERFACE -- 6. IV's, 2. FL's 120212364>
   Arg 2 (SI:OPERATION): :TOP-LEVEL

SI:PROCESS-SCHEDULER:  (P.C. = 345)
20-Nov-85 23:18:30-EST,2804;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 20 Nov 85 23:18-EST
Date: Wed 20 Nov 85 23:17:02-EST
From: John Wroclawski <JTW@MIT-SPEECH>
Subject: Re: [Postmaster@MIT-GOLDILOCKS.ARPA: Unable to deliver letter]
To: joseph@SCRC-QUABBIN.ARPA, sr.lauritzen@MIT-SPEECH
cc: bug-lispm@MIT-OZ
In-Reply-To: Message from "jean-pierre tanaka <joseph@SCRC-QUABBIN.ARPA>" of Wed 20 Nov 85 20:26:53-EST

    Received: from SCRC-STONY-BROOK.ARPA by MIT-MC.ARPA 20 Nov 85 20:26:09 EST
    Received: from HARLEM.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 359270; Wed 20-Nov-85 20:22:47-EST
    Date: Wed, 20 Nov 85 20:28 EST
    From: jean-pierre tanaka <joseph@SCRC-QUABBIN.ARPA>
    Subject: [Postmaster@MIT-GOLDILOCKS.ARPA: Unable to deliver letter]
    To: Niels Lauritzen <SR.LAURITZEN@SPEECH.MIT.EDU>, bug-lispm@OZ.MIT.EDU
    cc: jtw@MIT-MC.ARPA
    In-Reply-To: <851120144550.1.LAURITZEN@YOGI.MIT.EDU>
    Message-ID: <851120202817.3.JPT@HARLEM.SCRC.Symbolics.COM>

        Date: Wed, 20 Nov 85 14:45 EST
        From: Niels Lauritzen <SR.LAURITZEN@SPEECH.MIT.EDU>

        There is something wrong with the mail system under 6.1
        I sent myself a test message and I get the message but
        the postmaster also sends me this junk...

        Date: Wednesday, 20 November 1985, 14:32-EST
        From: Postmaster at MIT-GOLDILOCKS.ARPA
        Subject: Unable to deliver letter
        To: SR.LAURITZEN@SPEECH

        Unable to deliver letter to the following recipient:
          lauritzen@SPEECH: Mail error from SPEECH: -No such mailbox at this site.

        ----- Text of letter follows -----
        Received: from YOGI.MIT.EDU by MIT-GOLDILOCKS.ARPA via CHAOS with CHAOS-MAIL id 9214; Wed 20-Nov-85 14:32:10-EST
        Date: Wed, 20 Nov 85 14:31 EST
        From: Niels Lauritzen <SR.LAURITZEN@SPEECH.MIT.EDU>
        Subject: test
        To: sr.lauritzen@SPEECH.MIT.EDU, lauritzen@SPEECH.MIT.EDU
        Message-ID: <851120143145.2.LAURITZEN@YOGI.MIT.EDU>
    
        well

    It looks to me like speech requires you to specify your full account name
    in mail headers.  Thus, no bug in 6.1, and no bug in Twenex.  Just means
    a little more typing on your part.

    Perhaps JTW can confirm or deny this?  My knowledge of Twenex is pretty
    poor.



Joseph is right; you (Niels) tried to send mail to "LAURITZEN@SPEECH"
which is a nonexistant mailbox, and got a message back from speech saying
so. No problem there.

On the other hand, this business with 6.1 consing up domain names out of
thin air is pretty bogus. The assumption that just because a machine is
in the MIT namespace everybody in the world wants you to tack a MIT.EDU
on the name is not even a reasonable kludge.

-------
21-Nov-85 15:40:47-EST,242;000000000000
Received: from MIT-MC.ARPA by MIT-OZ via Chaosnet; 21 Nov 85 15:40-EST
Date: Thu, 21 Nov 85 15:42:42 EST
From: Bill Long <WJL@MIT-MC.ARPA>
To: BUG-LISPM@MIT-MC.ARPA
Message-ID: <[MIT-MC.ARPA].727111.851121.WJL>

How do I balance {}'s?
22-Nov-85 14:35:27-EST,4305;000000000000
Received: from MIT-MC.ARPA by MIT-OZ via Chaosnet; 22 Nov 85 14:35-EST
Received: from MEDIA-LAB by MIT-MC.ARPA 22 Nov 85 14:00:49 EST
Received: from ZAXXON (5005512) by MEDIA-LAB (4.12/4.8)  id AA04479; Fri, 22 Nov 85 12:59:47 est
Date: Friday, 22 November 1985, 12:57-EST
From: Alejandro <ferdi@ZAXXON>
Subject: Errors while closing a stream
To: BUG-LISPM@MEDIA-LAB.MIT.EDU
Cc: straz@MEDIA-LAB.MIT.EDU
Message-Id: <851122125704.1.FERDI@ZAXXON.ARPA>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, Experimental COLOR 135.1,
Experimental COLOR-DEMO 68.0, Experimental IMAGES 56.0,
Experimental COLOR-EDITOR 4.0, Experimental COLOR-PALETTE 2.0,
Experimental MENU 6.0, microcode TMC5-COLOR-MIC 319, on Zaxxon:

Whenever I run LOAD-Y, just after it reads the last character in the file,
I get this error. It doesn't matter if I try to read a smaller portion
[say, height=300] of the file; the error is the same.

(defun load-y (name &optional (left 0)(top 0) (width 768) (height 480.))
  (let ((file (string-append *pathname-prefix* name)))
    (with-open-file (f file :characters nil :byte-size 8 :direction :input)
      (let* ((sc-array (send color:color-screen :screen-array))
	     (array (car (send color:color-screen :packed-pixel-mode-arrays sc-array))))
	(loop for y from top below (+ top height)
	      do (loop for x from left below (+ left width)
		       do (aset (send f :tyi) array x y)))))))
;------------------------------------------------------------------------------

>>Error: FTP control connection closed unexpectedly.
While in the function FS:TCP-FTP-PARSE-REPLY  (:DEFUN-METHOD FS:TCP-FTP-GET-COMMAND-RESPONSE)  (:DEFUN-METHOD FS:TCP-FTP-CHECK-COMMAND-RESPONSE)

FS:TCP-FTP-PARSE-REPLY:  (P.C. = 14)
   Arg 0 (STREAM): #<TCP-ASCII-STREAM 51757505>
   Local 1 (LINE): ""
   Local 2 (EOF): T
   Local 3 (NIAC): NIL

(:DEFUN-METHOD FS:TCP-FTP-GET-COMMAND-RESPONSE):  (P.C. = 4)
   Arg 0 (SELF): #<TCP-FTP-CONN 51757467>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:TCP-FTP-CONN -- 8. IV's, 0. FL's 1156706>

(:DEFUN-METHOD FS:TCP-FTP-CHECK-COMMAND-RESPONSE):  (P.C. = 60)
   Arg 0 (SELF): #<TCP-FTP-CONN 51757467>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:TCP-FTP-CONN -- 8. IV's, 0. FL's 1156706>
   Arg 2 (EXPECTED-VALUE): (226 250 426 451)
   --Defaulted args:--
   Arg 3 (CTL-STRING): NIL
   Rest arg (ARGS): NIL

(:METHOD FS:TCP-FTP-CONN :DATA-STREAM-CLOSE):  (P.C. = 52)
   Arg 0 (SELF): #<TCP-FTP-CONN 51757467>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:TCP-FTP-CONN -- 8. IV's, 0. FL's 1156706>
   Arg 2 (OPERATION): :DATA-STREAM-CLOSE
   Arg 3 (STREAM): #<FTP-STREAM-MODE-IMAGE-INPUT-STREAM "AMT: //suns//dead//super.80" 51757764>
   Arg 4 (ABORT-P): NIL

(:METHOD TCP::FTP-AUX-STREAM :AFTER :CLOSE):  (P.C. = 7)
   Arg 0 (SELF): #<FTP-STREAM-MODE-IMAGE-INPUT-STREAM "AMT: //suns//dead//super.80" 51757764>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TCP::FTP-AUX-STREAM -- 3. IV's, 0. FL's 1141766>
   Arg 2 (OPERATION): :CLOSE
   Arg 3 (ABORT-P): NIL

(:METHOD TCP::FTP-STREAM-MODE-IMAGE-INPUT-STREAM :COMBINED :CLOSE):  (P.C. = 37)
   Arg 0 (SELF): #<FTP-STREAM-MODE-IMAGE-INPUT-STREAM "AMT: //suns//dead//super.80" 51757764>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TCP::FTP-STREAM-MODE-IMAGE-INPUT-STREAM -- 4. IV's, 7. FL's 1142634>
   Arg 2 (.OPERATION.): :CLOSE
   Rest arg (.DAEMON-CALLER-ARGS.): (NIL)

SI:CLOSE-OPEN-STREAM:  (P.C. = 14)
   Arg 0 (STREAM): #<FTP-STREAM-MODE-IMAGE-INPUT-STREAM "AMT: //suns//dead//super.80" 51757764>
   Arg 1 (ABORT): NIL

LOAD-Y:  (P.C. = 122)  (from ZAXXON:>ferdi>utilities>amt-to-lisp)
   Arg 0 (NAME): "super.80"
   Arg 1 (LEFT): 0
   Arg 2 (TOP): 0
   Arg 3 (WIDTH): 768
   Arg 4 (HEIGHT): 300

Rest of stack:
SI:*EVAL:  (P.C. = 403)
(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0):  (P.C. = 152)
TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
SI:BREAK-INTERNAL:  (P.C. = 176)
ZWEI:COM-BREAK:  (P.C. = 64)
ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 233)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 60)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 51)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)

22-Nov-85 18:30:35-EST,1491;000000000000
Received: from MIT-MC.ARPA by MIT-OZ via Chaosnet; 22 Nov 85 18:30-EST
Received: from MEDIA-LAB by MIT-MC.ARPA 22 Nov 85 18:29:20 EST
Received: from MIT-MC.ARPA (2c00030a) by MEDIA-LAB (4.12/4.8)  id AA09690; Fri, 22 Nov 85 18:26:52 est
Received: from SCRC-STONY-BROOK.ARPA by MIT-MC.ARPA 22 Nov 85 17:59:04 EST
Received: from WARE.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 360915; Fri 22-Nov-85 17:39:56-EST
Date: Fri, 22 Nov 85 17:41 EST
From: David Schatsky <schatsky@SCRC-YUKON.ARPA>
Subject: PROBE-DIRECTORY
To: jrd@MEDIA-LAB.MIT.EDU, BUG-LISPM@MEDIA-LAB.MIT.EDU
In-Reply-To: <851122102419.1.JRD@XEVIOUS.ARPA>
Message-Id: <851122174135.2.SCHATSKY@WARE.SCRC.Symbolics.COM>

    Date: Fri, 22 Nov 85 10:24 EST
    From: James R. Davis <jrd@MEDIA-LAB.MIT.EDU>

    In Symbolics 3600 Release 6.1, IP-TCP 29.13, COLOR 135.34,
    microcode TMC5-MIC 336, on Xevious:

    I was doing a make-system :compile of a system kept on the Vax.  

Is your VAX capable of speaking Chaos?  You have a provided an example
of something you can't do with TCP-FTP, namely use it for SYS host-type
stuff.  If you don't have a Chaosnet connection to your VAX
you can't store lispm systems there.


    >>Error: Unknown direction PROBE-DIRECTORY
    While in the function (:METHOD FS:TCP-FTP-CONN :OPEN)  (:METHOD FS:TCP-FTP-FILE-ACCESS-PATH :OPEN)  (:METHOD FS:ACTIVE-PATHNAME-MIXIN :OPEN)

    (:METHOD FS:TCP-FTP-CONN :OPEN):  (P.C. = 207)


22-Nov-85 20:44:41-EST,4575;000000000000
Received: from MIT-MC.ARPA by MIT-OZ via Chaosnet; 22 Nov 85 20:44-EST
Received: from MEDIA-LAB by MIT-MC.ARPA 22 Nov 85 10:25:45 EST
Received: from XEVIOUS.ARPA (4005512) by MEDIA-LAB (4.12/4.8)  id AA02303; Fri, 22 Nov 85 10:24:24 est
Date: Fri, 22 Nov 85 10:24 EST
From: James R. Davis <jrd@MEDIA-LAB.MIT.EDU>
Subject: PROBE-DIRECTORY
To: BUG-LISPM@MEDIA-LAB.MIT.EDU
Message-Id: <851122102419.1.JRD@XEVIOUS.ARPA>

In Symbolics 3600 Release 6.1, IP-TCP 29.13, COLOR 135.34,
microcode TMC5-MIC 336, on Xevious:

I was doing a make-system :compile of a system kept on the Vax.  

>>Error: Unknown direction PROBE-DIRECTORY
While in the function (:METHOD FS:TCP-FTP-CONN :OPEN)  (:METHOD FS:TCP-FTP-FILE-ACCESS-PATH :OPEN)  (:METHOD FS:ACTIVE-PATHNAME-MIXIN :OPEN)

(:METHOD FS:TCP-FTP-CONN :OPEN):  (P.C. = 207)
   Arg 0 (SELF): #<TCP-FTP-CONN 11202621>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor FS:TCP-FTP-CONN -- 8. IV's, 0. FL's 1156535>
   Arg 2 (SI:OPERATION): :OPEN
   Arg 3 (FS:TRANSLATED): #<UNIX42-PATHNAME "AMT: //local//lib//streets//database//Dir-Data-1//Dir-Data-1.patch-dir">
   Arg 4 (FS:PATHNAME): #<LOGICAL-PATHNAME "DIRECTIONS: DB; DIR-DATA-1.PATCH-DIR.NEWEST">
   Rest arg: (:DIRECTION :PROBE-DIRECTORY)
   Local 6 (FS:DIRECTION): :PROBE-DIRECTORY
   Local 7 (BYTE-SIZE): NIL
   Local 8 (FS:CHARACTERS): T
   Local 9 (FS:PRESERVE-DATES): NIL
   Local 10 (FS:IF-EXISTS): NIL
   Local 11 (FS:IF-DOES-NOT-EXIST): NIL
   Local 12 (FS:ESTIMATED-LENGTH): NIL
   Local 13: SYS:UNWIND-PROTECT-TAG
   Local 14: #<DTP-ODD-PC 67367134>
   Local 15: #<DTP-LOCATIVE 440210>
   Local 16: #<DTP-LOCATIVE 500542>
   Local 17 (FS:PROP): "Unknown direction ~A"

(:METHOD FS:TCP-FTP-FILE-ACCESS-PATH :OPEN):  (P.C. = 12)
   Arg 0 (SELF): #<UNIX-TCP-FTP-FILE-ACCESS-PATH AMT using TCP-FTP 11072157>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor FS:TCP-FTP-FILE-ACCESS-PATH -- 2. IV's, 2. FL's 1157410>
   Arg 2 (SI:OPERATION): :OPEN
   Rest arg (ARGS): (#<UNIX42-PATHNAME "AMT: //local//lib//streets//database//Dir-Data-1//Dir-Data-1.patch-dir"> #<LOGICAL-PATHNAME "DIRECTIONS: DB; DIR-DATA-1.PATCH-DIR.NEWEST"> :DIRECTION :PROBE-DIRECTORY)

(:METHOD FS:ACTIVE-PATHNAME-MIXIN :OPEN):  (P.C. = 14)
   Arg 0 (SELF): #<UNIX42-PATHNAME "AMT: //local//lib//streets//database//Dir-Data-1//Dir-Data-1.patch-dir">
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor FS:ACTIVE-PATHNAME-MIXIN -- 1. IV's, 0. FL's 121146543>
   Arg 2 (SI:OPERATION): :OPEN
   Arg 3 (FS:PATHNAME): #<LOGICAL-PATHNAME "DIRECTIONS: DB; DIR-DATA-1.PATCH-DIR.NEWEST">
   Rest arg (FS:OPTIONS): (:DIRECTION :PROBE-DIRECTORY)

(:DEFUN-METHOD FS:LOGICAL-PATHNAME-PASS-ON):  (P.C. = 10)
   Arg 0 (SELF): #<LOGICAL-PATHNAME "DIRECTIONS: DB; DIR-DATA-1.PATCH-DIR.NEWEST">
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor FS:LOGICAL-PATHNAME -- 8. IV's, 3. FL's 120045753>
   Arg 2 (FS:MESSAGE): :OPEN
   Rest arg (FS:REST): (#<LOGICAL-PATHNAME "DIRECTIONS: DB; DIR-DATA-1.PATCH-DIR.NEWEST"> :DIRECTION :PROBE-DIRECTORY)

(:METHOD FS:LOGICAL-PATHNAME :OPEN):  (P.C. = 10)
   Arg 0 (SELF): #<LOGICAL-PATHNAME "DIRECTIONS: DB; DIR-DATA-1.PATCH-DIR.NEWEST">
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor FS:LOGICAL-PATHNAME -- 8. IV's, 3. FL's 120045753>
   Arg 2 (SI:OPERATION): :OPEN
   Rest arg (SI:.ARGS.): (#<LOGICAL-PATHNAME "DIRECTIONS: DB; DIR-DATA-1.PATCH-DIR.NEWEST"> :DIRECTION :PROBE-DIRECTORY)

FS:COMMON-LISP-OPEN:  (P.C. = 450)
   Arg 0 (FS:PATHNAME): #<LOGICAL-PATHNAME "DIRECTIONS: DB; DIR-DATA-1.PATCH-DIR.NEWEST">
   Arg 1 (FS:KEYWORD-ARGS): (:DIRECTION :PROBE-DIRECTORY)

OPEN:  (P.C. = 257)
   Arg 0 (FS:PATHNAME): #<LOGICAL-PATHNAME "DIRECTIONS: DB; DIR-DATA-1.PATCH-DIR.NEWEST">
   Rest arg (FS:KEYWORD-ARGS): (:DIRECTION :PROBE-DIRECTORY)

SI:WRITE-PATCH-DIRECTORY:  (P.C. = 61)
   Arg 0 (SI:PATCH): ("Directions Database" 1)
   Arg 1 (SI:PATCH-DIR): (:EXPERIMENTAL ((0 "Directions Database Loaded" "jrd" NIL)))
   Arg 2 (SI:FIRST-TIME): T

Rest of stack:
SI:INCREMENT-PATCH-SYSTEM-MAJOR-VERSION:  (P.C. = 60)
SI:INCREMENT-COMPILED-VERSION-1:  (P.C. = 21)
SI:DO-FILE-TRANSFORMATIONS:  (P.C. = 244)
SI:PERFORM-TRANSFORMATIONS:  (P.C. = 167)
SI:PERFORM-TRANSFORMATIONS:  (P.C. = 64)
MAKE-SYSTEM:  (P.C. = 241)
SI:*EVAL:  (P.C. = 401)
(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0):  (P.C. = 152)
TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
SI:LISP-COMMAND-LOOP:  (P.C. = 67)
SI:LISP-TOP-LEVEL1:  (P.C. = 5)
SI:LISP-TOP-LEVEL:  (P.C. = 7)

23-Nov-85 02:44:48-EST,814;000000000000
Received: from MIT-MC.ARPA by MIT-OZ via Chaosnet; 23 Nov 85 02:44-EST
Received: from MIT-REAGAN.ARPA by MIT-MC.ARPA via Chaosnet; 23 NOV 85  02:46:00 EST
Received: from OZ.AI.MIT.EDU by MIT-REAGAN.ARPA via CHAOS with CHAOS-MAIL id 15544; Sat 23-Nov-85 02:43:31-EST
Received: from MIT-MORRISON.ARPA by MIT-OZ via Chaosnet; 23 Nov 85 02:44-EST
Date: Sat, 23 Nov 85 02:43 EST
From: jcma@MIT-MC.ARPA
Subject: Suppressing Package Prefix Printing
To: BUG-LISPM@MIT-REAGAN.ARPA
Message-ID: <851123024304.2.JCMA@MIT-MORRISON.ARPA>

In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.1,
AISite 11.2, Experimental RELATUS 145.33, microcode TMC5-MIC 336, FEP 22, on Lisp Machine Jim Morrison:
What is the current way this is supposed to be done?

Letting package to NIL used work, but no longer does.
23-Nov-85 18:27:39-EST,619;000000000000
Received: from MIT-MC.ARPA by MIT-OZ via Chaosnet; 23 Nov 85 18:27-EST
Received: from MIT-REAGAN.ARPA by MIT-MC.ARPA via Chaosnet; 23 NOV 85  18:28:35 EST
Received: from JIMI.AI.MIT.EDU by MIT-REAGAN.ARPA via CHAOS with CHAOS-MAIL id 15569; Sat 23-Nov-85 18:26:33-EST
Date: Sat, 23 Nov 85 18:26 EST
From: David Vinayak Wallace <Gumby@MIT-MC.ARPA>
Subject: Suppressing Package Prefix Printing
To: jcma@MIT-MC.ARPA
cc: BUG-LISPM@MIT-REAGAN.ARPA
In-Reply-To: <851123024304.2.JCMA@MIT-MORRISON.ARPA>
Message-ID: <851123182610.2.GUMBY@JIMI.AI.MIT.EDU>

What's wrong with using PRINC i.e. (format t "~A" symbol)?
24-Nov-85 02:41:50-EST,810;000000000000
Received: from MIT-MC.ARPA by MIT-OZ via Chaosnet; 24 Nov 85 02:41-EST
Received: from MIT-REAGAN.ARPA by MIT-MC.ARPA via Chaosnet; 24 NOV 85  02:42:55 EST
Received: from OZ.AI.MIT.EDU by MIT-REAGAN.ARPA via CHAOS with CHAOS-MAIL id 15609; Sun 24-Nov-85 02:40:23-EST
Received: from MIT-MORRISON.ARPA by MIT-OZ via Chaosnet; 24 Nov 85 02:40-EST
Date: Sun, 24 Nov 85 02:39 EST
From: jcma@MIT-MC.ARPA
Subject: Suppressing Package Prefix Printing
To: Gumby@MIT-MC.ARPA
cc: BUG-LISPM@MIT-REAGAN.ARPA
In-Reply-To: <851123182610.2.GUMBY@JIMI.AI.MIT.EDU>
Message-ID: <851124023950.1.JCMA@MIT-MORRISON.ARPA>

    Date: Sat, 23 Nov 85 18:26 EST
    From: David Vinayak Wallace <Gumby@MIT-MC.ARPA>

    What's wrong with using PRINC i.e. (format t "~A" symbol)?
I want to do it globally at certain times.
24-Nov-85 16:29:34-EST,1083;000000000000
Received: from MIT-MC.ARPA by MIT-OZ via Chaosnet; 24 Nov 85 16:29-EST
Received: from MIT-REAGAN.ARPA by MIT-MC.ARPA via Chaosnet; 24 NOV 85  16:28:46 EST
Received: from OZ.AI.MIT.EDU by MIT-REAGAN.ARPA via CHAOS with CHAOS-MAIL id 15629; Sun 24-Nov-85 16:26:36-EST
Date: 24 Nov 1985  16:26 EST (Sun)
Message-ID: <RPK.12161880857.BABYL@MIT-OZ>
From: "Robert P. Krajewski" <RPK@MIT-OZ>
To:   David Vinayak Wallace <Gumby@MIT-MC.ARPA>
Cc:   BUG-LISPM@MIT-REAGAN.ARPA, jcma@MIT-MC.ARPA
Subject: Suppressing Package Prefix Printing

What if you want slashification ?

What you really need is NIL's si:*print-package* variable:

Possible values are:
NIL	The default -- don't do anything hairy.
:ALWAYS	Always print the package name
	(print ":" for keywords, "#:" for uninterned if *PRINT-GENSYM*)
:NEVER	Never print package prefixes (even for keywords or uninterned)
A package object
	Print symbols as if *PACKAGE* were bound to that package.
  The last two should be used with caution as they may be
  very confusing to users (or even hackers)

(Thanks to GSB.)
25-Nov-85 03:20:13-EST,1288;000000000000
Received: from MIT-MC.ARPA by MIT-OZ via Chaosnet; 25 Nov 85 03:20-EST
Received: from MIT-REAGAN.ARPA by MIT-MC.ARPA via Chaosnet; 25 NOV 85  03:21:27 EST
Received: from MIT-MC.ARPA by MIT-REAGAN.ARPA via CHAOS with CHAOS-MAIL id 15707; Mon 25-Nov-85 03:18:56-EST
Date: Mon, 25 Nov 85 03:20:57 EST
From: David Vinayak Wallace <GUMBY@MIT-MC.ARPA>
Subject:  Suppressing Package Prefix Printing
To: RPK@MIT-OZ
cc: JCMA@MIT-MC.ARPA, BUG-LISPM@MIT-REAGAN.ARPA
In-reply-to: Msg of 24 Nov 1985  16:26 EST (Sun) from Robert P. Krajewski <RPK%MIT-OZ at MIT-MC.ARPA>
Message-ID: <[MIT-MC.ARPA].731617.851125.GUMBY>

    Date: 24 Nov 1985  16:26 EST (Sun)
    From: Robert P. Krajewski <RPK%MIT-OZ at MIT-MC.ARPA>

    What if you want slashification ?

    What you really need is NIL's si:*print-package* variable:

    Possible values are:
    NIL	The default -- don't do anything hairy.
    :ALWAYS	Always print the package name
    :NEVER	Never print package prefixes

    The last two should be used with caution as they may be
    very confusing to users (or even hackers)

Why would you want slashification if you don't want to be able to read
the symbol again?  In which case you want the package prefix too!
The last two lines above are most telling wrt this.
25-Nov-85 04:06:33-EST,1407;000000000000
Received: from MIT-MC.ARPA by MIT-OZ via Chaosnet; 25 Nov 85 04:06-EST
Received: from MIT-REAGAN.ARPA by MIT-MC.ARPA via Chaosnet; 25 NOV 85  04:07:34 EST
Received: from OZ.AI.MIT.EDU by MIT-REAGAN.ARPA via CHAOS with CHAOS-MAIL id 15712; Mon 25-Nov-85 04:05:17-EST
Received: from MIT-MORRISON.ARPA by MIT-OZ via Chaosnet; 25 Nov 85 04:05-EST
Date: Mon, 25 Nov 85 04:04 EST
From: jcma@MIT-MC.ARPA
Subject: Suppressing Package Prefix Printing
To: RPK@OZ.AI.MIT.EDU
cc: BUG-LISPM@MIT-REAGAN.ARPA
In-Reply-To: <RPK.12161880857.BABYL@MIT-OZ>
Message-ID: <851125040451.5.JCMA@MIT-MORRISON.ARPA>

    Date: 24 Nov 1985  16:26 EST (Sun)
    From: "Robert P. Krajewski" <RPK%MIT-OZ@MIT-MC.ARPA>

    What if you want slashification ?

    What you really need is NIL's si:*print-package* variable:

    Possible values are:
    NIL	The default -- don't do anything hairy.
    :ALWAYS	Always print the package name
	    (print ":" for keywords, "#:" for uninterned if *PRINT-GENSYM*)
    :NEVER	Never print package prefixes (even for keywords or uninterned)
    A package object
	    Print symbols as if *PACKAGE* were bound to that package.
      The last two should be used with caution as they may be
      very confusing to users (or even hackers)

    (Thanks to GSB.)

Yes, this is what I want.  And yes, it should be used with extreme caution
lest users get totally confused.
25-Nov-85 08:12:42-EST,1267;000000000000
Received: from MIT-MC.ARPA by MIT-OZ via Chaosnet; 25 Nov 85 08:12-EST
Received: from MIT-REAGAN.ARPA by MIT-MC.ARPA via Chaosnet; 25 NOV 85  08:13:51 EST
Received: from OZ.AI.MIT.EDU by MIT-REAGAN.ARPA via CHAOS with CHAOS-MAIL id 15718; Mon 25-Nov-85 08:11:40-EST
Received: from MIT-MORRISON.ARPA by MIT-OZ via Chaosnet; 25 Nov 85 08:12-EST
Date: Mon, 25 Nov 85 08:11 EST
From: jcma@MIT-MC.ARPA
Subject: Domain Lossage
To: BUG-LISPM@MIT-REAGAN.ARPA
Message-ID: <851125081123.1.JCMA@MIT-MORRISON.ARPA>

In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.2,
AISite 11.2, Experimental RELATUS 145.34, microcode TMC5-MIC 336, FEP 22, on Lisp Machine Jim Morrison:

Well, this comes up more and more.

As more sites convert to the internet domain system, the lispm TCP and mail
system suck worse and worse.  For example, I can no longer reply to some
incoming qsends because converse can't hack the headers (even obvious ones).
Note that the reverse situation used to hold.  For another example, when I try
to reply in mail, Zmail comes up with internet domain addresses that the lispm
mailer cannot handle.  So, I have to use the OZ mailer or a unix.  So, the
reliability of mail on lispm has been reduced to depending on Tops-20 or Unix!
25-Nov-85 10:23:24-EST,1101;000000000000
Received: from MIT-MC.ARPA by MIT-OZ via Chaosnet; 25 Nov 85 10:23-EST
Received: from MIT-REAGAN.ARPA by MIT-MC.ARPA via Chaosnet; 25 NOV 85  10:01:30 EST
Received: from SCRC-STONY-BROOK.ARPA by MIT-REAGAN.ARPA via INTERNET with SMTP id 15724; 25 Nov 85 09:59:20-EST
Received: from THAMES.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 361928; Mon 25-Nov-85 09:54:34-EST
Date: Mon, 25 Nov 85 09:56 EST
From: Scott McKay <SWM@SCRC-QUABBIN.ARPA>
Subject: Suppressing Package Prefix Printing
To: jcma@MIT-MC.ARPA, BUG-LISPM@MIT-REAGAN.ARPA
In-Reply-To: <851123024304.2.JCMA@MIT-MORRISON.ARPA>
Message-ID: <851125095642.3.SWM@THAMES.SCRC.Symbolics.COM>

    Date: Sat, 23 Nov 85 02:43 EST
    From: jcma@MIT-MC.ARPA

    In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.1,
    AISite 11.2, Experimental RELATUS 145.33, microcode TMC5-MIC 336, FEP 22, on Lisp Machine Jim Morrison:
    What is the current way this is supposed to be done?

    Letting package to NIL used work, but no longer does.

It works for me.  When doesn't it work for you?

26-Nov-85 07:55:45-EST,3003;000000000000
Received: from MIT-JIMI by MIT-OZ via Chaosnet; 26 Nov 85 07:55-EST
Date: Tue, 26 Nov 85 07:54 EST
From: David Vinayak Wallace <Gumby@MIT-MC.ARPA>
Subject: Hardcopy system
To: BUG-LISPM@OZ.AI.MIT.EDU
Message-ID: <851126075459.9.GUMBY@JIMI.AI.MIT.EDU>

In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.2,
AISite 11.2, microcode TMC5-MIC 336, on Lisp Machine Jimi Hendrix:

Many hardcopy gripes

1> Despite documentation to the contrary, "hardcopy" to a window doesn't
   work at all.  Among other things, the scaling is all confused.

2> The documentation is practically useless.  Why not more about what
   the different messages mean; what their returned values are ("returns
   current position of the cursor in <units>" is COMPLETELY usless);
   what the interaction of the different :FONT messages is (and more
   examples of reasonable values).

3> I cannot get si:make-hardcopy-stream to work (see backtrace).  I have
   to send the messages myself.  There's no reason you should send that
   :pretty-name message unless you FAIL to make the device!

This is one thing Interlisp-D does well, so I know it can be done.

>>Error: The object #<DEBUG-HARDCOPY-DEVICE 7254170> received a :PRETTY-NAME message, which went unclaimed.
         The rest of the message was ()
While in the function SI:MAKE-HARDCOPY-STREAM  SI:*EVAL  SETQ

SI:MAKE-HARDCOPY-STREAM:  (P.C. = 12)
   Arg 0 (SI:DEVICE): :DEBUG
   Local 0 (SI:DEVICE): #<DEBUG-HARDCOPY-DEVICE 7254170>
   Rest arg (SI:OPTIONS): NIL
   Local 2: NIL

SI:*EVAL:  (P.C. = 401)
   Arg 0 (SI:FORM): (SI:MAKE-HARDCOPY-STREAM :DEBUG)
   Local 0 (SI:FORM): NIL
   Arg 1 (SI:ENV): NIL
   --Defaulted args:--
   Arg 2 (SI:HOOK): NIL

SETQ:  (P.C. = 24)
   Arg 0 (SI:FORM): (SETQ TEST (SI:MAKE-HARDCOPY-STREAM :DEBUG))
   Arg 1 (SI:ENV): NIL

SI:*EVAL:  (P.C. = 163)
   Arg 0 (SI:FORM): (SETF TEST (SI:MAKE-HARDCOPY-STREAM :DEBUG))
   Local 0 (SI:FORM): (SETQ TEST (SI:MAKE-HARDCOPY-STREAM :DEBUG))
   Arg 1 (SI:ENV): NIL
   --Defaulted args:--
   Arg 2 (SI:HOOK): NIL

(:INTERNAL SI:BREAK-INTERNAL 1.):  (P.C. = 4)
   Arg 0 (COMPILER:.LEXICAL-ENVIRONMENT-POINTER.): (NIL)
   Arg 1 (SI:FORM): (SETF TEST (SI:MAKE-HARDCOPY-STREAM :DEBUG))

(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0.):  (P.C. = 152)
   Arg 0 (COMPILER:.LEXICAL-ENVIRONMENT-POINTER.): #<DTP-LOCATIVE 43440264>

TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
   Arg 0 (TV:NEW-MODE): :BLAST
   Arg 1 (TV:STREAM): #:TERMINAL-IO-SYN-STREAM
   Arg 2 (TV:CONTINUATION): #<LEXICAL-CLOSURE (:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0.) 43440271>

SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
   Arg 0 (SI:NAME): "Breakpoint ZMACS"
   Arg 1 (SI:ABORT-FUNCTION): SI:BREAK-HERALD
   Arg 2 (SI:READ-FUNCTION): #<LEXICAL-CLOSURE (:INTERNAL SI:BREAK-INTERNAL 0.) 33165713>
   Arg 3 (SI:EVAL-FUNCTION): #<LEXICAL-CLOSURE (:INTERNAL SI:BREAK-INTERNAL 1.) 33165715>
   --Defaulted args:--
   Arg 4 (SI:PRINT-FUNCTION): NIL
26-Nov-85 09:53:59-EST,4227;000000000000
Received: from MIT-JIMI by MIT-OZ via Chaosnet; 26 Nov 85 09:53-EST
Date: Tue, 26 Nov 85 09:53 EST
From: David Vinayak Wallace <Gumby@MIT-MC.ARPA>
Subject: Flavor LGP:LGP2-PAGE-BUFFERING-STREAM does not handle the init keyword :INTERPRET-FONT-CHANGES
To: BUG-LISPM@OZ.AI.MIT.EDU
Message-ID: <851126095301.0.GUMBY@JIMI.AI.MIT.EDU>

In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.2,
AISite 11.2, microcode TMC5-MIC 336, on Lisp Machine Jimi Hendrix:

Though it's documented to.

>>Error: Flavor LGP:LGP2-PAGE-BUFFERING-STREAM does not handle the init keyword :INTERPRET-FONT-CHANGES
While in the function INSTANTIATE-FLAVOR  MAKE-INSTANCE  (:METHOD SI:HARDCOPY-DEVICE-MIXIN :MAKE-HARDCOPY-STREAM)

INSTANTIATE-FLAVOR:  (P.C. = 425)
   Arg 0 (SI:FLAVOR-NAME): LGP:LGP2-PAGE-BUFFERING-STREAM
   Arg 1 (SI:INIT-PLIST): #<DTP-LOCATIVE 43440462>
   Arg 2 (SI:SEND-INIT-MESSAGE-P): :MAYBE
   --Defaulted args:--
   Arg 3 (SI:RETURN-UNHANDLED-KEYWORDS-P): NIL
   Arg 4 (SI:AREA-TO-CONS-INSTANCE-IN): NIL
   Local 5 (SI:FL): #<FLAVOR LGP:LGP2-PAGE-BUFFERING-STREAM 123366702>
   Local 6 (SI:UNHANDLED-KEYWORDS): (:INTERPRET-FONT-CHANGES)
   Local 7 (SI:INSTANCE): #<LGP2-PAGE-BUFFERING-STREAM 33115234>
   Local 8 (SI:VARS): (SI:OLD-OUTPUT-STREAM SI:PAGE-BUFFERS SI:COPIES SI:PRINT-BACKWARDS SI:FONT-SQUISH-TABLE LGP:CHAR-STRING LGP:CHAR-STRING-IN-USE SI:DEVICE-CURSOR-X SI:DEVICE-CURSOR-Y SYS:PAGE-WIDTH ...)
   Local 9 (SI:INIT-INFO): (((:KEEP-OUTPUT-STREAM-OPEN-P 22.) (:BANNER-STRING 39.) (:PAGE-NUMBER 32.) (:PAGE-HEADING-DATE 41.) (:PAGE-HEADING 40.) (:BANNER-FILE-NAME 38.) (:BANNER-CREATION-DATE 37.) (:BANNER-USER-NAME 36.) (:LANDSCAPE-P 30.) (:PAGE-HEIGHT 11.) ...) ((SI:PAGE-BUFFERS 2. NIL) (SI:COPIES 3. 1.) (SI:PRINT-BACKWARDS 4. T) (:MARGINS NIL (QUOTE **)) (SI:DEVICE-CURSOR-X 8. -999.92) (SI:DEVICE-CURSOR-Y 9. -999.92) (SYS:PAGE-WIDTH 10. (* 8.5 72.)) (SI:PAGE-HEIGHT 11. (* 11. 72.)) (SI:BASELINE 12. 18.) (SI:LINE-HEIGHT 13. 24.) ...) (:HEADER-FONT-P :HEADER-FONT :DEFAULT-FONT :TV-FONTS :PRESS-FONTS :FONTS :FONT :MARGINS :COPIES :BITMAP-ONLY-P) NIL NIL NIL)
   Local 10 (SI:INITABLE-IVS): ((:KEEP-OUTPUT-STREAM-OPEN-P 22.) (:BANNER-STRING 39.) (:PAGE-NUMBER 32.) (:PAGE-HEADING-DATE 41.) (:PAGE-HEADING 40.) (:BANNER-FILE-NAME 38.) (:BANNER-CREATION-DATE 37.) (:BANNER-USER-NAME 36.) (:LANDSCAPE-P 30.) (:PAGE-HEIGHT 11.) ...)
   Local 11 (SI:REQUIRED-KEYWORDS): NIL

MAKE-INSTANCE:  (P.C. = 6)
   Arg 0 (SI:FLAVOR-NAME): LGP:LGP2-PAGE-BUFFERING-STREAM
   Rest arg (SI:INIT-OPTIONS): (:DEVICE #<LGP2-PRINTER LE-MONDE 1441600> :OUTPUT-STREAM #<CHARACTER-STREAM 33115215> :INTERPRET-FONT-CHANGES T)
   Local 1 (SI:INIT-OPTIONS): (:MARGINS (2000. 1270. 2000. 1270.) :DEVICE #<LGP2-PRINTER LE-MONDE 1441600> :OUTPUT-STREAM #<CHARACTER-STREAM 33115215> :INTERPRET-FONT-CHANGES T)

(:METHOD SI:HARDCOPY-DEVICE-MIXIN :MAKE-HARDCOPY-STREAM):  (P.C. = 157)
   Arg 0 (SELF): #<LGP2-PRINTER LE-MONDE 1441600>
   Arg 1 (SYS:SELF-MAPPING-TABLE): SI:HARDCOPY-DEVICE-MIXIN
   Arg 2 (SI:OPERATION): :MAKE-HARDCOPY-STREAM
   Arg 3 (SI:OPTIONS): (:INTERPRET-FONT-CHANGES T)

TEST:  (P.C. = 6)  (from B:>Gumby>Lisp>Hardcopy)

SI:*EVAL:  (P.C. = 401)
   Arg 0 (SI:FORM): (TEST)
   Local 0 (SI:FORM): NIL
   Arg 1 (SI:ENV): NIL
   --Defaulted args:--
   Arg 2 (SI:HOOK): NIL

(:INTERNAL SI:BREAK-INTERNAL 1.):  (P.C. = 4)
   Arg 0 (COMPILER:.LEXICAL-ENVIRONMENT-POINTER.): (NIL)
   Arg 1 (SI:FORM): (TEST)

(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0.):  (P.C. = 152)
   Arg 0 (COMPILER:.LEXICAL-ENVIRONMENT-POINTER.): #<DTP-LOCATIVE 43440265>

TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
   Arg 0 (TV:NEW-MODE): :BLAST
   Arg 1 (TV:STREAM): #:TERMINAL-IO-SYN-STREAM
   Arg 2 (TV:CONTINUATION): #<LEXICAL-CLOSURE (:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0.) 43440272>

Rest of stack:
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
SI:BREAK-INTERNAL:  (P.C. = 212)
ZWEI:COM-BREAK:  (P.C. = 65)
ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 233)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 60)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 51)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
26-Nov-85 21:54:40-EST,3833;000000000000
Received: from MIT-GOLDILOCKS.ARPA by MIT-OZ via Chaosnet; 26 Nov 85 21:54-EST
Received: from YOGI.MIT.EDU by MIT-GOLDILOCKS.ARPA via CHAOS with CHAOS-MAIL id 9402; Tue 26-Nov-85 21:53:44-EST
Date: Tue, 26 Nov 85 21:53 EST
From: Scott Cyphers <sr.ehpyc@SPEECH.MIT.EDU>
Subject: Typecase compiler error
To: BUG-LISPM@MIT-GOLDILOCKS.ARPA
Message-ID: <851126215328.5.CYPHER@YOGI.MIT.EDU>

In Symbolics 3670 Release 6.1, IP-TCP 29.13,
Experimental Spire-Macros 7.0, Attribute 5.13, Experimental Compute 6.0,
Audio 4.1, Speech-Attributes 4.8, Display 6.23, Speech-Layouts 6.4,
Prtout 4.5, Experimental Versatec 6.0, Spire 16.0, Experimental Zoo 8.0,
microcode TMC5-IO4-FPA-COLOR-MIC 336, on Lisp Machine Yogi:

If in Common Lisp I try to compile

(defun foo-or-bar (x)
  (typecase x
    (foo (do-foo))
    (otherwise (do-bar))))

and haven't defined a type foo yet, I get an error.

>>Error: FOO is not a known type.
While in the function SCL::TYPE-EXPAND  SUBTYPEP  TYPECASE
While compiling FOO-OR-BAR

SCL::TYPE-EXPAND:  (P.C. = 121)
   Arg 0 (TYPE): FOO
   Arg 1 (SCL::TERMINAL-TYPES): (MEMBER ARRAY INTEGER FLOAT SINGLE-FLOAT DOUBLE-FLOAT SYMBOL CONS RATIO CHARACTER ...)
   --Defaulted args:--
   Arg 2 (OPTIMIZE): NIL
   Arg 3 (SCL::SUB-TERMINAL-TYPES): (MEMBER ARRAY INTEGER FLOAT SINGLE-FLOAT DOUBLE-FLOAT SYMBOL CONS RATIO CHARACTER ...)

SUBTYPEP:  (P.C. = 5)
   Arg 0 (SCL::TYPE1): FOO
   Arg 1 (SCL::TYPE2): (OR)

TYPECASE:  (P.C. = 75)
   Arg 0 (SI:.FORM.): (TYPECASE X (FOO (DO-FOO)) (OTHERWISE (DO-BAR)))
   Arg 1 (SI:.ENV.): NIL

FUNCALL:  (P.C. = 5)
   Arg 0 (SI:FN): #<DTP-COMPILED-FUNCTION TYPECASE 47436325>
   Rest arg (ZL:ARGS): ((TYPECASE X (FOO (DO-FOO)) (OTHERWISE (DO-BAR))) NIL)

SI:MACROEXPAND-1-INTERNAL:  (P.C. = 206)
   Arg 0 (SI:MACRO-CALL): (TYPECASE X (FOO (DO-FOO)) (OTHERWISE (DO-BAR)))
   Arg 1 (SI:ENV): NIL
   Arg 2 (SI:RUN-STYLE-CHECKERS-P): NIL
   Arg 3 (SI:DONT-EXPAND-SPECIAL-FORMS): NIL

MACROEXPAND-1:  (P.C. = 10)
   Arg 0 (SI:MACRO-CALL): (TYPECASE X (FOO (DO-FOO)) (OTHERWISE (DO-BAR)))
   Arg 1 (SI:ENV): NIL
   --Defaulted args:--
   Arg 2 (SI:DONT-EXPAND-SPECIAL-FORMS): NIL

COMPILER:TRANSFORM:  (P.C. = 551)
   Arg 0 (COMPILER:FORM): (TYPECASE X (FOO (DO-FOO)) (OTHERWISE (DO-BAR)))
   Arg 1 (COMPILER:DESTINATION): RETURN
   --Defaulted args:--
   Arg 2 (COMPILER:TRANSFORM-P): T
   Arg 3 (COMPILER:OPTIMIZE-P): T

COMPILER:PHASE-1:  (P.C. = 16)
   Arg 0 (COMPILER:FORM): (TYPECASE X (FOO (DO-FOO)) (OTHERWISE (DO-BAR)))
   Arg 1 (COMPILER:DESTINATION): RETURN
   --Defaulted args:--
   Arg 2 (COMPILER:DO-TRANSFORM): T
   Arg 3 (COMPILER:FORM-IS-ARGUMENT-P): NIL

Rest of stack:
COMPILER:PHASE-1-BLOCK:  (P.C. = 124)
(:PROPERTY BLOCK COMPILER:PHASE-1):  (P.C. = 4)
COMPILER:PHASE-1:  (P.C. = 347)
COMPILER:PHASE-1-PROGN:  (P.C. = 27)
COMPILER:PHASE-1-FUNCTION-DEFINITION:  (P.C. = 317)
COMPILER:PHASE-1-EXTERNAL-FUNCTION:  (P.C. = 35)
COMPILER:RUN-PHASE-1-FUNCTION:  (P.C. = 73)
COMPILER:COMPILE-DEFINITION-1:  (P.C. = 10)
COMPILER:COMPILE-DEFINITION:  (P.C. = 122)
(:INTERNAL COMPILER:COMPILE-TO-CORE 0 (:DUMP-DEFINITION)):  (P.C. = 5)
COMPILER:COMPILE-TO-CORE:  (P.C. = 12)
COMPILER:COMPILE-FORM-FUNCTION:  (P.C. = 41)
COMPILER:COMPILE-FROM-STREAM-1:  (P.C. = 330)
COMPILER:PROCESS-FORMS-FROM-STREAM:  (P.C. = 117)
COMPILER:COMPILE-FROM-STREAM:  (P.C. = 237)
ZWEI:COMPILE-INTERVAL:  (P.C. = 142)
ZWEI:COMPILE-PRINT-INTERVAL:  (P.C. = 121)
ZWEI:COMPILE-DEFINITION-INTERNAL:  (P.C. = 100)
ZWEI:COM-COMPILE-REGION:  (P.C. = 5)
ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 233)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 60)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 51)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
27-Nov-85 18:33:58-EST,3483;000000000000
Received: from MIT-ZERMATT.ARPA by MIT-OZ via Chaosnet; 27 Nov 85 18:33-EST
Received: from XX.MIT.EDU by ZERMATT.MIT.EDU via INTERNET with SMTP id 17505; 26 Nov 85 12:20:38-EST
Date: Tue 26 Nov 85 12:19:47-EST
From: William B. Ackerman <WBA@MIT-XX.ARPA>
Subject: bug in long tangent function
To: bug-explorer@MIT-XX.ARPA, bug-lispm@MIT-ZERMATT.ARPA, wba@MIT-XX.ARPA
Message-ID: <12162360166.24.WBA@MIT-XX.ARPA>

To: BUG-LISPM@ZERMATT
--Text Follows This Line--
In SYSTEM 1.72, Compiler 1.9, File System 1.1,
Universal Command Loop 1.0, Window System 1.5, Input Editor 1.1,
ZMACS 1.2, font editor 1.0, Error Handler 1.0, Suggestions 1.0,
Debug Utilities 1.3, Explorer-Net 1.2, Telnet 1.0, VT100 1.0, ZMail 1.0,
Local-File 1.21, Net-Config 1.5, Explorer Serial & Parallel Ports 1.0,
Printer 1.0, Glossary 1.0, Explorer Streamer Tape 1.11, NVRAM 1.3,
User Profile Utility 1.2, microcode 214, Rel 1.0.2.18, on DOGWOOD:


Insert your description of the circumstances here:

In common-lisp mode, typed  (si:long-tan 6.283185236)


>>TRAP 2985 (ARGTYP NUMBER M-T 1 ARITH-FLO-ANY)
The second argument to + was of the wrong type.
The function expected a number.
Backtrace from the debugger:

SI::LONG-TAN (P.C. = 124)

 Arg 0 (X): 6.283185236
 Local 0 (Y): 6.283185236
 Local 1 (N): 4
 Local 2 (XN): 4.0
 Local 3 (F): -7.102360655e-8
 Local 4 (G): 5.044352688e-15
 Local 5 (P): NIL
 Local 6 (Q): NIL


SI::EVAL1 (P.C. = 1213)

 Arg 0 (FORM): (SI::LONG-TAN 6.283185236)
   --Defaulted args:--
 Arg 1 (NOHOOK): NIL
 Local 0 (TEM): NIL
 Local 1 (ENV): NIL
 Local 2 (VCELL): NIL
 Local 3 (TAILENV): NIL
 Local 4 (SLOT): NIL
 Local 5 (FCTN): #<DTP-FEF-POINTER SI::LONG-TAN 13570124>
 Local 6 (ARG-DESC): 8417345
 Local 7 (NUM-ARGS): 1
 Local 8 (CLOSURE-PASSED): NIL
 Local 9 (FCTN1): NIL
 Local 10 (LAMBDA-LIST): NIL
 Local 11 (LL): NIL
 Local 12 (QUOTE-STATUS): NIL
 Local 13 (REST-FLAG): NIL
 Local 14 (ARGL): NIL
 Local 15 (ARGNUM): 1
 Local 16: NIL
 Local 17: NIL
 Local 18 (IGNORE): NIL
 Local 19 (ADL): NIL
 Local 20 (ITEM): NIL
 Local 21 (.SELECTQ.ITEM.): NIL


SI:EVAL-ABORT-TRIVIAL-ERRORS (P.C. = 52)

 Arg 0 (TOP-LEVEL-FORM): (SI::LONG-TAN 6.283185236)
 Local 0: ((SYSTEM:TOO-FEW-ARGUMENTS SYSTEM:TOO-MANY-ARGUMENTS SYSTEM:CELL-CONTENTS-ERROR SYSTEM:WRONG-TYPE-ARGUMENT ...) SI::EVAL-ABORT-TRIVIAL-ERRORS-HANDLER)
 Local 1: ((# SI::EVAL-ABORT-TRIVIAL-ERRORS-HANDLER) (SYSTEM:ABORT SI::CONDITION-CASE-THROW TV::G5257))


Additional information supplied with call:
 Values to be collected for MULTIPLE-VALUE-LIST

(:METHOD UCL::TOP-LEVEL-FUNCTIONS :EXECUTE) (P.C. = 105)
  (SELF is NIL)

 Arg 0 (.OPERATION.): :EXECUTE
 Arg 1 (IGNORE): #<LISP-LISTENER Lisp Listener 1 1300000 exposed>


(:METHOD UCL::BASIC-COMMAND-LOOP :EXECUTE-COMMAND) (P.C. = 62)
  (SELF is #<LISP-LISTENER Lisp Listener 1 1300000 exposed>)

 Arg 0 (.OPERATION.): :EXECUTE-COMMAND
 Local 0 (TEMP): NIL


Remainder of stack:

(:METHOD UCL::BASIC-COMMAND-LOOP :HANDLE-TYPEIN-INPUT) (P.C. = 535)
(:METHOD TV::RH-COMMAND :EXECUTE) (P.C. = 132)
(:METHOD UCL::BASIC-COMMAND-LOOP :EXECUTE-COMMAND) (P.C. = 62)
(:METHOD UCL::BASIC-COMMAND-LOOP :HANDLE-KEY-INPUT) (P.C. = 72)
(:METHOD UCL::BASIC-COMMAND-LOOP :FETCH-AND-EXECUTE) (P.C. = 121)
(:METHOD TV:LISP-LISTENER :LOOP) (P.C. = 156)
(:METHOD UCL::COMMAND-LOOP-MIXIN :COMMAND-LOOP) (P.C. = 100)
SI::PROCESS-TOP-LEVEL (P.C. = 244)
SI:LISP-TOP-LEVEL (P.C. = 47)
-------
27-Nov-85 18:34:17-EST,813;000000000000
Received: from MIT-ZERMATT.ARPA by MIT-OZ via Chaosnet; 27 Nov 85 18:34-EST
Received: from XX.MIT.EDU by ZERMATT.MIT.EDU via INTERNET with SMTP id 17518; 26 Nov 85 13:30:36-EST
Date: Tue, 26 Nov 1985  13:30 EST
Message-ID: <SRA.12162373007.BABYL@MIT-XX.ARPA>
From: Rob Austein <SRA@MIT-XX.ARPA>
To:   "William B. Ackerman" <WBA@MIT-XX.ARPA>
Cc:   bug-lispm@MIT-ZERMATT.ARPA, sra@MIT-XX.ARPA
Subject: bug in long tangent function
In-reply-to: Msg of 26 Nov 1985  12:19-EST from William B. Ackerman <WBA@MIT-XX.ARPA>

Arg.  When will people learn.  There isn't a BUG-EXPLORER@XX.  Nor a
BUG-LISPM@XX, nor a BUG-SYMBOLICS-3600@XX.  All these queries get sent
to BUG-RANDOM-PROGRAM, ie, BUG-TWENEX.  If you want to create a
BUG-EXPLORER@XX, fine, but first you had better find some names to put
on it.
27-Nov-85 18:34:42-EST,23237;000000000000
Received: from MIT-ZERMATT.ARPA by MIT-OZ via Chaosnet; 27 Nov 85 18:34-EST
Received: from XX.MIT.EDU by ZERMATT.MIT.EDU via INTERNET with SMTP id 17718; 26 Nov 85 17:10:34-EST
Date: Tue 26 Nov 85 17:06:50-EST
From: William B. Ackerman <WBA@MIT-XX.ARPA>
Subject: bug in TI compiler
To: BUG-EXPLORER@MIT-MC.ARPA, BUG-EXPLORER@SUMEX-AIM.ARPA,
    BUG-LISPM@MIT-ZERMATT.ARPA, "*PS:<WBA>EXPLORER.BUGS.1"@MIT-XX.ARPA
Message-ID: <12162412422.40.WBA@MIT-XX.ARPA>

To: BUG-LISPM@ZERMATT
--Text Follows This Line--
In SYSTEM 1.72, Compiler 1.9, File System 1.1,
Universal Command Loop 1.0, Window System 1.5, Input Editor 1.1,
ZMACS 1.2, font editor 1.0, Error Handler 1.0, Suggestions 1.0,
Debug Utilities 1.3, Explorer-Net 1.2, Telnet 1.0, VT100 1.0, ZMail 1.0,
Local-File 1.21, Net-Config 1.5, Explorer Serial & Parallel Ports 1.0,
Printer 1.0, Glossary 1.0, Explorer Streamer Tape 1.11, NVRAM 1.3,
User Profile Utility 1.2, microcode 214, Rel 1.0.2.18, on DOGWOOD:


Insert your description of the circumstances here:

######################################################################

The files "cbugb" and "cbugg" behave differently!  In particular, when I load "cbugb"
and type (start), it crashes as shown, which should not happen.  Cbugb and cbugg
differ only in a renaming a "let" variable.  When the functinos "move2x2" are
disassembled, the code is different.  Clearly cbugb got compiled into the wrong
stuff.  The sources and disassembled code are appended to the end of this report.

######################################################################

>>TRAP 1722 (SUBSCRIPT-OOB M-Q M-S (NIL XAREF-RECHECK-INDEX) M-A)
The subscript 11022 for #<ART-Q-4 15434447> was out of range in SYSTEM:COMMON-LISP-AR-1.
Backtrace from the debugger:

INSTALL-PERSON (P.C. = 25)

 Arg 0 (RESULTARRAY): #<ART-Q-4 15434447>
 Arg 1 (PLACE): 11022
 Arg 2 (NEWDATA): 1703


MOVE2X2 (P.C. = 262)

 Arg 0 (S): #<ART-Q-4 15434272>
 Arg 1 (CALLSPEC): ((|2X2| #S(2X2CALL :ENDSETUP |2X2| :CALLARRAY ...)))
 Arg 2 (CONCEPTLIST): NIL
 Local 0 (2X2DEFINITION): #S(2X2CALL :ENDSETUP |2X2| :CALLARRAY ...)
 Local 1 (RESULT): #<ART-Q-4 15434447>
 Local 2 (PERS): 1700
 Local 3 (TBONETEST): 1712
 Local 4 (CDEF): #<ART-Q-4 15434307>
 Local 5 (I): 0
 Local 6 (.SELECTQ.ITEM.): :HOW-MANY
 Local 7 (X): 1
 Local 8 (Y): NIL
 Local 9 (D): 2
 Local 10 (Z): 223
 Local 11 (K): 11022
 Local 12 (D2): 400025


START (P.C. = 63)



SI::EVAL1 (P.C. = 1213)

 Arg 0 (FORM): (START)
   --Defaulted args:--
 Arg 1 (NOHOOK): NIL
 Local 0 (TEM): NIL
 Local 1 (ENV): NIL
 Local 2 (VCELL): NIL
 Local 3 (TAILENV): NIL
 Local 4 (SLOT): NIL
 Local 5 (FCTN): #<DTP-FEF-POINTER START 45133710>
 Local 6 (ARG-DESC): 0
 Local 7 (NUM-ARGS): 0
 Local 8 (CLOSURE-PASSED): NIL
 Local 9 (FCTN1): NIL
 Local 10 (LAMBDA-LIST): NIL
 Local 11 (LL): NIL
 Local 12 (QUOTE-STATUS): NIL
 Local 13 (REST-FLAG): NIL
 Local 14 (ARGL): NIL
 Local 15 (ARGNUM): 0
 Local 16: NIL
 Local 17: NIL
 Local 18 (IGNORE): NIL
 Local 19 (ADL): NIL
 Local 20 (ITEM): NIL
 Local 21 (.SELECTQ.ITEM.): NIL


SI:EVAL-ABORT-TRIVIAL-ERRORS (P.C. = 52)

 Arg 0 (TOP-LEVEL-FORM): (START)
 Local 0: ((SYSTEM:TOO-FEW-ARGUMENTS SYSTEM:TOO-MANY-ARGUMENTS SYSTEM:CELL-CONTENTS-ERROR SYSTEM:WRONG-TYPE-ARGUMENT ...) SI::EVAL-ABORT-TRIVIAL-ERRORS-HANDLER)
 Local 1: ((# SI::EVAL-ABORT-TRIVIAL-ERRORS-HANDLER) (SYSTEM:ABORT SI::CONDITION-CASE-THROW TV::G5257))


Remainder of stack:

(:METHOD UCL::TOP-LEVEL-FUNCTIONS :EXECUTE) (P.C. = 105)
(:METHOD UCL::BASIC-COMMAND-LOOP :EXECUTE-COMMAND) (P.C. = 62)
(:METHOD UCL::BASIC-COMMAND-LOOP :HANDLE-TYPEIN-INPUT) (P.C. = 535)
(:METHOD UCL::BASIC-COMMAND-LOOP :HANDLE-KEY-INPUT) (P.C. = 116)
(:METHOD UCL::BASIC-COMMAND-LOOP :FETCH-AND-EXECUTE) (P.C. = 121)
(:METHOD TV:LISP-LISTENER :LOOP) (P.C. = 156)
(:METHOD UCL::COMMAND-LOOP-MIXIN :COMMAND-LOOP) (P.C. = 100)
SI::PROCESS-TOP-LEVEL (P.C. = 244)
SI:LISP-TOP-LEVEL (P.C. = 47)

######################################################################
Source code of cbugb follows:
######################################################################
;; -*- Mode:Common-Lisp; Package:USER; Base:8 -*-


(set-lisp-mode :common-lisp t)
(setq-globally *print-base* 8.)
(setq-globally *read-base* 8.)

(defstruct 2x2call endsetup callarray (qualifier :simple)
	   (rear-back-from-r-wave nil) (naturally-split-box nil) (rotation 0))

(defun start ()
  (move2x2 #(1712 1612 1110 1010)
	   `((2x2 ,(make-2x2call :endsetup '2x2 :rear-back-from-r-wave t :qualifier :how-many
				 :callarray '(#(0 0 312 012) #(0 0 001 303) #(0 0 110 210) #(0 0 203 101)))))
	   nil))

(defun move2x2 (s callspec conceptlist)

  (if conceptlist
      (throw 'failed '|Can't do concepts on 2x2 calls|))
  (let (
	2x2definition
	1x4definition
	(result (make-array 4 :initial-element 0))
	pers
	(tbonetest 0)
	cdef)
    
    (dotimes (i 4) (setq tbonetest (logior tbonetest (aref s i))))
    
    (if (null (setq 2x2definition (assoc '2x2 callspec)))
	(throw 'failed '|Can't do this call from box of 4|))
    (setq 2x2definition (cadr 2x2definition))	;this is a "2x2call" structure
    (setq cdef (ecase (2x2call-qualifier 2x2definition)
		 (:how-many
		  (loop (multiple-value-bind
			  (x y)
			    (values 1 nil)
			  (if x (return (nth x (2x2call-callarray 2x2definition)))))))
		 (:simple
		  (2x2call-callarray 2x2definition))))

    (cond
      ((print t)
       (dotimes (i 4)
	 (setq pers (logand (aref s i) 1700))
	 (cond ((not (zerop pers))
		(let (d z k)
		  (setq d (logand (aref s i) 3))
		  (setq z (aref cdef (logand (- i d) 3)))
		  (if (zerop z) (throw 'failed '|Can't do this call from this setup|))
		  (setq z (+ z (* d 111)))
		  (setq k (logand (lsh z -6) 3))
		  (print (logand (lsh z -6) 3))
		  (print k)
		  (install-person result k (logior pers (logand z 13)))))))
       nil)

      ((print nil)
       (if (eql (logand tbonetest 11) 11) (throw 'failed '|Can't do this call from T-bone box|))
       (dotimes (i 4)
	 (setq pers (logand (aref s i) 1700))
	 (unless (zerop pers)
	   (let (d d2 z k)
	     (setq d2 (logand (setq d (logand (aref s i) 3)) 2))
	     (setq z (aref cdef (logand (- i d) 3)))
	     (if (zerop z) (throw 'failed '|Can't do this call from this setup|))
	     (setq z (+ z (* d2 11)))
	     (setq k (logand (+ (lsh z -6) d2) 3))
	     (install-person result k (logior pers (logand z 13))))))
       (list '1x4 result (+ (logand tbonetest 1) (2x2call-rotation 2x2definition))))
      
      (t (throw 'failed '|Can't handle such a horrible 2x2 definition|)))))

(defun install-person (resultarray place newdata)
  (cond ((zerop (aref resultarray place)) (aset newdata resultarray place))
	(t (throw 'failed '|Two people on same spot.|))))
######################################################################
Source code of cbugg follows:
######################################################################
;; -*- Mode:Common-Lisp; Package:USER; Base:8 -*-


(set-lisp-mode :common-lisp t)
(setq-globally *print-base* 8.)
(setq-globally *read-base* 8.)

(defstruct 2x2call endsetup callarray (qualifier :simple)
	   (rear-back-from-r-wave nil) (naturally-split-box nil) (rotation 0))

(defun start ()
  (move2x2 #(1712 1612 1110 1010)
	   `((2x2 ,(make-2x2call :endsetup '2x2 :rear-back-from-r-wave t :qualifier :how-many
				 :callarray '(#(0 0 312 012) #(0 0 001 303) #(0 0 110 210) #(0 0 203 101)))))
	   nil))

(defun move2x2 (s callspec conceptlist)

  (if conceptlist
      (throw 'failed '|Can't do concepts on 2x2 calls|))
  (let (
	2x2definition
	1x4definition
	(result (make-array 4 :initial-element 0))
	pers
	(tbonetest 0)
	cdef)
    
    (dotimes (i 4) (setq tbonetest (logior tbonetest (aref s i))))
    
    (if (null (setq 2x2definition (assoc '2x2 callspec)))
	(throw 'failed '|Can't do this call from box of 4|))
    (setq 2x2definition (cadr 2x2definition))	;this is a "2x2call" structure
    (setq cdef (ecase (2x2call-qualifier 2x2definition)
		 (:how-many
		  (loop (multiple-value-bind
			  (x y)
			    (values 1 nil)
			  (if x (return (nth x (2x2call-callarray 2x2definition)))))))
		 (:simple
		  (2x2call-callarray 2x2definition))))

    (cond
      ((print t)
       (dotimes (i 4)
	 (setq pers (logand (aref s i) 1700))
	 (cond ((not (zerop pers))
		(let (d z q)
		  (setq d (logand (aref s i) 3))
		  (setq z (aref cdef (logand (- i d) 3)))
		  (if (zerop z) (throw 'failed '|Can't do this call from this setup|))
		  (setq z (+ z (* d 111)))
		  (setq q (logand (lsh z -6) 3))
		  (print (logand (lsh z -6) 3))
		  (print q)
		  (install-person result q (logior pers (logand z 13)))))))
       nil)

      ((print nil)
       (if (eql (logand tbonetest 11) 11) (throw 'failed '|Can't do this call from T-bone box|))
       (dotimes (i 4)
	 (setq pers (logand (aref s i) 1700))
	 (unless (zerop pers)
	   (let (d d2 z k)
	     (setq d2 (logand (setq d (logand (aref s i) 3)) 2))
	     (setq z (aref cdef (logand (- i d) 3)))
	     (if (zerop z) (throw 'failed '|Can't do this call from this setup|))
	     (setq z (+ z (* d2 11)))
	     (setq k (logand (+ (lsh z -6) d2) 3))
	     (install-person result k (logior pers (logand z 13))))))
       (list '1x4 result (+ (logand tbonetest 1) (2x2call-rotation 2x2definition))))
      
      (t (throw 'failed '|Can't handle such a horrible 2x2 definition|)))))

(defun install-person (resultarray place newdata)
  (cond ((zerop (aref resultarray place)) (aset newdata resultarray place))
	(t (throw 'failed '|Two people on same spot.|))))
######################################################################
Run and disassembly of cbugb follows:
######################################################################
> (compile-file "cbugb")
#FS::LM-PATHNAME "DOG: WBA; CBUGB.XFASL#402"
0
> (load "cbugb")
; Loading DOG: WBA; CBUGB.XFASL#> into package USER
#FS::LM-PATHNAME "DOG: WBA; CBUGB.XFASL#402"
> (start)
T 
2 
11022 
-----> it crashed here, as shown above <-------
> (disassemble 'move2x2)
 72 MOVE D-IGNORE ARG|2       ;CONCEPTLIST
 73 BR-NIL 77
 74 MOVE D-PDL FEF|6          ;'FAILED
 75 MOVE D-PDL FEF|7          ;'|Can't do concepts on 2x2 calls|
 76 (MISC) *THROW D-IGNORE
 77 CALL D-PDL FEF|8          ;#'SI::SIMPLE-MAKE-ARRAY
100 PUSH-NUMBER 4
101 MOVE D-PDL FEF|9          ;'ART-Q
102 MOVE D-PDL 'NIL
103 MOVE D-PDL 'NIL
104 MOVE D-LAST '0
105 PUSH-NUMBER 0
106 POP LOCAL|3               ;TBONETEST
107 POP LOCAL|1               ;RESULT
110 SET-ZERO LOCAL|5          ;I
111 BR 121
112 MOVE D-PDL LOCAL|3        ;TBONETEST
113 MOVE D-PDL ARG|0          ;S
114 MOVE D-PDL LOCAL|5        ;I
115 (MISC) COMMON-LISP-AR-1 D-PDL
116 LOGIOR PDL-POP
117 POP LOCAL|3               ;TBONETEST
120 SETE-1+ LOCAL|5           ;I
121 MOVE D-PDL LOCAL|5        ;I
122 < '4
123 BR-NOT-NIL 112
124 MOVE D-PDL FEF|10         ;'|2X2|
125 MOVE D-PDL ARG|1          ;CALLSPEC
126 (MISC) ASSQ D-PDL
127 POP LOCAL|0               ;2X2DEFINITION
130 BR-NOT-NIL 134
131 MOVE D-PDL FEF|6          ;'FAILED
132 MOVE D-PDL FEF|11         ;'|Can't do this call from box of 4|
133 (MISC) *THROW D-IGNORE
134 CADR D-PDL LOCAL|0        ;2X2DEFINITION
135 MOVEM LOCAL|0             ;2X2DEFINITION
136 AR-1 (2) D-PDL
137 MOVEM LOCAL|6             ;.SELECTQ.ITEM.
140 EQ FEF|12                 ;':HOW-MANY
141 BR-NIL 155
142 PUSH-NUMBER 1
143 SET-NIL LOCAL|8           ;Y
144 POP LOCAL|7               ;X
145 BR-NIL 142
146 MOVE D-PDL LOCAL|7        ;X
147 MOVE D-PDL LOCAL|0        ;2X2DEFINITION
150 AR-1 (1) D-PDL
151 (MISC) NTH D-PDL
152 MOVE D-PDL '2
153 (MISC) SHRINK-PDL-SAVE-TOP D-PDL
154 BR 172
155 MOVE D-PDL LOCAL|6        ;.SELECTQ.ITEM.
156 EQ FEF|13                 ;':SIMPLE
157 BR-NIL 163
160 MOVE D-PDL LOCAL|0        ;2X2DEFINITION
161 AR-1 (1) D-PDL
162 BR 172
163 CALL D-PDL FEF|14         ;#'FERROR
164 MOVE D-PDL 'NIL
165 MOVE D-PDL FEF|15         ;'"The argument ~2@*~A was ~1@*~S, which is not ~3@*~A."
166 MOVE D-PDL FEF|16         ;'(GLOBAL:MEMBER :HOW-MANY :SIMPLE)
167 MOVE D-PDL LOCAL|6        ;.SELECTQ.ITEM.
170 MOVE D-PDL FEF|17         ;'(2X2CALL-QUALIFIER 2X2DEFINITION)
171 MOVE D-LAST FEF|18        ;'":HOW-MANY or :SIMPLE"
172 POP LOCAL|4               ;CDEF
173 CALL D-IGNORE FEF|19      ;#'PRINT
174 MOVE D-LAST 'T
175 BR-NIL 267
176 SET-ZERO LOCAL|5          ;I
177 BR 263
200 MOVE D-PDL ARG|0          ;S
201 MOVE D-PDL LOCAL|5        ;I
202 (MISC) COMMON-LISP-AR-1 D-PDL
203 LOGAND FEF|20             ;'1700
204 MOVEM LOCAL|2             ;PERS
205 (MISC) ZEROP D-IGNORE
206 BR-NOT-NIL 262
207 SET-NIL LOCAL|9           ;D
210 SET-NIL LOCAL|10          ;Z
211 SET-NIL LOCAL|11          ;K
212 MOVE D-PDL ARG|0          ;S
213 MOVE D-PDL LOCAL|5        ;I
214 (MISC) COMMON-LISP-AR-1 D-PDL
215 LOGAND '3
216 POP LOCAL|9               ;D
217 MOVE D-PDL LOCAL|4        ;CDEF
220 MOVE D-PDL LOCAL|5        ;I
221 - LOCAL|9                 ;D
222 LOGAND '3
223 (MISC) COMMON-LISP-AR-1 D-PDL
224 MOVEM LOCAL|10            ;Z
225 (MISC) ZEROP D-IGNORE
226 BR-NIL 232
227 MOVE D-PDL FEF|6          ;'FAILED
230 MOVE D-PDL FEF|21         ;'|Can't do this call from this setup|
231 (MISC) *THROW D-IGNORE
232 PUSH-NUMBER 111
233 * LOCAL|9                 ;D
234 + LOCAL|10                ;Z
235 MOVEM LOCAL|10            ;Z
236 MOVE D-PDL FEF|22         ;'-6
237 (MISC) LSH D-PDL
240 LOGAND '3
241 POP LOCAL|11              ;K
242 CALL D-IGNORE FEF|19      ;#'PRINT
243 MOVE D-PDL LOCAL|10       ;Z
244 MOVE D-PDL FEF|22         ;'-6
245 (MISC) LSH D-PDL
246 LOGAND '3
247 MOVE D-LAST PDL-POP
250 CALL D-IGNORE FEF|19      ;#'PRINT
251 MOVE D-LAST LOCAL|11      ;K
252 CALL D-IGNORE FEF|23      ;#'INSTALL-PERSON
253 MOVE D-PDL LOCAL|1        ;RESULT
254 MOVE D-PDL LOCAL|11       ;K
255 MOVE D-PDL LOCAL|2        ;PERS
256 PUSH-NUMBER 13
257 LOGAND LOCAL|10           ;Z
260 LOGIOR PDL-POP
261 MOVE D-LAST PDL-POP
262 SETE-1+ LOCAL|5           ;I
263 MOVE D-PDL LOCAL|5        ;I
264 < '4
265 BR-NOT-NIL 200
266 MOVE D-RETURN 'NIL
267 CALL D-IGNORE FEF|19      ;#'PRINT
270 MOVE D-LAST 'NIL
271 BR-NIL 373
272 PUSH-NUMBER 11
273 LOGAND LOCAL|3            ;TBONETEST
274 EQ '11
275 BR-NIL 301
276 MOVE D-PDL FEF|6          ;'FAILED
277 MOVE D-PDL FEF|24         ;'|Can't do this call from T-bone box|
300 (MISC) *THROW D-IGNORE
301 SET-ZERO LOCAL|5          ;I
302 BR 357
303 MOVE D-PDL ARG|0          ;S
304 MOVE D-PDL LOCAL|5        ;I
305 (MISC) COMMON-LISP-AR-1 D-PDL
306 LOGAND FEF|20             ;'1700
307 MOVEM LOCAL|2             ;PERS
310 (MISC) ZEROP D-IGNORE
311 BR-NOT-NIL 356
312 SET-NIL LOCAL|9           ;D
313 SET-NIL LOCAL|12          ;D2
314 SET-NIL LOCAL|10          ;Z
315 SET-NIL LOCAL|11          ;K
316 MOVE D-PDL ARG|0          ;S
317 MOVE D-PDL LOCAL|5        ;I
320 (MISC) COMMON-LISP-AR-1 D-PDL
321 LOGAND '3
322 MOVEM LOCAL|9             ;D
323 LOGAND '2
324 POP LOCAL|12              ;D2
325 MOVE D-PDL LOCAL|4        ;CDEF
326 MOVE D-PDL LOCAL|5        ;I
327 - LOCAL|9                 ;D
330 LOGAND '3
331 (MISC) COMMON-LISP-AR-1 D-PDL
332 MOVEM LOCAL|10            ;Z
333 (MISC) ZEROP D-IGNORE
334 BR-NOT-NIL 227
335 PUSH-NUMBER 11
336 * LOCAL|12                ;D2
337 + LOCAL|10                ;Z
340 MOVEM LOCAL|10            ;Z
341 MOVE D-PDL FEF|22         ;'-6
342 (MISC) LSH D-PDL
343 + LOCAL|12                ;D2
344 LOGAND '3
345 POP LOCAL|11              ;K
346 CALL D-IGNORE FEF|23      ;#'INSTALL-PERSON
347 MOVE D-PDL LOCAL|1        ;RESULT
350 MOVE D-PDL LOCAL|11       ;K
351 MOVE D-PDL LOCAL|2        ;PERS
352 PUSH-NUMBER 13
353 LOGAND LOCAL|10           ;Z
354 LOGIOR PDL-POP
355 MOVE D-LAST PDL-POP
356 SETE-1+ LOCAL|5           ;I
357 MOVE D-PDL LOCAL|5        ;I
360 < '4
361 BR-NOT-NIL 303
362 CALL D-RETURN FEF|25      ;#'LIST
363 MOVE D-PDL FEF|26         ;'|1X4|
364 MOVE D-PDL LOCAL|1        ;RESULT
365 PUSH-NUMBER 1
366 LOGAND LOCAL|3            ;TBONETEST
367 MOVE D-PDL LOCAL|0        ;2X2DEFINITION
370 AR-1 (5) D-PDL
371 + PDL-POP
372 MOVE D-LAST PDL-POP
373 MOVE D-PDL FEF|6          ;'FAILED
374 MOVE D-PDL FEF|27         ;'|Can't handle such a horrible 2x2 definition|
375 (MISC) *THROW D-IGNORE
MOVE2X2
######################################################################
Run and disassembly of cbugg follows:
######################################################################
> (compile-file "cbugg")
#FS::LM-PATHNAME "DOG: WBA; CBUGG.XFASL#405"
0
> (load "cbugg")
; Loading DOG: WBA; CBUGG.XFASL#> into package USER
#FS::LM-PATHNAME "DOG: WBA; CBUGG.XFASL#405"
> (start)
T 
2 
2 
1 
1 
0 
0 
3 
3 
NIL
> (disassemble 'move2x2)
 72 MOVE D-IGNORE ARG|2       ;CONCEPTLIST
 73 BR-NIL 77
 74 MOVE D-PDL FEF|6          ;'FAILED
 75 MOVE D-PDL FEF|7          ;'|Can't do concepts on 2x2 calls|
 76 (MISC) *THROW D-IGNORE
 77 CALL D-PDL FEF|8          ;#'SI::SIMPLE-MAKE-ARRAY
100 PUSH-NUMBER 4
101 MOVE D-PDL FEF|9          ;'ART-Q
102 MOVE D-PDL 'NIL
103 MOVE D-PDL 'NIL
104 MOVE D-LAST '0
105 PUSH-NUMBER 0
106 POP LOCAL|3               ;TBONETEST
107 POP LOCAL|1               ;RESULT
110 SET-ZERO LOCAL|5          ;I
111 BR 121
112 MOVE D-PDL LOCAL|3        ;TBONETEST
113 MOVE D-PDL ARG|0          ;S
114 MOVE D-PDL LOCAL|5        ;I
115 (MISC) COMMON-LISP-AR-1 D-PDL
116 LOGIOR PDL-POP
117 POP LOCAL|3               ;TBONETEST
120 SETE-1+ LOCAL|5           ;I
121 MOVE D-PDL LOCAL|5        ;I
122 < '4
123 BR-NOT-NIL 112
124 MOVE D-PDL FEF|10         ;'|2X2|
125 MOVE D-PDL ARG|1          ;CALLSPEC
126 (MISC) ASSQ D-PDL
127 POP LOCAL|0               ;2X2DEFINITION
130 BR-NOT-NIL 134
131 MOVE D-PDL FEF|6          ;'FAILED
132 MOVE D-PDL FEF|11         ;'|Can't do this call from box of 4|
133 (MISC) *THROW D-IGNORE
134 CADR D-PDL LOCAL|0        ;2X2DEFINITION
135 MOVEM LOCAL|0             ;2X2DEFINITION
136 AR-1 (2) D-PDL
137 MOVEM LOCAL|6             ;.SELECTQ.ITEM.
140 EQ FEF|12                 ;':HOW-MANY
141 BR-NIL 155
142 PUSH-NUMBER 1
143 SET-NIL LOCAL|8           ;Y
144 POP LOCAL|7               ;X
145 BR-NIL 142
146 MOVE D-PDL LOCAL|7        ;X
147 MOVE D-PDL LOCAL|0        ;2X2DEFINITION
150 AR-1 (1) D-PDL
151 (MISC) NTH D-PDL
152 MOVE D-PDL '2
153 (MISC) SHRINK-PDL-SAVE-TOP D-PDL
154 BR 172
155 MOVE D-PDL LOCAL|6        ;.SELECTQ.ITEM.
156 EQ FEF|13                 ;':SIMPLE
157 BR-NIL 163
160 MOVE D-PDL LOCAL|0        ;2X2DEFINITION
161 AR-1 (1) D-PDL
162 BR 172
163 CALL D-PDL FEF|14         ;#'FERROR
164 MOVE D-PDL 'NIL
165 MOVE D-PDL FEF|15         ;'"The argument ~2@*~A was ~1@*~S, which is not ~3@*~A."
166 MOVE D-PDL FEF|16         ;'(GLOBAL:MEMBER :HOW-MANY :SIMPLE)
167 MOVE D-PDL LOCAL|6        ;.SELECTQ.ITEM.
170 MOVE D-PDL FEF|17         ;'(2X2CALL-QUALIFIER 2X2DEFINITION)
171 MOVE D-LAST FEF|18        ;'":HOW-MANY or :SIMPLE"
172 POP LOCAL|4               ;CDEF
173 CALL D-IGNORE FEF|19      ;#'PRINT
174 MOVE D-LAST 'T
175 BR-NIL 267
176 SET-ZERO LOCAL|5          ;I
177 BR 263
200 MOVE D-PDL ARG|0          ;S
201 MOVE D-PDL LOCAL|5        ;I
202 (MISC) COMMON-LISP-AR-1 D-PDL
203 LOGAND FEF|20             ;'1700
204 MOVEM LOCAL|2             ;PERS
205 (MISC) ZEROP D-IGNORE
206 BR-NOT-NIL 262
207 SET-NIL LOCAL|9           ;D
210 SET-NIL LOCAL|10          ;Z
211 SET-NIL LOCAL|11          ;Q
212 MOVE D-PDL ARG|0          ;S
213 MOVE D-PDL LOCAL|5        ;I
214 (MISC) COMMON-LISP-AR-1 D-PDL
215 LOGAND '3
216 POP LOCAL|9               ;D
217 MOVE D-PDL LOCAL|4        ;CDEF
220 MOVE D-PDL LOCAL|5        ;I
221 - LOCAL|9                 ;D
222 LOGAND '3
223 (MISC) COMMON-LISP-AR-1 D-PDL
224 MOVEM LOCAL|10            ;Z
225 (MISC) ZEROP D-IGNORE
226 BR-NIL 232
227 MOVE D-PDL FEF|6          ;'FAILED
230 MOVE D-PDL FEF|21         ;'|Can't do this call from this setup|
231 (MISC) *THROW D-IGNORE
232 PUSH-NUMBER 111
233 * LOCAL|9                 ;D
234 + LOCAL|10                ;Z
235 MOVEM LOCAL|10            ;Z
236 MOVE D-PDL FEF|22         ;'-6
237 (MISC) LSH D-PDL
240 LOGAND '3
241 POP LOCAL|11              ;Q
242 CALL D-IGNORE FEF|19      ;#'PRINT
243 MOVE D-PDL LOCAL|10       ;Z
244 MOVE D-PDL FEF|22         ;'-6
245 (MISC) LSH D-PDL
246 LOGAND '3
247 MOVE D-LAST PDL-POP
250 CALL D-IGNORE FEF|19      ;#'PRINT
251 MOVE D-LAST LOCAL|11      ;Q
252 CALL D-IGNORE FEF|23      ;#'INSTALL-PERSON
253 MOVE D-PDL LOCAL|1        ;RESULT
254 MOVE D-PDL LOCAL|11       ;Q
255 MOVE D-PDL LOCAL|2        ;PERS
256 PUSH-NUMBER 13
257 LOGAND LOCAL|10           ;Z
260 LOGIOR PDL-POP
261 MOVE D-LAST PDL-POP
262 SETE-1+ LOCAL|5           ;I
263 MOVE D-PDL LOCAL|5        ;I
264 < '4
265 BR-NOT-NIL 200
266 MOVE D-RETURN 'NIL
267 CALL D-IGNORE FEF|19      ;#'PRINT
270 MOVE D-LAST 'NIL
271 BR-NIL 373
272 PUSH-NUMBER 11
273 LOGAND LOCAL|3            ;TBONETEST
274 EQ '11
275 BR-NIL 301
276 MOVE D-PDL FEF|6          ;'FAILED
277 MOVE D-PDL FEF|24         ;'|Can't do this call from T-bone box|
300 (MISC) *THROW D-IGNORE
301 SET-ZERO LOCAL|5          ;I
302 BR 357
303 MOVE D-PDL ARG|0          ;S
304 MOVE D-PDL LOCAL|5        ;I
305 (MISC) COMMON-LISP-AR-1 D-PDL
306 LOGAND FEF|20             ;'1700
307 MOVEM LOCAL|2             ;PERS
310 (MISC) ZEROP D-IGNORE
311 BR-NOT-NIL 356
312 SET-NIL LOCAL|9           ;D
313 SET-NIL LOCAL|12          ;D2
314 SET-NIL LOCAL|10          ;Z
315 SET-NIL LOCAL|13          ;K
316 MOVE D-PDL ARG|0          ;S
317 MOVE D-PDL LOCAL|5        ;I
320 (MISC) COMMON-LISP-AR-1 D-PDL
321 LOGAND '3
322 MOVEM LOCAL|9             ;D
323 LOGAND '2
324 POP LOCAL|12              ;D2
325 MOVE D-PDL LOCAL|4        ;CDEF
326 MOVE D-PDL LOCAL|5        ;I
327 - LOCAL|9                 ;D
330 LOGAND '3
331 (MISC) COMMON-LISP-AR-1 D-PDL
332 MOVEM LOCAL|10            ;Z
333 (MISC) ZEROP D-IGNORE
334 BR-NOT-NIL 227
335 PUSH-NUMBER 11
336 * LOCAL|12                ;D2
337 + LOCAL|10                ;Z
340 MOVEM LOCAL|10            ;Z
341 MOVE D-PDL FEF|22         ;'-6
342 (MISC) LSH D-PDL
343 + LOCAL|12                ;D2
344 LOGAND '3
345 POP LOCAL|13              ;K
346 CALL D-IGNORE FEF|23      ;#'INSTALL-PERSON
347 MOVE D-PDL LOCAL|1        ;RESULT
350 MOVE D-PDL LOCAL|13       ;K
351 MOVE D-PDL LOCAL|2        ;PERS
352 PUSH-NUMBER 13
353 LOGAND LOCAL|10           ;Z
354 LOGIOR PDL-POP
355 MOVE D-LAST PDL-POP
356 SETE-1+ LOCAL|5           ;I
357 MOVE D-PDL LOCAL|5        ;I
360 < '4
361 BR-NOT-NIL 303
362 CALL D-RETURN FEF|25      ;#'LIST
363 MOVE D-PDL FEF|26         ;'|1X4|
364 MOVE D-PDL LOCAL|1        ;RESULT
365 PUSH-NUMBER 1
366 LOGAND LOCAL|3            ;TBONETEST
367 MOVE D-PDL LOCAL|0        ;2X2DEFINITION
370 AR-1 (5) D-PDL
371 + PDL-POP
372 MOVE D-LAST PDL-POP
373 MOVE D-PDL FEF|6          ;'FAILED
374 MOVE D-PDL FEF|27         ;'|Can't handle such a horrible 2x2 definition|
375 (MISC) *THROW D-IGNORE
MOVE2X2
-------
27-Nov-85 19:08:31-EST,820;000000000000
Received: from MIT-GOLDILOCKS.ARPA by MIT-OZ via Chaosnet; 27 Nov 85 19:08-EST
Received: from SPEECH.MIT.EDU by MIT-GOLDILOCKS.ARPA via CHAOS with CHAOS-MAIL id 9408; Wed 27-Nov-85 19:07:47-EST
Received: from YOGI.MIT.EDU by MIT-GOLDILOCKS.ARPA via CHAOS with CHAOS-MAIL id 9407; Wed 27-Nov-85 19:03:31-EST
Date: Wed, 27 Nov 85 19:03 EST
From: Scott Cyphers <sr.ehpyc@SPEECH.MIT.EDU>
Subject: Loading system patches
To: Bug-lispm@SPEECH.MIT.EDU
Message-ID: <851127190315.1.CYPHER@YOGI.MIT.EDU>

A lot of time is taken up loading patches for systems that never get
pathched, such as SYSTEM, HARDCOPY, etc.  I think load-patches should
have a :LOCAL-SYSTEMS-ONLY option which defaults to T.  This would cause
systems which are not maintained at the local site to not have patches
loaded for them by default.
29-Nov-85 13:53:34-EST,3661;000000000000
Received: from MIT-GOLDILOCKS.ARPA by MIT-OZ via Chaosnet; 29 Nov 85 13:53-EST
Received: from YOGI.MIT.EDU by MIT-GOLDILOCKS.ARPA via CHAOS with CHAOS-MAIL id 9701; Fri 29-Nov-85 13:52:53-EST
Date: Fri, 29 Nov 85 13:52 EST
From: Scott Cyphers <sr.ehpyc@SPEECH.MIT.EDU>
Subject: dolist and array registers
To: BUG-LISPM@MIT-GOLDILOCKS.ARPA
Message-ID: <851129135237.1.CYPHER@YOGI.MIT.EDU>

In Symbolics 3670 Release 6.1, IP-TCP 29.13,
Experimental Spire-Macros 7.0, Attribute 5.14, Experimental Compute 6.1,
Audio 4.1, Speech-Attributes 4.8, Display 6.23, Speech-Layouts 6.4,
Prtout 4.5, Experimental Versatec 6.0, Spire 16.0, Experimental Zoo 8.1,
microcode TMC5-IO4-FPA-COLOR-MIC 336, on Lisp Machine Yogi:

Something like this:
(defun foo (list)
  (let ((sum 0))
    (dolist (element list)
      (declare (sys:array-register element))
      (dotimes (i (length element))
	(incf sum (aref element i))))))
should work, although it doesn't because of the way dolist expands.  If
dolist expanded like this instead:
(defmacro dolist ((var list) &body body)
  (let ((temp (gensym)))
    `(do ((,temp ,list (cdr ,temp)))
	 ((null ,temp))
       (let ((,var (car ,temp)))
	 ,@body))))
then things work right, and the disassembled code looks simpler (in the
non-array-register case).

>>Error: Cant setq array registers yet
While in the function (:PROPERTY SETQ COMPILER:ASSEMBLE)  COMPILER:ASSEMBLE-INTERVAL  COMPILER:ASSEMBLE-FUNCTION
Error occurred while compiling FOO

(:PROPERTY SETQ COMPILER:ASSEMBLE):  (P.C. = 34)
   Arg 0 (COMPILER:INST): #<Inst (Setq ELEMENT(Ar) S.3)>
   Arg 1 (FUNCTION): #<EXTERNAL-FUNCTION 24114345>
   Local 2 (COMPILER:VAR): #<ARRAY-REGISTER-LEXICAL-VARIABLE ELEMENT 24114766>
   Local 3 (SI:.SELECTQ-ITEM.): COMPILER:LEXICAL
   Local 4 (SI:.SELECTQ-ITEM.): ZETALISP-SYSTEM:ARRAY-REGISTER

COMPILER:ASSEMBLE-INTERVAL:  (P.C. = 72)
   Arg 0 (COMPILER:INTERVAL): #<INTERVAL 24114377>
   Arg 1 (FUNCTION): #<EXTERNAL-FUNCTION 24114345>

COMPILER:ASSEMBLE-FUNCTION:  (P.C. = 75)
   Arg 0 (FUNCTION): #<EXTERNAL-FUNCTION 24114345>

MAPC:  (P.C. = 37)
   Arg 0 (SI:FCN): #<DTP-COMPILED-FUNCTION COMPILER:ASSEMBLE-FUNCTION 47547251>
   Rest arg (SI:LISTS): (NIL)

COMPILER:RUN-PHASE-4:  (P.C. = 6)
   Arg 0: T

COMPILER:COMPILE-DEFINITION-1:  (P.C. = 50)
   Arg 0 (COMPILER:TYPE): ZL:DEFUN
   Arg 1 (COMPILER:FUNCTION-SPEC): FOO
   Arg 2 (COMPILER:LAMBDA-LIST): (LIST)
   Arg 3 (COMPILER:DEBUG-INFO): NIL
   Arg 4 (COMPILER:DEFINITION): ((BLOCK FOO (LET (#) (DOLIST # # #))))
   Arg 5 (COMPILER:FIXUP-P): T

COMPILER:COMPILE-DEFINITION:  (P.C. = 122)
   Arg 0 (EXP): (ZL:DEFUN FOO (LIST) (BLOCK FOO (LET (#) (DOLIST # # #))))
   Arg 1 (COMPILER:FIXUP-P): T
   Arg 2 (COMPILER:DEBUG-INFO): NIL

(:INTERNAL COMPILER:COMPILE-TO-CORE 0 (:DUMP-DEFINITION)):  (P.C. = 5)
   Arg 0 (SI:**DEFSELECT-OP**): :DUMP-DEFINITION
   Arg 1 (EXP): (ZL:DEFUN FOO (LIST) (BLOCK FOO (LET (#) (DOLIST # # #))))

Rest of stack:
COMPILER:COMPILE-TO-CORE:  (P.C. = 12)
COMPILER:COMPILE-FORM-FUNCTION:  (P.C. = 41)
COMPILER:COMPILE-FROM-STREAM-1:  (P.C. = 330)
COMPILER:PROCESS-FORMS-FROM-STREAM:  (P.C. = 117)
COMPILER:COMPILE-FROM-STREAM:  (P.C. = 237)
ZWEI:COMPILE-INTERVAL:  (P.C. = 142)
ZWEI:COMPILE-PRINT-INTERVAL:  (P.C. = 121)
ZWEI:COMPILE-DEFINITION-INTERNAL:  (P.C. = 100)
ZWEI:COM-COMPILE-REGION:  (P.C. = 5)
ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 233)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 60)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 51)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
30-Nov-85 00:01:26-EST,1351;000000000000
Received: from MIT-GOLDILOCKS.ARPA by MIT-OZ via Chaosnet; 30 Nov 85 00:01-EST
Received: from SCRC-STONY-BROOK.ARPA by MIT-GOLDILOCKS.ARPA via INTERNET with SMTP id 9705; 30 Nov 85 00:00:05-EST
Received: from OWL.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 364592; Fri 29-Nov-85 23:31:03-EST
Date: Fri, 29 Nov 85 23:29 EST
From: Mike McMahon <MMcM@SCRC-STONY-BROOK.ARPA>
Subject: dolist and array registers
To: Scott Cyphers <sr.ehpyc@SPEECH.MIT.EDU>
cc: BUG-LISPM@MIT-GOLDILOCKS.ARPA
In-Reply-To: <851129135237.1.CYPHER@YOGI.MIT.EDU>
Message-ID: <851129232924.4.MMCM@OWL.SCRC.Symbolics.COM>
Character-Styles: (1 0 (NIL 0) (NIL :ITALIC NIL) "CPTFONTI")
Fonts: CPTFONT, CPTFONTI

    Date: Fri, 29 Nov 85 13:52 EST
    From: Scott Cyphers <sr.ehpyc@SPEECH.MIT.EDU>

									 If
    dolist expanded like this instead:
    (defmacro dolist ((var list) &body body)
      (let ((temp (gensym)))
	`(do ((,temp ,list (cdr ,temp)))
	     ((null ,temp))
	   (let ((,var (car ,temp)))
	     ,@body))))

The way I read the common lisp definition of dolist, the scope of 1var0 is
required to be the whole iteration, not just around 1listform0.  In
particular when you specify a1 resultform0.

It actually makes a difference if you create more than one lexical
closure over var inside the loop.

30-Nov-85 00:12:23-EST,1413;000000000000
Received: from MIT-GOLDILOCKS.ARPA by MIT-OZ via Chaosnet; 30 Nov 85 00:12-EST
Received: from SCRC-STONY-BROOK.ARPA by MIT-GOLDILOCKS.ARPA via INTERNET with SMTP id 9706; 30 Nov 85 00:10:32-EST
Received: from OWL.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 364593; Fri 29-Nov-85 23:32:51-EST
Date: Fri, 29 Nov 85 23:31 EST
From: Mike McMahon <MMcM@SCRC-STONY-BROOK.ARPA>
Subject: dolist and array registers
To: Scott Cyphers <sr.ehpyc@SPEECH.MIT.EDU>
cc: BUG-LISPM@MIT-GOLDILOCKS.ARPA
In-Reply-To: <851129135237.1.CYPHER@YOGI.MIT.EDU>
Supersedes: <851129232924.4.MMCM@OWL.SCRC.Symbolics.COM>
Message-ID: <851129233113.5.MMCM@OWL.SCRC.Symbolics.COM>
Character-Styles: (1 0 (NIL 0) (NIL :ITALIC NIL) "CPTFONTI")
Fonts: CPTFONT, CPTFONTI

    Date: Fri, 29 Nov 85 13:52 EST
    From: Scott Cyphers <sr.ehpyc@SPEECH.MIT.EDU>

									 If
    dolist expanded like this instead:
    (defmacro dolist ((var list) &body body)
      (let ((temp (gensym)))
	`(do ((,temp ,list (cdr ,temp)))
	     ((null ,temp))
	   (let ((,var (car ,temp)))
	     ,@body))))

The way I read the common lisp definition of dolist, the scope of 1var0 is
required to be the whole iteration, not just around 1{statement}*0.  In
particular when you specify a1 resultform0.

It actually makes a difference if you create more than one lexical
closure over var inside the loop.

30-Nov-85 20:04:53-EST,3156;000000000000
Received: from MIT-JIMI by MIT-OZ via Chaosnet; 30 Nov 85 20:04-EST
Date: Sat, 30 Nov 85 20:04 EST
From: David Vinayak Wallace <Gumby@MIT-MC.ARPA>
Subject: hardcopy to LGP-2 can't :INTERPRET-FONT-CHANGES
To: BUG-LISPM@OZ.AI.MIT.EDU
Message-ID: <851130200416.2.GUMBY@JIMI.AI.MIT.EDU>

In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.2,
AISite 11.2, microcode TMC5-MIC 336, on Lisp Machine Jimi Hendrix:

but the release notes say it will on pg 138

>>Error: Flavor LGP:LGP2-PAGE-BUFFERING-STREAM does not handle the init keyword :INTERPRET-FONT-CHANGES
While in the function INSTANTIATE-FLAVOR  MAKE-INSTANCE  (:METHOD SI:HARDCOPY-DEVICE-MIXIN :MAKE-HARDCOPY-STREAM)

INSTANTIATE-FLAVOR:  (P.C. = 425)
   Arg 0 (SI:FLAVOR-NAME): LGP:LGP2-PAGE-BUFFERING-STREAM
   Arg 1 (SI:INIT-PLIST): #<DTP-LOCATIVE 43440473>
   Arg 2 (SI:SEND-INIT-MESSAGE-P): :MAYBE
   --Defaulted args:--
   Arg 3 (SI:RETURN-UNHANDLED-KEYWORDS-P): NIL
   Arg 4 (SI:AREA-TO-CONS-INSTANCE-IN): NIL
   Local 5 (SI:FL): #<FLAVOR LGP:LGP2-PAGE-BUFFERING-STREAM 123366702>
   Local 6 (SI:UNHANDLED-KEYWORDS): (:INTERPRET-FONT-CHANGES)
   Local 7 (SI:INSTANCE): #<LGP2-PAGE-BUFFERING-STREAM 34100620>
   Local 8 (SI:VARS): (SI:OLD-OUTPUT-STREAM SI:PAGE-BUFFERS SI:COPIES SI:PRINT-BACKWARDS SI:FONT-SQUISH-TABLE LGP:CHAR-STRING LGP:CHAR-STRING-IN-USE SI:DEVICE-CURSOR-X SI:DEVICE-CURSOR-Y SYS:PAGE-WIDTH ...)
   Local 9 (SI:INIT-INFO): (((:KEEP-OUTPUT-STREAM-OPEN-P 22.) (:BANNER-STRING 39.) (:PAGE-NUMBER 32.) (:PAGE-HEADING-DATE 41.) (:PAGE-HEADING 40.) (:BANNER-FILE-NAME 38.) (:BANNER-CREATION-DATE 37.) (:BANNER-USER-NAME 36.) (:LANDSCAPE-P 30.) (:PAGE-HEIGHT 11.) ...) ((SI:PAGE-BUFFERS 2. NIL) (SI:COPIES 3. 1.) (SI:PRINT-BACKWARDS 4. T) (:MARGINS NIL (QUOTE **)) (SI:DEVICE-CURSOR-X 8. -999.92) (SI:DEVICE-CURSOR-Y 9. -999.92) (SYS:PAGE-WIDTH 10. (* 8.5 72.)) (SI:PAGE-HEIGHT 11. (* 11. 72.)) (SI:BASELINE 12. 18.) (SI:LINE-HEIGHT 13. 24.) ...) (:HEADER-FONT-P :HEADER-FONT :DEFAULT-FONT :TV-FONTS :PRESS-FONTS :FONTS :FONT :MARGINS :COPIES :BITMAP-ONLY-P) NIL NIL NIL)
   Local 10 (SI:INITABLE-IVS): ((:KEEP-OUTPUT-STREAM-OPEN-P 22.) (:BANNER-STRING 39.) (:PAGE-NUMBER 32.) (:PAGE-HEADING-DATE 41.) (:PAGE-HEADING 40.) (:BANNER-FILE-NAME 38.) (:BANNER-CREATION-DATE 37.) (:BANNER-USER-NAME 36.) (:LANDSCAPE-P 30.) (:PAGE-HEIGHT 11.) ...)
   Local 11 (SI:REQUIRED-KEYWORDS): NIL

MAKE-INSTANCE:  (P.C. = 6)
   Arg 0 (SI:FLAVOR-NAME): LGP:LGP2-PAGE-BUFFERING-STREAM
   Rest arg (SI:INIT-OPTIONS): (:DEVICE #<LGP2-PRINTER LE-MONDE 1441600> :OUTPUT-STREAM #<CHARACTER-STREAM 34100601> :FONTS NIL :PAGE-HEADING NIL :INTERPRET-FONT-CHANGES T)
   Local 1 (SI:INIT-OPTIONS): (:MARGINS (2000. 1270. 2000. 1270.) :DEVICE #<LGP2-PRINTER LE-MONDE 1441600> :OUTPUT-STREAM #<CHARACTER-STREAM 34100601> :FONTS NIL :PAGE-HEADING NIL ...)

(:METHOD SI:HARDCOPY-DEVICE-MIXIN :MAKE-HARDCOPY-STREAM):  (P.C. = 157)
   Arg 0 (SELF): #<LGP2-PRINTER LE-MONDE 1441600>
   Arg 1 (SYS:SELF-MAPPING-TABLE): SI:HARDCOPY-DEVICE-MIXIN
   Arg 2 (SI:OPERATION): :MAKE-HARDCOPY-STREAM
   Arg 3 (SI:OPTIONS): (:FONTS NIL :PAGE-HEADING NIL :INTERPRET-FONT-CHANGES T)
 1-Dec-85 14:35:21-EST,2053;000000000000
Received: from MIT-GOLDILOCKS.ARPA by MIT-OZ via Chaosnet; 1 Dec 85 14:35-EST
Received: from SPEECH.MIT.EDU by MIT-GOLDILOCKS.ARPA via CHAOS with CHAOS-MAIL id 9801; Sun 1-Dec-85 14:34:20-EST
Date: 1 Dec 1985  14:35 EST (Sun)
Message-ID: <SR.EHPYC.12163695548.BABYL@MIT-SPEECH>
From: Scott Cyphers <SR.EHPYC@MIT-SPEECH>
To:   Mike McMahon <MMcM@SCRC-STONY-BROOK.ARPA>
Cc:   BUG-LISPM@MIT-GOLDILOCKS.ARPA
Subject: dolist and array registers
In-reply-to: Msg of 29 Nov 1985  23:31-EST from Mike McMahon <MMcM at SCRC-STONY-BROOK.ARPA>

    Date: Friday, 29 November 1985  23:31-EST
    From: Mike McMahon <MMcM at SCRC-STONY-BROOK.ARPA>
    To:   Scott Cyphers <sr.ehpyc at SPEECH.MIT.EDU>
    cc:   BUG-LISPM at MIT-GOLDILOCKS.ARPA
    Re:   dolist and array registers
    Supersedes: <851129232924.4.MMCM@OWL.SCRC.Symbolics.COM>
    Character-Styles: (1 0 (NIL 0) (NIL :ITALIC NIL) "CPTFONTI")
    Fonts: CPTFONT, CPTFONTI

        Date: Fri, 29 Nov 85 13:52 EST
        From: Scott Cyphers <sr.ehpyc@SPEECH.MIT.EDU>

    									 If
        dolist expanded like this instead:
        (defmacro dolist ((var list) &body body)
          (let ((temp (gensym)))
    	`(do ((,temp ,list (cdr ,temp)))
    	     ((null ,temp))
    	   (let ((,var (car ,temp)))
    	     ,@body))))

    The way I read the common lisp definition of dolist, the scope of 1var0 is
    required to be the whole iteration, not just around 1{statement}*0.  In
    particular when you specify a1 resultform0.

    It actually makes a difference if you create more than one lexical
    closure over var inside the loop.

You have a point there.  Dolist doesn't make new environments on each
iteration and MAPC does (in addition to allowing multi-list
enumeration) Unfortunately, declaring things inline doesn't do
anything right now, so MAPC has some disadvantages.  However, in
either case, the real problem for me is that an array register
declaration on a Common Lisp dolist iteration variable does the
completely wrong thing.
 2-Dec-85 13:00:36-EST,4428;000000000000
Received: from MIT-DUE-PROCESS by MIT-OZ via Chaosnet; 2 Dec 85 13:00-EST
Date: Mon, 2 Dec 85 13:02 EST
From: Carl Hewitt <HEWITT@MIT-XX.ARPA>
Subject: persistent bug in Zmail
To: BUG-LISPM@OZ.AI.MIT.EDU
cc: Hewitt@OZ.AI.MIT.EDU
Message-ID: <"851202130231.8.hewitt@XX"@DUE-PROCESS.AI.MIT.EDU>

In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.2,
AISite 11.2, microcode TMC5-MIC 336, on Due Process:

I tried [MAPOVER] [HARCOPY] and got an "output hold".  Trying
[FUNCTION] [CONROL-CLEAR INPUT] had no effect.

>>Break: 
While in the function PROCESS-WAIT  (:METHOD TV:SHEET :OUTPUT-HOLD-EXCEPTION)  FQUERY

PROCESS-WAIT:
   Arg 0 (SI:WHOSTATE): "Output Hold"
   Local 0 (SI:WHOSTATE): #<BREAK 54642035>
   Arg 1 (FUNCTION): #<DTP-COMPILED-FUNCTION (:INTERNAL (:METHOD TV:SHEET :OUTPUT-HOLD-EXCEPTION) 0) 22346365>
   Local 1 (FUNCTION): #<DTP-LOCATIVE 44041026>
   Rest arg (SI:ARGUMENTS): (#<ZMAIL-TYPEOUT-WINDOW Zmail Typeout Window 7 43207475 exposed>)
   Local 2 (SI:ARGUMENTS): #<DTP-LOCATIVE 44041025>

(:METHOD TV:SHEET :OUTPUT-HOLD-EXCEPTION):  (P.C. = 101)
   Arg 0 (SELF): #<ZMAIL-TYPEOUT-WINDOW Zmail Typeout Window 7 43207475 exposed>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor TV:SHEET -- 0. IV's, 1. FL's 120146364>
   Arg 2 (SI:OPERATION): :OUTPUT-HOLD-EXCEPTION

FQUERY:  (P.C. = 347)  (from XX:PS:<HEWITT>LISPM-INIT)
   Arg 0 (FORMAT:OPTIONS): (:SELECT T :BEEP T :TYPE :READLINE :CHOICES ((T "Yes") (NIL "No")))
   Arg 1: "Do you really want to ~A all ~D messages~A? "
   Rest arg: ("hardcopy" 447 "")

FQUERY:  (encapsulated for ADVISE)  (from XX:PS:<HEWITT>LISPM-INIT)
   Rest arg (ARGLIST): ((:SELECT T :BEEP T :TYPE :READLINE :CHOICES ((T "Yes") (NIL "No"))) "Do you really want to ~A all ~D messages~A? " "hardcopy" 447 "")

ZWEI:TYPEOUT-BEEP-YES-OR-NO-P:  (P.C. = 10)
   Rest arg (ZWEI:FORMAT-ARGS): ("Do you really want to ~A all ~D messages~A? " "hardcopy" 447 "")

ZWEI:CHECK-FOR-TOO-MANY-MSGS:  (P.C. = 25)
   Arg 0 (ZWEI:WHAT): "hardcopy"
   --Defaulted args:--
   Arg 1 (ZWEI:SEQUENCE): #<BABYL-BUFFER "XX:PS:<HEWITT>HEWITT.BABYL" 12040277>
   Arg 2 (ZWEI:EXTRA-TEXT): ""

ZWEI:COM-ZMAIL-HARDCOPY-ALL:  (P.C. = 13)

ZWEI:COM-ZMAIL-MAP-OVER:  (P.C. = 63)

ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
   Arg 0 (ZWEI:COMMAND): ZWEI:COM-ZMAIL-MAP-OVER
   Arg 1 (ZWEI:CHAR): (:MENU ("Map over" . ZWEI:COM-ZMAIL-MAP-OVER) 4 #<ZMAIL-MAIN-COMMAND-MENU-PANE Zmail Main Command Menu Pane 5 43207055 exposed>)
   --Defaulted args:--
   Arg 2 (ZWEI:PREFIX-CHAR): NIL
   Arg 3 (ZWEI:HOOK-LIST): NIL

ZWEI:ZMAIL-COMMAND-EXECUTE:  (P.C. = 6)
   Arg 0: ZWEI:COM-ZMAIL-MAP-OVER

(:INTERNAL ZWEI:ZMAIL-COMMAND-LIST 0 (:MENU)):  (P.C. = 10)
   Arg 0 (SI:**DEFSELECT-OP**): :MENU
   Arg 1 (ZWEI:ITEM): ("Map over" . ZWEI:COM-ZMAIL-MAP-OVER)
   Arg 2 (ZWEI:CH): 4
   Arg 3 (ZWEI:WINDOW): #<ZMAIL-MAIN-COMMAND-MENU-PANE Zmail Main Command Menu Pane 5 43207055 exposed>

ZWEI:ZMAIL-COMMAND-LIST:  (P.C. = 12)
   Arg 0 (SI:OPERATION): :MENU
   Rest arg (SI:SELECT-METHOD-ARGS): (("Map over" . ZWEI:COM-ZMAIL-MAP-OVER) 4 #<ZMAIL-MAIN-COMMAND-MENU-PANE Zmail Main Command Menu Pane 5 43207055 exposed>)

(:METHOD ZWEI:ZMAIL-FRAME :PROCESS-SPECIAL-COMMAND):  (P.C. = 16)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 43200325 exposed>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-FRAME -- 66. IV's, 20. FL's 146565661>
   Arg 2 (SI:OPERATION): :PROCESS-SPECIAL-COMMAND
   Rest arg (ARGS): (:MENU ("Map over" . ZWEI:COM-ZMAIL-MAP-OVER) 4 #<ZMAIL-MAIN-COMMAND-MENU-PANE Zmail Main Command Menu Pane 5 43207055 exposed>)

(:METHOD ZWEI:ZMAIL-FRAME :COMMAND-LOOP):  (P.C. = 136)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 43200325 exposed>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-FRAME -- 66. IV's, 20. FL's 146565661>
   Arg 2 (SI:OPERATION): :COMMAND-LOOP

(:METHOD ZWEI:ZMAIL-FRAME :COMBINED :COMMAND-LOOP):  (P.C. = 70)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 43200325 exposed>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-FRAME -- 66. IV's, 20. FL's 146565661>
   Arg 2 (SI:.OPERATION.): :COMMAND-LOOP
   Rest arg (SI:.DAEMON-CALLER-ARGS.): NIL

ZWEI:ZMAIL-PROCESS-TOP-LEVEL:  (P.C. = 105)
   Arg 0 (ZWEI:WINDOW): #<ZMAIL-FRAME Main Zmail Window 43200325 exposed>

SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
   --Defaulted args:--
   Arg 0 (IGNORE): NIL
 3-Dec-85 13:17:21-EST,5425;000000000000
Received: from MIT-ZERMATT.ARPA by MIT-OZ via Chaosnet; 3 Dec 85 13:17-EST
Received: from XX.MIT.EDU by ZERMATT.MIT.EDU via INTERNET with SMTP id 18447; 3 Dec 85 13:15:15-EST
Date: Tue 3 Dec 85 13:16:46-EST
From: William B. Ackerman <WBA@MIT-XX.ARPA>
Subject: bug in error messages for structure creation
To: BUG-EXPLORER@MIT-MC.ARPA, BUG-LISPM@MIT-ZERMATT.ARPA,
    "*PS:<WBA>EXPLORER.BUGS.1"@MIT-XX.ARPA
Message-ID: <12164205549.44.WBA@MIT-XX.ARPA>

To: BUG-LISPM@ZERMATT
--Text Follows This Line--
In SYSTEM 1.72, Compiler 1.9, File System 1.1,
Universal Command Loop 1.0, Window System 1.5, Input Editor 1.1,
ZMACS 1.2, font editor 1.0, Error Handler 1.0, Suggestions 1.0,
Debug Utilities 1.3, Explorer-Net 1.2, Telnet 1.0, VT100 1.0, ZMail 1.0,
Local-File 1.21, Net-Config 1.5, Explorer Serial & Parallel Ports 1.0,
Printer 1.0, Glossary 1.0, Explorer Streamer Tape 1.11, NVRAM 1.3,
User Profile Utility 1.2, microcode 214, Rel 1.0.2.18, on DOGWOOD:


Insert your description of the circumstances here:

------------------------------------------------------
This occurred when I typed (load "bug32") where the file
bug32.lisp is as follows:
------------------------------------------------------
;;; -*- Mode:Common-Lisp; Base:10 -*-

(set-lisp-mode :common-lisp t)

(defstruct thing e c (s nil) (r 0))

(make-thing :e 34 :bad-field t :c 5)
------------------------------------------------------
As you can see, there is a bad field, but it is not "e".
The error message indicated the wrong field.
------------------------------------------------------
>>ERROR: Unknown defstruct keyword :E
Backtrace from the debugger:

SI::EVAL1 (P.C. = 1213)

 Arg 0 (FORM): (FERROR NIL "Unknown defstruct keyword :~A" (CAR SI::INIT-VALUES))
   --Defaulted args:--
 Arg 1 (NOHOOK): NIL
 Local 0 (TEM): NIL
 Local 1 (ENV): NIL
 Local 2 (VCELL): NIL
 Local 3 (TAILENV): NIL
 Local 4 (SLOT): NIL
 Local 5 (FCTN): #<DTP-FEF-POINTER FERROR 27203517>
 Local 6 (ARG-DESC): -14675902
 Local 7 (NUM-ARGS): 3
 Local 8 (CLOSURE-PASSED): NIL
 Local 9 (FCTN1): NIL
 Local 10 (LAMBDA-LIST): NIL
 Local 11 (LL): NIL
 Local 12 (QUOTE-STATUS): NIL
 Local 13 (REST-FLAG): NIL
 Local 14 (ARGL): NIL
 Local 15 (ARGNUM): 3
 Local 16: NIL
 Local 17: NIL
 Local 18 (IGNORE): NIL
 Local 19 (ADL): NIL
 Local 20 (ITEM): NIL
 Local 21 (.SELECTQ.ITEM.): NIL


Additional information supplied with call:
 SYSTEM:ADI-FEXPR-CALL

COND (P.C. = 72)

 Rest arg (CLAUSES): ((SI::SLOT-NUMBER # #) (T #))
 Local 1 (CLAUSES): ((T #))
 Local 2 (PREDVAL): T
 Local 3 (EXPRESSIONS): ((FERROR NIL "Unknown defstruct keyword :~A" #))
 Local 4 (L): ((FERROR NIL "Unknown defstruct keyword :~A" #))


SI::EVAL1 (P.C. = 1213)

 Arg 0 (FORM): (COND (SI::SLOT-NUMBER # #) (T #))
   --Defaulted args:--
 Arg 1 (NOHOOK): NIL
 Local 0 (TEM): NIL
 Local 1 (ENV): NIL
 Local 2 (VCELL): NIL
 Local 3 (TAILENV): NIL
 Local 4 (SLOT): NIL
 Local 5 (FCTN): #<DTP-FEF-POINTER COND 13376260>
 Local 6 (ARG-DESC): -12562432
 Local 7 (NUM-ARGS): 0
 Local 8 (CLOSURE-PASSED): NIL
 Local 9 (FCTN1): NIL
 Local 10 (LAMBDA-LIST): NIL
 Local 11 (LL): NIL
 Local 12 (QUOTE-STATUS): NIL
 Local 13 (REST-FLAG): NIL
 Local 14 (ARGL): ((SI::SLOT-NUMBER # #) (T #))
 Local 15 (ARGNUM): 0
 Local 16: NIL
 Local 17: NIL
 Local 18 (IGNORE): NIL
 Local 19 (ADL): NIL
 Local 20 (ITEM): NIL
 Local 21 (.SELECTQ.ITEM.): NIL


Additional information supplied with call:
 SYSTEM:ADI-FEXPR-CALL

LET (P.C. = 504)

 Arg 0 (VARLIST): ((SI::SLOT-NUMBER #))
 Rest arg (BODY): ((COND # #))
 Local 1 (SYMBOL): NIL
 Local 2 (VALUE): NIL
 Local 3 (NEXTBINDING): NIL
 Local 4 (L): ((COND # #))
 Local 5 (B): NIL
 Local 6 (SPECIALS): NIL
 Local 7 (FORM): (COND (SI::SLOT-NUMBER # #) (T #))
 Local 8 (X): NIL
 Local 9 (V): NIL
 Local 10 (BFRAME): (#<DTP-LOCATIVE 51066155> NIL)
 Local 11 (VAR): SI::SLOT-NUMBER
 Local 12 (B): NIL


SI::EVAL1 (P.C. = 1213)

 Arg 0 (FORM): (LET (#) (COND # #))
   --Defaulted args:--
 Arg 1 (NOHOOK): NIL
 Local 0 (TEM): NIL
 Local 1 (ENV): NIL
 Local 2 (VCELL): NIL
 Local 3 (TAILENV): NIL
 Local 4 (SLOT): NIL
 Local 5 (FCTN): #<DTP-FEF-POINTER LET 13375112>
 Local 6 (ARG-DESC): -11481023
 Local 7 (NUM-ARGS): 1
 Local 8 (CLOSURE-PASSED): NIL
 Local 9 (FCTN1): NIL
 Local 10 (LAMBDA-LIST): NIL
 Local 11 (LL): NIL
 Local 12 (QUOTE-STATUS): NIL
 Local 13 (REST-FLAG): NIL
 Local 14 (ARGL): ((COND # #))
 Local 15 (ARGNUM): 1
 Local 16: NIL
 Local 17: NIL
 Local 18 (IGNORE): NIL
 Local 19 (ADL): (288 101 101 101 ...)
 Local 20 (ITEM): 256
 Local 21 (.SELECTQ.ITEM.): 0


Remainder of stack:

SI::DO-DO*-INTERNAL (P.C. = 125)
SI::DO-PARALLEL (P.C. = 561)
DO (P.C. = 22)
SI::EVAL1 (P.C. = 1213)
IF (P.C. = 35)
SI::EVAL1 (P.C. = 1213)
LET (P.C. = 504)
SI::EVAL1 (P.C. = 1213)
BLOCK (P.C. = 121)
SI::EVAL1 (P.C. = 1213)
...
(:METHOD UCL::BASIC-COMMAND-LOOP :HANDLE-TYPEIN-INPUT) (P.C. = 535)
(:METHOD TV::RH-COMMAND :EXECUTE) (P.C. = 132)
(:METHOD UCL::BASIC-COMMAND-LOOP :EXECUTE-COMMAND) (P.C. = 62)
(:METHOD UCL::BASIC-COMMAND-LOOP :HANDLE-KEY-INPUT) (P.C. = 72)
(:METHOD UCL::BASIC-COMMAND-LOOP :FETCH-AND-EXECUTE) (P.C. = 121)
(:METHOD TV:LISP-LISTENER :LOOP) (P.C. = 156)
(:METHOD UCL::COMMAND-LOOP-MIXIN :COMMAND-LOOP) (P.C. = 100)
SI::PROCESS-TOP-LEVEL (P.C. = 244)
SI:LISP-TOP-LEVEL (P.C. = 47)
-------
 3-Dec-85 22:27:05-EST,2226;000000000000
Received: from MIT-MC.ARPA by MIT-OZ via Chaosnet; 3 Dec 85 22:26-EST
Received: from SCRC-STONY-BROOK.ARPA by MIT-MC.ARPA  3 Dec 85 22:14:55 EST
Received: from HUDSON.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 366266; Tue 3-Dec-85 15:16:32-EST
Date: Tue, 3 Dec 85 15:19 EST
From: Charles Hornig <Hornig@SCRC-STONY-BROOK.ARPA>
Subject: background typeout
To: David M. J. Saslav <SAZ%MIT-OZ@MIT-MC.ARPA>
cc: BUG-lispm%MIT-OZ@MIT-MC.ARPA,
    Bug-Tracking-Replies@SCRC-STONY-BROOK.ARPA
In-Reply-To: The message of 23 May 85 09:08-EDT from David M. J. Saslav <SAZ%MIT-OZ@MIT-MC.ARPA>
Disposition: NOT-MY-BUG
Category: notification
Message-ID: <851203151911.1.HORNIG@HUDSON.SCRC.Symbolics.COM>

Synopsis:  Please send this to Doughty,

  -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --

    Date: Thu, 23 May 85 09:08 EDT
    From: David M. J. Saslav <SAZ%MIT-OZ@MIT-MC.ARPA>

    I had function-4-t'ed, activating background processing in deexposed
    windows, and had gone from lisp listener (henceforth "A") to terminal
    1 ("B").  I was logging in to oz from B when I got a popup window
    saying that process A wanted to typeout -- sure enough, there was some
    query-io that i was doing in my init file asking me if i wanted to
    load certain files... I told it to proceed and figured I might as well
    type ahead my response to the next and final query io msg of the init
    file (which I knew from experience would come up shortly thereafter)
    at the same time.  As soon as I typed the two "Y"'s at A (no typeout
    took place in A before the switch, I don't think), I went back to B,
    where a little later I was again told that A wanted to tell me
    something (same popup window as before).  When I went back to A,
    however, the second queryio msg was not what was awaiting me, as I'd
    half expected -- the second set of files had gone ahead and loaded in
    as they were supposed to -- what was awaiting me in A was a message
    telling me that B wanted to typeout...

    Not a crucial bug but an interesting one nonetheless...hope y'all can
    regenerate it if you're so inclined...

    saz

 5-Dec-85 01:03:01-EST,885;000000000000
Received: from MIT-REAGAN.ARPA by MIT-OZ via Chaosnet; 5 Dec 85 01:02-EST
Date: Thu, 5 Dec 85 01:02 EST
From: CJL@OZ.AI.MIT.EDU
Sender: File-Server@MIT-REAGAN.ARPA
Subject: lossage with V127 FEP proms
To: BUG-LISPM@OZ.AI.MIT.EDU
Message-ID: <851205010231.1.FILE-SERVER@MIT-REAGAN.ARPA>

In Symbolics 3600 Release 6.1, IP-TCP 29.13, Mailer 43.6,
6-1-Patches 1.2, AISite 11.2, microcode TMC5-MIC 336,
Network-Security patch, Update-Internet-Namespace patch,
Server-Finger patch, Inquir-update patch, Update-AI-Domain patch,
Rodent Free Namespace Editor, on Lisp Machine Ronald Reagan:

Would there be any reason why a set of V127 FEP proms that work on a
3640 here won't work on any of our 3600's or 3670's?

The failure mode is that when running lisp, the keyboard and mouse are
totally ignored. Not even c-h-function works. The keyboard works fine
when in the fep.
 5-Dec-85 15:30:39-EST,1095;000000000000
Mail-From: CJL created at  5-Dec-85 15:30:22
Date: Thu, 5 Dec 1985  15:30 EST
Message-ID: <CJL.12164754155.BABYL@MIT-OZ>
From: Chris Lindblad <CJL@MIT-OZ>
To:   CJL@MIT-OZ
Cc:   BUG-LISPM@MIT-OZ
Subject: lossage with V127 FEP proms
In-reply-to: Msg of 5 Dec 1985  01:02-EST from CJL at OZ.AI.MIT.EDU

    Date: Thursday, 5 December 1985  01:02-EST
    From: CJL at OZ.AI.MIT.EDU

    In Symbolics 3600 Release 6.1, IP-TCP 29.13, Mailer 43.6,
    6-1-Patches 1.2, AISite 11.2, microcode TMC5-MIC 336,
    Network-Security patch, Update-Internet-Namespace patch,
    Server-Finger patch, Inquir-update patch, Update-AI-Domain patch,
    Rodent Free Namespace Editor, on Lisp Machine Ronald Reagan:

    Would there be any reason why a set of V127 FEP proms that work on a
    3640 here won't work on any of our 3600's or 3670's?

    The failure mode is that when running lisp, the keyboard and mouse are
    totally ignored. Not even c-h-function works. The keyboard works fine
    when in the fep.

Never mind. I figured it out. Have to change the header on the board.
 5-Dec-85 16:08:35-EST,630;000000000000
Received: from MIT-MC.ARPA by MIT-OZ via Chaosnet; 5 Dec 85 16:08-EST
Date: Thu,  5 Dec 85 16:10:02 EST
From: Bill Long <WJL@MIT-MC.ARPA>
To: BUG-LISPM@MIT-MC.ARPA
Message-ID: <[MIT-MC.ARPA].743219.851205.WJL>

In Symbolics 6.0 the network-x command has the following
problem: I turn on wallpapering and it starts creating a file
(with all of the appropriate size and name info on the status
line)(on Oberon by the way).  I turn wallpapering off
(again with network-x, since I know of no other way) and the
wallpaper file is gone.  There is a 0000LISPM.OUT file that's
empty, but that's all.  What's going on?
-Bill
 5-Dec-85 17:19:17-EST,769;000000000000
Received: from MIT-MC.ARPA by MIT-OZ via Chaosnet; 5 Dec 85 17:18-EST
Received: from BBNG.ARPA by MIT-MC.ARPA  5 Dec 85 17:19:32 EST
Date: Thu 5 Dec 85 17:15:40-EST
From: INGRIA@BBNG.ARPA
Subject: LUNAR for LISPMs
To: INFO-LISPM@MIT-MC.ARPA

In the Greenblatt, et al paper, ``The LISP Machine'', the following
provocative paragraph appears:

``As a demonstration of the system, and a test of its capabilities,
two large programs have been brought over from the PDP-10.  William
Wood's LUNAR English-language data-base query system was converted
from INTERLISP to MACLISP, thence to LISP machine LISP.''

Anybody know the whereabouts of a copy of this LISPM version of LUNAR?
I'm very interested in obtaining a copy.

Thanks in advance,
Bob
-------
 6-Dec-85 22:04:11-EST,594;000000000000
Received: from MIT-DUANE by MIT-OZ via Chaosnet; 6 Dec 85 22:04-EST
Date: Fri, 6 Dec 85 22:03 EST
From: Ramin Zabih <RDZ@MIT-MC.ARPA>
Subject: Common-Lisp GETHASH Loses
To: BUG-LISPM@OZ.AI.MIT.EDU
Message-ID: <851206220318.2.RDZ@DUANE.AI.MIT.EDU>

In Symbolics 3670 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.2,
AISite 11.3, microcode TMC5-IO4-MIC 336, FEP 127,
FEP0:>v127-lisp.flod(2), FEP0:>v127-loaders.flod(2),
FEP0:>v127-debug.flod(1), FEP0:>v127-info.flod(2), on Lisp Machine Duane Allman:

Common-Lisp GETHASH doesn't return multiple values.  This is contrary to
the spec.

 6-Dec-85 22:54:39-EST,775;000000000000
Received: from MIT-JIMI by MIT-OZ via Chaosnet; 6 Dec 85 22:54-EST
Date: Fri, 6 Dec 85 22:53 EST
From: David Vinayak Wallace <Gumby@MIT-MC.ARPA>
Subject: sending mail to a host that's down
To: BUG-LISPM@OZ.AI.MIT.EDU
Message-ID: <851206225324.3.GUMBY@JIMI.AI.MIT.EDU>

In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.2,
AISite 11.3, microcode TMC5-MIC 336, on Lisp Machine Jimi Hendrix:

When mailing...

I set *mail-network-host* to net:*local-host* try delivering directly.
When the destination host is down I end up in the error handler.  One of
the proceed types is "retry sending via any mail server."  Unfortunately
it doesn't; it immediately retries the same losing thing.

It also probably shouldn't end up in the error handler.

david
 7-Dec-85 07:35:36-EST,594;000000000000
Received: from MIT-JIMI by MIT-OZ via Chaosnet; 7 Dec 85 07:35-EST
Date: Sat, 7 Dec 85 07:35 EST
From: David Vinayak Wallace <Gumby@MIT-MC.ARPA>
Subject: more hardcopy window bugs
To: BUG-LISPM@OZ.AI.MIT.EDU
Message-ID: <851207073508.1.GUMBY@JIMI.AI.MIT.EDU>

In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.2,
AISite 11.3, microcode TMC5-MIC 336, FEP 127, FEP0:>v127-lisp.flod(2),
FEP0:>v127-loaders.flod(2), FEP0:>v127-debug.flod(1),
FEP0:>v127-info.flod(2), on Lisp Machine Jimi Hendrix:

if you send a window stream a :current-font message you get a LIST of
fonts!
 7-Dec-85 09:52:18-EST,1678;000000000000
Received: from MIT-MC.ARPA by MIT-OZ via Chaosnet; 7 Dec 85 09:52-EST
Received: from mit-eddie by MIT-MC.ARPA  7 Dec 85 09:53:42 EST
Received: from MEDIA-LAB (2005512) by mit-eddie (4.12/4.7)
	id AA09467; Sat, 7 Dec 85 09:45:22 est
Received: by MEDIA-LAB (4.12/4.8)  id AA10653; Sat, 7 Dec 85 09:52:24 est
Date: Sat, 7 Dec 85 09:52:24 est
From: Jim Davis <jrd@MEDIA-LAB.MIT.EDU>
Message-Id: <8512071452.AA10653@MEDIA-LAB>
To: bug-lispm@mc
Subject: Common Lisp MAP and circular lists

In Symbolics 3600 Release 6.1, IP-TCP 29.13, COLOR 135.34,
COLOR-DEMO 68.4, MENU 6.1, COLOR-EDITOR 4.1, IMAGES 56.13,
Experimental COLOR-EXTENSIONS 4.3, microcode TMC5-COLOR-MIC 336,

What is Common Lisp supposed to do if one or more of its inputs is a circular list?
I can't tell from the Silver Book (p 249).  It seems to me that the results are
well defined, as long as at least one input has a finite length.  The cliche
of wanting to provide a constant argument to a map is so common that this should
be provided (though I suppose that, given lexical scope, one can usually make
the constant argument accessible from the mapped function itself.)

(map 'list '+ '(1 2 3) (circular-list 1))

>>Trap: The second argument given to the ZETALISP-SYSTEM:INTERNAL-< instruction, NIL, was not a single-precision floating-point number, a fixnum, or an extended number.
While in the function ZETALISP-SYSTEM:MIN-INTERNAL  MAP  SI:*EVAL

ZETALISP-SYSTEM:MIN-INTERNAL:  (P.C. = 3)
   Arg 0 (SI:X): 3
   Arg 1 (SI:Y): NIL

MAP:  (P.C. = 34)
   Arg 0 (SCL::RESULT-TYPE): LIST
   Arg 1 (FUNCTION): +
   Rest arg (SCL::SEQUENCES): ((1 2 3) (1 1 1 1 1 1 1 1 1 1 ...))

 7-Dec-85 10:01:40-EST,805;000000000000
Received: from MIT-YOGI by MIT-OZ via Chaosnet; 7 Dec 85 10:01-EST
Date: Sat, 7 Dec 85 10:00 EST
From: Scott Cyphers <sr.ehpyc@SPEECH.MIT.EDU>
Subject: Debugger still broken for interpreted closures
To: BUG-LISPM@OZ.MIT.EDU
Message-ID: <851207100047.3.CYPHER@YOGI.MIT.EDU>

In Symbolics 3670 Release 6.1, IP-TCP 29.13,
Experimental Spire-Macros 7.0, Attribute 5.14, Experimental Compute 6.1,
Audio 4.1, Speech-Attributes 4.8, Display 6.23, Speech-Layouts 6.4,
Prtout 4.5, Experimental Versatec 6.0, Spire 16.0, Experimental Zoo 8.1,
microcode TMC5-IO4-FPA-COLOR-MIC 336, on Lisp Machine Yogi:

(defun foo (x)
  (funcall #'(lambda (y) (fsignal "foo") (* x y)) x))

Interpreting this, the debugger mistakes the environment as the first
argument and the argument as an extraneous argument.
 7-Dec-85 10:31:26-EST,5056;000000000000
Received: from MIT-YOGI by MIT-OZ via Chaosnet; 7 Dec 85 10:31-EST
Date: Sat, 7 Dec 85 10:30 EST
From: Scott Cyphers <sr.ehpyc@SPEECH.MIT.EDU>
Subject: Bad debugging information
To: BUG-LISPM@OZ.MIT.EDU
Message-ID: <851207103037.4.CYPHER@YOGI.MIT.EDU>

In Symbolics 3670 Release 6.1, IP-TCP 29.13,
Experimental Spire-Macros 7.0, Attribute 5.14, Experimental Compute 6.1,
Audio 4.1, Speech-Attributes 4.8, Display 6.23, Speech-Layouts 6.4,
Prtout 4.5, Experimental Versatec 6.0, Spire 16.0, Experimental Zoo 8.1,
microcode TMC5-IO4-FPA-COLOR-MIC 336, on Lisp Machine Yogi:

Compiling the following functions gets the debugging information or
disassemble confused somehow, so that the disassembled code (see end of
this message) doesn't know about a the local variables (FP|7 through
FP|10).  This makes debugging somewhat difficult. 

(defstruct (mean-and-covariance :named (:conc-name "MAC-"))
  add-sample
  mean
  covariance
  correlation)

(defun make-mean-and-covariance-computer (size)
  (let ((mean (make-array size :initial-element 0.0))
	(correlation (make-array `(,size ,size) :initial-element 0.0))
	(covariance (make-array `(,size ,size)))
	(n 0.0))
    (make-mean-and-covariance
      :add-sample
      #'(lambda (new-sample weight)
	  (let* ((sample-scale (/ (+ n weight)))
		 (mean-scale (* n sample-scale)))
	    (dotimes (i size)
	      (let* ((sample (aref new-sample i))
		     (scaled-sample (* sample sample-scale)))
		(setf (aref mean i)
		      (+ (* (aref mean i) mean-scale) scaled-sample))
		(dotimes (j i)
		   (setf (aref correlation i j)
			 (+ (* (aref correlation i j) mean-scale)
			    (* (aref new-sample j) scaled-sample))))
		(setf (aref correlation i i)
		      (+ (* (aref correlation i i) mean-scale)
			 (* scaled-sample sample)))))
	    (incf n weight)))
      :mean
      #'(lambda () mean)
      :covariance
      #'(lambda ()
	  (dotimes (i size)
	    (let ((mean-i (aref mean i)))
	      (dotimes (j i)
		(let ((val (- (aref correlation i j)
			      (* mean-i (aref mean j)))))
		  (setf (aref covariance i j) val)
		  (setf (aref covariance j i) val)))
	      (setf (aref covariance i i)
		    (- (aref correlation i i)
		       (* mean-i mean-i)))))
	  covariance)
      :correlation
      #'(lambda ()
	  (dotimes (i size)
	    (dotimes (j i)
	      (setf (aref correlation j i) (aref correlation i j))))
	  correlation))))


(:INTERNAL MAKE-MEAN-AND-COVARIANCE-COMPUTER 0):
  0  ENTRY: 3 REQUIRED, 0 OPTIONAL
  1  PUSH-IMMED 1
  2  %FETCH-FREEVAR-4 FP|0      ;N
  3  BUILTIN +-INTERNAL STACK FP|2      ;WEIGHT
  4  BUILTIN *RATIONAL-QUOTIENT STACK   ;creating SAMPLE-SCALE(FP|3)
  5  %FETCH-FREEVAR-4 FP|0      ;N
  6  PUSH-LOCAL FP|3            ;SAMPLE-SCALE
  7  BUILTIN *-INTERNAL STACK   ;creating MEAN-SCALE(FP|4)
 10  %FETCH-FREEVAR-0 FP|0      ;SIZE   creating NIL(FP|5)
 11  PUSH-IMMED 0               ;creating I(FP|6)
 12  BRANCH 60
 13  %FETCH-FREEVAR-2 FP|0      ;CORRELATION
 14  PUSH-LOCAL FP|6            ;I
 15  PUSH-LOCAL FP|10
 16  BUILTIN AR-2 STACK 
 17  PUSH-LOCAL FP|4            ;MEAN-SCALE
 20  BUILTIN *-INTERNAL STACK 
 21  PUSH-LOCAL FP|1            ;NEW-SAMPLE
 22  BUILTIN AR-1 STACK FP|10
 23  PUSH-LOCAL FP|8
 24  BUILTIN *-INTERNAL STACK 
 25  BUILTIN +-INTERNAL STACK 
 26  %FETCH-FREEVAR-2 FP|0      ;CORRELATION
 27  PUSH-LOCAL FP|6            ;I
 30  PUSH-LOCAL FP|10
 31  BUILTIN AS-2 IGNORE 
 32  BUILTIN 1+LOCAL IGNORE FP|10
 33  PUSH-LOCAL FP|10
 34  PUSH-LOCAL FP|9
 35  BUILTIN INTERNAL-< STACK 
 36  BRANCH-TRUE 13
 37  POP-N 2
 40  %FETCH-FREEVAR-2 FP|0      ;CORRELATION
 41  PUSH-LOCAL FP|6            ;I
 42  PUSH-LOCAL FP|6            ;I
 43  BUILTIN AR-2 STACK 
 44  PUSH-LOCAL FP|4            ;MEAN-SCALE
 45  BUILTIN *-INTERNAL STACK 
 46  PUSH-LOCAL FP|8
 47  PUSH-LOCAL FP|7
 50  BUILTIN *-INTERNAL STACK 
 51  BUILTIN +-INTERNAL STACK 
 52  %FETCH-FREEVAR-2 FP|0      ;CORRELATION
 53  PUSH-LOCAL FP|6            ;I
 54  PUSH-LOCAL FP|6            ;I
 55  BUILTIN AS-2 IGNORE 
 56  POP-N 2
 57  BUILTIN 1+LOCAL IGNORE FP|6        ;I
 60  PUSH-LOCAL FP|6            ;I
 61  PUSH-LOCAL FP|5
 62  BUILTIN INTERNAL-< STACK 
 63  BRANCH-FALSE 103
 64  PUSH-LOCAL FP|1            ;NEW-SAMPLE
 65  BUILTIN AR-1 STACK FP|6    ;I      creating SAMPLE(FP|7)
 66  PUSH-LOCAL FP|7
 67  PUSH-LOCAL FP|3            ;SAMPLE-SCALE
 70  BUILTIN *-INTERNAL STACK   ;creating SCALED-SAMPLE(FP|8)
 71  %FETCH-FREEVAR-1 FP|0      ;MEAN
 72  BUILTIN AR-1 STACK FP|6    ;I
 73  PUSH-LOCAL FP|4            ;MEAN-SCALE
 74  BUILTIN *-INTERNAL STACK 
 75  BUILTIN +-INTERNAL STACK FP|8
 76  %FETCH-FREEVAR-1 FP|0      ;MEAN
 77  BUILTIN AS-1 IGNORE FP|6   ;I
100  PUSH-LOCAL FP|6            ;I      creating NIL(FP|9)
101  PUSH-IMMED 0               ;creating J(FP|10)
102  BRANCH 33
103  POP-N 2
104  %FETCH-FREEVAR-4 FP|0      ;N
105  BUILTIN +-INTERNAL STACK FP|2      ;WEIGHT
106  %MOVEM-FREEVAR-4 FP|0      ;N
107  RETURN-STACK 

 8-Dec-85 18:43:47-EST,6229;000000000000
Received: from MIT-GOLDILOCKS.ARPA by MIT-OZ via Chaosnet; 8 Dec 85 18:43-EST
Received: from KODIAK.MIT.EDU by MIT-GOLDILOCKS.ARPA via CHAOS with CHAOS-MAIL id 10307; Sun 8-Dec-85 18:43:03-EST
Date: Sun, 8 Dec 85 18:42 EST
From: Scott Cyphers <sr.ehpyc@SPEECH.MIT.EDU>
Subject: Broken defsubst expanders
To: BUG-LISPM@MIT-GOLDILOCKS.ARPA
Message-ID: <851208184243.1.CYPHER@KODIAK.MIT.EDU>

In Symbolics 3670 Release 6.1, IP-TCP 29.13,
Experimental Spire-Macros 7.0, Attribute 5.14, Experimental Compute 6.1,
Audio 4.1, Speech-Attributes 4.8, Display 6.23, Speech-Layouts 6.4,
Prtout 4.5, Experimental Versatec 6.0, Spire 16.0, Experimental Zoo 8.1,
microcode TMC5-IO4-FPA-COLOR-MIC 336, on Lisp Machine Kodiak:

This is with Common Lisp. 

(defsubst distance-square (point-1 point-2)
  (do ((distance 0.0)
       (point-1 point-1 (cdr point-1))
       (point-2 point-2 (cdr point-2)))
      ((null point-1) distance)
    (incf distance (expt (- (car point-1) (car point-2)) 2))))

(defun find-most-distant-point (point samples)
  (let ((max 0.0)
	(max-point point))
    (do ((samples samples (cdr samples)))
	((null samples) max-point)
      (let ((this-distance (distance-square point (car samples))))
	(when (> this-distance max)
	  (setq max this-distance)
	  (setq max-point (car samples)))))))

>>Error: Attempt to set or bind the SUBST parameter POINT-1.
While in the function (:INTERNAL LT::LET-SUBST-COPYFORMS 0 LT::LET-SUBST-COPY)  LT::MAPFORMS-CALL  LT::MAPFORMS-BIND
While compiling FIND-MOST-DISTANT-POINT

(:INTERNAL LT::LET-SUBST-COPYFORMS 0 LT::LET-SUBST-COPY):  (P.C. = 33)
   Arg 0 (COMPILER:.LEXICAL-ENVIRONMENT-POINTER.): (((POINT-2 CAR SAMPLES) (POINT-1 . POINT)))
   Arg 1 (LT::FORM): POINT-1
   Arg 2 (LT::KIND): LET
   Arg 3 (IGNORE): LET

LT::MAPFORMS-CALL:  (P.C. = 12)
   Arg 0 (LT::FORM): POINT-1
   Arg 1 (LT::KIND): LET
   Arg 2 (LT::USAGE): LET
   --Defaulted args:--
   Arg 3 (FUNCTION): #<LEXICAL-CLOSURE (:INTERNAL LT::LET-SUBST-COPYFORMS 0 LT::LET-SUBST-COPY) 16640432>

LT::MAPFORMS-BIND:  (P.C. = 74)
   Arg 0 (BIND): (POINT-1 POINT-1 (CDR POINT-1))
   Arg 1 (LT::PARALLEL-BINDING-P): T
   Arg 2 (LT::ALLOW-SUPPLIED-P): IGNORE
   Arg 3 (LT::CONTAINING-FORM): (DO ((DISTANCE 0.0) (POINT-1 POINT-1 (CDR POINT-1)) (POINT-2 POINT-2 (CDR POINT-2))) ((NULL POINT-1) DISTANCE) (INCF DISTANCE (EXPT (- # #) 2)))

LT::MAPFORMS-DO:  (P.C. = 52)
   Arg 0 (LT::ORIGINAL-FORM): (DO ((DISTANCE 0.0) (POINT-1 POINT-1 (CDR POINT-1)) (POINT-2 POINT-2 (CDR POINT-2))) ((NULL POINT-1) DISTANCE) (INCF DISTANCE (EXPT (- # #) 2)))
   Arg 1 (LT::CURRENT-FORM): (DO ((DISTANCE 0.0) (POINT-1 POINT-1 (CDR POINT-1)) (POINT-2 POINT-2 (CDR POINT-2))) ((NULL POINT-1) DISTANCE) (INCF DISTANCE (EXPT (- # #) 2)))
   Arg 2 (LT::BLOCK-NAME): NIL
   Arg 3 (LT::TAIL1): (((DISTANCE 0.0) (POINT-1 POINT-1 (CDR POINT-1)) (POINT-2 POINT-2 (CDR POINT-2))) ((NULL POINT-1) DISTANCE) (INCF DISTANCE (EXPT (- # #) 2)))
   Arg 4 (LT::USAGE): EVAL
   Arg 5 (LT::PARALLEL-BINDING-P): T

(:PROPERTY DO LT:MAPFORMS):  (P.C. = 12)
   Arg 0 (LT::ORIGINAL-FORM): (DO ((DISTANCE 0.0) (POINT-1 POINT-1 (CDR POINT-1)) (POINT-2 POINT-2 (CDR POINT-2))) ((NULL POINT-1) DISTANCE) (INCF DISTANCE (EXPT (- # #) 2)))
   Arg 1 (LT::FORM): (DO ((DISTANCE 0.0) (POINT-1 POINT-1 (CDR POINT-1)) (POINT-2 POINT-2 (CDR POINT-2))) ((NULL POINT-1) DISTANCE) (INCF DISTANCE (EXPT (- # #) 2)))
   Arg 2 (LT::USAGE): EVAL

LT:COPYFORMS-1:  (P.C. = 220)
   Arg 0 (LT::ORIGINAL-FORM): (DO ((DISTANCE 0.0) (POINT-1 POINT-1 (CDR POINT-1)) (POINT-2 POINT-2 (CDR POINT-2))) ((NULL POINT-1) DISTANCE) (INCF DISTANCE (EXPT (- # #) 2)))
   Arg 1 (LT::USAGE): EVAL

LT:COPYFORMS:  (P.C. = 63)
   Arg 0: #<LEXICAL-CLOSURE (:INTERNAL LT::LET-SUBST-COPYFORMS 0 LT::LET-SUBST-COPY) 16640432>
   Arg 1 (LT::FORM): (DO ((DISTANCE 0.0) (POINT-1 POINT-1 (CDR POINT-1)) (POINT-2 POINT-2 (CDR POINT-2))) ((NULL POINT-1) DISTANCE) (INCF DISTANCE (EXPT (- # #) 2)))
   Rest arg: NIL

LT::LET-SUBST-COPYFORMS:  (P.C. = 15)
   Arg 0: ((POINT-2 CAR SAMPLES) (POINT-1 . POINT))
   Arg 1 (LT:BODY): (DO ((DISTANCE 0.0) (POINT-1 POINT-1 (CDR POINT-1)) (POINT-2 POINT-2 (CDR POINT-2))) ((NULL POINT-1) DISTANCE) (INCF DISTANCE (EXPT (- # #) 2)))

Rest of stack:
LT::EXPAND-SUBST-DEFINITION-INTERNAL:  (P.C. = 17)
ZETALISP-SYSTEM:EXPAND-SUBST-DEFINITION:  (P.C. = 220)
SI:MACROEXPAND-1-INTERNAL:  (P.C. = 234)
MACROEXPAND-1:  (P.C. = 10)
COMPILER:TRANSFORM:  (P.C. = 551)
COMPILER:PHASE-1:  (P.C. = 16)
COMPILER:INITIALIZE-VARIABLE:  (P.C. = 13)  (from GOLDY:>Cypher>lispm-init)
COMPILER:PROCESS-VVLIST:  (P.C. = 226)
COMPILER:PHASE-1-LET:  (P.C. = 30)
(:PROPERTY LET COMPILER:PHASE-1):  (P.C. = 5)
COMPILER:PHASE-1:  (P.C. = 347)
COMPILER:PHASE-1-PROG:  (P.C. = 245)
(:PROPERTY PROG COMPILER:PHASE-1):  (P.C. = 5)
COMPILER:PHASE-1:  (P.C. = 347)
COMPILER:PHASE-1-PROGN:  (P.C. = 27)
COMPILER:PHASE-1-PROGN-WITH-BINDING-STACK-LEVEL:  (P.C. = 40)
COMPILER:PHASE-1-LET:  (P.C. = 33)
(:PROPERTY LET COMPILER:PHASE-1):  (P.C. = 5)
COMPILER:PHASE-1:  (P.C. = 347)
COMPILER:PHASE-1-BLOCK:  (P.C. = 124)
(:PROPERTY BLOCK COMPILER:PHASE-1):  (P.C. = 4)
COMPILER:PHASE-1:  (P.C. = 347)
COMPILER:PHASE-1-PROGN:  (P.C. = 27)
COMPILER:PHASE-1-FUNCTION-DEFINITION:  (P.C. = 317)
COMPILER:PHASE-1-EXTERNAL-FUNCTION:  (P.C. = 35)
COMPILER:RUN-PHASE-1-FUNCTION:  (P.C. = 73)
COMPILER:COMPILE-DEFINITION-1:  (P.C. = 10)
COMPILER:COMPILE-DEFINITION:  (P.C. = 122)
(:INTERNAL COMPILER:COMPILE-TO-CORE 0 (:DUMP-DEFINITION)):  (P.C. = 5)
COMPILER:COMPILE-TO-CORE:  (P.C. = 12)
COMPILER:COMPILE-FORM-FUNCTION:  (P.C. = 41)
COMPILER:COMPILE-FROM-STREAM-1:  (P.C. = 330)
COMPILER:PROCESS-FORMS-FROM-STREAM:  (P.C. = 117)
COMPILER:COMPILE-FROM-STREAM:  (P.C. = 237)
ZWEI:COMPILE-INTERVAL:  (P.C. = 142)
ZWEI:COMPILE-PRINT-INTERVAL:  (P.C. = 121)
ZWEI:COMPILE-DEFINITION-INTERNAL:  (P.C. = 100)
ZWEI:COM-COMPILE-REGION:  (P.C. = 5)
ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 233)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 60)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 51)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
 9-Dec-85 00:14:31-EST,4421;000000000000
Received: from MIT-DUE-PROCESS by MIT-OZ via Chaosnet; 9 Dec 85 00:14-EST
Date: Mon, 9 Dec 85 00:14 EST
From: Carl Hewitt <HEWITT@OZ.AI.MIT.EDU>
Subject: persistent problem with OUTPUT HOLD in window system
To: BUG-LISPM@OZ.AI.MIT.EDU
cc: HOSS@SCRC-STONY-BROOK.ARPA, RSL@SCRC-STONY-BROOK.ARPA
Message-ID: <"851209001402.1.hewitt@OZ"@DUE-PROCESS.AI.MIT.EDU>

In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.2,
AISite 11.3, microcode TMC5-MIC 336, FEP 127, FEP0:>v127-lisp.flod(2),
FEP0:>v127-loaders.flod(2), FEP0:>v127-debug.flod(1),
FEP0:>v127-info.flod(2), on Due Process:

I took out the customized FQUERY that I had and checked the status of
the window; nothing looked out of the ordinary.  I still get caught in
"output hold" when I try MAPOVER a HARDCOPY.  

>>Break: 
While in the function PROCESS-WAIT  (:METHOD TV:SHEET :OUTPUT-HOLD-EXCEPTION)  FQUERY

PROCESS-WAIT:
   Arg 0 (SI:WHOSTATE): "Output Hold"
   Local 0 (SI:WHOSTATE): #<BREAK 33342406>
   Arg 1 (FUNCTION): #<DTP-COMPILED-FUNCTION (:INTERNAL (:METHOD TV:SHEET :OUTPUT-HOLD-EXCEPTION) 0) 22346365>
   Local 1 (FUNCTION): #<DTP-LOCATIVE 44040401>
   Rest arg (SI:ARGUMENTS): (#<ZMAIL-TYPEOUT-WINDOW Zmail Typeout Window 7 43207475 exposed>)
   Local 2 (SI:ARGUMENTS): #<DTP-LOCATIVE 44040400>

(:METHOD TV:SHEET :OUTPUT-HOLD-EXCEPTION):  (P.C. = 101)
   Arg 0 (SELF): #<ZMAIL-TYPEOUT-WINDOW Zmail Typeout Window 7 43207475 exposed>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor TV:SHEET -- 0. IV's, 1. FL's 120146364>
   Arg 2 (SI:OPERATION): :OUTPUT-HOLD-EXCEPTION

FQUERY:  (P.C. = 347)
   Arg 0 (FORMAT:OPTIONS): (:SELECT T :BEEP T :TYPE :READLINE :CHOICES ((T "Yes") (NIL "No")))
   Arg 1: "Do you really want to ~A all ~D messages~A? "
   Rest arg: ("hardcopy" 31 "")

ZWEI:TYPEOUT-BEEP-YES-OR-NO-P:  (P.C. = 10)
   Rest arg (ZWEI:FORMAT-ARGS): ("Do you really want to ~A all ~D messages~A? " "hardcopy" 31 "")

ZWEI:CHECK-FOR-TOO-MANY-MSGS:  (P.C. = 25)
   Arg 0 (ZWEI:WHAT): "hardcopy"
   --Defaulted args:--
   Arg 1 (ZWEI:SEQUENCE): #<BABYL-BUFFER "OZ:OZ:<HEWITT>IBMPC.BABYL" 40342200>
   Arg 2 (ZWEI:EXTRA-TEXT): ""

ZWEI:COM-ZMAIL-HARDCOPY-ALL:  (P.C. = 13)

ZWEI:COM-ZMAIL-MAP-OVER:  (P.C. = 63)

ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
   Arg 0 (ZWEI:COMMAND): ZWEI:COM-ZMAIL-MAP-OVER
   Arg 1 (ZWEI:CHAR): (:MENU ("Map over" . ZWEI:COM-ZMAIL-MAP-OVER) 4 #<ZMAIL-MAIN-COMMAND-MENU-PANE Zmail Main Command Menu Pane 5 43207055 exposed>)
   --Defaulted args:--
   Arg 2 (ZWEI:PREFIX-CHAR): NIL
   Arg 3 (ZWEI:HOOK-LIST): NIL

ZWEI:ZMAIL-COMMAND-EXECUTE:  (P.C. = 6)
   Arg 0: ZWEI:COM-ZMAIL-MAP-OVER

(:INTERNAL ZWEI:ZMAIL-COMMAND-LIST 0 (:MENU)):  (P.C. = 10)
   Arg 0 (SI:**DEFSELECT-OP**): :MENU
   Arg 1 (ZWEI:ITEM): ("Map over" . ZWEI:COM-ZMAIL-MAP-OVER)
   Arg 2 (ZWEI:CH): 4
   Arg 3 (ZWEI:WINDOW): #<ZMAIL-MAIN-COMMAND-MENU-PANE Zmail Main Command Menu Pane 5 43207055 exposed>

ZWEI:ZMAIL-COMMAND-LIST:  (P.C. = 12)
   Arg 0 (SI:OPERATION): :MENU
   Rest arg (SI:SELECT-METHOD-ARGS): (("Map over" . ZWEI:COM-ZMAIL-MAP-OVER) 4 #<ZMAIL-MAIN-COMMAND-MENU-PANE Zmail Main Command Menu Pane 5 43207055 exposed>)

(:METHOD ZWEI:ZMAIL-FRAME :PROCESS-SPECIAL-COMMAND):  (P.C. = 16)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 43200325 exposed>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-FRAME -- 66. IV's, 20. FL's 146565661>
   Arg 2 (SI:OPERATION): :PROCESS-SPECIAL-COMMAND
   Rest arg (ARGS): (:MENU ("Map over" . ZWEI:COM-ZMAIL-MAP-OVER) 4 #<ZMAIL-MAIN-COMMAND-MENU-PANE Zmail Main Command Menu Pane 5 43207055 exposed>)

(:METHOD ZWEI:ZMAIL-FRAME :COMMAND-LOOP):  (P.C. = 136)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 43200325 exposed>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-FRAME -- 66. IV's, 20. FL's 146565661>
   Arg 2 (SI:OPERATION): :COMMAND-LOOP

(:METHOD ZWEI:ZMAIL-FRAME :COMBINED :COMMAND-LOOP):  (P.C. = 70)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 43200325 exposed>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-FRAME -- 66. IV's, 20. FL's 146565661>
   Arg 2 (SI:.OPERATION.): :COMMAND-LOOP
   Rest arg (SI:.DAEMON-CALLER-ARGS.): NIL

ZWEI:ZMAIL-PROCESS-TOP-LEVEL:  (P.C. = 105)
   Arg 0 (ZWEI:WINDOW): #<ZMAIL-FRAME Main Zmail Window 43200325 exposed>

SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
   --Defaulted args:--
   Arg 0 (IGNORE): NIL
 9-Dec-85 11:00:54-EST,1053;000000000000
Received: from MIT-REAGAN.ARPA by MIT-OZ via Chaosnet; 9 Dec 85 10:59-EST
Received: from SID.AI.MIT.EDU by MIT-REAGAN.ARPA via CHAOS with CHAOS-MAIL id 16933; Mon 9-Dec-85 10:59:17-EST
Date: Mon, 9 Dec 85 10:58 EST
From: David Chapman <Zvona@OZ.AI.MIT.EDU>
Subject: error in stack growing
To: BUG-LISPM@OZ.AI.MIT.EDU
Message-ID: <851209105853.1.ZVONA@SID.AI.MIT.EDU>

In Symbolics 3670 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.2,
AISite 11.3, microcode TMC5-IO4-MIC 336, FEP 127,
FEP0:>v127-lisp.flod(2), FEP0:>v127-loaders.flod(2),
FEP0:>v127-debug.flod(1), FEP0:>v127-info.flod(2), on Lisp Machine Sid Vicious:

I've no idea why this happened.  It never used to.

>>Error: Bad stack specification #<DTP-LOCATIVE 527760> passed to stack-grower.
While in the function DBG:STACK-GROWER

DBG:STACK-GROWER:  (P.C. = 72)
   Local 0 (DBG:SG): #<STACK-GROUP Lisp Listener 1 10570>
   Local 1 (DBG:STACK): #<DTP-LOCATIVE 527760>
   Local 2 (DBG:AMOUNT): #<DTP-LOCATIVE 527764>
   Local 3: (#<DTP-LOCATIVE 527760> #<DTP-LOCATIVE 527764>)
10-Dec-85 00:39:04-EST,458;000000000000
Received: from MIT-GALOIS by MIT-OZ via Chaosnet; 10 Dec 85 00:38-EST
Date: Tue, 10 Dec 85 00:38 EST
From: Harry Voorhees <HLV@OZ.AI.MIT.EDU>
Subject: Auto saving from Zmacs
To: BUG-LISPM@OZ.AI.MIT.EDU
Message-ID: <"851210003823.1.hlv@OZ"@GALOIS.AI.MIT.EDU>

How does one auto save files from Zmacs? 
Apparently no such method is documented.
I just lost 5 hours of work, which could have
been avoided using an auto save feature.

Harry Voorhees
10-Dec-85 15:12:57-EST,662;000000000000
Received: from MIT-ZERMATT.ARPA by MIT-OZ via Chaosnet; 10 Dec 85 15:12-EST
Received: from STARLING by ZERMATT via CHAOS with CHAOS-MAIL id 19316; Tue 10-Dec-85 15:10:29-EST
Date: Tue, 10 Dec 85 15:11 EST
From: Bill Long <WJL@MIT-MC.ARPA>
Subject: typecase is slooooooooooooooow
To: Bug-Lispm@MIT-ZERMATT.ARPA
Message-ID: <851210151159.3.WJL@STARLING.MIT.EDU>

In Symbolics 3640 CommonLisp in Release 6.1, IP-TCP 29.13,
6-1-Patches 1.2, MLSite 10.0, microcode TMC5-IO4-ST506-MIC 336, on Lisp Machine Starling:
(typecase x (string ..)(number ..) ..) is orders of magnitude slower than
(cond ((stringp x) ..)((numberp x) ..) ..)
How come?
-Bill Long
11-Dec-85 00:32:41-EST,352;000000000000
Mail-From: HENRY created at 11-Dec-85 00:32:32
Date: Wed, 11 Dec 1985  00:32 EST
Message-ID: <HENRY.12166163573.BABYL@MIT-OZ>
From: HENRY@MIT-OZ
To:   Harry Voorhees <HLV@MIT-OZ>
Cc:   BUG-LISPM@MIT-OZ
Subject: Auto saving from Zmacs
In-reply-to: Msg of 10 Dec 1985  00:38-EST from Harry Voorhees <HLV at OZ.AI.MIT.EDU>


<ecc.Lisp>Zwsave

13-Dec-85 12:54:23-EST,1539;000000000000
Received: from MIT-MC.ARPA by MIT-OZ via Chaosnet; 13 Dec 85 12:54-EST
Received: from MIT-REAGAN.ARPA by MIT-MC.ARPA via Chaosnet; 13 DEC 85  12:53:43 EST
Received: from SCRC-QUABBIN.ARPA by MIT-REAGAN.ARPA via INTERNET with SMTP id 17181; 13 Dec 85 12:51:26-EST
Received: from NEPONSET.SCRC.Symbolics.COM by SCRC-QUABBIN.ARPA via CHAOS with CHAOS-MAIL id 228003; Fri 13-Dec-85 12:46:00-EST
Date: Fri, 13 Dec 85 12:51 EST
From: David C. Plummer <DCP@SCRC-QUABBIN.ARPA>
Subject: Suppressing Package Prefix Printing
To: Scott McKay <SWM@SCRC-QUABBIN.ARPA>, jcma@MIT-MC.ARPA,
    BUG-LISPM@MIT-REAGAN.ARPA
In-Reply-To: <851125095642.3.SWM@THAMES.SCRC.Symbolics.COM>
Message-ID: <851213125133.2.DCP@NEPONSET.SCRC.Symbolics.COM>

    Date: Mon, 25 Nov 85 09:56 EST
    From: Scott McKay <SWM@SCRC-QUABBIN.ARPA>

	Date: Sat, 23 Nov 85 02:43 EST
	From: jcma@MIT-MC.ARPA

	In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.1,
	AISite 11.2, Experimental RELATUS 145.33, microcode TMC5-MIC 336, FEP 22, on Lisp Machine Jim Morrison:
	What is the current way this is supposed to be done?

	Letting package to NIL used work, but no longer does.

    It works for me.  When doesn't it work for you?

People are thinko-ing.  LETting PACKAGE to NIL still does and always did
>>FORCE<< the package to be printed.  That's how APROPOS always prints
the package name, remember?  I thought there was an ...INHIBIT... or
...SUPPRESS...  variable in some package that does what JCMA wants, but
I can't seem to find it.

13-Dec-85 13:22:48-EST,2730;000000000000
Received: from MIT-GOLDILOCKS.ARPA by MIT-OZ via Chaosnet; 13 Dec 85 13:22-EST
Received: from SCRC-QUABBIN.ARPA by MIT-GOLDILOCKS.ARPA via INTERNET with SMTP id 10420; 13 Dec 85 13:23:58-EST
Received: from NEPONSET.SCRC.Symbolics.COM by SCRC-QUABBIN.ARPA via CHAOS with CHAOS-MAIL id 228017; Fri 13-Dec-85 13:17:29-EST
Date: Fri, 13 Dec 85 13:22 EST
From: David C. Plummer <DCP@SCRC-QUABBIN.ARPA>
Subject: dolist and array registers
To: Scott Cyphers <SR.EHPYC@MIT-SPEECH>,
    Mike McMahon <MMcM@SCRC-STONY-BROOK.ARPA>
cc: BUG-LISPM@MIT-GOLDILOCKS.ARPA
In-Reply-To: <SR.EHPYC.12163695548.BABYL@MIT-SPEECH>
Message-ID: <851213132259.8.DCP@NEPONSET.SCRC.Symbolics.COM>

    Date: 1 Dec 1985  14:35 EST (Sun)
    From: Scott Cyphers <SR.EHPYC@MIT-SPEECH>

	Date: Friday, 29 November 1985  23:31-EST
	From: Mike McMahon <MMcM at SCRC-STONY-BROOK.ARPA>
	To:   Scott Cyphers <sr.ehpyc at SPEECH.MIT.EDU>
	cc:   BUG-LISPM at MIT-GOLDILOCKS.ARPA
	Re:   dolist and array registers
	Supersedes: <851129232924.4.MMCM@OWL.SCRC.Symbolics.COM>
	Character-Styles: (1 0 (NIL 0) (NIL :ITALIC NIL) "CPTFONTI")
	Fonts: CPTFONT, CPTFONTI

	    Date: Fri, 29 Nov 85 13:52 EST
	    From: Scott Cyphers <sr.ehpyc@SPEECH.MIT.EDU>

									     If
	    dolist expanded like this instead:
	    (defmacro dolist ((var list) &body body)
	      (let ((temp (gensym)))
	    `(do ((,temp ,list (cdr ,temp)))
		 ((null ,temp))
	       (let ((,var (car ,temp)))
		 ,@body))))

	The way I read the common lisp definition of dolist, the scope of 1var0 is
	required to be the whole iteration, not just around 1{statement}*0.  In
	particular when you specify a1 resultform0.

	It actually makes a difference if you create more than one lexical
	closure over var inside the loop.

    You have a point there.  Dolist doesn't make new environments on each
    iteration and MAPC does (in addition to allowing multi-list
    enumeration) Unfortunately, declaring things inline doesn't do
    anything right now, so MAPC has some disadvantages.  However, in
    either case, the real problem for me is that an array register
    declaration on a Common Lisp dolist iteration variable does the
    completely wrong thing.

(a) Release 7 will let you SETQ array registers.

(b) The issue about how DOLIST expands has been discussed both in
Symbolics and by the Common Lisp community.  There has been no
resolution, so you can't depend on it being freshly bound each time or
SETQ'd.  Use SCHEME.  The way to get the scope for the endform is easy:
	(let ((var nil))
	  ...endform...)
which pretty much shows how kludgy (in my opinion) the CL requirement
that the variable be bound to NIL in the endform.

13-Dec-85 13:24:32-EST,2796;000000000000
Received: from MIT-GOLDILOCKS.ARPA by MIT-OZ via Chaosnet; 13 Dec 85 13:23-EST
Received: from SCRC-QUABBIN.ARPA by MIT-GOLDILOCKS.ARPA via INTERNET with SMTP id 10421; 13 Dec 85 13:24:53-EST
Received: from NEPONSET.SCRC.Symbolics.COM by SCRC-QUABBIN.ARPA via CHAOS with CHAOS-MAIL id 228019; Fri 13-Dec-85 13:17:39-EST
Date: Fri, 13 Dec 85 13:23 EST
From: David C. Plummer <DCP@SCRC-QUABBIN.ARPA>
Subject: dolist and array registers
To: Scott Cyphers <SR.EHPYC@MIT-SPEECH.mit>,
    Mike McMahon <MMcM@SCRC-STONY-BROOK.ARPA>
cc: BUG-LISPM@MIT-GOLDILOCKS.ARPA
In-Reply-To: <SR.EHPYC.12163695548.BABYL@MIT-SPEECH>
Supersedes: <851213132259.8.DCP@NEPONSET.SCRC.Symbolics.COM>
Message-ID: <851213132313.9.DCP@NEPONSET.SCRC.Symbolics.COM>

    Date: 1 Dec 1985  14:35 EST (Sun)
    From: Scott Cyphers <SR.EHPYC@MIT-SPEECH>

	Date: Friday, 29 November 1985  23:31-EST
	From: Mike McMahon <MMcM at SCRC-STONY-BROOK.ARPA>
	To:   Scott Cyphers <sr.ehpyc at SPEECH.MIT.EDU>
	cc:   BUG-LISPM at MIT-GOLDILOCKS.ARPA
	Re:   dolist and array registers
	Supersedes: <851129232924.4.MMCM@OWL.SCRC.Symbolics.COM>
	Character-Styles: (1 0 (NIL 0) (NIL :ITALIC NIL) "CPTFONTI")
	Fonts: CPTFONT, CPTFONTI

	    Date: Fri, 29 Nov 85 13:52 EST
	    From: Scott Cyphers <sr.ehpyc@SPEECH.MIT.EDU>

									     If
	    dolist expanded like this instead:
	    (defmacro dolist ((var list) &body body)
	      (let ((temp (gensym)))
	    `(do ((,temp ,list (cdr ,temp)))
		 ((null ,temp))
	       (let ((,var (car ,temp)))
		 ,@body))))

	The way I read the common lisp definition of dolist, the scope of 1var0 is
	required to be the whole iteration, not just around 1{statement}*0.  In
	particular when you specify a1 resultform0.

	It actually makes a difference if you create more than one lexical
	closure over var inside the loop.

    You have a point there.  Dolist doesn't make new environments on each
    iteration and MAPC does (in addition to allowing multi-list
    enumeration) Unfortunately, declaring things inline doesn't do
    anything right now, so MAPC has some disadvantages.  However, in
    either case, the real problem for me is that an array register
    declaration on a Common Lisp dolist iteration variable does the
    completely wrong thing.

(a) Release 7 will let you SETQ array registers.

(b) The issue about how DOLIST expands has been discussed both in
Symbolics and by the Common Lisp community.  There has been no
resolution, so you can't depend on it being freshly bound each time or
SETQ'd.  Use SCHEME.  The way to get the scope for the endform is easy:
	(let ((var nil))
	  ...endform...)
which pretty much shows how kludgy (in my opinion) the CL requirement
that the variable be bound to NIL in the endform.

13-Dec-85 14:04:53-EST,905;000000000000
Received: from MIT-MC.ARPA by MIT-OZ via Chaosnet; 13 Dec 85 14:04-EST
Date: Fri, 13 Dec 85 14:08:47 EST
From: Bill Long <WJL@MIT-MC.ARPA>
To: BUG-LISPM@MIT-MC.ARPA
Message-ID: <[MIT-MC.ARPA].752745.851213.WJL>

Dear Sirs:
	To clarify for David Plummer what I meant by typecase being
slow, consider the following dribble IN THE COMMON-LISP WINDOW IN 6.1:
(defun tc (x)(typecase x (symbol 'symbol)(number 'number)(t t)))
TC
(defun cd (x)(cond ((symbolp x) 'symbol)((numberp x) 'number)(t t)))
CD
(defun test-tc (n)(loop with start = (get-internal-run-time) for m from 1 to n do (tc m)
  finally (return (- (get-internal-run-time) start))))
TEST-TC
(defun test-cd (n)(loop with start = (get-internal-run-time) for m from 1 to n do (cd m)
  finally (return (- (get-internal-run-time) start))))
TEST-CD
(test-cd 100)
170
(test-tc 100)
3670

Seems to me that 20:1 is slow.
-Bill Long
13-Dec-85 14:26:25-EST,436;000000000000
Received: from MIT-ZERMATT.ARPA by MIT-OZ via Chaosnet; 13 Dec 85 14:26-EST
Received: from MIT-MC by ZERMATT via CHAOS with CHAOS-MAIL id 19544; Fri 13-Dec-85 14:27:51-EST
Date: Fri, 13 Dec 85 14:30:29 EST
From: "Glenn S. Burke" <GSB@MIT-MC.ARPA>
Subject:  what, pray tell,
To: dcp@SCRC-QUABBIN.ARPA
cc: bug-lispm@MIT-ZERMATT.ARPA
Message-ID: <[MIT-MC.ARPA].752827.851213.GSB>

does the header line "Disposition: FLAKE" mean?
14-Dec-85 06:32:06-EST,2135;000000000000
Mail-From: SAZ created at 14-Dec-85 06:30:41
Date: Sat 14 Dec 85 06:30:41-EST
From: "David M. J. Saslav" <SAZ@MIT-OZ>
Subject: Olympic Commercial
To: winter-babies@MIT-OZ
cc: saz@MIT-OZ
Message-ID: <12167015206.28.SAZ@MIT-OZ>

(exciting music in background.  Announcer's voice speaks)

The event: THE SECOND ANNUAL AI LAB OLYMPIC GAMES (Anita Flynn, Director)

The time:  January, IAP 1986

The place: The AI Lab at Tech Square

The sports: Golf (indoor)
	    Running (a marathon road-race)
	    Swimming 
	    Ice Hockey 
	    Basketball
	    Indoor Soccer
	    Ping Pong
	    Volleyball
	    Water Polo
	    Skiing (not really a sport - a day trip after the closing 
	            ceremonies)
	    Trivial Pursuit (yes, a new addition -- for the CEREBRAL 
		             SPORTSTERS!)

The Team Destined to Win:  The WINTERIZERS

The Team Members: YOU!!

(music swells, announcer continues)

Yes, YOU are the contestants eligible to help our team, which is
comprised of those people with OZ accounts of some kind who were born
in a Winter month.  Our rivals will be the Fall-Babies, the
Spring-Babies, and the hated Summer-Babies.  All you need to do to be
considered on the team is respond to this message.  Our team is going
all the way to the top in this, but only if YOU PLAY.  I need to know
WHICH sports you will be interested in playing.  I need to know WHEN
in January you will be around (there is a schedule all made up for
those who need to see one), and I need to know NOW!!!

The more the merrier!  GREAT FUN FOR ALL!  Fierce COMPETITION!
SPORTSMANSHIP!  AMATEURISM!  What a CHANCE to MEET NEW PEOPLE!  WHAT A
TIME TO BE ALIVE!

Please respond to this message today, by telling me, David Saslav,
YOUR CAPTAIN, which of the above events I may put you down for.  I
will also add your name to the mailing list, WINTER-TEAM, aka
WINTERIZERS, and you will be kept up to date on last minute schedule
changes, et al.  (Feel free to add your name to the above list, in any
event!)

(music fades, lights dim, announcer bids farewell in faint voice:)

Dave Saslav
-------
15-Dec-85 14:22:29-EST,10440;000000000000
Received: from MIT-GOLDILOCKS.ARPA by MIT-OZ via Chaosnet; 15 Dec 85 14:22-EST
Received: from YOGI.MIT.EDU by MIT-GOLDILOCKS.ARPA via CHAOS with CHAOS-MAIL id 10430; Sun 15-Dec-85 14:23:41-EST
Date: Sun, 15 Dec 85 14:22 EST
From: Scott Cyphers <sr.ehpyc@SPEECH.MIT.EDU>
Subject: Direct file access doesn't work
To: BUG-LISPM@MIT-GOLDILOCKS.ARPA
Message-ID: <851215142234.1.CYPHER@YOGI.MIT.EDU>

In Symbolics 3670 Release 6.1, IP-TCP 29.13,
Experimental Spire-Macros 7.1, Attribute 5.14, Experimental Compute 6.1,
Audio 4.1, Speech-Attributes 4.8, Display 6.23, Speech-Layouts 6.4,
Prtout 4.5, Experimental Versatec 6.0, Spire 16.0, Experimental Zoo 8.1,
microcode TMC5-IO4-FPA-COLOR-MIC 336, on Lisp Machine Yogi:

Running this function hangs in chaos in.  I really need this to work
now, not next week or month or in release 7.

(defun test ()
  (with-open-file (stream "goldy:>cypher>test"
			  :direction :output
			  :characters nil
			  :byte-size 16.)
    (send stream :tyo 0)
    (send stream :tyo 1)
    (send stream :tyo 2))
  (with-open-file (stream "Goldy:>cypher>test"
			  :direction :input
			  :characters nil
			  :byte-size 16.
			  :direct t)
    (send stream :read-bytes 1 0)
    (print (send stream :tyi))
    (send stream :tyi)))

>>Break: 
While in the function PROCESS-WAIT  CHAOS:GET-NEXT-PKT  (:METHOD CHAOS:BASIC-INPUT-STREAM :GET-NEXT-INPUT-PKT)

PROCESS-WAIT:
   Arg 0 (SI:WHOSTATE): #"Chaos In"
   Local 0 (SI:WHOSTATE): #<BREAK 26126406>
   Arg 1 (FUNCTION): #<DTP-COMPILED-FUNCTION (:INTERNAL CHAOS:GET-NEXT-PKT 0) 11555230>
   Local 1 (FUNCTION): #<DTP-LOCATIVE 74500670>
   Rest arg (SI:ARGUMENTS): (#<CHAOS Connection for NFD4614 to GOLDY 145132602> #<DTP-LOCATIVE 21016565>)
   Local 2 (SI:ARGUMENTS): #<DTP-LOCATIVE 74500667>

CHAOS:GET-NEXT-PKT:  (P.C. = 174)
   Arg 0 (CHAOS:CONN): #<CHAOS Connection for NFD4614 to GOLDY 145132602>
   Arg 1 (CHAOS:NO-HANG-P): NIL
   Arg 2 (CHAOS:STREAM): #<CHAOS-TOKEN-LIST-STREAM 21016552>

(:METHOD CHAOS:BASIC-INPUT-STREAM :GET-NEXT-INPUT-PKT):  (P.C. = 60)
   Arg 0 (SELF): #<CHAOS-TOKEN-LIST-STREAM 21016552>
   Arg 1 (ZETALISP-SYSTEM:SELF-MAPPING-TABLE): #<Map to flavor CHAOS:BASIC-INPUT-STREAM -- 2. IV's, 0. FL's 121170551>
   Arg 2 (SI:OPERATION): :GET-NEXT-INPUT-PKT
   Arg 3 (CHAOS:NO-HANG-P): NIL

(:METHOD CHAOS:CHARACTER-INPUT-STREAM-MIXIN :NEXT-INPUT-BUFFER):  (P.C. = 6)
   Arg 0 (SELF): #<CHAOS-TOKEN-LIST-STREAM 21016552>
   Arg 1 (ZETALISP-SYSTEM:SELF-MAPPING-TABLE): #<Map to flavor CHAOS:CHARACTER-INPUT-STREAM-MIXIN -- 1. IV's, 0. FL's 121170573>
   Arg 2 (SI:OPERATION): :NEXT-INPUT-BUFFER
   Arg 3 (CHAOS:NO-HANG-P): NIL

(:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :SETUP-NEXT-INPUT-BUFFER):  (P.C. = 12)
   Arg 0 (SELF): #<CHAOS-TOKEN-LIST-STREAM 21016552>
   Arg 1 (ZETALISP-SYSTEM:SELF-MAPPING-TABLE): #<Map to flavor SI:BASIC-BUFFERED-INPUT-STREAM -- 3. IV's, 0. FL's 121170531>
   Arg 2 (SI:OPERATION): :SETUP-NEXT-INPUT-BUFFER
   Arg 3 (SI:NO-HANG-P): NIL
   Arg 4 (SI:EOF): #"Unexpected eof"

(:METHOD CHAOS:CHARACTER-STREAM :COMBINED :SETUP-NEXT-INPUT-BUFFER):  (P.C. = 11)
   Arg 0 (SELF): #<CHAOS-TOKEN-LIST-STREAM 21016552>
   Arg 1 (ZETALISP-SYSTEM:SELF-MAPPING-TABLE): #<Map to flavor CHAOS:CHARACTER-STREAM -- 3. IV's, 9. FL's 121170512>
   Arg 2 (SI:.OPERATION.): :SETUP-NEXT-INPUT-BUFFER
   Rest arg (SI:.DAEMON-CALLER-ARGS.): (NIL #"Unexpected eof")

(:METHOD SI:BUFFERED-INPUT-STREAM :READ-INPUT-BUFFER):  (P.C. = 20)
   Arg 0 (SELF): #<CHAOS-TOKEN-LIST-STREAM 21016552>
   Arg 1 (ZETALISP-SYSTEM:SELF-MAPPING-TABLE): #<Map to flavor SI:BUFFERED-INPUT-STREAM -- 3. IV's, 0. FL's 121167443>
   Arg 2 (SI:OPERATION): :READ-INPUT-BUFFER
   Arg 3 (SI:EOF): #"Unexpected eof"
   Arg 4 (SI:NO-HANG-P): NIL

(:METHOD NETI:TOKEN-LIST-STREAM :NEXT-INPUT-DATA-TOKEN):  (P.C. = 6)
   Arg 0 (SELF): #<CHAOS-TOKEN-LIST-STREAM 21016552>
   Arg 1 (ZETALISP-SYSTEM:SELF-MAPPING-TABLE): #<Map to flavor NETI:TOKEN-LIST-STREAM -- 7. IV's, 0. FL's 121170502>
   Arg 2 (SI:OPERATION): :NEXT-INPUT-DATA-TOKEN
   Arg 3 (NETI:NO-HANG-P): NIL

(:METHOD NETI:TOKEN-INPUT-DATA-STREAM :NEXT-INPUT-BUFFER):  (P.C. = 25)
   Arg 0 (SELF): #<TOKEN-LIST-BIDIRECTIONAL-DATA-STREAM 21016600>
   Arg 1 (ZETALISP-SYSTEM:SELF-MAPPING-TABLE): #<Map to flavor NETI:TOKEN-INPUT-DATA-STREAM -- 6. IV's, 3. FL's 120451277>
   Arg 2 (SI:OPERATION): :NEXT-INPUT-BUFFER
   Arg 3 (NETI:NO-HANG-P): NIL

(:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :SETUP-NEXT-INPUT-BUFFER):  (P.C. = 12)
   Arg 0 (SELF): #<TOKEN-LIST-BIDIRECTIONAL-DATA-STREAM 21016600>
   Arg 1 (ZETALISP-SYSTEM:SELF-MAPPING-TABLE): #<Map to flavor SI:BASIC-BUFFERED-INPUT-STREAM -- 3. IV's, 0. FL's 120451327>
   Arg 2 (SI:OPERATION): :SETUP-NEXT-INPUT-BUFFER
   Arg 3 (SI:NO-HANG-P): NIL
   Arg 4 (SI:EOF): NIL

(:METHOD NETI:TOKEN-LIST-BIDIRECTIONAL-DATA-STREAM :COMBINED :SETUP-NEXT-INPUT-BUFFER):  (P.C. = 11)  (from SYS: PATCH; SYSTEM-271-102)
   Arg 0 (SELF): #<TOKEN-LIST-BIDIRECTIONAL-DATA-STREAM 21016600>
   Arg 1 (ZETALISP-SYSTEM:SELF-MAPPING-TABLE): #<Map to flavor NETI:TOKEN-LIST-BIDIRECTIONAL-DATA-STREAM -- 1. IV's, 6. FL's 120451256>
   Arg 2 (SI:.OPERATION.): :SETUP-NEXT-INPUT-BUFFER
   Rest arg (SI:.DAEMON-CALLER-ARGS.): (NIL NIL)

(:METHOD SI:BUFFERED-INPUT-STREAM :STRING-IN):  (P.C. = 33)
   Arg 0 (SELF): #<TOKEN-LIST-BIDIRECTIONAL-DATA-STREAM 21016600>
   Arg 1 (ZETALISP-SYSTEM:SELF-MAPPING-TABLE): #<Map to flavor SI:BUFFERED-INPUT-STREAM -- 3. IV's, 0. FL's 120451110>
   Arg 2 (SI:OPERATION): :STRING-IN
   Arg 3 (SI:EOF): NIL
   Arg 4 (ZL:STRING): #<ART-8B-488 146677215>
   Arg 5 (SI:START): 0
   Arg 6 (SI:END): 488

(:METHOD FS:NFILE-INPUT-STREAM-MIXIN :READ-DATA-STREAM):  (P.C. = 60)
   Arg 0 (SELF): #<NFILE-INPUT-DIRECT-WIDE-BINARY-STREAM #"GOLDY:>cypher>test.lisp" 17540000>
   Arg 1 (ZETALISP-SYSTEM:SELF-MAPPING-TABLE): #<Map to flavor FS:NFILE-INPUT-STREAM-MIXIN -- 4. IV's, 2. FL's 1401623>
   Arg 2 (SI:OPERATION): :READ-DATA-STREAM
   Arg 3 (FS:MESSAGE): :STRING-IN
   Rest arg (ZL:ARGS): (NIL #<ART-8B-488 146677215> 0 488)

(:METHOD FS:NFILE-WIDE-BINARY-INPUT-MIXIN :NEXT-INPUT-BUFFER):  (P.C. = 35)
   Arg 0 (SELF): #<NFILE-INPUT-DIRECT-WIDE-BINARY-STREAM #"GOLDY:>cypher>test.lisp" 17540000>
   Arg 1 (ZETALISP-SYSTEM:SELF-MAPPING-TABLE): #<Map to flavor FS:NFILE-WIDE-BINARY-INPUT-MIXIN -- 4. IV's, 1. FL's 1401564>
   Arg 2 (SI:OPERATION): :NEXT-INPUT-BUFFER
   Arg 3 (FS:NO-HANG-P): NIL

(:INTERNAL (:METHOD FS:NFILE-INPUT-DIRECT-WIDE-BINARY-STREAM :COMBINED :NEXT-INPUT-BUFFER) 0):  (P.C. = 11)
   Arg 0 (SELF): #<NFILE-INPUT-DIRECT-WIDE-BINARY-STREAM #"GOLDY:>cypher>test.lisp" 17540000>
   Arg 1 (ZETALISP-SYSTEM:SELF-MAPPING-TABLE): #<Map to flavor FS:NFILE-INPUT-DIRECT-WIDE-BINARY-STREAM -- 1. IV's, 7. FL's 1402451>
   Arg 2 (SI:.OPERATION.): :NEXT-INPUT-BUFFER
   Rest arg (SI:.DAEMON-CALLER-ARGS.): (NIL)

(:METHOD SI:DIRECT-ACCESS-BUFFERED-INPUT-STREAM-MIXIN :WHOPPER :NEXT-INPUT-BUFFER):  (P.C. = 37)
   Arg 0 (SELF): #<NFILE-INPUT-DIRECT-WIDE-BINARY-STREAM #"GOLDY:>cypher>test.lisp" 17540000>
   Arg 1 (ZETALISP-SYSTEM:SELF-MAPPING-TABLE): #<Map to flavor SI:DIRECT-ACCESS-BUFFERED-INPUT-STREAM-MIXIN -- 4. IV's, 0. FL's 1401556>
   Arg 2 (SI:.WHOPPER-CONTINUATION.): #<DTP-COMPILED-FUNCTION (:INTERNAL (:METHOD FS:NFILE-INPUT-DIRECT-WIDE-BINARY-STREAM :COMBINED :NEXT-INPUT-BUFFER) 0) 67633275>
   Arg 3 (SI:.OLD-SELF-MAPPING-TABLE.): #<Map to flavor FS:NFILE-INPUT-DIRECT-WIDE-BINARY-STREAM -- 1. IV's, 7. FL's 1402451>
   Arg 4 (SI:.OPERATION.): :NEXT-INPUT-BUFFER
   Arg 5 (SI:NO-HANG-P): NIL

(:METHOD FS:NFILE-INPUT-DIRECT-WIDE-BINARY-STREAM :COMBINED :NEXT-INPUT-BUFFER):  (P.C. = 13)
   Arg 0 (SELF): #<NFILE-INPUT-DIRECT-WIDE-BINARY-STREAM #"GOLDY:>cypher>test.lisp" 17540000>
   Arg 1 (ZETALISP-SYSTEM:SELF-MAPPING-TABLE): #<Map to flavor FS:NFILE-INPUT-DIRECT-WIDE-BINARY-STREAM -- 1. IV's, 7. FL's 1402451>
   Arg 2 (SI:.OPERATION.): :NEXT-INPUT-BUFFER
   Rest arg (SI:.DAEMON-CALLER-ARGS.): (NIL)

(:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :SETUP-NEXT-INPUT-BUFFER):  (P.C. = 12)
   Arg 0 (SELF): #<NFILE-INPUT-DIRECT-WIDE-BINARY-STREAM #"GOLDY:>cypher>test.lisp" 17540000>
   Arg 1 (ZETALISP-SYSTEM:SELF-MAPPING-TABLE): #<Map to flavor SI:BASIC-BUFFERED-INPUT-STREAM -- 3. IV's, 0. FL's 1401610>
   Arg 2 (SI:OPERATION): :SETUP-NEXT-INPUT-BUFFER
   Arg 3 (SI:NO-HANG-P): NIL
   Arg 4 (SI:EOF): NIL

(:METHOD FS:NFILE-INPUT-DIRECT-BINARY-STREAM :COMBINED :SETUP-NEXT-INPUT-BUFFER):  (P.C. = 11)
   Arg 0 (SELF): #<NFILE-INPUT-DIRECT-WIDE-BINARY-STREAM #"GOLDY:>cypher>test.lisp" 17540000>
   Arg 1 (ZETALISP-SYSTEM:SELF-MAPPING-TABLE): #<Map to flavor FS:NFILE-INPUT-DIRECT-BINARY-STREAM -- 4. IV's, 10. FL's 1402465>
   Arg 2 (SI:.OPERATION.): :SETUP-NEXT-INPUT-BUFFER
   Rest arg (SI:.DAEMON-CALLER-ARGS.): (NIL NIL)

(:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :TYI):  (P.C. = 15)
   Arg 0 (SELF): #<NFILE-INPUT-DIRECT-WIDE-BINARY-STREAM #"GOLDY:>cypher>test.lisp" 17540000>
   Arg 1 (ZETALISP-SYSTEM:SELF-MAPPING-TABLE): #<Map to flavor SI:BASIC-BUFFERED-INPUT-STREAM -- 3. IV's, 0. FL's 1401610>
   Arg 2 (SI:OPERATION): :TYI
   --Defaulted args:--
   Arg 3 (SI:EOF): NIL

TEST:  (P.C. = 61)  (from GOLDY:>s>data-base>addresses)

SI:*EVAL:  (P.C. = 401)
   Arg 0 (SI:FORM): (TEST)
   Local 0 (SI:FORM): NIL
   --Defaulted args:--
   Arg 1 (SI:ENV): NIL
   Arg 2 (SI:HOOK): NIL

(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0):  (P.C. = 152)
   Arg 0 (COMPILER:.LEXICAL-ENVIRONMENT-POINTER.): #<DTP-LOCATIVE 74500101>

TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
   Arg 0 (TV:NEW-MODE): :BLAST
   Arg 1 (TV:STREAM): #:TERMINAL-IO-SYN-STREAM
   Arg 2 (TV:CONTINUATION): #<LEXICAL-CLOSURE (:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0) 74500106>

SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
   Arg 0 (SI:NAME): #"Common Lisp Top Level"
   Arg 1 (SI:ABORT-FUNCTION): NIL
   Arg 2 (SI:READ-FUNCTION): NIL
   Arg 3 (SI:EVAL-FUNCTION): NIL
   Arg 4 (SI:PRINT-FUNCTION): NIL

SI:LISP-COMMAND-LOOP:  (P.C. = 67)
   Arg 0: #<COMMON-LISP-LISTENER Common Lisp Listener 1 1501575 exposed>
   Rest arg: (:NAME #"Common Lisp Top Level")

SI:COMMON-LISP-TOP-LEVEL:  (P.C. = 46)
   Arg 0 (SI:WINDOW): #<COMMON-LISP-LISTENER Common Lisp Listener 1 1501575 exposed>

SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
   --Defaulted args:--
   Arg 0 (IGNORE): NIL
15-Dec-85 19:08:41-EST,1599;000000000000
Received: from MIT-GOLDILOCKS.ARPA by MIT-OZ via Chaosnet; 15 Dec 85 19:08-EST
Received: from YOGI.MIT.EDU by MIT-GOLDILOCKS.ARPA via CHAOS with CHAOS-MAIL id 10431; Sun 15-Dec-85 19:10:05-EST
Date: Sun, 15 Dec 85 19:09 EST
From: Scott Cyphers <sr.ehpyc@SPEECH.MIT.EDU>
Subject: Direct file access doesn't work
To: BUG-LISPM@MIT-GOLDILOCKS.ARPA
In-Reply-To: <851215142234.1.CYPHER@YOGI.MIT.EDU>
Message-ID: <851215190923.6.CYPHER@YOGI.MIT.EDU>

After grunging around through the code, I found that the problem was
caused by :NEXT-INPUT-BUFFER expecting an EOF at the end of things which
isn't there for direct files.  The following patches the problem,
although I think it's kind of a dirty way to fix it.

fs:
(DEFMETHOD (NFILE-input-direct-WIDE-BINARY-stream :NEXT-INPUT-BUFFER) (&OPTIONAL NO-HANG-P)
  (NFILE-STREAM-CHECK-STATE :NEXT-INPUT-BUFFER :OPEN :EOF)	;don't array-leader NIL....
  (WHEN BUFFER-GIVEN
    (FERROR "I gave you ~S, but yet, you have asked for another input buffer." BUFFER-GIVEN))
  (LET ((HOW-MANY-8S (SEND SELF ':READ-DATA-STREAM
			   ':STRING-IN NIL
			   (ARRAY-LEADER INPUT-BUFFER 1)
			   0 (* 2 (min (ARRAY-LENGTH INPUT-BUFFER)
				       si:remaining-requested-count)))))
    (WHEN (ODDP HOW-MANY-8S)
      (FERROR "Stream ~S was supposed to be reading an even number of bytes, but read ~
	      an odd number." (DATA-CHAN-NET-DATA-STREAM INPUT-DATA-CHANNEL)))
    (COND ((PLUSP HOW-MANY-8S)
	   (VALUES (SETQ BUFFER-GIVEN INPUT-BUFFER) 0 (// HOW-MANY-8S 2)))
	  (NO-HANG-P NIL)
	  (T (SETQ STATUS ':EOF)
	     (VALUES NIL NIL)))))

16-Dec-85 12:13:12-EST,1447;000000000000
Received: from MIT-ZERMATT.ARPA by MIT-OZ via Chaosnet; 16 Dec 85 12:10-EST
Received: from SCRC-QUABBIN.MIT.EDU by ZERMATT.MIT.EDU via INTERNET with SMTP id 19878; 16 Dec 85 12:10:32-EST
Received: from NEPONSET.SCRC.Symbolics.COM by SCRC-QUABBIN.ARPA via CHAOS with CHAOS-MAIL id 228578; Mon 16-Dec-85 12:05:23-EST
Date: Mon, 16 Dec 85 12:11 EST
From: David C. Plummer <DCP@SCRC-QUABBIN.ARPA>
Subject: what, pray tell,
To: Glenn S. Burke <GSB@MIT-MC.ARPA>, dcp@SCRC-QUABBIN.ARPA
cc: bug-lispm@MIT-ZERMATT.ARPA
In-Reply-To: <[MIT-MC.ARPA].752827.851213.GSB>
Message-ID: <851216121147.2.DCP@NEPONSET.SCRC.Symbolics.COM>

    Date: Fri, 13 Dec 85 14:30:29 EST
    From: "Glenn S. Burke" <GSB@MIT-MC.ARPA>

    does the header line "Disposition: FLAKE" mean?

On the one extreme, it means a power glitch happened or a network was
flakey or something else unreproducible and completely beyond our
control.  In the middle it can mean the user's environment was damaged
and happened to give the answer he got, but the standard system
consistently gives the correct answer.  At the other extreme it can mean
user confusion or not enough information given.

In this case, I have never seen (a correct) TYPECASE an order of
magnitude slower than the equivalent COND.  When people are talking
about orders of magnitude of speed, I have to assume this was all done
compiled, but that may have been a faulty assumption on my part.

16-Dec-85 18:13:57-EST,1468;000000000000
Received: from MIT-MC.ARPA by MIT-OZ via Chaosnet; 16 Dec 85 18:06-EST
Received: from SCRC-STONY-BROOK.ARPA by MIT-MC.ARPA 16 Dec 85 18:08:40 EST
Received: from NEPONSET.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 375392; Mon 16-Dec-85 16:10:55-EST
Date: Mon, 16 Dec 85 16:12 EST
From: David C. Plummer <DCP@SCRC-QUABBIN.ARPA>
Subject: Please don't complain about speed if your code is interpreted.
To: Bill Long <WJL@MIT-MC.ARPA>, BUG-LISPM@MIT-MC.ARPA
In-Reply-To: <[MIT-MC.ARPA].752745.851213.WJL>
Message-ID: <851216161204.1.DCP@NEPONSET.SCRC.Symbolics.COM>

    Date: Fri, 13 Dec 85 14:08:47 EST
    From: Bill Long <WJL@MIT-MC.ARPA>

    Dear Sirs:
	    To clarify for David Plummer what I meant by typecase being
    slow, consider the following dribble IN THE COMMON-LISP WINDOW IN 6.1:
    (defun tc (x)(typecase x (symbol 'symbol)(number 'number)(t t)))
    TC
    (defun cd (x)(cond ((symbolp x) 'symbol)((numberp x) 'number)(t t)))
    CD
    (defun test-tc (n)(loop with start = (get-internal-run-time) for m from 1 to n do (tc m)
      finally (return (- (get-internal-run-time) start))))
    TEST-TC
    (defun test-cd (n)(loop with start = (get-internal-run-time) for m from 1 to n do (cd m)
      finally (return (- (get-internal-run-time) start))))
    TEST-CD
    (test-cd 100)
    170
    (test-tc 100)
    3670

    Seems to me that 20:1 is slow.
    -Bill Long

Use the compiler.

17-Dec-85 03:56:10-EST,4787;000000000000
Received: from MIT-APIARY-3 by MIT-OZ via Chaosnet; 17 Dec 85 03:56-EST
Date: Tue, 17 Dec 85 03:56 EST
From: Leonard N. Foner <Foner@OZ.AI.MIT.EDU>
Subject: Can't seem to change my entry in the namespace database
To: BUG-LISPM@OZ.AI.MIT.EDU
Message-ID: <851217035622.1.FONER@APIARY-3.AI.MIT.EDU>

In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.2,
AISite 11.4, microcode TMC5-MIC 336, FEP 127, FEP0:>v127-lisp.flod(2),
FEP0:>v127-loaders.flod(2), FEP0:>v127-debug.flod(1),
FEP0:>v127-info.flod(2), Logical Pathname Completion patch,
Apiary released 6 September 1985, on Lisp Machine Apiary-3:

I clicked on Save in the Namespace Editor, and got the following.  Whatsup doc?

>>Error: Error from Namespace Lock REAGAN: The host named "OZ" was not found.
         No host with that name is already known by the local machine,
         and no namespace server was contacted because validity checking is inhibited.
While in the function (:METHOD NETI:LISPM-NAMESPACE-ACCESS-PATH :UPDATE-OBJECT)  (:INTERNAL (:METHOD NETI:LISPM-NAMESPACE-ACCESS-PATH :COMBINED :UPDATE-OBJECT) 0)  (:METHOD NETI:NAMESPACE-ACCESS-PATH :WHOPPER :UPDATE-OBJECT)

(:METHOD NETI:LISPM-NAMESPACE-ACCESS-PATH :UPDATE-OBJECT):  (P.C. = 71)
   Arg 0 (SELF): #<LISPM-NAMESPACE-ACCESS-PATH Namespace Lock REAGAN 35125711>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor NETI:LISPM-NAMESPACE-ACCESS-PATH -- 3. IV's, 1. FL's 121260624>
   Arg 2 (SI:OPERATION): :UPDATE-OBJECT
   Arg 3 (NETI:NAMESPACE): #<NAMESPACE MIT 1200357>
   Arg 4 (NET:OBJECT): #<USER FONER 1211563>
   Arg 5 (NETI:ON-BEHALF-OF): "Foner"
   Local 6: #<NAMESPACE MIT 1200357>
   Local 7 (NETI:RECORD): (("ERROR" "The host named /"OZ/" was not found.
No host with that name is already known by the local machine,
and no namespace server was contacted because validity checking is inhibited."))
   Local 8 (SI:*SELECTQ-ITEM*): "ERROR"

(:INTERNAL (:METHOD NETI:LISPM-NAMESPACE-ACCESS-PATH :COMBINED :UPDATE-OBJECT) 0):  (P.C. = 10)
   Arg 0 (SELF): #<LISPM-NAMESPACE-ACCESS-PATH Namespace Lock REAGAN 35125711>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor NETI:LISPM-NAMESPACE-ACCESS-PATH -- 3. IV's, 1. FL's 121260624>
   Arg 2 (SI:.OPERATION.): :UPDATE-OBJECT
   Rest arg (SI:.DAEMON-CALLER-ARGS.): (#<NAMESPACE MIT 1200357> #<USER FONER 1211563> "Foner")

(:METHOD NETI:NAMESPACE-ACCESS-PATH :WHOPPER :UPDATE-OBJECT):  (P.C. = 42)
   Arg 0 (SELF): #<LISPM-NAMESPACE-ACCESS-PATH Namespace Lock REAGAN 35125711>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor NETI:NAMESPACE-ACCESS-PATH -- 3. IV's, 0. FL's 121260633>
   Arg 2 (SI:.WHOPPER-CONTINUATION.): #<DTP-COMPILED-FUNCTION (:INTERNAL (:METHOD NETI:LISPM-NAMESPACE-ACCESS-PATH :COMBINED :UPDATE-OBJECT) 0) 22077754>
   Arg 3 (SI:.OLD-SELF-MAPPING-TABLE.): #<Map to flavor NETI:LISPM-NAMESPACE-ACCESS-PATH -- 3. IV's, 1. FL's 121260624>
   Arg 4 (SI:.OPERATION.): :UPDATE-OBJECT
   Arg 5 (NETI:NAMESPACE): #<NAMESPACE MIT 1200357>
   Arg 6 (NET:OBJECT): #<USER FONER 1211563>
   Arg 7 (NETI:ON-BEHALF-OF): "Foner"

(:METHOD NETI:LISPM-NAMESPACE-ACCESS-PATH :COMBINED :UPDATE-OBJECT):  (P.C. = 13)
   Arg 0 (SELF): #<LISPM-NAMESPACE-ACCESS-PATH Namespace Lock REAGAN 35125711>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor NETI:LISPM-NAMESPACE-ACCESS-PATH -- 3. IV's, 1. FL's 121260624>
   Arg 2 (SI:.OPERATION.): :UPDATE-OBJECT
   Rest arg (SI:.DAEMON-CALLER-ARGS.): (#<NAMESPACE MIT 1200357> #<USER FONER 1211563> "Foner")

NETI:UPDATE-OBJECT-THROUGH-NETWORK:  (P.C. = 55)
   Arg 0 (NETI:NAMESPACE): #<NAMESPACE MIT 1200357>
   Arg 1 (NET:OBJECT): #<USER FONER 1211563>

NET:UPDATE-OBJECT-PERMANENTLY:  (P.C. = 34)
   Arg 0 (NETI:CLASS): :USER
   Arg 1 (NETI:NAMESPACE): #<NAMESPACE MIT 1200357>
   Arg 2 (NETI:NAME): #<NAME MIT|FONER 1211553>
   Arg 3 (NETI:PROPERTY-LIST): (:PERSONAL-NAME "Leonard N. Foner" :LISPM-NAME "Foner" :HOME-HOST #<TOPS20-HOST OZ 1200502> :MAIL-ADDRESS ("Foner" #<TOPS20-HOST OZ 1200502>) :LOGIN-NAME (("Foner" #<TOPS20-HOST OZ 1200502>)) ...)
   Arg 4 (NETI:DONT-UPDATE-FILES): NIL

(:DEFUN-METHOD NETI:PERFORM-COMMAND):  (P.C. = 445)
   Arg 0 (SELF): #<NAMESPACE-EDITOR-FRAME Namespace Editor 1 6202437 exposed>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor NETI:NAMESPACE-EDITOR-FRAME -- 15. IV's, 13. FL's 147165132>
   Arg 2 (NETI:CH): 115
   Local 2 (NETI:CH): 83

(:METHOD NETI:NAMESPACE-EDITOR-FRAME :TOP-LEVEL):  (P.C. = 121)
   Arg 0 (SELF): #<NAMESPACE-EDITOR-FRAME Namespace Editor 1 6202437 exposed>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor NETI:NAMESPACE-EDITOR-FRAME -- 15. IV's, 13. FL's 147165132>
   Arg 2 (SI:OPERATION): :TOP-LEVEL

Rest of stack:
NETI:START-NAMESPACE-EDITOR:  (P.C. = 4)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
17-Dec-85 04:19:08-EST,920;000000000000
Received: from MIT-MC.ARPA by MIT-OZ via Chaosnet; 17 Dec 85 04:19-EST
Date: Tue, 17 Dec 85 04:21:35 EST
From: David Vinayak Wallace <GUMBY@MIT-MC.ARPA>
Subject:  namespace, mailer
To: Foner@MIT-OZ
cc: BUG-LISPM@MIT-OZ
Message-ID: <[MIT-MC.ARPA].757529.851217.GUMBY>

I don't see what's so strange about that; there's no host OZ in
the MIT namespace.

Perhaps it shouldn't end up in the debugger, though.

What's bogus is these headers:

    Received: from MIT-OZ by MIT-MC.ARPA via Chaosnet; 17 DEC 85  03:59:02 EST
    Received: from MIT-APIARY-3 by MIT-OZ via Chaosnet; 17 Dec 85 03:56-EST
    Date: Tue, 17 Dec 85 03:56 EST
    From: Leonard N. Foner <Foner@OZ.AI.MIT.EDU>
    Subject: Can't seem to change my entry in the namespace database
    To: BUG-LISPM@OZ.AI.MIT.EDU
    Message-ID: <851217035622.1.FONER@APIARY-3.AI.MIT.EDU>

There's also no such host as OZ.AI.MIT.EDU anywhere, yet.
17-Dec-85 05:22:44-EST,644;000000000000
Received: from MIT-MC.ARPA by MIT-OZ via Chaosnet; 17 Dec 85 05:22-EST
Date: Tue, 17 Dec 85 05:25:14 EST
From: David Vinayak Wallace <GUMBY@MIT-MC.ARPA>
Subject:  mailer -- glurgh
To: BUG-LISPM@MIT-OZ
In-reply-to: Msg of Tue 17 Dec 85 04:21:35 EST from David Vinayak Wallace <GUMBY at MIT-MC.ARPA>
Message-ID: <[MIT-MC.ARPA].757552.851217.GUMBY>

    Date: Tue, 17 Dec 85 04:21:35 EST
    From: David Vinayak Wallace <GUMBY at MIT-MC.ARPA>

    There's also no such host as OZ.AI.MIT.EDU anywhere, yet.

I'm a spaz.  OZ.AI.MIT.EDU appears in the chaos host table.  Of
course, people outside MIT still can't reply to the message.
17-Dec-85 12:22:51-EST,895;000000000000
Mail-From: CJL created at 17-Dec-85 12:22:19
Date: Tue, 17 Dec 1985  12:22 EST
Message-ID: <CJL.12167865649.BABYL@MIT-OZ>
From: Chris Lindblad <CJL@MIT-OZ>
To:   David Vinayak Wallace <GUMBY@MIT-MC.ARPA>
Cc:   BUG-LISPM@MIT-OZ
Subject: mailer -- glurgh
In-reply-to: Msg of 17 Dec 1985  05:25-EST from David Vinayak Wallace <GUMBY at MIT-MC.ARPA>

    Date: Tuesday, 17 December 1985  05:25-EST
    From: David Vinayak Wallace <GUMBY at MIT-MC.ARPA>

    I'm a spaz.  OZ.AI.MIT.EDU appears in the chaos host table.  Of
    course, people outside MIT still can't reply to the message.

Only because THEY are losing. OZ is in the AI.MIT.EDU Domain, and there
is also correct mail forwarding information in the entry as well. Any
mailer that correctly implements domains will work fine sending mail to
OZ. Unfortunately, as of today, no mailer meets these qualifications.
*Sigh*
17-Dec-85 12:40:22-EST,804;000000000000
Mail-From: CJL created at 17-Dec-85 12:38:51
Date: Tue, 17 Dec 1985  12:38 EST
Message-ID: <CJL.12167868660.BABYL@MIT-OZ>
From: Chris Lindblad <CJL@MIT-OZ>
To:   "Leonard N. Foner" <Foner@MIT-OZ>
Cc:   BUG-LISPM@MIT-OZ
Subject: Can't seem to change my entry in the namespace database
In-reply-to: Msg of 17 Dec 1985  03:56-EST from Leonard N. Foner <Foner at OZ.AI.MIT.EDU>

    Date: Tuesday, 17 December 1985  03:56-EST
    From: Leonard N. Foner <Foner at OZ.AI.MIT.EDU>

    >>Error: Error from Namespace Lock REAGAN: The host named "OZ" was not found.

Your machine is running an old broken world load. To remedy this
situation, Type: (dis:get-distribution), which will take about 12
minutes, then reboot your machine. This will only work in machines that
have Aisite 11.4 loaded.
17-Dec-85 18:17:02-EST,1415;000000000000
Received: from MIT-MC.ARPA by MIT-OZ via Chaosnet; 17 Dec 85 18:16-EST
Received: from SCRC-QUABBIN.ARPA by MIT-MC.ARPA 17 Dec 85 18:18:50 EST
Received: from THAMES.SCRC.Symbolics.COM by SCRC-QUABBIN.ARPA via CHAOS with CHAOS-MAIL id 229100; Tue 17-Dec-85 17:10:12-EST
Date: Tue, 17 Dec 85 17:16 EST
From: Scott McKay <SWM@SCRC-QUABBIN.ARPA>
Subject: error in stack growing
To: Zvona@OZ.AI.MIT.EDU, BUG-LISPM@OZ.AI.MIT.EDU
In-Reply-To: <851209105853.1.ZVONA@SID.AI.MIT.EDU>
Message-ID: <851217171608.4.SWM@THAMES.SCRC.Symbolics.COM>

    Date: Mon, 9 Dec 85 10:58 EST
    From: David Chapman <Zvona@OZ.AI.MIT.EDU>

    In Symbolics 3670 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.2,
    AISite 11.3, microcode TMC5-IO4-MIC 336, FEP 127,
    FEP0:>v127-lisp.flod(2), FEP0:>v127-loaders.flod(2),
    FEP0:>v127-debug.flod(1), FEP0:>v127-info.flod(2), on Lisp Machine Sid Vicious:

    I've no idea why this happened.  It never used to.

    >>Error: Bad stack specification #<DTP-LOCATIVE 527760> passed to stack-grower.
    While in the function DBG:STACK-GROWER

    DBG:STACK-GROWER:  (P.C. = 72)
       Local 0 (DBG:SG): #<STACK-GROUP Lisp Listener 1 10570>
       Local 1 (DBG:STACK): #<DTP-LOCATIVE 527760>
       Local 2 (DBG:AMOUNT): #<DTP-LOCATIVE 527764>
       Local 3: (#<DTP-LOCATIVE 527760> #<DTP-LOCATIVE 527764>)

Can you tell me how to reproduce this?  I cannot seem to.

17-Dec-85 19:21:53-EST,2735;000000000000
Received: from MIT-MC.ARPA by MIT-OZ via Chaosnet; 17 Dec 85 19:20-EST
Received: from SCRC-STONY-BROOK.ARPA by MIT-MC.ARPA 17 Dec 85 19:22:43 EST
Received: from MUDDY.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 375846; Tue 17-Dec-85 09:09:30-EST
Date: Tue, 17 Dec 85 09:10 EST
From: Bruce Edwards <BEE@SCRC-VALLECITO.ARPA>
Subject: Please don't complain about speed if your code is interpreted.
To: DCP@SCRC-QUABBIN.ARPA
cc: WJL@MIT-MC.ARPA, BUG-LISPM@MIT-MC.ARPA
In-Reply-To: <851216161204.1.DCP@NEPONSET.SCRC.Symbolics.COM>
Message-ID: <851217091006.2.BEE@MUDDY.SCRC.Symbolics.COM>

    Date: Mon, 16 Dec 85 16:12 EST
    From: David C. Plummer <DCP@SCRC-QUABBIN.ARPA>

	Date: Fri, 13 Dec 85 14:08:47 EST
	From: Bill Long <WJL@MIT-MC.ARPA>

	Dear Sirs:
		To clarify for David Plummer what I meant by typecase being
	slow, consider the following dribble IN THE COMMON-LISP WINDOW IN 6.1:
	(defun tc (x)(typecase x (symbol 'symbol)(number 'number)(t t)))
	TC
	(defun cd (x)(cond ((symbolp x) 'symbol)((numberp x) 'number)(t t)))
	CD
	(defun test-tc (n)(loop with start = (get-internal-run-time) for m from 1 to n do (tc m)
	  finally (return (- (get-internal-run-time) start))))
	TEST-TC
	(defun test-cd (n)(loop with start = (get-internal-run-time) for m from 1 to n do (cd m)
	  finally (return (- (get-internal-run-time) start))))
	TEST-CD
	(test-cd 100)
	170
	(test-tc 100)
	3670

	Seems to me that 20:1 is slow.
	-Bill Long

    Use the compiler.


Wrongo cons breath. In release 6.1

(defun tc (x)(typecase x (symbol 'symbol)(number 'number)(t t)))
TC
(compile 'tc)
(disassemble 'tc)
  0  ENTRY: 1 REQUIRED, 0 OPTIONAL
  1  PUSH-LOCAL FP|0            ;X
  2  PUSH-CONSTANT 'SYMBOL
  3  CALL-2-STACK #'TYPEP
  4  BRANCH-FALSE 7
  5  PUSH-CONSTANT 'SYMBOL
  6  RETURN-STACK 
  7  PUSH-LOCAL FP|0            ;X
 10  PUSH-CONSTANT 'NUMBER
 11  CALL-2-STACK #'TYPEP
 12  BRANCH-FALSE 15
 13  PUSH-CONSTANT 'NUMBER
 14  RETURN-STACK 
 15  PUSH-LOCAL FP|0            ;X
 16  PUSH-CONSTANT 'T
 17  CALL-2-STACK #'TYPEP
 20  BRANCH-FALSE 23
 21  PUSH-CONSTANT 'T
 22  RETURN-STACK 
 23  PUSH-NIL 
 24  RETURN-STACK 

(defun cd (x)(cond ((symbolp x) 'symbol)((numberp x) 'number)(t t)))
CD
(compile 'cd)
(disassemble 'cd)
  0  ENTRY: 1 REQUIRED, 0 OPTIONAL
  1  PUSH-LOCAL FP|0            ;X
  2  BUILTIN SYMBOLP STACK 
  3  BRANCH-FALSE 6
  4  PUSH-CONSTANT 'SYMBOL
  5  RETURN-STACK 
  6  PUSH-LOCAL FP|0            ;X
  7  BUILTIN NUMBERP STACK 
 10  BRANCH-FALSE 13
 11  PUSH-CONSTANT 'NUMBER
 12  RETURN-STACK 
 13  PUSH-CONSTANT 'T
 14  RETURN-STACK 

Please dont jump to conclusions about users being idiots.....

17-Dec-85 21:27:04-EST,2741;000000000000
Received: from MIT-MC.ARPA by MIT-OZ via Chaosnet; 17 Dec 85 21:26-EST
Received: from SCRC-STONY-BROOK.ARPA by MIT-MC.ARPA 17 Dec 85 21:28:23 EST
Received: from CUYAHOGA.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 376544; Tue 17-Dec-85 21:16:07-EST
Date: Tue, 17 Dec 85 21:16 EST
From: Robert A. Cassels <Cassels@TENEX.SCRC.Symbolics.COM>
Subject: Please don't complain about speed if your code is interpreted.
To: BEE@SCRC-VALLECITO.ARPA, DCP@SCRC-QUABBIN.ARPA
cc: WJL@MIT-MC.ARPA, BUG-LISPM@MIT-MC.ARPA
In-Reply-To: <851217091006.2.BEE@MUDDY.SCRC.Symbolics.COM>
Message-ID: <851217211653.1.CASSELS@CUYAHOGA.SCRC.Symbolics.COM>
Reply-To: Robert A. Cassels <Cassels@SCRC-STONY-BROOK.ARPA>

    Date: Tue, 17 Dec 85 09:10 EST
    From: Bruce Edwards <BEE@SCRC-VALLECITO.ARPA>

	Date: Mon, 16 Dec 85 16:12 EST
	From: David C. Plummer <DCP@SCRC-QUABBIN.ARPA>

	    Date: Fri, 13 Dec 85 14:08:47 EST
	    From: Bill Long <WJL@MIT-MC.ARPA>

	    Dear Sirs:
		    To clarify for David Plummer what I meant by typecase being
	    slow, consider the following dribble IN THE COMMON-LISP WINDOW IN 6.1:
	    (defun tc (x)(typecase x (symbol 'symbol)(number 'number)(t t)))
	    TC
	    (defun cd (x)(cond ((symbolp x) 'symbol)((numberp x) 'number)(t t)))
	    CD
	    (defun test-tc (n)(loop with start = (get-internal-run-time) for m from 1 to n do (tc m)
	      finally (return (- (get-internal-run-time) start))))
	    TEST-TC
	    (defun test-cd (n)(loop with start = (get-internal-run-time) for m from 1 to n do (cd m)
	      finally (return (- (get-internal-run-time) start))))
	    TEST-CD
	    (test-cd 100)
	    170
	    (test-tc 100)
	    3670

	    Seems to me that 20:1 is slow.
	    -Bill Long

	Use the compiler.

    Wrongo cons breath. In release 6.1

[...]

    Please dont jump to conclusions about users being idiots.....

Please let's all have a little less flaming.  I believe that Dave is
correct.  On my machine in 6.1, both functions compile identically when
I compile them in a Common Lisp package.  Indeed in a Zetalisp package,
non-keyword types aren't optimized since they aren't recognized as
types.  [I expect that's what confused Bruce.]

(cl-user::test-cd 1000) => 9
(cl-user::test-tc 1000) => 9

[I have an IFU -- don't complain to me if you can't match the numbers.]

Bill -- we don't worry much about the performance of interpreted code.
We *do* worry a lot about the performance of compiled code.  And we *do*
try to make it as attractive as possible to use the compiler, by making
all our debugging tools, etc. work on well compiled code.  And we're
continuing to work on improving both performance and ease-of-use.

18-Dec-85 12:31:26-EST,476;000000000000
Received: from MIT-POINCARE by MIT-OZ via Chaosnet; 18 Dec 85 12:30-EST
Date: Wed, 18 Dec 85 12:30 EST
From: Henry Lieberman <Henry@OZ.AI.MIT.EDU>
Subject: Optimice for Lispms
To: Info-Lispm-MIT@OZ.AI.MIT.EDU
Message-ID: <851218123044.3.HENRY@POINCARE.AI.MIT.EDU>


Tired of your sluggish mouse?  Why not replace your mouse with 
an optical one?  If anyone is interested, I have info on how
to get Xerox optical mice and hook them up to Lispms.  They cost
$325.

18-Dec-85 13:15:06-EST,435;000000000000
Mail-From: ZVONA created at 18-Dec-85 13:14:54
Date: Wed, 18 Dec 1985  13:14 EST
Message-ID: <ZVONA.12168137362.BABYL@MIT-OZ>
From: David Chapman <ZVONA@MIT-OZ>
To:   Scott McKay <SWM@SCRC-QUABBIN.ARPA.Internet>
Cc:   BUG-LISPM@MIT-OZ
Subject: error in stack growing
In-reply-to: Msg of 17 Dec 1985  17:16-EST from Scott McKay <SWM at SCRC-QUABBIN.ARPA>

I can't reproduce it.  I now suspect hardware -- Sid has been flakey.
18-Dec-85 16:18:24-EST,6930;000000000000
Received: from MIT-GOLDILOCKS.ARPA by MIT-OZ via Chaosnet; 18 Dec 85 16:18-EST
Received: from SMOKEY.MIT.EDU by MIT-GOLDILOCKS.ARPA via CHAOS with CHAOS-MAIL id 10661; Wed 18-Dec-85 16:18:20-EST
Date: Sun, 25 Nov 0 18:15 EST
From: Scott Cyphers <sr.ehpyc@SPEECH.MIT.EDU>
Subject: I was just editing away in the lisp listener and...
To: BUG-LISPM@MIT-GOLDILOCKS.ARPA
Message-ID: <001125181502.1.CYPHER@SMOKEY.MIT.EDU>

In Symbolics 3670 Release 6.1, IP-TCP 29.13, Zoo 9.0,
Experimental Spire-Macros 9.2, Attribute 5.15, Experimental Compute 6.1,
Audio 4.1, Speech-Attributes 4.8, Display 6.23, Speech-Layouts 6.4,
Prtout 4.5, Experimental Versatec 6.0, Spire 16.0, Zoo-Spire 3.0,
microcode TMC5-IO4-MIC 336, FEP 127, FEP0:>v127-lisp.flod(2),
FEP0:>v127-loaders.flod(2), FEP0:>v127-debug.flod(1),
FEP0:>v127-info.flod(2), on Lisp Machine Smokey:

>>Error: BITBLT attempted to access column 268434674 of the destination array,
         which is outside the bounds of 0 to 1110
While in the function BITBLT  (:METHOD TV:SHEET :INSERT-CHAR)  (:METHOD TV:SHEET :INSERT-STRING)

BITBLT:  (P.C. = 302)
   Arg 0 (TV:ALU): 5
   Arg 1 (TV:WIDTH): -907
   Local 1 (TV:WIDTH): 268434549
   Arg 2 (TV:HEIGHT): 14
   Arg 3 (TV:FROM-ARRAY): #<ART-1B-1111-736 144513707>
   Arg 4 (TV:FROM-X): 118
   Arg 5 (TV:FROM-Y): 150
   Arg 6 (TV:TO-ARRAY): #<ART-1B-1111-736 144513707>
   Arg 7 (TV:TO-X): 126
   Arg 8 (TV:TO-Y): 150
   Local 9 (TV:BB-WIDTH): NIL
   Local 10 (TV:BB-S-DATA-ADDR): 258215530
   Local 11 (TV:BB-S-ROW-OFFSET): NIL
   Local 12 (TV:BB-S-OFFSET): NIL
   Local 13 (TV:BB-S-BITPOS): NIL
   Local 14 (TV:BB-S-ROW-LENGTH): 35
   Local 15 (TV:BB-D-DATA-ADDR): 258215530
   Local 16 (TV:BB-D-OFFSET): NIL
   Local 17 (TV:BB-D-BITPOS): NIL
   Local 18 (TV:BB-EVENT-COUNT): 3153
   Local 19 (TV:BB-ALU-OPERATION): 5
   Local 20 (TV:S-ROW-BITPOS): 22
   Local 21 (TV:S-ROW-OFFSET): 3
   Local 22 (TV:S-ROW): 150
   Local 23 (TV:D-ROW-BITPOS): 30
   Local 24 (TV:D-ROW-OFFSET): 3
   Local 25 (TV:D-ROW): 150
   Local 26 (TV:S-BEG-ADDR): 258215530
   Local 27 (TV:S-BEG-BITPOS): 0
   Local 28 (TV:S-ROW-LENGTH): 1111
   Local 29 (TV:S-ROW-SPAN): 40
   Local 30 (TV:S-HEIGHT): 736
   Local 31 (TV:S-BITS-PER-ELT): 0
   Local 32 (TV:D-BEG-ADDR): 258215530
   Local 33 (TV:D-BEG-BITPOS): 0
   Local 34 (TV:D-ROW-LENGTH): 1111
   Local 35 (TV:D-ROW-SPAN): 40
   Local 36 (TV:D-HEIGHT): 736
   Local 37 (TV:D-BITS-PER-ELT): 0
   Local 38 (TV:WIDTH-BACKWARDS): NIL
   Local 39 (TV:HEIGHT-BACKWARDS): NIL
   Local 40 (TV:SHORT-ROW): NIL

(:METHOD TV:SHEET :INSERT-CHAR):  (P.C. = 73)
   Arg 0 (SELF): #<LISP-LISTENER Lisp Listener 1 43200064 exposed>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor TV:SHEET -- 0. IV's, 1. FL's 120276474>
   Arg 2 (SI:OPERATION): :INSERT-CHAR
   Arg 3 (TV:CHAR-COUNT): 8
   Arg 4 (TV:UNIT): :PIXEL

(:METHOD TV:SHEET :INSERT-STRING):  (P.C. = 41)
   Arg 0 (SELF): #<LISP-LISTENER Lisp Listener 1 43200064 exposed>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor TV:SHEET -- 0. IV's, 1. FL's 120276474>
   Arg 2 (SI:OPERATION): :INSERT-STRING
   Arg 3 (STRING): ""
   Arg 4 (TV:START): 5
   Arg 5 (TV:END): 6
   --Defaulted args:--
   Arg 6 (TV:TYPE-ALSO): T

(:DEFUN-METHOD SI:IE-INSERT-STRING):  (P.C. = 316)
   Arg 0 (SELF): #<LISP-LISTENER Lisp Listener 1 43200064 exposed>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor SI:INTERACTIVE-STREAM -- 20. IV's, 2. FL's 120306416>
   Arg 2 (STRING): "e                                                                                                                               "
   Arg 3 (SI:BEGIN): 0
   Arg 4 (SI:END): 1
   Arg 5 (SI:RETURN-OK?): T
   --Defaulted args:--
   Arg 6 (FONT): NIL

(:DEFUN-METHOD SI:IE-INSERT-CHAR):  (P.C. = 52)
   Arg 0 (SELF): #<LISP-LISTENER Lisp Listener 1 43200064 exposed>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor SI:INTERACTIVE-STREAM -- 20. IV's, 2. FL's 120306416>
   Arg 2 (SI:CHAR): 101
   Arg 3 (SI:RETURN-OK?): T

(:DEFUN-METHOD SI:STANDARD-INPUT-EDITOR-TYI):  (P.C. = 473)
   Arg 0 (SELF): #<LISP-LISTENER Lisp Listener 1 43200064 exposed>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor SI:INTERACTIVE-STREAM -- 20. IV's, 2. FL's 120306416>
   Arg 2: :ACTIVATION

SI:STANDARD-INPUT-EDITOR-TYI:  (P.C. = 12)
   Rest arg (ARGS): (:ACTIVATION)

SI:INPUT-EDITOR-INVOKE:  (P.C. = 11)
   Arg 0 (SI:OPERATION): TYI
   Local 0 (SI:OPERATION): SI:STANDARD-INPUT-EDITOR-TYI
   Rest arg (ARGS): (:ACTIVATION)

(:DEFUN-METHOD SI:INPUT-EDITOR-READ):  (P.C. = 206)
   Arg 0 (SELF): #<LISP-LISTENER Lisp Listener 1 43200064 exposed>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor SI:INTERACTIVE-STREAM -- 20. IV's, 2. FL's 120306416>
   Arg 2 (SI:READ-FUNCTION): #<LEXICAL-CLOSURE (:INTERNAL SI:CP-INPUT-EDITING 0) 500216>
   Arg 3 (SI:READ-ARGS): NIL

(:METHOD SI:INTERACTIVE-STREAM :INPUT-EDITOR):  (P.C. = 131)
   Arg 0 (SELF): #<LISP-LISTENER Lisp Listener 1 43200064 exposed>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor SI:INTERACTIVE-STREAM -- 20. IV's, 2. FL's 120306416>
   Arg 2 (SI:OPERATION): :INPUT-EDITOR
   Arg 3 (SI:READ-FUNCTION): #<LEXICAL-CLOSURE (:INTERNAL SI:CP-INPUT-EDITING 0) 500216>
   Rest arg (SI:READ-ARGS): NIL

SI:WITH-INPUT-EDITING-INTERNAL:  (P.C. = 113)
   Arg 0 (SI:STREAM): #:TERMINAL-IO-SYN-STREAM
   Arg 1 (SI:CONTINUATION): #<LEXICAL-CLOSURE (:INTERNAL SI:CP-INPUT-EDITING 0) 500216>
   Arg 2 (SI:ACTIVATORS): NIL
   Arg 3 (SI:LINE-P): NIL
   Arg 4 (SI:INPUT-EDITOR-OPTIONS): NIL

SI:CP-INPUT-EDITING:  (P.C. = 76)
   Arg 0 (SI:STREAM): #:TERMINAL-IO-SYN-STREAM
   Arg 1 (SI:PROMPT): MY-PROMPT
   Arg 2 (SI:BLANK-LINE-MODE): :REPROMPT
   Arg 3 (SI:CONTINUATION): #<LEXICAL-CLOSURE (:INTERNAL READ-COMMAND-OR-FORM 0) 500154>

READ-COMMAND-OR-FORM:  (P.C. = 151)
   Arg 0 (SI:STREAM): #:TERMINAL-IO-SYN-STREAM
   Rest arg: (:DISPATCH-MODE :FORM-PREFERRED :BLANK-LINE-MODE :REPROMPT :PROMPT MY-PROMPT)

SI:CP-COMMAND-LOOP-READ-FUNCTION:  (P.C. = 13)

(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0):  (P.C. = 105)
   Arg 0 (COMPILER:.LEXICAL-ENVIRONMENT-POINTER.): #<DTP-LOCATIVE 500047>

TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
   Arg 0 (TV:NEW-MODE): :BLAST
   Arg 1 (TV:STREAM): #:TERMINAL-IO-SYN-STREAM
   Arg 2 (TV:CONTINUATION): #<LEXICAL-CLOSURE (:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0) 500054>

SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
   Arg 0 (SI:NAME): "Lisp Top Level"
   Arg 1 (SI:ABORT-FUNCTION): NIL
   Arg 2 (SI:READ-FUNCTION): NIL
   Arg 3 (SI:EVAL-FUNCTION): NIL
   Arg 4 (SI:PRINT-FUNCTION): NIL

SI:LISP-COMMAND-LOOP:  (P.C. = 67)
   Arg 0: #<LISP-LISTENER Lisp Listener 1 43200064 exposed>
   Rest arg: (:NAME "Lisp Top Level")

SI:LISP-TOP-LEVEL1:  (P.C. = 5)
   Arg 0 (SI:STREAM): #<LISP-LISTENER Lisp Listener 1 43200064 exposed>

SI:LISP-TOP-LEVEL:  (P.C. = 7)
18-Dec-85 19:16:11-EST,1909;000000000000
Received: from MIT-DUE-PROCESS by MIT-OZ via Chaosnet; 18 Dec 85 19:16-EST
Date: Wed, 18 Dec 85 19:16 EST
From: Carl Hewitt <Hewitt@MIT-XX.ARPA>
Subject: Zmail reply doesn't work in mail to Symbolics
To: bug-lispm@OZ.AI.MIT.EDU
cc: Hewitt@MIT-XX.ARPA
In-Reply-To: The message of 18 Dec 85 17:51-EST from The Mailer Daemon <Mailer@OZ.AI.MIT.EDU>
Message-ID: <851218191620.2.HEWITT@DUE-PROCESS.AI.MIT.EDU>

I tried to reply to Doug Dodds message.

    Received: from MIT-OZ by MIT-OZ via Chaosnet; 18 Dec 85 17:52-EST
    Date: Wed 18 Dec 85 17:51:20-EST
    From: The Mailer Daemon <Mailer@MIT-OZ>
    To: Hewitt@MIT-OZ.ARPA
    Subject: Message of 18-Dec-85 17:51:17

    Message failed for the following:
    Palter@MIT-OZ.#Chaos: Can't forward - unknown host "TENEX.SCRC.Symbolics.COM"
    Bug-Tracking-Replies@MIT-OZ.#Chaos: Can't forward - unknown host "TENEX.SCRC.Symbolics.COM"
    DODDS@MIT-OZ.#Chaos: Can't forward - unknown host "TENEX.SCRC.Symbolics.COM"
                ------------
    Received: from MIT-DUE-PROCESS by MIT-OZ via Chaosnet; 18 Dec 85 17:51-EST
    Date: Wed, 18 Dec 85 17:54 EST
    From: Carl Hewitt <Hewitt@MIT-OZ.ARPA>
    Subject: persistent bug in Zmail
    To: Doug Dodds <DODDS@TENEX.SCRC.Symbolics.COM>
    cc: HEWITT@MIT-OZ.ARPA, Bug-Tracking-Replies@TENEX.SCRC.Symbolics.COM,
        Palter@TENEX.SCRC.Symbolics.COM, Hewitt@MIT-OZ.ARPA
    In-Reply-To: <851212223103.6.DODDS@ANNISQUAM.SCRC.Symbolics.COM>
    Message-ID: <851218175426.8.HEWITT@DUE-PROCESS.AI.MIT.EDU>

    Doug,

    Thanks for your reply to my bug report.  We now have 6.1 here and the
    problem seems to have gone away.

    Cheers,

    Carl

    P.S.  Where is the best place to send software bug reports for
    the AI Lab Symbolic machines?

    P.P.S.  What is the recommended way to clear an "output hold" state
    from the machine?
    -------
18-Dec-85 19:21:45-EST,4950;000000000000
Received: from MIT-DUE-PROCESS by MIT-OZ via Chaosnet; 18 Dec 85 19:21-EST
Date: Wed, 18 Dec 85 19:22 EST
From: Carl Hewitt <Hewitt@MIT-XX.ARPA>
Subject: Namespace bug: deleted login host and then attempted to save
To: BUG-LISPM@OZ.AI.MIT.EDU
Message-ID: <851218192206.3.HEWITT@DUE-PROCESS.AI.MIT.EDU>

In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.2,
AISite 11.4, microcode TMC5-MIC 336, FEP 127, FEP0:>v127-lisp.flod(2),
FEP0:>v127-loaders.flod(2), FEP0:>v127-debug.flod(1),
FEP0:>v127-info.flod(2), on Due Process:

I deleted a login host from my user object and then attempted to save
it.

>>Error: Error from Namespace Lock REAGAN: The host named "OZ" was not found.
         No host with that name is already known by the local machine,
         and no namespace server was contacted because validity checking is inhibited.
While in the function (:METHOD NETI:LISPM-NAMESPACE-ACCESS-PATH :UPDATE-OBJECT)  (:INTERNAL (:METHOD NETI:LISPM-NAMESPACE-ACCESS-PATH :COMBINED :UPDATE-OBJECT) 0)  (:METHOD NETI:NAMESPACE-ACCESS-PATH :WHOPPER :UPDATE-OBJECT)

(:METHOD NETI:LISPM-NAMESPACE-ACCESS-PATH :UPDATE-OBJECT):  (P.C. = 71)
   Arg 0 (SELF): #<LISPM-NAMESPACE-ACCESS-PATH Namespace Lock REAGAN 6365664>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor NETI:LISPM-NAMESPACE-ACCESS-PATH -- 3. IV's, 1. FL's 121260624>
   Arg 2 (SI:OPERATION): :UPDATE-OBJECT
   Arg 3 (NETI:NAMESPACE): #<NAMESPACE MIT 1440322>
   Arg 4 (NET:OBJECT): #<USER HEWITT 1451440>
   Arg 5 (NETI:ON-BEHALF-OF): "Hewitt"
   Local 6: #<NAMESPACE MIT 1440322>
   Local 7 (NETI:RECORD): (("ERROR" "The host named /"OZ/" was not found.
No host with that name is already known by the local machine,
and no namespace server was contacted because validity checking is inhibited."))
   Local 8 (SI:*SELECTQ-ITEM*): "ERROR"

(:INTERNAL (:METHOD NETI:LISPM-NAMESPACE-ACCESS-PATH :COMBINED :UPDATE-OBJECT) 0):  (P.C. = 10)
   Arg 0 (SELF): #<LISPM-NAMESPACE-ACCESS-PATH Namespace Lock REAGAN 6365664>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor NETI:LISPM-NAMESPACE-ACCESS-PATH -- 3. IV's, 1. FL's 121260624>
   Arg 2 (SI:.OPERATION.): :UPDATE-OBJECT
   Rest arg (SI:.DAEMON-CALLER-ARGS.): (#<NAMESPACE MIT 1440322> #<USER HEWITT 1451440> "Hewitt")

(:METHOD NETI:NAMESPACE-ACCESS-PATH :WHOPPER :UPDATE-OBJECT):  (P.C. = 42)
   Arg 0 (SELF): #<LISPM-NAMESPACE-ACCESS-PATH Namespace Lock REAGAN 6365664>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor NETI:NAMESPACE-ACCESS-PATH -- 3. IV's, 0. FL's 121260633>
   Arg 2 (SI:.WHOPPER-CONTINUATION.): #<DTP-COMPILED-FUNCTION (:INTERNAL (:METHOD NETI:LISPM-NAMESPACE-ACCESS-PATH :COMBINED :UPDATE-OBJECT) 0) 22077754>
   Arg 3 (SI:.OLD-SELF-MAPPING-TABLE.): #<Map to flavor NETI:LISPM-NAMESPACE-ACCESS-PATH -- 3. IV's, 1. FL's 121260624>
   Arg 4 (SI:.OPERATION.): :UPDATE-OBJECT
   Arg 5 (NETI:NAMESPACE): #<NAMESPACE MIT 1440322>
   Arg 6 (NET:OBJECT): #<USER HEWITT 1451440>
   Arg 7 (NETI:ON-BEHALF-OF): "Hewitt"

(:METHOD NETI:LISPM-NAMESPACE-ACCESS-PATH :COMBINED :UPDATE-OBJECT):  (P.C. = 13)
   Arg 0 (SELF): #<LISPM-NAMESPACE-ACCESS-PATH Namespace Lock REAGAN 6365664>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor NETI:LISPM-NAMESPACE-ACCESS-PATH -- 3. IV's, 1. FL's 121260624>
   Arg 2 (SI:.OPERATION.): :UPDATE-OBJECT
   Rest arg (SI:.DAEMON-CALLER-ARGS.): (#<NAMESPACE MIT 1440322> #<USER HEWITT 1451440> "Hewitt")

NETI:UPDATE-OBJECT-THROUGH-NETWORK:  (P.C. = 55)
   Arg 0 (NETI:NAMESPACE): #<NAMESPACE MIT 1440322>
   Arg 1 (NET:OBJECT): #<USER HEWITT 1451440>

NET:UPDATE-OBJECT-PERMANENTLY:  (P.C. = 34)
   Arg 0 (NETI:CLASS): :USER
   Arg 1 (NETI:NAMESPACE): #<NAMESPACE MIT 1440322>
   Arg 2 (NETI:NAME): #<NAME MIT|HEWITT 1451422>
   Arg 3 (NETI:PROPERTY-LIST): (:LISPM-NAME "Hewitt" :PERSONAL-NAME "Carl Hewitt" :HOME-HOST #<TOPS20-HOST XX 1451477> :MAIL-ADDRESS ("Hewitt" #<TOPS20-HOST XX 1451477>) :LOGIN-NAME (("Hewitt" #<TOPS20-HOST XX 1451477>) ("Hewitt" #<TOPS20-HOST EECS 1441436>) ("Hewitt" #<TOPS20-HOST OZ 1441406>) ("Hewitt" #<LISPM-HOST AI|APIARY-5 1440762>)) ...)
   Arg 4 (NETI:DONT-UPDATE-FILES): NIL

(:DEFUN-METHOD NETI:PERFORM-COMMAND):  (P.C. = 445)
   Arg 0 (SELF): #<NAMESPACE-EDITOR-FRAME Namespace Editor 1 600546 exposed>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor NETI:NAMESPACE-EDITOR-FRAME -- 15. IV's, 13. FL's 147165132>
   Arg 2 (NETI:CH): 115
   Local 2 (NETI:CH): 83

(:METHOD NETI:NAMESPACE-EDITOR-FRAME :TOP-LEVEL):  (P.C. = 121)
   Arg 0 (SELF): #<NAMESPACE-EDITOR-FRAME Namespace Editor 1 600546 exposed>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor NETI:NAMESPACE-EDITOR-FRAME -- 15. IV's, 13. FL's 147165132>
   Arg 2 (SI:OPERATION): :TOP-LEVEL

NETI:START-NAMESPACE-EDITOR:  (P.C. = 4)
   Arg 0 (NETI:WINDOW): #<NAMESPACE-EDITOR-FRAME Namespace Editor 1 600546 exposed>

SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
   --Defaulted args:--
   Arg 0 (IGNORE): NIL
18-Dec-85 19:25:37-EST,623;000000000000
Received: from MIT-GOLDILOCKS.ARPA by MIT-OZ via Chaosnet; 18 Dec 85 19:25-EST
Received: from YOGI.MIT.EDU by MIT-GOLDILOCKS.ARPA via CHAOS with CHAOS-MAIL id 10667; Wed 18-Dec-85 19:25:50-EST
Date: Wed, 18 Dec 85 19:25 EST
From: Scott Cyphers <sr.ehpyc@SPEECH.MIT.EDU>
Subject: I was just editing away in the lisp listener and...
To: BUG-LISPM@MIT-GOLDILOCKS.ARPA
In-Reply-To: <001125181502.1.CYPHER@SMOKEY.MIT.EDU>
Message-ID: <851218192531.2.CYPHER@YOGI.MIT.EDU>

It's happened a few more times on the same machine, which was just fixed
today, so I suspect maybe it's hardware and it is only partially fixed.
18-Dec-85 20:01:23-EST,8367;000000000000
Received: from MIT-DUE-PROCESS by MIT-OZ via Chaosnet; 18 Dec 85 20:01-EST
Date: Wed, 18 Dec 85 20:01 EST
From: Carl Hewitt <Hewitt@MIT-XX.ARPA>
Subject: bug in Zmail
To: BUG-LISPM@OZ.AI.MIT.EDU
Message-ID: <851218200143.7.HEWITT@DUE-PROCESS.AI.MIT.EDU>

In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.2,
AISite 11.4, microcode TMC5-MIC 336, FEP 127, FEP0:>v127-lisp.flod(2),
FEP0:>v127-loaders.flod(2), FEP0:>v127-debug.flod(1),
FEP0:>v127-info.flod(2), on Due Process:

For some reason the file _ZMAIL_TXT.1 is never around when
ZMAIL wants to delete it so I keep getting the following error
message. Even if I create a file with this name the problem comes
back!

>>Error: File not found
         For XX:PS:<HEWITT>MAIL._ZMAIL_TXT.1
While in the function (:METHOD FS:HOST-UNIT :COMMAND)  FS:DELETE-CHAOS  (:METHOD FS:QFILE-ACCESS-PATH :DELETE)

(:METHOD FS:HOST-UNIT :COMMAND):  (P.C. = 236)
   Arg 0 (SELF): #<HOST-UNIT 36704715>
   Arg 1 (SYS:SELF-MAPPING-TABLE): FS:HOST-UNIT
   Arg 2 (SI:OPERATION): :COMMAND
   Arg 3 (FS:MARK-P): NIL
   Arg 4 (FS:STREAM-OR-HANDLE): NIL
   Arg 5 (FS:SIMPLE-P): NIL
   Arg 6 (FS:WHOSTATE): "Delete"
   Rest arg (FS:COMMANDS): ("DELETE" 141 "PS:<HEWITT>MAIL._ZMAIL_TXT.1" 141)
   Local 8 (FS:HANDLE): NIL
   Local 9 (FS:STREAM): NIL
   Local 10 (FS:PKT): #<Chaos Packet 14605605>
   Local 11 (FS:SUCCESS): NIL
   Local 12 (STRING): " ERROR FNF F File not found"
   Local 13 (FS:TRANSACTION-ID): "T3906"
   Local 14 (FS:CREATE-P): NIL
   Local 15 (CONDITION): NIL
   Local 16: T
   Local 17: #<CASE-HANDLER 144656741>
   Local 18: (#<LEXICAL-CLOSURE (:INTERNAL ** 0) 44040055>)
   Local 19: (#<CASE-HANDLER 144656741> #<LEXICAL-CLOSURE (:INTERNAL ** 0) 44040055>)

FS:DELETE-CHAOS:  (P.C. = 24)
   Arg 0 (FS:ACCESS-PATH): #<TOPS20-QFILE-ACCESS-PATH XX using QFILE 36704704>
   Arg 1: #<TOPS20-PATHNAME "XX:PS:<HEWITT>MAIL._ZMAIL_TXT.1">

(:METHOD FS:QFILE-ACCESS-PATH :DELETE):  (P.C. = 4)
   Arg 0 (SELF): #<TOPS20-QFILE-ACCESS-PATH XX using QFILE 36704704>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor FS:QFILE-ACCESS-PATH -- 4. IV's, 0. FL's 146702540>
   Arg 2 (SI:OPERATION): :DELETE
   Arg 3 (FS:PATHNAME): #<TOPS20-PATHNAME "XX:PS:<HEWITT>MAIL._ZMAIL_TXT.1">

(:METHOD FS:ACTIVE-PATHNAME-MIXIN :DELETE):  (P.C. = 11)
   Arg 0 (SELF): #<TOPS20-PATHNAME "XX:PS:<HEWITT>MAIL._ZMAIL_TXT.1">
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor FS:ACTIVE-PATHNAME-MIXIN -- 1. IV's, 0. FL's 121141555>
   Arg 2 (SI:OPERATION): :DELETE

DELETEF:  (P.C. = 117)
   Arg 0 (FS:STRING-OR-STREAM): #<TOPS20-PATHNAME "XX:PS:<HEWITT>MAIL._ZMAIL_TXT.1">
   --Defaulted args:--
   Arg 1 (FS:ERROR-P): T

(:METHOD ZWEI:INBOX-BUFFER :SAVING-DONE):  (P.C. = 22)
   Arg 0 (SELF): #<TENEX-INBOX-BUFFER "XX:PS:<HEWITT>MAIL.TXT.1" 34252764>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor ZWEI:INBOX-BUFFER -- 12. IV's, 0. FL's 170763116>
   Arg 2 (SI:OPERATION): :SAVING-DONE
   Arg 3 (ZWEI:FORCING-OUT): NIL

(:INTERNAL (:METHOD ZWEI:TENEX-INBOX-BUFFER :COMBINED :SAVING-DONE) 0):  (P.C. = 11)
   Arg 0 (SELF): #<TENEX-INBOX-BUFFER "XX:PS:<HEWITT>MAIL.TXT.1" 34252764>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor ZWEI:TENEX-INBOX-BUFFER -- 1. IV's, 5. FL's 170761344>
   Arg 2 (SI:.OPERATION.): :SAVING-DONE
   Rest arg (SI:.DAEMON-CALLER-ARGS.): (NIL)

(:METHOD ZWEI:MSG-BUFFER :WHOPPER :SAVING-DONE):  (P.C. = 34)
   Arg 0 (SELF): #<TENEX-INBOX-BUFFER "XX:PS:<HEWITT>MAIL.TXT.1" 34252764>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor ZWEI:MSG-BUFFER -- 15. IV's, 0. FL's 170761377>
   Arg 2 (SI:.WHOPPER-CONTINUATION.): #<DTP-COMPILED-FUNCTION (:INTERNAL (:METHOD ZWEI:TENEX-INBOX-BUFFER :COMBINED :SAVING-DONE) 0) 50350054>
   Arg 3 (SI:.OLD-SELF-MAPPING-TABLE.): #<Map to flavor ZWEI:TENEX-INBOX-BUFFER -- 1. IV's, 5. FL's 170761344>
   Arg 4 (SI:.OPERATION.): :SAVING-DONE
   Arg 5 (ZWEI:FORCING-OUT): NIL

(:METHOD ZWEI:TENEX-INBOX-BUFFER :COMBINED :SAVING-DONE):  (P.C. = 13)
   Arg 0 (SELF): #<TENEX-INBOX-BUFFER "XX:PS:<HEWITT>MAIL.TXT.1" 34252764>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor ZWEI:TENEX-INBOX-BUFFER -- 1. IV's, 5. FL's 170761344>
   Arg 2 (SI:.OPERATION.): :SAVING-DONE
   Rest arg (SI:.DAEMON-CALLER-ARGS.): (NIL)

(:METHOD ZWEI:FILE-MAIL-BUFFER :SAVING-DONE):  (P.C. = 72)
   Arg 0 (SELF): #<BABYL-BUFFER "XX:PS:<HEWITT>HEWITT.BABYL" 6341776>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor ZWEI:FILE-MAIL-BUFFER -- 9. IV's, 1. FL's 120513471>
   Arg 2 (SI:OPERATION): :SAVING-DONE
   Arg 3 (ZWEI:FORCING-OUT): NIL

(:INTERNAL (:METHOD ZWEI:BABYL-BUFFER :COMBINED :SAVING-DONE) 0):  (P.C. = 11)
   Arg 0 (SELF): #<BABYL-BUFFER "XX:PS:<HEWITT>HEWITT.BABYL" 6341776>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor ZWEI:BABYL-BUFFER -- 3. IV's, 6. FL's 120511737>
   Arg 2 (SI:.OPERATION.): :SAVING-DONE
   Rest arg (SI:.DAEMON-CALLER-ARGS.): (NIL)

(:METHOD ZWEI:MSG-BUFFER :WHOPPER :SAVING-DONE):  (P.C. = 34)
   Arg 0 (SELF): #<BABYL-BUFFER "XX:PS:<HEWITT>HEWITT.BABYL" 6341776>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor ZWEI:MSG-BUFFER -- 15. IV's, 0. FL's 120511774>
   Arg 2 (SI:.WHOPPER-CONTINUATION.): #<DTP-COMPILED-FUNCTION (:INTERNAL (:METHOD ZWEI:BABYL-BUFFER :COMBINED :SAVING-DONE) 0) 50347207>
   Arg 3 (SI:.OLD-SELF-MAPPING-TABLE.): #<Map to flavor ZWEI:BABYL-BUFFER -- 3. IV's, 6. FL's 120511737>
   Arg 4 (SI:.OPERATION.): :SAVING-DONE
   Arg 5 (ZWEI:FORCING-OUT): NIL

(:METHOD ZWEI:BABYL-BUFFER :COMBINED :SAVING-DONE):  (P.C. = 13)
   Arg 0 (SELF): #<BABYL-BUFFER "XX:PS:<HEWITT>HEWITT.BABYL" 6341776>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor ZWEI:BABYL-BUFFER -- 3. IV's, 6. FL's 120511737>
   Arg 2 (SI:.OPERATION.): :SAVING-DONE
   Rest arg (SI:.DAEMON-CALLER-ARGS.): (NIL)

ZWEI:SAVE-BUFFER-INTERNAL:  (P.C. = 102)
   Arg 0 (ZWEI:BUFFER): #<BABYL-BUFFER "XX:PS:<HEWITT>HEWITT.BABYL" 6341776>
   Arg 1 (ZWEI:FOR-FINISH): NIL

ZWEI:SAVE-MAIL-BUFFER:  (P.C. = 111)
   Arg 0 (ZWEI:BUFFER): #<BABYL-BUFFER "XX:PS:<HEWITT>HEWITT.BABYL" 6341776>
   --Defaulted args:--
   Arg 1 (ZWEI:FOR-FINISH): NIL

ZWEI:ZMAIL-SAVE-ALL:  (P.C. = 46)

ZWEI:COM-ZMAIL-SAVE:  (P.C. = 16)

ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
   Arg 0 (ZWEI:COMMAND): ZWEI:COM-ZMAIL-SAVE
   Arg 1 (ZWEI:CHAR): (:MENU ("Save" . ZWEI:COM-ZMAIL-SAVE) 1 #<ZMAIL-MAIN-COMMAND-MENU-PANE Zmail Main Command Menu Pane 5 43207055 exposed>)
   --Defaulted args:--
   Arg 2 (ZWEI:PREFIX-CHAR): NIL
   Arg 3 (ZWEI:HOOK-LIST): NIL

ZWEI:ZMAIL-COMMAND-EXECUTE:  (P.C. = 6)
   Arg 0: ZWEI:COM-ZMAIL-SAVE

(:INTERNAL ZWEI:ZMAIL-COMMAND-LIST 0 (:MENU)):  (P.C. = 10)
   Arg 0 (SI:**DEFSELECT-OP**): :MENU
   Arg 1 (ZWEI:ITEM): ("Save" . ZWEI:COM-ZMAIL-SAVE)
   Arg 2 (ZWEI:CH): 1
   Arg 3 (ZWEI:WINDOW): #<ZMAIL-MAIN-COMMAND-MENU-PANE Zmail Main Command Menu Pane 5 43207055 exposed>

ZWEI:ZMAIL-COMMAND-LIST:  (P.C. = 12)
   Arg 0 (SI:OPERATION): :MENU
   Rest arg (SI:SELECT-METHOD-ARGS): (("Save" . ZWEI:COM-ZMAIL-SAVE) 1 #<ZMAIL-MAIN-COMMAND-MENU-PANE Zmail Main Command Menu Pane 5 43207055 exposed>)

(:METHOD ZWEI:ZMAIL-FRAME :PROCESS-SPECIAL-COMMAND):  (P.C. = 16)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 43200325 exposed>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-FRAME -- 66. IV's, 20. FL's 146565661>
   Arg 2 (SI:OPERATION): :PROCESS-SPECIAL-COMMAND
   Rest arg (ARGS): (:MENU ("Save" . ZWEI:COM-ZMAIL-SAVE) 1 #<ZMAIL-MAIN-COMMAND-MENU-PANE Zmail Main Command Menu Pane 5 43207055 exposed>)

(:METHOD ZWEI:ZMAIL-FRAME :COMMAND-LOOP):  (P.C. = 136)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 43200325 exposed>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-FRAME -- 66. IV's, 20. FL's 146565661>
   Arg 2 (SI:OPERATION): :COMMAND-LOOP

(:METHOD ZWEI:ZMAIL-FRAME :COMBINED :COMMAND-LOOP):  (P.C. = 70)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 43200325 exposed>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-FRAME -- 66. IV's, 20. FL's 146565661>
   Arg 2 (SI:.OPERATION.): :COMMAND-LOOP
   Rest arg (SI:.DAEMON-CALLER-ARGS.): NIL

ZWEI:ZMAIL-PROCESS-TOP-LEVEL:  (P.C. = 105)
   Arg 0 (ZWEI:WINDOW): #<ZMAIL-FRAME Main Zmail Window 43200325 exposed>

SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
   --Defaulted args:--
   Arg 0 (IGNORE): NIL
19-Dec-85 20:24:47-EST,1405;000000000000
Received: from GOLDILOCKS.MIT.EDU by MIT-OZ via Chaosnet; 19 Dec 85 20:24-EST
Received: from YOGI.MIT.EDU by MIT-GOLDILOCKS.ARPA via CHAOS with CHAOS-MAIL id 10699; Thu 19-Dec-85 20:25:05-EST
Date: Thu, 19 Dec 85 20:23 EST
From: Scott Cyphers <sr.ehpyc@SPEECH.MIT.EDU>
Subject: Defstruct with byte-fields
To: BUG-LISPM@MIT-GOLDILOCKS.ARPA
Message-ID: <851219202344.1.CYPHER@YOGI.MIT.EDU>

In Symbolics 3670 Release 6.1, IP-TCP 29.13, Zoo 9.0,
Experimental Spire-Macros 9.2, Attribute 5.16, Experimental Compute 6.1,
Audio 4.1, Speech-Attributes 4.8, Display 6.23, Speech-Layouts 6.4,
Prtout 4.5, Experimental Versatec 6.0, Spire 16.0, Zoo-Spire 3.0,
microcode TMC5-IO4-FPA-COLOR-MIC 336, FEP 127, FEP0:>v127-lisp.flod(2),
FEP0:>v127-loaders.flod(2), FEP0:>v127-tests.flod(2),
FEP0:>v127-debug.flod(1), FEP0:>v127-info.flod(2), on Lisp Machine Yogi:

Is it intentional that the Common Lisp defstruct doesn't allow for byte
fields?

In the Zetalisp implementation, I think that if :type is :fixnum (or
maybe :32-bit or something of that sort), then it makes more sense to
use %logdpb and %logldb than ldb and dpb, at least on the part of the
word where it makes a difference.  A type of :positive-integer or
something like that could be used when you really do want to use
bignums.

(defstruct (id :conc-name (:type :fixnum))
  ((site (byte 8. 24.))
   (number (byte 24. 0.))))
19-Dec-85 22:02:44-EST,2313;000000000000
Received: from GOLDILOCKS.MIT.EDU by MIT-OZ via Chaosnet; 19 Dec 85 22:01-EST
Received: from SCRC-STONY-BROOK.ARPA by MIT-GOLDILOCKS.ARPA via INTERNET with SMTP id 10704; 19 Dec 85 22:01:05-EST
Received: from NEPONSET.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 379146; Thu 19-Dec-85 22:01:03-EST
Date: Thu, 19 Dec 85 22:01 EST
From: David C. Plummer <DCP@SCRC-QUABBIN.ARPA>
Subject: Defstruct with byte-fields
To: Scott Cyphers <sr.ehpyc@SPEECH.MIT.EDU>,
    BUG-LISPM@MIT-GOLDILOCKS.ARPA
In-Reply-To: <851219202344.1.CYPHER@YOGI.MIT.EDU>
Message-ID: <851219220140.9.DCP@NEPONSET.SCRC.Symbolics.COM>

    Date: Thu, 19 Dec 85 20:23 EST
    From: Scott Cyphers <sr.ehpyc@SPEECH.MIT.EDU>

    In Symbolics 3670 Release 6.1, IP-TCP 29.13, Zoo 9.0,
    Experimental Spire-Macros 9.2, Attribute 5.16, Experimental Compute 6.1,
    Audio 4.1, Speech-Attributes 4.8, Display 6.23, Speech-Layouts 6.4,
    Prtout 4.5, Experimental Versatec 6.0, Spire 16.0, Zoo-Spire 3.0,
    microcode TMC5-IO4-FPA-COLOR-MIC 336, FEP 127, FEP0:>v127-lisp.flod(2),
    FEP0:>v127-loaders.flod(2), FEP0:>v127-tests.flod(2),
    FEP0:>v127-debug.flod(1), FEP0:>v127-info.flod(2), on Lisp Machine Yogi:

    Is it intentional that the Common Lisp defstruct doesn't allow for byte
    fields?

I have pointed out this defficiency myself; it sometimes makes it hard
to write system code in Common Lisp (syntax).

    In the Zetalisp implementation, I think that if :type is :fixnum (or
    maybe :32-bit or something of that sort), then it makes more sense to
    use %logdpb and %logldb than ldb and dpb, at least on the part of the
    word where it makes a difference.  A type of :positive-integer or
    something like that could be used when you really do want to use
    bignums.

I've thought of this one too.  It's more restrictive than what you say.
:FIXNUM should only allow byte fields that fit in a fixnum, and should
barf if you try to specify a byte field out of range.  A type of
:INTEGER would use LDB/DPB and bignums can arrise.  (Note that :FIXNUM
implies machine-dependent knowledge of word widths, which could lead to
non-portable code.)

    (defstruct (id :conc-name (:type :fixnum))
      ((site (byte 8. 24.))
       (number (byte 24. 0.))))

20-Dec-85 10:20:30-EST,1383;000000000000
Received: from MC.LCS.MIT.EDU by MIT-OZ via Chaosnet; 20 Dec 85 10:20-EST
Received: from SCRC-STONY-BROOK.ARPA by MC.LCS.MIT.EDU 20 Dec 85 09:16:32 EST
Received: from CONCORD.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 379315; Fri 20-Dec-85 09:13:47-EST
Date: Fri, 20 Dec 85 09:14 EST
From: Bernard S. Greenberg <BSG@SCRC-STONY-BROOK.ARPA>
Subject: bug in Zmail
To: Hewitt@MIT-XX.ARPA, BUG-LISPM@OZ.AI.MIT.EDU
In-Reply-To: <851218200143.7.HEWITT@DUE-PROCESS.AI.MIT.EDU>
Message-ID: <851220091436.1.BSG@CONCORD.SCRC.Symbolics.COM>

    Date: Wed, 18 Dec 85 20:01 EST
    From: Carl Hewitt <Hewitt@MIT-XX.ARPA>

    In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.2,
    AISite 11.4, microcode TMC5-MIC 336, FEP 127, FEP0:>v127-lisp.flod(2),
    FEP0:>v127-loaders.flod(2), FEP0:>v127-debug.flod(1),
    FEP0:>v127-info.flod(2), on Due Process:

    For some reason the file _ZMAIL_TXT.1 is never around when
    ZMAIL wants to delete it so I keep getting the following error
    message. Even if I create a file with this name the problem comes
    back!

    >>Error: File not found
	     For XX:PS:<HEWITT>MAIL._ZMAIL_TXT.1
    While in the function (:METHOD FS:HOST-UNIT :COMMAND)  FS:DELETE-CHAOS  (:METHOD FS:QFILE-ACCESS-PATH :DELETE)
Like perhaps you're reading your mail from two different Lisp Machines?

21-Dec-85 16:42:23-EST,936;000000000000
Received: from BUDDY.AI.MIT.EDU by MIT-OZ via Chaosnet; 21 Dec 85 16:41-EST
Date: Sat, 21 Dec 85 16:43 EST
From: Henry Lieberman <Henry@OZ.AI.MIT.EDU>
Subject: mailer -- glurgh
To: David Vinayak Wallace <GUMBY@MIT-MC.ARPA>
cc: BUG-LISPM@OZ.AI.MIT.EDU, Bug-Oz@OZ.AI.MIT.EDU
In-Reply-To: <[MIT-MC.ARPA].757552.851217.GUMBY>
Message-ID: <851221164310.3.HENRY@BUDDY.AI.MIT.EDU>


        There's also no such host as OZ.AI.MIT.EDU anywhere, yet.

    I'm a spaz.  OZ.AI.MIT.EDU appears in the chaos host table.  Of
    course, people outside MIT still can't reply to the message.

Given that this is so bad, is there a way to tell ZMail and Babyl
to put "Henry@MIT-MC" in the Reply-To: field of outgoing messages 
so that when outside recipients use the reply operation to reply
to a message I send, it will work.  There's no excuse for sending
out headers that can't be replied to.  I've already lost mail this
way.

21-Dec-85 20:30:59-EST,1538;000000000000
Mail-From: CJL created at 21-Dec-85 20:30:41
Date: Sat, 21 Dec 1985  20:30 EST
Message-ID: <CJL.12169003131.BABYL@MIT-OZ>
From: Chris Lindblad <CJL@MIT-OZ>
To:   INFO-LISPM-MIT@MIT-OZ
Subject: New world loads availiable for Symbolics machines.

If you have been having Namespace problems (!) on your Symbolics lispms
lately, like not being able to refer to OZ and getting random
notifications about machines getting deleted from the MIT namespace, you
probably are running an old world load that will cause you problems, and
you need to get a new world load on your machine.

If you are using an AI lab machine, you should be running at least the
world AI-6-1-B.load. This load is on most of the lab machines, but not
all. You can easily get this world on your machine by typing
(dis:get-distribution), and then rebooting when it's done.

If you're not using an AI lab machine, but are using a MIT machine, you
need to use the :Copy World command to get a new world load on your
machine. If your machine has the new fep system installed in it (version
127), then you want to copy the world MIT-6-1-C.load from JIMI, which is
an incremental save from the distribution world Release-6-1.load, which
you copy from one of many machines. If you don't have new fep proms in
your machine yet, copy the world MIT-6-1-B.load from JIMI. You should
arrange with your service rep to get V127 Fep proms installed in your
machine as soon as possible. See the Release 6.1 patch notes for
information about the new FEP proms.
22-Dec-85 07:01:38-EST,1438;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 22 Dec 85 07:01-EST
Received: from REAGAN.AI.MIT.EDU by MC.LCS.MIT.EDU via Chaosnet; 22 DEC 85  07:05:03 EST
Received: from MIT-MORRISON.ARPA by MIT-REAGAN.ARPA via CHAOS with CHAOS-MAIL id 18017; Sun 22-Dec-85 07:03:02-EST
Date: Sun, 22 Dec 85 07:02 EST
From: jcma@MIT-MC.ARPA
Subject: Package Lossage In Zwei Package
To: BUG-LISPM@MIT-REAGAN.ARPA
Message-ID: <851222070233.6.JCMA@MIT-MORRISON.ARPA>

In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.2,
AISite 11.5, Experimental RELATUS 145.40, microcode TMC5-MIC 336,
FEP 127, FEP0:>v127-lisp.flod(2), FEP0:>v127-loaders.flod(2),
FEP0:>v127-debug.flod(1), FEP0:>v127-info.flod(2), on Lisp Machine Jim Morrison:

mode line was:

;;; -*- Mode: LISP; PACKAGE: ZWEI; FONTS: CPTFONT, CPTFONTI, CPTFONTB; -*-

I had to put these package prefixes in to get the binary to load without
blowing out because :eval-when is not a know function!

USER:
(EVAL-WHEN (LOAD EVAL)
  ZWEI:(SET-COMTAB-RETURN-UNDO
	 *STANDARD-COMTAB*
	 NIL
	 ;;meta-x binding
	 '(("Cancel Watch" . COM-CANCELL-WATCH)
	   ("Set Watch Interval" . COM-SET-WATCH-INTERVAL)
	   ("Set Watch Priority" . COM-SET-WATCH-PRIORITY)
	   ("Show Watch Status" . COM-SHOW-WATCH-STATUS)
	   ("Show Watch Notifications" . COM-SHOW-WATCH-NOFICATIONS)
	   ("Start Watch" . COM-START-WATCHING)
	   ("Watch User" . COM-WATCH-USER)
	   )))
22-Dec-85 07:16:57-EST,800;000000000000
Received: from MORRISON.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 22 Dec 85 07:16-EST
Date: Sun, 22 Dec 85 07:18 EST
From: John C. Mallery <jcma@MIT-MC.ARPA>
Subject: FEP File Names
To: BUG-LISPM@OZ.AI.MIT.EDU
Message-ID: <851222071827.1.JCMA@MIT-MORRISON.ARPA>

In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.2,
AISite 11.5, Experimental RELATUS 145.40, microcode TMC5-MIC 336,
FEP 127, FEP0:>v127-lisp.flod(2), FEP0:>v127-loaders.flod(2),
FEP0:>v127-debug.flod(1), FEP0:>v127-info.flod(2), on Lisp Machine Jim Morrison:

like FEP:>Relatus*.boot.1 seem to be losers.  You can write them and
view them, but you can't edit them.  I suspect it is getting confused
trying to treat * as a wild card.  If you can't edit them, then you
probably shouldn't be able to write them.
22-Dec-85 07:44:54-EST,1204;000000000000
Received: from MORRISON.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 22 Dec 85 07:44-EST
Date: Sun, 22 Dec 85 07:46 EST
From: John C. Mallery <jcma@MIT-MC.ARPA>
Subject: Incremental Disk Saving & GC & Turbos
To: BUG-LISPM@OZ.AI.MIT.EDU
Message-ID: <851222074623.1.JCMA@MIT-MORRISON.ARPA>

In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.2,
AISite 11.5, Experimental RELATUS 145.40, microcode TMC5-MIC 336,
FEP 127, FEP0:>v127-lisp.flod(2), FEP0:>v127-loaders.flod(2),
FEP0:>v127-debug.flod(1), FEP0:>v127-info.flod(2), on Lisp Machine Jim Morrison:

There is no useful discussion of how the static GCs interact with the
IDS feature in the release notes or the sage documentation.

* How do I accomplish the equivalent of SI:FULL-GC for my incremental
band (which is about 14000 blocks)? (Don't tell me I don't want to
unless I get something better (see below))

* A related question is how does this interact with "turbo charging" of
the system world?  

If the system load is turboed, I obviously don't want to GC it with
full-gc as that would impair performance.  But, I need to do something,
so I gues you have to make the turbo charger available for user IDS
loads.
22-Dec-85 07:49:06-EST,984;000000000000
Received: from MORRISON.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 22 Dec 85 07:49-EST
Date: Sun, 22 Dec 85 07:50 EST
From: John C. Mallery <jcma@MIT-MC.ARPA>
Subject: Incremental Disk Save of Personal Environment
To: BUG-LISPM@OZ.AI.MIT.EDU
Message-ID: <851222075036.2.JCMA@MIT-MORRISON.ARPA>

In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.2,
AISite 11.5, Experimental RELATUS 145.40, microcode TMC5-MIC 336,
FEP 127, FEP0:>v127-lisp.flod(2), FEP0:>v127-loaders.flod(2),
FEP0:>v127-debug.flod(1), FEP0:>v127-info.flod(2), on Lisp Machine Jim Morrison:

An obvious thing to do with IDS is to keep my init system in an IDS load
so I can boot directly into my environment (IDS size of my init is 3500
blocks).  Unfortunately, I don't see an simple hooks for me to prevent
disksave from running the logout initializations and undoing at my
LOGIN-SETQs and LOGIN-EVALs ....  Other hooks that realize I am already
logged in when I boot would also be helpful.
22-Dec-85 15:24:02-EST,1502;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 22 Dec 85 15:23-EST
Received: from SCRC-STONY-BROOK.ARPA by MC.LCS.MIT.EDU 22 Dec 85 15:20:17 EST
Received: from JUBJUB.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 380393; Sun 22-Dec-85 14:56:50-EST
Date: Sun, 22 Dec 85 14:57 EST
From: Christopher Garrigues <7thSon@SCRC-STONY-BROOK.ARPA>
Subject: mailer -- glurgh
To: Henry@OZ.AI.MIT.EDU
cc: GUMBY@MIT-MC.ARPA, BUG-LISPM@OZ.AI.MIT.EDU, Bug-Oz@OZ.AI.MIT.EDU,
    7thSon@SCRC-STONY-BROOK.ARPA
In-Reply-To: <851221164310.3.HENRY@BUDDY.AI.MIT.EDU>
Message-ID: <851222145700.3.7THSON@JUBJUB.SCRC.Symbolics.COM>

    Date: Sat, 21 Dec 85 16:43 EST
    From: Henry Lieberman <Henry@OZ.AI.MIT.EDU>


	    There's also no such host as OZ.AI.MIT.EDU anywhere, yet.

	I'm a spaz.  OZ.AI.MIT.EDU appears in the chaos host table.  Of
	course, people outside MIT still can't reply to the message.

    Given that this is so bad, is there a way to tell ZMail and Babyl
    to put "Henry@MIT-MC" in the Reply-To: field of outgoing messages 
    so that when outside recipients use the reply operation to reply
    to a message I send, it will work.  There's no excuse for sending
    out headers that can't be replied to.  I've already lost mail this
    way.

Try this in your zmail-init file:

(DEFTEMPLATE USER-TRANSMIT-TEMPLATE
  (:TYPE :TRANSMIT)
  (:header-field :reply-to (format nil "~A@MIT-MC" si:*user*))
  (:STANDARD-MESSAGE-ID))

22-Dec-85 15:54:32-EST,1620;000000000000
Received: from XX.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 22 Dec 85 15:54-EST
Date: Sun, 22 Dec 1985  15:43 EST
Message-ID: <SRA.12169213058.BABYL@XX.LCS.MIT.EDU>
From: Rob Austein <SRA@MIT-XX>
To:   Henry@OZ.AI.MIT.EDU
Cc:   BUG-LISPM@OZ.AI.MIT.EDU, Bug-Oz@OZ.AI.MIT.EDU, GUMBY@MC.LCS.MIT.EDU,
      7thSon@SCRC-STONY-BROOK.ARPA
Subject: mailer -- glurgh
In-reply-to: Msg of 22 Dec 1985  14:57-EST from Christopher Garrigues <7thSon@SCRC-STONY-BROOK.ARPA>

Actually, there is a MF (Mail Forwarding) entry in the domain system
for OZ.AI.MIT.EDU already.  This is the correct thing.  Unfortunately,
since nobody's mailer has started using this stuff yet it doesn't do
any good.  It does seem kind of premature to be leaving off the %OZ@MC
at this stage of the game.  If somebody has recently hacked OZ's
MMAILR not to do this, it was probably a mistake.  Otherwise, there is
a Babyl switch you can set (Babyl Parser Control Options, set to 7, I
think) which will tell MMAILR to do rewrite your headers the same as
it would for messages composed by MM.  I like this feature because I
can compose messages as usual and let MMAILR worry about the religion
of the week concerning hostnames.  Some people will undoubtably think
this is a misfeature, of course, but you may want to try it.  I'm not
sure if OZ's BABYL and BABYLM will do this right; I remember having to
beat on XX's to get it to work but don't remember if I ever merged my
fixes into the standard sources.  Try it and see, I guess.  The code
is still a little broken for remails (3F command), but works most of
the time.

--Rob
23-Dec-85 06:51:33-EST,3297;000000000000
Received: from MOON.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 23 Dec 85 06:51-EST
Date: Mon, 23 Dec 85 06:53 EST
From: David M. J. Saslav <saz@OZ.AI.MIT.EDU>
Subject: control-x RUBOUT
To: BUG-LISPM@OZ.AI.MIT.EDU
Message-ID: <851223065335.9.SAZ@MOON.AI.MIT.EDU>

In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.2,
AISite 11.5, microcode TMC5-MIC 336, FEP 127, FEP0:>v127-lisp.flod(2),
FEP0:>v127-loaders.flod(2), FEP0:>v127-debug.flod(1),
FEP0:>v127-info.flod(2), on Lisp Machine Keith Moon:

When performed at beginning of buffer and cursor positioned on
space character

>>Error: The negative array length -1 is illegal.
While in the function MAKE-ARRAY  SI:SIMPLE-MAKE-ARRAY-TYPE-LL-FP-AREA  ZWEI:CREATE-LINE

MAKE-ARRAY:  (P.C. = 166)
   Arg 0 (SI:DIMENSIONS): -1
   Rest arg (SI:OPTIONS): (:TYPE ART-STRING :AREA 27 :LEADER-LENGTH 9 :LEADER-LIST NIL :FILL-POINTER NIL)
   Local 2 (SI:TYPE): ART-STRING
   Local 3 (SI:AREA): 27
   Local 4 (SI:LEADER-LIST): NIL
   Local 5 (SI:LEADER-LENGTH): 9
   Local 6 (FILL-POINTER): NIL
   Local 7 (SI:DISPLACED-TO): NIL
   Local 8 (SI:DISPLACED-INDEX-OFFSET): NIL
   Local 9 (NAMED-STRUCTURE-SYMBOL): NIL
   Local 10 (SI:INITIAL-VALUE): NIL
   Local 11 (SI:DISPLACED-CONFORMALLY): NIL
   Local 12 (SI:N-ELEMS): NIL
   Local 13 (ARRAY): NIL
   Local 14 (SI:INDEX-P): NIL
   Local 15 (SI:Q-P): NIL
   Local 16 (SI:N-WORDS): NIL
   Local 17 (SI:N-DIMS): NIL
   Local 18 (SI:TOTAL-SIZE): NIL

SI:SIMPLE-MAKE-ARRAY-TYPE-LL-FP-AREA:  (P.C. = 62)
   Arg 0 (LENGTH): -1
   Arg 1 (SI:TYPE): ART-STRING
   Arg 2 (SI:LEADER-LENGTH): 9
   Arg 3 (SI:LEADER-LIST): NIL
   Arg 4 (FILL-POINTER): NIL
   Arg 5 (SI:AREA): 27

ZWEI:CREATE-LINE:  (P.C. = 10)
   Arg 0 (ARRAY-TYPE): ART-STRING
   Arg 1 (ZWEI:SIZE): -1
   Arg 2 (ZWEI:NODE): #<KILL-RING-INTERVAL 7507475>

ZWEI:COPY-INTERVAL:  (P.C. = 46)
   Arg 0 (ZWEI:FROM-BP): (" Here's the latest schedule:" 1)
   Arg 1 (ZWEI:TO-BP): (" Here's the latest schedule:" 0 :NORMAL)
   Arg 2 (ZWEI:IN-ORDER-P): T
   Arg 3 (ZWEI:INTO-INTERVAL): #<KILL-RING-INTERVAL 7507475>

ZWEI:KILL-RING-SAVE-INTERVAL:  (P.C. = 132)
   Arg 0 (ZWEI:BP1): (" Here's the latest schedule:" 1)
   Arg 1 (ZWEI:BP2): (" Here's the latest schedule:" 0 :NORMAL)
   Arg 2 (ZWEI:IN-ORDER-P): T
   Arg 3 (ZWEI:FORWARDP): NIL

ZWEI:KILL-INTERVAL:  (P.C. = 70)
   Arg 0 (ZWEI:BP1): (" Here's the latest schedule:" 1)
   Arg 1 (ZWEI:BP2): (" Here's the latest schedule:" 0 :NORMAL)
   Arg 2 (ZWEI:IN-ORDER-P): T
   Arg 3 (ZWEI:FORWARDP): NIL
   --Defaulted args:--
   Arg 4 (ZWEI:EXPLICIT-P): NIL
   Arg 5 (ZWEI:SAVE-P): T

ZWEI:KILL-INTERVAL-ARG:  (P.C. = 16)
   Arg 0 (ZWEI:BP1): (" Here's the latest schedule:" 0 :NORMAL)
   Arg 1 (ZWEI:BP2): (" Here's the latest schedule:" 1)
   Arg 2 (ARG): -1

ZWEI:COM-BACKWARD-KILL-SENTENCE:  (P.C. = 14)

Rest of stack:
ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
ZWEI:MAKE-EXTENDED-COMMAND-INTERNAL:  (P.C. = 112)
Closure of ZWEI:MAKE-EXTENDED-COMMAND-INTERNAL:
ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 233)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 60)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 51)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
23-Dec-85 11:29:49-EST,670;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 23 Dec 85 11:29-EST
Received: from SCRC-STONY-BROOK.ARPA by MC.LCS.MIT.EDU 23 Dec 85 11:32:54 EST
Received: from PUFFIN.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 380708; Mon 23-Dec-85 11:30:13-EST
Date: Mon, 23 Dec 85 11:30 EST
From: smiller@SCRC-STONY-BROOK.ARPA
To: BUG-LISPM@OZ.AI.MIT.EDU
Subject: Incremental Disk Saving & GC & Turbos
References: <851222074623.1.JCMA@MIT-MORRISON.ARPA>
Message-ID: <851223113008.1.SMILLER@PUFFIN.SCRC.Symbolics.COM>

[The referenced message has been redirected:
    bug-lispm has been removed;
    bug-lmdoc has been added.]

26-Dec-85 14:56:55-EST,2326;000000000000
Received: from DUE-PROCESS.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 26 Dec 85 14:56-EST
Date: Thu, 26 Dec 85 15:00 EST
From: Carl Hewitt <Hewitt@MIT-XX.ARPA>
Subject: Thrown into FEP from ZMail
To: BUG-LISPM@OZ.AI.MIT.EDU
cc: Hewitt@MIT-XX.ARPA
Message-ID: <851226150034.7.HEWITT@DUE-PROCESS.AI.MIT.EDU>

In Symbolics 3600 Release 6.1, IP-TCP 29.13, microcode TMC5-MIC 336,
FEP 127, FEP0:>v127-lisp.flod(2), FEP0:>v127-loaders.flod(2),
FEP0:>v127-debug.flod(1), FEP0:>v127-info.flod(2), on Due Process:
Warm booted from: Main Zmail Window.

Folks,

While attempting to read my mail, I was thrown into the Fep. Show Status
showed:

FEP LBus Control: Doorbell Int Enb, Use Corrected Data, Ignore Double ECC
Error, Task 3 Dismiss
SEQUENCER Misc. Status: CTOS-came-from-IFU, Tsk-Stop, Errhalt-Sync

Macro PC/ (Even) 22430570

CPC   /	7161
OPC+0 / 51455		OPC+10/ 45541
OPC+1 / 51454		OPC+11/ 41446
OPC+2 / 52766		OPC+12/ 41560
OPC+3 / 40426		OPC+13/ 53043
OPC+4 / 40356		OPC+14/ 41411
OPC+5 / 45342		OPC+15/ 41137
OPC+6 / 43027		OPC+16/ 41136
OPC+7 /	40535		OPC+17/ 54000

Now, I tried to Load Fep FEP0:>v127-debug.flod, but was told by the FEP that I
was in error, that fep0:>v127-debug.flod didn't look like a file to load from
the FEP.

From what I can tell, (or from what %find-structure-header can tell), the big macro
address points into:
(:SOURCE-FILE-NAME #<LOGICAL-PATHNAME "SYS: L-COMPILER; PHASE-4">
   SI:DEFSTRUCT-SLOT (DISPATCH . COMPILER:DISPATCH-INSTRUCTION-ARRAY))

the CPC points to:
#<DTP-COMPILED-FUNCTION SI:INITIALIZE-STORAGE-ACCOUNT-FOR-WIRED-ARRAYS 15724>
which was called from within an array. Of course, the printer errors when
trying to print that array, specifically
"The AR-1 microcode ran into an ARRAY-WORD that was not a Fixnum." 
And, this was called from within: SI:PRINT-QUOTED-STRING (PC=64) [?]

I get noting out of the next address either.  But, the next one, 52766, is the
string I'll bet ZMail was trying to digest:

"To:  /"Carl R. Manning/" <CRM@MIT-OZ>".

next one, 40426, is a big array #<ART-Q-2039-3 11330>.
The remaining instructions, as least until the end of the first column, all
point to the same array...maybe their offsets.


We appreciate any assistance you could lend in this matter.

Cheers,

Carl E. Hewitt.
26-Dec-85 16:50:56-EST,574;000000000000
Received: from DUE-PROCESS.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 26 Dec 85 16:50-EST
Date: Thu, 26 Dec 85 16:45 EST
From: Carl Hewitt <Hewitt@MIT-XX.ARPA>
Subject: bug in Zmail
To: Bernard S. Greenberg <BSG@SCRC-STONY-BROOK.ARPA>
cc: Hewitt@MIT-XX.ARPA, BUG-LISPM@OZ.AI.MIT.EDU, Hewitt@MIT-XX.ARPA
In-Reply-To: <851220091436.1.BSG@CONCORD.SCRC.Symbolics.COM>
Message-ID: <851226164518.1.HEWITT@DUE-PROCESS.AI.MIT.EDU>

Bernie,

Thanks for the suggestion.  I will look out for reading my mail on
two different lisp machines in the future.

Cheers,

Carl
28-Dec-85 18:09:32-EST,753;000000000000
Mail-From: CJL created at 28-Dec-85 18:09:27
Date: Sat, 28 Dec 1985  18:09 EST
Message-ID: <CJL.12170812430.BABYL@MIT-OZ>
From: Chris Lindblad <CJL@OZ.AI.MIT.EDU>
To:   Carl Hewitt <Hewitt@XX.LCS.MIT.EDU>
Cc:   BUG-LISPM@OZ.AI.MIT.EDU
Subject: Debugging with new fep proms.
In-reply-to: Msg of 26 Dec 1985  15:00-EST from Carl Hewitt <Hewitt at MIT-XX.ARPA>

    Date: Thursday, 26 December 1985  15:00-EST
    From: Carl Hewitt <Hewitt at MIT-XX.ARPA>

    Now, I tried to Load Fep FEP0:>v127-debug.flod, but was told by the FEP that I
    was in error, that fep0:>v127-debug.flod didn't look like a file to load from
    the FEP.

I think now all you have to do is type "debug" to the fep, instead of
trying to load v127-debug.flod.
28-Dec-85 19:51:42-EST,1076;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 28 Dec 85 19:51-EST
Received: from REAGAN.AI.MIT.EDU by MC.LCS.MIT.EDU via Chaosnet; 28 DEC 85  19:55:58 EST
Received: from OZ.AI.MIT.EDU by MIT-REAGAN.ARPA via CHAOS with CHAOS-MAIL id 18314; Sat 28-Dec-85 19:55:55-EST
Received: from MORRISON.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 28 Dec 85 19:49-EST
Date: Sat, 28 Dec 85 19:51 EST
From: jcma@MIT-MC.ARPA
Subject: Server Predicate Message On Lispm Host Objects
To: BUG-LISPM@MIT-REAGAN.ARPA
Message-ID: <851228195156.1.JCMA@MIT-MORRISON.ARPA>

In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.2,
AISite 11.5, Experimental RELATUS 145.40, microcode TMC5-MIC 336,
FEP 127, FEP0:>v127-lisp.flod(2), FEP0:>v127-loaders.flod(2),
FEP0:>v127-debug.flod(1), FEP0:>v127-info.flod(2), on Lisp Machine Jim Morrison:

There should be a message on lispm host objects that tells if the machine is a
server or not.  I should not have to grovel this out of the property list.
Distinguishing namespace servers from file servers is also a good idea.
29-Dec-85 16:36:56-EST,4402;000000000000
Received: from ZERMATT.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 29 Dec 85 16:36-EST
Received: from SARAJEVO by ZERMATT via CHAOS with CHAOS-MAIL id 20401; Sun 29-Dec-85 16:36:56-EST
Date: Sun, 29 Dec 85 16:39 EST
From: Richard E. Zippel <RZ@MIT-ZERMATT.ARPA>
Subject: Color system
To: BUG-LISPM@MIT-ZERMATT.ARPA
Message-ID: <851229163920.1.RZ@SARAJEVO.MIT.EDU>

In Symbolics 3640 Release 6.1, IP-TCP 29.13, Macsyma 318.12,
6-1-Patches 1.2, MLSite 11.0, COLOR 135.50, COLOR-EXTENSIONS 4.6,
COLOR-EDITOR 4.1, COLOR-DEMO 68.7, IMAGES 56.21, COLOR-PALETTE 2.1,
Experimental Schema 103.2, microcode TMC5-IO4-ST506-MIC 336, FEP 127,
FEP0:>v127-lisp.flod(2), FEP0:>v127-loaders.flod(2),
FEP0:>v127-debug.flod(1), FEP0:>v127-info.flod(2), on Sarajevo:

I got this message immediately after typing ":Choose Color"
I havent' tried this in a freshly booted world but don't expect any
differences.  Looks like someone decided to change the format of
*color-palette* perhaps?

>>Error: Cannot coerce #<color  Red  r=100% g=0% b=0%> into a string
While in the function STRING  (:DEFUN-METHOD TV:MENU-ITEM-STRING)  (:DEFUN-METHOD TV:MENU-ITEM-STRING-WIDTH)

STRING:  (P.C. = 113)
   Arg 0 (SI:X): #<color  Red  r=100% g=0% b=0%>
   Local 1 (SI:STR): "Cannot coerce ~S into a string"

(:DEFUN-METHOD TV:MENU-ITEM-STRING):  (P.C. = 12)
   Arg 0 (SELF): #<MOMENTARY-MENU Momentary Menu 257 20746252 deactivated>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor TV:BASIC-MENU -- 30. IV's, 0. FL's 120270111>
   Arg 2 (TV:ITEM): #<color  Red  r=100% g=0% b=0%>

(:DEFUN-METHOD TV:MENU-ITEM-STRING-WIDTH):  (P.C. = 7)
   Arg 0 (SELF): #<MOMENTARY-MENU Momentary Menu 257 20746252 deactivated>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor TV:BASIC-MENU -- 30. IV's, 0. FL's 120270111>
   Arg 2 (TV:ITEM): #<color  Red  r=100% g=0% b=0%>
   --Defaulted args:--
   Arg 3 (TV:STOP-X): NIL

(:DEFUN-METHOD TV:MENU-MAX-WIDTH):  (P.C. = 15)
   Arg 0 (SELF): #<MOMENTARY-MENU Momentary Menu 257 20746252 deactivated>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor TV:BASIC-MENU -- 30. IV's, 0. FL's 120270111>
   Arg 2 (TV:IL): (#<color  Red  r=100% g=0% b=0%> #<color  Green  r=0% g=100% b=0%> #<color  Sky-blue  r=0% g=0% b=100%> #<color   Yellow  r=100% g=100% b=0%> #<color   Cyan  r=0% g=100% b=100%> #<color   Pink  r=100% g=0% b=100%>)

(:DEFUN-METHOD TV:MENU-DEDUCE-PARAMETERS):  (P.C. = 230)
   Arg 0 (SELF): #<MOMENTARY-MENU Momentary Menu 257 20746252 deactivated>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor TV:BASIC-MENU -- 30. IV's, 0. FL's 120270111>
   Arg 2 (TV:N-COLUMNS): NIL
   Arg 3 (TV:N-ROWS): NIL
   Arg 4 (TV:INSIDE-WIDTH): NIL
   Local 4 (TV:INSIDE-WIDTH): 210
   Arg 5 (TV:INSIDE-HEIGHT): NIL
   Arg 6 (TV:MAX-WIDTH): NIL
   Local 6 (TV:MAX-WIDTH): 210
   Arg 7 (TV:MAX-HEIGHT): NIL
   Local 7 (TV:MAX-HEIGHT): 997

(:DEFUN-METHOD TV:MENU-COMPUTE-GEOMETRY):  (P.C. = 24)
   Arg 0 (SELF): #<MOMENTARY-MENU Momentary Menu 257 20746252 deactivated>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor TV:BASIC-MENU -- 30. IV's, 0. FL's 120270111>
   Arg 2 (TV:DRAW-P): NIL
   --Defaulted args:--
   Arg 3 (TV:INSIDE-WIDTH): NIL
   Arg 4 (TV:INSIDE-HEIGHT): NIL

(:METHOD TV:BASIC-MENU :AFTER :INIT):  (P.C. = 12)
   Arg 0 (SELF): #<MOMENTARY-MENU Momentary Menu 257 20746252 deactivated>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor TV:BASIC-MENU -- 30. IV's, 0. FL's 120270111>
   Arg 2 (SI:OPERATION): :INIT
   Arg 3 (TV:INIT-PLIST): #<DTP-LOCATIVE 500212>

(:METHOD TV:MOMENTARY-MENU :COMBINED :INIT):  (P.C. = 113)
   Arg 0 (SELF): #<MOMENTARY-MENU Momentary Menu 257 20746252 deactivated>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor TV:MOMENTARY-MENU -- 1. IV's, 17. FL's 120270214>
   Arg 2 (SI:.OPERATION.): :INIT
   Rest arg (SI:.DAEMON-CALLER-ARGS.): (#<DTP-LOCATIVE 500212>)

Rest of stack:
TV:MAKE-WINDOW:  (P.C. = 66)
(:PROPERTY COLOR:CHOOSE-COLOR SI:CP-FUNCTION):  (P.C. = 21)  (from COLOR: COLOR-PALETTE; COLOR-PALETTE)
COLOR:CHOOSE-COLOR:  (P.C. = 5)  (from COLOR: COLOR-PALETTE; COLOR-PALETTE)
SI:*EVAL:  (P.C. = 401)
(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0):  (P.C. = 152)
TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
SI:LISP-COMMAND-LOOP:  (P.C. = 67)
SI:LISP-TOP-LEVEL1:  (P.C. = 5)
SI:LISP-TOP-LEVEL:  (P.C. = 7)
29-Dec-85 16:55:05-EST,1290;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 29 Dec 85 16:54-EST
Received: from TWEETY-PIE.MIT.EDU by MC.LCS.MIT.EDU via Chaosnet; 29 DEC 85  16:59:27 EST
Date: Sun, 29 Dec 85 16:21 EST
From: Webster Dove <dove@MIT-BUGS-BUNNY.ARPA>
Subject: qfile trusts everybody
To: BUG-LISPM@OZ.AI.MIT.EDU
Message-ID: <851229162116.7.DOVE@MIT-TWEETY-PIE.ARPA>

In Symbolics 3600 Release 6.1, IP-TCP 29.13,
microcode TMC5-IO4-FPA-COLOR-MIC 336, on Lisp Machine Tweety Pie:

I noticed that qfile in 6.1 failed to use (chaos:host-trusted-p ...).
The problem appears to be a missing ":trusted-p" declaration in the
server definition.  I added the following to our local patches:

NETI:(LOOP FOR SERVER IN *SERVERS*
      WHEN (MEMQ (SERVER-PROTOCOL-NAME SERVER) ':(TCP-FTP QFILE NFILE NEW-FILE))
	DO (UNLESS (OR (MEMQ :TRUSTED-P (SERVER-ARGUMENT-DESCRIPTIONS SERVER))
		       (MEMQ :REJECT-UNLESS-TRUSTED (SERVER-PROPERTY-LIST SERVER)))
	     (TV:NOTIFY TV:SELECTED-WINDOW
			"~&bad server ~s~&  ~s~&  ~s~&
Trusts everybody.  Adding property (:reject-unless-trusted t) to server."
			(SERVER-PROTOCOL-NAME SERVER)
			(SERVER-PROPERTY-LIST SERVER) (SERVER-ARGUMENT-DESCRIPTIONS SERVER))
	     (PUTPROP (LOCF (SERVER-PROPERTY-LIST SERVER)) T :REJECT-UNLESS-TRUSTED)))
29-Dec-85 17:26:13-EST,767;000000000000
Received: from RIEMANN.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 29 Dec 85 17:26-EST
Date: Sun, 29 Dec 85 17:28 EST
From: Chris Lindblad <CJL@OZ.AI.MIT.EDU>
Subject: Hardcopy system not too extensible.
To: BUG-LISPM@OZ.AI.MIT.EDU
Message-ID: <851229172849.2.CJL@RIEMANN.AI.MIT.EDU>

In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.2,
AISite 11.5, PASCAL 25.39, microcode TMC5-MIC 336, FEP 127,
FEP0:>v127-lisp.flod(2), FEP0:>v127-loaders.flod(2),
FEP0:>v127-debug.flod(1), FEP0:>v127-info.flod(2), on Lisp Machine Georg Friedrich Bernhard Riemann:

In order to add a new hardcopy device, one has to redefine the functions 
press:cp-background-hardcopy, and si:hardcopy-file-type. It would be
nicer if the hardcopy stuff were more modular.

30-Dec-85 10:22:24-EST,2061;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 30 Dec 85 10:22-EST
Received: from REAGAN.AI.MIT.EDU by MC.LCS.MIT.EDU via Chaosnet; 30 DEC 85  10:26:34 EST
Received: from SCRC-STONY-BROOK.ARPA by MIT-REAGAN.ARPA via INTERNET with SMTP id 18415; 30 Dec 85 10:26:49-EST
Received: from NEPONSET.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 382783; Mon 30-Dec-85 10:14:50-EST
Date: Mon, 30 Dec 85 10:18 EST
From: David C. Plummer <DCP@SCRC-QUABBIN.ARPA>
Subject: Package Lossage In Zwei Package
To: jcma@MIT-MC.ARPA, BUG-LISPM@MIT-REAGAN.ARPA
In-Reply-To: <851222070233.6.JCMA@MIT-MORRISON.ARPA>
Message-ID: <851230101819.9.DCP@NEPONSET.SCRC.Symbolics.COM>

    Date: Sun, 22 Dec 85 07:02 EST
    From: jcma@MIT-MC.ARPA

    In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.2,
    AISite 11.5, Experimental RELATUS 145.40, microcode TMC5-MIC 336,
    FEP 127, FEP0:>v127-lisp.flod(2), FEP0:>v127-loaders.flod(2),
    FEP0:>v127-debug.flod(1), FEP0:>v127-info.flod(2), on Lisp Machine Jim Morrison:

    mode line was:

    ;;; -*- Mode: LISP; PACKAGE: ZWEI; FONTS: CPTFONT, CPTFONTI, CPTFONTB; -*-

    I had to put these package prefixes in to get the binary to load without
    blowing out because :eval-when is not a know function!

I assume there are some font changes in here you are not sending along
with the mail.  KEYWORD:EVAL-WHEN is certainly not a known function.
You might try si:unbin-file to figure out what the binary file thinks it
has in it.

    USER:
    (EVAL-WHEN (LOAD EVAL)
      ZWEI:(SET-COMTAB-RETURN-UNDO
	     *STANDARD-COMTAB*
	     NIL
	     ;;meta-x binding
	     '(("Cancel Watch" . COM-CANCELL-WATCH)
	       ("Set Watch Interval" . COM-SET-WATCH-INTERVAL)
	       ("Set Watch Priority" . COM-SET-WATCH-PRIORITY)
	       ("Show Watch Status" . COM-SHOW-WATCH-STATUS)
	       ("Show Watch Notifications" . COM-SHOW-WATCH-NOFICATIONS)
	       ("Start Watch" . COM-START-WATCHING)
	       ("Watch User" . COM-WATCH-USER)
	       )))


30-Dec-85 10:41:59-EST,2603;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 30 Dec 85 10:41-EST
Received: from SCRC-STONY-BROOK.ARPA by MC.LCS.MIT.EDU 30 Dec 85 10:45:47 EST
Received: from NEPONSET.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 382793; Mon 30-Dec-85 10:26:16-EST
Date: Mon, 30 Dec 85 10:29 EST
From: David C. Plummer <DCP@SCRC-QUABBIN.ARPA>
Subject: Incremental Disk Saving & GC & Turbos
To: John C. Mallery <jcma@MIT-MC.ARPA>, BUG-LispM@OZ.AI.MIT.EDU
In-Reply-To: <851222074623.1.JCMA@MIT-MORRISON.ARPA>
Message-ID: <851230102926.0.DCP@NEPONSET.SCRC.Symbolics.COM>

    Date: Sun, 22 Dec 85 07:46 EST
    From: John C. Mallery <jcma@MIT-MC.ARPA>

    In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.2,
    AISite 11.5, Experimental RELATUS 145.40, microcode TMC5-MIC 336,
    FEP 127, FEP0:>v127-lisp.flod(2), FEP0:>v127-loaders.flod(2),
    FEP0:>v127-debug.flod(1), FEP0:>v127-info.flod(2), on Lisp Machine Jim Morrison:

    There is no useful discussion of how the static GCs interact with the
    IDS feature in the release notes or the sage documentation.

I assume by 'static' you mean 'dynamic.'  It interacts poorly.  Very
poorly because all dynamic areas get flipped and are therefore 'new'
pages as far as IDS is concerned.  There is a transitivity proof that
this is NOT the case for the EGC.  I discussed this at the user's group
in SF last June.

    * How do I accomplish the equivalent of SI:FULL-GC for my incremental
    band (which is about 14000 blocks)? 
You turn on the EGC before loading your systems.  That's the best you
can do.  If you want the effect of si:full-gc, you might as well save a
full world because the incremental world will be almost as large.  Think
about it: you are creating new pages with new (copied) data at different
addresses and then you destroy old pages.  What pages are the same so
that the 'incremental' feature can have a hope of working.
    (Don't tell me I don't want to
    unless I get something better (see below))

    * A related question is how does this interact with "turbo charging" of
    the system world?  

    If the system load is turboed, I obviously don't want to GC it with
    full-gc as that would impair performance.  But, I need to do something,
    so I gues you have to make the turbo charger available for user IDS
    loads.  

Just as it isn't 'obvious' to you that dynamic GCs cause larger IDS
worlds, it isn't 'obvious' to me that doing a full-gc after turboing
impairs performance, because I have no idea what 'turboing' is.

30-Dec-85 10:48:07-EST,2062;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 30 Dec 85 10:48-EST
Received: from SCRC-STONY-BROOK.ARPA by MC.LCS.MIT.EDU 30 Dec 85 10:52:04 EST
Received: from NEPONSET.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 382801; Mon 30-Dec-85 10:32:48-EST
Date: Mon, 30 Dec 85 10:36 EST
From: David C. Plummer <DCP@SCRC-QUABBIN.ARPA>
Subject: Incremental Disk Save of Personal Environment
To: John C. Mallery <jcma@MIT-MC.ARPA>, BUG-LISPM@OZ.AI.MIT.EDU
In-Reply-To: <851222075036.2.JCMA@MIT-MORRISON.ARPA>
Message-ID: <851230103613.2.DCP@NEPONSET.SCRC.Symbolics.COM>

    Date: Sun, 22 Dec 85 07:50 EST
    From: John C. Mallery <jcma@MIT-MC.ARPA>

    In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.2,
    AISite 11.5, Experimental RELATUS 145.40, microcode TMC5-MIC 336,
    FEP 127, FEP0:>v127-lisp.flod(2), FEP0:>v127-loaders.flod(2),
    FEP0:>v127-debug.flod(1), FEP0:>v127-info.flod(2), on Lisp Machine Jim Morrison:

    An obvious thing to do with IDS is to keep my init system in an IDS load
    so I can boot directly into my environment (IDS size of my init is 3500
    blocks).  Unfortunately, I don't see an simple hooks for me to prevent
    disksave from running the logout initializations and undoing at my
    LOGIN-SETQs and LOGIN-EVALs ....  Other hooks that realize I am already
    logged in when I boot would also be helpful.

An IDS save is just like any other save.  It may not be you that logs in
next time.  What this really means are there are two parts of your
'environment'.  The easy part is all the login-setqs.  The harder part
is loading all the functions that comprise that environment.  My init
file (not compiled!) looks like this:
	(login-forms ...)
	(unless (y-or-n-p "Keep going? ")
	  (stream-copy-until-eof standard-input #'si:null-stream))
	...load environment...
You could put a
	(when (fboundp 'setup-jcmas-environment)
	  (setup-jcmas-environment))
after the login forms to do things that require your environment to be
loaded.

30-Dec-85 11:36:35-EST,1392;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 30 Dec 85 11:36-EST
Received: from SCRC-QUABBIN.ARPA by MC.LCS.MIT.EDU 30 Dec 85 11:40:59 EST
Received: from NEPONSET.SCRC.Symbolics.COM by SCRC-QUABBIN.ARPA via CHAOS with CHAOS-MAIL id 231576; Mon 30-Dec-85 11:30:10-EST
Date: Mon, 30 Dec 85 11:40 EST
From: David C. Plummer <DCP@SCRC-QUABBIN.ARPA>
Subject: Debugging with new fep proms.
To: Chris Lindblad <CJL@OZ.AI.MIT.EDU>,
    Carl Hewitt <Hewitt@XX.LCS.MIT.EDU>
cc: BUG-LISPM@OZ.AI.MIT.EDU
In-Reply-To: <CJL.12170812430.BABYL@MIT-OZ>
Message-ID: <851230114019.2.DCP@NEPONSET.SCRC.Symbolics.COM>

    Date: Sat, 28 Dec 1985  18:09 EST
    From: Chris Lindblad <CJL@OZ.AI.MIT.EDU>

	Date: Thursday, 26 December 1985  15:00-EST
	From: Carl Hewitt <Hewitt at MIT-XX.ARPA>

	Now, I tried to Load Fep FEP0:>v127-debug.flod, but was told by the FEP that I
	was in error, that fep0:>v127-debug.flod didn't look like a file to load from
	the FEP.

    I think now all you have to do is type "debug" to the fep, instead of
    trying to load v127-debug.flod.

That's right.  The only people who should ever need to do Load FEP are
the FEP developers, and even we don't do that anymore because the prom
is frozen.

Hewitt was also trying to decode the OPCs as macropcs.  The
documentation quite clearly says to use dbg:decode-micro-pc on those
items.

30-Dec-85 13:52:23-EST,1858;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 30 Dec 85 13:52-EST
Received: from SCRC-STONY-BROOK.ARPA by MC.LCS.MIT.EDU 30 Dec 85 13:01:44 EST
Received: from PEACE.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 382946; Mon 30-Dec-85 12:51:31-EST
Date: Mon, 30 Dec 85 12:54 EST
From: Charles Hornig <Hornig@SCRC-RIVERSIDE.ARPA>
Subject: qfile trusts everybody
To: Webster Dove <dove@MIT-BUGS-BUNNY.ARPA>, BUG-LISPM@OZ.AI.MIT.EDU
In-Reply-To: <851229162116.7.DOVE@MIT-TWEETY-PIE.ARPA>
Message-ID: <851230125429.2.HORNIG@PEACE.SCRC.Symbolics.COM>

    Date: Sun, 29 Dec 85 16:21 EST
    From: Webster Dove <dove@MIT-BUGS-BUNNY.ARPA>

    In Symbolics 3600 Release 6.1, IP-TCP 29.13,
    microcode TMC5-IO4-FPA-COLOR-MIC 336, on Lisp Machine Tweety Pie:

    I noticed that qfile in 6.1 failed to use (chaos:host-trusted-p ...).
    The problem appears to be a missing ":trusted-p" declaration in the
    server definition.  I added the following to our local patches:

I can't speak for NFile or QFile.  TCP-FTP does not reject untrusted
connections, but accepts them, gives a 451 reply, and disconnects.  I
considered this better than just rejecting the connection with no
reason.

    NETI:(LOOP FOR SERVER IN *SERVERS*
	  WHEN (MEMQ (SERVER-PROTOCOL-NAME SERVER) ':(TCP-FTP QFILE NFILE NEW-FILE))
	    DO (UNLESS (OR (MEMQ :TRUSTED-P (SERVER-ARGUMENT-DESCRIPTIONS SERVER))
			   (MEMQ :REJECT-UNLESS-TRUSTED (SERVER-PROPERTY-LIST SERVER)))
		 (TV:NOTIFY TV:SELECTED-WINDOW
			    "~&bad server ~s~&  ~s~&  ~s~&
    Trusts everybody.  Adding property (:reject-unless-trusted t) to server."
			    (SERVER-PROTOCOL-NAME SERVER)
			    (SERVER-PROPERTY-LIST SERVER) (SERVER-ARGUMENT-DESCRIPTIONS SERVER))
		 (PUTPROP (LOCF (SERVER-PROPERTY-LIST SERVER)) T :REJECT-UNLESS-TRUSTED)))

30-Dec-85 14:34:44-EST,1754;000000000000
Received: from ZERMATT.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 30 Dec 85 14:34-EST
Received: from SCRC-YUKON.ARPA by ZERMATT.MIT.EDU via INTERNET with SMTP id 20458; 30 Dec 85 14:34:04-EST
Received: from WHITE.SWW.Symbolics.COM by SCRC-YUKON.ARPA via CHAOS with CHAOS-MAIL id 183273; Mon 30-Dec-85 14:31:35-EST
Received: from PURPLE.SWW.Symbolics.COM by WHITE.SWW.Symbolics.COM via CHAOS with CHAOS-MAIL id 163842; Mon 30-Dec-85 11:35:44-PST
Date: Mon, 30 Dec 85 11:38 PST
From: DDYER@SCRC-RIVERSIDE.ARPA
Subject: Color system
To: Richard E. Zippel <RZ@MIT-ZERMATT.ARPA>, BUG-LISPM@MIT-ZERMATT.ARPA
Fcc: W:>ddyer>mail.sent
In-Reply-To: <851229163920.1.RZ@SARAJEVO.MIT.EDU>
Message-ID: <851230113826.4.DDYER@PURPLE.SWW.Symbolics.COM>
Fonts: CPTFONT, CPTFONTB, CPTFONTI

    Date: Sun, 29 Dec 85 16:39 EST
    From: Richard E. Zippel <RZ@MIT-ZERMATT.ARPA>

    In Symbolics 3640 Release 6.1, IP-TCP 29.13, Macsyma 318.12,
    6-1-Patches 1.2, MLSite 11.0, COLOR 135.50, COLOR-EXTENSIONS 4.6,
    COLOR-EDITOR 4.1, COLOR-DEMO 68.7, IMAGES 56.21, COLOR-PALETTE 2.1,
    Experimental Schema 103.2, microcode TMC5-IO4-ST506-MIC 336, FEP 127,
    FEP0:>v127-lisp.flod(2), FEP0:>v127-loaders.flod(2),
    FEP0:>v127-debug.flod(1), FEP0:>v127-info.flod(2), on Sarajevo:

    I got this message immediately after typing ":Choose Color"
    I havent' tried this in a freshly booted world but don't expect any
    differences.  Looks like someone decided to change the format of
    *color-palette* perhaps?

    >>Error: Cannot coerce #<color  Red  r=100% g=0% b=0%> into a string
    While in the function STRING  (:DEFUN-METHOD TV:MENU-ITEM-STRING)  (:DEFUN-METHOD TV:MENU-ITEM-STRING-WIDTH)

You need to load system MENU


30-Dec-85 15:57:20-EST,1125;000000000000
Received: from ZERMATT.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 30 Dec 85 15:56-EST
Received: from SCRC-YUKON.ARPA by ZERMATT.MIT.EDU via INTERNET with SMTP id 20466; 30 Dec 85 15:56:00-EST
Received: from WHITE.SWW.Symbolics.COM by SCRC-YUKON.ARPA via CHAOS with CHAOS-MAIL id 183315; Mon 30-Dec-85 15:53:42-EST
Received: from GREEN.SWW.Symbolics.COM by WHITE.SWW.Symbolics.COM via CHAOS with CHAOS-MAIL id 163879; Mon 30-Dec-85 12:57:26-PST
Date: Mon, 30 Dec 85 12:57 PST
From: Craig W. Reynolds <cwr@WHITE.SWW.Symbolics.COM>
Subject: Color system
To: Richard E. Zippel <RZ@MIT-ZERMATT.ARPA>, BUG-LISPM@MIT-ZERMATT.ARPA
cc: cwr@WHITE, jrd@WHITE
In-Reply-To: <851229163920.1.RZ@SARAJEVO.MIT.EDU>
Message-ID: <851230125729.0.CWR@GREEN.SWW.Symbolics.COM>
Fonts: CPTFONT, CPTFONTI, CPTFONTCB

    Date: Sun, 29 Dec 85 16:39 EST
    From: Richard E. Zippel <RZ@MIT-ZERMATT.ARPA>

[I don't have the fancy "redistribute" tool, but:

  this message has been redirected
    BUG-LISPM has been removed
      GHOST had already been added by JRD  (Hi Jim!)
	BUG-COLOR-EDITOR and COLOR-EDITOR have been added.]

30-Dec-85 17:15:30-EST,981;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 30 Dec 85 17:15-EST
Received: from DUE-PROCESS.AI.MIT.EDU by MC.LCS.MIT.EDU via Chaosnet; 30 DEC 85  17:19:58 EST
Date: Mon, 30 Dec 85 17:17 EST
From: Carl Hewitt <Hewitt@MIT-XX.ARPA>
Subject: reporting state of the corpus delicti
To: BUG-LISPM@OZ.AI.MIT.EDU
cc: Hewitt@MIT-XX.ARPA
Message-ID: <851230171735.8.HEWITT@CHAOS|13036>

In Symbolics 3600 Release 6.1, IP-TCP 29.13, microcode TMC5-MIC 336,
FEP 127, FEP0:>v127-lisp.flod(2), FEP0:>v127-loaders.flod(2),
FEP0:>v127-debug.flod(1), FEP0:>v127-info.flod(2), on CHAOS|13036:

Is there any chance that Symbolics could program the FEP to dump the machine
state someplace on the disk so that it could then easily and accurately be
mailed off to maintenance personel to get the machine fixed?  That way I
would not always have to sit there and type it in by hand, after I have
copied it from the screen onto [UGH!] a scrap of paper.

Thanks,

Carl
30-Dec-85 17:29:44-EST,3458;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 30 Dec 85 17:29-EST
Received: from DUE-PROCESS.AI.MIT.EDU by MC.LCS.MIT.EDU via Chaosnet; 30 DEC 85  17:34:08 EST
Date: Mon, 30 Dec 85 17:31 EST
From: Carl Hewitt <Hewitt@MIT-XX.ARPA>
Subject: bug in zmail saving mail
To: BUG-LISPM@OZ.AI.MIT.EDU
Message-ID: <851230173143.9.HEWITT@CHAOS|13036>

In Symbolics 3600 Release 6.1, IP-TCP 29.13, microcode TMC5-MIC 336,
FEP 127, FEP0:>v127-lisp.flod(2), FEP0:>v127-loaders.flod(2),
FEP0:>v127-debug.flod(1), FEP0:>v127-info.flod(2), on CHAOS|13036:

I tried to save my Zmail buffers.

>>Error: The object #<TENEX-INBOX-BUFFER "XX:PS:<HEWITT>MAIL.TXT.1" 11675334> received a :UPDATE-OPTIONS-IN-FILE message, which went unclaimed.
         The rest of the message was ()
While in the function ZWEI:MSG-BUFFER-SAVE-P  ZWEI:SAVE-MAIL-BUFFER  ZWEI:ZMAIL-SAVE-ALL

ZWEI:MSG-BUFFER-SAVE-P:  (P.C. = 57)
   Arg 0 (ZWEI:BUFFER): #<TENEX-INBOX-BUFFER "XX:PS:<HEWITT>MAIL.TXT.1" 11675334>
   Local 1 (ZWEI:SAVE-P): NIL
   Local 2 (ZWEI:EXPUNGE-P): NIL

ZWEI:SAVE-MAIL-BUFFER:  (P.C. = 22)
   Arg 0 (ZWEI:BUFFER): #<TENEX-INBOX-BUFFER "XX:PS:<HEWITT>MAIL.TXT.1" 11675334>
   --Defaulted args:--
   Arg 1 (ZWEI:FOR-FINISH): NIL

ZWEI:ZMAIL-SAVE-ALL:  (P.C. = 56)

ZWEI:COM-ZMAIL-SAVE:  (P.C. = 16)

ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
   Arg 0 (ZWEI:COMMAND): ZWEI:COM-ZMAIL-SAVE
   Arg 1 (ZWEI:CHAR): (:MENU ("Save" . ZWEI:COM-ZMAIL-SAVE) 1 #<ZMAIL-MAIN-COMMAND-MENU-PANE Zmail Main Command Menu Pane 5 43207055 exposed>)
   --Defaulted args:--
   Arg 2 (ZWEI:PREFIX-CHAR): NIL
   Arg 3 (ZWEI:HOOK-LIST): NIL

ZWEI:ZMAIL-COMMAND-EXECUTE:  (P.C. = 6)
   Arg 0: ZWEI:COM-ZMAIL-SAVE

(:INTERNAL ZWEI:ZMAIL-COMMAND-LIST 0 (:MENU)):  (P.C. = 10)
   Arg 0 (SI:**DEFSELECT-OP**): :MENU
   Arg 1 (ZWEI:ITEM): ("Save" . ZWEI:COM-ZMAIL-SAVE)
   Arg 2 (ZWEI:CH): 1
   Arg 3 (ZWEI:WINDOW): #<ZMAIL-MAIN-COMMAND-MENU-PANE Zmail Main Command Menu Pane 5 43207055 exposed>

ZWEI:ZMAIL-COMMAND-LIST:  (P.C. = 12)
   Arg 0 (SI:OPERATION): :MENU
   Rest arg (SI:SELECT-METHOD-ARGS): (("Save" . ZWEI:COM-ZMAIL-SAVE) 1 #<ZMAIL-MAIN-COMMAND-MENU-PANE Zmail Main Command Menu Pane 5 43207055 exposed>)

(:METHOD ZWEI:ZMAIL-FRAME :PROCESS-SPECIAL-COMMAND):  (P.C. = 16)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 43200325 exposed>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-FRAME -- 66. IV's, 20. FL's 146565661>
   Arg 2 (SI:OPERATION): :PROCESS-SPECIAL-COMMAND
   Rest arg (ARGS): (:MENU ("Save" . ZWEI:COM-ZMAIL-SAVE) 1 #<ZMAIL-MAIN-COMMAND-MENU-PANE Zmail Main Command Menu Pane 5 43207055 exposed>)

(:METHOD ZWEI:ZMAIL-FRAME :COMMAND-LOOP):  (P.C. = 136)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 43200325 exposed>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-FRAME -- 66. IV's, 20. FL's 146565661>
   Arg 2 (SI:OPERATION): :COMMAND-LOOP

(:METHOD ZWEI:ZMAIL-FRAME :COMBINED :COMMAND-LOOP):  (P.C. = 70)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 43200325 exposed>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-FRAME -- 66. IV's, 20. FL's 146565661>
   Arg 2 (SI:.OPERATION.): :COMMAND-LOOP
   Rest arg (SI:.DAEMON-CALLER-ARGS.): NIL

ZWEI:ZMAIL-PROCESS-TOP-LEVEL:  (P.C. = 105)
   Arg 0 (ZWEI:WINDOW): #<ZMAIL-FRAME Main Zmail Window 43200325 exposed>

SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
   --Defaulted args:--
   Arg 0 (IGNORE): NIL
31-Dec-85 16:02:17-EST,956;000000000000
Received: from ZERMATT.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 31 Dec 85 16:02-EST
Received: from SNOWBIRD by ZERMATT via CHAOS with CHAOS-MAIL id 20617; Tue 31-Dec-85 16:01:58-EST
Date: Tue, 31 Dec 85 16:03 EST
From: Chris Terman <terman@MIT-VAX.ARPA>
Subject: common-lisp gethash bug
To: BUG-LISPM@MIT-ZERMATT.ARPA
Message-ID: <851231160333.1.CJT@SNOWBIRD.MIT.EDU>

In Symbolics 3640 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.2,
MLSite 10.0, Experimental Macsyma 318.12, Experimental Schema 100.6,
microcode TMC5-IO4-ST506-MIC 336, FEP 127, FEP0:>v127-lisp.flod(2),
FEP0:>v127-loaders.flod(2), FEP0:>v127-debug.flod(1),
FEP0:>v127-info.flod(2), on Snowbird:

In the current common lisp package, gethash returns only a single
value while the description on pg 284 of Steele reads:

  "gethash actually returns two values, the second being a predicate
   value that is true if an entry was found, and false if no entry
   was found."
31-Dec-85 16:28:43-EST,1462;000000000000
Received: from ZERMATT.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 31 Dec 85 16:28-EST
Received: from SCRC-STONY-BROOK.MIT.EDU by ZERMATT.MIT.EDU via INTERNET with SMTP id 20619; 31 Dec 85 16:28:32-EST
Received: from PEACE.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 383849; Tue 31-Dec-85 16:26:30-EST
Date: Tue, 31 Dec 85 16:29 EST
From: Charles Hornig <Hornig@SCRC-RIVERSIDE.ARPA>
Subject: common-lisp gethash bug
To: Chris Terman <terman@MIT-VAX.ARPA>, BUG-LISPM@MIT-ZERMATT.ARPA
In-Reply-To: <851231160333.1.CJT@SNOWBIRD.MIT.EDU>
Message-ID: <851231162937.8.HORNIG@PEACE.SCRC.Symbolics.COM>

    Date: Tue, 31 Dec 85 16:03 EST
    From: Chris Terman <terman@MIT-VAX.ARPA>

    In Symbolics 3640 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.2,
    MLSite 10.0, Experimental Macsyma 318.12, Experimental Schema 100.6,
    microcode TMC5-IO4-ST506-MIC 336, FEP 127, FEP0:>v127-lisp.flod(2),
    FEP0:>v127-loaders.flod(2), FEP0:>v127-debug.flod(1),
    FEP0:>v127-info.flod(2), on Snowbird:

    In the current common lisp package, gethash returns only a single
    value while the description on pg 284 of Steele reads:

      "gethash actually returns two values, the second being a predicate
       value that is true if an entry was found, and false if no entry
       was found."

Thank you for this report.  The problem you describe has been fixed and
the fix will be distributed in a future release.

 1-Jan-86 03:04:48-EST,3091;000000000000
Mail-From: MAIL-MAN created at  1-Jan-86 03:01:15
Date:  1-Jan-86 03:01:15
From: The Wizard of OZ <Birthday-Wizard@OZ.AI.MIT.EDU>
To: CADR <LISPM@OZ.AI.MIT.EDU>

                                               YY
                                              YYYY            YY
HHHHH         HHHHH                             YYY          YYYY
HHHHH         HHHHH                  PP PPPPPP   YYY         YYY
  HHH         HHH                     PPP    PP   YYY       YYY
  HHH         HHH    AAAAA  PP PPPPPP  PP    PP    YYY     YYY
  HHH         HHH   AAAAAAA  PPP    PP PP    PP     YYY   YYY
  HHH         HHH  AA     AA  PP    PP PP    PP      YYY YYY
  HHH         HHH  AA     AA  PP    PP PPPPPPP        YYYYY
  HHHHHHHHHHHHHHH  AA     AA  PP    PP PP             YYYY
  HHHHHHHHHHHHHHH  AA     AA  PPPPPPP  PP            YYYY   -------
  HHHHHHHHHHHHHHH  AAAAAAAAA  PP       PP           YYYY    -------
  HHH         HHH  AAAAAAAAA  PP       PP          YYYY     -------
  HHH         HHH  AA     AA  PP       PP         YYYY
  HHH         HHH  AA     AA  PP       PP        YYYY
  HHH         HHH  AA     AA  PP       PP      YYYYYY
  HHH         HHH  AA     AA  PP       PP     YYYYYYY
  HHH         HHH             PP       PP    YYYYYYY
HHHHH         HHHHH           PP       PP   YYYYYYY
HHHHH         HHHHH           PP       PP  YYYYYYY
                                            YYYYY
BBBBBBBBBBBBB                                YYY
BBBBBBBBBBBBBB                                Y
 BBBB       BBB    II                                   YYY             YYY
  BB         BB    II               DDDDDDDDDDDDD       YYYY           YYYY
  BB         BB                     DDDDDDDDDDDDDD        YY            YY
  BB         BB   III  RRR RRRR        DDD      DDD      A YY          YY
  BB         BB    II   RRRR  RR       DDD      DDD     AAA YY        YY
  BB        BBB    II    RRR           DDD      DDD    AAAAA YY      YY
  BBB     BBBB     II    RR            DDD      DDD   AAAAAAA YY    YY
  BBBBBBBBBBB      II    RR            DDD      DDD  AA     AA YY  YY
  BBBBBBBBB        II    RR            DDD      DDD  AA     AA  YYYY
  BBBBBBBBBBB      II    RR            DDD      DDD  AAAAAAAAA   YYY
  BBB     BBBB    IIII  RRRR           DDD      DDD  AAAAAAAAA   YYY
  BB        BBB             HHH        DDD      DDD  AA     AA   YYY
  BB         BBB    TT     HHHH        DDD      DDD  AA     AA   YYY
  BB         BBB    TT     HH          DDD      DDD  AA     AA   YYY
  BB          BBB TTTTTT   HH          DDD      DDD  AA     AA   YYY
  BB          BBB   TT     HH          DDD      DDD              YYY
  BB          BBB   TT     HHHHHHHH  DDDDDDDDDDDDD               YYY
  BB         BBB    TT     HH     HH DDDDDDDDDDDD               YYYY
 BBBB       BBBB    TT     HH     HH                           YYYY
BBBBBBBBBBBBBBB     TT  TT HH     HH    YYYYYYYYYYYYYYYYYYYYYYYYYY
BBBBBBBBBBBBBB       TTTT  HH     HH    YYYYYYYYYYYYYYYYYYYYYYYY
                          HHHH   HHHH   YYYYYYYYYYYYYYYYYYYYYY
 1-Jan-86 22:28:47-EST,3678;000000000000
Received: from LENNON.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 1 Jan 86 22:28-EST
Date: Wed, 1 Jan 86 22:28 EST
From: Chris Lindblad <CJL@OZ.AI.MIT.EDU>
Subject: Suggested extensions to si:hardcopy-file-type and si:cp-background-hardcopy
To: BUG-LISPM@OZ.AI.MIT.EDU
Message-ID: <860101222856.1.CJL@LENNON.AI.MIT.EDU>

In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.4,
AISite 11.7, microcode TMC5-MIC 336, FEP 127, FEP0:>v127-lisp.flod(2),
FEP0:>v127-loaders.flod(2), FEP0:>v127-debug.flod(1),
FEP0:>v127-info.flod(2), on Lisp Machine John Lennon:

I suggest that si:hardcopy-file-type and si:cp-backgroung-hardcopy be
changed so that they are more extensible to more hardcopy formats.
Essentially I suggest adding a little more checking in the "otherwise"
clauses of the selectq forms, so that if the hardcopy format is defined,
then do the right thing with it.

(defun hardcopy-file-type (file-canonical-type)
  (selectq file-canonical-type
    (:plt :suds-plot)
    (:xgp :xgp)
    (:lgp :lgp)
    (:press :press)
    (otherwise
     (if (get file-canonical-type 'hardcopy-format)
	 file-canonical-type
	 :text))))

press:
(defun cp-background-hardcopy (&rest args
			       &aux
			       (banner (get (locf args) :banner-message))
			       (copies (get (locf args) :copies))
			       (delete-after-printing (get (locf args) :delete))
			       (file-alist (get (locf args) :source))
			       (fonts (get (locf args) :fonts))
			       (headings (get (locf args) :running-head))
			       (landscape (eq (get (locf args) :format) :landscape))
			       (*user-hardcopy-other-options*)
			       (dev (get (locf args) :printer))
			       (path (get (locf args) :pathname)))
  (when banner
    (setq *user-hardcopy-other-options*
	  (append *user-hardcopy-other-options* `(:banner-string ,banner))))
  (condition-case-if *hardcopy-abort-background-if-error* (error)
      (let* ((standard-output #'si:null-stream))
	(loop for (hardcopy-mode . files-to-do) in file-alist
	      do
	  (selectq hardcopy-mode
	    (:text
	     (loop for file in files-to-do
		   do (lexpr-funcall #'si:hardcopy-text-file file dev
				     ;; fonts assumed in form '((list name face size)...)
				     :press-fonts fonts
				     :interpret-font-changes t
				     :copies copies
				     :page-headings headings
				     :landscape-p landscape
				     *user-hardcopy-other-options*)))
	    (:suds-plot
	     (lexpr-funcall #'dplt:hardcopy-plt-files files-to-do dev
			    *user-hardcopy-other-options*))
	    (:xgp (loop for file in files-to-do
			do (lexpr-funcall #'si:hardcopy-xgp-file file dev
					  *user-hardcopy-other-options*)))
	    (:lgp (loop for file in files-to-do
			do (lexpr-funcall #'lgp:hardcopy-lgp-record-file file dev
					  *user-hardcopy-other-options*)))
	    (:press (loop for file in files-to-do
			  do (lexpr-funcall #'hardcopy-press-file file dev
					    ':copies copies
					    *user-hardcopy-other-options*)))
	    (otherwise
	     (if (get hardcopy-mode 'si:hardcopy-format)
		 (loop for file in files-to-do
			   do (lexpr-funcall #'si:hardcopy-file file dev
					     :format hardcopy-mode
					     *user-hardcopy-other-options*))
		 (ferror "Unknown hardcopy mode ~S." hardcopy-mode)))))
	(tv:notify nil "Printing of ~{~A~^, ~} has been sent to ~A."
		   path (send dev ':pretty-name))
	(when delete-after-printing
	  (loop for (nil . files-to-do) in file-alist
		do (loop for file in files-to-do
			 do (deletef file)))))
    ((fs:file-error sys:network-error)
     (tv:notify nil "Printing of ~{~A~^, ~} aborted due to error: ~~A~." path error))))
 2-Jan-86 03:05:46-EST,5644;000000000000
Received: from MOON.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 2 Jan 86 03:05-EST
Date: Thu, 2 Jan 86 03:04 EST
From: Chris Lindblad <CJL@OZ.AI.MIT.EDU>
Subject: CP bug
To: BUG-LISPM@OZ.AI.MIT.EDU
Message-ID: <860102030400.1.CJL@MOON.AI.MIT.EDU>

In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.4,
AISite 11.7, microcode TMC5-MIC 336, FEP 127, FEP0:>v127-lisp.flod(2),
FEP0:>v127-loaders.flod(2), FEP0:>v127-debug.flod(1),
FEP0:>v127-info.flod(2), on Lisp Machine Keith Moon:

I typed :Show Directory B:>sys>hardcopy>
This kind of error should not throw me in the debugger.

>>Error: The directory >sys>hardcopy does not exist.
         For B:>sys>hardcopy>*.*.*
While in the function (:METHOD FS:NFILE-SERVER-UNIT :WAIT-FOR-COMMAND)  (:METHOD FS:NFILE-SERVER-UNIT :SEND-AND-WAIT-FOR-COMMAND)  (:METHOD FS:NFILE-SERVER-UNIT :SEND-IN-COMMAND-CONDITION-ENVIRONMENT)

(:METHOD FS:NFILE-SERVER-UNIT :WAIT-FOR-COMMAND):  (P.C. = 65)
   Arg 0 (SELF): #<NFILE-SERVER-UNIT 10353106>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor FS:NFILE-SERVER-UNIT -- 15. IV's, 0. FL's 120223317>
   Arg 2 (SI:OPERATION): :WAIT-FOR-COMMAND
   Arg 3 (FS:TID-CONS-ARGS): ("T3801" :DIRECTORY "Directory" #<NFILE-DATA-CHANNEL I3721 15144664>)
   Local 4 (FS:DATA-CHANNEL): #<NFILE-DATA-CHANNEL I3721 15144664>
   Local 5 (FS:COMMAND-TID): "T3801"
   Local 6 (FS:COMMAND-NAME): :DIRECTORY
   Local 7 (FS:WHOSTATE): "Directory"
   Local 8 (FS:RESPONSE-ARGS): ("DNF" (:PATHNAME ">sys>hardcopy>*.*.*" :DIRECTORY-PATHNAME ">sys>hardcopy>") "The directory >sys>hardcopy does not exist.")
   Local 9 (FS:RESPONSE-NAME): :ERROR

(:METHOD FS:NFILE-SERVER-UNIT :SEND-AND-WAIT-FOR-COMMAND):  (P.C. = 40)
   Arg 0 (SELF): #<NFILE-SERVER-UNIT 10353106>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor FS:NFILE-SERVER-UNIT -- 15. IV's, 0. FL's 120223317>
   Arg 2 (SI:OPERATION): :SEND-AND-WAIT-FOR-COMMAND
   Arg 3 (FS:DATA): (:DIRECTORY "Directory" #<NFILE-DATA-CHANNEL I3721 15144664> "I3721" ">sys>hardcopy>*.*.*" (:DELETED) NIL)

(:METHOD FS:NFILE-SERVER-UNIT :SEND-IN-COMMAND-CONDITION-ENVIRONMENT):  (P.C. = 54)
   Arg 0 (SELF): #<NFILE-SERVER-UNIT 10353106>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor FS:NFILE-SERVER-UNIT -- 15. IV's, 0. FL's 120223317>
   Arg 2 (SI:OPERATION): :SEND-IN-COMMAND-CONDITION-ENVIRONMENT
   Arg 3 (FS:MESSAGE): :SEND-AND-WAIT-FOR-COMMAND
   Arg 4 (FS:DATA): (:DIRECTORY "Directory" #<NFILE-DATA-CHANNEL I3721 15144664> "I3721" ">sys>hardcopy>*.*.*" (:DELETED) NIL)

(:METHOD FS:NFILE-SERVER-UNIT :COMMAND):  (P.C. = 7)
   Arg 0 (SELF): #<NFILE-SERVER-UNIT 10353106>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor FS:NFILE-SERVER-UNIT -- 15. IV's, 0. FL's 120223317>
   Arg 2 (SI:OPERATION): :COMMAND
   Rest arg (FS:DATA): (:DIRECTORY "Directory" #<NFILE-DATA-CHANNEL I3721 15144664> "I3721" ">sys>hardcopy>*.*.*" (:DELETED) NIL)

FS:NFILE-KEYWORD-LIST-CALLER:  (P.C. = 165)
   Arg 0 (FS:INSTANCE): #<NFILE-SERVER-UNIT 10353106>
   Arg 1 (FS:CMDNAME): :DIRECTORY
   Arg 2 (FS:WHOSTATE): "Directory"
   Arg 3 (FS:DATA-CHANNEL): #<NFILE-DATA-CHANNEL I3721 15144664>
   Arg 4 (FS:CONSTANT-ARGS): ("I3721" ">sys>hardcopy>*.*.*" (:DELETED) NIL)
   Local 4 (FS:CONSTANT-ARGS): NIL
   Arg 5 (FS:KEYWORD-VALUE-PAIRS): NIL

(:METHOD FS:NFILE-ACCESS-PATH :DIRECTORY-LIST):  (P.C. = 66)
   Arg 0 (SELF): #<LMFS-NFILE-ACCESS-PATH B using NFILE 10346333>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor FS:NFILE-ACCESS-PATH -- 4. IV's, 2. FL's 146561447>
   Arg 2 (SI:OPERATION): :DIRECTORY-LIST
   Arg 3 (FS:PATHNAME): #<LMFS-PATHNAME "B:>sys>hardcopy>*.*.*">
   Arg 4 (FS:OPTIONS): (:SORTED :DELETED)
   Local 4 (FS:OPTIONS): (:DELETED)

(:METHOD FS:ACTIVE-PATHNAME-MIXIN :DIRECTORY-LIST):  (P.C. = 12)
   Arg 0 (SELF): #<LMFS-PATHNAME "B:>sys>hardcopy>*.*.*">
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor FS:ACTIVE-PATHNAME-MIXIN -- 1. IV's, 0. FL's 120157311>
   Arg 2 (SI:OPERATION): :DIRECTORY-LIST
   Arg 3 (FS:OPTIONS): (:SORTED :DELETED)

FS:DIRECTORY-LIST:  (P.C. = 114)
   Arg 0 (FS:FILENAME): #<LMFS-PATHNAME "B:>sys>hardcopy>*.*.*">
   Rest arg (FS:OPTIONS): (:SORTED :DELETED)

(:PROPERTY SI:COM-SHOW-DIRECTORY SI:CP-FUNCTION):  (P.C. = 103)
   Arg 0 (SI:PATHNAME): #<LMFS-PATHNAME "B:>sys>hardcopy>*.*.*">
   Arg 1 (SI:BEFORE): NIL
   Arg 2 (SI:ORDER): :STANDARD
   Arg 3 (SI:SINCE): NIL
   Arg 4 (SYS:SIZE): 0.

SI:COM-SHOW-DIRECTORY:  (P.C. = 34)
   Arg 0 (SI:PATHNAME): #<LMFS-PATHNAME "B:>sys>hardcopy>*.*.*">
   Rest arg: NIL

SI:*EVAL:  (P.C. = 401)
   Arg 0 (SI:FORM): (SI:COM-SHOW-DIRECTORY #<LMFS-PATHNAME "B:>sys>hardcopy>*.*.*">)
   Local 0 (SI:FORM): NIL
   --Defaulted args:--
   Arg 1 (SI:ENV): NIL
   Arg 2 (SI:HOOK): NIL

(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0.):  (P.C. = 152)
   Arg 0 (COMPILER:.LEXICAL-ENVIRONMENT-POINTER.): #<DTP-LOCATIVE 500047>

TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
   Arg 0 (TV:NEW-MODE): :BLAST
   Arg 1 (TV:STREAM): #:TERMINAL-IO-SYN-STREAM
   Arg 2 (TV:CONTINUATION): #<LEXICAL-CLOSURE (:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0.) 500054>

SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
   Arg 0 (SI:NAME): "Lisp Top Level"
   Arg 1 (SI:ABORT-FUNCTION): NIL
   Arg 2 (SI:READ-FUNCTION): NIL
   Arg 3 (SI:EVAL-FUNCTION): NIL
   Arg 4 (SI:PRINT-FUNCTION): NIL

SI:LISP-COMMAND-LOOP:  (P.C. = 67)
   Arg 0: #<LISP-LISTENER Lisp Listener 1 43200064 exposed>
   Rest arg: (:NAME "Lisp Top Level")

SI:LISP-TOP-LEVEL1:  (P.C. = 5)
   Arg 0 (SI:STREAM): #<LISP-LISTENER Lisp Listener 1 43200064 exposed>

SI:LISP-TOP-LEVEL:  (P.C. = 7)
 2-Jan-86 15:17:44-EST,650;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 2 Jan 86 15:17-EST
Date: Thu,  2 Jan 86 15:19:18 EST
From: Bill Long <WJL@MC.LCS.MIT.EDU>
To: BUG-LISPM@MC.LCS.MIT.EDU
Message-ID: <[MC.LCS.MIT.EDU].770982.860102.WJL>

Two simple questions (I hope):

1) How do you initialize the control stack to a larger size
when you know it will need to be larger?

2) I got the printer into an infinite loop and ended up with
the following error: "Bad stack specification 22107 passed to
stack-grower" for which there was no abort handler.  Is there
any way to recover from such an error short of rebooting?

(system 6.1)
-Bill Long
 2-Jan-86 15:45:09-EST,1664;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 2 Jan 86 15:45-EST
Received: from MEDIA-LAB by MC.LCS.MIT.EDU  2 Jan 86 15:47:07 EST
Received: by MEDIA-LAB (4.12/4.8)  id AA07693; Thu, 2 Jan 86 13:45:07 est
Date: Thu, 2 Jan 86 13:45:07 est
From: Jim Davis <jrd@MEDIA-LAB.MIT.EDU>
Message-Id: <8601021845.AA07693@MEDIA-LAB>
To: hoss@scrc-stony-brook
Subject: Unix TCP Dired shows Time Warp
Cc: bug-lispm@MEDIA-LAB.MIT.EDU

Xevious, Release 6.1, TCP 29.13

Consider this output, extracted from a Dired:

AMT: /local/lib/dictionary/words/*
  
  0 blocks in the files listed
      a.d                 74960(8)         09/08/86 22:52:00              root
      acclaim.d           78656(8)         09/08/86 22:52:00              root
      adduce.d            76377(8)         09/08/86 22:52:00              root
      afflict.d           74713(8)         09/08/86 22:52:00              root


The year should be 85.  I see that Common Lisp makes the same error.  Notice
that the Unix list extracted below does not include the year, but I assume
that the "ls" command omitted it from the output because it's the "most
recent" year, rather than because it doesn't know.

-rw-r--r--  1 root        74960 Sep  8 22:52 /local/lib/dictionary/words/a.d
-rw-r--r--  1 root        78656 Sep  8 22:52 /local/lib/dictionary/words/acclaim.d
-rw-r--r--  1 root        76377 Sep  8 22:52 /local/lib/dictionary/words/adduce.d
-rw-r--r--  1 root        74713 Sep  8 22:52 /local/lib/dictionary/words/afflict.d

This bug worries me but hasn't broken anything yet.  My apologies for not
using Meta-X Bug but as you know it's broken here.
 2-Jan-86 15:48:05-EST,1378;000000000000
Received: from GOLDILOCKS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 2 Jan 86 15:47-EST
Received: from GRIZZLY.MIT.EDU by MIT-GOLDILOCKS.ARPA via CHAOS with CHAOS-MAIL id 10917; Thu 2-Jan-86 15:47:46-EST
Date: Thu, 2 Jan 86 15:47 EST
From: Scott Cyphers <sr.ehpyc@SPEECH.MIT.EDU>
Subject: Common Lisp bytes
To: BUG-LISPM@MIT-GOLDILOCKS.ARPA
Message-ID: <860102154735.8.CYPHER@GRIZZLY.MIT.EDU>

In Symbolics 3600 Release 6.1, IP-TCP 29.13, Zoo 9.0,
Experimental Spire-Macros 9.2, Attribute 5.17, Experimental Compute 6.1,
Audio 4.1, Speech-Attributes 4.8, Display 6.23, Speech-Layouts 6.4,
Prtout 4.5, Experimental Versatec 6.0, Spire 16.0, Zoo-Spire 3.0,
microcode TMC5-MIC 336, FEP 127, FEP0:>v127-lisp.flod(2),
FEP0:>v127-loaders.flod(2), FEP0:>v127-debug.flod(1),
FEP0:>v127-info.flod(2), on Lisp Machine Grizzly:

According to CLTM, there are no restrictions on byte sizes for BYTE,
LDB, DPB, MASK-FIELD, and DEPOSIT-FIELD.

Also, it would be nice if something like (dpb -1 (byte +1e 4) 0) could
be made to work for when signs are important.

>>Error: The first argument (SIZE) to BYTE, 100, was of the wrong type.
         The function expected a valid number of bits for a byte.
While in the function BYTE  SI:*EVAL  (:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0)

BYTE:  (P.C. = 51)
   Arg 0 (ZETALISP-SYSTEM:SIZE): 100
   Arg 1 (SI:POSITION): 0
 2-Jan-86 20:03:58-EST,2794;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 2 Jan 86 20:03-EST
Received: from SCRC-STONY-BROOK.ARPA by MC.LCS.MIT.EDU  2 Jan 86 18:17:17 EST
Received: from THAMES.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 384685; Thu 2-Jan-86 17:05:49-EST
Date: Thu, 2 Jan 86 17:08 EST
From: Scott McKay <SWM@SCRC-QUABBIN.ARPA>
To: WJL@MC.LCS.MIT.EDU, BUG-LISPM@MC.LCS.MIT.EDU
In-Reply-To: <[MC.LCS.MIT.EDU].770982.860102.WJL>
Message-ID: <860102170848.9.SWM@THAMES.SCRC.Symbolics.COM>

    Date: Thu,  2 Jan 86 15:19:18 EST
    From: Bill Long <WJL@MC.LCS.MIT.EDU>

    Two simple questions (I hope):

    1) How do you initialize the control stack to a larger size
    when you know it will need to be larger?

There will be a :Set Stack Size CP command in the future.  In the
meanwhile, perhaps this will do:

(defun set-stack-size (stack-type size)
  (when (not (memq stack-type '(:control :bind :data)))
    (ferror "Bad stack type given"))
  (check-arg size (and ( size (selectq stack
				 (:control (+ 1024. control-stack-overflow-margin))
				 (:bind 100.)
				 (:data 0)))
		       (< size (// address-space-size 32.)))
	     "a positive integer that is not too small and not too large")
  (let ((current-size
	  (selectq stack
	    ;; The +32 in the next line is to allow for the size of this frame
	    ;; and the other frames required to perform the stack-group call.
	    (:control (+ (%pointer-difference (%stack-frame-pointer) %control-stack-low)
			 32.))
	    ;; The +3 in the next line is because of the WITHOUT-INTERRUPTS later
	    (:bind (+ (%pointer-difference %binding-stack-pointer %binding-stack-low)
		      3))
	    (:data (if (sg-data-stack-low %current-stack-group)
		       (1+ (%pointer-difference
			     (sg-data-stack-pointer %current-stack-group)
			     (sg-data-stack-low %current-stack-group)))
		     0)))))
    ;; Now set the stack size.  It's OK if there is no data stack
    (if (and (eq stack ':data)
	     (null (sg-data-stack-low %current-stack-group)))
	(si:grow-data-stack size)
      (without-interrupts
	(funcall stack-grower stack (- size current-size))))))

I can't say for sure whether or not this will blow your machine away in
6.1, but it works in the development system.  You should probably not
try this on a machine with anything important on it.

    2) I got the printer into an infinite loop and ended up with
    the following error: "Bad stack specification 22107 passed to
    stack-grower" for which there was no abort handler.  Is there
    any way to recover from such an error short of rebooting?

Some bugs have been fixed in the stack-grower since 6.1.  I have not
been able to reproduce this.

    (system 6.1)
    -Bill Long

 3-Jan-86 21:13:25-EST,2149;000000000000
Received: from GOLDILOCKS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 3 Jan 86 21:13-EST
Received: from SCRC-QUABBIN.ARPA by MIT-GOLDILOCKS.ARPA via INTERNET with SMTP id 11101; 3 Jan 86 21:14:26-EST
Received: from NEPONSET.SCRC.Symbolics.COM by SCRC-QUABBIN.ARPA via CHAOS with CHAOS-MAIL id 232441; Fri 3-Jan-86 11:06:41-EST
Date: Fri, 3 Jan 86 11:08 EST
From: David C. Plummer <DCP@SCRC-QUABBIN.ARPA>
Subject: Common Lisp bytes
To: Scott Cyphers <sr.ehpyc@SPEECH.MIT.EDU>,
    BUG-LISPM@MIT-GOLDILOCKS.ARPA
In-Reply-To: <860102154735.8.CYPHER@GRIZZLY.MIT.EDU>
Message-ID: <860103110827.1.DCP@NEPONSET.SCRC.Symbolics.COM>

    Date: Thu, 2 Jan 86 15:47 EST
    From: Scott Cyphers <sr.ehpyc@SPEECH.MIT.EDU>

    In Symbolics 3600 Release 6.1, IP-TCP 29.13, Zoo 9.0,
    Experimental Spire-Macros 9.2, Attribute 5.17, Experimental Compute 6.1,
    Audio 4.1, Speech-Attributes 4.8, Display 6.23, Speech-Layouts 6.4,
    Prtout 4.5, Experimental Versatec 6.0, Spire 16.0, Zoo-Spire 3.0,
    microcode TMC5-MIC 336, FEP 127, FEP0:>v127-lisp.flod(2),
    FEP0:>v127-loaders.flod(2), FEP0:>v127-debug.flod(1),
    FEP0:>v127-info.flod(2), on Lisp Machine Grizzly:

    According to CLTM, there are no restrictions on byte sizes for BYTE,
    LDB, DPB, MASK-FIELD, and DEPOSIT-FIELD.

    Also, it would be nice if something like (dpb -1 (byte +1e 4) 0) could
    be made to work for when signs are important.

    >>Error: The first argument (SIZE) to BYTE, 100, was of the wrong type.
	     The function expected a valid number of bits for a byte.
    While in the function BYTE  SI:*EVAL  (:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0)

    BYTE:  (P.C. = 51)
       Arg 0 (ZETALISP-SYSTEM:SIZE): 100
       Arg 1 (SI:POSITION): 0

Yes, this is a wart in our system.  If it were easy to fix, we would.
The reason it is hard is that many old programs (including system code)
have things like
	(ldb 1003 xyzzy)
in them, most of the time without the #o!.  We are aware of this and
hope to fix it when we have the resources to (a) make more incompatible
changes to the system and (b) find all the places affected.

 3-Jan-86 21:45:29-EST,4452;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 3 Jan 86 21:45-EST
Received: from MEDIA-LAB by MC.LCS.MIT.EDU  3 Jan 86 21:41:41 EST
Received: from MC.LCS.MIT.EDU (2c00030a) by MEDIA-LAB (4.12/4.8)  id AA27037; Fri, 3 Jan 86 21:44:06 est
Received: from SCRC-STONY-BROOK.ARPA by MC.LCS.MIT.EDU  3 Jan 86 21:32:16 EST
Received: from PARAKEET.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 384748; Thu 2-Jan-86 18:13:47-EST
Date: Thu, 2 Jan 86 18:15 EST
From: Kyra Lowther <toto@SCRC-YUKON.ARPA>
Subject: Unix TCP Dired shows Time Warp
To: jrd@MEDIA-LAB.MIT.EDU
Cc: hoss@SCRC-STONY-BROOK.ARPA, bug-lispm@MEDIA-LAB.MIT.EDU
In-Reply-To: <8601021845.AA07693@MEDIA-LAB>
Message-Id: <860102181542.5.TOTO@PARAKEET.SCRC.Symbolics.COM>

    Date: Thu, 2 Jan 86 13:45:07 est
    From: Jim Davis <jrd@MEDIA-LAB.MIT.EDU>

    Xevious, Release 6.1, TCP 29.13

    Consider this output, extracted from a Dired:

    AMT: /local/lib/dictionary/words/*
  
      0 blocks in the files listed
	  a.d                 74960(8)         09/08/86 22:52:00              root
	  acclaim.d           78656(8)         09/08/86 22:52:00              root
	  adduce.d            76377(8)         09/08/86 22:52:00              root
	  afflict.d           74713(8)         09/08/86 22:52:00              root


    The year should be 85.  I see that Common Lisp makes the same error.  Notice
    that the Unix list extracted below does not include the year, but I assume
    that the "ls" command omitted it from the output because it's the "most
    recent" year, rather than because it doesn't know.

    -rw-r--r--  1 root        74960 Sep  8 22:52 /local/lib/dictionary/words/a.d
    -rw-r--r--  1 root        78656 Sep  8 22:52 /local/lib/dictionary/words/acclaim.d
    -rw-r--r--  1 root        76377 Sep  8 22:52 /local/lib/dictionary/words/adduce.d
    -rw-r--r--  1 root        74713 Sep  8 22:52 /local/lib/dictionary/words/afflict.d

    This bug worries me but hasn't broken anything yet.  My apologies for not
    using Meta-X Bug but as you know it's broken here.

This problem appears to be on AMT.  Here's what I discovered when doing the same
things for my directory:

Dired from lispm:

MEDIA-LAB: /u2/toto/*
  
  0 blocks in the files listed
      .cshrc                327(8)         09/09/86 12:59:00              toto
      .cshrc.bak            300(8)         08/05/86 04:42:00              toto
      .forward               15(8)         12/11/86 12:13:00              toto
      .login                296(8)         09/17/86 17:11:00              toto
***   .login.bak            292(8)         06/27/85 00:00:00              toto ***
      .logout                25(8)         10/11/86 10:56:00              toto
***   .logout.bak            39(8)         04/30/85 00:00:00              toto ***
      .mailrc               315(8)         09/18/86 12:00:00              toto
      .mailrc.bak           307(8)         08/21/86 03:06:00              toto
      .msgsrc                 4(8)         12/18/86 17:45:00              toto
      .newsrc              3483(8)         10/08/86 14:39:00              toto
***   .plan.bak              31(8)         05/01/85 00:00:00              toto ***


"ls" from vax:

total 146
drwxr-xr-x  5 toto         1024 Jan  2 18:07 ./
drwxr-xr-x 56 root         1024 Dec 23 15:10 ../
-rw-r--r--  1 toto          327 Sep  9 12:59 .cshrc
-rw-r--r--  1 toto          300 Aug  5 04:42 .cshrc.bak
-rw-r--r--  1 toto           15 Dec 11 12:13 .forward
-rw-r--r--  1 toto          296 Sep 17 17:11 .login
-rw-r--r--  1 toto          292 Jun 27  1985 .login.bak  ***
-rw-r--r--  1 toto           25 Oct 11 10:56 .logout
-rw-r--r--  1 toto           39 Apr 30  1985 .logout.bak ***
-rw-r--r--  1 toto          315 Sep 18 12:00 .mailrc
-rw-r--r--  1 toto          307 Aug 21 03:06 .mailrc.bak
-rw-r--r--  1 toto            4 Dec 18 17:45 .msgsrc
-rw-rw-r--  1 toto         3483 Oct  8 14:39 .newsrc
-rw-r--r--  1 toto           31 May  1  1985 .plan.bak   ***

Notice that in the starred "ls" entries, the year is being stored instead of
the time - and those are the ones which know about the year but not the time
in Dired.  It looks like your directory just happened to be consistent.  I 
tried this all on a vax here running 4.2 Unix and it knew about both the time 
and the year.


Kyra Lowther


 4-Jan-86 11:06:34-EST,1468;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 4 Jan 86 11:06-EST
Received: from MEDIA-LAB by MC.LCS.MIT.EDU  4 Jan 86 10:41:38 EST
Received: from mit-ems.ARPA (6005512) by MEDIA-LAB (4.12/4.8)  id AA09425; Sat, 4 Jan 86 10:42:51 est
Received: by mit-ems.ARPA (4.12/4.8)  id AA05758; Sat, 4 Jan 86 10:41:36 est
Date: Sat, 4 Jan 86 10:41:36 est
From: Steven Haflich <smh@mit-ems.ARPA>
Message-Id: <8601041541.AA05758@mit-ems.ARPA>
To: jrd%MEDIA-LAB.MIT.EDU@mit-ems.ARPA, toto%MEDIA-LAB.MIT.EDU@mit-ems.ARPA
Subject: Re:  Unix TCP Dired shows Time Warp
Cc: bug-lispm%MEDIA-LAB.MIT.EDU@mit-ems.ARPA, hoss@SCRC-STONY-BROOK.ARPA

JRD was right when he guessed that ls **prints** a different date
format for recent files, omitting the year in favor of providing time
of day.  The Unix file system **stores** times as a 32-bit count of
seconds since Jan 1 1970.  The following one liner inefficiently but
consistently reports these times accurate to the minute:

AMT> tar cf - /u2/toto/.log* | tar tvf -

rw-r--r-- 48/20    296 Sep 17 17:11 1985 /u2/toto/.login
rw-r--r-- 48/20    292 Jun 27 05:51 1985 /u2/toto/.login.bak
rw-r--r-- 48/20     25 Oct 11 10:56 1985 /u2/toto/.logout
rw-r--r-- 48/20     39 Apr 30 00:23 1985 /u2/toto/.logout.bak

Probably what's happening is that DIRED makes inappropriate defaults in
its attempt to fill in the "missing" year in the "ls -l" listing the
file server requests from the foreign Unix host.
 4-Jan-86 14:13:40-EST,1769;000000000000
Received: from GOLDILOCKS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 4 Jan 86 14:13-EST
Date: Sat, 4 Jan 86 14:16 EST
From: sr.ehpyc@SPEECH.MIT.EDU
Sender: Lisp-Machine@MIT-REAGAN.ARPA
Subject: Bad printer code
To: BUG-LISPM@MIT-GOLDILOCKS.ARPA
Message-ID: <860104141636.3.LISP-MACHINE@MIT-GOLDILOCKS.ARPA>

In Symbolics 3600 Release 6.1, IP-TCP 29.13, Mailer 43.6,
Experimental Versatec 6.0, Print 38.16, Experimental Versatec-Spool 7.0,
Experimental Zoo 8.2, Experimental Zoo-Keeper 8.0,
Experimental Versatec-Driver 1.0, Experimental Spire-Macros 9.2,
microcode TMC5-MIC 336, on Lisp Machine Goldilocks:

Disassembly of (:method printer :hardcopy-device-stream) shows that it
includes something like

(selectq (send self :interface)
  (:serial (get-hardcopy-device-stream
	     interface-options
	     misc-options
	     (get (send self :get :type) 'si:default-serial-interface-options)
	     #'make-serial-stream
	     'printer-serial-stream))
  (:elp (get-hardcopy-device-stream
	  nil
	  misc-options
	  (get (send self :get :type) 'si:default-elp-interface-options)
	  #'make-elp-stream
	  'elp-stream))
  (otherwise (send self :no-hardcopy-hardware-stream)))

There are more ways to interface a printer than :serial and :elp, such
as :unibus.  I don't think that method has any business being on
something as generic as printer -- it should be on LGP-printer or
something like that, or else it should look something like

(let ((interface (send self :interface)))
  (get-hardcopy-device-stream
    interface-options
    misc-options
    (get (get (send self :get :type) interface) 'interface-options)
    (get interface 'stream-maker)
    (get interface 'stream-flavor)))

which I think is more like how it used to be.
 4-Jan-86 15:37:30-EST,1508;000000000000
Received: from GOLDILOCKS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 4 Jan 86 15:37-EST
Received: from BOO-BOO.MIT.EDU by MIT-GOLDILOCKS.ARPA via CHAOS with CHAOS-MAIL id 11111; Sat 4-Jan-86 15:40:40-EST
Date: Sat, 4 Jan 86 15:40 EST
From: Scott Cyphers <sr.ehpyc@SPEECH.MIT.EDU>
Subject: :DIRECTION :IO in open doesn't lock a file
To: BUG-LISPM@MIT-GOLDILOCKS.ARPA
Message-ID: <860104154030.1.CYPHER@BOO-BOO.MIT.EDU>

In Symbolics 3675 Release 6.1, IP-TCP 29.13, Zoo 9.0,
Experimental Spire-Macros 9.2, Attribute 5.17, Experimental Compute 6.1,
Audio 4.1, Speech-Attributes 4.8, Display 6.23, Speech-Layouts 6.4,
Prtout 4.5, Experimental Versatec 6.0, Spire 16.0, Zoo-Spire 3.0,
microcode IFU-IO4-FPA-XSQ-COLOR-MIC 336, FEP 127,
FEP0:>V127-LISP.FLOD(2), FEP0:>V127-LOADERS.FLOD(3),
FEP0:>V127-INFO.FLOD(2), FEP0:>V127-TESTS.FLOD(2),
FEP0:>V127-DEBUG.FLOD(1), FEP0:>V127-DISK.FLOD(4), on Lisp Machine Boo Boo:

The S1 open should lock the file causing S2 to give an error, since :IO
includes :OUTPUT.  The correct thing happens for all combinations of
directions of :OUTPUT and :INPUT I tried.  Also, there is no mention
anywhere in the documentation that the locking even occurs for LMFS.

(with-open-file (s "goldy:>cypher>test" :direction :output))
(with-open-file (s1 "goldy:>cypher>test"
		    :direction :io :direct t :if-exists :overwrite
		    :if-does-not-exist :create)
  (with-open-file (s2 "goldy:>cypher>test"
		      :direction :io :direct t :if-exists :overwrite)))
	
 4-Jan-86 18:04:14-EST,1020;000000000000
Received: from GAUSS.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 4 Jan 86 18:03-EST
Date: Sat, 4 Jan 86 18:04 EST
From: Chris Lindblad <CJL@OZ.AI.MIT.EDU>
Subject: printer objects aren't completely updated from the namespace 
To: BUG-LISPM@OZ.AI.MIT.EDU
Message-ID: <860104180442.1.CJL@GAUSS.AI.MIT.EDU>

In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.4,
AISite 11.7, microcode TMC5-MIC 336, FEP 127, FEP0:>v127-lisp.flod(2),
FEP0:>v127-loaders.flod(2), FEP0:>v127-debug.flod(1),
FEP0:>v127-info.flod(2), Rodent Free Namespace Editor, on Lisp Machine Karl Friedrich Gauss:

This method or something like it should exist
	
(DEFMETHOD (MULTIPLE-FONT-HARDCOPY-DEVICE-MIXIN :CHANGE-OF-ATTRIBUTES) ()
  (LET* ((PLIST (SEND SELF :PROPERTY-LIST))
	 (NEW-DEFAULT-FONT (GET (LOCF PLIST) :DEFAULT-FONT))
	 (NEW-HEADER-FONT (GET (LOCF PLIST) :HEADER-FONT)))
    (WHEN NEW-DEFAULT-FONT
      (SETQ DEFAULT-FONT NEW-DEFAULT-FONT))
    (WHEN NEW-HEADER-FONT
      (SETQ HEADER-FONT NEW-HEADER-FONT))))
 4-Jan-86 18:26:36-EST,2051;000000000000
Received: from REAGAN.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 4 Jan 86 18:26-EST
Date: Sat, 4 Jan 86 18:29 EST
From: CJL@OZ.AI.MIT.EDU
Sender: File-Server@MIT-REAGAN.ARPA
Subject: It would be nice if NETI:READ-OBJECT-FILE-AND-UPDATE was improved
To: BUG-LISPM@OZ.AI.MIT.EDU
Message-ID: <860104182932.1.FILE-SERVER@MIT-REAGAN.ARPA>

In Symbolics 3600 Release 6.1, IP-TCP 29.13, Mailer 43.6,
6-1-Patches 1.4, AISite 11.7, microcode TMC5-MIC 336, FEP 127,
FEP0:>v127-lisp.flod(1), FEP0:>v127-loaders.flod(1),
FEP0:>v127-debug.flod(1), FEP0:>v127-info.flod(1),
Network-Security patch, Update-Internet-Namespace patch,
Server-Finger patch, Inquir-update patch, Update-AI-Domain patch,
Rodent Free Namespace Editor, on Lisp Machine Ronald Reagan:

Can't this error be avoided a lot...

>>Error: Do not have a file to update PRINTER's in AI
While in the function NETI:READ-OBJECT-FILE-AND-UPDATE  SI:*EVAL  (:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0.)

NETI:READ-OBJECT-FILE-AND-UPDATE:  (P.C. = 24)  (from B:>sys>r6>network>namespace-local)
   Arg 0 (NETI:NAMESPACE): "AI"
   Local 0 (NETI:NAMESPACE): #<NAMESPACE AI 43300233>
   Arg 1 (NETI:CLASS-NAME): :PRINTER
   Local 2 (NETI:CLASS-FILE-ELEM): NIL

... if the function NETI:READ-OBJECT-FILE-AND-UPDATE were changed thusly:

;;; User interface function (run on primary server) to suck in new host table file (made
;;; by conversion program) and make an entry.
(DEFUN READ-OBJECT-FILE-AND-UPDATE (NAMESPACE CLASS-NAME)
  (UNLESS (TYPEP NAMESPACE 'NAMESPACE)
    (SETQ NAMESPACE (FIND-OBJECT-NAMED :NAMESPACE NAMESPACE)))
  (LET ((CLASS-FILE-ELEM (OR (ASSQ CLASS-NAME (RELOAD-FILE-INFORMATION NAMESPACE NIL))
			     (ASSQ :* (RELOAD-FILE-INFORMATION NAMESPACE NIL)))))
;;; add this extra form     
    (WHEN (NULL CLASS-FILE-ELEM)
      (FERROR "Do not have a file to update ~A's in ~A" CLASS-NAME NAMESPACE))
    (READ-OBJECT-FILE-AND-UPDATE-2 NAMESPACE (SECOND CLASS-FILE-ELEM) :CLASS CLASS-NAME))
  T)

 4-Jan-86 20:24:43-EST,1313;000000000000
Received: from GOLDILOCKS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 4 Jan 86 20:24-EST
Received: from BOO-BOO.MIT.EDU by MIT-GOLDILOCKS.ARPA via CHAOS with CHAOS-MAIL id 11112; Sat 4-Jan-86 20:27:54-EST
Date: Sat, 4 Jan 86 20:27 EST
From: Scott Cyphers <sr.ehpyc@SPEECH.MIT.EDU>
Subject: :DIRECTION :IO in open doesn't lock a file
To: BUG-LISPM@MIT-GOLDILOCKS.ARPA
In-Reply-To: <860104154030.1.CYPHER@BOO-BOO.MIT.EDU>
Message-ID: <860104202735.2.CYPHER@BOO-BOO.MIT.EDU>

Having thought about it, making :IO be like :OUTPUT is not the right
thing.  Most likely, you are normally reading from the file, and only
writing little pieces of it at a time.  Maybe a :STORE-CONDITIONAL
message something like:

(send stream :store-conditional byte old new failure-action)

which is like STORE-CONDITIONAL.  If BYTE has value OLD then it is given
value NEW atomically (with respect to other streams doing
:STORE-CONDITIONAL).  T is returned if it succeeds.  FAILURE-ACTION can
be:

a positive number -- keep trying for this many 60ths of a second, and
then give up, returning NIL and the value of OLD.

:wait -- keep trying forever.

NIL -- return NIL and the value of OLD on a failure.


I think this would allow users to implement more elaborate record
locking schemes relatively efficiently.
 5-Jan-86 14:57:49-EST,1910;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 5 Jan 86 14:57-EST
Received: from SCRC-STONY-BROOK.ARPA by MC.LCS.MIT.EDU  5 Jan 86 14:57:53 EST
Received: from HARLEM.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 386258; Sun 5-Jan-86 13:56:54-EST
Date: Sun, 5 Jan 86 14:01 EST
From: jean-pierre tanaka <joseph@SCRC-QUABBIN.ARPA>
Subject: Hardcopy system not too extensible.
To: Chris Lindblad <CJL@OZ.AI.MIT.EDU>, bug-hardcopy@SCRC-QUABBIN.ARPA,
    bug-tracker@SCRC-QUABBIN.ARPA, BUG-LISPM%oz@MIT-MC.ARPA
In-Reply-To: <851229172849.2.CJL@RIEMANN.AI.MIT.EDU>
Message-ID: <860105140128.1.JPT@HARLEM.SCRC.Symbolics.COM>

bug-tracker: track this as bug-hardcopy.

    Date: Sun, 29 Dec 85 17:28 EST
    From: Chris Lindblad <CJL@OZ.AI.MIT.EDU>

    In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.2,
    AISite 11.5, PASCAL 25.39, microcode TMC5-MIC 336, FEP 127,
    FEP0:>v127-lisp.flod(2), FEP0:>v127-loaders.flod(2),
    FEP0:>v127-debug.flod(1), FEP0:>v127-info.flod(2), on Lisp Machine Georg Friedrich Bernhard Riemann:

    In order to add a new hardcopy device, one has to redefine the functions 
    press:cp-background-hardcopy, and si:hardcopy-file-type. It would be
    nicer if the hardcopy stuff were more modular.

I agree.  I tried to do this for 6.1, but the br...oops, unfortunate way in
which the file types were handled, both by the Hardcopy File command and by
(much worse) the Hardcopy Menu, was too much for me.

The Hardcopy menu is rumored to be on the verge of rewrite.  If that incursion
into the affected area doesn't clear up the problem, I'll see to it as a
follow-on strike.  Off the top of my head (it's been several months since
I was last in the area) it seems the right thing to do is to hook into the
stuff produced by the HARDCOPY:DEFINE-HARDCOPY-DEVICE macro.  (SI: to you).

-- joseph

 5-Jan-86 19:04:28-EST,4009;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 5 Jan 86 19:04-EST
Received: from REAGAN.AI.MIT.EDU by MC.LCS.MIT.EDU via Chaosnet; 5 JAN 86  18:07:59 EST
Received: from OZ.AI.MIT.EDU by MIT-REAGAN.ARPA via CHAOS with CHAOS-MAIL id 18969; Sun 5-Jan-86 18:11:09-EST
Received: from MORRISON.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 5 Jan 86 18:07-EST
Date: Sun, 5 Jan 86 18:09 EST
From: jcma@MIT-MC.ARPA
Subject: Initializations Should Support the :AFTER keyword 
To: BUG-LISPM@MIT-REAGAN.ARPA
Message-ID: <860105180931.9.JCMA@MIT-MORRISON.ARPA>

In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.5,
AISite 11.7, Experimental RELATUS 145.46, microcode TMC5-MIC 336,
FEP 127, FEP0:>v127-lisp.flod(2), FEP0:>v127-loaders.flod(2),
FEP0:>v127-debug.flod(1), FEP0:>v127-info.flod(2), on Lisp Machine Jim Morrison:



>>Error: Illegal keyword :AFTER
While in the function ADD-INITIALIZATION  SI:*EVAL  (:INTERNAL SI:BREAK-INTERNAL 1)

ADD-INITIALIZATION:  (P.C. = 65)
   Arg 0 (SI:NAME): "RELATUS Login Initializations"
   Arg 1 (SI:FORM): (RUN-RELATUS-INITIALIZATION :LOGIN)
   Arg 2 (SI:KEYWORDS): (:AFTER)
   Arg 3 (SI:LIST-NAME): SI:LOGIN-INITIALIZATION-LIST
   Local 4 (SI:LIST-NAME-SUPPLIED-P): T
   Local 5 (WHEN): NIL
   Local 6 (SI:DEFAULT-WHEN): NIL
   Local 7 (SI:INIT): NIL
   Local 8 (SI:KEYWORD): :AFTER
   Local 9: NIL
   Local 10 (SI:ELEM): (SI:NORMAL NIL SI:NORMAL)
   Local 11: NIL

SI:*EVAL:  (P.C. = 401)
   Arg 0 (SI:FORM): (ADD-INITIALIZATION "RELATUS Login Initializations" (QUOTE (RUN-RELATUS-INITIALIZATION :LOGIN)) (QUOTE (:AFTER)) (QUOTE SI:LOGIN-INITIALIZATION-LIST))
   Local 0 (SI:FORM): NIL
   Arg 1 (SI:ENV): NIL
   --Defaulted args:--
   Arg 2 (SI:HOOK): NIL

(:INTERNAL SI:BREAK-INTERNAL 1):  (P.C. = 4)
   Arg 0 (COMPILER:.LEXICAL-ENVIRONMENT-POINTER.): (NIL)
   Arg 1 (SI:FORM): (ADD-INITIALIZATION "RELATUS Login Initializations" (QUOTE (RUN-RELATUS-INITIALIZATION :LOGIN)) (QUOTE (:AFTER)) (QUOTE SI:LOGIN-INITIALIZATION-LIST))

(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0):  (P.C. = 152)
   Arg 0 (COMPILER:.LEXICAL-ENVIRONMENT-POINTER.): #<DTP-LOCATIVE 43440265>

TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
   Arg 0 (TV:NEW-MODE): :BLAST
   Arg 1 (TV:STREAM): #:TERMINAL-IO-SYN-STREAM
   Arg 2 (TV:CONTINUATION): #<LEXICAL-CLOSURE (:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0) 43440272>

SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
   Arg 0 (SI:NAME): "Breakpoint ZMACS"
   Arg 1 (SI:ABORT-FUNCTION): SI:BREAK-HERALD
   Arg 2 (SI:READ-FUNCTION): #<LEXICAL-CLOSURE (:INTERNAL SI:BREAK-INTERNAL 0) 37130773>
   Arg 3 (SI:EVAL-FUNCTION): #<LEXICAL-CLOSURE (:INTERNAL SI:BREAK-INTERNAL 1) 37130775>
   --Defaulted args:--
   Arg 4 (SI:PRINT-FUNCTION): NIL

SI:BREAK-INTERNAL:  (P.C. = 212)
   Arg 0 (SI:TAG): "ZMACS"
   Local 0 (SI:TAG): "Breakpoint ZMACS"
   Arg 1 (SI:CONDITIONAL): T
   --Defaulted args:--
   Arg 2: NIL

ZWEI:COM-BREAK:  (P.C. = 65)

ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
   Arg 0 (ZWEI:COMMAND): ZWEI:COM-BREAK
   Arg 1 (ZWEI:CHAR): 129
   Arg 2 (ZWEI:PREFIX-CHAR): NIL
   Arg 3 (ZWEI:HOOK-LIST): (ZWEI:EXPAND-ABBREV-HOOK ZWEI:SHIFT-LOCK-HOOK ZWEI:FONT-LOCK-HOOK)

ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
   Arg 0 (ZWEI:CH): 129

(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 233)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 144776776>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor ZWEI:EDITOR -- 12. IV's, 0. FL's 120377766>
   Arg 2 (SI:OPERATION): :EDIT
   --Defaulted args:--
   Arg 3 (ZWEI:TOP-LEVEL-P): T
   Arg 4 (ZWEI:DESCRIPTION): NIL

(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 60)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 144776776>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor ZWEI:TOP-LEVEL-EDITOR -- 13. IV's, 1. FL's 120377366>
   Arg 2 (SI:.OPERATION.): :EDIT
   Rest arg (SI:.DAEMON-CALLER-ARGS.): NIL

ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 51)

SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
   Arg 0 (IGNORE): NIL
 5-Jan-86 19:14:25-EST,1969;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 5 Jan 86 19:14-EST
Received: from REAGAN.AI.MIT.EDU by MC.LCS.MIT.EDU via Chaosnet; 5 JAN 86  19:14:14 EST
Received: from SCRC-STONY-BROOK.ARPA by MIT-REAGAN.ARPA via INTERNET with SMTP id 18973; 5 Jan 86 18:48:32-EST
Received: from HARLEM.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 386425; Sun 5-Jan-86 18:47:17-EST
Date: Sun, 5 Jan 86 18:49 EST
From: jean-pierre tanaka <joseph@SCRC-QUABBIN.ARPA>
Subject: Server Predicate Message On Lispm Host Objects
To: jcma@MIT-MC.ARPA, BUG-LISPM@MIT-REAGAN.ARPA
In-Reply-To: <851228195156.1.JCMA@MIT-MORRISON.ARPA>
Message-ID: <860105184915.1.JPT@HARLEM.SCRC.Symbolics.COM>

    Date: Sat, 28 Dec 85 19:51 EST
    From: jcma@MIT-MC.ARPA

    In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.2,
    AISite 11.5, Experimental RELATUS 145.40, microcode TMC5-MIC 336,
    FEP 127, FEP0:>v127-lisp.flod(2), FEP0:>v127-loaders.flod(2),
    FEP0:>v127-debug.flod(1), FEP0:>v127-info.flod(2), on Lisp Machine Jim Morrison:

    There should be a message on lispm host objects that tells if the machine is a
    server or not.  
"server" in the sense that it offers some particular services, or in the sense
that it's dedicated to serving other users, e.g. a file or namespace server?
Most machines here in the latter category have "FILE-SERVER YES" as an attribute,
which says "this machine is a server machine, mark it as such and don't enable
services until told explicitly to do so."

		    I should not have to grovel this out of the property list.
Is (send host :server-machine) non-grovelish enough?  That's how I tell if 
a machine is a server machine, in the sense described above.

    Distinguishing namespace servers from file servers is also a good idea.
And from converse servers, and time servers, and uptime servers, and telnet servers.
See the list returned by (send host :service).

 5-Jan-86 20:13:54-EST,5938;000000000000
Received: from GOLDILOCKS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 5 Jan 86 20:13-EST
Received: from KOALA.MIT.EDU by MIT-GOLDILOCKS.ARPA via CHAOS with CHAOS-MAIL id 11308; Sun 5-Jan-86 20:15:32-EST
Date: Sun, 5 Jan 86 20:15 EST
From: Mark Anderson <SR.MDA@SPEECH.MIT.EDU>
Subject: bug in spire
To: BUG-LISPM@MIT-GOLDILOCKS.ARPA
Message-ID: <860105201533.1.MDA@KOALA.MIT.EDU>

I got the following I read in a new utterance and spire attempted to update the display:

   Mark A.

p.s.: should this sort of thing got to bug-lispm, to bug-spire, or should I forget about it
altogether?

In Symbolics 3600 Release 6.1, IP-TCP 29.13, Zoo 9.0,
Experimental Spire-Macros 9.2, Attribute 5.17, Experimental Compute 6.1,
Audio 4.1, Speech-Attributes 4.8, Display 6.23, Speech-Layouts 6.4,
Prtout 4.5, Experimental Versatec 6.0, Spire 16.0, Zoo-Spire 3.0,
microcode TMC5-MIC 336, FEP 127, FEP0:>v127-lisp.flod(2),
FEP0:>v127-loaders.flod(2), FEP0:>v127-debug.flod(1),
FEP0:>v127-info.flod(2), on Lisp Machine Koala:



>>Error: The object #<SPECTROGRAM-OVERLAY Spectrogram Overlay 2 1514516 deexposed> received a :DELETE-MONITORED-VALUE message, which went unclaimed.
         The rest of the message was (#<STRETCHED-FFT-SPECTROGRAM-FLAVOR 25603344>)
While in the function (:METHOD SPIRE:MONITOR-MIXIN :ADD-MONITOR)  (:METHOD SPIRE:MONITOR-MIXIN :WHOPPER :VALUES)  (:METHOD SPIRE:STRETCHED-FFT-SPECTROGRAM-FLAVOR :COMBINED :VALUES)

(:METHOD SPIRE:MONITOR-MIXIN :ADD-MONITOR):  (P.C. = 70)  (from SPIRE: ATTRIBUTE; BASIC-ATTRIBUTE)
   Arg 0 (SELF): #<STRETCHED-FFT-SPECTROGRAM-FLAVOR 25603344>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor SPIRE:MONITOR-MIXIN -- 6. IV's, 0. FL's 1236332>
   Arg 2 (SI:OPERATION): :ADD-MONITOR
   Arg 3 (SPIRE:MONITOR): #<SPECTROGRAM-OVERLAY Spectrogram Overlay 2 1514516 deexposed>
   Local 4 (SPIRE:MONITOR-NAME): "Spectrogram Overlay 2"
   Local 5 (SPIRE:MONITOR-UTT): NIL
   Local 6 (SPIRE:VALUE-MONITOR): #<SPECTROGRAM-OVERLAY Spectrogram Overlay 2 1514516 deexposed>
   Local 7: NIL
   Local 8 (SPIRE:MON-NAME): "Spectrogram Overlay 2"
   Local 9 (SPIRE:MON-UTT): NIL

(:METHOD SPIRE:MONITOR-MIXIN :WHOPPER :VALUES):  (P.C. = 17)  (from SPIRE: ATTRIBUTE; BASIC-ATTRIBUTE)
   Arg 0 (SELF): #<STRETCHED-FFT-SPECTROGRAM-FLAVOR 25603344>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor SPIRE:MONITOR-MIXIN -- 6. IV's, 0. FL's 1236332>
   Arg 2 (SI:.WHOPPER-CONTINUATION.): #<DTP-COMPILED-FUNCTION (:INTERNAL (:METHOD SPIRE:STRETCHED-FFT-SPECTROGRAM-FLAVOR :COMBINED :VALUES) 0) 67532667>
   Arg 3 (SI:.OLD-SELF-MAPPING-TABLE.): #<Map to flavor SPIRE:STRETCHED-FFT-SPECTROGRAM-FLAVOR -- 11. IV's, 10. FL's 17515161>
   Arg 4 (SI:.OPERATION.): :VALUES
   Arg 5 (SPIRE:MONITOR): #<SPECTROGRAM-OVERLAY Spectrogram Overlay 2 1514516 deexposed>
   Arg 6 (SPIRE:MESSAGE): :VALUES
   Rest arg (ARGS): NIL

(:METHOD SPIRE:STRETCHED-FFT-SPECTROGRAM-FLAVOR :COMBINED :VALUES):  (P.C. = 13)  (from SPIRE: SPEECH-ATTRIBUTES; SPEECH-ATTRIBUTES-4-3)
   Arg 0 (SELF): #<STRETCHED-FFT-SPECTROGRAM-FLAVOR 25603344>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor SPIRE:STRETCHED-FFT-SPECTROGRAM-FLAVOR -- 11. IV's, 10. FL's 17515161>
   Arg 2 (SI:.OPERATION.): :VALUES
   Rest arg (SI:.DAEMON-CALLER-ARGS.): (#<SPECTROGRAM-OVERLAY Spectrogram Overlay 2 1514516 deexposed> :VALUES)

(:METHOD SPIRE:SPECTROGRAM-OVERLAY :NEW-VALUES):  (P.C. = 13)  (from SPIRE: DISPLAY; OVERLAY)
   Arg 0 (SELF): #<SPECTROGRAM-OVERLAY Spectrogram Overlay 2 1514516 deexposed>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor SPIRE:SPECTROGRAM-OVERLAY -- 6. IV's, 8. FL's 1300564>
   Arg 2 (SI:OPERATION): :NEW-VALUES

(:INTERNAL (:METHOD SPIRE:SPECTROGRAM-OVERLAY :COMBINED :NEW-VALUES) 0):  (P.C. = 10)
   Arg 0 (SELF): #<SPECTROGRAM-OVERLAY Spectrogram Overlay 2 1514516 deexposed>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor SPIRE:SPECTROGRAM-OVERLAY -- 6. IV's, 8. FL's 1300564>
   Arg 2 (SI:.OPERATION.): :NEW-VALUES
   Rest arg (SI:.DAEMON-CALLER-ARGS.): NIL

(:METHOD SPIRE:OVERLAY-WITH-ATT :WHOPPER :NEW-VALUES):  (P.C. = 22)  (from SPIRE: DISPLAY; OVERLAY)
   Arg 0 (SELF): #<SPECTROGRAM-OVERLAY Spectrogram Overlay 2 1514516 deexposed>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor SPIRE:OVERLAY-WITH-ATT -- 8. IV's, 1. FL's 1275524>
   Arg 2 (SI:.WHOPPER-CONTINUATION.): #<DTP-COMPILED-FUNCTION (:INTERNAL (:METHOD SPIRE:SPECTROGRAM-OVERLAY :COMBINED :NEW-VALUES) 0) 67555071>
   Arg 3 (SI:.OLD-SELF-MAPPING-TABLE.): #<Map to flavor SPIRE:SPECTROGRAM-OVERLAY -- 6. IV's, 8. FL's 1300564>
   Arg 4 (SI:.OPERATION.): :NEW-VALUES

(:METHOD SPIRE:SPECTROGRAM-OVERLAY :COMBINED :NEW-VALUES):  (P.C. = 13)  (from SPIRE: DISPLAY; OVERLAY)
   Arg 0 (SELF): #<SPECTROGRAM-OVERLAY Spectrogram Overlay 2 1514516 deexposed>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor SPIRE:SPECTROGRAM-OVERLAY -- 6. IV's, 8. FL's 1300564>
   Arg 2 (SI:.OPERATION.): :NEW-VALUES
   Rest arg (SI:.DAEMON-CALLER-ARGS.): NIL

(:METHOD SPIRE:DISPLAY :REDISPLAY-PLOTS):  (P.C. = 50)  (from SPIRE: DISPLAY; DISPLAY)
   Arg 0 (SELF): #<DISPLAY Display 12 1514362 exposed>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor SPIRE:DISPLAY -- 19. IV's, 13. FL's 1316346>
   Arg 2 (SI:OPERATION): :REDISPLAY-PLOTS
   --Defaulted args:--
   Arg 3 (SPIRE:FORCE?): NIL

Rest of stack:
(:METHOD SPIRE:DISPLAY :UPDATE):  (P.C. = 4)  (from SPIRE: DISPLAY; DISPLAY)
(:METHOD SI:VANILLA-FLAVOR :SEND-IF-HANDLES):  (P.C. = 41)
(:METHOD SPIRE:SPIRE-LAYOUT :UPDATE-DISPLAYS):  (P.C. = 21)  (from SPIRE: DISPLAY; LAYOUT)
SP:TEST-TRACKER:  (P.C. = 126)  (from MDA: PITCH; PROD; LABELS)
SI:*EVAL:  (P.C. = 401)
(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0):  (P.C. = 152)
TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
SI:LISP-COMMAND-LOOP:  (P.C. = 67)
SI:LISP-TOP-LEVEL1:  (P.C. = 5)
SI:LISP-TOP-LEVEL:  (P.C. = 7)
 5-Jan-86 21:17:04-EST,3065;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 5 Jan 86 21:16-EST
Received: from MEDIA-LAB by MC.LCS.MIT.EDU  5 Jan 86 21:17:10 EST
Received: by MEDIA-LAB (4.12/4.8)  id AA10094; Sun, 5 Jan 86 21:19:05 est
Date: Sun, 5 Jan 86 21:19:05 est
From: Jim Davis <jrd@MEDIA-LAB.MIT.EDU>
Message-Id: <8601060219.AA10094@MEDIA-LAB>
To: toto@scrc-yukon.ARPA
Subject: Re:  Unix TCP Dired shows Time Warp
Cc: bug-lispm@MEDIA-LAB.MIT.EDU


From the hint provided by SMH, I have found the bug and fixed it.
My changes are in upper case, in the section beginning ;;Date
Here's a better version (modified from TCP-FTP.LISP.100).

(defmethod (unix-tcp-ftp-file-access-path :parse-directory-response) (line pathname dir-cmd)
  (selector dir-cmd string-equal
    ("NLST"
     (list* (tcp-ftp-parse-truename line pathname) nil))
    ("LIST"
     (let ((tokens (loop with length = (string-length line)
			 for i first 0 then k
			 for j = (or (string-search-char #\space line i) length)
			 for k = (string-search-not-char #\space line (1+ j))
			 collect (substring line i j)
			 while k))
	   name
	   (plist nil))
       (macrolet ((add-property (prop val)
		    `(progn (push ,val plist)
			    (push ,prop plist))))
	 (when (mem #'char-equal (aref (first tokens) 0) '(#/d #/l #/-))
	   ;; Protection
	   (let ((prot (pop tokens)))
	     (when (char-equal (aref prot 0) #\d)
	       (add-property :directory t))
	     (add-property :protection (substring prot 1)))
	   ;; Unit number?
	   (pop tokens)
	   ;; Author
	   (add-property :author (pop tokens))
	   ;; Group (sometimes) -- look ahead for month name
	   (loop until (ass #'string-equal (second tokens) time:*month-symbols*)
		 do (pop tokens))
	   ;; Length
	   (add-property :length-in-bytes (parse-number (pop tokens) 0 nil 10 t))
	   (add-property :byte-size 8)
	   ;; Date
	   (let ((month (pop tokens))
		 (day (pop tokens))
		 (year (pop tokens)))
	     (add-property :creation-date
			   (time:parse-universal-time
			     (if (string-search-char #/: year)
				 ;; No Explicit Year, assume this year, unless the date
				 ;; has not yet come, in which case, last year.
				 ;; The "year" token holds a time (hrs:min)
				 (multiple-value-bind
				   (nil nil nil THIS-DATE THIS-MONTH this-year nil nil)
				     (cl:get-decoded-time)
				   (FORMAT NIL "~A ~A ~D ~A"
					   month day
					   (MULTIPLE-VALUE-BIND
					     (NIL NIL NIL DATE MONTH-NUMBER)
					       (TIME:PARSE (STRING-APPEND DAY #\SPACE MONTH))
					     (IF (OR (> MONTH-NUMBER THIS-MONTH)
						     (AND (= MONTH-NUMBER THIS-MONTH)
							  (> DATE THIS-DATE)))
						 (1- THIS-YEAR)
						 THIS-YEAR))
					   YEAR))
				 (string-append month #\space day #\space year)))))
	   ;; Name
	   (setf name (tcp-ftp-parse-truename (pop tokens) pathname))
	   ;; Link
	   (when tokens
	     (when (string-equal (pop tokens) "->")
	       (add-property :link-to (tcp-ftp-parse-truename (pop tokens) pathname))))
	   ;; All done
	   (list* name plist)))))))
 6-Jan-86 01:19:33-EST,2547;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 6 Jan 86 01:19-EST
Received: from MEDIA-LAB by MC.LCS.MIT.EDU  6 Jan 86 00:36:46 EST
Received: from MC.LCS.MIT.EDU (2c00030a) by MEDIA-LAB (4.12/4.8)  id AA11954; Mon, 6 Jan 86 00:39:28 est
Received: from SCRC-STONY-BROOK.ARPA by MC.LCS.MIT.EDU  6 Jan 86 00:35:51 EST
Received: from PEACE.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 386457; Sun 5-Jan-86 21:13:20-EST
Date: Sun, 5 Jan 86 21:15 EST
From: Charles Hornig <Hornig@SCRC-RIVERSIDE.ARPA>
Subject: Unix TCP Dired shows Time Warp
To: Jim Davis <jrd@MEDIA-LAB.MIT.EDU>, hoss@SCRC-STONY-BROOK.ARPA
Cc: bug-lispm@MEDIA-LAB.MIT.EDU
In-Reply-To: <8601021845.AA07693@MEDIA-LAB>
Message-Id: <860105211513.1.HORNIG@PEACE.SCRC.Symbolics.COM>

    Date: Thu, 2 Jan 86 13:45:07 est
    From: Jim Davis <jrd@MEDIA-LAB.MIT.EDU>

    Xevious, Release 6.1, TCP 29.13

    Consider this output, extracted from a Dired:

    AMT: /local/lib/dictionary/words/*
  
      0 blocks in the files listed
	  a.d                 74960(8)         09/08/86 22:52:00              root
	  acclaim.d           78656(8)         09/08/86 22:52:00              root
	  adduce.d            76377(8)         09/08/86 22:52:00              root
	  afflict.d           74713(8)         09/08/86 22:52:00              root


    The year should be 85.  I see that Common Lisp makes the same error.  Notice
    that the Unix list extracted below does not include the year, but I assume
    that the "ls" command omitted it from the output because it's the "most
    recent" year, rather than because it doesn't know.

    -rw-r--r--  1 root        74960 Sep  8 22:52 /local/lib/dictionary/words/a.d
    -rw-r--r--  1 root        78656 Sep  8 22:52 /local/lib/dictionary/words/acclaim.d
    -rw-r--r--  1 root        76377 Sep  8 22:52 /local/lib/dictionary/words/adduce.d
    -rw-r--r--  1 root        74713 Sep  8 22:52 /local/lib/dictionary/words/afflict.d

    This bug worries me but hasn't broken anything yet.  My apologies for not
    using Meta-X Bug but as you know it's broken here.

Thank you for this report.  This problem has been fixed and the fix will
be distributed in a future release.

The problem is that it is always defaulting against the current year,
instead of "knowing" that the creation date must be in the past.  You
can fix the code in SYS:IP-TCP;TCP-FTP.LISP
(:METHOD UNIX-TCP-FTP-FILE-ACCESS-PATH :PARSE-DIRECTORY-RESPONSE)
if you really need this fixed.


 6-Jan-86 08:35:03-EST,724;000000000000
Received: from GOLDILOCKS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 6 Jan 86 08:34-EST
Received: from SCRC-STONY-BROOK.ARPA by MIT-GOLDILOCKS.ARPA via INTERNET with SMTP id 11312; 6 Jan 86 08:35:46-EST
Received: from HARLEM.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 386547; Mon 6-Jan-86 08:36:00-EST
Date: Mon, 6 Jan 86 08:37 EST
From: joseph@SCRC-QUABBIN.ARPA
To: BUG-LISPM@MIT-GOLDILOCKS.ARPA
Subject: bug in spire
References: <860105201533.1.MDA@KOALA.MIT.EDU>
Message-ID: <860106083756.9.JPT@HARLEM.SCRC.Symbolics.COM>

[The referenced message has been redirected:
  This should have gone to Bug-Spire.
    bug-lispm has been removed;
    bug-spire%speech@mc has been added.]

 6-Jan-86 10:48:32-EST,722;000000000000
Received: from ELVIS.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 6 Jan 86 10:48-EST
Date: Mon, 6 Jan 86 10:51 EST
From: Chris Lindblad <CJL@OZ.AI.MIT.EDU>
Subject: I'm not holding my breath, but...
To: BUG-LISPM@OZ.AI.MIT.EDU
Message-ID: <860106105128.1.CJL@ELVIS.AI.MIT.EDU>

In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.4,
AISite 11.7, NS 25.16, Experimental DRC 2.1, CJL 3.0,
microcode TMC5-MIC 336, FEP 127, FEP0:>v127-lisp.flod(2),
FEP0:>v127-loaders.flod(2), FEP0:>v127-debug.flod(1),
FEP0:>v127-info.flod(2), on Lisp Machine Elvis Presley:

It sure would be nice if there were internet protocols for services
LISPM-FINGER, NAMESPACE-TIMESTAMP, NAMESPACE, & BAND-TRANSFER. Before
1988.

 6-Jan-86 12:28:02-EST,1220;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 6 Jan 86 12:24-EST
Received: from SCRC-STONY-BROOK.ARPA by MC.LCS.MIT.EDU  6 Jan 86 12:23:27 EST
Received: from NEPONSET.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 386742; Mon 6-Jan-86 12:19:44-EST
Date: Mon, 6 Jan 86 12:21 EST
From: David C. Plummer <DCP@SCRC-QUABBIN.ARPA>
Subject: Bigger control stack
To: WJL@MC.LCS.MIT.EDU, BUG-LISPM@MC.LCS.MIT.EDU
cc: Scott McKay <SWM@SCRC-QUABBIN.ARPA>
In-Reply-To: <860102170848.9.SWM@THAMES.SCRC.Symbolics.COM>
Message-ID: <860106122140.8.DCP@NEPONSET.SCRC.Symbolics.COM>

    Date: Thu, 2 Jan 86 17:08 EST
    From: Scott McKay <SWM@SCRC-QUABBIN.ARPA>

	Date: Thu,  2 Jan 86 15:19:18 EST
	From: Bill Long <WJL@MC.LCS.MIT.EDU>

	Two simple questions (I hope):

	1) How do you initialize the control stack to a larger size
	when you know it will need to be larger?

    There will be a :Set Stack Size CP command in the future.  In the
    meanwhile, perhaps this will do:

	...

Note there are also various arguments to make-process
and process-run-function to control this when you kick the process into
existence.  Maybe this is enough for your needs.

 6-Jan-86 14:30:04-EST,883;000000000000
Received: from JIMI.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 6 Jan 86 14:14-EST
Date: Mon, 6 Jan 86 14:14 EST
From: Brian C. Williams <WILLIAMS@OZ.AI.MIT.EDU>
Subject: Broken Monitors on Jimi and Lennon
To: BUG-LISPM@OZ.AI.MIT.EDU
Message-ID: <860106141439.1.WILLIAMS@JIMI.AI.MIT.EDU>

In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.5,
AISite 11.3, microcode TMC5-MIC 336, FEP 127, FEP0:>v127-lisp.flod(2),
FEP0:>v127-loaders.flod(2), FEP0:>v127-debug.flod(1),
FEP0:>v127-info.flod(2), on Lisp Machine Jimi Hendrix:

Jimi:
    The vertical lines on Jimi's monitor are curved.  The curve moves
    vertically up the screen in a wave pattern.

Lennon:
    Lennon's monitor is blank (white with no border) and is making a squealing
    sound.  When Lennon is tried on a separate monitor the screen remains black
    (not white) and no sound is emitted.
 6-Jan-86 14:44:49-EST,2906;000000000000
Received: from REAGAN.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 6 Jan 86 14:35-EST
Received: from DUE-PROCESS.AI.MIT.EDU by MIT-REAGAN.ARPA via CHAOS with CHAOS-MAIL id 19010; Mon 6-Jan-86 14:37:06-EST
Date: Mon, 6 Jan 86 14:34 EST
From: Carl Hewitt <Hewitt@MIT-XX.ARPA>
Subject: Due-Process Crashes again from ZMail
To: BUG-LISPM@OZ.AI.MIT.EDU
cc: Hewitt@MIT-XX.ARPA
Message-ID: <860106143457.6.HEWITT@DUE-PROCESS.AI.MIT.EDU>

In Symbolics 3600 Release 6.1, IP-TCP 29.13, microcode TMC5-MIC 336,
FEP 127, FEP0:>v127-lisp.flod(2), FEP0:>v127-debug.flod(1),
FEP0:>v127-loaders.flod(2), FEP0:>v127-info.flod(2), on Due Process:
Warm booted from: Main Zmail Window.

Folks,

This situation ocurred once before, last week sometime -I think, but I didn't
include the right information in the bug report.  Hopefully, this time we're
more fortunate.  While sending a message in Zmail the machine went into the
FEP.  I used the Debug feature and this is what it told me.

At the top of the stack:

SI:CACHE-REMOVE (PC=30)
Arg 0 (SI:MMPT-INDEX): 10042
Local 1 (SI:VMA): 123364400
Local 2 (SI:PHTC-ENTRY): -1
Local 3: 123364400

SI:WRITE-FRAME (PC=13)
Arg 0 (SI:MMPT-INDEX): 10042
 --Defaulted Args--
Arg 1 (SI:FOREGROUND-P): NIL
Local 2 (SI:MMPT): #<ART-1-20000 14206>
Local 3: 12000041300
Local 4: #<DTP-LOCATIVE 17000600000>
Local 5: 20000

SI:STORAGE-BACKGROUND-FUN (PC=165)
Arg 0 (SI:DISK-PERMIT): T
Local 1: 2
Local 2: (SI:MMPT-INDEX): 4176
Local 3 (SI:N-PAGES): 26
Local 4 (SI:START-VPN): 246736
Local 5: 12
Local 6 (SI:VPN): 246751
Local 7 (SI:PHT-INDEX): 5163
Local 8 (SI:MMPT-INDEX): 10042
Local 9 (SI:MMPT-STATUS): 0

---Status of VM

MD/ 2410104
VMA/ 123364400
 123364400/NIL
  which is (%P-CONTENTS-OFFSET '#<ART-Q-74 123364354 24)

---On Top of Main Stack:
COPY-ARRAY-PORTION (PC=24) ---doing a FAST-AREF

I think the whole process started from the aux. stack, which I excepted above,
specifically from 

SYS:PAGE-FAULT (PC=36)
Arg 0 (SI:VMA): 13704000
Arg 1 (SI:FAULT-TYPE): 2

---@PC=36 this thing had called-to-ignore SI:PAGE-FAULT-HANDLER

---The Stack-Group Status appeared:

Current stack group (in amem)
 Control stack low: #<DTP-LOCATIVE 1777774000>, limit: #<DTP-LOCATIVE 1777775400>
 Binding stack low: #<DTP-LOCATIVE 0>, limit: #<DTP-LOCATIVE 0>, pointer: #<DTP-LOCATIVE 0>
 Status Bits: 4000
 Catch block list: NIL
 Arg Status: 0 %SG-ARG-NONE
 Non-resumability: 0
 Safe: 0
 Non-Trappability: 2  halt-on-error
 Meter enable: 0
Float operating mode: 200000360, status: 0

---
For what any of this is worth...I hope I haven't overlooked anything. Oh yes,
one final note...
I noticed that the SYS:PAGE-FAULT frame had its Meter-Bit Set...no others did.
I hope this is of some help.  If I've made any errors of omission or
otherwise, please let me know.
My net address is: TomR@Mit-Oz.

Thanks,

TOMR
 6-Jan-86 18:19:09-EST,5414;000000000000
Received: from ZERMATT.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 6 Jan 86 18:17-EST
Received: from SARAJEVO.MIT.EDU by MIT-ZERMATT.ARPA via CHAOS with CHAOS-MAIL id 20899; Mon 6-Jan-86 18:19:14-EST
Date: Mon, 6 Jan 86 18:17 EST
From: Jeff Arnold <jma@MIT-VAX.ARPA>
Subject: problem in TCP login during FILE service
To: BUG-LISPM@MIT-ZERMATT.ARPA
Message-ID: <860106181748.1.JMA@SARAJEVO.MIT.EDU>

In Symbolics 3640 Release 6.1, IP-TCP 29.13, Macsyma 318.12,
6-1-Patches 1.5, MLSite 11.0, COLOR 135.50, COLOR-EXTENSIONS 4.6,
COLOR-EDITOR 4.1, COLOR-DEMO 68.7, IMAGES 56.21, COLOR-PALETTE 2.1,
microcode TMC5-IO4-ST506-MIC 336, FEP 127, FEP0:>v127-lisp.flod(2),
FEP0:>v127-loaders.flod(2), FEP0:>v127-debug.flod(1),
FEP0:>v127-info.flod(2), on Sarajevo:

We got this error after trying to read a file into Zmacs.  The wrong
user id was given, followed by the password, to which a 
"530 user foo unknown"
response was received.  When it asked for a password a second time,
another incorrect password was given which yielded the following.

>>Error: 500 Command not understood.
While in the function (:DEFUN-METHOD FS:TCP-FTP-CHECK-COMMAND-RESPONSE)  (:METHOD FS:TCP-FTP-CONN :LOGIN)  (:DEFUN-METHOD FS:TCP-FTP-VALIDATE-CONN)

(:DEFUN-METHOD FS:TCP-FTP-CHECK-COMMAND-RESPONSE):  (P.C. = 171)
   Arg 0 (SELF): #<TCP-FTP-CONN 24343371>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor FS:TCP-FTP-CONN -- 8. IV's, 0. FL's 1160477>
   Arg 2 (FS:EXPECTED-VALUE): (230 331)
   Arg 3 (FS:CTL-STRING): "USER ~A"
   Rest arg (ARGS): ("foo")
   Local 5: SYS:UNWIND-PROTECT-TAG
   Local 6: #<DTP-ODD-PC 67350477>
   Local 7: #<DTP-LOCATIVE 36200236>
   Local 8: #<DTP-LOCATIVE 43441117>
   Local 9 (FS:OLD-STATE): :FREE
   Local 10 (FS:NUM): 500
   Local 11 (FS:LINE): "500 Command not understood."
   Local 12 (FS:ELEM): (500 FS:TCP-FTP-UNRECOGNIZED-COMMAND FS:FILE-SYSTEM-BUG)
   Local 13 (CONDITION): NIL
   Local 14: NIL
   Local 15: #<CASE-HANDLER 7222340>
   Local 16: (#<CASE-HANDLER 7222506> #<LEXICAL-CLOSURE (:INTERNAL NET:INVOKE-SERVICE-ACCESS-PATH 0) 43440646> #<LEXICAL-CLOSURE (:INTERNAL ** 0) 43440532> #<CASE-HANDLER 144626437> #<CASE-HANDLER 145127174> #<LEXICAL-CLOSURE (:INTERNAL ** 0) 43440053>)
   Local 17: (#<CASE-HANDLER 7222340> #<CASE-HANDLER 7222506> #<LEXICAL-CLOSURE (:INTERNAL NET:INVOKE-SERVICE-ACCESS-PATH 0) 43440646> #<LEXICAL-CLOSURE (:INTERNAL ** 0) 43440532> #<CASE-HANDLER 144626437> #<CASE-HANDLER 145127174> #<LEXICAL-CLOSURE (:INTERNAL ** 0) 43440053>)

(:METHOD FS:TCP-FTP-CONN :LOGIN):  (P.C. = 64)
   Arg 0 (SELF): #<TCP-FTP-CONN 24343371>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor FS:TCP-FTP-CONN -- 8. IV's, 0. FL's 1160477>
   Arg 2 (SI:OPERATION): :LOGIN
   Arg 3 (FS:LOGIN-P): T
   --Defaulted args:--
   Arg 4 (CONDITION): #<TCP-FTP-INVALID-PASSWORD 24344031>

(:DEFUN-METHOD FS:TCP-FTP-VALIDATE-CONN):  (P.C. = 62)
   Arg 0 (SELF): #<TCP-FTP-CONN 24343371>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor FS:TCP-FTP-CONN -- 8. IV's, 0. FL's 1160477>

(:METHOD FS:TCP-FTP-CONN :ALLOCATE):  (P.C. = 11)
   Arg 0 (SELF): #<TCP-FTP-CONN 24343371>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor FS:TCP-FTP-CONN -- 8. IV's, 0. FL's 1160477>
   Arg 2 (SI:OPERATION): :ALLOCATE

(:METHOD FS:TCP-FTP-CONN :INIT):  (P.C. = 4)
   Arg 0 (SELF): #<TCP-FTP-CONN 24343371>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor FS:TCP-FTP-CONN -- 8. IV's, 0. FL's 1160477>
   Arg 2 (SI:OPERATION): :INIT
   Arg 3 (IGNORE): #<DTP-LOCATIVE 43441004>

INSTANTIATE-FLAVOR:  (P.C. = 445)
   Arg 0 (SI:FLAVOR-NAME): FS:TCP-FTP-CONN
   Arg 1 (SI:INIT-PLIST): #<DTP-LOCATIVE 43441004>
   Arg 2 (SI:SEND-INIT-MESSAGE-P): :MAYBE
   --Defaulted args:--
   Arg 3 (SI:RETURN-UNHANDLED-KEYWORDS-P): NIL
   Arg 4 (SI:AREA-TO-CONS-INSTANCE-IN): NIL

MAKE-INSTANCE:  (P.C. = 6)
   Arg 0 (SI:FLAVOR-NAME): FS:TCP-FTP-CONN
   Rest arg (SI:INIT-OPTIONS): (:FILE-ACCESS-PATH #<UNIX-TCP-FTP-FILE-ACCESS-PATH LCS-HQ using TCP-FTP 24343360> :SERVICE-ACCESS-PATH #<SERVICE-ACCESS-PATH FILE (TCP-FTP) -- MIT-LCS-HQ on INTERNET 24343336>)

(:METHOD FS:TCP-FTP-FILE-ACCESS-PATH :INIT):  (P.C. = 10)
   Arg 0 (SELF): #<UNIX-TCP-FTP-FILE-ACCESS-PATH LCS-HQ using TCP-FTP 24343360>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor FS:TCP-FTP-FILE-ACCESS-PATH -- 2. IV's, 2. FL's 1161352>
   Arg 2 (SI:OPERATION): :INIT
   Arg 3 (IGNORE): #<DTP-LOCATIVE 43440730>

Rest of stack:
INSTANTIATE-FLAVOR:  (P.C. = 445)
MAKE-INSTANCE:  (P.C. = 6)
FS:INVOKE-FILE-SERVICE:  (P.C. = 51)
FS:INVOKE-SERVICE-FILE-WITH-TCP-FTP:  (P.C. = 3)
NET:INVOKE-SERVICE-ACCESS-PATH:  (P.C. = 75)
NET:INVOKE-SERVICE-ON-HOST:  (P.C. = 226)
(:METHOD FS:ACTIVE-PATHNAME-HOST :FILE-ACCESS-PATH):  (P.C. = 57)
(:METHOD FS:ACTIVE-PATHNAME-MIXIN :OPEN):  (P.C. = 7)
FS:COMMON-LISP-OPEN:  (P.C. = 450)
OPEN:  (P.C. = 257)
(:METHOD ZWEI:FILE-BUFFER-MIXIN :REVERT):  (P.C. = 61)
ZWEI:FIND-FILE:  (P.C. = 155)
ZWEI:COM-FIND-FILE:  (P.C. = 13)
ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
ZWEI:MAKE-EXTENDED-COMMAND-INTERNAL:  (P.C. = 112)
Closure of ZWEI:MAKE-EXTENDED-COMMAND-INTERNAL:
ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 233)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 60)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 51)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
 7-Jan-86 17:26:26-EST,1145;000000000000
Received: from ZERMATT.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 7 Jan 86 17:26-EST
Received: from XX.LCS.MIT.EDU (MIT-XX.ARPA) by MIT-ZERMATT.ARPA via INTERNET with SMTP id 20974; 7 Jan 86 17:28:37-EST
Date: Tue 7 Jan 86 17:26:19-EST
From: William B. Ackerman <WBA@XX.LCS.MIT.EDU>
Subject: bug in handling of stack
To: BUG-EXPLORER@MC.LCS.MIT.EDU, BUG-LISPM@ZERMATT.LCS.MIT.EDU,
    "*PS:<WBA>EXPLORER.BUGS.1"@XX.LCS.MIT.EDU
Message-ID: <12173426018.32.WBA@XX.LCS.MIT.EDU>

Using Explorer system 1.0.2+network configuration, microcode 214,
when I type
(defun fact (n) (cond ((= n 0) 1) (t (* n (fact (1- n))))))
[a perfectly reasonable and normal hack for a first time user of
LISP machines], and then type
(fact 200) and (fact 600)
[a perfectly reasonable thing for a first time user to do]
it complains of stack overflow 3 times on factorial of 200,
I type resume each time, it grows the pdl and continues with
no problem.  When interpreting fact of 600, it runs out 6
times.  The first 5 times I type <resume> and it continues with
no problem.  The sixth time it crashes.  It says microcode halt at
hex 3921.
-------
 7-Jan-86 17:32:02-EST,783;000000000000
Received: from ZERMATT.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 7 Jan 86 17:31-EST
Received: from XX.LCS.MIT.EDU (MIT-XX.ARPA) by MIT-ZERMATT.ARPA via INTERNET with SMTP id 20978; 7 Jan 86 17:34:10-EST
Date: Tue 7 Jan 86 17:31:37-EST
From: William B. Ackerman <WBA@XX.LCS.MIT.EDU>
Subject: erroneous documentation string in a function
To: BUG-EXPLORER@MC.LCS.MIT.EDU, BUG-LISPM@ZERMATT.LCS.MIT.EDU,
    "*PS:<WBA>EXPLORER.BUGS.1"@XX.LCS.MIT.EDU
Message-ID: <12173426982.32.WBA@XX.LCS.MIT.EDU>

In the source text for the function parse-integer (file sys:sys2;string.lisp#148)
the commments at the start of the definition say that junk-allowed = nil
allows junk, while junk-allowed = t forbids it and gives an error.
This is backwards.  The code itself is OK.
-------
 7-Jan-86 17:35:08-EST,3818;000000000000
Received: from ZERMATT.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 7 Jan 86 17:35-EST
Received: from XX.LCS.MIT.EDU (MIT-XX.ARPA) by MIT-ZERMATT.ARPA via INTERNET with SMTP id 20975; 7 Jan 86 17:31:27-EST
Date: Tue 7 Jan 86 17:29:11-EST
From: William B. Ackerman <WBA@XX.LCS.MIT.EDU>
Subject: bug in dired
To: BUG-EXPLORER@MC.LCS.MIT.EDU, BUG-LISPM@ZERMATT.LCS.MIT.EDU,
    "*PS:<WBA>EXPLORER.BUGS.1"@XX.LCS.MIT.EDU
Message-ID: <12173426539.32.WBA@XX.LCS.MIT.EDU>

--Text Follows This Line--
In SYSTEM 1.72, Compiler 1.9, File System 1.1,
Universal Command Loop 1.0, Window System 1.5, Input Editor 1.1,
ZMACS 1.2, font editor 1.0, Error Handler 1.0, Suggestions 1.0,
Debug Utilities 1.3, Explorer-Net 1.2, Telnet 1.0, VT100 1.0, ZMail 1.0,
Local-File 1.21, Net-Config 1.5, Explorer Serial & Parallel Ports 1.0,
Printer 1.0, Glossary 1.0, Explorer Streamer Tape 1.11, NVRAM 1.3,
User Profile Utility 1.2, microcode 214, Rel 1.0.2.18, on DOGWOOD:


Insert your description of the circumstances here:

I had done a ^X^D to enter dired, specifying the name sdsys.  My home directory
(which was on the local machine) had only one file by that name, "sdsys.system",
so dired displayed that file only.  I gave the "R" command, telling it to rename
to sdsys.lisp.  It indicated in the mode line that it had done so, but then gave this
error message, apparently while trying to redisplay the directory showing
the file under its new name.  The file renaming actually took place successfully.


>>TRAP 1294 (ARGTYP ARRAY M-A NIL GAHDR) ->  AP-LEADER 
Some argument to AP-LEADER was of the wrong type.
The function expected an array.
Backtrace from the debugger:

ZWEI::DIRED-FIRST-PATHNAME-LINE (P.C. = 32)

   --Defaulted args:--
 Arg 0 (AFTER): NIL
 Local 0 (LINE): NIL


ZWEI::DIRED-PATHNAME-DIRECTORY-LINE (P.C. = 77)

 Arg 0 (PATHNAME): #FS::LM-PATHNAME "DOG: WBA; SDSYS.LISP#27"
 Local 0 (DIR-PATHNAME): #FS::LM-PATHNAME "DOG: WBA; .#"
 Local 1 (LINE): NIL


Additional information supplied with call:
 Expecting 2 values

ZWEI::DIRED-PATHNAME-INSERTION-BP (P.C. = 76)

 Arg 0 (PATHNAME): #FS::LM-PATHNAME "DOG: WBA; SDSYS.LISP#27"
 Arg 1 (PATHNAME-PLIST): (ZWEI::LEVEL 0 :PATHNAME #FS::LM-PATHNAME "DOG: WBA; SDSYS.LISP#27" ...)
 Local 0 (DIR-LINE): NIL
 Local 1 (SORT-TYPE): NIL
 Local 2 (PATHNAME-COMPARE-ITEM): NIL
 Local 3 (COMPARE-ITEM-SELECTOR): NIL
 Local 4 (COMPARE-ORDER): NIL
 Local 5 (LEVEL): NIL
 Local 6 (LINE): NIL
 Local 7 (LINE-LEVEL): NIL
 Local 8 (LINE-COMPARE-ITEM): NIL


ZWEI::COM-DIRED-RENAME (P.C. = 361)

 Local 0 (FILE): #FS::LM-PATHNAME "DOG: WBA; SDSYS.SYSTEM#27"
 Local 1 (NEWFILE): #FS::LM-PATHNAME "DOG: WBA; SDSYS.LISP#27"
 Local 2 (FILE-PLIST): (ZWEI::LEVEL 0 :PATHNAME #FS::LM-PATHNAME "DOG: WBA; SDSYS.LISP#27" ...)
 Local 3: #<FS::LM-CHARACTER-INPUT-STREAM "DOG: WBA; SDSYS.SYSTEM#27" 15601377>
 Local 4 (.FILE-ABORTED-FLAG.): :ABORT
 Local 5: (NIL)
 Local 6: (NIL)
 Local 7 (NEW-PATHNAME): NIL
 Local 8 (BP): NIL
 Local 9 (LEVEL): NIL
 Local 10 (SAVE-BP): NIL
 Local 11 (IGNORE): NIL
 Local 12 (.PROG2-TEMPORARY.): NIL


Additional information supplied with call:
 Expecting 3 values

ZWEI::COMMAND-EXECUTE (P.C. = 104)

 Arg 0 (COMMAND): ZWEI::COM-DIRED-RENAME
 Arg 1 (CHAR): 114
 Arg 2 (PREFIX-CHAR): NIL
 Arg 3 (HOOK-LIST): NIL
 Local 0 (HOOK-SUCCESS): T
 Local 1 (HOOK): NIL


Remainder of stack:

ZWEI::PROCESS-COMMAND-CHAR (P.C. = 65)
(:METHOD ZWEI:WINDOW :EDIT) (P.C. = 514)
(:INTERNAL (:METHOD ZWEI:ZMACS-WINDOW :COMBINED :EDIT) 0) (P.C. = 74)
FUNCALL (P.C. = 25)
(:METHOD ZWEI::DISPLAYER :AROUND :EDIT) (P.C. = 31)
(:METHOD ZWEI:ZMACS-WINDOW :COMBINED :EDIT) (P.C. = 47)
ZWEI::ZMACS-WINDOW-TOP-LEVEL (P.C. = 74)
SI::PROCESS-TOP-LEVEL (P.C. = 244)
-------
 8-Jan-86 09:04:28-EST,2840;000000000000
Received: from GOLDILOCKS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 8 Jan 86 09:04-EST
Received: from SPEECH.MIT.EDU by MIT-GOLDILOCKS.ARPA via CHAOS with CHAOS-MAIL id 11806; Wed 8-Jan-86 09:05:01-EST
Received: from BOO-BOO.MIT.EDU by MIT-GOLDILOCKS.ARPA via CHAOS with CHAOS-MAIL id 11805; Wed 8-Jan-86 09:04:27-EST
Date: Wed, 8 Jan 86 09:04 EST
From: Scott Cyphers <sr.ehpyc@SPEECH.MIT.EDU>
Subject: [lauritzen@MIT-REAGAN.ARPA: bad: error occured in scheduler]
To: bug-lispm@SPEECH.MIT.EDU
Message-ID: <860108090449.1.CYPHER@BOO-BOO.MIT.EDU>

Date: Tue, 7 Jan 86 22:12 EST
From: lauritzen@MIT-REAGAN.ARPA
Sender: Lisp-Machine@MIT-REAGAN.ARPA
Subject: bad: error occured in scheduler
To: sr.ehpyc@SPEECH.MIT.EDU
Message-ID: <860107221231.1.LISP-MACHINE@MIT-GOLDILOCKS.ARPA>

In Symbolics 3600 Release 6.1, IP-TCP 29.13, Mailer 43.6,
Experimental Spire-Macros 9.2, Experimental Versatec 7.0, Print 38.16,
Experimental Versatec-Spool 11.0, Experimental Zoo 10.0,
Experimental Zoo-Keeper 8.0, microcode TMC5-MIC 336, on Lisp Machine Goldilocks:

>>Trap: The first argument given to the AR-1 instruction, T, was not an array.
While in the function CHAOS:QUEUE-ORDERED-INPUT-PKT  CHAOS:RECEIVE-CHAOS-PACKET  (:METHOD CHAOS:CHAOS-NETWORK :RECEIVE-PACKET)

CHAOS:QUEUE-ORDERED-INPUT-PKT:  (P.C. = 137)
   Arg 0 (CHAOS:CONN): #<CHAOS Connection for VERSATEC to KODIAK 21126500>
   Arg 1 (CHAOS:PKT): #<Chaos Packet 105401420>
   Local 2 (CHAOS:PKT-NUM): 74
   Local 3 (CHAOS:EXPECTED): 50
   Local 4 (CHAOS:PREV): #<Chaos Packet 105401420>
   Local 5 (CHAOS:PREV): #<Chaos Packet 105403637>
   Local 6 (CHAOS:RECEIVED): T

CHAOS:RECEIVE-CHAOS-PACKET:  (P.C. = 45)
   Arg 0 (CHAOS:PKT): #<Chaos Packet 105401420>

(:METHOD CHAOS:CHAOS-NETWORK :RECEIVE-PACKET):  (P.C. = 112)
   Arg 0 (SELF): #<CHAOS-NETWORK CHAOS 43300752>
   Arg 1 (SYS:SELF-MAPPING-TABLE): CHAOS:CHAOS-NETWORK
   Arg 2 (SI:OPERATION): :RECEIVE-PACKET
   Arg 3 (CHAOS:PACKET): #<ART-8B-1942 105400311>
   Arg 4 (CHAOS:INTERFACE): #<3600-ETHERNET-INTERFACE 105411572>
   Arg 5 (CHAOS:INTERFACE-CHAOS-ADDRESS): 6968

(:METHOD NETI:ADDRESS-RESOLUTION-INTERFACE-MIXIN :RECEIVE-PROTOCOL-PACKET):  (P.C. = 31)
   Arg 0 (SELF): #<3600-ETHERNET-INTERFACE 105411572>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor NETI:ADDRESS-RESOLUTION-INTERFACE-MIXIN -- 4. IV's, 0. FL's 120212026>
   Arg 2 (SI:OPERATION): :RECEIVE-PROTOCOL-PACKET
   Arg 3 (NETI:PROTOCOL-PACKET): #<ART-8B-1942 105400311>
   Arg 4 (NETI:PROTOCOL): 2052

(:METHOD NETI:3600-ETHERNET-INTERFACE :TOP-LEVEL):  (P.C. = 171)
   Arg 0 (SELF): #<3600-ETHERNET-INTERFACE 105411572>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor NETI:3600-ETHERNET-INTERFACE -- 6. IV's, 2. FL's 120212364>
   Arg 2 (SI:OPERATION): :TOP-LEVEL

SI:PROCESS-SCHEDULER:  (P.C. = 345)
 8-Jan-86 12:56:43-EST,2386;000000000000
Received: from ZERMATT.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 8 Jan 86 12:56-EST
Received: from XX.LCS.MIT.EDU (MIT-XX.ARPA) by MIT-ZERMATT.ARPA via INTERNET with SMTP id 21025; 8 Jan 86 12:58:45-EST
Date: Wed 8 Jan 86 12:04:17-EST
From: William B. Ackerman <WBA@XX.LCS.MIT.EDU>
Subject: various bugs in profile utility and associated things
To: BUG-EXPLORER@MC.LCS.MIT.EDU, BUG-LISPM@ZERMATT.LCS.MIT.EDU,
    "*PS:<WBA>EXPLORER.BUGS.1"@XX.LCS.MIT.EDU
Message-ID: <12173629536.53.WBA@XX.LCS.MIT.EDU>

The profile utility is screwed up in a great number of ways.
I did the following with an absoultely bare, brand new machine.
No network configuration, release 1.0.2minprod, system 1.72.

Booted, ran (new-user) created myself, with standard login.init
file.

Booted, logged in (using local file sys) found the default ZMACS
mode was common lisp (that's fine) and that the screen did not
hold when printing long things.  Ran profile utility.  It seemed to
think the default ZMACS mode was zetalisp!!  I set it to common lisp.
It seemd to think more processing was enabled!!  I told it to turn it
off.  Told it to write a new login-init.lisp.  Looked at same.  It
contained no reference to the ZMACS default mode!!!  I manually
changed the setting of tv:more-processing-global-enable in the init
file from nil to t.

Booted, logged in.  The screen still does not hold!!!  It appears,
on further experimenting, that the profile utility thinks the default
more processing is turned on, so, if you tell profile to turn it
on, it puts nothing in the init file.  That is, the only thing it
puts in the init file is a command to turn it off, trusting the system
to initialize it on if the init file does not set it.  But it
doesn't work in any case.  Doing a (send tv:selected-window :set-more-p t)
does work.  The profile utility seems to have a completely wrong
perception of how more processing is handled.

Further, it seems to believe the default ZMACS mode is zetalisp when it
is in fact common lisp.)

This is pretty sloppy software maintenance, in a place where its effect
on unsuspecting users is quite visible.  If users tell the profile utility
to do something that is simple, straightforward, and manifestly the profile
utility's principal reason for existing, how are they going to trust
the more subtle pieces of software?
-------
 8-Jan-86 13:18:13-EST,1427;000000000000
Received: from ZERMATT.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 8 Jan 86 13:17-EST
Received: from XX.LCS.MIT.EDU (MIT-XX.ARPA) by MIT-ZERMATT.ARPA via INTERNET with SMTP id 21029; 8 Jan 86 13:20:13-EST
Date: Wed 8 Jan 86 13:17:39-EST
From: William B. Ackerman <WBA@XX.LCS.MIT.EDU>
Subject: bug in ZMACS or something
To: BUG-EXPLORER@MC.LCS.MIT.EDU, BUG-LISPM@ZERMATT.LCS.MIT.EDU,
    "*PS:<WBA>EXPLORER.BUGS.1"@XX.LCS.MIT.EDU
Message-ID: <12173642894.49.WBA@XX.LCS.MIT.EDU>

Release 1.0.2 + network configuration, system version 1.72.

In ZMACS, I edit (with C-X C-F) the file a.lisp, which contains
the single line
(defun fact (n) (cond ((= n 0) 1) (t (* n (fact (1- n))))))
and then type C-E to evaluate that form.  It does so.
I then kill that buffer, type C-X C-D to go into Dired, rename that file
to b.lisp, kill the Dired buffer, and type C-X C-F to edit b.lisp.
I type C-E to evaluate that form.  It gives the usual warning about
redefining a function that had been defined by a different file, asks
whether to go ahead.  I say yes.
It then puts the following message in an error window:
  << While compiling the end of the data >>
The problems described above were encountered processing the end of the data.

What problems?????  Who said anything about COMPILING????  I was EVALUATING!
What's wrong with the end of my data????
(There was a <newline> after the last close paren.)
-------
 8-Jan-86 13:42:07-EST,6191;000000000000
Received: from ZERMATT.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 8 Jan 86 13:41-EST
Received: from XX.LCS.MIT.EDU (MIT-XX.ARPA) by MIT-ZERMATT.ARPA via INTERNET with SMTP id 21037; 8 Jan 86 13:44:13-EST
Date: Wed 8 Jan 86 13:41:44-EST
From: William B. Ackerman <WBA@XX.LCS.MIT.EDU>
Subject: bug in ZMACS
To: BUG-EXPLORER@MC.LCS.MIT.EDU, BUG-LISPM@ZERMATT.LCS.MIT.EDU,
    "*PS:<WBA>EXPLORER.BUGS.1"@XX.LCS.MIT.EDU
Message-ID: <12173647278.20.WBA@XX.LCS.MIT.EDU>

--Text Follows This Line--
In SYSTEM 1.72, Compiler 1.9, File System 1.1,
Universal Command Loop 1.0, Window System 1.5, Input Editor 1.1,
ZMACS 1.2, font editor 1.0, Error Handler 1.0, Suggestions 1.0,
Debug Utilities 1.3, Explorer-Net 1.2, Telnet 1.0, VT100 1.0, ZMail 1.0,
Local-File 1.21, Net-Config 1.5, Explorer Serial & Parallel Ports 1.0,
Printer 1.0, Glossary 1.0, Explorer Streamer Tape 1.11, NVRAM 1.3,
User Profile Utility 1.2, microcode 214, Rel 1.0.2.18, on DOGWOOD:


Insert your description of the circumstances here:

------------------------------------------------------------------
I have created a file "a.clu" in my local directory.  I attempt to
edit it in ZMACS.  It says, in the mode line,
	PL1 is an unsupported mode; autoloading its definition.
and then this happens.  Believe it or not, I sometimes edit CLU code!

A little poking around shows that a file purporting to be PL1 mode
does exist, and the logical name necessary to access it was simply
wrong.  However, it is TOTALLY inappropriate to load PL1 mode when
editing CLU files!!!!!
------------------------------------------------------------------

>>ERROR: No translation for directory ZWEI-UNSUPPORTED on host SYS.
Backtrace from the debugger:

(:METHOD FS::LOGICAL-PATHNAME :TRANSLATED-PATHNAME) (P.C. = 150)
  (SELF is #FS::LOGICAL-PATHNAME "SYS: ZWEI-UNSUPPORTED; PL1MOD.XFASL#>")

 Arg 0 (.OPERATION.): :TRANSLATED-PATHNAME
   --Defaulted args:--
 Arg 1 (CLOSEST-MATCH): NIL
 Local 0 (TRANS): NIL
 Local 1 (UNTRANS): NIL
 Local 2 (NEW-HOST): #FS::LMFS-CHAOS-HOST "LIVE-OAK"
 Local 3 (DEV): NIL
 Local 4 (DIR): NIL
 Local 5 (PATH): NIL
 Local 6: NIL
 Local 7 (NEWDIR): NIL
 Local 8 (PN): NIL


FS::LOGICAL-PATHNAME-PASS-ON (P.C. = 23)

 Rest arg (REST): (:OPEN #FS::LOGICAL-PATHNAME "SYS: ZWEI-UNSUPPORTED; PL1MOD.XFASL#>" :CHARACTERS :DEFAULT)


OPEN (P.C. = 230)

 Arg 0 (FILENAME): #FS::LOGICAL-PATHNAME "SYS: ZWEI-UNSUPPORTED; PL1MOD.XFASL#>"
 Rest arg (KEYWORD-ARGS): (:CHARACTERS :DEFAULT)
 Local 1: ((FS:FILE-ERROR) SI::FILE-RETRY-HANDLER #FS::LOGICAL-PATHNAME "SYS: ZWEI-UNSUPPORTED; PL1MOD.XFASL#>" FS::G8775)
 Local 2: ((# SI::FILE-RETRY-HANDLER #FS::LOGICAL-PATHNAME "SYS: ZWEI-UNSUPPORTED; PL1MOD.XFASL#>" FS::G8775) (FS:FILE-NOT-FOUND SI::CONDITION-CASE-THROW FS::G8876) (# SI::FILE-RETRY-HANDLER #FS::LOGICAL-PATHNAME "SYS: ZWEI-UNSUPPORTED; PL1MOD" FS::G0331))
 Local 3 (NEW-PATHNAME): NIL
 Local 4 (KEYL): NIL
 Local 5 (KEY): NIL
 Local 6 (CHARACTERS): NIL
 Local 7 (DIRECTION): NIL
 Local 8 (BYTE-SIZE): NIL
 Local 9 (ERROR-P): NIL
 Local 10 (ERROR-P-SPECD): NIL
 Local 11 (DELETED-P): NIL
 Local 12 (TEMPORARY-P): NIL
 Local 13 (RAW-P): NIL
 Local 14 (SUPER-IMAGE-P): NIL


FS::OPEN-FILE-SEARCH (P.C. = 126)

 Arg 0 (BASE-PATHNAME): #FS::LOGICAL-PATHNAME "SYS: ZWEI-UNSUPPORTED; PL1MOD"
 Arg 1 (TYPE-LIST): (:XFASL :LISP)
 Arg 2 (DEFAULTS): ((#FS::LISPM-CHAOS-HOST "DOGWOOD" . #FS::LM-PATHNAME "DOG: WBA;") (#FS::LISPM-CHAOS-HOST "TEAK" . #FS::LM-PATHNAME "TEAK: WBA;") (NIL . #FS::LM-PATHNAME "DOG: WBA;"))
 Arg 3 (FOR-FUNCTION): LOAD
 Rest arg (OPEN-OPTIONS): (:CHARACTERS :DEFAULT)
 Local 1 (TYPE): :XFASL
 Local 2 (OPEN-VALUE): NIL
 Local 3: (FS:FILE-NOT-FOUND SI::CONDITION-CASE-THROW FS::G8876)
 Local 4: ((FS:FILE-NOT-FOUND SI::CONDITION-CASE-THROW FS::G8876) (# SI::FILE-RETRY-HANDLER #FS::LOGICAL-PATHNAME "SYS: ZWEI-UNSUPPORTED; PL1MOD" FS::G0331))
 Local 5 (OPEN-VALUE): NIL
 Local 6 (.SELECTQ.ITEM.): NIL
 Local 7: NIL
 Local 8 (TYPE): NIL


FS::LOAD-1 (P.C. = 373)

 Arg 0 (FILE): "sys:zwei-unsupported;pl1mod"
 Arg 1 (PKG): NIL
 Arg 2 (NONEXISTENT-OK-FLAG): NIL
 Arg 3 (DONT-SET-DEFAULT-P): T
 Arg 4 (NO-MSG-P): T
 Local 0: (GLOBAL:ERROR ("Give up on loading ~A." "sys:zwei-unsupported;pl1mod") T ("Give up on loading ~A." "sys:zwei-unsupported;pl1mod") ...)
 Local 1: ("Give up on loading ~A." "sys:zwei-unsupported;pl1mod")
 Local 2 (PATHNAME): #FS::LOGICAL-PATHNAME "SYS: ZWEI-UNSUPPORTED; PL1MOD"
 Local 3: ((FS::MULTIPLE-FILE-NOT-FOUND FS:DIRECTORY-NOT-FOUND) SI::CONDITION-CASE-THROW FS::G0318)
 Local 4: ((# SI::CONDITION-CASE-THROW FS::G0318))
 Local 5: ((#FS::LISPM-CHAOS-HOST "DOGWOOD" . #FS::LM-PATHNAME "DOG: WBA;") (#FS::LISPM-CHAOS-HOST "TEAK" . #FS::LM-PATHNAME "TEAK: WBA;") (NIL . #FS::LM-PATHNAME "DOG: WBA;"))
 Local 6: T
 Local 7: (:XFASL :LISP)
 Local 8: #FS::LOGICAL-PATHNAME "SYS: ZWEI-UNSUPPORTED; PL1MOD"
 Local 9: ((FS:FILE-ERROR) SI::FILE-RETRY-HANDLER #FS::LOGICAL-PATHNAME "SYS: ZWEI-UNSUPPORTED; PL1MOD" FS::G0331)
 Local 10: ((# SI::FILE-RETRY-HANDLER #FS::LOGICAL-PATHNAME "SYS: ZWEI-UNSUPPORTED; PL1MOD" FS::G0331))
 Local 11: NIL
 Local 12 (.FILE-ABORTED-FLAG.): :ABORT
 Local 13 (IGNORE): NIL
 Local 14 (.PROG2-TEMPORARY.): NIL
 Local 15 (NEW-PATHNAME): NIL
 Local 16 (.SELECTQ.ITEM.): NIL


Remainder of stack:

LOAD (P.C. = 111)
ZWEI::GET-FILE-MAJOR-MODE (P.C. = 153)
ZWEI::REVERT-FILE-BUFFER (P.C. = 612)
(:METHOD ZWEI::ZMACS-BUFFER :REVERT) (P.C. = 44)
ZWEI::REVERT-BUFFER (P.C. = 66)
ZWEI::FIND-FILE (P.C. = 252)
ZWEI::COM-FIND-FILE (P.C. = 51)
ZWEI::COMMAND-EXECUTE (P.C. = 104)
ZWEI::MAKE-EXTENDED-COMMAND-INTERNAL (P.C. = 72)
ZWEI::MAKE-EXTENDED-COMMAND-INTERNAL (P.C. = 73)
ZWEI::COMMAND-EXECUTE (P.C. = 104)
ZWEI::PROCESS-COMMAND-CHAR (P.C. = 65)
(:METHOD ZWEI:WINDOW :EDIT) (P.C. = 514)
(:INTERNAL (:METHOD ZWEI:ZMACS-WINDOW :COMBINED :EDIT) 0) (P.C. = 74)
FUNCALL (P.C. = 25)
(:METHOD ZWEI::DISPLAYER :AROUND :EDIT) (P.C. = 31)
(:METHOD ZWEI:ZMACS-WINDOW :COMBINED :EDIT) (P.C. = 47)
ZWEI::ZMACS-WINDOW-TOP-LEVEL (P.C. = 74)
SI::PROCESS-TOP-LEVEL (P.C. = 244)
-------
 8-Jan-86 13:52:07-EST,867;000000000000
Received: from ZERMATT.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 8 Jan 86 13:52-EST
Received: from XX.LCS.MIT.EDU (MIT-XX.ARPA) by MIT-ZERMATT.ARPA via INTERNET with SMTP id 21040; 8 Jan 86 13:54:25-EST
Date: Wed 8 Jan 86 13:51:57-EST
From: William B. Ackerman <WBA@XX.LCS.MIT.EDU>
Subject: bug in TV:BEEP-WAVELENGTH
To: BUG-EXPLORER@MC.LCS.MIT.EDU, BUG-LISPM@ZERMATT.LCS.MIT.EDU,
    "*PS:<WBA>EXPLORER.BUGS.1"@XX.LCS.MIT.EDU
Message-ID: <12173649138.70.WBA@XX.LCS.MIT.EDU>

The variable TV:BEEP-WAVELENGTH is misnamed/misdocumented, or mis-implemented,
I'm not sure which.  When it is increased, the bep pitch goes up; it
should go down.  The wavelength is inversely proportional to the frequency.
I'm not just engaging in acoustical nit-picking -- the documentation of
this variable states that it is the duration of one cycle of the tone.
-------
 8-Jan-86 14:00:29-EST,621;000000000000
Received: from ZERMATT.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 8 Jan 86 14:00-EST
Received: from XX.LCS.MIT.EDU (MIT-XX.ARPA) by MIT-ZERMATT.ARPA via INTERNET with SMTP id 21043; 8 Jan 86 14:02:41-EST
Date: Wed 8 Jan 86 14:00:15-EST
From: William B. Ackerman <WBA@XX.LCS.MIT.EDU>
Subject: bug in :beep and :flash
To: BUG-EXPLORER@MC.LCS.MIT.EDU, BUG-LISPM@ZERMATT.LCS.MIT.EDU,
    "*PS:<WBA>EXPLORER.BUGS.1"@XX.LCS.MIT.EDU
Message-ID: <12173650647.70.WBA@XX.LCS.MIT.EDU>

The behavior of the variable beep is supposed to include flashing but
not beeping when it is set to :flash.  It does neither.
-------
 8-Jan-86 14:22:28-EST,828;000000000000
Received: from ZERMATT.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 8 Jan 86 14:22-EST
Received: from XX.LCS.MIT.EDU (MIT-XX.ARPA) by MIT-ZERMATT.ARPA via INTERNET with SMTP id 21047; 8 Jan 86 14:16:20-EST
Date: Wed 8 Jan 86 14:13:49-EST
From: William B. Ackerman <WBA@XX.LCS.MIT.EDU>
Subject: bug in plural stuff in format
To: BUG-EXPLORER@MC.LCS.MIT.EDU, BUG-LISPM@ZERMATT.LCS.MIT.EDU,
    "*PS:<WBA>EXPLORER.BUGS.1"@XX.LCS.MIT.EDU
Message-ID: <12173653119.35.WBA@XX.LCS.MIT.EDU>

In release 1.0.2minprod, system 1.72 + network configuration.
Common Lisp.

The ~:@p feature of format doesn't work.  Note the following:

> (format t "~R pupp~:p." 1)one pupp.
NIL
> (format t "~R pupp~:p." 2)two pupps.
NIL
> (format t "~R pupp~:@p." 1)one puppies.
NIL
> (format t "~R pupp~:@p." 2)two puppies.
NIL
-------
 9-Jan-86 10:35:58-EST,2979;000000000000
Received: from GOLDILOCKS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 9 Jan 86 10:35-EST
Received: from SCRC-VALLECITO.ARPA by MIT-GOLDILOCKS.ARPA via INTERNET with SMTP id 11989; 9 Jan 86 10:35:28-EST
Received: from CONCORD.SCRC.Symbolics.COM by SCRC-VALLECITO.ARPA via CHAOS with CHAOS-MAIL id 75474; Thu 9-Jan-86 10:26:28-EST
Date: Thu, 9 Jan 86 10:29 EST
From: Bernard S. Greenberg <BSG@SCRC-STONY-BROOK.ARPA>
Subject: :DIRECTION :IO in open doesn't lock a file
To: sr.ehpyc@SPEECH.MIT.EDU, BUG-LISPM@MIT-GOLDILOCKS.ARPA
cc: bug-tracker@SCRC-STONY-BROOK.ARPA
In-Reply-To: The message of 4 Jan 86 15:40-EST from sr.ehpyc@SPEECH.MIT.EDU,
             <860104154030.1.CYPHER@BOO-BOO.MIT.EDU>,
             The message of 4 Jan 86 20:27-EST from sr.ehpyc@SPEECH.MIT.EDU,
             <860104202735.2.CYPHER@BOO-BOO.MIT.EDU>
Message-ID: <860109102927.4.BSG@CONCORD.SCRC.Symbolics.COM>

    Date: Sat, 4 Jan 86 15:40 EST
    From: Scott Cyphers <sr.ehpyc@SPEECH.MIT.EDU>

    In Symbolics 3675 Release 6.1, IP-TCP 29.13, Zoo 9.0,

    The S1 open should lock the file causing S2 to give an error, since :IO
    includes :OUTPUT.  The correct thing happens for all combinations of
    directions of :OUTPUT and :INPUT I tried.  Also, there is no mention
    anywhere in the documentation that the locking even occurs for LMFS.

    (with-open-file (s "goldy:>cypher>test" :direction :output))
    (with-open-file (s1 "goldy:>cypher>test"
			:direction :io :direct t :if-exists :overwrite
			:if-does-not-exist :create)
      (with-open-file (s2 "goldy:>cypher>test"
			  :direction :io :direct t :if-exists :overwrite)))
	
Fixed in an upcoming release (bug-tracker: LMFS 76.5).

    Date: Sat, 4 Jan 86 20:27 EST
    From: Scott Cyphers <sr.ehpyc@SPEECH.MIT.EDU>

    Having thought about it, making :IO be like :OUTPUT is not the right
    thing.  
Yeah, it is.
	    Most likely, you are normally reading from the file, and only
    writing little pieces of it at a time.  Maybe a :STORE-CONDITIONAL
    message something like:
That would be neat, but that is an attempt at a data base product.  We
are doing research and development in doing that right for an upcoming release.
I think in the meantime, the above is more right than wrong, although I could
see it being argued the other way.
    (send stream :store-conditional byte old new failure-action)

    which is like STORE-CONDITIONAL.  If BYTE has value OLD then it is given
    value NEW atomically (with respect to other streams doing
    :STORE-CONDITIONAL).  T is returned if it succeeds.  FAILURE-ACTION can
    be:

    a positive number -- keep trying for this many 60ths of a second, and
    then give up, returning NIL and the value of OLD.

    :wait -- keep trying forever.

    NIL -- return NIL and the value of OLD on a failure.


    I think this would allow users to implement more elaborate record
    locking schemes relatively efficiently.


 9-Jan-86 21:31:10-EST,1635;000000000000
Received: from GOLDILOCKS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 9 Jan 86 21:31-EST
Received: from BOO-BOO.MIT.EDU by MIT-GOLDILOCKS.ARPA via CHAOS with CHAOS-MAIL id 11994; Thu 9-Jan-86 21:32:00-EST
Date: Thu, 9 Jan 86 21:31 EST
From: Scott Cyphers <sr.ehpyc@SPEECH.MIT.EDU>
Subject: Direct Access Bidirectional File streams have no length
To: BUG-LISPM@MIT-GOLDILOCKS.ARPA
Message-ID: <860109213146.0.CYPHER@BOO-BOO.MIT.EDU>

In Symbolics 3675 Release 6.1, IP-TCP 29.13, Zoo 9.0,
Experimental Versatec 7.0, Experimental Spire 17.0,
Experimental Zoo-Spire 4.0, microcode IFU-IO4-XSQ-MIC 336, FEP 127,
FEP0:>V127-LISP.FLOD(2), FEP0:>V127-LOADERS.FLOD(3),
FEP0:>V127-INFO.FLOD(2), FEP0:>V127-TESTS.FLOD(2),
FEP0:>V127-DEBUG.FLOD(1), FEP0:>V127-DISK.FLOD(4), on Lisp Machine Boo Boo:

The :LENGTH message returns nil.  Something like this: 

(defmethod (nfile-direct-bidirectional-stream-mixin :length)
	   ()
  (send self :finish)
  (get (locf si:property-list) :length))

is needed.  Is it the user's job to do the :FINISH, or the stream's?  I
think it is the stream's, since the stream could be made capable
of figuring out what the length is without doing the :FINISH (that is,
once only one :IO stream can be open to a file at once), so needing to
do the :FINISH is an artifact of the current implementation.

I think it would be useful to be able to say something like
(send stream :set-pointer :eof)
or
(send stream :some-kind-of-message-that-i-cant-think-of-a-good-name-for)
instead of
(send stream :set-pointer (send stream :length))
to make appending to these kinds of files more convenient.
10-Jan-86 15:26:20-EST,2531;000000000000
Received: from GOLDILOCKS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 10 Jan 86 15:26-EST
Received: from SMOKEY.MIT.EDU by MIT-GOLDILOCKS.ARPA via CHAOS with CHAOS-MAIL id 12031; Fri 10-Jan-86 15:26:22-EST
Date: Fri, 10 Jan 86 15:26 EST
From: David H. Kaufman <Sr.Kaufman@SPEECH.MIT.EDU>
Subject: CP reflections
To: BUG-LISPM@MIT-GOLDILOCKS.ARPA
Message-ID: <860110152604.2.QUX@SMOKEY.MIT.EDU>

In Symbolics 3670 Release 6.1, IP-TCP 29.13, Zoo 9.0,
Experimental Versatec 8.0, Experimental Spire 17.0,
Experimental Zoo-Spire 5.0, microcode TMC5-IO4-MIC 336, FEP 127,
FEP0:>v127-lisp.flod(2), FEP0:>v127-loaders.flod(2),
FEP0:>v127-debug.flod(1), FEP0:>v127-info.flod(2), on Lisp Machine Smokey:

I like the command processor.  I would like it more if some of these
things were done.

	- The CP argument types seem to have to be defined before a file
using them can be compiled. In large systems, this is a real drawback,
because either the argument type or the commands relating to a data type
have to be in a different file from the data type.  The best situation
(from my point of view) would be if argument types could be used (in
a command definition) before they are defined, although that might make
debugging a little more difficult.

	- Say you have the three commands "Edit Overlay", "Edit Overlay
Parameter", and "Edit Overlay Attribute" and you type "Edit Overlay".
Type RETURN; the CP prints a space.  Type RETURN again; the CP prints a
space again.  Type RETURN again; the CP says "Can't finish command; it
is ambiguous".  There seems to be no way to get at the "Edit Overlay"
command.

	- It would be nice if DEFINE-CP-TYPE,
DEFINE-PROMPT-AND-READ-TYPE, and the CHOOSE-VARIABLE-VALUES types were
better integrated.

	- There is no documentation for DEFINE-CP-TYPE.  This would be
okay if we had up-to-date sources for it; without either I have been
unable to figure out how to define a CP type with a default.

	- I don't understand why DEFINE-CP-COMMAND works the way it
does.  It defines a function for the command name that takes a different
arglist, then hides the body given in the definition (the only thing
that could usefully be defined as a function) on the property list.
Nowhere does the documentation warn that DEFINE-CP-COMMAND expands into
a DEFUN.  There is no way to make DEFINE-CP-COMMAND not create a DEFUN,
which I want to do myself.

	- The functions that are created for argument defaults should
declare the DEFINE-CP-COMMAND as their function-parent.
11-Jan-86 17:31:26-EST,1376;000000000000
Received: from REAGAN.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 11 Jan 86 17:31-EST
Date: Sat, 11 Jan 86 17:32 EST
From: CJL@OZ.AI.MIT.EDU
Sender: File-Server@MIT-REAGAN.ARPA
Subject: BUG in NETI:FIND-OBJECT-FROM-PROPERTY-LIST-COMPARE-1
To: BUG-LISPM@OZ.AI.MIT.EDU
Message-ID: <860111173237.3.FILE-SERVER@MIT-REAGAN.ARPA>

In Symbolics 3600 Release 6.1, IP-TCP 29.13, Mailer 43.6,
6-1-Patches 1.5, AISite 11.8, microcode TMC5-MIC 336, FEP 127,
FEP0:>v127-lisp.flod(1), FEP0:>v127-loaders.flod(1),
FEP0:>v127-debug.flod(1), FEP0:>v127-info.flod(1),
Network-Security patch, Update-Internet-Namespace patch,
Server-Finger patch, Inquir-update patch, Update-AI-Domain patch,
Rodent Free Namespace Editor, on Lisp Machine Ronald Reagan:
Warm booted from: 3600 Ethernet Receiver.

Find-object-from-property-list-compare-1 should try NS-EQ to see
if pattern matches value. Otherwise, Namespace objects that have been
forwarded will not be found in property lists of other objects.

(DEFUN FIND-OBJECT-FROM-PROPERTY-LIST-COMPARE-1 (PATTERN VALUE)
  (COND ((NS-EQ PATTERN VALUE))
;;;       Add this	
	((EQUAL PATTERN VALUE))
	((NULL VALUE) NIL)
	((MEMBER PATTERN '(:* "*")))
	((LISTP PATTERN)
	 (AND (LISTP VALUE)
	      (LOOP FOR V IN VALUE
		    FOR P IN PATTERN
		    ALWAYS (FIND-OBJECT-FROM-PROPERTY-LIST-COMPARE-1 P V))))))
13-Jan-86 12:12:56-EST,1245;000000000000
Received: from GOLDILOCKS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 13 Jan 86 12:12-EST
Received: from BOO-BOO.MIT.EDU by MIT-GOLDILOCKS.ARPA via CHAOS with CHAOS-MAIL id 12103; Mon 13-Jan-86 12:15:26-EST
Date: Mon, 13 Jan 86 12:13 EST
From: Scott Cyphers <sr.ehpyc@SPEECH.MIT.EDU>
Subject: :DIRECTION :IO in open doesn't lock a file
To: BSG@SCRC-STONY-BROOK.ARPA, sr.ehpyc@SPEECH.MIT.EDU,
    BUG-LISPM@MIT-GOLDILOCKS.ARPA
cc: bug-tracker@SCRC-STONY-BROOK.ARPA
In-Reply-To: <860109102927.4.BSG@CONCORD.SCRC.Symbolics.COM>
Message-ID: <860113121300.5.CYPHER@BOO-BOO.MIT.EDU>


	Having thought about it, making :IO be like :OUTPUT is not the right
	thing.  
    Yeah, it is.
		Most likely, you are normally reading from the file, and only
	writing little pieces of it at a time.

By default, making :IO like :OUTPUT is the right thing, but there should
be a way to override the default and make it like :INPUT, like the
:IF-LOCKED :SHARE open option works with the FEP filesystem.  That lets
me write a record server that handles record locking, while letting data
transfer take place with NFILE, and storage with LMFS.  Otherwise, I
think I'd need to make something like NFILE and have it share streams on
the server side.
13-Jan-86 13:31:57-EST,1113;000000000000
Mail-From: GZ created at 13-Jan-86 13:31:47
Received: from BUDDY.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 11 Jan 86 17:01-EST
Date: Sat, 11 Jan 86 17:02 EST
From: Gary L. Drescher <gld@OZ.AI.MIT.EDU>
Subject: mapcar of lambda in optional arg initform doesn't work
To: Bug-Compiler@OZ.AI.MIT.EDU
cc: gld@OZ.AI.MIT.EDU
Message-ID: <860111170235.1.GLD@BUDDY.AI.MIT.EDU>
ReSent-Date: Mon 13 Jan 86 13:31:47-EST
ReSent-From: "Gail Zacharias" <GZ@OZ.AI.MIT.EDU>
ReSent-To: bug-lispm@OZ.AI.MIT.EDU
ReSent-Message-ID: <12174956186.37.GZ@OZ.AI.MIT.EDU>

In Symbolics 3600 Compiler in Release 6.1, IP-TCP 29.13, 6-1-Patches 1.5,
AISite 11.8, COLOR 135.50, COLOR-DEMO 68.0, microcode TMC5-COLOR-MIC 336,
FEP 127, FEP0:>v127-lisp.flod(2), FEP0:>v127-loaders.flod(2),
FEP0:>v127-debug.flod(1), FEP0:>v127-info.flod(2), on Lisp Machine Buddy Holly:

(DEFUN FOO (LIST &OPTIONAL (CPY (MAPCAR #'(LAMBDA (X) X)
					LIST)))
  CPY)

If FOO is compiled, (FOO '(1 2)) returns NIL instead of (1 2).
Interpreted FOO works properly.
(MAPCAR of named function, eg #'1+, instead of lambda-expr, seems to work.)

13-Jan-86 20:19:06-EST,1570;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 13 Jan 86 20:19-EST
Received: from SCRC-STONY-BROOK.ARPA by MC.LCS.MIT.EDU 13 Jan 86 20:20:09 EST
Received: from HARLEM.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 391841; Mon 13-Jan-86 20:19:35-EST
Date: Mon, 13 Jan 86 20:22 EST
From: jean-pierre tanaka <joseph@SCRC-QUABBIN.ARPA>
Subject: printer objects aren't completely updated from the namespace 
To: Chris Lindblad <CJL@OZ.AI.MIT.EDU>, BUG-LISPM@OZ.AI.MIT.EDU
In-Reply-To: <860104180442.1.CJL@GAUSS.AI.MIT.EDU>
Message-ID: <860113202244.8.JPT@HARLEM.SCRC.Symbolics.COM>

    Date: Sat, 4 Jan 86 18:04 EST
    From: Chris Lindblad <CJL@OZ.AI.MIT.EDU>

    In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.4,
    AISite 11.7, microcode TMC5-MIC 336, FEP 127, FEP0:>v127-lisp.flod(2),
    FEP0:>v127-loaders.flod(2), FEP0:>v127-debug.flod(1),
    FEP0:>v127-info.flod(2), Rodent Free Namespace Editor, on Lisp Machine Karl Friedrich Gauss:

    This method or something like it should exist
	
    (DEFMETHOD (MULTIPLE-FONT-HARDCOPY-DEVICE-MIXIN :CHANGE-OF-ATTRIBUTES) ()
      (LET* ((PLIST (SEND SELF :PROPERTY-LIST))
	     (NEW-DEFAULT-FONT (GET (LOCF PLIST) :DEFAULT-FONT))
	     (NEW-HEADER-FONT (GET (LOCF PLIST) :HEADER-FONT)))
	(WHEN NEW-DEFAULT-FONT
	  (SETQ DEFAULT-FONT NEW-DEFAULT-FONT))
	(WHEN NEW-HEADER-FONT
	  (SETQ HEADER-FONT NEW-HEADER-FONT))))

Agreed.  I put something like this into the development system.  [using
character styles instead of fonts, of course.]

14-Jan-86 17:40:09-EST,941;000000000000
Received: from GOLDILOCKS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 14 Jan 86 17:40-EST
Received: from BOO-BOO.MIT.EDU by MIT-GOLDILOCKS.ARPA via CHAOS with CHAOS-MAIL id 12124; Tue 14-Jan-86 17:42:48-EST
Date: Tue, 14 Jan 86 17:40 EST
From: Scott Cyphers <sr.ehpyc@SPEECH.MIT.EDU>
Subject: Symbols read in wrong package
To: BUG-LISPM@MIT-GOLDILOCKS.ARPA
Message-ID: <860114174011.7.CYPHER@BOO-BOO.MIT.EDU>

In Symbolics 3675 Release 6.1, IP-TCP 29.13, Zoo 9.0,
Experimental Versatec 8.0, Experimental Spire 17.0,
Experimental Zoo-Spire 5.0, microcode IFU-IO4-XSQ-MIC 336, FEP 127,
FEP0:>V127-LISP.FLOD(2), FEP0:>V127-LOADERS.FLOD(3),
FEP0:>V127-INFO.FLOD(2), FEP0:>V127-TESTS.FLOD(2),
FEP0:>V127-DEBUG.FLOD(1), FEP0:>V127-DISK.FLOD(4), on Lisp Machine Boo Boo:

If I do 

M-X Disassemble
String

from a Common Lisp buffer, with package CL-USER, it shows me ZL:STRING.
To get CL:STRING, I have to tell it to do CL:STRING.
15-Jan-86 09:05:44-EST,894;000000000000
Received: from SINATRA.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 15 Jan 86 09:05-EST
Date: Wed, 15 Jan 86 09:06 EST
From: Daniel Brotsky <DCB@PYGMALION.AI.MIT.EDU>
Subject: Common Lisp IGNORE declaration ignored by compiler.
To: BUG-LISPM@OZ.AI.MIT.EDU
Message-ID: <"860115090611.1.DCB@PYGMALION"@SINATRA.AI.MIT.EDU>

In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.6,
AISite 11.8, microcode TMC5-MIC 336, FEP 127, FEP0:>v127-lisp.flod(2),
FEP0:>v127-loaders.flod(2), FEP0:>v127-debug.flod(1),
FEP0:>v127-info.flod(2), on Lisp Machine Frank Sinatra:

Compiling this:

;;; -*- Mode: LISP; Syntax: Common-lisp; Package: (ALEX SCL 1000) -*-

(defun defdomain1 (name options slots)
  (declare (ignore slots))
  (setf (get-domain name)
	(make-domain :name name :description (getf :description options ""))))

still produces a warning that SLOTS is not used.

	dan
15-Jan-86 09:49:25-EST,775;000000000000
Received: from XX.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 15 Jan 86 09:49-EST
Date: Wed 15 Jan 86 09:50:49-EST
From: Ken Traub <KT@XX.LCS.MIT.EDU>
Subject: Minor bug in ZMACS for common lisp
To: bug-lispm@OZ.AI.MIT.EDU
Message-ID: <12175440248.17.KT@XX.LCS.MIT.EDU>

	When in a common lisp listener, I can type (/ 3 followed by
control-shift-A and see the arglist for / (the division function).
If I'm in ZMACS, however, C-Sh-A doesn't find the arglist unless I
type //.  My syntax is set for common lisp, as is the package, and
C-Sh-E works properly:  if I evaluate (/ 3 4) I get 3/4, and if I
evaluate (// 3 4) I get the error "// is not a defined function"
(or whatever).

	Perhaps C-Sh-A is not using the common lisp readtable?

				--- Ken
-------
15-Jan-86 09:59:09-EST,1385;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 15 Jan 86 09:59-EST
Received: from SCRC-STONY-BROOK.ARPA by MC.LCS.MIT.EDU 15 Jan 86 09:42:26 EST
Received: from THAMES.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 392889; Wed 15-Jan-86 09:41:18-EST
Date: Wed, 15 Jan 86 09:44 EST
From: Scott McKay <SWM@SCRC-QUABBIN.ARPA>
Subject: Common Lisp IGNORE declaration ignored by compiler.
To: DCB@PYGMALION.AI.MIT.EDU, BUG-LISPM@OZ.AI.MIT.EDU
In-Reply-To: <"860115090611.1.DCB@PYGMALION"@SINATRA.AI.MIT.EDU>
Message-ID: <860115094438.8.SWM@THAMES.SCRC.Symbolics.COM>

    Date: Wed, 15 Jan 86 09:06 EST
    From: Daniel Brotsky <DCB@PYGMALION.AI.MIT.EDU>

    In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.6,
    AISite 11.8, microcode TMC5-MIC 336, FEP 127, FEP0:>v127-lisp.flod(2),
    FEP0:>v127-loaders.flod(2), FEP0:>v127-debug.flod(1),
    FEP0:>v127-info.flod(2), on Lisp Machine Frank Sinatra:

    Compiling this:

    ;;; -*- Mode: LISP; Syntax: Common-lisp; Package: (ALEX SCL 1000) -*-

    (defun defdomain1 (name options slots)
      (declare (ignore slots))
      (setf (get-domain name)
	    (make-domain :name name :description (getf :description options ""))))

    still produces a warning that SLOTS is not used.

This works correctly in the development system.  Thanks for the report.

16-Jan-86 16:21:32-EST,1715;000000000000
Received: from ZERMATT.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 16 Jan 86 15:51-EST
Received: from VIOLIN.MIT.EDU by MIT-ZERMATT.ARPA via CHAOS with CHAOS-MAIL id 21544; Thu 16-Jan-86 15:44:11-EST
Date: Thu, 16 Jan 86 15:43 EST
From: Richard E. Zippel <RZ@MIT-ZERMATT.ARPA>
Subject: Bug in Zmacs
To: BUG-LISPM@MIT-ZERMATT.ARPA
cc: jma@MIT-ZERMATT.ARPA
Message-ID: <860116154308.1.RZ@VIOLIN.MIT.EDU>

In Symbolics 3640 Release 6.1, IP-TCP 29.13, Macsyma 318.12,
6-1-Patches 1.6, MLSite 11.0, Experimental Schema 105.9,
microcode TMC5-IO4-ST506-MIC 336, FEP 127, FEP0:>v127-lisp.flod(2),
FEP0:>v127-loaders.flod(2), FEP0:>v127-debug.flod(1),
FEP0:>v127-info.flod(2), on Violin:

If I create a buffer named bar.sim in fundamental mode and then try to
save it out the default file pathname seems to be bar.lisp.   I believe
this is caused by the following:

;;; Given a major mode keyword, find the first canonical type which implies that mode
(DEFUN CANONICAL-TYPE-FROM-MAJOR-MODE-KEYWORD (MAJOR-MODE-KEYWORD)
  (OR (CAR (RASSQ MAJOR-MODE-KEYWORD FS:*FILE-TYPE-MODE-ALIST*)) ':LISP))

In addition  the current value of FS:*FILE-TYPE-MODE-ALIST* is 

((:MACSYMA . :MACSYMA) (:SAGE-RECORD . :SAGE) (:TEXT . :TEXT)
 (:MSS . :TEXT) (:PL1 . :PL1) (:MIDAS . :MIDAS) (:LISP . :LISP) (:LIL . :LISP)
 (:LOGICAL-PATHNAME-DIRECTORY-TRANSLATIONS . :LISP)
 (:LOGICAL-PATHNAME-TRANSLATIONS . :LISP) (:SYSTEM . :LISP)
 (:PATCH-VERSION-DIRECTORY . :LISP) (:PATCH-SYSTEM-DIRECTORY . :LISP))

Shouldn't the definition of CANONICAL-TYPE-FROM-MAJOR-MODE-KEYWORD be:

(DEFUN CANONICAL-TYPE-FROM-MAJOR-MODE-KEYWORD (MAJOR-MODE-KEYWORD)
  (CAR (RASSQ MAJOR-MODE-KEYWORD FS:*FILE-TYPE-MODE-ALIST*)))

?
16-Jan-86 16:22:45-EST,1183;000000000000
Received: from AI.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 16 Jan 86 15:52-EST
Received: from HILBERT.AI.MIT.EDU by AI.AI.MIT.EDU via Chaosnet; 16 JAN 86  11:53:48 EST
Date: Thu, 16 Jan 86 11:53 EST
From: hlv@OZ.AI.MIT.EDU
Subject: Page fault errors
To: BUG-LISPM@OZ.AI.MIT.EDU
cc: hlv@OZ.AI.MIT.EDU
Message-ID: <"860116115319.1.hlv@PYGMALION"@HILBERT.AI.MIT.EDU>

In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.6,
AISite 11.8, Manip 5.19, Puma 5.15, microcode TMC5-MIC 336, FEP 127,
FEP0:>v127-lisp.flod(2), FEP0:>v127-loaders.flod(2),
FEP0:>v127-debug.flod(1), FEP0:>v127-info.flod(2), on Lisp Machine David Hilbert:
Warm booted from: Mouse.

Several times today I've gotten memory errors which put me in the cold
load stream and required warm booting the machine.  The error message
was: Page fault on unallocated VMA 177601515 while in si:%gc-scavenge.
We've been having some disk problems with this machine, but this isn't 
a hardware problem is it?  

I have been using sys:page-in-array and sys:page-out-array (not while
the machine crashed though); should these not be used when the
incremental garbage collector is on?

Harry Voorhees
16-Jan-86 18:33:38-EST,2532;000000000000
Received: from GOLDILOCKS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 16 Jan 86 17:58-EST
Received: from YOGI.MIT.EDU by MIT-GOLDILOCKS.ARPA via CHAOS with CHAOS-MAIL id 12302; Wed 15-Jan-86 23:07:34-EST
Date: Wed, 15 Jan 86 23:05 EST
From: Mark A. Randolph <sr.randolph@SPEECH.MIT.EDU>
Subject: Weird problem with the loop macro expander.
To: BUG-LISPM@MIT-GOLDILOCKS.ARPA
Message-ID: <860115230510.1.RANDOLPH@YOGI.MIT.EDU>

In Symbolics 3670 Release 6.1, IP-TCP 29.13, Zoo 9.0, Versatec 8.0,
Experimental Spire 17.0, Zoo-Spire 5.0, microcode TMC5-IO4-MIC 336,
FEP 127, FEP0:>v127-lisp.flod(2), FEP0:>v127-loaders.flod(2),
FEP0:>v127-debug.flod(1), FEP0:>v127-info.flod(2), on Lisp Machine Yogi:
Warm booted from: Lisp Listener 1.



>>Trap: The function SI:INITIAL-VALUE is undefined.
While in the function SI:LOOP-TYPED-INIT  SI:LOOP-MAKE-VARIABLE  SI:LOOP-MAKE-ITERATION-VARIABLE

SI:LOOP-TYPED-INIT:  (P.C. = 25)
   Arg 0 (DATA-TYPE): NIL

SI:LOOP-MAKE-VARIABLE:  (P.C. = 46)
   Arg 0 (SI:NAME): I
   Arg 1 (SI:INITIALIZATION): NIL
   Arg 2 (SI:DTYPE): NIL

SI:LOOP-MAKE-ITERATION-VARIABLE:  (P.C. = 7)
   Arg 0 (SI:NAME): I
   Arg 1 (SI:INITIALIZATION): NIL
   Arg 2 (SI:DTYPE): NIL

SI:LOOP-LIST-STEPPER:  (P.C. = 77)
   Arg 0 (SI:VAR): I
   Arg 1 (SI:VAL): (QUOTE (A B C))
   Arg 2 (SI:DATA-TYPE?): NIL
   Arg 3 (SI:FN): CAR

SI:LOOP-DO-FOR:  (P.C. = 50)

SI:LOOP-HACK-ITERATION:  (P.C. = 14)
   Arg 0 (SI:ENTRY): (SI:FOR SI:LOOP-DO-FOR)

SI:LOOP-TRANSLATE-1:  (P.C. = 131)
   Arg 0: (LOOP FOR I IN (QUOTE (A B C)) DO (PRINT I))

SI:LOOP-TRANSLATE:  (P.C. = 5)
   Arg 0 (SI:X): (LOOP FOR I IN (QUOTE (A B C)) DO (PRINT I))
   Arg 1 (IGNORE): NIL

Rest of stack:
FUNCALL:  (P.C. = 5)
SI:EVAL-MACRO:  (P.C. = 46)
SI:*EVAL:  (P.C. = 134)
(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0):  (P.C. = 152)
TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
SI:LISP-COMMAND-LOOP:  (P.C. = 67)
SI:LISP-TOP-LEVEL1:  (P.C. = 5)
SI:LISP-TOP-LEVEL:  (P.C. = 7)


I got this error when trying to run:

    (loop for i in '(a b c) do (print i))

in the lisp-listener.  Now I can't seem to get any of my loops to compile.
Note,  however that this:

(loop for i from 0 to 10 do (print i))

seems to work fine.

This problem began happening after I had been using the machine for about an hour 
after cold-booting, and the first occurrence of it was when I was compiling a function 
in the editor.

What's going on????


Mark.
16-Jan-86 18:34:33-EST,1039;000000000000
Received: from GOLDILOCKS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 16 Jan 86 17:59-EST
Received: from BOO-BOO.MIT.EDU by MIT-GOLDILOCKS.ARPA via CHAOS with CHAOS-MAIL id 12315; Thu 16-Jan-86 13:09:14-EST
Date: Thu, 16 Jan 86 13:05 EST
From: Scott Cyphers <sr.ehpyc@SPEECH.MIT.EDU>
Subject: INCF and the compiler
To: BUG-LISPM@MIT-GOLDILOCKS.ARPA
Message-ID: <860116130555.0.CYPHER@BOO-BOO.MIT.EDU>

In Symbolics 3675 Release 6.1, IP-TCP 29.13, Zoo 9.0, Versatec 8.0,
Experimental Spire 17.0, Zoo-Spire 5.0, microcode IFU-IO4-XSQ-MIC 336,
FEP 127, FEP0:>V127-LISP.FLOD(2), FEP0:>V127-LOADERS.FLOD(3),
FEP0:>V127-INFO.FLOD(2), FEP0:>V127-TESTS.FLOD(2),
FEP0:>V127-DEBUG.FLOD(1), FEP0:>V127-DISK.FLOD(4), on Lisp Machine Boo Boo:

In Zetalisp, (INCF I) exapnds into (SETQ I (1+ I)) which compiles into:

  1  BUILTIN 1+LOCAL IGNORE FP|0    ;I

but in Common Lisp, it expands into (SETQ I (+ I 1)) which compiles to:

  1  PUSH-LOCAL FP|0            ;I
  2  BUILTIN +-INTERNAL STACK 1
  3  POP-LOCAL FP|0             ;I

16-Jan-86 18:34:58-EST,1192;000000000000
Received: from GOLDILOCKS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 16 Jan 86 18:00-EST
Received: from BOO-BOO.MIT.EDU by MIT-GOLDILOCKS.ARPA via CHAOS with CHAOS-MAIL id 12321; Thu 16-Jan-86 16:57:02-EST
Date: Thu, 16 Jan 86 16:53 EST
From: Scott Cyphers <sr.ehpyc@SPEECH.MIT.EDU>
Subject: :ADVANCE-OUTPUT-BUFFER doesn't
To: BUG-LISPM@MIT-GOLDILOCKS.ARPA
Message-ID: <860116165334.4.CYPHER@BOO-BOO.MIT.EDU>

In Symbolics 3675 Release 6.1, IP-TCP 29.13, Zoo 9.0, Versatec 8.0,
Experimental Spire 17.0, Zoo-Spire 5.0, microcode IFU-IO4-XSQ-MIC 336,
FEP 127, FEP0:>V127-LISP.FLOD(2), FEP0:>V127-LOADERS.FLOD(3),
FEP0:>V127-INFO.FLOD(2), FEP0:>V127-TESTS.FLOD(2),
FEP0:>V127-DEBUG.FLOD(1), FEP0:>V127-DISK.FLOD(4), on Lisp Machine Boo Boo:

According to the documentation, when no argument is specified to
:ADVANCE-OUTPUT-BUFFER, then it should send the entire buffer each time.
However, running the following shows that it doesn't send anything (it
does however work if you give it the argument).

(defun foo (file)
  (with-open-file (stream file :direction :output)
    (dotimes (i 100)
      (send stream :get-output-buffer)
      (send stream :advance-output-buffer))))
16-Jan-86 19:10:41-EST,1186;000000000000
Received: from GOLDILOCKS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 16 Jan 86 19:10-EST
Received: from BOO-BOO.MIT.EDU by MIT-GOLDILOCKS.ARPA via CHAOS with CHAOS-MAIL id 12322; Thu 16-Jan-86 19:11:50-EST
Date: Thu, 16 Jan 86 19:08 EST
From: Scott Cyphers <sr.ehpyc@SPEECH.MIT.EDU>
Subject: Weird problem with the loop macro expander.
To: sr.randolph@SPEECH.MIT.EDU, BUG-LISPM@MIT-GOLDILOCKS.ARPA
In-Reply-To: <860115230510.1.RANDOLPH@YOGI.MIT.EDU>
Message-ID: <860116190824.4.CYPHER@BOO-BOO.MIT.EDU>

    Received: from GOLDILOCKS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 16 Jan 86 17:58-EST
    Received: from YOGI.MIT.EDU by MIT-GOLDILOCKS.ARPA via CHAOS with CHAOS-MAIL id 12302; Wed 15-Jan-86 23:07:34-EST
    Date: Wed, 15 Jan 86 23:05 EST
    From: Mark A. Randolph <sr.randolph@SPEECH.MIT.EDU>
    Subject: Weird problem with the loop macro expander.
    To: BUG-LISPM@MIT-GOLDILOCKS.ARPA
    Message-ID: <860115230510.1.RANDOLPH@YOGI.MIT.EDU>

I took a look at this -- Mark was using the :DATA-TYPE property in his
system, and NIL had been given a :DATA-TYPE property of :LIST, which
confused SI:LOOP-TYPED-INIT.  Now I think he's using the DATA-TYPE
property.
16-Jan-86 19:34:14-EST,1094;000000000000
Received: from REAGAN.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 16 Jan 86 19:34-EST
Received: from JIMI.AI.MIT.EDU by MIT-REAGAN.ARPA via CHAOS with CHAOS-MAIL id 19542; Wed 15-Jan-86 14:43:47-EST
Date: Wed, 15 Jan 86 14:44 EST
From:  <williams@MIT-ZERMATT.ARPA>
Subject: Problem with spurious mouse clicks on Jimi
To: BUG-LISPM@OZ.AI.MIT.EDU
Message-ID: <"860115144422.5.williams@ZERMATT"@JIMI.AI.MIT.EDU>

In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.6,
AISite 11.8, microcode TMC5-MIC 336, FEP 127, FEP0:>v127-lisp.flod(2),
FEP0:>v127-loaders.flod(2), FEP0:>v127-debug.flod(1),
FEP0:>v127-info.flod(2), on Lisp Machine Jimi Hendrix:

The problem with spurious mouse blips was not solved by replacing the mouse.
The following are some of the things which occurred with the new mouse.  In
each case the mouse was not being touched:

Hyper Mouse Right not a defined Key

A spontaneous shift from zemacs to zmail (as if a select-M wasy type)

several spontaneous screen blinks

A spontaneous Editor menu poping up

The scren becoming shakey for a moment.
16-Jan-86 19:34:50-EST,2762;000000000000
Mail-From: GZ created at 16-Jan-86 19:34:40
Received: from JANIS.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 15 Jan 86 00:15-EST
Date: Wed, 15 Jan 86 00:16 EST
From: Christopher Fry <cfry@OZ.AI.MIT.EDU>
Subject: reply field on 3600
To: postmaster@OZ.AI.MIT.EDU
Message-ID: <860115001600.1.CFRY@JANIS.AI.MIT.EDU>
ReSent-Date: Thu 16 Jan 86 19:34:39-EST
ReSent-From: "Gail Zacharias" <GZ@OZ.AI.MIT.EDU>
ReSent-To: bug-lispm@OZ.AI.MIT.EDU
ReSent-Message-ID: <12175808677.22.GZ@OZ.AI.MIT.EDU>

I'm having a hard time communicating with fahlman at cmu because
the automatically generated return address of my messages
doesn't work form cmu.

ZMAIL doesn't seem to allow me to set the reply-to field
to automatically be "cfry%oz@MIT-MC.ARPA" as fahlman suggests.
I've included a recent message from him which should indicate the problem.  

Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 12 Jan 86 21:50-EST
Received: from C.CS.CMU.EDU by MC.LCS.MIT.EDU 12 Jan 86 21:51:25 EST
Received: ID <FAHLMAN@C.CS.CMU.EDU>; Sun 12 Jan 86 21:50:49-EST
Date: Sun, 12 Jan 1986  21:50 EST
Message-ID: <FAHLMAN.12174784881.BABYL@C.CS.CMU.EDU>
Sender: FAHLMAN@C.CS.CMU.EDU
From: "Scott E. Fahlman" <Fahlman@C.CS.CMU.EDU>
To:   cfry%oz@MIT-MC.ARPA
Subject: [Mailer: PS:<MAIL.QUEUE>[--QUEUED-MAIL--].NEW-132553071672-BABYL-J9.1]


Fry,

I'm getting sick of trying to answer your mail and having it bounce back
in my face every time.  Please do whatever is necessary to ensure that
your "reply to" address is one that gets through to you from other sites
in net-land.  "cfry%oz@mit-mc" seems to work.  I know that you're not at
fault here, but neither am I.  From now on, if I can't answer by just
hitting "Reply", I'm not going to bother trying assorted other things;
if that bothers you, complain to the postmaster at MIT.  If you should
discover that the problem is here at CMU, that's different.

-- Scott

---------------------------------------------------------------------------
Date: Sunday, 12 January 1986  21:42-EST
From: The Mailer Daemon <Mailer>
To:   FAHLMAN
Re:   PS:<MAIL.QUEUE>[--QUEUED-MAIL--].NEW-132553071672-BABYL-J9.1

No such host as "OZ.AI.MIT.EDU",
bad queue file follows:
-------
=DELIVERY-OPTIONS:MAIL
OZ.AI.MIT.EDU
cfry
SCRC-STONY-BROOK.ARPA
Moon

Date: Sun, 12 Jan 1986  21:42 EST
Message-ID: <FAHLMAN.12174783416.BABYL@C.CS.CMU.EDU>
Sender: FAHLMAN@C.CS.CMU.EDU

From: "Scott E. Fahlman" <Fahlman@CMU-CS-C>
To:   Christopher Fry <cfry@OZ.AI.MIT.EDU>
Cc:   Moon@SCRC-STONY-BROOK.ARPA

Subject: setf code
In-reply-to: Msg of 9 Jan 1986  02:52-EST from Christopher Fry <cfry at OZ.AI.MIT.EDU>


We never put Moon's lisp tools in our local "yellow pages" library
 ...
16-Jan-86 21:16:21-EST,1528;000000000000
Received: from GOLDILOCKS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 16 Jan 86 21:16-EST
Received: from SCRC-STONY-BROOK.ARPA by MIT-GOLDILOCKS.ARPA via INTERNET with SMTP id 12325; 16 Jan 86 21:16:20-EST
Received: from PEACE.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 394525; Thu 16-Jan-86 21:04:33-EST
Date: Thu, 16 Jan 86 21:04 EST
From: Charles Hornig <Hornig@SCRC-RIVERSIDE.ARPA>
Subject: INCF and the compiler
To: Scott Cyphers <sr.ehpyc@SPEECH.MIT.EDU>,
    BUG-LISPM@MIT-GOLDILOCKS.ARPA
In-Reply-To: <860116130555.0.CYPHER@BOO-BOO.MIT.EDU>
Message-ID: <860116210456.4.HORNIG@PEACE.SCRC.Symbolics.COM>

    Date: Thu, 16 Jan 86 13:05 EST
    From: Scott Cyphers <sr.ehpyc@SPEECH.MIT.EDU>

    In Symbolics 3675 Release 6.1, IP-TCP 29.13, Zoo 9.0, Versatec 8.0,
    Experimental Spire 17.0, Zoo-Spire 5.0, microcode IFU-IO4-XSQ-MIC 336,
    FEP 127, FEP0:>V127-LISP.FLOD(2), FEP0:>V127-LOADERS.FLOD(3),
    FEP0:>V127-INFO.FLOD(2), FEP0:>V127-TESTS.FLOD(2),
    FEP0:>V127-DEBUG.FLOD(1), FEP0:>V127-DISK.FLOD(4), on Lisp Machine Boo Boo:

    In Zetalisp, (INCF I) exapnds into (SETQ I (1+ I)) which compiles into:

      1  BUILTIN 1+LOCAL IGNORE FP|0    ;I

    but in Common Lisp, it expands into (SETQ I (+ I 1)) which compiles to:

      1  PUSH-LOCAL FP|0            ;I
      2  BUILTIN +-INTERNAL STACK 1
      3  POP-LOCAL FP|0             ;I

Thanks for this report.  The problem you describe has been fixed and
will be distributed in a future release.

17-Jan-86 02:49:01-EST,1349;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 17 Jan 86 02:48-EST
Received: from SCRC-STONY-BROOK.ARPA by MC.LCS.MIT.EDU 15 Jan 86 14:33:25 EST
Received: from SWALLOW.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 393151; Wed 15-Jan-86 13:55:16-EST
Date: Wed, 15 Jan 86 13:55 EST
From: Michael Greenwald <Greenwald@SCRC-STONY-BROOK.ARPA>
Subject: Minor bug in ZMACS for common lisp
To: KT@XX.LCS.MIT.EDU, bug-lispm@OZ.AI.MIT.EDU
In-Reply-To: <12175440248.17.KT@XX.LCS.MIT.EDU>
Message-ID: <860115135518.9.GREENWALD@SWALLOW.SCRC.Symbolics.COM>

    Date: Wed 15 Jan 86 09:50:49-EST
    From: Ken Traub <KT@XX.LCS.MIT.EDU>

	    When in a common lisp listener, I can type (/ 3 followed by
    control-shift-A and see the arglist for / (the division function).
    If I'm in ZMACS, however, C-Sh-A doesn't find the arglist unless I
    type //.  My syntax is set for common lisp, as is the package, and
    C-Sh-E works properly:  if I evaluate (/ 3 4) I get 3/4, and if I
    evaluate (// 3 4) I get the error "// is not a defined function"
    (or whatever).

	    Perhaps C-Sh-A is not using the common lisp readtable?

				    --- Ken
    -------

Thanks for reporting this problem.  It has already been fixed in the
developement system, and should appear in the next release.

17-Jan-86 12:42:07-EST,1077;000000000000
Received: from JIMI.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 17 Jan 86 12:41-EST
Date: Fri, 17 Jan 86 12:45 EST
From:  <williams@MIT-ZERMATT.ARPA>
Subject: Problem with spurious mouse clicks on Jimi
To: BUG-LISPM@OZ.AI.MIT.EDU
Message-ID: <"860117124528.9.williams@ZERMATT"@JIMI.AI.MIT.EDU>

In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.6,
AISite 11.8, microcode TMC5-MIC 336, FEP 127, FEP0:>v127-lisp.flod(2),
FEP0:>v127-loaders.flod(2), FEP0:>v127-debug.flod(1),
FEP0:>v127-info.flod(2), on Lisp Machine Jimi Hendrix:

The problem with spurious mouse blips was not solved by replacing the mouse.
The following are some of the things which occurred with the new mouse.  In
each case the mouse was not being touched:

Hyper Mouse Right not a defined Key

A spontaneous shift from zemacs to zmail (as if a select-M was typed)

several spontaneous screen blinks, including complete loss of control
of the screen for several minutes.

Spontaneous Editor menus poping up.

The screen image becoming shakey.

The screen becoming arrested.
17-Jan-86 13:11:48-EST,1798;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 17 Jan 86 13:11-EST
Received: from SCRC-QUABBIN.ARPA by MC.LCS.MIT.EDU 17 Jan 86 13:14:18 EST
Received: from NEPONSET.SCRC.Symbolics.COM by SCRC-QUABBIN.ARPA via CHAOS with CHAOS-MAIL id 236236; Fri 17-Jan-86 13:12:53-EST
Date: Fri, 17 Jan 86 13:17 EST
From: David C. Plummer <DCP@SCRC-QUABBIN.ARPA>
Subject: Page fault errors
To: hlv@OZ.AI.MIT.EDU, BUG-LISPM@OZ.AI.MIT.EDU
In-Reply-To: <"860116115319.1.hlv@PYGMALION"@HILBERT.AI.MIT.EDU>
Message-ID: <860117131715.6.DCP@NEPONSET.SCRC.Symbolics.COM>

    Date: Thu, 16 Jan 86 11:53 EST
    From: hlv@OZ.AI.MIT.EDU

    In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.6,
    AISite 11.8, Manip 5.19, Puma 5.15, microcode TMC5-MIC 336, FEP 127,
    FEP0:>v127-lisp.flod(2), FEP0:>v127-loaders.flod(2),
    FEP0:>v127-debug.flod(1), FEP0:>v127-info.flod(2), on Lisp Machine David Hilbert:
    Warm booted from: Mouse.

    Several times today I've gotten memory errors which put me in the cold
    load stream and required warm booting the machine.  The error message
    was: Page fault on unallocated VMA 177601515 while in si:%gc-scavenge.
    We've been having some disk problems with this machine, but this isn't 
    a hardware problem is it?  

If you have been having disk problems, you probably shouldn't trust any
data that gets written to or from them.  Garbled data can easily
manifest itself as random pointers.

    I have been using sys:page-in-array and sys:page-out-array (not while
    the machine crashed though); should these not be used when the
    incremental garbage collector is on?

It isn't supposed to be possible to trash anything using
page-in/out-array.  Your problems are probably related to the disk
itself.

17-Jan-86 14:59:08-EST,1868;000000000000
Received: from REAGAN.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 17 Jan 86 14:58-EST
Received: from DUANE.AI.MIT.EDU by MIT-REAGAN.ARPA via CHAOS with CHAOS-MAIL id 20069; Fri 17-Jan-86 15:01:43-EST
Date: Fri, 17 Jan 86 15:01 EST
From: Patrick A. O'Donnell <PAO@EECS.MIT.EDU>
Subject: Printing arrays inconsistently
To: BUG-LISPM@OZ.AI.MIT.EDU
Message-ID: <860117150111.2.PAO@DUANE.AI.MIT.EDU>

In Symbolics 3670 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.6,
AISite 11.9, microcode TMC5-IO4-MIC 336, FEP 127,
FEP0:>v127-lisp.flod(2), FEP0:>v127-loaders.flod(2),
FEP0:>v127-debug.flod(1), FEP0:>v127-info.flod(2), on Lisp Machine Duane Allman:

The following with SI:*PRINARRAY* set to T.

The printing of array contents is not consistent when printing
multidimensional 1-bit arrays and character arrays.  Zetalisp prints
2-dim bit arrays using bit vector notation, but doesn't print character
arrays using string notation.  Common Lisp does neither.

In a Common Lisp listener:

-> (setq test-1 (make-array '(2 5) :element-type '(unsigned-byte 1)))
#2A((0 0 0 0 0) (0 0 0 0 0))
-> (setq test-2 (make-array '(2 5) :element-type 'character
				   :initial-contents '("abcde" "fghij")))
#2A((#\a #\b #\c #\d #\e) (#\f #\g #\h #\i #\j))

Whereas in a Zetalisp listener:

-> cl-user::test-1 
#2A(#*00000 #*00000)
-> cl-user::test-2 
#2A((#\a #\b #\c #\d #\e) (#\f #\g #\h #\i #\j))


It would seem that being consistent one way or the other would be
reasonable.

While I'm on the subject of printing arrays, when the contents are being
truncated due to PRINLENGTH, an extra right paren is printed:

In Zetalisp (with PRINLENGTH = 10):

-> (make-array 12)
#(NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL ...))

As I reported before, the Common Lisp printer does not obey
*print-length*, and so does not print an extra paren.
		- Pat
