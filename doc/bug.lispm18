 4-Apr-84 01:19:15-EST,735;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 4 Apr 84 01:19-EST
Received: from MIT-APIARY-4 by MIT-OZ via Chaosnet; 4 Apr 84 01:18-EST
Date: Wed, 4 Apr 84 01:21 EST
From: Sathyanandan Rajivan <Rajivan%MIT-OZ@MIT-MC.ARPA>
Subject: Press streams
To: BUG-LISPM@MIT-MC.ARPA

In Release 5.0 [Beta Test rev 7], FEP 18, on Lisp Machine Apiary-4 (3600):

We did (MAKE-INSTANCE 'PRESS:PRESS-STREAM) which bombed because the 
DEVICE variable is unbound. This variable is referenced by a :BEFORE :INIT
method supposedly defined in <S.R5.Hardcopy>Patch-20-8.Lisp which Meta-.
can't seem to find. There is no method defined in the Press.Lisp file from 
which the stream comes. We were unable to proceed any further debugging this.

 4-Apr-84 10:45:19-EST,1160;000000000000
Received: from MIT-MERLIN by MIT-OZ via Chaosnet; 4 Apr 84 10:44-EST
Date: Wednesday, 4 April 1984, 10:47-EST
From: Charles Rich <RICH at MIT-OZ>
Subject: Bordered-Constraint-Frame-with-Shared-IO-Buffer
To: bug-lispm at MIT-OZ

In System 4.5:

In the window system manual documentation for this flavor, it
says that you can send :TYI messages to the frame itself, as well
as to any of its panes.  This does not seem to work.  Looking at
the code (see below), it does not seem any provision is made to
handle stream-type messages at the frame level and send them
to the IO-BUFFER of the frame.
		-CR

_________________________________________________________________________

(DEFFLAVOR CONSTRAINT-FRAME-WITH-SHARED-IO-BUFFER
	((IO-BUFFER NIL)) (BASIC-CONSTRAINT-FRAME)
  (:INITABLE-INSTANCE-VARIABLES IO-BUFFER))

(DEFMETHOD (CONSTRAINT-FRAME-WITH-SHARED-IO-BUFFER :BEFORE :INIT) (IGNORE)
  (OR IO-BUFFER (SETQ IO-BUFFER (MAKE-DEFAULT-IO-BUFFER))))

(DEFMETHOD (CONSTRAINT-FRAME-WITH-SHARED-IO-BUFFER :CREATE-PANE)
	(IGNORE FLAVOR &REST OPTIONS)
  (LEXPR-FUNCALL #'MAKE-WINDOW FLAVOR ':SUPERIOR SELF ':IO-BUFFER IO-BUFFER OPTIONS))
 4-Apr-84 12:03:35-EST,1303;000000000000
Received: from MIT-MORRISON by MIT-OZ via Chaosnet; 4 Apr 84 11:59-EST
Date: Wednesday, 4 April 1984, 12:01-EST
From:  <Daniel at MIT-OZ>
Subject: It half worked....
To: BUG-LISPM at MIT-OZ
Cc: aab at MIT-OZ, cjl at MIT-OZ

In Release 5.0 [Beta Test rev 7], FEP 18, on Lisp Machine Jim Morrison (3600):

I while ago I asked how do make a system dependent upon another system.  I got
a reply back from DCP which I used:

(defsystem technology-independent-daedalus
  (:pathname-default "dpl:dpl;")
  (:package dpl)
  (:patchable "dpl:patch;")
  (:short-name "tidaed")

  ...
  )

(defsystem daedalus 
  (:pathname-default "dpl:dpl;")
  (:package dpl)
  (:patchable "dpl:patch;")
  (:short-name "daed")
  (:component-systems  technology-independent-daedalus)

  (:module tech ("nmos"))

  (:do-components nil)

  (:compile-load tech (si:do-components-internal)))

This caused the dependencies I needed but make-system now believes that
the Daedalus major version number is the major version number of
technology-independent-daedalus.  Since technology-independent-daedalus
major version is now 5 and daedalus's major version is 4 (make-system
'daedalus) fails because it can't find the patch-directory for version 5
daedalus which of course doesn't exist.

Daniel
 4-Apr-84 12:59:32-EST,1149;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 4 Apr 84 12:58-EST
Received: from SCRC-NEPONSET by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 44098; Wed 4-Apr-84 13:01:22-EST
Date: Wednesday, 4 April 1984, 12:57-EST
From: David C. Plummer <DCP at SCRC-TENEX>
Subject: It half worked....
To: Daniel at MIT-OZ, BUG-LISPM at MIT-OZ
cc: aab at MIT-OZ, cjl at MIT-OZ
In-Reply-To: The message of 4 Apr 84 12:01-EST from Daniel at MIT-OZ

    Date: Wednesday, 4 April 1984, 12:01-EST
    From:  <Daniel at MIT-OZ>

    This caused the dependencies I needed but make-system now believes that
    the Daedalus major version number is the major version number of
    technology-independent-daedalus.  Since technology-independent-daedalus
    major version is now 5 and daedalus's major version is 4 (make-system
    'daedalus) fails because it can't find the patch-directory for version 5
    daedalus which of course doesn't exist.

This bug in make-system will cause the entire system to break when we
try to build a new internal development system.  At that time we will
timeout on various threats/promises by others to fix this.
 4-Apr-84 13:02:25-EST,899;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 4 Apr 84 13:01-EST
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 13453; Wed 4-Apr-84 13:03:07-EST
Date: Wednesday, 4 April 1984, 13:04-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: Bordered-Constraint-Frame-with-Shared-IO-Buffer
To: Charles Rich <RICH at MIT-OZ>, bug-lmdoc at SCRC-TENEX
Cc: bug-lispm at MIT-OZ
In-reply-to: The message of 4 Apr 84 10:47-EST from Charles Rich <RICH at MIT-OZ>

    Date: Wednesday, 4 April 1984, 10:47-EST
    From: Charles Rich <RICH at MIT-OZ>

    In System 4.5:

    In the window system manual documentation for this flavor,
    (Bordered-Constraint-Frame-with-Shared-IO-Buffer), it
    says that you can send :TYI messages to the frame itself, as well
    as to any of its panes.  This does not seem to work.

The documentation is incorrect.
 4-Apr-84 16:02:04-EST,3927;000000000000
Received: from MIT-LISPM-18 by MIT-OZ via Chaosnet; 4 Apr 84 16:01-EST
Date: Wednesday, 4 April 1984, 16:01-EST
From: Robert L. Krawitz <ZZZ.RLK at MIT-OZ>
To: BUG-LISPM at MIT-OZ, bug-zmail at MIT-OZ

In System 98.38, CADR 3.6, ZMail 53.13, MIT-Specific 22.0, microcode 309,
ZM MIT, on Lisp Machine Eighteen:


Insert your description of the circumstances here:

OK, here's an example of what I was talking about.  I entered the
profile editor, clicked middle on filters, clicked on needs-printing,
and clicked universe.  In the universe editor (I suppose that name is
OK, I clicked <zzz.rlk.bitnet>bitnet.arc and <zzz.rlk>zzz.rlk.babyl in
that order and clicked done, produicing this lovely error.  Several
other times, I got into a wedged state (enough so I don't even remember)
from which I had to reset from the system menu (c-m-abort wouldn't even
work!).  Note that using union had no visible effect, as opposed to not
using it.

>>ERROR: Too many arguments to macro: 4 passed, 3 allowed.
Backtrace from the debugger:

DEFINE-UNIVERSE (P.C. = 70)

 Arg 0 (*MACROARG*): (DEFINE-UNIVERSE NONAME-1 NIL "BITNET.ARC PS:<ZZZ.RLK.BITNET> OZ:" ...)
Local 0 (UNIVERSE): NIL
Local 1 (IGNORE): NIL
Local 2 (EXPANSION): NIL


SI:AUTOMATIC-DISPLACE (P.C. = 61)

 Arg 0 (EXPANDER-FUNCTION): #<DTP-FEF-POINTER DEFINE-UNIVERSE 22227205>
 Arg 1 (ORIGINAL-FORM): (DEFINE-UNIVERSE NONAME-1 NIL "BITNET.ARC PS:<ZZZ.RLK.BITNET> OZ:" ...)
Local 0 (EXPANDED-FORM): NIL


SI:EVAL1 (P.C. = 671)

 Arg 0 (FORM): (DEFINE-UNIVERSE NONAME-1 NIL "BITNET.ARC PS:<ZZZ.RLK.BITNET> OZ:" ...)
   --Defaulted args:--
 Arg 1 (NOHOOK): NIL
Local 0 (ARGNUM): NIL
Local 1 (TEM): NIL
Local 2 (ENV): NIL
Local 3 (TAIL): NIL
Local 4 (FCTN): (MACRO . #<DTP-FEF-POINTER DEFINE-UNIVERSE 22227205>)
Local 5 (ARG-DESC): 1000077
Local 6 (NUM-ARGS): NIL
Local 7 (CLOSURE-PASSED): NIL
Local 8 (LAMBDA-LIST): NIL
Local 9 (LL): NIL
Local 10 (QUOTE-STATUS): NIL
Local 11 (REST-FLAG): NIL
Local 12 (ARGL): NIL
Local 13: ("Retry macro expansion.")
Local 14: (ERROR ("Retry macro expansion.") T ("Retry macro expansion.") ...)
Local 15 (IGNORE): NIL
Local 16 (ADL): NIL
Local 17 (ITEM): NIL
Local 18 (*SELECTQ-ITEM*): NIL


Additional information supplied with call:
 Multiple values passed to frame, but frame pointer is NIL.
 This means that we were going to pass multiple values
 to a frame that did not want them.

EVAL (P.C. = 62)

 Arg 0 (FORM): (DEFINE-UNIVERSE NONAME-1 NIL "BITNET.ARC PS:<ZZZ.RLK.BITNET> OZ:" ...)
   --Defaulted args:--
 Arg 1 (NOHOOK): NIL
Local 0 (TEM): NIL


(:SELECT-METHOD ZMAIL-UNIVERSE-COMMAND-LIST :MOUSE-BUTTON) (P.C. = 123)

 Arg 0 (IGNORE): :MOUSE-BUTTON
 Arg 1 (CH): 4000001
 Arg 2 (WINDOW): #<BUTTON-PANE Done 3221530 exposed>
 Arg 3 (IGNORE): 43
 Arg 4 (IGNORE): 14
Local 0 (WINDOW-NAME): DONE-BUTTON


Remainder of stack:

(:METHOD UNIVERSE-DEFINITION-FRAME :PROCESS-SPECIAL-COMMAND) (P.C. = 25)
(:METHOD ZMAIL-COMMAND-LOOP-MIXIN :COMMAND-LOOP) (P.C. = 252)
(:INTERNAL (:METHOD ZMAIL-UTILITY-FRAME :COMBINED :COMMAND-LOOP) 0) (P.C. = 44)
FUNCALL (P.C. = 25)
(:METHOD ZMAIL-COMMAND-LOOP-MIXIN :AROUND :COMMAND-LOOP) (P.C. = 57)
(:METHOD ZMAIL-UTILITY-FRAME :COMBINED :COMMAND-LOOP) (P.C. = 43)
(:METHOD UNIVERSE-DEFINITION-FRAME :GET-UNIVERSE) (P.C. = 113)
DEFINE-NEW-UNIVERSE (P.C. = 163)
PROFILE-NEW-UNIVERSE (P.C. = 33)
MENU-CHOOSE-WITH-NEW (P.C. = 133)
...
(:SELECT-METHOD ZMAIL-COMMAND-LIST :MENU) (P.C. = 32)
(:METHOD ZMAIL-FRAME :PROCESS-SPECIAL-COMMAND) (P.C. = 25)
(:METHOD ZMAIL-COMMAND-LOOP-MIXIN :COMMAND-LOOP) (P.C. = 252)
(:INTERNAL (:METHOD ZMAIL-FRAME :COMBINED :COMMAND-LOOP) 0) (P.C. = 44)
FUNCALL (P.C. = 25)
(:METHOD ZMAIL-COMMAND-LOOP-MIXIN :AROUND :COMMAND-LOOP) (P.C. = 57)
(:METHOD ZMAIL-FRAME :COMBINED :COMMAND-LOOP) (P.C. = 43)
ZMAIL-PROCESS-TOP-LEVEL (P.C. = 115)
SI:PROCESS-TOP-LEVEL (P.C. = 246)
 5-Apr-84 13:17:29-EST,3139;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 5 Apr 84 13:15-EST
Date: Thursday, 5 April 1984, 13:12-EST
From: CMB at MIT-MC
Sender: asm at MIT-MC
Subject: ITS filename completion
To: BUG-LISPM at MIT-OZ

In Release 5.0 [Beta Test rev 7], FEP 13, on PI Project (3600):

I tried to complete an ITS pathname.

>>Error: Cannot coerce ("ASM") into a string
While in the function STRING  (:DEFUN-METHOD FS:QUOTE-COMPONENT-STRING)  FS:QUOTE-COMPONENT-STRING

STRING:  (P.C. = 114)
   Arg 0 (X): ("ASM")
   Local 1 (STR): "Cannot coerce ~S into a string"

(:DEFUN-METHOD FS:QUOTE-COMPONENT-STRING):  (P.C. = 4)
   Arg 0 (SELF): #<ITS-PATHNAME <<Error printing value>>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:PATHNAME -- 0. IV's, 1. FL's 76472261>
   Arg 2 (STRING): ("ASM")

FS:QUOTE-COMPONENT-STRING:  (P.C. = 12)
   Rest arg (ARGS): (("ASM"))

FS:STRING-OR-WILD:  (P.C. = 22)
   Arg 0 (FIELD): ("ASM")
   --Defaulted args:--
   Arg 1 (NO-QUOTE-P): NIL

(:METHOD FS:ITS-PATHNAME-MIXIN :STRING-FOR-HOST):  (P.C. = 3)
   Arg 0 (SELF): #<ITS-PATHNAME <<Error printing value>>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:ITS-PATHNAME-MIXIN -- 7. IV's, 1. FL's 104114710>
   Arg 2 (OPERATION): :STRING-FOR-HOST

(:METHOD FS:ITS-PATHNAME :COMBINED :STRING-FOR-HOST):  (P.C. = 12)
   Arg 0 (SELF): #<ITS-PATHNAME <<Error printing value>>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:ITS-PATHNAME -- 4. IV's, 7. FL's 104114673>
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

FS:COMPLETE-CHAOS:  (P.C. = 133)
   Arg 0 (ACCESS-PATH): #<ITS-QFILE-ACCESS-PATH MC using QFILE 6322132>
   Arg 1 (PATHNAME): #<ITS-PATHNAME <<Error printing value>>
   Arg 2 (STRING): "router;pidef"
   Arg 3 (OPTIONS): (:READ)

(:METHOD FS:QFILE-ACCESS-PATH :COMPLETE-STRING):  (P.C. = 10)
   Arg 0 (SELF): #<ITS-QFILE-ACCESS-PATH MC using QFILE 6322132>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:QFILE-ACCESS-PATH -- 3. IV's, 0. FL's 104233506>
   Arg 2 (OPERATION): :COMPLETE-STRING
   Arg 3 (DEFAULT): #<ITS-PATHNAME <<Error printing value>>
   Arg 4 (STRING): "router;pidef"
   Arg 5 (OPTIONS): (:READ)

Rest of stack:
(:METHOD FS:ACTIVE-PATHNAME-MIXIN :COMPLETE-STRING):  (P.C. = 14)
FS:COMPLETE-PATHNAME:  (P.C. = 114)
ZWEI:PATHNAME-COMPLETE:  (P.C. = 16)
ZWEI:COM-PATHNAME-COMPLETE-AND-EXIT-IF-UNIQUE:  (P.C. = 2)
ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 200)
ZWEI:COMMAND-LOOP:  (P.C. = 73)
ZWEI:EDIT-IN-MINI-BUFFER:  (P.C. = 122)
(:METHOD ZWEI:HISTORY :FUNCALL-WITH-DEFAULT):  (P.C. = 12)
ZWEI:READ-DEFAULTED-PATHNAME:  (P.C. = 57)
ZWEI:COM-FIND-FILE:  (P.C. = 4)
ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
ZWEI:MAKE-EXTENDED-COMMAND-INTERNAL:  (P.C. = 77)
SYS:CALL-FUNNY-FUNCTION:  (P.C. = 101)
Closure of ZWEI:MAKE-EXTENDED-COMMAND-INTERNAL:
ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 200)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 41)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
 5-Apr-84 20:59:26-EST,1012;000000000000
Received: from MIT-JIMI by MIT-OZ via Chaosnet; 5 Apr 84 20:59-EST
Date: Thursday, 5 April 1984, 20:58-EST
From:  <CARLF at MIT-OZ>
Subject: a suggestion
To: BUG-LISPM at MIT-OZ

In Release 5.0 [Beta Test rev 7], on Lisp Machine Jimi Hendrix (3600):

	There is this new feature which asks you if you really want to
save out a file with unbalanced parentheses, and uses yes-or-no-p to get
your answer.  It seems to me that y-or-n-p is more the right thing.
Yes-or-no-p is designed to make sure that you want to do something
really drastic, and keep you from making a mistake.  Unfortunately, it
takes 3 or 4 keystrokes to answer.  I save out files with unbalanced
parentheses all the time, and while it is nice to be reminded, it is a
bother to have to type all those keystrokes.  If you changed it to
y-or-n-p, the only effect would be to increase the error rate slightly.
Since errors in this process don't make a whole lot of difference, this
doesn't seem like a big problem.

					--carl
 5-Apr-84 21:03:34-EST,411;000000000000
Received: from MIT-JIMI by MIT-OZ via Chaosnet; 5 Apr 84 21:02-EST
Date: Thursday, 5 April 1984, 21:02-EST
From:  <CARLF at MIT-OZ>
Subject: arglist of make-hash-table (slight bug)
To: BUG-LISPM at MIT-OZ

In Release 5.0 [Beta Test rev 7], on Lisp Machine Jimi Hendrix (3600):

A ctl-sh-a on make-hash-table produces a useless result.  Could
this be fixed with (declare (arglist ...)) ?

				--carl
 5-Apr-84 21:08:47-EST,493;000000000000
Received: from MIT-JIMI by MIT-OZ via Chaosnet; 5 Apr 84 21:08-EST
Date: Thursday, 5 April 1984, 21:08-EST
From:  <CARLF at MIT-OZ>
Subject: hashtable init args
To: BUG-LISPM at MIT-OZ

In Release 5.0 [Beta Test rev 7], on Lisp Machine Jimi Hendrix (3600):

	:rehash-size (keyword to make-hash-table) and :growth-factor
(keyword to make-equal-hash-table) do almost exactly the same thing but have
very different names.  How about making both work on either function?

					--carl
 5-Apr-84 22:25:55-EST,3807;000000000000
Received: from MIT-LISPM-1 by MIT-OZ via Chaosnet; 5 Apr 84 22:19-EST
Date: Thursday, 5 April 1984, 22:19-EST
From: Robert P. Krajewski <RpK at MIT-OZ>
Subject: ADVISE bug
To: BUG-LISPM-MIT at MIT-OZ
Message-ID: <[MIT-LISPM-1].4/05/84 22:19:30.RpK>

In Don't-dump-a-band! Inconsistent (unreleased patches loaded) System 98.43,
CADR 3.6, ZMail 53.14, MIT-Specific 22.0, microcode 309,
on Lisp Machine One:

This is with COMPILE-ENCAPSULATIONS-FLAG set to T:

(DEFUN ! (N) (IF (ZEROP N) 0 (* N (! (- N 1)))))

(ADVISE ! :AROUND :NEGATIVE-CHECK ()
  (IF (< (FIRST ARGLIST) 0) (FERROR () "Foo !") :DO-IT))

<< While compiling ! >> ; actually, the ADVISE form
 A local SPECIAL declaration for ARGLIST is being inherited.
The declaration should be at the beginning of the construct that binds
the variable.
It still works now, but fix it quickly before it stops working.

Here is a description of the symbol !

Symbol ! is in the USER package.
The function definition of ! is #<DTP-FEF-POINTER ! 30635212>: (&REST &SPECIAL ARGLIST)
     
     FEF for function !
     Initial relative PC: 36 halfwords.
     The Fast Argument Option is not active, but here it is anyway:
        Evaluated rest arg, Linear enter must check ADL, 0 args.
     The length of the local block is 3
     The total storage length of the FEF is 26
     There are special variables, 
     but the S-V bit map is not active. 
     There is an ADL:  It is 3 long, and starts at 10
     Rest arg (ARGLIST) is special, not initialized.
     Local 1 (ARGLIST) is special, initialized by binding it to itself.
     Debugging info:
       (SYSTEM:INTERPRETED-DEFINITION(NAMED-LAMBDA (!
(SI:ENCAPSULATED-DEFINITION #:! ADVISE)) (&EVAL &REST ARGLIST) (DECLARE (SPECIAL ARGLIST)) (SI:ENCAPSULATION-LET ((ARGLIST (SI:ENCAPSULATION-LIST* ARGLIST))) (SI:DISPLACED (SI:ADVISED-FUNCTION () () ((PROGN (QUOTE :NEGATIVE-CHECK) (IF (< (FIRST ARGLIST) 0) (FERROR () "Foo !") :DO-IT))) (FUNCTION #:!)) (SI:ADVISE-PROG (VALUES) (SI:ADVISE-SETQ VALUES (SI:ADVISE-MULTIPLE-VALUE-LIST (SI:ADVISE-PROGN (PROGN (QUOTE :NEGATIVE-CHECK) (SI:DISPLACED (IF (< (FIRST ARGLIST) 0) (FERROR () "Foo !") (SI:ADVISE-APPLY (FUNCTION #:!) ARGLIST)) (COND ((< (FIRST ARGLIST) 0) (FERROR () "Foo !")) (T (SI:ADVISE-APPLY (FUNCTION #:!) ARGLIST)))))))) (SI:ADVISE-RETURN-LIST VALUES))))))
       (:MACROS-EXPANDED ((FIRST 21063031) (IF 15514553) (SI:DISPLACED 12134160) (SI:ADVISED-FUNCTION 504032)))
       (COMPILER:LOCAL-MAP ((ARGLIST) (ARGLIST) (VALUES)))
       (SI:ENCAPSULATED-DEFINITION #:! ADVISE)
       (SYSTEM:FUNCTION-PARENT !)
     

! has property :COMPILATION-DEFINED: T
! has property ZWEI:ZMACS-BUFFERS: ((#<ZMACS-BUFFER "*Buffer-1*" 37325267> . "(DEFUN ! (N) (IF (ZEROP N) 0 (* N (! (- N 1)))))"))
     
     ((#<ZMACS-BUFFER "*Buffer-1*" 37325267> . "(DEFUN ! (N) (IF (ZEROP N) 0 (* N (! (- N 1)))))")) is a list

Here is the debugging info ground out:

(SYSTEM:INTERPRETED-DEFINITION
  (NAMED-LAMBDA (! (SI:ENCAPSULATED-DEFINITION #:! ADVISE)) (&EVAL &REST ARGLIST)
		(DECLARE (SPECIAL ARGLIST))
		(SI:ENCAPSULATION-LET ((ARGLIST (SI:ENCAPSULATION-LIST* ARGLIST)))
		  (SI:DISPLACED
		    (SI:ADVISED-FUNCTION () ()
		     ((PROGN (QUOTE :NEGATIVE-CHECK)
			     (IF (< (FIRST ARGLIST) 0) (FERROR () "Foo !") :DO-IT)))
		     (FUNCTION #:!))
		    (SI:ADVISE-PROG (VALUES)
		     (SI:ADVISE-SETQ VALUES
		       (SI:ADVISE-MULTIPLE-VALUE-LIST
			 (SI:ADVISE-PROGN
			   (PROGN (QUOTE :NEGATIVE-CHECK)
			    (SI:DISPLACED (IF (< (FIRST ARGLIST) 0) (FERROR () "Foo !")
					    (SI:ADVISE-APPLY (FUNCTION #:!) ARGLIST))
					  (COND ((< (FIRST ARGLIST) 0) (FERROR () "Foo !"))
						(T (SI:ADVISE-APPLY (FUNCTION #:!) ARGLIST)))
					  )))))
		     (SI:ADVISE-RETURN-LIST VALUES))))))
 6-Apr-84 00:49:58-EST,4422;000000000000
Received: from MIT-MORRISON by MIT-OZ via Chaosnet; 6 Apr 84 00:48-EST
Date: Friday, 6 April 1984, 00:49-EST
From:  <GAVAN at MIT-OZ>
Subject: overwhelming lossage with "logical" pathnames.
To: BUG-LISPM at MIT-OZ, bug-beta-test at SCRC-TENEX,
    bug-lispm at SCRC-TENEX

In Release 5.0 [Beta Test rev 7], Experimental RELATUS 102.75, FEP 18, on Lisp Machine Jim Morrison (3600):

PLEASE FIX THIS RIGHT AWAY.  SEND A PATCH.   NOW I CAN'T EVEN RUN MAKE-SYSTEM!

>>Error: The symbol NIL has an invalid function definition
While in the function NIL  (:METHOD FS:PATHNAME :TRANSLATE-WILD-PATHNAME)  (:METHOD FS:PATHNAME :TRANSLATE-WILD-PATHNAME-REVERSIBLE)

NIL:
   Arg 0: :RAW-DEVICE

(:METHOD FS:PATHNAME :TRANSLATE-WILD-PATHNAME):  (P.C. = 34)  (from OZ:SRC:<S.R5.IO>WILD)
   Arg 0 (SELF): #<LOGICAL-PATHNAME "RL: UTILS; *.*.*">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:PATHNAME -- 0. IV's, 1. FL's 104066176>
   Arg 2 (OPERATION): :TRANSLATE-WILD-PATHNAME
   Arg 3 (WILD-PATHNAME): #<TOPS20-PATHNAME "OZ:PS:<RELATUS.UTILS>*.*.*">
   Arg 4 (SOURCE-PATHNAME): #<LOGICAL-PATHNAME "RL: UTILS; R-SYSFNS.BIN.NEWEST">

(:METHOD FS:PATHNAME :TRANSLATE-WILD-PATHNAME-REVERSIBLE):  (P.C. = 11)
   Arg 0 (SELF): #<LOGICAL-PATHNAME "RL: UTILS; *.*.*">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:PATHNAME -- 0. IV's, 1. FL's 104066176>
   Arg 2 (OPERATION): :TRANSLATE-WILD-PATHNAME-REVERSIBLE
   Arg 3 (WILD-PATHNAME): #<TOPS20-PATHNAME "OZ:PS:<RELATUS.UTILS>*.*.*">
   Arg 4 (SOURCE-PATHNAME): #<LOGICAL-PATHNAME "RL: UTILS; R-SYSFNS.BIN.NEWEST">

(:METHOD FS:LOGICAL-PATHNAME :TRANSLATED-PATHNAME):  (P.C. = 61)
   Arg 0 (SELF): #<LOGICAL-PATHNAME "RL: UTILS; R-SYSFNS.BIN.NEWEST">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:LOGICAL-PATHNAME -- 0. IV's, 4. FL's 104066166>
   Arg 2 (OPERATION): :TRANSLATED-PATHNAME

(:INTERNAL (:METHOD FS:LOGICAL-PATHNAME :COMBINED :TRANSLATED-PATHNAME) 0.):  (P.C. = 7)
   Arg 0 (SELF): #<LOGICAL-PATHNAME "RL: UTILS; R-SYSFNS.BIN.NEWEST">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:LOGICAL-PATHNAME -- 0. IV's, 4. FL's 104066166>
   Rest arg (.DAEMON-CALLER-ARGS.): (:TRANSLATED-PATHNAME)

(:METHOD FS:LOGICAL-PATHNAME :WHOPPER :TRANSLATED-PATHNAME):  (P.C. = 21)
   Arg 0 (SELF): #<LOGICAL-PATHNAME "RL: UTILS; R-SYSFNS.BIN.NEWEST">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:LOGICAL-PATHNAME -- 0. IV's, 4. FL's 104066166>
   Arg 2 (.WHOPPER-CONTINUATION.): #<DTP-COMPILED-FUNCTION (:INTERNAL (:METHOD FS:LOGICAL-PATHNAME :COMBINED :TRANSLATED-PATHNAME) 0.) 5372100>
   Arg 3 (.OLD-SELF-MAPPING-TABLE.): #<Map to flavor FS:LOGICAL-PATHNAME -- 0. IV's, 4. FL's 104066166>
   Arg 4 (.OPERATION.): :TRANSLATED-PATHNAME

(:METHOD FS:LOGICAL-PATHNAME :COMBINED :TRANSLATED-PATHNAME):  (P.C. = 11)
   Arg 0 (SELF): #<LOGICAL-PATHNAME "RL: UTILS; R-SYSFNS.BIN.NEWEST">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:LOGICAL-PATHNAME -- 0. IV's, 4. FL's 104066166>
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

(:DEFUN-METHOD FS:LOGICAL-PATHNAME-PASS-ON):  (P.C. = 5)
   Arg 0 (SELF): #<LOGICAL-PATHNAME "RL: UTILS; R-SYSFNS.BIN.NEWEST">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:LOGICAL-PATHNAME -- 0. IV's, 4. FL's 104066166>
   Rest arg (REST): (:STRING-FOR-HOST)

Rest of stack:
(:METHOD FS:LOGICAL-PATHNAME :STRING-FOR-HOST):  (P.C. = 10)
FS:FILE-STRING-FOR-HOST:  (P.C. = 4)
FS:MULTIPLE-PLISTS-CHAOS:  (P.C. = 163)
(:METHOD FS:QFILE-ACCESS-PATH :MULTIPLE-FILE-PLISTS):  (P.C. = 6)
(:METHOD FS:ACTIVE-PATHNAME-MIXIN :MULTIPLE-FILE-PLISTS):  (P.C. = 13)
(:DEFUN-METHOD FS:LOGICAL-PATHNAME-PASS-ON):  (P.C. = 7)
(:METHOD FS:LOGICAL-PATHNAME :MULTIPLE-FILE-PLISTS):  (P.C. = 10)
FS:MULTIPLE-FILE-PLISTS:  (P.C. = 132)
SI:SYSTEM-GET-FILE-PROPERTY-LIST:  (P.C. = 33)
SI:SYSTEM-GET-CREATION-DATE:  (P.C. = 42)
SI:FILE-NEWER-THAN-FILE-P:  (P.C. = 3)
SI:QUEUE-FILES-AS-NEEDED:  (P.C. = 46)
SI:QUEUE-ONE-TRANSFORMATION:  (P.C. = 33)
SI:PERFORM-TRANSFORMATIONS:  (P.C. = 122)
SI:PERFORM-TRANSFORMATIONS:  (P.C. = 64)
MAKE-SYSTEM:  (P.C. = 222)
SI:*EVAL:  (P.C. = 370)
TV:MOUSE-SENSITIVE-EVAL-FOR-TOP-LEVEL:  (P.C. = 35)  (from RL: UTILS; W-MAGIC)
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 200)
SI:MY-LISP-COMMAND-LOOP:  (P.C. = 116)  (from RL: U; FIX-LISP-COMMAND-LOOP)
TV:MOUSE-SENSITIVE-LISP-TOP-LEVEL1:  (P.C. = 32)  (from RL: UTILS; W-MAGIC)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
 6-Apr-84 01:16:13-EST,911;000000000000
Received: from SCRC-TENEX by MIT-OZ via Chaosnet; 6 Apr 84 01:15-EST
Date: Friday, 6 April 1984  01:15-EST
From: David C. Plummer <DCP at SCRC-TENEX>
To:   <CARLF at MIT-OZ>
Cc:   BUG-LISPM at MIT-OZ
Subject: hashtable init args
In-reply-to: The message of 5 Apr 1984 21:08-EST from <CARLF at MIT-OZ>

    Date: Thursday, 5 April 1984, 21:08-EST
    From:  <CARLF at MIT-OZ>

    In Release 5.0 [Beta Test rev 7], on Lisp Machine Jimi Hendrix (3600):

    	:rehash-size (keyword to make-hash-table) and
    :growth-factor (keyword to make-equal-hash-table) do almost
    exactly the same thing but have very different names.  How
    about making both work on either function?

Huh?  As I recall, not having a manual handy, they are completely
different.  :rehash-size 0.85 :growth-factor 100. means let
the hash table get 85% full, and when it does, make the hash
table 100 times larger.
 6-Apr-84 02:58:37-EST,1251;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 6 Apr 84 02:57-EST
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 13686; Wed 4-Apr-84 20:56:28-EST
Date: Wednesday, 4 April 1984, 20:57-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: Fix for improper erasure in non-overstrike supdup
To: dove at MIT-TWEETY-PIE
Cc: BUG-LISPM at MIT-OZ, bug-beta-test at SCRC-TENEX
In-reply-to: The message of 2 Apr 84 14:25-EST from dove at MIT-TWEETY-PIE

    Date: Monday, 2 April 1984, 14:25-EST
    From:  <dove at MIT-TWEETY-PIE>

    In Release 5.0 [Beta Test rev 7], on Lisp Machine Tweety Pie (3600):

    The following change to a patch in release 5.0 prevents the erasure
    of the first character of previous lines when using supdup in
    non-overstrike mode.  There are perhaps other "motion" characters that
    should be checked for, but this is an improvement over previous
    behavior.

    (DEFMETHOD (TELNET:NVT-WINDOW :BEFORE :TYO) (CH &OPTIONAL IGNORE)
      (TELNET:WALLPAPER-OPERATION ':TYO CH)
      (UNLESS (OR TELNET:OVERSTRIKE-P (EQ CH #/RETURN)) (SEND SELF ':CLEAR-CHAR)))

I back-converted the equivalent fix that was in the source and included 
it in patch 243.633.
 6-Apr-84 08:28:58-EST,1517;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 6 Apr 84 08:28-EST
Received: from SCRC-CONCORD by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 14163; Fri 6-Apr-84 08:30:45-EST
Date: Friday, 6 April 1984, 08:32-EST
From: Bernard S. Greenberg <BSG at SCRC-TENEX>
Subject: hashtable init args
To: CARLF at MIT-OZ, BUG-LISPM at MIT-OZ
In-reply-to: The message of 5 Apr 84 21:08-EST from CARLF at MIT-OZ

    Date: Thursday, 5 April 1984, 21:08-EST
    From:  <CARLF at MIT-OZ>

    In Release 5.0 [Beta Test rev 7], on Lisp Machine Jimi Hendrix (3600):

	    :rehash-size (keyword to make-hash-table) and :growth-factor
    (keyword to make-equal-hash-table) do almost exactly the same thing but have
    very different names.  How about making both work on either function?

    Date: Friday, 6 April 1984  01:15-EST
    From: David C. Plummer <DCP at SCRC-TENEX>
    Huh?  As I recall, not having a manual handy, they are completely
    different.  :rehash-size 0.85 :growth-factor 100. means let
    the hash table get 85% full, and when it does, make the hash
    table 100 times larger.
CARLF says ":rehash-size", not :rehash-threshold.  I find no mention of
such a quantity in either the current or 4.0 source.

    Date: Thursday, 5 April 1984, 21:02-EST
    From:  <CARLF at MIT-OZ>

    A ctl-sh-a on make-hash-table produces a useless result.  Could
    this be fixed with (declare (arglist ...)) ?
Thanks.  In the source, for make-hash-table and make-equal-hash-table.
 6-Apr-84 11:42:35-EST,980;000000000000
Received: from MIT-EECS by MIT-OZ via Chaosnet; 6 Apr 84 11:42-EST
Date: Friday, 6 April 1984, 11:31-EST
From: Webster Dove <dove at MIT-DSPG>
Subject: how do I cons temporary stuff?
To: BUG-LISPM at MIT-OZ

In Release 5.0 [Beta Test rev 7], on Lisp Machine Tweety Pie (3600):

I need to make up lists inside a function that are not needed once the
function returns.  Unfortunately, the elements of the lists must be
evaluated.  Since with-stack-list quotes its args, I tried making a
private area, consing in it and using si:reset-temporary-area.  That
seemed to work for small numbers of iterations, but when I tried 10000
loops of consing and resetting, the machine halted once, claimed I
called the function nil with 200 args once, and simliar bizarre
behavior.  Rather than chase that down, I am asking if there is an
alternative (fast) way of consing on the stack.  If there is not, I will
resort to a global array that gets reused and grown as necessary.
 6-Apr-84 11:57:47-EST,1120;000000000000
Received: from SCRC-TENEX by MIT-OZ via Chaosnet; 6 Apr 84 11:57-EST
Date:  6 Apr 1984 1158-EST
From: David C. Plummer <DCP@SCRC-TENEX>
Subject: Re: how do I cons temporary stuff?
To: dove@MIT-DSPG
cc: BUG-LISPM@MIT-OZ
In-Reply-To: The message of Friday, 6 April 1984, 11:31-EST from Webster Dove <dove at MIT-DSPG>

You are confused about with-stack-list.  The interpreted definition
has to quote its args in order to set up the environment.  For example
  (with-stack-list (l x y z) (copylist l))
does not return something equal so '(x y z) but returns
something equal to (list x y z) where x, y znd z are evaluated.

You can only reset a temporary area if you know nobody else is looking
at it, i.e., if there are no pointers into it.  It sounds like each
iteration was reseting the array while somebody higher on the stack
still had a pointer to it.  (This isn't what you want because
of your previous confusion) but if you wanted to cons arrays, and
you KNEW only one process would be using the area, then there are
fairly simple ways to make only the outermost function do the reset.
-------
 6-Apr-84 15:40:34-EST,904;000000000000
Received: from SCRC-TENEX by MIT-OZ via Chaosnet; 6 Apr 84 15:39-EST
Date: Friday, 6 April 1984  15:38-EST
From: CWH at SCRC-TENEX
To:   Steven C. Bagley <bagley at MIT-OZ>
Cc:   BUG-LISPM at MIT-OZ
Subject: arglist uses wrong function
In-reply-to: The message of 1 Apr 1984 11:20-EST from Steven C. Bagley <bagley at MIT-OZ>

    Date: Sunday, 1 April 1984, 11:20-EST
    From: Steven C. Bagley <bagley at MIT-OZ>
    To:   BUG-LISPM at MIT-OZ
    Re:   arglist uses wrong function

    In Release 5.0 [Beta Test rev 7], on Lisp Machine Buddy Holly (3600):

    do the following:

    (defun foo (a b c d) (ignore a b c d))

    then type

    (foo 1 (list 2 3) 4

    then control-shift-A (arglist).
    it gives the arglist of LIST not FOO, as it should.

This bug, along with many others in the same category, will be fixed
when the input editor is converted to use Zwei.
 6-Apr-84 21:02:21-EST,3838;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 6 Apr 84 21:01-EST
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 14432; Fri 6-Apr-84 21:04:09-EST
Date: Friday, 6 April 1984, 21:06-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: ITS filename completion
To: CMB at MIT-MC
Cc: BUG-LISPM at MIT-OZ
In-reply-to: The message of 5 Apr 84 13:12-EST from CMB at MIT-MC

    Date: Thursday, 5 April 1984, 13:12-EST
    From: CMB at MIT-MC

    In Release 5.0 [Beta Test rev 7], FEP 13, on PI Project (3600):

    I tried to complete an ITS pathname.

There is not enough information in the backtrace to tell what was the default
against which you typed your string to be completed.  If you know, please resubmit
the bug report.

    >>Error: Cannot coerce ("ASM") into a string
    While in the function STRING  (:DEFUN-METHOD FS:QUOTE-COMPONENT-STRING)  FS:QUOTE-COMPONENT-STRING

    STRING:  (P.C. = 114)
       Arg 0 (X): ("ASM")
       Local 1 (STR): "Cannot coerce ~S into a string"

    (:DEFUN-METHOD FS:QUOTE-COMPONENT-STRING):  (P.C. = 4)
       Arg 0 (SELF): #<ITS-PATHNAME <<Error printing value>>
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:PATHNAME -- 0. IV's, 1. FL's 76472261>
       Arg 2 (STRING): ("ASM")

    FS:QUOTE-COMPONENT-STRING:  (P.C. = 12)
       Rest arg (ARGS): (("ASM"))

    FS:STRING-OR-WILD:  (P.C. = 22)
       Arg 0 (FIELD): ("ASM")
       --Defaulted args:--
       Arg 1 (NO-QUOTE-P): NIL

    (:METHOD FS:ITS-PATHNAME-MIXIN :STRING-FOR-HOST):  (P.C. = 3)
       Arg 0 (SELF): #<ITS-PATHNAME <<Error printing value>>
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:ITS-PATHNAME-MIXIN -- 7. IV's, 1. FL's 104114710>
       Arg 2 (OPERATION): :STRING-FOR-HOST

    (:METHOD FS:ITS-PATHNAME :COMBINED :STRING-FOR-HOST):  (P.C. = 12)
       Arg 0 (SELF): #<ITS-PATHNAME <<Error printing value>>
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:ITS-PATHNAME -- 4. IV's, 7. FL's 104114673>
       Rest arg (.DAEMON-CALLER-ARGS.): NIL

    FS:COMPLETE-CHAOS:  (P.C. = 133)
       Arg 0 (ACCESS-PATH): #<ITS-QFILE-ACCESS-PATH MC using QFILE 6322132>
       Arg 1 (PATHNAME): #<ITS-PATHNAME <<Error printing value>>
       Arg 2 (STRING): "router;pidef"
       Arg 3 (OPTIONS): (:READ)

    (:METHOD FS:QFILE-ACCESS-PATH :COMPLETE-STRING):  (P.C. = 10)
       Arg 0 (SELF): #<ITS-QFILE-ACCESS-PATH MC using QFILE 6322132>
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:QFILE-ACCESS-PATH -- 3. IV's, 0. FL's 104233506>
       Arg 2 (OPERATION): :COMPLETE-STRING
       Arg 3 (DEFAULT): #<ITS-PATHNAME <<Error printing value>>
       Arg 4 (STRING): "router;pidef"
       Arg 5 (OPTIONS): (:READ)

    Rest of stack:
    (:METHOD FS:ACTIVE-PATHNAME-MIXIN :COMPLETE-STRING):  (P.C. = 14)
    FS:COMPLETE-PATHNAME:  (P.C. = 114)
    ZWEI:PATHNAME-COMPLETE:  (P.C. = 16)
    ZWEI:COM-PATHNAME-COMPLETE-AND-EXIT-IF-UNIQUE:  (P.C. = 2)
    ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
    ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
    (:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 200)
    ZWEI:COMMAND-LOOP:  (P.C. = 73)
    ZWEI:EDIT-IN-MINI-BUFFER:  (P.C. = 122)
    (:METHOD ZWEI:HISTORY :FUNCALL-WITH-DEFAULT):  (P.C. = 12)
    ZWEI:READ-DEFAULTED-PATHNAME:  (P.C. = 57)
    ZWEI:COM-FIND-FILE:  (P.C. = 4)
    ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
    ZWEI:MAKE-EXTENDED-COMMAND-INTERNAL:  (P.C. = 77)
    SYS:CALL-FUNNY-FUNCTION:  (P.C. = 101)
    Closure of ZWEI:MAKE-EXTENDED-COMMAND-INTERNAL:
    ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
    ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
    (:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 200)
    (:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 41)
    ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)
    SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
 7-Apr-84 16:56:27-EST,2507;000000000000
Received: from MIT-MORRISON by MIT-OZ via Chaosnet; 7 Apr 84 16:55-EST
Date: Saturday, 7 April 1984, 17:00-EST
From: Ken Haase <KWH at MIT-OZ>
Subject: Array index bug while loading BIN file.
To: BUG-LISPM at MIT-OZ

In Release 5.0 [Beta Test rev 7], FEP 18, on Lisp Machine Jim Morrison (3600):

This happened while loading a compiled file from
MAKE-SYSTEM.  The compiled file (if it's useful) is in
"PYGMALION:[KWH.ARLO]KERNEL.BIN;26".

>>Trap: The subscript given to the AR-1 instruction, 3840. (from local variable SI:INDEX), on #<ART-Q-64. 76554405> was beyond the length, 64..
While in the function SI:BIN-LOAD-NEXT-COMMAND  SI:BIN-NEXT-VALUE  SI:LOAD-LIST

SI:BIN-LOAD-NEXT-COMMAND:  (P.C. = 6)
   Arg 0 (STREAM): #<FILE-INPUT-BINARY-STREAM "Arlo: SOURCES; KERNEL.BIN.NEWEST" 15565633>
   Local 1 (INDEX): 3840.
   Local 2 (EXTRA-ARG): NIL

SI:BIN-NEXT-VALUE:  (P.C. = 5)
   Arg 0 (STREAM): #<FILE-INPUT-BINARY-STREAM "Arlo: SOURCES; KERNEL.BIN.NEWEST" 15565633>

SI:LOAD-LIST:  (P.C. = 16)
   Arg 0 (STREAM): #<FILE-INPUT-BINARY-STREAM "Arlo: SOURCES; KERNEL.BIN.NEWEST" 15565633>
   Arg 1 (LENGTH): 816.

SI:LOAD-BIN-OP-LIST-IMMEDIATE:  (P.C. = 10)
   Arg 0 (STREAM): #<FILE-INPUT-BINARY-STREAM "Arlo: SOURCES; KERNEL.BIN.NEWEST" 15565633>
   Arg 1 (LENGTH): 816.

SI:BIN-LOAD-NEXT-COMMAND:  (P.C. = 15)
   Arg 0 (STREAM): #<FILE-INPUT-BINARY-STREAM "Arlo: SOURCES; KERNEL.BIN.NEWEST" 15565633>

SI:BIN-NEXT-VALUE:  (P.C. = 5)
   Arg 0 (STREAM): #<FILE-INPUT-BINARY-STREAM "Arlo: SOURCES; KERNEL.BIN.NEWEST" 15565633>

SI:BIN-DEFCONST-1:  (P.C. = 15)
   Arg 0 (STREAM): #<FILE-INPUT-BINARY-STREAM "Arlo: SOURCES; KERNEL.BIN.NEWEST" 15565633>
   Arg 1 (LENGTH): 2864.
   Arg 2 (FUNCTION): #<DTP-COMPILED-FUNCTION SI:DEFCONST-1 1246752>

SI:LOAD-BIN-OP-DEFCONST:  (P.C. = 5)
   Arg 0 (STREAM): #<FILE-INPUT-BINARY-STREAM "Arlo: SOURCES; KERNEL.BIN.NEWEST" 15565633>
   Arg 1 (LENGTH): 2864.

Rest of stack:
SI:BIN-LOAD-NEXT-COMMAND:  (P.C. = 15)
SI:BIN-LOAD-TOP-LEVEL:  (P.C. = 6)
SI:BIN-LOAD-FILE-INTERNAL:  (P.C. = 111)
SI:BIN-LOAD-FILE:  (P.C. = 22)
SI:FASLOAD-1:  (P.C. = 5)
SI:DO-FILE-TRANSFORMATIONS:  (P.C. = 242)
SI:PERFORM-TRANSFORMATIONS:  (P.C. = 166)
SI:PERFORM-TRANSFORMATIONS:  (P.C. = 64)
MAKE-SYSTEM:  (P.C. = 222)
SI:*EVAL:  (P.C. = 370)
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 200)
SI:LISP-COMMAND-LOOP:  (P.C. = 115)
SI:LISP-TOP-LEVEL1:  (P.C. = 22)
SI:LISP-TOP-LEVEL2:  (P.C. = 5)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
 7-Apr-84 17:49:23-EST,4226;000000000000
Received: from MIT-AVATAR by MIT-OZ via Chaosnet; 7 Apr 84 17:48-EST
Date: Saturday, 7 April 1984, 17:50-EST
From: Apprentice for KMP <KBE at MIT-OZ>
Subject: Base/IBase lossage in patch directory format used by MAKE-SYSTEM
To: BUG-LISPM at MIT-OZ
Cc: BUG-LMDOC at MIT-OZ

In Release 4.5, site configuration 88, Vanilla, on PA Lisp Machine Avatar:

It's probable that the last time I built this system, I did it in a world 
that had *NOPOINT bound to T. Normally, I would have *NOPOINT bound to NIL
when I build this world. In any event, I do not think the binding of *NOPOINT 
should affect the patch system's behavior. The patch dir file says to look for
("Knowledge-Based-Editor" 314 ...), which is being read now in BASE 8 because
proper care was not taken to preserve write-read number equivalence in the
patch system.

I find this sort of bug very aggravating. This is not the first time I've 
seen it (eg, there was a similar bug in the band transfer protocol which I
reported a while back). It is not a bug that arises due to something 
unforseen in a complex interaction. It is a simple bug that is easily
anticipated and which should not repeatedly appear in production-quality code.

This stupid little bug cost me about an hour and a half of work lost due 
to its occurrence (I was dumping a band), identifying the bug, sending the 
bug report, and hand-reformatting the patch directory to have dots after
the numbers so that the bug doesn't recur.

Perhaps the documentation people could take some time out in some
document or another and talk about the importance of either writing
"~D." rather than just "~D" in format or of guaranteeing the reader which
will re-read a form is going to understand the radix conventions.

-kmp

** NOTE: THIS BACKTRACE INFO IS IN BASE 8 **

>>Error: File not found
For OZ:PS:<KBE.PATCH>KNOWLEDGE-BASED-EDITOR-204.PATCH-DIR
While in the function (METHOD FS:HOST-UNIT COMMAND)  FS:OPEN-CHAOS  (METHOD FS:CHAOS-PATHNAME OPEN)

(METHOD FS:HOST-UNIT COMMAND):  (P.C. = 363)
   (SELF = #<HOST-UNIT 2732006>)
   Arg 0 (OPERATION): COMMAND
   Arg 1 (MARK-P): NIL
   Arg 2 (STREAM-OR-HANDLE): "I1947"
   Arg 3 (SIMPLE-P): NIL
   Arg 4 (WHOSTATE): "Open"
   Rest arg (COMMANDS): ("OPEN " READ " " CHARACTER "" "" "" "" "" "" ...)
   Local 1 (HANDLE): "I1947"
   Local 2 (STREAM): NIL
   Local 3 (PKT): #<CHAOS Packet 26141302>
   Local 4 (SUCCESS): NIL
   Local 5 (STRING): "I1947 ERROR FNF F File not found"
   Local 6 (TRANSACTION-ID): "T2144"
   Local 7 (CREATE-P): T
   Local 8 (FROM): 6
   Local 9 (CONDITION): NIL
   Local 10: T
   Local 11: (#<CASE-HANDLER 2351607>)

FS:OPEN-CHAOS:  (P.C. = 577)
   Arg 0 (HOST): #<TOPS20-CHAOS-HOST MIT-OZ>
   Arg 1 (*COMMAND-PATHNAME*): #<TOPS20-PATHNAME "OZ:PS:<KBE.PATCH>KNOWLEDGE-BASED-EDITOR-204.PATCH-DIR">
   Arg 2 (OPTIONS): NIL

(METHOD FS:CHAOS-PATHNAME OPEN):  (P.C. = 26)
   (SELF = #<TOPS20-PATHNAME "OZ:PS:<KBE.PATCH>KNOWLEDGE-BASED-EDITOR-204.PATCH-DIR">)
   Arg 0 (OPERATION): OPEN
   Arg 1 (PATHNAME): #<TOPS20-PATHNAME "OZ:PS:<KBE.PATCH>KNOWLEDGE-BASED-EDITOR-204.PATCH-DIR">
   Rest arg (OPTIONS): NIL

OPEN:  (P.C. = 375)
   Arg 0 (PATHNAME): #<TOPS20-PATHNAME "OZ:PS:<KBE.PATCH>KNOWLEDGE-BASED-EDITOR-204.PATCH-DIR">
   Rest arg (KEYWORD-ARGS): NIL

SI:READ-PATCH-DIRECTORY:  (P.C. = 134)
   Arg 0 (PATCH): ("Knowledge-Based-Editor" 314 NIL NIL)
   --Defaulted args:--
   Arg 1 (NOERROR): NIL

SI:ADD-PATCH-SYSTEM:  (P.C. = 71)
   Arg 0 (NAME): "Knowledge-Based-Editor"

SI:INCREMENT-LOADED-VERSION-1:  (P.C. = 75)

SI:DO-FILE-TRANSFORMATIONS:  (P.C. = 317)

Rest of stack:
SI:PERFORM-TRANSFORMATIONS:  (P.C. = 207)
MAKE-SYSTEM:  (P.C. = 310)
SI:*EVAL:  (P.C. = 653)
LET*:  (P.C. = 75)
SI:*EVAL:  (P.C. = 567)
UNWIND-PROTECT:  (P.C. = 42)
SI:*EVAL:  (P.C. = 567)
LET:  (P.C. = 107)
SI:*EVAL:  (P.C. = 567)
PROGN:  (P.C. = 35)
SI:*EVAL:  (P.C. = 707)
UNWIND-PROTECT:  (P.C. = 42)
SI:*EVAL:  (P.C. = 567)
LET:  (P.C. = 107)
SI:*EVAL:  (P.C. = 567)
SI:READFILE-INTERNAL:  (P.C. = 154)
LOAD:  (P.C. = 320)
LOGIN:  (P.C. = 471)
SI:*EVAL:  (P.C. = 653)
SI:LISP-TOP-LEVEL1:  (P.C. = 210)
SI:LISP-TOP-LEVEL:  (P.C. = 35)
 8-Apr-84 16:46:26-EST,1505;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 8 Apr 84 16:43-EST
Received: from SCRC-MOBILE by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 14627; Sun 8-Apr-84 16:44:49-EST
Date: Sunday, 8 April 1984, 16:46-EST
From: David E. Goldfarb <DEG at SCRC-TENEX>
Subject: Base/IBase lossage in patch directory format used by MAKE-SYSTEM
To: KBE at MIT-OZ, BUG-LISPM at MIT-OZ
Cc: BUG-LMDOC at MIT-OZ, DEG at SCRC-TENEX
In-reply-to: The message of 7 Apr 84 17:50-EST from Apprentice for KMP <KBE at MIT-OZ>

    Date: Saturday, 7 April 1984, 17:50-EST
    From: Apprentice for KMP <KBE at MIT-OZ>
    In Release 4.5, site configuration 88, Vanilla, on PA Lisp Machine Avatar:

    It's probable that the last time I built this system, I did it in a world 
    that had *NOPOINT bound to T. Normally, I would have *NOPOINT bound to NIL
    when I build this world. In any event, I do not think the binding of *NOPOINT 
    should affect the patch system's behavior. The patch dir file says to look for
    ("Knowledge-Based-Editor" 314 ...), which is being read now in BASE 8 because
    proper care was not taken to preserve write-read number equivalence in the
    patch system.

Apologies. I had thought this bug was fixed in 4.5, but apparently
not.  It was certainly fixed in all 5.0's.  As I recall, the bug was a typo on
my part; I had bound BASE to 10. around the read rather than binding IBASE.  In
any event, I fixed it last August or so.  Sorry for the inconvenience.
 9-Apr-84 08:28:45-EST,588;000000000000
Mail-From: X.GYRO created at  9-Apr-84 08:27:58
Date: Mon 9 Apr 84 08:27-EST
From: Scott W. Layson <X.GYRO@MIT-OZ>
Subject: Serial I/O bug in System 98
To: bug-lispm@MIT-OZ

In System 98.29, on Mark of the Unicorn Astarte (CADR):

(:method si:serial-stream-mixin :close) gets an "Instance variable
SI:RANDOM-UNIBUS-CHANNEL unbound".  Looking at its definition in 
sys:io1;serial reveals that the third IF form has a spurious occurrence
of the symbol RANDOM-UNIBUS-CHANNEL (right after the VARIABLE-BOUNDP form,
and on the same line so it's hard to see).

-- Scott Layson

 9-Apr-84 12:30:43-EST,3713;000000000000
Received: from MIT-LISPM-1 by MIT-OZ via Chaosnet; 9 Apr 84 12:30-EST
Date: Monday, 9 April 1984, 12:28-EST
From: Robert L. Krawitz <ZZZ.RLK at MIT-OZ>
To: BUG-LISPM at MIT-OZ, bug-zmail at MIT-OZ

In System 98.40, CADR 3.6, ZMail 53.14, MIT-Specific 22.0, microcode 309,
on Lisp Machine One:


Insert your description of the circumstances here:

I generated a temporary buffer by selecting three messages (numbers 66,
67, and 69 from <zzz.rlk.bitnet>bitnet.babyl -- those numbers are
guaranteed for the future), selected it from the menu in select, clicked
right on map over, clicked right on reply, and clicked right without
changing anything.  I got this error.

>>TRAP 14070 (ARGTYP NUMBER PP 0 QIGRP)
The first argument to SYSTEM:M->, NIL, was of the wrong type.
The function expected a number.
Backtrace from the debugger:

(:METHOD ZWEI:NODE :MODIFIED-P) (P.C. = 32)
  (SELF is #<NODE 12152216>)

 Arg 0 (OPERATION): :MODIFIED-P


ZWEI:BUFFER-MODIFIED-P (P.C. = 22)

 Arg 0 (BUFFER): #<NODE 12152216>


ZWEI:UNDO-SAVE-NEW-SMALL-CHANGE (P.C. = 510)

 Arg 0 (BP1): ("" 0 :MOVES)
 Arg 1 (BP2): ("" 0 :MOVES)
Local 0 (UNDO-STATUS): (#<NODE 12152216> NIL ("" 0 :NORMAL) ("" 0 :MOVES) ...)
Local 1 (BP1-INSIDE): NIL
Local 2 (BP2-INSIDE): NIL
Local 3: #<NODE 12152216>
Local 4 (LINE): NIL
Local 5 (END-LINE): NIL
Local 6 (ALIST): NIL
Local 7 (COUNT): 0
Local 8 (INDEX): 0


ZWEI:INSERT-INTERVAL (P.C. = 73)

 Arg 0 (AT-BP): ("" 0 :MOVES)
 Arg 1 (FROM-BP): #<NODE 12135535>
   --Defaulted args:--
 Arg 2 (TO-BP): NIL
 Arg 3 (IN-ORDER-P): NIL
Local 0 (AT-LINE): NIL
Local 1 (AT-INDEX): NIL
Local 2 (FROM-LINE): NIL
Local 3 (FROM-INDEX): NIL
Local 4 (TO-LINE): NIL
Local 5 (TO-INDEX): NIL
Local 6 (AT-LINE-LENGTH): NIL
Local 7 (FROM-LINE-LENGTH): NIL
Local 8 (ARRAY-TYPE): NIL
Local 9 (FIRST-LINE): NIL
Local 10 (LAST-LINE): NIL
Local 11: NIL
Local 12 (BP): NIL
Local 13 (FF): NIL
Local 14 (AT): NIL
Local 15 (16B-P): NIL
Local 16 (CH): NIL
Local 17 (I): NIL
Local 18 (PREV-LINE): NIL
Local 19 (THIS-LINE): NIL
Local 20 (NODE): NIL
Local 21 (THE-LINE-BEYOND): NIL
Local 22 (ORIGINAL-LINE): NIL


ZWEI:INITIALIZE-FOR-MAIL (P.C. = 372)

 Arg 0 (DRAFT-MSG): #<DRAFT-MSG 12151732>
   --Defaulted args:--
 Arg 1 (INSERT-DEFAULTS): T
Local 0 (LIST): (:CC (**) :FCC NIL)
Local 1 (PLIST): #<DTP-LOCATIVE 5536336>
Local 2 (STREAM): #<INTERVAL-STREAM 12152140>
Local 3 (MSGS): (#S(ZWEI:MSG :REAL-INTERVAL #<NODE 12135522> :INTERVAL ...) #S(ZWEI:MSG :REAL-INTERVAL #<NODE 12136302> :INTERVAL ...) #S(ZWEI:MSG :REAL-INTERVAL #<NODE 12136356> :INTERVAL ...))
Local 4 (BP): ("" 0 :MOVES)
Local 5 (MSGS): (#S(ZWEI:MSG :REAL-INTERVAL #<NODE 12135522> :INTERVAL ...) #S(ZWEI:MSG :REAL-INTERVAL #<NODE 12136302> :INTERVAL ...) #S(ZWEI:MSG :REAL-INTERVAL #<NODE 12136356> :INTERVAL ...))
Local 6 (FIRST-P): T
Local 7 (ZOT): NIL
Local 8: NIL
Local 9 (WINDOW): NIL


Remainder of stack:

ZWEI:SETUP-FOR-REPLY (P.C. = 52)
ZWEI:NORMAL-REPLY (P.C. = 133)
ZWEI:APPLY-ARRAY (P.C. = 41)
ZWEI:COM-ZMAIL-REPLY-ALL (P.C. = 56)
ZWEI:COM-ZMAIL-MAP (P.C. = 74)
ZWEI:COMMAND-EXECUTE (P.C. = 115)
ZWEI:ZMAIL-COMMAND-EXECUTE (P.C. = 27)
(:SELECT-METHOD ZWEI:ZMAIL-COMMAND-LIST :MENU) (P.C. = 32)
(:METHOD ZWEI:ZMAIL-FRAME :PROCESS-SPECIAL-COMMAND) (P.C. = 25)
(:METHOD ZWEI:ZMAIL-COMMAND-LOOP-MIXIN :COMMAND-LOOP) (P.C. = 252)
(:INTERNAL (:METHOD ZWEI:ZMAIL-FRAME :COMBINED :COMMAND-LOOP) 0) (P.C. = 44)
FUNCALL (P.C. = 25)
(:METHOD ZWEI:ZMAIL-COMMAND-LOOP-MIXIN :AROUND :COMMAND-LOOP) (P.C. = 57)
(:METHOD ZWEI:ZMAIL-FRAME :COMBINED :COMMAND-LOOP) (P.C. = 43)
ZWEI:ZMAIL-PROCESS-TOP-LEVEL (P.C. = 115)
SI:PROCESS-TOP-LEVEL (P.C. = 152)
 9-Apr-84 14:36:55-EST,1652;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 9 Apr 84 14:36-EST
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 14878; Mon 9-Apr-84 14:38:03-EST
Date: Monday, 9 April 1984, 14:35-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: Array index bug while loading BIN file.
To: Ken Haase <KWH at MIT-OZ>
Cc: BUG-LISPM at MIT-OZ
In-reply-to: The message of 7 Apr 84 17:00-EST from Ken Haase <KWH at MIT-OZ>

    Date: Saturday, 7 April 1984, 17:00-EST
    From: Ken Haase <KWH at MIT-OZ>

    In Release 5.0 [Beta Test rev 7], FEP 18, on Lisp Machine Jim Morrison (3600):

    This happened while loading a compiled file from
    MAKE-SYSTEM.  The compiled file (if it's useful) is in
    "PYGMALION:[KWH.ARLO]KERNEL.BIN;26".

    >>Trap: The subscript given to the AR-1 instruction, 3840. (from local variable SI:INDEX), on #<ART-Q-64. 76554405> was beyond the length, 64..
    While in the function SI:BIN-LOAD-NEXT-COMMAND  SI:BIN-NEXT-VALUE  SI:LOAD-LIST

    SI:BIN-LOAD-NEXT-COMMAND:  (P.C. = 6)
       Arg 0 (STREAM): #<FILE-INPUT-BINARY-STREAM "Arlo: SOURCES; KERNEL.BIN.NEWEST" 15565633>
       Local 1 (INDEX): 3840.
       Local 2 (EXTRA-ARG): NIL

The array operation in question is indexing a command table with an "opcode" read from the BIN file.
If this is reproducible, your BIN file is trashed.  If it is not, Jim Morrison, Pygmalion, or
the network is broken or flakey.

Someone probably should slow down BIN file loading a little by putting in extra error checking
so you get a higher-level error message than "subscript beyond the length" when this happens.
 9-Apr-84 21:57:06-EST,3586;000000000000
Received: from MIT-JIMI by MIT-OZ via Chaosnet; 9 Apr 84 21:56-EST
Date: Monday, 9 April 1984, 22:00-EST
From:  <KDF at MIT-PYGMALION>
Subject: File loading flakeyness
To: BUG-LISPM at MIT-OZ

In Release 5.0 [Beta Test rev 7], on Lisp Machine Jimi Hendrix (3600):

File flakiness, which did not occur prior to rev 7, is still occuring.  Someone else complained
about this bug on Jim Morrison, so it can't be the 3600 hardware.  Getting files to and from PIG
by other means (i.e., CFTP to OZ) hasn't become any less reliable, so I suspect it is the 3600
software...

>>Error: Attempt to complete a FILE transaction on broken CHAOS Connection for FILE 1 to PYGMALION.
         Reason given by PYGMALION was "Connection does not exist at this end"
While in the function CHAOS:BAD-CHAOS-CONNECTION-STATE  FS:FILE-WAIT-FOR-TRANSACTION  (:METHOD FS:HOST-UNIT :COMMAND)

CHAOS:BAD-CHAOS-CONNECTION-STATE:  (P.C. = 41)
   Arg 0 (CONN): #<CHAOS Connection for FILE 1 to PYGMALION 75730140>
   Arg 1 (ATTEMPT): "complete a FILE transaction on"
   Local 2 (STATE): CHAOS:LOS-RECEIVED-STATE
   Local 3 (PKT): #<Chaos Packet 1006131>

FS:FILE-WAIT-FOR-TRANSACTION:  (P.C. = 36)
   Arg 0 (TID-initialization): "T2536"
   Arg 1 (CONN): #<CHAOS Connection for FILE 1 to PYGMALION 75730140>
   Arg 2 (WHOSTATE): "Close"

(:METHOD FS:HOST-UNIT :COMMAND):  (P.C. = 111)
   Arg 0 (SELF): #<HOST-UNIT 71311642>
   Arg 1 (SELF-MAPPING-TABLE): FS:HOST-UNIT
   Arg 2 (OPERATION): :COMMAND
   Arg 3 (MARK-P): T
   Arg 4 (STREAM-OR-HANDLE): #<FILE-INPUT-CHARACTER-STREAM "PYGMALION:USRD$:[KDF]PHRASE.LSP" 22055231>
   Arg 5 (SIMPLE-P): NIL
   Arg 6 (WHOSTATE): "Close"
   Rest arg (COMMANDS): NIL

(:METHOD FS:FILE-DATA-STREAM-MIXIN :COMMAND):  (P.C. = 14)
   Arg 0 (SELF): #<FILE-INPUT-CHARACTER-STREAM "PYGMALION:USRD$:[KDF]PHRASE.LSP" 22055231>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:FILE-DATA-STREAM-MIXIN -- 6. IV's, 0. FL's 104223110>
   Arg 2 (OPERATION): :COMMAND
   Arg 3 (MARK-P): T
   Arg 4 (WHOSTATE): "Close"
   Arg 5 (COM): "CLOSE"
   Rest arg (STRINGS): NIL

(:METHOD FS:FILE-INPUT-STREAM-MIXIN :REAL-CLOSE):  (P.C. = 32)
   Arg 0 (SELF): #<FILE-INPUT-CHARACTER-STREAM "PYGMALION:USRD$:[KDF]PHRASE.LSP" 22055231>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:FILE-INPUT-STREAM-MIXIN -- 5. IV's, 1. FL's 104223125>
   Arg 2 (OPERATION): :REAL-CLOSE
   Arg 3 (ABORTP): :ABORT

(:METHOD FS:FILE-DATA-STREAM-MIXIN :CLOSE):  (P.C. = 26)
   Arg 0 (SELF): #<FILE-INPUT-CHARACTER-STREAM "PYGMALION:USRD$:[KDF]PHRASE.LSP" 22055231>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:FILE-DATA-STREAM-MIXIN -- 6. IV's, 0. FL's 104223110>
   Arg 2 (OPERATION): :CLOSE
   Arg 3 (ABORTP): :ABORT

(:METHOD FS:FILE-INPUT-CHARACTER-STREAM :COMBINED :CLOSE):  (P.C. = 30)
   Arg 0 (SELF): #<FILE-INPUT-CHARACTER-STREAM "PYGMALION:USRD$:[KDF]PHRASE.LSP" 22055231>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:FILE-INPUT-CHARACTER-STREAM -- 1. IV's, 6. FL's 104223172>
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

SI:CLOSE-OPEN-STREAM:  (P.C. = 14)
   Arg 0 (STREAM): #<FILE-INPUT-CHARACTER-STREAM "PYGMALION:USRD$:[KDF]PHRASE.LSP" 22055231>
   Arg 1 (ABORT): :ABORT

Rest of stack:
COMPILER:COMPILE-FILE:  (P.C. = 263)
SI:COMPILE-FILE-1:
SI:DO-FILE-TRANSFORMATIONS:  (P.C. = 242)
SI:PERFORM-TRANSFORMATIONS:  (P.C. = 166)
SI:PERFORM-TRANSFORMATIONS:  (P.C. = 64)
MAKE-SYSTEM:  (P.C. = 222)
SI:*EVAL:  (P.C. = 370)
DEBACLE-TOP-LEVEL:  (P.C. = 161)  (from PYGMALION:USRD$:[KDF]DISPLAY)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
10-Apr-84 13:12:32-EST,974;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 10 Apr 84 13:11-EST
Received: from SCRC-CHICOPEE by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 45225; Tue 10-Apr-84 13:15:05-EST
Date: Tuesday, 10 April 1984, 13:10-EST
From: Daniel L. Weinreb <DLW at SCRC-TENEX>
Subject: a suggestion
To: CARLF at MIT-OZ, BUG-LISPM at MIT-OZ
In-reply-to: The message of 5 Apr 84 20:58-EST from CARLF at MIT-OZ

    Date: Thursday, 5 April 1984, 20:58-EST
    From:  <CARLF at MIT-OZ>
    Yes-or-no-p is designed to make sure that you want to do something
    really drastic, and keep you from making a mistake.

Well, that's not exactly the intent.  The design principle is that
yes-or-no-p should be used for unanticipated questions, questions that
you would not normally expect, because otherwise typeahead of a "y" or
an "n" could accidentally answer the question the wrong way.  The
question about unbalanced parens is not normally expected, so yes-or-no-p
is used.
11-Apr-84 01:26:56-EST,467;000000000000
Received: from MIT-XX by MIT-OZ via Chaosnet; 11 Apr 84 01:26-EST
Date: Wednesday, 11 April 1984, 01:24-EST
From: scott a douglass <sad at MIT-XX>
Subject: Typeout after CMND -->  in Terminal
To: BUG-LISPM at MIT-OZ

In Release 5.0 [Beta Test rev 7], Grape MEF Version Two, on MEF Flame of the Forest (3600):

If you type <network> to Terminal and then get typeout it appears next to the
CMND -->  prompt instead of where it should.  thanks...
					-scott
11-Apr-84 09:50:29-EST,1181;000000000000
Received: from MIT-DSPG by MIT-OZ via Chaosnet; 11 Apr 84 09:50-EST
Date: 11 Apr 1984 09:40:34-EST
From: dove at mit-dspg
To: DCP@scrc-tenex
Subject: Re: how do I cons temporary stuff?
Cc: BUG-LISPM@mit-oz

You mentioned that I could try with-stack-list.  Unfortunately, I need
to (loop ... collect) some keyword/value pairs to accomplish something. 
Once they are collected, I do what I want and throw them away.  I don't
see how I can use with-stack-list since I cons many times around the
loop.  What I could use is an enclosing form which would return stack
storage on exit, and a cons-stack form to actually make the pairs.  I
don't want to use a resource for conses because resources are so slow
compared to consing.

Because I know that this code is non-recursive, I currently use a few
global arrays and fill-pointers.  I represent the information I need by
pushing things on these arrays (growing when necessary), and I reset the
fill-pointers when I enter the code.  In this way, no allocation is
necessary, and I don't have to be occupied with resource allocation.  I
think it would be preferable to use stack lists, but I don't see how to
do it.
11-Apr-84 13:33:41-EST,912;000000000000
Received: from SCRC-RIVERSIDE by MIT-OZ via Chaosnet; 11 Apr 84 13:32-EST
Received: from SCRC-PEACE by SCRC-RIVERSIDE via CHAOS with CHAOS-MAIL id 10107; Wed 11-Apr-84 09:32:15-EST
Date: Wednesday, 11 April 1984, 09:32-EST
From: Charles Hornig <Hornig at SCRC-STONY-BROOK>
Subject: Typeout after CMND -->  in Terminal
To: scott a douglass <sad at MIT-XX>, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 11 Apr 84 01:24-EST from scott a douglass <sad at MIT-XX>
Message-ID: <840411093205.1.Hornig@STONY-BROOK.SCRC.Symbolics>

    Date: Wednesday, 11 April 1984, 01:24-EST
    From: scott a douglass <sad at MIT-XX>

    In Release 5.0 [Beta Test rev 7], Grape MEF Version Two, on MEF Flame of the Forest (3600):

    If you type <network> to Terminal and then get typeout it appears next to the
    CMND -->  prompt instead of where it should.  thanks...
					    -scott

Fixed in the source.
11-Apr-84 13:56:17-EST,2146;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 11 Apr 84 13:50-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 15741; Wed 11-Apr-84 13:42:23-EST
Date: Wednesday, 11 April 1984, 13:45-EST
From: David C. Plummer <DCP at SCRC-TENEX>
Subject: Re: how do I cons temporary stuff?
To: dove at MIT-DSPG, DCP at SCRC-TENEX
cc: BUG-LISPM at MIT-OZ
In-Reply-To: The message of 11 Apr 84 09:40-EST from dove at MIT-DSPG

    Date: 11 Apr 1984 09:40:34-EST
    From: dove at mit-dspg

    You mentioned that I could try with-stack-list.  Unfortunately, I need
    to (loop ... collect) some keyword/value pairs to accomplish something. 
    Once they are collected, I do what I want and throw them away.  I don't
    see how I can use with-stack-list since I cons many times around the
    loop.  What I could use is an enclosing form which would return stack
    storage on exit, and a cons-stack form to actually make the pairs.  I
    don't want to use a resource for conses because resources are so slow
    compared to consing.

Unless you have an upper bound on the length of the list, and unless the
upper bound isn't too large (roughly 200 on the 3600, I don't know if
the CADR has a limit), and unless whatever function you pass the list
to takes an argument saying how many items in the list are valid, you
can't do anything here.

This consing behavior is exactly the thing that will cause the ephemeral
garbage collector (when it exists) to quickly reclaim your very
temporary garbage.

    Because I know that this code is non-recursive, I currently use a few
    global arrays and fill-pointers.  I represent the information I need by
    pushing things on these arrays (growing when necessary), and I reset the
    fill-pointers when I enter the code.  In this way, no allocation is
    necessary, and I don't have to be occupied with resource allocation.  I
    think it would be preferable to use stack lists, but I don't see how to
    do it.
This is a resonable way to do it.  I assume you are using
array-push-extend instead of growing the array yourself.
12-Apr-84 02:49:05-EST,739;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 12 Apr 84 02:48-EST
Received: from MIT-ROBOT-1 by MIT-OZ via Chaosnet; 12 Apr 84 02:47-EST
Date: Thu, 12 Apr 84 02:48 EST
From: Sathyanandan Rajivan <Rajivan%MIT-OZ@MIT-MC.ARPA>
To: BUG-LISPM@MIT-MC.ARPA

In Release 5.0 [Beta Test rev 7], FEP 18, on Lisp Machine Robot-1 (3600):

I tried to make-instance of the flavor Press:press-stream it bombed.  It said
si:device was unbound.couldn't find the code for the method that sets this
instance variable.

Henry Lieberman sent a similar bug report about a week ago.  The bug doesn't
seem to have been fixed yet.  I would be most greatful if you could fix this bug
soon as this is hindering my thesis progress (graduating June 84).
12-Apr-84 11:15:41-EST,618;000000000000
Mail-From: ROB created at 12-Apr-84 11:15:15
Date: 12 Apr 1984  11:15 EST (Thu)
Message-ID: <ROB.12006897021.BABYL@MIT-OZ>
From: "Robert H. Kassel" <rob@MIT-OZ>
To:   bug-lispm@MIT-OZ
Subject: moving systems


Suppose your moving a system's sources and patches
from one machine to another...

If you change the sys:site;name system file
and then try loading patches into a band made with
the old definition, the machine will try and fail to
get the system's patch directory.  How about attempting
to correct this automagically by reading the new system
definition file when you fail and trying again?
12-Apr-84 13:11:29-EST,1051;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 12 Apr 84 13:06-EST
Received: from SCRC-MOBILE by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 16238; Thu 12-Apr-84 13:02:28-EST
Date: Thursday, 12 April 1984, 13:08-EST
From: David E. Goldfarb <DEG at SCRC-TENEX>
Subject: moving systems
To: rob at MIT-OZ, bug-lispm at MIT-OZ
Cc: DEG at SCRC-TENEX
In-reply-to: <ROB.12006897021.BABYL@MIT-OZ>

    Date: 12 Apr 1984  11:15 EST (Thu)
    From: "Robert H. Kassel" <rob@MIT-OZ>
    Suppose your moving a system's sources and patches
    from one machine to another...

    If you change the sys:site;name system file
    and then try loading patches into a band made with
    the old definition, the machine will try and fail to
    get the system's patch directory.  How about attempting
    to correct this automagically by reading the new system
    definition file when you fail and trying again?

This does not sound reasonable to me.  You should be using logical pathnames,
especially for systems that get disk-saved.
12-Apr-84 17:09:30-EST,1405;000000000000
Mail-From: ROB created at 12-Apr-84 16:57:12
Date: 12 Apr 1984  16:57 EST (Thu)
Message-ID: <ROB.12006959270.BABYL@MIT-OZ>
From: "Robert H. Kassel" <rob@MIT-OZ>
To:   "David E. Goldfarb" <DEG@SCRC-TENEX>
Cc:   bug-lispm@MIT-OZ
Subject: moving systems
In-reply-to: Msg of 12 Apr 1984 13:08-EST from David E. Goldfarb <DEG at SCRC-TENEX>

    Date: Thursday, 12 April 1984, 13:08-EST
    From: David E. Goldfarb <DEG at SCRC-TENEX>
    To:   rob, bug-lispm
    cc:   DEG at SCRC-TENEX
    Re:   moving systems

        Date: 12 Apr 1984  11:15 EST (Thu)
        From: "Robert H. Kassel" <rob@MIT-OZ>
        Suppose your moving a system's sources and patches
        from one machine to another...

        If you change the sys:site;name system file
        and then try loading patches into a band made with
        the old definition, the machine will try and fail to
        get the system's patch directory.  How about attempting
        to correct this automagically by reading the new system
        definition file when you fail and trying again?

    This does not sound reasonable to me.  You should be using logical pathnames,
    especially for systems that get disk-saved.

This IS using logical pathnames, but load patches (at least in 4.5)
doesn't bother looking to see if the sys:site;name system file (where
the logical pathnames were defined) has changed!
12-Apr-84 23:27:41-EST,983;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 12 Apr 84 23:27-EST
Received: from SCRC-EUPHRATES by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 45923; Thu 12-Apr-84 21:31:11-EST
Date: Thursday, 12 April 1984, 21:31-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: moving systems
To: Robert H. Kassel <rob at MIT-OZ>
Cc: David E. Goldfarb <DEG at SCRC-TENEX>, bug-lispm at MIT-OZ
In-reply-to: <ROB.12006959270.BABYL@MIT-OZ>

    Date: 12 Apr 1984  16:57 EST (Thu)
    From: "Robert H. Kassel" <rob@MIT-OZ>

    This IS using logical pathnames, but load patches (at least in 4.5)
    doesn't bother looking to see if the sys:site;name system file (where
    the logical pathnames were defined) has changed!

4.5 is kind of an old system.  In 5.0 you put the logical pathname host
definition in a different file (sys:site;hostname.translations), which
does get reloaded at appropriate times, such as when the site changes and
when system patches are loaded.
13-Apr-84 11:59:49-EST,3701;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 13 Apr 84 11:59-EST
Date: Friday, 13 April 1984, 11:53-EST
From:  <KDF at MIT-PYGMALION>
Subject: Aborting during Make-System error leaves file handles around
To: BUG-LISPM at MIT-OZ

In Release 5.0 [Beta Test rev 7], on Lisp Machine Jimi Hendrix (3600):

When doing an earlier make-system, the compiler barfed because a file of defstructs hadn't
been loaded yet.  I aborted, loaded the appropriate file, and tried doing make-system again.
This is what happened.... 

>>Error: File handle in use
         For PYGMALION:USRD$:[KDF]MOUSE.BIN
While in the function (:METHOD FS:HOST-UNIT :COMMAND)  FS:OPEN-CHAOS  (:METHOD FS:QFILE-ACCESS-PATH :OPEN)

(:METHOD FS:HOST-UNIT :COMMAND):  (P.C. = 231)
   Arg 0 (SELF): #<HOST-UNIT 3126541>
   Arg 1 (SELF-MAPPING-TABLE): FS:HOST-UNIT
   Arg 2 (OPERATION): :COMMAND
   Arg 3 (MARK-P): NIL
   Arg 4 (STREAM-OR-HANDLE): (:CREATE "O2151")
   Arg 5 (SIMPLE-P): NIL
   Arg 6 (WHOSTATE): "Open"
   Rest arg (COMMANDS): ("OPEN " :WRITE " " :BINARY "" "" "" "" "" "" ...)
   Local 8 (HANDLE): "O2151"
   Local 9 (STREAM): NIL
   Local 10 (PKT): #<Chaos Packet 55344040>
   Local 11 (SUCCESS): NIL
   Local 12 (STRING): "O2151 ERROR MSC C File handle in use"
   Local 13 (TRANSACTION-ID): "T2526"
   Local 14 (CREATE-P): T
   Local 15 (CONDITION): NIL

FS:OPEN-CHAOS:  (P.C. = 643)
   Arg 0 (ACCESS-PATH): #<NORMAL-QFILE-ACCESS-PATH PYGMALION using QFILE 3126530>
   Arg 1 (REAL-PATHNAME): #<VMS-PATHNAME "PYGMALION:USRD$:[KDF]MOUSE.BIN">
   Arg 2 (*COMMAND-PATHNAME*-initialization): #<VMS-PATHNAME "PYGMALION:USRD$:[KDF]MOUSE.BIN">
   Arg 3 (OPTIONS): (:DIRECTION :OUTPUT :CHARACTERS NIL)

(:METHOD FS:QFILE-ACCESS-PATH :OPEN):  (P.C. = 7)
   Arg 0 (SELF): #<NORMAL-QFILE-ACCESS-PATH PYGMALION using QFILE 3126530>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:QFILE-ACCESS-PATH -- 3. IV's, 0. FL's 104234356>
   Arg 2 (OPERATION): :OPEN
   Arg 3 (REAL-PATHNAME): #<VMS-PATHNAME "PYGMALION:USRD$:[KDF]MOUSE.BIN">
   Arg 4 (PATHNAME): #<VMS-PATHNAME "PYGMALION:USRD$:[KDF]MOUSE.BIN">
   Rest arg (OPTIONS): (:DIRECTION :OUTPUT :CHARACTERS NIL)

(:METHOD FS:ACTIVE-PATHNAME-MIXIN :OPEN):  (P.C. = 14)
   Arg 0 (SELF): #<VMS-PATHNAME "PYGMALION:USRD$:[KDF]MOUSE.BIN">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:ACTIVE-PATHNAME-MIXIN -- 1. IV's, 0. FL's 104103413>
   Arg 2 (OPERATION): :OPEN
   Arg 3 (PATHNAME): #<VMS-PATHNAME "PYGMALION:USRD$:[KDF]MOUSE.BIN">
   Rest arg (OPTIONS): (:DIRECTION :OUTPUT :CHARACTERS NIL)

FS:COMMON-LISP-OPEN:  (P.C. = 445)
   Arg 0 (PATHNAME): #<VMS-PATHNAME "PYGMALION:USRD$:[KDF]MOUSE.BIN">
   Arg 1 (KEYWORD-ARGS): (:DIRECTION :OUTPUT :CHARACTERS NIL)

OPEN:  (P.C. = 255)
   Arg 0 (PATHNAME): #<VMS-PATHNAME "PYGMALION:USRD$:[KDF]MOUSE.BIN">
   Rest arg (KEYWORD-ARGS): (:DIRECTION :OUTPUT :CHARACTERS NIL)

COMPILER:COMPILE-FILE:  (P.C. = 206)
   Arg 0 (INFILE): #<VMS-PATHNAME "PYGMALION:USRD$:[KDF]MOUSE.LSP">
   Arg 1 (OUTFILE): #<VMS-PATHNAME "PYGMALION:USRD$:[KDF]MOUSE.BIN">
   Arg 2 (IN-PACKAGE): "USER"
   Arg 3 (DONT-SET-DEFAULT-P): T

SI:COMPILE-FILE-1:  (P.C. = 6)
   Arg 0 (INFILE): #<VMS-PATHNAME "PYGMALION:USRD$:[KDF]MOUSE.LSP">
   Arg 1 (OUTFILE): #<VMS-PATHNAME "PYGMALION:USRD$:[KDF]MOUSE.BIN">

Rest of stack:
SI:DO-FILE-TRANSFORMATIONS:  (P.C. = 242)
SI:PERFORM-TRANSFORMATIONS:  (P.C. = 166)
SI:PERFORM-TRANSFORMATIONS:  (P.C. = 64)
MAKE-SYSTEM:  (P.C. = 222)
SI:*EVAL:  (P.C. = 370)
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 200)
SI:LISP-COMMAND-LOOP:  (P.C. = 115)
SI:LISP-TOP-LEVEL1:  (P.C. = 22)
SI:LISP-TOP-LEVEL2:  (P.C. = 5)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
13-Apr-84 13:09:20-EST,3431;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 13 Apr 84 13:08-EST
Date: Friday, 13 April 1984, 13:11-EST
From:  <KDF at MIT-PYGMALION>
Subject: Amazing function definition bug
To: BUG-LISPM at MIT-OZ

In Release 5.0 [Beta Test rev 7], on Lisp Machine Jimi Hendrix (3600):

This is a doozy.  Due to timing error in previous attempt to run a make-system,
I got a bug when compiling the function DUMP-QUANTITY-HYPOTHESIS, as noted below.
What is amazing is that if you try defining a function of a different name to have
the same body, it works.  If you try defining DUMP-QUANTITY-HYPOTHESIS at all,
including with deff, you get this same error!  The Plist of Dump-quantity-hypothesis
just contains the source file information.  Where in the world is the system
keeping its mistaken impression about this function?

>>Trap: The argument given to the CDR instruction, QH-ASSUMPTIONS, was not a list, a locative or NIL.
While in the function SI:COMPILED-FUNCTION-DEBUGGING-INFO  DEBUGGING-INFO  SI:UNENCAPSULATE-FUNCTION-SPEC

SI:COMPILED-FUNCTION-DEBUGGING-INFO:  (P.C. = 6)
   Arg 0 (FUNCTION): #<DTP-COMPILED-FUNCTION <<Error printing value>>

DEBUGGING-INFO:  (P.C. = 105)
   Arg 0 (FUNCTION): #<DTP-COMPILED-FUNCTION <<Error printing value>>

SI:UNENCAPSULATE-FUNCTION-SPEC:  (P.C. = 47)
   Arg 0 (FUNCTION-SPEC): DUMP-QUANTITY-HYPOTHESIS
   --Defaulted args:--
   Arg 1 (ENCAPSULATION-TYPES): NIL

FDEFINE:  (P.C. = 36)
   Arg 0 (FUNCTION-SPEC): DUMP-QUANTITY-HYPOTHESIS
   Arg 1 (DEFINITION): (NAMED-LAMBDA DUMP-QUANTITY-HYPOTHESIS (THING) (LIST (QUOTE QH) (LIST (QUOTE QH-ASSUMPTIONS) (QH-ASSUMPTIONS THING)) (LIST (QUOTE QH-NEXT-RELATIONS) (QH-NEXT-RELATIONS THING)) (LIST (QUOTE QH-DEPENDS-ON) (QH-DEPENDS-ON THING)) (LIST (QUOTE QH-NAME) (QH-NAME THING)) (LIST (QUOTE QH-COMPARISONS) (MAPCAR ** **)) (LIST (QUOTE QH-AT-LEVEL) (MAPCAR ** **)) (LIST (QUOTE QH-INCLUDED-IN) (MAPCAR ** **)) (LIST (QUOTE QH-INCLUDES) (MAPCAR ** **)) ...))
   Arg 2 (CAREFULLY-FLAG): T
   --Defaulted args:--
   Arg 3 (NO-QUERY-FLAG): NIL

DEFUN:  (P.C. = 36)
   Rest arg (ARG): (DUMP-QUANTITY-HYPOTHESIS (THING) (LIST (QUOTE QH) (LIST (QUOTE QH-ASSUMPTIONS) (QH-ASSUMPTIONS THING)) (LIST (QUOTE QH-NEXT-RELATIONS) (QH-NEXT-RELATIONS THING)) (LIST (QUOTE QH-DEPENDS-ON) (QH-DEPENDS-ON THING)) (LIST (QUOTE QH-NAME) (QH-NAME THING)) (LIST (QUOTE QH-COMPARISONS) (MAPCAR ** **)) (LIST (QUOTE QH-AT-LEVEL) (MAPCAR ** **)) (LIST (QUOTE QH-INCLUDED-IN) (MAPCAR ** **)) (LIST (QUOTE QH-INCLUDES) (MAPCAR ** **)) ...))

SI:*EVAL:  (P.C. = 421)
   Arg 0 (FORM): (DEFUN DUMP-QUANTITY-HYPOTHESIS (THING) (LIST (QUOTE QH) (LIST (QUOTE QH-ASSUMPTIONS) (QH-ASSUMPTIONS THING)) (LIST (QUOTE QH-NEXT-RELATIONS) (QH-NEXT-RELATIONS THING)) (LIST (QUOTE QH-DEPENDS-ON) (QH-DEPENDS-ON THING)) (LIST (QUOTE QH-NAME) (QH-NAME THING)) (LIST (QUOTE QH-COMPARISONS) (MAPCAR ** **)) (LIST (QUOTE QH-AT-LEVEL) (MAPCAR ** **)) (LIST (QUOTE QH-INCLUDED-IN) (MAPCAR ** **)) (LIST (QUOTE QH-INCLUDES) (MAPCAR ** **)) ...))

SI:*EVAL:  (P.C. = 370)
   Arg 0 (FORM): (EVAL *)

SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 200)
   Rest arg: (:NAME "Lisp Top Level in Lisp Listener 1" :ABORTED-FUNCTION NIL :BEFORE-PROMPT-FUNCTION NIL :READ-FUNCTION NIL :EVAL-FUNCTION NIL ...)

Rest of stack:
SI:LISP-COMMAND-LOOP:  (P.C. = 115)
SI:LISP-TOP-LEVEL1:  (P.C. = 22)
SI:LISP-TOP-LEVEL2:  (P.C. = 5)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
13-Apr-84 13:46:05-EST,1623;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 13 Apr 84 13:45-EST
Received: from SCRC-THAMES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 16837; Fri 13-Apr-84 13:40:32-EST
Date: Friday, 13 April 1984, 13:47-EST
From: Scott McKay <SWM at SCRC-QUABBIN>
Subject: Aborting during Make-System error leaves file handles around
To: KDF at MIT-PYGMALION, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 13 Apr 84 11:53-EST from KDF at MIT-PYGMALION

    Date: Friday, 13 April 1984, 11:53-EST
    From:  <KDF at MIT-PYGMALION>

    In Release 5.0 [Beta Test rev 7], on Lisp Machine Jimi Hendrix (3600):

    When doing an earlier make-system, the compiler barfed because a file of defstructs hadn't
    been loaded yet.  I aborted, loaded the appropriate file, and tried doing make-system again.
    This is what happened.... 

    >>Error: File handle in use
	     For PYGMALION:USRD$:[KDF]MOUSE.BIN
    While in the function (:METHOD FS:HOST-UNIT :COMMAND)  FS:OPEN-CHAOS  (:METHOD FS:QFILE-ACCESS-PATH :OPEN)

Two things:

  1. I have recently moved a more robust version of the file server
     onto Pig.  It, and other fixed things, live under [SWM.*...].
     Someone should move this stuff to the [CHAOS...] tree, on Pig
     and any other interested VAXen.  Among other things, some bugs
     in abort-close were fixed.
  2. Aborting out of a connection (particularly if you aborted out of
     the close) can often result in "File handle in use".  If the file
     server is not properly notified of the abort close, it will barf
     if the LispM recycles the file handle.
13-Apr-84 14:22:21-EST,2959;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 13 Apr 84 14:20-EST
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 16859; Fri 13-Apr-84 14:12:11-EST
Date: Friday, 13 April 1984, 14:16-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: Amazing function definition bug
To: KDF at MIT-PYGMALION
Cc: BUG-LISPM at MIT-OZ
In-reply-to: The message of 13 Apr 84 13:11-EST from KDF at MIT-PYGMALION

    Date: Friday, 13 April 1984, 13:11-EST
    From:  <KDF at MIT-PYGMALION>

    In Release 5.0 [Beta Test rev 7], on Lisp Machine Jimi Hendrix (3600):

    This is a doozy.  Due to timing error in previous attempt to run a make-system,
    I got a bug when compiling the function DUMP-QUANTITY-HYPOTHESIS, as noted below.
    What is amazing is that if you try defining a function of a different name to have
    the same body, it works.  If you try defining DUMP-QUANTITY-HYPOTHESIS at all,
    including with deff, you get this same error!  The Plist of Dump-quantity-hypothesis
    just contains the source file information.  Where in the world is the system
    keeping its mistaken impression about this function?

    >>Trap: The argument given to the CDR instruction, QH-ASSUMPTIONS, was not a list, a locative or NIL.
    While in the function SI:COMPILED-FUNCTION-DEBUGGING-INFO  DEBUGGING-INFO  SI:UNENCAPSULATE-FUNCTION-SPEC

    SI:COMPILED-FUNCTION-DEBUGGING-INFO:  (P.C. = 6)
       Arg 0 (FUNCTION): #<DTP-COMPILED-FUNCTION <<Error printing value>>

    DEBUGGING-INFO:  (P.C. = 105)
       Arg 0 (FUNCTION): #<DTP-COMPILED-FUNCTION <<Error printing value>>

    SI:UNENCAPSULATE-FUNCTION-SPEC:  (P.C. = 47)
       Arg 0 (FUNCTION-SPEC): DUMP-QUANTITY-HYPOTHESIS
       --Defaulted args:--
       Arg 1 (ENCAPSULATION-TYPES): NIL

    FDEFINE:  (P.C. = 36)
       Arg 0 (FUNCTION-SPEC): DUMP-QUANTITY-HYPOTHESIS
       Arg 1 (DEFINITION): (NAMED-LAMBDA DUMP-QUANTITY-HYPOTHESIS ...

FDEFINE is checking the DEBUGGING-INFO of the previous definition of the function, to see
whether it is traced.  If it were traced, it would trace the new definition, too.
DEBUGGING-INFO, which is mentioned but not well discussed in the Lisp Machine Manual, is
stored inside the function, not on the property list of the function's name.

The immediate symptom is that the word, in the compiled function that is the definition
of the symbol DUMP-QUANTITY-HYPOTHESIS, that is supposed to be a cons of the function's
name and its debugging-info instead contains the symbol QH-ASSUMPTIONS.  I can't think
of anything that would cause this, and I can't understand your description of the
circumstances that led up to this.  There seems to be a real bug somewhere in the
compiler or related software, but it's unclear where.  Any clarifying information
you can send is likely to be appreciated.

You can get around this by using FUNDEFINE to get rid of the broken function.
13-Apr-84 14:24:29-EST,636;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 13 Apr 84 14:21-EST
Date: Friday, 13 April 1984, 14:23-EST
From: Daniel Weise <DANIEL at MIT-MC>
Subject: a place where ? activates help.
To: BUG-LISPM at MIT-OZ

In Release 5.0 [Beta Test rev 7], FEP 18, on Lisp Machine Jim Morrison (3600):

I sometimes run the stepper on interpreted code with (trace (foo :step)).
It gives help when it sees a "?" during stepping.  This forces me preceed
some of my variables with a space when I want to check their values during
stepping.  How about making this consistent with the rest of the lispm and
only give help on "help"?

Daniel
13-Apr-84 14:27:15-EST,593;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 13 Apr 84 14:26-EST
Date: Friday, 13 April 1984, 14:27-EST
From: Daniel Weise <DANIEL at MIT-MC>
Subject: tracing is misinteracting with &quotes.
To: BUG-LISPM at MIT-OZ

In Release 5.0 [Beta Test rev 7], FEP 18, on Lisp Machine Jim Morrison (3600):

(defun foo (&quote &rest args) (print args))

works for example such as
(foo kjj 9 8 7) and (foo kdjf 8 7 . 9)

but

(foo dkjfk kdjf . 89) generates an error when 
tracing of foo is on (with, for example (trace foo)).
The tracer doesn't understand the dotted arglist.

Daniel
13-Apr-84 15:16:54-EST,996;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 13 Apr 84 15:12-EST
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 16904; Fri 13-Apr-84 15:07:57-EST
Date: Friday, 13 April 1984, 15:11-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: tracing is misinteracting with &quotes.
To: Daniel Weise <DANIEL at MIT-MC>
Cc: BUG-LISPM at MIT-OZ
In-reply-to: The message of 13 Apr 84 14:27-EST from Daniel Weise <DANIEL at MIT-MC>

    Date: Friday, 13 April 1984, 14:27-EST
    From: Daniel Weise <DANIEL at MIT-MC>

    In Release 5.0 [Beta Test rev 7], FEP 18, on Lisp Machine Jim Morrison (3600):

    (defun foo (&quote &rest args) (print args))

    works for example such as
    (foo kjj 9 8 7) and (foo kdjf 8 7 . 9)

    but

    (foo dkjfk kdjf . 89) generates an error when 
    tracing of foo is on (with, for example (trace foo)).
    The tracer doesn't understand the dotted arglist.

Use macros for applications like this.
13-Apr-84 15:54:09-EST,1526;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 13 Apr 84 15:46-EST
Date: 13 April 1984 15:41-EST
From: Daniel Weise <DANIEL @ MIT-MC>
Subject:  tracing is misinteracting with &quotes.
To: Moon @ SCRC-TENEX
cc: BUG-LISPM @ MIT-OZ
In-reply-to: Msg of Fri 13 Apr 84 15:11 EST from David A. Moon <Moon%SCRC-TENEX at SCRC-RIVERSIDE.ARPA>

    Date: Fri, 13 Apr 84 15:11 EST
    From: David A. Moon <Moon%SCRC-TENEX at SCRC-RIVERSIDE.ARPA>
    To:   Daniel Weise <DANIEL at MIT-MC.ARPA>
    cc:   BUG-LISPM%MIT-OZ at SCRC-RIVERSIDE.ARPA
    Re:   tracing is misinteracting with &quotes.

        Date: Friday, 13 April 1984, 14:27-EST
        From: Daniel Weise <DANIEL at MIT-MC>

        In Release 5.0 [Beta Test rev 7], FEP 18, on Lisp Machine Jim Morrison (3600):

        (defun foo (&quote &rest args) (print args))

        works for example such as
        (foo kjj 9 8 7) and (foo kdjf 8 7 . 9)

        but

        (foo dkjfk kdjf . 89) generates an error when 
        tracing of foo is on (with, for example (trace foo)).
        The tracer doesn't understand the dotted arglist.

    Use macros for applications like this.

I can't.  The function wasn't really (defun foo (&quote &rest args) ..) it
was (defun foo fexpr (args) .... ) which is part of 10000 lines of
psuedo 1972 maclisp code (actually, MTS lisp).  I am trying to emulate
MTS Lisp on the lispm so I can run the code.  The guy who wrote the code
used fexprs up the wazoo and turning them into macros is unfeasible.

13-Apr-84 15:59:58-EST,4485;000000000000
Received: from MIT-LISPM-18 by MIT-OZ via Chaosnet; 13 Apr 84 15:47-EST
Date: Friday, 13 April 1984, 15:46-EST
From: Robert L. Krawitz <ZZZ.RLK at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In System 98.40, CADR 3.6, ZMail 53.13, MIT-Specific 22.0, microcode 309,
ZM MIT, on Lisp Machine Eighteen:


Insert your description of the circumstances here:

I *aborted* out from a message addressed to "BUG-ZMAIL@OZ bug-lispm@oz"
(note the lack of a comma).  The message itself, which describes other
strange occurrences, follows.  This time I received a message saying
Zmail background stream got an error (whioch was with the header, w/no
comma between the addresses).  I typed term-0-s, got the background
stream, and typed abort.  It responded, but the background stream didn't
go away.  The machine responded to the keyboard, but did nothing visible
to me.  The various permutations of c-m-abort didn't work, nor did c-z,
nor did c-m.  I warmbooted, returned to zmail, typed c, and aborted
again.  This time (I got the same error) I typed c-m right away, and
this is where I am now.  Earlier, the response of the machine was more
bizarre (I'm very sorry I didn't send a bug report then -- I could try
duplicating it sometime soon), and I'm sending another bug report about
it.

				Robert Krawitz

>>ERROR: Invalid terminator (ATOM "bug-lispm" ("To: BUG-zmail@MIT-OZ bug-lispm@oz" 25) ("To: BUG-zmail@MIT-OZ bug-lispm@oz" 36)) for an ADDRESS.
Backtrace from the debugger:

Additional information supplied with call:
 Expecting 2 values

ZWEI:READ-ADDRESSES (P.C. = 66)

 Arg 0 (LEXEMES): ((ATOM "bug-lispm" ** **) (ZWEI:ATSIGN 100 **) (ATOM "oz" ** **) (ZWEI:EOF NIL **))
Local 0 (ADDRESS): ((:NAME "BUG-zmail" :HOST ** ...))
Local 1 (ADDRESSES): ((:NAME "BUG-zmail" :HOST ** ...))


ZWEI:READ-ADDRESSES-TOP-LEVEL (P.C. = 34)

 Arg 0 (LEXEMES): ((ATOM "BUG-zmail" ** **) (ZWEI:ATSIGN 100 **) (ATOM "MIT-OZ" ** **) (ATOM "bug-lispm" ** **) ...)
Local 0 (ADDRESSES): NIL
Local 1 (LEXEMES-LEFT): NIL


ZWEI:PARSE-ADDRESSES-INTERVAL (P.C. = 121)

 Arg 0 (START-BP): ("To: BUG-zmail@MIT-OZ bug-lispm@oz" 4)
 Arg 1 (END-BP): ("To: BUG-zmail@MIT-OZ bug-lispm@oz" 41)
 Arg 2 (IN-ORDER-P): T
Local 0 (LEXEMES): ((ATOM "BUG-zmail" ** **) (ZWEI:ATSIGN 100 **) (ATOM "MIT-OZ" ** **) (ATOM "bug-lispm" ** **) ...)
Local 1: (ZWEI:PARSING-ERROR SI:CONDITION-CASE-THROW ZWEI:G4576)
Local 2: ((ZWEI:PARSING-ERROR SI:CONDITION-CASE-THROW ZWEI:G4576) (ZWEI:UNKNOWN-SPECIAL-COMMAND ZWEI:ZMAIL-COMMAND-LOOP-UNKNOWN-SPECIAL-COMMAND))
Local 3 (ERROR): NIL
Local 4 (*SELECTQ-ITEM*): NIL


ZWEI:PARSE-ONE-HEADER (P.C. = 170)

 Arg 0 (START-LINE): "To: BUG-zmail@MIT-OZ bug-lispm@oz"
 Arg 1 (END-LINE): "To: BUG-zmail@MIT-OZ bug-lispm@oz"
Local 0 (INDEX): 4
Local 1 (TYPE): :TO
Local 2 (FLAG): NIL
Local 3 (PROP): NIL
Local 4 (VAL): NIL
Local 5: NIL
Local 6: NIL
Local 7 (VAL): NIL
Local 8 (*SELECTQ-ITEM*): NIL
Local 9 (START-IDX): NIL
Local 10 (END-IDX): NIL


ZWEI:PARSE-HEADERS-INTERVAL (P.C. = 147)

 Arg 0 (BP1): ("To: BUG-zmail@MIT-OZ bug-lispm@oz" 0 :NORMAL)
   --Defaulted args:--
 Arg 1 (BP2): ("CC: zzz.rlk at oz" 21 :MOVES)
 Arg 2 (IN-ORDER-P): NIL
 Arg 3 (STOP-AT-BLANK-LINE): NIL
Local 0 (LIST): NIL
Local 1 (LINE): "CC: zzz.rlk at oz"
Local 2 (LAST-LINE): "To: BUG-zmail@MIT-OZ bug-lispm@oz"
Local 3 (LIMIT-LINE): "CC: zzz.rlk at oz"
Local 4 (RETURN-P): NIL
Local 5 (BLANK-P): NIL
Local 6 (START-LINE): "To: BUG-zmail@MIT-OZ bug-lispm@oz"
Local 7 (HEADERS): NIL
Local 8 (LINE): NIL
Local 9 (TYPE): NIL
Local 10 (PROP): NIL
Local 11: NIL
Local 12 (SUBLIST): NIL


Remainder of stack:

ZWEI:VALIDATE-DRAFT-MSG-SUMMARY-STRING (P.C. = 133)
(:PROPERTY ZWEI:COM-ZMAIL-CONTINUE ZWEI:WHO-LINE-DOCUMENTATION-UPDATER) (P.C. = 112)
ZWEI:UPDATE-COMMAND-WHO-LINE-DOCUMENTATION (P.C. = 116)
ZWEI:ZMAIL-MAIL (P.C. = 365)
ZWEI:CONTINUE-DRAFT-MSG (P.C. = 55)
ZWEI:COM-ZMAIL-CONTINUE (P.C. = 116)
ZWEI:COMMAND-EXECUTE (P.C. = 115)
ZWEI:ZMAIL-COMMAND-EXECUTE (P.C. = 27)
(:METHOD ZWEI:ZMAIL-FRAME :PROCESS-COMMAND-CHAR) (P.C. = 40)
(:METHOD ZWEI:ZMAIL-COMMAND-LOOP-MIXIN :COMMAND-LOOP) (P.C. = 257)
(:INTERNAL (:METHOD ZWEI:ZMAIL-FRAME :COMBINED :COMMAND-LOOP) 0) (P.C. = 44)
FUNCALL (P.C. = 25)
(:METHOD ZWEI:ZMAIL-COMMAND-LOOP-MIXIN :AROUND :COMMAND-LOOP) (P.C. = 57)
(:METHOD ZWEI:ZMAIL-FRAME :COMBINED :COMMAND-LOOP) (P.C. = 43)
ZWEI:ZMAIL-PROCESS-TOP-LEVEL (P.C. = 115)
SI:PROCESS-TOP-LEVEL (P.C. = 246)
13-Apr-84 17:27:18-EST,3263;000000000000
Received: from MIT-LISPM-18 by MIT-OZ via Chaosnet; 13 Apr 84 17:26-EST
Date: Friday, 13 April 1984, 17:23-EST
From: Robert L. Krawitz <ZZZ.RLK at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In System 98.40, CADR 3.6, ZMail 53.13, MIT-Specific 22.0, microcode 309,
ZM MIT, on Lisp Machine Eighteen:


Insert your description of the circumstances here:

FIRST:  After getting new mail, my directory filled up when it
automatically saved the new buffer.  I entered dired (from the options
presented) and deleted and expunged some of the stuff.  After being
returned to the editor (!I thought it was supposed to be the debugger) I
typed sys-m, which returned me to the debugger.  I typed abort, which
returned me to Zmail. But when I tried to save, mail, reply, etc.  the
who-line said lock and would not respond except to c-m-abort.  At this
point I got this error (which by the way was the only way to send a c-m
to do a bug report).  I will have to warm boot I expect.  This happens
frequently.

By the way, I got out of the bug I had sent to bug-zmail by m-x
configure screen.  It automagically fixed it.

>>ERROR: Attempt to unlock #<DTP-LOCATIVE 7717625>, which you don't have locked
Backtrace from the debugger:

PROCESS-UNLOCK (P.C. = 53)

 Arg 0 (LOCATIVE-POINTER): #<DTP-LOCATIVE 7717625>
   --Defaulted args:--
 Arg 1 (LOCK-VALUE): #<PROCESS Main ZMail window 7717543>
 Arg 2 (ERROR-P): T


ZWEI:ZMAIL-MAIL (P.C. = 404)

 Arg 0 (CONFIGURATION): :MAIL
 Arg 1 (STARTING-WINDOW): :TEXT
Local 0 (OLD-CONFIGURATION): :BOTH
Local 1 (.WINDOW.): NIL
Local 2 (.FOR-WINDOW.): #<ZMAIL-FRAME Main ZMail window 3201327 exposed>
Local 3 (.OSTATUS.): NIL
Local 4 (.OSUBST.): NIL
Local 5 (W): #<ZMAIL-WINDOW Zmail Window 1 3211342 exposed>
Local 6 (.QUEUE-LEFT.): NIL
Local 7: NIL
Local 8 (E): NIL


ZWEI:COM-ZMAIL-MAIL-INTERNAL (P.C. = 442)

 Arg 0 (MODE): :BUG
Local 0 (POINT): ("To: BUG-ZMAIL@MIT-OZ" 24 :NORMAL)
Local 1 (WHO): "BUG-ZMAIL@MIT-OZ"
Local 2 (WHAT): "In ZMAIL in System 98.40, CADR 3.6, ZMail 53.13, MIT-Specific 22.0,
microcode 309, ZM MIT, on Lisp Machine Eighteen:

"
Local 3 (STARTING-WINDOW): :TEXT
Local 4 (STREAM): NIL
Local 5 (STATUS): NIL
Local 6 (FROM): NIL
Local 7 (SUBJECT): NIL
Local 8 (BP): NIL


ZWEI:COM-ZMAIL-MAIL (P.C. = 62)

Local 0 (TYPE): :BUG


ZWEI:COMMAND-EXECUTE (P.C. = 115)

 Arg 0 (COMMAND): ZWEI:COM-ZMAIL-MAIL
 Arg 1 (CHAR): (:MENU ("Mail" . ZWEI:COM-ZMAIL-MAIL) 2 #<ZMAIL-MAIN-COMMAND-MENU-PANE Zmail Main Command Menu Pane 1 3211241 exposed>)
   --Defaulted args:--
 Arg 2 (PREFIX-CHAR): NIL
 Arg 3 (HOOK-LIST): NIL
Local 0 (HOOK-SUCCESS): T
Local 1: NIL
Local 2 (HOOK): NIL


Remainder of stack:

ZWEI:ZMAIL-COMMAND-EXECUTE (P.C. = 27)
(:SELECT-METHOD ZWEI:ZMAIL-COMMAND-LIST :MENU) (P.C. = 32)
(:METHOD ZWEI:ZMAIL-FRAME :PROCESS-SPECIAL-COMMAND) (P.C. = 25)
(:METHOD ZWEI:ZMAIL-COMMAND-LOOP-MIXIN :COMMAND-LOOP) (P.C. = 252)
(:INTERNAL (:METHOD ZWEI:ZMAIL-FRAME :COMBINED :COMMAND-LOOP) 0) (P.C. = 44)
FUNCALL (P.C. = 25)
(:METHOD ZWEI:ZMAIL-COMMAND-LOOP-MIXIN :AROUND :COMMAND-LOOP) (P.C. = 57)
(:METHOD ZWEI:ZMAIL-FRAME :COMBINED :COMMAND-LOOP) (P.C. = 43)
ZWEI:ZMAIL-PROCESS-TOP-LEVEL (P.C. = 115)
SI:PROCESS-TOP-LEVEL (P.C. = 246)
13-Apr-84 20:26:50-EST,339;000000000000
Mail-From: DROGERS created at 13-Apr-84 20:26:29
Date: Fri 13 Apr 84 20:26:29-EST
From: David Rogers <DRogers@MIT-OZ>
Subject: fonts
To: BUG-LISPM@MIT-OZ

Anyone know how to get the DOVER to print out a LISPM zwei-fonted
file with all the pretty fonts intact? The HARDCOPY BUFFER command in
zwei doesn't do it right...

-------
13-Apr-84 23:44:05-EST,3097;000000000000
Received: from MIT-ARTHUR by MIT-OZ via Chaosnet; 13 Apr 84 23:42-EST
Date: Friday, 13 April 1984, 23:40-EST
From: Robert L. Krawitz <ZZZ.RLK at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In Don't-dump-a-band! Inconsistent (unreleased patches loaded) System 98.44,
CADR 3.6, Inconsistent (unreleased patches loaded) ZMail 53.15,
MIT-Specific 22.0, microcode 309, ZM MIT, on Arthur Dent:


Insert your description of the circumstances here:

Well, this famous one still exists (the map-over/reply) even with the
patches loaded (and I noticed it said it was taken care of)...But I can
get out of it by supplying an argument of 0 (zero) to it after resume.

>>TRAP 17443 (TRANS-TRAP)
The instance variable ZWEI:BASE-TICK is unbound in #<ZMAIL-WINDOW Zmail Window 1 3211342 exposed>.
Backtrace from the debugger:

(:METHOD ZWEI:DISPLAYER :BASE-TICK) (P.C. = 23)
  (SELF is #<ZMAIL-WINDOW Zmail Window 1 3211342 exposed>)

 Arg 0 (IGNORE): :BASE-TICK


(:METHOD ZWEI:NODE :MODIFIED-P) (P.C. = 31)
  (SELF is #<NODE 21606335>)

 Arg 0 (OPERATION): :MODIFIED-P


ZWEI:BUFFER-MODIFIED-P (P.C. = 22)

 Arg 0 (BUFFER): #<NODE 21606335>


ZWEI:UNDO-SAVE-NEW-SMALL-CHANGE (P.C. = 510)

 Arg 0 (BP1): ("" 0 :MOVES)
 Arg 1 (BP2): ("" 0 :MOVES)
Local 0 (UNDO-STATUS): (#<NODE 21606335> NIL ("" 0 :NORMAL) ("" 0 :MOVES) ...)
Local 1 (BP1-INSIDE): NIL
Local 2 (BP2-INSIDE): NIL
Local 3: #<NODE 21606335>
Local 4 (LINE): NIL
Local 5 (END-LINE): NIL
Local 6 (ALIST): NIL
Local 7 (COUNT): 0
Local 8 (INDEX): 0


ZWEI:INSERT-INTERVAL (P.C. = 73)

 Arg 0 (AT-BP): ("" 0 :MOVES)
 Arg 1 (FROM-BP): #<NODE 21442104>
   --Defaulted args:--
 Arg 2 (TO-BP): NIL
 Arg 3 (IN-ORDER-P): NIL
Local 0 (AT-LINE): NIL
Local 1 (AT-INDEX): NIL
Local 2 (FROM-LINE): NIL
Local 3 (FROM-INDEX): NIL
Local 4 (TO-LINE): NIL
Local 5 (TO-INDEX): NIL
Local 6 (AT-LINE-LENGTH): NIL
Local 7 (FROM-LINE-LENGTH): NIL
Local 8 (ARRAY-TYPE): NIL
Local 9 (FIRST-LINE): NIL
Local 10 (LAST-LINE): NIL
Local 11: NIL
Local 12 (BP): NIL
Local 13 (FF): NIL
Local 14 (AT): NIL
Local 15 (16B-P): NIL
Local 16 (CH): NIL
Local 17 (I): NIL
Local 18 (PREV-LINE): NIL
Local 19 (THIS-LINE): NIL
Local 20 (NODE): NIL
Local 21 (THE-LINE-BEYOND): NIL
Local 22 (ORIGINAL-LINE): NIL


Remainder of stack:

ZWEI:INITIALIZE-FOR-MAIL (P.C. = 372)
ZWEI:SETUP-FOR-REPLY (P.C. = 52)
ZWEI:NORMAL-REPLY (P.C. = 133)
ZWEI:APPLY-ARRAY (P.C. = 41)
ZWEI:COM-ZMAIL-REPLY-ALL (P.C. = 56)
ZWEI:COM-ZMAIL-MAP (P.C. = 74)
ZWEI:COMMAND-EXECUTE (P.C. = 115)
ZWEI:ZMAIL-COMMAND-EXECUTE (P.C. = 27)
(:SELECT-METHOD ZWEI:ZMAIL-COMMAND-LIST :MENU) (P.C. = 32)
(:METHOD ZWEI:ZMAIL-FRAME :PROCESS-SPECIAL-COMMAND) (P.C. = 25)
(:METHOD ZWEI:ZMAIL-COMMAND-LOOP-MIXIN :COMMAND-LOOP) (P.C. = 252)
(:INTERNAL (:METHOD ZWEI:ZMAIL-FRAME :COMBINED :COMMAND-LOOP) 0) (P.C. = 44)
FUNCALL (P.C. = 25)
(:METHOD ZWEI:ZMAIL-COMMAND-LOOP-MIXIN :AROUND :COMMAND-LOOP) (P.C. = 57)
(:METHOD ZWEI:ZMAIL-FRAME :COMBINED :COMMAND-LOOP) (P.C. = 43)
ZWEI:ZMAIL-PROCESS-TOP-LEVEL (P.C. = 115)
SI:PROCESS-TOP-LEVEL (P.C. = 152)
13-Apr-84 23:57:54-EST,2076;000000000000
Received: from MIT-ARTHUR by MIT-OZ via Chaosnet; 13 Apr 84 23:57-EST
Date: Friday, 13 April 1984, 23:54-EST
From: Robert L. Krawitz <ZZZ.RLK at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In Don't-dump-a-band! Inconsistent (unreleased patches loaded) System 98.44,
CADR 3.6, Inconsistent (unreleased patches loaded) ZMail 53.15,
MIT-Specific 22.0, microcode 309, ZM MIT, on Arthur Dent:


Insert your description of the circumstances here:

I tried to send a bug report to you earlier about the problems of
aborting from a message with a bad to: header (i. e. comma missing).
The bug report didn't send, though, so I c-m'ed.  I tried c-m-x zmail
yank current message to bring in the failed bug report, and got this
beauty here.  At least in 98.40 I managed to get off the bug report.

>>TRAP 17443 (TRANS-TRAP)
The variable ZWEI:*WINDOW-CONFIGURATION* is unbound.
Backtrace from the debugger:

ZWEI:COM-ZMAIL-YANK (P.C. = 57)

Local 0 (CONFIG): NIL


ZWEI:COM-ZMAIL-YANK-CURRENT-MSG (P.C. = 23)

Local 0 (*MSGS-BEING-REPLIED-TO-INTERVAL*): NIL


ZWEI:COM-ANY-EXTENDED-COMMAND (P.C. = 156)

Local 0 (FROM-META-X): NIL
Local 1 (INITIAL-COMPLETE): NIL
Local 2: NIL
Local 3 (ANS): ("Zmail Yank Current Msg" . ZWEI:COM-ZMAIL-YANK-CURRENT-MSG)


Additional information supplied with call:
 Expecting 3 values

ZWEI:COMMAND-EXECUTE (P.C. = 115)

 Arg 0 (COMMAND): ZWEI:COM-ANY-EXTENDED-COMMAND
 Arg 1 (CHAR): 30000130
 Arg 2 (PREFIX-CHAR): NIL
 Arg 3 (HOOK-LIST): NIL
Local 0 (HOOK-SUCCESS): T
Local 1: NIL
Local 2 (HOOK): NIL


ZWEI:PROCESS-COMMAND-CHAR (P.C. = 65)

 Arg 0 (CH): 30000130
Local 0 (VALUE): NIL
Local 1 (LINE): NIL
Local 2 (INDEX): NIL
Local 3: NIL
Local 4 (HOOK): NIL


Remainder of stack:

(:METHOD ZWEI:WINDOW :EDIT) (P.C. = 464)
(:INTERNAL (:METHOD ZWEI:ZMACS-WINDOW :COMBINED :EDIT) 0) (P.C. = 74)
FUNCALL (P.C. = 25)
(:METHOD ZWEI:DISPLAYER :AROUND :EDIT) (P.C. = 31)
(:METHOD ZWEI:ZMACS-WINDOW :COMBINED :EDIT) (P.C. = 47)
ZWEI:ZMACS-WINDOW-TOP-LEVEL (P.C. = 46)
SI:PROCESS-TOP-LEVEL (P.C. = 152)
14-Apr-84 00:04:22-EST,5020;000000000000
Received: from MIT-ARTHUR by MIT-OZ via Chaosnet; 14 Apr 84 00:03-EST
Date: Saturday, 14 April 1984, 00:00-EST
From: Robert L. Krawitz <ZZZ.RLK at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In Don't-dump-a-band! Inconsistent (unreleased patches loaded) System 98.44,
CADR 3.6, Inconsistent (unreleased patches loaded) ZMail 53.15,
MIT-Specific 22.0, microcode 309, ZM MIT, on Arthur Dent:


Insert your description of the circumstances here:

Oh well, here's what I got when I tried to send off a bug report about
the problems involved after:

map over/reply (to a temporary selected buffer)

supply 0 to the trap (the famous one that MLY claimed to have fixed; the
base-mumble variable) that happens when you try that (note: I clicked
right on reply after the map over then clicked on do it in the temporary
window that popped up)

munged the header to give it bad syntax (I put mumble after a space
after the last to-recipient)

aborted, and got the set of messages (not the summary) on top, the error
(debugger) in the middle, and the current message in the bottom (not in
the normal zmail format, in the format of replying to a message in
3-window format)

tried to mail (maybe I succeeded, I'm not sure?) to send the first bug
report on that, and failed, because when I typed end, as if to mail it,
I got this wonder.

Maybe I should show you this some time -- it's happened repeatedly, and
with different (including current and ultra-current) systems.

>>ERROR: Invalid terminator (ATOM "mumble" ("    hcarter@Brl-Mis.ARPA, DRW@MIT-MC, strom@Brl-Bmd.ARPA mumble" 71) ("    hcarter@Brl-Mis.ARPA, DRW@MIT-MC, strom@Brl-Bmd.ARPA mumble" 77)) for an ADDRESS.
Backtrace from the debugger:

Additional information supplied with call:
 Expecting 2 values

ZWEI:READ-ADDRESSES (P.C. = 66)

 Arg 0 (LEXEMES): ((ATOM "mumble" ** **) (ZWEI:EOF NIL **))
Local 0 (ADDRESS): ((:NAME "strom" :HOST ** ...))
Local 1 (ADDRESSES): ((:NAME "Thieret.WBST" :HOST ** ...) (:NAME "Bicer.ES" :HOST ** ...) (:NAME "jsq" :HOST ** ...) (:NAME "WDOHERTY" :HOST ** ...) ...)


ZWEI:READ-ADDRESSES-TOP-LEVEL (P.C. = 34)

 Arg 0 (LEXEMES): ((ATOM "Thieret.WBST" ** **) (ZWEI:ATSIGN 100 **) (ATOM "Xerox.ARPA" ** **) (ZWEI:COMMA 54 **) ...)
Local 0 (ADDRESSES): NIL
Local 1 (LEXEMES-LEFT): NIL


ZWEI:PARSE-ADDRESSES-INTERVAL (P.C. = 121)

 Arg 0 (START-BP): ("To:  Thieret.WBST@Xerox.ARPA, Bicer.ES@Xerox.ARPA, jsq@ut-sally.ARPA," 5)
 Arg 1 (END-BP): ("    hcarter@Brl-Mis.ARPA, DRW@MIT-MC, strom@Brl-Bmd.ARPA mumble" 77)
 Arg 2 (IN-ORDER-P): T
Local 0 (LEXEMES): ((ATOM "Thieret.WBST" ** **) (ZWEI:ATSIGN 100 **) (ATOM "Xerox.ARPA" ** **) (ZWEI:COMMA 54 **) ...)
Local 1: (ZWEI:PARSING-ERROR SI:CONDITION-CASE-THROW ZWEI:G4576)
Local 2: ((ZWEI:PARSING-ERROR SI:CONDITION-CASE-THROW ZWEI:G4576) (ZWEI:UNKNOWN-SPECIAL-COMMAND ZWEI:ZMAIL-COMMAND-LOOP-UNKNOWN-SPECIAL-COMMAND))
Local 3 (ERROR): NIL
Local 4 (*SELECTQ-ITEM*): NIL


ZWEI:PARSE-ONE-HEADER (P.C. = 170)

 Arg 0 (START-LINE): "To:  Thieret.WBST@Xerox.ARPA, Bicer.ES@Xerox.ARPA, jsq@ut-sally.ARPA,"
 Arg 1 (END-LINE): "    hcarter@Brl-Mis.ARPA, DRW@MIT-MC, strom@Brl-Bmd.ARPA mumble"
Local 0 (INDEX): 5
Local 1 (TYPE): :TO
Local 2 (FLAG): NIL
Local 3 (PROP): NIL
Local 4 (VAL): NIL
Local 5: NIL
Local 6: NIL
Local 7 (VAL): NIL
Local 8 (*SELECTQ-ITEM*): NIL
Local 9 (START-IDX): NIL
Local 10 (END-IDX): NIL


ZWEI:PARSE-HEADERS-INTERVAL (P.C. = 147)

 Arg 0 (BP1): ("To:  Thieret.WBST@Xerox.ARPA, Bicer.ES@Xerox.ARPA, jsq@ut-sally.ARPA," 0 :NORMAL)
   --Defaulted args:--
 Arg 1 (BP2): ("" 0 :MOVES)
 Arg 2 (IN-ORDER-P): NIL
 Arg 3 (STOP-AT-BLANK-LINE): NIL
Local 0 (LIST): NIL
Local 1 (LINE): "To:  decvax!mcnc!ecsvax!emigh@Ucb-Vax.ARPA, zzz.rlk%mit-oz@mit-mc.ARPA,"
Local 2 (LAST-LINE): "    hcarter@Brl-Mis.ARPA, DRW@MIT-MC, strom@Brl-Bmd.ARPA mumble"
Local 3 (LIMIT-LINE): ""
Local 4 (RETURN-P): NIL
Local 5 (BLANK-P): NIL
Local 6 (START-LINE): "To:  Thieret.WBST@Xerox.ARPA, Bicer.ES@Xerox.ARPA, jsq@ut-sally.ARPA,"
Local 7 (HEADERS): NIL
Local 8 (LINE): NIL
Local 9 (TYPE): NIL
Local 10 (PROP): NIL
Local 11: NIL
Local 12 (SUBLIST): NIL


Remainder of stack:

ZWEI:VALIDATE-DRAFT-MSG-SUMMARY-STRING (P.C. = 133)
(:PROPERTY ZWEI:COM-ZMAIL-CONTINUE ZWEI:WHO-LINE-DOCUMENTATION-UPDATER) (P.C. = 141)
ZWEI:UPDATE-COMMAND-WHO-LINE-DOCUMENTATION (P.C. = 116)
ZWEI:ZMAIL-MAIL (P.C. = 365)
ZWEI:CONTINUE-DRAFT-MSG (P.C. = 55)
ZWEI:COM-ZMAIL-CONTINUE (P.C. = 116)
ZWEI:COMMAND-EXECUTE (P.C. = 115)
ZWEI:ZMAIL-COMMAND-EXECUTE (P.C. = 27)
(:METHOD ZWEI:ZMAIL-FRAME :PROCESS-COMMAND-CHAR) (P.C. = 40)
(:METHOD ZWEI:ZMAIL-COMMAND-LOOP-MIXIN :COMMAND-LOOP) (P.C. = 257)
(:INTERNAL (:METHOD ZWEI:ZMAIL-FRAME :COMBINED :COMMAND-LOOP) 0) (P.C. = 44)
FUNCALL (P.C. = 25)
(:METHOD ZWEI:ZMAIL-COMMAND-LOOP-MIXIN :AROUND :COMMAND-LOOP) (P.C. = 57)
(:METHOD ZWEI:ZMAIL-FRAME :COMBINED :COMMAND-LOOP) (P.C. = 43)
ZWEI:ZMAIL-PROCESS-TOP-LEVEL (P.C. = 115)
SI:PROCESS-TOP-LEVEL (P.C. = 152)
14-Apr-84 00:44:55-EST,4515;000000000000
Received: from MIT-ARTHUR by MIT-OZ via Chaosnet; 14 Apr 84 00:44-EST
Date: Saturday, 14 April 1984, 00:41-EST
From: Robert L. Krawitz <ZZZ.RLK at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In Don't-dump-a-band! Inconsistent (unreleased patches loaded) System 98.44,
CADR 3.6, Inconsistent (unreleased patches loaded) ZMail 53.15,
MIT-Specific 22.0, microcode 309, ZM MIT, on Arthur Dent:


Insert your description of the circumstances here:

Clicked right on continue, after everything else that's happened to
night.  Got this error again.  I'm going to try to put a stop to these
errors, probably by trying to convince amail that I managed to fix the
message.  Am I being excessive in reporting these?

Another problem:  after getting loads of errors, such as tonight and
this afternoon (these are the examples I remember) if I type g to get
new mail, it gets one message, waits, and I have to type n for it to
continue getting messages.  It didn't start saving the new buffer unitl
I typed s, at which point it saved the new mail then the modified buffer
properly.

>>ERROR: Invalid terminator (ATOM "mumble" ("    hcarter@Brl-Mis.ARPA, DRW@MIT-MC, strom@Brl-Bmd.ARPA mumble" 71) ("    hcarter@Brl-Mis.ARPA, DRW@MIT-MC, strom@Brl-Bmd.ARPA mumble" 77)) for an ADDRESS.
Backtrace from the debugger:

Additional information supplied with call:
 Expecting 2 values

ZWEI:READ-ADDRESSES (P.C. = 66)

 Arg 0 (LEXEMES): ((ATOM "mumble" ** **) (ZWEI:EOF NIL **))
Local 0 (ADDRESS): ((:NAME "strom" :HOST ** ...))
Local 1 (ADDRESSES): ((:NAME "Thieret.WBST" :HOST ** ...) (:NAME "Bicer.ES" :HOST ** ...) (:NAME "jsq" :HOST ** ...) (:NAME "WDOHERTY" :HOST ** ...) ...)


ZWEI:READ-ADDRESSES-TOP-LEVEL (P.C. = 34)

 Arg 0 (LEXEMES): ((ATOM "Thieret.WBST" ** **) (ZWEI:ATSIGN 100 **) (ATOM "Xerox.ARPA" ** **) (ZWEI:COMMA 54 **) ...)
Local 0 (ADDRESSES): NIL
Local 1 (LEXEMES-LEFT): NIL


ZWEI:PARSE-ADDRESSES-INTERVAL (P.C. = 121)

 Arg 0 (START-BP): ("To:  Thieret.WBST@Xerox.ARPA, Bicer.ES@Xerox.ARPA, jsq@ut-sally.ARPA," 5)
 Arg 1 (END-BP): ("    hcarter@Brl-Mis.ARPA, DRW@MIT-MC, strom@Brl-Bmd.ARPA mumble" 77)
 Arg 2 (IN-ORDER-P): T
Local 0 (LEXEMES): ((ATOM "Thieret.WBST" ** **) (ZWEI:ATSIGN 100 **) (ATOM "Xerox.ARPA" ** **) (ZWEI:COMMA 54 **) ...)
Local 1: (ZWEI:PARSING-ERROR SI:CONDITION-CASE-THROW ZWEI:G4576)
Local 2: ((ZWEI:PARSING-ERROR SI:CONDITION-CASE-THROW ZWEI:G4576) (ZWEI:UNKNOWN-SPECIAL-COMMAND ZWEI:ZMAIL-COMMAND-LOOP-UNKNOWN-SPECIAL-COMMAND))
Local 3 (ERROR): NIL
Local 4 (*SELECTQ-ITEM*): NIL


ZWEI:PARSE-ONE-HEADER (P.C. = 170)

 Arg 0 (START-LINE): "To:  Thieret.WBST@Xerox.ARPA, Bicer.ES@Xerox.ARPA, jsq@ut-sally.ARPA,"
 Arg 1 (END-LINE): "    hcarter@Brl-Mis.ARPA, DRW@MIT-MC, strom@Brl-Bmd.ARPA mumble"
Local 0 (INDEX): 5
Local 1 (TYPE): :TO
Local 2 (FLAG): NIL
Local 3 (PROP): NIL
Local 4 (VAL): NIL
Local 5: NIL
Local 6: NIL
Local 7 (VAL): NIL
Local 8 (*SELECTQ-ITEM*): NIL
Local 9 (START-IDX): NIL
Local 10 (END-IDX): NIL


ZWEI:PARSE-HEADERS-INTERVAL (P.C. = 147)

 Arg 0 (BP1): ("To:  Thieret.WBST@Xerox.ARPA, Bicer.ES@Xerox.ARPA, jsq@ut-sally.ARPA," 0 :NORMAL)
   --Defaulted args:--
 Arg 1 (BP2): ("" 0 :MOVES)
 Arg 2 (IN-ORDER-P): NIL
 Arg 3 (STOP-AT-BLANK-LINE): NIL
Local 0 (LIST): NIL
Local 1 (LINE): "To:  decvax!mcnc!ecsvax!emigh@Ucb-Vax.ARPA, zzz.rlk%mit-oz@mit-mc.ARPA,"
Local 2 (LAST-LINE): "    hcarter@Brl-Mis.ARPA, DRW@MIT-MC, strom@Brl-Bmd.ARPA mumble"
Local 3 (LIMIT-LINE): ""
Local 4 (RETURN-P): NIL
Local 5 (BLANK-P): NIL
Local 6 (START-LINE): "To:  Thieret.WBST@Xerox.ARPA, Bicer.ES@Xerox.ARPA, jsq@ut-sally.ARPA,"
Local 7 (HEADERS): NIL
Local 8 (LINE): NIL
Local 9 (TYPE): NIL
Local 10 (PROP): NIL
Local 11: NIL
Local 12 (SUBLIST): NIL


Remainder of stack:

ZWEI:VALIDATE-DRAFT-MSG-SUMMARY-STRING (P.C. = 133)
ZWEI:GET-DRAFT-MSG-FOR-CONTINUE (P.C. = 133)
ZWEI:COM-ZMAIL-CONTINUE (P.C. = 61)
ZWEI:COMMAND-EXECUTE (P.C. = 115)
ZWEI:ZMAIL-COMMAND-EXECUTE (P.C. = 27)
(:SELECT-METHOD ZWEI:ZMAIL-COMMAND-LIST :MENU) (P.C. = 32)
(:METHOD ZWEI:ZMAIL-FRAME :PROCESS-SPECIAL-COMMAND) (P.C. = 25)
(:METHOD ZWEI:ZMAIL-COMMAND-LOOP-MIXIN :COMMAND-LOOP) (P.C. = 252)
(:INTERNAL (:METHOD ZWEI:ZMAIL-FRAME :COMBINED :COMMAND-LOOP) 0) (P.C. = 44)
FUNCALL (P.C. = 25)
(:METHOD ZWEI:ZMAIL-COMMAND-LOOP-MIXIN :AROUND :COMMAND-LOOP) (P.C. = 57)
(:METHOD ZWEI:ZMAIL-FRAME :COMBINED :COMMAND-LOOP) (P.C. = 43)
ZWEI:ZMAIL-PROCESS-TOP-LEVEL (P.C. = 115)
SI:PROCESS-TOP-LEVEL (P.C. = 152)
14-Apr-84 15:57:54-EST,642;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 14 Apr 84 15:57-EST
Received: from MIT-APIARY-5 by MIT-OZ via Chaosnet; 14 Apr 84 15:40-EST
Date: Sat, 14 Apr 84 15:31 EST
From: Elijah Millgram <millgram%MIT-OZ@MIT-MC.ARPA>
Subject: demo obsoliticity
To: BUG-LISPM@MIT-MC.ARPA

In Release 5.0 [Beta Test rev 7], FEP 18, on Lisp Machine Apiary-5 (3600):

I was looking at the graphics demo (you know, what you get by invoking
HACKS:DEMO) and noticed that the documentation on "munching squares" still
thinks the keyboard is an LM-2 (it talks about hands-right and its friends).
Someone might want to do something about this.

Lije
14-Apr-84 17:02:07-EST,2613;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 14 Apr 84 17:01-EST
Date: Saturday, 14 April 1984, 16:55-EST
From: Scott Cyphers <sr.ehpyc at MIT-SPEECH>
Subject: status
To: BUG-LISPM at MIT-OZ

In Release 5.0 [Beta Test rev 7], Spire-Macros 1.2, mit, on Lisp Machine Polar (LM-2):

I typed STATUS and it gave me this at the end

>>Error: The macro TV:RH-DISPLAY-INFO-WITH-FONTS is an invalid function
While in the function (MACRO . #<DTP-FEF-POINTER TV:RH-DISPLAY-INFO-WITH-FONTS 13215176>)  (:DEFUN-METHOD TV:RH-DISPLAY-HISTORY)  (:DEFUN-METHOD TV:COM-DISPLAY-INPUT-HISTORY)

(MACRO . #<DTP-FEF-POINTER TV:RH-DISPLAY-INFO-WITH-FONTS 13215176>):
   Arg 0: NIL
   Arg 1: 215
   Arg 2: NIL

(:DEFUN-METHOD TV:RH-DISPLAY-HISTORY):  (P.C. = 61)
   (SELF = #<LISP-LISTENER Lisp Listener 1 30327610 exposed>)
   Arg 0 (SELF-MAPPING-TABLE): #<Map to flavor TV:STREAM-MIXIN -- 14. IV's, 0. FL's 2714474>
   Arg 1 (HISTORY): #<ABBREVIATING-HISTORY Lisp Listener 1 Input 2431266>
   Arg 2 (META-Y): NIL
   Arg 3 (AMOUNT): T
   --Defaulted args:--
   Arg 4 (STRING): NIL

(:DEFUN-METHOD TV:COM-DISPLAY-INPUT-HISTORY):  (P.C. = 42)
   (SELF = #<LISP-LISTENER Lisp Listener 1 30327610 exposed>)
   Arg 0 (SELF-MAPPING-TABLE): #<Map to flavor TV:STREAM-MIXIN -- 14. IV's, 0. FL's 2714474>
   Arg 1 (IGNORE): 1

TV:COM-DISPLAY-INPUT-HISTORY:  (P.C. = 63)
   Rest arg (ARGS): (1)

(:DEFUN-METHOD TV:ALTERNATE-RUBOUT-HANDLER-TYI):  (P.C. = 344)
   (SELF = #<LISP-LISTENER Lisp Listener 1 30327610 exposed>)
   Arg 0 (SELF-MAPPING-TABLE): #<Map to flavor TV:STREAM-MIXIN -- 14. IV's, 0. FL's 2714474>
   Arg 1 (RUBBED-OUT-SOME?): NIL

TV:ALTERNATE-RUBOUT-HANDLER-TYI:  (P.C. = 63)
   Rest arg (ARGS): (NIL)

TV:RUBOUT-HANDLER-INVOKE:  (P.C. = 30)
   Arg 0 (OPERATION): TV:ALTERNATE-RUBOUT-HANDLER-TYI
   Rest arg (ARGS): (NIL)

(:METHOD TV:STREAM-MIXIN :ANY-TYI):  (P.C. = 115)
   (SELF = #<LISP-LISTENER Lisp Listener 1 30327610 exposed>)
   Arg 0 (OPERATION): :ANY-TYI
   --Defaulted args:--
   Arg 1 (IGNORE): NIL

Rest of stack:
(:DEFUN-METHOD TV:TYI-INTERNAL):  (P.C. = 40)
(:METHOD TV:STREAM-MIXIN :TYI):  (P.C. = 27)
SI:XR-XRTYI-WHITE-OUT:  (P.C. = 34)
SI:XR-READ-THING:  (P.C. = 115)
(:INTERNAL SI:READ-INTERNAL 0):  (P.C. = 75)
(:DEFUN-METHOD TV:RUBOUT-HANDLER-READ):  (P.C. = 204)
(:METHOD TV:STREAM-MIXIN :RUBOUT-HANDLER):  (P.C. = 201)
SI:READ-INTERNAL:  (P.C. = 101)
READ-FOR-TOP-LEVEL:  (P.C. = 26)
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 266)
SI:LISP-COMMAND-LOOP:  (P.C. = 251)
SI:LISP-TOP-LEVEL1:  (P.C. = 47)
SI:LISP-TOP-LEVEL:  (P.C. = 35)
15-Apr-84 18:03:52-EST,3929;000000000000
Received: from MIT-BUDDY by MIT-OZ via Chaosnet; 15 Apr 84 18:03-EST
Date: Sunday, 15 April 1984, 17:57-EST
From: Ken Haase <KWH at MIT-OZ>
Subject: VMS file bug
To: BUG-LISPM at MIT-OZ

In Release 5.0 [Beta Test rev 7], ARLO 16.0, on Lisp Machine Buddy Holly (3600):

This still happens on Pig when you abort out of a file
write.  (For instance, by answering no to the "Unbalanced
Parentheses" complaint)

>>Error: Illegal File Handle, not open
         For PYGMALION:SYS$DISK:[KWH.ARLO.SMARTS]MUSEUM.LSP
While in the function (:METHOD FS:HOST-UNIT :COMMAND)  (:METHOD FS:FILE-DATA-STREAM-MIXIN :COMMAND)  (:METHOD FS:FILE-OUTPUT-STREAM-MIXIN :REAL-CLOSE)

(:METHOD FS:HOST-UNIT :COMMAND):  (P.C. = 231)
   Arg 0 (SELF): #<HOST-UNIT 35151475>
   Arg 1 (SELF-MAPPING-TABLE): FS:HOST-UNIT
   Arg 2 (OPERATION): :COMMAND
   Arg 3 (MARK-P): NIL
   Arg 4 (STREAM-OR-HANDLE): #<FILE-OUTPUT-CHARACTER-STREAM "PYGMALION:SYS$DISK:[KWH.ARLO.SMARTS]MUSEUM.LSP" 37016047>
   Arg 5 (SIMPLE-P): NIL
   Arg 6 (WHOSTATE): "Delete"
   Rest arg (COMMANDS): NIL
   Local 8 (HANDLE): "O2069"
   Local 9 (STREAM): #<FILE-OUTPUT-CHARACTER-STREAM "PYGMALION:SYS$DISK:[KWH.ARLO.SMARTS]MUSEUM.LSP" 37016047>
   Local 10 (PKT): #<Chaos Packet 14602760>
   Local 11 (SUCCESS): NIL
   Local 12 (STRING): "O2069 ERROR MSC C Illegal File Handle, not open"
   Local 13 (TRANSACTION-ID): "T2085"
   Local 14 (CREATE-P): NIL
   Local 15 (CONDITION): NIL

(:METHOD FS:FILE-DATA-STREAM-MIXIN :COMMAND):  (P.C. = 14)
   Arg 0 (SELF): #<FILE-OUTPUT-CHARACTER-STREAM "PYGMALION:SYS$DISK:[KWH.ARLO.SMARTS]MUSEUM.LSP" 37016047>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:FILE-DATA-STREAM-MIXIN -- 6. IV's, 0. FL's 104224672>
   Arg 2 (OPERATION): :COMMAND
   Arg 3 (MARK-P): NIL
   Arg 4 (WHOSTATE): "Delete"
   Arg 5 (COM): "DELETE"
   Rest arg (STRINGS): NIL

(:METHOD FS:FILE-OUTPUT-STREAM-MIXIN :REAL-CLOSE):  (P.C. = 42)
   Arg 0 (SELF): #<FILE-OUTPUT-CHARACTER-STREAM "PYGMALION:SYS$DISK:[KWH.ARLO.SMARTS]MUSEUM.LSP" 37016047>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:FILE-OUTPUT-STREAM-MIXIN -- 6. IV's, 1. FL's 104224662>
   Arg 2 (OPERATION): :REAL-CLOSE
   Arg 3 (ABORTP): :ABORT

(:METHOD FS:FILE-DATA-STREAM-MIXIN :CLOSE):  (P.C. = 26)
   Arg 0 (SELF): #<FILE-OUTPUT-CHARACTER-STREAM "PYGMALION:SYS$DISK:[KWH.ARLO.SMARTS]MUSEUM.LSP" 37016047>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:FILE-DATA-STREAM-MIXIN -- 6. IV's, 0. FL's 104224672>
   Arg 2 (OPERATION): :CLOSE
   Arg 3 (ABORTP): :ABORT

(:METHOD FS:FILE-OUTPUT-CHARACTER-STREAM :COMBINED :CLOSE):  (P.C. = 22)
   Arg 0 (SELF): #<FILE-OUTPUT-CHARACTER-STREAM "PYGMALION:SYS$DISK:[KWH.ARLO.SMARTS]MUSEUM.LSP" 37016047>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:FILE-OUTPUT-CHARACTER-STREAM -- 1. IV's, 7. FL's 104224646>
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

SI:CLOSE-OPEN-STREAM:  (P.C. = 14)
   Arg 0 (STREAM): #<FILE-OUTPUT-CHARACTER-STREAM "PYGMALION:SYS$DISK:[KWH.ARLO.SMARTS]MUSEUM.LSP" 37016047>
   Arg 1 (ABORT): :ABORT

(:METHOD ZWEI:FILE-BUFFER-MIXIN :SAVE):  (P.C. = 130)
   Arg 0 (SELF): #<FILE-BUFFER "MUSEUM.LSP :[KWH.ARLO.SMARTS] PYGMALION:" 23435051>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:FILE-BUFFER-MIXIN -- 9. IV's, 0. FL's 105014742>
   Arg 2 (OPERATION): :SAVE

ZWEI:SAVE-BUFFER:
   Arg 0 (BUFFER): #<FILE-BUFFER "MUSEUM.LSP :[KWH.ARLO.SMARTS] PYGMALION:" 23435051>

Rest of stack:
ZWEI:COM-SAVE-FILE:  (P.C. = 14)
ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
ZWEI:MAKE-EXTENDED-COMMAND-INTERNAL:  (P.C. = 77)
SYS:CALL-FUNNY-FUNCTION:  (P.C. = 101)
Closure of ZWEI:MAKE-EXTENDED-COMMAND-INTERNAL:
ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 200)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 41)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
16-Apr-84 01:16:25-EST,1006;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 16 Apr 84 01:15-EST
Received: from SCRC-YANGTZE by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 17195; Sun 15-Apr-84 14:20:32-EST
Date: Sunday, 15 April 1984, 14:27-EST
From: Carl Hoffman <CWH at SCRC-TENEX>
Subject: status
To: sr.ehpyc at MIT-SPEECH, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 14 Apr 84 16:55-EST from Scott Cyphers <sr.ehpyc at MIT-SPEECH>

    Date: Saturday, 14 April 1984, 16:55-EST
    From: Scott Cyphers <sr.ehpyc at MIT-SPEECH>

    In Release 5.0 [Beta Test rev 7], Spire-Macros 1.2, mit, on Lisp Machine Polar (LM-2):

    I typed STATUS and it gave me this at the end

    >>Error: The macro TV:RH-DISPLAY-INFO-WITH-FONTS is an invalid function

This doesn't happen in the LM-2 version of system 243, so I would guess that
this bug was introduced while moving patches from system 243 to system 242
(Release 5).  We'll have to see what the Software Maintenance department has
to say about this.
16-Apr-84 01:34:42-EST,2021;000000000000
Received: from MIT-EECS by MIT-OZ via Chaosnet; 16 Apr 84 01:33-EST
Date: Monday, 16 April 1984, 01:26-EST
From: Barry Margolin <Margolin at MIT-MULTICS>
Sender: Margolin at MIT-MULTICS
Subject: ALL-DIRECTORIES bug
To: BUG-LISPM at MIT-OZ

In Release 5.0 [Beta Test rev 7], FEP 18, on Lisp Machine Apiary-4 (3600):

In Zwei, I typed M-X List All Directory Names.  ALL-DIRECTORIES is
passing a pathname to GET-PATHNAME-HOST when it expects a host name as a
string.

>>Trap: The argument given to the SETUP-1D-ARRAY instruction, #<TOPS20-PATHNAME "OZ:SRC:<*>">, was not an array.
While in the function %STRING-SEARCH-CHAR  (:METHOD NET:HOST :PATHNAME-HOST-NAMEP)  GET-PATHNAME-HOST-I

%STRING-SEARCH-CHAR:  (P.C. = 2)
   Arg 0 (CHAR): 174
   Arg 1 (STRING): #<TOPS20-PATHNAME "OZ:SRC:<*>">
   Arg 2 (START): 0
   Arg 3 (END): 12

(:METHOD NET:HOST :PATHNAME-HOST-NAMEP):  (P.C. = 17)
   Arg 0 (SELF): #<TOPS20-HOST OZ 76234573>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NET:HOST -- 5. IV's, 0. FL's 104116377>
   Arg 2 (OPERATION): :PATHNAME-HOST-NAMEP
   Arg 3 (NAME): #<TOPS20-PATHNAME "OZ:SRC:<*>">

GET-PATHNAME-HOST-I:  (P.C. = 26)
   Arg 0 (HOST-NAME): #<TOPS20-PATHNAME "OZ:SRC:<*>">

GET-PATHNAME-HOST:  (P.C. = 6)
   Arg 0 (HOST-NAME): #<TOPS20-PATHNAME "OZ:SRC:<*>">
   Arg 1 (NO-ERROR-P): T
   --Defaulted args:--
   Arg 2 (NO-AUTO-ADD-P): NIL

ALL-DIRECTORIES:  (P.C. = 11)
   Arg 0 (PATHNAME): #<TOPS20-PATHNAME "OZ:SRC:<*>">
   Rest arg (OPTIONS): (:NOERROR)

ZWEI:COM-LIST-ALL-DIRECTORY-NAMES:  (P.C. = 34)

ZWEI:COM-EXTENDED-COMMAND:  (P.C. = 27)

ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
   Arg 0 (COMMAND): ZWEI:COM-EXTENDED-COMMAND
   Arg 1 (CHAR): 1130
   Arg 2 (PREFIX-CHAR): NIL
   Arg 3 (HOOK-LIST): NIL

Rest of stack:
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 200)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 41)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
16-Apr-84 02:44:10-EST,2236;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 16 Apr 84 02:43-EST
Date: Monday, 16 April 1984, 02:43-EST
From: Scott Cyphers <sr.ehpyc at MIT-SPEECH>
Subject: Generic network comments
To: BUG-LISPM at MIT-OZ

In Release 5.0 [Beta Test rev 7], Versatec 1.0, Spire-Macros 1.2, mit, on Lisp Machine Polar (LM-2):

We have two Versatec printers which inconveniently happen to have
different page sizes.  Other than that, they are identical.  I've
noticed that the namespace printer object lets you specify the width and
height, but none of the code seems to let me take advantage of this,
since everything that could take advantage of it is not passed the
printer as an argument.  For example:

(defun (:versatec si:hardcopy-stream-flavor-function) (device options)
  device options
  'versatec-stream)

If I am doing something to a generic Versatec, I would like the above to
be able to look at the actual printer object to determine the width and
height, and provide the appropriate information to versatec-stream,
either in the above or when the flavor was being instantiated as an init
option, which probably makes more sense.  As things stand now, I have to
kludge my way around the difference by having the actual Versatec driver
provide a fudge factor to compensate for what the generator of the
stream did not have available.  I see this in the LGP code too, where
the length and width are specified in the code rather than being taken
from the printer object for that LGP.

The same kind of problem occurs in finding a local stream to the
printer.  As long as there is only one of a particular type of printer
on a host, things are alright, but if someone wanted to put two LGPs or
two Versatecs onto one LM, and it happened to matter which one was to be
used, it does not seem as if there would be a way to get a stream that
went to the right one, since the only information it would be given
would be that it was an :lgp or a :versatec.  Again, this could be
solved by having the options contain the object to be dealt with.

Other than that, the generic network system has made writing a versatec
hardcopy service an extremely simple task (once I understood how it
works, that is).
16-Apr-84 12:58:16-EST,4124;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 16 Apr 84 12:57-EST
Date: Monday, 16 April 1984, 12:50-EST
From: Christopher C. Stacy <CStacy at MIT-MC>
Subject: MAKE-SYSTEM broken
To: BUG-LISPM at MIT-OZ

In Release 5.0 [Beta Test rev 7], FEP 18, on Lisp Machine Apiary-5 (3600):

I DEFSYSTEMed up a frob which had a NAME and a SHORT-NAME, and which
used logical pathnames which corrosponded to a VMS host.  MAKE-SYSTEM
bombed out in the because it was trying to create an impossible VMS
pathname for the patch directory, using the long NAME (including
spaces and junk) instead of the SHORT-NAME.  Hmmm, the PRETTY-NAME arg
looks kinda quirky here too.

>>Error: "INFORMATION SYSTEM" is an invalid file name for FS:VMS-PATHNAME
While in the function (:METHOD FS:PATHNAME :VALIDATE-COMPONENT)  (:METHOD FS:PATHNAME :VALIDATE)  (:METHOD FS:PATHNAME-HASH-TABLE-MIXIN :GET-PATHNAME)

(:METHOD FS:PATHNAME :VALIDATE-COMPONENT):  (P.C. = 40)
   Arg 0 (SELF): #<VMS-PATHNAME "PYGMALION:[CSTACY.IS.PATCH].SPD">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:PATHNAME -- 0. IV's, 1. FL's 76472165>
   Arg 2 (OPERATION): :VALIDATE-COMPONENT
   Arg 3 (TEST-ARG): "INFORMATION SYSTEM"
   Arg 4 (TEST-ARG-LOC): #<DTP-LOCATIVE 112134156>
   Arg 5 (VALID-MSG): :RAW-NAME
   Arg 6 (TEST-MSG): :VALID-NAME-P
   Arg 7 (CASE-MSG): :CASE-NAME
   Arg 8 (UNCASE-MSG): :UNCASE-NAME
   Arg 9 (COMPONENT): :NAME
   Arg 10 (PRETTY-NAME): "file name"

(:METHOD FS:VMS-PATHNAME-MIXIN :PATCH-FILE-PATHNAME):  (P.C. = 23)  (from OZ:SRC:<S.R5.IO>PATHST)
   Arg 0 (SELF): #<VMS-PATHNAME "PYGMALION:[CSTACY.IS.PATCH]">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:VMS-PATHNAME-MIXIN -- 2. IV's, 0. FL's 104103365>
   Arg 2 (OPERATION): :PATCH-FILE-PATHNAME
   Arg 3 (NAM): "Information System"
   Arg 4 (SAME-DIRECTORY-P): NIL
   Arg 5 (PATOM): "PATCH"
   Arg 6 (TYP): :SYSTEM-DIRECTORY
   Rest arg (ARGS): NIL

Rest of stack:
(:DEFUN-METHOD FS:LOGICAL-PATHNAME-PASS-ON):  (P.C. = 7)
(:METHOD FS:LOGICAL-PATHNAME :PATCH-FILE-PATHNAME):  (P.C. = 10)
PATCH-SYSTEM-PATHNAME:  (P.C. = 35)
READ-SYSTEM-DIRECTORY:  (P.C. = 52)
GET-PATCH-SYSTEM-MAJOR-VERSION:  (P.C. = 5)
COMPUTE-PROPER-FILE-VERSIONS:  (P.C. = 24)
ADD-FILE-TRANSFORMATION:  (P.C. = 264)
GET-TRANSFORMATION-INPUT-FILE-TRANSFORMATIONS:  (P.C. = 52)
QUEUE-ONE-TRANSFORMATION:  (P.C. = 20)
PERFORM-TRANSFORMATIONS:  (P.C. = 122)
PERFORM-TRANSFORMATIONS:  (P.C. = 64)
MAKE-SYSTEM:  (P.C. = 222)
DESCRIBE-SYSTEM:  (P.C. = 121)

At a glance, the following patch (for SYS: IO; PATHST) gets around the
problem for me, but I didn't look very hard -- the problem may really
be more deep rooted than this fix.  For example, I have not tried any
experiments with ITS or TOPS-20 hosts to see if they are affected,
although I imagine we would have heard about it by now.

;;; Patch system interface, more kludges for only 9 character VMS filenames
;;;
;;; Note: yet more kludges by CSTACY 4/16/84 -- 
;;;   Make :NAME component be based on the short-name rather than just NAM.

(DEFMETHOD (VMS-PATHNAME-MIXIN :PATCH-FILE-PATHNAME) (NAM SAME-DIRECTORY-P PATOM TYP
						      &REST ARGS)
  (SELECTQ TYP
    (:SYSTEM-DIRECTORY
     (FUNCALL-SELF ':NEW-PATHNAME
		   ':NAME (IF SAME-DIRECTORY-P PATOM (SI:SYSTEM-SHORT-NAME NAM))
		   ':CANONICAL-TYPE ':PATCH-SYSTEM-DIRECTORY ':VERSION ':NEWEST))
    (:VERSION-DIRECTORY
     (FUNCALL-SELF ':NEW-PATHNAME ':NAME (WITH-OUTPUT-TO-STRING (STREAM)
					   (LET ((SNAME (IF SAME-DIRECTORY-P PATOM
							  (SI:SYSTEM-SHORT-NAME NAM))))
					     (DOTIMES (I (MIN (STRING-LENGTH SNAME) 6))
					       (FUNCALL STREAM ':TYO (AREF SNAME I))))
					   (LET ((BASE 10.) (*NOPOINT T))
					     (PRIN1 (\ (CAR ARGS) 1000.) STREAM)))
		   ':CANONICAL-TYPE ':PATCH-VERSION-DIRECTORY ':VERSION ':NEWEST))
    (:PATCH-FILE
     (FUNCALL-SELF ':NEW-PATHNAME ':NAME (FORMAT NIL "~:[~*~;~C~]~DX~D"
						 SAME-DIRECTORY-P PATOM
						 (\ (CAR ARGS) 100.)
						 (\ (CADR ARGS)
						    (IF SAME-DIRECTORY-P 100. 1000.)))
		   ':CANONICAL-TYPE (CADDR ARGS) ':VERSION ':NEWEST))))

16-Apr-84 21:26:54-EST,6847;000000000000
Received: from MIT-APIARY-8 by MIT-OZ via Chaosnet; 16 Apr 84 21:25-EST
Date: Monday, 16 April 1984, 21:26-EST
From: Mark H. Shirley <MHS at MIT-MC>
Subject: Long message: some compiler optimization questions
To: BUG-LISPM at MIT-OZ
Cc: Mhs at MIT-MC, BAP at CMU-CS-G, shivers at CMU-CS-H

In Release 5.0 [Beta Test rev 7], FEP 18, on Lisp Machine Apiary-8 (3600):

   I have 2 general questions followed by some examples:

1. What is the tradeoff between having a real optimizing compiler and having
   one that generates code quickly?  What do people want for the lisp
   machines?  i.e. there are people who want to use the lispms to run
   production code and other people who want to do fast prototyping.

2. I believe the examples below show some simple optimizations that could be
   performed.  Are there situations I'm overlooking or are these optimizations
   that haven't quite yet made it into (symbolic's rel5) compiler?

    Most of the examples below were supplied by Barak Pearlmutter, a grad
student at CMU working on a project that involves running some long
simulations.  Barak initially collected and annotated them as examples of the
symbolics rel4 compiler's (poor) performance.  Since then, I've compiled them
in rel5 and inserted the disassembled code.

    After we first generated the examples, we thought that the rel4 compiler
was cretinous and the rel5 compiler, though clearly better, was not as good as
it should be.  Now, I'm less sure about this.  For example, I didn't initially
realize that you can't change (+ 1 (+ 2 FREE-VARIABLE)) into (+ 3
FREE-VARIABLE) due to floating point error propagation, and didn't see why the
optimization couldn't be performed.  Moral: the compiler was doing the right
thing in this case.

Examples: <There are some more examples in MC:MHS;COMPLR EXAMPL - these were
	   the "interesting ones">

;;; No compile-time evaluation for eq
;;; and therefore can't handle (if (eq 'a 'a) 'win 'lose) and similar
;;; examples.  Isn't this just constant folding?
(defun test-1 ()
  (eq 'foo 'foo))

TEST-1:
  0 ENTRY: 0 REQUIRED, 0 OPTIONAL
  1 PUSH-CONSTANT 'FOO
  2 PUSH-CONSTANT 'FOO
  3 BUILTIN EQ STACK 
  4 RETURN-STACK 

;;; Though it does do constant folding, i.e.
(defun test-2 ()
  (+ 1 2))

TEST-2:
  0 ENTRY: 0 REQUIRED, 0 OPTIONAL
  1 PUSH-IMMED 3
  2 RETURN-STACK 

;;; This looses <though (if t 'win 'lose) => 'win>
(defun test-3 ()
  (if (numberp 56.) 'win 'lose))

TEST-3:
  0 ENTRY: 0 REQUIRED, 0 OPTIONAL
  1 PUSH-IMMED 56
  2 BUILTIN NUMBERP STACK 
  3 BRANCH-FALSE 6
  4 PUSH-CONSTANT 'WIN
  5 RETURN-STACK 
  6 PUSH-CONSTANT 'LOSE
  7 RETURN-STACK 

;;; Here's another optimizer that could be added.  I suppose one could always
;;; add optimizers.  How does one exercise taste in this area?  How do people
;;; decide which ones are useful and which are correct but a waste?

(defun test-8a ()
  (selectq ':foo			  ;I've written macros that can
    (:bar 'lose1)			  ;put constants here.
    (:foo 'win)
    (:baz 'lose2)
    (otherwise 'lose3)))

TEST-8A:				  ;Oops.
  0 ENTRY: 0 REQUIRED, 0 OPTIONAL
  1 PUSH-CONSTANT ':FOO         ;creating .SELECTQ-ITEM.(FP|0)
  2 PUSH-LOCAL FP|0             ;.SELECTQ-ITEM.
  3 PUSH-CONSTANT ':BAR
  4 BUILTIN EQ STACK 
  5 BRANCH-FALSE 10
  6 PUSH-CONSTANT 'LOSE1
  7 RETURN-STACK 
 10 PUSH-LOCAL FP|0             ;.SELECTQ-ITEM.
 11 PUSH-CONSTANT ':FOO
 12 BUILTIN EQ STACK 
 13 BRANCH-FALSE 16
 14 PUSH-CONSTANT 'WIN
 15 RETURN-STACK 
 16 PUSH-LOCAL FP|0             ;.SELECTQ-ITEM.
 17 PUSH-CONSTANT ':BAZ
 20 BUILTIN EQ STACK 
 21 BRANCH-FALSE 24
 22 PUSH-CONSTANT 'LOSE2
 23 RETURN-STACK 
 24 PUSH-CONSTANT 'LOSE3
 25 RETURN-STACK 

;;; A first cut at an optimizer for this.
l-compiler:
(defoptimizer (selectq selectq-constant-select) (form)
  (matchp form
    (('selectq form . alternatives)
     (if (constant-form-p form)
	 (loop with form = (constant-evaluator form)
	       for (key . actions) in alternatives
	       when (eq form key)
	       return `(progn ,@actions)
	       finally
	       (loop for (key . actions) in alternatives
		     when (or (eq val t) (eq val 'otherwise))
		     return `(progn ,@actions)
		     finally (return nil)))))
    (* form)))

;;; And the code from test-8a.
TEST-8A:
  0 ENTRY: 0 REQUIRED, 0 OPTIONAL
  1 PUSH-CONSTANT 'WIN
  2 RETURN-STACK 

;;; Why doesn't the peephole optimizer catch the redundant
;;; pop / push?
(defun test ()
  (do ((i 0 (+ i 1)))
      ((= i #.(- (expt 2 23) 1)))))

TEST:
  0 ENTRY: 0 REQUIRED, 0 OPTIONAL
  1 PUSH-IMMED 0                ;creating I(FP|0)
  2 BRANCH 6
  3 PUSH-LOCAL FP|0             ;I
  4 BUILTIN +-INTERNAL STACK 1
  5 POP-LOCAL FP|0		;I   <Redundant pop, push>
  6 PUSH-LOCAL FP|0             ;I
  7 PUSH-CONSTANT 1777777
 10 BUILTIN INTERNAL-= STACK 
 11 BRANCH-FALSE 3
 12 PUSH-NIL 
 13 RETURN-STACK 

;;; Shouldn't this use the builtin ZEROP?
(defun test-5a (foo)
  (= foo 0))

TEST-5A:
  0 ENTRY: 1 REQUIRED, 0 OPTIONAL
  1 PUSH-LOCAL FP|0             ;FOO
  2 PUSH-IMMED 0
  3 BUILTIN INTERNAL-= STACK 
  4 RETURN-STACK

;;; Like this
(defun test-5c (foo)
  (zerop foo))

TEST-5C:
  0 ENTRY: 1 REQUIRED, 0 OPTIONAL
  1 PUSH-LOCAL FP|0             ;FOO
  2 BUILTIN ZEROP STACK
  3 RETURN-STACK

;;; There probably should be a =-zerop optimizer?
;;; e.g. something like this
(defoptimizer (= =-zerop) (form)
  (matchp form
    (('= arg1 '0) `(zerop ,arg1))	  ;0 must match 0.0, 0\0....
    (('= '0 arg2) `(zerop ,arg2))
    (* form)))

;;; This is good
(defun test-7 ()
  (+ 1 (+ 2 3)))

TEST-7:
  0 ENTRY: 0 REQUIRED, 0 OPTIONAL
  1 PUSH-IMMED 6
  2 RETURN-STACK 

;;; This doesn't quite win due to floating point inaccuracy propagation
;;; (Is a switch turning on the obvious optimization a good idea?  For the
;;; programming I do, I could care less about minor roundoff errors.  I check
;;; equality with a big fuzz factor anyway.)
(defun test-7-a (a)
  (+ 2 (+ 2 a)))

TEST-7-A:
  0 ENTRY: 1 REQUIRED, 0 OPTIONAL
  1 PUSH-IMMED 2
  2 BUILTIN +-INTERNAL STACK FP|0       ;A
  3 BUILTIN +-INTERNAL STACK 2
  4 RETURN-STACK 

;;; This is good
(defun test-7c0 ()
  (and t nil))

TEST-7C0:
  0 ENTRY: 0 REQUIRED, 0 OPTIONAL
  1 PUSH-NIL 
  2 RETURN-STACK 

;;; However, I don't understand the three RETURN-STACKs here.
(defun test-7c ()
  (and (and (predicate-1) t (zizle) (and (foo) nil))))

TEST-7C:				  ;This isn't all that bad
  0 ENTRY: 0 REQUIRED, 0 OPTIONAL
  1 CALL-0-STACK #'PREDICATE-1
  2 BRANCH-FALSE-ELSE-POP 12
  3 CALL-0-STACK #'ZIZLE
  4 BRANCH-FALSE-ELSE-POP 12
  5 CALL-0-STACK #'FOO
  6 BRANCH-FALSE-ELSE-POP 11
  7 PUSH-NIL 
 10 RETURN-STACK 
 11 RETURN-STACK 
 12 RETURN-STACK 

16-Apr-84 21:41:27-EST,2624;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 16 Apr 84 21:40-EST
Date: Monday, 16 April 1984, 21:41-EST
From: Kent M Pitman <kmp at MIT-MC>
Subject: Whoppers and :CASE method combination
To: BUG-LISPM at MIT-MC
Cc: KMP at MC

In Symbolics Release 4.5, KBE 315.0x (Black Magic) on Avatar (CADR):

Is there an idiom for getting the same behavior as a whopper around
a :CASE method? I just tried writing:

(defmacro define-additional-interpretation (name bvl &body forms)
  (let ((flavor (if (atom name) 'default-vocabulary (car name)))
	(method (if (atom name) name (cadr name)))
	(var (gensym)))
    (multiple-value-bind (arglist spread-p)
	(parse-argument-list bvl)
      `(defwhopper (,flavor :interpret) (,var ,@bvl)
	 (cond ((eq ,var ',method)
		(progn ,@forms)))
	 (,(if spread-p 'lexpr-continue-whopper 'continue-whopper)
	  ,var ,@arglist)))))

which expands into plausible-looking code that is of course not
really going to work (eg, if you call this macro for more than one
case on the same flavor).

Can someone suggest a non-buggy way of achieving the desired effect?

I guess if you can't, I'll have to resort to having an instance 
variable hold a dummy object whose sole purpose is to accomplish
the message dispatch that the toplevel object would really want to
be doing. This would mean extra work elsewhere to get the dummy 
objects defined and instantiated but would mean I could write:

(defmacro define-additional-interpretation (name bvl &body forms)
  (let ((flavor (if (atom name) 'default-vocabulary (car name)))
	(method (if (atom name) name (cadr name))))
    (let ((proxy (symbolconc flavor '-interpretation-proxy)))
      (multiple-value-bind (arglist spread-p)
	  (parse-argument-list bvl)
	`(defwhopper (,proxy ,method) (,var ,@bvl)
	     (progn ,@forms)
	     (,(if spread-p 'lexpr-continue-whopper 'continue-whopper)
	      ,@arglist))))))

All in all, I find this not a pretty solution because it doesn't
let me bundle up the relevant information in a central place.

By the way, while I'm on the subject, I was pretty grossed out by
the fact that :CASE method combination expands into a SELECTQ rather
than into some sort of message dispatch table like that used in
normal message dispatching. Is this really a feature (eg, based
on some theory that most people use very few :CASE things) or is
it just that someone was too lazy to put in method table dispatching?
If nothing else, I notice that redefining :CASE (specifically, adding
new entries) takes forever once the flavor has been compiled, which
can be a real drag.

-kmp
16-Apr-84 22:04:44-EST,1747;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 16 Apr 84 22:02-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 17413; Mon 16-Apr-84 22:00:28-EST
Date: Monday, 16 April 1984, 22:06-EST
From: David C. Plummer <DCP at SCRC-TENEX>
Subject: Long message: some compiler optimization questions
To: MHS at MIT-MC, BUG-LISPM at MIT-OZ
cc: BAP at CMU-CS-G, shivers at CMU-CS-H
In-Reply-To: The message of 16 Apr 84 21:26-EST from Mark H. Shirley <MHS at MIT-MC>

    Date: Monday, 16 April 1984, 21:26-EST
    From: Mark H. Shirley <MHS at MIT-MC>

    In Release 5.0 [Beta Test rev 7], FEP 18, on Lisp Machine Apiary-8 (3600):

I'm not going to attempt to answer most of your questions; it isn't my
field.

    ;;; Why doesn't the peephole optimizer catch the redundant
    ;;; pop / push?
There is a branch into the middle of the push-pop
    (defun test ()
      (do ((i 0 (+ i 1)))
	  ((= i #.(- (expt 2 23) 1)))))

    TEST:
      0 ENTRY: 0 REQUIRED, 0 OPTIONAL
      1 PUSH-IMMED 0                ;creating I(FP|0)
->    2 BRANCH 6
      3 PUSH-LOCAL FP|0             ;I
      4 BUILTIN +-INTERNAL STACK 1
      5 POP-LOCAL FP|0		;I   <Redundant pop, push>
      6 PUSH-LOCAL FP|0             ;I
      7 PUSH-CONSTANT 1777777
     10 BUILTIN INTERNAL-= STACK 
     11 BRANCH-FALSE 3
     12 PUSH-NIL 
     13 RETURN-STACK 

    ;;; Shouldn't this use the builtin ZEROP?
I don't see any reason not to.  It would only save 200 nanoseconds,
though.
    (defun test-5a (foo)
      (= foo 0))

    TEST-5A:
      0 ENTRY: 1 REQUIRED, 0 OPTIONAL
      1 PUSH-LOCAL FP|0             ;FOO
      2 PUSH-IMMED 0
      3 BUILTIN INTERNAL-= STACK 
      4 RETURN-STACK
16-Apr-84 23:08:42-EST,3831;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 16 Apr 84 23:06-EST
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 17435; Mon 16-Apr-84 23:04:19-EST
Date: Monday, 16 April 1984, 23:06-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: Long message: some compiler optimization questions
To: Mark H. Shirley <MHS at MIT-MC>
Cc: BUG-LISPM at MIT-OZ, bug-beta-test at SCRC-YUKON, BAP at CMU-CS-G,
    shivers at CMU-CS-H
In-reply-to: The message of 16 Apr 84 21:26-EST from Mark H. Shirley <MHS at MIT-MC>

    Date: Monday, 16 April 1984, 21:26-EST
    From: Mark H. Shirley <MHS at MIT-MC>

    In Release 5.0 [Beta Test rev 7], FEP 18, on Lisp Machine Apiary-8 (3600):

       I have 2 general questions followed by some examples:

    1. What is the tradeoff between having a real optimizing compiler and having
       one that generates code quickly?  What do people want for the lisp
       machines?  i.e. there are people who want to use the lispms to run
       production code and other people who want to do fast prototyping.

Currently the compiler is optimized more for speed than for generating perfect
code, although it makes a significant effort not to generate terrible code.
I guess you'd say it does only the optimizations that are easy and effective.

    2. I believe the examples below show some simple optimizations that could be
       performed.  Are there situations I'm overlooking or are these optimizations
       that haven't quite yet made it into (symbolic's rel5) compiler?

One always has to be careful when putting in optimizations not to break things.
Some of the things you point out are optimizations that would be reasonable to
have, but got overlooked.  I'll add them to the file kept of things to do to
the compiler when we decide that working on the compiler is the best use of
available resources.

Rest of letter edited to just the things that seemed to need a response and
DCP hadn't already responded adequately.

    Examples: <There are some more examples in MC:MHS;COMPLR EXAMPL - these were
	       the "interesting ones">

Mail any of those that you think ought to go on the to-do list to me.

SELECTQ would be constant-folded if EQ were, with one slight change
to the SELECTQ macro, since COND is already constant-folded and SELECTQ
is a macro that expands into a COND.

    ;;; Shouldn't this use the builtin ZEROP?
    (defun test-5a (foo)
      (= foo 0))

Yes, it should.  I thought ZEROP might be slower for non-fixnum arguments,
but it's actually about 5 microseconds faster, probably because it's unary.

    ;;; This doesn't quite win due to floating point inaccuracy propagation
    ;;; (Is a switch turning on the obvious optimization a good idea?  For the
    ;;; programming I do, I could care less about minor roundoff errors.  I check
    ;;; equality with a big fuzz factor anyway.)
    (defun test-7-a (a)
      (+ 2 (+ 2 a)))

Maybe someday the compiler will accept type declarations and do extra optimizations
if they are supplied.  I fear the ramifications of a global switch for this.

    ;;; However, I don't understand the three RETURN-STACKs here.
    (defun test-7c ()
      (and (and (predicate-1) t (zizle) (and (foo) nil))))

    TEST-7C:				  ;This isn't all that bad
      0 ENTRY: 0 REQUIRED, 0 OPTIONAL
      1 CALL-0-STACK #'PREDICATE-1
      2 BRANCH-FALSE-ELSE-POP 12
      3 CALL-0-STACK #'ZIZLE
      4 BRANCH-FALSE-ELSE-POP 12
      5 CALL-0-STACK #'FOO
      6 BRANCH-FALSE-ELSE-POP 11
      7 PUSH-NIL 
     10 RETURN-STACK 
     11 RETURN-STACK 
     12 RETURN-STACK 

Each of them is branched to.  The compiler fails to notice that it is putting
out identical instructions that could be merged into a single copy.
16-Apr-84 23:45:54-EST,2777;000000000000
Received: from MIT-ARTHUR by MIT-OZ via Chaosnet; 16 Apr 84 23:45-EST
Date: Monday, 16 April 1984, 23:43-EST
From: The Lisp Machine <LISPM at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In Don't-dump-a-band! Inconsistent (unreleased patches loaded) System 98.44,
CADR 3.6, ZMail 53.13, MIT-Specific 22.0, microcode 309, ZM MIT,
on Arthur Dent:


Insert your description of the circumstances here:

I was loading patches with (load-patches).  The system patches loaded
OK, but the Zmail patching barfed after displaying

Pathname default for O command bug.

				Robert Krawitz zzz.rlk@oz

>>TRAP 14101 (ARGTYP NUMBER M-T 1 QILSP0)
The second argument to <, "Pathname default for O command bug.
Editing init-file remembered mail files bug.", was of the wrong type.
The function expected a number.
Backtrace from the debugger:

FORMAT:INDENT-CONVERT-STREAM (P.C. = 73)

 Arg 0 (OP): :TYO
 Rest arg (ARGS): (215)
Local 1 (I): 2
Local 2: "Pathname default for O command bug.
Editing init-file remembered mail files bug."


STREAM-DEFAULT-HANDLER (P.C. = 237)

 Arg 0 (FCTN): FORMAT:INDENT-CONVERT-STREAM
 Arg 1 (OP): :STRING-OUT
 Arg 2 (ARG1): "Pathname default for O command bug.
Editing init-file remembered mail files bug."
 Arg 3 (ARGS): NIL
Local 0 (TEM): "Pathname default for O command bug.
Editing init-file remembered mail files bug."
Local 1 (LEN): 120
Local 2 (I): 43
Local 3 (BUF): NIL
Local 4 (TEM): NIL
Local 5 (START): NIL
Local 6 (END): NIL
Local 7 (CH): NIL
Local 8 (VALUE): NIL
Local 9 (OPS): NIL


FORMAT:INDENT-CONVERT-STREAM (P.C. = 132)

 Arg 0 (OP): :STRING-OUT
 Rest arg (ARGS): ("Pathname default for O command bug.
Editing init-file remembered mail files bug.")
Local 1 (I): NIL
Local 2: NIL


FORMAT:FORMAT-CTL-ASCII (P.C. = 122)

 Arg 0 (ARG): "Pathname default for O command bug.
Editing init-file remembered mail files bug."
 Arg 1 (PARAMS): NIL
   --Defaulted args:--
 Arg 2 (PRIN1P): NIL
Local 0 (EDGE): NIL
Local 1 (PERIOD): NIL
Local 2 (MIN): NIL
Local 3 (PADCHAR): 40
Local 4 (WIDTH): NIL


FORMAT:FORMAT-CTL-OP (P.C. = 63)

 Arg 0 (OP): FORMAT:A
 Arg 1 (ARGS): ("Pathname default for O command bug.
Editing init-file remembered mail files bug.")
 Arg 2 (PARAMS): NIL
Local 0 (TEM): FORMAT:FORMAT-CTL-ASCII


Remainder of stack:

FORMAT:FORMAT-CTL-STRING (P.C. = 136)
FORMAT:FORMAT-CTL-START-INDENT-CONVERT (P.C. = 103)
FORMAT:FORMAT-CTL-OP (P.C. = 104)
FORMAT:FORMAT-CTL-STRING (P.C. = 136)
FORMAT (P.C. = 177)
SI:PRINT-PATCH (P.C. = 34)
LOAD-PATCHES (P.C. = 1046)
SI:EVAL1 (P.C. = 1324)
SI:EVAL-ABORT-TRIVIAL-ERRORS (P.C. = 61)
SI:LISP-TOP-LEVEL1 (P.C. = 426)
SI:LISP-TOP-LEVEL2 (P.C. = 27)
SI:PROCESS-TOP-LEVEL (P.C. = 246)
SI:LISP-TOP-LEVEL (P.C. = 47)
16-Apr-84 23:46:46-EST,3036;000000000000
Date: Mon 16 Apr 84 23:45:55-EST
From: The Mailer Daemon <Mailer@MIT-OZ>
To: LISPM@MIT-OZ
Subject: Message of 16-Apr-84 23:45:06

Message failed for the following:
dekleer@MIT-OZ.#Chaos: Can't forward - unknown host "Xerox"
	    ------------
Received: from MIT-ARTHUR by MIT-OZ via Chaosnet; 16 Apr 84 23:45-EST
Date: Monday, 16 April 1984, 23:43-EST
From: The Lisp Machine <LISPM at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In Don't-dump-a-band! Inconsistent (unreleased patches loaded) System 98.44,
CADR 3.6, ZMail 53.13, MIT-Specific 22.0, microcode 309, ZM MIT,
on Arthur Dent:


Insert your description of the circumstances here:

I was loading patches with (load-patches).  The system patches loaded
OK, but the Zmail patching barfed after displaying

Pathname default for O command bug.

				Robert Krawitz zzz.rlk@oz

>>TRAP 14101 (ARGTYP NUMBER M-T 1 QILSP0)
The second argument to <, "Pathname default for O command bug.
Editing init-file remembered mail files bug.", was of the wrong type.
The function expected a number.
Backtrace from the debugger:

FORMAT:INDENT-CONVERT-STREAM (P.C. = 73)

 Arg 0 (OP): :TYO
 Rest arg (ARGS): (215)
Local 1 (I): 2
Local 2: "Pathname default for O command bug.
Editing init-file remembered mail files bug."


STREAM-DEFAULT-HANDLER (P.C. = 237)

 Arg 0 (FCTN): FORMAT:INDENT-CONVERT-STREAM
 Arg 1 (OP): :STRING-OUT
 Arg 2 (ARG1): "Pathname default for O command bug.
Editing init-file remembered mail files bug."
 Arg 3 (ARGS): NIL
Local 0 (TEM): "Pathname default for O command bug.
Editing init-file remembered mail files bug."
Local 1 (LEN): 120
Local 2 (I): 43
Local 3 (BUF): NIL
Local 4 (TEM): NIL
Local 5 (START): NIL
Local 6 (END): NIL
Local 7 (CH): NIL
Local 8 (VALUE): NIL
Local 9 (OPS): NIL


FORMAT:INDENT-CONVERT-STREAM (P.C. = 132)

 Arg 0 (OP): :STRING-OUT
 Rest arg (ARGS): ("Pathname default for O command bug.
Editing init-file remembered mail files bug.")
Local 1 (I): NIL
Local 2: NIL


FORMAT:FORMAT-CTL-ASCII (P.C. = 122)

 Arg 0 (ARG): "Pathname default for O command bug.
Editing init-file remembered mail files bug."
 Arg 1 (PARAMS): NIL
   --Defaulted args:--
 Arg 2 (PRIN1P): NIL
Local 0 (EDGE): NIL
Local 1 (PERIOD): NIL
Local 2 (MIN): NIL
Local 3 (PADCHAR): 40
Local 4 (WIDTH): NIL


FORMAT:FORMAT-CTL-OP (P.C. = 63)

 Arg 0 (OP): FORMAT:A
 Arg 1 (ARGS): ("Pathname default for O command bug.
Editing init-file remembered mail files bug.")
 Arg 2 (PARAMS): NIL
Local 0 (TEM): FORMAT:FORMAT-CTL-ASCII


Remainder of stack:

FORMAT:FORMAT-CTL-STRING (P.C. = 136)
FORMAT:FORMAT-CTL-START-INDENT-CONVERT (P.C. = 103)
FORMAT:FORMAT-CTL-OP (P.C. = 104)
FORMAT:FORMAT-CTL-STRING (P.C. = 136)
FORMAT (P.C. = 177)
SI:PRINT-PATCH (P.C. = 34)
LOAD-PATCHES (P.C. = 1046)
SI:EVAL1 (P.C. = 1324)
SI:EVAL-ABORT-TRIVIAL-ERRORS (P.C. = 61)
SI:LISP-TOP-LEVEL1 (P.C. = 426)
SI:LISP-TOP-LEVEL2 (P.C. = 27)
SI:PROCESS-TOP-LEVEL (P.C. = 246)
SI:LISP-TOP-LEVEL (P.C. = 47)
-------
17-Apr-84 20:11:39-EST,1722;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 17 Apr 84 20:11-EST
Received: from SCRC-STILLWATER by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 17769; Tue 17-Apr-84 19:21:37-EST
Date: Tue, 17 Apr 84 19:23 EST
From:  <PHILG%SCRC-QUABBIN@SCRC-RIVERSIDE.ARPA>
Subject: demo obsoliticity
To: Elijah Millgram <millgram%MIT-OZ@SCRC-RIVERSIDE.ARPA>
Cc: BUG-LISPM@MIT-MC.ARPA, maint%SCRC-QUABBIN@SCRC-RIVERSIDE.ARPA
In-reply-to: The message of 14 Apr 84 15:31-EST from Elijah Millgram <millgram at MIT-OZ>

    Date: Sat, 14 Apr 84 15:31 EST
    From: Elijah Millgram <millgram%MIT-OZ@MIT-MC.ARPA>

    In Release 5.0 [Beta Test rev 7], FEP 18, on Lisp Machine Apiary-5 (3600):

    I was looking at the graphics demo (you know, what you get by invoking
    HACKS:DEMO) and noticed that the documentation on "munching squares" still
    thinks the keyboard is an LM-2 (it talks about hands-right and its friends).
    Someone might want to do something about this.

Thank you for reporting this bug.  In fact, KMP gets the sharp eyes
award for reporting it broken in Release 4.  I "fixed" this months ago
in the source (unfortunately after the Release 5 world was built).
Actually, come to think of it, I think it needs "fixing" again, since
the 3600 keytops have been changed.  I didn't think it was worth
patching, but will patch it if people think its worth it.  I will also
"fix" it again next time I'm on a machine with new keytops.  Probably
someday the entire hacks package will not be loaded by default (then we
could distribute more hacks without fear of cluttering the world and
those we do distribute would be more up to date).  Thanks for reporting
and bearing with this bug.

Philip
17-Apr-84 21:34:03-EST,3402;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 17 Apr 84 21:33-EST
Date: Tuesday, 17 April 1984, 21:34-EST
From: sr.ehpyc at MIT-SPEECH
Sender: joseph at SCRC-QUABBIN
Subject: namespace error
To: BUG-LISPM at MIT-OZ

In Release 5.0 [Beta Test rev 7], mit, on Lisp Machine Yogi (LM-2):

I did (load "GOLDY:>S>SPIRE>NAMESPACE").  I doubt this is deterministically repeatable.

Would it not be reasonable for find-paths-to-service to only check paths
within the local namespace when the service is within the local namespace?

>>Error: Object named SPA|<DELETED> cannot be updated in namespace MIT.
While in the function NETI:ADD-OR-CHANGE-OBJECT  NETI:DO-UNKNOWN-OBJECT-FIXUPS  NETI:QUERY-NAMESPACE-SERVER

NETI:ADD-OR-CHANGE-OBJECT:  (P.C. = 171)
   Arg 0 (CLASS-NAME): :HOST
   Arg 1 (NAME): #<NAME SPA|<DELETED> 31464760>
   Arg 2 (PROPERTY-LIST): NIL
   Local 0 (FLAVOR): NIL
   Local 1 (OBJECT): NIL
   Local 2 (CHANGED-P): NIL
   Local 3 (GLOBAL-OBJECT): NIL
   Local 4 (NAMES): NIL
   Local 5 (CLASS): #<CLASS HOST 2422163>
   Local 6 (TEST-NAME): NIL
   Local 7: NIL
   Local 8 (NEW-NAME): NIL
   Local 9 (INDICATOR): NIL
   Local 10 (THESE-NAMES): NIL
   Local 11: NIL
   Local 12: NIL
   Local 13 (NAME1): NIL
   Local 14: NIL
   Local 15: NIL
   Local 16: NIL
   Local 17 (FUNCTION): NIL
   Local 18 (NAME): NIL
   Local 19 (FOUND): NIL
   Local 20 (FOUND-NAME): NIL
   Local 21 (NS): NIL
   Local 22 (FIND): NIL
   Local 23 (NEW-OBJECT): NIL

NETI:DO-UNKNOWN-OBJECT-FIXUPS:  (P.C. = 162)
   Arg 0 (DECACHE-FIRST): T

NETI:QUERY-NAMESPACE-SERVER:  (P.C. = 664)
   Arg 0 (CLASS): :SITE
   Arg 1 (NAMESPACE): #<NAMESPACE SWW 31442236>
   Rest arg (PROPERTY-LIST): (:NAME :SLA)

NETI:GET-INCREMENTAL-UPDATE-FROM-NETWORK:  (P.C. = 532)
   Arg 0 (NAMESPACE): #<NAMESPACE SWW 31442236>
   Arg 1 (STARTING-TIMESTAMP): 337

(:METHOD NETI:NAMESPACE :GET-LATEST-TIMESTAMP):  (P.C. = 50)
   (SELF = #<NAMESPACE SWW 31442236>)
   Arg 0 (OPERATION): :GET-LATEST-TIMESTAMP

(:METHOD NETI:NAMESPACE :VALIDATION-TIMESTAMP):  (P.C. = 66)
   (SELF = #<NAMESPACE SWW 31442236>)
   Arg 0 (OPERATION): :VALIDATION-TIMESTAMP

(:METHOD NET:OBJECT :CHECK-VALIDITY):  (P.C. = 145)
   (SELF = #<CHAOS-NETWORK CHAOS 3253206>)
   Arg 0 (OPERATION): :CHECK-VALIDITY
   Arg 1 (RELATIVE-TO-NAMESPACE): #<NAMESPACE SWW 31442236>

(:METHOD NET:OBJECT :CHECK-VALIDITY):  (P.C. = 117)
   (SELF = #<CHAOS-NETWORK CHAOS 3253206>)
   Arg 0 (OPERATION): :CHECK-VALIDITY
   --Defaulted args:--
   Arg 1 (RELATIVE-TO-NAMESPACE): NIL

Rest of stack:
(:METHOD NET:OBJECT :BEFORE :GET):  (P.C. = 24)
(:METHOD NET:OBJECT :COMBINED :GET):  (P.C. = 43)
(:METHOD NET:NETWORK :NETWORK-TYPEP):  (P.C. = 30)
NETI:FIND-PATHS-FOR-MEDIUM-TO-HOST-1:  (P.C. = 355)
NETI:FIND-PATHS-FOR-MEDIUM-TO-HOST:  (P.C. = 123)
NETI:FIND-PATHS-TO-SERVICE-ON-HOST-1:  (P.C. = 36)
NET:FIND-PATHS-TO-SERVICE-ON-HOST:  (P.C. = 244)
NET:INVOKE-SERVICE-ON-HOST:  (P.C. = 152)
(:METHOD FS:ACTIVE-PATHNAME-HOST :FILE-ACCESS-PATH):  (P.C. = 77)
(:METHOD FS:ACTIVE-PATHNAME-MIXIN :OPEN):  (P.C. = 32)
FS:COMMON-LISP-OPEN:  (P.C. = 544)
OPEN:  (P.C. = 376)
FS:LOAD-OPEN:  (P.C. = 202)
LOAD:  (P.C. = 154)
SI:*EVAL:  (P.C. = 676)
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 330)
SI:LISP-COMMAND-LOOP:  (P.C. = 251)
SI:LISP-TOP-LEVEL1:  (P.C. = 47)
SI:LISP-TOP-LEVEL:  (P.C. = 35)
17-Apr-84 23:54:20-EST,582;000000000000
Received: from MIT-XX by MIT-OZ via Chaosnet; 17 Apr 84 23:54-EST
Date: Tuesday, 17 April 1984, 23:50-EST
From: scott a douglass <sad at MIT-XX>
Subject: zmacs self-doc bug and changed definitions questions.
To: BUG-LISPM at MIT-OZ

In Release 5.0 [Beta Test rev 7], FEP 18, on Lisp Machine Apiary-5 (3600):

In zmacs <Help> C m-sh-E says "compile" in it -- I think it means
"evaluate".  Is there a reason that "Evaluate Buffer" doesn't mark all
definitions as unchanged?  How about marking them all as changed when a file
is read into a buffer?   thanks.
					--scott
18-Apr-84 02:04:35-EST,125;000000000000
Mail-From: SDL created at 18-Apr-84 02:03:54
Date: Wed 18 Apr 84 02:03:54-EST
From: SDL@MIT-OZ
To: l@MIT-OZ


-------
18-Apr-84 12:05:43-EST,959;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 18 Apr 84 12:03-EST
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 17916; Wed 18-Apr-84 00:44:57-EST
Date: Wed, 18 Apr 84 00:50 EST
From: "David A. Moon" <Moon%SCRC-TENEX@SCRC-RIVERSIDE.ARPA>
Subject: Whoppers and :CASE method combination
To: Kent M Pitman <kmp@MIT-MC.ARPA>
Cc: BUG-LISPM@MIT-MC.ARPA
In-reply-to: The message of 16 Apr 84 21:41-EST from Kent M Pitman <kmp at MIT-MC>

:CASE methods don't do what you seem to be looking for.  They don't make any
attempt to be fast; they were put in to support a couple of condition-system
messages such as :PROCEED that don't need to be fast.  Possibly what you want
is to separate each case into a separate top-level message; if you are taking
advantage of the :OTHERWISE feature of :CASE you can write a :UNCLAIMED-MESSAGE
method and make it compare the message that was sent against a list of relevant
messages.
18-Apr-84 12:25:16-EST,1793;000000000000
Mail-From: EB created at 18-Apr-84 12:24:24
Date: Wed, 18 Apr 1984  12:24 EST
Message-ID: <EB.12008482478.BABYL@MIT-OZ>
From: EB@MIT-OZ
To:   Bug-Lispm@MIT-OZ
Subject: [EB: query about function specs.]


I haven't gotten any response on this.  Could someone answer it
please?  That is, what would I have to do in order to put this in
myself?

Date: Tuesday, 13 March 1984  11:31-EST
From: EB
To:   Bug-Beta-Test
Re:   query about function specs.

    I would like to have function-specs that are compound in the way
that function-specs for method handlers are.  I have programs that
create functions and I need to give them names that composed uniquely
out of several symbols that may be in different packages.  Right now I
am using uninterned symbols, but that has turned out to be
inconvenient in various ways.  Using interned symbols doesn't seem to
be the right thing either, since it makes the names long and may lose
the package information of the original symbols depending on how I do
it.  (:location ...) function specs can't be saved in files and don't
give the functions recognizable names, so they are out too.

    I would like to implement function-specs of the form

	(:compound <list>)

where <list> is a list of symbols.  In my case, a typical <list> might
be (PARSE:PARSING-ACTION AND3-PARSER START-NOUN-PHRASE).  Each such
<list> would be mapped through a global equal-hash-table to a cons
cell, whose CDR would be the true location of the function associated
with the function spec.  I believe that all of the operations required
for function specs could be implemented with this setup.

    Does a function spec like this already exist?  If not, what would
it take for me to make the system recognize function-specs of this
form?
18-Apr-84 12:27:23-EST,1544;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 18 Apr 84 12:25-EST
Date: Wed, 18 Apr 1984  12:22 EST
Message-ID: <EB.12008482122.BABYL@MIT-OZ>
From: EB%MIT-OZ@MIT-MC.ARPA
To:   "David A. Moon" <Moon%SCRC-TENEX@SCRC-RIVERSIDE.ARPA>
Cc:   BUG-LISPM@MIT-MC.ARPA, Kent M Pitman <kmp@MIT-MC.ARPA>
Subject: Whoppers and :CASE method combination
In-reply-to: Msg of 18 Apr 1984  00:50-EST from David A. Moon <Moon%SCRC-TENEX at SCRC-RIVERSIDE.ARPA>

    Date: Wednesday, 18 April 1984  00:50-EST
    From: David A. Moon <Moon%SCRC-TENEX at SCRC-RIVERSIDE.ARPA>
    To:   Kent M Pitman <kmp at MIT-MC.ARPA>
    cc:   BUG-LISPM at MIT-MC.ARPA
    Re:   Whoppers and :CASE method combination

    :CASE methods don't do what you seem to be looking for.  They don't make any
    attempt to be fast; they were put in to support a couple of condition-system
    messages such as :PROCEED that don't need to be fast.

That's a bug.  Message dispatch already goes to some pains to be fast,
hence the required mechanisms are available.  Like KMP, I assumed that
:case dispatch would be fast.

Regardless of the reason why :case methods were put in, they WERE put
in.  They should have been put in right.  Even if it's better to use
a simple dispatch method when there are only a few cases, the
system should provide for the situation in which there are many :case
cases. 

I don't seem to remember a documented way for a user to define new
kinds of method-combination, so slowness and kludgery are the only
current alternatives.
18-Apr-84 13:46:27-EST,642;000000000000
Received: from SCRC-TENEX by MIT-OZ via Chaosnet; 18 Apr 84 13:42-EST
Date: 18 Apr 1984 1219-EST
From: The Mailer Daemon <Mailer@SCRC-TENEX>
To: LISPM@MIT-OZ
Subject: Message of 16-Apr-84 23:47:05

Message undelivered after 1 day -- will try for another 2 days:
HES@SCRC-CUPID: Cannot connect to host.
Jim@SCRC-CUPID: Cannot connect to host.
            ------------
Received: from MIT-OZ by SCRC-TENEX with CHAOS; Mon 16-Apr-84 23:47:05-EST
Received: from MIT-ARTHUR by MIT-OZ via Chaosnet; 16 Apr 84 23:45-EST
Date: Monday, 16 April 1984, 23:43-EST
From: The Lisp Machine <LISPM at MIT-OZ>
To: BUG-LISPM at MIT-OZ

-------
18-Apr-84 16:37:08-EST,1207;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 18 Apr 84 16:36-EST
Received: from SCC-YOSEMITE by SCC-WAIKATO via CHAOS with CHAOS-MAIL id 20649; Wed 18-Apr-84 15:59:46-EST
Date: Wed, 18 Apr 84 15:59 EST
From: "Jonathan L. Balgley" <jlb%SCC-WAIKATO@SCRC-RIVERSIDE.ARPA>
Subject: Whoppers and :CASE method combination
To: Moon%SCRC-TENEX@SCRC-RIVERSIDE.ARPA, kmp@MIT-MC.ARPA
Cc: BUG-LISPM@MIT-MC.ARPA
In-reply-to: The message of 18 Apr 84 00:50-EST from David A. Moon <Moon%SCRC-TENEX at SCRC-RIVERSIDE>

    Date: Wed, 18 Apr 84 00:50 EST
    From: "David A. Moon" <Moon%SCRC-TENEX@SCRC-RIVERSIDE.ARPA>

    :CASE methods don't do what you seem to be looking for.  They don't make any
    attempt to be fast; they were put in to support a couple of condition-system
    messages such as :PROCEED that don't need to be fast.  Possibly what you want
    is to separate each case into a separate top-level message; 

Doesn't this preclude wrapping a whopper around a group of messages?

	if you are taking
    advantage of the :OTHERWISE feature of :CASE you can write a :UNCLAIMED-MESSAGE
    method and make it compare the message that was sent against a list of relevant
    messages.
18-Apr-84 17:24:20-EST,1005;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 18 Apr 84 17:11-EST
Received: from SCRC-THAMES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 17285; Mon 16-Apr-84 13:01:57-EST
Date: Monday, 16 April 1984, 13:08-EST
From: Scott McKay <SWM at SCRC-QUABBIN>
Subject: VMS file bug
To: KWH at MIT-OZ, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 15 Apr 84 17:57-EST from Ken Haase <KWH at MIT-OZ>

    Date: Sunday, 15 April 1984, 17:57-EST
    From: Ken Haase <KWH at MIT-OZ>

    In Release 5.0 [Beta Test rev 7], ARLO 16.0, on Lisp Machine Buddy Holly (3600):

    This still happens on Pig when you abort out of a file
    write.  (For instance, by answering no to the "Unbalanced
    Parentheses" complaint)

    >>Error: Illegal File Handle, not open
	     For PYGMALION:SYS$DISK:[KWH.ARLO.SMARTS]MUSEUM.LSP

Since nobody has moved all the updated software from [SWM...] into
[CHAOS...], I have just done so myself.  I would be most surprised if it
does not work now.
18-Apr-84 17:39:13-EST,2430;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 18 Apr 84 17:33-EST
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 18319; Wed 18-Apr-84 17:36:25-EST
Date: Wednesday, 18 April 1984, 17:38-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: [EB: query about function specs.]
To: EB at MIT-OZ
Cc: Bug-Lispm at MIT-OZ, bug-beta-test at SCRC-YUKON
In-reply-to: <EB.12008482478.BABYL@MIT-OZ>

    Date: Wed, 18 Apr 1984  12:24 EST
    From: EB@MIT-OZ

    I haven't gotten any response on this.  Could someone answer it
    please?  That is, what would I have to do in order to put this in
    myself?

I don't think how to make your own kind of function spec is documented
currently, however it is not difficult.  Look at the source for the
SYS:FUNCTION-SPEC-HANDLER property of a few typical function spec
type symbols, such as :PROPERTY and :INTERNAL.

    Date: Tuesday, 13 March 1984  11:31-EST
    From: EB
    To:   Bug-Beta-Test
    Re:   query about function specs.

	I would like to have function-specs that are compound in the way
    that function-specs for method handlers are.  I have programs that
    create functions and I need to give them names that composed uniquely
    out of several symbols that may be in different packages.  Right now I
    am using uninterned symbols, but that has turned out to be
    inconvenient in various ways.  Using interned symbols doesn't seem to
    be the right thing either, since it makes the names long and may lose
    the package information of the original symbols depending on how I do
    it.  (:location ...) function specs can't be saved in files and don't
    give the functions recognizable names, so they are out too.

	I would like to implement function-specs of the form

	    (:compound <list>)

    where <list> is a list of symbols.  In my case, a typical <list> might
    be (PARSE:PARSING-ACTION AND3-PARSER START-NOUN-PHRASE).  Each such
    <list> would be mapped through a global equal-hash-table to a cons
    cell, whose CDR would be the true location of the function associated
    with the function spec.  I believe that all of the operations required
    for function specs could be implemented with this setup.

	Does a function spec like this already exist?  If not, what would
    it take for me to make the system recognize function-specs of this
    form?
18-Apr-84 18:56:49-EST,642;000000000000
Received: from SCRC-TENEX by MIT-OZ via Chaosnet; 18 Apr 84 18:55-EST
Date: 18 Apr 1984 1219-EST
From: The Mailer Daemon <Mailer@SCRC-TENEX>
To: LISPM@MIT-OZ
Subject: Message of 16-Apr-84 23:47:05

Message undelivered after 1 day -- will try for another 2 days:
HES@SCRC-CUPID: Cannot connect to host.
Jim@SCRC-CUPID: Cannot connect to host.
            ------------
Received: from MIT-OZ by SCRC-TENEX with CHAOS; Mon 16-Apr-84 23:47:05-EST
Received: from MIT-ARTHUR by MIT-OZ via Chaosnet; 16 Apr 84 23:45-EST
Date: Monday, 16 April 1984, 23:43-EST
From: The Lisp Machine <LISPM at MIT-OZ>
To: BUG-LISPM at MIT-OZ

-------
19-Apr-84 23:06:01-EST,2739;000000000000
Received: from MIT-EECS by MIT-OZ via Chaosnet; 19 Apr 84 23:04-EST
Date: Thursday, 19 April 1984, 23:01-EST
From: SR.EHPYC at MIT-SPEECH
Sender: sr.ehpyc at MIT-SPEECH
Subject: The return of SPA|<DELETED>
To: BUG-LISPM at MIT-OZ

In Release 5.0 [Beta Test rev 7], mit, on Lisp Machine Four (LM-2):
This is really Yogi, but it doesn't know that yet.

It happened again.

>>Error: Object named SPA|<DELETED> cannot be updated in namespace MIT.
While in the function NETI:ADD-OR-CHANGE-OBJECT  NETI:DO-UNKNOWN-OBJECT-FIXUPS  NETI:QUERY-NAMESPACE-SERVER

NETI:ADD-OR-CHANGE-OBJECT:  (P.C. = 171)
   Arg 0 (CLASS-NAME): :HOST
   Arg 1 (NAME): #<NAME SPA|<DELETED> 31464303>
   Arg 2 (PROPERTY-LIST): NIL
   Local 0 (FLAVOR): NIL
   Local 1 (OBJECT): NIL
   Local 2 (CHANGED-P): NIL
   Local 3 (GLOBAL-OBJECT): NIL
   Local 4 (NAMES): NIL
   Local 5 (CLASS): #<CLASS HOST 2422163>
   Local 6 (TEST-NAME): NIL
   Local 7: NIL
   Local 8 (NEW-NAME): NIL
   Local 9 (INDICATOR): NIL
   Local 10 (THESE-NAMES): NIL
   Local 11: NIL
   Local 12: NIL
   Local 13 (NAME1): NIL
   Local 14: NIL
   Local 15: NIL
   Local 16: NIL
   Local 17 (FUNCTION): NIL
   Local 18 (NAME): NIL
   Local 19 (FOUND): NIL
   Local 20 (FOUND-NAME): NIL
   Local 21 (NS): NIL
   Local 22 (FIND): NIL
   Local 23 (NEW-OBJECT): NIL

NETI:DO-UNKNOWN-OBJECT-FIXUPS:  (P.C. = 162)
   Arg 0 (DECACHE-FIRST): T

NETI:QUERY-NAMESPACE-SERVER:  (P.C. = 664)
   Arg 0 (CLASS): :NAMESPACE
   Arg 1 (NAMESPACE): #<NAMESPACE SCRC 2735226>
   Rest arg (PROPERTY-LIST): (:NAME :SCRC)

NETI:GET-INCREMENTAL-UPDATE-FROM-NETWORK:  (P.C. = 532)
   Arg 0 (NAMESPACE): #<NAMESPACE SCRC 2735226>
   Arg 1 (STARTING-TIMESTAMP): 2575

(:METHOD NETI:NAMESPACE :GET-LATEST-TIMESTAMP):  (P.C. = 50)
   (SELF = #<NAMESPACE SCRC 2735226>)
   Arg 0 (OPERATION): :GET-LATEST-TIMESTAMP

(:METHOD NETI:NAMESPACE :VALIDATION-TIMESTAMP):  (P.C. = 66)
   (SELF = #<NAMESPACE SCRC 2735226>)
   Arg 0 (OPERATION): :VALIDATION-TIMESTAMP

(:METHOD NET:OBJECT :CHECK-VALIDITY):  (P.C. = 145)
   (SELF = #<CLASS USER 1640162>)
   Arg 0 (OPERATION): :CHECK-VALIDITY
   Arg 1 (RELATIVE-TO-NAMESPACE): #<NAMESPACE SCRC 2735226>

(:METHOD NET:OBJECT :CHECK-VALIDITY):  (P.C. = 117)
   (SELF = #<CLASS USER 1640162>)
   Arg 0 (OPERATION): :CHECK-VALIDITY
   Arg 1 (RELATIVE-TO-NAMESPACE): NIL

Rest of stack:
NETI:FIND-OBJECT-NAMED-IN-NAMESPACE:  (P.C. = 210)
NET:FIND-OBJECT-NAMED:  (P.C. = 136)
NETI:GET-INCREMENTAL-UPDATE-FROM-NETWORK:  (P.C. = 414)
(:METHOD NETI:NAMESPACE :GET-LATEST-TIMESTAMP):  (P.C. = 50)
NETI:INITIALIZE-NAMESPACES-AND-NETWORK:  (P.C. = 235)
LISP-REINITIALIZE:  (P.C. = 1247)
SI:LISP-TOP-LEVEL:  (P.C. = 30)
20-Apr-84 08:42:03-EST,396;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 20 Apr 84 08:41-EST
Date: Friday, 20 April 1984, 08:36-EST
From: David Vinayak Wallace <Gumby at MIT-MC>
To: BUG-LISPM at MIT-OZ

In Release 5.0 [Beta Test rev 7], on Lisp Machine Buddy Holly (3600):

Why can't I delete a tops-20 directory with dired even if
it's empty?  The FS ought to allow this (especially if my
wheel bit is enabled).
20-Apr-84 15:03:34-EST,3930;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 20 Apr 84 15:00-EST
Received: from MIT-APIARY-8 by MIT-OZ via Chaosnet; 20 Apr 84 14:59-EST
Date: Fri, 20 Apr 84 14:56 EST
From: Mark McEntee <McEntee%MIT-OZ@MIT-MC.ARPA>
Subject: problems with saving file
To: BUG-LISPM@MIT-MC.ARPA

In Release 5.0 [Beta Test rev 7], FEP 18, on Lisp Machine Apiary-8 (3600):

While trying to save out one of my files I got the following error.
This doesn't happen all the time; I haven't been able to see why it
happens only at certain times.  It doesn't depend on whether or not
the file is backed-up.

The file I was trying to save was tm.lisp.8.  If saving worked,
I should have gotten tm.lisp.9.  ZWEI wanted to save the file
back into tm.lisp.8 

>>Error: The file already exists.
         For AP6:>McEntee>tm.lisp.8
While in the function (:METHOD FS:HOST-UNIT :COMMAND)  FS:OPEN-CHAOS  (:METHOD FS:QFILE-ACCESS-PATH :OPEN)

(:METHOD FS:HOST-UNIT :COMMAND):  (P.C. = 231)
   Arg 0 (SELF): #<HOST-UNIT 3165052>
   Arg 1 (SELF-MAPPING-TABLE): FS:HOST-UNIT
   Arg 2 (OPERATION): :COMMAND
   Arg 3 (MARK-P): NIL
   Arg 4 (STREAM-OR-HANDLE): (:CREATE "O2282")
   Arg 5 (SIMPLE-P): NIL
   Arg 6 (WHOSTATE): "Open"
   Rest arg (COMMANDS): ("OPEN " :WRITE " " :CHARACTER "" "" "" "" "" "" ...)
   Local 8 (HANDLE): "O2282"
   Local 9 (STREAM): NIL
   Local 10 (PKT): #<Chaos Packet 55346760>
   Local 11 (SUCCESS): NIL
   Local 12 (STRING): "O2282 ERROR FAE F The file already exists."
   Local 13 (TRANSACTION-ID): "T2324"
   Local 14 (CREATE-P): T
   Local 15 (CONDITION): NIL

FS:OPEN-CHAOS:  (P.C. = 643)
   Arg 0 (ACCESS-PATH): #<LMFS-QFILE-ACCESS-PATH AP6 using QFILE 3165033>
   Arg 1 (REAL-PATHNAME): #<LMFS-PATHNAME "AP6:>McEntee>tm.lisp.8">
   Arg 2 (*COMMAND-PATHNAME*-initialization): #<LMFS-PATHNAME "AP6:>McEntee>tm.lisp.8">
   Arg 3 (OPTIONS): (:CHARACTERS T :DIRECTION :OUTPUT)

(:METHOD FS:QFILE-ACCESS-PATH :OPEN):  (P.C. = 7)
   Arg 0 (SELF): #<LMFS-QFILE-ACCESS-PATH AP6 using QFILE 3165033>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:QFILE-ACCESS-PATH -- 3. IV's, 0. FL's 104243512>
   Arg 2 (OPERATION): :OPEN
   Arg 3 (REAL-PATHNAME): #<LMFS-PATHNAME "AP6:>McEntee>tm.lisp.8">
   Arg 4 (PATHNAME): #<LMFS-PATHNAME "AP6:>McEntee>tm.lisp.8">
   Rest arg (OPTIONS): (:CHARACTERS T :DIRECTION :OUTPUT)

(:METHOD FS:ACTIVE-PATHNAME-MIXIN :OPEN):  (P.C. = 14)
   Arg 0 (SELF): #<LMFS-PATHNAME "AP6:>McEntee>tm.lisp.8">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:ACTIVE-PATHNAME-MIXIN -- 1. IV's, 0. FL's 104241201>
   Arg 2 (OPERATION): :OPEN
   Arg 3 (PATHNAME): #<LMFS-PATHNAME "AP6:>McEntee>tm.lisp.8">
   Rest arg (OPTIONS): (:CHARACTERS T :DIRECTION :OUTPUT)

FS:MACLISP-COMPATIBILITY-OPEN:  (P.C. = 362)
   Arg 0 (FILENAME): #<LMFS-PATHNAME "AP6:>McEntee>tm.lisp.8">
   Arg 1 (OPTIONS): (ZWEI:OUT)

OPEN:  (P.C. = 252)
   Arg 0 (PATHNAME): #<LMFS-PATHNAME "AP6:>McEntee>tm.lisp.8">
   Rest arg (KEYWORD-ARGS): ((ZWEI:OUT))

(:METHOD ZWEI:FILE-BUFFER-MIXIN :SAVE):  (P.C. = 44)
   Arg 0 (SELF): #<FILE-BUFFER "tm.lisp.8 >McEntee AP6:" 15472066>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:FILE-BUFFER-MIXIN -- 9. IV's, 0. FL's 105014742>
   Arg 2 (OPERATION): :SAVE

ZWEI:SAVE-BUFFER:  (P.C. = 203)
   Arg 0 (BUFFER): #<FILE-BUFFER "tm.lisp.8 >McEntee AP6:" 15472066>

Rest of stack:
ZWEI:COM-SAVE-FILE:  (P.C. = 14)  (from AP6:>actor>zwsave)
ZWEI:COM-SAVE-FILE:  (from AP6:>actor>zwsave)
ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
ZWEI:MAKE-EXTENDED-COMMAND-INTERNAL:  (P.C. = 77)
SYS:CALL-FUNNY-FUNCTION:  (P.C. = 101)
Closure of ZWEI:MAKE-EXTENDED-COMMAND-INTERNAL:
ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 200)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 41)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
20-Apr-84 15:26:09-EST,2290;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 20 Apr 84 15:23-EST
Received: from SCRC-CONCORD by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 19288; Fri 20-Apr-84 15:18:24-EST
Date: Fri, 20 Apr 84 15:17 EST
From: "Bernard S. Greenberg" <BSG%SCRC-TENEX@SCRC-RIVERSIDE.ARPA>
Subject: problems with saving file
To: McEntee%MIT-OZ@SCRC-RIVERSIDE.ARPA, BUG-LISPM@MIT-MC.ARPA
In-reply-to: The message of 20 Apr 84 14:56-EST from Mark McEntee <McEntee at MIT-OZ>

    Date: Fri, 20 Apr 84 14:56 EST
    From: Mark McEntee <McEntee%MIT-OZ@MIT-MC.ARPA>

    In Release 5.0 [Beta Test rev 7], FEP 18, on Lisp Machine Apiary-8 (3600):

    While trying to save out one of my files I got the following error.
    This doesn't happen all the time; I haven't been able to see why it
    happens only at certain times.  It doesn't depend on whether or not
    the file is backed-up.

    The file I was trying to save was tm.lisp.8.  If saving worked,
    I should have gotten tm.lisp.9.  ZWEI wanted to save the file
    back into tm.lisp.8 

    >>Error: The file already exists.
	     For AP6:>McEntee>tm.lisp.8
    While in the function (:METHOD FS:HOST-UNIT :COMMAND)  FS:OPEN-CHAOS  (:METHOD FS:QFILE-ACCESS-PATH :OPEN)

    (:METHOD FS:HOST-UNIT :COMMAND):  (P.C. = 231)

    FS:OPEN-CHAOS:  (P.C. = 643)

    (:METHOD FS:QFILE-ACCESS-PATH :OPEN):  (P.C. = 7)
       Arg 0 (SELF): #<LMFS-QFILE-ACCESS-PATH AP6 using QFILE 3165033>
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:QFILE-ACCESS-PATH -- 3. IV's, 0. FL's 104243512>
       Arg 2 (OPERATION): :OPEN
       Arg 3 (REAL-PATHNAME): #<LMFS-PATHNAME "AP6:>McEntee>tm.lisp.8">
    ....
    ZWEI:SAVE-BUFFER:  (P.C. = 203)
       Arg 0 (BUFFER): #<FILE-BUFFER "tm.lisp.8 >McEntee AP6:" 15472066>
According to this, you had a buffer into which you had explicitly read
tm.lisp.8.  That means that when you write it out, it must be
written to tm.lisp.8, not tm.lisp.newest.  Say the latter if you 
mean the latter.  Normally, one reads in "tm.lisp", and does not
specify version, and the buffer becomes associated with the pathname
"tm.lisp.newest", which is usually what you want.

If you try to save out to an explicit version of a file which
already exists, the defined action is to err.
20-Apr-84 21:47:51-EST,1090;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 20 Apr 84 21:47-EST
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 19433; Fri 20-Apr-84 19:49:01-EST
Date: Friday, 20 April 1984, 19:48-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: Tops-20 directory deletion
To: David Vinayak Wallace <Gumby at MIT-MC>, bug-file at MIT-OZ
Cc: BUG-LISPM at MIT-OZ
In-reply-to: The message of 20 Apr 84 08:36-EST from David Vinayak Wallace <Gumby at MIT-MC>

    Date: Friday, 20 April 1984, 08:36-EST
    From: David Vinayak Wallace <Gumby at MIT-MC>

    In Release 5.0 [Beta Test rev 7], on Lisp Machine Buddy Holly (3600):

    Why can't I delete a tops-20 directory with dired even if
    it's empty?  The FS ought to allow this (especially if my
    wheel bit is enabled).

This is a bug in Tops-20 (you have to use a different system call
to delete directories than to delete files).  If someone wants to
put a kludge into the Tops-20 file server to program around this
Tops-20 bug, that's fine, but it's not a Lisp machine problem.
21-Apr-84 20:09:40-EST,3153;000000000000
Received: from MIT-LISPM-4 by MIT-OZ via Chaosnet; 21 Apr 84 20:08-EST
Date: Saturday, 21 April 1984, 20:07-EST
From: Christopher Fry <cfry at MIT-OZ>
Subject: 1.\2. read as a symbol, not number
To: BUG-LISPM at MIT-OZ, cfry at MIT-OZ

In Release 5.0 [Beta Test rev 7], Experimental Useful 10.0,
Experimental TimeKit 12.0, Experimental Music 11.0,
Experimental Pitch 11.0, Experimental Enharm-Pitch 11.0,
Experimental Harmony 11.0, Experimental Staff 11.0,
Experimental Chroma 11.0, Experimental Play 9.0,
Experimental Linedit 7.0, Experimental Frets 8.0, Experimental FB 136.0,
Music 14 Apr - JRD, on Lisp Machine Four (LM-2):

Evaluating 1\2 => 1.\2.
Evaluating 1.\2. causes the following bug.


>>Trap: The variable 1.\2. is unbound.
While in the function SI:*EVAL  ZWEI:EVAL-PRINT  COMPILER:PROCESS-FORMS-FROM-STREAM

SI:*EVAL:  (P.C. = 155)
   Arg 0 (FORM): 1.\2.
   Local 0 (ARGNUM): 0.
   Local 1 (FCTN): NIL
   Local 2 (CFCTN): NIL
   Local 3 (ARGL): NIL
   Local 4 (MAX-ARGS): NIL
   Local 5 (N-ARGS): NIL
   Local 6 (ARG-DESC): NIL
   Local 7 (TEM): NIL
   Local 8 (COUNT): NIL
   Local 9 (QUOTE-STATUS): NIL
   Local 10 (REST-FLAG): NIL
   Local 11 (FEXPR-FLAG): NIL
   Local 12 (LAMBDA-LIST): NIL
   Local 13 (MACRO): NIL
   Local 14: NIL
   Local 15: NIL
   Local 16 (TEM1): NIL
   Local 17 (ARG-TYPE): NIL
   Local 18 (ITEM): NIL

ZWEI:EVAL-PRINT:  (P.C. = 37)
   Arg 0 (OBJECT): 1.\2.

COMPILER:PROCESS-FORMS-FROM-STREAM:  (P.C. = 173)
   Arg 0 (INPUT-STREAM): #<INTERVAL-STREAM -27137556>
   Arg 1 (PROCESS-FUNCTION): #<DTP-FEF-POINTER ZWEI:EVAL-PRINT 11406762>
   --Defaulted args:--
   Arg 2 (FOR-FILE): NIL
   Arg 3 (AREA-FOR-READING): NIL

ZWEI:COMPILE-INTERVAL:  (P.C. = 506)
   Arg 0 (COMPILE-P): NIL
   Arg 1 (*USE-TYPEOUT*): NIL
   Arg 2 (*REDO-DEFVARS-P*): NIL
   Arg 3 (BP1): ("1.\2." 0. :NORMAL)
   Arg 4 (BP2): ("1.\2." 5. :NORMAL)
   Arg 5 (IN-ORDER-P): T
   Arg 6 (SPECIAL-COMPILER-FUNCTION): NIL
   Arg 7 (*READ-THEN-PROCESS-FLAG*): NIL

ZWEI:COMPILE-PRINT-INTERVAL:  (P.C. = 117)
   Arg 0 (BP1): ("1.\2." 0. :NORMAL)
   Arg 1 (BP2): ("1.\2." 5. :NORMAL)
   Arg 2 (IN-ORDER-P): T
   Arg 3 (COMPILE-P): NIL
   Arg 4 (DEFINITION-NAME): "Region"
   Arg 5 (MODE-NAME): "Evaluating"
   Arg 6 (ECHO-NAME): "evaluated."
   Arg 7 (USE-TYPEOUT): :PROMPT
   Arg 8 (DEFVAR-HACK): NIL
   Arg 9 (SPECIAL-COMPILER-FUNCTION): NIL

ZWEI:COMPILE-DEFINITION-INTERNAL:  (P.C. = 136)
   Arg 0 (COMPILE-P): NIL
   Arg 1 (MODE-NAME): "Evaluating"
   Arg 2 (ECHO-NAME): "evaluated."
   Arg 3 (USE-TYPEOUT): :PROMPT
   --Defaulted args:--
   Arg 4 (DEFVAR-HACK): NIL
   Arg 5 (SPECIAL-COMPILER-FUNCTION): NIL

ZWEI:COM-EVALUATE-REGION:  (P.C. = 40)

ZWEI:COMMAND-EXECUTE:  (P.C. = 77)
   Arg 0 (COMMAND): ZWEI:COM-EVALUATE-REGION
   Arg 1 (CHAR): 357.
   Arg 2 (PREFIX-CHAR): NIL
   Arg 3 (HOOK-LIST): NIL

Rest of stack:
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 65)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 424)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 102)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 52)
SI:PROCESS-TOP-LEVEL:  (P.C. = 123)
21-Apr-84 22:03:07-EST,2879;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 21 Apr 84 22:02-EST
Date: Saturday, 21 April 1984, 21:54-EST
From: Scott Cyphers <sr.ehpyc at MIT-SPEECH>
Subject: What right does Symbolics Palo Alto have deleting objects without getting MIT authorization?
To: BUG-LISPM at MIT-OZ

In Release 5.0 [Beta Test rev 7], mit, on Lisp Machine Four (LM-2):

I'm getting this error all the time when I boot now.  I'm returning nil
from the function (and the next one that happens) and that seems to make
things work.

>>Error: Object named SPA|<DELETED> cannot be updated in namespace MIT.
While in the function NETI:ADD-OR-CHANGE-OBJECT  NETI:DO-UNKNOWN-OBJECT-FIXUPS  NETI:QUERY-NAMESPACE-SERVER

NETI:ADD-OR-CHANGE-OBJECT:  (P.C. = 171)
   Arg 0 (CLASS-NAME): :HOST
   Arg 1 (NAME): #<NAME SPA|<DELETED> 31464303>
   Arg 2 (PROPERTY-LIST): NIL
   Local 0 (FLAVOR): NIL
   Local 1 (OBJECT): NIL
   Local 2 (CHANGED-P): NIL
   Local 3 (GLOBAL-OBJECT): NIL
   Local 4 (NAMES): NIL
   Local 5 (CLASS): #<CLASS HOST 2422163>
   Local 6 (TEST-NAME): NIL
   Local 7: NIL
   Local 8 (NEW-NAME): NIL
   Local 9 (INDICATOR): NIL
   Local 10 (THESE-NAMES): NIL
   Local 11: NIL
   Local 12: NIL
   Local 13 (NAME1): NIL
   Local 14: NIL
   Local 15: NIL
   Local 16: NIL
   Local 17 (FUNCTION): NIL
   Local 18 (NAME): NIL
   Local 19 (FOUND): NIL
   Local 20 (FOUND-NAME): NIL
   Local 21 (NS): NIL
   Local 22 (FIND): NIL
   Local 23 (NEW-OBJECT): NIL

NETI:DO-UNKNOWN-OBJECT-FIXUPS:  (P.C. = 162)
   Arg 0 (DECACHE-FIRST): T

NETI:QUERY-NAMESPACE-SERVER:  (P.C. = 664)
   Arg 0 (CLASS): :NAMESPACE
   Arg 1 (NAMESPACE): #<NAMESPACE SCRC 2735226>
   Rest arg (PROPERTY-LIST): (:NAME :SCRC)

NETI:GET-INCREMENTAL-UPDATE-FROM-NETWORK:  (P.C. = 532)
   Arg 0 (NAMESPACE): #<NAMESPACE SCRC 2735226>
   Arg 1 (STARTING-TIMESTAMP): 2575

(:METHOD NETI:NAMESPACE :GET-LATEST-TIMESTAMP):  (P.C. = 50)
   (SELF = #<NAMESPACE SCRC 2735226>)
   Arg 0 (OPERATION): :GET-LATEST-TIMESTAMP

(:METHOD NETI:NAMESPACE :VALIDATION-TIMESTAMP):  (P.C. = 66)
   (SELF = #<NAMESPACE SCRC 2735226>)
   Arg 0 (OPERATION): :VALIDATION-TIMESTAMP

(:METHOD NET:OBJECT :CHECK-VALIDITY):  (P.C. = 145)
   (SELF = #<CLASS USER 1640162>)
   Arg 0 (OPERATION): :CHECK-VALIDITY
   Arg 1 (RELATIVE-TO-NAMESPACE): #<NAMESPACE SCRC 2735226>

(:METHOD NET:OBJECT :CHECK-VALIDITY):  (P.C. = 117)
   (SELF = #<CLASS USER 1640162>)
   Arg 0 (OPERATION): :CHECK-VALIDITY
   Arg 1 (RELATIVE-TO-NAMESPACE): NIL

Rest of stack:
NETI:FIND-OBJECT-NAMED-IN-NAMESPACE:  (P.C. = 210)
NET:FIND-OBJECT-NAMED:  (P.C. = 136)
NETI:GET-INCREMENTAL-UPDATE-FROM-NETWORK:  (P.C. = 414)
(:METHOD NETI:NAMESPACE :GET-LATEST-TIMESTAMP):  (P.C. = 50)
NETI:INITIALIZE-NAMESPACES-AND-NETWORK:  (P.C. = 235)
LISP-REINITIALIZE:  (P.C. = 1247)
SI:LISP-TOP-LEVEL:  (P.C. = 30)
22-Apr-84 20:37:38-EST,672;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 22 Apr 84 20:36-EST
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 19702; Sun 22-Apr-84 20:34:58-EST
Date: Sunday, 22 April 1984, 20:39-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: 1.\2. read as a symbol, not number
To: Christopher Fry <cfry at MIT-OZ>
Cc: BUG-LISPM at MIT-OZ, bug-beta-test at SCRC-YUKON
In-reply-to: The message of 21 Apr 84 20:07-EST from Christopher Fry <cfry at MIT-OZ>

    Date: Saturday, 21 April 1984, 20:07-EST
    From: Christopher Fry <cfry at MIT-OZ>

    Evaluating 1\2 => 1.\2.

This bug in the printer is fixed by Common Lisp.
22-Apr-84 22:34:59-EST,3887;000000000000
Received: from MIT-LISPM-6 by MIT-OZ via Chaosnet; 22 Apr 84 22:34-EST
Date: Sunday, 22 April 1984, 22:33-EST
From: Henry Minsky <HQM at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In System 98.17, CADR 3.4, ZMail 53.5, MIT-Specific 22.0, microcode 306,
ZM MIT, on Lisp Machine Six:


Insert your description of the circumstances here:

I was in DIRED, and did an E command on the subdir <hqm.thesis>, and
dired bombed out with the following:

>>ERROR: Invalid access requested for OZ:PS:<HQM>THESIS.DIRECTORY
Backtrace from the debugger:

FS:OPEN-CHAOS (P.C. = 1506)

 Arg 0 (HOST): #FS:TOPS20-CHAOS-HOST "MIT-OZ"
 Arg 1 (PATHNAME): #FS:TOPS20-PATHNAME "OZ:PS:<HQM>THESIS.DIRECTORY"
 Rest arg (OPTIONS): (:DIRECTION NIL)
Local 1 (DIRECTION): NIL
Local 2 (CHARACTERS): T
Local 3 (ERROR): T
Local 4 (ACCESS-ERROR): NIL
Local 5 (ELEMENT-TYPE): STRING-CHAR
Local 6 (IF-EXISTS): :NEW-VERSION
Local 7 (IF-DOES-NOT-EXIST): :ERROR
Local 8 (TEMPORARY): NIL
Local 9 (DELETED): NIL
Local 10 (RAW): NIL
Local 11 (SUPER-IMAGE): NIL
Local 12 (BYTE-SIZE): :DEFAULT
Local 13 (PRESERVE-DATES): NIL
Local 14 (INHIBIT-LINKS): NIL
Local 15 (ELEMENT-TYPE-P): NIL
Local 16 (HOST-UNIT): #<HOST-UNIT 3165353>
Local 17 (DATA-CONN): NIL
Local 18 (PKT): #<CHAOS Packet 16247546>
Local 19 (SUCCESS): NIL
Local 20 (STRING): " ERROR WKF F Invalid access requested"
Local 21 (NOT-ABORTED): T
Local 22 (PHONY-CHARACTERS): NIL
Local 23 (SIGN-EXTEND-BYTES): NIL
Local 24 (IF-EXISTS-P): NIL
Local 25 (ERROR-OBJECT): #<HOST-UNIT 3165353>
Local 26: ((FS:FILE-NOT-FOUND SI:CONDITION-CASE-THROW G2794) (FS:FILE-NOT-FOUND SI:CONDITION-CASE-THROW FS:G8688))
Local 27: (FS:FILE-NOT-FOUND SI:CONDITION-CASE-THROW G2794)
Local 28: (FS:FILE-ALREADY-EXISTS SI:CONDITION-CASE-THROW G2801)
Local 29: ((FS:FILE-ALREADY-EXISTS SI:CONDITION-CASE-THROW G2801) (FS:FILE-NOT-FOUND SI:CONDITION-CASE-THROW FS:G8688))
Local 30 (*SELECTQ-ITEM*): NIL
Local 31 (PROPERTIES): NIL
Local 32 (CLOSE-SUCCESS): NIL
Local 33 (ERROR-OBJECT): NIL
Local 34 (IGNORE): NIL


(:METHOD FS:CHAOS-PATHNAME :OPEN) (P.C. = 31)
  (SELF is #FS:TOPS20-PATHNAME "OZ:PS:<HQM>THESIS.DIRECTORY")

 Arg 0 (OPERATION): :OPEN
 Arg 1 (PATHNAME): #FS:TOPS20-PATHNAME "OZ:PS:<HQM>THESIS.DIRECTORY"
 Rest arg (OPTIONS): (:DIRECTION NIL)


OPEN (P.C. = 212)

 Arg 0 (FILENAME): #FS:TOPS20-PATHNAME "OZ:PS:<HQM>THESIS.DIRECTORY"
 Rest arg (KEYWORD-ARGS): (:DIRECTION NIL)
Local 1: ((FS:FILE-ERROR) SI:FILE-RETRY-HANDLER #FS:TOPS20-PATHNAME "OZ:PS:<HQM>THESIS.DIRECTORY")
Local 2: ((** SI:FILE-RETRY-HANDLER #FS:TOPS20-PATHNAME "OZ:PS:<HQM>THESIS.DIRECTORY") (FS:FILE-NOT-FOUND SI:CONDITION-CASE-THROW FS:G8688))
Local 3 (NEW-PATHNAME): NIL
Local 4 (KEYL): NIL
Local 5 (KEY): NIL
Local 6 (CHARACTERS): NIL
Local 7 (DIRECTION): NIL
Local 8 (BYTE-SIZE): NIL
Local 9 (ERROR-P): NIL
Local 10 (ERROR-P-SPECD): NIL
Local 11 (DELETED-P): NIL
Local 12 (TEMPORARY-P): NIL
Local 13 (RAW-P): NIL
Local 14 (SUPER-IMAGE-P): NIL


PROBEF (P.C. = 64)

 Arg 0 (FILE): #FS:TOPS20-PATHNAME "OZ:PS:<HQM>THESIS.DIRECTORY"
Local 0 (STREAM): NIL
Local 1: (FS:FILE-NOT-FOUND SI:CONDITION-CASE-THROW FS:G8688)
Local 2: ((FS:FILE-NOT-FOUND SI:CONDITION-CASE-THROW FS:G8688))
Local 3 (STREAM): NIL
Local 4 (*SELECTQ-ITEM*): NIL


ZWEI:NEED-TO-REVERT-BUFFER (P.C. = 50)

 Arg 0 (PATHNAME): #FS:TOPS20-PATHNAME "OZ:PS:<HQM>THESIS.DIRECTORY.1"


Remainder of stack:

ZWEI:COM-DIRED-EDIT-FILE (P.C. = 160)
ZWEI:COMMAND-EXECUTE (P.C. = 115)
ZWEI:PROCESS-COMMAND-CHAR (P.C. = 65)
(:METHOD ZWEI:WINDOW :EDIT) (P.C. = 464)
(:INTERNAL (:METHOD ZWEI:ZMACS-WINDOW :COMBINED :EDIT) 0) (P.C. = 74)
FUNCALL (P.C. = 25)
(:METHOD ZWEI:DISPLAYER :AROUND :EDIT) (P.C. = 31)
(:METHOD ZWEI:ZMACS-WINDOW :COMBINED :EDIT) (P.C. = 47)
ZWEI:ZMACS-WINDOW-TOP-LEVEL (P.C. = 46)
SI:PROCESS-TOP-LEVEL (P.C. = 152)
23-Apr-84 11:57:24-EST,584;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 23 Apr 84 11:56-EST
Date: Monday, 23 April 1984, 11:57-EST
From: Daniel Weise <DANIEL at MIT-MC>
Subject: history pane of window debugger won't remove items.
To: BUG-LISPM at MIT-OZ

In Release 5.0 [Beta Test rev 7], on Lisp Machine Buddy Holly (3600):

When I click middle while pointing to a line in the history pane for the
inspect/disassemble window of the window debugger all that happens is that
the item is sent to the lisp listener part of the window handler.  It should
be removed from the history instead.

Daniel
23-Apr-84 17:20:00-EST,1769;000000000000
Received: from MIT-LISPM-4 by MIT-OZ via Chaosnet; 23 Apr 84 17:13-EST
Date: Monday, 23 April 1984, 17:09-EST
From: Christopher Fry <cfry at MIT-OZ>
Subject: unix filename length
To: BUG-LISPM at MIT-OZ

In Release 5.0 [Beta Test rev 7], Experimental Useful 10.0,
Experimental TimeKit 12.0, Experimental Music 11.0,
Experimental Pitch 11.0, Experimental Enharm-Pitch 11.0,
Experimental Harmony 11.0, Experimental Staff 11.0,
Experimental Chroma 11.0, Experimental Play 9.0,
Experimental Linedit 7.0, Experimental Frets 8.0, Experimental FB 138.0,
Music 14 Apr - JRD, on Lisp Machine Four (LM-2):

When trying to save a buffer onto a unix machine, the the filename is
truncated to 14 characters. This is a restriction of Berkeley 4.1 unix that
does not exist in 4.2 unix. 

The namespace object for the host contains a field for
"SYSTEM-TYPE" [which is UNIX in this case], but there was no field for
SYSTEM-VERSION. Thus even if whatever program was doing the filename trunctation
was smart, it wouldn't have access to the version number in what I think of as
the logical place for it. 

I suppose each operating system supported by the lisp machine
could have stored with it a command to find out the version of the currently running
operating system. This has the advantage of not having to update the
namespace object for the host every time the operating system changes, but the
disadvantage that the next version of the operating system may have a different
syntax for finding out what the version is, or may return the
information in a different format.

For machines where the version of the operating system  changes daily
[ie lisp machines] a dynamic method of finding out operating system version is,
of course, a necessity.
23-Apr-84 18:29:08-EST,1358;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 23 Apr 84 18:17-EST
Received: from SCRC-THAMES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 20202; Mon 23-Apr-84 18:15:23-EST
Date: Monday, 23 April 1984, 18:22-EST
From: Scott McKay <SWM at SCRC-QUABBIN>
Subject: unix filename length
To: cfry at MIT-OZ, BUG-LISPM at MIT-OZ
In-reply-to: The message of 23 Apr 84 17:09-EST from Christopher Fry <cfry at MIT-OZ>

    Date: Monday, 23 April 1984, 17:09-EST
    From: Christopher Fry <cfry at MIT-OZ>

    When trying to save a buffer onto a Unix machine, the filename is
    truncated to 14 characters.  This is a restriction of Berkeley 4.1 Unix that 
    does not exist in 4.2 Unix. 

For what it's worth, there is a new system type called UNIX42 which does
the right things with long filenames.  But, of course, that is not in
any system but the ones here at SCRC.

    The namespace object for the host contains a field for
    "SYSTEM-TYPE" [which is Unix in this case], but there was no field for
    SYSTEM-VERSION.

I think that having SYSTEM-TYPE be PAIR GLOBAL-NAME SET TOKEN, where the
first token is construed as a system version would be better, but trying
to get PATHST to understand versions looks pretty gross (it currently
uses flavors for each and every system type, e.g., Unix, Unix42, VMS,
ITS, etc.).
23-Apr-84 18:33:53-EST,634;000000000000
Received: from MIT-XX by MIT-OZ via Chaosnet; 23 Apr 84 18:17-EST
Date: Monday, 23 April 1984, 18:10-EST
From: scott a douglass <sad at MIT-XX>
Subject: little bugs in word abbrevs
To: BUG-LISPM at MIT-OZ

In Release 5.0 [Beta Test rev 7], Grape MEF Version Two, on MEF Flame of the Forest (3600):

When you are in m-X Edit Word Abbrevs and you type [Help] L nothing happens
(no output appears) until you go to another buffer (by Ending or Aborting).
Also the Save Word Abbrev File command doesn't seem to get "activated" by
m-X Word Abbrev Mode (i.e. it is "Not available in the current context.").
thanks.
				--scott
23-Apr-84 18:59:07-EST,790;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 23 Apr 84 18:58-EST
Date: Monday, 23 April 1984, 18:51-EST
From:  <cel at MIT-MC>
Subject: Can't boot
To: BUG-LISPM at MIT-OZ

In Release 5.0 [Beta Test rev 7], FEP 13, on Lisp Machine Elvis Presley (3600):

This machine thinks it's Elvis Presley, but it is supposed to be MIT-PI.
Can't boot this machine and received the following error:

>>Error: Object named SPA|<DELETED> cannot be updated in namespace MIT.
While in the function NETI:ADD-OR-CHANGE-OBJECT  NETI:DO-UNKNOWN-OBJECT-FIXUPS  NETI:QUERY-NAMESPACE-SERVER

LISP-REINITIALIZE:  (P.C. = 435)
   Arg 0 (CALLED-BY-USER): NIL
   Local 1 (TURN-SERVERS-ON): NIL
   Local 2 (WARM-BOOTED-P): NIL
   Local 3 (.NO-HIGHER-CONTEXT-P.): T

SI:LISP-TOP-LEVEL:  (P.C. = 3)
24-Apr-84 09:55:19-EST,2788;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 24 Apr 84 09:54-EST
Date: Tuesday, 24 April 1984, 09:54-EST
From: Daniel Weise <DANIEL at MIT-MC>
Subject: logical versus physical hosts.
To: BUG-LISPM at MIT-OZ

In Release 5.0 [Beta Test rev 7], on Lisp Machine John Lennon (3600):

Can't logical host names override physical host names?  I tried to 
define a logical host named "go" but this is a nickname for PESHTIGO
and the following occured.

>>Error: The object #<LISPM-HOST PESHTIGO 50676726> received a :SET-HOST message, which went unclaimed.
         The rest of the message was (#<VMS-HOST PYGMALION 76234177>)
While in the function (:METHOD NET:OBJECT :UNCLAIMED-MESSAGE)  SI:FLAVOR-UNCLAIMED-MESSAGE  SI:INSTANCE-HASH-UNCLAIMED-MESSAGE

(:METHOD NET:OBJECT :UNCLAIMED-MESSAGE):  (P.C. = 31)
   Arg 0 (SELF): #<LISPM-HOST PESHTIGO 50676726>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NET:OBJECT -- 3. IV's, 1. FL's 104242623>
   Arg 2 (OPERATION): :UNCLAIMED-MESSAGE
   Arg 3 (MESSAGE): :SET-HOST
   Rest arg (ARGS): (#<VMS-HOST PYGMALION 76234177>)

SI:FLAVOR-UNCLAIMED-MESSAGE:  (P.C. = 20)
   Arg 0 (SELF): #<LISPM-HOST PESHTIGO 50676726>
   Arg 1 (IGNORE): NIL
   Rest arg (MESSAGE): (:SET-HOST #<VMS-HOST PYGMALION 76234177>)

SI:INSTANCE-HASH-UNCLAIMED-MESSAGE:  (P.C. = 35)
   Arg 0 (SELF): #<LISPM-HOST PESHTIGO 50676726>
   Arg 1 (SELF-MAPPING-TABLE): NIL
   Rest arg (MESSAGE): NIL

FS:SET-LOGICAL-PATHNAME-HOST:  (P.C. = 106)
   Arg 0 (LOGICAL-HOST): "go"
   Rest arg: (:PHYSICAL-HOST "pig" :TRANSLATIONS (("mts" "<go.mts>") ("go" "<go.source>")))

FS:ADD-LOGICAL-PATHNAME-HOST:  (P.C. = 10)
   Arg 0 (LOGICAL-HOST): "go"
   Arg 1 (PHYSICAL-HOST): "pig"
   Arg 2 (TRANSLATIONS): (("mts" "<go.mts>") ("go" "<go.source>"))

SI:*EVAL:  (P.C. = 370)
   Arg 0 (FORM): (FS:ADD-LOGICAL-PATHNAME-HOST "go" "pig" (QUOTE (("mts" "<go.mts>") ("go" "<go.source>"))))

ZWEI:EVAL-PRINT:  (P.C. = 3)
   Arg 0 (OBJECT): (FS:ADD-LOGICAL-PATHNAME-HOST "go" "pig" (QUOTE (("mts" "<go.mts>") ("go" "<go.source>"))))

COMPILER:PROCESS-FORMS-FROM-STREAM:  (P.C. = 117)
   Arg 0 (INPUT-STREAM): #<INTERVAL-STREAM 5570470>
   Arg 1 (PROCESS-FUNCTION): #<DTP-COMPILED-FUNCTION ZWEI:EVAL-PRINT 23153661>
   --Defaulted args:--
   Arg 2 (FOR-FILE): NIL
   Arg 3 (AREA-FOR-READING): NIL

Rest of stack:
ZWEI:COMPILE-INTERVAL:  (P.C. = 324)
ZWEI:COMPILE-PRINT-INTERVAL:  (P.C. = 76)
ZWEI:COMPILE-DEFINITION-INTERNAL:  (P.C. = 73)
ZWEI:COM-EVALUATE-REGION:  (P.C. = 7)
ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 200)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 41)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
24-Apr-84 10:58:14-EST,799;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 24 Apr 84 10:57-EST
Date: 24 Apr 1984  10:59 EST (Tue)
Message-ID: <SR.EHPYC.12010039878.BABYL@MIT-SPEECH>
From: Scott Cyphers <SR.EHPYC@MIT-SPEECH>
To:   bug-lispm@oz

Imagine a site with billions and billions (well, two or three) of the
same kind of printer.  What is the current philosophy in regard to
giving them names and using them?  To me it seems like the spooler
should have the option of choosing which printer to actually send the
request to, dependent upon things like which printers are busy, which
are broken, etc., with overrides possible to account for personal
tastes in regard to print quality.  Is this a common concern and being
thought about for the near future, or is this something special for my
application?
24-Apr-84 11:24:30-EST,879;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 24 Apr 84 11:23-EST
Date: Tuesday, 24 April 1984, 11:22-EST
From: Daniel Weise <DANIEL at MIT-MC>
Subject: &functional isn't
To: BUG-LISPM at MIT-OZ

In Release 5.0 [Beta Test rev 7], on Lisp Machine John Lennon (3600):

The following is a test case of &functional.  The functions were compiled
sequentially using C-SH-C.

;;; -*- Mode: LISP; Package: USER; Base: 10 -*-

(defun mapcar1 (&functional fcn &eval list)
  (when list
    (cons (funcall fcn (car list))
	  (mapcar1 fcn (cdr list)))))

(defun foo (list)
  (mapcar1 '(lambda (x) (1+ x)) list))


Unfortunately, (disassemble #'foo) gives

  0 ENTRY: 1 REQUIRED, 0 OPTIONAL
  1 PUSH-CONSTANT '(LAMBDA (X) (1+ X))
  2 PUSH-LOCAL FP|0             ;LIST
  3 CALL-2-RETURN #'MAPCAR1

which shows the &functional wasn't seen?  What gives?


Daniel
24-Apr-84 19:35:23-EST,1726;000000000000
Received: from MIT-LISPM-3 by MIT-OZ via Chaosnet; 24 Apr 84 19:34-EST
Date: Tuesday, 24 April 1984, 19:33-EST
From: William A. Drew <LAM.W at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In System 98.39, CADR 3.6, ZMail 53.13, MIT-Specific 22.0, microcode 306,
ZM MIT, on Lisp Machine Three:


Insert your description of the circumstances here:

possibly the fact that I was using the gc matters,although the bug persists
after I turnit off.  lam.w@oz

p.s. this does not happen on other machines, and previosly didnt happen on this one.

>>TRAP 24537 (PDL-OVERFLOW REGULAR)
The regular push-down list has overflown.
Backtrace from the debugger:

COMPLEXP (P.C. = 77775)

   --Missing args:--
 Arg 0 (X)


REALP (P.C. = 25)

 Arg 0 (X): 0


COMPLEX (P.C. = 121)

 Arg 0 (REALPART): 1
   --Defaulted args:--
 Arg 1 (IMAGPART): 0
Local 0 (OBJECT): NIL


SI:NUMERIC-TWO-ARGUMENTS (P.C. = 73)

 Arg 0 (CODE): 2
 Arg 1 (NUMBER1): 1
 Arg 2 (NUMBER2): 0+1i
Local 0 (FUNCTION): *TIMES


*TIMES:
   Arg 0 (NUM1): 1002004
   Arg 1 (NUM2): 73


Remainder of stack:

SI:NUMERIC-TWO-ARGUMENTS (P.C. = 74)
*TIMES
SI:NUMERIC-TWO-ARGUMENTS (P.C. = 74)
*TIMES
SI:NUMERIC-TWO-ARGUMENTS (P.C. = 74)
*TIMES
SI:NUMERIC-TWO-ARGUMENTS (P.C. = 74)
*TIMES
SI:NUMERIC-TWO-ARGUMENTS (P.C. = 74)
*TIMES
...
ZWEI:COMMAND-EXECUTE (P.C. = 115)
ZWEI:PROCESS-COMMAND-CHAR (P.C. = 65)
(:METHOD ZWEI:WINDOW :EDIT) (P.C. = 464)
(:INTERNAL (:METHOD ZWEI:ZMACS-WINDOW :COMBINED :EDIT) 0) (P.C. = 74)
FUNCALL (P.C. = 25)
(:METHOD ZWEI:DISPLAYER :AROUND :EDIT) (P.C. = 31)
(:METHOD ZWEI:ZMACS-WINDOW :COMBINED :EDIT) (P.C. = 47)
ZWEI:ZMACS-WINDOW-TOP-LEVEL (P.C. = 46)
SI:PROCESS-TOP-LEVEL (P.C. = 152)
24-Apr-84 19:38:04-EST,1274;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 24 Apr 84 19:35-EST
Received: from SCRC-CHICOPEE by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 20649; Tue 24-Apr-84 15:01:10-EST
Date: Tuesday, 24 April 1984, 15:00-EST
From: Daniel L. Weinreb <DLW at SCRC-TENEX>
Subject: printer choice
To: SR.EHPYC at MIT-SPEECH, bug-lispm at MIT-OZ
In-reply-to: <SR.EHPYC.12010039878.BABYL@MIT-SPEECH>

Our feeling right now is that in a site with several printers, it is
likely that the printers will usually be in different locations, or be
of different types.  Most users care about what device is used to do a
hardcopy, and care where the printer is located (i.e. you don't want to
have to run up two flights of stairs because the system decided to pick
that printer, if there's one right next to you).  If you had two printers
of the same type right next to each other, say because the traffic level
is so high that they're both kept busy most of the time, then you'd want
the system to treat those two printers as one "name" and automatically
figure out which one to use.  But I don't think this situation has come
up in practice or is likely to in the near future.  (If you use an LGP
that heavily, it'll need a full-time person to keep re-tuning it!)
24-Apr-84 19:40:30-EST,1419;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 24 Apr 84 19:39-EST
Received: from SCRC-CHICOPEE by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 20648; Tue 24-Apr-84 14:57:44-EST
Date: Tuesday, 24 April 1984, 14:57-EST
From: Daniel L. Weinreb <DLW at SCRC-TENEX>
Subject: &functional isn't
To: BUG-LISPM at MIT-OZ
Cc: bug-lmdoc at SCRC-TENEX, daniel at MIT-OZ
In-reply-to: The message of 24 Apr 84 11:22-EST from Daniel Weise <DANIEL at MIT-MC>

    Date: Tuesday, 24 April 1984, 11:22-EST
    From: Daniel Weise <DANIEL at MIT-MC>

    In Release 5.0 [Beta Test rev 7], on Lisp Machine John Lennon (3600):

    The following is a test case of &functional.  
    ...
    which shows the &functional wasn't seen?  What gives?

From the source of decode-&keyword-list in the 3600 compiler:

      (matchp var
      ...
	  ('&functional
	   ;; Ignore this for now.
	   (go nextloop))

The feature is documented in EVAL p.20 and is implemented on the LM-2,
but was never implemented for the 3600.  I belive that I left it out of
the compiler because it was one of those features that we never really
belived in.  (It's also not in the Common Lisp standard.)  We have to
decide whether we consider this an official feature (in which case we
should implement it) or not (in which case we should not document it).
It's not very hard to support but it's not a five-minute hack either.
24-Apr-84 19:51:14-EST,928;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 24 Apr 84 19:50-EST
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 20695; Tue 24-Apr-84 16:12:41-EST
Date: Tuesday, 24 April 1984, 16:12-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: logical versus physical hosts.
To: Daniel Weise <DANIEL at MIT-MC>
Cc: BUG-LISPM at MIT-OZ, bug-beta-test at SCRC-YUKON
In-reply-to: The message of 24 Apr 84 09:54-EST from Daniel Weise <DANIEL at MIT-MC>

    Date: Tuesday, 24 April 1984, 09:54-EST
    From: Daniel Weise <DANIEL at MIT-MC>

    In Release 5.0 [Beta Test rev 7], on Lisp Machine John Lennon (3600):

    Can't logical host names override physical host names?  I tried to 
    define a logical host named "go" but this is a nickname for PESHTIGO

This feature exists but unfortunately did not make it into Release 5.0.
It will be included in some future release.
25-Apr-84 12:33:41-EST,1661;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 25 Apr 84 12:31-EST
Date: Wednesday, 25 April 1984, 12:32-EST
From: Kent M Pitman <kmp at MIT-MC>
Subject: c-Abort during [Map Over/Move] in ZMail
To: BUG-LISPM at OZ

In ZMail in Release 4.5, Experimental Knowledge-Based-Editor 312.0,
site configuration 88, Black Magic, on PA Lisp Machine Merlin:

I clicked Right on Map Over and then Left on Move without realizing
it was going to move to KMP;KMP XMAIL (which isn't where I wanted).
So I hit c-Abort. ZMail continued in "Run" for a minute, then finally
died on something about the symbol NO-SELECT being of the wrong type
in some function call. I just c-Z'd out of the error handler and it
seemed more or less appeased. It didn't fully close the file (aren't
there UNWIND-PROTECTs that are supposed to do this?), so I did
FS:CLOSE-ALL-FILES. Then later I clicked Right on Save and
during its menu computation it died somewhere down in MSG-BUFFER-SAVE-P
on a buffer for KMP;KMP XMAIL which it erroneously had on its buffers
list (it hadn't been fully read, so shouldn't have been added to the
list). I managed to manually proceed this error by replying with NIL for
both return values to MSG-BUFFER-SAVE-P.

I'm sorry this report is a little vague. I was more concerned with
seeing everything run to completion than I was with saving error 
information.

I hope this is all fixed correctly in Release 5. I should know by
now not to even think of typing c-Abort in ZMail. Appropriate
locks and UNWIND-PROTECTs just don't seem to be where they need to
be to make this a safe operation.

Back to the safety and comfort of ZBabyl ...
25-Apr-84 12:36:30-EST,779;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 25 Apr 84 12:35-EST
Date: Wednesday, 25 April 1984, 12:35-EST
From: Kent M Pitman <kmp at MIT-MC>
Subject: **MORE** handling in ZMail typeout window
To: BUG-LISPM at OZ
Cc: CWH at SCRC

In ZMail in Release 4.5, Experimental Knowledge-Based-Editor 312.0,
site configuration 88, Black Magic, on PA Lisp Machine Merlin:

I was in the error handler in ZMail and got to the **MORE** line
at command level while stepping down the stack. I had typed ahead
a few c-N's and **MORE** ate one of them, became a **FLUSHED**,
and threw me back to command level. That wasn't nice.

Whatever kind of cute trick ZMail plays with --More-- handling 
for typeout should be disabled when the typeout window is in 
an interactive mode.
25-Apr-84 14:13:56-EST,768;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 25 Apr 84 14:12-EST
Date: 25 Apr 1984  14:13 EST (Wed)
Message-ID: <SR.EHPYC.12010337331.BABYL@MIT-SPEECH>
From: Scott Cyphers <SR.EHPYC@MIT-SPEECH>
To:   "Daniel L. Weinreb" <DLW@SCRC-TENEX>, mmcm@scrc-tenex
Cc:   bug-lispm@MIT-OZ
Subject: printer choice
In-reply-to: Msg of 24 Apr 1984 15:00-EST from Daniel L. Weinreb <DLW at SCRC-TENEX>

Thanks for the status of things.  I was thinking about having a
spooler for a pseudo printer, and the pseudo printer would pick a good
printer to do the printing on, which I think is how I'll do it now.
These are Versatecs, not LGPs.  I was quite impressed by how little
code (maybe three or four forms) I needed to modify to make the LGP
spooler do Versatecs.
25-Apr-84 21:11:17-EST,1193;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 25 Apr 84 21:07-EST
Received: from SCRC-YANGTZE by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 21657; Wed 25-Apr-84 21:04:59-EST
Date: Wednesday, 25 April 1984, 21:06-EST
From: Carl Hoffman <CWH at SCRC-STONY-BROOK>
Subject: **MORE** handling in ZMail typeout window
To: kmp at MIT-MC, BUG-LISPM at MIT-OZ
In-reply-to: The message of 25 Apr 84 12:35-EST from Kent M Pitman <kmp at MIT-MC>

    Date: Wednesday, 25 April 1984, 12:35-EST
    From: Kent M Pitman <kmp at MIT-MC>

    I was in the error handler in ZMail and got to the **MORE** line
    at command level while stepping down the stack. I had typed ahead
    a few c-N's and **MORE** ate one of them, became a **FLUSHED**,
    and threw me back to command level. That wasn't nice.

    Whatever kind of cute trick ZMail plays with --More-- handling 
    for typeout should be disabled when the typeout window is in 
    an interactive mode.

This is a well known problem, of course.  It has been second on my list of
medium-sized user-interface problems to fix, after notifications.  Now that
notifications are mostly done, I hope to move on to this.
26-Apr-84 14:34:28-EST,1792;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 26 Apr 84 14:01-EST
Date: Thursday, 26 April 1984, 14:01-EST
From: Kent M Pitman <kmp at MIT-MC>
Subject: (PRIN1 string) vs the ZWEI paren flashing hack
To: BUG-LISPM at MIT-MC
Cc: KMP at MIT-MC

In ZWEI in Symbolics Release 4.5 on Avatar (CADR):

See if you can figure out why, in the following text from a patch
dir, putting the cursor after the paren pointed to by the arrow at 
the end of clause 4 makes the first paren on line 2 blink. 

(EXPERIMENTAL 			  ; BLINKS PAREN AT START OF NEXT LINE
 ((0 "Knowledge-Based-Editor Loaded" "KBE")
  ...
  (2 "...text...
(not fully debugged yet)" "DICK")
  (3 "..." "DICK")
  (4 "...text...
...more text..." "kmp");<------------PUT YOUR CURSOR HERE
  (5 "..." "kmp")
  ))

The answer is, of course, that it is being faked out by the paren
in column 0 in clause 2. 

I don't believe there is just cause for it to do this.

I only barely believe there might be an excuse for it to flash 
the wrong thing if you were after the next to last paren in that
expression. I would rather it just complain that the paren has no
matching open than have it flash the wrong thing, though. Would
that be possible? What is the nature of the confusion.

One way or another, I wish this lossage would be corrected. It's
very baffling.

In case you're thinking it will last a long time, it might
be worth considering having strings with ('s in column 0 get 
PRIN1'd with a preceding slash as in:

(EXPERIMENTAL ( ... (2 "some ...
/(not fully debugged yet)" ...) ...))

Don't bother putting your cursor here to verify my claim without
also putting a / in column 0 in the example above. The extent of
the problem caused by that stray paren way back there is enormous.
-kmp
26-Apr-84 23:30:40-EST,3188;000000000000
Received: from MIT-LISPM-3 by MIT-OZ via Chaosnet; 26 Apr 84 23:25-EST
Date: Thursday, 26 April 1984, 23:24-EST
From: Robert L. Krawitz <ZZZ.RLK at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In Don't-dump-a-band! Inconsistent (unreleased patches loaded) System 98.48,
CADR 3.6, ZMail 53.17, MIT-Specific 22.0, microcode 309, ZM MIT,
on Lisp Machine Three:


Insert your description of the circumstances here:

I was earlier having problems -- namely that when I saved my babyl file
only about 4 msgs (the recent ones) were saving.  I then tried to delete
and undelete all msgs and resave, still no luck.  I attempted to move
all msgs to the same file (the one they came from, see below) and got
this error.  I have once before had trouble w/zmail munging my mail file
like that (deleting all but recent msgs) but I didn't realize it until
the next day.

>>ERROR: Attempt to parse a dead message.
Backtrace from the debugger:

ZWEI:ASSURE-MSG-PARSED (P.C. = 113)

 Arg 0 (MSG): #S(ZWEI:MSG :REAL-INTERVAL #<NODE 47107052> :INTERVAL ...)
Local 0 (PARSED-P): #<DTP-LOCATIVE 1642271>
Local 1 (STATUS): #<DTP-LOCATIVE 1642270>
Local 2 (DONE-P): NIL


ZWEI:MSG-DATE-SORT-LESSP (P.C. = 32)

 Arg 0 (MSG-1): #S(ZWEI:MSG :REAL-INTERVAL #<NODE 46761743> :INTERVAL ...)
 Arg 1 (MSG-2): #S(ZWEI:MSG :REAL-INTERVAL #<NODE 47107052> :INTERVAL ...)


(:METHOD ZWEI:ZMAIL-BUFFER :ADD-ZMAIL-BUFFER) (P.C. = 144)
  (SELF is #<BABYL-MAIL-FILE-BUFFER "ZZZ/.RLK.BABYL PS:<ZZZ.RLK> OZ:" 21462611>)

 Arg 0 (OPERATION): :ADD-ZMAIL-BUFFER
 Arg 1 (ZMAIL-BUFFER): #<BABYL-MAIL-FILE-BUFFER "ZZZ/.RLK.BABYL PS:<ZZZ.RLK> OZ:" 21462611>
Local 0 (NARRAY): #<ART-Q-101 47115163>
Local 1 (NLENGTH): 101
Local 2 (PREDICATE): ZWEI:MSG-DATE-SORT-LESSP
Local 3 (APPEND-P): T
Local 4 (PLIST): #<DTP-LOCATIVE 21462626>
Local 5 (NNARRAY): #<ART-Q-101 47115163>
Local 6 (OLD-IDX): 101
Local 7 (LENGTH): 201
Local 8 (NEW-IDX): 100
Local 9 (NMSG): #S(ZWEI:MSG :REAL-INTERVAL #<NODE 46761743> :INTERVAL ...)


(:METHOD ZWEI:BABYL-MAIL-FILE-BUFFER :COMBINED :ADD-ZMAIL-BUFFER) (P.C. = 70)
  (SELF is #<BABYL-MAIL-FILE-BUFFER "ZZZ/.RLK.BABYL PS:<ZZZ.RLK> OZ:" 21462611>)

 Rest arg (.DAEMON-CALLER-ARGS.): (:ADD-ZMAIL-BUFFER #<BABYL-MAIL-FILE-BUFFER "ZZZ/.RLK.BABYL PS:<ZZZ.RLK> OZ:" 21462611>)
Local 1 (.DAEMON-MAPPING-TABLE.): #<ART-16B-5 30660112>
Local 2: #<DTP-LOCATIVE 21462630>
Local 3: T


ZWEI:COM-ZMAIL-MOVE-ALL-TO-FILE (P.C. = 73)

Local 0 (BUFFER): #<BABYL-MAIL-FILE-BUFFER "ZZZ/.RLK.BABYL PS:<ZZZ.RLK> OZ:" 21462611>


Remainder of stack:

ZWEI:COM-ZMAIL-MAP (P.C. = 74)
ZWEI:COMMAND-EXECUTE (P.C. = 115)
ZWEI:ZMAIL-COMMAND-EXECUTE (P.C. = 27)
(:SELECT-METHOD ZWEI:ZMAIL-COMMAND-LIST :MENU) (P.C. = 32)
(:METHOD ZWEI:ZMAIL-FRAME :PROCESS-SPECIAL-COMMAND) (P.C. = 25)
(:METHOD ZWEI:ZMAIL-COMMAND-LOOP-MIXIN :COMMAND-LOOP) (P.C. = 252)
(:INTERNAL (:METHOD ZWEI:ZMAIL-FRAME :COMBINED :COMMAND-LOOP) 0) (P.C. = 44)
FUNCALL (P.C. = 25)
(:METHOD ZWEI:ZMAIL-COMMAND-LOOP-MIXIN :AROUND :COMMAND-LOOP) (P.C. = 57)
(:METHOD ZWEI:ZMAIL-FRAME :COMBINED :COMMAND-LOOP) (P.C. = 43)
ZWEI:ZMAIL-PROCESS-TOP-LEVEL (P.C. = 115)
SI:PROCESS-TOP-LEVEL (P.C. = 152)
27-Apr-84 13:31:55-EST,512;000000000000
Received: from MIT-BUDDY by MIT-OZ via Chaosnet; 27 Apr 84 13:31-EST
Date: Friday, 27 April 1984, 13:30-EST
From: David Chapman <Zvona at MIT-OZ>
Subject: confusing interaction of TRACE, BREAKON, and debugger
To: BUG-LISPM at MIT-OZ

In Release 5.0 [Beta Test rev 7], on Lisp Machine Buddy Holly (3600):

(defun foo () 2)
FOO

(trace foo)
(FOO)

(breakon 'foo)
FOO

(foo)
1 Enter FOO
>> Error: Break on entry to function FOO


#:FOO (encapsulated for BREAKON)
...

The #: is confusing.
27-Apr-84 16:10:42-EST,594;000000000000
Received: from MIT-AVATAR by MIT-OZ via Chaosnet; 27 Apr 84 16:09-EST
Date: Friday, 27 April 1984, 16:10-EST
From: Charles Rich <RICH at MIT-OZ>
Subject: Comma not inside Backquote
To: bug-lispm at MIT-OZ

If you get this error break inside of a compilation, it does
not tell you what function you are inside of!  There also
did not seem to be any easy way to use the debugger to find
out this information -- it should just say what function. 

Also, this suggests, that a Zwei function to find such
occurrences (analogous to Find Unbalanced Parens) would
be useful.

			-Chuck
27-Apr-84 17:52:44-EST,1129;000000000000
Received: from MIT-LISPM-1 by MIT-OZ via Chaosnet; 27 Apr 84 17:52-EST
Date: Friday, 27 April 1984, 17:51-EST
From: Robert P. Krajewski <RpK at MIT-OZ>
Subject: 98.47 cannot be loaded as of 5pm, 4/27/84
To: Mly at MIT-OZ
CC: Bug-LispM-MIT at MIT-OZ
Message-ID: <[MIT-LISPM-1].4/27/84 17:51:22.RpK>

On this machine, starting out with ucode 309 and System 98.43, it
started printing out warnings that said

	The form (CHECK-TYPE SI:LEADER-LIST LIST) which appeared at this
	point was not compiled due to an during macro-expansion

or something to that effect.  I tried c-m-Break after **MORE** break to
get into the error handler, but the warnings just kept on coming.
Finally, the machine died, and even warm booting wouldn't work.

I think the error is recursive in nature, and has something to do with
the fact that the patch was compiled in an environment in which the
patch was not already evaluated.

People who load unreleased patches should not answer `P' to any
unreleased patches before this or `Y' to this one.  Mly, could you send
a note to Bug-LispM-MIT when it works to load it ?

``Bob''
27-Apr-84 18:57:18-EST,496;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 27 Apr 84 18:56-EST
Date: Friday, 27 April 1984, 18:56-EST
From: CMB at MIT-MC
Sender: asm at MIT-MC
Subject: Window Debugger buglet
To: BUG-LISPM at MIT-OZ
Fonts: CPTFONT, CPTFONTB

In Release 5.0 [Beta Test rev 7], FEP 18, on PI Project (3600):

When I do a set arg, the display for the changed argument in the args
pane is updated, but the display in the stach history window is 1not
0updated.  Typing Function Refresh will fix it.
27-Apr-84 20:28:21-EST,748;000000000000
Received: from MIT-LENNON by MIT-OZ via Chaosnet; 27 Apr 84 20:27-EST
Date: Friday, 27 April 1984, 20:26-EST
From:  <GAK at MIT-OZ>
Subject: Broken defsystem
To: BUG-LISPM at MIT-OZ

In Release 5.0 [Beta Test rev 7], on Lisp Machine John Lennon (3600):

This sounds like a weird use of defsystem:

I wanted to load a bunch of text files quickly using Tag Search
on a non-existent tag. I defined a system named thesis with a 
pathname default of

"oz:ps:<gak.thesis.text>foo.tex"

When I do a Tag Search, it automatically assumes that the system
is created out of .LISP files. It ignores the .tex in the pathname.
So it creates new .LISP files, when I want it to look at the existing
.tex files.

Is this just broken, or what?
27-Apr-84 20:45:21-EST,1662;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 27 Apr 84 20:44-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 23176; Fri 27-Apr-84 20:41:56-EST
Date: Friday, 27 April 1984, 20:44-EST
From: David C. Plummer <DCP at SCRC-TENEX>
Subject: Broken defsystem
To: GAK at MIT-OZ, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 27 Apr 84 20:26-EST from GAK at MIT-OZ

    Date: Friday, 27 April 1984, 20:26-EST
    From:  <GAK at MIT-OZ>

    In Release 5.0 [Beta Test rev 7], on Lisp Machine John Lennon (3600):

    This sounds like a weird use of defsystem:

    I wanted to load a bunch of text files quickly using Tag Search
    on a non-existent tag. I defined a system named thesis with a 
    pathname default of

    "oz:ps:<gak.thesis.text>foo.tex"

    When I do a Tag Search, it automatically assumes that the system
    is created out of .LISP files. It ignores the .tex in the pathname.
    So it creates new .LISP files, when I want it to look at the existing
    .tex files.

    Is this just broken, or what?

Try

    ;; inform DEFSYSTEM what a Tex file looks like
    (si:define-simple-transformation :tex-files ignore
      ignore ("TEX") () ("Ignore" "Ignoring" "ignored") nil nil)

    ;; define a system of TeX files
    (defsystem thesis
      (:pathname-default "oz:ps:<gak.thesis.text>")
      (:module tex-files ("foo" "bar"))
      (:skip :tex-files tex-files))

    ;; inform si:system-source-files that "TEX" files are source files.
    (push "TEX" si:*source-file-types*)

If you really wanted to do it right, you should define a :TEX canonical
type.
27-Apr-84 23:32:34-EST,1886;000000000000
Received: from MIT-AVATAR by MIT-OZ via Chaosnet; 27 Apr 84 23:32-EST
Date: Friday, 27 April 1984, 23:33-EST
From: Apprentice for KMP <KBE at MIT-OZ>
Subject: c-R in debugger, multiple return values
To: BUG-LISPM at MIT-OZ

In Symbolics Release 4.5 on Avatar (CADR):

When typing c-R to the debugger, I got a message saying the caller
wanted 2 values. It prompted me for those values. I typed a form
but the form returned two values. It discarded the second, offering
to return the first for value 0. It would be nice if it noticed the
extra values and asked me if I wanted to use them all (especially
for the Value 0 position, since it is likely I am evaluated an
alternate call to the same function and that it will also return
2 values (as was the case here), or perhaps the first N values).
I could imagine it saying:

 Value 0: (FOO-BAR-BAZ)
 That call returned 3 values. 
 Use FOO as value 0? (Y or N) Yes.
 Use BAR as value 1? (Y or N) Yes.
 Use BAZ as value 2? (Y or N) Yes.
 Value 3: 

or perhaps:

 Value 0: (FOO-BAR-BAZ)
 That call returned 3 values.
 Use FOO as value 0? (Y or N) Yes.
 Use BAR as value 1? (Y or N) No.
 Use BAR as value 1? (Y or N) Yes.
 Value 2: 

Perhaps also in the special case that just the right number of
values are returned, you could say

 Value 0: (FOO-BAR-BAZ)
 That call returned 3 values, which is what the caller wanted.
 Return FOO, BAR, and BAZ? (Y or N) No.
 Use FOO as value 0? (Y or N) Yes.

Another possibility would be to hack defaulting. Eg,

 Value 0: (FOO-BAR-BAZ)
 Value is FOO, ok? (Y or N) Yes.
 Value 1 (or Return for default): [Return]
 Value is BAR, ok? Yes.
 Value 2 (or Return for default): [Return]
 Value is BAZ, ok? Yes.

Presentation of the default is tricky in this style, but the 
input mode feels a little better.

Anyway, I find the current behavior inadequate.
28-Apr-84 07:14:42-EST,364;000000000000
Received: from MIT-LISPM-31 by MIT-OZ via Chaosnet; 28 Apr 84 07:14-EST
Date: Saturday, 28 April 1984, 07:13-EST
From: Richard Mlynarik <Mly at MIT-OZ>
Subject: Commies from Mars repelled.
To: Bug-LispM-MIT at MIT-OZ
In-reply-to: <[MIT-LISPM-1].4/27/84 17:51:22.RpK>
Message-ID: <[MIT-LISPM-31].28-Apr-84 07:13:28.Mly>

98.47 now loads sans brain-damage.
29-Apr-84 15:41:17-EDT,532;000000000000
Received: from MIT-XX by MIT-OZ via Chaosnet; 29 Apr 84 15:40-EDT
Date: Sunday, 29 April 1984, 15:38-EDT
From: scott a douglass <sad at MIT-XX>
Subject: Zmacs scribe mode bug
To: BUG-LISPM at MIT-OZ

In Release 5.0 [Beta Test rev 7], Rel 5.7 MEF Version IV, on MEF Flame of the Forest (3600):

In Zmacs, in Scribe mode, when you have nested sets of the same delimiter
i.e. @+{@i{superscrpit italics}} (which is legal in scribe) the wrong "{"
flashes when the cursor is just after the second "}".  thanks...
					--scott
29-Apr-84 21:26:34-EDT,1190;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 29 Apr 84 21:01-EDT
Received: from SCRC-EUPHRATES by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 48999; Sun 29-Apr-84 20:00:08-EST
Date: Sunday, 29 April 1984, 21:00-EDT
From: David A. Moon <Moon at SCRC-TENEX>
Subject: Comma not inside Backquote
To: Charles Rich <RICH at MIT-OZ>
Cc: bug-lispm at MIT-OZ
In-reply-to: The message of 27 Apr 84 16:10-EST from Charles Rich <RICH at MIT-OZ>

    Date: Friday, 27 April 1984, 16:10-EST
    From: Charles Rich <RICH at MIT-OZ>

    If you get this error break inside of a compilation, it does
    not tell you what function you are inside of!  There also
    did not seem to be any easy way to use the debugger to find
    out this information -- it should just say what function. 

Since this is a read-time error, you are not inside of any function.
The compiler hasn't read the function yet.  I agree that it would be
nicer to have some context.

    Also, this suggests, that a Zwei function to find such
    occurrences (analogous to Find Unbalanced Parens) would
    be useful.

Thanks for the suggestions.  I'll add both of these to a things-to-do
file I have.
29-Apr-84 23:29:11-EDT,4243;000000000000
Received: from MIT-LISPM-5 by MIT-OZ via Chaosnet; 29 Apr 84 23:27-EDT
Date: Sunday, 29 April 1984, 23:26-EDT
From: Robert L. Krawitz <ZZZ.RLK at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In System 98.40, CADR 3.6, ZMail 53.17, MIT-Specific 22.0, microcode 309,
ZM MIT, on Lisp Machine Five:


Insert your description of the circumstances here:

I was trying to ftp this file from SAIL and it didn't work.  One colon
and it thought sail or su-ai was a device on oz.

>>ERROR: Device occurs twice in su-ai::69to77.met[1,rem]
Backtrace from the debugger:

FS:PATHNAME-ERROR (P.C. = 40)

 Arg 0 (INDEX): 7
 Arg 1 (FORMAT-STRING): "Device occurs twice in ~A"
 Rest arg (ARGS): ("su-ai::69to77.met[1,rem]")


Additional information supplied with call:
 Expecting 6 values

(:METHOD FS:TENEX-FAMILY-PATHNAME-MIXIN :PARSE-NAMESTRING) (P.C. = 334)
  (SELF is #FS:TOPS20-PATHNAME "OZ:")

 Arg 0 (OPERATION): :PARSE-NAMESTRING
 Arg 1 (HOST-SPECIFIED-P): NIL
 Arg 2 (NAMESTRING): "su-ai::69to77.met[1,rem]"
 Arg 3 (START): 0
 Arg 4 (END): 30
Local 0 (DIR-DELIM-ALIST): ((74 . 76))
Local 1 (ALL-DELIMS): (74 72 56 73 ...)
Local 2 (IDX): 7
Local 3 (TEM): ""
Local 4 (TEM1): NIL
Local 5 (DELIM): 72
Local 6 (DIR-DELIM): NIL
Local 7 (DEV): "SU-AI"
Local 8 (DIR): NIL
Local 9 (NAM): NIL
Local 10 (TYP): NIL
Local 11 (VER): NIL
Local 12 (DEV-SPECIFIED-P): 5
Local 13 (NAM-SPECIFIED-P): NIL
Local 14 (TYP-SPECIFIED-P): NIL
Local 15 (VER-SPECIFIED-P): NIL


FS:PARSE-PATHNAME (P.C. = 447)

 Arg 0 (THING): "su-ai::69to77.met[1,rem]"
 Arg 1 (WITH-RESPECT-TO): NIL
 Arg 2 (DEFAULTS): ((#FS:TOPS20-CHAOS-HOST "MIT-OZ" . #FS:TOPS20-PATHNAME "OZ:PS:<ZZZ.RLK>*.*.*") (#FS:ITS-CHAOS-HOST "MIT-MC" . #FS:ITS-PATHNAME "MC: RMS; REP LETTER") (#FS:LOGICAL-HOST "SYS" . #FS:LOGICAL-PATHNAME "SYS: UCADR; UC-FCTNS LISP >") (NIL . #FS:TOPS20-PATHNAME "OZ:PS:<ZZZ.RLK>*.*.*"))
   --Defaulted args:--
 Arg 3 (START): 0
 Arg 4 (END): NIL
 Arg 5 (JUNK-ALLOWED): NIL
Local 0 (DEVICE): NIL
Local 1 (DIRECTORY): NIL
Local 2 (NAME): NIL
Local 3 (TYPE): NIL
Local 4 (VERSION): NIL
Local 5 (HOST): #FS:TOPS20-CHAOS-HOST "MIT-OZ"
Local 6: NIL
Local 7 (HOST-SPECIFIED): NIL
Local 8 (START): 0
Local 9 (END): NIL
Local 10 (PARSE-END): NIL
Local 11 (INDEX-OR-PATHNAME): NIL


FS:MERGE-PATHNAME-DEFAULTS (P.C. = 144)

 Arg 0 (PATHNAME): "su-ai::69to77.met[1,rem]"
 Arg 1 (DEFAULTS): ((#FS:TOPS20-CHAOS-HOST "MIT-OZ" . #FS:TOPS20-PATHNAME "OZ:PS:<ZZZ.RLK>*.*.*") (#FS:ITS-CHAOS-HOST "MIT-MC" . #FS:ITS-PATHNAME "MC: RMS; REP LETTER") (#FS:LOGICAL-HOST "SYS" . #FS:LOGICAL-PATHNAME "SYS: UCADR; UC-FCTNS LISP >") (NIL . #FS:TOPS20-PATHNAME "OZ:PS:<ZZZ.RLK>*.*.*"))
 Arg 2 (DEFAULT-TYPE): :LISP
 Arg 3 (DEFAULT-VERSION): :NEWEST
   --Defaulted args:--
 Arg 4 (ALWAYS-MERGE-TYPE): NIL
Local 0 (HOST): NIL
Local 1 (DEFAULT): NIL
Local 2 (SECONDARY-DEFAULT): NIL
Local 3 (NEW-DEVICE): NIL
Local 4 (NEW-DIRECTORY): NIL
Local 5 (NEW-NAME): NIL
Local 6 (NEW-TYPE): NIL
Local 7 (NEW-VERSION): NIL
Local 8 (NEW-OTYPE): NIL
Local 9 (WDIR): NIL
Local 10 (PDIR): NIL
Local 11 (DDIR): NIL


FS:MERGE-AND-SET-PATHNAME-DEFAULTS (P.C. = 51)

 Arg 0 (PATHNAME): "su-ai::69to77.met[1,rem]"
 Arg 1 (DEFAULTS): ((#FS:TOPS20-CHAOS-HOST "MIT-OZ" . #FS:TOPS20-PATHNAME "OZ:PS:<ZZZ.RLK>*.*.*") (#FS:ITS-CHAOS-HOST "MIT-MC" . #FS:ITS-PATHNAME "MC: RMS; REP LETTER") (#FS:LOGICAL-HOST "SYS" . #FS:LOGICAL-PATHNAME "SYS: UCADR; UC-FCTNS LISP >") (NIL . #FS:TOPS20-PATHNAME "OZ:PS:<ZZZ.RLK>*.*.*"))
 Arg 2 (DEFAULT-TYPE): :LISP
 Arg 3 (DEFAULT-VERSION): :NEWEST


Remainder of stack:

ZWEI:MAKE-DEFAULTED-PATHNAME (P.C. = 102)
ZWEI:READ-DEFAULTED-PATHNAME (P.C. = 71)
ZWEI:COM-FIND-FILE (P.C. = 44)
ZWEI:COMMAND-EXECUTE (P.C. = 115)
ZWEI:MAKE-EXTENDED-COMMAND-INTERNAL (P.C. = 72)
ZWEI:COMMAND-EXECUTE (P.C. = 115)
ZWEI:PROCESS-COMMAND-CHAR (P.C. = 65)
(:METHOD ZWEI:WINDOW :EDIT) (P.C. = 464)
(:INTERNAL (:METHOD ZWEI:ZMACS-WINDOW :COMBINED :EDIT) 0) (P.C. = 74)
FUNCALL (P.C. = 25)
(:METHOD ZWEI:DISPLAYER :AROUND :EDIT) (P.C. = 31)
(:METHOD ZWEI:ZMACS-WINDOW :COMBINED :EDIT) (P.C. = 47)
ZWEI:ZMACS-WINDOW-TOP-LEVEL (P.C. = 46)
PROCESS-TOP-LEVEL (P.C. = 152)
30-Apr-84 00:03:36-EDT,3434;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 30 Apr 84 00:01-EDT
Date: Sunday, 29 April 1984, 23:59-EDT
From: Robert L. Krawitz <ZZZ.RLK at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In System 98.40, CADR 3.6, ZMail 53.17, MIT-Specific 22.0, microcode 309,
ZM MIT, on Lisp Machine Five:


Insert your description of the circumstances here:

After I sent the last bug report:

Typed end.

Upon return, the message window was blank (no message visible)

I typed n 12 times.  The pointer advanced, but no display.

I typed zj.  The message window briefly displayed

0,,answered,recent

and then this bug popped up.

>>TRAP 10700 (ARGTYP ARRAY M-A NIL GAHDR)
Some argument to AR-1, NIL, was of the wrong type.
The function expected an array.
Backtrace from the debugger:

(:METHOD ZWEI:WINDOW :REDISPLAY) (P.C. = 1207)
  (SELF is #<ZMAIL-WINDOW Zmail Window 1 2207217 exposed>)

 Arg 0 (OPERATION): :REDISPLAY
 Arg 1 (RECENTER-TYPE): :POINT
 Arg 2 (RC1): NIL
 Arg 3 (RC2): NIL
 Arg 4 (FORCE-TO-COMPLETION-P): NIL
Local 0 (LH): 16
Local 1 (NOW): 163676
Local 2 (POINT-PLINE): NIL
Local 3 (POINT-LINE): "0, answered,, **,"
Local 4 (POINT-INDEX): 0
Local 5 (TOP-LINE): "0, answered,, **,"
Local 6 (TOP-INDEX): 0
Local 7 (LAST-BP): ("" 0 :MOVES)
Local 8 (INITIAL-DEGREE): 5
Local 9 (POINT-NODE): NIL
Local 10 (START-BP-NODE): NIL
Local 11 (BUF): NIL
Local 12 (NEW-TOP-INDEX): NIL
Local 13 (Y): NIL
Local 14 (LINE): NIL
Local 15 (INDEX): NIL
Local 16 (P): NIL
Local 17 (LINE-LENGTH): NIL
Local 18 (LEN): NIL
Local 19 (DWID): NIL
Local 20 (CH): NIL
Local 21 (FONT): NIL
Local 22 (CWT): NIL
Local 23 (CWID): NIL
Local 24 (RWID): NIL
Local 25 (I): 22
Local 26 (TW): 210
Local 27 (L): NIL
Local 28 (FROM-INDEX): 0
Local 29 (TO-INDEX): 21
Local 30 (PLINE): 1
Local 31 (STOP-LINE): ""
Local 32 (FROB): NIL
Local 33 (PLINE): NIL
Local 34: NIL
Local 35 (BL): NIL


ZWEI:REDISPLAY (P.C. = 70)

 Arg 0 (WINDOW): #<ZMAIL-WINDOW Zmail Window 1 2207217 exposed>
   --Defaulted args:--
 Arg 1 (RECENTER-TYPE): :POINT
 Arg 2 (RC1): NIL
 Arg 3 (RC2): NIL
 Arg 4 (FORCE-TO-COMPLETION-P): NIL


ZWEI:REDISPLAY-ALL-WINDOWS (P.C. = 75)

   --Defaulted args:--
 Arg 0 (FORCE-TO-COMPLETION-P): NIL
 Arg 1 (SELECT-P): T
Local 0: (#<ZMAIL-WINDOW Zmail Window 1 2207217 exposed>)
Local 1 (WINDOW): #<ZMAIL-WINDOW Zmail Window 1 2207217 exposed>


(:METHOD ZWEI:ZMAIL-COMMAND-LOOP-MIXIN-WITH-SUMMARY :REDISPLAY) (P.C. = 33)
  (SELF is #<ZMAIL-FRAME Main ZMail window 2200604 exposed>)

 Arg 0 (OPERATION): :REDISPLAY
Local 0 (REDISPLAY-SUPPRESSED): NIL


(:METHOD ZWEI:ZMAIL-COMMAND-LOOP-MIXIN :COMMAND-LOOP) (P.C. = 213)
  (SELF is #<ZMAIL-FRAME Main ZMail window 2200604 exposed>)

 Arg 0 (OPERATION): :COMMAND-LOOP
Local 0: ("Return to ZMAIL command loop.")
Local 1: ((SYSTEM:ABORT ERROR) ("Return to ZMAIL command loop.") T ("Return to ZMAIL command loop.") ...)
Local 2 (RESPONSE): (ZWEI:BACKGROUND ZWEI:NEW-MAIL "New mail in ~A at ~D:~2,'0D" #FS:TOPS20-PATHNAME "OZ:PS:<ZZZ.RLK>MAIL.TXT.1" ...)
Local 3 (DEGREE): 5


Remainder of stack:

(:INTERNAL (:METHOD ZWEI:ZMAIL-FRAME :COMBINED :COMMAND-LOOP) 0) (P.C. = 44)
FUNCALL (P.C. = 25)
(:METHOD ZWEI:ZMAIL-COMMAND-LOOP-MIXIN :AROUND :COMMAND-LOOP) (P.C. = 57)
(:METHOD ZWEI:ZMAIL-FRAME :COMBINED :COMMAND-LOOP) (P.C. = 43)
ZWEI:ZMAIL-PROCESS-TOP-LEVEL (P.C. = 115)
SI:PROCESS-TOP-LEVEL (P.C. = 152)
30-Apr-84 00:05:20-EDT,3298;000000000000
Received: from MIT-LISPM-5 by MIT-OZ via Chaosnet; 30 Apr 84 00:02-EDT
Date: Monday, 30 April 1984, 00:01-EDT
From: Robert L. Krawitz <ZZZ.RLK at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In System 98.40, CADR 3.6, ZMail 53.17, MIT-Specific 22.0, microcode 309,
ZM MIT, on Lisp Machine Five:


Insert your description of the circumstances here:

After finishing the previous BR, I typed abort to the debugger.  The
minibuffer said abort is not a defined key, and barfed this in my face.

>>TRAP 10700 (ARGTYP ARRAY M-A NIL GAHDR)
Some argument to AR-1, NIL, was of the wrong type.
The function expected an array.
Backtrace from the debugger:

(:METHOD ZWEI:WINDOW :REDISPLAY) (P.C. = 1207)
  (SELF is #<ZMAIL-WINDOW Zmail Window 1 2207217 exposed>)

 Arg 0 (OPERATION): :REDISPLAY
 Arg 1 (RECENTER-TYPE): :POINT
 Arg 2 (RC1): NIL
 Arg 3 (RC2): NIL
 Arg 4 (FORCE-TO-COMPLETION-P): NIL
Local 0 (LH): 16
Local 1 (NOW): 165400
Local 2 (POINT-PLINE): NIL
Local 3 (POINT-LINE): "0, answered,, **,"
Local 4 (POINT-INDEX): 0
Local 5 (TOP-LINE): "0, answered,, **,"
Local 6 (TOP-INDEX): 0
Local 7 (LAST-BP): ("" 0 :MOVES)
Local 8 (INITIAL-DEGREE): 4
Local 9 (POINT-NODE): NIL
Local 10 (START-BP-NODE): NIL
Local 11 (BUF): NIL
Local 12 (NEW-TOP-INDEX): NIL
Local 13 (Y): NIL
Local 14 (LINE): NIL
Local 15 (INDEX): NIL
Local 16 (P): NIL
Local 17 (LINE-LENGTH): NIL
Local 18 (LEN): NIL
Local 19 (DWID): NIL
Local 20 (CH): NIL
Local 21 (FONT): NIL
Local 22 (CWT): NIL
Local 23 (CWID): NIL
Local 24 (RWID): NIL
Local 25 (I): 22
Local 26 (TW): 210
Local 27 (L): NIL
Local 28 (FROM-INDEX): 0
Local 29 (TO-INDEX): 21
Local 30 (PLINE): 1
Local 31 (STOP-LINE): ""
Local 32 (FROB): NIL
Local 33 (PLINE): NIL
Local 34: NIL
Local 35 (BL): NIL


ZWEI:REDISPLAY (P.C. = 70)

 Arg 0 (WINDOW): #<ZMAIL-WINDOW Zmail Window 1 2207217 exposed>
   --Defaulted args:--
 Arg 1 (RECENTER-TYPE): :POINT
 Arg 2 (RC1): NIL
 Arg 3 (RC2): NIL
 Arg 4 (FORCE-TO-COMPLETION-P): NIL


ZWEI:REDISPLAY-ALL-WINDOWS (P.C. = 75)

   --Defaulted args:--
 Arg 0 (FORCE-TO-COMPLETION-P): NIL
 Arg 1 (SELECT-P): T
Local 0: (#<ZMAIL-WINDOW Zmail Window 1 2207217 exposed>)
Local 1 (WINDOW): #<ZMAIL-WINDOW Zmail Window 1 2207217 exposed>


(:METHOD ZWEI:ZMAIL-COMMAND-LOOP-MIXIN-WITH-SUMMARY :REDISPLAY) (P.C. = 33)
  (SELF is #<ZMAIL-FRAME Main ZMail window 2200604 exposed>)

 Arg 0 (OPERATION): :REDISPLAY
Local 0 (REDISPLAY-SUPPRESSED): NIL


(:METHOD ZWEI:ZMAIL-COMMAND-LOOP-MIXIN :COMMAND-LOOP) (P.C. = 213)
  (SELF is #<ZMAIL-FRAME Main ZMail window 2200604 exposed>)

 Arg 0 (OPERATION): :COMMAND-LOOP
Local 0: ("Return to ZMAIL command loop.")
Local 1: ((SYSTEM:ABORT ERROR) ("Return to ZMAIL command loop.") T ("Return to ZMAIL command loop.") ...)
Local 2 (RESPONSE): (ZWEI:BACKGROUND ZWEI:NEW-MAIL "New mail in ~A at ~D:~2,'0D" #FS:TOPS20-PATHNAME "OZ:PS:<ZZZ.RLK>MAIL.TXT.1" ...)
Local 3 (DEGREE): 5


Remainder of stack:

(:INTERNAL (:METHOD ZWEI:ZMAIL-FRAME :COMBINED :COMMAND-LOOP) 0) (P.C. = 44)
FUNCALL (P.C. = 25)
(:METHOD ZWEI:ZMAIL-COMMAND-LOOP-MIXIN :AROUND :COMMAND-LOOP) (P.C. = 57)
(:METHOD ZWEI:ZMAIL-FRAME :COMBINED :COMMAND-LOOP) (P.C. = 43)
ZWEI:ZMAIL-PROCESS-TOP-LEVEL (P.C. = 115)
SI:PROCESS-TOP-LEVEL (P.C. = 152)
30-Apr-84 00:17:29-EDT,916;000000000000
Received: from MIT-LISPM-4 by MIT-OZ via Chaosnet; 30 Apr 84 00:16-EDT
Date: Sunday, 29 April 1984, 23:18-EDT
From: Christopher Fry <cfry at MIT-OZ>
Subject: symeval-in-instance
To: BUG-LISPM at MIT-OZ

In Release 5.0 [Beta Test rev 7], Experimental Useful 10.0,
Experimental TimeKit 12.0, Experimental Music 11.0,
Experimental Pitch 11.0, Experimental Enharm-Pitch 11.0,
Experimental Harmony 11.0, Experimental Staff 11.0,
Experimental Chroma 11.0, Experimental Play 9.0,
Experimental Linedit 7.0, Experimental Frets 8.0, Music 14 Apr - JRD, 
on Lisp Machine Four (LM-2):

Within the context of:

(defflavor flav-1 (iv1)
	   ()
  :settable-instance-variables)
(setq inst (make-instance 'flav-1 :iv1 3))


(symeval-in-instance inst 'iv1) ;works as documented

(symeval-in-instance inst 10.) ;causes RUN light to stick on, c-m-abort fails to
	;get out of the wedge, necessitating warm boot.
30-Apr-84 00:18:45-EDT,627;000000000000
Received: from MIT-LISPM-5 by MIT-OZ via Chaosnet; 30 Apr 84 00:17-EDT
Date: Monday, 30 April 1984, 00:16-EDT
From:  <zzz.rlk at MIT-OZ>
Sender:  at MIT-OZ
To: BUG-LISPM at MIT-OZ

In Don't-dump-a-band! Inconsistent (unreleased patches loaded) System 98.46,
CADR 3.6, ZMail 53.13, MIT-Specific 22.0, microcode 309, ZM MIT,
on Lisp Machine Five:


Insert your description of the circumstances here:

I was in load-patches.  When 98.47 was loading, during the load the lm
printed warning -- defsel.qfasl compiled using different fersion of
macro selectq and the loading stopped and returned to the lisp listener.
30-Apr-84 01:06:25-EDT,1120;000000000000
Received: from MIT-LISPM-3 by MIT-OZ via Chaosnet; 30 Apr 84 01:04-EDT
Date: Monday, 30 April 1984, 01:03-EDT
From: Robert P. Krajewski <RpK at MIT-OZ>
Subject: Can't from from SAIL
To: ZZZ.RLK at MIT-OZ
CC: BUG-LISPM at MIT-OZ
In-reply-to: The message of 29 Apr 1984 23:26-EDT from Robert L. Krawitz <ZZZ.RLK at MIT-OZ>
Message-ID: <[MIT-LISPM-3].4/30/84 01:03:31.RpK>

Since (currently) Lisp Machines cannot directly access files that live
on Internet hosts, you couldn't get to SU-AI anyway.  And the Lisp
Machine can't parse WAITS pathnames, either.

Symbolics, I have been informed, has taught the Lisp Machine about
Internet FTP, and it's sufficient for your very simple purpose.
The MIT system will soon know about it, too.  However the losses of this
protocol (one stream per host, no directory listing, no attribute
frobbing/getting, etc.) won't allow you to do much more than that.

Hold on for a while, and you'll be able to do what you wanted to.

Hold on until some people think up something (as winning as CFTP) for
TCP/IP, and you'll have the whole net as a filesystem !

``Bob''
30-Apr-84 08:35:58-EDT,1056;000000000000
Received: from SCRC-RIVERSIDE by MIT-OZ via Chaosnet; 30 Apr 84 08:35-EDT
Received: from SCRC-PEACE by SCRC-RIVERSIDE via CHAOS with CHAOS-MAIL id 11233; Mon 30-Apr-84 08:35:07-EDT
Date: Monday, 30 April 1984, 08:34-EDT
From: Charles Hornig <Hornig at SCRC-STONY-BROOK>
Subject: The return of SPA|<DELETED>
To: SR.EHPYC at MIT-SPEECH, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 19 Apr 84 23:01-EST from SR.EHPYC at MIT-SPEECH
Message-ID: <840430083439.4.Hornig@STONY-BROOK.SCRC.Symbolics>

    Date: Thursday, 19 April 1984, 23:01-EST
    From: SR.EHPYC at MIT-SPEECH

    In Release 5.0 [Beta Test rev 7], mit, on Lisp Machine Four (LM-2):
    This is really Yogi, but it doesn't know that yet.

    It happened again.

    >>Error: Object named SPA|<DELETED> cannot be updated in namespace MIT.
    While in the function NETI:ADD-OR-CHANGE-OBJECT  NETI:DO-UNKNOWN-OBJECT-FIXUPS  NETI:QUERY-NAMESPACE-SERVER

Has this happened at all this week?  We made some improvements in our
secondary servers which should help with this.
30-Apr-84 08:44:01-EDT,1065;000000000000
Received: from SCRC-RIVERSIDE by MIT-OZ via Chaosnet; 30 Apr 84 08:43-EDT
Received: from SCRC-PEACE by SCRC-RIVERSIDE via CHAOS with CHAOS-MAIL id 11236; Mon 30-Apr-84 08:43:22-EDT
Date: Monday, 30 April 1984, 08:42-EDT
From: Charles Hornig <Hornig at SCRC-STONY-BROOK>
Subject: Can't boot
To: cel at MIT-MC, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 23 Apr 84 18:51-EST from cel at MIT-MC
Message-ID: <840430084255.7.Hornig@STONY-BROOK.SCRC.Symbolics>

    Date: Monday, 23 April 1984, 18:51-EST
    From:  <cel at MIT-MC>

    In Release 5.0 [Beta Test rev 7], FEP 13, on Lisp Machine Elvis Presley (3600):

    This machine thinks it's Elvis Presley, but it is supposed to be MIT-PI.
    Can't boot this machine and received the following error:

    >>Error: Object named SPA|<DELETED> cannot be updated in namespace MIT.
    While in the function NETI:ADD-OR-CHANGE-OBJECT  NETI:DO-UNKNOWN-OBJECT-FIXUPS  NETI:QUERY-NAMESPACE-SERVER

Does this still happen?  We have made some secondary namespace server
changes that should help.
30-Apr-84 09:10:55-EDT,999;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 30 Apr 84 09:10-EDT
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 24261; Mon 30-Apr-84 09:07:22-EDT
Date: Monday, 30 April 1984, 09:09-EDT
From: David C. Plummer <DCP at SCRC-TENEX>
Subject: Can't from from SAIL
To: Robert P. Krajewski <RpK at MIT-OZ>, ZZZ.RLK at MIT-OZ
cc: BUG-LISPM at MIT-OZ
In-Reply-To: <[MIT-LISPM-3].4/30/84 01:03:31.RpK>

    Date: Monday, 30 April 1984, 01:03-EDT
    From: Robert P. Krajewski <RpK at MIT-OZ>

    However the losses of this [TCP-FTP]
    protocol (one stream per host, 
That's not true; just open more than one set of connections.
    no directory listing, 
Wrong again.
    no attribute frobbing/getting
This one is half true.  Some hosts gratuitously give you an ascii
version of some directory attributes, such as creation date, which a
smart FTP can parse, and therefore make-system will win.  Unix doesn't
believe in gratuity.
    etc.
??
30-Apr-84 09:45:10-EDT,987;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 30 Apr 84 09:44-EDT
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 24280; Mon 30-Apr-84 09:41:52-EDT
Date: Monday, 30 April 1984, 09:44-EDT
From: David C. Plummer <DCP at SCRC-TENEX>
Subject: symeval-in-instance
To: Christopher Fry <cfry at MIT-OZ>, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 29 Apr 84 23:18-EDT from Christopher Fry <cfry at MIT-OZ>

    Date: Sunday, 29 April 1984, 23:18-EDT
    From: Christopher Fry <cfry at MIT-OZ>

    In Release 5.0 [Beta Test rev 7]
    on Lisp Machine Four (LM-2):

    (symeval-in-instance inst 10.) ;causes RUN light to stick on, c-m-abort fails to
	    ;get out of the wedge, necessitating warm boot.
Improved in the source to check the type of its second argument more
fully.  The LM-2 was probably trying to do a (%FIND-STRUCTURE-HEADER
10.) which is implemented in microcode.  You probably could have
c-m-Abort'ed on a 3600.
30-Apr-84 23:20:52-EDT,1807;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 30 Apr 84 23:15-EDT
Date: Monday, 30 April 1984, 23:16-EDT
From: Henry Minsky <HQM at MIT-MC>
Subject: dpress bug
To: BUG-LISPM at MIT-OZ

In Release 5.0 [Beta Test rev 7], on Lisp Machine Buddy Holly (3600):

I ran DPRESS on OZ on the file <hqm.thesis>root.press.12
and it died when trying to display it. It miught have been OZ's
fault, its been flakey tonite...

>>Error: The symbol NIL has an invalid function definition
While in the function NIL  (:METHOD TELNET:SUPDUP-STATE-BLOCK :SUPDUP-GRAPHICS)  (:METHOD TELNET:SUPDUP-FILTER :FILTER)

NIL:
   Arg 0: :SUPDUP-GRAPHICS
   Arg 1: #<HANGUP-FILTER 3662157>

(:METHOD TELNET:SUPDUP-STATE-BLOCK :SUPDUP-GRAPHICS):  (P.C. = 5)
   Arg 0 (SELF): #<SUPDUP-STATE-BLOCK 3662170>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TELNET:SUPDUP-STATE-BLOCK -- 3. IV's, 0. FL's 105001244>
   Arg 2 (OPERATION): :SUPDUP-GRAPHICS
   Arg 3 (INPUT-STREAM): #<HANGUP-FILTER 3662157>

(:METHOD TELNET:SUPDUP-FILTER :FILTER):  (P.C. = 27)
   Arg 0 (SELF): #<SUPDUP-FILTER 3662163>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TELNET:SUPDUP-FILTER -- 3. IV's, 0. FL's 104776715>
   Arg 2 (OPERATION): :FILTER
   Arg 3 (CH): 231

(:METHOD TELNET:FILTER-STREAM :TYI-NO-HANG):  (P.C. = 15)
   Arg 0 (SELF): #<SUPDUP-FILTER 3662163>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TELNET:FILTER-STREAM -- 3. IV's, 0. FL's 104776707>
   Arg 2 (OPERATION): :TYI-NO-HANG

(:METHOD TELNET:NVT-WINDOW :TYPEOUT-TOP-LEVEL):  (P.C. = 37)
   Arg 0 (SELF): #<NVT-WINDOW Terminal 1 1000000 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TELNET:NVT-WINDOW -- 18. IV's, 10. FL's 104534330>
   Arg 2 (OPERATION): :TYPEOUT-TOP-LEVEL

SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
   Arg 0 (IGNORE): NIL
 1-May-84 17:09:29-EDT,640;000000000000
Received: from MIT-AVATAR by MIT-OZ via Chaosnet; 1 May 84 17:04-EDT
Date: Tuesday, 1 May 1984, 17:07-EDT
From: Charles Rich <RICH at MIT-OZ>
Subject: DEL-IF
To: BUG-LISPM at MIT-OZ

In Release 4.5, Experimental Knowledge-Based-Editor 320.0,
Reasoning Utility Package 3.0, site configuration 88, Black Magic, on PA Lisp Machine Avatar:

The function DEL-IF and it's relations should handle their functional
arguments like Mapcar, i.e. they should either be macros
or with special &Function args.  Otherwise I have to declare Y
special in

	(DEFUN FOO (Y]
           ...
	   (DEL-IF #'(LAMBDA (X) ...Y..) ...) does )

-CR
 1-May-84 17:25:12-EDT,3806;000000000000
Received: from MIT-ARTHUR by MIT-OZ via Chaosnet; 1 May 84 17:04-EDT
Date: Tuesday, 1 May 1984, 17:05-EDT
From: Robert L. Krawitz <ZZZ.RLK at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In Don't-dump-a-band! Inconsistent (unreleased patches loaded) System 98.48,
CADR 3.6, ZMail 53.17, MIT-Specific 22.0, microcode 309, ZM MIT,
on Arthur Dent:


Insert your description of the circumstances here:

I selected (a new file, but it's in my init file)
<zzz.rlk.bitnet>bitnet.arc, and typed g.  After reading the babyl file
in, it started to read the mail file.  It read the only message, but
continued to display in the mode line that only 97% had been read.  I
typed space, and got this.  Abortt brought it back.

I've had problems with reading in mail files, under similar
circumstances.  The mail is read one message at a time, and I have to
type n to get the read to continue (as opposed to reading it all at
once).  I have never had this error before.

>>TRAP 10700 (ARGTYP ARRAY M-A NIL GAHDR)
Some argument to AR-1, NIL, was of the wrong type.
The function expected an array.
Backtrace from the debugger:

(:METHOD ZWEI:WINDOW :REDISPLAY) (P.C. = 1207)
  (SELF is #<ZMAIL-WINDOW Zmail Window 1 3211342 exposed>)

 Arg 0 (OPERATION): :REDISPLAY
 Arg 1 (RECENTER-TYPE): :POINT
 Arg 2 (RC1): NIL
 Arg 3 (RC2): NIL
 Arg 4 (FORCE-TO-COMPLETION-P): NIL
Local 0 (LH): 16
Local 1 (NOW): 73155
Local 2 (POINT-PLINE): NIL
Local 3 (POINT-LINE): ""
Local 4 (POINT-INDEX): 0
Local 5 (TOP-LINE): ""
Local 6 (TOP-INDEX): 0
Local 7 (LAST-BP): (" 1-May-84 01:58:11-EDT,666;000000000000" 0 :MOVES)
Local 8 (INITIAL-DEGREE): 4
Local 9 (POINT-NODE): NIL
Local 10 (START-BP-NODE): NIL
Local 11 (BUF): NIL
Local 12 (NEW-TOP-INDEX): NIL
Local 13 (Y): NIL
Local 14 (LINE): NIL
Local 15 (INDEX): NIL
Local 16 (P): NIL
Local 17 (LINE-LENGTH): NIL
Local 18 (LEN): NIL
Local 19 (DWID): NIL
Local 20 (CH): NIL
Local 21 (FONT): NIL
Local 22 (CWT): NIL
Local 23 (CWID): NIL
Local 24 (RWID): NIL
Local 25 (I): 1
Local 26 (TW): 0
Local 27 (L): NIL
Local 28 (FROM-INDEX): 0
Local 29 (TO-INDEX): 0
Local 30 (PLINE): 1
Local 31 (STOP-LINE): " 1-May-84 01:58:11-EDT,666;000000000000"
Local 32 (FROB): NIL
Local 33 (PLINE): NIL
Local 34: NIL
Local 35 (BL): NIL


ZWEI:REDISPLAY (P.C. = 70)

 Arg 0 (WINDOW): #<ZMAIL-WINDOW Zmail Window 1 3211342 exposed>
   --Defaulted args:--
 Arg 1 (RECENTER-TYPE): :POINT
 Arg 2 (RC1): NIL
 Arg 3 (RC2): NIL
 Arg 4 (FORCE-TO-COMPLETION-P): NIL


ZWEI:REDISPLAY-ALL-WINDOWS (P.C. = 75)

   --Defaulted args:--
 Arg 0 (FORCE-TO-COMPLETION-P): NIL
 Arg 1 (SELECT-P): T
Local 0: (#<ZMAIL-WINDOW Zmail Window 1 3211342 exposed>)
Local 1 (WINDOW): #<ZMAIL-WINDOW Zmail Window 1 3211342 exposed>


(:METHOD ZWEI:ZMAIL-COMMAND-LOOP-MIXIN-WITH-SUMMARY :REDISPLAY) (P.C. = 33)
  (SELF is #<ZMAIL-FRAME Main ZMail window 3201327 exposed>)

 Arg 0 (OPERATION): :REDISPLAY
Local 0 (REDISPLAY-SUPPRESSED): NIL


(:METHOD ZWEI:ZMAIL-COMMAND-LOOP-MIXIN :COMMAND-LOOP) (P.C. = 213)
  (SELF is #<ZMAIL-FRAME Main ZMail window 3201327 exposed>)

 Arg 0 (OPERATION): :COMMAND-LOOP
Local 0: ("Return to ZMAIL command loop.")
Local 1: ((SYSTEM:ABORT ERROR) ("Return to ZMAIL command loop.") T ("Return to ZMAIL command loop.") ...)
Local 2 (RESPONSE): (ZWEI:BACKGROUND ZWEI:MSGS-LOADED #<TENEX-INBOX-BUFFER "OZ:PS:<ZZZ.RLK.BITNET>MAIL-ARCHIVES.TXT" 35323213> 1 ...)
Local 3 (DEGREE): 0


Remainder of stack:

(:INTERNAL (:METHOD ZWEI:ZMAIL-FRAME :COMBINED :COMMAND-LOOP) 0) (P.C. = 44)
FUNCALL (P.C. = 25)
(:METHOD ZWEI:ZMAIL-COMMAND-LOOP-MIXIN :AROUND :COMMAND-LOOP) (P.C. = 57)
(:METHOD ZWEI:ZMAIL-FRAME :COMBINED :COMMAND-LOOP) (P.C. = 43)
ZWEI:ZMAIL-PROCESS-TOP-LEVEL (P.C. = 115)
SI:PROCESS-TOP-LEVEL (P.C. = 152)
 1-May-84 21:33:46-EDT,867;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 1 May 84 21:33-EDT
Received: from SCRC-MERRIMACK by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 25871; Tue 1-May-84 21:29:59-EDT
Date: Tuesday, 1 May 1984, 21:29-EDT
From: Mike McMahon <MMcM at SCRC-TENEX>
Subject: Window Debugger buglet
To: CMB at MIT-MC
cc: BUG-LISPM at MIT-OZ
In-Reply-To: The message of 27 Apr 84 18:56-EST from CMB at MIT-MC
Fonts: CPTFONT, CPTFONTB
Message-ID: <840501212915.3.MMcM@TENEX.SCRC.Symbolics>

    Date: Friday, 27 April 1984, 18:56-EST
    From: CMB at MIT-MC

    In Release 5.0 [Beta Test rev 7], FEP 18, on PI Project (3600):

    When I do a set arg, the display for the changed argument in the args
    pane is updated, but the display in the stach history window is 1not
0    updated.  Typing Function Refresh will fix it.

Fixed in the source.
 2-May-84 11:05:07-EDT,774;000000000000
Mail-From: RICH created at  2-May-84 10:50:04
Date: 2 May 1984  10:50 EDT (Wed)
Message-ID: <RICH.12012124397.BABYL@MIT-OZ>
From: Charles Rich <RICH@MIT-OZ>
To:   bug-lispm@MIT-OZ
Subject: ZWEI (Rel 4.5)

I had a heck of a time trying to redefine M-C-L in Zwei, and
finally gave up.  The code I used is given below, which is
the same as works with resetting all my other keys.  The
effect was always to leave the key with it old definition in
place (as verified with M-? M-C-L).  I suspect that the new
definition is going someplace else.  Might this have
something to do with the fact that C-L has a special
functional status as clearscreen?

ZWEI:(SET-COMTAB-RETURN-UNDO
      *STANDARD-COMTAB*
      '(#\Control-Meta-L 		COM-RECENTER-TO-TOP))


-CR
 2-May-84 11:19:22-EDT,749;000000000000
Received: from MIT-MERLIN by MIT-OZ via Chaosnet; 2 May 84 11:18-EDT
Date: Wednesday, 2 May 1984, 11:19-EDT
From: Charles Rich <RICH at MIT-OZ>
Subject: Destructuring Let
To: BUG-LISPM at MIT-OZ

In Release 4.5, Reasoning Utility Package 4.0, FEP 18,
site configuration 62, on PA Lisp Machine Merlin:

In package User, I (LOAD "SRC:<S.SYS2>LET").  This makes
destructuring Let work interpretively, but the compiler
complains that destructing clauses like
((A B C) '(1 2 3)) "is not a valid LET clause".  The only way
I can get around this for now is to shadow LET in my own package.
I suspect this problem has something to do with some compiler specific
information about Let which is not getting reset by the SRC file.

		-Chuck.
 2-May-84 12:21:08-EDT,1341;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 2 May 84 12:20-EDT
Date: Wednesday, 2 May 1984, 12:18-EDT
From: Scott Cyphers <sr.ehpyc at MIT-SPEECH>
Subject: Destructuring Let Ideas
To: Charles Rich <RICH at MIT-OZ>
Cc: BUG-LISPM at MIT-OZ

Since destructuring let does not work for Rel 5, I have some suggestions
for an improvement.  I often have a mixture of lets and multiple-values-binds
which it would be really nice to be able to combine.  If I could say:

(let (((foo nil bar)
       (multiple-value-list ...)))
  ...)

and not have the multiple-value-list do any consing, it would be really nice.

I was glad to see that (multiple-value-bind (...) (values ...)) now compiles to
the good thing.

---

(defstruct (thing :conc-name)
  name
  top
  bottom
  middle)

If instead of this:

(defun foo (it)
  (let ((top (thing-top it))
	(bottom (thing-bottom it))
	(middle (thing-middle it)))
    ...))

I could have a real destructuring let like:

(defun foo (it)
  (let (((top bottom middle)
         (multiple-value-list (destructure thing (top bottom middle) it))))
    ...))

where destructure was a macro which turned into something like

(values (thing-top it)
	(thing-bottom it)
	(thing-middle it))

and got the right accessor names by looking at thing, that would be nice too.
 2-May-84 14:38:03-EDT,1614;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 2 May 84 14:36-EDT
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 26383; Wed 2-May-84 14:32:59-EDT
Date: Wednesday, 2 May 1984, 14:34-EDT
From: David A. Moon <Moon at SCRC-TENEX>
Subject: Destructuring Let
To: Charles Rich <RICH at MIT-OZ>
Cc: BUG-LISPM at MIT-OZ
In-reply-to: The message of 2 May 84 11:19-EDT from Charles Rich <RICH at MIT-OZ>

    Date: Wednesday, 2 May 1984, 11:19-EDT
    From: Charles Rich <RICH at MIT-OZ>

    In Release 4.5, Reasoning Utility Package 4.0, FEP 18,
    site configuration 62, on PA Lisp Machine Merlin:

    In package User, I (LOAD "SRC:<S.SYS2>LET").  This makes
    destructuring Let work interpretively, but the compiler
    complains that destructing clauses like
    ((A B C) '(1 2 3)) "is not a valid LET clause".  The only way
    I can get around this for now is to shadow LET in my own package.
    I suspect this problem has something to do with some compiler specific
    information about Let which is not getting reset by the SRC file.

The destructuring LET that is distributed with Release 5 avoids this
problem by calling its special forms DLET, DLET*, and DESETQ.  This
file is available on OZ as OZ:PS:<S.R5.SYS2>LET.LISP.

I believe that the Release 5 compiler was fixed so you could shadow
the builtin special form LET with a macro, which did not work in Release 4.
However, since the macro defined by the destructuring-LET file is
*not* upward-compatible with the builtin LET, it was felt to be
better to give it a different name.
 2-May-84 14:46:32-EDT,1156;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 2 May 84 14:41-EDT
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 26389; Wed 2-May-84 14:36:27-EDT
Date: Wednesday, 2 May 1984, 14:38-EDT
From: David A. Moon <Moon at SCRC-TENEX>
Subject: ZWEI (Rel 4.5)
To: Charles Rich <RICH at MIT-OZ>
Cc: bug-lispm at MIT-OZ
In-reply-to: <RICH.12012124397.BABYL@MIT-OZ>

    Date: 2 May 1984  10:50 EDT (Wed)
    From: Charles Rich <RICH@MIT-OZ>

    I had a heck of a time trying to redefine M-C-L in Zwei, and
    finally gave up.  The code I used is given below, which is
    the same as works with resetting all my other keys.  The
    effect was always to leave the key with it old definition in
    place (as verified with M-? M-C-L).  I suspect that the new
    definition is going someplace else.  Might this have
    something to do with the fact that C-L has a special
    functional status as clearscreen?

    ZWEI:(SET-COMTAB-RETURN-UNDO
	  *STANDARD-COMTAB*
	  '(#\Control-Meta-L 		COM-RECENTER-TO-TOP))

There is probably a c-m-L command in *ZMACS-COMTAB*; certainly there
is in Release 5.
 2-May-84 22:01:14-EDT,2870;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 2 May 84 21:57-EDT
Date: Wednesday, 2 May 1984, 21:54-EDT
From: Robert L. Krawitz <ZZZ.RLK at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In Don't-dump-a-band! Inconsistent (unreleased patches loaded) System 98.48,
CADR 3.6, ZMail 53.17, MIT-Specific 22.0, microcode 309, ZM MIT,
on Lisp Machine Three:


Insert your description of the circumstances here:

This happens frequently.  Common pattern:

After reading new mail, it attempts to save the file (of course).

Due to file server problems, the save is not completed, or something of
the sort.  In this case delete appeared in the mode line, wiht no action
taking place (the time updated).  In other cases, the file is not
completely saved.

Due to the excessive wait, I control-abort out of the save to continue.

I attempt to mail a letter, or edit something already in the buffer.
(By various means, such as M, R, C-R, etc.)

The mode line reads lock, and no action takes place.

I type various abort combinations, and receive this.

>>ERROR: Attempt to unlock #<DTP-LOCATIVE 7717625>, which you don't have locked
Backtrace from the debugger:

PROCESS-UNLOCK (P.C. = 53)

 Arg 0 (LOCATIVE-POINTER): #<DTP-LOCATIVE 7717625>
   --Defaulted args:--
 Arg 1 (LOCK-VALUE): #<PROCESS Main ZMail window 7717543>
 Arg 2 (ERROR-P): T


ZWEI:ZMAIL-MAIL (P.C. = 413)

 Arg 0 (CONFIGURATION): :MAIL
 Arg 1 (STARTING-WINDOW): :HEADER
Local 0 (OLD-CONFIGURATION): :BOTH
Local 1 (.WINDOW.): NIL
Local 2 (.FOR-WINDOW.): #<ZMAIL-FRAME Main ZMail window 3201327 exposed>
Local 3 (.OSTATUS.): NIL
Local 4 (.OSUBST.): NIL
Local 5 (W): #<ZMAIL-WINDOW Zmail Window 1 3211342 exposed>
Local 6 (.QUEUE-LEFT.): NIL
Local 7: NIL
Local 8 (E): NIL


ZWEI:COM-ZMAIL-MAIL-INTERNAL (P.C. = 442)

 Arg 0 (MODE): NIL
Local 0 (POINT): ("To: " 4 :NORMAL)
Local 1 (WHO): NIL
Local 2 (WHAT): NIL
Local 3 (STARTING-WINDOW): :HEADER
Local 4 (STREAM): NIL
Local 5 (STATUS): NIL
Local 6 (FROM): NIL
Local 7 (SUBJECT): NIL
Local 8 (BP): NIL


ZWEI:COM-ZMAIL-MAIL (P.C. = 62)

Local 0 (TYPE): NIL


ZWEI:COMMAND-EXECUTE (P.C. = 115)

 Arg 0 (COMMAND): ZWEI:COM-ZMAIL-MAIL
 Arg 1 (CHAR): 155
   --Defaulted args:--
 Arg 2 (PREFIX-CHAR): NIL
 Arg 3 (HOOK-LIST): NIL
Local 0 (HOOK-SUCCESS): T
Local 1: NIL
Local 2 (HOOK): NIL


Remainder of stack:

ZWEI:ZMAIL-COMMAND-EXECUTE (P.C. = 27)
(:METHOD ZWEI:ZMAIL-FRAME :PROCESS-COMMAND-CHAR) (P.C. = 40)
(:METHOD ZWEI:ZMAIL-COMMAND-LOOP-MIXIN :COMMAND-LOOP) (P.C. = 257)
(:INTERNAL (:METHOD ZWEI:ZMAIL-FRAME :COMBINED :COMMAND-LOOP) 0) (P.C. = 44)
FUNCALL (P.C. = 25)
(:METHOD ZWEI:ZMAIL-COMMAND-LOOP-MIXIN :AROUND :COMMAND-LOOP) (P.C. = 57)
(:METHOD ZWEI:ZMAIL-FRAME :COMBINED :COMMAND-LOOP) (P.C. = 43)
ZWEI:ZMAIL-PROCESS-TOP-LEVEL (P.C. = 115)
SI:PROCESS-TOP-LEVEL (P.C. = 152)
 3-May-84 08:59:11-EDT,3076;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 3 May 84 08:57-EDT
Date: Thursday, 3 May 1984, 08:52-EDT
From: Cory Myers <cory at MIT-SYLVESTER>
Subject: Cold Booting
To: BUG-LISPM at MIT-OZ

In Release 5.0 [Beta Test rev 7], on Lisp Machine Tweety Pie (3600):

Trying to boot!

Time to flame on:  This happens far too frequently and on top of the
slow time to boot makes booting a very painful operation.  There has got
to be a better way!

>>Error: Object named SWW|ARROWHEAD cannot be updated in namespace MIT.
While in the function NETI:ADD-OR-CHANGE-OBJECT  NETI:DO-UNKNOWN-OBJECT-FIXUPS  NETI:QUERY-NAMESPACE-SERVER

NETI:ADD-OR-CHANGE-OBJECT:  (P.C. = 47)
   Arg 0 (CLASS-NAME): :PRINTER
   Arg 1 (NAME): #<NAME SWW|ARROWHEAD 50675707>
   Arg 2 (PROPERTY-LIST): NIL
   Local 3: NIL
   Local 4: NIL
   Local 5 (FLAVOR): NIL
   Local 6 (OBJECT): NIL
   Local 7 (CHANGED-P): NIL
   Local 8 (GLOBAL-OBJECT): NIL
   Local 9 (NAMES): NIL
   Local 10 (CLASS): #<CLASS PRINTER 75363700>
   Local 11 (TEST-NAME): NIL
   Local 12: NIL

NETI:DO-UNKNOWN-OBJECT-FIXUPS:  (P.C. = 140)
   Arg 0 (DECACHE-FIRST): T

NETI:QUERY-NAMESPACE-SERVER:  (P.C. = 426)
   Arg 0 (CLASS): :HOST
   Arg 1 (NAMESPACE): #<NAMESPACE MIT 76011143>
   Rest arg (PROPERTY-LIST): (:NAME #<NAME MIT|TWEETY-PIE 50656270> :TIMESTAMP 1464)

(:METHOD NET:OBJECT :CHECK-VALIDITY):  (P.C. = 201)
   Arg 0 (SELF): #<LISPM-HOST TWEETY-PIE 50662665>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NET:OBJECT -- 3. IV's, 1. FL's 104242623>
   Arg 2 (OPERATION): :CHECK-VALIDITY
   Arg 3 (RELATIVE-TO-NAMESPACE): #<NAMESPACE MIT 76011143>

(:METHOD NET:OBJECT :CHECK-VALIDITY):  (P.C. = 30)
   Arg 0 (SELF): #<LISPM-HOST TWEETY-PIE 50662665>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NET:OBJECT -- 3. IV's, 1. FL's 104242623>
   Arg 2 (OPERATION): :CHECK-VALIDITY
   --Defaulted args:--
   Arg 3 (RELATIVE-TO-NAMESPACE): NIL

(:METHOD NET:OBJECT :BEFORE :GET):  (P.C. = 5)
   Arg 0 (SELF): #<LISPM-HOST TWEETY-PIE 50662665>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NET:OBJECT -- 3. IV's, 1. FL's 104242623>
   Arg 2 (OPERATION): :GET
   Rest arg (IGNORE): (:FINGER-LOCATION)

(:METHOD NET:OBJECT :COMBINED :GET):  (P.C. = 7)
   Arg 0 (SELF): #<LISPM-HOST TWEETY-PIE 50662665>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NET:OBJECT -- 3. IV's, 1. FL's 104242623>
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

(:METHOD NET:OBJECT :UNCLAIMED-MESSAGE):  (P.C. = 15)
   Arg 0 (SELF): #<LISPM-HOST TWEETY-PIE 50662665>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NET:OBJECT -- 3. IV's, 1. FL's 104242623>
   Arg 2 (OPERATION): :UNCLAIMED-MESSAGE
   Arg 3 (MESSAGE): :FINGER-LOCATION
   Rest arg (ARGS): NIL

Rest of stack:
SI:FLAVOR-UNCLAIMED-MESSAGE:  (P.C. = 20)
SI:INSTANCE-HASH-UNCLAIMED-MESSAGE:  (P.C. = 35)
NETI:SET-LOCAL-HOST-VARIABLES:  (P.C. = 34)
SI:*EVAL:  (P.C. = 370)
INITIALIZATIONS:  (P.C. = 42)
NETI:INITIALIZE-NAMESPACES-AND-NETWORK:  (P.C. = 131)
LISP-REINITIALIZE:  (P.C. = 435)
SI:LISP-TOP-LEVEL:  (P.C. = 3)
 3-May-84 16:36:17-EDT,2508;000000000000
Received: from SCRC-YUKON by MIT-OZ via Chaosnet; 3 May 84 16:35-EDT
Received: from SCRC-YANGTZE by SCRC-YUKON via CHAOS with CHAOS-MAIL id 38095; Thu 3-May-84 16:34:32-EDT
Date: Thursday, 3 May 1984, 16:30-EDT
From: Carl Hoffman <CWH at SCRC-STONY-BROOK>
Subject: DEL-IF
To: RICH at MIT-OZ, BUG-LISPM at MIT-OZ
In-reply-to: The message of 1 May 84 17:07-EDT from Charles Rich <RICH at MIT-OZ>

    Date: Tuesday, 1 May 1984, 17:07-EDT
    From: Charles Rich <RICH at MIT-OZ>

    The function DEL-IF and it's relations should handle their functional
    arguments like Mapcar, i.e. they should either be macros
    or with special &Function args.  Otherwise I have to declare Y
    special in

	    (DEFUN FOO (Y]
	       ...
	       (DEL-IF #'(LAMBDA (X) ...Y..) ...) does )

I haven't seen anybody reply to this, so I guess I'll answer it.

You are asking for Y to be lexically scoped, and for the argument to DEL-IF to
be a downward lexical closure.  This is something which has been implemented
to some degree in the MIT/LMI system, but has not yet been implemented for the
3600.  We plan to implement downward lexical closures in the future.  Lexical
scoping is required by Common Lisp.

There are some misconceptions in your request which I will try to clear up,
although I may have some of the facts wrong myself.

  1. It would be possible to implement DEL-IF as a macro, and this would cause Y
  to be scoped lexically, but this would incompatibly change DEL-IF from a
  function to a special form.  For example,
  
      (FUNCALL #'DEL-IF PRED LIST)
  
  means the same thing as
  
      (DEL-IF PRED LIST)
  
  This may seem obscure, but it is really an important point.  In addition, the
  syntax of DEL-IF would be quite different from the syntax of other macros
  which iterate over lists, such as DOLIST.
  
  2. While MAPCAR does have &FUNCTIONAL in its argument list, this has nothing
  to do with lexical versus dynamic scoping.  It is just a message to the
  compiler to treat (QUOTE ...) as (FUNCTION ...).  Your example will not work
  with MAPCAR.

So, until lexical scoping is implemented, you will either have to declare Y
special, or implement your own version of DEL-IF which takes arguments to pass
on to the funarg, the same way that PROCESS-WAIT does.  If you choose to
declare Y special, you can prevent it from being declared special for your
entire program by using LOCAL-DECLARE or declaring it within the body of FOO.
 3-May-84 17:36:24-EDT,1320;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 3 May 84 17:34-EDT
Received: from SCRC-EUPHRATES by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 50022; Thu 3-May-84 17:31:45-EDT
Date: Thursday, 3 May 1984, 17:31-EDT
From: David A. Moon <Moon at SCRC-TENEX>
Subject: DEL-IF
To: Carl Hoffman <CWH at SCRC-STONY-BROOK>
Cc: RICH at MIT-OZ, BUG-LISPM at MIT-OZ
In-reply-to: The message of 3 May 84 16:30-EDT from Carl Hoffman <CWH at SCRC-STONY-BROOK>

	Date: Tuesday, 1 May 1984, 17:07-EDT
	From: Charles Rich <RICH at MIT-OZ>
	The function DEL-IF and it's relations should handle their functional
	arguments like Mapcar...

I basically agree with what Carl said, but want to point out that what was probably
being asked for was that the compiler have special knowledge of DEL-IF in the same
way that it has special knowledge of MAPCAR.  The compiler turns MAPCAR into
(essentially) a DO when the functional argument is a lambda, so that the limited
lexical scoping (no nested functions) currently provided by the compiler can be
used.  The compiler does this for SUBSET also, but fails to do it for REM-IF-NOT,
DEL-IF, and probably other functions where it would make sense.

I will add something about this to the compiler's to-do file.  I do not know in what
release the improvements will occur.
 4-May-84 17:33:46-EDT,4228;000000000000
Received: from MIT-PI by MIT-OZ via Chaosnet; 4 May 84 17:32-EDT
Date: Friday, 4 May 1984, 17:30-EDT
From: CMB at MIT-MC
Sender: asm at MIT-MC
Subject: System menu/attributes bug
To: BUG-LISPM at MIT-OZ

In Release 5.0 [Beta Test rev 7], FEP 18, on PI Project (3600):

I used the system menu (attributes) to change the borders and border
margins on my initial lisp listener to 0.  This worked just fone.  Then
I wanted to put them back to what the were and clicked on attributes in
the system menu and this happened...

>>Trap: The argument given to the CDR instruction, :ZERO, was not a list, a locative or NIL.
While in the function TV:SCREEN-EDITOR-EDIT-ATTRIBUTES  TV:SYSTEM-MENU-EDIT-WINDOW-ATTRIBUTES  (:METHOD TV:WINDOW-HACKING-MENU-MIXIN :EXECUTE-WINDOW-OP)

TV:SCREEN-EDITOR-EDIT-ATTRIBUTES:  (P.C. = 145)
   Arg 0 (WINDOW): #<LISP-LISTENER Lisp Listener 1 32640000 deexposed>
   Local 1 (BORDERS-P): T
   Local 2 (LABEL-P): T
   Local 3 (NAME-P): NIL
   Local 4 (OLD-CURRENT-FONT-VALUE): #<FONT CPTFONT 75022035>
   Local 5 (OLD-MORE-P-VALUE): T
   Local 6 (OLD-REVERSE-VIDEO-P): NIL
   Local 7 (OLD-VSP): 2
   Local 8 (OLD-IN-ACTION): :NOTIFY
   Local 9 (OLD-OUT-ACTION): :PERMIT
   Local 10 (OLD-OTHER-OUT-ACTION): NIL
   Local 11 (OLD-CHAR-ALU-FCN): 7
   Local 12 (OLD-ERASE-ALU-FCN): 2
   Local 13 (OLD-PRIORITY-VALUE): NIL
   Local 14 (OLD-SAVE-BITS-VALUE): T
   Local 15 (OLD-LABEL-OR-NAME): (0 -12 0 0 #<FONT CPTFONT 75022035> "Lisp Listener 1" 2 NIL)
   Local 16 (OLD-BORDERS-SPEC): (:ZERO :ZERO :ZERO :ZERO)
   Local 17 (OLD-BORDER-MARGIN-WIDTH-VALUE): 0

TV:SYSTEM-MENU-EDIT-WINDOW-ATTRIBUTES:  (P.C. = 5)
   Arg 0 (WINDOW): #<LISP-LISTENER Lisp Listener 1 32640000 deexposed>
   Arg 1 (IGNORE): 455
   Arg 2 (IGNORE): 469

(:METHOD TV:WINDOW-HACKING-MENU-MIXIN :EXECUTE-WINDOW-OP):  (P.C. = 6)
   Arg 0 (SELF): #<DYNAMIC-MULTICOLUMN-MOMENTARY-WINDOW-HACKING-PROCESS-RENAMING-MENU Dynamic Multicolumn Momentary Window Hacking Process Renaming Menu 1 53311014 deactivated>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:WINDOW-HACKING-MENU-MIXIN -- 3. IV's, 0. FL's 104522760>
   Arg 2 (OPERATION): :EXECUTE-WINDOW-OP
   Arg 3 (FUNCTION): TV:SYSTEM-MENU-EDIT-WINDOW-ATTRIBUTES

(:METHOD TV:MENU-EXECUTE-MIXIN :EXECUTE):  (P.C. = 100)
   Arg 0 (SELF): #<DYNAMIC-MULTICOLUMN-MOMENTARY-WINDOW-HACKING-PROCESS-RENAMING-MENU Dynamic Multicolumn Momentary Window Hacking Process Renaming Menu 1 53311014 deactivated>
   Arg 1 (SELF-MAPPING-TABLE): TV:MENU-EXECUTE-MIXIN
   Arg 2 (OPERATION): :EXECUTE
   Arg 3 (ITEM): ("Attributes" :WINDOW-OP TV:SYSTEM-MENU-EDIT-WINDOW-ATTRIBUTES :DOCUMENTATION "View or change the attributes of the window that the mouse is over.")

(:METHOD TV:DYNAMIC-MULTICOLUMN-MOMENTARY-WINDOW-HACKING-PROCESS-RENAMING-MENU :COMBINED :EXECUTE):  (P.C. = 24)
   Arg 0 (SELF): #<DYNAMIC-MULTICOLUMN-MOMENTARY-WINDOW-HACKING-PROCESS-RENAMING-MENU Dynamic Multicolumn Momentary Window Hacking Process Renaming Menu 1 53311014 deactivated>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:DYNAMIC-MULTICOLUMN-MOMENTARY-WINDOW-HACKING-PROCESS-RENAMING-MENU -- 0. IV's, 3. FL's 104522751>
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

(:METHOD TV:BASIC-MENU :CHOOSE):  (P.C. = 21)
   Arg 0 (SELF): #<DYNAMIC-MULTICOLUMN-MOMENTARY-WINDOW-HACKING-PROCESS-RENAMING-MENU Dynamic Multicolumn Momentary Window Hacking Process Renaming Menu 1 53311014 deactivated>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:BASIC-MENU -- 29. IV's, 0. FL's 104522776>
   Arg 2 (OPERATION): :CHOOSE

(:METHOD TV:DYNAMIC-MULTICOLUMN-MOMENTARY-WINDOW-HACKING-MENU :COMBINED :CHOOSE):  (P.C. = 34)
   Arg 0 (SELF): #<DYNAMIC-MULTICOLUMN-MOMENTARY-WINDOW-HACKING-PROCESS-RENAMING-MENU Dynamic Multicolumn Momentary Window Hacking Process Renaming Menu 1 53311014 deactivated>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:DYNAMIC-MULTICOLUMN-MOMENTARY-WINDOW-HACKING-MENU -- 0. IV's, 4. FL's 104522766>
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

TV:CALL-SYSTEM-MENU:  (P.C. = 26)
   Arg 0 (SUPERIOR): #<MAIN-SCREEN Main Screen 32640077 exposed>

Rest of stack:
SI:PROCESS-RUN-FUNCTION-INTERNAL:  (P.C. = 51)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
 5-May-84 06:54:28-EDT,2070;000000000000
Received: from MIT-LISPM-2 by MIT-OZ via Chaosnet; 5 May 84 06:54-EDT
Date: Saturday, 5 May 1984, 06:55-EDT
From: Michael A. Patton <MAP at MIT-OZ>
To: BUG-LISPM at MIT-OZ
CC: map at MIT-OZ

In System 98.46, CADR 3.6, ZMail 53.17, MIT-Specific 22.0, microcode 309,
gc@36, on Lisp Machine Two:

Two different bugs:

The documentation for (READLINE ...) states that if given an EOF-OPTION and EOF is
encountered, it returns EOF-OPTION.  This is not true, but I believe it should be.
Currently (at least as described above, and the source on OZ) it returns an empty
string as the first arg.  The simple fix for this is to change the "STRING" in the
(VALUES ...) to be (IF EOF EOF-OPTION STRING) thus returning the EOF-OPTION as the
first value when EOF is encountered.  Other choices that occur to me are to fix the
documentation to describe what it does do, or change the functionality of
READ-DELIMITED-STRING.  The later I am pretty sure is wrong for other users of
READ-DELIMITED-STRING.  The former makes simple read-lines-til-end-of-file loops
harder to write since they need to look at the second value to detect end-of-file.

(TV:CHOOSE-VARIABLE-VALUES ...) and related things don't support locatives right.
I had a case where the locatives were made with (LOCF (THIRD X)) and it complained
that DTP-LOCATIVE was a bad type.  It was however checking LOCATIVE which seemed
wrong to me, and changing the test to DTP-LOCATIVE fixed my problem, but I'm not
sure exactly what was intended in this code.


Both of the above are demonstrated by the file OZ:PS:<CCS.TMRC.MAP>TIMTBL.LISP.144
other versions of the same vintage probably also do since I didn't change that code.
They should be the only occurance of a READLINE with an EOF-OPTION and the only two
occurances of LOCF in the whole file (both the same and used in cooperation).

Thanks,
Mike

For your added enjoyment: the (ADD-TO ...) form that appears near the later stuff
is just a PUSH that uses NCONC to make it backwards.  Is there something already
that does this??
 5-May-84 20:44:09-EDT,877;000000000000
Received: from MIT-XX by MIT-OZ via Chaosnet; 5 May 84 20:43-EDT
Date: Saturday, 5 May 1984, 20:38-EDT
From: scott a douglass <sad at MIT-XX>
Subject: zmacs word abbrev bug
To: BUG-LISPM at MIT-OZ

In Release 5.0 [Beta Test rev 7], FEP 18, Rel 5.7 MEF Version IV, on MEF Cherry (3600):

When I tryied m-X Edit Word Abbrevs it broke horribly into the cold load load
stream.  I had two windows up (by Modified Two Windows) at the time.  I poked
around and it seemed like maybe whatever temporary buffer is used to hold the
abbrevs had no name but it was being asked to tell it so that it could be
used as the label at the bottom of the window.  But then again I might not
have a clue.  I couldn't seem to get the debugger to c-M the bug into a
buffer (not too suprisingly).  Oh yes, I had made the abbrevs by reading a saved
abbrev file.  thanks...
					--scott
 6-May-84 11:53:21-EDT,1148;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 6 May 84 11:53-EDT
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 28068; Sun 6-May-84 11:51:39-EDT
Date: Sunday, 6 May 1984, 11:52-EDT
From: David C. Plummer <DCP at SCRC-TENEX>
Subject: zmacs word abbrev bug
To: scott a douglass <sad at MIT-XX>, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 5 May 84 20:38-EDT from scott a douglass <sad at MIT-XX>

    Date: Saturday, 5 May 1984, 20:38-EDT
    From: scott a douglass <sad at MIT-XX>

    In Release 5.0 [Beta Test rev 7], FEP 18, Rel 5.7 MEF Version IV, on MEF Cherry (3600):

    When I tryied m-X Edit Word Abbrevs it broke horribly into the cold
    load load stream.  ...  I couldn't seem to get the debugger to c-M
    the bug into a buffer (not too suprisingly).

When you are in the cold load stream, the window system isn't working.
Sometimes the scheduler isn't running.  c-M should have caused some
paging and a return to the prompt.  After you get out of the cold load
stream, try getting a system menu and click on Select.  There may a mail
window/process hanging around.
 6-May-84 18:19:10-EDT,820;000000000000
Received: from MIT-EECS by MIT-OZ via Chaosnet; 6 May 84 18:18-EDT
Date: Sunday, 6 May 1984, 18:14-EDT
From: Philip E. Agre <Agre at MIT-OZ>
Subject: Too many arguments warning
To: bug-lispm at MIT-OZ

If you change the definition of a function to have an extra argument
and use M-X Compile Region to recompile it then recursive calls that
provide that extra argument (at least sometimes) get a too many 
arguments warning.

For example, start by typing the following into an editor buffer:

(defun foo (a)
  (if (= a 0) 'done
      (foo (- a 1))))

Do Compile Region right after typing the last ).  Then edit it to read:

(defun foo (a b)
  (if (= (* a b) 0) 'done
      (foo (- a 1) (- b 1))))

Then do Compile Region again.  You'll get the spurious message (or at
least I just did).

/phil
 6-May-84 23:45:35-EDT,2014;000000000000
Received: from MIT-XX by MIT-OZ via Chaosnet; 6 May 84 23:41-EDT
Date: Sunday, 6 May 1984, 23:33-EDT
From: scott a douglass <sad at MIT-XX>
Subject: Zmacs "bump scrolling" bug
To: BUG-LISPM at MIT-OZ

In Release 5.0 [Beta Test rev 7], FEP 13, Rel 5.7 MEF Version IV, on MEF Live Oak (3600):

This is bug (or a gross mis-feature) in Zmacs scroll windows (or maybe scroll
windows in general).  It is easier to demonstrate than describe.  It may be
necessary to get this msg into a real Zmacs buffer.

Try this:

put the cursor at the end of this line>

(this is a line that is too wide ------------------------------------------------------------------------------------ this is the end of the same line)

now use the "bump scrolling" arrow to slowly scroll the window up (i.e. bump
at the bottom of the screen) one line at a time.

when the cursor is at the front of the wide line (and both are at the top of
the screen) the next "bump" does the wrong thing:  the cursor moves down one
physical line (into the middle of the wide line) and the screen redisplays.

now whnever you try to bump scroll the cursor off the top the same thing
happens (until you put the cursor in another place).  thanks...

						-scott

(extra line)
(extra line)
(extra line)
(extra line)
(extra line)
(extra line)
(extra line)
(extra line)
(extra line)
(extra line)
(extra line)
(extra line)
(extra line)
(extra line)
(extra line)
(extra line)
(extra line)
(extra line)
(extra line)
(extra line)
(extra line)
(extra line)
(extra line)
(extra line)
(extra line)
(extra line)
(extra line)
(extra line)
(extra line)
(extra line)
(extra line)
(extra line)
(extra line)
(extra line)
(extra line)
(extra line)
(extra line)
(extra line)
(extra line)
(extra line)
(extra line)
(extra line)
(extra line)
(extra line)
(extra line)
(extra line)
(extra line)
(extra line)
(extra line)
(extra line)
(extra line)
(extra line)
(extra line)
(extra line)
(extra line)
 7-May-84 03:07:21-EDT,1049;000000000000
Mail-From: GAVAN created at  7-May-84 03:06:29
Date: Mon, 7 May 1984  03:06 EDT
Message-ID: <GAVAN.12013350724.BABYL@MIT-OZ>
From: GAVAN@MIT-OZ
To:   "Philip E. Agre" <Agre@MIT-OZ>
cc:   bug-lispm@MIT-OZ
Subject: Too many arguments warning
In-reply-to: Msg of 6 May 1984 18:14-EDT from Philip E. Agre <Agre>

    Date: Sunday, 6 May 1984, 18:14-EDT
    From: Philip E. Agre <Agre>

    If you change the definition of a function to have an extra argument
    and use M-X Compile Region to recompile it then recursive calls that
    provide that extra argument (at least sometimes) get a too many 
    arguments warning.

I've always been bothered by this too, although I'm not sure it's
avoidable.  When compiling the recursive call to a definition, the
compiler can only look at the old compiled definition, so it thinks
there are too many args.  Can the compiler be told not to check the
args of recursive calls to the function it's compiling (or, better,
check them against the lambda-list of the function it's compiling)?
 7-May-84 15:29:47-EDT,1134;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 7 May 84 15:18-EDT
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 29002; Mon 7-May-84 15:10:40-EDT
Date: Monday, 7 May 1984, 15:18-EDT
From: David A. Moon <Moon at SCRC-TENEX>
Subject: Zmacs "bump scrolling" bug
To: scott a douglass <sad at MIT-XX>
Cc: BUG-LISPM at MIT-OZ, Software-Maintenance at SCRC-YUKON
In-reply-to: The message of 6 May 84 23:33-EDT from scott a douglass <sad at MIT-XX>

    Date: Sunday, 6 May 1984, 23:33-EDT
    From: scott a douglass <sad at MIT-XX>

    In Release 5.0 [Beta Test rev 7], FEP 13, Rel 5.7 MEF Version IV, on MEF Live Oak (3600):

    This is bug (or a gross mis-feature) in Zmacs scroll windows (or maybe scroll
    windows in general).  [Scrolling a line wider than the screen off the top
    of the window does not work; it recenters the window instead.]

Thanks for the report.  This bug was introduced by patch 243.269 and fixed by
patch 243.532; the first patch is included in Release 5.0 but the second patch
was not made in time.  This will be fixed in some future release.
 8-May-84 01:14:22-EDT,38800;000000000000
Received: from MIT-LISPM-2 by MIT-OZ via Chaosnet; 8 May 84 00:49-EDT
Date: Tuesday, 8 May 1984, 00:48-EDT
From: Henry Minsky <HQM at MIT-OZ>
To: BUG-LISPM at MIT-OZ

Cadr-8 died a miserable death while it was running ZMACS.  I tried
a <terminal>-F to see if XX was alive and it halted.

(cc:cc-analyze-software-crash)
This program doesn't understand why the machine stopped (not ILLOP).
Micro PC History (OPC's), oldest first:
   00NIL   
   00NIL   
   00NIL   
   00NIL   
   00NIL   
   00NIL   
   00NIL   
   00NIL   
   ...in the PROM.
Backtrace of microcode subroutine stack:
   37  1777777   37777@CADR:C
   36  1777777   37777@CADR:C
   35  1777777   37777@CADR:C
   34  1777777   37777@CADR:C
   33  1777777   37777@CADR:C
   32  1777777   37777@CADR:C
   31  1777777   37777@CADR:C
   30  1777777   37777@CADR:C
   27  1777777   37777@CADR:C
   26  1777777   37777@CADR:C
   25  1777777   37777@CADR:C
   24  1777777   37777@CADR:C
   23  1777777   37777@CADR:C
   22  1777777   37777@CADR:C
   21  1777777   37777@CADR:C
   20  1777777   37777@CADR:C
   17  1777777   37777@CADR:C
   16  1777777   37777@CADR:C
   15  1777777   37777@CADR:C
   14  1777777   37777@CADR:C
   13  1777777   37777@CADR:C
   12  1777777   37777@CADR:C
   11  1777777   37777@CADR:C
   10  1777777   37777@CADR:C
    7  1777777   37777@CADR:C
    6  1777777   37777@CADR:C
    5  1777777   37777@CADR:C
    4  1777777   37777@CADR:C
    3  1777777   37777@CADR:C
    2  1777777   37777@CADR:C
    1  1777777   37777@CADR:C
    0  1777777   37777@CADR:C
Microcode state flags: microcode interrupt: in scavenger: in transporter: switching stack groups
[Sorry, error while trying to print that.]

NIL
(cc:cc-print-disk-label)
CADR:DISK-CONTROL-STATUS CADR:INTERNAL-PARITY-ERROR CADR:READ-COMPARE-DIFFERENCE CADR:CCW-CYCLE CADR:NXM CADR:PAR CADR:HEADER-COMPARE-ERR CADR:HEADER-ECC-ERR CADR:ECC-HARD CADR:ECC-SOFT CADR:OVERRUN CADR:TRANSFER-ABORTED CADR:START-OF-BLOCK-ERR CADR:TIMEOUT CADR:SEEK-ERR CADR:OFF-LINE CADR:OFF-CYL CADR:READ-ONLY CADR:FAULT CADR:NO-SELECT CADR:MULTIPLE-SELECT CADR:INTERRUPT CADR:ATTENTION CADR:ANY-ATTENTION CADR:IDLE 
ECC ERROR PATTERN BITS 177777
ECC ERROR BIT POSITION 177777
CADR:LAST-CC-COMMAND WRITE 
CADR:DISK-ADDRESS CADR:UNIT 7 CADR:CYLINDER 7777 CADR:HEAD 377 CADR:SECTOR 377 
CADR:MEMORY-ADDRESS 17777777
CADR:LAST-CC-COMMAND-LIST-POINTER 12
CADR:COMMAND-LIST 
12 37777777777
13 37777777777
14 37777777777
15 37777777777
16 37777777777
17 37777777777
20 37777777777
21 37777777777
22 37777777777
23 37777777777
24 37777777777
25 37777777777
26 37777777777
27 37777777777
30 37777777777
31 37777777777
32 37777777777
33 37777777777
34 37777777777
35 37777777777
36 37777777777
37 37777777777
40 37777777777
41 37777777777
42 37777777777
43 37777777777
44 37777777777
45 37777777777
46 37777777777
47 37777777777
50 37777777777
51 37777777777
52 37777777777
53 37777777777
54 37777777777
55 37777777777
56 37777777777
57 37777777777
60 37777777777
61 37777777777
62 37777777777
63 37777777777
64 37777777777
65 37777777777
66 37777777777
67 37777777777
70 37777777777
71 37777777777
72 37777777777
73 37777777777
74 37777777777
75 37777777777
76 37777777777
77 37777777777
    .
    .
    .





etc., all the way up to address #250000, when I decided I was to bored to go on.
Impossible to salvage.  Would not warm boot.  Would not cold boot.  Would not 
cold boot using CADR reset button.  Sigh, I think it is dead.









Machine after cold boot:







(cc:cc-print-disk-label)
CADR:DISK-CONTROL-STATUS CADR:INTERNAL-PARITY-ERROR CADR:READ-COMPARE-DIFFERENCE CADR:CCW-CYCLE CADR:NXM CADR:PAR CADR:HEADER-COMPARE-ERR CADR:HEADER-ECC-ERR CADR:ECC-HARD CADR:ECC-SOFT CADR:OVERRUN CADR:TRANSFER-ABORTED CADR:START-OF-BLOCK-ERR CADR:TIMEOUT CADR:SEEK-ERR CADR:OFF-LINE CADR:OFF-CYL CADR:READ-ONLY CADR:FAULT CADR:NO-SELECT CADR:MULTIPLE-SELECT CADR:INTERRUPT CADR:ATTENTION CADR:ANY-ATTENTION CADR:IDLE 
ECC ERROR PATTERN BITS 177777
ECC ERROR BIT POSITION 177777
CADR:LAST-CC-COMMAND WRITE 
CADR:DISK-ADDRESS CADR:UNIT 7 CADR:CYLINDER 7777 CADR:HEAD 377 CADR:SECTOR 377 
CADR:MEMORY-ADDRESS 17777777
CADR:LAST-CC-COMMAND-LIST-POINTER 12
CADR:COMMAND-LIST 
12 37777777777
13 37777777777
14 37777777777
15 37777777777
16 37777777777
17 37777777777
20 37777777777
21 37777777777
22 37777777777
23 37777777777
24 37777777777
25 37777777777
26 37777777777
27 37777777777
30 37777777777
31 37777777777
32 37777777777
33 37777777777
34 37777777777
35 37777777777
36 37777777777
37 37777777777
40 37777777777
41 37777777777
42 37777777777
43 37777777777
44 37777777777
45 37777777777
46 37777777777
47 37777777777
50 37777777777
51 37777777777
52 37777777777
53 37777777777
54 37777777777
55 37777777777
56 37777777777
57 37777777777
60 37777777777
61 37777777777
62 37777777777
63 37777777777
64 37777777777
65 37777777777
66 37777777777
67 37777777777
70 37777777777
71 37777777777
72 37777777777
;Back to top level in Lisp Listener 2.
(cc:cc-analyze-software-crash)
This program doesn't understand why the machine stopped (not ILLOP).
Micro PC History (OPC's), oldest first:
   00NIL   
   00NIL   
   00NIL   
   00NIL   
   00NIL   
   00NIL   
   00NIL   
   00NIL   
   ...in the PROM.
Backtrace of microcode subroutine stack:
   37  1777777   37777@CADR:C
   36  1777777   37777@CADR:C
   35  1777777   37777@CADR:C
   34  1777777   37777@CADR:C
   33  1777777   37777@CADR:C
   32  1777777   37777@CADR:C
   31  1777777   37777@CADR:C
   30  1777777   37777@CADR:C
   27  1777777   37777@CADR:C
   26  1777777   37777@CADR:C
   25  1777777   37777@CADR:C
   24  1777777   37777@CADR:C
   23  1777777   37777@CADR:C
   22  1777777   37777@CADR:C
   21  1777777   37777@CADR:C
   20  1777777   37777@CADR:C
   17  1777777   37777@CADR:C
   16  1777777   37777@CADR:C
   15  1777777   37777@CADR:C
   14  1777777   37777@CADR:C
   13  1777777   37777@CADR:C
   12  1777777   37777@CADR:C
   11  1777777   37777@CADR:C
   10  1777777   37777@CADR:C
    7  1777777   37777@CADR:C
    6  1777777   37777@CADR:C
    5  1777777   37777@CADR:C
    4  1777777   37777@CADR:C
    3  1777777   37777@CADR:C
    2  1777777   37777@CADR:C
    1  1777777   37777@CADR:C
    0  1777777   37777@CADR:C
Microcode state flags: microcode interrupt: in scavenger: in transporter: switching stack groups
[Sorry, error while trying to print that.]
;Reading at top level in Lisp Listener 1.
;Now using traditional syntax and semantics and base 8 in package USER.

(cc:cc-test-machine)
For best results, ground -TPTSE, 1C07-09 on CMEM boards...

Running Data paths test                 [CC-TEST-DATA-PATHS]
    [Running CC-TEST-IR-DP.]

    Testing register addresses 116202,
      Data path is Unibus  DEBUG-IR  IR  SPY1  Unibus.
    Can't affect it, erroneous value is 7777777777777777
    [Running CC-TEST-PC-DP.]

    Testing register addresses 116200,
      Data path is Unibus  DEBUG-IR  IR(Jump)  PC  SPY2  Unibus.
    Can't affect it, erroneous value is 177777
    [Running CC-TEST-MD-DP.]

    Testing register addresses 116170,
      Data path is Unibus  Xbus (MEM bus on 1A-J1 and 1B-J1)  MDS  MD  MF  (m)
  ALU  Obus (MO0 and MO1 prints)  SPY1  Unibus.
    Can't affect it, erroneous value is 37777777777
    [Running CC-TEST-VMA-DP.]

    Testing register addresses 116160,
      Data path is (Unibus  Xbus (MEM bus on 1A-J1 and 1B-J1)  MDS  MD
  MF  (m)  ALU  Obus  VMAS  VMA  MF  (m)
  ALU  Obus (MO0 and MO1 prints)  Unibus.
    Can't affect it, erroneous value is 37777777777
    [Running CC-TEST-M-MEM-DP.]

    Testing register addresses 116040,
      Data path is Unibus  Xbus (MEM bus on 1A-J1 and 1B-J1)  MDS  MD  MF  (m)
  ALU  Obus (MO0 and MO1 prints)  L  M-MEM  MLATCH  (m)  ALU  Obus  SPY1 
 Unibus.
    Can't affect it, erroneous value is 37777777777
    [Running CC-TEST-A-MEM-DP.]

    Testing register addresses 114000,
      Data path is Unibus  Xbus (MEM bus on 1A-J1 and 1B-J1)  MDS  MD  MF  (m)
  ALU  Obus (MO0 and MO1 prints)  L  A-MEM  ALATCH  (a)  ALU  Obus  SPY1 
 Unibus.
    Can't affect it, erroneous value is 37777777777
    [Running CC-TEST-PP-DP.]

    Testing register addresses 116154,
      Data path is Unibus  Xbus (MEM bus on 1A-J1 and 1B-J1)  MDS  MD  MF  (m)
  ALU  Obus (MO0 and MO1 prints)  PP  MF  (m)  ALU  Obus  SPY1  Unibus.
    Can't affect it, erroneous value is 37777777777
    [Running CC-TEST-PI-DP.]

    Testing register addresses 116153,
      Data path is Unibus  Xbus (MEM bus on 1A-J1 and 1B-J1)  MDS  MD  MF  (m)
  ALU  Obus (MO0 and MO1 prints)  PI  MF  (m)  ALU  Obus  Unibus.
    Can't affect it, erroneous value is 37777777777
    [Running CC-TEST-PDL-DP.]

    Testing register addresses 104000,
      Data path is Unibus  Xbus (MEM bus on 1A-J1 and 1B-J1)  MDS  MD  MF  (m)
  ALU  Obus (MO0 and MO1 prints)  L  PDL-Buffer  PLATCH  (m)  ALU  Obus 
 Unibus.
    Can't affect it, erroneous value is 37777777777
    [Running CC-TEST-Q-DP.]

    Testing register addresses 116204,
      Data path is Unibus  Xbus (MEM bus on 1A-J1 and 1B-J1)  MDS  MD  ALU 
 Q  MF  (m)  ALU  Obus  Unibus.
    Can't affect it, erroneous value is 37777777777
    [Running CC-TEST-C-MEM-DP.]

    Testing register addresses 40000,
      Data path is *FIRST* Unibus  Xbus (MEM bus on 1A-J1 and 1B-J1)  MDS  MD  MF  (m)
     ALU  Obus (MO0 and MO1 prints)  L   M-MEM 
*THEN* Unibus  Xbus (MEM bus on 1A-J1 and 1B-J1)  MDS  MD  MF  (m)
     ALU  Obus (MO0 and MO1 prints)  L   A-MEM 
*AND FINALLY* A-MEM & M-MEM  IWR  C-MEM  IR(Jump)  Unibus.
    Can't affect it, erroneous value is 7777777777777777
    [Running CC-TEST-LC-DP.]

    Testing register addresses 116224,
      Data path is Unibus  Xbus  MD  MF  (m)
  ALU  Obus (MO0 and MO1 prints)  LC  MF  M  ALU  Obus.
    Can't affect it, erroneous value is 37777777777
    [Running CC-TEST-A-PASS-DP.]

    Testing register addresses (CC-A-PASS-HANDLER),
      Data path is   L  APASS  A  ALU.
    Can't affect it, erroneous value is 37777777777
    [Running CC-TEST-M-PASS-DP.]

    Testing register addresses (CC-M-PASS-HANDLER),
      Data path is   L  MPASS  MF  M  ALU.
    Can't affect it, erroneous value is 37777777777
    [Running CC-TEST-ALU-SHIFT-LEFT-DP.]

    Testing register addresses (CC-ALU-SHIFT-LEFT-HANDLER),
      Data path is MD,Q(31)  ALU-SHIFT-LEFT-1.
    Can't affect it, erroneous value is 37777777777
    [Running CC-TEST-ALU-SHIFT-RIGHT-DP.]

    Testing register addresses (CC-ALU-SHIFT-RIGHT-HANDLER),
      Data path is MD  M+M  ALU-SHIFT-RIGHT-1.
    Can't affect it, erroneous value is 37777777777
    [Running CC-TEST-UNIBUS-MAP-DP.]

    Testing register addresses 116240,
      Data path is Unibus Map.
    Can't affect it, erroneous value is 177777
    [Running CC-TEST-BUSINT-BUFFERS-DP.]

    Testing register addresses 200000,
      Data path is Unibus  Buffer 0  Xbus loc 0  Buffer 0  Unibus.
    Can't affect it, erroneous value is 37777777777

    Testing register addresses 200000,
      Data path is Unibus  Buffer 1  Xbus loc 0  Buffer 1  Unibus.
    Can't affect it, erroneous value is 37777777777

    Testing register addresses 200000,
      Data path is Unibus  Buffer 2  Xbus loc 0  Buffer 2  Unibus.
    Can't affect it, erroneous value is 37777777777

    Testing register addresses 200000,
      Data path is Unibus  Buffer 3  Xbus loc 0  Buffer 3  Unibus.
    Can't affect it, erroneous value is 37777777777

    Testing register addresses 200000,
      Data path is Unibus  Buffer 4  Xbus loc 0  Buffer 4  Unibus.
    Can't affect it, erroneous value is 37777777777

    Testing register addresses 200000,
      Data path is Unibus  Buffer 5  Xbus loc 0  Buffer 5  Unibus.
    Can't affect it, erroneous value is 37777777777

    Testing register addresses 200000,
      Data path is Unibus  Buffer 6  Xbus loc 0  Buffer 6  Unibus.
    Can't affect it, erroneous value is 37777777777

    Testing register addresses 200000,
      Data path is Unibus  Buffer 7  Xbus loc 0  Buffer 7  Unibus.
    Can't affect it, erroneous value is 37777777777

    Testing register addresses 200000,
      Data path is Unibus  Buffer 10  Xbus loc 0  Buffer 10  Unibus.
    Can't affect it, erroneous value is 37777777777

    Testing register addresses 200000,
      Data path is Unibus  Buffer 11  Xbus loc 0  Buffer 11  Unibus.
    Can't affect it, erroneous value is 37777777777

    Testing register addresses 200000,
      Data path is Unibus  Buffer 12  Xbus loc 0  Buffer 12  Unibus.
    Can't affect it, erroneous value is 37777777777

    Testing register addresses 200000,
      Data path is Unibus  Buffer 13  Xbus loc 0  Buffer 13  Unibus.
    Can't affect it, erroneous value is 37777777777

    Testing register addresses 200000,
      Data path is Unibus  Buffer 14  Xbus loc 0  Buffer 14  Unibus.
    Can't affect it, erroneous value is 37777777777

    Testing register addresses 200000,
      Data path is Unibus  Buffer 15  Xbus loc 0  Buffer 15  Unibus.
    Can't affect it, erroneous value is 37777777777

    Testing register addresses 200000,
      Data path is Unibus  Buffer 16  Xbus loc 0  Buffer 16  Unibus.
    Can't affect it, erroneous value is 37777777777

    Testing register addresses 200000,
      Data path is Unibus  Buffer 17  Xbus loc 0  Buffer 17  Unibus.
    Can't affect it, erroneous value is 37777777777

Running Fast address test               [CC-FAST-ADDRESS-TESTS]
    [Fast address test M-MEM]
    M-MEM LOC 00-31    M-MEM LOC 00-31    M-MEM LOC 00-31    M-MEM LOC 00-31    M-MEM LOC 00-31    M-MEM loc 10-31M-MEM address bit 0 (1 and 0)0-31    M-MEM loc 20-31M-MEM address bit 1 (2 and 0)0-31    M-MEM loc 40-31M-MEM address bit 2 (4 and 0)0-31    M-MEM loc 100-31M-MEM address bit 3 (10 and 0)0-31    M-MEM loc 200-31M-MEM address bit 4 (20 and 0)0-31    M-MEM LOC 370-31    M-MEM LOC 370-31    M-MEM LOC 370-31    M-MEM LOC 370-31    M-MEM LOC 370-31    M-MEM loc 360-31M-MEM address bit 0 (36 and 37)0-31    M-MEM loc 350-31M-MEM address bit 1 (35 and 37)0-31    M-MEM loc 330-31M-MEM address bit 2 (33 and 37)0-31    M-MEM loc 270-31M-MEM address bit 3 (27 and 37)0-31    M-MEM loc 170-31M-MEM address bit 4 (17 and 37)0-31
    [Fast address test A-MEM]
    A-MEM LOC 00-31    A-MEM LOC 00-31    A-MEM LOC 00-31    A-MEM LOC 00-31    A-MEM LOC 00-31    A-MEM LOC 00-31    A-MEM LOC 00-31    A-MEM LOC 00-31    A-MEM LOC 00-31    A-MEM LOC 00-31    A-MEM loc 10-31A-MEM address bit 0 (1 and 0)0-31    A-MEM loc 20-31A-MEM address bit 1 (2 and 0)0-31    A-MEM loc 40-31A-MEM address bit 2 (4 and 0)0-31    A-MEM loc 100-31A-MEM address bit 3 (10 and 0)0-31    A-MEM loc 200-31A-MEM address bit 4 (20 and 0)0-31    A-MEM loc 400-31A-MEM address bit 5 (40 and 0)0-31    A-MEM loc 1000-31A-MEM address bit 6 (100 and 0)0-31    A-MEM loc 2000-31A-MEM address bit 7 (200 and 0)0-31    A-MEM loc 4000-31A-MEM address bit 8 (400 and 0)0-31    A-MEM loc 10000-31A-MEM address bit 9 (1000 and 0)0-31    A-MEM LOC 17770-31    A-MEM LOC 17770-31    A-MEM LOC 17770-31    A-MEM LOC 17770-31    A-MEM LOC 17770-31    A-MEM LOC 17770-31    A-MEM LOC 17770-31    A-MEM LOC 17770-31    A-MEM LOC 17770-31    A-MEM LOC 17770-31    A-MEM loc 17760-31A-MEM address bit 0 (1776 and 1777)0-31    A-MEM loc 17750-31A-MEM address bit 1 (1775 and 1777)0-31    A-MEM loc 17730-31A-MEM address bit 2 (1773 and 1777)0-31    A-MEM loc 17670-31A-MEM address bit 3 (1767 and 1777)0-31    A-MEM loc 17570-31A-MEM address bit 4 (1757 and 1777)0-31    A-MEM loc 17370-31A-MEM address bit 5 (1737 and 1777)0-31    A-MEM loc 16770-31A-MEM address bit 6 (1677 and 1777)0-31    A-MEM loc 15770-31A-MEM address bit 7 (1577 and 1777)0-31    A-MEM loc 13770-31A-MEM address bit 8 (1377 and 1777)0-31    A-MEM loc 7770-31A-MEM address bit 9 (777 and 1777)0-31
    [Fast address test PDL-BUFFER]
    PDL-BUFFER LOC 00-31    PDL-BUFFER LOC 00-31    PDL-BUFFER LOC 00-31    PDL-BUFFER LOC 00-31    PDL-BUFFER LOC 00-31    PDL-BUFFER LOC 00-31    PDL-BUFFER LOC 00-31    PDL-BUFFER LOC 00-31    PDL-BUFFER LOC 00-31    PDL-BUFFER LOC 00-31    PDL-BUFFER loc 10-31PDL-BUFFER address bit 0 (1 and 0)0-31    PDL-BUFFER loc 20-31PDL-BUFFER address bit 1 (2 and 0)0-31    PDL-BUFFER loc 40-31PDL-BUFFER address bit 2 (4 and 0)0-31    PDL-BUFFER loc 100-31PDL-BUFFER address bit 3 (10 and 0)0-31    PDL-BUFFER loc 200-31PDL-BUFFER address bit 4 (20 and 0)0-31    PDL-BUFFER loc 400-31PDL-BUFFER address bit 5 (40 and 0)0-31    PDL-BUFFER loc 1000-31PDL-BUFFER address bit 6 (100 and 0)0-31    PDL-BUFFER loc 2000-31PDL-BUFFER address bit 7 (200 and 0)0-31    PDL-BUFFER loc 4000-31PDL-BUFFER address bit 8 (400 and 0)0-31    PDL-BUFFER loc 10000-31PDL-BUFFER address bit 9 (1000 and 0)0-31    PDL-BUFFER LOC 17770-31    PDL-BUFFER LOC 17770-31    PDL-BUFFER LOC 17770-31    PDL-BUFFER LOC 17770-31    PDL-BUFFER LOC 17770-31    PDL-BUFFER LOC 17770-31    PDL-BUFFER LOC 17770-31    PDL-BUFFER LOC 17770-31    PDL-BUFFER LOC 17770-31    PDL-BUFFER LOC 17770-31    PDL-BUFFER loc 17760-31PDL-BUFFER address bit 0 (1776 and 1777)0-31    PDL-BUFFER loc 17750-31PDL-BUFFER address bit 1 (1775 and 1777)0-31    PDL-BUFFER loc 17730-31PDL-BUFFER address bit 2 (1773 and 1777)0-31    PDL-BUFFER loc 17670-31PDL-BUFFER address bit 3 (1767 and 1777)0-31    PDL-BUFFER loc 17570-31PDL-BUFFER address bit 4 (1757 and 1777)0-31    PDL-BUFFER loc 17370-31PDL-BUFFER address bit 5 (1737 and 1777)0-31    PDL-BUFFER loc 16770-31PDL-BUFFER address bit 6 (1677 and 1777)0-31    PDL-BUFFER loc 15770-31PDL-BUFFER address bit 7 (1577 and 1777)0-31    PDL-BUFFER loc 13770-31PDL-BUFFER address bit 8 (1377 and 1777)0-31    PDL-BUFFER loc 7770-31PDL-BUFFER address bit 9 (777 and 1777)0-31
    [Fast address test C-MEM]
    C-MEM LOC 00-47    C-MEM LOC 00-47    C-MEM LOC 00-47    C-MEM LOC 00-47    C-MEM LOC 00-47    C-MEM LOC 00-47    C-MEM LOC 00-47    C-MEM LOC 00-47    C-MEM LOC 00-47    C-MEM LOC 00-47    C-MEM LOC 00-47    C-MEM LOC 00-47    C-MEM LOC 00-47    C-MEM LOC 00-47    C-MEM loc 10-47C-MEM address bit 0 (1 and 0)0-47    C-MEM loc 20-47C-MEM address bit 1 (2 and 0)0-47    C-MEM loc 40-47C-MEM address bit 2 (4 and 0)0-47    C-MEM loc 100-47C-MEM address bit 3 (10 and 0)0-47    C-MEM loc 200-47C-MEM address bit 4 (20 and 0)0-47    C-MEM loc 400-47C-MEM address bit 5 (40 and 0)0-47    C-MEM loc 1000-47C-MEM address bit 6 (100 and 0)0-47    C-MEM loc 2000-47C-MEM address bit 7 (200 and 0)0-47    C-MEM loc 4000-47C-MEM address bit 8 (400 and 0)0-47    C-MEM loc 10000-47C-MEM address bit 9 (1000 and 0)0-47    C-MEM loc 20000-47C-MEM address bit 10 (2000 and 0)0-47    C-MEM loc 40000-47C-MEM address bit 11 (4000 and 0)0-47    C-MEM loc 100000-47C-MEM address bit 12 (10000 and 0)0-47    C-MEM loc 200000-47C-MEM address bit 13 (20000 and 0)0-47
    [Fast address test D-MEM]
    D-MEM loc 10-13    D-MEM LOC 014, 15D-MEM address bit 0 (1 and 0)0-13    D-MEM loc 20-13    D-MEM LOC 014, 15D-MEM address bit 1 (2 and 0)0-13    D-MEM loc 40-13    D-MEM LOC 014, 15D-MEM address bit 2 (4 and 0)0-13    D-MEM loc 100-13    D-MEM LOC 014, 15D-MEM address bit 3 (10 and 0)0-13    D-MEM loc 200-13    D-MEM LOC 014, 15D-MEM address bit 4 (20 and 0)0-13    D-MEM loc 400-13    D-MEM LOC 014, 15D-MEM address bit 5 (40 and 0)0-13    D-MEM loc 1000-13    D-MEM LOC 014, 15D-MEM address bit 6 (100 and 0)0-13    D-MEM loc 2000-13    D-MEM LOC 014, 15D-MEM address bit 7 (200 and 0)0-13    D-MEM loc 4000-13    D-MEM LOC 014, 15D-MEM address bit 8 (400 and 0)0-13    D-MEM loc 10000-13    D-MEM LOC 014, 15D-MEM address bit 9 (1000 and 0)0-13    D-MEM loc 20000-13    D-MEM LOC 014, 15D-MEM address bit 10 (2000 and 0)0-13    D-MEM loc 114, 15    D-MEM LOC 00-13D-MEM address bit 0 (1 and 0)14, 15    D-MEM loc 214, 15    D-MEM LOC 00-13D-MEM address bit 1 (2 and 0)14, 15    D-MEM loc 414, 15    D-MEM LOC 00-13D-MEM address bit 2 (4 and 0)14, 15    D-MEM loc 1014, 15    D-MEM LOC 00-13D-MEM address bit 3 (10 and 0)14, 15    D-MEM loc 2014, 15    D-MEM LOC 00-13D-MEM address bit 4 (20 and 0)14, 15    D-MEM loc 4014, 15    D-MEM LOC 00-13D-MEM address bit 5 (40 and 0)14, 15    D-MEM loc 10014, 15    D-MEM LOC 00-13D-MEM address bit 6 (100 and 0)14, 15    D-MEM loc 20014, 15    D-MEM LOC 00-13D-MEM address bit 7 (200 and 0)14, 15    D-MEM loc 40014, 15    D-MEM LOC 00-13D-MEM address bit 8 (400 and 0)14, 15    D-MEM loc 100014, 15    D-MEM LOC 00-13D-MEM address bit 9 (1000 and 0)14, 15    D-MEM loc 200014, 15    D-MEM LOC 00-13D-MEM address bit 10 (2000 and 0)14, 15    D-MEM loc 37760-13    D-MEM LOC 377714, 15D-MEM address bit 0 (3776 and 3777)0-13    D-MEM loc 37750-13    D-MEM LOC 377714, 15D-MEM address bit 1 (3775 and 3777)0-13    D-MEM loc 37730-13    D-MEM LOC 377714, 15D-MEM address bit 2 (3773 and 3777)0-13    D-MEM loc 37670-13    D-MEM LOC 377714, 15D-MEM address bit 3 (3767 and 3777)0-13    D-MEM loc 37570-13    D-MEM LOC 377714, 15D-MEM address bit 4 (3757 and 3777)0-13    D-MEM loc 37370-13    D-MEM LOC 377714, 15D-MEM address bit 5 (3737 and 3777)0-13    D-MEM loc 36770-13    D-MEM LOC 377714, 15D-MEM address bit 6 (3677 and 3777)0-13    D-MEM loc 35770-13    D-MEM LOC 377714, 15D-MEM address bit 7 (3577 and 3777)0-13    D-MEM loc 33770-13    D-MEM LOC 377714, 15D-MEM address bit 8 (3377 and 3777)0-13    D-MEM loc 27770-13    D-MEM LOC 377714, 15D-MEM address bit 9 (2777 and 3777)0-13    D-MEM loc 17770-13    D-MEM LOC 377714, 15D-MEM address bit 10 (1777 and 3777)0-13    D-MEM loc 377614, 15    D-MEM LOC 37770-13D-MEM address bit 0 (3776 and 3777)14, 15    D-MEM loc 377514, 15    D-MEM LOC 37770-13D-MEM address bit 1 (3775 and 3777)14, 15    D-MEM loc 377314, 15    D-MEM LOC 37770-13D-MEM address bit 2 (3773 and 3777)14, 15    D-MEM loc 376714, 15    D-MEM LOC 37770-13D-MEM address bit 3 (3767 and 3777)14, 15    D-MEM loc 375714, 15    D-MEM LOC 37770-13D-MEM address bit 4 (3757 and 3777)14, 15    D-MEM loc 373714, 15    D-MEM LOC 37770-13D-MEM address bit 5 (3737 and 3777)14, 15    D-MEM loc 367714, 15    D-MEM LOC 37770-13D-MEM address bit 6 (3677 and 3777)14, 15    D-MEM loc 357714, 15    D-MEM LOC 37770-13D-MEM address bit 7 (3577 and 3777)14, 15    D-MEM loc 337714, 15    D-MEM LOC 37770-13D-MEM address bit 8 (3377 and 3777)14, 15    D-MEM loc 277714, 15    D-MEM LOC 37770-13D-MEM address bit 9 (2777 and 3777)14, 15    D-MEM loc 177714, 15    D-MEM LOC 37770-13D-MEM address bit 10 (1777 and 3777)14, 15
    [Fast address test SPC]
    SPC LOC 00-18    SPC LOC 00-18    SPC LOC 00-18    SPC LOC 00-18    SPC LOC 00-18    SPC loc 10-18SPC address bit 0 (1 and 0)0-18    SPC loc 20-18SPC address bit 1 (2 and 0)0-18    SPC loc 40-18SPC address bit 2 (4 and 0)0-18    SPC loc 100-18SPC address bit 3 (10 and 0)0-18    SPC loc 200-18SPC address bit 4 (20 and 0)0-18    SPC LOC 370-18    SPC LOC 370-18    SPC LOC 370-18    SPC LOC 370-18    SPC LOC 370-18    SPC loc 360-18SPC address bit 0 (36 and 37)0-18    SPC loc 350-18SPC address bit 1 (35 and 37)0-18    SPC loc 330-18SPC address bit 2 (33 and 37)0-18    SPC loc 270-18SPC address bit 3 (27 and 37)0-18    SPC loc 170-18SPC address bit 4 (17 and 37)0-18
    [Fast address test LEVEL-1-MAP]
    LEVEL-1-MAP LOC 00-4    LEVEL-1-MAP LOC 00-4    LEVEL-1-MAP LOC 00-4    LEVEL-1-MAP LOC 00-4    LEVEL-1-MAP LOC 00-4    LEVEL-1-MAP LOC 00-4    LEVEL-1-MAP LOC 00-4    LEVEL-1-MAP LOC 00-4    LEVEL-1-MAP LOC 00-4    LEVEL-1-MAP LOC 00-4    LEVEL-1-MAP LOC 00-4    LEVEL-1-MAP loc 10-4LEVEL-1-MAP address bit 0 (1 and 0)0-4    LEVEL-1-MAP loc 20-4LEVEL-1-MAP address bit 1 (2 and 0)0-4    LEVEL-1-MAP loc 40-4LEVEL-1-MAP address bit 2 (4 and 0)0-4    LEVEL-1-MAP loc 100-4LEVEL-1-MAP address bit 3 (10 and 0)0-4    LEVEL-1-MAP loc 200-4LEVEL-1-MAP address bit 4 (20 and 0)0-4    LEVEL-1-MAP loc 400-4LEVEL-1-MAP address bit 5 (40 and 0)0-4    LEVEL-1-MAP loc 1000-4LEVEL-1-MAP address bit 6 (100 and 0)0-4    LEVEL-1-MAP loc 2000-4LEVEL-1-MAP address bit 7 (200 and 0)0-4    LEVEL-1-MAP loc 4000-4LEVEL-1-MAP address bit 8 (400 and 0)0-4    LEVEL-1-MAP loc 10000-4LEVEL-1-MAP address bit 9 (1000 and 0)0-4    LEVEL-1-MAP loc 20000-4LEVEL-1-MAP address bit 10 (2000 and 0)0-4    LEVEL-1-MAP LOC 37770-4    LEVEL-1-MAP LOC 37770-4    LEVEL-1-MAP LOC 37770-4    LEVEL-1-MAP LOC 37770-4    LEVEL-1-MAP LOC 37770-4    LEVEL-1-MAP LOC 37770-4    LEVEL-1-MAP LOC 37770-4    LEVEL-1-MAP LOC 37770-4    LEVEL-1-MAP LOC 37770-4    LEVEL-1-MAP LOC 37770-4    LEVEL-1-MAP LOC 37770-4    LEVEL-1-MAP loc 37760-4LEVEL-1-MAP address bit 0 (3776 and 3777)0-4    LEVEL-1-MAP loc 37750-4LEVEL-1-MAP address bit 1 (3775 and 3777)0-4    LEVEL-1-MAP loc 37730-4LEVEL-1-MAP address bit 2 (3773 and 3777)0-4    LEVEL-1-MAP loc 37670-4LEVEL-1-MAP address bit 3 (3767 and 3777)0-4    LEVEL-1-MAP loc 37570-4LEVEL-1-MAP address bit 4 (3757 and 3777)0-4    LEVEL-1-MAP loc 37370-4LEVEL-1-MAP address bit 5 (3737 and 3777)0-4    LEVEL-1-MAP loc 36770-4LEVEL-1-MAP address bit 6 (3677 and 3777)0-4    LEVEL-1-MAP loc 35770-4LEVEL-1-MAP address bit 7 (3577 and 3777)0-4    LEVEL-1-MAP loc 33770-4LEVEL-1-MAP address bit 8 (3377 and 3777)0-4    LEVEL-1-MAP loc 27770-4LEVEL-1-MAP address bit 9 (2777 and 3777)0-4    LEVEL-1-MAP loc 17770-4LEVEL-1-MAP address bit 10 (1777 and 3777)0-4
    [Fast address test LEVEL-2-MAP]
    LEVEL-2-MAP LOC 00-23    LEVEL-2-MAP LOC 00-23    LEVEL-2-MAP LOC 00-23    LEVEL-2-MAP LOC 00-23    LEVEL-2-MAP LOC 00-23    LEVEL-2-MAP LOC 00-23    LEVEL-2-MAP LOC 00-23    LEVEL-2-MAP LOC 00-23    LEVEL-2-MAP LOC 00-23    LEVEL-2-MAP LOC 00-23    LEVEL-2-MAP loc 10-23LEVEL-2-MAP address bit 0 (1 and 0)0-23    LEVEL-2-MAP loc 20-23LEVEL-2-MAP address bit 1 (2 and 0)0-23    LEVEL-2-MAP loc 40-23LEVEL-2-MAP address bit 2 (4 and 0)0-23    LEVEL-2-MAP loc 100-23LEVEL-2-MAP address bit 3 (10 and 0)0-23    LEVEL-2-MAP loc 200-23LEVEL-2-MAP address bit 4 (20 and 0)0-23    LEVEL-2-MAP loc 400-23LEVEL-2-MAP address bit 5 (40 and 0)0-23    LEVEL-2-MAP loc 1000-23LEVEL-2-MAP address bit 6 (100 and 0)0-23    LEVEL-2-MAP loc 2000-23LEVEL-2-MAP address bit 7 (200 and 0)0-23    LEVEL-2-MAP loc 4000-23LEVEL-2-MAP address bit 8 (400 and 0)0-23    LEVEL-2-MAP loc 10000-23LEVEL-2-MAP address bit 9 (1000 and 0)0-23    LEVEL-2-MAP LOC 17770-23    LEVEL-2-MAP LOC 17770-23    LEVEL-2-MAP LOC 17770-23    LEVEL-2-MAP LOC 17770-23    LEVEL-2-MAP LOC 17770-23    LEVEL-2-MAP LOC 17770-23    LEVEL-2-MAP LOC 17770-23    LEVEL-2-MAP LOC 17770-23    LEVEL-2-MAP LOC 17770-23    LEVEL-2-MAP LOC 17770-23    LEVEL-2-MAP loc 17760-23LEVEL-2-MAP address bit 0 (1776 and 1777)0-23    LEVEL-2-MAP loc 17750-23LEVEL-2-MAP address bit 1 (1775 and 1777)0-23    LEVEL-2-MAP loc 17730-23LEVEL-2-MAP address bit 2 (1773 and 1777)0-23    LEVEL-2-MAP loc 17670-23LEVEL-2-MAP address bit 3 (1767 and 1777)0-23    LEVEL-2-MAP loc 17570-23LEVEL-2-MAP address bit 4 (1757 and 1777)0-23    LEVEL-2-MAP loc 17370-23LEVEL-2-MAP address bit 5 (1737 and 1777)0-23    LEVEL-2-MAP loc 16770-23LEVEL-2-MAP address bit 6 (1677 and 1777)0-23    LEVEL-2-MAP loc 15770-23LEVEL-2-MAP address bit 7 (1577 and 1777)0-23    LEVEL-2-MAP loc 13770-23LEVEL-2-MAP address bit 8 (1377 and 1777)0-23    LEVEL-2-MAP loc 7770-23LEVEL-2-MAP address bit 9 (777 and 1777)0-23
    [Fast address test UNIBUS-MAP]
    UNIBUS-MAP LOC 00-15    UNIBUS-MAP LOC 00-15    UNIBUS-MAP LOC 00-15    UNIBUS-MAP LOC 00-15    UNIBUS-MAP loc 10-15UNIBUS-MAP address bit 0 (1 and 0)0-15    UNIBUS-MAP loc 20-15UNIBUS-MAP address bit 1 (2 and 0)0-15    UNIBUS-MAP loc 40-15UNIBUS-MAP address bit 2 (4 and 0)0-15    UNIBUS-MAP loc 100-15UNIBUS-MAP address bit 3 (10 and 0)0-15    UNIBUS-MAP LOC 170-15    UNIBUS-MAP LOC 170-15    UNIBUS-MAP LOC 170-15    UNIBUS-MAP LOC 170-15    UNIBUS-MAP loc 160-15UNIBUS-MAP address bit 0 (16 and 17)0-15    UNIBUS-MAP loc 150-15UNIBUS-MAP address bit 1 (15 and 17)0-15    UNIBUS-MAP loc 130-15UNIBUS-MAP address bit 2 (13 and 17)0-15    UNIBUS-MAP loc 70-15UNIBUS-MAP address bit 3 (7 and 17)0-15

Running C-MEM Banks Fast Address test   [CC-FAST-ADDRESS-TEST-C-MEM-BANKS]
    CMEM-BANK 0 LOC 00-47    CMEM-BANK 0 LOC 00-47    CMEM-BANK 0 LOC 00-47    CMEM-BANK 0 LOC 00-47    CMEM-BANK 0 LOC 00-47    CMEM-BANK 0 LOC 00-47    CMEM-BANK 0 LOC 00-47    CMEM-BANK 0 LOC 00-47    CMEM-BANK 0 LOC 00-47    CMEM-BANK 0 LOC 00-47    CMEM-BANK 0 LOC 00-47    CMEM-BANK 0 LOC 00-47    CMEM-BANK 0 loc 10-47CMEM-BANK 0 address bit 0 (1 and 0)0-47    CMEM-BANK 0 loc 20-47CMEM-BANK 0 address bit 1 (2 and 0)0-47    CMEM-BANK 0 loc 40-47CMEM-BANK 0 address bit 2 (4 and 0)0-47    CMEM-BANK 0 loc 100-47CMEM-BANK 0 address bit 3 (10 and 0)0-47    CMEM-BANK 0 loc 200-47CMEM-BANK 0 address bit 4 (20 and 0)0-47    CMEM-BANK 0 loc 400-47CMEM-BANK 0 address bit 5 (40 and 0)0-47    CMEM-BANK 0 loc 1000-47CMEM-BANK 0 address bit 6 (100 and 0)0-47    CMEM-BANK 0 loc 2000-47CMEM-BANK 0 address bit 7 (200 and 0)0-47    CMEM-BANK 0 loc 4000-47CMEM-BANK 0 address bit 8 (400 and 0)0-47    CMEM-BANK 0 loc 10000-47CMEM-BANK 0 address bit 9 (1000 and 0)0-47    CMEM-BANK 0 loc 20000-47CMEM-BANK 0 address bit 10 (2000 and 0)0-47    CMEM-BANK 0 loc 40000-47CMEM-BANK 0 address bit 11 (4000 and 0)0-47    CMEM-BANK 0 LOC 77770-47    CMEM-BANK 0 LOC 77770-47    CMEM-BANK 0 LOC 77770-47    CMEM-BANK 0 LOC 77770-47    CMEM-BANK 0 LOC 77770-47    CMEM-BANK 0 LOC 77770-47    CMEM-BANK 0 LOC 77770-47    CMEM-BANK 0 LOC 77770-47    CMEM-BANK 0 LOC 77770-47    CMEM-BANK 0 LOC 77770-47    CMEM-BANK 0 LOC 77770-47    CMEM-BANK 0 LOC 77770-47    CMEM-BANK 0 loc 77760-47CMEM-BANK 0 address bit 0 (7776 and 7777)0-47    CMEM-BANK 0 loc 77750-47CMEM-BANK 0 address bit 1 (7775 and 7777)0-47    CMEM-BANK 0 loc 77730-47CMEM-BANK 0 address bit 2 (7773 and 7777)0-47    CMEM-BANK 0 loc 77670-47CMEM-BANK 0 address bit 3 (7767 and 7777)0-47    CMEM-BANK 0 loc 77570-47CMEM-BANK 0 address bit 4 (7757 and 7777)0-47    CMEM-BANK 0 loc 77370-47CMEM-BANK 0 address bit 5 (7737 and 7777)0-47    CMEM-BANK 0 loc 76770-47CMEM-BANK 0 address bit 6 (7677 and 7777)0-47    CMEM-BANK 0 loc 75770-47CMEM-BANK 0 address bit 7 (7577 and 7777)0-47    CMEM-BANK 0 loc 73770-47CMEM-BANK 0 address bit 8 (7377 and 7777)0-47    CMEM-BANK 0 loc 67770-47CMEM-BANK 0 address bit 9 (6777 and 7777)0-47    CMEM-BANK 0 loc 57770-47CMEM-BANK 0 address bit 10 (5777 and 7777)0-47    CMEM-BANK 0 loc 37770-47CMEM-BANK 0 address bit 11 (3777 and 7777)0-47    CMEM-BANK 1 LOC 00-47    CMEM-BANK 1 LOC 00-47    CMEM-BANK 1 LOC 00-47    CMEM-BANK 1 LOC 00-47    CMEM-BANK 1 LOC 00-47    CMEM-BANK 1 LOC 00-47    CMEM-BANK 1 LOC 00-47    CMEM-BANK 1 LOC 00-47    CMEM-BANK 1 LOC 00-47    CMEM-BANK 1 LOC 00-47    CMEM-BANK 1 LOC 00-47    CMEM-BANK 1 LOC 00-47    CMEM-BANK 1 loc 10-47CMEM-BANK 1 address bit 0 (1 and 0)0-47    CMEM-BANK 1 loc 20-47CMEM-BANK 1 address bit 1 (2 and 0)0-47    CMEM-BANK 1 loc 40-47CMEM-BANK 1 address bit 2 (4 and 0)0-47    CMEM-BANK 1 loc 100-47CMEM-BANK 1 address bit 3 (10 and 0)0-47    CMEM-BANK 1 loc 200-47CMEM-BANK 1 address bit 4 (20 and 0)0-47    CMEM-BANK 1 loc 400-47CMEM-BANK 1 address bit 5 (40 and 0)0-47    CMEM-BANK 1 loc 1000-47CMEM-BANK 1 address bit 6 (100 and 0)0-47    CMEM-BANK 1 loc 2000-47CMEM-BANK 1 address bit 7 (200 and 0)0-47    CMEM-BANK 1 loc 4000-47CMEM-BANK 1 address bit 8 (400 and 0)0-47    CMEM-BANK 1 loc 10000-47CMEM-BANK 1 address bit 9 (1000 and 0)0-47    CMEM-BANK 1 loc 20000-47CMEM-BANK 1 address bit 10 (2000 and 0)0-47    CMEM-BANK 1 loc 40000-47CMEM-BANK 1 address bit 11 (4000 and 0)0-47    CMEM-BANK 1 LOC 77770-47    CMEM-BANK 1 LOC 77770-47    CMEM-BANK 1 LOC 77770-47    CMEM-BANK 1 LOC 77770-47    CMEM-BANK 1 LOC 77770-47    CMEM-BANK 1 LOC 77770-47    CMEM-BANK 1 LOC 77770-47    CMEM-BANK 1 LOC 77770-47    CMEM-BANK 1 LOC 77770-47    CMEM-BANK 1 LOC 77770-47    CMEM-BANK 1 LOC 77770-47    CMEM-BANK 1 LOC 77770-47    CMEM-BANK 1 loc 77760-47CMEM-BANK 1 address bit 0 (7776 and 7777)0-47    CMEM-BANK 1 loc 77750-47CMEM-BANK 1 address bit 1 (7775 and 7777)0-47    CMEM-BANK 1 loc 77730-47CMEM-BANK 1 address bit 2 (7773 and 7777)0-47    CMEM-BANK 1 loc 77670-47CMEM-BANK 1 address bit 3 (7767 and 7777)0-47    CMEM-BANK 1 loc 77570-47CMEM-BANK 1 address bit 4 (7757 and 7777)0-47    CMEM-BANK 1 loc 77370-47CMEM-BANK 1 address bit 5 (7737 and 7777)0-47    CMEM-BANK 1 loc 76770-47CMEM-BANK 1 address bit 6 (7677 and 7777)0-47    CMEM-BANK 1 loc 75770-47CMEM-BANK 1 address bit 7 (7577 and 7777)0-47    CMEM-BANK 1 loc 73770-47CMEM-BANK 1 address bit 8 (7377 and 7777)0-47    CMEM-BANK 1 loc 67770-47CMEM-BANK 1 address bit 9 (6777 and 7777)0-47    CMEM-BANK 1 loc 57770-47CMEM-BANK 1 address bit 10 (5777 and 7777)0-47    CMEM-BANK 1 loc 37770-47CMEM-BANK 1 address bit 11 (3777 and 7777)0-47    CMEM-BANK 2 LOC 00-47    CMEM-BANK 2 LOC 00-47    CMEM-BANK 2 LOC 00-47    CMEM-BANK 2 LOC 00-47    CMEM-BANK 2 LOC 00-47    CMEM-BANK 2 LOC 00-47    CMEM-BANK 2 LOC 00-47    CMEM-BANK 2 LOC 00-47    CMEM-BANK 2 LOC 00-47    CMEM-BANK 2 LOC 00-47    CMEM-BANK 2 LOC 00-47    CMEM-BANK 2 LOC 00-47    CMEM-BANK 2 loc 10-47CMEM-BANK 2 address bit 0 (1 and 0)0-47    CMEM-BANK 2 loc 20-47CMEM-BANK 2 address bit 1 (2 and 0)0-47    CMEM-BANK 2 loc 40-47CMEM-BANK 2 address bit 2 (4 and 0)0-47    CMEM-BANK 2 loc 100-47CMEM-BANK 2 address bit 3 (10 and 0)0-47    CMEM-BANK 2 loc 200-47CMEM-BANK 2 address bit 4 (20 and 0)0-47    CMEM-BANK 2 loc 400-47CMEM-BANK 2 address bit 5 (40 and 0)0-47    CMEM-BANK 2 loc 1000-47CMEM-BANK 2 address bit 6 (100 and 0)0-47    CMEM-BANK 2 loc 2000-47CMEM-BANK 2 address bit 7 (200 and 0)0-47    CMEM-BANK 2 loc 4000-47CMEM-BANK 2 address bit 8 (400 and 0)0-47    CMEM-BANK 2 loc 10000-47CMEM-BANK 2 address bit 9 (1000 and 0)0-47    CMEM-BANK 2 loc 20000-47CMEM-BANK 2 address bit 10 (2000 and 0)0-47    CMEM-BANK 2 loc 40000-47CMEM-BANK 2 address bit 11 (4000 and 0)0-47    CMEM-BANK 2 LOC 77770-47    CMEM-BANK 2 LOC 77770-47    CMEM-BANK 2 LOC 77770-47    CMEM-BANK 2 LOC 77770-47    CMEM-BANK 2 LOC 77770-47    CMEM-BANK 2 LOC 77770-47    CMEM-BANK 2 LOC 77770-47    CMEM-BANK 2 LOC 77770-47    CMEM-BANK 2 LOC 77770-47    CMEM-BANK 2 LOC 77770-47    CMEM-BANK 2 LOC 77770-47    CMEM-BANK 2 LOC 77770-47    CMEM-BANK 2 loc 77760-47CMEM-BANK 2 address bit 0 (7776 and 7777)0-47    CMEM-BANK 2 loc 77750-47CMEM-BANK 2 address bit 1 (7775 and 7777)0-47    CMEM-BANK 2 loc 77730-47CMEM-BANK 2 address bit 2 (7773 and 7777)0-47    CMEM-BANK 2 loc 77670-47CMEM-BANK 2 address bit 3 (7767 and 7777)0-47    CMEM-BANK 2 loc 77570-47CMEM-BANK 2 address bit 4 (7757 and 7777)0-47    CMEM-BANK 2 loc 77370-47CMEM-BANK 2 address bit 5 (7737 and 7777)0-47    CMEM-BANK 2 loc 76770-47CMEM-BANK 2 address bit 6 (7677 and 7777)0-47    CMEM-BANK 2 loc 75770-47CMEM-BANK 2 address bit 7 (7577 and 7777)0-47    CMEM-BANK 2 loc 73770-47CMEM-BANK 2 address bit 8 (7377 and 7777)0-47    CMEM-BANK 2 loc 67770-47CMEM-BANK 2 address bit 9 (6777 and 7777)0-47    CMEM-BANK 2 loc 57770-47CMEM-BANK 2 address bit 10 (5777 and 7777)0-47    CMEM-BANK 2 loc 37770-47CMEM-BANK 2 address bit 11 (3777 and 7777)0-47

Running SPC Pointer test                [CC-TEST-SPC-POINTER]

SPC PTR INCREMENT FAILED, WAS 37, SHOULD BE 0
SPC PTR INCREMENT FAILED, WAS 37, SHOULD BE 1
SPC PTR INCREMENT FAILED, WAS 37, SHOULD BE 2
SPC PTR INCREMENT FAILED, WAS 37, SHOULD BE 3
SPC PTR INCREMENT FAILED, WAS 37, SHOULD BE 4
SPC PTR INCREMENT FAILED, WAS 37, SHOULD BE 5
SPC PTR INCREMENT FAILED, WAS 37, SHOULD BE 6
SPC PTR INCREMENT FAILED, WAS 37, SHOULD BE 7
SPC PTR INCREMENT FAILED, WAS 37, SHOULD BE 10
SPC PTR INCREMENT FAILED, WAS 37, SHOULD BE 11
SPC PTR INCREMENT FAILED, WAS 37, SHOULD BE 12
SPC PTR INCREMENT FAILED, WAS 37, SHOULD BE 13
SPC PTR INCREMENT FAILED, WAS 37, SHOULD BE 14
SPC PTR INCREMENT FAILED, WAS 37, SHOULD BE 15
SPC PTR INCREMENT FAILED, WAS 37, SHOULD BE 16
SPC PTR INCREMENT FAILED, WAS 37, SHOULD BE 17
SPC PTR INCREMENT FAILED, WAS 37, SHOULD BE 20
SPC PTR INCREMENT FAILED, WAS 37, SHOULD BE 21
SPC PTR INCREMENT FAILED, WAS 37, SHOULD BE 22
SPC PTR INCREMENT FAILED, WAS 37, SHOULD BE 23
SPC PTR INCREMENT FAILED, WAS 37, SHOULD BE 24
SPC PTR INCREMENT FAILED, WAS 37, SHOULD BE 25
SPC PTR INCREMENT FAILED, WAS 37, SHOULD BE 26
SPC PTR INCREMENT FAILED, WAS 37, SHOULD BE 27
SPC PTR INCREMENT FAILED, WAS 37, SHOULD BE 30
SPC PTR INCREMENT FAILED, WAS 37, SHOULD BE 31
SPC PTR INCREMENT FAILED, WAS 37, SHOULD BE 32
SPC PTR INCREMENT FAILED, WAS 37, SHOULD BE 33
SPC PTR INCREMENT FAILED, WAS 37, SHOULD BE 34
SPC PTR INCREMENT FAILED, WAS 37, SHOULD BE 35
SPC PTR INCREMENT FAILED, WAS 37, SHOULD BE 36
SPC PTR DECREMENT FAILED, WAS 37, SHOULD BE 36
SPC PTR DECREMENT FAILED, WAS 37, SHOULD BE 35
SPC PTR DECREMENT FAILED, WAS 37, SHOULD BE 34
SPC PTR DECREMENT FAILED, WAS 37, SHOULD BE 33
SPC PTR DECREMENT FAILED, WAS 37, SHOULD BE 32
SPC PTR DECREMENT FAILED, WAS 37, SHOULD BE 31
SPC PTR DECREMENT FAILED, WAS 37, SHOULD BE 30
SPC PTR DECREMENT FAILED, WAS 37, SHOULD BE 27
SPC PTR DECREMENT FAILED, WAS 37, SHOULD BE 26
SPC PTR DECREMENT FAILED, WAS 37, SHOULD BE 25
SPC PTR DECREMENT FAILED, WAS 37, SHOULD BE 24
SPC PTR DECREMENT FAILED, WAS 37, SHOULD BE 23
SPC PTR DECREMENT FAILED, WAS 37, SHOULD BE 22
SPC PTR DECREMENT FAILED, WAS 37, SHOULD BE 21
SPC PTR DECREMENT FAILED, WAS 37, SHOULD BE 20
SPC PTR DECREMENT FAILED, WAS 37, SHOULD BE 17
SPC PTR DECREMENT FAILED, WAS 37, SHOULD BE 16
SPC PTR DECREMENT FAILED, WAS 37, SHOULD BE 15
SPC PTR DECREMENT FAILED, WAS 37, SHOULD BE 14
SPC PTR DECREMENT FAILED, WAS 37, SHOULD BE 13
SPC PTR DECREMENT FAILED, WAS 37, SHOULD BE 12
SPC PTR DECREMENT FAILED, WAS 37, SHOULD BE 11
SPC PTR DECREMENT FAILED, WAS 37, SHOULD BE 10
SPC PTR DECREMENT FAILED, WAS 37, SHOULD BE 7
SPC PTR DECREMENT FAILED, WAS 37, SHOULD BE 6
SPC PTR DECREMENT FAILED, WAS 37, SHOULD BE 5
SPC PTR DECREMENT FAILED, WAS 37, SHOULD BE 4
SPC PTR DECREMENT FAILED, WAS 37, SHOULD BE 3
SPC PTR DECREMENT FAILED, WAS 37, SHOULD BE 2
SPC PTR DECREMENT FAILED, WAS 37, SHOULD BE 1
SPC PTR DECREMENT FAILED, WAS 37, SHOULD BE 0

Running Shifter logic test              [CC-TEST-SHIFTER-LOGIC]
<Error occurred here.>
;Back to top level in Lisp Listener 1.
(dribble-end
)

All is dead.  Nothing works.  Death descends on CADR-8.

                      Mark Alan Peot (MARK@XX)
 8-May-84 08:14:59-EDT,444;000000000000
Received: from SCRC-TENEX by MIT-OZ via Chaosnet; 8 May 84 08:14-EDT
Date:  8 May 1984 0812-EDT
From: David C. Plummer <DCP@SCRC-TENEX>
To: HQM@MIT-OZ
cc: BUG-LISPM@MIT-OZ
In-Reply-To: The message of Tuesday, 8 May 1984, 00:48-EDT from Henry Minsky <HQM at MIT-OZ>

What makes you think the debug cables are really hooked up and
working?  As far as I can tell, you are always reading 1s over the
cable.

Or is this a joke?
-------
 8-May-84 10:48:11-EDT,4116;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 8 May 84 10:46-EDT
Date: Tuesday, 8 May 1984, 10:43-EDT
From: Richard Mark Soley <Soley at MIT-MC>
To: BUG-LISPM at MIT-OZ, BUG-BETA-TEST at MIT-OZ

In Release 5.0 [Beta Test rev 7], FEP 18, Rel 5.7 MEF Version IV, on MEF Mahogany (3600):

Attempting to reach a file on MIT-FLA (on subnet 26. speaking TCP-only)
from MIT-MAHOGANY (on subnet 60. speaking CHAOS-only), got this error.
Was quite suprised since it got the connection (through MC), logged in
-- and then failed.

>>Error: Unimplemented MODE type.
While in the function (:DEFUN-METHOD FS:TCP-FTP-CHECK-COMMAND-RESPONSE)  (:METHOD FS:TCP-FTP-CONN :LOGIN)  (:DEFUN-METHOD FS:TCP-FTP-VALIDATE-CONN)

(:DEFUN-METHOD FS:TCP-FTP-CHECK-COMMAND-RESPONSE):  (P.C. = 170)
   Arg 0 (SELF): #<TCP-FTP-CONN 12350470>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:TCP-FTP-CONN -- 8. IV's, 0. FL's 113133011>
   Arg 2 (EXPECTED-VALUE): 200.
   Arg 3 (CTL-STRING): "MODE B"
   Rest arg (ARGS): NIL
   Local 5 (OLD-STATE): :FREE
   Local 6 (NUM): 502.
   Local 7 (LINE): "502 Unimplemented MODE type."
   Local 8 (ELEM): (502. FS:TCP-FTP-UNIMPLEMENTED-COMMAND FS:UNKNOWN-OPERATION)
   Local 9 (CONDITION): NIL
   Local 10: "MODE B"
   Local 11: #<CASE-HANDLER 77537457>
   Local 12: (#<CASE-HANDLER 77537563> #<CASE-HANDLER 77334163> #<BIND-HANDLER 77537501> #<BIND-HANDLER 77535523>)
   Local 13: (#<CASE-HANDLER 77537457> #<CASE-HANDLER 77537563> #<CASE-HANDLER 77334163> #<BIND-HANDLER 77537501> #<BIND-HANDLER 77535523>)

(:METHOD FS:TCP-FTP-CONN :LOGIN):  (P.C. = 116)
   Arg 0 (SELF): #<TCP-FTP-CONN 12350470>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:TCP-FTP-CONN -- 8. IV's, 0. FL's 113133011>
   Arg 2 (OPERATION): :LOGIN
   Arg 3 (LOGIN-P): T
   --Defaulted args:--
   Arg 4 (CONDITION): NIL

(:DEFUN-METHOD FS:TCP-FTP-VALIDATE-CONN):  (P.C. = 54)
   Arg 0 (SELF): #<TCP-FTP-CONN 12350470>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:TCP-FTP-CONN -- 8. IV's, 0. FL's 113133011>

(:METHOD FS:TCP-FTP-CONN :ALLOCATE):  (P.C. = 11)
   Arg 0 (SELF): #<TCP-FTP-CONN 12350470>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:TCP-FTP-CONN -- 8. IV's, 0. FL's 113133011>
   Arg 2 (OPERATION): :ALLOCATE

(:METHOD FS:TCP-FTP-CONN :INIT):  (P.C. = 4)
   Arg 0 (SELF): #<TCP-FTP-CONN 12350470>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:TCP-FTP-CONN -- 8. IV's, 0. FL's 113133011>
   Arg 2 (OPERATION): :INIT
   Arg 3 (IGNORE): #<DTP-LOCATIVE 26500540>

INSTANTIATE-FLAVOR:  (P.C. = 372)
   Arg 0 (FLAVOR-NAME): FS:TCP-FTP-CONN
   Arg 1 (INIT-PLIST): #<DTP-LOCATIVE 26500540>
   Arg 2 (SEND-INIT-MESSAGE-P): :MAYBE
   --Defaulted args:--
   Arg 3 (RETURN-UNHANDLED-KEYWORDS-P): NIL
   Arg 4 (AREA-TO-CONS-INSTANCE-IN): NIL

MAKE-INSTANCE:  (P.C. = 6)
   Arg 0 (FLAVOR-NAME): FS:TCP-FTP-CONN
   Rest arg (INIT-OPTIONS): (:FILE-ACCESS-PATH #<TCP-FTP-FILE-ACCESS-PATH FLA using TCP-FTP 12350457> :SERVICE-ACCESS-PATH #<SERVICE-ACCESS-PATH FILE (TCP-FTP) -- FLA (via MC on CHAOS) 12350446>)

(:DEFUN-METHOD FS:TCP-FTP-FIND-CONN):  (P.C. = 25)
   Arg 0 (SELF): #<TCP-FTP-FILE-ACCESS-PATH FLA using TCP-FTP 12350457>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:TCP-FTP-FILE-ACCESS-PATH -- 4. IV's, 2. FL's 104430146>

Rest of stack:
(:METHOD FS:TCP-FTP-FILE-ACCESS-PATH :OPEN):  (P.C. = 6)
(:METHOD FS:ACTIVE-PATHNAME-MIXIN :OPEN):  (P.C. = 14)
FS:COMMON-LISP-OPEN:  (P.C. = 445)
OPEN:  (P.C. = 255)
(:METHOD ZWEI:FILE-BUFFER-MIXIN :REVERT):  (P.C. = 57)
ZWEI:FIND-FILE:  (P.C. = 24)
ZWEI:COM-FIND-FILE:  (P.C. = 13)
ZWEI:COMMAND-EXECUTE:  (P.C. = 55)  (from Soley: UTILITIES; PATCH)
ZWEI:MAKE-EXTENDED-COMMAND-INTERNAL:  (P.C. = 77)
SYS:CALL-FUNNY-FUNCTION:  (P.C. = 101)
Closure of ZWEI:MAKE-EXTENDED-COMMAND-INTERNAL:
ZWEI:COMMAND-EXECUTE:  (P.C. = 55)  (from Soley: UTILITIES; PATCH)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 200)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 41)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
 8-May-84 10:56:34-EDT,1361;000000000000
Received: from SCRC-RIVERSIDE by MIT-OZ via Chaosnet; 8 May 84 10:56-EDT
Received: from SCRC-PEACE by SCRC-RIVERSIDE via CHAOS with CHAOS-MAIL id 11729; Tue 8-May-84 10:54:49-EDT
Date: Tuesday, 8 May 1984, 10:53-EDT
From: Charles Hornig <Hornig at SCRC-STONY-BROOK>
Subject: FTP fails to FLA
To: Richard Mark Soley <Soley at MIT-MC>, BUG-LISPM at MIT-OZ,
    BUG-BETA-TEST at MIT-OZ
In-reply-to: The message of 8 May 84 10:43-EDT from Richard Mark Soley <Soley at MIT-MC>
Message-ID: <840508105305.2.Hornig@STONY-BROOK.SCRC.Symbolics>

    Date: Tuesday, 8 May 1984, 10:43-EDT
    From: Richard Mark Soley <Soley at MIT-MC>

    In Release 5.0 [Beta Test rev 7], FEP 18, Rel 5.7 MEF Version IV, on MEF Mahogany (3600):

    Attempting to reach a file on MIT-FLA (on subnet 26. speaking TCP-only)
    from MIT-MAHOGANY (on subnet 60. speaking CHAOS-only), got this error.
    Was quite suprised since it got the connection (through MC), logged in
    -- and then failed.

    >>Error: Unimplemented MODE type.
    While in the function (:DEFUN-METHOD FS:TCP-FTP-CHECK-COMMAND-RESPONSE)  (:METHOD FS:TCP-FTP-CONN :LOGIN)  (:DEFUN-METHOD FS:TCP-FTP-VALIDATE-CONN)

FLA returned a 502 reply to your "MODE B" command, rather than 504 as
specified by RFC 765.  502 means that FLA does not support the MODE
command, which is not permitted.
 8-May-84 11:56:57-EDT,534;000000000000
Received: from MIT-MERLIN by MIT-OZ via Chaosnet; 8 May 84 11:56-EDT
Date: Tuesday, 8 May 1984, 11:58-EDT
From: Charles Rich <RICH at MIT-OZ>
Subject: Split Screen
To: BUG-LISPM at MIT-OZ

In Release 4.5, FEP 18, site configuration 62, on PA Lisp Machine Merlin:

Using the mouse system menu to create a split screen with
an existing Lisp on top and an Edit on the bottom, there
is no line on the screen separating the two halves of the
screen, or separating the buffer from the information
line at the bottom.

			-CR
 8-May-84 12:47:16-EDT,873;000000000000
Mail-From: HQM created at  8-May-84 12:45:11
Date: Tue 8 May 84 12:45:10-EDT
From: HQM@MIT-OZ
To: DCP@SCRC-TENEX
cc: BUG-LISPM@MIT-OZ, HQM@MIT-OZ
In-Reply-To: Message from "David C. Plummer <DCP@SCRC-TENEX>" of Tue 8 May 84 08:12:00-EDT

  Received: from SCRC-TENEX by MIT-OZ via Chaosnet; 8 May 84 08:14-EDT
  Date:  8 May 1984 0812-EDT
  From: David C. Plummer <DCP@SCRC-TENEX>
  To: HQM@MIT-OZ
  cc: BUG-LISPM@MIT-OZ
  In-Reply-To: The message of Tuesday, 8 May 1984, 00:48-EDT from Henry Minsky <HQM at MIT-OZ>
  
  What makes you think the debug cables are really hooked up and
  working?  As far as I can tell, you are always reading 1s over the
  cable.
  
  Or is this a joke?
  -------

Somebody must've sent a a bug-lispm message from a terminal
I left logged in, cuz I'm not sure what debug cables you're
talking about!

Henry
-------
 8-May-84 13:07:42-EDT,575;000000000000
Received: from MIT-MERLIN by MIT-OZ via Chaosnet; 8 May 84 13:04-EDT
Date: Tuesday, 8 May 1984, 13:05-EDT
From: KMP at MIT-OZ
Sender: DICK at MIT-OZ
Subject: Things that are mouse sensitive that novices don't know about
To: BUG-LISPM at MIT-OZ

In Release 4.5, Experimental Knowledge-Based-Editor 320.37, FEP 18,
site configuration 88, Black Magic, on PA Lisp Machine Merlin:

When you do things like m-X List Fonts, rather than saying
 "Loaded Fonts:"
and wasting the rest of the line, it should say:
 "Loaded Fonts (Mouse a font name to see a sample):"
-kmp
 8-May-84 15:40:13-EDT,890;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 8 May 84 15:14-EDT
Received: from SCRC-CONCORD by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 29671; Tue 8-May-84 15:11:47-EDT
Date: Tuesday, 8 May 1984, 15:14-EDT
From: Bernard S. Greenberg <BSG at SCRC-TENEX>
Subject: Things that are mouse sensitive that novices don't know about
To: KMP at MIT-OZ, BUG-LISPM at MIT-OZ
In-reply-to: The message of 8 May 84 13:05-EDT from KMP at MIT-OZ

    Date: Tuesday, 8 May 1984, 13:05-EDT
    From: KMP at MIT-OZ

    In Release 4.5, Experimental Knowledge-Based-Editor 320.37, FEP 18,
    site configuration 88, Black Magic, on PA Lisp Machine Merlin:

    When you do things like m-X List Fonts, rather than saying
     "Loaded Fonts:"
    and wasting the rest of the line, it should say:
     "Loaded Fonts (Mouse a font name to see a sample):"
    -kmp
In the source.
 9-May-84 18:36:25-EDT,2760;000000000000
Received: from MIT-JIMI by MIT-OZ via Chaosnet; 9 May 84 18:35-EDT
Date: Wednesday, 9 May 1984, 18:35-EDT
From:  <dph at MIT-OZ>
Subject: namespace boot lossage
To: BUG-LISPM at MIT-OZ

In Release 5.0 [Beta Test rev 7], FEP 18, on Lisp Machine Jimi Hendrix (3600):

Why is it trying to update an SWW printer in the MIT namespace?  SWW is
not in our namespace.

>>Error: Object named SWW|ARROWHEAD cannot be updated in namespace MIT.
While in the function NETI:ADD-OR-CHANGE-OBJECT  NETI:DO-UNKNOWN-OBJECT-FIXUPS  NETI:QUERY-NAMESPACE-SERVER

NETI:ADD-OR-CHANGE-OBJECT:  (P.C. = 47)
   Arg 0 (CLASS-NAME): :PRINTER
   Arg 1 (NAME): #<NAME SWW|ARROWHEAD 3540045>
   Arg 2 (PROPERTY-LIST): NIL
   Local 3: NIL
   Local 4: NIL
   Local 5 (FLAVOR): NIL
   Local 6 (OBJECT): NIL
   Local 7 (CHANGED-P): NIL
   Local 8 (GLOBAL-OBJECT): NIL
   Local 9 (NAMES): NIL
   Local 10 (CLASS): #<CLASS PRINTER 12026315>
   Local 11 (TEST-NAME): NIL
   Local 12: NIL

NETI:DO-UNKNOWN-OBJECT-FIXUPS:  (P.C. = 140)
   Arg 0 (DECACHE-FIRST): T

NETI:QUERY-NAMESPACE-SERVER:  (P.C. = 426)
   Arg 0 (CLASS): :NAMESPACE
   Arg 1 (NAMESPACE): #<NAMESPACE SCRC 11430717>
   Rest arg (PROPERTY-LIST): (:NAME :SCRC)

NETI:GET-INCREMENTAL-UPDATE-FROM-NETWORK:  (P.C. = 415)
   Arg 0 (NAMESPACE): #<NAMESPACE SCRC 11430717>
   Arg 1 (STARTING-TIMESTAMP): 2713

(:METHOD NETI:NAMESPACE :GET-LATEST-TIMESTAMP):  (P.C. = 21)
   Arg 0 (SELF): #<NAMESPACE SCRC 11430717>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NETI:NAMESPACE -- 8. IV's, 0. FL's 22002120>
   Arg 2 (OPERATION): :GET-LATEST-TIMESTAMP

(:METHOD NETI:NAMESPACE :VALIDATION-TIMESTAMP):  (P.C. = 27)
   Arg 0 (SELF): #<NAMESPACE SCRC 11430717>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NETI:NAMESPACE -- 8. IV's, 0. FL's 22002120>
   Arg 2 (OPERATION): :VALIDATION-TIMESTAMP

(:METHOD NET:OBJECT :CHECK-VALIDITY):  (P.C. = 70)
   Arg 0 (SELF): #<CLASS HOST 11534003>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NET:OBJECT -- 3. IV's, 1. FL's 22002752>
   Arg 2 (OPERATION): :CHECK-VALIDITY
   Arg 3 (RELATIVE-TO-NAMESPACE): #<NAMESPACE SCRC 11430717>

(:METHOD NET:OBJECT :CHECK-VALIDITY):  (P.C. = 30)
   Arg 0 (SELF): #<CLASS HOST 11534003>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NET:OBJECT -- 3. IV's, 1. FL's 22002752>
   Arg 2 (OPERATION): :CHECK-VALIDITY
   Arg 3 (RELATIVE-TO-NAMESPACE): NIL

Rest of stack:
NETI:FIND-OBJECT-NAMED-IN-NAMESPACE:  (P.C. = 45)
NET:FIND-OBJECT-NAMED:  (P.C. = 41)
NETI:GET-INCREMENTAL-UPDATE-FROM-NETWORK:  (P.C. = 263)
(:METHOD NETI:NAMESPACE :GET-LATEST-TIMESTAMP):  (P.C. = 21)
NETI:INITIALIZE-NAMESPACES-AND-NETWORK:  (P.C. = 115)
LISP-REINITIALIZE:  (P.C. = 435)
SI:LISP-TOP-LEVEL:  (P.C. = 3)
 9-May-84 21:50:22-EDT,2517;000000000000
Received: from MIT-MOON by MIT-OZ via Chaosnet; 9 May 84 21:31-EDT
Date: Wednesday, 9 May 1984, 21:31-EDT
From:  <dph at MIT-OZ>
Subject: namespace boot problems (so what else is new)
To: BUG-LISPM at MIT-OZ

In Release 5.0 [Beta Test rev 7], FEP 18, on Lisp Machine Keith Moon (3600):

This is totally ridiculous.  Each machine around here seems to have a
different namespace lossage that prevents it from booting.

>>Error: Object named SCH|COYOTE cannot be updated in namespace MIT.
While in the function NETI:ADD-OR-CHANGE-OBJECT  NETI:DO-UNKNOWN-OBJECT-FIXUPS  NETI:QUERY-NAMESPACE-SERVER

FERROR:  (P.C. = 23)
   Arg 0 (FORMAT-STRING): "Object named ~A cannot be updated in namespace ~A."
   Rest arg (FORMAT-ARGS): (#<NAME SCH|COYOTE 12000165> #<NAMESPACE MIT 11600133>)

NETI:ADD-OR-CHANGE-OBJECT:  (P.C. = 47)
   Arg 0 (CLASS-NAME): :HOST
   Arg 1 (NAME): #<NAME SCH|COYOTE 12000165>
   Arg 2 (PROPERTY-LIST): NIL

NETI:DO-UNKNOWN-OBJECT-FIXUPS:  (P.C. = 140)
   Arg 0 (DECACHE-FIRST): T

NETI:QUERY-NAMESPACE-SERVER:  (P.C. = 426)
   Arg 0 (CLASS): :NAMESPACE
   Arg 1 (NAMESPACE): #<NAMESPACE SCRC 11600433>
   Rest arg (PROPERTY-LIST): (:NAME :SCRC)

NETI:GET-INCREMENTAL-UPDATE-FROM-NETWORK:  (P.C. = 415)
   Arg 0 (NAMESPACE): #<NAMESPACE SCRC 11600433>
   Arg 1 (STARTING-TIMESTAMP): 2713

(:METHOD NETI:NAMESPACE :GET-LATEST-TIMESTAMP):  (P.C. = 21)
   Arg 0 (SELF): #<NAMESPACE SCRC 11600433>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NETI:NAMESPACE -- 8. IV's, 0. FL's 22002027>
   Arg 2 (OPERATION): :GET-LATEST-TIMESTAMP

(:METHOD NETI:NAMESPACE :VALIDATION-TIMESTAMP):  (P.C. = 27)
   Arg 0 (SELF): #<NAMESPACE SCRC 11600433>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NETI:NAMESPACE -- 8. IV's, 0. FL's 22002027>
   Arg 2 (OPERATION): :VALIDATION-TIMESTAMP

(:METHOD NET:OBJECT :CHECK-VALIDITY):  (P.C. = 70)
   Arg 0 (SELF): #<CLASS HOST 12011337>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NET:OBJECT -- 3. IV's, 1. FL's 22002654>
   Arg 2 (OPERATION): :CHECK-VALIDITY
   Arg 3 (RELATIVE-TO-NAMESPACE): #<NAMESPACE SCRC 11600433>

Rest of stack:
(:METHOD NET:OBJECT :CHECK-VALIDITY):  (P.C. = 30)
NETI:FIND-OBJECT-NAMED-IN-NAMESPACE:  (P.C. = 45)
NET:FIND-OBJECT-NAMED:  (P.C. = 41)
NETI:GET-INCREMENTAL-UPDATE-FROM-NETWORK:  (P.C. = 263)
(:METHOD NETI:NAMESPACE :GET-LATEST-TIMESTAMP):  (P.C. = 21)
NETI:INITIALIZE-NAMESPACES-AND-NETWORK:  (P.C. = 115)
LISP-REINITIALIZE:  (P.C. = 435)
SI:LISP-TOP-LEVEL:  (P.C. = 3)
 9-May-84 23:15:54-EDT,2777;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 9 May 84 23:15-EDT
Date: 9 May 1984  22:36 EDT (Wed)
Message-ID: <SR.EHPYC.12014087973.BABYL@MIT-SPEECH>
From: Scott Cyphers <SR.EHPYC@MIT-SPEECH>
To:   <dph@MIT-OZ>
Cc:   BUG-LISPM@MIT-OZ
Subject: namespace boot problems (so what else is new)
In-reply-to: Msg of 9 May 1984 21:31-EDT from <dph at MIT-OZ>

    Date: Wednesday, 9 May 1984, 21:31-EDT
    From: <dph at MIT-OZ>
    To:   BUG-LISPM at MIT-OZ
    Re:   namespace boot problems (so what else is new)

    In Release 5.0 [Beta Test rev 7], FEP 18, on Lisp Machine Keith Moon (3600):

    This is totally ridiculous.  Each machine around here seems to have a
    different namespace lossage that prevents it from booting.

I quote from AI Memo 628, June 1981, Chaosnet, by David A. Moon.
Similar words may be found in NETIO of Volume 7 of the Symbolics Rel.
5 moby manual.

"Chaosnet is a local network, that is a system for communication among
a group of computers located within one or two kilometers of each
other.  The name Chaosnet refers to the lack of any centralized
control element in this network.

...

The system goals for Chaosnet were primarily simplicity and high
performance.  The performance is achieved by starting with a very high
speed transmission medium and operating it in a simple, low-overhead
fashion, rather than using unusually clever algorithms.  Of course one
has to be careful to avoid algorithms which are so simple that they
don't work or waste so much of the transmission medium that
performance is impacted...

...

It is important to be able to isolate an apparent failure of the whole
network to the cable or to a particular host's hardware or software as
rapidly as possible."


The last I heard, Chatsworth was not within a kilometer or two of MIT,
and somehow I fail to see how a broken LM15 (it says its running)
should have anything to do with crippling every Rel 5 lisp machine at
MIT, or any other site whose namespace server breaks.  There are a lot
of really useful and good things about the namespace, but its hard to
use them if you can't boot or log in.  I also imagine it doesn't do
Symbolic's networks and namespace servers any good taking up the load
for LM15 when it is down or so slow as to appear down.  (it's up with
6 hours idle time right now).  I have noticed that if someone is
updating the namespace with tv:edit-namesapce-object, no one else may
get information off of the server until the namespace update is
complete, which takes many minutes during the day time.  I'm sure a
3600 would help, but they're not that much faster, and I'm also sure
than the code could be made to achieve the same results in a lot less
time on the LM2s and 3600s.
10-May-84 09:06:17-EDT,2756;000000000000
Received: from MIT-MOON by MIT-OZ via Chaosnet; 10 May 84 09:04-EDT
Date: Thursday, 10 May 1984, 09:03-EDT
From:  <marek at MIT-OZ>
Subject: cold-boot unsuccessful
To: BUG-LISPM at MIT-OZ

In Release 5.0 [Beta Test rev 7], FEP 18, on Lisp Machine Keith Moon (3600):



>>Error: Object named SWW|ARROWHEAD cannot be updated in namespace MIT.
While in the function NETI:ADD-OR-CHANGE-OBJECT  NETI:DO-UNKNOWN-OBJECT-FIXUPS  NETI:QUERY-NAMESPACE-SERVER

NETI:ADD-OR-CHANGE-OBJECT:  (P.C. = 47)
   Arg 0 (CLASS-NAME): :PRINTER
   Arg 1 (NAME): #<NAME SWW|ARROWHEAD 5700206>
   Arg 2 (PROPERTY-LIST): NIL
   Local 3: NIL
   Local 4: NIL
   Local 5 (FLAVOR): NIL
   Local 6 (OBJECT): NIL
   Local 7 (CHANGED-P): NIL
   Local 8 (GLOBAL-OBJECT): NIL
   Local 9 (NAMES): NIL
   Local 10 (CLASS): #<CLASS PRINTER 12052036>
   Local 11 (TEST-NAME): NIL
   Local 12: NIL

NETI:DO-UNKNOWN-OBJECT-FIXUPS:  (P.C. = 140)
   Arg 0 (DECACHE-FIRST): T

NETI:QUERY-NAMESPACE-SERVER:  (P.C. = 426)
   Arg 0 (CLASS): :NAMESPACE
   Arg 1 (NAMESPACE): #<NAMESPACE SCRC 11600433>
   Rest arg (PROPERTY-LIST): (:NAME :SCRC)

NETI:GET-INCREMENTAL-UPDATE-FROM-NETWORK:  (P.C. = 415)
   Arg 0 (NAMESPACE): #<NAMESPACE SCRC 11600433>
   Arg 1 (STARTING-TIMESTAMP): 2713

(:METHOD NETI:NAMESPACE :GET-LATEST-TIMESTAMP):  (P.C. = 21)
   Arg 0 (SELF): #<NAMESPACE SCRC 11600433>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NETI:NAMESPACE -- 8. IV's, 0. FL's 22002027>
   Arg 2 (OPERATION): :GET-LATEST-TIMESTAMP

(:METHOD NETI:NAMESPACE :VALIDATION-TIMESTAMP):  (P.C. = 27)
   Arg 0 (SELF): #<NAMESPACE SCRC 11600433>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NETI:NAMESPACE -- 8. IV's, 0. FL's 22002027>
   Arg 2 (OPERATION): :VALIDATION-TIMESTAMP

(:METHOD NET:OBJECT :CHECK-VALIDITY):  (P.C. = 70)
   Arg 0 (SELF): #<CLASS HOST 12011337>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NET:OBJECT -- 3. IV's, 1. FL's 22002654>
   Arg 2 (OPERATION): :CHECK-VALIDITY
   Arg 3 (RELATIVE-TO-NAMESPACE): #<NAMESPACE SCRC 11600433>

(:METHOD NET:OBJECT :CHECK-VALIDITY):  (P.C. = 30)
   Arg 0 (SELF): #<CLASS HOST 12011337>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NET:OBJECT -- 3. IV's, 1. FL's 22002654>
   Arg 2 (OPERATION): :CHECK-VALIDITY
   Arg 3 (RELATIVE-TO-NAMESPACE): NIL

Rest of stack:
NETI:FIND-OBJECT-NAMED-IN-NAMESPACE:  (P.C. = 45)
NET:FIND-OBJECT-NAMED:  (P.C. = 41)
NETI:GET-INCREMENTAL-UPDATE-FROM-NETWORK:  (P.C. = 263)
(:METHOD NETI:NAMESPACE :GET-LATEST-TIMESTAMP):  (P.C. = 21)
NETI:INITIALIZE-NAMESPACES-AND-NETWORK:  (P.C. = 115)
LISP-REINITIALIZE:  (P.C. = 435)
SI:LISP-TOP-LEVEL:  (P.C. = 3)

Bug arrises upon attempted cold-booting.  Cadr-15 confirmed to be up.

				-- Marek
10-May-84 09:46:36-EDT,3890;000000000000
Received: from MIT-BUDDY by MIT-OZ via Chaosnet; 10 May 84 09:46-EDT
Date: Thursday, 10 May 1984, 09:46-EDT
From: JCMA@MIT-OZ
Subject: >>Error: FEP file FEP:>lmfs.file.newest, required for the file system as a partition, is not accessible:
To: BUG-LISPM@MIT-OZ

In Release 5.0 [Beta Test rev 7], Experimental RELATUS 106.64, on Lisp Machine Buddy Holly (3600):

Tried to copy a fep file from one lispm to another.  I know about band
transfering, but this *should* work!

>>Error: FEP file FEP:>lmfs.file.newest, required for the file system as a partition, is not accessible:
         FEP File not found.
         For FEP0:>lmfs.fileFor LENNON:>fep0:>v17-debug.flod
While in the function (:METHOD FS:HOST-UNIT :COMMAND)  FS:OPEN-CHAOS  (:METHOD FS:QFILE-ACCESS-PATH :OPEN)

(:METHOD FS:HOST-UNIT :COMMAND):  (P.C. = 231)
   Arg 0 (SELF): #<HOST-UNIT 25255775>
   Arg 1 (SELF-MAPPING-TABLE): FS:HOST-UNIT
   Arg 2 (OPERATION): :COMMAND
   Arg 3 (MARK-P): NIL
   Arg 4 (STREAM-OR-HANDLE): (:CREATE "I2320")
   Arg 5 (SIMPLE-P): NIL
   Arg 6 (WHOSTATE): "Open"
   Rest arg (COMMANDS): ("OPEN " :READ " " :BINARY " BYTE-SIZE 8" "" "" "" "" "" ...)
   Local 8 (HANDLE): "I2320"
   Local 9 (STREAM): NIL
   Local 10 (PKT): #<Chaos Packet 55340521>
   Local 11 (SUCCESS): NIL
   Local 12 (STRING): "I2320 ERROR NFS F FEP file FEP:>lmfs.file.newest, required for the file system as a partition, is not accessible:
FEP File not found.
For FEP0:>lmfs.file"
   Local 13 (TRANSACTION-ID): "T2323"
   Local 14 (CREATE-P): T
   Local 15 (CONDITION): NIL

FS:OPEN-CHAOS:  (P.C. = 643)
   Arg 0 (ACCESS-PATH): #<LMFS-QFILE-ACCESS-PATH LENNON using QFILE 25255151>
   Arg 1 (REAL-PATHNAME): #<LMFS-PATHNAME "LENNON:>fep0:>v17-debug.flod">
   Arg 2 (*COMMAND-PATHNAME*-initialization): #<LMFS-PATHNAME "LENNON:>fep0:>v17-debug.flod">
   Arg 3 (OPTIONS): (:DIRECTION :INPUT :BYTE-SIZE 8 :CHARACTERS NIL)

(:METHOD FS:QFILE-ACCESS-PATH :OPEN):  (P.C. = 7)
   Arg 0 (SELF): #<LMFS-QFILE-ACCESS-PATH LENNON using QFILE 25255151>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:QFILE-ACCESS-PATH -- 3. IV's, 0. FL's 104243512>
   Arg 2 (OPERATION): :OPEN
   Arg 3 (REAL-PATHNAME): #<LMFS-PATHNAME "LENNON:>fep0:>v17-debug.flod">
   Arg 4 (PATHNAME): #<LMFS-PATHNAME "LENNON:>fep0:>v17-debug.flod">
   Rest arg (OPTIONS): (:DIRECTION :INPUT :BYTE-SIZE 8 :CHARACTERS NIL)

(:METHOD FS:ACTIVE-PATHNAME-MIXIN :OPEN):  (P.C. = 14)
   Arg 0 (SELF): #<LMFS-PATHNAME "LENNON:>fep0:>v17-debug.flod">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:ACTIVE-PATHNAME-MIXIN -- 1. IV's, 0. FL's 104241201>
   Arg 2 (OPERATION): :OPEN
   Arg 3 (PATHNAME): #<LMFS-PATHNAME "LENNON:>fep0:>v17-debug.flod">
   Rest arg (OPTIONS): (:DIRECTION :INPUT :BYTE-SIZE 8 :CHARACTERS NIL)

FS:COMMON-LISP-OPEN:  (P.C. = 445)
   Arg 0 (PATHNAME): #<LMFS-PATHNAME "LENNON:>fep0:>v17-debug.flod">
   Arg 1 (KEYWORD-ARGS): (:DIRECTION :INPUT :CHARACTERS NIL :BYTE-SIZE 8)

OPEN:  (P.C. = 255)
   Arg 0 (PATHNAME): #<LMFS-PATHNAME "LENNON:>fep0:>v17-debug.flod">
   Rest arg (KEYWORD-ARGS): (:DIRECTION :INPUT :CHARACTERS NIL :BYTE-SIZE 8)

COPYF:  (P.C. = 140)
   Arg 0 (FROM-PATHNAME): #<LMFS-PATHNAME "LENNON:>fep0:>v17-debug.flod">
   Arg 1 (TO-PATHNAME): #<LMFS-PATHNAME "BUDDY:>fep0:>v17-debug.flod">
   Rest arg: (:CHARACTERS :DEFAULT :COPY-CREATION-DATE T :COPY-AUTHOR T :REPORT-STREAM #<TYPEIN-WINDOW Typein Window 15 7040603 exposed>)

ZWEI:COM-COPY-FILE:  (P.C. = 316)

Rest of stack:
ZWEI:RE-EXECUTE-MINI-BUFFER-COMMAND:  (P.C. = 114)
ZWEI:COM-REPEAT-LAST-MINI-BUFFER-COMMAND:  (P.C. = 27)
ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 200)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 41)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
10-May-84 11:46:56-EDT,1512;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 10 May 84 11:46-EDT
Received: from SCRC-CHICOPEE by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 30879; Thu 10-May-84 11:47:37-EDT
Date: Thursday, 10 May 1984, 11:43-EDT
From: Daniel L. Weinreb <DLW at SCRC-TENEX>
Subject: >>Error: FEP file FEP:>lmfs.file.newest, required for the file system as a partition, is not accessible:
To: JCMA at MIT-OZ, BUG-LISPM at MIT-OZ
In-reply-to: The message of 10 May 84 09:46-EDT from JCMA at MIT-OZ

    Date: Thursday, 10 May 1984, 09:46-EDT
    From: JCMA@MIT-OZ

    Tried to copy a fep file from one lispm to another.  I know about band
    transfering, but this *should* work!

    >>Error: FEP file FEP:>lmfs.file.newest, required for the file system as a partition, is not accessible:
	     FEP File not found.
	     For FEP0:>lmfs.fileFor LENNON:>fep0:>v17-debug.flod
    While in the function (:METHOD FS:HOST-UNIT :COMMAND)  FS:OPEN-CHAOS  (:METHOD FS:QFILE-ACCESS-PATH :OPEN)

Look at what you called COPYF with:

    COPYF:  (P.C. = 140)
       Arg 0 (FROM-PATHNAME): #<LMFS-PATHNAME "LENNON:>fep0:>v17-debug.flod">
       Arg 1 (TO-PATHNAME): #<LMFS-PATHNAME "BUDDY:>fep0:>v17-debug.flod">
       Rest arg: (:CHARACTERS :DEFAULT :COPY-CREATION-DATE T :COPY-AUTHOR T
                    :REPORT-STREAM #<TYPEIN-WINDOW Typein Window 15 7040603 exposed>)

LENNON:>fep0:>v17-debug.flod is what you asked it to copy.  This
is not what you want.  Try LENNON|fep0:>v17-debug.flod.
10-May-84 12:35:04-EDT,1209;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 10 May 84 12:15-EDT
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 30916; Thu 10-May-84 12:10:07-EDT
Date: Thursday, 10 May 1984, 12:08-EDT
From: David C. Plummer <DCP at SCRC-TENEX>
Subject: >>Error: FEP file FEP:>lmfs.file.newest, required for the file system as a partition, is not accessible:
To: JCMA at MIT-OZ, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 10 May 84 09:46-EDT from JCMA at MIT-OZ

    Date: Thursday, 10 May 1984, 09:46-EDT
    From: JCMA@MIT-OZ

    In Release 5.0 [Beta Test rev 7], Experimental RELATUS 106.64, on Lisp Machine Buddy Holly (3600):

    Tried to copy a fep file from one lispm to another.  I know about band
    transfering, but this *should* work!

    >>Error: FEP file FEP:>lmfs.file.newest, required for the file system as a partition, is not accessible:
	     FEP File not found.
	     For FEP0:>lmfs.fileFor LENNON:>fep0:>v17-debug.flod
    While in the function (:METHOD FS:HOST-UNIT :COMMAND)  FS:OPEN-CHAOS  (:METHOD FS:QFILE-ACCESS-PATH :OPEN)

It would work if you used the correct syntax:
	(copyf "lennon|fep0:>v17-debug.flod" "buddy|fep0:")
10-May-84 16:47:40-EDT,923;000000000000
Received: from MIT-ARTHUR by MIT-OZ via Chaosnet; 10 May 84 16:46-EDT
Date: Thursday, 10 May 1984, 16:46-EDT
From: David A. Brown <David at MIT-OZ>
To: BUG-LISPM at MIT-OZ
CC: david at MIT-OZ

In System 98.40, CADR 3.6, ZMail 53.13, MIT-Specific 22.0, microcode 309,
ZM MIT, on Arthur Dent:

I can't seem to use Twenex logical names at all.  If in zwei,
for example, if I try to load common:foo.bar (logged-in to OZ)
it won't replace common: with ps:<common>, according to the
system-wide logical name definition.  I have a logicals.cmd file
in my directory, which works correctly for cftp file jobs from
other hosts, but the Lispm doesn't seem to recognize them,
either.  As far as I remember, this has worked before.  Also,
the fs:directory-list function doesn't recognize logical names.

Should I do something I'm currently not doing in order to use
these?
       Thanks...

  - David    ( @ OZ )
10-May-84 20:31:16-EDT,3367;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 10 May 84 20:27-EDT
Date: Thursday, 10 May 1984, 20:26-EDT
From: Patrick A. O'Donnell <PAO at MIT-EECS>
To: BUG-LISPM at MIT-OZ, BUG-FILE at MIT-OZ

In Release 5.0 [Beta Test rev 7], FEP 18, on Lisp Machine Robot-2 (3600):

Easily reproduced, simply open and submit about 6 files with the same
file server, for example, using the program in RB2:>utils>plotmet.lisp.

>>Error: File system bug on host OZ:
         Can't submit file
         For OZ:PS:<PUMA.DATA>PAO-2.CTL
While in the function (:METHOD FS:HOST-UNIT :COMMAND)  (:METHOD FS:FILE-DATA-STREAM-MIXIN :COMMAND)  (:METHOD FS:FILE-OUTPUT-STREAM-MIXIN :REAL-CLOSE)

(:METHOD FS:HOST-UNIT :COMMAND):  (P.C. = 231)
   Arg 0 (SELF): #<HOST-UNIT 10714542>
   Arg 1 (SELF-MAPPING-TABLE): FS:HOST-UNIT
   Arg 2 (OPERATION): :COMMAND
   Arg 3 (MARK-P): T
   Arg 4 (STREAM-OR-HANDLE): #<FILE-OUTPUT-CHARACTER-STREAM "OZ:PS:<PUMA.DATA>PAO-2.CTL" 14443606>
   Arg 5 (SIMPLE-P): NIL
   Arg 6 (WHOSTATE): "Close"
   Rest arg (COMMANDS): NIL
   Local 8 (HANDLE): "O2033"
   Local 9 (STREAM): #<FILE-OUTPUT-CHARACTER-STREAM "OZ:PS:<PUMA.DATA>PAO-2.CTL" 14443606>
   Local 10 (PKT): #<Chaos Packet 55343767>
   Local 11 (SUCCESS): NIL
   Local 12 (STRING): "O2033 ERROR BUG F Can't submit file"
   Local 13 (TRANSACTION-ID): "T2050"
   Local 14 (CREATE-P): NIL
   Local 15 (CONDITION): NIL

(:METHOD FS:FILE-DATA-STREAM-MIXIN :COMMAND):  (P.C. = 14)
   Arg 0 (SELF): #<FILE-OUTPUT-CHARACTER-STREAM "OZ:PS:<PUMA.DATA>PAO-2.CTL" 14443606>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:FILE-DATA-STREAM-MIXIN -- 6. IV's, 0. FL's 104224672>
   Arg 2 (OPERATION): :COMMAND
   Arg 3 (MARK-P): T
   Arg 4 (WHOSTATE): "Close"
   Arg 5 (COM): "CLOSE"
   Rest arg (STRINGS): NIL

(:METHOD FS:FILE-OUTPUT-STREAM-MIXIN :REAL-CLOSE):  (P.C. = 50)
   Arg 0 (SELF): #<FILE-OUTPUT-CHARACTER-STREAM "OZ:PS:<PUMA.DATA>PAO-2.CTL" 14443606>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:FILE-OUTPUT-STREAM-MIXIN -- 6. IV's, 1. FL's 104224662>
   Arg 2 (OPERATION): :REAL-CLOSE
   Arg 3 (ABORTP): NIL

(:METHOD FS:FILE-DATA-STREAM-MIXIN :CLOSE):  (P.C. = 26)
   Arg 0 (SELF): #<FILE-OUTPUT-CHARACTER-STREAM "OZ:PS:<PUMA.DATA>PAO-2.CTL" 14443606>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:FILE-DATA-STREAM-MIXIN -- 6. IV's, 0. FL's 104224672>
   Arg 2 (OPERATION): :CLOSE
   Arg 3 (ABORTP): NIL

(:METHOD FS:FILE-OUTPUT-CHARACTER-STREAM :COMBINED :CLOSE):  (P.C. = 22)
   Arg 0 (SELF): #<FILE-OUTPUT-CHARACTER-STREAM "OZ:PS:<PUMA.DATA>PAO-2.CTL" 14443606>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:FILE-OUTPUT-CHARACTER-STREAM -- 1. IV's, 7. FL's 104224646>
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

SI:CLOSE-OPEN-STREAM:  (P.C. = 14)
   Arg 0 (STREAM): #<FILE-OUTPUT-CHARACTER-STREAM "OZ:PS:<PUMA.DATA>PAO-2.CTL" 14443606>
   Arg 1 (ABORT): NIL

PUMA:PLOT-DATA:  (P.C. = 647)  (from ROBOT-2:>utils>plotmet)
   Arg 0 (FNAME): NIL
   Arg 1 (TITLE): "JA = 50, 0, 0, 0, 0, 0"
   Rest arg: (:CURVE-1 30 :CURVE-2 32)

SI:*EVAL:  (P.C. = 370)
   Arg 0 (FORM): (PLOT-DATA NIL "JA = 50, 0, 0, 0, 0, 0" (QUOTE :CURVE-1) 30 (QUOTE :CURVE-2) 32)

Rest of stack:
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 200)
SI:LISP-COMMAND-LOOP:  (P.C. = 115)
SI:LISP-TOP-LEVEL1:  (P.C. = 22)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
11-May-84 12:31:24-EDT,1723;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 11 May 84 12:29-EDT
Received: from SCRC-PEACE by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 31390; Fri 11-May-84 10:07:28-EDT
Date: Friday, 11 May 1984, 10:07-EDT
From: Charles Hornig <Hornig at SCRC-STONY-BROOK>
Subject: multics homedir pathname
To: Barry Margolin <Margolin at MIT-MULTICS>, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 4 Feb 84 10:28-EST from Barry Margolin <Margolin at MIT-MULTICS>
Message-ID: <840511100701.1.HORNIG@PEACE.SCRC.Symbolics>

    Date: Saturday, 4 February 1984, 10:28-EST
    From: Barry Margolin <Margolin at MIT-MULTICS>

    In System 242.269, imperial purple, on Lisp Machine Jimi Hendrix (3600):

    If I try to use MIT-Multics as my login machine I run into trouble with
    the FS:USER-HOMEDIR function.  It decides that my homedir is >foo>.  The
    problem is that the TCP-FTP protocol doesn't include a way to determine
    the homedir.  However, supplying >foo> does not seem to be a good
    alternative.  I don't recall whether the FTP protocol provides a way to
    get my Personid.Projectid; if it does, then a much better guess would be
    >udd>Projectid>Personid>.  If not, then I think it would be much better
    to query the user or signal a proceedable error which would allow the
    user to use the bogus default or supply a correct homedir.  Or at least
    provide a function to set the homedir; I looked around a bit and the
    easiest way I could determine to set the homedir was
	(send (send (si:parse-host "multics") :file-access-path)
	      :set-homedir (fs:parse-pathname "multics:>udd>m>barmar>))

Fixed in 247.157.  It will ask now if it can't figure it out.
11-May-84 12:37:18-EDT,3254;000000000000
Received: from MIT-EECS by MIT-OZ via Chaosnet; 11 May 84 12:35-EDT
Date: Friday, 11 May 1984, 09:56-EDT
From: Webster Dove <dove at MIT-SYLVESTER>
Subject: Hardcopy
To: BUG-LISPM at MIT-OZ

In Release 5.0 [Beta Test rev 7], on Lisp Machine Tweety Pie (3600):

Trying to hardcopy a file.

>>Trap: The function LGP:TV-FONT-LGP-FONT-SYMBOL is undefined.
While in the function (:METHOD LGP:LGP-TEXT-STREAM :CANONICALIZE-FONT)  (:METHOD SI:HARDCOPY-STREAM-FONT-MIXIN :AFTER :INIT)  (:METHOD LGP:PAGE-BUFFERING-LGP-TEXT-STREAM :COMBINED :INIT)

(:METHOD LGP:LGP-TEXT-STREAM :CANONICALIZE-FONT):  (P.C. = 44)
   Arg 0 (SELF): #<PAGE-BUFFERING-LGP-TEXT-STREAM 21730702>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor LGP:LGP-TEXT-STREAM -- 9. IV's, 0. FL's 4265057>
   Arg 2 (OPERATION): :CANONICALIZE-FONT
   Arg 3 (FONT): FONTS:CPTFONT
   Arg 4 (TYPE): :TV-FONT
   Local 5 (ROTATION): NIL

(:METHOD SI:HARDCOPY-STREAM-FONT-MIXIN :AFTER :INIT):  (P.C. = 72)
   Arg 0 (SELF): #<PAGE-BUFFERING-LGP-TEXT-STREAM 21730702>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:HARDCOPY-STREAM-FONT-MIXIN -- 6. IV's, 0. FL's 4265070>
   Arg 2 (OPERATION): :INIT
   Arg 3 (PLIST): #<DTP-LOCATIVE 140245>

(:METHOD LGP:PAGE-BUFFERING-LGP-TEXT-STREAM :COMBINED :INIT):  (P.C. = 16)
   Arg 0 (SELF): #<PAGE-BUFFERING-LGP-TEXT-STREAM 21730702>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor LGP:PAGE-BUFFERING-LGP-TEXT-STREAM -- 1. IV's, 8. FL's 4265077>
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

INSTANTIATE-FLAVOR:  (P.C. = 372)
   Arg 0 (FLAVOR-NAME): LGP:PAGE-BUFFERING-LGP-TEXT-STREAM
   Arg 1 (INIT-PLIST): #<DTP-LOCATIVE 140245>
   Arg 2 (SEND-INIT-MESSAGE-P): :MAYBE
   --Defaulted args:--
   Arg 3 (RETURN-UNHANDLED-KEYWORDS-P): NIL
   Arg 4 (AREA-TO-CONS-INSTANCE-IN): NIL

MAKE-INSTANCE:  (P.C. = 6)
   Arg 0 (FLAVOR-NAME): LGP:PAGE-BUFFERING-LGP-TEXT-STREAM
   Rest arg (INIT-OPTIONS): (:DEVICE #<PRINTER DSPG-LGP 50663107> :OUTPUT-STREAM #<CHARACTER-STREAM 21730666> :NEW-PAGE-HOOK #<DTP-COMPILED-FUNCTION SI:HARDCOPY-PRINT-PAGE-HEADING 46503627> :HEADER-FONT-P T :BANNER-FILE-NAME "TWEETY-PIE:>CORY>temp.lisp.1" ...)

SI:MAKE-HARDCOPY-STREAM:  (P.C. = 33)
   Arg 0 (DEVICE): #<PRINTER DSPG-LGP 50663107>
   Rest arg (OPTIONS): (:NEW-PAGE-HOOK #<DTP-COMPILED-FUNCTION SI:HARDCOPY-PRINT-PAGE-HEADING 46503627> :HEADER-FONT-P T :BANNER-FILE-NAME "TWEETY-PIE:>CORY>temp.lisp.1" :BANNER-CREATION-DATE 2662120189. :TV-FONTS (FONTS:CPTFONT FONTS:IPA12))

SI:HARDCOPY-FROM-STREAM:  (P.C. = 27)
   Arg 0 (STREAM): #<LMFS-CHAR-INPUT-OPENING "TWEETY-PIE:>cory>temp.lisp" 21730540>
   Arg 1 (DEVICE): #<PRINTER DSPG-LGP 50663107>
   Rest arg (OPTIONS): (:BANNER-FILE-NAME "TWEETY-PIE:>CORY>temp.lisp.1" :BANNER-CREATION-DATE 2662120189. :INTERPRET-FONT-CHANGES T :TV-FONTS (FONTS:CPTFONT FONTS:IPA12))

SI:HARDCOPY-TEXT-FILE:  (P.C. = 52)
   Arg 0 (FILE-NAME): "tweety:>cory>temp.lisp"
   Arg 1 (DEVICE): #<PRINTER DSPG-LGP 50663107>
   Rest arg (OPTIONS): (:INTERPRET-FONT-CHANGES T :TV-FONTS (FONTS:CPTFONT FONTS:IPA12))

Rest of stack:
SI:*EVAL:  (P.C. = 370)
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 200)
SI:LISP-COMMAND-LOOP:  (P.C. = 115)
SI:LISP-TOP-LEVEL1:  (P.C. = 22)
SI:LISP-TOP-LEVEL:  (P.C. = 7)
11-May-84 14:05:36-EDT,573;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 11 May 84 13:51-EDT
Date: Friday, 11 May 1984, 13:47-EDT
From: KMP at MIT-MC
Sender: CStacy at MIT-MC
To: BUG-LISPM at MIT-OZ
Cc: CStacy at MIT-MC

In Symbolics Release 5.0.7 on Buddy Holly (3600):

Why doesn't ;OFFLINE information show up in Dired? That sort of
information is terribly important in the determination of what files
can be deleted, but it is also handy in avoiding the frustration of
saying "Ah, that's just the file I wanted" and typing E only to find
an error saying the file is offline.
-kmp
11-May-84 14:35:35-EDT,1169;000000000000
Mail-From: X.GYRO created at 11-May-84 14:28:29
Date: Fri 11 May 84 14:28-EDT
From: Scott W. Layson <X.GYRO@MIT-OZ>
Subject: Serial streams wire vast numbers of pages, choking the machine!
To: bug-lispm-mit@MIT-OZ

In System 98.29, on Mark of the Unicorn Astarte (CADR):

(:method serial-stream-mixin :reset) in sys:io1;serial allocates three
Unibus channels.  The first two calls to get-unibus-channel are correct,
but the third (allocating random-unibus-channel) passes a buffer-size
argument of the value of si:page-size.  However, get-unibus-channel
interprets this argument in @i<pages>, not words, so it wires 256 pages,
which puts a real drag on a 256Kw machine.

The fix is, of course, to change the last argument in the third call to 
get-unibus-channel from "page-size" to "1".

I also notice that return-unibus-channel in sys:io;unibus doesn't unwire
the pages -- notice the call to wire-page near the bottom.  I tried
changing this to unwire-page, though, and it seems to have wired a bunch
of pages somewhere rather than unwiring any, but only in one case!???
I'm going to try this again in a freshly booted machine...

-- Scott

11-May-84 16:44:40-EDT,2487;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 11 May 84 16:35-EDT
Date: 11 May 1984 16:34-EDT
From: Kent M Pitman <KMP @ MIT-MC>
Subject:  Poor error checking in SI:COPY-DISK-PARTITION
To: BUG-LISPM @ MIT-MC
cc: KBE-I-FILE @ MIT-OZ

In Symbolics Release 4.5 on Avatar (CADR):

 (print-disk-label)
 PA1.1: Trident T-300, 11/06/83 Contact KMP before changing
 ...
   LOD4 at block 153514, 28992 blocks long, "KBE 312 Soft"
   LOD5 at block 182506, 32768 blocks long, "5.0b7x (buggy)"
   LOD6 at block 215274, 47938 blocks long, "KBE 320"
 ...
 T

 (si:copy-disk-partition 0 "LOD6" 0 "LOD4")
 Do you really want to clobber partition LOD4 on unit 0 (KBE 312 Soft)? 
   (Yes or No) yes
 Copying "KBE 320"... using measured size of 29504. blocks.
 1 2 3 ... 288 289
 NIL

 (si:describe-partition "LOD6")
   LOD6 at block 215274, 47938 blocks long, "KBE 320"
     Valid size 29504
     System version 222
     Desired microcode 979
     GC Generation 2

 (si:describe-partition "LOD4")
   LOD4 at block 153514, 28992 blocks long, "KBE 320"
     Invalid size designator 30434640000
     System version 222
     Desired microcode 979
     GC Generation 2

This is ridiculous!

 * It should not even have entered the "clobber" dialog without
   first asking:

    The partition LOD4 is only 28992 blocks long, so LOD6 won't fit there.
    Copy only the part of LOD6 that its? (Yes or No)

   I would then ask the normal question, too, for double confirmation
   in case the person didn't read the first question, which might have 
   been unexpected.

 * If it didn't query me before, I would have expected an FSIGNAL
   afterward and before doing the copy to make sure I really meant 
   to do this.

   If it didn't do that, I would have expected a note at the end of the
   copy saying it didn't transfer the whole thing! I can't believe it
   just quietly returned NIL instead of saying

    1 2 3 ... 288 289
    Partition is too small. Transfer not complete.
    NIL

 * If it didn't copy the partition completely, it should NOT have
   set the partition label on LOD4 to say "KBE 320". It should have 
   said "Incomplete copy" or some such.

The basic problem is that I just clobbered a partition I wouldn't have
bothered to clobber if I knew I couldn't do so completely. Obviously,
I should have checked the sizes myself first, but I'm still annoyed
that it didn't catch my stupid mistake in time to rescue me.
-kmp
11-May-84 17:36:06-EDT,2008;000000000000
Received: from MIT-AVATAR by MIT-OZ via Chaosnet; 11 May 84 17:29-EDT
Date: Friday, 11 May 1984, 17:30-EDT
From: Apprentice for KMP <kbe at MIT-OZ>
Subject: Buggy c-m-&
To: BUG-LISPM at MIT-OZ

In Symbolics Release 4.5 on Avatar (CADR):

It would be handy if there were commands like c-m-& which allowed
conversion between IF, WHEN/UNLESS, and COND. 

It would also be handy if c-m-& worked at all, though. eg, given:

(defun f (x) (and x y))
              ^
with the cursor at the indicated point, typing c-m-& yields:

(defun f (x) (cond (x y)))
                       ^
with the cursor as shown. Without moving the cursor, typing
c-m-& again yields:

>>Trap: Some argument to the ARRAY-LEADER instruction, NIL, was of the wrong type.
The instruction expected an array.
While in the function ARRAY-LEADER  ZWEI:SEARCH-FOR-LINE  ZWEI:BP-<  ZWEI:STRING-INTERVAL

ZWEI:SEARCH-FOR-LINE:  (P.C. = 22)
   Arg 0 (X): "(defun f () ( (x y)))"
   Arg 1 (LINE): NIL
   Local 0 (FORWARD): NIL
   Local 1 (BACKWARD): NIL

ZWEI:BP-<:  (P.C. = 34)
   Arg 0 (BP1): ("(defun f () ( (x y)))" 16.)
   Arg 1 (BP2): NIL

ZWEI:STRING-INTERVAL:  (P.C. = 47)
   Arg 0 (FROM-BP): NIL
   Arg 1 (TO-BP): ("(defun f () ( (x y)))" 16.)
   --Defaulted args:--
   Arg 2 (IN-ORDER-P): NIL

ZWEI:COM-FROB-LISP-CONDITIONAL:  (P.C. = 505)

ZWEI:COMMAND-EXECUTE:  (P.C. = 100)
   Arg 0 (COMMAND): ZWEI:COM-FROB-LISP-CONDITIONAL
   Arg 1 (CHAR): 806.
   Arg 2 (PREFIX-CHAR): NIL
   Arg 3 (HOOK-LIST): NIL

ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 73)
   Arg 0 (CH): 806.

(METHOD ZWEI:EDITOR EDIT):  (P.C. = 377)
   (SELF = #<ZMACS-TOP-LEVEL-EDITOR 2635601>)
   Arg 0 (OPERATION): EDIT
   --Defaulted args:--
   Arg 1 (TOP-LEVEL-P): T

(METHOD ZWEI:TOP-LEVEL-EDITOR COMBINED EDIT):  (P.C. = 102)
   (SELF = #<ZMACS-TOP-LEVEL-EDITOR 2635601>)
   Rest arg (.DAEMON-CALLER-ARGS.): (EDIT)

Rest of stack:
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 52)
SI:PROCESS-TOP-LEVEL:  (P.C. = 125)
11-May-84 20:09:19-EDT,590;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 11 May 84 20:08-EDT
Received: from SCRC-EUPHRATES by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 52451; Fri 11-May-84 20:08:33-EDT
Date: Friday, 11 May 1984, 20:07-EDT
From: David A. Moon <Moon at SCRC-TENEX>
To: KMP at MIT-MC
Cc: BUG-LISPM at MIT-OZ, CStacy at MIT-MC
In-reply-to: The message of 11 May 84 13:47-EDT from KMP at MIT-MC

    Date: Friday, 11 May 1984, 13:47-EDT
    From: KMP at MIT-MC

    Why doesn't ;OFFLINE information show up in Dired?

Because it's Tops-20-specific.  But sure, why not?  In the source.
11-May-84 20:38:32-EDT,886;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 11 May 84 20:38-EDT
Received: from SCRC-EUPHRATES by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 52468; Fri 11-May-84 20:37:44-EDT
Date: Friday, 11 May 1984, 20:36-EDT
From: David A. Moon <Moon at SCRC-TENEX>
Subject: Buggy c-m-&
To: Apprentice for KMP <kbe at MIT-OZ>
Cc: BUG-LISPM at MIT-OZ
In-reply-to: The message of 11 May 84 17:30-EDT from Apprentice for KMP <kbe at MIT-OZ>

    Date: Friday, 11 May 1984, 17:30-EDT
    From: Apprentice for KMP <kbe at MIT-OZ>

    In Symbolics Release 4.5 on Avatar (CADR):

    It would be handy if there were commands like c-m-& which allowed
    conversion between IF, WHEN/UNLESS, and COND. 
    It would also be handy if c-m-& worked at all, though.

It works much better in the source (changed made last year some time).
This will be in some future release (not 5.0).
11-May-84 22:27:54-EDT,1808;000000000000
Received: from MIT-LISPM-5 by MIT-OZ via Chaosnet; 11 May 84 22:26-EDT
Date: Friday, 11 May 1984, 22:25-EDT
From: Robert P. Krajewski <RpK at MIT-OZ>
Subject: Serial streams wire vast numbers of pages, choking the machine!
To: X.GYRO at MIT-OZ
CC: bug-lispm-mit at MIT-OZ, naha at MIT-CCC
In-reply-to: The message of 11 May 1984 14:28-EDT from Scott W. Layson <X.GYRO at MIT-OZ>
Message-ID: <[MIT-LISPM-5].5/11/84 22:25:57.RpK>

    From: Scott W. Layson <X.GYRO@MIT-OZ>

    In System 98.29, on Mark of the Unicorn Astarte (CADR):

    (:method serial-stream-mixin :reset) in sys:io1;serial allocates three
    Unibus channels.  The first two calls to get-unibus-channel are correct,
    but the third (allocating random-unibus-channel) passes a buffer-size
    argument of the value of si:page-size.  However, get-unibus-channel
    interprets this argument in @i<pages>, not words, so it wires 256 pages,
    which puts a real drag on a 256Kw machine.

    The fix is, of course, to change the last argument in the third call to 
    get-unibus-channel from "page-size" to "1".

Done in 98.53.

    I also notice that return-unibus-channel in sys:io;unibus doesn't unwire
    the pages -- notice the call to wire-page near the bottom.  I tried
    changing this to unwire-page, though, and it seems to have wired a bunch
    of pages somewhere rather than unwiring any, but only in one case!???
    I'm going to try this again in a freshly booted machine...

I didn't try fixing this myself -- you may want to contact Mark
Nahabedian at LMI, since I think he has written a patch (currently in
the LMI system) that correctly does the deallocation.  If you make any
headway, please get back to me so that the neccessary changes can be
merged here and patched.

``Bob''
12-May-84 02:30:10-EDT,2040;000000000000
Received: from MIT-LISPM-1 by MIT-OZ via Chaosnet; 12 May 84 02:29-EDT
Date: Saturday, 12 May 1984, 02:28-EDT
From: Robert P. Krajewski <RpK at MIT-OZ>
Subject: Query Replace with the region turned on
To: BUG-LISPM-MIT at MIT-OZ

In Don't-dump-a-band! Inconsistent (unreleased patches loaded) System 98.48,
CADR 3.6, ZMail 53.17, MIT-Specific 22.0, microcode 309,
on Lisp Machine One:

Insert your description of the circumstances here:

Query Replace with the region turned on seems to be broken:

>>TRAP 14070 (ARGTYP NUMBER PP 0 QIGRP)
The first argument to M->, NIL, was of the wrong type.
The function expected a number.
Backtrace from the debugger:

(:METHOD ZWEI:NODE :MODIFIED-P) (P.C. = 32)
  (SELF is #<NODE 12335730>)

 Arg 0 (OPERATION): :MODIFIED-P


ZWEI:BUFFER-MODIFIED-P (P.C. = 22)

 Arg 0 (BUFFER): #<NODE 12335730>


ZWEI:ZMACS-MODE-LINE-RECALCULATE-FUNCTION (P.C. = 44)

Local 0 (INT-TICK): NIL


(:METHOD ZWEI:MODE-LINE-WINDOW-MIXIN :REDISPLAY) (P.C. = 67)
  (SELF is #<MODE-LINE-WINDOW Mode Line Window 1 4644133 exposed>)

 Arg 0 (OPERATION): :REDISPLAY
 Arg 1 (MODE-LINE-LIST): ("Query Replacing " ZWEI:*QUERY-FROM* " => " ZWEI:*QUERY-TO*)
   --Defaulted args:--
 Arg 2 (FORCE): NIL
Local 0 (MODES): NIL
Local 1 (PREV): NIL
Local 2 (L): NIL
Local 3 (THING): NIL
Local 4 (PROP): NIL
Local 5: NIL
Local 6 (STR): NIL
Local 7 (ELT): NIL
Local 8 (LEN): NIL


ZWEI:REDISPLAY-MODE-LINE (P.C. = 27)



Remainder of stack:

ZWEI:QUERY-REPLACE-INTERNAL (P.C. = 366)
ZWEI:QUERY-REPLACE (P.C. = 65)
ZWEI:COM-QUERY-REPLACE (P.C. = 76)
ZWEI:COM-EXTENDED-COMMAND (P.C. = 67)
ZWEI:COMMAND-EXECUTE (P.C. = 115)
ZWEI:PROCESS-COMMAND-CHAR (P.C. = 65)
(:METHOD ZWEI:WINDOW :EDIT) (P.C. = 464)
(:INTERNAL (:METHOD ZWEI:ZMACS-WINDOW :COMBINED :EDIT) 0) (P.C. = 74)
FUNCALL (P.C. = 25)
(:METHOD ZWEI:DISPLAYER :AROUND :EDIT) (P.C. = 31)
(:METHOD ZWEI:ZMACS-WINDOW :COMBINED :EDIT) (P.C. = 47)
ZWEI:ZMACS-WINDOW-TOP-LEVEL (P.C. = 46)
SI:PROCESS-TOP-LEVEL (P.C. = 152)
12-May-84 17:58:02-EDT,11386;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 12 May 84 17:56-EDT
Received: from SCRC-HARLEM by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 31962; Sat 12-May-84 17:57:21-EDT
Date: Saturday, 12 May 1984, 17:52-EDT
From: Joseph R Goldstone <joseph at SCRC-QUABBIN>
Subject: namespace boot problems (so what else is new)
To: dph at MIT-OZ, Scott Cyphers <SR.EHPYC at MIT-SPEECH>,
    marek at MIT-OZ, brou at MIT-OZ
Cc: BUG-LISPM at MIT-OZ, Robert W. Kerns <RWK at SCRC-YUKON>,
    Bug-Beta-Test at SCRC-YUKON, Neal Feinberg <Feinberg at SCRC-YUKON>,
    HOSS at SCRC-QUABBIN
In-reply-to: The message of 9 May 84 21:31-EDT from dph at MIT-OZ,
             <SR.EHPYC.12014087973.BABYL@MIT-SPEECH>,
             The message of 10 May 84 09:05-EDT from Daniel Huttenlocher <DPH at MIT-OZ>,
             The message of 10 May 84 09:03-EDT from marek at MIT-OZ,
             The message of 10 May 84 13:00-EDT from Robert W. Kerns <RWK at SCRC-YUKON>,
             The message of 9 May 84 18:35-EDT from dph at MIT-OZ

    Date: Thursday, 10 May 1984, 09:03-EDT
    From:  <marek at MIT-OZ>
    In Release 5.0 [Beta Test rev 7], FEP 18, on Lisp Machine Keith Moon (3600):

    >>Error: Object named SWW|ARROWHEAD cannot be updated in namespace MIT.

    Bug arrises upon attempted cold-booting.  Cadr-15 confirmed to be up.
    ---------------------------------------------------------------------------

    Date: Wednesday, 9 May 1984, 21:31-EDT
    From:  <dph at MIT-OZ>
    In Release 5.0 [Beta Test rev 7], FEP 18, on Lisp Machine Keith Moon (3600):

    >>Error: Object named SCH|COYOTE cannot be updated in namespace MIT.

    This is totally ridiculous.  Each machine around here seems to have a
    different namespace lossage that prevents it from booting.
    ---------------------------------------------------------------------------

    Date: Wednesday, 9 May 1984, 18:35-EDT
    From:  <dph at MIT-OZ>
    In Release 5.0 [Beta Test rev 7], FEP 18, on Lisp Machine Jimi Hendrix (3600):

    >>Error: Object named SWW|ARROWHEAD cannot be updated in namespace MIT.

    Why is it trying to update an SWW printer in the MIT namespace?  SWW is
    not in our namespace.
See below.
    ---------------------------------------------------------------------------

    Date: Thu 10 May 84 09:05-EDT
    From: Daniel Huttenlocher <DPH@MIT-OZ>
    can we please reconfigure lm15 so that scrc is not in our search
    path and lm15 is our arpanet namespace server.  we are losing badly
    here.  our machines don't boot, when microwave is down it's worse.
Certainly we can reconfigure the MIT namespace as you suggest.  It won't,
however, solve your problems.

    at least if we flush all notions of symbolics from our namespace, when
    things don't work here they're not going to work for other customers too,
    so maybe they will get fixed.
Unfortunately the course of action you suggest in the previous paragraph
won't "flush all notions of symbolics from our namespace".  There is no
way to do this.  Read on.

    ---------------------------------------------------------------------------
    Date: Thursday, 10 May 1984, 13:00-EDT
    From: Robert W. Kerns <RWK at SCRC-YUKON>
	Date: Wednesday, 9 May 1984, 14:32-EDT
	From: Neal Feinberg <Feinberg at SCRC-YUKON>
	    Date: Wed, 9 May 84 11:34 EDT
	    From: "Christopher C. Stacy" <CStacy@MIT-MC.ARPA>
	    Why is a namespace server 3000 miles away in Westwood (over microwave,
	    and multiple telephone line hops) being asked about a machine in the
	    MIT namespace?
	I frequently ask myself the same question.  Fixed in a future release,
	right?
    Wrong.  It's *NOT* asking about a host in the MIT namespace.  It's asking
    whether a host named IS exists in the SWW namespace.  If LM15 were a
    secondary server for the SWW namespace, it wouldn't do this.
Wrong.  It's asking whether a host named "IS" exists in the MIT namespace.  It's
asking White because White's a secondary server for the MIT namespace, and
because the software running in your machine isn't smart enough to choose
a cheaper [in Chaosnet routing cost] machine.  Fixed in patches due to be
moved into 5.1, see below.  [The reason it's asking whether a host named "IS"
exists in the MIT namespace is that you're defining a logical host named "IS"
and it wants to be sure there's no conflict.  Alleviated somewhat by patches
due to be moved into 5.1]
								  Or if
    SWW weren't included in the MIT search rules.  
Not so.  See below.
    ---------------------------------------------------------------------------   

    Date: 9 May 1984  22:36 EDT (Wed)
    From: Scott Cyphers <SR.EHPYC@MIT-SPEECH>
	Date: Wednesday, 9 May 1984, 21:31-EDT
	From: <dph at MIT-OZ>
	In Release 5.0 [Beta Test rev 7], FEP 18, on Lisp Machine Keith Moon (3600):

	This is totally ridiculous.  Each machine around here seems to have a
	different namespace lossage that prevents it from booting.

    I quote from AI Memo 628, June 1981, Chaosnet, by David A. Moon.
    Similar words may be found in NETIO of Volume 7 of the Symbolics Rel.
    5 moby manual.

    "Chaosnet is a local network...
That's right, but the Chaosnet is not the issue here.  If we were all running
TCP/IP, this stuff would still happen.

What's happening here is that, at boot time, your 3600 or CADR wakes up
and tries to find out where it is and what's happened since it was disk-saved.
One of the things it checks is whether its idea of what the local network
object looks like is up-to-date.  It finds out whether its ideas are current
by asking the namespace server for the owning namespace of the object whether
there have been any changes to the object.  Then it makes this same inquiry
of all the namespace servers for the namespaces which also hang on to the
network object by virtue of the network object's nicknames, and this is where
a lot of the problems creep in...

That is to say, if you look at the CHAOS network's namespace object, you will
see that it is named MIT|CHAOS, but that it has nicknames of SCRC|CHAOS,
SPA|CHAOS, SWW|CHAOS, and SCH|CHAOS.  This is so that the generic network
system understands that those CHAOS networks really are the same network,
and can construct paths from (say) MIT|JIMI to SCRC|POINTER.

So, as it queries all of the namespace servers for the nicknaming namespaces,
it first wants to find out if it has the current information about the
namespaces themselves [perhaps, for example, their namespace servers have moved].
So, it asks a server for each of these namespaces to divulge all the changes
to that namespace.  It's in this process that you come up against such
six-day wonders as SWW|ARROWHEAD:

    >>Error: Object named SWW|ARROWHEAD cannot be updated in namespace MIT.

    [Why is it trying to update an SWW printer in the MIT namespace?  SWW is
     not in our namespace. -- dph]

What's going on here is that the Release 5.0 namespace user code isn't smart
enough, when it gets back this indirect information about a change to the
SWW|ARROWHEAD object, to temporarily "put itself in SWW's shoes" and perform
the update to the SWW object while binding NETI:*NAMESPACE* to #<NAMESPACE SWW>.
This is a consistency check in the code, and indeed, it found the bug.  The
fix for this will be in 5.1.  A short-term solution is outlined below.

These problems are compounded by a tendency of the secondary servers for the various
namespaces to accumulate bogus information.  Unfortunately, there is no protocol
completely in place for the propagation of updates on a primary server to the
widespread secondary servers for that namespace.  So, suppose some bogus change
is made to the SWW namespace on White.  Then say LM15 gets booted and as part of
its boot process asks White for the latest scoop on the SWW namespace.  It gets
the bad information (but probably doesn't blow out, because it's running more
robust software than Release 5.0).  Then someone realizes the error and fixes
it on White.  Too bad, 'cuz the corrections won't be propagated to LM15, and
the next time some Release 5.0 user boots and asks LM15 how the local network
is doing, LM15 will say fine, here's what it looks like, and then the user
asks about the network in all the nicknamed namespaces, which means first asking
about the namespaces themselves, which means asking lm15 about the namespaces,
which means getting the bogus information and blowing out.

The short term solution to this is to have someone go over to lm15 and manually
splice out the bad bits.  Dennis Doughty [of Symbolics Software Support] has
gone over to MIT to do this a couple of times.  This won't fix everything,
since Release 5.0 isn't always going to prefer LM15 even if it's a secondary
namespace server, but it's a start.  It would be a help if, next time you get
screwed during booting, you would use Peek to find out who lied to you.

The long term solution is twofold:
 a) come up with a working scheme for maintaining the currency and correctness
    of information stored by the secondary servers, and install worlds supporting
    such a scheme on every primary and secondary server on the connected Chaosnet.
 b) distribute to every site on the connected Chaosnet patches to the system
    such that the above errors can be handled in a robust manner during those
    transient periods when the namespace database is in error.

    ---------------------------------------------------------------------------
   [The last I heard, Chatsworth was not within a kilometer or two of MIT,
    and somehow I fail to see how a broken LM15 (it says its running)
    should have anything to do with crippling every Rel 5 lisp machine at
    MIT, or any other site whose namespace server breaks.  -- cyphers]

As we have seen, it's not just LM15's fault.  It's the combined fault of
the many namespace servers on the "globe-girdling Chaosnet" and of the
insufficiently robust Release 5.0 namespace software.
							   There are a lot
    of really useful and good things about the namespace, but its hard to
    use them if you can't boot or log in.  I also imagine it doesn't do
    Symbolic's networks and namespace servers any good taking up the load
    for LM15 when it is down or so slow as to appear down.

Quite correct.  For west coast servers (SPA, SCH, SWW), this only aggravates
the congested cross-country landlines.
							    (it's up with
    6 hours idle time right now).  I have noticed that if someone is
    updating the namespace with tv:edit-namesapce-object, no one else may
    get information off of the server until the namespace update is
    complete, which takes many minutes during the day time.  I'm sure a
    3600 would help, but they're not that much faster, and I'm also sure
    than the code could be made to achieve the same results in a lot less
    time on the LM2s and 3600s.

When Release 5.0 is installed at MIT, the namespace database will be pruned
such that rewriting the changes file will take much less time, and hence
updates won't be so slow.  A side effect of this will be that all machines
running older beta-test software will boot @b[much] slower, but that shouldn't
be much of a problem.

-- joseph
12-May-84 18:46:46-EDT,1824;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 12 May 84 18:45-EDT
Date: 12 May 1984  18:47 EDT (Sat)
Message-ID: <SR.EHPYC.12014832798.BABYL@MIT-SPEECH>
From: Scott Cyphers <SR.EHPYC@MIT-SPEECH>
To:   Joseph R Goldstone <joseph@SCRC-QUABBIN>
Cc:   brou@MIT-OZ, Bug-Beta-Test@SCRC-YUKON, BUG-LISPM@MIT-OZ, dph@MIT-OZ,
      Neal Feinberg <Feinberg@SCRC-YUKON>, HOSS@SCRC-QUABBIN,
      marek@MIT-OZ, "Robert W. Kerns" <RWK@SCRC-YUKON>
Subject: namespace boot problems (so what else is new)
In-reply-to: Msg of 12 May 1984 17:52-EDT from Joseph R Goldstone <joseph at SCRC-QUABBIN>

This shall take some time to fully digest, but it would seem that for
large namespaces, the servers ought to be running some different
software than the non-servers.  For one thing, I imagine a server machine is
doing terrible things to the scheduler which isn't designed to be
running many active jobs at once.  Maybe if many of the kinds of
things the namespace was asked to do were put in a namespace queue,
and one process ran on the queue, things would go faster.  High
priority things could circumvent the queue, or maybe even scan the
queue first for any information that is specific to them and execute
those items and then run itself.  Then the scheduler has the simpler
job of scheduling file connections, a namespace, etc., instead of one
process for each namespace connection.

For another thing, a server machine is supposed to serve rather than
get used, so it would make sense if the server machines treated each
other differently than the non servers, i.e. when things change, they
should tell each other about the changes, so that if anyone else asks,
they know, though there is no need for a server machine to tell the
servees such things unless they explicitly ask for it.

Until 5.1... 
12-May-84 21:12:26-EDT,904;000000000000
Received: from SCRC-TENEX by MIT-OZ via Chaosnet; 12 May 84 21:10-EDT
Date: 12 May 1984 2107-EDT
From: Howard I. Cannon <HIC@SCRC-TENEX>
Subject: Re: namespace boot problems (so what else is new)
To: joseph@SCRC-QUABBIN
cc: dph@MIT-OZ, SR.EHPYC@MIT-SPEECH, marek@MIT-OZ, brou@MIT-OZ,
    BUG-LISPM@MIT-OZ, RWK@SCRC-YUKON, Bug-Beta-Test@SCRC-YUKON,
    Feinberg@SCRC-YUKON, HOSS@SCRC-QUABBIN
In-Reply-To: The message of Saturday, 12 May 1984, 17:52-EDT from Joseph R Goldstone <joseph at SCRC-QUABBIN>

There are patches in existence for 5.0 that deal with the routing issues
by imparting some cost knowledge on a per-host basis to the
namespace/network system.  There is also a patch that makes
a particular host be a default secondary namespace server
for all namespaces.  Without these patches, SWW would be unusable.
I would be happy to see these given out as anyone desires.
-------
13-May-84 00:04:12-EDT,3732;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 13 May 84 00:01-EDT
Received: from SCRC-CHICOPEE by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 32028; Sun 13-May-84 00:02:32-EDT
Date: Sunday, 13 May 1984, 00:00-EDT
From: Daniel L. Weinreb <DLW at SCRC-TENEX>
Subject: namespace boot problems (so what else is new)
To: SR.EHPYC at MIT-SPEECH
Cc: joseph at SCRC-QUABBIN, brou at MIT-OZ, Bug-Beta-Test at SCRC-YUKON,
    BUG-LISPM at MIT-OZ, dph at MIT-OZ, Feinberg at SCRC-YUKON,
    HOSS at SCRC-QUABBIN, marek at MIT-OZ, RWK at SCRC-YUKON
In-reply-to: <SR.EHPYC.12014832798.BABYL@MIT-SPEECH>

    Date: 12 May 1984  18:47 EDT (Sat)
    From: Scott Cyphers <SR.EHPYC@MIT-SPEECH>

    This shall take some time to fully digest, but it would seem that for
    large namespaces, the servers ought to be running some different
    software than the non-servers.  

It isn't necessary for them to run different software.  All Lisp
Machines can run the same software; the software is parameterized and
behaves differently depending on the values of the parameters.  This is
more elegant and convenient.

				    For one thing, I imagine a server machine is
    doing terrible things to the scheduler which isn't designed to be
    running many active jobs at once.  

It is true that the Lisp Machine scheduler needs a real overhaul, and
probably ought to be doing certain things differently, particularly on
heavily-used server machines.  We've been meaning to do this for a long
time, but have not had the resources to do it.

    For another thing, a server machine is supposed to serve rather than
    get used, so it would make sense if the server machines treated each
    other differently than the non servers, i.e. when things change, they
    should tell each other about the changes, so that if anyone else asks,
    they know, though there is no need for a server machine to tell the
    servees such things unless they explicitly ask for it.

Well, various schemes along these lines are under active discussion
among the namespace hackers at SCRC.  There are two schools of thought.
One says that primary namespace servers should take the initiative to
"push" changes at the secondary servers; this has never been tried.  The
other is that secondaries should continue to poll the primaries as they
do now, but somehow it should be made practical for them to do the
polling more often, possibly by reducing the overhead of the polling.
These approaches are being discussed and some will be prototyped and
tested soon.

I apologize on behalf of Symbolics for all the problems that have been
caused.  I think it's fair to say that we didn't really appreciate what
we were getting into when we tried to apply our new namespace technology
to the "globe-girdling chaosnet".  I have read many papers in the past
about distributed database problems, but when you are actually sitting
there observing and debugging one, the whole thing comes to life and is
really intellectually interesting and challenging.  We are all
witnissing some truly interesting operating system development (dare I
say "research"?) in progress.  It is highly regrettable that this work
is being done on a development environment upon which people depend to
get their work done; however, until it was tried in such a big, complex
environment as the combined MIT/Symbolics network, there was really no
way that these problems would have shown up.  We will make every effort
to try to keep things usable with as high percentage of uptime as we
can, and until we get it all fixed, we beg your indulgence and patience,
and encourage you to continue to report any and all bugs.  Thank you.
13-May-84 01:08:38-EDT,3496;000000000000
Received: from MIT-MOON by MIT-OZ via Chaosnet; 13 May 84 01:08-EDT
Date: Sunday, 13 May 1984, 01:05-EDT
From: Henry Minsky <HQM at MIT-MC>
Subject: not getting the filer server on the first try
To: BUG-LISPM at MIT-OZ

In Release 5.0 [Beta Test rev 7], FEP 18, on Lisp Machine Keith Moon (3600):

This ALWAYS happens the first time I try and do a (make-system 'schema),
which must connect to ASPEN. I think the first file-connect takes a
little longer than the default timeout. Anyway, its a real pain.

>>Error: ASPEN (at Chaos address 15031) did not respond to a FILE 1 request.
While in the function CHAOS:CHECK-CONNECTION-STATE  CHAOS:WAIT-FOR-CONNECT  CHAOS:CONNECT

CHAOS:CHECK-CONNECTION-STATE:  (P.C. = 117)
   Arg 0 (CONN): #<CHAOS Connection for FILE 1 to ASPEN 25240137>
   Arg 1 (EXPECTED-STATE): CHAOS:OPEN-STATE
   Local 2 (STATE): CHAOS:RFC-SENT-STATE

CHAOS:WAIT-FOR-CONNECT:  (P.C. = 13)
   Arg 0 (CONN): #<CHAOS Connection for FILE 1 to ASPEN 25240137>
   Arg 1 (EXPECTED-STATE): CHAOS:OPEN-STATE
   Arg 2 (TIMEOUT): 1130

CHAOS:CONNECT:  (P.C. = 250)
   Arg 0 (HOST): #<LISPM-HOST ASPEN 5675232>
   Arg 1 (CONTACT-NAME): "FILE 1"
   Arg 2 (WINDOW-SIZE): 5
   --Defaulted args:--
   Arg 3 (TIMEOUT): 1130

(:METHOD FS:HOST-UNIT :VALIDATE-CONTROL-CONNECTION):  (P.C. = 71)
   Arg 0 (SELF): #<HOST-UNIT 2357745>
   Arg 1 (SELF-MAPPING-TABLE): FS:HOST-UNIT
   Arg 2 (OPERATION): :VALIDATE-CONTROL-CONNECTION
   --Defaulted args:--
   Arg 3 (NO-ERROR-P): NIL

(:METHOD FS:QFILE-ACCESS-PATH :GET-HOST-UNIT):  (P.C. = 34)
   Arg 0 (SELF): #<LMFS-QFILE-ACCESS-PATH ASPEN using QFILE 2357734>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:QFILE-ACCESS-PATH -- 3. IV's, 0. FL's 22204567>
   Arg 2 (OPERATION): :GET-HOST-UNIT

FS:OPEN-CHAOS:  (P.C. = 427)
   Arg 0 (ACCESS-PATH): #<LMFS-QFILE-ACCESS-PATH ASPEN using QFILE 2357734>
   Arg 1 (REAL-PATHNAME): #<LMFS-PATHNAME "ASPEN:>schema>sysdef.bin">
   Arg 2 (*COMMAND-PATHNAME*-initialization): #<LOGICAL-PATHNAME "Schema: SCHEMA; SYSDEF.BIN.NEWEST">
   Arg 3 (OPTIONS): (:DIRECTION :PROBE)

(:METHOD FS:QFILE-ACCESS-PATH :OPEN):  (P.C. = 7)
   Arg 0 (SELF): #<LMFS-QFILE-ACCESS-PATH ASPEN using QFILE 2357734>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:QFILE-ACCESS-PATH -- 3. IV's, 0. FL's 22204567>
   Arg 2 (OPERATION): :OPEN
   Arg 3 (REAL-PATHNAME): #<LMFS-PATHNAME "ASPEN:>schema>sysdef.bin">
   Arg 4 (PATHNAME): #<LOGICAL-PATHNAME "Schema: SCHEMA; SYSDEF.BIN.NEWEST">
   Rest arg (OPTIONS): (:DIRECTION :PROBE)

(:METHOD FS:ACTIVE-PATHNAME-MIXIN :OPEN):  (P.C. = 14)
   Arg 0 (SELF): #<LMFS-PATHNAME "ASPEN:>schema>sysdef.bin">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:ACTIVE-PATHNAME-MIXIN -- 1. IV's, 0. FL's 22202264>
   Arg 2 (OPERATION): :OPEN
   Arg 3 (PATHNAME): #<LOGICAL-PATHNAME "Schema: SCHEMA; SYSDEF.BIN.NEWEST">
   Rest arg (OPTIONS): (:DIRECTION :PROBE)

Rest of stack:
(:DEFUN-METHOD FS:LOGICAL-PATHNAME-PASS-ON):  (P.C. = 7)
(:METHOD FS:LOGICAL-PATHNAME :OPEN):  (P.C. = 10)
FS:COMMON-LISP-OPEN:  (P.C. = 445)
OPEN:  (P.C. = 255)
PROBEF:  (P.C. = 56)
SI:DECLARATION-FILE-SYSTEM:  (P.C. = 53)
SI:MAYBE-RELOAD-FILE:  (P.C. = 5)
SI:MAYBE-RELOAD-SYSTEM-DECLARATION:  (P.C. = 137)
SI:FIND-SYSTEM-NAMED:  (P.C. = 50)
MAKE-SYSTEM:  (P.C. = 6)
SI:*EVAL:  (P.C. = 370)
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 200)
SI:LISP-COMMAND-LOOP:  (P.C. = 115)
SI:LISP-TOP-LEVEL1:  (P.C. = 22)
SI:LISP-TOP-LEVEL:  (P.C. = 7)
13-May-84 09:40:04-EDT,1311;000000000000
Mail-From: X.GYRO created at 13-May-84 09:39:40
Date: Sun, 13 May 1984  09:39 EDT
Message-ID: <X.GYRO.12014995165.BABYL@MIT-OZ>
From: X.GYRO@MIT-OZ
To:   "Robert P. Krajewski" <RpK@MIT-OZ>
Cc:   bug-lispm-mit@MIT-OZ, naha@MIT-CCC
Subject: Serial streams wire vast numbers of pages, choking the machine!
In-reply-to: Msg of 11 May 1984 22:25-EDT from Robert P. Krajewski <RpK>

    From: Robert P. Krajewski <RpK>

        From: Scott W. Layson <X.GYRO@MIT-OZ>

        I also notice that return-unibus-channel in sys:io;unibus
        doesn't unwire the pages -- notice the call to wire-page near
        the bottom.  I tried changing this to unwire-page, though, and
        it seems to have wired a bunch of pages somewhere rather than
        unwiring any, but only in one case!???  I'm going to try this
        again in a freshly booted machine...

    I didn't try fixing this myself -- you may want to contact Mark
    Nahabedian at LMI, since I think he has written a patch (currently in
    the LMI system) that correctly does the deallocation.  If you make any
    headway, please get back to me so that the neccessary changes can be
    merged here and patched.

unwire-page appeared to do the right thing after I rebooted.  I will
ask Naha about it though...

-- Scott
13-May-84 14:06:45-EDT,577;000000000000
Received: from SCRC-TENEX by MIT-OZ via Chaosnet; 13 May 84 14:06-EDT
Date: Sunday, 13 May 1984  14:00-EDT
From: DLW at SCRC-TENEX
To:   Henry Minsky <HQM at MIT-MC>
Cc:   BUG-LISPM at MIT-OZ
Subject: not getting the filer server on the first try
In-reply-to: The message of 13 May 1984 01:05-EDT from Henry Minsky <HQM at MIT-MC>

I have been noticing this, too.  If you try to look at the directory
of FOO-RIVER|FEP0:>*.*.*, it usually "cannot connect", but then if you
Resume it works.  I know LMFS takes time to start up, but does the FEP
FS also take as long?
13-May-84 15:11:50-EDT,1408;000000000000
Received: from SCRC-TENEX by MIT-OZ via Chaosnet; 13 May 84 15:11-EDT
Date: 13 May 1984 1508-EDT
From: Bernard S. Greenberg <BSG@SCRC-TENEX>
Subject: Re: not getting the filer server on the first try
To: DLW@SCRC-TENEX
cc: HQM@MIT-MC, BUG-LISPM@MIT-OZ
In-Reply-To: The message of Sunday, 13 May 1984  14:00-EDT from DLW at SCRC-TENEX

Return-path: <DLW@SCRC-TENEX>
Received: from SCRC-STONY-BROOK by SCRC-TENEX with CHAOS; Sun 13-May-84 14:06:46-EDT
Received: from MIT-OZ by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 32175; Sun 13-May-84 14:08:58-EDT
Received: from SCRC-TENEX by MIT-OZ via Chaosnet; 13 May 84 14:06-EDT
Date: Sunday, 13 May 1984  14:00-EDT
From: DLW at SCRC-TENEX
To:   Henry Minsky <HQM at MIT-MC>
Cc:   BUG-LISPM at MIT-OZ
Subject: not getting the filer server on the first try
In-reply-to: The message of 13 May 1984 01:05-EDT from Henry Minsky <HQM at MIT-MC>

I have been noticing this, too.  If you try to look at the directory
of FOO-RIVER|FEP0:>*.*.*, it usually "cannot connect", but then if you
Resume it works.  I know LMFS takes time to start up, but does the FEP
FS also take as long?
----
It is not LMFS starting up.  It is the fact that the server
has to log in, which includes namespace interaction, and
trying to read its init file, and maybe doing so,
which must complete before it can answer the RFC.

NEw server system needed.
-------
13-May-84 21:16:19-EDT,832;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 13 May 84 21:15-EDT
Received: from SCRC-NEPONSET by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 52616; Sun 13-May-84 21:15:33-EDT
Date: Sunday, 13 May 1984, 21:14-EDT
From: David C. Plummer <DCP at SCRC-TENEX>
Subject: not getting the filer server on the first try
To: DLW at SCRC-TENEX, Bernard S. Greenberg <BSG at SCRC-TENEX>
cc: Henry Minsky <HQM at MIT-MC>, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 13 May 84 14:00-EDT from DLW at SCRC-TENEX,
             The message of 13 May 84 15:08-EDT from Bernard S. Greenberg <BSG at SCRC-TENEX>

You are both wrong.  The :QFILE server has :WHO-LINE T on its property
list.  This causes CHAOS-SERVER-INTERNAL to try to backtranslate the
chaos address to a host.  Need I divulge what subsystem it uses to do
that...
13-May-84 21:30:05-EDT,682;000000000000
Received: from SCRC-TENEX by MIT-OZ via Chaosnet; 13 May 84 21:27-EDT
Date: 13 May 1984 2121-EDT
From: Bernard S. Greenberg <BSG@SCRC-TENEX>
Subject: Re: not getting the filer server on the first try
To: DCP@SCRC-TENEX
cc: DLW@SCRC-TENEX, HQM@MIT-MC, BUG-LISPM@MIT-OZ
In-Reply-To: The message of Sunday, 13 May 1984, 21:14-EDT from David C. Plummer <DCP at SCRC-TENEX>

No, no, I insist on taking partial credit for
this disaster.  CLEARLY bringing up lmfs to read the init file
is enough to time out the RFC.

We must share responsibility.   All these things are wrong.
Still some new way of implementing chaos servers that accounts
for all this is needed.
-------
13-May-84 21:51:59-EDT,963;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 13 May 84 21:48-EDT
Received: from SCRC-NEPONSET by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 52625; Sun 13-May-84 21:47:49-EDT
Date: Sunday, 13 May 1984, 21:46-EDT
From: David C. Plummer <DCP at SCRC-TENEX>
Subject: Re: not getting the filer server on the first try
To: Bernard S. Greenberg <BSG at SCRC-TENEX>, DCP at SCRC-TENEX
cc: DLW at SCRC-TENEX, HQM at MIT-MC, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 13 May 84 21:21-EDT from Bernard S. Greenberg <BSG at SCRC-TENEX>

    Date: 13 May 1984 2121-EDT
    From: Bernard S. Greenberg <BSG@SCRC-TENEX>

    No, no, I insist on taking partial credit for
    this disaster.
OK, but I'll give good odds the connection timed out before the server
portion of the qfile got started.  I'll bet it was still trying to
connect to LM15 and hadn't even gotten to
FS:QFILE-SERVER-FUNCTION-INTERNAL yet (which is where the login is
attempted).
13-May-84 22:24:47-EDT,1492;000000000000
Received: from SCRC-TENEX by MIT-OZ via Chaosnet; 13 May 84 22:22-EDT
Date: 13 May 1984 2219-EDT
From: Bernard S. Greenberg <BSG@SCRC-TENEX>
Subject: Re: not getting the filer server on the first try
To: DCP@SCRC-TENEX
cc: DLW@SCRC-TENEX, HQM@MIT-MC, BUG-LISPM@MIT-OZ
In-Reply-To: The message of Sunday, 13 May 1984, 21:46-EDT from David C. Plummer <DCP at SCRC-TENEX>

    Date: Sunday, 13 May 1984, 21:46-EDT
    From: David C. Plummer <DCP at SCRC-TENEX>
        Date: 13 May 1984 2121-EDT
        From: Bernard S. Greenberg <BSG@SCRC-TENEX>

        No, no, I insist on taking partial credit for
        this disaster.
    OK, but I'll give good odds the connection timed out before the server
    portion of the qfile got started.  I'll bet it was still trying to
    connect to LM15 and hadn't even gotten to
    FS:QFILE-SERVER-FUNCTION-INTERNAL yet (which is where the login is
    attempted).
Yes, CONVERSE had this problem until MMcM fixed it.  Whenever
Greg Huber at MARIE (a host not likely in Beagle's tables)
would contact me at Beagle, he would always time out while
Beagle did research on the subject of who MIT-MARIE was instead
of answering the connection.

(Now he can't talk to me at all at Concord, because the appropriate
MIT person to maintain the VMS Chaos software can't seem to be found.)

However, before the namespace system, the File Server behaved this way for
MY reason, so even if we fix yours, we will still be losing.
-------
13-May-84 23:20:19-EDT,4047;000000000000
Mail-From: X.GYRO created at 13-May-84 23:10:52
Date: Sun, 13 May 1984  23:10 EDT
Message-ID: <X.GYRO.12015142837.BABYL@MIT-OZ>
From: X.GYRO@MIT-OZ
To:   bug-lispm-mit@MIT-OZ
Subject: New package system: EXPORT doesn't take a list of strings

In System 98.29, CADR 3.4, ZMail 53.5, Experimental Local-File 48.0,
Experimental FILE-Server 8.0, microcode 306, on Mark of the Unicorn
Astarte (CADR):

I passed a list of strings as the :EXPORT option to MAKE-PACKAGE.  The
documentation explicitly says this should work.

IMPORT can trivially be made to accept a string as an argument; just change
the line (in its definition in SYS:SYS;CLPACK)
  (DOLIST (SYM (IF (AND SYMBOLS (SYMBOLP SYMBOLS)) (LIST SYMBOLS) SYMBOLS))
to
			      ...NLISTP...


>>TRAP 3023. (ARGTYP CONS M-T T CAR CAR)
The argument to CAR, "+", was of the wrong type.
The function expected a cons.
Backtrace from the debugger:

IMPORT (P.C. = 77)

 Arg 0 (SYMBOLS): "+"
 Arg 1 (PKG): #<Package C 25547245>
Local 0 (TEM): NIL
Local 1: "+"
Local 2 (SYM): NIL


EXPORT (P.C. = 220)

 Arg 0 (SYMBOLS): ("+" "-" "*" "//" ...)
 Arg 1 (PKG): #<Package C 25547245>
   --Defaulted args:--
 Arg 2 (FORCE-FLAG): NIL
Local 0 (CONFLICTS): NIL
Local 1: NIL
Local 2 (P1): NIL
Local 3: ("+" "-" "*" "//" ...)
Local 4 (SYMBOL): NIL
Local 5 (CANDIDATES): NIL
Local 6 (SYM): "+"
Local 7 (INDEX): NIL
Local 8: NIL


MAKE-PACKAGE (P.C. = 523)

 Arg 0 (NAME): "C"
 Rest arg: (:USE NIL :RELATIVE-NAMES (** **) ...)
Local 1 (NICKNAMES): NIL
Local 2 (USE): NIL
Local 3 (SUPER): NIL
Local 4 (SIZE): 128.
Local 5 (IGNORE): NIL
Local 6 (SHADOW): NIL
Local 7 (EXPORT): ("+" "-" "*" "//" ...)
Local 8 (PREFIX-NAME): NIL
Local 9 (AUTO-EXPORT-P): NIL
Local 10 (INVISIBLE): NIL
Local 11 (IMPORT): NIL
Local 12 (SHADOWING-IMPORT): NIL
Local 13 (IMPORT-FROM): NIL
Local 14 (RELATIVE-NAMES): ((GL . GLOBAL) (U . USER))
Local 15 (RELATIVE-NAMES-FOR-ME): NIL
Local 16 (IGNORE): NIL
Local 17 (EXTERNAL-ONLY): NIL
Local 18 (IGNORE): NIL
Local 19 (IGNORE): NIL
Local 20 (EXTERNAL-ONLY-P): NIL
Local 21 (TABLE-SIZE): 163.
Local 22: NIL
Local 23 (PKG): #<Package C 25547245>
Local 24 (NICK): NIL
Local 25 (SUCCESS): NIL
Local 26 (NAME): NIL
Local 27 (P): NIL
Local 28: NIL
Local 29: NIL
Local 30 (ELT): NIL


SI:EVAL1 (P.C. = 1324)

 Arg 0 (FORM): (MAKE-PACKAGE "C" (QUOTE :USE) (QUOTE NIL) ...)
   --Defaulted args:--
 Arg 1 (NOHOOK): NIL
Local 0 (ARGNUM): 9.
Local 1 (TEM): NIL
Local 2 (ENV): NIL
Local 3 (TAIL): NIL
Local 4 (FCTN): #<DTP-FEF-POINTER MAKE-PACKAGE 2351250>
Local 5 (ARG-DESC): 1179713.
Local 6 (NUM-ARGS): 9.
Local 7 (CLOSURE-PASSED): NIL
Local 8 (LAMBDA-LIST): NIL
Local 9 (LL): NIL
Local 10 (QUOTE-STATUS): NIL
Local 11 (REST-FLAG): NIL
Local 12 (ARGL): NIL
Local 13: NIL
Local 14: NIL
Local 15 (IGNORE): NIL
Local 16 (ADL): NIL
Local 17 (ITEM): NIL
Local 18 (*SELECTQ-ITEM*): NIL


Additional information supplied with call:
 SYSTEM:ADI-FEXPR-CALL

COND (P.C. = 72)

 Rest arg (CLAUSES): ((** **) (T **))
Local 1 (CLAUSES): ((T **))
Local 2 (PREDVAL): T
Local 3 (EXPRESSIONS): ((MAKE-PACKAGE "C" ** ** ...))
Local 4 (L): ((MAKE-PACKAGE "C" ** ** ...))


Remainder of stack:

SI:EVAL1 (P.C. = 1324)
ZWEI:EVAL-PRINT (P.C. = 41)
ZWEI:COMPILE-INTERVAL-PROCESS-BASIC-FORM (P.C. = 43)
COMPILER:COMPILE-DRIVER (P.C. = 765)
ZWEI:COMPILE-INTERVAL-PROCESS-FN (P.C. = 30)
COMPILER:COMPILE-STREAM (P.C. = 1075)
(:INTERNAL ZWEI:COMPILE-INTERVAL 0.) (P.C. = 40)
ZWEI:COMPILE-INTERVAL (P.C. = 442)
ZWEI:COMPILE-PRINT-INTERVAL (P.C. = 172)
ZWEI:COMPILE-DEFUN-INTERNAL (P.C. = 163)
...
ZWEI:COMMAND-EXECUTE (P.C. = 115)
ZWEI:PROCESS-COMMAND-CHAR (P.C. = 65)
(:METHOD ZWEI:WINDOW :EDIT) (P.C. = 464)
(:INTERNAL (:METHOD ZWEI:ZMACS-WINDOW :COMBINED :EDIT) 0.) (P.C. = 74)
FUNCALL (P.C. = 25)
(:METHOD ZWEI:DISPLAYER :AROUND :EDIT) (P.C. = 31)
(:METHOD ZWEI:ZMACS-WINDOW :COMBINED :EDIT) (P.C. = 47)
ZWEI:ZMACS-WINDOW-TOP-LEVEL (P.C. = 46)
SI:PROCESS-TOP-LEVEL (P.C. = 152)

13-May-84 23:24:59-EDT,4470;000000000000
Mail-From: X.GYRO created at 13-May-84 23:13:27
Date: Sun, 13 May 1984  23:13 EDT
Message-ID: <X.GYRO.12015143302.BABYL@MIT-OZ>
From: X.GYRO@MIT-OZ
To:   bug-lispm-mit@MIT-OZ
Subject: New package system: lists vs. dotted pairs

In Don't-dump-a-band! Inconsistent (unreleased patches loaded) System 98.37,
CADR 3.4, ZMail 53.5, Experimental Local-File 48.0,
Experimental FILE-Server 8.0, microcode 306, on Mark of the Unicorn
Astarte (CADR):


Even though RELATIVE-NAMES is carefully documented to take a list of
dotted pairs, the code expects a list of two-element lists.  The line
		    (LOOP FOR (NICK P) IN RELATIVE-NAMES
in MAKE-PACKAGE (SYS:SYS;CLPACK) should be
		    (LOOP FOR (NICK . P) IN RELATIVE-NAMES


>>TRAP 3031. (ARGTYP CONS M-T T CAR CAR)
The argument to CAR, GLOBAL, was of the wrong type.
The function expected a cons.
Backtrace from the debugger:

MAKE-PACKAGE (P.C. = 572)

 Arg 0 (NAME): "C"
 Rest arg: (:USE NIL :RELATIVE-NAMES (** **) ...)
Local 1 (NICKNAMES): NIL
Local 2 (USE): NIL
Local 3 (SUPER): NIL
Local 4 (SIZE): 128.
Local 5 (IGNORE): NIL
Local 6 (SHADOW): NIL
Local 7 (EXPORT): ("+" "-" "*" "//" ...)
Local 8 (PREFIX-NAME): NIL
Local 9 (AUTO-EXPORT-P): NIL
Local 10 (INVISIBLE): NIL
Local 11 (IMPORT): NIL
Local 12 (SHADOWING-IMPORT): NIL
Local 13 (IMPORT-FROM): NIL
Local 14 (RELATIVE-NAMES): ((GL . GLOBAL) (U . USER))
Local 15 (RELATIVE-NAMES-FOR-ME): NIL
Local 16 (IGNORE): NIL
Local 17 (EXTERNAL-ONLY): NIL
Local 18 (IGNORE): NIL
Local 19 (IGNORE): NIL
Local 20 (EXTERNAL-ONLY-P): NIL
Local 21 (TABLE-SIZE): 163.
Local 22: ((GL . GLOBAL) (U . USER))		; was trying to take CADAR of this
Local 23 (PKG): #<Package C 25550705>
Local 24 (NICK): GL
Local 25 (SUCCESS): NIL
Local 26 (NAME): NIL
Local 27 (P): NIL
Local 28: #<DTP-LOCATIVE 5103067>
Local 29: NIL
Local 30 (ELT): NIL


SI:EVAL1 (P.C. = 1324)

 Arg 0 (FORM): (MAKE-PACKAGE "C" (QUOTE :USE) (QUOTE NIL) ...)
   --Defaulted args:--
 Arg 1 (NOHOOK): NIL
Local 0 (ARGNUM): 9.
Local 1 (TEM): NIL
Local 2 (ENV): NIL
Local 3 (TAIL): NIL
Local 4 (FCTN): #<DTP-FEF-POINTER MAKE-PACKAGE 2351250>
Local 5 (ARG-DESC): 1179713.
Local 6 (NUM-ARGS): 9.
Local 7 (CLOSURE-PASSED): NIL
Local 8 (LAMBDA-LIST): NIL
Local 9 (LL): NIL
Local 10 (QUOTE-STATUS): NIL
Local 11 (REST-FLAG): NIL
Local 12 (ARGL): NIL
Local 13: NIL
Local 14: NIL
Local 15 (IGNORE): NIL
Local 16 (ADL): NIL
Local 17 (ITEM): NIL
Local 18 (*SELECTQ-ITEM*): NIL


Additional information supplied with call:
 SYSTEM:ADI-FEXPR-CALL

COND (P.C. = 72)

 Rest arg (CLAUSES): ((** **) (T **))
Local 1 (CLAUSES): ((T **))
Local 2 (PREDVAL): T
Local 3 (EXPRESSIONS): ((MAKE-PACKAGE "C" ** ** ...))
Local 4 (L): ((MAKE-PACKAGE "C" ** ** ...))


Additional information supplied with call:
 Values to be collected for MULTIPLE-VALUE-LIST

SI:EVAL1 (P.C. = 1324)

 Arg 0 (FORM): (COND (** **) (T **))
   --Defaulted args:--
 Arg 1 (NOHOOK): NIL
Local 0 (ARGNUM): 0.
Local 1 (TEM): NIL
Local 2 (ENV): NIL
Local 3 (TAIL): NIL
Local 4 (FCTN): #<DTP-FEF-POINTER COND 2300265>
Local 5 (ARG-DESC): 2097152.
Local 6 (NUM-ARGS): 0.
Local 7 (CLOSURE-PASSED): NIL
Local 8 (LAMBDA-LIST): NIL
Local 9 (LL): NIL
Local 10 (QUOTE-STATUS): NIL
Local 11 (REST-FLAG): NIL
Local 12 (ARGL): ((** **) (T **))
Local 13: NIL
Local 14: NIL
Local 15 (IGNORE): NIL
Local 16 (ADL): NIL
Local 17 (ITEM): NIL
Local 18 (*SELECTQ-ITEM*): NIL


ZWEI:EVAL-PRINT (P.C. = 41)

 Arg 0 (OBJECT): (COND (** **) (T **))
 Arg 1 (PRINT-RESULTS-STREAM): #:*TYPEIN-WINDOW*-SYN-STREAM
Local 0 (LIST): NIL
Local 1: NIL
Local 2 (VAL): NIL


Remainder of stack:

ZWEI:COMPILE-INTERVAL-PROCESS-BASIC-FORM (P.C. = 43)
COMPILER:COMPILE-DRIVER (P.C. = 765)
ZWEI:COMPILE-INTERVAL-PROCESS-FN (P.C. = 30)
COMPILER:COMPILE-STREAM (P.C. = 1075)
(:INTERNAL ZWEI:COMPILE-INTERVAL 0.) (P.C. = 40)
ZWEI:COMPILE-INTERVAL (P.C. = 442)
ZWEI:COMPILE-PRINT-INTERVAL (P.C. = 172)
ZWEI:COMPILE-DEFUN-INTERNAL (P.C. = 163)
ZWEI:COM-EVALUATE-REGION (P.C. = 42)
ZWEI:COMMAND-EXECUTE (P.C. = 115)
ZWEI:PROCESS-COMMAND-CHAR (P.C. = 65)
(:METHOD ZWEI:WINDOW :EDIT) (P.C. = 464)
(:INTERNAL (:METHOD ZWEI:ZMACS-WINDOW :COMBINED :EDIT) 0.) (P.C. = 74)
FUNCALL (P.C. = 25)
(:METHOD ZWEI:DISPLAYER :AROUND :EDIT) (P.C. = 31)
(:METHOD ZWEI:ZMACS-WINDOW :COMBINED :EDIT) (P.C. = 47)
ZWEI:ZMACS-WINDOW-TOP-LEVEL (P.C. = 46)
SI:PROCESS-TOP-LEVEL (P.C. = 246)

13-May-84 23:33:11-EDT,3819;000000000000
Mail-From: X.GYRO created at 13-May-84 23:16:24
Date: Sun, 13 May 1984  23:16 EDT
Message-ID: <X.GYRO.12015143842.BABYL@MIT-OZ>
From: X.GYRO@MIT-OZ
To:   bug-lispm-mit@MIT-OZ
Subject: LMFS bug, excited by MAKE-SYSTEM

In Don't-dump-a-band! Inconsistent (unreleased patches loaded) System 98.37,
CADR 3.4, ZMail 53.5, Experimental Local-File 48.0,
Experimental FILE-Server 8.0, microcode 306, on Mark of the Unicorn
Astarte (CADR):


MAKE-SYSTEM does this consistently in System 98 when the relevant files are on
the local LMFS.  The problem is that the arguments to LOOKUP-FILE were changed
sometime between 94 and 98, but the macro OPENING-INPUT-FILE in
SYS:FILE;FSGUTS was not updated appropriately; this macro is used in (:METHOD
FS:LOCAL-FILE-MIXIN :MULTIPLE-FILE-PLISTS) in SYS:FILE;FSNAME.  I think that
the occurrence of ':INPUT in OPENING-INPUT-FILE should be changed to ':ERROR
-- this seems to be the intent -- but I'm not really sure of that.


>>ERROR: The argument IF-DOES-NOT-EXIST was :INPUT, which is not NIL, :ERROR or :CREATE.
Backtrace from the debugger:

FS:LOOKUP-FILE (P.C. = 505)

 Arg 0 (DIRSPEC): ("NL" "SYS")
 Arg 1 (NAME): "SYSDCL"
 Arg 2 (TYPE): "QFASL"
 Arg 3 (VERSION): :NEWEST
 Arg 4 (IF-DOES-NOT-EXIST): :INPUT
   --Defaulted args:--
 Arg 5 (IF-EXISTS): NIL
 Arg 6 (REALLY-OPEN): NIL
 Arg 7 (DELETED?): T
Local 0 (DIRECTORY): #<LMFS-Directory NL SYS>
Local 1 (NO-NEW-VERSION): NIL
Local 2 (USE-EXISTING): NIL
Local 3 (OLD-FILE): NIL
Local 4: #<DTP-LOCATIVE 5205321>
Local 5 (FILE): NIL
Local 6 (LOC): (#<LMFS-File "NL.SYS; SYSDCL.LISP#162"> #<LMFS-File "NL.SYS; TYPES.LISP#25">)
Local 7 (LAST-VERSION-SEEN): NIL
Local 8 (NEWEST): NIL


(:METHOD FS:LOCAL-FILE-MIXIN :MULTIPLE-FILE-PLISTS) (P.C. = 116)
  (SELF is #FS:LM-PATHNAME "ASTARTE: NL.SYS; SYSDCL.LISP#>")

 Arg 0 (OPERATION): :MULTIPLE-FILE-PLISTS
 Arg 1 (PATHNAMES): (#FS:LOGICAL-PATHNAME "SYS: SYS; SYSDCL QFASL >" #FS:LOGICAL-PATHNAME "SYS: SYS; SYSDCL LISP >")
 Arg 2 (OPTIONS): NIL
Local 0: NIL
Local 1: #<DTP-LOCATIVE 627130>
Local 2: (#FS:LOGICAL-PATHNAME "SYS: SYS; SYSDCL QFASL >" #FS:LOGICAL-PATHNAME "SYS: SYS; SYSDCL LISP >")
Local 3 (PATHNAME): #FS:LOGICAL-PATHNAME "SYS: SYS; SYSDCL QFASL >"
Local 4 (TPATHNAME): #FS:LM-PATHNAME "ASTARTE: NL.SYS; SYSDCL.QFASL#>"
Local 5 (FILE): NIL


FS:LOGICAL-PATHNAME-PASS-ON (P.C. = 25)

 Rest arg (REST): (:MULTIPLE-FILE-PLISTS (#FS:LOGICAL-PATHNAME "SYS: SYS; SYSDCL QFASL >" #FS:LOGICAL-PATHNAME "SYS: SYS; SYSDCL LISP >") NIL)


FS:MULTIPLE-FILE-PLISTS (P.C. = 121)

 Arg 0 (FILENAMES): (#FS:LOGICAL-PATHNAME "SYS: SYS; SYSDCL QFASL >" #FS:LOGICAL-PATHNAME "SYS: SYS; SYSDCL LISP >")
 Rest arg (OPTIONS): NIL
Local 1 (HOST-FILE-LIST): ((#FS:LOGICAL-PATHNAME "SYS: SYS; SYSDCL LISP >"))
Local 2: NIL
Local 3 (FILENAME): #FS:LOGICAL-PATHNAME "SYS: SYS; SYSDCL LISP >"
Local 4 (HOST): #FS:LOGICAL-HOST "SYS"
Local 5 (LIST): (#FS:LOGICAL-PATHNAME "SYS: SYS; SYSDCL LISP >")
Local 6: #<DTP-LOCATIVE 627105>
Local 7: NIL


SI:SYSTEM-GET-FILE-PROPERTY-LIST (P.C. = 102)

 Arg 0 (FILE): #FS:LOGICAL-PATHNAME "SYS: SYS; SYSDCL LISP >"
   --Defaulted args:--
 Arg 1 (ERROR-P): NIL


Remainder of stack:

SI:SYSTEM-GET-CREATION-DATE (P.C. = 32)
SI:FILE-NEWER-THAN-FILE-P (P.C. = 22)
SI:QUEUE-FILES-AS-NEEDED (P.C. = 73)
SI:QUEUE-ONE-TRANSFORMATION (P.C. = 122)
SI:PERFORM-TRANSFORMATIONS (P.C. = 116)
SI:PERFORM-TRANSFORMATIONS (P.C. = 77)
MAKE-SYSTEM (P.C. = 236)
SI:MAYBE-RELOAD-FILE (P.C. = 217)
SI:MAYBE-RELOAD-SYSTEM-DECLARATION (P.C. = 107)
MAKE-SYSTEM (P.C. = 133)
SI:EVAL1 (P.C. = 1324)
SI:EVAL-ABORT-TRIVIAL-ERRORS (P.C. = 61)
SI:LISP-TOP-LEVEL1 (P.C. = 444)
SI:LISP-TOP-LEVEL2 (P.C. = 27)
SI:PROCESS-TOP-LEVEL (P.C. = 246)
SI:LISP-TOP-LEVEL (P.C. = 47)

14-May-84 14:56:56-EDT,2719;000000000000
Received: from SCRC-YUKON by MIT-OZ via Chaosnet; 14 May 84 14:22-EDT
Received: from SCRC-YANGTZE by SCRC-YUKON via CHAOS with CHAOS-MAIL id 40569; Mon 14-May-84 14:19:48-EDT
Date: Monday, 14 May 1984, 14:18-EDT
From: Carl Hoffman <CWH at SCRC-TENEX>
Subject: Re: not getting the filer server on the first try
To: BSG at SCRC-TENEX, DCP at SCRC-TENEX
Cc: DLW at SCRC-TENEX, HQM at MIT-MC, BUG-LISPM at MIT-OZ
In-reply-to: The message of 13 May 84 21:21-EDT from Bernard S. Greenberg <BSG at SCRC-TENEX>,
             The message of 13 May 84 21:46-EDT from David C. Plummer <DCP at SCRC-TENEX>,
             The message of 13 May 84 22:19-EDT from Bernard S. Greenberg <BSG at SCRC-TENEX>

    Date: 13 May 1984 2121-EDT
    From: Bernard S. Greenberg <BSG@SCRC-TENEX>

    No, no, I insist on taking partial credit for
    this disaster.  CLEARLY bringing up lmfs to read the init file
    is enough to time out the RFC.

You should accept the connection as the very first thing before you try
bringing up LMFS.  If you later decide that you can't provide the service, you
can then close the connection with a descriptive reason.  This won't cause any
hardship to the user since file service is not like mail service.  Only one
specific host can provide the service the user is looking for.

    Date: Sunday, 13 May 1984, 21:46-EDT
    From: David C. Plummer <DCP at SCRC-TENEX>

    OK, but I'll give good odds the connection timed out before the server
    portion of the qfile got started.  I'll bet it was still trying to
    connect to LM15 and hadn't even gotten to
    FS:QFILE-SERVER-FUNCTION-INTERNAL yet (which is where the login is
    attempted).

If this is what is going on, then even fixing the file server to accept the
connection immediately will not solve the problem.  The server system needs to
be fixed.

It wouldn't suprise me if that is what is going on.  When I wrote the first
chaos mail server for the mailer, the server would as the very first thing
look at the value of a special variable, and use that to decide whether to
accept or reject the connection.  Even doing only this, I sometimes noticed
that connections to the mailer would time out, before the flow of control ever
even reached the chaos-mail server.

This may have been fixed recently, though.  MMcM tried reproducing it and was
unable to.

    Date: 13 May 1984 2219-EDT
    From: Bernard S. Greenberg <BSG@SCRC-TENEX>
    However, before the namespace system, the File Server behaved this way for
    MY reason, so even if we fix yours, we will still be losing.

Is there any reason why you can't accept the connection immediately before
doing the rest of your stuff?
14-May-84 15:08:30-EDT,1887;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 14 May 84 14:44-EDT
Received: from SCRC-CONCORD by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 32484; Mon 14-May-84 14:46:15-EDT
Date: Monday, 14 May 1984, 14:44-EDT
From: Bernard S. Greenberg <BSG at SCRC-TENEX>
Subject: Re: not getting the filer server on the first try
To: CWH at SCRC-TENEX, DCP at SCRC-TENEX
Cc: DLW at SCRC-TENEX, HQM at MIT-MC, BUG-LISPM at MIT-OZ
In-reply-to: The message of 14 May 84 14:18-EDT from Carl Hoffman <CWH at SCRC-TENEX>

    Date: Monday, 14 May 1984, 14:18-EDT
    From: Carl Hoffman <CWH at SCRC-TENEX>

	Date: 13 May 1984 2121-EDT
	From: Bernard S. Greenberg <BSG@SCRC-TENEX>

	No, no, I insist on taking partial credit for
	this disaster.  CLEARLY bringing up lmfs to read the init file
	is enough to time out the RFC.

    You should accept the connection as the very first thing before you try
    bringing up LMFS.  
It has nothing to do with bringing up LMFS.  It has to do with logging in,
(as in (login 'file-server), not as file server LOGIN command)
which MAY read an init file which MAY bring up [this or another] LMFS,
or lose in this way crosshostorecursively.

	Date: 13 May 1984 2219-EDT
	From: Bernard S. Greenberg <BSG@SCRC-TENEX>
	However, before the namespace system, the File Server behaved this way for
	MY reason, so even if we fix yours, we will still be losing.

    Is there any reason why you can't accept the connection immediately before
    doing the rest of your stuff?
If I can reconstruct the necessary lossages.....  I seem to remember
some crap about the order of binding user-id, logging in, and
establishing file server identity, but in retrospect, none of this makes
any sense as a reason to not accept the connection immediately, before
logging in the machine.   Doubtless when I try to fix it I will find
out...
14-May-84 16:37:23-EDT,699;000000000000
Received: from MIT-LISPM-24 by MIT-OZ via Chaosnet; 14 May 84 16:32-EDT
Date: Monday, 14 May 1984, 16:32-EDT
From: Edward H Lay <EHL at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In System 98.43, CADR 3.6, ZMail 53.14, MIT-Specific 22.0, microcode 309,
ZM MIT, on Lisp Machine Twenty-four:

Could MAKE-PACKAGE use STRING-UPCASE or something on nicknames ?
Currently, it seems to be using just STRING which causes you to lose in
the case where you say:

(MAKE-PACKAGE "BOXER-USER" ':NICKNAMES '("bu"))

DESCRIBE on the newly created package reveals that it thinks its
nickname is "bu".  Unfortanely, FIND-PACKAGE seems to convert symbols
into uppercase so that (FIND-PACKAGE 'bu) loses.

Ed
14-May-84 16:43:47-EDT,901;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 14 May 84 16:33-EDT
Date: 14 May 1984 16:32-EDT
From: Kent M Pitman <KMP @ MIT-MC>
Subject: Proceeding CHAOS:CHAOS-HOST-NOT-RESPONDING-DURING-CONNECTION
To: BUG-LISPM @ MIT-MC
cc: KMP @ MIT-MC, KBE-I-FILE @ MIT-OZ

In Symbolics Release 4.5 on Avatar (CADR):

There should be an error flavor to denote the general class of errors
due to timeout. I note that CHAOS:CHAOS-HOST-NOT-RESPONDING-DURING-CONNECTION
is not built on any such flavor. As such, I see no clean way to write
something like:

 (CONDITION-BIND ((SYS:TIMEOUT #'(LAMBDA (COND)
				    (IF (MEMQ ':WAIT-LONGER
					      (SEND COND ':PROCEED-TYPES))
					(SEND COND ':PROCEED ':WAIT-LONGER)))))
   ...)

This would be useful in various kinds of batch applications.

Can someone comment on whether this could be made to work and/or would be
a good idea? Thanks.
-kmp
14-May-84 18:08:28-EDT,927;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 14 May 84 18:06-EDT
Date: 14 May 1984 18:03-EDT
From: Kent M Pitman <KMP @ MIT-MC>
Subject: Notification about erring processes
To: BUG-LISPM @ MIT-MC
cc: KMP @ MIT-MC, CWH @ SCRC-STONY-BROOK

In Symbolics Release 4.5 on Merlin (3600):

I wonder if it wouldn't be handy to have a mouse button on error notification
windows which would simulate a c-Abort or c-m-Abort on the erring window.
Perhaps Mouse-Middle could do that and Mouse-Right could offer the menu
that Peek offers. I don't know how difficult it would be to pass the requisite
information to make this work; I don't know what the control structure is.
But I do know that it is quite frequent that I know in advance that the only
thing I'm going to do once I select the erring window (when it's an error
I anticipated) is wait for it to enter the debugger, type Abort, and de-select
the window.
-kmp
14-May-84 21:02:01-EDT,1136;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 14 May 84 20:54-EDT
Date: 14 May 1984  17:44 PDT (Mon)
Message-ID: <[SRI-NIC].IAN.14-May-84 17:44:54>
From: Ian Macky <Ian@SRI-NIC>
To:   Patrick A. O'Donnell <PAO@MIT-EECS>
Cc:   BUG-FILE@MIT-OZ, BUG-LISPM@MIT-OZ

    Date: Thursday, 10 May 1984, 20:26-EDT
    From: Patrick A. O'Donnell <PAO at MIT-EECS>
    To:   BUG-LISPM at MIT-OZ, BUG-FILE at MIT-OZ
    Received: from MIT-MC by SRI-NIC.ARPA with TCP; Thu 10 May 84 17:33:46-PDT
    Received: from MIT-MC by MIT-OZ via Chaosnet; 10 May 84 20:27-EDT

    In Release 5.0 [Beta Test rev 7], FEP 18, on Lisp Machine Robot-2 (3600):

    Easily reproduced, simply open and submit about 6 files with the same
    file server, for example, using the program in RB2:>utils>plotmet.lisp.

    >>Error: File system bug on host OZ:
             Can't submit file
             For OZ:PS:<PUMA.DATA>PAO-2.CTL

The FILE job's MSEND is getting a "PID quota exceeded" error.  I don't know
where these PID quotas come from - if someone knows how to make sure that
FILE jobs don't run in the rather small (5) ceiling for PIDs
14-May-84 21:13:18-EDT,1858;000000000000
Mail-From: RPK created at 14-May-84 21:06:44
Date: 14 May 1984  21:06 EDT (Mon)
Message-ID: <RPK.12015382375.BABYL@MIT-OZ>
From: "Robert P. Krajewski" <RPK@MIT-OZ>
To:   Edward H Lay <EHL@MIT-OZ>
Subject: Packages: Common Lisp
Cc:   BUG-LISPM@MIT-OZ
In-reply-to: Msg of 14 May 1984 16:32-EDT from Edward H Lay <EHL>

    From: Edward H Lay <EHL>

    In System 98.43, CADR 3.6, ZMail 53.14, MIT-Specific 22.0, microcode 309,
    ZM MIT, on Lisp Machine Twenty-four:

    Could MAKE-PACKAGE use STRING-UPCASE or something on nicknames ?
    Currently, it seems to be using just STRING which causes you to lose in
    the case where you say:

    (MAKE-PACKAGE "BOXER-USER" ':NICKNAMES '("bu"))

    DESCRIBE on the newly created package reveals that it thinks its
    nickname is "bu".  Unfortanely, FIND-PACKAGE seems to convert symbols
    into uppercase so that (FIND-PACKAGE 'bu) loses.

The problem here is that the new package system is doing the right (Common
Lisp) thing, but not the most intuitive thing.  Packages are named by strings
now: symbols are converted into string before a package reference is made.
Here's the rub: the string comparison is case-sensitive.  For example,
BOXER-USER:FRAME and |bu|:FRAME are the same symbol, according to the
MAKE-PACKAGE form above.

You can find documentation on this strange and wondrous package system by
perusing OZ:PS:<L.DOC>SYS98.PACKAGE.  The Common Lisp specification is in the
forthcoming Common Lisp manual.  (There are some pre-press ``Mary Poppins''
editions floating around Tech Square.)  The new Chinual will also document
the new package system.  The Lisp Machine system includes some new, useful
interfaces to the new functions; these interfaces are not compatible with
Common Lisp, but the LMIT and S brands are compatible with each other.

``Bob''
14-May-84 21:22:28-EDT,749;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 14 May 84 21:17-EDT
Date: 14 May 1984  18:12 PDT (Mon)
Message-ID: <[SRI-NIC].IAN.14-May-84 18:12:23>
From: Ian Macky <Ian@SRI-NIC>
To:   Ian Macky <Ian@SRI-NIC>
Cc:   BUG-FILE@MIT-OZ, BUG-LISPM@MIT-OZ,
      Patrick A. O'Donnell <PAO@MIT-EECS>
In-reply-to: Msg of 14 May 1984  17:44-PDT from Ian Macky <Ian>

Oops, I didn't mean to send that message off yet... turns out that the
FILE job was asking for a new PID at each batch request, and after 5
<SYSTEM>INFO wouldn't give it any more (despite the fact that the old
ones seemed to go away)...  so anyway, I made sure it only requested a
PID the first time and now it'll take lotz 'n' lotz more (I stopped
after the first 10 or so)...
14-May-84 22:25:56-EDT,510;000000000000
Mail-From: RMS created at 14-May-84 22:23:20
Date: Mon 14 May 84 22:23:19-EDT
From: RMS@MIT-OZ
Subject: Case sensitive package names
To: ehl@MIT-OZ, bug-lispm@MIT-OZ

I think the change you suggest would be an improvement,
but to be compatible with Common Lisp it is necessary to be sensitive
to case in package names.  I think you can specify the names with
symbols rather than strings in the MAKE-PACKAGE.  Then you don't
have to pay attention to what case you write the symbol names in.
-------
14-May-84 23:04:33-EDT,271;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 14 May 84 23:04-EDT
Date: 14 May 1984 23:03-EDT
From: Christopher C. Stacy <CSTACY @ MIT-MC>
To: BUG-LISPM @ MIT-MC


I wish that there was a command in PEEK to return a value
of some object I point at on the screen.
14-May-84 23:33:07-EDT,1537;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 14 May 84 23:32-EDT
Received: from SCRC-YANGTZE by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 32738; Mon 14-May-84 22:56:48-EDT
Date: Mon, 14 May 84 22:50 EDT
From: Carl Hoffman <CWH@SCRC-RIVERSIDE.ARPA>
Subject: Notification about erring processes
To: KMP@MIT-MC.ARPA, BUG-LISPM@MIT-MC.ARPA
In-reply-to: The message of 14 May 84 18:03-EDT from Kent M Pitman <KMP at MIT-MC>

    Date: 14 May 1984 18:03-EDT
    From: Kent M Pitman <KMP @ MIT-MC>

    In Symbolics Release 4.5 on Merlin (3600):

    I wonder if it wouldn't be handy to have a mouse button on error notification
    windows which would simulate a c-Abort or c-m-Abort on the erring window.
    Perhaps Mouse-Middle could do that and Mouse-Right could offer the menu
    that Peek offers.

It would have to be on a shifted mouse click or keystroke, or it would have to
confirm.  Mouse-Middle would be too easy to type accidentally.  How about
s-Abort and s-m-Abort?

		      I don't know how difficult it would be to pass the requisite
    information to make this work; I don't know what the control structure is.

In the new mouse click regime, the requisite information is the click, and
that's already passed.  It is now just a matter of how the click is
interpreted by the program which runs in the notification pop-up window.

When that program uses the CP with its own comtab, you'll be able to add your
own command to that comtab, if we decide not to add this command to the
system.
15-May-84 00:30:28-EDT,1583;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 15 May 84 00:29-EDT
Date: 15 May 1984  00:17 EDT (Tue)
Message-ID: <SR.EHPYC.12015417168.BABYL@MIT-SPEECH>
From: Scott Cyphers <SR.EHPYC@MIT-SPEECH>
To:   Carl Hoffman <CWH@SCRC-RIVERSIDE.ARPA>
Cc:   BUG-LISPM@MIT-MC.ARPA, KMP@MIT-MC.ARPA
Subject: Wishful thinking
In-reply-to: Msg of 14 May 1984  22:50-EDT from Carl Hoffman <CWH at SCRC-RIVERSIDE.ARPA>


    In the new mouse click regime, the requisite information is the click, and
    that's already passed.  It is now just a matter of how the click is
    interpreted by the program which runs in the notification pop-up window.

    When that program uses the CP with its own comtab, you'll be able to add your
    own command to that comtab, if we decide not to add this command to the
    system.

Is there any more information (I don't care how correct it is) about
this?  Spire uses fake comtabs right now which I'll soon be converting
to real ones, and I would like do it in a way that fits the general
philosophy of things (which is why I made them like comtabs in the
first place).  In general, such information on trends would be far
more useful than the occasional references that pop up in bug
responses like this one, followed by the overwhelming flood of things
in the release notes, (when it is often too late), if that were
possible, since there have been occasions where I would have done
something completely differently if I had had a glimpse of the future,
(as well as times when I would have threatened you with worse than
death).
15-May-84 12:53:12-EDT,1750;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 15 May 84 12:49-EDT
Received: from SCRC-YANGTZE by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 52959; Tue 15-May-84 12:49:37-EDT
Date: Tue, 15 May 84 12:48 EDT
From: Carl Hoffman <CWH@SCRC-RIVERSIDE.ARPA>
Subject: Wishful thinking
To: SR.EHPYC%MIT-SPEECH@SCRC-RIVERSIDE.ARPA
Cc: BUG-LISPM@MIT-MC.ARPA, KMP@MIT-MC.ARPA
In-reply-to: <SR.EHPYC.12015417168.BABYL@MIT-SPEECH>

    Date: 15 May 1984  00:17 EDT (Tue)
    From: Scott Cyphers <SR.EHPYC@MIT-SPEECH>

	In the new mouse click regime, the requisite information is the click, and
	that's already passed.  It is now just a matter of how the click is
	interpreted by the program which runs in the notification pop-up window.

	When that program uses the CP with its own comtab, you'll be able to add your
	own command to that comtab, if we decide not to add this command to the
	system.

    Is there any more information (I don't care how correct it is) about
    this?

There is information about the changes to mouse input in section 2.1.29 of the
Release 5.0 Release Notes.

The design of the CP and the comtabs the CP will use is not yet complete.

		   In general, such information on trends would be far
    more useful than the occasional references that pop up in bug
    responses like this one, followed by the overwhelming flood of things
    in the release notes, (when it is often too late), if that were
    possible, since there have been occasions where I would have done
    something completely differently if I had had a glimpse of the future,
    (as well as times when I would have threatened you with worse than
    death).

I'm afraid we don't have the resources to prepare such information.
15-May-84 13:09:14-EDT,1882;000000000000
Received: from MIT-LISPM-1 by MIT-OZ via Chaosnet; 15 May 84 13:07-EDT
Date: Tuesday, 15 May 1984, 13:07-EDT
From: Robert P. Krajewski <RpK at MIT-OZ>
Subject: Telnet Imlac emulation seems to tickle flavor wierdness
To: BUG-LISPM-MIT at MIT-OZ

In System 98.48, CADR 3.6, ZMail 53.17, MIT-Specific 22.0, microcode 309,
on Lisp Machine One:

Insert your description of the circumstances here:

I was telnetted to EDDIE with Imlac emulation on (and Eddie, of course,
was informed of the terminal type).  During a --More-- (which uses
reverse video), this happened:

>>TRAP 3344 (NO-MAPPING-TABLE)
Flavor NIL is not a component of SELF's flavor, TELNET,
on a call to a function which assumes SELF is a NIL.
Backtrace from the debugger:

SUPDUP:GRAPHICS-RESET (P.C. = 56)

 Arg 0 (WINDOW): #<TELNET Telnet 1 4666340 deexposed>
Local 0 (CORRECTED-RIGHT): NIL
Local 1 (CORRECTED-BOTTOM): NIL


SUPDUP:SUPDUP-RESET (P.C. = 27)

 Arg 0 (SHEET): #<TELNET Telnet 1 4666340 deexposed>


(:METHOD SUPDUP:BASIC-TELNET :HANDLE-IMLAC-ESCAPE) (P.C. = 114)
  (SELF is #<TELNET Telnet 1 4666340 deexposed>)

 Arg 0 (OPERATION): :HANDLE-IMLAC-ESCAPE
Local 0 (CH): 30
Local 1: NIL


(:METHOD SUPDUP:BASIC-TELNET :BUFFERED-TYO) (P.C. = 150)
  (SELF is #<TELNET Telnet 1 4666340 deexposed>)

 Arg 0 (OPERATION): :TYO
 Arg 1 (CH): 177
Local 0 (CH1): NIL
Local 1 (IGNORE): NIL
Local 2 (Y): NIL


(:METHOD SUPDUP:BASIC-NVT :TYPEOUT-TOP-LEVEL) (P.C. = 136)
  (SELF is #<TELNET Telnet 1 4666340 deexposed>)

 Arg 0 (OPERATION): :TYPEOUT-TOP-LEVEL
Local 0: (SYSTEM:REMOTE-NETWORK-ERROR SUPDUP:TYPEOUT-NET-ERROR)
Local 1: ((SYSTEM:REMOTE-NETWORK-ERROR SUPDUP:TYPEOUT-NET-ERROR))
Local 2 (OUTPUT-FUN): #<DTP-FEF-POINTER (:METHOD SUPDUP:BASIC-TELNET :BUFFERED-TYO) 17040123>
Local 3 (CH): 177


Remainder of stack:

SI:PROCESS-TOP-LEVEL (P.C. = 246)
15-May-84 23:37:33-EDT,1196;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 15 May 84 23:32-EDT
Received: from SCRC-CHICOPEE by SCRC-YUKON via CHAOS with CHAOS-MAIL id 40970; Tue 15-May-84 23:18:22-EDT
Date: Tue, 15 May 84 23:19 EDT
From: "Daniel L. Weinreb" <DLW@SCRC-RIVERSIDE.ARPA>
Subject: Wishful thinking
To: SR.EHPYC%MIT-SPEECH@SCRC-RIVERSIDE.ARPA
Cc: BUG-LISPM@MIT-MC.ARPA, KMP@MIT-MC.ARPA
In-reply-to: The message of 15 May 84 12:48-EDT from Carl Hoffman <CWH at SCRC-RIVERSIDE>

		   In general, such information on trends would be far
    more useful than the occasional references that pop up in bug
    responses like this one, followed by the overwhelming flood of things
    in the release notes, (when it is often too late), if that were
    possible, since there have been occasions where I would have done
    something completely differently if I had had a glimpse of the future,
    (as well as times when I would have threatened you with worse than
    death).

Suppose we told you that we were planning to do X, and you decided to do
something completely differently as a result, and then we decided to
change our minds and not do X after all.  Then how would you feel?  Be
honest.
16-May-84 04:13:41-EDT,265;000000000000
Mail-From: RMS created at 16-May-84 04:12:51
Date: Wed 16 May 84 04:12:51-EDT
From: RMS@MIT-OZ
Subject: Wishful Thinking
To: bug-lispm@MIT-OZ

They are unlikely to tell you what they are thinking about doing
because they don't want me to find out.
-------
16-May-84 04:24:03-EDT,323;000000000000
Received: from MIT-LISPM-18 by MIT-OZ via Chaosnet; 16 May 84 04:23-EDT
Date: Wednesday, 16 May 1984, 04:23-EDT
From: Richard M. Stallman <RMS at MIT-OZ>
Subject: LMFS bug, excited by MAKE-SYSTEM
To: X.GYRO at MIT-OZ, bug-lispm-mit at MIT-OZ

You are correct about this.  It is fixed in FS patch 48.4, now finished.
16-May-84 04:25:46-EDT,3025;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 16 May 84 04:25-EDT
Date: 16 May 1984  04:27 EDT (Wed)
Message-ID: <SR.EHPYC.12015724838.BABYL@MIT-SPEECH>
From: Scott Cyphers <SR.EHPYC@MIT-SPEECH>
To:   bug-lispm@oz
Subject: Tape problems with distributing systems in Rel. 5

Tonight I tried bringing Spire to another site which was running
Release 5.  Although ultimately successful, I ran into the following
problems:

I used (dis:write-distribution-tape) here to write the tapes.  They
were remote tapes via RTAPE on speech.  The site was running beta test
Rel. 5, but they were old versions, around 4 or so.  None of the tapes
would load; they all claimed to have some kind of improper formatting,
immediately after specifying where the tape was to be read from.

Suspecting the problem to be an old version of Rel 5, I found out they
had just gotten the real Rel. 5 for 3600, so I loaded it up with disk
restore and (dis:load-distribution-tape) to load in the source files.
That all worked fine.  Then I loaded in the tape of 3600 files fro
Spire, and that worked fine, with one exception, which I'll get to
soon.  Anyways, for that tape, the real release 5 fixed the problem.

Then came the LM2s.  They absolutely refused to read the tape, which
had a Rev. 7 band plus Spire on it.  So, I loaded the file
SYS:DISTRIBUTION;LOAD.LISP into the editor buffer, compiled it, and,
sure enough, I was able to load the band.  So evidently some important
patch made it to the source but not to the compiled code of Rev 7.
The band booted fine, and it was quite interesting to watch it notice
it wasn't at MIT anymore, until

It claimed there was no user called LISP-MACHINE when it tried to log
in as it, I think for the SYS translation updates.  It knew where the
nameserver was, and there was a user object LISP-MACHINE on that
namespace server, sosomething must have been confused.  This was a
Rev. 7 LM2 Beta test plus Spire band.  It asked if there was a host
which LISP-MACHINE should log in to, and I told it to logi in to the
namespace server host, but not to create an object for it.  That
worked fine, and so when all was done, I disk-save the band.

Next came loading the LM2 versios of the files for Spire.  The Rev 7
band and the real Rel. 5 band on the 3600 both refused to load the
tape this time, but by loading the SYS:DISTRIBUTION;LOAD.LISP file in
and compiling it, the LM2 was able to load the tape without any
problems.  So, evidently, the real release 5 is also missing the
compiled version of some patch.  In all cases, it was the same
identical error, which I  unfortunately forget the exact name of.  It
was definitely reproducible.

There was one more problem on all three tapes: The very last block of
the entire tape was not of a multiple of four length, and, so, it
could not be read.  I am a worrried about the state of the very end of
the band I loaded, since that block probably included the tail end of
it, although things seemed to work.
16-May-84 05:07:32-EDT,270;000000000000
Received: from MIT-LISPM-18 by MIT-OZ via Chaosnet; 16 May 84 05:06-EDT
Date: Wednesday, 16 May 1984, 05:06-EDT
From: Richard M. Stallman <RMS at MIT-OZ>
Subject: Query Replace with the region turned on
To: RpK at MIT-OZ, BUG-LISPM-MIT at MIT-OZ

Fixed in 98.49.
16-May-84 08:27:26-EDT,399;000000000000
Mail-From: BAGLEY created at 16-May-84 08:27:03
Date: 16 May 1984  08:27 EDT (Wed)
Message-ID: <BAGLEY.12015768373.BABYL@MIT-OZ>
From: Steven Christopher Bagley <BAGLEY@MIT-OZ>
To:   bug-lispm@MIT-OZ
Subject: missing file

Why was src:<l.io1>press.bin-5 deleted?  Some people, myself included,
use it.  The latest version of press.lisp was incorrectly edited and
doesn't compile properly.
16-May-84 13:46:07-EDT,448;000000000000
Received: from MIT-LISPM-6 by MIT-OZ via Chaosnet; 16 May 84 13:45-EDT
Date: Wednesday, 16 May 1984, 13:45-EDT
From: Philip E. Agre <Agre at MIT-OZ>
To: bug-lispm-mit at MIT-OZ

I use strings as top-level comments because they're cleaner 
looking and easier to justify than other styles of comments,
but the compile gives me warnings that "this atom won't do
anything at FASLOAD time".  Is there some way to muzzle this
feature?

/phil
16-May-84 14:31:28-EDT,403;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 16 May 84 14:08-EDT
Date: 16 May 1984  14:10 EDT (Wed)
Message-ID: <SR.EHPYC.12015830987.BABYL@MIT-SPEECH>
From: Scott Cyphers <SR.EHPYC@MIT-SPEECH>
To:   "Philip E. Agre" <Agre@MIT-OZ>
Cc:   bug-lispm-mit@MIT-OZ
In-reply-to: Msg of 16 May 1984 13:45-EDT from Philip E. Agre <Agre at MIT-OZ>

Try #|
lots of comments

even more comments
|#
16-May-84 16:59:49-EDT,696;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 16 May 84 16:44-EDT
Received: from SCRC-CHICOPEE by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 33718; Wed 16-May-84 16:47:21-EDT
Date: Wednesday, 16 May 1984, 16:42-EDT
From: Daniel L. Weinreb <DLW at SCRC-TENEX>
Subject: Wishful Thinking
To: RMS at MIT-OZ, bug-lispm at MIT-OZ
In-reply-to: The message of 16 May 84 04:12-EDT from RMS at MIT-OZ

    Date: Wed 16 May 84 04:12:51-EDT
    From: RMS@MIT-OZ

    They are unlikely to tell you what they are thinking about doing
    because they don't want me to find out.
    -------

Anyone who has questions on this subject may feel free to get in touch
with me directly.
16-May-84 22:20:24-EDT,2369;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 16 May 84 22:19-EDT
Date: Wednesday, 16 May 1984, 22:22-EDT
From: Philip E. Agre <Agre at MIT-OZ>
Subject: not awaiting save?
To: BUG-LISPM at MIT-OZ

In Release 5.0 [Beta Test rev 7], FEP 18, on Lisp Machine Janis Joplin (3600):

I did System-M G Q.  It so happened that I had my mail file read into
another Zwei buffer if that matters.

>>Error: Preparing to save buffer OZ:PS:<AGRE>AGRE.BABYL,
         but associated inbox OZ:PS:<AGRE>MAIL.TXT.1 is not awaiting save.
         Buffer status = :SAVING-REQUIRED, inbox status = :LOADING-NEW-MAIL.
While in the function ZWEI:MAIL-BUFFER-SAVE-SETUP  ZWEI:SAVE-BUFFER-INTERNAL  ZWEI:SAVE-MAIL-BUFFER

ZWEI:MAIL-BUFFER-SAVE-SETUP:  (P.C. = 34)
   Arg 0 (BUFFER): #<BABYL-BUFFER "OZ:PS:<AGRE>AGRE.BABYL" 6645572>
   --Defaulted args:--
   Arg 1 (CHECK-ONLY): NIL
   Local 2: NIL
   Local 3 (OTHER): #<TENEX-INBOX-BUFFER "OZ:PS:<AGRE>MAIL.TXT.1" 6646641>
   Local 4 (OTHER-STATUS): :LOADING-NEW-MAIL
   Local 5 (STATUS): :SAVING-REQUIRED

ZWEI:SAVE-BUFFER-INTERNAL:  (P.C. = 6)
   Arg 0 (BUFFER): #<BABYL-BUFFER "OZ:PS:<AGRE>AGRE.BABYL" 6645572>
   Arg 1 (FOR-FINISH): NIL

ZWEI:SAVE-MAIL-BUFFER:  (P.C. = 77)
   Arg 0 (BUFFER): #<BABYL-BUFFER "OZ:PS:<AGRE>AGRE.BABYL" 6645572>
   --Defaulted args:--
   Arg 1 (FOR-FINISH): NIL

ZWEI:EXPUNGE-AND-SAVE-SEQUENCE:  (P.C. = 11)
   Arg 0 (SEQUENCE): #<BABYL-BUFFER "OZ:PS:<AGRE>AGRE.BABYL" 6645572>

ZWEI:ZMAIL-SAVE-ALL:  (P.C. = 10)

ZWEI:COM-ZMAIL-SAVE:  (P.C. = 16)

ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
   Arg 0 (COMMAND): ZWEI:COM-ZMAIL-SAVE
   Arg 1 (CHAR): 163
   --Defaulted args:--
   Arg 2 (PREFIX-CHAR): NIL
   Arg 3 (HOOK-LIST): NIL

ZWEI:ZMAIL-COMMAND-EXECUTE:  (P.C. = 6)
   Arg 0 (*CURRENT-COMMAND*-initialization): ZWEI:COM-ZMAIL-SAVE

Rest of stack:
(:METHOD ZWEI:ZMAIL-FRAME :PROCESS-COMMAND-CHAR):  (P.C. = 7)
(:INTERNAL (:METHOD ZWEI:ZMAIL-FRAME :COMBINED :PROCESS-COMMAND-CHAR) 0):  (P.C. = 7)
(:METHOD ZWEI:ZMAIL-COMMAND-LOOP-MIXIN :WHOPPER :PROCESS-COMMAND-CHAR):  (P.C. = 21)
(:METHOD ZWEI:ZMAIL-FRAME :COMBINED :PROCESS-COMMAND-CHAR):  (P.C. = 12)
(:METHOD ZWEI:ZMAIL-FRAME :COMMAND-LOOP):  (P.C. = 146)
(:METHOD ZWEI:ZMAIL-FRAME :COMBINED :COMMAND-LOOP):  (P.C. = 47)
ZWEI:ZMAIL-PROCESS-TOP-LEVEL:  (P.C. = 52)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
16-May-84 22:20:54-EDT,2369;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 16 May 84 22:20-EDT
Date: Wednesday, 16 May 1984, 22:22-EDT
From: Philip E. Agre <Agre at MIT-OZ>
Subject: not awaiting save?
To: BUG-LISPM at MIT-OZ

In Release 5.0 [Beta Test rev 7], FEP 18, on Lisp Machine Janis Joplin (3600):

I did System-M G Q.  It so happened that I had my mail file read into
another Zwei buffer if that matters.

>>Error: Preparing to save buffer OZ:PS:<AGRE>AGRE.BABYL,
         but associated inbox OZ:PS:<AGRE>MAIL.TXT.1 is not awaiting save.
         Buffer status = :SAVING-REQUIRED, inbox status = :LOADING-NEW-MAIL.
While in the function ZWEI:MAIL-BUFFER-SAVE-SETUP  ZWEI:SAVE-BUFFER-INTERNAL  ZWEI:SAVE-MAIL-BUFFER

ZWEI:MAIL-BUFFER-SAVE-SETUP:  (P.C. = 34)
   Arg 0 (BUFFER): #<BABYL-BUFFER "OZ:PS:<AGRE>AGRE.BABYL" 6645572>
   --Defaulted args:--
   Arg 1 (CHECK-ONLY): NIL
   Local 2: NIL
   Local 3 (OTHER): #<TENEX-INBOX-BUFFER "OZ:PS:<AGRE>MAIL.TXT.1" 6646641>
   Local 4 (OTHER-STATUS): :LOADING-NEW-MAIL
   Local 5 (STATUS): :SAVING-REQUIRED

ZWEI:SAVE-BUFFER-INTERNAL:  (P.C. = 6)
   Arg 0 (BUFFER): #<BABYL-BUFFER "OZ:PS:<AGRE>AGRE.BABYL" 6645572>
   Arg 1 (FOR-FINISH): NIL

ZWEI:SAVE-MAIL-BUFFER:  (P.C. = 77)
   Arg 0 (BUFFER): #<BABYL-BUFFER "OZ:PS:<AGRE>AGRE.BABYL" 6645572>
   --Defaulted args:--
   Arg 1 (FOR-FINISH): NIL

ZWEI:EXPUNGE-AND-SAVE-SEQUENCE:  (P.C. = 11)
   Arg 0 (SEQUENCE): #<BABYL-BUFFER "OZ:PS:<AGRE>AGRE.BABYL" 6645572>

ZWEI:ZMAIL-SAVE-ALL:  (P.C. = 10)

ZWEI:COM-ZMAIL-SAVE:  (P.C. = 16)

ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
   Arg 0 (COMMAND): ZWEI:COM-ZMAIL-SAVE
   Arg 1 (CHAR): 163
   --Defaulted args:--
   Arg 2 (PREFIX-CHAR): NIL
   Arg 3 (HOOK-LIST): NIL

ZWEI:ZMAIL-COMMAND-EXECUTE:  (P.C. = 6)
   Arg 0 (*CURRENT-COMMAND*-initialization): ZWEI:COM-ZMAIL-SAVE

Rest of stack:
(:METHOD ZWEI:ZMAIL-FRAME :PROCESS-COMMAND-CHAR):  (P.C. = 7)
(:INTERNAL (:METHOD ZWEI:ZMAIL-FRAME :COMBINED :PROCESS-COMMAND-CHAR) 0):  (P.C. = 7)
(:METHOD ZWEI:ZMAIL-COMMAND-LOOP-MIXIN :WHOPPER :PROCESS-COMMAND-CHAR):  (P.C. = 21)
(:METHOD ZWEI:ZMAIL-FRAME :COMBINED :PROCESS-COMMAND-CHAR):  (P.C. = 12)
(:METHOD ZWEI:ZMAIL-FRAME :COMMAND-LOOP):  (P.C. = 146)
(:METHOD ZWEI:ZMAIL-FRAME :COMBINED :COMMAND-LOOP):  (P.C. = 47)
ZWEI:ZMAIL-PROCESS-TOP-LEVEL:  (P.C. = 52)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
16-May-84 22:21:33-EDT,2369;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 16 May 84 22:20-EDT
Date: Wednesday, 16 May 1984, 22:22-EDT
From: Philip E. Agre <Agre at MIT-OZ>
Subject: not awaiting save?
To: BUG-LISPM at MIT-OZ

In Release 5.0 [Beta Test rev 7], FEP 18, on Lisp Machine Janis Joplin (3600):

I did System-M G Q.  It so happened that I had my mail file read into
another Zwei buffer if that matters.

>>Error: Preparing to save buffer OZ:PS:<AGRE>AGRE.BABYL,
         but associated inbox OZ:PS:<AGRE>MAIL.TXT.1 is not awaiting save.
         Buffer status = :SAVING-REQUIRED, inbox status = :LOADING-NEW-MAIL.
While in the function ZWEI:MAIL-BUFFER-SAVE-SETUP  ZWEI:SAVE-BUFFER-INTERNAL  ZWEI:SAVE-MAIL-BUFFER

ZWEI:MAIL-BUFFER-SAVE-SETUP:  (P.C. = 34)
   Arg 0 (BUFFER): #<BABYL-BUFFER "OZ:PS:<AGRE>AGRE.BABYL" 6645572>
   --Defaulted args:--
   Arg 1 (CHECK-ONLY): NIL
   Local 2: NIL
   Local 3 (OTHER): #<TENEX-INBOX-BUFFER "OZ:PS:<AGRE>MAIL.TXT.1" 6646641>
   Local 4 (OTHER-STATUS): :LOADING-NEW-MAIL
   Local 5 (STATUS): :SAVING-REQUIRED

ZWEI:SAVE-BUFFER-INTERNAL:  (P.C. = 6)
   Arg 0 (BUFFER): #<BABYL-BUFFER "OZ:PS:<AGRE>AGRE.BABYL" 6645572>
   Arg 1 (FOR-FINISH): NIL

ZWEI:SAVE-MAIL-BUFFER:  (P.C. = 77)
   Arg 0 (BUFFER): #<BABYL-BUFFER "OZ:PS:<AGRE>AGRE.BABYL" 6645572>
   --Defaulted args:--
   Arg 1 (FOR-FINISH): NIL

ZWEI:EXPUNGE-AND-SAVE-SEQUENCE:  (P.C. = 11)
   Arg 0 (SEQUENCE): #<BABYL-BUFFER "OZ:PS:<AGRE>AGRE.BABYL" 6645572>

ZWEI:ZMAIL-SAVE-ALL:  (P.C. = 10)

ZWEI:COM-ZMAIL-SAVE:  (P.C. = 16)

ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
   Arg 0 (COMMAND): ZWEI:COM-ZMAIL-SAVE
   Arg 1 (CHAR): 163
   --Defaulted args:--
   Arg 2 (PREFIX-CHAR): NIL
   Arg 3 (HOOK-LIST): NIL

ZWEI:ZMAIL-COMMAND-EXECUTE:  (P.C. = 6)
   Arg 0 (*CURRENT-COMMAND*-initialization): ZWEI:COM-ZMAIL-SAVE

Rest of stack:
(:METHOD ZWEI:ZMAIL-FRAME :PROCESS-COMMAND-CHAR):  (P.C. = 7)
(:INTERNAL (:METHOD ZWEI:ZMAIL-FRAME :COMBINED :PROCESS-COMMAND-CHAR) 0):  (P.C. = 7)
(:METHOD ZWEI:ZMAIL-COMMAND-LOOP-MIXIN :WHOPPER :PROCESS-COMMAND-CHAR):  (P.C. = 21)
(:METHOD ZWEI:ZMAIL-FRAME :COMBINED :PROCESS-COMMAND-CHAR):  (P.C. = 12)
(:METHOD ZWEI:ZMAIL-FRAME :COMMAND-LOOP):  (P.C. = 146)
(:METHOD ZWEI:ZMAIL-FRAME :COMBINED :COMMAND-LOOP):  (P.C. = 47)
ZWEI:ZMAIL-PROCESS-TOP-LEVEL:  (P.C. = 52)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
17-May-84 10:24:43-EDT,1671;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 17 May 84 10:24-EDT
Received: from SCRC-ANNISQUAM by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 34021; Thu 17-May-84 10:28:52-EDT
Date: Thursday, 17 May 1984, 10:25-EDT
From: Doug Dodds <DODDS at SCRC-TENEX>
Subject: not awaiting save?
To: Agre at MIT-OZ
Cc: BUG-LISPM at MIT-OZ
In-reply-to: The message of 16 May 84 22:22-EDT from Philip E. Agre <Agre at MIT-OZ>
Message-ID: <840517102531.2.DODDS@TENEX.SCRC.Symbolics>

    Date: Wednesday, 16 May 1984, 22:22-EDT
    From: Philip E. Agre <Agre at MIT-OZ>

    In Release 5.0 [Beta Test rev 7], FEP 18, on Lisp Machine Janis Joplin (3600):

    I did System-M G Q.  It so happened that I had my mail file read into
    another Zwei buffer if that matters.

    >>Error: Preparing to save buffer OZ:PS:<AGRE>AGRE.BABYL,
	     but associated inbox OZ:PS:<AGRE>MAIL.TXT.1 is not awaiting save.
	     Buffer status = :SAVING-REQUIRED, inbox status = :LOADING-NEW-MAIL.
    While in the function ZWEI:MAIL-BUFFER-SAVE-SETUP  ZWEI:SAVE-BUFFER-INTERNAL  ZWEI:SAVE-MAIL-BUFFER

The problem here is insufficient interlocking between foreground and
background in Zmail.  Q implies a Save of the mailbox; it attempts to do
this as soon as the job of loading the mailbox has been turned over to
the Zmail background.  But at that point, the inbox and mailbox are in
incorrect states for Saving.

This is fixed in the development system and will be in an early release
(but not 5.0).  In the meantime, it is necessary, unfortunately, to be
careful not to give Zmail any Get, Save or Quit commands before
inbox/mailbox loading is complete.
17-May-84 12:49:18-EDT,1234;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 17 May 84 12:49-EDT
Date: 17 May 1984  12:52 EDT (Thu)
Message-ID: <SR.EHPYC.12016078867.BABYL@MIT-SPEECH>
From: Scott Cyphers <SR.EHPYC@MIT-SPEECH>
To:   Scott Cyphers <SR.EHPYC@MIT-SPEECH>
Cc:   bug-lispm@oz
Subject: Tape problems with distributing systems in Rel. 5
In-reply-to: Msg of 16 May 1984  04:27-EDT from Scott Cyphers <SR.EHPYC>

I have some more information on this:

The start up problems I have found out are caused by some problem with
the Rel. 5 tape control software on the LM2, in which it doesn't work
right when the LM2 is doing other things, and it appears that that is
what I was seeing, and, at least in Rev. 7, it still happens.

The other problems are as I described them, i.e. the last block on the
tapes can't be read, and it had the confusion about LISP-MACHINE.


Since lisp obviously can make an IFS tape, will there be a time (maybe
even now) when you can load them from Lisp instead of doing it all
from the FEP?  Of course in Rel 4 you can't, but it seems like it
would be a lot safer to do it from lisp in Rel 5 instead of doing all
the disk restore stuff, except for the initial case where the disk is
in an empty state.
17-May-84 22:41:08-EDT,3448;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 17 May 84 22:38-EDT
Date: 17 May 1984  22:42 EDT (Thu)
Message-ID: <SR.EHPYC.12016186193.BABYL@MIT-SPEECH>
From: Scott Cyphers <SR.EHPYC@MIT-SPEECH>
Subject: Window system suggestion: Clean windows
To:   bug-lispm@oz

Have you ever noticed that when you look at a window you can see
through it?  It's probably too late to rename things to the
dirty-window system, but how about some see through windows?

They have a number of uses.  Suppose you have several things which you
like to draw, but they are drawn in different ways, and people are
likely to come up with novel new ways of drawing things.  A window is
the perfect thing to use for this type of thing, and, normally, they
work fine.  But suppose each of these things being displayed is just a
portion of some display.  For example, maybe someone has some kind of
waveform that they want displayed, and they also have some other thing
which represents regions of the waveform, perhaps vertical bars, with
labels.  Each of these things is and should be a value in its own
right.  However, they want to be drawn on the same identical location
on the screen.  Each one wants to have available the full complement
of window operations.  They are just like regular windows, except that
several may be exposed at once on the same portion of their superior.

I already have something like this.  It works by having a window with
a number of inferiors I call overlays which never expose themselves
and are set so that they never get exposed by the screen manager.
When they draw, they just go ahead and draw on their superior (taking
appropriate precaustions of course).  Since this kind of thing is
rather different from the general philosophy of the window system,
certain changes to the window system could be rather devastating, so
since I and others think it is generally useful, I'm suggesting it
here.

There are a number of interesting issues.  Actually, the superior that
everyone draws on is a special type of window.  For example, suppose
one of the overlays is to be deexposed.  This is easy to do with dirty
windows, since you just make them go away.  However, with overlays you
have to either clear the portion of the screen and redraw everything
over, which may take time, or else be clever.  Some overlays draw with
tv:alu-xor, and they can just redraw themselves to go away.  Others
can't.  One approach out of this is to optionally let overlays have
screen arrays.  They can draw onto their screen array and then bitblt
this screen array onto their superior, which I called the display.
Another use for screen arrays on overlays is that it allows someone to
use the mouse to align two picture by hand to compare something.  By
letting the mouse movement correspond to displacemnts of the overlays
screen array, bitblts can be done whenever the mouse moves.  This is
something like Rob Kassel's "Slippy Scroll Window", although my
overlays don't currently have that ability (it'd be an easy addition).
LM2s can keep up with the mouse for medium sized windows, and the 3600
can actually do it for the entire screen.

There isn't a lot of code required to get the window system to submit
to this kind of thing; it doesn't even require redefining any system
functions, but I think a general facility for these kinds of things
would be a useful addition to the window system.
18-May-84 03:21:20-EDT,1330;000000000000
Received: from SCRC-TENEX by MIT-OZ via Chaosnet; 18 May 84 03:20-EDT
Date: Friday, 18 May 1984  03:18-EDT
From: DLW at SCRC-TENEX
To:   Scott Cyphers <SR.EHPYC at MIT-SPEECH>
Cc:   bug-lispm at oz
Subject: Window system suggestion: Clean windows
In-reply-to: The message of 17 May 1984  22:42 EDT (Thu) from Scott Cyphers <SR.EHPYC at MIT-SPEECH>

This is an interesting suggestion.  Let me offer the following, in total
brainstorming mode (i.e. I have not given any thought to any of this; I'm
just throwing it out to stimulate ideas).

What you are saying makes me think of what are sometimes called
"overlay planes".  Suppose you had a 3600 color frame buffer,
with 8 bits per pixel, but you set up the color map such that
0 was white, and everything else was black.  Now you can play
with each of the eight planes independently, and they are all
ORed together.  (If you don't like OR, you can change the color
map to get any function you want.)  This lets you do a "flood"
(fill all pixels inside a region that is already drawn into
the plane) one one plane without affecting another.  Well, it
sounds like you're asking for this, only with black and white
hardware, simulating the planes in software.  Maybe that's not
what you're asking for, but it's related and it would be nice
in and of itself.
18-May-84 12:02:41-EDT,1580;000000000000
Mail-From: X.GYRO created at 18-May-84 11:44:50
Date: Fri 18 May 84 11:44-EDT
From: Scott W. Layson <X.GYRO@MIT-OZ>
Subject: Clean windows / bitblt generalization
To: bug-lispm@MIT-OZ

Somebody who's good at writing graphics microcode should get a copy of
the documentation for Macintosh Quickdraw, and duplicate its functionality.
For that matter, get a Macintosh and look at the mouse cursor.  The normal
mouse cursor is a black arrow that's ORed (or ANDed or whatever, but anyhow
not XORed) into the screen; but when you move it onto a black region you
notice it has a one-pixel-thick white outline around it.  Now this is SNAZZY.
It's done by the simple device of having Quickdraw, whenever it destroys
information on the screen -- as happens when things are ORed in -- just copy
out the old bits to someplace in memory.  This doesn't seem to slow down
the inner loop very much, I guess because it has to do a read-modify-write
cycle anyway; anyhow mouse cursor motion is very smooth and fluid.

This is just one example of the several ways in which Quickdraw obsoletes
the LispM graphics primitives.  Another is that, if I understand correctly,
Quickdraw supports arbitrary boolean combinations of three operands (e.g.,
two random bit arrays and the screen) -- this lets it draw with clipping
to arbitrary regions.  So for instance it has no trouble drawing on
partially exposed windows.

Actually, I would be happy to write all this stuff in Lisp if someone else
will translate the necessary inner loops to microcode.  Any volunteers?

-- Scott
18-May-84 13:43:41-EDT,779;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 18 May 84 13:39-EDT
Date: 18 May 1984  13:42 EDT (Fri)
Message-ID: <SR.EHPYC.12016350148.BABYL@MIT-SPEECH>
From: Scott Cyphers <SR.EHPYC@MIT-SPEECH>
To:   DLW@SCRC-TENEX
Cc:   bug-lispm@oz
Subject: Window system suggestion: Clean windows
In-reply-to: Msg of 18 May 1984  03:18-EDT from DLW at SCRC-TENEX

That's the idea.  I remember thinking early on, "wouldn't it be nice
if you could have multiple bit planes on the blackand white screen".
However, it's slightly more ocmplicated because some things look ugly
if you XOR them together, and some look ugly if you or them together,
you you need a more complicated scheme for mixing the levels, where
you can specify how each plane combines with the other planes.
18-May-84 13:56:16-EDT,1688;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 18 May 84 13:47-EDT
Received: from SCRC-MERCED by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 34743; Fri 18-May-84 13:53:09-EDT
Date: Friday, 18 May 1984, 13:47-EDT
From:  <cherry at SCRC-QUABBIN>
Subject: Window system suggestion: Clean windows
To: SR.EHPYC at MIT-SPEECH, bug-lispm at MIT-OZ
In-reply-to: <SR.EHPYC.12016186193.BABYL@MIT-SPEECH>


    Date: 17 May 1984  22:42 EDT (Thu)
    From: Scott Cyphers <SR.EHPYC@MIT-SPEECH>

    Have you ever noticed that when you look at a window you can see
    through it?  It's probably too late to rename things to the
    dirty-window system, but how about some see through windows?

    ....

    I already have something like this.  It works by having a window with
    a number of inferiors I call overlays which never expose themselves
    and are set so that they never get exposed by the screen manager.
    When they draw, they just go ahead and draw on their superior (taking
    appropriate precaustions of course).  Since this kind of thing is
    rather different from the general philosophy of the window system,
    certain changes to the window system could be rather devastating, so
    since I and others think it is generally useful, I'm suggesting it
    here.

HES (presumably with HIC's help) wrote a version of blinkers
(no-real-size-mixin, recursive-blinker-mixin) to allow "big" blinkers
that act as overlays on screens for daedalus and NS.  Unfortunately it has
a bug that prevents more than one being exposed at once (it could be
fixed).  It is about 1/2 a page of code.  I can send you the interesting
part if you want.
18-May-84 14:09:35-EDT,2415;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 18 May 84 13:54-EDT
Date: 18 May 1984 13:53-EDT
From: Kent M Pitman <KMP @ MIT-MC>
Subject:  Second level debugger, no way to proceed from this error, etc.
To: BUG-LISPM @ MIT-MC
cc: KMP @ MIT-MC, KBE-I-FILE @ MIT-OZ

In Symbolics Release 4.5 on Avatar (CADR):

When I entered the debugger on some error just now (due to PDL-overflow)
I found myself in the second level error handler because the debugger
was unable to figure out how to print some argument (I guess the stack
was in a bad format). In any case, this error handler had 
"no way to proceed from this error".

First of all, it is completely unreasonable for any error during display
of the error message or erring stack frame to put me in an unrecoverable
error break. I question whether I should get put in a second-level error
handler at all for this case, but I it seems completely clear to me that
an error handler with no proceed options is outside the bounds of reason.

In fact, it doesn't seem to me that there should ever exist an error 
context from which I can't either proceed or abort in some way. Am I 
confused about this? Why can't there be some command which is willing
to do the effect of
 (SEND CURRENT-PROCESS ':RESET)
? Are there situations where this cannot win? If so, can someone 
briefly outline what they are (or give an example)? Also, are such 
situations detectable and/or already correctly detected by the error 
recovery code? I'm partly just curious whether the sort of wedging I 
get in the error system is considered "necessary" or whether people just
haven't had time to fix it or if it's fixed in some later system or what.

It seems to me that when there are several debug levels around, there 
should always be a way to return back upward to them regardless of the
screwed state on the current level.

I ended up getting ahold of SI:SG-PREVIOUS-STACK-GROUP of the current
stack group and trying to call DBG on it, but that didn't work. In fact,
it locked the run bar on my machine and I couldn't even warm boot.

It was probably a stupid move on my part. I thought it might not work,
but I didn't expect it was going to halt my machine. Oh well. I lose an
hour's work.

If there was something more reasonable that I should have done, I wish
it would be provided in a way that didn't require a PhD in black magic.

-kmp
18-May-84 19:53:18-EDT,4039;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 18 May 84 19:51-EDT
Date: Friday, 18 May 1984, 19:51-EDT
From:  <KDF at MIT-PYGMALION>
Subject: FASDUMP loses on large datastructures...
To: BUG-LISPM at MIT-OZ

In Release 5.0 [Beta Test rev 7], FEP 18, on Lisp Machine Keith Moon (3600):

I have tried to FASDUMP a BIG s-expression (I would estimate about 250K cons cells, taking about 4 hours
of machine time to generate), and constantly crap out with the error below.  It happens on both OZ and PIG.
There seems to be no restart handler for this error, which is a complete loss.


>>Error: Attempt to transmit on CHAOS Connection for O1991 to OZ, which stopped responding.
While in the function CHAOS:BAD-CHAOS-CONNECTION-STATE  (:METHOD FS:FILE-OUTPUT-STREAM-MIXIN :SEND-OUTPUT-BUFFER)  (:METHOD FS:FILE-OUTPUT-BINARY-STREAM :COMBINED :SEND-OUTPUT-BUFFER)

CHAOS:BAD-CHAOS-CONNECTION-STATE:  (P.C. = 20)
   Arg 0 (CONN): #<CHAOS Connection for O1991 to OZ 25240247>
   Arg 1 (ATTEMPT): "transmit on"
   Local 2 (STATE): CHAOS:HOST-DOWN-STATE
   Local 3 (PKT): NIL

(:METHOD FS:FILE-OUTPUT-STREAM-MIXIN :SEND-OUTPUT-BUFFER):  (P.C. = 27)
   Arg 0 (SELF): #<FILE-OUTPUT-BINARY-STREAM "OZ:PS:<KDF.GIZMO>SCENARIO3.FMP" 27641225>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:FILE-OUTPUT-STREAM-MIXIN -- 6. IV's, 1. FL's 22171224>
   Arg 2 (OPERATION): :SEND-OUTPUT-BUFFER
   Rest arg (ARGS): (#<ART-16B-964 341701> 245)

(:METHOD FS:FILE-OUTPUT-BINARY-STREAM :COMBINED :SEND-OUTPUT-BUFFER):  (P.C. = 16)
   Arg 0 (SELF): #<FILE-OUTPUT-BINARY-STREAM "OZ:PS:<KDF.GIZMO>SCENARIO3.FMP" 27641225>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:FILE-OUTPUT-BINARY-STREAM -- 1. IV's, 7. FL's 22171316>
   Rest arg (.DAEMON-CALLER-ARGS.): (:SEND-OUTPUT-BUFFER #<ART-16B-964 341701> 245)

(:METHOD SI:BASIC-BUFFERED-OUTPUT-STREAM :SEND-CURRENT-OUTPUT-BUFFER):  (P.C. = 12)
   Arg 0 (SELF): #<FILE-OUTPUT-BINARY-STREAM "OZ:PS:<KDF.GIZMO>SCENARIO3.FMP" 27641225>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:BASIC-BUFFERED-OUTPUT-STREAM -- 3. IV's, 0. FL's 22171337>
   Arg 2 (OPERATION): :SEND-CURRENT-OUTPUT-BUFFER

(:METHOD SI:BASIC-BUFFERED-OUTPUT-STREAM :SETUP-NEW-OUTPUT-BUFFER):  (P.C. = 4)
   Arg 0 (SELF): #<FILE-OUTPUT-BINARY-STREAM "OZ:PS:<KDF.GIZMO>SCENARIO3.FMP" 27641225>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:BASIC-BUFFERED-OUTPUT-STREAM -- 3. IV's, 0. FL's 22171337>
   Arg 2 (OPERATION): :SETUP-NEW-OUTPUT-BUFFER

(:METHOD FS:FILE-OUTPUT-BINARY-STREAM :COMBINED :SETUP-NEW-OUTPUT-BUFFER):  (P.C. = 10)
   Arg 0 (SELF): #<FILE-OUTPUT-BINARY-STREAM "OZ:PS:<KDF.GIZMO>SCENARIO3.FMP" 27641225>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:FILE-OUTPUT-BINARY-STREAM -- 1. IV's, 7. FL's 22171316>
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

(:METHOD SI:BASIC-BUFFERED-OUTPUT-STREAM :TYO):  (P.C. = 12)
   Arg 0 (SELF): #<FILE-OUTPUT-BINARY-STREAM "OZ:PS:<KDF.GIZMO>SCENARIO3.FMP" 27641225>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:BASIC-BUFFERED-OUTPUT-STREAM -- 3. IV's, 0. FL's 22171337>
   Arg 2 (OPERATION): :TYO
   Arg 3 (CH): 5430

SI:DUMP-FORM:  (P.C. = 45)
   Arg 0 (FORM): NIL
   Arg 1 (STREAM): #<FILE-OUTPUT-BINARY-STREAM "OZ:PS:<KDF.GIZMO>SCENARIO3.FMP" 27641225>

Rest of stack:
SI:DUMP-LIST:  (P.C. = 114)
SI:DUMP-FORM:  (P.C. = 140)
SI:DUMP-LIST:  (P.C. = 114)
SI:DUMP-FORM:  (P.C. = 140)
SI:DUMP-LIST:  (P.C. = 114)
SI:DUMP-FORM:  (P.C. = 140)
SI:DUMP-LIST:  (P.C. = 114)
SI:DUMP-FORM:  (P.C. = 140)
SI:DUMP-LIST:  (P.C. = 114)
SI:DUMP-FORM:  (P.C. = 140)
SI:DUMP-FORM-TO-EVAL:  (P.C. = 265)
SYS:DUMP-FORMS-TO-FILE:  (P.C. = 65)
FILE-OUT-ENV:  (P.C. = 12)  (from PIG:USRD$:[KDF]READER)
SI:*EVAL:  (P.C. = 370)
COND:  (P.C. = 23)
SI:*EVAL:  (P.C. = 421)
MULTIPLE-VALUE-BIND:  (P.C. = 42)
SI:*EVAL:  (P.C. = 605)
COND:  (P.C. = 23)
SI:*EVAL:  (P.C. = 421)
(:METHOD TV:MENU-EXECUTE-MIXIN :EXECUTE):  (P.C. = 53)
DEBACLE-TOP-LEVEL:  (P.C. = 103)  (from PIG:USRD$:[KDF]DISPLAY)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
18-May-84 19:55:24-EDT,4039;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 18 May 84 19:51-EDT
Date: Friday, 18 May 1984, 19:51-EDT
From:  <KDF at MIT-PYGMALION>
Subject: FASDUMP loses on large datastructures...
To: BUG-LISPM at MIT-OZ

In Release 5.0 [Beta Test rev 7], FEP 18, on Lisp Machine Keith Moon (3600):

I have tried to FASDUMP a BIG s-expression (I would estimate about 250K cons cells, taking about 4 hours
of machine time to generate), and constantly crap out with the error below.  It happens on both OZ and PIG.
There seems to be no restart handler for this error, which is a complete loss.


>>Error: Attempt to transmit on CHAOS Connection for O1991 to OZ, which stopped responding.
While in the function CHAOS:BAD-CHAOS-CONNECTION-STATE  (:METHOD FS:FILE-OUTPUT-STREAM-MIXIN :SEND-OUTPUT-BUFFER)  (:METHOD FS:FILE-OUTPUT-BINARY-STREAM :COMBINED :SEND-OUTPUT-BUFFER)

CHAOS:BAD-CHAOS-CONNECTION-STATE:  (P.C. = 20)
   Arg 0 (CONN): #<CHAOS Connection for O1991 to OZ 25240247>
   Arg 1 (ATTEMPT): "transmit on"
   Local 2 (STATE): CHAOS:HOST-DOWN-STATE
   Local 3 (PKT): NIL

(:METHOD FS:FILE-OUTPUT-STREAM-MIXIN :SEND-OUTPUT-BUFFER):  (P.C. = 27)
   Arg 0 (SELF): #<FILE-OUTPUT-BINARY-STREAM "OZ:PS:<KDF.GIZMO>SCENARIO3.FMP" 27641225>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:FILE-OUTPUT-STREAM-MIXIN -- 6. IV's, 1. FL's 22171224>
   Arg 2 (OPERATION): :SEND-OUTPUT-BUFFER
   Rest arg (ARGS): (#<ART-16B-964 341701> 245)

(:METHOD FS:FILE-OUTPUT-BINARY-STREAM :COMBINED :SEND-OUTPUT-BUFFER):  (P.C. = 16)
   Arg 0 (SELF): #<FILE-OUTPUT-BINARY-STREAM "OZ:PS:<KDF.GIZMO>SCENARIO3.FMP" 27641225>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:FILE-OUTPUT-BINARY-STREAM -- 1. IV's, 7. FL's 22171316>
   Rest arg (.DAEMON-CALLER-ARGS.): (:SEND-OUTPUT-BUFFER #<ART-16B-964 341701> 245)

(:METHOD SI:BASIC-BUFFERED-OUTPUT-STREAM :SEND-CURRENT-OUTPUT-BUFFER):  (P.C. = 12)
   Arg 0 (SELF): #<FILE-OUTPUT-BINARY-STREAM "OZ:PS:<KDF.GIZMO>SCENARIO3.FMP" 27641225>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:BASIC-BUFFERED-OUTPUT-STREAM -- 3. IV's, 0. FL's 22171337>
   Arg 2 (OPERATION): :SEND-CURRENT-OUTPUT-BUFFER

(:METHOD SI:BASIC-BUFFERED-OUTPUT-STREAM :SETUP-NEW-OUTPUT-BUFFER):  (P.C. = 4)
   Arg 0 (SELF): #<FILE-OUTPUT-BINARY-STREAM "OZ:PS:<KDF.GIZMO>SCENARIO3.FMP" 27641225>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:BASIC-BUFFERED-OUTPUT-STREAM -- 3. IV's, 0. FL's 22171337>
   Arg 2 (OPERATION): :SETUP-NEW-OUTPUT-BUFFER

(:METHOD FS:FILE-OUTPUT-BINARY-STREAM :COMBINED :SETUP-NEW-OUTPUT-BUFFER):  (P.C. = 10)
   Arg 0 (SELF): #<FILE-OUTPUT-BINARY-STREAM "OZ:PS:<KDF.GIZMO>SCENARIO3.FMP" 27641225>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:FILE-OUTPUT-BINARY-STREAM -- 1. IV's, 7. FL's 22171316>
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

(:METHOD SI:BASIC-BUFFERED-OUTPUT-STREAM :TYO):  (P.C. = 12)
   Arg 0 (SELF): #<FILE-OUTPUT-BINARY-STREAM "OZ:PS:<KDF.GIZMO>SCENARIO3.FMP" 27641225>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:BASIC-BUFFERED-OUTPUT-STREAM -- 3. IV's, 0. FL's 22171337>
   Arg 2 (OPERATION): :TYO
   Arg 3 (CH): 5430

SI:DUMP-FORM:  (P.C. = 45)
   Arg 0 (FORM): NIL
   Arg 1 (STREAM): #<FILE-OUTPUT-BINARY-STREAM "OZ:PS:<KDF.GIZMO>SCENARIO3.FMP" 27641225>

Rest of stack:
SI:DUMP-LIST:  (P.C. = 114)
SI:DUMP-FORM:  (P.C. = 140)
SI:DUMP-LIST:  (P.C. = 114)
SI:DUMP-FORM:  (P.C. = 140)
SI:DUMP-LIST:  (P.C. = 114)
SI:DUMP-FORM:  (P.C. = 140)
SI:DUMP-LIST:  (P.C. = 114)
SI:DUMP-FORM:  (P.C. = 140)
SI:DUMP-LIST:  (P.C. = 114)
SI:DUMP-FORM:  (P.C. = 140)
SI:DUMP-FORM-TO-EVAL:  (P.C. = 265)
SYS:DUMP-FORMS-TO-FILE:  (P.C. = 65)
FILE-OUT-ENV:  (P.C. = 12)  (from PIG:USRD$:[KDF]READER)
SI:*EVAL:  (P.C. = 370)
COND:  (P.C. = 23)
SI:*EVAL:  (P.C. = 421)
MULTIPLE-VALUE-BIND:  (P.C. = 42)
SI:*EVAL:  (P.C. = 605)
COND:  (P.C. = 23)
SI:*EVAL:  (P.C. = 421)
(:METHOD TV:MENU-EXECUTE-MIXIN :EXECUTE):  (P.C. = 53)
DEBACLE-TOP-LEVEL:  (P.C. = 103)  (from PIG:USRD$:[KDF]DISPLAY)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
18-May-84 19:57:27-EDT,4039;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 18 May 84 19:51-EDT
Date: Friday, 18 May 1984, 19:51-EDT
From:  <KDF at MIT-PYGMALION>
Subject: FASDUMP loses on large datastructures...
To: BUG-LISPM at MIT-OZ

In Release 5.0 [Beta Test rev 7], FEP 18, on Lisp Machine Keith Moon (3600):

I have tried to FASDUMP a BIG s-expression (I would estimate about 250K cons cells, taking about 4 hours
of machine time to generate), and constantly crap out with the error below.  It happens on both OZ and PIG.
There seems to be no restart handler for this error, which is a complete loss.


>>Error: Attempt to transmit on CHAOS Connection for O1991 to OZ, which stopped responding.
While in the function CHAOS:BAD-CHAOS-CONNECTION-STATE  (:METHOD FS:FILE-OUTPUT-STREAM-MIXIN :SEND-OUTPUT-BUFFER)  (:METHOD FS:FILE-OUTPUT-BINARY-STREAM :COMBINED :SEND-OUTPUT-BUFFER)

CHAOS:BAD-CHAOS-CONNECTION-STATE:  (P.C. = 20)
   Arg 0 (CONN): #<CHAOS Connection for O1991 to OZ 25240247>
   Arg 1 (ATTEMPT): "transmit on"
   Local 2 (STATE): CHAOS:HOST-DOWN-STATE
   Local 3 (PKT): NIL

(:METHOD FS:FILE-OUTPUT-STREAM-MIXIN :SEND-OUTPUT-BUFFER):  (P.C. = 27)
   Arg 0 (SELF): #<FILE-OUTPUT-BINARY-STREAM "OZ:PS:<KDF.GIZMO>SCENARIO3.FMP" 27641225>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:FILE-OUTPUT-STREAM-MIXIN -- 6. IV's, 1. FL's 22171224>
   Arg 2 (OPERATION): :SEND-OUTPUT-BUFFER
   Rest arg (ARGS): (#<ART-16B-964 341701> 245)

(:METHOD FS:FILE-OUTPUT-BINARY-STREAM :COMBINED :SEND-OUTPUT-BUFFER):  (P.C. = 16)
   Arg 0 (SELF): #<FILE-OUTPUT-BINARY-STREAM "OZ:PS:<KDF.GIZMO>SCENARIO3.FMP" 27641225>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:FILE-OUTPUT-BINARY-STREAM -- 1. IV's, 7. FL's 22171316>
   Rest arg (.DAEMON-CALLER-ARGS.): (:SEND-OUTPUT-BUFFER #<ART-16B-964 341701> 245)

(:METHOD SI:BASIC-BUFFERED-OUTPUT-STREAM :SEND-CURRENT-OUTPUT-BUFFER):  (P.C. = 12)
   Arg 0 (SELF): #<FILE-OUTPUT-BINARY-STREAM "OZ:PS:<KDF.GIZMO>SCENARIO3.FMP" 27641225>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:BASIC-BUFFERED-OUTPUT-STREAM -- 3. IV's, 0. FL's 22171337>
   Arg 2 (OPERATION): :SEND-CURRENT-OUTPUT-BUFFER

(:METHOD SI:BASIC-BUFFERED-OUTPUT-STREAM :SETUP-NEW-OUTPUT-BUFFER):  (P.C. = 4)
   Arg 0 (SELF): #<FILE-OUTPUT-BINARY-STREAM "OZ:PS:<KDF.GIZMO>SCENARIO3.FMP" 27641225>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:BASIC-BUFFERED-OUTPUT-STREAM -- 3. IV's, 0. FL's 22171337>
   Arg 2 (OPERATION): :SETUP-NEW-OUTPUT-BUFFER

(:METHOD FS:FILE-OUTPUT-BINARY-STREAM :COMBINED :SETUP-NEW-OUTPUT-BUFFER):  (P.C. = 10)
   Arg 0 (SELF): #<FILE-OUTPUT-BINARY-STREAM "OZ:PS:<KDF.GIZMO>SCENARIO3.FMP" 27641225>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:FILE-OUTPUT-BINARY-STREAM -- 1. IV's, 7. FL's 22171316>
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

(:METHOD SI:BASIC-BUFFERED-OUTPUT-STREAM :TYO):  (P.C. = 12)
   Arg 0 (SELF): #<FILE-OUTPUT-BINARY-STREAM "OZ:PS:<KDF.GIZMO>SCENARIO3.FMP" 27641225>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:BASIC-BUFFERED-OUTPUT-STREAM -- 3. IV's, 0. FL's 22171337>
   Arg 2 (OPERATION): :TYO
   Arg 3 (CH): 5430

SI:DUMP-FORM:  (P.C. = 45)
   Arg 0 (FORM): NIL
   Arg 1 (STREAM): #<FILE-OUTPUT-BINARY-STREAM "OZ:PS:<KDF.GIZMO>SCENARIO3.FMP" 27641225>

Rest of stack:
SI:DUMP-LIST:  (P.C. = 114)
SI:DUMP-FORM:  (P.C. = 140)
SI:DUMP-LIST:  (P.C. = 114)
SI:DUMP-FORM:  (P.C. = 140)
SI:DUMP-LIST:  (P.C. = 114)
SI:DUMP-FORM:  (P.C. = 140)
SI:DUMP-LIST:  (P.C. = 114)
SI:DUMP-FORM:  (P.C. = 140)
SI:DUMP-LIST:  (P.C. = 114)
SI:DUMP-FORM:  (P.C. = 140)
SI:DUMP-FORM-TO-EVAL:  (P.C. = 265)
SYS:DUMP-FORMS-TO-FILE:  (P.C. = 65)
FILE-OUT-ENV:  (P.C. = 12)  (from PIG:USRD$:[KDF]READER)
SI:*EVAL:  (P.C. = 370)
COND:  (P.C. = 23)
SI:*EVAL:  (P.C. = 421)
MULTIPLE-VALUE-BIND:  (P.C. = 42)
SI:*EVAL:  (P.C. = 605)
COND:  (P.C. = 23)
SI:*EVAL:  (P.C. = 421)
(:METHOD TV:MENU-EXECUTE-MIXIN :EXECUTE):  (P.C. = 53)
DEBACLE-TOP-LEVEL:  (P.C. = 103)  (from PIG:USRD$:[KDF]DISPLAY)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
18-May-84 19:59:56-EDT,4039;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 18 May 84 19:52-EDT
Date: Friday, 18 May 1984, 19:51-EDT
From:  <KDF at MIT-PYGMALION>
Subject: FASDUMP loses on large datastructures...
To: BUG-LISPM at MIT-OZ

In Release 5.0 [Beta Test rev 7], FEP 18, on Lisp Machine Keith Moon (3600):

I have tried to FASDUMP a BIG s-expression (I would estimate about 250K cons cells, taking about 4 hours
of machine time to generate), and constantly crap out with the error below.  It happens on both OZ and PIG.
There seems to be no restart handler for this error, which is a complete loss.


>>Error: Attempt to transmit on CHAOS Connection for O1991 to OZ, which stopped responding.
While in the function CHAOS:BAD-CHAOS-CONNECTION-STATE  (:METHOD FS:FILE-OUTPUT-STREAM-MIXIN :SEND-OUTPUT-BUFFER)  (:METHOD FS:FILE-OUTPUT-BINARY-STREAM :COMBINED :SEND-OUTPUT-BUFFER)

CHAOS:BAD-CHAOS-CONNECTION-STATE:  (P.C. = 20)
   Arg 0 (CONN): #<CHAOS Connection for O1991 to OZ 25240247>
   Arg 1 (ATTEMPT): "transmit on"
   Local 2 (STATE): CHAOS:HOST-DOWN-STATE
   Local 3 (PKT): NIL

(:METHOD FS:FILE-OUTPUT-STREAM-MIXIN :SEND-OUTPUT-BUFFER):  (P.C. = 27)
   Arg 0 (SELF): #<FILE-OUTPUT-BINARY-STREAM "OZ:PS:<KDF.GIZMO>SCENARIO3.FMP" 27641225>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:FILE-OUTPUT-STREAM-MIXIN -- 6. IV's, 1. FL's 22171224>
   Arg 2 (OPERATION): :SEND-OUTPUT-BUFFER
   Rest arg (ARGS): (#<ART-16B-964 341701> 245)

(:METHOD FS:FILE-OUTPUT-BINARY-STREAM :COMBINED :SEND-OUTPUT-BUFFER):  (P.C. = 16)
   Arg 0 (SELF): #<FILE-OUTPUT-BINARY-STREAM "OZ:PS:<KDF.GIZMO>SCENARIO3.FMP" 27641225>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:FILE-OUTPUT-BINARY-STREAM -- 1. IV's, 7. FL's 22171316>
   Rest arg (.DAEMON-CALLER-ARGS.): (:SEND-OUTPUT-BUFFER #<ART-16B-964 341701> 245)

(:METHOD SI:BASIC-BUFFERED-OUTPUT-STREAM :SEND-CURRENT-OUTPUT-BUFFER):  (P.C. = 12)
   Arg 0 (SELF): #<FILE-OUTPUT-BINARY-STREAM "OZ:PS:<KDF.GIZMO>SCENARIO3.FMP" 27641225>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:BASIC-BUFFERED-OUTPUT-STREAM -- 3. IV's, 0. FL's 22171337>
   Arg 2 (OPERATION): :SEND-CURRENT-OUTPUT-BUFFER

(:METHOD SI:BASIC-BUFFERED-OUTPUT-STREAM :SETUP-NEW-OUTPUT-BUFFER):  (P.C. = 4)
   Arg 0 (SELF): #<FILE-OUTPUT-BINARY-STREAM "OZ:PS:<KDF.GIZMO>SCENARIO3.FMP" 27641225>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:BASIC-BUFFERED-OUTPUT-STREAM -- 3. IV's, 0. FL's 22171337>
   Arg 2 (OPERATION): :SETUP-NEW-OUTPUT-BUFFER

(:METHOD FS:FILE-OUTPUT-BINARY-STREAM :COMBINED :SETUP-NEW-OUTPUT-BUFFER):  (P.C. = 10)
   Arg 0 (SELF): #<FILE-OUTPUT-BINARY-STREAM "OZ:PS:<KDF.GIZMO>SCENARIO3.FMP" 27641225>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:FILE-OUTPUT-BINARY-STREAM -- 1. IV's, 7. FL's 22171316>
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

(:METHOD SI:BASIC-BUFFERED-OUTPUT-STREAM :TYO):  (P.C. = 12)
   Arg 0 (SELF): #<FILE-OUTPUT-BINARY-STREAM "OZ:PS:<KDF.GIZMO>SCENARIO3.FMP" 27641225>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:BASIC-BUFFERED-OUTPUT-STREAM -- 3. IV's, 0. FL's 22171337>
   Arg 2 (OPERATION): :TYO
   Arg 3 (CH): 5430

SI:DUMP-FORM:  (P.C. = 45)
   Arg 0 (FORM): NIL
   Arg 1 (STREAM): #<FILE-OUTPUT-BINARY-STREAM "OZ:PS:<KDF.GIZMO>SCENARIO3.FMP" 27641225>

Rest of stack:
SI:DUMP-LIST:  (P.C. = 114)
SI:DUMP-FORM:  (P.C. = 140)
SI:DUMP-LIST:  (P.C. = 114)
SI:DUMP-FORM:  (P.C. = 140)
SI:DUMP-LIST:  (P.C. = 114)
SI:DUMP-FORM:  (P.C. = 140)
SI:DUMP-LIST:  (P.C. = 114)
SI:DUMP-FORM:  (P.C. = 140)
SI:DUMP-LIST:  (P.C. = 114)
SI:DUMP-FORM:  (P.C. = 140)
SI:DUMP-FORM-TO-EVAL:  (P.C. = 265)
SYS:DUMP-FORMS-TO-FILE:  (P.C. = 65)
FILE-OUT-ENV:  (P.C. = 12)  (from PIG:USRD$:[KDF]READER)
SI:*EVAL:  (P.C. = 370)
COND:  (P.C. = 23)
SI:*EVAL:  (P.C. = 421)
MULTIPLE-VALUE-BIND:  (P.C. = 42)
SI:*EVAL:  (P.C. = 605)
COND:  (P.C. = 23)
SI:*EVAL:  (P.C. = 421)
(:METHOD TV:MENU-EXECUTE-MIXIN :EXECUTE):  (P.C. = 53)
DEBACLE-TOP-LEVEL:  (P.C. = 103)  (from PIG:USRD$:[KDF]DISPLAY)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
18-May-84 20:01:57-EDT,4039;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 18 May 84 19:52-EDT
Date: Friday, 18 May 1984, 19:51-EDT
From:  <KDF at MIT-PYGMALION>
Subject: FASDUMP loses on large datastructures...
To: BUG-LISPM at MIT-OZ

In Release 5.0 [Beta Test rev 7], FEP 18, on Lisp Machine Keith Moon (3600):

I have tried to FASDUMP a BIG s-expression (I would estimate about 250K cons cells, taking about 4 hours
of machine time to generate), and constantly crap out with the error below.  It happens on both OZ and PIG.
There seems to be no restart handler for this error, which is a complete loss.


>>Error: Attempt to transmit on CHAOS Connection for O1991 to OZ, which stopped responding.
While in the function CHAOS:BAD-CHAOS-CONNECTION-STATE  (:METHOD FS:FILE-OUTPUT-STREAM-MIXIN :SEND-OUTPUT-BUFFER)  (:METHOD FS:FILE-OUTPUT-BINARY-STREAM :COMBINED :SEND-OUTPUT-BUFFER)

CHAOS:BAD-CHAOS-CONNECTION-STATE:  (P.C. = 20)
   Arg 0 (CONN): #<CHAOS Connection for O1991 to OZ 25240247>
   Arg 1 (ATTEMPT): "transmit on"
   Local 2 (STATE): CHAOS:HOST-DOWN-STATE
   Local 3 (PKT): NIL

(:METHOD FS:FILE-OUTPUT-STREAM-MIXIN :SEND-OUTPUT-BUFFER):  (P.C. = 27)
   Arg 0 (SELF): #<FILE-OUTPUT-BINARY-STREAM "OZ:PS:<KDF.GIZMO>SCENARIO3.FMP" 27641225>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:FILE-OUTPUT-STREAM-MIXIN -- 6. IV's, 1. FL's 22171224>
   Arg 2 (OPERATION): :SEND-OUTPUT-BUFFER
   Rest arg (ARGS): (#<ART-16B-964 341701> 245)

(:METHOD FS:FILE-OUTPUT-BINARY-STREAM :COMBINED :SEND-OUTPUT-BUFFER):  (P.C. = 16)
   Arg 0 (SELF): #<FILE-OUTPUT-BINARY-STREAM "OZ:PS:<KDF.GIZMO>SCENARIO3.FMP" 27641225>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:FILE-OUTPUT-BINARY-STREAM -- 1. IV's, 7. FL's 22171316>
   Rest arg (.DAEMON-CALLER-ARGS.): (:SEND-OUTPUT-BUFFER #<ART-16B-964 341701> 245)

(:METHOD SI:BASIC-BUFFERED-OUTPUT-STREAM :SEND-CURRENT-OUTPUT-BUFFER):  (P.C. = 12)
   Arg 0 (SELF): #<FILE-OUTPUT-BINARY-STREAM "OZ:PS:<KDF.GIZMO>SCENARIO3.FMP" 27641225>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:BASIC-BUFFERED-OUTPUT-STREAM -- 3. IV's, 0. FL's 22171337>
   Arg 2 (OPERATION): :SEND-CURRENT-OUTPUT-BUFFER

(:METHOD SI:BASIC-BUFFERED-OUTPUT-STREAM :SETUP-NEW-OUTPUT-BUFFER):  (P.C. = 4)
   Arg 0 (SELF): #<FILE-OUTPUT-BINARY-STREAM "OZ:PS:<KDF.GIZMO>SCENARIO3.FMP" 27641225>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:BASIC-BUFFERED-OUTPUT-STREAM -- 3. IV's, 0. FL's 22171337>
   Arg 2 (OPERATION): :SETUP-NEW-OUTPUT-BUFFER

(:METHOD FS:FILE-OUTPUT-BINARY-STREAM :COMBINED :SETUP-NEW-OUTPUT-BUFFER):  (P.C. = 10)
   Arg 0 (SELF): #<FILE-OUTPUT-BINARY-STREAM "OZ:PS:<KDF.GIZMO>SCENARIO3.FMP" 27641225>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:FILE-OUTPUT-BINARY-STREAM -- 1. IV's, 7. FL's 22171316>
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

(:METHOD SI:BASIC-BUFFERED-OUTPUT-STREAM :TYO):  (P.C. = 12)
   Arg 0 (SELF): #<FILE-OUTPUT-BINARY-STREAM "OZ:PS:<KDF.GIZMO>SCENARIO3.FMP" 27641225>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:BASIC-BUFFERED-OUTPUT-STREAM -- 3. IV's, 0. FL's 22171337>
   Arg 2 (OPERATION): :TYO
   Arg 3 (CH): 5430

SI:DUMP-FORM:  (P.C. = 45)
   Arg 0 (FORM): NIL
   Arg 1 (STREAM): #<FILE-OUTPUT-BINARY-STREAM "OZ:PS:<KDF.GIZMO>SCENARIO3.FMP" 27641225>

Rest of stack:
SI:DUMP-LIST:  (P.C. = 114)
SI:DUMP-FORM:  (P.C. = 140)
SI:DUMP-LIST:  (P.C. = 114)
SI:DUMP-FORM:  (P.C. = 140)
SI:DUMP-LIST:  (P.C. = 114)
SI:DUMP-FORM:  (P.C. = 140)
SI:DUMP-LIST:  (P.C. = 114)
SI:DUMP-FORM:  (P.C. = 140)
SI:DUMP-LIST:  (P.C. = 114)
SI:DUMP-FORM:  (P.C. = 140)
SI:DUMP-FORM-TO-EVAL:  (P.C. = 265)
SYS:DUMP-FORMS-TO-FILE:  (P.C. = 65)
FILE-OUT-ENV:  (P.C. = 12)  (from PIG:USRD$:[KDF]READER)
SI:*EVAL:  (P.C. = 370)
COND:  (P.C. = 23)
SI:*EVAL:  (P.C. = 421)
MULTIPLE-VALUE-BIND:  (P.C. = 42)
SI:*EVAL:  (P.C. = 605)
COND:  (P.C. = 23)
SI:*EVAL:  (P.C. = 421)
(:METHOD TV:MENU-EXECUTE-MIXIN :EXECUTE):  (P.C. = 53)
DEBACLE-TOP-LEVEL:  (P.C. = 103)  (from PIG:USRD$:[KDF]DISPLAY)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
18-May-84 21:56:56-EDT,2772;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 18 May 84 21:56-EDT
Received: from SCRC-CONCORD by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 54308; Fri 18-May-84 21:57:02-EDT
Date: Friday, 18 May 1984, 21:56-EDT
From: David A. Moon <Moon at SCRC-TENEX>
Subject: FASDUMP loses on large datastructures...
To: KDF at MIT-PYGMALION
Cc: BUG-LISPM at MIT-OZ
In-reply-to: The message of 18 May 84 19:51-EDT from KDF at MIT-PYGMALION

    Date: Friday, 18 May 1984, 19:51-EDT
    From:  <KDF at MIT-PYGMALION>

    In Release 5.0 [Beta Test rev 7], FEP 18, on Lisp Machine Keith Moon (3600):

    I have tried to FASDUMP a BIG s-expression (I would estimate about 250K cons cells, taking about 4 hours
    of machine time to generate), and constantly crap out with the error below.  It happens on both OZ and PIG.

The BIN file dumper uses a hash table to preserve circular structures in the data being dumped.
Growing this hash table to the huge size needed to hold your 250,000 cons cells probably
inhibits scheduling for long enough to make your Chaosnet connection go away.  In fact an EQ
hash table with that many objects in it is likely to be larger than the size of physical
memory on your machine, producing an enormous amount of page thrashing when it is grown
or rehashed.  Neither BIN files nor hash tables were designed to work with such large
data structures as you are using.

One way to get around this would be for you to write your BIN file onto
the LOCAL: file system, assuming you have one, and then copy it over the
network to OZ or PIG.  Another way would be to pre-grow the hash table
by doing

	(using-resource (ht si:dump-hash-table nil)
	  (loop for x being the 250,000-elements-of-your-data-structure
		do (send ht :put-hash x x)))

Also note that once you get your enormous BIN file written, you may find that you have
the same problem with loading it, since the loader keeps a table with an entry for every
object loaded for the duration of the file.

Would the following improvements be of any use to you if we did them in a future release?
 - letting you instruct DUMP-FORMS-TO-FILE to not check for circular structure
 - letting you tell DUMP-FORMS-TO-FILE the estimated size of your hash table


    >>Error: Attempt to transmit on CHAOS Connection for O1991 to OZ, which stopped responding.
    While in the function CHAOS:BAD-CHAOS-CONNECTION-STATE  (:METHOD FS:FILE-OUTPUT-STREAM-MIXIN :SEND-OUTPUT-BUFFER)  (:METHOD FS:FILE-OUTPUT-BINARY-STREAM :COMBINED :SEND-OUTPUT-BUFFER)

    There seems to be no restart handler for this error, which is a complete loss.

How could there be?  Your connection to the file server is gone, there is no way to get it back
and continue writing the file.
18-May-84 22:01:59-EDT,790;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 18 May 84 22:01-EDT
Received: from SCRC-CONCORD by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 54310; Fri 18-May-84 21:58:44-EDT
Date: Fri, 18 May 84 21:58 EDT
From: "David A. Moon" <Moon@SCRC-STONY-BROOK.ARPA>
Subject: Second level debugger, no way to proceed from this error, etc.
To: Kent M Pitman <KMP@MIT-MC.ARPA>
Cc: BUG-LISPM@MIT-MC.ARPA, KBE-I-FILE%MIT-OZ@SCRC-STONY-BROOK.ARPA
In-reply-to: The message of 18 May 84 13:53-EDT from Kent M Pitman <KMP at MIT-MC>

    Date: 18 May 1984 13:53-EDT
    From: Kent M Pitman <KMP @ MIT-MC>

    In Symbolics Release 4.5 on Avatar (CADR):

The problems you described are architecturally related to the CADR and do
not happen on the 3600.  They might also be fixed in Release 5.0.
19-May-84 18:40:24-EDT,927;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 19 May 84 18:37-EDT
Received: from SCRC-CHICOPEE by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 35122; Sat 19-May-84 16:56:35-EDT
Date: Saturday, 19 May 1984, 16:49-EDT
From: Daniel L. Weinreb <DLW at SCRC-TENEX>
Subject: Clean windows / bitblt generalization
To: X.GYRO at MIT-OZ, bug-lispm at MIT-OZ
In-reply-to: The message of 18 May 84 11:44-EDT from Scott W. Layson <X.GYRO at MIT-OZ>

    Date: Fri 18 May 84 11:44-EDT
    From: Scott W. Layson <X.GYRO@MIT-OZ>

    Somebody who's good at writing graphics microcode should get a copy of
    the documentation for Macintosh Quickdraw, 

I have no particular skill at writing graphics microcode, but I am
getting a copy of the documentation ("Inside Mac").

					       and duplicate its functionality.

Yes, I very much hope that this will get done.  What you say about QuickDraw
is all true.
19-May-84 21:25:05-EDT,938;000000000000
Mail-From: X.GYRO created at 19-May-84 21:23:46
Date: Sat 19 May 84 21:23-EDT
From: Scott W. Layson <X.GYRO@MIT-OZ>
Subject: "Simply proceeds" does not mean to you what it means to me.
To: bug-lispm-mit@MIT-OZ

In System 98.39:

I don't believe this.  I accidentally passed WORKING-STORAGE-AREA (or rather,
its value) to SYS:RESET-TEMPORARY-AREA.  I got an error, of course, to the
effect that this area had not been created as temporary; to my surprise and
pleasure, there was a restart handler for <Resume> whose documentation was
"Simply proceeds."  I perceived this as ambiguous, but thought surely no one
would EVER allow me to reset a non-temporary area.  Silly me.  I know the
spirit of ZetaLisp is not to protect the user from his/herself, but I
really think this should be an exception!  In any case, the <Resume> key
should be labelled something more explicit than "Simply proceeds." in this
case!

-- Scott
19-May-84 21:27:45-EDT,788;000000000000
Received: from SCC-WAIKATO by MIT-OZ via Chaosnet; 19 May 84 21:26-EDT
Received: from SCC-YOSEMITE by SCC-WAIKATO via CHAOS with CHAOS-MAIL id 27033; Sat 19-May-84 21:29:40-EDT
Date: Saturday, 19 May 1984, 21:25-EDT
From: Jonathan L. Balgley <jlb at SCC-WAIKATO>
Subject: FASDUMP loses on large datastructures...
To: Moon at SCRC-TENEX, KDF at MIT-PYGMALION
Cc: BUG-LISPM at MIT-OZ
In-reply-to: The message of 18 May 84 21:56-EDT from David A. Moon <Moon at SCRC-TENEX>

    Date: Friday, 18 May 1984, 21:56-EDT
    From: David A. Moon <Moon at SCRC-TENEX>

    The BIN file dumper uses a hash table to preserve circular
    structures in the data being dumped.   

Is this true?  Or did you mean to say it checks for circularity?  It
doesn't seem to do either of these.
21-May-84 13:56:25-EDT,2628;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 21 May 84 13:55-EDT
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 35840; Mon 21-May-84 13:53:29-EDT
Date: Monday, 21 May 1984, 13:53-EDT
From: David A. Moon <Moon at SCRC-TENEX>
Subject: FASDUMP loses on large datastructures...
To: Jonathan L. Balgley <jlb at SCC-WAIKATO>
Cc: KDF at MIT-PYGMALION, BUG-LISPM at MIT-OZ
In-reply-to: The message of 19 May 84 21:25-EDT from Jonathan L. Balgley <jlb at SCC-WAIKATO>,
             The message of 18 May 84 21:56-EDT from David A. Moon <Moon at SCRC-TENEX>

    Date: Saturday, 19 May 1984, 21:25-EDT
    From: Jonathan L. Balgley <jlb at SCC-WAIKATO>

	Date: Friday, 18 May 1984, 21:56-EDT
	From: David A. Moon <Moon at SCRC-TENEX>

	The BIN file dumper uses a hash table to preserve circular
	structures in the data being dumped.   

    Is this true?  Or did you mean to say it checks for circularity?  It
    doesn't seem to do either of these.

Well, I said several wrong things in my message.

First of all, the BIN file dumper does -not- deal in circular structures.
A structure made by (rplaca a a) cannot be dumped into a BIN file.  In the
released system, loading that BIN file produces garbage.  In the source for
a long time has been code to detect an attempt to dump a circular structure
and produce the message
	The object ~S is circular or self-referential.
	BIN files cannot deal with this; at load time the object
	would be needed before it has been created.

The BIN file dumper's hash table is to detect reentrant structures, such
as you can create with (list a a).  The two list elements created by the
BIN file loader will be EQ.

BIN files deal in lists, not conses, so reentrant structures that you create
with (cons a a) are NOT, in general, preserved.

The BIN file dumper's hash table is also used to make the BIN file smaller and
quicker to load by only interning each symbol it needs once per file.

The possible improvements I -should- have suggested are:

Would the following improvements be of any use to you if we did them in a future release?
 - letting you instruct DUMP-FORMS-TO-FILE to not check for certain types of
   objects being used twice (which means you cannot have reentrant data structures).
   Good candidates would seem to be lists (not conses!), numbers, and strings;
   probably it should be possible to control each of these separately, if desired.
   This would require upward-compatible changes to the loader.
 - letting you tell DUMP-FORMS-TO-FILE the estimated size of your hash table

21-May-84 19:30:39-EDT,1004;000000000000
Mail-From: GAVAN created at 21-May-84 19:29:14
Date: Mon, 21 May 1984  19:29 EDT
Message-ID: <GAVAN.12017199645.BABYL@MIT-OZ>
From: GAVAN@MIT-OZ
To:   "David A. Moon" <Moon@SCRC-TENEX>
Cc:   BUG-LISPM@MIT-OZ, KDF@MIT-PYGMALION
Subject: FASDUMP loses on large datastructures...
In-reply-to: Msg of 18 May 1984 21:56-EDT from David A. Moon <Moon at SCRC-TENEX>

    Date: Friday, 18 May 1984, 21:56-EDT
    From: David A. Moon <Moon at SCRC-TENEX>

    Would the following improvements be of any use to you if we did
    them in a future release?

     - letting you instruct DUMP-FORMS-TO-FILE to not check for
       circular structure

Yes.

     - letting you tell DUMP-FORMS-TO-FILE the estimated size of your
       hash table

Yes.


Why can't the chaos connection simply be told not to go away when in
the contour of a dump?  

Large data structures can be real handy, depending on your
application.  Such an expensive machine should work with largish
structures.

21-May-84 22:53:44-EDT,2595;000000000000
Mail-From: KDF created at 21-May-84 22:50:06
Date: Mon, 21 May 1984  22:50 EDT
Message-ID: <KDF.12017236210.BABYL@MIT-OZ>
From: KDF@MIT-OZ
To:   "David A. Moon" <Moon@SCRC-TENEX>
Cc:   BUG-LISPM@MIT-OZ, "Jonathan L. Balgley" <jlb@SCC-WAIKATO>
Subject: FASDUMP loses on large datastructures...
In-reply-to: Msg of 21 May 1984 13:53-EDT from David A. Moon <Moon at SCRC-TENEX>

    Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 21 May 84 13:55-EDT
    Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 35840; Mon 21-May-84 13:53:29-EDT
    Date: Monday, 21 May 1984, 13:53-EDT
    From: David A. Moon <Moon at SCRC-TENEX>
    Subject: FASDUMP loses on large datastructures...
    To: Jonathan L. Balgley <jlb at SCC-WAIKATO>
    Cc: KDF at MIT-PYGMALION, BUG-LISPM at MIT-OZ
    In-reply-to: The message of 19 May 84 21:25-EDT from Jonathan L. Balgley <jlb at SCC-WAIKATO>,
                 The message of 18 May 84 21:56-EDT from David A. Moon <Moon at SCRC-TENEX>

    Would the following improvements be of any use to you if we did them in a future release?
     - letting you instruct DUMP-FORMS-TO-FILE to not check for certain types of
       objects being used twice (which means you cannot have reentrant data structures).
       Good candidates would seem to be lists (not conses!), numbers, and strings;
       probably it should be possible to control each of these separately, if desired.
       This would require upward-compatible changes to the loader.

yes!  I need this pretty badly; I'm desperate enough to look through
the source code to see if there is any hope of doing an impromptu
version for myself, despite my on-going thesis crunch.  I actually
turn a hairy datastructure into list structure because then I could
dump the results using print and read them back in again (hence there
will be no re-entrant pointers, etc.)  But do you know how long it
takes to READ a list structure from a file that was > 300K cons cells
to begin with?  Sigh.

     - letting you tell DUMP-FORMS-TO-FILE the estimated size of your hash table

I'm not sure this would be as useful, since it will require my code
doing a seperate walk over the datastructure and some degree of tuning
to get it right.  Is GAVAN's suggestion of "locking down" the chaos
connection impossible?  It would seem like the right sort of thing.
It also would make dribble files usable where they are most needed,
i.e., in recording the results of compute-bound jobs which run for
several hours.

Again, thank you for your concern.
22-May-84 11:24:54-EDT,2973;000000000000
Mail-From: X.GYRO created at 22-May-84 11:24:17
Date: Tue, 22 May 1984  11:24 EDT
Message-ID: <X.GYRO.12017373505.BABYL@MIT-OZ>
From: X.GYRO@MIT-OZ
To:   bug-lispm-mit@MIT-OZ
Subject: ALTER-PACKAGE gives spurious conflict warnings

In System 98.39, CADR 3.4, ZMail 53.5, Experimental Local-File 48.1,
Experimental FILE-Server 8.0, microcode 306, on Zeta-Soft Astarte:

I did

  (defpackage "C" (:use)
    (:export [... long list of strings ...] "nil+" "list+"))

and then

  (make-package "CPARSE" ':use '(C))

and then reevaluated the (defpackage "C" ...).  This can't have caused
name conflicts, since CPARSE already inherited these symbols.  Indeed,
no symbols had been interned in CPARSE!

>>ERROR: Name conflicts created by EXPORT in package C:
"list+" causes a conflict in package CPARSE.
"nil+" causes a conflict in package CPARSE.
[... long list deleted ...]


Backtrace from the debugger:

EXPORT (P.C. = 203)

 Arg 0 (SYMBOLS): ("+" "-" "*" "//" ...)
 Arg 1 (PKG): #<Package C 25546465>
   --Defaulted args:--
 Arg 2 (FORCE-FLAG): NIL
Local 0 (CONFLICTS): (("list+" #<Package CPARSE 25547215> ** **) ("nil+" #<Package CPARSE 25547215> ** **) ("#lisp" #<Package CPARSE 25547215> ** **) ("sizeof" #<Package CPARSE 25547215> ** **) ...)
Local 1: NIL
Local 2 (P1): #<Package CPARSE 25547215>
Local 3: NIL
Local 4 (SYMBOL): "list+"
Local 5 (CANDIDATES): (("C" #<Package C 25546465> C:|list+|) ("C" #<Package C 25546465> "list+"))
Local 6 (SYM): NIL
Local 7 (INDEX): NIL
Local 8: NIL


SI:ALTER-PACKAGE (P.C. = 312)

 Arg 0 (NAME): "C"
 Rest arg: (:USE NIL :RELATIVE-NAMES (** **) ...)
Local 1 (NICKNAMES): NIL
Local 2 (USE): NIL
Local 3 (IGNORE): 128.
Local 4 (SHADOW): NIL
Local 5 (EXPORT): ("+" "-" "*" "//" ...)
Local 6 (PREFIX-NAME): NIL
Local 7 (AUTO-EXPORT-P): NIL
Local 8 (IMPORT): NIL
Local 9 (SHADOWING-IMPORT): NIL
Local 10 (IMPORT-FROM): NIL
Local 11 (RELATIVE-NAMES): (("GL" . GLOBAL) ("U" . USER))
Local 12 (RELATIVE-NAMES-FOR-ME): NIL
Local 13 (IGNORE): NIL
Local 14 (EXTERNAL-ONLY): NIL
Local 15 (IGNORE): NIL
Local 16 (IGNORE): NIL
Local 17 (EXTERNAL-ONLY-P): NIL
Local 18 (PKG): #<Package C 25546465>
Local 19 (DESIRED-USE): NIL
Local 20: NIL
Local 21 (ELT): NIL
Local 22 (NAME): NIL
Local 23 (NICK): NIL
Local 24 (P): NIL
Local 25: NIL
Local 26: NIL


Remainder of stack:

LEXPR-FUNCALL (P.C. = 62)
SI:EVAL1 (P.C. = 1324)
SI:EVAL1 (P.C. = 1303)
SI:EVAL1 (P.C. = 706)
COND (P.C. = 72)
SI:EVAL1 (P.C. = 1324)
SI:EVAL1 (P.C. = 706)
SI:READFILE-INTERNAL (P.C. = 224)
READFILE (P.C. = 101)
SI:READFILE-1 (P.C. = 32)
SI:DO-FILE-TRANSFORMATIONS (P.C. = 251)
SI:PERFORM-TRANSFORMATIONS (P.C. = 122)
SI:PERFORM-TRANSFORMATIONS (P.C. = 77)
MAKE-SYSTEM (P.C. = 236)
SI:EVAL1 (P.C. = 1324)
SI:EVAL-ABORT-TRIVIAL-ERRORS (P.C. = 61)
SI:LISP-TOP-LEVEL1 (P.C. = 426)
SI:LISP-TOP-LEVEL2 (P.C. = 27)
SI:PROCESS-TOP-LEVEL (P.C. = 246)
SI:LISP-TOP-LEVEL (P.C. = 47)

22-May-84 11:28:38-EDT,4854;000000000000
Mail-From: X.GYRO created at 22-May-84 11:27:39
Date: Tue, 22 May 1984  11:27 EDT
Message-ID: <X.GYRO.12017374117.BABYL@MIT-OZ>
From: X.GYRO@MIT-OZ
To:   bug-lispm-mit@MIT-OZ
Subject: unclaimed :GET-STRING-EQUAL message in magtape software

In System 98.39, CADR 3.4, ZMail 53.5, Experimental Local-File 48.1,
Experimental FILE-Server 8.0, Experimental MagTape 23.0, microcode 306,
on Zeta-Soft Astarte:

(I know nobody at MIT uses the magtape software, so I don't expect
this to be fixed, but can you at least tell me what a
:GET-STRING-EQUAL method is supposed to do?)

The magtape software wasn't loaded in this world, so I did a
(make-system 'magtape ':compile).  (describe-system 'magtape) generates
the following:

-- Beginning of (describe-system 'magtape) output --

System MagTape is defined in file SYS: FILE; FS  
 ASTARTE: NL.FILE; FS.LISP#76 was compiled by Gyro on Astarte at 5/14/84 13:40:28
          with system 98.29
 ASTARTE: NL.FILE; FS.QFASL#76 was created 5/14/84 13:40:19

Compilation and loading of files in this system:

SYS: TAPE; MTDEFS LISP > is compiled in package FILE-SYSTEM
 ASTARTE: NL.TAPE; MTDEFS.LISP#30 was compiled by Gyro on Astarte at 5/15/84 17:47:53
          with system 98.39
SYS: TAPE; MTDEFS QFASL > is loaded into package FILE-SYSTEM
 ASTARTE: NL.TAPE; MTDEFS.QFASL#30 was created 5/15/84 17:47:46
SYS: TAPE; MTSTR LISP > is compiled in package FILE-SYSTEM
 ASTARTE: NL.TAPE; MTSTR.LISP#88 was compiled by Gyro on Astarte at 5/15/84 17:51:25
          with system 98.39
SYS: TAPE; MTSTR QFASL > is loaded into package FILE-SYSTEM
 ASTARTE: NL.TAPE; MTSTR.QFASL#88 was created 5/15/84 17:51:16
SYS: TAPE; FDUMP-DEF LISP > is compiled in package FILE-SYSTEM
 ASTARTE: NL.TAPE; FDUMP-DEF.LISP#12 was compiled by Gyro on Astarte at 5/15/84 17:55:11
          with system 98.39
SYS: TAPE; COPY LISP > is compiled in package FILE-SYSTEM
 ASTARTE: NL.TAPE; COPY.LISP#133 was compiled by Gyro on Astarte at 5/15/84 17:57:08
          with system 98.39
SYS: TAPE; MTAUX LISP > is compiled in package FILE-SYSTEM
 ASTARTE: NL.TAPE; MTAUX.LISP#80 was compiled by Gyro on Astarte at 5/15/84 17:59:42
          with system 98.39
SYS: TAPE; ODUMP LISP > is compiled in package FILE-SYSTEM
 ASTARTE: NL.TAPE; ODUMP.LISP#1 was compiled by Gyro on Astarte at 5/15/84 18:01:50
          with system 98.39
SYS: TAPE; FDUMP-DEF QFASL > is loaded into package FILE-SYSTEM
 ASTARTE: NL.TAPE; FDUMP-DEF.QFASL#12 was created 5/15/84 17:55:04
SYS: TAPE; COPY QFASL > is loaded into package FILE-SYSTEM
 ASTARTE: NL.TAPE; COPY.QFASL#133 was created 5/15/84 17:57:02
SYS: TAPE; MTAUX QFASL > is loaded into package FILE-SYSTEM
 ASTARTE: NL.TAPE; MTAUX.QFASL#80 was created 5/15/84 17:59:35
SYS: TAPE; ODUMP QFASL > is loaded into package FILE-SYSTEM
 ASTARTE: NL.TAPE; ODUMP.QFASL#1 was created 5/15/84 18:01:43
-- End of (describe-system 'magtape) output --

Then I did (fs:magtape-list-files).  


>>ERROR: The object #<MT-FILE-CHARACTER-INPUT-STREAM 35165012> received a :GET-STRING-EQUAL message, which went unclaimed.
The rest of the message was (:PARTITION).
Backtrace from the debugger:

#<MT-FILE-CHARACTER-INPUT-STREAM 35165012>:
   Arg 0: :GET-STRING-EQUAL
   Arg 1: :PARTITION


SI:INSTANCE-HASH-FAILURE (P.C. = 170)

 Arg 0 (OP): :GET-STRING-EQUAL
 Rest arg (ARGS): (:PARTITION)
Local 1 (HT): #<EQ-HASH-ARRAY (Funcallable) 30750566>
Local 2 (FN-LOCATION): NIL
Local 3 (FUNC): NIL
Local 4 (NEWHT): NIL
Local 5: NIL
Local 6: NIL


FS:MAGTAPE-LIST-FILES (P.C. = 102)

   --Defaulted args:--
 Arg 0 (OUT-STREAM): #:TERMINAL-IO-SYN-STREAM
Local 0 (STREAM): #<MT-FILE-CHARACTER-INPUT-STREAM 35165012>


SI:EVAL1 (P.C. = 1324)

 Arg 0 (FORM): (FS:MAGTAPE-LIST-FILES)
   --Defaulted args:--
 Arg 1 (NOHOOK): NIL
Local 0 (ARGNUM): 0
Local 1 (TEM): NIL
Local 2 (ENV): NIL
Local 3 (TAIL): NIL
Local 4 (FCTN): #<DTP-FEF-POINTER FS:MAGTAPE-LIST-FILES 12306274>
Local 5 (ARG-DESC): 400001
Local 6 (NUM-ARGS): 0
Local 7 (CLOSURE-PASSED): NIL
Local 8 (LAMBDA-LIST): NIL
Local 9 (LL): NIL
Local 10 (QUOTE-STATUS): NIL
Local 11 (REST-FLAG): NIL
Local 12 (ARGL): NIL
Local 13: NIL
Local 14: NIL
Local 15 (IGNORE): NIL
Local 16 (ADL): NIL
Local 17 (ITEM): NIL
Local 18 (*SELECTQ-ITEM*): NIL


Additional information supplied with call:
 Values to be collected for MULTIPLE-VALUE-LIST

SI:EVAL-ABORT-TRIVIAL-ERRORS (P.C. = 61)

 Arg 0 (TOP-LEVEL-FORM): (FS:MAGTAPE-LIST-FILES)
Local 0: ((SYSTEM:TOO-FEW-ARGUMENTS SYSTEM:TOO-MANY-ARGUMENTS SYSTEM:CELL-CONTENTS-ERROR SYSTEM:WRONG-TYPE-ARGUMENT ...) SI:EVAL-ABORT-TRIVIAL-ERRORS-HANDLER)
Local 1: ((** SI:EVAL-ABORT-TRIVIAL-ERRORS-HANDLER))


Remainder of stack:

SI:LISP-TOP-LEVEL1 (P.C. = 426)
SI:LISP-TOP-LEVEL2 (P.C. = 27)
SI:PROCESS-TOP-LEVEL (P.C. = 246)

22-May-84 11:29:48-EDT,877;000000000000
Mail-From: X.GYRO created at 22-May-84 11:29:04
Date: Tue, 22 May 1984  11:29 EDT
Message-ID: <X.GYRO.12017374378.BABYL@MIT-OZ>
From: X.GYRO@MIT-OZ
To:   bug-lispm-mit@MIT-OZ
Subject: referentially transparent QUOTE in subst expansion

In System 98.39, CADR 3.4, ZMail 53.5, Experimental Local-File 48.1,
Experimental FILE-Server 8.0, microcode 306, on Zeta-Soft Astarte:

(defsubst declare-frob (frob type)
  (putprop frob type 'type))

This subst gets expanded incorrectly, apparently because something
thinks that QUOTE is referentially transparent; that is, that the
occurrence of "type" in the s-expression "(quote type)" deserves
to be substituted by the second argument, just like the unquoted
occurrence of "type".

BTW, where does the compiler keep the information that something is a
subst?  I don't see it on the symbol's plist...

-- Scott

22-May-84 11:31:00-EDT,1084;000000000000
Mail-From: X.GYRO created at 22-May-84 11:30:22
Date: Tue, 22 May 1984  11:30 EDT
Message-ID: <X.GYRO.12017374616.BABYL@MIT-OZ>
From: X.GYRO@MIT-OZ
To:   bug-lispm-mit@MIT-OZ
Subject: compiler optimizations request


In System 98.39, CADR 3.4, ZMail 53.5, Experimental Local-File 48.1,
Experimental FILE-Server 8.0, microcode 306, on Zeta-Soft Astarte:

I have a number of macros that often generate forms of the form

  (let ((%%val <expression>))
    (setq foo %%val))

The compiler allocates a local and generates a "MOVEM" instruction for
%%val, though in fact neither is needed.  I could make my macros more
intelligent, but there are several of them, and this seems like the sort
of thing the compiler should be able to deal with in general.  After
all, it's already turned the "POP LOCAL|n" / "PUSH LOCAL|n" into a
"MOVEM", hasn't it?

Also, I see that the compiler is smart enough to turn (+ x 1) into a
"(MISC) 1+" instruction, but when given (+ x 0), generates "+ '0".
Yeah, I know people don't write things like that, but macros do!

-- Scott

22-May-84 11:33:59-EDT,1107;000000000000
Mail-From: X.GYRO created at 22-May-84 11:33:30
Date: Tue, 22 May 1984  11:33 EDT
Message-ID: <X.GYRO.12017375185.BABYL@MIT-OZ>
From: X.GYRO@MIT-OZ
To:   bug-lispm-mit@MIT-OZ
Subject: Forwarding cars of conses

In System 98.39, CADR 3.4, ZMail 53.5, Experimental Local-File 48.1,
Experimental FILE-Server 8.0, microcode 306, on Zeta-Soft Astarte:

I just learned (the hard way) that to forward the car of one cons to the
car of another, 

  (%p-store-tag-and-pointer oldcons dtp-one-q-forward newcons)

doesn't work.  Instead, I have to write

  (let ((cdr-code (%p-cdr-code oldcons)))
    (without-interrupts
      (%p-store-tag-and-pointer oldcons dtp-one-q-forward newcons)
      (%p-store-cdr-code frob cdr-code)))

in order to keep the cdr-code from being forcibly set to CDR-NORMAL.
Seems to me there should be a predefined function for this, since
somebody else someday is going to want to do the same kind of
forwarding, and they will have the same problem.  Failing that, there
should at least be a note in the manual under %p-store-tag-and-pointer.

-- Scott Layson

22-May-84 17:15:24-EDT,891;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 22 May 84 17:14-EDT
Date: Tuesday, 22 May 1984, 17:14-EDT
From: Charles Rich <RICH at OZ>
Subject: Electric Font Lock Mode
To: BUG-lispm at OZ

In Release 4.5, Reasoning Utility Package 14.0,
Experimental Hybrid Reasoning System 19.0, FEP 18, site configuration 62, on PI Project:

Electric Font lock mode is cute, but it has a serious aesthetic bug:
the first semicolon is in the code font, and then the rest of
characters (in comment) are the comment font -- which sounds
logical enough.  However, it is common practice to use double and
triple semi's for various kinds of comments, which gives the very
odd appearance of one semi in a fixed font following by the second
in another (e.g. italic) font.  This should be special-cased either
to put all the semi's in comment font, or have all the semi's in
code font.

			-CR
22-May-84 19:32:55-EDT,2329;000000000000
Mail-From: RPK created at 22-May-84 19:31:50
Date: 22 May 1984  19:31 EDT (Tue)
Message-ID: <RPK.12017462264.BABYL@MIT-OZ>
From: "Robert P. Krajewski" <RPK@MIT-OZ>
To:   X.GYRO@MIT-OZ
Cc:   bug-lispm-mit@MIT-OZ
Subject: unclaimed :GET-STRING-EQUAL message in magtape software (Kludge, Kludge)
In-reply-to: Msg of 22 May 1984  11:27-EDT from X.GYRO

I think you've got two conflicting source files that are screwing you.
Someone at LMI (not me) defined that method to do a :GET, using STRING-EQUAL
to compare symbols instead of EQ.  The reason for this is to allow ancient
tapes (system < 78) to be read in.  The printed plist that sits in the
header of every magtape file has to be read in correctly.  The symbols
used to be in FS while PACKAGE (now it's *PACKAGE*) was bound to be FS
package.  Then, all the interesting properties were moved to USER, so this
made the properties print out with colons, even before the keyword package
existed.  But when that happened, the old properties would get read in FS.

For example, :LENGTH had to be defined as

	(OR (SEND SELF :GET :LENGTH) (SEND SELF :GET 'LENGTH))

Even though has worked for the past two years (including under the new
package system), somebody changed it.  At MIT, I changed it back, tested it,
and it works.

So, here's the part of MTSTR in SYS: TAPE; you'll need to look at:

(DEFMETHOD (MT-FILE-MIXIN :DIRECTORY) ()
  (OR (GET (LOCF SI:PROPERTY-LIST) ':DIRECTORY) (GET (LOCF SI:PROPERTY-LIST) 'DIRECTORY)))

(DEFMETHOD (MT-FILE-MIXIN :NAME) ()
  (GET (LOCF SI:PROPERTY-LIST) ':NAME))

(DEFMETHOD (MT-FILE-MIXIN :TYPE) ()
  (GET (LOCF SI:PROPERTY-LIST) ':TYPE))

(DEFMETHOD (MT-FILE-MIXIN :VERSION) ()
  (GET (LOCF SI:PROPERTY-LIST) ':VERSION))
  
(DEFMETHOD (MT-FILE-MIXIN :CREATION-DATE) ()
  (GET (LOCF SI:PROPERTY-LIST) ':CREATION-DATE))

(DEFMETHOD (MT-FILE-MIXIN :QFASLP) ()
  (GET (LOCF SI:PROPERTY-LIST) ':QFASLP))

There's no patch for it 'cos it never was a problem here.  What I really
ought to do is smash certain of the symbols in the plist to the keyword
package after the plist has been read in.

If you want to know more about how all the crufty Magtape stuff works,
there's a Scribble file on CAPRICORN:/lmi/rpk somewhere
(/lmi/rpk/doc/lm/magtape.mss ??) that documents it pretty thoroughly.
22-May-84 20:27:08-EDT,568;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 22 May 84 20:26-EDT
Date: Tuesday, 22 May 1984, 20:26-EDT
From: Christopher Fry <cfry at MIT-OZ>
Subject: make-system bad error
To: BUG-LISPM at MIT-OZ

In Release 5.0 [Beta Test rev 7], on Lisp Machine Robot-4 (3600):

If (make-system 'foo) can't find a particular binary file, but can find the source code, it should
	pop up a menu with the choices:
	Load source code
	load source and compile it
	load other file

in any event make-system should not prevent you from loading s source file as it does now.
22-May-84 22:38:00-EDT,2054;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 22 May 84 22:36-EDT
Date: Tuesday, 22 May 1984, 22:34-EDT
From: David M. J. Saslav <saz at MIT-OZ>
Subject: catalog editor bug, Take 2
To: BUG-LISPM at MIT-OZ

In Release 5.0 [Beta Test rev 7], Experimental Useful 10.0,
Experimental TimeKit 12.0, Experimental Music 11.0,
Experimental Pitch 11.0, Experimental Enharm-Pitch 11.0,
Experimental Harmony 11.0, Experimental Staff 11.0,
Experimental Chroma 11.0, Experimental Play 9.0,
Experimental Linedit 7.0, Experimental Frets 8.0, Music 14 Apr - JRD, on Lisp Machine Four (LM-2):

Here's another one for y'all -- This occurred just after
calling my func "convert" on a list of number lists, after
prompting me for a title.  The function lives and should
be compiled from PROGRESSIONFILE.LISP in my directory on
OZ (PS), and the call (music:convert '(())) should be enough
to recreate the error.
---dave

>>Trap: The function NIL is undefined.
While in the function CONVERT  SI:*EVAL  SI:LISP-COMMAND-LOOP-INTERNAL

CONVERT:  (P.C. = 125)  (from OZ:PS:<SAZ>PROGRESSIONFILE)
   Arg 0 (VOICINGS): (NIL)
   --Defaulted args:--
   Arg 1 (TITLE): NIL
   Arg 2 (CATALOG-NAME): NIL
   Local 0 (CAT): NIL
   Local 1 (TITLE): "foo"
   Local 2 (SCORE): NIL
   Local 3 (PIECE): NIL

SI:*EVAL:  (P.C. = 676)
   Arg 0 (FORM): (CONVERT (QUOTE (NIL)))

SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 330)
   Rest arg: (:NAME "Lisp Top Level in Lisp Listener Pane No Menu Select 1" :ABORTED-FUNCTION NIL :BEFORE-PROMPT-FUNCTION NIL :READ-FUNCTION NIL :EVAL-FUNCTION NIL ...)

SI:LISP-COMMAND-LOOP:  (P.C. = 251)
   Arg 0 (STREAM): #<LISP-LISTENER-PANE-NO-MENU-SELECT Lisp Listener Pane No Menu Select 1 -37012267 exposed>
   Rest arg: (:NAME "Lisp Top Level in Lisp Listener Pane No Menu Select 1")

SI:LISP-TOP-LEVEL1:  (P.C. = 47)
   Arg 0 (TERMINAL-IO): #<LISP-LISTENER-PANE-NO-MENU-SELECT Lisp Listener Pane No Menu Select 1 -37012267 exposed>

SI:PROCESS-TOP-LEVEL:  (P.C. = 123)
   --Defaulted args:--
   Arg 0 (IGNORE): NIL
22-May-84 22:40:00-EDT,2054;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 22 May 84 22:36-EDT
Date: Tuesday, 22 May 1984, 22:34-EDT
From: David M. J. Saslav <saz at MIT-OZ>
Subject: catalog editor bug, Take 2
To: BUG-LISPM at MIT-OZ

In Release 5.0 [Beta Test rev 7], Experimental Useful 10.0,
Experimental TimeKit 12.0, Experimental Music 11.0,
Experimental Pitch 11.0, Experimental Enharm-Pitch 11.0,
Experimental Harmony 11.0, Experimental Staff 11.0,
Experimental Chroma 11.0, Experimental Play 9.0,
Experimental Linedit 7.0, Experimental Frets 8.0, Music 14 Apr - JRD, on Lisp Machine Four (LM-2):

Here's another one for y'all -- This occurred just after
calling my func "convert" on a list of number lists, after
prompting me for a title.  The function lives and should
be compiled from PROGRESSIONFILE.LISP in my directory on
OZ (PS), and the call (music:convert '(())) should be enough
to recreate the error.
---dave

>>Trap: The function NIL is undefined.
While in the function CONVERT  SI:*EVAL  SI:LISP-COMMAND-LOOP-INTERNAL

CONVERT:  (P.C. = 125)  (from OZ:PS:<SAZ>PROGRESSIONFILE)
   Arg 0 (VOICINGS): (NIL)
   --Defaulted args:--
   Arg 1 (TITLE): NIL
   Arg 2 (CATALOG-NAME): NIL
   Local 0 (CAT): NIL
   Local 1 (TITLE): "foo"
   Local 2 (SCORE): NIL
   Local 3 (PIECE): NIL

SI:*EVAL:  (P.C. = 676)
   Arg 0 (FORM): (CONVERT (QUOTE (NIL)))

SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 330)
   Rest arg: (:NAME "Lisp Top Level in Lisp Listener Pane No Menu Select 1" :ABORTED-FUNCTION NIL :BEFORE-PROMPT-FUNCTION NIL :READ-FUNCTION NIL :EVAL-FUNCTION NIL ...)

SI:LISP-COMMAND-LOOP:  (P.C. = 251)
   Arg 0 (STREAM): #<LISP-LISTENER-PANE-NO-MENU-SELECT Lisp Listener Pane No Menu Select 1 -37012267 exposed>
   Rest arg: (:NAME "Lisp Top Level in Lisp Listener Pane No Menu Select 1")

SI:LISP-TOP-LEVEL1:  (P.C. = 47)
   Arg 0 (TERMINAL-IO): #<LISP-LISTENER-PANE-NO-MENU-SELECT Lisp Listener Pane No Menu Select 1 -37012267 exposed>

SI:PROCESS-TOP-LEVEL:  (P.C. = 123)
   --Defaulted args:--
   Arg 0 (IGNORE): NIL
22-May-84 22:41:57-EDT,2054;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 22 May 84 22:37-EDT
Date: Tuesday, 22 May 1984, 22:34-EDT
From: David M. J. Saslav <saz at MIT-OZ>
Subject: catalog editor bug, Take 2
To: BUG-LISPM at MIT-OZ

In Release 5.0 [Beta Test rev 7], Experimental Useful 10.0,
Experimental TimeKit 12.0, Experimental Music 11.0,
Experimental Pitch 11.0, Experimental Enharm-Pitch 11.0,
Experimental Harmony 11.0, Experimental Staff 11.0,
Experimental Chroma 11.0, Experimental Play 9.0,
Experimental Linedit 7.0, Experimental Frets 8.0, Music 14 Apr - JRD, on Lisp Machine Four (LM-2):

Here's another one for y'all -- This occurred just after
calling my func "convert" on a list of number lists, after
prompting me for a title.  The function lives and should
be compiled from PROGRESSIONFILE.LISP in my directory on
OZ (PS), and the call (music:convert '(())) should be enough
to recreate the error.
---dave

>>Trap: The function NIL is undefined.
While in the function CONVERT  SI:*EVAL  SI:LISP-COMMAND-LOOP-INTERNAL

CONVERT:  (P.C. = 125)  (from OZ:PS:<SAZ>PROGRESSIONFILE)
   Arg 0 (VOICINGS): (NIL)
   --Defaulted args:--
   Arg 1 (TITLE): NIL
   Arg 2 (CATALOG-NAME): NIL
   Local 0 (CAT): NIL
   Local 1 (TITLE): "foo"
   Local 2 (SCORE): NIL
   Local 3 (PIECE): NIL

SI:*EVAL:  (P.C. = 676)
   Arg 0 (FORM): (CONVERT (QUOTE (NIL)))

SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 330)
   Rest arg: (:NAME "Lisp Top Level in Lisp Listener Pane No Menu Select 1" :ABORTED-FUNCTION NIL :BEFORE-PROMPT-FUNCTION NIL :READ-FUNCTION NIL :EVAL-FUNCTION NIL ...)

SI:LISP-COMMAND-LOOP:  (P.C. = 251)
   Arg 0 (STREAM): #<LISP-LISTENER-PANE-NO-MENU-SELECT Lisp Listener Pane No Menu Select 1 -37012267 exposed>
   Rest arg: (:NAME "Lisp Top Level in Lisp Listener Pane No Menu Select 1")

SI:LISP-TOP-LEVEL1:  (P.C. = 47)
   Arg 0 (TERMINAL-IO): #<LISP-LISTENER-PANE-NO-MENU-SELECT Lisp Listener Pane No Menu Select 1 -37012267 exposed>

SI:PROCESS-TOP-LEVEL:  (P.C. = 123)
   --Defaulted args:--
   Arg 0 (IGNORE): NIL
23-May-84 06:58:16-EDT,1540;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 23 May 84 06:57-EDT
Date: Wednesday, 23 May 1984, 06:57-EDT
From: Kent M Pitman <kmp at MIT-MC>
Subject: Compilers WNA checking
To: BUG-LISPM at OZ
Cc: KBE-I-FILE at OZ, Dick at OZ

In Symbolics Release 4.5 on Avatar (CADR),
   Symbolics Release 5.0.7 on Apiary-4 (3600):

If you compile something like

 (DEFUN FOO (X) X)

such that the compiler thinks that FOO has 1 arg, then
you change FOO's definition to 

 (DEFUN FOO (X Y) ... (FOO Y X) ...)

the compiler will complain (FOO Y X) uses too many arguments.

This is diagnostic is incorrect and can lead one to worry
unnecessarily, especially when compiling patch files created
by someone else.

Before compiling a function, the compiler should grab the new
argument conventions for the current function and update its
table.

If you're worried about not catching certain bugs, I think it
would be more appropriate to generate a warning (I'm not sure
if it belongs at compile-time or at load-time) saying something
like:

 Warning: Argument conventions for the the function FOO have changed.
	  Its I/O specs used to be
	    FOO: (X Y &OPTIONAL (Z 3))  OBJ, PACKAGE
	  but have become
	    FOO: (X Y &REST W)  OBJ, PACKAGE

If the information were cheaply available, telling the user which
functions were calling FOO and might be affected might be handy,
at least in FILE compilations.

Anyway, I mostly just care that the bogus error diagnostic that
comes out now should get flushed.
-kmp
23-May-84 07:26:54-EDT,1507;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 23 May 84 07:26-EDT
Date: Wednesday, 23 May 1984, 07:25-EDT
From: Kent M Pitman <kmp at MIT-MC>
Subject: Finding out about lazy flavor compilation, etc.
To: BUG-LISPM at OZ
Cc: KBE-I at OZ

In Symbolics Release 4.5 on Avatar (CADR):

It would be nice if there were a switch variable which I could
set which said that I wanted (and perhaps where I wanted)
trace information typed out of what lazy flavor compilations 
were occurring. I find myself frequently frustrated by the fact
that if I omit a COMPILE-FLAVOR-METHODS in a system with a 
zillion flavor things, that the first time I use my program
it is very laggy while all the flavor stuff gets set up. I wish
I knew for certain if any of my flavors was accidentally not
pre-compiled and which they were. Eg, if there were a variable
TRACE-FLAVOR-COMPILATION which defaulted to NIL (no trace info)
which I could set to a window upon which I'd like to see trace 
info, that would be best.

A utility which allowed me to map over all flavors and ask 
if they'd been compiled already would almost do, but is not
as close to the interface I'd like. If I had this, though,
I could do 
 (DEFUN UNCOMPILED-FLAVORS (PKG)
   (SETQ PKG (PKG-FIND-PACKAGE PKG))
   (LET ((RESULT '()))
     (MAP-FLAVOR-NAMES
       #'(LAMBDA (F)
	   (IF (AND (NOT (FLAVOR-COMPILED-P F))
		    (EQ (SYMBOL-PACKAGE F) KBE-PACKAGE))
	       (PUSH F RESULT))))
     RESULT))
 (UNCOMPILED-FLAVORS "KBE")
