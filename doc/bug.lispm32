 3-Apr-85 17:12:09-EST,1693;000000000000
Received: from MIT-ZERMATT by MIT-OZ via Chaosnet; 3 Apr 85 17:09-EST
Received: from BRECKENRIDGE by ZERMATT via CHAOS with CHAOS-MAIL id 725; Wed 3-Apr-85 17:08:33-EST
Date: Wednesday, 3 April 1985, 17:07-EST
From: Richard E. Zippel <RZ at ZERMATT>
Subject: Making Hardcopy to the dover work in REL6
To: cjl at OZ, DCP at SCRC-QUABBIN, BUG-LISPM at OZ
In-Reply-To: <850403161949.1.CJL@MOON.MIT.EDU>
Message-ID: <850403170742.8.RZ@BRECKENRIDGE.MIT.EDU>

    Date: Wednesday, 3 April 1985, 16:19-EST
    From: Chris Lindblad <cjl at OZ>

    I came up with a workaround that gets hardcopying to work. It may be ugly, but it works.

    ;;; Patch to make hardcopy to the dover work again
    ;;;
    press:  ;from SYS:HARDCOPY;PRESS
    (let ((inhibit-fdefine-warnings t))
      (defflavor press-hardcopy-device-mixin () (si:multiple-font-hardcopy-device-mixin)
	(:default-init-plist :default-font 'LPT8 :header-font 'LPT8)))

    (loop for printer in (let ((neti:*inhibit-validity-checking* t))
			   (neti:find-objects-from-property-list :printer :type :press))
	  do (send printer :eval-inside-yourself '(setq default-font 'LPT8))
	     (send printer :eval-inside-yourself '(setq header-font 'LPT8)))

    (advise (:method press:press-stream :character-width) :before :set-device-font nil
      (unless (send (first arglist) :device-current-font)
	(send (first arglist) :set-device-font)))
I believe the real code here should be:

(DEFMETHOD (PRESS-STREAM :CHARACTER-WIDTH) (CHAR)
  (UNLESS SI:DEVICE-CURRENT-FONT
    (SEND SELF :SET-DEVICE-FONT))
  (MAX 0 (AREF (SEVENTH SI:DEVICE-CURRENT-FONT) (CHAR-CODE CHAR))))
instead of the advise thing you put in.
 3-Apr-85 18:29:30-EST,1043;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 3 Apr 85 18:29-EST
Received: from SANCHO-PANZA by MIT-MC via Chaosnet; 3 APR 85  18:29:11 EST
Date: Wednesday, 3 April 1985, 18:28-EST
From: Christopher Eliot <CRE at SANCHO-PANZA>
Subject: Function Refresh
To: BUG-LISPM at OZ
Message-ID: <850403182817.1.CRE@SANCHO-PANZA.MIT.EDU>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, microcode TMC5-MIC 319,
FEP 18, on Lisp Machine Sancho Panza:

Occationally I want to clear the screen while somthing is running.
Function Refresh will do this, but it doesn't move the cursor to
to the upper left corner, which I want it to do.

Another logical place to implement the functionality I want
is on Control-Refresh.  I think this should do what REFRESH
does as an interrupt.  This is analogous to the behavior of ABORT
and SUSPEND when modified by Control.

While I am on the subject of the keyboard, are there
any plans to make the Repeat key functional?  It is not exactly
the most important thing in the world, but it shuldn't hurt.
 3-Apr-85 20:44:32-EST,1180;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 3 Apr 85 20:44-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 208222; Wed 3-Apr-85 13:37:47-EST
Date: Wednesday, 3 April 1985, 13:35-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: odds and ends accumulated while playing idlely with Rel 6.
To: Alan Bawden <Alan at MIT-MC>, BUG-LISPM at OZ
In-Reply-To: <850402231103.2.ALAN@DUANE.MIT.EDU>
Message-ID: <850403133548.8.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Tuesday, 2 April 1985, 23:11-EST
    From: Alan Bawden <Alan at MIT-MC>

    In Symbolics 3670 Release 6.0, IP-TCP 29.0, AISite 7.5,
    microcode TMC5-IO4-MIC 319, FEP 22, on Lisp Machine Duane Allman:

    I will repeat for the fourth or fith time my plea for the Machine to stop
    badgering me about the lack of Base attributes in my file property lists.
    You can find my arguments on this point in your archives I hope.  Nobody
    has ever bothered to respond to them in my memory.

I warned them you wouldn't like this when they did it...

    No spelling correction yet, so pleaes excuse the typos.

Release 7 goal.

 3-Apr-85 20:57:34-EST,1306;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 3 Apr 85 20:57-EST
Received: from SCRC-STONY-BROOK by MIT-MC via Chaosnet; 3 APR 85  20:57:05 EST
Received: from SCRC-SUDBURY by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 208354; Wed 3-Apr-85 16:24:16-EST
Date: Wed, 3 Apr 85 16:25 EST
From: Richard L. Bryan <RLB@SCRC-STONY-BROOK.ARPA>
Subject: Error received in the documentor.
To: ALLARD@INTERNET|128.52.22.26, BUG-LISPM@MIT-MC.ARPA
In-Reply-To: <"850403103551.1.ALLARD@APIARY-6"@APIARY-9.MIT.EDU>
Message-ID: <850403162515.6.RLB@SUDBURY.SCRC.Symbolics.COM>
Fonts: CPTFONT, CPTFONTB

    Date: Wed, 3 Apr 85 10:35 EST
    From:  <ALLARD@[128.52.22.26]>

    Hiya,

    I entered the documentor, clicked on Find, typed "ignore", and an
    appropriate looking candidate list appeared.  When I clicked on
    IGNORE to view it, this error occured.  Have fun fixing...

				    Jim Allard

    In Symbolics 3600 1Release 6.0 Beta IIc0, microcode TMC5-MIC 315, FEP 18, on APIARY-9:


    >>Error: The logical pathname SYS: DOC; EVAL; is not defined
    While in the function (:METHOD FS:LOGICAL-HOST :TRANSLATE-RAW)  (:METHOD FS:LOGICAL-HOST :TRANSLATE)  (:METHOD FS:LOGICAL-PATHNAME :TRANSLATED-PATHNAME)

I bet it would work if you were using a
correctly installed Rel 6.
 3-Apr-85 21:03:54-EST,1276;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 3 Apr 85 21:03-EST
Received: from SCRC-STONY-BROOK by MIT-MC via Chaosnet; 3 APR 85  21:03:11 EST
Received: from SCRC-SUDBURY by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 208356; Wed 3-Apr-85 16:25:02-EST
Date: Wed, 3 Apr 85 16:26 EST
From: Richard L. Bryan <RLB@SCRC-STONY-BROOK.ARPA>
Subject: Error received in the documentor.
To: BUG-LISPM@MIT-MC.ARPA
In-Reply-To: <"850403103551.1.ALLARD@APIARY-6"@APIARY-9.MIT.EDU>
Message-ID: <850403162601.7.RLB@SUDBURY.SCRC.Symbolics.COM>
Fonts: CPTFONT, CPTFONTB

    Date: Wed, 3 Apr 85 10:35 EST
    From:  <ALLARD@[128.52.22.26]>

    Hiya,

    I entered the documentor, clicked on Find, typed "ignore", and an
    appropriate looking candidate list appeared.  When I clicked on
    IGNORE to view it, this error occured.  Have fun fixing...

				    Jim Allard

    In Symbolics 3600 1Release 6.0 Beta IIc0, microcode TMC5-MIC 315, FEP 18, on APIARY-9:


    >>Error: The logical pathname SYS: DOC; EVAL; is not defined
    While in the function (:METHOD FS:LOGICAL-HOST :TRANSLATE-RAW)  (:METHOD FS:LOGICAL-HOST :TRANSLATE)  (:METHOD FS:LOGICAL-PATHNAME :TRANSLATED-PATHNAME)

I bet it would work if you were using a
correctly installed Rel 6.
 3-Apr-85 21:45:57-EST,1002;000000000000
Received: from MIT-XX by MIT-OZ via Chaosnet; 3 Apr 85 21:45-EST
Received: from SCRC-QUABBIN by MIT-XX via Chaosnet; 3 Apr 85 21:44-EST
Received: from SCRC-EUPHRATES by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 150292; Wed 3-Apr-85 21:41:28-EST
Date: Wed, 3 Apr 85 21:44 EST
From: David A. Moon <Moon@SCRC-STONY-BROOK.ARPA>
Subject: Re: Press printers
To: Andy Freeman <FREEMAN@SUMEX-AIM.ARPA>
cc: GUMBY@MIT-MC.ARPA, BUG-LISPM%MIT-OZ@MIT-XX.ARPA,
    cjl%MIT-OZ@MIT-XX.ARPA
In-Reply-To: The message of 3 Apr 85 14:10-EST from Andy Freeman <FREEMAN@SUMEX-AIM.ARPA>
Message-ID: <850403214446.7.MOON@EUPHRATES.SCRC.Symbolics.COM>

    Date: Wed 3 Apr 85 11:10:38-PST
    From: Andy Freeman <FREEMAN@SUMEX-AIM.ARPA>

    There is only one dover at Stanford; doesn't CMU have two?  Or don't
    they have any Symbolics machines?  We have a few.  Does PARC have any?

I think that I am learning something new every day.  Do you print hardcopies
on your Dover at Stanford from your 3600s?
 4-Apr-85 10:30:36-EST,1164;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 4 Apr 85 10:30-EST
Received: from MIT-MORRISON by MIT-MC via Chaosnet; 4 APR 85  10:25:30 EST
Date: Thursday, 4 April 1985, 10:23-EST
From: jcma@MIT-MC
Subject: FUNCTION-1F Takes forever
To: BUG-LISPM@OZ
Message-ID: <850404102333.6.JCMA@MORRISON.MIT.EDU>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.7,
microcode TMC5-MIC 319, FEP 22, on Lisp Machine James Morrison:

I just did this and it took about 5 minutes!  And it was only trying to show
me near by lisp machines!  All of the time was soaked up in repeatedly
contacting the namespace server, in this case AP6.

If we put in metering to determine the amount of time researchers at MIT spend
waiting for namespace lossage and charged somebody for the lost time according
standard consulting rates, somebody would be very broke!

The point is just that the namespace system is still the major productivity
loss in these lisp machines.  And the bug is still too much interaction with
the namespace servers (not to mention connecting all over the universe).

On the bright side, parsing hosts in zmail seems to be doing much better.
 4-Apr-85 10:31:04-EST,1271;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 4 Apr 85 10:30-EST
Received: from MIT-MORRISON by MIT-MC via Chaosnet; 4 APR 85  10:27:26 EST
Date: Thursday, 4 April 1985, 10:25-EST
From: jcma@MIT-MC
Subject: FUNCTION-1F Takes forever
To: BUG-LISPM@OZ
Message-ID: <850404102536.7.JCMA@MORRISON.MIT.EDU>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.7,
microcode TMC5-MIC 319, FEP 22, on Lisp Machine James Morrison:

I just did this and it took about 5 minutes!  And it was only trying to show
me near by lisp machines!  All of the time was soaked up in repeatedly
contacting the namespace server, in this case AP6.

If we put in metering to determine the amount of time researchers at MIT spend
waiting for namespace lossage and charged somebody for the lost time according
standard consulting rates, somebody would be very broke!

The point is just that the namespace system is still the major productivity
loss in these lisp machines.  And the bug is still too much interaction with
the namespace servers (not to mention connecting all over the universe).

On the bright side, parsing hosts in zmail seems to be doing much better.

p.s.  There were 20 connects to AP6 to send this message!  Note that there is
only one host mentioned.
 4-Apr-85 10:49:59-EST,1437;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 4 Apr 85 10:49-EST
Received: from SCRC-ANNISQUAM by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 208837; Thu 4-Apr-85 10:48:38-EST
Date: Thu, 4 Apr 85 10:49 EST
From: Doug Dodds <DODDS@SCRC-TENEX>
Subject: command processor
To: Alan@MIT-MC
cc: BUG-LISPM@OZ
In-Reply-To: <850402232248.3.ALAN@DUANE.MIT.EDU>
Message-ID: <850404104958.2.DODDS@ANNISQUAM.SCRC.Symbolics.COM>

    Date: Tuesday, 2 April 1985, 23:22-EST
    From: Alan Bawden <Alan at MIT-MC>

    In Symbolics 3670 Release 6.0, IP-TCP 29.0, AISite 7.5,
    microcode TMC5-IO4-MIC 319, FEP 22, on Lisp Machine Duane Allman:

    What good are filename defualts if I can't use them?  I type ":sh fi " and
    it shows me a perfectly reasonable default filename, so I type <return> and
    it barfs at me cause I "must supply a value".  Barf!

This is the result of insufficient communication between elements of the
CP, which is still a juvenile system.  

In this case, the command has no sure knowledge that you have seen a
default; you do, because the default attribute of that argument
includes the default value, but due to this skimpy communication, the
command doesn't know that.  

We are working on how to improve this situation, but meanwhile, you have
to type one more space, to cause the default to be explicitly filled
into the field.  Then it "knows".  Thanks for the report.
 4-Apr-85 10:53:28-EST,1521;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 4 Apr 85 10:51-EST
Received: from SCRC-ANNISQUAM by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 208840; Thu 4-Apr-85 10:48:59-EST
Date: Thu, 4 Apr 85 10:50 EST
From: Doug Dodds <DODDS@SCRC-TENEX>
Subject: command processor
To: Alan@MIT-MC
cc: BUG-LISPM@OZ, Bug-CP@SCRC-TENEX
In-Reply-To: <850402232248.3.ALAN@DUANE.MIT.EDU>
Supersedes: <850404104958.2.DODDS@ANNISQUAM.SCRC.Symbolics.COM>
Message-ID: <850404105018.3.DODDS@ANNISQUAM.SCRC.Symbolics.COM>

    Date: Tuesday, 2 April 1985, 23:22-EST
    From: Alan Bawden <Alan at MIT-MC>

    In Symbolics 3670 Release 6.0, IP-TCP 29.0, AISite 7.5,
    microcode TMC5-IO4-MIC 319, FEP 22, on Lisp Machine Duane Allman:

    What good are filename defualts if I can't use them?  I type ":sh fi " and
    it shows me a perfectly reasonable default filename, so I type <return> and
    it barfs at me cause I "must supply a value".  Barf!

This is the result of insufficient communication between elements of the
CP, which is still a juvenile system.  

In this case, the command has no sure knowledge that you have seen a
default; you do, because the default attribute of that argument
includes the default value, but due to this skimpy communication, the
command doesn't know that.  

We are working on how to improve this situation, but meanwhile, you have
to type one more space, to cause the default to be explicitly filled
into the field.  Then it "knows".  Thanks for the report.
 4-Apr-85 11:03:20-EST,1983;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 4 Apr 85 11:02-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 208857; Thu 4-Apr-85 11:01:19-EST
Date: Thursday, 4 April 1985, 10:59-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: Making Hardcopy to the dover work in REL6
To: Richard E. Zippel <RZ at ZERMATT>, cjl at OZ
cc: DCP at SCRC-QUABBIN, BUG-LISPM at OZ
In-Reply-To: <850403170742.8.RZ@BRECKENRIDGE.MIT.EDU>
Message-ID: <850404105924.1.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Wednesday, 3 April 1985, 17:07-EST
    From: Richard E. Zippel <RZ at ZERMATT>

	Date: Wednesday, 3 April 1985, 16:19-EST
	From: Chris Lindblad <cjl at OZ>

	I came up with a workaround that gets hardcopying to work. It may be ugly, but it works.

	;;; Patch to make hardcopy to the dover work again
	;;;
	press:  ;from SYS:HARDCOPY;PRESS
	(let ((inhibit-fdefine-warnings t))
	  (defflavor press-hardcopy-device-mixin () (si:multiple-font-hardcopy-device-mixin)
	    (:default-init-plist :default-font 'LPT8 :header-font 'LPT8)))

	(loop for printer in (let ((neti:*inhibit-validity-checking* t))
			       (neti:find-objects-from-property-list :printer :type :press))
	      do (send printer :eval-inside-yourself '(setq default-font 'LPT8))
		 (send printer :eval-inside-yourself '(setq header-font 'LPT8)))

	(advise (:method press:press-stream :character-width) :before :set-device-font nil
	  (unless (send (first arglist) :device-current-font)
	    (send (first arglist) :set-device-font)))
    I believe the real code here should be:

    (DEFMETHOD (PRESS-STREAM :CHARACTER-WIDTH) (CHAR)
      (UNLESS SI:DEVICE-CURRENT-FONT
	(SEND SELF :SET-DEVICE-FONT))
      (MAX 0 (AREF (SEVENTH SI:DEVICE-CURRENT-FONT) (CHAR-CODE CHAR))))
    instead of the advise thing you put in.

I'll see what can be done for 6.1.  Note that all the fonts should
probably be strings instead of symbols.
 4-Apr-85 11:38:39-EST,4212;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 4 Apr 85 11:38-EST
Received: from MIT-OZ by MIT-MC via Chaosnet; 4 APR 85  11:37:33 EST
Received: from MIT-APIARY-9 by MIT-OZ via Chaosnet; 4 Apr 85 11:37-EST
Date: Thu, 4 Apr 85 11:36 EST
From:  <ALLARD@[128.52.22.26]>
Subject: Bug in Document Examiner Host or Directory Name
To: BUG-LISPM@MIT-MC.ARPA
Message-ID: <"850404113638.1.ALLARD@APIARY-6"@APIARY-9.MIT.EDU>

Hello,

I entered the examiner, clecked left on Find, typed lambda, clicked
left on "Clm: Lambda-expressions" and got this error.  It's too bad,
because when its working this is a wonderful tool for avoiding
searching through the 8 volumes of your verbose manual.  Good luck
fixing...

                                Jim Allard

**********************************************************************

In Symbolics 3600 Release 6.0 Beta IIc, microcode TMC5-MIC 315, FEP 18, on APIARY-9:



>>Error: The logical pathname SYS: DOC; PATCH; is not defined
While in the function (:METHOD FS:LOGICAL-HOST :TRANSLATE-RAW)  (:METHOD FS:LOGICAL-HOST :TRANSLATE)  (:METHOD FS:LOGICAL-PATHNAME :TRANSLATED-PATHNAME)

(:METHOD FS:LOGICAL-HOST :TRANSLATE-RAW):  (P.C. = 36)
   Arg 0 (SELF): #<LOGICAL-HOST SYS>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:LOGICAL-HOST -- 9. IV's, 2. FL's 105422371>
   Arg 2 (OPERATION): :TRANSLATE-RAW
   Arg 3 (PATHNAME): #<LOGICAL-PATHNAME "SYS: DOC; PATCH; NDS-10-51.SAB.1">

(:METHOD FS:LOGICAL-HOST :TRANSLATE):  (P.C. = 5)
   Arg 0 (SELF): #<LOGICAL-HOST SYS>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:LOGICAL-HOST -- 9. IV's, 2. FL's 105422371>
   Arg 2 (OPERATION): :TRANSLATE
   Arg 3 (PATHNAME): #<LOGICAL-PATHNAME "SYS: DOC; PATCH; NDS-10-51.SAB.1">

(:METHOD FS:LOGICAL-PATHNAME :TRANSLATED-PATHNAME):  (P.C. = 67)
   Arg 0 (SELF): #<LOGICAL-PATHNAME "SYS: DOC; PATCH; NDS-10-51.SAB.1">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:LOGICAL-PATHNAME -- 8. IV's, 3. FL's 105360754>
   Arg 2 (OPERATION): :TRANSLATED-PATHNAME

(:DEFUN-METHOD FS:LOGICAL-PATHNAME-PASS-ON):  (P.C. = 5)
   Arg 0 (SELF): #<LOGICAL-PATHNAME "SYS: DOC; PATCH; NDS-10-51.SAB.1">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:LOGICAL-PATHNAME -- 8. IV's, 3. FL's 105360754>
   Arg 2 (MESSAGE): :OPEN
   Rest arg (REST): (#<LOGICAL-PATHNAME "SYS: DOC; PATCH; NDS-10-51.SAB.1"> :DIRECTION :INPUT :BYTE-SIZE 8 :CHARACTERS NIL)

(:METHOD FS:LOGICAL-PATHNAME :OPEN):  (P.C. = 10)
   Arg 0 (SELF): #<LOGICAL-PATHNAME "SYS: DOC; PATCH; NDS-10-51.SAB.1">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:LOGICAL-PATHNAME -- 8. IV's, 3. FL's 105360754>
   Arg 2 (OPERATION): :OPEN
   Rest arg (.ARGS.): (#<LOGICAL-PATHNAME "SYS: DOC; PATCH; NDS-10-51.SAB.1"> :DIRECTION :INPUT :BYTE-SIZE 8 :CHARACTERS NIL)

FS:COMMON-LISP-OPEN:  (P.C. = 450)
   Arg 0 (PATHNAME): #<LOGICAL-PATHNAME "SYS: DOC; PATCH; NDS-10-51.SAB.1">
   Arg 1 (KEYWORD-ARGS): (:CHARACTERS NIL :BYTE-SIZE 8)

OPEN:  (P.C. = 257)
   Arg 0 (PATHNAME): #<LOGICAL-PATHNAME "SYS: DOC; PATCH; NDS-10-51.SAB.1">
   Rest arg (KEYWORD-ARGS): (:CHARACTERS NIL :BYTE-SIZE 8)

SAGE:OPEN-SAGE-FILE:  (P.C. = 155)
   Arg 0 (PATHNAME): #<LOGICAL-PATHNAME "SYS: DOC; PATCH; NDS-10-51.SAB.1">

Rest of stack:
(:METHOD SAGE:BASIC-DOC-RECORD :INIT):  (P.C. = 37)
INSTANTIATE-FLAVOR:  (P.C. = 445)
MAKE-INSTANCE:  (P.C. = 6)
SAGE:INSTALL-RECORD:  (P.C. = 34)
SAGE:RECORD-FOR-TOPIC&TYPE:  (P.C. = 224)<<Error printing function name>>
(:METHOD SAGE:SOURCE-OF-FORMATTED-SAGE-RECORD-LINES :INIT):  (P.C. = 24)
INSTANTIATE-FLAVOR:  (P.C. = 445)
MAKE-INSTANCE:  (P.C. = 6)
SAGE:FORMATTED-SAGE-RECORD-LINE-SOURCE:  (P.C. = 11)
(:METHOD SAGE:DEX-ITEM :PREPARE-DOCUMENTATION):  (P.C. = 6)
(:METHOD SAGE:DEX-VIEWING-CONTEXT :DISPLAY-DEX-ITEM):  (P.C. = 12)
(:METHOD SAGE:DEX-VIEWING-CONTEXT :ADD-ITEM-TO-CONTEXT):  (P.C. = 20)
(:METHOD SAGE:DEX :CANDIDATE-ITEM-CLICK):  (P.C. = 31)
(:METHOD SAGE:DEX :COMMAND-BLIP):  (P.C. = 104)
(:METHOD SAGE:DEX :COMMAND-LOOP):  (P.C. = 47)<<Error printing function name>>
(:METHOD SAGE:DEX :TOPLEVEL):  (P.C. = 255)<<Error printing function name>>
SAGE:DEX-TOPLEVEL:  (P.C. = 4)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
 4-Apr-85 11:57:16-EST,2843;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 4 Apr 85 11:57-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 208905; Thu 4-Apr-85 11:55:01-EST
Date: Thursday, 4 April 1985, 11:53-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: FUNCTION-1F Takes forever
To: jcma at MIT-MC, BUG-LISPM at OZ
In-Reply-To: <850404102536.7.JCMA@MORRISON.MIT.EDU>
References: <850404102333.6.JCMA@MORRISON.MIT.EDU>,
            <850404102536.7.JCMA@MORRISON.MIT.EDU>
Message-ID: <850404115318.4.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Thursday, 4 April 1985, 10:25-EST
    From: jcma@MIT-MC

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.7,
    microcode TMC5-MIC 319, FEP 22, on Lisp Machine James Morrison:

    I just did this and it took about 5 minutes!  And it was only trying to show
    me near by lisp machines!  All of the time was soaked up in repeatedly
    contacting the namespace server, in this case AP6.

    If we put in metering to determine the amount of time researchers at MIT spend
    waiting for namespace lossage and charged somebody for the lost time according
    standard consulting rates, somebody would be very broke!

Does that mean we get to charge customers for time spent answering bug
reports?

    The point is just that the namespace system is still the major productivity
    loss in these lisp machines.  And the bug is still too much interaction with
    the namespace servers (not to mention connecting all over the universe).

At least we haven't seen any complaints that the Release 6 namespace
system is functionaly broken... yet.  What your message is implying is
that the current problem is strictly a performance one.  It would help
if you were able to c-m-Suspend during one of the connects and send a
backtrace.  That would probably give us enough information to ask more
specific and relevent questions.

Do you still hack some of the magic namespace variables in your init
file?  Maybe AISite 7 does?  Maybe you should unhack them and see if
things get better.  Also note that MIT is a very large site, which may
lead to the conclusion that the namespace system currently doesn't scale
up well. On the other hand, SCRC is also a large site.  I just did a
FUNCTION-1-F for the first time this session it took 10 seconds before
it started connecting to hosts to get the information.  My world is
    In Symbolics 3600 Release 6.0, System 271.23, microcode TMC5-MIC 322,
    FEP 119, SYSOUT version of DISK-SAVE,
which is, in some ways, more vanilla than what most people around here
use.

    On the bright side, parsing hosts in zmail seems to be doing much better.

    p.s.  There were 20 connects to AP6 to send this message!  Note that there is
    only one host mentioned.
 4-Apr-85 12:20:08-EST,3842;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 4 Apr 85 12:19-EST
Received: from SCRC-CROW by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 208925; Thu 4-Apr-85 12:16:44-EST
Date: Thursday, 4 April 1985, 12:17-EST
From: Robert W. Kerns <RWK at SCRC-YUKON>
Subject: make system did not create a new dir as it thought it had.
To: Daniel Weise <DANIEL at MIT-MC>
cc: BUG-LISPM at OZ
In-Reply-To: <850403154557.1.DANIEL@SID.MIT.EDU>
Message-ID: <850404121734.2.RWK@CROW.SCRC.Symbolics.COM>

    Date: Wednesday, 3 April 1985, 15:45-EST
    From: Daniel Weise <DANIEL at MIT-MC>

    In Symbolics 3670 Release 6.0, IP-TCP 29.0, AISite 7.6,
    microcode TMC5-IO4-MIC 319, FEP 22, on Lisp Machine Sid Vicious:

    I am doing (make-system 'daedalus :recompile) for the first time under
    rel 6.  Rel 6 appears to have a different patch dir methodology than
    earlier systems.  
Yes, quite true, and documented.  Does MIT have the release notes?
Failing that, do you have the documentation online?  If not, I'm sure
you'll be getting them soon, but perhaps I can give enough info in this
message to tide you over.

		      When it went to increment the major patch number it
    said it was creating a new directory on oz. (I had a bug at that time
    and  I had to change the max sub dirs of <dpl.mit.patch> from 0.) I
    didn't check what dir it thought it created, there are no new ones there.
    At any rate, now it can't find <dpl.mit.patch.tidaed-1>.  I am going to
    hand create it and see what happens.

That's the right thing.

    Second bug: you will notice it says that it is trying to write
    DPL: PATCH; TIDAED-1.PATCH-DIR.NEWEST.  This is bogus, DPL:PATCH;
    is <DPL.MIT.PATCH> but it is trying to write <DPL.MIT.PATCH.TIDAED>

[Actually, from the backtrace, that's <DPL.MIT.PATCH.TIDAED-1> that it's
trying to write.  That doesn't matter to your question, though].

DPL:PATCH;TIDAED-*.PATCH-DIR.* maps to
OZ:OZ:<DLP.MIT.PATCH.TIDAED-*>TIDAED-*.PATCH-DIR.*

roughly speaking.  This additional translation is added automatically
by DEFSYSTEM.  Actually, this is a "translation rule", and it is a bit
more complex than this.  For one thing, it is supposed to look to see
if you have something chosen with the OLD naming scheme, and use that
if that was already in use.  Unless you just added the TIDAED short name
for "TECHNOLOGY-INDEPENDENT-DAEDALUS", I would guess that we blew some
case of that for TOPS-20.

The main reason for this translation rule, though, is so that you can
refer to a patch file as DPL:PATCH;TIDAED-1-15.LISP without worrying
which system it's on, and knowing what hairy technique is used to map
it into a VMS or UNIX filename.  The logical pathname is always the
same, but the physical varies according to the target host.  Further,
since patch filenames are no longer physical filenames, the remembered
ones in worlds can be used at new sites, for such things as m-.

This is all part of making software easier to transport between
sites.

The reason patch files now live in subdirectories is that there
can easily be far more patch files than source files, and can become
a major inconvenience.  This change makes it much easier (and faster)
to list the just sources, or the patches for a single system.

Sorry for any inconvenience this may have caused you in the transition.

    Daniel

    >>Error: No such directory name
	     For DPL: PATCH; TIDAED-1.PATCH-DIR.NEWEST

    FS:OPEN-CHAOS:  (P.C. = 674)
       Arg 0 (ACCESS-PATH): #<TOPS20-QFILE-ACCESS-PATH OZ using QFILE 30522743>
       Arg 1 (REAL-PATHNAME): #<TOPS20-PATHNAME "OZ:PS:<DPL.MIT.PATCH.TIDAED-1>TIDAED-1.PATCH-DIR">
       Arg 2: #<LOGICAL-PATHNAME "DPL: PATCH; TIDAED-1.PATCH-DIR.NEWEST">
       Arg 3 (OPTIONS): (:DIRECTION :OUTPUT)
 4-Apr-85 12:40:22-EST,5577;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 4 Apr 85 12:40-EST
Received: from SCRC-CROW by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 208942; Thu 4-Apr-85 12:34:27-EST
Date: Thursday, 4 April 1985, 12:35-EST
From: Robert W. Kerns <RWK at SCRC-YUKON>
Subject: directories make-system isn't creating.
To: Daniel Weise <DANIEL at MIT-MC>
cc: BUG-LISPM at OZ
In-Reply-To: <850403160140.2.DANIEL@SID.MIT.EDU>
Message-ID: <850404123510.3.RWK@CROW.SCRC.Symbolics.COM>

    Date: Wednesday, 3 April 1985, 16:01-EST
    From: Daniel Weise <DANIEL at MIT-MC>

    In Symbolics 3670 Release 6.0, IP-TCP 29.0, AISite 7.6,
    microcode TMC5-IO4-MIC 319, FEP 22, on Lisp Machine Sid Vicious:

    This time I caught it in the act.  It definitely said
    (and I quote): "Created OZ:PS:<DPL.MIT.PATCH.DAED-1>."
    and the next it did was bomb out like this.  Checking
    OZ indicates the dir is not there. (although <dpl.mit.patch>DAED.SYSTEM-DIR.1
    is there.)

Is this before or after you added the subdirectory quota to
that directory?  Did it get an error while trying to create
the directory?  I note that the directory is there now.
Did you create it by hand?

If you got an error trying to create the directory, and then
continued by hand, this is just the same as your other report.
But if it is still happening, now that you should be able
to create subdirectories OK, it would seem to be a file server
bug.

    >>Error: No such directory name
	     For DPL: PATCH; DAED-1.PATCH-DIR.NEWEST
    While in the function (:METHOD FS:HOST-UNIT :COMMAND)  FS:OPEN-CHAOS  (:METHOD FS:QFILE-ACCESS-PATH :OPEN)

    (:METHOD FS:HOST-UNIT :COMMAND):  (P.C. = 236)
       Arg 0 (SELF): #<HOST-UNIT 30522754>
       Arg 1 (SELF-MAPPING-TABLE): FS:HOST-UNIT
       Arg 2 (OPERATION): :COMMAND
       Arg 3 (MARK-P): NIL
       Arg 4 (STREAM-OR-HANDLE): (:CREATE "O2757")
       Local 4 (STREAM-OR-HANDLE): "O2757"
       Arg 5 (SIMPLE-P): NIL
       Arg 6 (WHOSTATE): "Open"
       Rest arg (COMMANDS): ("OPEN " :WRITE " " :CHARACTER "" "" "" "" "" "" ...)
       Local 8 (HANDLE): "O2757"
       Local 9 (STREAM): NIL
       Local 10 (PKT): #<Chaos Packet 1703040>
       Local 11 (SUCCESS): NIL
       Local 12 (STRING): "O2757 ERROR DNF F No such directory name"
       Local 13 (TRANSACTION-ID): "T2825"
       Local 14 (CREATE-P): T
       Local 15 (CONDITION): NIL
       Local 16: T
       Local 17: #<CASE-HANDLER 120711625>
       Local 18: NIL
       Local 19: (#<CASE-HANDLER 120711625>)

    FS:OPEN-CHAOS:  (P.C. = 674)
       Arg 0 (ACCESS-PATH): #<TOPS20-QFILE-ACCESS-PATH OZ using QFILE 30522743>
       Arg 1 (REAL-PATHNAME): #<TOPS20-PATHNAME "OZ:PS:<DPL.MIT.PATCH.DAED-1>DAED-1.PATCH-DIR">
       Arg 2: #<LOGICAL-PATHNAME "DPL: PATCH; DAED-1.PATCH-DIR.NEWEST">
       Arg 3 (OPTIONS): (:DIRECTION :OUTPUT)

    (:METHOD FS:QFILE-ACCESS-PATH :OPEN):  (P.C. = 7)
       Arg 0 (SELF): #<TOPS20-QFILE-ACCESS-PATH OZ using QFILE 30522743>
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:QFILE-ACCESS-PATH -- 4. IV's, 0. FL's 121666243>
       Arg 2 (OPERATION): :OPEN
       Arg 3 (REAL-PATHNAME): #<TOPS20-PATHNAME "OZ:PS:<DPL.MIT.PATCH.DAED-1>DAED-1.PATCH-DIR">
       Arg 4 (PATHNAME): #<LOGICAL-PATHNAME "DPL: PATCH; DAED-1.PATCH-DIR.NEWEST">
       Rest arg (OPTIONS): (:DIRECTION :OUTPUT)

    (:METHOD FS:ACTIVE-PATHNAME-MIXIN :OPEN):  (P.C. = 14)
       Arg 0 (SELF): #<TOPS20-PATHNAME "OZ:PS:<DPL.MIT.PATCH.DAED-1>DAED-1.PATCH-DIR">
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:ACTIVE-PATHNAME-MIXIN -- 1. IV's, 0. FL's 105211451>
       Arg 2 (OPERATION): :OPEN
       Arg 3 (PATHNAME): #<LOGICAL-PATHNAME "DPL: PATCH; DAED-1.PATCH-DIR.NEWEST">
       Rest arg (OPTIONS): (:DIRECTION :OUTPUT)

    (:DEFUN-METHOD FS:LOGICAL-PATHNAME-PASS-ON):  (P.C. = 10)
       Arg 0 (SELF): #<LOGICAL-PATHNAME "DPL: PATCH; DAED-1.PATCH-DIR.NEWEST">
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:LOGICAL-PATHNAME -- 8. IV's, 3. FL's 104206646>
       Arg 2 (MESSAGE): :OPEN
       Rest arg (REST): (#<LOGICAL-PATHNAME "DPL: PATCH; DAED-1.PATCH-DIR.NEWEST"> :DIRECTION :OUTPUT)

    (:METHOD FS:LOGICAL-PATHNAME :OPEN):  (P.C. = 10)
       Arg 0 (SELF): #<LOGICAL-PATHNAME "DPL: PATCH; DAED-1.PATCH-DIR.NEWEST">
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:LOGICAL-PATHNAME -- 8. IV's, 3. FL's 104206646>
       Arg 2 (OPERATION): :OPEN
       Rest arg (.ARGS.): (#<LOGICAL-PATHNAME "DPL: PATCH; DAED-1.PATCH-DIR.NEWEST"> :DIRECTION :OUTPUT)

    FS:COMMON-LISP-OPEN:  (P.C. = 450)
       Arg 0 (PATHNAME): #<LOGICAL-PATHNAME "DPL: PATCH; DAED-1.PATCH-DIR.NEWEST">
       Arg 1 (KEYWORD-ARGS): (:DIRECTION :OUTPUT)

    OPEN:  (P.C. = 257)
       Arg 0 (PATHNAME): #<LOGICAL-PATHNAME "DPL: PATCH; DAED-1.PATCH-DIR.NEWEST">
       Rest arg (KEYWORD-ARGS): (:DIRECTION :OUTPUT)

    Rest of stack:
    SI:WRITE-PATCH-DIRECTORY:  (P.C. = 72)
    SI:INCREMENT-PATCH-SYSTEM-MAJOR-VERSION:  (P.C. = 57)
    SI:INCREMENT-COMPILED-VERSION-1:  (P.C. = 21)
    SI:DO-FILE-TRANSFORMATIONS:  (P.C. = 244)
    SI:PERFORM-TRANSFORMATIONS:  (P.C. = 167)
    SI:PERFORM-TRANSFORMATIONS:  (P.C. = 64)
    MAKE-SYSTEM:  (P.C. = 241)
    SI:*EVAL:  (P.C. = 403)
    (:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0):  (P.C. = 152)
    TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
    SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
    SI:LISP-COMMAND-LOOP:  (P.C. = 67)
    SI:LISP-TOP-LEVEL1:  (P.C. = 5)
    SI:LISP-TOP-LEVEL:  (P.C. = 7)
 4-Apr-85 12:47:16-EST,2037;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 4 Apr 85 12:47-EST
Received: from SCRC-HARLEM by MIT-MC via Chaosnet; 4 APR 85  12:40:02 EST
Date: Thu, 4 Apr 85 12:39 EST
From: Joseph R Goldstone <joseph@SCRC-QUABBIN.ARPA>
Subject: Bug in Document Examiner Host or Directory Name
To: ALLARD@OZ.MIT.EDU, henry@OZ.MIT.EDU, BUG-LISPM@MIT-MC.ARPA
In-Reply-To: <"850404113638.1.ALLARD@APIARY-6"@APIARY-9.MIT.EDU>
Message-ID: <850404123936.2.JOSEPH@HARLEM.SCRC.Symbolics.COM>

    Date: Thu, 4 Apr 85 11:36 EST
    From:  <ALLARD@OZ>

    I entered the examiner, clecked left on Find, typed lambda, clicked
    left on "Clm: Lambda-expressions" and got this error.  It's too bad,
    because when its working this is a wonderful tool for avoiding
    searching through the 8 volumes of your verbose manual.  

    In Symbolics 3600 Release 6.0 Beta IIc, microcode TMC5-MIC 315, FEP 18, on APIARY-9:
                                  ^
                                  |
>---------------------------------+

    >>Error: The logical pathname SYS: DOC; PATCH; is not defined
    While in the function (:METHOD FS:LOGICAL-HOST :TRANSLATE-RAW)
                         (:METHOD FS:LOGICAL-HOST :TRANSLATE)
                         (:METHOD FS:LOGICAL-PATHNAME :TRANSLATED-PATHNAME)

Thanks for the report.  The official (i.e. non-Beta-test) Release 6.0 world
knows how to correctly translate all the logical pathnames used by the
document examiner.  You should get a copy of this world from someone who is
already using it.

I'm not sure who to recommend when it comes to finding someone who is already
using the MIT Release 6.0 world.  You might try someone in your own group
first; maybe Henry Lieberman has this world already.  If he doesn't, you
could try someone on the 7th floor.  Chris Lindblad has traditionally been
the person on that floor who does competent installations; you should be
careful, however, that he hasn't made any 7th-floor-specific customizations
to his world before you copy it.
 4-Apr-85 13:43:32-EST,1269;000000000000
Received: from MIT-LENNON by MIT-OZ via Chaosnet; 4 Apr 85 13:43-EST
Date: Thursday, 4 April 1985, 13:41-EST
From: Chris Lindblad <cjl at OZ>
Subject: FUNCTION-1F Takes forever
To: DCP at SCRC-QUABBIN, jcma at MIT-MC, BUG-LISPM at OZ
In-Reply-To: <850404115318.4.NFEP@NEPONSET.SCRC.Symbolics.COM>
Message-ID: <850404134128.1.CJL@LENNON.MIT.EDU>

    Date: Thursday, 4 April 1985, 11:53-EST
    From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>

    Do you still hack some of the magic namespace variables in your init
    file?  Maybe AISite 7 does?  Maybe you should unhack them and see if
    things get better.  Also note that MIT is a very large site, which may
    lead to the conclusion that the namespace system currently doesn't scale
    up well. On the other hand, SCRC is also a large site. 

AISite doesn't hack any namespace stuff, and the ai site has only about
50 lispms in it, but the namespace objects for every lispm here have
been modified since that world load was saved (giving them internet
addresses).  Perhaps Function-1-F took so long because it was getting
the new versions of these namespace objects. It would do that if it
checked the validity of all the local lispm namespace objects before
fingering them.

 4-Apr-85 13:48:02-EST,6248;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 4 Apr 85 13:47-EST
Date: Thu, 4 Apr 85 13:44:35 EST
From: Daniel Weise <DANIEL@MIT-MC>
Subject:  directories make-system isn't creating.
To: RWK@SCRC-YUKON
cc: BUG-LISPM@MIT-OZ
In-reply-to: Msg of 4 Apr 1985 12:35-EST from Robert W. Kerns <RWK at SCRC-YUKON>

    Date: Thursday, 4 April 1985, 12:35-EST
    From: Robert W. Kerns <RWK at SCRC-YUKON>
    To:   Daniel Weise <DANIEL>
    cc:   BUG-LISPM at OZ
    Re:   directories make-system isn't creating.

        Date: Wednesday, 3 April 1985, 16:01-EST
        From: Daniel Weise <DANIEL at MIT-MC>

        In Symbolics 3670 Release 6.0, IP-TCP 29.0, AISite 7.6,
        microcode TMC5-IO4-MIC 319, FEP 22, on Lisp Machine Sid Vicious:

        This time I caught it in the act.  It definitely said
        (and I quote): "Created OZ:PS:<DPL.MIT.PATCH.DAED-1>."
        and the next it did was bomb out like this.  Checking
        OZ indicates the dir is not there. (although <dpl.mit.patch>DAED.SYSTEM-DIR.1
        is there.)

    Is this before or after you added the subdirectory quota to
    that directory?  
After.
    Did it get an error while trying to create
    the directory?  
Not at all.
    I note that the directory is there now.
    Did you create it by hand?
Yes.
    If you got an error trying to create the directory, and then
    continued by hand, this is just the same as your other report.
Yes, I just wanted to say that it really didn't create the dir
it thought it had (I was't 100% sure before.)
    But if it is still happening, now that you should be able
    to create subdirectories OK, it would seem to be a file server
    bug.
It is most probably a file server bug.  Is there someone at MIT responsible
for such things that I should forward this to?
        >>Error: No such directory name
    	     For DPL: PATCH; DAED-1.PATCH-DIR.NEWEST
        While in the function (:METHOD FS:HOST-UNIT :COMMAND)  FS:OPEN-CHAOS  (:METHOD FS:QFILE-ACCESS-PATH :OPEN)

        (:METHOD FS:HOST-UNIT :COMMAND):  (P.C. = 236)
           Arg 0 (SELF): #<HOST-UNIT 30522754>
           Arg 1 (SELF-MAPPING-TABLE): FS:HOST-UNIT
           Arg 2 (OPERATION): :COMMAND
           Arg 3 (MARK-P): NIL
           Arg 4 (STREAM-OR-HANDLE): (:CREATE "O2757")
           Local 4 (STREAM-OR-HANDLE): "O2757"
           Arg 5 (SIMPLE-P): NIL
           Arg 6 (WHOSTATE): "Open"
           Rest arg (COMMANDS): ("OPEN " :WRITE " " :CHARACTER "" "" "" "" "" "" ...)
           Local 8 (HANDLE): "O2757"
           Local 9 (STREAM): NIL
           Local 10 (PKT): #<Chaos Packet 1703040>
           Local 11 (SUCCESS): NIL
           Local 12 (STRING): "O2757 ERROR DNF F No such directory name"
           Local 13 (TRANSACTION-ID): "T2825"
           Local 14 (CREATE-P): T
           Local 15 (CONDITION): NIL
           Local 16: T
           Local 17: #<CASE-HANDLER 120711625>
           Local 18: NIL
           Local 19: (#<CASE-HANDLER 120711625>)

        FS:OPEN-CHAOS:  (P.C. = 674)
           Arg 0 (ACCESS-PATH): #<TOPS20-QFILE-ACCESS-PATH OZ using QFILE 30522743>
           Arg 1 (REAL-PATHNAME): #<TOPS20-PATHNAME "OZ:PS:<DPL.MIT.PATCH.DAED-1>DAED-1.PATCH-DIR">
           Arg 2: #<LOGICAL-PATHNAME "DPL: PATCH; DAED-1.PATCH-DIR.NEWEST">
           Arg 3 (OPTIONS): (:DIRECTION :OUTPUT)

        (:METHOD FS:QFILE-ACCESS-PATH :OPEN):  (P.C. = 7)
           Arg 0 (SELF): #<TOPS20-QFILE-ACCESS-PATH OZ using QFILE 30522743>
           Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:QFILE-ACCESS-PATH -- 4. IV's, 0. FL's 121666243>
           Arg 2 (OPERATION): :OPEN
           Arg 3 (REAL-PATHNAME): #<TOPS20-PATHNAME "OZ:PS:<DPL.MIT.PATCH.DAED-1>DAED-1.PATCH-DIR">
           Arg 4 (PATHNAME): #<LOGICAL-PATHNAME "DPL: PATCH; DAED-1.PATCH-DIR.NEWEST">
           Rest arg (OPTIONS): (:DIRECTION :OUTPUT)

        (:METHOD FS:ACTIVE-PATHNAME-MIXIN :OPEN):  (P.C. = 14)
           Arg 0 (SELF): #<TOPS20-PATHNAME "OZ:PS:<DPL.MIT.PATCH.DAED-1>DAED-1.PATCH-DIR">
           Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:ACTIVE-PATHNAME-MIXIN -- 1. IV's, 0. FL's 105211451>
           Arg 2 (OPERATION): :OPEN
           Arg 3 (PATHNAME): #<LOGICAL-PATHNAME "DPL: PATCH; DAED-1.PATCH-DIR.NEWEST">
           Rest arg (OPTIONS): (:DIRECTION :OUTPUT)

        (:DEFUN-METHOD FS:LOGICAL-PATHNAME-PASS-ON):  (P.C. = 10)
           Arg 0 (SELF): #<LOGICAL-PATHNAME "DPL: PATCH; DAED-1.PATCH-DIR.NEWEST">
           Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:LOGICAL-PATHNAME -- 8. IV's, 3. FL's 104206646>
           Arg 2 (MESSAGE): :OPEN
           Rest arg (REST): (#<LOGICAL-PATHNAME "DPL: PATCH; DAED-1.PATCH-DIR.NEWEST"> :DIRECTION :OUTPUT)

        (:METHOD FS:LOGICAL-PATHNAME :OPEN):  (P.C. = 10)
           Arg 0 (SELF): #<LOGICAL-PATHNAME "DPL: PATCH; DAED-1.PATCH-DIR.NEWEST">
           Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:LOGICAL-PATHNAME -- 8. IV's, 3. FL's 104206646>
           Arg 2 (OPERATION): :OPEN
           Rest arg (.ARGS.): (#<LOGICAL-PATHNAME "DPL: PATCH; DAED-1.PATCH-DIR.NEWEST"> :DIRECTION :OUTPUT)

        FS:COMMON-LISP-OPEN:  (P.C. = 450)
           Arg 0 (PATHNAME): #<LOGICAL-PATHNAME "DPL: PATCH; DAED-1.PATCH-DIR.NEWEST">
           Arg 1 (KEYWORD-ARGS): (:DIRECTION :OUTPUT)

        OPEN:  (P.C. = 257)
           Arg 0 (PATHNAME): #<LOGICAL-PATHNAME "DPL: PATCH; DAED-1.PATCH-DIR.NEWEST">
           Rest arg (KEYWORD-ARGS): (:DIRECTION :OUTPUT)

        Rest of stack:
        SI:WRITE-PATCH-DIRECTORY:  (P.C. = 72)
        SI:INCREMENT-PATCH-SYSTEM-MAJOR-VERSION:  (P.C. = 57)
        SI:INCREMENT-COMPILED-VERSION-1:  (P.C. = 21)
        SI:DO-FILE-TRANSFORMATIONS:  (P.C. = 244)
        SI:PERFORM-TRANSFORMATIONS:  (P.C. = 167)
        SI:PERFORM-TRANSFORMATIONS:  (P.C. = 64)
        MAKE-SYSTEM:  (P.C. = 241)
        SI:*EVAL:  (P.C. = 403)
        (:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0):  (P.C. = 152)
        TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
        SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
        SI:LISP-COMMAND-LOOP:  (P.C. = 67)
        SI:LISP-TOP-LEVEL1:  (P.C. = 5)
        SI:LISP-TOP-LEVEL:  (P.C. = 7)
 4-Apr-85 13:50:00-EST,479;000000000000
Received: from MIT-LENNON by MIT-OZ via Chaosnet; 4 Apr 85 13:49-EST
Date: Thursday, 4 April 1985, 13:47-EST
From: Chris Lindblad <cjl at OZ>
Subject: CP enhancement
To: BUG-LISPM at OZ
Message-ID: <850404134731.2.CJL@LENNON.MIT.EDU>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.8,
microcode TMC5-MIC 319, on Lisp Machine John Lennon:

It would be nice for the Show Users cp command to have a keworded argument
:site so I can say "Show Users All :site mit".
 4-Apr-85 13:58:06-EST,2205;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 4 Apr 85 13:56-EST
Date: Thu, 4 Apr 85 13:53:19 EST
From: Daniel Weise <DANIEL@MIT-MC>
Subject:  new patch dirs for systems.
To: RWK@SCRC-YUKON
cc: BUG-LISPM@MIT-OZ
In-reply-to: Msg of 4 Apr 1985 12:17-EST from Robert W. Kerns <RWK at SCRC-YUKON>

    Date: Thursday, 4 April 1985, 12:17-EST
    From: Robert W. Kerns <RWK at SCRC-YUKON>
    To:   Daniel Weise <DANIEL>
    cc:   BUG-LISPM at OZ
    Re:   make system did not create a new dir as it thought it had.

        Date: Wednesday, 3 April 1985, 15:45-EST
        From: Daniel Weise <DANIEL at MIT-MC>

        In Symbolics 3670 Release 6.0, IP-TCP 29.0, AISite 7.6,
        microcode TMC5-IO4-MIC 319, FEP 22, on Lisp Machine Sid Vicious:

        I am doing (make-system 'daedalus :recompile) for the first time under
        rel 6.  Rel 6 appears to have a different patch dir methodology than
        earlier systems.  
    Yes, quite true, and documented.  Does MIT have the release notes?

Not hardcopy yet.  And using the documentation system for reading things
(rather than just looking up small things, ie, as a reference system)
is a bit of a pain.  For example, I still haven't figured how to read the
release 6 notes without FINDing ...RELEASE... and then choosing an appropriate
candididate.  (Once I remember the name of the section things might be easier.)

    This is all part of making software easier to transport between
    sites.

    The reason patch files now live in subdirectories is that there
    can easily be far more patch files than source files, and can become
    a major inconvenience.  This change makes it much easier (and faster)
    to list the just sources, or the patches for a single system.

    Sorry for any inconvenience this may have caused you in the transition.

The major inconvenience this has caused is having to hand patch the system-dir
to get the major release number right.  (There may be a way to name a version
to the correct number with make-system, but even so when creating a new
patch dir the way it did it should have checked for an old one first.)  This
is pretty minor, I admit.

Daniel
 4-Apr-85 14:59:33-EST,1325;000000000000
Mail-From: CJL created at  4-Apr-85 14:58:20
Date: Thu, 4 Apr 1985  14:58 EST
Message-ID: <CJL.12100523045.BABYL@MIT-OZ>
From: Chris Lindblad <CJL@MIT-OZ>
To:   bug-symbolics-hardware@MIT-OZ, bug-lispm@MIT-OZ
Subject: lennon still has problems after being "fixed"

Lennon frequently crashes after about 10 minutes of excercise with a
simple "Lisp stopped itself".  Show status gives:

FEP Lbus control: Use Uncorrected Data, Ignore Double ECC Error, Task 3 Dismiss
Sequencer error status: Microcode-halted
Sequencer miscellaneous status: TSK-STOP (sequencer-stopped), Errhalt-Sync
3600 program counters:
  Macro PC/ (Odd)23314
> OPC+0/46147	OPC+10/41122
  OPC+1/47367	OPC+11/47613
  OPC+2/50014	OPC+12/44006
  OPC+3/1300	OPC+13/40710
  OPC+4/40410	OPC+14/45015
  OPC+5/40414	OPC+15/45014
  OPC+6/40415	OPC+16/40410
  OPC+7/41341	OPC+17/53312

FEP debugger shows backtrace of
  si:load-flushc (pc = 51)
  si:storage-background-fun (pc = 13)
  si:wired-wait
  si:wait-for-page-idle
  si:page-fault-handler
  si:page-fault

Running 6.0.

Lennon has been broken for about a month, and was claimed to be fixed
today.  Our field service people seem bewildered as to what is wrong
with the machine (theyve so far tried 3 backplanes), which is why I'm
bringing this up in this forum. Any ideas?
 4-Apr-85 15:28:09-EST,14906;000000000000
Received: from MIT-ZERMATT by MIT-OZ via Chaosnet; 4 Apr 85 15:27-EST
Date: Thursday, 4 April 1985, 15:26-EST
From: Steve Seda <seda at VAX>
Subject: RTAPE to a VAX/UNIX
To: BUG-LISPM at OZ
Message-ID: <850404152600.6.SEDA@ZERMATT.MIT.EDU>

In Symbolics 3670 Release 6.0, IP-TCP 29.0, MLSite 2.1, Mailer 43.0,
microcode TMC5-IO4-MIC 319, on Lisp Machine Zermatt:

Perhaps this problem is due to old RTAPE software on MIT-VAX, but ...

We were doing a complete dump (from Zermatt to a reel-to-reel tape drive on MIT-VAX (which
runs 4.2 Berkeley Unix)) that took multiple tapes.  (Notice:  This is first time we have had
to use multiple tapes for a dump.)  The first tape filled up correctly...
The dialog looked something like this:

...
Beginning pass...
End of Tape ZERF001A encountered...
Last file dumped was ...
1264 files dumped so far (reel ZERF001A)
Setting backup dates...
Creating ... zerf001a.directory.1.
Is this specification for the tape drive to use still right?
  VAX: /dev/rmt12, den=1600 (Y or N) Yes.
Please enter name of the second tape for Backup dump of 4/04/85 13:07:56:  ZERF001B
Type any character when ready:

>>Error: Cannot mount reel ZERF001B: Drive can only be single digits 0-3?  <see
TAPE:STATUS-STRING below for rest of the error message>

And that is what happened...  We were not able to continue since we could not mount the second
reel.

The output stream looks like:

#<REMOTE-TAPE-IO-STREAM 57261315>, an object of flavor TAPE:REMOTE-TAPE-IO-STREAM,
 has instance variable values:
 TAPE:RTI-ERROR-MESSAGE:                NIL
 TAPE:TARGET-STREAM:                    #<RECORD-STREAM-CHARACTER-IO-STREAM 57261416>
 TAPE:RTI-GOT-BUFFER:                   NIL
 TAPE:RTI-STATE:                        :NO-DATA-YET
 TAPE:INPUT-STREAM-MODE:                T
 TAPE:READ-RUNNING:                     NIL
 TAPE:RTI-RECLEN:                       unbound
 TAPE:RTI-START:                        unbound
 TAPE:RTI-LIMIT:                        unbound
 TAPE:TRACING:                          NIL
 TAPE:PAD-CHAR:                         0
 TAPE:MINIMUM-RECORD-LENGTH:            200
 TAPE:MINIMUM-RECORD-LENGTH-GRANULARITY:   4
 TAPE:RTO-INDEX:                        unbound
 TAPE:PADBUF:                           NIL
 TAPE:RTO-BUF:                          NIL
 TAPE:NO-READ-AHEAD:                    NIL
 TAPE:NO-BOT-PROMPT:                    T
 TAPE:REEL:                             "ZERF001B"
 TAPE:BUFFER-SIZE:                      10000
 TAPE:RECORD-LENGTH:                    10000
 TAPE:NOREWIND:                         T
 TAPE:DENSITY:                          3100
 OPEN:                                  NIL
 STATUS:                                #<RTAPE-STATUS 57261443>
 TAPE:STATUS-STRING:                    "Drive can only be single digits 0-3: =P^ZAZPPPYPYXU	zQYhBYPYo^'"
 TAPE:UIDG:                             3
 TAPE:DIRECTION:                        :BIDIRECTIONAL
 TAPE:UNIT:                             "//dev//rmt12"
 TAPE:HOST:                             #<UNIX-HOST VAX 6240346>
 TAPE:SPEC:                             NIL
 SI:INPUT-POINTER-BASE:                 0
 SI:STREAM-INPUT-LOWER-LIMIT:           0
 SI:STREAM-INPUT-BUFFER:                NIL
 SI:STREAM-INPUT-INDEX:                 NIL
 SI:STREAM-INPUT-LIMIT:                 unbound
 SI:STREAM-OUTPUT-BUFFER:               NIL
 SI:STREAM-OUTPUT-INDEX:                NIL
 SI:STREAM-OUTPUT-LIMIT:                unbound


>>Error: Cannot mount reel ZERF001B: Drive can only be single digits 0-3: =P^ZAZPPPYPYXU	zQYhBYPYo^'
While in the function (:DEFUN-METHOD TAPE:REMOTE-TAPE-MIXIN-MOUNT)  (:METHOD TAPE:REMOTE-TAPE-MIXIN :AFTER :INIT)  (:INTERNAL (:METHOD TAPE:REMOTE-TAPE-IO-STREAM :COMBINED :INIT) 0)

(:DEFUN-METHOD TAPE:REMOTE-TAPE-MIXIN-MOUNT):  (P.C. = 32)  (from Z:>r6>lmtape>rtape-user)
   Arg 0 (SELF): #<REMOTE-TAPE-IO-STREAM 57261315>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TAPE:REMOTE-TAPE-MIXIN -- 16. IV's, 0. FL's 143011036>

(:METHOD TAPE:REMOTE-TAPE-MIXIN :AFTER :INIT):  (P.C. = 70)
   Arg 0 (SELF): #<REMOTE-TAPE-IO-STREAM 57261315>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TAPE:REMOTE-TAPE-MIXIN -- 16. IV's, 0. FL's 143011036>
   Arg 2 (OPERATION): :INIT
   Rest arg (IGNORE): (#<DTP-LOCATIVE 44141006>)

(:INTERNAL (:METHOD TAPE:REMOTE-TAPE-IO-STREAM :COMBINED :INIT) 0):  (P.C. = 30)
   Arg 0 (SELF): #<REMOTE-TAPE-IO-STREAM 57261315>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TAPE:REMOTE-TAPE-IO-STREAM -- 3. IV's, 9. FL's 143012046>
   Arg 2 (.OPERATION.): :INIT
   Rest arg (.DAEMON-CALLER-ARGS.): (#<DTP-LOCATIVE 44141006>)

(:METHOD TAPE:REMOTE-TAPE-MIXIN :WHOPPER :INIT):  (P.C. = 23)
   Arg 0 (SELF): #<REMOTE-TAPE-IO-STREAM 57261315>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TAPE:REMOTE-TAPE-MIXIN -- 16. IV's, 0. FL's 143011036>
   Arg 2 (.WHOPPER-CONTINUATION.): #<DTP-COMPILED-FUNCTION (:INTERNAL (:METHOD TAPE:REMOTE-TAPE-IO-STREAM :COMBINED :INIT) 0) 50245422>
   Arg 3 (.OLD-SELF-MAPPING-TABLE.): #<Map to flavor TAPE:REMOTE-TAPE-IO-STREAM -- 3. IV's, 9. FL's 143012046>
   Arg 4 (.OPERATION.): :INIT
   Rest arg (ARGS): (#<DTP-LOCATIVE 44141006>)

(:METHOD TAPE:REMOTE-TAPE-IO-STREAM :COMBINED :INIT):  (P.C. = 13)
   Arg 0 (SELF): #<REMOTE-TAPE-IO-STREAM 57261315>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TAPE:REMOTE-TAPE-IO-STREAM -- 3. IV's, 9. FL's 143012046>
   Arg 2 (.OPERATION.): :INIT
   Rest arg (.DAEMON-CALLER-ARGS.): (#<DTP-LOCATIVE 44141006>)

INSTANTIATE-FLAVOR:  (P.C. = 445)
   Arg 0 (FLAVOR-NAME): TAPE:REMOTE-TAPE-IO-STREAM
   Arg 1 (INIT-PLIST): #<DTP-LOCATIVE 44141006>
   Arg 2 (SEND-INIT-MESSAGE-P): :MAYBE
   --Defaulted args:--
   Arg 3 (RETURN-UNHANDLED-KEYWORDS-P): NIL
   Arg 4 (AREA-TO-CONS-INSTANCE-IN): NIL

MAKE-INSTANCE:  (P.C. = 6)
   Arg 0 (FLAVOR-NAME): TAPE:REMOTE-TAPE-IO-STREAM
   Rest arg (INIT-OPTIONS): (:SERVICE-ACCESS-PATH #<SERVICE-ACCESS-PATH TAPE (RTAPE) -- VAX on CHAOS 51776747> :DIRECTION :BIDIRECTIONAL :UNIT "//dev//rmt12" :NO-READ-AHEAD NIL :PAD-CHAR NIL ...)

TAPE:INVOKE-SERVICE-TAPE-WITH-RTAPE:  (P.C. = 45)
   Arg 0 (PATH): #<SERVICE-ACCESS-PATH TAPE (RTAPE) -- VAX on CHAOS 51776747>

NET:INVOKE-SERVICE-ACCESS-PATH:  (P.C. = 75)
   Arg 0 (SERVICE-ACCESS-PATH): #<SERVICE-ACCESS-PATH TAPE (RTAPE) -- VAX on CHAOS 51776747>
   Arg 1 (SERVICE-ARGS): (:DIRECTION :BIDIRECTIONAL :UNIT "//dev//rmt12" :NO-READ-AHEAD NIL :PAD-CHAR NIL :BUFFER-SIZE NIL ...)

NET:INVOKE-SERVICE-ON-HOST:  (P.C. = 226)
   Arg 0 (SERVICE): :TAPE
   Arg 1 (HOST): #<UNIX-HOST VAX 6240346>
   Rest arg (SERVICE-ARGS): (:DIRECTION :BIDIRECTIONAL :UNIT "//dev//rmt12" :NO-READ-AHEAD NIL :PAD-CHAR NIL :BUFFER-SIZE NIL ...)

TAPE:MAKE-STREAM:  (P.C. = 504)
   Rest arg: (:SPEC #<TAPE-SPEC for VAX: /dev/rmt12, reel=ZERF001B, den=1600, reclen=4096, granularity=4, minrec=128 51776733> :LOCK-REASON "Local file system dumper" :DIRECTION :BIDIRECTIONAL :NO-BOT-PROMPT T :NOREWIND T)

LMFS:BACKUP-DUMP-TAPE-STREAM-GETTER:  (P.C. = 35)

LMFS:BACKUP-EOT-HANDLER:  (P.C. = 111)
   --Defaulted args:--
   Arg 0 (RECORD-TIMES-AND-HISTORIZE): T

LMFS:DUMP-LIST-OF-FILES:  (P.C. = 215)
   Arg 0 (FILES): ((#<LMFS-PATHNAME "Z:>r6>doc>site>site1.sab.4"> NIL NIL (#<LMFS-PATHNAME "Z:>r6>doc>site>site1.sab.4"> :PARTITION #<PARTITION FEP0:>LMFS.FILE.1 1034216> :VOLUME-NAME #<VOLUME DEFAULT 1036402> :LENGTH-IN-BLOCKS 5 :NOT-BACKED-UP T :REFERENCE-DATE ...)) (#<LMFS-PATHNAME "Z:>r6>doc>site>site1.sab.7"> NIL NIL (#<LMFS-PATHNAME "Z:>r6>doc>site>site1.sab.7"> :PARTITION #<PARTITION FEP0:>LMFS.FILE.1 1034216> :VOLUME-NAME #<VOLUME DEFAULT 1036402> :LENGTH-IN-BLOCKS 5 :NOT-BACKED-UP T :REFERENCE-DATE ...)) (#<LMFS-PATHNAME "Z:>r6>doc>site>site2.sab.4"> NIL NIL (#<LMFS-PATHNAME "Z:>r6>doc>site>site2.sab.4"> :PARTITION #<PARTITION FEP0:>LMFS.FILE.1 1034216> :VOLUME-NAME #<VOLUME DEFAULT 1036402> :LENGTH-IN-BLOCKS 4 :NOT-BACKED-UP T :REFERENCE-DATE ...)) (#<LMFS-PATHNAME "Z:>r6>doc>site>site2.sab.6"> NIL NIL (#<LMFS-PATHNAME "Z:>r6>doc>site>site2.sab.6"> :PARTITION #<PARTITION FEP0:>LMFS.FILE.1 1034216> :VOLUME-NAME #<VOLUME DEFAULT 1036402> :LENGTH-IN-BLOCKS 5 :NOT-BACKED-UP T :REFERENCE-DATE ...)) (#<LMFS-PATHNAME "Z:>r6>doc>site>site3.sab.4"> NIL NIL (#<LMFS-PATHNAME "Z:>r6>doc>site>site3.sab.4"> :PARTITION #<PARTITION FEP0:>LMFS.FILE.1 1034216> :VOLUME-NAME #<VOLUME DEFAULT 1036402> :LENGTH-IN-BLOCKS 5 :NOT-BACKED-UP T :REFERENCE-DATE ...)) (#<LMFS-PATHNAME "Z:>r6>doc>site>site3.sab.6"> NIL NIL (#<LMFS-PATHNAME "Z:>r6>doc>site>site3.sab.6"> :PARTITION #<PARTITION FEP0:>LMFS.FILE.1 1034216> :VOLUME-NAME #<VOLUME DEFAULT 1036402> :LENGTH-IN-BLOCKS 4 :NOT-BACKED-UP T :REFERENCE-DATE ...)) (#<LMFS-PATHNAME "Z:>r6>doc>site>site4.sab.6"> NIL NIL (#<LMFS-PATHNAME "Z:>r6>doc>site>site4.sab.6"> :PARTITION #<PARTITION FEP0:>LMFS.FILE.1 1034216> :VOLUME-NAME #<VOLUME DEFAULT 1036402> :LENGTH-IN-BLOCKS 4 :NOT-BACKED-UP T :REFERENCE-DATE ...)) (#<LMFS-PATHNAME "Z:>r6>doc>site>site4.sab.8"> NIL NIL (#<LMFS-PATHNAME "Z:>r6>doc>site>site4.sab.8"> :PARTITION #<PARTITION FEP0:>LMFS.FILE.1 1034216> :VOLUME-NAME #<VOLUME DEFAULT 1036402> :LENGTH-IN-BLOCKS 3 :NOT-BACKED-UP T :REFERENCE-DATE ...)) (#<LMFS-PATHNAME "Z:>r6>doc>site>site5.sab.6"> NIL NIL (#<LMFS-PATHNAME "Z:>r6>doc>site>site5.sab.6"> :PARTITION #<PARTITION FEP0:>LMFS.FILE.1 1034216> :VOLUME-NAME #<VOLUME DEFAULT 1036402> :LENGTH-IN-BLOCKS 5 :NOT-BACKED-UP T :REFERENCE-DATE ...)) (#<LMFS-PATHNAME "Z:>r6>doc>site>site5.sab.9"> NIL NIL (#<LMFS-PATHNAME "Z:>r6>doc>site>site5.sab.9"> :PARTITION #<PARTITION FEP0:>LMFS.FILE.1 1034216> :VOLUME-NAME #<VOLUME DEFAULT 1036402> :LENGTH-IN-BLOCKS 5 :NOT-BACKED-UP T :REFERENCE-DATE ...)) ...)
   Local 0 (FILES): ((#<LMFS-PATHNAME "Z:>r6>doc>site>site2.sab.6"> NIL NIL (#<LMFS-PATHNAME "Z:>r6>doc>site>site2.sab.6"> :PARTITION #<PARTITION FEP0:>LMFS.FILE.1 1034216> :VOLUME-NAME #<VOLUME DEFAULT 1036402> :LENGTH-IN-BLOCKS 5 :NOT-BACKED-UP T :REFERENCE-DATE ...)) (#<LMFS-PATHNAME "Z:>r6>doc>site>site3.sab.4"> NIL NIL (#<LMFS-PATHNAME "Z:>r6>doc>site>site3.sab.4"> :PARTITION #<PARTITION FEP0:>LMFS.FILE.1 1034216> :VOLUME-NAME #<VOLUME DEFAULT 1036402> :LENGTH-IN-BLOCKS 5 :NOT-BACKED-UP T :REFERENCE-DATE ...)) (#<LMFS-PATHNAME "Z:>r6>doc>site>site3.sab.6"> NIL NIL (#<LMFS-PATHNAME "Z:>r6>doc>site>site3.sab.6"> :PARTITION #<PARTITION FEP0:>LMFS.FILE.1 1034216> :VOLUME-NAME #<VOLUME DEFAULT 1036402> :LENGTH-IN-BLOCKS 4 :NOT-BACKED-UP T :REFERENCE-DATE ...)) (#<LMFS-PATHNAME "Z:>r6>doc>site>site4.sab.6"> NIL NIL (#<LMFS-PATHNAME "Z:>r6>doc>site>site4.sab.6"> :PARTITION #<PARTITION FEP0:>LMFS.FILE.1 1034216> :VOLUME-NAME #<VOLUME DEFAULT 1036402> :LENGTH-IN-BLOCKS 4 :NOT-BACKED-UP T :REFERENCE-DATE ...)) (#<LMFS-PATHNAME "Z:>r6>doc>site>site4.sab.8"> NIL NIL (#<LMFS-PATHNAME "Z:>r6>doc>site>site4.sab.8"> :PARTITION #<PARTITION FEP0:>LMFS.FILE.1 1034216> :VOLUME-NAME #<VOLUME DEFAULT 1036402> :LENGTH-IN-BLOCKS 3 :NOT-BACKED-UP T :REFERENCE-DATE ...)) (#<LMFS-PATHNAME "Z:>r6>doc>site>site5.sab.6"> NIL NIL (#<LMFS-PATHNAME "Z:>r6>doc>site>site5.sab.6"> :PARTITION #<PARTITION FEP0:>LMFS.FILE.1 1034216> :VOLUME-NAME #<VOLUME DEFAULT 1036402> :LENGTH-IN-BLOCKS 5 :NOT-BACKED-UP T :REFERENCE-DATE ...)) (#<LMFS-PATHNAME "Z:>r6>doc>site>site5.sab.9"> NIL NIL (#<LMFS-PATHNAME "Z:>r6>doc>site>site5.sab.9"> :PARTITION #<PARTITION FEP0:>LMFS.FILE.1 1034216> :VOLUME-NAME #<VOLUME DEFAULT 1036402> :LENGTH-IN-BLOCKS 5 :NOT-BACKED-UP T :REFERENCE-DATE ...)) (#<LMFS-PATHNAME "Z:>r6>doc>site>site6.sab.1"> NIL NIL (#<LMFS-PATHNAME "Z:>r6>doc>site>site6.sab.1"> :PARTITION #<PARTITION FEP0:>LMFS.FILE.1 1034216> :VOLUME-NAME #<VOLUME DEFAULT 1036402> :LENGTH-IN-BLOCKS 9 :NOT-BACKED-UP T :REFERENCE-DATE ...)) (#<LMFS-PATHNAME "Z:>r6>doc>site>site7.sab.1"> NIL NIL (#<LMFS-PATHNAME "Z:>r6>doc>site>site7.sab.1"> :PARTITION #<PARTITION FEP0:>LMFS.FILE.1 1034216> :VOLUME-NAME #<VOLUME DEFAULT 1036402> :LENGTH-IN-BLOCKS 4 :NOT-BACKED-UP T :REFERENCE-DATE ...)))
   Arg 1 (DESCRIPTION): ">R6>doc>site>*.*.*"

LMFS:DUMP-RECURSE:  (P.C. = 132)
   Arg 0 (WILDPATH): #<LMFS-PATHNAME "Z:>R6>doc>site>**>*.*.*">
   Local 0 (WILDPATH): #<LMFS-PATHNAME "Z:>R6>doc>site>*.*.*">

LMFS:DUMP-RECURSE:  (P.C. = 244)
   Arg 0 (WILDPATH): #<LMFS-PATHNAME "Z:>R6>doc>**>*.*.*">
   Local 0 (WILDPATH): #<LMFS-PATHNAME "Z:>r6>doc>*.*.*">

LMFS:DUMP-RECURSE:  (P.C. = 244)
   Arg 0 (WILDPATH): #<LMFS-PATHNAME "Z:>R6>**>*.*.*">
   Local 0 (WILDPATH): #<LMFS-PATHNAME "Z:>R6>*.*.*">

LMFS:DUMP-RECURSE:  (P.C. = 244)
   Arg 0 (WILDPATH): #<LMFS-PATHNAME "Z:>**>*.*.*">
   Local 0 (WILDPATH): #<LMFS-PATHNAME "Z:>*.*.*">

LMFS:BACKUP-DUMP-ROOT-NODES:  (P.C. = 22)

LMFS:BACKUP-DUMP-I:  (P.C. = 57)

LMFS:BACKUP-DUMPER:  (P.C. = 435)
   Rest arg (ARGS): (:DUMP-TYPE :COMPLETE)

(:METHOD LMFS:FSMAINT-FRAME :EXECUTE):  (P.C. = 172)
   Arg 0 (SELF): #<FSMAINT-FRAME Fsmaint Frame 1 43234143 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor LMFS:FSMAINT-FRAME -- 11. IV's, 13. FL's 142306073>
   Arg 2 (OPERATION): :EXECUTE
   Arg 3 (KEY): :COMPLETE-DUMP

(:METHOD LMFS:FSMAINT-FRAME :INTERPRET-INPUT):  (P.C. = 150)
   Arg 0 (SELF): #<FSMAINT-FRAME Fsmaint Frame 1 43234143 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor LMFS:FSMAINT-FRAME -- 11. IV's, 13. FL's 142306073>
   Arg 2 (OPERATION): :INTERPRET-INPUT
   Arg 3 (INPUT): (:MENU ("Complete Dump" :VALUE :COMPLETE-DUMP :DOCUMENTATION "Start a complete backup dump") 1 #<COMMAND-MENU-PANE Command Menu Pane 4 43234574 exposed>)

LMFS:FSMAINT-READ-FCN:  (P.C. = 72)

(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0):  (P.C. = 105)
   Arg 0 (.LEXICAL-ENVIRONMENT-POINTER.): #<DTP-LOCATIVE 44140130>

TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
   Arg 0 (NEW-MODE): :BLAST
   Arg 1 (STREAM): #:TERMINAL-IO-SYN-STREAM
   Arg 2 (CONTINUATION): #<LEXICAL-CLOSURE (:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0) 44140135>

SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
   Arg 0 (NAME): "FS Maintenance Lisp Listener"
   Arg 1 (ABORT-FUNCTION): NIL
   Arg 2 (READ-FUNCTION): LMFS:FSMAINT-READ-FCN
   Arg 3 (EVAL-FUNCTION): NIL
   Arg 4 (PRINT-FUNCTION): NIL

SI:LISP-COMMAND-LOOP:  (P.C. = 67)
   Arg 0: #<FSMAINT-INTERACTION-PANE Fsmaint Interaction Pane 1 43234466 exposed>
   Rest arg: (:NAME "FS Maintenance Lisp Listener" :READ-FUNCTION LMFS:FSMAINT-READ-FCN)

(:METHOD LMFS:FSMAINT-FRAME :FSMAINT-TOP-LEVEL):  (P.C. = 72)
   Arg 0 (SELF): #<FSMAINT-FRAME Fsmaint Frame 1 43234143 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor LMFS:FSMAINT-FRAME -- 11. IV's, 13. FL's 142306073>
   Arg 2 (OPERATION): :FSMAINT-TOP-LEVEL

LMFS:FSMAINT-TOP-LEVEL:  (P.C. = 6)
   Arg 0: #<FSMAINT-FRAME Fsmaint Frame 1 43234143 exposed>

SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
   --Defaulted args:--
   Arg 0 (IGNORE): NIL
 4-Apr-85 16:53:11-EST,1490;000000000000
Received: from MIT-MORRISON by MIT-OZ via Chaosnet; 4 Apr 85 16:52-EST
Date: Thursday, 4 April 1985, 16:50-EST
From: jcma@MIT-MC
Subject: FUNCTION-1F Takes forever
To: cjl@OZ
cc: DCP@SCRC-QUABBIN, jcma@MIT-MC, BUG-LISPM@OZ
In-Reply-To: <850404134128.1.CJL@LENNON.MIT.EDU>
Message-ID: <850404165029.1.JCMA@MORRISON.MIT.EDU>

    Date: Thu, 4 Apr 85 13:41 EST
    From: Chris Lindblad <cjl@OZ.MIT.EDU>

	Date: Thursday, 4 April 1985, 11:53-EST
	From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>

	Do you still hack some of the magic namespace variables in your init
	file?  Maybe AISite 7 does?  Maybe you should unhack them and see if
	things get better.  Also note that MIT is a very large site, which may
	lead to the conclusion that the namespace system currently doesn't scale
	up well. On the other hand, SCRC is also a large site. 

    AISite doesn't hack any namespace stuff, and the ai site has only about
    50 lispms in it, but the namespace objects for every lispm here have
    been modified since that world load was saved (giving them internet
    addresses).  Perhaps Function-1-F took so long because it was getting
    the new versions of these namespace objects. It would do that if it
    checked the validity of all the local lispm namespace objects before
    fingering them.

If that was the case, then it had to check validity again the second time
because it looked like the same rate of interaction with the namespace server.
 4-Apr-85 17:03:46-EST,11830;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 4 Apr 85 17:03-EST
Received: from MIT-MORRISON by MIT-MC via Chaosnet; 4 APR 85  17:02:48 EST
Date: Thursday, 4 April 1985, 17:01-EST
From: jcma@MIT-MC
Subject: FUNCTION-1F Takes forever
To: DCP@SCRC-QUABBIN
cc: BUG-LISPM@OZ
In-Reply-To: <850404115318.4.NFEP@NEPONSET.SCRC.Symbolics.COM>
Message-ID: <850404170103.2.JCMA@MORRISON.MIT.EDU>

    Date: Thu, 4 Apr 85 11:53 EST
    From: David C. Plummer in disguise <DCP@SCRC-QUABBIN.ARPA>

	Date: Thursday, 4 April 1985, 10:25-EST
	From: jcma@MIT-MC

	In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.7,
	microcode TMC5-MIC 319, FEP 22, on Lisp Machine James Morrison:

	I just did this and it took about 5 minutes!  And it was only trying to show
	me near by lisp machines!  All of the time was soaked up in repeatedly
	contacting the namespace server, in this case AP6.

	If we put in metering to determine the amount of time researchers at MIT spend
	waiting for namespace lossage and charged somebody for the lost time according
	standard consulting rates, somebody would be very broke!

    Does that mean we get to charge customers for time spent answering bug
    reports?

You're already charging them.  Lispm's aren't exactly free.  What is more to
the point is how much are bug reports worth? (Yea, I know not much from me
with no backtrace) But, all seriousness aside.  It might be a good idea to
look at the system in terms of researcher productivity.  That really is the
strength of it.  So, little glitches should not be allowed to eat away at it.

	The point is just that the namespace system is still the major productivity
	loss in these lisp machines.  And the bug is still too much interaction with
	the namespace servers (not to mention connecting all over the universe).

    At least we haven't seen any complaints that the Release 6 namespace
    system is functionaly broken... yet.  What your message is implying is
    that the current problem is strictly a performance one.  It would help
    if you were able to c-m-Suspend during one of the connects and send a
    backtrace.  That would probably give us enough information to ask more
    specific and relevent questions.

    Do you still hack some of the magic namespace variables in your init
    file?  Maybe AISite 7 does?  Maybe you should unhack them and see if
    things get better.  Also note that MIT is a very large site, which may
    lead to the conclusion that the namespace system currently doesn't scale
    up well. On the other hand, SCRC is also a large site.  I just did a
    FUNCTION-1-F for the first time this session it took 10 seconds before
    it started connecting to hosts to get the information.  My world is
	In Symbolics 3600 Release 6.0, System 271.23, microcode TMC5-MIC 322,
	FEP 119, SYSOUT version of DISK-SAVE,
    which is, in some ways, more vanilla than what most people around here
    use.

What about CJL's theory?  Sure sounds plausible.

	On the bright side, parsing hosts in zmail seems to be doing much better.

	p.s.  There were 20 connects to AP6 to send this message!  Note that there is
	only one host mentioned.

Here's the backtrace.



>>Break: 
While in the function PROCESS-WAIT  CHAOS:GET-NEXT-PKT  (:METHOD CHAOS:BASIC-INPUT-STREAM :GET-NEXT-INPUT-PKT)

PROCESS-WAIT:
   Arg 0 (WHOSTATE): "Chaos In"
   Local 0 (WHOSTATE): #<BREAK 51477061>
   Arg 1 (FUNCTION): #<DTP-COMPILED-FUNCTION (:INTERNAL CHAOS:GET-NEXT-PKT 0) 11555230>
   Local 1 (FUNCTION): #<DTP-LOCATIVE 21541146>
   Rest arg (ARGUMENTS): (#<CHAOS Connection for NAMESPACE to AP6 120465563> #<DTP-LOCATIVE 51476743>)
   Local 2 (ARGUMENTS): #<DTP-LOCATIVE 21541145>

CHAOS:GET-NEXT-PKT:  (P.C. = 174)
   Arg 0 (CONN): #<CHAOS Connection for NAMESPACE to AP6 120465563>
   Arg 1 (NO-HANG-P): NIL
   Arg 2 (STREAM): #<CHARACTER-STREAM 51476737>

(:METHOD CHAOS:BASIC-INPUT-STREAM :GET-NEXT-INPUT-PKT):  (P.C. = 60)
   Arg 0 (SELF): #<CHARACTER-STREAM 51476737>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor CHAOS:BASIC-INPUT-STREAM -- 2. IV's, 0. FL's 104734207>
   Arg 2 (OPERATION): :GET-NEXT-INPUT-PKT
   Arg 3 (NO-HANG-P): NIL

(:METHOD CHAOS:CHARACTER-INPUT-STREAM-MIXIN :NEXT-INPUT-BUFFER):  (P.C. = 6)
   Arg 0 (SELF): #<CHARACTER-STREAM 51476737>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor CHAOS:CHARACTER-INPUT-STREAM-MIXIN -- 1. IV's, 0. FL's 104737103>
   Arg 2 (OPERATION): :NEXT-INPUT-BUFFER
   Arg 3 (NO-HANG-P): NIL

(:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :SETUP-NEXT-INPUT-BUFFER):  (P.C. = 12)
   Arg 0 (SELF): #<CHARACTER-STREAM 51476737>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:BASIC-BUFFERED-INPUT-STREAM -- 3. IV's, 0. FL's 104734276>
   Arg 2 (OPERATION): :SETUP-NEXT-INPUT-BUFFER
   Arg 3 (NO-HANG-P): NIL
   Arg 4 (EOF): NIL

(:METHOD CHAOS:CHARACTER-STREAM :COMBINED :SETUP-NEXT-INPUT-BUFFER):  (P.C. = 11)
   Arg 0 (SELF): #<CHARACTER-STREAM 51476737>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor CHAOS:CHARACTER-STREAM -- 3. IV's, 9. FL's 104734236>
   Arg 2 (.OPERATION.): :SETUP-NEXT-INPUT-BUFFER
   Rest arg (.DAEMON-CALLER-ARGS.): (NIL NIL)

(:METHOD SI:BUFFERED-LINE-INPUT-MIXIN :STRING-LINE-IN):  (P.C. = 31)
   Arg 0 (SELF): #<CHARACTER-STREAM 51476737>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:BUFFERED-LINE-INPUT-MIXIN -- 3. IV's, 0. FL's 104737134>
   Arg 2 (OPERATION): :STRING-LINE-IN
   Arg 3 (EOF): NIL
   Arg 4 (LINE): "PROTOCOL-VERSION 3ot loaded./" TCP SMTP                          "
   --Defaulted args:--
   Arg 5 (START): 0
   Arg 6 (END): 64

NETI:PARSE-RECORD-AS-TOKENS:  (P.C. = 34)
   Arg 0 (STREAM): #<CHARACTER-STREAM 51476737>
   Arg 1 (COMMENTS-P): T

NETI:PARSE-RECORD-AS-TOKENS-WITH-TIMEOUT:  (P.C. = 40)
   Arg 0 (STREAM): #<CHARACTER-STREAM 51476737>
   --Defaulted args:--
   Arg 1 (COMMENTS-P): T

(:METHOD NETI:LISPM-NAMESPACE-ACCESS-PATH :GET-BRIEF-INCREMENTAL-UPDATE):  (P.C. = 25)
   Arg 0 (SELF): #<LISPM-NAMESPACE-ACCESS-PATH Namespace Lock APIARY-6 30126633>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NETI:LISPM-NAMESPACE-ACCESS-PATH -- 3. IV's, 1. FL's 105133764>
   Arg 2 (OPERATION): :GET-BRIEF-INCREMENTAL-UPDATE
   Arg 3 (NAMESPACE): #<NAMESPACE SCH 1141221>
   Arg 4 (STARTING-TIMESTAMP): 981

(:INTERNAL (:METHOD NETI:LISPM-NAMESPACE-ACCESS-PATH :COMBINED :GET-BRIEF-INCREMENTAL-UPDATE) 0):  (P.C. = 10)
   Arg 0 (SELF): #<LISPM-NAMESPACE-ACCESS-PATH Namespace Lock APIARY-6 30126633>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NETI:LISPM-NAMESPACE-ACCESS-PATH -- 3. IV's, 1. FL's 105133764>
   Arg 2 (.OPERATION.): :GET-BRIEF-INCREMENTAL-UPDATE
   Rest arg (.DAEMON-CALLER-ARGS.): (#<NAMESPACE SCH 1141221> 981)

(:METHOD NETI:NAMESPACE-ACCESS-PATH :WHOPPER :GET-BRIEF-INCREMENTAL-UPDATE):  (P.C. = 41)
   Arg 0 (SELF): #<LISPM-NAMESPACE-ACCESS-PATH Namespace Lock APIARY-6 30126633>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NETI:NAMESPACE-ACCESS-PATH -- 3. IV's, 0. FL's 105133773>
   Arg 2 (.WHOPPER-CONTINUATION.): #<DTP-COMPILED-FUNCTION (:INTERNAL (:METHOD NETI:LISPM-NAMESPACE-ACCESS-PATH :COMBINED :GET-BRIEF-INCREMENTAL-UPDATE) 0) 22100100>
   Arg 3 (.OLD-SELF-MAPPING-TABLE.): #<Map to flavor NETI:LISPM-NAMESPACE-ACCESS-PATH -- 3. IV's, 1. FL's 105133764>
   Arg 4 (.OPERATION.): :GET-BRIEF-INCREMENTAL-UPDATE
   Arg 5 (NAMESPACE): #<NAMESPACE SCH 1141221>
   Arg 6 (TIMESTAMP): 981

(:METHOD NETI:LISPM-NAMESPACE-ACCESS-PATH :COMBINED :GET-BRIEF-INCREMENTAL-UPDATE):  (P.C. = 13)
   Arg 0 (SELF): #<LISPM-NAMESPACE-ACCESS-PATH Namespace Lock APIARY-6 30126633>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NETI:LISPM-NAMESPACE-ACCESS-PATH -- 3. IV's, 1. FL's 105133764>
   Arg 2 (.OPERATION.): :GET-BRIEF-INCREMENTAL-UPDATE
   Rest arg (.DAEMON-CALLER-ARGS.): (#<NAMESPACE SCH 1141221> 981)

NETI:GET-INCREMENTAL-UPDATE-FROM-NETWORK:  (P.C. = 111)
   Arg 0 (NAMESPACE): #<NAMESPACE SCH 1141221>
   Arg 1 (TIMESTAMP): 981

(:METHOD NETI:NAMESPACE :GET-LATEST-TIMESTAMP):  (P.C. = 71)
   Arg 0 (SELF): #<NAMESPACE SCH 1141221>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NETI:NAMESPACE -- 11. IV's, 1. FL's 104215464>
   Arg 2 (OPERATION): :GET-LATEST-TIMESTAMP
   Arg 3 (FORCE-P): NIL

(:METHOD NET:OBJECT :CHECK-VALIDITY):  (P.C. = 122)
   Arg 0 (SELF): #<CHAOS-NETWORK CHAOS 1140144>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NET:OBJECT -- 4. IV's, 1. FL's 104237556>
   Arg 2 (OPERATION): :CHECK-VALIDITY
   Arg 3 (RELATIVE-TO-NAMESPACE): #<NAMESPACE SCH 1141221>
   Arg 4 (FORCE-P): NIL

(:METHOD NET:OBJECT :CHECK-VALIDITY):  (P.C. = 40)
   Arg 0 (SELF): #<CHAOS-NETWORK CHAOS 1140144>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NET:OBJECT -- 4. IV's, 1. FL's 104237556>
   Arg 2 (OPERATION): :CHECK-VALIDITY
   --Defaulted args:--
   Arg 3 (RELATIVE-TO-NAMESPACE): NIL
   Arg 4 (FORCE-P): NIL

(:METHOD NET:OBJECT :BEFORE :GET):  (P.C. = 5)
   Arg 0 (SELF): #<CHAOS-NETWORK CHAOS 1140144>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NET:OBJECT -- 4. IV's, 1. FL's 104237556>
   Arg 2 (OPERATION): :GET
   Rest arg (IGNORE): (:TYPE)

(:METHOD NET:OBJECT :COMBINED :GET):  (P.C. = 10)
   Arg 0 (SELF): #<CHAOS-NETWORK CHAOS 1140144>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NET:OBJECT -- 4. IV's, 1. FL's 104237556>
   Arg 2 (.OPERATION.): :GET
   Rest arg (.DAEMON-CALLER-ARGS.): (:TYPE)

(:METHOD NET:NETWORK :NETWORK-TYPEP):  (P.C. = 6)
   Arg 0 (SELF): #<CHAOS-NETWORK CHAOS 1140144>
   Arg 1 (SELF-MAPPING-TABLE): NET:NETWORK
   Arg 2 (OPERATION): :NETWORK-TYPEP
   Arg 3 (TYPE): :CHAOS

(:METHOD NET:HOST :BEST-CHAOS-ADDRESS):  (P.C. = 22)
   Arg 0 (SELF): #<TOPS20-HOST OZ 1140441>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NET:HOST -- 6. IV's, 1. FL's 104717555>
   Arg 2 (OPERATION): :BEST-CHAOS-ADDRESS

(:METHOD CHAOS:CHAOS-NETWORK :DESIRABILITY):  (P.C. = 17)
   Arg 0 (SELF): #<CHAOS-NETWORK CHAOS 1140144>
   Arg 1 (SELF-MAPPING-TABLE): CHAOS:CHAOS-NETWORK
   Arg 2 (OPERATION): :DESIRABILITY
   Arg 3 (FOR-HOST): #<TOPS20-HOST OZ 1140441>

NETI:COMPUTE-MEDIUM-DESIRABILITY:  (P.C. = 65)
   Arg 0 (MEDIUM): #<MEDIUM-DESCRIPTION on CHAOS 51476460>
   Arg 1 (FOR-HOST): #<TOPS20-HOST OZ 1140441>

NETI:FIND-PATHS-TO-SERVICE-ON-HOST-1:  (P.C. = 75)
   Arg 0 (SERVICE): :SHOW-USERS
   Arg 1 (PROTOCOL): #<PROTOCOL NAME 120445327>
   Arg 2 (HOST): #<TOPS20-HOST OZ 1140441>
   Arg 3 (MEDIUM-NAME): :CHAOS

NET:FIND-PATHS-TO-SERVICE-ON-HOST:  (P.C. = 100)
   Arg 0 (SERVICE): :SHOW-USERS
   Arg 1 (HOST): #<TOPS20-HOST OZ 1140441>
   Arg 2 (ONLY-NEED-BEST): NIL
   Arg 3 (MUST-HAVE-ONE): T

NET:INVOKE-SERVICE-ON-HOST:  (P.C. = 53)
   Arg 0 (SERVICE): :SHOW-USERS
   Arg 1 (HOST): #<TOPS20-HOST OZ 1140441>
   Rest arg (SERVICE-ARGS): (:USER "" :WHOIS NIL)

NET:FINGER:  (P.C. = 64)
   Arg 0 (SPEC): NIL
   Arg 1 (STREAM): #:TERMINAL-IO-SYN-STREAM
   Rest arg: (:HOST #<TOPS20-HOST OZ 1140441>)

TV:FINGER-HOST:  (P.C. = 53)
   Arg 0 (LINE): NIL
   Rest arg (REST): (:HOST #<TOPS20-HOST OZ 1140441>)

(:INTERNAL TV:KBD-FINGER 0):  (P.C. = 53)
   Arg 0 (.LEXICAL-ENVIRONMENT-POINTER.): #<DTP-LOCATIVE 21540105>

TV:POP-UP-WINDOW-INTERNAL:  (P.C. = 42)
   Arg 0 (LINE-TRUNCATION): NIL
   Arg 1 (LABEL): "Who's on OZ"
   Arg 2 (CONTINUATION): #<LEXICAL-CLOSURE (:INTERNAL TV:KBD-FINGER 0) 21540106>

TV:KBD-FINGER:  (P.C. = 143)
   Arg 0 (ARG): NIL

(:INTERNAL TV:KBD-ESC 1):  (P.C. = 4)
   Arg 0 (FCN): TV:KBD-FINGER
   Arg 1 (ARG): NIL

SI:PROCESS-RUN-FUNCTION-INTERNAL:  (P.C. = 52)
   Arg 0 (RESTART-ON-RESET): NIL
   Arg 1 (FUNCTION): #<DTP-COMPILED-FUNCTION (:INTERNAL TV:KBD-ESC 1) 22406733>
   Rest arg (ARGS): (TV:KBD-FINGER NIL)

SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
   Arg 0 (IGNORE): NIL
 4-Apr-85 17:50:20-EST,2406;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 4 Apr 85 17:49-EST
Received: from SCRC-STONY-BROOK by MIT-MC via Chaosnet; 4 APR 85  17:48:58 EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 209087; Thu 4-Apr-85 15:12:38-EST
Date: Thu, 4 Apr 85 15:10 EST
From: David C. Plummer in disguise <DCP@SCRC-QUABBIN.ARPA>
Subject: Compiler Bug...
To: Charles Hornig <Hornig@SCRC-STONY-BROOK.ARPA>,
    Thomas Reinhardt <Tomr@OZ.MIT.EDU>, BUG-LISPM@MIT-MC.ARPA
In-Reply-To: <850309110747.6.HORNIG@HUDSON.SCRC.Symbolics.COM>
References: <850304144645.3.TOMR@APIARY-5.MIT>,
            <850307222817.8.NFEP@NEPONSET.SCRC.Symbolics.COM>,
            <850309110747.6.HORNIG@HUDSON.SCRC.Symbolics.COM>,
            <TOMR.12093697986.BABYL@MIT-OZ>
Message-ID: <850404151053.8.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Sat, 9 Mar 85 11:07 EST
    From: Charles Hornig <Hornig@SCRC-STONY-BROOK.ARPA>

	Date: Mon, 4 Mar 85 14:46 EST
	From: Thomas Reinhardt <Tomr@OZ.MIT>

	In Symbolics 3600 Release 6.0 Beta IIc, microcode TMC5-MIC 315, FEP 18, on Lisp Machine Apiary-5:

	Compiling Defsubsts ... as in

	(DEFsubst FAST-MEMQ (KEY LST)
	  "Just return T if key is a top-level atomic element in list."
	  (DOLIST (ELEMENT LST)
	    (AND (EQ ELEMENT KEY) (RETURN T))))

	(DEFsubst FAST-MEMQ (KEY LST)
	  "Just return T if key is a top-level atomic element in list."
		(do ((foo lst (cdr foo)))
		((null foo))
		(AND (EQ (car foo) KEY) (RETURN T))))

	(DEFVAR BINARY-OPERATORS             
		'(= EQ < <=  MAX MIN > >=  \\ \ ^ + - *)
	  "List of existing Act3 Binary Operators, used by the parsing routines.
	   I hope to phase these things out.")

	(DEFUN FIND-FIRST-OPERATOR-SPECIFIED (SOURCE)
	  (LOCAL-DECLARE ((SPECIAL BINARY-OPERATORS))
	    (DOLIST (TOKEN SOURCE)
	      (AND  (FAST-MEMQ TOKEN BINARY-OPERATORS) (RETURN TOKEN)))))

	will invariably return NIL.  Changing the Defsubst to a 
	Defun does the correct thing.

	TOMR

    Thank you for reporting this problem.  It is a bug in LT::MAPFORMS-DO,
    which will get you for any subst with a DO in it.  It is too late to
    fix it in release 6.  It will be fixed in a future release.

I think I migrated what was migratable into 271.24, which will be part
of 6.1.  Your test case compiles and the simple tests I ran shows that
it touchs and replaces all forms correctly.
 4-Apr-85 17:55:28-EST,2425;000000000000
Received: from MIT-LENNON by MIT-OZ via Chaosnet; 4 Apr 85 17:55-EST
Date: Thursday, 4 April 1985, 17:54-EST
From: Chris Lindblad <cjl at OZ>
Subject: CP enhancement suggestion
To: BUG-LISPM at OZ
Message-ID: <850404175448.1.CJL@LENNON.MIT.EDU>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.8,
microcode TMC5-MIC 319, on Lisp Machine John Lennon:

I use the command processor, and I like it, but I think a change could
be made to make it more "user friendly".  When I type a symbol in
command-preferred mode wanting to see it's bound value, if I forget to
preceed it with a comma, the command processor complains that I have not
typed the name of a command. I get upset, then backspace back to the
beginning of the line, put a comma in front of the symbol, and hit
. Fine. Then I discover that I want to do something with that symbol
so I type some other function, c-m-Y the symbol into some form I'm
typing, but whoa!  I have to backspace to the front of the symbol, and
delete that comma that I forgot in the first place. More inconvienience.

Ok, so you say I want form-preferred mode. No I don't. I've tried it,
and I screw up even more, forgetting to type a colon in front of my
commands. I must be really clumsy.

This is only a conjecture, but I bet a lot of other people have this problem.

I suggest a DWIM feature: In command-preferred mode, if the first
word that I typed does not complete to a valid command, the command
processor should first see if the word is the name of a bound symbol. If
it was, then infer I really typed a symbol, and give me the value
of it. In form-preferred mode, instead of complaining about an unbound
symbol, the cp should try to see if it's a valid beginning of a command.

It's very rare that I have a symbol named show, or set, or login; I
don't mind if DWIM fails here. Command-preferred and form preffered
modes still would chose the apropriate default.

I like the command processor. I think it's nifty. I think this feature
would make it even niftier.

And finally, more harping about sources. I don't really care about
looking at sources to the internals of the command processor, but I
would like to look at the sources to implemented commands. I'd like to
enhance some, and stuff like that. In ZMACS there's a function, Edit
ZMACS command. It'd be nice if I could edit command processor commands.
And argument types.
 4-Apr-85 18:18:13-EST,1575;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 4 Apr 85 18:18-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 209088; Thu 4-Apr-85 15:13:41-EST
Date: Thursday, 4 April 1985, 15:12-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: defmacro doc string
To: David C. Plummer in disguise <DCP at SCRC-QUABBIN>,
    Christopher Fry <cfry at OZ>, BUG-LISPM at OZ
In-Reply-To: <850307223716.0.NFEP@NEPONSET.SCRC.Symbolics.COM>
References: <850305022852.3.CFRY@SID.MIT>,
            <850307223716.0.NFEP@NEPONSET.SCRC.Symbolics.COM>
Message-ID: <850404151200.9.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Thursday, 7 March 1985, 22:37-EST
    From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>

	Date: Tuesday, 5 March 1985, 02:28-EST
	From: Christopher Fry <cfry at OZ>

	In Symbolics 3670 Release 6.0 Beta IIc, microcode TMC5-IO4-MIC 315,
	FEP 22, on Lisp Machine Sid Vicious:


	(defmacro foo () "foo doc string" nil)
	(documentation 'foo) => nil  ; should be the above string

	(defun bar () "bar doc string" nil)
	(documentation 'bar) => "bar doc string" ;as expected

	Release 6 Beta Test I Notes do not contain an entry for the
	function documentation in the index.
	Is this a bug or an undocumented intended change?
	Documentation strings for defmacro work in rel 5.
	I would like them to work in rel 6.

    Already known about and on various people's queues.  If you expand the
    DEFMACRO you will see where it put it.

Fixed in 271.24, which will be part of 6.1.
 4-Apr-85 18:37:22-EST,974;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 4 Apr 85 18:37-EST
Received: from SCRC-CONCORD by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 209278; Thu 4-Apr-85 18:18:24-EST
Date: Thu, 4 Apr 85 18:20 EST
From: Bernard S. Greenberg <BSG at SCRC-STONY-BROOK>
Subject: RTAPE to a VAX/UNIX
To: seda at VAX, BUG-LISPM at OZ
cc: hukee at SCRC-STONY-BROOK
In-Reply-To: <850404152600.6.SEDA@ZERMATT.MIT.EDU>
Message-ID: <850404182034.6.BSG@CONCORD.SCRC.Symbolics.COM>

    Date: Thursday, 4 April 1985, 15:26-EST
    From: Steve Seda <seda at VAX>

    >>Error: Cannot mount reel ZERF001B: Drive can only be single digits 0-3?  <see
    TAPE:STATUS-STRING below for rest of the error message>
This is a bug in the Unix RTAPE server.  There is a new version, I don't know how
you get it.  Joanne?  

In the meantime, tell it, "no, I don't want to use the same drive, I want to use
a different one", and tell it "3" or whatever you told it originally.
 4-Apr-85 18:51:56-EST,3225;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 4 Apr 85 18:51-EST
Received: from SCRC-CUYAHOGA by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 209292; Thu 4-Apr-85 18:43:41-EST
Date: Thursday, 4 April 1985, 18:44-EST
From: Robert A. Cassels <Cassels at SCRC-TENEX>
Subject: lennon still has problems after being "fixed"
To: CJL at OZ, bug-symbolics-hardware at OZ, bug-lispm at OZ
In-Reply-To: <CJL.12100523045.BABYL@MIT-OZ>
Message-ID: <850404184449.8.CASSELS@CUYAHOGA.SCRC.Symbolics.COM>

    Date: Thu, 4 Apr 1985  14:58 EST
    From: Chris Lindblad <CJL@MIT-OZ>

    Lennon frequently crashes after about 10 minutes of excercise with a
    simple "Lisp stopped itself".  Show status gives:

    FEP Lbus control: Use Uncorrected Data, Ignore Double ECC Error, Task 3 Dismiss
    Sequencer error status: Microcode-halted
    Sequencer miscellaneous status: TSK-STOP (sequencer-stopped), Errhalt-Sync
    3600 program counters:
      Macro PC/ (Odd)23314
    > OPC+0/46147	OPC+10/41122
      OPC+1/47367	OPC+11/47613
      OPC+2/50014	OPC+12/44006
      OPC+3/1300	OPC+13/40710
      OPC+4/40410	OPC+14/45015
      OPC+5/40414	OPC+15/45014
      OPC+6/40415	OPC+16/40410
      OPC+7/41341	OPC+17/53312

    FEP debugger shows backtrace of
      si:load-flushc (pc = 51)
      si:storage-background-fun (pc = 13)
      si:wired-wait
      si:wait-for-page-idle
      si:page-fault-handler
      si:page-fault

    Running 6.0.

    Lennon has been broken for about a month, and was claimed to be fixed
    today.  Our field service people seem bewildered as to what is wrong
    with the machine (theyve so far tried 3 backplanes), which is why I'm
    bringing this up in this forum. Any ideas?

Please always include the microcode version (type and number) in such
reports.  I guessed TMC5-MIC.MIC.319, which seems consistent with the
OPCs you gave.

This particular time, you died on a wrong-type arg trap:

SI:LOAD-FLUSHC:
 50  PUSH-LOCAL FP|11           ;MMPT-ENTRY
 51  BUILTIN LDB-INTERNAL STACK 105     ;Size(4) Rotl(11)

(loop for pc in '#o(46147 47367 50014 1300)
      do (dbg:decode-micro-pc pc "tmc5-mic" 319)) =>

6147 halts because: Error in non-trappable stack group; typically error in error handler
7367 not found in halt table for tmc5-mic 319.
7367 is the microinstruction (ERROR-TRAP-VMA-UP-2 1).
10014 not found in halt table for tmc5-mic 319.
10014 is the microinstruction ERROR-TRAP-VMA-UP-1.
By the way, 1300 can trap to the debugger for WRONG-TYPE-ARGUMENT (NIL (NUMBER))
1300 is the dispatch address for the LDB-IMMED instruction.
If the machine halted here, the instruction must be unimplemented,
suggesting that compiled code and the microcode are inconsistent.NIL

So it would have been interesting to see what FP|11 was via the FEP
debugger.  If it really was an integer, then either the PUSH-LOCAL got
the wrong stuff or the tag-check hardware on the DP is broken.  If it
wasn't an integer, wherever it came from smashed the type bits.  That
could happen in lots of ways.

Sorry I can't be of more help, but if you can go through this exercise
the next time it dies, perhaps you can gather a few more bits.
 4-Apr-85 19:44:45-EST,2869;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 4 Apr 85 19:44-EST
Received: from SCRC-CROW by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 209342; Thu 4-Apr-85 19:39:15-EST
Date: Thursday, 4 April 1985, 19:40-EST
From: Robert W. Kerns <RWK at SCRC-YUKON>
Subject: directories make-system isn't creating.
To: Daniel Weise <DANIEL at MIT-MC>
cc: BUG-LISPM at OZ
In-Reply-To: The message of 4 Apr 85 13:44-EST from Daniel Weise <DANIEL at MIT-MC>
Message-ID: <850404194001.8.RWK@CROW.SCRC.Symbolics.COM>

    Date: Thu, 4 Apr 85 13:44:35 EST
    From: Daniel Weise <DANIEL@MIT-MC>

	Date: Thursday, 4 April 1985, 12:35-EST
	From: Robert W. Kerns <RWK at SCRC-YUKON>
	To:   Daniel Weise <DANIEL>
	cc:   BUG-LISPM at OZ
	Re:   directories make-system isn't creating.

	Is this before or after you added the subdirectory quota to
	that directory?  
    After.
	Did it get an error while trying to create
	the directory?  
    Not at all.
	I note that the directory is there now.
	Did you create it by hand?
    Yes.
	If you got an error trying to create the directory, and then
	continued by hand, this is just the same as your other report.
    Yes, I just wanted to say that it really didn't create the dir
    it thought it had (I was't 100% sure before.)
Next question:  No message?

I just tried creating a directory on OZ from the CP.
I got the message "Request exceeds superior directory subdirectory quota."
I then tried the same thing on OZ, both not enabled, and with Wheel enabled.
I got the same message.

I found that to create a directory, I had to explicitly tell it to
create the directory with no subdirectory quota (I presume less than
my superior directory would work as well).  My theory is that it is
defaulting the subdirectory quota to something large, maybe even
whatever the superior has.

I also notice that <DPL.MIT.PATCH> has a smaller subdirectory quota
than my directory, which is consistant with this theory.

So it seems there is a bug in the file server (unless you construe
this as a TOPS-20 bug, which doesn't help you get it fixed).

Ah, now I understand you.  You DID get this error, and hit Resume.
Resume claimed to create the directory, but actually did nothing.
Indeed, in FS:CREATE-DIRECTORIES-RECURSIVELY, there is a
CATCH-ERROR-RESTART instead of ERROR-RESTART.  OK, so there's two
problems, the bug in the file server, and the bug in
FS:CREATE-DIRECTORIES-RECURSIVELY.  The later will be fixed in a future
release.

	But if it is still happening, now that you should be able
	to create subdirectories OK, it would seem to be a file server
	bug.
    It is most probably a file server bug.  Is there someone at MIT responsible
    for such things that I should forward this to?
Um, I don't know who is responsible for this anymore.  Does anyone
else know?
 4-Apr-85 19:50:43-EST,790;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 4 Apr 85 19:50-EST
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 209346; Thu 4-Apr-85 19:49:08-EST
Date: Thursday, 4 April 1985, 19:50-EST
From: David A. Moon <Moon at SCRC-STONY-BROOK>
Subject: directories make-system isn't creating.
To: Daniel Weise <DANIEL at MIT-MC>
cc: RWK at SCRC-YUKON, BUG-LISPM at OZ
In-Reply-To: The message of 4 Apr 85 13:44-EST from Daniel Weise <DANIEL at MIT-MC>
Message-ID: <850404195032.9.MOON@EUPHRATES.SCRC.Symbolics.COM>

    Date: Thu, 4 Apr 85 13:44:35 EST
    From: Daniel Weise <DANIEL@MIT-MC>
    It is most probably a file server bug.  Is there someone at MIT responsible
    for such things that I should forward this to?

BUG-FILE @ MIT-OZ.
 4-Apr-85 19:56:03-EST,1801;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 4 Apr 85 19:55-EST
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 209350; Thu 4-Apr-85 19:54:28-EST
Date: Thursday, 4 April 1985, 19:55-EST
From: David A. Moon <Moon at SCRC-STONY-BROOK>
Subject: lennon still has problems after being "fixed"
To: Chris Lindblad <CJL at OZ>
cc: bug-symbolics-hardware at OZ, bug-lispm at OZ
In-Reply-To: <CJL.12100523045.BABYL@MIT-OZ>
Message-ID: <850404195555.0.MOON@EUPHRATES.SCRC.Symbolics.COM>

The symptoms look a little bit like a problem we saw on a couple of
machines here, which apparently went away of its own accord.  It might
have been temperature-related.  The problem was that a FAST-AREF
instruction in a function of the paging system (si:load-flushc in the
case you sent mail about) was mis-executed, so that it accessed the
wrong stack location to get the particulars of the array register, and
consequently accessed the wrong data when it should have fetched from
the array.  From looking at the disassembled code I believe the wrong
data in your case is the result of a FAST-AREF instruction a few
instructions earlier in the function.

If this is what is happening to you, the symptom will probably be
slightly different on each crash, and will often be a double-bit error
accessing non-existent memory (syndrome 70) when the FAST-AREF picks up
an address that doesn't even point to existent memory.

I suspect that the fault lies on the TMC board, but that's only a guess,
and I don't know what field service has done with Lennon.  They should
certainly have checked temperature, airflow, and power supplies, but
sometimes people forget that so you might remind them.

I also endorse the advice in Bob Cassels' response to you.
 4-Apr-85 20:15:26-EST,2274;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 4 Apr 85 20:15-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 209360; Thu 4-Apr-85 20:13:54-EST
Date: Thursday, 4 April 1985, 20:12-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: FUNCTION-1F Takes forever
To: jcma at MIT-MC, DCP at SCRC-QUABBIN
cc: BUG-LISPM at OZ
In-Reply-To: <850404170103.2.JCMA@MORRISON.MIT.EDU>
Message-ID: <850404201216.2.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Thu, 4 Apr 85 17:01 EST
    From: jcma@MIT-MC.ARPA

    What about CJL's theory?  Sure sounds plausible.

Sure does, but I don't think it explains the backtrace you sent in.

	    On the bright side, parsing hosts in zmail seems to be doing much better.

	    p.s.  There were 20 connects to AP6 to send this message!  Note that there is
	    only one host mentioned.

    Here's the backtrace.

The backtrace is trying to update the SCH namespace in order to validate
the CHAOS network in order to find the best chaos address to OZ.  (I
still contend the multi-homing nature of networks is a mistake.)  The
question then becomes, why wasn't SCH already valid, and what is
preventing its validity from being updated?  I would break-on-exit from
:GET-LATEST-TIMESTAMP and compare the return value with the Arg 1 of
G-I-U-F-N (981, here).  If they are the same, then SCH should be
contacted again unless there is a bug.  If they are different, it should
update SCH and then be done with it.  The thing to do is save a DESCRIBE
of the namespace, let the NETI:GET-INCREMENTAL-UPDATE-FROM-NETWORK
complete, and then save another DESCRIBE of the namespace.  You should
probably do similar DESCRIBEs for the CHAOS network object as well.  The
update should cause the validation timestamps to update.

    NETI:GET-INCREMENTAL-UPDATE-FROM-NETWORK:  (P.C. = 111)
       Arg 0 (NAMESPACE): #<NAMESPACE SCH 1141221>
       Arg 1 (TIMESTAMP): 981

    (:METHOD NETI:NAMESPACE :GET-LATEST-TIMESTAMP):  (P.C. = 71)
       Arg 0 (SELF): #<NAMESPACE SCH 1141221>
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NETI:NAMESPACE -- 11. IV's, 1. FL's 104215464>
       Arg 2 (OPERATION): :GET-LATEST-TIMESTAMP
       Arg 3 (FORCE-P): NIL

 4-Apr-85 22:27:50-EST,499;000000000000
Received: from MIT-DUANE by MIT-OZ via Chaosnet; 4 Apr 85 22:27-EST
Date: Thursday, 4 April 1985, 22:26-EST
From: David Chapman <Zvona at OZ>
Subject: out of sync sources?
To: BUG-LISPM at OZ
Message-ID: <850404222645.2.ZVONA@DUANE.MIT.EDU>

In Symbolics 3670 Release 6.0, IP-TCP 29.0, AISite 7.8,
microcode TMC5-IO4-MIC 319, FEP 22, on Lisp Machine Duane Allman:

m-. can't find compiler:file-declaration.  Do we have souces that are
out of sync with the wold load?  Can this be fixed?
 4-Apr-85 23:16:02-EST,11429;000000000000
Received: from MIT-JANIS by MIT-OZ via Chaosnet; 4 Apr 85 23:15-EST
Date: Thursday, 4 April 1985, 23:15-EST
From: Ken Haase <KWH at OZ>
Subject: LET-IF not using the environment its called with....
To: BUG-LISPM at OZ
Message-ID: <850404231522.1.KWH@JANIS.MIT.EDU>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.8,
Experimental Meta Representation Langauge 2.10, microcode TMC5-MIC 319, on Lisp Machine Janis Joplin:

This happened in the midst of a macro-expansion which called
CONDITION-CASE, which called LET-IF inside of a stack list binding.  You
can see in the second frame that LET-IF is trying to bind
DBG:*BOUND-HANDLERS* to #:G0426, which it complains (and this is the
relevant bug) is unbound.  However, if we look in the environment handed
to the LET-IF (supposing that I am reading the environment correctly --
i.e. as an alist -- we see that it was indeed passed a value for
#:G0426, precisely the value:
   (#<CASE-HANDLER 23273305> #<LEXICAL-CLOSURE ** 43440053>)
computed in the WITH-STACK-LIST* above it.

This bug can be reliably reproduced by trying to compile the file
"OZ:<LMLIB>PP-6.LISP".

--------------------------------------------------------------------------------------------------

>>Trap: The variable #:G0426 is unbound.
While in the function SI:*EVAL  LET-IF  SI:*EVAL
While compiling |FN0-PP:|

SI:*EVAL:  (P.C. = 23)
   Arg 0 (FORM): #:G0426
   --Defaulted args:--
   Arg 1 (ENV): NIL
   Arg 2 (HOOK): NIL

LET-IF:  (P.C. = 53)
   Arg 0 (FORM): (LET-IF *WARN-USER-ONLY* ((DBG:*BOUND-HANDLERS* #:G0426)) (DBG:*CATCH-IF *WARN-USER-ONLY* (%MAKE-POINTER DTP-LOCATIVE DBG:*BOUND-HANDLERS*) (RETURN-FROM #:G0424 (PROGN ** ** **))))
   Arg 1 (ENV): (((#:G0426 (#<CASE-HANDLER 23273305> #<LEXICAL-CLOSURE ** 43440053>)) (EO NIL) (*STREAM* . #<DTP-LOCATIVE 36564751>) (*ARG-LIST* . #<DTP-LOCATIVE 36564744>) (BODY NIL) (*TOP-LEVEL-^* . #<DTP-LOCATIVE 36564737>) (COMPILED NIL) (CTL-STRING "~VI") (STREAM S) (ARGS (**)) ...) NIL ((#:G0424 #<DTP-LOCATIVE 43441554>) (FAST-FORMAT #<DTP-LOCATIVE 43441156>)) (((** **) #<DTP-LOCATIVE 43441555>) ((TAGBODY ** #:G0355 **) #<DTP-LOCATIVE 43441234>)) (((SI:INVISIBLE-BLOCK T))) NIL (((EO NIL) (*STREAM* . #<DTP-LOCATIVE 36564751>) (*ARG-LIST* . #<DTP-LOCATIVE 36564744>) (BODY NIL) (*TOP-LEVEL-^* . #<DTP-LOCATIVE 36564737>) (COMPILED NIL) (CTL-STRING "~VI") (STREAM S) (ARGS **) (SI:.ENV. NIL) ...) NIL ((#:G0424 #<DTP-LOCATIVE 43441554>) (FAST-FORMAT #<DTP-LOCATIVE 43441156>)) ((** #<DTP-LOCATIVE 43441555>) (** #<DTP-LOCATIVE 43441234>)) ((**)) NIL ((** ** ** ** ** ** ** ** ** **) NIL (**) (**) NIL NIL (** NIL ** ** NIL NIL **))))

SI:*EVAL:  (P.C. = 165)
   Arg 0 (FORM): (LET-IF *WARN-USER-ONLY* ((DBG:*BOUND-HANDLERS* #:G0426)) (DBG:*CATCH-IF *WARN-USER-ONLY* (%MAKE-POINTER DTP-LOCATIVE DBG:*BOUND-HANDLERS*) (RETURN-FROM #:G0424 (PROGN ** ** **))))
   Arg 1 (ENV): (((#:G0426 (#<CASE-HANDLER 23273305> #<LEXICAL-CLOSURE ** 43440053>)) (EO NIL) (*STREAM* . #<DTP-LOCATIVE 36564751>) (*ARG-LIST* . #<DTP-LOCATIVE 36564744>) (BODY NIL) (*TOP-LEVEL-^* . #<DTP-LOCATIVE 36564737>) (COMPILED NIL) (CTL-STRING "~VI") (STREAM S) (ARGS (**)) ...) NIL ((#:G0424 #<DTP-LOCATIVE 43441554>) (FAST-FORMAT #<DTP-LOCATIVE 43441156>)) (((** **) #<DTP-LOCATIVE 43441555>) ((TAGBODY ** #:G0355 **) #<DTP-LOCATIVE 43441234>)) (((SI:INVISIBLE-BLOCK T))) NIL (((EO NIL) (*STREAM* . #<DTP-LOCATIVE 36564751>) (*ARG-LIST* . #<DTP-LOCATIVE 36564744>) (BODY NIL) (*TOP-LEVEL-^* . #<DTP-LOCATIVE 36564737>) (COMPILED NIL) (CTL-STRING "~VI") (STREAM S) (ARGS **) (SI:.ENV. NIL) ...) NIL ((#:G0424 #<DTP-LOCATIVE 43441554>) (FAST-FORMAT #<DTP-LOCATIVE 43441156>)) ((** #<DTP-LOCATIVE 43441555>) (** #<DTP-LOCATIVE 43441234>)) ((**)) NIL ((** ** ** ** ** ** ** ** ** **) NIL (**) (**) NIL NIL (** NIL ** ** NIL NIL **))))
   --Defaulted args:--
   Arg 2 (HOOK): NIL

WITH-STACK-LIST*:  (P.C. = 171)
   Arg 0 (FORM): (WITH-STACK-LIST* (#:G0426 (QUOTE #<CASE-HANDLER 23273305>) DBG:*BOUND-HANDLERS*) (LET-IF *WARN-USER-ONLY* ((DBG:*BOUND-HANDLERS* #:G0426)) (DBG:*CATCH-IF *WARN-USER-ONLY* (%MAKE-POINTER DTP-LOCATIVE DBG:*BOUND-HANDLERS*) (RETURN-FROM #:G0424 **))))
   Arg 1 (ENV): (((EO NIL) (*STREAM* . #<DTP-LOCATIVE 36564751>) (*ARG-LIST* . #<DTP-LOCATIVE 36564744>) (BODY NIL) (*TOP-LEVEL-^* . #<DTP-LOCATIVE 36564737>) (COMPILED NIL) (CTL-STRING "~VI") (STREAM S) (ARGS (**)) (SI:.ENV. NIL) ...) NIL ((#:G0424 #<DTP-LOCATIVE 43441554>) (FAST-FORMAT #<DTP-LOCATIVE 43441156>)) (((** **) #<DTP-LOCATIVE 43441555>) ((TAGBODY ** #:G0355 **) #<DTP-LOCATIVE 43441234>)) (((SI:INVISIBLE-BLOCK T))) NIL (((*STREAM* . #<DTP-LOCATIVE 36564751>) (*ARG-LIST* . #<DTP-LOCATIVE 36564744>) (BODY NIL) (*TOP-LEVEL-^* . #<DTP-LOCATIVE 36564737>) (COMPILED NIL) (CTL-STRING "~VI") (STREAM S) (ARGS **) (SI:.ENV. NIL) (SI:.FORM. **)) NIL ((FAST-FORMAT #<DTP-LOCATIVE 43441156>)) ((** #<DTP-LOCATIVE 43441234>)) NIL NIL ((** ** ** ** **) NIL (**) (**) NIL NIL (** NIL ** ** NIL NIL **))))

SI:*EVAL:  (P.C. = 165)
   Arg 0 (FORM): (DBG:CONDITION-INTERNAL *WARN-USER-ONLY* (QUOTE #<CASE-HANDLER 23273305>) (RETURN-FROM #:G0424 (PROGN (WHEN ** **) (SETQ BODY **) (SETQ COMPILED T))))
   Local 0 (FORM): (WITH-STACK-LIST* (#:G0426 (QUOTE #<CASE-HANDLER 23273305>) DBG:*BOUND-HANDLERS*) (LET-IF *WARN-USER-ONLY* ((DBG:*BOUND-HANDLERS* #:G0426)) (DBG:*CATCH-IF *WARN-USER-ONLY* (%MAKE-POINTER DTP-LOCATIVE DBG:*BOUND-HANDLERS*) (RETURN-FROM #:G0424 **))))
   Arg 1 (ENV): (((EO NIL) (*STREAM* . #<DTP-LOCATIVE 36564751>) (*ARG-LIST* . #<DTP-LOCATIVE 36564744>) (BODY NIL) (*TOP-LEVEL-^* . #<DTP-LOCATIVE 36564737>) (COMPILED NIL) (CTL-STRING "~VI") (STREAM S) (ARGS (**)) (SI:.ENV. NIL) ...) NIL ((#:G0424 #<DTP-LOCATIVE 43441554>) (FAST-FORMAT #<DTP-LOCATIVE 43441156>)) (((** **) #<DTP-LOCATIVE 43441555>) ((TAGBODY ** #:G0355 **) #<DTP-LOCATIVE 43441234>)) (((SI:INVISIBLE-BLOCK T))) NIL (((*STREAM* . #<DTP-LOCATIVE 36564751>) (*ARG-LIST* . #<DTP-LOCATIVE 36564744>) (BODY NIL) (*TOP-LEVEL-^* . #<DTP-LOCATIVE 36564737>) (COMPILED NIL) (CTL-STRING "~VI") (STREAM S) (ARGS **) (SI:.ENV. NIL) (SI:.FORM. **)) NIL ((FAST-FORMAT #<DTP-LOCATIVE 43441156>)) ((** #<DTP-LOCATIVE 43441234>)) NIL NIL ((** ** ** ** **) NIL (**) (**) NIL NIL (** NIL ** ** NIL NIL **))))
   --Defaulted args:--
   Arg 2 (HOOK): NIL

SETQ:  (P.C. = 24)
   Arg 0 (FORM): (SETQ EO (DBG:CONDITION-INTERNAL *WARN-USER-ONLY* (QUOTE #<CASE-HANDLER 23273305>) (RETURN-FROM #:G0424 (PROGN ** ** **))))
   Arg 1 (ENV): (((EO NIL) (*STREAM* . #<DTP-LOCATIVE 36564751>) (*ARG-LIST* . #<DTP-LOCATIVE 36564744>) (BODY NIL) (*TOP-LEVEL-^* . #<DTP-LOCATIVE 36564737>) (COMPILED NIL) (CTL-STRING "~VI") (STREAM S) (ARGS (**)) (SI:.ENV. NIL) ...) NIL ((#:G0424 #<DTP-LOCATIVE 43441554>) (FAST-FORMAT #<DTP-LOCATIVE 43441156>)) (((** **) #<DTP-LOCATIVE 43441555>) ((TAGBODY ** #:G0355 **) #<DTP-LOCATIVE 43441234>)) (((SI:INVISIBLE-BLOCK T))) NIL (((*STREAM* . #<DTP-LOCATIVE 36564751>) (*ARG-LIST* . #<DTP-LOCATIVE 36564744>) (BODY NIL) (*TOP-LEVEL-^* . #<DTP-LOCATIVE 36564737>) (COMPILED NIL) (CTL-STRING "~VI") (STREAM S) (ARGS **) (SI:.ENV. NIL) (SI:.FORM. **)) NIL ((FAST-FORMAT #<DTP-LOCATIVE 43441156>)) ((** #<DTP-LOCATIVE 43441234>)) NIL NIL ((** ** ** ** **) NIL (**) (**) NIL NIL (** NIL ** ** NIL NIL **))))

SI:*EVAL:  (P.C. = 165)
   Arg 0 (FORM): (SETQ EO (DBG:CONDITION-INTERNAL *WARN-USER-ONLY* (QUOTE #<CASE-HANDLER 23273305>) (RETURN-FROM #:G0424 (PROGN ** ** **))))
   Arg 1 (ENV): (((EO NIL) (*STREAM* . #<DTP-LOCATIVE 36564751>) (*ARG-LIST* . #<DTP-LOCATIVE 36564744>) (BODY NIL) (*TOP-LEVEL-^* . #<DTP-LOCATIVE 36564737>) (COMPILED NIL) (CTL-STRING "~VI") (STREAM S) (ARGS (**)) (SI:.ENV. NIL) ...) NIL ((#:G0424 #<DTP-LOCATIVE 43441554>) (FAST-FORMAT #<DTP-LOCATIVE 43441156>)) (((** **) #<DTP-LOCATIVE 43441555>) ((TAGBODY ** #:G0355 **) #<DTP-LOCATIVE 43441234>)) (((SI:INVISIBLE-BLOCK T))) NIL (((*STREAM* . #<DTP-LOCATIVE 36564751>) (*ARG-LIST* . #<DTP-LOCATIVE 36564744>) (BODY NIL) (*TOP-LEVEL-^* . #<DTP-LOCATIVE 36564737>) (COMPILED NIL) (CTL-STRING "~VI") (STREAM S) (ARGS **) (SI:.ENV. NIL) (SI:.FORM. **)) NIL ((FAST-FORMAT #<DTP-LOCATIVE 43441156>)) ((** #<DTP-LOCATIVE 43441234>)) NIL NIL ((** ** ** ** **) NIL (**) (**) NIL NIL (** NIL ** ** NIL NIL **))))
   --Defaulted args:--
   Arg 2 (HOOK): NIL

SI:DIGESTED-PROG:  (P.C. = 312)
   Arg 0 (BODY): (SI:DIGESTED-PROG (PROG #:G0424 (EO) (DECLARE (SI:INVISIBLE-BLOCK T)) (SETQ EO (DBG:CONDITION-INTERNAL *WARN-USER-ONLY* ** **)) (RETURN-FROM #:G0424 (PROGN **))) #:G0424 #:G0424 ((NIL EO)) ((SI:INVISIBLE-BLOCK T)) (SETQ EO (DBG:CONDITION-INTERNAL *WARN-USER-ONLY* (QUOTE #<CASE-HANDLER 23273305>) (RETURN-FROM #:G0424 **))) (RETURN-FROM #:G0424 (PROGN (COMPILER:WARN NIL "The FORMAT control string ~S~%~
                                   is too complicated for fast execution" CTL-STRING))))
   Local 0 (BODY): ((RETURN-FROM #:G0424 (PROGN (COMPILER:WARN NIL "The FORMAT control string ~S~%~
                                   is too complicated for fast execution" CTL-STRING))))
   Arg 1 (ENV): (((*STREAM* . #<DTP-LOCATIVE 36564751>) (*ARG-LIST* . #<DTP-LOCATIVE 36564744>) (BODY NIL) (*TOP-LEVEL-^* . #<DTP-LOCATIVE 36564737>) (COMPILED NIL) (CTL-STRING "~VI") (STREAM S) (ARGS (**)) (SI:.ENV. NIL) (SI:.FORM. (FAST-FORMAT S "~VI" **))) NIL ((FAST-FORMAT #<DTP-LOCATIVE 43441156>)) (((TAGBODY ** #:G0355 **) #<DTP-LOCATIVE 43441234>)) NIL NIL (((CTL-STRING "~VI") (STREAM S) (ARGS **) (SI:.ENV. NIL) (SI:.FORM. **)) NIL ((FAST-FORMAT #<DTP-LOCATIVE 43441156>)) ((** #<DTP-LOCATIVE 43441234>)) NIL NIL ((** **) NIL (**) (**) NIL NIL (** NIL ** NIL NIL NIL **))))

Rest of stack:
SI:DIGEST-INTERNAL:  (P.C. = 30)
PROG:  (P.C. = 61)
SI:*EVAL:  (P.C. = 165)
SI:DIGESTED-LET:  (P.C. = 203)
SI:*EVAL:  (P.C. = 165)
PROGN:  (P.C. = 20)
SI:*EVAL:  (P.C. = 165)
RETURN-FROM:  (P.C. = 52)
SI:*EVAL:  (P.C. = 165)
SI:DIGESTED-LET*:  (P.C. = 152)
SI:*EVAL:  (P.C. = 165)
SI:DO-TAGBODY:  (P.C. = 73)
SI:*EVAL:  (P.C. = 165)
BLOCK:  (P.C. = 107)
SI:*EVAL:  (P.C. = 165)
SI:APPLY-LAMBDA:  (P.C. = 507)
SYS:CALL-FUNNY-FUNCTION:  (P.C. = 102)
FAST-FORMAT:  (from B:>lmlib>pp-6)
FUNCALL:  (P.C. = 5)
SI:MACROEXPAND-1-INTERNAL:  (P.C. = 206)
MACROEXPAND-1:  (P.C. = 10)
COMPILER:TRANSFORM:  (P.C. = 551)
COMPILER:PHASE-1:  (P.C. = 16)
COMPILER:PHASE-1-PROGN:  (P.C. = 22)
(:PROPERTY COND COMPILER:PHASE-1):  (P.C. = 65)
COMPILER:PHASE-1:  (P.C. = 347)
COMPILER:PHASE-1-PROGN:  (P.C. = 22)
COMPILER:PHASE-1-FUNCTION-DEFINITION:  (P.C. = 315)
COMPILER:PHASE-1-EXTERNAL-FUNCTION:  (P.C. = 35)
COMPILER:RUN-PHASE-1-FUNCTION:  (P.C. = 73)
COMPILER:COMPILE-DEFINITION-1:  (P.C. = 10)
COMPILER:COMPILE-DEFINITION:  (P.C. = 122)
(:INTERNAL COMPILER:COMPILE-TO-FILE 0 (:DUMP-DEFINITION)):  (P.C. = 4)
COMPILER:COMPILE-TO-FILE:  (P.C. = 12)
COMPILER:COMPILE-FORM-FUNCTION:  (P.C. = 41)
COMPILER:COMPILE-FROM-STREAM-1:  (P.C. = 330)
COMPILER:COMPILE-FROM-STREAM-1:  (P.C. = 113)
COMPILER:PROCESS-FORMS-FROM-STREAM:  (P.C. = 117)
COMPILER:COMPILE-FROM-STREAM:  (P.C. = 237)
COMPILER:COMPILE-FILE:  (P.C. = 303)
ZWEI:COM-COMPILE-FILE:  (P.C. = 57)
ZWEI:COM-EXTENDED-COMMAND:  (P.C. = 27)
ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 233)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 60)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 51)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
 4-Apr-85 23:17:45-EST,11499;000000000000
Received: from MIT-JANIS by MIT-OZ via Chaosnet; 4 Apr 85 23:17-EST
Date: Thursday, 4 April 1985, 23:17-EST
From: Ken Haase <KWH at OZ>
Subject: LET-IF not using the environment its called with....
To: BUG-LISPM at OZ
Message-ID: <850404231716.2.KWH@JANIS.MIT.EDU>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.8,
Experimental Meta Representation Langauge 2.10, microcode TMC5-MIC 319, on Lisp Machine Janis Joplin:

This happened in the midst of a macro-expansion which referenced
CONDITION-CASE, expanding into LET-IF inside of WITH-STACK-LIST*.  You
can see in the second frame that LET-IF is trying to bind
DBG:*BOUND-HANDLERS* to #:G0426, which it complains (and this is the
signalled condition) is unbound.  However, if we look in the environment
handed to the LET-IF (supposing that I am reading the environment
correctly, i.e. as an alist) we see that it was indeed passed a value
for #:G0426, precisely the value:
   (#<CASE-HANDLER 23273305> #<LEXICAL-CLOSURE ** 43440053>)
computed in the WITH-STACK-LIST* above it.  Maybe evaluated LET-IF
doesn't know about lexical scoping yet?

This bug can be reliably reproduced by trying to compile the file
"OZ:<LMLIB>PP-6.LISP".

--------------------------------------------------------------------------------------------------

>>Trap: The variable #:G0426 is unbound.
While in the function SI:*EVAL  LET-IF  SI:*EVAL
While compiling |FN0-PP:|

SI:*EVAL:  (P.C. = 23)
   Arg 0 (FORM): #:G0426
   --Defaulted args:--
   Arg 1 (ENV): NIL
   Arg 2 (HOOK): NIL

LET-IF:  (P.C. = 53)
   Arg 0 (FORM): (LET-IF *WARN-USER-ONLY* ((DBG:*BOUND-HANDLERS* #:G0426)) (DBG:*CATCH-IF *WARN-USER-ONLY* (%MAKE-POINTER DTP-LOCATIVE DBG:*BOUND-HANDLERS*) (RETURN-FROM #:G0424 (PROGN ** ** **))))
   Arg 1 (ENV): (((#:G0426 (#<CASE-HANDLER 23273305> #<LEXICAL-CLOSURE ** 43440053>)) (EO NIL) (*STREAM* . #<DTP-LOCATIVE 36564751>) (*ARG-LIST* . #<DTP-LOCATIVE 36564744>) (BODY NIL) (*TOP-LEVEL-^* . #<DTP-LOCATIVE 36564737>) (COMPILED NIL) (CTL-STRING "~VI") (STREAM S) (ARGS (**)) ...) NIL ((#:G0424 #<DTP-LOCATIVE 43441554>) (FAST-FORMAT #<DTP-LOCATIVE 43441156>)) (((** **) #<DTP-LOCATIVE 43441555>) ((TAGBODY ** #:G0355 **) #<DTP-LOCATIVE 43441234>)) (((SI:INVISIBLE-BLOCK T))) NIL (((EO NIL) (*STREAM* . #<DTP-LOCATIVE 36564751>) (*ARG-LIST* . #<DTP-LOCATIVE 36564744>) (BODY NIL) (*TOP-LEVEL-^* . #<DTP-LOCATIVE 36564737>) (COMPILED NIL) (CTL-STRING "~VI") (STREAM S) (ARGS **) (SI:.ENV. NIL) ...) NIL ((#:G0424 #<DTP-LOCATIVE 43441554>) (FAST-FORMAT #<DTP-LOCATIVE 43441156>)) ((** #<DTP-LOCATIVE 43441555>) (** #<DTP-LOCATIVE 43441234>)) ((**)) NIL ((** ** ** ** ** ** ** ** ** **) NIL (**) (**) NIL NIL (** NIL ** ** NIL NIL **))))

SI:*EVAL:  (P.C. = 165)
   Arg 0 (FORM): (LET-IF *WARN-USER-ONLY* ((DBG:*BOUND-HANDLERS* #:G0426)) (DBG:*CATCH-IF *WARN-USER-ONLY* (%MAKE-POINTER DTP-LOCATIVE DBG:*BOUND-HANDLERS*) (RETURN-FROM #:G0424 (PROGN ** ** **))))
   Arg 1 (ENV): (((#:G0426 (#<CASE-HANDLER 23273305> #<LEXICAL-CLOSURE ** 43440053>)) (EO NIL) (*STREAM* . #<DTP-LOCATIVE 36564751>) (*ARG-LIST* . #<DTP-LOCATIVE 36564744>) (BODY NIL) (*TOP-LEVEL-^* . #<DTP-LOCATIVE 36564737>) (COMPILED NIL) (CTL-STRING "~VI") (STREAM S) (ARGS (**)) ...) NIL ((#:G0424 #<DTP-LOCATIVE 43441554>) (FAST-FORMAT #<DTP-LOCATIVE 43441156>)) (((** **) #<DTP-LOCATIVE 43441555>) ((TAGBODY ** #:G0355 **) #<DTP-LOCATIVE 43441234>)) (((SI:INVISIBLE-BLOCK T))) NIL (((EO NIL) (*STREAM* . #<DTP-LOCATIVE 36564751>) (*ARG-LIST* . #<DTP-LOCATIVE 36564744>) (BODY NIL) (*TOP-LEVEL-^* . #<DTP-LOCATIVE 36564737>) (COMPILED NIL) (CTL-STRING "~VI") (STREAM S) (ARGS **) (SI:.ENV. NIL) ...) NIL ((#:G0424 #<DTP-LOCATIVE 43441554>) (FAST-FORMAT #<DTP-LOCATIVE 43441156>)) ((** #<DTP-LOCATIVE 43441555>) (** #<DTP-LOCATIVE 43441234>)) ((**)) NIL ((** ** ** ** ** ** ** ** ** **) NIL (**) (**) NIL NIL (** NIL ** ** NIL NIL **))))
   --Defaulted args:--
   Arg 2 (HOOK): NIL

WITH-STACK-LIST*:  (P.C. = 171)
   Arg 0 (FORM): (WITH-STACK-LIST* (#:G0426 (QUOTE #<CASE-HANDLER 23273305>) DBG:*BOUND-HANDLERS*) (LET-IF *WARN-USER-ONLY* ((DBG:*BOUND-HANDLERS* #:G0426)) (DBG:*CATCH-IF *WARN-USER-ONLY* (%MAKE-POINTER DTP-LOCATIVE DBG:*BOUND-HANDLERS*) (RETURN-FROM #:G0424 **))))
   Arg 1 (ENV): (((EO NIL) (*STREAM* . #<DTP-LOCATIVE 36564751>) (*ARG-LIST* . #<DTP-LOCATIVE 36564744>) (BODY NIL) (*TOP-LEVEL-^* . #<DTP-LOCATIVE 36564737>) (COMPILED NIL) (CTL-STRING "~VI") (STREAM S) (ARGS (**)) (SI:.ENV. NIL) ...) NIL ((#:G0424 #<DTP-LOCATIVE 43441554>) (FAST-FORMAT #<DTP-LOCATIVE 43441156>)) (((** **) #<DTP-LOCATIVE 43441555>) ((TAGBODY ** #:G0355 **) #<DTP-LOCATIVE 43441234>)) (((SI:INVISIBLE-BLOCK T))) NIL (((*STREAM* . #<DTP-LOCATIVE 36564751>) (*ARG-LIST* . #<DTP-LOCATIVE 36564744>) (BODY NIL) (*TOP-LEVEL-^* . #<DTP-LOCATIVE 36564737>) (COMPILED NIL) (CTL-STRING "~VI") (STREAM S) (ARGS **) (SI:.ENV. NIL) (SI:.FORM. **)) NIL ((FAST-FORMAT #<DTP-LOCATIVE 43441156>)) ((** #<DTP-LOCATIVE 43441234>)) NIL NIL ((** ** ** ** **) NIL (**) (**) NIL NIL (** NIL ** ** NIL NIL **))))

SI:*EVAL:  (P.C. = 165)
   Arg 0 (FORM): (DBG:CONDITION-INTERNAL *WARN-USER-ONLY* (QUOTE #<CASE-HANDLER 23273305>) (RETURN-FROM #:G0424 (PROGN (WHEN ** **) (SETQ BODY **) (SETQ COMPILED T))))
   Local 0 (FORM): (WITH-STACK-LIST* (#:G0426 (QUOTE #<CASE-HANDLER 23273305>) DBG:*BOUND-HANDLERS*) (LET-IF *WARN-USER-ONLY* ((DBG:*BOUND-HANDLERS* #:G0426)) (DBG:*CATCH-IF *WARN-USER-ONLY* (%MAKE-POINTER DTP-LOCATIVE DBG:*BOUND-HANDLERS*) (RETURN-FROM #:G0424 **))))
   Arg 1 (ENV): (((EO NIL) (*STREAM* . #<DTP-LOCATIVE 36564751>) (*ARG-LIST* . #<DTP-LOCATIVE 36564744>) (BODY NIL) (*TOP-LEVEL-^* . #<DTP-LOCATIVE 36564737>) (COMPILED NIL) (CTL-STRING "~VI") (STREAM S) (ARGS (**)) (SI:.ENV. NIL) ...) NIL ((#:G0424 #<DTP-LOCATIVE 43441554>) (FAST-FORMAT #<DTP-LOCATIVE 43441156>)) (((** **) #<DTP-LOCATIVE 43441555>) ((TAGBODY ** #:G0355 **) #<DTP-LOCATIVE 43441234>)) (((SI:INVISIBLE-BLOCK T))) NIL (((*STREAM* . #<DTP-LOCATIVE 36564751>) (*ARG-LIST* . #<DTP-LOCATIVE 36564744>) (BODY NIL) (*TOP-LEVEL-^* . #<DTP-LOCATIVE 36564737>) (COMPILED NIL) (CTL-STRING "~VI") (STREAM S) (ARGS **) (SI:.ENV. NIL) (SI:.FORM. **)) NIL ((FAST-FORMAT #<DTP-LOCATIVE 43441156>)) ((** #<DTP-LOCATIVE 43441234>)) NIL NIL ((** ** ** ** **) NIL (**) (**) NIL NIL (** NIL ** ** NIL NIL **))))
   --Defaulted args:--
   Arg 2 (HOOK): NIL

SETQ:  (P.C. = 24)
   Arg 0 (FORM): (SETQ EO (DBG:CONDITION-INTERNAL *WARN-USER-ONLY* (QUOTE #<CASE-HANDLER 23273305>) (RETURN-FROM #:G0424 (PROGN ** ** **))))
   Arg 1 (ENV): (((EO NIL) (*STREAM* . #<DTP-LOCATIVE 36564751>) (*ARG-LIST* . #<DTP-LOCATIVE 36564744>) (BODY NIL) (*TOP-LEVEL-^* . #<DTP-LOCATIVE 36564737>) (COMPILED NIL) (CTL-STRING "~VI") (STREAM S) (ARGS (**)) (SI:.ENV. NIL) ...) NIL ((#:G0424 #<DTP-LOCATIVE 43441554>) (FAST-FORMAT #<DTP-LOCATIVE 43441156>)) (((** **) #<DTP-LOCATIVE 43441555>) ((TAGBODY ** #:G0355 **) #<DTP-LOCATIVE 43441234>)) (((SI:INVISIBLE-BLOCK T))) NIL (((*STREAM* . #<DTP-LOCATIVE 36564751>) (*ARG-LIST* . #<DTP-LOCATIVE 36564744>) (BODY NIL) (*TOP-LEVEL-^* . #<DTP-LOCATIVE 36564737>) (COMPILED NIL) (CTL-STRING "~VI") (STREAM S) (ARGS **) (SI:.ENV. NIL) (SI:.FORM. **)) NIL ((FAST-FORMAT #<DTP-LOCATIVE 43441156>)) ((** #<DTP-LOCATIVE 43441234>)) NIL NIL ((** ** ** ** **) NIL (**) (**) NIL NIL (** NIL ** ** NIL NIL **))))

SI:*EVAL:  (P.C. = 165)
   Arg 0 (FORM): (SETQ EO (DBG:CONDITION-INTERNAL *WARN-USER-ONLY* (QUOTE #<CASE-HANDLER 23273305>) (RETURN-FROM #:G0424 (PROGN ** ** **))))
   Arg 1 (ENV): (((EO NIL) (*STREAM* . #<DTP-LOCATIVE 36564751>) (*ARG-LIST* . #<DTP-LOCATIVE 36564744>) (BODY NIL) (*TOP-LEVEL-^* . #<DTP-LOCATIVE 36564737>) (COMPILED NIL) (CTL-STRING "~VI") (STREAM S) (ARGS (**)) (SI:.ENV. NIL) ...) NIL ((#:G0424 #<DTP-LOCATIVE 43441554>) (FAST-FORMAT #<DTP-LOCATIVE 43441156>)) (((** **) #<DTP-LOCATIVE 43441555>) ((TAGBODY ** #:G0355 **) #<DTP-LOCATIVE 43441234>)) (((SI:INVISIBLE-BLOCK T))) NIL (((*STREAM* . #<DTP-LOCATIVE 36564751>) (*ARG-LIST* . #<DTP-LOCATIVE 36564744>) (BODY NIL) (*TOP-LEVEL-^* . #<DTP-LOCATIVE 36564737>) (COMPILED NIL) (CTL-STRING "~VI") (STREAM S) (ARGS **) (SI:.ENV. NIL) (SI:.FORM. **)) NIL ((FAST-FORMAT #<DTP-LOCATIVE 43441156>)) ((** #<DTP-LOCATIVE 43441234>)) NIL NIL ((** ** ** ** **) NIL (**) (**) NIL NIL (** NIL ** ** NIL NIL **))))
   --Defaulted args:--
   Arg 2 (HOOK): NIL

SI:DIGESTED-PROG:  (P.C. = 312)
   Arg 0 (BODY): (SI:DIGESTED-PROG (PROG #:G0424 (EO) (DECLARE (SI:INVISIBLE-BLOCK T)) (SETQ EO (DBG:CONDITION-INTERNAL *WARN-USER-ONLY* ** **)) (RETURN-FROM #:G0424 (PROGN **))) #:G0424 #:G0424 ((NIL EO)) ((SI:INVISIBLE-BLOCK T)) (SETQ EO (DBG:CONDITION-INTERNAL *WARN-USER-ONLY* (QUOTE #<CASE-HANDLER 23273305>) (RETURN-FROM #:G0424 **))) (RETURN-FROM #:G0424 (PROGN (COMPILER:WARN NIL "The FORMAT control string ~S~%~
                                   is too complicated for fast execution" CTL-STRING))))
   Local 0 (BODY): ((RETURN-FROM #:G0424 (PROGN (COMPILER:WARN NIL "The FORMAT control string ~S~%~
                                   is too complicated for fast execution" CTL-STRING))))
   Arg 1 (ENV): (((*STREAM* . #<DTP-LOCATIVE 36564751>) (*ARG-LIST* . #<DTP-LOCATIVE 36564744>) (BODY NIL) (*TOP-LEVEL-^* . #<DTP-LOCATIVE 36564737>) (COMPILED NIL) (CTL-STRING "~VI") (STREAM S) (ARGS (**)) (SI:.ENV. NIL) (SI:.FORM. (FAST-FORMAT S "~VI" **))) NIL ((FAST-FORMAT #<DTP-LOCATIVE 43441156>)) (((TAGBODY ** #:G0355 **) #<DTP-LOCATIVE 43441234>)) NIL NIL (((CTL-STRING "~VI") (STREAM S) (ARGS **) (SI:.ENV. NIL) (SI:.FORM. **)) NIL ((FAST-FORMAT #<DTP-LOCATIVE 43441156>)) ((** #<DTP-LOCATIVE 43441234>)) NIL NIL ((** **) NIL (**) (**) NIL NIL (** NIL ** NIL NIL NIL **))))

Rest of stack:
SI:DIGEST-INTERNAL:  (P.C. = 30)
PROG:  (P.C. = 61)
SI:*EVAL:  (P.C. = 165)
SI:DIGESTED-LET:  (P.C. = 203)
SI:*EVAL:  (P.C. = 165)
PROGN:  (P.C. = 20)
SI:*EVAL:  (P.C. = 165)
RETURN-FROM:  (P.C. = 52)
SI:*EVAL:  (P.C. = 165)
SI:DIGESTED-LET*:  (P.C. = 152)
SI:*EVAL:  (P.C. = 165)
SI:DO-TAGBODY:  (P.C. = 73)
SI:*EVAL:  (P.C. = 165)
BLOCK:  (P.C. = 107)
SI:*EVAL:  (P.C. = 165)
SI:APPLY-LAMBDA:  (P.C. = 507)
SYS:CALL-FUNNY-FUNCTION:  (P.C. = 102)
FAST-FORMAT:  (from B:>lmlib>pp-6)
FUNCALL:  (P.C. = 5)
SI:MACROEXPAND-1-INTERNAL:  (P.C. = 206)
MACROEXPAND-1:  (P.C. = 10)
COMPILER:TRANSFORM:  (P.C. = 551)
COMPILER:PHASE-1:  (P.C. = 16)
COMPILER:PHASE-1-PROGN:  (P.C. = 22)
(:PROPERTY COND COMPILER:PHASE-1):  (P.C. = 65)
COMPILER:PHASE-1:  (P.C. = 347)
COMPILER:PHASE-1-PROGN:  (P.C. = 22)
COMPILER:PHASE-1-FUNCTION-DEFINITION:  (P.C. = 315)
COMPILER:PHASE-1-EXTERNAL-FUNCTION:  (P.C. = 35)
COMPILER:RUN-PHASE-1-FUNCTION:  (P.C. = 73)
COMPILER:COMPILE-DEFINITION-1:  (P.C. = 10)
COMPILER:COMPILE-DEFINITION:  (P.C. = 122)
(:INTERNAL COMPILER:COMPILE-TO-FILE 0 (:DUMP-DEFINITION)):  (P.C. = 4)
COMPILER:COMPILE-TO-FILE:  (P.C. = 12)
COMPILER:COMPILE-FORM-FUNCTION:  (P.C. = 41)
COMPILER:COMPILE-FROM-STREAM-1:  (P.C. = 330)
COMPILER:COMPILE-FROM-STREAM-1:  (P.C. = 113)
COMPILER:PROCESS-FORMS-FROM-STREAM:  (P.C. = 117)
COMPILER:COMPILE-FROM-STREAM:  (P.C. = 237)
COMPILER:COMPILE-FILE:  (P.C. = 303)
ZWEI:COM-COMPILE-FILE:  (P.C. = 57)
ZWEI:COM-EXTENDED-COMMAND:  (P.C. = 27)
ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 233)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 60)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 51)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
 4-Apr-85 23:40:13-EST,6503;000000000000
Received: from MIT-MOON by MIT-OZ via Chaosnet; 4 Apr 85 23:40-EST
Date: Thursday, 4 April 1985, 23:39-EST
From: Gregg M. Lobdell <robot.gml at OZ>
Subject: see the compiler barf!
To: BUG-LISPM at OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 24, on Lisp Machine Keith Moon:

well, the compiler really doesn't like it when this happens, seems like
it should be able to handle this case and not enter the error handler.

>>Error: Unknown slot to constructor or alterant macro: ROTATED-OBJECT-BLOCKS in (ALTER-ROTATION (FIRST FREE-SPACE) ROTATION-FREE-BLOCK-TREE (DELETE-BLOCKLIST-FROM-FREE-BLOCK-TREE (ROTATION-FREE-BLOCK-TREE (FIRST FREE-SPACE)) GROWN-BLOCKS) ROTATED-OBJECT-BLOCKS (DELETE-BLOCKLIST-FROM-FREE-SPACE (REST FREE-SPACE) (GROWN-BLOCKS)))
While in the function SI:DEFSTRUCT-MAKE-INIT-DSC  SI:DEFSTRUCT-PARSE-SETQ-STYLE-SLOTS  SI:DEFSTRUCT-EXPAND-ALTER-MACRO
While compiling DELETE-BLOCKLIST-FROM-FREE-SPACE

SI:DEFSTRUCT-MAKE-INIT-DSC:  (P.C. = 51)
   Arg 0 (KLUDGE): (((3 T (DELETE-BLOCKLIST-FROM-FREE-BLOCK-TREE ** GROWN-BLOCKS) 0 0)))
   Arg 1 (NAME): ROTATED-OBJECT-BLOCKS
   Arg 2 (CODE): (DELETE-BLOCKLIST-FROM-FREE-SPACE (REST FREE-SPACE) (GROWN-BLOCKS))
   Arg 3 (SLOTS): ((ROTATION-ANGLES 0 NIL SI:%%DEFSTRUCT-EMPTY%% SI:NOTYPE NIL ROTATION-ANGLES) (ROTATION-ROTATED-OBJECT-BLOCKS 1 NIL SI:%%DEFSTRUCT-EMPTY%% SI:NOTYPE NIL ROTATION-ROTATED-OBJECT-BLOCKS) (ROTATION-GROWN-BLOCKS 2 NIL SI:%%DEFSTRUCT-EMPTY%% SI:NOTYPE NIL ROTATION-GROWN-BLOCKS) (ROTATION-FREE-BLOCK-TREE 3 NIL SI:%%DEFSTRUCT-EMPTY%% SI:NOTYPE NIL ROTATION-FREE-BLOCK-TREE) (ROTATION-NEIGHBORS 4 NIL SI:%%DEFSTRUCT-EMPTY%% SI:NOTYPE NIL ROTATION-NEIGHBORS) (ROTATION-EXPANDED 5 NIL SI:%%DEFSTRUCT-EMPTY%% SI:NOTYPE NIL ROTATION-EXPANDED) (ROTATION-MARK 6 NIL NIL SI:NOTYPE NIL ROTATION-MARK))
   Arg 4 (OTHERS): NIL
   Arg 5 (X): (ALTER-ROTATION (FIRST FREE-SPACE) ROTATION-FREE-BLOCK-TREE (DELETE-BLOCKLIST-FROM-FREE-BLOCK-TREE (ROTATION-FREE-BLOCK-TREE (FIRST FREE-SPACE)) GROWN-BLOCKS) ROTATED-OBJECT-BLOCKS (DELETE-BLOCKLIST-FROM-FREE-SPACE (REST FREE-SPACE) (GROWN-BLOCKS)))
   Local 6 (P): NIL
   Local 7 (NEW): :ROTATED-OBJECT-BLOCKS

SI:DEFSTRUCT-PARSE-SETQ-STYLE-SLOTS:  (P.C. = 32)
   Arg 0 (L): (ROTATION-FREE-BLOCK-TREE (DELETE-BLOCKLIST-FROM-FREE-BLOCK-TREE (ROTATION-FREE-BLOCK-TREE (FIRST FREE-SPACE)) GROWN-BLOCKS) ROTATED-OBJECT-BLOCKS (DELETE-BLOCKLIST-FROM-FREE-SPACE (REST FREE-SPACE) (GROWN-BLOCKS)))
   Arg 1 (SLOTS): ((ROTATION-ANGLES 0 NIL SI:%%DEFSTRUCT-EMPTY%% SI:NOTYPE NIL ROTATION-ANGLES) (ROTATION-ROTATED-OBJECT-BLOCKS 1 NIL SI:%%DEFSTRUCT-EMPTY%% SI:NOTYPE NIL ROTATION-ROTATED-OBJECT-BLOCKS) (ROTATION-GROWN-BLOCKS 2 NIL SI:%%DEFSTRUCT-EMPTY%% SI:NOTYPE NIL ROTATION-GROWN-BLOCKS) (ROTATION-FREE-BLOCK-TREE 3 NIL SI:%%DEFSTRUCT-EMPTY%% SI:NOTYPE NIL ROTATION-FREE-BLOCK-TREE) (ROTATION-NEIGHBORS 4 NIL SI:%%DEFSTRUCT-EMPTY%% SI:NOTYPE NIL ROTATION-NEIGHBORS) (ROTATION-EXPANDED 5 NIL SI:%%DEFSTRUCT-EMPTY%% SI:NOTYPE NIL ROTATION-EXPANDED) (ROTATION-MARK 6 NIL NIL SI:NOTYPE NIL ROTATION-MARK))
   Arg 2 (OTHERS): NIL
   Arg 3 (X): (ALTER-ROTATION (FIRST FREE-SPACE) ROTATION-FREE-BLOCK-TREE (DELETE-BLOCKLIST-FROM-FREE-BLOCK-TREE (ROTATION-FREE-BLOCK-TREE (FIRST FREE-SPACE)) GROWN-BLOCKS) ROTATED-OBJECT-BLOCKS (DELETE-BLOCKLIST-FROM-FREE-SPACE (REST FREE-SPACE) (GROWN-BLOCKS)))

SI:DEFSTRUCT-EXPAND-ALTER-MACRO:  (P.C. = 42)
   Arg 0 (X): (ALTER-ROTATION (FIRST FREE-SPACE) ROTATION-FREE-BLOCK-TREE (DELETE-BLOCKLIST-FROM-FREE-BLOCK-TREE (ROTATION-FREE-BLOCK-TREE (FIRST FREE-SPACE)) GROWN-BLOCKS) ROTATED-OBJECT-BLOCKS (DELETE-BLOCKLIST-FROM-FREE-SPACE (REST FREE-SPACE) (GROWN-BLOCKS)))

FUNCALL:  (P.C. = 5)
   Arg 0 (FN): SI:DEFSTRUCT-EXPAND-ALTER-MACRO
   Rest arg (ARGS): ((ALTER-ROTATION (FIRST FREE-SPACE) ROTATION-FREE-BLOCK-TREE (DELETE-BLOCKLIST-FROM-FREE-BLOCK-TREE (ROTATION-FREE-BLOCK-TREE **) GROWN-BLOCKS) ROTATED-OBJECT-BLOCKS (DELETE-BLOCKLIST-FROM-FREE-SPACE (REST FREE-SPACE) (GROWN-BLOCKS))))

MACROEXPAND-1:  (P.C. = 146)
   Arg 0 (MACRO-CALL): (ALTER-ROTATION (FIRST FREE-SPACE) ROTATION-FREE-BLOCK-TREE (DELETE-BLOCKLIST-FROM-FREE-BLOCK-TREE (ROTATION-FREE-BLOCK-TREE (FIRST FREE-SPACE)) GROWN-BLOCKS) ROTATED-OBJECT-BLOCKS (DELETE-BLOCKLIST-FROM-FREE-SPACE (REST FREE-SPACE) (GROWN-BLOCKS)))
   --Defaulted args:--
   Arg 1 (IGNORE): NIL

COMPILER:TRANSFORM:  (P.C. = 437)
   Arg 0 (FORM): (ALTER-ROTATION (FIRST FREE-SPACE) ROTATION-FREE-BLOCK-TREE (DELETE-BLOCKLIST-FROM-FREE-BLOCK-TREE (ROTATION-FREE-BLOCK-TREE (FIRST FREE-SPACE)) GROWN-BLOCKS) ROTATED-OBJECT-BLOCKS (DELETE-BLOCKLIST-FROM-FREE-SPACE (REST FREE-SPACE) (GROWN-BLOCKS)))
   Arg 1 (DESTINATION): RETURN
   --Defaulted args:--
   Arg 2 (TRANSFORM-P): T
   Arg 3 (OPTIMIZE-P): T

COMPILER:PHASE-1:  (P.C. = 15)
   Arg 0 (FORM): (ALTER-ROTATION (FIRST FREE-SPACE) ROTATION-FREE-BLOCK-TREE (DELETE-BLOCKLIST-FROM-FREE-BLOCK-TREE (ROTATION-FREE-BLOCK-TREE (FIRST FREE-SPACE)) GROWN-BLOCKS) ROTATED-OBJECT-BLOCKS (DELETE-BLOCKLIST-FROM-FREE-SPACE (REST FREE-SPACE) (GROWN-BLOCKS)))
   Arg 1 (DESTINATION): RETURN
   --Defaulted args:--
   Arg 2 (DO-TRANSFORM): T

COMPILER:PHASE-1-PROGN:  (P.C. = 27)
   Arg 0 (FORMS): ((ALTER-ROTATION (FIRST FREE-SPACE) ROTATION-FREE-BLOCK-TREE (DELETE-BLOCKLIST-FROM-FREE-BLOCK-TREE (ROTATION-FREE-BLOCK-TREE **) GROWN-BLOCKS) ROTATED-OBJECT-BLOCKS (DELETE-BLOCKLIST-FROM-FREE-SPACE (REST FREE-SPACE) (GROWN-BLOCKS))))
   Arg 1 (DESTINATION): RETURN

Rest of stack:
(:PROPERTY COND COMPILER:PHASE-1):  (P.C. = 44)
COMPILER:PHASE-1:  (P.C. = 245)
COMPILER:PHASE-1-PROGN:  (P.C. = 27)
COMPILER:PHASE-1-FUNCTION-DEFINITION:  (P.C. = 250)
COMPILER:PHASE-1-EXTERNAL-FUNCTION:  (P.C. = 24)
COMPILER:RUN-PHASE-1-FUNCTION:  (P.C. = 67)
COMPILER:COMPILE-DEFINITION-1:  (P.C. = 10)
COMPILER:COMPILE-DEFINITION:  (P.C. = 43)
(:INTERNAL COMPILER:COMPILE-TO-FILE 0):  (P.C. = 4)
COMPILER:COMPILE-TO-FILE:  (P.C. = 12)
COMPILER:COMPILE-FORM-FUNCTION:  (P.C. = 41)
COMPILER:COMPILE-FROM-STREAM-1:  (P.C. = 306)
COMPILER:PROCESS-FORMS-FROM-STREAM:  (P.C. = 117)
COMPILER:COMPILE-FROM-STREAM:  (P.C. = 235)
COMPILER:COMPILE-FILE:  (P.C. = 241)
ZWEI:COM-LOAD-FILE:  (P.C. = 106)
ZWEI:COM-EXTENDED-COMMAND:  (P.C. = 27)
ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 214)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 41)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
 4-Apr-85 23:43:41-EST,2339;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 4 Apr 85 23:43-EST
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 209452; Thu 4-Apr-85 23:40:15-EST
Date: Thursday, 4 April 1985, 23:41-EST
From: David A. Moon <Moon at SCRC-STONY-BROOK>
Subject: LET-IF not using the environment its called with....
To: Ken Haase <KWH at OZ>
cc: BUG-LISPM at OZ, HOSS at SCRC-STONY-BROOK
In-Reply-To: <850404231716.2.KWH@JANIS.MIT.EDU>
Message-ID: <850404234137.5.MOON@EUPHRATES.SCRC.Symbolics.COM>

    Date: Thursday, 4 April 1985, 23:17-EST
    From: Ken Haase <KWH at OZ>

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.8,
    Experimental Meta Representation Langauge 2.10, microcode TMC5-MIC 319, on Lisp Machine Janis Joplin:

    This happened in the midst of a macro-expansion which referenced
    CONDITION-CASE, expanding into LET-IF inside of WITH-STACK-LIST*.  You
    can see in the second frame that LET-IF is trying to bind
    DBG:*BOUND-HANDLERS* to #:G0426, which it complains (and this is the
    signalled condition) is unbound.  However, if we look in the environment
    handed to the LET-IF (supposing that I am reading the environment
    correctly, i.e. as an alist) we see that it was indeed passed a value
    for #:G0426, precisely the value:
       (#<CASE-HANDLER 23273305> #<LEXICAL-CLOSURE ** 43440053>)
    computed in the WITH-STACK-LIST* above it.  Maybe evaluated LET-IF
    doesn't know about lexical scoping yet?

    This bug can be reliably reproduced by trying to compile the file
    "OZ:<LMLIB>PP-6.LISP".

Thank you for the report!  I believe your analysis.  I think the
fundamental problem is that PROGW (which LET-IF uses) is unworkable, as
currently defined, in a lexically scoped language.  We'll have to think
about this for the next release; probably we will replace PROGW with a
new special form (what's next? PROGX?) and change most of its callers.

A workaround that I think will work is to move your FAST-FORMAT macro
into a separate file, so that it can be compiled and the compiled version
loaded before trying to compile the PP-6 file.  This should work since the
bug is only in the interpreted version of LET-IF.  Maybe it's time we fixed
the compiler to run macro-expansion functions compiled, by the way.
 5-Apr-85 09:49:07-EST,2515;000000000000
Received: from SCC-WAIKATO by MIT-OZ via Chaosnet; 5 Apr 85 09:49-EST
Received: from SCC-SNOWBIRD by WAIKATO via CHAOS with CHAOS-MAIL id 91194; Fri 5-Apr-85 09:47:37-EST
Date: Friday, 5 April 1985, 09:47-EST
From:  <ROULEAU at SCRC-VIXEN>
Subject: lennon still has problems after being "fixed"
To: Moon at SCRC-STONY-BROOK, CJL at OZ
Cc: bug-symbolics-hardware at OZ, bug-lispm at OZ
In-reply-to: <850404195555.0.MOON@EUPHRATES.SCRC.Symbolics.COM>

    Date: Thursday, 4 April 1985, 19:55-EST
    From: David A. Moon <Moon at SCRC-STONY-BROOK>

    The symptoms look a little bit like a problem we saw on a couple of
    machines here, which apparently went away of its own accord.  It might
    have been temperature-related.  The problem was that a FAST-AREF
    instruction in a function of the paging system (si:load-flushc in the
    case you sent mail about) was mis-executed, so that it accessed the
    wrong stack location to get the particulars of the array register, and
    consequently accessed the wrong data when it should have fetched from
    the array.  From looking at the disassembled code I believe the wrong
    data in your case is the result of a FAST-AREF instruction a few
    instructions earlier in the function.

    If this is what is happening to you, the symptom will probably be
    slightly different on each crash, and will often be a double-bit error
    accessing non-existent memory (syndrome 70) when the FAST-AREF picks up
    an address that doesn't even point to existent memory.

    I suspect that the fault lies on the TMC board, but that's only a guess,
    and I don't know what field service has done with Lennon.  They should
    certainly have checked temperature, airflow, and power supplies, but
    sometimes people forget that so you might remind them.

    I also endorse the advice in Bob Cassels' response to you.

I assisted Mark Robbins yesterday in resolving 2 problems on Lennon.

Problem 1. This was the original problem which is that the disk drive
	   does not start up. The problem was caused by a loose
	   connection on the disk drive.
Problem 2. Sparse load compare error when loading the world (a 5.2 world
           in this case). The TMC board was replaced to eliminate this
	   problem.
 We in Customer Service do not have the training to use the debugger
and other such tools, but given the information supplied herein it
would appear that the replacement TMC board may be causing the problem.
 5-Apr-85 12:08:37-EST,2654;000000000000
Received: from MIT-ROBOT-2 by MIT-OZ via Chaosnet; 5 Apr 85 12:07-EST
Date: Friday, 5 April 1985, 12:06-EST
From: Patrick A. O'Donnell <PAO at MIT-EECS>
Subject: Document examiner problem
To: BUG-LISPM at OZ
Message-ID: <850405120643.1.PAO@ROBOT-2.MIT.EDU>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.8,
Experimental NS 23.61, microcode TMC5-MIC 319, FEP 18, on Lisp Machine Robot-2:

I started entering a command, then typed the HELP key, decided I didn't
need help at that point, so C-ABORTed.  Later typing HELP elicits this
response:

>>Trap: The variable SAGE:=DEX-COMMAND-HELP-SOURCE= is unbound.
While in the function SAGE:DEX-DOC-LINE-SOURCE  SAGE:DEX-HELP-FOR-COMMANDS  (:METHOD SAGE:DEX :COM-HELP)

SAGE:DEX-DOC-LINE-SOURCE:  (P.C. = 71)

SAGE:DEX-HELP-FOR-COMMANDS:  (P.C. = 24)

(:METHOD SAGE:DEX :COM-HELP):  (P.C. = 2)
   Arg 0 (SELF): #<DEX-FRAME Dex Frame 1 43200064 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SAGE:DEX -- 7. IV's, 3. FL's 104333716>
   Arg 2 (OPERATION): :COM-HELP
   Arg 3 (IGNORE): NIL

(:METHOD SAGE:DEX :COMMAND-CHAR):  (P.C. = 53)
   Arg 0 (SELF): #<DEX-FRAME Dex Frame 1 43200064 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SAGE:DEX -- 7. IV's, 3. FL's 104333716>
   Arg 2 (OPERATION): :COMMAND-CHAR
   Arg 3 (CHAR): 134
   Arg 4 (NUMERIC-ARG): NIL

SAGE:DEX-IE-COMMAND:  (P.C. = 10)
   Arg 0 (CODE): 134

(:DEFUN-METHOD SI:STANDARD-INPUT-EDITOR-TYI):  (P.C. = 332)
   Arg 0 (SELF): #<DEX-COMMAND-PANE Dex Command Pane 1 43244264 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:INTERACTIVE-STREAM -- 20. IV's, 2. FL's 104371344>
   Arg 2: NIL

SI:STANDARD-INPUT-EDITOR-TYI:  (P.C. = 12)
   Rest arg (ARGS): (NIL)

SI:INPUT-EDITOR-INVOKE:  (P.C. = 11)
   Arg 0 (OPERATION): TYI
   Local 0 (OPERATION): SI:STANDARD-INPUT-EDITOR-TYI
   Rest arg (ARGS): (NIL)

Rest of stack:
(:METHOD SI:INTERACTIVE-STREAM :WHOPPER :ANY-TYI):  (P.C. = 67)
(:METHOD TV:WINDOW :COMBINED :ANY-TYI):  (P.C. = 13)
SAGE:TYI-CLOSING-OPEN-STREAMS-AT-TIMEOUT:  (P.C. = 11)
(:INTERNAL (:METHOD SAGE:DEX :READ-COMPLETED-STRING) 0):  (P.C. = 3)
(:DEFUN-METHOD SI:INPUT-EDITOR-READ):  (P.C. = 53)
(:METHOD SI:INTERACTIVE-STREAM :INPUT-EDITOR):  (P.C. = 131)
SI:WITH-INPUT-EDITING-INTERNAL:  (P.C. = 113)
(:METHOD SAGE:DEX :READ-COMPLETED-STRING):  (P.C. = 276)
(:METHOD SAGE:DEX :READ-COMMAND):  (P.C. = 25)
(:INTERNAL (:METHOD SAGE:DEX :COMMAND-LOOP) 0 SAGE:DOIT):  (P.C. = 4)
(:METHOD SAGE:DEX :COMMAND-LOOP):  (P.C. = 55)
(:METHOD SAGE:DEX :TOPLEVEL):  (P.C. = 255)
SAGE:DEX-TOPLEVEL:  (P.C. = 4)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
 5-Apr-85 12:37:43-EST,7838;000000000000
Received: from MIT-DUANE by MIT-OZ via Chaosnet; 5 Apr 85 12:37-EST
Date: Friday, 5 April 1985, 12:36-EST
From: David Chapman <Zvona at OZ>
Subject: Someone should clear the cache
To: BUG-LISPM at OZ
Message-ID: <850405123620.4.ZVONA@DUANE.MIT.EDU>

In Symbolics 3670 Release 6.0, IP-TCP 29.0, AISite 7.8,
microcode TMC5-IO4-MIC 319, FEP 22, on Lisp Machine Duane Allman:

Trying to send mail.  It claims not to be able to contact any
store-and-forward mail server, do I want to send direct?  Yes.  ``OZ is
believed to be down or unavailable.''  Uh-uh.  It's up and I can c-X c-F
from it.  Someone's belief revision algorithm needs a little work. 
(Reset Network didn't help, in case that's relevant.) 

>>Error: OZ is believed to be down or unavailable.
While in the function NETI:INVOKE-SERVICE-ACCESS-PATH-WITH-CACHED-UNAVAILABILITY  ZWEI:INVOKE-MAIL-SERVICE  ZWEI:NETWORK-SEND-IT-2

NETI:INVOKE-SERVICE-ACCESS-PATH-WITH-CACHED-UNAVAILABILITY:  (P.C. = 42)
   Arg 0 (SERVICE-ACCESS-PATH): #<SERVICE-ACCESS-PATH MAIL-TO-USER (CHAOS-MAIL) -- OZ on CHAOS 12763272>
   Arg 1 (TIMEOUT): 18000
   Arg 2 (SERVICE-ARGS): NIL

ZWEI:INVOKE-MAIL-SERVICE:  (P.C. = 10)
   Arg 0 (SERVICE-ACCESS-PATH): #<SERVICE-ACCESS-PATH MAIL-TO-USER (CHAOS-MAIL) -- OZ on CHAOS 12763272>
   Arg 1 (RECIPIENTS): ((:NAME "Bug-Zwei" :HOST (:OBJECT #<TOPS20-HOST OZ 1140441>)
                         :ORIGINAL-INTERVAL (("To: Bug-Zwei" 4) ("To: Bug-Zwei" 12))
                         :HOST-DEFAULTED T))
   Arg 2 (TEMPLATE-EXPANSION): (:TEXT #<NODE 12763144> :HEADERS
                                (:DATE 2690559183 :FROM ((:USER #<USER ZVONA 1152517>))
                                 :SUBJECT "m-X completing reader -- counterintuitive behavior"
                                 :TO
                                 ((:NAME "Bug-Zwei" :HOST ** :ORIGINAL-INTERVAL **
                                   :HOST-DEFAULTED T))
                                 :MESSAGE-ID "<850405123303.3.ZVONA@DUANE.MIT.EDU>")
                                :HEADER-FORMAT :INCLUDE-PERSONAL :TRANSMIT-TIME 2690559183
                                :DRAFT-MSG #<ZMACS-DRAFT-MSG 12763157>)

ZWEI:NETWORK-SEND-IT-2:  (P.C. = 503)
   Arg 0 (RECIPIENTS): ((:NAME "Bug-Zwei" :HOST (:OBJECT #<TOPS20-HOST OZ 1140441>)
                         :ORIGINAL-INTERVAL (("To: Bug-Zwei" 4) ("To: Bug-Zwei" 12))
                         :HOST-DEFAULTED T))
   Arg 1 (TEMPLATE-EXPANSION): (:TEXT #<NODE 12763144> :HEADERS
                                (:DATE 2690559183 :FROM ((:USER #<USER ZVONA 1152517>))
                                 :SUBJECT "m-X completing reader -- counterintuitive behavior"
                                 :TO
                                 ((:NAME "Bug-Zwei" :HOST ** :ORIGINAL-INTERVAL **
                                   :HOST-DEFAULTED T))
                                 :MESSAGE-ID "<850405123303.3.ZVONA@DUANE.MIT.EDU>")
                                :HEADER-FORMAT :INCLUDE-PERSONAL :TRANSMIT-TIME 2690559183
                                :DRAFT-MSG #<ZMACS-DRAFT-MSG 12763157>)

ZWEI:NETWORK-SEND-IT-1:  (P.C. = 234)
   Arg 0 (SERVICES): (#<SERVICE-ACCESS-PATH STORE-AND-FORWARD-MAIL (CHAOS-MAIL) -- OZ on CHAOS 12763242>)
   Arg 1 (RECIPIENTS): ((:NAME "Bug-Zwei" :HOST (:OBJECT #<TOPS20-HOST OZ 1140441>)
                         :ORIGINAL-INTERVAL (("To: Bug-Zwei" 4) ("To: Bug-Zwei" 12))
                         :HOST-DEFAULTED T))
   Arg 2 (TEMPLATE-EXPANSION): (:TEXT #<NODE 12763144> :HEADERS
                                (:DATE 2690559183 :FROM ((:USER #<USER ZVONA 1152517>))
                                 :SUBJECT "m-X completing reader -- counterintuitive behavior"
                                 :TO
                                 ((:NAME "Bug-Zwei" :HOST ** :ORIGINAL-INTERVAL **
                                   :HOST-DEFAULTED T))
                                 :MESSAGE-ID "<850405123303.3.ZVONA@DUANE.MIT.EDU>")
                                :HEADER-FORMAT :INCLUDE-PERSONAL :TRANSMIT-TIME 2690559183
                                :DRAFT-MSG #<ZMACS-DRAFT-MSG 12763157>)

ZWEI:NETWORK-SEND-IT:  (P.C. = 132)
   Arg 0 (RECIPIENTS): ((:NAME "Bug-Zwei" :HOST (:OBJECT #<TOPS20-HOST OZ 1140441>)
                         :ORIGINAL-INTERVAL (("To: Bug-Zwei" 4) ("To: Bug-Zwei" 12))
                         :HOST-DEFAULTED T))
   Arg 1 (TEMPLATE-EXPANSION): (:TEXT #<NODE 12763144> :HEADERS
                                (:DATE 2690559183 :FROM ((:USER #<USER ZVONA 1152517>))
                                 :SUBJECT "m-X completing reader -- counterintuitive behavior"
                                 :TO
                                 ((:NAME "Bug-Zwei" :HOST ** :ORIGINAL-INTERVAL **
                                   :HOST-DEFAULTED T))
                                 :MESSAGE-ID "<850405123303.3.ZVONA@DUANE.MIT.EDU>")
                                :HEADER-FORMAT :INCLUDE-PERSONAL :TRANSMIT-TIME 2690559183
                                :DRAFT-MSG #<ZMACS-DRAFT-MSG 12763157>)

ZWEI:FUNCALL-TEMPLATE-EXPANSION:  (P.C. = 47)
   Arg 0 (TEMPLATE-EXPANSION): (:TEXT #<NODE 12763144> :HEADERS
                                (:DATE 2690559183 :FROM ((:USER #<USER ZVONA 1152517>))
                                 :SUBJECT "m-X completing reader -- counterintuitive behavior"
                                 :TO
                                 ((:NAME "Bug-Zwei" :HOST ** :ORIGINAL-INTERVAL **
                                   :HOST-DEFAULTED T))
                                 :MESSAGE-ID "<850405123303.3.ZVONA@DUANE.MIT.EDU>")
                                :HEADER-FORMAT :INCLUDE-PERSONAL :TRANSMIT-TIME 2690559183
                                :DRAFT-MSG #<ZMACS-DRAFT-MSG 12763157>)
   Arg 1 (FUNCTION): ZWEI:NETWORK-SEND-IT
   Rest arg (ARGS): (((:NAME "Bug-Zwei" :HOST (:OBJECT #<TOPS20-HOST OZ 1140441>)
                       :ORIGINAL-INTERVAL (** **) :HOST-DEFAULTED T))
                     (:TEXT #<NODE 12763144> :HEADERS
                      (:DATE 2690559183 :FROM (**) :SUBJECT
                       "m-X completing reader -- counterintuitive behavior" :TO (**)
                       :MESSAGE-ID "<850405123303.3.ZVONA@DUANE.MIT.EDU>")
                      :HEADER-FORMAT :INCLUDE-PERSONAL :TRANSMIT-TIME 2690559183 :DRAFT-MSG
                      #<ZMACS-DRAFT-MSG 12763157>))

(:METHOD ZWEI:BASIC-DRAFT-MSG :TRANSMIT):  (P.C. = 315)
   Arg 0 (SELF): #<ZMACS-DRAFT-MSG 12763157>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:BASIC-DRAFT-MSG -- 7. IV's, 0. FL's 143323653>
   Arg 2 (OPERATION): :TRANSMIT

(:METHOD ZWEI:ZMACS-DRAFT-MSG :COMBINED :TRANSMIT):  (P.C. = 36)
   Arg 0 (SELF): #<ZMACS-DRAFT-MSG 12763157>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMACS-DRAFT-MSG -- 1. IV's, 2. FL's 143323663>
   Arg 2 (.OPERATION.): :TRANSMIT
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

ZWEI:MAKE-DRAFT-AND-TRANSMIT:  (P.C. = 11)
   Arg 0 (DRAFT-FLAVOR): ZWEI:ZMACS-DRAFT-MSG
   Rest arg (INIT-KEYWORDS): (:HEADERS
                              (:TO
                               ((:NAME "Bug-Zwei" :HOST ** :ORIGINAL-INTERVAL **
                                 :HOST-DEFAULTED T))
                               :SUBJECT "m-X completing reader -- counterintuitive behavior")
                              :TEXT #<NODE 12763144> :FONT-ALIST NIL :BUG-REPORT T)

ZWEI:SEND-MESSAGE:  (P.C. = 43)
   Arg 0 (HEADER-BP1): ("To: Bug-Zwei" 0 :NORMAL)
   Arg 1 (HEADER-BP2): ("--Text follows this line--" 0)
   Arg 2 (HEADER-IN-ORDER-P): T
   Arg 3 (TEXT-BP1): ("In Symbolics 3670 Zwei in Release 6.0, IP-TCP 29.0, AISite 7.8," 0)
   Arg 4 (TEXT-BP2): ("sequences is a lot more important. " 35 :MOVES)
   Arg 5 (TEXT-IN-ORDER-P): T
 5-Apr-85 14:47:38-EST,1316;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 5 Apr 85 14:47-EST
Received: from SCRC-THAMES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 209782; Fri 5-Apr-85 14:45:41-EST
Date: Friday, 5 April 1985, 14:48-EST
From: Scott McKay <SWM at SCRC-QUABBIN>
Subject: Someone should clear the cache
To: Zvona at OZ, BUG-LISPM at OZ
In-Reply-To: <850405123620.4.ZVONA@DUANE.MIT.EDU>
Message-ID: <850405144806.2.SWM@THAMES.SCRC.Symbolics.COM>

    Date: Friday, 5 April 1985, 12:36-EST
    From: David Chapman <Zvona at OZ>

    In Symbolics 3670 Release 6.0, IP-TCP 29.0, AISite 7.8,
    microcode TMC5-IO4-MIC 319, FEP 22, on Lisp Machine Duane Allman:

    Trying to send mail.  It claims not to be able to contact any
    store-and-forward mail server, do I want to send direct?  Yes.  ``OZ is
    believed to be down or unavailable.''  Uh-uh.  It's up and I can c-X c-F
    from it.  Someone's belief revision algorithm needs a little work. 
    (Reset Network didn't help, in case that's relevant.) 

    >>Error: OZ is believed to be down or unavailable.
    While in the function NETI:INVOKE-SERVICE-ACCESS-PATH-WITH-CACHED-UNAVAILABILITY  ZWEI:INVOKE-MAIL-SERVICE  ZWEI:NETWORK-SEND-IT-2

(neti:reset-all-host-availabilities) will do the trick (if you can
manage to type it!).
 5-Apr-85 15:59:41-EST,1165;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 5 Apr 85 15:59-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 209825; Fri 5-Apr-85 15:50:11-EST
Date: Friday, 5 April 1985, 15:48-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: out of sync sources?
To: David Chapman <Zvona at OZ>, BUG-LISPM at OZ
In-Reply-To: <850404222645.2.ZVONA@DUANE.MIT.EDU>
Message-ID: <850405154843.1.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Thursday, 4 April 1985, 22:26-EST
    From: David Chapman <Zvona at OZ>

    In Symbolics 3670 Release 6.0, IP-TCP 29.0, AISite 7.8,
    microcode TMC5-IO4-MIC 319, FEP 22, on Lisp Machine Duane Allman:

    m-. can't find compiler:file-declaration.  Do we have souces that are
    out of sync with the wold load?  Can this be fixed?

It was a conscious decision not to ship all sources to all customers,
which will be explained in the cover letter (which will hopefully back
from the printers soon).

I have been told that arrangements can be made for you to get the
sources you need.  Hopefully the appropriate person will get in touch
with you on this.
 5-Apr-85 16:53:42-EST,1042;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 5 Apr 85 16:48-EST
Received: from SCRC-PEACE by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 209866; Fri 5-Apr-85 16:23:40-EST
Date: Fri, 5 Apr 85 16:25 EST
From: Charles Hornig <Hornig@STONY-BROOK.SCRC.Symbolics.COM>
Subject: namespace lossage
To: David Chapman <Zvona@OZ.MIT.EDU>, BUG-LISPM@OZ.MIT.EDU
In-Reply-To: The message of 23 Mar 85 21:03-EST from David Chapman <Zvona@OZ.MIT.EDU>
Message-ID: <850405162506.3.HORNIG@PEACE.SCRC.Symbolics.COM>

    Date: Saturday, 23 March 1985, 21:03-EST
    From: David Chapman <Zvona at OZ>

    In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 24, on Lisp Machine Janis Joplin:

    I found this machine cold-booted in this state:

    >>Error: The object (:HOST #<NAME SWW|RR 15477044> #<NAMESPACE SWW 15140220>) is not a valid function
    While in the function (:HOST #<NAME SWW|RR 15477044> #<NAMESPACE SWW 15140220>)  NET:FIND-PATHS-TO-SERVICE-ON-HOST  NETI:FIND-PATH-TO-SERVICE-ON-HOST

Fixed in release 6.
 5-Apr-85 18:04:35-EST,458;000000000000
Received: from 13063 by MIT-OZ via Chaosnet; 5 Apr 85 18:04-EST
Date: Friday, 5 April 1985, 18:03-EST
From: David Chapman <Zvona at OZ>
Subject: 20X logical devices?
To: BUG-LISPM at OZ
Message-ID: <850405180323.7.ZVONA@DUANE.MIT.EDU>

In Symbolics 3670 Release 6.0, IP-TCP 29.0, AISite 7.8,
microcode TMC5-IO4-MIC 319, FEP 22, on Lisp Machine Duane Allman:

Wasn't rel 6 supposed to support 20X logical devices?  They don't seem
to work for me.
 5-Apr-85 19:46:26-EST,865;000000000000
Received: from MIT-SMOKEY by MIT-OZ via Chaosnet; 5 Apr 85 19:46-EST
Date: Friday, 5 April 1985, 19:45-EST
From: Scott Cyphers <sr.ehpyc at MIT-SPEECH>
Subject: Ancient Goldy bug
To: BUG-LISPM at OZ
Message-ID: <850405194515.3.CYPHER@MIT-SMOKEY.MIT.EDU>

In Symbolics 3670 Release 6.0, IP-TCP 29.0, Experimental ZOO 5.0,
Experimental Spire-Macros 5.1, Experimental Attribute 5.0,
Experimental Compute 5.0, Experimental Audio 4.0,
Experimental Speech-Attributes 4.0, Experimental Display 6.0,
Experimental Speech-Layouts 6.0, Experimental Prtout 4.0,
Experimental Versatec 5.0, Experimental Spire 16.0, ZOO-SPIRE 1.0,
microcode TMC5-IO4-FPA-MIC 319, on Lisp Machine Smokey:

This has been around for a long time -- how can I delete this file?

>>Error:  Bad partition index 1835011 in Hierarchy DEFAULT
         For GOLDY:>s>spire>nlayout.lisp.70
 5-Apr-85 23:43:33-EST,722;000000000000
Received: from MIT-APIARY-4 by MIT-OZ via Chaosnet; 5 Apr 85 23:43-EST
Date: Friday, 5 April 1985, 23:42-EST
From: David M. J. Saslav <saz at OZ>
Subject: Logging out other file jobs
To: Bug-Lispm at OZ
Message-ID: <850405234257.1.SAZ@APIARY-4.MIT.EDU>

In Symbolics 3600 Command processing in Release 6.0, IP-TCP 29.0,
AISite 7.8, microcode TMC5-MIC 319, FEP 18, on Lisp Machine Apiary-4:

I would find it useful to be able to log out some other Lisp
Machine connection of mine from the CP.  It would seem a logical
new "keyword" to the "Logout" command.  I assume string matching
can be used to make sure that the job being logged out is logged
in as the same person doing the logging out.  Right?

saz
 6-Apr-85 03:10:35-EST,963;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 6 Apr 85 03:10-EST
Received: from MIT-MORRISON by MIT-MC via Chaosnet; 6 APR 85  03:10:05 EST
Date: Saturday, 6 April 1985, 03:09-EST
From: jcma@MIT-MC
Subject: Compiler Complaints From The Future
To: BUG-LISPM@OZ
Message-ID: <850406030952.4.JCMA@MORRISON.MIT.EDU>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.8,
microcode TMC5-MIC 319, FEP 22, on Lisp Machine James Morrison:

What's the dumb compiler warning about not returning multiple values in the
next release?  Why not wait until a future release to complain about it??

I'm not supposed to do (return v1 v2 ...) but rather (return (values v1 v2
....)).  Why not just use either VALUES or RETURN?  Better yet, why not just
leave it alone instead of introducing gratuitous incompatibility with other
systems?  This sure goes well with the software witholding policy.

SO, how do I turn off just the warnings about future releases?
 6-Apr-85 09:08:52-EST,4307;000000000000
Received: from MIT-APIARY-4 by MIT-OZ via Chaosnet; 6 Apr 85 09:08-EST
Date: Saturday, 6 April 1985, 09:07-EST
From: David M. J. Saslav <saz at OZ>
Subject: forwarding text separators
To: BUG-LISPM at OZ
Message-ID: <850406090756.2.SAZ@APIARY-4.MIT.EDU>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.8,
microcode TMC5-MIC 319, FEP 18, on Lisp Machine Apiary-4:

this one should be self explanatory, but i typed in 
the ascii "graphics" to the menu item Line before
forwarded message.

Where can I read about restrictions on characters
for these things?

dave

>>Error: Command fell off end of control string
                                     
             "|~~~~~~~~~~~~~~~~~~~~~~~"
While in the function FORMAT:FORMAT-PARSE-COMMAND  FORMAT:FORMAT-CTL-STRING  FORMAT

FORMAT:FORMAT-PARSE-COMMAND:  (P.C. = 515)
   Arg 0 (ARGS): (1)
   Arg 1 (SWALLOW-ARGS): T
   Local 2 (PARAM-FLAG): NIL
   Local 3 (START): 23
   Local 4 (CH): NIL
   Local 5 (TEM): NIL
   Local 6 (STR): NIL
   Local 7 (SYM): NIL
   Local 8 (PARAM): NIL
   Local 9 (PARAM-SIGN): NIL

FORMAT:FORMAT-CTL-STRING:  (P.C. = 72)
   Arg 0 (ARGS): (1)
   Arg 1: "|~~~~~~~~~~~~~~~~~~~~~~~"

FORMAT:  (P.C. = 66)
   Arg 0 (STREAM): #<INTERVAL-STREAM 41304565>
   Arg 1: "|~~~~~~~~~~~~~~~~~~~~~~~"
   Rest arg (ARGS): (1)

ZWEI:INSERT-TEXT-OF-MSGS:  (P.C. = 40)
   Arg 0 (MSGS): (#<MSG 1014271>)
   Arg 1 (BP): ("|~~~~~~~~~~~" 12 :MOVES)
   Arg 2 (FONT-ALIST): NIL
   Rest arg: (:BEGIN-LINE "|~~~~~~~~~~~~~~~~~~~~~~~" :SEPARATOR-LINE "" :END-LINE "|_______________________")

(:METHOD ZWEI:MSG-TEMPLATE-MIXIN :CASE :EXPANSION-KEYWORD :TEXT-FROM-MSGS):  (P.C. = 60)
   Arg 0 (SELF): #<COMPATIBLE-FORWARD-TEMPLATE COMPATIBLE-FORWARD-TEMPLATE>
   Arg 1 (SELF-MAPPING-TABLE): ZWEI:MSG-TEMPLATE-MIXIN
   Arg 2 (OPERATION): :TEXT-FROM-MSGS
   Arg 3 (PLIST): #<DTP-LOCATIVE 43640375>
   Rest arg (OPTIONS): (:BEGIN-LINE ZWEI:*FORWARDED-MESSAGE-BEGIN* :SEPARATOR-LINE ZWEI:*FORWARDED-MESSAGE-SEPARATOR* :END-LINE ZWEI:*FORWARDED-MESSAGE-END*)
   Local 4 (OPTIONS): (:BEGIN-LINE "|~~~~~~~~~~~~~~~~~~~~~~~" :SEPARATOR-LINE "" :END-LINE "|_______________________")

(:METHOD ZWEI:COMPATIBLE-FORWARD-TEMPLATE :COMBINED :EXPANSION-KEYWORD):  (P.C. = 42)
   Arg 0 (SELF): #<COMPATIBLE-FORWARD-TEMPLATE COMPATIBLE-FORWARD-TEMPLATE>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:COMPATIBLE-FORWARD-TEMPLATE -- 0. IV's, 6. FL's 142637570>
   Arg 2 (.OPERATION.): :EXPANSION-KEYWORD
   Rest arg (.DAEMON-CALLER-ARGS.): (:TEXT-FROM-MSGS #<DTP-LOCATIVE 43640375> :BEGIN-LINE ZWEI:*FORWARDED-MESSAGE-BEGIN* :SEPARATOR-LINE ZWEI:*FORWARDED-MESSAGE-SEPARATOR* :END-LINE ZWEI:*FORWARDED-MESSAGE-END*)

(:METHOD ZWEI:TEMPLATE :EXPAND):  (P.C. = 23)
   Arg 0 (SELF): #<COMPATIBLE-FORWARD-TEMPLATE COMPATIBLE-FORWARD-TEMPLATE>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:TEMPLATE -- 8. IV's, 0. FL's 142637542>
   Arg 2 (OPERATION): :EXPAND
   Arg 3 (PLIST): #<DTP-LOCATIVE 43640375>

(:METHOD ZWEI:FORWARD-TEMPLATE :COMBINED :EXPAND):  (P.C. = 26)
   Arg 0 (SELF): #<COMPATIBLE-FORWARD-TEMPLATE COMPATIBLE-FORWARD-TEMPLATE>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:FORWARD-TEMPLATE -- 0. IV's, 4. FL's 142637560>
   Arg 2 (.OPERATION.): :EXPAND
   Rest arg (.DAEMON-CALLER-ARGS.): (#<DTP-LOCATIVE 43640375>)

Rest of stack:
(:METHOD ZWEI:INDIRECT-TEMPLATE :EXPAND):  (P.C. = 6)
ZWEI:EXPAND-TEMPLATE:  (P.C. = 12)
ZWEI:COMPOSE-FROM-TEMPLATE:  (P.C. = 10)
ZWEI:COM-ZMAIL-FORWARD:  (P.C. = 17)
ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
ZWEI:ZMAIL-COMMAND-EXECUTE:  (P.C. = 6)
(:METHOD ZWEI:ZMAIL-FRAME :PROCESS-COMMAND-CHAR):  (P.C. = 7)
(:INTERNAL (:INTERNAL (:METHOD ZWEI:ZMAIL-FRAME :COMBINED :PROCESS-COMMAND-CHAR) 0) 0):  (P.C. = 10)
(:METHOD ZWEI:ZMAIL-COMMAND-LOOP-MIXIN :WHOPPER :PROCESS-COMMAND-CHAR):  (P.C. = 21)
(:INTERNAL (:METHOD ZWEI:ZMAIL-FRAME :COMBINED :PROCESS-COMMAND-CHAR) 0):  (P.C. = 13)
(:METHOD ZWEI:ZMAIL-FRAME :WHOPPER :PROCESS-COMMAND-CHAR):  (P.C. = 21)
(:METHOD ZWEI:ZMAIL-FRAME :COMBINED :PROCESS-COMMAND-CHAR):  (P.C. = 12)
(:METHOD ZWEI:ZMAIL-FRAME :COMMAND-LOOP):  (P.C. = 143)
(:METHOD ZWEI:ZMAIL-FRAME :COMBINED :COMMAND-LOOP):  (P.C. = 70)
ZWEI:ZMAIL-PROCESS-TOP-LEVEL:  (P.C. = 105)
PROCESS-TOP-LEVEL:  (P.C. = 54)
 6-Apr-85 18:08:51-EST,3500;000000000000
Received: from MIT-ROBOT-5 by MIT-OZ via Chaosnet; 6 Apr 85 18:08-EST
Date: Saturday, 6 April 1985, 18:08-EST
From: Henry Minsky <HQM at OZ>
Subject: fs:merge-pathnames didn't accept a symbol as pathname
To: BUG-LISPM at OZ
Message-ID: <"850406180839.1.HQM@OZ"@ROBOT-5.MIT.EDU>

In Symbolics 3670 Release 6.0, IP-TCP 29.0, AISite 7.8,
microcode TMC5-IO4-FPA-MIC 319, on Lisp Machine Robot-5:

The documentation said it would coerce a symbol using
fs:parse-pathname... but it barfed instead

>>Error: The first argument (THING) to FS:PARSE-PATHNAME, YOULOSE, was of the wrong type.
         The function expected a FS:PATHNAME, a list, or a string.
While in the function FS:PARSE-PATHNAME  FS:MERGE-PATHNAMES  SI:*EVAL

FS:PARSE-PATHNAME:  (P.C. = 317)
   Arg 0 (THING): YOULOSE
   Arg 1 (WITH-RESPECT-TO): NIL
   Arg 2 (DEFAULTS): "oz:<hqm.milan>foo.lisp"
   Local 3 (HOST-SPECIFIED): FS:THING
   Local 4 (START): YOULOSE
   Local 5 (END): (FS:PATHNAME :LIST :STRING)
   Local 6 (HOST): #<DTP-LOCATIVE 44240725>
   Local 7 (DEVICE): #<DTP-LOCATIVE 44240727>
   Local 8 (DIRECTORY): #<DTP-ODD-PC 11464324>
   Local 9 (NAME): 3
   Local 10 (TYPE): #<DTP-COMPILED-FUNCTION DBG:ARGUMENT-TYPECASE-1 7000054>
   Local 11 (VERSION): FS:THING
   Local 12 (OTHER-COMPONENTS): YOULOSE

FS:MERGE-PATHNAMES:  (P.C. = 31)
   Arg 0 (PATHNAME): YOULOSE
   Arg 1 (DEFAULTS): "oz:<hqm.milan>foo.lisp"
   --Defaulted args:--
   Arg 2 (DEFAULT-VERSION): :NEWEST

SI:*EVAL:  (P.C. = 403)
   Arg 0 (FORM): (FS:MERGE-PATHNAMES (QUOTE YOULOSE) "oz:<hqm.milan>foo.lisp")
   Local 0 (FORM): NIL
   --Defaulted args:--
   Arg 1 (ENV): NIL
   Arg 2 (HOOK): NIL

(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0):  (P.C. = 152)
   Arg 0 (.LEXICAL-ENVIRONMENT-POINTER.): #<DTP-LOCATIVE 44240573>

TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
   Arg 0 (NEW-MODE): :BLAST
   Arg 1 (STREAM): #:TERMINAL-IO-SYN-STREAM
   Arg 2 (CONTINUATION): #<LEXICAL-CLOSURE (:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0) 44240600>

SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
   Arg 0 (NAME): "Breakpoint BREAK"
   Arg 1 (ABORT-FUNCTION): SI:BREAK-HERALD
   Arg 2 (READ-FUNCTION): SI:BREAK-READ-FUNCTION
   --Defaulted args:--
   Arg 3 (EVAL-FUNCTION): NIL
   Arg 4 (PRINT-FUNCTION): NIL

SI:BREAK-INTERNAL:  (P.C. = 176)
   Arg 0 (TAG): BREAK
   Local 0 (TAG): "Breakpoint BREAK"
   Arg 1 (CONDITIONAL): T

SYS:KBD-INTERCEPT-CHARACTER:  (P.C. = 53)
   Arg 0 (CHAR): 129
   --Defaulted args:--
   Arg 1 (STREAM): #<DEX-TYPEOUT-WINDOW Dex Typeout Window 1 103101336 exposed>

Rest of stack:
(:DEFUN-METHOD SI:STANDARD-INPUT-EDITOR-TYI):  (P.C. = 361)
SI:STANDARD-INPUT-EDITOR-TYI:  (P.C. = 12)
SI:INPUT-EDITOR-INVOKE:  (P.C. = 11)
(:METHOD SI:INTERACTIVE-STREAM :WHOPPER :ANY-TYI):  (P.C. = 67)
(:METHOD TV:WINDOW :COMBINED :ANY-TYI):  (P.C. = 13)
SAGE:TYI-CLOSING-OPEN-STREAMS-AT-TIMEOUT:  (P.C. = 11)
(:INTERNAL (:METHOD SAGE:DEX :READ-COMPLETED-STRING) 0):  (P.C. = 3)
(:DEFUN-METHOD SI:INPUT-EDITOR-READ):  (P.C. = 53)
(:METHOD SI:INTERACTIVE-STREAM :INPUT-EDITOR):  (P.C. = 131)
SI:WITH-INPUT-EDITING-INTERNAL:  (P.C. = 113)
(:METHOD SAGE:DEX :READ-COMPLETED-STRING):  (P.C. = 276)
(:METHOD SAGE:DEX :READ-COMMAND):  (P.C. = 25)
(:INTERNAL (:METHOD SAGE:DEX :COMMAND-LOOP) 0 SAGE:DOIT):  (P.C. = 4)
(:METHOD SAGE:DEX :COMMAND-LOOP):  (P.C. = 55)
(:METHOD SAGE:DEX :TOPLEVEL):  (P.C. = 255)
SAGE:DEX-TOPLEVEL:  (P.C. = 4)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
 6-Apr-85 18:12:15-EST,4431;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 6 Apr 85 18:12-EST
Received: from MIT-GOLDILOCKS by MIT-MC via Chaosnet; 6 APR 85  15:17:30 EST
Date: Saturday, 6 April 1985, 15:16-EST
From: Robert Kassel <sr.rob at MIT-SPEECH>
Subject: problem with sage & hardcopy
To: BUG-LISPM at MIT-SPEECH
Message-ID: <850406151612.1.ROB@GOLDILOCKS.MIT.EDU>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, Experimental ZOO 5.0,
Experimental ZOO-KEEPER 4.0, Experimental Spire-Macros 5.1,
Experimental Versatec 5.0, Experimental Versatec-Driver 1.0, Print 38.0,
Experimental Versatec-Spool 6.1, microcode TMC5-MIC 319, on Lisp Machine Goldilocks:
Warm booted from: 3600 Ethernet Receiver.

Trying to hardcopy a viewer, what's going on here?  Do we have
the wrong fonts or something?

>>Error: The BFD file GOLDY:>sys>fonts>lgp-1>centuryschoolbook105.bfd.1 is defining the font TIMESROMAN10, but it was expected to define CENTURYSCHOOLBOOK105
While in the function FED:BARF-ABOUT-FONT-FILE-DEFINING-WRONG-FONT  FED:READ-BFD-FROM-STREAM  FED:FIND-AND-LOAD-BFD

FED:BARF-ABOUT-FONT-FILE-DEFINING-WRONG-FONT:  (P.C. = 14)
   Arg 0 (STREAM): #<LMFS-BINARY-INPUT-OPENING "SYS: FONTS; LGP-1; CENTURYSCHOOLBOOK105.BFD.NEWEST" 41110041>
   Arg 1 (NAME-IN-FILE): FONTS:TIMESROMAN10
   Arg 2 (FONTNAME-EXPECTED): FONTS:CENTURYSCHOOLBOOK105
   Local 3: FED:FONT-FILE-DEFINING-WRONG-FONT

FED:READ-BFD-FROM-STREAM:  (P.C. = 124)
   Arg 0 (STREAM): #<LMFS-BINARY-INPUT-OPENING "SYS: FONTS; LGP-1; CENTURYSCHOOLBOOK105.BFD.NEWEST" 41110041>
   Arg 1 (DESIRED-FONTNAME): FONTS:CENTURYSCHOOLBOOK105

FED:FIND-AND-LOAD-BFD:  (P.C. = 62)
   Arg 0 (NAME): FONTS:CENTURYSCHOOLBOOK105
   Arg 1 (PATHS-TO-TRY): ("SYS: FONTS; LGP-1; .BFD >" "SYS: FONTS; NLGP1; .BFD >")

FED:GET-LGP-FONT:  (P.C. = 22)
   Arg 0 (FONT-SYMBOL): FONTS:CENTURYSCHOOLBOOK105
   --Defaulted args:--
   Arg 1 (ROTATION): 0

SAGE:FONT-ALIST-AND-FONT-LIST-FROM-NAME-ALIST:  (P.C. = 31)
   Arg 0 (DESCRIPTOR-PARSER): #<DTP-COMPILED-FUNCTION FED:GET-LGP-FONT 14255674>
   Arg 1 (ALIST): ((SAGE:R FONTS:CENTURYSCHOOLBOOK105) (SAGE:I FONTS:CENTURYSCHOOLBOOK105I) (SAGE:B FONTS:CENTURYSCHOOLBOOK105B) (SAGE:P FONTS:CENTURYSCHOOLBOOK105B) (SAGE:C FONTS:TIMESROMAN8) (SAGE:L FONTS:CENTURYSCHOOLBOOK105B) (SAGE:F FONTS:FIX100) (SAGE:K FONTS:TVFONT9) (SAGE:F FONTS:FIX9) (SAGE:S FONTS:SYMBOL10) ...)

(:METHOD SAGE:LGP-DEVICE :WITH-DEVICE-PREPARED):  (P.C. = 5)
   Arg 0 (SELF): #<LGP-DEVICE 41160450>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SAGE:LGP-DEVICE -- 7. IV's, 0. FL's 143037065>
   Arg 2 (OPERATION): :WITH-DEVICE-PREPARED
   Arg 3 (FUNCTION): #<LEXICAL-CLOSURE (:INTERNAL ** 0) 44240235>
   Rest arg (ARGS): NIL

(:METHOD SAGE:DEX :HARDCOPY-VIEWING-CONTEXT):  (P.C. = 46)
   Arg 0 (SELF): #<DEX-FRAME Dex Frame 1 43200064 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SAGE:DEX -- 7. IV's, 3. FL's 104333716>
   Arg 2 (OPERATION): :HARDCOPY-VIEWING-CONTEXT
   Arg 3 (CONTEXT-OR-NAME): "Default Viewer"
   --Defaulted args:--
   Arg 4 (SEEN-ONLY): T

(:METHOD SAGE:DEX :COM-HARDCOPY-VIEWER):  (P.C. = 16)
   Arg 0 (SELF): #<DEX-FRAME Dex Frame 1 43200064 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SAGE:DEX -- 7. IV's, 3. FL's 104333716>
   Arg 2 (OPERATION): :COM-HARDCOPY-VIEWER
   Arg 3 (IGNORE): :COM-HARDCOPY-VIEWER

(:METHOD SAGE:DEX :COMMAND-MESSAGE):  (P.C. = 43)
   Arg 0 (SELF): #<DEX-FRAME Dex Frame 1 43200064 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SAGE:DEX -- 7. IV's, 3. FL's 104333716>
   Arg 2 (OPERATION): :COMMAND-MESSAGE
   Arg 3 (MESSAGE): :COM-HARDCOPY-VIEWER
   Rest arg (MESSAGE-ARGS): NIL

(:INTERNAL (:METHOD SAGE:DEX :COMMAND-LOOP) 0 SAGE:DOIT):  (P.C. = 27)
   Arg 0 (.LEXICAL-ENVIRONMENT-POINTER.): #<DTP-LOCATIVE 44240127>

(:METHOD SAGE:DEX :COMMAND-LOOP):  (P.C. = 55)
   Arg 0 (SELF): #<DEX-FRAME Dex Frame 1 43200064 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SAGE:DEX -- 7. IV's, 3. FL's 104333716>
   Arg 2 (OPERATION): :COMMAND-LOOP

(:METHOD SAGE:DEX :TOPLEVEL):  (P.C. = 255)
   Arg 0 (SELF): #<DEX-FRAME Dex Frame 1 43200064 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SAGE:DEX -- 7. IV's, 3. FL's 104333716>
   Arg 2 (OPERATION): :TOPLEVEL

SAGE:DEX-TOPLEVEL:  (P.C. = 4)
   Arg 0 (FRAME): #<DEX-FRAME Dex Frame 1 43200064 exposed>

SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
   Arg 0 (IGNORE): NIL
 6-Apr-85 18:12:34-EST,875;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 6 Apr 85 18:12-EST
Received: from MIT-YOGI by MIT-MC via Chaosnet; 6 APR 85  15:36:12 EST
Date: Saturday, 6 April 1985, 15:34-EST
From: Scott Cyphers <sr.ehpyc at MIT-SPEECH>
Subject: Stack-let
To: BUG-LISPM at MIT-SPEECH
Message-ID: <850406153456.7.CYPHER@MIT-YOGI.MIT.EDU>

In Symbolics 3670 Release 6.0, IP-TCP 29.0, Experimental ZOO 5.0,
Experimental Spire-Macros 5.1, Experimental Attribute 5.0,
Experimental Compute 5.2, Experimental Audio 4.0,
Experimental Speech-Attributes 4.0, Experimental Display 6.0,
Experimental Speech-Layouts 6.0, Experimental Prtout 4.0,
Experimental Versatec 5.0, Experimental Spire 16.0, ZOO-SPIRE 1.0,
microcode TMC5-IO4-FPA-MIC 319, on Lisp Machine Yogi:

This 
(stack-let ((a '(1 2 3))))
expands into
(let ((a '(1 2 3))))

instead of

(with-stack-list (a 1 2 3))
 6-Apr-85 18:26:38-EST,3084;000000000000
Received: from MIT-ROBOT-5 by MIT-OZ via Chaosnet; 6 Apr 85 18:26-EST
Date: Saturday, 6 April 1985, 18:26-EST
From: Henry Minsky <HQM at OZ>
Subject: numerical underflow??
To: BUG-LISPM at OZ
Message-ID: <"850406182615.2.HQM@OZ"@ROBOT-5.MIT.EDU>

In Symbolics 3670 Release 6.0, IP-TCP 29.0, AISite 7.8,
microcode TMC5-IO4-FPA-MIC 319, on Lisp Machine Robot-5:

E to the -6.835e11 bombs out in an unappetizing way

>>Trap: The argument given to the SYS:%CONVERT-FIXNUM-TO-DOUBLE instruction, -3944576970726, was not a fixnum.
While in the function SI:SINGLE-EXTENDED-SCALE-AND-FLOOR-COMPONENTS  EXP  SI:*EVAL

SI:SINGLE-EXTENDED-SCALE-AND-FLOOR-COMPONENTS:  (P.C. = 25)
   Arg 0 (X): -6.835431e11
   Arg 1 (SCALE-HIGH): 1075254599
   Arg 2 (SCALE-LOW): 1697350398
   Local 3 (SCALED-X-HIGH): -1030966440
   Local 4 (SCALED-X-LOW): -545314000
   Local 5 (FLOOR): -3944576970726

EXP:  (P.C. = 34)
   Arg 0 (X): -6.835431e11

SI:*EVAL:  (P.C. = 403)
   Arg 0 (FORM): (EXP (DBG:ARG 0))
   Local 0 (FORM): NIL
   --Defaulted args:--
   Arg 1 (ENV): NIL
   Arg 2 (HOOK): NIL

DBG:EVAL-IN-ERROR-ENVIRONMENT:  (P.C. = 365)
   Arg 0 (FORM): (EXP (DBG:ARG 0))
   Arg 1 (BIND-STREAMS): T

DBG:COMMAND-LOOP:  (P.C. = 404)

DBG:DEBUGGER-TOP-LEVEL:  (P.C. = 540)
   Arg 0: #<WRONG-TYPE-ARGUMENT-TRAP 13140613>
   Arg 1: #<DTP-LOCATIVE 43441005>
   Arg 2: NIL
   Arg 3 (SPECIAL-COMMANDS): NIL

DBG:ENTER-DEBUGGER:  (P.C. = 16)
   Arg 0 (ERROR): #<WRONG-TYPE-ARGUMENT-TRAP 13140613>
   --Defaulted args:--
   Arg 1 (REASON): NIL
   Arg 2 (SPECIAL-COMMANDS): NIL

DBG:DEBUGGER-HANDLER-HANDLE-CONDITION:  (P.C. = 7)
   Arg 0 (IGNORE): :HANDLE-CONDITION
   Arg 1 (COND): #<WRONG-TYPE-ARGUMENT-TRAP 13140613>
   Arg 2 (IGNORE): #<DTP-LOCATIVE 57100001>

Rest of stack:
DBG:DEBUGGER-HANDLER:  (P.C. = 12)
(:METHOD CONDITION :SIGNAL):  (P.C. = 114)
(:METHOD CONDITION :COMBINED :SIGNAL):  (P.C. = 17)
SIGNAL:  (P.C. = 24)
DBG:SIGNAL-TRAP:  (P.C. = 4)
SYS:MICROCODE-ERROR-HANDLER:  (P.C. = 103)
SI:SINGLE-EXTENDED-SCALE-AND-FLOOR-COMPONENTS:  (P.C. = 25)
EXP:  (P.C. = 34)
TRIPLE-TEST-FUNC:  (P.C. = 32)  (from OZ:PS:<HQM.MILAN>DIPOLE)
TEST-GAUS-R3-INTEGRAL:  (P.C. = 63)  (from OZ:PS:<HQM.MILAN>DIPOLE)
TEST-GAUS-R2-INTEGRAL:  (P.C. = 64)  (from OZ:PS:<HQM.MILAN>DIPOLE)
TEST-GAUS-TRIPLE-INTEGRAL:  (P.C. = 62)  (from OZ:PS:<HQM.MILAN>DIPOLE)
TRIPLE-DATA:  (P.C. = 21)  (from OZ:PS:<HQM.MILAN>DIPOLE)
DUMP-TRIPLE-DATA:  (P.C. = 44)  (from OZ:PS:<HQM.MILAN>DIPOLE)
TRIPLE-DRIBBLE:  (P.C. = 16)  (from OZ:PS:<HQM.MILAN>DIPOLE)
SI:*EVAL:  (P.C. = 403)
(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0):  (P.C. = 152)
TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
SI:BREAK-INTERNAL:  (P.C. = 176)
ZWEI:COM-BREAK:  (P.C. = 64)
ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 233)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 60)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 51)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
 6-Apr-85 18:43:33-EST,422;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 6 Apr 85 18:43-EST
Date: 6 Apr 1985  18:44 EST (Sat)
Message-ID: <SR.EHPYC.12101088492.BABYL@MIT-SPEECH>
From: Scott Cyphers <SR.EHPYC@MIT-SPEECH>
To:   Robert Kassel <sr.rob@MIT-SPEECH>
Cc:   BUG-LISPM@MIT-SPEECH
Subject: problem with sage & hardcopy
In-reply-to: Msg of 6 Apr 1985 15:16-EST from Robert Kassel <sr.rob>

Actually, problem with Goldy, not Sage.
 6-Apr-85 21:57:19-EST,1070;000000000000
Received: by MIT-OZ via Chaosnet; 6 Apr 85 21:57-EST
Date: Saturday, 6 April 1985, 21:57-EST
From: David Chapman <Zvona at OZ>
Subject: command parsing -- document frobber and debugger
To: BUG-LISPM at OZ
Message-ID: <850406215714.1.ZVONA@DUANE.MIT.EDU>

In Symbolics 3670 Release 6.0, IP-TCP 29.0, AISite 7.8,
microcode TMC5-IO4-MIC 319, FEP 22, on Lisp Machine Duane Allman:

In the document frobber, why don't commands complete with space (as does
the lisp listener command parser)?  Also, if you type Select Viewer and
then <help>, it displays general document frobber help, not a list of
possible viewers (whatever those are), as would be useful and I would expect. 
Is the document frobber not using the CP?

Trivial point: in the debugger, typing a non-debugger command makes
Eval: appear, which suggests that a CP command can not be given, whereas
in fact it can.  It would be more logical to just use the standard CP
prompt (since so far as I can tell at that point you can do exactly the
same set of things as you can in a lisp listener).
 6-Apr-85 22:24:24-EST,1061;000000000000
Received: by MIT-OZ via Chaosnet; 6 Apr 85 22:24-EST
Date: Saturday, 6 April 1985, 22:24-EST
From: David Chapman <Zvona at OZ>
Subject: document frobber feature suggestions
To: BUG-LISPM at OZ
Message-ID: <850406222420.2.ZVONA@DUANE.MIT.EDU>

In Symbolics 3670 Release 6.0, IP-TCP 29.0, AISite 7.8,
microcode TMC5-IO4-MIC 319, FEP 22, on Lisp Machine Duane Allman:

I like the document frobber a lot.  Here are two related things that
would make it easier to use (and I can't figure out a way to do).

If I select a topic and read it, I often then want to go back to
whatever I was looking at before.  There ought to be a way of getting
back to that, using a stack of viewed documents and a command analogous
to c-u c-space in zmacs.  

If I select a subsection of some long document, then I can read to the
end of that section, but can't control-V into the next subsection.
There ought to be a way of saying ``go up a level'' that would put me in
the next level up in the hierarchy, at that subsection, so that I could
control-V onward.
 6-Apr-85 23:05:35-EST,660;000000000000
Received: by MIT-OZ via Chaosnet; 6 Apr 85 23:05-EST
Date: Saturday, 6 April 1985, 23:05-EST
From: David Chapman <Zvona at OZ>
Subject: more documentation frobber feature suggestions
To: BUG-LISPM at OZ
Message-ID: <850406230534.4.ZVONA@DUANE.MIT.EDU>

In Symbolics 3670 Release 6.0, IP-TCP 29.0, AISite 7.8,
microcode TMC5-IO4-MIC 319, FEP 22, on Lisp Machine Duane Allman:

Bookmarks should keep track of where you are in the document, so that if
you select one to go back to it, you get back to the where you left it
from.  (If the document is long, you have to page through it to find
your place.)

A string search command would be useful.
 6-Apr-85 23:59:42-EST,665;000000000000
Received: from MIT-ROBOT-3 by MIT-OZ via Chaosnet; 6 Apr 85 23:59-EST
Date: Saturday, 6 April 1985, 23:58-EST
From: Dale Worley <DRW at MIT-MC>
Subject: Expand window mouse operation broken
To: BUG-LISPM at OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 18, on Lisp Machine Robot-3:

If I use the mouse to call up "Expand Window", and click L so I can choose a window
to expand; I get a funny cross-hair cursor, with the message at the bottom of the screen
"Left chooses a window to expand.  Middle or right aborts."  Unfortunately, clicking
any button causes the window operation menu to come back, with no change to the 
window.

DRW@MC
 7-Apr-85 01:48:08-EST,3651;000000000000
Received: from MIT-MORRISON by MIT-OZ via Chaosnet; 7 Apr 85 01:48-EST
Date: Sunday, 7 April 1985, 01:47-EST
From: Gavan Duffy <GAVAN at PYGMALION>
Subject: ZMAIL can't read a mail file on MC?
To: BUG-LISPM at PYGMALION
Message-ID: <"850407014745.3.GAVAN@PYGMALION"@MORRISON.MIT.EDU>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.8,
microcode TMC5-MIC 319, FEP 22, on Lisp Machine James Morrison:

Clicked successively on "Get Inbox" and "Read/Create File" (?) in ZMAIL and
typed MC:RELAT;GAVAN MAIL at the prompt.

>>Error: The symbol NIL has an invalid function definition
While in the function NIL  (:METHOD ZWEI:RMAIL-BUFFER :GET-INBOX)  ZWEI:GET-INBOX-FOR-BUFFER

NIL:
   Arg 0: :NEW-CANONICAL-TYPE
   Arg 1: :ZMAIL-TEMP

(:METHOD ZWEI:RMAIL-BUFFER :GET-INBOX):  (P.C. = 33)
   Arg 0 (SELF): #<RMAIL-BUFFER "MC: RELAT; GAVAN MAIL" 17712241>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:RMAIL-BUFFER -- 3. IV's, 5. FL's 142672653>
   Arg 2 (OPERATION): :GET-INBOX
   Arg 3 (NEW-PATHNAME): NIL
   Arg 4 (DELETE-P): NIL

ZWEI:GET-INBOX-FOR-BUFFER:  (P.C. = 63)
   Arg 0 (BUFFER): #<RMAIL-BUFFER "MC: RELAT; GAVAN MAIL" 17712241>
   Arg 1 (FROM-PATHNAME): NIL
   Arg 2 (DELETE-P): NIL
   Arg 3 (TELL-BACKGROUND-P): NIL

ZWEI:COM-GET-INBOX-INTERNAL:  (P.C. = 253)
   Arg 0 (FIRST-TIME-P): NIL
   --Defaulted args:--
   Arg 1 (FOR-BUFFER): #<RMAIL-BUFFER "MC: RELAT; GAVAN MAIL" 17712241>

ZWEI:COM-GET-NEW-MAIL-FROM-INBOX:  (P.C. = 7)

ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
   Arg 0 (COMMAND): ZWEI:COM-GET-NEW-MAIL-FROM-INBOX
   Arg 1 (CHAR): (:MENU ("Get inbox" . ZWEI:COM-GET-NEW-MAIL-FROM-INBOX) 4 #<ZMAIL-MAIN-COMMAND-MENU-PANE Zmail Main Command Menu Pane 3 43207626 exposed>)
   --Defaulted args:--
   Arg 2 (PREFIX-CHAR): NIL
   Arg 3 (HOOK-LIST): NIL

ZWEI:ZMAIL-COMMAND-EXECUTE:  (P.C. = 6)
   Arg 0: ZWEI:COM-GET-NEW-MAIL-FROM-INBOX

(:INTERNAL ZWEI:ZMAIL-COMMAND-LIST 0 (:MENU)):  (P.C. = 10)
   Arg 0 (**DEFSELECT-OP**): :MENU
   Arg 1 (ITEM): ("Get inbox" . ZWEI:COM-GET-NEW-MAIL-FROM-INBOX)
   Arg 2 (CH): 4
   Arg 3 (WINDOW): #<ZMAIL-MAIN-COMMAND-MENU-PANE Zmail Main Command Menu Pane 3 43207626 exposed>

ZWEI:ZMAIL-COMMAND-LIST:  (P.C. = 12)
   Arg 0 (OPERATION): :MENU
   Rest arg (SELECT-METHOD-ARGS): (("Get inbox" . ZWEI:COM-GET-NEW-MAIL-FROM-INBOX) 4 #<ZMAIL-MAIN-COMMAND-MENU-PANE Zmail Main Command Menu Pane 3 43207626 exposed>)

(:METHOD ZWEI:ZMAIL-FRAME :PROCESS-SPECIAL-COMMAND):  (P.C. = 16)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 43200617 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-FRAME -- 65. IV's, 20. FL's 142611405>
   Arg 2 (OPERATION): :PROCESS-SPECIAL-COMMAND
   Rest arg (ARGS): (:MENU ("Get inbox" . ZWEI:COM-GET-NEW-MAIL-FROM-INBOX) 4 #<ZMAIL-MAIN-COMMAND-MENU-PANE Zmail Main Command Menu Pane 3 43207626 exposed>)

(:METHOD ZWEI:ZMAIL-FRAME :COMMAND-LOOP):  (P.C. = 136)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 43200617 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-FRAME -- 65. IV's, 20. FL's 142611405>
   Arg 2 (OPERATION): :COMMAND-LOOP

(:METHOD ZWEI:ZMAIL-FRAME :COMBINED :COMMAND-LOOP):  (P.C. = 70)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 43200617 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-FRAME -- 65. IV's, 20. FL's 142611405>
   Arg 2 (.OPERATION.): :COMMAND-LOOP
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

ZWEI:ZMAIL-PROCESS-TOP-LEVEL:  (P.C. = 105)
   Arg 0 (WINDOW): #<ZMAIL-FRAME Main Zmail Window 43200617 exposed>

SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
   --Defaulted args:--
   Arg 0 (IGNORE): NIL
 7-Apr-85 01:54:27-EST,416;000000000000
Received: from MIT-MORRISON by MIT-OZ via Chaosnet; 7 Apr 85 01:54-EST
Date: Sunday, 7 April 1985, 01:54-EST
From: Gavan Duffy <GAVAN at PYGMALION>
Subject: Addendum to previous ZMAIL bug
To: BUG-LISPM at PYGMALION
Message-ID: <"850407015403.4.GAVAN@PYGMALION"@MORRISON.MIT.EDU>

After sending that last bug report, I hit system-t, and a background process
started which loaded the RMAIL file.  What gives?
 7-Apr-85 17:37:38-EST,745;000000000000
Received: by MIT-OZ via Chaosnet; 7 Apr 85 17:37-EST
Date: Sunday, 7 April 1985, 17:37-EST
From: David Chapman <Zvona at OZ>
Subject: CP wants an explicit file name
To: BUG-LISPM at OZ
Message-ID: <850407173706.2.ZVONA@DUANE.MIT.EDU>

In Symbolics 3670 Release 6.0, IP-TCP 29.0, AISite 7.9,
microcode TMC5-IO4-MIC 319, FEP 22, on Lisp Machine Duane Allman:

It's incompatible with Zwei, 20X, and everything else I can think of
that when the CP wants a file name and gives you a default you don't get
the default just by typing carriage return.

If someone thinks this is a user-interface feature, it should be made a
user-settable option and should be extended to Zwei and other places
that prompt for file names with defaults.
 7-Apr-85 18:10:29-EST,1165;000000000000
Received: from MIT-BING-CROSBY by MIT-OZ via Chaosnet; 7 Apr 85 18:10-EST
Date: Sunday, 7 April 1985, 18:09-EST
From: Randy Parker <PARKER at OZ>
Subject: system menu (mouse-right-2) becomes garbaged
To: BUG-LISPM at OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10, on Lisp Machine Bing Crosby:

<<This is a 5.2 system, so this may not apply to Rel6>>

After causing some complete grossness to occur with windows and needing
to do Func-escape and/or Func-c-clear-input, I clicked right twice for
the system menu (this happened from any window on the system).
What came up was a system menu (with highlighting
in the right places and mouse documentation), but all the bits in the
menu were the ones from the screen area occupied by the system menu I
tried to call up during the damage.

I don't believe it is easily reproduced (a backtrace was not available),
and I'm not sure that it matters.  My brokenness could be responsible for most
of this, but what I would like to know is if there is a general
way to get this menu (and more generally any other windows that
could suffer this fate) back to their proper condition.

Thanks,
RP
 7-Apr-85 18:37:14-EST,522;000000000000
Received: by MIT-OZ via Chaosnet; 7 Apr 85 18:37-EST
Date: Sunday, 7 April 1985, 18:36-EST
From: David Chapman <Zvona at OZ>
Subject: Trace CP command?
To: BUG-LISPM at OZ
Message-ID: <850407183642.3.ZVONA@DUANE.MIT.EDU>

In Symbolics 3670 Release 6.0, IP-TCP 29.0, AISite 7.9,
microcode TMC5-IO4-MIC 319, FEP 22, on Lisp Machine Duane Allman:

Now that there is this winning CP, what about making a decent interface
for tracing functions?

Also, a Boot command (with optional fep boot file) would be handy.
 7-Apr-85 21:27:36-EST,2626;000000000000
Received: from MIT-APIARY-4 by MIT-OZ via Chaosnet; 7 Apr 85 21:27-EST
Date: Sunday, 7 April 1985, 21:27-EST
From: David M. J. Saslav <saz at OZ>
Subject: End key
To: BUG-LISPM at OZ
Message-ID: <850407212718.1.SAZ@APIARY-4.MIT.EDU>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.9,
microcode TMC5-MIC 319, FEP 18, on Lisp Machine Apiary-4:

hit end after the line

(STRING-LESSP "poerw" "wpoerh")

,along with various other lines of code, with mode line

;;; -*- Mode: LISP; Base: 10.; Package: (MUSIC); Fonts: MEDFNT,TR12,TR12I,TR12B -*-

>>Trap: The variable ZWEI:DO-IT-COMMENT-VALUES? is unbound.
While in the function ZWEI:DO-IT-COMMENT-BETWEEN  ZWEI:DO-IT-EVAL-PRINT  ZWEI:DO-IT-EVAL-AND-PRINT-FORMS

ZWEI:DO-IT-COMMENT-BETWEEN:  (P.C. = 1)  (from AP6:>henry>ztop)
   Arg 0 (HERE): (";; Code evaluated from the /"TOP-LEVEL.TXT OZ:<SAZ.MODES> OZ:/" buffer.;; Code evaluated from the /"TOP-LEVEL.TXT OZ:<SAZ.MODES> OZ:/" buffer.;; Code evaluated from the /"TOP-LEVEL.TXT OZ:<SAZ.MODES> OZ:/" buffer." 207)
   Arg 1 (THERE): ("T" 1 :NORMAL)

ZWEI:DO-IT-EVAL-PRINT:  (P.C. = 103)  (from AP6:>henry>ztop)
   Arg 0 (FORM): (STRING-LESSP "poerw" "wpoerh")
   Arg 1 (FROM-BUFFER): #<FILE-BUFFER "TOP-LEVEL.TXT OZ:<SAZ.MODES> OZ:" 10540777>
   Arg 2 (REPRINT-FORM?): NIL

ZWEI:DO-IT-EVAL-AND-PRINT-FORMS:  (P.C. = 11)  (from AP6:>henry>ztop)
   Arg 0 (DO-IT-FORMS): ((STRING-LESSP "poerw" "wpoerh"))
   Arg 1 (DO-IT-BUFFER): #<FILE-BUFFER "TOP-LEVEL.TXT OZ:<SAZ.MODES> OZ:" 10540777>
   Arg 2 (REPRINT-FORM?): NIL

ZWEI:DO-IT:  (P.C. = 44)  (from AP6:>henry>ztop)
   Arg 0 (REPRINT-FORM?): NIL

ZWEI:COM-DO-IT:  (P.C. = 7)  (from AP6:>henry>ztop)

ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
   Arg 0 (COMMAND): ZWEI:COM-DO-IT
   Arg 1 (CHAR): 148
   Arg 2 (PREFIX-CHAR): NIL
   Arg 3 (HOOK-LIST): (ZWEI:FONT-LOCK-HOOK)

ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
   Arg 0 (CH): 148

(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 233)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 121171573>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:EDITOR -- 12. IV's, 0. FL's 142346020>
   Arg 2 (OPERATION): :EDIT
   --Defaulted args:--
   Arg 3 (TOP-LEVEL-P): T
   Arg 4 (DESCRIPTION): NIL

(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 60)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 121171573>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:TOP-LEVEL-EDITOR -- 13. IV's, 1. FL's 142345776>
   Arg 2 (.OPERATION.): :EDIT
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 51)

SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
   Arg 0 (IGNORE): NIL
 7-Apr-85 21:31:53-EST,559;000000000000
Received: from MIT-APIARY-4 by MIT-OZ via Chaosnet; 7 Apr 85 21:31-EST
Date: Sunday, 7 April 1985, 21:31-EST
From: David M. J. Saslav <saz at OZ>
Subject: oops
To: BUG-LISPM at OZ
Message-ID: <850407213144.2.SAZ@APIARY-4.MIT.EDU>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.9,
microcode TMC5-MIC 319, FEP 18, on Lisp Machine Apiary-4:

I just simultaneously noticed that my world was not clean when I began this
editing session and remembered that End is not usually a defined key.
The problem is CRM's, not yours.  Apologies...

saz
 7-Apr-85 22:05:35-EST,1750;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 7 Apr 85 22:05-EST
Received: from SCRC-CARDINAL by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 210387; Sun 7-Apr-85 22:03:44-EST
Date: Sunday, 7 April 1985, 22:05-EST
From: William M. York <York at SCRC-QUABBIN>
Subject: system menu (mouse-right-2) becomes garbaged
To: PARKER at OZ, BUG-LISPM at OZ
In-Reply-To: The message of 7 Apr 85 18:09-EST from Randy Parker <PARKER at OZ>
Message-ID: <850407220513.4.YORK@CARDINAL.SCRC.Symbolics.COM>

    Date: Sunday, 7 April 1985, 18:09-EST
    From: Randy Parker <PARKER at OZ>

    In Symbolics 3600 System 242.356, Hardcopy 20.10, on Lisp Machine Bing Crosby:

    <<This is a 5.2 system, so this may not apply to Rel6>>

    After causing some complete grossness to occur with windows and needing
    to do Func-escape and/or Func-c-clear-input, I clicked right twice for
    the system menu (this happened from any window on the system).
    What came up was a system menu (with highlighting
    in the right places and mouse documentation), but all the bits in the
    menu were the ones from the screen area occupied by the system menu I
    tried to call up during the damage.

    I don't believe it is easily reproduced (a backtrace was not available),
    and I'm not sure that it matters.  My brokenness could be responsible for most
    of this, but what I would like to know is if there is a general
    way to get this menu (and more generally any other windows that
    could suffer this fate) back to their proper condition.

To "clean up" the contents of the system menu (and most other lispm
windows), expose the menu and type <Function> <Refresh>.  This will
cause the menu to redisplay itself.
 7-Apr-85 22:07:34-EST,1070;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 7 Apr 85 22:07-EST
Received: from SCRC-CARDINAL by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 210389; Sun 7-Apr-85 22:06:01-EST
Date: Sunday, 7 April 1985, 22:07-EST
From: William M. York <York at SCRC-QUABBIN>
Subject: more documentation frobber feature suggestions
To: Zvona at OZ, BUG-LISPM at OZ
In-Reply-To: <850406230534.4.ZVONA@DUANE.MIT.EDU>
Message-ID: <850407220735.5.YORK@CARDINAL.SCRC.Symbolics.COM>

    Date: Saturday, 6 April 1985, 23:05-EST
    From: David Chapman <Zvona at OZ>

    In Symbolics 3670 Release 6.0, IP-TCP 29.0, AISite 7.8,
    microcode TMC5-IO4-MIC 319, FEP 22, on Lisp Machine Duane Allman:

    Bookmarks should keep track of where you are in the document, so that if
    you select one to go back to it, you get back to the where you left it
    from.  (If the document is long, you have to page through it to find
    your place.)

This is a known problem and will be fixed.

    A string search command would be useful.

Good suggestion.  Thanks.
 7-Apr-85 22:10:26-EST,1351;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 7 Apr 85 22:10-EST
Received: from SCRC-CARDINAL by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 210392; Sun 7-Apr-85 22:08:06-EST
Date: Sunday, 7 April 1985, 22:09-EST
From: William M. York <York at SCRC-QUABBIN>
Subject: Expand window mouse operation broken
To: DRW at MIT-MC, BUG-LISPM at OZ
In-Reply-To: The message of 6 Apr 85 23:58-EST from Dale Worley <DRW at MIT-MC>
Message-ID: <850407220939.6.YORK@CARDINAL.SCRC.Symbolics.COM>

    Date: Saturday, 6 April 1985, 23:58-EST
    From: Dale Worley <DRW at MIT-MC>

    In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 18, on Lisp Machine Robot-3:

    If I use the mouse to call up "Expand Window", and click L so I can choose a window
    to expand; I get a funny cross-hair cursor, with the message at the bottom of the screen
    "Left chooses a window to expand.  Middle or right aborts."  Unfortunately, clicking
    any button causes the window operation menu to come back, with no change to the 
    window.

Well, this works for me.  Did you point the cross-hair cursor at a
window that was not already of maximum size (i.e. occupying the full
screen)?  Try the [Reshape] option and change the size of your lisp
listener, or something, and then use [Expand Window] to grow it back to
full size again.
 7-Apr-85 22:18:46-EST,2381;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 7 Apr 85 22:18-EST
Received: from SCRC-CARDINAL by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 210397; Sun 7-Apr-85 22:16:49-EST
Date: Sunday, 7 April 1985, 22:18-EST
From: William M. York <York at SCRC-QUABBIN>
Subject: document frobber feature suggestions
To: Zvona at OZ, BUG-LISPM at OZ
In-Reply-To: <850406222420.2.ZVONA@DUANE.MIT.EDU>
Message-ID: <850407221821.7.YORK@CARDINAL.SCRC.Symbolics.COM>

    Date: Saturday, 6 April 1985, 22:24-EST
    From: David Chapman <Zvona at OZ>

    In Symbolics 3670 Release 6.0, IP-TCP 29.0, AISite 7.8,
    microcode TMC5-IO4-MIC 319, FEP 22, on Lisp Machine Duane Allman:

    I like the document frobber a lot.  Here are two related things that
    would make it easier to use (and I can't figure out a way to do).

    If I select a topic and read it, I often then want to go back to
    whatever I was looking at before.  There ought to be a way of getting
    back to that, using a stack of viewed documents and a command analogous
    to c-u c-space in zmacs.  

When you select the documentation for some topic, the topic name is
inserted into the Bookmarks pane.  You can re-visit that topic by
clicking on its bookmark entry.  Unfortunately, as you reported in a
later message, it currently doesn't return you to the same place in that
topics' documentation.

    If I select a subsection of some long document, then I can read to the
    end of that section, but can't control-V into the next subsection.
    There ought to be a way of saying ``go up a level'' that would put me in
    the next level up in the hierarchy, at that subsection, so that I could
    control-V onward.

This isn't exactly what you asked for, but the general facility for this
kind of thing is the "overview" mechanism.  If you click middle on a
topic you will pop up an overview window for that topic.  The overview
shows some context information for the topic, including the "conaining"
document(s).  You can get what you want by clicking right on the
containing document of interest in the overview and using the [Find
Table of Contents] command, which will put all the sub-topics into the
Candidates pane.  Try this out and see if it does the right thing.

We seem to have a general problem that the overview information is too
hard to find.
 7-Apr-85 22:52:30-EST,813;000000000000
Mail-From: ZVONA created at  7-Apr-85 22:52:16
Date: Sun, 7 Apr 1985  22:52 EST
Message-ID: <ZVONA.12101395753.BABYL@MIT-OZ>
From: ZVONA@MIT-OZ
To:   "William M. York" <York@SCRC-QUABBIN>
Cc:   BUG-LISPM@MIT-OZ
Subject: document frobber feature suggestions
In-reply-to: Msg of 7 Apr 1985 22:18-EST from William M. York <York at SCRC-QUABBIN>

Thanks for your speedy reply.

    When you select the documentation for some topic, the topic name is
    inserted into the Bookmarks pane.  You can re-visit that topic by
    clicking on its bookmark entry.  

That's true, but if the Bookmarks pane gets to have a lot of stuff in
it, it can be a pain to try and find the bookmark ('specially if you
forget where you're coming from) and mouse it.  A single keystroke to
pop the stack would be handy.
 7-Apr-85 23:02:40-EST,392;000000000000
Received: from 13063 by MIT-OZ via Chaosnet; 7 Apr 85 23:02-EST
Date: Sunday, 7 April 1985, 23:02-EST
From: David Chapman <Zvona at OZ>
Subject: login-forms doesn't know how to undo gc-on.
To: BUG-LISPM at OZ
Message-ID: <850407230205.6.ZVONA@DUANE.MIT.EDU>

In Symbolics 3670 Release 6.0, IP-TCP 29.0, AISite 7.9,
microcode TMC5-IO4-MIC 319, FEP 22, on Lisp Machine Duane Allman:

 8-Apr-85 00:11:17-EST,1122;000000000000
Received: from SCRC-TENEX by MIT-OZ via Chaosnet; 8 Apr 85 00:11-EST
Date: Sunday, 7 April 1985  22:29-EST
From: MOON at SCRC-TENEX
To:   Dale Worley <DRW at MIT-MC>
Cc:   BUG-LISPM at OZ
Subject: Expand window mouse operation broken
In-reply-to: The message of 6 Apr 1985 23:58-EST from Dale Worley <DRW at MIT-MC>

    Date: Saturday, 6 April 1985, 23:58-EST
    From: Dale Worley <DRW at MIT-MC>

    In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 18, on Lisp Machine Robot-3:

    If I use the mouse to call up "Expand Window", and click L so I can choose a window
    to expand; I get a funny cross-hair cursor, with the message at the bottom of the screen
    "Left chooses a window to expand.  Middle or right aborts."  Unfortunately, clicking
    any button causes the window operation menu to come back, with no change to the 
    window.

Are you sure you know what the command does?  Maybe there wasn't any space
available around the window to expand it into.  Expand Window will not cover
over another exposed window.  Use Reshape to make a window the full size of
of the screen.
 8-Apr-85 00:14:20-EST,1692;000000000000
Received: from SCRC-TENEX by MIT-OZ via Chaosnet; 8 Apr 85 00:12-EST
Date: Sunday, 7 April 1985  22:33-EST
From: MOON at SCRC-TENEX
To:   Randy Parker <PARKER at OZ>
Cc:   BUG-LISPM at OZ
Subject: system menu (mouse-right-2) becomes garbaged
In-reply-to: The message of 7 Apr 1985 18:09-EST from Randy Parker <PARKER at OZ>

    Received: from OZ by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 210304; Sun 7-Apr-85 18:10:42-EST
    Received: from MIT-BING-CROSBY by MIT-OZ via Chaosnet; 7 Apr 85 18:10-EST
    Date: Sunday, 7 April 1985, 18:09-EST
    From: Randy Parker <PARKER at OZ>
    Subject: system menu (mouse-right-2) becomes garbaged
    To: BUG-LISPM at OZ

    In Symbolics 3600 System 242.356, Hardcopy 20.10, on Lisp Machine Bing Crosby:

    <<This is a 5.2 system, so this may not apply to Rel6>>

    After causing some complete grossness to occur with windows and needing
    to do Func-escape and/or Func-c-clear-input, I clicked right twice for
    the system menu (this happened from any window on the system).
    What came up was a system menu (with highlighting
    in the right places and mouse documentation), but all the bits in the
    menu were the ones from the screen area occupied by the system menu I
    tried to call up during the damage.

    I don't believe it is easily reproduced (a backtrace was not available),
    and I'm not sure that it matters.  My brokenness could be responsible for most
    of this, but what I would like to know is if there is a general
    way to get this menu (and more generally any other windows that
    could suffer this fate) back to their proper condition.

Yes.  Function Refresh.
 8-Apr-85 00:55:35-EST,1122;000000000000
Received: from SCRC-TENEX by MIT-OZ via Chaosnet; 8 Apr 85 00:55-EST
Date: Sunday, 7 April 1985  22:29-EST
From: MOON at SCRC-TENEX
To:   Dale Worley <DRW at MIT-MC>
Cc:   BUG-LISPM at OZ
Subject: Expand window mouse operation broken
In-reply-to: The message of 6 Apr 1985 23:58-EST from Dale Worley <DRW at MIT-MC>

    Date: Saturday, 6 April 1985, 23:58-EST
    From: Dale Worley <DRW at MIT-MC>

    In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 18, on Lisp Machine Robot-3:

    If I use the mouse to call up "Expand Window", and click L so I can choose a window
    to expand; I get a funny cross-hair cursor, with the message at the bottom of the screen
    "Left chooses a window to expand.  Middle or right aborts."  Unfortunately, clicking
    any button causes the window operation menu to come back, with no change to the 
    window.

Are you sure you know what the command does?  Maybe there wasn't any space
available around the window to expand it into.  Expand Window will not cover
over another exposed window.  Use Reshape to make a window the full size of
of the screen.
 8-Apr-85 01:21:34-EST,809;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 8 Apr 85 01:21-EST
Date: Mon, 8 Apr 85 01:20:50 EST
From: Christopher C. Stacy <CSTACY@MIT-MC>
Subject:  (BUG FOO@MUMBLE) considered harmfull?
To: dove@MIT-TWEETY-PIE
cc: BUG-COMSAT@MIT-MC, ALAN@MIT-MC, BUG-LISPM@MIT-MC
In-reply-to: Msg of Sun 7 Apr 85 15:54:53 EST from Alan Bawden <ALAN>
Message-ID: <[MIT-MC].446262.850408012138.CSTACY>

TWEETY-PIE recently relayed a message authored on BUGS-BUNNY to MC.
The message header said "To: BUG-ZWEI at OZ", but the actual
destination TWEETY tried to send to was "OZ.MIT.EDU" or something.
Since there are no domain name resolvers running, and there is no MIT
domain anyway, it would probably be a good idea for someone over there
to arrange for your machines not to send to such illegal addresses.

 8-Apr-85 05:16:25-EST,1533;000000000000
Received: from MIT-MORRISON by MIT-OZ via Chaosnet; 8 Apr 85 05:16-EST
Date: Monday, 8 April 1985, 05:15-EST
From: Gavan Duffy <GAVAN at OZ>
Reply-To: GAVAN at MIT-MC
Subject: Direding (Deriding?) Multics
To: BUG-LISPM at OZ
cc: Dawson.ARCS at MIT-MULTICS, Kelley.SysMaint at MIT-MULTICS,
    SIRBU at MIT-MC, Gavan at MIT-MC
Message-ID: <850408051512.8.GAVAN@MORRISON.MIT.EDU>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.9,
microcode TMC5-MIC 319, FEP 22, on Lisp Machine James Morrison:

I just tried to Dired my directory on Multics (CMUL:>udd>Datanet>Duffy>),
which didn't work, bogusly claiming no such directory.  Anyway, I then
telnetted (explicitly using MC) to Multics and noticed that my Dired job was
still logged in.  I then logged out of Multics (the second job), logged out of
MC, and closed my chaos connections using (neti:reset).  After enabling my
chaos connections, I retelnetted to Multics through MC and noticed that the
Dired login was still there.  Now this wouldn't be so bad if it weren't for
the fact that someone is being charged for this connection and there is no
obvious way to kill it.  It also wouldn't be so bad if it weren't for the fact
that I reported the bug OVER TWO YEARS AGO, when Multics was on the chaosnet.

Hopefully, someone can fix (a) TCP dired on Multics, (b) the bug that allows
the job to continue on Multics even though it's no longer connected to
anything, and (c) the bogus charges that Multics is accumulating for the
Duffy.Datanet account.
 8-Apr-85 06:40:37-EST,676;000000000000
Received: from MIT-MORRISON by MIT-OZ via Chaosnet; 8 Apr 85 06:40-EST
Date: Monday, 8 April 1985, 06:39-EST
From: Gavan Duffy <GAVAN at OZ>
Subject: ZMAIL profile has no base or syntax attribute. 
To: BUG-LISPM at OZ
Message-ID: <850408063931.0.GAVAN@MORRISON.MIT.EDU>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.9,
microcode TMC5-MIC 319, FEP 22, on Lisp Machine James Morrison:

If, when I'm going to alter my zmail profile, the system wants to stupidly
warn me my zmail init is in base 10 with zetalisp syntax, there should be some
way to do m-x set base and m-x set syntax in zmail profile mode.

Beyond that, how do I stifle that silly warning?
 8-Apr-85 08:26:20-EST,1324;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 8 Apr 85 08:26-EST
Received: from SCRC-RIVERSIDE by MIT-MC via Chaosnet; 8 APR 85  08:26:18 EST
Received: from SCRC-PEACE by SCRC-RIVERSIDE via CHAOS with CHAOS-MAIL id 34532; Mon 8-Apr-85 08:22:05-EST
Date: Mon, 8 Apr 85 08:26 EST
From: Charles Hornig <Hornig@STONY-BROOK.SCRC.Symbolics.COM>
Subject: (BUG FOO@MUMBLE) considered harmfull?
To: Christopher C. Stacy <CSTACY@MC.MIT.EDU>, dove@TWEETY-PIE.MIT.EDU
cc: BUG-COMSAT@MC.MIT.EDU, ALAN@MC.MIT.EDU, BUG-LISPM@MC.MIT.EDU
In-Reply-To: <[MIT-MC].446262.850408012138.CSTACY>
Message-ID: <850408082602.8.HORNIG@PEACE.SCRC.Symbolics.COM>

    Date: Mon, 8 Apr 85 01:20:50 EST
    From: Christopher C. Stacy <CSTACY@MIT-MC>

    TWEETY-PIE recently relayed a message authored on BUGS-BUNNY to MC.
    The message header said "To: BUG-ZWEI at OZ", but the actual
    destination TWEETY tried to send to was "OZ.MIT.EDU" or something.
    Since there are no domain name resolvers running, and there is no MIT
    domain anyway, it would probably be a good idea for someone over there
    to arrange for your machines not to send to such illegal addresses.

The MIT.EDU is due to someone editing the MIT namespace object to make
that MIT's Internet domain name.  The machines will believe what you
tell them.
 8-Apr-85 09:30:34-EST,1287;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 8 Apr 85 09:30-EST
Received: from SCRC-CONCORD by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 210639; Mon 8-Apr-85 08:35:29-EST
Date: Mon, 8 Apr 85 09:15 EST
From: Bernard S. Greenberg <BSG at SCRC-STONY-BROOK>
Subject: Ancient Goldy bug
To: sr.ehpyc at MIT-SPEECH
cc: BUG-LISPM at OZ
In-Reply-To: <850405194515.3.CYPHER@MIT-SMOKEY.MIT.EDU>
Message-ID: <850408091529.8.BSG@CONCORD.SCRC.Symbolics.COM>

    Date: Friday, 5 April 1985, 19:45-EST
    From: Scott Cyphers <sr.ehpyc at MIT-SPEECH>

    In Symbolics 3670 Release 6.0, IP-TCP 29.0, Experimental ZOO 5.0,
    Experimental Spire-Macros 5.1, Experimental Attribute 5.0,
    Experimental Compute 5.0, Experimental Audio 4.0,
    Experimental Speech-Attributes 4.0, Experimental Display 6.0,
    Experimental Speech-Layouts 6.0, Experimental Prtout 4.0,
    Experimental Versatec 5.0, Experimental Spire 16.0, ZOO-SPIRE 1.0,
    microcode TMC5-IO4-FPA-MIC 319, on Lisp Machine Smokey:

    This has been around for a long time -- how can I delete this file?

    >>Error:  Bad partition index 1835011 in Hierarchy DEFAULT
	     For GOLDY:>s>spire>nlayout.lisp.70
On goldy, running Release 6, 
 (lmfs:db-obliterate-file ">s>spire>nlayout.lisp.70")
 8-Apr-85 10:29:52-EST,1933;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 8 Apr 85 10:29-EST
Date: Monday, 8 April 1985, 10:28-EST
From: Robert Kassel <sr.rob at MIT-SPEECH>
Subject: Graphic lisp loses
To: BUG-LISPM at MIT-SPEECH
Message-ID: <850408102805.2.ROB@GOLDILOCKS.MIT>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, Experimental ZOO 5.3,
Experimental ZOO-KEEPER 4.0, Experimental Spire-Macros 5.1,
Experimental Versatec 5.0, Experimental Versatec-Driver 1.0, Print 38.0,
Experimental Versatec-Spool 6.1, Mailer 43.0, Graphic Lisp 7.0,
microcode TMC5-MIC 319, on Lisp Machine Goldilocks:
Warm booted from: 3600 Ethernet Receiver.

I was displaying functions and did a GC...

>>Error: The object #<GL-FUNC 62103715> received a :CAR message, which went unclaimed.
         The rest of the message was ()
While in the function GL:MARK  GL:MARK  GL:GLISP-GC

GL:MARK:  (P.C. = 40)
   Arg 0 (OBJECT): #<GL-FUNC 62103715>

GL:MARK:  (P.C. = 100)
   Arg 0 (OBJECT): #<SYMBOL 62046371>

GL:GLISP-GC:  (P.C. = 21)

SI:*EVAL:  (P.C. = 403)
   Arg 0 (FORM): (GL:GLISP-GC)
   Local 0 (FORM): NIL
   --Defaulted args:--
   Arg 1 (ENV): NIL
   Arg 2 (HOOK): NIL

(:METHOD TV:MENU-EXECUTE-MIXIN :EXECUTE):  (P.C. = 53)
   Arg 0 (SELF): #<COMMAND-MENU-PANE Command Menu Pane 12 6606477 exposed>
   Arg 1 (SELF-MAPPING-TABLE): TV:MENU-EXECUTE-MIXIN
   Arg 2 (OPERATION): :EXECUTE
   Arg 3 (ITEM): ("" :EVAL (GL:GLISP-GC))

GL:COMMAND-LOOP:  (P.C. = 105)

(:METHOD GL:GRAPHIC-LISP-FRAME :COMMAND-LOOP):  (P.C. = 131)
   Arg 0 (SELF): #<GRAPHIC-LISP-FRAME Graphic Lisp Frame 1 6606057 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor GL:GRAPHIC-LISP-FRAME -- 7. IV's, 11. FL's 656354>
   Arg 2 (OPERATION): :COMMAND-LOOP

GL:TOP-LEVEL:  (P.C. = 4)
   Arg 0 (FRAME): #<GRAPHIC-LISP-FRAME Graphic Lisp Frame 1 6606057 exposed>

SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
   --Defaulted args:--
   Arg 0 (IGNORE): NIL
 8-Apr-85 10:33:57-EST,1043;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 8 Apr 85 10:33-EST
Received: from MIT-OZ by MIT-MC via Chaosnet; 8 APR 85  10:32:50 EST
Received: from MIT-APIARY-8 by MIT-OZ via Chaosnet; 8 Apr 85 10:32-EST
Date: Mon, 8 Apr 85 10:30 EST
From:  <ALLARD@[128.52.22.26]>
Subject: Premature Bug Window Startup Time-out
To: BUG-LISPM@MIT-MC.ARPA
Message-ID: <"850408103000.2.ALLARD@APIARY-6"@APIARY-8.MIT.EDU>

Hi,

I just got an error and typed a c-M to report the bug to a friend of
mine who had written the code.  I sent it and it went just fine, but
when I returned to the window I had sent it from there was a message
waiting for me that said a time-out had occured on the bug window
startup, and some garbage about getting to it with Select.  So, either
your bug window is not letting the caller know when it up and running,
or some other mess up like a race where the time-out runs out and the
bug window grabs the screen at the same time.

Just thought I'd let you know....

                                        Jim
 8-Apr-85 10:57:12-EST,1858;000000000000
Received: from SCRC-HARLEM by MIT-OZ via Chaosnet; 8 Apr 85 10:57-EST
Date: Monday, 8 April 1985, 10:56-EST
From: Joseph R Goldstone <joseph at SCRC-QUABBIN>
Subject: Compiler Complaints From The Future
To: jcma at MIT-MC, BUG-LISPM at OZ
In-Reply-To: <850406030952.4.JCMA@MORRISON.MIT.EDU>
Message-ID: <850408105615.6.JOSEPH@HARLEM.SCRC.Symbolics.COM>

    Date: Saturday, 6 April 1985, 03:09-EST
    From: jcma@MIT-MC

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.8,
    microcode TMC5-MIC 319, FEP 22, on Lisp Machine James Morrison:

    What's the dumb compiler warning about not returning multiple values in the
    next release?  Why not wait until a future release to complain about it??

Use your head.  If we waited until a future release, then everyone's code would
stop working and we would receive legitimate complaints that "you should have
told us this was coming."  This is why traffic lights have yellow lenses, as
well as green and red [although this is a poor city in which to use that analogy]. 

    I'm not supposed to do (return v1 v2 ...) but rather (return (values v1 v2
    ....)).  Why not just use either VALUES or RETURN?  Better yet, why not just
    leave it alone instead of introducing gratuitous incompatibility with other
    systems?  

Because we have a commitment to make the basic environment compatible with
Common Lisp.  See the silver Common Lisp manual, page 120.  There will be a
ZetaLisp compatiblity package, I think, that will let you use old-style return.

	      This sure goes well with the software witholding policy.

I don't understand this one.  

    SO, how do I turn off just the warnings about future releases?

The most obvious way to me is to modify the code, but perhaps someone on this
list knows about a compiler switch that will do the trick.
 8-Apr-85 11:03:17-EST,1595;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 8 Apr 85 11:03-EST
Received: from OLYMPIC by WAIKATO via CHAOS with CHAOS-MAIL id 91511; Mon 8-Apr-85 10:59:06-EST
Date: Monday, 8 April 1985, 10:59-EST
From: Jonathan L. Balgley <jlb at WAIKATO>
Subject: Graphic lisp loses
To: sr.rob at MIT-SPEECH, BUG-LISPM at MIT-SPEECH
In-Reply-To: <850408102805.2.ROB@GOLDILOCKS.MIT>
Message-ID: <850408105906.1.JLB@OLYMPIC.SCRC.Symbolics.COM>

    Date: Monday, 8 April 1985, 10:28-EST
    From: Robert Kassel <sr.rob at MIT-SPEECH>

    In Symbolics 3600 Release 6.0, 

    I was displaying functions and did a GC...

    >>Error: The object #<GL-FUNC 62103715> received a :CAR message, which went unclaimed.

Thanks for the report.  The fix is below (the new code is in lower
case).  Compile it in the GL package.  

(DEFUN MARK (OBJECT)
  (UNLESS (SEND OBJECT :MARK)
    (PROCESS-SLEEP 20. "Pause")			;pause
    (SEND OBJECT :SET-MARK T)
    (SEND *GRAPHIC-LISP-PANE* :DRAW-CHAR
	  FONTS:MOUSE #/ (SEND OBJECT :X) (SEND OBJECT :Y) TV:ALU-XOR)
    (COND ((and (LISTP (SEND OBJECT :REAL-OBJECT))
		(not (functionp (SEND OBJECT :REAL-OBJECT))))
	   (MARK (SEND OBJECT :CAR))
	   (MARK (SEND OBJECT :CDR)))
	  ((SYMBOLP (SEND OBJECT :REAL-OBJECT))
	   (IF (BOUNDP (SEND OBJECT :REAL-OBJECT))
	       (MARK (SEND OBJECT :VALUE)))
	   (IF (AND (FBOUNDP (SEND OBJECT :REAL-OBJECT))
		    (SEND OBJECT :FUNCTION-VALUE))
	       (MARK (SEND OBJECT :FUNCTION-VALUE))))
	  ((ARRAYP (SEND OBJECT :REAL-OBJECT))
	   (DISPLAY "Haven't implemented marking of arrays yet.")))))
 8-Apr-85 11:10:06-EST,1371;000000000000
Received: from 24534 by MIT-OZ via Chaosnet; 8 Apr 85 11:09-EST
Received: from SCRC-THAMES by SCRC-VALLECITO via CHAOS with CHAOS-MAIL id 6382; Mon 8-Apr-85 11:07:39-EST
Date: Monday, 8 April 1985, 11:10-EST
From: Scott McKay <SWM at SCRC-QUABBIN>
Subject: Compiler Complaints From The Future
To: jcma at MIT-MC, BUG-LISPM at OZ
In-Reply-To: <850406030952.4.JCMA@MORRISON.MIT.EDU>
Message-ID: <850408111022.3.SWM@THAMES.SCRC.Symbolics.COM>

    Date: Saturday, 6 April 1985, 03:09-EST
    From: jcma@MIT-MC

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.8,
    microcode TMC5-MIC 319, FEP 22, on Lisp Machine James Morrison:

    What's the dumb compiler warning about not returning multiple values in the
    next release?  Why not wait until a future release to complain about it??

    I'm not supposed to do (return v1 v2 ...) but rather (return (values v1 v2
    ....)).  Why not just use either VALUES or RETURN?  Better yet, why not just
    leave it alone instead of introducing gratuitous incompatibility with other
    systems?  This sure goes well with the software witholding policy.

    SO, how do I turn off just the warnings about future releases?

I think the change to RETURN and RETURN-FROM are for Common Lisp.  This
warning is telling you that if you don't change your code now, you'll
get really nailed later.
 8-Apr-85 11:29:24-EST,2189;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 8 Apr 85 11:29-EST
Received: from SCRC-NEPONSET by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 151398; Mon 8-Apr-85 11:18:59-EST
Date: Monday, 8 April 1985, 11:20-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: Compiler Complaints From The Future
To: jcma at MIT-MC, BUG-LISPM at OZ
In-Reply-To: <850406030952.4.JCMA@MORRISON.MIT.EDU>
Message-ID: <850408112028.2.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Saturday, 6 April 1985, 03:09-EST
    From: jcma@MIT-MC

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.8,
    microcode TMC5-MIC 319, FEP 22, on Lisp Machine James Morrison:

    What's the dumb compiler warning about not returning multiple values in the
    next release?  Why not wait until a future release to complain about it??

Letting off steam, I see...  Why can't you convert code now to something
more semantically correct and (in Release 6) functionally equivalent?
We are trying to encourage this to ease an incompatibility in a future
release.

    I'm not supposed to do (return v1 v2 ...) but rather (return (values v1 v2
    ....)).  Why not just use either VALUES or RETURN?  Better yet, why not just
    leave it alone instead of introducing gratuitous incompatibility with other
    systems?  This sure goes well with the software witholding policy.

This has nothing to do with software withholding.  Common Lisp has
slightly different semantics than ZetaLisp w.r.t. RETURN.  (RETURN A B
C) could be considered an upward extension, but there are two problems:
(1) the code woun't port to other Common Lisp systems, and (2) the
degenerate case of (RETURN) in Common Lisp means (RETURN NIL) and in ZL
means (RETURN (VALUES)).

You can't just use VALUES instead of RETURN all the time.  Consider
	(loop for x in y
	      finally (return (values 1 2 3)))

    SO, how do I turn off just the warnings about future releases?

When the release notes come back from the printer, you will find that
this particular warning is controlled by
COMPILER:*RETURN-STYLE-CHECKER-ON*.  I would hope you wouldn't touch it
but instead update your code.
 8-Apr-85 11:30:34-EST,2359;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 8 Apr 85 11:29-EST
Received: from SCRC-NEPONSET by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 151402; Mon 8-Apr-85 11:20:55-EST
Date: Monday, 8 April 1985, 11:22-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: Compiler Complaints From The Future
To: jcma at MIT-MC, BUG-LISPM at OZ
In-Reply-To: <850406030952.4.JCMA@MORRISON.MIT.EDU>
Supersedes: <850408112028.2.NFEP@NEPONSET.SCRC.Symbolics.COM>
Message-ID: <850408112224.3.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Saturday, 6 April 1985, 03:09-EST
    From: jcma@MIT-MC

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.8,
    microcode TMC5-MIC 319, FEP 22, on Lisp Machine James Morrison:

    What's the dumb compiler warning about not returning multiple values in the
    next release?  

Letting off steam, I see...  Read the message again; it is warning about
the style of usage of the forms to return multiple values.

    Why not wait until a future release to complain about it??

Why can't you convert code now to something more semantically correct
and (in Release 6) functionally equivalent?  We are trying to encourage
this to ease an incompatibility in a future release.

    I'm not supposed to do (return v1 v2 ...) but rather (return (values v1 v2
    ....)).  Why not just use either VALUES or RETURN?  Better yet, why not just
    leave it alone instead of introducing gratuitous incompatibility with other
    systems?  This sure goes well with the software witholding policy.

This has nothing to do with software withholding.  Common Lisp has
slightly different semantics than ZetaLisp w.r.t. RETURN.  (RETURN A B
C) could be considered an upward extension, but there are two problems:
(1) the code woun't port to other Common Lisp systems, and (2) the
degenerate case of (RETURN) in Common Lisp means (RETURN NIL) and in ZL
means (RETURN (VALUES)).

You can't just use VALUES instead of RETURN all the time.  Consider
(loop for x in y finally (return (values 1 2 3))).

    SO, how do I turn off just the warnings about future releases?

When the release notes come back from the printer, you will find that
this particular warning is controlled by
COMPILER:*RETURN-STYLE-CHECKER-ON*.  I would hope you wouldn't touch it
but instead update your code.
 8-Apr-85 11:32:57-EST,1300;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 8 Apr 85 11:32-EST
Received: from SCRC-NEPONSET by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 151407; Mon 8-Apr-85 11:27:46-EST
Date: Monday, 8 April 1985, 11:29-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: Stack-let
To: Scott Cyphers <sr.ehpyc at MIT-SPEECH>, BUG-LISPM at MIT-SPEECH
In-Reply-To: <850406153456.7.CYPHER@MIT-YOGI.MIT.EDU>
Message-ID: <850408112914.4.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Saturday, 6 April 1985, 15:34-EST
    From: Scott Cyphers <sr.ehpyc at MIT-SPEECH>

    In Symbolics 3670 Release 6.0, IP-TCP 29.0, Experimental ZOO 5.0,
    Experimental Spire-Macros 5.1, Experimental Attribute 5.0,
    Experimental Compute 5.2, Experimental Audio 4.0,
    Experimental Speech-Attributes 4.0, Experimental Display 6.0,
    Experimental Speech-Layouts 6.0, Experimental Prtout 4.0,
    Experimental Versatec 5.0, Experimental Spire 16.0, ZOO-SPIRE 1.0,
    microcode TMC5-IO4-FPA-MIC 319, on Lisp Machine Yogi:

    This 
    (stack-let ((a '(1 2 3))))
    expands into
    (let ((a '(1 2 3))))

    instead of

    (with-stack-list (a 1 2 3))

There's nothing wrong with that.  Maybe you mean
	(stack-let ((a (list '1 '2 '3)))) 
	=> (WITH-STACK-LIST (A '1 '2 '3))
 8-Apr-85 12:01:21-EST,1893;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 8 Apr 85 11:59-EST
Received: from SCRC-NEPONSET by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 151432; Mon 8-Apr-85 11:55:05-EST
Date: Monday, 8 April 1985, 11:56-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: CP wants an explicit file name
To: David Chapman <Zvona at OZ>, BUG-LISPM at OZ
In-Reply-To: <850407173706.2.ZVONA@DUANE.MIT.EDU>
Message-ID: <850408115635.0.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Sunday, 7 April 1985, 17:37-EST
    From: David Chapman <Zvona at OZ>

    In Symbolics 3670 Release 6.0, IP-TCP 29.0, AISite 7.9,
    microcode TMC5-IO4-MIC 319, FEP 22, on Lisp Machine Duane Allman:

    It's incompatible with Zwei, 20X, and everything else I can think of
    that when the CP wants a file name and gives you a default you don't get
    the default just by typing carriage return.

In Zwei you (currently) give each field as a separate interation.
Therefore, RETURN makes sense.  On 20X, I did copy login.cmd ? and it
didn't even show me what the default is.  Hitting return copied it to a
newer version.  I don't think this 20X behavior is a good model to use.
Maybe you were thinking of some other command?  The CP collects all its
arguments on the same line.  Among other things, this lets you edit
them, which you can't do to previous arguments to multiple interaction
Zwei commands.  Since it is a simple matter to type SPACE or COMPLETE, I
don't think this is an earth shaking issue.

    If someone thinks this is a user-interface feature, it should be made a
    user-settable option and should be extended to Zwei and other places
    that prompt for file names with defaults.

At some point we hope to flush the Zwei "command processor" and have it
use the same CP functionality.  Ditto with Terminal window interaction
and other subsystems.
 8-Apr-85 12:03:41-EST,3186;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 8 Apr 85 12:02-EST
Received: from SCRC-NEPONSET by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 151434; Mon 8-Apr-85 11:56:40-EST
Date: Monday, 8 April 1985, 11:58-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: End key
To: David M. J. Saslav <saz at OZ>, BUG-LISPM at OZ
In-Reply-To: <850407212718.1.SAZ@APIARY-4.MIT.EDU>
Message-ID: <850408115810.1.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Sunday, 7 April 1985, 21:27-EST
    From: David M. J. Saslav <saz at OZ>

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.9,
    microcode TMC5-MIC 319, FEP 18, on Lisp Machine Apiary-4:

    hit end after the line

    (STRING-LESSP "poerw" "wpoerh")

This looks like a bug in ZTOP, not in the Released Symbolics system.

    ,along with various other lines of code, with mode line

    ;;; -*- Mode: LISP; Base: 10.; Package: (MUSIC); Fonts: MEDFNT,TR12,TR12I,TR12B -*-

    >>Trap: The variable ZWEI:DO-IT-COMMENT-VALUES? is unbound.
    While in the function ZWEI:DO-IT-COMMENT-BETWEEN  ZWEI:DO-IT-EVAL-PRINT  ZWEI:DO-IT-EVAL-AND-PRINT-FORMS

    ZWEI:DO-IT-COMMENT-BETWEEN:  (P.C. = 1)  (from AP6:>henry>ztop)
       Arg 0 (HERE): (";; Code evaluated from the /"TOP-LEVEL.TXT OZ:<SAZ.MODES> OZ:/" buffer.;; Code evaluated from the /"TOP-LEVEL.TXT OZ:<SAZ.MODES> OZ:/" buffer.;; Code evaluated from the /"TOP-LEVEL.TXT OZ:<SAZ.MODES> OZ:/" buffer." 207)
       Arg 1 (THERE): ("T" 1 :NORMAL)

    ZWEI:DO-IT-EVAL-PRINT:  (P.C. = 103)  (from AP6:>henry>ztop)
       Arg 0 (FORM): (STRING-LESSP "poerw" "wpoerh")
       Arg 1 (FROM-BUFFER): #<FILE-BUFFER "TOP-LEVEL.TXT OZ:<SAZ.MODES> OZ:" 10540777>
       Arg 2 (REPRINT-FORM?): NIL

    ZWEI:DO-IT-EVAL-AND-PRINT-FORMS:  (P.C. = 11)  (from AP6:>henry>ztop)
       Arg 0 (DO-IT-FORMS): ((STRING-LESSP "poerw" "wpoerh"))
       Arg 1 (DO-IT-BUFFER): #<FILE-BUFFER "TOP-LEVEL.TXT OZ:<SAZ.MODES> OZ:" 10540777>
       Arg 2 (REPRINT-FORM?): NIL

    ZWEI:DO-IT:  (P.C. = 44)  (from AP6:>henry>ztop)
       Arg 0 (REPRINT-FORM?): NIL

    ZWEI:COM-DO-IT:  (P.C. = 7)  (from AP6:>henry>ztop)

    ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
       Arg 0 (COMMAND): ZWEI:COM-DO-IT
       Arg 1 (CHAR): 148
       Arg 2 (PREFIX-CHAR): NIL
       Arg 3 (HOOK-LIST): (ZWEI:FONT-LOCK-HOOK)

    ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
       Arg 0 (CH): 148

    (:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 233)
       Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 121171573>
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:EDITOR -- 12. IV's, 0. FL's 142346020>
       Arg 2 (OPERATION): :EDIT
       --Defaulted args:--
       Arg 3 (TOP-LEVEL-P): T
       Arg 4 (DESCRIPTION): NIL

    (:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 60)
       Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 121171573>
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:TOP-LEVEL-EDITOR -- 13. IV's, 1. FL's 142345776>
       Arg 2 (.OPERATION.): :EDIT
       Rest arg (.DAEMON-CALLER-ARGS.): NIL

    ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 51)

    SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
       Arg 0 (IGNORE): NIL
 8-Apr-85 14:23:15-EST,1538;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 8 Apr 85 14:23-EST
Date: Monday, 8 April 1985, 14:21-EST
From: Robert Kassel <sr.rob at MIT-SPEECH>
Subject: bad completion in zwei
To: BUG-LISPM at MIT-SPEECH
Message-ID: <850408142125.3.ROB@GOLDILOCKS.MIT>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, Experimental ZOO 5.3,
Experimental ZOO-KEEPER 4.0, Experimental Spire-Macros 5.1,
Experimental Versatec 5.0, Experimental Versatec-Driver 1.0, Print 38.0,
Experimental Versatec-Spool 6.1, Mailer 43.0, Graphic Lisp 7.0,
Experimental Pop-Up-Calculator 1.0, microcode TMC5-MIC 319, on Lisp Machine Goldilocks:
Warm booted from: 3600 Ethernet Receiver.

If I  type

 m-x f <space> f <space> i <space> t <space> t <end>

the completion used to be for

 Find Files In Tags Table.

Now, when you type the first F <space> there are several
possible completions, and the mini-buffer properly contains 

 F <space> <cursor>

but after typing the second  F <space> zwei completes to

 F <space> File <cursor>

i.e. without adding a space to the end.  Thus when I type my
favorite sequence (above) I lose, since the buffer reads

 F <space> Filei <cursor>

which has no completions.

Something here is misleading.  I know F File could be Format
File, but that second space should be inserted since it shouldn't
harm anything (Format File <space> works) and will permit my
completion string to work.  As it is now, F File <space> forces
the completion to Find File ..., which is semi-wrong.


					ROB
 8-Apr-85 14:51:09-EST,4971;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 8 Apr 85 14:45-EST
Date: Monday, 8 April 1985, 14:42-EST
From: Robert Kassel <sr.rob at MIT-SPEECH>
Subject: another graphic-lisp bug (did you guys test this thing?)
To: BUG-LISPM at MIT-SPEECH
Message-ID: <850408144211.5.ROB@GOLDILOCKS.MIT>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, Experimental ZOO 5.3,
Experimental ZOO-KEEPER 4.0, Experimental Spire-Macros 5.1,
Experimental Versatec 5.0, Experimental Versatec-Driver 1.0, Print 38.0,
Experimental Versatec-Spool 6.1, Mailer 43.0, Graphic Lisp 7.0,
Experimental Pop-Up-Calculator 1.0, microcode TMC5-MIC 319, on Lisp Machine Goldilocks:
Warm booted from: 3600 Ethernet Receiver.

Tried to evaluate

 (make-package 'fools)

GADS!

(n.b.  I loaded the (previously) suggested patch)

>>Trap: The instance variable GL:REAL-OBJECT is unbound in #<GL-ARRAY 41006421>.
While in the function (:METHOD GL:OBJECT :REAL-OBJECT)  (:METHOD GL:GL-ARRAY :AFTER :INIT)  (:INTERNAL (:METHOD GL:GL-ARRAY :COMBINED :INIT) 0)

(:METHOD GL:OBJECT :REAL-OBJECT):  (P.C. = 1)
   Arg 0 (SELF): #<GL-ARRAY 41006421>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor GL:OBJECT -- 6. IV's, 0. FL's 635255>
   Arg 2 (IGNORE): :REAL-OBJECT

(:METHOD GL:GL-ARRAY :AFTER :INIT):  (P.C. = 5)
   Arg 0 (SELF): #<GL-ARRAY 41006421>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor GL:GL-ARRAY -- 5. IV's, 1. FL's 635574>
   Arg 2 (OPERATION): :INIT
   Arg 3 (IGNORE): #<DTP-LOCATIVE 105400255>

(:INTERNAL (:METHOD GL:GL-ARRAY :COMBINED :INIT) 0):  (P.C. = 20)
   Arg 0 (SELF): #<GL-ARRAY 41006421>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor GL:GL-ARRAY -- 5. IV's, 1. FL's 635574>
   Arg 2 (.OPERATION.): :INIT
   Rest arg (.DAEMON-CALLER-ARGS.): (#<DTP-LOCATIVE 105400255>)

(:METHOD GL:OBJECT :WHOPPER :INIT):  (P.C. = 10)
   Arg 0 (SELF): #<GL-ARRAY 41006421>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor GL:OBJECT -- 6. IV's, 0. FL's 635255>
   Arg 2 (.WHOPPER-CONTINUATION.): #<DTP-COMPILED-FUNCTION (:INTERNAL (:METHOD GL:GL-ARRAY :COMBINED :INIT) 0) 76724605>
   Arg 3 (.OLD-SELF-MAPPING-TABLE.): #<Map to flavor GL:GL-ARRAY -- 5. IV's, 1. FL's 635574>
   Arg 4 (.OPERATION.): :INIT
   Rest arg (INIT-PLIST): (#<DTP-LOCATIVE 105400255>)

(:METHOD GL:GL-ARRAY :COMBINED :INIT):  (P.C. = 13)
   Arg 0 (SELF): #<GL-ARRAY 41006421>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor GL:GL-ARRAY -- 5. IV's, 1. FL's 635574>
   Arg 2 (.OPERATION.): :INIT
   Rest arg (.DAEMON-CALLER-ARGS.): (#<DTP-LOCATIVE 105400255>)

INSTANTIATE-FLAVOR:  (P.C. = 445)
   Arg 0 (FLAVOR-NAME): GL:GL-ARRAY
   Arg 1 (INIT-PLIST): #<DTP-LOCATIVE 105400255>
   Arg 2 (SEND-INIT-MESSAGE-P): :MAYBE
   --Defaulted args:--
   Arg 3 (RETURN-UNHANDLED-KEYWORDS-P): NIL
   Arg 4 (AREA-TO-CONS-INSTANCE-IN): NIL

MAKE-INSTANCE:  (P.C. = 6)
   Arg 0 (FLAVOR-NAME): GL:GL-ARRAY
   Rest arg (INIT-OPTIONS): NIL

GL:MAKE-GRAPHIC-ARRAY:  (P.C. = 3)
   Arg 0 (LISP-ARRAY): #<Package FOOLS 16306013>

GL:MAKE-GRAPHIC-OBJECT:  (P.C. = 47)
   Arg 0 (LISP-OBJECT): #<Package FOOLS 16306013>

(:METHOD GL:OBJECT :EVAL):  (P.C. = 7)
   Arg 0 (SELF): #<CONS 41005664>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor GL:OBJECT -- 6. IV's, 0. FL's 634061>
   Arg 2 (OPERATION): :EVAL

SEND:  (P.C. = 6)
   Arg 0 (OBJECT): #<CONS 41005664>
   Arg 1 (MESSAGE-NAME): :EVAL
   Rest arg (ARGUMENTS): NIL

SI:*EVAL:  (P.C. = 403)
   Arg 0 (FORM): (SEND (GL:MOUSE-SELECT-OBJECT "Click on the object to be evaluated." :PRINT-SELF) :EVAL)
   Local 0 (FORM): NIL
   Arg 1 (ENV): NIL
   --Defaulted args:--
   Arg 2 (HOOK): NIL

PROGN:  (P.C. = 20)
   Arg 0 (.FORM.): (PROGN (SETQ GL:*CHANGED-P* T) (SEND (GL:MOUSE-SELECT-OBJECT "Click on the object to be evaluated." :PRINT-SELF) :EVAL))
   Arg 1 (ENV): NIL

SI:*EVAL:  (P.C. = 165)
   Arg 0 (FORM): (PROGN (SETQ GL:*CHANGED-P* T) (SEND (GL:MOUSE-SELECT-OBJECT "Click on the object to be evaluated." :PRINT-SELF) :EVAL))
   --Defaulted args:--
   Arg 1 (ENV): NIL
   Arg 2 (HOOK): NIL

(:METHOD TV:MENU-EXECUTE-MIXIN :EXECUTE):  (P.C. = 53)
   Arg 0 (SELF): #<COMMAND-MENU-PANE Command Menu Pane 12 6606477 exposed>
   Arg 1 (SELF-MAPPING-TABLE): TV:MENU-EXECUTE-MIXIN
   Arg 2 (OPERATION): :EXECUTE
   Arg 3 (ITEM): ("" :EVAL (PROGN (SETQ GL:*CHANGED-P* T) (SEND (GL:MOUSE-SELECT-OBJECT "Click on the object to be evaluated." :PRINT-SELF) :EVAL)))

GL:COMMAND-LOOP:  (P.C. = 105)

(:METHOD GL:GRAPHIC-LISP-FRAME :COMMAND-LOOP):  (P.C. = 131)
   Arg 0 (SELF): #<GRAPHIC-LISP-FRAME Graphic Lisp Frame 1 6606057 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor GL:GRAPHIC-LISP-FRAME -- 7. IV's, 11. FL's 656354>
   Arg 2 (OPERATION): :COMMAND-LOOP

GL:TOP-LEVEL:  (P.C. = 4)
   Arg 0 (FRAME): #<GRAPHIC-LISP-FRAME Graphic Lisp Frame 1 6606057 exposed>

SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
   Arg 0 (IGNORE): NIL

SI:PROCESS-KILL-TOP-LEVEL:  (P.C. = 20)
   Arg 0 (ARG): NIL
 8-Apr-85 15:32:41-EST,7400;000000000000
Received: from MIT-LENNON by MIT-OZ via Chaosnet; 8 Apr 85 15:29-EST
Date: Monday, 8 April 1985, 15:26-EST
From: Chris Lindblad <cjl at OZ>
Subject: Command parser blowout computing defaults 
To: BUG-LISPM at OZ
Message-ID: <850408152642.1.CJL@LENNON.MIT>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.9,
microcode TMC5-MIC 319, on Lisp Machine John Lennon:

The command parser isn't very robust about the current default pathname
being that of a deleted file.

(deletef (fs:merge-pathnames-and-set-defaults "B:>cjl>foo.directory"))
NIL
:Expunge Directory 

I haven't even typed return, just space.

>>Error: The file was not found.
         For B:>cjl>foo.directory
While in the function (:METHOD FS:NFILE-SERVER-UNIT :WAIT-FOR-COMMAND)  (:METHOD FS:NFILE-SERVER-UNIT :SEND-AND-WAIT-FOR-COMMAND)  (:METHOD FS:NFILE-SERVER-UNIT :SEND-IN-COMMAND-CONDITION-ENVIRONMENT)

(:METHOD FS:NFILE-SERVER-UNIT :WAIT-FOR-COMMAND):  (P.C. = 65)
   Arg 0 (SELF): #<NFILE-SERVER-UNIT 30223113>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:NFILE-SERVER-UNIT -- 15. IV's, 0. FL's 104167041>
   Arg 2 (OPERATION): :WAIT-FOR-COMMAND
   Arg 3 (TID-CONS-ARGS): ("T2546" :OPEN "Open" #<NFILE-DATA-CHANNEL I2497 16233203>)
   Local 4 (DATA-CHANNEL): #<NFILE-DATA-CHANNEL I2497 16233203>
   Local 5 (COMMAND-TID): "T2546"
   Local 6 (COMMAND-NAME): :OPEN
   Local 7 (WHOSTATE): "Open"
   Local 8 (RESPONSE-ARGS): ("FNF" (:PATHNAME ">cjl>foo.directory.NEWEST") "The file was not found.")
   Local 9 (RESPONSE-NAME): :ERROR

(:METHOD FS:NFILE-SERVER-UNIT :SEND-AND-WAIT-FOR-COMMAND):  (P.C. = 40)
   Arg 0 (SELF): #<NFILE-SERVER-UNIT 30223113>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:NFILE-SERVER-UNIT -- 15. IV's, 0. FL's 104167041>
   Arg 2 (OPERATION): :SEND-AND-WAIT-FOR-COMMAND
   Arg 3 (DATA): (:OPEN "Open" #<NFILE-DATA-CHANNEL I2497 16233203> "I2497" ">cjl>foo.directory.NEWEST" :INPUT NIL)

(:METHOD FS:NFILE-SERVER-UNIT :SEND-IN-COMMAND-CONDITION-ENVIRONMENT):  (P.C. = 54)
   Arg 0 (SELF): #<NFILE-SERVER-UNIT 30223113>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:NFILE-SERVER-UNIT -- 15. IV's, 0. FL's 104167041>
   Arg 2 (OPERATION): :SEND-IN-COMMAND-CONDITION-ENVIRONMENT
   Arg 3 (MESSAGE): :SEND-AND-WAIT-FOR-COMMAND
   Arg 4 (DATA): (:OPEN "Open" #<NFILE-DATA-CHANNEL I2497 16233203> "I2497" ">cjl>foo.directory.NEWEST" :INPUT NIL)

(:METHOD FS:NFILE-SERVER-UNIT :COMMAND):  (P.C. = 7)
   Arg 0 (SELF): #<NFILE-SERVER-UNIT 30223113>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:NFILE-SERVER-UNIT -- 15. IV's, 0. FL's 104167041>
   Arg 2 (OPERATION): :COMMAND
   Rest arg (DATA): (:OPEN "Open" #<NFILE-DATA-CHANNEL I2497 16233203> "I2497" ">cjl>foo.directory.NEWEST" :INPUT NIL)

FS:NFILE-KEYWORD-LIST-CALLER:  (P.C. = 165)
   Arg 0 (INSTANCE): #<NFILE-SERVER-UNIT 30223113>
   Arg 1 (CMDNAME): :OPEN
   Arg 2 (WHOSTATE): "Open"
   Arg 3 (DATA-CHANNEL): #<NFILE-DATA-CHANNEL I2497 16233203>
   Arg 4 (CONSTANT-ARGS): ("I2497" ">cjl>foo.directory.NEWEST" :INPUT NIL)
   Local 4 (CONSTANT-ARGS): NIL
   Arg 5 (KEYWORD-VALUE-PAIRS): (:BYTE-SIZE NIL :DELETED NIL :RAW NIL :SUPER-IMAGE NIL :PRESERVE-DATES NIL ...)
   Local 5 (KEYWORD-VALUE-PAIRS): NIL

(:METHOD FS:NFILE-ACCESS-PATH :OPEN):  (P.C. = 375)
   Arg 0 (SELF): #<LMFS-NFILE-ACCESS-PATH B using NEW-FILE 30223102>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:NFILE-ACCESS-PATH -- 4. IV's, 2. FL's 121346410>
   Arg 2 (OPERATION): :OPEN
   Arg 3 (REAL-PATHNAME): #<LMFS-PATHNAME "B:>cjl>foo.directory">
   Arg 4 (COMMAND-PATHNAME): #<LMFS-PATHNAME "B:>cjl>foo.directory">
   Rest arg: (:DIRECTION :INPUT)

(:METHOD FS:ACTIVE-PATHNAME-MIXIN :OPEN):  (P.C. = 14)
   Arg 0 (SELF): #<LMFS-PATHNAME "B:>cjl>foo.directory">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:ACTIVE-PATHNAME-MIXIN -- 1. IV's, 0. FL's 104225115>
   Arg 2 (OPERATION): :OPEN
   Arg 3 (PATHNAME): #<LMFS-PATHNAME "B:>cjl>foo.directory">
   Rest arg (OPTIONS): (:DIRECTION :INPUT)

FS:COMMON-LISP-OPEN:  (P.C. = 450)
   Arg 0 (PATHNAME): #<LMFS-PATHNAME "B:>cjl>foo.directory">
   Arg 1 (KEYWORD-ARGS): NIL

OPEN:  (P.C. = 257)
   Arg 0 (PATHNAME): #<LMFS-PATHNAME "B:>cjl>foo.directory">
   Rest arg (KEYWORD-ARGS): NIL

#:COM-EXPUNGE-DIRECTORY-DIRECTORY-MENTIONED-DEFAULT:  (P.C. = 33)

SI:READ-POS-ARG:  (P.C. = 61)
   Arg 0 (STREAM): #:TERMINAL-IO-SYN-STREAM
   Arg 1 (ARG): #<POS-CP-ARG Directory #o121733277>
   --Defaulted args:--
   Arg 2 (FOR-KEYWORD-ARG): NIL

SI:READ-COMMAND-INTERNAL:  (P.C. = 200)
   Arg 0 (STREAM): #:TERMINAL-IO-SYN-STREAM
   Arg 1 (COMMAND-TABLE): #<COMTAB User 121373326>

SI:READ-COMMAND-DISPATCH:  (P.C. = 7)
   Arg 0 (STREAM): #:TERMINAL-IO-SYN-STREAM
   Arg 1 (COMMAND-TABLE): #<COMTAB User 121373326>

(:INTERNAL READ-COMMAND-OR-FORM 0):  (P.C. = 56)
   Arg 0 (.LEXICAL-ENVIRONMENT-POINTER.): #<DTP-LOCATIVE 500204>

(:INTERNAL SI:CP-INPUT-EDITING 0):  (P.C. = 75)
   Arg 0 (.LEXICAL-ENVIRONMENT-POINTER.): #<DTP-LOCATIVE 500243>

(:DEFUN-METHOD SI:INPUT-EDITOR-READ):  (P.C. = 53)
   Arg 0 (SELF): #<LISP-LISTENER Lisp Listener 1 43200216 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:INTERACTIVE-STREAM -- 20. IV's, 2. FL's 104234231>
   Arg 2 (READ-FUNCTION): #<LEXICAL-CLOSURE (:INTERNAL SI:CP-INPUT-EDITING 0) 500247>
   Arg 3 (READ-ARGS): NIL

(:METHOD SI:INTERACTIVE-STREAM :INPUT-EDITOR):  (P.C. = 131)
   Arg 0 (SELF): #<LISP-LISTENER Lisp Listener 1 43200216 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:INTERACTIVE-STREAM -- 20. IV's, 2. FL's 104234231>
   Arg 2 (OPERATION): :INPUT-EDITOR
   Arg 3 (READ-FUNCTION): #<LEXICAL-CLOSURE (:INTERNAL SI:CP-INPUT-EDITING 0) 500247>
   Rest arg (READ-ARGS): NIL

SI:WITH-INPUT-EDITING-INTERNAL:  (P.C. = 113)
   Arg 0 (STREAM): #:TERMINAL-IO-SYN-STREAM
   Arg 1 (CONTINUATION): #<LEXICAL-CLOSURE (:INTERNAL SI:CP-INPUT-EDITING 0) 500247>
   Arg 2 (ACTIVATORS): NIL
   Arg 3 (LINE-P): NIL
   Arg 4 (INPUT-EDITOR-OPTIONS): NIL

SI:CP-INPUT-EDITING:  (P.C. = 76)
   Arg 0 (STREAM): #:TERMINAL-IO-SYN-STREAM
   Arg 1 (PROMPT): "Command: "
   Arg 2 (BLANK-LINE-MODE): :REPROMPT
   Arg 3 (CONTINUATION): #<LEXICAL-CLOSURE (:INTERNAL READ-COMMAND-OR-FORM 0) 500206>

READ-COMMAND-OR-FORM:  (P.C. = 146)
   Arg 0 (STREAM): #:TERMINAL-IO-SYN-STREAM
   Rest arg: (:DISPATCH-MODE :COMMAND-PREFERRED :BLANK-LINE-MODE :REPROMPT :PROMPT "Command: ")

SI:CP-COMMAND-LOOP-READ-FUNCTION:  (P.C. = 13)

(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0):  (P.C. = 105)
   Arg 0 (.LEXICAL-ENVIRONMENT-POINTER.): #<DTP-LOCATIVE 500101>

TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
   Arg 0 (NEW-MODE): :BLAST
   Arg 1 (STREAM): #:TERMINAL-IO-SYN-STREAM
   Arg 2 (CONTINUATION): #<LEXICAL-CLOSURE (:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0) 500106>

SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
   Arg 0 (NAME): "Lisp Top Level"
   Arg 1 (ABORT-FUNCTION): NIL
   Arg 2 (READ-FUNCTION): NIL
   Arg 3 (EVAL-FUNCTION): NIL
   Arg 4 (PRINT-FUNCTION): NIL

SI:LISP-COMMAND-LOOP:  (P.C. = 67)
   Arg 0: #<LISP-LISTENER Lisp Listener 1 43200216 exposed>
   Rest arg: (:NAME "Lisp Top Level")

SI:LISP-TOP-LEVEL1:  (P.C. = 5)
   Arg 0 (STREAM): #<LISP-LISTENER Lisp Listener 1 43200216 exposed>

SI:LISP-TOP-LEVEL2:  (P.C. = 5)

SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
   Arg 0 (IGNORE): NIL
 8-Apr-85 17:57:42-EST,3552;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 8 Apr 85 17:39-EST
Received: from OLYMPIC by WAIKATO via CHAOS with CHAOS-MAIL id 91625; Mon 8-Apr-85 17:37:11-EST
Date: Monday, 8 April 1985, 17:37-EST
From: Jonathan L. Balgley <jlb at WAIKATO>
Subject: another graphic-lisp bug (did you guys test this thing?)
To: sr.rob at MIT-SPEECH, BUG-LISPM at MIT-SPEECH
In-Reply-To: <850408144211.5.ROB@GOLDILOCKS.MIT>
Message-ID: <850408173718.3.JLB@OLYMPIC.SCRC.Symbolics.COM>

    Date: Monday, 8 April 1985, 14:42-EST
    From: Robert Kassel <sr.rob at MIT-SPEECH>

    In Symbolics 3600 Release 6.0...

    Tried to evaluate

     (make-package 'fools)

    >>Trap: The instance variable GL:REAL-OBJECT is unbound in #<GL-ARRAY 41006421>.

Well, I admit it, graphic-arrays weren't particularly well done, even
though this is just a plain bug.  The right thing is to take them out
completely, until such time as they can be done right.  I've included
the patches to do that below.

I'm curious as to what you're using graphic-lisp for - in particular, it
seems strange to me that you were making a package from graphic-lisp.
Any comments or suggestions you have would be appreciated.  [Including
bug reports.]

If it bombs out again, a useful function to call while you're in the
debugger is (gl:kill).  It gets rid of all of graphic-lisp's data
structures, so that you don't get recursive errors.  You'll probably
have to hit the refresh key to get the window to look right afterwards.

Keep those reports coming, and I'll fix 'em for you.


(DEFUN CONSISTENCY-CHECK ()
  (DOLIST (OBJECT (SEND *GRAPHIC-LISP-PANE* :LIST-OF-OBJECTS))
    (LET ((REAL (SEND OBJECT :REAL-OBJECT)))
      (COND ((SYMBOLP REAL)
	     (IF REAL				;don't do anything with NIL
		 (PROGN
		   (LET ((VALUE (SEND OBJECT :VALUE)))	;the graphic-value
		     (COND ((BOUNDP REAL)
			    (IF (OR (NULL VALUE)
				    (NEQ (SYMEVAL REAL) (SEND VALUE :REAL-OBJECT)))
 				(SEND OBJECT :SET-VALUE
				      (MAKE-GRAPHIC-OBJECT (SYMEVAL REAL)))))
			   (VALUE (SEND OBJECT :SET-VALUE NIL))))
		   (WHEN *SHOW-FUNCTION-CELLS*
		     (LET ((FUNCTION-VALUE (SEND OBJECT :FUNCTION-VALUE)))
		       (COND ((FBOUNDP REAL)
			      (IF (OR (NULL FUNCTION-VALUE)
				      (NEQ (FSYMEVAL REAL)
					   (SEND FUNCTION-VALUE :REAL-OBJECT)))
				  (SEND OBJECT :FSET-VALUE
					(MAKE-GRAPHIC-OBJECT (FSYMEVAL REAL)))))
			     (FUNCTION-VALUE (SEND OBJECT :FSET-VALUE NIL))))))))
	    ((FUNCTIONP REAL))
	    ((LISTP REAL)
	     (IF (NEQ (CAR REAL) (SEND (SEND OBJECT :CAR) :REAL-OBJECT))
		 (SEND OBJECT :SET-CAR (MAKE-GRAPHIC-OBJECT (CAR REAL))))
	     (IF (NEQ (CDR REAL) (SEND (SEND OBJECT :CDR) :REAL-OBJECT))
		 (SEND OBJECT :SET-CDR (MAKE-GRAPHIC-OBJECT (CDR REAL)))))
 	    ;; *** Stuff removed from here. ***
	    ))))  



(DEFUN MAKE-GRAPHIC-OBJECT (LISP-OBJECT)
  (COND
    ;; Already there, just returns the one found
    ((DISPLAYED? LISP-OBJECT))
    ;; Must test for symbols before functions because functionp returns T
    ;; if given a symbol with a functionp functional value.
    ((SYMBOLP LISP-OBJECT) (MAKE-GRAPHIC-SYMBOL LISP-OBJECT))
    ;; Must test for functions before conses because we might get a
    ;; lambda-list
    ((FUNCTIONP LISP-OBJECT) (MAKE-GRAPHIC-FUNCTION LISP-OBJECT))
    ((LISTP LISP-OBJECT) (MAKE-GRAPHIC-CONS LISP-OBJECT))
    ((NUMBERP LISP-OBJECT) (MAKE-GRAPHIC-NUMBER LISP-OBJECT))
    ;; *** Stuff removed from here. ***
    (T (MAKE-GRAPHIC-OTHER LISP-OBJECT))))
 8-Apr-85 17:58:55-EST,793;000000000000
Mail-From: ZVONA created at  8-Apr-85 17:39:53
Date: Mon, 8 Apr 1985  17:39 EST
Message-ID: <ZVONA.12101601028.BABYL@MIT-OZ>
From: ZVONA@MIT-OZ
To:   bug-lispm@MIT-OZ
Subject: format of multiline remarks in whois

@whois zvona@reagan
[MIT-REAGAN]
File-Server   The File Server        REAGAN   39     7th (Rel 6.0 IP-TCP 29.0 AISite 7.8 ML 43.0 1024K 3600)
Zvona  A David Chapman          not using this machine.
   [Zvona@OZ]   Hacking Luser for Chuck Rich
   Work: NE43-709, MIT   (617) 253-8827
   Home: 390 Broadway, Cambridge, MA 02139   (617) 576-1137
   Let it be known
There is a fountain
That was not built
By the hands of man
@

The lines of the remarks field should all indent the same.  (Probably
not at all, and maybe with a blank line separating from rest.)
 8-Apr-85 18:07:06-EST,458;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 8 Apr 85 18:05-EST
Received: from MIT-YOGI by MIT-OZ via Chaosnet; 8 Apr 85 17:39-EST
Date: Monday, 8 April 1985, 17:39-EST
From: Scott Cyphers <sr.ehpyc at MIT-SPEECH>
Subject: DEFVAR
To: Bug-lispm at MIT-SPEECH
Message-ID: <850408173915.4.CYPHER@MIT-YOGI.MIT>

There should be a DEFVARish thing for when you don't want to give the
variable an initial value, but do want to give it documentation.
 8-Apr-85 19:08:14-EST,2778;000000000000
Received: from MIT-MORRISON by MIT-OZ via Chaosnet; 8 Apr 85 19:08-EST
Date: Monday, 8 April 1985, 19:06-EST
From: jcma@MIT-MC
Subject: Buggy Name Resolution In Mail And Qsending Across Namespaces
To: BUG-LISPM@OZ
Message-ID: <850408190655.8.JCMA@MORRISON.MIT.EDU>


In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.9,
microcode TMC5-MIC 319, FEP 22, on Lisp Machine James Morrison:

Below is a converse session with someone from sri who is suffering the name
collison blues.  His machine sends his message using a short name that is
unambiguous in the sri namespace but which is ambiguous in the arpanet
namespace.  Hosts should use their full name and/or ensure that there names
are unambiguous in other namespaces.  A pathway to them would of course
eliminate this kind of bug.

To: 


To: APPELT@SU-WHITNEY.ARPA


Date: Mon, 8 Apr 85 15:48 PST
From: APPELT@WHITNEY.ARPA
To: JCMa@[128.52.22.45]

It certainly should.  We've reported the bug, and hope that they fix it
sometime before hell freezes over.


Date: Mon, 8 Apr 85 15:44 PST
From: APPELT@WHITNEY.ARPA
To: JCMa@[128.52.22.45]

I think the problem lies with the Symbolics TCP / mail code.  I have the same
problem if I try to send mail from my LM.  "Whitney" is a unique identifier of
my machine at SRI, however, Stanford got there first with the name "whitney"
and therefore can claim the nickname "whitney" in the host table.  Symbolics
code is not smart enough to notice.

Message not sent to APPELT@SU-WHITNEY.ARPA (4/08/85 18:35:25)
APPELT@SU-WHITNEY.ARPA: SMTP error from SU-WHITNEY: 500 Command unrecognized
Yes, you can.  I just got your reply.

Date: Mon, 8 Apr 85 15:36 PST
From: APPELT@WHITNEY.ARPA
To: JCMa@[128.52.22.45]

	Your send works, but I'm not sure I can successfully reply.



To: appelt@SRI-WHITNEY.ARPA


Message sent to appelt@SRI-WHITNEY.ARPA (4/08/85 18:44:55)
Oh, I see your machine is on the arpanet.  Hmmm, shouldn't
it look and see if its name conlficts with another host and then
use the longer version to avoid ambiguity?  Has this bug been reported?

Message sent to appelt@SRI-WHITNEY.ARPA (4/08/85 18:43:31)
Why is your machine in the stanford namespace?

Message sent to appelt@SRI-WHITNEY.ARPA (4/08/85 18:41:44)
Did you qsend me from su-whitney?  Or did your lispm route your send through su-whitney?

Message sent to appelt@SRI-WHITNEY.ARPA (4/08/85 18:37:58)

The bug is that the return header is su-whitney rather than sri-whitney.
Why is that?

Message sent to appelt@SRI-WHITNEY.ARPA (4/08/85 18:36:31)
Yes, you can.  I just got your reply.

Message sent to appelt@SRI-WHITNEY.ARPA (4/08/85 18:33:50)

Hi Doug, just thought I would say hello and see if
transcontinental qsends work.



 8-Apr-85 19:12:57-EST,2357;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 8 Apr 85 19:12-EST
Received: from MIT-GOLDILOCKS by MIT-OZ via Chaosnet; 8 Apr 85 19:10-EST
Date: Monday, 8 April 1985, 19:10-EST
From: A Lisp Machine <LISPM at MIT-MC>
Subject: Obliterating the file
To: BUG-LISPM at MIT-SPEECH
Message-ID: <850408191010.1.LISP-MACHINE@GOLDILOCKS.MIT>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, Experimental ZOO 5.3,
Experimental ZOO-KEEPER 4.0, Experimental Spire-Macros 5.1,
Experimental Versatec 5.0, Experimental Versatec-Driver 1.0, Print 38.0,
Experimental Versatec-Spool 6.1, Mailer 43.0, microcode TMC5-MIC 319, on Lisp Machine Goldilocks:

I got this error in the process.  I'm going to type resume.

>>Error:  Bad partition index 1835011 in Hierarchy DEFAULT
While in the function LMFS:GET-PART-FROM-PARTX  LMFS:DB-OBLITERATE-FILE  SI:*EVAL

LMFS:GET-PART-FROM-PARTX:  (P.C. = 35)
   Arg 0 (PARENT-PART): #<PARTITION FEP0:>LMFS.file.1 34737547>
   Arg 1 (PARTX): 1835011
   Local 2 (PAR-VOL): #<VOLUME DEFAULT 34743611>
   Local 3 (HIER): #<HIERARACHY DEFAULT 34736027>
   Local 4 (PART-ARRAY): #<ART-Q-4 34743624>
   Local 5 (PART): NIL

LMFS:DB-OBLITERATE-FILE:  (P.C. = 102)
   Arg 0 (PATH): ">s>spire>nlayout.lisp.70"
   Local 0 (PATH): #<LMFS-PATHNAME "GOLDY:>s>spire>nlayout.lisp.70">

SI:*EVAL:  (P.C. = 403)
   Arg 0 (FORM): (LMFS:DB-OBLITERATE-FILE ">s>spire>nlayout.lisp.70")
   Local 0 (FORM): NIL
   --Defaulted args:--
   Arg 1 (ENV): NIL
   Arg 2 (HOOK): NIL

(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0):  (P.C. = 152)
   Arg 0 (.LEXICAL-ENVIRONMENT-POINTER.): #<DTP-LOCATIVE 500047>

TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
   Arg 0 (NEW-MODE): :BLAST
   Arg 1 (STREAM): #:TERMINAL-IO-SYN-STREAM
   Arg 2 (CONTINUATION): #<LEXICAL-CLOSURE (:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0) 500054>

SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
   Arg 0 (NAME): "Lisp Top Level"
   Arg 1 (ABORT-FUNCTION): NIL
   Arg 2 (READ-FUNCTION): NIL
   Arg 3 (EVAL-FUNCTION): NIL
   Arg 4 (PRINT-FUNCTION): NIL

SI:LISP-COMMAND-LOOP:  (P.C. = 67)
   Arg 0: #<LISP-LISTENER Lisp Listener 1 43200216 exposed>
   Rest arg: (:NAME "Lisp Top Level")

SI:LISP-TOP-LEVEL1:  (P.C. = 5)
   Arg 0 (STREAM): #<LISP-LISTENER Lisp Listener 1 43200216 exposed>

Rest of stack:
SI:LISP-TOP-LEVEL:  (P.C. = 7)
 8-Apr-85 19:42:41-EST,365;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 8 Apr 85 19:42-EST
Date: 8 Apr 1985  19:43 EST (Mon)
Message-ID: <SR.EHPYC.12101623482.BABYL@MIT-SPEECH>
From: Scott Cyphers <SR.EHPYC@MIT-SPEECH>
To:   BUG-LISPM@MIT-SPEECH
Subject: Obliterating the file
In-reply-to: Msg of 8 Apr 1985 19:10-EST from A Lisp Machine <LISPM at MIT-MC>

It worked.  Thanks. 
 8-Apr-85 19:53:20-EST,1838;000000000000
Received: from MIT-MORRISON by MIT-OZ via Chaosnet; 8 Apr 85 19:53-EST
Date: Monday, 8 April 1985, 19:51-EST
From: jcma@MIT-MC
Subject: Converse Doesn't Handle Multiple Participant Conferences
To: Bug-Zwei@SCRC-STONY-BROOK
cc: bug-lispm@OZ
Message-ID: <850408195149.9.JCMA@MORRISON.MIT.EDU>


In Symbolics 3600 Zwei in Release 6.0, IP-TCP 29.0, AISite 7.9,
microcode TMC5-MIC 319, FEP 22, on Lisp Machine James Morrison:

I just noticed, now that we have the winning TCP code, that converse doesn't
support the concept of CCing messages or discussion lists.  It would seem that
people in different geographical locations might all want to talk in a group
about some subject.  But, there is no support in converse, so they would have
to manually relay messages to the participants.  The concept of CCing would
solve the problem.  

The idea of realtime discussion lists seems more difficult.  But, a discussion
list object could be defined in the relevant namespaces.  It's job would be to
translate discussion list names into the participants addresses.  The senders
machine could then fire off copies to the various participants based on that
information.  I suppose the idea of redistribution would fit in for cases in
which multiple participants are at the same site.  That would require a
redistribution protocol local to the recipients end.

I would image this could prove useful to Symbolics since it has people spread
around geographically.  It's real value is that it lowers the turn-around time
on communication, and that is important is cases where there is serious time
constraint. (e.g., the NASA lispm is in the cold load stream while trying to
bring down the shuttle.  NASA gets a bunch of wizards in on a realtime
discussion, passing around backtraces ... and it get's fixed in 5 minutes).
 8-Apr-85 21:33:03-EST,1039;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 8 Apr 85 21:20-EST
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 211256; Mon 8-Apr-85 20:34:11-EST
Date: Mon, 8 Apr 85 21:12 EST
From: David A. Moon <Moon@STONY-BROOK.SCRC.Symbolics.COM>
Subject: Converse Doesn't Handle Multiple Participant Conferences
To: jcma@MC.MIT
cc: Bug-Zwei@STONY-BROOK.SCRC.Symbolics.COM, bug-lispm@OZ.MIT.EDU
In-Reply-To: <850408195149.9.JCMA@MORRISON.MIT.EDU>
Message-ID: <850408211238.7.MOON@EUPHRATES.SCRC.Symbolics.COM>

    Date: Mon, 8 Apr 85 19:51 EST
    From: jcma@MIT-MC.ARPA

    In Symbolics 3600 Zwei in Release 6.0, IP-TCP 29.0, AISite 7.9,
    microcode TMC5-MIC 319, FEP 22, on Lisp Machine James Morrison:

    I just noticed, now that we have the winning TCP code, that converse doesn't
    support the concept of CCing messages or discussion lists.  

I don't know what you mean; I use multiple participant conferences all the time.
Just type multiple user names separated by commas.
 8-Apr-85 22:10:58-EST,2374;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 8 Apr 85 22:10-EST
Received: from SCRC-NEPONSET by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 151724; Mon 8-Apr-85 20:56:27-EST
Date: Monday, 8 April 1985, 20:58-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: Converse Doesn't Handle Multiple Participant Conferences
To: jcma at MIT-MC, Bug-Zwei at SCRC-STONY-BROOK
cc: bug-lispm at OZ
In-Reply-To: <850408195149.9.JCMA@MORRISON.MIT.EDU>
Message-ID: <850408205803.8.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Monday, 8 April 1985, 19:51-EST
    From: jcma@MIT-MC


    In Symbolics 3600 Zwei in Release 6.0, IP-TCP 29.0, AISite 7.9,
    microcode TMC5-MIC 319, FEP 22, on Lisp Machine James Morrison:

    I just noticed, now that we have the winning TCP code, that converse doesn't
    support the concept of CCing messages or discussion lists.  It would seem that
    people in different geographical locations might all want to talk in a group
    about some subject.  But, there is no support in converse, so they would have
    to manually relay messages to the participants.  The concept of CCing would
    solve the problem.  

    The idea of realtime discussion lists seems more difficult.  But, a discussion
    list object could be defined in the relevant namespaces.  It's job would be to
    translate discussion list names into the participants addresses.  The senders
    machine could then fire off copies to the various participants based on that
    information.  I suppose the idea of redistribution would fit in for cases in
    which multiple participants are at the same site.  That would require a
    redistribution protocol local to the recipients end.

    I would image this could prove useful to Symbolics since it has people spread
    around geographically.  It's real value is that it lowers the turn-around time
    on communication, and that is important is cases where there is serious time
    constraint. (e.g., the NASA lispm is in the cold load stream while trying to
    bring down the shuttle.  NASA gets a bunch of wizards in on a realtime
    discussion, passing around backtraces ... and it get's fixed in 5 minutes).

The CONVERSE service, which is different than CHAOS-SEND (or SEND)
supports multiple To: fields.  Did you know about that and you also want
CC:?
 9-Apr-85 09:29:49-EST,985;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 9 Apr 85 09:29-EST
Received: from MIT-YOGI by GOLDILOCKS via CHAOS with CHAOS-MAIL id 102; Tue 9-Apr-85 09:25:40-EST
Date: Tuesday, 9 April 1985, 09:25-EST
From: Robert Kassel <sr.rob at MIT-SPEECH>
Subject: Yet another Graphic Lisp Bug
To: BUG-LISPM at MIT-SPEECH
Message-ID: <850409092512.1.ROB@MIT-YOGI.MIT>

In Symbolics 3670 Release 6.0, IP-TCP 29.0, Experimental ZOO 5.4,
Experimental Spire-Macros 5.1, Experimental Attribute 5.0,
Experimental Compute 5.2, Experimental Audio 4.0,
Experimental Speech-Attributes 4.0, Experimental Display 6.0,
Experimental Speech-Layouts 6.0, Experimental Prtout 4.0,
Experimental Versatec 5.0, Experimental Spire 16.0, ZOO-SPIRE 1.0,
Graphic Lisp 7.0, microcode TMC5-IO4-FPA-MIC 319, on Lisp Machine Yogi:

Sorry no backtrace, but I couldn't produce one.

Try evaluating (circular-list 'yow 'i 'am 'having 'fun) and you will get
a control stack overflowed error.

					ROB
 9-Apr-85 10:17:58-EST,1611;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 9 Apr 85 10:17-EST
Received: from SCRC-ANNISQUAM by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 211459; Tue 9-Apr-85 09:53:52-EST
Date: Tue, 9 Apr 85 09:53 EST
From: Doug Dodds <DODDS@SCRC-TENEX>
Subject: CP wants an explicit file name
To: Zvona@OZ
cc: BUG-LISPM@OZ, Bug-CP@SCRC-TENEX
In-Reply-To: <850407173706.2.ZVONA@DUANE.MIT.EDU>
Message-ID: <850409095341.8.DODDS@ANNISQUAM.SCRC.Symbolics.COM>

    Date: Sunday, 7 April 1985, 17:37-EST
    From: David Chapman <Zvona at OZ>

    In Symbolics 3670 Release 6.0, IP-TCP 29.0, AISite 7.9,
    microcode TMC5-IO4-MIC 319, FEP 22, on Lisp Machine Duane Allman:

    It's incompatible with Zwei, 20X, and everything else I can think of
    that when the CP wants a file name and gives you a default you don't get
    the default just by typing carriage return.

This happens only in a certain set of commands that require confirmation
(e.g., copy file).  At present, you have to type one more space, to
cause the CP to fill in the default to the next argument field.  

This somewhat confusing situation happens because the CP (still in a
somewhat underdeveloped stage) doesn't "know" that the default has been
presented visually to the user.  The presentation is via a prompt
mechanism defined for the command in quesiton, which optionally can
include the default value.  The underlying CP mechanism is not yet
tightly enough coordinated to know for sure that the default has been
presented in that way.

This matter is on the improvements list.  Thanks for the report.
 9-Apr-85 10:18:41-EST,3510;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 9 Apr 85 10:18-EST
Received: from SCRC-PEACE by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 211474; Tue 9-Apr-85 10:14:08-EST
Date: Tue, 9 Apr 85 10:14 EST
From: Charles Hornig <Hornig@STONY-BROOK.SCRC.Symbolics.COM>
Subject: Buggy Name Resolution In Mail And Qsending Across Namespaces
To: jcma@MC.MIT, BUG-LISPM@OZ.MIT
In-Reply-To: <850408190655.8.JCMA@MORRISON.MIT.EDU>
Message-ID: <850409101415.3.HORNIG@PEACE.SCRC.Symbolics.COM>

    Date: Monday, 8 April 1985, 19:06-EST
    From: jcma@MIT-MC

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.9,
    microcode TMC5-MIC 319, FEP 22, on Lisp Machine James Morrison:

    Below is a converse session with someone from sri who is suffering the name
    collison blues.  His machine sends his message using a short name that is
    unambiguous in the sri namespace but which is ambiguous in the arpanet
    namespace.  Hosts should use their full name and/or ensure that there names
    are unambiguous in other namespaces.  A pathway to them would of course
    eliminate this kind of bug.

SRI should either register their machines in the NIC host table, in
which case they would get unambiguous names to be used in this context,
or give their local namespace an Internet Domain Name attribute so that
the ambiguity can be dealt with in that way.

    To: APPELT@SU-WHITNEY.ARPA


    Date: Mon, 8 Apr 85 15:48 PST
    From: APPELT@WHITNEY.ARPA
    To: JCMa@[128.52.22.45]

    It certainly should.  We've reported the bug, and hope that they fix it
    sometime before hell freezes over.


    Date: Mon, 8 Apr 85 15:44 PST
    From: APPELT@WHITNEY.ARPA
    To: JCMa@[128.52.22.45]

    I think the problem lies with the Symbolics TCP / mail code.  I have the same
    problem if I try to send mail from my LM.  "Whitney" is a unique identifier of
    my machine at SRI, however, Stanford got there first with the name "whitney"
    and therefore can claim the nickname "whitney" in the host table.  Symbolics
    code is not smart enough to notice.

    Message not sent to APPELT@SU-WHITNEY.ARPA (4/08/85 18:35:25)
    APPELT@SU-WHITNEY.ARPA: SMTP error from SU-WHITNEY: 500 Command unrecognized
    Yes, you can.  I just got your reply.

    Date: Mon, 8 Apr 85 15:36 PST
    From: APPELT@WHITNEY.ARPA
    To: JCMa@[128.52.22.45]

	    Your send works, but I'm not sure I can successfully reply.



    To: appelt@SRI-WHITNEY.ARPA


    Message sent to appelt@SRI-WHITNEY.ARPA (4/08/85 18:44:55)
    Oh, I see your machine is on the arpanet.  Hmmm, shouldn't
    it look and see if its name conlficts with another host and then
    use the longer version to avoid ambiguity?  Has this bug been reported?

    Message sent to appelt@SRI-WHITNEY.ARPA (4/08/85 18:43:31)
    Why is your machine in the stanford namespace?

    Message sent to appelt@SRI-WHITNEY.ARPA (4/08/85 18:41:44)
    Did you qsend me from su-whitney?  Or did your lispm route your send through su-whitney?

    Message sent to appelt@SRI-WHITNEY.ARPA (4/08/85 18:37:58)

    The bug is that the return header is su-whitney rather than sri-whitney.
    Why is that?

    Message sent to appelt@SRI-WHITNEY.ARPA (4/08/85 18:36:31)
    Yes, you can.  I just got your reply.

    Message sent to appelt@SRI-WHITNEY.ARPA (4/08/85 18:33:50)

    Hi Doug, just thought I would say hello and see if
    transcontinental qsends work.



 9-Apr-85 11:08:45-EST,3067;000000000000
Received: from MIT-MOON by MIT-OZ via Chaosnet; 9 Apr 85 11:06-EST
Date: Tuesday, 9 April 1985, 11:02-EST
From: Alan Bawden <Alan at MIT-MC>
Subject: Supdup graphics
To: BUG-LISPM at OZ
Message-ID: <850409110255.1.ALAN@MOON.MIT>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.9,
microcode TMC5-MIC 319, on Lisp Machine Keith Moon:

I was running DPRESS on MC on the file AR:.;THESIS PRESS (ITS hackers
can guess why I was doing that!)  I was just N'ing through the file
when:

>>Error: The object #<SUPDUP-GRAPHICS-STATE 30510141> received a NIL message, which went unclaimed.
         The rest of the message was (36)
While in the function (:METHOD TELNET:SUPDUP-GRAPHICS-STATE :GRAPHICS-PUSH)  (:METHOD TELNET:SUPDUP-GRAPHICS-STATE :SUPDUP-GRAPHICS)  (:METHOD TELNET:SUPDUP-STATE-BLOCK :SUPDUP-GRAPHICS)

(:METHOD TELNET:SUPDUP-GRAPHICS-STATE :GRAPHICS-PUSH):  (P.C. = 107)
   Arg 0 (SELF): #<SUPDUP-GRAPHICS-STATE 30510141>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TELNET:SUPDUP-GRAPHICS-STATE -- 11. IV's, 0. FL's 104505661>
   Arg 2 (OPERATION): :GRAPHICS-PUSH
   Arg 3 (IGNORE): 9
   Local 4: -277
   Local 5: 4
   Local 6: 541
   Local 7: -540
   Local 8: 364
   Local 9: -366
   Local 10: NIL
   Local 11: NIL
   Local 12: SYS:UNWIND-PROTECT-TAG
   Local 13: #<DTP-EVEN-PC 31454704>
   Local 14: #<DTP-LOCATIVE 44300014>
   Local 15: #<DTP-LOCATIVE 14500155>
   Local 16 (CH): 36

(:METHOD TELNET:SUPDUP-GRAPHICS-STATE :SUPDUP-GRAPHICS):  (P.C. = 33)
   Arg 0 (SELF): #<SUPDUP-GRAPHICS-STATE 30510141>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TELNET:SUPDUP-GRAPHICS-STATE -- 11. IV's, 0. FL's 104505661>
   Arg 2 (OPERATION): :SUPDUP-GRAPHICS
   Arg 3: #<CHARACTER-STREAM 30510052>

(:METHOD TELNET:SUPDUP-STATE-BLOCK :SUPDUP-GRAPHICS):  (P.C. = 5)
   Arg 0 (SELF): #<SUPDUP-STATE-BLOCK 30510131>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TELNET:SUPDUP-STATE-BLOCK -- 6. IV's, 0. FL's 24077676>
   Arg 2 (OPERATION): :SUPDUP-GRAPHICS
   Arg 3 (INPUT-STREAM): #<CHARACTER-STREAM 30510052>

(:METHOD TELNET:SUPDUP-FILTER :FILTER):  (P.C. = 27)
   Arg 0 (SELF): #<SUPDUP-FILTER 30510124>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TELNET:SUPDUP-FILTER -- 3. IV's, 0. FL's 143174607>
   Arg 2 (OPERATION): :FILTER
   Arg 3 (CH): 153

(:METHOD TELNET:FILTER-STREAM :TYI-NO-HANG):  (P.C. = 17)
   Arg 0 (SELF): #<SUPDUP-FILTER 30510124>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TELNET:FILTER-STREAM -- 3. IV's, 0. FL's 143174615>
   Arg 2 (OPERATION): :TYI-NO-HANG
   Arg 3 (EOF): T

(:METHOD TELNET:NVT-WINDOW :TYPEOUT-TOP-LEVEL):  (P.C. = 131)
   Arg 0 (SELF): #<NVT-WINDOW Terminal 1 600106 deexposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TELNET:NVT-WINDOW -- 10. IV's, 14. FL's 143025751>
   Arg 2 (OPERATION): :TYPEOUT-TOP-LEVEL

SEND:  (P.C. = 6)
   Arg 0 (OBJECT): #<NVT-WINDOW Terminal 1 600106 deexposed>
   Arg 1 (MESSAGE-NAME): :TYPEOUT-TOP-LEVEL
   Rest arg (ARGUMENTS): NIL

SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
   Arg 0 (IGNORE): NIL
 9-Apr-85 11:43:46-EST,4101;000000000000
Received: from MIT-APIARY-3 by MIT-OZ via Chaosnet; 9 Apr 85 11:43-EST
Date: Tuesday, 9 April 1985, 11:39-EST
From: Randy Parker <PARKER at OZ>
Subject: buffer name not updated after retry open using different pathname
To: BUG-LISPM at OZ
Message-ID: <850409113900.1.PARKER@APIARY-3.MIT>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.9,
microcode TMC5-MIC 319, on Lisp Machine Apiary-3:

I tried saving a file such as below with a larger than allowable
generation number.   One of the debugger options for this error
was s-B, Retry open using a different pathname.  I did so with a
more reasonable gen #, but the buffer name (and its value on
the modeline) were not updated from foo.bar.666666.  This is
inconsistent with other editor behavior (although admittedly
insignificant), but does cause defaulting, revert buffer, etc.
to fail.

RP

>>Error: No such generation number
         For OZ:PS:<PARKER>FOO.BAR.666666
While in the function (:METHOD FS:HOST-UNIT :COMMAND)  FS:OPEN-CHAOS  (:METHOD FS:QFILE-ACCESS-PATH :OPEN)

(:METHOD FS:HOST-UNIT :COMMAND):  (P.C. = 236)
   Arg 0 (SELF): #<HOST-UNIT 30363412>
   Arg 1 (SELF-MAPPING-TABLE): FS:HOST-UNIT
   Arg 2 (OPERATION): :COMMAND
   Arg 3 (MARK-P): NIL
   Arg 4 (STREAM-OR-HANDLE): (:CREATE "O2434")
   Local 4 (STREAM-OR-HANDLE): "O2434"
   Arg 5 (SIMPLE-P): NIL
   Arg 6 (WHOSTATE): "Open"
   Rest arg (COMMANDS): ("OPEN " :WRITE " " :CHARACTER "" "" "" "" "" "" ...)
   Local 8 (HANDLE): "O2434"
   Local 9 (STREAM): NIL
   Local 10 (PKT): #<Chaos Packet 1702444>
   Local 11 (SUCCESS): NIL
   Local 12 (STRING): "O2434 ERROR FNF F No such generation number"
   Local 13 (TRANSACTION-ID): "T2443"
   Local 14 (CREATE-P): T
   Local 15 (CONDITION): NIL
   Local 16: T
   Local 17: #<CASE-HANDLER 120711625>
   Local 18: (#<LEXICAL-CLOSURE ** 43440053>)
   Local 19: (#<CASE-HANDLER 120711625> #<LEXICAL-CLOSURE ** 43440053>)

FS:OPEN-CHAOS:  (P.C. = 674)
   Arg 0 (ACCESS-PATH): #<TOPS20-QFILE-ACCESS-PATH OZ using QFILE 30363401>
   Arg 1 (REAL-PATHNAME): #<TOPS20-PATHNAME "OZ:PS:<PARKER>FOO.BAR.666666">
   Arg 2: #<TOPS20-PATHNAME "OZ:PS:<PARKER>FOO.BAR.666666">
   Arg 3 (OPTIONS): (:CHARACTERS T :DIRECTION :OUTPUT)

(:METHOD FS:QFILE-ACCESS-PATH :OPEN):  (P.C. = 7)
   Arg 0 (SELF): #<TOPS20-QFILE-ACCESS-PATH OZ using QFILE 30363401>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:QFILE-ACCESS-PATH -- 4. IV's, 0. FL's 121666243>
   Arg 2 (OPERATION): :OPEN
   Arg 3 (REAL-PATHNAME): #<TOPS20-PATHNAME "OZ:PS:<PARKER>FOO.BAR.666666">
   Arg 4 (PATHNAME): #<TOPS20-PATHNAME "OZ:PS:<PARKER>FOO.BAR.666666">
   Rest arg (OPTIONS): (:CHARACTERS T :DIRECTION :OUTPUT)

(:METHOD FS:ACTIVE-PATHNAME-MIXIN :OPEN):  (P.C. = 14)
   Arg 0 (SELF): #<TOPS20-PATHNAME "OZ:PS:<PARKER>FOO.BAR.666666">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:ACTIVE-PATHNAME-MIXIN -- 1. IV's, 0. FL's 105211451>
   Arg 2 (OPERATION): :OPEN
   Arg 3 (PATHNAME): #<TOPS20-PATHNAME "OZ:PS:<PARKER>FOO.BAR.666666">
   Rest arg (OPTIONS): (:CHARACTERS T :DIRECTION :OUTPUT)

FS:MACLISP-COMPATIBILITY-OPEN:  (P.C. = 365)
   Arg 0 (FILENAME): #<TOPS20-PATHNAME "OZ:PS:<PARKER>FOO.BAR.666666">
   Arg 1 (OPTIONS): (ZWEI:OUT)

OPEN:  (P.C. = 254)
   Arg 0 (PATHNAME): #<TOPS20-PATHNAME "OZ:PS:<PARKER>FOO.BAR.666666">
   Rest arg (KEYWORD-ARGS): ((ZWEI:OUT))

(:METHOD ZWEI:FILE-BUFFER-MIXIN :SAVE):  (P.C. = 46)
   Arg 0 (SELF): #<FILE-BUFFER "FOO.BAR.666666 PS:<PARKER> OZ:" 10540234>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:FILE-BUFFER-MIXIN -- 9. IV's, 0. FL's 104512643>
   Arg 2 (OPERATION): :SAVE

ZWEI:COM-WRITE-FILE:  (P.C. = 20)

Rest of stack:
ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
ZWEI:MAKE-EXTENDED-COMMAND-INTERNAL:  (P.C. = 107)
Closure of ZWEI:MAKE-EXTENDED-COMMAND-INTERNAL:
ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 233)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 60)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 51)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
 9-Apr-85 13:05:01-EST,1688;000000000000
Received: from MIT-MOON by MIT-OZ via Chaosnet; 9 Apr 85 13:04-EST
Date: Tuesday, 9 April 1985, 13:00-EST
From: A Lisp Machine <LISPM at MIT-MC>
Subject: It was there, so I tried it
To: BUG-LISPM at OZ
Message-ID: <850409130026.3.LISP-MACHINE@MOON.MIT>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.9,
microcode TMC5-MIC 319, on CHAOS|13056:

I tried ":Set Site ML":

>>Error: The object of type HOST has been deleted.
While in the function (:METHOD NET:OBJECT :PRIMARY-NAME)  LOGIN  SI:LOGIN-TO-SYS-HOST

(:METHOD NET:OBJECT :PRIMARY-NAME):  (P.C. = 10)
   Arg 0 (SELF): #<LISPM-HOST <Deleted> 16225440>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NET:OBJECT -- 4. IV's, 1. FL's 104224520>
   Arg 2 (OPERATION): :PRIMARY-NAME
   --Defaulted args:--
   Arg 3 (NAMESPACE): NIL

LOGIN:  (P.C. = 102)
   Arg 0 (USER-NAME): "LISP-MACHINE"
   Local 0 (USER-NAME): "LISP-MACHINE"
   Rest arg: (:LOAD-INIT-FILE NIL :NO-QUERY-WHEN-UNKNOWN T)

SI:LOGIN-TO-SYS-HOST:  (P.C. = 10)

NETI:CHANGE-LOCAL-SITE-2:  (P.C. = 47)

NETI:CHANGE-LOCAL-SITE-AND-HOST:  (P.C. = 15)
   Arg 0 (SITE): #<SITE ML 1153002>

NET:SET-SITE:  (P.C. = 25)
   Arg 0 (SITE-AND-NAMESPACE-NAME): :ML
   Rest arg: NIL

(:PROPERTY SI:COM-SET-SITE SI:CP-FUNCTION):  (P.C. = 7)
   Arg 0 (SITE): "ml"
   Local 0 (SITE): :ML

SI:COM-SET-SITE:  (P.C. = 7)
   Arg 0 (SITE): "ml"

Rest of stack:
SI:*EVAL:  (P.C. = 403)
(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0):  (P.C. = 152)
TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
SI:LISP-COMMAND-LOOP:  (P.C. = 67)
SI:LISP-TOP-LEVEL1:  (P.C. = 5)
SI:LISP-TOP-LEVEL:  (P.C. = 7)
 9-Apr-85 13:34:49-EST,490;000000000000
Received: from MIT-MOON by MIT-OZ via Chaosnet; 9 Apr 85 13:34-EST
Date: Tuesday, 9 April 1985, 13:28-EST
From: A Lisp Machine <LISPM at MIT-MC>
Subject: :Reset Font
To: BUG-LISPM at OZ
Message-ID: <850409132831.4.LISP-MACHINE@MOON.MIT>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.9,
microcode TMC5-MIC 319, on Lisp Machine Keith Moon:

:Reset Font <complete>
 lists a bunch of interesting fonts including "NAMED-STRUCTURE-SYMBOL"...  It won't let me use it though...
 9-Apr-85 13:46:17-EST,2416;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 9 Apr 85 13:46-EST
Received: from MIT-CHERRY by MIT-MC via Chaosnet; 9 APR 85  13:41:56 EST
Date: Tuesday, 9 April 1985, 13:40-EST
From: Dinarte R. Morais <DRM at MIT-XX>
Subject: Show Font command loses
To: BUG-LISPM at OZ
Message-ID: <850409134043.1.DRM@CHERRY.MIT>

In Symbolics 3670 Release 6.0, IP-TCP 29.0, microcode TMC5-IO4-MIC 319,
FEP 22, Tanglewood Version VIII, on Project Tanglewood Cherry:

Issued the command :show font oeng50.  It went to Reagan to read it,
then this happened.

-- Dinarte R. Morais

>>Error: The second argument (DEFAULTS) to FS:SET-DEFAULT-PATHNAME, NIL, was of the wrong type.
         The function expected pathname defaults alist.
While in the function FS:SET-DEFAULT-PATHNAME  FED:LOAD-FONT-FROM-SYM  (:PROPERTY SI:COM-SHOW-FONT SI:CP-FUNCTION)

FS:SET-DEFAULT-PATHNAME:  (P.C. = 134)
   Arg 0 (PATHNAME): #<LMFS-PATHNAME "B:>sys>r6>fonts>tv>oeng50.bfd">
   Arg 1 (DEFAULTS): NIL
   Local 2: ("Skip setting default to ~A,~@
			       and perhaps try to use it." #<LMFS-PATHNAME "B:>sys>r6>fonts>tv>oeng50.bfd">)
   Local 3 (ELEM): NIL

FED:LOAD-FONT-FROM-SYM:  (P.C. = 27)
   Arg 0 (SYM): FONTS:OENG50
   --Defaulted args:--
   Arg 1 (QUERY-P): NIL

(:PROPERTY SI:COM-SHOW-FONT SI:CP-FUNCTION):  (P.C. = 11)
   Arg 0 (FONT): "OENG50"

SI:COM-SHOW-FONT:  (P.C. = 7)
   Arg 0 (FONT): "OENG50"

SI:*EVAL:  (P.C. = 403)
   Arg 0 (FORM): (SI:COM-SHOW-FONT "OENG50")
   Local 0 (FORM): NIL
   --Defaulted args:--
   Arg 1 (ENV): NIL
   Arg 2 (HOOK): NIL

(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0.):  (P.C. = 152)
   Arg 0 (.LEXICAL-ENVIRONMENT-POINTER.): #<DTP-LOCATIVE 500047>

TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
   Arg 0 (NEW-MODE): :BLAST
   Arg 1 (STREAM): #:TERMINAL-IO-SYN-STREAM
   Arg 2 (CONTINUATION): #<LEXICAL-CLOSURE (:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0.) 500054>

SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
   Arg 0 (NAME): "Lisp Top Level"
   Arg 1 (ABORT-FUNCTION): NIL
   Arg 2 (READ-FUNCTION): NIL
   Arg 3 (EVAL-FUNCTION): NIL
   Arg 4 (PRINT-FUNCTION): NIL

SI:LISP-COMMAND-LOOP:  (P.C. = 67)
   Arg 0: #<LISP-LISTENER Lisp Listener 1 43200216 exposed>
   Rest arg: (:NAME "Lisp Top Level")

SI:LISP-TOP-LEVEL1:  (P.C. = 5)
   Arg 0 (STREAM): #<LISP-LISTENER Lisp Listener 1 43200216 exposed>

SI:LISP-TOP-LEVEL:  (P.C. = 7)
 9-Apr-85 14:09:08-EST,1971;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 9 Apr 85 14:09-EST
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 211705; Tue 9-Apr-85 14:03:01-EST
Date: Tuesday, 9 April 1985, 14:03-EST
From: David A. Moon <Moon at SCRC-STONY-BROOK>
Subject: buffer name not updated after retry open using different pathname
To: Randy Parker <PARKER at OZ>
cc: BUG-LISPM at OZ
In-Reply-To: <850409113900.1.PARKER@APIARY-3.MIT>
Message-ID: <850409140349.4.MOON@EUPHRATES.SCRC.Symbolics.COM>

    Date: Tuesday, 9 April 1985, 11:39-EST
    From: Randy Parker <PARKER at OZ>

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.9,
    microcode TMC5-MIC 319, on Lisp Machine Apiary-3:

    I tried saving a file such as below with a larger than allowable
    generation number.   One of the debugger options for this error
    was s-B, Retry open using a different pathname.  I did so with a
    more reasonable gen #, but the buffer name (and its value on
    the modeline) were not updated from foo.bar.666666.  This is
    inconsistent with other editor behavior (although admittedly
    insignificant), but does cause defaulting, revert buffer, etc.
    to fail.

The actual text of the proceed option you invoked was "Retry OPEN
using a different pathname, without telling its caller."  Am I right?
Can you suggest a way to reword this to make it clearer that by
invoking this option you are subverting the underlying program?

    >>Error: No such generation number
	     For OZ:PS:<PARKER>FOO.BAR.666666

    OPEN:  (P.C. = 254)
       Arg 0 (PATHNAME): #<TOPS20-PATHNAME "OZ:PS:<PARKER>FOO.BAR.666666">
       Rest arg (KEYWORD-ARGS): ((ZWEI:OUT))

This is also a bug in Tops-20 pathname support, since the Lisp machine should
have known locally that this was an illegal pathname.  What happens on Tenex
with large version numbers is even more ludicrous (Tenex quietly writes version
1 instead).
 9-Apr-85 15:48:20-EST,1634;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 9 Apr 85 15:45-EST
Received: from OLYMPIC by WAIKATO via CHAOS with CHAOS-MAIL id 91831; Tue 9-Apr-85 15:42:49-EST
Date: Tuesday, 9 April 1985, 15:43-EST
From: Jonathan L. Balgley <jlb at WAIKATO>
Subject: Yet another Graphic Lisp Bug
To: sr.rob at MIT-SPEECH, BUG-LISPM at MIT-SPEECH
In-Reply-To: <850409092512.1.ROB@MIT-YOGI.MIT>
Message-ID: <850409154301.6.JLB@OLYMPIC.SCRC.Symbolics.COM>

    Date: Tuesday, 9 April 1985, 09:25-EST
    From: Robert Kassel <sr.rob at MIT-SPEECH>

    In Symbolics 3670 Release 6.0, IP-TCP 29.0, Experimental ZOO 5.4,
    Experimental Spire-Macros 5.1, Experimental Attribute 5.0,
    Experimental Compute 5.2, Experimental Audio 4.0,
    Experimental Speech-Attributes 4.0, Experimental Display 6.0,
    Experimental Speech-Layouts 6.0, Experimental Prtout 4.0,
    Experimental Versatec 5.0, Experimental Spire 16.0, ZOO-SPIRE 1.0,
    Graphic Lisp 7.0, microcode TMC5-IO4-FPA-MIC 319, on Lisp Machine Yogi:

    Sorry no backtrace, but I couldn't produce one.

    Try evaluating (circular-list 'yow 'i 'am 'having 'fun) and you will get
    a control stack overflowed error.

					    ROB


This has been a known bug for a while now.  I won't be able to get to it
soon.  

Graphic Lisp can handle circular lists, when it doesn't have to create
the graphic objects itself.  That is, it's perfectly OK for you to make
a (graphic) list, then alter it to be circular.  It's also OK to have a
graphic list on GL's window, then alter it to be circular in Lisp
(hitting refresh will redisplay it properly in GL).

 9-Apr-85 15:54:01-EST,1272;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 9 Apr 85 15:53-EST
Received: from SCRC-NEPONSET by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 151968; Tue 9-Apr-85 15:12:01-EST
Date: Tuesday, 9 April 1985, 15:16-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: :Reset Font
To: A Lisp Machine <LISPM at MIT-MC>, BUG-LISPM at OZ,
    Bug-CP at SCRC-QUABBIN
In-Reply-To: <850409132831.4.LISP-MACHINE@MOON.MIT>
Message-ID: <850409151658.4.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Tuesday, 9 April 1985, 13:28-EST
    From: A Lisp Machine <LISPM at MIT-MC>

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.9,
    microcode TMC5-MIC 319, on Lisp Machine Keith Moon:

    :Reset Font <complete>
     lists a bunch of interesting fonts including "NAMED-STRUCTURE-SYMBOL"...  It won't let me use it though...

My machine doesn't seem to have :Reset Font.  :Show Font <help> does
show NAMED-STRUCTURE-SYMBOL as an option.  I believe this symbol is in
this package for trying to catch conversion problems from the Rel 4 to
Rel 5 package systems.  I'll see that it doesn't exist in Rel7.

The Help list probably wants to be a bit smarter and only list symbols
that are bound and have a font structure in their value cell.
 9-Apr-85 15:59:45-EST,1273;000000000000
Mail-From: JCMA created at  9-Apr-85 15:59:26
Date: Tue, 9 Apr 1985  15:59 EST
Message-ID: <JCMA.12101844884.BABYL@MIT-OZ>
From: JCMA@MIT-OZ
To:   A Lisp Machine <LISPM@MIT-MC>
Cc:   BUG-LISPM@MIT-OZ
Subject: :Reset Font
In-reply-to: Msg of 9 Apr 1985 13:28-EST from A Lisp Machine <LISPM at MIT-MC>

    Received: from MIT-MOON by MIT-OZ via Chaosnet; 9 Apr 85 13:34-EST
    Date: Tuesday, 9 April 1985, 13:28-EST
    From: A Lisp Machine <LISPM at MIT-MC>
    Subject: :Reset Font
    To: BUG-LISPM at OZ
    Message-ID: <850409132831.4.LISP-MACHINE@MOON.MIT>

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.9,
    microcode TMC5-MIC 319, on Lisp Machine Keith Moon:

    :Reset Font <complete>
     lists a bunch of interesting fonts including "NAMED-STRUCTURE-SYMBOL"...
     It won't let me use it though...

This command is defined in B:>aisite>cp.lisp.  The the listing
of loaded fonts comes when one hits help.  You can then click
on the one that you want to have as the default font.  The
work of reading the font and putting up the display is being
done by prompt-and-read for a :font type (I bet).  It is
a good thing that it won't let him select that font and screw
himself, but maybe it shouldn't show it to him either.
 9-Apr-85 17:00:05-EST,4258;000000000000
Received: from MIT-ZERMATT by MIT-OZ via Chaosnet; 9 Apr 85 16:58-EST
Date: Tuesday, 9 April 1985, 16:54-EST
From: CJL at OZ
Sender: LISPM at MIT-MC
Subject: VMS pathname lossage
To: BUG-LISPM at OZ
Message-ID: <850409165452.1.LISP-MACHINE@ZERMATT.MIT>

In Symbolics 3670 Release 6.0, IP-TCP 29.0, MLSite 2.3, Mailer 43.0,
microcode TMC5-IO4-MIC 319, on Lisp Machine Zermatt:

I used to (release 5) be able to copy from a lisp machine to a vms and
it would make the pathnames for the vms host legal. Now it only gives an
error. I liked it the way it was before.

>>Error: "COMPAT-3600" is an invalid name component for OBERON (a VMS host).
While in the function (:METHOD FS:PATHNAME :VALIDATE-COMPONENT)  (:METHOD FS:PATHNAME :VALIDATE)  (:METHOD FS:PATHNAME-HASH-TABLE-MIXIN :GET-PATHNAME)

(:METHOD FS:PATHNAME :VALIDATE-COMPONENT):  (P.C. = 40)
   Arg 0 (SELF): #<VMS-PATHNAME "OBERON:SYS$DISK:[NIKL]FOO.BIN;4">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:PATHNAME -- 8. IV's, 1. FL's 105216320>
   Arg 2 (OPERATION): :VALIDATE-COMPONENT
   Arg 3 (TEST-ARG): "COMPAT-3600"
   Arg 4 (TEST-ARG-LOC): #<DTP-LOCATIVE 25726656>
   Arg 5 (VALID-MSG): :RAW-NAME
   Arg 6 (TEST-MSG): :VALID-NAME-P
   Arg 7 (CASE-MSG): :CASE-NAME
   Arg 8 (UNCASE-MSG): :UNCASE-NAME
   Arg 9 (COMPONENT): :NAME
   Arg 10 (PRETTY-NAME): "name component"

(:METHOD FS:PATHNAME :VALIDATE):  (P.C. = 45)
   Arg 0 (SELF): #<VMS-PATHNAME "OBERON:SYS$DISK:[NIKL]FOO.BIN;4">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:PATHNAME -- 8. IV's, 1. FL's 105216320>
   Arg 2 (OPERATION): :VALIDATE

(:METHOD FS:PATHNAME-HASH-TABLE-MIXIN :GET-PATHNAME):  (P.C. = 30)
   Arg 0 (SELF): #<CASE-INSENSITIVE-PATHNAME-HASH-TABLE OBERON>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:PATHNAME-HASH-TABLE-MIXIN -- 1. IV's, 0. FL's 104225614>
   Arg 2 (OPERATION): :GET-PATHNAME
   Arg 3 (DEV): "SYS$DISK"
   Arg 4 (DIR): ("NIKL")
   Arg 5 (NAM): "COMPAT-3600"
   Arg 6 (TYP): "BIN"
   Arg 7 (VRS): 4
   Arg 8 (OTHERS): NIL
   Arg 9 (KEY): ("SYS$DISK" ("NIKL") "COMPAT-3600" "BIN" 4)

(:METHOD NET:PATHNAME-HOST-MIXIN :GET-PATHNAME):  (P.C. = 31)
   Arg 0 (SELF): #<VMS-HOST OBERON 6251260>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NET:PATHNAME-HOST-MIXIN -- 3. IV's, 0. FL's 105232643>
   Arg 2 (OPERATION): :GET-PATHNAME
   Arg 3 (DEV): "SYS$DISK"
   Arg 4 (DIR): ("NIKL")
   Arg 5 (NAM): "COMPAT-3600"
   Arg 6 (TYP): "BIN"
   Arg 7 (VRS): 4
   Arg 8 (OTHERS): NIL

FS:MAKE-PATHNAME-1:  (P.C. = 607)
   Arg 0 (ACTOR): #<VMS-PATHNAME "OBERON:SYS$DISK:[NIKL]*.*;*">
   Rest arg (OPTIONS): (:DEFAULT-HOST #<VMS-HOST OBERON 6251260> :DEFAULT-DEVICE "SYS$DISK" :DEFAULT-DIRECTORY ("NIKL") :DEFAULT-NAME :WILD :DEFAULT-TYPE :WILD ...)

(:METHOD FS:PATHNAME :NEW-PATHNAME):  (P.C. = 22)
   Arg 0 (SELF): #<VMS-PATHNAME "OBERON:SYS$DISK:[NIKL]*.*;*">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:PATHNAME -- 8. IV's, 1. FL's 105216320>
   Arg 2 (OPERATION): :NEW-PATHNAME
   Rest arg (OPTIONS): (:DEVICE "SYS$DISK" :DIRECTORY ("NIKL") :NAME "COMPAT-3600" :TYPE "BIN" :VERSION 4)

(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 67)
   Arg 0 (SELF): #<VMS-PATHNAME "OBERON:SYS$DISK:[NIKL]*.*;*">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:PATHNAME -- 8. IV's, 1. FL's 105216320>
   Arg 2 (.OPERATION.): :NEW-PATHNAME
   Rest arg (.DAEMON-CALLER-ARGS.): (:DEVICE "SYS$DISK" :DIRECTORY ("NIKL") :NAME "COMPAT-3600" :TYPE "BIN" :VERSION 4)

(:METHOD FS:PATHNAME :TRANSLATE-WILD-PATHNAME):  (P.C. = 76)
   Arg 0 (SELF): #<LMFS-PATHNAME "Z:>nikl>*.*">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:PATHNAME -- 8. IV's, 1. FL's 104221466>
   Arg 2 (OPERATION): :TRANSLATE-WILD-PATHNAME
   Arg 3 (WILD-PATHNAME): #<VMS-PATHNAME "OBERON:SYS$DISK:[NIKL]*.*;*">
   Arg 4 (SOURCE-PATHNAME): #<LMFS-PATHNAME "Z:>nikl>compat-3600.bin.4">

Rest of stack:
ZWEI:COM-COPY-FILE:  (P.C. = 235)
ZWEI:COM-EXTENDED-COMMAND:  (P.C. = 27)
ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 233)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 60)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 51)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
 9-Apr-85 18:15:16-EST,768;000000000000
Received: from MIT-SID by MIT-OZ via Chaosnet; 9 Apr 85 18:14-EST
Date: Tuesday, 9 April 1985, 18:12-EST
From: Daniel Weise <DANIEL at MIT-MC>
Subject: click middle on history pane in the debugger still does the wrong thing.
To: BUG-LISPM at OZ
Message-ID: <850409181228.2.DANIEL@SID.MIT>

In Symbolics 3670 Release 6.0, IP-TCP 29.0, AISite 7.9,
Experimental TECHNOLOGY-INDEPENDENT-DAEDALUS 1.1,
Experimental DAEDALUS 1.0, Experimental Nodes 1.0,
microcode TMC5-IO4-MIC 319, FEP 22, on Lisp Machine Sid Vicious:

According to the mouse documentation clicking middle when the mouse is pointing
to an item in the history pane of the debugger will cause that item to be
deleted from the history.  Well, it doesn't.  It just acts like click left.

Daniel
 9-Apr-85 18:39:13-EST,1140;000000000000
Received: from MIT-MORRISON by MIT-OZ via Chaosnet; 9 Apr 85 18:38-EST
Date: Tuesday, 9 April 1985, 18:35-EST
From: Gavan Duffy <GAVAN at OZ>
Subject: ZMAIL can't read a mail file on MC?
To: rsl at SPA-RUSSIAN, GAVAN at OZ, BUG-LISPM at OZ
In-Reply-To: <850408163844.3.RSL@RUSSIAN.SPA.Symbolics.COM>
Message-ID: <850409183537.5.GAVAN@MORRISON.MIT>

    Date: Monday, 8 April 1985, 16:38-PST
    From: Richard Lamson <rsl at SPA-RUSSIAN>

	Date: Sunday, 7 April 1985, 01:47-EST
	From: Gavan Duffy <GAVAN at PYGMALION>

	In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.8,
	microcode TMC5-MIC 319, FEP 22, on Lisp Machine James Morrison:

	Clicked successively on "Get Inbox" and "Read/Create File" (?) in ZMAIL and
	typed MC:RELAT;GAVAN MAIL at the prompt.

    Try [Select-R] [Read/Create File] instead.

[Select-R] just flashes the screen.  If aborting from the prompt after [Read/Create File]
while in the experimental configuration, most of the choice boxes are disappeared.  You
have to change to `Both' configuration and then back to experimental to fix it.

This is a bug.  It needs to be investigated.
10-Apr-85 02:13:45-EST,508;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 10 Apr 85 02:13-EST
Received: from MIT-JIMI by MIT-MC via Chaosnet; 10 APR 85  01:39:13 EST
Date: Wed, 10 Apr 85 01:37 EST
From: David Vinayak Wallace <Gumby@MIT-MC.ARPA>
Subject: (+ 'foo)
To: BUG-LISPM@MIT-MC.ARPA
Message-ID: <850410013745.6.GUMBY@JIMI.MIT>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.10,
microcode TMC5-MIC 319, FEP 18, on Lisp Machine Jimi Hendrix:

plus ought to type-check its arguments, even if only one is supplied.
10-Apr-85 02:38:57-EST,561;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 10 Apr 85 02:38-EST
Received: from MIT-MORRISON by MIT-MC via Chaosnet; 10 APR 85  00:26:39 EST
Date: Wed, 10 Apr 85 00:25 EST
From: Gavan Duffy <GAVAN@OZ.MIT>
Subject: Unflushable spy turds
To: BUG-LISPM@MIT-MC.ARPA
Message-ID: <850410002507.4.GAVAN@MORRISON.MIT>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.9,
microcode TMC5-MIC 319, FEP 22, on Lisp Machine James Morrison:

Spying on a 3670 from a 3600 leaves unsightly turds at the bottom
of the 3600 screen.  Refresh doesn't flush them.
10-Apr-85 02:39:12-EST,6347;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 10 Apr 85 02:39-EST
Received: from MIT-JIMI by MIT-MC via Chaosnet; 10 APR 85  00:32:40 EST
Date: Wed, 10 Apr 85 00:31 EST
From: David Vinayak Wallace <Gumby@MIT-MC.ARPA>
Subject: sending mail when target host is down
To: BUG-LISPM@MIT-MC.ARPA
Message-ID: <850410003114.3.GUMBY@JIMI.MIT>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.10,
microcode TMC5-MIC 319, FEP 18, on Lisp Machine Jimi Hendrix:

I have the system set to send mail directly.  I was trying to send a bug
message to OZ which was down.  I selected the debugger command that says
"Try sending via any host."  This dropped me into the debugger again
with the error below.  This is VERY annoying.

>>Error: OZ is believed to be down or unavailable.
While in the function neti:invoke-service-access-path-with-cached-unavailability  zwei:invoke-mail-service  zwei:network-send-it-2

neti:invoke-service-access-path-with-cached-unavailability:  (P.C. = 42)
   Arg 0 (service-access-path): #<SERVICE-ACCESS-PATH mail-to-user (chaos-mail) -- OZ on CHAOS 13133264>
   Arg 1 (timeout): 18000.
   Arg 2 (service-args): nil

zwei:invoke-mail-service:  (P.C. = 10)
   Arg 0 (service-access-path): #<SERVICE-ACCESS-PATH mail-to-user (chaos-mail) -- OZ on CHAOS 13133264>
   Arg 1 (recipients): ((:name "Bug-Lispm" :host (:object #<TOPS20-HOST OZ 1140441>) :interval (("To: Bug-Lispm@OZ" 4.) ("To: Bug-Lispm@OZ" 16.))))
   Arg 2 (template-expansion): (:text #<NODE 13132160> :headers (:date 2690947700. :from ((:user #<USER GUMBY 1153402>)) :subject "whither c-sh-P?" :to ((:name "Bug-Lispm" :host ** :interval **)) :message-id "<850410002820.2.GUMBY@JIMI.MIT>") :header-format :include-personal :transmit-time 2690947700. :draft-msg #<ZMACS-DRAFT-MSG 13132173>)

zwei:network-send-it-2:  (P.C. = 503)
   Arg 0 (recipients): ((:name "Bug-Lispm" :host (:object #<TOPS20-HOST OZ 1140441>) :interval (("To: Bug-Lispm@OZ" 4.) ("To: Bug-Lispm@OZ" 16.))))
   Arg 1 (template-expansion): (:text #<NODE 13132160> :headers (:date 2690947700. :from ((:user #<USER GUMBY 1153402>)) :subject "whither c-sh-P?" :to ((:name "Bug-Lispm" :host ** :interval **)) :message-id "<850410002820.2.GUMBY@JIMI.MIT>") :header-format :include-personal :transmit-time 2690947700. :draft-msg #<ZMACS-DRAFT-MSG 13132173>)

zwei:network-send-it-1:  (P.C. = 234)
   Arg 0 (services): nil
   Arg 1 (recipients): ((:name "Bug-Lispm" :host (:object #<TOPS20-HOST OZ 1140441>) :interval (("To: Bug-Lispm@OZ" 4.) ("To: Bug-Lispm@OZ" 16.))))
   Arg 2 (template-expansion): (:text #<NODE 13132160> :headers (:date 2690947700. :from ((:user #<USER GUMBY 1153402>)) :subject "whither c-sh-P?" :to ((:name "Bug-Lispm" :host ** :interval **)) :message-id "<850410002820.2.GUMBY@JIMI.MIT>") :header-format :include-personal :transmit-time 2690947700. :draft-msg #<ZMACS-DRAFT-MSG 13132173>)

zwei:network-send-it:  (P.C. = 132)
   Arg 0 (recipients): ((:name "Bug-Lispm" :host (:object #<TOPS20-HOST OZ 1140441>) :interval (("To: Bug-Lispm@OZ" 4.) ("To: Bug-Lispm@OZ" 16.))))
   Arg 1 (template-expansion): (:text #<NODE 13132160> :headers (:date 2690947700. :from ((:user #<USER GUMBY 1153402>)) :subject "whither c-sh-P?" :to ((:name "Bug-Lispm" :host ** :interval **)) :message-id "<850410002820.2.GUMBY@JIMI.MIT>") :header-format :include-personal :transmit-time 2690947700. :draft-msg #<ZMACS-DRAFT-MSG 13132173>)

zwei:funcall-template-expansion:  (P.C. = 47)
   Arg 0 (template-expansion): (:text #<NODE 13132160> :headers (:date 2690947700. :from ((:user #<USER GUMBY 1153402>)) :subject "whither c-sh-P?" :to ((:name "Bug-Lispm" :host ** :interval **)) :message-id "<850410002820.2.GUMBY@JIMI.MIT>") :header-format :include-personal :transmit-time 2690947700. :draft-msg #<ZMACS-DRAFT-MSG 13132173>)
   Arg 1 (function): zwei:network-send-it
   Rest arg (args): (((:name "Bug-Lispm" :host (:object #<TOPS20-HOST OZ 1140441>) :interval (** **))) (:text #<NODE 13132160> :headers (:date 2690947700. :from (**) :subject "whither c-sh-P?" :to (**) :message-id "<850410002820.2.GUMBY@JIMI.MIT>") :header-format :include-personal :transmit-time 2690947700. :draft-msg #<ZMACS-DRAFT-MSG 13132173>))

(:method zwei:basic-draft-msg :transmit):  (P.C. = 315)
   Arg 0 (self): #<ZMACS-DRAFT-MSG 13132173>
   Arg 1 (self-mapping-table): #<Map to flavor zwei:basic-draft-msg -- 7. IV's, 0. FL's 143323653>
   Arg 2 (operation): :transmit

(:method zwei:zmacs-draft-msg :combined :transmit):  (P.C. = 36)
   Arg 0 (self): #<ZMACS-DRAFT-MSG 13132173>
   Arg 1 (self-mapping-table): #<Map to flavor zwei:zmacs-draft-msg -- 1. IV's, 2. FL's 143323663>
   Arg 2 (.operation.): :transmit
   Rest arg (.daemon-caller-args.): nil

zwei:make-draft-and-transmit:  (P.C. = 11)
   Arg 0 (draft-flavor): zwei:zmacs-draft-msg
   Rest arg (init-keywords): (:headers (:to ((:name "Bug-Lispm" :host ** :interval **)) :subject "whither c-sh-P?") :text #<NODE 13132160> :font-alist nil :bug-report t)

zwei:send-message:  (P.C. = 43)
   Arg 0 (header-bp1): ("To: Bug-Lispm@OZ" 0. :normal)
   Arg 1 (header-bp2): ("--Text follows this line--" 0.)
   Arg 2 (header-in-order-p): t
   Arg 3 (text-bp1): ("In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.10," 0.)
   Arg 4 (text-bp2): ("this behaviour in the command digester." 39. :moves)
   Arg 5 (text-in-order-p): t

zwei:com-exit-com-mail:  (P.C. = 26)

zwei:command-execute:  (P.C. = 57)
   Arg 0 (command): zwei:com-exit-com-mail
   Arg 1 (char): 148.
   Arg 2 (prefix-char): nil
   Arg 3 (hook-list): nil

zwei:process-command-char:  (P.C. = 14)
   Arg 0 (ch): 148.

(:method zwei:editor :edit):  (P.C. = 233)
   Arg 0 (self): #<ZMACS-TOP-LEVEL-EDITOR 121171573>
   Arg 1 (self-mapping-table): #<Map to flavor zwei:editor -- 12. IV's, 0. FL's 142346020>
   Arg 2 (operation): :edit
   --Defaulted args:--
   Arg 3 (top-level-p): t
   Arg 4 (description): nil

(:method zwei:top-level-editor :combined :edit):  (P.C. = 60)
   Arg 0 (self): #<ZMACS-TOP-LEVEL-EDITOR 121171573>
   Arg 1 (self-mapping-table): #<Map to flavor zwei:top-level-editor -- 13. IV's, 1. FL's 142345776>
   Arg 2 (.operation.): :edit
   Rest arg (.daemon-caller-args.): nil

zwei:zmacs-window-top-level:  (P.C. = 51)

si:process-top-level:  (P.C. = 54)
   Arg 0 (ignore): nil
10-Apr-85 02:39:27-EST,556;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 10 Apr 85 02:39-EST
Received: from MIT-JIMI by MIT-MC via Chaosnet; 10 APR 85  00:32:53 EST
Date: Wed, 10 Apr 85 00:31 EST
From: David Vinayak Wallace <Gumby@MIT-MC.ARPA>
Subject: whither c-sh-P?
To: Bug-Lispm@MIT-MC.ARPA
Message-ID: <850410003129.4.GUMBY@JIMI.MIT>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.10,
microcode TMC5-MIC 319, FEP 18, on Lisp Machine Jimi Hendrix:

What happened to c-sh-P in the debugger?  Also, there's no way to get
this behaviour in the command digester.
10-Apr-85 03:15:10-EST,1938;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 10 Apr 85 03:15-EST
Received: from MIT-JIMI by MIT-MC via Chaosnet; 10 APR 85  01:21:31 EST
Date: Wed, 10 Apr 85 01:20 EST
From: David Vinayak Wallace <Gumby@MIT-MC.ARPA>
Subject: parse-pathname of twenex pathname can't handle -1
To: BUG-LISPM@MIT-MC.ARPA
Message-ID: <850410012004.5.GUMBY@JIMI.MIT>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.10,
microcode TMC5-MIC 319, FEP 18, on Lisp Machine Jimi Hendrix:

It handles -2 jest fine.

>>Error: Version must be numeric in oz:[gumby.foo]a.b.-1
While in the function (:method tenex-family-pathname-mixin :parse-namestring)  parse-pathname  si:*eval

(:method tenex-family-pathname-mixin :parse-namestring):  (P.C. = 355)
   Arg 0 (self): #<TOPS20-PATHNAME "OZ:DEV:<FOO>FOO.LISP">
   Arg 1 (self-mapping-table): #<Map to flavor tenex-family-pathname-mixin -- 6. IV's, 1. FL's 105211441>
   Arg 2 (operation): :parse-namestring
   Arg 3 (host-specified): t
   Arg 4 (namestring): "oz:[gumby.foo]a.b.-1"
   Arg 5 (start): 3.
   Arg 6 (end): 20.
   Local 7 (quote-char): 22.
   Local 8 (dir-delim-alist): ((60. . 62.) (91. . 93.))
   Local 9 (subdir-delim): 46.
   Local 10 (all-delims): (46. 60. 91. 58. 46. 59. 32.)
   Local 11 (idx): 21.
   Local 12 (tem): "-1"
   Local 13 (tem1): nil
   Local 14 (delim): -1.
   Local 15 (dir-delim): nil
   Local 16 (dev): nil
   Local 17 (dir): ("GUMBY" "FOO")
   Local 18 (nam): "A"
   Local 19 (typ): "B"
   Local 20 (vers): nil
   Local 21 (type-begun): t
   Local 22 (name-supplied-p): t
   Local 23 (type-supplied-p): t

parse-pathname:  (P.C. = 301)
   Arg 0 (thing): "oz:[gumby.foo]a.b.-1"
   --Defaulted args:--
   Arg 1 (with-respect-to): nil
   Arg 2 (defaults): ((#<ITS-HOST MC 1140425> . #<ITS-PATHNAME "MC: GUMBY; FOO >">) (#<LISPM-HOST REAGAN 1140000> . #<LMFS-PATHNAME "B:>foo>foo.lisp">) (nil . #<ITS-PATHNAME "MC: GUMBY; FOO >">))
10-Apr-85 15:33:46-EST,941;000000000000
Received: from MIT-XX by MIT-OZ via Chaosnet; 10 Apr 85 15:13-EST
Received: from SUMEX-AIM.ARPA by MIT-XX.ARPA with TCP; Wed 10 Apr 85 14:33:00-EST
Date: Wed 10 Apr 85 11:30:33-PST
From: Christopher Schmidt <SCHMIDT@SUMEX-AIM.ARPA>
Subject: Stanford press printers
To: Moon@SCRC-STONY-BROOK.ARPA
cc: FREEMAN@SUMEX-AIM.ARPA, GUMBY@MIT-MC.ARPA, BUG-LISPM%MIT-OZ@MIT-XX.ARPA,
    cjl%MIT-OZ@MIT-XX.ARPA
In-Reply-To: Message from "David A. Moon <Moon@SCRC-STONY-BROOK.ARPA>" of Wed 3 Apr 85 18:46:47-PST

	In addition to the Dover in CSD, the KSL (nee HPP) has an
"Alto Raven"--an Alto running a press interpreter and using a 384 spi
raven (XP12) as print engine.  Schlumberger has one of these as well.
	The KSL would like to see the Dover (Alto Raven) continue to
be supported.  [Although I don't use 3600's, I am told that the 3600
users do print stuff on the Alto Raven.  Spooling is done on a 2060.]
--Christopher
-------
10-Apr-85 18:55:29-EST,937;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 10 Apr 85 18:55-EST
Received: from MIT-YOGI by MIT-REAGAN via CHAOS with CHAOS-MAIL id 2709; Wed 10-Apr-85 16:32:23-EST
Date: Wednesday, 10 April 1985, 16:24-EST
From: Scott Cyphers <sr.ehpyc at MIT-SPEECH>
Subject: Common-Lisp Syntax
To: BUG-LISPM at MIT-SPEECH
Message-ID: <850410162451.4.CYPHER@MIT-YOGI.MIT>

In Symbolics 3670 Release 6.0, IP-TCP 29.0, Experimental ZOO 5.4,
Experimental Spire-Macros 5.1, Experimental Attribute 5.0,
Experimental Compute 5.2, Experimental Audio 4.0,
Experimental Speech-Attributes 4.0, Experimental Display 6.0,
Experimental Speech-Layouts 6.0, Experimental Prtout 4.0,
Experimental Versatec 5.0, Experimental Spire 16.0, ZOO-SPIRE 1.0,
microcode TMC5-IO4-FPA-MIC 319, on Lisp Machine Yogi:

I'm not really sure what the syntax is supposed to do for me, but when
I set the syntax to be common-lisp, Zmacs indents LOOP the old way.
10-Apr-85 19:19:04-EST,10462;000000000000
Received: from MIT-REAGAN by MIT-OZ via Chaosnet; 10 Apr 85 19:18-EST
Received: from LENNON by MIT-REAGAN via CHAOS with CHAOS-MAIL id 2707; Wed 10-Apr-85 16:30:05-EST
Date: Wednesday, 10 April 1985, 16:21-EST
From: Chris Lindblad <cjl at OZ>
Subject: Can't finger with output to a string.
To: BUG-LISPM at OZ
Message-ID: <850410162113.2.CJL@LENNON.MIT>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.11,
microcode TMC5-MIC 319, on Lisp Machine John Lennon:

(with-output-to-string (standard-output)
  (neti:finger-lispms-at-site :ai))

>>Error: The object #<DTP-COMPILED-FUNCTION SI:WITH-OUTPUT-TO-STRING-INTERNAL-FUNCTION 2221506> received a :SIZE-IN-CHARACTERS message, which went unclaimed.
         The rest of the message was (NIL)
While in the function STREAM-DEFAULT-HANDLER  SI:WITH-OUTPUT-TO-STRING-INTERNAL-FUNCTION  FINGER-LISPMS

STREAM-DEFAULT-HANDLER:  (P.C. = 431)
   Arg 0 (FCTN): #<DTP-COMPILED-FUNCTION SI:WITH-OUTPUT-TO-STRING-INTERNAL-FUNCTION 2221506>
   Arg 1 (OP): :SIZE-IN-CHARACTERS
   Arg 2 (ARG1): NIL
   Arg 3 (ARGS): NIL
   Local 4 (TEM): NIL
   Local 5 (IGNORE): UNCLAIMED-MESSAGE
   Local 6 (EOF): :OBJECT
   Local 7 (DELIMITER): #<DTP-COMPILED-FUNCTION SI:WITH-OUTPUT-TO-STRING-INTERNAL-FUNCTION 2221506>
   Local 8 (IGNORE): :MESSAGE
   Local 9 (INDEX): :SIZE-IN-CHARACTERS

SI:WITH-OUTPUT-TO-STRING-INTERNAL-FUNCTION:  (P.C. = 312)
   Arg 0 (OP): :SIZE-IN-CHARACTERS
   --Defaulted args:--
   Arg 1 (ARG1): NIL
   Rest arg (ARGS): NIL

FINGER-LISPMS:  (P.C. = 43)
   Arg 0 (HOSTS): (#<LISPM-HOST ROBOT-3 1142447> #<LISPM-HOST CADR-6 1142433> #<LISPM-HOST AVATAR 1142417> #<LISPM-HOST ROBOT-4 1142403> #<LISPM-HOST APIARY-7 1142367> #<LISPM-HOST BUDDY 1142353> #<LISPM-HOST JANIS 1142337> #<LISPM-HOST CADR-25 1142323> #<LISPM-HOST CADR-18 1142307> #<LISPM-HOST FRANK-SINATRA 1142273> ...)
   Arg 1 (STREAM): #<DTP-COMPILED-FUNCTION SI:WITH-OUTPUT-TO-STRING-INTERNAL-FUNCTION 2221506>
   Rest arg: (:PRINT-FREE T :RETURN-FREE NIL)

FINGER-LISPMS-AT-SITE:  (P.C. = 17)
   Arg 0: :AI
   --Defaulted args:--
   Arg 1 (STREAM): #<DTP-COMPILED-FUNCTION SI:WITH-OUTPUT-TO-STRING-INTERNAL-FUNCTION 2221506>
   Arg 2 (PRINT-FREE): T
   Arg 3 (RETURN-FREE): NIL

SI:*EVAL:  (P.C. = 403)
   Arg 0 (FORM): (FINGER-LISPMS-AT-SITE :AI)
   Local 0 (FORM): NIL
   Arg 1 (ENV): (((STANDARD-OUTPUT . #<DTP-LOCATIVE 1750721>) (SI:WITH-OUTPUT-TO-STRING-INTERNAL-OWN-P . #<DTP-LOCATIVE 2036463>) (SI:WITH-OUTPUT-TO-STRING-INTERNAL-INDEX . #<DTP-LOCATIVE 2036456>) (SI:WITH-OUTPUT-TO-STRING-INTERNAL-STRING . #<DTP-LOCATIVE 2036451>)) NIL NIL NIL NIL NIL NIL)
   --Defaulted args:--
   Arg 2 (HOOK): NIL

PROGN:  (P.C. = 20)
   Arg 0 (.FORM.): (PROGN (FINGER-LISPMS-AT-SITE :AI))
   Arg 1 (ENV): (((STANDARD-OUTPUT . #<DTP-LOCATIVE 1750721>) (SI:WITH-OUTPUT-TO-STRING-INTERNAL-OWN-P . #<DTP-LOCATIVE 2036463>) (SI:WITH-OUTPUT-TO-STRING-INTERNAL-INDEX . #<DTP-LOCATIVE 2036456>) (SI:WITH-OUTPUT-TO-STRING-INTERNAL-STRING . #<DTP-LOCATIVE 2036451>)) NIL NIL NIL NIL NIL NIL)

SI:*EVAL:  (P.C. = 165)
   Arg 0 (FORM): (PROGN (FINGER-LISPMS-AT-SITE :AI))
   Arg 1 (ENV): (((STANDARD-OUTPUT . #<DTP-LOCATIVE 1750721>) (SI:WITH-OUTPUT-TO-STRING-INTERNAL-OWN-P . #<DTP-LOCATIVE 2036463>) (SI:WITH-OUTPUT-TO-STRING-INTERNAL-INDEX . #<DTP-LOCATIVE 2036456>) (SI:WITH-OUTPUT-TO-STRING-INTERNAL-STRING . #<DTP-LOCATIVE 2036451>)) NIL NIL NIL NIL NIL NIL)
   --Defaulted args:--
   Arg 2 (HOOK): NIL

PROGN:  (P.C. = 13)
   Arg 0 (.FORM.): (PROGN (PROGN (FINGER-LISPMS-AT-SITE :AI)) NIL (ADJUST-ARRAY-SIZE SI:WITH-OUTPUT-TO-STRING-INTERNAL-STRING SI:WITH-OUTPUT-TO-STRING-INTERNAL-INDEX) SI:WITH-OUTPUT-TO-STRING-INTERNAL-STRING)
   Arg 1 (ENV): (((STANDARD-OUTPUT . #<DTP-LOCATIVE 1750721>) (SI:WITH-OUTPUT-TO-STRING-INTERNAL-OWN-P . #<DTP-LOCATIVE 2036463>) (SI:WITH-OUTPUT-TO-STRING-INTERNAL-INDEX . #<DTP-LOCATIVE 2036456>) (SI:WITH-OUTPUT-TO-STRING-INTERNAL-STRING . #<DTP-LOCATIVE 2036451>)) NIL NIL NIL NIL NIL NIL)

SI:*EVAL:  (P.C. = 165)
   Arg 0 (FORM): (PROGN (PROGN (FINGER-LISPMS-AT-SITE :AI)) NIL (ADJUST-ARRAY-SIZE SI:WITH-OUTPUT-TO-STRING-INTERNAL-STRING SI:WITH-OUTPUT-TO-STRING-INTERNAL-INDEX) SI:WITH-OUTPUT-TO-STRING-INTERNAL-STRING)
   Arg 1 (ENV): (((STANDARD-OUTPUT . #<DTP-LOCATIVE 1750721>) (SI:WITH-OUTPUT-TO-STRING-INTERNAL-OWN-P . #<DTP-LOCATIVE 2036463>) (SI:WITH-OUTPUT-TO-STRING-INTERNAL-INDEX . #<DTP-LOCATIVE 2036456>) (SI:WITH-OUTPUT-TO-STRING-INTERNAL-STRING . #<DTP-LOCATIVE 2036451>)) NIL NIL NIL NIL NIL NIL)
   --Defaulted args:--
   Arg 2 (HOOK): NIL

SI:DIGESTED-LET*:  (P.C. = 152)
   Arg 0 (BODY): (SI:DIGESTED-LET* (LET* ((SI:WITH-OUTPUT-TO-STRING-INTERNAL-STRING **) (SI:WITH-OUTPUT-TO-STRING-INTERNAL-INDEX 0.) (SI:WITH-OUTPUT-TO-STRING-INTERNAL-OWN-P T) (STANDARD-OUTPUT **)) (PROGN (PROGN **) NIL (ADJUST-ARRAY-SIZE SI:WITH-OUTPUT-TO-STRING-INTERNAL-STRING SI:WITH-OUTPUT-TO-STRING-INTERNAL-INDEX) SI:WITH-OUTPUT-TO-STRING-INTERNAL-STRING)) (((FUNCTION SI:WITH-OUTPUT-TO-STRING-INTERNAL-FUNCTION) STANDARD-OUTPUT . #<DTP-LOCATIVE 1750721>) (T SI:WITH-OUTPUT-TO-STRING-INTERNAL-OWN-P . #<DTP-LOCATIVE 2036463>) (0. SI:WITH-OUTPUT-TO-STRING-INTERNAL-INDEX . #<DTP-LOCATIVE 2036456>) ((MAKE-ARRAY 64. ** **) SI:WITH-OUTPUT-TO-STRING-INTERNAL-STRING . #<DTP-LOCATIVE 2036451>)) NIL (PROGN (PROGN (FINGER-LISPMS-AT-SITE :AI)) NIL (ADJUST-ARRAY-SIZE SI:WITH-OUTPUT-TO-STRING-INTERNAL-STRING SI:WITH-OUTPUT-TO-STRING-INTERNAL-INDEX) SI:WITH-OUTPUT-TO-STRING-INTERNAL-STRING))
   Local 0 (BODY): ((PROGN (PROGN (FINGER-LISPMS-AT-SITE :AI)) NIL (ADJUST-ARRAY-SIZE SI:WITH-OUTPUT-TO-STRING-INTERNAL-STRING SI:WITH-OUTPUT-TO-STRING-INTERNAL-INDEX) SI:WITH-OUTPUT-TO-STRING-INTERNAL-STRING))
   Arg 1 (ENV): NIL

SI:DIGEST-INTERNAL:  (P.C. = 30)
   Arg 0 (CAR-NEW-FORM): SI:DIGESTED-LET*
   Arg 1 (CDR-NEW-FORM): ((LET* ((SI:WITH-OUTPUT-TO-STRING-INTERNAL-STRING **) (SI:WITH-OUTPUT-TO-STRING-INTERNAL-INDEX 0.) (SI:WITH-OUTPUT-TO-STRING-INTERNAL-OWN-P T) (STANDARD-OUTPUT **)) (PROGN (PROGN **) NIL (ADJUST-ARRAY-SIZE SI:WITH-OUTPUT-TO-STRING-INTERNAL-STRING SI:WITH-OUTPUT-TO-STRING-INTERNAL-INDEX) SI:WITH-OUTPUT-TO-STRING-INTERNAL-STRING)) (((FUNCTION SI:WITH-OUTPUT-TO-STRING-INTERNAL-FUNCTION) STANDARD-OUTPUT . #<DTP-LOCATIVE 1750721>) (T SI:WITH-OUTPUT-TO-STRING-INTERNAL-OWN-P . #<DTP-LOCATIVE 2036463>) (0. SI:WITH-OUTPUT-TO-STRING-INTERNAL-INDEX . #<DTP-LOCATIVE 2036456>) ((MAKE-ARRAY 64. ** **) SI:WITH-OUTPUT-TO-STRING-INTERNAL-STRING . #<DTP-LOCATIVE 2036451>)) NIL (PROGN (PROGN (FINGER-LISPMS-AT-SITE :AI)) NIL (ADJUST-ARRAY-SIZE SI:WITH-OUTPUT-TO-STRING-INTERNAL-STRING SI:WITH-OUTPUT-TO-STRING-INTERNAL-INDEX) SI:WITH-OUTPUT-TO-STRING-INTERNAL-STRING))
   Arg 2 (ENV): NIL

LET*:  (P.C. = 37)
   Arg 0 (FORM): (SI:DIGESTED-LET* (LET* ((SI:WITH-OUTPUT-TO-STRING-INTERNAL-STRING **) (SI:WITH-OUTPUT-TO-STRING-INTERNAL-INDEX 0.) (SI:WITH-OUTPUT-TO-STRING-INTERNAL-OWN-P T) (STANDARD-OUTPUT **)) (PROGN (PROGN **) NIL (ADJUST-ARRAY-SIZE SI:WITH-OUTPUT-TO-STRING-INTERNAL-STRING SI:WITH-OUTPUT-TO-STRING-INTERNAL-INDEX) SI:WITH-OUTPUT-TO-STRING-INTERNAL-STRING)) (((FUNCTION SI:WITH-OUTPUT-TO-STRING-INTERNAL-FUNCTION) STANDARD-OUTPUT . #<DTP-LOCATIVE 1750721>) (T SI:WITH-OUTPUT-TO-STRING-INTERNAL-OWN-P . #<DTP-LOCATIVE 2036463>) (0. SI:WITH-OUTPUT-TO-STRING-INTERNAL-INDEX . #<DTP-LOCATIVE 2036456>) ((MAKE-ARRAY 64. ** **) SI:WITH-OUTPUT-TO-STRING-INTERNAL-STRING . #<DTP-LOCATIVE 2036451>)) NIL (PROGN (PROGN (FINGER-LISPMS-AT-SITE :AI)) NIL (ADJUST-ARRAY-SIZE SI:WITH-OUTPUT-TO-STRING-INTERNAL-STRING SI:WITH-OUTPUT-TO-STRING-INTERNAL-INDEX) SI:WITH-OUTPUT-TO-STRING-INTERNAL-STRING))
   Arg 1 (ENV): NIL

SI:*EVAL:  (P.C. = 165)
   Arg 0 (FORM): (WITH-OUTPUT-TO-STRING (STANDARD-OUTPUT) (FINGER-LISPMS-AT-SITE :AI))
   Local 0 (FORM): (SI:DIGESTED-LET* (LET* ((SI:WITH-OUTPUT-TO-STRING-INTERNAL-STRING **) (SI:WITH-OUTPUT-TO-STRING-INTERNAL-INDEX 0.) (SI:WITH-OUTPUT-TO-STRING-INTERNAL-OWN-P T) (STANDARD-OUTPUT **)) (PROGN (PROGN **) NIL (ADJUST-ARRAY-SIZE SI:WITH-OUTPUT-TO-STRING-INTERNAL-STRING SI:WITH-OUTPUT-TO-STRING-INTERNAL-INDEX) SI:WITH-OUTPUT-TO-STRING-INTERNAL-STRING)) (((FUNCTION SI:WITH-OUTPUT-TO-STRING-INTERNAL-FUNCTION) STANDARD-OUTPUT . #<DTP-LOCATIVE 1750721>) (T SI:WITH-OUTPUT-TO-STRING-INTERNAL-OWN-P . #<DTP-LOCATIVE 2036463>) (0. SI:WITH-OUTPUT-TO-STRING-INTERNAL-INDEX . #<DTP-LOCATIVE 2036456>) ((MAKE-ARRAY 64. ** **) SI:WITH-OUTPUT-TO-STRING-INTERNAL-STRING . #<DTP-LOCATIVE 2036451>)) NIL (PROGN (PROGN (FINGER-LISPMS-AT-SITE :AI)) NIL (ADJUST-ARRAY-SIZE SI:WITH-OUTPUT-TO-STRING-INTERNAL-STRING SI:WITH-OUTPUT-TO-STRING-INTERNAL-INDEX) SI:WITH-OUTPUT-TO-STRING-INTERNAL-STRING))
   --Defaulted args:--
   Arg 1 (ENV): NIL
   Arg 2 (HOOK): NIL

(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0.):  (P.C. = 152)
   Arg 0 (.LEXICAL-ENVIRONMENT-POINTER.): #<DTP-LOCATIVE 43440261>

TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
   Arg 0 (NEW-MODE): :BLAST
   Arg 1 (STREAM): #:TERMINAL-IO-SYN-STREAM
   Arg 2 (CONTINUATION): #<LEXICAL-CLOSURE (:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0.) 43440266>

SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
   Arg 0 (NAME): "Breakpoint ZMACS"
   Arg 1 (ABORT-FUNCTION): SI:BREAK-HERALD
   Arg 2 (READ-FUNCTION): SI:BREAK-READ-FUNCTION
   --Defaulted args:--
   Arg 3 (EVAL-FUNCTION): NIL
   Arg 4 (PRINT-FUNCTION): NIL

SI:BREAK-INTERNAL:  (P.C. = 176)
   Arg 0 (TAG): ZWEI:ZMACS
   Local 0 (TAG): "Breakpoint ZMACS"
   Arg 1 (CONDITIONAL): T

ZWEI:COM-BREAK:  (P.C. = 64)

ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
   Arg 0 (COMMAND): ZWEI:COM-BREAK
   Arg 1 (CHAR): 129.
   Arg 2 (PREFIX-CHAR): NIL
   Arg 3 (HOOK-LIST): NIL

ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
   Arg 0 (CH): 129.

(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 233)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 121171573>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:EDITOR -- 12. IV's, 0. FL's 142346020>
   Arg 2 (OPERATION): :EDIT
   --Defaulted args:--
   Arg 3 (TOP-LEVEL-P): T
   Arg 4 (DESCRIPTION): NIL

(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 60)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 121171573>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:TOP-LEVEL-EDITOR -- 13. IV's, 1. FL's 142345776>
   Arg 2 (.OPERATION.): :EDIT
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 51)

SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
   --Defaulted args:--
   Arg 0 (IGNORE): NIL
10-Apr-85 19:27:08-EST,2136;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 10 Apr 85 19:27-EST
Received: from SCRC-CARDINAL by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 212274; Wed 10-Apr-85 12:01:20-EST
Date: Wednesday, 10 April 1985, 12:01-EST
From: William M. York <York at SCRC-QUABBIN>
Subject: ZMAIL can't read a mail file on MC?
To: GAVAN at OZ, rsl at SPA-RUSSIAN, BUG-LISPM at OZ
cc: documentation at SCRC-QUABBIN
In-Reply-To: <850409183537.5.GAVAN@MORRISON.MIT>
Message-ID: <850410120105.6.YORK@CARDINAL.SCRC.Symbolics.COM>

    Date: Tuesday, 9 April 1985, 18:35-EST
    From: Gavan Duffy <GAVAN at OZ>

	Date: Monday, 8 April 1985, 16:38-PST
	From: Richard Lamson <rsl at SPA-RUSSIAN>

	    Date: Sunday, 7 April 1985, 01:47-EST
	    From: Gavan Duffy <GAVAN at PYGMALION>

	    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.8,
	    microcode TMC5-MIC 319, FEP 22, on Lisp Machine James Morrison:

	    Clicked successively on "Get Inbox" and "Read/Create File" (?) in ZMAIL and
	    typed MC:RELAT;GAVAN MAIL at the prompt.

	Try [Select-R] [Read/Create File] instead.

    [Select-R] just flashes the screen.  If aborting from the prompt after [Read/Create File]
    while in the experimental configuration, most of the choice boxes are disappeared.  You
    have to change to `Both' configuration and then back to experimental to fix it.

    This is a bug.  It needs to be investigated.

Hmmm.  What Richard was trying to say was "Click the right button on the
[Select] menu item in Zmail" and what you apparently heard was "Hit the
<Select> key followed by R".  According to my documentation set, our
notation convention for what RSL was trying to say is [Select (R)]
rather than [Select-R], but even so it is clear that some confusion is
possible (thus the addition of Documentation to the recipients list;
further discussion of the notation convention should probably leave out
bug-lispm).

Of course, this has nothing to do with the fact that people can't figure
out how to use Zmail to read in a new mailbox without assistance from
Bug-Lispm (I had the very same problem once).
10-Apr-85 21:09:03-EST,787;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 10 Apr 85 21:06-EST
Received: from SCRC-STONY-BROOK by MIT-MC via Chaosnet; 10 APR 85  21:00:47 EST
Received: from SCRC-SUDBURY by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 212529; Wed 10-Apr-85 17:09:53-EST
Date: Wed, 10 Apr 85 17:10 EST
From: Richard L. Bryan <RLB@SCRC-STONY-BROOK.ARPA>
Subject: Unflushable spy turds
To: GAVAN@OZ.MIT, BUG-LISPM@MIT-MC.ARPA
In-Reply-To: <850410002507.4.GAVAN@MORRISON.MIT>
Message-ID: <850410171016.2.RLB@SUDBURY.SCRC.Symbolics.COM>

    Date: Wed, 10 Apr 85 00:25 EST
    From: Gavan Duffy <GAVAN@OZ.MIT>
    Spying on a 3670 from a 3600 leaves unsightly turds at the bottom
    of the 3600 screen.  Refresh doesn't flush them.

I always thought espionage was a dirty business. (:-)
10-Apr-85 21:12:51-EST,939;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 10 Apr 85 21:09-EST
Received: from SCRC-QUABBIN by MIT-MC via Chaosnet; 10 APR 85  21:03:02 EST
Received: from SCRC-NEPONSET by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 152249; Wed 10-Apr-85 12:37:44-EST
Date: Wed, 10 Apr 85 12:38 EST
From: David C. Plummer in disguise <DCP@SCRC-QUABBIN.ARPA>
Subject: Unflushable spy turds
To: Gavan Duffy <GAVAN@OZ.MIT>, BUG-LISPM@MIT-MC.ARPA
In-Reply-To: <850410002507.4.GAVAN@MORRISON.MIT>
Message-ID: <850410123826.4.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Wed, 10 Apr 85 00:25 EST
    From: Gavan Duffy <GAVAN@OZ.MIT>

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.9,
    microcode TMC5-MIC 319, FEP 22, on Lisp Machine James Morrison:

    Spying on a 3670 from a 3600 leaves unsightly turds at the bottom
    of the 3600 screen.  Refresh doesn't flush them.

It works for me.  Maybe you have a bogus user program?
10-Apr-85 21:15:14-EST,1174;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 10 Apr 85 21:10-EST
Received: from SCRC-QUABBIN by MIT-MC via Chaosnet; 10 APR 85  21:03:06 EST
Received: from SCRC-NEPONSET by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 152251; Wed 10-Apr-85 12:40:50-EST
Date: Wed, 10 Apr 85 12:41 EST
From: David C. Plummer in disguise <DCP@SCRC-QUABBIN.ARPA>
Subject: whither c-sh-P?
To: David Vinayak Wallace <Gumby@MIT-MC.ARPA>, Bug-Lispm@MIT-MC.ARPA
In-Reply-To: <850410003129.4.GUMBY@JIMI.MIT>
Message-ID: <850410124133.5.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Wed, 10 Apr 85 00:31 EST
    From: David Vinayak Wallace <Gumby@MIT-MC.ARPA>

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.10,
    microcode TMC5-MIC 319, FEP 18, on Lisp Machine Jimi Hendrix:

    What happened to c-sh-P in the debugger?  
(progn user:fep-version-number) offers to use sys:fep-version-number on
s-D which is also c-sh-P.  I'm running Release 6.0 too.
    Also, there's no way to get this behaviour in the command digester.
,user:fep-version-number tells me it is unbound and offers to use
sys:fep-version-number.  Maybe somebody turned off this DWIM behind your
back?
10-Apr-85 21:57:13-EST,4093;000000000000
Received: from MIT-ROBOT-5 by MIT-OZ via Chaosnet; 10 Apr 85 21:56-EST
Date: Wednesday, 10 April 1985, 21:56-EST
From: Alan Bawden <Alan at MIT-MC>
Subject: Huh?
To: BUG-LISPM at OZ
Message-ID: <850410215607.1.ALAN@ROBOT-5.MIT>

In Symbolics 3670 Release 6.0, IP-TCP 29.0, AISite 7.11,
microcode TMC5-IO4-FPA-MIC 319, on Lisp Machine Robot-5:

I do not understand what this error message is trying to tell me.  What
would be a valid canonical type for an ITS host?

>>Error: LISP is an invalid canonical type for MC (a ITS host).
While in the function (:METHOD FS:PATHNAME :TYPE-FOR-NEW-CANONICAL-TYPE)  (:METHOD FS:PATHNAME :NEW-DEFAULT-PATHNAME)  (:INTERNAL (:INTERNAL (:METHOD FS:ITS-PATHNAME :COMBINED :NEW-DEFAULT-PATHNAME) 0) 0)

(:METHOD FS:PATHNAME :TYPE-FOR-NEW-CANONICAL-TYPE):  (P.C. = 65)
   Arg 0 (SELF): #<ITS-PATHNAME "MC: ALAN; FOO >">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:PATHNAME -- 8. IV's, 1. FL's 105226430>
   Arg 2 (OPERATION): :TYPE-FOR-NEW-CANONICAL-TYPE
   Arg 3 (CANONICAL-TYPE): :CMD
   Local 3 (CANONICAL-TYPE): LISP
   Arg 4 (ORIGINAL-TYPE): NIL
   Arg 5 (ORIGINAL-TYPE-P): NIL

(:METHOD FS:PATHNAME :NEW-DEFAULT-PATHNAME):  (P.C. = 166)
   Arg 0 (SELF): #<ITS-PATHNAME "MC: ALAN; FOO >">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:PATHNAME -- 8. IV's, 1. FL's 105226430>
   Arg 2 (OPERATION): :NEW-DEFAULT-PATHNAME
   Rest arg (OPTIONS): (:TYPE :CMD)

(:INTERNAL (:INTERNAL (:METHOD FS:ITS-PATHNAME :COMBINED :NEW-DEFAULT-PATHNAME) 0) 0):  (P.C. = 11)
   Arg 0 (SELF): #<ITS-PATHNAME "MC: ALAN; FOO >">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:ITS-PATHNAME -- 5. IV's, 6. FL's 122660316>
   Arg 2 (.OPERATION.): :NEW-DEFAULT-PATHNAME
   Rest arg (.DAEMON-CALLER-ARGS.): (:TYPE :CMD)

(:METHOD FS:PATHNAME :WHOPPER :NEW-DEFAULT-PATHNAME):  (P.C. = 64)
   Arg 0 (SELF): #<ITS-PATHNAME "MC: ALAN; FOO >">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:PATHNAME -- 8. IV's, 1. FL's 105226430>
   Arg 2 (.WHOPPER-CONTINUATION.): #<DTP-COMPILED-FUNCTION (:INTERNAL (:INTERNAL (:METHOD FS:ITS-PATHNAME :COMBINED :NEW-DEFAULT-PATHNAME) 0) 0) 11540756>
   Arg 3 (.OLD-SELF-MAPPING-TABLE.): #<Map to flavor FS:ITS-PATHNAME -- 5. IV's, 6. FL's 122660316>
   Arg 4 (.OPERATION.): :NEW-DEFAULT-PATHNAME
   Rest arg (OPTIONS): (:TYPE :CMD)

(:INTERNAL (:METHOD FS:ITS-PATHNAME :COMBINED :NEW-DEFAULT-PATHNAME) 0):  (P.C. = 13)
   Arg 0 (SELF): #<ITS-PATHNAME "MC: ALAN; FOO >">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:ITS-PATHNAME -- 5. IV's, 6. FL's 122660316>
   Arg 2 (.OPERATION.): :NEW-DEFAULT-PATHNAME
   Rest arg (.DAEMON-CALLER-ARGS.): (:TYPE :CMD)

(:METHOD FS:ITS-PATHNAME-MIXIN :WHOPPER :NEW-DEFAULT-PATHNAME):  (P.C. = 35)
   Arg 0 (SELF): #<ITS-PATHNAME "MC: ALAN; FOO >">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:ITS-PATHNAME-MIXIN -- 7. IV's, 1. FL's 105226441>
   Arg 2 (.WHOPPER-CONTINUATION.): #<DTP-COMPILED-FUNCTION (:INTERNAL (:METHOD FS:ITS-PATHNAME :COMBINED :NEW-DEFAULT-PATHNAME) 0) 11540743>
   Arg 3 (.OLD-SELF-MAPPING-TABLE.): #<Map to flavor FS:ITS-PATHNAME -- 5. IV's, 6. FL's 122660316>
   Arg 4 (.OPERATION.): :NEW-DEFAULT-PATHNAME
   Rest arg (OPTIONS): (:TYPE :CMD)

(:METHOD FS:ITS-PATHNAME :COMBINED :NEW-DEFAULT-PATHNAME):  (P.C. = 13)
   Arg 0 (SELF): #<ITS-PATHNAME "MC: ALAN; FOO >">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:ITS-PATHNAME -- 5. IV's, 6. FL's 122660316>
   Arg 2 (.OPERATION.): :NEW-DEFAULT-PATHNAME
   Rest arg (.DAEMON-CALLER-ARGS.): (:TYPE :CMD)

ZWEI:PATHNAME-DEFAULTS:  (P.C. = 107)
   --Defaulted args:--
   Arg 0 (DEFAULTS): ((NIL))

Rest of stack:
ZWEI:COM-FIND-FILE:  (P.C. = 3)
ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
ZWEI:MAKE-EXTENDED-COMMAND-INTERNAL:  (P.C. = 107)
Closure of ZWEI:MAKE-EXTENDED-COMMAND-INTERNAL:
ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 233)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 60)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 51)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
10-Apr-85 22:02:46-EST,789;000000000000
Received: from MIT-ROBOT-5 by MIT-OZ via Chaosnet; 10 Apr 85 22:01-EST
Date: Wednesday, 10 April 1985, 22:01-EST
From: Alan Bawden <Alan at MIT-MC>
Subject: Base and Syntax
To: BUG-LISPM at OZ
Message-ID: <850410220102.2.ALAN@ROBOT-5.MIT>

In Symbolics 3670 Release 6.0, IP-TCP 29.0, AISite 7.11,
microcode TMC5-IO4-FPA-MIC 319, on Lisp Machine Robot-5:

I want a something I can set to shut off these warnings about missing Base
and Syntax attributes in files.  I notice that if I read a file off of MC
that has -*-Midas-*- in the first line the machine still bitches at me
because it doesn't say anything about the Base and Syntax.  Foo!

Perhaps I will figure out how to patch it out locally.  It would be nice to
get back into the habit of getting bugs fixed swiftly.
11-Apr-85 00:01:19-EST,1522;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 10 Apr 85 23:47-EST
Received: from MIT-OZ by MIT-MC via Chaosnet; 10 APR 85  23:43:25 EST
Received: from MIT-LENNON by MIT-OZ via Chaosnet; 10 Apr 85 23:20-EST
Date: Wed, 10 Apr 85 23:19 EST
From: Chris Lindblad <cjl@OZ.MIT>
Subject: Unflushable spy turds
To: DCP@SCRC-QUABBIN.ARPA, GAVAN@OZ.MIT, BUG-LISPM@MIT-MC.ARPA
In-Reply-To: <850410123826.4.NFEP@NEPONSET.SCRC.Symbolics.COM>
Message-ID: <850410231914.1.CJL@LENNON.MIT>

    Date: Wed, 10 Apr 85 12:38 EST
    From: David C. Plummer in disguise <DCP@SCRC-QUABBIN.ARPA>

	Date: Wed, 10 Apr 85 00:25 EST
	From: Gavan Duffy <GAVAN@OZ.MIT>

	In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.9,
	microcode TMC5-MIC 319, FEP 22, on Lisp Machine James Morrison:

	Spying on a 3670 from a 3600 leaves unsightly turds at the bottom
	of the 3600 screen.  Refresh doesn't flush them.

    It works for me.  Maybe you have a bogus user program?

Maybe, but this doesn't clean the whole screen if the 3670 had
hacks:decorate done to it.  Am I off by one somewhere?

(let ((the-whole-screen (make-array
			  (list chaos:spy-screen-width chaos:spy-screen-height)
			  :type art-1b
			  :displaced-to
			  (- (si:array-indirect-pointer
			       (tv:sheet-screen-array tv:main-screen))
			     (* (tv:sheet-locations-per-line tv:main-screen) 8)
			     2))))
  (bitblt tv:alu-setz
	  chaos:spy-screen-width
	  chaos:spy-screen-height
	  the-whole-screen
	  0 0
	  the-whole-screen
	  0 0))
11-Apr-85 01:14:24-EST,1012;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 11 Apr 85 01:14-EST
Received: from MIT-OZ by MIT-MC via Chaosnet; 11 APR 85  01:13:28 EST
Received: from MIT-MORRISON by MIT-OZ via Chaosnet; 11 Apr 85 01:13-EST
Date: Thu, 11 Apr 85 01:10 EST
From: Gavan Duffy <GAVAN@OZ.MIT>
Subject: Unflushable spy turds
To: DCP@SCRC-QUABBIN.ARPA, GAVAN@OZ.MIT, BUG-LISPM@MIT-MC.ARPA
In-Reply-To: <850410123826.4.NFEP@NEPONSET.SCRC.Symbolics.COM>
Message-ID: <850411011006.1.GAVAN@MORRISON.MIT>

    Date: Wed, 10 Apr 85 12:38 EST
    From: David C. Plummer in disguise <DCP@SCRC-QUABBIN.ARPA>

	Date: Wed, 10 Apr 85 00:25 EST
	From: Gavan Duffy <GAVAN@OZ.MIT>

	In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.9,
	microcode TMC5-MIC 319, FEP 22, on Lisp Machine James Morrison:

	Spying on a 3670 from a 3600 leaves unsightly turds at the bottom
	of the 3600 screen.  Refresh doesn't flush them.

    It works for me.  Maybe you have a bogus user program?

Nope.  Standard SPY function from the CP.
11-Apr-85 01:28:16-EST,681;000000000000
Mail-From: HENRY created at 11-Apr-85 01:27:57
Date: Thu, 11 Apr 1985  01:27 EST
Message-ID: <HENRY.12102210525.BABYL@MIT-OZ>
From: HENRY@MIT-OZ
To:   "David C. Plummer in disguise" <DCP@SCRC-QUABBIN>
Cc:   BUG-LISPM@MIT-OZ, David Chapman <Zvona@MIT-OZ>
Subject: out of sync sources?
In-reply-to: Msg of 5 Apr 1985 15:48-EST from David C. Plummer in disguise <DCP at SCRC-QUABBIN>


    I have been told that arrangements can be made for you to get the
    sources you need.  Hopefully the appropriate person will get in touch
    with you on this.

The lack of sources is a very serious problem. What are "arrangements .. for
you to get the sources you need"???

11-Apr-85 01:56:22-EST,802;000000000000
Received: from MIT-MORRISON by MIT-OZ via Chaosnet; 11 Apr 85 01:55-EST
Date: Thursday, 11 April 1985, 01:53-EST
From: Gavan Duffy <GAVAN at OZ>
Subject: ZMAIL can't read a mail file on MC?
To: York at SCRC-QUABBIN, GAVAN at OZ, rsl at SPA-RUSSIAN,
    BUG-LISPM at OZ
In-Reply-To: <850410120105.6.YORK@CARDINAL.SCRC.Symbolics.COM>
Message-ID: <850411015305.4.GAVAN@MORRISON.MIT>

    Date: Wednesday, 10 April 1985, 12:01-EST
    From: William M. York <York at SCRC-QUABBIN>

    Of course, this has nothing to do with the fact that people can't figure
    out how to use Zmail to read in a new mailbox without assistance from
    Bug-Lispm (I had the very same problem once).

Are you saying that [Get Inbox] shouldn't be used to read in a new mailbox?
That's how I'm reading this.
11-Apr-85 02:38:23-EST,934;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 11 Apr 85 02:38-EST
Received: from SCRC-STONY-BROOK by MIT-MC via Chaosnet; 10 APR 85  21:00:37 EST
Received: from SCRC-THAMES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 212235; Wed 10-Apr-85 11:22:09-EST
Date: Wed, 10 Apr 85 11:24 EST
From: Scott McKay <SWM@SCRC-QUABBIN.ARPA>
Subject: whither c-sh-P?
To: Gumby@MIT-MC.ARPA, Bug-Lispm@MIT-MC.ARPA
In-Reply-To: <850410003129.4.GUMBY@JIMI.MIT>
Message-ID: <850410112422.3.SWM@THAMES.SCRC.Symbolics.COM>

    Date: Wed, 10 Apr 85 00:31 EST
    From: David Vinayak Wallace <Gumby@MIT-MC.ARPA>

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.10,
    microcode TMC5-MIC 319, FEP 18, on Lisp Machine Jimi Hendrix:

    What happened to c-sh-P in the debugger?  Also, there's no way to get
    this behaviour in the command digester.

What are you talking about?  c-sh-P certainly works fine for me in Rel 6.
11-Apr-85 02:56:06-EST,467;000000000000
Received: from MIT-MORRISON by MIT-OZ via Chaosnet; 11 Apr 85 02:55-EST
Date: Thursday, 11 April 1985, 02:53-EST
From: Gavan Duffy <GAVAN at OZ>
Subject: m-q in text mode broken in rel 6
To: BUG-LISPM at OZ
Message-ID: <850411025307.5.GAVAN@MORRISON.MIT>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.12,
microcode TMC5-MIC 319, FEP 22, on Lisp Machine Jim Morrison:

m-q in text mode is broken in rel 6.  It fills across lines that begin with a .
11-Apr-85 04:31:36-EST,825;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 11 Apr 85 04:31-EST
Date: Thu,11 Apr 85 04:31:10 EST
From: David Vinayak Wallace <GUMBY@MIT-MC>
Subject:  Unflushable spy turds
To: RLB@SCRC-STONY-BROOK
cc: BUG-LISPM@MIT-MC, GAVAN@MIT-OZ
In-reply-to: Msg of Wed 10 Apr 85 17:10 EST from Richard L. Bryan <RLB at SCRC-STONY-BROOK.ARPA>
Message-ID: <[MIT-MC].450860.850411.GUMBY>

    Date: Wed, 10 Apr 85 17:10 EST
    From: Richard L. Bryan <RLB at SCRC-STONY-BROOK.ARPA>

        Date: Wed, 10 Apr 85 00:25 EST
        From: Gavan Duffy <GAVAN@OZ.MIT>
        Spying on a 3670 from a 3600 leaves unsightly turds at the bottom
        of the 3600 screen.  Refresh doesn't flush them.

    I always thought espionage was a dirty business. (:-)

You mean you've been able to spy remotely on Dandelion screens??
11-Apr-85 13:10:23-EST,1819;000000000000
Received: from SCRC-RIVERSIDE by MIT-OZ via Chaosnet; 11 Apr 85 13:10-EST
Received: from SCRC-PEACE by SCRC-RIVERSIDE via CHAOS with CHAOS-MAIL id 34638; Thu 11-Apr-85 13:09:10-EST
Date: Thu, 11 Apr 85 13:08 EST
From: Charles Hornig <Hornig@STONY-BROOK.SCRC.Symbolics.COM>
Subject: SUPDUP graphics
To: Gavan Duffy <GAVAN@OZ.MIT>, BUG-LISPM@OZ.MIT
In-Reply-To: The message of 26 Nov 84 01:17-EST from Gavan Duffy <GAVAN@OZ.MIT>
Message-ID: <850411130822.8.HORNIG@PEACE.SCRC.Symbolics.COM>

    Date: Monday, 26 November 1984, 01:17-EST
    From: Gavan Duffy <GAVAN at MIT-OZ>

    In Symbolics 3600 System 242.356, Hardcopy 20.10,
    Experimental RELATUS 131.119, FEP 22, on Lisp Machine Buddy Holly:

    Typed `n' while dpress-ing on MC.

    >>Error: The object #<SUPDUP-GRAPHICS-STATE 35020733> received a NIL message, which went unclaimed.
	     The rest of the message was (32.)
    While in the function (:METHOD TELNET:SUPDUP-GRAPHICS-STATE :GRAPHICS-PUSH)  (:METHOD TELNET:SUPDUP-GRAPHICS-STATE :GRAPHICS-PUSH)  (:METHOD TELNET:SUPDUP-GRAPHICS-STATE :GRAPHICS-PUSH)

I believe that I have fixed this in the source of the development
system.  The needed fix is:

TELNET:
(DEFMETHOD (SUPDUP-GRAPHICS-STATE :GRAPHICS-PUSH) (IGNORE)
  (LET-GLOBALLY ((GRAPHICS-XPOS GRAPHICS-XPOS)
		 (GRAPHICS-YPOS GRAPHICS-YPOS)
		 (GRAPHICS-RIGHT GRAPHICS-RIGHT)
		 (GRAPHICS-LEFT GRAPHICS-LEFT)
		 (GRAPHICS-TOP GRAPHICS-TOP)
		 (GRAPHICS-BOTTOM GRAPHICS-BOTTOM)
		 (GRAPHICS-XOR-MODE GRAPHICS-XOR-MODE)
		 (GRAPHICS-VIRTUAL-MODE GRAPHICS-VIRTUAL-MODE))
    (DO (CH) (())
      (SETQ CH (SEND SELF ':GRAPHICS-NETI))
      (LET ((COMMAND (IF (BIT-TEST CH #O100)
			 (AREF *DRAW-DISPATCH* (LOGAND CH #O017))
			 (AREF *GRAPHICS-DISPATCH* CH))))
	(WHEN COMMAND (SEND SELF COMMAND CH))))))
11-Apr-85 13:21:40-EST,4784;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 11 Apr 85 13:21-EST
Received: from GRIZZLY by GOLDILOCKS via CHAOS with CHAOS-MAIL id 205; Thu 11-Apr-85 13:16:44-EST
Date: Thursday, 11 April 1985, 13:16-EST
From: sr.ehpyc at MIT-SPEECH
Sender: sr.6343 at MIT-SPEECH
Subject: Numeric login
To: BUG-LISPM at MIT-SPEECH
Message-ID: <850411131623.1.6343@GRIZZLY.MIT>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, Experimental ZOO 5.5,
Spire-Macros 5.1, Attribute 5.0, Compute 5.2, Audio 4.0,
Speech-Attributes 4.0, Display 6.1, Speech-Layouts 6.0, Prtout 4.0,
Versatec 5.0, Spire 16.0, ZOO-SPIRE 1.0, microcode TMC5-MIC 319, on Lisp Machine Grizzly:

Logging in as 6343 doesn't work.

Goldy is not using NEW-FILE, as per Moon's suggestion, on account of file copying.

>>Error: File system bug on host GOLDILOCKS:
         Operating system error - ("G") is an invalid directory component for GOLDILOCKS (a LISPM host)..
         For GOLDY:>6343>lispm-init.bin
While in the function (:METHOD FS:HOST-UNIT :COMMAND)  FS:LOGIN-HOST-UNIT  (:METHOD FS:QFILE-ACCESS-PATH :LOGIN-UNIT)

(:METHOD FS:HOST-UNIT :COMMAND):  (P.C. = 236)
   Arg 0 (SELF): #<HOST-UNIT 26773433>
   Arg 1 (SELF-MAPPING-TABLE): FS:HOST-UNIT
   Arg 2 (OPERATION): :COMMAND
   Arg 3 (MARK-P): NIL
   Arg 4 (STREAM-OR-HANDLE): NIL
   Arg 5 (SIMPLE-P): NIL
   Arg 6 (WHOSTATE): "Login"
   Rest arg (COMMANDS): ("LOGIN " "6343" " " "" " ")
   Local 8 (HANDLE): NIL
   Local 9 (STREAM): NIL
   Local 10 (PKT): #<Chaos Packet 16605344>
   Local 11 (SUCCESS): NIL
   Local 12 (STRING): " ERROR BUG F Operating system error - (/"G/") is an invalid directory component for GOLDILOCKS (a LISPM host)..
"
   Local 13 (TRANSACTION-ID): "T2708"
   Local 14 (CREATE-P): NIL
   Local 15 (CONDITION): NIL
   Local 16: NIL
   Local 17: #<CASE-HANDLER 120711625>
   Local 18: (#<CASE-HANDLER 120711627> #<CASE-HANDLER 120653373> #<CASE-HANDLER 120571540>)
   Local 19: (#<CASE-HANDLER 120711625> #<CASE-HANDLER 120711627> #<CASE-HANDLER 120653373> #<CASE-HANDLER 120571540>)

FS:LOGIN-HOST-UNIT:  (P.C. = 157)
   Arg 0 (UNIT): #<HOST-UNIT 26773433>
   Arg 1 (LOGIN-P): T
   Arg 2 (CONDITION): NIL

(:METHOD FS:QFILE-ACCESS-PATH :LOGIN-UNIT):  (P.C. = 10)
   Arg 0 (SELF): #<LMFS-QFILE-ACCESS-PATH GOLDY using QFILE 26773422>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:QFILE-ACCESS-PATH -- 4. IV's, 0. FL's 104676437>
   Arg 2 (OPERATION): :LOGIN-UNIT
   Arg 3 (UNIT): #<HOST-UNIT 26773433>
   Arg 4 (LOGIN-P): T
   --Defaulted args:--
   Arg 5 (CONDITION): NIL

(:METHOD FS:NORMAL-QFILE-ACCESS-PATH :COMBINED :LOGIN-UNIT):  (P.C. = 11)
   Arg 0 (SELF): #<LMFS-QFILE-ACCESS-PATH GOLDY using QFILE 26773422>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:NORMAL-QFILE-ACCESS-PATH -- 1. IV's, 3. FL's 104676460>
   Arg 2 (.OPERATION.): :LOGIN-UNIT
   Rest arg (.DAEMON-CALLER-ARGS.): (#<HOST-UNIT 26773433> T)

(:METHOD FS:HOST-UNIT :VALIDATE-CONTROL-CONNECTION):  (P.C. = 121)
   Arg 0 (SELF): #<HOST-UNIT 26773433>
   Arg 1 (SELF-MAPPING-TABLE): FS:HOST-UNIT
   Arg 2 (OPERATION): :VALIDATE-CONTROL-CONNECTION
   Arg 3 (NO-ERROR-P): T

(:METHOD FS:QFILE-ACCESS-PATH :GET-DATA-CONNECTION):  (P.C. = 16)
   Arg 0 (SELF): #<LMFS-QFILE-ACCESS-PATH GOLDY using QFILE 26773422>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:QFILE-ACCESS-PATH -- 4. IV's, 0. FL's 104676437>
   Arg 2 (OPERATION): :GET-DATA-CONNECTION
   Arg 3 (DIRECTION): :INPUT

FS:OPEN-CHAOS:  (P.C. = 453)
   Arg 0 (ACCESS-PATH): #<LMFS-QFILE-ACCESS-PATH GOLDY using QFILE 26773422>
   Arg 1 (REAL-PATHNAME): #<LMFS-PATHNAME "GOLDY:>6343>lispm-init.bin">
   Arg 2: #<LMFS-PATHNAME "GOLDY:>6343>lispm-init.bin">
   Arg 3 (OPTIONS): (:DIRECTION :INPUT :CHARACTERS :DEFAULT)

(:METHOD FS:QFILE-ACCESS-PATH :OPEN):  (P.C. = 7)
   Arg 0 (SELF): #<LMFS-QFILE-ACCESS-PATH GOLDY using QFILE 26773422>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:QFILE-ACCESS-PATH -- 4. IV's, 0. FL's 104676437>
   Arg 2 (OPERATION): :OPEN
   Arg 3 (REAL-PATHNAME): #<LMFS-PATHNAME "GOLDY:>6343>lispm-init.bin">
   Arg 4 (PATHNAME): #<LMFS-PATHNAME "GOLDY:>6343>lispm-init.bin">
   Rest arg (OPTIONS): (:DIRECTION :INPUT :CHARACTERS :DEFAULT)

Rest of stack:
(:METHOD FS:ACTIVE-PATHNAME-MIXIN :OPEN):  (P.C. = 14)
FS:COMMON-LISP-OPEN:  (P.C. = 450)
OPEN:  (P.C. = 257)
FS:LOAD-OPEN:  (P.C. = 122)
LOGIN:  (P.C. = 564)
(:PROPERTY SI:COM-LOGIN SI:CP-FUNCTION):  (P.C. = 22)
SI:COM-LOGIN:  (P.C. = 24)
SI:*EVAL:  (P.C. = 403)
(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0):  (P.C. = 152)
TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
SI:LISP-COMMAND-LOOP:  (P.C. = 67)
SI:LISP-TOP-LEVEL1:  (P.C. = 5)
SI:LISP-TOP-LEVEL:  (P.C. = 7)
11-Apr-85 14:09:55-EST,1206;000000000000
Received: from MIT-GOLDILOCKS by MIT-OZ via Chaosnet; 11 Apr 85 14:08-EST
Date: Thursday, 11 April 1985, 14:06-EST
From: sr.ehpyc at MIT-SPEECH
Sender: File-Server at GOLDILOCKS
Subject: The 6343 login problem -- a fix
To: bug-lispm at OZ
Message-ID: <"850411140651.1.File-Server@GOLDILOCKS"@GOLDILOCKS.MIT>

GOLDY:>s>zoo>zoo-5>zoo-5-6.lisp
Function FS:QFILE-SERVER-LOGIN:  Parse numeric logins properly

This on Goldy fixes the problem.  Evidently to reduce consing, numbers
are parsed as numbers instead of strings.  This function was doing a
string of 6343, which didn't work.  This doesn't do the right thing for
bases, but I don't know what the right thing should be anyways, and this
fixes the problem for us.

(defun qfile-server-login (rest)
  (let ((uname
	  (format nil "~a"
		  (or (car rest)
		      (server-error 'server-protocol-violation
				    "Null or missing user name in LOGIN request.")))))
    (format *stream* "~A  ~A ~A ~%~A~%" *transaction-id* "LOGIN" uname
	    (send
	      (fs:make-pathname ':host si:local-host ':device ':unspecific
				':directory
				(list uname)
				':name nil ':type nil ':version nil)
	      ':string-for-host))
    uname))
11-Apr-85 16:49:35-EST,285;000000000000
Mail-From: CJL created at 11-Apr-85 16:22:34
Date: Thu, 11 Apr 1985  16:22 EST
Message-ID: <CJL.12102373386.BABYL@MIT-OZ>
From: Chris Lindblad <CJL@MIT-OZ>
To:   bug-lispm@MIT-OZ
Subject: NEW-FILE documentation.

Where can I get documentation describing the NEW-FILE protocol?
11-Apr-85 20:20:27-EST,1376;000000000000
Received: from MIT-ZERMATT by MIT-OZ via Chaosnet; 11 Apr 85 20:19-EST
Received: from ASPEN by ZERMATT via CHAOS with CHAOS-MAIL id 2610; Thu 11-Apr-85 20:17:54-EST
Date: Thursday, 11 April 1985, 20:17-EST
From: Sarah L. Ferguson <SASHA at MIT-MC>
Subject: make-system lossage
To: BUG-LISPM at OZ
Message-ID: <"850411201729.1.SASHA@MIT-MC"@ASPEN.MIT>

In Symbolics 3640 Release 6.0, IP-TCP 29.0, MLSite 2.3,
microcode TMC5-IO4-ST506-MIC 319, on Lisp Machine Aspen:

(si:set-system-source-file 'prolog "mc:sasha;prolog system")
(make-system 'prolog)

loses since the the filename specified does not have a numeric fn2,
and hence fails the "when" in the following code from si::maybe-reload-system-declaration
This seems like an unnecessary restriction.

(DEFUN MAYBE-RELOAD-SYSTEM-DECLARATION (SYSTEM-NAME KEYWORDS &AUX FILE)
  ...
      (WHEN (AND FILE
		 ;; To keep from blowing out, disable this whole feature if the FN2 isn't >.
		 (NULL (SEND FILE ':TYPE))
		 ;; Also keep from losing when the same file has the
		 ;; defsystem and the make-system in it
		 (NEQ FILE FDEFINE-FILE-PATHNAME))
	(LOCAL-DECLARE ((SPECIAL *SYSDCL-REAL-SYSTEM-KLUDGE*))
	  (LET-IF (AND (TYPEP SYSTEM 'SYSTEM)
		       (SYSTEM-PATCHABLE-P SYSTEM)) #+IGNORE
		  *SYSTEM-BEING-PATCHED* ((*SYSDCL-REAL-SYSTEM-KLUDGE* SYSTEM))
	    (MAYBE-RELOAD-FILE FILE KEYWORDS))))
11-Apr-85 20:36:47-EST,4331;000000000000
Received: from MIT-REAGAN by MIT-OZ via Chaosnet; 11 Apr 85 20:36-EST
Received: from MIT-MAHOGANY by MIT-REAGAN via CHAOS with CHAOS-MAIL id 2901; Thu 11-Apr-85 20:42:22-EST
Date: Thursday, 11 April 1985, 20:34-EST
From: Joanne West <joanne at MIT-MAHOGANY>
Subject: still no hardcopy
To: BUG-LISPM at OZ
Message-ID: <850411203433.1.JOANNE@MAHOGANY.MIT>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, microcode TMC5-MIC 319,
FEP 18, Tanglewood Version VIII, on Project Tanglewood Mahogany:

	

I just tried to hardcopy a file and this is what I got
(please reply to beckerle@mit-xx):

>>Trap: The first argument given to the AR-1 instruction, NIL, was not an array.
While in the function (:METHOD PRESS:PRESS-STREAM :CHARACTER-WIDTH)  (:METHOD SI:HARDCOPY-STREAM-FONT-MIXIN :UPDATE-SPACE-WIDTH)  (:METHOD SI:HARDCOPY-STREAM-FONT-MIXIN :AFTER :INIT)

(:METHOD PRESS:PRESS-STREAM :CHARACTER-WIDTH):  (P.C. = 14)
   Arg 0 (SELF): #<PRESS-STREAM 23051260>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor PRESS:PRESS-STREAM -- 33. IV's, 3. FL's 36347656>
   Arg 2 (OPERATION): :CHARACTER-WIDTH
   Arg 3 (CHAR): 32.

(:METHOD SI:HARDCOPY-STREAM-FONT-MIXIN :UPDATE-SPACE-WIDTH):  (P.C. = 5)
   Arg 0 (SELF): #<PRESS-STREAM 23051260>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:HARDCOPY-STREAM-FONT-MIXIN -- 7. IV's, 0. FL's 36347036>
   Arg 2 (OPERATION): :UPDATE-SPACE-WIDTH

(:METHOD SI:HARDCOPY-STREAM-FONT-MIXIN :AFTER :INIT):  (P.C. = 224)
   Arg 0 (SELF): #<PRESS-STREAM 23051260>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:HARDCOPY-STREAM-FONT-MIXIN -- 7. IV's, 0. FL's 36347036>
   Arg 2 (OPERATION): :INIT
   Arg 3 (PLIST): #<DTP-LOCATIVE 21540503>

(:METHOD PRESS:PRESS-STREAM :COMBINED :INIT):  (P.C. = 26)
   Arg 0 (SELF): #<PRESS-STREAM 23051260>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor PRESS:PRESS-STREAM -- 33. IV's, 3. FL's 36347656>
   Arg 2 (.OPERATION.): :INIT
   Rest arg (.DAEMON-CALLER-ARGS.): (#<DTP-LOCATIVE 21540503>)

INSTANTIATE-FLAVOR:  (P.C. = 445)
   Arg 0 (FLAVOR-NAME): PRESS:PRESS-STREAM
   Arg 1 (INIT-PLIST): #<DTP-LOCATIVE 21540503>
   Arg 2 (SEND-INIT-MESSAGE-P): :MAYBE
   --Defaulted args:--
   Arg 3 (RETURN-UNHANDLED-KEYWORDS-P): NIL
   Arg 4 (AREA-TO-CONS-INSTANCE-IN): NIL

MAKE-INSTANCE:  (P.C. = 6)
   Arg 0 (FLAVOR-NAME): PRESS:PRESS-STREAM
   Rest arg (INIT-OPTIONS): (:DEVICE #<PRESS-PRINTER TREMONT-VIA-MC 6041654> :OUTPUT-STREAM #<FILE-OUTPUT-BINARY-STREAM "MIT-MC: .DOVR.; JOANNE >" 23041455> :NEW-PAGE-HOOK #<DTP-COMPILED-FUNCTION SI:HARDCOPY-PRINT-PAGE-HEADING 47371314> :HEADER-FONT-P T :PAGE-NUMBER 0. ...)
   Local 1 (INIT-OPTIONS): (:MARGINS (2000. 1270. 2000. 1270.) :DEVICE #<PRESS-PRINTER TREMONT-VIA-MC 6041654> :OUTPUT-STREAM #<FILE-OUTPUT-BINARY-STREAM "MIT-MC: .DOVR.; JOANNE >" 23041455> :NEW-PAGE-HOOK #<DTP-COMPILED-FUNCTION SI:HARDCOPY-PRINT-PAGE-HEADING 47371314> :HEADER-FONT-P T ...)

(:METHOD SI:HARDCOPY-DEVICE-MIXIN :MAKE-HARDCOPY-STREAM):  (P.C. = 124)
   Arg 0 (SELF): #<PRESS-PRINTER TREMONT-VIA-MC 6041654>
   Arg 1 (SELF-MAPPING-TABLE): SI:HARDCOPY-DEVICE-MIXIN
   Arg 2 (OPERATION): :MAKE-HARDCOPY-STREAM
   Arg 3 (OPTIONS): (:NEW-PAGE-HOOK #<DTP-COMPILED-FUNCTION SI:HARDCOPY-PRINT-PAGE-HEADING 47371314> :HEADER-FONT-P T :PAGE-NUMBER 0. :BANNER-FILE-NAME "MAHOGANY:>joanne>hw6.lisp.1" :BANNER-CREATION-DATE 2691106215. ...)

SI:MAKE-HARDCOPY-STREAM:  (P.C. = 52)
   Arg 0 (DEVICE): #<PRESS-PRINTER TREMONT-VIA-MC 6041654>
   Rest arg (OPTIONS): (:NEW-PAGE-HOOK #<DTP-COMPILED-FUNCTION SI:HARDCOPY-PRINT-PAGE-HEADING 47371314> :HEADER-FONT-P T :PAGE-NUMBER 0. :BANNER-FILE-NAME "MAHOGANY:>joanne>hw6.lisp.1" :BANNER-CREATION-DATE 2691106215. ...)

Rest of stack:
SI:HARDCOPY-FROM-STREAM:  (P.C. = 137)
SI:HARDCOPY-FILE:  (P.C. = 127)
SI:HARDCOPY-TEXT-FILE:  (P.C. = 11)
PRESS:HARDCOPY-VIA-MENUS:  (P.C. = 1514)
SI:*EVAL:  (P.C. = 403)
(:METHOD TV:MENU-EXECUTE-MIXIN :EXECUTE):  (P.C. = 53)
(:METHOD TV:DYNAMIC-MULTICOLUMN-MOMENTARY-WINDOW-HACKING-PROCESS-RENAMING-MENU :COMBINED :EXECUTE):  (P.C. = 27)
(:METHOD TV:BASIC-MENU :CHOOSE):  (P.C. = 26)
(:METHOD TV:DYNAMIC-MULTICOLUMN-MOMENTARY-WINDOW-HACKING-MENU :COMBINED :CHOOSE):  (P.C. = 42)
TV:CALL-SYSTEM-MENU:  (P.C. = 51)
SI:PROCESS-RUN-FUNCTION-INTERNAL:  (P.C. = 52)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
11-Apr-85 21:00:57-EST,1222;000000000000
Received: from MIT-REAGAN by MIT-OZ via Chaosnet; 11 Apr 85 21:00-EST
Date: Thursday, 11 April 1985, 21:05-EST
From: cjl at OZ
Sender: bug-lispm at OZ
Subject: Dover from lisp machines.
To: beckerle at MIT-XX
cc: bug-lispm at OZ
Message-ID: <850411210548.3.FILE-SERVER@MIT-REAGAN.INTERNET>


Put this in your lispm-init file to make dovering work:

;;; Patch to make hardcopy to the dover work again
;;; Hopefully will not be necessary in 6.1

press:  ;from SYS:HARDCOPY;PRESS
(let ((inhibit-fdefine-warnings t))
  (defflavor press-hardcopy-device-mixin () (si:multiple-font-hardcopy-device-mixin)
    (:default-init-plist :default-font "LPT8" :header-font "LPT8")))

(loop for printer in (let ((neti:*inhibit-validity-checking* t))
		       (neti:find-objects-from-property-list :printer :type :press))
      do (send printer :eval-inside-yourself '(setq default-font "LPT8"))
	 (send printer :eval-inside-yourself '(setq header-font "LPT8")))
press:
(let ((inhibit-fdefine-warnings t))
  (defmethod (press-stream :character-width) (char)
    (unless (send self :device-current-font)
      (send self :set-device-font))
    (max 0 (aref (seventh si:device-current-font) (char-code char)))))
11-Apr-85 23:15:06-EST,2892;000000000000
Received: from 13063 by MIT-OZ via Chaosnet; 11 Apr 85 23:15-EST
Date: Thursday, 11 April 1985, 23:13-EST
From: David Chapman <Zvona at OZ>
Subject: window system bug
To: BUG-LISPM at OZ
Message-ID: <850411231337.2.ZVONA@DUANE.MIT>

In Symbolics 3670 Release 6.0, IP-TCP 29.0, AISite 7.12,
microcode TMC5-IO4-MIC 319, FEP 22, on Lisp Machine Duane Allman:

I killed lisp listener 2 via the system menu.  I may have typed ahead
select L at this point, I don't remember.  Anyway, lisp listener 1
exposed.  Then I got a notification that lisp listener 2 got an error,
so I did function 0 s to get that error.  Then I got a notification that
process function-0-s-window (or something like that) had got an error,
so I did function 0 s again and go this.

>>Error: Attempt to activate #<LISP-LISTENER Lisp Listener 2 600576 deactivated>, which has been sent a :KILL message
While in the function (:METHOD TV:SHEET :BEFORE :ACTIVATE)  (:METHOD
                                                              TV:WINDOW
                                                              :COMBINED
                                                              :ACTIVATE)  (:METHOD
                                                                            TV:ESSENTIAL-WINDOW
                                                                            :MOUSE-SELECT)

(:METHOD TV:SHEET :BEFORE :ACTIVATE):  (P.C. = 10)
   Arg 0 (SELF): #<LISP-LISTENER Lisp Listener 2 600576 deactivated>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:SHEET -- 0. IV's, 1. FL's 104234210>
   Arg 2 (OPERATION): :ACTIVATE

(:METHOD TV:WINDOW :COMBINED :ACTIVATE):  (P.C. = 11)
   Arg 0 (SELF): #<LISP-LISTENER Lisp Listener 2 600576 deactivated>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:WINDOW -- 0. IV's, 12. FL's 104234270>
   Arg 2 (.OPERATION.): :ACTIVATE
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

(:METHOD TV:ESSENTIAL-WINDOW :MOUSE-SELECT):  (P.C. = 5)
   Arg 0 (SELF): #<LISP-LISTENER Lisp Listener 2 600576 deactivated>
   Arg 1 (SELF-MAPPING-TABLE): TV:ESSENTIAL-WINDOW
   Arg 2 (OPERATION): :MOUSE-SELECT
   Rest arg (ARGS): NIL

(:METHOD TV:WINDOW :COMBINED :MOUSE-SELECT):  (P.C. = 20)
   Arg 0 (SELF): #<LISP-LISTENER Lisp Listener 2 600576 deactivated>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:WINDOW -- 0. IV's, 12. FL's 104234270>
   Arg 2 (.OPERATION.): :MOUSE-SELECT
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

TV:KBD-SWITCH-WINDOWS:  (P.C. = 17)
   Arg 0 (ARG): 0

(:INTERNAL TV:KBD-ESC 1):  (P.C. = 4)
   Arg 0 (FCN): TV:KBD-SWITCH-WINDOWS
   Arg 1 (ARG): 0

SI:PROCESS-RUN-FUNCTION-INTERNAL:  (P.C. = 52)
   Arg 0 (RESTART-ON-RESET): NIL
   Arg 1 (FUNCTION): #<DTP-COMPILED-FUNCTION (:INTERNAL TV:KBD-ESC 1) 22406733>
   Rest arg (ARGS): (TV:KBD-SWITCH-WINDOWS 0)

SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
   Arg 0 (IGNORE): NIL
11-Apr-85 23:18:30-EST,2718;000000000000
Received: from 13063 by MIT-OZ via Chaosnet; 11 Apr 85 23:18-EST
Date: Thursday, 11 April 1985, 23:17-EST
From: David Chapman <Zvona at OZ>
Subject: more on my last bug report
To: BUG-LISPM at OZ
Message-ID: <850411231704.3.ZVONA@DUANE.MIT>

In Symbolics 3670 Release 6.0, IP-TCP 29.0, AISite 7.12,
microcode TMC5-IO4-MIC 319, FEP 22, on Lisp Machine Duane Allman:

OK, this explains the bug.  Proceeding from the
function-0-s-got-an-error pop-up-window error message, I got lisp
listener 2 back, with this error.  The problem is that frames marked
break-on-exit may want to talk to the window when the associated process
is killed.

>>Trap: Break on throw through PUNT; values being thrown: 
           #<DTP-COMPILED-FUNCTION SI:PROCESS-KILL-TOP-LEVEL 6740301>, NIL
While in the function PUNT  FAIL  BAR

PUNT:  (encapsulated for BREAKON)  (from PIG:USRD$:[ZVONA.DDL]ZTHRWSRCH)
   Rest arg (ARGLIST): ([tms-node (NOT NIL)])

FAIL:
   Arg 0 (JUSTIFICATION-VALUE): [tms-node (NOT NIL)]
   Arg 1 (JUSTIFICATION-DJ): [tms-node (NOT NIL)]
   Arg 2 (CJ-110): [tms-node (DDLI:IF-SUBEXPRESSION-CJ [tms-node (NOT NIL)] CJ-5512)]

BAR:  (P.C. = 341)
   Arg 0 (N-VALUE): 5
   Arg 1 (N-DJ): [tms-node "Constant 5 was evaluated"]
   Arg 2 (CJ-5505): [tms-node ("You told me to evaluate" (BAR 5))]

DDLI:DDL-APPLY-ZETALISP-PROCEDURE:  (P.C. = 30)  (from PIG:SYS$DISK:[ZVONA.DDL]EVAL)
   Arg 0 (PROC): #<DTP-COMPILED-FUNCTION BAR 76765754>
   Arg 1 (VALUES): (5)
   Local 1 (VALUES): NIL
   Arg 2 (DJS): ([tms-node "Constant 5 was evaluated"])
   Local 2 (DJS): NIL
   Arg 3 (CJ): [tms-node ("You told me to evaluate" (BAR 5))]

DDLI:DDL-APPLY:  (P.C. = 30)  (from PIG:SYS$DISK:[ZVONA.DDL]EVAL)
   Arg 0 (PROC): #<DTP-COMPILED-FUNCTION BAR 76765754>
   Arg 1 (VALUES): (5)
   Arg 2 (DJS): ([tms-node "Constant 5 was evaluated"])
   Arg 3 (CJ): [tms-node ("You told me to evaluate" (BAR 5))]

DDLI:DDL-EVAL-COMBINATION:  (P.C. = 20)  (from PIG:SYS$DISK:[ZVONA.DDL]EVAL)
   Arg 0 (EXP): (BAR 5)
   Arg 1 (ENV): #<ENVIRONMENT 20112236>
   Arg 2 (CJ): [tms-node ("You told me to evaluate" (BAR 5))]

DDLI:DDL-EVAL:  (P.C. = 71)  (from PIG:SYS$DISK:[ZVONA.DDL]EVAL)
   Arg 0 (EXP): (BAR 5)
   Arg 1 (ENV): #<ENVIRONMENT 20112236>
   Arg 2 (CJ): [tms-node ("You told me to evaluate" (BAR 5))]

DDLI:DDL-READ-EVAL-PRINT:  (P.C. = 115)  (from PIG:SYS$DISK:[ZVONA.DDL]USERINT)

Rest of stack:
SI:*EVAL:  (P.C. = 403)
(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0):  (P.C. = 152)
TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
SI:LISP-COMMAND-LOOP:  (P.C. = 67)
SI:LISP-TOP-LEVEL1:  (P.C. = 5)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
11-Apr-85 23:22:27-EST,642;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 11 Apr 85 23:22-EST
Date: Thu,11 Apr 85 23:19:31 EST
From: Christopher C. Stacy <CSTACY@MIT-MC>
To: BUG-LISPM@MIT-MC
Message-ID: <[MIT-MC].452232.850411.CSTACY>

In Release 6, LMFS 57...

The "Server Shutdown" command in the LMFS maint menu is misleading.
It shuts down all services, not just LMFS.  Someone was unable to
send me a CONVERSE message asking me to turn them back on because
of this.  I think it should just shut down file service; if I intended
to do something as drastic as shut myself off from the rest of the
world I would have called (SI:DISABLE-SERVICES) myself.
11-Apr-85 23:32:59-EST,590;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 11 Apr 85 23:32-EST
Date: Thu,11 Apr 85 23:32:04 EST
From: Christopher C. Stacy <CSTACY@MIT-MC>
To: BUG-LISPM@MIT-MC
In-reply-to: Msg of Thu11 Apr 85 23:19:31 EST from Christopher C. Stacy <CSTACY>
Message-ID: <[MIT-MC].452246.850411.CSTACY>

More bugs in LMFS 57...
Clicking left on "Server Shutdown" when the servers are already shut
down does not act differently that if they were enabled.  
Clicking right on the item when servers are already shutdown tells you
the shutdown is cancelled, but does not turn the servers back on.
12-Apr-85 00:58:29-EST,1478;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 12 Apr 85 00:58-EST
Received: from SCRC-NEPONSET by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 152771; Thu 11-Apr-85 16:42:08-EST
Date: Thursday, 11 April 1985, 16:42-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: Common-Lisp Syntax
To: Scott Cyphers <sr.ehpyc at MIT-SPEECH>, BUG-LISPM at MIT-SPEECH
In-Reply-To: <850410162451.4.CYPHER@MIT-YOGI.MIT>
Message-ID: <850411164229.0.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Wednesday, 10 April 1985, 16:24-EST
    From: Scott Cyphers <sr.ehpyc at MIT-SPEECH>

    In Symbolics 3670 Release 6.0, IP-TCP 29.0, Experimental ZOO 5.4,
    Experimental Spire-Macros 5.1, Experimental Attribute 5.0,
    Experimental Compute 5.2, Experimental Audio 4.0,
    Experimental Speech-Attributes 4.0, Experimental Display 6.0,
    Experimental Speech-Layouts 6.0, Experimental Prtout 4.0,
    Experimental Versatec 5.0, Experimental Spire 16.0, ZOO-SPIRE 1.0,
    microcode TMC5-IO4-FPA-MIC 319, on Lisp Machine Yogi:

    I'm not really sure what the syntax is supposed to do for me, but when
    I set the syntax to be common-lisp, Zmacs indents LOOP the old way.

Indeed.  SWM gave a magic incantation to somebody the other day, perhaps
it was only on the local mailing list.  The problem is that CL:LOOP is
not EQ to ZL:LOOP.  This incantation is probably good enough:
	(push '(cl:loop . zwei:indent-loop) zwei:*lisp-indent-offset-alist*)
12-Apr-85 01:05:38-EST,1148;000000000000
Received: from SCRC-RIVERSIDE by MIT-OZ via Chaosnet; 12 Apr 85 01:05-EST
Received: from SCRC-PEACE by SCRC-RIVERSIDE via CHAOS with CHAOS-MAIL id 34639; Thu 11-Apr-85 13:10:03-EST
Date: Thu, 11 Apr 85 13:09 EST
From: Charles Hornig <Hornig@STONY-BROOK.SCRC.Symbolics.COM>
Subject: SUPDUP-GRAPHICS-STATE receives the null message.
To: Gavan Duffy <GAVAN@OZ.MIT>, BUG-LISPM@OZ.MIT
In-Reply-To: The message of 11 Dec 84 09:05-EST from Gavan Duffy <GAVAN@OZ.MIT>
Message-ID: <850411130937.9.HORNIG@PEACE.SCRC.Symbolics.COM>

    Date: Tuesday, 11 December 1984, 09:05-EST
    From: Gavan Duffy <GAVAN at MIT-OZ>

    In Symbolics 3600 System 242.356, Hardcopy 20.10,
    Experimental RELATUS 131.140, FEP 22, on Lisp Machine Buddy Holly:

    Typed `n' to DPRESS and got this.

    >>Error: The object #<SUPDUP-GRAPHICS-STATE 40336777> received a NIL message, which went unclaimed.
	     The rest of the message was (54.)
    While in the function (:METHOD TELNET:SUPDUP-GRAPHICS-STATE :SUPDUP-GRAPHICS)  (:METHOD TELNET:SUPDUP-STATE-BLOCK :SUPDUP-GRAPHICS)  (:METHOD TELNET:SUPDUP-FILTER :FILTER)

This is fixed in release 6.
12-Apr-85 01:08:51-EST,1929;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 12 Apr 85 01:08-EST
Received: from SCRC-PEACE by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 213038; Thu 11-Apr-85 12:19:25-EST
Date: Thu, 11 Apr 85 12:18 EST
From: Charles Hornig <Hornig@STONY-BROOK.SCRC.Symbolics.COM>
Subject: Supdup graphics
To: Alan Bawden <Alan@MC.MIT>, BUG-LISPM@OZ.MIT
In-Reply-To: <850409110255.1.ALAN@MOON.MIT>
Message-ID: <850411121857.5.HORNIG@PEACE.SCRC.Symbolics.COM>

    Date: Tuesday, 9 April 1985, 11:02-EST
    From: Alan Bawden <Alan at MIT-MC>

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.9,
    microcode TMC5-MIC 319, on Lisp Machine Keith Moon:

    I was running DPRESS on MC on the file AR:.;THESIS PRESS (ITS hackers
    can guess why I was doing that!)  I was just N'ing through the file
    when:

    >>Error: The object #<SUPDUP-GRAPHICS-STATE 30510141> received a NIL message, which went unclaimed.
	     The rest of the message was (36)
    While in the function (:METHOD TELNET:SUPDUP-GRAPHICS-STATE :GRAPHICS-PUSH)  (:METHOD TELNET:SUPDUP-GRAPHICS-STATE :SUPDUP-GRAPHICS)  (:METHOD TELNET:SUPDUP-STATE-BLOCK :SUPDUP-GRAPHICS)

I believe that I have fixed this problem in the source of the
development system.  The needed change is (in SYS:NETWORK;TELNET):

TELNET:
(DEFMETHOD (SUPDUP-GRAPHICS-STATE :GRAPHICS-PUSH) (IGNORE)
  (LET-GLOBALLY ((GRAPHICS-XPOS GRAPHICS-XPOS)
		 (GRAPHICS-YPOS GRAPHICS-YPOS)
		 (GRAPHICS-RIGHT GRAPHICS-RIGHT)
		 (GRAPHICS-LEFT GRAPHICS-LEFT)
		 (GRAPHICS-TOP GRAPHICS-TOP)
		 (GRAPHICS-BOTTOM GRAPHICS-BOTTOM)
		 (GRAPHICS-XOR-MODE GRAPHICS-XOR-MODE)
		 (GRAPHICS-VIRTUAL-MODE GRAPHICS-VIRTUAL-MODE))
    (DO (CH) (())
      (SETQ CH (SEND SELF ':GRAPHICS-NETI))
      (LET ((COMMAND (IF (BIT-TEST CH #O100)
			 (AREF *DRAW-DISPATCH* (LOGAND CH #O017))
			 (AREF *GRAPHICS-DISPATCH* CH))))
	(WHEN COMMAND (SEND SELF COMMAND CH))))))
12-Apr-85 01:09:31-EST,1215;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 12 Apr 85 01:09-EST
Received: from SCRC-CUYAHOGA by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 212908; Thu 11-Apr-85 09:30:22-EST
Date: Thursday, 11 April 1985, 09:30-EST
From: Robert A. Cassels <Cassels at SCRC-TENEX>
Subject: Huh?
To: Alan at MIT-MC, BUG-LISPM at OZ
In-Reply-To: <850410215607.1.ALAN@ROBOT-5.MIT>
Message-ID: <850411093053.7.CASSELS@CUYAHOGA.SCRC.Symbolics.COM>

    Date: Wednesday, 10 April 1985, 21:56-EST
    From: Alan Bawden <Alan at MIT-MC>

    In Symbolics 3670 Release 6.0, IP-TCP 29.0, AISite 7.11,
    microcode TMC5-IO4-FPA-MIC 319, on Lisp Machine Robot-5:

    I do not understand what this error message is trying to tell me.  What
    would be a valid canonical type for an ITS host?

    >>Error: LISP is an invalid canonical type for MC (a ITS host).
    While in the function (:METHOD FS:PATHNAME :TYPE-FOR-NEW-CANONICAL-TYPE)  (:METHOD FS:PATHNAME :NEW-DEFAULT-PATHNAME)  (:INTERNAL (:INTERNAL (:METHOD FS:ITS-PATHNAME :COMBINED :NEW-DEFAULT-PATHNAME) 0) 0)

:LISP, I presume.  Perhaps the thing that read your typein should have
been a little smarter and given you a more DWIMmish message.
12-Apr-85 01:38:56-EST,1283;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 12 Apr 85 01:38-EST
Received: from SCRC-QUABBIN by MIT-MC via Chaosnet; 12 APR 85  01:37:15 EST
Received: from SCRC-EUPHRATES by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 152719; Thu 11-Apr-85 13:49:14-EST
Date: Thu, 11 Apr 85 13:49 EST
From: David A. Moon <Moon@SCRC-STONY-BROOK.ARPA>
Subject: Unflushable spy turds
To: Gavan Duffy <GAVAN@OZ.MIT>
cc: DCP@SCRC-QUABBIN.ARPA, BUG-LISPM@MIT-MC.ARPA
In-Reply-To: <850411011006.1.GAVAN@MORRISON.MIT>
Message-ID: <850411134944.7.MOON@EUPHRATES.SCRC.Symbolics.COM>

    Date: Thu, 11 Apr 85 01:10 EST
    From: Gavan Duffy <GAVAN@OZ.MIT>

	Date: Wed, 10 Apr 85 12:38 EST
	From: David C. Plummer in disguise <DCP@SCRC-QUABBIN.ARPA>

	    Date: Wed, 10 Apr 85 00:25 EST
	    From: Gavan Duffy <GAVAN@OZ.MIT>

	    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.9,
	    microcode TMC5-MIC 319, FEP 22, on Lisp Machine James Morrison:

	    Spying on a 3670 from a 3600 leaves unsightly turds at the bottom
	    of the 3600 screen.  Refresh doesn't flush them.

	It works for me.  Maybe you have a bogus user program?

    Nope.  Standard SPY function from the CP.

There is no SPY command in the CP.  Presumably you are referring to some
MIT local addition?
12-Apr-85 01:39:35-EST,1334;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 12 Apr 85 01:38-EST
Received: from SCRC-THAMES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 212952; Thu 11-Apr-85 10:04:13-EST
Date: Thursday, 11 April 1985, 10:06-EST
From: Scott McKay <SWM at SCRC-QUABBIN>
Subject: Common-Lisp Syntax
To: sr.ehpyc at MIT-SPEECH, Bug-Zwei at SCRC-QUABBIN
cc: Bug-Lispm at MIT-SPEECH
In-Reply-To: <850410162451.4.CYPHER@MIT-YOGI.MIT>
Message-ID: <850411100643.0.SWM@THAMES.SCRC.Symbolics.COM>

    Date: Wednesday, 10 April 1985, 16:24-EST
    From: Scott Cyphers <sr.ehpyc at MIT-SPEECH>

    In Symbolics 3670 Release 6.0, IP-TCP 29.0, Experimental ZOO 5.4,
    Experimental Spire-Macros 5.1, Experimental Attribute 5.0,
    Experimental Compute 5.2, Experimental Audio 4.0,
    Experimental Speech-Attributes 4.0, Experimental Display 6.0,
    Experimental Speech-Layouts 6.0, Experimental Prtout 4.0,
    Experimental Versatec 5.0, Experimental Spire 16.0, ZOO-SPIRE 1.0,
    microcode TMC5-IO4-FPA-MIC 319, on Lisp Machine Yogi:

    I'm not really sure what the syntax is supposed to do for me, but when
    I set the syntax to be common-lisp, Zmacs indents LOOP the old way.

Yup, MLB picked this up, too.  Push '(CL:LOOP . ZWEI:INDENT-LOOP) onto
ZWEI:*LISP-INDENT-OFFSET-ALIST* in your init file until we fix it.
12-Apr-85 01:40:20-EST,1523;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 12 Apr 85 01:38-EST
Received: from SCRC-QUABBIN by MIT-MC via Chaosnet; 12 APR 85  01:37:32 EST
Received: from SCRC-NEPONSET by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 152767; Thu 11-Apr-85 16:38:02-EST
Date: Thu, 11 Apr 85 16:38 EST
From: David C. Plummer in disguise <DCP@SCRC-QUABBIN.ARPA>
Subject: Unflushable spy turds
To: Chris Lindblad <cjl@OZ.MIT>, DCP@SCRC-QUABBIN.ARPA, GAVAN@OZ.MIT,
    BUG-LISPM@MIT-MC.ARPA
In-Reply-To: <850410231914.1.CJL@LENNON.MIT>
Message-ID: <850411163822.8.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Wed, 10 Apr 85 23:19 EST
    From: Chris Lindblad <cjl@OZ.MIT>

	Date: Wed, 10 Apr 85 12:38 EST
	From: David C. Plummer in disguise <DCP@SCRC-QUABBIN.ARPA>

	    Date: Wed, 10 Apr 85 00:25 EST
	    From: Gavan Duffy <GAVAN@OZ.MIT>

	    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.9,
	    microcode TMC5-MIC 319, FEP 22, on Lisp Machine James Morrison:

	    Spying on a 3670 from a 3600 leaves unsightly turds at the bottom
	    of the 3600 screen.  Refresh doesn't flush them.

	It works for me.  Maybe you have a bogus user program?

    Maybe, but this doesn't clean the whole screen if the 3670 had
    hacks:decorate done to it.  Am I off by one somewhere?

Probably, but since you are using the wrong variables it's hard to tell.
You should use the released spy user end, which I believe is indeed
released.  The microwave appears to be down, so I can't check to make
sure you have it.
12-Apr-85 01:52:35-EST,868;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 12 Apr 85 01:52-EST
Received: from SPA-RUSSIAN by MIT-MC via Chaosnet; 12 APR 85  01:46:31 EST
Date: Thu, 11 Apr 85 11:26 PST
From: Richard Lamson <rsl@RUSSIAN.SPA.Symbolics.COM>
Subject: Unflushable spy turds
To: Gavan Duffy <GAVAN@OZ.MIT>, BUG-LISPM@MIT-MC.ARPA
In-Reply-To: <850410002507.4.GAVAN@MORRISON.MIT>
Message-ID: <850411112655.8.RSL@RUSSIAN.SPA.Symbolics.COM>

    Date: Wed, 10 Apr 85 00:25 EST
    From: Gavan Duffy <GAVAN@OZ.MIT>

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.9,
    microcode TMC5-MIC 319, FEP 22, on Lisp Machine James Morrison:

    Spying on a 3670 from a 3600 leaves unsightly turds at the bottom
    of the 3600 screen.  Refresh doesn't flush them.

Try Function-Refresh.

Whatever spy program you're using is not supplied by Symbolics, by the
way.

12-Apr-85 01:57:14-EST,544;000000000000
Received: from MIT-APIARY-3 by MIT-OZ via Chaosnet; 12 Apr 85 01:57-EST
Date: Friday, 12 April 1985, 01:55-EST
From: Henry Lieberman <Henry at OZ>
Subject: Stepper loses on FLET
To: BUG-LISPM at OZ
Message-ID: <850412015532.1.HENRY@APIARY-3.MIT>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.12,
microcode TMC5-MIC 319, on Lisp Machine Apiary-3:

The stepper seems to lose on evaluating code with FLET.

(STEP '(FLET ((A () 3)
              (B () 2))
             (+ (A) (B))))

It gets stuck trying to evaluate (A).

12-Apr-85 01:59:35-EST,1788;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 12 Apr 85 01:59-EST
Received: from SCRC-EUPHRATES by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 152721; Thu 11-Apr-85 13:55:06-EST
Date: Thursday, 11 April 1985, 13:55-EST
From: David A. Moon <Moon at SCRC-STONY-BROOK>
Subject: Huh?
To: Alan Bawden <Alan at MIT-MC>
cc: BUG-LISPM at OZ
In-Reply-To: <850410215607.1.ALAN@ROBOT-5.MIT>
Message-ID: <850411135538.8.MOON@EUPHRATES.SCRC.Symbolics.COM>

    Date: Wednesday, 10 April 1985, 21:56-EST
    From: Alan Bawden <Alan at MIT-MC>

    In Symbolics 3670 Release 6.0, IP-TCP 29.0, AISite 7.11,
    microcode TMC5-IO4-FPA-MIC 319, on Lisp Machine Robot-5:

    I do not understand what this error message is trying to tell me.  What
    would be a valid canonical type for an ITS host?

    >>Error: LISP is an invalid canonical type for MC (a ITS host).
    While in the function (:METHOD FS:PATHNAME :TYPE-FOR-NEW-CANONICAL-TYPE)  (:METHOD FS:PATHNAME :NEW-DEFAULT-PATHNAME)  (:INTERNAL (:INTERNAL (:METHOD FS:ITS-PATHNAME :COMBINED :NEW-DEFAULT-PATHNAME) 0) 0)

    (:METHOD FS:PATHNAME :TYPE-FOR-NEW-CANONICAL-TYPE):  (P.C. = 65)
       Arg 0 (SELF): #<ITS-PATHNAME "MC: ALAN; FOO >">
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:PATHNAME -- 8. IV's, 1. FL's 105226430>
       Arg 2 (OPERATION): :TYPE-FOR-NEW-CANONICAL-TYPE
       Arg 3 (CANONICAL-TYPE): :CMD
       Local 3 (CANONICAL-TYPE): LISP
       Arg 4 (ORIGINAL-TYPE): NIL
       Arg 5 (ORIGINAL-TYPE-P): NIL

:CMD is not a standard canonical type.  My guess is that the source of the spurious
symbol LISP here is that :CMD was not defined correctly as a canonical type.  Do
you know where it was defined?  FS:DEFINE-CANONICAL-TYPE may need to have its
error checking improved.
12-Apr-85 02:00:00-EST,1814;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 12 Apr 85 01:59-EST
Received: from SCRC-CARDINAL by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 152728; Thu 11-Apr-85 14:12:46-EST
Date: Thursday, 11 April 1985, 14:12-EST
From: William M. York <York at SCRC-QUABBIN>
Subject: ZMAIL can't read a mail file on MC?
To: GAVAN at OZ, York at SCRC-QUABBIN, rsl at SPA-RUSSIAN,
    BUG-LISPM at OZ
In-Reply-To: <850411015305.4.GAVAN@MORRISON.MIT>
Message-ID: <850411141214.1.YORK@CARDINAL.SCRC.Symbolics.COM>

    Date: Thu, 11 Apr 85 01:53 EST
    From: Gavan Duffy <GAVAN@OZ.MIT>

	Date: Wednesday, 10 April 1985, 12:01-EST
	From: William M. York <York at SCRC-QUABBIN>

	Of course, this has nothing to do with the fact that people can't figure
	out how to use Zmail to read in a new mailbox without assistance from
	Bug-Lispm (I had the very same problem once).

    Are you saying that [Get Inbox] shouldn't be used to read in a new mailbox?
    That's how I'm reading this.

Well, I certainly don't claim to be a Zmail expert, but here's my
understanding of the situation.  [Get Inbox] is for reading in new mail
(presumably delivered by some external agent) associated with a
"permanent" mailbox and merging it into the mail in that mailbox.  In
other words, you have a set of mailboxes (such as your "primary" mailbox
and your save-mailboxes) some of which (usually only the primary) have
assocaited with them an inbox where new mail arrives.  Mail does not
stay in an inbox after a [Get Inbox] is performed.

To read in an existing mail file the correct thing is almost always to
use [Select (R)].  If you just want to peruse the mail (e.g. the mailbox
doesn't belong to you), use [Examine File], otherwise use [Read/Create
File].

Bug-lispm, please correct me if I'm wrong.
12-Apr-85 02:00:48-EST,1078;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 12 Apr 85 01:59-EST
Received: from SCRC-NEPONSET by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 152775; Thu 11-Apr-85 17:00:36-EST
Date: Thursday, 11 April 1985, 17:00-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: out of sync sources?
To: HENRY at OZ, David C. Plummer in disguise <DCP at SCRC-QUABBIN>
cc: BUG-LISPM at OZ, David Chapman <Zvona at OZ>
In-Reply-To: <HENRY.12102210525.BABYL@MIT-OZ>
Message-ID: <850411170052.2.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Thu, 11 Apr 1985  01:27 EST
    From: HENRY@MIT-OZ


	I have been told that arrangements can be made for you to get the
	sources you need.  Hopefully the appropriate person will get in touch
	with you on this.

    The lack of sources is a very serious problem. 
The lack of some sources is not a serious problem.  Which sources are
YOU concerned about.  (This is mostly my own curiousity.)
    What are "arrangements .. for you to get the sources you need"???
I don't know; I'm just relaying what I've heard.
12-Apr-85 10:30:10-EST,2041;000000000000
Received: from MIT-MORRISON by MIT-OZ via Chaosnet; 12 Apr 85 10:29-EST
Date: Friday, 12 April 1985, 10:29-EST
From: Gavan Duffy <GAVAN at OZ>
Subject: ZMAIL can't read a mail file on MC?
To: York at SCRC-QUABBIN, GAVAN at OZ, rsl at SPA-RUSSIAN,
    BUG-LISPM at OZ
In-Reply-To: <850411141214.1.YORK@CARDINAL.SCRC.Symbolics.COM>
Message-ID: <850412102923.2.GAVAN@MORRISON.MIT>

    Date: Thursday, 11 April 1985, 14:12-EST
    From: William M. York <York at SCRC-QUABBIN>

	Date: Thu, 11 Apr 85 01:53 EST
	From: Gavan Duffy <GAVAN@OZ.MIT>

	    Date: Wednesday, 10 April 1985, 12:01-EST
	    From: William M. York <York at SCRC-QUABBIN>

	    Of course, this has nothing to do with the fact that people can't figure
	    out how to use Zmail to read in a new mailbox without assistance from
	    Bug-Lispm (I had the very same problem once).

	Are you saying that [Get Inbox] shouldn't be used to read in a new mailbox?
	That's how I'm reading this.

    Well, I certainly don't claim to be a Zmail expert, but here's my
    understanding of the situation.  [Get Inbox] is for reading in new mail
    (presumably delivered by some external agent) associated with a
    "permanent" mailbox and merging it into the mail in that mailbox.  In
    other words, you have a set of mailboxes (such as your "primary" mailbox
    and your save-mailboxes) some of which (usually only the primary) have
    assocaited with them an inbox where new mail arrives.  Mail does not
    stay in an inbox after a [Get Inbox] is performed.

Well, after you click on [Get Inbox], [Read/Create File] is on the menu that
appears.  What is this item for, if not to read in a file that's not already
one of your "permanent" mailboxes?

    To read in an existing mail file the correct thing is almost always to
    use [Select (R)].  If you just want to peruse the mail (e.g. the mailbox
    doesn't belong to you), use [Examine File], otherwise use [Read/Create
    File].

    Bug-lispm, please correct me if I'm wrong.
12-Apr-85 10:34:01-EST,1345;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 12 Apr 85 10:33-EST
Received: from MIT-OZ by MIT-MC via Chaosnet; 12 APR 85  10:34:06 EST
Received: from MIT-MORRISON by MIT-OZ via Chaosnet; 12 Apr 85 10:31-EST
Date: Fri, 12 Apr 85 10:30 EST
From: Gavan Duffy <GAVAN@OZ.MIT>
Subject: Unflushable spy turds
To: Moon@SCRC-STONY-BROOK.ARPA, GAVAN@OZ.MIT
cc: DCP@SCRC-QUABBIN.ARPA, BUG-LISPM@MIT-MC.ARPA
In-Reply-To: <850411134944.7.MOON@EUPHRATES.SCRC.Symbolics.COM>
Message-ID: <850412103058.3.GAVAN@MORRISON.MIT>

    Date: Thursday, 11 April 1985, 13:49-EST
    From: David A. Moon <Moon at SCRC-STONY-BROOK>

	Date: Thu, 11 Apr 85 01:10 EST
	From: Gavan Duffy <GAVAN@OZ.MIT>

	    Date: Wed, 10 Apr 85 12:38 EST
	    From: David C. Plummer in disguise <DCP@SCRC-QUABBIN.ARPA>

		Date: Wed, 10 Apr 85 00:25 EST
		From: Gavan Duffy <GAVAN@OZ.MIT>

		In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.9,
		microcode TMC5-MIC 319, FEP 22, on Lisp Machine James Morrison:

		Spying on a 3670 from a 3600 leaves unsightly turds at the bottom
		of the 3600 screen.  Refresh doesn't flush them.

	    It works for me.  Maybe you have a bogus user program?

	Nope.  Standard SPY function from the CP.

    There is no SPY command in the CP.  Presumably you are referring to some
    MIT local addition?

Apparently.
12-Apr-85 11:23:35-EST,1938;000000000000
Received: from MIT-MORRISON by MIT-OZ via Chaosnet; 12 Apr 85 11:23-EST
Date: Friday, 12 April 1985, 11:21-EST
From: Gavan Duffy <GAVAN at OZ>
Subject: Logical Pathname Names  Lossage
To: joseph at SCRC-QUABBIN, HENRY at OZ, jcma at MIT-MC
cc: BUG-LISPM at OZ
In-Reply-To: <850331125133.3.JOSEPH@HARLEM.SCRC.Symbolics.COM>
Message-ID: <850412112157.5.GAVAN@MORRISON.MIT>
Fonts: CPTFONT, CPTFONTB, TVFONT

    Date: Sunday, 31 March 1985, 12:51-EST
    From: Joseph R Goldstone <joseph at SCRC-QUABBIN>

	Date: Fri, 29 Mar 1985  17:03 EST
	From: HENRY@MIT-OZ

	    Date: Thursday, 28 March 1985, 21:18-EST
	    From: jcma at MIT-MC
	    To:   BUG-LISPM at OZ
	    Re:   Logical Pathname Names  Lossage

	    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.0,
	    microcode TMC5-MIC 319, FEP 22, on Lisp Machine James Morrison:

	    This is trying to tell me I can't have two logical pathnames pointing at the
	    same real pathname.  What kind of lossage is that?

	    >>Error: Attempt to translate RL: U;  to PIG:USRD$:<RELATUS.UTILS>.
		     We had previously gotten this pathname as a translation of RL: UTILS; .
		     Files may be overwritten accidentally if you proceed.

	Yes, I encountered this too, and its bad. It was explained to me
	that it is trying to protect you from writing a file on two different
	logical pathnames with the same physical pathname, but

	- It shouldn't complain until I actually try to write such a file, 
	rather than when I set up something only with the potential of doing so.

    What about the case where two groups come up with the same logical pathname?

This can only happen when they both define some string to be a logical host,
right?  It seems to me to be a COMPLETE LOSE to remove the ability to have two
logical pathnames point to the same real pathname, as available in rel 5.

Lord save me from people who would save me from myself!
12-Apr-85 12:17:30-EST,1336;000000000000
Mail-From: ZVONA created at 12-Apr-85 12:17:21
Date: Fri, 12 Apr 1985  12:17 EST
Message-ID: <ZVONA.12102590889.BABYL@MIT-OZ>
From: ZVONA@MIT-OZ
To:   "David C. Plummer in disguise" <DCP@SCRC-QUABBIN>
Cc:   BUG-LISPM@MIT-OZ, HENRY@MIT-OZ
Subject: which sources do I need?
In-reply-to: Msg of 11 Apr 1985 17:00-EST from David C. Plummer in disguise <DCP at SCRC-QUABBIN>

I'm writing a lisp dialect compiler that uses bits of the zetalisp
compiler and of LT as subroutines.  Not having sources for those is a
real pain.

But I think we ought to have complete sources.  Let's face it, any
random part of the system is likely to break and screw you at any
time, and having the sources so that you can at least recover your
state and maybe fix the bug for next time (since Symbolics bug-fix
turnaround time sucks) is real important.

For example, a few days ago, my machine hung because someone had
grabbed some lock used by something that looked around the insides of
fefs.  I couldn't get my hands on the lock to force it because the
debugger read-eval-print loop needed it.  The editor was more-or-less
working, so I meta-dotted the function that wanted the lock, and guess
what, it was in the compiler, so no sources.  Luckily in this case
warm-booting fixed it, but next time I'd rather have sources, thanks.
12-Apr-85 12:43:55-EST,2536;000000000000
Received: from MIT-ROBOT-5 by MIT-OZ via Chaosnet; 12 Apr 85 12:43-EST
Date: Friday, 12 April 1985, 12:41-EST
From: Ken Haase <KWH at OZ>
Subject: Can't compile closures.
To: BUG-LISPM at OZ
Message-ID: <850412124156.1.KWH@ROBOT-5.MIT>

In Symbolics 3670 Release 6.0, IP-TCP 29.0, AISite 8.0,
Experimental Meta Representation Langauge 2.14,
microcode TMC5-IO4-FPA-MIC 319, on Lisp Machine Robot-5:

(setq foo #'(lambda (x) (+ x 3)))
(compile 'foo foo)

errors out in the following way.  It seems that it would be reasonable to
be able to compile interpreter closures into compiler closures.

>>Trap: The argument given to the CAR instruction, #<LEXICAL-CLOSURE (LAMBDA ** **) 23211767>, was not a locative, a list, or NIL.
While in the function (:INTERNAL COMPILER:COMPILE-TO-CORE 1 (:DUMP-LAMBDA-EXPRESSION))  COMPILER:COMPILE-TO-CORE  COMPILE

(:INTERNAL COMPILER:COMPILE-TO-CORE 1 (:DUMP-LAMBDA-EXPRESSION)):  (P.C. = 3)
   Arg 0 (**DEFSELECT-OP**): :DUMP-LAMBDA-EXPRESSION
   Arg 1 (FSPEC): FOO
   Arg 2 (LAMBDA-EXP): #<LEXICAL-CLOSURE (LAMBDA ** **) 23211767>

COMPILER:COMPILE-TO-CORE:  (P.C. = 22)
   Arg 0 (OPERATION): :DUMP-LAMBDA-EXPRESSION
   Rest arg (SELECT-METHOD-ARGS): (FOO #<LEXICAL-CLOSURE ** 23211767>)

COMPILE:  (P.C. = 121)
   Arg 0 (FUNCTION-SPEC): FOO
   Arg 1 (LAMBDA-EXP): #<LEXICAL-CLOSURE (LAMBDA ** **) 23211767>

SI:*EVAL:  (P.C. = 403)
   Arg 0 (FORM): (COMPILE 'FOO FOO)
   Local 0 (FORM): NIL
   Arg 1 (ENV): NIL
   Arg 2 (HOOK): NIL

TOOLS:EVAL-INSTANCE:  (P.C. = 27)  (from SYS: LMLIB; TOOLS)
   Arg 0 (FORM): (COMPILE 'FOO FOO)
   --Defaulted args:--
   Arg 1 (ENVIRONMENT): NIL
   Arg 2 (EVALHOOK-initialization): NIL

(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0):  (P.C. = 152)
   Arg 0 (.LEXICAL-ENVIRONMENT-POINTER.): #<DTP-LOCATIVE 500047>

TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
   Arg 0 (NEW-MODE): :BLAST
   Arg 1 (STREAM): #:TERMINAL-IO-SYN-STREAM
   Arg 2 (CONTINUATION): #<LEXICAL-CLOSURE (:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0) 500054>

SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
   Arg 0 (NAME): "Lisp Top Level"
   Arg 1 (ABORT-FUNCTION): NIL
   Arg 2 (READ-FUNCTION): NIL
   Arg 3 (EVAL-FUNCTION): NIL
   Arg 4 (PRINT-FUNCTION): NIL

SI:LISP-COMMAND-LOOP:  (P.C. = 67)
   Arg 0: #<LISP-LISTENER Lisp Listener 1 43200216 exposed>
   Rest arg: (:NAME "Lisp Top Level")

SI:LISP-TOP-LEVEL1:  (P.C. = 5)
   Arg 0 (STREAM): #<LISP-LISTENER Lisp Listener 1 43200216 exposed>

SI:LISP-TOP-LEVEL:  (P.C. = 7)
12-Apr-85 12:57:33-EST,1408;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 12 Apr 85 12:57-EST
Date: 12 Apr 1985  12:57 EST (Fri)
Message-ID: <SR.EHPYC.12102598210.BABYL@MIT-SPEECH>
From: Scott Cyphers <SR.EHPYC@MIT-SPEECH>
To:   ZVONA@MIT-OZ
Cc:   BUG-LISPM@MIT-OZ, "David C. Plummer in disguise" <DCP@SCRC-QUABBIN>, HENRY@MIT-OZ
Subject: which sources do I need?
In-reply-to: Msg of 12 Apr 1985  12:17-EST from ZVONA at MIT-OZ

I can understand reasons for not wanting to release the sources, but I
agree with Dave -- when you run into something that's broken, you
often can't wait for the next release to come around and just do
without until then, since you find out the thing is broken when you
need to use it.

The part I least understand is that most low level documentation is in
the variable and function names, which is preserved across a
compilation.  This lisp code is written in a form not too much
different from the compiled code, which means it isn't that difficult
to tell what the code is doing without the sources, so you're not
really protecting yourself, which I assume is the reason for not
releasing the sources.  The problem comes when you try to change
something, because you then have to recreate the Lisp code for the
compiler, or else patch the compiled code.  It seems like all you are
protecting is the lisp code, which is already proprietized,
copywritten and trade secreted.
12-Apr-85 14:57:20-EST,696;000000000000
Mail-From: CJL created at 12-Apr-85 14:56:50
Date: Fri, 12 Apr 1985  14:56 EST
Message-ID: <CJL.12102619920.BABYL@MIT-OZ>
From: Chris Lindblad <CJL@MIT-OZ>
To:   Gavan Duffy <GAVAN@MIT-OZ>
Cc:   BUG-LISPM@MIT-OZ, DCP@SCRC-QUABBIN, Moon@SCRC-STONY-BROOK
Subject: Unflushable spy turds

    Date: Wed, 10 Apr 85 00:25 EST
    From: Gavan Duffy <GAVAN@OZ.MIT>

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.9,
    microcode TMC5-MIC 319, FEP 22, on Lisp Machine James Morrison:

    Spying on a 3670 from a 3600 leaves unsightly turds at the bottom
    of the 3600 screen.  Refresh doesn't flush them.

Fixed in AISite 8.0. Close paren in wrong place in unwind-protect.
12-Apr-85 16:27:52-EST,363;000000000000
Mail-From: JRD created at 12-Apr-85 16:27:33
Date: Fri 12 Apr 85 16:27-EST
From: James R. Davis <JRD@MIT-OZ>
Subject: STRING-APPEND alters its arg
To: bug-lispm@MIT-OZ
CC: tom@MIT-OZ

(setq foo '(a b c))
(apply #'string-append foo)
==> "abc"
foo
==>("a" "b" "c")

have a look at the code.  It calls RPLACA when given a symbol.

Is this a feature?
12-Apr-85 17:38:32-EST,2860;000000000000
Received: from MIT-APIARY-3 by MIT-OZ via Chaosnet; 12 Apr 85 17:38-EST
Date: Friday, 12 April 1985, 17:37-EST
From: Henry Lieberman <Henry at OZ>
Subject: which sources do I need?
To: ZVONA at OZ
cc: David C. Plummer in disguise <DCP at SCRC-QUABBIN>, Bug-Lispm at OZ,
    Hewitt at OZ, PHW at OZ
In-Reply-To: <ZVONA.12102590889.BABYL@MIT-OZ>
Message-ID: <850412173717.1.HENRY@APIARY-3.MIT>


I agree with Zvona completely. We ought to have complete sources.
The sources should be "complete" in the sense that:

 - We have the sources for any functionality of the machine that a 
user program might want to use in whole or in part. For example, user programs
may want to call pieces of the compiler, or maybe an application-specific
interface to the document examiner. Not having these sources makes it impossible
to do this. This severly limits the usefulness of the machine.

 - We need sources for debugging purposes. This seems so obvious that I shouldn't 
need to defend it. The system is not sufficiently well-debugged that we don't 
need to look at the sources, at least occasionally. The sources are necessary to 
tell whether system code or user code is at fault in a given case. You'll screw
yourselves in  that the quality of bug reports you get from your customers will
go down drastically if users can't peruse sources, and the user perceived reliability
of the machine will suffer. We can't predict in advance exactly which sources
we're going to need, either, since we don't know what will break. Your user
community is always at the cutting edge of applications. Not 
having sources will force far more conservative use of the machine.

I should say that we may be able to get along without sources to very low level
components of the system, which we assume well-debugged and do not impact user programs.
I can live without seeing the sources to the garbage collector and microcode. 
[Though the occasion may arise for people doing critical optimization.]
But when secrecy reaches user-visible functionality it is very damaging.
We are more concerned at the moment about the trend towards concealing sources
than the lack of particular source files.
It is also unacceptable to have to go through a bureaucratic approval procedure
with Symbolics whenever source code access is necessary. 

Finally, you should keep in mind that the major attraction of a "Lisp
machine" for serious advanced applications hacking is that it is "Lisp all the
way down", meaning that the system code is accessible just as user code is.
Many applications hackers "program by example", in that they use system source
code to learn how to make use of the facilities in the machine.
Without the sources, the fact that the system is written in Lisp becomes
irrelevant, and the machine ceases to be a true Lisp machine.

12-Apr-85 18:25:54-EST,349;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 12 Apr 85 18:25-EST
Date: 12 Apr 1985  18:25 EST (Fri)
Message-ID: <SR.EHPYC.12102657984.BABYL@MIT-SPEECH>
From: Scott Cyphers <SR.EHPYC@MIT-SPEECH>
Subject: disabling services in distribution worlds
To:   bug-lispm@oz

Release 6.0 Distribution worlds don't disable services when they boot.
12-Apr-85 18:29:10-EST,3870;000000000000
Received: from MIT-MORRISON by MIT-OZ via Chaosnet; 12 Apr 85 18:27-EST
Date: Friday, 12 April 1985, 18:27-EST
From: Gavan Duffy <GAVAN at OZ>
Subject: Infinite loop while checking non-circular flavor hierarchy
To: BUG-LISPM at OZ
Message-ID: <850412182720.2.GAVAN@MORRISON.MIT>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 8.0,
microcode TMC5-MIC 319, FEP 22, on Lisp Machine Jim Morrison:

The UNDOCUMENTED function, SI:FLAVOR-INVALIDATE-INIT-INFO, seems to lose.
Either that, or I do, although I don't think so.  There's no apparent
circularities in the flavors being defined.  They are in
PIG:[RELATUS.UTILS]ERROR.LSP.

I'm just going to redefine SI:FLAVOR-INVALIDATE-INIT-INFO to return nil.  How
big a loss will that be?

>>Error: The control stack overflowed.
While in the function LOCATIVEP  REMPROP  SI:FLAVOR-INVALIDATE-INIT-INFO

LOCATIVEP:
   Arg 0 (X): #<DTP-LOCATIVE 76361313>
   Local 0 (X): NIL

REMPROP:  (P.C. = 11)
   Arg 0 (SYM): #<DTP-LOCATIVE 76361313>
   Arg 1 (INDICATOR): SI:INIT-INFO

SI:FLAVOR-INVALIDATE-INIT-INFO:  (P.C. = 6)  (from B:>sys>r6>sys2>flavor)
   Arg 0 (FL): #<FLAVOR DICTIONARY-PATCHING-FERROR 76361270>

SI:FLAVOR-INVALIDATE-INIT-INFO:  (P.C. = 20)  (from B:>sys>r6>sys2>flavor)
   Arg 0 (FL): #<FLAVOR DICTIONARY-PATCHING-ERROR 76361242>

SI:FLAVOR-INVALIDATE-INIT-INFO:  (P.C. = 20)  (from B:>sys>r6>sys2>flavor)
   Arg 0 (FL): #<FLAVOR RELATUS-ERROR 76360706>

SI:FLAVOR-INVALIDATE-INIT-INFO:  (P.C. = 20)  (from B:>sys>r6>sys2>flavor)
   Arg 0 (FL): #<FLAVOR RELATUS-BUG-REPORTING-MIXIN 76360660>

SI:FLAVOR-INVALIDATE-INIT-INFO:  (P.C. = 20)  (from B:>sys>r6>sys2>flavor)
   Arg 0 (FL): #<FLAVOR RELATUS-ERROR 76360706>

SI:FLAVOR-INVALIDATE-INIT-INFO:  (P.C. = 20)  (from B:>sys>r6>sys2>flavor)
   Arg 0 (FL): #<FLAVOR RELATUS-BUG-REPORTING-MIXIN 76360660>

Rest of stack:
SI:FLAVOR-INVALIDATE-INIT-INFO:  (P.C. = 20)  (from B:>sys>r6>sys2>flavor)
SI:FLAVOR-INVALIDATE-INIT-INFO:  (P.C. = 20)  (from B:>sys>r6>sys2>flavor)

. . .  I spared you about 3,000 of these.

SI:FLAVOR-INVALIDATE-INIT-INFO:  (P.C. = 20)  (from B:>sys>r6>sys2>flavor)
SI:FLAVOR-INVALIDATE-INIT-INFO:  (P.C. = 20)  (from B:>sys>r6>sys2>flavor)
SI:FLAVOR-INVALIDATE-INIT-INFO:  (P.C. = 20)  (from B:>sys>r6>sys2>flavor)
SI:FLAVOR-INVALIDATE-INIT-INFO:  (P.C. = 20)  (from B:>sys>r6>sys2>flavor)
SI:FLAVOR-INVALIDATE-INIT-INFO:  (P.C. = 20)  (from B:>sys>r6>sys2>flavor)
SI:FLAVOR-INVALIDATE-INIT-INFO:  (P.C. = 20)  (from B:>sys>r6>sys2>flavor)
SI:FLAVOR-INVALIDATE-INIT-INFO:  (P.C. = 20)  (from B:>sys>r6>sys2>flavor)
SI:FLAVOR-INVALIDATE-INIT-INFO:  (P.C. = 20)  (from B:>sys>r6>sys2>flavor)
SI:FLAVOR-INVALIDATE-INIT-INFO:  (P.C. = 20)  (from B:>sys>r6>sys2>flavor)
SI:FLAVOR-INVALIDATE-INIT-INFO:  (P.C. = 20)  (from B:>sys>r6>sys2>flavor)
SI:FLAVOR-INVALIDATE-INIT-INFO:  (P.C. = 20)  (from B:>sys>r6>sys2>flavor)
SI:FLAVOR-INVALIDATE-INIT-INFO:  (P.C. = 20)  (from B:>sys>r6>sys2>flavor)
SI:DEFFLAVOR1:  (P.C. = 2065)
SI:*EVAL:  (P.C. = 403)
(:INTERNAL COMPILER:COMPILE-PROCESS-DEFAULT 0 (:EVAL-FORM)):  (P.C. = 3)
COMPILER:COMPILE-PROCESS-DEFAULT:  (P.C. = 12)
COMPILER:COMPILE-TO-FILE:  (P.C. = 77)
COMPILER:COMPILE-FORM-FUNCTION:  (P.C. = 22)
COMPILER:COMPILE-FROM-STREAM-1:  (P.C. = 413)
COMPILER:COMPILE-FROM-STREAM-1:  (P.C. = 113)
COMPILER:COMPILE-FROM-STREAM-1:  (P.C. = 165)
COMPILER:PROCESS-FORMS-FROM-STREAM:  (P.C. = 117)
COMPILER:COMPILE-FROM-STREAM:  (P.C. = 237)
COMPILER:COMPILE-FILE:  (P.C. = 303)
ZWEI:COM-COMPILE-FILE:  (P.C. = 57)
ZWEI:COM-EXTENDED-COMMAND:  (P.C. = 27)
ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 233)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 60)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 51)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
12-Apr-85 19:12:03-EST,935;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 12 Apr 85 19:11-EST
Received: from SCRC-PEACE by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 214338; Fri 12-Apr-85 19:09:35-EST
Date: Fri, 12 Apr 85 19:11 EST
From: Charles Hornig <Hornig@STONY-BROOK.SCRC.Symbolics.COM>
Subject: STRING-APPEND alters its arg
To: James R. Davis <JRD@OZ.MIT>, bug-lispm@OZ.MIT
cc: tom@OZ.MIT
In-Reply-To: The message of 12 Apr 85 16:27-EST from James R. Davis <JRD@OZ.MIT>
Message-ID: <850412191105.7.HORNIG@PEACE.SCRC.Symbolics.COM>

    Date: Fri 12 Apr 85 16:27-EST
    From: James R. Davis <JRD@MIT-OZ>

    (setq foo '(a b c))
    (apply #'string-append foo)
    ==> "abc"
    foo
    ==>("a" "b" "c")

    have a look at the code.  It calls RPLACA when given a symbol.

    Is this a feature?

No, it's a bug.  Fixed in the development system.  The fix is to
COPYLIST the &REST argument before you go an RPLACA it.
12-Apr-85 19:49:55-EST,1567;000000000000
Received: from SCRC-RIVERSIDE by MIT-OZ via Chaosnet; 12 Apr 85 19:49-EST
Received: from SCRC-CONCORD by SCRC-RIVERSIDE via CHAOS with CHAOS-MAIL id 34684; Fri 12-Apr-85 11:31:54-EST
Date: Fri, 12 Apr 85 11:36 EST
From: Bernard S. Greenberg <BSG at SCRC-STONY-BROOK>
Subject: The 6343 login problem -- a fix
To: sr.ehpyc at MIT-SPEECH, bug-lispm at OZ
In-Reply-To: <"850411140651.1.File-Server@GOLDILOCKS"@GOLDILOCKS.MIT>
Message-ID: <850412113641.4.BSG@CONCORD.SCRC.Symbolics.COM>

    Date: Thursday, 11 April 1985, 14:06-EST
    From: sr.ehpyc at MIT-SPEECH

    GOLDY:>s>zoo>zoo-5>zoo-5-6.lisp
    Function FS:QFILE-SERVER-LOGIN:  Parse numeric logins properly

    This on Goldy fixes the problem.  Evidently to reduce consing, numbers
    are parsed as numbers instead of strings.  This function was doing a
    string of 6343, which didn't work.  This doesn't do the right thing for
    bases, but I don't know what the right thing should be anyways, and this
    fixes the problem for us.

    (defun qfile-server-login (rest)
      (let ((uname
	      (format nil "~a"
		      (or (car rest)
			  (server-error 'server-protocol-violation
					"Null or missing user name in LOGIN request.")))))
Maybe you should use ~D; you don't want octal/decimal randomness...
	(format *stream* "~A  ~A ~A ~%~A~%" *transaction-id* "LOGIN" uname
		(send
		  (fs:make-pathname ':host si:local-host ':device ':unspecific
				    ':directory
				    (list uname)
				    ':name nil ':type nil ':version nil)
		  ':string-for-host))
	uname))
12-Apr-85 20:47:59-EST,816;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 12 Apr 85 20:47-EST
Received: from YOGI by GOLDILOCKS via CHAOS with CHAOS-MAIL id 401; Fri 12-Apr-85 20:45:52-EST
Date: Friday, 12 April 1985, 20:45-EST
From: Scott Cyphers <sr.ehpyc at MIT-SPEECH>
Subject: Copying 36 bit files
To: BUG-LISPM at MIT-SPEECH
Message-ID: <850412204545.1.CYPHER@YOGI.MIT>

In Symbolics 3670 Release 6.0, IP-TCP 29.0, Experimental ZOO 5.6,
Spire-Macros 5.1, Attribute 5.0, Compute 5.2, Audio 4.0,
Speech-Attributes 4.0, Display 6.2, Speech-Layouts 6.0, Prtout 4.0,
Versatec 5.0, Spire 16.0, ZOO-SPIRE 1.0, microcode TMC5-IO4-FPA-MIC 319, on Lisp Machine Yogi:

Using M-X copy file on 36 bit files like HOSTS3.BIN doesn't work because
it copies the file with 16 bit bytes.  There should be a way to specify
the byte size.
12-Apr-85 21:03:00-EST,1676;000000000000
Received: from MIT-MORRISON by MIT-OZ via Chaosnet; 12 Apr 85 21:02-EST
Date: Friday, 12 April 1985, 21:02-EST
From: Gavan Duffy <GAVAN at OZ>
Subject: Infinite loop while checking non-circular flavor hierarchy
To: GAVAN at OZ, BUG-LISPM at OZ
In-Reply-To: <850412182720.2.GAVAN@MORRISON.MIT>
Message-ID: <850412210228.5.GAVAN@MORRISON.MIT>

    Date: Friday, 12 April 1985, 18:27-EST
    From: Gavan Duffy <GAVAN at OZ>

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 8.0,
    microcode TMC5-MIC 319, FEP 22, on Lisp Machine Jim Morrison:

    The UNDOCUMENTED function, SI:FLAVOR-INVALIDATE-INIT-INFO, seems to lose.
    Either that, or I do, although I don't think so.  There's no apparent
    circularities in the flavors being defined.  They are in
    PIG:[RELATUS.UTILS]ERROR.LSP.

    I'm just going to redefine SI:FLAVOR-INVALIDATE-INIT-INFO to return nil.  How
    big a loss will that be?

Excuse me.  Is it my imagination or are the assumptions of the flavor system
in rel 6 grossly incompatible with those of the flavor system in rel 5?
Flavor code (definitions) that works fine in rel 5 bombs miserably in rel 6.

If so, where's the document that details the assumptions of the flavor system
in rel 6?  The pirate release notes don't seem have much of anything helpful
to say.  

I will admit that the code in PIG:[RELATUS.UTILS]ERROR.LSP isn't mine, so its
successive bombs on compile may have been due to my broken model of what's
going on there.  But, the code in PIG:[RELATUS.PARSER]OBJECTS.LSP is mine.
Why, when I try to compile it, does it run forever, apparently in a
without-interrupts?  I had to warm boot!

12-Apr-85 21:09:01-EST,947;000000000000
Received: from MIT-MORRISON by MIT-OZ via Chaosnet; 12 Apr 85 21:08-EST
Date: Friday, 12 April 1985, 21:08-EST
From: Gavan Duffy <GAVAN at OZ>
Subject: STRING-APPEND alters its arg
To: Hornig at SCRC-STONY-BROOK, JRD at OZ, bug-lispm at OZ
cc: tom at OZ
In-Reply-To: <850412191105.7.HORNIG@PEACE.SCRC.Symbolics.COM>
Message-ID: <850412210832.6.GAVAN@MORRISON.MIT>

    Date: Fri, 12 Apr 85 19:11 EST
    From: Charles Hornig <Hornig@STONY-BROOK.SCRC.Symbolics.COM>

	Date: Fri 12 Apr 85 16:27-EST
	From: James R. Davis <JRD@MIT-OZ>

	(setq foo '(a b c))
	(apply #'string-append foo)
	==> "abc"
	foo
	==>("a" "b" "c")

	have a look at the code.  It calls RPLACA when given a symbol.

	Is this a feature?

    No, it's a bug.  Fixed in the development system.  The fix is to
    COPYLIST the &REST argument before you go an RPLACA it.

This bug should certainly considered gross enough to propagate a patch for it.  No?
12-Apr-85 22:50:54-EST,2882;000000000000
Received: from MIT-ROBOT-5 by MIT-OZ via Chaosnet; 12 Apr 85 22:50-EST
Date: Friday, 12 April 1985, 22:50-EST
From: A Lisp Machine <LISPM at MIT-MC>
Subject: Disk error
To: BUG-LISPM at OZ
Message-ID: <850412225044.1.LISP-MACHINE@ROBOT-5.MIT>

In Symbolics 3670 Release 6.0, IP-TCP 29.0, AISite 8.0,
microcode TMC5-IO4-FPA-MIC 319, on Lisp Machine Robot-5:

Checksumming a band just transferred from Robot 3.  This can be repeated
reliably, on the same sector.

>>Error: %DISK-ERROR-ECC during a %DCW-READ32 on unit 0., cyl 662., surf 4., sec 17.,
           Fatal ECC error,
           7. pending transfers associated with this disk event aborted.
While in the function SI:SIGNAL-DISK-ERROR  SI:FB-CHECK-FOR-DISK-ERROR  SI:FBAND-CHECKSUM-FUNCTION

SI:SIGNAL-DISK-ERROR:  (P.C. = 41)
   Arg 0 (DISK-EVENT): #<ART-2B-32 44562023>

SI:FB-CHECK-FOR-DISK-ERROR:  (P.C. = 10)
   Arg 0 (FB): #<FB-DATA-BLOCK 30573754>

SI:FBAND-CHECKSUM-FUNCTION:  (P.C. = 270)
   Arg 0 (STREAM): #<CHARACTER-STREAM 30573253>
   Arg 1 (FILE): #<BLOCK-DISK-STREAM "FEP0:>ns-19-74.load" 30573406>
   Arg 2 (SUBSET-START): 0
   Local 2 (SUBSET-START): NIL
   Arg 3 (SUBSET-N-BLOCKS): 28553
   Arg 4 (FUNCTION): #<DTP-COMPILED-FUNCTION SI:FBC-COMPARE-CHECKSUM-WITH-NETWORK 22041127>

SI:FBAND-CHECKSUM-USER:  (P.C. = 12)
   Arg 0 (STREAM): #<CHARACTER-STREAM 30573253>
   Arg 1 (FILE): #<BLOCK-DISK-STREAM "FEP0:>ns-19-74.load" 30573406>
   Arg 2 (SUBSET-START): 0
   Arg 3 (SUBSET-N-BLOCKS): 28553

SI:CHECKSUM-BAND-INTERNAL:  (P.C. = 16)
   Arg 0 (STREAM): #<CHARACTER-STREAM 30573253>
   Arg 1 (LOCAL-FILE): #<BLOCK-DISK-STREAM "FEP0:>ns-19-74.load" 30573406>
   Arg 2 (SUBSET-START): 0
   Arg 3 (SUBSET-N-BLOCKS): 28553

SI:CHECKSUM-OR-COMPARE-BAND-SETUP:  (P.C. = 170)
   Arg 0 (MODE): :CHECKSUM
   Arg 1 (STREAM): #<CHARACTER-STREAM 30573253>
   Arg 2 (SOURCE-HOST): "rb3"
   Arg 3 (SOURCE-BAND): "ns-19-74"
   Local 3 (SOURCE-BAND): "FEP:>ns-19-74.load.NEWEST"
   Arg 4 (TARGET-BAND): NIL
   Local 4 (TARGET-BAND): #<FEP-PATHNAME "FEP0:>ns-19-74.load.1">
   Arg 5 (SUBSET-START): NIL
   Local 5 (SUBSET-START): 0
   Arg 6 (SUBSET-N-BLOCKS): NIL
   Local 6 (SUBSET-N-BLOCKS): 28553

SI:CHECKSUM-BAND:  (P.C. = 42)
   Arg 0 (SOURCE-HOST): "rb3"
   Arg 1 (SOURCE-BAND): "ns-19-74"
   --Defaulted args:--
   Arg 2 (TARGET-BAND): NIL
   Arg 3 (SUBSET-START): NIL
   Arg 4 (SUBSET-N-BLOCKS): NIL

SI:*EVAL:  (P.C. = 403)
   Arg 0 (FORM): (SI:CHECKSUM-BAND "rb3" "ns-19-74")
   Local 0 (FORM): NIL
   --Defaulted args:--
   Arg 1 (ENV): NIL
   Arg 2 (HOOK): NIL

Rest of stack:
(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0):  (P.C. = 152)
TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
SI:LISP-COMMAND-LOOP:  (P.C. = 67)
SI:LISP-TOP-LEVEL1:  (P.C. = 5)
SI:LISP-TOP-LEVEL:  (P.C. = 7)
12-Apr-85 23:07:13-EST,418;000000000000
Received: from MIT-ROBOT-5 by MIT-OZ via Chaosnet; 12 Apr 85 23:07-EST
Date: Friday, 12 April 1985, 23:06-EST
From: A Lisp Machine <LISPM at MIT-MC>
Subject: Disk error.
To: BUG-LISPM at OZ
Message-ID: <850412230656.2.LISP-MACHINE@ROBOT-5.MIT>

In Symbolics 3670 Release 6.0, IP-TCP 29.0, AISite 8.0,
microcode TMC5-IO4-FPA-MIC 319, on Lisp Machine Robot-5:

Retransferring the band seems to have fixed it.
13-Apr-85 00:14:01-EST,1100;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 13 Apr 85 00:13-EST
Received: from SCRC-PEACE by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 214383; Fri 12-Apr-85 21:31:28-EST
Date: Fri, 12 Apr 85 21:33 EST
From: Charles Hornig <Hornig@STONY-BROOK.SCRC.Symbolics.COM>
Subject: Copying 36 bit files
To: Scott Cyphers <sr.ehpyc@SPEECH.MIT>, BUG-LISPM@SPEECH.MIT
In-Reply-To: <850412204545.1.CYPHER@YOGI.MIT>
Message-ID: <850412213302.8.HORNIG@PEACE.SCRC.Symbolics.COM>

    Date: Friday, 12 April 1985, 20:45-EST
    From: Scott Cyphers <sr.ehpyc at MIT-SPEECH>

    In Symbolics 3670 Release 6.0, IP-TCP 29.0, Experimental ZOO 5.6,
    Spire-Macros 5.1, Attribute 5.0, Compute 5.2, Audio 4.0,
    Speech-Attributes 4.0, Display 6.2, Speech-Layouts 6.0, Prtout 4.0,
    Versatec 5.0, Spire 16.0, ZOO-SPIRE 1.0, microcode TMC5-IO4-FPA-MIC 319, on Lisp Machine Yogi:

    Using M-X copy file on 36 bit files like HOSTS3.BIN doesn't work because
    it copies the file with 16 bit bytes.  There should be a way to specify
    the byte size.

Use the Copy File command to the CP.
13-Apr-85 00:29:59-EST,2986;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 13 Apr 85 00:29-EST
Received: from SCRC-CROW by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 214423; Sat 13-Apr-85 00:24:27-EST
Date: Saturday, 13 April 1985, 00:25-EST
From: Robert W. Kerns <RWK at SCRC-YUKON>
Subject: Logical Pathname Names  Lossage
To: Gavan Duffy <GAVAN at OZ>
cc: joseph at SCRC-QUABBIN, HENRY at OZ, jcma at MIT-MC, BUG-LISPM at OZ
In-Reply-To: <850412112157.5.GAVAN@MORRISON.MIT>
Message-ID: <850413002505.1.RWK@CROW.SCRC.Symbolics.COM>
Fonts: CPTFONT, CPTFONTB, TVFONT

    Date: Friday, 12 April 1985, 11:21-EST
    From: Gavan Duffy <GAVAN at OZ>

	Date: Sunday, 31 March 1985, 12:51-EST
	From: Joseph R Goldstone <joseph at SCRC-QUABBIN>

	    Date: Fri, 29 Mar 1985  17:03 EST
	    From: HENRY@MIT-OZ

		Date: Thursday, 28 March 1985, 21:18-EST
		From: jcma at MIT-MC
		This is trying to tell me I can't have two logical pathnames pointing at the
		same real pathname.  What kind of lossage is that?

		>>Error: Attempt to translate RL: U;  to PIG:USRD$:<RELATUS.UTILS>.
			 We had previously gotten this pathname as a translation of RL: UTILS; .
			 Files may be overwritten accidentally if you proceed.

	    Yes, I encountered this too, and its bad. It was explained to me
	    that it is trying to protect you from writing a file on two different
	    logical pathnames with the same physical pathname, but

	    - It shouldn't complain until I actually try to write such a file, 
	    rather than when I set up something only with the potential of doing so.

	What about the case where two groups come up with the same logical pathname?

    This can only happen when they both define some string to be a logical host,
    right?  
(I have to confess I don't understand the point of Joseph's reply.  The reason
it complains when it does is that that is the LAST POSSIBLE INSTANT for detecting
the error).

	    It seems to me to be a COMPLETE LOSE to remove the ability to have two
    logical pathnames point to the same real pathname, as available in rel 5.

This "ability" was illusory in the first place.  There have been error
checks for this since at least Rel 5, and I think even Rel 4.1, but for
(bogus) performance reasons they were only turned on during certain
operations.  There are a host of things which will not work right
if you have two logical pathnames going to the same physical one,
and none of them are new.

Just because you didn't get an error message before does not mean
this ever worked.

The error message you get isn't kidding, either.

    Lord save me from people who would save me from myself!

How about saving you from the system screwing you behind your
back with no trace of what it did to you?

Why don't you say what you were really trying to accomplish
by having two different logical pathnames refering to the same
file?  Why didn't you name them both the same thing in the
first place?
13-Apr-85 04:27:43-EST,2061;000000000000
Mail-From: ROBOT.GML created at 13-Apr-85 04:27:37
Date: Sat, 13 Apr 1985  04:27 EST
Message-ID: <ROBOT.GML.12102767520.BABYL@MIT-OZ>
From: ROBOT.GML@MIT-OZ
To:   bug-lispm@MIT-OZ
Subject: [DCP: see the compiler barf!]

    Date: Thu, 11 Apr 1985  15:45 EST
    From: ROBOT.GML@MIT-OZ

	well, the compiler really doesn't like it when this happens, seems like
	it should be able to handle this case and not enter the error handler.

	>>Error: Unknown slot to constructor or alterant macro: ROTATED-OBJECT-BLOCKS in (ALTER-ROTATION (FIRST FREE-SPACE) ROTATION-FREE-BLOCK-TREE (DELETE-BLOCKLIST-FROM-FREE-BLOCK-TREE (ROTATION-FREE-BLOCK-TREE (FIRST FREE-SPACE)) GROWN-BLOCKS) ROTATED-OBJECT-BLOCKS (DELETE-BLOCKLIST-FROM-FREE-SPACE (REST FREE-SPACE) (GROWN-BLOCKS)))

    Well, when this happened I was compiling a file with something of the
    form:

    (alter-frob a-frob
		frob-slot1 value1
		frob-slot2 value2
		frob-not-a-slot value)

    where frob was previously defined by:

    (defstruct frob (...)
	    frob-slot1
	    frob-slot2
	    frob-slot3)

    so when the compiler saw frob-not-a-slot it blew up and entered the
    error handler.  A more graceful way to handle this would be for the
    compiler to print an appropriate error message and continue compiling.

 That is not always the best thing.  It also isn't quite as easy as you
 state, since there are many, MANY different ways the system can error
 behind the compiler's back.  We do have some background plans to try to
 figure out how to add a "plod along" flag which can take on various
 values for various severities.

I know it's not easy, having taken 6.035 (building a compiler in 12
easy weeks).  At least it could punt that particular definition and go
on to the next one.  And besides, this doesn't seem to be the system
erring behind the compilers back, it seems like a compiler error but
not a very graceful one.  Oh well, if it's there and someone may do
something about it eventually, no use yelling about water over the
damn.
13-Apr-85 13:06:56-EST,642;000000000000
Received: from 13063 by MIT-OZ via Chaosnet; 13 Apr 85 13:06-EST
Date: Saturday, 13 April 1985, 13:06-EST
From: David Chapman <Zvona at OZ>
Subject: interpreter does but compiler doesn't complain about bogus &rest arg
To: BUG-LISPM at OZ
Message-ID: <850413130645.1.ZVONA@DUANE.MIT>

In Symbolics 3670 Release 6.0, IP-TCP 29.0, AISite 8.0,
microcode TMC5-IO4-MIC 319, FEP 22, on Lisp Machine Duane Allman:

(defun foo (&key bar &rest stuff)
  (list bar stuff))

The interpreter barfs on this; the compiler doesn't, and generates code
s.t. (foo :bar 'grubble) returns a circular list full of DTP-EVEN-PCs
and other ugly stuff.
13-Apr-85 13:55:37-EST,451;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 13 Apr 85 13:55-EST
Date: 13 Apr 1985  13:55 EST (Sat)
Message-ID: <SR.EHPYC.12102870888.BABYL@MIT-SPEECH>
From: Scott Cyphers <SR.EHPYC@MIT-SPEECH>
Subject: FEPs
To:   bug-lispm@oz

Are our five 36{0|7}0s different, or does everyone have to reset the
FEP on just about every other boot (I'm not exaggerating) because of
the No more room for 612 Longs problem?  This is with FEP version 24.
13-Apr-85 14:04:00-EST,829;000000000000
Mail-From: CJL created at 13-Apr-85 14:03:53
Date: Sat, 13 Apr 1985  14:03 EST
Message-ID: <CJL.12102872428.BABYL@MIT-OZ>
From: Chris Lindblad <CJL@MIT-OZ>
To:   Scott Cyphers <SR.EHPYC@MIT-SPEECH>
Cc:   bug-lispm@MIT-OZ
Subject: FEPs
In-reply-to: Msg of 13 Apr 1985  13:55-EST from Scott Cyphers <SR.EHPYC at MIT-SPEECH>

    Date: Saturday, 13 April 1985  13:55-EST
    From: Scott Cyphers <SR.EHPYC at MIT-SPEECH>

    Are our five 36{0|7}0s different, or does everyone have to reset the
    FEP on just about every other boot (I'm not exaggerating) because of
    the No more room for 612 Longs problem?  This is with FEP version 24.

We have the same problem at the AI lab. One machine (lennon) cannot load
one world load no matter what I try. Is the a FEP version that fixes this
problem? Can we get it?
13-Apr-85 16:57:59-EST,4369;000000000000
Received: from 24534 by MIT-OZ via Chaosnet; 13 Apr 85 16:57-EST
Received: from SCRC-WESER by SCRC-VALLECITO via CHAOS with CHAOS-MAIL id 7464; Sat 13-Apr-85 16:47:44-EST
Date: Saturday, 13 April 1985, 16:45-EST
From:  <Reti at SCRC-VALLECITO>
Subject: Logical Pathname Names  Lossage
To: RWK at SCRC-YUKON
cc: GAVAN at OZ, joseph at SCRC-QUABBIN, HENRY at OZ, jcma at MIT-MC,
    BUG-LISPM at OZ
In-Reply-To: <850413002505.1.RWK@CROW.SCRC.Symbolics.COM>
Message-ID: <"850413164556.3.Reti@VALLECITO"@WESER.SCRC.Symbolics.COM>
Fonts: CPTFONT, CPTFONTB, TVFONT

    Date: Saturday, 13 April 1985, 00:25-EST
    From: Robert W. Kerns <RWK at SCRC-YUKON>

	Date: Friday, 12 April 1985, 11:21-EST
	From: Gavan Duffy <GAVAN at OZ>

	    Date: Sunday, 31 March 1985, 12:51-EST
	    From: Joseph R Goldstone <joseph at SCRC-QUABBIN>

		Date: Fri, 29 Mar 1985  17:03 EST
		From: HENRY@MIT-OZ

		    Date: Thursday, 28 March 1985, 21:18-EST
		    From: jcma at MIT-MC
		    This is trying to tell me I can't have two logical pathnames pointing at the
		    same real pathname.  What kind of lossage is that?

		    >>Error: Attempt to translate RL: U;  to PIG:USRD$:<RELATUS.UTILS>.
			     We had previously gotten this pathname as a translation of RL: UTILS; .
			     Files may be overwritten accidentally if you proceed.

		Yes, I encountered this too, and its bad. It was explained to me
		that it is trying to protect you from writing a file on two different
		logical pathnames with the same physical pathname, but

		- It shouldn't complain until I actually try to write such a file, 
		rather than when I set up something only with the potential of doing so.

	    What about the case where two groups come up with the same logical pathname?

	This can only happen when they both define some string to be a logical host,
	right?  
    (I have to confess I don't understand the point of Joseph's reply.  The reason
    it complains when it does is that that is the LAST POSSIBLE INSTANT for detecting
    the error).

		It seems to me to be a COMPLETE LOSE to remove the ability to have two
	logical pathnames point to the same real pathname, as available in rel 5.

    This "ability" was illusory in the first place.  There have been error
    checks for this since at least Rel 5, and I think even Rel 4.1, but for
    (bogus) performance reasons they were only turned on during certain
    operations.  There are a host of things which will not work right
    if you have two logical pathnames going to the same physical one,
    and none of them are new.

    Just because you didn't get an error message before does not mean
    this ever worked.

    The error message you get isn't kidding, either.

	Lord save me from people who would save me from myself!

    How about saving you from the system screwing you behind your
    back with no trace of what it did to you?

    Why don't you say what you were really trying to accomplish
    by having two different logical pathnames refering to the same
    file?  Why didn't you name them both the same thing in the
    first place?
One problem is that the error doesn't occur only when you have two logical
pathnames pointing to the same file, it occurs when two LOGICAL
DIRECTORIES point to the same PHYSICAL DIRECTORY.  

It may very well be that the two sets of files defined on the two
logical directories have no overlap at all, they just are logically
distinct but happen to map to the same physical directory; I know this
was the case when Henry Lieberman was demonstrating EZWin over here.

I can think of circumstances in which this is a perfectly reasonable
thing to do; I might have general package used by several systems that
should have its own logical directory but at the same time be only given
a single physical directory on some losing timesharing host in which to
keep all my files.

Henry's suggestion was to suppress the error message until such time as you
actually encounter conflicting FILES.  I know this is probably hard, but
doesn't seem impossible.

Of course, if you do that, you still cannot handle the arbitrary
back-translation of a physical pathname in that directory.  However, I'm
not sure that is necessary; why not only back-translate pathnames that
have been forward-translated?
13-Apr-85 18:38:29-EST,942;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 13 Apr 85 18:38-EST
Received: from MIT-CHERRY by MIT-MC via Chaosnet; 13 APR 85  18:39:02 EST
Date: Saturday, 13 April 1985, 18:38-EST
From: Dinarte R. Morais <DRM at MIT-XX>
Subject: Bogus message in SUPDUP connection
To: bug-lispm at OZ
Message-ID: <850413183807.4.DRM@CHERRY.MIT>

There are a few problems with the way the terminal program deals with
broken connections:

(1) It doesn't send a notification to tell you that the connection is
    gone.

(2) When you select the Terminal window after the connection has died
    the screen is cleared (which is annoying) and it gives you a message
    like:

    "Attempt to get a packet from CHAOS Connection for NAMESPACE to B,
     which stopped responding."

    It looks like the CHAOS Connection Terminal was using was
    reallocated before the error message could be given.  This is a bug.

-- Dinarte R. Morais
13-Apr-85 21:25:33-EST,2126;000000000000
Received: from MIT-BUDDY by MIT-OZ via Chaosnet; 13 Apr 85 21:25-EST
Date: Saturday, 13 April 1985, 21:24-EST
From: Chris Lindblad <cjl at OZ>
Subject: pathname blowout in show fonts command
To: BUG-LISPM at OZ
Message-ID: <850413212452.1.CJL@BUDDY.MIT>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 8.1,
microcode TMC5-MIC 319, on Lisp Machine Buddy Holly:

typed :Show Font MATH10
I looked, and fed:pathname-defaults is NIL.

>>Error: The second argument (DEFAULTS) to FS:SET-DEFAULT-PATHNAME, NIL, was of the wrong type.
         The function expected pathname defaults alist.
While in the function FS:SET-DEFAULT-PATHNAME  FED:LOAD-FONT-FROM-SYM  (:PROPERTY SI:COM-SHOW-FONT SI:CP-FUNCTION)

FS:SET-DEFAULT-PATHNAME:  (P.C. = 134)
   Arg 0 (PATHNAME): #<LMFS-PATHNAME "B:>sys>r6>fonts>tv>math10.bfd">
   Arg 1 (DEFAULTS): NIL
   Local 2: ("Skip setting default to ~A,~@
			       and perhaps try to use it." #<LMFS-PATHNAME "B:>sys>r6>fonts>tv>math10.bfd">)
   Local 3 (ELEM): NIL

FED:LOAD-FONT-FROM-SYM:  (P.C. = 27)
   Arg 0 (SYM): FONTS:MATH10
   --Defaulted args:--
   Arg 1 (QUERY-P): NIL

(:PROPERTY SI:COM-SHOW-FONT SI:CP-FUNCTION):  (P.C. = 11)
   Arg 0 (FONT): "MATH10"

SI:COM-SHOW-FONT:  (P.C. = 7)
   Arg 0 (FONT): "MATH10"

SI:*EVAL:  (P.C. = 403)
   Arg 0 (FORM): (SI:COM-SHOW-FONT "MATH10")
   Local 0 (FORM): NIL
   --Defaulted args:--
   Arg 1 (ENV): NIL
   Arg 2 (HOOK): NIL

(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0.):  (P.C. = 152)
   Arg 0 (.LEXICAL-ENVIRONMENT-POINTER.): #<DTP-LOCATIVE 500047>

TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
   Arg 0 (NEW-MODE): :BLAST
   Arg 1 (STREAM): #:TERMINAL-IO-SYN-STREAM
   Arg 2 (CONTINUATION): #<LEXICAL-CLOSURE (:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0.) 500054>

SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
   Arg 0 (NAME): "Lisp Top Level"
   Arg 1 (ABORT-FUNCTION): NIL
   Arg 2 (READ-FUNCTION): NIL
   Arg 3 (EVAL-FUNCTION): NIL
   Arg 4 (PRINT-FUNCTION): NIL

Rest of stack:
SI:LISP-COMMAND-LOOP:  (P.C. = 67)
SI:LISP-TOP-LEVEL1:  (P.C. = 5)
SI:LISP-TOP-LEVEL:  (P.C. = 7)
14-Apr-85 14:24:05-EST,306;000000000000
Received: from MIT-BUDDY by MIT-OZ via Chaosnet; 14 Apr 85 14:23-EST
Date: Sunday, 14 April 1985, 14:23-EST
From: David Chapman <Zvona at OZ>
Subject: what sources do I want?
To: bug-lispm at OZ
Message-ID: <850414142331.1.ZVONA@BUDDY.MIT>

Right now, defsetf, because it isn't documented on line.
14-Apr-85 19:57:05-EST,2221;000000000000
Received: from SCRC-TENEX by MIT-OZ via Chaosnet; 14 Apr 85 19:56-EST
Date: Sunday, 14 April 1985  19:57-EST
From: David C. Plummer <DCP at SCRC-TENEX>
In-reply-to: <CJL.12102872428.BABYL@MIT-OZ>
To:   Chris Lindblad <CJL at MIT-OZ>,
      Scott Cyphers <SR.EHPYC at MIT-SPEECH>
Cc:   bug-lispm at MIT-OZ
Subject: FEPs

    Date: Sat, 13 Apr 1985  14:03 EST
    From: Chris Lindblad <CJL@MIT-OZ>

	Date: Saturday, 13 April 1985  13:55-EST
	From: Scott Cyphers <SR.EHPYC at MIT-SPEECH>

	Are our five 36{0|7}0s different, or does everyone have
	to reset the FEP on just about every other boot (I'm not
	exaggerating) because of the No more room for 612 Longs
	problem?  This is with FEP version 24.

    We have the same problem at the AI lab. One machine (lennon)
    cannot load one world load no matter what I try. Is the a FEP
    version that fixes this problem? Can we get it?

The FEP uses a free storage manager that unfortunately can
develop this problem if the need for memory is comprable to the
available memory.  It is fragmenting free storage to the point
that it can't find blocks large enough for part of the world
loading process.  (I'd give you the reference to Knuth, but I'm
not near the FEP sources; it's the same storage manager that
MINITS uses.)

That's not really the whole story; there are other things going
on here.  One is that the world loading routines use a data
structure that doesn't work well for small address spaces.
Another is that the FEP filesystem doesn't allocate large files
from one end and small files from the other, so the world file is
fragmented on disk, which leads to the need for larger
in-FEP-memory data structures.

The New FEP system (which should be available for beta-test
within a few months (that's not a promise)) uses a completely
different data structure that doesn't even use the FEP's memory,
so the problem will go away.  As for the disk fragmentation and
the problem as it exists today, the only thing I can suggest is
putting a note on the machine saying that the FEP may need to be
reset and the boot file executed manually (since having the
boot.boot file open takes up 2 rather large chunks of memory).
14-Apr-85 20:21:17-EST,956;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 14 Apr 85 20:21-EST
Date: Sun,14 Apr 85 20:21:57 EST
From: David Vinayak Wallace <GUMBY@MIT-MC>
Subject:  Copying 36 bit files
To: Hornig@SCRC-STONY-BROOK
cc: BUG-LISPM@MIT-OZ, sr.ehpyc@MIT-SPEECH
In-reply-to: Msg of Fri 12 Apr 85 21:33 EST from Charles Hornig <Hornig at STONY-BROOK.SCRC.Symbolics.COM>
Message-ID: <[MIT-MC].454936.850414.GUMBY>

    Date: Fri, 12 Apr 85 21:33 EST
    From: Charles Hornig <Hornig at STONY-BROOK>

        Date: Friday, 12 April 1985, 20:45-EST
        From: Scott Cyphers <sr.ehpyc at SPEECH>

        In Symbolics 3670 Release 6.0, IP-TCP 29.0, Experimental ZOO 5.6,

        Using M-X copy file on 36 bit files like HOSTS3.BIN doesn't work
        because it copies the file with 16 bit bytes.  There should be a
        way to specify the byte size.

    Use the Copy File command to the CP.

Does this mean you're not going to fix M-X Copy File?
14-Apr-85 20:27:07-EST,1008;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 14 Apr 85 20:26-EST
Date: 14 Apr 1985  20:27 EST (Sun)
Message-ID: <SR.EHPYC.12103204357.BABYL@MIT-SPEECH>
From: Scott Cyphers <SR.EHPYC@MIT-SPEECH>
To:   "David C. Plummer" <DCP@SCRC-TENEX>
Cc:   bug-lispm@MIT-OZ, Chris Lindblad <CJL@MIT-OZ>
Subject: FEPs
In-reply-to: Msg of 14 Apr 1985  19:57-EST from David C. Plummer <DCP at SCRC-TENEX>

and as FEP versions get higher, the amount of FEP memory left
decreases since the FEP is doing more, which is why the problem
happens a lot more now than it used to?  And I guess unibus code
doesn't help either.

Resetting the FEP spins disks down and destroys the sync on 3670s with
the philips monitor.  Putting the remote/local switch on local
prevents the disk from spinning down on a reset fep(one of our 3670s
was shipped like that, which is where I learned the trick) which means
you can boot right away.  It works here, but I don't know if it's a
blessed technique without side-affects.
14-Apr-85 20:36:41-EST,1254;000000000000
Received: from SCRC-TENEX by MIT-OZ via Chaosnet; 14 Apr 85 20:36-EST
Date: Sunday, 14 April 1985  19:45-EST
From: David C. Plummer <DCP at SCRC-TENEX>
To:   David Chapman <Zvona at OZ>
Subject: interpreter does but compiler doesn't complain about bogus &rest arg
cc:   BUG-LISPM at OZ
In-reply-to: <850413130645.1.ZVONA@DUANE.MIT>

    Date: Saturday, 13 April 1985, 13:06-EST
    From: David Chapman <Zvona at OZ>

    In Symbolics 3670 Release 6.0, IP-TCP 29.0, AISite 8.0,
    microcode TMC5-IO4-MIC 319, FEP 22, on Lisp Machine Duane Allman:

    (defun foo (&key bar &rest stuff)
      (list bar stuff))

    The interpreter barfs on this; the compiler doesn't, and generates code
    s.t. (foo :bar 'grubble) returns a circular list full of DTP-EVEN-PCs
    and other ugly stuff.


(1) The compiler still supports the old behavior, which is NOT
part of common lisp.  &REST must always come before &KEY.  The
compiler will be fixed by Release 7.


(2) Ever since LispMs got &REST arguments, it has never been
legal to return them or put them in permanent structure as you
are doing; they are equivalent to stack lists.  This is
documented.  I don't know if LMI and/or TI have fixed this; it's
a non-trivial problem.
14-Apr-85 21:10:34-EST,388;000000000000
Received: from MIT-BUDDY by MIT-OZ via Chaosnet; 14 Apr 85 21:10-EST
Date: Sunday, 14 April 1985, 21:09-EST
From: Henry Lieberman <Henry at OZ>
Subject: Color
To: BUG-LISPM at OZ
Message-ID: <850414210928.1.HENRY@BUDDY.MIT>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 8.1,
microcode TMC5-MIC 319, on Lisp Machine Buddy Holly:

We need the Color system for Release 6.

14-Apr-85 23:27:09-EST,615;000000000000
Received: from MIT-JIMI by MIT-OZ via Chaosnet; 14 Apr 85 23:26-EST
Date: Sunday, 14 April 1985, 23:26-EST
From: David Vinayak Wallace <Gumby at MIT-MC>
Subject: tv:*typeout-window-border-enable* and TERMINAL
To: Bug-Lispm at OZ
Message-ID: <850414232636.4.GUMBY@JIMI.MIT>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 8.1,
microcode TMC5-MIC 319, on Lisp Machine Jimi Hendrix:

I have tv:*typeout-window-border-enable* set to NIL.  Whe I start up a
terminal window the little line is visible.  After I type a host and a
return the line is undrawn, except for the rightmost and leftmost
pixels.
14-Apr-85 23:46:00-EST,488;000000000000
Received: from MIT-JIMI by MIT-OZ via Chaosnet; 14 Apr 85 23:45-EST
Date: Sunday, 14 April 1985, 23:45-EST
From: David Vinayak Wallace <Gumby at MIT-MC>
Subject: host short names?
To: Bug-Lispm at OZ
Message-ID: <850414234527.5.GUMBY@JIMI.MIT>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 8.1,
microcode TMC5-MIC 319, on Lisp Machine Jimi Hendrix:

How does the system decide what a host's :SHORT-NAME is?  
(send (si:parse-host "CSLI") :short-name) returns "SU-CSLI".
14-Apr-85 23:51:52-EST,476;000000000000
Received: from MIT-JIMI by MIT-OZ via Chaosnet; 14 Apr 85 23:51-EST
Date: Sunday, 14 April 1985, 23:51-EST
From: David Vinayak Wallace <Gumby at MIT-MC>
Subject: <NETWORK> when in TERMINAL
To: BUG-LISPM at OZ
Message-ID: <850414235115.6.GUMBY@JIMI.MIT>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 8.1,
microcode TMC5-MIC 319, on Lisp Machine Jimi Hendrix:

The <help> documentation in TERMINAL ought to mention <ABORT>.  I found
it only by force of habit.
14-Apr-85 23:58:48-EST,505;000000000000
Received: from MIT-JIMI by MIT-OZ via Chaosnet; 14 Apr 85 23:58-EST
Date: Sunday, 14 April 1985, 23:58-EST
From: David Vinayak Wallace <Gumby at MIT-MC>
Subject: copying files to ITS
To: BUG-LISPM at OZ
Message-ID: <850414235819.7.GUMBY@JIMI.MIT>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 8.1,
microcode TMC5-MIC 319, on Lisp Machine Jimi Hendrix:

Using copyf to copy files from/to ITS complains that it can't set
creation-date nor author because they're each an "Unknown property"
15-Apr-85 00:05:30-EST,505;000000000000
Received: from MIT-JIMI by MIT-OZ via Chaosnet; 15 Apr 85 00:03-EST
Date: Monday, 15 April 1985, 00:03-EST
From: David Vinayak Wallace <Gumby at MIT-MC>
Subject: Can't hack "@" flag
To: BUG-LISPM at OZ
Message-ID: <850415000314.8.GUMBY@JIMI.MIT>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 8.1,
microcode TMC5-MIC 319, on Lisp Machine Jimi Hendrix:

I just tried to change the "@" flag with DIRED in a file on EE.  It
barfed with "Unknown property."  I used DIRED under 5.2 to set it!
15-Apr-85 04:17:34-EST,4037;000000000000
Received: from MIT-LENNON by MIT-OZ via Chaosnet; 15 Apr 85 04:17-EST
Date: Monday, 15 April 1985, 04:17-EST
From: Gavan Duffy <GAVAN at OZ>
Subject: Logical Pathname Names  Lossage
To: RWK at SCRC-YUKON, GAVAN at OZ
cc: joseph at SCRC-QUABBIN, HENRY at OZ, jcma at MIT-MC, BUG-LISPM at OZ
In-Reply-To: <850413002505.1.RWK@CROW.SCRC.Symbolics.COM>
Message-ID: <850415041706.1.GAVAN@LENNON.MIT>
Fonts: CPTFONT, CPTFONTB, TVFONT

    Date: Saturday, 13 April 1985, 00:25-EST
    From: Robert W. Kerns <RWK at SCRC-YUKON>

	Date: Friday, 12 April 1985, 11:21-EST
	From: Gavan Duffy <GAVAN at OZ>

	    Date: Sunday, 31 March 1985, 12:51-EST
	    From: Joseph R Goldstone <joseph at SCRC-QUABBIN>

		Date: Fri, 29 Mar 1985  17:03 EST
		From: HENRY@MIT-OZ

		    Date: Thursday, 28 March 1985, 21:18-EST
		    From: jcma at MIT-MC
		    This is trying to tell me I can't have two logical pathnames pointing at the
		    same real pathname.  What kind of lossage is that?

		    >>Error: Attempt to translate RL: U;  to PIG:USRD$:<RELATUS.UTILS>.
			     We had previously gotten this pathname as a translation of RL: UTILS; .
			     Files may be overwritten accidentally if you proceed.

		Yes, I encountered this too, and its bad. It was explained to me
		that it is trying to protect you from writing a file on two different
		logical pathnames with the same physical pathname, but

		- It shouldn't complain until I actually try to write such a file, 
		rather than when I set up something only with the potential of doing so.

	    What about the case where two groups come up with the same logical pathname?

	This can only happen when they both define some string to be a logical host,
	right?  

    (I have to confess I don't understand the point of Joseph's reply.  The reason
    it complains when it does is that that is the LAST POSSIBLE INSTANT for detecting
    the error).

		It seems to me to be a COMPLETE LOSE to remove the ability to have two
	logical pathnames point to the same real pathname, as available in rel 5.

    This "ability" was illusory in the first place.  There have been error
    checks for this since at least Rel 5, and I think even Rel 4.1, but for
    (bogus) performance reasons they were only turned on during certain
    operations.  There are a host of things which will not work right
    if you have two logical pathnames going to the same physical one,
    and none of them are new.

Like what?  All I want to do is to have multiple names for the same logical
directory, for the sake of convenience.  This is unreasonable?  Logical
pathnames should have this flexibility.

    Just because you didn't get an error message before does not mean
    this ever worked.

Hello?  Worked for me.

    The error message you get isn't kidding, either.

	Lord save me from people who would save me from myself!

    How about saving you from the system screwing you behind your
    back with no trace of what it did to you?

That's fine, but I don't see how preventing me from having two or more logical
directories under the same logical host point to the same physical directory
can screw me.  

    Why don't you say what you were really trying to accomplish
    by having two different logical pathnames refering to the same
    file?  Why didn't you name them both the same thing in the
    first place?

OK.  For instance, I may have defined a logical pathname
FOO:UTILITIES;FROB.LISP, and there are many places in my code where I refer to
the file by this name.   But I often tire of typing UTILITIES in the typein
window, and want to define the pathname FOO:U;FROB.LISP to point to the same
file.

Setting FS:*CHECK-FOR-MULTIPLE-TRANSLATIONS* to NIL fixes things for me for
the time being.

I can see where checking for multiple logical host definitions might be a good
idea, but I don't see why I can't have two logical directories (under the same
logical host) point to the same physical directory.
15-Apr-85 05:23:50-EST,10763;000000000000
Received: from MIT-MORRISON by MIT-OZ via Chaosnet; 15 Apr 85 05:23-EST
Date: Monday, 15 April 1985, 05:22-EST
From: jcma@MIT-MC
Subject: >>Error: SRI-KL is believed to be down or unavailable.
To: BUG-LISPM@OZ
Message-ID: <850415052256.5.JCMA@MORRISON.MIT>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 8.1,
microcode TMC5-MIC 319, FEP 22, on Lisp Machine Jim Morrison:

Sending mail shouldn't blow out.  It should just send via a host that can store and forward.
Also, the proceed option to send via any mail host should work.  It didn't.  This
backtrace resulted from an attempt to use that proceed option.

>>Error: SRI-KL is believed to be down or unavailable.
While in the function NETI:INVOKE-SERVICE-ACCESS-PATH-WITH-CACHED-UNAVAILABILITY  ZWEI:INVOKE-MAIL-SERVICE  ZWEI:NETWORK-SEND-IT-2

NETI:INVOKE-SERVICE-ACCESS-PATH-WITH-CACHED-UNAVAILABILITY:  (P.C. = 42)
   Arg 0 (SERVICE-ACCESS-PATH): #<SERVICE-ACCESS-PATH MAIL-TO-USER (SMTP) -- SRI-KL on INTERNET 24223565>
   Arg 1 (TIMEOUT): 18000
   Arg 2 (SERVICE-ARGS): NIL

ZWEI:INVOKE-MAIL-SERVICE:  (P.C. = 10)
   Arg 0 (SERVICE-ACCESS-PATH): #<SERVICE-ACCESS-PATH MAIL-TO-USER (SMTP) -- SRI-KL on INTERNET 24223565>
   Arg 1 (RECIPIENTS): ((:NAME "GAK" :HOST (:OBJECT #<TOPS20-HOST SRI-KL 1616322>) :INTERVAL (("To: GAK@SRI-KL" 4) ("To: GAK@SRI-KL" 14))))
   Arg 2 (TEMPLATE-EXPANSION): (:TEXT #<NODE 24222411> :HEADERS (:DATE 2691397193 :FROM ((:USER #<USER JCMA 1612702>)) :SUBJECT "You there?" :TO ((:NAME "GAK" :HOST ** :INTERVAL **)) :IN-REPLY-TO ("The message of 11 Apr 85 14:16-EST from Glenn Andrew Kramer <GAK at SRI-KL>") ...) :HEADER-FORMAT :SHORT :TRANSMIT-TIME 2691397193 :DRAFT-MSG #<DRAFT-MSG 24221030>)

ZWEI:NETWORK-SEND-IT-2:  (P.C. = 503)
   Arg 0 (RECIPIENTS): ((:NAME "GAK" :HOST (:OBJECT #<TOPS20-HOST SRI-KL 1616322>) :INTERVAL (("To: GAK@SRI-KL" 4) ("To: GAK@SRI-KL" 14))))
   Arg 1 (TEMPLATE-EXPANSION): (:TEXT #<NODE 24222411> :HEADERS (:DATE 2691397193 :FROM ((:USER #<USER JCMA 1612702>)) :SUBJECT "You there?" :TO ((:NAME "GAK" :HOST ** :INTERVAL **)) :IN-REPLY-TO ("The message of 11 Apr 85 14:16-EST from Glenn Andrew Kramer <GAK at SRI-KL>") ...) :HEADER-FORMAT :SHORT :TRANSMIT-TIME 2691397193 :DRAFT-MSG #<DRAFT-MSG 24221030>)

ZWEI:NETWORK-SEND-IT-1:  (P.C. = 234)
   Arg 0 (SERVICES): NIL
   Arg 1 (RECIPIENTS): ((:NAME "GAK" :HOST (:OBJECT #<TOPS20-HOST SRI-KL 1616322>) :INTERVAL (("To: GAK@SRI-KL" 4) ("To: GAK@SRI-KL" 14))))
   Arg 2 (TEMPLATE-EXPANSION): (:TEXT #<NODE 24222411> :HEADERS (:DATE 2691397193 :FROM ((:USER #<USER JCMA 1612702>)) :SUBJECT "You there?" :TO ((:NAME "GAK" :HOST ** :INTERVAL **)) :IN-REPLY-TO ("The message of 11 Apr 85 14:16-EST from Glenn Andrew Kramer <GAK at SRI-KL>") ...) :HEADER-FORMAT :SHORT :TRANSMIT-TIME 2691397193 :DRAFT-MSG #<DRAFT-MSG 24221030>)

ZWEI:NETWORK-SEND-IT:  (P.C. = 132)
   Arg 0 (RECIPIENTS): ((:NAME "GAK" :HOST (:OBJECT #<TOPS20-HOST SRI-KL 1616322>) :INTERVAL (("To: GAK@SRI-KL" 4) ("To: GAK@SRI-KL" 14))))
   Arg 1 (TEMPLATE-EXPANSION): (:TEXT #<NODE 24222411> :HEADERS (:DATE 2691397193 :FROM ((:USER #<USER JCMA 1612702>)) :SUBJECT "You there?" :TO ((:NAME "GAK" :HOST ** :INTERVAL **)) :IN-REPLY-TO ("The message of 11 Apr 85 14:16-EST from Glenn Andrew Kramer <GAK at SRI-KL>") ...) :HEADER-FORMAT :SHORT :TRANSMIT-TIME 2691397193 :DRAFT-MSG #<DRAFT-MSG 24221030>)

ZWEI:FUNCALL-TEMPLATE-EXPANSION:  (P.C. = 47)
   Arg 0 (TEMPLATE-EXPANSION): (:TEXT #<NODE 24222411> :HEADERS (:DATE 2691397193 :FROM ((:USER #<USER JCMA 1612702>)) :SUBJECT "You there?" :TO ((:NAME "GAK" :HOST ** :INTERVAL **)) :IN-REPLY-TO ("The message of 11 Apr 85 14:16-EST from Glenn Andrew Kramer <GAK at SRI-KL>") ...) :HEADER-FORMAT :SHORT :TRANSMIT-TIME 2691397193 :DRAFT-MSG #<DRAFT-MSG 24221030>)
   Arg 1 (FUNCTION): ZWEI:NETWORK-SEND-IT
   Rest arg (ARGS): (((:NAME "GAK" :HOST (:OBJECT #<TOPS20-HOST SRI-KL 1616322>) :INTERVAL (** **))) (:TEXT #<NODE 24222411> :HEADERS (:DATE 2691397193 :FROM (**) :SUBJECT "You there?" :TO (**) :IN-REPLY-TO ("The message of 11 Apr 85 14:16-EST from Glenn Andrew Kramer <GAK at SRI-KL>") ...) :HEADER-FORMAT :SHORT :TRANSMIT-TIME 2691397193 :DRAFT-MSG #<DRAFT-MSG 24221030>))

(:METHOD ZWEI:BASIC-DRAFT-MSG :TRANSMIT):  (P.C. = 315)
   Arg 0 (SELF): #<DRAFT-MSG 24221030>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:BASIC-DRAFT-MSG -- 7. IV's, 0. FL's 142602635>
   Arg 2 (OPERATION): :TRANSMIT

(:METHOD ZWEI:DRAFT-MSG :COMBINED :TRANSMIT):  (P.C. = 44)
   Arg 0 (SELF): #<DRAFT-MSG 24221030>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:DRAFT-MSG -- 17. IV's, 3. FL's 142602645>
   Arg 2 (.OPERATION.): :TRANSMIT
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

ZWEI:COM-SEND-MESSAGE:  (P.C. = 54)

ZWEI:COM-MAIL-END:  (P.C. = 4)

ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
   Arg 0 (COMMAND): ZWEI:COM-MAIL-END
   Arg 1 (CHAR): 148
   Arg 2 (PREFIX-CHAR): NIL
   Arg 3 (HOOK-LIST): NIL

ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
   Arg 0 (CH): 148

(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 233)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 43200617 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:EDITOR -- 12. IV's, 0. FL's 142611573>
   Arg 2 (OPERATION): :EDIT
   --Defaulted args:--
   Arg 3 (TOP-LEVEL-P): T
   Arg 4 (DESCRIPTION): NIL

(:METHOD ZWEI:ZMAIL-FRAME :COMBINED :EDIT):  (P.C. = 70)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 43200617 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-FRAME -- 65. IV's, 20. FL's 142611405>
   Arg 2 (.OPERATION.): :EDIT
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

ZWEI:ZMAIL-MAIL:  (P.C. = 105)
   Arg 0 (CONFIGURATION): :MAIL
   Arg 1 (STARTING-WINDOW): #<WINDOW 120615174>

ZWEI:CONTINUE-DRAFT-MSG:  (P.C. = 21)
   Arg 0 (DRAFT-MSG): #<DRAFT-MSG 24221030>

ZWEI:COMPOSE-VIA-DRAFT-MSG:  (P.C. = 5)
   Arg 0 (TEMPLATE-EXPANSION): (:HEADER-FORMAT :SHORT :HEADERS (:TO ((:PERSONAL-NAME "Glenn Andrew Kramer" :NAME "GAK" :HOST ** :INTERVAL **)) :CC ((:NAME "jcma" :HOST ** :INTERVAL **)) :SUBJECT "You there?" :IN-REPLY-TO ((:DATE 2691083760 :FROM **))) :WINDOW-CONFIGURATION :MAIL :TEXT #<NODE 24220730> :DONT-REPLY-TO ("bboard info-* *mac all-ai") ...)

ZWEI:FUNCALL-TEMPLATE-EXPANSION:  (P.C. = 47)
   Arg 0 (TEMPLATE-EXPANSION): (:HEADER-FORMAT :SHORT :HEADERS (:TO ((:PERSONAL-NAME "Glenn Andrew Kramer" :NAME "GAK" :HOST ** :INTERVAL **)) :CC ((:NAME "jcma" :HOST ** :INTERVAL **)) :SUBJECT "You there?" :IN-REPLY-TO ((:DATE 2691083760 :FROM **))) :WINDOW-CONFIGURATION :MAIL :TEXT #<NODE 24220730> :DONT-REPLY-TO ("bboard info-* *mac all-ai") ...)
   Arg 1 (FUNCTION): #<DTP-COMPILED-FUNCTION ZWEI:COMPOSE-VIA-DRAFT-MSG 47551501>
   Rest arg (ARGS): ((:HEADER-FORMAT :SHORT :HEADERS (:TO (**) :CC (**) :SUBJECT "You there?" :IN-REPLY-TO (**)) :WINDOW-CONFIGURATION :MAIL :TEXT #<NODE 24220730> :DONT-REPLY-TO ("bboard info-* *mac all-ai") ...))

ZWEI:COMPOSE-FROM-TEMPLATE:  (P.C. = 20)
   Arg 0 (TEMPLATE): ZWEI:REPLY-TEMPLATE
   Rest arg (PLIST): (:MSGS (#<MSG 1032417>))

ZWEI:NORMAL-REPLY-INTERNAL:  (P.C. = 132)
   Arg 0 (MSGS): (#<MSG 1032417>)

ZWEI:NORMAL-REPLY:  (P.C. = 5)
   Rest arg (MSGS): (#<MSG 1032417>)

ZWEI:COM-ZMAIL-REPLY:  (P.C. = 20)

ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
   Arg 0 (COMMAND): ZWEI:COM-ZMAIL-REPLY
   Arg 1 (CHAR): 114
   --Defaulted args:--
   Arg 2 (PREFIX-CHAR): NIL
   Arg 3 (HOOK-LIST): NIL

ZWEI:ZMAIL-COMMAND-EXECUTE:  (P.C. = 6)
   Arg 0: ZWEI:COM-ZMAIL-REPLY

(:METHOD ZWEI:ZMAIL-FRAME :PROCESS-COMMAND-CHAR):  (P.C. = 7)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 43200617 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-FRAME -- 65. IV's, 20. FL's 142611405>
   Arg 2 (OPERATION): :PROCESS-COMMAND-CHAR
   Arg 3 (CH): 114

(:INTERNAL (:INTERNAL (:METHOD ZWEI:ZMAIL-FRAME :COMBINED :PROCESS-COMMAND-CHAR) 0) 0):  (P.C. = 10)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 43200617 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-FRAME -- 65. IV's, 20. FL's 142611405>
   Arg 2 (.OPERATION.): :PROCESS-COMMAND-CHAR
   Rest arg (.DAEMON-CALLER-ARGS.): (114)

(:METHOD ZWEI:ZMAIL-COMMAND-LOOP-MIXIN :WHOPPER :PROCESS-COMMAND-CHAR):  (P.C. = 21)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 43200617 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-COMMAND-LOOP-MIXIN -- 6. IV's, 0. FL's 142611503>
   Arg 2 (.WHOPPER-CONTINUATION.): #<DTP-COMPILED-FUNCTION (:INTERNAL (:INTERNAL (:METHOD ZWEI:ZMAIL-FRAME :COMBINED :PROCESS-COMMAND-CHAR) 0) 0) 47674121>
   Arg 3 (.OLD-SELF-MAPPING-TABLE.): #<Map to flavor ZWEI:ZMAIL-FRAME -- 65. IV's, 20. FL's 142611405>
   Arg 4 (.OPERATION.): :PROCESS-COMMAND-CHAR
   Arg 5 (CHAR): 114

(:INTERNAL (:METHOD ZWEI:ZMAIL-FRAME :COMBINED :PROCESS-COMMAND-CHAR) 0):  (P.C. = 13)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 43200617 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-FRAME -- 65. IV's, 20. FL's 142611405>
   Arg 2 (.OPERATION.): :PROCESS-COMMAND-CHAR
   Rest arg (.DAEMON-CALLER-ARGS.): (114)

(:METHOD ZWEI:ZMAIL-FRAME :WHOPPER :PROCESS-COMMAND-CHAR):  (P.C. = 21)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 43200617 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-FRAME -- 65. IV's, 20. FL's 142611405>
   Arg 2 (.WHOPPER-CONTINUATION.): #<DTP-COMPILED-FUNCTION (:INTERNAL (:METHOD ZWEI:ZMAIL-FRAME :COMBINED :PROCESS-COMMAND-CHAR) 0) 47674106>
   Arg 3 (.OLD-SELF-MAPPING-TABLE.): #<Map to flavor ZWEI:ZMAIL-FRAME -- 65. IV's, 20. FL's 142611405>
   Arg 4 (.OPERATION.): :PROCESS-COMMAND-CHAR
   Arg 5 (CHAR): 114

(:METHOD ZWEI:ZMAIL-FRAME :COMBINED :PROCESS-COMMAND-CHAR):  (P.C. = 12)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 43200617 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-FRAME -- 65. IV's, 20. FL's 142611405>
   Arg 2 (.OPERATION.): :PROCESS-COMMAND-CHAR
   Rest arg (.DAEMON-CALLER-ARGS.): (114)

(:METHOD ZWEI:ZMAIL-FRAME :COMMAND-LOOP):  (P.C. = 143)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 43200617 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-FRAME -- 65. IV's, 20. FL's 142611405>
   Arg 2 (OPERATION): :COMMAND-LOOP

(:METHOD ZWEI:ZMAIL-FRAME :COMBINED :COMMAND-LOOP):  (P.C. = 70)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 43200617 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-FRAME -- 65. IV's, 20. FL's 142611405>
   Arg 2 (.OPERATION.): :COMMAND-LOOP
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

ZWEI:ZMAIL-PROCESS-TOP-LEVEL:  (P.C. = 105)
   Arg 0 (WINDOW): #<ZMAIL-FRAME Main Zmail Window 43200617 exposed>

SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
   --Defaulted args:--
   Arg 0 (IGNORE): NIL
15-Apr-85 06:05:13-EST,1500;000000000000
Received: from MIT-MORRISON by MIT-OZ via Chaosnet; 15 Apr 85 06:05-EST
Date: Monday, 15 April 1985, 06:04-EST
From: jcma@MIT-MC
Subject: [mailer at SU-AIMVAX: help]
To: bug-mail@MIT-MC, bug-lispm@OZ
Message-ID: <850415060419.6.JCMA@MORRISON.MIT>

What mailers around here support this sort of functionality?  Perhaps, the
Symoblics mailer has some hacks like this?

Received: from MIT-MC by MIT-OZ via Chaosnet; 15 Apr 85 05:36-EST
Received: from su-aimvax.ARPA by MIT-MC.ARPA; 15 APR 85 05:37:27 EST
Date: Mon, 15 Apr 85 02:37 PST
From: mailer@diablo
To: jcma@MIT-MC.ARPA
Subject: help

Response from diablo Mail alias handler:


You can send commands to the address "mailer" to maintain mailing lists
aliases, and forwarding information. The current commands are:

add name to list	Adds the user to the mailing list.
alias name for user	Makes an alias for the user.
all			Prints out all the aliases and mailing lists.
create list with name,..Creates a mailing list.
delete name from list	Delete a user from a mailing list.
forward user to name	Send one user's mail to another.
help			This command summary.
keep user at host	Don't do any forwarding.
list name,...		Lists the value of the given names.
pluslots list		Adds many users to an existing list.
remove name for user	Remove an alias for the user.

Commands can be abbreviated. For example, "alias name" (or "me")
assumes the user name who sent the mail.
Send bugs and suggestions to mail-wizards.
----
15-Apr-85 06:29:05-EST,1180;000000000000
Received: from MIT-LENNON by MIT-OZ via Chaosnet; 15 Apr 85 06:29-EST
Date: Monday, 15 April 1985, 06:28-EST
From: Gavan Duffy <GAVAN at OZ>
Subject: Where's the code for . . .
To: BUG-LISPM at OZ
Message-ID: <850415062843.5.GAVAN@LENNON.MIT>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 8.1,
microcode TMC5-MIC 319, on Lisp Machine John Lennon:


ZWEI:GET-SEQUENCE-ALISTS

I advise this function.  My advice doesn't seem to work in rel 6, but the code
seems to be missing.  Why are parts of ZMAIL missing?  Why in particular is
this trivial function withheld?  What possible competitive advantage is gained
by withholding this piece of Zmail's guts?  Who would want to steal Zmail in
the first place?  Who makes such decisions?  Are they made by the people who
wrote the code so that no one in the outside world can see how poorly written
it is?  Or are they made by people who have no earthly idea why anyone would
want to look at the sources?

Not to repeat myself, but . . .

   the software withholding policy is a giant crock!


Oh for the days when bug reports were answered with a jaunty . . .

                 "EXAMINE THE SOURCES"!
15-Apr-85 06:52:00-EST,8557;000000000000
Received: from MIT-LENNON by MIT-OZ via Chaosnet; 15 Apr 85 06:51-EST
Date: Monday, 15 April 1985, 06:51-EST
From: Gavan Duffy <GAVAN at OZ>
Subject: Functions without source code
To: Bug-Lispm at OZ
Message-ID: <850415065135.6.GAVAN@LENNON.MIT>


Please send the sources of the following, so that I can continue to customize
my zmail environment the way I like it and so that I have half a chance of
extricating myself the next time zmail bombs out miserably.

((ZWEI:ABORT-CURRENT-SAVE-COMMAND DEFUN)
 (ZWEI:ADD-OTHER-COMMANDS DEFUN)
 (ZWEI:ADD-SORT-PREDICATE-TO-MENU DEFUN)
 (ZWEI:ADD-ZMAIL-KEYBOARD-MACROS DEFUN)
 (ZWEI:APPEND-MULTIPLE-MENU-DOCUMENTATION DEFUN)
 (ZWEI:ASSURE-MAIL-BUFFER-FULLY-LOADED DEFUN)
 (ZWEI:BUFFER-EXPUNGE-QUERY DEFUN)
 (ZWEI:CALL-POP-UP-MINI-BUFFER-EDITOR DEFUN)
 (ZWEI:CANONICALIZE-LINE DEFUN)
 (ZWEI:CHANGE-MSG-KEYWORDS DEFUN)
 (ZWEI:CHECK-FOR-TOO-MANY-MSGS DEFUN)
 (ZWEI:CHOOSE-DELETE-MODE DEFUN)
 (ZWEI:CHOOSE-MSG-FROM-SUMMARY DEFUN)
 (ZWEI:CHOOSE-OTHER-COMMAND DEFUN)
 (ZWEI:COM-ADD-FILE-REFERENCES DEFUN)
 (ZWEI:COM-EDIT-CURRENT-MSG ZWEI:DEFINE-COMMAND-WHO-LINE-DOCUMENTATION-UPDATER)
 (ZWEI:COM-EXPLAIN-BAD-HEADER DEFUN)
 (ZWEI:COM-SCROLL-SUMMARY-WINDOW DEFUN)
 (ZWEI:COM-SCROLL-SUMMARY-WINDOW-BACKWARD DEFUN)
 (ZWEI:COM-SELECT-ARBITRARY-FORMAT-MAIL-FILE DEFUN)
 (ZWEI:COM-SHOW-MAILING-LIST DEFUN)
 (ZWEI:COM-SHOW-RECEIVED-PATH DEFUN)
 (ZWEI:COM-ZMAIL-APROPOS DEFUN)
 (ZWEI:COM-ZMAIL-BREAK DEFUN)
 (ZWEI:COM-ZMAIL-CONCATENATE DEFUN)
 (ZWEI:COM-ZMAIL-CONCATENATE-ALL DEFUN)
 (ZWEI:COM-ZMAIL-DELETE ZWEI:DEFINE-COMMAND-WHO-LINE-DOCUMENTATION-UPDATER)
 (ZWEI:COM-ZMAIL-DELETE-ALL DEFUN)
 (ZWEI:COM-ZMAIL-DELETE-AND-SAVE-MSG DEFUN)
 (ZWEI:COM-ZMAIL-DELETE-AND-UP DEFUN)
 (ZWEI:COM-ZMAIL-DELETE-INTERNAL DEFUN)
 (ZWEI:COM-ZMAIL-DESCRIBE-COMMAND DEFUN)
 (ZWEI:COM-ZMAIL-DOWN-TO-NEXT DEFUN)
 (ZWEI:COM-ZMAIL-EDIT-FILE DEFUN)
 (ZWEI:COM-ZMAIL-ENABLE-BACKGROUND-PROCESS-WHEN-DEEXPOSED DEFUN)
 (ZWEI:COM-ZMAIL-END-OF-MSG DEFUN)
 (ZWEI:COM-ZMAIL-EXPUNGE DEFUN)
 (ZWEI:COM-ZMAIL-EXTENDED-COMMAND DEFUN)
 (ZWEI:COM-ZMAIL-FIND-STRING DEFUN)
 (ZWEI:COM-ZMAIL-HARDCOPY-FILE DEFUN)
 (ZWEI:COM-ZMAIL-HELP DEFUN)
 (ZWEI:COM-ZMAIL-JUMP DEFUN)
 (ZWEI:COM-ZMAIL-KEYWORDS ZWEI:DEFINE-COMMAND-WHO-LINE-DOCUMENTATION-UPDATER)
 (ZWEI:COM-ZMAIL-KEYWORDS-ALL ZWEI:DEFINE-COMMAND-WHO-LINE-DOCUMENTATION-UPDATER)
 (ZWEI:COM-ZMAIL-KILL-RING-SAVE-MSG DEFUN)
 (ZWEI:COM-ZMAIL-KILL-RING-YANK-MSG DEFUN)
 (ZWEI:COM-ZMAIL-LARGE-ARGUMENT DEFUN)
 (ZWEI:COM-ZMAIL-LIST-SEQUENCES DEFUN)
 (ZWEI:COM-ZMAIL-MAP-OVER ZWEI:DEFINE-COMMAND-WHO-LINE-DOCUMENTATION-UPDATER)
 (ZWEI:COM-ZMAIL-MODE-LINE-SCROLL DEFUN)
 (ZWEI:COM-ZMAIL-MOUSE-POINT-PDL DEFUN)
 (ZWEI:COM-ZMAIL-MOVE ZWEI:DEFINE-COMMAND-WHO-LINE-DOCUMENTATION-UPDATER)
 (ZWEI:COM-ZMAIL-MOVE-ALL-TO-FILE ZWEI:DEFINE-COMMAND-WHO-LINE-DOCUMENTATION-UPDATER)
 (ZWEI:COM-ZMAIL-MOVE-TO-DEFAULT-PREVIOUS-POINT DEFUN)
 (ZWEI:COM-ZMAIL-MOVE-TO-PREVIOUS-POINT DEFUN)
 (ZWEI:COM-ZMAIL-NEXT ZWEI:DEFINE-COMMAND-WHO-LINE-DOCUMENTATION-UPDATER)
 (ZWEI:COM-ZMAIL-NEXT-OR-PREVIOUS-INTERNAL DEFUN)
 (ZWEI:COM-ZMAIL-NEXT-UNSEEN DEFUN)
 (ZWEI:COM-ZMAIL-NOT-MODIFIED DEFUN)
 (ZWEI:COM-ZMAIL-OCCUR DEFUN)
 (ZWEI:COM-ZMAIL-OTHER-COMMANDS ZWEI:DEFINE-COMMAND-WHO-LINE-DOCUMENTATION-UPDATER)
 (ZWEI:COM-ZMAIL-PREVIOUS ZWEI:DEFINE-COMMAND-WHO-LINE-DOCUMENTATION-UPDATER)
 (ZWEI:COM-ZMAIL-PREVIOUS-UNSEEN DEFUN)
 (ZWEI:COM-ZMAIL-QUIT DEFUN)
 (ZWEI:COM-ZMAIL-REFRESH DEFUN)
 (ZWEI:COM-ZMAIL-REMOVE DEFUN)
 (ZWEI:COM-ZMAIL-RENAME-SEQUENCE ZWEI:DEFINE-COMMAND-WHO-LINE-DOCUMENTATION-UPDATER)
 (ZWEI:COM-ZMAIL-REPLAY-KEYBOARD-MACRO ZWEI:DEFINE-COMMAND-WHO-LINE-DOCUMENTATION-UPDATER)
 (ZWEI:COM-ZMAIL-REPLY-ALL ZWEI:DEFINE-COMMAND-WHO-LINE-DOCUMENTATION-UPDATER)
 (ZWEI:COM-ZMAIL-SAVE DEFUN)
 (ZWEI:COM-ZMAIL-SAVE-CURRENT-BUFFER DEFUN)
 (ZWEI:COM-ZMAIL-SELF-DOCUMENT DEFUN)
 (ZWEI:COM-ZMAIL-SET-POP-MARK DEFUN)
 (ZWEI:COM-ZMAIL-SHOW-FILE DEFUN)
 (ZWEI:COM-ZMAIL-SHOW-MAIL DEFUN)
 (ZWEI:COM-ZMAIL-SHOW-MAILING-LIST DEFUN)
 (ZWEI:COM-ZMAIL-SORT ZWEI:DEFINE-COMMAND-WHO-LINE-DOCUMENTATION-UPDATER)
 (ZWEI:COM-ZMAIL-START-BACKGROUND-SAVE DEFUN)
 (ZWEI:COM-ZMAIL-START-OF-MSG DEFUN)
 (ZWEI:COM-ZMAIL-TYPE DEFUN)
 (ZWEI:COM-ZMAIL-TYPE-ALL DEFUN)
 (ZWEI:COM-ZMAIL-UNDELETE ZWEI:DEFINE-COMMAND-WHO-LINE-DOCUMENTATION-UPDATER)
 (ZWEI:COM-ZMAIL-UNDELETE-ALL DEFUN)
 (ZWEI:COM-ZMAIL-UNKEYWORDS-ALL ZWEI:DEFINE-COMMAND-WHO-LINE-DOCUMENTATION-UPDATER)
 (ZWEI:COM-ZMAIL-UP-TO-PREVIOUS DEFUN)
 (ZWEI:COM-ZMAIL-VIEW-FILE DEFUN)
 (ZWEI:COM-ZMAIL-VIEW-MAIL DEFUN)
 (ZWEI:COM-ZMAIL-WHOIS DEFUN)
 (ZWEI:COM-ZMAIL-YANK-MSG DEFUN)
 (ZWEI:COMPUTE-CURRENT-MSG-NAME DEFUN)
 (ZWEI:COMPUTE-CURRENT-MSG-STATE DEFUN)
 (ZWEI:COMPUTE-MSG-LENGTH DEFUN)
 (ZWEI:CONCATENATE-MSG-TO-MSG DEFUN)
 (ZWEI:DEFAULT-ZMAIL-MOVE-PATHNAME DEFUN)
 (ZWEI:DEFINE-HEADER-FIELD-SORT-PREDICATE DEFUN)
 (ZWEI:DEFINE-NORMAL-SORT-PREDICATE DEFUN)
 (ZWEI:DOCUMENT-ZMAIL-COMMAND DEFUN)
 (ZWEI:EXPUNGE-AND-SAVE-SEQUENCE DEFUN)
 (ZWEI:EXPUNGE-COLLECTIONS DEFUN)
 (ZWEI:EXPUNGE-SEQUENCE DEFUN)
 (ZWEI:FIRST-MSG-IF-ANY DEFUN)
 (ZWEI:FLUSH-BACKGROUND-REQUEST DEFUN)
 (ZWEI:FOREGROUND-BACKGROUND-FINISH DEFUN)
 (ZWEI:GET-DEFAULTED-MOVE-SEQUENCE DEFUN)
 (ZWEI:GET-KEYWORDS-FROM-MSG-BY-FILTERING DEFUN)
 (ZWEI:GET-MOVE-BUFFER DEFUN)
 (ZWEI:GET-MOVE-SEQUENCE-FROM-MSG-BY-FILTERING DEFUN)
 (ZWEI:GET-MSG-FROM-ARG DEFUN)
 (ZWEI:GET-SEQUENCE-ALISTS DEFUN)
 (ZWEI:HEADER-FIELD-SORT-PARAMETERS DEFUN)
 (ZWEI:INITIALIZE-ZMAIL-COMTABS DEFUN)
 (ZWEI:INTERVAL-LESSP-1 DEFUN)
 (ZWEI:KEYWORD-STRING-LESSP DEFUN)
 (ZWEI:KILL-MSG DEFUN)
 (ZWEI:KILL-SEQUENCE DEFUN)
 (ZWEI:LIST-SEQUENCES-INTERNAL DEFUN)
 (ZWEI:MAIL-BUFFER-SAVE-SETUP DEFUN)
 (ZWEI:MAKE-MSG-MARK DEFUN)
 (ZWEI:MAKE-SEQUENCE-STREAM DEFUN)
 (ZWEI:MAKE-SOURCE-COMPARE-FILE-FROM-MSG DEFUN)
 (ZWEI:MAYBE-CALL-POP-UP-MINI-BUFFER-EDITOR DEFUN)
 (ZWEI:MAYBE-UPDATE-MSG-FONTS DEFUN)
 (ZWEI:MERGE-MSG-REFERENCES DEFUN)
 (ZWEI:MERGE-MSGS-REFERENCES DEFUN)
 (ZWEI:MOVE-AFTER-DELETE DEFUN)
 (ZWEI:MSG-BUFFER-SAVE-P DEFUN)
 (ZWEI:MSG-DATE-SORT-LESSP DEFUN)
 (ZWEI:MSG-FROM-SORT-LESSP DEFUN)
 (ZWEI:MSG-GET-DATE DEFUN)
 (ZWEI:MSG-KEYWORD-LESSP DEFUN)
 (ZWEI:MSG-LENGTH-LESSP DEFUN)
 (ZWEI:MSG-NOOP-SORT-LESSP DEFUN)
 (ZWEI:MSG-POINT-PDL-FORWARD-SEQUENCE DEFUN)
 (ZWEI:MSG-POINT-PDL-MOVE DEFUN)
 (ZWEI:MSG-POINT-PDL-POP DEFUN)
 (ZWEI:MSG-POINT-PDL-PURGE DEFUN)
 (ZWEI:MSG-POINT-PDL-PUSH DEFUN)
 (ZWEI:MSG-POSITION-LESSP DEFUN)
 (ZWEI:MSG-RECIPIENT-LESSP DEFUN)
 (ZWEI:MSG-RECIPIENT-LESSP-1 DEFUN)
 (ZWEI:MSG-STATUS-GET-DATE DEFUN)
 (ZWEI:MSG-SUBJECT-SORT-LESSP DEFUN)
 (ZWEI:MSG-TEXT-STRING-LESSP DEFUN)
 (ZWEI:MSG-TO-SORT-LESSP DEFUN)
 (ZWEI:OK-TO-EXPUNGE-OR-SAVE-P DEFUN)
 (ZWEI:ONE-BLANK-LINE DEFUN)
 (ZWEI:READ-IN-OTHER-MAIL-FILE DEFUN)
 (ZWEI:REMOVE-MSG DEFUN)
 (ZWEI:REVERSE-SORT DEFUN)
 (ZWEI:REVERSE-SORTCAR DEFUN)
 (ZWEI:REVERSE-STABLE-SORT DEFUN)
 (ZWEI:REVERSE-STABLE-SORTCAR DEFUN)
 (ZWEI:ROTATE-MSG-POINT-PDL DEFUN)
 (ZWEI:SAVE-BUFFER-INTERNAL DEFUN)
 (ZWEI:SAVE-MAIL-BUFFER DEFUN)
 (ZWEI:SCROLL-SUMMARY-WINDOW-INTERNAL DEFUN)
 (ZWEI:SELECT-ARBITRARY-FORMAT-BUFFER-FLAVOR DEFUN)
 (ZWEI:SELECT-ARBITRARY-FORMAT-MAIL-FILE DEFUN)
 (ZWEI:SELECT-MSG-AND-POSSIBLY-BUFFER DEFUN)
 (ZWEI:SELECT-MSG-FROM-LINE DEFUN)
 (ZWEI:SEQUENCE-IO DEFUN)
 (ZWEI:SEQUENCE-PREDICATE-QUERY DEFUN)
 (ZWEI:SET-MSG-INTERVAL DEFUN)
 (ZWEI:SHOW-MAILING-LIST-INTERNAL DEFUN)
 (ZWEI:SHOW-MAILING-LIST-INTERNAL-1 DEFUN)
 (ZWEI:SOME-PLIST DEFUN)
 (ZWEI:SOME-PLIST-NOT DEFUN)
 (ZWEI:SORT-SEQUENCE DEFUN)
 (ZWEI:SORT-SEQUENCE-INTERNAL DEFUN)
 (ZWEI:SOURCE-COMPARE-MSGS DEFUN)
 (ZWEI:STRING-FROM-KEYWORDS DEFUN)
 (ZWEI:STRING-OR-NIL-LESSP DEFUN)
 (ZWEI:UPDATE-BY-FILTERS-COMMAND-WHO-LINE-DOCUMENTATION DEFUN)
 (ZWEI:UPDATE-COMMAND-WHO-LINE-DOCUMENTATION DEFUN)
 (ZWEI:UPDATE-KEYWORDS-WHO-LINE-DOCUMENTATION DEFUN)
 (ZWEI:UPDATE-KEYWORDS-WHO-LINE-DOCUMENTATION-1 DEFUN)
 (ZWEI:UPDATE-MOVE-TO-FILE-WHO-LINE-DOCUMENTATION DEFUN)
 (ZWEI:VIEW-MAIL-INTERNAL DEFUN)
 (ZWEI:ZMAIL-CONCATENATE-MSG DEFUN)
 (ZWEI:ZMAIL-DELETE-MSG DEFUN)
 (ZWEI:ZMAIL-KEYWORDS-ALL DEFUN)
 (ZWEI:ZMAIL-KEYWORDS-MSG DEFUN)
 (ZWEI:ZMAIL-READ-FIND-SEARCH-STRING DEFUN)
 (ZWEI:ZMAIL-READ-FIND-STRING DEFUN)
 (ZWEI:ZMAIL-READ-FIND-STRING-SEARCH-STRING DEFUN)
 (ZWEI:ZMAIL-SAVE-ALL DEFUN)
 (ZWEI:ZMAIL-SAVE-ALL-FILES DEFUN)
 (ZWEI:ZMAIL-SAVE-MENU DEFUN)
 (ZWEI:ZMAIL-SELECT-MSG DEFUN)
 (ZWEI:ZMAIL-SELECT-NEXT-MSG DEFUN)
 (ZWEI:ZMAIL-SELECT-PREVIOUS-MSG DEFUN)
 (ZWEI:ZMAIL-UNDELETE-MSG DEFUN)
 (ZWEI:ZMAIL-VIEW-FILE DEFUN))
15-Apr-85 06:57:39-EST,771;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 15 Apr 85 06:57-EST
Date: Mon,15 Apr 85 06:58:18 EST
From: Christopher C. Stacy <CSTACY@MIT-MC>
To: BUG-LISPM@MIT-MC
Message-ID: <[MIT-MC].455360.850415.CSTACY>

In Release 6, IP-TCP 29....

The "secure-subnet" feature is too course.  
People on MC cannot FTP to Lisp Machines around here because MC is on
the ARPAnet, which is too big to declare "safe".  There should be a
safe-host predicate which is defined in the site.  It should take a
network host address and a service name, and return T or NIL.  This
predicate may check safe-subnets, or do any other kind of test
desired.  For example, it might be set to get the host's name from the
address, and and return T if the host is in the local namespace.
15-Apr-85 07:15:16-EST,9091;000000000000
Received: from MIT-MORRISON by MIT-OZ via Chaosnet; 15 Apr 85 07:15-EST
Date: Monday, 15 April 1985, 07:14-EST
From: jcma@MIT-MC
Subject: Flavor Bug
To: BUG-LISPM@OZ
Message-ID: <850415071422.3.JCMA@MORRISON.MIT>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 8.1,
microcode TMC5-MIC 319, FEP 22, on Lisp Machine Jim Morrison:

This happened while compiling the following flavor
definition:

(DEFFLAVOR PARSE-ERROR
	((SENTENCE-OBJECT *SENTENCE-FOR-PARSE-ERRORS-TO-EXAMINE*)
	 (PARSE-BUG-RECIPIENT "RELATUS-PARSER"))
	(EXAMINE-PARSE-TREE-MIXIN
	 PARSE-BUG-REPORTING-MIXIN
	 EDIT-WORD-SYNTAX-MIXIN
	 SKIP-PARSING-SENTENCE-CONDITION
	 SKIP-POSITING-SENTENCE-CONDITION
	 RETRY-PARSING-SENTENCE-CONDITION
	 RETRY-POSITING-SENTENCE-CONDITION
	 ERROR
	 HACK-BUG-REPORT-RECIPIENT-MIXIN)
  :INITABLE-INSTANCE-VARIABLES
  :GETTABLE-INSTANCE-VARIABLES
  :ABSTRACT-FLAVOR)

this is in the file pig:<relatus.utils>error.lsp.  When I tried recompiling
the flavor a second time, the error did not occur!

>>Trap: The first argument given to the AP-1 instruction, NIL, was not an array.
While in the function SI:FLAVOR-INVALIDATE-INIT-INFO  SI:FLAVOR-INVALIDATE-INIT-INFO  SI:FLAVOR-INVALIDATE-INIT-INFO

SI:FLAVOR-INVALIDATE-INIT-INFO:  (P.C. = 3)
   Arg 0 (FL): NIL

SI:FLAVOR-INVALIDATE-INIT-INFO:  (P.C. = 20)
   Arg 0 (FL): #<FLAVOR PARSE-BUG-REPORTING-MIXIN 76360757>

SI:FLAVOR-INVALIDATE-INIT-INFO:  (P.C. = 20)
   Arg 0 (FL): #<FLAVOR PARSE-ERROR 76361211>

SI:DEFFLAVOR1:  (P.C. = 2065)
   Arg 0 (FLAVOR-NAME): PARSE-ERROR
   Arg 1 (INSTANCE-VARIABLES): ((SENTENCE-OBJECT *SENTENCE-FOR-PARSE-ERRORS-TO-EXAMINE*) (PARSE-BUG-RECIPIENT "RELATUS-PARSER"))
   Arg 2 (COMPONENT-FLAVORS): (EXAMINE-PARSE-TREE-MIXIN PARSE-BUG-REPORTING-MIXIN EDIT-WORD-SYNTAX-MIXIN SKIP-PARSING-SENTENCE-CONDITION SKIP-POSITING-SENTENCE-CONDITION RETRY-PARSING-SENTENCE-CONDITION RETRY-POSITING-SENTENCE-CONDITION ERROR HACK-BUG-REPORT-RECIPIENT-MIXIN)
   Arg 3 (OPTIONS): (:INITABLE-INSTANCE-VARIABLES :GETTABLE-INSTANCE-VARIABLES :ABSTRACT-FLAVOR)

SI:*EVAL:  (P.C. = 403)
   Arg 0 (FORM): (SI:DEFFLAVOR1 (QUOTE PARSE-ERROR) (QUOTE ((SENTENCE-OBJECT *SENTENCE-FOR-PARSE-ERRORS-TO-EXAMINE*) (PARSE-BUG-RECIPIENT "RELATUS-PARSER"))) (QUOTE (EXAMINE-PARSE-TREE-MIXIN PARSE-BUG-REPORTING-MIXIN EDIT-WORD-SYNTAX-MIXIN SKIP-PARSING-SENTENCE-CONDITION SKIP-POSITING-SENTENCE-CONDITION RETRY-PARSING-SENTENCE-CONDITION RETRY-POSITING-SENTENCE-CONDITION ERROR HACK-BUG-REPORT-RECIPIENT-MIXIN)) (QUOTE (:INITABLE-INSTANCE-VARIABLES :GETTABLE-INSTANCE-VARIABLES :ABSTRACT-FLAVOR)))
   Local 0 (FORM): NIL
   --Defaulted args:--
   Arg 1 (ENV): NIL
   Arg 2 (HOOK): NIL

(:INTERNAL COMPILER:COMPILE-PROCESS-DEFAULT 0 (:EVAL-FORM)):  (P.C. = 3)
   Arg 0 (**DEFSELECT-OP**): :EVAL-FORM
   Arg 1 (FORM): (SI:DEFFLAVOR1 (QUOTE PARSE-ERROR) (QUOTE ((SENTENCE-OBJECT *SENTENCE-FOR-PARSE-ERRORS-TO-EXAMINE*) (PARSE-BUG-RECIPIENT "RELATUS-PARSER"))) (QUOTE (EXAMINE-PARSE-TREE-MIXIN PARSE-BUG-REPORTING-MIXIN EDIT-WORD-SYNTAX-MIXIN SKIP-PARSING-SENTENCE-CONDITION SKIP-POSITING-SENTENCE-CONDITION RETRY-PARSING-SENTENCE-CONDITION RETRY-POSITING-SENTENCE-CONDITION ERROR HACK-BUG-REPORT-RECIPIENT-MIXIN)) (QUOTE (:INITABLE-INSTANCE-VARIABLES :GETTABLE-INSTANCE-VARIABLES :ABSTRACT-FLAVOR)))

COMPILER:COMPILE-PROCESS-DEFAULT:  (P.C. = 12)
   Arg 0 (OPERATION): :EVAL-FORM
   Rest arg (SELECT-METHOD-ARGS): ((SI:DEFFLAVOR1 (QUOTE PARSE-ERROR) (QUOTE (** **)) (QUOTE (EXAMINE-PARSE-TREE-MIXIN PARSE-BUG-REPORTING-MIXIN EDIT-WORD-SYNTAX-MIXIN SKIP-PARSING-SENTENCE-CONDITION SKIP-POSITING-SENTENCE-CONDITION RETRY-PARSING-SENTENCE-CONDITION RETRY-POSITING-SENTENCE-CONDITION ERROR HACK-BUG-REPORT-RECIPIENT-MIXIN)) (QUOTE (:INITABLE-INSTANCE-VARIABLES :GETTABLE-INSTANCE-VARIABLES :ABSTRACT-FLAVOR))))

COMPILER:COMPILE-TO-CORE:  (P.C. = 67)
   Arg 0 (OPERATION): :EVAL-FORM
   Rest arg (SELECT-METHOD-ARGS): ((SI:DEFFLAVOR1 (QUOTE PARSE-ERROR) (QUOTE (** **)) (QUOTE (EXAMINE-PARSE-TREE-MIXIN PARSE-BUG-REPORTING-MIXIN EDIT-WORD-SYNTAX-MIXIN SKIP-PARSING-SENTENCE-CONDITION SKIP-POSITING-SENTENCE-CONDITION RETRY-PARSING-SENTENCE-CONDITION RETRY-POSITING-SENTENCE-CONDITION ERROR HACK-BUG-REPORT-RECIPIENT-MIXIN)) (QUOTE (:INITABLE-INSTANCE-VARIABLES :GETTABLE-INSTANCE-VARIABLES :ABSTRACT-FLAVOR))))

COMPILER:COMPILE-FORM-FUNCTION:  (P.C. = 22)
   Arg 0 (FORM): (SI:DEFFLAVOR1 (QUOTE PARSE-ERROR) (QUOTE ((SENTENCE-OBJECT *SENTENCE-FOR-PARSE-ERRORS-TO-EXAMINE*) (PARSE-BUG-RECIPIENT "RELATUS-PARSER"))) (QUOTE (EXAMINE-PARSE-TREE-MIXIN PARSE-BUG-REPORTING-MIXIN EDIT-WORD-SYNTAX-MIXIN SKIP-PARSING-SENTENCE-CONDITION SKIP-POSITING-SENTENCE-CONDITION RETRY-PARSING-SENTENCE-CONDITION RETRY-POSITING-SENTENCE-CONDITION ERROR HACK-BUG-REPORT-RECIPIENT-MIXIN)) (QUOTE (:INITABLE-INSTANCE-VARIABLES :GETTABLE-INSTANCE-VARIABLES :ABSTRACT-FLAVOR)))
   Arg 1 (COMPILE-TIME-P): :FORCE
   Arg 2 (LOAD-TIME-P): T

COMPILER:COMPILE-FROM-STREAM-1:  (P.C. = 413)
   Arg 0: (SI:DEFFLAVOR1 (QUOTE PARSE-ERROR) (QUOTE ((SENTENCE-OBJECT *SENTENCE-FOR-PARSE-ERRORS-TO-EXAMINE*) (PARSE-BUG-RECIPIENT "RELATUS-PARSER"))) (QUOTE (EXAMINE-PARSE-TREE-MIXIN PARSE-BUG-REPORTING-MIXIN EDIT-WORD-SYNTAX-MIXIN SKIP-PARSING-SENTENCE-CONDITION SKIP-POSITING-SENTENCE-CONDITION RETRY-PARSING-SENTENCE-CONDITION RETRY-POSITING-SENTENCE-CONDITION ERROR HACK-BUG-REPORT-RECIPIENT-MIXIN)) (QUOTE (:INITABLE-INSTANCE-VARIABLES :GETTABLE-INSTANCE-VARIABLES :ABSTRACT-FLAVOR)))
   Arg 1 (COMPILE-TIME-TOO): :FORCE

COMPILER:COMPILE-FROM-STREAM-1:  (P.C. = 113)
   Arg 0: (EVAL-WHEN (COMPILE LOAD EVAL) (SI:DEFFLAVOR1 (QUOTE PARSE-ERROR) (QUOTE (** **)) (QUOTE (EXAMINE-PARSE-TREE-MIXIN PARSE-BUG-REPORTING-MIXIN EDIT-WORD-SYNTAX-MIXIN SKIP-PARSING-SENTENCE-CONDITION SKIP-POSITING-SENTENCE-CONDITION RETRY-PARSING-SENTENCE-CONDITION RETRY-POSITING-SENTENCE-CONDITION ERROR HACK-BUG-REPORT-RECIPIENT-MIXIN)) (QUOTE (:INITABLE-INSTANCE-VARIABLES :GETTABLE-INSTANCE-VARIABLES :ABSTRACT-FLAVOR))))
   Arg 1 (COMPILE-TIME-TOO): NIL

COMPILER:COMPILE-FROM-STREAM-1:  (P.C. = 165)
   Arg 0: (DEFFLAVOR PARSE-ERROR ((SENTENCE-OBJECT *SENTENCE-FOR-PARSE-ERRORS-TO-EXAMINE*) (PARSE-BUG-RECIPIENT "RELATUS-PARSER")) (EXAMINE-PARSE-TREE-MIXIN PARSE-BUG-REPORTING-MIXIN EDIT-WORD-SYNTAX-MIXIN SKIP-PARSING-SENTENCE-CONDITION SKIP-POSITING-SENTENCE-CONDITION RETRY-PARSING-SENTENCE-CONDITION RETRY-POSITING-SENTENCE-CONDITION ERROR HACK-BUG-REPORT-RECIPIENT-MIXIN) :INITABLE-INSTANCE-VARIABLES :GETTABLE-INSTANCE-VARIABLES :ABSTRACT-FLAVOR)
   --Defaulted args:--
   Arg 1 (COMPILE-TIME-TOO): NIL

COMPILER:PROCESS-FORMS-FROM-STREAM:  (P.C. = 117)
   Arg 0 (INPUT-STREAM): #<INTERVAL-STREAM 34752254>
   Arg 1 (PROCESS-FUNCTION): COMPILER:COMPILE-FROM-STREAM-1
   Arg 2 (FOR-FILE): NIL
   Arg 3 (AREA-FOR-READING): 4

COMPILER:COMPILE-FROM-STREAM:  (P.C. = 237)
   Arg 0 (INPUT-STREAM): #<INTERVAL-STREAM 34752254>
   Arg 1 (GENERIC-PATHNAME): #<VMS-PATHNAME "PIG:<RELATUS.UTILS>ERROR">
   Arg 2: #<DTP-COMPILED-FUNCTION COMPILER:COMPILE-TO-CORE 22236230>
   Arg 3 (ADDITIONAL-BINDINGS): (:SYNTAX :ZETALISP :BASE 10 :PACKAGE #<Package RELATUS 6072344>)

ZWEI:COMPILE-INTERVAL:  (P.C. = 142)
   Arg 0 (COMPILE-P): T
   Arg 1: NIL
   Arg 2: T
   Arg 3 (BP1): ("(DEFFLAVOR PARSE-ERROR" 0)
   Arg 4 (BP2): ("" 0)
   Arg 5 (IN-ORDER-P): T
   Arg 6 (SPECIAL-COMPILER-FUNCTION): NIL
   Arg 7: NIL

ZWEI:COMPILE-PRINT-INTERVAL:  (P.C. = 121)
   Arg 0 (BP1): ("(DEFFLAVOR PARSE-ERROR" 0)
   Arg 1 (BP2): ("" 0)
   Arg 2 (IN-ORDER-P): T
   Arg 3 (COMPILE-P): T
   Arg 4 (DEFINITION-NAME): "Flavor PARSE-ERROR"
   Arg 5 (MODE-NAME): "Compiling"
   Arg 6 (ECHO-NAME): "compiled."
   Arg 7 (USE-TYPEOUT): NIL
   Arg 8 (DEFVAR-HACK): T
   Arg 9 (SPECIAL-COMPILER-FUNCTION): NIL

ZWEI:COMPILE-DEFINITION-INTERNAL:  (P.C. = 100)
   Arg 0 (COMPILE-P): T
   Arg 1 (MODE-NAME): "Compiling"
   Arg 2 (ECHO-NAME): "compiled."
   --Defaulted args:--
   Arg 3 (USE-TYPEOUT): NIL
   Arg 4 (DEFVAR-HACK): T
   Arg 5 (SPECIAL-COMPILER-FUNCTION): NIL

ZWEI:COM-COMPILE-REGION:  (P.C. = 5)

ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
   Arg 0 (COMMAND): ZWEI:COM-COMPILE-REGION
   Arg 1 (CHAR): 355
   Arg 2 (PREFIX-CHAR): NIL
   Arg 3 (HOOK-LIST): (ZWEI:EXPAND-ABBREV-HOOK ZWEI:SHIFT-LOCK-HOOK)

ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
   Arg 0 (CH): 355

(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 233)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 121171573>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:EDITOR -- 12. IV's, 0. FL's 142346020>
   Arg 2 (OPERATION): :EDIT
   --Defaulted args:--
   Arg 3 (TOP-LEVEL-P): T
   Arg 4 (DESCRIPTION): NIL

(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 60)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 121171573>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:TOP-LEVEL-EDITOR -- 13. IV's, 1. FL's 142345776>
   Arg 2 (.OPERATION.): :EDIT
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 51)

SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
   --Defaulted args:--
   Arg 0 (IGNORE): NIL
15-Apr-85 07:25:41-EST,1074;000000000000
Received: from MIT-MORRISON by MIT-OZ via Chaosnet; 15 Apr 85 07:25-EST
Date: Monday, 15 April 1985, 07:24-EST
From: jcma@MIT-MC
Subject: Flavor Bugs
To: BUG-LISPM@OZ
Message-ID: <850415072445.4.JCMA@MORRISON.MIT>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 8.1,
microcode TMC5-MIC 319, FEP 22, on Lisp Machine Jim Morrison:

I have the following flavor defined in the relatus package.

(DEFFLAVOR PARSE-FERROR	() (HACK-FORMAT-ARGS PARSE-ERROR))

When I compile it I get a warning that it is redefining DBG:PARSE-FERROR.  It
asked me if I wanted to proceed or not.  I typed N for no. Then it told me
that it was redefining the old flavor with the new one, and finally printed
out in the minibuffer "Flavor PARSE-FERROR compiled."

1) Why does my flavor in my own package conflict with one in the dbg package?
This shouldn't happen.

2) Why doesn't it say something that makes more sense when I type no, like
aborting redefinition of flavor?

3) Why does it ask me if I want to redefine this dbg flavor twice once I type
no the first time?
15-Apr-85 07:31:43-EST,3298;000000000000
Received: from MIT-MORRISON by MIT-OZ via Chaosnet; 15 Apr 85 07:31-EST
Date: Monday, 15 April 1985, 07:30-EST
From: jcma@MIT-MC
Subject: Flavor Bug
To: BUG-LISPM@OZ
Message-ID: <850415073049.5.JCMA@MORRISON.MIT>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 8.1,
microcode TMC5-MIC 319, FEP 22, on Lisp Machine Jim Morrison:


The following flavor also generates a blowout like
the earlier bug report.

(DEFFLAVOR RELATUS-ERROR
	()
	(HACK-BUG-REPORT-RECIPIENT-MIXIN  ;must be here to work
	 ERROR				  ;due to flavor combination order
	 HACK-FORMAT-ARGS
	 RELATUS-BUG-REPORTING-MIXIN)
  :ABSTRACT-FLAVOR)



>>Trap: The first argument given to the AP-1 instruction, NIL, was not an array.
While in the function SI:FLAVOR-INVALIDATE-INIT-INFO  SI:FLAVOR-INVALIDATE-INIT-INFO  SI:FLAVOR-INVALIDATE-INIT-INFO

SI:FLAVOR-INVALIDATE-INIT-INFO:  (P.C. = 3)
   Arg 0 (FL): NIL

SI:FLAVOR-INVALIDATE-INIT-INFO:  (P.C. = 20)
   Arg 0 (FL): #<FLAVOR RELATUS-BUG-REPORTING-MIXIN 76361367>

SI:FLAVOR-INVALIDATE-INIT-INFO:  (P.C. = 20)
   Arg 0 (FL): #<FLAVOR RELATUS-ERROR 76361415>

SI:DEFFLAVOR1:  (P.C. = 2065)
   Arg 0 (FLAVOR-NAME): RELATUS-ERROR
   Arg 1 (INSTANCE-VARIABLES): NIL
   Arg 2 (COMPONENT-FLAVORS): (HACK-BUG-REPORT-RECIPIENT-MIXIN ERROR HACK-FORMAT-ARGS RELATUS-BUG-REPORTING-MIXIN)
   Arg 3 (OPTIONS): (:ABSTRACT-FLAVOR)

SI:*EVAL:  (P.C. = 403)
   Arg 0 (FORM): (SI:DEFFLAVOR1 (QUOTE RELATUS-ERROR) (QUOTE NIL) (QUOTE (HACK-BUG-REPORT-RECIPIENT-MIXIN ERROR HACK-FORMAT-ARGS RELATUS-BUG-REPORTING-MIXIN)) (QUOTE (:ABSTRACT-FLAVOR)))
   Local 0 (FORM): NIL
   --Defaulted args:--
   Arg 1 (ENV): NIL
   Arg 2 (HOOK): NIL

(:INTERNAL COMPILER:COMPILE-PROCESS-DEFAULT 0 (:EVAL-FORM)):  (P.C. = 3)
   Arg 0 (**DEFSELECT-OP**): :EVAL-FORM
   Arg 1 (FORM): (SI:DEFFLAVOR1 (QUOTE RELATUS-ERROR) (QUOTE NIL) (QUOTE (HACK-BUG-REPORT-RECIPIENT-MIXIN ERROR HACK-FORMAT-ARGS RELATUS-BUG-REPORTING-MIXIN)) (QUOTE (:ABSTRACT-FLAVOR)))

COMPILER:COMPILE-PROCESS-DEFAULT:  (P.C. = 12)
   Arg 0 (OPERATION): :EVAL-FORM
   Rest arg (SELECT-METHOD-ARGS): ((SI:DEFFLAVOR1 (QUOTE RELATUS-ERROR) (QUOTE NIL) (QUOTE (HACK-BUG-REPORT-RECIPIENT-MIXIN ERROR HACK-FORMAT-ARGS RELATUS-BUG-REPORTING-MIXIN)) (QUOTE (:ABSTRACT-FLAVOR))))

COMPILER:COMPILE-TO-CORE:  (P.C. = 67)
   Arg 0 (OPERATION): :EVAL-FORM
   Rest arg (SELECT-METHOD-ARGS): ((SI:DEFFLAVOR1 (QUOTE RELATUS-ERROR) (QUOTE NIL) (QUOTE (HACK-BUG-REPORT-RECIPIENT-MIXIN ERROR HACK-FORMAT-ARGS RELATUS-BUG-REPORTING-MIXIN)) (QUOTE (:ABSTRACT-FLAVOR))))

Rest of stack:
COMPILER:COMPILE-FORM-FUNCTION:  (P.C. = 22)
COMPILER:COMPILE-FROM-STREAM-1:  (P.C. = 413)
COMPILER:COMPILE-FROM-STREAM-1:  (P.C. = 113)
COMPILER:COMPILE-FROM-STREAM-1:  (P.C. = 165)
COMPILER:PROCESS-FORMS-FROM-STREAM:  (P.C. = 117)
COMPILER:COMPILE-FROM-STREAM:  (P.C. = 237)
ZWEI:COMPILE-INTERVAL:  (P.C. = 142)
ZWEI:COMPILE-PRINT-INTERVAL:  (P.C. = 121)
ZWEI:COMPILE-DEFINITION-INTERNAL:  (P.C. = 100)
ZWEI:COM-COMPILE-REGION:  (P.C. = 5)
ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 233)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 60)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 51)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
15-Apr-85 07:47:54-EST,2626;000000000000
Received: from MIT-MORRISON by MIT-OZ via Chaosnet; 15 Apr 85 07:47-EST
Date: Monday, 15 April 1985, 07:47-EST
From: jcma@MIT-MC
Subject: More Flavor Bugs
To: BUG-lispm@OZ
Message-ID: <850415074700.6.JCMA@MORRISON.MIT>

In Symbolics 3600 NIL in Release 6.0, IP-TCP 29.0, AISite 8.1,
microcode TMC5-MIC 319, FEP 22, on Lisp Machine Jim Morrison:

After incrementally compiling the file pig:<relatus.utils>error.lsp, Itried
compiling the whole buffer.  The compilation went into an infinite loop.  This
code worked in rel 5. It looks like something related to :required-flavors is
broken.  What is the recommended course of action?

>>Error: The control stack overflowed.
While in the function LOCATIVEP  REMPROP  SI:FLAVOR-INVALIDATE-INIT-INFO

LOCATIVEP:
   Arg 0 (X): #<DTP-LOCATIVE 76361262>
   Local 0 (X): NIL

REMPROP:  (P.C. = 11)
   Arg 0 (SYM): #<DTP-LOCATIVE 76361262>
   Arg 1 (INDICATOR): SI:INIT-INFO

SI:FLAVOR-INVALIDATE-INIT-INFO:  (P.C. = 6)
   Arg 0 (FL): #<FLAVOR PARSE-ERROR 76361237>

SI:FLAVOR-INVALIDATE-INIT-INFO:  (P.C. = 20)
   Arg 0 (FL): #<FLAVOR PARSE-BUG-REPORTING-MIXIN 76360757>

SI:FLAVOR-INVALIDATE-INIT-INFO:  (P.C. = 20)
   Arg 0 (FL): #<FLAVOR PARSE-ERROR 76361237>

SI:FLAVOR-INVALIDATE-INIT-INFO:  (P.C. = 20)
   Arg 0 (FL): #<FLAVOR PARSE-BUG-REPORTING-MIXIN 76360757>

SI:FLAVOR-INVALIDATE-INIT-INFO:  (P.C. = 20)
   Arg 0 (FL): #<FLAVOR PARSE-ERROR 76361237>

SI:FLAVOR-INVALIDATE-INIT-INFO:  (P.C. = 20)
   Arg 0 (FL): #<FLAVOR PARSE-BUG-REPORTING-MIXIN 76360757>

Rest of stack:
SI:FLAVOR-INVALIDATE-INIT-INFO:  (P.C. = 20)
SI:FLAVOR-INVALIDATE-INIT-INFO:  (P.C. = 20)
SI:FLAVOR-INVALIDATE-INIT-INFO:  (P.C. = 20)
SI:DEFFLAVOR1:  (P.C. = 2065)
SI:*EVAL:  (P.C. = 403)
(:INTERNAL COMPILER:COMPILE-PROCESS-DEFAULT 0 (:EVAL-FORM)):  (P.C. = 3)
COMPILER:COMPILE-PROCESS-DEFAULT:  (P.C. = 12)
COMPILER:COMPILE-TO-CORE:  (P.C. = 67)
COMPILER:COMPILE-FORM-FUNCTION:  (P.C. = 22)
COMPILER:COMPILE-FROM-STREAM-1:  (P.C. = 413)
COMPILER:COMPILE-FROM-STREAM-1:  (P.C. = 113)
COMPILER:COMPILE-FROM-STREAM-1:  (P.C. = 165)
COMPILER:PROCESS-FORMS-FROM-STREAM:  (P.C. = 117)
COMPILER:COMPILE-FROM-STREAM:  (P.C. = 237)
ZWEI:COMPILE-INTERVAL:  (P.C. = 142)
ZWEI:COMPILE-PRINT-INTERVAL:  (P.C. = 121)
ZWEI:COMPILE-BUFFER:  (P.C. = 34)
ZWEI:COM-COMPILE-BUFFER:  (P.C. = 5)
ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 233)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 60)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 51)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
15-Apr-85 07:50:53-EST,699;000000000000
Received: from MIT-MORRISON by MIT-OZ via Chaosnet; 15 Apr 85 07:50-EST
Date: Monday, 15 April 1985, 07:50-EST
From: jcma@MIT-MC
Subject: Debugger erroring while trying to generate backtrace
To: BUG-LISPM@OZ
Message-ID: <850415075003.7.JCMA@MORRISON.MIT>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 8.1,
microcode TMC5-MIC 319, FEP 22, on Lisp Machine Jim Morrison:


This occured when I was trying to submit the previous bug report when the
debugger tried to get function info for a function that was not yet defined.
I suggest that the debugger shouldn't bomb out under those circumstances.  It
should just note the situation in thye backtrace and proceed on with business.
15-Apr-85 08:01:42-EST,906;000000000000
Received: from MIT-MORRISON by MIT-OZ via Chaosnet; 15 Apr 85 08:01-EST
Date: Monday, 15 April 1985, 08:00-EST
From: jcma@MIT-MC
Subject: Debugger erroring while trying to generate backtrace
To: BUG-LISPM@OZ
In-Reply-To: <850415075003.7.JCMA@MORRISON.MIT>
Message-ID: <850415080051.8.JCMA@MORRISON.MIT>

    Date: Monday, 15 April 1985, 07:50-EST
    From: jcma@MIT-MC

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 8.1,
    microcode TMC5-MIC 319, FEP 22, on Lisp Machine Jim Morrison:


    This occured when I was trying to submit the previous bug report when the
    debugger tried to get function info for a function that was not yet defined.
    I suggest that the debugger shouldn't bomb out under those circumstances.  It
    should just note the situation in thye backtrace and proceed on with business.

Ignore this bug report.  It was my function losing not yours.
15-Apr-85 08:06:32-EST,6035;000000000000
Received: from MIT-LENNON by MIT-OZ via Chaosnet; 15 Apr 85 08:06-EST
Date: Monday, 15 April 1985, 08:06-EST
From: Gavan Duffy <GAVAN at OZ>
Subject: Whole directory missing.
To: BUG-LISPM at OZ
Message-ID: <850415080610.7.GAVAN@LENNON.MIT>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 8.1,
microcode TMC5-MIC 319, on Lisp Machine John Lennon:

I did (PROBEF (SI:GET-SOURCE-FILE-NAME 'ARRAY-ELEMENTS-PER-Q)) and got this.

>>Error: The directory >sys>r6>l-sys does not exist.
         For B:>sys>r6>l-sys>sysdef.lisp
While in the function (:METHOD FS:NFILE-SERVER-UNIT :WAIT-FOR-COMMAND)  (:METHOD FS:NFILE-SERVER-UNIT :SEND-AND-WAIT-FOR-COMMAND)  (:METHOD FS:NFILE-SERVER-UNIT :SEND-IN-COMMAND-CONDITION-ENVIRONMENT)

(:METHOD FS:NFILE-SERVER-UNIT :WAIT-FOR-COMMAND):  (P.C. = 65)
   Arg 0 (SELF): #<NFILE-SERVER-UNIT 30300730>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:NFILE-SERVER-UNIT -- 15. IV's, 0. FL's 104167041>
   Arg 2 (OPERATION): :WAIT-FOR-COMMAND
   Arg 3 (TID-CONS-ARGS): ("T2928" :OPEN "Probe" NIL)
   Local 4 (DATA-CHANNEL): NIL
   Local 5 (COMMAND-TID): "T2928"
   Local 6 (COMMAND-NAME): :OPEN
   Local 7 (WHOSTATE): "Probe"
   Local 8 (RESPONSE-ARGS): ("DNF" (:PATHNAME ">sys>r6>l-sys>sysdef.lisp.NEWEST" :DIRECTORY-PATHNAME ">sys>r6>l-sys>") "The directory >sys>r6>l-sys does not exist.")
   Local 9 (RESPONSE-NAME): :ERROR

(:METHOD FS:NFILE-SERVER-UNIT :SEND-AND-WAIT-FOR-COMMAND):  (P.C. = 40)
   Arg 0 (SELF): #<NFILE-SERVER-UNIT 30300730>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:NFILE-SERVER-UNIT -- 15. IV's, 0. FL's 104167041>
   Arg 2 (OPERATION): :SEND-AND-WAIT-FOR-COMMAND
   Arg 3 (DATA): (:OPEN "Probe" NIL NIL ">sys>r6>l-sys>sysdef.lisp.NEWEST" :PROBE NIL)

(:METHOD FS:NFILE-SERVER-UNIT :SEND-IN-COMMAND-CONDITION-ENVIRONMENT):  (P.C. = 54)
   Arg 0 (SELF): #<NFILE-SERVER-UNIT 30300730>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:NFILE-SERVER-UNIT -- 15. IV's, 0. FL's 104167041>
   Arg 2 (OPERATION): :SEND-IN-COMMAND-CONDITION-ENVIRONMENT
   Arg 3 (MESSAGE): :SEND-AND-WAIT-FOR-COMMAND
   Arg 4 (DATA): (:OPEN "Probe" NIL NIL ">sys>r6>l-sys>sysdef.lisp.NEWEST" :PROBE NIL)

(:METHOD FS:NFILE-SERVER-UNIT :COMMAND):  (P.C. = 7)
   Arg 0 (SELF): #<NFILE-SERVER-UNIT 30300730>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:NFILE-SERVER-UNIT -- 15. IV's, 0. FL's 104167041>
   Arg 2 (OPERATION): :COMMAND
   Rest arg (DATA): (:OPEN "Probe" NIL NIL ">sys>r6>l-sys>sysdef.lisp.NEWEST" :PROBE NIL)

FS:NFILE-KEYWORD-LIST-CALLER:  (P.C. = 165)
   Arg 0 (INSTANCE): #<NFILE-SERVER-UNIT 30300730>
   Arg 1 (CMDNAME): :OPEN
   Arg 2 (WHOSTATE): "Probe"
   Arg 3 (DATA-CHANNEL): NIL
   Arg 4 (CONSTANT-ARGS): (NIL ">sys>r6>l-sys>sysdef.lisp.NEWEST" :PROBE NIL)
   Local 4 (CONSTANT-ARGS): NIL
   Arg 5 (KEYWORD-VALUE-PAIRS): (:BYTE-SIZE NIL :DELETED NIL :RAW NIL :SUPER-IMAGE NIL :PRESERVE-DATES NIL ...)
   Local 5 (KEYWORD-VALUE-PAIRS): NIL

(:METHOD FS:NFILE-ACCESS-PATH :OPEN):  (P.C. = 375)
   Arg 0 (SELF): #<LMFS-NFILE-ACCESS-PATH B using NEW-FILE 30300717>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:NFILE-ACCESS-PATH -- 4. IV's, 2. FL's 121346410>
   Arg 2 (OPERATION): :OPEN
   Arg 3 (REAL-PATHNAME): #<LMFS-PATHNAME "B:>sys>r6>l-sys>sysdef.lisp">
   Arg 4 (COMMAND-PATHNAME): #<LOGICAL-PATHNAME "SYS: L-SYS; SYSDEF.LISP.NEWEST">
   Rest arg: (:DIRECTION :PROBE)

(:METHOD FS:ACTIVE-PATHNAME-MIXIN :OPEN):  (P.C. = 14)
   Arg 0 (SELF): #<LMFS-PATHNAME "B:>sys>r6>l-sys>sysdef.lisp">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:ACTIVE-PATHNAME-MIXIN -- 1. IV's, 0. FL's 104225115>
   Arg 2 (OPERATION): :OPEN
   Arg 3 (PATHNAME): #<LOGICAL-PATHNAME "SYS: L-SYS; SYSDEF.LISP.NEWEST">
   Rest arg (OPTIONS): (:DIRECTION :PROBE)

(:DEFUN-METHOD FS:LOGICAL-PATHNAME-PASS-ON):  (P.C. = 10)
   Arg 0 (SELF): #<LOGICAL-PATHNAME "SYS: L-SYS; SYSDEF.LISP.NEWEST">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:LOGICAL-PATHNAME -- 8. IV's, 3. FL's 104206646>
   Arg 2 (MESSAGE): :OPEN
   Rest arg (REST): (#<LOGICAL-PATHNAME "SYS: L-SYS; SYSDEF.LISP.NEWEST"> :DIRECTION :PROBE)

(:METHOD FS:LOGICAL-PATHNAME :OPEN):  (P.C. = 10)
   Arg 0 (SELF): #<LOGICAL-PATHNAME "SYS: L-SYS; SYSDEF.LISP.NEWEST">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:LOGICAL-PATHNAME -- 8. IV's, 3. FL's 104206646>
   Arg 2 (OPERATION): :OPEN
   Rest arg (.ARGS.): (#<LOGICAL-PATHNAME "SYS: L-SYS; SYSDEF.LISP.NEWEST"> :DIRECTION :PROBE)

FS:COMMON-LISP-OPEN:  (P.C. = 450)
   Arg 0 (PATHNAME): #<LOGICAL-PATHNAME "SYS: L-SYS; SYSDEF.LISP.NEWEST">
   Arg 1 (KEYWORD-ARGS): (:DIRECTION :PROBE)

OPEN:  (P.C. = 257)
   Arg 0 (PATHNAME): #<LOGICAL-PATHNAME "SYS: L-SYS; SYSDEF">
   Local 0 (PATHNAME): #<LOGICAL-PATHNAME "SYS: L-SYS; SYSDEF.LISP.NEWEST">
   Rest arg (KEYWORD-ARGS): (:DIRECTION :PROBE)

PROBEF:  (P.C. = 57)
   Arg 0 (FILE): #<LOGICAL-PATHNAME "SYS: L-SYS; SYSDEF">

SI:*EVAL:  (P.C. = 403)
   Arg 0 (FORM): (PROBEF (SI:GET-SOURCE-FILE-NAME (QUOTE ARRAY-ELEMENTS-PER-Q)))
   Local 0 (FORM): NIL
   --Defaulted args:--
   Arg 1 (ENV): NIL
   Arg 2 (HOOK): NIL

(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0):  (P.C. = 152)
   Arg 0 (.LEXICAL-ENVIRONMENT-POINTER.): #<DTP-LOCATIVE 500101>

TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
   Arg 0 (NEW-MODE): :BLAST
   Arg 1 (STREAM): #:TERMINAL-IO-SYN-STREAM
   Arg 2 (CONTINUATION): #<LEXICAL-CLOSURE (:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0) 500106>

SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
   Arg 0 (NAME): "Lisp Top Level"
   Arg 1 (ABORT-FUNCTION): NIL
   Arg 2 (READ-FUNCTION): NIL
   Arg 3 (EVAL-FUNCTION): NIL
   Arg 4 (PRINT-FUNCTION): NIL

SI:LISP-COMMAND-LOOP:  (P.C. = 67)
   Arg 0: #<LISP-LISTENER Lisp Listener 1 43200216 exposed>
   Rest arg: (:NAME "Lisp Top Level")

SI:LISP-TOP-LEVEL1:  (P.C. = 5)
   Arg 0 (STREAM): #<LISP-LISTENER Lisp Listener 1 43200216 exposed>

SI:LISP-TOP-LEVEL2:  (P.C. = 5)

SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
   Arg 0 (IGNORE): NIL
15-Apr-85 08:24:34-EST,2804;000000000000
Received: from MIT-JIMI by MIT-OZ via Chaosnet; 15 Apr 85 08:24-EST
Date: Monday, 15 April 1985, 08:24-EST
From: David Vinayak Wallace <Gumby at MIT-MC>
Subject: :SEND-IF-HANDLES ought to work with case methods
To: BUG-LISPM at OZ
Message-ID: <850415082409.1.GUMBY@JIMI.MIT>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 8.1,
microcode TMC5-MIC 319, on Lisp Machine Jimi Hendrix:
Warm booted from: 3600 Ethernet Receiver.

I have a flavour defined with a :case combination for :write-self.
:send-if-handles only checks to see if :write-self exists; not to see if
that COMBINATION exists.  This is a royal pain.

(the case below was to see if it worked; :grozzox is a random string).

>>Error: :grozzox is unknown case of message :write-self
While in the function (:method db :combined :write-self)  (:method si:vanilla-flavor :send-if-handles)  send

(:method db :combined :write-self):  (P.C. = 74)
   Arg 0 (self): #<DB of nil>
   Arg 1 (self-mapping-table): #<Map to flavor db -- 21. IV's, 0. FL's 21166044>
   Arg 2 (.operation.): :write-self
   Rest arg (.daemon-caller-args.): (:grozzox)
   Local 4 (.selectq-item.): :grozzox

(:method si:vanilla-flavor :send-if-handles):  (P.C. = 41)
   Arg 0 (self): #<DB of nil>
   Arg 1 (self-mapping-table): si:vanilla-flavor
   Arg 2 (operation): :send-if-handles
   Arg 3 (op): :write-self
   Rest arg (to-send): (:grozzox)

send:  (P.C. = 6)
   Arg 0 (object): #<DB of nil>
   Arg 1 (message-name): :send-if-handles
   Rest arg (arguments): (:write-self :grozzox)

si:*eval:  (P.C. = 403)
   Arg 0 (form): (send foo :send-if-handles :write-self :grozzox)
   Local 0 (form): nil
   --Defaulted args:--
   Arg 1 (env): nil
   Arg 2 (hook): nil

(:internal si:lisp-command-loop-internal 0.):  (P.C. = 152)
   Arg 0 (.lexical-environment-pointer.): #<DTP-LOCATIVE 43440262>

tv:with-notification-mode-internal:  (P.C. = 16)
   Arg 0 (new-mode): :blast
   Arg 1 (stream): #:terminal-io-syn-stream
   Arg 2 (continuation): #<LEXICAL-CLOSURE (:internal si:lisp-command-loop-internal 0.) 43440267>

si:lisp-command-loop-internal:  (P.C. = 54)
   Arg 0 (name): "Breakpoint zmacs"
   Arg 1 (abort-function): si:break-herald
   Arg 2 (read-function): si:break-read-function
   --Defaulted args:--
   Arg 3 (eval-function): nil
   Arg 4 (print-function): nil

si:break-internal:  (P.C. = 176)
   Arg 0 (tag): zwei:zmacs
   Local 0 (tag): "Breakpoint zmacs"
   Arg 1 (conditional): t

Rest of stack:
zwei:com-break:  (P.C. = 64)
zwei:command-execute:  (P.C. = 57)
zwei:process-command-char:  (P.C. = 14)
(:method zwei:editor :edit):  (P.C. = 233)
(:method zwei:top-level-editor :combined :edit):  (P.C. = 60)
zwei:zmacs-window-top-level:  (P.C. = 51)
si:process-top-level:  (P.C. = 54)
15-Apr-85 11:25:44-EST,3112;000000000000
Received: from MIT-ROBOT-5 by MIT-OZ via Chaosnet; 15 Apr 85 11:25-EST
Date: Monday, 15 April 1985, 11:25-EST
From: Ken Haase <KWH at OZ>
Subject: Possible interval stream bug...
To: BUG-LISPM at OZ
Message-ID: <850415112523.3.KWH@ROBOT-5.MIT>

In Symbolics 3670 Release 6.0, IP-TCP 29.0, AISite 8.1,
Experimental Meta Representation Langauge 2.15,
microcode TMC5-IO4-FPA-MIC 319, on Lisp Machine Robot-5:

:FRESH-LINE, sent to an interval stream pointing at the end of a buffer,
erred out in this way.  This resulted from the INDEX instance variable
of the stream being NIL.  It may be that my own use of ZWEI internals
made an interval stream with an INDEX of NIL, but I sort of doubt it.

>>Trap: The argument given to the ZEROP instruction, NIL, was not a number.
While in the function (:METHOD ZWEI:INTERVAL-STREAM :FRESH-LINE)  PP:CONDITIONAL-NEWLINE  PP:NEW-&-DIRECTIVE

(:METHOD ZWEI:INTERVAL-STREAM :FRESH-LINE):  (P.C. = 2)
   Arg 0 (SELF): #[#<INTERVAL-WITH-FONTS-STREAM 23160231>]
   Arg 1 (SELF-MAPPING-TABLE): #[#<Map to flavor ZWEI:INTERVAL-STREAM -- 8. IV's, 1. FL's 104523642>]
   Arg 2 (OPERATION): :FRESH-LINE

PP:CONDITIONAL-NEWLINE:  (P.C. = 103)  (from SYS: LMLIB; PP-6)
   Arg 0 (COUNT): 1
   Arg 1 (STREAM): #[#<INTERVAL-WITH-FONTS-STREAM 23160231>]
   Arg 2 (KIND): :FRESH

PP:NEW-&-DIRECTIVE:  (P.C. = 10)  (from SYS: LMLIB; PP-6)
   Arg 0 (PARAMS): NIL

FORMAT:FORMAT-CTL-OP:  (P.C. = 33)
   Arg 0 (OP): FORMAT:&
   Arg 1 (ARGS): (#[#<DTP-CLOSURE 25012106>])
   Arg 2 (PARAMS): NIL

FORMAT:FORMAT-CTL-STRING:  (P.C. = 101)
   Arg 0 (ARGS): (#[#<DTP-CLOSURE 25012106>])
   Arg 1: "~&~@!;;;  ~@;~S~.~&"

FORMAT:  (P.C. = 66)
   Arg 0 (STREAM): #[#<INTERVAL-WITH-FONTS-STREAM 23160231>]
   Arg 1: "~&~@!;;;  ~@;~S~.~&"
   Rest arg (ARGS): (#[#<DTP-CLOSURE 25012106>])

ZWEI:GOBBLE-READ-EVAL-PRINT:  (P.C. = 100)  (from SYS: LMLIB; GOBBLE)
   Arg 0 (STREAM): #[#<INTERVAL-WITH-FONTS-STREAM 23160231>]

ZWEI:GOBBLE:  (P.C. = 21)  (from SYS: LMLIB; GOBBLE)
   Arg 0 (FROM): ("terminal-io" 0)
   Arg 1 (TO): ("terminal-io" 11)

ZWEI:COM-GOBBLE:  (P.C. = 13)  (from SYS: LMLIB; GOBBLE)

ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
   Arg 0 (COMMAND): ZWEI:COM-GOBBLE
   Arg 1 (CHAR): 148
   Arg 2 (PREFIX-CHAR): NIL
   Arg 3 (HOOK-LIST): (ZWEI:EXPAND-ABBREV-HOOK)

ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
   Arg 0 (CH): 148

(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 233)
   Arg 0 (SELF): #[#<ZMACS-TOP-LEVEL-EDITOR 121171573>]
   Arg 1 (SELF-MAPPING-TABLE): #[#<Map to flavor ZWEI:EDITOR -- 12. IV's, 0. FL's 142346020>]
   Arg 2 (OPERATION): :EDIT
   --Defaulted args:--
   Arg 3 (TOP-LEVEL-P): T
   Arg 4 (DESCRIPTION): NIL

(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 60)
   Arg 0 (SELF): #[#<ZMACS-TOP-LEVEL-EDITOR 121171573>]
   Arg 1 (SELF-MAPPING-TABLE): #[#<Map to flavor ZWEI:TOP-LEVEL-EDITOR -- 13. IV's, 1. FL's 142345776>]
   Arg 2 (.OPERATION.): :EDIT
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 51)

SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
   Arg 0 (IGNORE): NIL
15-Apr-85 13:53:06-EST,8142;000000000000
Received: from MIT-MORRISON by MIT-OZ via Chaosnet; 15 Apr 85 13:52-EST
Date: Monday, 15 April 1985, 13:52-EST
From: jcma@MIT-MC
Subject: Flavor bug
To: BUG-lispm@OZ
Message-ID: <850415135203.4.JCMA@MORRISON.MIT>

In Symbolics 3600 NIL in Release 6.0, IP-TCP 29.0, AISite 8.1,
microcode TMC5-MIC 319, FEP 22, on Lisp Machine Jim Morrison:


Gee, defining RELATUS:PARSE-FERROR seems to have clobbered DBG:PARSE-FERROR!
Is something broken in the package system, or what?

>>Error: Flavor PARSE-FERROR does not handle the init keyword :CORRECT-INPUT
While in the function INSTANTIATE-FLAVOR  MAKE-CONDITION  DBG:GET-CONDITION

INSTANTIATE-FLAVOR:  (P.C. = 425)
   Arg 0 (FLAVOR-NAME): PARSE-FERROR
   Arg 1 (INIT-PLIST): #<DTP-LOCATIVE 36241173>
   Arg 2 (SEND-INIT-MESSAGE-P): T
   Arg 3 (RETURN-UNHANDLED-KEYWORDS-P): NIL
   Arg 4 (AREA-TO-CONS-INSTANCE-IN): 4
   Local 5 (FL): #<FLAVOR PARSE-FERROR 76361265>
   Local 6 (UNHANDLED-KEYWORDS): (:CORRECT-INPUT)
   Local 7 (INSTANCE): #<PARSE-FERROR 44601614>
   Local 8 (VARS): (STATUS DBG:PROCEED-TYPES RELATUS:FORMAT-STRING RELATUS:FORMAT-ARGS RELATUS:SENTENCE-OBJECT RELATUS:PARSE-BUG-RECIPIENT DBG:SPECIAL-COMMANDS RELATUS:BUG-RECIPIENT)
   Local 9 (INIT-INFO): (((:PROCEED-TYPES 2) (:SPECIAL-COMMANDS 7) (:PARSE-BUG-RECIPIENT 6) (:SENTENCE-OBJECT 5) (:FORMAT-ARGS 4) (:FORMAT-STRING 3)) ((RELATUS:FORMAT-ARGS 4 NIL) (RELATUS:SENTENCE-OBJECT 5 RELATUS:*SENTENCE-FOR-PARSE-ERRORS-TO-EXAMINE*) (RELATUS:PARSE-BUG-RECIPIENT 6 "RELATUS-PARSER") (STATUS 1 (QUOTE :JUST-CREATED)) (RELATUS:BUG-RECIPIENT 8 (QUOTE RELATUS:BETA-TEST))) NIL NIL NIL NIL)
   Local 10 (INITABLE-IVS): ((:PROCEED-TYPES 2) (:SPECIAL-COMMANDS 7) (:PARSE-BUG-RECIPIENT 6) (:SENTENCE-OBJECT 5) (:FORMAT-ARGS 4) (:FORMAT-STRING 3))
   Local 11 (REQUIRED-KEYWORDS): NIL

MAKE-CONDITION:  (P.C. = 15)
   Arg 0 (CONDITION-NAME): PARSE-FERROR
   Rest arg (INIT-OPTIONS): (:CORRECT-INPUT T :FORMAT-STRING "~S does not complete to a valid ~A." :FORMAT-ARGS ("we" "command"))

DBG:GET-CONDITION:  (P.C. = 10)
   Arg 0 (FLAVOR): PARSE-FERROR
   Arg 1 (INIT-OPTIONS): (:CORRECT-INPUT T :FORMAT-STRING "~S does not complete to a valid ~A." :FORMAT-ARGS ("we" "command"))

ERROR:  (P.C. = 33)
   Arg 0 (FLAVOR): PARSE-FERROR
   Rest arg (INIT-OPTIONS): (:CORRECT-INPUT T :FORMAT-STRING "~S does not complete to a valid ~A." :FORMAT-ARGS ("we" "command"))

SI:COMPLETE-MULTIWORD-TOKEN:  (P.C. = 103)
   Arg 0 (STREAM): #:TERMINAL-IO-SYN-STREAM
   Arg 1 (START-OF-TOKEN): 1
   Arg 2 (TABLE): #<COMPLETION-TABLE 121373342>
   Arg 3 (ALL-P): NIL
   Arg 4 (TYPE): "command"
   Arg 5 (FUNCTION): NIL

SI:READ-MULTIWORD-TOKEN:  (P.C. = 173)
   Arg 0 (STREAM): #:TERMINAL-IO-SYN-STREAM
   Arg 1 (COMPLETION-TABLE): #<COMPLETION-TABLE 121373342>
   Arg 2 (TYPE): "command"
   Arg 3: (160)
   Arg 4: (32 138)
   --Defaulted args:--
   Arg 5 (COMPLETION-FUNCTION): NIL

SI:READ-COMMAND-INTERNAL:  (P.C. = 133)
   Arg 0 (STREAM): #:TERMINAL-IO-SYN-STREAM
   Arg 1 (COMMAND-TABLE): #<COMTAB User 121373326>

SI:READ-COMMAND-DISPATCH:  (P.C. = 7)
   Arg 0 (STREAM): #:TERMINAL-IO-SYN-STREAM
   Arg 1 (COMMAND-TABLE): #<COMTAB User 121373326>

(:INTERNAL READ-COMMAND-OR-FORM 0):  (P.C. = 31)
   Arg 0 (.LEXICAL-ENVIRONMENT-POINTER.): #<DTP-LOCATIVE 36240656>

(:INTERNAL SI:CP-INPUT-EDITING 0):  (P.C. = 75)
   Arg 0 (.LEXICAL-ENVIRONMENT-POINTER.): #<DTP-LOCATIVE 36240715>

SI:WITH-INPUT-EDITING-INTERNAL:  (P.C. = 25)
   Arg 0 (STREAM): #:TERMINAL-IO-SYN-STREAM
   Arg 1 (CONTINUATION): #<LEXICAL-CLOSURE (:INTERNAL SI:CP-INPUT-EDITING 0) 36240721>
   Arg 2 (ACTIVATORS): NIL
   Arg 3 (LINE-P): NIL
   Arg 4 (INPUT-EDITOR-OPTIONS): NIL

SI:CP-INPUT-EDITING:  (P.C. = 76)
   Arg 0 (STREAM): #:TERMINAL-IO-SYN-STREAM
   Arg 1 (PROMPT): "JM: "
   Arg 2 (BLANK-LINE-MODE): :REPROMPT
   Arg 3 (CONTINUATION): #<LEXICAL-CLOSURE (:INTERNAL READ-COMMAND-OR-FORM 0) 36240660>

READ-COMMAND-OR-FORM:  (P.C. = 146)
   Arg 0 (STREAM): #:TERMINAL-IO-SYN-STREAM
   Rest arg: (:DISPATCH-MODE :FORM-PREFERRED)

(:INTERNAL (:INTERNAL SI:CP-COMMAND-LOOP-BREAK-READ-FUNCTION 0) 0):  (P.C. = 5)
   Arg 0 (STREAM): #:TERMINAL-IO-SYN-STREAM

(:INTERNAL READ-OR-CHARACTER 0):  (P.C. = 75)
   Arg 0 (.LEXICAL-ENVIRONMENT-POINTER.): #<DTP-LOCATIVE 36240566>

SI:WITH-INPUT-EDITING-INTERNAL:  (P.C. = 25)
   Arg 0 (STREAM): #:TERMINAL-IO-SYN-STREAM
   Arg 1 (CONTINUATION): #<LEXICAL-CLOSURE (:INTERNAL READ-OR-CHARACTER 0) 36240571>
   Arg 2 (ACTIVATORS): NIL
   Arg 3 (LINE-P): NIL
   Arg 4 (INPUT-EDITOR-OPTIONS): NIL

READ-OR-CHARACTER:  (P.C. = 100)
   Arg 0 (DELIMITERS): (146 145 131 346 129 641)
   Arg 1 (STREAM): #:TERMINAL-IO-SYN-STREAM
   Arg 2 (READER): #<DTP-COMPILED-FUNCTION (:INTERNAL (:INTERNAL SI:CP-COMMAND-LOOP-BREAK-READ-FUNCTION 0) 0) 32071264>

(:INTERNAL SI:CP-COMMAND-LOOP-BREAK-READ-FUNCTION 0):  (P.C. = 5)

(:INTERNAL SI:CP-INPUT-EDITING 0):  (P.C. = 75)
   Arg 0 (.LEXICAL-ENVIRONMENT-POINTER.): #<DTP-LOCATIVE 36240405>

(:DEFUN-METHOD SI:INPUT-EDITOR-READ):  (P.C. = 53)
   Arg 0 (SELF): #<EDITOR-TYPEOUT-WINDOW Editor Typeout Window 5 43241354 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:INTERACTIVE-STREAM -- 20. IV's, 2. FL's 105101600>
   Arg 2 (READ-FUNCTION): #<LEXICAL-CLOSURE (:INTERNAL SI:CP-INPUT-EDITING 0) 36240411>
   Arg 3 (READ-ARGS): NIL

(:METHOD SI:INTERACTIVE-STREAM :INPUT-EDITOR):  (P.C. = 131)
   Arg 0 (SELF): #<EDITOR-TYPEOUT-WINDOW Editor Typeout Window 5 43241354 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:INTERACTIVE-STREAM -- 20. IV's, 2. FL's 105101600>
   Arg 2 (OPERATION): :INPUT-EDITOR
   Arg 3 (READ-FUNCTION): #<LEXICAL-CLOSURE (:INTERNAL SI:CP-INPUT-EDITING 0) 36240411>
   Rest arg (READ-ARGS): NIL

SI:WITH-INPUT-EDITING-INTERNAL:  (P.C. = 113)
   Arg 0 (STREAM): #:TERMINAL-IO-SYN-STREAM
   Arg 1 (CONTINUATION): #<LEXICAL-CLOSURE (:INTERNAL SI:CP-INPUT-EDITING 0) 36240411>
   Arg 2 (ACTIVATORS): NIL
   Arg 3 (LINE-P): NIL
   Arg 4 (INPUT-EDITOR-OPTIONS): NIL

SI:CP-INPUT-EDITING:  (P.C. = 76)
   Arg 0 (STREAM): #:TERMINAL-IO-SYN-STREAM
   Arg 1 (PROMPT): "JM: "
   Arg 2 (BLANK-LINE-MODE): :IGNORE
   Arg 3 (CONTINUATION): #<DTP-COMPILED-FUNCTION (:INTERNAL SI:CP-COMMAND-LOOP-BREAK-READ-FUNCTION 0) 32071252>

SI:CP-COMMAND-LOOP-BREAK-READ-FUNCTION:  (P.C. = 76)

SI:BREAK-READ-FUNCTION:  (P.C. = 3)

(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0):  (P.C. = 105)
   Arg 0 (.LEXICAL-ENVIRONMENT-POINTER.): #<DTP-LOCATIVE 36240262>

TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
   Arg 0 (NEW-MODE): :BLAST
   Arg 1 (STREAM): #:TERMINAL-IO-SYN-STREAM
   Arg 2 (CONTINUATION): #<LEXICAL-CLOSURE (:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0) 36240267>

SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
   Arg 0 (NAME): "Breakpoint ZMACS"
   Arg 1 (ABORT-FUNCTION): SI:BREAK-HERALD
   Arg 2 (READ-FUNCTION): SI:BREAK-READ-FUNCTION
   --Defaulted args:--
   Arg 3 (EVAL-FUNCTION): NIL
   Arg 4 (PRINT-FUNCTION): NIL

SI:BREAK-INTERNAL:  (P.C. = 176)
   Arg 0 (TAG): ZWEI:ZMACS
   Local 0 (TAG): "Breakpoint ZMACS"
   Arg 1 (CONDITIONAL): T

ZWEI:COM-BREAK:  (P.C. = 64)

ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
   Arg 0 (COMMAND): ZWEI:COM-BREAK
   Arg 1 (CHAR): 129
   Arg 2 (PREFIX-CHAR): NIL
   Arg 3 (HOOK-LIST): (ZWEI:EXPAND-ABBREV-HOOK)

ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
   Arg 0 (CH): 129

(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 233)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 121171573>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:EDITOR -- 12. IV's, 0. FL's 142346020>
   Arg 2 (OPERATION): :EDIT
   --Defaulted args:--
   Arg 3 (TOP-LEVEL-P): T
   Arg 4 (DESCRIPTION): NIL

(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 60)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 121171573>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:TOP-LEVEL-EDITOR -- 13. IV's, 1. FL's 142345776>
   Arg 2 (.OPERATION.): :EDIT
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 51)

SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
   Arg 0 (IGNORE): NIL
15-Apr-85 14:06:24-EST,575;000000000000
Received: from MIT-MORRISON by MIT-OZ via Chaosnet; 15 Apr 85 14:05-EST
Date: Monday, 15 April 1985, 14:04-EST
From: jcma@MIT-MC
Subject: DBG:PARSE-FERROR
To: BUG-LISPM@OZ
Message-ID: <850415140453.6.JCMA@MORRISON.MIT>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 8.1,
microcode TMC5-MIC 319, FEP 22, on Lisp Machine Jim Morrison:

After my flavor, RELATUS:PARSE-FERROR, clobbered it, I redefined
DBG:PARSE-FERROR using CONTROL-SHIFT-C in ZMACS in order to replace the
original definition. There was no redefinition warning.  Is this a bug or a
feature?
16-Apr-85 15:58:07-EST,1384;000000000000
Mail-From: HENRY created at 16-Apr-85 15:57:58
Date: Tue, 16 Apr 1985  15:57 EST
Message-ID: <HENRY.12103679628.BABYL@MIT-OZ>
From: HENRY@MIT-OZ
To:   John Kulp <JLK@SCRC-STONY-BROOK>
Cc:   Bug-Lispm@MIT-OZ
Subject: Sources
In-reply-to: Msg of 10 Apr 1985 17:42-EST from John Kulp <JLK at SCRC-STONY-BROOK>


    Date: Wednesday, 10 April 1985, 17:42-EST
    From: John Kulp <JLK at SCRC-STONY-BROOK>

    The arguments you are making apply to the situation where we would
    not distribute any sources.  We decided only to withold sources which
    in our opinion constitute our UNIQUE competitive edge AND are things
    that 99% of our customers would never care about (e.g. the EGC).

The "unique competitive edge" criterion is spurious. As time goes on, the 
various Lisp companies' systems will diverge, so more and more of
the system will be considered "unique", and you'll release less and less
of the system. This is a dangerous trend that we want to address immediately.
I concede your argument for non-user visible stuff like the microcode and 
garbage collector, but anything that affects the user interface [the compiler,
Zmail, document examiner] is stuff that your users DO care about.
You should realize that it is part of your "unique competitive edge" that 
sources for the system ARE available. 

    Am I missing something?

Yes.

16-Apr-85 19:24:47-EST,4917;000000000000
Received: from MIT-ROBOT-5 by MIT-OZ via Chaosnet; 16 Apr 85 19:24-EST
Date: Tuesday, 16 April 1985, 19:23-EST
From: Ken Haase <KWH at OZ>
Subject: Shouldn't this work?
To: BUG-LISPM at OZ
Message-ID: <850416192320.1.KWH@ROBOT-5.MIT>

In Symbolics 3670 Release 6.0, IP-TCP 29.0, AISite 8.2,
Experimental Meta Representation Langauge 2.15,
microcode TMC5-IO4-FPA-MIC 319, on Lisp Machine Robot-5:

;;; Evaluating the forms:

(defsubst foo (x)
  (do ((x x (dbg:check-arg-1 'x x "a number")))
      ((numberp x) (+ x 3))))

;;; and 
(macroexpand '(foo y))

produces the following error-- it seems to me that this makes sense as a
subst, providing you know not to substitute for the inner X's, which
should be able to be resolved at macro-expand time; in any case, the
binding of X should also be able to be caught at DEFSUBST time, rather
than waiting for the attempt to macroexpand FOO.

>>Error: Attempt to set or bind the SUBST parameter X.
While in the function (:INTERNAL LT::LET-SUBST-COPYFORMS 0 LT::LET-SUBST-COPY)  LT::MAPFORMS-CALL  LT::MAPFORMS-BIND

(:INTERNAL LT::LET-SUBST-COPYFORMS 0 LT::LET-SUBST-COPY):  (P.C. = 33)
   Arg 0 (.LEXICAL-ENVIRONMENT-POINTER.): (((X . Y)))
   Arg 1 (FORM): X
   Arg 2 (KIND): LET
   Arg 3 (IGNORE): LET

LT::MAPFORMS-CALL:  (P.C. = 12)
   Arg 0 (FORM): X
   Arg 1 (KIND): LET
   Arg 2 (USAGE): LET
   --Defaulted args:--
   Arg 3 (FUNCTION): #<LEXICAL-CLOSURE (:INTERNAL LT::LET-SUBST-COPYFORMS 0 LT::LET-SUBST-COPY) 20733147>

LT::MAPFORMS-BIND:  (P.C. = 74)
   Arg 0 (BIND): (X X (DBG:CHECK-ARG-1 'X X "a number"))
   Arg 1 (PARALLEL-BINDING-P): T
   Arg 2 (ALLOW-SUPPLIED-P): IGNORE
   Arg 3 (CONTAINING-FORM): (DO ((X X (DBG:CHECK-ARG-1 'X X "a number")))
                                ((NUMBERP X) (+ X 3)))

LT::MAPFORMS-DO:  (P.C. = 51)
   Arg 0 (ORIGINAL-FORM): (DO ((X X (DBG:CHECK-ARG-1 'X X "a number"))) ((NUMBERP X) (+ X 3)))
   Arg 1 (CURRENT-FORM): (DO ((X X (DBG:CHECK-ARG-1 'X X "a number"))) ((NUMBERP X) (+ X 3)))
   Arg 2 (BLOCK-NAME): NIL
   Arg 3 (TAIL1): (((X X (DBG:CHECK-ARG-1 'X X "a number"))) ((NUMBERP X) (+ X 3)))
   Arg 4 (USAGE): EVAL
   Arg 5 (PARALLEL-BINDING-P): T

(:PROPERTY DO LT:MAPFORMS):  (P.C. = 12)
   Arg 0 (ORIGINAL-FORM): (DO ((X X (DBG:CHECK-ARG-1 'X X "a number"))) ((NUMBERP X) (+ X 3)))
   Arg 1 (FORM): (DO ((X X (DBG:CHECK-ARG-1 'X X "a number"))) ((NUMBERP X) (+ X 3)))
   Arg 2 (USAGE): EVAL

LT:COPYFORMS-1:  (P.C. = 220)
   Arg 0 (ORIGINAL-FORM): (DO ((X X (DBG:CHECK-ARG-1 'X X "a number"))) ((NUMBERP X) (+ X 3)))
   Arg 1 (USAGE): EVAL

LT:COPYFORMS:  (P.C. = 63)
   Arg 0: #<LEXICAL-CLOSURE (:INTERNAL LT::LET-SUBST-COPYFORMS 0 LT::LET-SUBST-COPY) 20733147>
   Arg 1 (FORM): (DO ((X X (DBG:CHECK-ARG-1 'X X "a number"))) ((NUMBERP X) (+ X 3)))
   Rest arg: NIL

LT::LET-SUBST-COPYFORMS:  (P.C. = 15)
   Arg 0: ((X . Y))
   Arg 1 (BODY): (DO ((X X (DBG:CHECK-ARG-1 'X X "a number"))) ((NUMBERP X) (+ X 3)))

LT::EXPAND-SUBST-DEFINITION-INTERNAL:  (P.C. = 17)
   Arg 0 (VARS): (X)
   Arg 1 (VALS): (Y)
   Arg 2 (VARNOTES): NIL
   Arg 3 (BODY): (DO ((X X (DBG:CHECK-ARG-1 'X X "a number"))) ((NUMBERP X) (+ X 3)))

SYS:EXPAND-SUBST-DEFINITION:  (P.C. = 220)
   Arg 0 (SUBST): (SYS:SUBST-DEFINITION (NAMED-SUBST FOO (X) (DO (**) (** **))))
   Local 0 (SUBST): (FOO (X) (DO ((X X **)) ((NUMBERP X) (+ X 3))))
   Arg 1 (FORM): (FOO Y)

SI:MACROEXPAND-1-INTERNAL:  (P.C. = 234)
   Arg 0 (MACRO-CALL): (FOO Y)
   Arg 1 (ENV): NIL
   Arg 2 (RUN-STYLE-CHECKERS-P): NIL
   Arg 3 (DONT-EXPAND-SPECIAL-FORMS): NIL

MACROEXPAND:  (P.C. = 11)
   Arg 0 (MACRO-CALL): (FOO Y)
   --Defaulted args:--
   Arg 1 (ENV): NIL
   Arg 2 (DONT-EXPAND-SPECIAL-FORMS): NIL

SI:*EVAL:  (P.C. = 403)
   Arg 0 (FORM): (MACROEXPAND '(FOO Y))
   Local 0 (FORM): NIL
   Arg 1 (ENV): NIL
   Arg 2 (HOOK): NIL

TOOLS:EVAL-INSTANCE:  (P.C. = 27)  (from SYS: LMLIB; TOOLS)
   Arg 0 (FORM): (MACROEXPAND '(FOO Y))
   --Defaulted args:--
   Arg 1 (ENVIRONMENT): NIL
   Arg 2 (EVALHOOK-initialization): NIL

(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0):  (P.C. = 152)
   Arg 0 (.LEXICAL-ENVIRONMENT-POINTER.): #<DTP-LOCATIVE 500047>

TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
   Arg 0 (NEW-MODE): :BLAST
   Arg 1 (STREAM): #:TERMINAL-IO-SYN-STREAM
   Arg 2 (CONTINUATION): #<LEXICAL-CLOSURE (:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0) 500054>

SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
   Arg 0 (NAME): "Lisp Top Level"
   Arg 1 (ABORT-FUNCTION): NIL
   Arg 2 (READ-FUNCTION): NIL
   Arg 3 (EVAL-FUNCTION): NIL
   Arg 4 (PRINT-FUNCTION): NIL

SI:LISP-COMMAND-LOOP:  (P.C. = 67)
   Arg 0: #<LISP-LISTENER Lisp Listener 1 43200216 exposed>
   Rest arg: (:NAME "Lisp Top Level")

SI:LISP-TOP-LEVEL1:  (P.C. = 5)
   Arg 0 (STREAM): #<LISP-LISTENER Lisp Listener 1 43200216 exposed>

SI:LISP-TOP-LEVEL:  (P.C. = 7)
16-Apr-85 20:04:52-EST,1382;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 16 Apr 85 20:04-EST
Received: from MIT-MOON by MIT-MC via Chaosnet; 16 APR 85  01:07:01 EST
Date: Tue, 16 Apr 85 01:05 EST
From: David Vinayak Wallace <Gumby@MIT-MC.ARPA>
Subject: copying files to ITS
To: David A. Moon <Moon@SCRC-STONY-BROOK.ARPA>
cc: BUG-LISPM%MIT-OZ@MIT-MC.ARPA
In-Reply-To: <850415202444.6.MOON@EUPHRATES.SCRC.Symbolics.COM>
Message-ID: <850416010542.7.GUMBY@MOON.MIT>

    Date: Mon, 15 Apr 85 20:24 EST
    From: David A. Moon <Moon@SCRC-STONY-BROOK.ARPA>

	From: David Vinayak Wallace <Gumby at MIT-MC>
	Using copyf to copy files from/to ITS complains that it can't set
	creation-date nor author because they're each an "Unknown property"

	From: David Vinayak Wallace <Gumby at MIT-MC>
	I just tried to change the "@" flag with DIRED in a file on EE.  It
	barfed with "Unknown property."  I used DIRED under 5.2 to set it!

    I expect you customized your environment in such a way that the property
    names sent over the Chaosnet stream to the file server were not printed
    correctly.  Depending on what you did, this could be a bug in the QFILE
    file access program.  Let me guess: you set CL:*PRINT-CASE* to :DOWNCASE.
    Is my guess lucky?

You are exactly right.  I just discovered that *print-case* isn't
documented, so I suppose I shouldn't bitch to loudly.  But...
16-Apr-85 20:05:27-EST,1420;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 16 Apr 85 20:04-EST
Received: from MIT-MOON by MIT-MC via Chaosnet; 16 APR 85  01:07:57 EST
Date: Tue, 16 Apr 85 01:06 EST
From: David Vinayak Wallace <Gumby@MIT-MC.ARPA>
Subject: copying files to ITS
To: David A. Moon <Moon@SCRC-STONY-BROOK.ARPA>
cc: BUG-LISPM@MIT-MC.ARPA
In-Reply-To: <850415202444.6.MOON@EUPHRATES.SCRC.Symbolics.COM>
Supersedes: <850416010542.7.GUMBY@MOON.MIT>
Message-ID: <850416010643.8.GUMBY@MOON.MIT>

    Date: Mon, 15 Apr 85 20:24 EST
    From: David A. Moon <Moon@SCRC-STONY-BROOK.ARPA>

	From: David Vinayak Wallace <Gumby at MIT-MC>
	Using copyf to copy files from/to ITS complains that it can't set
	creation-date nor author because they're each an "Unknown property"

	From: David Vinayak Wallace <Gumby at MIT-MC>
	I just tried to change the "@" flag with DIRED in a file on EE.  It
	barfed with "Unknown property."  I used DIRED under 5.2 to set it!

    I expect you customized your environment in such a way that the property
    names sent over the Chaosnet stream to the file server were not printed
    correctly.  Depending on what you did, this could be a bug in the QFILE
    file access program.  Let me guess: you set CL:*PRINT-CASE* to :DOWNCASE.
    Is my guess lucky?

You are exactly right.  I just discovered that *print-case* isn't
documented, so I suppose I shouldn't bitch to loudly.  But...
16-Apr-85 20:40:16-EST,440;000000000000
Received: from MIT-ROBOT-5 by MIT-OZ via Chaosnet; 16 Apr 85 20:22-EST
Date: Tuesday, 16 April 1985, 20:21-EST
From: David Chapman <Zvona at OZ>
Subject: CP :Compile File feature suggestion
To: Bug-Lispm at OZ
Message-ID: <850416202109.2.ZVONA@ROBOT-5.MIT>

In Symbolics 3670 Release 6.0, IP-TCP 29.0, AISite 8.2,
microcode TMC5-IO4-FPA-MIC 319, on Lisp Machine Robot-5:

There should be a :bin-file keyword for the output file.
16-Apr-85 21:23:39-EST,3707;000000000000
Received: from MIT-ROBOT-5 by MIT-OZ via Chaosnet; 16 Apr 85 21:23-EST
Date: Tuesday, 16 April 1985, 21:22-EST
From: David Chapman <Zvona at OZ>
Subject: various things
To: BUG-LISPM at OZ
Message-ID: <850416212208.8.ZVONA@ROBOT-5.MIT>

In Symbolics 3670 Release 6.0, IP-TCP 29.0, AISite 8.2,
microcode TMC5-IO4-FPA-MIC 319, on Lisp Machine Robot-5:

It complained that pp.bin wasn't found, use what pathname instead, so I
said pp.lisp.  This ought to work.

c-M mumbles about my having ``specified'' eight frames; it's actually
only defaulted.

c-N and c-P in the debugger aren't always inverses; sometimes c-N goes
up skipping over a lot of frames that c-P looks throught.  This is real
confusing.  Is c-P being c-m-P somehow?  Do you need a specific failure
case, or is this believable?

>>Error: B:>LMLib>pp.lisp.8 is not a BIN file
While in the function SI:BIN-LOAD-START  SI:BIN-LOAD-FILE-INTERNAL  SI:BIN-LOAD-FILE

SI:BIN-LOAD-START:  (P.C. = 15)
   Arg 0 (STREAM): #<NFILE-INPUT-BINARY-STREAM "SYS: LMLIB; PP.LISP" 17636007>
   Arg 1 (SKIP-READING-ATTRIBUTE-LIST): NIL
   Local 2 (WORD): 59

SI:BIN-LOAD-FILE-INTERNAL:  (P.C. = 31)
   Arg 0 (STREAM): #<NFILE-INPUT-BINARY-STREAM "SYS: LMLIB; PP.LISP" 17636007>
   Arg 1 (INTO-PACKAGE): NIL
   Arg 2 (NO-MSG-P): T

SI:BIN-LOAD-FILE:  (P.C. = 22)
   Arg 0 (FILE): #<LOGICAL-PATHNAME "SYS: LMLIB; PP.BIN.NEWEST">
   Arg 1 (INTO-PACKAGE): NIL
   Arg 2 (NO-MSG-P): T

SI:FASLOAD-1:  (P.C. = 5)
   Arg 0 (INFILE): #<LOGICAL-PATHNAME "SYS: LMLIB; PP.BIN.NEWEST">

SI:DO-FILE-TRANSFORMATIONS:  (P.C. = 244)

SI:PERFORM-TRANSFORMATIONS:  (P.C. = 167)
   Arg 0 (TRANSFORMATION-LIST): ((#<TRANSFORMATION COMPILE 17576732> NIL NIL NIL)
                                 (#<TRANSFORMATION COMPILE 17576750> NIL NIL NIL)
                                 (#<TRANSFORMATION COMPILE 17576766> NIL NIL NIL)
                                 (#<TRANSFORMATION COMPILE 17577004> NIL NIL NIL)
                                 (#<TRANSFORMATION COMPILE 17577022> NIL NIL NIL)
                                 (#<TRANSFORMATION COMPILE 17577040> NIL NIL NIL)
                                 (#<TRANSFORMATION COMPILE 17577056> NIL NIL NIL)
                                 (#<TRANSFORMATION COMPILE 17577074> NIL NIL NIL))

SI:PERFORM-TRANSFORMATIONS:  (P.C. = 64)
   Arg 0 (TRANSFORMATION-LIST): ((#<TRANSFORMATION FASLOAD 17576723> NIL NIL NIL)
                                 (#<TRANSFORMATION FASLOAD 17576741> NIL NIL NIL)
                                 (#<TRANSFORMATION FASLOAD 17576757> NIL NIL NIL)
                                 (#<TRANSFORMATION FASLOAD 17576775> NIL NIL NIL)
                                 (#<TRANSFORMATION FASLOAD 17577013> NIL NIL NIL)
                                 (#<TRANSFORMATION FASLOAD 17577031> NIL NIL NIL)
                                 (#<TRANSFORMATION FASLOAD 17577047> NIL NIL NIL)
                                 (#<TRANSFORMATION FASLOAD 17577065> NIL NIL NIL)
                                 (#<TRANSFORMATION FASLOAD 17577103> NIL NIL NIL))

MAKE-SYSTEM:  (P.C. = 241)
   Arg 0 (SYSTEM): DDL
   Rest arg (KEYWORDS): (:NOWARN :COMPILE)

Rest of stack:
SI:*EVAL:  (P.C. = 403)
SI:READFILE-INTERNAL:  (P.C. = 142)
FS:LOAD-STREAM:  (P.C. = 16)
LOAD:  (P.C. = 124)
(:PROPERTY SI:COM-LOAD-FILE SI:CP-FUNCTION):  (P.C. = 254)
SI:COM-LOAD-FILE:  (P.C. = 40)
SI:*EVAL:  (P.C. = 403)
(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0):  (P.C. = 152)
TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
SI:LISP-COMMAND-LOOP:  (P.C. = 67)
SI:LISP-TOP-LEVEL1:  (P.C. = 5)
SI:LISP-TOP-LEVEL:  (P.C. = 7)
16-Apr-85 21:52:36-EST,913;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 16 Apr 85 21:52-EST
Received: from SCRC-PEACE by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 215322; Tue 16-Apr-85 13:01:39-EST
Date: Tue, 16 Apr 85 13:01 EST
From: Charles Hornig <Hornig@STONY-BROOK.SCRC.Symbolics.COM>
Subject: host short names?
To: David Vinayak Wallace <Gumby@MIT-MC>, Bug-Lispm@OZ
In-Reply-To: <850414234527.5.GUMBY@JIMI.MIT>
Message-ID: <850416130115.4.HORNIG@PEACE.SCRC.Symbolics.COM>

    Date: Sunday, 14 April 1985, 23:45-EST
    From: David Vinayak Wallace <Gumby at MIT-MC>

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 8.1,
    microcode TMC5-MIC 319, on Lisp Machine Jimi Hendrix:

    How does the system decide what a host's :SHORT-NAME is?  
    (send (si:parse-host "CSLI") :short-name) returns "SU-CSLI".

It uses the short name attribute if it has one, otherwise it uses the
primary name.
16-Apr-85 21:53:10-EST,2304;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 16 Apr 85 21:52-EST
Received: from SCRC-EUPHRATES by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 153829; Mon 15-Apr-85 15:47:27-EST
Date: Monday, 15 April 1985, 15:44-EST
From: David A. Moon <Moon at SCRC-STONY-BROOK>
Subject: Can't compile closures.
To: Ken Haase <KWH at OZ>, Bill Gosper <rwg at SPA-RUSSIAN>
cc: BUG-LISPM at OZ
In-Reply-To: <850412124156.1.KWH@ROBOT-5.MIT>,
             <850413012729.1.RWG@RUSSIAN.SPA.Symbolics.COM>
Message-ID: <850415154422.4.MOON@EUPHRATES.SCRC.Symbolics.COM>

    Date: Friday, 12 April 1985, 12:41-EST
    From: Ken Haase <KWH at OZ>

    (setq foo #'(lambda (x) (+ x 3)))
    (compile 'foo foo)

    errors out in the following way.  It seems that it would be reasonable to
    be able to compile interpreter closures into compiler closures.

    >>Trap: The argument given to the CAR instruction, #<LEXICAL-CLOSURE (LAMBDA ** **) 23211767>, was not a locative, a list, or NIL.

    (:INTERNAL COMPILER:COMPILE-TO-CORE 1 (:DUMP-LAMBDA-EXPRESSION)):  (P.C. = 3)
       Arg 0 (**DEFSELECT-OP**): :DUMP-LAMBDA-EXPRESSION
       Arg 1 (FSPEC): FOO
       Arg 2 (LAMBDA-EXP): #<LEXICAL-CLOSURE (LAMBDA ** **) 23211767>


    Date: Sat, 13 Apr 85 01:27 PST
    From: Bill Gosper <rwg@RUSSIAN.SPA.Symbolics.COM>

    At the binding of GO-P, I'm (spastically) trying to compile a closure referring
    to LINENUM.  How do you actually do this? ....

    >>Error: (FUNCTION (LAMBDA NIL (DECLARE (SYS:DOWNWARD-FUNCTION)) (< LINENUM (SETQ LINENUM MACSYMA:$LINENUM)))) is not a valid form
    While in the function COMPILER:COMPILE-LAMBDA-EXP

Odd that you both came up with this the same day.  Maybe the earth passed through
a cloud of cosmic gas.

This is a reasonable suggestion for a future feature.  I added it to a file
of suggestions I am maintaining.  In the meantime, you need to know that
the second argument to COMPILE is required (and documented) to be a LAMBDA-
expression, not the result of evaluating a LAMBDA-expression and not an
expression consisting of a LAMBDA-expression enclosed in FUNCTION.  Also
any free variables in that LAMBDA-expression have to be SPECIAL variables,
since the compiler will only compile entire functions, not pieces of functions.
16-Apr-85 21:54:00-EST,3693;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 16 Apr 85 21:52-EST
Received: from SCRC-EUPHRATES by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 153838; Mon 15-Apr-85 16:09:33-EST
Date: Monday, 15 April 1985, 16:06-EST
From: David A. Moon <Moon at SCRC-STONY-BROOK>
Subject: Infinite loop while checking non-circular flavor hierarchy
To: Gavan Duffy <GAVAN at OZ>
cc: BUG-LISPM at OZ
In-Reply-To: <850412182720.2.GAVAN@MORRISON.MIT>,
             <850412210228.5.GAVAN@MORRISON.MIT>
Message-ID: <850415160632.6.MOON@EUPHRATES.SCRC.Symbolics.COM>

    Date: Friday, 12 April 1985, 18:27-EST
    From: Gavan Duffy <GAVAN at OZ>

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 8.0,
    microcode TMC5-MIC 319, FEP 22, on Lisp Machine Jim Morrison:

    The UNDOCUMENTED function, SI:FLAVOR-INVALIDATE-INIT-INFO, seems to lose.
    Either that, or I do, although I don't think so.  There's no apparent
    circularities in the flavors being defined.  They are in
    PIG:[RELATUS.UTILS]ERROR.LSP.

Not having access to that file today I'll have to guess what's in it.  Perhaps
you have circularities via the :required-flavors option of defflavor.

    I'm just going to redefine SI:FLAVOR-INVALIDATE-INIT-INFO to return nil.  How
    big a loss will that be?

How big a loss would it be if someone decided they weren't sure what your duodenum
was for, so they disconnected it and reattached it to your ear?  Seriously, you
can't expect anything to work if you change it at random.

    >>Error: The control stack overflowed.

    SI:FLAVOR-INVALIDATE-INIT-INFO:  (P.C. = 20)  (from B:>sys>r6>sys2>flavor)
       Arg 0 (FL): #<FLAVOR RELATUS-BUG-REPORTING-MIXIN 76360660>

    SI:FLAVOR-INVALIDATE-INIT-INFO:  (P.C. = 20)  (from B:>sys>r6>sys2>flavor)
       Arg 0 (FL): #<FLAVOR RELATUS-ERROR 76360706>

    SI:FLAVOR-INVALIDATE-INIT-INFO:  (P.C. = 20)  (from B:>sys>r6>sys2>flavor)
       Arg 0 (FL): #<FLAVOR RELATUS-BUG-REPORTING-MIXIN 76360660>

    . . .  I spared you about 3,000 of these.

Thanks!

    SI:DEFFLAVOR1:  (P.C. = 2065)

    Date: Friday, 12 April 1985, 21:02-EST
    From: Gavan Duffy <GAVAN at OZ>

    Excuse me.  Is it my imagination or are the assumptions of the flavor system
    in rel 6 grossly incompatible with those of the flavor system in rel 5?
    Flavor code (definitions) that works fine in rel 5 bombs miserably in rel 6.

There are no "gross incompatibilities" that I am aware of.  As always,
when bugs are fixed there is a possibility that erroneous code that only
worked in a previous release because of a bug will stop working.  This
is one reason why we only have major releases once a year.

    If so, where's the document that details the assumptions of the flavor system
    in rel 6?  The pirate release notes don't seem have much of anything helpful
    to say.  

Bug fixes are usually not documented.  A 5000-page release notes probably would
be no use to anyone, unless we hired the entire staff of the Encyclopaedia
Britannica to organize and index it.  Try my suggestion that you have circularities
in :required-flavors.

    I will admit that the code in PIG:[RELATUS.UTILS]ERROR.LSP isn't mine, so its
    successive bombs on compile may have been due to my broken model of what's
    going on there.  But, the code in PIG:[RELATUS.PARSER]OBJECTS.LSP is mine.
    Why, when I try to compile it, does it run forever, apparently in a
    without-interrupts?  I had to warm boot!

How to find out why something is in an infinite loop is documented, although you
may not have found it.  Use the Document Examiner to read the section "Debugging
in the FEP".
16-Apr-85 21:55:11-EST,948;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 16 Apr 85 21:52-EST
Received: from SCRC-EUPHRATES by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 153863; Mon 15-Apr-85 17:05:50-EST
Date: Monday, 15 April 1985, 17:02-EST
From: David A. Moon <Moon at SCRC-STONY-BROOK>
Subject: Stepper loses on FLET
To: Henry Lieberman <Henry at OZ>
cc: BUG-LISPM at OZ
In-Reply-To: <850412015532.1.HENRY@APIARY-3.MIT>
Message-ID: <850415170247.9.MOON@EUPHRATES.SCRC.Symbolics.COM>

    Date: Friday, 12 April 1985, 01:55-EST
    From: Henry Lieberman <Henry at OZ>

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.12,
    microcode TMC5-MIC 319, on Lisp Machine Apiary-3:

    The stepper seems to lose on evaluating code with FLET.

    (STEP '(FLET ((A () 3)
		  (B () 2))
		 (+ (A) (B))))

    It gets stuck trying to evaluate (A).

It works for me.  Are you sure you don't have your own version of
anything involved in this?
16-Apr-85 21:57:16-EST,1399;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 16 Apr 85 21:56-EST
Received: from SCRC-STONY-BROOK by MIT-MC via Chaosnet; 16 APR 85  21:51:43 EST
Received: from SCRC-PEACE by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 215320; Tue 16-Apr-85 12:59:45-EST
Date: Tue, 16 Apr 85 12:59 EST
From: Charles Hornig <Hornig@STONY-BROOK.SCRC.Symbolics.COM>
Subject: IP trusted hosts
To: Christopher C. Stacy <CSTACY@MIT-MC>, BUG-LISPM@MIT-MC
In-Reply-To: <[MIT-MC].455360.850415.CSTACY>
Message-ID: <850416125907.3.HORNIG@PEACE.SCRC.Symbolics.COM>

    Date: Mon,15 Apr 85 06:58:18 EST
    From: Christopher C. Stacy <CSTACY@MIT-MC>

    In Release 6, IP-TCP 29....

    The "secure-subnet" feature is too course.  
    People on MC cannot FTP to Lisp Machines around here because MC is on
    the ARPAnet, which is too big to declare "safe".  There should be a
    safe-host predicate which is defined in the site.  It should take a
    network host address and a service name, and return T or NIL.  This
    predicate may check safe-subnets, or do any other kind of test
    desired.  For example, it might be set to get the host's name from the
    address, and and return T if the host is in the local namespace.

One thing you can do is modify TCP:IP-HOST-TRUSTED-P to also check the
host's address against the list as well as its subnet.  This lets you
have "trusted hosts".
17-Apr-85 00:43:47-EST,1071;000000000000
Received: from MIT-MOON by MIT-OZ via Chaosnet; 17 Apr 85 00:43-EST
Date: Wednesday, 17 April 1985, 00:41-EST
From: David Vinayak Wallace <Gumby at MIT-MC>
Subject: host short names?
To: Charles Hornig <Hornig at STONY-BROOK.SCRC.Symbolics.COM>
cc: Bug-Lispm at OZ
In-Reply-To: <850416130115.4.HORNIG@PEACE.SCRC.Symbolics.COM>
Message-ID: <850417004142.7.GUMBY@MOON.MIT>

    Date: Tue, 16 Apr 85 13:01 EST
    From: Charles Hornig <Hornig@STONY-BROOK.SCRC.Symbolics.COM>

	Date: Sunday, 14 April 1985, 23:45-EST
	From: David Vinayak Wallace <Gumby at MIT-MC>

	How does the system decide what a host's :SHORT-NAME is?  
	(send (si:parse-host "CSLI") :short-name) returns "SU-CSLI".

    It uses the short name attribute if it has one, otherwise it uses the
    primary name.

Actually, I was asking a different question.  That is, who sets the
short name attribute?  Is it something in the NIC host table?  When the
namespace servant grovels over that file does it pick the shortest of
the names and make that the short name?  Or what?

david
17-Apr-85 01:02:27-EST,741;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 17 Apr 85 01:02-EST
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 214910; Mon 15-Apr-85 14:08:51-EST
Date: Monday, 15 April 1985, 14:05-EST
From: David A. Moon <Moon at SCRC-STONY-BROOK>
Subject: defsetf isn't documented on-line
To: David Chapman <Zvona at OZ>
cc: bug-lispm at OZ
In-Reply-To: <850414142331.1.ZVONA@BUDDY.MIT>
Message-ID: <850415140540.1.MOON@EUPHRATES.SCRC.Symbolics.COM>

    Date: Sunday, 14 April 1985, 14:23-EST
    From: David Chapman <Zvona at OZ>

    Right now, defsetf, because it isn't documented on line.

None of Common Lisp is documented on-line yet.  Get a (paper) Common Lisp manual,
they're portable.
17-Apr-85 01:04:29-EST,1735;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 17 Apr 85 01:04-EST
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 214913; Mon 15-Apr-85 14:21:53-EST
Date: Monday, 15 April 1985, 14:18-EST
From: David A. Moon <Moon at SCRC-STONY-BROOK>
Subject: Copying 36 bit files
To: David Vinayak Wallace <GUMBY at MIT-MC>
cc: Hornig at SCRC-STONY-BROOK, BUG-LISPM at OZ, sr.ehpyc at MIT-SPEECH
In-Reply-To: <[MIT-MC].454936.850414.GUMBY>
Message-ID: <850415141854.3.MOON@EUPHRATES.SCRC.Symbolics.COM>

    Date: Sun,14 Apr 85 20:21:57 EST
    From: David Vinayak Wallace <GUMBY@MIT-MC>

	Date: Fri, 12 Apr 85 21:33 EST
	From: Charles Hornig <Hornig at STONY-BROOK>

	    Date: Friday, 12 April 1985, 20:45-EST
	    From: Scott Cyphers <sr.ehpyc at SPEECH>

	    In Symbolics 3670 Release 6.0, IP-TCP 29.0, Experimental ZOO 5.6,

	    Using M-X copy file on 36 bit files like HOSTS3.BIN doesn't work
	    because it copies the file with 16 bit bytes.  There should be a
	    way to specify the byte size.

	Use the Copy File command to the CP.

    Does this mean you're not going to fix M-X Copy File?

Someday we will replace the present m-X Copy File Zmacs command with the
Copy File CP command.  In the meantime, the CP command is the one that has
a way to specify the byte size, since it has a more general syntax that allows
options.  By the way, byte sizes larger than 16 are illegal, at least in QFILE
protocol, so use something that divides evenly into 36, such as 12.

It should be obvious why the system can't tell automatically that HOSTS3.BIN
should be copied as a 36-bit file; it has the same type, BIN, as a Lisp Machine
BIN file, which is a 16-bit file.
17-Apr-85 01:06:13-EST,1670;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 17 Apr 85 01:06-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 215005; Mon 15-Apr-85 19:00:34-EST
Date: Monday, 15 April 1985, 19:00-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: [DCP: see the compiler barf!]
To: ROBOT.GML at OZ, bug-lispm at OZ
In-Reply-To: <ROBOT.GML.12102767520.BABYL@MIT-OZ>
Message-ID: <850415190032.2.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Sat, 13 Apr 1985  04:27 EST
    From: ROBOT.GML@MIT-OZ
   
	That is not always the best thing.  It also isn't quite as easy as you
	state, since there are many, MANY different ways the system can error
	behind the compiler's back.  We do have some background plans to try to
	figure out how to add a "plod along" flag which can take on various
	values for various severities.

    I know it's not easy, having taken 6.035 (building a compiler in 12
    easy weeks).  At least it could punt that particular definition and go
    on to the next one.  
Some people would consider that too drastic.
    And besides, this doesn't seem to be the system
    erring behind the compilers back, it seems like a compiler error but
    not a very graceful one.  
No, it is the compiler expanding a macro.  The macro expansion dives
into the guts of DEFSTRUCT.  DEFSTRUCT decides the form (it doesn't know
where it came from) is bad and FERRORs.  It would ferror from the
interpreter and from MEXP, so it is not particular to the compiler.
    Oh well, if it's there and someone may do
    something about it eventually, no use yelling about water over the
    damn.
17-Apr-85 01:07:44-EST,1582;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 17 Apr 85 01:07-EST
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 215057; Mon 15-Apr-85 20:27:48-EST
Date: Monday, 15 April 1985, 20:24-EST
From: David A. Moon <Moon at SCRC-STONY-BROOK>
Subject: copying files to ITS
To: David Vinayak Wallace <Gumby at MIT-MC>
cc: BUG-LISPM at OZ
In-Reply-To: <850414235819.7.GUMBY@JIMI.MIT>,
             <850415000314.8.GUMBY@JIMI.MIT>
Message-ID: <850415202444.6.MOON@EUPHRATES.SCRC.Symbolics.COM>

    Date: Sunday, 14 April 1985, 23:58-EST
    From: David Vinayak Wallace <Gumby at MIT-MC>

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 8.1,
    microcode TMC5-MIC 319, on Lisp Machine Jimi Hendrix:

    Using copyf to copy files from/to ITS complains that it can't set
    creation-date nor author because they're each an "Unknown property"

    Date: Monday, 15 April 1985, 00:03-EST
    From: David Vinayak Wallace <Gumby at MIT-MC>

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 8.1,
    microcode TMC5-MIC 319, on Lisp Machine Jimi Hendrix:

    I just tried to change the "@" flag with DIRED in a file on EE.  It
    barfed with "Unknown property."  I used DIRED under 5.2 to set it!

I expect you customized your environment in such a way that the property
names sent over the Chaosnet stream to the file server were not printed
correctly.  Depending on what you did, this could be a bug in the QFILE
file access program.  Let me guess: you set CL:*PRINT-CASE* to :DOWNCASE.
Is my guess lucky?
17-Apr-85 01:08:38-EST,1553;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 17 Apr 85 01:08-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 215059; Mon 15-Apr-85 20:29:55-EST
Date: Monday, 15 April 1985, 20:29-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: Can't compile closures.
To: Ken Haase <KWH at OZ>, BUG-LISPM at OZ
In-Reply-To: <850412124156.1.KWH@ROBOT-5.MIT>
Message-ID: <850415202954.2.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Friday, 12 April 1985, 12:41-EST
    From: Ken Haase <KWH at OZ>

    In Symbolics 3670 Release 6.0, IP-TCP 29.0, AISite 8.0,
    Experimental Meta Representation Langauge 2.14,
    microcode TMC5-IO4-FPA-MIC 319, on Lisp Machine Robot-5:

    (setq foo #'(lambda (x) (+ x 3)))
    (compile 'foo foo)

    errors out in the following way.  It seems that it would be reasonable to
    be able to compile interpreter closures into compiler closures.

The format of the environment is completely different between
interpreted closures and compiled closures, so independent of how
reasonable it is, it isn't easy, if at all possible.  Maybe you should
write
    (setq foo '(lambda (x) (+ x 3)))
    (compile 'foo foo)
instead, and treat the value of FOO as data instead of code?

    >>Trap: The argument given to the CAR instruction, #<LEXICAL-CLOSURE (LAMBDA ** **) 23211767>, was not a locative, a list, or NIL.
    While in the function (:INTERNAL COMPILER:COMPILE-TO-CORE 1 (:DUMP-LAMBDA-EXPRESSION))  COMPILER:COMPILE-TO-CORE  COMPILE

17-Apr-85 01:13:08-EST,1564;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 17 Apr 85 01:12-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 215062; Mon 15-Apr-85 20:35:05-EST
Date: Monday, 15 April 1985, 20:35-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: STRING-APPEND alters its arg
To: Gavan Duffy <GAVAN at OZ>, Hornig at SCRC-STONY-BROOK, JRD at OZ,
    bug-lispm at OZ
cc: tom at OZ
In-Reply-To: <850412210832.6.GAVAN@MORRISON.MIT>
Message-ID: <850415203501.3.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Friday, 12 April 1985, 21:08-EST
    From: Gavan Duffy <GAVAN at OZ>

	Date: Fri, 12 Apr 85 19:11 EST
	From: Charles Hornig <Hornig@STONY-BROOK.SCRC.Symbolics.COM>

	    Date: Fri 12 Apr 85 16:27-EST
	    From: James R. Davis <JRD@MIT-OZ>

	    (setq foo '(a b c))
	    (apply #'string-append foo)
	    ==> "abc"
	    foo
	    ==>("a" "b" "c")

	    have a look at the code.  It calls RPLACA when given a symbol.

	    Is this a feature?

	No, it's a bug.  Fixed in the development system.  The fix is to
	COPYLIST the &REST argument before you go an RPLACA it.

    This bug should certainly considered gross enough to propagate a
    patch for it.  No?

The development system fix is just a work-around.  Now it will cons an
extra list even when it doesn't have to.  This bug only comes up when
you lexpr-funcall or apply string-append to a list you care about, and
then, only when the items aren't strings already.  Aren't there more
pressing things to be fixed for 6.1?
17-Apr-85 01:13:52-EST,1178;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 17 Apr 85 01:13-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 215068; Mon 15-Apr-85 20:45:33-EST
Date: Monday, 15 April 1985, 20:45-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: Disk error
To: BUG-LISPM at OZ
In-Reply-To: <850412225044.1.LISP-MACHINE@ROBOT-5.MIT>
Message-ID: <850415204533.6.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Friday, 12 April 1985, 22:50-EST
    From: A Lisp Machine <LISPM at MIT-MC>

    In Symbolics 3670 Release 6.0, IP-TCP 29.0, AISite 8.0,
    microcode TMC5-IO4-FPA-MIC 319, on Lisp Machine Robot-5:

    Checksumming a band just transferred from Robot 3.  This can be repeated
    reliably, on the same sector.

    >>Error: %DISK-ERROR-ECC during a %DCW-READ32 on unit 0., cyl 662., surf 4., sec 17.,
	       Fatal ECC error,
	       7. pending transfers associated with this disk event aborted.
    While in the function SI:SIGNAL-DISK-ERROR  SI:FB-CHECK-FOR-DISK-ERROR  SI:FBAND-CHECKSUM-FUNCTION

Not surprising.  It means there is a hard, uncorrectable ECC error on
the disk (whoever you are).
17-Apr-85 01:15:13-EST,1548;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 17 Apr 85 01:15-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 215071; Mon 15-Apr-85 20:51:45-EST
Date: Monday, 15 April 1985, 20:51-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: FEPs
To: Scott Cyphers <SR.EHPYC at MIT-SPEECH>,
    David C. Plummer <DCP at SCRC-TENEX>
cc: bug-lispm at OZ, Chris Lindblad <CJL at OZ>
In-Reply-To: <SR.EHPYC.12103204357.BABYL@MIT-SPEECH>
Message-ID: <850415205142.7.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: 14 Apr 1985  20:27 EST (Sun)
    From: Scott Cyphers <SR.EHPYC@MIT-SPEECH>

    and as FEP versions get higher, the amount of FEP memory left
    decreases since the FEP is doing more, which is why the problem
    happens a lot more now than it used to?  
Possibly.
    And I guess unibus code doesn't help either.
I don't think so, since I don't think that code uses the same RAM space.

    Resetting the FEP spins disks down and destroys the sync on 3670s with
    the philips monitor.  Putting the remote/local switch on local
    prevents the disk from spinning down on a reset fep(one of our 3670s
    was shipped like that, which is where I learned the trick) which means
    you can boot right away.  It works here, but I don't know if it's a
    blessed technique without side-affects.
It isn't.  It means FEP>shutdown won't spin the disks down before it
powers down the machine.  We can't be held responsible for any trashed
disks that may result...
17-Apr-85 01:17:22-EST,1215;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 17 Apr 85 01:17-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 215075; Mon 15-Apr-85 20:59:24-EST
Date: Monday, 15 April 1985, 20:59-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: pathname blowout in show fonts command
To: Chris Lindblad <cjl at OZ>, BUG-LISPM at OZ
In-Reply-To: <850413212452.1.CJL@BUDDY.MIT>
Message-ID: <850415205924.9.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Saturday, 13 April 1985, 21:24-EST
    From: Chris Lindblad <cjl at OZ>

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 8.1,
    microcode TMC5-MIC 319, on Lisp Machine Buddy Holly:

    typed :Show Font MATH10
    I looked, and fed:pathname-defaults is NIL.

    >>Error: The second argument (DEFAULTS) to FS:SET-DEFAULT-PATHNAME, NIL, was of the wrong type.
	     The function expected pathname defaults alist.
    While in the function FS:SET-DEFAULT-PATHNAME  FED:LOAD-FONT-FROM-SYM  (:PROPERTY SI:COM-SHOW-FONT SI:CP-FUNCTION)

I think this is at least the 5th message saying that :Show Font bombs in
this way.  I think RWK about 2 messages ago said it would be fixed for
6.1.
17-Apr-85 01:17:49-EST,768;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 17 Apr 85 01:17-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 215085; Mon 15-Apr-85 21:11:35-EST
Date: Monday, 15 April 1985, 21:11-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: what sources do I want?
To: David Chapman <Zvona at OZ>, bug-lispm at OZ
In-Reply-To: <850414142331.1.ZVONA@BUDDY.MIT>
Message-ID: <850415211135.8.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Sunday, 14 April 1985, 14:23-EST
    From: David Chapman <Zvona at OZ>

    Right now, defsetf, because it isn't documented on line.

I talked with JLK today, and he doesn't understand the rationale for not
distributing the non-architectural aspects of Common Lisp.
17-Apr-85 01:18:05-EST,2795;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 17 Apr 85 01:17-EST
Received: from SCRC-HARLEM by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 215375; Tue 16-Apr-85 14:14:40-EST
Date: Tuesday, 16 April 1985, 14:14-EST
From: Joseph R Goldstone <joseph at SCRC-QUABBIN>
Subject: [mailer at SU-AIMVAX: help]
To: jcma at MIT-MC, bug-mail at MIT-MC, bug-lispm at OZ
cc: bug-mailer at SCRC-QUABBIN, Moon at SCRC-QUABBIN
In-Reply-To: <850415060419.6.JCMA@MORRISON.MIT>
Message-ID: <850416141439.0.JOSEPH@HARLEM.SCRC.Symbolics.COM>

    Date: Monday, 15 April 1985, 06:04-EST
    From: jcma@MIT-MC

    What mailers around here support this sort of functionality?  Perhaps, the
    Symoblics mailer has some hacks like this?

We do support the SMTP EXPN command, and through that we provide the
Show Mailing List (m-X) command in ZMail.  (Of course, the host on
which the mailing list is maintained must support the EXPAND-MAIL-RECIPIENT
service, e.g. it might have an EXPAND-MAIL-RECIPIENT CHAOS SMTP triple in
its services list in its namespace object.  I'm not sure what non-Symbolics
hosts support the SMTP EXPN command.  In particular, I'm fairly sure that
ITS hosts do NOT support EXPN, since Moon once told me it was hard, for
some reason I don't remember).

Other than that, we don't support the stuff below, you have to maintain
the mailing list file by hand.  This is a malfeature, and good tools
for mailing list maintenance are on my queue somewhere.  I'll append
this message to the others on this topic; thanks for the reference.

    Received: from MIT-MC by MIT-OZ via Chaosnet; 15 Apr 85 05:36-EST
    Received: from su-aimvax.ARPA by MIT-MC.ARPA; 15 APR 85 05:37:27 EST
    Date: Mon, 15 Apr 85 02:37 PST
    From: mailer@diablo
    To: jcma@MIT-MC.ARPA
    Subject: help

    Response from diablo Mail alias handler:


    You can send commands to the address "mailer" to maintain mailing lists
    aliases, and forwarding information. The current commands are:

    add name to list	Adds the user to the mailing list.
    alias name for user	Makes an alias for the user.
    all			Prints out all the aliases and mailing lists.
    create list with name,..Creates a mailing list.
    delete name from list	Delete a user from a mailing list.
    forward user to name	Send one user's mail to another.
    help			This command summary.
    keep user at host	Don't do any forwarding.
    list name,...		Lists the value of the given names.
    pluslots list		Adds many users to an existing list.
    remove name for user	Remove an alias for the user.

    Commands can be abbreviated. For example, "alias name" (or "me")
    assumes the user name who sent the mail.
    Send bugs and suggestions to mail-wizards.
    ----
17-Apr-85 03:55:54-EST,762;000000000000
Received: from SWW-WHITE by MIT-OZ via Chaosnet; 17 Apr 85 03:55-EST
Received: from SWW-PURPLE by SWW-WHITE via CHAOS with CHAOS-MAIL id 102387; Tue 16-Apr-85 00:50:31-PST
Date: Tuesday, 16 April 1985, 00:51-PST
From: Dave Dyer <ddyer at SWW-WHITE>
Subject: Color
To: Henry Lieberman <Henry at MIT-OZ>, BUG-LISPM at MIT-OZ
Fcc: W:>ddyer>mail.sent
In-Reply-To: <850414210928.1.HENRY@BUDDY.MIT>
Message-ID: <850416005124.1.DDYER@PURPLE.SWW.Symbolics.COM>

    Date: Sunday, 14 April 1985, 21:09-EST
    From: Henry Lieberman <Henry at OZ>

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 8.1,
    microcode TMC5-MIC 319, on Lisp Machine Buddy Holly:

    We need the Color system for Release 6.

Chris Caughlin (CEC) has the master tape.
17-Apr-85 03:56:11-EST,1334;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 17 Apr 85 03:56-EST
Received: from SCRC-AMSTEL by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 215111; Mon 15-Apr-85 23:41:26-EST
Date: Monday, 15 April 1985, 23:41-EST
From: Tom Knight <tk at SCRC-STONY-BROOK>
Subject: Copying 36 bit files
To: Hornig at SCRC-STONY-BROOK, BUG-LISPM at MIT-SPEECH
In-Reply-To: <850412213302.8.HORNIG@PEACE.SCRC.Symbolics.COM>
Message-ID: <850415234129.2.TK@AMSTEL.SCRC.Symbolics.COM>

[sr.ehpyc removed from reply list]
    Date: Fri, 12 Apr 85 21:33 EST
    From: Charles Hornig <Hornig@STONY-BROOK.SCRC.Symbolics.COM>
	Date: Friday, 12 April 1985, 20:45-EST
	From: Scott Cyphers <sr.ehpyc at MIT-SPEECH>
	In Symbolics 3670 Release 6.0, IP-TCP 29.0, Experimental ZOO 5.6,
	Spire-Macros 5.1, Attribute 5.0, Compute 5.2, Audio 4.0,
	Speech-Attributes 4.0, Display 6.2, Speech-Layouts 6.0, Prtout 4.0,
	Versatec 5.0, Spire 16.0, ZOO-SPIRE 1.0, microcode TMC5-IO4-FPA-MIC 319, on Lisp Machine Yogi:

	Using M-X copy file on 36 bit files like HOSTS3.BIN doesn't work because
	it copies the file with 16 bit bytes.  There should be a way to specify
	the byte size.

    Use the Copy File command to the CP.

Does this mean that we aren't going to support m-X copy file in Zwei?
If so, we should remove it and its documentation.
17-Apr-85 03:57:03-EST,930;000000000000
Received: from SWW-WHITE by MIT-OZ via Chaosnet; 17 Apr 85 03:57-EST
Received: from SWW-BLACK by SWW-WHITE via CHAOS with CHAOS-MAIL id 102448; Tue 16-Apr-85 10:21:37-PST
Date: Tuesday, 16 April 1985, 10:21-PST
From: Eric Weaver <Weaver at SWW-WHITE>
Subject: Color
To: Henry Lieberman <Henry at MIT-OZ>, BUG-LISPM at MIT-OZ
Fcc: W:>Eric>babyl.text
In-Reply-To: <850414210928.1.HENRY@BUDDY.MIT>
Message-ID: <850416102117.5.WEAVER@BLACK.SWW.Symbolics.COM>

    Date: Sunday, 14 April 1985, 21:09-EST
    From: Henry Lieberman <Henry at OZ>

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 8.1,
    microcode TMC5-MIC 319, on Lisp Machine Buddy Holly:

    We need the Color system for Release 6.

Gosh, Henry, why did you send this to BUG-LISPM??

You need to talk to Software Distribution, who is just now getting the
master tape.

Dave, any future messages like this should probably be sent there.
17-Apr-85 05:52:07-EST,1108;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 17 Apr 85 05:52-EST
Received: from MIT-MOON by MIT-MC via Chaosnet; 16 APR 85  05:14:49 EST
Date: Tue, 16 Apr 85 05:13 EST
From: David Vinayak Wallace <Gumby@MIT-MC.ARPA>
Subject: open file servers
To: Bug-Lispm@MIT-MC.ARPA
cc: SRA@MIT-XX.ARPA
Message-ID: <850416051330.6.GUMBY@MOON.MIT>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 8.2,
microcode TMC5-MIC 319, on Lisp Machine Keith Moon:

XX was having trouble with charfc earlier to-day, so I accessed XX via
TCP/FTP.  Two processes (ZMAIL and ZWEI) got files from XX.  About three
hours later SRA asked me whether I was still using my TWO ftp servers.

Well I did "F" in peek and it said 'access path to XX via tcp-ftp" and
"not logged in."  I wrote out a file to see what happened.  Well the
file was written all right, usig one of the servers, and peek updated
the bytes-written count, but continued to say "not logged in."

1> Why didn't it close the connexion?
2> [probably related] why did it lie about my not being logged in?
   It didn't ask me for a password.

david
17-Apr-85 09:48:19-EST,4113;000000000000
Received: from MIT-SID by MIT-OZ via Chaosnet; 17 Apr 85 09:48-EST
Date: Wednesday, 17 April 1985, 09:46-EST
From: Daniel Weise <DANIEL at MIT-MC>
Subject: non optimal automatic creation of dirs.
To: BUG-LISPM at OZ, bug-file at OZ
Message-ID: <850417094658.1.DANIEL@SID.MIT>

In Symbolics 3670 Release 6.0, IP-TCP 29.0, AISite 8.2,
Experimental TECHNOLOGY-INDEPENDENT-DAEDALUS 2.1,
Experimental DAEDALUS 2.0, Experimental Nodes 1.0,
microcode TMC5-IO4-MIC 319, FEP 22, on Lisp Machine Sid Vicious:

I think this error occurs because it is trying to create a directory
with the default number of allowed subdirectories (40), which is too
large.  The right number of allowed subdirectories is, of course, 0,
which would not cause the error to occur.  (Or does the system expect to
make subdirs of patch dirs?)  Creating the dir by hand on OZ giving no
allowed subdirs causes no problems at all.

>>Error: Request exceeds superior directory subdirectory quota
         For OZ:PS:<DPL.MIT.PATCH.TIDAED-3>
While in the function (:METHOD FS:HOST-UNIT :COMMAND)  FS:CREATE-DIRECTORY-CHAOS  (:METHOD FS:QFILE-ACCESS-PATH :CREATE-DIRECTORY)

(:METHOD FS:HOST-UNIT :COMMAND):  (P.C. = 236)
   Arg 0 (SELF): #<HOST-UNIT 30323742>
   Arg 1 (SELF-MAPPING-TABLE): FS:HOST-UNIT
   Arg 2 (OPERATION): :COMMAND
   Arg 3 (MARK-P): NIL
   Arg 4 (STREAM-OR-HANDLE): NIL
   Arg 5 (SIMPLE-P): NIL
   Arg 6 (WHOSTATE): "Create Directory"
   Rest arg (COMMANDS): ("CREATE-DIRECTORY" 141 "PS:<DPL.MIT.PATCH.TIDAED-3>" 141)
   Local 8 (HANDLE): NIL
   Local 9 (STREAM): NIL
   Local 10 (PKT): #<Chaos Packet 11304775>
   Local 11 (SUCCESS): NIL
   Local 12 (STRING): " ERROR CCD F Request exceeds superior directory subdirectory quota"
   Local 13 (TRANSACTION-ID): "T2784"
   Local 14 (CREATE-P): NIL
   Local 15 (CONDITION): NIL
   Local 16: T
   Local 17: #<CASE-HANDLER 120711625>
   Local 18: (#<CASE-HANDLER 120572024>)
   Local 19: (#<CASE-HANDLER 120711625> #<CASE-HANDLER 120572024>)

FS:CREATE-DIRECTORY-CHAOS:  (P.C. = 44)
   Arg 0 (ACCESS-PATH): #<TOPS20-QFILE-ACCESS-PATH OZ using QFILE 30323731>
   Arg 1 (PATHNAME): #<TOPS20-PATHNAME "OZ:PS:<DPL.MIT.PATCH.TIDAED-3>TIDAED-3.PATCH-DIR">
   Arg 2 (OPTIONS): NIL

(:METHOD FS:QFILE-ACCESS-PATH :CREATE-DIRECTORY):  (P.C. = 6)
   Arg 0 (SELF): #<TOPS20-QFILE-ACCESS-PATH OZ using QFILE 30323731>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:QFILE-ACCESS-PATH -- 4. IV's, 0. FL's 121666243>
   Arg 2 (OPERATION): :CREATE-DIRECTORY
   Arg 3 (PATHNAME): #<TOPS20-PATHNAME "OZ:PS:<DPL.MIT.PATCH.TIDAED-3>TIDAED-3.PATCH-DIR">
   Rest arg (OPTIONS): NIL

(:METHOD FS:ACTIVE-PATHNAME-MIXIN :CREATE-DIRECTORY):  (P.C. = 16)
   Arg 0 (SELF): #<TOPS20-PATHNAME "OZ:PS:<DPL.MIT.PATCH.TIDAED-3>TIDAED-3.PATCH-DIR">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:ACTIVE-PATHNAME-MIXIN -- 1. IV's, 0. FL's 105211451>
   Arg 2 (OPERATION): :CREATE-DIRECTORY
   --Defaulted args:--
   Arg 3 (IGNORE): NIL
   Rest arg (OPTIONS): NIL

FS:CREATE-DIRECTORIES-RECURSIVELY:  (P.C. = 72)
   Arg 0 (PATH): #<LOGICAL-PATHNAME "DPL: PATCH; TIDAED-3.PATCH-DIR.NEWEST">
   Local 0 (PATH): #<TOPS20-PATHNAME "OZ:PS:<DPL.MIT.PATCH.TIDAED-3>TIDAED-3.PATCH-DIR">

SI:WRITE-PATCH-DIRECTORY:  (P.C. = 163)
   Arg 0 (PATCH): ("TECHNOLOGY-INDEPENDENT-DAEDALUS" 3)
   Arg 1 (PATCH-DIR): (:EXPERIMENTAL ((0 "TECHNOLOGY-INDEPENDENT-DAEDALUS Loaded" "Daniel")))
   Arg 2 (FIRST-TIME): T

SI:INCREMENT-PATCH-SYSTEM-MAJOR-VERSION:  (P.C. = 57)
   Arg 0 (NAME): "TECHNOLOGY-INDEPENDENT-DAEDALUS"
   Arg 1 (STATUS): :EXPERIMENTAL

SI:INCREMENT-COMPILED-VERSION-1:  (P.C. = 21)

Rest of stack:
SI:DO-FILE-TRANSFORMATIONS:  (P.C. = 244)
SI:PERFORM-TRANSFORMATIONS:  (P.C. = 167)
SI:PERFORM-TRANSFORMATIONS:  (P.C. = 64)
MAKE-SYSTEM:  (P.C. = 241)
SI:*EVAL:  (P.C. = 403)
(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0):  (P.C. = 152)
TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
SI:LISP-COMMAND-LOOP:  (P.C. = 67)
SI:LISP-TOP-LEVEL1:  (P.C. = 5)
SI:LISP-TOP-LEVEL:  (P.C. = 7)
17-Apr-85 10:13:09-EST,1234;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 17 Apr 85 10:12-EST
Received: from MIT-XX by MIT-MC via Chaosnet; 17 APR 85  10:12:10 EST
Received: from MIT-ROBOT-5 by MIT-XX via Chaosnet; 17 Apr 85 07:58-EST
Date: Wed, 17 Apr 85 07:58 EST
From: Ken Haase <KWH@OZ.MIT>
Subject: Macro's not paying attention to declarations after documentation strings.
To: BUG-LISPM%MC@MIT-XX.ARPA
Message-ID: <850417075847.2.KWH@ROBOT-5.MIT>

In Symbolics 3670 Release 6.0, IP-TCP 29.0, AISite 8.2,
Experimental Meta Representation Langauge 2.16,
microcode TMC5-IO4-FPA-MIC 319, on Lisp Machine Robot-5:

Compiling:

(defvar *definition-environment* '(package sys:fdefine-file-pathname))

(defmacro definition-environment ()
  "Returns an alist describing the current definition environment."
  (declare (arglist &rest no-arguments))
  (list 'quote (mapcar #'(lambda (var) (list var (list 'quote (eval var))))
		       *definition-environment*)))

produces the following compiler warning:

  For Function DEFINITION-ENVIRONMENT
    While compiling (DECLARE (ARGLIST &REST NO-ARGUMENTS)):
    The declaration (DECLARE (ARGLIST &REST NO-ARGUMENTS)) is in a place
    where declarations are not allowed; it will be ignored.

17-Apr-85 10:39:42-EST,1691;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 17 Apr 85 10:39-EST
Received: from SCRC-STONY-BROOK by MIT-MC via Chaosnet; 17 APR 85  10:19:47 EST
Received: from SCRC-PEACE by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 216017; Wed 17-Apr-85 10:19:24-EST
Date: Wed, 17 Apr 85 10:19 EST
From: Charles Hornig <Hornig@STONY-BROOK.SCRC.Symbolics.COM>
Subject: Macro's not paying attention to declarations after documentation strings.
To: Ken Haase <KWH@OZ>, BUG-LISPM@MIT-MC
In-Reply-To: <850417075847.2.KWH@ROBOT-5.MIT>
Message-ID: <850417101937.1.HORNIG@PEACE.SCRC.Symbolics.COM>

    Date: Wed, 17 Apr 85 07:58 EST
    From: Ken Haase <KWH@OZ.MIT>

    In Symbolics 3670 Release 6.0, IP-TCP 29.0, AISite 8.2,
    Experimental Meta Representation Langauge 2.16,
    microcode TMC5-IO4-FPA-MIC 319, on Lisp Machine Robot-5:

    Compiling:

    (defvar *definition-environment* '(package sys:fdefine-file-pathname))

    (defmacro definition-environment ()
      "Returns an alist describing the current definition environment."
      (declare (arglist &rest no-arguments))
      (list 'quote (mapcar #'(lambda (var) (list var (list 'quote (eval var))))
			   *definition-environment*)))

    produces the following compiler warning:

      For Function DEFINITION-ENVIRONMENT
	While compiling (DECLARE (ARGLIST &REST NO-ARGUMENTS)):
	The declaration (DECLARE (ARGLIST &REST NO-ARGUMENTS)) is in a place
	where declarations are not allowed; it will be ignored.

Thank you for this report.  The problem has been fixed in the
development system and will be considered for future releases.  The
short-term work-around is to put the documentation string last.
17-Apr-85 10:40:46-EST,865;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 17 Apr 85 10:40-EST
Received: from SCRC-STONY-BROOK by MIT-MC via Chaosnet; 17 APR 85  10:22:02 EST
Received: from SCRC-CUYAHOGA by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 215998; Wed 17-Apr-85 09:49:45-EST
Date: Wed, 17 Apr 85 09:49 EST
From: Robert A. Cassels <Cassels@SCRC-STONY-BROOK.ARPA>
Subject: copying files to ITS
To: Gumby@MIT-MC.ARPA, Moon@SCRC-STONY-BROOK.ARPA
cc: BUG-LISPM@MIT-MC.ARPA
In-Reply-To: <850416010643.8.GUMBY@MOON.MIT>
Message-ID: <850417094957.1.CASSELS@CUYAHOGA.SCRC.Symbolics.COM>

    Date: Tue, 16 Apr 85 01:06 EST
    From: David Vinayak Wallace <Gumby@MIT-MC.ARPA>

    You are exactly right.  I just discovered that *print-case* isn't
    documented, so I suppose I shouldn't bitch to loudly.  But...

In my copy of Common Lisp: The Language, it's on page 372.
17-Apr-85 10:55:51-EST,1087;000000000000
Received: from MIT-HTVAX by MIT-OZ via Chaosnet; 17 Apr 85 10:55-EST
Received: by MIT-HTVAX.ARPA (4.12/4.7) 
	id AA07008; Wed, 17 Apr 85 10:54:17 est
To: Bug-Lispm@mit-oz
Cc: MIT-IP-PEOPLE@mit-mc.arpa
Subject: SCRC-STONY-BROOK.ARPA
Date: 17 Apr 85 10:54:09 EST (Wed)
From: Martin David Connor <mdc@mit-htvax>


For a while now I have been unable to reach SCRC-STONY-BROOK.ARPA
(192.10.41.144) from hosts on MIT-AI-NET (128.52..).  

I have however been able to reach SCRC-QUABBIN.ARPA at
192.10.41.136, and SCRC-CUPID at 192.10.41.27.  From the class C
numbering I would venture to guess that these hosts are all on the
same physical piece of cable, and since I can do SMTP manually to QBIN
and CUPID, I would expect SCRC would be identical.

Could it be that SCRC's routing tables need tweaking?  Another odd
point is that I am able to reach SCRC from XX and MILO on net 18.

I would be much obliged if someone could check into this and explain why I
can't seem to reach STONY-BROOK from here.  Mail is stacking up for
SCRC recipients here...

Many thanks.

17-Apr-85 12:18:18-EST,1893;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 17 Apr 85 11:59-EST
Date: 17 Apr 1985  11:57 EST (Wed)
Message-ID: <SR.EHPYC.12103898062.BABYL@MIT-SPEECH>
From: Scott Cyphers <SR.EHPYC@MIT-SPEECH>
To:   "David C. Plummer in disguise" <DCP@SCRC-QUABBIN>
Cc:   bug-lispm@OZ, Chris Lindblad <CJL@OZ>,
      "David C. Plummer" <DCP@SCRC-TENEX>
Subject: FEPs
In-reply-to: Msg of 15 Apr 1985 20:51-EST from David C. Plummer in disguise <DCP at SCRC-QUABBIN>

    Date: Monday, 15 April 1985, 20:51-EST
    From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
    To:   Scott Cyphers <SR.EHPYC>, David C. Plummer <DCP at SCRC-TENEX>
    cc:   bug-lispm at OZ, Chris Lindblad <CJL at OZ>
    Re:   FEPs

        Resetting the FEP spins disks down and destroys the sync on 3670s with
        the philips monitor.  Putting the remote/local switch on local
        prevents the disk from spinning down on a reset fep(one of our 3670s
        was shipped like that, which is where I learned the trick) which means
        you can boot right away.  It works here, but I don't know if it's a
        blessed technique without side-affects.
    It isn't.  It means FEP>shutdown won't spin the disks down before it
    powers down the machine.  We can't be held responsible for any trashed
    disks that may result...

Then you should check them more carefully when they leave the factory
(maybe you do now -- it's the oldest 3670 we have that came like
that).  Out of curiosity, can several spindowns and ups a day be too
good for the disks?  Shutdowns are quite rare, happening only when
something breaks.  I doubt the switch does anything for you if the
power goes off unexpectedly.

On several occasions, people have thought a Philips monitor machine
was broken because of the spinddown delay (You have to admit, it does
look kind of broken with the sync gone).
17-Apr-85 12:26:16-EST,655;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 17 Apr 85 12:02-EST
Received: from MIT-MORRISON by MIT-MC via Chaosnet; 16 APR 85  10:43:39 EST
Date: Tue, 16 Apr 85 10:42 EST
From: Gavan Duffy <GAVAN@OZ.MIT>
Subject: Ugly wraparound in dired on VMS
To: BUG-LISPM@MIT-MC.ARPA
Message-ID: <850416104203.1.GAVAN@MORRISON.MIT>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 8.2,
microcode TMC5-MIC 319, FEP 22, on Lisp Machine Jim Morrison:

I was direding a directory on PIG, deleted a bunch of files, hit Q.  The
printout of files in the typeout window (six columns) wrapped around by a few
characters, making the display gross and ugly.  
17-Apr-85 12:28:59-EST,8940;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 17 Apr 85 12:07-EST
Received: from MIT-MORRISON by MIT-MC via Chaosnet; 16 APR 85  11:08:01 EST
Date: Tue, 16 Apr 85 11:06 EST
From: Gavan Duffy <GAVAN@OZ.MIT>
Subject: Lossage due to ridiculous source withholding policy
To: BUG-LISPM@MIT-MC.ARPA, PHW%MIT-OZ@MIT-MC.ARPA
Message-ID: <850416110649.7.GAVAN@MORRISON.MIT>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 8.2,
microcode TMC5-MIC 319, FEP 22, on Lisp Machine Jim Morrison:

I need to examine the source for ZWEI:NETWORK-SEND-IT to figure out how to
keep Zmail from trying to connect to OZ when sending mail (notice local var
10).  However, because some PINHEAD decided to withhold the Zmail sources, I
can't.

Until this RIDICULOUS source withholding policy is lifted, Symbolics' products
are inferior to any other that does not withhold sources.

Please feel free to express my absolute disgust to whoever's responsible for
this lossage.  Also, please let me know whether I can expect a resolution of
these problems or should instead look into using a Lambda.

>>Break: 
While in the function PROCESS-WAIT  CHAOS:WAIT  CHAOS:WAIT-FOR-CONNECT

ZWEI:NETWORK-SEND-IT:  (P.C. = 132)
   Arg 0 (RECIPIENTS): ((:NAME "GAVAN" :HOST (:OBJECT #<ITS-HOST MC 1700423>) :INTERVAL (("To: GAVAN@MC" 4) ("To: GAVAN@MC" 12))))
   Arg 1 (TEMPLATE-EXPANSION): (:TEXT #<NODE 15772611> :HEADERS (:DATE 2691503436 :FROM ((:USER #<USER GAVAN 1706357>)) :SUBJECT "Test" :TO ((:NAME "GAVAN" :HOST ** :INTERVAL **)) :MESSAGE-ID "<850416105036.5.GAVAN@MORRISON.MIT>") :HEADER-FORMAT :INCLUDE-PERSONAL :TRANSMIT-TIME 2691503436 :DRAFT-MSG #<DRAFT-MSG 15772367>)
   Local 2 (RECIPIENT): (:NAME "GAVAN" :HOST (:OBJECT #<ITS-HOST MC 1700423>) :INTERVAL (("To: GAVAN@MC" 4) ("To: GAVAN@MC" 12)))
   Local 3 (.ME-P.): T
   Local 4: #<DTP-LOCATIVE 43601136>
   Local 5: SYS:UNWIND-PROTECT-TAG
   Local 6: #<DTP-ODD-PC 47564163>
   Local 7: #<DTP-LOCATIVE 43601142>
   Local 8: #<DTP-LOCATIVE 43640562>
   Local 9 (HEADER-FORMAT-ALIST): ((:ARPANET (:NAME "GAVAN" :HOST (:OBJECT #<ITS-HOST MC 1700423>) :INTERVAL (** **))))
   Local 10 (SERVICES): (#<SERVICE-ACCESS-PATH STORE-AND-FORWARD-MAIL (CHAOS-MAIL) -- OZ on CHAOS 15772630>)
   Local 11: NIL
   Local 12 (LIST): ((:NAME "GAVAN" :HOST (:OBJECT #<ITS-HOST MC 1700423>) :INTERVAL (("To: GAVAN@MC" 4) ("To: GAVAN@MC" 12))))
   Local 13: NIL

ZWEI:FUNCALL-TEMPLATE-EXPANSION:  (P.C. = 47)
   Arg 0 (TEMPLATE-EXPANSION): (:TEXT #<NODE 15772611> :HEADERS (:DATE 2691503436 :FROM ((:USER #<USER GAVAN 1706357>)) :SUBJECT "Test" :TO ((:NAME "GAVAN" :HOST ** :INTERVAL **)) :MESSAGE-ID "<850416105036.5.GAVAN@MORRISON.MIT>") :HEADER-FORMAT :INCLUDE-PERSONAL :TRANSMIT-TIME 2691503436 :DRAFT-MSG #<DRAFT-MSG 15772367>)
   Arg 1 (FUNCTION): ZWEI:NETWORK-SEND-IT
   Rest arg (ARGS): (((:NAME "GAVAN" :HOST (:OBJECT #<ITS-HOST MC 1700423>) :INTERVAL (** **))) (:TEXT #<NODE 15772611> :HEADERS (:DATE 2691503436 :FROM (**) :SUBJECT "Test" :TO (**) :MESSAGE-ID "<850416105036.5.GAVAN@MORRISON.MIT>") :HEADER-FORMAT :INCLUDE-PERSONAL :TRANSMIT-TIME 2691503436 :DRAFT-MSG #<DRAFT-MSG 15772367>))

(:METHOD ZWEI:BASIC-DRAFT-MSG :TRANSMIT):  (P.C. = 315)
   Arg 0 (SELF): #<DRAFT-MSG 15772367>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:BASIC-DRAFT-MSG -- 7. IV's, 0. FL's 142602635>
   Arg 2 (OPERATION): :TRANSMIT

(:METHOD ZWEI:DRAFT-MSG :COMBINED :TRANSMIT):  (P.C. = 44)
   Arg 0 (SELF): #<DRAFT-MSG 15772367>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:DRAFT-MSG -- 17. IV's, 3. FL's 142602645>
   Arg 2 (.OPERATION.): :TRANSMIT
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

ZWEI:COM-SEND-MESSAGE:  (P.C. = 54)

ZWEI:COM-MAIL-END:  (P.C. = 4)

ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
   Arg 0 (COMMAND): ZWEI:COM-MAIL-END
   Arg 1 (CHAR): 148
   Arg 2 (PREFIX-CHAR): NIL
   Arg 3 (HOOK-LIST): NIL

ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
   Arg 0 (CH): 148

(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 233)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 43200617 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:EDITOR -- 12. IV's, 0. FL's 142611573>
   Arg 2 (OPERATION): :EDIT
   --Defaulted args:--
   Arg 3 (TOP-LEVEL-P): T
   Arg 4 (DESCRIPTION): NIL

(:METHOD ZWEI:ZMAIL-FRAME :COMBINED :EDIT):  (P.C. = 70)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 43200617 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-FRAME -- 65. IV's, 20. FL's 142611405>
   Arg 2 (.OPERATION.): :EDIT
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

ZWEI:ZMAIL-MAIL:  (P.C. = 105)
   Arg 0 (CONFIGURATION): :MAIL
   Arg 1 (STARTING-WINDOW): #<WINDOW 122262716>

ZWEI:CONTINUE-DRAFT-MSG:  (P.C. = 21)
   Arg 0 (DRAFT-MSG): #<DRAFT-MSG 15772367>

ZWEI:COMPOSE-VIA-DRAFT-MSG:  (P.C. = 5)
   Arg 0 (TEMPLATE-EXPANSION): (:STARTING-POINT ((:HEADERS :TO)) :HEADERS (:TO NIL :SUBJECT NIL) :MSGS NIL)

ZWEI:FUNCALL-TEMPLATE-EXPANSION:  (P.C. = 47)
   Arg 0 (TEMPLATE-EXPANSION): (:STARTING-POINT ((:HEADERS :TO)) :HEADERS (:TO NIL :SUBJECT NIL) :MSGS NIL)
   Arg 1 (FUNCTION): #<DTP-COMPILED-FUNCTION ZWEI:COMPOSE-VIA-DRAFT-MSG 47551501>
   Rest arg (ARGS): ((:STARTING-POINT ((:HEADERS :TO)) :HEADERS (:TO NIL :SUBJECT NIL) :MSGS NIL))

ZWEI:COMPOSE-FROM-TEMPLATE:  (P.C. = 20)
   Arg 0 (TEMPLATE): ZWEI:MAIL-TEMPLATE
   Rest arg (PLIST): (:MSGS NIL)

ZWEI:COM-ZMAIL-MAIL:  (P.C. = 11)

ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
   Arg 0 (COMMAND): ZWEI:COM-ZMAIL-MAIL
   Arg 1 (CHAR): 109
   --Defaulted args:--
   Arg 2 (PREFIX-CHAR): NIL
   Arg 3 (HOOK-LIST): NIL

ZWEI:ZMAIL-COMMAND-EXECUTE:  (P.C. = 6)
   Arg 0: ZWEI:COM-ZMAIL-MAIL

(:METHOD ZWEI:ZMAIL-FRAME :PROCESS-COMMAND-CHAR):  (P.C. = 7)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 43200617 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-FRAME -- 65. IV's, 20. FL's 142611405>
   Arg 2 (OPERATION): :PROCESS-COMMAND-CHAR
   Arg 3 (CH): 109

(:INTERNAL (:INTERNAL (:METHOD ZWEI:ZMAIL-FRAME :COMBINED :PROCESS-COMMAND-CHAR) 0) 0):  (P.C. = 10)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 43200617 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-FRAME -- 65. IV's, 20. FL's 142611405>
   Arg 2 (.OPERATION.): :PROCESS-COMMAND-CHAR
   Rest arg (.DAEMON-CALLER-ARGS.): (109)

(:METHOD ZWEI:ZMAIL-COMMAND-LOOP-MIXIN :WHOPPER :PROCESS-COMMAND-CHAR):  (P.C. = 21)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 43200617 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-COMMAND-LOOP-MIXIN -- 6. IV's, 0. FL's 142611503>
   Arg 2 (.WHOPPER-CONTINUATION.): #<DTP-COMPILED-FUNCTION (:INTERNAL (:INTERNAL (:METHOD ZWEI:ZMAIL-FRAME :COMBINED :PROCESS-COMMAND-CHAR) 0) 0) 47674121>
   Arg 3 (.OLD-SELF-MAPPING-TABLE.): #<Map to flavor ZWEI:ZMAIL-FRAME -- 65. IV's, 20. FL's 142611405>
   Arg 4 (.OPERATION.): :PROCESS-COMMAND-CHAR
   Arg 5 (CHAR): 109

(:INTERNAL (:METHOD ZWEI:ZMAIL-FRAME :COMBINED :PROCESS-COMMAND-CHAR) 0):  (P.C. = 13)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 43200617 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-FRAME -- 65. IV's, 20. FL's 142611405>
   Arg 2 (.OPERATION.): :PROCESS-COMMAND-CHAR
   Rest arg (.DAEMON-CALLER-ARGS.): (109)

(:METHOD ZWEI:ZMAIL-FRAME :WHOPPER :PROCESS-COMMAND-CHAR):  (P.C. = 21)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 43200617 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-FRAME -- 65. IV's, 20. FL's 142611405>
   Arg 2 (.WHOPPER-CONTINUATION.): #<DTP-COMPILED-FUNCTION (:INTERNAL (:METHOD ZWEI:ZMAIL-FRAME :COMBINED :PROCESS-COMMAND-CHAR) 0) 47674106>
   Arg 3 (.OLD-SELF-MAPPING-TABLE.): #<Map to flavor ZWEI:ZMAIL-FRAME -- 65. IV's, 20. FL's 142611405>
   Arg 4 (.OPERATION.): :PROCESS-COMMAND-CHAR
   Arg 5 (CHAR): 109

(:METHOD ZWEI:ZMAIL-FRAME :COMBINED :PROCESS-COMMAND-CHAR):  (P.C. = 12)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 43200617 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-FRAME -- 65. IV's, 20. FL's 142611405>
   Arg 2 (.OPERATION.): :PROCESS-COMMAND-CHAR
   Rest arg (.DAEMON-CALLER-ARGS.): (109)

(:METHOD ZWEI:ZMAIL-FRAME :COMMAND-LOOP):  (P.C. = 143)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 43200617 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-FRAME -- 65. IV's, 20. FL's 142611405>
   Arg 2 (OPERATION): :COMMAND-LOOP

(:METHOD ZWEI:ZMAIL-FRAME :COMBINED :COMMAND-LOOP):  (P.C. = 70)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 43200617 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-FRAME -- 65. IV's, 20. FL's 142611405>
   Arg 2 (.OPERATION.): :COMMAND-LOOP
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

ZWEI:ZMAIL-PROCESS-TOP-LEVEL:  (P.C. = 105)
   Arg 0 (WINDOW): #<ZMAIL-FRAME Main Zmail Window 43200617 exposed>

SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
   --Defaulted args:--
   Arg 0 (IGNORE): NIL
17-Apr-85 12:47:31-EST,1632;000000000000
Received: from 31532 by MIT-OZ via Chaosnet; 17 Apr 85 12:29-EST
Received: from SCRC-NEPONSET by WAIKATO via CHAOS with CHAOS-MAIL id 93078; Wed 17-Apr-85 12:32:13-EST
Date: Wednesday, 17 April 1985, 12:28-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: Flavor Bugs
To: jcma at MIT-MC, BUG-LISPM at OZ
In-Reply-To: <850415072445.4.JCMA@MORRISON.MIT>
Message-ID: <850417122840.1.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Monday, 15 April 1985, 07:24-EST
    From: jcma@MIT-MC

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 8.1,
    microcode TMC5-MIC 319, FEP 22, on Lisp Machine Jim Morrison:

    I have the following flavor defined in the relatus package.

    (DEFFLAVOR PARSE-FERROR	() (HACK-FORMAT-ARGS PARSE-ERROR))

    When I compile it I get a warning that it is redefining DBG:PARSE-FERROR.  It
    asked me if I wanted to proceed or not.  I typed N for no. Then it told me
    that it was redefining the old flavor with the new one, and finally printed
    out in the minibuffer "Flavor PARSE-FERROR compiled."

    1) Why does my flavor in my own package conflict with one in the dbg package?
    This shouldn't happen.

What packages does your package :USE?  On my machine,
	(eq 'dbg:parse-error 'sys:parse-error) => T
I'll guess that you :USE DEBUGGER, which I'm not sure is a good idea,
but I'm sure you have your reasons.

    2) Why doesn't it say something that makes more sense when I type no, like
    aborting redefinition of flavor?

    3) Why does it ask me if I want to redefine this dbg flavor twice once I type
    no the first time?
17-Apr-85 13:05:56-EST,665;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 17 Apr 85 12:45-EST
Received: from MIT-MORRISON by MIT-MC via Chaosnet; 16 APR 85  12:38:40 EST
Date: Tue, 16 Apr 85 12:37 EST
From: Gavan Duffy <GAVAN@OZ.MIT>
Subject: Completing the [Get Inbox] default.
To: BUG-LISPM@MIT-MC.ARPA
Message-ID: <850416123701.2.GAVAN@MORRISON.MIT>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 8.2,
microcode TMC5-MIC 319, FEP 22, on Lisp Machine Jim Morrison:

When completing the [Get Inbox] prompt from a filename, with MC:RELAT;GAVAN MAIL 
as the default, I get MC:RELAT;>.  That's kind of counter-intuitive,
isn't it?  Shouldn't it just complete to the default?
17-Apr-85 13:07:46-EST,2066;000000000000
Received: from 31532 by MIT-OZ via Chaosnet; 17 Apr 85 12:47-EST
Received: from SCRC-NEPONSET by WAIKATO via CHAOS with CHAOS-MAIL id 93086; Wed 17-Apr-85 12:50:12-EST
Date: Wednesday, 17 April 1985, 12:46-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: Shouldn't this work?
To: Ken Haase <KWH at OZ>, BUG-LISPM at OZ
In-Reply-To: <850416192320.1.KWH@ROBOT-5.MIT>
Message-ID: <850417124640.4.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Tuesday, 16 April 1985, 19:23-EST
    From: Ken Haase <KWH at OZ>

    In Symbolics 3670 Release 6.0, IP-TCP 29.0, AISite 8.2,
    Experimental Meta Representation Langauge 2.15,
    microcode TMC5-IO4-FPA-MIC 319, on Lisp Machine Robot-5:

    ;;; Evaluating the forms:

    (defsubst foo (x)
      (do ((x x (dbg:check-arg-1 'x x "a number")))
	  ((numberp x) (+ x 3))))

    ;;; and 
    (macroexpand '(foo y))

    produces the following error-- it seems to me that this makes sense as a
    subst, providing you know not to substitute for the inner X's, which
    should be able to be resolved at macro-expand time; 
"The semantics of DEFSUBST do not allow the binding of the formal
parameters."  I think I believe that.  Indeed, it is possible to do what
you want, but programs could develop subtle bugs.  Consider a macro used
inside the body of the subst that expands into a(n unfortunate) binding
of a variable of the same name as a parameter.  I won't endorse such a
macro anyway, but I think the restriction pays off in the long run.
    in any case, the
    binding of X should also be able to be caught at DEFSUBST time, rather
    than waiting for the attempt to macroexpand FOO.
That's possibly a good idea.

Also note that 'X will not get substitued!  Therefore, dbg:check-arg-1
will claim that the variable X is of the wrong type, even if you called
it XYZZY.

    >>Error: Attempt to set or bind the SUBST parameter X.
    While in the function (:INTERNAL LT::LET-SUBST-COPYFORMS 0 LT::LET-SUBST-COPY)  LT::MAPFORMS-CALL  LT::MAPFORMS-BIND

17-Apr-85 13:11:13-EST,5941;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 17 Apr 85 12:54-EST
Received: from MIT-MORRISON by MIT-MC via Chaosnet; 16 APR 85  12:45:37 EST
Date: Tue, 16 Apr 85 12:44 EST
From: Gavan Duffy <GAVAN@OZ.MIT>
Subject: Send to NIL
To: BUG-LISPM@MIT-MC.ARPA
Message-ID: <850416124403.3.GAVAN@MORRISON.MIT>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 8.2,
microcode TMC5-MIC 319, FEP 22, on Lisp Machine Jim Morrison:

Here's a send to NIL.  It happens every time I send mail from the debugger.
It may have been due to some switch that I set, but I can't tell BECAUSE I
DON'T HAVE THE GODDAM SOURCES!  

Anyway, I get out of it by having
MAILER:ALL-MAIL-ADDRESSES-FORWARD-BETWEEN-HOSTS-P evaluate and return
#'ignore.  But this makes the mail address be BUG-LISPM@NIL, which has to be
edited by hand.

>>Error: The symbol NIL has an invalid function definition
While in the function NIL  MAILER:ALL-MAIL-ADDRESSES-FORWARD-BETWEEN-HOSTS-P  ZWEI:PARSE-BUG-ARG

NIL:
   Arg 0: :SITE

MAILER:ALL-MAIL-ADDRESSES-FORWARD-BETWEEN-HOSTS-P:  (P.C. = 12)
   Arg 0 (HOST-1): #<TOPS20-HOST OZ 1700407>
   Arg 1 (HOST-2): NIL

ZWEI:PARSE-BUG-ARG:  (P.C. = 34)
   Arg 0 (SYSTEM): DBG:LISPM
   Local 0 (SYSTEM): "LISPM"

BUG:  (P.C. = 12)
   Arg 0 (SYSTEM): DBG:LISPM
   Arg 1 (ADDITIONAL-BODY): "
>>Error: The symbol NIL has an invalid function definition
While in the function NIL  (:METHOD ZWEI:RMAIL-BUFFER :GET-INBOX)  ZWEI:GET-INBOX-FOR-BUFFER

NIL:
   Arg 0: :NEW-CANONICAL-TYPE
   Arg 1: :ZMAIL-TEMP

/(:METHOD ZWEI:RMAIL-BUFFER :GET-INBOX):  (P.C. = 33)
   Arg 0 (SELF): #<RMAIL-BUFFER /"MC: RELAT; GAVAN MAIL/" 34530047>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:RMAIL-BUFFER -- 3. IV's, 5. FL's 142672653>
   Arg 2 (OPERATION): :GET-INBOX
   Arg 3 (NEW-PATHNAME): NIL
   Arg 4 (DELETE-P): NIL

ZWEI:GET-INBOX-FOR-BUFFER:  (P.C. = 63)
   Arg 0 (BUFFER): #<RMAIL-BUFFER /"MC: RELAT; GAVAN MAIL/" 34530047>
   Arg 1 (FROM-PATHNAME): NIL
   Arg 2 (DELETE-P): NIL
   Arg 3 (TELL-BACKGROUND-P): NIL

ZWEI:COM-GET-INBOX-INTERNAL:  (P.C. = 253)
   Arg 0 (FIRST-TIME-P): NIL
   --Defaulted args:--
   Arg 1 (FOR-BUFFER): #<RMAIL-BUFFER /"MC: RELAT; GAVAN MAIL/" 34530047>

ZWEI:COM-GET-NEW-MAIL-FROM-INBOX:  (from AISITE: PATCH; AISITE-8-2)

ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
   Arg 0 (COMMAND): ZWEI:COM-GET-NEW-MAIL-FROM-INBOX
   Arg 1 (CHAR): (:MENU (/"Get inbox/" . ZWEI:COM-GET-NEW-MAIL-FROM-INBOX) 4 #<ZMAIL-MAIN-COMMAND-MENU-PANE Zmail Main Command Menu Pane 3 43207626 exposed>)
   --Defaulted args:--
   Arg 2 (PREFIX-CHAR): NIL
   Arg 3 (HOOK-LIST): NIL

ZWEI:ZMAIL-COMMAND-EXECUTE:  (P.C. = 6)
   Arg 0: ZWEI:COM-GET-NEW-MAIL-FROM-INBOX

/(:INTERNAL ZWEI:ZMAIL-COMMAND-LIST 0 (:MENU)):  (P.C. = 10)
   Arg 0 (**DEFSELECT-OP**): :MENU
   Arg 1 (ITEM): (/"Get inbox/" . ZWEI:COM-GET-NEW-MAIL-FROM-INBOX)
   Arg 2 (CH): 4
   Arg 3 (WINDOW): #<ZMAIL-MAIN-COMMAND-MENU-PANE Zmail Main Command Menu Pane 3 43207626 exposed>

Rest of stack:
ZWEI:ZMAIL-COMMAND-LIST:  (P.C. = 12)
/(:METHOD ZWEI:ZMAIL-FRAME :PROCESS-SPECIAL-COMMAND):  (P.C. = 16)
/(:METHOD ZWEI:ZMAIL-FRAME :COMMAND-LOOP):  (P.C. = 136)
/(:METHOD ZWEI:ZMAIL-FRAME :COMBINED :COMMAND-LOOP):  (P.C. = 70)
ZWEI:ZMAIL-PROCESS-TOP-LEVEL:  (P.C. = 105)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)"
   Arg 2 (PROMPT): "Please explain the circumstances that led to this bug, and how it can be reproduced"
   Arg 3 (POINT-BEFORE-ADDITIONAL-BODY): T
   --Defaulted args:--
   Arg 4 (MAKE-SUBJECT): (T :INIT :BUG)
   Arg 5 (INITIAL-SUBJECT): NIL

SI:PROCESS-RUN-FUNCTION-INTERNAL:  (P.C. = 52)
   Arg 0 (RESTART-ON-RESET): NIL
   Arg 1 (FUNCTION): #<DTP-COMPILED-FUNCTION BUG 31632061>
   Rest arg (ARGS): (DBG:LISPM "
>>Error: The symbol NIL has an invalid function definition
While in the function NIL  (:METHOD ZWEI:RMAIL-BUFFER :GET-INBOX)  ZWEI:GET-INBOX-FOR-BUFFER

NIL:
   Arg 0: :NEW-CANONICAL-TYPE
   Arg 1: :ZMAIL-TEMP

/(:METHOD ZWEI:RMAIL-BUFFER :GET-INBOX):  (P.C. = 33)
   Arg 0 (SELF): #<RMAIL-BUFFER /"MC: RELAT; GAVAN MAIL/" 34530047>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:RMAIL-BUFFER -- 3. IV's, 5. FL's 142672653>
   Arg 2 (OPERATION): :GET-INBOX
   Arg 3 (NEW-PATHNAME): NIL
   Arg 4 (DELETE-P): NIL

ZWEI:GET-INBOX-FOR-BUFFER:  (P.C. = 63)
   Arg 0 (BUFFER): #<RMAIL-BUFFER /"MC: RELAT; GAVAN MAIL/" 34530047>
   Arg 1 (FROM-PATHNAME): NIL
   Arg 2 (DELETE-P): NIL
   Arg 3 (TELL-BACKGROUND-P): NIL

ZWEI:COM-GET-INBOX-INTERNAL:  (P.C. = 253)
   Arg 0 (FIRST-TIME-P): NIL
   --Defaulted args:--
   Arg 1 (FOR-BUFFER): #<RMAIL-BUFFER /"MC: RELAT; GAVAN MAIL/" 34530047>

ZWEI:COM-GET-NEW-MAIL-FROM-INBOX:  (from AISITE: PATCH; AISITE-8-2)

ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
   Arg 0 (COMMAND): ZWEI:COM-GET-NEW-MAIL-FROM-INBOX
   Arg 1 (CHAR): (:MENU (/"Get inbox/" . ZWEI:COM-GET-NEW-MAIL-FROM-INBOX) 4 #<ZMAIL-MAIN-COMMAND-MENU-PANE Zmail Main Command Menu Pane 3 43207626 exposed>)
   --Defaulted args:--
   Arg 2 (PREFIX-CHAR): NIL
   Arg 3 (HOOK-LIST): NIL

ZWEI:ZMAIL-COMMAND-EXECUTE:  (P.C. = 6)
   Arg 0: ZWEI:COM-GET-NEW-MAIL-FROM-INBOX

/(:INTERNAL ZWEI:ZMAIL-COMMAND-LIST 0 (:MENU)):  (P.C. = 10)
   Arg 0 (**DEFSELECT-OP**): :MENU
   Arg 1 (ITEM): (/"Get inbox/" . ZWEI:COM-GET-NEW-MAIL-FROM-INBOX)
   Arg 2 (CH): 4
   Arg 3 (WINDOW): #<ZMAIL-MAIN-COMMAND-MENU-PANE Zmail Main Command Menu Pane 3 43207626 exposed>

Rest of stack:
ZWEI:ZMAIL-COMMAND-LIST:  (P.C. = 12)
/(:METHOD ZWEI:ZMAIL-FRAME :PROCESS-SPECIAL-COMMAND):  (P.C. = 16)
/(:METHOD ZWEI:ZMAIL-FRAME :COMMAND-LOOP):  (P.C. = 136)
/(:METHOD ZWEI:ZMAIL-FRAME :COMBINED :COMMAND-LOOP):  (P.C. = 70)
ZWEI:ZMAIL-PROCESS-TOP-LEVEL:  (P.C. = 105)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)" "Please explain the circumstances that led to this bug, and how it can be reproduced" T)

SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
   Arg 0 (IGNORE): NIL
17-Apr-85 13:13:34-EST,3672;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 17 Apr 85 12:54-EST
Received: from MIT-MORRISON by MIT-MC via Chaosnet; 16 APR 85  12:48:54 EST
Date: Tue, 16 Apr 85 12:47 EST
From: Gavan Duffy <GAVAN@OZ.MIT>
Subject: Another send to NIL
To: BUG-LISPM@MIT-MC.ARPA
Message-ID: <850416124745.4.GAVAN@MORRISON.MIT>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 8.2,
microcode TMC5-MIC 319, FEP 22, on Lisp Machine Jim Morrison:

Here's another one I might be able to handle myself if I had the sources.
Trying to [Get Inbox] of an RMail buffer.

>>Error: The symbol NIL has an invalid function definition
While in the function NIL  (:METHOD ZWEI:RMAIL-BUFFER :GET-INBOX)  ZWEI:GET-INBOX-FOR-BUFFER

NIL:
   Arg 0: :NEW-CANONICAL-TYPE
   Arg 1: :ZMAIL-TEMP

(:METHOD ZWEI:RMAIL-BUFFER :GET-INBOX):  (P.C. = 33)
   Arg 0 (SELF): #<RMAIL-BUFFER "MC: RELAT; GAVAN MAIL" 34530047>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:RMAIL-BUFFER -- 3. IV's, 5. FL's 142672653>
   Arg 2 (OPERATION): :GET-INBOX
   Arg 3 (NEW-PATHNAME): NIL
   Arg 4 (DELETE-P): NIL

ZWEI:GET-INBOX-FOR-BUFFER:  (P.C. = 63)
   Arg 0 (BUFFER): #<RMAIL-BUFFER "MC: RELAT; GAVAN MAIL" 34530047>
   Arg 1 (FROM-PATHNAME): NIL
   Arg 2 (DELETE-P): NIL
   Arg 3 (TELL-BACKGROUND-P): NIL

ZWEI:COM-GET-INBOX-INTERNAL:  (P.C. = 253)
   Arg 0 (FIRST-TIME-P): NIL
   --Defaulted args:--
   Arg 1 (FOR-BUFFER): #<RMAIL-BUFFER "MC: RELAT; GAVAN MAIL" 34530047>

ZWEI:COM-GET-NEW-MAIL-FROM-INBOX:  (from AISITE: PATCH; AISITE-8-2)

ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
   Arg 0 (COMMAND): ZWEI:COM-GET-NEW-MAIL-FROM-INBOX
   Arg 1 (CHAR): (:MENU ("Get inbox" . ZWEI:COM-GET-NEW-MAIL-FROM-INBOX) 4 #<ZMAIL-MAIN-COMMAND-MENU-PANE Zmail Main Command Menu Pane 3 43207626 exposed>)
   --Defaulted args:--
   Arg 2 (PREFIX-CHAR): NIL
   Arg 3 (HOOK-LIST): NIL

ZWEI:ZMAIL-COMMAND-EXECUTE:  (P.C. = 6)
   Arg 0: ZWEI:COM-GET-NEW-MAIL-FROM-INBOX

(:INTERNAL ZWEI:ZMAIL-COMMAND-LIST 0 (:MENU)):  (P.C. = 10)
   Arg 0 (**DEFSELECT-OP**): :MENU
   Arg 1 (ITEM): ("Get inbox" . ZWEI:COM-GET-NEW-MAIL-FROM-INBOX)
   Arg 2 (CH): 4
   Arg 3 (WINDOW): #<ZMAIL-MAIN-COMMAND-MENU-PANE Zmail Main Command Menu Pane 3 43207626 exposed>

ZWEI:ZMAIL-COMMAND-LIST:  (P.C. = 12)
   Arg 0 (OPERATION): :MENU
   Rest arg (SELECT-METHOD-ARGS): (("Get inbox" . ZWEI:COM-GET-NEW-MAIL-FROM-INBOX) 4 #<ZMAIL-MAIN-COMMAND-MENU-PANE Zmail Main Command Menu Pane 3 43207626 exposed>)

(:METHOD ZWEI:ZMAIL-FRAME :PROCESS-SPECIAL-COMMAND):  (P.C. = 16)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 43200617 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-FRAME -- 65. IV's, 20. FL's 142611405>
   Arg 2 (OPERATION): :PROCESS-SPECIAL-COMMAND
   Rest arg (ARGS): (:MENU ("Get inbox" . ZWEI:COM-GET-NEW-MAIL-FROM-INBOX) 4 #<ZMAIL-MAIN-COMMAND-MENU-PANE Zmail Main Command Menu Pane 3 43207626 exposed>)

(:METHOD ZWEI:ZMAIL-FRAME :COMMAND-LOOP):  (P.C. = 136)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 43200617 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-FRAME -- 65. IV's, 20. FL's 142611405>
   Arg 2 (OPERATION): :COMMAND-LOOP

(:METHOD ZWEI:ZMAIL-FRAME :COMBINED :COMMAND-LOOP):  (P.C. = 70)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 43200617 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-FRAME -- 65. IV's, 20. FL's 142611405>
   Arg 2 (.OPERATION.): :COMMAND-LOOP
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

ZWEI:ZMAIL-PROCESS-TOP-LEVEL:  (P.C. = 105)
   Arg 0 (WINDOW): #<ZMAIL-FRAME Main Zmail Window 43200617 exposed>

SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
   Arg 0 (IGNORE): NIL
17-Apr-85 13:14:24-EST,821;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 17 Apr 85 12:55-EST
Received: from MIT-MORRISON by MIT-MC via Chaosnet; 16 APR 85  12:55:20 EST
Date: Tue, 16 Apr 85 12:54 EST
From: Gavan Duffy <GAVAN@OZ.MIT>
Subject: (DBG:CONDITION :BUG-REPORT-DESCRIPTION)
To: BUG-LISPM@MIT-MC.ARPA
Message-ID: <850416125401.6.GAVAN@MORRISON.MIT>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 8.2,
microcode TMC5-MIC 319, FEP 22, on Lisp Machine Jim Morrison:

The text of the FQUERYs in (:METHOD DBG:CONDITION :BUG-REPORT-DESCRIPTION)
should be abstracted out of the method so that users who tire of reading the
lengthy text can use their own, more succinct, strings instead.
Alternatively, there should be shorter versions of these FQUERYs which can be
evaluated instead of the verbose FQUERYs by setting a switch.
17-Apr-85 13:34:05-EST,1569;000000000000
Received: from MIT-APIARY-4 by MIT-OZ via Chaosnet; 17 Apr 85 13:33-EST
Date: Wednesday, 17 April 1985, 13:32-EST
From: Van-Duc Nguyen <VANDUC at OZ>
Subject: THE STEPPER BECOMES USELESS IN RELEASE 6.0
To: BUG-LISPM at OZ
Message-ID: <"850417133214.1.vanduc@OZ"@APIARY-4.MIT>

Hi,

I notice that in Release 6.0, when a function or procedure
is evaluated and stepped, you can no longer look at the values
of the local variables.

With the previous releases, release 5.2, for example, you
can single-step a procedure, and look at the variables anytime
by just telling the read-eval loop to eval the variables. Ex:

(defun discriminant (a b c)
    (let ((ac (* a c)))
	(sqrt (- (* b b) 
	         (* 4 ac)))))

(step '(discriminant 1 -3.0 2))
 (DISCRIMINANT 1 -3.0 2)
   1  1
   -3.0  -3.0
   2  2
   (LET ((AC (* A C))) (SQRT (- (* B B) (* 4 AC))))
     (* A C)  2
     (SQRT (- (* B B) (* 4 AC))) Eval: ac
2

We get 2, but with release 6.0 which has a lexically-scoped
interpreter rather than a dynamically-scoped one, we get
UNBOUND!!! 

>>Trap: the variable ac is unbound.

The window debugger is also useless, because clicking to
see the variables will return UNBOUND.

Please, I would like to know two things:
 1. if you will add features to release 6.0 such that the
stepper will work as before, i.e. like dynamically-scope.
 2. if there is existing feature that allows me to look
at the values of local variables.

Thanks. I think many people will appreciate your attention
to this matter. Bye. Van-Duc.
17-Apr-85 13:43:51-EST,507;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 17 Apr 85 13:43-EST
Date: 17 Apr 1985  13:42 EST (Wed)
Message-ID: <SR.EHPYC.12103917035.BABYL@MIT-SPEECH>
From: Scott Cyphers <SR.EHPYC@MIT-SPEECH>
To:   Van-Duc Nguyen <VANDUC@OZ>
Cc:   BUG-LISPM@OZ
Subject: THE STEPPER BECOMES USELESS IN RELEASE 6.0
In-reply-to: Msg of 17 Apr 1985 13:32-EST from Van-Duc Nguyen <VANDUC at OZ>

You may be interested in knowing that you can step compiled code in
Rel 6.  Look at the debugger help information.
17-Apr-85 14:09:30-EST,839;000000000000
Received: from MIT-ELVIS by MIT-OZ via Chaosnet; 17 Apr 85 14:09-EST
Date: Wednesday, 17 April 1985, 14:07-EST
From: Chris Lindblad <cjl at OZ>
Subject: default file for cp command :Compile File isn't of type :lisp
To: BUG-LISPM at OZ
cc: Zvona at OZ
Message-ID: <850417140737.1.CJL@ELVIS.MIT>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 8.2,
microcode TMC5-MIC 319, FEP 22, on Lisp Machine Elvis Presley:

The cp command :compile file doesn't make the default type in its default lisp.
The default type for :Compile File should be lisp, just like the the default for
:Show Directory is :wild for name and type.

(fs:merge-pathnames-and-set-defaults "foo.bar")
#<LMFS-PATHNAME "B:>cjl>foo.bar">

:Compile File (file [default B:>cjl>foo.bar]) 

It should say:

:Compile File (file [default B:>cjl>foo.lisp]) 
17-Apr-85 15:14:06-EST,1927;000000000000
Received: from MIT-ROBOT-2 by MIT-OZ via Chaosnet; 17 Apr 85 15:13-EST
Date: Wednesday, 17 April 1985, 15:11-EST
From: Patrick A. O'Donnell <PAO at MIT-EECS>
Subject: Old bugs die hard.
To: BUG-LISPM at OZ
Message-ID: <850417151156.1.PAO@ROBOT-2.MIT>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 8.2,
Experimental Manip 5.0, microcode TMC5-MIC 319, FEP 18, on Lisp Machine Robot-2:

C-U M-X Compile File still (again?) produces this error.  I think I
reported this back in release 4.

>>Error: The object #<LISP-MODE 120576060> received a :DEFAULT-BINARY-FILE-TYPE message, which went unclaimed.
         The rest of the message was ()
While in the function ZWEI:COM-COMPILE-FILE  ZWEI:COM-EXTENDED-COMMAND  ZWEI:COMMAND-EXECUTE

ZWEI:COM-COMPILE-FILE:  (P.C. = 20)
   Local 0 (PATH): #<VMS-PATHNAME "PIG:USRD$:[PUMA.MANIP]MSYSCHK.LSP">
   Local 1 (MAJOR-MODE): #<LISP-MODE 120576060>

ZWEI:COM-EXTENDED-COMMAND:  (P.C. = 27)

ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
   Arg 0 (COMMAND): ZWEI:COM-EXTENDED-COMMAND
   Arg 1 (CHAR): 600
   Arg 2 (PREFIX-CHAR): NIL
   Arg 3 (HOOK-LIST): (ZWEI:SHIFT-LOCK-HOOK)

ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
   Arg 0 (CH): 600

(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 233)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 121171573>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:EDITOR -- 12. IV's, 0. FL's 142346020>
   Arg 2 (OPERATION): :EDIT
   --Defaulted args:--
   Arg 3 (TOP-LEVEL-P): T
   Arg 4 (DESCRIPTION): NIL

(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 60)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 121171573>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:TOP-LEVEL-EDITOR -- 13. IV's, 1. FL's 142345776>
   Arg 2 (.OPERATION.): :EDIT
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 51)

SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
   --Defaulted args:--
   Arg 0 (IGNORE): NIL
17-Apr-85 16:09:17-EST,1676;000000000000
Received: from MIT-MORRISON by MIT-OZ via Chaosnet; 17 Apr 85 16:08-EST
Date: Wednesday, 17 April 1985, 16:07-EST
From: Gavan Duffy <GAVAN at OZ>
Subject: Flavor Bugs
To: DCP at SCRC-QUABBIN, jcma at MIT-MC, BUG-LISPM at OZ
In-Reply-To: <850417122840.1.NFEP@NEPONSET.SCRC.Symbolics.COM>
Message-ID: <850417160725.7.GAVAN@MORRISON.MIT>

    Date: Wednesday, 17 April 1985, 12:28-EST
    From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>

	Date: Monday, 15 April 1985, 07:24-EST
	From: jcma@MIT-MC

	In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 8.1,
	microcode TMC5-MIC 319, FEP 22, on Lisp Machine Jim Morrison:

	I have the following flavor defined in the relatus package.

	(DEFFLAVOR PARSE-FERROR	() (HACK-FORMAT-ARGS PARSE-ERROR))

	When I compile it I get a warning that it is redefining DBG:PARSE-FERROR.  It
	asked me if I wanted to proceed or not.  I typed N for no. Then it told me
	that it was redefining the old flavor with the new one, and finally printed
	out in the minibuffer "Flavor PARSE-FERROR compiled."

	1) Why does my flavor in my own package conflict with one in the dbg package?
	This shouldn't happen.

    What packages does your package :USE?  On my machine,
	    (eq 'dbg:parse-error 'sys:parse-error) => T
    I'll guess that you :USE DEBUGGER, which I'm not sure is a good idea,
    but I'm sure you have your reasons.

Both DEBUGGER: and RELATUS: :USE GLOBAL:, and nothing else.  

	2) Why doesn't it say something that makes more sense when I type no, like
	aborting redefinition of flavor?

	3) Why does it ask me if I want to redefine this dbg flavor twice once I type
	no the first time?
17-Apr-85 17:23:40-EST,3708;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 17 Apr 85 17:23-EST
Received: from MIT-MORRISON by MIT-MC via Chaosnet; 17 APR 85  17:02:32 EST
Date: Wed, 17 Apr 85 17:01 EST
From: Gavan Duffy <GAVAN@OZ.MIT>
Subject: Compiler bug?  How the hell should I know?
To: BUG-LISPM@MIT-MC.ARPA
Message-ID: <850417170108.4.GAVAN@MORRISON.MIT>

;In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 8.2,
;microcode TMC5-MIC 319, FEP 22, on Lisp Machine Jim Morrison:
;
;I load the following macro which expands into the defun
;(SELECT-WEBSTER-FIELD-TYPE) that follows it.  Unfortunately, on compilation of
;the SELECT-WEBSTER-FIELD-TYPE, the compiler complains that an OR is unbound.
;OK.  But it's a lie.  The OR isn't unbound.  I redefined
;SELECT-WEBSTER-FIELD-TYPE so that it just does what the SELECT-CHAR macro
;expands into (see below).  That compiles and evaluates just fine.  What gives?
;
;Of course, I could look into this myself IF THERE WERE ANY SOURCES FOR THE
;COMPILER!!!!!

(DEFMACRO SELECT-CHAR (CHAR &BODY BODY)
  "Similar to SELECTQ except that CHAR-EQUAL is used for the comparison,
e.g.:   (SELECT-CHAR CHAR
           ((CHAR1 CHAR2 ...) <forms>)
           ((CHAR1)           <forms>)
           (CHAR1             <forms>)
           (OTHERWISE         <forms>))"
  (ONCE-ONLY (CHAR)
    (LOOP WITH RESULT
	  FOR ITEM IN BODY
	  WHEN (LISTP (FIRST ITEM))
	  DO (LOOP WITH TEST-CLAUSE
		   FOR TCHAR IN (FIRST ITEM)
		   DO (PUSH `(CHAR-EQUAL ,CHAR ,TCHAR) TEST-CLAUSE)
		   FINALLY (PROGN (SETQ TEST-CLAUSE (NREVERSE TEST-CLAUSE))
				  (COND ((> (LENGTH TEST-CLAUSE) 1.)
					 (PUSH 'OR TEST-CLAUSE)
					 (RPLACA ITEM TEST-CLAUSE))
					(T (RPLACA ITEM (FIRST TEST-CLAUSE))))
				  (PUSH ITEM RESULT)))
	  ELSE
	  DO (PROGN
	       (COND ((EQ (FIRST ITEM) 'OTHERWISE) (RPLACA ITEM T))
		     ((NUMBERP (FIRST ITEM))
		      (LET ((R `(CHAR-EQUAL ,CHAR ,(FIRST ITEM))))
			(RPLACA ITEM R))))
	       (PUSH ITEM RESULT))
	  FINALLY (RETURN (CONS 'COND (NREVERSE RESULT))))))

(DEFUN SELECT-WEBSTER-FIELD-TYPE (PREVIOUS-CHAR)
  (SELECT-CHAR PREVIOUS-CHAR
    ((#/D #/d) ':DEFINITION)
    ((#/S #/s) ':SYNONYM)
    ((#/F #/f) ':FIRST)
    ((#/P #/p) ':PRONUNCIATION)
    ((#/E #/e) ':ETYMOLOGY)
    ((#/L #/l) ':LABEL)
    ((#/V #/v) ':VARIANT)
    ((#/R #/r) ':RUNON)
    ((#/X #/x) ':CROSS-REFERENCE)
    ((#/C #/c) ':CONTINUATION)
    (OTHERWISE NIL)))


;Here's what the defun looks like when you just use the macro expansion.  It
;compiles just nifty.  


(DEFUN SELECT-WEBSTER-FIELD-TYPE (PREVIOUS-CHAR)
  (COND ((OR (CHAR-EQUAL PREVIOUS-CHAR 68)
	     (CHAR-EQUAL PREVIOUS-CHAR 100))
	 ':DEFINITION)
	((OR (CHAR-EQUAL PREVIOUS-CHAR 83)
	     (CHAR-EQUAL PREVIOUS-CHAR 115))
	 ':SYNONYM)
	((OR (CHAR-EQUAL PREVIOUS-CHAR 70)
	     (CHAR-EQUAL PREVIOUS-CHAR 102))
	 ':FIRST)
	((OR (CHAR-EQUAL PREVIOUS-CHAR 80)
	     (CHAR-EQUAL PREVIOUS-CHAR 112))
	 ':PRONUNCIATION)
	((OR (CHAR-EQUAL PREVIOUS-CHAR 69)
	     (CHAR-EQUAL PREVIOUS-CHAR 101))
	 ':ETYMOLOGY)
	((OR (CHAR-EQUAL PREVIOUS-CHAR 76)
	     (CHAR-EQUAL PREVIOUS-CHAR 108))
	 ':LABEL)
	((OR (CHAR-EQUAL PREVIOUS-CHAR 86)
	     (CHAR-EQUAL PREVIOUS-CHAR 118))
	 ':VARIANT)
	((OR (CHAR-EQUAL PREVIOUS-CHAR 82)
	     (CHAR-EQUAL PREVIOUS-CHAR 114))
	 ':RUNON)
	((OR (CHAR-EQUAL PREVIOUS-CHAR 88)
	     (CHAR-EQUAL PREVIOUS-CHAR 120))
	 ':CROSS-REFERENCE)
	((OR (CHAR-EQUAL PREVIOUS-CHAR 67)
	     (CHAR-EQUAL PREVIOUS-CHAR 99))
	 ':CONTINUATION)
	(T NIL)))


;If it's a problem with the code, blame JCMa, not me.  Anyway, I suspect that
;the too-valuable to-release-the-sources-to compiler is losing.

;But how the hell should I know?
17-Apr-85 18:09:07-EST,1030;000000000000
Received: from 24610 by MIT-OZ via Chaosnet; 17 Apr 85 18:08-EST
Received: from SCRC-NEPONSET by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 154431; Wed 17-Apr-85 12:36:05-EST
Date: Wednesday, 17 April 1985, 12:36-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: Flavor bug
To: jcma at MIT-MC, BUG-lispm at OZ
In-Reply-To: <850415135203.4.JCMA@MORRISON.MIT>
Message-ID: <850417123604.2.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Monday, 15 April 1985, 13:52-EST
    From: jcma@MIT-MC

    In Symbolics 3600 NIL in Release 6.0, IP-TCP 29.0, AISite 8.1,
    microcode TMC5-MIC 319, FEP 22, on Lisp Machine Jim Morrison:


    Gee, defining RELATUS:PARSE-FERROR seems to have clobbered DBG:PARSE-FERROR!
    Is something broken in the package system, or what?

    >>Error: Flavor PARSE-FERROR does not handle the init keyword :CORRECT-INPUT
    While in the function INSTANTIATE-FLAVOR  MAKE-CONDITION  DBG:GET-CONDITION

As I asked in my last message, what packages does RELATUS :USE?
17-Apr-85 18:11:53-EST,1114;000000000000
Received: from 24610 by MIT-OZ via Chaosnet; 17 Apr 85 18:11-EST
Received: from SCRC-NEPONSET by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 154433; Wed 17-Apr-85 12:37:45-EST
Date: Wednesday, 17 April 1985, 12:37-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: DBG:PARSE-FERROR
To: jcma at MIT-MC, BUG-LISPM at OZ
In-Reply-To: <850415140453.6.JCMA@MORRISON.MIT>
Message-ID: <850417123751.3.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Monday, 15 April 1985, 14:04-EST
    From: jcma@MIT-MC

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 8.1,
    microcode TMC5-MIC 319, FEP 22, on Lisp Machine Jim Morrison:

    After my flavor, RELATUS:PARSE-FERROR, clobbered it, I redefined
    DBG:PARSE-FERROR using CONTROL-SHIFT-C in ZMACS in order to replace the
    original definition. There was no redefinition warning.  Is this a bug or a
    feature?

Possibly a misfeature.  It probably thinks the original file is a valid
source file and therefore shouldn't complain.  "Fixing" this requires a
moderate amount of mechanism, since sometimes that IS what you want.
17-Apr-85 18:12:43-EST,1285;000000000000
Received: from 24610 by MIT-OZ via Chaosnet; 17 Apr 85 18:12-EST
Received: from SCRC-NEPONSET by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 154443; Wed 17-Apr-85 12:59:22-EST
Date: Wednesday, 17 April 1985, 12:59-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: Whole directory missing.
To: Gavan Duffy <GAVAN at OZ>, BUG-LISPM at OZ
In-Reply-To: <850415080610.7.GAVAN@LENNON.MIT>
Message-ID: <850417125927.5.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Monday, 15 April 1985, 08:06-EST
    From: Gavan Duffy <GAVAN at OZ>

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 8.1,
    microcode TMC5-MIC 319, on Lisp Machine John Lennon:

    I did (PROBEF (SI:GET-SOURCE-FILE-NAME 'ARRAY-ELEMENTS-PER-Q)) and got this.

    >>Error: The directory >sys>r6>l-sys does not exist.
	     For B:>sys>r6>l-sys>sysdef.lisp
    While in the function (:METHOD FS:NFILE-SERVER-UNIT :WAIT-FOR-COMMAND)  (:METHOD FS:NFILE-SERVER-UNIT :SEND-AND-WAIT-FOR-COMMAND)  (:METHOD FS:NFILE-SERVER-UNIT :SEND-IN-COMMAND-CONDITION-ENVIRONMENT)

I'll guess that all of the L-SYSTEM-INTERNALS subsystem sources got
restricted.  My current opinion is that the files SYSDEF and SYSDF1
should be carefully split into four files, two of which can be
unrestricted.
17-Apr-85 18:13:16-EST,1576;000000000000
Received: from 24610 by MIT-OZ via Chaosnet; 17 Apr 85 18:12-EST
Received: from SCRC-NEPONSET by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 154445; Wed 17-Apr-85 13:03:34-EST
Date: Wednesday, 17 April 1985, 13:03-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: :SEND-IF-HANDLES ought to work with case methods
To: David Vinayak Wallace <Gumby at MIT-MC>, BUG-LISPM at OZ
In-Reply-To: <850415082409.1.GUMBY@JIMI.MIT>
Message-ID: <850417130338.6.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Monday, 15 April 1985, 08:24-EST
    From: David Vinayak Wallace <Gumby at MIT-MC>

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 8.1,
    microcode TMC5-MIC 319, on Lisp Machine Jimi Hendrix:
    Warm booted from: 3600 Ethernet Receiver.

    I have a flavour defined with a :case combination for :write-self.
    :send-if-handles only checks to see if :write-self exists; not to see if
    that COMBINATION exists.  This is a royal pain.

    (the case below was to see if it worked; :grozzox is a random string).

I've seen this complaint before, and the answer goes something like
this:

It is clear what
   (send foo :case-message :subcase-message).
means.  Now carefully define the semantics of the following 3:
 (a) (send foo :send-if-handles :case-message :subcase-message)
 (b) (send foo :case-message :send-if-handles :subcase-message)
 (c) (send foo :send-if-handles :case-message :send-if-handles :subcase-message)

What YOU want is (b), or possibly (c).  The standard interface of the
system is to supply (a).
17-Apr-85 18:14:26-EST,2269;000000000000
Received: from 24620 by MIT-OZ via Chaosnet; 17 Apr 85 18:14-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 216339; Wed 17-Apr-85 15:54:20-EST
Date: Wednesday, 17 April 1985, 15:53-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: FEPs
To: Scott Cyphers <SR.EHPYC at MIT-SPEECH>,
    David C. Plummer in disguise <DCP at SCRC-QUABBIN>
cc: bug-lispm at OZ, Chris Lindblad <CJL at OZ>
In-Reply-To: <SR.EHPYC.12103898062.BABYL@MIT-SPEECH>
Message-ID: <850417155350.4.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: 17 Apr 1985  11:57 EST (Wed)
    From: Scott Cyphers <SR.EHPYC@MIT-SPEECH>

	Date: Monday, 15 April 1985, 20:51-EST
	From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
	To:   Scott Cyphers <SR.EHPYC>, David C. Plummer <DCP at SCRC-TENEX>
	cc:   bug-lispm at OZ, Chris Lindblad <CJL at OZ>
	Re:   FEPs

	    Resetting the FEP spins disks down and destroys the sync on 3670s with
	    the philips monitor.  Putting the remote/local switch on local
	    prevents the disk from spinning down on a reset fep(one of our 3670s
	    was shipped like that, which is where I learned the trick) which means
	    you can boot right away.  It works here, but I don't know if it's a
	    blessed technique without side-affects.
	It isn't.  It means FEP>shutdown won't spin the disks down before it
	powers down the machine.  We can't be held responsible for any trashed
	disks that may result...

    Then you should check them more carefully when they leave the factory
    (maybe you do now -- it's the oldest 3670 we have that came like
    that).  Out of curiosity, can several spindowns and ups a day be too
    good for the disks?  Shutdowns are quite rare, happening only when
    something breaks.  I doubt the switch does anything for you if the
    power goes off unexpectedly.

Spin downs and spin ups should not harm anything.  If they do, disk
manfactures should be shot.

    On several occasions, people have thought a Philips monitor machine
    was broken because of the spinddown delay (You have to admit, it does
    look kind of broken with the sync gone).

Fixed in NFEP, which has (I hope) the correct sync programs for all 4
types of monitors.
17-Apr-85 19:13:06-EST,1748;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 17 Apr 85 19:13-EST
Received: from SCRC-STONY-BROOK by MIT-MC via Chaosnet; 17 APR 85  19:12:40 EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 216220; Wed 17-Apr-85 13:26:38-EST
Date: Wed, 17 Apr 85 13:26 EST
From: David C. Plummer in disguise <DCP@SCRC-QUABBIN.ARPA>
Subject: Lossage due to ridiculous source withholding policy
To: Gavan Duffy <GAVAN@OZ.MIT>, BUG-LISPM@MIT-MC.ARPA, PHW@OZ.MIT
In-Reply-To: <850416110649.7.GAVAN@MORRISON.MIT>
Message-ID: <850417132639.0.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Tue, 16 Apr 85 11:06 EST
    From: Gavan Duffy <GAVAN@OZ.MIT>

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 8.2,
    microcode TMC5-MIC 319, FEP 22, on Lisp Machine Jim Morrison:

    I need to examine the source for ZWEI:NETWORK-SEND-IT to figure out how to
    keep Zmail from trying to connect to OZ when sending mail (notice local var
    10).  However, because some PINHEAD decided to withhold the Zmail sources, I
    can't.

    Until this RIDICULOUS source withholding policy is lifted, Symbolics' products
    are inferior to any other that does not withhold sources.

    Please feel free to express my absolute disgust to whoever's responsible for
    this lossage.  Also, please let me know whether I can expect a resolution of
    these problems or should instead look into using a Lambda.

Zmail is in the "optional" category.  I don't know what that means.  I
know it doesn't mean "proprietary."  I think it has something to do with
disk space considerations, which MIT probably doesn't have to worry
about, but standalone sites do.  My opinion is that MIT should get the
Zmail sources ASAP.
17-Apr-85 19:14:41-EST,1494;000000000000
Received: from MIT-MORRISON by MIT-OZ via Chaosnet; 17 Apr 85 19:14-EST
Date: Wednesday, 17 April 1985, 19:14-EST
From: Gavan Duffy <GAVAN at OZ>
Subject: Flavor bug
To: DCP at SCRC-QUABBIN, jcma at MIT-MC, BUG-lispm at OZ
In-Reply-To: <850417123604.2.NFEP@NEPONSET.SCRC.Symbolics.COM>
Message-ID: <850417191417.7.GAVAN@MORRISON.MIT>

    Received: from MIT-OZ by MIT-MC via Chaosnet; 17 APR 85  18:10:30 EST
    Received: from 24610 by MIT-OZ via Chaosnet; 17 Apr 85 18:08-EST
    Received: from SCRC-NEPONSET by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 154431; Wed 17-Apr-85 12:36:05-EST
    Date: Wednesday, 17 April 1985, 12:36-EST
    From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
    Subject: Flavor bug
    To: jcma at MIT-MC, BUG-lispm at OZ
    In-Reply-To: <850415135203.4.JCMA@MORRISON.MIT>
    Message-ID: <850417123604.2.NFEP@NEPONSET.SCRC.Symbolics.COM>

	Date: Monday, 15 April 1985, 13:52-EST
	From: jcma@MIT-MC

	In Symbolics 3600 NIL in Release 6.0, IP-TCP 29.0, AISite 8.1,
	microcode TMC5-MIC 319, FEP 22, on Lisp Machine Jim Morrison:


	Gee, defining RELATUS:PARSE-FERROR seems to have clobbered DBG:PARSE-FERROR!
	Is something broken in the package system, or what?

	>>Error: Flavor PARSE-FERROR does not handle the init keyword :CORRECT-INPUT
	While in the function INSTANTIATE-FLAVOR  MAKE-CONDITION  DBG:GET-CONDITION

    As I asked in my last message, what packages does RELATUS :USE?

As I already told you, GLOBAL.
17-Apr-85 19:15:18-EST,1936;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 17 Apr 85 19:15-EST
Received: from SCRC-STONY-BROOK by MIT-MC via Chaosnet; 17 APR 85  19:12:54 EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 216224; Wed 17-Apr-85 13:30:13-EST
Date: Wed, 17 Apr 85 13:30 EST
From: David C. Plummer in disguise <DCP@SCRC-QUABBIN.ARPA>
Subject: Send to NIL
To: Gavan Duffy <GAVAN@OZ.MIT>, BUG-LISPM@MIT-MC.ARPA
In-Reply-To: <850416124403.3.GAVAN@MORRISON.MIT>
Message-ID: <850417133016.1.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Tue, 16 Apr 85 12:44 EST
    From: Gavan Duffy <GAVAN@OZ.MIT>

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 8.2,
    microcode TMC5-MIC 319, FEP 22, on Lisp Machine Jim Morrison:

    Here's a send to NIL.  It happens every time I send mail from the debugger.
    It may have been due to some switch that I set, but I can't tell BECAUSE I
    DON'T HAVE THE GODDAM SOURCES!  

    Anyway, I get out of it by having
    MAILER:ALL-MAIL-ADDRESSES-FORWARD-BETWEEN-HOSTS-P evaluate and return
    #'ignore.  But this makes the mail address be BUG-LISPM@NIL, which has to be
    edited by hand.

ZWEI:*HOST-FOR-BUG-REPORTS* is my guess, judging by the PUSH-INDIRECT at
location 33 of ZWEI:PARSE-BUG-ARG, the caller of MAILER:A-M-A-F-B-H-P.
I'll assume this is more outrage about the lack of sources, which I just
answered in another bug message than a reflection of your debugging
techniques.

    >>Error: The symbol NIL has an invalid function definition
    While in the function NIL  MAILER:ALL-MAIL-ADDRESSES-FORWARD-BETWEEN-HOSTS-P  ZWEI:PARSE-BUG-ARG

    NIL:
       Arg 0: :SITE

    MAILER:ALL-MAIL-ADDRESSES-FORWARD-BETWEEN-HOSTS-P:  (P.C. = 12)
       Arg 0 (HOST-1): #<TOPS20-HOST OZ 1700407>
       Arg 1 (HOST-2): NIL

    ZWEI:PARSE-BUG-ARG:  (P.C. = 34)
       Arg 0 (SYSTEM): DBG:LISPM
       Local 0 (SYSTEM): "LISPM"

17-Apr-85 19:15:44-EST,1582;000000000000
Received: from MIT-HTVAX by MIT-OZ via Chaosnet; 17 Apr 85 19:15-EST
Received: from HOST24620 by MIT-HTVAX (4.12/4.7) with CHAOS 
	id AA11878; Wed, 17 Apr 85 19:13:21 est
Received: from SCRC-PEACE by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 216239; Wed 17-Apr-85 13:55:48-EST
Date: Wed, 17 Apr 85 13:55 EST
From: Charles Hornig <Hornig@STONY-BROOK.SCRC.Symbolics.COM>
Subject: SCRC-STONY-BROOK.ARPA
To: Martin David Connor <mdc@HTVAX>, Bug-Lispm%mit-oz@HTVAX
Cc: MIT-IP-PEOPLE@MIT-MC
In-Reply-To: <8504171554.AA07008@MIT-HTVAX.ARPA>
Message-Id: <850417135524.2.HORNIG@PEACE.SCRC.Symbolics.COM>

    Date: 17 Apr 85 10:54:09 EST (Wed)
    From: Martin David Connor <mdc@MIT-HTVAX.ARPA>

    For a while now I have been unable to reach SCRC-STONY-BROOK.ARPA
    (192.10.41.144) from hosts on MIT-AI-NET (128.52..).  

    I have however been able to reach SCRC-QUABBIN.ARPA at
    192.10.41.136, and SCRC-CUPID at 192.10.41.27.  From the class C
    numbering I would venture to guess that these hosts are all on the
    same physical piece of cable, and since I can do SMTP manually to QBIN
    and CUPID, I would expect SCRC would be identical.

    Could it be that SCRC's routing tables need tweaking?  Another odd
    point is that I am able to reach SCRC from XX and MILO on net 18.

    I would be much obliged if someone could check into this and explain why I
    can't seem to reach STONY-BROOK from here.  Mail is stacking up for
    SCRC recipients here...

The problem on Stony has been found and fixed.  Thanks for pointing it
out.
17-Apr-85 19:18:10-EST,1695;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 17 Apr 85 19:18-EST
Received: from SCRC-STONY-BROOK by MIT-MC via Chaosnet; 17 APR 85  19:14:30 EST
Received: from SCRC-PEACE by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 216246; Wed 17-Apr-85 14:00:17-EST
Date: Wed, 17 Apr 85 14:00 EST
From: Charles Hornig <Hornig@STONY-BROOK.SCRC.Symbolics.COM>
Subject: Send to NIL
To: Gavan Duffy <GAVAN@OZ>, BUG-LISPM@MIT-MC
In-Reply-To: <850416124403.3.GAVAN@MORRISON.MIT>
Message-ID: <850417140004.3.HORNIG@PEACE.SCRC.Symbolics.COM>

    Date: Tue, 16 Apr 85 12:44 EST
    From: Gavan Duffy <GAVAN@OZ.MIT>

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 8.2,
    microcode TMC5-MIC 319, FEP 22, on Lisp Machine Jim Morrison:

    Here's a send to NIL.  It happens every time I send mail from the debugger.
    It may have been due to some switch that I set, but I can't tell BECAUSE I
    DON'T HAVE THE GODDAM SOURCES!  

    Anyway, I get out of it by having
    MAILER:ALL-MAIL-ADDRESSES-FORWARD-BETWEEN-HOSTS-P evaluate and return
    #'ignore.  But this makes the mail address be BUG-LISPM@NIL, which has to be
    edited by hand.

    >>Error: The symbol NIL has an invalid function definition
    While in the function NIL  MAILER:ALL-MAIL-ADDRESSES-FORWARD-BETWEEN-HOSTS-P  ZWEI:PARSE-BUG-ARG

    NIL:
       Arg 0: :SITE

    MAILER:ALL-MAIL-ADDRESSES-FORWARD-BETWEEN-HOSTS-P:  (P.C. = 12)
       Arg 0 (HOST-1): #<TOPS20-HOST OZ 1700407>
       Arg 1 (HOST-2): NIL

It's happening because ZWEI:*HOST-FOR-BUG-REPORTS* (which is set from
the site options of the same name) is NIL.  Quick fix is to give your
site a HOST-FOR-BUG-REPORTS attribute.
17-Apr-85 19:20:59-EST,1715;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 17 Apr 85 19:20-EST
Received: from SCRC-STONY-BROOK by MIT-MC via Chaosnet; 17 APR 85  19:14:45 EST
Received: from SCRC-PEACE by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 216248; Wed 17-Apr-85 14:02:55-EST
Date: Wed, 17 Apr 85 14:02 EST
From: Charles Hornig <Hornig@STONY-BROOK.SCRC.Symbolics.COM>
Subject: Lossage due to ridiculous source withholding policy
To: Gavan Duffy <GAVAN@OZ>, BUG-LISPM@MIT-MC, PHW@OZ
In-Reply-To: <850416110649.7.GAVAN@MORRISON.MIT>
Message-ID: <850417140242.4.HORNIG@PEACE.SCRC.Symbolics.COM>

    Date: Tue, 16 Apr 85 11:06 EST
    From: Gavan Duffy <GAVAN@OZ.MIT>

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 8.2,
    microcode TMC5-MIC 319, FEP 22, on Lisp Machine Jim Morrison:

    I need to examine the source for ZWEI:NETWORK-SEND-IT to figure out how to
    keep Zmail from trying to connect to OZ when sending mail (notice local var
    10).  However, because some PINHEAD decided to withhold the Zmail sources, I
    can't.

    Until this RIDICULOUS source withholding policy is lifted, Symbolics' products
    are inferior to any other that does not withhold sources.

    Please feel free to express my absolute disgust to whoever's responsible for
    this lossage.  Also, please let me know whether I can expect a resolution of
    these problems or should instead look into using a Lambda.

    >>Break: 
    While in the function PROCESS-WAIT  CHAOS:WAIT  CHAOS:WAIT-FOR-CONNECT

It is sending mail through OZ because OZ is your site's
store-and-forward mail server.  If you want to use some other host, you
can set ZWEI:*MAIL-NETWORK-HOST* to override ZMail's selection.
17-Apr-85 19:28:29-EST,1850;000000000000
Received: from MIT-MORRISON by MIT-OZ via Chaosnet; 17 Apr 85 19:28-EST
Date: Wednesday, 17 April 1985, 19:28-EST
From: Gavan Duffy <GAVAN at OZ>
Subject: Whole directory missing.
To: DCP at SCRC-QUABBIN, GAVAN at OZ, BUG-LISPM at OZ
In-Reply-To: <850417125927.5.NFEP@NEPONSET.SCRC.Symbolics.COM>
Message-ID: <850417192816.8.GAVAN@MORRISON.MIT>

    Date: Wednesday, 17 April 1985, 12:59-EST
    From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>

	Date: Monday, 15 April 1985, 08:06-EST
	From: Gavan Duffy <GAVAN at OZ>

	In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 8.1,
	microcode TMC5-MIC 319, on Lisp Machine John Lennon:

	I did (PROBEF (SI:GET-SOURCE-FILE-NAME 'ARRAY-ELEMENTS-PER-Q)) and got this.

	>>Error: The directory >sys>r6>l-sys does not exist.
		 For B:>sys>r6>l-sys>sysdef.lisp
	While in the function (:METHOD FS:NFILE-SERVER-UNIT :WAIT-FOR-COMMAND)  (:METHOD FS:NFILE-SERVER-UNIT :SEND-AND-WAIT-FOR-COMMAND)  (:METHOD FS:NFILE-SERVER-UNIT :SEND-IN-COMMAND-CONDITION-ENVIRONMENT)

    I'll guess that all of the L-SYSTEM-INTERNALS subsystem sources got
    restricted.  My current opinion is that the files SYSDEF and SYSDF1
    should be carefully split into four files, two of which can be
    unrestricted.

Why the hell restrict any of it?  I'm sorry, but withholding software just
doesn't protect you.  All it does is punish your customers and poor,
insignificant users, like myself.  I'm prepared to be convinced otherwise, but
no one has done so.

Anyway, my point was not that Symbolics has foolishly decided to withhold
sources, thereby shooting themselves in the foot by making LMI Lambdas look
that much better, although all this is certainly true.   My point was that
PROBEF barfed.  If the file's not there, PROBEF should just return NIL.  The
documentation says so.
17-Apr-85 19:42:45-EST,1842;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 17 Apr 85 19:42-EST
Received: from MIT-OZ by MIT-MC via Chaosnet; 17 APR 85  19:33:54 EST
Received: from MIT-MORRISON by MIT-OZ via Chaosnet; 17 Apr 85 19:32-EST
Date: Wed, 17 Apr 85 19:32 EST
From: Gavan Duffy <GAVAN@OZ.MIT>
Subject: Lossage due to ridiculous source withholding policy
To: DCP@SCRC-QUABBIN.ARPA, GAVAN@OZ.MIT, BUG-LISPM@MIT-MC.ARPA,
    PHW@OZ.MIT
In-Reply-To: <850417132639.0.NFEP@NEPONSET.SCRC.Symbolics.COM>
Message-ID: <850417193236.9.GAVAN@MORRISON.MIT>

    Date: Wednesday, 17 April 1985, 13:26-EST
    From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>

	Date: Tue, 16 Apr 85 11:06 EST
	From: Gavan Duffy <GAVAN@OZ.MIT>

	In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 8.2,
	microcode TMC5-MIC 319, FEP 22, on Lisp Machine Jim Morrison:

	I need to examine the source for ZWEI:NETWORK-SEND-IT to figure out how to
	keep Zmail from trying to connect to OZ when sending mail (notice local var
	10).  However, because some PINHEAD decided to withhold the Zmail sources, I
	can't.

	Until this RIDICULOUS source withholding policy is lifted, Symbolics' products
	are inferior to any other that does not withhold sources.

	Please feel free to express my absolute disgust to whoever's responsible for
	this lossage.  Also, please let me know whether I can expect a resolution of
	these problems or should instead look into using a Lambda.

    Zmail is in the "optional" category.  I don't know what that means.  I
    know it doesn't mean "proprietary."  I think it has something to do with
    disk space considerations, which MIT probably doesn't have to worry
    about, but standalone sites do.  My opinion is that MIT should get the
    Zmail sources ASAP.

Right.  Did you BCC: this to anyone who can make this happen?
17-Apr-85 19:43:27-EST,1914;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 17 Apr 85 19:43-EST
Received: from MIT-OZ by MIT-MC via Chaosnet; 17 APR 85  19:37:29 EST
Received: from MIT-MORRISON by MIT-OZ via Chaosnet; 17 Apr 85 19:36-EST
Date: Wed, 17 Apr 85 19:36 EST
From: Gavan Duffy <GAVAN@OZ.MIT>
Subject: Lossage due to ridiculous source withholding policy
To: Hornig@STONY-BROOK.SCRC.Symbolics.COM, GAVAN@OZ.MIT,
    BUG-LISPM@MIT-MC.ARPA, PHW@OZ.MIT
In-Reply-To: <850417140242.4.HORNIG@PEACE.SCRC.Symbolics.COM>
Message-ID: <850417193620.0.GAVAN@MORRISON.MIT>

    Date: Wed, 17 Apr 85 14:02 EST
    From: Charles Hornig <Hornig@STONY-BROOK.SCRC.Symbolics.COM>

	Date: Tue, 16 Apr 85 11:06 EST
	From: Gavan Duffy <GAVAN@OZ.MIT>

	In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 8.2,
	microcode TMC5-MIC 319, FEP 22, on Lisp Machine Jim Morrison:

	I need to examine the source for ZWEI:NETWORK-SEND-IT to figure out how to
	keep Zmail from trying to connect to OZ when sending mail (notice local var
	10).  However, because some PINHEAD decided to withhold the Zmail sources, I
	can't.

	Until this RIDICULOUS source withholding policy is lifted, Symbolics' products
	are inferior to any other that does not withhold sources.

	Please feel free to express my absolute disgust to whoever's responsible for
	this lossage.  Also, please let me know whether I can expect a resolution of
	these problems or should instead look into using a Lambda.

	>>Break: 
	While in the function PROCESS-WAIT  CHAOS:WAIT  CHAOS:WAIT-FOR-CONNECT

    It is sending mail through OZ because OZ is your site's
    store-and-forward mail server.  If you want to use some other host, you
    can set ZWEI:*MAIL-NETWORK-HOST* to override ZMail's selection.

If OZ is down, why isn't the lisp machine smart enough to send it via some
other host?  It used to do it in release 5.  I wonder whether Lambdas can do
it.
17-Apr-85 19:56:50-EST,2212;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 17 Apr 85 19:56-EST
Date: Wed,17 Apr 85 19:55:31 EST
From: John C. Mallery <JCMA@MIT-MC>
Subject:  Flavor Bugs
To: DCP@SCRC-QUABBIN
cc: BUG-LISPM@MIT-OZ
In-reply-to: Msg of 17 Apr 1985 12:28-EST from David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Message-ID: <[MIT-MC].458788.850417.JCMA>

    Date: Wednesday, 17 April 1985, 12:28-EST
    From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
    To:   jcma, BUG-LISPM at OZ
    Re:   Flavor Bugs
    In-Reply-To: <850415072445.4.JCMA@MORRISON.MIT>

        Date: Monday, 15 April 1985, 07:24-EST
        From: jcma@MIT-MC

        In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 8.1,
        microcode TMC5-MIC 319, FEP 22, on Lisp Machine Jim Morrison:

        I have the following flavor defined in the relatus package.

        (DEFFLAVOR PARSE-FERROR	() (HACK-FORMAT-ARGS PARSE-ERROR))

        When I compile it I get a warning that it is redefining DBG:PARSE-FERROR.  It
        asked me if I wanted to proceed or not.  I typed N for no. Then it told me
        that it was redefining the old flavor with the new one, and finally printed
        out in the minibuffer "Flavor PARSE-FERROR compiled."

        1) Why does my flavor in my own package conflict with one in the dbg package?
        This shouldn't happen.

    What packages does your package :USE?  On my machine,
    	(eq 'dbg:parse-error 'sys:parse-error) => T
    I'll guess that you :USE DEBUGGER, which I'm not sure is a good idea,
    but I'm sure you have your reasons.

No, the reason is probably because dbg:parse-error is globalized.
Why?  Look opur system was well debugged in the last system and you
people have munged up the flavor system so we can't even compile
our program.  What is the story?  If you're not going to give us the
sources and you're going to introduce changes the break debugged
code, what are we supposed to do?

        2) Why doesn't it say something that makes more sense when I type no, like
        aborting redefinition of flavor?

        3) Why does it ask me if I want to redefine this dbg flavor twice once I type
        no the first time?
17-Apr-85 20:11:49-EST,9758;000000000000
Received: from MIT-LENNON by MIT-OZ via Chaosnet; 17 Apr 85 20:10-EST
Date: Wednesday, 17 April 1985, 20:10-EST
From: David Chapman <Zvona at OZ>
Subject: OK, this looks like fun
To: BUG-LISPM at OZ
Message-ID: <850417201019.1.ZVONA@LENNON.MIT>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 8.2,
microcode TMC5-MIC 319, on Lisp Machine John Lennon:

I got completely at random the error reported by the FERROR about 20
frames through this.  It printed out the error and then without
provocation got this trap.  Then when I was typing this in it got
another completely off-the wall error, an unknown catch tag of some
sort.

Hardware?  Bad band?

>>Trap: The <<Error printing report>>
While in the function STACK-GROUP-RESUME  PROCESS-WAIT  TV:KBD-IO-BUFFER-INPUT-WAIT

STACK-GROUP-RESUME:  (P.C. = 7)
   Arg 0 (SG): #<STACK-GROUP Scheduler 56143351>
   Arg 1 (VALUE): #<STACK-GROUP Lisp Listener 1 10570>

PROCESS-WAIT:  (P.C. = 107)
   Arg 0 (WHOSTATE): "Tyi"
   Arg 1 (FUNCTION): #<DTP-COMPILED-FUNCTION (:INTERNAL TV:KBD-IO-BUFFER-INPUT-WAIT 0) 22405612>
   Rest arg (ARGUMENTS): (#<IO-BUFFER 120673433: empty, State: NIL> NIL NIL)

TV:KBD-IO-BUFFER-INPUT-WAIT:  (P.C. = 34)
   Arg 0 (BUFFER): #<IO-BUFFER 120673433: empty, State: NIL>
   Arg 1 (WHOSTATE): NIL
   --Defaulted args:--
   Arg 2 (FUNCTION): NIL
   Rest arg (ARGUMENTS): NIL

TV:KBD-IO-BUFFER-GET:  (P.C. = 135)
   Arg 0 (BUFFER): #<IO-BUFFER 120673433: empty, State: NIL>
   --Defaulted args:--
   Arg 1 (NO-HANG-P): NIL
   Arg 2 (WHOSTATE): NIL

(:METHOD TV:STREAM-MIXIN :ANY-TYI):  (P.C. = 17)
   Arg 0 (SELF): #<LISP-LISTENER Lisp Listener 1 43200216 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:STREAM-MIXIN -- 1. IV's, 0. FL's 104234251>
   Arg 2 (OPERATION): :ANY-TYI

(:INTERNAL (:METHOD TV:WINDOW :COMBINED :ANY-TYI) 0):  (P.C. = 11)
   Arg 0 (SELF): #<LISP-LISTENER Lisp Listener 1 43200216 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:WINDOW -- 0. IV's, 12. FL's 104234270>
   Arg 2 (.OPERATION.): :ANY-TYI
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

(:METHOD SI:INTERACTIVE-STREAM :WHOPPER :ANY-TYI):  (P.C. = 115)
   Arg 0 (SELF): #<LISP-LISTENER Lisp Listener 1 43200216 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:INTERACTIVE-STREAM -- 20. IV's, 2. FL's 104234231>
   Arg 2 (.WHOPPER-CONTINUATION.): #<DTP-COMPILED-FUNCTION (:INTERNAL (:METHOD TV:WINDOW :COMBINED :ANY-TYI) 0) 31301556>
   Arg 3 (.OLD-SELF-MAPPING-TABLE.): #<Map to flavor TV:WINDOW -- 0. IV's, 12. FL's 104234270>
   Arg 4 (.OPERATION.): :ANY-TYI
   --Defaulted args:--
   Arg 5 (EOF): NIL

(:METHOD TV:WINDOW :COMBINED :ANY-TYI):  (P.C. = 13)
   Arg 0 (SELF): #<LISP-LISTENER Lisp Listener 1 43200216 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:WINDOW -- 0. IV's, 12. FL's 104234270>
   Arg 2 (.OPERATION.): :ANY-TYI
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

DBG:COMMAND-LOOP-READ:  (P.C. = 7)

DBG:COMMAND-LOOP:  (P.C. = 250)

DBG:DEBUGGER-TOP-LEVEL:  (P.C. = 540)
   Arg 0: #<FERROR 5112504>
   Arg 1: #<DTP-LOCATIVE 501057>
   Arg 2: NIL
   Arg 3 (SPECIAL-COMMANDS): NIL

DBG:ENTER-DEBUGGER:  (P.C. = 16)
   Arg 0 (ERROR): #<FERROR 5112504>
   --Defaulted args:--
   Arg 1 (REASON): NIL
   Arg 2 (SPECIAL-COMMANDS): NIL

DBG:DEBUGGER-HANDLER-HANDLE-CONDITION:  (P.C. = 7)
   Arg 0 (IGNORE): :HANDLE-CONDITION
   Arg 1 (COND): #<FERROR 5112504>
   Arg 2 (IGNORE): #<DTP-LOCATIVE 57100001>

DBG:DEBUGGER-HANDLER:  (P.C. = 12)
   Arg 0 (OPERATION): :HANDLE-CONDITION
   Rest arg (SELECT-METHOD-ARGS): (#<FERROR 5112504> #<DTP-LOCATIVE 57100001>)

(:METHOD CONDITION :SIGNAL):  (P.C. = 114)
   Arg 0 (SELF): #<FERROR 5112504>
   Arg 1 (SELF-MAPPING-TABLE): CONDITION
   Arg 2 (OPERATION): :SIGNAL
   --Defaulted args:--
   Arg 3 (PROCEEDABLY): NIL

(:METHOD CONDITION :COMBINED :SIGNAL):  (P.C. = 17)
   Arg 0 (SELF): #<FERROR 5112504>
   Arg 1 (SELF-MAPPING-TABLE): CONDITION
   Arg 2 (.OPERATION.): :SIGNAL
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

ERROR:  (P.C. = 55)
   Arg 0 (FLAVOR): FERROR
   Rest arg (INIT-OPTIONS): (:FORMAT-STRING "Bad fault type ~A on non-resident virtual address ~O" :FORMAT-ARGS (SYS:%PAGE-WRITE-FAULT 533060))

FERROR:  (P.C. = 23)
   Arg 0 (FORMAT-STRING): "Bad fault type ~A on non-resident virtual address ~O"
   Rest arg (FORMAT-ARGS): (SYS:%PAGE-WRITE-FAULT 533060)

SYS:WIRED-FERROR-1:  (P.C. = 56)

STACK-GROUP-RESUME:  (P.C. = 7)
   Arg 0 (SG): #<STACK-GROUP Scheduler 56143351>
   Arg 1 (VALUE): #<STACK-GROUP Lisp Listener 1 10570>

SI:MAYBE-PREEMPT-CURRENT-PROCESS:  (P.C. = 22)

(:METHOD FS:LOGICAL-HOST :TRANSLATE):  (P.C. = 0)
   Arg 0 (SELF): #<LOGICAL-HOST SYS>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:LOGICAL-HOST -- 9. IV's, 2. FL's 104227142>
   Arg 2 (OPERATION): :TRANSLATE
   Local 2 (OPERATION): #<DTP-EVEN-PC 10542>
   Arg 3 (PATHNAME): #<LOGICAL-PATHNAME "SYS: LMLIB; ZVAL">
   Local 3 (PATHNAME): #<DTP-COMPILED-FUNCTION SI:MAYBE-PREEMPT-CURRENT-PROCESS 2101410>

(:METHOD FS:LOGICAL-PATHNAME :TRANSLATED-PATHNAME):  (P.C. = 67)
   Arg 0 (SELF): #<LOGICAL-PATHNAME "SYS: LMLIB; ZVAL">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:LOGICAL-PATHNAME -- 8. IV's, 3. FL's 104206646>
   Arg 2 (OPERATION): :TRANSLATED-PATHNAME

(:DEFUN-METHOD FS:LOGICAL-PATHNAME-PASS-ON):  (P.C. = 5)
   Arg 0 (SELF): #<LOGICAL-PATHNAME "SYS: LMLIB; ZVAL">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:LOGICAL-PATHNAME -- 8. IV's, 3. FL's 104206646>
   Arg 2 (MESSAGE): :PUTPROP
   Rest arg (REST): (#<SYSTEM ZVONA 5112441> :SYSTEM)

(:METHOD FS:LOGICAL-PATHNAME :PUTPROP):  (P.C. = 10)
   Arg 0 (SELF): #<LOGICAL-PATHNAME "SYS: LMLIB; ZVAL">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:LOGICAL-PATHNAME -- 8. IV's, 3. FL's 104206646>
   Arg 2 (OPERATION): :PUTPROP
   Rest arg (.ARGS.): (#<SYSTEM ZVONA 5112441> :SYSTEM)

SI:ADD-PATHNAME-TO-SYSTEM:  (P.C. = 14)
   Arg 0 (PATHNAME): "sys:lmlib;zval"
   Local 0 (PATHNAME): #<LOGICAL-PATHNAME "SYS: LMLIB; ZVAL.LISP.NEWEST">
   Arg 1 (SYSTEM): #<SYSTEM ZVONA 5112441>
   --Defaulted args:--
   Arg 2 (DEFAULT): NIL

SI:PARSE-MODULE-COMPONENTS:  (P.C. = 106)
   Arg 0 (COMPONENTS): ("sys:lmlib;zval")
   Arg 1 (SYSTEM): #<SYSTEM ZVONA 5112441>

SI:ADD-MODULE:  (P.C. = 22)
   Arg 0 (NAME): #:G0261
   Arg 1 (SYSTEM): #<SYSTEM ZVONA 5112441>
   Arg 2 (COMPONENTS): ("sys:lmlib;zval")
   --Defaulted args:--
   Arg 3 (PLIST): NIL

SI:PARSE-TRANSFORMATION:  (P.C. = 51)
   Arg 0 (NAME): :FASLOAD
   Arg 1 (INPUT): ("sys:lmlib;zval")
   Arg 2 (DEPENDENCIES): NIL
   Arg 3 (CONDITION): SI:FILE-NEWER-THAN-INSTALLED-P

(:PROPERTY :FASLOAD SI:DEFSYSTEM-MACRO):  (P.C. = 40)
   Arg 0 (.FORM.): (:FASLOAD ("sys:lmlib;zval"))
   Arg 1 (.ENV.): NIL

SI:CALL-DEFSYSTEM-MACRO:  (P.C. = 34)
   Arg 0 (FORM): (:FASLOAD ("sys:lmlib;zval"))

SI:DEFSYSTEM-1:  (P.C. = 57)
   Arg 0 (NAME): ZVONA
   Arg 1 (OPTIONS): ((:FASLOAD ("sys:lmlib;zval")))
   --Defaulted args:--
   Arg 2 (ADD-P): T

SI:*EVAL:  (P.C. = 403)
   Arg 0 (FORM): (SI:DEFSYSTEM-1 (QUOTE ZVONA) (QUOTE ((:FASLOAD **))))
   Local 0 (FORM): NIL
   --Defaulted args:--
   Arg 1 (ENV): NIL
   Arg 2 (HOOK): NIL

SI:LOAD-BIN-OP-FORM:  (P.C. = 4)
   Arg 0 (STREAM): #<FILE-INPUT-BINARY-STREAM "PIG:USRD$:[ZVONA]LISPMINI.BIN" 27700325>

SI:BIN-LOAD-NEXT-COMMAND:  (P.C. = 24)
   Arg 0 (STREAM): #<FILE-INPUT-BINARY-STREAM "PIG:USRD$:[ZVONA]LISPMINI.BIN" 27700325>

SI:BIN-LOAD-TOP-LEVEL:  (P.C. = 6)
   Arg 0 (STREAM): #<FILE-INPUT-BINARY-STREAM "PIG:USRD$:[ZVONA]LISPMINI.BIN" 27700325>

(:METHOD ZWEI:MAJOR-MODE :DEFAULT :LOAD-BINARY-FILE):  (P.C. = 4)
   Arg 0 (SELF): #<LISP-MODE 120576060>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:MAJOR-MODE -- 1. IV's, 1. FL's 142357032>
   Arg 2 (OPERATION): :LOAD-BINARY-FILE
   Arg 3 (IGNORE): #<DTP-LOCATIVE 31255710>
   Arg 4 (STREAM): #<FILE-INPUT-BINARY-STREAM "PIG:USRD$:[ZVONA]LISPMINI.BIN" 27700325>

SI:BIN-LOAD-FILE-INTERNAL:  (P.C. = 147)
   Arg 0 (STREAM): #<FILE-INPUT-BINARY-STREAM "PIG:USRD$:[ZVONA]LISPMINI.BIN" 27700325>
   Arg 1 (INTO-PACKAGE): NIL
   Arg 2 (NO-MSG-P): NIL

FS:LOAD-STREAM:  (P.C. = 16)
   Arg 0 (STREAM): #<FILE-INPUT-BINARY-STREAM "PIG:USRD$:[ZVONA]LISPMINI.BIN" 27700325>
   --Defaulted args:--
   Arg 1 (PKG): NIL
   Arg 2 (NO-MSG-P): NIL

LOGIN:  (P.C. = 604)
   Arg 0 (USER-NAME): "zvona"
   Local 0 (USER-NAME): "zvona"
   Rest arg: (:HOST NIL :LOAD-INIT-FILE T)

(:PROPERTY SI:COM-LOGIN SI:CP-FUNCTION):  (P.C. = 22)
   Arg 0 (USER): "zvona"
   Arg 1 (HOST): NIL
   Arg 2 (INIT-FILE): :DEFAULT-INIT-FILE

SI:COM-LOGIN:  (P.C. = 24)
   Arg 0 (USER): "zvona"
   Rest arg: NIL

SI:*EVAL:  (P.C. = 403)
   Arg 0 (FORM): (SI:COM-LOGIN "zvona")
   Local 0 (FORM): NIL
   --Defaulted args:--
   Arg 1 (ENV): NIL
   Arg 2 (HOOK): NIL

(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0):  (P.C. = 152)
   Arg 0 (.LEXICAL-ENVIRONMENT-POINTER.): #<DTP-LOCATIVE 500047>

TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
   Arg 0 (NEW-MODE): :BLAST
   Arg 1 (STREAM): #:TERMINAL-IO-SYN-STREAM
   Arg 2 (CONTINUATION): #<LEXICAL-CLOSURE (:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0) 500054>

SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
   Arg 0 (NAME): "Lisp Top Level"
   Arg 1 (ABORT-FUNCTION): NIL
   Arg 2 (READ-FUNCTION): NIL
   Arg 3 (EVAL-FUNCTION): NIL
   Arg 4 (PRINT-FUNCTION): NIL

SI:LISP-COMMAND-LOOP:  (P.C. = 67)
   Arg 0: #<LISP-LISTENER Lisp Listener 1 43200216 exposed>
   Rest arg: (:NAME "Lisp Top Level")

SI:LISP-TOP-LEVEL1:  (P.C. = 5)
   Arg 0 (STREAM): #<LISP-LISTENER Lisp Listener 1 43200216 exposed>

SI:LISP-TOP-LEVEL:  (P.C. = 7)
17-Apr-85 21:08:52-EST,397;000000000000
Received: from MIT-LENNON by MIT-OZ via Chaosnet; 17 Apr 85 21:08-EST
Date: Wednesday, 17 April 1985, 21:08-EST
From: David Chapman <Zvona at OZ>
Subject: what sources do I want?
To: Bug-Lispm at OZ
Message-ID: <850417210810.1.ZVONA@LENNON.MIT>

Today, compiler:compile-file, to see exactly how it defaults its
pathname arguments.  Guess I'll disassemble it and read the object
instead.
17-Apr-85 23:33:32-EST,2772;000000000000
Received: from MIT-LENNON by MIT-OZ via Chaosnet; 17 Apr 85 23:33-EST
Date: Wednesday, 17 April 1985, 23:33-EST
From: David Chapman <Zvona at OZ>
Subject: I think this machine's gc hardware is broken, unless the EGC software is fuckt
To: BUG-LISPM at OZ, bug-symbolics-hardware at OZ
Message-ID: <850417233302.6.ZVONA@LENNON.MIT>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 8.2,
microcode TMC5-MIC 319, on Lisp Machine John Lennon:

(This is the same machine that got the funny errors a few hours ago.)
I'm running with the EGC and not the old GC on.  The machine dropped
into the fep with an error.  I ran debug.flod, found

VMA/5431363/#<DTP-GC-FORWARD 42006376> which is (%P-CONTENTS-OFFSET of some arrary)
MD/#<DTP-74 ...>

and copied down the stack.  Then I continued it, and got this trap,
which is identical to what the fep debugger thought was happening.
(Gee, why did it drop into the fep if it can print the error message and
continuing more-or-less fixes it?)

>>Trap: The SYS:%BLOCK-GC-COPY microcode ran into an OLDSPACE-WORD that was not a single-precision floating-point number, a fixnum, a lexical closure, an instance, a character, a closure, an array, a compiled function, a locative, a list, an extended number, a symbol, a DTP-NULL, a SYS:DTP-14, a SYS:DTP-15, a SYS:DTP-16, a SYS:DTP-17, a SYS:DTP-EVEN-PC, a DTP-EXTERNAL-VALUE-CELL-POINTER, a DTP-ONE-Q-FORWARD, a DTP-HEADER-FORWARD, a DTP-BODY-FORWARD, a SYS:DTP-HEADER-P, a SYS:DTP-HEADER-I, a SYS:DTP-ODD-PC, a SYS:DTP-MONITOR-FORWARD, a SYS:DTP-ELEMENT-FORWARD, a SYS:DTP-73, a SYS:DTP-74, a SYS:DTP-75, a SYS:DTP-76, or a SYS:DTP-77.
While in the function SYS:TRANSPORT-TRAP  SI:SCAVENGE-REGION  SI:%GC-SCAVENGE

SYS:TRANSPORT-TRAP:  (P.C. = 727)
   Arg 0 (OLD-INHIBIT-SCHEDULING-FLAG): T
   Arg 1 (CELL): #<DTP-LOCATIVE 41463711>
   Local 2 (ENTRY-TIME): -991386938
   Local 3 (ENTRY-PAGE-FETCHES): 45197
   Local 4 (POINTER): 1454819
   Local 5 (REGION): 28
   Local 6 (AREA): 4
   Local 7 (REGION-ORIGIN): 1409024
   Local 8 (REGION-BITS): 393221
   Local 9 (*SELECTQ-ITEM*): 1
   Local 10 (ORIGINAL): 1454819
   Local 11 (SIZE): 8207
   Local 12 (COPY): 8951311
   Local 13 (N-HEADER-WORDS): 1454831
   Local 14 (LEADER-LENGTH): 8951323
   Local 15 (ELEMENT-LENGTH): 8195
   Local 16 (ELEMENTS-PER-Q): #<DTP-ODD-PC 22066164>

SI:SCAVENGE-REGION:  (P.C. = 332)
   Arg 0 (REGION): 50
   Arg 1 (WORK-UNITS): 798
   Local 1 (WORK-UNITS): 725
   Arg 2 (MAX-TIME): 50000
   Local 2 (MAX-TIME): 44901

SI:%GC-SCAVENGE:  (P.C. = 234)
   Arg 0 (WORK-UNITS): 1000
   Local 0 (WORK-UNITS): 798
   Arg 1 (MAX-TIME): 100000
   Local 1 (MAX-TIME): 86416
   --Defaulted args:--
   Arg 2 (CONS): NIL

SI:PROCESS-SCHEDULER:  (P.C. = 251)
18-Apr-85 00:35:55-EST,809;000000000000
Received: from MIT-ROBOT-5 by MIT-OZ via Chaosnet; 18 Apr 85 00:35-EST
Date: Thursday, 18 April 1985, 00:35-EST
From: Steve Gander <GANDER at OZ>
Subject: tv:top-box-label-mixin and tv:top-label-mixin
To: BUG-LISPM at OZ
Message-ID: <850418003530.2.GANDER@ROBOT-5.MIT>

In Symbolics 3670 Release 6.0, IP-TCP 29.0, AISite 8.2,
microcode TMC5-IO4-FPA-MIC 319, on Lisp Machine Robot-5:

It really appears that the flavor definitions for
tv:top-box-label-mixin and
tv:top-label-mixin 
should specify label-mixin
as a :required-flavor (just like centered-label-mixin).  I have had many problems
building things based on window with labels at the top. I find myself 
rewriting all the flavor declarations of window to include one of the
above mixins where label-mixin is. 
-PLEASE FIX !
-thanks
18-Apr-85 00:41:02-EST,1169;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 18 Apr 85 00:40-EST
Received: from MIT-OZ by MIT-MC via Chaosnet; 18 APR 85  00:41:38 EST
Received: from MIT-MOON by MIT-OZ via Chaosnet; 18 Apr 85 00:40-EST
Date: Thu, 18 Apr 85 00:39 EST
From: David Vinayak Wallace <Gumby@MC.MIT>
Subject: copying files to ITS; *PRINT-CASE*
To: Robert A. Cassels <Cassels@SCRC-STONY-BROOK.ARPA>
cc: Moon@SCRC-STONY-BROOK.ARPA, BUG-LISPM@MIT-MC.ARPA
In-Reply-To: <850417094957.1.CASSELS@CUYAHOGA.SCRC.Symbolics.COM>
Message-ID: <850418003930.1.GUMBY@MOON.MIT>

    Date: Wed, 17 Apr 85 09:49 EST
    From: Robert A. Cassels <Cassels@SCRC-STONY-BROOK.ARPA>

	Date: Tue, 16 Apr 85 01:06 EST
	From: David Vinayak Wallace <Gumby@MIT-MC.ARPA>

	You are exactly right.  I just discovered that *print-case* isn't
	documented, so I suppose I shouldn't bitch to loudly.  But...

    In my copy of Common Lisp: The Language, it's on page 372.

You mean everything in the CL Bible is considered valid in rel 6?  I
meant it is not in the docex.  I found it because I looked up
setq-standard-value, which pointed to some list si:*standard-bindings*,
where I saw *print-case*.
18-Apr-85 01:01:55-EST,2002;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 18 Apr 85 01:01-EST
Date: Thu,18 Apr 85 01:01:56 EST
From: Tim McNerney <TIM@MIT-MC>
Subject:  Compilation and package system
To: DLW@SCRC-STONY-BROOK
cc: BUG-LISPM@MIT-MC, TIM@MIT-MC, Fahlman@CMU-CS-C
In-reply-to: Msg of Tue 16 Apr 1985  22:20 EST from Scott E. Fahlman <Fahlman at CMU-CS-C.ARPA>
Message-ID: <[MIT-MC].459106.850418.TIM>

    Date: Tue, 16 Apr 1985  22:20 EST
    From: Scott E. Fahlman <Fahlman at CMU-CS-C.ARPA>
    To:   Daniel L. Weinreb <DLW%scrc at MIT-MC.ARPA>

        (1)...  It's OK to have the -*- in ADDITION to the
        portable forms that specify package setups, but it's purely optional
        from the point of view of the Common Lisp evaluator and compiler.

    Right!

    ...maybe something like the following would fly:  Use a slightly different
    notation in the comment line for each of the three cases of interest:

    A. This is a Zetalisp-style file comment, and the editor can get all
    that it needs right here in this comment line.

    B. This is vanilla Common Lisp, but it follows the convention that
    the whole file fits into one package environment that is set by in
    the first few forms in the file.

    C. This is vanilla Common Lisp with no guarantees about the package
    structure in the file.  If the user actually asks for something in the
    buffer to be read into Lisp or compiled, the system must first read
    everything up to that point in order to be sure that the environment is
    right...

"C" is a great suggestion!  I have gotten screwed umpteen million
times because ZMACS assumes that the entire file is in one package.

To avoid rescanning the file every time a form is read from the buffer,
the package could be cashed in the SECTION-NODE for each top-level
form.  SECTIONIZE-BUFFER could be modified to keep track of package
changing forms as it scans the file so it could set the (new) package
slot of SECTION-NODEs.
18-Apr-85 01:22:09-EST,1786;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 18 Apr 85 01:22-EST
Date: Thu,18 Apr 85 01:22:26 EST
From: Tim McNerney <TIM@MIT-MC>
Subject:  Compilation and package system, an addendum
To: DLW@SCRC-STONY-BROOK
cc: BUG-LISPM@MIT-MC
In-reply-to: Msg of Tue 16 Apr 85 17:20 EST from Daniel L. Weinreb <DLW at TENEX.SCRC.Symbolics.COM>
Message-ID: <[MIT-MC].459123.850418.TIM>

    Date: Tue, 16 Apr 85 17:20 EST
    From: Daniel L. Weinreb <DLW at TENEX.SCRC.Symbolics.COM>
    To:   Wholey at CMU-CS-C.ARPA
    cc:   Common-lisp at SU-AI.ARPA, perdue%hplabs.csnet at CSNET-RELAY.ARPA
    Re:   Compilation and package system

    ...

    As far as I can tell, the only way to meet the first three constraints
    is to require the editor to parse through the entire file, finding all
    of the package-related forms such as IMPORT, when the file is read in.
    It's a bit harder than that, since those forms might be inside of
    EVAL-WHEN forms.  Or COND forms.  Or there might be a function defined
    in the file and later called at top-level that does an IMPORT.  Worse
    yet, the "package environment" might be different at different parts of
    the file, as various package-related forms are sprinkled among the
    function definitions.

    I don't think this is feasible.

Yes, there could be an arbitrary amount of hair, but there is a big
difference between assuming that an entire file will be read in the
package declared by the -*- line and supporting lusers who want to
generate the screw cases you allude to above.  Once the package
environment is established, simply having the ZMACS keep a package
attribute for each section will support editing files like patch files
which need to be read in a number of different packages.
18-Apr-85 01:37:38-EST,6448;000000000000
Received: from MIT-MOON by MIT-OZ via Chaosnet; 18 Apr 85 01:37-EST
Date: Thursday, 18 April 1985, 01:37-EST
From: David Vinayak Wallace <Gumby at MIT-MC>
Subject: File system error
To: BUG-LISPM at OZ
Message-ID: <850418013714.5.GUMBY@MOON.MIT>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 8.2,
microcode TMC5-MIC 319, on Lisp Machine Keith Moon:

>>Error: DIRECTORY/MULTIPLE-FILE-PLISTS: Handle I2449 still (already?) in use.
While in the function (:method fs:nfile-server-unit :wait-for-command)  (:method fs:nfile-server-unit :send-and-wait-for-command)  (:method fs:nfile-server-unit :send-in-command-condition-environment)

(:method fs:nfile-server-unit :wait-for-command):  (P.C. = 65)
   Arg 0 (self): #<NFILE-SERVER-UNIT 27671574>
   Arg 1 (self-mapping-table): #<Map to flavor fs:nfile-server-unit -- 15. IV's, 0. FL's 104167041>
   Arg 2 (operation): :wait-for-command
   Arg 3 (tid-cons-args): ("T2486" :directory "Directory" #<NFILE-DATA-CHANNEL I2449 17501220>)
   Local 4 (data-channel): #<NFILE-DATA-CHANNEL I2449 17501220>
   Local 5 (command-tid): "T2486"
   Local 6 (command-name): :directory
   Local 7 (whostate): "Directory"
   Local 8 (response-args): ("BUG" nil "DIRECTORY//MULTIPLE-FILE-PLISTS: Handle I2449 still (already?) in use.")
   Local 9 (response-name): :error

(:method fs:nfile-server-unit :send-and-wait-for-command):  (P.C. = 40)
   Arg 0 (self): #<NFILE-SERVER-UNIT 27671574>
   Arg 1 (self-mapping-table): #<Map to flavor fs:nfile-server-unit -- 15. IV's, 0. FL's 104167041>
   Arg 2 (operation): :send-and-wait-for-command
   Arg 3 (data): (:directory "Directory" #<NFILE-DATA-CHANNEL I2449 17501220> "I2449" ">aisite>*.*.*" (:deleted) nil)

(:method fs:nfile-server-unit :send-in-command-condition-environment):  (P.C. = 54)
   Arg 0 (self): #<NFILE-SERVER-UNIT 27671574>
   Arg 1 (self-mapping-table): #<Map to flavor fs:nfile-server-unit -- 15. IV's, 0. FL's 104167041>
   Arg 2 (operation): :send-in-command-condition-environment
   Arg 3 (message): :send-and-wait-for-command
   Arg 4 (data): (:directory "Directory" #<NFILE-DATA-CHANNEL I2449 17501220> "I2449" ">aisite>*.*.*" (:deleted) nil)

(:method fs:nfile-server-unit :command):  (P.C. = 7)
   Arg 0 (self): #<NFILE-SERVER-UNIT 27671574>
   Arg 1 (self-mapping-table): #<Map to flavor fs:nfile-server-unit -- 15. IV's, 0. FL's 104167041>
   Arg 2 (operation): :command
   Rest arg (data): (:directory "Directory" #<NFILE-DATA-CHANNEL I2449 17501220> "I2449" ">aisite>*.*.*" (:deleted) nil)

fs:nfile-keyword-list-caller:  (P.C. = 165)
   Arg 0 (instance): #<NFILE-SERVER-UNIT 27671574>
   Arg 1 (cmdname): :directory
   Arg 2 (whostate): "Directory"
   Arg 3 (data-channel): #<NFILE-DATA-CHANNEL I2449 17501220>
   Arg 4 (constant-args): ("I2449" ">aisite>*.*.*" (:deleted) nil)
   Local 4 (constant-args): nil
   Arg 5 (keyword-value-pairs): nil

(:method fs:nfile-access-path :directory-list):  (P.C. = 66)
   Arg 0 (self): #<LMFS-NFILE-ACCESS-PATH B using new-file 27671563>
   Arg 1 (self-mapping-table): #<Map to flavor fs:nfile-access-path -- 4. IV's, 2. FL's 121346410>
   Arg 2 (operation): :directory-list
   Arg 3 (pathname): #<LMFS-PATHNAME "B:>aisite>*.*.*">
   Arg 4 (options): (:sorted :deleted)
   Local 4 (options): (:deleted)

(:method fs:active-pathname-mixin :directory-list):  (P.C. = 12)
   Arg 0 (self): #<LMFS-PATHNAME "B:>aisite>*.*.*">
   Arg 1 (self-mapping-table): #<Map to flavor fs:active-pathname-mixin -- 1. IV's, 0. FL's 104225115>
   Arg 2 (operation): :directory-list
   Arg 3 (options): (:sorted :deleted)

fs:directory-list:  (P.C. = 114)
   Arg 0 (filename): #<LMFS-PATHNAME "B:>aisite>*.*.*">
   Rest arg (options): (:sorted :deleted)

(:method zwei:dired-node-mixin :revert):  (P.C. = 42)
   Arg 0 (self): #<DIRED-BUFFER "*Dired-2*" 15500623>
   Arg 1 (self-mapping-table): #<Map to flavor zwei:dired-node-mixin -- 4. IV's, 0. FL's 143215622>
   Arg 2 (operation): :revert

(:method zwei:dired-buffer :combined :revert):  (P.C. = 11)
   Arg 0 (self): #<DIRED-BUFFER "*Dired-2*" 15500623>
   Arg 1 (self-mapping-table): #<Map to flavor zwei:dired-buffer -- 3. IV's, 4. FL's 143215610>
   Arg 2 (.operation.): :revert
   Rest arg (.daemon-caller-args.): nil

(:method zwei:zmacs-editor :find-special-buffer):  (P.C. = 45)
   Arg 0 (self): #<ZMACS-TOP-LEVEL-EDITOR 121171573>
   Arg 1 (self-mapping-table): #<Map to flavor zwei:zmacs-editor -- 3. IV's, 0. FL's 142345763>
   Arg 2 (operation): :find-special-buffer
   Arg 3 (type): :dired
   Arg 4 (new-p): t
   Rest arg (sets): (:set-pathname #<LMFS-PATHNAME "B:>aisite>*.*.*">)

(:method zwei:zmacs-editor :select-special-buffer):  (P.C. = 10)
   Arg 0 (self): #<ZMACS-TOP-LEVEL-EDITOR 121171573>
   Arg 1 (self-mapping-table): #<Map to flavor zwei:zmacs-editor -- 3. IV's, 0. FL's 142345763>
   Arg 2 (operation): :select-special-buffer
   Arg 3 (type): :dired
   Arg 4 (new-p): t
   Rest arg (sets): (:set-pathname #<LMFS-PATHNAME "B:>aisite>*.*.*">)

zwei:directory-edit:  (P.C. = 22)
   Arg 0 (pathname): #<LMFS-PATHNAME "B:>aisite>*.*.*">

zwei:com-dired:  (P.C. = 5)

zwei:com-r-dired:  (P.C. = 26)

zwei:command-execute:  (P.C. = 57)
   Arg 0 (command): zwei:com-r-dired
   Arg 1 (char): 100.
   Arg 2 (prefix-char): 344.
   --Defaulted args:--
   Arg 3 (hook-list): nil

zwei:make-extended-command-internal:  (P.C. = 107)

Closure of zwei:make-extended-command-internal:

zwei:command-execute:  (P.C. = 57)
   Arg 0 (command): #<DTP-CLOSURE 112451571>
   Arg 1 (char): 344.
   Arg 2 (prefix-char): nil
   Arg 3 (hook-list): nil

zwei:process-command-char:  (P.C. = 14)
   Arg 0 (ch): 344.

(:method zwei:editor :edit):  (P.C. = 233)
   Arg 0 (self): #<ZMACS-TOP-LEVEL-EDITOR 121171573>
   Arg 1 (self-mapping-table): #<Map to flavor zwei:editor -- 12. IV's, 0. FL's 142346020>
   Arg 2 (operation): :edit
   --Defaulted args:--
   Arg 3 (top-level-p): t
   Arg 4 (description): nil

(:method zwei:top-level-editor :combined :edit):  (P.C. = 60)
   Arg 0 (self): #<ZMACS-TOP-LEVEL-EDITOR 121171573>
   Arg 1 (self-mapping-table): #<Map to flavor zwei:top-level-editor -- 13. IV's, 1. FL's 142345776>
   Arg 2 (.operation.): :edit
   Rest arg (.daemon-caller-args.): nil

zwei:zmacs-window-top-level:  (P.C. = 51)

si:process-top-level:  (P.C. = 54)
   --Defaulted args:--
   Arg 0 (ignore): nil
18-Apr-85 01:38:55-EST,727;000000000000
Mail-From: MLY created at 18-Apr-85 01:38:48
Date: Thu 18 Apr 85 01:38:48-EST
From: mly
Subject: Re: Whole directory missing.
Sender: MLY@MIT-OZ
To: bug-lispm@MIT-OZ
Reply-To: MLY@MIT-OZ
In-Reply-To: Message from "David C. Plummer in disguise <DCP at SCRC-QUABBIN>" of Wed 17 Apr 85 18:13:02-EST

    Date: Wednesday, 17 April 1985, 12:59-EST
    From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>

    I'll guess that all of the L-SYSTEM-INTERNALS subsystem sources got
    restricted.  My current opinion is that the files SYSDEF and SYSDF1
    should be carefully split into four files, two of which can be
    unrestricted.

Gosh, does this mean that %%q-pointer is sensitive information??
-------
18-Apr-85 03:02:40-EST,735;000000000000
Received: from MIT-MOON by MIT-OZ via Chaosnet; 18 Apr 85 03:02-EST
Date: Thursday, 18 April 1985, 03:02-EST
From: David Vinayak Wallace <Gumby at MIT-MC>
Subject: [Gumby at MIT-MC: EVAL]
To: bug-lispm at OZ
cc: Gumby at MIT-MC
Message-ID: <850418030210.7.GUMBY@MOON.MIT>

There's no bug-sage.  When you bring up a new release, on ething should
be to set up the bug lists that ZMAIL thinks exists.

Date: Thursday, 18 April 1985, 02:11-EST
From: David Vinayak Wallace <Gumby at MIT-MC>
In Symbolics 3600 SAGE in Release 6.0, IP-TCP 29.0, AISite 8.2,
microcode TMC5-MIC 319, on Lisp Machine Keith Moon:

For the documentation of certain variables, it would be nice if you
could mouse them and get their current value.
18-Apr-85 09:55:31-EST,2465;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 18 Apr 85 09:55-EST
Received: from SCRC-STONY-BROOK by MIT-MC via Chaosnet; 18 APR 85  09:55:50 EST
Received: from SCRC-PEACE by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 216809; Thu 18-Apr-85 09:55:20-EST
Date: Thu, 18 Apr 85 09:55 EST
From: Charles Hornig <Hornig@STONY-BROOK.SCRC.Symbolics.COM>
Subject: Lossage due to ridiculous source withholding policy
To: Gavan Duffy <GAVAN@OZ>, Hornig@STONY-BROOK.SCRC.Symbolics.COM,
    BUG-LISPM@MIT-MC, PHW@OZ
In-Reply-To: <850417193620.0.GAVAN@MORRISON.MIT>
Message-ID: <850418095546.2.HORNIG@PEACE.SCRC.Symbolics.COM>

    Date: Wed, 17 Apr 85 19:36 EST
    From: Gavan Duffy <GAVAN@OZ.MIT>

	Date: Wed, 17 Apr 85 14:02 EST
	From: Charles Hornig <Hornig@STONY-BROOK.SCRC.Symbolics.COM>

	    Date: Tue, 16 Apr 85 11:06 EST
	    From: Gavan Duffy <GAVAN@OZ.MIT>

	    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 8.2,
	    microcode TMC5-MIC 319, FEP 22, on Lisp Machine Jim Morrison:

	    I need to examine the source for ZWEI:NETWORK-SEND-IT to figure out how to
	    keep Zmail from trying to connect to OZ when sending mail (notice local var
	    10).  However, because some PINHEAD decided to withhold the Zmail sources, I
	    can't.

	    Until this RIDICULOUS source withholding policy is lifted, Symbolics' products
	    are inferior to any other that does not withhold sources.

	    Please feel free to express my absolute disgust to whoever's responsible for
	    this lossage.  Also, please let me know whether I can expect a resolution of
	    these problems or should instead look into using a Lambda.

	    >>Break: 
	    While in the function PROCESS-WAIT  CHAOS:WAIT  CHAOS:WAIT-FOR-CONNECT

	It is sending mail through OZ because OZ is your site's
	store-and-forward mail server.  If you want to use some other host, you
	can set ZWEI:*MAIL-NETWORK-HOST* to override ZMail's selection.

    If OZ is down, why isn't the lisp machine smart enough to send it via some
    other host?  It used to do it in release 5.  I wonder whether Lambdas can do
    it.

Because there aren't any other mailer hosts in the AI site.  It won't
use mailers at other sites because MIT complained that it was sometimes
using the Symbolics mailers for MIT mail.

Release 5 would do the same thing if you ran it now (in the AI site).
If you want to use the MIT site's mailers, put your machine in the MIT
site.
18-Apr-85 10:44:26-EST,1132;000000000000
Received: from 24620 by MIT-OZ via Chaosnet; 18 Apr 85 10:44-EST
Received: from SCRC-MENOTOMY by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 216842; Thu 18-Apr-85 10:42:58-EST
Date: Thursday, 18 April 1985, 10:40-EST
From: Robert O. Mathews <rom at SCRC-YUKON>
Subject: Flavor Bugs
To: JCMA at MIT-MC
cc: DCP at SCRC-QUABBIN, BUG-LISPM at OZ
In-Reply-To: <[MIT-MC].458788.850417.JCMA>
Message-ID: <850418104043.1.ROM@MENOTOMY.SCRC.Symbolics.COM>

    Date: Wed,17 Apr 85 19:55:31 EST
    From: John C. Mallery <JCMA@MIT-MC>

    No, the reason is probably because dbg:parse-error is globalized.
    Why?  Look opur system was well debugged in the last system and you
    people have munged up the flavor system so we can't even compile
    our program.  What is the story?  If you're not going to give us the
    sources and you're going to introduce changes the break debugged
    code, what are we supposed to do?

The section "Symbols Added to or Removed from GLOBAL in Release 6.0", in
the Release 6.0 Release Notes, contains a complete list of all symbols
added to GLOBAL.  PARSE-FERROR is among them.
18-Apr-85 11:05:13-EST,3262;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 18 Apr 85 11:04-EST
Received: from 40700024620 by MIT-MC via Chaosnet; 18 APR 85  11:04:38 EST
Received: from SCRC-HARLEM by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 216861; Thu 18-Apr-85 11:04:10-EST
Date: Thu, 18 Apr 85 11:04 EST
From: Joseph R Goldstone <joseph@SCRC-QUABBIN.ARPA>
Subject: Send to NIL
To: Gavan Duffy <GAVAN@OZ.MIT>,
    David C. Plummer in disguise <DCP@SCRC-QUABBIN.ARPA>,
    Charles Hornig <Hornig@SCRC-STONY-BROOK.ARPA>, BUG-LISPM@MIT-MC.ARPA
In-Reply-To: <850416124403.3.GAVAN@MORRISON.MIT>,
             <850417133016.1.NFEP@NEPONSET.SCRC.Symbolics.COM>,
             <850417140004.3.HORNIG@PEACE.SCRC.Symbolics.COM>
Message-ID: <850418110410.8.JOSEPH@HARLEM.SCRC.Symbolics.COM>

    Date: Tue, 16 Apr 85 12:44 EST
    From: Gavan Duffy <GAVAN@OZ.MIT>

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 8.2,
    microcode TMC5-MIC 319, FEP 22, on Lisp Machine Jim Morrison:

    Here's a send to NIL.  It happens every time I send mail from the debugger.
    It may have been due to some switch that I set, but I can't tell BECAUSE I
    DON'T HAVE THE GODDAM SOURCES!  

    Anyway, I get out of it by having
    MAILER:ALL-MAIL-ADDRESSES-FORWARD-BETWEEN-HOSTS-P evaluate and return
    #'ignore.  But this makes the mail address be BUG-LISPM@NIL, which has to be
    edited by hand.

    >>Error: The symbol NIL has an invalid function definition
    While in the function NIL  MAILER:ALL-MAIL-ADDRESSES-FORWARD-BETWEEN-HOSTS-P  ZWEI:PARSE-BUG-ARG

    NIL:
       Arg 0: :SITE

    MAILER:ALL-MAIL-ADDRESSES-FORWARD-BETWEEN-HOSTS-P:  (P.C. = 12)
       Arg 0 (HOST-1): #<TOPS20-HOST OZ 1700407>
       Arg 1 (HOST-2): NIL

    ZWEI:PARSE-BUG-ARG:  (P.C. = 34)
       Arg 0 (SYSTEM): DBG:LISPM
       Local 0 (SYSTEM): "LISPM"

   --------------------------------------------------------------------------
    Date: Wed, 17 Apr 85 13:30 EST
    From: David C. Plummer in disguise <DCP@SCRC-QUABBIN.ARPA>

    ZWEI:*HOST-FOR-BUG-REPORTS* is my guess, judging by the PUSH-INDIRECT at
    location 33 of ZWEI:PARSE-BUG-ARG, the caller of MAILER:A-M-A-F-B-H-P.
    I'll assume this is more outrage about the lack of sources, which I just
    answered in another bug message than a reflection of your debugging
    techniques.

    --------------------------------------------------------------------------

    Date: Wed, 17 Apr 85 14:00 EST
    From: Charles Hornig <Hornig@STONY-BROOK.SCRC.Symbolics.COM>

    It's happening because ZWEI:*HOST-FOR-BUG-REPORTS* (which is set from
    the site options of the same name) is NIL.  Quick fix is to give your
    site a HOST-FOR-BUG-REPORTS attribute.

I would agree with the diagnoses of DCP and Hornig, but there is one conflicting
data point.  When I was at 7AI last night, a :Show Namespace Object Site AI
showed that the AI site's Host For Bug Reports attribute has a value of MIT-OZ.

Did someone fix this yesterday?  There was a change to the MIT site yesterday,
but not to the AI site (at least in two minutes of looking I can't see one).

If the problem recurs, could you include a m-X Eval Into Buffer of 
(describe net:*local-site*) for us?  Thanks.
18-Apr-85 13:10:59-EST,1589;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 18 Apr 85 13:10-EST
Received: from MIT-GOLDILOCKS by MIT-MC via Chaosnet; 18 APR 85  13:10:52 EST
Received: from MIT-SMOKEY by GOLDILOCKS via CHAOS with CHAOS-MAIL id 709; Thu 18-Apr-85 13:10:10-EST
Date: Thu, 18 Apr 85 13:09 EST
From: Scott Cyphers <sr.ehpyc%MIT-SPEECH@MIT-REAGAN.ARPA>
Subject: Lossage due to ridiculous source withholding policy
To: Hornig@STONY-BROOK.SCRC.Symbolics.COM, GAVAN@OZ.MIT,
    BUG-LISPM@MIT-MC.ARPA, PHW@OZ.MIT
In-Reply-To: <850418095546.2.HORNIG@PEACE.SCRC.Symbolics.COM>
Message-ID: <850418130932.1.CYPHER@MIT-SMOKEY.MIT>

Try this:

(record-source-file-name 'zwei:find-mail-services 'defun t)

zwei:
(defun find-mail-services ()
  (with-stack-list (net:*namespace-search-list* (send net:*local-site* ':local-namespace))
    (neti:keeping-namespace-server
      (append
	(with-stack-list (this-site ':site net:*local-site*)
	  (net:find-paths-to-service ':store-and-forward-mail this-site))
	(with-stack-list (ai-site :site (neti:find-object-named :site :mit))
	  (net:find-paths-to-service ':store-and-forward-mail ai-site))
	(with-stack-list (mit-site :site (neti:find-object-named :site :zoo))
	  (net:find-paths-to-service ':store-and-forward-mail mit-site))))))

The APPEND could probably be an NCONC, but I didn't want to depend on
the implementation of NET:FIND-PATHS-TO-SERVICE not doing something
funny.  We've been using this for probably close to a year now in the
Zoo site, since there were no sotre and forward mail servers here until
I made Goldy one last week.
18-Apr-85 13:12:24-EST,770;000000000000
Received: from MIT-ROBOT-5 by MIT-OZ via Chaosnet; 18 Apr 85 13:12-EST
Date: Thursday, 18 April 1985, 13:12-EST
From: Patrick A. O'Donnell <PAO at MIT-EECS>
Subject: si:*interactive-bindings*
To: BUG-LISPM at OZ
Message-ID: <850418131217.1.PAO@ROBOT-5.MIT>

In Symbolics 3670 Release 6.0, IP-TCP 29.0, AISite 8.3, Manip 5.0,
Puma 5.0, microcode TMC5-IO4-FPA-MIC 319, on Lisp Machine Robot-5:

When I get an error or breakpoint in a lisp listener, I entirely
unexpectedly get a warning (for example):

 Binding PACKAGE to #<Package PAO 10572645> (old value was #<Package USER 10000000>)

My use of the lisp listener (at least in this case, and probably the
usual case) was totally unrelated to the file I was editing in the
editor.  Feature-p?
		- Pat
18-Apr-85 13:16:06-EST,1605;000000000000
Received: from 24620 by MIT-OZ via Chaosnet; 18 Apr 85 13:15-EST
Received: from SCRC-PEACE by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 216980; Thu 18-Apr-85 13:14:51-EST
Date: Thu, 18 Apr 85 13:15 EST
From: Charles Hornig <Hornig@STONY-BROOK.SCRC.Symbolics.COM>
Subject: Shouldn't this work?
To: Ken Haase <KWH@OZ>, BUG-LISPM@OZ
In-Reply-To: <850416192320.1.KWH@ROBOT-5.MIT>
Message-ID: <850418131520.9.HORNIG@PEACE.SCRC.Symbolics.COM>

    Date: Tuesday, 16 April 1985, 19:23-EST
    From: Ken Haase <KWH at OZ>

    In Symbolics 3670 Release 6.0, IP-TCP 29.0, AISite 8.2,
    Experimental Meta Representation Langauge 2.15,
    microcode TMC5-IO4-FPA-MIC 319, on Lisp Machine Robot-5:

    ;;; Evaluating the forms:

    (defsubst foo (x)
      (do ((x x (dbg:check-arg-1 'x x "a number")))
	  ((numberp x) (+ x 3))))

    ;;; and 
    (macroexpand '(foo y))

    produces the following error-- it seems to me that this makes sense as a
    subst, providing you know not to substitute for the inner X's, which
    should be able to be resolved at macro-expand time; in any case, the
    binding of X should also be able to be caught at DEFSUBST time, rather
    than waiting for the attempt to macroexpand FOO.

Thank you for your suggestion.  A change to allow you to LET parameters
of a SUBST has been made to the development system and will be
considered for later releases.

    >>Error: Attempt to set or bind the SUBST parameter X.
    While in the function (:INTERNAL LT::LET-SUBST-COPYFORMS 0 LT::LET-SUBST-COPY)  LT::MAPFORMS-CALL  LT::MAPFORMS-BIND
18-Apr-85 13:21:31-EST,1269;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 18 Apr 85 13:19-EST
Received: from 40700024534 by MIT-MC via Chaosnet; 18 APR 85  13:16:55 EST
Received: from SCRC-NEPONSET by SCRC-VALLECITO via CHAOS with CHAOS-MAIL id 8428; Thu 18-Apr-85 12:59:29-EST
Date: Thu, 18 Apr 85 12:59 EST
From: David C. Plummer in disguise <DCP@SCRC-QUABBIN.ARPA>
Subject: Not about "Lossage due to ridiculous source withholding policy"
To: Gavan Duffy <GAVAN@OZ.MIT>
cc: Hornig@SCRC-STONY-BROOK.ARPA, BUG-LISPM@MIT-MC.ARPA, PHW@OZ.MIT
In-Reply-To: <850417193620.0.GAVAN@MORRISON.MIT>
Message-ID: <850418125924.6.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Wed, 17 Apr 85 19:36 EST
    From: Gavan Duffy <GAVAN@OZ.MIT>

	Date: Wed, 17 Apr 85 14:02 EST
	From: Charles Hornig <Hornig@STONY-BROOK.SCRC.Symbolics.COM>

	It is sending mail through OZ because OZ is your site's
	store-and-forward mail server.  If you want to use some other host, you
	can set ZWEI:*MAIL-NETWORK-HOST* to override ZMail's selection.

    If OZ is down, why isn't the lisp machine smart enough to send it via some
    other host?  It used to do it in release 5.  I wonder whether Lambdas can do
    it.

Whether Lambdas can or cannot is in no way related to the source
withholding policy.
18-Apr-85 13:26:16-EST,1653;000000000000
Received: from 24620 by MIT-OZ via Chaosnet; 18 Apr 85 13:26-EST
Received: from SCRC-MENOTOMY by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 216906; Thu 18-Apr-85 11:45:58-EST
Date: Thursday, 18 April 1985, 11:43-EST
From: Robert O. Mathews <rom at SCRC-YUKON>
Subject: what sources do I want?
To: Zvona at OZ
cc: Bug-Lispm at OZ, bug-doc at SCRC-YUKON
In-Reply-To: <850417210810.1.ZVONA@LENNON.MIT>
Message-ID: <850418114339.3.ROM@MENOTOMY.SCRC.Symbolics.COM>

    Date: Wednesday, 17 April 1985, 21:08-EST
    From: David Chapman <Zvona at OZ>

    Today, compiler:compile-file, to see exactly how it defaults its
    pathname arguments.  Guess I'll disassemble it and read the object
    instead.

This is a bug in the documentation.  It ought to say that the input
pathname is the result of calling fs:parse-pathname with arguments of
the first argument to compiler:compile-file, nil, and
fs:load-pathname-defaults.  (If this pathname has a type of nil or
:unspecific, compiler:compile-file looks for a file of canonical type
:lisp).

If no output pathname argument is supplied, the output pathname is the
input pathname with a canonical type of :bin and a version of :newest.
If an output pathname argument is supplied, the output pathname is the
result of merging the output pathname argument with a default of the
input pathname, a default type of :bin, and a default version of
:newest.

The documentation could also say more specifically that
compiler:compile-file uses fs:set-default-pathname to store the input
pathname into fs:load-pathname-defaults, unless the "dont-set-default-p"
argument is non-nil.
18-Apr-85 13:34:44-EST,2020;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 18 Apr 85 13:34-EST
Date: 18 Apr 1985  13:33 EST (Thu)
Message-ID: <SR.EHPYC.12104177705.BABYL@MIT-SPEECH>
From: Scott Cyphers <SR.EHPYC@MIT-SPEECH>
To:   bug-lispm@oz
Subject: [Postmaster: Unable to deliver letter]

I got this from Goldy.


Date: Thursday, 18 April 1985, 13:10-EST
From: Postmaster at GOLDILOCKS
To:   sr.ehpyc
Re:   Unable to deliver letter


Unable to deliver letter to the following recipient:
  Hornig@STONY-BROOK.SCRC.Symbolics.COM: Host does not provide mail service.

----- Text of letter follows -----
Received: from MIT-SMOKEY by GOLDILOCKS via CHAOS with CHAOS-MAIL id 711; Thu 18-Apr-85 13:10:14-EST
Date: Thu, 18 Apr 85 13:09 EST
From: Scott Cyphers <sr.ehpyc@SPEECH.MIT>
Subject: Lossage due to ridiculous source withholding policy
To: Hornig@STONY-BROOK.SCRC.Symbolics.COM, GAVAN@OZ.MIT,
    BUG-LISPM@MC.MIT, PHW@OZ.MIT
In-Reply-To: <850418095546.2.HORNIG@PEACE.SCRC.Symbolics.COM>
Message-ID: <850418130932.1.CYPHER@MIT-SMOKEY.MIT>

Try this:

(record-source-file-name 'zwei:find-mail-services 'defun t)

zwei:
(defun find-mail-services ()
  (with-stack-list (net:*namespace-search-list* (send net:*local-site* ':local-namespace))
    (neti:keeping-namespace-server
      (append
	(with-stack-list (this-site ':site net:*local-site*)
	  (net:find-paths-to-service ':store-and-forward-mail this-site))
	(with-stack-list (ai-site :site (neti:find-object-named :site :mit))
	  (net:find-paths-to-service ':store-and-forward-mail ai-site))
	(with-stack-list (mit-site :site (neti:find-object-named :site :zoo))
	  (net:find-paths-to-service ':store-and-forward-mail mit-site))))))

The APPEND could probably be an NCONC, but I didn't want to depend on
the implementation of NET:FIND-PATHS-TO-SERVICE not doing something
funny.  We've been using this for probably close to a year now in the
Zoo site, since there were no sotre and forward mail servers here until
I made Goldy one last week.
18-Apr-85 14:12:03-EST,1624;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 18 Apr 85 14:11-EST
Received: from 40700024620 by MIT-MC via Chaosnet; 18 APR 85  14:12:09 EST
Received: from SCRC-HARLEM by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 216894; Thu 18-Apr-85 11:30:48-EST
Date: Thu, 18 Apr 85 11:30 EST
From: Joseph R Goldstone <joseph@SCRC-QUABBIN.ARPA>
Subject: copying files to ITS; *PRINT-CASE*
To: David Vinayak Wallace <Gumby@MIT-MC.ARPA>,
    Robert A. Cassels <Cassels@SCRC-STONY-BROOK.ARPA>
cc: Moon@SCRC-STONY-BROOK.ARPA, BUG-LISPM@MIT-MC.ARPA
In-Reply-To: <850418003930.1.GUMBY@MOON.MIT>
Message-ID: <850418113042.0.JOSEPH@HARLEM.SCRC.Symbolics.COM>

    Date: Thu, 18 Apr 85 00:39 EST
    From: David Vinayak Wallace <Gumby@MC.MIT>

	Date: Wed, 17 Apr 85 09:49 EST
	From: Robert A. Cassels <Cassels@SCRC-STONY-BROOK.ARPA>

	    Date: Tue, 16 Apr 85 01:06 EST
	    From: David Vinayak Wallace <Gumby@MIT-MC.ARPA>

	    You are exactly right.  I just discovered that *print-case* isn't
	    documented, so I suppose I shouldn't bitch to loudly.  But...

	In my copy of Common Lisp: The Language, it's on page 372.

    You mean everything in the CL Bible is considered valid in rel 6?  I
    meant it is not in the docex.  I found it because I looked up
    setq-standard-value, which pointed to some list si:*standard-bindings*,
    where I saw *print-case*.

See the section "SCL and Common Lisp differences" in the documentation examiner.

Actually, do a Find Whole of Common Lisp and poke around.  Too bad it's not
obvious how the topics might be related; fixed in the DocEx Grapher, hopefully.
18-Apr-85 14:42:37-EST,4369;000000000000
Received: from 24610 by MIT-OZ via Chaosnet; 18 Apr 85 14:42-EST
Received: from SCRC-NEPONSET by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 154947; Thu 18-Apr-85 14:41:16-EST
Date: Thursday, 18 April 1985, 14:41-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: Flavor Bugs
To: Robert O. Mathews <rom at SCRC-YUKON>, Gavan Duffy <GAVAN at OZ>,
    jcma at MIT-MC, DCP at SCRC-QUABBIN, BUG-LISPM at OZ,
    SWM at SCRC-QUABBIN
In-Reply-To: <850418104043.1.ROM@MENOTOMY.SCRC.Symbolics.COM>,
             <850417160725.7.GAVAN@MORRISON.MIT>,
             <850418025245.5.JCMA@MORRISON.MIT>,
             <[MIT-MC].458788.850417.JCMA>
References: <850415071422.3.JCMA@MORRISON.MIT>,
            <850415072445.4.JCMA@MORRISON.MIT>,
            <850415135203.4.JCMA@MORRISON.MIT>,
            <850417104302.6.SWM@THAMES.SCRC.Symbolics.COM>,
            <850417104410.7.SWM@THAMES.SCRC.Symbolics.COM>,
            <850417104506.8.SWM@THAMES.SCRC.Symbolics.COM>,
            <850417122840.1.NFEP@NEPONSET.SCRC.Symbolics.COM>,
            <850417123604.2.NFEP@NEPONSET.SCRC.Symbolics.COM>,
            <850417160725.7.GAVAN@MORRISON.MIT>,
            <850417160725.7.GAVAN@MORRISON.MIT>,
            <850417191417.7.GAVAN@MORRISON.MIT>,
            <850417191417.7.GAVAN@MORRISON.MIT>,
            <[MIT-MC].458788.850417.JCMA>,
            <[MIT-MC].458788.850417.JCMA>,
            <850418025245.5.JCMA@MORRISON.MIT>,
            <850418025641.6.JCMA@MORRISON.MIT>,
            <850418104043.1.ROM@MENOTOMY.SCRC.Symbolics.COM>,
            <850418104043.1.ROM@MENOTOMY.SCRC.Symbolics.COM>
Message-ID: <850418144145.0.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Thursday, 18 April 1985, 10:40-EST
    From: Robert O. Mathews <rom at SCRC-YUKON>

	Date: Wed,17 Apr 85 19:55:31 EST
	From: John C. Mallery <JCMA@MIT-MC>

	No, the reason is probably because dbg:parse-error is globalized.
	Why?  Look opur system was well debugged in the last system and you
	people have munged up the flavor system so we can't even compile
	our program.  What is the story?  If you're not going to give us the
	sources and you're going to introduce changes the break debugged
	code, what are we supposed to do?

    The section "Symbols Added to or Removed from GLOBAL in Release 6.0", in
    the Release 6.0 Release Notes, contains a complete list of all symbols
    added to GLOBAL.  PARSE-FERROR is among them.

Yow!!  Real information.  I thought I typed in 'DBG:PARSE-FERROR and it
said SYS:PARSE-FERROR, leading me to believe it wasn't in GLOBAL.

    Date: Wed, 17 Apr 85 16:07 EST
    From: Gavan Duffy <GAVAN@OZ.MIT>

    Both DEBUGGER: and RELATUS: :USE GLOBAL:, and nothing else.  

DEBUGGER uses SYSTEM as well.

    Date: Thu, 18 Apr 85 02:52 EST
    From: jcma@MC.MIT

    Note that we weren't shaddowing before. We are still losing with shaddowing.
    I will report on that later.

    (DEFPACKAGE
	  RELATUS
	  (:PREFIX-NAME "RL")
	  (:NICKNAMES RL)
	  (:USE GLOBAL)
	  (:SHADOW PARSE-ERROR PARSE-FERROR)
	  (:SIZE 32000.))

I guess I don't know what this means.  Were you losing because you
weren't shadowing before and now you are winning?

    Date: Wed,17 Apr 85 19:55:31 EST
    From: John C. Mallery <JCMA@MIT-MC>

	What packages does your package :USE?  On my machine,
	    (eq 'dbg:parse-error 'sys:parse-error) => T
	I'll guess that you :USE DEBUGGER, which I'm not sure is a good idea,
	but I'm sure you have your reasons.

    No, the reason is probably because dbg:parse-error is globalized.
    Why? 
Because somebody decided it was a good idea, and it got documented as
ROM points out.
    Look our system was well debugged in the last system 
And I'm sure it will be well debugged again...
    and you
    people have munged up the flavor system so we can't even compile
    our program.  What is the story?  
It's hard to say.  You now know this problem was globalization.  I'll
assume I just haven't gotten to your (other) bugs about the flavor
system. 
    If you're not going to give us the
    sources and you're going to introduce changes the break debugged
    code, what are we supposed to do?

I can see it's going to be "blame it on the source distribution policy"
for a while even if said policy has nothing to do with the problem.
18-Apr-85 14:51:42-EST,1684;000000000000
Received: from 24610 by MIT-OZ via Chaosnet; 18 Apr 85 14:50-EST
Received: from SCRC-NEPONSET by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 154959; Thu 18-Apr-85 14:50:36-EST
Date: Thursday, 18 April 1985, 14:51-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: Whole directory missing.
To: Gavan Duffy <GAVAN at OZ>
cc: DCP at SCRC-QUABBIN, BUG-LISPM at OZ
In-Reply-To: <850417192816.8.GAVAN@MORRISON.MIT>
Message-ID: <850418145104.1.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Wednesday, 17 April 1985, 19:28-EST
    From: Gavan Duffy <GAVAN at OZ>

    Why the hell restrict any of it?  I'm sorry, but withholding software just
    doesn't protect you.  All it does is punish your customers and poor,
    insignificant users, like myself.  I'm prepared to be convinced otherwise, but
    no one has done so.

Parts of those files (sys:l-sys;) contain things that describe the
architecture, what makes the machine tick, and what makes the machine
fast.  Espionage is a lot easier to prove than copyright violations.
Indeed, other parts of those files aren't "interesting" for those
reasons.

    Anyway, my point was not that Symbolics has foolishly decided to withhold
    sources, thereby shooting themselves in the foot by making LMI Lambdas look
    that much better, although all this is certainly true.   My point was that
    PROBEF barfed.  If the file's not there, PROBEF should just return NIL.  The
    documentation says so.

OK, it's on the bug list.  Considering the type of mail we have gotten
in your direction, and the lack of an exact complaint, it's a bit hard
to tell this is what you were complaining about.
18-Apr-85 15:02:22-EST,1061;000000000000
Received: from 24620 by MIT-OZ via Chaosnet; 18 Apr 85 15:01-EST
Received: from SCRC-PEACE by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 217238; Thu 18-Apr-85 14:49:28-EST
Date: Thu, 18 Apr 85 14:49 EST
From: Charles Hornig <Hornig@STONY-BROOK.SCRC.Symbolics.COM>
Subject: [Postmaster: Unable to deliver letter]
To: Scott Cyphers <SR.EHPYC@MIT-SPEECH>, bug-lispm@OZ
In-Reply-To: <SR.EHPYC.12104177705.BABYL@MIT-SPEECH>
Message-ID: <850418144959.5.HORNIG@PEACE.SCRC.Symbolics.COM>

    Date: 18 Apr 1985  13:33 EST (Thu)
    From: Scott Cyphers <SR.EHPYC@MIT-SPEECH>

    I got this from Goldy.

    Date: Thursday, 18 April 1985, 13:10-EST
    From: Postmaster at GOLDILOCKS
    To:   sr.ehpyc
    Re:   Unable to deliver letter

    Unable to deliver letter to the following recipient:
      Hornig@STONY-BROOK.SCRC.Symbolics.COM: Host does not provide mail service.

You should put the following entry in your Dialnet registry
(SYS:SITE;PRIVATE-DIALNET-REGISTRY.LISP):

(:domain "Symbolics.COM" :host "INTERNET|SCRC-STONY-BROOK")
18-Apr-85 15:21:24-EST,1120;000000000000
Received: from 24620 by MIT-OZ via Chaosnet; 18 Apr 85 15:21-EST
Received: from SCRC-MENOTOMY by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 217262; Thu 18-Apr-85 15:21:01-EST
Date: Thursday, 18 April 1985, 15:18-EST
From: Robert O. Mathews <rom at SCRC-YUKON>
Subject: Flavor Bugs
To: DCP at SCRC-QUABBIN
cc: GAVAN at OZ, jcma at MIT-MC, BUG-LISPM at OZ, SWM at SCRC-QUABBIN
In-Reply-To: <850418144145.0.NFEP@NEPONSET.SCRC.Symbolics.COM>
Message-ID: <850418151850.9.ROM@MENOTOMY.SCRC.Symbolics.COM>

    Date: Thursday, 18 April 1985, 14:41-EST
    From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>

	Date: Thursday, 18 April 1985, 10:40-EST
	From: Robert O. Mathews <rom at SCRC-YUKON>

	The section "Symbols Added to or Removed from GLOBAL in Release 6.0", in
	the Release 6.0 Release Notes, contains a complete list of all symbols
	added to GLOBAL.  PARSE-FERROR is among them.

    Yow!!  Real information.  I thought I typed in 'DBG:PARSE-FERROR and it
    said SYS:PARSE-FERROR, leading me to believe it wasn't in GLOBAL.

PARSE-ERROR is in SYS (as well as TIME, ZWEI, and SAGE).
18-Apr-85 16:07:48-EST,1845;000000000000
Received: from 24620 by MIT-OZ via Chaosnet; 18 Apr 85 16:07-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 217308; Thu 18-Apr-85 16:03:10-EST
Date: Thursday, 18 April 1985, 16:03-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: what sources do I want?
To: David Chapman <Zvona at OZ>, Bug-Lispm at OZ
In-Reply-To: <850417210810.1.ZVONA@LENNON.MIT>
Message-ID: <850418160331.8.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Wednesday, 17 April 1985, 21:08-EST
    From: David Chapman <Zvona at OZ>

    Today, compiler:compile-file, to see exactly how it defaults its
    pathname arguments.  Guess I'll disassemble it and read the object
    instead.
It's included below (it's not exactly pretty).  I've made my opinion
known that the containing source file (l-compiler;compile-file) should
be shipped.

(defun compile-file (infile &optional outfile in-package dont-set-default-p
			    &aux pathname generic-pathname)
  (setq pathname (fs:parse-pathname infile nil fs:load-pathname-defaults))
  (with-open-file-search (input-stream ('compile-file fs:load-pathname-defaults t)
				       (fs:load-type-list pathname))
    ;; Default the specified input and output file names.  Open files.
    ;; The input pathname might have been changed by the user in response to an error
    (setq pathname (send input-stream ':pathname))
    (unless dont-set-default-p
      (fs:set-default-pathname pathname fs:load-pathname-defaults))
    (setq generic-pathname (send pathname ':generic-pathname))
    (setq outfile (if outfile
		      (fs:merge-pathnames
			outfile
			(send pathname ':new-canonical-type lbin:*default-binary-file-type*))
		      (send pathname ':new-pathname
			    ':canonical-type lbin:*default-binary-file-type*
			    ':version ':newest)))
18-Apr-85 16:14:09-EST,11880;000000000000
Received: from 24620 by MIT-OZ via Chaosnet; 18 Apr 85 16:13-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 217294; Thu 18-Apr-85 15:57:04-EST
Date: Thursday, 18 April 1985, 15:57-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: OK, this looks like fun
To: David Chapman <Zvona at OZ>, BUG-LISPM at OZ
In-Reply-To: <850417201019.1.ZVONA@LENNON.MIT>
Message-ID: <850418155723.6.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Wednesday, 17 April 1985, 20:10-EST
    From: David Chapman <Zvona at OZ>

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 8.2,
    microcode TMC5-MIC 319, on Lisp Machine John Lennon:

    I got completely at random the error reported by the FERROR about 20
    frames through this.  It printed out the error and then without
    provocation got this trap.  Then when I was typing this in it got
    another completely off-the wall error, an unknown catch tag of some
    sort.

    Hardware?  Bad band?

This is the clincher:
    FERROR:  (P.C. = 23)
       Arg 0 (FORMAT-STRING): "Bad fault type ~A on non-resident virtual address ~O"
       Rest arg (FORMAT-ARGS): (SYS:%PAGE-WRITE-FAULT 533060)

    SYS:WIRED-FERROR-1:  (P.C. = 56)

    STACK-GROUP-RESUME:  (P.C. = 7)
       Arg 0 (SG): #<STACK-GROUP Scheduler 56143351>
       Arg 1 (VALUE): #<STACK-GROUP Lisp Listener 1 10570>

    SI:MAYBE-PREEMPT-CURRENT-PROCESS:  (P.C. = 22)
While inside the stack group switch, the storage system barfed.  I would
expect hardware, possibly the TMC, but that's just a guess.  The error
at the top of the stack is probably trying to tell you it can't resume
the stack group because it is locked, but things are so messed up by now
it fails.  Now why you got a sys:%page-write-fault for a non-resident
page is beyond me.  I don't recall ever seeing one before, and the
storage system's state at the time of error is unfortunately lost when
it signals the error on the regular stack.

    >>Trap: The <<Error printing report>>
    While in the function STACK-GROUP-RESUME  PROCESS-WAIT  TV:KBD-IO-BUFFER-INPUT-WAIT

    STACK-GROUP-RESUME:  (P.C. = 7)
       Arg 0 (SG): #<STACK-GROUP Scheduler 56143351>
       Arg 1 (VALUE): #<STACK-GROUP Lisp Listener 1 10570>

    PROCESS-WAIT:  (P.C. = 107)
       Arg 0 (WHOSTATE): "Tyi"
       Arg 1 (FUNCTION): #<DTP-COMPILED-FUNCTION (:INTERNAL TV:KBD-IO-BUFFER-INPUT-WAIT 0) 22405612>
       Rest arg (ARGUMENTS): (#<IO-BUFFER 120673433: empty, State: NIL> NIL NIL)

    TV:KBD-IO-BUFFER-INPUT-WAIT:  (P.C. = 34)
       Arg 0 (BUFFER): #<IO-BUFFER 120673433: empty, State: NIL>
       Arg 1 (WHOSTATE): NIL
       --Defaulted args:--
       Arg 2 (FUNCTION): NIL
       Rest arg (ARGUMENTS): NIL

    TV:KBD-IO-BUFFER-GET:  (P.C. = 135)
       Arg 0 (BUFFER): #<IO-BUFFER 120673433: empty, State: NIL>
       --Defaulted args:--
       Arg 1 (NO-HANG-P): NIL
       Arg 2 (WHOSTATE): NIL

    (:METHOD TV:STREAM-MIXIN :ANY-TYI):  (P.C. = 17)
       Arg 0 (SELF): #<LISP-LISTENER Lisp Listener 1 43200216 exposed>
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:STREAM-MIXIN -- 1. IV's, 0. FL's 104234251>
       Arg 2 (OPERATION): :ANY-TYI

    (:INTERNAL (:METHOD TV:WINDOW :COMBINED :ANY-TYI) 0):  (P.C. = 11)
       Arg 0 (SELF): #<LISP-LISTENER Lisp Listener 1 43200216 exposed>
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:WINDOW -- 0. IV's, 12. FL's 104234270>
       Arg 2 (.OPERATION.): :ANY-TYI
       Rest arg (.DAEMON-CALLER-ARGS.): NIL

    (:METHOD SI:INTERACTIVE-STREAM :WHOPPER :ANY-TYI):  (P.C. = 115)
       Arg 0 (SELF): #<LISP-LISTENER Lisp Listener 1 43200216 exposed>
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:INTERACTIVE-STREAM -- 20. IV's, 2. FL's 104234231>
       Arg 2 (.WHOPPER-CONTINUATION.): #<DTP-COMPILED-FUNCTION (:INTERNAL (:METHOD TV:WINDOW :COMBINED :ANY-TYI) 0) 31301556>
       Arg 3 (.OLD-SELF-MAPPING-TABLE.): #<Map to flavor TV:WINDOW -- 0. IV's, 12. FL's 104234270>
       Arg 4 (.OPERATION.): :ANY-TYI
       --Defaulted args:--
       Arg 5 (EOF): NIL

    (:METHOD TV:WINDOW :COMBINED :ANY-TYI):  (P.C. = 13)
       Arg 0 (SELF): #<LISP-LISTENER Lisp Listener 1 43200216 exposed>
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:WINDOW -- 0. IV's, 12. FL's 104234270>
       Arg 2 (.OPERATION.): :ANY-TYI
       Rest arg (.DAEMON-CALLER-ARGS.): NIL

    DBG:COMMAND-LOOP-READ:  (P.C. = 7)

    DBG:COMMAND-LOOP:  (P.C. = 250)

    DBG:DEBUGGER-TOP-LEVEL:  (P.C. = 540)
       Arg 0: #<FERROR 5112504>
       Arg 1: #<DTP-LOCATIVE 501057>
       Arg 2: NIL
       Arg 3 (SPECIAL-COMMANDS): NIL

    DBG:ENTER-DEBUGGER:  (P.C. = 16)
       Arg 0 (ERROR): #<FERROR 5112504>
       --Defaulted args:--
       Arg 1 (REASON): NIL
       Arg 2 (SPECIAL-COMMANDS): NIL

    DBG:DEBUGGER-HANDLER-HANDLE-CONDITION:  (P.C. = 7)
       Arg 0 (IGNORE): :HANDLE-CONDITION
       Arg 1 (COND): #<FERROR 5112504>
       Arg 2 (IGNORE): #<DTP-LOCATIVE 57100001>

    DBG:DEBUGGER-HANDLER:  (P.C. = 12)
       Arg 0 (OPERATION): :HANDLE-CONDITION
       Rest arg (SELECT-METHOD-ARGS): (#<FERROR 5112504> #<DTP-LOCATIVE 57100001>)

    (:METHOD CONDITION :SIGNAL):  (P.C. = 114)
       Arg 0 (SELF): #<FERROR 5112504>
       Arg 1 (SELF-MAPPING-TABLE): CONDITION
       Arg 2 (OPERATION): :SIGNAL
       --Defaulted args:--
       Arg 3 (PROCEEDABLY): NIL

    (:METHOD CONDITION :COMBINED :SIGNAL):  (P.C. = 17)
       Arg 0 (SELF): #<FERROR 5112504>
       Arg 1 (SELF-MAPPING-TABLE): CONDITION
       Arg 2 (.OPERATION.): :SIGNAL
       Rest arg (.DAEMON-CALLER-ARGS.): NIL

    ERROR:  (P.C. = 55)
       Arg 0 (FLAVOR): FERROR
       Rest arg (INIT-OPTIONS): (:FORMAT-STRING "Bad fault type ~A on non-resident virtual address ~O" :FORMAT-ARGS (SYS:%PAGE-WRITE-FAULT 533060))

    FERROR:  (P.C. = 23)
       Arg 0 (FORMAT-STRING): "Bad fault type ~A on non-resident virtual address ~O"
       Rest arg (FORMAT-ARGS): (SYS:%PAGE-WRITE-FAULT 533060)

    SYS:WIRED-FERROR-1:  (P.C. = 56)

    STACK-GROUP-RESUME:  (P.C. = 7)
       Arg 0 (SG): #<STACK-GROUP Scheduler 56143351>
       Arg 1 (VALUE): #<STACK-GROUP Lisp Listener 1 10570>

    SI:MAYBE-PREEMPT-CURRENT-PROCESS:  (P.C. = 22)

    (:METHOD FS:LOGICAL-HOST :TRANSLATE):  (P.C. = 0)
       Arg 0 (SELF): #<LOGICAL-HOST SYS>
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:LOGICAL-HOST -- 9. IV's, 2. FL's 104227142>
       Arg 2 (OPERATION): :TRANSLATE
       Local 2 (OPERATION): #<DTP-EVEN-PC 10542>
       Arg 3 (PATHNAME): #<LOGICAL-PATHNAME "SYS: LMLIB; ZVAL">
       Local 3 (PATHNAME): #<DTP-COMPILED-FUNCTION SI:MAYBE-PREEMPT-CURRENT-PROCESS 2101410>

    (:METHOD FS:LOGICAL-PATHNAME :TRANSLATED-PATHNAME):  (P.C. = 67)
       Arg 0 (SELF): #<LOGICAL-PATHNAME "SYS: LMLIB; ZVAL">
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:LOGICAL-PATHNAME -- 8. IV's, 3. FL's 104206646>
       Arg 2 (OPERATION): :TRANSLATED-PATHNAME

    (:DEFUN-METHOD FS:LOGICAL-PATHNAME-PASS-ON):  (P.C. = 5)
       Arg 0 (SELF): #<LOGICAL-PATHNAME "SYS: LMLIB; ZVAL">
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:LOGICAL-PATHNAME -- 8. IV's, 3. FL's 104206646>
       Arg 2 (MESSAGE): :PUTPROP
       Rest arg (REST): (#<SYSTEM ZVONA 5112441> :SYSTEM)

    (:METHOD FS:LOGICAL-PATHNAME :PUTPROP):  (P.C. = 10)
       Arg 0 (SELF): #<LOGICAL-PATHNAME "SYS: LMLIB; ZVAL">
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:LOGICAL-PATHNAME -- 8. IV's, 3. FL's 104206646>
       Arg 2 (OPERATION): :PUTPROP
       Rest arg (.ARGS.): (#<SYSTEM ZVONA 5112441> :SYSTEM)

    SI:ADD-PATHNAME-TO-SYSTEM:  (P.C. = 14)
       Arg 0 (PATHNAME): "sys:lmlib;zval"
       Local 0 (PATHNAME): #<LOGICAL-PATHNAME "SYS: LMLIB; ZVAL.LISP.NEWEST">
       Arg 1 (SYSTEM): #<SYSTEM ZVONA 5112441>
       --Defaulted args:--
       Arg 2 (DEFAULT): NIL

    SI:PARSE-MODULE-COMPONENTS:  (P.C. = 106)
       Arg 0 (COMPONENTS): ("sys:lmlib;zval")
       Arg 1 (SYSTEM): #<SYSTEM ZVONA 5112441>

    SI:ADD-MODULE:  (P.C. = 22)
       Arg 0 (NAME): #:G0261
       Arg 1 (SYSTEM): #<SYSTEM ZVONA 5112441>
       Arg 2 (COMPONENTS): ("sys:lmlib;zval")
       --Defaulted args:--
       Arg 3 (PLIST): NIL

    SI:PARSE-TRANSFORMATION:  (P.C. = 51)
       Arg 0 (NAME): :FASLOAD
       Arg 1 (INPUT): ("sys:lmlib;zval")
       Arg 2 (DEPENDENCIES): NIL
       Arg 3 (CONDITION): SI:FILE-NEWER-THAN-INSTALLED-P

    (:PROPERTY :FASLOAD SI:DEFSYSTEM-MACRO):  (P.C. = 40)
       Arg 0 (.FORM.): (:FASLOAD ("sys:lmlib;zval"))
       Arg 1 (.ENV.): NIL

    SI:CALL-DEFSYSTEM-MACRO:  (P.C. = 34)
       Arg 0 (FORM): (:FASLOAD ("sys:lmlib;zval"))

    SI:DEFSYSTEM-1:  (P.C. = 57)
       Arg 0 (NAME): ZVONA
       Arg 1 (OPTIONS): ((:FASLOAD ("sys:lmlib;zval")))
       --Defaulted args:--
       Arg 2 (ADD-P): T

    SI:*EVAL:  (P.C. = 403)
       Arg 0 (FORM): (SI:DEFSYSTEM-1 (QUOTE ZVONA) (QUOTE ((:FASLOAD **))))
       Local 0 (FORM): NIL
       --Defaulted args:--
       Arg 1 (ENV): NIL
       Arg 2 (HOOK): NIL

    SI:LOAD-BIN-OP-FORM:  (P.C. = 4)
       Arg 0 (STREAM): #<FILE-INPUT-BINARY-STREAM "PIG:USRD$:[ZVONA]LISPMINI.BIN" 27700325>

    SI:BIN-LOAD-NEXT-COMMAND:  (P.C. = 24)
       Arg 0 (STREAM): #<FILE-INPUT-BINARY-STREAM "PIG:USRD$:[ZVONA]LISPMINI.BIN" 27700325>

    SI:BIN-LOAD-TOP-LEVEL:  (P.C. = 6)
       Arg 0 (STREAM): #<FILE-INPUT-BINARY-STREAM "PIG:USRD$:[ZVONA]LISPMINI.BIN" 27700325>

    (:METHOD ZWEI:MAJOR-MODE :DEFAULT :LOAD-BINARY-FILE):  (P.C. = 4)
       Arg 0 (SELF): #<LISP-MODE 120576060>
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:MAJOR-MODE -- 1. IV's, 1. FL's 142357032>
       Arg 2 (OPERATION): :LOAD-BINARY-FILE
       Arg 3 (IGNORE): #<DTP-LOCATIVE 31255710>
       Arg 4 (STREAM): #<FILE-INPUT-BINARY-STREAM "PIG:USRD$:[ZVONA]LISPMINI.BIN" 27700325>

    SI:BIN-LOAD-FILE-INTERNAL:  (P.C. = 147)
       Arg 0 (STREAM): #<FILE-INPUT-BINARY-STREAM "PIG:USRD$:[ZVONA]LISPMINI.BIN" 27700325>
       Arg 1 (INTO-PACKAGE): NIL
       Arg 2 (NO-MSG-P): NIL

    FS:LOAD-STREAM:  (P.C. = 16)
       Arg 0 (STREAM): #<FILE-INPUT-BINARY-STREAM "PIG:USRD$:[ZVONA]LISPMINI.BIN" 27700325>
       --Defaulted args:--
       Arg 1 (PKG): NIL
       Arg 2 (NO-MSG-P): NIL

    LOGIN:  (P.C. = 604)
       Arg 0 (USER-NAME): "zvona"
       Local 0 (USER-NAME): "zvona"
       Rest arg: (:HOST NIL :LOAD-INIT-FILE T)

    (:PROPERTY SI:COM-LOGIN SI:CP-FUNCTION):  (P.C. = 22)
       Arg 0 (USER): "zvona"
       Arg 1 (HOST): NIL
       Arg 2 (INIT-FILE): :DEFAULT-INIT-FILE

    SI:COM-LOGIN:  (P.C. = 24)
       Arg 0 (USER): "zvona"
       Rest arg: NIL

    SI:*EVAL:  (P.C. = 403)
       Arg 0 (FORM): (SI:COM-LOGIN "zvona")
       Local 0 (FORM): NIL
       --Defaulted args:--
       Arg 1 (ENV): NIL
       Arg 2 (HOOK): NIL

    (:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0):  (P.C. = 152)
       Arg 0 (.LEXICAL-ENVIRONMENT-POINTER.): #<DTP-LOCATIVE 500047>

    TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
       Arg 0 (NEW-MODE): :BLAST
       Arg 1 (STREAM): #:TERMINAL-IO-SYN-STREAM
       Arg 2 (CONTINUATION): #<LEXICAL-CLOSURE (:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0) 500054>

    SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
       Arg 0 (NAME): "Lisp Top Level"
       Arg 1 (ABORT-FUNCTION): NIL
       Arg 2 (READ-FUNCTION): NIL
       Arg 3 (EVAL-FUNCTION): NIL
       Arg 4 (PRINT-FUNCTION): NIL

    SI:LISP-COMMAND-LOOP:  (P.C. = 67)
       Arg 0: #<LISP-LISTENER Lisp Listener 1 43200216 exposed>
       Rest arg: (:NAME "Lisp Top Level")

    SI:LISP-TOP-LEVEL1:  (P.C. = 5)
       Arg 0 (STREAM): #<LISP-LISTENER Lisp Listener 1 43200216 exposed>

    SI:LISP-TOP-LEVEL:  (P.C. = 7)
18-Apr-85 16:18:05-EST,870;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 18 Apr 85 16:15-EST
Received: from MIT-SPEECH by MIT-MC via Chaosnet; 18 APR 85  16:15:43 EST
Date: 18 Apr 1985  16:14 EST (Thu)
Message-ID: <SR.EHPYC.12104207007.BABYL@MIT-SPEECH>
From: Scott Cyphers <SR.EHPYC@MIT-SPEECH>
To:   Joseph R Goldstone <joseph@SCRC-QUABBIN>
Cc:   BUG-LISPM@MIT-MC, GAVAN@OZ, Hornig@SCRC-STONY-BROOK
Subject: Lossage due to ridiculous source withholding policy
In-reply-to: Msg of 18 Apr 1985 15:53-EST from Joseph R Goldstone <joseph at SCRC-QUABBIN>

True, but for other sites (or locations), they probably also should
reorder the sites to optimize network costs (which is why I put Zoo at
the end).  In fact, for Tweety (in MIT site) Zoo should probably be
first since it doesn't make sense for them to send mail acorss the
street only to have it sent back again half the time.
18-Apr-85 16:28:08-EST,982;000000000000
Received: from 24620 by MIT-OZ via Chaosnet; 18 Apr 85 16:25-EST
Received: from SCRC-CROW by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 217332; Thu 18-Apr-85 16:19:42-EST
Date: Thursday, 18 April 1985, 16:19-EST
From: Robert W. Kerns <RWK at SCRC-YUKON>
Subject: 20X logical devices?
To: David Chapman <Zvona at OZ>
cc: BUG-LISPM at OZ
In-Reply-To: <850405180323.7.ZVONA@DUANE.MIT.EDU>
Message-ID: <850418161917.9.RWK@CROW.SCRC.Symbolics.COM>

    Date: Friday, 5 April 1985, 18:03-EST
    From: David Chapman <Zvona at OZ>

    In Symbolics 3670 Release 6.0, IP-TCP 29.0, AISite 7.8,
    microcode TMC5-IO4-MIC 319, FEP 22, on Lisp Machine Duane Allman:

    Wasn't rel 6 supposed to support 20X logical devices?  
No.  Someone may, at some time or another, have said we'd consider it.
It's far from easy, and would require a fair bit of support on the
20X end as well.  I have my doubts it will ever be done.
							   They don't seem
    to work for me.
18-Apr-85 16:31:02-EST,1080;000000000000
Received: from 24620 by MIT-OZ via Chaosnet; 18 Apr 85 16:30-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 217336; Thu 18-Apr-85 16:24:39-EST
Date: Thursday, 18 April 1985, 16:24-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: Re: Whole directory missing.
To: MLY at OZ, bug-lispm at OZ
In-Reply-To: The message of 18 Apr 85 01:38-EST from mly
Message-ID: <850418162458.2.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Thu 18 Apr 85 01:38:48-EST
    From: mly

	Date: Wednesday, 17 April 1985, 12:59-EST
	From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>

	I'll guess that all of the L-SYSTEM-INTERNALS subsystem sources got
	restricted.  My current opinion is that the files SYSDEF and SYSDF1
	should be carefully split into four files, two of which can be
	unrestricted.

    Gosh, does this mean that %%q-pointer is sensitive information??

Look folks, I'm trying to be constructive.  This kind of response is not
at all constructive and isn't going to help unrestricting various
sources.
18-Apr-85 16:41:45-EST,2277;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 18 Apr 85 16:41-EST
Received: from 40700024620 by MIT-MC via Chaosnet; 18 APR 85  16:41:45 EST
Received: from SCRC-HARLEM by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 217289; Thu 18-Apr-85 15:53:40-EST
Date: Thu, 18 Apr 85 15:53 EST
From: Joseph R Goldstone <joseph@SCRC-QUABBIN.ARPA>
Subject: Lossage due to ridiculous source withholding policy
To: Scott Cyphers <sr.ehpyc%MIT-SPEECH@MIT-REAGAN.ARPA>,
    Hornig@SCRC-STONY-BROOK.ARPA, GAVAN@OZ.MIT, BUG-LISPM@MIT-MC.ARPA
In-Reply-To: <850418130932.1.CYPHER@MIT-SMOKEY.MIT>
Message-ID: <850418155351.1.JOSEPH@HARLEM.SCRC.Symbolics.COM>
Fonts: CPTFONT, CPTFONTCB

[PHW removed; I doubt he wants to wade through all this]

    Date: Thu, 18 Apr 85 13:09 EST
    From: Scott Cyphers <sr.ehpyc%MIT-SPEECH@MIT-REAGAN.ARPA>

    Try this:

    (record-source-file-name 'zwei:find-mail-services 'defun t)

    zwei:
    (defun find-mail-services ()
      (with-stack-list (net:*namespace-search-list* (send net:*local-site* ':local-namespace))
	(neti:keeping-namespace-server
	  (append
	    (with-stack-list (this-site ':site net:*local-site*)
	      (net:find-paths-to-service ':store-and-forward-mail this-site))
	    (with-stack-list (ai-site :site (neti:find-object-named :site :mit))
	      (net:find-paths-to-service ':store-and-forward-mail ai-site))
	    (with-stack-list (mit-site :site (neti:find-object-named :site :zoo))
	      (net:find-paths-to-service ':store-and-forward-mail mit-site))))))

Reasonable, but I'd suggest making that first argument to APPEND be

	    (with-stack-list (this-site ':site 1(neti:find-object-named :site :ai)
0	      (net:find-paths-to-service ':store-and-forward-mail this-site))

since this thing is bound to spread into the init files of people at MIT sites
other than AI.  Isn't there an ML site too?  Do they run a Mailer that they'd
be willing to share?

    The APPEND could probably be an NCONC, but I didn't want to depend on
    the implementation of NET:FIND-PATHS-TO-SERVICE not doing something
    funny.  We've been using this for probably close to a year now in the
    Zoo site, since there were no store and forward mail servers here until
    I made Goldy one last week.
18-Apr-85 16:42:17-EST,3957;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 18 Apr 85 16:41-EST
Received: from SCRC-QUABBIN by MIT-MC via Chaosnet; 18 APR 85  16:41:44 EST
Received: from SCRC-NEPONSET by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 154980; Thu 18-Apr-85 15:18:21-EST
Date: Thu, 18 Apr 85 15:18 EST
From: David C. Plummer in disguise <DCP@SCRC-QUABBIN.ARPA>
Subject: Compiler bug?  How the hell should I know?
To: Gavan Duffy <GAVAN@OZ.MIT>, BUG-LISPM@MIT-MC.ARPA
In-Reply-To: <850417170108.4.GAVAN@MORRISON.MIT>
Message-ID: <850418151851.5.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Wed, 17 Apr 85 17:01 EST
    From: Gavan Duffy <GAVAN@OZ.MIT>

    ;In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 8.2,
    ;microcode TMC5-MIC 319, FEP 22, on Lisp Machine Jim Morrison:
    ;
    ;I load the following macro which expands into the defun
    ;(SELECT-WEBSTER-FIELD-TYPE) that follows it.  Unfortunately, on compilation of
    ;the SELECT-WEBSTER-FIELD-TYPE, the compiler complains that an OR is unbound.
    ;OK.  But it's a lie.  The OR isn't unbound.  I redefined
    ;SELECT-WEBSTER-FIELD-TYPE so that it just does what the SELECT-CHAR macro
    ;expands into (see below).  That compiles and evaluates just fine.  What gives?
    ;
    ;Of course, I could look into this myself IF THERE WERE ANY SOURCES FOR THE
    ;COMPILER!!!!!

You're lucky I'm replying to this as I am.  This isn't a compiler bug.
You wouldn't have found it with the compiler sources.  I didn't find it
using the compiler sources.  I found it by reading YOUR code and noting
POOR programming techniques and testing them.  I then looked at the
definition of SELECTQ (which you can get from the Rel5 tape if you don't
have it).  The problem is that you are using RPLACA all over the place
and this code is NOT coded like SELECTQ.  Observe:

(setq foo '(SELECT-CHAR PREVIOUS-CHAR
	     ((#/D #/d) ':DEFINITION)
	     ((#/S #/s) ':SYNONYM)
	     ((#/F #/f) ':FIRST)
	     ((#/P #/p) ':PRONUNCIATION)
	     ((#/E #/e) ':ETYMOLOGY)
	     ((#/L #/l) ':LABEL)
	     ((#/V #/v) ':VARIANT)
	     ((#/R #/r) ':RUNON)
	     ((#/X #/x) ':CROSS-REFERENCE)
	     ((#/C #/c) ':CONTINUATION)
	     (OTHERWISE NIL)))
(macroexpand foo)
(grind-top-level foo)
 => (SELECT-CHAR PREVIOUS-CHAR
      ((OR (CHAR-EQUAL PREVIOUS-CHAR 104)
	   (CHAR-EQUAL PREVIOUS-CHAR 144))
       ':DEFINITION)
      ((OR (CHAR-EQUAL PREVIOUS-CHAR 123)
	   (CHAR-EQUAL PREVIOUS-CHAR 163))
       ':SYNONYM)
      ((OR (CHAR-EQUAL PREVIOUS-CHAR 106)
	   (CHAR-EQUAL PREVIOUS-CHAR 146))
       ':FIRST)
      ((OR (CHAR-EQUAL PREVIOUS-CHAR 120)
	   (CHAR-EQUAL PREVIOUS-CHAR 160))
       ':PRONUNCIATION)
      ((OR (CHAR-EQUAL PREVIOUS-CHAR 105)
	   (CHAR-EQUAL PREVIOUS-CHAR 145))
       ':ETYMOLOGY)
      ((OR (CHAR-EQUAL PREVIOUS-CHAR 114)
	   (CHAR-EQUAL PREVIOUS-CHAR 154))
       ':LABEL)
      ((OR (CHAR-EQUAL PREVIOUS-CHAR 126)
	   (CHAR-EQUAL PREVIOUS-CHAR 166))
       ':VARIANT)
      ((OR (CHAR-EQUAL PREVIOUS-CHAR 122)
	   (CHAR-EQUAL PREVIOUS-CHAR 162))
       ':RUNON)
      ((OR (CHAR-EQUAL PREVIOUS-CHAR 130)
	   (CHAR-EQUAL PREVIOUS-CHAR 170))
       ':CROSS-REFERENCE)
      ((OR (CHAR-EQUAL PREVIOUS-CHAR 103)
	   (CHAR-EQUAL PREVIOUS-CHAR 143))
       ':CONTINUATION)
      (T NIL)) 
OR looks pretty unbound to me.  You aren't allowed to depend on macros
getting expanded more than once.  I can't imagine the few extra conses
that writing the macro correctly would cause is worth the convoluted
(and semantically incorrect) coding style.

    ;If it's a problem with the code, blame JCMa, not me.  Anyway, I suspect that
    ;the too-valuable to-release-the-sources-to compiler is losing.

I'm blaming you anyway.  Not only was your suspicion wrong, but your
derogatory tone is worse than mine.

    ;But how the hell should I know?

Maybe next time I'll answer "The bug is in your code.  You don't need
the sources."
18-Apr-85 16:42:49-EST,4455;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 18 Apr 85 16:42-EST
Received: from 40700024620 by MIT-MC via Chaosnet; 18 APR 85  16:41:39 EST
Received: from SCRC-PEACE by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 216967; Thu 18-Apr-85 12:57:43-EST
Date: Thu, 18 Apr 85 12:58 EST
From: Charles Hornig <Hornig@STONY-BROOK.SCRC.Symbolics.COM>
Subject: Compiler bug?  How the hell should I know?
To: Gavan Duffy <GAVAN@OZ>, BUG-LISPM@MIT-MC
In-Reply-To: <850417170108.4.GAVAN@MORRISON.MIT>
Message-ID: <850418125813.8.HORNIG@PEACE.SCRC.Symbolics.COM>

    Date: Wed, 17 Apr 85 17:01 EST
    From: Gavan Duffy <GAVAN@OZ.MIT>

    ;In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 8.2,
    ;microcode TMC5-MIC 319, FEP 22, on Lisp Machine Jim Morrison:
    ;
    ;I load the following macro which expands into the defun
    ;(SELECT-WEBSTER-FIELD-TYPE) that follows it.  Unfortunately, on compilation of
    ;the SELECT-WEBSTER-FIELD-TYPE, the compiler complains that an OR is unbound.
    ;OK.  But it's a lie.  The OR isn't unbound.  I redefined
    ;SELECT-WEBSTER-FIELD-TYPE so that it just does what the SELECT-CHAR macro
    ;expands into (see below).  That compiles and evaluates just fine.  What gives?
    ;
    ;Of course, I could look into this myself IF THERE WERE ANY SOURCES FOR THE
    ;COMPILER!!!!!

The problem has nothing to do with the compiler.  The SELECT-CHAR macro
given below destroys the internal structure of its BODY argument (see
the RPLACA's).  I don't think the compiler can be blamed for becoming
confused when macros are RPLACA'ing its forms while it is trying to
compile them.

    (DEFMACRO SELECT-CHAR (CHAR &BODY BODY)
      "Similar to SELECTQ except that CHAR-EQUAL is used for the comparison,
    e.g.:   (SELECT-CHAR CHAR
	       ((CHAR1 CHAR2 ...) <forms>)
	       ((CHAR1)           <forms>)
	       (CHAR1             <forms>)
	       (OTHERWISE         <forms>))"
      (ONCE-ONLY (CHAR)
	(LOOP WITH RESULT
	      FOR ITEM IN BODY
	      WHEN (LISTP (FIRST ITEM))
	      DO (LOOP WITH TEST-CLAUSE
		       FOR TCHAR IN (FIRST ITEM)
		       DO (PUSH `(CHAR-EQUAL ,CHAR ,TCHAR) TEST-CLAUSE)
		       FINALLY (PROGN (SETQ TEST-CLAUSE (NREVERSE TEST-CLAUSE))
				      (COND ((> (LENGTH TEST-CLAUSE) 1.)
					     (PUSH 'OR TEST-CLAUSE)
					     (RPLACA ITEM TEST-CLAUSE))
					    (T (RPLACA ITEM (FIRST TEST-CLAUSE))))
				      (PUSH ITEM RESULT)))
	      ELSE
	      DO (PROGN
		   (COND ((EQ (FIRST ITEM) 'OTHERWISE) (RPLACA ITEM T))
			 ((NUMBERP (FIRST ITEM))
			  (LET ((R `(CHAR-EQUAL ,CHAR ,(FIRST ITEM))))
			    (RPLACA ITEM R))))
		   (PUSH ITEM RESULT))
	      FINALLY (RETURN (CONS 'COND (NREVERSE RESULT))))))

    (DEFUN SELECT-WEBSTER-FIELD-TYPE (PREVIOUS-CHAR)
      (SELECT-CHAR PREVIOUS-CHAR
	((#/D #/d) ':DEFINITION)
	((#/S #/s) ':SYNONYM)
	((#/F #/f) ':FIRST)
	((#/P #/p) ':PRONUNCIATION)
	((#/E #/e) ':ETYMOLOGY)
	((#/L #/l) ':LABEL)
	((#/V #/v) ':VARIANT)
	((#/R #/r) ':RUNON)
	((#/X #/x) ':CROSS-REFERENCE)
	((#/C #/c) ':CONTINUATION)
	(OTHERWISE NIL)))


    ;Here's what the defun looks like when you just use the macro expansion.  It
    ;compiles just nifty.  


    (DEFUN SELECT-WEBSTER-FIELD-TYPE (PREVIOUS-CHAR)
      (COND ((OR (CHAR-EQUAL PREVIOUS-CHAR 68)
		 (CHAR-EQUAL PREVIOUS-CHAR 100))
	     ':DEFINITION)
	    ((OR (CHAR-EQUAL PREVIOUS-CHAR 83)
		 (CHAR-EQUAL PREVIOUS-CHAR 115))
	     ':SYNONYM)
	    ((OR (CHAR-EQUAL PREVIOUS-CHAR 70)
		 (CHAR-EQUAL PREVIOUS-CHAR 102))
	     ':FIRST)
	    ((OR (CHAR-EQUAL PREVIOUS-CHAR 80)
		 (CHAR-EQUAL PREVIOUS-CHAR 112))
	     ':PRONUNCIATION)
	    ((OR (CHAR-EQUAL PREVIOUS-CHAR 69)
		 (CHAR-EQUAL PREVIOUS-CHAR 101))
	     ':ETYMOLOGY)
	    ((OR (CHAR-EQUAL PREVIOUS-CHAR 76)
		 (CHAR-EQUAL PREVIOUS-CHAR 108))
	     ':LABEL)
	    ((OR (CHAR-EQUAL PREVIOUS-CHAR 86)
		 (CHAR-EQUAL PREVIOUS-CHAR 118))
	     ':VARIANT)
	    ((OR (CHAR-EQUAL PREVIOUS-CHAR 82)
		 (CHAR-EQUAL PREVIOUS-CHAR 114))
	     ':RUNON)
	    ((OR (CHAR-EQUAL PREVIOUS-CHAR 88)
		 (CHAR-EQUAL PREVIOUS-CHAR 120))
	     ':CROSS-REFERENCE)
	    ((OR (CHAR-EQUAL PREVIOUS-CHAR 67)
		 (CHAR-EQUAL PREVIOUS-CHAR 99))
	     ':CONTINUATION)
	    (T NIL)))


    ;If it's a problem with the code, blame JCMa, not me.  Anyway, I suspect that
    ;the too-valuable to-release-the-sources-to compiler is losing.

    ;But how the hell should I know?
18-Apr-85 17:51:50-EST,4495;000000000000
Received: from MIT-JIMI by MIT-OZ via Chaosnet; 18 Apr 85 17:45-EST
Date: Thursday, 18 April 1985, 17:45-EST
From: David M. J. Saslav <saz at OZ>
Subject: can't save or write out file
To: BUG-LISPM at OZ
Message-ID: <850418174538.3.SAZ@JIMI.MIT>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 8.2,
microcode TMC5-MIC 319, on Lisp Machine Jimi Hendrix:

I had just done a Source Compare Merge into a fresh buffer, and ^X^W'ed
that buffer, specifying a generation number one greater than the higher
of the two sources (ie, foo.lisp.34 merged with foo.lisp.35 into buffer
bar got written out to be foo.lisp.36 explicitly).  Then I try to save
foo.lisp.36 (expecting foo.lisp.37), and get this.

Earlier I'd used tcp to rename some files across machines (pig to oz)
and across subdirs, too.

Obviously I don't know whether either of the above had anything to do with
this error.

saz

>>Error: Write or owner access to destination file required
         For OZ:OZ:<SAZ.MODES>SCALE-ARRAYS.LISP.41
While in the function (:METHOD FS:HOST-UNIT :COMMAND)  (:METHOD FS:FILE-DATA-STREAM-MIXIN :COMMAND)  (:METHOD FS:FILE-OUTPUT-STREAM-MIXIN :REAL-CLOSE)

(:METHOD FS:HOST-UNIT :COMMAND):  (P.C. = 236)
   Arg 0 (SELF): #<HOST-UNIT 30153300>
   Arg 1 (SELF-MAPPING-TABLE): FS:HOST-UNIT
   Arg 2 (OPERATION): :COMMAND
   Arg 3 (MARK-P): :OUTPUT
   Arg 4 (STREAM-OR-HANDLE): #<FILE-OUTPUT-CHARACTER-STREAM "OZ:OZ:<SAZ.MODES>SCALE-ARRAYS.LISP.41" 12721273>
   Arg 5 (SIMPLE-P): NIL
   Arg 6 (WHOSTATE): "Close"
   Rest arg (COMMANDS): ("CLOSE")
   Local 8 (HANDLE): "O2476"
   Local 9 (STREAM): #<FILE-OUTPUT-CHARACTER-STREAM "OZ:OZ:<SAZ.MODES>SCALE-ARRAYS.LISP.41" 12721273>
   Local 10 (PKT): #<Chaos Packet 11303145>
   Local 11 (SUCCESS): NIL
   Local 12 (STRING): "O2476 ERROR ATF F Write or owner access to destination file required"
   Local 13 (TRANSACTION-ID): "T2707"
   Local 14 (CREATE-P): NIL
   Local 15 (CONDITION): NIL
   Local 16: T
   Local 17: #<CASE-HANDLER 120711625>
   Local 18: (#<LEXICAL-CLOSURE (:INTERNAL ** 0) 43440054>)
   Local 19: (#<CASE-HANDLER 120711625> #<LEXICAL-CLOSURE (:INTERNAL ** 0) 43440054>)

(:METHOD FS:FILE-DATA-STREAM-MIXIN :COMMAND):  (P.C. = 14)
   Arg 0 (SELF): #<FILE-OUTPUT-CHARACTER-STREAM "OZ:OZ:<SAZ.MODES>SCALE-ARRAYS.LISP.41" 12721273>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:FILE-DATA-STREAM-MIXIN -- 6. IV's, 0. FL's 104532157>
   Arg 2 (OPERATION): :COMMAND
   Arg 3 (MARK-P): :OUTPUT
   Arg 4 (WHOSTATE): "Close"
   Arg 5 (COM): "CLOSE"
   Rest arg (STRINGS): NIL

(:METHOD FS:FILE-OUTPUT-STREAM-MIXIN :REAL-CLOSE):  (P.C. = 56)
   Arg 0 (SELF): #<FILE-OUTPUT-CHARACTER-STREAM "OZ:OZ:<SAZ.MODES>SCALE-ARRAYS.LISP.41" 12721273>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:FILE-OUTPUT-STREAM-MIXIN -- 6. IV's, 1. FL's 104532117>
   Arg 2 (OPERATION): :REAL-CLOSE
   Arg 3 (ABORT-P): NIL

(:METHOD FS:FILE-DATA-STREAM-MIXIN :CLOSE):  (P.C. = 26)
   Arg 0 (SELF): #<FILE-OUTPUT-CHARACTER-STREAM "OZ:OZ:<SAZ.MODES>SCALE-ARRAYS.LISP.41" 12721273>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:FILE-DATA-STREAM-MIXIN -- 6. IV's, 0. FL's 104532157>
   Arg 2 (OPERATION): :CLOSE
   Arg 3 (ABORTP): NIL

(:METHOD FS:FILE-OUTPUT-CHARACTER-STREAM :COMBINED :CLOSE):  (P.C. = 21)
   Arg 0 (SELF): #<FILE-OUTPUT-CHARACTER-STREAM "OZ:OZ:<SAZ.MODES>SCALE-ARRAYS.LISP.41" 12721273>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:FILE-OUTPUT-CHARACTER-STREAM -- 1. IV's, 8. FL's 104532127>
   Arg 2 (.OPERATION.): :CLOSE
   Rest arg (.DAEMON-CALLER-ARGS.): (NIL)

CLOSE:  (P.C. = 6)
   Arg 0 (STREAM): #<FILE-OUTPUT-CHARACTER-STREAM "OZ:OZ:<SAZ.MODES>SCALE-ARRAYS.LISP.41" 12721273>
   --Defaulted args:--
   Arg 1 (ABORTP): NIL

(:METHOD ZWEI:FILE-BUFFER-MIXIN :SAVE):  (P.C. = 203)
   Arg 0 (SELF): #<FILE-BUFFER "SCALE-ARRAYS.LISP.41 OZ:<SAZ.MODES> OZ:" 15502362>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:FILE-BUFFER-MIXIN -- 9. IV's, 0. FL's 104512643>
   Arg 2 (OPERATION): :SAVE

ZWEI:COM-WRITE-FILE:  (P.C. = 20)

Rest of stack:
ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
ZWEI:MAKE-EXTENDED-COMMAND-INTERNAL:  (P.C. = 107)
Closure of ZWEI:MAKE-EXTENDED-COMMAND-INTERNAL:
ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 233)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 60)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 51)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
18-Apr-85 18:36:05-EST,746;000000000000
Received: from MIT-HTVAX by MIT-OZ via Chaosnet; 18 Apr 85 18:35-EST
Received: by MIT-HTVAX.ARPA (4.12/4.7) 
	id AA17385; Thu, 18 Apr 85 18:34:37 est
To: Bug-Lispm@oz
Subject: Re: Tops-20 logical devices?
In-Reply-To: Your message of Thursday, 18 April 1985, 16:19-EST.
Date: 18 Apr 85 18:34:27 EST (Thu)
From: Martin David Connor <mdc@mit-htvax>


People may already know this, but just in case:

When using Tops-20 logical devices in ZMACS, one can generally type
in a unique amount of the pathname and hit <COMPLETE> which forces
the Lispm to hand the string to Tops-20 and have it hand back an
unambiguous pathname.

This might help some people get by for now in the editor which is one
place logical names are used often.
18-Apr-85 19:18:34-EST,1454;000000000000
Received: from MIT-HTVAX by MIT-OZ via Chaosnet; 18 Apr 85 19:18-EST
Received: by MIT-HTVAX.ARPA (4.12/4.7) 
	id AA17673; Thu, 18 Apr 85 19:16:44 est
To: "David M. J. Saslav" <saz@oz>
Cc: BUG-LISPM@oz
Subject: Re: can't save or write out file
In-Reply-To: Your message of Thursday, 18 April 1985, 17:45-EST.
Date: 18 Apr 85 19:16:33 EST (Thu)
From: Martin David Connor <mdc@mit-htvax>

    Date: Thursday, 18 April 1985, 17:45-EST
    From: David M. J. Saslav <saz@OZ>

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 8.2,
    microcode TMC5-MIC 319, on Lisp Machine Jimi Hendrix:

	[....]

    >>Error: Write or owner access to destination file required
	     For OZ:OZ:<SAZ.MODES>SCALE-ARRAYS.LISP.41
      While in the function (:METHOD FS:HOST-UNIT :COMMAND)  (:METHOD
       FS:FILE-DATA-STREAM-MIXIN :COMMAND)  (:METHOD
       FS:FILE-OUTPUT-STREAM-MIXIN :REAL-CLOSE)

This is because your subdirectory protection was such that you didn't
have write permision to the subdir.  One would think that one would
have owner access to a subdir in one's own hierarchy, but not in this
case.  

I created a user group number for you by adding 24000 to your home
directory number (3461), and put both your home directory and your
subdir into that directory group, which should allow you what access
the group field of your subdirectory protection allows (i.e. 77).

Alternatively you could unprotect the subdir.

18-Apr-85 20:46:22-EST,1177;000000000000
Received: from 24620 by MIT-OZ via Chaosnet; 18 Apr 85 20:45-EST
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 217621; Thu 18-Apr-85 20:45:51-EST
Date: Thursday, 18 April 1985, 20:42-EST
From: David A. Moon <Moon at SCRC-STONY-BROOK>
Subject: I think this machine's gc hardware is broken, unless the EGC software is fuckt
To: David Chapman <Zvona at OZ>
cc: BUG-LISPM at OZ, bug-symbolics-hardware at OZ
In-Reply-To: <850417233302.6.ZVONA@LENNON.MIT>
Message-ID: <850418204252.8.MOON@EUPHRATES.SCRC.Symbolics.COM>

    Date: Wednesday, 17 April 1985, 23:33-EST
    From: David Chapman <Zvona at OZ>

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 8.2,
    microcode TMC5-MIC 319, on Lisp Machine John Lennon:

    (This is the same machine that got the funny errors a few hours ago.)
    I'm running with the EGC and not the old GC on.  The machine dropped
    into the fep with an error....

What happened when you ran the GC hardware diagnostic?  (See page 51
of the Release Notes and page 137 of the Software Installation Guide in
book 0 for details).  If you don't have those books yet, please ask for
them.
18-Apr-85 20:57:02-EST,3919;000000000000
Received: from 13063 by MIT-OZ via Chaosnet; 18 Apr 85 20:56-EST
Date: Thursday, 18 April 1985, 20:56-EST
From: David Chapman <Zvona at OZ>
Subject: logical pathnames not translated at right time, Copy File loses needlessly
To: BUG-LISPM at OZ
Message-ID: <850418205632.1.ZVONA@DUANE.MIT>

In Symbolics 3670 Release 6.0, IP-TCP 29.0, AISite 8.2,
microcode TMC5-IO4-MIC 319, FEP 22, on Lisp Machine Duane Allman:

(ddl:ddl; translates to b:>zvona>ddl>.)

m-X Copy File
ddl:ddl;macrocode.lisp
ddl:ddl;macrocode.ddl

>>Error: The fifth argument (NEW-PATHNAME) to (:METHOD FS:NFILE-ACCESS-PATH :RENAME), #<LOGICAL-PATHNAME "DDL: DDL; MACROCODE.DDL.NEWEST">, was of the wrong type.
         The function expected A pathname for this host.
While in the function (:METHOD FS:NFILE-ACCESS-PATH :RENAME)  (:METHOD
                                                                FS:ACTIVE-PATHNAME-MIXIN
                                                                :RENAME)  (:DEFUN-METHOD
                                                                            FS:LOGICAL-PATHNAME-PASS-ON)

(:METHOD FS:NFILE-ACCESS-PATH :RENAME):  (P.C. = 72)
   Arg 0 (SELF): #<LMFS-NFILE-ACCESS-PATH B using NEW-FILE 30041011>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:NFILE-ACCESS-PATH -- 4. IV's, 2. FL's 121346410>
   Arg 2 (OPERATION): :RENAME
   Arg 3 (OLD-PATHNAME): #<LMFS-PATHNAME "B:>zvona>ddl>macrocode.lisp">
   Arg 4 (NEW-PATHNAME): #<LOGICAL-PATHNAME "DDL: DDL; MACROCODE.DDL.NEWEST">
   Local 5 (RESULT): FS:NEW-PATHNAME
   Local 6 (.SERVER-VALUE.): #<LOGICAL-PATHNAME "DDL: DDL; MACROCODE.DDL.NEWEST">
   Local 7 (FROM-PATHNAME): "A pathname for this host"
   Local 8 (TO-PATHNAME): #<DTP-LOCATIVE 43440462>

(:METHOD FS:ACTIVE-PATHNAME-MIXIN :RENAME):  (P.C. = 12)
   Arg 0 (SELF): #<LMFS-PATHNAME "B:>zvona>ddl>macrocode.lisp">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:ACTIVE-PATHNAME-MIXIN -- 1. IV's, 0. FL's 104225115>
   Arg 2 (OPERATION): :RENAME
   Arg 3 (NEW-PATHNAME): #<LOGICAL-PATHNAME "DDL: DDL; MACROCODE.DDL.NEWEST">

(:DEFUN-METHOD FS:LOGICAL-PATHNAME-PASS-ON):  (P.C. = 10)
   Arg 0 (SELF): #<LOGICAL-PATHNAME "DDL: DDL; MACROCODE.LISP.NEWEST">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:LOGICAL-PATHNAME -- 8. IV's, 3. FL's 104206646>
   Arg 2 (MESSAGE): :RENAME
   Rest arg (REST): (#<LOGICAL-PATHNAME "DDL: DDL; MACROCODE.DDL.NEWEST">)

(:METHOD FS:LOGICAL-PATHNAME :RENAME):  (P.C. = 10)
   Arg 0 (SELF): #<LOGICAL-PATHNAME "DDL: DDL; MACROCODE.LISP.NEWEST">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:LOGICAL-PATHNAME -- 8. IV's, 3. FL's 104206646>
   Arg 2 (OPERATION): :RENAME
   Rest arg (.ARGS.): (#<LOGICAL-PATHNAME "DDL: DDL; MACROCODE.DDL.NEWEST">)

RENAMEF:  (P.C. = 231)
   Arg 0 (STRING-OR-STREAM): #<LOGICAL-PATHNAME "DDL: DDL; MACROCODE.LISP.NEWEST">
   Arg 1 (NEW-NAME): #<LOGICAL-PATHNAME "DDL: DDL; MACROCODE.DDL">
   Local 1 (NEW-NAME): #<LOGICAL-PATHNAME "DDL: DDL; MACROCODE.DDL.NEWEST">
   --Defaulted args:--
   Arg 2 (ERROR-P): T

ZWEI:RENAME-FILE-INTERNAL:  (P.C. = 4)
   Arg 0 (FROM): #<LOGICAL-PATHNAME "DDL: DDL; MACROCODE.LISP.NEWEST">
   Arg 1 (TO): #<LOGICAL-PATHNAME "DDL: DDL; MACROCODE.DDL">
   Arg 2 (PRINTER): #<DTP-COMPILED-FUNCTION ZWEI:TYPEIN-LINE 31524107>

ZWEI:COM-RENAME-FILE:  (P.C. = 164)

ZWEI:COM-EXTENDED-COMMAND:  (P.C. = 27)

Rest of stack:
ZWEI:RE-EXECUTE-MINI-BUFFER-COMMAND:  (P.C. = 114)
ZWEI:COM-REPEAT-LAST-MINI-BUFFER-COMMAND:  (P.C. = 27)
ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
ZWEI:MAKE-EXTENDED-COMMAND-INTERNAL:  (P.C. = 107)
Closure of ZWEI:MAKE-EXTENDED-COMMAND-INTERNAL:
ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 233)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 60)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 51)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
18-Apr-85 21:05:14-EST,2685;000000000000
Received: from 24620 by MIT-OZ via Chaosnet; 18 Apr 85 21:05-EST
Received: from SCRC-CROW by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 217629; Thu 18-Apr-85 21:05:25-EST
Date: Thursday, 18 April 1985, 21:04-EST
From: Robert W. Kerns <RWK at SCRC-YUKON>
Subject: odds and ends accumulated while playing idlely with Rel 6.
To: Alan Bawden <Alan at MIT-MC>
cc: BUG-LISPM at OZ, bug-lmdoc at SCRC-YUKON, bug-sage at SCRC-YUKON
In-Reply-To: <850402231103.2.ALAN@DUANE.MIT.EDU>
Message-ID: <850418210447.9.RWK@CROW.SCRC.Symbolics.COM>

I presume others have responded to the rest of your message, or
have noted your comments, where appropriate.

    Date: Tuesday, 2 April 1985, 23:11-EST
    From: Alan Bawden <Alan at MIT-MC>
    If I type "FOO " the Lisp listener types a little message about FOO being
    unbound and leaves me sitting in a state that looks very much like I am
    typing at lisp.  
You are.  Or at least, at the input-editor, typing input for the lisp
reader.  Do you really think it will be difficult to change your
expectations and simply correct your typo, rather than aborting,
yanking back in your input, and correcting your typo?  (This is
a serious question, by the way).

		     If I now type "BAR ", nothing happens.  
You call that two-line message nothing?  I think I expected
more the reverse complaint.  Oh well, so much for my powers
of prognostication...

							     Very mysterious
    and most unlike the way I am used to Lisp reacting to an unbound variable.
    I haven't found a place in the release notes that tells me how to turn this
    DWIM off yet (it better be there), but when I find it I intend to turn it
    off.

(setq *read-form-edit-trivial-errors-p* nil)

It is documented.

    I can't figure out what I am supposed to do about the screw I encountered
    earlier where Zwei barfed at me about :SCM files.  All I want to do is tell
    Zwei that files named FOO.SCM should be edited in Lisp mode.  What should I
    be doing?

(fs:define-canonical-type :scm "SCM"
  (:unix "SM"))

(push '(:scm . :lisp) fs:*file-type-mode-alist*)

BUG-LMDOC:  fs:*file-type-mode-alist* does not appear as a variable record
anywhere!

BUG-SAGE:  The paper index shows this (fs:*file-type-mode-alist*) as
indexed to File Types and Zmacs Major Modes section and Correspondence
of Canonical Types and Editor Modes section.  [Find] only finds the
later.

BUG-LMDOC:  The former does a *much* better job of explaining it.  (Although
a combination of the two records would be better still).

Alan:  You can either find these topics with the document examiner, or
see pages 3-198 and 5-153.
18-Apr-85 21:27:01-EST,556;000000000000
Received: from 13063 by MIT-OZ via Chaosnet; 18 Apr 85 21:26-EST
Date: Thursday, 18 April 1985, 21:26-EST
From: David Chapman <Zvona at OZ>
Subject: what sources do I want?
To: Bug-Lispm at OZ
Message-ID: <850418212653.2.ZVONA@DUANE.MIT>

In Symbolics 3670 Release 6.0, IP-TCP 29.0, AISite 8.2,
microcode TMC5-IO4-MIC 319, FEP 22, on Lisp Machine Duane Allman:

Tonight, it's describe-defstruct.  I've written a version of defstruct
that puts weird things in the slots, and want to rewrite
describe-defstruct to print them out comprehensibly.
18-Apr-85 21:32:02-EST,2181;000000000000
Received: from 24620 by MIT-OZ via Chaosnet; 18 Apr 85 21:31-EST
Received: from SCRC-CROW by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 217641; Thu 18-Apr-85 21:23:01-EST
Date: Thursday, 18 April 1985, 21:22-EST
From: Robert W. Kerns <RWK at SCRC-YUKON>
Subject: VMS pathname lossage
To: CJL at OZ
cc: BUG-LISPM at OZ
In-Reply-To: <850409165452.1.LISP-MACHINE@ZERMATT.MIT>
Message-ID: <850418212237.0.RWK@CROW.SCRC.Symbolics.COM>

    Date: Tuesday, 9 April 1985, 16:54-EST
    From: CJL at OZ

    In Symbolics 3670 Release 6.0, IP-TCP 29.0, MLSite 2.3, Mailer 43.0,
    microcode TMC5-IO4-MIC 319, on Lisp Machine Zermatt:

    I used to (release 5) be able to copy from a lisp machine to a vms and
    it would make the pathnames for the vms host legal. Now it only gives an
    error. I liked it the way it was before.

Well, the way it was before was an accident that broke other parts of
the system.  It also had some pretty serious problems from a user-interface
point of view.  For example, consider

opy File FOO:>cjl>fonts>*.*.* OBERON:FOO:[CJL.FONTS]*.*.*

You'd like to see it produce some "right thing" for these cases.  Well, there
isn't enough information to decide what the "right thing" is.  Truncation and
droping of hyphens?

consider:

FOO:>cjl>fonts>*.*.*
  timesroman26b.bfd.7
  timesroman12i.bfd.7

You'd get just one file out of copying this, and the resulting name
wouldn't tell you much about what was in it.

It's possible, using logical pathnames, to produce the right behaviour here,
given that you know that [CJL.FONTS] holds font files.  This is why logical
pathnames contain the hair that they do, including error checking to prevent
just this sort of case.

It's interesting to note that in Rel 5, the so-called "right thing" that
would have been done, is that it would have called the file COMPAT360 ...
I hope you didn't have an IBM version of the file.

    >>Error: "COMPAT-3600" is an invalid name component for OBERON (a VMS host).
    While in the function (:METHOD FS:PATHNAME :VALIDATE-COMPONENT)  (:METHOD FS:PATHNAME :VALIDATE)  (:METHOD FS:PATHNAME-HASH-TABLE-MIXIN :GET-PATHNAME)
18-Apr-85 21:38:49-EST,581;000000000000
Mail-From: ZVONA created at 18-Apr-85 21:37:11
Date: Thu, 18 Apr 1985  21:37 EST
Message-ID: <ZVONA.12104265667.BABYL@MIT-OZ>
From: ZVONA@MIT-OZ
To:   "David A. Moon" <Moon@SCRC-STONY-BROOK.ARPA>
Cc:   BUG-LISPM@MIT-OZ, bug-symbolics-hardware@MIT-OZ, zvona@MIT-OZ
Subject: I think this machine's gc hardware is broken, unless the EGC software is fuckt
In-reply-to: Msg of 18 Apr 1985 20:42-EST from David A. Moon <Moon at SCRC-STONY-BROOK>

I'm sorry, I didn't know there was a GC harware diagnostic.  We're
supposed to get documentation any day now.  I'll run it then.
18-Apr-85 21:43:32-EST,1885;000000000000
Received: from 24620 by MIT-OZ via Chaosnet; 18 Apr 85 21:41-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 217654; Thu 18-Apr-85 21:41:09-EST
Date: Thursday, 18 April 1985, 21:41-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: what sources do I want?
To: David Chapman <Zvona at OZ>, Bug-Lispm at OZ
In-Reply-To: <850418212653.2.ZVONA@DUANE.MIT>
Message-ID: <850418214108.3.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Thursday, 18 April 1985, 21:26-EST
    From: David Chapman <Zvona at OZ>

    In Symbolics 3670 Release 6.0, IP-TCP 29.0, AISite 8.2,
    microcode TMC5-IO4-MIC 319, FEP 22, on Lisp Machine Duane Allman:

    Tonight, it's describe-defstruct.  I've written a version of defstruct
    that puts weird things in the slots, and want to rewrite
    describe-defstruct to print them out comprehensibly.

I'm not completely sure what it is doing in SYS:SYS;LCONS, but that's
where it is.  (Hmm... so are all the other describe-foos.)  That source
file isn't going to be shipped, but there are probably things in it that
should be moved elsewhere that can be shipped.

It's going to be pretty hard to rewrite something this small!!  Maybe
you really want a NAMED-STRUCTURE-INVOKE for the defstruct?

(DEFUN DESCRIBE-DEFSTRUCT (X &OPTIONAL DEFSTRUCT-TYPE &AUX DESCRIPTION)
  (OR (SETQ DESCRIPTION (GET (OR DEFSTRUCT-TYPE
				 (AND (ARRAYP X) (NAMED-STRUCTURE-SYMBOL X))
				 (AND (LISTP X) (SYMBOLP (CAR X)) (CAR X)))
			     'DEFSTRUCT-DESCRIPTION))
      (FERROR "~S is not a known type of structure." X))
  (FORMAT T "~%~S is a ~S~%" X (DEFSTRUCT-DESCRIPTION-NAME))
  (DO L (DEFSTRUCT-DESCRIPTION-SLOT-ALIST) (CDR L) (NULL L)
      (FORMAT T "   ~30A~S~%"
	      (STRING-APPEND (CAAR L) ":")
	      (EVAL `(,(DEFSTRUCT-SLOT-DESCRIPTION-REF-MACRO-NAME (CDAR L)) ',X))))
  X)
18-Apr-85 21:54:16-EST,636;000000000000
Received: from MIT-MOON by MIT-OZ via Chaosnet; 18 Apr 85 21:54-EST
Date: Thursday, 18 April 1985, 21:54-EST
From: Ken Haase <KWH at OZ>
Subject: Sources for QSEND.
To: BUG-LISPM at OZ
Message-ID: <850418215407.3.KWH@MOON.MIT>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 8.2,
microcode TMC5-MIC 319, on Lisp Machine Keith Moon:

I would like a copy of the sources for QSEND, in particular the function
it uses to parse a destination (like "KWH@OZ") into something useful.  In
Release 5, this was called ZWEI:PARSE-DEST, but since these sources have been
withdrawn with Release 6, I can't update my code....

Ken
18-Apr-85 22:02:33-EST,586;000000000000
Received: from 13063 by MIT-OZ via Chaosnet; 18 Apr 85 22:00-EST
Date: Thursday, 18 April 1985, 21:59-EST
From: David Chapman <Zvona at OZ>
Subject: bogus comment in SYS:SYS;FSPEC
To: BUG-LISPM at OZ
Message-ID: <850418215952.3.ZVONA@DUANE.MIT>

In Symbolics 3670 Release 6.0, IP-TCP 29.0, AISite 8.2,
microcode TMC5-IO4-MIC 319, FEP 22, on Lisp Machine Duane Allman:

The comment documenting the contract of a sys:function-spec-handler
property neglects to mention VALIDATE-FUNCTION-SPEC as something it
should support.

IWBNI extensible function specs were documented.
18-Apr-85 22:12:11-EST,1210;000000000000
Mail-From: ZVONA created at 18-Apr-85 22:10:42
Date: Thu, 18 Apr 1985  22:10 EST
Message-ID: <ZVONA.12104271767.BABYL@MIT-OZ>
From: ZVONA@MIT-OZ
To:   "David C. Plummer in disguise" <DCP@SCRC-QUABBIN.ARPA>
Cc:   Bug-Lispm@MIT-OZ
Subject: thanks for describe-defstruct
In-reply-to: Msg of 18 Apr 1985 21:41-EST from David C. Plummer in disguise <DCP at SCRC-QUABBIN>

Thanks a lot, that was in fact what I needed; couldn't have done what
I wanted without your sending me that.  For your amusement, major
change upper case:

;;; Based on describe-defstruct.
(defun DDL-DESCRIBE (x &optional defstruct-type &aux si:description)
  (or (setq si:description (get (or defstruct-type
				    (and (arrayp x) (named-structure-symbol x))
				    (and (listp x) (symbolp (car x)) (car x)))
				'si:defstruct-description))
      (ferror "~s is not a known type of structure." x))
  (format t "~%~s is a ~s~%" x (si:defstruct-description-name))
  (do l (si:defstruct-description-slot-alist) (cdr l) (null l)
      (format t "   ~30a~s~%"
	      (string-append (caar l) ":")
	      (DDLI:CELL-VALUE (eval `(,(si:defstruct-slot-description-ref-macro-name
					  (cdar l))
				       ',x)))))
  x)
18-Apr-85 22:35:02-EST,5495;000000000000
Received: from 24620 by MIT-OZ via Chaosnet; 18 Apr 85 22:34-EST
Received: from SCRC-CROW by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 217684; Thu 18-Apr-85 22:34:25-EST
Date: Thursday, 18 April 1985, 22:34-EST
From: Robert W. Kerns <RWK at SCRC-YUKON>
Subject: Logical Pathname Names  Lossage
To: Christopher C. Stacy <CSTACY at MIT-MC>
cc: GUMBY at MIT-MC, JCMA at MIT-MC, BUG-LISPM at OZ, HENRY at OZ,
    DCP at SCRC-QUABBIN
In-Reply-To: The message of 3 Apr 85 15:57-EST from Christopher C. Stacy <CSTACY at MIT-MC>,
             The message of 3 Apr 85 15:57-EST from CSTACY at MIT-MC,
             The message of 2 Apr 85 14:36-EST from GUMBY at MIT-MC
Message-ID: <850418223400.2.RWK@CROW.SCRC.Symbolics.COM>

    Date: 3 April 1985 15:57-EST
    From: Christopher C. Stacy <CSTACY @ MIT-MC>

    This whole logical pathname mapping issue seems to me to revolve
    around "back translation", and my model of the world agrees with
    Gumby's. If we are confused, could someone please explain what the
    correct model is?

Well, first off, realize there's two issues here.  One is
"What is theoretically possible", and the other is "what can
we do without breaking everything that has been done during
the last 5 years".  Flushing back-translation is a pretty
fundamental change, and frankly, one I doubt we're going to
do, completely.

It's not so simple as "just remember what logical pathname you
were given".  Consider that often the pathname you're dealing
with came from the filesystem.  Now, that's just the same situation
that causes some other troubles (consider the VMS logical device
problem, for instance).

However, let's leave that aside, and address your model.  There's
something which really bothers me about that model (besides the
fact it is clearly NOT what is implemented).  What bothers me
is that you're using the UNIX model of links, not the ITS/LISPM
model of links.  The analogy holds pretty well, if you consider
the physical files to be the INODEs.  There's no clear idea of
where a file really lives, and if you delete one, you side
effect the other.

Try this model instead:  A logical pathname host is an abstract
MODEL of a physical filesystem.  It is not a collection of links.
In fact, it doesn't model links, and it currently doesn't handle
them well when the physical filesystem uses them (or similar
concepts, like VMS logical names).  The logical hierarchy REPRESENTS
the physical one.  Having two logical directories point to the same
physical one is a clear clash with this model.  It's something you
can do with only certain operating systems (Unix, Multics and VMS).
You can't call one directory by two different things on TOPS-20, ITS,
GCOS, MSDOS, LMFS, or FS:LOGICAL-HOST.

Under this model of logical hosts a being a filesystem (they DO appear
in the HOST part of a pathname, after all), there is no way to link one
file to another, and it is quite reasonable to expect the logical host
to remember the name of the file, and give it back to you later.

Remember, too, that logical pathnames aren't an arbitrary collection of
things you might wish you had.  They especially aren't a tool for
modularizing your systems.  Such a tool would require some design, and I
think would look rather different from logical pathnames.  They're a
tool for TRANSPORTING systems between operating-systems, and an
imperfect one with a difficult task, at that.  With some care and attention,
they make that task possible.  I don't know of any other software system
that even tries.

    Date: 2 April 1985 14:36-EST
    From: David Vinayak Wallace <GUMBY @ MIT-MC>

	Date: Monday, 1 April 1985, 20:38-EST
	From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>

	    Date: Fri, 29 Mar 1985  17:03 EST
	    From: HENRY@MIT-OZ

		Date: Thursday, 28 March 1985, 21:18-EST
		From: jcma at MIT-MC

		This is trying to tell me I can't have two logical pathnames
		pointing at the same real pathname.  What kind of lossage is that?

	    Yes, I encountered this too, and its bad. It was explained to me
	    that it is trying to protect you from writing a file on two different
	    logical pathnames with the same physical pathname, but

	    - It shouldn't complain until I actually try to write such a file, 
	    rather than when I set up something only with the potential of
	    doing so.

	In other words, you would like to be given a false sense of security,
	and then when the time comes to actually DO something you are forbidden
	because of something you did 2 hours ago?  I think that is really what
	you are saying, and I hope you really don't mean it.  Isn't it better to
	let you know as soon as possible when you are setting yourself up for
	trouble so you can correct the root cause of the problem?

    Why must :BACK-TRANSLATED-PATHNAME (or whatever it's called) be allowed?  I
    think of logical pathnames as links implemented at the user end rather than
    the filesystem end.  No filesystem I know of allows both links and "what is
    this file's name?" once a :TRUENAME has been done.

Actually, they all do, but sometimes the answer isn't the one
you would have expected.  The same is true of logical pathnames.

    I think the right thing is to disallow the back-translation of logical
    pathnames.  If you want to remember the name by which a file was accessed
    then you're going to have to remember it yourself.
18-Apr-85 23:02:42-EST,526;000000000000
Mail-From: SAZ created at 18-Apr-85 23:02:32
Date: Thu 18 Apr 85 23:02:32-EST
From: David M. J. Saslav <SAZ@MIT-OZ>
Subject: subdirs
To: mdc@MIT-HTVAX
cc: bug-lispm@MIT-OZ
In-Reply-To: Message from "Martin David Connor <mdc@mit-htvax>" of Thu 18 Apr 85 19:16:33-EST

but marty, this doesn't make sense -- the problem went away after I
deleted the spurious buffers.  In other words, I *was* able to save
into the subdir ten seconds after I sent the bug report.

Is there any other possible answer?

saz
-------
19-Apr-85 00:38:18-EST,266;000000000000
Received: from MIT-MORRISON by MIT-OZ via Chaosnet; 19 Apr 85 00:38-EST
Date: Friday, 19 April 1985, 00:37-EST
From: jcma@MIT-MC
Subject: internet host think
To: bug-lispm@OZ
Message-ID: <850419003725.1.JCMA@MORRISON.MIT>

is not known to the MIT namespace.
19-Apr-85 01:06:58-EST,3819;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 19 Apr 85 01:06-EST
Date: Fri,19 Apr 85 00:07:48 EST
From: Alan Bawden <ALAN@MIT-MC>
Subject:  odds and ends accumulated while playing idlely with Rel 6.
To: RWK@SCRC-YUKON
cc: BUG-LISPM@MIT-OZ
In-reply-to: Msg of Thu 18 Apr 85 21:04 EST from Robert W. Kerns <RWK at SCRC-YUKON.ARPA>
Message-ID: <[MIT-MC].460739.850419.ALAN>

    Date: Thu, 18 Apr 85 21:04 EST
    From: Robert W. Kerns <RWK at SCRC-YUKON>
    To:   Alan Bawden <Alan at MC>
        Date: Tuesday, 2 April 1985, 23:11-EST
        From: Alan Bawden <Alan at MIT-MC>
	If I type "FOO " the Lisp listener types a little message about FOO
	being unbound and leaves me sitting in a state that looks very much
	like I am typing at lisp.
    You are.  Or at least, at the input-editor, typing input for the lisp
    reader.  Do you really think it will be difficult to change your
    expectations and simply correct your typo, rather than aborting,
    yanking back in your input, and correcting your typo?  (This is
    a serious question, by the way).

No, what I meant by "typing at Lisp" was that I could now type a form and
it would be evaluated.  That is not the same thing as having to type some
rubouts or aborts first.

The problem with your question here is that I dont want to correct my typo
at all!  I just learned that FOO was unbound and how I want to type another
form, unfortunately I am still stuck in this "mode" resulting from typing
in the last one.  If I set the magic switch that turns this DWIM off (which
I found in the INFO-ized release notes pretty easily, thank you!) then the
same action puts me into a different "mode" called the error handler that
both has a distinctive prompt to tell me I am in a different mode, and even
acts like a little read-eval-print loop in case I forget.

What I am objecting to, mostly is that I am left in the leftmost column of
the screen as if I was expected to type in another form.  If my cursor was
warped back to the place it was before the little two line message was
typed out, or if it was left at the end of the line at the end of that
message, then I probably wouldn't have been so grossed out.

    		     If I now type "BAR ", nothing happens.  
    You call that two-line message nothing?  I think I expected more the
    reverse complaint.  Oh well, so much for my powers of
    prognostication...

I tried it again this afternoon and I insist that absolutely -nothing-
happens when I type that "BAR ".  Perhaps we aren't communicating.  Here is
what happened step-by-step, keystroke-by-keystroke:  I type "FOO ".  After I
type the space I get this little two line message about typing rubout to
correct my input.  The position of my cursor then misleads me into believing
that I am in a position to type another form.  I now type "BAR ".  After
typing that space, NOTHING HAPPENS.  OK?  Something should give me some
feedback to let me know I am losing.  Is there anything I could type there
other than an editing command or <Abort> that would do anything useful?
Perhaps when I type the "B" it should insert it right after the "FOO ", to
let me know that it what I am -really- typing, and then feep my bell and
redisply the warning message or something.

    (fs:define-canonical-type :scm "SCM"
      (:unix "SM"))

    (push '(:scm . :lisp) fs:*file-type-mode-alist*)

Of course, but don't you think its a little wierd to make somebody who only
wants to customize his editor a little have to go and understand all of the
arguments to FS:DEFINE-CANONICAL-TYPE?  I'll bet there are things about the
case of the various strings that are important, right?  I don't want to
think about Unix, I just want files on OZ named "foo.scm" to read into my
Zwei in Lisp mode.
19-Apr-85 01:14:40-EST,1652;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 19 Apr 85 01:14-EST
Received: from MIT-HTVAX.ARPA by MIT-MC.ARPA; 19 APR 85 01:06:52 EST
Received: by MIT-HTVAX.ARPA (4.12/4.7) 
	id AA19203; Fri, 19 Apr 85 00:49:53 est
Message-Id: <8504190549.AA19203@MIT-HTVAX.ARPA>
To: "David M. J. Saslav" <SAZ%MIT-OZ@mit-mc.ARPA>
Cc: bug-lispm%MIT-OZ@mit-mc.ARPA
Subject: Re: subdirs
In-Reply-To: Your message of Thu 18 Apr 85 23:02:32-EST.
Date: 19 Apr 85 00:49:48 EST (Fri)
From: Martin David Connor <mdc@MIT-HTVAX.ARPA>

    Date: Thu 18 Apr 85 23:02:32-EST
    From: David M. J. Saslav <SAZ%MIT-OZ@MIT-MC.ARPA>

    but marty, this doesn't make sense -- the problem went away after I
    deleted the spurious buffers.  In other words, I *was* able to save
    into the subdir ten seconds after I sent the bug report. Is there any
    other possible answer?  saz
    -------

Several.  Look carefully at the directory and you will see two files
with names of the form:

   -TEMPORARY-77777777

It would appear that the file server wrote the files, but when it came
time to rename them, it could not.  This is consistent with my
protection theory.  Perhaps someone on BUG-FILE@OZ could better help
you.  Did you perchance have to log into OZ between saves?  Did you
enable your capabilities?  I don't know how clever the lispm is about
enabling for you, or ACCESSING the directory, but the problem is that
the files got written to the subdir and could not be renamed because
that requires more than the '52' access that you have without
ACCESSing the directory.  

Folks on BUG-FILE@OZ might have some more ideas on the subject.
19-Apr-85 02:13:00-EST,1770;000000000000
Received: from MIT-MORRISON by MIT-OZ via Chaosnet; 19 Apr 85 02:12-EST
Date: Friday, 19 April 1985, 02:12-EST
From: jcma@MIT-MC
Subject: Compiler bug?  How the hell should I know?
To: SWM@SCRC-STONY-BROOK
cc: GAVAN@OZ, JCMa@OZ, Bug-LispM@OZ
In-Reply-To: <850418144129.3.SWM@THAMES.SCRC.Symbolics.COM>
Message-ID: <850419021211.9.JCMA@MORRISON.MIT>

    Date: Thursday, 18 April 1985, 14:41-EST
    From: Scott McKay <SWM at SCRC-QUABBIN>

	Date: Wed, 17 Apr 85 17:01 EST
	From: Gavan Duffy <GAVAN@OZ.MIT>

	In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 8.2,
	microcode TMC5-MIC 319, FEP 22, on Lisp Machine Jim Morrison:
    
	I load the following macro which expands into the defun
	(SELECT-WEBSTER-FIELD-TYPE) that follows it.  Unfortunately, on compilation of
	the SELECT-WEBSTER-FIELD-TYPE, the compiler complains that an OR is unbound.
	OK.  But it's a lie.  The OR isn't unbound.  I redefined
	SELECT-WEBSTER-FIELD-TYPE so that it just does what the SELECT-CHAR macro
	expands into (see below).  That compiles and evaluates just fine.  What gives?

    You're bashing original definition!  I think this version of your macro
    will work much better:

Thanks for the new definition.  It actually only needed a COPYTREE of BODY.
So, it looks like the body is now part of the actual definition of macros in
rel6, while it wasn't in earlier systems in the case of macroexpand.  Is this
a good idea, or will this kind of problem crop up repeatedly?

The difference in performance of control-shift-m and macroexpand has, then, to
do with wether or not they make a copy of the definition before doing the
macroexpansion.  The differential behavior is not a good idea because it is
very confusing, expecially for naive lusers.
19-Apr-85 02:17:03-EST,3122;000000000000
Received: from MIT-MORRISON by MIT-OZ via Chaosnet; 19 Apr 85 02:16-EST
Date: Friday, 19 April 1985, 02:16-EST
From: jcma@MIT-MC
Subject: Flavor Bugs
To: DCP@SCRC-STONY-BROOK
cc: rom@SCRC-STONY-BROOK, GAVAN@OZ, jcma@MIT-MC, BUG-LISPM@OZ,
    SWM@SCRC-STONY-BROOK
In-Reply-To: <850418144145.0.NFEP@NEPONSET.SCRC.Symbolics.COM>
Message-ID: <850419021616.0.JCMA@MORRISON.MIT>

    Date: Thursday, 18 April 1985, 14:41-EST
    From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>

	Date: Thursday, 18 April 1985, 10:40-EST
	From: Robert O. Mathews <rom at SCRC-YUKON>

	    Date: Wed,17 Apr 85 19:55:31 EST
	    From: John C. Mallery <JCMA@MIT-MC>

	    No, the reason is probably because dbg:parse-error is globalized.
	    Why?  Look opur system was well debugged in the last system and you
	    people have munged up the flavor system so we can't even compile
	    our program.  What is the story?  If you're not going to give us the
	    sources and you're going to introduce changes the break debugged
	    code, what are we supposed to do?

	The section "Symbols Added to or Removed from GLOBAL in Release 6.0", in
	the Release 6.0 Release Notes, contains a complete list of all symbols
	added to GLOBAL.  PARSE-FERROR is among them.

    Yow!!  Real information.  I thought I typed in 'DBG:PARSE-FERROR and it
    said SYS:PARSE-FERROR, leading me to believe it wasn't in GLOBAL.

	Date: Wed, 17 Apr 85 16:07 EST
	From: Gavan Duffy <GAVAN@OZ.MIT>

	Both DEBUGGER: and RELATUS: :USE GLOBAL:, and nothing else.  

    DEBUGGER uses SYSTEM as well.

	Date: Thu, 18 Apr 85 02:52 EST
	From: jcma@MC.MIT

	Note that we weren't shaddowing before. We are still losing with shaddowing.
	I will report on that later.

	(DEFPACKAGE
	      RELATUS
	      (:PREFIX-NAME "RL")
	      (:NICKNAMES RL)
	      (:USE GLOBAL)
	      (:SHADOW PARSE-ERROR PARSE-FERROR)
	      (:SIZE 32000.))

    I guess I don't know what this means.  Were you losing because you
    weren't shadowing before and now you are winning?

I'm going to try again and will report some results shortly.

	Date: Wed,17 Apr 85 19:55:31 EST
	From: John C. Mallery <JCMA@MIT-MC>

	    What packages does your package :USE?  On my machine,
		(eq 'dbg:parse-error 'sys:parse-error) => T
	    I'll guess that you :USE DEBUGGER, which I'm not sure is a good idea,
	    but I'm sure you have your reasons.

	No, the reason is probably because dbg:parse-error is globalized.
	Why? 
    Because somebody decided it was a good idea, and it got documented as
    ROM points out.
	Look our system was well debugged in the last system 
    And I'm sure it will be well debugged again...
I sure hope so, otherwise it will become one of those historical AI
systems that used to work.

	If you're not going to give us the
	sources and you're going to introduce changes the break debugged
	code, what are we supposed to do?

    I can see it's going to be "blame it on the source distribution policy"
    for a while even if said policy has nothing to do with the problem.

When in doubt, ...
19-Apr-85 03:00:08-EST,5036;000000000000
Received: from 24620 by MIT-OZ via Chaosnet; 19 Apr 85 03:00-EST
Received: from SCRC-CROW by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 217811; Fri 19-Apr-85 02:59:06-EST
Date: Friday, 19 April 1985, 02:58-EST
From: Robert W. Kerns <RWK at SCRC-YUKON>
Subject: Logical Pathname Names  Lossage
To: Gavan Duffy <GAVAN at OZ>
cc: joseph at SCRC-QUABBIN, HENRY at OZ, jcma at MIT-MC, BUG-LISPM at OZ
In-Reply-To: <850415041706.1.GAVAN@LENNON.MIT>
Message-ID: <850419025827.6.RWK@CROW.SCRC.Symbolics.COM>
Fonts: CPTFONT, CPTFONTB, TVFONT

    Date: Mon, 15 Apr 85 04:17 EST
    From: Gavan Duffy <GAVAN@OZ.MIT>

	Date: Saturday, 13 April 1985, 00:25-EST
	From: Robert W. Kerns <RWK at SCRC-YUKON>

		    It seems to me to be a COMPLETE LOSE to remove the ability to have two
	    logical pathnames point to the same real pathname, as available in rel 5.

	This "ability" was illusory in the first place.  There have been error
	checks for this since at least Rel 5, and I think even Rel 4.1, but for
	(bogus) performance reasons they were only turned on during certain
	operations.  There are a host of things which will not work right
	if you have two logical pathnames going to the same physical one,
	and none of them are new.

    Like what?

Do m-X List Callers :BACK-TRANSLATED-PATHNAME, for starters, but that's
only the tip of the iceberg.  Completion (oops, that one's new).
:QFASL-SOURCE-FILE-UNIQUE-ID.  Remember, too, that this error check DID
go off sometimes in Rel 4 & Rel 5, even if you never did hit it.

		All I want to do is to have multiple names for the same logical
    directory, for the sake of convenience.  This is unreasonable?  
Yes.
								    Logical
    pathnames should have this flexibility.

Whatever for?  What do they have to do with the purpose of logical pathnames?
How do they make it easier to distribute software?  Despite repeated requests,
none of you who are doing the yelling have ever answered this question.

	Just because you didn't get an error message before does not mean
	this ever worked.

    Hello?  Worked for me.

I've had to answer more bug reports of problems from people accidentally
making two directories map to the same thing than than I've gotten from you
saying you want to do it.

	The error message you get isn't kidding, either.

	    Lord save me from people who would save me from myself!

	How about saving you from the system screwing you behind your
	back with no trace of what it did to you?

    That's fine, but I don't see how preventing me from having two or more logical
    directories under the same logical host point to the same physical directory
    can screw me.  

Well, I'm tired of repeating myself, so I'll stop.

	Why don't you say what you were really trying to accomplish
	by having two different logical pathnames refering to the same
	file?  Why didn't you name them both the same thing in the
	first place?

    OK.  For instance, I may have defined a logical pathname
    FOO:UTILITIES;FROB.LISP, and there are many places in my code where I refer to
    the file by this name.   But I often tire of typing UTILITIES in the typein
    window, and want to define the pathname FOO:U;FROB.LISP to point to the same
    file.

So define a keyboard macro!  Come on, logical pathnames are not
designed as a typing convenience!  If you want an abbreviation
facility, ask for an abbreviation facility.  I don't think it's
reasonable to let such use of the logical pathname system get
in the way of its primary mission.

TOPS-20 doesn't provide such a facility, either.  Nor did ITS.

Really, you expect too much.  We cannot guarantee that every hack that
someone comes up that takes advantage of some quirk of the system will
continue to work in every release.  All we can do is try to document
what our interfaces ARE, and also keep in mind the other uses that
we know about, when we are making enhancements.  In this case, this
change was critical to the primary goal of logical pathnames: the
ability to distribute software (especially the system) without having
it lose on VMS and/or UNIX.

    Setting FS:*CHECK-FOR-MULTIPLE-TRANSLATIONS* to NIL fixes things for me for
    the time being.

    I can see where checking for multiple logical host definitions might be a good
    idea, but I don't see why I can't have two logical directories (under the same
    logical host) point to the same physical directory.

If you want to set FS:*CHECK-FOR-MULTIPLE-TRANSLATIONS* to NIL,
it's fine with me.  If it gives you what you want, then that's
great!  However, I don't think the problems that ensue are acceptable
for general use.

I am finding it difficult to accept that this extra bit of typing
convenience is as important to you as you make it out to be.  But if
it is, you should move your focus to your need for more typing convenience,
and not get bogged down in the specific mechanics of warping logical
pathnames to this end.
19-Apr-85 03:12:59-EST,5827;000000000000
Received: from 24620 by MIT-OZ via Chaosnet; 19 Apr 85 03:12-EST
Received: from SCRC-CROW by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 217814; Fri 19-Apr-85 03:13:18-EST
Date: Friday, 19 April 1985, 03:12-EST
From: Robert W. Kerns <RWK at SCRC-YUKON>
Subject: Logical Pathname Names  Lossage
To: Reti at SCRC-VALLECITO
cc: GAVAN at OZ, joseph at SCRC-QUABBIN, HENRY at OZ, jcma at MIT-MC,
    BUG-LISPM at OZ
In-Reply-To: <"850413164556.3.Reti@VALLECITO"@WESER.SCRC.Symbolics.COM>
Message-ID: <850419031255.7.RWK@CROW.SCRC.Symbolics.COM>
Fonts: CPTFONT, CPTFONTB, TVFONT

    Date: Sat, 13 Apr 85 16:45 EST
    From:  <Reti@SCRC-VALLECITO.ARPA>

	Date: Saturday, 13 April 1985, 00:25-EST
	From: Robert W. Kerns <RWK at SCRC-YUKON>

	    Date: Friday, 12 April 1985, 11:21-EST
	    From: Gavan Duffy <GAVAN at OZ>

		Date: Sunday, 31 March 1985, 12:51-EST
		From: Joseph R Goldstone <joseph at SCRC-QUABBIN>

		    Date: Fri, 29 Mar 1985  17:03 EST
		    From: HENRY@MIT-OZ

			Date: Thursday, 28 March 1985, 21:18-EST
			From: jcma at MIT-MC
			This is trying to tell me I can't have two logical pathnames pointing at the
			same real pathname.  What kind of lossage is that?

			>>Error: Attempt to translate RL: U;  to PIG:USRD$:<RELATUS.UTILS>.
				 We had previously gotten this pathname as a translation of RL: UTILS; .
				 Files may be overwritten accidentally if you proceed.

		    Yes, I encountered this too, and its bad. It was explained to me
		    that it is trying to protect you from writing a file on two different
		    logical pathnames with the same physical pathname, but

		    - It shouldn't complain until I actually try to write such a file, 
		    rather than when I set up something only with the potential of doing so.

		What about the case where two groups come up with the same logical pathname?

	    This can only happen when they both define some string to be a logical host,
	    right?  
	(I have to confess I don't understand the point of Joseph's reply.  The reason
	it complains when it does is that that is the LAST POSSIBLE INSTANT for detecting
	the error).

		    It seems to me to be a COMPLETE LOSE to remove the ability to have two
	    logical pathnames point to the same real pathname, as available in rel 5.

	This "ability" was illusory in the first place.  There have been error
	checks for this since at least Rel 5, and I think even Rel 4.1, but for
	(bogus) performance reasons they were only turned on during certain
	operations.  There are a host of things which will not work right
	if you have two logical pathnames going to the same physical one,
	and none of them are new.

	Just because you didn't get an error message before does not mean
	this ever worked.

	The error message you get isn't kidding, either.

	    Lord save me from people who would save me from myself!

	How about saving you from the system screwing you behind your
	back with no trace of what it did to you?

	Why don't you say what you were really trying to accomplish
	by having two different logical pathnames refering to the same
	file?  Why didn't you name them both the same thing in the
	first place?
    One problem is that the error doesn't occur only when you have two logical
    pathnames pointing to the same file, it occurs when two LOGICAL
    DIRECTORIES point to the same PHYSICAL DIRECTORY.  

    It may very well be that the two sets of files defined on the two
    logical directories have no overlap at all, they just are logically
    distinct but happen to map to the same physical directory; I know this
    was the case when Henry Lieberman was demonstrating EZWin over here.

On any host we support, users can create subdirectories at will.

    I can think of circumstances in which this is a perfectly reasonable
    thing to do; I might have general package used by several systems that
    should have its own logical directory but at the same time be only given
    a single physical directory on some losing timesharing host in which to
    keep all my files.

This is very far from the purpose of logical pathnames.
They are not a way to compensate for the difficulties of
developing software on brain-damaged physical hosts.  They
do not implement version numbers on Unix, either!

    Henry's suggestion was to suppress the error message until such time as you
    actually encounter conflicting FILES.  

In the primary mission of logical pathnames, namely software
distribution, you want to catch mistakes as EARLY as possible,
not as LATE as possible.

Besides, why are directories different from other files?

What about tools which keep properties on the directory?
That's perfectly legitimate with our documented interface.
Should we break for this?


					   I know this is probably hard, but
    doesn't seem impossible.

No, not impossible.  But hardly worth it.

    Of course, if you do that, you still cannot handle the arbitrary
    back-translation of a physical pathname in that directory.  However, I'm
    not sure that is necessary; why not only back-translate pathnames that
    have been forward-translated?

In actual usage, this is very seldom when you want back-translation.
Unfortunately, it is also the only case in which it can work reliably.
It is certainly necessary in the current system.  In some hypothetical
future system, with a fair bit of work, this could be done.  But is it
worth the INCOMPATIBILITY?  Removing a long-documented interface that
people depend on is much more serious than disrupting an ad-hoc usage
such as this, in my book.  I've gotten enough flaming over the years
over reduction in the reliabilty of back-translation to make this set of
flames seem tame by comparison.
19-Apr-85 03:30:48-EST,2882;000000000000
Received: from 24620 by MIT-OZ via Chaosnet; 19 Apr 85 03:30-EST
Received: from SCRC-CROW by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 217818; Fri 19-Apr-85 03:30:34-EST
Date: Friday, 19 April 1985, 03:30-EST
From: Robert W. Kerns <RWK at SCRC-YUKON>
Subject: Base and Syntax
To: Alan Bawden <Alan at MIT-MC>
cc: BUG-LISPM at OZ
In-Reply-To: <850410220102.2.ALAN@ROBOT-5.MIT>
Message-ID: <850419033010.8.RWK@CROW.SCRC.Symbolics.COM>

    Date: Wednesday, 10 April 1985, 22:01-EST
    From: Alan Bawden <Alan at MIT-MC>

    In Symbolics 3670 Release 6.0, IP-TCP 29.0, AISite 7.11,
    microcode TMC5-IO4-FPA-MIC 319, on Lisp Machine Robot-5:

    I want a something I can set to shut off these warnings about missing Base
    and Syntax attributes in files.  I notice that if I read a file off of MC
    that has -*-Midas-*- in the first line the machine still bitches at me
    because it doesn't say anything about the Base and Syntax.  Foo!

Yes, foo.  It does seem there's a bug here, in that if you edit a file with
type .lisp, but with a -*-Midas-*- in the first line, it believes the
.lisp before the -*-Midas-*-.  Unfortunately, on ITS, the system can't tell
the difference between .lisp and .midas; they both end up as FOO >.

    Perhaps I will figure out how to patch it out locally.  It would be nice to
    get back into the habit of getting bugs fixed swiftly.

Try this on for size.  It shouldn't break anything, and should mean that
at least your files that don't look like they might be lisp files will
do OK.  If there's no -*- line, though, you'll still get the warning.

-*- Syntax: Zetalisp; Package: File-System: Base: 8; -*-

(DEFUN CANONICALIZE-BASE-AND-SYNTAX (BSE SYNTAX ADDITIONAL-ATTRIBUTES
				     &OPTIONAL ERROR-P REAL-PATHNAME)
  (COND
    ;; Base and no Syntax means syntax is Zetalisp
    ((AND BSE (NULL SYNTAX) (ASSQ :SYNTAX ADDITIONAL-ATTRIBUTES))
     (SETQ SYNTAX :ZETALISP))
    ;; Syntax and no Base means base should be IBASE or 10.
    ((AND SYNTAX (NULL BSE) (ASSQ :BASE ADDITIONAL-ATTRIBUTES))
     (SETQ BSE (IF (EQ SYNTAX :COMMON-LISP) 10. IBASE))))
  ;; Now check for neither base nor syntax
  (WHEN (AND (NULL SYNTAX) (NULL BSE)
	     (ASSQ :SYNTAX ADDITIONAL-ATTRIBUTES)
	     (ASSQ :BASE ADDITIONAL-ATTRIBUTES))
    (WHEN ERROR-P
      (LET ((MODE (AND (TYPEP REAL-PATHNAME 'FS:PATHNAME)
		       (SEND REAL-PATHNAME :GET :MODE))))
	(UNLESS (AND MODE (NEQ MODE :LISP))
	  (FORMAT ERROR-OUTPUT
		  "~&~A has neither a Base nor a Syntax attribute;~@
		   ~2Tthe current defaults, Base:~D and Syntax:~A, will be used."
		  REAL-PATHNAME
		  IBASE
		  (SELECT READTABLE
		    (SI:STANDARD-READTABLE "Zetalisp")
		    (SI:*COMMON-LISP-READTABLE* "Common Lisp")
		    (OTHERWISE READTABLE))))))
    (SETQ BSE IBASE)
    (SETQ SYNTAX :ZETALISP))
  (VALUES BSE SYNTAX))
19-Apr-85 03:36:18-EST,2707;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 19 Apr 85 03:36-EST
Received: from 40700024620 by MIT-MC via Chaosnet; 19 APR 85  03:37:02 EST
Received: from SCRC-CROW by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 217821; Fri 19-Apr-85 03:33:09-EST
Date: Fri, 19 Apr 85 03:32 EST
From: Robert W. Kerns <RWK@SCRC-YUKON.ARPA>
Subject: parse-pathname of twenex pathname can't handle -1
To: David Vinayak Wallace <Gumby@MIT-MC.ARPA>
cc: BUG-LISPM@MIT-MC.ARPA
In-Reply-To: <850410012004.5.GUMBY@JIMI.MIT>
Message-ID: <850419033247.9.RWK@CROW.SCRC.Symbolics.COM>

    Date: Wed, 10 Apr 85 01:20 EST
    From: David Vinayak Wallace <Gumby@MIT-MC.ARPA>

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.10,
    microcode TMC5-MIC 319, FEP 18, on Lisp Machine Jimi Hendrix:

    It handles -2 jest fine.

Well, -2 means :OLDEST, like 0 means :NEWEST.  You can help me
make sense of this if you'll refresh my memory of what -1 means.

The code looks like it hacks -1 for something, but since I don't
remember just what -1 really means, I'm not sure what's going on.

    >>Error: Version must be numeric in oz:[gumby.foo]a.b.-1

I guess the message is a bit silly in this case...

    While in the function (:method tenex-family-pathname-mixin :parse-namestring)  parse-pathname  si:*eval

    (:method tenex-family-pathname-mixin :parse-namestring):  (P.C. = 355)
       Arg 0 (self): #<TOPS20-PATHNAME "OZ:DEV:<FOO>FOO.LISP">
       Arg 1 (self-mapping-table): #<Map to flavor tenex-family-pathname-mixin -- 6. IV's, 1. FL's 105211441>
       Arg 2 (operation): :parse-namestring
       Arg 3 (host-specified): t
       Arg 4 (namestring): "oz:[gumby.foo]a.b.-1"
       Arg 5 (start): 3.
       Arg 6 (end): 20.
       Local 7 (quote-char): 22.
       Local 8 (dir-delim-alist): ((60. . 62.) (91. . 93.))
       Local 9 (subdir-delim): 46.
       Local 10 (all-delims): (46. 60. 91. 58. 46. 59. 32.)
       Local 11 (idx): 21.
       Local 12 (tem): "-1"
       Local 13 (tem1): nil
       Local 14 (delim): -1.
       Local 15 (dir-delim): nil
       Local 16 (dev): nil
       Local 17 (dir): ("GUMBY" "FOO")
       Local 18 (nam): "A"
       Local 19 (typ): "B"
       Local 20 (vers): nil
       Local 21 (type-begun): t
       Local 22 (name-supplied-p): t
       Local 23 (type-supplied-p): t

    parse-pathname:  (P.C. = 301)
       Arg 0 (thing): "oz:[gumby.foo]a.b.-1"
       --Defaulted args:--
       Arg 1 (with-respect-to): nil
       Arg 2 (defaults): ((#<ITS-HOST MC 1140425> . #<ITS-PATHNAME "MC: GUMBY; FOO >">) (#<LISPM-HOST REAGAN 1140000> . #<LMFS-PATHNAME "B:>foo>foo.lisp">) (nil . #<ITS-PATHNAME "MC: GUMBY; FOO >">))
19-Apr-85 04:44:29-EST,1692;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 19 Apr 85 04:44-EST
Received: from MIT-MOON by MIT-MC via Chaosnet; 19 APR 85  04:45:23 EST
Date: Friday, 19 April 1985, 04:44-EST
From: Christopher C. Stacy <CStacy at MIT-MC>
Subject: Terminal program
To: BUG-LISPM at OZ
Message-ID: <850419044403.4.CSTACY@MOON.MIT>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 8.2,
microcode TMC5-MIC 319, on Lisp Machine Keith Moon:

SUPDUPing to MIT-AI, I was disconnected with:
 Attempt to read from broken CHAOS Connection for WEATHER to NIKKI.
 Reason given by AI was "Connection does not exist at this end"

I understand that Chaosnet service has been AI flakey, and that subnet 6
or the host hardware is suspected.  (I think someone told me they were
seeing alot of aborts in the Chaosnet meters in PEEK on AI.)

Whatever is in AISITE is loaded into my world to put the weather on my
wholine. I understand this comes frequently from a simple-transaction
with NIKKI, a PDP-11 on the same subnet (26) as MOON.

Maybe the following is a red herring. PREP is also a Unix on subnet 26,
and and I am told that when PREP tries to use the WEATHER service from
NIKKI, PREP's Chaosnet NCP breaks completely.  The WEATHER implementor
came over to me tonight while all this was happenning and was asking
about the Ethernet address resolution protocols, and said that he has
"been sending all kinds of weird garbagy packets" out over subnet 26 lately.

Maybe these events are all related, or maybe it's simply that the LispM
has a bug in reporting errors, and subnet 6 is a crock.  This problem
has occurred about 6 times this evening. Those are all the bits I have.

Chris
19-Apr-85 05:40:09-EST,1310;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 19 Apr 85 05:40-EST
Date: Fri,19 Apr 85 05:40:54 EST
From: David Vinayak Wallace <GUMBY@MIT-MC>
Subject:  parse-pathname of twenex pathname can't handle -1
To: RWK@SCRC-YUKON
cc: BUG-LISPM@MIT-MC
In-reply-to: Msg of Fri 19 Apr 85 03:32 EST from Robert W. Kerns <RWK at SCRC-YUKON.ARPA>
Message-ID: <[MIT-MC].461036.850419.GUMBY>

    Date: Fri, 19 Apr 85 03:32 EST
    From: Robert W. Kerns <RWK at SCRC-YUKON.ARPA>

    Well, -2 means :OLDEST, like 0 means :NEWEST.  You can help me
    make sense of this if you'll refresh my memory of what -1 means.

    The code looks like it hacks -1 for something, but since I don't
    remember just what -1 really means, I'm not sure what's going on.

        >>Error: Version must be numeric in oz:[gumby.foo]a.b.-1

    I guess the message is a bit silly in this case...

        While in the function (:method tenex-family-pathname-mixin :parse-namestring)  parse-pathname  si:*eval

Generation Number 	Represents

	0 		The highest existing generation number
	-1 		One greater than the highest existing generation number
	-2 		The lowest existing generation number
	-3 or * 	All existing generations.

Bet you didn't know about -3, eh?

(Neither did I until I looked it up)

david
19-Apr-85 06:25:47-EST,5748;000000000000
Received: from 24620 by MIT-OZ via Chaosnet; 19 Apr 85 06:25-EST
Received: from SCRC-CROW by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 217870; Fri 19-Apr-85 06:26:03-EST
Date: Friday, 19 April 1985, 06:25-EST
From: Robert W. Kerns <RWK at SCRC-YUKON>
Subject: odds and ends accumulated while playing idlely with Rel 6.
To: Alan Bawden <ALAN at MIT-MC>
cc: BUG-LISPM at OZ
In-Reply-To: <[MIT-MC].460739.850419.ALAN>
Message-ID: <850419062541.1.RWK@CROW.SCRC.Symbolics.COM>

    Date: Fri,19 Apr 85 00:07:48 EST
    From: Alan Bawden <ALAN@MIT-MC>

	Date: Thu, 18 Apr 85 21:04 EST
	From: Robert W. Kerns <RWK at SCRC-YUKON>
	To:   Alan Bawden <Alan at MC>
	    Date: Tuesday, 2 April 1985, 23:11-EST
	    From: Alan Bawden <Alan at MIT-MC>
	    If I type "FOO " the Lisp listener types a little message about FOO
	    being unbound and leaves me sitting in a state that looks very much
	    like I am typing at lisp.
	You are.  Or at least, at the input-editor, typing input for the lisp
	reader.  Do you really think it will be difficult to change your
	expectations and simply correct your typo, rather than aborting,
	yanking back in your input, and correcting your typo?  (This is
	a serious question, by the way).

    No, what I meant by "typing at Lisp" was that I could now type a form and
    it would be evaluated.  That is not the same thing as having to type some
    rubouts or aborts first.

Well, by this definition, after you type an open paren, you're no longer
typing to lisp!

    The problem with your question here is that I dont want to correct my typo
    at all!  I just learned that FOO was unbound and how I want to type another
    form, unfortunately I am still stuck in this "mode" resulting from typing
    in the last one.  If I set the magic switch that turns this DWIM off (which
    I found in the INFO-ized release notes pretty easily, thank you!) then the
    same action puts me into a different "mode" called the error handler that
    both has a distinctive prompt to tell me I am in a different mode, and even
    acts like a little read-eval-print loop in case I forget.

    What I am objecting to, mostly is that I am left in the leftmost column of
    the screen as if I was expected to type in another form.  If my cursor was
    warped back to the place it was before the little two line message was
    typed out, or if it was left at the end of the line at the end of that
    message, then I probably wouldn't have been so grossed out.

Do you turn off the prompt?  Normally you're NOT at the leftmost column when
you're expected to type in another form.

			 If I now type "BAR ", nothing happens.  
	You call that two-line message nothing?  I think I expected more the
	reverse complaint.  Oh well, so much for my powers of
	prognostication...

    I tried it again this afternoon and I insist that absolutely -nothing-
    happens when I type that "BAR ".  Perhaps we aren't communicating.  
Yeah, but it's not your fault.  I misread you.  Sorry.
									Here is
    what happened step-by-step, keystroke-by-keystroke:  I type "FOO ".  After I
    type the space I get this little two line message about typing rubout to
    correct my input.  The position of my cursor then misleads me into believing
    that I am in a position to type another form.  I now type "BAR ".  After
    typing that space, NOTHING HAPPENS.  OK?  
Yep.
					      Something should give me some
    feedback to let me know I am losing.  Is there anything I could type there
    other than an editing command or <Abort> that would do anything useful?

Yes.  It should gracefully absorb your typeahead, until you notice the
error.  For me, that was the biggest loss of going into the debugger.

    Perhaps when I type the "B" it should insert it right after the "FOO ", to
    let me know that it what I am -really- typing, and then feep my bell and
    redisply the warning message or something.

This is getting closer.  It wouldn't work very well in the presence of
typeahead, though, since you'd never get to see the message.  I think it
has to leave the message there, but if it could just shove it down as
you go.  The fact that the error message always goes with the FIRST form
may be midly confusing, but I think you'd get used to that easily enough?

Anyway, thanks for explaining.

	(fs:define-canonical-type :scm "SCM"
	  (:unix "SM"))

	(push '(:scm . :lisp) fs:*file-type-mode-alist*)

    Of course, but don't you think its a little wierd to make somebody who only
    wants to customize his editor a little have to go and understand all of the
    arguments to FS:DEFINE-CANONICAL-TYPE?  
No, frankly.  It's not difficult.  It's just a way of specifying how
to recognize that type on various hosts.  The (:unix "SM") is just how
to specify exceptions to the norm.  Very simple.

					    I'll bet there are things about the
    case of the various strings that are important, right?  I don't want to
    think about Unix, I just want files on OZ named "foo.scm" to read into my
    Zwei in Lisp mode.

I was just trying to be as descriptive and general as possible in my
example.  You can leave off the (:unix "SM"), if you only care about OZ,
or for that matter like "SCM" even on unix, which is quite reasonable!
And if you'd read the documentation (unfortunately, you'd have to read
it in BOTH places, not just one), you'd have learned that if you don't
want to define a canonical type, you can just use the string.  (Yes,
case matters.  Upper-case will do for anything normal.)  But then, you
lose the advantages of the cross-host hackery you get with canonical
types.  It's up to you.
19-Apr-85 07:12:37-EST,2069;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 19 Apr 85 07:12-EST
Received: from 40700024620 by MIT-MC via Chaosnet; 19 APR 85  07:12:57 EST
Received: from SCRC-CROW by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 217880; Fri 19-Apr-85 06:56:13-EST
Date: Fri, 19 Apr 85 06:55 EST
From: Robert W. Kerns <RWK@SCRC-YUKON.ARPA>
Subject: parse-pathname of twenex pathname can't handle -1
To: David Vinayak Wallace <GUMBY@MIT-MC.ARPA>
cc: BUG-LISPM@MIT-MC.ARPA
In-Reply-To: <[MIT-MC].461036.850419.GUMBY>
Message-ID: <850419065547.5.RWK@CROW.SCRC.Symbolics.COM>

    Date: Fri,19 Apr 85 05:40:54 EST
    From: David Vinayak Wallace <GUMBY@MIT-MC>

	Date: Fri, 19 Apr 85 03:32 EST
	From: Robert W. Kerns <RWK at SCRC-YUKON.ARPA>

	Well, -2 means :OLDEST, like 0 means :NEWEST.  You can help me
	make sense of this if you'll refresh my memory of what -1 means.

	The code looks like it hacks -1 for something, but since I don't
	remember just what -1 really means, I'm not sure what's going on.

	    >>Error: Version must be numeric in oz:[gumby.foo]a.b.-1

	I guess the message is a bit silly in this case...

	    While in the function (:method tenex-family-pathname-mixin :parse-namestring)  parse-pathname  si:*eval

    Generation Number 	Represents

	    0 		The highest existing generation number
	    -1 		One greater than the highest existing generation number

Oh, I >think< I understand.  (I'm not going to take time to really
check that I do).  I think -1 is just :NEWEST for output, while
0 is :NEWEST for input.  I believe where I saw this was in the
:STRING-FOR-HOST message, which took an optional DIRECTION, and
used that to decide whether to use -1 or 0.  It seems to me that
this is probably the best that it can do, and that probably making
"-1" parse would only add to the confusion, but I could be convinced
otherwise.

	    -2 		The lowest existing generation number
	    -3 or * 	All existing generations.

    Bet you didn't know about -3, eh?

    (Neither did I until I looked it up)

    david
19-Apr-85 07:29:38-EST,1720;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 19 Apr 85 07:29-EST
Date: Fri,19 Apr 85 07:29:38 EST
From: David Vinayak Wallace <GUMBY@MIT-MC>
Subject:  parse-pathname of twenex pathname can't handle -1
To: RWK@SCRC-YUKON
cc: BUG-LISPM@MIT-MC
In-reply-to: Msg of Fri 19 Apr 85 06:55 EST from Robert W. Kerns <RWK at SCRC-YUKON.ARPA>
Message-ID: <[MIT-MC].461096.850419.GUMBY>

    Date: Fri, 19 Apr 85 06:55 EST
    From: Robert W. Kerns <RWK at SCRC-YUKON.ARPA>

        Date: Fri,19 Apr 85 05:40:54 EST
        From: David Vinayak Wallace <GUMBY@MIT-MC>

        Generation Number 	Represents

    	    0 		The highest existing generation number
    	    -1 		One greater than the highest existing generation number

    Oh, I >think< I understand.  (I'm not going to take time to really
    check that I do).  I think -1 is just :NEWEST for output, while
    0 is :NEWEST for input.  I believe where I saw this was in the
    :STRING-FOR-HOST message, which took an optional DIRECTION, and
    used that to decide whether to use -1 or 0.  It seems to me that
    this is probably the best that it can do, and that probably making
    "-1" parse would only add to the confusion, but I could be convinced
    otherwise.

    	    -2 		The lowest existing generation number
    	    -3 or * 	All existing generations.

It seems the lisp machine ought to accept anything the host will
(otherwise, why do your vms and twenex filename parsers accept both <> and
[] as directory delimiters?).  Interlisp does the opposite, with
essentially one filename syntax, which leads to all sorts of confusion.

david

PS: On the same point, it's a pain that "~" doesn't work for UNIX filenames.
19-Apr-85 09:27:28-EST,1715;000000000000
Received: from MIT-JIMI by MIT-OZ via Chaosnet; 19 Apr 85 09:27-EST
Date: Friday, 19 April 1985, 09:27-EST
From: Ken Haase <KWH at OZ>
Subject: Logical Pathname Names  Lossage
To: Robert W. Kerns <RWK at SCRC-YUKON>
cc: KWH at OZ, GAVAN at OZ, joseph at SCRC-QUABBIN, HENRY at OZ,
    jcma at MIT-MC, Reti at SCRC-VALLECITO, BUG-LISPM at OZ
In-Reply-To: <850419031255.7.RWK@CROW.SCRC.Symbolics.COM>
Message-ID: <850419092715.1.KWH@JIMI.MIT>

I hesitate to jump into the fray over logical pathnames, but I think
that the functionality which people seem to be asking for is a
reasonable one:  in the same way that you can "alias" symbols, you
should be able to alias directory names.  The argument that "logical
pathnames" are a "representation" of some physical directory system
doesn't hold up; the reason we have a "re-presentation" is because some
aspects of the original are difficult to deal with (like particular host
names, three letter file types, etc).  

But on the other hand, having back translation is certainly critical for
many purposes (some of which have been presented), as well as for just
maintaining the well-foundedness of the representation.

It seems that one solution to this problem which takes in both camps is
to imitate the functionality of links in the representation; make it
possible for a logical pathname for the logical host FOO to translate
into another logical pathname for the host FOO.  Since this goes in only
one direction, any one translation is reversible (back translation
works), but since many logical directories can refer (by a chain of
references), to the same physical directory, the "directory aliasing"
camp is happy as well.

Ken
19-Apr-85 12:49:29-EST,6222;000000000000
Received: from MIT-REAGAN by MIT-OZ via Chaosnet; 19 Apr 85 12:49-EST
Date: Friday, 19 April 1985, 12:49-EST
From: CJL at OZ
Sender: bug-lispm at OZ
Subject: Error while in neti:read-object-file-and-update
To: BUG-LISPM at OZ
Message-ID: <850419124912.1.FILE-SERVER@REAGAN.MIT>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 8.3, Mailer 43.0,
microcode TMC5-MIC 319, on Lisp Machine Ronald Reagan:

I was updating the internet namespace, and it blew out with this:

>>Error: Object/name mismatch
While in the function (:METHOD NETI:NAMESPACE :REMOVE-OBJECT)  (:METHOD NET:OBJECT :WHOPPER :CHANGE-OF-ATTRIBUTES)  (:METHOD FS:MULTICS-HOST :COMBINED :CHANGE-OF-ATTRIBUTES)

Here's notifications it printed out before getting the error.

12:37:04 Moving name INTERNET|CISL-SERVICE from #<MULTICS-HOST INTERNET|CISL-SERVICE-MULTICS 56372534> to #<MULTICS-HOST CISL-SERVICE-MULTICS 56305457>.
         Recent servers contacted are REAGAN
12:37:04 Moving name INTERNET|CISL-MULTICS from #<MULTICS-HOST INTERNET|CISL-SERVICE-MULTICS 56372534> to #<MULTICS-HOST CISL-SERVICE-MULTICS 56305457>.
         Recent servers contacted are REAGAN
12:37:04 Moving name INTERNET|CISL from #<MULTICS-HOST INTERNET|CISL-SERVICE-MULTICS 56372534> to #<MULTICS-HOST CISL-SERVICE-MULTICS 56305457>.
         Recent servers contacted are REAGAN
12:37:04 Moving name INTERNET|DEVMULTICS from #<MULTICS-HOST INTERNET|CISL-SERVICE-MULTICS 56372534> to #<MULTICS-HOST CISL-SERVICE-MULTICS 56305457>.
         Recent servers contacted are REAGAN
12:37:04 Moving name INTERNET|MIT-DEVMULTICS from #<MULTICS-HOST INTERNET|CISL-SERVICE-MULTICS 56372534> to #<MULTICS-HOST CISL-SERVICE-MULTICS 56305457>.
         Recent servers contacted are REAGAN
12:36:57 Merging #<ITS-HOST AI 56554151> with #<ITS-HOST INTERNET|MIT-AI 56367634>.  This may cause problems in dealing with these objects until the next use of (SI:FULL-GC).
         Recent servers contacted are REAGAN


>>Error: Object/name mismatch
While in the function (:METHOD NETI:NAMESPACE :REMOVE-OBJECT)  (:METHOD NET:OBJECT :WHOPPER :CHANGE-OF-ATTRIBUTES)  (:METHOD FS:MULTICS-HOST :COMBINED :CHANGE-OF-ATTRIBUTES)

(:METHOD NETI:NAMESPACE :REMOVE-OBJECT):  (P.C. = 24)
   Arg 0 (SELF): #<NAMESPACE INTERNET 56350563>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NETI:NAMESPACE -- 11. IV's, 1. FL's 104215464>
   Arg 2 (OPERATION): :REMOVE-OBJECT
   Arg 3 (OBJECT): #<MULTICS-HOST INTERNET|CISL-SERVICE-MULTICS 56372534>
   Arg 4 (OBJECT-CLASS): :HOST
   Arg 5 (NAME): #<NAME INTERNET|CISL-SERVICE-MULTICS 56372461>
   Local 6 (NAME-ENTRY): (#<NAME INTERNET|CISL-SERVICE-MULTICS 56372461> (-1. -1. 0.) #<MULTICS-HOST CISL-SERVICE-MULTICS 56305457>)

(:METHOD NET:OBJECT :WHOPPER :CHANGE-OF-ATTRIBUTES):  (P.C. = 67)
   Arg 0 (SELF): #<MULTICS-HOST INTERNET|CISL-SERVICE-MULTICS 56372534>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NET:OBJECT -- 4. IV's, 1. FL's 104721322>
   Arg 2 (.WHOPPER-CONTINUATION.): #<DTP-COMPILED-FUNCTION (:INTERNAL (:METHOD FS:MULTICS-HOST :COMBINED :CHANGE-OF-ATTRIBUTES) 0.) 14221406>
   Arg 3 (.OLD-SELF-MAPPING-TABLE.): #<Map to flavor FS:MULTICS-HOST -- 0. IV's, 4. FL's 104721346>
   Arg 4 (.OPERATION.): :CHANGE-OF-ATTRIBUTES

(:METHOD FS:MULTICS-HOST :COMBINED :CHANGE-OF-ATTRIBUTES):  (P.C. = 13)
   Arg 0 (SELF): #<MULTICS-HOST INTERNET|CISL-SERVICE-MULTICS 56372534>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:MULTICS-HOST -- 0. IV's, 4. FL's 104721346>
   Arg 2 (.OPERATION.): :CHANGE-OF-ATTRIBUTES
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

(:METHOD NET:OBJECT :DELETE-FROM-NAMESPACE):  (P.C. = 14)
   Arg 0 (SELF): #<MULTICS-HOST INTERNET|CISL-SERVICE-MULTICS 56372534>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NET:OBJECT -- 4. IV's, 1. FL's 104721322>
   Arg 2 (OPERATION): :DELETE-FROM-NAMESPACE
   Arg 3 (NAMESPACE): #<NAMESPACE INTERNET 56350563>

NETI:DELETE-OBJECT-FROM-NAMESPACE:  (P.C. = 42)
   Arg 0 (OBJECT): #<MULTICS-HOST INTERNET|CISL-SERVICE-MULTICS 56372534>
   Arg 1 (NAMESPACE): #<NAMESPACE INTERNET 56350563>
   Arg 2 (DONT-UPDATE-FILES): T

NETI:DELETE-OLD-OBJECTS-FROM-NAMESPACE:  (P.C. = 63)
   Arg 0 (NAMESPACE): #<NAMESPACE INTERNET 56350563>
   Arg 1 (OBJECTS): (#<INTERNET-NETWORK INTERNET 56350204> #<RANDOM-HOST RSRE-SERVICE-GW 56350651> #<RANDOM-HOST NTARE-GATEWAY 56350745> #<RANDOM-HOST UCL-GATEWAY 56351021> #<RANDOM-HOST DFVLR-GATEWAY 56351064> #<RANDOM-HOST BBN-FIBERB-GW 56351131> #<RANDOM-HOST BBN-FIBER-GATEWAY 56351216> #<UNIX-HOST UTAH-CS 56351273> #<RANDOM-HOST BBN-FIBERA-GW 56351334> #<UNIX-HOST CSNET-RELAY 56351435> ...)
   Rest arg: (:CLASSES (:HOST) :TIMESTAMP 54.)

NETI:READ-OBJECT-FILE-AND-UPDATE-2:  (P.C. = 156)
   Arg 0 (NAMESPACE): #<NAMESPACE INTERNET 56350563>
   Arg 1 (PATHNAME): #<LMFS-PATHNAME "B:>sys>site>Internet-Hosts.text">
   Local 1 (PATHNAME): #<LMFS-PATHNAME "B:>sys>site>Internet-Hosts.text.6">
   Rest arg: (:CLASS :HOST)

NETI:READ-OBJECT-FILE-AND-UPDATE:  (P.C. = 33)
   Arg 0 (NAMESPACE): "INTERNET"
   Local 0 (NAMESPACE): #<NAMESPACE INTERNET 56350563>
   Arg 1 (CLASS-NAME): :HOST

SI:*EVAL:  (P.C. = 403)
   Arg 0 (FORM): (NETI:READ-OBJECT-FILE-AND-UPDATE "INTERNET" :HOST)
   Local 0 (FORM): NIL
   --Defaulted args:--
   Arg 1 (ENV): NIL
   Arg 2 (HOOK): NIL

(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0.):  (P.C. = 152)
   Arg 0 (.LEXICAL-ENVIRONMENT-POINTER.): #<DTP-LOCATIVE 500101>

TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
   Arg 0 (NEW-MODE): :BLAST
   Arg 1 (STREAM): #:TERMINAL-IO-SYN-STREAM
   Arg 2 (CONTINUATION): #<LEXICAL-CLOSURE (:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0.) 500106>

SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
   Arg 0 (NAME): "Lisp Top Level"
   Arg 1 (ABORT-FUNCTION): NIL
   Arg 2 (READ-FUNCTION): NIL
   Arg 3 (EVAL-FUNCTION): NIL
   Arg 4 (PRINT-FUNCTION): NIL

SI:LISP-COMMAND-LOOP:  (P.C. = 67)
   Arg 0: #<LISP-LISTENER Lisp Listener 1 43200216 exposed>
   Rest arg: (:NAME "Lisp Top Level")

SI:LISP-TOP-LEVEL1:  (P.C. = 5)
   Arg 0 (STREAM): #<LISP-LISTENER Lisp Listener 1 43200216 exposed>

SI:LISP-TOP-LEVEL2:  (P.C. = 5)

SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
   Arg 0 (IGNORE): NIL
19-Apr-85 13:58:18-EST,602;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 19 Apr 85 13:58-EST
Received: from MIT-REAGAN by MIT-MC via Chaosnet; 19 APR 85  13:53:19 EST
Date: Friday, 19 April 1985, 13:52-EST
From: CJL at OZ
Sender: bug-lispm at OZ
Subject: neti:read-object-file-and-update
To: BUG-LISPM at OZ
Message-ID: <850419135226.2.FILE-SERVER@REAGAN.MIT>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 8.3, Mailer 43.0,
microcode TMC5-MIC 319, on Lisp Machine Ronald Reagan:

I think I found my problem. I built the object file from mc: sysnet;
hstnic, which is not the same as the host table at the nic.
19-Apr-85 16:02:08-EST,1842;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 19 Apr 85 16:01-EST
Date: Fri,19 Apr 85 16:00:56 EST
From: Roland G. Ouellette <ROLY@MIT-MC>
Subject:  Logical Pathname Names  Lossage
To: RWK@SCRC-YUKON
cc: BUG-LISPM@MIT-OZ
In-reply-to: Msg of 18 Apr 1985 22:34-EST from Robert W. Kerns <RWK at SCRC-YUKON>
Message-ID: <[MIT-MC].461696.850419.ROLY>

    From: Robert W. Kerns <RWK at SCRC-YUKON>

    Try this model instead:  A logical pathname host is an abstract
    MODEL of a physical filesystem.  It is not a collection of links.
    In fact, it doesn't model links, and it currently doesn't handle
    them well when the physical filesystem uses them (or similar
    concepts, like VMS logical names).  The logical hierarchy REPRESENTS
    the physical one.  Having two logical directories point to the same
    physical one is a clear clash with this model.  It's something you
    can do with only certain operating systems (Unix, Multics and VMS).
    You can't call one directory by two different things on TOPS-20, ITS,
    GCOS, MSDOS, LMFS, or FS:LOGICAL-HOST.

Not to add fuel to the fire, but:
You certainly may define logical directories (and logical filenames)
in tops-20, and more than one may point to the same directory (or
file).

[PHOTO:  Recording initiated  Fri 19-Apr-85 3:36pm]

 MIT TOPS-20 Command Processor 5(312132)-2
@define (logical name) fred: <scribe>
@define (logical name) bob: <scribe>
@dir fred:

   OZ:<SCRIBE>
 10BOLD.TMS.1
 10ITAL.TMS.1
 10ROM.TMS.1
 12BOLD.TMS.1
 12ITAL.TMS.1
 12PT.FXD.1
   .GRK.2
   .MTH.1
   .SCR.1
 12ROM.KST.1
   .TMS.1^C
@dir bob:

   OZ:<SCRIBE>
 10BOLD.TMS.1
 10ITAL.TMS.1
 10ROM.TMS.1
 12BOLD.TMS.1
 12ITAL.TMS.1
 12PT.FXD.1
   .GRK.2
   .MTH.1
   .SCR.1^C
@pop

[PHOTO:  Recording terminated  Fri 19-Apr-85 3:38pm]
19-Apr-85 16:04:43-EST,462;000000000000
Mail-From: SAZ created at 19-Apr-85 16:04:04
Date: Fri 19 Apr 85 16:04:04-EST
From: David M. J. Saslav <SAZ@MIT-OZ>
Subject: Re: subdirs
To: mdc@MIT-HTVAX.ARPA
cc: bug-lispm@MIT-OZ
In-Reply-To: Message from "Martin David Connor <mdc@MIT-HTVAX.ARPA>" of Fri 19 Apr 85 00:49:48-EST

No, I didn't log in or enable anything between the failed attempt
and the successful attempt at saving.  All I did was clean up the
redundant buffers.  

dave
-------
19-Apr-85 18:17:56-EST,2693;000000000000
Received: from MIT-MORRISON by MIT-OZ via Chaosnet; 19 Apr 85 18:17-EST
Date: Friday, 19 April 1985, 18:16-EST
From: Gavan Duffy <GAVAN at OZ>
Subject: [Mailer%MIT-OZ@MIT-MC.ARPA: Message of 17-Apr-85 19:36:40]
To: BUG-LISPM at OZ
cc: GZ at OZ, Hornig at STONY-BROOK.SCRC.Symbolics
Message-ID: <850419181644.2.GAVAN@MORRISON.MIT>

This mail to Hornig lost apparently because ZMAIL but some bogus field (COM) on
his address.  Where are these coming from?


Date: Wednesday, 17 April 1985  19:36-EST
Sender: The Mailer Daemon <Mailer%MIT-OZ@MIT-MC.ARPA>
From: The Mailer Daemon <Mailer%MIT-OZ@MIT-MC.ARPA>
To: Mailer%MIT-OZ@MIT-MC.ARPA
Subject:   Message of 17-Apr-85 19:36:40
ReSent-From: GZ@MIT-OZ
ReSent-To: GAVAN@MIT-OZ
ReSent-Date: Thu 18 Apr 1985 03:46-EST

Message failed for the following:
Hornig@MIT-OZ.#Chaos: Can't forward - unknown host "STONY-BROOK.SCRC.Symbolics.COM"
	    ------------
Received: from MIT-MORRISON by MIT-OZ via Chaosnet; 17 Apr 85 19:36-EST
Date: Wed, 17 Apr 85 19:36 EST
From: Gavan Duffy <GAVAN@OZ.MIT>
Subject: Lossage due to ridiculous source withholding policy
To: Hornig@STONY-BROOK.SCRC.Symbolics.COM, GAVAN@OZ.MIT,
    BUG-LISPM@MC.MIT, PHW@OZ.MIT
In-Reply-To: <850417140242.4.HORNIG@PEACE.SCRC.Symbolics.COM>
Message-ID: <850417193620.0.GAVAN@MORRISON.MIT>

    Date: Wed, 17 Apr 85 14:02 EST
    From: Charles Hornig <Hornig@STONY-BROOK.SCRC.Symbolics.COM>

	Date: Tue, 16 Apr 85 11:06 EST
	From: Gavan Duffy <GAVAN@OZ.MIT>

	In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 8.2,
	microcode TMC5-MIC 319, FEP 22, on Lisp Machine Jim Morrison:

	I need to examine the source for ZWEI:NETWORK-SEND-IT to figure out how to
	keep Zmail from trying to connect to OZ when sending mail (notice local var
	10).  However, because some PINHEAD decided to withhold the Zmail sources, I
	can't.

	Until this RIDICULOUS source withholding policy is lifted, Symbolics' products
	are inferior to any other that does not withhold sources.

	Please feel free to express my absolute disgust to whoever's responsible for
	this lossage.  Also, please let me know whether I can expect a resolution of
	these problems or should instead look into using a Lambda.

	>>Break: 
	While in the function PROCESS-WAIT  CHAOS:WAIT  CHAOS:WAIT-FOR-CONNECT

    It is sending mail through OZ because OZ is your site's
    store-and-forward mail server.  If you want to use some other host, you
    can set ZWEI:*MAIL-NETWORK-HOST* to override ZMail's selection.

If OZ is down, why isn't the lisp machine smart enough to send it via some
other host?  It used to do it in release 5.  I wonder whether Lambdas can do
it.
19-Apr-85 18:42:23-EST,1417;000000000001
Received: from MIT-MC by MIT-OZ via Chaosnet; 19 Apr 85 18:42-EST
Received: from MIT-OZ by MIT-MC via Chaosnet; 19 APR 85  18:42:34 EST
Received: from MIT-MORRISON by MIT-OZ via Chaosnet; 19 Apr 85 18:41-EST
Date: Fri, 19 Apr 85 18:39 EST
From: Gavan Duffy <GAVAN@OZ.MIT>
Subject: Not about "Lossage due to ridiculous source withholding policy"
To: DCP@SCRC-QUABBIN.ARPA, GAVAN@OZ.MIT
cc: Hornig@SCRC-STONY-BROOK.ARPA, BUG-LISPM@MIT-MC.ARPA, PHW@OZ.MIT
In-Reply-To: <850418125924.6.NFEP@NEPONSET.SCRC.Symbolics.COM>
Message-ID: <850419183958.5.GAVAN@MORRISON.MIT>

    Date: Thursday, 18 April 1985, 12:59-EST
    From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>

	Date: Wed, 17 Apr 85 19:36 EST
	From: Gavan Duffy <GAVAN@OZ.MIT>

	    Date: Wed, 17 Apr 85 14:02 EST
	    From: Charles Hornig <Hornig@STONY-BROOK.SCRC.Symbolics.COM>

	    It is sending mail through OZ because OZ is your site's
	    store-and-forward mail server.  If you want to use some other host, you
	    can set ZWEI:*MAIL-NETWORK-HOST* to override ZMail's selection.

	If OZ is down, why isn't the lisp machine smart enough to send it via some
	other host?  It used to do it in release 5.  I wonder whether Lambdas can do
	it.

    Whether Lambdas can or cannot is in no way related to the source
    withholding policy.

Only from the perspective of a ``customer''.  Fortunately, I'm not one of those.
19-Apr-85 18:58:42-EST,2358;000000000000
Received: from MIT-MORRISON by MIT-OZ via Chaosnet; 19 Apr 85 18:58-EST
Date: Friday, 19 April 1985, 18:57-EST
From: Gavan Duffy <GAVAN at OZ>
Subject: Whole directory missing.
To: DCP at SCRC-QUABBIN, GAVAN at OZ
cc: BUG-LISPM at OZ
In-Reply-To: <850418145104.1.NFEP@NEPONSET.SCRC.Symbolics.COM>
Message-ID: <850419185727.6.GAVAN@MORRISON.MIT>

    Date: Thursday, 18 April 1985, 14:51-EST
    From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>

	Date: Wednesday, 17 April 1985, 19:28-EST
	From: Gavan Duffy <GAVAN at OZ>

	Why the hell restrict any of it?  I'm sorry, but withholding software just
	doesn't protect you.  All it does is punish your customers and poor,
	insignificant users, like myself.  I'm prepared to be convinced otherwise, but
	no one has done so.

    Parts of those files (sys:l-sys;) contain things that describe the
    architecture, what makes the machine tick, and what makes the machine
    fast.  Espionage is a lot easier to prove than copyright violations.
    Indeed, other parts of those files aren't "interesting" for those
    reasons.

I just received a flyer saying that David J. Stryker of Symbolics, Inc.  will
deliver a lecture at MIT on Tuesday the 23rd entitled ``The Symbolics 3600
Architecture''.  If you're so all-fired concerned about protecting the
architecture that you withhold sources related to it, why give lectures on it
at the same time?  Is this not an inconsistency?
						
	Anyway, my point was not that Symbolics has foolishly decided to withhold
	sources, thereby shooting themselves in the foot by making LMI Lambdas look
	that much better, although all this is certainly true.   My point was that
	PROBEF barfed.  If the file's not there, PROBEF should just return NIL.  The
	documentation says so.

    OK, it's on the bug list.  Considering the type of mail we have gotten
    in your direction, and the lack of an exact complaint, it's a bit hard
    to tell this is what you were complaining about.

I reported that PROBEF barfed, not that ARRAY-ELEMENTS-PER-Q was withheld.

I would have thought that this bug was obvious.  It's only incidental that the
directory was not there because of the software withholding policy.  The
people who you pay to withhold software should be instructed to keep their
grubby hands off the directories.
19-Apr-85 19:04:39-EST,1195;000000000000
Received: from MIT-MORRISON by MIT-OZ via Chaosnet; 19 Apr 85 19:04-EST
Date: Friday, 19 April 1985, 19:03-EST
From: Gavan Duffy <GAVAN at OZ>
Subject: Re: Whole directory missing.
To: DCP at SCRC-QUABBIN, MLY at OZ, bug-lispm at OZ
In-Reply-To: <850418162458.2.NFEP@NEPONSET.SCRC.Symbolics.COM>
Message-ID: <850419190332.7.GAVAN@MORRISON.MIT>

    Date: Thursday, 18 April 1985, 16:24-EST
    From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>

	Date: Thu 18 Apr 85 01:38:48-EST
	From: mly

	    Date: Wednesday, 17 April 1985, 12:59-EST
	    From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>

	    I'll guess that all of the L-SYSTEM-INTERNALS subsystem sources got
	    restricted.  My current opinion is that the files SYSDEF and SYSDF1
	    should be carefully split into four files, two of which can be
	    unrestricted.

	Gosh, does this mean that %%q-pointer is sensitive information??

    Look folks, I'm trying to be constructive.  This kind of response is not
    at all constructive and isn't going to help unrestricting various
    sources.

I suppose you have to expect this sort of sarcasm from people who use and
extend RMS's system.
19-Apr-85 19:31:42-EST,2400;000000000001
Received: from MIT-MORRISON by MIT-OZ via Chaosnet; 19 Apr 85 19:31-EST
Date: Friday, 19 April 1985, 19:30-EST
From: Gavan Duffy <GAVAN at OZ>
Subject: Logical Pathname Names  Lossage
To: RWK at SCRC-YUKON, GAVAN at OZ
cc: joseph at SCRC-QUABBIN, HENRY at OZ, jcma at MIT-MC, BUG-LISPM at OZ
In-Reply-To: <850419025827.6.RWK@CROW.SCRC.Symbolics.COM>
Message-ID: <850419193027.8.GAVAN@MORRISON.MIT>
Fonts: CPTFONT, CPTFONTB, TVFONT

    Date: Friday, 19 April 1985, 02:58-EST
    From: Robert W. Kerns <RWK at SCRC-YUKON>

	Date: Mon, 15 Apr 85 04:17 EST
	From: Gavan Duffy <GAVAN@OZ.MIT>

        All I want to do is to have multiple names for the same logical
	directory, for the sake of convenience.  This is unreasonable?  

    Yes.

	Logical	pathnames should have this flexibility.

    Whatever for?  What do they have to do with the purpose of logical pathnames?
    How do they make it easier to distribute software?  Despite repeated requests,
    none of you who are doing the yelling have ever answered this question.

Who's yelling?  You know as well as I do that remarks are overamplified in
computer mail.  Please don't overreact.

    If you want an abbreviation facility, ask for an abbreviation facility.  

OK.  Consider yourself asked.  I believe I asked for logical pathname
completion a couple of releases ago.  That would help also.

	Setting FS:*CHECK-FOR-MULTIPLE-TRANSLATIONS* to NIL fixes things for me for
	the time being.

    If you want to set FS:*CHECK-FOR-MULTIPLE-TRANSLATIONS* to NIL,
    it's fine with me.  If it gives you what you want, then that's
    great!  However, I don't think the problems that ensue are acceptable
    for general use.

You're right.  I came across them ultimately.

    I am finding it difficult to accept that this extra bit of typing
    convenience is as important to you as you make it out to be.  But if
    it is, you should move your focus to your need for more typing convenience,
    and not get bogged down in the specific mechanics of warping logical
    pathnames to this end.

OK.  I certainly understand your concerns.  I'm understandably exercised over
the fact that I now have to look all over the place in my code for file
references that don't match whatever I take to be the canonical logical
pathname.  It would have been better if the error had always occured.
