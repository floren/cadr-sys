 8-Jan-84 16:07:06-EST,1449;000000000000
Received: from MIT-LISPM-18 by MIT-OZ via Chaosnet; 8 Jan 84 16:03-EST
Date: Sunday, 8 January 1984, 16:03-EST
From: Robert P. Krajewski <RpK at MIT-OZ>
Subject: Parsing VMS pathnames with wildcards
To: TIM at MIT-ML
CC: BUG-LISPM-MIT at MIT-OZ
In-reply-to: The message of 4 Jan 1984 23:35-EST from Tim McNerney <TIM at MIT-ML>
Message-ID: <[MIT-LISPM-18].1/08/84 16:03:52.RpK>

    Date: Wednesday, 4 January 1984, 23:35-EST
    From: Tim McNerney <TIM at MIT-ML>
    To:   BUG-LISPM
    Re:   Parsing VMS pathnames with wildcards

    In System 98.22, CADR 3.4, ZMail 53.5, MIT-Specific 22.0, microcode 306,
    on Lisp Machine Thirty:

    Currently the version number incorrectly defaults to *

      calf:sys$mumble:[foo]bar.baz    --> version = *

      calf:sys$mumble:[foo]bar.baz;   --> version = :newest  <<<<<<<<<

      calf:sys$mumble:[foo]bar.baz;3  --> version = 3

First, is there really a host named CALF ?  This Lisp Machine (and MC)
don't seem to think so.  

In 98.26, this is what I get:

(send (setq p1 (fs:parse-pathname "PIG:sys$mumble:[foo]bar.baz"))
      :version)
 => ()

(send (setq p2 (fs:parse-pathname "PIG:sys$mumble:[foo]bar.baz;"))
      :version)
 => ()

(send (setq p3 (fs:parse-pathname "PIG:sys$mumble:[foo]bar.baz;3"))
      :version)
 => 3

P1 and P2 are EQ.

Perhaps the pathname defaults are causing the difference.  In exactly
what situation did this occur ?
 8-Jan-84 19:42:44-EST,900;000000000000
Received: from MIT-LISPM-18 by MIT-OZ via Chaosnet; 8 Jan 84 19:42-EST
Date: Sunday, 8 January 1984, 19:42-EST
From: Robert P. Krajewski <RpK at MIT-OZ>
To: kab at MIT-OZ
CC: BUG-LISPM at MIT-OZ
In-reply-to: The message of 4 Jan 1984 08:28-EST from Kim A. Barrett <kab>
Message-ID: <[MIT-LISPM-18].1/08/84 19:42:48.RpK>

    Date: Wednesday, 4 January 1984, 08:28-EST
    From: Kim A. Barrett <kab>
    To:   BUG-LISPM

    the format directive ~D does not convert its arg to an integer
    before printing, though manual describes it as doing so.

      (format nil "~D" 3.5) => "3.5"
      (format nil "~D" 3\2) => "3\2"

Fixed and patched in 98.28.  ~D uses ROUND for the coercion because
there is no FIX in Common Lisp.  Also, the argument has to be a number
of some type.  (I had to fix two other functions which used ~D as ~A to
even get the patch completed !)

``Bob''
 8-Jan-84 20:51:47-EST,958;000000000000
Received: from MIT-ML by MIT-OZ via Chaosnet; 8 Jan 84 20:50-EST
Date: 8 January 1984 20:51 EST
From: Tim McNerney <TIM @ MIT-ML>
Subject:  Parsing VMS pathnames with wildcards
To: RpK @ MIT-OZ
cc: BUG-LISPM-MIT @ MIT-OZ
In-reply-to: Msg of 8 Jan 1984 16:03-EST from Robert P. Krajewski <RpK%MIT-OZ at MIT-MC.ARPA>

1. CALF: does not exist.  It is just my generic VAX host name.

2. According to VMS "FOO.BAR;" does not equal "FOO.BAR" thus the
   following is WRONG!

     (send (setq p1 (fs:parse-pathname "PIG:sys$mumble:[foo]bar.baz"))
            :version)
     => ()

    (send (setq p2 (fs:parse-pathname "PIG:sys$mumble:[foo]bar.baz;"))
           :version)
     => ()   <<<<<<<<<< this should be :NEWEST <<<<<<<<<<<

   I also suspect that there was some incorrect defaulting of the version.
   The default pathname at the time was "ML: STEVE; * *"
   Or perhaps the problem lies with a "wild" vs. "unspecified" ambiguity.

 9-Jan-84 14:04:38-EST,3354;000000000000
Received: from SCRC-RIVERSIDE by MIT-OZ via Chaosnet; 9 Jan 84 14:03-EST
Received: from SCRC-YANGTZE by SCRC-RIVERSIDE with CHAOS; Mon 9-Jan-84 14:06:07-EST
Date: Monday, 9 January 1984, 14:04-EST
From: Carl Hoffman <CWH at SCRC-TENEX>
Subject: PROMPT-AND-READ
To: JCMA at MIT-OZ, Bug-Lispm at MIT-OZ
Cc: CWH at SCRC-TENEX
In-reply-to: The message of 7 Jan 84 11:06-EST from JCMA at MIT-OZ

    Date: Saturday, 7 January 1984, 11:06-EST
    From: JCMA@MIT-OZ

    In Release 5.0 [GC'd Beta Test rev 3], Experimental RELATUS 79.0,
    dusty plum, on Lisp Machine Robot-4 (3600):

    Prompt and read has lots of problems such as this blow out on a simple operation.

The :DELIMITED-STRING and :DELIMITED-STRING-OR-NIL keywords are broken in
Release 5, in that they incompatibly take positional arguments instead
of keyword arguments.  This is fixed in Release 5.  For the time being, in
Release 5 beta, use:

  (PROMPT-AND-READ '(:DELIMITED-STRING-OR-NIL (#/. #/! #/?) 250.))

When you receive the next round of patches, use:

  (PROMPT-AND-READ '(:DELIMITED-STRING-OR-NIL :DELIMITER (#/. #/! #/?) :BUFFER-SIZE 250.)) 

    It also fails to:

    * Perform properly when called inside the rubout handler.

Strictly speaking, an operation like PROMPT-AND-READ is ill-defined inside the
input editor, since it is introducing a new prompt.  What should be done with
the prompt already in effect?  Where should the new prompt be displayed?

I think what you are asking for is recursive input editing, for which you must
use the undocumented macro TV:WITH-RH-TYPEIN.  This macro is undocumented
since I still haven't decided how I want recursive input editing to work, but
you can use it for the time being.  Here is a sample input editor command
which invokes the input editor recursively.

(TV:DEFINE-RH-COMMAND EVALUATE-FORM (#\NETWORK)
  (TV:WITH-RH-TYPEIN (QUERY-IO)
    (FORMAT T "~&Value is ~S" (EVAL (PROMPT-AND-READ :EXPRESSION)))))

If you really want to invoke PROMPT-AND-READ from inside a parsing function,
using the the same editing context as the parsing function, then you shouldn't
be calling PROMPT-AND-READ at all, but rather the internal functions which
PROMPT-AND-READ calls, such as READLINE or SYS:READ-NUMBER.

    * Use functions like ZWEI:TYPEIN-LINE-READLINE when its called inside a ZMACS.

The only PROMPT-AND-READ keywords for which it would make sense to call this
would be those which read exactly one line of input, and which never have
read-time errors, such as :STRING, :STRING-OR-NIL, and :STRING-TRIM.  It isn't
possible to report read-time errors using TYPEIN-LINE-READLINE, since the
parser never sees the individual characters as they are being typed.  And
keywords such as :DELIMITED-STRING and :EXPRESSION can't use it since they may
take more than one line of text.

The current implementation of PROMPT-AND-READ only allows options to be given
to the parsing function, not to the common code.  When this is fixed, I will
add an option which will ask it to use the Zwei minibuffer if it is available
for those keywords which read a single line of text, and defer read-time
errors until after the line is read.

Directing QUERY-IO to either ZWEI:*TYPEIN-WINDOW* (the default) or
ZWEI:*TYPEOUT-WINDOW* works fine in conjunction with PROMPT-AND-READ.
 9-Jan-84 14:13:19-EST,1299;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 9 Jan 84 14:11-EST
Received: from SCRC-CHICOPEE by SCRC-QUABBIN with CHAOS; Mon 9-Jan-84 14:15:17-EST
Date: Monday, 9 January 1984, 14:12-EST
From: Daniel L. Weinreb <DLW at SCRC-TENEX>
Subject: (PROCESS-LOCK (LOCF ...)) >>Trap: The first argument ... was not a locative
To: kmp at MIT-MC, BUG-LISPM at MIT-OZ
In-reply-to: The message of 6 Jan 84 19:59-EST from Kent M Pitman <kmp at MIT-MC>

    Date: Friday, 6 January 1984, 19:59-EST
    From: Kent M Pitman <kmp at MIT-MC>

    STORE-CONDITIONAL does not seem to like to store into cons cells.

That's right.  The first argument must be a locative.

    This is a little irritating since (LOCF (CDR ...)) cannot return
    a locative of DTP-LOCATIVE like other LOCF forms can. 

All locatives are "of DTP-LOCATIVE".  What the story really is is that
you can't necessarily get a locative to the cdr of a cons cell, because
some cons cells are stored with a cdr-coded representation, in which
there is no cell that holds the cdr.  The fact that (locf (cdr x))
returns x is a kludge that I have never liked.  It's to make something
or other work, but I think it's confusing.  Anyway, the basic story is
that you can't use the cdr of a cons cell as a location for a lock.
 9-Jan-84 17:42:05-EST,1417;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 9 Jan 84 17:41-EST
Date: Monday, 9 January 1984, 17:42-EST
From: Ken Forbus <KDF at MIT-PYGMALION>
Subject: Undefined Functions eventually leading to blowouts....
To: BUG-LISPM at OZ

In Release 4.5, site configuration 62, on Lisp Machine Jimi Hendrix:

After running for a while (sometime after the first GC warning shows itself), the machine
gets into a state where eval'ing an undefined function causes it to bomb out into the
FEP, and will only restart with a warm boot.  Given the circumstances, how do I get more
information about what is going on so I can send a proper report?  Thanks.
		Ken



>>Break: 
While in the function SI:*EVAL  DEBACLE-TOP-LEVEL  SI:PROCESS-TOP-LEVEL

SI:*EVAL:  (P.C. = 405)
   Arg 0 (FORM): (EH)
   Local 1: NIL
   Local 2 (ARGNUM): 0
   Local 3 (FCTN): #<DTP-COMPILED-FUNCTION DBG 4703355>
   Local 4 (CFCTN): #<DTP-COMPILED-FUNCTION DBG 4703355>
   Local 5 (ARGL): NIL
   Local 6 (MAX-ARGS): 1
   Local 7 (N-ARGS): 0
   Local 8 (ARG-DESC): 1
   Local 9 (TEM): NIL
   Local 10 (COUNT): NIL
   Local 11 (QUOTE-STATUS): NIL
   Local 12 (REST-FLAG): NIL
   Local 13 (FEXPR-FLAG): NIL
   Local 14 (LAMBDA-LIST): NIL

DEBACLE-TOP-LEVEL:  (P.C. = 161)
   Arg 0 (WINDOW): #<DEBACLE-TOPLEVEL-FRAME Debacle Toplevel Frame 1 7200000 exposed>

SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
   Arg 0 (IGNORE): NIL
 9-Jan-84 20:52:16-EST,544;000000000000
Received: from SCRC-TENEX by MIT-OZ via Chaosnet; 9 Jan 84 20:51-EST
Received: from SCRC-NEPONSET by SCRC-TENEX with CHAOS; Mon 9-Jan-84 20:50:40-EST
Date: Monday, 9 January 1984, 20:52-EST
From: Mike McMahon <MMcM at SCRC-TENEX>
Subject: Suboptimal buffer renaming by m-X Rename File when wildcards present
To: Apprentice for KMP <kbe at MIT-OZ>
Cc: BUG-LISPM at MIT-OZ
In-reply-to: The message of 7 Jan 84 14:26-EST from Apprentice for KMP <kbe at MIT-OZ>
Message-ID: <840109205240.6.MMcM@SCRC.SCRC.Symbolics>

Fixed in release 5.
 9-Jan-84 21:47:40-EST,1270;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 9 Jan 84 21:46-EST
Date: 09 Jan 84  1842 PST
From: Fred Lakin <FRD@SU-AI>
Subject: High resolution video projection? 
To:   info-lispm%mit-oz@MIT-MC   

[I apologize to those who have already seen this msg; this is another attempt
to reach LISP machine users as opposed to people on Symbolics' internal mailing
lists]

I want to buy a hi-resolution monochrome video projector suitable for use with
generic LISP machine or Star-type terminals (ie approx 1000 x 1000 pixels).
It would be nice if it cost less than $15K and didn't require expensive 
replacement parts (like light valves).

Does anybody know of such currently on the market?

I know, chances seem dim, so on to my second point: I have heard it would be
possible to make a portable video projector that would cost $5K, weigh 25lb,
and project using monochrome green phosphor.  The problem is that industry
does not feel the market demand would justify production at such a price ...
Any ideas on how to find out the demand for such an item?  Of course if
all of you who might be interested in this kind of projector let me know
your suggestions, that would be a good start.
 
Thanks in advance for replies and/or notions,
Fred Lakin

 9-Jan-84 22:49:36-EST,1576;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 9 Jan 84 22:48-EST
Date: 9 January 1984 22:31 EST
From: Kent M Pitman <KMP @ MIT-MC>
Subject: Idea for new ZWEI utility -- m-X Tags Search And Edit
To: BUG-LISPM @ MIT-MC

In Release 4.5 on Avatar (CADR):

I would like a command in ZWEI which was a cross between 
Tags Query Replace and the setup for Edit Compiler Warnings.
Specifically, I would like it to do something like:

 (DO ((BP (TAGS-SEARCH ..some string..)
	  (TAGS-SEARCH ..some string.. (FORWARD-DEFINITION BP)))
      (BP-LIST '()))
     ((NOT BP)
      (MAKE-SUPPORT-BUFFER-AND-EDIT-LIKE-EDIT-COMPILER-WARNINGS BP-LIST))
   (IF (FQUERY '() "Remember this definition?")
       (PUSH BP BP-LIST)))

I made up some of these function names. They might exist already and do 
different things or might not exist, but use your imagination. Code seemed
more concise as an initial presentation tool. If something is really 
unclear, I'll be glad to clarify.

Basically, it should ask only once per each definition containing the given
string whether to remember the spot. Then, when I'm done, it should go back
and edit all these definitions.

Further, it would be nice if the support buffer did not try to recycle 
itself (since I am highly likely to want to reuse it ... in fact, it's
whole purpose is to save me doing the Tags Search more than once, so if
it gets recycled too fast, it's wasting my time). 

Also, it would be nice if I were prompted for a comment to add to the
support buffer to remind myself later what it was about.
 9-Jan-84 23:14:39-EST,1263;000000000000
Received: from SCRC-TENEX by MIT-OZ via Chaosnet; 9 Jan 84 23:06-EST
Received: from SCRC-EUPHRATES by SCRC-TENEX with CHAOS; Mon 9-Jan-84 23:04:28-EST
Date: Monday, 9 January 1984, 23:03-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: Undefined Functions eventually leading to blowouts....
To: Ken Forbus <KDF at MIT-PYGMALION>
Cc: BUG-LISPM at MIT-OZ
In-reply-to: The message of 9 Jan 84 17:42-EST from Ken Forbus <KDF at MIT-PYGMALION>

    Date: Monday, 9 January 1984, 17:42-EST
    From: Ken Forbus <KDF at MIT-PYGMALION>

    After running for a while (sometime after the first GC warning shows itself), the machine
    gets into a state where eval'ing an undefined function causes it to bomb out into the
    FEP, and will only restart with a warm boot.  

Did you hit c-Abort while entering the debugger for a microcode error, such as an unbound
variable or undefined function?  This is a known bug that is being worked on.

						  Given the circumstances, how do I get more
    information about what is going on so I can send a proper report?  Thanks.

You probably don't have anything yet that would allow you to get the additional information
you need.  The latest version (V17 or newer) of the FEP software would help.
 9-Jan-84 23:18:58-EST,775;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 9 Jan 84 23:18-EST
Date: 9 January 1984 23:18 EST
From: Kent M Pitman <KMP @ MIT-MC>
Subject: New Yank System
To: BUG-LISPM @ MIT-MC

I don't remember if I mentioned this already, but with regard to the
New Yank System, I was disappointed that I didn't see any primitives
documented which allowed the user to gracefully add his own kinds of
history lists for c-m-Y to access. Users are not capable of extending
the system without such a feature, so c-m-Y will gradually lose its
regular nature as "the command to call" as users develop new subsystems
(the KBE has several such contexts) where c-m-Y type things are needed
and put them on other keys because the given c-m-Y is not documented
to be user-extensible.
 9-Jan-84 23:26:27-EST,1549;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 9 Jan 84 23:25-EST
Date: 9 January 1984 23:25 EST
From: Kent M Pitman <KMP @ MIT-MC>
Subject: Some bad concept/function names in Symbolics' New Error System
To: BUG-LISPM @ MIT-MC

I am playing more again with non-fatal conditions and am finding myself
highly bothered by the namings of many of the operations and concepts,
which seem to want to force me to make the things I'm talking about be
fatal. Some examples are:

 catch-error-restart

   What's wrong with:

	(CATCH-ERROR-RESTART (HARMLESS-CONDITION ...)
	 ....)

   where normally HARMLESS-CONDITION is ignored but I (the person writing
   the code with the CATCH-ERROR-RESTART) know that if this condition goes
   off in a certain contour, I want control back...? Answer: Nothing.
   However, the name makes me feel bad because the thing I am catching
   is not an error and I feel like I am abusing the tool.

 :proceed things

   All the things named :PROCEED don't make much sense in the case of
   a non-fatal condition. In some sense, they do not proceed anything
   since it was going to proceed anyway. If anything, they stop something
   since they keep further signalling from happening. It looks funny to
   write

	(DEFMETHOD (HARMLESS-CONDITION :CASE :PROCEED :HANDLED) ()
	  "Stop signalling; this condition has been handled."
	  ':HANDLED)


The :PROCEED thing is less critical than the things with the word ERROR
in their name, but both have bothered me, so I thought I would mention it.
 9-Jan-84 23:27:45-EST,856;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 9 Jan 84 23:26-EST
Received: from SCRC-EUPHRATES by SCRC-TENEX with CHAOS; Mon 9-Jan-84 23:26:31-EST
Date: Mon, 9 Jan 84 23:26 EST
From: "David A. Moon" <Moon%SCRC-TENEX@MIT-MC.ARPA>
Subject: New Yank System
To: Kent M Pitman <KMP@MIT-MC.ARPA>
Cc: BUG-LISPM@MIT-MC.ARPA
In-reply-to: The message of 9 Jan 84 23:18-EST from Kent M Pitman <KMP at MIT-MC>

    Date: 9 January 1984 23:18 EST
    From: Kent M Pitman <KMP @ MIT-MC>

    I don't remember if I mentioned this already, but with regard to the
    New Yank System, I was disappointed that I didn't see any primitives
    documented which allowed the user to gracefully add his own kinds of
    history lists for c-m-Y to access.

Internals of the editor have not been documented yet.  I'm sure you can
figure it out from the sources.
 9-Jan-84 23:32:52-EST,1068;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 9 Jan 84 23:31-EST
Date: 9 January 1984 23:32 EST
From: Kent M Pitman <KMP @ MIT-MC>
Subject: More problems with NES, non-fatal conditions
To: BUG-LISPM @ MIT-MC

I seem to remember seeing something in the documentation somewhere (which
I cannot find now that I am looking for it) that said that it was poor
style to handle a condition and then return NIL pretending that you didn't.
Am I mis-remembering?

The reason I bring this up is that it may well be the case for non-fatal
conditions that you in fact want several surrounding contours to notice
a condition, so you may want the condition to be that you always return
NIL from condition handlers of certain kinds. That way, people can do
(normally from different lexical contours, but here from just one for
presentational ease):

	(CONDITION-BIND ((FOO #'(LAMBDA (IGNORE)
				  (INCF *FOO-COUNT*)
				  NIL)))
	  ...
	  (CONDITION-BIND ((FOO #'(LAMBDA (IGNORE)
				    (PRINT 'FOO-HAPPENED)
				    NIL)))
	    ...
	    (SIGNAL 'FOO)))

10-Jan-84 00:41:03-EST,968;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 10 Jan 84 00:40-EST
Received: from SCRC-NEPONSET by SCRC-TENEX with CHAOS; Mon 9-Jan-84 23:42:35-EST
Date: Mon, 9 Jan 84 23:44 EST
From: Mike McMahon <MMcM%SCRC-TENEX@MIT-MC.ARPA>
Subject: More problems with NES, non-fatal conditions
To: Kent M Pitman <KMP@MIT-MC.ARPA>
Cc: BUG-LISPM@MIT-MC.ARPA
In-reply-to: The message of 9 Jan 84 23:32-EST from Kent M Pitman <KMP at MIT-MC>
Message-ID: <840109234434.2.MMcM@SCRC.SCRC.Symbolics>

    Date: 9 January 1984 23:32 EST
    From: Kent M Pitman <KMP @ MIT-MC>

    I seem to remember seeing something in the documentation somewhere (which
    I cannot find now that I am looking for it) that said that it was poor
    style to handle a condition and then return NIL pretending that you didn't.
    Am I mis-remembering?

Are you referring to the second paragraph of 5.1.4?  I think it's trying
to get at something that isn't relevant to your application.
10-Jan-84 01:25:34-EST,1313;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 10 Jan 84 01:24-EST
Date: 10 January 1984 01:25 EST
From: Kent M Pitman <KMP @ MIT-MC>
Subject:  More problems with NES, non-fatal conditions
To: MMcM @ SCRC-TENEX
cc: KMP @ MIT-MC, BUG-LISPM @ MIT-MC
References: <840109234434.2.MMcM@SCRC.SCRC.Symbolics>,
	    Msg of 9 Jan 84 23:32-EST from Kent M Pitman <KMP at MIT-MC>
In-reply-to: Msg of Mon 9 Jan 84 23:44 EST from Mike McMahon <MMcM%SCRC-TENEX at MIT-MC.ARPA>

    Date: Mon, 9 Jan 84 23:44 EST
    From: Mike McMahon <MMcM at SCRC-TENEX>

        Date: 9 January 1984 23:32 EST
        From: Kent M Pitman <KMP @ MIT-MC>

        I seem to remember seeing something in the documentation somewhere 
	(which I cannot find now that I am looking for it) that said that 
	it was poor style to handle a condition and then return NIL pretending
	that you didn't. Am I mis-remembering?

    Are you referring to the second paragraph of 5.1.4?  I think it's trying
    to get at something that isn't relevant to your application.

Yes, that's the passage. If it doesn't intend to recommend against exactly
what I am doing, it is being unclear. Either examples should be provided 
of what can and cannot be done, or some criterial description of what is
discouraged should be given, or both.
10-Jan-84 02:25:51-EST,2080;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 10 Jan 84 02:25-EST
Received: from SCRC-EUPHRATES by SCRC-TENEX with CHAOS; Tue 10-Jan-84 02:06:04-EST
Date: Tue, 10 Jan 84 02:05 EST
From: "David A. Moon" <Moon%SCRC-TENEX@MIT-MC.ARPA>
Subject: Problem with Signalling and Handling Conditions document
To: bug-lmdoc%SCRC-TENEX@MIT-MC.ARPA
Cc: Kent M Pitman <KMP@MIT-MC.ARPA>, MMcM%SCRC-TENEX@MIT-MC.ARPA,
    BUG-LISPM@MIT-MC.ARPA
In-reply-to: The message of 10 Jan 84 01:25-EST from Kent M Pitman <KMP at MIT-MC>

    Date: 10 January 1984 01:25 EST
    From: Kent M Pitman <KMP @ MIT-MC>

	Date: Mon, 9 Jan 84 23:44 EST
	From: Mike McMahon <MMcM at SCRC-TENEX>

	    Date: 9 January 1984 23:32 EST
	    From: Kent M Pitman <KMP @ MIT-MC>

	    I seem to remember seeing something in the documentation somewhere 
	    (which I cannot find now that I am looking for it) that said that 
	    it was poor style to handle a condition and then return NIL pretending
	    that you didn't. Am I mis-remembering?

	Are you referring to the second paragraph of 5.1.4?  I think it's trying
	to get at something that isn't relevant to your application.

    Yes, that's the passage. If it doesn't intend to recommend against exactly
    what I am doing, it is being unclear. Either examples should be provided 
    of what can and cannot be done, or some criterial description of what is
    discouraged should be given, or both.

[What Kent is doing is defining a non-fatal condition and setting up several
condition-bind handlers in nested program modules.  Each handler notices the
condition and then returns NIL, so that all of the handlers get invoked whenever
the condition is signalled.]

The second paragraph in section 5.1.4 of Signalling and Handling Conditions
(January 1983) looks like it has something to do with this.  Actually it
doesn't; it's discussing the restriction that each condition instance can only
be signalled once.  Frankly I can't understand what this paragraph is trying to
say.  I would just delete it from the document.
10-Jan-84 21:05:27-EST,1467;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 10 Jan 84 21:04-EST
Received: from SCRC-YANGTZE by SCRC-RIVERSIDE with CHAOS; Tue 10-Jan-84 21:07:07-EST
Date: Tue, 10 Jan 84 21:06 EST
From: Carl Hoffman <CWH%SCRC-TENEX@MIT-MC.ARPA>
Subject: Problem with Signalling and Handling Conditions document
To: Moon%SCRC-TENEX@MIT-MC.ARPA, bug-lmdoc%SCRC-TENEX@MIT-MC.ARPA
Cc: KMP@MIT-MC.ARPA, MMcM%SCRC-TENEX@MIT-MC.ARPA, BUG-LISPM@MIT-MC.ARPA
In-reply-to: The message of 10 Jan 84 02:05-EST from David A. Moon <Moon at SCRC-TENEX>

    Date: Tue, 10 Jan 84 02:05 EST
    From: "David A. Moon" <Moon%SCRC-TENEX@MIT-MC.ARPA>
    The second paragraph in section 5.1.4 of Signalling and Handling Conditions
    (January 1983) looks like it has something to do with this.  Actually it
    doesn't; it's discussing the restriction that each condition instance can only
    be signalled once.  Frankly I can't understand what this paragraph is trying to
    say.  I would just delete it from the document.

I think it is trying to say that it is not correct to pass on the condition by
signalling the handler's condition argument, i.e. this is incorrect:

    (DEFUN CONDITION-HANDLER (CONDITION)
	(IF SOMETHING (*THROW ...) (SIGNAL CONDITION)))

Instead you should:

    (DEFUN CONDITION-HANDLER (CONDITION)
	(IF SOMETHING (*THROW ...) NIL))

or:

    (DEFUN CONDITION-HANDLER (CONDITION)
	(IF SOMETHING (*THROW ...) (SIGNAL 'SOME-OTHER-CONDITION)))
11-Jan-84 04:34:15-EST,562;000000000000
Received: from MIT-JANIS by MIT-OZ via Chaosnet; 11 Jan 84 04:34-EST
Date: Wednesday, 11 January 1984, 04:35-EST
From: Ken Haase <KWH at MIT-OZ>
Subject: \datime\ lossage.
To: BUG-LISPM at MIT-OZ

In Release 5.0 [GC'd Beta Test rev 3], Experimental ARLO 10.8,
Dusty plum, on Lisp Machine Janis Joplin (3600):

The following form illustrates a bug in format:  the ~\datime\ operator
doesn't eat up its argument.

(defun test-me ()
  (format t "~&~\datime\ ~a" (time:get-universal-time) 'foo))

(test-me)
1/11/84 04:34:16 2651650456



-- Ken
11-Jan-84 09:46:42-EST,742;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 11 Jan 84 09:46-EST
Received: from SCRC-CONCORD by SCRC-QUABBIN with CHAOS; Wed 11-Jan-84 09:50:21-EST
Date: Wednesday, 11 January 1984, 09:47-EST
From: Bernard S. Greenberg <BSG at SCRC-TENEX>
Subject: \datime\ lossage.
To: KWH at MIT-OZ, BUG-LISPM at MIT-OZ
In-reply-to: The message of 11 Jan 84 04:35-EST from Ken Haase <KWH at MIT-OZ>

    Date: Wednesday, 11 January 1984, 04:35-EST
    From: Ken Haase <KWH at MIT-OZ>
    (defun test-me ()
      (format t "~&~\datime\ ~a" (time:get-universal-time) 'foo))

    (test-me)
    1/11/84 04:34:16 2651650456
    -- Ken
You want ~\time\, not ~\datime\.  ~\datime\ prints the CURRENT time,
and of course, eats no argument.
11-Jan-84 10:05:38-EST,8018;000000000000
Received: from MIT-JANIS by MIT-OZ via Chaosnet; 11 Jan 84 10:05-EST
Date: Wednesday, 11 January 1984, 10:07-EST
From: Ken Haase <KWH at MIT-OZ>
Subject: File server complaint.
To: BUG-LISPM at MIT-OZ

In Release 5.0 [GC'd Beta Test rev 3], Experimental ARLO 10.8,
Dusty plum, on Lisp Machine Janis Joplin (3600):

While printing a random form to an ascii file.  What does this error mean?

>>Error: invalid record size
         For PYGMALION:USRD$:[KWH.ARLO.KB]INQUIR.KBX;1
While in the function (:DEFUN-METHOD FS:FILE-PROCESS-ASYNC-MARK)  (:DEFUN-METHOD FS:FILE-PROCESS-OUTPUT-ASYNC-MARK)  (:METHOD FS:FILE-OUTPUT-STREAM-MIXIN :SEND-OUTPUT-BUFFER)

(:DEFUN-METHOD FS:FILE-PROCESS-ASYNC-MARK):  (P.C. = 20)
   Arg 0 (SELF): #<FILE-OUTPUT-CHARACTER-STREAM "PYGMALION:USRD$:[KWH.ARLO.KB]INQUIR.KBX;1" 47627743>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:FILE-DATA-STREAM-MIXIN -- 6. IV's, 0. FL's 15141006>
   Arg 2 (PKT): #<Chaos Packet 3405536>
   Local 3 (STRING): "O2391 ERROR MSC F invalid record size"

(:DEFUN-METHOD FS:FILE-PROCESS-OUTPUT-ASYNC-MARK):  (P.C. = 21)
   Arg 0 (SELF): #<FILE-OUTPUT-CHARACTER-STREAM "PYGMALION:USRD$:[KWH.ARLO.KB]INQUIR.KBX;1" 47627743>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:FILE-OUTPUT-STREAM-MIXIN -- 6. IV's, 1. FL's 15140776>

(:METHOD FS:FILE-OUTPUT-STREAM-MIXIN :SEND-OUTPUT-BUFFER):  (P.C. = 47)
   Arg 0 (SELF): #<FILE-OUTPUT-CHARACTER-STREAM "PYGMALION:USRD$:[KWH.ARLO.KB]INQUIR.KBX;1" 47627743>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:FILE-OUTPUT-STREAM-MIXIN -- 6. IV's, 1. FL's 15140776>
   Arg 2 (OPERATION): :SEND-OUTPUT-BUFFER
   Rest arg (ARGS): (" FINITION 
(LAMDA DIVERSE-FUNCTION-1 (UNIT SLOT) /"Tries to compute a value by two distinct methods:
     Searches through the INQUIR:SUPERVISOR slots of a unit for a value.
     Ask the user a question.
/" (LET ((CURRENT-DEPENDENCIES (SEND *SLOT-BEING-COMPUTED* :I-DEPEND-ON))) (MULTIPLE-VALUE-BIND (VALUE LUCKY?) (IGNORING-ERRORS (WHEN *SLOT-BEING-COMPUTED* (SEND *SLOT-BEING-COMPUTED* :SET-I-DEPEND-ON CURRENT-DEPENDENCIES)) (|INHERIT-THROUGH-INQUIR:SUPERVISOR| UNIT SLOT)) (SI:DISPLACED B (BnoJ                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    " 490.)

(:METHOD FS:FILE-OUTPUT-CHARACTER-STREAM :COMBINED :SEND-OUTPUT-BUFFER):  (P.C. = 16)
   Arg 0 (SELF): #<FILE-OUTPUT-CHARACTER-STREAM "PYGMALION:USRD$:[KWH.ARLO.KB]INQUIR.KBX;1" 47627743>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:FILE-OUTPUT-CHARACTER-STREAM -- 1. IV's, 6. FL's 15141262>
   Rest arg (.DAEMON-CALLER-ARGS.): (:SEND-OUTPUT-BUFFER " FINITION 
(LAMDA DIVERSE-FUNCTION-1 (UNIT SLOT) /"Tries to compute a value by two distinct methods:
     Searches through the INQUIR:SUPERVISOR slots of a unit for a value.
     Ask the user a question.
/" (LET ((CURRENT-DEPENDENCIES (SEND *SLOT-BEING-COMPUTED* :I-DEPEND-ON))) (MULTIPLE-VALUE-BIND (VALUE LUCKY?) (IGNORING-ERRORS (WHEN *SLOT-BEING-COMPUTED* (SEND *SLOT-BEING-COMPUTED* :SET-I-DEPEND-ON CURRENT-DEPENDENCIES)) (|INHERIT-THROUGH-INQUIR:SUPERVISOR| UNIT SLOT)) (SI:DISPLACED B (BnoJ                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    " 490.)

(:METHOD SI:BASIC-BUFFERED-OUTPUT-STREAM :SEND-CURRENT-OUTPUT-BUFFER):  (P.C. = 12)
   Arg 0 (SELF): #<FILE-OUTPUT-CHARACTER-STREAM "PYGMALION:USRD$:[KWH.ARLO.KB]INQUIR.KBX;1" 47627743>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:BASIC-BUFFERED-OUTPUT-STREAM -- 3. IV's, 0. FL's 15141031>
   Arg 2 (OPERATION): :SEND-CURRENT-OUTPUT-BUFFER

(:METHOD SI:BASIC-BUFFERED-OUTPUT-STREAM :SETUP-NEW-OUTPUT-BUFFER):  (P.C. = 4)
   Arg 0 (SELF): #<FILE-OUTPUT-CHARACTER-STREAM "PYGMALION:USRD$:[KWH.ARLO.KB]INQUIR.KBX;1" 47627743>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:BASIC-BUFFERED-OUTPUT-STREAM -- 3. IV's, 0. FL's 15141031>
   Arg 2 (OPERATION): :SETUP-NEW-OUTPUT-BUFFER

(:METHOD FS:FILE-OUTPUT-CHARACTER-STREAM :COMBINED :SETUP-NEW-OUTPUT-BUFFER):  (P.C. = 10)
   Arg 0 (SELF): #<FILE-OUTPUT-CHARACTER-STREAM "PYGMALION:USRD$:[KWH.ARLO.KB]INQUIR.KBX;1" 47627743>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:FILE-OUTPUT-CHARACTER-STREAM -- 1. IV's, 6. FL's 15141262>
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

(:METHOD SI:BASIC-BUFFERED-OUTPUT-STREAM :TYO):  (P.C. = 12)
   Arg 0 (SELF): #<FILE-OUTPUT-CHARACTER-STREAM "PYGMALION:USRD$:[KWH.ARLO.KB]INQUIR.KBX;1" 47627743>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:BASIC-BUFFERED-OUTPUT-STREAM -- 3. IV's, 0. FL's 15141031>
   Arg 2 (OPERATION): :TYO
   Arg 3 (CH): 40.

Rest of stack:
SI:PRINT-LIST:  (P.C. = 7)
SI:PRINT-OBJECT:  (P.C. = 126)
SI:PRINT-LIST:  (P.C. = 32)
SI:PRINT-OBJECT:  (P.C. = 126)
SI:PRINT-LIST:  (P.C. = 32)
SI:PRINT-OBJECT:  (P.C. = 126)
SI:PRINT-LIST:  (P.C. = 32)
SI:PRINT-OBJECT:  (P.C. = 126)
SI:PRINT-LIST:  (P.C. = 32)
SI:PRINT-OBJECT:  (P.C. = 126)
PRINT:  (P.C. = 16)
DUMP-KB-TO-STREAM:  (P.C. = 200)  (from PYGMALION:[KWH.ARLO]KBASES)
SAVE-KB:  (P.C. = 70)  (from PYGMALION:[KWH.ARLO]KBASES)
SI:*EVAL:  (P.C. = 370)
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 200)
SI:LISP-COMMAND-LOOP:  (P.C. = 115)
ARLO-TOP-LEVEL1:  (P.C. = 30)  (from PYGMALION:SYS$DISK:[KWH.ARLO.PATCHES]10X7)
SI:PROCESS-RUN-FUNCTION-INTERNAL:  (P.C. = 51)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
11-Jan-84 15:44:29-EST,545;000000000000
Received: from MIT-LISPM-18 by MIT-OZ via Chaosnet; 11 Jan 84 15:42-EST
Date: Wednesday, 11 January 1984, 15:43-EST
From: Kim A. Barrett <kab at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In Don't-dump-a-band! Inconsistent (unreleased patches loaded) System 98.28,
CADR 3.4, ZMail 53.9, MIT-Specific 22.0, microcode 306, ZM MIT,
on Lisp Machine Eighteen:

The new patch (98.27) for READLINE to make it properly handle the eof-option is incorrect.  It
is still passing READ-DELIMITED-STRING the eof arg logically inverted from what is intended.
12-Jan-84 03:24:36-EST,998;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 12 Jan 84 03:23-EST
Date: 12 January 1984 03:14 EST
From: Pandora B. Berman <CENT @ MIT-MC>
Subject: Old 222 patches
To: JPT @ MIT-MC, KMP @ MIT-MC
cc: BUG-LISPM @ MIT-MC

    Date: Sun, 8 Jan 84 23:26 EST
    From: Joseph R Goldstone <joseph%SCRC-QUABBIN@MIT-MC.ARPA>
    To: cent@MIT-OZ.ARPA
	Date: Sun 8 Jan 84 11:15-EST
	From: Kent M Pitman <KMP@MIT-OZ>
	Subject: Old 222 patches
	To: BUG-LISPM@SCRC-TENEX, FILE-R@MIT-OZ
	Is it possible for us to get at least the .LISP versions of the
        system 222 patches from before 191? I keep doing m-. on functions
        and getting (New File) if they are patched. This means
	OZ:PS:<S.PATCH>SYSTEM-222-1.LISP  through
	OZ:PS:<S.PATCH>SYSTEM-222-190.LISP
    let me know if you can pull these off of tape.....

they are back. actually, 1-10 and 100-190 were already online, so i only
needed to reload 20-99. the most recent tape i could find them on was
a full dump from july.
13-Jan-84 00:19:44-EST,630;000000000000
Received: from MIT-MOON by MIT-OZ via Chaosnet; 13 Jan 84 00:19-EST
Date: Friday, 13 January 1984, 00:21-EST
From: Ken Haase <KWH at MIT-OZ>
Subject: Losing Fonts
To: BUG-LISPM at MIT-OZ

In Release 5.0 [GC'd Beta Test rev 3], Experimental ARLO 11.0,
microcode TMC5-MIC 262, dusty plum, on Lisp Machine Keith Moon (3600):

This may not be news, but having a window with a font map with
varying width fonts in it (for instance bold and italic versions
of the same font) loses if you try and change font in the middle.
Only the first font in the font map, it seems, works ok with
regards to rubbing out typein.

Ken
13-Jan-84 12:28:59-EST,4707;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 13 Jan 84 12:27-EST
Received: from MIT-APIARY-3 by MIT-OZ via Chaosnet; 13 Jan 84 12:27-EST
Date: Friday, 13 January 1984, 12:36-EST
From: Thomas J. Reinhardt <TOMR%MIT-OZ@MIT-MC.ARPA>
Subject: Random bitblt blowout
To: BUG-LISPM at MIT-MC
Cc: TomR%MIT-OZ@MIT-MC.ARPA

In Release 5.0 [GC'd Beta Test rev 3], microcode TMC5-MIC 262,
corrected dusty plum, on Lisp Machine Apriary-3 (3600):

What is going on here?  This used to work!

>>Trap: The first argument given to the %BITBLT-DECODE-ARRAYS instruction, 7., was not an array.
While in the function %DRAW-CHAR-INTERNAL  (:METHOD SCREEN :%DRAW-CHAR)  %DRAW-CHAR

%DRAW-CHAR-INTERNAL:  (P.C. = 30)
   Arg 0 (FONT): FONTS:ICONS
   Arg 1 (CHAR): 72.
   Arg 2 (X): 0.
   Arg 3 (Y): 0.
   Arg 4 (ALU): 7.
   Arg 5 (ARRAY): #<ART-1B-32.-32. 35040457>
   Local 6 (IGNORE): NIL
   Local 7 (IGNORE): NIL
   Local 8 (IGNORE): NIL
   Local 9 (BB-WIDTH): NIL
   Local 10 (BB-S-DATA-ADDR): NIL
   Local 11 (BB-S-ROW-OFFSET): NIL
   Local 12 (BB-S-OFFSET): NIL
   Local 13 (BB-S-BITPOS): NIL
   Local 14 (BB-S-ROW-LENGTH): NIL
   Local 15 (BB-D-DATA-ADDR): NIL
   Local 16 (BB-D-OFFSET): NIL
   Local 17 (BB-D-BITPOS): NIL
   Local 18 (BB-EVENT-COUNT): NIL
   Local 19 (BB-ALU-OPERATION): 7.
   Local 20 (S-ROW-BITPOS): NIL
   Local 21 (S-ROW-OFFSET): NIL
   Local 22 (S-ROW): NIL
   Local 23 (D-ROW-BITPOS): NIL
   Local 24 (D-ROW-OFFSET): NIL
   Local 25 (D-ROW): NIL

(:METHOD SCREEN :%DRAW-CHAR):  (P.C. = 17)
   Arg 0 (SELF): #<MAIN-SCREEN Main Screen 2300077 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SCREEN -- 5. IV's, 1. FL's 15146610>
   Arg 2 (OPERATION): :%DRAW-CHAR
   Arg 3 (FONT): FONTS:ICONS
   Arg 4 (CHAR): 72.
   Arg 5 (X): 0.
   Arg 6 (Y): 0.
   Arg 7 (ALU): 7.
   Arg 8 (SHEET): #<BEHIND-THE-SCENES-SHEET Behind The Scenes Sheet 2 2241005 deexposed>

%DRAW-CHAR:  (P.C. = 34)
   Arg 0 (FONT): FONTS:ICONS
   Arg 1 (CHAR): 72.
   Arg 2 (X): 0.
   Arg 3 (Y): 0.
   Arg 4 (ALU): 7.
   Arg 5 (SHEET-OR-ARRAY): #<BEHIND-THE-SCENES-SHEET Behind The Scenes Sheet 2 2241005 deexposed>

(:METHOD STREAM-MIXIN :DRAW-CHAR):  (P.C. = 50)
   Arg 0 (SELF): #<BEHIND-THE-SCENES-SHEET Behind The Scenes Sheet 2 2241005 deexposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor STREAM-MIXIN -- 14. IV's, 0. FL's 23330243>
   Arg 2 (OPERATION): :DRAW-CHAR
   Arg 3 (FONT): FONTS:ICONS
   Arg 4 (CHAR): 72.
   Arg 5 (X-BITPOS): 0.
   Arg 6 (Y-BITPOS): 0.
   --Defaulted args:--
   Arg 7 (ALU): 7.

(:METHOD ICON-BLINKER :BEFORE :INIT):  (P.C. = 73)  (from AP6:>actor-tested>viewer-icon-blinker)
   Arg 0 (SELF): #<MOUSE-ICON-BLINKER 4200147>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ICON-BLINKER -- 5. IV's, 2. FL's 23315363>
   Arg 2 (OPERATION): :INIT
   Arg 3 (INIT-PLIST): #<DTP-LOCATIVE 26501041>

(:METHOD ICON-BLINKER :COMBINED :INIT):  (P.C. = 7)  (from AP6:>actor-tested>viewer-icon-blinker)
   Arg 0 (SELF): #<MOUSE-ICON-BLINKER 4200147>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ICON-BLINKER -- 5. IV's, 2. FL's 23315363>
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

INSTANTIATE-FLAVOR:  (P.C. = 372)
   Arg 0 (FLAVOR-NAME): MOUSE-ICON-BLINKER
   Arg 1 (INIT-PLIST): #<DTP-LOCATIVE 26501041>
   Arg 2 (SEND-INIT-MESSAGE-P): T
   Arg 3 (RETURN-UNHANDLED-KEYWORDS-P): NIL
   Arg 4 (AREA-TO-CONS-INSTANCE-IN): 22.

MAKE-BLINKER:  (P.C. = 25)
   Arg 0 (SHEET): #<MAIN-SCREEN Main Screen 2300077 exposed>
   Arg 1 (TYPE): MOUSE-ICON-BLINKER
   Rest arg (OPTIONS): (:VISIBILITY NIL :CHAR ICON:HAND)

Rest of stack:
SI:*EVAL:  (P.C. = 370)
SI:APPLY-LAMBDA:  (P.C. = 1106)
CALL-FUNNY-FUNCTION:  (P.C. = 26)
(LAMBDA (SCREEN) (MAKE-BLINKER SCREEN (QUOTE MOUSE-ICON-BLINKER) :VISIBILITY NIL ...)):
MOUSE-GET-BLINKER:  (P.C. = 32)
MOUSE-DEFINE-BLINKER-TYPE:  (P.C. = 21)
SI:*EVAL:  (P.C. = 370)
SI:LOAD-BIN-OP-FORM:  (P.C. = 4)
SI:BIN-LOAD-NEXT-COMMAND:  (P.C. = 20)
SI:BIN-LOAD-TOP-LEVEL:  (P.C. = 6)
SI:BIN-LOAD-FILE-INTERNAL:  (P.C. = 111)
SI:BIN-LOAD-FILE:  (P.C. = 22)
SI:FASLOAD-1:  (P.C. = 5)
SI:DO-FILE-TRANSFORMATIONS:  (P.C. = 242)
SI:PERFORM-TRANSFORMATIONS:  (P.C. = 166)
SI:PERFORM-TRANSFORMATIONS:  (P.C. = 64)
MAKE-SYSTEM:  (P.C. = 222)
SI:*EVAL:  (P.C. = 370)
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 200)
BREAK:  (P.C. = 173)
(:DEFUN-METHOD ZWEI:COM-BREAK):  (P.C. = 112)
ZWEI:COM-BREAK:  (P.C. = 12)
ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 200)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 41)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
13-Jan-84 14:09:16-EST,1300;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 13 Jan 84 14:07-EST
Received: from SCRC-CHICOPEE by SCRC-QUABBIN with CHAOS; Fri 13-Jan-84 14:12:29-EST
Date: Fri, 13 Jan 84 14:09 EST
From: "Daniel L. Weinreb" <DLW%SCRC-TENEX@MIT-MC.ARPA>
Subject: Problem with Signalling and Handling Conditions document
To: CWH%SCRC-TENEX@MIT-MC.ARPA, Moon%SCRC-TENEX@MIT-MC.ARPA,
    bug-lmdoc%SCRC-TENEX@MIT-MC.ARPA
Cc: KMP@MIT-MC.ARPA, MMcM%SCRC-TENEX@MIT-MC.ARPA, BUG-LISPM@MIT-MC.ARPA
In-reply-to: The message of 10 Jan 84 21:06-EST from Carl Hoffman <CWH at SCRC-TENEX>

    Date: Tuesday, 10 January 1984, 21:06-EST
    From: Carl Hoffman <CWH at SCRC-TENEX>

	Date: Tue, 10 Jan 84 02:05 EST
	From: "David A. Moon" <Moon%SCRC-TENEX@MIT-MC.ARPA>
	The second paragraph in section 5.1.4 of Signalling and Handling Conditions
	(January 1983) looks like it has something to do with this.  Actually it
	doesn't; it's discussing the restriction that each condition instance can only
	be signalled once.  Frankly I can't understand what this paragraph is trying to
	say.  I would just delete it from the document.

    I think it is trying to say that it is not correct to pass on the condition by
    signalling the handler's condition argument, i.e. this is incorrect:

That's exactly right.
13-Jan-84 15:28:40-EST,1019;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 13 Jan 84 15:27-EST
Received: from SCRC-YANGTZE by SCRC-QUABBIN with CHAOS; Fri 13-Jan-84 15:32:58-EST
Date: Friday, 13 January 1984, 15:32-EST
From: Carl Hoffman <CWH at SCRC-TENEX>
Subject: Losing Fonts
To: KWH at MIT-OZ, BUG-LISPM at MIT-OZ
In-reply-to: The message of 13 Jan 84 00:21-EST from Ken Haase <KWH at MIT-OZ>

    Date: Friday, 13 January 1984, 00:21-EST
    From: Ken Haase <KWH at MIT-OZ>

    In Release 5.0 [GC'd Beta Test rev 3], Experimental ARLO 11.0,
    microcode TMC5-MIC 262, dusty plum, on Lisp Machine Keith Moon (3600):

    This may not be news, but having a window with a font map with
    varying width fonts in it (for instance bold and italic versions
    of the same font) loses if you try and change font in the middle.
    Only the first font in the font map, it seems, works ok with
    regards to rubbing out typein.

Are you having this problem in the input editor or in Zwei?
Can you send me a test case?
13-Jan-84 15:39:54-EST,1935;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 13 Jan 84 15:37-EST
Received: from MIT-APIARY-3 by MIT-OZ via Chaosnet; 13 Jan 84 15:35-EST
Date: Friday, 13 January 1984, 15:44-EST
From: Thomas J. Reinhardt <TOMR%MIT-OZ@MIT-MC.ARPA>
Subject: Bug in GC
To: BUG-LISPM at MIT-MC

In Release 5.0 [GC'd Beta Test rev 3], microcode TMC5-MIC 262,
corrected dusty plum, on Lisp Machine Apriary-3 (3600):

While collecting garbage:
Seems pretty random, though, since it's never happened before.


>>Error: Page fault on unallocated VMA 40062264
While in the function SI:SCAVENGE-REGION  SI:%GC-SCAVENGE  SI:SCAVENGE-ALL

SI:SCAVENGE-REGION:  (P.C. = 315)
   Arg 0 (REGION): 38.
   Arg 1 (WORK-UNITS): NIL
   Arg 2 (STOP-ON-PAGE-FAULT): NIL
   Local 3 (ORIGIN): 3457024.
   Local 4 (SPACE): 4.
   Local 5 (ORIGINAL-GC-POINTER): 107780.
   Local 6 (POINTER): 3564804.
   Local 7 (FINAL-PASS): T
   Local 8 (END-POINTER): 0.
   Local 9 (SKIP-OVER-STACK): NIL
   Local 10 (STACK-POINTER): NIL
   Local 11 (PREFETCH-MARK): 3566852.
   Local 12 (OTHER-PREFETCH-MARK): 0.
   Local 13 (STACK-BUFFER-KLUDGE): NIL
   Local 14 (START-POINTER): 3564804.
   Local 15 (START-TIME): -767063442.
   Local 16 (START-FETCHES): 16141.
   Local 17 (FREE): 376831.
   Local 18 (COUNT): 2048.

SI:%GC-SCAVENGE:  (P.C. = 66)
   Arg 0 (WORK-UNITS): NIL
   --Defaulted args:--
   Arg 1 (STOP-ON-PAGE-FAULT): NIL

SI:SCAVENGE-ALL:  (P.C. = 17)

SI:GC-RECLAIM-OLDSPACE:  (P.C. = 3)

GC-IMMEDIATELY:  (P.C. = 66)

SI:*EVAL:  (P.C. = 370)
   Arg 0 (FORM): (GC-IMMEDIATELY)

PROGN:  (P.C. = 13)
   Rest arg (EXPRESSIONS): ((GC-OFF) (GC-IMMEDIATELY) (GC-ON) T)

SI:*EVAL:  (P.C. = 421)
   Arg 0 (FORM): (PROGN (GC-OFF) (GC-IMMEDIATELY) (GC-ON) T)

Rest of stack:
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 200)
SI:LISP-COMMAND-LOOP:  (P.C. = 115)
SI:LISP-TOP-LEVEL1:  (P.C. = 22)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
13-Jan-84 17:02:51-EST,1941;000000000000
Received: from MIT-XX by MIT-OZ via Chaosnet; 13 Jan 84 17:02-EST
Date: Friday, 13 January 1984, 17:02-EST
From: Philippe Brou <PHILIP at MIT-OZ>
Subject: Problem with make-system
To: BUG-LISPM at MIT-OZ

In Release 5.0 [GC'd Beta Test rev 3], Experimental 3D_Vision_system 1.0,
corrected dusty plum, on Lisp Machine Robot-3 (3600):

This problem seems to happen when one creates a patchable
system for the first time (i.e. the directory for patches does
not contain a file for the system).

Did (make-system '3dvis :compile) (definition is in
oz:vision:<philip.src>lispm)
Processed all the files and gave this error just prior
to completion. 



>>Error: The symbol NIL has an invalid function definition
While in the function NIL  SI:ADD-LOADED-SYSTEM-TO-DIRECTORY-1  SI:ADD-LOADED-SYSTEM-TO-DIRECTORY

NIL:
   Arg 0: :CANONICAL-TYPE

SI:ADD-LOADED-SYSTEM-TO-DIRECTORY-1:  (P.C. = 65)
   Arg 0 (SYSTEM): #<SYSTEM 3D_Vision_system 22207617>
   Arg 1 (VERSION): 1
   Arg 2 (VERSIONS): NIL

SI:ADD-LOADED-SYSTEM-TO-DIRECTORY:  (P.C. = 75)
   Arg 0 (SYSTEM-NAME): #<SYSTEM 3D_Vision_system 22207617>
   Arg 1 (VERSION): :NEWEST

SI:*EVAL:  (P.C. = 370)
   Arg 0 (FORM): (SI:ADD-LOADED-SYSTEM-TO-DIRECTORY SI:*SYSTEM-BEING-MADE* (QUOTE :NEWEST))

MAKE-SYSTEM:  (P.C. = 251)
   Arg 0 (SYSTEM): 3DVIS
   Rest arg (KEYWORDS): (:COMPILE)

SI:*EVAL:  (P.C. = 370)
   Arg 0 (FORM): (MAKE-SYSTEM (QUOTE 3DVIS) :COMPILE)

SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 200)
   Rest arg: (:NAME "Lisp Top Level in Lisp Listener 1" :ABORTED-FUNCTION NIL :BEFORE-PROMPT-FUNCTION NIL :READ-FUNCTION NIL :EVAL-FUNCTION NIL ...)

SI:LISP-COMMAND-LOOP:  (P.C. = 115)
   Arg 0 (STREAM): #<LISP-LISTENER Lisp Listener 1 2300000 exposed>
   Rest arg: (:NAME "Lisp Top Level in Lisp Listener 1")

Rest of stack:
SI:LISP-TOP-LEVEL1:  (P.C. = 22)
SI:LISP-TOP-LEVEL2:  (P.C. = 5)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
13-Jan-84 19:27:38-EST,537;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 13 Jan 84 19:27-EST
Date: Friday, 13 January 1984, 19:29-EST
From: Kent M Pitman <kmp at MIT-MC>
Subject: Windows with associated processes
To: BUG-LISPM at MIT-MC
Cc: KMP at MC, KBE-I-FILE at OZ

I have a nicer interface to TV:PROCESS-MIXIN which seems to be a lot
easier to explain to people. It's in the file 
OZ:PS:<KMP.LISPM.EXAMPLES>ASSOCIATED-PROCESS.LISP
It's very short and fully documented. I would like to see it or something
very like it included in the core system.
13-Jan-84 21:32:52-EST,2552;000000000000
Received: from MIT-LISPM-32 by MIT-OZ via Chaosnet; 13 Jan 84 21:32-EST
Date: Friday, 13 January 1984, 21:33-EST
From: Philippe Brou <PHILIP at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In Don't-dump-a-band! Inconsistent (unreleased patches loaded) System 98.29,
CADR 3.4, ZMail 53.9, MIT-Specific 22.0,
Experimental 3D_Vision_system 46.0, microcode 306,
on Lisp Machine Thirty-two:


Insert your description of the circumstances here:

What happened to my fonts? I get huge values of
X in tv:draw-char when trying to write characters
using (tyo ...). The current error was obtained easily by
trying to FED the font. I displayed the list of fonts
in FED and moused LOGO (which is the font I created
myself)

It contains very large characters (about a size 48.)
Used to work fine from system 79(?) to 97
Font is in file oz:vision:<philip.data>logo-font.qfasl
It loads into fonts:logo

[I think the problem has to do with the KERN table]


>>TRAP 9385. (ARGTYP FIXNUM PP NIL) ->  %DRAW-CHAR 
Some argument to SYSTEM:%DRAW-CHAR, 16777242., was of the wrong type.
The function expected a fixnum.
Backtrace from the debugger:

TV:DRAW-CHAR (P.C. = 105)

 Arg 0 (FONT): #<FONT LOGO 35236010>
 Arg 1 (CH): 97.
 Arg 2 (X): 16777242.
 Arg 3 (Y): 2.
 Arg 4 (ALU): 7.
 Arg 5 (SHEET): #<FED-LABEL-WINDOW Fed Label Window 1 4676275 exposed>
Local 0 (FIT): #<ART-16B-129. 35235414>
Local 1 (CH): 49.
Local 2 (LIM): 51.
Local 3 (BPP): 1.
Local 4 (X): 16777242.


TV:SHEET-TYO (P.C. = 436)

 Arg 0 (SHEET): #<FED-LABEL-WINDOW Fed Label Window 1 4676275 exposed>
 Arg 1 (CHAR): 97.
   --Defaulted args:--
 Arg 2 (FONT): #<FONT LOGO 35236010>
Local 0 (BASE-ADJ): 0.
Local 1 (CHAR-WIDTHS): #<ART-8B-128. 35235717>
Local 2 (FIT): #<ART-16B-129. 35235414>
Local 3 (WIDTH): 42.
Local 4 (KERN): -16777216.
Local 5 (KERN-TABLE): #<ART-32B-128. 35235516>
Local 6 (XPOS): 26.
Local 7 (RIGHT-LIM): 508.


FED:FED-TYO (P.C. = 51)

 Arg 0 (SHEET): #<FED-LABEL-WINDOW Fed Label Window 1 4676275 exposed>
 Arg 1 (CH): 97.
 Arg 2 (FONTNAME): FONTS:LOGO
Local 0 (ELTS): NIL
Local 1 (ELT): NIL


FED:DISPLAY-LABEL (P.C. = 536)

Local 0 (SECOND-LINE-HEIGHT): 35.
Local 1 (FD): #S(FED:FONT-DESCRIPTOR :FD-FILL-POINTER 128. :FD-NAME ...)
Local 2 (OLD-X): 34.
Local 3 (I): 1.
Local 4: 6.


FED:SELECT-FONT (P.C. = 136)

 Arg 0 (NEW-FONT): FONTS:LOGO
Local 0 (TEM): NIL


Remainder of stack:

(:METHOD FED :SELECT-FONT) (P.C. = 54)
(:METHOD FED :COMMAND-LOOP) (P.C. = 175)
SI:PROCESS-TOP-LEVEL (P.C. = 246)
13-Jan-84 23:45:07-EST,874;000000000000
Received: from MIT-LISPM-32 by MIT-OZ via Chaosnet; 13 Jan 84 23:44-EST
Date: Friday, 13 January 1984, 23:46-EST
From: Philippe Brou <PHILIP at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In Don't-dump-a-band! Inconsistent (unreleased patches loaded) System 98.29,
CADR 3.4, ZMail 53.9, MIT-Specific 22.0,
Experimental 3D_Vision_system 46.0, microcode 306,
on Lisp Machine Thirty-two:

In Defsystem, I used the selective mode to specifically
compile files but not load them. (Answered yes when 
asked for compile, and No when asked about file loading)

When asked to confirm the selection, it said 
COMPILE ... (all the files) and it didn't say
that it would load any file (as expected). Unfortunately,
after giving the go ahead, it compiled and loaded files 
disregarding all the independant decisions and going
ahead with the first plan  it proposed.

Philippe
14-Jan-84 03:19:54-EST,5830;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 14 Jan 84 03:19-EST
Date: Saturday, 14 January 1984  02:36-EST
From: MOON at SCRC-TENEX
To:   Thomas J. Reinhardt <TOMR%MIT-OZ at MIT-MC.ARPA>
Cc:   BUG-LISPM at MIT-MC
Subject: Not a random bitblt blowout
In-reply-to: The message of 13 Jan 1984 12:36-EST from Thomas J. Reinhardt <TOMR%MIT-OZ@MIT-MC.ARPA>

Look at the backtrace.  Your code is passing a symbol as an argument to
the :DRAW-CHAR message where a font is required.  I don't know why the
error message is incorrect, saying that the illegal value is 7 rather
than the symbol; we will look into that.
    Return-path: <Mailer@SCRC-TENEX>
    Received: from MIT-MC by SCRC-TENEX with CHAOS; Fri 13-Jan-84 12:30:31-EST
    Received: from MIT-APIARY-3 by MIT-OZ via Chaosnet; 13 Jan 84 12:27-EST
    Date: Friday, 13 January 1984, 12:36-EST
    From: Thomas J. Reinhardt <TOMR%MIT-OZ@MIT-MC.ARPA>
    Subject: Random bitblt blowout
    To: BUG-LISPM at MIT-MC
    Cc: TomR%MIT-OZ@MIT-MC.ARPA

    In Release 5.0 [GC'd Beta Test rev 3], microcode TMC5-MIC 262,
    corrected dusty plum, on Lisp Machine Apriary-3 (3600):

    What is going on here?  This used to work!

    >>Trap: The first argument given to the %BITBLT-DECODE-ARRAYS instruction, 7., was not an array.
    While in the function %DRAW-CHAR-INTERNAL  (:METHOD SCREEN :%DRAW-CHAR)  %DRAW-CHAR

    %DRAW-CHAR-INTERNAL:  (P.C. = 30)
       Arg 0 (FONT): FONTS:ICONS
       Arg 1 (CHAR): 72.
       Arg 2 (X): 0.
       Arg 3 (Y): 0.
       Arg 4 (ALU): 7.
       Arg 5 (ARRAY): #<ART-1B-32.-32. 35040457>
       Local 6 (IGNORE): NIL
       Local 7 (IGNORE): NIL
       Local 8 (IGNORE): NIL
       Local 9 (BB-WIDTH): NIL
       Local 10 (BB-S-DATA-ADDR): NIL
       Local 11 (BB-S-ROW-OFFSET): NIL
       Local 12 (BB-S-OFFSET): NIL
       Local 13 (BB-S-BITPOS): NIL
       Local 14 (BB-S-ROW-LENGTH): NIL
       Local 15 (BB-D-DATA-ADDR): NIL
       Local 16 (BB-D-OFFSET): NIL
       Local 17 (BB-D-BITPOS): NIL
       Local 18 (BB-EVENT-COUNT): NIL
       Local 19 (BB-ALU-OPERATION): 7.
       Local 20 (S-ROW-BITPOS): NIL
       Local 21 (S-ROW-OFFSET): NIL
       Local 22 (S-ROW): NIL
       Local 23 (D-ROW-BITPOS): NIL
       Local 24 (D-ROW-OFFSET): NIL
       Local 25 (D-ROW): NIL

    (:METHOD SCREEN :%DRAW-CHAR):  (P.C. = 17)
       Arg 0 (SELF): #<MAIN-SCREEN Main Screen 2300077 exposed>
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SCREEN -- 5. IV's, 1. FL's 15146610>
       Arg 2 (OPERATION): :%DRAW-CHAR
       Arg 3 (FONT): FONTS:ICONS
       Arg 4 (CHAR): 72.
       Arg 5 (X): 0.
       Arg 6 (Y): 0.
       Arg 7 (ALU): 7.
       Arg 8 (SHEET): #<BEHIND-THE-SCENES-SHEET Behind The Scenes Sheet 2 2241005 deexposed>

    %DRAW-CHAR:  (P.C. = 34)
       Arg 0 (FONT): FONTS:ICONS
       Arg 1 (CHAR): 72.
       Arg 2 (X): 0.
       Arg 3 (Y): 0.
       Arg 4 (ALU): 7.
       Arg 5 (SHEET-OR-ARRAY): #<BEHIND-THE-SCENES-SHEET Behind The Scenes Sheet 2 2241005 deexposed>

    (:METHOD STREAM-MIXIN :DRAW-CHAR):  (P.C. = 50)
       Arg 0 (SELF): #<BEHIND-THE-SCENES-SHEET Behind The Scenes Sheet 2 2241005 deexposed>
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor STREAM-MIXIN -- 14. IV's, 0. FL's 23330243>
       Arg 2 (OPERATION): :DRAW-CHAR
       Arg 3 (FONT): FONTS:ICONS
       Arg 4 (CHAR): 72.
       Arg 5 (X-BITPOS): 0.
       Arg 6 (Y-BITPOS): 0.
       --Defaulted args:--
       Arg 7 (ALU): 7.

    (:METHOD ICON-BLINKER :BEFORE :INIT):  (P.C. = 73)  (from AP6:>actor-tested>viewer-icon-blinker)
       Arg 0 (SELF): #<MOUSE-ICON-BLINKER 4200147>
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ICON-BLINKER -- 5. IV's, 2. FL's 23315363>
       Arg 2 (OPERATION): :INIT
       Arg 3 (INIT-PLIST): #<DTP-LOCATIVE 26501041>

    (:METHOD ICON-BLINKER :COMBINED :INIT):  (P.C. = 7)  (from AP6:>actor-tested>viewer-icon-blinker)
       Arg 0 (SELF): #<MOUSE-ICON-BLINKER 4200147>
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ICON-BLINKER -- 5. IV's, 2. FL's 23315363>
       Rest arg (.DAEMON-CALLER-ARGS.): NIL

    INSTANTIATE-FLAVOR:  (P.C. = 372)
       Arg 0 (FLAVOR-NAME): MOUSE-ICON-BLINKER
       Arg 1 (INIT-PLIST): #<DTP-LOCATIVE 26501041>
       Arg 2 (SEND-INIT-MESSAGE-P): T
       Arg 3 (RETURN-UNHANDLED-KEYWORDS-P): NIL
       Arg 4 (AREA-TO-CONS-INSTANCE-IN): 22.

    MAKE-BLINKER:  (P.C. = 25)
       Arg 0 (SHEET): #<MAIN-SCREEN Main Screen 2300077 exposed>
       Arg 1 (TYPE): MOUSE-ICON-BLINKER
       Rest arg (OPTIONS): (:VISIBILITY NIL :CHAR ICON:HAND)

    Rest of stack:
    SI:*EVAL:  (P.C. = 370)
    SI:APPLY-LAMBDA:  (P.C. = 1106)
    CALL-FUNNY-FUNCTION:  (P.C. = 26)
    (LAMBDA (SCREEN) (MAKE-BLINKER SCREEN (QUOTE MOUSE-ICON-BLINKER) :VISIBILITY NIL ...)):
    MOUSE-GET-BLINKER:  (P.C. = 32)
    MOUSE-DEFINE-BLINKER-TYPE:  (P.C. = 21)
    SI:*EVAL:  (P.C. = 370)
    SI:LOAD-BIN-OP-FORM:  (P.C. = 4)
    SI:BIN-LOAD-NEXT-COMMAND:  (P.C. = 20)
    SI:BIN-LOAD-TOP-LEVEL:  (P.C. = 6)
    SI:BIN-LOAD-FILE-INTERNAL:  (P.C. = 111)
    SI:BIN-LOAD-FILE:  (P.C. = 22)
    SI:FASLOAD-1:  (P.C. = 5)
    SI:DO-FILE-TRANSFORMATIONS:  (P.C. = 242)
    SI:PERFORM-TRANSFORMATIONS:  (P.C. = 166)
    SI:PERFORM-TRANSFORMATIONS:  (P.C. = 64)
    MAKE-SYSTEM:  (P.C. = 222)
    SI:*EVAL:  (P.C. = 370)
    SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 200)
    BREAK:  (P.C. = 173)
    (:DEFUN-METHOD ZWEI:COM-BREAK):  (P.C. = 112)
    ZWEI:COM-BREAK:  (P.C. = 12)
    ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
    ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
    (:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 200)
    (:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 41)
    ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)
    SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
14-Jan-84 15:50:38-EST,826;000000000000
Received: from MIT-LISPM-18 by MIT-OZ via Chaosnet; 14 Jan 84 15:48-EST
Date: Saturday, 14 January 1984, 15:50-EST
From: Richard Mlynarik <Mly at MIT-OZ>
Subject: fonts in system 98
To: info-lispm-mit at MIT-OZ
Message-ID: <[MIT-LISPM-18].14-Jan-84 15:50:34.Mly>

  Because of the change from 24 to 25 bit pointers which occurred
with system 98, the kern tables of fonts saved in qfasl files in
previous systems contain incorrect values for use in system 98.
  The easiest way to transfer fonts from system 97 to 98 is to load
the font into a machine running system 97 and use fed to write out
a KST file for the font. Then load the KST file into system 98
(using fed) and write out the new qfasl file.
  All the fonts in the sys:fonts; directory have been updated, so
problems will only exist for user fonts.
14-Jan-84 19:26:02-EST,1748;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 14 Jan 84 19:25-EST
Date: Saturday, 14 January 1984, 19:28-EST
From: Kent M Pitman <kmp at MIT-MC>
Subject: Another bug in ZWEI:CHECK-INTERVAL-SECTIONS
To: BUG-LISPM at MC
Cc: KBE-I at OZ

In Release 4.5, KBE 250.1x (Black Magic)
  with OZ:PS:<KMP.LISPM.BUGS.FIXES>CHECK-INTERVAL-SECTIONS loaded
  on Avatar (CADR)
and in Release 5.0 (3) on Apiary-9 (3600):

ZWEI:CHECK-INTERVAL-SECTIONS seems to have at least one more bug
which I just noticed and have checked still occurs in Release 5.0.

The nature of the bug is that when the last definition, A, in a fully
sectionized buffer has blank (or comment) lines following it,
then a new definition, B, is added in the middle of those lines, 
and finally CHECK-INTERVAL-SECTIONS is called on (BP-NODE BP) 
(for some BP in those blank or comment lines), the lines following the
definition of B will still believe they belong to A instead of knowing
they now belong to B.

I have isolated a case which will allow you to exactly reproduce this
bug. Just do 

 c-X c-F OZ:PS:<KMP.LISPM.BUGS>CHECK-INTERVAL-SECTIONS-2.LISP

and follow the directions at the top of the file. 

Please let me know if the description in the file doesn't make it clear
what the problem is.

This bug has seriously undesirable consequences for the KBE which 
can be very embarrassing during demos.
-kmp

ps Do not make the mistake of looking at
     OZ:PS:<KMP.LISPM.BUGS>CHECK-INTERVAL-SECTIONS.LISP
   which is an older bug that is claimed to be fixed in Release 5
   and which I have a private patch for in
    OZ:PS:<KMP.LISPM.BUGS.FIXES>CHECK-INTERVAL-SECTIONS
   which you'll note I have loaded normally in the KBE's Rel 4.5 world.
14-Jan-84 20:18:32-EST,1530;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 14 Jan 84 20:18-EST
Received: from SCRC-HARLEM by SCRC-QUABBIN with CHAOS; Sat 14-Jan-84 20:24:26-EST
Date: Sat, 14 Jan 84 20:22 EST
From: Joseph R Goldstone <joseph%SCRC-QUABBIN@MIT-MC.ARPA>
Subject: Another bug in ZWEI:CHECK-INTERVAL-SECTIONS
To: Kent M Pitman <kmp@MIT-MC.ARPA>
Cc: BUG-LISPM@MIT-MC.ARPA, KBE-I@MIT-OZ.ARPA
In-reply-to: The message of 14 Jan 84 19:28-EST from Kent M Pitman <kmp at MIT-MC>

    Date: Saturday, 14 January 1984, 19:28-EST
    From: Kent M Pitman <kmp at MIT-MC>
    In Release 4.5, KBE 250.1x (Black Magic)
      with OZ:PS:<KMP.LISPM.BUGS.FIXES>CHECK-INTERVAL-SECTIONS loaded
      on Avatar (CADR)
    and in Release 5.0 (3) on Apiary-9 (3600):

    ZWEI:CHECK-INTERVAL-SECTIONS seems to have at least one more bug
    which I just noticed and have checked still occurs in Release 5.0.

    ...

    I have isolated a case which will allow you to exactly reproduce this
    bug. Just do 

     c-X c-F OZ:PS:<KMP.LISPM.BUGS>CHECK-INTERVAL-SECTIONS-2.LISP

    and follow the directions at the top of the file. 

Fixed in the 243 world i just checked; it returns the node for your test-function-2.
ZWEI:CHECK-INTERVAL-SECTIONS has been patched 4 times in 243 since the beta-test
world was made [243.269, .291, .293, and .308].  The most recent of these has been
moved over to 242 and you will get it on the patch tape.  yup, now that i know
it won't bite i tried it in this [242+] world and it's fixed.  [soon...]
14-Jan-84 22:27:24-EST,622;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 14 Jan 84 22:27-EST
Date: 14 January 1984 22:29 EST
From: Glenn S. Burke <GSB @ MIT-MC>
Subject: Fixing ~D in format
To: RpK @ MIT-OZ
cc: kab @ MIT-OZ, BUG-LISPM @ MIT-OZ

I hope someone has pointed out by now that ~D is not supposed to
do coercion?  The sentence which reads approximately 
"if arg is not a number, it is printed in ~A format and decimal base"
has been fixed to read "integer" instead of "number" in the latest
common-lisp manual.  The statement that the arg "should" be an integer
is misleading and should really be fixed to say something else.
14-Jan-84 23:21:20-EST,1040;000000000000
Received: from MIT-LISPM-18 by MIT-OZ via Chaosnet; 14 Jan 84 23:21-EST
Date: Saturday, 14 January 1984, 23:23-EST
From: Richard Mlynarik <Mly at MIT-OZ>
Subject: Fixing ~D in format
To: GSB at MIT-MC
CC: BUG-LISPM at MIT-OZ
In-reply-to: The message of 14 Jan 1984 22:29-EST from Glenn S. Burke <GSB at MIT-MC>
Message-ID: <[MIT-LISPM-18].14-Jan-84 23:23:19.Mly>

    Date: 14 January 1984 22:29 EST
    From: Glenn S. Burke <GSB @ MIT-MC>
    Subject: Fixing ~D in format
    To: RpK @ MIT-OZ
    cc: kab @ MIT-OZ, BUG-LISPM @ MIT-OZ

    I hope someone has pointed out by now that ~D is not supposed to
    do coercion?  The sentence which reads approximately 
    "if arg is not a number, it is printed in ~A format and decimal base"
    has been fixed to read "integer" instead of "number" in the latest
    common-lisp manual.  The statement that the arg "should" be an integer
    is misleading and should really be fixed to say something else.

This was never patched. RpK soon realized the error of his ways.
15-Jan-84 00:06:56-EST,4150;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 15 Jan 84 00:06-EST
Date: 15 January 1984 00:08 EST
From: Kent M Pitman <KMP @ MIT-MC>
Subject:  Compiler troubles in Rel 4.5
To: BUG-LISPM @ MIT-MC
cc: Pigman @ SRI-KL

In Release 4.5, Local Mods 18.0, site configuration 37, on Flair 3600 One:

A friend (Pigman@SRI-KL) encountered the following error during compilation:

    >>Error: Cannot address the variable #<NORMAL-LEXICAL-VARIABLE 7650152>
      While in the function COMPILER:USE-STACK-ADDRESSING-P  ...
      Error occurred while compiling NIL

This error message is remarkably vague, but fortunately it was pretty easy
to diagnose from looking at her source code. She had done:

(DEFUN CLASSIFYINIT (SYMBOL TYPE)
  (LET ((TAX-ENT (CREATE 'TAXENT))
	(TOP ...))
    ...
    ;; for every node below the initial parent, add unknown 
    ;; links with taxEnt in both directions.
    (!MAPSUBS #'(LAMBDA (NODE)
		  (!ADDUNKNOWN NODE TAX-ENT)
		  (!ADDUNKNOWN TAX-ENT NODE))
	      TOP)
    ...))    


It turned out to be easy to get around this by just declaring TAX-ENT to 
be special. If this is not fixed in the next release to go out to them,
perhaps the error message should say something apologetic like:
 "Perhaps it would help if TAX-ENT were declared special?"

In general, with the length of time between releases being so long, it might
be worth considering posting a monthly newsletter containing helpful hints
about common crises like these and how to get around them in the interim until
the release containing the fix arrives...

The stack trace follows in case the context matters...

>>Error: Cannot address the variable #<NORMAL-LEXICAL-VARIABLE 7650152>
While in the function COMPILER:USE-STACK-ADDRESSING-P  (:PROPERTY COMPILER:VAR COMPILER:PEEP-HOLE-OPTIMIZER)  COMPILER:ASSEMBLE-INTERVAL
Error occurred while compiling NIL

COMPILER:USE-STACK-ADDRESSING-P:  (P.C. = 33)
   Arg 0 (VARIABLE): #<NORMAL-LEXICAL-VARIABLE 7650152>
   Arg 1 (LEVEL): 2.
   Arg 2 (LOCATION): 2.
   Local 3 (FUNCTION): #<EXTERNAL-FUNCTION 7647720>

(:PROPERTY COMPILER:VAR COMPILER:PEEP-HOLE-OPTIMIZER):  (P.C. = 51)
   Arg 0 (INST): #<Inst (Var TAX-ENT S.2)>

COMPILER:ASSEMBLE-INTERVAL:  (P.C. = 30)
   Arg 0 (INTERVAL): #<INTERVAL 7651104>

COMPILER:ASSEMBLE-FUNCTION:  (P.C. = 57)
   Arg 0 (FUNCTION): #<INTERNAL-FUNCTION 7651046>

MAPC:  (P.C. = 42)
   Arg 0 (FCN): COMPILER:ASSEMBLE-FUNCTION
   Rest arg (LISTS): ((#<EXTERNAL-FUNCTION 7647720>))

COMPILER:RUN-PHASE-4:  (P.C. = 4)

COMPILER:COMPILE-DEFINITION-1:  (P.C. = 57)
   Arg 0 (TYPE): DEFUN
   Arg 1 (FUNCTION-SPEC): CLASSIFYINIT
   Arg 2 (LAMBDA-LIST): (SYMBOL TYPE)
   Arg 3 (DEBUG-INFO): NIL
   Arg 4 (DEFINITION): ((LET ((TAX-ENT **) (TOP **)) (SET-SYMBOLS TAX-ENT (LIST SYMBOL)) (!ADDUNKNOWN TOP TAX-ENT) (!ADDUNKNOWN TAX-ENT TOP) (!MAPSUBS (FUNCTION **) TOP) (!ASSERTTAXSUBSUMES TOP TAX-ENT) (SI:DISPLACED (DOLIST ** **) (DO ** ** ** **)) (!CLASSIFY TAX-ENT) TAX-ENT))
   Arg 5 (FIXUP-P): NIL

COMPILER:COMPILE-DEFINITION:  (P.C. = 46)
   Arg 0 (EXP): (DEFUN CLASSIFYINIT (SYMBOL TYPE) (LET ((TAX-ENT **) (TOP **)) (SET-SYMBOLS TAX-ENT (LIST SYMBOL)) (!ADDUNKNOWN TOP TAX-ENT) (!ADDUNKNOWN TAX-ENT TOP) (!MAPSUBS (FUNCTION **) TOP) (!ASSERTTAXSUBSUMES TOP TAX-ENT) (SI:DISPLACED (DOLIST ** **) (DO ** ** ** **)) (!CLASSIFY TAX-ENT) TAX-ENT))
   Arg 1 (FIXUP-P): NIL
   Arg 2 (DEBUG-INFO): NIL

Rest of stack:
(:INTERNAL COMPILER:COMPILE-TO-FILE 0.):  (P.C. = 4)
COMPILER:COMPILE-TO-FILE:  (P.C. = 12)
COMPILER:COMPILE-FORM-FUNCTION:  (P.C. = 41)
COMPILER:COMPILE-FROM-STREAM-1:  (P.C. = 362)
COMPILER:PROCESS-FORMS-FROM-STREAM:  (P.C. = 114)
COMPILER:COMPILE-FROM-STREAM:  (P.C. = 250)
COMPILER:COMPILE-FILE:  (P.C. = 207)
SI:COMPILE-FILE-1:  (P.C. = 6)
SI:DO-FILE-TRANSFORMATIONS:  (P.C. = 235)
SI:PERFORM-TRANSFORMATIONS:  (P.C. = 175)
SI:PERFORM-TRANSFORMATIONS:  (P.C. = 71)
MAKE-SYSTEM:  (P.C. = 170)
SI:*EVAL:  (P.C. = 405)
SI:READFILE-INTERNAL:  (P.C. = 106)
LOAD:  (P.C. = 237)
SI:*EVAL:  (P.C. = 405)
SI:LISP-TOP-LEVEL1:  (P.C. = 130)
SYS:LISP-TOP-LEVEL:  (P.C. = 7)
15-Jan-84 16:41:20-EST,991;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 15 Jan 84 16:40-EST
Received: from SCRC-EUPHRATES by SCRC-TENEX with CHAOS; Sun 15-Jan-84 16:42:03-EST
Date: Sun, 15 Jan 84 16:41 EST
From: "David A. Moon" <Moon%SCRC-TENEX@MIT-MC.ARPA>
Subject: Compiler troubles in Rel 4.5
To: Kent M Pitman <KMP@MIT-MC.ARPA>
Cc: BUG-LISPM@MIT-MC.ARPA, Pigman@SRI-KL.ARPA
In-reply-to: The message of 15 Jan 84 00:08-EST from Kent M Pitman <KMP at MIT-MC>

    Date: 15 January 1984 00:08 EST
    From: Kent M Pitman <KMP @ MIT-MC>

    In Release 4.5, Local Mods 18.0, site configuration 37, on Flair 3600 One:

    A friend (Pigman@SRI-KL) encountered the following error during compilation:

	>>Error: Cannot address the variable #<NORMAL-LEXICAL-VARIABLE 7650152>
	  While in the function COMPILER:USE-STACK-ADDRESSING-P  ...
	  Error occurred while compiling NIL

This (attempting to use a lexically-inherited variable) generates a reasonable
error message in the Release 5 compiler.
15-Jan-84 18:51:51-EST,787;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 15 Jan 84 18:51-EST
Date: Sunday, 15 January 1984, 19:00-EST
From: Kent M Pitman <KMP at MIT-MC>
Subject: New Yank System
To: BUG-LISPM at MIT-OZ

In Release 5.0 [GC'd Beta Test rev 3], microcode TMC5-MIC 262,
corrected dusty plum, on Lisp Machine Apiary-9 (3600):

Am I correct in believing that c-X Altmode provides functionality
in a mini-buffer (eg, m-X) which is not otherwise accessible via
the normal new-yank primitives? I thought I understood c-X Altmode
to be a compatibility hold-over that provided functionality which
is always accessible via some other means. How can I get the 
equivalent effect of the c-0 c-X Altmode in

 c-X B *Something* c-Return
 m-X Set c-0 c-X Altmode

Maybe I'm just confused. -kmp
15-Jan-84 20:27:57-EST,719;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 15 Jan 84 20:27-EST
Received: from SCRC-CONNECTICUT by SCRC-QUABBIN with CHAOS; Sun 15-Jan-84 20:32:41-EST
Date: Sunday, 15 January 1984, 20:31-EST
From: Clark M. Baker <cmb at SCRC-QUABBIN>
Subject: New Yank System
To: Kent M Pitman <KMP at MIT-MC>
Cc: BUG-LISPM at MIT-OZ
In-reply-to: The message of 15 Jan 84 19:00-EST from Kent M Pitman <KMP at MIT-MC>

    Date: Sunday, 15 January 1984, 19:00-EST
    From: Kent M Pitman <KMP at MIT-MC>

    How can I get the 
    equivalent effect of the c-0 c-X Altmode in

     c-X B *Something* c-Return
     m-X Set c-0 c-X Altmode

    Maybe I'm just confused. -kmp

Does C-0 C-M-Y do what you want?
15-Jan-84 22:10:44-EST,1684;000000000000
Received: from SCRC-TENEX by MIT-OZ via Chaosnet; 15 Jan 84 22:09-EST
Received: from SCRC-EUPHRATES by SCRC-TENEX with CHAOS; Sun 15-Jan-84 22:00:12-EST
Date: Sunday, 15 January 1984, 22:01-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: New Yank System
To: Kent M Pitman <KMP at MIT-MC>
Cc: BUG-LISPM at MIT-OZ
In-reply-to: The message of 15 Jan 84 19:00-EST from Kent M Pitman <KMP at MIT-MC>

    Date: Sunday, 15 January 1984, 19:00-EST
    From: Kent M Pitman <KMP at MIT-MC>

    Am I correct in believing that c-X Altmode provides functionality
    in a mini-buffer (eg, m-X) which is not otherwise accessible via
    the normal new-yank primitives? I thought I understood c-X Altmode
    to be a compatibility hold-over that provided functionality which
    is always accessible via some other means. How can I get the 
    equivalent effect of the c-0 c-X Altmode in

     c-X B *Something* c-Return
     m-X Set c-0 c-X Altmode

There is no character you can type to get exactly the same effect,
however it's not a terribly useful effect.  Is this really something
you want to do?  (List the command history while in the middle of
typing a command.)  You can get roughly the same effect by typing
ClearInput m-0 m-Y.

c-X Altmode ought to be undefined in the minibuffer.  It is a bug, an
artifact of the way the command tables are initialized, that it is
defined in the minibuffer to be the same command as in normal mode.
There are a couple of other commands, or cases of commands, with this
bug: I noticed c-U c-X c-D and c-X I (the latter in the source only).
They're defined in the minibuffer but if you try them they don't work.
15-Jan-84 23:57:59-EST,2284;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 15 Jan 84 23:56-EST
Date: 15 January 1984 23:58 EST
From: Kent M Pitman <KMP @ MIT-MC>
Subject:  New Yank System
To: Moon @ SCRC-TENEX
cc: BUG-LISPM @ MIT-MC
References: The message of 15 Jan 84 19:00-EST from Kent M Pitman <KMP at MIT-MC>

    Date: Sun, 15 Jan 84 22:01 EST
    From: David A. Moon <Moon%SCRC-TENEX at MIT-MC.ARPA>

    ... There is no character you can type to get exactly the same effect,
    however it's not a terribly useful effect.  Is this really something
    you want to do?

Not offhand; I was just reacting to the documentation (The Yank System) 
in middle of page 4 where it says c-X Altmode is obsolete because c-m-Y
does the same thing. It seems that the statement is false or misleading 
and I wasn't sure if that was a LispM bug or a documentation bug.

    c-X Altmode ought to be undefined in the minibuffer...

In my opinion, many minibuffer commands are as well-defined in the 
minibuffer as in a main buffer. m-% is an example (especially in things
like m-Altmode or KBE command minibuffer where the text is of a complex
nature). In such case, c-X Altmode (or c-m-Y) makes at least fine 
conceptual sense, even if it is not defined by the implementation.

    There are a couple of other commands, ... c-U c-X c-D ... 
    
This might not be used very often but is still well-defined. In fact, I
have frequently had need of this one because things like m-X Set Visited
File Name, m-X Copy FIle, etc. obscure the current buffer's file version
number in the prompt and sometimes I want to name the version number
explicitly.

I even want to do m-X Insert File or m-X Write Region in minibuffers 
from time to time.

Anyway, the New Yank System is a clear improvement over what existed before
it in that it gives regular definitions to things that were formerly very
vague, but I think also that it takes more than simply defining away
recursive minibuffers to make me believe that they are ill-defined.
I use them in Emacs and they do just what I want.

There are many commands that do not make sense in mini-buffers and
that should be disallowed ... but whether they prompt for more information
in a minibuffer is not the right way to identify them.

17-Jan-84 05:53:37-EST,3885;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 17 Jan 84 05:53-EST
Date: Tuesday, 17 January 1984, 05:54-EST
From: Tim Mcnerney <TIM at MIT-CORWIN>
To: BUG-LISPM-MIT at MIT-OZ

In System 98.22, CADR 3.4, ZMail 53.5, MIT-Specific 22.0, microcode 306,
on Lisp Machine Thirty-one:


Insert your description of the circumstances here:

Should have defaulted everything but the machine...

>>TRAP 14055 (ARGTYP NUMBER PP 0 QIEQL)
The first argument to =, NIL, was of the wrong type.
The function expected a number.
Backtrace from the debugger:

FS:PRIMITIVE-COPY-FILE (P.C. = 476)

 Arg 0 (INPUT-PLIST-OR-PATHNAME): #FS:VMS-PATHNAME "CORWIN:USRD$:[TIM]CHORDS.LSP"
 Arg 1 (MAPPED-PATHNAME): #FS:VMS-PATHNAME "CORWIN:USRD$:[TIM]CHORDS.LSP"
 Arg 2 (OUTPUT-SPEC): #FS:VMS-PATHNAME "OBI:USRD$:"
 Rest arg: (:COPY-CREATION-DATE T :COPY-AUTHOR T ...)
Local 1 (ERROR): T
Local 2 (COPY-CREATION-DATE): T
Local 3 (COPY-AUTHOR): T
Local 4 (REPORT-STREAM): #:*TYPEIN-WINDOW*-SYN-STREAM
Local 5 (CREATE-DIRECTORIES): :QUERY
Local 6 (CHARACTERS): :DEFAULT
Local 7 (BYTE-SIZE): NIL
Local 8 (INTYPE): :LISP
Local 9 (INPUT-PLIST): (#FS:VMS-PATHNAME "CORWIN:USRD$:[TIM]CHORDS.LSP;1" :CREATION-DATE 23605171025 :BLOCK-SIZE ...)
Local 10 (INPUT-PATHNAME): #FS:VMS-PATHNAME "CORWIN:USRD$:[TIM]CHORDS.LSP;1"
Local 11 (INPUT-TRUENAME): NIL
Local 12 (BYTE-SIZE): NIL
Local 13 (CHARACTERS?): T
Local 14: NIL
Local 15: NIL
Local 16: NIL
Local 17 (.FILE-ABORTED-FLAG.): NIL
Local 18 (INSTREAM): NIL
Local 19 (DEFAULTED-NEW-NAME): NIL
Local 20: NIL
Local 21: NIL
Local 22: NIL
Local 23 (.FILE-ABORTED-FLAG.): NIL
Local 24 (OUTSTREAM): NIL
Local 25 (ERROR): NIL
Local 26 (*SELECTQ-ITEM*): NIL


(:METHOD PATHNAME :WILDCARD-MAP) (P.C. = 152)
  (SELF is #FS:VMS-PATHNAME "CORWIN:USRD$:[TIM]CHORDS.LSP")

 Arg 0 (OPERATION): :WILDCARD-MAP
 Arg 1 (OPERATION): #<DTP-FEF-POINTER FS:PRIMITIVE-COPY-FILE 30466010>
 Arg 2 (PLISTP): :MAYBE
 Arg 3 (DIR-LIST-OPTIONS): NIL
 Rest arg (ARGS): (#FS:VMS-PATHNAME "CORWIN:USRD$:[TIM]CHORDS.LSP" #FS:VMS-PATHNAME "OBI:USRD$:" :COPY-CREATION-DATE T ...)
Local 1 (DLIST): NIL
Local 2 (RESULTS): NIL
Local 3: NIL
Local 4 (DLIST-ENTRY): NIL
Local 5 (RESULT): NIL


COPY-FILE (P.C. = 230)

 Arg 0 (PATHNAME-OR-STREAM): #FS:VMS-PATHNAME "CORWIN:USRD$:[TIM]CHORDS.LSP"
 Arg 1 (NEW-NAME): "oberon:"
 Rest arg (OPTIONS): (:COPY-CREATION-DATE T :COPY-AUTHOR T ...)
Local 1 (ERROR): T
Local 2: ((FS:FILE-ERROR) SI:FILE-RETRY-HANDLER #FS:VMS-PATHNAME "CORWIN:USRD$:[TIM]CHORDS.LSP" G1426)
Local 3: ((** SI:FILE-RETRY-HANDLER #FS:VMS-PATHNAME "CORWIN:USRD$:[TIM]CHORDS.LSP" G1426) (** SI:CONDITION-CASE-THROW G0246))
Local 4 (MERGED-PATHNAME): #FS:VMS-PATHNAME "CORWIN:USRD$:[TIM]CHORDS.LSP"
Local 5 (NEW-PATHNAME): NIL
Local 6 (TRUENAME): NIL
Local 7 (RESULT): NIL


ZWEI:COPY-FILE-1 (P.C. = 350)

 Arg 0 (COPY-MODE): :DEFAULT
 Arg 1 (COPY-CREATION-DATE?): T
Local 0 (FILE-TYPE-STRING): "Copy file"
Local 1 (PATHNAME): #FS:VMS-PATHNAME "CORWIN:USRD$:[TIM]CHORDS.LSP"
Local 2 (TO-SPEC): "oberon:"
Local 3 (DIR): NIL
Local 4 (TO-PATHNAME): NIL
Local 5: NIL
Local 6 (ELT): NIL
Local 7: ((** SI:CONDITION-CASE-THROW G0246))
Local 8: ((FS:FILE-ERROR SYSTEM:REMOTE-NETWORK-ERROR) SI:CONDITION-CASE-THROW G0246)
Local 9 (ERROR): NIL
Local 10 (*SELECTQ-ITEM*): NIL
Local 11 (VALUE): NIL


ZWEI:COM-COPY-FILE (P.C. = 53)



Remainder of stack:

ZWEI:COM-EXTENDED-COMMAND (P.C. = 67)
ZWEI:COMMAND-EXECUTE (P.C. = 115)
ZWEI:PROCESS-COMMAND-CHAR (P.C. = 65)
(:METHOD ZWEI:WINDOW :EDIT) (P.C. = 464)
(:INTERNAL (:METHOD ZWEI:ZMACS-WINDOW :COMBINED :EDIT) 0) (P.C. = 74)
FUNCALL (P.C. = 25)
(:METHOD ZWEI:DISPLAYER :AROUND :EDIT) (P.C. = 31)
(:METHOD ZWEI:ZMACS-WINDOW :COMBINED :EDIT) (P.C. = 47)
ZWEI:ZMACS-WINDOW-TOP-LEVEL (P.C. = 46)
SI:PROCESS-TOP-LEVEL (P.C. = 152)
17-Jan-84 05:56:37-EST,1704;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 17 Jan 84 05:56-EST
Date: Tuesday, 17 January 1984, 05:57-EST
From: Tim Mcnerney <TIM at MIT-CORWIN>
To: BUG-LISPM at MIT-OZ

In System 98.22, CADR 3.4, ZMail 53.5, MIT-Specific 22.0, microcode 306,
on Lisp Machine Thirty-one:


Insert your description of the circumstances here:

What's the problem here?

>>TRAP 14055 (ARGTYP NUMBER PP 0 QIEQL)
The first argument to =, NIL, was of the wrong type.
The function expected a number.
Backtrace from the debugger:

FS:PRIMITIVE-COPY-FILE (P.C. = 476)

 Arg 0 (INPUT-PLIST-OR-PATHNAME): #FS:VMS-PATHNAME "CORWIN:USRD$:[TIM]CHORDS.LSP"
 Arg 1 (MAPPED-PATHNAME): #FS:VMS-PATHNAME "CORWIN:USRD$:[TIM]CHORDS.LSP"
 Arg 2 (OUTPUT-SPEC): #FS:VMS-PATHNAME "OBI:USRD$:[TIM]CHORDS.LSP."
 Rest arg: (:COPY-CREATION-DATE T :COPY-AUTHOR T ...)
Local 1 (ERROR): T
Local 2 (COPY-CREATION-DATE): T
Local 3 (COPY-AUTHOR): T
Local 4 (REPORT-STREAM): #:*TYPEIN-WINDOW*-SYN-STREAM
Local 5 (CREATE-DIRECTORIES): :QUERY
Local 6 (CHARACTERS): :DEFAULT
Local 7 (BYTE-SIZE): NIL
Local 8 (INTYPE): :LISP
Local 9 (INPUT-PLIST): (#FS:VMS-PATHNAME "CORWIN:USRD$:[TIM]CHORDS.LSP;1" :CREATION-DATE 23605171025 :BLOCK-SIZE ...)
Local 10 (INPUT-PATHNAME): #FS:VMS-PATHNAME "CORWIN:USRD$:[TIM]CHORDS.LSP;1"
Local 11 (INPUT-TRUENAME): NIL
Local 12 (BYTE-SIZE): NIL
Local 13 (CHARACTERS?): T
Local 14: NIL
Local 15: NIL
Local 16: NIL
Local 17 (.FILE-ABORTED-FLAG.): NIL
Local 18 (INSTREAM): NIL
Local 19 (DEFAULTED-NEW-NAME): NIL
Local 20: NIL
Local 21: NIL
Local 22: NIL
Local 23 (.FILE-ABORTED-FLAG.): NIL
Local 24 (OUTSTREAM): NIL
Local 25 (ERROR): NIL
Local 26 (*SELECTQ-ITEM*): NIL
17-Jan-84 13:51:53-EST,2335;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 17 Jan 84 13:51-EST
Date: Tuesday, 17 January 1984, 13:50-EST
From: Daniel Weise <DANIEL at MIT-MC>
Subject: mouse click gone astray?
To: BUG-LISPM at MIT-OZ

In Release 5.0 [GC'd Beta Test rev 3], microcode TMC5-MIC 262,
dusty plum, on Lisp Machine Jim Morrison (3600):

I was in the inspect pane of the debugger.  I had clicked left when the mouse was on the
bottom scroll bar to scroll downwards a page.  Then the following happened.  I have not
been able to reproduce it.

>>Trap: The argument given to the CDR instruction, 32768, was not a list, a locative or NIL.
While in the function TV:INSPECT-REAL-VALUE  DBG:PROCESS-SPECIAL-COMMAND  DBG:WINDOW-COMMAND-LOOP

TV:INSPECT-REAL-VALUE:  (P.C. = 64)
   Arg 0 (THING): (:MOUSE-BUTTON 32768 #<INSPECT-PANE Inspect Pane 3 3317763 exposed> 532 183)
   Local 1 (FUN): NIL
   Local 2 (.SELECTQ-ITEM.): :MOUSE-BUTTON

DBG:PROCESS-SPECIAL-COMMAND:  (P.C. = 60)
   Arg 0 (LIST): (:MOUSE-BUTTON 32768 #<INSPECT-PANE Inspect Pane 3 3317763 exposed> 532 183)

DBG:WINDOW-COMMAND-LOOP:  (P.C. = 172)

DBG:COM-WINDOW-DEBUGGER:  (P.C. = 5)

DBG:COMMAND-LOOP:  (P.C. = 436)

DBG:DEBUGGER-TOP-LEVEL:  (P.C. = 517)
   Arg 0 (*ERROR*-initialization): #<UNDEFINED-FUNCTION-TRAP 34643040>
   Arg 1 (*INNERMOST-VISIBLE-FRAME*-initialization): #<DTP-LOCATIVE 140300>
   Arg 2 (*REASON-DEBUGGER-ENTERED*-initialization): NIL
   Arg 3 (SPECIAL-COMMANDS): NIL

DBG:ENTER-DEBUGGER:  (P.C. = 16)
   Arg 0 (ERROR): #<UNDEFINED-FUNCTION-TRAP 34643040>
   --Defaulted args:--
   Arg 1 (REASON): NIL
   Arg 2 (SPECIAL-COMMANDS): NIL

DBG:DEBUGGER-HANDLER-HANDLE-CONDITION:  (P.C. = 7)
   Arg 0 (IGNORE): :HANDLE-CONDITION
   Arg 1 (COND): #<UNDEFINED-FUNCTION-TRAP 34643040>
   Arg 2 (IGNORE): #<DTP-LOCATIVE 65356700>

Rest of stack:
DBG:DEBUGGER-HANDLER:  (P.C. = 12)
(:METHOD CONDITION :SIGNAL):  (P.C. = 114)
(:METHOD CONDITION :COMBINED :SIGNAL):  (P.C. = 21)
SIGNAL:  (P.C. = 10)
DBG:SIGNAL-TRAP:  (P.C. = 3)
SYS:MICROCODE-ERROR-HANDLER:  (P.C. = 66)
COMPILATE-CIRCUIT:  (P.C. = 22)  (from PYGMALION:SYS$DISK:[DANIEL.SP]COMPILE)
SI:*EVAL:  (P.C. = 370)
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 200)
SI:LISP-COMMAND-LOOP:  (P.C. = 115)
SI:LISP-TOP-LEVEL1:  (P.C. = 22)
SI:LISP-TOP-LEVEL:  (P.C. = 7)
17-Jan-84 15:26:16-EST,1140;000000000000
Received: from SCRC-RIVERSIDE by MIT-OZ via Chaosnet; 17 Jan 84 15:16-EST
Received: from SCRC-YANGTZE by SCRC-RIVERSIDE with CHAOS; Tue 17-Jan-84 15:22:53-EST
Date: Tuesday, 17 January 1984, 15:15-EST
From: Carl Hoffman <CWH at SCRC-TENEX>
Subject: mouse click gone astray?
To: DANIEL at MIT-MC, BUG-LISPM at MIT-OZ
In-reply-to: The message of 17 Jan 84 13:50-EST from Daniel Weise <DANIEL at MIT-MC>

    Date: Tuesday, 17 January 1984, 13:50-EST
    From: Daniel Weise <DANIEL at MIT-MC>

    In Release 5.0 [GC'd Beta Test rev 3], microcode TMC5-MIC 262,
    dusty plum, on Lisp Machine Jim Morrison (3600):

    I was in the inspect pane of the debugger.  I had clicked left when the mouse was on the
    bottom scroll bar to scroll downwards a page.  Then the following happened.  I have not
    been able to reproduce it.

    >>Trap: The argument given to the CDR instruction, 32768, was not a list, a locative or NIL.
    While in the function TV:INSPECT-REAL-VALUE  DBG:PROCESS-SPECIAL-COMMAND  DBG:WINDOW-COMMAND-LOOP

I fixed this in the source about a month ago.  If I ever get the time, I'll
patch it.
17-Jan-84 16:39:57-EST,616;000000000000
Received: from MIT-LISPM-32 by MIT-OZ via Chaosnet; 17 Jan 84 16:34-EST
Date: Tuesday, 17 January 1984, 16:35-EST
From: Philippe Brou <PHILIP at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In System 98.26, CADR 3.4, ZMail 53.9, MIT-Specific 22.0,
Experimental 3D_Vision_system 49.0, Slide_system 8.0, microcode 306,
on Lisp Machine Thirty-two:

The new version of (:method tv:graphics-mixin :draw-filled-in-circle)
does not work properly. It sometimes leaves a few vertical lines blank
inside the circle.

Just try
(send query-io :draw-filled-in-circle 300. 300. 150. tv:alu-ior)
in the normal lisp listener.

19-Jan-84 01:37:23-EST,515;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 19 Jan 84 01:36-EST
Date: Thursday, 19 January 1984, 01:35-EST
From: Kent M Pitman <kmp at MIT-MC>
Subject: c-X 2 in Converse
To: BUG-LISPM at OZ

In Release 4.5 on PA Lisp Machine Avatar (CADR):

I just tried to do c-X 2 to a Converse Window and lost.
This seems the obvious thing to want to do if you have 
several conversations going and want to keep the top section
of each visible. It's not like I was going to select an editor
buffer or something...
19-Jan-84 09:13:10-EST,2249;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 19 Jan 84 09:12-EST
Received: from SCRC-YANGTZE by SCRC-QUABBIN with CHAOS; Thu 19-Jan-84 09:13:07-EST
Date: Thu, 19 Jan 84 09:12 EST
From: Charles Hornig <Hornig%SCRC-QUABBIN@MIT-MC.ARPA>
Subject: Confusing terms in bug report banner lines
To: "Kent M. Pitman" <KMP@MIT-MC.ARPA>, BUG-LISPM@MIT-MC.ARPA
In-reply-to: The message of 9 Nov 83 17:44-EST from Kent M. Pitman <KMP at MIT-MC>
Message-ID: <840119091229.4.Hornig@QUABBIN.SCRC.Symbolics>

    Date: Wednesday, 9 November 1983, 17:44-EST
    From: Kent M. Pitman <KMP at MC>

    In Symbolics Release 5.0 [GC'd Beta Test rev 2], Vanilla, 
    on PA Lisp Machine Avatar (CADR):

    This bug report contains information relevant to maintainers of the MIT system
    as well.

    Something Symbolics people might not have noticed but which I know people here 
    notice is that the following banner

      In Release 5.0 [GC'd Beta Test rev 2], Vanilla, on PA Lisp Machine Avatar (LM-2):

    is incorrect in a very bad way. A CADR is not an LM-2. It runs the same software
    but it was not built by Symbolics. LM-2 is a brand name. I often use the terms
    interchangeably in conversation, but some people have (I think rightly) jumped on
    me about the fact that we should call them CADRs if they were made here. An issue
    of pride, I think.

    Oh, and while we're on the subject, I prefer to see some modifier to the word
    "Release" or "System" since in fact there are these two competing systems and
    users are not always aware that they are different. I'd like to suggest that 
    the banner also routinely say "Symbolics Release" rather than just "Release"
    since it's chauvanistic to presume that the word "Release" implies Symbolics.

I changed (in the source) the line to say:

      In Release 5.0 [GC'd Beta Test rev 2], Vanilla (Symbolics LM-2), on PA Lisp Machine Avatar:

The rationale here is that the new stuff in parens (Symbolics LM-2)
is the type of software involved.  That is, you were running the
Symbolics LM-2 version of the Lisp System.  The fact that it runs on
CADR's is accidental.  I agree that its old placement next to the
machine name was misleading.
19-Jan-84 10:36:31-EST,3374;000000000000
Received: from SCRC-YUKON by MIT-OZ via Chaosnet; 19 Jan 84 10:36-EST
Received: from SCRC-CUYAHOGA by SCRC-YUKON with CHAOS; Thu 19-Jan-84 10:33:31-EST
Date: Thursday, 19 January 1984, 10:36-EST
From: Robert Kassel <rob at MIT-OZ>
Subject: bug in zmail
To: BUG-LISPM at MIT-OZ

In Experimental System 243.497, Experimental Hardcopy 21.23,
Experimental Zmail 84.88, Experimental LMFS 38.67,
Experimental Tape 22.9, cold load 114, microcode TMC5-MIC 262, FEP 18,
Full-GC, on Cuyahoga (3600):

I moused "file read in at startup" in profile window

>>Error: The object #<ZMAIL-CHOOSE-VARIABLE-VALUES-PANE Zmail Choose Variable Values Pane 2 32661673 exposed> received a :SET-ACCENT message, which went unclaimed.
         The rest of the message was (T)
While in the function (:INTERNAL ZMAIL-PROFILE-COMMAND-LIST 1)  ZMAIL-PROFILE-COMMAND-LIST  (:METHOD ZMAIL-PROFILE-EDITOR :PROCESS-SPECIAL-COMMAND)

(:INTERNAL ZMAIL-PROFILE-COMMAND-LIST 1):  (P.C. = 11)
   Arg 0 (**DEFSELECT-OP**): :MOUSE-BUTTON
   Arg 1 (CH): 100000
   Arg 2 (WINDOW): #<ZMAIL-CHOOSE-VARIABLE-VALUES-PANE Zmail Choose Variable Values Pane 2 32661673 exposed>
   Arg 3 (IGNORE): 324
   Arg 4 (IGNORE): 203
   Local 5 (WINDOW-NAME): NIL
   Local 6 (NEAR-MODE): NIL

ZMAIL-PROFILE-COMMAND-LIST:  (P.C. = 22)
   Arg 0 (OPERATION): :MOUSE-BUTTON
   Rest arg (SELECT-METHOD-ARGS): (100000 #<ZMAIL-CHOOSE-VARIABLE-VALUES-PANE Zmail Choose Variable Values Pane 2 32661673 exposed> 324 203)

(:METHOD ZMAIL-PROFILE-EDITOR :PROCESS-SPECIAL-COMMAND):  (P.C. = 5)
   Arg 0 (SELF): #<ZMAIL-PROFILE-EDITOR 103643156>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZMAIL-PROFILE-EDITOR -- 6. IV's, 3. FL's 113312014>
   Arg 2 (OPERATION): :PROCESS-SPECIAL-COMMAND
   Rest arg (ARGS): (:MOUSE-BUTTON 100000 #<ZMAIL-CHOOSE-VARIABLE-VALUES-PANE Zmail Choose Variable Values Pane 2 32661673 exposed> 324 203)

(:METHOD ZMAIL-COMMAND-LOOP-MIXIN :COMMAND-LOOP):  (P.C. = 134)
   Arg 0 (SELF): #<ZMAIL-PROFILE-EDITOR 103643156>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZMAIL-COMMAND-LOOP-MIXIN -- 10. IV's, 1. FL's 113311767>
   Arg 2 (OPERATION): :COMMAND-LOOP

(:METHOD ZMAIL-PROFILE-EDITOR :COMBINED :COMMAND-LOOP):  (P.C. = 50)
   Arg 0 (SELF): #<ZMAIL-PROFILE-EDITOR 103643156>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZMAIL-PROFILE-EDITOR -- 6. IV's, 3. FL's 113312014>
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

(:METHOD ZMAIL-PROFILE-EDITOR :EDIT-PROFILE):  (P.C. = 17)
   Arg 0 (SELF): #<ZMAIL-PROFILE-EDITOR 103643156>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZMAIL-PROFILE-EDITOR -- 6. IV's, 3. FL's 113312014>
   Arg 2 (OPERATION): :EDIT-PROFILE

(:DEFUN-METHOD COM-ZMAIL-PROFILE):  (P.C. = 34)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 32640161 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZMAIL-COMMAND-LOOP-MIXIN -- 10. IV's, 1. FL's 113321733>

COM-ZMAIL-PROFILE:  (P.C. = 12)
   Rest arg (ARGS): NIL

Rest of stack:
COMMAND-EXECUTE:  (P.C. = 55)
ZMAIL-COMMAND-EXECUTE:  (P.C. = 6)
(:INTERNAL ZMAIL-COMMAND-LIST 0):  (P.C. = 10)
ZMAIL-COMMAND-LIST:  (P.C. = 12)
(:METHOD ZMAIL-FRAME :PROCESS-SPECIAL-COMMAND):  (P.C. = 5)
(:METHOD ZMAIL-FRAME :COMMAND-LOOP):  (P.C. = 141)
(:METHOD ZMAIL-FRAME :COMBINED :COMMAND-LOOP):  (P.C. = 47)
ZMAIL-PROCESS-TOP-LEVEL:  (P.C. = 52)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
19-Jan-84 10:41:37-EST,4639;000000000000
Received: from SCRC-YUKON by MIT-OZ via Chaosnet; 19 Jan 84 10:40-EST
Received: from SCRC-CUYAHOGA by SCRC-YUKON with CHAOS; Thu 19-Jan-84 10:38:15-EST
Date: Thursday, 19 January 1984, 10:41-EST
From: Robert Kassel <rob at MIT-OZ>
Subject: bug in zmail
To: BUG-LISPM at MIT-OZ

In Experimental System 243.497, Experimental Hardcopy 21.23,
Experimental Zmail 84.88, Experimental LMFS 38.67,
Experimental Tape 22.9, cold load 114, microcode TMC5-MIC 262, FEP 18,
Full-GC, on Cuyahoga (3600):

This happens consistantly.  I've tried several machines.

>>Error: Device occurs twice in SPEECH:PS:<SR.ROB>MAIL.TXT
While in the function (:METHOD FS:TENEX-FAMILY-PATHNAME-MIXIN :PARSE-NAMESTRING)  FS:PARSE-PATHNAME  (:METHOD FS:PATHNAME :PARSE-TRUENAME)

(:METHOD FS:TENEX-FAMILY-PATHNAME-MIXIN :PARSE-NAMESTRING):  (P.C. = 211)
   Arg 0 (SELF): #<TOPS20-PATHNAME "SPEECH:">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:TENEX-FAMILY-PATHNAME-MIXIN -- 6. IV's, 1. FL's 113602635>
   Arg 2 (OPERATION): :PARSE-NAMESTRING
   Arg 3 (HOST-SPECIFIED): NIL
   Arg 4 (NAMESTRING): "SPEECH:PS:<SR.ROB>MAIL.TXT"
   Arg 5 (START): 0
   Arg 6 (END): 32
   Local 7 (QUOTE-CHAR): 26
   Local 8 (DIR-DELIM-ALIST): ((74 . 76))
   Local 9 (SUBDIR-DELIM): 56
   Local 10 (ALL-DELIMS): (56 74 72 56 73 40)
   Local 11 (IDX): 12
   Local 12 (TEM): "PS"
   Local 13 (TEM1): NIL
   Local 14 (DELIM): 72
   Local 15 (DIR-DELIM): NIL
   Local 16 (DEV): "SPEECH"
   Local 17 (DIR): NIL
   Local 18 (NAM): NIL
   Local 19 (TYP): NIL
   Local 20 (VERS): NIL
   Local 21 (TYPE-BEGUN): NIL
   Local 22 (NAME-SUPPLIED-P): NIL
   Local 23 (TYPE-SUPPLIED-P): NIL

FS:PARSE-PATHNAME:  (P.C. = 300)
   Arg 0 (THING): "SPEECH:PS:<SR.ROB>MAIL.TXT"
   Arg 1 (WITH-RESPECT-TO): #<TOPS20-HOST SPEECH 104717060>
   --Defaulted args:--
   Arg 2 (DEFAULTS): ((#<TOPS20-HOST SPEECH 104717060> . #<TOPS20-PATHNAME "SPEECH:PS:<SR.ROB>FOO.LISP">) (#<LISPM-HOST YUKON 104037517> . #<LMFS-PATHNAME "Y:>Dodds>foo.lisp">) (#<LISPM-HOST POINTER 104237054> . #<LMFS-PATHNAME "P:>Zippy>foo.lisp">) (NIL . #<TOPS20-PATHNAME "SPEECH:PS:<SR.ROB>FOO.LISP">))

(:METHOD FS:PATHNAME :PARSE-TRUENAME):  (P.C. = 4)
   Arg 0 (SELF): #<TOPS20-PATHNAME "SPEECH:">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:PATHNAME -- 0. IV's, 1. FL's 105156544>
   Arg 2 (OPERATION): :PARSE-TRUENAME
   Arg 3 (STRING): "SPEECH:PS:<SR.ROB>MAIL.TXT"

(:METHOD FS:PATHNAME :HEURISTIC-PARSE-MAYBE-HOSTED-PATHNAME):  (P.C. = 5)
   Arg 0 (SELF): #<TOPS20-PATHNAME "SPEECH:">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:PATHNAME -- 0. IV's, 1. FL's 105156544>
   Arg 2 (OPERATION): :HEURISTIC-PARSE-MAYBE-HOSTED-PATHNAME
   Arg 3 (STRING): "SPEECH:PS:<SR.ROB>MAIL.TXT"

FS:HEURISTIC-PARSE-MAYBE-HOSTED-PATHNAME:  (P.C. = 12)
   Arg 0 (STRING): "SPEECH:PS:<SR.ROB>MAIL.TXT"
   Arg 1 (DEFAULTS): ((#<TOPS20-HOST SPEECH 104717060> . #<TOPS20-PATHNAME "SPEECH:PS:<SR.ROB>SR/.ROB.BABYL">) (#<TOPS20-HOST OZ 104615036> . #<TOPS20-PATHNAME "OZ:PS:<ROB>ROB.BABYL">) (NIL . #<TOPS20-PATHNAME "SPEECH:PS:<SR.ROB>SR/.ROB.BABYL">))

PATHNAME-LIST-OPTION-PARSER:  (P.C. = 27)
   Arg 0 (TYPE): :MAIL
   Arg 1 (STRING): "Mail: SPEECH:PS:<SR.ROB>MAIL.TXT"
   Arg 2 (START): 6

OPTION-FROM-STRING:  (P.C. = 42)
   Arg 0 (STRING): "Mail: SPEECH:PS:<SR.ROB>MAIL.TXT"

PARSE-BABYL-OPTIONS:  (P.C. = 33)
   Arg 0 (STREAM): #<FILE-INPUT-CHARACTER-STREAM "SPEECH:PS:<SR.ROB>SR/.ROB.BABYL" 3172664>
   Arg 1 (INTERVAL): #<NODE 3173572>

Rest of stack:
(:METHOD BABYL-BUFFER :AFTER :INIT):  (P.C. = 15)
(:METHOD BABYL-BUFFER :COMBINED :INIT):  (P.C. = 31)
INSTANTIATE-FLAVOR:  (P.C. = 372)
MAKE-INSTANCE:  (P.C. = 6)
MAKE-SEQUENCE:  (P.C. = 6)
GET-ZMAIL-FILE:  (P.C. = 241)
MAKE-NEW-BUFFER:  (P.C. = 134)
(:INTERNAL ZMAIL-PROFILE-COMMAND-LIST 1):  (P.C. = 113)
ZMAIL-PROFILE-COMMAND-LIST:  (P.C. = 22)
(:METHOD ZMAIL-PROFILE-EDITOR :PROCESS-SPECIAL-COMMAND):  (P.C. = 5)
(:METHOD ZMAIL-COMMAND-LOOP-MIXIN :COMMAND-LOOP):  (P.C. = 134)
(:METHOD ZMAIL-PROFILE-EDITOR :COMBINED :COMMAND-LOOP):  (P.C. = 50)
(:METHOD ZMAIL-PROFILE-EDITOR :EDIT-PROFILE):  (P.C. = 17)
(:DEFUN-METHOD COM-ZMAIL-PROFILE):  (P.C. = 34)
COM-ZMAIL-PROFILE:  (P.C. = 12)
COMMAND-EXECUTE:  (P.C. = 55)
ZMAIL-COMMAND-EXECUTE:  (P.C. = 6)
(:INTERNAL ZMAIL-COMMAND-LIST 0):  (P.C. = 10)
ZMAIL-COMMAND-LIST:  (P.C. = 12)
(:METHOD ZMAIL-FRAME :PROCESS-SPECIAL-COMMAND):  (P.C. = 5)
(:METHOD ZMAIL-FRAME :COMMAND-LOOP):  (P.C. = 141)
(:METHOD ZMAIL-FRAME :COMBINED :COMMAND-LOOP):  (P.C. = 47)
ZMAIL-PROCESS-TOP-LEVEL:  (P.C. = 52)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
19-Jan-84 15:07:49-EST,2207;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 19 Jan 84 15:07-EST
Received: from SCRC-CONCORD by SCRC-QUABBIN with CHAOS; Thu 19-Jan-84 15:07:25-EST
Date: Thursday, 19 January 1984, 15:07-EST
From:  <BSG at SCRC-POINTER>
Subject: bug in zmail
To: rob at MIT-OZ, BUG-LISPM at MIT-OZ
In-reply-to: The message of 19 Jan 84 10:41-EST from Robert Kassel <rob at MIT-OZ>

    Date: Thursday, 19 January 1984, 10:41-EST
    From: Robert Kassel <rob at MIT-OZ>

    In Experimental System 243.497, Experimental Hardcopy 21.23,
    Experimental Zmail 84.88, Experimental LMFS 38.67,
    Experimental Tape 22.9, cold load 114, microcode TMC5-MIC 262, FEP 18,
    Full-GC, on Cuyahoga (3600):

    This happens consistantly.  I've tried several machines.

    >>Error: Device occurs twice in SPEECH:PS:<SR.ROB>MAIL.TXT
    While in the function (:METHOD FS:TENEX-FAMILY-PATHNAME-MIXIN :PARSE-NAMESTRING)  FS:PARSE-PATHNAME  (:METHOD FS:PATHNAME :PARSE-TRUENAME)

    (:METHOD FS:TENEX-FAMILY-PATHNAME-MIXIN :PARSE-NAMESTRING):  (P.C. = 211)
    FS:PARSE-PATHNAME:  (P.C. = 300)
    (:METHOD FS:PATHNAME :PARSE-TRUENAME):  (P.C. = 4)
    (:METHOD FS:PATHNAME :HEURISTIC-PARSE-MAYBE-HOSTED-PATHNAME):  (P.C. = 5)
       Arg 0 (SELF): #<TOPS20-PATHNAME "SPEECH:">
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:PATHNAME -- 0. IV's, 1. FL's 105156544>
       Arg 2 (OPERATION): :HEURISTIC-PARSE-MAYBE-HOSTED-PATHNAME
       Arg 3 (STRING): "SPEECH:PS:<SR.ROB>MAIL.TXT"

    FS:HEURISTIC-PARSE-MAYBE-HOSTED-PATHNAME:  (P.C. = 12)
       Arg 0 (STRING): "SPEECH:PS:<SR.ROB>MAIL.TXT"
       Arg 1 (DEFAULTS): ((#<TOPS20-HOST SPEECH 104717060> . #<TOPS20-PATHNAME "SPEECH:PS:<SR.ROB>SR/.ROB.BABYL">) (#<TOPS20-HOST OZ 104615036> . #<TOPS20-PATHNAME "OZ:PS:<ROB>ROB.BABYL">) (NIL . #<TOPS20-PATHNAME "SPEECH:PS:<SR.ROB>SR/.ROB.BABYL">))

    PATHNAME-LIST-OPTION-PARSER:  (P.C. = 27)
       Arg 0 (TYPE): :MAIL
       Arg 1 (STRING): "Mail: SPEECH:PS:<SR.ROB>MAIL.TXT"
Edit the above            line in your babyl file to say
Mail: PS:<SR.ROB>MAIL.TXT instead.  The SPEECH: can never
be interpreted by SPEECH, so it is now assumed not to be there
by the Lisp machine.
20-Jan-84 02:19:14-EST,2593;000000000000
Received: from MIT-MOON by MIT-OZ via Chaosnet; 20 Jan 84 02:18-EST
Date: Friday, 20 January 1984, 02:16-EST
From: Tom Cloney <MUSE at MIT-OZ>
Subject: A certain lack of robustness in m-X Set Fonts
To: BUG-LISPM at MIT-OZ

In Release 5.0 [GC'd Beta Test rev 3], microcode TMC5-MIC 262, (also loses in rel 4.5)
dusty plum, on Lisp Machine Keith Moon (3600):

m-X Set Fonts <return>
() <return>

The following backtrace may not be accurate because I tried to abort out of the error.
However, you should have no problem reproducing this.

>>Trap: The first argument given to the ARRAY-LEADER instruction, NIL, was not an array.
While in the function (:METHOD TV:SHEET :EDITOR-LINE-OUT)  ZWEI:REDISPLAY  ZWEI:REDISPLAY-ALL-WINDOWS

(:METHOD TV:SHEET :EDITOR-LINE-OUT):  (P.C. = 240)
   Arg 0 (SELF): #<ZMACS-WINDOW-PANE Zmacs Window Pane 1 2301167 exposed>
   Arg 1 (SELF-MAPPING-TABLE): TV:SHEET
   Arg 2 (OPERATION): :EDITOR-LINE-OUT
   Arg 3 (STRING): "TAKE IF YOU MUST."
   Arg 4 (START): 0.
   Arg 5 (END): 17.
   Arg 6 (SET-XPOS): 0.
   Arg 7 (SET-YPOS): 0.
   --Defaulted args:--
   Arg 8 (DWIDTH): NIL
   Local 9 (I): 0.
   Local 10 (N): 17.
   Local 11 (RIGHT-LIMIT): 1065.
   Local 12 (MARGIN-FLAG): T
   Local 13 (XPOS): NIL
   Local 14 (YPOS): NIL
   Local 15 (OYPOS): 2.
   Local 16 (ALUF): NIL
   Local 17 (WID): NIL
   Local 18 (FWT): NIL
   Local 19 (LKT): NIL
   Local 20 (CH): 84.
   Local 21 (FONT): NIL
   Local 22 (FONTX): 0.
   Local 23 (TEM): 0.
   Local 24 (BASE-ADJ): NIL
   Local 25 (F-MAP): #<ART-Q-26. 60052311>

ZWEI:REDISPLAY:  (P.C. = 1177)
   Arg 0 (WINDOW): #<WINDOW 12305714>
   --Defaulted args:--
   Arg 1 (RECENTER-TYPE): :POINT
   Arg 2 (RC1): NIL
   Arg 3 (RC2): NIL
   Arg 4 (FORCE-TO-COMPLETION-P): NIL

ZWEI:REDISPLAY-ALL-WINDOWS:  (P.C. = 34)
   --Defaulted args:--
   Arg 0 (FORCE-TO-COMPLETION-P): NIL
   Arg 1 (SELECT-P): T

(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 134)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 27170206>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:EDITOR -- 11. IV's, 0. FL's 15632514>
   Arg 2 (OPERATION): :EDIT
   --Defaulted args:--
   Arg 3 (TOP-LEVEL-P): T
   Arg 4 (DESCRIPTION): NIL

(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 41)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 27170206>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:TOP-LEVEL-EDITOR -- 12. IV's, 1. FL's 15632526>
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)

SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
   Arg 0 (IGNORE): NIL
20-Jan-84 11:13:40-EST,1566;000000000000
Mail-From: REID created at 20-Jan-84 11:13:13
Date: Fri, 20 Jan 1984  11:13 EST
Message-ID: <REID.11985138701.BABYL@MIT-OZ>
From: REID@MIT-OZ
To:   bug-lispm@MIT-OZ
cc:   reid@MIT-OZ
Subject: make-system

I have had this problem on Symbolics System 4.5.  When doing a
(make-system 'imaginer 'compile) the system attempts to increment the
version number of the component systems (see the "defsystem" below),
but complains that the version number of the second component system
("quantity") is wrong - not what the system expected.  The version
number expected seems to be the new version number of the first
component system ("diagram"), not the number of the "quantity" system.
(The numbers are different because sometimes I do a "make-system" on
the component systems separately, and sometimes I "make-system" the
complete "imaginer" system).

Is this a real bug, or am I doing something wrong?

   --- Reid Simmons ---

-------------------------------------------------

(defsystem imaginer
  (:pathname-default "oz:ps:<reid.code>")
  (:module damrup (rup equality rup noticers))
  (:module rup "ruputl")
  (:module examples ("example1" "example2" "example3" "example4" "example5"))
  (:module init ("structs" "misc" "consts" "geo-print"))
  (:component-systems diagram quantity history process simulation)
  (:fasload damrup)
  (:compile-load init (:fasload (rup tms)) (:fasload (rup tms)))
  (:compile-load rup (:fasload init damrup) (:fasload init damrup))
  (:readfile examples (:fasload init rup (simulation simulation))))
20-Jan-84 20:13:45-EST,3369;000000000000
Received: from MIT-XX by MIT-OZ via Chaosnet; 20 Jan 84 20:13-EST
Date: Friday, 20 January 1984, 17:27-EST
From: Ken Forbus <KDF at MIT-PYGMALION>
Subject: SXHASH still not fixed.....
To: BUG-LISPM at MIT-OZ

In Release 5.0 [GC'd Beta Test rev 3], microcode TMC5-MIC 262, FEP 17,
Dusty plum, on Lisp Machine Jimi Hendrix (3600):

First of all, when I last tried using Rel 5 - several MONTHS ago - I complained
about a bug in SXHASH.  I got a note saying it was patched.

Guess again.  The bug was still there.  Pick any three-element list, or probably any old list at all.
You will bomb out with MINUSP not getting a fixnum.  There is an OR, (OR (NULL X) ...) which is 
introducing the bug - X being nil causes the munging to be skipped, and NON-NEGATIVE-FIXNUM gets
NIL as an argument, which macroexpands into MINUSP, etc...This is exactly the same bug I complained
about lo those many months ago, and it wasn't fixed.  Foo.

After TK showed me how to find patches on Quabbin (Must a machine in the process of booting
die if OZ is not up?), I found SXHASH.  Dropped the OR test.  Now I get SXHASH-STRING as broken,
with the string "SET" causing it to break as shown below.  SIGH.

I don't know which is worse, the random "Lisp Stopped" blow-outs I get in Rel 4.5 or the inability
to even load interpreted versions of my code because very basic lisp operations don't work.

>>Error: No error-table entry for this micro-pc: 7036
While in the function SI:*EVAL  COND  SI:*EVAL

SI:*EVAL:  (P.C. = 123)
   Arg 0 (FORM): (SXHASH-STRING (GET-PNAME Y))
   Local 1: NIL
   Local 2 (ARGNUM): 0
   Local 3 (FCTN): SXHASH-STRING
   Local 4 (CFCTN): NIL
   Local 5 (ARGL): ((GET-PNAME Y))
   Local 6 (MAX-ARGS): NIL
   Local 7 (N-ARGS): 1
   Local 8 (ARG-DESC): NIL
   Local 9 (TEM): NIL
   Local 10 (COUNT): NIL
   Local 11 (QUOTE-STATUS): NIL
   Local 12 (REST-FLAG): NIL
   Local 13 (FEXPR-FLAG): NIL
   Local 14 (LAMBDA-LIST): NIL
   Local 15 (MACRO): SXHASH-STRING

COND:  (P.C. = 23)
   Rest arg (CLAUSES): (((SYMBOLP Y) (SXHASH-STRING (GET-PNAME Y))) ((STRINGP Y) (SXHASH-STRING Y)) ((TYPEP Y (QUOTE :FIXNUM)) Y) (T (SXHASH Y)))

SI:*EVAL:  (P.C. = 421)
   Arg 0 (FORM): (COND ((SYMBOLP Y) (SXHASH-STRING (GET-PNAME Y))) ((STRINGP Y) (SXHASH-STRING Y)) ((TYPEP Y (QUOTE :FIXNUM)) Y) (T (SXHASH Y)))

SI:*EVAL:  (P.C. = 356)
   Arg 0 (FORM): (ROT (COND ((SYMBOLP Y) (SXHASH-STRING **)) ((STRINGP Y) (SXHASH-STRING Y)) ((TYPEP Y **) Y) (T (SXHASH Y))) ROT)

SI:*EVAL:  (P.C. = 356)
   Arg 0 (FORM): (LOGXOR (ROT (COND (** **) (** **) (** Y) (T **)) ROT) HASH)

SETQ:  (P.C. = 20)
   Rest arg (SYMBOLS-AND-VALUES): (HASH (LOGXOR (ROT (COND ** ** ** **) ROT) HASH))

SI:*EVAL:  (P.C. = 421)
   Arg 0 (FORM): (SETQ HASH (LOGXOR (ROT (COND ** ** ** **) ROT) HASH))

SI:DO-INTERNAL:  (P.C. = 447)
   Arg 0 (DO-NAME): NIL
   Arg 1 (X): (((ROT 4) (HASH 0) Y) ((ATOM X) (SETQ HASH (LOGXOR ** HASH)) (NON-NEGATIVE-FIXNUM X)) (SETQ Y (CAR X) X (CDR X)) (OR (< (SETQ ROT **) 40) (SETQ ROT (- ROT 40))) (SETQ HASH (LOGXOR (ROT ** ROT) HASH)))

Rest of stack:
SXHASH:  (from PYGMALION:USRD$:[KDF]LOSSAGE)
SI:*EVAL:  (P.C. = 644)
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 200)
SI:LISP-COMMAND-LOOP:  (P.C. = 115)
SI:LISP-TOP-LEVEL1:  (P.C. = 22)
SI:LISP-TOP-LEVEL2:  (P.C. = 5)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
20-Jan-84 20:20:40-EST,870;000000000000
Received: from SCRC-TENEX by MIT-OZ via Chaosnet; 20 Jan 84 20:20-EST
Received: from SCRC-EUPHRATES by SCRC-TENEX with CHAOS; Fri 20-Jan-84 20:16:57-EST
Date: Friday, 20 January 1984, 20:23-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: A certain lack of robustness in m-X Set Fonts
To: Tom Cloney <MUSE at MIT-OZ>
Cc: BUG-LISPM at MIT-OZ
In-reply-to: The message of 20 Jan 84 02:16-EST from Tom Cloney <MUSE at MIT-OZ>

    Date: Friday, 20 January 1984, 02:16-EST
    From: Tom Cloney <MUSE at MIT-OZ>

    In Release 5.0 [GC'd Beta Test rev 3], microcode TMC5-MIC 262, (also loses in rel 4.5)
    dusty plum, on Lisp Machine Keith Moon (3600):

    m-X Set Fonts <return>
    () <return>

I see this has been fixed in the source.  The installed version of the Set Fonts command
does essentially no validity checking of what you type at it.
20-Jan-84 20:33:33-EST,720;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 20 Jan 84 20:32-EST
Date: 20 January 1984 17:14 EST
From: Communications Satellite <COMSAT @ MIT-MC>
Subject: Msg of Friday, 20 January 1984 17:14 EST
To: lispm @ MIT-OZ

============ A copy of your message is being returned, because: ============
"TOURETZKY@CMU" at MIT-MC is an unknown recipient.
============ Failed message follows: ============
Date: Friday, 20 January 1984, 17:14-EST
From:  <lispm at MIT-OZ>
Subject: book
To: touretzky at cmu

hi,
  Do you know how I get your book here in Cambridge?
None of the expected places seem to have it.  Am very eager
to see it.

	Thanks,
		Mark David
		Please Arpanet a reply to:  mdc.dendro @ mit-oz
20-Jan-84 20:53:44-EST,544;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 20 Jan 84 20:53-EST
Date: Friday, 20 January 1984, 19:21-EST
From:  <kab at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In System 98.29, CADR 3.4, ZMail 53.9, MIT-Specific 22.0, microcode 306,
ZM MIT, on Lisp Machine Eighteen:

if you attempt to LOAD a non-existent file you get a query of the form
(approx quote) "new pathname to use, or <END key character> to enter the
debugger:".  typing the end key does NOT enter the debugger.  in fact,
it just retries the operation with the same pathname.
20-Jan-84 21:13:32-EST,861;000000000000
Received: from SCRC-TENEX by MIT-OZ via Chaosnet; 20 Jan 84 21:13-EST
Received: from SCRC-NEPONSET by SCRC-TENEX with CHAOS; Fri 20-Jan-84 16:48:31-EST
Date: Friday, 20 January 1984, 16:47-EST
From: Mike McMahon <MMcM at SCRC-TENEX>
Subject: c-X 2 in Converse
To: Kent M Pitman <kmp at MIT-MC>
cc: BUG-LISPM at MIT-OZ
In-Reply-To: The message of 19 Jan 84 01:35-EST from Kent M Pitman <kmp at MIT-MC>
Message-ID: <840120164751.1.MMcM@SCRC.SCRC.Symbolics>

    Date: Thursday, 19 January 1984, 01:35-EST
    From: Kent M Pitman <kmp at MIT-MC>

    In Release 4.5 on PA Lisp Machine Avatar (CADR):

    I just tried to do c-X 2 to a Converse Window and lost.
    This seems the obvious thing to want to do if you have 
    several conversations going and want to keep the top section
    of each visible.

Fixed in system 246.  (Release 7?)
20-Jan-84 22:06:56-EST,1102;000000000000
Mail-From: KDF created at 20-Jan-84 22:06:03
Date: Fri, 20 Jan 1984  22:06 EST
Message-ID: <KDF.11985257548.BABYL@MIT-OZ>
From: KDF@MIT-OZ
To:   bug-lispm@MIT-OZ
Subject: Death of Jimi Hendrix?

	Running in 4.5 on Jimi, I have had the same kind of mysterious
crash that Alan had on Jimi with 5.0.  Specifically, running a long
computation (> 2 hours) will sometimes die in the middle in such
a way that even a warm boot will not recover.  I used Show Status - once -
and got the following information:

	FEP Lbus control: Use Uncorrected data, ignore double ECC error,
				Task 3 dismiss
	Sequencer error status: Microcode-halted
	Sequencer Misc. status: CTOS-came-from-IFU,TSK-STOP(sequencer stopped),
				Errhalt-sync
	3600 Program Counters:
	
	Macro PC/ (odd)1261051
	CPC/ 0

     -> OPC+0/ 40134			OPC+10/ 45701
	OPC+1/ 51151			OPC+11/ 45700
	OPC+1/ 50343			OPC+12/ 53707
	OPC+1/ 50342			OPC+13/ 52344
	OPC+1/ 50517			OPC+14/ 47537
	OPC+1/ 50516			OPC+15/ 47536
	OPC+1/ 50226			OPC+16/ 54000
	OPC+1/ 50225			OPC+17/ 40611


Phew! Does that tell anyone anything???
20-Jan-84 22:30:57-EST,2468;000000000000
Received: from SCRC-TENEX by MIT-OZ via Chaosnet; 20 Jan 84 22:29-EST
Received: from SCRC-EUPHRATES by SCRC-TENEX with CHAOS; Fri 20-Jan-84 22:13:44-EST
Date: Friday, 20 January 1984, 22:20-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: SXHASH still not fixed.....
To: Ken Forbus <KDF at MIT-PYGMALION>
Cc: BUG-LISPM at MIT-OZ
In-reply-to: The message of 20 Jan 84 17:27-EST from Ken Forbus <KDF at MIT-PYGMALION>

    Date: Friday, 20 January 1984, 17:27-EST
    From: Ken Forbus <KDF at MIT-PYGMALION>

    In Release 5.0 [GC'd Beta Test rev 3], microcode TMC5-MIC 262, FEP 17,
    Dusty plum, on Lisp Machine Jimi Hendrix (3600):

    First of all, when I last tried using Rel 5 - several MONTHS ago - I complained
    about a bug in SXHASH.  I got a note saying it was patched.

You probably got a note saying it was patched in the development system and
the fix would be included in Release 5.0, which you don't have yet.  Nobody
else has it yet either.  The beta-test system that you do have has not yet
received any patches, for reasons I don't want to go into here.

    After TK showed me how to find patches on Quabbin (Must a machine in the process of booting
    die if OZ is not up?), 

I don't know why MIT chose to set up its site configuration so that three of
its most unreliable computers (OZ, MC, CADR15) all must be up in order to boot
a Lisp machine.  It doesn't have to be that way.

			   I found SXHASH.  Dropped the OR test.  Now I get SXHASH-STRING as broken,
    with the string "SET" causing it to break as shown below.  SIGH.

I expect this is because you did not specify the correct spelling when you
called this internal routine.  It is in the SYS package, not the GLOBAL
package.  I can tell from the PC in the backtrace that the error was an
undefined function error.  Why wasn't the error-table loaded?  Did you punch
the machine in the nose while booting, e.g. by using the Abort key?  I wonder
why someone left the machine configured to load a different microcode than the
one the current world-load wanted.

    I don't know which is worse, the random "Lisp Stopped" blow-outs I get in Rel 4.5 or the inability
    to even load interpreted versions of my code because very basic lisp operations don't work.

Beta-test is designed to discover bugs like this.  It's not intended to
provide a fully-working system with quality control; that's the result of
the beta-test process.
21-Jan-84 14:04:53-EST,426;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 21 Jan 84 14:03-EST
Date: Saturday, 21 January 1984, 12:59-EST
From: Niels Lauritzen <SR.LAURITZEN at MIT-SPEECH>
Subject: desire to be put on this mailing list
To: info-lispm at MIT-OZ

TO whom it may concern,

May I please be added to the info-lispm mailing list.

I am unsure how to add my name myself, if it is indeed possible.

Thank you very much,

Niels
22-Jan-84 16:52:58-EST,10851;000000000000
Received: from MIT-LISPM-8 by MIT-OZ via Chaosnet; 22 Jan 84 16:52-EST
Date: Sunday, 22 January 1984, 16:53-EST
From: The Lisp Machine <LISPM at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In Experimental System 98.12, CADR 3.2, Experimental ZMail 53.5,
MIT-Specific 22.0, microcode 305, ZM MIT, on Lisp Machine Eight:


Insert your description of the circumstances here:

Patch file system-98-14.qfasl appears to be trashed:

>>TRAP 17440 (TRANS-TRAP)
The variable    @  is unbound.
Backtrace from the debugger:

SI:EVAL1 (P.C. = 240)

 Arg 0 (FORM):    @ 
   --Defaulted args:--
 Arg 1 (NOHOOK): NIL
Local 0 (ARGNUM): NIL
Local 1 (TEM): NIL
Local 2 (ENV): NIL
Local 3: NIL
Local 4 (FRAME): NIL
Local 5 (FCTN): NIL
Local 6 (ARG-DESC): NIL
Local 7 (NUM-ARGS): NIL
Local 8 (CLOSURE-PASSED): NIL
Local 9 (LAMBDA-LIST): NIL
Local 10 (LL): NIL
Local 11 (QUOTE-STATUS): NIL
Local 12 (REST-FLAG): NIL
Local 13 (ARGL): NIL
Local 14: NIL
Local 15 (IGNORE): NIL
Local 16 (ADL): NIL
Local 17 (ITEM): NIL
Local 18 (*SELECTQ-ITEM*): NIL


SI:READFILE-INTERNAL (P.C. = 224)

 Arg 0 (STANDARD-INPUT): #<FILE-INPUT-CHARACTER-STREAM "OZ:PS:<L.PATCH>SYSTEM-98-14.QFASL" 12522044>
 Arg 1 (PKG): NIL
 Arg 2 (NO-MSG-P): NIL
Local 0 (FILE-ID): (#FS:TOPS20-PATHNAME "OZ:PS:<L.PATCH>SYSTEM-98-14.QFASL.15" . 23576216655)
Local 1 (PATHNAME): #FS:TOPS20-PATHNAME "OZ:PS:<L.PATCH>SYSTEM-98-14.QFASL"
Local 2 (GENERIC-PATHNAME): #FS:LOGICAL-PATHNAME "SYS: PATCH; SYSTEM-98-14  "
Local 3 (PLIST): NIL
Local 4 (VARS): (FS:INTERPRETER-ENVIRONMENT FS:INTERPRETER-FUNCTION-ENVIRONMENT)
Local 5 (VALS): (NIL T)
Local 6: NIL
Local 7: NIL
Local 8 (EOF): (NIL)
Local 9 (FORM):    @ 


FS:LOAD-1 (P.C. = 373)

 Arg 0 (FILE): #FS:TOPS20-PATHNAME "OZ:PS:<L.PATCH>SYSTEM-98-14.QFASL"
 Arg 1 (PKG): NIL
 Arg 2 (NONEXISTENT-OK-FLAG): NIL
 Arg 3 (DONT-SET-DEFAULT-P): T
 Arg 4 (NO-MSG-P): NIL
Local 0: (ERROR ("Give up on loading ~A." #FS:TOPS20-PATHNAME "OZ:PS:<L.PATCH>SYSTEM-98-14.QFASL") T ("Give up on loading ~A." #FS:TOPS20-PATHNAME "OZ:PS:<L.PATCH>SYSTEM-98-14.QFASL") ...)
Local 1: ("Give up on loading ~A." #FS:TOPS20-PATHNAME "OZ:PS:<L.PATCH>SYSTEM-98-14.QFASL")
Local 2 (PATHNAME): #FS:TOPS20-PATHNAME "OZ:PS:<L.PATCH>SYSTEM-98-14.QFASL"
Local 3: (FS:MULTIPLE-FILE-NOT-FOUND SI:CONDITION-CASE-THROW G9106)
Local 4: ((FS:MULTIPLE-FILE-NOT-FOUND SI:CONDITION-CASE-THROW G9106) (** SI:EVAL-ABORT-TRIVIAL-ERRORS-HANDLER))
Local 5: ((#FS:LOGICAL-HOST "SYS" . #FS:LOGICAL-PATHNAME "SYS: FONTS; HL12B QFASL >") (#FS:TOPS20-CHAOS-HOST "MIT-OZ" . #FS:TOPS20-PATHNAME "OZ:PS:<LISPM>") (NIL . #FS:LOGICAL-PATHNAME "SYS: FONTS; HL12B QFASL >"))
Local 6: T
Local 7: (:QFASL :LISP)
Local 8: #FS:TOPS20-PATHNAME "OZ:PS:<L.PATCH>SYSTEM-98-14.QFASL"
Local 9: (SI:FILE-ERROR SI:FILE-RETRY-HANDLER #FS:TOPS20-PATHNAME "OZ:PS:<L.PATCH>SYSTEM-98-14.QFASL")
Local 10: ((SI:FILE-ERROR SI:FILE-RETRY-HANDLER #FS:TOPS20-PATHNAME "OZ:PS:<L.PATCH>SYSTEM-98-14.QFASL") (** SI:EVAL-ABORT-TRIVIAL-ERRORS-HANDLER))
Local 11: #<FILE-INPUT-CHARACTER-STREAM "OZ:PS:<L.PATCH>SYSTEM-98-14.QFASL" 12522044>
Local 12 (.FILE-ABORTED-FLAG.): :ABORT
Local 13 (STREAM): #<FILE-INPUT-CHARACTER-STREAM "OZ:PS:<L.PATCH>SYSTEM-98-14.QFASL" 12522044>
Local 14 (NEW-PATHNAME): NIL
Local 15 (*SELECTQ-ITEM*): NIL


LOAD (P.C. = 104)

 Arg 0 (FILE): #FS:TOPS20-PATHNAME "OZ:PS:<L.PATCH>SYSTEM-98-14.QFASL"
 Rest arg (KEY-OR-POSITIONAL-ARGS): (NIL NIL T NIL)


LOAD-PATCHES (P.C. = 1233)

 Rest arg (OPTIONS): NIL
Local 1 (TEM): NIL
Local 2 (SOMETHING-CHANGED): T
Local 3: ("Give up on trying to load patches.")
Local 4: (SYSTEM:REMOTE-NETWORK-ERROR ("Give up on trying to load patches.") T ("Give up on trying to load patches.") ...)
Local 5 (SYSTEM-NAMES): (("System" 142 :EXPERIMENTAL **) ("CADR" 3 :RELEASED **) ("ZMail" 65 :EXPERIMENTAL **) ("MIT-Specific" 26 :RELEASED **))
Local 6 (SELECTIVE-P): T
Local 7 (VERBOSE-P): T
Local 8 (UNRELEASED-P): NIL
Local 9 (SITE-SPECIFIED-P): NIL
Local 10 (SITE-P): T
Local 11 (FORCE-THRU-UNFINISHED-PATCHES-P): NIL
Local 12 (OPTS): NIL
Local 13 (FIRST-SYSTEM): T
Local 14: (("System" 142 :EXPERIMENTAL **) ("CADR" 3 :RELEASED **) ("ZMail" 65 :EXPERIMENTAL **) ("MIT-Specific" 26 :RELEASED **))
Local 15 (PATCH): ("System" 142 :EXPERIMENTAL (** ** ** ** ...))
Local 16: ("Give up on patches for ~A." "System")
Local 17: (ERROR ("Give up on patches for ~A." "System") T ("Give up on patches for ~A." "System") ...)
Local 18 (PATCH-DIR): (:RELEASED (** ** ** ** ...))
Local 19 (NEW-VERS): ((0 "System Loaded" "RMS" NIL) (1 "Initial fixes." "rms" NIL) (2 "Connection errors in OPEN.  Package not found errors in READ.
Error message for redefinition queries.
Compilation of Common Lisp package functions at top level.
HISTORY-ELEMENT-SET-YANK-POINTER.  C-M-Y in minibuffer.
Don't record interval-stream output for undo.  Query-replace on region bug.
M-Status and C-M-Status in RH.
Printing arrays doesn't cons.  Reading//printing 0-rank arrays.
Multiple notifications don't overwrite when in RH.
Pay attention to buffers not really visiting files.  Eliminate BUFFER-MUNGED-P.
Common Lisp LOOP compatibility.
Clear-Screen redisplays properly when there had been typeout.
Compiler blowouts with comma not in backquote.
UNDEFFLAVOR.  Combination type accepted as method type." "rms" NIL) (3 "Reason: fed doesn't make unnecessary kern tables
defstruct documentation; macros permanently loaded; :eval-when flushed;
   subtype determined at defstruct time
structures print with #s(...) syntax by default.
#s(...), #a(...) reader error lossage
*PRINT-ARRAY* bound to NIL in inspector
*EVALHOOK* lossage
New font TR12BI. Color fonts." "Mly" NIL) ...)
Local 20 (MAJOR): 142
Local 21 (PATCHES-NOT-LOADED): ((13 "Fix GLOBAL:GET-UNIVERSAL-TIME.  Arrest-the-process restart bug.
Verify sectionization faster. Automatic methods bug.
Fix scope of SPECIAL declarations in compiler and evaluator.
Changes in Common Lisp spec:
 Values returned by DEFTYPE, DEFVAR, DEFCONST...
 Sequential binding of SETF tempvars.
 DIGIT-CHAR, CHAR-NAME, PUSHNEW, (N)SUBST-IF(-NOT), SUBLIS,
 MAKE-BROADCAST-STREAM, MAKE-STRING-OUTPUT-STREAM, #(...), #*,
 WRITE-CHAR, WRITE-BYTE, ~E, ASSERT,
 PARSE-NAMESTRING//PARSE-PATHNAME, MAKE-PATHNAME, FILE-POSITION." "RMS" NIL) (14 "Rubout handler interface improvements:
 :ACTIVATION, :COMMAND, :PREEMPTABLE, :DO-NOT-ECHO, :PASS-THROUGH.
WITH-INPUT-EDITING.
Editor top level and Ztop mode have input histories; bugs fixed.
COMPILE-INTERVAL and Add Patch printout bug.  C-Sh-E on atoms.
READLINE, READ and PROMPT-AND-READ now use :ACTIVATION.
RECORD-SOURCE-FILE-NAME flushes duplicate entries.
UPDATE-INTERVAL-COMPILE-TICK bug.
CHAOS:CONN-FINISHED-P, CHAOS:CLOSE-CONN, CHAOS:FINISH-CONN.
Some streams now support :ANY-TYI.  Colons in logical pathnames bug." "rms" NIL) (16 "Changes in Common Lisp DEFSTRUCT.
M-X Split Screen bugs.  C-X 4 J.  Undefined major mode bug.
Flash parens forward as well as back.  C-M-B within comment bug.
Editor mouse blips//:MOUSE-OR-KBD-TYI bugs.  Hyper character bugs.
System E gets all the editors now.  Inspector list-modifying bugs.
Reading and printing font #s in character objects." "RMS" NIL) (17 "Reading from editor host (ED-BUFFER, ED, ED-FILE) bug.
TV:ADD-SYSTEM-KEY remembers all key bindings to a particular key,
  but only displays most recent. TV:REMOVE-SYSTEM-KEY pops.
WITH-OUTPUT-TO-STRING bug.
{SUB-}APROPOS takes new keywords :BOUNDP and :FBOUNDP
   -- same as :PREDICATE 'BOUNDP etc.
Mouse blips in zwei.  View window says when it's at end.
Printing histories and readtables.
Document flavors -- use (DOCUMENTATION FOO-FLAVOR 'DEFFLAVOR) to access." "Mly" NIL) ...)
Local 22 (CHANGE-STATUS): T
Local 23 (UNRELEASED-CONSIDERED): NIL
Local 24 (PATCH-SKIPPED): NIL
Local 25 (PROCEED-FLAG): T
Local 26: ((16 "Changes in Common Lisp DEFSTRUCT.
M-X Split Screen bugs.  C-X 4 J.  Undefined major mode bug.
Flash parens forward as well as back.  C-M-B within comment bug.
Editor mouse blips//:MOUSE-OR-KBD-TYI bugs.  Hyper character bugs.
System E gets all the editors now.  Inspector list-modifying bugs.
Reading and printing font #s in character objects." "RMS" NIL) (17 "Reading from editor host (ED-BUFFER, ED, ED-FILE) bug.
TV:ADD-SYSTEM-KEY remembers all key bindings to a particular key,
  but only displays most recent. TV:REMOVE-SYSTEM-KEY pops.
WITH-OUTPUT-TO-STRING bug.
{SUB-}APROPOS takes new keywords :BOUNDP and :FBOUNDP
   -- same as :PREDICATE 'BOUNDP etc.
Mouse blips in zwei.  View window says when it's at end.
Printing histories and readtables.
Document flavors -- use (DOCUMENTATION FOO-FLAVOR 'DEFFLAVOR) to access." "Mly" NIL) (20 "*VALUES*.  *DEFAULT-COMMON-LISP*.  Bind *, +, etc. per process.
Allow refs to all vars free at top level in listen loops.
:READ//INCREMENT-CURSORPOS in characters rounds up." "RMS" NIL) (21 "CHAOS:OPEN-STREAM with host NIL does a listen.
Pathname defaulting in Dired and BDired buffers.
RENAME-FILE, (UN)DELETE-FILE, COPY-FILE: wildcards, and values returned.
 M-X Rename File, M-X Copy File corresponding changes.
Attempt to prevent window output or switching while using cold load stream.
Implement PARSE-ERROR, PARSE-FERROR.  Check for freeing an error handler sg twice.
NAMED-STRUCTURE-INVOKE props work with or without colon.
M-X Undelete File failed to look for deleted files!
Bugs in FILE-RETRY-NEW-PATHNAME; :TRUENAME on pathnames.
Describe inconsistently-updated systems more nicely.
WARN-ON-ERRORS-CONDITION-HANDLER bug with ~'s.
Bugs in SIMPLE-MAKE-ARRAY, PRINT-RECORD-OCCURRENCES, FUNCTION-START-SYMBOLS.
Anonymous sections & files with structured name components.
Local declarations in interpreter bug.  :MOUSE-CLICK bug affecting ZMail's Buttons." "RMS" NIL) ...)
Local 27 (VERSION): (16 "Changes in Common Lisp DEFSTRUCT.
M-X Split Screen bugs.  C-X 4 J.  Undefined major mode bug.
Flash parens forward as well as back.  C-M-B within comment bug.
Editor mouse blips//:MOUSE-OR-KBD-TYI bugs.  Hyper character bugs.
System E gets all the editors now.  Inspector list-modifying bugs.
Reading and printing font #s in character objects." "RMS" NIL)
Local 28 (FILENAME): #FS:TOPS20-PATHNAME "OZ:PS:<L.PATCH>SYSTEM-98-14.QFASL"
Local 29 (.PROC.): #<PROCESS Flush file connections 3145110>
Local 30: NIL
Local 31: T
Local 32 (*SELECTQ-ITEM*): NIL
Local 33: NIL
Local 34: (FS:FILE-NOT-FOUND SI:CONDITION-CASE-THROW SI:G8780)
Local 35: ((FS:FILE-NOT-FOUND SI:CONDITION-CASE-THROW SI:G8780) (** SI:EVAL-ABORT-TRIVIAL-ERRORS-HANDLER))
Local 36 (NEW-STATUS): NIL


Remainder of stack:

SI:EVAL1 (P.C. = 1324)
EVAL (P.C. = 62)
SI:EVAL-ABORT-TRIVIAL-ERRORS (P.C. = 44)
SI:LISP-TOP-LEVEL1 (P.C. = 262)
SI:LISP-TOP-LEVEL (P.C. = 35)
22-Jan-84 17:22:13-EST,660;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 22 Jan 84 17:21-EST
Date: Sunday, 22 January 1984, 17:20-EST
From: Kent M Pitman <kmp at MIT-MC>
Subject: ZWEI: Documentation for char commands vs for extended commands
To: BUG-LISPM at OZ

In Symbolics Release 4.5 on PA Lisp Machine Avatar (CADR):

When you type Help C and a command like c-G it will tell
you the COM- function which implements the command,
but when you do Help C m-X Something, it will not show
you the COM- function that implements it, making it more
of a pain to m-. it, since you have to type out the whole
name of the function you guess actually does the implementation.
-kmp
22-Jan-84 20:25:21-EST,408;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 22 Jan 84 20:25-EST
Date: Sunday, 22 January 1984, 20:22-EST
From:  at MIT-OZ
Subject: FEP Mode for ZWEI?
To: BUG-LISPM at OZ

In Symbolics Release 4.5 on PA Lisp Machine Merlin (3600):

How come there's no FEP mode that you go into when editing
.BOOT and .FEP files so that you can type m-; and end up
inside matched parens in the comment area, etc?
22-Jan-84 21:39:51-EST,924;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 22 Jan 84 21:39-EST
Received: from SCRC-CHARLES by SCRC-QUABBIN with CHAOS; Sun 22-Jan-84 21:40:03-EST
Date: Sunday, 22 January 1984, 21:38-EST
From: David C. Plummer <DCP at SCRC-TENEX>
Subject: FEP Mode for ZWEI?
To: Somebody <KMP at MIT-OZ>, BUG-LISPM at MIT-OZ
In-reply-to: The message of 22 Jan 84 20:22-EST from at MIT-OZ

    Date: Sunday, 22 January 1984, 20:22-EST
    From:  at MIT-OZ

    In Symbolics Release 4.5 on PA Lisp Machine Merlin (3600):

    How come there's no FEP mode that you go into when editing
    .BOOT and .FEP files so that you can type m-; and end up
    inside matched parens in the comment area, etc?
Because you are the first one to think of it?  Actually, this should
only be for .BOOT files.  .FEP files are supposed to be files internal
to the FEP file system and should not be modified by explicit user
request.
22-Jan-84 23:00:04-EST,1062;000000000000
Received: from SCRC-RIVERSIDE by MIT-OZ via Chaosnet; 22 Jan 84 22:59-EST
Received: from SCRC-YANGTZE by SCRC-RIVERSIDE with CHAOS; Sun 22-Jan-84 22:58:33-EST
Date: Sunday, 22 January 1984, 22:59-EST
From: Carl Hoffman <CWH at SCRC-TENEX>
Subject: ZWEI: Documentation for char commands vs for extended commands
To: kmp at MIT-MC, BUG-LISPM at MIT-OZ
In-reply-to: The message of 22 Jan 84 17:20-EST from Kent M Pitman <kmp at MIT-MC>

    Date: Sunday, 22 January 1984, 17:20-EST
    From: Kent M Pitman <kmp at MIT-MC>

    In Symbolics Release 4.5 on PA Lisp Machine Avatar (CADR):

    When you type Help C and a command like c-G it will tell
    you the COM- function which implements the command,
    but when you do Help C m-X Something, it will not show
    you the COM- function that implements it, making it more
    of a pain to m-. it, since you have to type out the whole
    name of the function you guess actually does the implementation.

Do you know about m-X Edit Zmacs Command?
(Your bug report is still valid, of course.)
23-Jan-84 12:45:14-EST,542;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 23 Jan 84 12:41-EST
Date: Monday, 23 January 1984, 12:40-EST
From: Reid G. Simmons <REID at OZ>
Subject: conditions
To: BUG-LISPM at OZ

In Release 4.5, Reasoning Utility Package 9.0, Experimental DIAGRAM 9.0,
Experimental QUANTITY 14.0, HISTORY 23.0, PROCESS 19.0, SIMULATION 11.0,
FEP 17, site configuration 79, on Lisp Machine Bing Crosby:

Got an error "the argument CONDITION-NAME to MAKE-CONDITION, TV:BITBLT-ROW-OUT-OF-BOUNDS,
was of the wrong type.

   --- Reid Simmons ---
23-Jan-84 14:01:14-EST,5143;000000000000
Received: from MIT-MOON by MIT-OZ via Chaosnet; 23 Jan 84 14:00-EST
Date: Monday, 23 January 1984, 14:00-EST
From: David Chapman <Zvona at MIT|OZ>
Subject: OZ patches gronk out!!!!
To: BUG-LISPM at MIT|OZ

In System 242.262, microcode TMC5-MIC 262, dusty plum, on Lisp Machine Keith Moon (3600):

GLORK!  It is wonderful to get patches; dealing with old bugs is a drag.  
But it would be even nicer if the patches would load!

>>Error: The symbol NIL has an invalid function definition
While in the function NIL  (:METHOD HOST :SHORT-NAME)  (:METHOD PATHNAME-HOST-MIXIN :DEFAULT :NAME-AS-FILE-COMPUTER)

NIL:
   Arg 0: :SHADOWED-P
   Arg 1: :HOST

(:METHOD HOST :SHORT-NAME):  (P.C. = 52)
   Arg 0 (SELF): #<TOPS20-HOST NIL 12536514>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor HOST -- 5. IV's, 0. FL's 15142634>
   Arg 2 (OPERATION): :SHORT-NAME

(:METHOD PATHNAME-HOST-MIXIN :DEFAULT :NAME-AS-FILE-COMPUTER):  (P.C. = 4)
   Arg 0 (SELF): #<TOPS20-HOST NIL 12536514>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor PATHNAME-HOST-MIXIN -- 2. IV's, 0. FL's 15142742>
   Arg 2 (OPERATION): :NAME-AS-FILE-COMPUTER

(:METHOD FS:TENEX-FAMILY-PATHNAME-MIXIN :STRING-FOR-PRINTING):  (P.C. = 64)
   Arg 0 (SELF): #<TOPS20-PATHNAME "MIT|OZ:PS:<ZVONA>LISPM-INIT.">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:TENEX-FAMILY-PATHNAME-MIXIN -- 6. IV's, 1. FL's 25263674>
   Arg 2 (OPERATION): :STRING-FOR-PRINTING

(:METHOD FS:TOPS20-PATHNAME :COMBINED :STRING-FOR-PRINTING):  (P.C. = 12)
   Arg 0 (SELF): #<TOPS20-PATHNAME "MIT|OZ:PS:<ZVONA>LISPM-INIT.">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:TOPS20-PATHNAME -- 4. IV's, 8. FL's 25264046>
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

(:METHOD FS:EMPTY-PATHNAME :PRINT-SELF):  (P.C. = 51)
   Arg 0 (SELF): #<TOPS20-PATHNAME "MIT|OZ:PS:<ZVONA>LISPM-INIT.">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:EMPTY-PATHNAME -- 1. IV's, 0. FL's 25264077>
   Arg 2 (OPERATION): :PRINT-SELF
   Arg 3 (STREAM): #<INDENTING-STREAM 27763230>
   Arg 4 (IGNORE): 0
   Arg 5 (SLASHIFY-P): NIL

SI:PRINT-OBJECT:  (P.C. = 342)
   Arg 0 (EXP): #<TOPS20-PATHNAME "MIT|OZ:PS:<ZVONA>LISPM-INIT.">
   Arg 1 (I-PRINDEPTH): 0
   Arg 2 (SLASHIFY-P): NIL
   Arg 3 (STREAM): #<INDENTING-STREAM 27763230>
   --Defaulted args:--
   Arg 4 (WHICH-OPERATIONS): (:FRESH-LINE :STRING-OUT :SEND-IF-HANDLES :PRINT-SELF :DESCRIBE :WHICH-OPERATIONS :INDENT-RELATIVE :EVAL-INSIDE-YOURSELF :TYO :INDENTATION ...)

PRINC:  (P.C. = 10)
   Arg 0 (EXP): #<TOPS20-PATHNAME "MIT|OZ:PS:<ZVONA>LISPM-INIT.">
   Arg 1 (STREAM): #<INDENTING-STREAM 27763230>

Rest of stack:
FORMAT:FORMAT-CTL-ASCII:  (P.C. = 73)
(:PROPERTY FORMAT:A FORMAT:CTL-ONE-ARG):  (P.C. = 4)
FORMAT:FORMAT-CTL-OP:  (P.C. = 21)
FORMAT:FORMAT-CTL-STRING:  (P.C. = 74)
FORMAT:  (P.C. = 70)
(:METHOD DBG:ERROR-RESTART-HANDLER :DESCRIBE-RESTART):  (P.C. = 5)
CALL-FUNNY-FUNCTION:  (P.C. = 101)
Closure of #<ERROR-RESTART-HANDLER 30147314>:
DBG:FUNCALL-IN-ERROR-ENVIRONMENT:  (P.C. = 74)
DBG:SHOW-PROCEED-OPTION:  (P.C. = 45)
DBG:SHOW-PROCEED-OPTIONS:  (P.C. = 53)
DBG:DEBUGGER-TOP-LEVEL:  (P.C. = 513)
DBG:ENTER-DEBUGGER:  (P.C. = 16)
DBG:DEBUGGER-HANDLER-HANDLE-CONDITION:  (P.C. = 7)
DBG:DEBUGGER-HANDLER:  (P.C. = 12)
(:METHOD CONDITION :SIGNAL):  (P.C. = 114)
(:METHOD CONDITION :COMBINED :SIGNAL):  (P.C. = 21)
SIGNAL:  (P.C. = 10)
CALL-FUNNY-FUNCTION:  (P.C. = 110)
NIL:
(:METHOD HOST :SHORT-NAME):  (P.C. = 52)
(:METHOD SI:VANILLA-FLAVOR :SEND-IF-HANDLES):  (P.C. = 41)
CHAOS:HOST-SHORT-NAME:  (P.C. = 27)
CHAOS:GET-CONNECT-WHOSTATE:  (P.C. = 3)
CHAOS:WAIT-FOR-CONNECT:  (P.C. = 7)
CHAOS:CONNECT:  (P.C. = 250)
CHAOS:OPEN-STREAM:  (P.C. = 65)
CHAOS:|MEDIUM-CHAOS-((NETWORK CHAOS))-G0223|:  (P.C. = 11)
GET-CONNECTION-FOR-SERVICE-TO-HOST:  (P.C. = 12)
GET-CONNECTION-FOR-SERVICE-1:  (P.C. = 204)
GET-CONNECTION-FOR-SERVICE:  (P.C. = 7)
INVOKE-SERVICE-NAMESPACE-WITH-NAMESPACE:  (P.C. = 3)
INVOKE-SERVICE-ACCESS-PATH:  (P.C. = 21)
OPEN-NAMESPACE-SERVER:  (P.C. = 313)
QUERY-NAMESPACE-SERVER:  (P.C. = 70)
(:METHOD OBJECT :CHECK-VALIDITY):  (P.C. = 201)
(:METHOD OBJECT :CHECK-VALIDITY):  (P.C. = 30)
FIXUP-242-263-OBJECT:  (P.C. = 137)
(:INTERNAL (:METHOD NAMESPACE :MAP-OVER-OBJECTS-OF-CLASS) 0):  (P.C. = 13)
(:METHOD SI:EQ-HASH-TABLE :MAP-HASH):  (P.C. = 110)
(:METHOD NAMESPACE :MAP-OVER-OBJECTS-OF-CLASS):  (P.C. = 17)
FIXUP-242-263-NAMESPACES:  (P.C. = 232)
SI:*EVAL:  (P.C. = 370)
SI:LOAD-BIN-OP-FORM:  (P.C. = 4)
SI:BIN-LOAD-NEXT-COMMAND:  (P.C. = 20)
SI:BIN-LOAD-TOP-LEVEL:  (P.C. = 6)
SI:BIN-LOAD-FILE-INTERNAL:  (P.C. = 111)
LOAD-PATCHES:  (P.C. = 434)
SI:*EVAL:  (P.C. = 370)
AND:  (P.C. = 13)
SI:*EVAL:  (P.C. = 421)
COND:  (P.C. = 42)
SI:*EVAL:  (P.C. = 421)
SI:LOAD-BIN-OP-FORM:  (P.C. = 4)
SI:BIN-LOAD-NEXT-COMMAND:  (P.C. = 20)
SI:BIN-LOAD-TOP-LEVEL:  (P.C. = 6)
SI:BIN-LOAD-FILE-INTERNAL:  (P.C. = 111)
LOAD:  (P.C. = 266)
LOGIN:  (P.C. = 422)
SI:*EVAL:  (P.C. = 370)
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 200)
SI:LISP-COMMAND-LOOP:  (P.C. = 115)
SI:LISP-TOP-LEVEL1:  (P.C. = 22)
SI:LISP-TOP-LEVEL:  (P.C. = 7)
23-Jan-84 14:03:51-EST,3151;000000000000
Received: from MIT-MOON by MIT-OZ via Chaosnet; 23 Jan 84 14:03-EST
Date: Monday, 23 January 1984, 14:02-EST
From: David Chapman <Zvona at MIT|OZ>
Subject: Son of OZ patches gronk out
To: BUG-LISPM at MIT|OZ

In System 242.262, microcode TMC5-MIC 262, dusty plum, on Lisp Machine Keith Moon (3600):

This is the error that caused the recursive error that I just reported.

>>Error: The symbol NIL has an invalid function definition
While in the function NIL  (:METHOD HOST :SHORT-NAME)  (:METHOD SI:VANILLA-FLAVOR :SEND-IF-HANDLES)

NIL:
   Arg 0: :SHADOWED-P
   Arg 1: :HOST

(:METHOD HOST :SHORT-NAME):  (P.C. = 52)
   Arg 0 (SELF): #<LISPM-HOST NIL 347443>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor HOST -- 5. IV's, 0. FL's 15142051>
   Arg 2 (OPERATION): :SHORT-NAME

(:METHOD SI:VANILLA-FLAVOR :SEND-IF-HANDLES):  (P.C. = 41)
   Arg 0 (SELF): #<LISPM-HOST NIL 347443>
   Arg 1 (SELF-MAPPING-TABLE): SI:VANILLA-FLAVOR
   Arg 2 (OPERATION): :SEND-IF-HANDLES
   Arg 3 (OP): :SHORT-NAME
   Rest arg (TO-SEND): NIL

CHAOS:HOST-SHORT-NAME:  (P.C. = 27)
   Arg 0 (HOST): #<LISPM-HOST NIL 347443>

CHAOS:GET-CONNECT-WHOSTATE:  (P.C. = 3)
   Arg 0 (HOST): #<LISPM-HOST NIL 347443>

CHAOS:WAIT-FOR-CONNECT:  (P.C. = 7)
   Arg 0 (CONN): #<CHAOS Connection for NAMESPACE to SCRC|WAIKATO 27654126>
   Arg 1 (EXPECTED-STATE): CHAOS:OPEN-STATE
   Arg 2 (TIMEOUT): 1130

CHAOS:CONNECT:  (P.C. = 250)
   Arg 0 (HOST): #<LISPM-HOST NIL 347443>
   Arg 1 (CONTACT-NAME): "NAMESPACE"
   Arg 2 (WINDOW-SIZE): 15
   Arg 3 (TIMEOUT): 1130

CHAOS:OPEN-STREAM:  (P.C. = 65)
   Arg 0 (HOST): #<LISPM-HOST NIL 347443>
   Arg 1 (CONTACT-NAME): "NAMESPACE"
   Rest arg: NIL

Rest of stack:
CHAOS:|MEDIUM-CHAOS-((NETWORK CHAOS))-G0223|:  (P.C. = 11)
GET-CONNECTION-FOR-SERVICE-TO-HOST:  (P.C. = 12)
GET-CONNECTION-FOR-SERVICE-1:  (P.C. = 204)
GET-CONNECTION-FOR-SERVICE:  (P.C. = 7)
INVOKE-SERVICE-NAMESPACE-WITH-NAMESPACE:  (P.C. = 3)
INVOKE-SERVICE-ACCESS-PATH:  (P.C. = 21)
OPEN-NAMESPACE-SERVER:  (P.C. = 313)
QUERY-NAMESPACE-SERVER:  (P.C. = 70)
(:METHOD OBJECT :CHECK-VALIDITY):  (P.C. = 201)
(:METHOD OBJECT :CHECK-VALIDITY):  (P.C. = 30)
FIXUP-242-263-OBJECT:  (P.C. = 137)
(:INTERNAL (:METHOD NAMESPACE :MAP-OVER-OBJECTS-OF-CLASS) 0):  (P.C. = 13)
(:METHOD SI:EQ-HASH-TABLE :MAP-HASH):  (P.C. = 110)
(:METHOD NAMESPACE :MAP-OVER-OBJECTS-OF-CLASS):  (P.C. = 17)
FIXUP-242-263-NAMESPACES:  (P.C. = 232)
SI:*EVAL:  (P.C. = 370)
SI:LOAD-BIN-OP-FORM:  (P.C. = 4)
SI:BIN-LOAD-NEXT-COMMAND:  (P.C. = 20)
SI:BIN-LOAD-TOP-LEVEL:  (P.C. = 6)
SI:BIN-LOAD-FILE-INTERNAL:  (P.C. = 111)
LOAD-PATCHES:  (P.C. = 434)
SI:*EVAL:  (P.C. = 370)
AND:  (P.C. = 13)
SI:*EVAL:  (P.C. = 421)
COND:  (P.C. = 42)
SI:*EVAL:  (P.C. = 421)
SI:LOAD-BIN-OP-FORM:  (P.C. = 4)
SI:BIN-LOAD-NEXT-COMMAND:  (P.C. = 20)
SI:BIN-LOAD-TOP-LEVEL:  (P.C. = 6)
SI:BIN-LOAD-FILE-INTERNAL:  (P.C. = 111)
LOAD:  (P.C. = 266)
LOGIN:  (P.C. = 422)
SI:*EVAL:  (P.C. = 370)
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 200)
SI:LISP-COMMAND-LOOP:  (P.C. = 115)
SI:LISP-TOP-LEVEL1:  (P.C. = 22)
SI:LISP-TOP-LEVEL:  (P.C. = 7)
23-Jan-84 14:12:35-EST,2421;000000000000
Received: from MIT-MOON by MIT-OZ via Chaosnet; 23 Jan 84 14:11-EST
Date: Mon, 23 Jan 84 14:11 EST
From: David Chapman <Zvona@MIT-OZ.ARPA>
To: BUG-LISPM@MIT-OZ.ARPA

In System 242.265, Zmail 83.42, LMFS 37.31, Tape 21.9,
microcode TMC5-MIC 262, dusty plum, on Lisp Machine Keith Moon (3600):

Those patches have broken the world sufficiently that I can't do
anything.

>>Error: The symbol NIL has an invalid function definition
While in the function NIL  (:METHOD NET:HOST :SHORT-NAME)  (:METHOD SI:VANILLA-FLAVOR :SEND-IF-HANDLES)

NIL:
   Arg 0: :SHADOWED-P
   Arg 1: :HOST

(:METHOD NET:HOST :SHORT-NAME):  (P.C. = 52)
   Arg 0 (SELF): #<VMS-HOST NIL 12551524>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NET:HOST -- 5. IV's, 0. FL's 15143200>
   Arg 2 (OPERATION): :SHORT-NAME

(:METHOD SI:VANILLA-FLAVOR :SEND-IF-HANDLES):  (P.C. = 41)
   Arg 0 (SELF): #<VMS-HOST NIL 12551524>
   Arg 1 (SELF-MAPPING-TABLE): SI:VANILLA-FLAVOR
   Arg 2 (OPERATION): :SEND-IF-HANDLES
   Arg 3 (OP): :SHORT-NAME
   Rest arg (TO-SEND): NIL

CHAOS:HOST-SHORT-NAME:  (P.C. = 27)
   Arg 0 (HOST): #<VMS-HOST NIL 12551524>

CHAOS:GET-CONNECT-WHOSTATE:  (P.C. = 3)
   Arg 0 (HOST): #<VMS-HOST NIL 12551524>

CHAOS:WAIT-FOR-CONNECT:  (P.C. = 7)
   Arg 0 (CONN): #<CHAOS Connection for FILE 1 to MIT|PYGMALION 27654126>
   Arg 1 (EXPECTED-STATE): CHAOS:OPEN-STATE
   Arg 2 (TIMEOUT): 1130

CHAOS:CONNECT:  (P.C. = 250)
   Arg 0 (HOST): #<VMS-HOST NIL 12551524>
   Arg 1 (CONTACT-NAME): "FILE 1"
   Arg 2 (WINDOW-SIZE): 5
   --Defaulted args:--
   Arg 3 (TIMEOUT): 1130

(:METHOD FS:HOST-UNIT :VALIDATE-CONTROL-CONNECTION):  (P.C. = 71)
   Arg 0 (SELF): #<HOST-UNIT 34442110>
   Arg 1 (SELF-MAPPING-TABLE): FS:HOST-UNIT
   Arg 2 (OPERATION): :VALIDATE-CONTROL-CONNECTION
   --Defaulted args:--
   Arg 3 (NO-ERROR-P): NIL

Rest of stack:
(:METHOD FS:QFILE-ACCESS-PATH :NEW-HOST-UNIT):  (P.C. = 14)
(:METHOD FS:QFILE-ACCESS-PATH :GET-DATA-CONNECTION):  (P.C. = 35)
FS:OPEN-CHAOS:  (P.C. = 435)
(:METHOD FS:QFILE-ACCESS-PATH :OPEN):  (P.C. = 7)
(:METHOD FS:ACTIVE-PATHNAME-MIXIN :OPEN):  (P.C. = 14)
FS:COMMON-LISP-OPEN:  (P.C. = 445)
OPEN:  (P.C. = 255)
FS:LOAD-OPEN:  (P.C. = 104)
LOAD:  (P.C. = 114)
SI:*EVAL:  (P.C. = 370)
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 200)
SI:LISP-COMMAND-LOOP:  (P.C. = 115)
SI:LISP-TOP-LEVEL1:  (P.C. = 22)
SI:LISP-TOP-LEVEL:  (P.C. = 7)
23-Jan-84 18:28:24-EST,2269;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 23 Jan 84 18:27-EST
Date: Monday, 23 January 1984, 18:26-EST
From: Kent M Pitman <kmp at MIT-MC>
Subject: Yes, but...
To: Hornig%SCRC-QUABBIN at MIT-MC.ARPA, KMP at MIT-MC.ARPA,
    BUG-LISPM at MIT-MC.ARPA
In-reply-to: <840119091229.4.Hornig@QUABBIN.SCRC.Symbolics>

    Date: Thu, 19 Jan 84 09:12 EST
    From: Charles Hornig <Hornig%SCRC-QUABBIN at MIT-MC.ARPA>

	Date: Wednesday, 9 November 1983, 17:44-EST
	From: Kent M. Pitman <KMP at MC>

	In Symbolics Release 5.0 [GC'd Beta Test rev 2], Vanilla, 
	on PA Lisp Machine Avatar (CADR):

    I changed (in the source) the line to say:

	  In Release 5.0 [GC'd Beta Test rev 2], Vanilla (Symbolics LM-2),
          on PA Lisp Machine Avatar:

    The rationale here is that the new stuff in parens (Symbolics LM-2)
    is the type of software involved.  That is, you were running the
    Symbolics LM-2 version of the Lisp System.  The fact that it runs on
    CADR's is accidental.  I agree that its old placement next to the
    machine name was misleading.

It seems to me that the word Vanilla modifies the world load and has nothing
to do with the software type at all and that the new placement is only
slightly less random. I would prefer to see

   In MIT System 98.3 ...
   In Symbolics 3600 Release 4.2 ...
   In Symbolics LM-2 Release 4.3 ...

because it

 * is less ambiguous about the fact that it refers to software.
 * makes it easy for someone reading the bug report to find the most 
   useful bits right away -- is this a bug report i care about?
 * makes it easy for me to c-W out the middle, which is generally worthless.
 * makes it easier for programs to find since search strings like 
   "Symbolics 3600 Release 8.6" would then be useful in filters, etc.
 * minimizes the chance that some user will break it into "(Symbolics
   LM-2)" over two lines because the current position makes a high probability
   it will get broken over lines, making it invisible to filters that
   do a simple string search.
 * will not look as dumb when the band-additional-info is empty. (Unless
   you put in a more hairy format control string than i expected, it is
   going to look like , (Symbolics LM-2), ...
23-Jan-84 18:39:52-EST,833;000000000000
Mail-From: KDF created at 23-Jan-84 18:38:49
Date: Mon, 23 Jan 1984  18:38 EST
Message-ID: <KDF.11986006252.BABYL@MIT-OZ>
From: KDF@MIT-OZ
To:   bug-lispm@MIT-OZ
Subject: Jimi Hendrix is sick...

	...and it could be hardware.  2 hours, 48 minutes
into a computation, using rel 4.5, the machine fled into
the FEP.  Show Status provided the following:

FEP Lbus control: use uncorrected data, Ignore Double ECC Error,
					Task 3 Dismiss
Sequencer Error Status: Microcode Halted
Sequencer Misc: TSK-STOP (sequencer stopped) Errhalt-Sync
3600 Program counters:

Macro PC/ (Even) 1226663
CPC/ 2047
->	OPC+0/ 146743	OPC+10/ 53715
	+1/ 55524	+11/ 44400
	+2/ 46743	+12/ 40410
	+3/ 50004	+13/ 53707
	+4/ 4561	+14/ 152344
	+5/ 45340	+15/ 47537
	+6/ 47065	+16/ 47536
	+7/52312	+17/ 54000

Sigh.  What can be done?
23-Jan-84 18:45:47-EST,606;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 23 Jan 84 18:45-EST
Date: Monday, 23 January 1984, 18:44-EST
From: Kent M Pitman <kmp at MIT-MC>
Subject: Survey Reminders
To: BUG-LISPM at OZ

In ZMail in Symbolics Release 4.5 on Lisp Machine Frank Sinatra:

It's a key feature of Reminders in Babyl that you can edit the survey
and view the individual messages after you have surveyed them.
m-X Survey Reminders is virtually useless because it does typeout
instead of just putting the messages in the real survey area for me to
peruse.

-kmp

ps Why is there no m-X Survey Expired Messages?
23-Jan-84 20:48:15-EST,1218;000000000000
Received: from SCRC-TENEX by MIT-OZ via Chaosnet; 23 Jan 84 20:47-EST
Received: from SCRC-DACHSHUND by SCRC-TENEX with CHAOS; Mon 23-Jan-84 19:55:57-EST
Date: Monday, 23 January 1984, 19:55-EST
From: Mike McMahon <MMcM at SCRC-TENEX>
Subject: Survey Reminders
To: Kent M Pitman <kmp at MIT-MC>
Cc: BUG-LISPM at MIT-OZ
In-reply-to: The message of 23 Jan 84 18:44-EST from Kent M Pitman <kmp at MIT-MC>
Message-ID: <840123195513.1.MMcM@SCRC.SCRC.Symbolics>

    Date: Monday, 23 January 1984, 18:44-EST
    From: Kent M Pitman <kmp at MIT-MC>

    In ZMail in Symbolics Release 4.5 on Lisp Machine Frank Sinatra:

    It's a key feature of Reminders in Babyl that you can edit the survey
    and view the individual messages after you have surveyed them.
    m-X Survey Reminders is virtually useless because it does typeout
    instead of just putting the messages in the real survey area for me to
    peruse.

In other words, you want to Select a collection of the current
reminders, and the Survey Reminders command isn't any use to you, right?

    ps Why is there no m-X Survey Expired Messages?

Applying the above reasoning, you probably wanted to Select the Expired
messages, right?
23-Jan-84 21:24:23-EST,2225;000000000000
Received: from MIT-MORRISON by MIT-OZ via Chaosnet; 23 Jan 84 21:22-EST
Date: Monday, 23 January 1984, 21:21-EST
From: Margaret M. Fleck <FLECK at MIT-OZ>
Subject: bug in meta-x hardcopy buffer
To: BUG-LISPM at MIT-OZ

In Release 5.0 [GC'd Beta Test rev 3], microcode TMC5-MIC 262, FEP 17,
dusty plum, on Lisp Machine Jim Morrison (3600):

All I did was invoke meta-x hardcopy buffer on my buffer and ....



>>Trap: The argument given to the ZEROP instruction, NIL, was not a number.
While in the function (:METHOD PRESS:PRESS-STREAM :PUT-PENDING-CHARS)  (:METHOD PRESS:PRESS-STREAM :SET-DEVICE-FONT)  (:METHOD SI:HARDCOPY-STREAM-FONT-MIXIN :CHECK-FONT)

(:METHOD PRESS:PRESS-STREAM :PUT-PENDING-CHARS):  (P.C. = 2)
   Arg 0 (SELF): #<PRESS-STREAM 22516767>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor PRESS:PRESS-STREAM -- 32. IV's, 4. FL's 17611766>
   Arg 2 (OPERATION): :PUT-PENDING-CHARS

(:METHOD PRESS:PRESS-STREAM :SET-DEVICE-FONT):  (P.C. = 4)
   Arg 0 (SELF): #<PRESS-STREAM 22516767>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor PRESS:PRESS-STREAM -- 32. IV's, 4. FL's 17611766>
   Arg 2 (OPERATION): :SET-DEVICE-FONT

(:METHOD SI:HARDCOPY-STREAM-FONT-MIXIN :CHECK-FONT):  (P.C. = 10)
   Arg 0 (SELF): #<PRESS-STREAM 22516767>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:HARDCOPY-STREAM-FONT-MIXIN -- 6. IV's, 0. FL's 17610347>
   Arg 2 (OPERATION): :CHECK-FONT

SI:HARDCOPY-HEADING-INFO:  (P.C. = 15)
   Arg 0 (STREAM): #<PRESS-STREAM 22516767>

SI:HARDCOPY-FROM-STREAM:  (P.C. = 36)
   Arg 0 (STREAM): #<INTERVAL-STREAM 22512705>
   Arg 1 (DEVICE): #<PRINTER TREMONT-VIA-MC 12546516>
   Rest arg (OPTIONS): (:BANNER-FILE-NAME "VCOPY.LSP SYS$DISK:[FLECK] PYGMALION:")

ZWEI:COM-HARDCOPY-BUFFER:  (P.C. = 20)

ZWEI:COM-EXTENDED-COMMAND:  (P.C. = 27)

ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
   Arg 0 (COMMAND): ZWEI:COM-EXTENDED-COMMAND
   Arg 1 (CHAR): 600
   Arg 2 (PREFIX-CHAR): NIL
   Arg 3 (HOOK-LIST): NIL

Rest of stack:
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 200)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 41)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
23-Jan-84 22:47:35-EST,1432;000000000000
Received: from MIT-MOON by MIT-OZ via Chaosnet; 23 Jan 84 22:46-EST
Date: Monday, 23 January 1984, 22:46-EST
From: David Chapman <Zvona at MIT-OZ>
Subject: package :USE name conflict procede option lossage
To: bug-lispm at MIT-OZ

Is this wrong or am I confused?  [Also: shouldn't defpackage be &body
not &rest?] 

;;; Make a package with symbol UGH.
(defpackage first)
#<Package FIRST 6772421>
(defpackage first (:export first:ugh))
#<Package FIRST 6772421>
(setq first:ugh t)
T
;;; Make another package use the first one.
(defpackage second)
#<Package SECOND 6775047>
(pkg-goto 'second)
#<Package SECOND 6775047>
(defpackage second (:use global first))
#<Package SECOND 6775047>
ugh 
T
;;; Now do the same thing, but intern UGH in it before declaring the
;;; use. 
(defpackage third)
#<Package THIRD 6777475>
(pkg-goto 'third)
#<Package THIRD 6777475>
'ugh 
UGH
(defpackage third (:use global first))
>> Error: name conflict on UGH.
<resume>Prefer the symbols from FIRST, uninterning or shadowing competitors.
Uninterning UGH from package THIRD to make FIRST:UGH accessible.
#<Package THIRD 6777475>
ugh 
>> [Unbound]					;WRONG!

(symbol-package 'ugh)
#<Package THIRD 6777475>
(remob 'ugh 'third)
T
(symbol-package 'ugh)
#<Package THIRD 6777475>
(remob 'ugh 'third)
T
(defpackage third (:use global first))		;Doesn't bomb now
#<Package THIRD 6777475>
ugh						
T						;right
23-Jan-84 23:59:04-EST,2651;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 23 Jan 84 23:58-EST
Date: Monday, 23 January 1984, 23:57-EST
From: David Vinayak Wallace <Gumby at MIT-MC>
Subject: TERMINAL connect bug
To: BUG-LISPM at MIT-OZ

In System 242.265, Zmail 83.42, LMFS 37.31, Tape 21.9,
microcode TMC5-MIC 262, Dusty plum, on Lisp Machine Janis Joplin (3600):

I tried TERMINAL-ing to EDDIE.  TERMINAL should just conplain that it
can't connect.

By the way, could you bring back the <network>-O functionality?  It's a
pain supduping to unix.

>>Error: EDDIE (at Chaos address 3404) did not respond to a SUPDUP request.
While in the function CHAOS:CHECK-CONNECTION-STATE  CHAOS:WAIT-FOR-CONNECT  CHAOS:CONNECT

CHAOS:CHECK-CONNECTION-STATE:  (P.C. = 117)
   Arg 0 (CONN): #<CHAOS Connection for SUPDUP to EDDIE 27654245>
   Arg 1 (EXPECTED-STATE): CHAOS:OPEN-STATE
   Local 2 (STATE): CHAOS:RFC-SENT-STATE

CHAOS:WAIT-FOR-CONNECT:  (P.C. = 13)
   Arg 0 (CONN): #<CHAOS Connection for SUPDUP to EDDIE 27654245>
   Arg 1 (EXPECTED-STATE): CHAOS:OPEN-STATE
   Arg 2 (TIMEOUT): 600.

CHAOS:CONNECT:  (P.C. = 250)
   Arg 0 (HOST): #<UNIX-HOST EDDIE 12553475>
   Arg 1 (CONTACT-NAME): "SUPDUP"
   Arg 2 (WINDOW-SIZE): 13.
   Arg 3 (TIMEOUT): 600.

CHAOS:OPEN-STREAM:  (P.C. = 65)
   Arg 0 (HOST): #<UNIX-HOST EDDIE 12553475>
   Arg 1 (CONTACT-NAME): "SUPDUP"
   Rest arg: NIL

CHAOS:|MEDIUM-CHAOS-((NETWORK CHAOS))-G0223|:  (P.C. = 11)
   Arg 0 (SERVICE-ACCESS-PATH): #<SERVICE-ACCESS-PATH LOGIN (SUPDUP) -- EDDIE on CHAOS 34055441>
   Rest arg (ARGS): NIL

NETI:GET-CONNECTION-FOR-SERVICE-TO-HOST:  (P.C. = 12)
   Arg 0 (SERVICE-ACCESS-PATH): #<SERVICE-ACCESS-PATH LOGIN (SUPDUP) -- EDDIE on CHAOS 34055441>
   Arg 1 (NETWORK): #<CHAOS-NETWORK CHAOS 12275737>
   Arg 2 (IMPLEMENTATION): #<MEDIUM-IMPLEMENTATION 12571370>
   Arg 3 (CONNECTION-ARGS): NIL

NETI:GET-CONNECTION-FOR-SERVICE-1:  (P.C. = 204)
   Arg 0 (MEDIUM): #<MEDIUM-DESCRIPTION on CHAOS 34055435>
   Arg 1 (SERVICE-ACCESS-PATH): #<SERVICE-ACCESS-PATH LOGIN (SUPDUP) -- EDDIE on CHAOS 34055441>
   Arg 2 (CONNECTION-ARGS): NIL

NET:GET-CONNECTION-FOR-SERVICE:  (P.C. = 7)
   Arg 0 (SERVICE-ACCESS-PATH): #<SERVICE-ACCESS-PATH LOGIN (SUPDUP) -- EDDIE on CHAOS 34055441>
   Rest arg (CONNECTION-ARGS): NIL

Rest of stack:
TELNET:INVOKE-LOGIN-SERVICE:  (P.C. = 5)
TELNET:INVOKE-SERVICE-LOGIN-WITH-SUPDUP:  (P.C. = 3)
NET:INVOKE-SERVICE-ACCESS-PATH:  (P.C. = 21)
NET:INVOKE-SERVICE-ON-HOST:  (P.C. = 272)
(:METHOD TELNET:NVT-WINDOW :CONNECT):  (P.C. = 14)
(:METHOD TELNET:NVT-WINDOW :TYPEIN-TOP-LEVEL):  (P.C. = 112)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
24-Jan-84 00:23:06-EST,479;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 24 Jan 84 00:22-EST
Date: Tuesday, 24 January 1984, 00:22-EST
From: David Vinayak Wallace <Gumby at MIT-MC>
Subject: finger gripe.
To: BUG-LISPM at MIT-OZ

In System 242.265, Zmail 83.42, LMFS 37.31, Tape 21.9,
microcode TMC5-MIC 262, Dusty plum, on Lisp Machine Janis Joplin (3600):

When you finger with <terminal>-n-F, and you can't connect to the host,
the lispm should just print out "Host down" or "Cannot connect."
24-Jan-84 00:38:56-EST,2145;000000000000
Received: from SCRC-TENEX by MIT-OZ via Chaosnet; 24 Jan 84 00:38-EST
Received: from SCRC-EUPHRATES by SCRC-TENEX with CHAOS; Tue 24-Jan-84 00:37:13-EST
Date: Tuesday, 24 January 1984, 00:36-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: package :USE name conflict procede option lossage
To: David Chapman <Zvona at MIT-OZ>
Cc: bug-lispm at MIT-OZ, bug-beta-test at SCRC-TENEX
In-reply-to: The message of 23 Jan 84 22:46-EST from David Chapman <Zvona at MIT-OZ>

    Date: Monday, 23 January 1984, 22:46-EST
    From: David Chapman <Zvona at MIT-OZ>

    Shouldn't defpackage be &body not &rest?

That depends on how you like to see the defpackage options indented.  The guy
who wrote the code (me) likes to see them way over on the right, &rest style,
rather than way over on the left.  I don't know whether that's good or bad.
I think the preference is because the options aren't Lisp forms.  On the other
hand, defsystem uses &body.

    ;;; Make a package with symbol UGH.
    (defpackage first)
    (defpackage first (:export first:ugh))
    (setq first:ugh t)
    ;;; Now do the same thing, but intern UGH in it before declaring the
    ;;; use. 
    (defpackage third)
    (pkg-goto 'third)
    'ugh 
    (defpackage third (:use global first))
    >> Error: name conflict on UGH.
    <resume>Prefer the symbols from FIRST, uninterning or shadowing competitors.
    Uninterning UGH from package THIRD to make FIRST:UGH accessible.
    ugh 
    >> [Unbound]					;WRONG!

(describe-package 'third) at this point shows the real bug, which is that the
implementation of the proceed type forgot to ever do the use-package operation,
so third is still using just global, not first.

This was caused by the previously-reported bug in the SIGNAL-PROCEED-CASE
macro, which was fixed in 243.378.  I'll make a system 243 patch to cause
recompilation of the functions that got compiled with wrong code by this
macro.  Although really the package system is probably doing something
illegal with its SIGNAL-PROCEED-CASE.  I don't expect this to make it
into 5.0, maybe it will have to wait for 5.1.
24-Jan-84 01:51:14-EST,1949;000000000000
Received: from MIT-AVATAR by MIT-OZ via Chaosnet; 24 Jan 84 01:50-EST
Date: Tuesday, 24 January 1984, 01:49-EST
From: Apprentice for KMP <kbe at MIT-OZ>
Subject: Occasional stale info from SYS:SG-PREVIOUS-STACK-GROUP
To: BUG-LISPM at MIT-OZ
Cc: KBE-I-FILE at MIT-OZ

In Symbolics Release 4.5 on Avatar (CADR):

I'm not sure if this is a bug, but it confused some routines in the
KBE that try to compose a string describing a process state. In a
fresh Lisp Listener (or any other window which has a process which
has never been in the debugger):

  (SYS:SG-PREVIOUS-STACK-GROUP (SEND CURRENT-PROCESS ':STACK-GROUP))
  NIL

  XYZZY ;make an error of any kind
  >>Trap: The variable XYZZY is unbound.

  SI:*EVAL:
   ...etc.
 c-Z Lisp Top Level in Lisp Listener 2

 Back to Lisp Top Level in Lisp Listener 2

  (SYS:SG-PREVIOUS-STACK-GROUP (SEND CURRENT-PROCESS ':STACK-GROUP))
  #<DTP-STACK-GROUP "DEBUGGER-SG-6" -14650535>

I find no documentation on these SG- primitives in the purple
LispM Manual, so it's hard to tell. Does the previous stack group
just mean the last one this window had? I had rather assumed that
it implemented a thread through pushed stack groups.

I was assuming it would become NIL again when the debugger stack
group is exited because that would let me tell if I was in the
debugger or not.The way I use this is to probe whether a background
process is being debugged (or trying to be) by noticing if
it has a previous stack group (since I normally expect only its 
normal stack group).

Even if it was not a thread, having it become NIL when exiting 
the debugger contour seems like it would be the clean thing to do
anyway, since it looks to me like it's a resource and is being
re-allocated to other processes when the debugger in this process
is exited even though this process still holds pointers to it.

If/when anyone has time, can they comment on any of this?
-kmp
24-Jan-84 02:55:07-EST,3134;000000000000
Received: from SCRC-TENEX by MIT-OZ via Chaosnet; 24 Jan 84 02:54-EST
Received: from SCRC-EUPHRATES by SCRC-TENEX with CHAOS; Tue 24-Jan-84 02:42:50-EST
Date: Tuesday, 24 January 1984, 02:42-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: Occasional stale info from SYS:SG-PREVIOUS-STACK-GROUP
To: Apprentice for KMP <kbe at MIT-OZ>
Cc: BUG-LISPM at MIT-OZ, KBE-I-FILE at MIT-OZ
In-reply-to: The message of 24 Jan 84 01:49-EST from Apprentice for KMP <kbe at MIT-OZ>

    Date: Tuesday, 24 January 1984, 01:49-EST
    From: Apprentice for KMP <kbe at MIT-OZ>

    In Symbolics Release 4.5 on Avatar (CADR):

    I'm not sure if this is a bug, but it confused some routines in the
    KBE that try to compose a string describing a process state. In a
    fresh Lisp Listener (or any other window which has a process which
    has never been in the debugger):

      (SYS:SG-PREVIOUS-STACK-GROUP (SEND CURRENT-PROCESS ':STACK-GROUP))
      NIL

      XYZZY ;make an error of any kind
      >>Trap: The variable XYZZY is unbound.

      SI:*EVAL:
       ...etc.
     c-Z Lisp Top Level in Lisp Listener 2

     Back to Lisp Top Level in Lisp Listener 2

      (SYS:SG-PREVIOUS-STACK-GROUP (SEND CURRENT-PROCESS ':STACK-GROUP))
      #<DTP-STACK-GROUP "DEBUGGER-SG-6" -14650535>

    I find no documentation on these SG- primitives in the purple
    LispM Manual, so it's hard to tell. Does the previous stack group
    just mean the last one this window had? I had rather assumed that
    it implemented a thread through pushed stack groups.

It's called the "resumer" in the manual.  But that accessor function
doesn't work for the current stack group, for which the information is
in the value of a variable documented on page 165.  This kludgery is
probably one reason why these things aren't documented.  On the 3600 the
accessor function does work for the current stack group, provided you
don't setf it.

I've never seen a purple LispM Manual, could you enlighten me?
Maybe our eyes just see some color differently, maybe I call it
the blue manual ("Fourth Edition").

    I was assuming it would become NIL again when the debugger stack
    group is exited because that would let me tell if I was in the
    debugger or not.The way I use this is to probe whether a background
    process is being debugged (or trying to be) by noticing if
    it has a previous stack group (since I normally expect only its 
    normal stack group).

This technique won't work on the 3600, since the debugger there doesn't
use stack groups in the kludgey way that the LM-2/CADR debugger does.

    Even if it was not a thread, having it become NIL when exiting 
    the debugger contour seems like it would be the clean thing to do
    anyway, since it looks to me like it's a resource and is being
    re-allocated to other processes when the debugger in this process
    is exited even though this process still holds pointers to it.

That might be reasonable but would be contrary to the documentation
in the manual of which things change the resumer of a stack group.
24-Jan-84 06:08:42-EST,466;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 24 Jan 84 06:08-EST
Date: Tuesday, 24 January 1984, 06:07-EST
From: David Vinayak Wallace <Gumby at MIT-MC>
Subject: DIRED complaint
To: BUG-LISPM at MIT-OZ

In System 242.265, Zmail 83.42, LMFS 37.31, Tape 21.9,
microcode TMC5-MIC 262, Dusty plum, on Lisp Machine Janis Joplin (3600):

In DIRED, if you have a file marked for deletion, typing @ to switch off
its don't-delete flag shouldn't unmark the file.
24-Jan-84 07:04:40-EST,4033;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 24 Jan 84 07:03-EST
Date: Tuesday, 24 January 1984, 07:03-EST
From: David Vinayak Wallace <Gumby at MIT-MC>
Subject: Error: file in marked state, etc....
To: BUG-LISPM at MIT-OZ

In System 242.265, Zmail 83.42, LMFS 37.31, Tape 21.9,
microcode TMC5-MIC 262, Dusty plum, on Lisp Machine Janis Joplin (3600):

I used ^X^F.  I haven't seen this error in about a year!

>>Error: Attempt to read from #<FILE-INPUT-CHARACTER-STREAM "MC: TEXLIB; RESUME SAMPLE" 36536025>, which is in a marked state
While in the function (:DEFUN-METHOD FS:FILE-NEXT-READ-PKT)  (:METHOD FS:FILE-INPUT-STREAM-MIXIN :GET-NEXT-INPUT-PKT)  (:METHOD CHAOS:CHARACTER-INPUT-STREAM-MIXIN :NEXT-INPUT-BUFFER)

(:DEFUN-METHOD FS:FILE-NEXT-READ-PKT):  (P.C. = 170)
   Arg 0 (SELF): #<FILE-INPUT-CHARACTER-STREAM "MC: TEXLIB; RESUME SAMPLE" 36536025>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:FILE-INPUT-STREAM-MIXIN -- 5. IV's, 1. FL's 15141100>
   Arg 2 (NO-HANG-P): NIL
   Arg 3 (FOR-SYNC-MARK-P): NIL
   Local 4 (.SELECTQ-ITEM.): :SYNC-MARKED
   Local 5 (PKT): "Attempt to read from ~S, which is in a marked state"
   Local 6 (*SELECTQ-ITEM*): #<FILE-INPUT-CHARACTER-STREAM "MC: TEXLIB; RESUME SAMPLE" 36536025>

(:METHOD FS:FILE-INPUT-STREAM-MIXIN :GET-NEXT-INPUT-PKT):  (P.C. = 17)
   Arg 0 (SELF): #<FILE-INPUT-CHARACTER-STREAM "MC: TEXLIB; RESUME SAMPLE" 36536025>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:FILE-INPUT-STREAM-MIXIN -- 5. IV's, 1. FL's 15141100>
   Arg 2 (OPERATION): :GET-NEXT-INPUT-PKT
   Arg 3 (NO-HANG-P): NIL

(:METHOD CHAOS:CHARACTER-INPUT-STREAM-MIXIN :NEXT-INPUT-BUFFER):  (P.C. = 6)
   Arg 0 (SELF): #<FILE-INPUT-CHARACTER-STREAM "MC: TEXLIB; RESUME SAMPLE" 36536025>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor CHAOS:CHARACTER-INPUT-STREAM-MIXIN -- 1. IV's, 0. FL's 15141141>
   Arg 2 (OPERATION): :NEXT-INPUT-BUFFER
   Arg 3 (NO-HANG-P): NIL

(:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :SETUP-NEXT-INPUT-BUFFER):  (P.C. = 11)
   Arg 0 (SELF): #<FILE-INPUT-CHARACTER-STREAM "MC: TEXLIB; RESUME SAMPLE" 36536025>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:BASIC-BUFFERED-INPUT-STREAM -- 3. IV's, 0. FL's 15140711>
   Arg 2 (OPERATION): :SETUP-NEXT-INPUT-BUFFER
   --Defaulted args:--
   Arg 3 (NO-HANG-P): NIL

(:METHOD FS:FILE-INPUT-CHARACTER-STREAM :COMBINED :SETUP-NEXT-INPUT-BUFFER):  (P.C. = 10)
   Arg 0 (SELF): #<FILE-INPUT-CHARACTER-STREAM "MC: TEXLIB; RESUME SAMPLE" 36536025>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:FILE-INPUT-CHARACTER-STREAM -- 1. IV's, 6. FL's 21035766>
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

(:METHOD SI:BUFFERED-INPUT-STREAM :READ-INPUT-BUFFER):  (P.C. = 13)
   Arg 0 (SELF): #<FILE-INPUT-CHARACTER-STREAM "MC: TEXLIB; RESUME SAMPLE" 36536025>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:BUFFERED-INPUT-STREAM -- 3. IV's, 0. FL's 15141161>
   Arg 2 (OPERATION): :READ-INPUT-BUFFER
   --Defaulted args:--
   Arg 3 (EOF): NIL

FS:READ-ATTRIBUTE-LIST:  (P.C. = 17)
   Arg 0 (PATHNAME): #<ITS-PATHNAME "MC: TEXLIB; RESUME SAMPLE">
   Arg 1 (STREAM): #<FILE-INPUT-CHARACTER-STREAM "MC: TEXLIB; RESUME SAMPLE" 36536025>

ZWEI:REPARSE-ATTRIBUTE-LIST-INTERNAL:  (P.C. = 45)
   Arg 0 (BUFFER): #<FILE-BUFFER "RESUME SAMPLE TEXLIB; MC:" 36535733>
   Arg 1 (STREAM): #<FILE-INPUT-CHARACTER-STREAM "MC: TEXLIB; RESUME SAMPLE" 36536025>

Rest of stack:
(:DEFUN-METHOD ZWEI:REVERT-FROM-STREAM):  (P.C. = 52)
(:METHOD ZWEI:FILE-BUFFER-MIXIN :REVERT):  (P.C. = 71)
ZWEI:FIND-FILE:  (P.C. = 24)
ZWEI:COM-FIND-FILE:  (P.C. = 13)
ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
ZWEI:MAKE-EXTENDED-COMMAND-INTERNAL:  (P.C. = 77)
SYS:CALL-FUNNY-FUNCTION:  (P.C. = 101)
Closure of ZWEI:MAKE-EXTENDED-COMMAND-INTERNAL:
ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 200)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 41)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
24-Jan-84 07:35:26-EST,954;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 24 Jan 84 07:34-EST
Date: 24 January 1984 07:35 EST
From: Kent M Pitman <KMP @ MIT-MC>
Subject:  Survey Reminders, Survey Expired Messages
To: MMcM @ SCRC-TENEX
cc: BUG-LISPM @ MIT-OZ
In-reply-to: Msg of Mon 23 Jan 84 19:55 EST from Mike McMahon <MMcM%SCRC-TENEX at MIT-MC.ARPA>

    Date: Mon, 23 Jan 84 19:55 EST
    From: Mike McMahon <MMcM%SCRC-TENEX at MIT-MC.ARPA>

    In other words, you want to Select a collection of the current
    reminders, and the Survey Reminders command isn't any use to you, right?

Right.

        ps Why is there no m-X Survey Expired Messages?

    Applying the above reasoning, you probably wanted to Select the Expired
    messages, right?

Right.

Filters named Expired and Reminders are defaultly provided in ZBabyl
which you can use in surveying by filter. I didn't see any analogous
facility in ZMail. Am I not looking in the right place?
24-Jan-84 08:40:23-EST,636;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 24 Jan 84 08:39-EST
Date: 24 January 1984 08:39 EST
From: Robert H. Berman <RHB @ MIT-MC>
Subject:  Bad To: and CC: fields
To: BUG-LISPM @ MIT-MC
In-reply-to: Msg of 23 Jan 1984 14:02-EST from David Chapman <Zvona at MIT|OZ>


recent messages to bug-lispm are causing parsing errors in the
from: and to: fields....An example is

Date: Monday, 23 January 1984, 14:02-EST
From: David Chapman <Zvona at MIT|OZ>
To:   BUG-LISPM at MIT|OZ
Re:   Son of OZ patches gronk out

In System 242.262, microcode TMC5-MIC 262, dusty plum, on Lisp Machine Keith Moon (3600).........
24-Jan-84 09:53:52-EST,423;000000000000
Received: from MIT-LISPM-5 by MIT-OZ via Chaosnet; 24 Jan 84 09:52-EST
Date: Tuesday, 24 January 1984, 09:53-EST
From: Noble G. Larson <NGL at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In System 98.29, CADR 3.4, ZMail 53.9, MIT-Specific 22.0, microcode 306,
ZM MIT, on Lisp Machine Five:

Editor traps while loading file: mc:ngl;dplt 102.  Complains about package not existing.
Don't have this problem in System 97.  -ngl
24-Jan-84 10:58:30-EST,1713;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 24 Jan 84 10:56-EST
Received: from SCRC-NEPONSET by SCRC-QUABBIN with CHAOS; Tue 24-Jan-84 10:58:09-EST
Date: Tuesday, 24 January 1984, 10:56-EST
From: Charles Hornig <Hornig at SCRC-QUABBIN>
Subject: OZ patches gronk out!!!!
To: David Chapman <Zvona at MIT-OZ>, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 23 Jan 84 14:00-EST from David Chapman <Zvona at MIT-OZ>,
             The message of 23 Jan 84 14:02-EST from David Chapman <Zvona at MIT-OZ>,
             The message of 23 Jan 84 14:11-EST from David Chapman <Zvona at MIT-OZ.ARPA>
Message-ID: <840124105638.1.Hornig@QUABBIN.SCRC.Symbolics>

    Date: Monday, 23 January 1984, 14:00-EST
    From: David Chapman <Zvona@MIT|OZ>

    In System 242.262, microcode TMC5-MIC 262, dusty plum, on Lisp Machine Keith Moon (3600):

    GLORK!  It is wonderful to get patches; dealing with old bugs is a drag.  
    But it would be even nicer if the patches would load!

    >>Error: The symbol NIL has an invalid function definition
    While in the function NIL  (:METHOD HOST :SHORT-NAME)  (:METHOD PATHNAME-HOST-MIXIN :DEFAULT :NAME-AS-FILE-COMPUTER)

    Date: Mon, 23 Jan 84 14:11 EST
    From: David Chapman <Zvona@MIT-OZ.ARPA>

    In System 242.265, Zmail 83.42, LMFS 37.31, Tape 21.9,
    microcode TMC5-MIC 262, dusty plum, on Lisp Machine Keith Moon (3600):

    Those patches have broken the world sufficiently that I can't do
    anything.

    >>Error: The symbol NIL has an invalid function definition
    While in the function NIL  (:METHOD NET:HOST :SHORT-NAME)  (:METHOD SI:VANILLA-FLAVOR :SEND-IF-HANDLES)

Does this work now or is it still failing?
24-Jan-84 15:13:25-EST,826;000000000000
Received: from SCRC-TENEX by MIT-OZ via Chaosnet; 24 Jan 84 15:11-EST
Received: from SCRC-EUPHRATES by SCRC-TENEX with CHAOS; Tue 24-Jan-84 15:10:42-EST
Date: Tuesday, 24 January 1984, 15:10-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: DIRED complaint
To: David Vinayak Wallace <Gumby at MIT-MC>
Cc: BUG-LISPM at MIT-OZ
In-reply-to: The message of 24 Jan 84 06:07-EST from David Vinayak Wallace <Gumby at MIT-MC>

    Date: Tuesday, 24 January 1984, 06:07-EST
    From: David Vinayak Wallace <Gumby at MIT-MC>

    In DIRED, if you have a file marked for deletion, typing @ to switch off
    its don't-delete flag shouldn't unmark the file.

Good point.  Fixed in the source (COM-DIRED-COMPLEMENT-DONT-DELETE,
COM-DIRED-COMPLEMENT-NO-REAP-FLAG, UPDATE-DIRED-LINE-FROM-PLIST,
COM-DIRED-RENAME-FILE).
24-Jan-84 16:06:11-EST,1330;000000000000
Received: from SCRC-TENEX by MIT-OZ via Chaosnet; 24 Jan 84 16:05-EST
Received: from SCRC-DACHSHUND by SCRC-TENEX with CHAOS; Tue 24-Jan-84 16:05:33-EST
Date: Tuesday, 24 January 1984, 16:04-EST
From: Mike McMahon <MMcM at SCRC-TENEX>
Subject: Survey Reminders, Survey Expired Messages
To: Kent M Pitman <KMP at MIT-MC>, John C. Mallery <JCMA at MIT-OZ>
Cc: BUG-LISPM at MIT-OZ
In-reply-to: The message of 24 Jan 84 07:35-EST from Kent M Pitman <KMP at MIT-MC>
Message-ID: <840124160431.3.MMcM@SCRC.SCRC.Symbolics>

    Date: 24 January 1984 07:35 EST
    From: Kent M Pitman <KMP @ MIT-MC>

	Date: Mon, 23 Jan 84 19:55 EST
	From: Mike McMahon <MMcM%SCRC-TENEX at MIT-MC.ARPA>

	In other words, you want to Select a collection of the current
	reminders, and the Survey Reminders command isn't any use to you, right?

    Right.

	    ps Why is there no m-X Survey Expired Messages?

	Applying the above reasoning, you probably wanted to Select the Expired
	messages, right?

    Right.

    Filters named Expired and Reminders are defaultly provided in ZBabyl
    which you can use in surveying by filter. I didn't see any analogous
    facility in ZMail. Am I not looking in the right place?

There's the middle column in the Select frame.  It could be different
when you are a "calendar mode".
24-Jan-84 17:57:31-EST,596;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 24 Jan 84 17:56-EST
Date: Tuesday, 24 January 1984, 17:53-EST
From: David M. J. Saslav <SAZ at OZ>
Subject: Hitting LOCAL HELP
To: BUG-LISPM at OZ

In Release 4.5, site configuration 62, on PI Project:

	Typing the LOCAL button followed by a HELP button
gives non-updated info (ie, it tells you to do "SYSTEM
HELP" for "select" things, and "TERMINAL HELP" for
"function" key things...)

	Probably should be fixed for those who have
never used a CADR machine and don't know what these
mean...


Regards,

---Dave Saslav (SAZ@OZ) 
24-Jan-84 18:01:50-EST,431;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 24 Jan 84 18:00-EST
Date: Tuesday, 24 January 1984, 17:58-EST
From: David M. J. Saslav <SAZ at OZ>
Subject: More HELP gripes
To: BUG-LISPM at OZ

In Release 4.5, site configuration 62, on PI Project:

In fact, ALL the HELP info at Lisp Listener top level is archaic!  Pity the poor user who tries to learn how
to hack LISPM's by using a 3600 with the 4.5 Release!

---Dave
24-Jan-84 20:43:13-EST,952;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 24 Jan 84 20:42-EST
Received: from SCRC-CHARLES by SCRC-QUABBIN with CHAOS; Tue 24-Jan-84 20:42:40-EST
Date: Tuesday, 24 January 1984, 20:40-EST
From: David C. Plummer <DCP at SCRC-TENEX>
Subject: More HELP gripes
To: SAZ at MIT-OZ, BUG-LISPM at MIT-OZ
In-reply-to: The message of 24 Jan 84 17:58-EST from David M. J. Saslav <SAZ at MIT-OZ>

    Date: Tuesday, 24 January 1984, 17:58-EST
    From: David M. J. Saslav <SAZ at OZ>

    In Release 4.5, site configuration 62, on PI Project:

    In fact, ALL the HELP info at Lisp Listener top level is archaic!  Pity
    the poor user who tries to learn how to hack LISPM's by using a 3600
    with the 4.5 Release!

This has all been fixed in Release 5.  Yes, the HELP info in 4.5 is
archaic because 4.5 is archaic.  Before sending complaints about 4.5,
which no longer receives developement and patches, please check Release
5. 
25-Jan-84 01:19:07-EST,1287;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 25 Jan 84 01:18-EST
Date: 25 January 1984 00:00 EST
From: Kent M Pitman <KMP @ MIT-MC>
Subject:  Survey Reminders, Survey Expired Messages
To: MMcM @ SCRC-TENEX
cc: BUG-LISPM @ MIT-MC, JCMA @ MIT-OZ
In-reply-to: Msg of Tue 24 Jan 84 16:04 EST from Mike McMahon <MMcM%SCRC-TENEX at MIT-MC.ARPA>

    Date: Tue, 24 Jan 84 16:04 EST
    From: Mike McMahon <MMcM%SCRC-TENEX at MIT-MC.ARPA>

        Date: 24 January 1984 07:35 EST
        From: Kent M Pitman <KMP @ MIT-MC>

        Filters named Expired and Reminders are defaultly provided in ZBabyl
        which you can use in surveying by filter. I didn't see any analogous
        facility in ZMail. Am I not looking in the right place?

    There's the middle column in the Select frame.  It could be different
    when you are a "calendar mode".

This is what makes ZMail so unwieldy. There are too many modes to get in
and out of when you want to do something. I see no reason why at any moment
I shouldn't be able to get that kind of survey. There is a ton of whitespace
on that filter menu, a little bit of which could well be devoted to highly
useful filters like Reminders and Expired. Why shove it off in calendar mode
where people can't find it easily?
25-Jan-84 01:26:32-EST,774;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 25 Jan 84 01:26-EST
Date: Wednesday, 25 January 1984, 01:23-EST
From: KMP at OZ
Sender: PARKER at OZ
Subject: (SETF #'(:PROPERTY ...) ...)
To: BUG-LISPM at OZ
Cc: Parker at OZ

In Release 4.5, FEP 17, site configuration 79, on Lisp Machine Bing Crosby:

Is there some reason why SETF does not work on #'(:PROPERTY ...)
forms? It seems pretty clear what this should do. It would be
pretty nice so that people could take something like

  (defun do-handler ...)
  (defprop do  do-handler fexpr-handler)
  (defprop do* do-handler fexpr-handler)

and write it as

  (defun (:property do fexpr-handler) ...)
  (setf #'(:property do* fexpr-handler) #'(:property do fexpr-handler))

instead if they like.
-kmp
25-Jan-84 05:22:53-EST,577;000000000000
Received: from MIT-LISPM-1 by MIT-OZ via Chaosnet; 25 Jan 84 05:22-EST
Date: Wednesday, 25 January 1984, 05:24-EST
From: Kim A. Barrett <kab at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In Don't-dump-a-band! Inconsistent (unreleased patches loaded) System 98.30,
CADR 3.5, ZMail 53.9, MIT-Specific 22.0, microcode 306,
on Lisp Machine One:

Copying file MC:GUEST2;KAB FOO to OZ:<KAB> with either M-X Copy File or the Dired copy file
command produces a file of utter garbage (see files FOO.TEXT and FOO-DIRED.TEXT).  Both
methods worked fine when copying to FS:KAB;FOO.TEXT.
26-Jan-84 13:24:28-EST,786;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 26 Jan 84 13:21-EST
Date: Thursday, 26 January 1984, 13:21-EST
From: Daniel Weise <DANIEL at MIT-MC>
Subject: USRD$ versus SYS$DISK for VMS pathnames.
To: BUG-LISPM at MIT-OZ

In Release 5.0 [Beta Test rev 4], imperial purple, on Lisp Machine Jim Morrison (3600):

When I c-X c-F a file (eg "pig:<daniel.sp>example.lsp") the device defaults
to USRD$:.  However, when a file is automatically loaded (either through m-.
or tags search) the device is SYS$DISK:.  This confuses the editor and sometimes
results in two copies of the same file getting loaded.  

Daniel

P.S.  Closer inspection reveals that for m-. the editor says its loading
USRD$:foo.lsp but thinks it has SYS$DISK:foo.lsp (as evidenced by the mode
line).

26-Jan-84 14:13:36-EST,1537;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 26 Jan 84 14:12-EST
Received: from SCRC-THAMES by SCRC-QUABBIN with CHAOS; Thu 26-Jan-84 14:16:01-EST
Date: Thursday, 26 January 1984, 14:17-EST
From: Scott McKay <SWM at SCRC-QUABBIN>
Subject: USRD$ versus SYS$DISK for VMS pathnames.
To: daniel at MIT-MC, bug-lispm at MIT-OZ, bug-vms at SCRC-QUABBIN
In-reply-to: The message of 26 Jan 84 13:21-EST from Daniel Weise <DANIEL at MIT-MC>

    Date: Thursday, 26 January 1984, 13:21-EST
    From: Daniel Weise <DANIEL at MIT-MC>

    In Release 5.0 [Beta Test rev 4], imperial purple, on Lisp Machine Jim Morrison (3600):

    When I c-X c-F a file (eg "pig:<daniel.sp>example.lsp") the device defaults
    to USRD$:.  However, when a file is automatically loaded (either through m-.
    or tags search) the device is SYS$DISK:.  This confuses the editor and sometimes
    results in two copies of the same file getting loaded.  

    Daniel

    P.S.  Closer inspection reveals that for m-. the editor says its loading
    USRD$:foo.lsp but thinks it has SYS$DISK:foo.lsp (as evidenced by the mode
    line).

That is because SYS$DISK is defined to be USRD$, and VMS is only
translating it as far as USRD$ (instead of all the way to __DRA1:).
Someone on Pig should probably just break down and define SYS$DISK and
USRD$ to both be __DRA1:.  I don't know exactly what to do about this.
Unfortunately, the LispM does not understand about logical names on
random hosts such as those running VMS and Twenex...
26-Jan-84 15:01:32-EST,2647;000000000000
Received: from SCRC-YUKON by MIT-OZ via Chaosnet; 26 Jan 84 15:00-EST
Received: from SCRC-HUDSON by SCRC-YUKON with CHAOS; Thu 26-Jan-84 15:02:40-EST
Date: Thursday, 26 January 1984, 15:03-EST
From: Gerry Smith <gsmith at SCRC-YUKON>
Subject: USRD$ versus SYS$DISK for VMS pathnames.
To: SWM at SCRC-QUABBIN, daniel at MIT-MC, bug-lispm at MIT-OZ,
    bug-vms at SCRC-QUABBIN
In-reply-to: The message of 26 Jan 84 14:17-EST from Scott McKay <SWM at SCRC-QUABBIN>

    Date: Thursday, 26 January 1984, 14:17-EST
    From: Scott McKay <SWM at SCRC-QUABBIN>

	Date: Thursday, 26 January 1984, 13:21-EST
	From: Daniel Weise <DANIEL at MIT-MC>

	In Release 5.0 [Beta Test rev 4], imperial purple, on Lisp Machine Jim Morrison (3600):

	When I c-X c-F a file (eg "pig:<daniel.sp>example.lsp") the device defaults
	to USRD$:.  However, when a file is automatically loaded (either through m-.
	or tags search) the device is SYS$DISK:.  This confuses the editor and sometimes
	results in two copies of the same file getting loaded.  

	Daniel

	P.S.  Closer inspection reveals that for m-. the editor says its loading
	USRD$:foo.lsp but thinks it has SYS$DISK:foo.lsp (as evidenced by the mode
	line).

    That is because SYS$DISK is defined to be USRD$, and VMS is only
    translating it as far as USRD$ (instead of all the way to __DRA1:).
    Someone on Pig should probably just break down and define SYS$DISK and
    USRD$ to both be __DRA1:.  I don't know exactly what to do about this.
    Unfortunately, the LispM does not understand about logical names on
    random hosts such as those running VMS and Twenex...

This is not the way I recall the way that logical names operate.  The
logical name SYS$DISK is magic, in that it automatically points to
the current default disk, in the process logical name table.  If someone
defines SYS$DISK to be __DRA1:, that would be in the group or logical
name table, and it would never get looked at, because the process
logical name SYS$DISK is already defined.  What is the actual logical
translation for USRD$?  It matters whether it's _DRA1: or __DRA1:.

Hmm, this is really bizarre.  The fact that the LispM software says that
is is loaded USRD$:foo.lsp, but the mode line says SYS$DISK:foo.lsp,
says to me that the LispM software is mistaken, since the only way that
VMS would return a disk name of SYS$DISK is if there were no disk
explicitly given in the filename specification.  There's a major problem
here, because the logical-name-ness magic offerred by DEC machines is
sort of orthogonal to the logical-pathname-ness magic that LispMs offer.

26-Jan-84 15:32:47-EST,3210;000000000000
Received: from MIT-LISPM-18 by MIT-OZ via Chaosnet; 26 Jan 84 15:32-EST
Date: Thursday, 26 January 1984, 15:34-EST
From: Robert P. Krajewski <RpK at MIT-OZ>
Subject: View file with fonts broken
To: BUG-LISPM-MIT at MIT-OZ

In System 98.30, CADR 3.5, ZMail 53.9, MIT-Specific 22.0, microcode 306,
ZM MIT, on Lisp Machine Eighteen:

In Dired, I invoked `V' on <RPK.LM>LITTLE-ALARM.LISP, which has just one
font in its attribute list.

Also, -MORE- processing will not work even if function manages to not
barf on the font specification.

>>TRAP 5752 (ARGTYP CONS M-T T CDR CDR)
The argument to CDR, :MEDFNB, was of the wrong type.
The function expected a cons.
Backtrace from the debugger:

ZWEI:VIEW-WINDOW (P.C. = 267)

 Arg 0 (WINDOW): #<ZWEI-OVERLYING-WINDOW Zwei Overlying Window 1 3212742 exposed>
 Arg 1 (STREAM): #<FILE-INPUT-CHARACTER-STREAM "OZ:PS:<RPK.LM>LITTLE-ALARM.LISP.2" 21376033>
   --Defaulted args:--
 Arg 2 (RETURN-IF-NO-MORE): NIL
Local 0 (CH): NIL
Local 1 (ATTRIBUTE-LIST): (:MODE :LISP :PACKAGE :USER ...)
Local 2 (FONTSP): NIL
Local 3 (N-LINES): NIL
Local 4 (FIRST-P): NIL
Local 5 (AT-END-P): NIL
Local 6 (*SELECTQ-ITEM*): NIL
Local 7: NIL
Local 8: NIL
Local 9 (*SELECTQ-ITEM*): NIL


ZWEI:VIEW-STREAM (P.C. = 204)

 Arg 0 (STREAM): #<FILE-INPUT-CHARACTER-STREAM "OZ:PS:<RPK.LM>LITTLE-ALARM.LISP.2" 21376033>
   --Defaulted args:--
 Arg 1 (WINDOW): #<ZWEI-OVERLYING-WINDOW Zwei Overlying Window 1 3212742 exposed>
Local 0 (INTERVAL): #<NODE 21376056>
Local 1 (NEW-WINDOW): #<ZWEI-OVERLYING-WINDOW Zwei Overlying Window 1 3212742 exposed>
Local 2 (.WINDOW.): #<ZWEI-OVERLYING-WINDOW Zwei Overlying Window 1 3212742 exposed>
Local 3 (.FOR-WINDOW.): #<ZMACS-FRAME Zmacs Frame 1 3201160 exposed>
Local 4 (.OSTATUS.): :DEACTIVATED
Local 5 (.OSUBST.): #<ZMACS-WINDOW-PANE Zmacs Window Pane 1 3204222 deexposed>
Local 6 (.QUEUE-LEFT.): NIL
Local 7: NIL
Local 8 (E): NIL


ZWEI:VIEW-FILE (P.C. = 76)

 Arg 0 (PATHNAME): #FS:TOPS20-PATHNAME "OZ:PS:<RPK.LM>LITTLE-ALARM.LISP.2"
 Arg 1 (DELETED-P): NIL
Local 0: #<FILE-INPUT-CHARACTER-STREAM "OZ:PS:<RPK.LM>LITTLE-ALARM.LISP.2" 21376033>
Local 1 (.FILE-ABORTED-FLAG.): :ABORT
Local 2 (STREAM): #<FILE-INPUT-CHARACTER-STREAM "OZ:PS:<RPK.LM>LITTLE-ALARM.LISP.2" 21376033>


ZWEI:COM-DIRED-VIEW-FILE (P.C. = 130)

Local 0 (LINE): "      LITTLE-ALARM.LISP.2   1   1558(7)!   01//26//84 05:55:54              SAZ"
Local 1 (DIR-P): NIL
Local 2 (PATHNAME): #FS:TOPS20-PATHNAME "OZ:PS:<RPK.LM>LITTLE-ALARM.LISP.2"


Additional information supplied with call:
 Expecting 3 values

ZWEI:COMMAND-EXECUTE (P.C. = 115)

 Arg 0 (COMMAND): ZWEI:COM-DIRED-VIEW-FILE
 Arg 1 (CHAR): 166
 Arg 2 (PREFIX-CHAR): NIL
 Arg 3 (HOOK-LIST): NIL
Local 0 (HOOK-SUCCESS): T
Local 1: NIL
Local 2 (HOOK): NIL


Remainder of stack:

ZWEI:PROCESS-COMMAND-CHAR (P.C. = 65)
(:METHOD ZWEI:WINDOW :EDIT) (P.C. = 464)
(:INTERNAL (:METHOD ZWEI:ZMACS-WINDOW :COMBINED :EDIT) 0) (P.C. = 74)
FUNCALL (P.C. = 25)
(:METHOD ZWEI:DISPLAYER :AROUND :EDIT) (P.C. = 31)
(:METHOD ZWEI:ZMACS-WINDOW :COMBINED :EDIT) (P.C. = 47)
ZWEI:ZMACS-WINDOW-TOP-LEVEL (P.C. = 46)
SI:PROCESS-TOP-LEVEL (P.C. = 246)
26-Jan-84 15:55:57-EST,3151;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 26 Jan 84 15:55-EST
Received: from SCRC-THAMES by SCRC-QUABBIN with CHAOS; Thu 26-Jan-84 15:58:40-EST
Date: Thursday, 26 January 1984, 16:00-EST
From: Scott McKay <SWM at SCRC-QUABBIN>
Subject: USRD$ versus SYS$DISK for VMS pathnames.
To: gsmith at SCRC-YUKON, SWM at SCRC-QUABBIN, daniel at MIT-MC,
    bug-lispm at MIT-OZ, bug-vms at SCRC-QUABBIN
In-reply-to: The message of 26 Jan 84 15:03-EST from Gerry Smith <gsmith at SCRC-YUKON>

    Date: Thursday, 26 January 1984, 15:03-EST
    From: Gerry Smith <gsmith at SCRC-YUKON>

	Date: Thursday, 26 January 1984, 14:17-EST
	From: Scott McKay <SWM at SCRC-QUABBIN>

	    Date: Thursday, 26 January 1984, 13:21-EST
	    From: Daniel Weise <DANIEL at MIT-MC>

	    In Release 5.0 [Beta Test rev 4], imperial purple, on Lisp Machine Jim Morrison (3600):

	    When I c-X c-F a file (eg "pig:<daniel.sp>example.lsp") the device defaults
	    to USRD$:.  However, when a file is automatically loaded (either through m-.
	    or tags search) the device is SYS$DISK:.  This confuses the editor and sometimes
	    results in two copies of the same file getting loaded.  

	    Daniel

	    P.S.  Closer inspection reveals that for m-. the editor says its loading
	    USRD$:foo.lsp but thinks it has SYS$DISK:foo.lsp (as evidenced by the mode
	    line).

	That is because SYS$DISK is defined to be USRD$, and VMS is only
	translating it as far as USRD$ (instead of all the way to __DRA1:).
	Someone on Pig should probably just break down and define SYS$DISK and
	USRD$ to both be __DRA1:.  I don't know exactly what to do about this.
	Unfortunately, the LispM does not understand about logical names on
	random hosts such as those running VMS and Twenex...

    This is not the way I recall the way that logical names operate.  The
    logical name SYS$DISK is magic, in that it automatically points to
    the current default disk, in the process logical name table.  If someone
    defines SYS$DISK to be __DRA1:, that would be in the group or logical
    name table, and it would never get looked at, because the process
    logical name SYS$DISK is already defined.  What is the actual logical
    translation for USRD$?  It matters whether it's _DRA1: or __DRA1:.

You're right about SYS$DISK, I didn't have my brain on.  Its translation
is __DRA1:.

    Hmm, this is really bizarre.  The fact that the LispM software says that
    is is loaded USRD$:foo.lsp, but the mode line says SYS$DISK:foo.lsp,
    says to me that the LispM software is mistaken, since the only way that
    VMS would return a disk name of SYS$DISK is if there were no disk
    explicitly given in the filename specification.  There's a major problem
    here, because the logical-name-ness magic offerred by DEC machines is
    sort of orthogonal to the logical-pathname-ness magic that LispMs offer.

Daniel - what is the source-file property for one of the functions you
want to m-.?  (Is the device USRD$ or SYS$DISK?) When you login to Pig
as DANIEL (or whatever), what is printed when you "SHOW LOG SYS$LOGIN"?
26-Jan-84 16:03:31-EST,933;000000000000
Mail-From: DANIEL created at 26-Jan-84 16:02:49
Date: Thu, 26 Jan 1984  16:02 EST
Message-ID: <DANIEL.11986764287.BABYL@MIT-OZ>
From: Daniel Weise <DANIEL@MIT-OZ>
To:   Scott McKay <SWM@SCRC-QUABBIN>
Cc:   bug-lispm@MIT-OZ, bug-vms@SCRC-QUABBIN, gsmith@SCRC-YUKON
Subject: USRD$ versus SYS$DISK for VMS pathnames.
In-reply-to: Msg of 26 Jan 1984 16:00-EST from Scott McKay <SWM at SCRC-QUABBIN>

    Date: Thursday, 26 January 1984, 16:00-EST
    From: Scott McKay <SWM at SCRC-QUABBIN>
    To:   gsmith at SCRC-YUKON, SWM at SCRC-QUABBIN, daniel at MIT-MC,
          bug-lispm, bug-vms at SCRC-QUABBIN
    Re:   USRD$ versus SYS$DISK for VMS pathnames.

    Daniel - what is the source-file property for one of the functions you
    want to m-.?  (Is the device USRD$ or SYS$DISK?)
SYS$DISK:
    When you login to Pig
    as DANIEL (or whatever), what is printed when you "SHOW LOG SYS$LOGIN"?
USRD$:[DANIEL]

26-Jan-84 17:03:05-EST,3530;000000000000
Received: from SCRC-TENEX by MIT-OZ via Chaosnet; 26 Jan 84 16:49-EST
Received: from SCRC-EUPHRATES by SCRC-TENEX with CHAOS; Thu 26-Jan-84 16:48:35-EST
Date: Thursday, 26 January 1984, 16:36-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: USRD$ versus SYS$DISK for VMS pathnames.
To: Gerry Smith <gsmith at SCRC-YUKON>
Cc: SWM at SCRC-QUABBIN, daniel at MIT-MC, bug-lispm at MIT-OZ,
    bug-vms at SCRC-QUABBIN
In-reply-to: The message of 26 Jan 84 15:03-EST from Gerry Smith <gsmith at SCRC-YUKON>

    Date: Thursday, 26 January 1984, 15:03-EST
    From: Gerry Smith <gsmith at SCRC-YUKON>

	Date: Thursday, 26 January 1984, 14:17-EST
	From: Scott McKay <SWM at SCRC-QUABBIN>

	    Date: Thursday, 26 January 1984, 13:21-EST
	    From: Daniel Weise <DANIEL at MIT-MC>

	    In Release 5.0 [Beta Test rev 4], imperial purple, on Lisp Machine Jim Morrison (3600):

	    When I c-X c-F a file (eg "pig:<daniel.sp>example.lsp") the device defaults
	    to USRD$:.  However, when a file is automatically loaded (either through m-.
	    or tags search) the device is SYS$DISK:.  This confuses the editor and sometimes
	    results in two copies of the same file getting loaded.  

	    Daniel

	    P.S.  Closer inspection reveals that for m-. the editor says its loading
	    USRD$:foo.lsp but thinks it has SYS$DISK:foo.lsp (as evidenced by the mode
	    line).

	That is because SYS$DISK is defined to be USRD$, and VMS is only
	translating it as far as USRD$ (instead of all the way to __DRA1:).
	Someone on Pig should probably just break down and define SYS$DISK and
	USRD$ to both be __DRA1:.  I don't know exactly what to do about this.
	Unfortunately, the LispM does not understand about logical names on
	random hosts such as those running VMS and Twenex...

    This is not the way I recall the way that logical names operate.  The
    logical name SYS$DISK is magic, in that it automatically points to
    the current default disk, in the process logical name table.  If someone
    defines SYS$DISK to be __DRA1:, that would be in the group or logical
    name table, and it would never get looked at, because the process
    logical name SYS$DISK is already defined.  What is the actual logical
    translation for USRD$?  It matters whether it's _DRA1: or __DRA1:.

    Hmm, this is really bizarre.  The fact that the LispM software says that
    is is loaded USRD$:foo.lsp, but the mode line says SYS$DISK:foo.lsp,
    says to me that the LispM software is mistaken, since the only way that
    VMS would return a disk name of SYS$DISK is if there were no disk
    explicitly given in the filename specification.  There's a major problem
    here, because the logical-name-ness magic offerred by DEC machines is
    sort of orthogonal to the logical-pathname-ness magic that LispMs offer.

The name that the editor says its loading is the "truename" returned by the
VMS file server.  The name in the modeline is the pathname that the editor
was told to read; in the case of m-. this comes from the :source-file-name
property of the definition name.  SYS$DISK is the default device for VMS,
e.g. try (describe (fs:parse-pathname "comet:")).  VMS did not return a
file name with SYS$DISK in it.  I don't know why the truename it returned
had a logical device name in it, but perhaps that is a feature.

Currently the Lisp machine has no way to know that SYS$DISK and USRD$ are
the same device for a particular user.  This has been discussed before.
26-Jan-84 17:35:29-EST,4241;000000000000
Received: from SCRC-YUKON by MIT-OZ via Chaosnet; 26 Jan 84 17:33-EST
Received: from SCRC-HUDSON by SCRC-YUKON with CHAOS; Thu 26-Jan-84 17:35:20-EST
Date: Thursday, 26 January 1984, 17:35-EST
From: Gerry Smith <gsmith at SCRC-YUKON>
Subject: USRD$ versus SYS$DISK for VMS pathnames.
To: Moon at SCRC-TENEX, gsmith at SCRC-YUKON
Cc: SWM at SCRC-QUABBIN, daniel at MIT-MC, bug-lispm at MIT-OZ,
    bug-vms at SCRC-QUABBIN
In-reply-to: The message of 26 Jan 84 16:36-EST from David A. Moon <Moon at SCRC-TENEX>

    Date: Thursday, 26 January 1984, 16:36-EST
    From: David A. Moon <Moon at SCRC-TENEX>

	Date: Thursday, 26 January 1984, 15:03-EST
	From: Gerry Smith <gsmith at SCRC-YUKON>

	    Date: Thursday, 26 January 1984, 14:17-EST
	    From: Scott McKay <SWM at SCRC-QUABBIN>

		Date: Thursday, 26 January 1984, 13:21-EST
		From: Daniel Weise <DANIEL at MIT-MC>

		In Release 5.0 [Beta Test rev 4], imperial purple, on Lisp Machine Jim Morrison (3600):

		When I c-X c-F a file (eg "pig:<daniel.sp>example.lsp") the device defaults
		to USRD$:.  However, when a file is automatically loaded (either through m-.
		or tags search) the device is SYS$DISK:.  This confuses the editor and sometimes
		results in two copies of the same file getting loaded.  

		Daniel

		P.S.  Closer inspection reveals that for m-. the editor says its loading
		USRD$:foo.lsp but thinks it has SYS$DISK:foo.lsp (as evidenced by the mode
		line).

	    That is because SYS$DISK is defined to be USRD$, and VMS is only
	    translating it as far as USRD$ (instead of all the way to __DRA1:).
	    Someone on Pig should probably just break down and define SYS$DISK and
	    USRD$ to both be __DRA1:.  I don't know exactly what to do about this.
	    Unfortunately, the LispM does not understand about logical names on
	    random hosts such as those running VMS and Twenex...

	This is not the way I recall the way that logical names operate.  The
	logical name SYS$DISK is magic, in that it automatically points to
	the current default disk, in the process logical name table.  If someone
	defines SYS$DISK to be __DRA1:, that would be in the group or logical
	name table, and it would never get looked at, because the process
	logical name SYS$DISK is already defined.  What is the actual logical
	translation for USRD$?  It matters whether it's _DRA1: or __DRA1:.

	Hmm, this is really bizarre.  The fact that the LispM software says that
	is is loaded USRD$:foo.lsp, but the mode line says SYS$DISK:foo.lsp,
	says to me that the LispM software is mistaken, since the only way that
	VMS would return a disk name of SYS$DISK is if there were no disk
	explicitly given in the filename specification.  There's a major problem
	here, because the logical-name-ness magic offerred by DEC machines is
	sort of orthogonal to the logical-pathname-ness magic that LispMs offer.

    The name that the editor says its loading is the "truename" returned by the
    VMS file server.  The name in the modeline is the pathname that the editor
    was told to read; in the case of m-. this comes from the :source-file-name
    property of the definition name.  SYS$DISK is the default device for VMS,
    e.g. try (describe (fs:parse-pathname "comet:")).  VMS did not return a
    file name with SYS$DISK in it.  I don't know why the truename it returned
    had a logical device name in it, but perhaps that is a feature.

    Currently the Lisp machine has no way to know that SYS$DISK and USRD$ are
    the same device for a particular user.  This has been discussed before.

Yup, USRD$ is defined as __DRA1:.  The double underscore is a signal to
untranslate one level, and return that name (in this case USRD$) as the
actual device name.  This is a feature known variously as hidden device
names, hidden directories, and by some customera as a damned nuisance.
We'll have to deal with this more as time goes by, since VMS has decided
that physical device names are a sin and should never be referenced.

I think that, if care is taken in the LispM software to reference
the file by its truename -- in VMS language, its expanded string
specification -- then we won't have these problems.
26-Jan-84 18:07:38-EST,556;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 26 Jan 84 18:07-EST
Date: Thursday, 26 January 1984, 18:08-EST
From: Kent M Pitman <kmp at MIT-MC>
Subject: Preserving *Mail-N* major mode over Abort c-U c-X M
To: BUG-LISPM at OZ

In Release 4.5, Experimental Knowledge-Based-Editor 261.0,
site configuration 80, Black Magic, on PA Lisp Machine Avatar:

If I do m-X Lisp Mode while in Mail (via c-X M in ZWEI) and 
type Abort followed sometime later by c-U c-X M to resume,
I find myself back in Text Mode. I think I should still be in
Lisp Mode.
26-Jan-84 18:21:16-EST,3313;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 26 Jan 84 18:19-EST
Date: Thursday, 26 January 1984, 18:20-EST
From: Kent M Pitman <kmp at MIT-MC>
Subject: Lack of flexibility in ZWEI:MAKE-COMMAND-NAME
To: BUG-LISPM at OZ
Cc: KMP at OZ, KBE-I-FILE at OZ

In Release 4.5, Experimental Knowledge-Based-Editor 261.0,
site configuration 80, Black Magic, on PA Lisp Machine Avatar:

The KBE has a bunch of ZWEI commands with the word "KBE" in them.
m-X and c-m-X always thinks the name is "... Kbe ..." which looks
pretty wierd to me. I just looked at the code that does this and
it is not at all obvious how to fix it.

It turns out you can win with the m-X commands by just making 
your own command alist instead of calling MAKE-COMMAND-ALIST,
which looks at the COMMAND-NAME that DEFCOM (actually MAKE-COMMAND-NAME)
generates.

The c-m-X commands, on the other hand, I have to fix by actually
going into *COMMAND-ALIST* and bashing. I would rather be able
to hook into the original name transformation mechanism.

The relevant code currently looks like:

    (DEFUN MAKE-COMMAND-NAME (COMMAND)
      (SETQ COMMAND (STRING COMMAND))
      (LET ((CLEN (STRING-LENGTH COMMAND)))
	(LET ((STR (SUBSTRING
		     COMMAND
		     (COND ((STRING-EQUAL "COM-MOUSE-" COMMAND 0 0 12 12) 12)
			   ((STRING-EQUAL "COM-" COMMAND 0 0 4 4) 4)
			   ((STRING-EQUAL "*" COMMAND 0 0 1 1) 1)
			   (T 0))
		     (COND ((CHAR-EQUAL #/* (AREF COMMAND (1- CLEN))) (1- CLEN))
			   (T CLEN)))))
	  (STRING-CAPITALIZE-WORDS STR NIL))))

I wouldn't mind having this changed to something like:

    (DEFVAR *COMMAND-NAME-TRANSFORMATIONS* '())

    (DEFUN MAKE-COMMAND-NAME (COMMAND)
      ;; Coerce command to a string and make it a copy to allow side-effects
      (LET ((S (STRING-APPEND COMMAND)))
	;; Assume people PUSH onto the list, so run transforms in reverse order
	(DOLIST (TRANSFORMER (REVERSE *COMMAND-NAME-TRANSFORMATIONS*))
	  ;; A transformer should return a changed string or NIL to decline change
	  (SETQ S (OR (FUNCALL TRANSFORMER S) S)))
	;; Return the fully tranformed string
	S))

    (DEFUN STANDARD-COMMAND-NAME-TRANSFORMATION (COMMAND-NAME)
      (LET ((CLEN (STRING-LENGTH COMMAND-NAME)))
	(LET ((STR (SUBSTRING
		     COMMAND-NAME
		     (COND ((STRING-EQUAL "COM-MOUSE-" COMMAND-NAME 0 0 10. 10.) 10.)
			   ((STRING-EQUAL "COM-" COMMAND-NAME 0 0 4 4) 4)
			   ((STRING-EQUAL "*" COMMAND-NAME 0 0 1 1) 1)
			   (T 0))
		     (COND ((CHAR-EQUAL #/* (AREF COMMAND-NAME (1- CLEN))) (1- CLEN))
			   (T CLEN)))))
	  (STRING-CAPITALIZE-WORDS STR NIL))))

    (PUSH 'STANDARD-COMMAND-NAME-TRANSFORMATION *COMMAND-NAME-TRANSFORMATIONS*)

So that I could do something like:

    (DEFUN KBE-FIX (COMMAND-NAME)
      (DO ((POS (STRING-SEARCH "KBE" COMMAND-NAME)
	    (STRING-SEARCH "KBE" COMMAND-NAME (1+ POS))))
	    ((NOT POS) COMMAND-NAME)
	    (SETF (AREF COMMAND-NAME (+ POS 0)) #/K)
		   (SETF (AREF COMMAND-NAME (+ POS 1)) #/B)
		   (SETF (AREF COMMAND-NAME (+ POS 2)) #/E)))
    
    (PUSH 'KBE-FIX ZWEI:*COMMAND-NAME-TRANSFORMATIONS*)

Alternatively, I wouldn't mind someone modifying DEFCOM, COMMAND-DEFINE, etc.
so that you could in the initial DEFCOM specify the command name you want the
command to end up with.

Or both.

-kmp
26-Jan-84 19:34:11-EST,844;000000000000
Received: from SCRC-TENEX by MIT-OZ via Chaosnet; 26 Jan 84 19:33-EST
Received: from SCRC-NEPONSET by SCRC-TENEX with CHAOS; Thu 26-Jan-84 19:32:41-EST
Date: Thursday, 26 January 1984, 19:32-EST
From: Mike McMahon <MMcM at SCRC-TENEX>
Subject: Preserving *Mail-N* major mode over Abort c-U c-X M
To: Kent M Pitman <kmp at MIT-MC>
cc: BUG-LISPM at MIT-OZ
In-Reply-To: The message of 26 Jan 84 18:08-EST from Kent M Pitman <kmp at MIT-MC>
Message-ID: <840126193215.8.MMcM@SCRC.SCRC.Symbolics>

    Date: Thursday, 26 January 1984, 18:08-EST
    From: Kent M Pitman <kmp at MIT-MC>

    If I do m-X Lisp Mode while in Mail (via c-X M in ZWEI) and 
    type Abort followed sometime later by c-U c-X M to resume,
    I find myself back in Text Mode. I think I should still be in
    Lisp Mode.

Quite right.  Fixed in the source.
27-Jan-84 08:13:40-EST,432;000000000000
Received: from MIT-BUDDY by MIT-OZ via Chaosnet; 27 Jan 84 08:13-EST
Date: Friday, 27 January 1984, 08:13-EST
From: Douglas Alan <NESSUS at MIT-EECS>
Subject: (login-setq base 10. ibase 10.) doesn't work
To: BUG-LISPM at MIT-OZ

In Release 5.0 [GC'd Beta Test rev 3], microcode TMC5-MIC 262,
dusty plum, on Lisp Machine Buddy Holly (3600):

The (login-setq base 10. ibase 10.) in my lispm-init file does
not take effect.
27-Jan-84 10:12:25-EST,1004;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 27 Jan 84 10:12-EST
Received: from SCRC-WABASH by SCRC-QUABBIN with CHAOS; Fri 27-Jan-84 10:15:33-EST
Date: Friday, 27 January 1984, 10:12-EST
From: Charles Hornig <Hornig at SCRC-QUABBIN>
Subject: (login-setq base 10. ibase 10.) doesn't work
To: Douglas Alan <NESSUS at MIT-EECS>, BUG-LISPM at MIT-OZ
In-reply-to: The message of 27 Jan 84 08:13-EST from Douglas Alan <NESSUS at MIT-EECS>
Message-ID: <840127101235.3.Hornig@QUABBIN.SCRC.Symbolics>

    Date: Friday, 27 January 1984, 08:13-EST
    From: Douglas Alan <NESSUS at MIT-EECS>

    In Release 5.0 [GC'd Beta Test rev 3], microcode TMC5-MIC 262,
    dusty plum, on Lisp Machine Buddy Holly (3600):

    The (login-setq base 10. ibase 10.) in my lispm-init file does
    not take effect.

You have to use SETQ-GLOBALLY instead of SETQ since the base is bound
while loading your init file.  For example:

  (login-forms (setq-globally base 10.) (setq-globally ibase 10.))
27-Jan-84 11:17:52-EST,1462;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 27 Jan 84 11:17-EST
Received: from SCRC-TIGRIS by SCRC-QUABBIN with CHAOS; Fri 27-Jan-84 11:20:54-EST
Date: Friday, 27 January 1984, 11:18-EST
From: Clark M. Baker <cmb at SCRC-QUABBIN>
Subject: (login-setq base 10. ibase 10.) doesn't work
To: Charles Hornig <Hornig at SCRC-QUABBIN>
Cc: Douglas Alan <NESSUS at MIT-EECS>, BUG-LISPM at MIT-OZ
In-reply-to: <840127101235.3.Hornig@QUABBIN.SCRC.Symbolics>

    Date: Friday, 27 January 1984, 10:12-EST
    From: Charles Hornig <Hornig at SCRC-QUABBIN>

	Date: Friday, 27 January 1984, 08:13-EST
	From: Douglas Alan <NESSUS at MIT-EECS>

	In Release 5.0 [GC'd Beta Test rev 3], microcode TMC5-MIC 262,
	dusty plum, on Lisp Machine Buddy Holly (3600):

	The (login-setq base 10. ibase 10.) in my lispm-init file does
	not take effect.

    You have to use SETQ-GLOBALLY instead of SETQ since the base is bound
    while loading your init file.  For example:

      (login-forms (setq-globally base 10.) (setq-globally ibase 10.))

I use the following:

;;; Make the system think in decimal
(login-forms
  (setq-globally base 10)			; Input base is 10
  (setq-globally ibase 10)			; Output base is 10
  (setq-globally *nopoint t)			; No period after decimal numbers
  (add-initialization "Base 10 READ & PRINT" '(setq base 10. ibase 10. *nopoint t) '(:warm)))

I think that this also makes the base setting work across warm boots.
27-Jan-84 11:40:23-EST,2059;000000000000
Received: from SCRC-TENEX by MIT-OZ via Chaosnet; 27 Jan 84 11:40-EST
Received: from SCRC-CUYAHOGA by SCRC-TENEX with CHAOS; Fri 27-Jan-84 11:37:08-EST
Date: Friday, 27 January 1984, 11:35-EST
From: Robert A. Cassels <Cassels at SCRC-TENEX>
Subject: (login-setq base 10. ibase 10.) doesn't work
To: cmb at SCRC-QUABBIN, Hornig at SCRC-QUABBIN
Cc: NESSUS at MIT-EECS, BUG-LISPM at MIT-OZ
In-reply-to: The message of 27 Jan 84 11:18-EST from Clark M. Baker <cmb at SCRC-QUABBIN>

    Date: Friday, 27 January 1984, 11:18-EST
    From: Clark M. Baker <cmb at SCRC-QUABBIN>

	Date: Friday, 27 January 1984, 10:12-EST
	From: Charles Hornig <Hornig at SCRC-QUABBIN>

	    Date: Friday, 27 January 1984, 08:13-EST
	    From: Douglas Alan <NESSUS at MIT-EECS>

	    In Release 5.0 [GC'd Beta Test rev 3], microcode TMC5-MIC 262,
	    dusty plum, on Lisp Machine Buddy Holly (3600):

	    The (login-setq base 10. ibase 10.) in my lispm-init file does
	    not take effect.

	You have to use SETQ-GLOBALLY instead of SETQ since the base is bound
	while loading your init file.  For example:

	  (login-forms (setq-globally base 10.) (setq-globally ibase 10.))

    I use the following:

    ;;; Make the system think in decimal
    (login-forms
      (setq-globally base 10)			; Input base is 10
      (setq-globally ibase 10)			; Output base is 10
      (setq-globally *nopoint t)			; No period after decimal numbers
      (add-initialization "Base 10 READ & PRINT" '(setq base 10. ibase 10. *nopoint t) '(:warm)))

    I think that this also makes the base setting work across warm boots.

Well, almost.  You forgot the form in front of that one in your init file:

;;; This isn't really right -- should check to see if there is a current initialization
;;; and restore it if so.  But they're string-equal assq lists, so it's a pain.
;;; Worse yet, the initialization list can depend on the options.
(defun (:property add-initialization :undo-function) (form)
  `(delete-initialization ,(second form) . ,(rest3 form)))
27-Jan-84 11:53:58-EST,4863;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 27 Jan 84 11:53-EST
Received: from SCRC-THAMES by SCRC-QUABBIN with CHAOS; Fri 27-Jan-84 11:56:45-EST
Date: Friday, 27 January 1984, 11:58-EST
From: Scott McKay <SWM at SCRC-QUABBIN>
Subject: USRD$ versus SYS$DISK for VMS pathnames.
To: gsmith at SCRC-YUKON, Moon at SCRC-TENEX
Cc: SWM at SCRC-QUABBIN, daniel at MIT-MC, bug-lispm at MIT-OZ,
    bug-vms at SCRC-QUABBIN
In-reply-to: The message of 26 Jan 84 17:35-EST from Gerry Smith <gsmith at SCRC-YUKON>

    Date: Thursday, 26 January 1984, 17:35-EST
    From: Gerry Smith <gsmith at SCRC-YUKON>

	Date: Thursday, 26 January 1984, 16:36-EST
	From: David A. Moon <Moon at SCRC-TENEX>

	    Date: Thursday, 26 January 1984, 15:03-EST
	    From: Gerry Smith <gsmith at SCRC-YUKON>

		Date: Thursday, 26 January 1984, 14:17-EST
		From: Scott McKay <SWM at SCRC-QUABBIN>

		    Date: Thursday, 26 January 1984, 13:21-EST
		    From: Daniel Weise <DANIEL at MIT-MC>

		    In Release 5.0 [Beta Test rev 4], imperial purple, on Lisp Machine Jim Morrison (3600):

		    When I c-X c-F a file (eg "pig:<daniel.sp>example.lsp") the device defaults
		    to USRD$:.  However, when a file is automatically loaded (either through m-.
		    or tags search) the device is SYS$DISK:.  This confuses the editor and sometimes
		    results in two copies of the same file getting loaded.  

		    Daniel

		    P.S.  Closer inspection reveals that for m-. the editor says its loading
		    USRD$:foo.lsp but thinks it has SYS$DISK:foo.lsp (as evidenced by the mode
		    line).

		That is because SYS$DISK is defined to be USRD$, and VMS is only
		translating it as far as USRD$ (instead of all the way to __DRA1:).
		Someone on Pig should probably just break down and define SYS$DISK and
		USRD$ to both be __DRA1:.  I don't know exactly what to do about this.
		Unfortunately, the LispM does not understand about logical names on
		random hosts such as those running VMS and Twenex...

	    This is not the way I recall the way that logical names operate.  The
	    logical name SYS$DISK is magic, in that it automatically points to
	    the current default disk, in the process logical name table.  If someone
	    defines SYS$DISK to be __DRA1:, that would be in the group or logical
	    name table, and it would never get looked at, because the process
	    logical name SYS$DISK is already defined.  What is the actual logical
	    translation for USRD$?  It matters whether it's _DRA1: or __DRA1:.

	    Hmm, this is really bizarre.  The fact that the LispM software says that
	    is is loaded USRD$:foo.lsp, but the mode line says SYS$DISK:foo.lsp,
	    says to me that the LispM software is mistaken, since the only way that
	    VMS would return a disk name of SYS$DISK is if there were no disk
	    explicitly given in the filename specification.  There's a major problem
	    here, because the logical-name-ness magic offerred by DEC machines is
	    sort of orthogonal to the logical-pathname-ness magic that LispMs offer.

	The name that the editor says its loading is the "truename" returned by the
	VMS file server.  The name in the modeline is the pathname that the editor
	was told to read; in the case of m-. this comes from the :source-file-name
	property of the definition name.  SYS$DISK is the default device for VMS,
	e.g. try (describe (fs:parse-pathname "comet:")).  VMS did not return a
	file name with SYS$DISK in it.  I don't know why the truename it returned
	had a logical device name in it, but perhaps that is a feature.

	Currently the Lisp machine has no way to know that SYS$DISK and USRD$ are
	the same device for a particular user.  This has been discussed before.

    Yup, USRD$ is defined as __DRA1:.  The double underscore is a signal to
    untranslate one level, and return that name (in this case USRD$) as the
    actual device name.  This is a feature known variously as hidden device
    names, hidden directories, and by some customers as a damned nuisance.
    We'll have to deal with this more as time goes by, since VMS has decided
    that physical device names are a sin and should never be referenced.

Which is ridiculous when you are trying to determine if two file names
are equal...

    I think that, if care is taken in the LispM software to reference
    the file by its truename -- in VMS language, its expanded string
    specification -- then we won't have these problems.

The VMS file server does pass back the truename for OPEN's, etc.
Unfortunately, the "__" whammy is making the truename include a device
name which is not a physical name.  I guess my advice is for the
maintainers of PIG to define USRD$ as _DRA1:, /not/ as __DRA1:.
This will force truenames to come back from PIG with a physical device
name.
27-Jan-84 14:15:11-EST,6076;000000000000
Received: from MIT-MORRISON by MIT-OZ via Chaosnet; 27 Jan 84 14:14-EST
Date: Friday, 27 January 1984, 14:15-EST
From: Chris Lindblad <cjl at MIT-OZ>
Subject: USRD$ versus SYS$DISK for VMS pathnames.
To: SWM at SCRC-QUABBIN, gsmith at SCRC-YUKON, Moon at SCRC-TENEX
Cc: daniel at MIT-MC, bug-lispm at MIT-OZ, bug-vms at SCRC-QUABBIN
In-reply-to: The message of 27 Jan 84 11:58-EST from Scott McKay <SWM at SCRC-QUABBIN>

    Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 27 Jan 84 11:53-EST
    Received: from SCRC-THAMES by SCRC-QUABBIN with CHAOS; Fri 27-Jan-84 11:56:45-EST
    Date: Friday, 27 January 1984, 11:58-EST
    From: Scott McKay <SWM at SCRC-QUABBIN>
    Subject: USRD$ versus SYS$DISK for VMS pathnames.
    To: gsmith at SCRC-YUKON, Moon at SCRC-TENEX
    Cc: SWM at SCRC-QUABBIN, daniel at MIT-MC, bug-lispm at MIT-OZ,
	bug-vms at SCRC-QUABBIN
    In-reply-to: The message of 26 Jan 84 17:35-EST from Gerry Smith <gsmith at SCRC-YUKON>

	Date: Thursday, 26 January 1984, 17:35-EST
	From: Gerry Smith <gsmith at SCRC-YUKON>

	    Date: Thursday, 26 January 1984, 16:36-EST
	    From: David A. Moon <Moon at SCRC-TENEX>

		Date: Thursday, 26 January 1984, 15:03-EST
		From: Gerry Smith <gsmith at SCRC-YUKON>

		    Date: Thursday, 26 January 1984, 14:17-EST
		    From: Scott McKay <SWM at SCRC-QUABBIN>

			Date: Thursday, 26 January 1984, 13:21-EST
			From: Daniel Weise <DANIEL at MIT-MC>

			In Release 5.0 [Beta Test rev 4], imperial purple, on Lisp Machine Jim Morrison (3600):

			When I c-X c-F a file (eg "pig:<daniel.sp>example.lsp") the device defaults
			to USRD$:.  However, when a file is automatically loaded (either through m-.
			or tags search) the device is SYS$DISK:.  This confuses the editor and sometimes
			results in two copies of the same file getting loaded.  

			Daniel

			P.S.  Closer inspection reveals that for m-. the editor says its loading
			USRD$:foo.lsp but thinks it has SYS$DISK:foo.lsp (as evidenced by the mode
			line).

		    That is because SYS$DISK is defined to be USRD$, and VMS is only
		    translating it as far as USRD$ (instead of all the way to __DRA1:).
		    Someone on Pig should probably just break down and define SYS$DISK and
		    USRD$ to both be __DRA1:.  I don't know exactly what to do about this.
		    Unfortunately, the LispM does not understand about logical names on
		    random hosts such as those running VMS and Twenex...

		This is not the way I recall the way that logical names operate.  The
		logical name SYS$DISK is magic, in that it automatically points to
		the current default disk, in the process logical name table.  If someone
		defines SYS$DISK to be __DRA1:, that would be in the group or logical
		name table, and it would never get looked at, because the process
		logical name SYS$DISK is already defined.  What is the actual logical
		translation for USRD$?  It matters whether it's _DRA1: or __DRA1:.

		Hmm, this is really bizarre.  The fact that the LispM software says that
		is is loaded USRD$:foo.lsp, but the mode line says SYS$DISK:foo.lsp,
		says to me that the LispM software is mistaken, since the only way that
		VMS would return a disk name of SYS$DISK is if there were no disk
		explicitly given in the filename specification.  There's a major problem
		here, because the logical-name-ness magic offerred by DEC machines is
		sort of orthogonal to the logical-pathname-ness magic that LispMs offer.

	    The name that the editor says its loading is the "truename" returned by the
	    VMS file server.  The name in the modeline is the pathname that the editor
	    was told to read; in the case of m-. this comes from the :source-file-name
	    property of the definition name.  SYS$DISK is the default device for VMS,
	    e.g. try (describe (fs:parse-pathname "comet:")).  VMS did not return a
	    file name with SYS$DISK in it.  I don't know why the truename it returned
	    had a logical device name in it, but perhaps that is a feature.

	    Currently the Lisp machine has no way to know that SYS$DISK and USRD$ are
	    the same device for a particular user.  This has been discussed before.

	Yup, USRD$ is defined as __DRA1:.  The double underscore is a signal to
	untranslate one level, and return that name (in this case USRD$) as the
	actual device name.  This is a feature known variously as hidden device
	names, hidden directories, and by some customers as a damned nuisance.
	We'll have to deal with this more as time goes by, since VMS has decided
	that physical device names are a sin and should never be referenced.

    Which is ridiculous when you are trying to determine if two file names
    are equal...

	I think that, if care is taken in the LispM software to reference
	the file by its truename -- in VMS language, its expanded string
	specification -- then we won't have these problems.

    The VMS file server does pass back the truename for OPEN's, etc.
    Unfortunately, the "__" whammy is making the truename include a device
    name which is not a physical name.  I guess my advice is for the
    maintainers of PIG to define USRD$ as _DRA1:, /not/ as __DRA1:.
    This will force truenames to come back from PIG with a physical device
    name

There is a reason why PIG is set up so USRD$ doesn't translate to DRA1:,
And that's because we don't want any people (or programs) to know that
DRA1: and USRD$: are the same disk. Some time in the future USRD$ will
translate to __DBA1:[USERS.], which is a virtual disk, not a real disk.
All users need to know is that their files reside on the virtual disk
USRD$. VMS is completely consistent in implementing this, by allowing
hidden logical name translations.  For this reason we have USRD$
translate to __DRA1:

I do not believe that this is the problem that causes Daniel grief.
SYS$DISK translates to USRD$, USRD$ translates to USRD$.
Therefore the file SYS$DISK:[foo]bar.baz is the same file as
USRD$:[foo]bar.baz. Nowhere is DRA1 mentioned.
27-Jan-84 14:28:18-EST,2740;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 27 Jan 84 14:26-EST
Date: Friday, 27 January 1984, 14:27-EST
From: Ken Forbus <KDF at MIT-PYGMALION>
Subject: Zmail lossage
To: BUG-LISPM at OZ

In Release 4.5, FEP 17, site configuration 62, on Lisp Machine Jimi Hendrix:

In ZMAIL, clicked "Get Inbox", and since PIG was the default host, I answered yes to its query
about whether to create a file KDF.BAB on pig.  The following occured...  

>>Error: The object #<VMS-PATHNAME "PIG:USRD$:[KDF]MAIL.MAI"> received a ZMAIL-TEMP-FILE-TYPE message, which went unclaimed.
The rest of the message was ()
While in the function (METHOD ZWEI:BABYL-BUFFER GET-INBOX)  ZWEI:GET-INBOX-FOR-BUFFER  ZWEI:COM-GET-INBOX-INTERNAL

(METHOD ZWEI:BABYL-BUFFER GET-INBOX):  (P.C. = 63)
   Arg 0 (SELF): #<BABYL-BUFFER "PIG:USRD$:[KDF]KDF.BAB" 5527270>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:BABYL-BUFFER -- 3. IV's, 6. FL's 62060554>
   Arg 2 (OPERATION): GET-INBOX
   Arg 3 (NEW-PATHNAME): NIL
   Arg 4 (DELETE-P): NIL
   Local 5: NIL
   Local 6: ZWEI:TENEX-INBOX-BUFFER
   Local 7 (DEFAULT-INBOX): #<VMS-PATHNAME "PIG:USRD$:[KDF]MAIL.MAI">
   Local 8 (NEW-PATHNAME): #<VMS-PATHNAME "PIG:USRD$:[KDF]MAIL.MAI">
   Local 9: NIL
   Local 10 (OLD-TYPE): "MAI"

ZWEI:GET-INBOX-FOR-BUFFER:  (P.C. = 55)
   Arg 0 (BUFFER): #<BABYL-BUFFER "PIG:USRD$:[KDF]KDF.BAB" 5527270>
   Arg 1 (FROM-PATHNAME): NIL
   Arg 2 (DELETE-P): NIL
   Arg 3 (TELL-BACKGROUND-P): T

ZWEI:COM-GET-INBOX-INTERNAL:  (P.C. = 245)
   Arg 0 (FIRST-TIME-P): T
   --Defaulted args:--
   Arg 1 (FOR-BUFFER): #<BABYL-BUFFER "PIG:USRD$:[KDF]KDF.BAB" 5527270>

ZWEI:STARTUP-MAIL-FILE:  (P.C. = 206)
   --Defaulted args:--
   Arg 0 (NEW-PATHNAME): NIL

ZWEI:COM-GET-INBOX-INTERNAL:  (P.C. = 36)
   Arg 0 (FIRST-TIME-P): NIL
   --Defaulted args:--
   Arg 1 (FOR-BUFFER): NIL

ZWEI:COM-GET-NEW-MAIL-FROM-INBOX:  (P.C. = 7)

ZWEI:COMMAND-EXECUTE:  (P.C. = 65)
   Arg 0 (COMMAND): ZWEI:COM-GET-NEW-MAIL-FROM-INBOX
   Arg 1 (CHAR): (MENU ("Get inbox" . ZWEI:COM-GET-NEW-MAIL-FROM-INBOX) 1 #<ZMAIL-MAIN-COMMAND-MENU-PANE Zmail Main Command Menu Pane 1 3005415 exposed>)
   --Defaulted args:--
   Arg 2 (PREFIX-CHAR): NIL
   Arg 3 (HOOK-LIST): NIL

ZWEI:ZMAIL-COMMAND-EXECUTE:  (P.C. = 6)
   Arg 0 (*CURRENT-COMMAND*-initialization): ZWEI:COM-GET-NEW-MAIL-FROM-INBOX

Rest of stack:
(INTERNAL ZWEI:ZMAIL-COMMAND-LIST 0):  (P.C. = 10)
ZWEI:ZMAIL-COMMAND-LIST:  (P.C. = 12)
(METHOD ZWEI:ZMAIL-FRAME PROCESS-SPECIAL-COMMAND):  (P.C. = 5)
(METHOD ZWEI:ZMAIL-FRAME COMMAND-LOOP):  (P.C. = 136)
(METHOD ZWEI:ZMAIL-FRAME COMBINED COMMAND-LOOP):  (P.C. = 45)
ZWEI:ZMAIL-PROCESS-TOP-LEVEL:  (P.C. = 56)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
27-Jan-84 14:43:16-EST,886;000000000000
Received: from MIT-MORRISON by MIT-OZ via Chaosnet; 27 Jan 84 14:42-EST
Date: Friday, 27 January 1984, 14:44-EST
From: Chris Lindblad <cjl at MIT-OZ>
Subject: USRD$ versus SYS$DISK for VMS pathnames.
To: SWM at SCRC-QUABBIN, gsmith at SCRC-YUKON, Moon at SCRC-TENEX
Cc: daniel at MIT-MC, bug-lispm at MIT-OZ, bug-vms at SCRC-QUABBIN
In-reply-to: The message of 27 Jan 84 11:58-EST from Scott McKay <SWM at SCRC-QUABBIN>

I'm sorry, I left out perhaps what now I realize is probably the most
important point. The VMS FILE job should expand names by using the 
ESA field of the $NAM block of the $FAB when doing the open,
and shouldn't do an explicit logical name translation of the device
field of the device field of the file name. I suspect that explicit
translation of USRD$ might return __DRA1: but the ESA after opening
USRD$:[foo]bar.baz will be USRD$:[foo]bar.baz.
27-Jan-84 15:17:36-EST,1139;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 27 Jan 84 15:16-EST
Received: from SCRC-MERCED by SCRC-QUABBIN with CHAOS; Fri 27-Jan-84 15:20:15-EST
Date: Friday, 27 January 1984, 15:17-EST
From: James J. Cherry <cherry at SCRC-QUABBIN>
Subject: (login-setq base 10. ibase 10.) doesn't work
To: Hornig at SCRC-QUABBIN, NESSUS at MIT-EECS, BUG-LISPM at MIT-OZ
In-reply-to: <840127101235.3.Hornig@QUABBIN.SCRC.Symbolics>

    Date: Friday, 27 January 1984, 10:12-EST
    From: Charles Hornig <Hornig at SCRC-QUABBIN>

	Date: Friday, 27 January 1984, 08:13-EST
	From: Douglas Alan <NESSUS at MIT-EECS>

	In Release 5.0 [GC'd Beta Test rev 3], microcode TMC5-MIC 262,
	dusty plum, on Lisp Machine Buddy Holly (3600):

	The (login-setq base 10. ibase 10.) in my lispm-init file does
	not take effect.

    You have to use SETQ-GLOBALLY instead of SETQ since the base is bound
    while loading your init file.  For example:

      (login-forms (setq-globally base 10.) (setq-globally ibase 10.))

I can imagine many many many users lose this way when they start out. 
WHEN, 'O WHEN WILL THE DEFAULT BASE BE 10??
27-Jan-84 15:26:21-EST,2321;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 27 Jan 84 15:25-EST
Received: from SCRC-MERCED by SCRC-QUABBIN with CHAOS; Fri 27-Jan-84 15:28:59-EST
Date: Friday, 27 January 1984, 15:26-EST
From: James J. Cherry <cherry at SCRC-QUABBIN>
Subject: (login-setq base 10. ibase 10.) doesn't work
To: Cassels at SCRC-TENEX, cmb at SCRC-QUABBIN, Hornig at SCRC-QUABBIN
Cc: NESSUS at MIT-EECS, BUG-LISPM at MIT-OZ
In-reply-to: The message of 27 Jan 84 11:35-EST from Robert A. Cassels <Cassels at SCRC-TENEX>

    Date: Friday, 27 January 1984, 11:35-EST
    From: Robert A. Cassels <Cassels at SCRC-TENEX>

	Date: Friday, 27 January 1984, 11:18-EST
	From: Clark M. Baker <cmb at SCRC-QUABBIN>

	    Date: Friday, 27 January 1984, 10:12-EST
	    From: Charles Hornig <Hornig at SCRC-QUABBIN>

		Date: Friday, 27 January 1984, 08:13-EST
		From: Douglas Alan <NESSUS at MIT-EECS>

		In Release 5.0 [GC'd Beta Test rev 3], microcode TMC5-MIC 262,
		dusty plum, on Lisp Machine Buddy Holly (3600):

		The (login-setq base 10. ibase 10.) in my lispm-init file does
		not take effect.

	    You have to use SETQ-GLOBALLY instead of SETQ since the base is bound
	    while loading your init file.  For example:

	      (login-forms (setq-globally base 10.) (setq-globally ibase 10.))

	I use the following:

	;;; Make the system think in decimal
	(login-forms
	  (setq-globally base 10)			; Input base is 10
	  (setq-globally ibase 10)			; Output base is 10
	  (setq-globally *nopoint t)			; No period after decimal numbers
	  (add-initialization "Base 10 READ & PRINT" '(setq base 10. ibase 10. *nopoint t) '(:warm)))

	I think that this also makes the base setting work across warm boots.

    Well, almost.  You forgot the form in front of that one in your init file:

    ;;; This isn't really right -- should check to see if there is a current initialization
    ;;; and restore it if so.  But they're string-equal assq lists, so it's a pain.
    ;;; Worse yet, the initialization list can depend on the options.
    (defun (:property add-initialization :undo-function) (form)
      `(delete-initialization ,(second form) . ,(rest3 form)))

Why doesnt add-initialization do this for you?  It seems that
initializations are just what you would expect to see in login-forms.
27-Jan-84 16:25:52-EST,816;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 27 Jan 84 16:25-EST
Received: from SCRC-CHARLES by SCRC-QUABBIN with CHAOS; Fri 27-Jan-84 16:28:49-EST
Date: Friday, 27 January 1984, 16:15-EST
From: David C. Plummer <DCP at SCRC-TENEX>
Subject: (login-setq base 10. ibase 10.) doesn't work
To: cherry at SCRC-QUABBIN
cc: Hornig at SCRC-QUABBIN, NESSUS at MIT-EECS, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 27 Jan 84 15:17-EST from James J. Cherry <cherry at SCRC-QUABBIN>

    Date: Friday, 27 January 1984, 15:17-EST
    From: James J. Cherry <cherry at SCRC-QUABBIN>

    I can imagine many many many users lose this way when they start out. 
    WHEN, 'O WHEN WILL THE DEFAULT BASE BE 10??
Just because you were taught to use your thumbs when counting...
(Just trying to cause trouble.)
27-Jan-84 16:33:34-EST,2178;000000000000
Received: from MIT-MORRISON by MIT-OZ via Chaosnet; 27 Jan 84 16:32-EST
Date: Friday, 27 January 1984, 16:33-EST
From: Chris Lindblad <cjl at MIT-OZ>
Subject: M-X Hardcopy buffer still dies in 5.0 Beta rev 4
To: BUG-LISPM at MIT-OZ

In Release 5.0 [Beta Test rev 4], imperial purple, on Lisp Machine Jim Morrison (3600):

Did a M-X hardcopy buffer.
I thought you guys fixed this one.

>>Trap: The argument given to the ZEROP instruction, NIL, was not a number.
While in the function (:METHOD PRESS:PRESS-STREAM :PUT-PENDING-CHARS)  (:METHOD PRESS:PRESS-STREAM :SET-DEVICE-FONT)  (:METHOD SI:HARDCOPY-STREAM-FONT-MIXIN :CHECK-FONT)

(:METHOD PRESS:PRESS-STREAM :PUT-PENDING-CHARS):  (P.C. = 2)
   Arg 0 (SELF): #<PRESS-STREAM 5442246>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor PRESS:PRESS-STREAM -- 32. IV's, 4. FL's 4213101>
   Arg 2 (OPERATION): :PUT-PENDING-CHARS

(:METHOD PRESS:PRESS-STREAM :SET-DEVICE-FONT):  (P.C. = 4)
   Arg 0 (SELF): #<PRESS-STREAM 5442246>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor PRESS:PRESS-STREAM -- 32. IV's, 4. FL's 4213101>
   Arg 2 (OPERATION): :SET-DEVICE-FONT

(:METHOD SI:HARDCOPY-STREAM-FONT-MIXIN :CHECK-FONT):  (P.C. = 10)
   Arg 0 (SELF): #<PRESS-STREAM 5442246>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:HARDCOPY-STREAM-FONT-MIXIN -- 6. IV's, 0. FL's 4211462>
   Arg 2 (OPERATION): :CHECK-FONT

SI:HARDCOPY-HEADING-INFO:  (P.C. = 15)
   Arg 0 (STREAM): #<PRESS-STREAM 5442246>

SI:HARDCOPY-FROM-STREAM:  (P.C. = 36)
   Arg 0 (STREAM): #<INTERVAL-STREAM 5436122>
   Arg 1 (DEVICE): #<PRINTER TREMONT-VIA-MC 57400231>
   Rest arg (OPTIONS): (:BANNER-FILE-NAME "RESUME.TXT PS:<CJL> OZ:")

ZWEI:COM-HARDCOPY-BUFFER:  (P.C. = 20)

ZWEI:COM-EXTENDED-COMMAND:  (P.C. = 27)

ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
   Arg 0 (COMMAND): ZWEI:COM-EXTENDED-COMMAND
   Arg 1 (CHAR): 1130
   Arg 2 (PREFIX-CHAR): NIL
   Arg 3 (HOOK-LIST): NIL

Rest of stack:
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 200)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 41)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
28-Jan-84 16:16:26-EST,9984;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 28 Jan 84 16:12-EST
Received: from SCRC-EUPHRATES by SCRC-QUABBIN with CHAOS; Sat 28-Jan-84 16:16:29-EST
Date: Saturday, 28 January 1984, 16:15-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: Death of Jimi Hendrix?
To: KDF at MIT-OZ
Cc: bug-lispm at MIT-OZ, DCP at SCRC-TENEX
In-reply-to: <KDF.11985257548.BABYL@MIT-OZ>,
             <KDF.11986006252.BABYL@MIT-OZ>

Sorry about the verbosity, read this mail on a fast terminal.

    Date: Fri, 20 Jan 1984  22:06 EST
    From: KDF@MIT-OZ

	    Running in 4.5 on Jimi, I have had the same kind of mysterious
    crash that Alan had on Jimi with 5.0.  Specifically, running a long
    computation (> 2 hours) will sometimes die in the middle in such
    a way that even a warm boot will not recover.  I used Show Status - once -
    and got the following information:

	    FEP Lbus control: Use Uncorrected data, ignore double ECC error,
				    Task 3 dismiss
	    Sequencer error status: Microcode-halted
	    Sequencer Misc. status: CTOS-came-from-IFU,TSK-STOP(sequencer stopped),
				    Errhalt-sync
	    3600 Program Counters:
	
	    Macro PC/ (odd)1261051

(%find-structure-header #o1261051) in Release 4.5 on Robot-1 yields
#<dtp-compiled-function sys:lisp-top-level 1261051>.  Since the macro PC
is odd and points to the same address, it is pointing to the second
instruction (the first real instruction) of this function.  Its loop
does not return to this instruction, so it must have just been called.
This seems a bit odd since this function is never called except when the
machine is booted (warm or cold).  I guess that this really means is
that you had the machine crash, attempted to warm boot, that failed, and
only then did you do a show status and write down all the numbers.

	    CPC/ 0

	 -> OPC+0/ 40134			OPC+10/ 45701
	    OPC+1/ 51151			OPC+11/ 45700
	    OPC+1/ 50343			OPC+12/ 53707
	    OPC+1/ 50342			OPC+13/ 52344
	    OPC+1/ 50517			OPC+14/ 47537
	    OPC+1/ 50516			OPC+15/ 47536
	    OPC+1/ 50226			OPC+16/ 54000
	    OPC+1/ 50225			OPC+17/ 40611

Here's the output from decoding those OPCs, along with an analysis.

(dolist (opc '(40134
	       51151
	       50343
	       50342
	       50517
	       50516
	       50226
	       50225
	       45701
	       45700
	       53707
	       52344
	       47537
	       47536
	       54000
	       40611))
  (terpri) (terpri)
  (dbg:decode-micro-pc opc  "TMC5-MIC" 219.))

134 is the dispatch address for the undefined instruction with opcode 27.
If the machine halted here, the instruction must be unimplemented,
suggesting that compiled code and the microcode are inconsistent.

;Not a case of microcode inconsistency, since there never was and still
;isn't an instruction with opcode 27.  Since this the first instruction of
;a function, probably the function is clobbered with garbage.

11151 not found in halt table for TMC5-MIC 219.
11151 is the microinstruction PHYS-MEM-READ-DELAY.

10343 not found in halt table for TMC5-MIC 219.
10343 is the microinstruction (CALL-INDIRECT-DISP-0 FALSE).

10342 not found in halt table for TMC5-MIC 219.
10342 is the microinstruction CALL-INDIRECT-DISP-0.

10517 not found in halt table for TMC5-MIC 219.
10517 is the microinstruction (GENERAL-CALL-1 3).

10516 not found in halt table for TMC5-MIC 219.
10516 is the microinstruction (GENERAL-CALL-1 2).

10226 not found in halt table for TMC5-MIC 219.
10226 is the microinstruction (GENERAL-CALL-1 1).

10225 not found in halt table for TMC5-MIC 219.
10225 is the microinstruction GENERAL-CALL-1.

5701 not found in halt table for TMC5-MIC 219.
5701 is the microinstruction (RESTART-TRAPPED-CALL 1).

5700 is the dispatch address for the RESTART-TRAPPED-CALL instruction.
If the machine halted here, the instruction must be unimplemented,
suggesting that compiled code and the microcode are inconsistent.

;All the above are working on entering the function

13707 not found in halt table for TMC5-MIC 219.
13707 is the microinstruction PHYS-MEM-READ-DELAY.

12344 not found in halt table for TMC5-MIC 219.
12344 is the microinstruction (IFU-EMPTY-TRAP 3).

7537 not found in halt table for TMC5-MIC 219.
7537 is the microinstruction (IFU-EMPTY-TRAP 2).

7536 not found in halt table for TMC5-MIC 219.
7536 is the microinstruction (IFU-EMPTY-TRAP 1).

14000 not found in halt table for TMC5-MIC 219.
14000 is the microinstruction IFU-EMPTY-TRAP.

611 not found in halt table for TMC5-MIC 219.
611 is the microinstruction (SET-STACK-BUFFER-LIMIT 3).

;All these OPCs appear to be the sequence executed upon warm-booting
;the machine.  The machine halted for an illegal instruction upon
;trying to execute the very first instruction from pageable memory
;after warm-booting.  Probably your memory was clobbered, but who knows?

;Of course, there is no way to know from this what the original halt was.

    Date: Fri, 20 Jan 1984  22:59 EST
    From: KDF%MIT-OZ@MIT-MC.ARPA

    It was Rel 4.5, >Microcode2.MIC (TMC5-MIC 219)

    The error table wasn't loaded because OZ was down (and remained down)
    for several hours, and that's where it seems to look for this
    information.  Shouldn't that stuff be stored locally? 

It is stored locally, except when people set the current world load and
current microcode to be inconsistent with each other, so that the world
load does not already contain that stuff.  Cold-booting and disk-saveing
would create a new world-load with the error table in it, if you have the
disk space available to save a new world-load.

    Date: Mon, 23 Jan 1984  18:38 EST
    From: KDF@MIT-OZ

	    ...and it could be hardware.  2 hours, 48 minutes
    into a computation, using rel 4.5, the machine fled into
    the FEP.  Show Status provided the following:

    FEP Lbus control: use uncorrected data, Ignore Double ECC Error,
					    Task 3 Dismiss
    Sequencer Error Status: Microcode Halted
    Sequencer Misc: TSK-STOP (sequencer stopped) Errhalt-Sync
    3600 Program counters:

    Macro PC/ (Even) 1226663

(%find-structure-header #o1226663) in Release 4.5 on Robot-1 yields
#<dtp-compiled-function sys:%lexpr-aref 1226651>.  Subtracting,
multiplying by 2, and adding 0 (because it was even) gives
instruction 24, an AR-1 of the array argument by the first
index argument.

    CPC/ 2047
    ->	OPC+0/ 146743	OPC+10/ 53715
	    +1/ 55524	+11/ 44400
	    +2/ 46743	+12/ 40410
	    +3/ 50004	+13/ 53707
	    +4/ 4561	+14/ 152344
	    +5/ 45340	+15/ 47537
	    +6/ 47065	+16/ 47536
	    +7/52312	+17/ 54000

Here's the output from decoding those OPCs, along with an analysis.

(dolist (opc '(146743
	       55524
	       46743
	       50004
	       4561
	       45340
	       47065
	       52312
	       53715
	       44400
	       40410
	       53707
	       152344
	       47537
	       47536
	       54000))
  (terpri) (terpri)
  (dbg:decode-micro-pc opc  "TMC5-MIC" 219.))

6743 not found in halt table for TMC5-MIC 219.
6743 is the microinstruction (ERROR-TRAP TRUE).

;In more modern microcodes, which have a halt table, this would have told you
;"Error in non-trappable stack group; typically error in error handler"

15524 not found in halt table for TMC5-MIC 219.
15524 is the microinstruction ERROR-TRAP.

6743 not found in halt table for TMC5-MIC 219.
6743 is the microinstruction (ERROR-TRAP TRUE).

10004 not found in halt table for TMC5-MIC 219.
10004 is the microinstruction ERROR-TRAP.

By the way, 4561 can trap to the debugger for WRONG-TYPE-ARGUMENT (SUBSCRIPT (DTP-FIX))
4561 not found in halt table for TMC5-MIC 219.
4561 is the microinstruction (AR-1 1).

;That was your error.

By the way, 5340 can trap to the debugger for WRONG-TYPE-ARGUMENT (ARRAY (DTP-ARRAY))
5340 is the dispatch address for the AR-1 instruction.
If the machine halted here, the instruction must be unimplemented,
suggesting that compiled code and the microcode are inconsistent.

By the way, 7065 can trap to the debugger for BAD-DATA-TYPE
7065 not found in halt table for TMC5-MIC 219.
7065 is the microinstruction (FTN-AR-1 3).

12312 not found in halt table for TMC5-MIC 219.
12312 is the microinstruction (DOUBLE-ROUND-Z-DOWN-NOSIGNAL TRUE).

13715 not found in halt table for TMC5-MIC 219.
13715 is the microinstruction NEWTOPMEM.

By the way, 4400 can trap to the debugger for WRONG-TYPE-ARGUMENT (NIL (DTP-LIST DTP-LOCATIVE DTP-NIL))
4400 is the dispatch address for the CAR instruction.
If the machine halted here, the instruction must be unimplemented,
suggesting that compiled code and the microcode are inconsistent.

410 is the dispatch address for the PUSH-LOCAL instruction.
If the machine halted here, the instruction must be unimplemented,
suggesting that compiled code and the microcode are inconsistent.

;The above PUSH-LOCAL and CAR are the instructions preceding the AR-1 in %LEXPR-AREF.

13707 not found in halt table for TMC5-MIC 219.
13707 is the microinstruction PHYS-MEM-READ-DELAY.

12344 not found in halt table for TMC5-MIC 219.
12344 is the microinstruction (IFU-EMPTY-TRAP 3).

7537 not found in halt table for TMC5-MIC 219.
7537 is the microinstruction (IFU-EMPTY-TRAP 2).

7536 not found in halt table for TMC5-MIC 219.
7536 is the microinstruction (IFU-EMPTY-TRAP 1).

14000 not found in halt table for TMC5-MIC 219.
14000 is the microinstruction IFU-EMPTY-TRAP.

;Not enough OPCs to learn more, but I suspect that an array was funcalled
;someplace inside the debugger.  Again possibly due to some sort of clobberage
;of memory.


To learn more about this one you need a stack backtrace.  If this problem
persists, you should get DCP's tool for getting stack backtraces from the FEP
if you don't have it already, and see if you can learn anything useful with it.
28-Jan-84 16:38:04-EST,1742;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 28 Jan 84 16:36-EST
Received: from SCRC-CHARLES by SCRC-QUABBIN with CHAOS; Sat 28-Jan-84 16:40:27-EST
Date: Saturday, 28 January 1984, 16:37-EST
From: David C. Plummer <DCP at SCRC-QUABBIN>
Subject: Death of Jimi Hendrix?
To: Moon at SCRC-TENEX, KDF at MIT-OZ
Cc: bug-lispm at MIT-OZ, DCP at SCRC-TENEX, rwk at SCRC-QUABBIN
In-reply-to: The message of 28 Jan 84 16:15-EST from David A. Moon <Moon at SCRC-TENEX>

    Date: Saturday, 28 January 1984, 16:15-EST
    From: David A. Moon <Moon at SCRC-TENEX>

    ;All these OPCs appear to be the sequence executed upon warm-booting
    ;the machine.  The machine halted for an illegal instruction upon
    ;trying to execute the very first instruction from pageable memory
    ;after warm-booting.  Probably your memory was clobbered, but who knows?

I had this happen to me once, but it was considerably more reproducible.
One of the latches in the datapath from the disk to LBUS memory was
picking a pit, which caused opcodes to change around.  The particular
latch was not used for the FEP loading the wired portion from the disk,
so the symptom was erroneous bits in paged in memory.  I'm not
suggesting this is what happened, but it is a possibility.

    To learn more about this one you need a stack backtrace.  If this problem
    persists, you should get DCP's tool for getting stack backtraces from the FEP
    if you don't have it already, and see if you can learn anything useful with it.

When RWK revives, I'm going to pound on him about this.  Maybe he
doesn't have any objections about my releasing this (as unsupported and
undocumented, at least at first), but I haven't heard that from him.

28-Jan-84 17:52:11-EST,1258;000000000000
Received: from MIT-MORRISON by MIT-OZ via Chaosnet; 28 Jan 84 17:51-EST
Date: Saturday, 28 January 1984, 17:54-EST
From: David Chapman <Zvona at MIT-OZ>
Subject: undefined-function
To: BUG-LISPM at MIT-OZ

In System 242.269, imperial purple, on Lisp Machine Jim Morrison (3600):

>>Trap: The function DBG:FORCE-SG-INTO-DEBUGGER is undefined.
While in the function SI:*EVAL  SI:LISP-COMMAND-LOOP-INTERNAL  SI:LISP-COMMAND-LOOP

DBG:  (P.C. = 75)
   Arg 0 (PROCESS): #<STACK-GROUP analogy-enumerator 15643326>
   Local 1 (SG): #<STACK-GROUP analogy-enumerator 15643326>
   Local 2 (LOCK): #<DTP-LOCATIVE 17335571>

SI:*EVAL:  (P.C. = 370)
   Arg 0 (FORM): (DBG AE)

SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 200)
   Rest arg: (:NAME "Lisp Top Level in Lisp Listener 2" :ABORTED-FUNCTION NIL :BEFORE-PROMPT-FUNCTION NIL :READ-FUNCTION NIL :EVAL-FUNCTION NIL ...)

SI:LISP-COMMAND-LOOP:  (P.C. = 115)
   Arg 0 (STREAM): #<LISP-LISTENER Lisp Listener 2 1041745 exposed>
   Rest arg: (:NAME "Lisp Top Level in Lisp Listener 2")

SI:LISP-TOP-LEVEL1:  (P.C. = 22)
   Arg 0 (TERMINAL-IO-initialization): #<LISP-LISTENER Lisp Listener 2 1041745 exposed>

SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
   --Defaulted args:--
   Arg 0 (IGNORE): NIL
28-Jan-84 18:05:00-EST,2884;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 28 Jan 84 18:04-EST
Date: Sat, 28 Jan 84 18:06 EST
From: Kent M Pitman <KMP@MIT-MC.ARPA>
Subject: Rest arg to SIGNAL when arg1 is a consed flavor object.
To: BUG-LISPM@MIT-MC.ARPA
Cc: KMP@MIT-MC.ARPA, KBE-I-FILE%MIT-OZ@MIT-MC.ARPA

In Symbolics Release 5.0 (4, imperial purple) on Apiary-7 (3600):

I have a vague recollection of maybe having reported this before (in
Release 4), but it just came up again and so I checked and it's still
a problem in Release 5...

    (defflavor foo () (sys:ferror))
    
    (defmethod (foo :case :proceed :x) () :x)
    (defmethod (foo :case :proceed :y) () :y)
    
    (setq a (make-instance 'foo ':format-string "Lose"))
    
    (signal a ':proceed-types '(:x))		;These init options get ignored
    >>Error: Lose
    ...etc.
    (send a ':proceed-types)
    (:Y :X)					;At this point, I want (:X)

Ideally, SIGNAL should manage to process the init options late somehow,
though there is no obvious way for it to reliably do so. So at the very 
least, I think SIGNAL should err if init options have been specified and
arg1 is an error instance (ie, is not a flavor name) since otherwise
the signal may not perform correctly.

The problem comes up because the person who conses the error, if he
decides not to signal it, may not know the proceed types and it is useless
for someone else to try to simulate a signal-proceed-case if he cannot 
restrict the kinds of proceed types that are valid.

The reason it is hard to process the init options late, I suppose, is that
at that point there is no obvious protocol for simulating their effect.
After all, at this point it would have to do :SET-PROCEED-TYPES, not
:PROCEED-TYPES. 

Rather than generating :SET-mumble messages, why not make things with
:SETTABLE-INSTANCE-VARIABLES get a :CASE method combination for :SET 
such that doing 
  (SEND X :SET :X 3)
is equivalent to 
  (SEND X :SET-X 3)

This change, which could be made in an upward compatible way, phasing
out the old :SET-mumble messages over the next two system releases,
would have the following nice properties:

 * It would eliminate the problem of figuring out what package 
   to intern the set method on in the case that X was not on 
   the keyword package. 

 * It would also mean that people could request to run init options
   after consing the object (as in this case) by just doing
   (SEND OBJECT :SET INIT-OPTION VAL). Not all objects would be
   willing to :SET init options late (they might have been :INITABLE 
   and not :SETTABLE) but that is in the semantics of the object and 
   is for :SET method dispatch to decide; it is not something that 
   should be getting decided by :SET. 

 * It would mean that (SETF (SEND X FOO) ...) could reliably
   expand into (SEND X :SET FOO ...).

Comments?
28-Jan-84 18:31:57-EST,1410;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 28 Jan 84 18:31-EST
Date: 28 January 1984 18:34 EST
From: Kent M Pitman <KMP @ MIT-MC>
Subject:  Rest arg to SIGNAL when arg1 is a consed flavor object (addendum)
To: KMP @ MIT-MC
cc: BUG-LISPM @ MIT-MC, KBE-I-FILE @ MIT-OZ
In-reply-to: Msg of Sat 28 Jan 84 18:06 EST from Kent M Pitman <KMP at MIT-MC.ARPA>

Having such a :SET message would be somewhat related to the way 
the SETTER primitive works in T.

One specific nice property it would have which is also true of T is
that you could do things shaped like:

 (LET ((MSG :FOO))

   (SEND OBJ MSG)	 => 3
   (SEND OBJ :SET MSG 4) => 4
   (SEND OBJ MSG) 	 => 4

   (LET ((MSG :BAR))

     (SEND OBJ MSG)	   => 6
     (SEND OBJ :SET MSG 7) => 7
     (SEND OBJ MSG)	   => 7
   ))

Ie, that binding just one thing changes the thing that reads the message
and the thing that sets it. In the current situation, you must do things
like:

 (LET ((MSG :FOO)
       (MSG-SETTER :SET-FOO))

   (SEND OBJ MSG)	   => 3
   (SEND OBJ MSG-SETTER 4) => 4
   (SEND OBJ MSG) 	   => 4

   (LET ((MSG :BAR)
	 (MSG-SETTER :SET-BAR))

     (SEND OBJ MSG)	     => 6
     (SEND OBJ MSG-SETTER 7) => 7
     (SEND OBJ MSG)	     => 7
   ))

in order to achieve a sense of anonymity about the message name 
and still reliably be able to side-effect the thing accessed by 
the message name.
28-Jan-84 21:04:43-EST,1635;000000000000
Received: from MIT-MORRISON by MIT-OZ via Chaosnet; 28 Jan 84 21:04-EST
Date: Saturday, 28 January 1984, 21:05-EST
From: David Chapman <Zvona at MIT-OZ>
Subject: stack groups
To: BUG-LISPM at MIT-OZ

In System 242.269, imperial purple, on Lisp Machine Jim Morrison (3600):

I am not positive this is wrong, but it certainly is unpleasant.

(setq foo (make-stack-group 'foo))
#<STACK-GROUP FOO>
(stack-group-preset foo '(lambda () (prog () l (go l))))
.some-value.
(funcall foo)
; loops, I want to punt it:
c-Abort
>> Error: Stack group #<STACK-GROUP Lisp Listener 2> can not be unwound
          because it is not resumable.
m-Abort
function 0 s
>> Error: Stack group #<STACK-GROUP Lisp Listener 2> can not be unwound
          because it is not resumable.
c-R nil
>> Error: Stack group exhausted and unsafe to stack-group-return
c-R Yes
>> Error: The first argument given to sys:return-multiple, (NIL), was
	  not a fixnum.
<resume> 0
>> Error: Stack group exhausted and unsafe to stack-group-return
c-R Yes
Lisp stopped itself
Fep>sh st
MacroPC/ (even)10545
Cpc/0
OPC+1/42200

By the way: What happened to sys:%current-stack-group-previous-stack-group? 
I couldn't find a release note update of the manual, but maybe I missed
something. 

Random thought: I've often wanted the debugger to have a command that
would allow you to continue execution from (``goto'') a given (numbered)
instruction in the current stack frame.  This was one such instance.  Is
this feasible?

Incidentally: (setf (si:sg-safe foo) 0) didn't help with the ``unsafe
to stack-group-return'' message.  Why?
28-Jan-84 21:53:25-EST,376;000000000000
Received: from MIT-MORRISON by MIT-OZ via Chaosnet; 28 Jan 84 21:52-EST
Date: Saturday, 28 January 1984, 21:54-EST
From: David Chapman <Zvona at MIT-OZ>
Subject: last stack group bug report
To: bug-lispm at MIT-OZ

Hmm, looks like this was due to the stack group for lisp listener 2 being 
munched somehow.  I can't reproduce it on a clean machine.  Sorry 'bout that.
28-Jan-84 22:10:01-EST,1850;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 28 Jan 84 22:09-EST
Received: from SCRC-MERCED by SCRC-QUABBIN with CHAOS; Sat 28-Jan-84 22:10:43-EST
Date: Sat, 28 Jan 84 22:10 EST
From: "James J. Cherry" <cherry%SCRC-QUABBIN@MIT-MC.ARPA>
Subject: Rest arg to SIGNAL when arg1 is a consed flavor object.
To: KMP@MIT-MC.ARPA, BUG-LISPM@MIT-MC.ARPA
Cc: KBE-I-FILE%MIT-OZ@MIT-MC.ARPA
In-reply-to: The message of 28 Jan 84 18:06-EST from Kent M Pitman <KMP at MIT-MC>

    Date: Sat, 28 Jan 84 18:06 EST
    From: Kent M Pitman <KMP@MIT-MC.ARPA>

    Rather than generating :SET-mumble messages, why not make things with
    :SETTABLE-INSTANCE-VARIABLES get a :CASE method combination for :SET 
    such that doing 
      (SEND X :SET :X 3)
    is equivalent to 
      (SEND X :SET-X 3)

    This change, which could be made in an upward compatible way, phasing
    out the old :SET-mumble messages over the next two system releases,
    would have the following nice properties:

     * It would eliminate the problem of figuring out what package 
       to intern the set method on in the case that X was not on 
       the keyword package. 

     * It would also mean that people could request to run init options
       after consing the object (as in this case) by just doing
       (SEND OBJECT :SET INIT-OPTION VAL). Not all objects would be
       willing to :SET init options late (they might have been :INITABLE 
       and not :SETTABLE) but that is in the semantics of the object and 
       is for :SET method dispatch to decide; it is not something that 
       should be getting decided by :SET. 

     * It would mean that (SETF (SEND X FOO) ...) could reliably
       expand into (SEND X :SET FOO ...).

    Comments?

This is something I would like to see also.  I have an immediate need
for it.
28-Jan-84 22:21:15-EST,2348;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 28 Jan 84 22:20-EST
Date: 28 Jan 1984  22:23 EST (Sat)
Message-ID: <SR.EHPYC.11987357900.BABYL@MIT-SPEECH>
From: Scott Cyphers <SR.EHPYC%MIT-SPEECH@MIT-MC.ARPA>
To:   "James J. Cherry" <cherry%SCRC-QUABBIN@MIT-MC.ARPA>
Cc:   BUG-LISPM@MIT-MC.ARPA, KBE-I-FILE%MIT-OZ@MIT-MC.ARPA, KMP@MIT-MC.ARPA
Subject: Rest arg to SIGNAL when arg1 is a consed flavor object.
In-reply-to: Msg of 28 Jan 1984  22:10-EST from James J. Cherry <cherry%SCRC-QUABBIN at MIT-MC.ARPA>

    Date: Saturday, 28 January 1984  22:10-EST
    From: James J. Cherry <cherry%SCRC-QUABBIN at MIT-MC.ARPA>
    To:   KMP at MIT-MC.ARPA, BUG-LISPM at MIT-MC.ARPA
    cc:   KBE-I-FILE%MIT-OZ at MIT-MC.ARPA
    Re:   Rest arg to SIGNAL when arg1 is a consed flavor object.

        Date: Sat, 28 Jan 84 18:06 EST
        From: Kent M Pitman <KMP@MIT-MC.ARPA>

        Rather than generating :SET-mumble messages, why not make things with
        :SETTABLE-INSTANCE-VARIABLES get a :CASE method combination for :SET 
        such that doing 
          (SEND X :SET :X 3)
        is equivalent to 
          (SEND X :SET-X 3)

        This change, which could be made in an upward compatible way, phasing
        out the old :SET-mumble messages over the next two system releases,
        would have the following nice properties:

         * It would eliminate the problem of figuring out what package 
           to intern the set method on in the case that X was not on 
           the keyword package. 

         * It would also mean that people could request to run init options
           after consing the object (as in this case) by just doing
           (SEND OBJECT :SET INIT-OPTION VAL). Not all objects would be
           willing to :SET init options late (they might have been :INITABLE 
           and not :SETTABLE) but that is in the semantics of the object and 
           is for :SET method dispatch to decide; it is not something that 
           should be getting decided by :SET. 

         * It would mean that (SETF (SEND X FOO) ...) could reliably
           expand into (SEND X :SET FOO ...).

        Comments?

    This is something I would like to see also.  I have an immediate need
    for it.

I've had to do things like this too.  It seems like a good idea.
29-Jan-84 02:36:29-EST,1755;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 29 Jan 84 02:36-EST
Date: Sunday, 29 January 1984, 02:36-EST
From: David Vinayak Wallace <Gumby at MIT-MC>
Subject: bug in ZWEI:EDITOR :EDIT
To: BUG-LISPM at MIT-OZ

In Release 5.0 [Beta Test rev 4], FEP 13, imperial purple, on Lisp Machine Janis Joplin (3600):

If I try to evaluate the following form:

(defwhopper (editor :edit) (&rest args)
  (let ((*precomma-arg* ()))
    (lexpr-continue-whopper args)))

I get the following warning:

(load "mc:gumby;lose bin")
Loading MC: GUMBY; LOSE BIN into package ZWEI
For Function (:METHOD ZMAIL-FRAME :COMBINED :EDIT)
  While compiling (SI:MACROCALL (QUOTE (:METHOD TOP-LEVEL-EDITOR :WRAPPER :EDIT)) SI:.DAEMON-CALLER-ARGS. (COMPILER-LET ((COMPILER:*INTERNAL-FUNCTION-HAS-MAPPING-TABLE* T)) (LEXPR-FUNCALL (FUNCTION (:METHOD EDITOR :WHOPPER :EDIT)) SELF (SYS:GET-FLAVOR-MAPPING-TABLE-FROM-SELF (QUOTE EDITOR)) (FUNCTION (LAMBDA (SELF SYS:SELF-MAPPING-TABLE &REST SI:.DAEMON-CALLER-ARGS.) (COMPILER-LET ((COMPILER:*INTERNAL-FUNCTION-HAS-MAPPING-TABLE* NIL)) (PROGN (LEXPR-FUNCALL (FUNCTION (:METHOD TOP-LEVEL-EDITOR :BEFORE :EDIT)) SELF (SYS:GET-FLAVOR-MAPPING-TABLE-FROM-SELF (QUOTE TOP-LEVEL-EDITOR)) SI:.DAEMON-CALLER-ARGS.) (LEXPR-FUNCALL (FUNCTION (:METHOD ZMAIL-COMMAND-LOOP-MIXIN :BEFORE :EDIT)) SELF (SYS:GET-FLAVOR-MAPPING-TABLE-FROM-SELF (QUOTE ZMAIL-COMMAND-LOOP-MIXIN)) SI:.DAEMON-CALLER-ARGS.) (LEXPR-FUNCALL (FUNCTION (:METHOD EDITOR :EDIT)) SELF (SYS:GET-FLAVOR-MAPPING-TABLE-FROM-SELF (QUOTE EDITOR)) SI:.DAEMON-CALLER-ARGS.))))) SYS:SELF-MAPPING-TABLE SI:.DAEMON-CALLER-ARGS.))):
  Trying to bind the instance variable STANDARD-INPUT,
  a SPECIAL variable will be used instead.
#<ITS-PATHNAME "MC: GUMBY; LOSE BIN">
NIL

29-Jan-84 16:08:27-EST,548;000000000000
Received: from MIT-XX by MIT-OZ via Chaosnet; 29 Jan 84 16:07-EST
Date: Sunday, 29 January 1984, 16:05-EST
From: Mark A. Peot <MARK at MIT-XX>
To: BUG-LISPM at MIT-OZ

In MIT-Specific 19.5, System 94.39, ZMail 50.17, microcode 239, uC239,
on Arthur Dent:

	I seem to remember that you can't setq on a constant without getting
an error.  In this version you can do the following:

	(defconst foo 10.)
	NIL
	foo
	10.
	(setq foo 13.)
      * 13.                 
	foo 
	13.

   There should have been an error message at the '*'.
29-Jan-84 21:57:09-EST,1125;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 29 Jan 84 21:56-EST
Received: from SCRC-EUPHRATES by SCRC-QUABBIN with CHAOS; Sun 29-Jan-84 21:58:07-EST
Date: Sunday, 29 January 1984, 21:46-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: setq of a constant
To: Mark A. Peot <MARK at MIT-XX>
Cc: BUG-LISPM at MIT-OZ
In-reply-to: The message of 29 Jan 84 16:05-EST from Mark A. Peot <MARK at MIT-XX>

    Date: Sunday, 29 January 1984, 16:05-EST
    From: Mark A. Peot <MARK at MIT-XX>

    In MIT-Specific 19.5, System 94.39, ZMail 50.17, microcode 239, uC239,
    on Arthur Dent:

	    I seem to remember that you can't setq on a constant without getting
    an error.  In this version you can do the following:

	    (defconst foo 10.)
	    NIL
	    foo
	    10.
	    (setq foo 13.)
	  * 13.                 
	    foo 
	    13.

       There should have been an error message at the '*'.

defconst is not the special form that defines constants.  You have it
confused with defconstant.  Admittedly an easy mistake to make, which
is why Common Lisp renames defconst to defparameter.
30-Jan-84 03:06:47-EST,1923;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 30 Jan 84 03:06-EST
Date: Monday, 30 January 1984, 03:07-EST
From: David Vinayak Wallace <Gumby at MIT-MC>
Subject: time parser barfs on Christmas, Halloween, etc.
To: BUG-LISPM at MIT-OZ

In Release 5.0 [Beta Test rev 4], FEP 13, imperial purple, on Lisp Machine Janis Joplin (3600):

(time:parse "Christmas, 1983") produces the following error:

>>Error: Hour specified twice.
While in the function TIME:BARF  TIME:SET-HHMM  #:G0539

TIME:BARF:  (P.C. = 14)
   Arg 0 (FORMAT-STRING): "Hour specified twice."
   Rest arg (FORMAT-ARGS): NIL

TIME:SET-HHMM:  (P.C. = 5)
   Arg 0 (TIME): (1983. 4.)

#:G0539:  (P.C. = 3)
   Arg 0 (HHMM): (1983. 4.)

TIME:PATTERN-INVOKE:  (P.C. = 45)
   Arg 0 (PATTERN): ((FIXP 4.))
   Arg 1 (TOKEN-LIST): ((1983. 4.))
   Arg 2 (FUNCTION): #:G0539
   Arg 3 (PASS-ARGUMENTS): T

TIME:PARSE-1:  (P.C. = 33)
   Arg 0 (TOKEN-LIST): (TIME:CHRISTMAS TIME:|,| (1983. 4.))
   Arg 1 (INITIAL-STATE): TIME:MAIN

TIME:PARSE-UNIVERSAL-TIME:  (P.C. = 162)
   Arg 0 (*TIME-BEING-PARSED*-initialization): "Christmas, 1983"
   Arg 1 (START): 0.
   Arg 2 (END): NIL
   Arg 3 (FUTUREP): T
   Arg 4 (BASE-TIME): NIL
   Arg 5 (MUST-HAVE-TIME): NIL
   Arg 6 (DATE-MUST-HAVE-YEAR): NIL
   Arg 7 (TIME-MUST-HAVE-SECOND): NIL
   Arg 8 (DAY-MUST-BE-VALID): T

TIME:PARSE:  (P.C. = 26)
   Arg 0 (STRING): "Christmas, 1983"
   --Defaulted args:--
   Arg 1 (START): 0.
   Arg 2 (END): NIL
   Arg 3 (FUTUREP): T
   Arg 4 (BASE-TIME): NIL
   Arg 5 (MUST-HAVE-TIME): NIL
   Arg 6 (DATE-MUST-HAVE-YEAR): NIL
   Arg 7 (TIME-MUST-HAVE-SECOND): NIL
   Arg 8 (DAY-MUST-BE-VALID): T

SI:*EVAL:  (P.C. = 370)
   Arg 0 (FORM): (TIME:PARSE "Christmas, 1983")

Rest of stack:
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 200)
SI:LISP-COMMAND-LOOP:  (P.C. = 115)
SI:LISP-TOP-LEVEL1:  (P.C. = 22)
SI:LISP-TOP-LEVEL:  (P.C. = 7)
30-Jan-84 03:29:10-EST,3410;000000000000
Received: from MIT-AVATAR by MIT-OZ via Chaosnet; 30 Jan 84 03:28-EST
Date: Monday, 30 January 1984, 03:29-EST
From: Apprentice for KMP <KBE at MIT-OZ>
Subject: Rel 4.5 Patch Directory format
To: BUG-LISPM at MIT-OZ

In Release 4.5, Knowledge-Based-Editor 263.0 (Hacked Magic) on Avatar (CADR):

The .PATCH-DIRECTORY.0 files grow very large very fast.
The KBE has 70 source files and after only 40 major versions,
the size of each .PATCH-DIRECTORY files is 50 pages.
I used to not have to reap .PATCH-DIRECTORY files very often;
now I have to do so very often (or have generation-retention-count
set to a small number) or else they take an inordinate of space.
I hadn't noticed the effect of the change in format until someone
pointed me at a cluster of files I'd have guessed took up
50-100pages, but which (due to the new format) took up >1000pages.
This is a livable problem since only the last couple of 
.PATCH-DIRECTORY files are needed anyway. But it probably bears
documenting that:
  * New .PATCH-DIRECTORY files contain all the info that any
    old one had, so any old one (from after the new format went into
    effect) can pretty much be freely deleted.
  * New .PATCH-DIRECTORY files may wish to be edited by hand to
    prune source file info for versions of the system which were
    never released or which are no longer active. This will save
    disk space, and it will also save the ridiculously long 
    amount of time (not to mention lot of wasted space) needed to
    read the .PATCH-DIRECTORY file into core when building the system.
    Am I correct in assuming it is save to just remove the s-expression
    corresponding to "dead systems"? Perhaps there should be an automatic 
    tool for helping with this kind of reaping.

As nearly as I can tell, the patch file format does not provide for
"sticky" commenting. Semicolon comments placed in the file will, I
assume, go away when the patch file is next written? It would be 
nice if there were a way to put comments in this file and not have
them go away when a next generation of the file is created. Such 
comments could, for example, allow the maintainer to make notes 
about who was holding pointers to a system.

In this regard, perhaps it would be interesting to make these patch
directories try to be something like the LOCK files used by Emacs and 
Maclisp. There could be a command to lock and unlock a system
from a given band of a context or machine or something. I'm a little
vague on how this would work, but I know that's a definite need I have.
I keep having to run from room to room doing PRINT-DISK-LABEL to find
out which versions of the KBE are live on different machines 
(fortunately we only have two; I'm sure you could imagine projects
with more live versions of things). Anyway, the comment facility
would be good for now.

This comment facility would, of course, be a non-upward-compatible
change again. At least maybe this time you could make the format
extensible by doing something like an alist or plist style database
so that other format changes after that could be upward-compatible.

(("Knowledge-Based-Editor" :LATEST 263.)
 :SYSTEM-VERSIONS
 ((263. :LM-2 (...files...) 3600. (...files...) :COMMENT ... :ETC ...)
  (262. :LM-2 (...files...) 3600. (...files...) :COMMENT ... :ETC ...) ...)
 :PATCH-DIRECTORY-FORMAT 17.
 :ETC ...)

30-Jan-84 03:41:37-EST,631;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 30 Jan 84 03:41-EST
Date: Monday, 30 January 1984, 03:41-EST
From: Kent M Pitman <KMP at MIT-MC>
Subject: Lisp Mode for .PATCH-DIR[ECTORY] files?
To: BUG-LISPM at MIT-OZ

 In Release 4.5 on Avatar (CADR) 
and Release 5.0.4 (imperial purple) on Apiary-7 (3600):

ZMacs does not know that .PATCH-DIRECTORY files should be edited
in Lisp Mode. Either the creator should set up a file attribute
list or ZMacs should know about .PATCH-DIRECTORY files or both.

It also does not knwo about .PATCH-DIR files, but they at least
get a file attribute list written in them.
-kmp
30-Jan-84 12:13:02-EST,2914;000000000000
Received: from MIT-LISPM-32 by MIT-OZ via Chaosnet; 30 Jan 84 12:11-EST
Date: Monday, 30 January 1984, 12:14-EST
From: Anonymous File Thief <ANONYMOUS at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In Don't-dump-a-band! Inconsistent (unreleased patches loaded) System 98.30,
CADR 3.6, ZMail 53.9, MIT-Specific 22.0, microcode 306,
on Lisp Machine Thirty-two:




This happened when loading patches on 98.30:


>>ERROR: VMS-PATHNAME-MIXIN is neither the name of a flavor nor the name of a class;
 it is not possible to FDEFINE (:METHOD VMS-PATHNAME-MIXIN :WRAPPER :PARSE-NAMESTRING).
Backtrace from the debugger:

SI:METHOD-FUNCTION-SPEC-HANDLER (P.C. = 407)

 Arg 0 (FUNCTION): FDEFINE
 Arg 1 (FUNCTION-SPEC): (:METHOD VMS-PATHNAME-MIXIN :WRAPPER :PARSE-NAMESTRING)
 Arg 2 (ARG1): (MACRO . #<DTP-FEF-POINTER (:METHOD VMS-PATHNAME-MIXIN :WRAPPER :PARSE-NAMESTRING) 30561620>)
   --Defaulted args:--
 Arg 3 (ARG2): NIL
Local 0 (FL): NIL
Local 1 (FLAVOR): VMS-PATHNAME-MIXIN
Local 2 (METHOD-TYPE): :WRAPPER
Local 3 (MESSAGE): :PARSE-NAMESTRING
Local 4 (METH): ((:METHOD VMS-PATHNAME-MIXIN :WRAPPER :PARSE-NAMESTRING) ...error printing #<CONS 6065615>...
Local 5 (DEFINITION-NEW): NIL
Local 6 (OLD-DEFINITION): NIL
Local 7 (SUCCESS): NIL
Local 8: NIL
Local 9 (COMPONENT): NIL
Local 10 (FLAVOR): NIL
Local 11 (METHS): NIL
Local 12: NIL
Local 13 (METH): NIL
Local 14 (NEW-SPEC): NIL


FDEFINE (P.C. = 162)

 Arg 0 (FUNCTION-SPEC): (:METHOD VMS-PATHNAME-MIXIN :WRAPPER :PARSE-NAMESTRING)
 Arg 1 (DEFINITION): (MACRO . #<DTP-FEF-POINTER (:METHOD VMS-PATHNAME-MIXIN :WRAPPER :PARSE-NAMESTRING) 30561620>)
 Arg 2 (CAREFULLY-FLAG): T
 Arg 3 (NO-QUERY-FLAG): NIL
Local 0 (TYPE): :METHOD
Local 1 (INNER-SPEC): (:METHOD VMS-PATHNAME-MIXIN :WRAPPER :PARSE-NAMESTRING)
Local 2 (DEFINEDP): NIL
Local 3 (DEFP): NIL
Local 4 (DEFN): NIL


FSET-CAREFULLY (P.C. = 25)

 Arg 0 (FUNCTION-SPEC): (:METHOD VMS-PATHNAME-MIXIN :WRAPPER :PARSE-NAMESTRING)
 Arg 1 (DEFINITION): (MACRO . #<DTP-FEF-POINTER (:METHOD VMS-PATHNAME-MIXIN :WRAPPER :PARSE-NAMESTRING) 30561620>)
   --Defaulted args:--
 Arg 2 (NO-QUERY-FLAG): NIL


SYSTEM:FASL-OP-STOREIN-FUNCTION-CELL (P.C. = 113)

Local 0 (DATA): (MACRO . #<DTP-FEF-POINTER (:METHOD VMS-PATHNAME-MIXIN :WRAPPER :PARSE-NAMESTRING) 30561620>)
Local 1 (SYM): (:METHOD VMS-PATHNAME-MIXIN :WRAPPER :PARSE-NAMESTRING)


SI:FASL-GROUP (P.C. = 132)

Local 0 (FASL-GROUP-BITS): 100117
Local 1 (FASL-GROUP-TYPE): 17


Remainder of stack:

SI:FASL-WHACK-SAVE-FASL-TABLE (P.C. = 67)
SI:FASL-WHACK (P.C. = 23)
SI:FASL-TOP-LEVEL (P.C. = 32)
SI:FASLOAD-INTERNAL (P.C. = 506)
FS:LOAD-1 (P.C. = 374)
LOAD (P.C. = 104)
LOAD-PATCHES (P.C. = 1233)
SI:EVAL1 (P.C. = 1324)
SI:EVAL-ABORT-TRIVIAL-ERRORS (P.C. = 61)
SI:LISP-TOP-LEVEL1 (P.C. = 444)
SI:LISP-TOP-LEVEL2 (P.C. = 27)
SI:PROCESS-TOP-LEVEL (P.C. = 246)
SI:LISP-TOP-LEVEL (P.C. = 47)
30-Jan-84 13:28:30-EST,1494;000000000000
Received: from MIT-ML by MIT-OZ via Chaosnet; 30 Jan 84 13:21-EST
Date: Monday, 30 January 1984, 13:21-EST
From: David Chapman <Zvona at MIT-OZ>
Subject: total weirdness in Jim Morrison
To: AGRE at MIT-OZ, bug-beta-test at MIT-OZ,
    bug-symbolics-hardware at MIT-OZ, bug-lispm at MIT-OZ
Cc: daniel at MIT-OZ, zvona at MIT-OZ, cjl at MIT-OZ, fleck at MIT-OZ,
    dam at MIT-OZ
In-reply-to: The message of 30 Jan 84 12:49-EST from Philip E. Agre <AGRE at MIT-OZ>

    From: Philip E. Agre <AGRE@MIT-OZ>
    Subject: total weirdness in Jim Morrison

    After getting totally weird and obscure bugs all morning trying
    to make my systems run under 5.0 imperial purple on Jim Morrison,
    ...
    So I guess something is wrong hardwarily or softwarily with Jim Morrison.

Looks like I am the culprit.  Last night I booted the machine, did
(si:set-keyboard-layout nil), function 1 m, and (load-and-save-patches).
I saved into the band that I instabooted from (since there is room for
only two bands).  It asked me if I wanted to do this, but didn't say
what the consequences would be.  I assumed that if it was asking me, it
was OK; besides, I thought I remembered a bug-lispm message saying that
it was.  Gee, if it doesn't work, then why doesn't it say so and/or
prevent you from doing it?

Morrison has v17 proms if that makes a difference.

I'll put a new purple band on Morrison as soon as someone tells me that
my reconstruction of the problem is correct.
30-Jan-84 14:04:27-EST,700;000000000000
Received: from MIT-BUDDY by MIT-OZ via Chaosnet; 30 Jan 84 14:01-EST
Date: Monday, 30 January 1984, 14:03-EST
From: David Chapman <Zvona at MIT-OZ>
Subject: total weirdness in Jim Morrison
To: Zvona at MIT-OZ, AGRE at MIT-OZ, bug-beta-test at MIT-OZ,
    bug-symbolics-hardware at MIT-OZ, bug-lispm at MIT-OZ
Cc: daniel at MIT-OZ, cjl at MIT-OZ, fleck at MIT-OZ, dam at MIT-OZ
In-reply-to: The message of 30 Jan 84 13:21-EST from David Chapman <Zvona at MIT-OZ>

This is not a hardware bug: 4.5 boots ok.

DPH says that saving over instabooted band is indeed supposed to work,
so we are leaving the trashed band around in case someone wants to try
to figure out why the disk-save lost.
30-Jan-84 14:39:59-EST,1130;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 30 Jan 84 14:38-EST
Received: from SCRC-CHARLES by SCRC-QUABBIN with CHAOS; Mon 30-Jan-84 14:40:22-EST
Date: Monday, 30 January 1984, 14:39-EST
From: David C. Plummer <DCP at SCRC-QUABBIN>
Subject: total weirdness in Jim Morrison
To: Zvona at MIT-OZ, AGRE at MIT-OZ, bug-beta-test at MIT-OZ,
    bug-symbolics-hardware at MIT-OZ, bug-lispm at MIT-OZ
Cc: daniel at MIT-OZ, cjl at MIT-OZ, fleck at MIT-OZ, dam at MIT-OZ
In-reply-to: The message of 30 Jan 84 14:03-EST from David Chapman <Zvona at MIT-OZ>

    Date: Monday, 30 January 1984, 14:03-EST
    From: David Chapman <Zvona at MIT-OZ>
    This is not a hardware bug: 4.5 boots ok.

    DPH says that saving over instabooted band is indeed supposed to work,
    so we are leaving the trashed band around in case someone wants to try
    to figure out why the disk-save lost.

I have put a V17-debug.flod on Morrison.  Try booting up the
bad-imperial band.  When it dies, do
	Load Fep >V17-debug.flod
Type [Help] and poke around.  Have some paper handy to write down things
you think might be useful.
30-Jan-84 14:44:13-EST,1815;000000000000
Received: from MIT-LISPM-32 by MIT-OZ via Chaosnet; 30 Jan 84 14:42-EST
Date: Monday, 30 January 1984, 14:45-EST
From: Philippe Brou <PHILIP at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In Don't-dump-a-band! Inconsistent (unreleased patches loaded) System 98.30,
CADR 3.6, ZMail 53.9, MIT-Specific 22.0,
Experimental 3D_Vision_system 54.0, microcode 306,
on Lisp Machine Thirty-two:


The system can't print the usual message about the
base and reading... in one of my lisp-interactor
windows.

>>ERROR: Missing ~] in format string:
                
   "~&;Reading~@[ at top level]"

Backtrace from the debugger:

FORMAT:FORMAT-PARSE-CLAUSES (P.C. = 156)

 Arg 0 (CLOSECHAR): FORMAT:]
 Arg 1 (SEMIP): T
Local 0 (I): 13.
Local 1 (J): NIL
Local 2 (TEM): NIL
Local 3 (START): 16.
Local 4 (CLAUSES): #<ART-Q-LIST-30. 25761615>
Local 5 (STACK): #<ART-Q-LIST-10. 25761657>
Local 6 (COMMAND): NIL
Local 7 (IGNORE): NIL


FORMAT:FORMAT-CTL-START-SELECT (P.C. = 123)

 Arg 0 (ARGS): (T)
 Arg 1 (PARAMS): NIL
Local 0 (ARG): 0.
Local 1 (START): NIL
Local 2 (CLAUSES): NIL
Local 3 (L): NIL
Local 4 (STATE): NIL
Local 5 (Z): NIL
Local 6 (Q): NIL
Local 7 (A): NIL
Local 8 (STRING): NIL
Local 9 (NEWARGS): NIL


FORMAT:FORMAT-CTL-OP (P.C. = 104)

 Arg 0 (OP): FORMAT:[
 Arg 1 (ARGS): (T)
 Arg 2 (PARAMS): NIL
Local 0 (TEM): FORMAT:FORMAT-CTL-START-SELECT


FORMAT:FORMAT-CTL-STRING (P.C. = 136)

 Arg 0 (ARGS): (T)
 Arg 1 (CTL-STRING): "~&;Reading~@[ at top level]"
Local 0 (FORMAT-PARAMS): #<ART-Q-LIST-10. 16320117>
Local 1 (TEM): FORMAT:[


FORMAT (P.C. = 177)

 Arg 0 (STREAM): T
 Arg 1 (CTL-STRING): "~&;Reading~@[ at top level]"
 Rest arg (ARGS): (T)
Local 1: NIL


Remainder of stack:

SI:LISP-TOP-LEVEL1 (P.C. = 241)
SI:PROCESS-TOP-LEVEL (P.C. = 246)
30-Jan-84 21:22:23-EST,1867;000000000000
Received: from MIT-BUDDY by MIT-OZ via Chaosnet; 30 Jan 84 21:21-EST
Date: Monday, 30 January 1984, 21:22-EST
From: David Chapman <Zvona at MIT-OZ>
Subject: make-system: ugly error message
To: BUG-LISPM at MIT-OZ

In System 242.269, FEP 18, imperial purple, on Lisp Machine Buddy Holly (3600):

(defsystem foo (:module gprint "pig:[lmlib]gprint") (:module lets "pig:[lmlib]lets") (:fasload gprint)
 (:compile-load-init lets (gprint) (:fasload gprint) (:fasload gprint))
 (:compile-load-init lets (gprint) (:fasload lets) (:fasload lets)))

(make-system 'foo)

>>Trap: The variable SI:*CONDITION-FUNCTIONS* is unbound.
While in the function SYMEVAL-IN-CLOSURE  SI:ADD-FILE-TRANSFORMATION  SI:GET-TRANSFORMATION-INPUT-FILE-TRANSFORMATIONS

SYMEVAL-IN-CLOSURE:  (P.C. = 47)
   Arg 0 (CLOSURE): #<DTP-CLOSURE 7313417>
   Arg 1 (PTR): SI:*CONDITION-FUNCTIONS*
   Local 2 (L): NIL

SI:ADD-FILE-TRANSFORMATION:  (P.C. = 226)
   Arg 0 (TRANSFORMATION): #<TRANSFORMATION COMPILE 6563124>
   Arg 1 (PATHNAMES): (NIL #<VMS-PATHNAME "PYGMALION:SYS$DISK:[LMLIB]LETS.LSP">)

SI:GET-TRANSFORMATION-INPUT-FILE-TRANSFORMATIONS:  (P.C. = 52)
   Arg 0 (TRANSFORMATION): #<TRANSFORMATION COMPILE 6563124>

SI:QUEUE-ONE-TRANSFORMATION:  (P.C. = 20)
   Arg 0 (TRANSFORMATION): #<TRANSFORMATION COMPILE 6563124>
   Arg 1 (FORCE-DEPENDENCIES): NIL
   Rest arg (OTHERS): NIL

SI:PERFORM-TRANSFORMATIONS:  (P.C. = 122)
   Arg 0 (TRANSFORMATION-LIST): ((#<TRANSFORMATION COMPILE 6563106> NIL NIL NIL) (#<TRANSFORMATION COMPILE 6563124> NIL NIL NIL))

SI:PERFORM-TRANSFORMATIONS:  (P.C. = 64)
   Arg 0 (TRANSFORMATION-LIST): ((#<TRANSFORMATION FASLOAD 6563077> NIL NIL NIL) (#<TRANSFORMATION FASLOAD 6563115> NIL NIL NIL) (#<TRANSFORMATION FASLOAD 6563133> NIL NIL NIL))

MAKE-SYSTEM:  (P.C. = 222)
   Arg 0 (SYSTEM): FOO
   Rest arg (KEYWORDS): NIL
31-Jan-84 06:46:55-EST,2126;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 31 Jan 84 06:46-EST
Date: Tuesday, 31 January 1984, 06:47-EST
From: Kent M Pitman <KMP at MIT-MC>
Subject: Has -*- ... Fonts:CPTFONT; -*- become illegal?
To: BUG-LISPM at MIT-OZ

In Release 5.0 [Beta Test rev 4], FEP 13, imperial purple, on Lisp Machine Apiary-7 (3600):

The following error is apparently due to having -*- ... Fonts:CPTFONT; -*- in the
File Attribute list. It seems completely bogus.

>>Trap: The argument given to the CDR instruction, :CPTFONT, was not a list, a locative or NIL.
While in the function COMPILER:COMPILE-FILE  SI:*EVAL  SI:LISP-COMMAND-LOOP-INTERNAL

COMPILER:COMPILE-FILE:  (P.C. = 163)
   Arg 0 (INFILE): "mc:common;emouse source"
   Arg 1 (OUTFILE): "mc:common;emouse r5bin"
   --Defaulted args:--
   Arg 2 (IN-PACKAGE): NIL
   Arg 3 (DONT-SET-DEFAULT-P): NIL
   Local 4 (PATHNAMES): NIL
   Local 5 (PATHNAME): #<ITS-PATHNAME "MC: COMMON; EMOUSE SOURCE">
   Local 6 (GENERIC-PATHNAME): #<ITS-PATHNAME "MC: COMMON; EMOUSE SOURCE">
   Local 7: #<BIND-HANDLER 76176507>
   Local 8: NIL
   Local 9 (.STREAM-ABORT-FLAG.): :ABORT
   Local 10 (INPUT-STREAM): #<FILE-INPUT-CHARACTER-STREAM "MC: COMMON; EMOUSE SOURCE" 3025363>
   Local 11: SYS:UNWIND-PROTECT-TAG
   Local 12: #<DTP-ODD-PC 46371055>
   Local 13: #<DTP-LOCATIVE 740044>
   Local 14: #<DTP-LOCATIVE 140104>
   Local 15: :CPTFONT
   Local 16 (IGNORE): #<DTP-ODD-PC 46371021>
   Local 17 (NEW-PATHNAME): NIL

SI:*EVAL:  (P.C. = 370)
   Arg 0 (FORM): (COMPILER:COMPILE-FILE "mc:common;emouse source" "mc:common;emouse r5bin")

SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 200)
   Rest arg: (:NAME "Lisp Top Level in Lisp Listener 1" :ABORTED-FUNCTION NIL :BEFORE-PROMPT-FUNCTION NIL :READ-FUNCTION NIL :EVAL-FUNCTION NIL ...)

SI:LISP-COMMAND-LOOP:  (P.C. = 115)
   Arg 0 (STREAM): #<LISP-LISTENER Lisp Listener 1 32640000 exposed>
   Rest arg: (:NAME "Lisp Top Level in Lisp Listener 1")

SI:LISP-TOP-LEVEL1:  (P.C. = 22)
   Arg 0 (TERMINAL-IO-initialization): #<LISP-LISTENER Lisp Listener 1 32640000 exposed>

SI:LISP-TOP-LEVEL:  (P.C. = 7)
31-Jan-84 13:40:24-EST,2313;000000000000
Received: from MIT-ROBOT-4 by MIT-OZ via Chaosnet; 31 Jan 84 13:38-EST
Date: Tuesday, 31 January 1984, 13:36-EST
From: Steven Bagley <bagley at MIT-OZ>
Subject: hardcopy buffer broken.
To: BUG-LISPM at MIT-OZ

In System 242.269, FEP 13, imperial purple, on Lisp Machine Robot-4 (3600):

I did a M-X hardcopy buffer, hit return to get the current buffer, and
while sending the press file, I got the following.  Since someone else
had the same problem, I assume that it is reproducible.

>>Trap: The argument given to the ZEROP instruction, NIL, was not a number.
While in the function (:METHOD PRESS:PRESS-STREAM :PUT-PENDING-CHARS)  (:METHOD PRESS:PRESS-STREAM :SET-DEVICE-FONT)  (:METHOD SI:HARDCOPY-STREAM-FONT-MIXIN :CHECK-FONT)

(:METHOD PRESS:PRESS-STREAM :PUT-PENDING-CHARS):  (P.C. = 2)
   Arg 0 (SELF): #<PRESS-STREAM 6611435>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor PRESS:PRESS-STREAM -- 32. IV's, 4. FL's 4223410>
   Arg 2 (OPERATION): :PUT-PENDING-CHARS

(:METHOD PRESS:PRESS-STREAM :SET-DEVICE-FONT):  (P.C. = 4)
   Arg 0 (SELF): #<PRESS-STREAM 6611435>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor PRESS:PRESS-STREAM -- 32. IV's, 4. FL's 4223410>
   Arg 2 (OPERATION): :SET-DEVICE-FONT

(:METHOD SI:HARDCOPY-STREAM-FONT-MIXIN :CHECK-FONT):  (P.C. = 10)
   Arg 0 (SELF): #<PRESS-STREAM 6611435>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:HARDCOPY-STREAM-FONT-MIXIN -- 6. IV's, 0. FL's 4221771>
   Arg 2 (OPERATION): :CHECK-FONT

SI:HARDCOPY-HEADING-INFO:  (P.C. = 15)
   Arg 0 (STREAM): #<PRESS-STREAM 6611435>

SI:HARDCOPY-FROM-STREAM:  (P.C. = 36)
   Arg 0 (STREAM): #<INTERVAL-STREAM 6605300>
   Arg 1 (DEVICE): #<PRINTER TREMONT-VIA-MC 57400231>
   Rest arg (OPTIONS): (:BANNER-FILE-NAME "NDESCRIPTION.LISP PS:<BAGLEY.SHAPE> OZ:")

ZWEI:COM-HARDCOPY-BUFFER:  (P.C. = 20)

ZWEI:COM-EXTENDED-COMMAND:  (P.C. = 27)

ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
   Arg 0 (COMMAND): ZWEI:COM-EXTENDED-COMMAND
   Arg 1 (CHAR): 1130
   Arg 2 (PREFIX-CHAR): NIL
   Arg 3 (HOOK-LIST): (ZWEI:DEF-LOCK-HOOK)

Rest of stack:
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 200)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 41)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
31-Jan-84 15:25:02-EST,1081;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 31 Jan 84 15:17-EST
Received: from SCRC-HARLEM by SCRC-QUABBIN with CHAOS; Tue 31-Jan-84 15:15:36-EST
Date: Tuesday, 31 January 1984, 15:17-EST
From: Joseph R Goldstone <joseph at SCRC-QUABBIN>
Subject: Has -*- ... Fonts:CPTFONT; -*- become illegal?
To: Kent M Pitman <KMP at MIT-MC>
Cc: BUG-LISPM at MIT-OZ
In-reply-to: The message of 31 Jan 84 06:47-EST from Kent M Pitman <KMP at MIT-MC>

    Date: Tuesday, 31 January 1984, 06:47-EST
    From: Kent M Pitman <KMP at MIT-MC>
    In Release 5.0 [Beta Test rev 4], FEP 13, imperial purple, on Lisp Machine Apiary-7 (3600):

    The following error is apparently due to having -*- ... Fonts:CPTFONT; -*- in the
    File Attribute list. It seems completely bogus.

242.267.  [on OZ; (load-patches)].  This should help you on Apiary-7; as for Avatar, well,
Neal was going to try and bring over an LM-2 world and patch tape today or tomorrow.

[If you want something completely bogus, get around the problem by adding a second font
in the File Attribute list.]
31-Jan-84 17:17:00-EST,3342;000000000000
Received: from MIT-ML by MIT-OZ via Chaosnet; 31 Jan 84 17:15-EST
Date: Tuesday, 31 January 1984, 17:13-EST
From: David M. Siegel <DMS at MIT-OZ>
Subject: zmail fcc problem
To: BUG-LISPM at MIT-OZ

In Release 5.0 [Beta Test rev 4], FEP 13, imperial purple, on Lisp Machine Robot-4 (3600):

I setup a default Fcc list in Zmail to be: oz:ps:<dms... and when I clicked on the Zmail Save operation,
I got the following stuff...

>>Error: Unknown property
         For OZ:PS:<DMS.MAIL>COPIES.TXT
While in the function (:METHOD FS:HOST-UNIT :COMMAND)  (:METHOD FS:FILE-DATA-STREAM-MIXIN :COMMAND)  (:METHOD FS:FILE-DATA-STREAM-MIXIN :CHANGE-PROPERTIES)

(:METHOD FS:HOST-UNIT :COMMAND):  (P.C. = 231)
   Arg 0 (SELF): #<HOST-UNIT 3024072>
   Arg 1 (SELF-MAPPING-TABLE): FS:HOST-UNIT
   Arg 2 (OPERATION): :COMMAND
   Arg 3 (MARK-P): NIL
   Arg 4 (STREAM-OR-HANDLE): #<FILE-OUTPUT-CHARACTER-STREAM "OZ:PS:<DMS.MAIL>COPIES.TXT" 5076473>
   Arg 5 (SIMPLE-P): NIL
   Arg 6 (WHOSTATE): "Change Properties"
   Rest arg (COMMANDS): NIL
   Local 8 (HANDLE): "O1773"
   Local 9 (STREAM): #<FILE-OUTPUT-CHARACTER-STREAM "OZ:PS:<DMS.MAIL>COPIES.TXT" 5076473>
   Local 10 (PKT): #<Chaos Packet 50503601>
   Local 11 (SUCCESS): NIL
   Local 12 (STRING): "O1773 ERROR UKP F Unknown property"
   Local 13 (TRANSACTION-ID): "T1895"
   Local 14 (CREATE-P): NIL
   Local 15 (CONDITION): NIL

(:METHOD FS:FILE-DATA-STREAM-MIXIN :COMMAND):  (P.C. = 14)
   Arg 0 (SELF): #<FILE-OUTPUT-CHARACTER-STREAM "OZ:PS:<DMS.MAIL>COPIES.TXT" 5076473>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:FILE-DATA-STREAM-MIXIN -- 6. IV's, 0. FL's 101260513>
   Arg 2 (OPERATION): :COMMAND
   Arg 3 (MARK-P): NIL
   Arg 4 (WHOSTATE): "Change Properties"
   Arg 5 (COM): "CHANGE-PROPERTIES
1 NIL
"
   Rest arg (STRINGS): NIL

(:METHOD FS:FILE-DATA-STREAM-MIXIN :CHANGE-PROPERTIES):  (P.C. = 63)
   Arg 0 (SELF): #<FILE-OUTPUT-CHARACTER-STREAM "OZ:PS:<DMS.MAIL>COPIES.TXT" 5076473>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:FILE-DATA-STREAM-MIXIN -- 6. IV's, 0. FL's 101260513>
   Arg 2 (OPERATION): :CHANGE-PROPERTIES
   Arg 3 (ERROR-P): :GENERATION-RETENTION-COUNT
   Rest arg (PROPERTIES): NIL

ZWEI:MAIL-BUFFER-SAVE-SETUP:  (P.C. = 326)
   Arg 0 (BUFFER): #<BABYL-BUFFER "OZ:PS:<DMS.MAIL>COPIES.TXT" 5034254>
   --Defaulted args:--
   Arg 1 (CHECK-ONLY): NIL

ZWEI:SAVE-BUFFER-INTERNAL:  (P.C. = 6)
   Arg 0 (BUFFER): #<BABYL-BUFFER "OZ:PS:<DMS.MAIL>COPIES.TXT" 5034254>
   Arg 1 (FOR-FINISH): NIL

ZWEI:SAVE-MAIL-BUFFER:  (P.C. = 77)
   Arg 0 (BUFFER): #<BABYL-BUFFER "OZ:PS:<DMS.MAIL>COPIES.TXT" 5034254>
   --Defaulted args:--
   Arg 1 (FOR-FINISH): NIL

ZWEI:EXPUNGE-AND-SAVE-SEQUENCE:  (P.C. = 11)
   Arg 0 (SEQUENCE): #<BABYL-BUFFER "OZ:PS:<DMS.MAIL>COPIES.TXT" 5034254>

ZWEI:ZMAIL-SAVE-ALL:  (P.C. = 10)

Rest of stack:
ZWEI:COM-ZMAIL-SAVE:  (P.C. = 16)
ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
ZWEI:ZMAIL-COMMAND-EXECUTE:  (P.C. = 6)
(:INTERNAL ZWEI:ZMAIL-COMMAND-LIST 0):  (P.C. = 10)
ZWEI:ZMAIL-COMMAND-LIST:  (P.C. = 12)
(:METHOD ZWEI:ZMAIL-FRAME :PROCESS-SPECIAL-COMMAND):  (P.C. = 5)
(:METHOD ZWEI:ZMAIL-FRAME :COMMAND-LOOP):  (P.C. = 141)
(:METHOD ZWEI:ZMAIL-FRAME :COMBINED :COMMAND-LOOP):  (P.C. = 43)
ZWEI:ZMAIL-PROCESS-TOP-LEVEL:  (P.C. = 52)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
31-Jan-84 23:44:33-EST,385;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 31 Jan 84 23:44-EST
Date: Tuesday, 31 January 1984, 23:38-EST
From: Tim Mcnerney <TIM at MIT-OBERON>
To: BUG-LISPM at MIT-OZ

In System 98.29, CADR 3.5, ZMail 53.9, MIT-Specific 22.0, microcode 306,
on Lisp Machine Thirty-one:

Telnet window does not change cursor size when the default font is changed
with TV:SET-DEFAULT-FONT.
 1-Feb-84 01:20:47-EST,983;000000000000
Received: from MIT-XX by MIT-OZ via Chaosnet; 1 Feb 84 01:20-EST
Date: Wednesday, 1 February 1984, 01:18-EST
From: Tim Mcnerney <TIM at MIT-OBERON>
To: BUG-LISPM at MIT-OZ

In Don't-dump-a-band! Inconsistent (unreleased patches loaded) System 98.32,
CADR 3.6, ZMail 53.9, MIT-Specific 22.0, microcode 306,
on Lisp Machine Thirty-two:


Insert your description of the circumstances here:

This happens often enough upon loading a file, that it should be
handled in a more friendly manner.  It should query the user,
and at least give him the option of creating the package or
loading the file into another package.

>>ERROR: Package STEVE does not exist.
Backtrace from the debugger:

PKG-FIND-PACKAGE (P.C. = 137)

 Arg 0 (THING): :STEVE
 Arg 1 (CREATE-P): :ERROR
   --Defaulted args:--
 Arg 2 (USE-LOCAL-NAMES-PACKAGE): NIL
Local 0: NIL
Local 1 (NEW-NAME): NIL
Local 2 (STRING1): NIL


Additional information supplied with call:
 Expecting 2 values
 1-Feb-84 05:03:54-EST,1455;000000000000
Received: from MIT-ML by MIT-OZ via Chaosnet; 1 Feb 84 05:03-EST
Date: Wednesday, 1 February 1984, 05:01-EST
From: Kent M Pitman <KMP at MIT-MC>
Subject: Indentation of UNWIND-PROTECT and IF in ZWEI
To: BUG-LISPM at MIT-OZ

In Symbolics Release 4.5 and 5.0.4 ...

I do not like ZWEI's indentation style for UNWIND-PROTECT ...

  Currently it is:		I prefer:

  (unwind-protect (x)		(unwind-protect (x)
		  (y)		    (y)
		  (z))		    (z))

Or something like that. The name UNWIND-PROTECT is very long
and it's a pain to have everything so far indented. Also, there
is an important distinction between the first form and the rest
which it helps to syntactically identify.

I also do not like the indentation for IF. I would prefer
if it also had backup-style indentation ...

  Currently it is:		I prefer:

  (if x				(if x
      y				    y
      z)			  z)

This is particularly important in the case of lots of parens.
Looking at:

  (if (f (g (x))) (h (y x))
      (z x))

it is hard to tell if the (z x) is part of the consequent or
the alternative. If the convention were:

  (if (f (g (x))) (h (y x))
    (z x))

it would be more clear. ie, typing tab on the second line would 
immediately confirm that you had passed the consequent.
Distinguish this from:

  (if (f (g (x)) (h (y x)))
      (z x))

which would then be immediately recognizable as something with
a consequent but no alternative.
-kmp
 1-Feb-84 10:58:18-EST,3102;000000000000
Received: from MIT-ROBOT-4 by MIT-OZ via Chaosnet; 1 Feb 84 10:57-EST
Date: Wednesday, 1 February 1984, 10:55-EST
From: David M. Siegel <DMS at MIT-OZ>
Subject: zmail profile problem
To: BUG-LISPM at MIT-OZ

In Release 5.0 [Beta Test rev 4], FEP 13, imperial purple, on Lisp Machine Robot-4 (3600):

When in the Zmail profile editor, and I click on Save and then Exit, this stuff comes up...

>>Error: The object #<ZMAIL-PROFILE-FRAME Zmail Profile Frame 1 32645147 exposed> received a :SET-ACCENT message, which went unclaimed.
         The rest of the message was (T)
While in the function (:INTERNAL ZMAIL-PROFILE-COMMAND-LIST 1)  ZMAIL-PROFILE-COMMAND-LIST  (:METHOD ZMAIL-PROFILE-EDITOR :PROCESS-SPECIAL-COMMAND)

(:INTERNAL ZMAIL-PROFILE-COMMAND-LIST 1):  (P.C. = 11)
   Arg 0 (**DEFSELECT-OP**): :MOUSE-BUTTON
   Arg 1 (CH): 100000
   Arg 2 (WINDOW): #<ZMAIL-PROFILE-FRAME Zmail Profile Frame 1 32645147 exposed>
   Arg 3 (IGNORE): 241
   Arg 4 (IGNORE): 433
   Local 5 (WINDOW-NAME): NIL
   Local 6 (NEAR-MODE): NIL

ZMAIL-PROFILE-COMMAND-LIST:  (P.C. = 22)
   Arg 0 (OPERATION): :MOUSE-BUTTON
   Rest arg (SELECT-METHOD-ARGS): (100000 #<ZMAIL-PROFILE-FRAME Zmail Profile Frame 1 32645147 exposed> 241 433)

(:METHOD ZMAIL-PROFILE-EDITOR :PROCESS-SPECIAL-COMMAND):  (P.C. = 5)
   Arg 0 (SELF): #<ZMAIL-PROFILE-EDITOR 73336061>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZMAIL-PROFILE-EDITOR -- 6. IV's, 3. FL's 107234241>
   Arg 2 (OPERATION): :PROCESS-SPECIAL-COMMAND
   Rest arg (ARGS): (:MOUSE-BUTTON 100000 #<ZMAIL-PROFILE-FRAME Zmail Profile Frame 1 32645147 exposed> 241 433)

(:METHOD ZMAIL-COMMAND-LOOP-MIXIN :COMMAND-LOOP):  (P.C. = 134)
   Arg 0 (SELF): #<ZMAIL-PROFILE-EDITOR 73336061>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZMAIL-COMMAND-LOOP-MIXIN -- 10. IV's, 1. FL's 107233560>
   Arg 2 (OPERATION): :COMMAND-LOOP

(:METHOD ZMAIL-PROFILE-EDITOR :COMBINED :COMMAND-LOOP):  (P.C. = 44)
   Arg 0 (SELF): #<ZMAIL-PROFILE-EDITOR 73336061>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZMAIL-PROFILE-EDITOR -- 6. IV's, 3. FL's 107234241>
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

(:METHOD ZMAIL-PROFILE-EDITOR :EDIT-PROFILE):  (P.C. = 17)
   Arg 0 (SELF): #<ZMAIL-PROFILE-EDITOR 73336061>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZMAIL-PROFILE-EDITOR -- 6. IV's, 3. FL's 107234241>
   Arg 2 (OPERATION): :EDIT-PROFILE

(:DEFUN-METHOD COM-ZMAIL-PROFILE):  (P.C. = 34)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 32640161 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZMAIL-COMMAND-LOOP-MIXIN -- 10. IV's, 1. FL's 107062477>

COM-ZMAIL-PROFILE:  (P.C. = 12)
   Rest arg (ARGS): NIL

Rest of stack:
COMMAND-EXECUTE:  (P.C. = 55)
ZMAIL-COMMAND-EXECUTE:  (P.C. = 6)
(:INTERNAL ZMAIL-COMMAND-LIST 0):  (P.C. = 10)
ZMAIL-COMMAND-LIST:  (P.C. = 12)
(:METHOD ZMAIL-FRAME :PROCESS-SPECIAL-COMMAND):  (P.C. = 5)
(:METHOD ZMAIL-FRAME :COMMAND-LOOP):  (P.C. = 141)
(:METHOD ZMAIL-FRAME :COMBINED :COMMAND-LOOP):  (P.C. = 43)
ZMAIL-PROCESS-TOP-LEVEL:  (P.C. = 52)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
 1-Feb-84 11:28:30-EST,1448;000000000000
Received: from SCRC-TENEX by MIT-OZ via Chaosnet; 1 Feb 84 11:26-EST
Received: from SCRC-CUYAHOGA by SCRC-TENEX with CHAOS; Wed 1-Feb-84 11:02:27-EST
Date: Wednesday, 1 February 1984, 11:02-EST
From: Robert A. Cassels <Cassels at SCRC-TENEX>
Subject: Indentation of UNWIND-PROTECT and IF in ZWEI
To: KMP at MIT-MC, BUG-LISPM at MIT-OZ
In-reply-to: The message of 1 Feb 84 05:01-EST from Kent M Pitman <KMP at MIT-MC>

    Date: Wednesday, 1 February 1984, 05:01-EST
    From: Kent M Pitman <KMP at MIT-MC>

    In Symbolics Release 4.5 and 5.0.4 ...

    I do not like ZWEI's indentation style for UNWIND-PROTECT ...

      Currently it is:		I prefer:

      (unwind-protect (x)		(unwind-protect (x)
		      (y)		    (y)
		      (z))		    (z))

    ...

    I also do not like the indentation for IF. I would prefer
    if it also had backup-style indentation ...

      Currently it is:		I prefer:

      (if x				(if x
	  y				    y
	  z)				  z)

I don't understand how this works, since I stole it from someone else,
but it works:

(ZWEI:)
;;; Since this particular indentation seems to alternate quite irritatingly.
(defmacro defindentation (form)
  `(setq *lisp-indent-offset-alist*
	 (cons ',form
	       (delq (assq ',(car form) *lisp-indent-offset-alist*)
		     *lisp-indent-offset-alist*))))

(defindentation (if 2 1))

There's probably a way to make it do what you want for UNWIND-PROTECT.
 1-Feb-84 17:19:32-EST,322;000000000000
Mail-From: RMS created at  1-Feb-84 17:14:42
Date: Wed 1 Feb 84 17:14:42-EST
From: RMS@MIT-OZ
Subject: Re: Indentation of UNWIND-PROTECT and IF in ZWEI
To: KMP@MIT-MC
cc: bug-lispm@MIT-OZ
In-Reply-To: Message from "Kent M Pitman <KMP at MIT-MC>" of Wed 1 Feb 84 05:03:43-EST

Fixed in systems 97 and 91.
-------
 2-Feb-84 08:31:53-EST,1419;000000000000
Received: from MIT-LISPM-1 by MIT-OZ via Chaosnet; 2 Feb 84 08:31-EST
Date: Thursday, 2 February 1984, 08:32-EST
From: Kim A. Barrett <kab at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In Don't-dump-a-band! Inconsistent (unreleased patches loaded) System 98.32,
CADR 3.6, ZMail 53.10, MIT-Specific 22.0, microcode 306,
on Lisp Machine One:

ARRAY-DIMENSION on a dimension value which is outside the range [0,(1- array-rank)] causes an
error rather than returning nil, as stated in the LispM manual.  Is this a change for Common
Lisp? (the CLM doesn't specify a return value for this case).

;Reading at top level in Lisp Listener 1.
;Now using traditional syntax and semantics and base 10 in package USER.

(array-dimension a* 2)
>>TRAP 4666. (BAD-ARRAY-DIMENSION-NUMBER M-A M-C XARRAY-DIMENSION-1)
The dimension number 2. is out of range for #<ART-Q-2.-2. 14243237>.
While in the function ARRAY-DIMENSION  SI:EVAL1  SI:EVAL-ABORT-TRIVIAL-ERRORS

ARRAY-DIMENSION:
   Arg 0 (ARRAY): 1028.
   Arg 1 (DIMENSION): 16.

Using traditional syntax and semantics and base 10 in package USER.

Commands available for this particular error:

s-A, :  Return to top level in Lisp Listener 1.
s-B:         Return to top level in Lisp Listener 1.
s-C:         Restart process Initial Process.
s-D:         Reset and arrest process Initial Process.
 
;Back to top level in Lisp Listener 1.
(dribble-end)
 2-Feb-84 10:17:13-EST,1057;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 2 Feb 84 10:16-EST
Date: 2 February 1984 10:18 EST
From: Kent M Pitman <KMP @ MIT-MC>
Subject:  Indentation of UNWIND-PROTECT and IF in ZWEI
To: Cassels @ SCRC-TENEX
cc: BUG-LISPM @ MIT-OZ
References: Msg of 1 Feb 84 05:01-EST from Kent M Pitman <KMP at MIT-MC>
In-reply-to: Msg of Wed 1 Feb 84 11:02 EST from Robert A. Cassels <Cassels%SCRC-TENEX at MIT-MC.ARPA>

    Date: Wed, 1 Feb 84 11:02 EST
    From: Robert A. Cassels <Cassels%SCRC-TENEX at MIT-MC.ARPA>

    I don't understand how this works, since I stole it from someone else,
    but it works: ...

Someone told me the format of this info varies from Release 4 to Release 5.

In any case, while I appreciate the info, I wasn't meaning it was the sort
of thing I couldn't track down on my own. I rather meant to propose a change
to the system default indentation style.

By the way, I'm pretty sure the LMIT system has had the indentation styles
I propose for some time now. So these gripes apply only to Symbolics 
systems.
 2-Feb-84 15:06:22-EST,4140;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 2 Feb 84 15:05-EST
Date: Thursday, 2 February 1984, 14:57-EST
From: Richard Mark Soley <Soley at MIT-MC>
Subject: ITS logical host problem
To: BUG-LISPM at MIT-OZ
Cc: soley at MIT-MC

In Release 5.0 [Beta Test rev 4], FEP 18, Purple MEF, on MFE Orfeo (3600):
(Version 242.266).

Trying (load "Soley:Utilities;Patch.Bin") got error after line of stars.
Notes:

(1) Output of (send logical-host-soley :translations) =>
((#<LOGICAL-PATHNAME "Soley: UTILITIES; *.*.*"> #<ITS-PATHNAME "MC: VICTRA; * *">)
 (#<LOGICAL-PATHNAME "Soley: CWH; *.*.*"> #<ITS-PATHNAME "MC: CWH2; * *">))

(2) (send (fs:parse-pathname "soley:utilities;patch.lisp") :translated-pathname) =>
#<ITS-PATHNAME "MC: VICTRA; PATCH"> !!!!!

****************************************

>>Error: NO SUCH DEVICE
         For Soley: UTILITIES; PATCH.BIN.NEWEST
While in the function (:METHOD FS:HOST-UNIT :COMMAND)  FS:OPEN-CHAOS  (:METHOD FS:QFILE-ACCESS-PATH :OPEN)

(:METHOD FS:HOST-UNIT :COMMAND):  (P.C. = 231)
   Arg 0 (SELF): #<HOST-UNIT 3714151>
   Arg 1 (SELF-MAPPING-TABLE): FS:HOST-UNIT
   Arg 2 (OPERATION): :COMMAND
   Arg 3 (MARK-P): NIL
   Arg 4 (STREAM-OR-HANDLE): (:CREATE "I1834")
   Arg 5 (SIMPLE-P): NIL
   Arg 6 (WHOSTATE): "Open"
   Rest arg (COMMANDS): ("OPEN " :READ " " :DEFAULT "" "" "" "" "" "" ...)
   Local 8 (HANDLE): "I1834"
   Local 9 (STREAM): NIL
   Local 10 (PKT): #<Chaos Packet 50506431>
   Local 11 (SUCCESS): NIL
   Local 12 (STRING): "I1834 ERROR DEV F NO SUCH DEVICE
"
   Local 13 (TRANSACTION-ID): "T1855"
   Local 14 (CREATE-P): T
   Local 15 (CONDITION): NIL

FS:OPEN-CHAOS:  (P.C. = 643)
   Arg 0 (ACCESS-PATH): #<ITS-QFILE-ACCESS-PATH MC using QFILE 3714140>
   Arg 1 (REAL-PATHNAME): #<ITS-PATHNAME "MC: VICTRA; PATCH BIN">
   Arg 2 (*COMMAND-PATHNAME*-initialization): #<LOGICAL-PATHNAME "Soley: UTILITIES; PATCH.BIN.NEWEST">
   Arg 3 (OPTIONS): (:DIRECTION :INPUT :CHARACTERS :DEFAULT)

(:METHOD FS:QFILE-ACCESS-PATH :OPEN):  (P.C. = 7)
   Arg 0 (SELF): #<ITS-QFILE-ACCESS-PATH MC using QFILE 3714140>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:QFILE-ACCESS-PATH -- 3. IV's, 0. FL's 101267277>
   Arg 2 (OPERATION): :OPEN
   Arg 3 (REAL-PATHNAME): #<ITS-PATHNAME "MC: VICTRA; PATCH BIN">
   Arg 4 (PATHNAME): #<LOGICAL-PATHNAME "Soley: UTILITIES; PATCH.BIN.NEWEST">
   Rest arg (OPTIONS): (:DIRECTION :INPUT :CHARACTERS :DEFAULT)

(:METHOD FS:ACTIVE-PATHNAME-MIXIN :OPEN):  (P.C. = 14)
   Arg 0 (SELF): #<ITS-PATHNAME "MC: VICTRA; PATCH BIN">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:ACTIVE-PATHNAME-MIXIN -- 1. IV's, 0. FL's 101005016>
   Arg 2 (OPERATION): :OPEN
   Arg 3 (PATHNAME): #<LOGICAL-PATHNAME "Soley: UTILITIES; PATCH.BIN.NEWEST">
   Rest arg (OPTIONS): (:DIRECTION :INPUT :CHARACTERS :DEFAULT)

(:DEFUN-METHOD FS:LOGICAL-PATHNAME-PASS-ON):  (P.C. = 7)
   Arg 0 (SELF): #<LOGICAL-PATHNAME "Soley: UTILITIES; PATCH.BIN.NEWEST">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:LOGICAL-PATHNAME -- 0. IV's, 4. FL's 101005221>
   Rest arg (REST): (:OPEN #<LOGICAL-PATHNAME "Soley: UTILITIES; PATCH.BIN.NEWEST"> :DIRECTION :INPUT :CHARACTERS :DEFAULT)

(:METHOD FS:LOGICAL-PATHNAME :OPEN):  (P.C. = 10)
   Arg 0 (SELF): #<LOGICAL-PATHNAME "Soley: UTILITIES; PATCH.BIN.NEWEST">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:LOGICAL-PATHNAME -- 0. IV's, 4. FL's 101005221>
   Arg 2 (OPERATION): :OPEN
   Rest arg (.ARGS.): (#<LOGICAL-PATHNAME "Soley: UTILITIES; PATCH.BIN.NEWEST"> :DIRECTION :INPUT :CHARACTERS :DEFAULT)

FS:COMMON-LISP-OPEN:  (P.C. = 445)
   Arg 0 (PATHNAME): #<LOGICAL-PATHNAME "Soley: UTILITIES; PATCH.BIN.NEWEST">
   Arg 1 (KEYWORD-ARGS): (:CHARACTERS :DEFAULT)

OPEN:  (P.C. = 255)
   Arg 0 (PATHNAME): #<LOGICAL-PATHNAME "Soley: UTILITIES; PATCH.BIN.NEWEST">
   Rest arg (KEYWORD-ARGS): (:CHARACTERS :DEFAULT)

Rest of stack:
FS:LOAD-OPEN:  (P.C. = 104)
LOAD:  (P.C. = 114)
SI:*EVAL:  (P.C. = 370)
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 200)
SI:LISP-COMMAND-LOOP:  (P.C. = 115)
SI:LISP-TOP-LEVEL1:  (P.C. = 22)
SI:LISP-TOP-LEVEL:  (P.C. = 7)
 2-Feb-84 16:55:41-EST,1180;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 2 Feb 84 16:48-EST
Received: from SCRC-EUPHRATES by SCRC-QUABBIN with CHAOS; Thu 2-Feb-84 16:48:23-EST
Date: Thursday, 2 February 1984, 16:50-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: Indentation of UNWIND-PROTECT and IF in ZWEI
To: Kent M Pitman <KMP at MIT-MC>
Cc: Cassels at SCRC-TENEX, BUG-LISPM at MIT-OZ
In-reply-to: The message of 2 Feb 84 10:18-EST from Kent M Pitman <KMP at MIT-MC>

    Date: 2 February 1984 10:18 EST
    From: Kent M Pitman <KMP @ MIT-MC>

	Date: Wed, 1 Feb 84 11:02 EST
	From: Robert A. Cassels <Cassels%SCRC-TENEX at MIT-MC.ARPA>

	I don't understand how this works, since I stole it from someone else,
	but it works: ...

    Someone told me the format of this info varies from Release 4 to Release 5.

    In any case, while I appreciate the info, I wasn't meaning it was the sort
    of thing I couldn't track down on my own. I rather meant to propose a change
    to the system default indentation style.

As I recall the system default indentation style for IF used to be the way you
propose, but was changed because too many people found it to be ugly.
 2-Feb-84 18:25:07-EST,1504;000000000000
Received: from SCRC-TENEX by MIT-OZ via Chaosnet; 2 Feb 84 18:24-EST
Received: from SCRC-CUYAHOGA by SCRC-TENEX with CHAOS; Thu 2-Feb-84 18:12:36-EST
Date: Thursday, 2 February 1984, 18:13-EST
From: Robert A. Cassels <Cassels at SCRC-TENEX>
Subject: Indentation of UNWIND-PROTECT and IF in ZWEI
To: KMP at MIT-MC, Cassels at SCRC-TENEX
Cc: BUG-LISPM at MIT-OZ
In-reply-to: The message of 2 Feb 84 10:18-EST from Kent M Pitman <KMP at MIT-MC>

    Date: 2 February 1984 10:18 EST
    From: Kent M Pitman <KMP @ MIT-MC>

	Date: Wed, 1 Feb 84 11:02 EST
	From: Robert A. Cassels <Cassels%SCRC-TENEX at MIT-MC.ARPA>

	I don't understand how this works, since I stole it from someone else,
	but it works: ...

    Someone told me the format of this info varies from Release 4 to Release 5.
The particular example I gave you worked for me in both releases.  I
don't know if there is more that is incompatible.

    In any case, while I appreciate the info, I wasn't meaning it was the sort
    of thing I couldn't track down on my own.
I assumed I was saving you a little time.  And maybe implying that it's
a stylistic thing which ought to be a user option.
					      I rather meant to propose a change
    to the system default indentation style.
I agree, but I know of others who don't, especially with IF.

    By the way, I'm pretty sure the LMIT system has had the indentation styles
    I propose for some time now. So these gripes apply only to Symbolics 
    systems.
 2-Feb-84 21:37:10-EST,2465;000000000000
Received: from MIT-JOE-LOUIS by MIT-OZ via Chaosnet; 2 Feb 84 21:36-EST
Date: Thursday, 2 February 1984, 21:36-EST
From: Edward H Lay <EHL at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In Release 5.0 [Beta Test rev 4], imperial purple, on Lisp Machine Joe Louis (3600):

Apparently this is due to a fonts: cptfont in the attribute list.  The only
way I can get the file to compile is to remove the fonts attribute
completely.

>>Trap: The argument given to the CDR instruction, :CPTFONT, was not a list, a locative or NIL.
While in the function COMPILER:COMPILE-FILE  ZWEI:COM-COMPILE-FILE  ZWEI:COM-EXTENDED-COMMAND

COMPILER:COMPILE-FILE:  (P.C. = 163)
   Arg 0 (INFILE): #<TOPS20-PATHNAME "OZ:SRC:<BOXER.R5>BOXSYS.LISP">
   Arg 1 (OUTFILE): NIL
   --Defaulted args:--
   Arg 2 (IN-PACKAGE): NIL
   Arg 3 (DONT-SET-DEFAULT-P): NIL
   Local 4 (PATHNAMES): NIL
   Local 5 (PATHNAME): #<TOPS20-PATHNAME "OZ:SRC:<BOXER.R5>BOXSYS.LISP">
   Local 6 (GENERIC-PATHNAME): #<TOPS20-PATHNAME "OZ:SRC:<BOXER.R5>BOXSYS">
   Local 7: #<BIND-HANDLER 76176507>
   Local 8: NIL
   Local 9 (.STREAM-ABORT-FLAG.): :ABORT
   Local 10 (INPUT-STREAM): #<FILE-INPUT-CHARACTER-STREAM "OZ:SRC:<BOXER.R5>BOXSYS.LISP" 14466304>
   Local 11: SYS:UNWIND-PROTECT-TAG
   Local 12: #<DTP-ODD-PC 46371055>
   Local 13: #<DTP-LOCATIVE 73431351>
   Local 14: #<DTP-LOCATIVE 26500133>
   Local 15: :CPTFONT
   Local 16 (IGNORE): #<DTP-ODD-PC 46371021>
   Local 17 (NEW-PATHNAME): NIL

ZWEI:COM-COMPILE-FILE:  (P.C. = 55)

ZWEI:COM-EXTENDED-COMMAND:  (P.C. = 27)

ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
   Arg 0 (COMMAND): ZWEI:COM-EXTENDED-COMMAND
   Arg 1 (CHAR): 600.
   Arg 2 (PREFIX-CHAR): NIL
   Arg 3 (HOOK-LIST): (ZWEI:SHIFT-LOCK-HOOK)

ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
   Arg 0 (CH): 600.

(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 200)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 75712030>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:EDITOR -- 11. IV's, 0. FL's 102171603>
   Arg 2 (OPERATION): :EDIT
   --Defaulted args:--
   Arg 3 (TOP-LEVEL-P): T
   Arg 4 (DESCRIPTION): NIL

(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 41)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 75712030>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:TOP-LEVEL-EDITOR -- 12. IV's, 1. FL's 102171615>
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)

Rest of stack:
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
 2-Feb-84 23:38:36-EST,1245;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 2 Feb 84 23:38-EST
Received: from SCRC-HARLEM by SCRC-QUABBIN with CHAOS; Thu 2-Feb-84 23:37:19-EST
Date: Thursday, 2 February 1984, 23:38-EST
From: Joseph R Goldstone <joseph at SCRC-QUABBIN>
Subject: compiler blows out if single font specified in file attribute list
To: Edward H Lay <EHL at MIT-OZ>
Cc: BUG-LISPM at MIT-OZ
In-reply-to: The message of 2 Feb 84 21:36-EST from Edward H Lay <EHL at MIT-OZ>

    Date: Thursday, 2 February 1984, 21:36-EST
    From: Edward H Lay <EHL at MIT-OZ>
    In Release 5.0 [Beta Test rev 4], imperial purple, on Lisp Machine Joe Louis (3600):

    Apparently this is due to a fonts: cptfont in the attribute list.  The only
    way I can get the file to compile is to remove the fonts attribute
    completely.

    >>Trap: The argument given to the CDR instruction, :CPTFONT, was not a list, a locative or NIL.
    While in the function COMPILER:COMPILE-FILE  ZWEI:COM-COMPILE-FILE  ZWEI:COM-EXTENDED-COMMAND

try putting a (load-patches) in your init file.  it [the bug, not your init file] will go away.

(patched in development 243.363 12/6/83,
 moved to released system 242.267 1/27/84,
 copied to OZ patch dirs 1/27/84)
 3-Feb-84 00:36:03-EST,1749;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 3 Feb 84 00:35-EST
Date: 3 February 1984 00:29 EST
From: Kent M Pitman <KMP @ MIT-MC>
Subject:  Two distinct issues: IF, UNWIND-PROTECT
To: Moon @ SCRC-TENEX
cc: BUG-LISPM @ MIT-MC, KMP @ MIT-MC, Cassels @ SCRC-TENEX
In-reply-to: Msg of Thu 2 Feb 84 16:50 EST from David A. Moon <Moon%SCRC-TENEX at MIT-MC.ARPA>

    Date: Thu, 2 Feb 84 16:50 EST
    From: David A. Moon <Moon at SCRC-TENEX>

    ... As I recall the system default indentation style for IF used to 
    be the way you propose, but was changed because too many people found 
    it to be ugly.

This is a particular case in which I am of the opinion the polling
techniques were probably too crude to get a reliable answer. People
resist any sort of change; this being a change that is not "obviously"
better, my guess would be that such resistance was to some degree 
knee-jerk. I hope that some day there will be techniques for polling
people about their feelings toward various changes in conjunction with
educating them about the potential advantages such changes. It's like
scroll vs wrap in windows. People who've ever seen windows scroll think
wrap is ugly and confusing, but after a while they get used to wrap
and accept the various benefits it offers. 

Ideally, the option should exist per-application, though. Too bad
ZWEI lacks Emacs-style general purpose local modes lists, which
would let say "in this file, I want IF indented <x> way".

By the way, I hoped by putting UNWIND-PROTECT first that people would
be less inclined to ignore it. This time I'll put it last and see if 
that helps. Was there a similar concensus reached in its case? (I'll
be quite surprised if there was.)

-kmp
 3-Feb-84 00:46:14-EST,2701;000000000000
Received: from MIT-LISPM-8 by MIT-OZ via Chaosnet; 3 Feb 84 00:45-EST
Date: Friday, 3 February 1984, 00:45-EST
From: Andrew A. Berlin <AAB at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In System 98.31, CADR 3.6, ZMail 53.9, MIT-Specific 22.0, DAEDALUS 5.3,
microcode 305, Bugs to Daniel, on Lisp Machine Eight:


Insert your description of the circumstances here:

After the previous error, it drew a box around a random area on the screen, and tried
to convince me that this was really where my instance was.  Refreshing the screen
produced this error.

>>TRAP 9690 (BITBLT-ARRAY-FRACTIONAL-WORD-WIDTH M-A)
An array passed to BITBLT has an invalid width.
The width, times the number of bits per pixel, must be a multiple of 32.
Backtrace from the debugger:

(:METHOD VIEW :BITBLT) (P.C. = 124)
  (SELF is #<VIEW COLOR-VIEW 2227053 exposed>)

 Arg 0 (OPERATION): :BITBLT
 Arg 1 (ALU): 5
 Arg 2 (W): 574
 Arg 3 (H): 392
 Arg 4 (SOURCE-ARRAY): #<ART-4B-56-7 36357237>
 Arg 5 (SX): 0
 Arg 6 (SY): 0
 Arg 7 (DX): 0
 Arg 8 (DY): 0


(:METHOD VIEW :DRAW-GRID) (P.C. = 316)
  (SELF is #<VIEW COLOR-VIEW 2227053 exposed>)

 Arg 0 (OPERATION): :DRAW-GRID
Local 0 (X-OFF): 0
Local 1 (Y-OFF): 0
Local 2 (TYPE): :COLOR
Local 3 (APERTURE?): NIL
Local 4 (FIRST-X-TEN): 14
Local 5 (FIRST-Y-TEN): 7
Local 6 (LINE-LENGTH): 70
Local 7 (CLIP-SWITCH): INCLUDED
Local 8 (W-MINX): 0
Local 9 (W-MINY): 0
Local 10 (W-MAXX): 574
Local 11 (W-MAXY): 392


VIEW-REFRESH (P.C. = 24)

 Arg 0 (VIEW): #<VIEW COLOR-VIEW 2227053 exposed>


BUFFER-REDISPLAY (P.C. = 456)

 Arg 0 (BUFFER): #<Buffer THE-CHIP 6913106>
 Arg 1 (ADD-ONLY): NIL
   --Defaulted args:--
 Arg 2 (INSTANCE-LIST): ((INSTANCE ** ** NIL))
 Arg 3 (DISPLAY-VIEW-LIST): (#<VIEW COLOR-VIEW 2227053 exposed>)
Local 0 (AP-MINX): -37777777
Local 1 (AP-MINY): -37777777
Local 2 (AP-MAXX): 37777777
Local 3 (AP-MAXY): 37777777
Local 4 (CONDITIONALIZE?): NIL
Local 5: (#<SELECTION-BLINKER 2644711> #<FRACTURE-BLINKER 2645012> #<ROLE-NAME-BLINKER 2645024> #<MARKER 2645036>)
Local 6: NIL
Local 7 (V): #<VIEW COLOR-VIEW 2227053 exposed>
Local 8: (#<VIEW COLOR-VIEW 2227053 exposed>)
Local 9 (BLINKER): #<SELECTION-BLINKER 2644711>
Local 10 (MAP-RESULT): (#<VIEW COLOR-VIEW 2227053 exposed>)
Local 11 (DEPTH): NIL
Local 12 (MINIMUM-FEATURE-SIZE): 1
Local 13 (CLIP-ENABLE): NIL
Local 14 (I): NIL
Local 15 (CONDITION): NIL
Local 16: NIL
Local 17: NIL


(:PROPERTY REFRESH DRAW) (P.C. = 27)



Remainder of stack:

PROCESS-TOP-LEVEL-MENU-INPUT (P.C. = 104)
DO-IT-LOOP (P.C. = 352)
INTERNAL-DAED-STARTUP (P.C. = 246)
SI:PROCESS-RUN-FUNCTION-INTERNAL (P.C. = 100)
SI:PROCESS-TOP-LEVEL (P.C. = 246)
 3-Feb-84 00:58:24-EST,2452;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 3 Feb 84 00:57-EST
Date: 3 February 1984 00:58 EST
From: Kent M Pitman <KMP @ MIT-MC>
Subject:  Indentation as a user option
To: Cassels @ SCRC-TENEX
cc: BUG-LISPM @ MIT-MC, KMP @ MIT-MC
In-reply-to: Msg of Thu 2 Feb 84 18:13 EST from Robert A. Cassels <Cassels%SCRC-TENEX at MIT-MC.ARPA>

    Date: Thu, 2 Feb 84 18:13 EST
    From: Robert A. Cassels <Cassels%SCRC-TENEX at MIT-MC.ARPA>
    Re:   Indentation of UNWIND-PROTECT and IF in ZWEI

    ... And maybe implying that it's a stylistic thing which 
    ought to be a user option ...

This made me think of something interesting: Forgetting now the
earlier discussion of particular indentations, it's an interesting 
feature of Emacs that there are "classes" or "groups" of variables
which Emacs looks for in different contexts...

If, for example, I make a variable named something like Lisp WITH-SOMETHING
Indent and bind it to 1, then Emacs will indent the form as if the body
began after the first form. The way it does that is by doing what in Lisp
corresponds roughly to

  (LET ((SYM (INTERN-SOFT (FORMAT NIL "*LISP-~A-INDENT*" name))))
    (IF (AND SYM (BOUNDP SYM)) (SYMEVAL SYM) default))

This doesn't fit gracefully in with the existing schemes for user 
options. It is a piece of useful functionality that I think was 
more-or-less lost with the move from Teco to Lisp; and one it would
do well to re-introduce in some fashion. About the best you can do
is have a dignified variable called *LISP-INDENTATIONS* which is
perhaps an alist ((name val) (name val) ...).

The misfeature of this, though, is that there are no facilities for
manipulating changes to parts of such a list without just treating it
as data and writing programs (something which is sort of counter to 
the way options have thus far been treated).

In Rel 5, TV:EDIT-NAMESPACE-OBJECT starts to address some of these 
issues, but to my knowledge its tools for manipulating pairs, sets,
triples, etc are special purpose and not accessible to other programs.
Also, its interface is to me relatively painful (visually cluttered
and manually clumsy to use). But the interface notwithstanding, it's a
start and at least thinks about the right issues.

Anyway, someone should probably give more thought to the idea of 
unifying option sets such as those for indentation style, word 
abbrevs, etc under a common abstraction.
 3-Feb-84 01:20:59-EST,351;000000000000
Mail-From: AAB created at  3-Feb-84 01:20:39
Date: Fri 3 Feb 84 01:20:39-EST
From: Andrew A. Berlin <AAB@MIT-OZ>
Subject: Previous bug message from cadr8 about daedalus
To: bug-lispm@MIT-OZ


This was intended to go only to Daniel.  My best guess is that it
went to BUG-LISPM, since it didn't go to daniel.

Sorry about that.

Andy
-------
 3-Feb-84 14:45:55-EST,941;000000000000
Received: from MIT-XX by MIT-OZ via Chaosnet; 3 Feb 84 14:45-EST
Date: Friday, 3 February 1984, 12:09-EST
From: dove at MIT-TWEETY-PIE
Subject: rtape can't read remote backups
To: BUG-LISPM at MIT-OZ

In System 242.269, FEP 15, [util rtape-patch], on Lisp Machine Tweety Pie (3600):

I patched rtape as per the letter we received.  We still get garbage
records as the last thing read from tapes created to a remote reel to
reel on a unix system.  No errors are reported when writing the tape.
Fortunately, because it is the last thing, we can still read the tapes.

This also occurs on 4.5, but did not occur before 4.5.

This may be a world-load problem or a problem in the interaction of
newer tape software with the unix RTAPE server.  Given that it used to
work with 4.4, perhaps someone can recognize what new tape operation is
being reqested at the end of tapes (perhaps reading, perhaps writing)
with 4.5 and 5.0.
 3-Feb-84 14:52:44-EST,587;000000000000
Received: from MIT-XX by MIT-OZ via Chaosnet; 3 Feb 84 14:50-EST
Date: Friday, 3 February 1984, 12:15-EST
From: dove at MIT-TWEETY-PIE
Subject: incorrect time from the net
To: BUG-LISPM at MIT-OZ

In System 242.269, FEP 15, [util rtape-patch], on Lisp Machine Tweety Pie (3600):

Several times today we have booted with the incorrect time.  Would it be possible
to assign some site with a crystal clock as a time server?  If not, would it be
possible for the world-load to achieve a consensus on the time rather than taking
the first time response that comes across the net?
 3-Feb-84 15:13:38-EST,1075;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 3 Feb 84 15:12-EST
Received: from SCRC-CHARLES by SCRC-QUABBIN with CHAOS; Fri 3-Feb-84 15:09:23-EST
Date: Friday, 3 February 1984, 15:09-EST
From: David C. Plummer <DCP at SCRC-QUABBIN>
Subject: incorrect time from the net
To: dove at MIT-TWEETY-PIE, BUG-LISPM at MIT-OZ
In-reply-to: The message of 3 Feb 84 12:15-EST from dove at MIT-TWEETY-PIE

    Date: Friday, 3 February 1984, 12:15-EST
    From: dove at MIT-TWEETY-PIE
    In System 242.269, FEP 15, [util rtape-patch], on Lisp Machine Tweety Pie (3600):

    Several times today we have booted with the incorrect time.  Would
    it be possible to assign some site with a crystal clock as a time
    server?
That's not the problem.
    If not, would it be possible for the world-load to achieve a
    consensus on the time rather than taking the first time response
    that comes across the net?
This is waiting for me to find enough time to figure out how to do it
without breaking everything.  (I tried naively once, and broke
everything.)
 3-Feb-84 15:29:49-EST,680;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 3 Feb 84 15:29-EST
Date: 3 Feb 1984  15:29 EST (Fri)
Message-ID: <SR.EHPYC.11988855427.BABYL@MIT-SPEECH>
From: Scott Cyphers <SR.EHPYC@MIT-SPEECH>
To:   dove@MIT-TWEETY-PIE
Cc:   BUG-LISPM@MIT-OZ
Subject: incorrect time from the net
In-reply-to: Msg of 3 Feb 1984 12:15-EST from dove at MIT-TWEETY-PIE

The bad times came from CBGVAX and DEGAS.  I took the TIME service out
of them in tv:edit-namespace-object, last night, but I don't know if
this is the right way to solve this problem.  I think a world save has
to happen before the new information can get used for getting time.
JTW claims Vaxen can't keep time.
 3-Feb-84 20:57:26-EST,668;000000000000
Received: from MIT-EECS by MIT-OZ via Chaosnet; 3 Feb 84 20:56-EST
Date: Friday, 3 February 1984, 20:42-EST
From: Barry Margolin <Margolin at MIT-MULTICS>
Sender: Margolin at MIT-MULTICS
Subject: copying file attributes
To: BUG-LISPM at MIT-OZ

In System 242.269, FEP 18, imperial purple, on Lisp Machine Keith Moon (3600):

I used Copy File to copy a file on EECS.  I got a warning about not
being able to copy the author because I'm not an operator or wheel.  It
would be nice if it checked and noticed that the author information that
it was trying to copy was the information that got put there by default,
so it needn't bother me about the problem.
 4-Feb-84 00:11:58-EST,678;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 4 Feb 84 00:11-EST
Received: from SCRC-EUPHRATES by SCRC-QUABBIN with CHAOS; Sat 4-Feb-84 00:09:00-EST
Date: Saturday, 4 February 1984, 00:10-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: (SETF #'(:PROPERTY ...) ...)
To: KMP at MIT-OZ
Cc: BUG-LISPM at MIT-OZ, Parker at MIT-OZ
In-reply-to: The message of 25 Jan 84 01:23-EST from KMP at MIT-OZ

    Date: Wednesday, 25 January 1984, 01:23-EST
    From: KMP at OZ

    Is there some reason why SETF does not work on #'(:PROPERTY ...) forms?

By the way, this works in the Common Lisp Compatibility Package SETF.
CLCP is not yet released, but is coming.
 4-Feb-84 00:13:54-EST,1393;000000000000
Received: from SCRC-RIVERSIDE by MIT-OZ via Chaosnet; 4 Feb 84 00:13-EST
Received: from SCRC-YANGTZE by SCRC-RIVERSIDE via CHAOS with CHAOS-MAIL; Sat 4-Feb-84 00:12:24-EST
Date: Saturday, 4 February 1984, 00:11-EST
From: James E. Kulp <jek at SCRC-VIXEN>
Subject: rtape can't read remote backups
To: dove at MIT-TWEETY-PIE
cc: BUG-LISPM at MIT-OZ
In-Reply-To: The message of 3 Feb 84 12:09-EST from dove at MIT-TWEETY-PIE

    Date: Friday, 3 February 1984, 12:09-EST
    From: dove at MIT-TWEETY-PIE

    In System 242.269, FEP 15, [util rtape-patch], on Lisp Machine Tweety Pie (3600):

    I patched rtape as per the letter we received.  We still get garbage
    records as the last thing read from tapes created to a remote reel to
    reel on a unix system.  No errors are reported when writing the tape.
    Fortunately, because it is the last thing, we can still read the tapes.
This is still using PDP-11 UNIX where the tape device driver software screws you
on odd-byte-counts?
    This also occurs on 4.5, but did not occur before 4.5.

    This may be a world-load problem or a problem in the interaction of
    newer tape software with the unix RTAPE server.  Given that it used to
    work with 4.4, perhaps someone can recognize what new tape operation is
    being reqested at the end of tapes (perhaps reading, perhaps writing)
    with 4.5 and 5.0.
 4-Feb-84 04:31:41-EST,2878;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 4 Feb 84 04:31-EST
Date: Saturday, 4 February 1984, 04:28-EST
From: Kent M Pitman <kmp at MIT-MC>
Subject: SYS:%CATCH-OPEN CALL-TYPE-ILLEGAL-WITH-MULTIPLE-VALUE-LIST
To: BUG-LISPM at OZ
Cc: KBE-I-FILE at OZ

In Release 4.5, Experimental Knowledge-Based-Editor 268.0,
site configuration 81, Black Magic, on PA Lisp Machine Avatar:

  For Function EXECUTE-COMMAND
    SYS:%CATCH-OPEN CALL-TYPE-ILLEGAL-WITH-MULTIPLE-VALUE-LIST
  >>Error: A fatal error occurred while compiling EXECUTE-COMMAND
  While in the function COMPILER:LAP-P2-ADI  COMPILER:QLP2-U  COMPILER:QLAP-PASS2
  While compiling EXECUTE-COMMAND

This error occurred somewhere in compiling this:

  (defun execute-command (command &optional (command-string
					      (unparse-command command)))
    (with-db-locked
      (prog RESTORE ()
	(return
	  (error-restart (sys:error "Retry ~S" command-string)
	    (let ((startcontext (cdr *db-context*))
		  (old-*that* *that*)
		  (old-*this* *this*))
	      (with-KBE-package
		(when-abnormal-exit
		  (prog DONT-RESTORE ()
		    (return
		      (catch-error-restart
			(sys:error
			  "Terminate ~S, without restoring DB state."
			  command-string)
			(return-from RESTORE
			  (catch-error-restart
			    (sys:error
			      "Terminate ~S, restoring prior DB state."
			      command-string)
			    (return-from DONT-RESTORE
			      (eval-command command)))))))
		  (if startcontext (rdb startcontext) (db-init))
		  (setq *that* old-*that*)
		  (setq *this* old-*this*)))))))))

But after a lot of whittling away on this web of control structure, I
discovered that the following portion (resulting from the macroexpansion 
of WHEN-ABNORMAL-EXIT) was the actual problem:

  (multiple-value-list (catch-error-restart (sys:error "...")
			 ...))

The WHEN-ABNORMAL-EXIT form just does:

  (let ((<temp> t))
    (unwind-protect (values-list (prog1 (multiple-value-list ...something...)
					(setq <temp> nil)))
		    (cond (<temp> ...things to do on error...))))

I assume the compiler is concerned for my safety in having done
(MULTIPLE-VALUE-LIST {something that doesn't return multiple values})
but it should not be bothering me about this since my macro doesn't care
in this case but has to be able to handle multiple values in other 
contexts.

I could not reproduce this bug in Rel 5.0. It seems to silently ignore
the problem as well it should. I figured I'd report the bug just for the
record anyway, though.

Also, I would greatly appreciate it, though, if error messages like
    SYS:%CATCH-OPEN CALL-TYPE-ILLEGAL-WITH-MULTIPLE-VALUE-LIST
could be worded in English in future versions of the compiler. Even
if you don't know what the real error was, an English wording of
the symptom might be helpful in localizing the problem.

-kmp
 4-Feb-84 10:33:48-EST,1239;000000000000
Received: from MIT-XX by MIT-OZ via Chaosnet; 4 Feb 84 10:33-EST
Date: Saturday, 4 February 1984, 10:28-EST
From: Barry Margolin <Margolin at MIT-MULTICS>
Sender: Margolin at MIT-MULTICS
Subject: 
         multics homedir pathname
To: BUG-LISPM at MIT-OZ

In System 242.269, imperial purple, on Lisp Machine Jimi Hendrix (3600):

If I try to use MIT-Multics as my login machine I run into trouble with
the FS:USER-HOMEDIR function.  It decides that my homedir is >foo>.  The
problem is that the TCP-FTP protocol doesn't include a way to determine
the homedir.  However, supplying >foo> does not seem to be a good
alternative.  I don't recall whether the FTP protocol provides a way to
get my Personid.Projectid; if it does, then a much better guess would be
>udd>Projectid>Personid>.  If not, then I think it would be much better
to query the user or signal a proceedable error which would allow the
user to use the bogus default or supply a correct homedir.  Or at least
provide a function to set the homedir; I looked around a bit and the
easiest way I could determine to set the homedir was
    (send (send (si:parse-host "multics") :file-access-path)
	  :set-homedir (fs:parse-pathname "multics:>udd>m>barmar>))
 5-Feb-84 18:49:46-EST,2353;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 5 Feb 84 18:49-EST
Received: from SCRC-EUPHRATES by SCRC-QUABBIN with CHAOS; Sun 5-Feb-84 18:51:49-EST
Date: Sunday, 5 February 1984, 18:49-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: SYS:%CATCH-OPEN CALL-TYPE-ILLEGAL-WITH-MULTIPLE-VALUE-LIST
To: Kent M Pitman <kmp at MIT-MC>
Cc: BUG-LISPM at MIT-OZ, KBE-I-FILE at MIT-OZ
In-reply-to: The message of 4 Feb 84 04:28-EST from Kent M Pitman <kmp at MIT-MC>

    Date: Saturday, 4 February 1984, 04:28-EST
    From: Kent M Pitman <kmp at MIT-MC>

    In Release 4.5, Experimental Knowledge-Based-Editor 268.0,
    site configuration 81, Black Magic, on PA Lisp Machine Avatar:

      For Function EXECUTE-COMMAND
	SYS:%CATCH-OPEN CALL-TYPE-ILLEGAL-WITH-MULTIPLE-VALUE-LIST
      >>Error: A fatal error occurred while compiling EXECUTE-COMMAND
      While in the function COMPILER:LAP-P2-ADI  COMPILER:QLP2-U  COMPILER:QLAP-PASS2
      While compiling EXECUTE-COMMAND

    ...But after a lot of whittling away on this web of control structure, I
    discovered that the following portion (resulting from the macroexpansion 
    of WHEN-ABNORMAL-EXIT) was the actual problem:

      (multiple-value-list (catch-error-restart (sys:error "...")
			     ...))

    I assume the compiler is concerned for my safety in having done
    (MULTIPLE-VALUE-LIST {something that doesn't return multiple values})

No, the actual problem is a deficiency in the "LM-2"/"CADR" architecture.
It is simply incapable of handling this construct, due to the kludgey way
that multiple values work and the kludgey way that catches work.

    I could not reproduce this bug in Rel 5.0.
I could.  Probably you tried to reproduce it on a 3600.

    Also, I would greatly appreciate it, though, if error messages like
	SYS:%CATCH-OPEN CALL-TYPE-ILLEGAL-WITH-MULTIPLE-VALUE-LIST
    could be worded in English in future versions of the compiler. Even
    if you don't know what the real error was, an English wording of
    the symptom might be helpful in localizing the problem.

They are, in the 3600 compiler.  The "LM-2" compiler is hopeless in
this respect.

Thanks for reminding us of these deficiencies, but I don't think we're going
to do anything about them other than make sure that they don't exist in the 3600.
 5-Feb-84 23:29:18-EST,755;000000000000
Mail-From: RMS created at  5-Feb-84 23:28:30
Date: Sun 5 Feb 84 23:28:30-EST
From: RMS@MIT-OZ
Subject: Re: SYS:%CATCH-OPEN CALL-TYPE-ILLEGAL-WITH-MULTIPLE-VALUE-LIST
To: bug-lispm@MIT-OZ
In-Reply-To: Message from "David A. Moon <Moon at SCRC-TENEX>" of Sun 5 Feb 84 18:49:43-EST

   No, the actual problem is a deficiency in the "LM-2"/"CADR" architecture.
   It is simply incapable of handling this construct, due to the kludgey way
   that multiple values work and the kludgey way that catches work.

The ECO to fix these architectural problems can be installed automatically.
Simply use SET-CURRENT-BAND to select MIT system 98.  Unfortunately,
if you ever switch back to a Symbolics system, you will need to
reinstall the ECO.
-------
 6-Feb-84 03:37:17-EST,771;000000000000
Received: from SCRC-YUKON by MIT-OZ via Chaosnet; 6 Feb 84 03:36-EST
Date: Monday, 6 February 1984, 03:36-EST
From: Robert W. Kerns <RWK at SCRC-YUKON>
Reply-to: Bug-Beta-Test at MIT-OZ
Subject: Release 5 Beta Rev 4 available on LM-2's and CADR's
To: info-lispm at MIT-OZ
Message-ID: <840206033648.1.RWK@YUKON.SCRC.Symbolics>

Imperial Purple (Release 5.0 Beta Test Rev 4) is now available for the
LM-2's and CADR's on MIT-YOGI.  Patches have been loaded on OZ, but it
is highly recommended that users get the imperial purple world using
RECEIVE-BAND, and not load and save patches.

Please replace all Rev 3 worlds promptly; in a short time they will
cease to be bootable due to global namespace changes.

Please send bug-reports to Bug-Beta-Test@OZ.  
 6-Feb-84 08:21:15-EST,2243;000000000000
Received: from MIT-APIARY-5 by MIT-OZ via Chaosnet; 6 Feb 84 08:20-EST
Date: Monday, 6 February 1984, 08:19-EST
From: Gavan Duffy <GAVAN at MIT-OZ>
Subject: zmail background error.
To: BUG-LISPM at MIT-OZ

In System 242.269, Experimental RELATUS 92.20, FEP 13, imperial purple, on Lisp Machine Apiary-5 (3600):

Trying ZMAIL again, since people have taken to booting Oz without warning
whenever response is too slow, forcing me to page through my Babyl file
again.  All I did was click left on mail.

>>Trap: The first argument given to the AR-1 instruction, NIL, was not an array.
While in the function ZWEI:ZMAIL-BACKGROUND-PARSE-MSGS  ZWEI:ZMAIL-BACKGROUND-PERFORM  ZWEI:ZMAIL-BACKGROUND-LOOP-BODY

ZWEI:ZMAIL-BACKGROUND-PARSE-MSGS:  (P.C. = 70)
   Arg 0 (REQUEST): (ZWEI:ZMAIL-BACKGROUND-PARSE-MSGS #<BABYL-BUFFER "OZ:PS:<GAVAN>GAVAN.BABYL" 15267145> 240.)
   Local 1 (BUFFER): #<BABYL-BUFFER "OZ:PS:<GAVAN>GAVAN.BABYL" 15267145>
   Local 2 (START): 240.
   Local 3 (ARRAY): #<ART-Q-375. 15267725>
   Local 4 (.ME-P.): T
   Local 5 (.CLOSE-MODE.): :ABORT
   Local 6: #<DTP-LOCATIVE 73351437>
   Local 7: SYS:UNWIND-PROTECT-TAG
   Local 8: #<DTP-ODD-PC 31607524>
   Local 9: #<DTP-LOCATIVE 73351445>
   Local 10: #<DTP-LOCATIVE 43340063>
   Local 11: #<DTP-LOCATIVE 15267146>
   Local 12: T
   Local 13: SYS:UNWIND-PROTECT-TAG
   Local 14: #<DTP-ODD-PC 31607530>
   Local 15: #<DTP-LOCATIVE 73351445>
   Local 16: #<DTP-LOCATIVE 43340121>
   Local 17 (INDEX): 330.
   Local 18 (MAX): 347.
   Local 19 (COUNT): 5.
   Local 20 (MSG): NIL

ZWEI:ZMAIL-BACKGROUND-PERFORM:  (P.C. = 20)
   Arg 0 (CURRENT-REQUEST): (ZWEI:ZMAIL-BACKGROUND-PARSE-MSGS #<BABYL-BUFFER "OZ:PS:<GAVAN>GAVAN.BABYL" 15267145> 240.)

ZWEI:ZMAIL-BACKGROUND-LOOP-BODY:  (P.C. = 37)
   Arg 0 (LOCK): #<DTP-LOCATIVE 73351365>
   Arg 1 (COMMAND-BUFFER-POINTER): #<DTP-LOCATIVE 73351364>
   Arg 2 (PRELOAD-QUEUE-POINTER): #<DTP-LOCATIVE 73351366>
   Arg 3 (PRELOAD-FILE-POINTER): #<DTP-LOCATIVE 73351367>

ZWEI:ZMAIL-BACKGROUND:  (P.C. = 32)
   Arg 0 (*FOREGROUND-WINDOW*-initialization): #<ZMAIL-FRAME Main Zmail Window 32640161 deexposed>

SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
   --Defaulted args:--
   Arg 0 (IGNORE): NIL
 6-Feb-84 15:59:45-EST,432;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 6 Feb 84 15:58-EST
Date: Monday, 6 February 1984, 15:57-EST
From: Kent M Pitman <kmp at MIT-MC>
Subject: Sensitive output from m-X Compiled Changed Definitions?
To: BUG-LISPM at OZ

In Release 4.5 on PA Lisp Machine Avatar (CADR):

The output from m-X Compile Changed Definitions which says what
functions got compiled does not make the function specs mouse 
sensitive. -kmp
 6-Feb-84 16:29:29-EST,1850;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 6 Feb 84 16:28-EST
Date: Monday, 6 February 1984, 16:28-EST
From: Kent M Pitman <kmp at MIT-MC>
Subject: About mini-buffers being entered recursively...
To: BUG-LISPM at OZ

In ZWEI in Symbolics Release 4.5 on PA Lisp Machine Avatar:

I am finding myself greatly aggravated by the fact that the way
the "Mini-buffer entered recursively." is apparently detected
is to stuff the mini-buffer first, then to send it a :EDIT message
and then to find that the mini-buffer was already in use (leaving
the wrong string in the mini-buffer).

I was amused to find that this is the reason that the minibuffer
always gets emptied when I do things like 
  m-X Compile m-X
I would have guessed it was because of the "error" nature of the
m-X, but in fact it's only because the minibuffer happens to be
cleared before the second m-X detects the error. There are more
pathological cases (such as c-0 c-X Alt and mousing on a Select Buffer
thing while in a m-X minibuffer) that leave you with things like
filenames in your m-X minibuffer. 

What a sad state of affairs.

In any case, I note this is all fixed seemingly correctly in
Release 5 and in MIT System 98. I just wouldn't want whoever 
went to the trouble to fix this to think their work went
unnoticed. Thanks.

By the way, the MIT System has the nice feature that the
"Mini-buffer entered recursively" error message persists
for about 2 seconds before showing the minibuffer again.
Being given enough time to read the error message can be
quite useful from time to time. One might even consider 
having it await a character (like a typeout window) before
continuing, for very long or intricate messages. In any
case, this problem of subliminal error messages is one
that remains unsolved in Symbolics Release 5.0.4
-kmp
 6-Feb-84 16:40:04-EST,1619;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 6 Feb 84 16:39-EST
Received: from SCRC-CONCORD by SCRC-QUABBIN with CHAOS; Mon 6-Feb-84 16:41:58-EST
Date: Monday, 6 February 1984, 16:38-EST
From: Bernard S. Greenberg <BSG at SCRC-TENEX>
Subject: rtape can't read remote backups
To: jek at SCRC-VIXEN, dove at MIT-TWEETY-PIE
Cc: BUG-LISPM at MIT-OZ
In-reply-to: The message of 4 Feb 84 00:11-EST from James E. Kulp <jek at SCRC-VIXEN>

    Date: Saturday, 4 February 1984, 00:11-EST
    From: James E. Kulp <jek at SCRC-VIXEN>
	Date: Friday, 3 February 1984, 12:09-EST
	From: dove at MIT-TWEETY-PIE
	In System 242.269, FEP 15, [util rtape-patch], on Lisp Machine Tweety Pie (3600):
	I patched rtape as per the letter we received.  We still get garbage
	records as the last thing read from tapes created to a remote reel to
	reel on a unix system.  No errors are reported when writing the tape.
	Fortunately, because it is the last thing, we can still read the tapes.
    This is still using PDP-11 UNIX where the tape device driver software screws you
    on odd-byte-counts?
	This also occurs on 4.5, but did not occur before 4.5.

	This may be a world-load problem or a problem in the interaction of
	newer tape software with the unix RTAPE server.  Given that it used to
	work with 4.4, perhaps someone can recognize what new tape operation is
	being reqested at the end of tapes (perhaps reading, perhaps writing)
	with 4.5 and 5.0.
This is all very odd, for in 4.5, the dumper stopped writing non-mod-4 tapes.
Wasn't there some impropriety involving EOF writing in the Unix server?
 6-Feb-84 19:39:00-EST,6523;000000000000
Received: from MIT-AVATAR by MIT-OZ via Chaosnet; 6 Feb 84 19:38-EST
Date: Monday, 6 February 1984, 19:38-EST
From: Apprentice for KMP <KBE at MIT-OZ>
Subject: CONDITION-CASE-IF, macro definitions, the compiler, MAKE-SYSTEM
To: BUG-LISPM at MIT-OZ
Cc: KBE-I at MIT-OZ

In Release 4.5, site configuration 61, Vanilla, on PA Lisp Machine Avatar:

I have a problem with MAKE-SYSTEM that hits me every single time I compile
my code. I have spent many long hours trying to figure out what could be the
matter. The symptom is the following:

  Any time a certain file (DEFLIB) is forced to recompile in a MAKE-SYSTEM,
  compilation of subsequent files will lose in an awful way.

I am pretty sure the problem is a macro named DEFINE-CLICHE. Its definition
is as follows:

(defmacro define-cliche (name comments &body body)
  (let ((default-cons-area working-storage-area)) ;Avoid screw related to
				                  ;compiler temporary area
    (condition-case-if (not *debug*) (cond)
	(expand-define-cliche name comments body)
      (sys:error (grumble "The cliche (~A) failed to be defined." name)))))

Note that the binding of DEFAULT-CONS-AREA to WORKING-STORAGE-AREA here shouldn't
be needed, but I did it ages ago so that no one could claim the bug was due
to the compiler temporary area screw.

In fact, I did a MAPATOMS over the KBE package and assured myself that there
are no conses allocated in the compiler temporary area living on the plist of
any of my symbols.

Anyway, I just managed to c-m-Break the compiler at an interesting spot in the
compilation of SYSLIB (the file which always gets compiled right after DEFLIB)
just before the place it usually dies. It shows the following:

  >>Break: 
  While in the function APPEND  (:PROPERTY PROGN K*EXPANDER)  EXPAND-SPECIAL-FORMS
  While processing (DEFINE-CLICHE ZEROARY-FUNCTION
	             (MAIN "Dummy zero argument function cliche"
		      SUGGESTED-NAMES ((FN 2NAME))) (FN))
  
  EXPAND-DEFINE-CLICHE:  (P.C. = 73)
     Arg 0 (NAME): ZEROARY-FUNCTION
     Arg 1 (COMMENTS): (MAIN "Dummy zero argument function cliche"
			SUGGESTED-NAMES ((FN 2NAME)))
     Arg 2 (BODY): ((FN))
     Local 0 (EMPTY-DB): T
     Local 1 (SEGCASE): NIL
  
  (LAMBDA (G1913)
    (DBG:WITH-STACK-LIST*-IF G1913 (DBG:*BOUND-HANDLERS* ** DBG:*BOUND-HANDLERS*)
      (DBG:*CATCH-IF G1913 ** **))):
     Arg 0 (G1913): T
  
  (LAMBDA (DEFAULT-CONS-AREA) (CONDITION-CASE-IF (NOT *DEBUG*) (COND)
				  (EXPAND-DEFINE-CLICHE NAME COMMENTS BODY)
				(ERROR **))):
     Arg 0 (DEFAULT-CONS-AREA): 31.
  
  (LAMBDA (BODY) (LET (**) (CONDITION-CASE-IF ** ** ** **))):
     Arg 0 (BODY): ((FN))
  
  (LAMBDA (COMMENTS) ((LAMBDA ** **) (CDR **))):
     Arg 0 (COMMENTS): (MAIN "Dummy zero argument function cliche"
			SUGGESTED-NAMES ((FN 2NAME)))
  
  (LAMBDA (NAME) ((LAMBDA ** **) (CAR **))):
     Arg 0 (NAME): ZEROARY-FUNCTION
  
  DEFINE-CLICHE:
     Arg 0 (*MACROARG*): (DEFINE-CLICHE ZEROARY-FUNCTION
					(MAIN "Dummy zero argument function cliche"
					 SUGGESTED-NAMES ((FN 2NAME))) (FN))
  
  MACROEXPAND-1:  (P.C. = 153)
     Arg 0 (MACRO-CALL): (DEFINE-CLICHE ZEROARY-FUNCTION
					(MAIN "Dummy zero argument function cliche"
					      SUGGESTED-NAMES ((FN 2NAME))) (FN))
     --Defaulted args:--
     Arg 1 (IGNORE): NIL
  
  Rest of stack:
  MACROEXPAND:  (P.C. = 24)
  COMPILER:COMPILE-FROM-STREAM-1:  (P.C. = 122)
  ...etc.

Now the interesting thing to note here is that the definition of DEFINE-CLICHE
which seems to be being run is interpreted, even though the file has been compiled
and loaded.

It seems to me a real bug that you would run the interpreted version of functions
defined in a certain file after the compiled versions had been loaded. That just
slows things down to no good end. Worse, however, if we look carefully at 
the WITH-STACK-LIST, which has been abbreviated above, we see:

  (LAMBDA (G1913) 
   (DBG:WITH-STACK-LIST*-IF G1913
                            (DBG:*BOUND-HANDLERS* '(EVAL-AT-LOAD-TIME-MARKER 
                                                    DBG:FASD-INSTANCE DBG:CASE-HANDLER 
                                                    :FLAVOR-LIST (ERROR))
                                                  DBG:*BOUND-HANDLERS*)
                            (DBG:*CATCH-IF G1913
                                           (%MAKE-POINTER DTP-LOCATIVE
                                                          DBG:*BOUND-HANDLERS*)
                                           (RETURN-FROM G1911
                                                        (EXPAND-DEFINE-CLICHE NAME
                                                                              COMMENTS
                                                                              BODY)))))

Not only is it slow to execute this. It's not correct! (Note the
EVAL-AT-LOAD-TIME-MARKER in the middle of the quoted expression. I assume
that is what is going to lose.) The effect I end up seeing is that the 
compiler gets locked into an infinite loop (from which I cannot c-Abort 
or c-m-Abort) and conses stack until I am out of address space and forced 
to boot.

I suspect that in fact no "real" error happens at all during any of my code.
Probably just some non-fatal condition goes off which causes a search 
of *bound-handlers* and which finds it in improper format, triggering a
real error, followed by an avalanche of real errors.

I believe the bad effects I see are due to interactions between these things:

  (1) The known bug which I believe is fixed in later systems where 
      if you get an error while handling an error, you still see the original
      bound condition handlers contour instead of the condition handlers contour 
      for the handler.

  (2) A bug where code which contains EVAL-AT-LOAD-TIME-MARKER is allowed to
      get run interpreted at all.

  (3) A possible bug (or perhaps only a misfeature) where interpreted code is
      prefered over compiled code when both are available.

If not for bug 1, the effect I would get would not be so bad (certainly I could
have figured out what was going on a long time ago). It will be nice when I don't
have to run in a system which has that problem. But I would appreciate it if someone
could check that these other 2 bugs don't exist in later systems.

Please let me know if any of this description seems either unclear or implausible.

Thanks. -kmp
 7-Feb-84 01:18:19-EST,1899;000000000000
Received: from SCRC-RIVERSIDE by MIT-OZ via Chaosnet; 7 Feb 84 01:17-EST
Received: from SCRC-YANGTZE by SCRC-RIVERSIDE via CHAOS with CHAOS-MAIL; Tue 7-Feb-84 01:18:43-EST
Date: Tuesday, 7 February 1984, 01:23-EST
From: James E. Kulp <jek at SCRC-VIXEN>
Subject: rtape can't read remote backups
To: Bernard S. Greenberg <BSG at SCRC-TENEX>
cc: jek at SCRC-VIXEN, dove at MIT-TWEETY-PIE, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 6 Feb 84 16:38-EST from Bernard S. Greenberg <BSG at SCRC-TENEX>

    Date: Monday, 6 February 1984, 16:38-EST
    From: Bernard S. Greenberg <BSG at SCRC-TENEX>

	Date: Saturday, 4 February 1984, 00:11-EST
	From: James E. Kulp <jek at SCRC-VIXEN>
	    Date: Friday, 3 February 1984, 12:09-EST
	    From: dove at MIT-TWEETY-PIE
	    In System 242.269, FEP 15, [util rtape-patch], on Lisp Machine Tweety Pie (3600):
	    I patched rtape as per the letter we received.  We still get garbage
	    records as the last thing read from tapes created to a remote reel to
	    reel on a unix system.  No errors are reported when writing the tape.
	    Fortunately, because it is the last thing, we can still read the tapes.
	This is still using PDP-11 UNIX where the tape device driver software screws you
	on odd-byte-counts?
	    This also occurs on 4.5, but did not occur before 4.5.

	    This may be a world-load problem or a problem in the interaction of
	    newer tape software with the unix RTAPE server.  Given that it used to
	    work with 4.4, perhaps someone can recognize what new tape operation is
	    being reqested at the end of tapes (perhaps reading, perhaps writing)
	    with 4.5 and 5.0.
    This is all very odd, for in 4.5, the dumper stopped writing non-mod-4 tapes.
    Wasn't there some impropriety involving EOF writing in the Unix server?
Not that I know of.  It would be good to get such a tape to look at.
 7-Feb-84 03:12:36-EST,857;000000000000
Received: from MIT-LISPM-1 by MIT-OZ via Chaosnet; 7 Feb 84 03:12-EST
Date: Tuesday, 7 February 1984, 03:13-EST
From: Kim A. Barrett <kab at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In Don't-dump-a-band! Inconsistent (unreleased patches loaded) System 98.34,
CADR 3.6, ZMail 53.10, MIT-Specific 22.0, microcode 306,
on Lisp Machine One:

While trying to create a package (package declaration is in FS:KAB.3D-MODEL;DECLARE-PKG.LISP)

DEFPACKAGE seems to produce an oddly quoted options list for its call to MAKE-PACKAGE.  The
options alist to DEFPACKAGE is

((:USE "GLOBAL") (:SIZE 500.) (:NICKNAMES "3DM") (:PREFIX-NAME "3DM"))

and the options list it produces for MAKE-PACKAGE is

(:USE (QUOTE "GLOBAL") :SIZE (QUOTE 500.) :NICKNAMES (QUOTE "3DM") :PREFIX-NAME (QUOTE "3DM"))

This options list causes an error due to the extraneous QUOTE's.
 7-Feb-84 03:44:28-EST,3688;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 7 Feb 84 03:43-EST
Date: Tuesday, 7 February 1984, 03:44-EST
From: Tim Mcnerney <TIM at MIT-OBERON>
To: BUG-LISPM at MIT-OZ

In System 98.30, CADR 3.6, ZMail 53.9, MIT-Specific 22.0, microcode 306,
on Lisp Machine Thirty:

  From a cold-booted machine with OBI:USRD$[TIM]LISPM.INI loaded,
   into Zwei and immediately did ZWEI:COM-FIND-FILE of LISPM.INI

>>TRAP 10206 (SUBSCRIPT-OOB M-Q M-S (NIL XAREF-RECHECK-INDEX) M-A)
The subscript 11 for "lispm.ini" was out of range in AR-1.
Backtrace from the debugger:

Additional information supplied with call:
 Expecting 6 values

(:METHOD FS:VMS-PATHNAME :COMBINED :PARSE-NAMESTRING) (P.C. = 172)
  (SELF is #FS:VMS-PATHNAME "OBI:")

 Rest arg (.DAEMON-CALLER-ARGS.): (:PARSE-NAMESTRING NIL "lispm.ini" 0 ...)
Local 1 (.DAEMON-MAPPING-TABLE.): #<ART-16B-10 10724436>
Local 2 (ARGLIST): (NIL "lispm.ini" 0 11)
Local 3 (NAMESTRING): "lispm.ini"
Local 4 (DEV): NIL
Local 5 (DIR): NIL
Local 6 (NAM): "LISPM"
Local 7 (TYP): "INI"
Local 8 (VER): NIL
Local 9 (NAM-SPECIFIED-P): 5
Local 10 (TYP-SPECIFIED-P): 11


FS:PARSE-PATHNAME (P.C. = 447)

 Arg 0 (THING): "lispm.ini"
 Arg 1 (WITH-RESPECT-TO): NIL
 Arg 2 (DEFAULTS): ((#FS:VMS-CHAOS-HOST "MIT-OBERON" . #FS:VMS-PATHNAME "OBI:USRD$:[TIM]FOO.LSP") (NIL . #FS:VMS-PATHNAME "OBI:USRD$:[TIM]FOO.LSP"))
   --Defaulted args:--
 Arg 3 (START): 0
 Arg 4 (END): NIL
 Arg 5 (JUNK-ALLOWED): NIL
Local 0 (DEVICE): NIL
Local 1 (DIRECTORY): NIL
Local 2 (NAME): NIL
Local 3 (TYPE): NIL
Local 4 (VERSION): NIL
Local 5 (HOST): #FS:VMS-CHAOS-HOST "MIT-OBERON"
Local 6: NIL
Local 7 (HOST-SPECIFIED): NIL
Local 8 (START): 0
Local 9 (END): 11
Local 10 (PARSE-END): NIL
Local 11 (INDEX-OR-PATHNAME): NIL


FS:MERGE-PATHNAME-DEFAULTS (P.C. = 144)

 Arg 0 (PATHNAME): "lispm.ini"
 Arg 1 (DEFAULTS): ((#FS:VMS-CHAOS-HOST "MIT-OBERON" . #FS:VMS-PATHNAME "OBI:USRD$:[TIM]FOO.LSP") (NIL . #FS:VMS-PATHNAME "OBI:USRD$:[TIM]FOO.LSP"))
 Arg 2 (DEFAULT-TYPE): :LISP
 Arg 3 (DEFAULT-VERSION): :NEWEST
   --Defaulted args:--
 Arg 4 (ALWAYS-MERGE-TYPE): NIL
Local 0 (HOST): NIL
Local 1 (DEFAULT): NIL
Local 2 (SECONDARY-DEFAULT): NIL
Local 3 (NEW-DEVICE): NIL
Local 4 (NEW-DIRECTORY): NIL
Local 5 (NEW-NAME): NIL
Local 6 (NEW-TYPE): NIL
Local 7 (NEW-VERSION): NIL
Local 8 (NEW-OTYPE): NIL
Local 9 (WDIR): NIL
Local 10 (PDIR): NIL
Local 11 (DDIR): NIL


FS:MERGE-AND-SET-PATHNAME-DEFAULTS (P.C. = 51)

 Arg 0 (PATHNAME): "lispm.ini"
 Arg 1 (DEFAULTS): ((#FS:VMS-CHAOS-HOST "MIT-OBERON" . #FS:VMS-PATHNAME "OBI:USRD$:[TIM]FOO.LSP") (NIL . #FS:VMS-PATHNAME "OBI:USRD$:[TIM]FOO.LSP"))
 Arg 2 (DEFAULT-TYPE): :LISP
 Arg 3 (DEFAULT-VERSION): :NEWEST


ZWEI:MAKE-DEFAULTED-PATHNAME (P.C. = 102)

 Arg 0 (STRING): "lispm.ini"
 Arg 1 (DEFAULTS): ((#FS:VMS-CHAOS-HOST "MIT-OBERON" . #FS:VMS-PATHNAME "OBI:USRD$:[TIM]FOO.LSP") (NIL . #FS:VMS-PATHNAME "OBI:USRD$:[TIM]FOO.LSP"))
 Arg 2 (SPECIAL-TYPE): NIL
 Arg 3 (SPECIAL-VERSION): NIL
 Arg 4 (MERGE-IN-SPECIAL-VERSION): T
 Arg 5 (MERGE-TYPE): T


Remainder of stack:

ZWEI:READ-DEFAULTED-PATHNAME (P.C. = 71)
ZWEI:COM-FIND-FILE (P.C. = 44)
ZWEI:COMMAND-EXECUTE (P.C. = 115)
ZWEI:MAKE-EXTENDED-COMMAND-INTERNAL (P.C. = 72)
ZWEI:COMMAND-EXECUTE (P.C. = 115)
ZWEI:PROCESS-COMMAND-CHAR (P.C. = 65)
(:METHOD ZWEI:WINDOW :EDIT) (P.C. = 464)
(:INTERNAL (:METHOD ZWEI:ZMACS-WINDOW :COMBINED :EDIT) 0) (P.C. = 74)
FUNCALL (P.C. = 25)
(:METHOD ZWEI:DISPLAYER :AROUND :EDIT) (P.C. = 31)
(:METHOD ZWEI:ZMACS-WINDOW :COMBINED :EDIT) (P.C. = 47)
ZWEI:ZMACS-WINDOW-TOP-LEVEL (P.C. = 46)
SI:PROCESS-TOP-LEVEL (P.C. = 152)
 7-Feb-84 05:36:38-EST,1011;000000000000
Received: from MIT-LISPM-32 by MIT-OZ via Chaosnet; 7 Feb 84 05:36-EST
Date: Tuesday, 7 February 1984, 05:37-EST
From: Richard Mlynarik <Mly at MIT-OZ>
Subject: vms parsing braindamage
To: TIM at MIT-OBERON
CC: BUG-LISPM at MIT-OZ
In-reply-to: The message of 7 Feb 1984 03:44-EST from Tim Mcnerney <TIM at MIT-OBERON>
Message-ID: <[MIT-LISPM-32].7-Feb-84 05:37:47.Mly>

    Received: from MIT-MC by MIT-OZ via Chaosnet; 7 Feb 84 03:43-EST
    Date: Tuesday, 7 February 1984, 03:44-EST
    From: Tim Mcnerney <TIM at MIT-OBERON>

    In System 98.30, CADR 3.6, ZMail 53.9, MIT-Specific 22.0, microcode 306,
    on Lisp Machine Thirty:

      From a cold-booted machine with OBI:USRD$[TIM]LISPM.INI loaded,
       into Zwei and immediately did ZWEI:COM-FIND-FILE of LISPM.INI

    >>TRAP 10206 (SUBSCRIPT-OOB M-Q M-S (NIL XAREF-RECHECK-INDEX) M-A)
    The subscript 11 for "lispm.ini" was out of range in AR-1.
    Backtrace from the debugger:
How about making some effort to load patches?
 8-Feb-84 01:33:23-EST,773;000000000000
Received: from MIT-LISPM-30 by MIT-OZ via Chaosnet; 8 Feb 84 01:32-EST
Date: Wednesday, 8 February 1984, 01:33-EST
From: Patrick G. Sobalvarro <PGS at MIT-OZ>
Subject: LISPM
To: user-a at MIT-OZ
CC: bug-lispm-mit at MIT-OZ

Today when I did a (LOAD-AND-SAVE-PATCHES), I was asked to specify a password,
because someone has fucked over the LISPM account.  This makes me hopping mad,
because it is a case of someone's ridiculous idea of security inconveniencing
people who are trying to get work done, and it makes me even more mad that the
person who did it either didn't know what the hell they were doing, or didn't
care, and therefore didn't tell anyone about it.

I have reset LISPM's password to what it used to be.  I would like it to remain
that way.
 8-Feb-84 01:56:44-EST,384;000000000000
Received: from MIT-APIARY-4 by MIT-OZ via Chaosnet; 8 Feb 84 01:55-EST
Date: Wednesday, 8 February 1984, 01:56-EST
From: Henry Lieberman <Henry at MIT-OZ>
Subject: More on fingering? 
To: BUG-LISPM at MIT-OZ

In Release 5.0 [Beta Test rev 4], FEP 18, imperial purple, on Lisp Machine Apiary-4 (3600):

The window used by Function-1-F should have more processing turned on.

 8-Feb-84 13:35:00-EST,893;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 8 Feb 84 13:30-EST
Received: from SCRC-HARLEM by SCRC-QUABBIN with CHAOS; Wed 8-Feb-84 13:32:37-EST
Date: Wednesday, 8 February 1984, 13:29-EST
From: Joseph R Goldstone <joseph at SCRC-QUABBIN>
Subject: More on fingering? 
To: Henry Lieberman <Henry at MIT-OZ>
Cc: BUG-LISPM at MIT-OZ
In-reply-to: The message of 8 Feb 84 01:56-EST from Henry Lieberman <Henry at MIT-OZ>

    Date: Wednesday, 8 February 1984, 01:56-EST
    From: Henry Lieberman <Henry at MIT-OZ>
    In Release 5.0 [Beta Test rev 4], FEP 18, imperial purple, on Lisp Machine Apiary-4 (3600):

    The window used by Function-1-F should have more processing turned on.
Right, known problem, due to my spazz at Beta Rev 4 manufacture time.
The next delivered world won't have this problem.  Till then, turn on
global more processing manually (Function-1-M).
 8-Feb-84 17:30:36-EST,483;000000000000
Received: from MIT-JOE-LOUIS by MIT-OZ via Chaosnet; 8 Feb 84 17:30-EST
Date: Wednesday, 8 February 1984, 17:31-EST
From: Edward H Lay <EHL at MIT-OZ>
Subject: Function-1-H
To: BUG-LISPM at MIT-OZ

In System 242.269, imperial purple, on Lisp Machine Joe Louis (3600):

function-1-H doesn't seem to let you specify specific hosts anymore.
When you type it, the prompt goes up asking for host names separated by
spaces.

Then I typed OZ <space> and got a complete hostat.
 8-Feb-84 21:23:19-EST,974;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 8 Feb 84 21:22-EST
Received: from SCRC-HARLEM by SCRC-QUABBIN with CHAOS; Wed 8-Feb-84 21:24:54-EST
Date: Wednesday, 8 February 1984, 21:23-EST
From: Joseph R Goldstone <joseph at SCRC-QUABBIN>
Subject: Function-1-H
To: Edward H Lay <EHL at MIT-OZ>
Cc: BUG-LISPM at MIT-OZ
In-reply-to: The message of 8 Feb 84 17:31-EST from Edward H Lay <EHL at MIT-OZ>

    Date: Wednesday, 8 February 1984, 17:31-EST
    From: Edward H Lay <EHL at MIT-OZ>
    In System 242.269, imperial purple, on Lisp Machine Joe Louis (3600):

    function-1-H doesn't seem to let you specify specific hosts anymore.
    When you type it, the prompt goes up asking for host names separated by
    spaces.

    Then I typed OZ <space> and got a complete hostat.
Fixed by 242.271 and Winston Smith's rewrite of LMFS 37.29 [Yow!].  Will be in
the Real 5.0 and any worlds distributed to MIT in the interim.

Thanks for the report.
 9-Feb-84 17:25:15-EST,1220;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 9 Feb 84 17:18-EST
Date: Thursday, 9 February 1984, 17:00-EST
From: Kent M Pitman <kmp at MIT-MC>
Subject: Required Flavors
To: BUG-LISPM at MIT-MC

I would like a primitive for detecting if a flavor is defined
without checking its property list. Something like
 (DEFUN FLAVOR-DEFINED-P (NAME)
   (IF (GET NAME 'SI:FLAVOR) T NIL))
would be fine. There is no reason users should have to know
where this info is tucked away.

In particular, I keep writing something that looks like:
 (EVAL-WHEN (EVAL COMPILE LOAD)
   (IF (NOT (GET 'flavor-name 'SI:FLAVOR))
       (LOAD "some file")))
when I wish I could write just
 (REQUIRE-FLAVOR flavor-name "some file")
because it's such a common idiom.

It may be that the flavor level is too fine grain to want such
a facility. Maybe all I want is the Common Lisp pair of primitives
REQUIRE and PROVIDE so that I can detect the presence of whole
modules. 

If this is really the right answer, maybe REQUIRE/PROVIDE could
be introduced as an upward-compatible extension to a patch release
of Release 5? Otherwise, I assume we'll have to wait for Release 6, 
which I assume we won't be before 1985...
-kmp
10-Feb-84 03:39:37-EST,576;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 10 Feb 84 03:39-EST
Date: Friday, 10 February 1984, 03:28-EST
From: Kent M Pitman <kmp at MIT-MC>
Subject: OZ:PS:<FOO>BAR.BAZ.-1
To: BUG-LISPM at OZ

In Symbolics Release 4.5 on PA Lisp Machine Avatar (CADR):

I specified a Twenex filename with a .-1 version in the target
to m-X Copy File, and it told me that the version had to be
numeric. 

As poorly as Twenex handles the "greater than" convention, I
find it difficult to trust .0 not to supersede by accident. 

I note that .-2 parses fine. What's the story?
10-Feb-84 11:16:54-EST,542;000000000000
Received: from MIT-LISPM-31 by MIT-OZ via Chaosnet; 10 Feb 84 11:16-EST
Date: Friday, 10 February 1984, 11:14-EST
From: Tim McNerney <TIM at MIT-MC>
To: BUG-LISPM at MIT-OZ

In System 98.34, CADR 3.6, ZMail 53.10, MIT-Specific 22.0, microcode 306,
on Lisp Machine Thirty-one:


zwei:load-file-into-zmacs uses a default pathname of ps:<l.fonts>

Dear MLY,

  How did you manage this one?

In general, pathname defaulting for this function has always lost.
It uses that last file read in (by load?) and never sets the default.
11-Feb-84 00:56:34-EST,2023;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 11 Feb 84 00:56-EST
Received: from SCRC-EUPHRATES by SCRC-QUABBIN with CHAOS; Sat 11-Feb-84 00:49:13-EST
Date: Saturday, 11 February 1984, 00:48-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: OZ:PS:<FOO>BAR.BAZ.-1
To: Kent M Pitman <kmp at MIT-MC>
Cc: BUG-LISPM at MIT-OZ
In-reply-to: The message of 10 Feb 84 03:28-EST from Kent M Pitman <kmp at MIT-MC>

    Date: Friday, 10 February 1984, 03:28-EST
    From: Kent M Pitman <kmp at MIT-MC>

    In Symbolics Release 4.5 on PA Lisp Machine Avatar (CADR):

    I specified a Twenex filename with a .-1 version in the target
    to m-X Copy File, and it told me that the version had to be
    numeric. 

    As poorly as Twenex handles the "greater than" convention, I
    find it difficult to trust .0 not to supersede by accident. 

The Lisp machine and the file server are careful never to give Twenex
a pathname with an explicit zero version number.  (You may remember
the time a year or so ago when Ian broke this, not realizing the
cruftiness of Twenex.  It was put back fairly quickly.)  Superseding is
always controlled by the :IF-EXISTS :SUPERSEDE option (except that
when a version number is explicitly supplied (greater than zero) the
file server defaults to :IF-EXISTS :SUPERSEDE rather than :IF-EXISTS
:ERROR as it is supposed to, for compatibility with other user systems.)

    I note that .-2 parses fine. What's the story?
(describe (fs:parse-pathname "oz:foo.bar.-2")) will tell you what the story
is.  Also try -3.

The reason that -1 is not accepted as a version number is that there is
no concept in the Lisp Machine's generic file system model of what Twenex
uses a version of -1 to represent.  The mode of opening of a file is controlled
by the program that opens the file, not by funny syntax in the pathname, in
the Lisp machine.

The wording of the error message (from (tenex-family-pathname-mixin :parse-namestring))
could certainly be improved!
11-Feb-84 02:28:16-EST,1540;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 11 Feb 84 02:28-EST
Date: 11 February 1984 02:26 EST
From: Kent M Pitman <KMP @ MIT-MC>
Subject:  macro definitions, the compiler, MAKE-SYSTEM
To: BUG-LISPM @ MIT-MC
References:
 Msg of Mon 6 Feb 84 19:38-EST from Apprentice for KMP <KBE at MIT-OZ>

Actually, having had time to think about it more, it seems to me a complete
bug that the compiler's macro list would be maintained across file boundaries
in a MAKE-SYSTEM anyway:

If the list ever gets needed, it seems to me that it's because the 
DEFSYSTEM had the wrong file dependencies specified. If the list is
not needed but is used anyway, it sounds to me like this just means
a slow definition is gratuitously being used where a fast definition
was available.

Can someone argue otherwise? Am I just confused in believing the compiler
was running my macro interpreted? Or does it only sometimes run interpreted
macros and I just don't happen to understand when that is?

Even if this were fixed, the problem I complained about with the
CONDITION-CASE expansion could still have happened in spite of all
this if the call to the macro containing the CONDITION-CASE had been
in the same file. That bug is clearly related to having conditionalized
the macro expansion in a bogus way based on a "for-compile" vs 
"for-interpret" distinction that didn't work out right in the end.
This issue is orthogonal, but I think it is still quite an important one
since affects the speed of compilations in general.
-kmp
11-Feb-84 04:57:23-EST,1194;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 11 Feb 84 04:57-EST
Date: Saturday, 11 February 1984, 04:54-EST
From: Kent M Pitman <kmp at MIT-MC>
Subject: Names for arg2 and arg3 in bvl of TV:ADD-SYSTEM-KEY
To: BUG-LISPM at OZ

In Symbolics Release 4.5 and Release 5.0 (4) ...

(TV:ADD-SYSTEM-KEY c-sh-A says the args are (CHAR FUNCTION NAME ...)
There are several times I have needed to know the arg order and I 
have always had to do experiments to determine if these args meant

 FUNCTION - A string description of the function of the key
 NAME     - A flavor name.

or

 FUNCTION - Function/flavor information for finding the window.
 NAME     - A text description of the window the key finds.

Obviously only the second is correct, but I usually incorrectly pick
the first. (Although I now have a mnemonic that says I should do the
least obvious thing and that's working out pretty well...). The
Release 4.0 documentation says (CHAR FLAVOR NAME ...), which is much
less ambiguous. I think making the arg be called FLAVOR (consistent 
with the release notes) would be of great help to me and others
interactively in trying to remember which arg does what.
-kmp
11-Feb-84 14:53:02-EST,1329;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 11 Feb 84 14:52-EST
Date: 11 February 1984 14:51 EST
From: Kent M Pitman <KMP @ MIT-MC>
Subject: Abort closing files open for write when Twenex makes a scheduled down
To: Bug-System @ MIT-OZ
cc: BUG-LISPM @ MIT-MC, KBE-I-FILE @ MIT-OZ

If OZ goes down and I have a file open for write, I would prefer to have
the file abort-closed rather than closed normally.

It has happened twice recently that I've been doing a compilation on the
LispM and OZ has gone down for a scheduled down and I've been left with
a half-written QBIN file which the LispM later thinks is correctly
compiled until it tries to load.

I'm referring to scheduled downs, not crashes. I actually think this
should be possible to do right even if OZ crashes accidentally, but I
can see how, depending on various design decisions in the file system
and how it is salvaged after crashes, this might be difficult.

As far as I know, this problem is not related to a previous bug I
reported about a month or two ago where if the LispM crashed the file
server did not do an abort-close on the file before suiciding. That bug
no longer occurs on OZ, I think due to changes Marty made in some system
code. I don't know if the file server was ever amended to make those
changes unnecessary.
-kmp
11-Feb-84 17:45:50-EST,2102;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 11 Feb 84 17:45-EST
Date: Saturday, 11 February 1984, 17:44-EST
From: Robert Kassel <rob at MIT-OZ>
Subject: bug in hardcopy
To: BUG-LISPM at MIT-OZ

In System 242.269, FEP 13, Purple MEF, on MEF Live Oak (3600):

Doing M-X hardcopy buffer

>>Trap: The argument given to the ZEROP instruction, NIL, was not a number.
While in the function (:METHOD PRESS:PRESS-STREAM :PUT-PENDING-CHARS)  (:METHOD PRESS:PRESS-STREAM :SET-DEVICE-FONT)  (:METHOD SI:HARDCOPY-STREAM-FONT-MIXIN :CHECK-FONT)

(:METHOD PRESS:PRESS-STREAM :PUT-PENDING-CHARS):  (P.C. = 2)
   Arg 0 (SELF): #<PRESS-STREAM 13413606>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor PRESS:PRESS-STREAM -- 32. IV's, 4. FL's 14420415>
   Arg 2 (OPERATION): :PUT-PENDING-CHARS

(:METHOD PRESS:PRESS-STREAM :SET-DEVICE-FONT):  (P.C. = 4)
   Arg 0 (SELF): #<PRESS-STREAM 13413606>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor PRESS:PRESS-STREAM -- 32. IV's, 4. FL's 14420415>
   Arg 2 (OPERATION): :SET-DEVICE-FONT

(:METHOD SI:HARDCOPY-STREAM-FONT-MIXIN :CHECK-FONT):  (P.C. = 10)
   Arg 0 (SELF): #<PRESS-STREAM 13413606>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:HARDCOPY-STREAM-FONT-MIXIN -- 6. IV's, 0. FL's 14416776>
   Arg 2 (OPERATION): :CHECK-FONT

SI:HARDCOPY-HEADING-INFO:  (P.C. = 15)
   Arg 0 (STREAM): #<PRESS-STREAM 13413606>

SI:HARDCOPY-FROM-STREAM:  (P.C. = 36)
   Arg 0 (STREAM): #<INTERVAL-STREAM 13407402>
   Arg 1 (DEVICE): #<PRINTER TREMONT-VIA-MC 57400231>
   Rest arg (OPTIONS): (:BANNER-FILE-NAME "CALC.LISP SS:<ALEXIS.CALC> SPEECH:")

ZWEI:COM-HARDCOPY-BUFFER:  (P.C. = 20)

ZWEI:COM-EXTENDED-COMMAND:  (P.C. = 27)

ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
   Arg 0 (COMMAND): ZWEI:COM-EXTENDED-COMMAND
   Arg 1 (CHAR): 1130
   Arg 2 (PREFIX-CHAR): NIL
   Arg 3 (HOOK-LIST): NIL

Rest of stack:
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 200)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 41)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
11-Feb-84 18:30:29-EST,1495;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 11 Feb 84 18:30-EST
Received: from SCRC-AMAZON by SCRC-QUABBIN with CHAOS; Sat 11-Feb-84 18:23:05-EST
Date: Saturday, 11 February 1984, 18:28-EST
From: Philip Greenspun <philg at SCRC-QUABBIN>
Subject: Names for arg2 and arg3 in bvl of TV:ADD-SYSTEM-KEY
To: Kent M Pitman <kmp at MIT-MC>
Cc: BUG-LISPM at MIT-OZ
In-reply-to: The message of 11 Feb 84 04:54-EST from Kent M Pitman <kmp at MIT-MC>

    Date: Saturday, 11 February 1984, 04:54-EST
    From: Kent M Pitman <kmp at MIT-MC>

    (TV:ADD-SYSTEM-KEY c-sh-A says the args are (CHAR FUNCTION NAME ...)

    Release 4.0 documentation says (CHAR FLAVOR NAME ...), which is much
    less ambiguous. I think making the arg be called FLAVOR (consistent 
    with the release notes) would be of great help to me and others
    interactively in trying to remember which arg does what.
    -kmp

Thank you very much for the suggestion.  I have changed the arglist in
the source to be consistent with the documentation [i.e. (CHAR FLAVOR
NAME ...)].  Unfortunately, this will not reach you until Release 6,
unless you think this is important enough to patch (I don't, since naive
users will look at the documentation and people like you will look at
the source).  You might be interested to know that this function will
soon (Release 5.1) be called TV:ADD-SELECT-KEY (the LM-2 name will work,
but will evoke a compiler warning on the 3600).

Thanks again,

Philip
12-Feb-84 00:54:36-EST,777;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 12 Feb 84 00:54-EST
Date: 12 February 1984 00:50 EST
From: Kent M Pitman <KMP @ MIT-MC>
To: BUG-LISPM @ MIT-MC

TV:ADD-SYSTEM-KEY take an optional CLOBBER-P arg (default NIL) saying
whether it was to OK to blindly clobber an existing key. NIL could mean
query about keys which are assigned and have a different doc string,
T could mean clobber anything that's there, and a string could be used
to say you intended to override a particular thing if it was there and
want to be queried if you are overriding something else. All the calls
I have ever done to TV:ADD-SYSTEM-KEY end up having to put such a wrapper
around the call anyway. It seems to me like I shouldn't have to keep writing
that same code over and over.
12-Feb-84 14:49:32-EST,474;000000000000
Received: from MIT-APIARY-4 by MIT-OZ via Chaosnet; 12 Feb 84 14:47-EST
Date: Sunday, 12 February 1984, 14:51-EST
From: Kenneth M. Kahn <Ken at MIT-OZ>
Subject: floating point arithmetic
To: BUG-LISPM at MIT-OZ

In Release 5.0 [Beta Test rev 4], FEP 18, imperial purple, on Lisp Machine Apiary-4 (3600):

(setq x (sqrt 5))
(setq y (difference (plus x 2) 2))
(= x y) ;;returns NIL

Shouldn't adding 2 and then subtracting 2 return the same value?
It did in 4.5
12-Feb-84 15:03:15-EST,1090;000000000000
Received: from SCRC-RIVERSIDE by MIT-OZ via Chaosnet; 12 Feb 84 15:00-EST
Received: from SCRC-MERRIMACK by SCRC-RIVERSIDE via CHAOS with CHAOS-MAIL; Sun 12-Feb-84 15:03:22-EST
Date: Sunday, 12 February 1984, 15:04-EST
From: Charles Hornig <Hornig at SCRC-QUABBIN>
Subject: floating point arithmetic
To: Kenneth M. Kahn <Ken at MIT-OZ>, BUG-LISPM at MIT-OZ
In-reply-to: The message of 12 Feb 84 14:51-EST from Kenneth M. Kahn <Ken at MIT-OZ>
Message-ID: <840212150413.4.Hornig@QUABBIN.SCRC.Symbolics>

    Date: Sunday, 12 February 1984, 14:51-EST
    From: Kenneth M. Kahn <Ken at MIT-OZ>

    In Release 5.0 [Beta Test rev 4], FEP 18, imperial purple, on Lisp Machine Apiary-4 (3600):

    (setq x (sqrt 5))
    (setq y (difference (plus x 2) 2))
    (= x y) ;;returns NIL

    Shouldn't adding 2 and then subtracting 2 return the same value?

Not in floating point arithmetic.  Adding 2 causes the low-order bit of
x to be rounded away.  You can't expect to get back lost information.
It is almost never correct to compare two floating point numbers for
equality.
13-Feb-84 05:11:51-EST,1005;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 13 Feb 84 05:11-EST
Date: Monday, 13 February 1984, 05:12-EST
From: Kent M Pitman <kmp at MIT-MC>
Subject: Stopping the Zmacs process when a Zmacs frame is killed
To: BUG-LISPM at OZ

In Release 4.5 on PA Lisp Machine Avatar (CADR)...

If I kill a Zmacs window and the window that pops up in its place is
also a Zmacs window, it is frequently in a "Stop" state. Because of
the crock that causes that stopped process to start again, I must
de-select and select this second Zmacs window in order for it to start.
I assume this is because the :KILL message has not finished running
by the time the other window has gotten past the code to check that
is process wait function is not #'FALSE so a timing error occurs. I
am not sure that a Zmacs frame shouldn't handle a :KILL message 
specially and see to it that its process never gets stopped since it
is shared among windows. I imagine novices could find this behavior
quite confusing.
-kmp
13-Feb-84 06:33:45-EST,2088;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 13 Feb 84 06:33-EST
Date: Monday, 13 February 1984, 06:34-EST
From: Kent M Pitman <kmp at MIT-MC>
Subject: Merlin troubles
To: BUG-SYMBOLICS-HARDWARE at OZ
Cc: BUG-LISPM at OZ, Weld at OZ, Faust at OZ, Reid at OZ, Dick at OZ,
    Rich at OZ, KMP at OZ, KBE-I-FILE at OZ
References: The message of 13 Feb 84 02:47-EST from KMP at MIT-MC

In Symbolics Release 4.5 (Vanilla) on PA Lisp Machine Merlin (3600) ...

I rebooted twice and retried exactly the same sequence and Merlin died
in exactly the same way both times:

 Sequencer status: Microcode halted, CTOS-came-from-IFU,
		   TSK-STOP, Errhalt-Sync
 MC status: ADDR-IN-AMEM 0, VMA-MD-OFFSET 0, VMA-FOR-MD-0 0, IFU-EMPTY 0

The activity that seems to be causing the problem for me is a MAKE-SYSTEM
of the KBE. It's fasloading a GPRINT.BIN at the time it loses.

If this is a hardware problem, the reproducibility aspect should make
it easier to track down. Someone should find me and ask me about
it if they can't make a test case themselves.

I'm a little worried this may be software, though, so am CC'ing it
to BUG-LISPM. I moved to Sinatra with the same task, and it died in 
exactly the same place with the same error status. I am suspicious 
that this may be some sort of Rel 4 software bug. If that turns
out to be the case, we may be forced to move to Rel 5 sooner than
we had wanted to. That will be a shame because it will just introduce
dozens of extra variable factors as we try to build a fresh demo 
band to go along with the upcoming progress report.

The problems we've all been having roughly coincide with our change
from using Rel 4.3 plus patches as a base for our dumped bands to
using a direct Rel 4.5 distribution band. I don't know if that could
really have an effect, but I note it just in case.

I don't believe this is likely to be a bug in KBE software. The bug
happens very early on in trying to load a KBE and the user code it 
was running has almost certainly existed and been "field-tested"
for a long time.
-kmp
13-Feb-84 12:25:51-EST,1546;000000000000
Received: from SCRC-TENEX by MIT-OZ via Chaosnet; 13 Feb 84 12:24-EST
Date: Monday, 13 February 1984  12:13-EST
From: David C. Plummer <DCP at SCRC-TENEX>
To:   Kent M Pitman <kmp at MIT-MC>
Cc:   BUG-LISPM at OZ, BUG-SYMBOLICS-HARDWARE at OZ, Dick at OZ,
      Faust at OZ, KBE-I-FILE at OZ, KMP at OZ, Reid at OZ,
      Rich at OZ, Weld at OZ
Subject: Merlin troubles
In-reply-to: The message of 13 Feb 1984 06:34-EST from Kent M Pitman <kmp at MIT-MC>

    Date: Monday, 13 February 1984, 06:34-EST
    From: Kent M Pitman <kmp at MIT-MC>

    In Symbolics Release 4.5 (Vanilla) on PA Lisp Machine Merlin (3600) ...

    I rebooted twice and retried exactly the same sequence and Merlin died
    in exactly the same way both times:

     Sequencer status: Microcode halted, CTOS-came-from-IFU,
    		   TSK-STOP, Errhalt-Sync
     MC status: ADDR-IN-AMEM 0, VMA-MD-OFFSET 0, VMA-FOR-MD-0 0, IFU-EMPTY 0

    The activity that seems to be causing the problem for me is a MAKE-SYSTEM
    of the KBE. It's fasloading a GPRINT.BIN at the time it loses.

My guess is GPRINT was compiled in Release 5 and you are tripping
over an instruction that isn't implemented in Release 4.  (We
know your argument about differnet file types to avoid this
lossage.)  If you have a recent FEP version, Show Status will
show the OPCs and one of them will have an arrow pointing to it.
If the (octal) number is divisible by 4, then it is indeed an
unimplemented instruction.  If not, I'll make my FEP debugger
accessible from MIT.
13-Feb-84 16:09:00-EST,2213;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 13 Feb 84 16:08-EST
Received: from SCRC-EUPHRATES by SCRC-TENEX with CHAOS; Mon 13-Feb-84 16:04:15-EST
Date: Mon, 13 Feb 84 16:07 EST
From: "David A. Moon" <Moon%SCRC-TENEX@MIT-MC.ARPA>
Subject: Abort closing files open for write when Twenex makes a scheduled down
To: Kent M Pitman <KMP@MIT-MC.ARPA>, bug-twenex@MIT-XX.ARPA
Cc: Bug-System%MIT-OZ@MIT-MC.ARPA, bug-file%MIT-OZ@MIT-MC.ARPA,
    BUG-LISPM@MIT-MC.ARPA, KBE-I-FILE%MIT-OZ@MIT-MC.ARPA
In-reply-to: The message of 11 Feb 84 14:51-EST from Kent M Pitman <KMP at MIT-MC>

    Date: 11 February 1984 14:51 EST
    From: Kent M Pitman <KMP @ MIT-MC>

    If OZ goes down and I have a file open for write, I would prefer to have
    the file abort-closed rather than closed normally.

    It has happened twice recently that I've been doing a compilation on the
    LispM and OZ has gone down for a scheduled down and I've been left with
    a half-written QBIN file which the LispM later thinks is correctly
    compiled until it tries to load.

    I'm referring to scheduled downs, not crashes. I actually think this
    should be possible to do right even if OZ crashes accidentally, but I
    can see how, depending on various design decisions in the file system
    and how it is salvaged after crashes, this might be difficult.

Since the Tops-20 version of the FILE server does not voluntarily log out when
the system goes down, this must be a Tops-20 problem.  The only thing the FILE
server does about system-going-down is to periodically send notification packets
to its client announcing that the system will go down soon.

    As far as I know, this problem is not related to a previous bug I
    reported about a month or two ago where if the LispM crashed the file
    server did not do an abort-close on the file before suiciding. That bug
    no longer occurs on OZ, I think due to changes Marty made in some system
    code. I don't know if the file server was ever amended to make those
    changes unnecessary.

Marty fixed this in the FILE server, not in Tops-20 itself.  He made it do
a CLZFF with the appropriate control bits before killing itself.
13-Feb-84 20:40:03-EST,4173;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 13 Feb 84 20:38-EST
Date: Monday, 13 February 1984, 20:32-EST
From: Richard Mlynarik <Mly at MIT-OZ>
Subject: Coming (System 99) changes to FORMAT in the MIT lisp machine system.
To: info-lispm-mit at MIT-OZ


[See SYS:DOC;SYS98 MSG (oz:ps:<l.doc>sys98.msg at MIT) to see this
message in a technicolor multitude of fonts.]

The control argument to FORMAT will change in System 99 to be compatible
with Common Lisp. There will no longer be separate functions FORMAT and
CLI:FORMAT, as there are in System 98.
This change will affect the following FORMAT directives:

~X      ~width,padchar,commacharX 
                Prints its argument in hexadecimal. (Analogous to ~O, ~B and ~D)
        This command used to be used to insert spaces into the output.

        Use ~numberofspaces@T to achieve the same result as the old
                ~numberofspacesX directive.

~F      ~width,decimalplaces,scale,overflowchar,padcharF
                Prints a floating-point number in nonexponential notation.
                Multiplies by 10^scale before printing if scale is specified.
                Prints in width positions, with decimalplaces digits after the
                decimal point.  Pads on left with padchar if necessary.  If the
                number doesn't fit in width positions, and overflowchar is
                specified, this command just fills the width positions with
                that character.
        This directive used to just take one optional prefix control arg, which
                specified how many mantissa digits to print. This is the same
                as 2 + decimalplaces for the new FORMAT.

        Use ~,n+2F to achieve the same result as the old ~nF directive.

~E      ~width,decimalplaces,exponentplaces,scale,overflowchar,padchar,exptcharE
                Prints a floating-point number in exponential notation.
                Prints in width positions, with exponentplaces digits of
                exponent.
                If scale (default is 1) is positive, prints scale digits before
                point, decimalplaces - scale + 1 after.
                If scale is zero, prints decimalplaces digits after the point,
                and a zero before if there's room.
                If scale is negative, prints decimalplaces digits after the
                point, of which the first -scale are zeros.
                If exptchar is specified, it is used to delimit the exponent
                (instead of "e" or whatever.)
                If overflowchar is specified, then if the number doesn't fit in
                the specified width, or if the exponent doesn't fit in
                exponentplaces positions, the field is filled with overflowchar
                instead.
        This directive used to just take one optional prefix control arg, which
                specified how many mantissa digits to print. This is the same
                as 2+decimalplaces for the new FORMAT.

        Use ~,n+2E to achieve the same result as the old ~nE directive.

~G      ~width,decimalplaces,exponentplaces,scale,overflowchar,padchar,exptcharG 
               Like ~E, but if the number fits without an exponent, it is
               printed without one.
        This command used to be used to go to a particular argument.

        Use ~argumentnumber@T to achieve the same result as the old
               ~argumentnumberG directive.

Note: in System 98 you must use CLI:FORMAT to use the new Common Lisp style format
directives. GLOBAL:FORMAT will continue to use the old directives.
In System 99 these two functions will become identical, so the best thing is to
update your code to use CLI:FORMAT now so that it will work in both System 98
and in future systems.

Since Brand S have also announced their intention to also change the meaning of
FORMAT directives to agree with Common Lisp at some time in the future, this will
also be compatible change in that respect.

All MIT lispms have a new instruction, CLI:FORMAT
(common-lisp-incompatible-format) Please update your code.
14-Feb-84 03:03:27-EST,2316;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 14 Feb 84 03:02-EST
Date: 14 February 1984 03:04 EST
From: Kent M Pitman <KMP @ MIT-MC>
Subject:  Merlin troubles
To: DCP @ SCRC-TENEX
cc: KMP @ MIT-MC, BUG-LISPM @ MIT-OZ, BUG-SYMBOLICS-HARDWARE @ MIT-OZ,
    Dick @ MIT-OZ, Faust @ MIT-OZ, KBE-I-FILE @ MIT-OZ, Reid @ MIT-OZ,
    Rich @ MIT-OZ, Weld @ MIT-OZ, KWH @ MIT-OZ
In-reply-to: Msg of 13 Feb 1984  12:13-EST from David C. Plummer <DCP at SCRC-TENEX>

    Date: Monday, 13 February 1984  12:13-EST
    From: David C. Plummer <DCP at SCRC-TENEX>

        Date: Monday, 13 February 1984, 06:34-EST
        From: Kent M Pitman <kmp at MIT-MC>

        In Symbolics Release 4.5 (Vanilla) on PA Lisp Machine Merlin (3600) ...

        I rebooted twice and retried exactly the same sequence and Merlin died
        in exactly the same way both times:

         Sequencer status: Microcode halted, CTOS-came-from-IFU,
        		   TSK-STOP, Errhalt-Sync
         MC status: ADDR-IN-AMEM 0, VMA-MD-OFFSET 0, VMA-FOR-MD-0 0, 
		    IFU-EMPTY 0

        The activity that seems to be causing the problem for me is a 
	MAKE-SYSTEM of the KBE. It's fasloading a GPRINT.BIN at the 
	time it loses.

    My guess is GPRINT was compiled in Release 5 and you are tripping
    over an instruction that isn't implemented in Release 4.  (We
    know your argument about differnet file types to avoid this
    lossage.) If you have a recent FEP version, Show Status will
    show the OPCs and one of them will have an arrow pointing to it.
    If the (octal) number is divisible by 4, then it is indeed an
    unimplemented instruction.  If not, I'll make my FEP debugger
    accessible from MIT.

This theory seems to hold up. The PC is indeed of that type. It seems
to account for my crashes. It does not account for the crashes other 
people got, though. That may still be hardware.

I renamed OZ:PS:<LMLIB>GPRINT.BIN.2 to OZ:PS:<LMLIB>GPRINT.5BIN.
I renamed OZ:PS:<LMLIB>GPRINT.BIN.1 to OZ:PS:<LMLIB>GPRINT.4BIN.
I wrote a file as OZ:PS:<LMLIB>GPRINT.BIN-SOURCE which does
 (LOAD (FORMAT NIL "OZ:PS:<LMLIB>~DBIN" (SI:GET-RELEASE-VERSION)))
and compiled it to OZ:PS:<LMLIB>GPRINT.BIN so that programs in
both systems depending on loading this file will hopefully not break.
-kmp
14-Feb-84 05:55:53-EST,745;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 14 Feb 84 05:55-EST
Date: Tue, 14 Feb 1984  05:55 EST
Message-ID: <GZ.11991634378.BABYL@MIT-OZ>
From: Gail Zacharias <GZ%MIT-OZ@MIT-MC.ARPA>
To:   "David A. Moon" <Moon%SCRC-TENEX@MIT-MC.ARPA>
Cc:   bug-file%MIT-OZ@MIT-MC.ARPA, BUG-LISPM@MIT-MC,
      Bug-System%MIT-OZ@MIT-MC.ARPA, bug-twenex%MIT-XX@MIT-MC.ARPA,
      KBE-I-FILE%MIT-OZ@MIT-MC.ARPA, Kent M Pitman <KMP@MIT-MC>
Subject: Abort closing files open for write when Twenex makes a scheduled down
In-reply-to: Msg of 13 Feb 1984 16:07-EST from David A. Moon <Moon at SCRC-TENEX>

TOPS-20 will indeed leave half-written files around when it goes down.
The file server could write to a temporary filename and rename on close...
14-Feb-84 09:55:28-EST,1752;000000000000
Received: from SCRC-TENEX by MIT-OZ via Chaosnet; 14 Feb 84 09:55-EST
Received: from SCRC-CUYAHOGA by SCRC-TENEX with CHAOS; Tue 14-Feb-84 09:53:36-EST
Date: Tuesday, 14 February 1984, 09:47-EST
From: Robert A. Cassels <Cassels at SCRC-TENEX>
Subject: floating point arithmetic
To: Ken at MIT-OZ, Hornig at SCRC-QUABBIN, BUG-LISPM at MIT-OZ
In-reply-to: The message of 12 Feb 84 14:51-EST from Kenneth M. Kahn <Ken at MIT-OZ>,
             <840212150413.4.Hornig@QUABBIN.SCRC.Symbolics>

    Date: Sunday, 12 February 1984, 14:51-EST
    From: Kenneth M. Kahn <Ken at MIT-OZ>

    In Release 5.0 [Beta Test rev 4], FEP 18, imperial purple, on Lisp Machine Apiary-4 (3600):

    (setq x (sqrt 5))
    (setq y (difference (plus x 2) 2))
    (= x y) ;;returns NIL

    Shouldn't adding 2 and then subtracting 2 return the same value?
No.
    It did in 4.5
I doubt it.  Perhaps you did (setq y (plus (difference x 2) 2)), or
(setq x (sqrt 10)).  It's conceivable that there was a broken version of
SQRT which gave a value of (sqrt 5) with a low-bit of 0.

    Date: Sunday, 12 February 1984, 15:04-EST
    From: Charles Hornig <Hornig at SCRC-QUABBIN>

	Date: Sunday, 12 February 1984, 14:51-EST
	From: Kenneth M. Kahn <Ken at MIT-OZ>

	In Release 5.0 [Beta Test rev 4], FEP 18, imperial purple, on Lisp Machine Apiary-4 (3600):

	(setq x (sqrt 5))
	(setq y (difference (plus x 2) 2))
	(= x y) ;;returns NIL

	Shouldn't adding 2 and then subtracting 2 return the same value?

    Not in floating point arithmetic.  Adding 2 causes the low-order bit of
    x to be rounded away.  You can't expect to get back lost information.
    It is almost never correct to compare two floating point numbers for
    equality.
14-Feb-84 15:11:32-EST,5212;000000000000
Received: from MIT-XX by MIT-OZ via Chaosnet; 14 Feb 84 15:01-EST
Date: Tuesday, 14 February 1984, 14:58-EST
From: JCMA@MIT-OZ
Subject: >>Error: NIL is not a method for kernelization.
To: BUG-LISPM@MIT-OZ

In System 242.269, Experimental RELATUS 97.0, FEP 18, imperial purple, on Lisp Machine Robot-4 (3600):

Another bug sentence follows.

>>Error: NIL is not a method for kernelization.
While in the function KERNELIZE-INTERNAL-INTERNAL  KERNELIZE-INTERNAL  KERNELIZE

KERNELIZE-INTERNAL-INTERNAL:  (P.C. = 177)  (from RL: PARSER; KERNELIZE)
   Arg 0 (KERN-WORD): THE
   Arg 1 (METHOD): NIL
   Arg 2 (KERN): #<KERN 51666202>
   Arg 3 (LAST): #<SENTENCE 51652132>
   Arg 4 (WORD-RESULT): (GERO COMMANDED)
   Arg 5 (P-O-S-RESULT): (PROP-N VB)
   Arg 6 (MARKER-RESULT): (NO NO)
   Arg 7 (WORD-REMAINDER): (SECRET POLICE TO FIRE UPON THE MASSES BECAUSE GERO FEARED ...)
   Arg 8 (P-O-S-REMAINDER): (AJ N INF INF PP DA N IF BECAUSE VB ...)
   Arg 9 (MARKER-REMAINDER): (NO NO NO NO NO NO NO NO BECAUSE NO ...)
   Arg 10 (DUMMY-PREP): NIL

KERNELIZE-INTERNAL:  (P.C. = 114)  (from RL: PARSER; KERNELIZE)
   Arg 0 (KERN-WORD): THE
   Arg 1 (KERN): #<KERN 51666202>
   Arg 2 (WORD-RESULT): (GERO COMMANDED)
   Arg 3 (P-O-S-RESULT): (PROP-N VB)
   Arg 4 (MARKER-RESULT): (NO NO)
   Arg 5 (WORD-REMAINDER): (SECRET POLICE TO FIRE UPON THE MASSES BECAUSE GERO FEARED ...)
   Arg 6 (P-O-S-REMAINDER): (AJ N INF INF PP DA N IF BECAUSE VB ...)
   Arg 7 (MARKER-REMAINDER): (NO NO NO NO NO NO NO NO BECAUSE NO ...)
   Arg 8 (LAST): #<SENTENCE 51652132>

KERNELIZE:  (P.C. = 62)  (from RL: PARSER; KERNELIZE)
   Arg 0 (KERN-WORD): THE
   Arg 1 (KERN): #<KERN 51666202>
   Arg 2 (WORD-RESULT): (GERO COMMANDED)
   Arg 3 (P-O-S-RESULT): (PROP-N VB)
   Arg 4 (MARKER-RESULT): (NO NO)
   Arg 5 (WORD-REMAINDER): (SECRET POLICE TO FIRE UPON THE MASSES BECAUSE GERO FEARED ...)
   Arg 6 (P-O-S-REMAINDER): (AJ N INF INF PP DA N IF BECAUSE VB ...)
   Arg 7 (MARKER-REMAINDER): (NO NO NO NO NO NO NO NO BECAUSE NO ...)
   Arg 8 (LAST): #<SENTENCE 51652132>

(:METHOD INFINITIVAL-KERN-SENTENCE-MIXIN :EMBED-COMPLEX-KERNS):  (P.C. = 2222)  (from RL: PARSER; ENGINE)
   Arg 0 (SELF): #<SENTENCE 51652132>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor INFINITIVAL-KERN-SENTENCE-MIXIN -- 1. IV's, 0. FL's 4244633>
   Arg 2 (OPERATION): :EMBED-COMPLEX-KERNS
   Arg 3 (WORDS): (GERO COMMANDED THE SECRET POLICE TO FIRE UPON THE MASSES ...)
   Arg 4 (PARTS): (PROP-N VB THAT AJ N INF INF PP DA N ...)
   Arg 5 (MARKS): (NO NO THAT NO NO NO NO NO NO NO ...)
   --Defaulted args:--
   Arg 6 (WORD-RESULT): (GERO COMMANDED)
   Arg 7 (PART-RESULT): (PROP-N VB)
   Arg 8 (MARK-RESULT): (NO NO)

(:METHOD INFINITIVAL-KERN-SENTENCE-MIXIN :EMBED-KERNS-INTERNAL):  (P.C. = 25)  (from RL: PARSER; ENGINE)
   Arg 0 (SELF): #<SENTENCE 51652132>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor INFINITIVAL-KERN-SENTENCE-MIXIN -- 1. IV's, 0. FL's 4244633>
   Arg 2 (OPERATION): :EMBED-KERNS-INTERNAL
   Arg 3 (WORDS): (GERO COMMANDED THE SECRET POLICE TO FIRE UPON THE MASSES ...)
   Arg 4 (PARTS): (PROP-N VB THAT AJ N INF INF PP DA N ...)
   Arg 5 (MARKERS): (NO NO THAT NO NO NO NO NO NO NO ...)
   Arg 6 (COMPOUND-P): NIL
   --Defaulted args:--
   Arg 7 (KERN-WORD): NIL

(:METHOD SENTENCE :EMBED-KERNS):  (P.C. = 120)  (from RL: PARSER; ENGINE)
   Arg 0 (SELF): #<SENTENCE 51652132>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SENTENCE -- 13. IV's, 2. FL's 4244611>
   Arg 2 (OPERATION): :EMBED-KERNS
   Arg 3 (WORDS): (GERO COMMANDED THE SECRET POLICE TO FIRE UPON THE MASSES ...)
   Arg 4 (PARTS): (PROP-N VB THAT AJ N INF INF PP DA N ...)
   Arg 5 (MARKERS): (NO NO THAT NO NO NO NO NO NO NO ...)
   Arg 6 (KERN-P): T
   Arg 7 (COMPOUND-P): NIL

(:METHOD SENTENCE :CHECK-MARKERS-INTERNAL):  (P.C. = 1430)  (from RL: PARSER; LEXIS)
   Arg 0 (SELF): #<SENTENCE 51652132>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SENTENCE -- 13. IV's, 2. FL's 4244611>
   Arg 2 (OPERATION): :CHECK-MARKERS-INTERNAL
   Arg 3 (WORDS): (GERO COMMANDED THE SECRET POLICE TO FIRE UPON THE MASSES ...)
   Arg 4 (PARTS): (PROP-N VB THAT AJ N INF INF PP DA N ...)
   Arg 5 (MARKS): (NO NO THAT NO NO NO NO NO NO NO ...)

(:METHOD SENTENCE :CHECK-MARKERS):  (P.C. = 37)  (from RL: PARSER; LEXIS)
   Arg 0 (SELF): #<SENTENCE 51652132>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SENTENCE -- 13. IV's, 2. FL's 4244611>
   Arg 2 (OPERATION): :CHECK-MARKERS

Rest of stack:
PARSE-THE-SENTENCE-SOME-MORE:  (P.C. = 13)  (from RL: PARSER; LEXIS)
PARSE-THE-SENTENCE-SOME-MORE:  (P.C. = 102)  (from RL: PARSER; LEXIS)
PROCESS:  (P.C. = 174)  (from RL: PARSER; LEXIS)
(:METHOD BELIEF-SYSTEM-IO-MIXIN :PARSE):  (P.C. = 354)  (from RL: GNOSCERE; IO-MIXIN)
ZWEI:READ-AND-PARSE-SENTENCES-IN-REGION:  (P.C. = 62)  (from RL: UTILS; RELATUS-ZWEI)
ZWEI:COM-PARSE-REGION:  (P.C. = 175)  (from RL: UTILS; RELATUS-ZWEI)
ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 200)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 41)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
14-Feb-84 15:15:52-EST,1144;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 14 Feb 84 15:02-EST
Received: from SCRC-EUPHRATES by SCRC-QUABBIN with CHAOS; Tue 14-Feb-84 15:06:21-EST
Date: Tuesday, 14 February 1984, 15:06-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: Merlin troubles
To: Kent M Pitman <KMP at MIT-MC>
Cc: DCP at SCRC-TENEX, BUG-LISPM at MIT-OZ,
    BUG-SYMBOLICS-HARDWARE at MIT-OZ, Dick at MIT-OZ, Faust at MIT-OZ,
    KBE-I-FILE at MIT-OZ, Reid at MIT-OZ, Rich at MIT-OZ, Weld at MIT-OZ,
    KWH at MIT-OZ
In-reply-to: The message of 14 Feb 84 03:04-EST from Kent M Pitman <KMP at MIT-MC>

    Date: 14 February 1984 03:04 EST
    From: Kent M Pitman <KMP @ MIT-MC>

	Date: Monday, 13 February 1984  12:13-EST
	From: David C. Plummer <DCP at SCRC-TENEX>

	    Date: Monday, 13 February 1984, 06:34-EST
	    From: Kent M Pitman <kmp at MIT-MC>

	    It's fasloading a GPRINT.BIN at the time it loses.

	My guess is GPRINT was compiled in Release 5 and you are tripping
	over an instruction that isn't implemented in Release 4.

    This theory seems to hold up.

This is what the comma (,) command in Dired is for.
14-Feb-84 16:35:37-EST,1120;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 14 Feb 84 16:35-EST
Received: from SCRC-CHARLES by SCRC-QUABBIN with CHAOS; Tue 14-Feb-84 15:51:34-EST
Return-path: <DCP%SCRC-CHARLES@MIT-MC.ARPA>
Date: Tuesday, 14 February 1984, 15:51-EST
From: David C. Plummer <DCP at SCRC-TENEX>
Subject: >>Error: NIL is not a method for kernelization.
To: JCMA at MIT-OZ, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 14 Feb 84 14:58-EST from JCMA at MIT-OZ

    Date: Tuesday, 14 February 1984, 14:58-EST
    From: JCMA@MIT-OZ

    In System 242.269, Experimental RELATUS 97.0, FEP 18, imperial purple, on Lisp Machine Robot-4 (3600):

    Another bug sentence follows.

    >>Error: NIL is not a method for kernelization.
    While in the function KERNELIZE-INTERNAL-INTERNAL  KERNELIZE-INTERNAL  KERNELIZE

    KERNELIZE-INTERNAL-INTERNAL:  (P.C. = 177)  (from RL: PARSER; KERNELIZE)
       Arg 7 (WORD-REMAINDER): (SECRET POLICE TO FIRE UPON THE MASSES BECAUSE GERO FEARED ...)
       Arg 9 (MARKER-REMAINDER): (NO NO NO NO NO NO NO NO BECAUSE NO ...)

Let me guess.  You're in spazz mode again...
14-Feb-84 16:40:52-EST,3068;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 14 Feb 84 16:40-EST
Date: Tuesday, 14 February 1984, 15:58-EST
From: Reid G. Simmons <REID at OZ>
Subject: draw-line bug
To: BUG-LISPM at OZ

In Release 4.5, Reasoning Utility Package 9.0, Experimental DIAGRAM 9.0,
Experimental QUANTITY 14.0, HISTORY 23.3, PROCESS 19.1, SIMULATION 11.5,
site configuration 79, on Lisp Machine Frank Sinatra:

WHEN SENDING A "DRAW-LINE" MESSAGE TO A DEEXPOSED WINDOW WITH SAVE-BITS, WHEN ONE OF THE Y-COORDINATES IS NEGATIVE.

>>Trap: Some argument to SYS:%BITBLT-SHORT-ROW was not a fixnum.
While in the function SYS:%DRAW-LINE  (METHOD TV:GRAPHICS-MIXIN DRAW-LINE)  SEND

SYS:%DRAW-LINE:  (P.C. = 657)
   Arg 0 (X1): 41
   Arg 1 (Y1): 80
   Arg 2 (X2): 65
   Arg 3 (Y2): 0
   Arg 4 (ALU): 7
   Arg 5 (DRAW-END-POINT): T
   Arg 6 (SHEET): #<DISPLAY-PANE Display Pane 7 10603660 deexposed>
   Local 7 (IGNORE): NIL
   Local 8 (IGNORE): NIL
   Local 9 (BB-WIDTH): 1
   Local 10 (BB-S-DATA-ADDR): 0
   Local 11 (BB-S-ROW-OFFSET): NIL
   Local 12 (BB-S-OFFSET): NIL
   Local 13 (BB-S-BITPOS): NIL
   Local 14 (BB-S-ROW-LENGTH): 0
   Local 15 (BB-D-DATA-ADDR): #<DTP-LOCATIVE 23504674>
   Local 16 (BB-D-OFFSET): -36
   Local 17 (BB-D-BITPOS): 1
   Local 18 (BB-EVENT-COUNT): 15162
   Local 19 (BB-ALU-OPERATION): 15
   Local 20 (S-BEG-ADDR): NIL
   Local 21 (S-BEG-BITPOS): 0
   Local 22 (S-ROW-LENGTH): 262144
   Local 23 (S-HEIGHT): 0
   Local 24 (S-BITS-PER-ELT): 1
   Local 25 (D-BEG-ADDR): #<DTP-LOCATIVE 23504674>
   Local 26 (D-BEG-BITPOS): 0
   Local 27 (D-ROW-LENGTH): 38
   Local 28 (D-HEIGHT): 394
   Local 29 (D-BITS-PER-ELT): 0
   Local 30 (S-ROW-BITPOS): 0
   Local 31 (S-ROW-OFFSET): 0
   Local 32 (S-ROW): 0
   Local 33 (D-ROW-BITPOS): 1
   Local 34 (D-ROW-OFFSET): 2
   Local 35 (D-ROW): -1
   Local 36 (S-ROW-ADDR-OFFSET): NIL
   Local 37 (DRAW-X1): T
   Local 38 (DRAW-X2): T
   Local 39 (DX): 24
   Local 40 (DY): -80
   Local 41 (DIR-Y): -1
   Local 42 (DY): 80
   Local 43 (D-ADDR-OFFSET): NIL
   Local 44 (I): 81
   Local 45 (OY): 0
   Local 46 (Y): -1
   Local 47 (REM): 36
   Local 48 (FIRST-P): NIL
   Local 49 (DONE-P): T
   Local 50: 0
   Local 51 (D-ADDR-OFFSET): -36

(METHOD TV:GRAPHICS-MIXIN DRAW-LINE):  (P.C. = 57)
   Arg 0 (SELF): #<DISPLAY-PANE Display Pane 7 10603660 deexposed>
   Arg 1 (SELF-MAPPING-TABLE): TV:GRAPHICS-MIXIN
   Arg 2 (OPERATION): DRAW-LINE
   Arg 3 (FROM-X): 41
   Arg 4 (FROM-Y): 80
   Arg 5 (TO-X): 85
   Arg 6 (TO-Y): -72
   Arg 7 (ALU): 7
   --Defaulted args:--
   Arg 8 (DRAW-END-POINT): T

SEND:  (P.C. = 6)
   Arg 0 (OBJECT): #<DISPLAY-PANE Display Pane 7 10603660 deexposed>
   Arg 1 (MESSAGE-NAME): DRAW-LINE
   Rest arg (ARGUMENTS): (41 80 85 -72 7)

SI:*EVAL:  (P.C. = 405)
   Arg 0 (FORM): (SEND AUX (QUOTE DRAW-LINE) 41 80 85 -72 7)

SI:LISP-TOP-LEVEL1:  (P.C. = 130)
   Arg 0 (TERMINAL-IO-initialization): #<LISP-LISTENER-PANE Lisp Listener Pane 4 10603517 exposed>

SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
   Arg 0 (IGNORE): NIL
15-Feb-84 14:17:18-EST,3957;000000000000
Received: from MIT-LISPM-2 by MIT-OZ via Chaosnet; 15 Feb 84 14:16-EST
Date: Wednesday, 15 February 1984, 14:16-EST
From: Steve Strassmann <STRAZ at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In System 98.31, CADR 3.6, ZMail 53.10, MIT-Specific 22.0, DAEDALUS 5.3,
Experimental Nodes 3.0, microcode 306, on Lisp Machine Two:

I had a file that works fine in brand S in an edit buffer, and did Eval Buffer.
I don't undertand areas. Do I need to #+MIT/#+SYMBOLICS my code somewhere?
 Thanks.....
;--------------------------------------------------------------------------------

Insert your description of the circumstances here:


>>TRAP 4276 (ARGTYP AREA M-S NIL CONS-GET-AREA)
Some argument to LIST, NIL, was of the wrong type.
The function expected an area number, NIL (default), or a symbol whose value is one.
Backtrace from the debugger:

LIST:
   Arg 0: "Return to debugger level ~D."
   Arg 1: 1


EH:FH-APPLIER (P.C. = 117)

 Arg 0 (FN): EH:CELL-CONTENTS-ERROR-DWIMIFY
 Arg 1 (ARGS): (COMPILER:QCMP-OUTPUT (:VALUE BOUNDP SYMEVAL) #<EDITOR-TYPEOUT-WINDOW Editor Typeout Window 1 2204337 exposed>)
 Arg 2 (X+): NIL
 Arg 3 (X*): NIL
 Arg 4 (X/): NIL
 Arg 5 (X++): NIL
 Arg 6 (X**): NIL
 Arg 7 (X//): NIL
 Arg 8 (X+++): NIL
 Arg 9 (X***): NIL
 Arg 10 (X///): NIL
 Arg 11 (X-SG): #<DTP-STACK-GROUP "Zmacs Frame 1" 22364653>
 Arg 12 (X-FRAME): 760
 Arg 13 (X-ERROR): #SYSTEM:UNBOUND-VARIABLE :CONDITION-NAMES (SYSTEM:UNBOUND-VARIABLE SYSTEM:CELL-CONTENTS-ERROR ERROR CONDITION ...) :ADDRESS #<DTP-LOCATIVE 1536564> :CURRENT-ADDRESS #<DTP-LOCATIVE 1536564> :CELL-TYPE :VALUE :SYMBOL COMPILER:QCMP-OUTPUT :CONTAINING-STRUCTURE COMPILER:QCMP-OUTPUT :DATA-TYPE 1 :POINTER 1536563
 Arg 14 (SG): #<DTP-STACK-GROUP "SECOND-LEVEL-ERROR-HANDLER-2" 4604574>
 Arg 15 (EH-P): T
 Arg 16 (PREV-FH): 1011
Local 0 (TAG): NIL


EH:FOOTHOLD (P.C. = 20)



EH:INVOKE-DEBUGGER (P.C. = 22)

 Arg 0 (CONDITION): #SYSTEM:UNBOUND-VARIABLE :CONDITION-NAMES (SYSTEM:UNBOUND-VARIABLE SYSTEM:CELL-CONTENTS-ERROR ERROR CONDITION ...) :ADDRESS #<DTP-LOCATIVE 1536564> :CURRENT-ADDRESS #<DTP-LOCATIVE 1536564> :CELL-TYPE :VALUE :SYMBOL COMPILER:QCMP-OUTPUT :CONTAINING-STRUCTURE COMPILER:QCMP-OUTPUT :DATA-TYPE 1 :POINTER 1536563


Additional information supplied with call:
 Values to be collected for MULTIPLE-VALUE-LIST

SIGNAL-CONDITION (P.C. = 265)

 Arg 0 (CONDITION): #SYSTEM:UNBOUND-VARIABLE :CONDITION-NAMES (SYSTEM:UNBOUND-VARIABLE SYSTEM:CELL-CONTENTS-ERROR ERROR CONDITION ...) :ADDRESS #<DTP-LOCATIVE 1536564> :CURRENT-ADDRESS #<DTP-LOCATIVE 1536564> :CELL-TYPE :VALUE :SYMBOL COMPILER:QCMP-OUTPUT :CONTAINING-STRUCTURE COMPILER:QCMP-OUTPUT :DATA-TYPE 1 :POINTER 1536563
 Arg 1 (CONDITION-PROCEED-TYPES): (:NO-ACTION :NEW-VALUE :STORE-NEW-VALUE :PACKAGE-DWIM)
 Arg 2 (USE-DEBUGGER): NIL
 Arg 3 (UCODE-ERROR-STATUS): (17437 (EH:TRANS-TRAP) 760 760 ...)
   --Defaulted args:--
 Arg 4 (INHIBIT-RESUME-HANDLERS): NIL
Local 0 (TEM1): NIL
Local 1 (CONDITION-NAMES): (SYSTEM:UNBOUND-VARIABLE SYSTEM:CELL-CONTENTS-ERROR ERROR CONDITION ...)
Local 2 (DEBUGGER-CALLED): T
Local 3: NIL
Local 4 (C): NIL


Remainder of stack:

EH:FH-APPLIER-NO-RESTART (P.C. = 35)
EH:FOOTHOLD (P.C. = 20)
COMPILER:QC-TRANSLATE-FUNCTION (P.C. = 430)
SI:COMPILE-AT-APPROPRIATE-TIME (P.C. = 153)
SI:COMPOSE-AUTOMATIC-METHODS (P.C. = 154)
SI:EVAL1 (P.C. = 1324)
ZWEI:EVAL-PRINT (P.C. = 41)
ZWEI:COMPILE-INTERVAL-PROCESS-BASIC-FORM (P.C. = 43)
COMPILER:COMPILE-DRIVER (P.C. = 765)
ZWEI:COMPILE-INTERVAL-PROCESS-FN (P.C. = 30)
...
ZWEI:COMMAND-EXECUTE (P.C. = 115)
ZWEI:PROCESS-COMMAND-CHAR (P.C. = 65)
(:METHOD ZWEI:WINDOW :EDIT) (P.C. = 464)
(:INTERNAL (:METHOD ZWEI:ZMACS-WINDOW :COMBINED :EDIT) 0) (P.C. = 74)
FUNCALL (P.C. = 25)
(:METHOD ZWEI:DISPLAYER :AROUND :EDIT) (P.C. = 31)
(:METHOD ZWEI:ZMACS-WINDOW :COMBINED :EDIT) (P.C. = 47)
ZWEI:ZMACS-WINDOW-TOP-LEVEL (P.C. = 46)
SI:PROCESS-TOP-LEVEL (P.C. = 246)
15-Feb-84 19:25:25-EST,876;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 15 Feb 84 19:24-EST
Date: Wednesday, 15 February 1984, 19:13-EST
From: Daniel Weise <DANIEL at MIT-MC>
Subject: defstruct :constructor and C-M-a don't talk to each other.
To: BUG-LISPM at MIT-OZ

In System 242.269, FEP 18, patched imperial purple, on Lisp Machine Jim Morrison (3600):

I have the following structure definition:

(defstruct (sp-signal :conc-name :named
		      (:default-pointer *sp-signal*)
		      (:predicate sp-signal?)
		      (:constructor create-sp-signal (node path initial?))
		      (:print "#<Signal ~A ~A>"
		       (node-name (sp-signal-node sp-signal))
		       (node-type (sp-signal-node sp-signal))))
  node
  path
  initial?)

At top level or in Zwei, when I do C-M-a after "(create-sp-signal " all it says is
(Macro): (X).  Is there any way for it give the real arg list?
16-Feb-84 04:39:40-EST,1270;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 16 Feb 84 04:39-EST
Date: Thursday, 16 February 1984, 04:38-EST
From: Kent M Pitman <kmp at MIT-MC>
Subject: Buffer modified "*" getting lost off end of Zmacs mode line
To: BUG-LISPM at OZ

In Release 4.5, Experimental Knowledge-Based-Editor 279.6,
site configuration 83, Black Magic, on PA Lisp Machine Avatar:

If the Zmacs mode line is too long, the buffer modified information
falls off the end. This is exceedingly important info to me and I
would like it to be always visible. Large fonts and/or a narrow 
screen can cause this to be a problem. Could something be done
to make the buffer modified information not get lost (eg, in Emacs
that information overwrites the mode line)? Maybe like :RIGHT-FLUSH
there could be :RIGHT-FLUSH-OVERWRITE which would overwrite the last
n chars if there would not otherwise be room. Or perhaps the buffer
modified info could come earlier (right before the buffer name?). 
Failing those ideas, could someone tell me a safe way to set
ZWEI:*MODE-LINE-LIST* such that I could feel confident it would 
not get randomly reset later by something and also such that I 
would not break anything that made assumptions about the format 
or contents of that list.
-kmp
16-Feb-84 07:33:11-EST,2892;000000000000
Received: from MIT-LISPM-18 by MIT-OZ via Chaosnet; 16 Feb 84 07:32-EST
Date: Thursday, 16 February 1984, 07:32-EST
From: Robert P. Krajewski <RpK at MIT-OZ>
To: STRAZ at MIT-OZ
CC: BUG-LISPM at MIT-OZ
FCC: OZ:PS:<RPK.MAIL>CC.XMAIL
In-reply-to: The message of 15 Feb 1984 14:16-EST from Steve Strassmann <STRAZ at MIT-OZ>
Message-ID: <[MIT-LISPM-18].2/16/84 07:32:15.RpK>

    Date: Wednesday, 15 February 1984, 14:16-EST
    From: Steve Strassmann <STRAZ at MIT-OZ>
    To: BUG-LISPM at MIT-OZ

    In System 98.31, CADR 3.6, ZMail 53.10, MIT-Specific 22.0, DAEDALUS 5.3,
    Experimental Nodes 3.0, microcode 306, on Lisp Machine Two:

    I had a file that works fine in brand S in an edit buffer, and did Eval Buffer.
    I don't undertand areas. Do I need to #+MIT/#+SYMBOLICS my code somewhere?
     Thanks.....

What's the name of the file ?  Any, it seems that COMPILER:QCMP-OUTPUT was
unbound (that's odd, it's bound to NIL on this machine running 98.37), and the
error handler itself got an error when it forgot to tell LIST (shouldn't that
be LIST-IN-AREA ?) what area to cons in.  Most likely, it's not a bug with
your code.

    >>TRAP 4276 (ARGTYP AREA M-S NIL CONS-GET-AREA)
    Some argument to LIST, NIL, was of the wrong type.
    The function expected an area number, NIL (default), or a symbol whose value is one.
    Backtrace from the debugger:

    LIST:
       Arg 0: "Return to debugger level ~D."
       Arg 1: 1


    EH:FH-APPLIER (P.C. = 117)

     Arg 0 (FN): EH:CELL-CONTENTS-ERROR-DWIMIFY
     Arg 1 (ARGS): (COMPILER:QCMP-OUTPUT (:VALUE BOUNDP SYMEVAL) #<EDITOR-TYPEOUT-WINDOW Editor Typeout Window 1 2204337 exposed>)
     Arg 2 (X+): NIL
     Arg 3 (X*): NIL
     Arg 4 (X/): NIL
     Arg 5 (X++): NIL
     Arg 6 (X**): NIL
     Arg 7 (X//): NIL
     Arg 8 (X+++): NIL
     Arg 9 (X***): NIL
     Arg 10 (X///): NIL
     Arg 11 (X-SG): #<DTP-STACK-GROUP "Zmacs Frame 1" 22364653>
     Arg 12 (X-FRAME): 760
     Arg 13 (X-ERROR): #SYSTEM:UNBOUND-VARIABLE :CONDITION-NAMES (SYSTEM:UNBOUND-VARIABLE SYSTEM:CELL-CONTENTS-ERROR ERROR CONDITION ...) :ADDRESS #<DTP-LOCATIVE 1536564> :CURRENT-ADDRESS #<DTP-LOCATIVE 1536564> :CELL-TYPE :VALUE :SYMBOL COMPILER:QCMP-OUTPUT :CONTAINING-STRUCTURE COMPILER:QCMP-OUTPUT :DATA-TYPE 1 :POINTER 1536563
     Arg 14 (SG): #<DTP-STACK-GROUP "SECOND-LEVEL-ERROR-HANDLER-2" 4604574>
     Arg 15 (EH-P): T
     Arg 16 (PREV-FH): 1011
    Local 0 (TAG): NIL


    EH:FOOTHOLD (P.C. = 20)

    EH:INVOKE-DEBUGGER (P.C. = 22)

     Arg 0 (CONDITION): #SYSTEM:UNBOUND-VARIABLE :CONDITION-NAMES (SYSTEM:UNBOUND-VARIABLE SYSTEM:CELL-CONTENTS-ERROR ERROR CONDITION ...) :ADDRESS #<DTP-LOCATIVE 1536564> :CURRENT-ADDRESS #<DTP-LOCATIVE 1536564> :CELL-TYPE :VALUE :SYMBOL COMPILER:QCMP-OUTPUT :CONTAINING-STRUCTURE COMPILER:QCMP-OUTPUT :DATA-TYPE 1 :POINTER 1536563

16-Feb-84 09:26:02-EST,4498;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 16 Feb 84 09:25-EST
Date: Thursday, 16 February 1984, 09:21-EST
From: Kent M Pitman <kmp at MIT-MC>
Subject: Questioning the uppercase initial in SI:DEFINITION-TYPE-NAME strings.
To: BUG-LISPM at OZ
Cc: JWalker at SCRC, KMP at MC, KBE-I-FILE at OZ
Supersedes: Your message

A while back I suggested that the string held by the
SI:DEFINITION-TYPE-NAME property should, by convention,
be lowercase initial rather than uppercase. This would
make it of much higher utility to some of my programs.

I still find a lot of need for this feature and since I
got no reply the last time I suggested it, I'm trying
again on the suspicion that the idea just got lost in
the dust...

-----Begin Forwaded Message-----
  Date: Monday, 4 April 1983, 01:43-EST
  From: Kent M. Pitman <kmp at MIT-MC>
  Subject: Uppercase initial in SI:DEFINITION-TYPE-NAME property
  To: BUG-LISPM at SCRC
  Cc: KBE-I-FILE at OZ
  
  I wish this weren't uppercase initial. It would be easier
  for you to upcase the first character when you need to
  than for me to figure out which characters want to be
  downcased if I want to put it in the middle of the
  sentence. This is because although a sentence starts with
  uppercase, it is not NECESSARILY supposed to be downcased
  if you move it elsewhere. Alternatively, words which are
  lowercase initially are always upcased at the head of a
  sentence. Here are some examples...
  
  Consider the sentences:
  
    I am frobbing the definition of Function FOO.   ; this looks crummy
    I am frobbing the definition of KBE event FOO.  ; this looks ok.
  
   The phrase "KBE event" looks ok anywhere in sentence.
   The phrase "Function"  looks bad except at head of sentence.
  
  To fix this, given that these currently come built-in
  with uppercase initial,...
  
    (string-lowercase "KBE event") => "kbe event" ;poor
    (string-lowercase "Function")  => "function"  ;ok
  
    (string-lowercase-initial "KBE event") => "kBE event" ;bad
    (string-lowercase-initial "Function")  => "function"  ;ok
  
  Alternatively, if I had had lowercase initial by default,
  I could have just written "KBE event" as the `lowercase'
  form so giving it uppercase initial would be a no-op. I'd
  just do:
  
    (string-capitalize-initial "KBE event") => "KBE event" ;ok
    (string-capitalize-initial "function")  => "Function"  ;ok
  
  and use "function" or "KBE event" when imbedded.
  
  I am writing programs that want to converse with the user
  about programs he is writing and it would be nice if it
  didn't make stupid syntax errors when it was talking to
  him. They very much detract from an "intelligent feel".
  
  --kmp

-----End Forwaded Message-----

The change is slightly incompatible in that functions that
access this data would want to be recoded. eg, c-sh-C might
want to type out:
  Compiling function FOO.
  Done compiling function FOO.

If you forgot to make changes in a place or two, nothing
fatal would happen. You'd just have messages that looked
slightly funny for a while until you fixed them. The long
range benefits in terms of the styles of kinds of programs
which could take advantage of SI:DEFINITION-TYPE-NAME info
are greatly enhanced.

In this regard it would be really interesting to see a
FORMAT op in the vein of ~A but which uppercased the first 
character of its string. That would mean that you could
even get away with passing a single string to
ZWEI:COMPILE-DEFINITION-INTERNAL instead of two. The
string could be something like "compile" and you could say:
  ... (FORMAT T "~\Capitalize\ ~A ~S"
        VERB-STRING ;eg, "compiling"
	(SI:DEFINITION-TYPE-NAME FUNCTION)
	FUNCTION)
      ...
      (FORMAT T "Done ~A ~A ~S."
	VERB-STRING (SI:DEFINITION-TYPE-NAME FUNCTION) FUNCTION) ...
to see
  Compiling function FOO. 
  Done compiling function FOO.
Or, if you retained the old style with two strings, you could
write this instead:
  ... (FORMAT T "~A ~A ~S"
	STRING-1 ;eg, "Compiling"
	(SI:DEFINITION-TYPE-NAME FUNCTION)
	FUNCTION)
      ...
      (FORMAT T "~\Capitalize\ ~S ~A"
	(SI:DEFINITION-TYPE-NAME FUNCTION)
	FUNCTION
	STRING-2 ;eg, "compiled."
	) ...
to see
  Compiling function FOO.
  Function FOO compiled.
I'm somewhat confused as to why the "." isn't in the format 
string and that everyone has to pass it in, but I guess I 
won't ask about that here.
-kmp
16-Feb-84 09:44:58-EST,1085;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 16 Feb 84 09:43-EST
Date: 16 February 1984 09:43 EST
From: Kent M Pitman <KMP @ MIT-MC>
Subject: Supersedes: Your message
To: BUG-LISPM @ MIT-MC

In Rel 4.5 on Avatar (CADR):

I hope whatever lossage it is that turned 
 Supersedes: The message of Mon 4 Apr 83 01:43-EST from Kent M. Pitman <KMP@MIT-MC>
into
 Supersedes: Your message
is fixed in Release 5. This has happened to me on any number of 
occasions. It is not always to an audience like Bug-LISPM who
have no doubt developed a sense of humor about the games a mailer
can play with completely straightforward header fields. There must
be people out there who think I just enjoy making extra header
fields for the sheer delight of cluttering their mailboxes.

I wasn't even in reply mode to anything. This was sent from c-X M.
Any program that thought that "your" had any meaning in a message from
KMP to BUG-LISPM which was not a reply to anything or even in a context
where it could be a reply to anything is really going out of its way to
lose.

Sigh.
16-Feb-84 10:16:53-EST,1931;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 16 Feb 84 10:15-EST
Date: Thursday, 16 February 1984, 10:15-EST
From: Kent M Pitman <KMP at MIT-MC>
Subject: Zmacs creating a buffer with same name as an existing one
To: BUG-LISPM at MIT-OZ
Cc: KBE-I-FILE at MIT-OZ

In Symbolics Release 4.5 on Avatar
         and Release 5.0 (4, imperial purple) on Apiary-9:

If a buffer named *Buffer-2* already exists (eg, I created
it manually for some reason) and I do System Control-E to
create a second editor window, Zmacs creates a new *Buffer-2*
such that there are then two different buffers both named
*Buffer-2*.

In that case, Zmacs should check to see if the buffer name 
is in use and choose a higher number if it is.

Also, but much less important, I think it should also try
to recycle low numbers if such buffers no longer exist. The
main reason for this is that I always cons a new editor window
for the KBE before dumping out our system and there seems to
be no way to keep it from making a *Buffer-2*, which I try to
manually kill to minimize clutter. So if someone then does
System Control-E, they always get a *Buffer-3* and may wonder
where *Buffer-2* went.

A way to accomplish both of these aims compatibly would be
to just flush the idea of counting instances of these things
and do
 (DO ((I 1 (1+ I)) (NAME)) (NIL)
   (SETQ NAME (FORMAT NIL "*Buffer-~D*" I))
   (IF (NOT (ZWEI:FIND-BUFFER-NAMED NAME))
       (RETURN NAME))
   (RETURN-ARRAY NAME))
This would succeed quite fast in the normal case and would be
much less prone to break.

As a side issue, I would very much like to be able to specify
the initial buffer for a new window to be created pointing to
so that it did not gensym *Buffer-2* for me. But the ability
to do this would not alleviate the original problem of 
accidentally getting two buffers with the same name when the
init option were unspecified.
-kmp
16-Feb-84 15:37:05-EST,971;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 16 Feb 84 15:36-EST
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK with CHAOS; Thu 16-Feb-84 15:35:21-EST
Date: Thursday, 16 February 1984, 15:38-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: Questioning the uppercase initial in SI:DEFINITION-TYPE-NAME strings.
To: Kent M Pitman <kmp at MIT-MC>
Cc: BUG-LISPM at MIT-OZ
In-reply-to: The message of 16 Feb 84 09:21-EST from Kent M Pitman <kmp at MIT-MC>

    Date: Thursday, 16 February 1984, 09:21-EST
    From: Kent M Pitman <kmp at MIT-MC>
    ....
    In this regard it would be really interesting to see a
    FORMAT op in the vein of ~A but which uppercased the first 
    character of its string.
    ....

This is ~: and has existed for quite some time (but not long enough to
have been documented in the Chine Nual).  It's also ~@(~A~) in Common Lisp
FORMAT.  By the way, that  is symbol-Q, not the similar-looking shift-6.
16-Feb-84 15:59:26-EST,1610;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 16 Feb 84 15:53-EST
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK with CHAOS; Thu 16-Feb-84 15:52:11-EST
Date: Thursday, 16 February 1984, 15:55-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: defstruct :constructor and C-M-a don't talk to each other.
To: Daniel Weise <DANIEL at MIT-MC>
Cc: BUG-LISPM at MIT-OZ
In-reply-to: The message of 15 Feb 84 19:13-EST from Daniel Weise <DANIEL at MIT-MC>

    Date: Wednesday, 15 February 1984, 19:13-EST
    From: Daniel Weise <DANIEL at MIT-MC>

    I have the following structure definition:

    (defstruct (sp-signal (:constructor create-sp-signal (node path initial?)) ...

    At top level or in Zwei, when I do C-M-a after "(create-sp-signal " all it says is
    (Macro): (X).  Is there any way for it give the real arg list?

I assume by "C-M-a" you mean "c-sh-A", the command to get the arg list of the function
call surrounding Point.

Take a look at the macro expansion of that defstruct.  Defstruct doesn't actually write
a macro for these constructors, but just makes all such macros go through a common
expander function which looks around to decide what to do.  This means that there isn't
any place to store the arglist.  A special kludge for this could be put into the ARGLIST
function, but I'm not sure it's worth it.

Note that this will be fixed as a by-product of Common Lisp, which mandates that these
constructors be functions rather than macros.  They will take up a little more space
in your Lisp world, but will have legitimate argument lists.
16-Feb-84 17:09:50-EST,2532;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 16 Feb 84 17:09-EST
Date: 16 February 1984 17:06 EST
From: Kent M Pitman <KMP @ MIT-MC>
Subject: ~: to capitalize
To: moon @ SCRC-TENEX
cc: KMP @ MIT-MC, BUG-LISPM @ MIT-OZ, KBE-I-FILE @ MIT-OZ

Sorry, I should have been more explicit. I think it extremely important
that there be a format op which upcases the first char and leaves the rest
alone. The motivation for such an operator is the same as that presented in
my note, so I wont' try to re-justify it.

Specifically, I want an op (calling it ~\Capitalize\ here again) such that
 (FORMAT NIL "~\Capitalize\" "foo") => "Foo"
 (FORMAT NIL "~\Capitalize\" "Foo") => "Foo"
 (FORMAT NIL "~\Capitalize\" "FOO") => "FOO"
This is what ~@: should have been allocated for since its operation looks
to be motivated from bogus generality consideration and I can think of no
useful applications (can someone surprise me?). For those who don't know
what it does:
 (FORMAT NIL "~{~@: ~}" '("FOO" "Foo" "foo"))
 => "fOO fOO fOO "
On the other hand, if you'd made it be:
 (FORMAT NIL "~{~@: ~}" '("FOO" "Foo" "foo"))
 => "FOO Foo Foo"
I could imagine lots of good uses for that. I also bet no one is actually
using it and you could just quietly make the change (documenting it, of
course) with no one noticing.

~( ... ~) in Common Lisp at least does not waste any modifiers on foolish
functionality but also does not provide the desired functionality. One
might imagine at least extending Common Lisp's version to say that
~m,n(...~) does its call to STRING-CAPITALIZE (or whatever) only within
the range of chars m to n (using :START and :END arguments). Presumably
"~,1(~A~)" would then do what I wanted, though in a more cluttered fashion
than I'd wanted. But of course, such a change could not be seriously 
proposed in that forum now anyway since Common Lisp is frozen for release 
anyway.

The end result is that I want things like:
 (DEFUN PRINT-THAT-WE-ARE-DONE-COMPILING (TYPE FUNCTION-SPEC)
   (FORMAT T "~&~\Capitalize\ ~S compiled." TYPE FUNCTION-SPEC))
to work for
 (PRINT-THAT-WE-ARE-DONE-COMPILING "function" 'FOO) 
 ;prints "Function FOO compiled."
and
 (PRINT-THAT-WE-ARE-DONE-COMPILING "KBE event" 'FOO) 
 ;prints "KBE event FOO compiled."

The problem is that all current off-the-shelf technology ends up forcing
"KBE" to "Kbe" or something equally unpleasant because the upper to lower
transition is not safe, while lower to upper shifts tend to generally be so.
-kmp
17-Feb-84 19:31:48-EST,1472;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 17 Feb 84 16:28-EST
Received: from SCRC-NEPONSET by SCRC-QUABBIN with CHAOS; Wed 15-Feb-84 21:17:16-EST
Return-path: <DCP%SCRC-NEPONSET@MIT-MC.ARPA>
Date: Wednesday, 15 February 1984, 21:17-EST
From: David C. Plummer <DCP at SCRC-TENEX>
Subject: defstruct :constructor and C-M-a don't talk to each other.
To: DANIEL at MIT-MC, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 15 Feb 84 19:13-EST from Daniel Weise <DANIEL at MIT-MC>

    Date: Wednesday, 15 February 1984, 19:13-EST
    From: Daniel Weise <DANIEL at MIT-MC>

    In System 242.269, FEP 18, patched imperial purple, on Lisp Machine Jim Morrison (3600):

    I have the following structure definition:

    (defstruct (sp-signal :conc-name :named
			  (:default-pointer *sp-signal*)
			  (:predicate sp-signal?)
			  (:constructor create-sp-signal (node path initial?))
			  (:print "#<Signal ~A ~A>"
			   (node-name (sp-signal-node sp-signal))
			   (node-type (sp-signal-node sp-signal))))
      node
      path
      initial?)

    At top level or in Zwei, when I do C-M-a after "(create-sp-signal " all it says is
    (Macro): (X).  Is there any way for it give the real arg list?

#'create-sp-signal ==> (MACRO . SI:DEFSTRUCT-EXPAND-CONS-MACRO)

In other words, it just defines a hook into the general defstruct
utility.  The alternative is to cons yet some more words away, some of
them in compiled-function area.
17-Feb-84 21:20:05-EST,528;000000000000
Mail-From: JOHANN created at 17-Feb-84 21:19:30
Date: Fri 17 Feb 84 21:19-EST
From: John Amuedo <JOHANN@MIT-OZ>
Subject: CADR-6
To: bug-hardware@MIT-OZ, bug-lispm@MIT-OZ, pgs@MIT-OZ


CADR-6's console is exhibiting the same symptoms
I saw in November.  Before anyone pronounces it
"healthy" again, could someone please take a look
at its monitor and tell me if you see all of the
funny little stripes.  What do these mean?

Tongue in cheek,

John

P.S. I would like to be able to use the FPS Box
this term.

18-Feb-84 06:35:30-EST,3885;000000000000
Received: from MIT-APIARY-5 by MIT-OZ via Chaosnet; 18 Feb 84 06:34-EST
Date: Saturday, 18 February 1984, 06:31-EST
From: JCMA@MIT-OZ
Subject: >>Error: File system bug on host OZ:
To: BUG-LISPM@MIT-OZ
Cc: bug-mail@MIT-OZ, bug-oz@MIT-OZ

In System 242.269, Experimental RELATUS 97.30, FEP 18, imperial purple, on Lisp Machine Apiary-5 (3600):



>>Error: File system bug on host OZ:
         Destination file is not closed (at 7727 inside FILE server)
         For OZ:PS:<JCMA>MAIL.TXT.1
While in the function (:METHOD FS:HOST-UNIT :COMMAND)  FS:RENAME-CHAOS  (:METHOD FS:QFILE-ACCESS-PATH :RENAME)

(:METHOD FS:HOST-UNIT :COMMAND):  (P.C. = 231)
   Arg 0 (SELF): #<HOST-UNIT 3674426>
   Arg 1 (SELF-MAPPING-TABLE): FS:HOST-UNIT
   Arg 2 (OPERATION): :COMMAND
   Arg 3 (MARK-P): NIL
   Arg 4 (STREAM-OR-HANDLE): NIL
   Arg 5 (SIMPLE-P): NIL
   Arg 6 (WHOSTATE): "Rename"
   Rest arg (COMMANDS): ("RENAME" 141. "PS:<JCMA>MAIL.TXT.1" 141. "PS:<JCMA>MAIL._ZMAIL_TXT.1" 141.)
   Local 8 (HANDLE): NIL
   Local 9 (STREAM): NIL
   Local 10 (PKT): #<Chaos Packet 50502451>
   Local 11 (SUCCESS): NIL
   Local 12 (STRING): " ERROR BUG F Destination file is not closed (at 7727 inside FILE server)"
   Local 13 (TRANSACTION-ID): "T2406"
   Local 14 (CREATE-P): NIL
   Local 15 (CONDITION): NIL

FS:RENAME-CHAOS:  (P.C. = 43)
   Arg 0 (ACCESS-PATH): #<TOPS20-QFILE-ACCESS-PATH OZ using QFILE 3674415>
   Arg 1 (*COMMAND-PATHNAME*-initialization): #<TOPS20-PATHNAME "OZ:PS:<JCMA>MAIL.TXT.1">
   Arg 2 (NEW-PATHNAME): #<TOPS20-PATHNAME "OZ:PS:<JCMA>MAIL._ZMAIL_TXT.1">

(:METHOD FS:QFILE-ACCESS-PATH :RENAME):  (P.C. = 6)
   Arg 0 (SELF): #<TOPS20-QFILE-ACCESS-PATH OZ using QFILE 3674415>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:QFILE-ACCESS-PATH -- 3. IV's, 0. FL's 101271003>
   Arg 2 (OPERATION): :RENAME
   Arg 3 (OLD-PATHNAME): #<TOPS20-PATHNAME "OZ:PS:<JCMA>MAIL.TXT.1">
   Arg 4 (NEW-PATHNAME): #<TOPS20-PATHNAME "OZ:PS:<JCMA>MAIL._ZMAIL_TXT.1">

(:METHOD FS:ACTIVE-PATHNAME-MIXIN :RENAME):  (P.C. = 12)
   Arg 0 (SELF): #<TOPS20-PATHNAME "OZ:PS:<JCMA>MAIL.TXT.1">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:ACTIVE-PATHNAME-MIXIN -- 1. IV's, 0. FL's 101004562>
   Arg 2 (OPERATION): :RENAME
   Arg 3 (NEW-PATHNAME): #<TOPS20-PATHNAME "OZ:PS:<JCMA>MAIL._ZMAIL_TXT.1">

RENAMEF:  (P.C. = 200)
   Arg 0 (STRING-OR-STREAM): #<TOPS20-PATHNAME "OZ:PS:<JCMA>MAIL.TXT.1">
   Arg 1 (NEW-NAME): #<TOPS20-PATHNAME "OZ:PS:<JCMA>MAIL._ZMAIL_TXT.1">
   --Defaulted args:--
   Arg 2 (ERROR-P): T

(:METHOD ZWEI:INBOX-BUFFER :START-NEXT-INBOX):  (P.C. = 143)
   Arg 0 (SELF): #<TENEX-INBOX-BUFFER "for OZ:SRC:<JCMA.MAIL>JCMA.BABYL" 41573367>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:INBOX-BUFFER -- 12. IV's, 0. FL's 4270643>
   Arg 2 (OPERATION): :START-NEXT-INBOX

ZWEI:GET-INBOX-FOR-BUFFER:  (P.C. = 105)
   Arg 0 (BUFFER): #<BABYL-BUFFER "OZ:SRC:<JCMA.MAIL>JCMA.BABYL" 41532166>
   Arg 1 (FROM-PATHNAME): NIL
   Arg 2 (DELETE-P): NIL
   Arg 3 (TELL-BACKGROUND-P): NIL

ZWEI:COM-GET-INBOX-INTERNAL:  (P.C. = 243)
   Arg 0 (FIRST-TIME-P): NIL
   --Defaulted args:--
   Arg 1 (FOR-BUFFER): #<BABYL-BUFFER "OZ:SRC:<JCMA.MAIL>JCMA.BABYL" 41532166>

Rest of stack:
ZWEI:COM-GET-NEW-MAIL-FROM-INBOX:  (P.C. = 7)
ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
ZWEI:ZMAIL-COMMAND-EXECUTE:  (P.C. = 6)
(:METHOD ZWEI:ZMAIL-FRAME :PROCESS-COMMAND-CHAR):  (P.C. = 7)
(:INTERNAL (:METHOD ZWEI:ZMAIL-FRAME :COMBINED :PROCESS-COMMAND-CHAR) 0.):  (P.C. = 7)
(:METHOD ZWEI:ZMAIL-COMMAND-LOOP-MIXIN :WHOPPER :PROCESS-COMMAND-CHAR):  (P.C. = 21)
(:METHOD ZWEI:ZMAIL-FRAME :COMBINED :PROCESS-COMMAND-CHAR):  (P.C. = 12)
(:METHOD ZWEI:ZMAIL-FRAME :COMMAND-LOOP):  (P.C. = 146)
(:METHOD ZWEI:ZMAIL-FRAME :COMBINED :COMMAND-LOOP):  (P.C. = 43)
ZWEI:ZMAIL-PROCESS-TOP-LEVEL:  (P.C. = 52)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
18-Feb-84 15:35:39-EST,2166;000000000000
Received: from MIT-XX by MIT-OZ via Chaosnet; 18 Feb 84 15:34-EST
Date: Friday, 17 February 1984, 15:49-EST
From: Dinarte R. Morais <DRM at MIT-XX>
Subject: Faster :DRAW-FILLED-IN-CIRCLE method
To: bug-lispm at MIT-OZ
Cc: drm at MIT-XX

;;; -*- Mode: Lisp; Package: TV -*-

;;;
;;; In System 242.269, FEP 18, Purple MEF, on MEF Cherry (3600):
;;;
;;; The following method for drawing filled-in circles does the job approximately
;;; 75% faster than the method used in Rev. 4.5, and approximately 35% faster
;;; than the method defined in the patch file OZ:SRC:<S.R5.PATCH>SYSTEM-242-235.LISP.
;;; 
;;; This method maintains the same outline as the :DRAW-CIRCLE method.  It does
;;; exactly what the method in the patch file does, only faster.  This speed-up
;;; is obtained by drawing larger rectangles all at once rather than one line at
;;; a time.
;;;

(DEFMETHOD (GRAPHICS-MIXIN :DRAW-FILLED-IN-CIRCLE)
           (CENTER-X CENTER-Y RADIUS &OPTIONAL (ALU CHAR-ALUF))
   (PREPARE-SHEET (SELF)
     (LOOP WITH X = RADIUS AND Y = 0 AND ERROR = 0 AND OLD-Y DO
	   (SETQ ERROR (+ ERROR Y Y 1))
	   (COND
	     ;; Will the next chord be shorter?
	     ((>= ERROR X)
	      ;; Draw the middle region.
	      (COND
		;; If this is the first time through, then draw one big rectangle.
		((NULL OLD-Y)
		 (DRAW-RECTANGLE-INSIDE-CLIPPED (+ X X 1) (+ Y Y 1)
						(- CENTER-X X) (- CENTER-Y Y) ALU SELF)
		 (SETQ OLD-Y Y))
		;; Otherwise draw upper & lower rectangles.
		(T
		 (DRAW-RECTANGLE-INSIDE-CLIPPED (+ X X 1) (- Y OLD-Y)
						(- CENTER-X X) (- CENTER-Y Y) ALU SELF)
		 (DRAW-RECTANGLE-INSIDE-CLIPPED (+ X X 1) (- Y OLD-Y)
						(- CENTER-X X) (+ CENTER-Y OLD-Y 1) ALU SELF)
		 (SETQ OLD-Y Y)))
	      (AND (= X Y) (RETURN T))		;Finished?
	      ;; Draw the top line.
	      (DRAW-RECTANGLE-INSIDE-CLIPPED (+ Y Y 1) 1
					     (- CENTER-X Y) (+ CENTER-Y X) ALU SELF)
	      ;; Draw the bottom line.
	      (DRAW-RECTANGLE-INSIDE-CLIPPED (+ Y Y 1) 1
					     (- CENTER-X Y) (- CENTER-Y X) ALU SELF)
	      (SETQ ERROR (- ERROR X X -1)
		    X   (1- X))))
	   (SETQ Y (1+ Y))
	   (AND (> Y X) (RETURN T)))))

18-Feb-84 15:40:14-EST,529;000000000000
Received: from MIT-XX by MIT-OZ via Chaosnet; 18 Feb 84 15:39-EST
Date: Saturday, 18 February 1984, 13:49-EST
From: Alan T. Sherman <SHERMA at MIT-MC>
Subject: How to change default parameters for hardcopying files?
To: BUG-LISPM at MIT-OZ

In Release 4.5, site configuration 62, on PI Project:

Please let me know how to set new default parameter values for
hardcopying files. For example, I prefer 8pt font to 10pt font for most
output, and I get tried of manually saying 8pt for each file to be
printed.		-Thanks.
18-Feb-84 15:41:09-EST,356;000000000000
Received: from MIT-XX by MIT-OZ via Chaosnet; 18 Feb 84 15:39-EST
Date: Saturday, 18 February 1984, 13:51-EST
From: Alan T. Sherman <SHERMA at MIT-MC>
Subject: Listing a system
To: BUG-LISPM at MIT-OZ

In Release 4.5, site configuration 62, on PI Project:

I would like to know if there is a facility for getting a listing of an
entire system.  
18-Feb-84 17:28:40-EST,1033;000000000000
Received: from SCRC-YUKON by MIT-OZ via Chaosnet; 18 Feb 84 17:28-EST
Received: from SCRC-CUYAHOGA by SCRC-YUKON with CHAOS; Sat 18-Feb-84 17:25:08-EST
Date: Saturday, 18 February 1984, 17:31-EST
From: Robert A. Cassels <Cassels at SCRC-TENEX>
Subject: How to change default parameters for hardcopying files?
To: SHERMA at MIT-MC, BUG-LISPM at MIT-OZ
In-reply-to: The message of 18 Feb 84 13:49-EST from Alan T. Sherman <SHERMA at MIT-MC>

    Date: Saturday, 18 February 1984, 13:49-EST
    From: Alan T. Sherman <SHERMA at MIT-MC>

    In Release 4.5, site configuration 62, on PI Project:

    Please let me know how to set new default parameter values for
    hardcopying files. For example, I prefer 8pt font to 10pt font for most
    output, and I get tried of manually saying 8pt for each file to be
    printed.		-Thanks.

I'm pretty sure this works in Release 4.5.  It certainly does in Release 5.

(login-forms
  (setq si:*hardcopy-default-fonts*
	'(("Winnipesaukee" :default-font fonts:fix9)))
  )
18-Feb-84 19:49:50-EST,1138;000000000000
Received: from MIT-LISPM-31 by MIT-OZ via Chaosnet; 18 Feb 84 19:49-EST
Date: Saturday, 18 February 1984, 19:48-EST
From: Leigh L. Klotz <KLOTZ at MIT-OZ>
Subject: compiling a file from the editor when the previous qfasl file is offline.
To: BUG-LISPM at MIT-OZ

In System 98.32, CADR 3.6, ZMail 53.10, MIT-Specific 22.0, microcode 306,
on Lisp Machine Thirty-one:


Insert your description of the circumstances here:

Why does it matter if the previous QFASL file is offline when I'm trying to compile?

>>ERROR: File is off-line for OZ:PS:<KLOTZ>LMSPELL.QFASL.9
Backtrace from the debugger:

FS:OPEN-CHAOS (P.C. = 1521)
OPEN (P.C. = 212)
QC-FILE (P.C. = 1005)
EDITOR-COMPILE-FILE (P.C. = 166)
COM-COMPILE-FILE (P.C. = 37)
COM-EXTENDED-COMMAND (P.C. = 67)
COMMAND-EXECUTE (P.C. = 115)
PROCESS-COMMAND-CHAR (P.C. = 65)
(:METHOD WINDOW :EDIT) (P.C. = 464)
(:INTERNAL (:METHOD ZMACS-WINDOW :COMBINED :EDIT) 0) (P.C. = 74)
FUNCALL (P.C. = 25)
(:METHOD DISPLAYER :AROUND :EDIT) (P.C. = 31)
(:METHOD ZMACS-WINDOW :COMBINED :EDIT) (P.C. = 47)
ZMACS-WINDOW-TOP-LEVEL (P.C. = 46)
SI:PROCESS-TOP-LEVEL (P.C. = 152)
19-Feb-84 15:35:40-EST,1345;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 19 Feb 84 15:34-EST
Received: from SCRC-MOBILE by SCRC-STONY-BROOK with CHAOS; Sun 19-Feb-84 15:32:07-EST
Date: Sunday, 19 February 1984, 15:38-EST
From: David E. Goldfarb <DEG at SCRC-TENEX>
Subject: Listing a system
To: SHERMA at MIT-MC, BUG-LISPM at MIT-OZ
Cc: DEG at SCRC-TENEX
In-reply-to: The message of 18 Feb 84 13:51-EST from Alan T. Sherman <SHERMA at MIT-MC>

    Date: Saturday, 18 February 1984, 13:51-EST
    From: Alan T. Sherman <SHERMA at MIT-MC>
    In Release 4.5, site configuration 62, on PI Project:

    I would like to know if there is a facility for getting a listing of an
    entire system.  

Well, I think this should do the trick in 4.5 or 5.0, but I have not really
tested it.

(defun print-system (system &optional (version ':latest))
  (loop with si:*read-system-directory-results* = nil
	for file in (si:get-system-version-files system version ':no-objects t)
	do (si:hardcopy-text-file file si:*default-hardcopy-device*)))

This will only work for patchable systems.  If you want to print non-patchable
systems, the following should work in all but the most pathological cases

(defun print-system1 (system)
  (loop for file in (si:system-source-files system)
	do (si:hardcopy-text-file file si:*default-hardcopy-device*)))
20-Feb-84 03:53:34-EST,356;000000000000
Received: from MIT-XX by MIT-OZ via Chaosnet; 20 Feb 84 03:53-EST
Date: Saturday, 18 February 1984, 16:04-EST
From: Alan T. Sherman <SHERMA at MIT-MC>
Subject: Listing a system
To: BUG-LISPM at MIT-OZ

In Release 4.5, site configuration 62, on PI Project:

I would like to know if there is a facility for getting a listing of an
entire system.  
20-Feb-84 04:01:35-EST,924;000000000000
Received: from MIT-XX by MIT-OZ via Chaosnet; 20 Feb 84 04:01-EST
Date: Sunday, 19 February 1984, 18:46-EST
From: scott a douglass <SAD at MIT-XX>
To: BUG-lispm at MIT-OZ

In Release 5.0 [GC'd Beta Test rev 3], microcode TMC5-MIC 262, FEP 18,
corrected dusty plum, on Lisp Machine Robot-1 (3600):

while logged in as namespace user object "sad" I tryied to save a file to
multics (i.e. c-X c-W multics:test).  This didn't work and it broke  all of
the save commands I could find.  The error message was:  (copied by hand)

>>Trap: The argument given to the car instruction, "sad", was not a list, locative or nil.

(:defun-method fs:multics-directory-string):
   Arg 0 (self): #<MULTICS-PATHNAME <<Error printing value>>
   Arg 1 (self-mapping-table): #<Map to flavor fs:multics-pathname-mixin -- 4. IV's, 1. FL's 25263747>

note that the first argument really did have unmatched <>'s. Thanks.
			-scott
20-Feb-84 04:54:05-EST,2514;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 20 Feb 84 04:53-EST
Date: Monday, 20 February 1984, 04:50-EST
From: Christopher C. Stacy <CStacy at MIT-MC>
To: BUG-LISPM at MIT-OZ

In System 242.269, imperial purple, on Lisp Machine Jimi Hendrix (3600):

ZMAIL bombed out while selecting messages via a fairly simple filter
which I created using menu items on the filter-creation pane frob.

>>Trap: The first argument given to the SYS:--INTERNAL instruction, ((2663899200. NIL)), was not a number.
While in the function TIME-LESSP  (:PROPERTY ZWEI:EVENT ZWEI:FILTER-FUNCTION)  ZWEI:MSG-FITS-FILTER-P

TIME-LESSP:  (P.C. = 3)
   Arg 0 (TIME1): ((2663899200. NIL))
   Arg 1 (TIME2): 2655107371.

(:PROPERTY ZWEI:EVENT ZWEI:FILTER-FUNCTION):  (from MC: CSTACY; ZMAIL)
   Arg 0 (MSG): #<MSG 3413721>

ZWEI:MSG-FITS-FILTER-P:  (P.C. = 12)
   Arg 0 (MSG): #<MSG 3413721>
   Arg 1 (FILTER): ZWEI:EVENT

(:PROPERTY ZWEI:|Noname-1| ZWEI:FILTER-FUNCTION):  (P.C. = 13)
   Arg 0 (MSG): #<MSG 3413721>

ZWEI:MSG-FITS-FILTER-P:  (P.C. = 12)
   Arg 0 (MSG): #<MSG 3413721>
   Arg 1 (FILTER): ZWEI:|Noname-1|

(:METHOD ZWEI:SEQUENCE :MAP-OVER-UNIVERSE):  (P.C. = 21)
   Arg 0 (SELF): #<BABYL-BUFFER "MC: CSTACY; CSTACY BABYL" 6376604>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:SEQUENCE -- 5. IV's, 0. FL's 4206151>
   Arg 2 (OPERATION): :MAP-OVER-UNIVERSE
   Arg 3 (FILTER-FUNCTION): ZWEI:MSG-FITS-FILTER-P
   Arg 4 (FILTER-ARG): ZWEI:|Noname-1|
   Arg 5 (PROCESSING-FUNCTION): #<DTP-COMPILED-FUNCTION (:INTERNAL ZWEI:MAKE-COLLECTION-FROM-FILTER 0.) 31677763>
   Arg 6 (PROCESSING-ARG): #<ART-Q-100. 25363114>

(:METHOD ZWEI:ITS-BUFFER-MIXIN :COMBINED :MAP-OVER-UNIVERSE):  (P.C. = 16)
   Arg 0 (SELF): #<BABYL-BUFFER "MC: CSTACY; CSTACY BABYL" 6376604>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ITS-BUFFER-MIXIN -- 0. IV's, 3. FL's 4206126>
   Rest arg (.DAEMON-CALLER-ARGS.): (:MAP-OVER-UNIVERSE ZWEI:MSG-FITS-FILTER-P ZWEI:|Noname-1| #<DTP-COMPILED-FUNCTION (:INTERNAL ZWEI:MAKE-COLLECTION-FROM-FILTER 0.) 31677763> #<ART-Q-100. 25363114>)

ZWEI:MAKE-COLLECTION-FROM-FILTER:  (P.C. = 33)
   Arg 0 (UNIVERSE): #<BABYL-BUFFER "MC: CSTACY; CSTACY BABYL" 6376604>
   Arg 1 (FILTER-FUNCTION): ZWEI:MSG-FITS-FILTER-P
   Arg 2 (FILTER-ARG): ZWEI:|Noname-1|
   --Defaulted args:--
   Arg 3 (COLLECTION): #<COLLECTION "[MC: CSTACY; CSTACY BABYL]<Noname-1>" 25363101>

Rest of stack:
ZWEI:GET-FILTER-COLLECTION:  (P.C. = 7)
ZWEI:COM-ZMAIL-SELECT:  (P.C. = 21)
20-Feb-84 10:17:35-EST,719;000000000000
Received: from SCC-WAIKATO by MIT-OZ via Chaosnet; 20 Feb 84 10:17-EST
Received: from SCC-GLACIER by SCC-WAIKATO with CHAOS; Mon 20-Feb-84 10:19:35-EST
Date: Monday, 20 February 1984, 10:19-EST
From: David Schatsky <schatsky at SCC-WAIKATO>
Subject: Listing a system
To: SHERMA at MIT-MC, BUG-LISPM at MIT-OZ
In-reply-to: The message of 18 Feb 84 13:51-EST from Alan T. Sherman <SHERMA at MIT-MC>

    Date: Saturday, 18 February 1984, 13:51-EST
    From: Alan T. Sherman <SHERMA at MIT-MC>

    In Release 4.5, site configuration 62, on PI Project:

    I would like to know if there is a facility for getting a listing of an
    entire system.  

Maybe (si:describe-system . . . .) is what you want?
20-Feb-84 12:06:15-EST,1029;000000000000
Received: from SCRC-TENEX by MIT-OZ via Chaosnet; 20 Feb 84 12:05-EST
Date: Monday, 20 February 1984  12:00-EST
From: David C. Plummer <DCP at SCRC-TENEX>
To:   David Schatsky <schatsky at SCC-WAIKATO>
Cc:   BUG-LISPM at MIT-OZ, SHERMA at MIT-MC
Subject: Listing a system
In-reply-to: The message of 20 Feb 1984 10:19-EST from David Schatsky <schatsky at SCC-WAIKATO>

    Date: Monday, 20 February 1984, 10:19-EST
    From: David Schatsky <schatsky at SCC-WAIKATO>

        Date: Saturday, 18 February 1984, 13:51-EST
        From: Alan T. Sherman <SHERMA at MIT-MC>

        In Release 4.5, site configuration 62, on PI Project:

        I would like to know if there is a facility for getting a listing of an
        entire system.  

Didn't you ask this about 4 days ago, or was that somebody else?

    Maybe (si:describe-system . . . .) is what you want?

Goldfarb gave the correct answer (yesterday?), which has the word
"hardcopy" in it a few times.  Sherman wants a listing, not a
description.
20-Feb-84 12:47:11-EST,1475;000000000000
Received: from MIT-AVATAR by MIT-OZ via Chaosnet; 20 Feb 84 12:46-EST
Date: Monday, 20 February 1984, 12:45-EST
From: Apprentice for KMP <kbe at MIT-OZ>
Subject: Misleading error diagnostics in ZWEI
To: BUG-LISPM at MIT-OZ

In Symbolics Release 4.5 on PA Lisp Machine Avatar (CADR):

c-sh-C, c-sh-E, etc. in a buffer with no text or with no 
open parens in column 0 blindly respond with
"Unbalanced parentheses" without bothering to check that
this is the real source of the problem.

If, for example, I had a definition which was slightly indented,
such as this one:
 (DEFUN FACTORIAL (X) (IF (ZEROP X) 1 (* X (FACTORIAL (1- X)))))
and I typed c-sh-C while in the middle of it, I might be greatly
confused by its saying my parens were messed up.

The reason for the problem, by the way, is that their common
subroutine, ZWEI:COMPILE-DEFINITION-INTERVAL, calls 
ZWEI:DEFINITION-INTERVAL expecting to get a node back. If it
gets a NIL instead, it just guesses (sometimes incorrectly) 
as to why. In fact, ZWEI:DEFINITION-INTERVAL can return NIL 
for a variety of reasons and the error message from 
ZWEI:COMPILE-DEFINITION-INTERVAL should acknowledge the fact.

I also do not like that half the error messages in ZWEI end
with period and the other half do not. I would prefer they all
ended with period (at least in the case where this did not cause
visual confusion). I would be satisfied if they all seemed
to try to do something consistent.
20-Feb-84 15:25:00-EST,1638;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 20 Feb 84 15:24-EST
Received: from SCRC-MERRIMACK by SCRC-STONY-BROOK with CHAOS; Mon 20-Feb-84 15:22:32-EST
Return-path: <MMcM%SCRC-MERRIMACK@MIT-MC.ARPA>
Date: Monday, 20 February 1984, 15:23-EST
From: Mike McMahon <MMcM at SCRC-TENEX>
To: Christopher C. Stacy <CStacy at MIT-MC>
cc: BUG-LISPM at MIT-OZ
In-Reply-To: The message of 20 Feb 84 04:50-EST from Christopher C. Stacy <CStacy at MIT-MC>
Message-ID: <840220152357.4.MMcM@TENEX.SCRC.Symbolics>

    Date: Monday, 20 February 1984, 04:50-EST
    From: Christopher C. Stacy <CStacy at MIT-MC>

    In System 242.269, imperial purple, on Lisp Machine Jimi Hendrix (3600):

    ZMAIL bombed out while selecting messages via a fairly simple filter
    which I created using menu items on the filter-creation pane frob.

    >>Trap: The first argument given to the SYS:--INTERNAL instruction, ((2663899200. NIL)), was not a number.
    While in the function TIME-LESSP  (:PROPERTY ZWEI:EVENT ZWEI:FILTER-FUNCTION)  ZWEI:MSG-FITS-FILTER-P

    TIME-LESSP:  (P.C. = 3)
       Arg 0 (TIME1): ((2663899200. NIL))
       Arg 1 (TIME2): 2655107371.

    (:PROPERTY ZWEI:EVENT ZWEI:FILTER-FUNCTION):  (from MC: CSTACY; ZMAIL)

Looks like your filter is comparing reminder times with regular times.
The CAR if a reminder time is the actual time, the CADR tells whether an
explicit time of day was specified.
Furthermore, even though TIME-LESSP has the word TIME in it, it isn't what
you use to compare universal times, since they are bignums, not fixnums
with possible wraparound.  Use regular old <.
20-Feb-84 20:35:10-EST,1168;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 20 Feb 84 20:34-EST
Date: Monday, 20 February 1984, 20:32-EST
From: Daniel Weise <DANIEL at MIT-MC>
Subject: Lisp Stopped Itself
To: BUG-LISPM at MIT-OZ

In System 242.269, FEP 18, patched imperial purple, on Lisp Machine Jim Morrison (3600):

I was doing C-sh-C in the editor (it was doing the compile) when lisp stopped itself.
fep> show status revealed:

Lbus Control: Use Uncorrected Data, Ignore Double ECC Error, Task 3 Dismiss
Sequencer error status: Microcode halted
Sequencer misc states: TSK-STOP (sequencer stopped), Errhalt-Sync
3600 pcs:
MacroPC/ (even) 1274434
CPC/ 15527
OPC+0/ 46735
   +1/ 50004
   +2/ 4400
   +3/ 53777
   +4/ 51624
   +5/ 47146
   +6/ 47155
   +7/ 54000
   +10/ 40430
   +11/ 47042
   +12/ 51234
   +13/ 54012
   +14/ 44400
   +15/ 40410
   +16/ 53777
   +17/ 51340


Experimentation revealed that it was stopping itself because I had
(local-declare (special *changed*) ...  instead of
(local-declare ((special *changed*)) ... 
I changed back and forth between the two. Lisp stopped itself every time there
was only one set of parens.


Daniel
21-Feb-84 14:51:15-EST,1096;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 21 Feb 84 13:58-EST
Received: from SCRC-HARLEM by SCRC-QUABBIN with CHAOS; Tue 21-Feb-84 14:00:04-EST
Date: Tuesday, 21 February 1984, 13:56-EST
From: Joseph R Goldstone <joseph at SCRC-QUABBIN>
Subject: Multics pathname problems in dusty plum
To: scott a douglass <SAD at MIT-XX>
Cc: bug-lispm at MIT-OZ
In-reply-to: The message of 19 Feb 84 18:46-EST from scott a douglass <SAD at MIT-XX>

    Date: Sunday, 19 February 1984, 18:46-EST
    From: scott a douglass <SAD at MIT-XX>
    In Release 5.0 [GC'd Beta Test rev 3], microcode TMC5-MIC 262, FEP 18,
    corrected dusty plum, on Lisp Machine Robot-1 (3600):

if at all possible, you should use a more recent band.  dusty plum
is more than 50 patches out of date; in particluar it is missing some
pathname patches that may help in this case.  Robot-4 has a purple.load
world load in its FEP filesystem; try snarfing that.

you might also try specifying a pathname more likely to be acceptable to
Multics, e.g. >udd>StudentAD>Douglass>test.text or something like that.
21-Feb-84 16:37:26-EST,1125;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 21 Feb 84 16:07-EST
Date: Tuesday, 21 February 1984, 16:01-EST
From: Ed Barton <EB at OZ>
Subject: CALL seems to be broken
To: BUG-LISPM at OZ

In Release 4.5, FEP 17, site configuration 83, on Lisp Machine Bing Crosby:

(DEFUN F (X) 
  (CALL #'LIST '(:SPREAD) X))
(F '(1 2))

>>Trap: The argument given to CAR, #<DTP-COMPILED-FUNCTION LIST 1205371>, was not a list, a locative or NIL.
While in the function CALL  F  SI:*EVAL

CALL:  (P.C. = 155)
   Arg 0 (FN): #<DTP-COMPILED-FUNCTION LIST 1205371>
   Rest arg (ALTERNATES): ((SPREAD) (1 2))
   Local 2 (MAX-ARGS): 376
   Local 3 (COUNT-ONLY): NIL
   Local 4 (N-ARGS): 2
   Local 5 (Y): #<DTP-COMPILED-FUNCTION LIST 1205371>
   Local 6 (OPTIONAL-FLAG): ((SPREAD) (1 2))
   Local 7 (SPREAD-FLAG): NIL

F:
   Arg 0 (X): (1 2)

SI:*EVAL:  (P.C. = 715)
   Arg 0 (FORM): (F (QUOTE (1 2)))

SI:LISP-TOP-LEVEL1:  (P.C. = 130)
   Arg 0 (TERMINAL-IO-initialization): #<LISP-LISTENER Lisp Listener 3 5700255 exposed>

SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
   --Defaulted args:--
   Arg 0 (IGNORE): NIL
21-Feb-84 17:59:23-EST,958;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 21 Feb 84 17:58-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK with CHAOS; Tue 21-Feb-84 16:44:22-EST
Return-path: <DCP%SCRC-NEPONSET@MIT-MC.ARPA>
Date: Tuesday, 21 February 1984, 16:45-EST
From: David C. Plummer <DCP at SCRC-TENEX>
Subject: CALL seems to be broken
To: EB at MIT-OZ, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 21 Feb 84 16:01-EST from Ed Barton <EB at MIT-OZ>

    Date: Tuesday, 21 February 1984, 16:01-EST
    From: Ed Barton <EB at OZ>

    In Release 4.5, FEP 17, site configuration 83, on Lisp Machine Bing Crosby:

    (DEFUN F (X) 
      (CALL #'LIST '(:SPREAD) X))
    (F '(1 2))

    >>Trap: The argument given to CAR, #<DTP-COMPILED-FUNCTION LIST 1205371>, was not a list, a locative or NIL.
    While in the function CALL  F  SI:*EVAL

I fixed CALL (it took me several tries) long ago.  I guess 4.5 isn't
long ago enough.  Try Release 5.
21-Feb-84 18:00:27-EST,1031;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 21 Feb 84 17:58-EST
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK with CHAOS; Tue 21-Feb-84 17:12:32-EST
Date: Tuesday, 21 February 1984, 17:14-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: CALL seems to be broken
To: Ed Barton <EB at MIT-OZ>
Cc: BUG-LISPM at MIT-OZ
In-reply-to: The message of 21 Feb 84 16:01-EST from Ed Barton <EB at MIT-OZ>

    Date: Tuesday, 21 February 1984, 16:01-EST
    From: Ed Barton <EB at OZ>

    In Release 4.5, FEP 17, site configuration 83, on Lisp Machine Bing Crosby:

    (DEFUN F (X) 
      (CALL #'LIST '(:SPREAD) X))
    (F '(1 2))

    >>Trap: The argument given to CAR, #<DTP-COMPILED-FUNCTION LIST 1205371>, was not a list, a locative or NIL.
    While in the function CALL  F  SI:*EVAL

It works in system 243.  I think it also works in beta-test 5.0 although I didn't
test it there.  It doesn't compile very well and is not considered to be a first-line
supported feature, but it does work.
22-Feb-84 02:42:46-EST,5286;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 22 Feb 84 02:42-EST
Date: Wednesday, 22 February 1984, 01:49-EST
From: Tim McNerney <TIM at MIT-MC>
To: BUG-LISPM at MIT-OZ

In System 98.32, CADR 3.6, ZMail 53.10, MIT-Specific 22.0, microcode 306,
on Lisp Machine Thirty-one:


Insert your description of the circumstances here:

Perhaps Corwin's chaosnet software is a bit out of date (soon to be updated),
but seriously, it shouldn't lose so badly.

>>ERROR: Unknown Open Option for CORWIN:NIL$DISK:[NIL.IO]IOS.LSP;183
Backtrace from the debugger:

FS:OPEN-CHAOS (P.C. = 1521)

 Arg 0 (HOST): #FS:VMS-CHAOS-HOST "MIT-CORWIN"
 Arg 1 (PATHNAME): #FS:VMS-PATHNAME "CORWIN:NIL$DISK:[NIL.IO]IOS.LSP;183"
 Rest arg (OPTIONS): (:DIRECTION :INPUT :CHARACTERS T ...)
Local 1 (DIRECTION): :INPUT
Local 2 (CHARACTERS): T
Local 3 (ERROR): T
Local 4 (ACCESS-ERROR): NIL
Local 5 (ELEMENT-TYPE): STRING-CHAR
Local 6 (IF-EXISTS): :ERROR
Local 7 (IF-DOES-NOT-EXIST): :ERROR
Local 8 (TEMPORARY): NIL
Local 9 (DELETED): NIL
Local 10 (RAW): NIL
Local 11 (SUPER-IMAGE): NIL
Local 12 (BYTE-SIZE): :DEFAULT
Local 13 (PRESERVE-DATES): NIL
Local 14 (INHIBIT-LINKS): NIL
Local 15 (ELEMENT-TYPE-P): NIL
Local 16 (HOST-UNIT): #<HOST-UNIT 35437142>
Local 17 (DATA-CONN): (#<CHAOS Connection 37726215> "I1330" "O1331" 6184832. ...)
Local 18 (PKT): #<CHAOS packet. PKT-STRING "T1338 I1330 ERROR UUO C Unknown Open Option" PKT-STATUS NIL 43032375>
Local 19 (SUCCESS): NIL
Local 20 (STRING): "I1330 ERROR UUO C Unknown Open Option"
Local 21 (NOT-ABORTED): T
Local 22 (PHONY-CHARACTERS): NIL
Local 23 (SIGN-EXTEND-BYTES): NIL
Local 24 (IF-EXISTS-P): T
Local 25 (*SELECTQ-ITEM*): 183.
Local 26 (ERROR-OBJECT): (#<CHAOS Connection 37726215> "I1330" "O1331" 6184832. ...)
Local 27: ((FS:FILE-NOT-FOUND SI:CONDITION-CASE-THROW G2542) (** SI:EVAL-ABORT-TRIVIAL-ERRORS-HANDLER))
Local 28: (FS:FILE-NOT-FOUND SI:CONDITION-CASE-THROW G2542)
Local 29: (FS:FILE-ALREADY-EXISTS SI:CONDITION-CASE-THROW G2549)
Local 30: ((FS:FILE-ALREADY-EXISTS SI:CONDITION-CASE-THROW G2549) (** SI:EVAL-ABORT-TRIVIAL-ERRORS-HANDLER))
Local 31 (PROPERTIES): NIL
Local 32 (CLOSE-SUCCESS): NIL
Local 33 (ERROR-OBJECT): NIL
Local 34 (IGNORE): NIL


(:METHOD FS:CHAOS-PATHNAME :OPEN) (P.C. = 31)
  (SELF is #FS:VMS-PATHNAME "CORWIN:NIL$DISK:[NIL.IO]IOS.LSP;183")

 Arg 0 (OPERATION): :OPEN
 Arg 1 (PATHNAME): #FS:VMS-PATHNAME "CORWIN:NIL$DISK:[NIL.IO]IOS.LSP;183"
 Rest arg (OPTIONS): (:DIRECTION :INPUT :CHARACTERS T ...)


OPEN (P.C. = 212)

 Arg 0 (FILENAME): #FS:VMS-PATHNAME "CORWIN:NIL$DISK:[NIL.IO]IOS.LSP;183"
 Rest arg (KEYWORD-ARGS): (:DIRECTION :INPUT :CHARACTERS T ...)
Local 1: ((FS:FILE-ERROR) SI:FILE-RETRY-HANDLER #FS:VMS-PATHNAME "CORWIN:NIL$DISK:[NIL.IO]IOS.LSP;183")
Local 2: ((** SI:FILE-RETRY-HANDLER #FS:VMS-PATHNAME "CORWIN:NIL$DISK:[NIL.IO]IOS.LSP;183") (** SI:EVAL-ABORT-TRIVIAL-ERRORS-HANDLER))
Local 3 (NEW-PATHNAME): NIL
Local 4 (KEYL): NIL
Local 5 (KEY): NIL
Local 6 (CHARACTERS): NIL
Local 7 (DIRECTION): NIL
Local 8 (BYTE-SIZE): NIL
Local 9 (ERROR-P): NIL
Local 10 (ERROR-P-SPECD): NIL
Local 11 (DELETED-P): NIL
Local 12 (TEMPORARY-P): NIL
Local 13 (RAW-P): NIL
Local 14 (SUPER-IMAGE-P): NIL


FS:PRIMITIVE-COPY-FILE (P.C. = 567)

 Arg 0 (INPUT-PLIST-OR-PATHNAME): #FS:VMS-PATHNAME "CORWIN:NIL$DISK:[NIL.IO]IOS.LSP"
 Arg 1 (MAPPED-PATHNAME): #FS:VMS-PATHNAME "CORWIN:NIL$DISK:[NIL.IO]IOS.LSP"
 Arg 2 (OUTPUT-SPEC): #FS:ITS-PATHNAME "MC: NILIO; IOS >"
 Rest arg: NIL
Local 1 (ERROR): T
Local 2 (COPY-CREATION-DATE): T
Local 3 (COPY-AUTHOR): T
Local 4 (REPORT-STREAM): NIL
Local 5 (CREATE-DIRECTORIES): :QUERY
Local 6 (CHARACTERS): :DEFAULT
Local 7 (BYTE-SIZE): :DEFAULT
Local 8 (INTYPE): :LISP
Local 9 (INPUT-PLIST): (#FS:VMS-PATHNAME "CORWIN:NIL$DISK:[NIL.IO]IOS.LSP;183" :CREATION-DATE 2655243045. :BLOCK-SIZE ...)
Local 10 (INPUT-PATHNAME): #FS:VMS-PATHNAME "CORWIN:NIL$DISK:[NIL.IO]IOS.LSP;183"
Local 11 (INPUT-TRUENAME): NIL
Local 12 (BYTE-SIZE): NIL
Local 13 (CHARACTERS?): T
Local 14: ((FS:FILE-ERROR SYSTEM:REMOTE-NETWORK-ERROR) SI:CONDITION-CASE-THROW G0319)
Local 15: ((** SI:CONDITION-CASE-THROW G0319) (** SI:EVAL-ABORT-TRIVIAL-ERRORS-HANDLER))
Local 16: NIL
Local 17 (.FILE-ABORTED-FLAG.): :ABORT
Local 18 (INSTREAM): NIL
Local 19 (DEFAULTED-NEW-NAME): NIL
Local 20: NIL
Local 21: NIL
Local 22: NIL
Local 23 (.FILE-ABORTED-FLAG.): NIL
Local 24 (OUTSTREAM): NIL
Local 25 (ERROR): NIL
Local 26 (*SELECTQ-ITEM*): NIL


(:METHOD PATHNAME :WILDCARD-MAP) (P.C. = 152)
  (SELF is #FS:VMS-PATHNAME "CORWIN:NIL$DISK:[NIL.IO]IOS.LSP")

 Arg 0 (OPERATION): :WILDCARD-MAP
 Arg 1 (OPERATION): #<DTP-FEF-POINTER FS:PRIMITIVE-COPY-FILE 30516727>
 Arg 2 (PLISTP): :MAYBE
 Arg 3 (DIR-LIST-OPTIONS): NIL
 Rest arg (ARGS): (#FS:VMS-PATHNAME "CORWIN:NIL$DISK:[NIL.IO]IOS.LSP" #FS:ITS-PATHNAME "MC: NILIO; IOS >")
Local 1 (DLIST): NIL
Local 2 (RESULTS): NIL
Local 3: NIL
Local 4 (DLIST-ENTRY): NIL
Local 5 (RESULT): NIL


Remainder of stack:

COPY-FILE (P.C. = 230)
SI:EVAL1 (P.C. = 1324)
SI:EVAL-ABORT-TRIVIAL-ERRORS (P.C. = 61)
SI:LISP-TOP-LEVEL1 (P.C. = 426)
SI:LISP-TOP-LEVEL2 (P.C. = 27)
SI:PROCESS-TOP-LEVEL (P.C. = 246)
SI:LISP-TOP-LEVEL (P.C. = 47)
22-Feb-84 13:03:10-EST,1391;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 22 Feb 84 12:54-EST
Received: from SCRC-THAMES by SCRC-STONY-BROOK with CHAOS; Wed 22-Feb-84 12:42:02-EST
Return-path: <SWM%SCRC-THAMES@MIT-MC.ARPA>
Date: Wednesday, 22 February 1984, 12:40-EST
From: Scott McKay <SWM at SCRC-QUABBIN>
To: TIM at MIT-MC, BUG-LISPM at MIT-OZ
cc: CStacy at MIT-MC
In-Reply-To: The message of 22 Feb 84 01:49-EST from Tim McNerney <TIM at MIT-MC>

    Date: Wednesday, 22 February 1984, 01:49-EST
    From: Tim McNerney <TIM at MIT-MC>

    In System 98.32, CADR 3.6, ZMail 53.10, MIT-Specific 22.0, microcode 306,
    on Lisp Machine Thirty-one:


    Insert your description of the circumstances here:

    Perhaps Corwin's chaosnet software is a bit out of date (soon to be updated),
    but seriously, it shouldn't lose so badly.

    >>ERROR: Unknown Open Option for CORWIN:NIL$DISK:[NIL.IO]IOS.LSP;183

Why shouldn't it lose so badly when there is an unknown option?  What
should a file server do in that case?  I claim that it should barf.  The
LispM blows out when it sees that Corwin has barfed.

I don't know exactly what open option the VMS file server doesn't like
(several new ones have been added in the last few months...), but you
should probably see CStacy about getting more recent Chaosnet software
onto Corwin.  If it still blows out after that, tell me.
22-Feb-84 16:41:13-EST,851;000000000000
Received: from MIT-EECS by MIT-OZ via Chaosnet; 22 Feb 84 16:29-EST
Date: Wednesday, 22 February 1984, 16:27-EST
From: Daniel Weise <DANIEL at MIT-MC>
Subject: You can't blame with one on VMS!
To: BUG-LISPM at MIT-OZ

In Release 5.0 [Beta Test rev 4], FEP 18, imperial purple, on Lisp Machine Janis Joplin (3600):

When I c-X c-F dpl:dpl;find Zwei loads FIND.LISP PS:<DPL.MIT> OZ:  but
when dpl:dpl; files get loaded as a result of Tags Search or m-.
the file name Zwei gets ahold of is FOO.LISP :<DPL.MIT> OZ:  Notice
the lack of a PS: in that one.  Therefore if I c-X c-F a file which
is later wanted by tags search, tags search loads a second copy of the same
file under a different name and confusion and divergent changes occurs.

Can't the different file loaders get their act together and agree on default
devices?

Daniel

22-Feb-84 16:56:33-EST,1086;000000000000
Received: from MIT-LISPM-1 by MIT-OZ via Chaosnet; 22 Feb 84 16:44-EST
Date: Wednesday, 22 February 1984, 16:45-EST
From:  <Mly at MIT-OZ>
Subject: atan/atan2 -- possible changes.
To: info-lispm at MIT-OZ

Here's how things stand at the present:

There presently are two functions for taking arctangents,
"atan" and "atan2".

The difference between them is that atan returns a value
in the range 0 to 2*pi, whereas atan2 returns a value in
the range -pi to pi.
(ie  atan:(RxR)  [0,2]
    atan2:(RxR)  [-,])

atan is defined the way it is mainly for maclisp compatibility --
nearly everybody else in the computer languages world (*including
common lisp*) believes that a function called "atan" should return
what the lisp machine's atan2 returns.

So, the $64000 question is:
 Would anybody like to vote on whether the definition of atan
 should change to be what atan2 is now???

Such a change would not take place immediately, and in the meantime
the compiler could generate a warning saying to use atan2, whose
definition will not change.

Thanks.
22-Feb-84 17:32:13-EST,770;000000000000
Received: from MIT-AVATAR by MIT-OZ via Chaosnet; 22 Feb 84 17:22-EST
Date: Wednesday, 22 February 1984, 17:22-EST
From: Kent M Pitman <kmp at MIT-OZ>
Subject: 1.0e+6 vs 1.0E+6
To: BUG-LISPM at MIT-OZ
Cc: KBE-I-FILE at MIT-OZ, KMP at MIT-OZ

In Release 4.5 on PA Lisp Machine Avatar:

It would be nice if there were an advertised switch variable
controlling whether floating point numbers printed with the
"e" in complemented case. In particular, we use the Lisp floating
point number printer to display floating point numbers in the
PL/1 component of our system and since PL/1 is, in most 
implementations, case sensitive, we'd prefer in that context
to see the E in the same case as the rest of the code. Is this
reasonable or should we just use ~ ?
22-Feb-84 19:18:57-EST,903;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 22 Feb 84 19:18-EST
Received: from SCRC-AMAZON by SCRC-STONY-BROOK with CHAOS; Wed 22-Feb-84 19:19:38-EST
Date: Wednesday, 22 February 1984, 19:22-EST
From: Philip Greenspun <philg at SCRC-QUABBIN>
Subject: Faster :DRAW-FILLED-IN-CIRCLE method
To: Dinarte R. Morais <DRM at MIT-XX>
Cc: bug-lispm at MIT-OZ
In-reply-to: The message of 17 Feb 84 15:49-EST from Dinarte R. Morais <DRM at MIT-XX>

Thank you very much for the code.  I wrote the :DRAW-FILLED-IN-CIRCLE
method in 242.235 and have some left-over tools for testing such a
method.  I will spend some time this week testing your code and metering
it.  If it turns out to be better (as I'm sure it will), I will install
it.  You will get the improved method as part of Release 5.1 probably.
With customers like you, we don't need employees like me!

Thanks again,

Philip
22-Feb-84 19:49:31-EST,3244;000000000000
Received: from MIT-EECS by MIT-OZ via Chaosnet; 22 Feb 84 19:48-EST
Date: Wednesday, 22 February 1984, 19:51-EST
From: Richard E. Zippel <RZ at MIT-MC>
Subject: ZMail bug
To: BUG-LISPM at MIT-OZ

In System 242.269, Experimental Schema 13.0, patched imperial purple, on Lisp Machine John Lennon (3600):

I hit mous left at the very top of the user options pane in the profile
configuration of the mailer, causing the following to happen.

>>Error: The object #<ZMAIL-CHOOSE-VARIABLE-VALUES-PANE Zmail Choose Variable Values Pane 1 3424013 exposed> received a :SET-ACCENT message, which went unclaimed.
         The rest of the message was (T)
While in the function (:INTERNAL ZMAIL-PROFILE-COMMAND-LIST 1)  ZMAIL-PROFILE-COMMAND-LIST  (:METHOD ZMAIL-PROFILE-EDITOR :PROCESS-SPECIAL-COMMAND)

(:INTERNAL ZMAIL-PROFILE-COMMAND-LIST 1):  (P.C. = 11)
   Arg 0 (**DEFSELECT-OP**): :MOUSE-BUTTON
   Arg 1 (CH): 32768
   Arg 2 (WINDOW): #<ZMAIL-CHOOSE-VARIABLE-VALUES-PANE Zmail Choose Variable Values Pane 1 3424013 exposed>
   Arg 3 (IGNORE): 348
   Arg 4 (IGNORE): 10
   Local 5 (WINDOW-NAME): NIL
   Local 6 (NEAR-MODE): NIL

ZMAIL-PROFILE-COMMAND-LIST:  (P.C. = 22)
   Arg 0 (OPERATION): :MOUSE-BUTTON
   Rest arg (SELECT-METHOD-ARGS): (32768 #<ZMAIL-CHOOSE-VARIABLE-VALUES-PANE Zmail Choose Variable Values Pane 1 3424013 exposed> 348 10)

(:METHOD ZMAIL-PROFILE-EDITOR :PROCESS-SPECIAL-COMMAND):  (P.C. = 5)
   Arg 0 (SELF): #<ZMAIL-PROFILE-EDITOR 12434364>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZMAIL-PROFILE-EDITOR -- 6. IV's, 3. FL's 26304125>
   Arg 2 (OPERATION): :PROCESS-SPECIAL-COMMAND
   Rest arg (ARGS): (:MOUSE-BUTTON 32768 #<ZMAIL-CHOOSE-VARIABLE-VALUES-PANE Zmail Choose Variable Values Pane 1 3424013 exposed> 348 10)

(:METHOD ZMAIL-COMMAND-LOOP-MIXIN :COMMAND-LOOP):  (P.C. = 134)
   Arg 0 (SELF): #<ZMAIL-PROFILE-EDITOR 12434364>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZMAIL-COMMAND-LOOP-MIXIN -- 10. IV's, 1. FL's 26303444>
   Arg 2 (OPERATION): :COMMAND-LOOP

(:METHOD ZMAIL-PROFILE-EDITOR :COMBINED :COMMAND-LOOP):  (P.C. = 44)
   Arg 0 (SELF): #<ZMAIL-PROFILE-EDITOR 12434364>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZMAIL-PROFILE-EDITOR -- 6. IV's, 3. FL's 26304125>
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

(:METHOD ZMAIL-PROFILE-EDITOR :EDIT-PROFILE):  (P.C. = 17)
   Arg 0 (SELF): #<ZMAIL-PROFILE-EDITOR 12434364>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZMAIL-PROFILE-EDITOR -- 6. IV's, 3. FL's 26304125>
   Arg 2 (OPERATION): :EDIT-PROFILE

(:DEFUN-METHOD COM-ZMAIL-PROFILE):  (P.C. = 34)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 3400161 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZMAIL-COMMAND-LOOP-MIXIN -- 10. IV's, 1. FL's 26132363>

COM-ZMAIL-PROFILE:  (P.C. = 12)
   Rest arg (ARGS): NIL

Rest of stack:
COMMAND-EXECUTE:  (P.C. = 55)
ZMAIL-COMMAND-EXECUTE:  (P.C. = 6)
(:INTERNAL ZMAIL-COMMAND-LIST 0):  (P.C. = 10)
ZMAIL-COMMAND-LIST:  (P.C. = 12)
(:METHOD ZMAIL-FRAME :PROCESS-SPECIAL-COMMAND):  (P.C. = 5)
(:METHOD ZMAIL-FRAME :COMMAND-LOOP):  (P.C. = 141)
(:METHOD ZMAIL-FRAME :COMBINED :COMMAND-LOOP):  (P.C. = 43)
ZMAIL-PROCESS-TOP-LEVEL:  (P.C. = 52)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
22-Feb-84 21:49:25-EST,1361;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 22 Feb 84 21:47-EST
Date: 22 February 1984 21:47-EST
From: Glenn S. Burke <GSB @ MIT-MC>
Subject: 1.0e+6 vs 1.0E+6, more food for thought
To: kmp @ MIT-OZ
cc: common-lisp @ SU-AI, BUG-LISPM @ MIT-OZ, KBE-I-FILE @ MIT-OZ

    Received: from MIT-AVATAR by MIT-OZ via Chaosnet; 22 Feb 84 17:22-EST
    Date: Wednesday, 22 February 1984, 17:22-EST
    From: Kent M Pitman <kmp%MIT-OZ@MIT-MC.ARPA>

    In Release 4.5 on PA Lisp Machine Avatar:

    It would be nice if there were an advertised switch variable
    controlling whether floating point numbers printed with the
    "e" in complemented case. In particular, we use the Lisp floating
    point number printer to display floating point numbers in the
    PL/1 component of our system and since PL/1 is, in most 
    implementations, case sensitive, we'd prefer in that context
    to see the E in the same case as the rest of the code. Is this
    reasonable or should we just use ~ ?

NIL had been printing floating point exponents in lower case by default,
but i changed it back to upper case because most people got confused by
long floats with the lower case "l" exponent marker embedded in the output.
(I haven't done the common-lisp printing stuff yet.)  Anyone else
out there in CL land have this experience, or suggestions?
22-Feb-84 22:55:22-EST,1063;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 22 Feb 84 22:54-EST
Received: from SCRC-YANGTZE by SCRC-QUABBIN with CHAOS; Wed 22-Feb-84 22:58:29-EST
Return-path: <CWH%SCRC-YANGTZE@MIT-MC.ARPA>
Date: Wednesday, 22 February 1984, 22:57-EST
From: Carl Hoffman <CWH at SCRC-TENEX>
Subject: ZMail bug
To: RZ at MIT-MC, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 22 Feb 84 19:51-EST from Richard E. Zippel <RZ at MIT-MC>

    Date: Wednesday, 22 February 1984, 19:51-EST
    From: Richard E. Zippel <RZ at MIT-MC>

    In System 242.269, Experimental Schema 13.0, patched imperial purple, on Lisp Machine John Lennon (3600):

    I hit mous left at the very top of the user options pane in the profile
    configuration of the mailer, causing the following to happen.

    >>Error: The object #<ZMAIL-CHOOSE-VARIABLE-VALUES-PANE Zmail Choose Variable Values Pane 1 3424013 exposed> received a :SET-ACCENT message, which went unclaimed.

Fixed in the source and patched in 247.
To be patched in 243 the next time I am running that world.
23-Feb-84 01:19:32-EST,2627;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 23 Feb 84 01:18-EST
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK with CHAOS; Thu 23-Feb-84 01:19:44-EST
Date: Thursday, 23 February 1984, 01:24-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: You can't blame with one on VMS!
To: Daniel Weise <DANIEL at MIT-MC>, bug-beta-test at SCRC-TENEX
Cc: BUG-LISPM at MIT-OZ
In-reply-to: The message of 22 Feb 84 16:27-EST from Daniel Weise <DANIEL at MIT-MC>

This message should have gone to bug-beta-test, so I am redirecting the conversation
to there.

    Date: Wednesday, 22 February 1984, 16:27-EST
    From: Daniel Weise <DANIEL at MIT-MC>

    In Release 5.0 [Beta Test rev 4], FEP 18, imperial purple, on Lisp Machine Janis Joplin (3600):

    When I c-X c-F dpl:dpl;find Zwei loads FIND.LISP PS:<DPL.MIT> OZ:  but
    when dpl:dpl; files get loaded as a result of Tags Search or m-.
    the file name Zwei gets ahold of is FOO.LISP :<DPL.MIT> OZ:  Notice
    the lack of a PS: in that one.  Therefore if I c-X c-F a file which
    is later wanted by tags search, tags search loads a second copy of the same
    file under a different name and confusion and divergent changes occurs.

    Can't the different file loaders get their act together and agree on default
    devices?

Where is the logical host definition file for DPL?  It is on neither
OZ:<S.SITE> nor <S.R5.SITE>.  If it is in OZ:PS:<DPL.MIT>DAEDALUS-INIT.LISP,
refer to pp.35-38 of the Release 5.0 beta-test release
notes for information on various conventions violated by that file.

Anyway, the problem is probably due to the fact that executing the code 
in that file sets up logical host translations to physical pathnames with NIL
in the device field.  I believe this is a system bug due to
FS:SET-LOGICAL-PATHNAME-HOST merging the pathname you specified with
a default pathname created in a bogus way that causes it to have NIL in
the device field, rather than the default device for the host.  This probably
wasn't noticed because most of our machines don't use the device field
of their pathnames.

You can get around the system bug by inserting an explicit "OZ:" at the
front of each physical pathname in the translation list.

BUG-LISPM: How about replacing
  (SEND (SEND PHYSICAL-HOST ':SAMPLE-PATHNAME) ':NEW-PATHNAME
	':DIRECTORY NIL ':NAME ':WILD ':TYPE ':WILD ':VERSION ':WILD)
with
  (SEND (FS:DEFAULT-PATHNAME NIL PHYSICAL-HOST) ':NEW-PATHNAME
	':DIRECTORY NIL ':NAME ':WILD ':TYPE ':WILD ':VERSION ':WILD)
which appears to do the right thing? (in FS:SET-LOGICAL-PATHNAME-HOST)
23-Feb-84 12:31:34-EST,2707;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 23 Feb 84 12:31-EST
Received: from SCRC-ASSABET by SCRC-STONY-BROOK with CHAOS; Thu 23-Feb-84 12:32:14-EST
Date: Thursday, 23 February 1984, 12:36-EST
From: Robert A. Cassels <Cassels at SCRC-TENEX>
Subject: 1.0e+6 vs 1.0E+6, more food for thought
To: GSB at MIT-MC, kmp at MIT-OZ
Cc: common-lisp at SU-AI, BUG-LISPM at MIT-OZ, KBE-I-FILE at MIT-OZ
In-reply-to: The message of 22 Feb 84 21:47-EST from Glenn S. Burke <GSB at MIT-MC>

    Date: 22 February 1984 21:47-EST
    From: Glenn S. Burke <GSB @ MIT-MC>

	Received: from MIT-AVATAR by MIT-OZ via Chaosnet; 22 Feb 84 17:22-EST
	Date: Wednesday, 22 February 1984, 17:22-EST
	From: Kent M Pitman <kmp%MIT-OZ@MIT-MC.ARPA>

	In Release 4.5 on PA Lisp Machine Avatar:

	It would be nice if there were an advertised switch variable
	controlling whether floating point numbers printed with the
	"e" in complemented case. In particular, we use the Lisp floating
	point number printer to display floating point numbers in the
	PL/1 component of our system and since PL/1 is, in most 
	implementations, case sensitive, we'd prefer in that context
	to see the E in the same case as the rest of the code. Is this
	reasonable or should we just use ~ ?

In release 5, I completely redid the floating-point reader and printer.
They are now "completely accurate" and more modular.  So Fortran and
Pascal, which have different notions from Lisp about how formatting
should be done, use the lower-level routines.  I suggest you do the same
for PL/I, so you can get the semantics exactly right (the way you want
them).  You can follow pointers from SI:PRINT-FLONUM and
SI:XR-READ-FLONUM or just look in SYS: SYS2; NUMER.  It should be
obvious how to use upper-case exponent marks.  If you have trouble
understanding the other (myriad) options, let me know.  If it'll help,
ask and I'll send you copies of the Fortran and/or Pascal floating-point
printers.

    NIL had been printing floating point exponents in lower case by default,
    but i changed it back to upper case because most people got confused by
    long floats with the lower case "l" exponent marker embedded in the output.
    (I haven't done the common-lisp printing stuff yet.)  Anyone else
    out there in CL land have this experience, or suggestions?

It certainly occurred to me when I was doing the Common Lisp printer
that "l" would be a loser.  Since we don't have long floating-point
numbers, we'll never print them.  The feeling here was that lower-case
is easier to read for "e", "d", and "s", so we left it printing
lower-case.  If we ever implement longs, we'll have to reconsider.
23-Feb-84 15:46:40-EST,1338;000000000000
Received: from MIT-DSPG by MIT-OZ via Chaosnet; 23 Feb 84 15:44-EST
Date: 23 Feb 1984 09:19:49-EST
From: dove at mit-dspg
To: Mly@mit-oz, info-lispm@mit-oz
Subject: Re:  atan/atan2 -- possible changes.

why did this letter contain ^g's?
----
Received: from MIT-LISPM-1 by MIT-OZ via Chaosnet; 22 Feb 84 16:44-EST
Date: Wednesday, 22 February 1984, 16:45-EST
From:  <Mly at MIT-OZ>
Subject: atan/atan2 -- possible changes.
To: info-lispm at MIT-OZ

Here's how things stand at the present:

There presently are two functions for taking arctangents,
"atan" and "atan2".

The difference between them is that atan returns a value
in the range 0 to 2*pi, whereas atan2 returns a value in
the range -pi to pi.
(ie  atan:(RxR)  [0,2]
    atan2:(RxR)  [-,])

atan is defined the way it is mainly for maclisp compatibility --
nearly everybody else in the computer languages world (*including
common lisp*) believes that a function called "atan" should return
what the lisp machine's atan2 returns.

So, the $64000 question is:
 Would anybody like to vote on whether the definition of atan
 should change to be what atan2 is now???

Such a change would not take place immediately, and in the meantime
the compiler could generate a warning saying to use atan2, whose
definition will not change.

Thanks.

23-Feb-84 16:24:05-EST,560;000000000000
Mail-From: KMP created at 23-Feb-84 16:22:33
Date: Thu 23 Feb 84 16:22:32-EST
From: KMP@MIT-OZ
Subject: Re:  atan/atan2 -- possible changes.
To: dove@MIT-DSPG
cc: Mly@MIT-OZ, info-lispm@MIT-OZ
In-Reply-To: Message from "dove at mit-dspg" of Thu 23 Feb 84 09:19:49-EST

If you don't read your mail on a LispM, you should know that the
ASCII char ^G has the same code as the LispM "pi" character and
ASCII char ^Y has the same code as the LispM "->" character.
MLY probably just forgot that some LispM users don't read their mail
in ZMail.
-------
23-Feb-84 16:34:49-EST,575;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 23 Feb 84 16:33-EST
Date: 23 February 1984 16:29-EST
From: Kent M Pitman <KMP @ MIT-MC>
Subject: Typing "N" to pop-up incoming sends windows
To: BUG-LISPM @ MIT-MC

Perhaps pop-up incoming sends windows should have a one-character option
which sent back a reply saying
 "Your message was received, but <user> declined to respond at this time."
This would be similar to saying "N" but would not leave the person on
the other end hanging wondering if their message had been seen. Perhaps
it could be "D" for "decline".
23-Feb-84 17:38:34-EST,1577;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 23 Feb 84 17:33-EST
Date: 23 February 1984 17:34-EST
From: Kent M Pitman <KMP @ MIT-MC>
Subject: Loading the wrong system definition
To: BUG-LISPM @ MIT-MC
cc: KBE-I-FILE @ MIT-OZ

In Release 4.5 on Bing Crosby (3600):

I just tried to do 
 (MAKE-SYSTEM 'KBE)
but I have changed the system definition while making some patches such 
that loading the system tries to load SYSDEF.LISP.n (which contains
the DEFSYSTEM for the KBE) where n is greater than the desired n for
making the major version. The result was that it tried to load files
which are neither needed nor wanted in to build the major version.

It seems to me that the patch directory records the file which had the
DEFSYSTEM, it should have said to me:

 You have loaded KBE: KBE; SYSDEF LISP 253, which has been 
 modified since version 286 of Knowledge-Based-Editor was created. 
 This probably means that the loaded information about how to 
 construct Knowledge-Based-Editor is incorrect. Would you like to 
 load the file KBE: KBE; SYSDEF LISP 252 to try simulating the
 environment in which Knowledge-Based-Editor 286 was originally 
 compiled? (Yes or No)

I realize it can't detect this lossage in advance, since it was my
own code that told it that the NEWEST version of SYSDEF should have
been loaded. But since no abstraction is provided for my code to ask
what the correct version is, I would be satisfied if it detected the
error in this way and offered this correction, which I think will be
satisfactory in most cases.
23-Feb-84 18:18:13-EST,1179;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 23 Feb 84 18:16-EST
Received: from SCRC-ALLAGASH by SCRC-STONY-BROOK with CHAOS; Thu 23-Feb-84 18:12:47-EST
Date: Thu, 23 Feb 84 18:16 EST
From: "David E. Goldfarb" <DEG%SCRC-TENEX@MIT-MC.ARPA>
Subject: Loading the wrong system definition
To: KMP@MIT-MC.ARPA, BUG-LISPM@MIT-MC.ARPA
Cc: KBE-I-FILE%MIT-OZ@MIT-MC.ARPA, DEG%SCRC-TENEX@MIT-MC.ARPA
In-reply-to: The message of 23 Feb 84 17:34-EST from Kent M Pitman <KMP at MIT-MC>

    Date: 23 February 1984 17:34-EST
    From: Kent M Pitman <KMP @ MIT-MC>
    In Release 4.5 on Bing Crosby (3600):

    I just tried to do 
     (MAKE-SYSTEM 'KBE)
    but I have changed the system definition while making some patches such 
    that loading the system tries to load SYSDEF.LISP.n (which contains
    the DEFSYSTEM for the KBE) where n is greater than the desired n for
    making the major version. The result was that it tried to load files
    which are neither needed nor wanted in to build the major version.

Mumble, I know about this problem and have been promising to fix it for a long,
long time but it keeps drifting back in my queue.  I'll do it soon.
23-Feb-84 19:18:14-EST,698;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 23 Feb 84 19:17-EST
Date: Thu 23 Feb 84 19:11:21-EST
From: "Walter van Roggen" <WVANROGGEN@DEC-MARLBORO.ARPA>
Subject: Re: 1.0e+6 vs 1.0E+6, more food for thought
To: Cassels%SCRC-TENEX@MIT-MC.ARPA
cc: GSB@MIT-MC.ARPA, kmp%MIT-OZ@MIT-MC.ARPA, common-lisp@SU-AI.ARPA,
    BUG-LISPM%MIT-OZ@MIT-MC.ARPA, KBE-I-FILE%MIT-OZ@MIT-MC.ARPA,
    WVANROGGEN@DEC-MARLBORO.ARPA
In-Reply-To: Message from ""Robert A. Cassels" <Cassels%SCRC-TENEX@MIT-MC.ARPA>" of Thu 23 Feb 84 12:48:05-EST

Vax Lisp prints long-floats with an uppercase "L", the others lowercase.
People may be surprised by the format, but they're never confused.
			---Walter
-------
25-Feb-84 02:24:21-EST,4154;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 25 Feb 84 02:23-EST
Date: Saturday, 25 February 1984, 02:24-EST
From: Tim McNerney <TIM at MIT-MC>
Subject: Pathname merging blowout???
To: BUG-LISPM at MIT-OZ

In System 98.32, CADR 3.6, ZMail 53.10, MIT-Specific 22.0, microcode 306,
on Lisp Machine Thirty-one:

Tried to do a ZWEI:LOAD-FILE-INTO-ZMACS of "CORWIN:NIL$DISK:[NIL.STEVE]XEDBOOT.LSP"
having logged in to MC, so my home directory was "MC: DSK: TIM;"

>>ERROR: NO SUCH DEVICE
 for MC: CORWIN: CORWIN; CORWIN CORWIN
Backtrace from the debugger:

ZWEI:BARF (P.C. = 147)

 Arg 0 (CTL-STRING): #FS:FILE-LOOKUP-ERROR :PROPERTY-LIST (:PATHNAME #FS:ITS-PATHNAME "MC: CORWIN: CORWIN; CORWIN CORWIN" :OPERATION :OPEN) :CONDITION-NAMES (FS:FILE-LOOKUP-ERROR FS:FILE-OPERATION-FAILURE FS:FILE-ERROR ERROR ...) :FORMAT-STRING "~A" :FORMAT-ARGS ("NO SUCH DEVICE
 for MC: CORWIN: CORWIN; CORWIN CORWIN") :PATHNAME #FS:ITS-PATHNAME "MC: CORWIN: CORWIN; CORWIN CORWIN" :OPERATION :OPEN
 Rest arg (ARGS): NIL
Local 1 (TEM1): NIL
Local 2 (TEM2): NIL


ZWEI:REVERT-FILE-BUFFER (P.C. = 1236)

 Arg 0 (BUFFER): #<ZMACS-BUFFER "CORWIN CORWIN CORWIN: CORWIN; MC:" 35366752>
 Arg 1 (PATHNAME): #FS:ITS-PATHNAME "MC: CORWIN: CORWIN; CORWIN CORWIN"
 Arg 2 (CONNECT-FLAG): T
 Arg 3 (SELECT-FLAG): NIL
 Arg 4 (QUIETLY-FLAG): NIL
Local 0 (GENERIC-PATHNAME): #FS:ITS-PATHNAME "MC: CORWIN; CORWIN CORWIN"
Local 1 (PATHNAME-STRING): "CORWIN CORWIN CORWIN: CORWIN; MC:"
Local 2 (TRUENAME): NIL
Local 3 (NEW-MODE): NIL
Local 4: NIL
Local 5 (.FILE-ABORTED-FLAG.): :ABORT
Local 6 (STREAM): NIL
Local 7: (46. . 515.)
Local 8: (ZWEI:BARF-ERROR #FS:FILE-LOOKUP-ERROR :PROPERTY-LIST (:PATHNAME #FS:ITS-PATHNAME "MC: CORWIN: CORWIN; CORWIN CORWIN" :OPERATION :OPEN) :CONDITION-NAMES (FS:FILE-LOOKUP-ERROR FS:FILE-OPERATION-FAILURE FS:FILE-ERROR ERROR ...) :FORMAT-STRING "~A" :FORMAT-ARGS ("NO SUCH DEVICE
 for MC: CORWIN: CORWIN; CORWIN CORWIN") :PATHNAME #FS:ITS-PATHNAME "MC: CORWIN: CORWIN; CORWIN CORWIN" :OPERATION :OPEN)
Local 9 (THIS-VERSION): NIL
Local 10 (INSTALLED-TRUENAME): NIL
Local 11 (INSTALLED-VERSION): NIL
Local 12 (SAVED-POINT): NIL
Local 13 (NLINES): NIL
Local 14 (NCHARS): NIL
Local 15 (FONTS): NIL
Local 16 (FONTS-P): NIL
Local 17 (I): NIL
Local 18 (LINE): NIL
Local 19 (EOFFLG): NIL
Local 20 (WINDOW): NIL
Local 21 (STREAM): #FS:FILE-LOOKUP-ERROR :PROPERTY-LIST (:PATHNAME #FS:ITS-PATHNAME "MC: CORWIN: CORWIN; CORWIN CORWIN" :OPERATION :OPEN) :CONDITION-NAMES (FS:FILE-LOOKUP-ERROR FS:FILE-OPERATION-FAILURE FS:FILE-ERROR ERROR ...) :FORMAT-STRING "~A" :FORMAT-ARGS ("NO SUCH DEVICE
 for MC: CORWIN: CORWIN; CORWIN CORWIN") :PATHNAME #FS:ITS-PATHNAME "MC: CORWIN: CORWIN; CORWIN CORWIN" :OPERATION :OPEN
Local 22 (*SELECTQ-ITEM*): (FS:FILE-LOOKUP-ERROR FS:FILE-OPERATION-FAILURE FS:FILE-ERROR ERROR ...)
Local 23 (MODE): NIL


(:METHOD ZWEI:ZMACS-BUFFER :REVERT) (P.C. = 44)
  (SELF is #<ZMACS-BUFFER "CORWIN CORWIN CORWIN: CORWIN; MC:" 35366752>)

 Arg 0 (OPERATION): :REVERT
 Arg 1 (NEW-PATHNAME): #FS:ITS-PATHNAME "MC: CORWIN: CORWIN; CORWIN CORWIN"
 Arg 2 (CONNECT-FLAG): T
 Arg 3 (SELECT-FLAG): NIL
 Arg 4 (QUIETLY-FLAG): NIL


ZWEI:REVERT-BUFFER (P.C. = 66)

 Arg 0 (BUFFER): #<ZMACS-BUFFER "CORWIN CORWIN CORWIN: CORWIN; MC:" 35366752>
 Arg 1 (PATHNAME): #FS:ITS-PATHNAME "MC: CORWIN: CORWIN; CORWIN CORWIN"
 Arg 2 (CONNECT-FLAG): T
 Arg 3 (SELECT-FLAG): NIL
 Arg 4 (QUIETLY-FLAG): NIL


ZWEI:FIND-FILE (P.C. = 244)

 Arg 0 (PATHNAME): #FS:ITS-PATHNAME "MC: CORWIN: CORWIN; CORWIN CORWIN"
 Arg 1 (SELECT-P): NIL
   --Defaulted args:--
 Arg 2 (QUIETLY): NIL
 Arg 3 (LOAD-P): T
 Arg 4 (DONT-SECTIONIZE): NIL
Local 0 (BUFFER): #<ZMACS-BUFFER "CORWIN CORWIN CORWIN: CORWIN; MC:" 35366752>
Local 1 (STREAM): NIL
Local 2 (OLD-DESC): NIL
Local 3 (NEW-DESC): NIL


Remainder of stack:

ZWEI:LOAD-FILE-INTO-ZMACS (P.C. = 47)
MAPL (P.C. = 56)
SI:EVAL1 (P.C. = 1324)
SI:EVAL-ABORT-TRIVIAL-ERRORS (P.C. = 61)
SI:LISP-TOP-LEVEL1 (P.C. = 426)
SI:LISP-TOP-LEVEL2 (P.C. = 27)
SI:PROCESS-TOP-LEVEL (P.C. = 246)
SI:LISP-TOP-LEVEL (P.C. = 47)
25-Feb-84 02:30:42-EST,4098;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 25 Feb 84 02:30-EST
Date: Saturday, 25 February 1984, 02:31-EST
From: Tim McNerney <TIM at MIT-MC>
To: BUG-LISPM at MIT-OZ

In System 98.32, CADR 3.6, ZMail 53.10, MIT-Specific 22.0, microcode 306,
on Lisp Machine Thirty-one:

What is going on here???

>>ERROR: directory not found for CORWIN:USRD$:[NIL.STEVE]FOO.COR
Backtrace from the debugger:

ZWEI:BARF (P.C. = 147)

 Arg 0 (CTL-STRING): #FS:DIRECTORY-NOT-FOUND-ERROR :PROPERTY-LIST (:PATHNAME #FS:VMS-PATHNAME "CORWIN:USRD$:[NIL.STEVE]FOO.COR" :OPERATION :OPEN) :CONDITION-NAMES (FS:DIRECTORY-NOT-FOUND-ERROR FS:FILE-LOOKUP-ERROR FS:FILE-OPERATION-FAILURE FS:FILE-ERROR ...) :FORMAT-STRING "~A" :FORMAT-ARGS ("directory not found for CORWIN:USRD$:[NIL.STEVE]FOO.COR") :PATHNAME #FS:VMS-PATHNAME "CORWIN:USRD$:[NIL.STEVE]FOO.COR" :OPERATION :OPEN
 Rest arg (ARGS): NIL
Local 1 (TEM1): NIL
Local 2 (TEM2): NIL


ZWEI:REVERT-FILE-BUFFER (P.C. = 1236)

 Arg 0 (BUFFER): #<ZMACS-BUFFER "FOO.COR USRD$:[NIL.STEVE] CORWIN:" 35457235>
 Arg 1 (PATHNAME): #FS:VMS-PATHNAME "CORWIN:USRD$:[NIL.STEVE]FOO.COR"
 Arg 2 (CONNECT-FLAG): T
 Arg 3 (SELECT-FLAG): NIL
 Arg 4 (QUIETLY-FLAG): NIL
Local 0 (GENERIC-PATHNAME): #FS:VMS-PATHNAME "CORWIN:USRD$:[NIL.STEVE]FOO.COR;"
Local 1 (PATHNAME-STRING): "FOO.COR USRD$:[NIL.STEVE] CORWIN:"
Local 2 (TRUENAME): NIL
Local 3 (NEW-MODE): NIL
Local 4: NIL
Local 5 (.FILE-ABORTED-FLAG.): :ABORT
Local 6 (STREAM): NIL
Local 7: (46. . 515.)
Local 8: (ZWEI:BARF-ERROR #FS:DIRECTORY-NOT-FOUND-ERROR :PROPERTY-LIST (:PATHNAME #FS:VMS-PATHNAME "CORWIN:USRD$:[NIL.STEVE]FOO.COR" :OPERATION :OPEN) :CONDITION-NAMES (FS:DIRECTORY-NOT-FOUND-ERROR FS:FILE-LOOKUP-ERROR FS:FILE-OPERATION-FAILURE FS:FILE-ERROR ...) :FORMAT-STRING "~A" :FORMAT-ARGS ("directory not found for CORWIN:USRD$:[NIL.STEVE]FOO.COR") :PATHNAME #FS:VMS-PATHNAME "CORWIN:USRD$:[NIL.STEVE]FOO.COR" :OPERATION :OPEN)
Local 9 (THIS-VERSION): NIL
Local 10 (INSTALLED-TRUENAME): NIL
Local 11 (INSTALLED-VERSION): NIL
Local 12 (SAVED-POINT): NIL
Local 13 (NLINES): NIL
Local 14 (NCHARS): NIL
Local 15 (FONTS): NIL
Local 16 (FONTS-P): NIL
Local 17 (I): NIL
Local 18 (LINE): NIL
Local 19 (EOFFLG): NIL
Local 20 (WINDOW): NIL
Local 21 (STREAM): #FS:DIRECTORY-NOT-FOUND-ERROR :PROPERTY-LIST (:PATHNAME #FS:VMS-PATHNAME "CORWIN:USRD$:[NIL.STEVE]FOO.COR" :OPERATION :OPEN) :CONDITION-NAMES (FS:DIRECTORY-NOT-FOUND-ERROR FS:FILE-LOOKUP-ERROR FS:FILE-OPERATION-FAILURE FS:FILE-ERROR ...) :FORMAT-STRING "~A" :FORMAT-ARGS ("directory not found for CORWIN:USRD$:[NIL.STEVE]FOO.COR") :PATHNAME #FS:VMS-PATHNAME "CORWIN:USRD$:[NIL.STEVE]FOO.COR" :OPERATION :OPEN
Local 22 (*SELECTQ-ITEM*): (FS:DIRECTORY-NOT-FOUND-ERROR FS:FILE-LOOKUP-ERROR FS:FILE-OPERATION-FAILURE FS:FILE-ERROR ...)
Local 23 (MODE): NIL


(:METHOD ZWEI:ZMACS-BUFFER :REVERT) (P.C. = 44)
  (SELF is #<ZMACS-BUFFER "FOO.COR USRD$:[NIL.STEVE] CORWIN:" 35457235>)

 Arg 0 (OPERATION): :REVERT
 Arg 1 (NEW-PATHNAME): #FS:VMS-PATHNAME "CORWIN:USRD$:[NIL.STEVE]FOO.COR"
 Arg 2 (CONNECT-FLAG): T
 Arg 3 (SELECT-FLAG): NIL
 Arg 4 (QUIETLY-FLAG): NIL


ZWEI:REVERT-BUFFER (P.C. = 66)

 Arg 0 (BUFFER): #<ZMACS-BUFFER "FOO.COR USRD$:[NIL.STEVE] CORWIN:" 35457235>
 Arg 1 (PATHNAME): #FS:VMS-PATHNAME "CORWIN:USRD$:[NIL.STEVE]FOO.COR"
 Arg 2 (CONNECT-FLAG): T
 Arg 3 (SELECT-FLAG): NIL
 Arg 4 (QUIETLY-FLAG): NIL


ZWEI:FIND-FILE (P.C. = 244)

 Arg 0 (PATHNAME): #FS:VMS-PATHNAME "CORWIN:USRD$:[NIL.STEVE]FOO.COR"
 Arg 1 (SELECT-P): NIL
   --Defaulted args:--
 Arg 2 (QUIETLY): NIL
 Arg 3 (LOAD-P): T
 Arg 4 (DONT-SECTIONIZE): NIL
Local 0 (BUFFER): #<ZMACS-BUFFER "FOO.COR USRD$:[NIL.STEVE] CORWIN:" 35457235>
Local 1 (STREAM): NIL
Local 2 (OLD-DESC): NIL
Local 3 (NEW-DESC): NIL


Remainder of stack:

ZWEI:LOAD-FILE-INTO-ZMACS (P.C. = 47)
MAPL (P.C. = 56)
SI:EVAL1 (P.C. = 1324)
SI:EVAL-ABORT-TRIVIAL-ERRORS (P.C. = 61)
SI:LISP-TOP-LEVEL1 (P.C. = 426)
SI:LISP-TOP-LEVEL2 (P.C. = 27)
SI:PROCESS-TOP-LEVEL (P.C. = 246)
SI:LISP-TOP-LEVEL (P.C. = 47)
25-Feb-84 11:50:49-EST,1073;000000000000
Received: from MIT-LISPM-2 by MIT-OZ via Chaosnet; 25 Feb 84 11:50-EST
Date: Saturday, 25 February 1984, 11:51-EST
From: Bror V. H. Saxberg <BVHS at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In System 98.24, CADR 3.4, ZMail 53.9, MIT-Specific 22.0, microcode 306,
ZM MIT, on Lisp Machine Two:

(defun testdo (&optional (start 5.))
  (do* ((i (print start) (print (1+ i)))
	(num (print i)(print i)))
       ((> i 10.))
    (format t "~%")))

This little program behaves differently if compiled than if evaluated from the editor.
If compiled it behaves as advertised in the manual: the new i is first computed, then
used in the second clause to give num its new value.  However, when this defun is evaluated,
the new i is only used the first time to calculate the new value of num; after the first
iteration, the old value of i is used to give num its new value.  Thus, the first value
of i is used twice in calculating num--once on the first iteration, and then again as the
old value of i on the second iteration.  Is this the way it should be?

Bror Saxberg
25-Feb-84 15:47:57-EST,655;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 25 Feb 84 15:47-EST
Date: Saturday, 25 February 1984, 15:45-EST
From: Daniel Weise <DANIEL at MIT-MC>
Subject: color:color-exists-p
To: BUG-LISPM at MIT-OZ

In Release 5.0 [Beta Test rev 4], COLOR 5.1, imperial purple, on Lisp Machine Buddy Holly (3600):

How come this always returns nil?  This machine has a color monitor that works (sort of)
sitting right here next to the console.  It returns nil even after (make-system 'color).

PS
If you folks want me to send stuff to bug-beta-test (or whatever it's called) you're just
gonna have to put in the the middle-click menu of MAIL in ZMAIL.

25-Feb-84 17:24:13-EST,1096;000000000000
Received: from SCRC-YUKON by MIT-OZ via Chaosnet; 25 Feb 84 17:21-EST
Received: from SCRC-ANNISQUAM by SCRC-YUKON with CHAOS; Sat 25-Feb-84 17:22:24-EST
Date: Saturday, 25 February 1984, 17:26-EST
From: Doug Dodds <DODDS at SCRC-TENEX>
Subject: ZMail bug
To: RZ at MIT-MC, BUG-LISPM at MIT-OZ
In-reply-to: The message of 22 Feb 84 19:51-EST from Richard E. Zippel <RZ at MIT-MC>
Message-ID: <840225172611.1.DODDS@TENEX.SCRC.Symbolics>

    Date: Wednesday, 22 February 1984, 19:51-EST
    From: Richard E. Zippel <RZ at MIT-MC>

    In System 242.269, Experimental Schema 13.0, patched imperial purple, on Lisp Machine John Lennon (3600):

    I hit mous left at the very top of the user options pane in the profile
    configuration of the mailer, causing the following to happen.

    >>Error: The object #<ZMAIL-CHOOSE-VARIABLE-VALUES-PANE Zmail Choose Variable Values Pane 1 3424013 exposed> received a :SET-ACCENT message, which went unclaimed.

Fixed by 84.98.  This had been fixed in the source but never patched.
It will be included in the earliest possible release.
26-Feb-84 02:38:15-EST,586;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 26 Feb 84 02:37-EST
Date: Sunday, 26 February 1984, 02:38-EST
From: Tim McNerney <TIM at MIT-MC>
To: BUG-LISPM at MIT-OZ

In System 98.32, CADR 3.6, ZMail 53.10, MIT-Specific 22.0, microcode 306,
on Lisp Machine Thirty:

What happened to generic pathnames?  I thought this was supposed to work.

>>ERROR: Version must be numeric in oz:mly;l;nettel
Backtrace from the debugger:

FS:PATHNAME-ERROR (P.C. = 40)

 Arg 0 (INDEX): 16
 Arg 1 (FORMAT-STRING): "Version must be numeric in ~A"
 Rest arg (ARGS): ("oz:mly;l;nettel")
26-Feb-84 13:46:35-EST,80713;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 26 Feb 84 13:45-EST
Date: Sunday, 26 February 1984, 13:42-EST
From: Ramin D. Zabih <RDZ at MIT-MC>
Subject: Zmail problem
To: BUG-LISPM at MIT-OZ

In Release 5.0 [Beta Test rev 4], FEP 16, imperial purple, on Lisp Machine Minnie Mouse (3600):

When I went into ZMail, it read in my zmail-init file
(lm15:>rdz>zmail-init.lisp) and then produced the following.


>>Trap: The word #<DTP-NULL 0> was read from location 67707737 (in WORKING-STORAGE-AREA).
While in the function SI:PRINT-COMBINED-METHOD-DERIVATION  SI:HAVE-COMBINED-METHOD  (:PROPERTY :DAEMON SI:METHOD-COMBINATION)

SI:PRINT-COMBINED-METHOD-DERIVATION:  (P.C. = 11)
   Arg 0 (MLE): (:ABORT-SAVE NIL NIL (<<Error printing value>>
   Arg 1 (STREAM): "
HOST's :PROTOCOL-DESIRABILITY combined method needs to be recompiled
to come from (:METHOD HOST :OTHERWISE :PROTOCOL-DESIRABILITY) with method-combination :CASE :BASE-FLAVOR-LAST
rather than using (:METHOD HOST :COMBINED :PROTOCOL-DESIRABILITY) which comes from (:METHOD HOST :CASE :PROTOCOL-DESIRABILITY :CHAOS-MAIL) (:METHOD HOST :OTHERWISE :PROTOCOL-DESIRABILITY) with method-combination :CASE :BASE-FLAVOR-LAST
This occurred in file >sys>network>host.bin.NEWEST

TOPS20-PATHNAME's :NEW-DEFAULT-PATHNAME combined method needs to be recompiled
to come from (:METHOD PATHNAME :NEW-DEFAULT-PATHNAME) (:METHOD PATHNAME :WHOPPER :NEW-DEFAULT-PATHNAME) 
This occurred in file >sys>io>file-access-paths.bin.NEWEST

TOPS20-PATHNAME's :NEW-PATHNAME combined method needs to be recompiled
to come from (:METHOD PATHNAME :NEW-PATHNAME) (:METHOD PATHNAME :WRAPPER :NEW-PATHNAME) 
This occurred in file >sys>io>file-access-paths.bin.NEWEST

TENEX-PATHNAME's :NEW-DEFAULT-PATHNAME combined method needs to be recompiled
to come from (:METHOD PATHNAME :NEW-DEFAULT-PATHNAME) (:METHOD PATHNAME :WHOPPER :NEW-DEFAULT-PATHNAME) 
This occurred in file >sys>io>file-access-paths.bin.NEWEST

TENEX-PATHNAME's :NEW-PATHNAME combined method needs to be recompiled
to come from (:METHOD PATHNAME :NEW-PATHNAME) (:METHOD PATHNAME :WRAPPER :NEW-PATHNAME) 
This occurred in file >sys>io>file-access-paths.bin.NEWEST

UNIX-PATHNAME's :NEW-DEFAULT-PATHNAME combined method needs to be recompiled
to come from (:METHOD PATHNAME :NEW-DEFAULT-PATHNAME) (:METHOD PATHNAME :WHOPPER :NEW-DEFAULT-PATHNAME) 
This occurred in file >sys>io>file-access-paths.bin.NEWEST

UNIX-PATHNAME's :NEW-PATHNAME combined method needs to be recompiled
to come from (:METHOD PATHNAME :NEW-PATHNAME) (:METHOD PATHNAME :WRAPPER :NEW-PATHNAME) 
This occurred in file >sys>io>file-access-paths.bin.NEWEST

MULTICS-PATHNAME's :NEW-DEFAULT-PATHNAME combined method needs to be recompiled
to come from (:METHOD PATHNAME :NEW-DEFAULT-PATHNAME) (:METHOD PATHNAME :WHOPPER :NEW-DEFAULT-PATHNAME) 
This occurred in file >sys>io>file-access-paths.bin.NEWEST

MULTICS-PATHNAME's :NEW-PATHNAME combined method needs to be recompiled
to come from (:METHOD PATHNAME :NEW-PATHNAME) (:METHOD PATHNAME :WRAPPER :NEW-PATHNAME) 
This occurred in file >sys>io>file-access-paths.bin.NEWEST

ITS-PATHNAME's :NEW-PATHNAME combined method needs to be recompiled
to come from (:METHOD PATHNAME :NEW-PATHNAME) (:METHOD PATHNAME :WRAPPER :NEW-PATHNAME) 
This occurred in file >sys>io>file-access-paths.bin.NEWEST

VMS-PATHNAME's :NEW-DEFAULT-PATHNAME combined method needs to be recompiled
to come from (:METHOD PATHNAME :NEW-DEFAULT-PATHNAME) (:METHOD PATHNAME :WHOPPER :NEW-DEFAULT-PATHNAME) 
This occurred in file >sys>io>file-access-paths.bin.NEWEST

VMS-PATHNAME's :NEW-PATHNAME combined method needs to be recompiled
to come from (:METHOD PATHNAME :NEW-PATHNAME) (:METHOD PATHNAME :WRAPPER :NEW-PATHNAME) 
This occurred in file >sys>io>file-access-paths.bin.NEWEST

ALTO-PATHNAME's :NEW-DEFAULT-PATHNAME combined method needs to be recompiled
to come from (:METHOD PATHNAME :NEW-DEFAULT-PATHNAME) (:METHOD PATHNAME :WHOPPER :NEW-DEFAULT-PATHNAME) 
This occurred in file >sys>io>file-access-paths.bin.NEWEST

ALTO-PATHNAME's :NEW-PATHNAME combined method needs to be recompiled
to come from (:METHOD PATHNAME :NEW-PATHNAME) (:METHOD PATHNAME :WRAPPER :NEW-PATHNAME) 
This occurred in file >sys>io>file-access-paths.bin.NEWEST

LISPM-HOST's :PEEK-FILE-SYSTEM-HEADER combined method needs to be recompiled
to come from (:METHOD ACTIVE-PATHNAME-HOST :DEFAULT :PEEK-FILE-SYSTEM-HEADER) (:METHOD NET:PATHNAME-HOST-MIXIN :DEFAULT :PEEK-FILE-SYSTEM-HEADER) with method-combination :LIST :BASE-FLAVOR-FIRST
rather than using (:METHOD NET:HOST :COMBINED :PEEK-FILE-SYSTEM-HEADER) which comes from (:METHOD NET:HOST :PEEK-FILE-SYSTEM-HEADER) with method-combination :LIST :BASE-FLAVOR-FIRST
This occurred in file >sys>lmfs>fs-user.bin.NEWEST

NET:HOST's :PROTOCOL-DESIRABILITY combined method needs to be recompiled
to come from (:METHOD NET:HOST :CASE :PROTOCOL-DESIRABILITY :CHAOS-MAIL) (:METHOD NET:HOST :OTHERWISE :PROTOCOL-DESIRABILITY) with method-combination :CASE :BASE-FLAVOR-LAST
rather than using (:METHOD NET:HOST :COMBINED :PROTOCOL-DESIRABILITY) which comes from (:METHOD NET:HOST :OTHERWISE :PROTOCOL-DESIRABILITY) with method-combination :CASE :BASE-FLAVOR-LAST

TOPS20-HOST's :PEEK-FILE-SYSTEM-HEADER combined method needs to be recompiled
to come from (:METHOD ACTIVE-PATHNAME-HOST :DEFAULT :PEEK-FILE-SYSTEM-HEADER) (:METHOD NET:PATHNAME-HOST-MIXIN :DEFAULT :PEEK-FILE-SYSTEM-HEADER) with method-combination :LIST :BASE-FLAVOR-FIRST
rather than using (:METHOD NET:HOST :COMBINED :PEEK-FILE-SYSTEM-HEADER) which comes from (:METHOD NET:HOST :PEEK-FILE-SYSTEM-HEADER) with method-combination :LIST :BASE-FLAVOR-FIRST
This occurred in file >sys>io>host-cometh.bin.NEWEST

TENEX-HOST's :PEEK-FILE-SYSTEM-HEADER combined method needs to be recompiled
to come from (:METHOD ACTIVE-PATHNAME-HOST :DEFAULT :PEEK-FILE-SYSTEM-HEADER) (:METHOD NET:PATHNAME-HOST-MIXIN :DEFAULT :PEEK-FILE-SYSTEM-HEADER) with method-combination :LIST :BASE-FLAVOR-FIRST
rather than using (:METHOD NET:HOST :COMBINED :PEEK-FILE-SYSTEM-HEADER) which comes from (:METHOD NET:HOST :PEEK-FILE-SYSTEM-HEADER) with method-combination :LIST :BASE-FLAVOR-FIRST
This occurred in file >sys>io>host-cometh.bin.NEWEST

UNIX-HOST's :PEEK-FILE-SYSTEM-HEADER combined method needs to be recompiled
to come from (:METHOD ACTIVE-PATHNAME-HOST :DEFAULT :PEEK-FILE-SYSTEM-HEADER) (:METHOD NET:PATHNAME-HOST-MIXIN :DEFAULT :PEEK-FILE-SYSTEM-HEADER) with method-combination :LIST :BASE-FLAVOR-FIRST
rather than using (:METHOD NET:HOST :COMBINED :PEEK-FILE-SYSTEM-HEADER) which comes from (:METHOD NET:HOST :PEEK-FILE-SYSTEM-HEADER) with method-combination :LIST :BASE-FLAVOR-FIRST
This occurred in file >sys>io>host-cometh.bin.NEWEST

MULTICS-HOST's :PEEK-FILE-SYSTEM-HEADER combined method needs to be recompiled
to come from (:METHOD ACTIVE-PATHNAME-HOST :DEFAULT :PEEK-FILE-SYSTEM-HEADER) (:METHOD NET:PATHNAME-HOST-MIXIN :DEFAULT :PEEK-FILE-SYSTEM-HEADER) with method-combination :LIST :BASE-FLAVOR-FIRST
rather than using (:METHOD NET:HOST :COMBINED :PEEK-FILE-SYSTEM-HEADER) which comes from (:METHOD NET:HOST :PEEK-FILE-SYSTEM-HEADER) with method-combination :LIST :BASE-FLAVOR-FIRST
This occurred in file >sys>io>host-cometh.bin.NEWEST

ITS-HOST's :PEEK-FILE-SYSTEM-HEADER combined method needs to be recompiled
to come from (:METHOD ACTIVE-PATHNAME-HOST :DEFAULT :PEEK-FILE-SYSTEM-HEADER) (:METHOD NET:PATHNAME-HOST-MIXIN :DEFAULT :PEEK-FILE-SYSTEM-HEADER) with method-combination :LIST :BASE-FLAVOR-FIRST
rather than using (:METHOD NET:HOST :COMBINED :PEEK-FILE-SYSTEM-HEADER) which comes from (:METHOD NET:HOST :PEEK-FILE-SYSTEM-HEADER) with method-combination :LIST :BASE-FLAVOR-FIRST
This occurred in file >sys>io>host-cometh.bin.NEWEST

VMS-HOST's :PEEK-FILE-SYSTEM-HEADER combined method needs to be recompiled
to come from (:METHOD ACTIVE-PATHNAME-HOST :DEFAULT :PEEK-FILE-SYSTEM-HEADER) (:METHOD NET:PATHNAME-HOST-MIXIN :DEFAULT :PEEK-FILE-SYSTEM-HEADER) with method-combination :LIST :BASE-FLAVOR-FIRST
rather than using (:METHOD NET:HOST :COMBINED :PEEK-FILE-SYSTEM-HEADER) which comes from (:METHOD NET:HOST :PEEK-FILE-SYSTEM-HEADER) with method-combination :LIST :BASE-FLAVOR-FIRST
This occurred in file >sys>io>host-cometh.bin.NEWEST

ALTO-HOST's :PEEK-FILE-SYSTEM-HEADER combined method needs to be recompiled
to come from (:METHOD ACTIVE-PATHNAME-HOST :DEFAULT :PEEK-FILE-SYSTEM-HEADER) (:METHOD NET:PATHNAME-HOST-MIXIN :DEFAULT :PEEK-FILE-SYSTEM-HEADER) with method-combination :LIST :BASE-FLAVOR-FIRST
rather than using (:METHOD NET:HOST :COMBINED :PEEK-FILE-SYSTEM-HEADER) which comes from (:METHOD NET:HOST :PEEK-FILE-SYSTEM-HEADER) with method-combination :LIST :BASE-FLAVOR-FIRST
This occurred in file >sys>io>host-cometh.bin.NEWEST

FS:ITS-PATHNAME's :INBOX-PATHNAME combined method needs to be recompiled
to come from (:METHOD FS:ITS-MAILBOX-PATHNAME-MIXIN :INBOX-PATHNAME) (:METHOD FS:MAILBOX-PATHNAME-MIXIN :WHOPPER :INBOX-PATHNAME) 
This occurred in file SYS: ZMAIL; MFHOST

FS:MULTICS-PATHNAME's :INBOX-PATHNAME combined method needs to be recompiled
to come from (:METHOD FS:MAILBOX-PATHNAME-MIXIN :DEFAULT :INBOX-PATHNAME) (:METHOD FS:MAILBOX-PATHNAME-MIXIN :WHOPPER :INBOX-PATHNAME) 
This occurred in file SYS: ZMAIL; MFHOST

FS:VMS-PATHNAME's :INBOX-PATHNAME combined method needs to be recompiled
to come from (:METHOD FS:MAILBOX-PATHNAME-MIXIN :DEFAULT :INBOX-PATHNAME) (:METHOD FS:MAILBOX-PATHNAME-MIXIN :WHOPPER :INBOX-PATHNAME) 
This occurred in file SYS: ZMAIL; MFHOST

FS:LMFS-PATHNAME's :INBOX-PATHNAME combined method needs to be recompiled
to come from (:METHOD FS:LMFS-MAILBOX-PATHNAME-MIXIN :INBOX-PATHNAME) (:METHOD FS:MAILBOX-PATHNAME-MIXIN :WHOPPER :INBOX-PATHNAME) 
This occurred in file SYS: ZMAIL; MFHOST

FS:FEP-PATHNAME's :INBOX-PATHNAME combined method needs to be recompiled
to come from (:METHOD FS:LMFS-MAILBOX-PATHNAME-MIXIN :INBOX-PATHNAME) (:METHOD FS:MAILBOX-PATHNAME-MIXIN :WHOPPER :INBOX-PATHNAME) 
This occurred in file SYS: ZMAIL; MFHOST

CHAOS:INPUT-CHARACTER-STREAM's :LISTEN combined method needs to be recompiled
to come from (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :LISTEN) (:METHOD CHAOS:BASIC-INPUT-STREAM :WHOPPER :LISTEN) 
This occurred in file P:>sys>patch>System-242-10

TCP:GATEWAY-TCP-STREAM's :LISTEN combined method needs to be recompiled
to come from (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :LISTEN) (:METHOD CHAOS:BASIC-INPUT-STREAM :WHOPPER :LISTEN) 
This occurred in file P:>sys>patch>System-242-10

CHAOS:CHARACTER-STREAM's :LISTEN combined method needs to be recompiled
to come from (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :LISTEN) (:METHOD CHAOS:BASIC-INPUT-STREAM :WHOPPER :LISTEN) 
This occurred in file P:>sys>patch>System-242-10

CHAOS:INPUT-BINARY-STREAM's :LISTEN combined method needs to be recompiled
to come from (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :LISTEN) (:METHOD CHAOS:BASIC-INPUT-STREAM :WHOPPER :LISTEN) 
This occurred in file P:>sys>patch>System-242-10

CHAOS:BINARY-STREAM's :LISTEN combined method needs to be recompiled
to come from (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :LISTEN) (:METHOD CHAOS:BASIC-INPUT-STREAM :WHOPPER :LISTEN) 
This occurred in file P:>sys>patch>System-242-10

CHAOS:ASCII-TRANSLATING-INPUT-CHARACTER-STREAM's :LISTEN combined method needs to be recompiled
to come from (:METHOD SI:INPUT-STREAM :LISTEN) (:METHOD CHAOS:BASIC-INPUT-STREAM :WHOPPER :LISTEN) 
This occurred in file P:>sys>patch>System-242-10

CHAOS:TELNET-STREAM's :LISTEN combined method needs to be recompiled
to come from (:METHOD SI:INPUT-STREAM :LISTEN) (:METHOD CHAOS:BASIC-INPUT-STREAM :WHOPPER :LISTEN) 
This occurred in file P:>sys>patch>System-242-10

TCP:GATEWAY-TCP-ASCII-TRANSLATING-STREAM's :LISTEN combined method needs to be recompiled
to come from (:METHOD SI:INPUT-STREAM :LISTEN) (:METHOD CHAOS:BASIC-INPUT-STREAM :WHOPPER :LISTEN) 
This occurred in file P:>sys>patch>System-242-10

CHAOS:ASCII-TRANSLATING-CHARACTER-STREAM's :LISTEN combined method needs to be recompiled
to come from (:METHOD SI:INPUT-STREAM :LISTEN) (:METHOD CHAOS:BASIC-INPUT-STREAM :WHOPPER :LISTEN) 
This occurred in file P:>sys>patch>System-242-10

DBG:BITBLT-ARRAY-FRACTIONAL-WORD-WIDTH-TRAP's :REPORT combined method needs to be recompiled
to come from (:METHOD SYS:BITBLT-ARRAY-FRACTIONAL-WORD-WIDTH :REPORT) (:METHOD CONDITION :WHOPPER :REPORT) 
rather than using (:METHOD CONDITION :COMBINED :REPORT) which comes from (:METHOD CONDITION :WHOPPER :REPORT) 
This occurred in file P:>sys>patch>System-242-15

FS:TOPS20-PATHNAME's :DECACHE-HOST-NAME combined method needs to be recompiled
to come from (:METHOD FS:PATHNAME :DECACHE-HOST-NAME) (:METHOD FS:HOST-PATHNAME :DECACHE-HOST-NAME) with method-combination :PROGN :BASE-FLAVOR-FIRST
This occurred in file P:>sys>patch>System-242-28

FS:TENEX-PATHNAME's :DECACHE-HOST-NAME combined method needs to be recompiled
to come from (:METHOD FS:PATHNAME :DECACHE-HOST-NAME) (:METHOD FS:HOST-PATHNAME :DECACHE-HOST-NAME) with method-combination :PROGN :BASE-FLAVOR-FIRST
This occurred in file P:>sys>patch>System-242-28

FS:ALTO-PATHNAME's :DECACHE-HOST-NAME combined method needs to be recompiled
to come from (:METHOD FS:PATHNAME :DECACHE-HOST-NAME) (:METHOD FS:HOST-PATHNAME :DECACHE-HOST-NAME) with method-combination :PROGN :BASE-FLAVOR-FIRST
This occurred in file P:>sys>patch>System-242-28

FS:VMS-PATHNAME's :DECACHE-HOST-NAME combined method needs to be recompiled
to come from (:METHOD FS:PATHNAME :DECACHE-HOST-NAME) (:METHOD FS:HOST-PATHNAME :DECACHE-HOST-NAME) with method-combination :PROGN :BASE-FLAVOR-FIRST
This occurred in file P:>sys>patch>System-242-28

FS:UNIX-PATHNAME's :DECACHE-HOST-NAME combined method needs to be recompiled
to come from (:METHOD FS:PATHNAME :DECACHE-HOST-NAME) (:METHOD FS:HOST-PATHNAME :DECACHE-HOST-NAME) with method-combination :PROGN :BASE-FLAVOR-FIRST
This occurred in file P:>sys>patch>System-242-28

FS:MULTICS-PATHNAME's :DECACHE-HOST-NAME combined method needs to be recompiled
to come from (:METHOD FS:PATHNAME :DECACHE-HOST-NAME) (:METHOD FS:HOST-PATHNAME :DECACHE-HOST-NAME) with method-combination :PROGN :BASE-FLAVOR-FIRST
This occurred in file P:>sys>patch>System-242-28

FS:ITS-PATHNAME's :DECACHE-HOST-NAME combined method needs to be recompiled
to come from (:METHOD FS:PATHNAME :DECACHE-HOST-NAME) (:METHOD FS:HOST-PATHNAME :DECACHE-HOST-NAME) with method-combination :PROGN :BASE-FLAVOR-FIRST
This occurred in file P:>sys>patch>System-242-28

FS:LMFS-PATHNAME's :DECACHE-HOST-NAME combined method needs to be recompiled
to come from (:METHOD FS:PATHNAME :DECACHE-HOST-NAME) (:METHOD FS:HOST-PATHNAME :DECACHE-HOST-NAME) with method-combination :PROGN :BASE-FLAVOR-FIRST
This occurred in file P:>sys>patch>System-242-28

FS:FEP-PATHNAME's :DECACHE-HOST-NAME combined method needs to be recompiled
to come from (:METHOD FS:PATHNAME :DECACHE-HOST-NAME) (:METHOD FS:HOST-PATHNAME :DECACHE-HOST-NAME) with method-combination :PROGN :BASE-FLAVOR-FIRST
This occurred in file P:>sys>patch>System-242-28

NETI:3600-ETHERNET-INTERFACE's :NETWORK-SUPPORTED combined method needs to be recompiled
to come from (:METHOD NETI:NETWORK-INTERFACE :OR :NETWORK-SUPPORTED) (:METHOD NETI:ADDRESS-RESOLUTION-INTERFACE-MIXIN :OR :NETWORK-SUPPORTED) with method-combination :OR :BASE-FLAVOR-LAST
This occurred in file P:>sys>patch>System-242-42

NETI:3600-ETHERNET-INTERFACE's :NETWORK-SUPPORTED combined method needs to be recompiled
to come from (:METHOD NETI:NETWORK-INTERFACE :OR :NETWORK-SUPPORTED) (:METHOD NETI:ADDRESS-RESOLUTION-INTERFACE-MIXIN :OR :NETWORK-SUPPORTED) (:METHOD NETI:3600-ETHERNET-INTERFACE :OR :NETWORK-SUPPORTED) with method-combination :OR :BASE-FLAVOR-LAST
rather than using (:METHOD NETI:3600-ETHERNET-INTERFACE :COMBINED :NETWORK-SUPPORTED) which comes from (:METHOD NETI:NETWORK-INTERFACE :OR :NETWORK-SUPPORTED) (:METHOD NETI:ADDRESS-RESOLUTION-INTERFACE-MIXIN :OR :NETWORK-SUPPORTED) with method-combination :OR :BASE-FLAVOR-LAST
This occurred in file P:>sys>patch>System-242-42

DBG:RETURN-FROM-TRACED-FRAME-TRAP's :INIT combined method needs to be recompiled
to come from (:METHOD DBG:TRAP :AFTER :INIT) (:METHOD DBG:TRAP :BEFORE :INIT) (:METHOD CONDITION :INIT) 
rather than using (:METHOD DBG:RETURN-FROM-TRACED-FRAME-TRAP :COMBINED :INIT) which comes from (:METHOD DBG:TRAP :AFTER :INIT) (:METHOD DBG:RETURN-FROM-TRACED-FRAME-TRAP :AFTER :INIT) (:METHOD DBG:TRAP :BEFORE :INIT) (:METHOD CONDITION :INIT) 
This occurred in file P:>sys>patch>System-242-69

DBG:RETURN-FROM-TRACED-FRAME-TRAP's :DOCUMENT-PROCEED-TYPE combined method needs to be recompiled
to come from (:METHOD CONDITION :CASE :DOCUMENT-PROCEED-TYPE :WHICH-OPERATIONS) (:METHOD DBG:TRAP :CASE :DOCUMENT-PROCEED-TYPE :RETURN-VALUES) (:METHOD DBG:RETURN-FROM-TRACED-FRAME-TRAP :CASE :DOCUMENT-PROCEED-TYPE :NO-ACTION) (:METHOD CONDITION :OTHERWISE :DOCUMENT-PROCEED-TYPE) with method-combination :CASE :BASE-FLAVOR-LAST
rather than using (:METHOD DBG:RETURN-FROM-TRACED-FRAME-TRAP :COMBINED :DOCUMENT-PROCEED-TYPE) which comes from (:METHOD CONDITION :CASE :DOCUMENT-PROCEED-TYPE :WHICH-OPERATIONS) (:METHOD DBG:TRAP :CASE :DOCUMENT-PROCEED-TYPE :NO-ACTION) (:METHOD DBG:TRAP :CASE :DOCUMENT-PROCEED-TYPE :RETURN-VALUES) (:METHOD CONDITION :OTHERWISE :DOCUMENT-PROCEED-TYPE) with method-combination :CASE :BASE-FLAVOR-LAST
This occurred in file P:>sys>patch>System-242-69

NETI:UNKNOWN-NAMESPACE-RECORD-INDICATOR's :DOCUMENT-PROCEED-TYPE combined method needs to be recompiled
to come from (:METHOD CONDITION :CASE :DOCUMENT-PROCEED-TYPE :WHICH-OPERATIONS) (:METHOD NETI:UNKNOWN-NAMESPACE-RECORD-INDICATOR :CASE :DOCUMENT-PROCEED-TYPE :NO-ACTION) (:METHOD CONDITION :OTHERWISE :DOCUMENT-PROCEED-TYPE) with method-combination :CASE :BASE-FLAVOR-LAST
rather than using (:METHOD CONDITION :COMBINED :DOCUMENT-PROCEED-TYPE) which comes from (:METHOD CONDITION :CASE :DOCUMENT-PROCEED-TYPE :WHICH-OPERATIONS) (:METHOD CONDITION :OTHERWISE :DOCUMENT-PROCEED-TYPE) with method-combination :CASE :BASE-FLAVOR-LAST
This occurred in file P:>sys>patch>System-242-72

SI:SERIAL-CHARACTER-STREAM's :TYI combined method needs to be recompiled
to come from (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :TYI) (:METHOD SI:ASCII-TRANSLATING-INPUT-STREAM-MIXIN :WHOPPER :TYI) (:METHOD SI:BASIC-SERIAL-STREAM :WHOPPER :TYI) 
rather than using (:METHOD SI:SERIAL-CHARACTER-STREAM :COMBINED :TYI) which comes from (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :TYI) (:METHOD SI:ASCII-TRANSLATING-INPUT-STREAM-MIXIN :WHOPPER :TYI) 
This occurred in file Q:>sys>patch>System-242-81

SI:SERIAL-BINARY-STREAM's :TYI combined method needs to be recompiled
to come from (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :TYI) (:METHOD SI:BASIC-SERIAL-STREAM :WHOPPER :TYI) 
This occurred in file Q:>sys>patch>System-242-81

SI:SERIAL-CHARACTER-STREAM's :TYI combined method needs to be recompiled
to come from (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :TYI) (:METHOD SI:BASIC-SERIAL-STREAM :WHOPPER :TYI) (:METHOD SI:ASCII-TRANSLATING-INPUT-STREAM-MIXIN :WHOPPER :TYI) 
rather than using (:METHOD SI:SERIAL-CHARACTER-STREAM :COMBINED :TYI) which comes from (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :TYI) (:METHOD SI:ASCII-TRANSLATING-INPUT-STREAM-MIXIN :WHOPPER :TYI) (:METHOD SI:BASIC-SERIAL-STREAM :WHOPPER :TYI) 
This occurred in file Q:>sys>patch>System-242-81

SI:SERIAL-CHARACTER-STREAM's :CLOSE combined method needs to be recompiled
to come from (:METHOD SI:BASIC-BUFFERED-OUTPUT-STREAM :BEFORE :CLOSE) (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :BEFORE :CLOSE) (:METHOD SI:STREAM :CLOSE) 
rather than using (:METHOD SI:SERIAL-CHARACTER-STREAM :COMBINED :CLOSE) which comes from (:METHOD SI:BASIC-BUFFERED-OUTPUT-STREAM :BEFORE :CLOSE) (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :BEFORE :CLOSE) (:METHOD SI:BASIC-SERIAL-STREAM :CLOSE) 
This occurred in file Q:>sys>patch>System-242-81

SI:SERIAL-CHARACTER-STREAM's :FINISH combined method needs to be recompiled
to come from (:METHOD SI:OUTPUT-STREAM :BEFORE :FINISH) (:METHOD SI:OUTPUT-STREAM :FINISH) 
rather than using (:METHOD SI:SERIAL-CHARACTER-STREAM :COMBINED :FINISH) which comes from (:METHOD SI:OUTPUT-STREAM :BEFORE :FINISH) (:METHOD SI:BASIC-SERIAL-STREAM :FINISH) 
This occurred in file Q:>sys>patch>System-242-81

FS:TOPS20-PATHNAME's :UNCASE-DIRECTORY combined method needs to be recompiled
to come from (:METHOD FS:HIERARCHICAL-DIRECTORY-MIXIN :UNCASE-DIRECTORY) (:METHOD FS:TENEX-FAMILY-PATHNAME-MIXIN :WHOPPER :UNCASE-DIRECTORY) 
This occurred in file Q:>sys>patch>System-242-86

FS:TENEX-PATHNAME's :UNCASE-DIRECTORY combined method needs to be recompiled
to come from (:METHOD FS:CASE-MIXIN :DEFAULT :UNCASE-DIRECTORY) (:METHOD FS:TENEX-FAMILY-PATHNAME-MIXIN :WHOPPER :UNCASE-DIRECTORY) 
This occurred in file Q:>sys>patch>System-242-86

FS:VMS-PATHNAME's :UNCASE-DIRECTORY combined method needs to be recompiled
to come from (:METHOD FS:HIERARCHICAL-DIRECTORY-MIXIN :UNCASE-DIRECTORY) (:METHOD FS:TENEX-FAMILY-PATHNAME-MIXIN :WHOPPER :UNCASE-DIRECTORY) 
This occurred in file Q:>sys>patch>System-242-86

FS:ALTO-PATHNAME's :UNCASE-DIRECTORY combined method needs to be recompiled
to come from (:METHOD FS:CASE-MIXIN :DEFAULT :UNCASE-DIRECTORY) (:METHOD FS:TENEX-FAMILY-PATHNAME-MIXIN :WHOPPER :UNCASE-DIRECTORY) 
This occurred in file Q:>sys>patch>System-242-86

SI:INPUT-BINARY-DISK-STREAM's :CLOSE combined method needs to be recompiled
to come from (:METHOD SI:INPUT-DISK-STREAM :AFTER :CLOSE) (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :BEFORE :CLOSE) (:METHOD SI:STREAM :CLOSE) (:METHOD SI:BASE-DISK-STREAM :WHOPPER :CLOSE) (:METHOD SI:FILE-DATA-STREAM-MIXIN :WRAPPER :CLOSE) 
rather than using (:METHOD SI:INPUT-BINARY-DISK-STREAM :COMBINED :CLOSE) which comes from (:METHOD SI:INPUT-DISK-STREAM :AFTER :CLOSE) (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :BEFORE :CLOSE) (:METHOD SI:STREAM :CLOSE) (:METHOD SI:FILE-DATA-STREAM-MIXIN :WRAPPER :CLOSE) 
This occurred in file Q:>sys>patch>System-242-88

SI:INPUT-CHARACTER-DISK-STREAM's :CLOSE combined method needs to be recompiled
to come from (:METHOD SI:INPUT-DISK-STREAM :AFTER :CLOSE) (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :BEFORE :CLOSE) (:METHOD SI:STREAM :CLOSE) (:METHOD SI:BASE-DISK-STREAM :WHOPPER :CLOSE) (:METHOD SI:FILE-DATA-STREAM-MIXIN :WRAPPER :CLOSE) 
rather than using (:METHOD SI:INPUT-CHARACTER-DISK-STREAM :COMBINED :CLOSE) which comes from (:METHOD SI:INPUT-DISK-STREAM :AFTER :CLOSE) (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :BEFORE :CLOSE) (:METHOD SI:STREAM :CLOSE) (:METHOD SI:FILE-DATA-STREAM-MIXIN :WRAPPER :CLOSE) 
This occurred in file Q:>sys>patch>System-242-88

SI:OUTPUT-BINARY-DISK-STREAM's :CLOSE combined method needs to be recompiled
to come from (:METHOD SI:OUTPUT-DISK-STREAM :AFTER :CLOSE) (:METHOD SI:BASIC-BUFFERED-OUTPUT-STREAM :BEFORE :CLOSE) (:METHOD SI:STREAM :CLOSE) (:METHOD SI:BASE-DISK-STREAM :WHOPPER :CLOSE) (:METHOD SI:FILE-DATA-STREAM-MIXIN :WRAPPER :CLOSE) 
rather than using (:METHOD SI:OUTPUT-BINARY-DISK-STREAM :COMBINED :CLOSE) which comes from (:METHOD SI:OUTPUT-DISK-STREAM :AFTER :CLOSE) (:METHOD SI:BASIC-BUFFERED-OUTPUT-STREAM :BEFORE :CLOSE) (:METHOD SI:STREAM :CLOSE) (:METHOD SI:FILE-DATA-STREAM-MIXIN :WRAPPER :CLOSE) 
This occurred in file Q:>sys>patch>System-242-88

SI:OUTPUT-CHARACTER-DISK-STREAM's :CLOSE combined method needs to be recompiled
to come from (:METHOD SI:OUTPUT-DISK-STREAM :AFTER :CLOSE) (:METHOD SI:BASIC-BUFFERED-OUTPUT-STREAM :BEFORE :CLOSE) (:METHOD SI:STREAM :CLOSE) (:METHOD SI:BASE-DISK-STREAM :WHOPPER :CLOSE) (:METHOD SI:FILE-DATA-STREAM-MIXIN :WRAPPER :CLOSE) 
rather than using (:METHOD SI:OUTPUT-CHARACTER-DISK-STREAM :COMBINED :CLOSE) which comes from (:METHOD SI:OUTPUT-DISK-STREAM :AFTER :CLOSE) (:METHOD SI:BASIC-BUFFERED-OUTPUT-STREAM :BEFORE :CLOSE) (:METHOD SI:STREAM :CLOSE) (:METHOD SI:FILE-DATA-STREAM-MIXIN :WRAPPER :CLOSE) 
This occurred in file Q:>sys>patch>System-242-88

SI:PROBE-DISK-STREAM's :CLOSE combined method needs to be recompiled
to come from (:METHOD SI:STREAM :CLOSE) (:METHOD SI:BASE-DISK-STREAM :WHOPPER :CLOSE) 
This occurred in file Q:>sys>patch>System-242-88

ZWEI:TAGS-SEARCH-BUFFER's :RESTART combined method needs to be recompiled
to come from (:METHOD ZWEI:TAG-TABLE-USER-SPECIAL-PURPOSE-BUFFER :AFTER :RESTART) (:METHOD ZWEI:SUBNODE-SPECIAL-PURPOSE-BUFFER :RESTART) 
This occurred in file Q:>sys>patch>System-242-119

ZWEI:TAGS-MULTIPLE-QUERY-REPLACE-BUFFER's :RESTART combined method needs to be recompiled
to come from (:METHOD ZWEI:TAG-TABLE-USER-SPECIAL-PURPOSE-BUFFER :AFTER :RESTART) (:METHOD ZWEI:SUBNODE-SPECIAL-PURPOSE-BUFFER :RESTART) 
This occurred in file Q:>sys>patch>System-242-119

ZWEI:TAGS-QUERY-REPLACE-BUFFER's :RESTART combined method needs to be recompiled
to come from (:METHOD ZWEI:TAG-TABLE-USER-SPECIAL-PURPOSE-BUFFER :AFTER :RESTART) (:METHOD ZWEI:SUBNODE-SPECIAL-PURPOSE-BUFFER :RESTART) 
This occurred in file Q:>sys>patch>System-242-119

FS:QDIRECTORY-NOT-FOUND's :SPECIAL-COMMAND combined method needs to be recompiled
to come from (:METHOD FS:CREATE-DIRECTORY-MIGHT-FIX-MIXIN :CASE :SPECIAL-COMMAND :CREATE-DIRECTORY) (:METHOD FS:CREATE-DIRECTORY-MIGHT-FIX-MIXIN :CASE :SPECIAL-COMMAND :CREATE-DIRECTORIES-RECURSIVELY) with method-combination :CASE :BASE-FLAVOR-LAST
rather than using (:METHOD FS:QDIRECTORY-NOT-FOUND :COMBINED :SPECIAL-COMMAND) which comes from (:METHOD FS:CREATE-DIRECTORY-MIGHT-FIX-MIXIN :CASE :SPECIAL-COMMAND :CREATE-DIRECTORY) with method-combination :CASE :BASE-FLAVOR-LAST
This occurred in file Q:>sys>patch>System-242-121

FS:FEP-DIRECTORY-NOT-FOUND's :SPECIAL-COMMAND combined method needs to be recompiled
to come from (:METHOD FS:CREATE-DIRECTORY-MIGHT-FIX-MIXIN :CASE :SPECIAL-COMMAND :CREATE-DIRECTORY) (:METHOD FS:CREATE-DIRECTORY-MIGHT-FIX-MIXIN :CASE :SPECIAL-COMMAND :CREATE-DIRECTORIES-RECURSIVELY) with method-combination :CASE :BASE-FLAVOR-LAST
rather than using (:METHOD FS:FEP-DIRECTORY-NOT-FOUND :COMBINED :SPECIAL-COMMAND) which comes from (:METHOD FS:CREATE-DIRECTORY-MIGHT-FIX-MIXIN :CASE :SPECIAL-COMMAND :CREATE-DIRECTORY) with method-combination :CASE :BASE-FLAVOR-LAST
This occurred in file Q:>sys>patch>System-242-121

LMFS:LMFS-DIRECTORY-NOT-FOUND's :SPECIAL-COMMAND combined method needs to be recompiled
to come from (:METHOD FS:CREATE-DIRECTORY-MIGHT-FIX-MIXIN :CASE :SPECIAL-COMMAND :CREATE-DIRECTORY) (:METHOD FS:CREATE-DIRECTORY-MIGHT-FIX-MIXIN :CASE :SPECIAL-COMMAND :CREATE-DIRECTORIES-RECURSIVELY) with method-combination :CASE :BASE-FLAVOR-LAST
rather than using (:METHOD LMFS:LMFS-DIRECTORY-NOT-FOUND :COMBINED :SPECIAL-COMMAND) which comes from (:METHOD FS:CREATE-DIRECTORY-MIGHT-FIX-MIXIN :CASE :SPECIAL-COMMAND :CREATE-DIRECTORY) with method-combination :CASE :BASE-FLAVOR-LAST
This occurred in file Q:>sys>patch>System-242-121

FS:QDIRECTORY-NOT-FOUND's :DOCUMENT-SPECIAL-COMMAND combined method needs to be recompiled
to come from (:METHOD DBG:SPECIAL-COMMANDS-MIXIN :CASE :DOCUMENT-SPECIAL-COMMAND :WHICH-OPERATIONS) (:METHOD FS:CREATE-DIRECTORY-MIGHT-FIX-MIXIN :CASE :DOCUMENT-SPECIAL-COMMAND :CREATE-DIRECTORY) (:METHOD FS:CREATE-DIRECTORY-MIGHT-FIX-MIXIN :CASE :DOCUMENT-SPECIAL-COMMAND :CREATE-DIRECTORIES-RECURSIVELY) (:METHOD DBG:SPECIAL-COMMANDS-MIXIN :OTHERWISE :DOCUMENT-SPECIAL-COMMAND) with method-combination :CASE :BASE-FLAVOR-LAST
rather than using (:METHOD FS:QDIRECTORY-NOT-FOUND :COMBINED :DOCUMENT-SPECIAL-COMMAND) which comes from (:METHOD DBG:SPECIAL-COMMANDS-MIXIN :CASE :DOCUMENT-SPECIAL-COMMAND :WHICH-OPERATIONS) (:METHOD FS:CREATE-DIRECTORY-MIGHT-FIX-MIXIN :CASE :DOCUMENT-SPECIAL-COMMAND :CREATE-DIRECTORY) (:METHOD DBG:SPECIAL-COMMANDS-MIXIN :OTHERWISE :DOCUMENT-SPECIAL-COMMAND) with method-combination :CASE :BASE-FLAVOR-LAST
This occurred in file Q:>sys>patch>System-242-121

FS:FEP-DIRECTORY-NOT-FOUND's :DOCUMENT-SPECIAL-COMMAND combined method needs to be recompiled
to come from (:METHOD DBG:SPECIAL-COMMANDS-MIXIN :CASE :DOCUMENT-SPECIAL-COMMAND :WHICH-OPERATIONS) (:METHOD FS:CREATE-DIRECTORY-MIGHT-FIX-MIXIN :CASE :DOCUMENT-SPECIAL-COMMAND :CREATE-DIRECTORY) (:METHOD FS:CREATE-DIRECTORY-MIGHT-FIX-MIXIN :CASE :DOCUMENT-SPECIAL-COMMAND :CREATE-DIRECTORIES-RECURSIVELY) (:METHOD DBG:SPECIAL-COMMANDS-MIXIN :OTHERWISE :DOCUMENT-SPECIAL-COMMAND) with method-combination :CASE :BASE-FLAVOR-LAST
rather than using (:METHOD FS:FEP-DIRECTORY-NOT-FOUND :COMBINED :DOCUMENT-SPECIAL-COMMAND) which comes from (:METHOD DBG:SPECIAL-COMMANDS-MIXIN :CASE :DOCUMENT-SPECIAL-COMMAND :WHICH-OPERATIONS) (:METHOD FS:CREATE-DIRECTORY-MIGHT-FIX-MIXIN :CASE :DOCUMENT-SPECIAL-COMMAND :CREATE-DIRECTORY) (:METHOD DBG:SPECIAL-COMMANDS-MIXIN :OTHERWISE :DOCUMENT-SPECIAL-COMMAND) with method-combination :CASE :BASE-FLAVOR-LAST
This occurred in file Q:>sys>patch>System-242-121

LMFS:LMFS-DIRECTORY-NOT-FOUND's :DOCUMENT-SPECIAL-COMMAND combined method needs to be recompiled
to come from (:METHOD DBG:SPECIAL-COMMANDS-MIXIN :CASE :DOCUMENT-SPECIAL-COMMAND :WHICH-OPERATIONS) (:METHOD FS:CREATE-DIRECTORY-MIGHT-FIX-MIXIN :CASE :DOCUMENT-SPECIAL-COMMAND :CREATE-DIRECTORY) (:METHOD FS:CREATE-DIRECTORY-MIGHT-FIX-MIXIN :CASE :DOCUMENT-SPECIAL-COMMAND :CREATE-DIRECTORIES-RECURSIVELY) (:METHOD DBG:SPECIAL-COMMANDS-MIXIN :OTHERWISE :DOCUMENT-SPECIAL-COMMAND) with method-combination :CASE :BASE-FLAVOR-LAST
rather than using (:METHOD LMFS:LMFS-DIRECTORY-NOT-FOUND :COMBINED :DOCUMENT-SPECIAL-COMMAND) which comes from (:METHOD DBG:SPECIAL-COMMANDS-MIXIN :CASE :DOCUMENT-SPECIAL-COMMAND :WHICH-OPERATIONS) (:METHOD FS:CREATE-DIRECTORY-MIGHT-FIX-MIXIN :CASE :DOCUMENT-SPECIAL-COMMAND :CREATE-DIRECTORY) (:METHOD DBG:SPECIAL-COMMANDS-MIXIN :OTHERWISE :DOCUMENT-SPECIAL-COMMAND) with method-combination :CASE :BASE-FLAVOR-LAST
This occurred in file Q:>sys>patch>System-242-121

DBG:ASSQ-ELEMENT-TYPE-TRAP's :INIT combined method needs to be recompiled
to come from (:METHOD DBG:TRAP :AFTER :INIT) (:METHOD DBG:ASSQ-ELEMENT-TYPE-TRAP :AFTER :INIT) (:METHOD DBG:TRAP :BEFORE :INIT) (:METHOD CONDITION :INIT) 
rather than using (:METHOD DBG:ASSQ-ELEMENT-TYPE-TRAP :COMBINED :INIT) which comes from (:METHOD DBG:TRAP :AFTER :INIT) (:METHOD DBG:TRAP :BEFORE :INIT) (:METHOD CONDITION :INIT) 
This occurred in file Q:>sys>patch>System-242-142

DBG:UNDEFINED-ERROR-INSTRUCTION-TRAP's :INIT combined method needs to be recompiled
to come from (:METHOD DBG:TRAP :AFTER :INIT) (:METHOD DBG:UNDEFINED-ERROR-INSTRUCTION-TRAP :AFTER :INIT) (:METHOD DBG:TRAP :BEFORE :INIT) (:METHOD CONDITION :INIT) 
rather than using (:METHOD DBG:UNDEFINED-ERROR-INSTRUCTION-TRAP :COMBINED :INIT) which comes from (:METHOD DBG:TRAP :AFTER :INIT) (:METHOD DBG:TRAP :BEFORE :INIT) (:METHOD CONDITION :INIT) 
This occurred in file Q:>sys>patch>System-242-142

FLOATING-EXPONENT-UNDERFLOW's :DOCUMENT-PROCEED-TYPE combined method needs to be recompiled
to come from (:METHOD CONDITION :CASE :DOCUMENT-PROCEED-TYPE :WHICH-OPERATIONS) (:METHOD FLOATING-POINT-EXCEPTION :CASE :DOCUMENT-PROCEED-TYPE :USE-NON-TRAP-RESULT) (:METHOD FLOATING-POINT-EXCEPTION :CASE :DOCUMENT-PROCEED-TYPE :USE-ZERO) (:METHOD FLOATING-EXPONENT-UNDERFLOW :CASE :DOCUMENT-PROCEED-TYPE :USE-DENORMALIZED) (:METHOD CONDITION :OTHERWISE :DOCUMENT-PROCEED-TYPE) with method-combination :CASE :BASE-FLAVOR-LAST
rather than using (:METHOD FLOATING-EXPONENT-UNDERFLOW :COMBINED :DOCUMENT-PROCEED-TYPE) which comes from (:METHOD CONDITION :CASE :DOCUMENT-PROCEED-TYPE :WHICH-OPERATIONS) (:METHOD FLOATING-EXPONENT-UNDERFLOW :CASE :DOCUMENT-PROCEED-TYPE :USE-DENORMALIZED) (:METHOD CONDITION :OTHERWISE :DOCUMENT-PROCEED-TYPE) with method-combination :CASE :BASE-FLAVOR-LAST
This occurred in file Q:>sys>patch>System-242-143

FLOATING-EXPONENT-UNDERFLOW's :PROCEED combined method needs to be recompiled
to come from (:METHOD FLOATING-POINT-EXCEPTION :CASE :PROCEED :USE-NON-TRAP-RESULT) (:METHOD FLOATING-POINT-EXCEPTION :CASE :PROCEED :USE-ZERO) (:METHOD FLOATING-POINT-EXCEPTION :CASE :PROCEED :NEW-VALUE) (:METHOD FLOATING-EXPONENT-UNDERFLOW :CASE :PROCEED :USE-DENORMALIZED) (:METHOD FLOATING-EXPONENT-UNDERFLOW :CASE :PROCEED :USE-DOUBLE) with method-combination :CASE :BASE-FLAVOR-LAST
rather than using (:METHOD FLOATING-EXPONENT-UNDERFLOW :COMBINED :PROCEED) which comes from (:METHOD FLOATING-EXPONENT-UNDERFLOW :CASE :PROCEED :USE-DENORMALIZED) (:METHOD FLOATING-EXPONENT-UNDERFLOW :CASE :PROCEED :USE-DOUBLE) with method-combination :CASE :BASE-FLAVOR-LAST
This occurred in file Q:>sys>patch>System-242-143

FLOATING-EXPONENT-OVERFLOW's :DOCUMENT-PROCEED-TYPE combined method needs to be recompiled
to come from (:METHOD CONDITION :CASE :DOCUMENT-PROCEED-TYPE :WHICH-OPERATIONS) (:METHOD FLOATING-POINT-EXCEPTION :CASE :DOCUMENT-PROCEED-TYPE :USE-NON-TRAP-RESULT) (:METHOD FLOATING-POINT-EXCEPTION :CASE :DOCUMENT-PROCEED-TYPE :USE-ZERO) (:METHOD FLOATING-EXPONENT-OVERFLOW :CASE :DOCUMENT-PROCEED-TYPE :USE-INFINITE) (:METHOD CONDITION :OTHERWISE :DOCUMENT-PROCEED-TYPE) with method-combination :CASE :BASE-FLAVOR-LAST
rather than using (:METHOD FLOATING-EXPONENT-OVERFLOW :COMBINED :DOCUMENT-PROCEED-TYPE) which comes from (:METHOD CONDITION :CASE :DOCUMENT-PROCEED-TYPE :WHICH-OPERATIONS) (:METHOD FLOATING-EXPONENT-OVERFLOW :CASE :DOCUMENT-PROCEED-TYPE :USE-INFINITE) (:METHOD CONDITION :OTHERWISE :DOCUMENT-PROCEED-TYPE) with method-combination :CASE :BASE-FLAVOR-LAST
This occurred in file Q:>sys>patch>System-242-143

FLOATING-EXPONENT-OVERFLOW's :PROCEED combined method needs to be recompiled
to come from (:METHOD FLOATING-POINT-EXCEPTION :CASE :PROCEED :USE-NON-TRAP-RESULT) (:METHOD FLOATING-POINT-EXCEPTION :CASE :PROCEED :USE-ZERO) (:METHOD FLOATING-POINT-EXCEPTION :CASE :PROCEED :NEW-VALUE) (:METHOD FLOATING-EXPONENT-OVERFLOW :CASE :PROCEED :USE-INFINITE) (:METHOD FLOATING-EXPONENT-OVERFLOW :CASE :PROCEED :USE-DOUBLE) with method-combination :CASE :BASE-FLAVOR-LAST
rather than using (:METHOD FLOATING-EXPONENT-OVERFLOW :COMBINED :PROCEED) which comes from (:METHOD FLOATING-EXPONENT-OVERFLOW :CASE :PROCEED :USE-INFINITE) (:METHOD FLOATING-EXPONENT-OVERFLOW :CASE :PROCEED :USE-DOUBLE) with method-combination :CASE :BASE-FLAVOR-LAST
This occurred in file Q:>sys>patch>System-242-143

NEGATIVE-SQRT's :DOCUMENT-PROCEED-TYPE combined method needs to be recompiled
to come from (:METHOD CONDITION :CASE :DOCUMENT-PROCEED-TYPE :WHICH-OPERATIONS) (:METHOD FLOATING-POINT-EXCEPTION :CASE :DOCUMENT-PROCEED-TYPE :USE-NON-TRAP-RESULT) (:METHOD FLOATING-POINT-EXCEPTION :CASE :DOCUMENT-PROCEED-TYPE :USE-ZERO) (:METHOD CONDITION :OTHERWISE :DOCUMENT-PROCEED-TYPE) with method-combination :CASE :BASE-FLAVOR-LAST
rather than using (:METHOD CONDITION :COMBINED :DOCUMENT-PROCEED-TYPE) which comes from (:METHOD CONDITION :CASE :DOCUMENT-PROCEED-TYPE :WHICH-OPERATIONS) (:METHOD CONDITION :OTHERWISE :DOCUMENT-PROCEED-TYPE) with method-combination :CASE :BASE-FLAVOR-LAST
This occurred in file Q:>sys>patch>System-242-143

NEGATIVE-SQRT's :PROCEED combined method needs to be recompiled
to come from (:METHOD FLOATING-POINT-EXCEPTION :CASE :PROCEED :USE-NON-TRAP-RESULT) (:METHOD FLOATING-POINT-EXCEPTION :CASE :PROCEED :USE-ZERO) (:METHOD FLOATING-POINT-EXCEPTION :CASE :PROCEED :NEW-VALUE) with method-combination :CASE :BASE-FLAVOR-LAST
This occurred in file Q:>sys>patch>System-242-143

ZWEI:DAY-IN-MONTH-PANE's :DELETE-ITEM combined method needs to be recompiled
to come from (:METHOD ZWEI:DAY-IN-PERIOD-PANE :BEFORE :DELETE-ITEM) (:METHOD TV:TEXT-SCROLL-WINDOW :DELETE-ITEM) 
This occurred in file Q:>sys>zmail>patch-83-13

ZWEI:DAY-IN-WEEK-PANE's :DELETE-ITEM combined method needs to be recompiled
to come from (:METHOD ZWEI:DAY-IN-PERIOD-PANE :BEFORE :DELETE-ITEM) (:METHOD TV:TEXT-SCROLL-WINDOW :DELETE-ITEM) 
This occurred in file Q:>sys>zmail>patch-83-13

ZWEI:DAY-IN-WEEK-PANE's :END-OF-LINE-EXCEPTION combined method needs to be recompiled
to come from (:METHOD ZWEI:TRUNCATING-MOUSE-SENSITIVE-ITEMS :BEFORE :END-OF-LINE-EXCEPTION) (:METHOD TV:TEXT-SCROLL-WINDOW :BEFORE :END-OF-LINE-EXCEPTION) (:METHOD TV:SHEET :END-OF-LINE-EXCEPTION) 
rather than using (:METHOD ZWEI:DAY-IN-WEEK-PANE :COMBINED :END-OF-LINE-EXCEPTION) which comes from (:METHOD TV:TEXT-SCROLL-WINDOW :BEFORE :END-OF-LINE-EXCEPTION) (:METHOD ZWEI:TRUNCATING-MOUSE-SENSITIVE-ITEMS :BEFORE :END-OF-LINE-EXCEPTION) (:METHOD TV:SHEET :END-OF-LINE-EXCEPTION) 
This occurred in file Q:>sys>zmail>patch-83-13

ZWEI:DAY-IN-WEEK-PANE's :REFRESH combined method needs to be recompiled
to come from (:METHOD TV:BASIC-MOUSE-SENSITIVE-ITEMS :AFTER :REFRESH) (:METHOD TV:TEXT-SCROLL-WINDOW :AFTER :REFRESH) (:METHOD TV:SHEET :BEFORE :REFRESH) (:METHOD TV:SHEET :REFRESH) 
rather than using (:METHOD ZWEI:DAY-IN-WEEK-PANE :COMBINED :REFRESH) which comes from (:METHOD TV:TEXT-SCROLL-WINDOW :AFTER :REFRESH) (:METHOD TV:BASIC-MOUSE-SENSITIVE-ITEMS :AFTER :REFRESH) (:METHOD TV:SHEET :BEFORE :REFRESH) (:METHOD TV:SHEET :REFRESH) 
This occurred in file Q:>sys>zmail>patch-83-13

ZWEI:DAY-IN-MONTH-PANE's :END-OF-LINE-EXCEPTION combined method needs to be recompiled
to come from (:METHOD ZWEI:TRUNCATING-MOUSE-SENSITIVE-ITEMS :BEFORE :END-OF-LINE-EXCEPTION) (:METHOD TV:TEXT-SCROLL-WINDOW :BEFORE :END-OF-LINE-EXCEPTION) (:METHOD TV:SHEET :END-OF-LINE-EXCEPTION) 
rather than using (:METHOD ZWEI:DAY-IN-MONTH-PANE :COMBINED :END-OF-LINE-EXCEPTION) which comes from (:METHOD TV:TEXT-SCROLL-WINDOW :BEFORE :END-OF-LINE-EXCEPTION) (:METHOD ZWEI:TRUNCATING-MOUSE-SENSITIVE-ITEMS :BEFORE :END-OF-LINE-EXCEPTION) (:METHOD TV:SHEET :END-OF-LINE-EXCEPTION) 
This occurred in file Q:>sys>zmail>patch-83-13

ZWEI:DAY-IN-MONTH-PANE's :REFRESH combined method needs to be recompiled
to come from (:METHOD TV:BASIC-MOUSE-SENSITIVE-ITEMS :AFTER :REFRESH) (:METHOD TV:TEXT-SCROLL-WINDOW :AFTER :REFRESH) (:METHOD TV:SHEET :BEFORE :REFRESH) (:METHOD TV:SHEET :REFRESH) 
rather than using (:METHOD ZWEI:DAY-IN-MONTH-PANE :COMBINED :REFRESH) which comes from (:METHOD TV:TEXT-SCROLL-WINDOW :AFTER :REFRESH) (:METHOD TV:BASIC-MOUSE-SENSITIVE-ITEMS :AFTER :REFRESH) (:METHOD TV:SHEET :BEFORE :REFRESH) (:METHOD TV:SHEET :REFRESH) 
This occurred in file Q:>sys>zmail>patch-83-13

SI:BLOCK-DISK-STREAM's :CLOSE combined method needs to be recompiled
to come from (:METHOD SI:BLOCK-DISK-STREAM :AFTER :CLOSE) (:METHOD SI:STREAM :CLOSE) (:METHOD SI:BASE-DISK-STREAM :WHOPPER :CLOSE) 

SI:BLOCK-DISK-STREAM's :INIT combined method needs to be recompiled
to come from (:METHOD SI:BASE-DISK-STREAM :BEFORE :INIT) 

SI:MODEM's :INIT combined method needs to be recompiled
to come from (:METHOD SI:BASIC-SERIAL-STREAM :AFTER :INIT) (:METHOD SI:MODEM :AFTER :INIT) (:METHOD SI:MODEM :BEFORE :INIT) 
rather than using (:METHOD SI:MODEM :COMBINED :INIT) which comes from (:METHOD SI:BASIC-SERIAL-STREAM :AFTER :INIT) (:METHOD SI:MODEM :AFTER :INIT) 
This occurred in file Q:>sys>patch>System-242-161

SI:MODEM's :OPEN combined method needs to be recompiled
to come from (:METHOD SI:BASIC-SERIAL-STREAM :OPEN) (:METHOD SI:MODEM :WHOPPER :OPEN) 
This occurred in file Q:>sys>patch>System-242-161

FS:FEP-PATHNAME's :STRING-FOR-HOST combined method needs to be recompiled
to come from (:METHOD FS:FEP-PATHNAME :STRING-FOR-HOST) (:METHOD FS:REMOTE-PATHNAME :WRAPPER :STRING-FOR-HOST) 
rather than using (:METHOD FS:FEP-PATHNAME :COMBINED :STRING-FOR-HOST) which comes from (:METHOD FS:LMFS-PATHNAME-MIXIN :STRING-FOR-HOST) (:METHOD FS:REMOTE-PATHNAME :WRAPPER :STRING-FOR-HOST) 
This occurred in file Q:>sys>patch>System-242-167

FS:FEP-PATHNAME's :STRING-FOR-HOST combined method needs to be recompiled
to come from (:METHOD FS:LMFS-PATHNAME-MIXIN :STRING-FOR-HOST) (:METHOD FS:REMOTE-PATHNAME :WRAPPER :STRING-FOR-HOST) 
rather than using (:METHOD FS:FEP-PATHNAME :COMBINED :STRING-FOR-HOST) which comes from (:METHOD FS:FEP-PATHNAME :STRING-FOR-HOST) (:METHOD FS:REMOTE-PATHNAME :WRAPPER :STRING-FOR-HOST) 
This occurred in file Q:>sys>patch>System-242-167

SI:SERIAL-CHARACTER-STREAM's :OPEN combined method needs to be recompiled
to come from (:METHOD SI:BASIC-SERIAL-STREAM :AFTER :OPEN) (:METHOD SI:BASIC-SERIAL-STREAM :OPEN) 
This occurred in file Q:>sys>patch>System-242-191

SI:MODEM's :OPEN combined method needs to be recompiled
to come from (:METHOD SI:BASIC-SERIAL-STREAM :AFTER :OPEN) (:METHOD SI:BASIC-SERIAL-STREAM :OPEN) (:METHOD SI:MODEM :WHOPPER :OPEN) 
rather than using (:METHOD SI:MODEM :COMBINED :OPEN) which comes from (:METHOD SI:BASIC-SERIAL-STREAM :OPEN) (:METHOD SI:MODEM :WHOPPER :OPEN) 
This occurred in file Q:>sys>patch>System-242-191

SI:SERIAL-BINARY-STREAM's :OPEN combined method needs to be recompiled
to come from (:METHOD SI:BASIC-SERIAL-STREAM :AFTER :OPEN) (:METHOD SI:BASIC-SERIAL-STREAM :OPEN) 
This occurred in file Q:>sys>patch>System-242-191

SI:SERIAL-CHARACTER-STREAM's :TYI combined method needs to be recompiled
to come from (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :TYI) (:METHOD SI:ASCII-TRANSLATING-INPUT-STREAM-MIXIN :WHOPPER :TYI) (:METHOD SI:BASIC-SERIAL-STREAM :WHOPPER :TYI) 
rather than using (:METHOD SI:SERIAL-CHARACTER-STREAM :COMBINED :TYI) which comes from (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :TYI) (:METHOD SI:BASIC-SERIAL-STREAM :WHOPPER :TYI) (:METHOD SI:ASCII-TRANSLATING-INPUT-STREAM-MIXIN :WHOPPER :TYI) 
This occurred in file Q:>sys>patch>System-242-231

SI:SERIAL-CHARACTER-STREAM's :CLOSE combined method needs to be recompiled
to come from (:METHOD SI:BASIC-BUFFERED-OUTPUT-STREAM :BEFORE :CLOSE) (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :BEFORE :CLOSE) (:METHOD SI:BASIC-SERIAL-STREAM :CLOSE) 
rather than using (:METHOD SI:SERIAL-CHARACTER-STREAM :COMBINED :CLOSE) which comes from (:METHOD SI:BASIC-BUFFERED-OUTPUT-STREAM :BEFORE :CLOSE) (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :BEFORE :CLOSE) (:METHOD SI:STREAM :CLOSE) 
This occurred in file Q:>sys>patch>System-242-231

SI:SERIAL-CHARACTER-STREAM's :FINISH combined method needs to be recompiled
to come from (:METHOD SI:OUTPUT-STREAM :BEFORE :FINISH) (:METHOD SI:BASIC-SERIAL-STREAM :FINISH) 
rather than using (:METHOD SI:SERIAL-CHARACTER-STREAM :COMBINED :FINISH) which comes from (:METHOD SI:OUTPUT-STREAM :BEFORE :FINISH) (:METHOD SI:OUTPUT-STREAM :FINISH) 
This occurred in file Q:>sys>patch>System-242-231

CHAOS:CHAOS-HOST-NOT-RESPONDING-DURING-CONNECTION's :INIT combined method needs to be recompiled
to come from (:METHOD CHAOS:CHAOS-HOST-NOT-RESPONDING-DURING-CONNECTION :AFTER :INIT) (:METHOD CHAOS:REMOTE-CHAOS-ERROR :BEFORE :INIT) (:METHOD CONDITION :INIT) 
rather than using (:METHOD CHAOS:CHAOS-HOST-NOT-RESPONDING-DURING-CONNECTION :COMBINED :INIT) which comes from (:METHOD CHAOS:REMOTE-CHAOS-ERROR :BEFORE :INIT) (:METHOD CONDITION :INIT) 
This occurred in file Q:>sys>patch>System-242-242

NETI:3600-ETHERNET-INTERFACE's :RESET combined method needs to be recompiled
to come from (:METHOD NETI:ADDRESS-RESOLUTION-INTERFACE-MIXIN :AFTER :RESET) (:METHOD NETI:NETWORK-INTERFACE :BEFORE :RESET) (:METHOD NETI:3600-ETHERNET-INTERFACE :RESET) 
rather than using (:METHOD NETI:3600-ETHERNET-INTERFACE :COMBINED :RESET) which comes from (:METHOD NETI:NETWORK-INTERFACE :BEFORE :RESET) (:METHOD NETI:3600-ETHERNET-INTERFACE :RESET) 
This occurred in file Q:>sys>patch>System-242-249

NETI:3600-ETHERNET-INTERFACE's :ENABLE combined method needs to be recompiled
to come from (:METHOD NETI:ADDRESS-RESOLUTION-INTERFACE-MIXIN :BEFORE :ENABLE) (:METHOD NETI:3600-ETHERNET-INTERFACE :BEFORE :ENABLE) (:METHOD NETI:NETWORK-INTERFACE :ENABLE) 
rather than using (:METHOD NETI:3600-ETHERNET-INTERFACE :COMBINED :ENABLE) which comes from (:METHOD NETI:3600-ETHERNET-INTERFACE :BEFORE :ENABLE) (:METHOD NETI:NETWORK-INTERFACE :ENABLE) 
This occurred in file Q:>sys>patch>System-242-249

CHAOS:PUP-DATAGRAM-STREAM's :CLOSE-WITH-REASON combined method needs to be recompiled
to come from (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD SI:STREAM :CLOSE-WITH-REASON) 
This occurred in file Q:>sys>patch>System-242-256

SI:EMBEDDED-LENGTH-8-BIT-INPUT-STREAM's :CLOSE-WITH-REASON combined method needs to be recompiled
to come from (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD SI:STREAM :CLOSE-WITH-REASON) 
This occurred in file Q:>sys>patch>System-242-256

SI:RECORD-STREAM-8-BIT-INPUT-STREAM's :CLOSE-WITH-REASON combined method needs to be recompiled
to come from (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD SI:STREAM :CLOSE-WITH-REASON) 
This occurred in file Q:>sys>patch>System-242-256

SI:COROUTINE-BIDIRECTIONAL-STREAM's :CLOSE-WITH-REASON combined method needs to be recompiled
to come from (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD SI:STREAM :CLOSE-WITH-REASON) 
This occurred in file Q:>sys>patch>System-242-256

SI:COROUTINE-INPUT-STREAM's :CLOSE-WITH-REASON combined method needs to be recompiled
to come from (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD SI:STREAM :CLOSE-WITH-REASON) 
This occurred in file Q:>sys>patch>System-242-256

SI:EMBEDDED-LENGTH-CHARACTER-INPUT-STREAM's :CLOSE-WITH-REASON combined method needs to be recompiled
to come from (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD SI:STREAM :CLOSE-WITH-REASON) 
This occurred in file Q:>sys>patch>System-242-256

TAPE:CART-INPUT-STREAM's :CLOSE-WITH-REASON combined method needs to be recompiled
to come from (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD SI:STREAM :CLOSE-WITH-REASON) 
This occurred in file Q:>sys>patch>System-242-256

TAPE:CART-BIDIRECTIONAL-STREAM's :CLOSE-WITH-REASON combined method needs to be recompiled
to come from (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD SI:STREAM :CLOSE-WITH-REASON) 
This occurred in file Q:>sys>patch>System-242-256

SI:RECORD-STREAM-CHARACTER-INPUT-STREAM's :CLOSE-WITH-REASON combined method needs to be recompiled
to come from (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD SI:STREAM :CLOSE-WITH-REASON) 
This occurred in file Q:>sys>patch>System-242-256

SI:RECORD-STREAM-CHARACTER-IO-STREAM's :CLOSE-WITH-REASON combined method needs to be recompiled
to come from (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD SI:STREAM :CLOSE-WITH-REASON) 
This occurred in file Q:>sys>patch>System-242-256

TAPE:REMOTE-TAPE-INPUT-STREAM's :CLOSE-WITH-REASON combined method needs to be recompiled
to come from (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD SI:STREAM :CLOSE-WITH-REASON) 
This occurred in file Q:>sys>patch>System-242-256

TAPE:REMOTE-TAPE-IO-STREAM's :CLOSE-WITH-REASON combined method needs to be recompiled
to come from (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD SI:STREAM :CLOSE-WITH-REASON) 
This occurred in file Q:>sys>patch>System-242-256

SI:INPUT-BINARY-DISK-STREAM's :CLOSE-WITH-REASON combined method needs to be recompiled
to come from (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD SI:STREAM :CLOSE-WITH-REASON) 
This occurred in file Q:>sys>patch>System-242-256

SI:INPUT-CHARACTER-DISK-STREAM's :CLOSE-WITH-REASON combined method needs to be recompiled
to come from (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD SI:STREAM :CLOSE-WITH-REASON) 
This occurred in file Q:>sys>patch>System-242-256

LMFS:LMFS-DIRECT-ACCESS-CHAR-INPUT-OPENING's :CLOSE-WITH-REASON combined method needs to be recompiled
to come from (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD SI:STREAM :CLOSE-WITH-REASON) 
This occurred in file Q:>sys>patch>System-242-256

LMFS:LMFS-CHAR-INPUT-OPENING's :CLOSE-WITH-REASON combined method needs to be recompiled
to come from (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD SI:STREAM :CLOSE-WITH-REASON) 
This occurred in file Q:>sys>patch>System-242-256

LMFS:LMFS-DIRECT-ACCESS-BINARY-INPUT-OPENING's :CLOSE-WITH-REASON combined method needs to be recompiled
to come from (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD SI:STREAM :CLOSE-WITH-REASON) 
This occurred in file Q:>sys>patch>System-242-256

LMFS:LMFS-BINARY-INPUT-OPENING's :CLOSE-WITH-REASON combined method needs to be recompiled
to come from (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD SI:STREAM :CLOSE-WITH-REASON) 
This occurred in file Q:>sys>patch>System-242-256

SI:SERIAL-CHARACTER-STREAM's :CLOSE-WITH-REASON combined method needs to be recompiled
to come from (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD SI:STREAM :CLOSE-WITH-REASON) 
This occurred in file Q:>sys>patch>System-242-256

FS:TCP-FTP-BLOCK-MODE-CHARACTER-INPUT-STREAM's :CLOSE-WITH-REASON combined method needs to be recompiled
to come from (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD SI:STREAM :CLOSE-WITH-REASON) 
This occurred in file Q:>sys>patch>System-242-256

FS:TCP-FTP-BLOCK-MODE-BINARY-INPUT-STREAM's :CLOSE-WITH-REASON combined method needs to be recompiled
to come from (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD SI:STREAM :CLOSE-WITH-REASON) 
This occurred in file Q:>sys>patch>System-242-256

CHAOS:SIMPLE-STREAM's :CLOSE-WITH-REASON combined method needs to be recompiled
to come from (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD CHAOS:BASIC-STREAM :CLOSE-WITH-REASON) 
This occurred in file Q:>sys>patch>System-242-256

CHAOS:INPUT-CHARACTER-STREAM's :CLOSE-WITH-REASON combined method needs to be recompiled
to come from (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD CHAOS:BASIC-STREAM :CLOSE-WITH-REASON) 
This occurred in file Q:>sys>patch>System-242-256

TCP:GATEWAY-TCP-STREAM's :CLOSE-WITH-REASON combined method needs to be recompiled
to come from (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD CHAOS:BASIC-STREAM :CLOSE-WITH-REASON) 
This occurred in file Q:>sys>patch>System-242-256

CHAOS:CHARACTER-STREAM's :CLOSE-WITH-REASON combined method needs to be recompiled
to come from (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD CHAOS:BASIC-STREAM :CLOSE-WITH-REASON) 
This occurred in file Q:>sys>patch>System-242-256

CHAOS:ASCII-TRANSLATING-INPUT-CHARACTER-STREAM's :CLOSE-WITH-REASON combined method needs to be recompiled
to come from (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD CHAOS:BASIC-STREAM :CLOSE-WITH-REASON) 
This occurred in file Q:>sys>patch>System-242-256

CHAOS:TELNET-STREAM's :CLOSE-WITH-REASON combined method needs to be recompiled
to come from (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD CHAOS:BASIC-STREAM :CLOSE-WITH-REASON) 
This occurred in file Q:>sys>patch>System-242-256

TCP:GATEWAY-TCP-ASCII-TRANSLATING-STREAM's :CLOSE-WITH-REASON combined method needs to be recompiled
to come from (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD CHAOS:BASIC-STREAM :CLOSE-WITH-REASON) 
This occurred in file Q:>sys>patch>System-242-256

CHAOS:ASCII-TRANSLATING-CHARACTER-STREAM's :CLOSE-WITH-REASON combined method needs to be recompiled
to come from (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD CHAOS:BASIC-STREAM :CLOSE-WITH-REASON) 
This occurred in file Q:>sys>patch>System-242-256

FS:FILE-DIRECTORY-STREAM's :CLOSE-WITH-REASON combined method needs to be recompiled
to come from (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD CHAOS:BASIC-STREAM :CLOSE-WITH-REASON) 
This occurred in file Q:>sys>patch>System-242-256

FS:FILE-INPUT-CHARACTER-STREAM's :CLOSE-WITH-REASON combined method needs to be recompiled
to come from (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD CHAOS:BASIC-STREAM :CLOSE-WITH-REASON) 
This occurred in file Q:>sys>patch>System-242-256

CHAOS:INPUT-BINARY-STREAM's :CLOSE-WITH-REASON combined method needs to be recompiled
to come from (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD CHAOS:BASIC-STREAM :CLOSE-WITH-REASON) 
This occurred in file Q:>sys>patch>System-242-256

CHAOS:BINARY-STREAM's :CLOSE-WITH-REASON combined method needs to be recompiled
to come from (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD CHAOS:BASIC-STREAM :CLOSE-WITH-REASON) 
This occurred in file Q:>sys>patch>System-242-256

FS:FILE-INPUT-BINARY-STREAM's :CLOSE-WITH-REASON combined method needs to be recompiled
to come from (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD CHAOS:BASIC-STREAM :CLOSE-WITH-REASON) 
This occurred in file Q:>sys>patch>System-242-256

SI:MODEM's :CLOSE-WITH-REASON combined method needs to be recompiled
to come from (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD SI:STREAM :CLOSE-WITH-REASON) 
This occurred in file Q:>sys>patch>System-242-256

SI:SERIAL-BINARY-STREAM's :CLOSE-WITH-REASON combined method needs to be recompiled
to come from (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD SI:STREAM :CLOSE-WITH-REASON) 
This occurred in file Q:>sys>patch>System-242-256

SI:COROUTINE-BIDIRECTIONAL-STREAM's :CLOSE-WITH-REASON combined method needs to be recompiled
to come from (:METHOD SI:BASIC-BUFFERED-OUTPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD SI:STREAM :CLOSE-WITH-REASON) 
rather than using (:METHOD SI:COROUTINE-BIDIRECTIONAL-STREAM :COMBINED :CLOSE-WITH-REASON) which comes from (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD SI:STREAM :CLOSE-WITH-REASON) 
This occurred in file Q:>sys>patch>System-242-256

SI:COROUTINE-OUTPUT-STREAM's :CLOSE-WITH-REASON combined method needs to be recompiled
to come from (:METHOD SI:BASIC-BUFFERED-OUTPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD SI:STREAM :CLOSE-WITH-REASON) 
This occurred in file Q:>sys>patch>System-242-256

SI:EMBEDDED-LENGTH-CHARACTER-OUTPUT-STREAM's :CLOSE-WITH-REASON combined method needs to be recompiled
to come from (:METHOD SI:BASIC-BUFFERED-OUTPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD SI:STREAM :CLOSE-WITH-REASON) 
This occurred in file Q:>sys>patch>System-242-256

TAPE:CART-OUTPUT-STREAM's :CLOSE-WITH-REASON combined method needs to be recompiled
to come from (:METHOD SI:BASIC-BUFFERED-OUTPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD SI:STREAM :CLOSE-WITH-REASON) 
This occurred in file Q:>sys>patch>System-242-256

TAPE:CART-BIDIRECTIONAL-STREAM's :CLOSE-WITH-REASON combined method needs to be recompiled
to come from (:METHOD SI:BASIC-BUFFERED-OUTPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD SI:STREAM :CLOSE-WITH-REASON) 
rather than using (:METHOD TAPE:CART-BIDIRECTIONAL-STREAM :COMBINED :CLOSE-WITH-REASON) which comes from (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD SI:STREAM :CLOSE-WITH-REASON) 
This occurred in file Q:>sys>patch>System-242-256

SI:RECORD-STREAM-CHARACTER-OUTPUT-STREAM's :CLOSE-WITH-REASON combined method needs to be recompiled
to come from (:METHOD SI:BASIC-BUFFERED-OUTPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD SI:STREAM :CLOSE-WITH-REASON) 
This occurred in file Q:>sys>patch>System-242-256

SI:RECORD-STREAM-CHARACTER-IO-STREAM's :CLOSE-WITH-REASON combined method needs to be recompiled
to come from (:METHOD SI:BASIC-BUFFERED-OUTPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD SI:STREAM :CLOSE-WITH-REASON) 
rather than using (:METHOD SI:RECORD-STREAM-CHARACTER-IO-STREAM :COMBINED :CLOSE-WITH-REASON) which comes from (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD SI:STREAM :CLOSE-WITH-REASON) 
This occurred in file Q:>sys>patch>System-242-256

TAPE:REMOTE-TAPE-OUTPUT-STREAM's :CLOSE-WITH-REASON combined method needs to be recompiled
to come from (:METHOD SI:BASIC-BUFFERED-OUTPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD SI:STREAM :CLOSE-WITH-REASON) 
This occurred in file Q:>sys>patch>System-242-256

SI:EMBEDDED-LENGTH-8-BIT-OUTPUT-STREAM's :CLOSE-WITH-REASON combined method needs to be recompiled
to come from (:METHOD SI:BASIC-BUFFERED-OUTPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD SI:STREAM :CLOSE-WITH-REASON) 
This occurred in file Q:>sys>patch>System-242-256

SI:RECORD-STREAM-8-BIT-OUTPUT-STREAM's :CLOSE-WITH-REASON combined method needs to be recompiled
to come from (:METHOD SI:BASIC-BUFFERED-OUTPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD SI:STREAM :CLOSE-WITH-REASON) 
This occurred in file Q:>sys>patch>System-242-256

TAPE:REMOTE-TAPE-IO-STREAM's :CLOSE-WITH-REASON combined method needs to be recompiled
to come from (:METHOD SI:BASIC-BUFFERED-OUTPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD SI:STREAM :CLOSE-WITH-REASON) 
rather than using (:METHOD TAPE:REMOTE-TAPE-IO-STREAM :COMBINED :CLOSE-WITH-REASON) which comes from (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD SI:STREAM :CLOSE-WITH-REASON) 
This occurred in file Q:>sys>patch>System-242-256

SI:MODEM's :CLOSE-WITH-REASON combined method needs to be recompiled
to come from (:METHOD SI:BASIC-BUFFERED-OUTPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD SI:STREAM :CLOSE-WITH-REASON) 
rather than using (:METHOD SI:MODEM :COMBINED :CLOSE-WITH-REASON) which comes from (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD SI:STREAM :CLOSE-WITH-REASON) 
This occurred in file Q:>sys>patch>System-242-256

SI:SERIAL-BINARY-STREAM's :CLOSE-WITH-REASON combined method needs to be recompiled
to come from (:METHOD SI:BASIC-BUFFERED-OUTPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD SI:STREAM :CLOSE-WITH-REASON) 
rather than using (:METHOD SI:SERIAL-BINARY-STREAM :COMBINED :CLOSE-WITH-REASON) which comes from (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD SI:STREAM :CLOSE-WITH-REASON) 
This occurred in file Q:>sys>patch>System-242-256

SI:OUTPUT-BINARY-DISK-STREAM's :CLOSE-WITH-REASON combined method needs to be recompiled
to come from (:METHOD SI:BASIC-BUFFERED-OUTPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD SI:STREAM :CLOSE-WITH-REASON) 
This occurred in file Q:>sys>patch>System-242-256

SI:OUTPUT-CHARACTER-DISK-STREAM's :CLOSE-WITH-REASON combined method needs to be recompiled
to come from (:METHOD SI:BASIC-BUFFERED-OUTPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD SI:STREAM :CLOSE-WITH-REASON) 
This occurred in file Q:>sys>patch>System-242-256

LMFS:LMFS-DIRECT-ACCESS-CHAR-OUTPUT-OPENING's :CLOSE-WITH-REASON combined method needs to be recompiled
to come from (:METHOD SI:BASIC-BUFFERED-OUTPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD SI:STREAM :CLOSE-WITH-REASON) 
This occurred in file Q:>sys>patch>System-242-256

LMFS:LMFS-CHAR-OUTPUT-OPENING's :CLOSE-WITH-REASON combined method needs to be recompiled
to come from (:METHOD SI:BASIC-BUFFERED-OUTPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD SI:STREAM :CLOSE-WITH-REASON) 
This occurred in file Q:>sys>patch>System-242-256

LMFS:LMFS-DIRECT-ACCESS-BINARY-OUTPUT-OPENING's :CLOSE-WITH-REASON combined method needs to be recompiled
to come from (:METHOD SI:BASIC-BUFFERED-OUTPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD SI:STREAM :CLOSE-WITH-REASON) 
This occurred in file Q:>sys>patch>System-242-256

LMFS:LMFS-BINARY-OUTPUT-OPENING's :CLOSE-WITH-REASON combined method needs to be recompiled
to come from (:METHOD SI:BASIC-BUFFERED-OUTPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD SI:STREAM :CLOSE-WITH-REASON) 
This occurred in file Q:>sys>patch>System-242-256

SI:SERIAL-CHARACTER-STREAM's :CLOSE-WITH-REASON combined method needs to be recompiled
to come from (:METHOD SI:BASIC-BUFFERED-OUTPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD SI:STREAM :CLOSE-WITH-REASON) 
rather than using (:METHOD SI:SERIAL-CHARACTER-STREAM :COMBINED :CLOSE-WITH-REASON) which comes from (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD SI:STREAM :CLOSE-WITH-REASON) 
This occurred in file Q:>sys>patch>System-242-256

FS:TCP-FTP-BLOCK-MODE-CHARACTER-OUTPUT-STREAM's :CLOSE-WITH-REASON combined method needs to be recompiled
to come from (:METHOD SI:BASIC-BUFFERED-OUTPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD SI:STREAM :CLOSE-WITH-REASON) 
This occurred in file Q:>sys>patch>System-242-256

FS:TCP-FTP-BLOCK-MODE-BINARY-OUTPUT-STREAM's :CLOSE-WITH-REASON combined method needs to be recompiled
to come from (:METHOD SI:BASIC-BUFFERED-OUTPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD SI:STREAM :CLOSE-WITH-REASON) 
This occurred in file Q:>sys>patch>System-242-256

CHAOS:OUTPUT-CHARACTER-STREAM's :CLOSE-WITH-REASON combined method needs to be recompiled
to come from (:METHOD SI:BASIC-BUFFERED-OUTPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD CHAOS:BASIC-STREAM :CLOSE-WITH-REASON) 
This occurred in file Q:>sys>patch>System-242-256

TCP:GATEWAY-TCP-STREAM's :CLOSE-WITH-REASON combined method needs to be recompiled
to come from (:METHOD SI:BASIC-BUFFERED-OUTPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD CHAOS:BASIC-STREAM :CLOSE-WITH-REASON) 
rather than using (:METHOD TCP:GATEWAY-TCP-STREAM :COMBINED :CLOSE-WITH-REASON) which comes from (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD CHAOS:BASIC-STREAM :CLOSE-WITH-REASON) 
This occurred in file Q:>sys>patch>System-242-256

CHAOS:CHARACTER-STREAM's :CLOSE-WITH-REASON combined method needs to be recompiled
to come from (:METHOD SI:BASIC-BUFFERED-OUTPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD CHAOS:BASIC-STREAM :CLOSE-WITH-REASON) 
rather than using (:METHOD CHAOS:CHARACTER-STREAM :COMBINED :CLOSE-WITH-REASON) which comes from (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD CHAOS:BASIC-STREAM :CLOSE-WITH-REASON) 
This occurred in file Q:>sys>patch>System-242-256

CHAOS:ASCII-TRANSLATING-OUTPUT-CHARACTER-STREAM's :CLOSE-WITH-REASON combined method needs to be recompiled
to come from (:METHOD SI:BASIC-BUFFERED-OUTPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD CHAOS:BASIC-STREAM :CLOSE-WITH-REASON) 
This occurred in file Q:>sys>patch>System-242-256

CHAOS:TELNET-STREAM's :CLOSE-WITH-REASON combined method needs to be recompiled
to come from (:METHOD SI:BASIC-BUFFERED-OUTPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD CHAOS:BASIC-STREAM :CLOSE-WITH-REASON) 
rather than using (:METHOD CHAOS:TELNET-STREAM :COMBINED :CLOSE-WITH-REASON) which comes from (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD CHAOS:BASIC-STREAM :CLOSE-WITH-REASON) 
This occurred in file Q:>sys>patch>System-242-256

TCP:GATEWAY-TCP-ASCII-TRANSLATING-STREAM's :CLOSE-WITH-REASON combined method needs to be recompiled
to come from (:METHOD SI:BASIC-BUFFERED-OUTPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD CHAOS:BASIC-STREAM :CLOSE-WITH-REASON) 
rather than using (:METHOD TCP:GATEWAY-TCP-ASCII-TRANSLATING-STREAM :COMBINED :CLOSE-WITH-REASON) which comes from (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD CHAOS:BASIC-STREAM :CLOSE-WITH-REASON) 
This occurred in file Q:>sys>patch>System-242-256

CHAOS:ASCII-TRANSLATING-CHARACTER-STREAM's :CLOSE-WITH-REASON combined method needs to be recompiled
to come from (:METHOD SI:BASIC-BUFFERED-OUTPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD CHAOS:BASIC-STREAM :CLOSE-WITH-REASON) 
rather than using (:METHOD CHAOS:ASCII-TRANSLATING-CHARACTER-STREAM :COMBINED :CLOSE-WITH-REASON) which comes from (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD CHAOS:BASIC-STREAM :CLOSE-WITH-REASON) 
This occurred in file Q:>sys>patch>System-242-256

FS:FILE-OUTPUT-CHARACTER-STREAM's :CLOSE-WITH-REASON combined method needs to be recompiled
to come from (:METHOD SI:BASIC-BUFFERED-OUTPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD CHAOS:BASIC-STREAM :CLOSE-WITH-REASON) 
This occurred in file Q:>sys>patch>System-242-256

CHAOS:OUTPUT-BINARY-STREAM's :CLOSE-WITH-REASON combined method needs to be recompiled
to come from (:METHOD SI:BASIC-BUFFERED-OUTPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD CHAOS:BASIC-STREAM :CLOSE-WITH-REASON) 
This occurred in file Q:>sys>patch>System-242-256

CHAOS:BINARY-STREAM's :CLOSE-WITH-REASON combined method needs to be recompiled
to come from (:METHOD SI:BASIC-BUFFERED-OUTPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD CHAOS:BASIC-STREAM :CLOSE-WITH-REASON) 
rather than using (:METHOD CHAOS:BINARY-STREAM :COMBINED :CLOSE-WITH-REASON) which comes from (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD CHAOS:BASIC-STREAM :CLOSE-WITH-REASON) 
This occurred in file Q:>sys>patch>System-242-256

FS:FILE-OUTPUT-BINARY-STREAM's :CLOSE-WITH-REASON combined method needs to be recompiled
to come from (:METHOD SI:BASIC-BUFFERED-OUTPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD CHAOS:BASIC-STREAM :CLOSE-WITH-REASON) 
This occurred in file Q:>sys>patch>System-242-256

CHAOS:INPUT-CHARACTER-STREAM's :CLOSE-WITH-REASON combined method needs to be recompiled
to come from (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD CHAOS:INPUT-STREAM-MIXIN :BEFORE :CLOSE-WITH-REASON) (:METHOD CHAOS:BASIC-STREAM :CLOSE-WITH-REASON) 
rather than using (:METHOD CHAOS:INPUT-CHARACTER-STREAM :COMBINED :CLOSE-WITH-REASON) which comes from (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD CHAOS:BASIC-STREAM :CLOSE-WITH-REASON) 
This occurred in file Q:>sys>patch>System-242-260

TCP:GATEWAY-TCP-STREAM's :CLOSE-WITH-REASON combined method needs to be recompiled
to come from (:METHOD SI:BASIC-BUFFERED-OUTPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD CHAOS:INPUT-STREAM-MIXIN :BEFORE :CLOSE-WITH-REASON) (:METHOD CHAOS:BASIC-STREAM :CLOSE-WITH-REASON) 
rather than using (:METHOD TCP:GATEWAY-TCP-STREAM :COMBINED :CLOSE-WITH-REASON) which comes from (:METHOD SI:BASIC-BUFFERED-OUTPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD CHAOS:BASIC-STREAM :CLOSE-WITH-REASON) 
This occurred in file Q:>sys>patch>System-242-260

CHAOS:CHARACTER-STREAM's :CLOSE-WITH-REASON combined method needs to be recompiled
to come from (:METHOD SI:BASIC-BUFFERED-OUTPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD CHAOS:INPUT-STREAM-MIXIN :BEFORE :CLOSE-WITH-REASON) (:METHOD CHAOS:BASIC-STREAM :CLOSE-WITH-REASON) 
rather than using (:METHOD CHAOS:CHARACTER-STREAM :COMBINED :CLOSE-WITH-REASON) which comes from (:METHOD SI:BASIC-BUFFERED-OUTPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD CHAOS:BASIC-STREAM :CLOSE-WITH-REASON) 
This occurred in file Q:>sys>patch>System-242-260

CHAOS:ASCII-TRANSLATING-INPUT-CHARACTER-STREAM's :CLOSE-WITH-REASON combined method needs to be recompiled
to come from (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD CHAOS:INPUT-STREAM-MIXIN :BEFORE :CLOSE-WITH-REASON) (:METHOD CHAOS:BASIC-STREAM :CLOSE-WITH-REASON) 
rather than using (:METHOD CHAOS:ASCII-TRANSLATING-INPUT-CHARACTER-STREAM :COMBINED :CLOSE-WITH-REASON) which comes from (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD CHAOS:BASIC-STREAM :CLOSE-WITH-REASON) 
This occurred in file Q:>sys>patch>System-242-260

CHAOS:TELNET-STREAM's :CLOSE-WITH-REASON combined method needs to be recompiled
to come from (:METHOD SI:BASIC-BUFFERED-OUTPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD CHAOS:INPUT-STREAM-MIXIN :BEFORE :CLOSE-WITH-REASON) (:METHOD CHAOS:BASIC-STREAM :CLOSE-WITH-REASON) 
rather than using (:METHOD CHAOS:TELNET-STREAM :COMBINED :CLOSE-WITH-REASON) which comes from (:METHOD SI:BASIC-BUFFERED-OUTPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD CHAOS:BASIC-STREAM :CLOSE-WITH-REASON) 
This occurred in file Q:>sys>patch>System-242-260

TCP:GATEWAY-TCP-ASCII-TRANSLATING-STREAM's :CLOSE-WITH-REASON combined method needs to be recompiled
to come from (:METHOD SI:BASIC-BUFFERED-OUTPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD CHAOS:INPUT-STREAM-MIXIN :BEFORE :CLOSE-WITH-REASON) (:METHOD CHAOS:BASIC-STREAM :CLOSE-WITH-REASON) 
rather than using (:METHOD TCP:GATEWAY-TCP-ASCII-TRANSLATING-STREAM :COMBINED :CLOSE-WITH-REASON) which comes from (:METHOD SI:BASIC-BUFFERED-OUTPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD CHAOS:BASIC-STREAM :CLOSE-WITH-REASON) 
This occurred in file Q:>sys>patch>System-242-260

CHAOS:ASCII-TRANSLATING-CHARACTER-STREAM's :CLOSE-WITH-REASON combined method needs to be recompiled
to come from (:METHOD SI:BASIC-BUFFERED-OUTPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD CHAOS:INPUT-STREAM-MIXIN :BEFORE :CLOSE-WITH-REASON) (:METHOD CHAOS:BASIC-STREAM :CLOSE-WITH-REASON) 
rather than using (:METHOD CHAOS:ASCII-TRANSLATING-CHARACTER-STREAM :COMBINED :CLOSE-WITH-REASON) which comes from (:METHOD SI:BASIC-BUFFERED-OUTPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD CHAOS:BASIC-STREAM :CLOSE-WITH-REASON) 
This occurred in file Q:>sys>patch>System-242-260

FS:FILE-DIRECTORY-STREAM's :CLOSE-WITH-REASON combined method needs to be recompiled
to come from (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD CHAOS:INPUT-STREAM-MIXIN :BEFORE :CLOSE-WITH-REASON) (:METHOD CHAOS:BASIC-STREAM :CLOSE-WITH-REASON) 
rather than using (:METHOD FS:FILE-DIRECTORY-STREAM :COMBINED :CLOSE-WITH-REASON) which comes from (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD CHAOS:BASIC-STREAM :CLOSE-WITH-REASON) 
This occurred in file Q:>sys>patch>System-242-260

FS:FILE-INPUT-CHARACTER-STREAM's :CLOSE-WITH-REASON combined method needs to be recompiled
to come from (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD CHAOS:INPUT-STREAM-MIXIN :BEFORE :CLOSE-WITH-REASON) (:METHOD CHAOS:BASIC-STREAM :CLOSE-WITH-REASON) 
rather than using (:METHOD FS:FILE-INPUT-CHARACTER-STREAM :COMBINED :CLOSE-WITH-REASON) which comes from (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD CHAOS:BASIC-STREAM :CLOSE-WITH-REASON) 
This occurred in file Q:>sys>patch>System-242-260

CHAOS:INPUT-BINARY-STREAM's :CLOSE-WITH-REASON combined method needs to be recompiled
to come from (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD CHAOS:INPUT-STREAM-MIXIN :BEFORE :CLOSE-WITH-REASON) (:METHOD CHAOS:BASIC-STREAM :CLOSE-WITH-REASON) 
rather than using (:METHOD CHAOS:INPUT-BINARY-STREAM :COMBINED :CLOSE-WITH-REASON) which comes from (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD CHAOS:BASIC-STREAM :CLOSE-WITH-REASON) 
This occurred in file Q:>sys>patch>System-242-260

CHAOS:BINARY-STREAM's :CLOSE-WITH-REASON combined method needs to be recompiled
to come from (:METHOD SI:BASIC-BUFFERED-OUTPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD CHAOS:INPUT-STREAM-MIXIN :BEFORE :CLOSE-WITH-REASON) (:METHOD CHAOS:BASIC-STREAM :CLOSE-WITH-REASON) 
rather than using (:METHOD CHAOS:BINARY-STREAM :COMBINED :CLOSE-WITH-REASON) which comes from (:METHOD SI:BASIC-BUFFERED-OUTPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD CHAOS:BASIC-STREAM :CLOSE-WITH-REASON) 
This occurred in file Q:>sys>patch>System-242-260

FS:FILE-INPUT-BINARY-STREAM's :CLOSE-WITH-REASON combined method needs to be recompiled
to come from (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD CHAOS:INPUT-STREAM-MIXIN :BEFORE :CLOSE-WITH-REASON) (:METHOD CHAOS:BASIC-STREAM :CLOSE-WITH-REASON) 
rather than using (:METHOD FS:FILE-INPUT-BINARY-STREAM :COMBINED :CLOSE-WITH-REASON) which comes from (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD CHAOS:BASIC-STREAM :CLOSE-WITH-REASON) 
This occurred in file Q:>sys>patch>System-242-260

CHAOS:SIMPLE-STREAM's :CLOSE-WITH-REASON combined method needs to be recompiled
to come from (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD CHAOS:INPUT-STREAM-MIXIN :BEFORE :CLOSE-WITH-REASON) (:METHOD CHAOS:BASIC-STREAM :CLOSE-WITH-REASON) 
rather than using (:METHOD CHAOS:SIMPLE-STREAM :COMBINED :CLOSE-WITH-REASON) which comes from (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :BEFORE :CLOSE-WITH-REASON) (:METHOD CHAOS:BASIC-STREAM :CLOSE-WITH-REASON) 
This occurred in file Q:>sys>patch>System-242-260

ZWEI:ZMAIL-SUMMARY-SCROLL-WINDOW's :REDISPLAY combined method needs to be recompiled
to come from (:METHOD TV:BASIC-SCROLL-WINDOW :AFTER :REDISPLAY) (:METHOD TV:SCROLL-WINDOW-WITH-TYPEOUT-MIXIN :BEFORE :REDISPLAY) (:METHOD ZWEI:ZMAIL-SUMMARY-SCROLL-WINDOW :BEFORE :REDISPLAY) (:METHOD TV:BASIC-SCROLL-WINDOW :REDISPLAY) (:METHOD ZWEI:ZMAIL-SUMMARY-SCROLL-WINDOW :WHOPPER :REDISPLAY) 
rather than using (:METHOD ZWEI:ZMAIL-SUMMARY-SCROLL-WINDOW :COMBINED :REDISPLAY) which comes from (:METHOD TV:BASIC-SCROLL-WINDOW :AFTER :REDISPLAY) (:METHOD TV:SCROLL-WINDOW-WITH-TYPEOUT-MIXIN :BEFORE :REDISPLAY) (:METHOD ZWEI:ZMAIL-SUMMARY-SCROLL-WINDOW :BEFORE :REDISPLAY) (:METHOD TV:BASIC-SCROLL-WINDOW :REDISPLAY) 
This occurred in file Q:>sys>zmail>patch-83-21

NETI:NAMESPACE-SERVER-ERROR's :REPORT combined method needs to be recompiled
to come from (:METHOD NETI:NAMESPACE-SERVER-ERROR :REPORT) (:METHOD CONDITION :WHOPPER :REPORT) 
rather than using (:METHOD CONDITION :COMBINED :REPORT) which comes from (:METHOD CONDITION :WHOPPER :REPORT) 

FS:LOCAL-LMFS-ACCESS-PATH's :PEEK-FILE-SYSTEM-HEADER combined method needs to be recompiled
to come from (:METHOD FS:FILE-ACCESS-PATH :PEEK-FILE-SYSTEM-HEADER) (:METHOD FS:USER-FILE-ACCESS-PATH :PEEK-FILE-SYSTEM-HEADER) with method-combination :LIST :BASE-FLAVOR-FIRST

FS:LOCAL-LMFS-ACCESS-PATH's :PEEK-FILE-SYSTEM combined method needs to be recompiled
to come from (:METHOD FS:FILE-ACCESS-PATH :DEFAULT :PEEK-FILE-SYSTEM) with method-combination :LIST :BASE-FLAVOR-FIRST

ZWEI:BABYL-BUFFER's :CERTIFY-FOR-SELECTION combined method needs to be recompiled
to come from (:METHOD ZWEI:SEQUENCE :BEFORE :CERTIFY-FOR-SELECTION) (:METHOD ZWEI:MSG-BUFFER :CERTIFY-FOR-SELECTION) 
rather than using (:METHOD ZWEI:ITS-BUFFER-MIXIN :COMBINED :CERTIFY-FOR-SELECTION) which comes from 

ZWEI:BABYL-BUFFER's :PREPARE-UNIVERSE combined method needs to be recompiled
to come from (:METHOD ZWEI:SEQUENCE :BEFORE :PREPARE-UNIVERSE) (:METHOD ZWEI:MSG-BUFFER :PREPARE-UNIVERSE) 
rather than using (:METHOD ZWEI:ITS-BUFFER-MIXIN :COMBINED :PREPARE-UNIVERSE) which comes from 

ZWEI:BABYL-BUFFER's :READ-NEXT-MSG combined method needs to be recompiled
to come from (:METHOD ZWEI:MSG-BUFFER :READ-NEXT-MSG) (:METHOD ZWEI:MSG-BUFFER :WHOPPER :READ-NEXT-MSG) 
rather than using (:METHOD ZWEI:ITS-BUFFER-MIXIN :COMBINED :READ-NEXT-MSG) which comes from 

ZWEI:BABYL-BUFFER's :ADD-SEQUENCE combined method needs to be recompiled
to come from (:METHOD ZWEI:SEQUENCE :ADD-SEQUENCE) (:METHOD ZWEI:MSG-BUFFER :WRAPPER :ADD-SEQUENCE) 
rather than using (:METHOD ZWEI:ITS-BUFFER-MIXIN :COMBINED :ADD-SEQUENCE) which comes from 

ZWEI:BABYL-BUFFER's :EXPUNGE combined method needs to be recompiled
to come from (:METHOD ZWEI:UNIVERSE-SEQUENCE-MIXIN :BEFORE :EXPUNGE) (:METHOD ZWEI:MSG-BUFFER :BEFORE :EXPUNGE) (:METHOD ZWEI:SEQUENCE :EXPUNGE) 
rather than using (:METHOD ZWEI:ITS-BUFFER-MIXIN :COMBINED :EXPUNGE) which comes from 

ZWEI:BABYL-BUFFER's :KILL combined method needs to be recompiled
to come from (:METHOD ZWEI:MSG-BUFFER :AFTER :KILL) (:METHOD ZWEI:MSG-BUFFER :BEFORE :KILL) (:METHOD ZWEI:SEQUENCE :KILL) (:METHOD ZWEI:SEQUENCE :WHOPPER :KILL) (:METHOD ZWEI:MSG-BUFFER :WHOPPER :KILL) 
rather than using (:METHOD ZWEI:ITS-BUFFER-MIXIN :COMBINED :KILL) which comes from with method-combination ((:METHOD ZWEI:TENEX-BUFFER-MIXIN :AFTER :INIT)) NIL

ZWEI:BABYL-BUFFER's :GET-REFERENCED-MSGS combined method needs to be recompiled
to come from (:METHOD ZWEI:SEQUENCE :BEFORE :GET-REFERENCED-MSGS) (:METHOD ZWEI:UNIVERSE-SEQUENCE-MIXIN :GET-REFERENCED-MSGS) 
rather than using (:METHOD ZWEI:ITS-BUFFER-MIXIN :COMBINED :GET-REFERENCED-MSGS) which comes from with method-combination (:METHOD ZWEI:UNIVERSE-SEQUENCE-MIXIN :CREATE-REFERENCE-HASH-TABLE) NIL

ZWEI:BABYL-BUFFER's :MSG-ID-CHANGED combined method needs to be recompiled
to come from (:METHOD ZWEI:UNIVERSE-SEQUENCE-MIXIN :MSG-ID-CHANGED) (:METHOD ZWEI:UNIVERSE-SEQUENCE-MIXIN :WHOPPER :MSG-ID-CHANGED) 
rather than using (:METHOD ZWEI:ITS-BUFFER-MIXIN :COMBINED :MSG-ID-CHANGED) which comes from "
   Local 2 (TYPE): NIL
   Local 3 (FUNCTION-SPECS): NIL

SI:HAVE-COMBINED-METHOD:  (P.C. = 154)
   Arg 0 (FL): #<FLAVOR ZWEI:BABYL-BUFFER 40564175>
   Arg 1 (MAGIC-LIST-ENTRY): (:MSG-ID-CHANGED NIL NIL (NIL (:METHOD ZWEI:UNIVERSE-SEQUENCE-MIXIN :MSG-ID-CHANGED)) (:WHOPPER (:METHOD ZWEI:UNIVERSE-SEQUENCE-MIXIN :WHOPPER :MSG-ID-CHANGED)))

(:PROPERTY :DAEMON SI:METHOD-COMBINATION):  (P.C. = 63)
   Arg 0 (FL): #<FLAVOR ZWEI:BABYL-BUFFER 40564175>
   Arg 1 (MAGIC-LIST-ENTRY): (:MSG-ID-CHANGED NIL NIL (NIL (:METHOD ZWEI:UNIVERSE-SEQUENCE-MIXIN :MSG-ID-CHANGED)) (:WHOPPER (:METHOD ZWEI:UNIVERSE-SEQUENCE-MIXIN :WHOPPER :MSG-ID-CHANGED)))

SI:COMPOSE-METHOD-COMBINATION:  (P.C. = 453)
   Arg 0 (FL): #<FLAVOR ZWEI:BABYL-BUFFER 40564175>
   --Defaulted args:--
   Arg 1 (SINGLE-OPERATION): NIL

SI:GET-FLAVOR-HANDLER-FOR:  (P.C. = 23)
   Arg 0 (FLAVOR-NAME): ZWEI:BABYL-BUFFER
   Arg 1 (OPERATION): :FORMAT-NAME
   --Defaulted args:--
   Arg 2 (SUPERIORS-P): T

SI:FUNCALL-FLAVOR-HANDLER:  (P.C. = 5)
   Arg 0 (FLAVOR-NAME): ZWEI:BABYL-BUFFER
   Arg 1 (OPERATION): :FORMAT-NAME
   Rest arg (ARGS): NIL

ZWEI:GET-ZMAIL-FILE:  (P.C. = 105)
   Arg 0 (STREAM): #<FILE-INPUT-CHARACTER-STREAM "MC: CBF; RDZ BABYL" 4753650>
   Arg 1 (PATHNAME): #<ITS-PATHNAME "MC: CBF; RDZ BABYL">
   Arg 2 (BACKGROUND-P): T
   --Defaulted args:--
   Arg 3 (FLAVOR): ZWEI:BABYL-BUFFER
   Arg 4 (READ-ONLY): NIL

ZWEI:STARTUP-MAIL-FILE:  (P.C. = 73)
   Arg 0 (NEW-PATHNAME): NIL

Rest of stack:
(:INTERNAL (:INTERNAL (:PROPERTY ZWEI:ZMAIL-COMMAND-LIST-DEFAULT :DEFUN-SELECT-METHOD) 0) 0):  (P.C. = 5)
(:INTERNAL (:PROPERTY ZWEI:ZMAIL-COMMAND-LIST-DEFAULT :DEFUN-SELECT-METHOD) 0):  (P.C. = 7)
(:PROPERTY ZWEI:ZMAIL-COMMAND-LIST-DEFAULT :DEFUN-SELECT-METHOD):  (P.C. = 12)
(:DEFUN-METHOD ZWEI:ZMAIL-COMMAND-LIST-DEFAULT):  (P.C. = 12)
ZWEI:ZMAIL-COMMAND-LIST-DEFAULT:  (P.C. = 12)
ZWEI:ZMAIL-COMMAND-LIST:  (P.C. = 107)
(:METHOD ZWEI:ZMAIL-FRAME :PROCESS-SPECIAL-COMMAND):  (P.C. = 5)
(:METHOD ZWEI:ZMAIL-FRAME :COMMAND-LOOP):  (P.C. = 141)
(:METHOD ZWEI:ZMAIL-FRAME :COMBINED :COMMAND-LOOP):  (P.C. = 43)
ZWEI:ZMAIL-PROCESS-TOP-LEVEL:  (P.C. = 52)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
26-Feb-84 17:07:15-EST,2609;000000000000
Received: from MIT-BUDDY by MIT-OZ via Chaosnet; 26 Feb 84 17:05-EST
Date: Sunday, 26 February 1984, 17:06-EST
From: Henry Minsky <HQM at MIT-MC>
Subject: bad editor error
To: BUG-LISPM at MIT-OZ

In Release 5.0 [Beta Test rev 4], Experimental Schema 14.0,
imperial purple, on Lisp Machine Buddy Holly (3600):

I did a meta-. on a definition of a flavor, and it said one more
defintion
as well, so I did a control-. , and got thrown out to this error, which
I couldn't abort out of..


>>Error: WINDOW-START-BP is not in the interval being displayed
While in the function ZWEI:REDISPLAY  ZWEI:REDISPLAY-ALL-WINDOWS  (:METHOD ZWEI:EDITOR :EDIT)

ZWEI:REDISPLAY:  (P.C. = 1005)
   Arg 0 (WINDOW): #<WINDOW 12137106>
   --Defaulted args:--
   Arg 1 (RECENTER-TYPE): :POINT
   Arg 2 (RC1): NIL
   Arg 3 (RC2): NIL
   Arg 4 (FORCE-TO-COMPLETION-P): NIL
   Local 5 (N-PLINES): 60
   Local 6 (POINT): ("(define-bucky-command (kill mangle) ()" 0 :NORMAL)
   Local 7 (SHEET): #<ZMACS-WINDOW-PANE Zmacs Window Pane 4 1044544 exposed>
   Local 8 (DEGREE): 4
   Local 9 (POINT-BLINKER): #<RECTANGULAR-BLINKER 1100766>
   Local 10 (INTERVAL): #<FILE-BUFFER "sedit.lisp >Schema>Schematics LM15:" 12140277>
   Local 11 (START-BP): ("" 0 :NORMAL)
   Local 12 (NOW): 107307
   Local 13 (POINT-PLINE): NIL
   Local 14 (LH): 16
   Local 15 (POINT-LINE): "(define-bucky-command (kill mangle) ()"
   Local 16 (POINT-INDEX): 0
   Local 17 (TOP-LINE): ""
   Local 18 (TOP-INDEX): 0
   Local 19 (LAST-BP): ("" 0 :MOVES)
   Local 20 (INITIAL-DEGREE): 4
   Local 21 (*INTERVAL*-initialization): #<FILE-BUFFER "sedit.lisp >Schema>Schematics LM15:" 12140277>
   Local 22 (LINE): ""
   Local 23 (FROM-INDEX): 0
   Local 24 (TO-INDEX): NIL
   Local 25 (PLINE): 0
   Local 26 (STOP-LINE): ""

ZWEI:REDISPLAY-ALL-WINDOWS:  (P.C. = 34)
   --Defaulted args:--
   Arg 0 (FORCE-TO-COMPLETION-P): NIL
   Arg 1 (SELECT-P): T

(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 134)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 75712030>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:EDITOR -- 11. IV's, 0. FL's 102171603>
   Arg 2 (OPERATION): :EDIT
   --Defaulted args:--
   Arg 3 (TOP-LEVEL-P): T
   Arg 4 (DESCRIPTION): NIL

(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 41)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 75712030>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:TOP-LEVEL-EDITOR -- 12. IV's, 1. FL's 102171615>
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)

SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
   Arg 0 (IGNORE): NIL
26-Feb-84 23:02:37-EST,1610;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 26 Feb 84 23:01-EST
Received: from SCRC-EUPHRATES by SCRC-QUABBIN with CHAOS; Sun 26-Feb-84 23:06:12-EST
Date: Sunday, 26 February 1984, 23:01-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: bad editor error
To: Henry Minsky <HQM at MIT-MC>
Cc: BUG-LISPM at MIT-OZ
In-reply-to: The message of 26 Feb 84 17:06-EST from Henry Minsky <HQM at MIT-MC>

    Date: Sunday, 26 February 1984, 17:06-EST
    From: Henry Minsky <HQM at MIT-MC>

    In Release 5.0 [Beta Test rev 4], Experimental Schema 14.0,
    imperial purple, on Lisp Machine Buddy Holly (3600):

    I did a meta-. on a definition of a flavor, and it said one more
    defintion
    as well, so I did a control-. , and got thrown out to this error, which
    I couldn't abort out of..

c-U m-. is how you go to the next definition of the last thing you m-.'ed.
The c-. you typed did the next Tags Search, Edit Callers, Edit Methods, or
whatever other c-.-using command you last did.

    >>Error: WINDOW-START-BP is not in the interval being displayed
    While in the function ZWEI:REDISPLAY  ZWEI:REDISPLAY-ALL-WINDOWS  (:METHOD ZWEI:EDITOR :EDIT)

Didn't Resume get you out of this?  Didn't the debugger say that Resume
would get you out?  Abort gets you out but the same error happens again
immediately because nothing has changed.  Resume takes special pains to
fix things up so redisplay will work.

We really need to find out what causes this error, but in the meantime
typing Resume will at least let you get your editor back in working condition.
27-Feb-84 02:14:01-EST,838;000000000000
Received: from MIT-AVATAR by MIT-OZ via Chaosnet; 27 Feb 84 02:12-EST
Date: Monday, 27 February 1984, 02:12-EST
From: Kent M Pitman <kmp at MIT-OZ>
Subject: m-X Finish Patch doesn't do enough work
To: BUG-LISPM at MIT-OZ
Cc: KBE-I-FILE at MIT-OZ

In Release 4.5, Experimental Knowledge-Based-Editor 288.0,
site configuration 85, Black Magic, on PA Lisp Machine Avatar:

I wish when I made a patch that it would offer to do (or even
just go ahead and do unless I inhibit it somehow) one of:
 * Load the patch
 * Pretend the patch was loaded by incrementing the minor version.

Software that looks at the minor version number is confused by
these not happening. eg, if I do m-X Bug KBE, I see the wrong
version number until I have done an explicit LOAD-PATCHES.

eg, this bug report is being sent from KBE 288.1x.
-kmp
27-Feb-84 02:18:07-EST,900;000000000000
Received: from MIT-AVATAR by MIT-OZ via Chaosnet; 27 Feb 84 02:16-EST
Date: Monday, 27 February 1984, 02:17-EST
From: Kent M Pitman <kmp at MIT-OZ>
Subject: Terminal Clear-Input vs Control-Clear-Input
To: BUG-LISPM at MIT-OZ

In Release 4.5 on Avatar (CADR):

Is there a strong argument that says why Terminal Clear-Input
is not just Control-Clear-Input? It seems quite analagous at
a conceptual level (forget the implementation for now) to
the difference between Control-Abort (works even (especially?)
when not in an input wait) and Abort (works only when in an
input wait).

From time to time I get in situations where typing Terminal 
Clear-Input would do the right thing but getting those two 
keystrokes correct fast enough is too hard and I end up 
not doing it in time. It would be faster (and hence, more
useful) to type Control-Clear-Input because it is a single chord.
27-Feb-84 02:29:33-EST,856;000000000000
Received: from MIT-AVATAR by MIT-OZ via Chaosnet; 27 Feb 84 02:27-EST
Date: Monday, 27 February 1984, 02:28-EST
From: Kent M Pitman <kmp at MIT-OZ>
Subject: (ED) sending gratuitous :RESET messages to Zmacs's process
To: BUG-LISPM at MIT-OZ

In Release 4.5, Experimental Knowledge-Based-Editor 288.1,
site configuration 85, Black Magic, on PA Lisp Machine Avatar:

Why is it that when I do (ED), it resets my Zmacs process?
Couldn't that sort of harsh treatment strike me only when
I give ED an argument? It seems to me that the no-argument
case of ED should just exactly simulate a System E. There 
is really no excuse for it knocking me out of minibuffers,
Tags Searches, etc. Some things that it can interrupt can
be difficult to restart easily. I can always type c-Abort 
myself if I see it's doing something I no longer want it to do.
28-Feb-84 10:13:45-EST,5410;000000000000
Received: from MIT-JIMI by MIT-OZ via Chaosnet; 28 Feb 84 10:13-EST
Date: Tuesday, 28 February 1984, 10:13-EST
From: Henry Minsky <HQM at MIT-MC>
Subject: dashed lines of dash length 1 don't work
To: BUG-LISPM at MIT-OZ

In Release 5.0 [Beta Test rev 4], Experimental Schema 16.2,
imperial purple, on Lisp Machine Jimi Hendrix (3600):

I tried to draw a nice dashed line with dash lengths of 1. and bombed
out.

>>Error: BITBLT attempted to access row 700 of the destination array,
         which is outside the bounds of 0 to 676
While in the function TV:%DRAW-LINE-INTERNAL  (:METHOD TV:SCREEN :%DRAW-LINE)  (:DEFUN-METHOD TV:DRAW-DASHED-LINE-INTERNAL)

TV:%DRAW-LINE-INTERNAL:  (P.C. = 122)
   Arg 0 (X1): 1
   Arg 1 (Y1): 677
   Arg 2 (X2): 1
   Arg 3 (Y2): 700
   Arg 4 (ALU): 7
   Arg 5 (DRAW-END-POINT): NIL
   Arg 6 (ARRAY): #<ART-1B-1036-677 11050637>
   Local 7 (IGNORE): NIL
   Local 8 (IGNORE): NIL
   Local 9 (BB-WIDTH): NIL
   Local 10 (BB-S-DATA-ADDR): 0
   Local 11 (BB-S-ROW-OFFSET): NIL
   Local 12 (BB-S-OFFSET): NIL
   Local 13 (BB-S-BITPOS): NIL
   Local 14 (BB-S-ROW-LENGTH): 0
   Local 15 (BB-D-DATA-ADDR): NIL
   Local 16 (BB-D-OFFSET): NIL
   Local 17 (BB-D-BITPOS): NIL
   Local 18 (BB-EVENT-COUNT): 15665
   Local 19 (BB-ALU-OPERATION): 17
   Local 20 (S-ROW-BITPOS): 0
   Local 21 (S-ROW-OFFSET): 0
   Local 22 (S-ROW): 0
   Local 23 (D-ROW-BITPOS): NIL
   Local 24 (D-ROW-OFFSET): NIL
   Local 25 (D-ROW): NIL
   Local 26 (S-BEG-ADDR): NIL
   Local 27 (S-BEG-BITPOS): 0
   Local 28 (S-ROW-LENGTH): 1000000
   Local 29 (S-ROW-SPAN): 0
   Local 30 (S-HEIGHT): 0
   Local 31 (S-BITS-PER-ELT): 1
   Local 32 (D-BEG-ADDR): 1721006714
   Local 33 (D-BEG-BITPOS): 1040
   Local 34 (D-ROW-LENGTH): 1036
   Local 35 (D-ROW-SPAN): 46
   Local 36 (D-HEIGHT): 677
   Local 37 (D-BITS-PER-ELT): 0
   Local 38 (S-ROW-ADDR-OFFSET): NIL
   Local 39 (DRAW-X1): T
   Local 40 (DRAW-X2): NIL

(:METHOD TV:SCREEN :%DRAW-LINE):  (P.C. = 36)
   Arg 0 (SELF): #<MAIN-SCREEN Main Screen 32640077 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:SCREEN -- 5. IV's, 1. FL's 101437430>
   Arg 2 (OPERATION): :%DRAW-LINE
   Arg 3 (X1): 1
   Arg 4 (Y1): 677
   Arg 5 (X2): 1
   Arg 6 (Y2): 700
   Arg 7 (ALU): 7
   Arg 8 (DRAW-END-POINT): NIL
   Arg 9 (SHEET): #<SIGNAL-LOOK Schema signal 1043355 exposed>

(:DEFUN-METHOD TV:DRAW-DASHED-LINE-INTERNAL):  (P.C. = 61)
   Arg 0 (SELF): #<SIGNAL-LOOK Schema signal 1043355 exposed>
   Arg 1 (SELF-MAPPING-TABLE): TV:GRAPHICS-MIXIN
   Arg 2 (START-X): 1.0
   Arg 3 (START-Y): 431.0
   Arg 4 (X-SPACING): 0.0
   Arg 5 (Y-SPACING): 4.0
   Arg 6 (X-LENGTH): 0.0
   Arg 7 (Y-LENGTH): 1.0
   Arg 8 (N-SEGS): 206
   Arg 9 (ALU): 7

(:METHOD TV:GRAPHICS-MIXIN :DRAW-DASHED-LINE):  (P.C. = 207)
   Arg 0 (SELF): #<SIGNAL-LOOK Schema signal 1043355 exposed>
   Arg 1 (SELF-MAPPING-TABLE): TV:GRAPHICS-MIXIN
   Arg 2 (OPERATION): :DRAW-DASHED-LINE
   Arg 3 (FROM-X): -417
   Arg 4 (FROM-Y): 656
   Arg 5 (TO-X): 1455
   Arg 6 (TO-Y): 656
   Arg 7 (ALU): 7
   Arg 8 (DASH-SPACING): 4
   Arg 9 (RELAXED-P): T
   Arg 10 (OFFSET): 0
   Arg 11 (DASH-LENGTH): 1

(:INTERNAL (:METHOD SCHEMA:SIGNAL-LOOK :COMBINED :DRAW-DASHED-LINE) 0):  (P.C. = 10)
   Arg 0 (SELF): #<SIGNAL-LOOK Schema signal 1043355 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SCHEMA:SIGNAL-LOOK -- 2. IV's, 15. FL's 4607505>
   Rest arg (.DAEMON-CALLER-ARGS.): (:DRAW-DASHED-LINE -417 656 1455 656 7 4 T 0 1)

(:METHOD SCHEMA:SCALING-MIXIN :WHOPPER :DRAW-DASHED-LINE):  (P.C. = 44)  (from Schema: SCHEMATICS; LOOK)
   Arg 0 (SELF): #<SIGNAL-LOOK Schema signal 1043355 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SCHEMA:SCALING-MIXIN -- 4. IV's, 0. FL's 4601405>
   Arg 2 (.WHOPPER-CONTINUATION.): #<DTP-COMPILED-FUNCTION (:INTERNAL (:METHOD SCHEMA:SIGNAL-LOOK :COMBINED :DRAW-DASHED-LINE) 0) 7325067>
   Arg 3 (.OLD-SELF-MAPPING-TABLE.): #<Map to flavor SCHEMA:SIGNAL-LOOK -- 2. IV's, 15. FL's 4607505>
   Arg 4 (.OPERATION.): :DRAW-DASHED-LINE
   Arg 5 (FROM-PT): #<Pt: -542, -207>
   Arg 6 (TO-PT): #<Pt: 542, -207>
   Rest arg (REST): (7 4 T 0 1)

(:METHOD SCHEMA:SIGNAL-LOOK :COMBINED :DRAW-DASHED-LINE):  (P.C. = 12)
   Arg 0 (SELF): #<SIGNAL-LOOK Schema signal 1043355 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SCHEMA:SIGNAL-LOOK -- 2. IV's, 15. FL's 4607505>
   Rest arg (.DAEMON-CALLER-ARGS.): (:DRAW-DASHED-LINE #<Pt: -542, -207> #<Pt: 542, -207> 7 4 T 0 1)

(:METHOD SCHEMA:SIGNAL-LOOK :DRAW-GRID):  (P.C. = 66)  (from LM15:>Schema>Schematics>signal-look)
   Arg 0 (SELF): #<SIGNAL-LOOK Schema signal 1043355 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SCHEMA:SIGNAL-LOOK -- 2. IV's, 15. FL's 4607505>
   Arg 2 (OPERATION): :DRAW-GRID
   Arg 3 (SPACING): 24
   Arg 4 (DASH-SPACING): 4

Rest of stack:
(:METHOD SCHEMA:SIGNAL-LOOK :AFTER :REFRESH):  (P.C. = 6)  (from LM15:>Schema>Schematics>signal-look)
(:METHOD SCHEMA:SIGNAL-LOOK :COMBINED :REFRESH):  (P.C. = 37)  (from LM15:>Schema>Schematics>signal-look)
(:METHOD TV:SHEET :REFRESH):  (P.C. = 201)
(:METHOD TV:BORDERED-CONSTRAINT-FRAME :COMBINED :REFRESH):  (P.C. = 16)
TV:KBD-SCREEN-REDISPLAY:  (P.C. = 14)
SI:*EVAL:  (P.C. = 370)
(:INTERNAL TV:KBD-ESC 1):  (P.C. = 4)
SI:PROCESS-RUN-FUNCTION-INTERNAL:  (P.C. = 51)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
28-Feb-84 11:34:10-EST,764;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 28 Feb 84 11:31-EST
Received: from SCRC-CHICOPEE by SCRC-QUABBIN with CHAOS; Tue 28-Feb-84 11:35:32-EST
Date: Tuesday, 28 February 1984, 11:31-EST
From: Daniel L. Weinreb <DLW at SCRC-TENEX>
Subject: dashed lines of dash length 1 don't work
To: HQM at MIT-MC, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 28 Feb 84 10:13-EST from Henry Minsky <HQM at MIT-MC>

I tried sending the :draw-dashed-line message with the same arguments
shown in your backtrace, and it worked.  I tried it on windows of
several smaller sizes, and it still worked.  Is there something unusual
about your SIGNAL-LOOK window that might cause the problem?  Better yet,
can you send us a test case we can reproduce?  Thanks.
29-Feb-84 02:08:29-EST,2485;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 29 Feb 84 02:07-EST
Date: Wednesday, 29 February 1984, 02:05-EST
From: Leigh L. Klotz <KLOTZ at MIT-MC>
Subject: init file loading will attempt to load text files and barf
To: BUG-LISPM at MIT-OZ

In System 242.269, imperial purple, on Lisp Machine Joe Louis (3600):

It tried to load MC:KLOTZ;LISPM > as my init file.  Wanna buy a nice bridge in
New York, cheap?

>>Trap: The variable BABYL is unbound.
While in the function SI:*EVAL  SI:READFILE-INTERNAL  FS:LOAD-STREAM

SI:*EVAL:  (P.C. = 25)
   Arg 0 (FORM): BABYL
   Local 1: NIL
   Local 2 (ARGNUM): 0
   Local 3 (FCTN): NIL
   Local 4 (CFCTN): NIL
   Local 5 (ARGL): NIL
   Local 6 (MAX-ARGS): NIL
   Local 7 (N-ARGS): NIL
   Local 8 (ARG-DESC): NIL
   Local 9 (TEM): NIL
   Local 10 (COUNT): NIL
   Local 11 (QUOTE-STATUS): NIL
   Local 12 (REST-FLAG): NIL
   Local 13 (FEXPR-FLAG): NIL
   Local 14 (LAMBDA-LIST): NIL
   Local 15 (MACRO): NIL

SI:READFILE-INTERNAL:  (P.C. = 77)
   Arg 0 (STANDARD-INPUT-initialization): #<FILE-INPUT-CHARACTER-STREAM "MC: KLOTZ; LISPM >" 12410271>
   Arg 1 (PKG): NIL
   Arg 2 (NO-MSG-P): NIL

FS:LOAD-STREAM:  (P.C. = 16)
   Arg 0 (STREAM): #<FILE-INPUT-CHARACTER-STREAM "MC: KLOTZ; LISPM >" 12410271>
   --Defaulted args:--
   Arg 1 (PKG): NIL
   Arg 2 (NO-MSG-P): NIL

LOGIN:  (P.C. = 526)
   Arg 0 (USER-NAME): "klotz"
   Rest arg: (:HOST NIL :LOAD-INIT-FILE T)

FS:FORCE-USER-TO-LOGIN:  (P.C. = 112)

OPEN:  (P.C. = 6)
   Arg 0 (PATHNAME): #<ITS-PATHNAME "MC: KLOTZ; PS3 >">
   Rest arg (KEYWORD-ARGS): NIL

(:METHOD ZWEI:FILE-BUFFER-MIXIN :REVERT):  (P.C. = 57)
   Arg 0 (SELF): #<FILE-BUFFER "PS3 > KLOTZ; MC:" 12407532>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:FILE-BUFFER-MIXIN -- 9. IV's, 0. FL's 102200531>
   Arg 2 (OPERATION): :REVERT

ZWEI:FIND-FILE:  (P.C. = 24)
   Arg 0 (PATHNAME): #<ITS-PATHNAME "MC: KLOTZ; PS3 >">
   --Defaulted args:--
   Arg 1 (SELECT-P): T

Rest of stack:
ZWEI:COM-FIND-FILE:  (P.C. = 13)
ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
ZWEI:MAKE-EXTENDED-COMMAND-INTERNAL:  (P.C. = 77)
SYS:CALL-FUNNY-FUNCTION:  (P.C. = 101)
Closure of ZWEI:MAKE-EXTENDED-COMMAND-INTERNAL:
ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 200)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 41)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
29-Feb-84 10:04:39-EST,3026;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 29 Feb 84 10:04-EST
Date: 29 February 1984 10:04-EST
From: Kent M Pitman <KMP @ MIT-MC>
Subject:  Symbolics/LMIT incompatibility about c-sh-A,etc. in SUPDUP
To: RMS @ MIT-MC, BUG-LISPM @ MIT-MC
cc: CSTACY @ MIT-MC, BUG-NEX @ MIT-MC
References:
 Msg of 29 Feb 84 06:00-EST from Christopher C. Stacy <CSTACY @ MIT-MC>,
 Msg of 29 Feb 84 06:21-EST from Christopher C. Stacy <CSTACY @ MIT-MC>

    Date: 29 February 1984 06:00-EST
    From: Christopher C. Stacy <CSTACY @ MIT-MC>

    I can't seem to use NEX from a Stallman-brand LispM SUPDUP window.
    When I hold down CONTROL and type the letter "a", I get mini-arglist.

    Date: 29 February 1984 06:21-EST
    From: Christopher C. Stacy <CSTACY @ MIT-MC>

    In the MIT system, SUPDUP preserves the case of control characters
    as typed on the keyboard.  This was an incompatible change which
    Symbolics did not pick up, and although I don't think you notice
    in EMACS, in NEX it prevents you from typing common commands.

As I understand it, under SUPDUP the LMIT system sends Control-a 
when you hold control and press "A", while the Symbolics system 
sends Control-A in that case. When you hold the shift key on the
LMIT system, you send Control-A, while on a Symbolics system you
send Control-a. In other words, Control-a and Control-A are
interchanged in SUPDUP between these two systems.

Personally, I consider this a bug in the LMIT system. There are
no significant non-LispM-oriented communities out there who are 
using a ton of shift keys, so you can't claim this makes unfair
assumptions about the use of those other keys. And I think it is
important that the thing you get when you hold Control and hit A
be something such that if you mask out the control bit, you're 
left with a capital A.

A decision was made by both sets of LispM designers that if you did
no special shifting, Control-a locally to the LispM should mean 
<Control>+<Capital-A> and I think that decision should be carried 
compatibly through, even on SUPDUP windows.

The problem comes up because I have implemented c-sh-A and c-sh-D
in NEX (my Emacs variant) on MC and users of NEX are unable to use
it from a SUPDUP window on an LMIT system right now due to the
incompatibility.

By the way, in Emacs it turns out to be equally useful to think
of Emacs c-^ as a c-sh- prefix rather than a c- prefix, since the
only char besides c-sh-A or c-sh-D I have ever wanted to access via
c-^ prefix is %, which must be shifted anyway.

One way or another, I would appreciate it if the designers of 
these two systems could come to some agreement on this issue 
since remote programs cannot poll the software type of the 
SUPDUP server in order to decide which convention is in effect.

Until an agreement is made one way or the other, I don't plan to
change the NEX command set, so for now that will mean NEX will
continue to behave as if broken from an LMIT supdup window.
-kmp
29-Feb-84 17:50:37-EST,482;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 29 Feb 84 17:49-EST
Date: 29 February 1984 17:44-EST
From: Christopher C. Stacy <CSTACY @ MIT-MC>
Subject:  Symbolics/LMIT incompatibility about c-sh-A,etc. in SUPDUP
To: KMP @ MIT-MC
cc: BUG-LISPM @ MIT-MC, CSTACY @ MIT-MC, RMS @ MIT-MC
In-reply-to: Msg of 29 Feb 1984 10:04-EST from Kent M Pitman <KMP>


How about a switch to (set by default to the behaviour that KMP
suggests) which controls how characters are passed.

29-Feb-84 17:58:09-EST,2783;000000000000
Received: from MIT-XX by MIT-OZ via Chaosnet; 29 Feb 84 17:55-EST
Date: Wednesday, 29 February 1984, 17:49-EST
From: Ken Forbus <KDF at MIT-PYGMALION>
Subject: Garbage Collector Lossage
To: BUG-LISPM at MIT-OZ

In Release 5.0 [Beta Test rev 4], imperial purple, on Lisp Machine Jimi Hendrix (3600):

I know this is heresy, but I suspect the garbage collector doesn't work very well.
I have never been able to get it to flip more than twice.  The second time it turns
off, claiming it will lose if it continues.  This is very bad, since I really do lose
by running out of space.

Here is what (GC-STATUS) returns:

Dynamic (new+copy) space 9,507,284.  Old space 0.  Static space 6,100,671.
Free space 5,605,376.  Committed guess 10,470,140, putting you 5,126,908 words past the point
where an incremental garbage collection risks running out of space.
There is not enough space left for (GC-IMMEDIATELY) unless
no more than 57% of dynamic space is good data (not garbage).
There are 5,605,376 words available if you elect not to garbage collect.
Garbage collector process state: Disabled
Scavenging during cons: Off, Scavenging when machine idle: Off
GC Flip Ratio: 1, GC Reclaim Immediately: Off
GC messages (controlled by SI:GC-REPORT-STREAM) are sent as notifications.
The GC generation count is 2.

Here are the storage numbers:

Highest address: 82240 pages.  Pages in use: 59080.  Swap space available: 21896 pages
USER:TMS-STRUCTURE-AREA.................(5 regions) 896K allocated, 681K used.
USER:TMS-LIST-AREA......................(5 regions) 992K allocated, 777K used.
USER:DEBACLE-STRUCTURE-AREA.............(5 regions) 496K allocated, 487K used.
USER:DEBACLE-CONS-AREA..................(6 regions) 864K allocated, 617K used.
WORKING-STORAGE-AREA...................(20 regions) 8064K allocated, 7865K used.
COMPILED-FUNCTION-AREA..................(7 regions) 1024K allocated, 992K used.

>>Break: 
While in the function SI:*EVAL  DEBACLE-TOP-LEVEL  SI:PROCESS-TOP-LEVEL

SI:*EVAL:  (P.C. = 370)
   Arg 0 (FORM): (EH)
   Local 1: NIL
   Local 2 (ARGNUM): 0
   Local 3 (FCTN): #<DTP-COMPILED-FUNCTION DBG 5221037>
   Local 4 (CFCTN): #<DTP-COMPILED-FUNCTION DBG 5221037>
   Local 5 (ARGL): NIL
   Local 6 (MAX-ARGS): 1
   Local 7 (N-ARGS): 0
   Local 8 (ARG-DESC): 1
   Local 9 (TEM): NIL
   Local 10 (COUNT): NIL
   Local 11 (QUOTE-STATUS): NIL
   Local 12 (REST-FLAG): NIL
   Local 13 (FEXPR-FLAG): NIL
   Local 14 (LAMBDA-LIST): NIL
   Local 15 (TEM1): #<DTP-COMPILED-FUNCTION DBG 5221037>

DEBACLE-TOP-LEVEL:  (P.C. = 161)  (from PYGMALION:USRD$:[KDF]DISPLAY)
   Arg 0 (WINDOW): #<DEBACLE-TOPLEVEL-FRAME Debacle Toplevel Frame 1 14740116 exposed>

SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
   Arg 0 (IGNORE): NIL
29-Feb-84 21:11:10-EST,3313;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 29 Feb 84 21:10-EST
Received: from SCRC-EUPHRATES by SCRC-QUABBIN with CHAOS; Wed 29-Feb-84 21:14:11-EST
Date: Wednesday, 29 February 1984, 21:13-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: Garbage Collector Lossage
To: Ken Forbus <KDF at MIT-PYGMALION>
Cc: BUG-LISPM at MIT-OZ
In-reply-to: The message of 29 Feb 84 17:49-EST from Ken Forbus <KDF at MIT-PYGMALION>

    Date: Wednesday, 29 February 1984, 17:49-EST
    From: Ken Forbus <KDF at MIT-PYGMALION>

    In Release 5.0 [Beta Test rev 4], imperial purple, on Lisp Machine Jimi Hendrix (3600):

    I know this is heresy, but I suspect the garbage collector doesn't work very well.
    I have never been able to get it to flip more than twice.  The second time it turns
    off, claiming it will lose if it continues.  This is very bad, since I really do lose
    by running out of space.

    Here is what (GC-STATUS) returns:

    Dynamic (new+copy) space 9,507,284.  Old space 0.  Static space 6,100,671.
    Free space 5,605,376.  Committed guess 10,470,140, putting you 5,126,908 words past the point
    where an incremental garbage collection risks running out of space.
    There is not enough space left for (GC-IMMEDIATELY) unless
    no more than 57% of dynamic space is good data (not garbage).
    There are 5,605,376 words available if you elect not to garbage collect.
    Garbage collector process state: Disabled
    Scavenging during cons: Off, Scavenging when machine idle: Off
    GC Flip Ratio: 1, GC Reclaim Immediately: Off
    GC messages (controlled by SI:GC-REPORT-STREAM) are sent as notifications.
    The GC generation count is 2.

    Here are the storage numbers:

    Highest address: 82240 pages.  Pages in use: 59080.  Swap space available: 21896 pages
    USER:TMS-STRUCTURE-AREA.................(5 regions) 896K allocated, 681K used.
    USER:TMS-LIST-AREA......................(5 regions) 992K allocated, 777K used.
    USER:DEBACLE-STRUCTURE-AREA.............(5 regions) 496K allocated, 487K used.
    USER:DEBACLE-CONS-AREA..................(6 regions) 864K allocated, 617K used.
    WORKING-STORAGE-AREA...................(20 regions) 8064K allocated, 7865K used.
    COMPILED-FUNCTION-AREA..................(7 regions) 1024K allocated, 992K used.

It looks to me like you simply are trying to allocate more storage than
will fit on your disk.  You either need a smaller data base or a bigger
disk.  However, since you didn't include any information about how much
of those areas is "in use" data versus how much of those areas would be
reclaimed by the garbage collection, I can't really judge.  You might be
able to set SI:GC-FLIP-RATIO.  At the completion of a GC cycle you get a
notification (unless you turn it off) that includes the before- and
after-GC sizes of dynamic space.

Read the two sections on garbage collection in Release 4.0 Notes for
hints on how to control the GC.

It is possible to convert some of the space on your local disk from world loads
(or other use) into additional paging space, if other users of the machine don't
mind.  The only document that I know you have that discusses this is Front End
Processor.  Well, I see that you are already doing this (on Jimi).
29-Feb-84 22:08:23-EST,2152;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 29 Feb 84 22:07-EST
Date: Wednesday, 29 February 1984, 22:06-EST
From: Kent M Pitman <kmp at MIT-MC>
Subject: Symbolics/LMIT incompatibility about c-sh-A,etc. in SUPDUP
To: CSTACY at MIT-MC
Cc: BUG-LISPM at MIT-MC, RMS at MIT-MC, KMP at MC
In-reply-to: The message of 29 Feb 84 17:44-EST from Christopher C. Stacy <CSTACY at MIT-MC>

    Date: 29 February 1984 17:44-EST
    From: Christopher C. Stacy <CSTACY @ MIT-MC>
    Subject:  Symbolics/LMIT incompatibility about c-sh-A,etc. in SUPDUP
    To: KMP @ MIT-MC
    cc: BUG-LISPM @ MIT-MC, CSTACY @ MIT-MC, RMS @ MIT-MC
    In-reply-to: Msg of 29 Feb 1984 10:04-EST from Kent M Pitman <KMP>

    How about a switch to (set by default to the behaviour that KMP
    suggests) which controls how characters are passed.

This is a very bad idea. What it will lead to is that the maintainers of
half the programs on sites people go out over the network to will set the
switch one way and the other half of the maintainers will set the switch the
other way and people will have to be changing the switch in realtime as they
switch from program to program on the remote host.

It really needs to be decided which way is right and everyone needs to do
the same thing. We're not talking seldom-used features here; the character 
set is a big deal. People have to know what they are getting when they lean
on a key.

By the way, for RMS, I checked and in Emacs on an ASCII terminal if you do
@FI when the guy types ^A, you'll get back the <Control-Capital-A>, not
<Control-Lowercase-A>. This means that vanilla Emacs under an LMIT SUPDUP
window does not treat holding the control key and typing A consistently
with vanilla Emacs under non %TOFCI control. In the ASCII case, holding the
control key and typing lowercase-A sends Control-<capital-A>; in the LispM
case it sends Control-<lowercase-A>.

I am interested to hear Stallman's views on this, but my general feeling as
I think more about this is that he'll be hard pressed to come up with a good,
consistent argument for the way the current LMIT system behaves.
-kmp
 1-Mar-84 12:42:20-EST,331;000000000000
Received: from MIT-BUDDY by MIT-OZ via Chaosnet; 1 Mar 84 12:41-EST
Date: Thursday, 1 March 1984, 12:41-EST
From: Russell L. Brand <brand at MIT-OZ>
Subject: 3600-s hardcopy buffer
To: bug-lispm at MIT-OZ

On MIT-BUDDY from zmacs, 
meta-x hardcopy buffer yeilds an error:
zerop called wiht a non-number.

?huh?
-wuthel
 1-Mar-84 15:12:37-EST,869;000000000000
Received: from SCRC-TENEX by MIT-OZ via Chaosnet; 1 Mar 84 15:05-EST
Date: Thursday, 1 March 1984  15:04-EST
From: David C. Plummer <DCP at SCRC-TENEX>
To:   Russell L. Brand <brand at MIT-OZ>
Cc:   bug-lispm at MIT-OZ
Subject: 3600-s hardcopy buffer
In-reply-to: The message of 1 Mar 1984 12:41-EST from Russell L. Brand <brand at MIT-OZ>

    Date: Thursday, 1 March 1984, 12:41-EST
    From: Russell L. Brand <brand at MIT-OZ>

    On MIT-BUDDY from zmacs, 
    meta-x hardcopy buffer yeilds an error:
    zerop called wiht a non-number.

    ?huh?
    -wuthel
Please use the standard bug reporting tools, c-M from the
debugger in this case, m-X Bug from Zmacs or Zmail, or one of the
mouse options in Zmail.  If you have reason to believe this is a
problem with Release 5 beta, the report should be sent to
bug-beta-test instead of bug-lispm.
 1-Mar-84 15:45:22-EST,1507;000000000000
Mail-From: CJL created at  1-Mar-84 15:41:01
Date: Thu, 1 Mar 1984  15:40 EST
Message-ID: <CJL.11995935351.BABYL@MIT-OZ>
From: CJL@MIT-OZ
To:   "David C. Plummer" <DCP@SCRC-TENEX>
Cc:   "Russell L. Brand" <brand@MIT-OZ>, bug-lispm@MIT-OZ
Subject: 3600-s hardcopy buffer
In-reply-to: Msg of 1 Mar 1984  15:04-EST from David C. Plummer <DCP at SCRC-TENEX>

    Date: Thursday, 1 March 1984  15:04-EST
    From: David C. Plummer <DCP at SCRC-TENEX>
    To:   Russell L. Brand <brand>
    cc:   bug-lispm
    Re:   3600-s hardcopy buffer

        Date: Thursday, 1 March 1984, 12:41-EST
        From: Russell L. Brand <brand at MIT-OZ>

        On MIT-BUDDY from zmacs, 
        meta-x hardcopy buffer yeilds an error:
        zerop called wiht a non-number.

        ?huh?
        -wuthel
    Please use the standard bug reporting tools, c-M from the
    debugger in this case, m-X Bug from Zmacs or Zmail, or one of the
    mouse options in Zmail.  If you have reason to believe this is a
    problem with Release 5 beta, the report should be sent to
    bug-beta-test instead of bug-lispm.

A lot of good it does. I have reported this bug in the correct way in
bug-beta-test for REL5 beta test rev1, rev2, rev3, and rev4, and NEVER
have I even seen an acknowledgement as to whether this bug is being
corrected or will be fixed in any future release, or any patch to fix
the bug. The fact that hardcopy doesn't work in release 5 seems to be
a pretty significant bug to me.
 1-Mar-84 18:09:35-EST,1376;000000000000
Received: from SCRC-TENEX by MIT-OZ via Chaosnet; 1 Mar 84 18:08-EST
Date: Thursday, 1 March 1984  17:53-EST
From: David C. Plummer <DCP at SCRC-TENEX>
To:   CJL at MIT-OZ, bug-beta-test at SCRC-TENEX
Cc:   "Russell L. Brand" <brand at MIT-OZ>, bug-lispm at MIT-OZ
Subject: 3600-s hardcopy buffer
In-reply-to: The message of Thu 1 Mar 1984  15:40 EST from CJL at MIT-OZ

    Date: Thu, 1 Mar 1984  15:40 EST
    From: CJL@MIT-OZ

    A lot of good it does. I have reported this bug in the correct way in
    bug-beta-test for REL5 beta test rev1, rev2, rev3, and rev4, and NEVER
    have I even seen an acknowledgement as to whether this bug is being
    corrected or will be fixed in any future release, or any patch to fix
    the bug. The fact that hardcopy doesn't work in release 5 seems to be
    a pretty significant bug to me.

Bug-LispM is not a component of Bug-Beta-Test.  I personally
don't recall seeing your bug report (complete with backtrace)
forwarded to bug-lispm.  This could be for two reasons.  (1) I
don't know enough about the editor internals to attempt to fix
it, so I delete and likely forget about it, or (2) it never was
forwarded.  If you have really reported this in each beta-rev,
you are quite justified in wanting an acknowledgement.  Before
either of us does any namecalling, we should let Maint defend
themselves.
 1-Mar-84 21:24:11-EST,2530;000000000000
Received: from MIT-JIMI by MIT-OZ via Chaosnet; 1 Mar 84 21:23-EST
Date: Thursday, 1 March 1984, 21:25-EST
From: Chris Lindblad <cjl at MIT-OZ>
Subject: 3600-s hardcopy buffer
To: BUG-BETA-TEST at MIT-OZ
Cc: BUG-LISPM at MIT-OZ

This message is meant primarily for BUG-BETA-TEST, but because some
people have claimed to never have seen previous reports of it I have
cc'd bug-lispm.

Ok. Here's The bug that I have been complaining about.  All I did is M-X
hardcopy buffer in Zwei.  I supplied cjl as a username form MC.  Granted
this might be a MIT namespace bug, but that isn't much consolation to
me. I still can't get hardcopy.

In System 242.269, imperial purple, on Lisp Machine Jimi Hendrix (3600):

>>Trap: The argument given to the ZEROP instruction, NIL, was not a number.
While in the function (:METHOD PRESS:PRESS-STREAM :PUT-PENDING-CHARS)  (:METHOD PRESS:PRESS-STREAM :SET-DEVICE-FONT)  (:METHOD SI:HARDCOPY-STREAM-FONT-MIXIN :CHECK-FONT)

(:METHOD PRESS:PRESS-STREAM :PUT-PENDING-CHARS):  (P.C. = 2)
   Arg 0 (SELF): #<PRESS-STREAM 4025113>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor PRESS:PRESS-STREAM -- 32. IV's, 4. FL's 4407034>
   Arg 2 (OPERATION): :PUT-PENDING-CHARS

(:METHOD PRESS:PRESS-STREAM :SET-DEVICE-FONT):  (P.C. = 4)
   Arg 0 (SELF): #<PRESS-STREAM 4025113>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor PRESS:PRESS-STREAM -- 32. IV's, 4. FL's 4407034>
   Arg 2 (OPERATION): :SET-DEVICE-FONT

(:METHOD SI:HARDCOPY-STREAM-FONT-MIXIN :CHECK-FONT):  (P.C. = 10)
   Arg 0 (SELF): #<PRESS-STREAM 4025113>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:HARDCOPY-STREAM-FONT-MIXIN -- 6. IV's, 0. FL's 4405415>
   Arg 2 (OPERATION): :CHECK-FONT

SI:HARDCOPY-HEADING-INFO:  (P.C. = 15)
   Arg 0 (STREAM): #<PRESS-STREAM 4025113>

SI:HARDCOPY-FROM-STREAM:  (P.C. = 36)
   Arg 0 (STREAM): #<INTERVAL-STREAM 4020767>
   Arg 1 (DEVICE): #<PRINTER TREMONT-VIA-MC 57400231>
   Rest arg (OPTIONS): (:BANNER-FILE-NAME "LISPM-INIT.LISP PS:<CJL> OZ:")

ZWEI:COM-HARDCOPY-BUFFER:  (P.C. = 20)

ZWEI:COM-EXTENDED-COMMAND:  (P.C. = 27)

ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
   Arg 0 (COMMAND): ZWEI:COM-EXTENDED-COMMAND
   Arg 1 (CHAR): 600.
   Arg 2 (PREFIX-CHAR): NIL
   Arg 3 (HOOK-LIST): (ZWEI:SHIFT-LOCK-HOOK)

Rest of stack:
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 200)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 41)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
 1-Mar-84 21:42:44-EST,454;000000000000
Received: from MIT-LISPM-20 by MIT-OZ via Chaosnet; 1 Mar 84 21:42-EST
Date: Thursday, 1 March 1984, 21:42-EST
From: Leigh L. Klotz <klotz at MIT-OZ>
Subject: :INIT-KEYWORDS
To: bug-lispm at MIT-OZ

Is there a way of saying not to do the error checking, or to call some flavor-function
on unhandled init keywords.  There is a :DEFAULT-MESSAGE-HANDLER option to DEFFLAVOR,
but no way to allow the same sort of action for init keywords.

Leigh.
 2-Mar-84 05:00:50-EST,4486;000000000000
Received: from MIT-APIARY-10 by MIT-OZ via Chaosnet; 2 Mar 84 05:00-EST
Date: Friday, 2 March 1984, 04:58-EST
From: David Kirsh <KIRSH at MIT-OZ>
Subject: >>Error: Attempt to to read from CHAOS Connection for TCP 10.0.0.6 117 to MC,
To: BUG-LISPM at MIT-OZ

In Release 5.0 [Beta Test rev 4], FEP 18, imperial purple, on Lisp Machine Apiary-10 (3600):

This happened while trying to finger at Multics. It was outputing
names and then it seemed to lose the connection.  Is this Multics losing?

>>Error: Attempt to to read from CHAOS Connection for TCP 10.0.0.6 117 to MC,
          which was closed by MC.
         Reason given was "? Socket entered illegal state #3"
While in the function (:DEFUN-METHOD CHAOS:BASIC-INPUT-STREAM-BAD-INPUT-PACKET)  (:METHOD CHAOS:BASIC-INPUT-STREAM :GET-NEXT-INPUT-PKT)  (:METHOD CHAOS:CHARACTER-INPUT-STREAM-MIXIN :NEXT-INPUT-BUFFER)

(:DEFUN-METHOD CHAOS:BASIC-INPUT-STREAM-BAD-INPUT-PACKET):  (P.C. = 24)
   Arg 0 (SELF): #<TCP Connection to MULTICS port 79 via MC 5176205>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor CHAOS:BASIC-INPUT-STREAM -- 2. IV's, 0. FL's 101402510>

(:METHOD CHAOS:BASIC-INPUT-STREAM :GET-NEXT-INPUT-PKT):  (P.C. = 111)
   Arg 0 (SELF): #<TCP Connection to MULTICS port 79 via MC 5176205>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor CHAOS:BASIC-INPUT-STREAM -- 2. IV's, 0. FL's 101402510>
   Arg 2 (OPERATION): :GET-NEXT-INPUT-PKT
   Arg 3 (NO-HANG-P): NIL

(:METHOD CHAOS:CHARACTER-INPUT-STREAM-MIXIN :NEXT-INPUT-BUFFER):  (P.C. = 6)
   Arg 0 (SELF): #<TCP Connection to MULTICS port 79 via MC 5176205>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor CHAOS:CHARACTER-INPUT-STREAM-MIXIN -- 1. IV's, 0. FL's 101402531>
   Arg 2 (OPERATION): :NEXT-INPUT-BUFFER
   Arg 3 (NO-HANG-P): NIL

(:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :SETUP-NEXT-INPUT-BUFFER):  (P.C. = 11)
   Arg 0 (SELF): #<TCP Connection to MULTICS port 79 via MC 5176205>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:BASIC-BUFFERED-INPUT-STREAM -- 3. IV's, 0. FL's 101402555>
   Arg 2 (OPERATION): :SETUP-NEXT-INPUT-BUFFER
   --Defaulted args:--
   Arg 3 (NO-HANG-P): NIL

(:METHOD CHAOS:ASCII-TRANSLATING-CHARACTER-STREAM :COMBINED :SETUP-NEXT-INPUT-BUFFER):  (P.C. = 10)
   Arg 0 (SELF): #<TCP Connection to MULTICS port 79 via MC 5176205>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor CHAOS:ASCII-TRANSLATING-CHARACTER-STREAM -- 0. IV's, 11. FL's 101402536>
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

(:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :TYI):  (P.C. = 13)
   Arg 0 (SELF): #<TCP Connection to MULTICS port 79 via MC 5176205>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:BASIC-BUFFERED-INPUT-STREAM -- 3. IV's, 0. FL's 101402555>
   Arg 2 (OPERATION): :TYI
   --Defaulted args:--
   Arg 3 (EOF): NIL

(:INTERNAL (:METHOD CHAOS:ASCII-TRANSLATING-CHARACTER-STREAM :COMBINED :TYI) 0):  (P.C. = 10)
   Arg 0 (SELF): #<TCP Connection to MULTICS port 79 via MC 5176205>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor CHAOS:ASCII-TRANSLATING-CHARACTER-STREAM -- 0. IV's, 11. FL's 101402536>
   Rest arg (.DAEMON-CALLER-ARGS.): (:TYI)

(:METHOD SI:ASCII-TRANSLATING-INPUT-STREAM-MIXIN :WHOPPER :TYI):  (P.C. = 11)
   Arg 0 (SELF): #<TCP Connection to MULTICS port 79 via MC 5176205>
   Arg 1 (SELF-MAPPING-TABLE): SI:ASCII-TRANSLATING-INPUT-STREAM-MIXIN
   Arg 2 (.WHOPPER-CONTINUATION.): #<DTP-COMPILED-FUNCTION (:INTERNAL (:METHOD CHAOS:ASCII-TRANSLATING-CHARACTER-STREAM :COMBINED :TYI) 0) 7107134>
   Arg 3 (.OLD-SELF-MAPPING-TABLE.): #<Map to flavor CHAOS:ASCII-TRANSLATING-CHARACTER-STREAM -- 0. IV's, 11. FL's 101402536>
   Arg 4 (.OPERATION.): :TYI

Rest of stack:
(:METHOD CHAOS:ASCII-TRANSLATING-CHARACTER-STREAM :COMBINED :TYI):  (P.C. = 12)
SI:TYI-FROM-ASCII-STREAM:  (P.C. = 5)
(:METHOD SI:ASCII-TRANSLATING-INPUT-STREAM-MIXIN :WHOPPER :TYI):  (P.C. = 15)
(:METHOD CHAOS:ASCII-TRANSLATING-CHARACTER-STREAM :COMBINED :TYI):  (P.C. = 12)
(:METHOD SI:UNBUFFERED-LINE-INPUT-STREAM :LINE-IN):  (P.C. = 21)
STREAM-COPY-UNTIL-EOF:  (P.C. = 64)
(:INTERNAL NETI:INVOKE-SERVICE-SHOW-USERS-WITH-ASCII-NAME 1):  (P.C. = 41)
NETI:INVOKE-SERVICE-SHOW-USERS-WITH-ASCII-NAME:  (P.C. = 14)
NET:INVOKE-SERVICE-ACCESS-PATH:  (P.C. = 21)
NET:INVOKE-SERVICE-ON-HOST:  (P.C. = 272)
NET:FINGER:  (P.C. = 64)
SI:*EVAL:  (P.C. = 370)
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 200)
SI:LISP-COMMAND-LOOP:  (P.C. = 115)
SI:LISP-TOP-LEVEL1:  (P.C. = 22)
SI:LISP-TOP-LEVEL:  (P.C. = 7)
 2-Mar-84 06:36:31-EST,2623;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 2 Mar 84 06:36-EST
Date: Friday, 2 March 1984, 06:36-EST
From: Tim McNerney <TIM at MIT-MC>
To: BUG-LISPM at MIT-OZ

In System 98.34, CADR 3.6, ZMail 53.12, MIT-Specific 22.0, microcode 306,
on Lisp Machine Thirty-one:

In Zmail: 

Typed G; It read in 43% of the renamed mail file and then hung (for
many minutes); Went into the editor to do some work; Returned to
Zmail; Clicked on Sort in hopes of restoring the chronological order
of the messages; It wrote of my babyl file, and then crashed.

What SHOULD I have done?

>>TRAP 6189. (ARGTYP NUMBER PP 0. QIEQL)
The first argument to =, NIL, was of the wrong type.
The function expected a number.
Backtrace from the debugger:

ZWEI:MUST-REDISPLAY (P.C. = 47)

 Arg 0 (WINDOW): #<ZMAIL-WINDOW Zmail Window 1 4651776 exposed>
 Arg 1 (DEGREE): NIL
   --Defaulted args:--
 Arg 2 (LINE): NIL
 Arg 3 (INDEX): NIL
 Arg 4 (NO-NEED-FOR-OTHER-WINDOWS): NIL
Local 0 (W-DEGREE): 5.


(:METHOD ZWEI:ZMAIL-COMMAND-LOOP-MIXIN :COMMAND-LOOP) (P.C. = 265)
  (SELF is #<ZMAIL-FRAME Main ZMail window 4641247 exposed>)

 Arg 0 (OPERATION): :COMMAND-LOOP
Local 0: ("Return to ZMAIL command loop.")
Local 1: ((SYSTEM:ABORT ERROR) ("Return to ZMAIL command loop.") T ("Return to ZMAIL command loop.") ...)
Local 2 (RESPONSE): (ZWEI:BACKGROUND ZWEI:NEW-MAIL "New mail in ~A at ~D:~2,'0D" #FS:ITS-PATHNAME "MC: TIM; TIM MAIL" ...)
Local 3 (DEGREE): NIL


(:INTERNAL (:METHOD ZWEI:ZMAIL-FRAME :COMBINED :COMMAND-LOOP) 0.) (P.C. = 44)

 Rest arg (.DAEMON-CALLER-ARGS.): (:COMMAND-LOOP)
Local 1 (.DAEMON-MAPPING-TABLE.): #<ART-16B-13. 23636222>


FUNCALL (P.C. = 25)

 Arg 0 (FN): #<DTP-FEF-POINTER (:INTERNAL (:METHOD ZWEI:ZMAIL-FRAME :COMBINED :COMMAND-LOOP) 0.) 30260335>
 Rest arg (ARGS): (:COMMAND-LOOP)


(:METHOD ZWEI:ZMAIL-COMMAND-LOOP-MIXIN :AROUND :COMMAND-LOOP) (P.C. = 57)
  (SELF is #<ZMAIL-FRAME Main ZMail window 4641247 exposed>)

 Arg 0 (OPERATION): :COMMAND-LOOP
 Arg 1 (CONT): #<DTP-FEF-POINTER (:INTERNAL (:METHOD ZWEI:ZMAIL-FRAME :COMBINED :COMMAND-LOOP) 0.) 30260335>
 Arg 2 (MT): #<ART-16B-13. 23636222>
 Arg 3 (ARGS): (:COMMAND-LOOP)
   --Defaulted args:--
 Arg 4 (EDITOR-CLOSURE-1): NIL
 Rest arg (IGNORE): NIL
Local 1: (ZWEI:UNKNOWN-SPECIAL-COMMAND ZWEI:ZMAIL-COMMAND-LOOP-UNKNOWN-SPECIAL-COMMAND)
Local 2: ((ZWEI:UNKNOWN-SPECIAL-COMMAND ZWEI:ZMAIL-COMMAND-LOOP-UNKNOWN-SPECIAL-COMMAND))


Remainder of stack:

(:METHOD ZWEI:ZMAIL-FRAME :COMBINED :COMMAND-LOOP) (P.C. = 43)
ZWEI:ZMAIL-PROCESS-TOP-LEVEL (P.C. = 115)
SI:PROCESS-TOP-LEVEL (P.C. = 152)
 2-Mar-84 12:20:26-EST,587;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 2 Mar 84 12:19-EST
Date: Friday, 2 March 1984, 12:03-EST
From: Kent M Pitman <kmp at MIT-MC>
Subject: m-X Tags Search Ignoring Comments
To: BUG-LISPM at OZ
Cc: ECC at OZ, KMP at OZ

In Release 4.5, Experimental Knowledge-Based-Editor 291.0,
site configuration 86, Black Magic, on PA Lisp Machine Avatar:

I would like a version of Tags Search which did not consider
finding things in comments (and perhaps a dual which only found
things in comments). Such a filtered search isn't always the
right thing, but when it is, it is.
 2-Mar-84 12:21:50-EST,1002;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 2 Mar 84 12:20-EST
Date: Friday, 2 March 1984, 12:11-EST
From: Kent M Pitman <kmp at MIT-MC>
Subject: (SEND SELF or (LEXPR-SEND SELF followed by c-sh-A
To: BUG-LISPM at OZ

In Release 4.5, Experimental Knowledge-Based-Editor 291.0,
site configuration 86, Black Magic, on PA Lisp Machine Avatar:

c-sh-A inside a (SEND SELF ... or a (LEXPR-SEND SELF ... should
look outward and find the flavor of the method you are in,
then consider only its methods and the methods of its component
flavors when seeking the arglist. Through the flavor system, 
this sort of lookup should be fast and usually accurate. The
current behavior is slow and error-prone. 

If there is any question about how the basic structure of the
algorithm goes, I can point you at the Teco code I use for c-sh-A
in my Emacs environment. It does the "right" thing, modulo assuming
the flavor definitions will be available to track as text elsewhere
in the buffer.
-kmp
 2-Mar-84 13:29:42-EST,2413;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 2 Mar 84 13:23-EST
Date: Friday, 2 March 1984, 13:20-EST
From: Kent M Pitman <kmp at MIT-MC>
Subject: Idiomatic usages forced by gaps in NES
To: BUG-LISPM at OZ
Cc: KMP at OZ, KBE-I-FILE at OZ

In Release 4.5, KBE 291.0x, on Avatar (CADR):

It would be nice if someone would make a special form to
capture the standard idioms like:

  (PROG T ()
    (CATCH-ERROR-RESTART (...restart-spec...)
	(RETURN-FROM T (PROGN ...body...)))
    (PROGN ...cleanup-forms...))

I get tired of explaining these to people. They find them
very unintuitive to write, though they find the abstract
concept completely intuitive.

Perhaps

  (DEFMACRO WHEN-RESTART (RESTART-SPEC FORM &BODY CLEANUP-FORMS)
    `(PROG T ()
	   (CATCH-ERROR-RESTART ,RESTART-SPEC
	     (RETURN-FROM T ,FORM))
	   (PROGN ,@CLEANUP-FORMS)))

so that you could say

    (WHEN-RESTART (SYS:ERROR "Simulate FOO another way.")
        (FOO)
      (ALTERNATE-FOO))

Similarly,

  (DEFMACRO WHEN-RESTART-LOOP (RESTART-SPEC FORM &BODY CLEANUP-FORMS)
    `(DO-NAMED T () (NIL)
       (CATCH-ERROR-RESTART ,RESTART-SPEC
	 (RETURN-FROM T ,FORM))
       (PROGN ,@CLEANUP-FORMS)))

to allow

    (LET ((BAR 1))
      (WHEN-RESTART-LOOP (SYS:ERROR "Add 1 and try again.")
          (FOO BAR)
	(INCF BAR)))

Notes: 

  * I think this list of operators is interesting and useful
    and worth including in the standard system.

  * I do not think this list of operators is exhaustive. I provided
    these examples as illustration of a general problem. I find
    (PROG .. (CATCH .. (RETURN .. (THROW ..))) ..) idioms intellectually
    interesting, but not devastatingly clear as a presentational tool.

  * I don't think the names I've chosen here are appropriate. I
    just made up names for presentation. They are not consistent
    in their behavior with ERROR-RESTART and ERROR-RESTART-LOOP.
    Such naming consistency would be important.

    As a side note, I think ERROR-RESTART and ERROR-RESTART-LOOP
    are misnamed anyway since they apply to any condition, not 
    just to errors. Also, I always have the impression 
    ERROR-RESTART-LOOP is going to loop on errors rather than
    loop always, so I find the name particularly misleading.

    Hence, I wouldn't mind if the whole family of "error" handling
    operations were renamed.
 2-Mar-84 13:55:20-EST,4308;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 2 Mar 84 13:54-EST
Date: Friday, 2 March 1984, 13:51-EST
From: Kent M Pitman <kmp at MIT-MC>
Subject: ANNOTATED-UNWIND-PROTECT -- an NES-related proposal 
To: BUG-LISPM at OZ
Cc: KBE-I-FILE at OZ, KMP at OZ

In Release 4.5, KBE 291.0x, on Avatar (CADR):

This message suggests an addition to the NES to annotate the
existence of certain UNWIND-PROTECTS in debugger listings.

I noticed something a little odd in a piece of code I was
writing. Here's a skeleton of the code:

(defun execute (command)
  (catch-error-restart ((sys:abort sys:error) "Terminate ~S" command)
    (execute-command command)))

(defun execute-command (command)
  (catch-error-restart ((sys:abort sys:error) "Abort ~S, restoring DB"
			command)
    (with-db-lock
      (let ((db-state (read-db-state))
	    (ok? nil))
	(unwind-protect (progn ... code to execute COMMAND ...
			       (setq ok? t))
	  (if (not ok?) (set-db-state old-db-state)))))))

These two functions were defined in different modules, which is why
they each had a CATCH-ERROR-RESTART. Neither one expected the other
to be doing it, so they both figured they'd take care of it themselves.

Also, and interestingly, neither of these was recursive and both were
executed purely for side-effect.

Now, I just went to change things around so that EXECUTE-COMMAND
could be called recursively from deep inside it. Upon so doing,
I noticed something odd:

If an inner EXECUTE-COMMAND is aborted, its caller will not realize
that it was (it will "harmlessly" return NIL) and something bad will
result. Hence, by all rights I should remove the CATCH-ERROR-RESTART
from EXECUTE-COMMAND to make sure this won't happen.

This would be fine, but for one thing: I want to annotate the stack
to say that the DB will be restored by EXECUTE-COMMAND even though
there is no abort-handler specifically corresponding to that.
Specifically, it seems to me that I should be able to write

(defun execute-command (command)
  (with-db-lock
    (let ((db-state (read-db-state))
	  (ok? nil))
      (annotated-unwind-protect "the DB will be restored"
				(progn ... code to execute COMMAND ...
				       (setq ok? t))
	(if (not ok?) (set-db-state old-db-state))))))

so that if I enter the debugger (eg, due to error) inside 
EXECUTE-COMMAND, I can see something like:

  >>Trap: The second argument to ...
  s-A: Supply replacement argument.
       If control returns past this stack frame, the DB will be restored.
  s-B: Terminate "Foo."
  s-C: Restart process SAMPLE-PROCESS

The point I'm trying to make is that I think it is important to
have information available in the debugger that hints about important
state restoration that will occur on unwind even if that information
is not associated with a restart point.

If all I see is:

  >>Trap: The second argument to ...
  s-A: Supply replacement argument.
  s-B: Terminate "Foo."
  s-C: Restart process SAMPLE-PROCESS

I might have to grovel around in code a lot before determining that
I can safely hit s-B or s-C without worrying the DB will be left 
in an inconsistent state.

This is especially important in error breaks while in Zmacs or a 
Zmacs breakpoint since it may be hard to get to the code without
using Zmacs in order to determine if you can exit the break.

I would not mind if this information was not available in the
default error display. ie, I'd be willing to type a special command
to the debugger to see an annotated form of the proceed options.
I suspect that the display is a matter of personal taste which might
well be best controlled by an option variable.

I don't especially like the name ANNOTATED-UNWIND-PROTECT. A better
name might should be chosen.

Also, it may be the case that strings are the wrong thing to use
as annotation, since programs might want to check for flavors of
cleanup in order to decide on proceed/restart options without user
intervention. Since we have no experience with this sort of 
annotation at all, I suspect annotating the stack with other than
strings would be just gratuitous generality, but perhaps in the
long run we should think about how more structured objects might
be used in this context.

Comments?
-kmp
 2-Mar-84 17:12:16-EST,2876;000000000000
Received: from SCRC-YUKON by MIT-OZ via Chaosnet; 2 Mar 84 17:07-EST
Received: from SCRC-BLACKSTONE by SCRC-YUKON with CHAOS; Fri 2-Mar-84 17:05:43-EST
Date: Friday, 2 March 1984, 17:08-EST
From: Neal Feinberg <Feinberg at SCRC-YUKON>
Reply-to: Feinberg at SCRC-YUKON, Bug-Beta-Test at SCRC-YUKON
Subject: 3600-s hardcopy buffer
To: DCP at SCRC-TENEX, CJL at MIT-OZ, bug-beta-test at SCRC-TENEX
Cc: brand at MIT-OZ, bug-lispm at MIT-OZ
In-reply-to: The message of 1 Mar 84 17:53-EST from David C. Plummer <DCP at SCRC-TENEX>
Supersedes: The message of 2 Mar 84 17:00-EST from Neal Feinberg <Feinberg at SCRC-YUKON>,
            The message of 2 Mar 84 17:00-EST from Neal Feinberg <Feinberg at SCRC-YUKON>

I'm sorry Bug-Lispm has been involved in this discussion at all.  In the
future, please address all problems with the Release 5.0 beta test to
Bug-Beta-Test@Yukon, or to Feinberg@Yukon.


    Date: Thursday, 1 March 1984  17:53-EST
    From: David C. Plummer <DCP at SCRC-TENEX>

	Date: Thu, 1 Mar 1984  15:40 EST
	From: CJL@MIT-OZ

	A lot of good it does. I have reported this bug in the correct way in
	bug-beta-test for REL5 beta test rev1, rev2, rev3, and rev4, and NEVER
	have I even seen an acknowledgement as to whether this bug is being
	corrected or will be fixed in any future release, or any patch to fix
	the bug. The fact that hardcopy doesn't work in release 5 seems to be
	a pretty significant bug to me.

    Bug-LispM is not a component of Bug-Beta-Test.  I personally
    don't recall seeing your bug report (complete with backtrace)
    forwarded to bug-lispm.  This could be for two reasons.  (1) I
    don't know enough about the editor internals to attempt to fix
    it, so I delete and likely forget about it, or (2) it never was
    forwarded.  If you have really reported this in each beta-rev,
    you are quite justified in wanting an acknowledgement.  Before
    either of us does any namecalling, we should let Maint defend
    themselves.

First, CJL never used a beta rev1 band; this band was never distributed
to any customer.  Second, if CJL sent in a bug report
about this from a beta rev 2 band, we never received it.  CJL did send in
a bug report from a beta rev 3 band on January 6, and another one on
January 27 from a beta rev 4.

CJL should have received an acknowledgment for his two bug reports.  We
apologize for not doing so.  We will do better next time.  

The hardcopy problem in question has been corrected, and Joseph tells me
that he has successfully queued files to the dover with Beta Rev 7.
Since both dovers are down, we will not know the complete results until
later, but the bug CJL reported appears to have been fixed.  Joseph
plans to distribute Beta 7 to MIT soon.

Again, please do not generate any more mail traffic on Bug-Lispm about
this.  Thanks.
 3-Mar-84 16:19:05-EST,3818;000000000000
Received: from MIT-XX by MIT-OZ via Chaosnet; 3 Mar 84 16:18-EST
Date: Saturday, 3 March 1984, 16:13-EST
From: scott a douglass <SAD at MIT-XX>
To: BUG-LISPM at MIT-OZ

In System 242.269, FEP 13, Purple MEF, on MEF Live Oak (3600):

In zmacs I tryied m-X Change File Properties for the (default) file name
cherry:>sad>cl.lisp.  This is what happened:

>>Error: :keyword-list bad keyword in a CHOOSE-VARIABLE-VALUES-WINDOW
While in the function (:method tv:basic-choose-variable-values :decode-variable-type)  (:method tv:basic-choose-variable-values :decode-item-for-printing)  (:method tv:basic-choose-variable-values :item-width)

(:method tv:basic-choose-variable-values :decode-variable-type):  (P.C. = 52)
   Arg 0 (self): #<temporary-choose-variable-values-window Temporary Choose Variable Values Window 1 1040757 deactivated>
   Arg 1 (self-mapping-table): #<Map to flavor tv:basic-choose-variable-values -- 7. IV's, 0. FL's 101747405>
   Arg 2 (operation): :decode-variable-type
   Arg 3 (kwd-and-args): (:keyword-list)
   Local 4 (key): :keyword-list
   Local 5 (tem): nil
   Local 6 (pf): "~S bad keyword in a CHOOSE-VARIABLE-VALUES-WINDOW"
   Local 7 (rf): :keyword-list
   Local 8 (choices): #<DTP-LOCATIVE 140323>
   Local 9 (gpvf): #<DTP-LOCATIVE 140330>
   Local 10 (gvvf): #<DTP-EVEN-PC 22766162>

(:method tv:basic-choose-variable-values :decode-item-for-printing):  (P.C. = 72)
   Arg 0 (self): #<temporary-choose-variable-values-window Temporary Choose Variable Values Window 1 1040757 deactivated>
   Arg 1 (self-mapping-table): #<Map to flavor tv:basic-choose-variable-values -- 7. IV's, 0. FL's 101747405>
   Arg 2 (operation): :decode-item-for-printing
   Arg 3 (item): (:link-transparencies "Link Transparencies" :keyword-list)

(:method tv:basic-choose-variable-values :item-width):  (P.C. = 13)
   Arg 0 (self): #<temporary-choose-variable-values-window Temporary Choose Variable Values Window 1 1040757 deactivated>
   Arg 1 (self-mapping-table): #<Map to flavor tv:basic-choose-variable-values -- 7. IV's, 0. FL's 101747405>
   Arg 2 (operation): :item-width
   Arg 3 (item): (:link-transparencies "Link Transparencies" :keyword-list)
   Arg 4 (extra-width): 80
   --Defaulted args:--
   Arg 5 (stop-x): nil

(:method tv:basic-choose-variable-values :appropriate-width):  (P.C. = 54)
   Arg 0 (self): #<temporary-choose-variable-values-window Temporary Choose Variable Values Window 1 1040757 deactivated>
   Arg 1 (self-mapping-table): #<Map to flavor tv:basic-choose-variable-values -- 7. IV's, 0. FL's 101747405>
   Arg 2 (operation): :appropriate-width
   Arg 3 (extra-width): 10

tv:choose-variable-values:  (P.C. = 323)
   Arg 0 (variables): ((:dont-delete "Don't Delete" :boolean) (:default-generation-retention-count "Default Generation Retention Count" :number) (:dont-reap "Don't Reap" :boolean) (:auto-expunge-interval "Auto Expunge Interval" :time-interval-or-never) (:author "Author" :string) (:creation-date "Creation Date" :date) (:link-transparencies "Link Transparencies" :keyword-list) (:generation-retention-count "Generation Retention Count" :number) (:deleted "Deleted" :boolean))
   Rest arg (options): (:label "Change properties for CHERRY:>sad>cl.lisp.3" :margin-choices ("Do It" ("Abort" (*throw ** nil))))

zwei:change-file-properties:  (P.C. = 110)
   Arg 0 (pathname): "cherry:>sad>cl.lisp"

si:*eval:  (P.C. = 370)
   Arg 0 (form): (zwei:change-file-properties "cherry:>sad>cl.lisp")

si:lisp-command-loop-internal:  (P.C. = 200)
   Rest arg: (:name "Lisp Top Level in Lisp Listener 1" :aborted-function nil :before-prompt-function nil :read-function nil :eval-function nil ...)

Rest of stack:
si:lisp-command-loop:  (P.C. = 115)
si:lisp-top-level1:  (P.C. = 22)
si:lisp-top-level:  (P.C. = 7)
 3-Mar-84 17:43:54-EST,3532;000000000000
Received: from MIT-XX by MIT-OZ via Chaosnet; 3 Mar 84 17:43-EST
Date: Saturday, 3 March 1984, 17:39-EST
From: Margaret Hirlinger <maggie at MIT-EDDIE>
To: BUG-LISPM at MIT-OZ

In System 242.269, Purple MEF, on MEF Flame of the Forest (3600):

After working for a while in zmacs, I could not save my file back onto multics.  Maybe because my
multics server timed-out.  The message Multics sent looks like a sign on.

>>Error: Unknown response from host: {{y120 Unattended Service (expecting 220).
While in the function (:DEFUN-METHOD FS:TCP-FTP-CHECK-COMMAND-RESPONSE)  (:DEFUN-METHOD FS:TCP-FTP-VALIDATE-CONN)  (:METHOD FS:TCP-FTP-CONN :ALLOCATE)

(:DEFUN-METHOD FS:TCP-FTP-CHECK-COMMAND-RESPONSE):  (P.C. = 221)
   Arg 0 (SELF): #<TCP-FTP-CONN 6561402>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:TCP-FTP-CONN -- 8. IV's, 0. FL's 107637572>
   Arg 2 (EXPECTED-VALUE): 334
   --Defaulted args:--
   Arg 3 (CTL-STRING): NIL
   Rest arg (ARGS): NIL
   Local 5 (OLD-STATE): :FREE
   Local 6 (NUM): 170
   Local 7 (LINE): "{{y120 Unattended Service"
   Local 8 (ELEM): NIL

(:DEFUN-METHOD FS:TCP-FTP-VALIDATE-CONN):  (P.C. = 50)
   Arg 0 (SELF): #<TCP-FTP-CONN 6561402>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:TCP-FTP-CONN -- 8. IV's, 0. FL's 107637572>

(:METHOD FS:TCP-FTP-CONN :ALLOCATE):  (P.C. = 11)
   Arg 0 (SELF): #<TCP-FTP-CONN 6561402>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:TCP-FTP-CONN -- 8. IV's, 0. FL's 107637572>
   Arg 2 (OPERATION): :ALLOCATE

(:DEFUN-METHOD FS:TCP-FTP-FIND-CONN):  (P.C. = 13)
   Arg 0 (SELF): #<MULTICS-TCP-FTP-FILE-ACCESS-PATH MULTICS using TCP-FTP 6557635>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:TCP-FTP-FILE-ACCESS-PATH -- 4. IV's, 2. FL's 101372614>

(:METHOD FS:TCP-FTP-FILE-ACCESS-PATH :OPEN):  (P.C. = 6)
   Arg 0 (SELF): #<MULTICS-TCP-FTP-FILE-ACCESS-PATH MULTICS using TCP-FTP 6557635>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:TCP-FTP-FILE-ACCESS-PATH -- 4. IV's, 2. FL's 101372614>
   Arg 2 (OPERATION): :OPEN
   Rest arg (ARGS): (#<MULTICS-PATHNAME "MULTICS: >udd>steh>Hirlinger>anthro2.runoff"> #<MULTICS-PATHNAME "MULTICS: >udd>steh>Hirlinger>anthro2.runoff"> :CHARACTERS T :DIRECTION :OUTPUT)

(:METHOD FS:ACTIVE-PATHNAME-MIXIN :OPEN):  (P.C. = 14)
   Arg 0 (SELF): #<MULTICS-PATHNAME "MULTICS: >udd>steh>Hirlinger>anthro2.runoff">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:ACTIVE-PATHNAME-MIXIN -- 1. IV's, 0. FL's 101004754>
   Arg 2 (OPERATION): :OPEN
   Arg 3 (PATHNAME): #<MULTICS-PATHNAME "MULTICS: >udd>steh>Hirlinger>anthro2.runoff">
   Rest arg (OPTIONS): (:CHARACTERS T :DIRECTION :OUTPUT)

FS:MACLISP-COMPATIBILITY-OPEN:  (P.C. = 362)
   Arg 0 (FILENAME): #<MULTICS-PATHNAME "MULTICS: >udd>steh>Hirlinger>anthro2.runoff">
   Arg 1 (OPTIONS): (ZWEI:OUT)

OPEN:  (P.C. = 252)
   Arg 0 (PATHNAME): #<MULTICS-PATHNAME "MULTICS: >udd>steh>Hirlinger>anthro2.runoff">
   Rest arg (KEYWORD-ARGS): ((ZWEI:OUT))

Rest of stack:
(:METHOD ZWEI:FILE-BUFFER-MIXIN :SAVE):  (P.C. = 44)
ZWEI:COM-WRITE-FILE:  (P.C. = 20)
ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
ZWEI:MAKE-EXTENDED-COMMAND-INTERNAL:  (P.C. = 77)
SYS:CALL-FUNNY-FUNCTION:  (P.C. = 101)
Closure of ZWEI:MAKE-EXTENDED-COMMAND-INTERNAL:
ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 200)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 41)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
 3-Mar-84 22:49:20-EST,9739;000000000000
Received: from MIT-BUDDY by MIT-OZ via Chaosnet; 3 Mar 84 22:48-EST
Date: Saturday, 3 March 1984, 22:48-EST
From: joseph at SCRC-QUABBIN
Sender: jpt at MIT-OZ
Subject: Close but no Cookie
To: BUG-LISPM at MIT-OZ

In Release 5.0 [Beta Test rev 7], on Lisp Machine Buddy Holly (3600):

My alter ego here at MIT (jpt) doesn't have a user/host pair for MC.
When I hardcopy something via the default printer, it wants a user name
so as to login to MC and write MC: .DOVR.; JPT >.  It prompts for this
with a message akin to "Process Hardcopy got an error".  Perhaps it should
either suggest fishing out the Hardcopy request for a user name with
Function-0-S, or (my favorite) try logging in anonymously to MC.  Here's
a backtrace with the front entries compressed:

>>Break: 
While in the function PROCESS-WAIT  TV:KBD-IO-BUFFER-GET  (:METHOD TV:STREAM-MIXIN :ANY-TYI)

PROCESS-WAIT:  (P.C. = 1)
TV:KBD-IO-BUFFER-GET:  (P.C. = 135)
(:METHOD TV:STREAM-MIXIN :ANY-TYI):  (P.C. = 67)
(:DEFUN-METHOD TV:RH-TYI):  (P.C. = 12)
(:DEFUN-METHOD TV:ALTERNATE-RUBOUT-HANDLER-TYI):  (P.C. = 45)
TV:ALTERNATE-RUBOUT-HANDLER-TYI:  (P.C. = 12)
TV:RUBOUT-HANDLER-INVOKE:  (P.C. = 11)
(:METHOD TV:STREAM-MIXIN :ANY-TYI):  (P.C. = 43)
SI:READ-DELIMITED-STRING-INTERNAL:  (P.C. = 47)
(:INTERNAL READLINE 1):  (P.C. = 6)
(:DEFUN-METHOD TV:RUBOUT-HANDLER-READ):  (P.C. = 61)
(:METHOD TV:STREAM-MIXIN :RUBOUT-HANDLER):  (P.C. = 72)
READLINE:  (P.C. = 57)
READLINE-TRIM:  (P.C. = 5)
   Rest arg (READ-ARGS): (#:TERMINAL-IO-SYN-STREAM)

FS:PROMPT-FOR-USER-AND-PASSWORD:  (P.C. = 32)
   Arg 0 (HOST): #<ITS-HOST MC 76235170>
   Arg 1 (HOST-USER-ID): NIL
   Arg 2 (CONDITION): NIL
   Arg 3 (PRINT-ERROR-MESSAGE): NIL
   Arg 4 (NEED-NEW-USER): T
   Arg 5 (NEED-PASSWORD): NIL
   Arg 6 (ALLOW-ANONYMOUS): NIL
   Arg 7 (NO-PASSWORDS): T

(:METHOD FS:USER-FILE-ACCESS-PATH :PROMPT-FOR-USER-AND-PASSWORD):  (P.C. = 20)
   Arg 0 (SELF): #<ITS-QFILE-ACCESS-PATH MC using QFILE 3613672>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:USER-FILE-ACCESS-PATH -- 4. IV's, 0. FL's 104233524>
   Arg 2 (OPERATION): :PROMPT-FOR-USER-AND-PASSWORD
   Arg 3 (HOST-USER): NIL
   Arg 4 (CONDITION): NIL
   Arg 5 (PRINT-ERROR-MESSAGE): NIL
   Arg 6 (NEED-NEW-USER): T
   Arg 7 (NEED-PASSWORD): NIL

FS:GET-USER-ID-AND-PASSWORD:  (P.C. = 161)
   Arg 0 (ACCESS-PATH): #<ITS-QFILE-ACCESS-PATH MC using QFILE 3613672>
   Arg 1 (HOST-USER-ID): NIL
   Arg 2 (HOST-PASSWORD): NIL
   Arg 3 (CONDITION): NIL

FS:LOGIN-HOST-UNIT:  (P.C. = 120)
   Arg 0 (UNIT): #<HOST-UNIT 3613703>
   Arg 1 (LOGIN-P): T
   Arg 2 (CONDITION): NIL

(:METHOD FS:QFILE-ACCESS-PATH :LOGIN-UNIT):  (P.C. = 10)
   Arg 0 (SELF): #<ITS-QFILE-ACCESS-PATH MC using QFILE 3613672>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:QFILE-ACCESS-PATH -- 3. IV's, 0. FL's 104233506>
   Arg 2 (OPERATION): :LOGIN-UNIT
   Arg 3 (UNIT): #<HOST-UNIT 3613703>
   Arg 4 (LOGIN-P): T
   --Defaulted args:--
   Arg 5 (CONDITION): NIL

(:METHOD FS:ITS-QFILE-ACCESS-PATH :COMBINED :LOGIN-UNIT):  (P.C. = 10)
   Arg 0 (SELF): #<ITS-QFILE-ACCESS-PATH MC using QFILE 3613672>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:ITS-QFILE-ACCESS-PATH -- 2. IV's, 3. FL's 104233514>
   Rest arg (.DAEMON-CALLER-ARGS.): (:LOGIN-UNIT #<HOST-UNIT 3613703> T)

(:METHOD FS:HOST-UNIT :VALIDATE-CONTROL-CONNECTION):  (P.C. = 121)
   Arg 0 (SELF): #<HOST-UNIT 3613703>
   Arg 1 (SELF-MAPPING-TABLE): FS:HOST-UNIT
   Arg 2 (OPERATION): :VALIDATE-CONTROL-CONNECTION
   --Defaulted args:--
   Arg 3 (NO-ERROR-P): NIL

(:METHOD FS:QFILE-ACCESS-PATH :NEW-HOST-UNIT):  (P.C. = 25)
   Arg 0 (SELF): #<ITS-QFILE-ACCESS-PATH MC using QFILE 3613672>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:QFILE-ACCESS-PATH -- 3. IV's, 0. FL's 104233506>
   Arg 2 (OPERATION): :NEW-HOST-UNIT

(:METHOD FS:QFILE-ACCESS-PATH :GET-DATA-CONNECTION):  (P.C. = 35)
   Arg 0 (SELF): #<ITS-QFILE-ACCESS-PATH MC using QFILE 3613672>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:QFILE-ACCESS-PATH -- 3. IV's, 0. FL's 104233506>
   Arg 2 (OPERATION): :GET-DATA-CONNECTION
   Arg 3 (DIRECTION): :OUTPUT

FS:OPEN-CHAOS:  (P.C. = 435)
   Arg 0 (ACCESS-PATH): #<ITS-QFILE-ACCESS-PATH MC using QFILE 3613672>
   Arg 1 (REAL-PATHNAME): #<ITS-PATHNAME "MC: .DOVR.; JPT >">
   Arg 2 (*COMMAND-PATHNAME*-initialization): #<ITS-PATHNAME "MC: .DOVR.; JPT >">
   Arg 3 (OPTIONS): (:DIRECTION :OUTPUT :BYTE-SIZE 10 :CHARACTERS NIL)

(:METHOD FS:QFILE-ACCESS-PATH :OPEN):  (P.C. = 7)
   Arg 0 (SELF): #<ITS-QFILE-ACCESS-PATH MC using QFILE 3613672>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:QFILE-ACCESS-PATH -- 3. IV's, 0. FL's 104233506>
   Arg 2 (OPERATION): :OPEN
   Arg 3 (REAL-PATHNAME): #<ITS-PATHNAME "MC: .DOVR.; JPT >">
   Arg 4 (PATHNAME): #<ITS-PATHNAME "MC: .DOVR.; JPT >">
   Rest arg (OPTIONS): (:DIRECTION :OUTPUT :BYTE-SIZE 10 :CHARACTERS NIL)

(:METHOD FS:ACTIVE-PATHNAME-MIXIN :OPEN):  (P.C. = 14)
   Arg 0 (SELF): #<ITS-PATHNAME "MC: .DOVR.; JPT >">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:ACTIVE-PATHNAME-MIXIN -- 1. IV's, 0. FL's 104114734>
   Arg 2 (OPERATION): :OPEN
   Arg 3 (PATHNAME): #<ITS-PATHNAME "MC: .DOVR.; JPT >">
   Rest arg (OPTIONS): (:DIRECTION :OUTPUT :BYTE-SIZE 10 :CHARACTERS NIL)

FS:COMMON-LISP-OPEN:  (P.C. = 445)
   Arg 0 (PATHNAME): #<ITS-PATHNAME "MC: .DOVR.; JPT >">
   Arg 1 (KEYWORD-ARGS): (:DIRECTION :OUT :CHARACTERS NIL :BYTE-SIZE 10)

OPEN:  (P.C. = 255)
   Arg 0 (PATHNAME): #<ITS-PATHNAME "MC: .DOVR.; JPT >">
   Rest arg (KEYWORD-ARGS): (:DIRECTION :OUT :CHARACTERS NIL :BYTE-SIZE 10)

(:PROPERTY :ITS-DOVER SI:HARDCOPY-SPOOLER-STREAM-FUNCTION):  (P.C. = 30)
   Arg 0 (DEVICE): #<PRINTER TREMONT-VIA-MC 50663137>
   Arg 1 (SPOOLER-OPTIONS): ((:SPOOL-VIA "ITS-DOVER") (:FILE-NAME "MC:.DOVR.;") (:STATUS-FILE-NAME "MC:DVR:FOO;.FILE. (DIR)"))
   Arg 2 (OPTIONS): (:NEW-PAGE-HOOK #<DTP-COMPILED-FUNCTION SI:HARDCOPY-PRINT-PAGE-HEADING 46503627> :HEADER-FONT-P T :BANNER-FILE-NAME "OZ:PS:<JPT>LISPM-INIT.LISP.25" :BANNER-CREATION-DATE 23607014771 :PRESS-FONTS (("LPT" "" 12)) ...)

SI:GET-HARDCOPY-DEVICE-OUTPUT-STREAM:  (P.C. = 26)
   Arg 0 (DEVICE): #<PRINTER TREMONT-VIA-MC 50663137>
   Arg 1 (OPTIONS): (:NEW-PAGE-HOOK #<DTP-COMPILED-FUNCTION SI:HARDCOPY-PRINT-PAGE-HEADING 46503627> :HEADER-FONT-P T :BANNER-FILE-NAME "OZ:PS:<JPT>LISPM-INIT.LISP.25" :BANNER-CREATION-DATE 23607014771 :PRESS-FONTS (("LPT" "" 12)) ...)

SI:MAKE-HARDCOPY-STREAM:  (P.C. = 23)
   Arg 0 (DEVICE): #<PRINTER TREMONT-VIA-MC 50663137>
   Rest arg (OPTIONS): (:NEW-PAGE-HOOK #<DTP-COMPILED-FUNCTION SI:HARDCOPY-PRINT-PAGE-HEADING 46503627> :HEADER-FONT-P T :BANNER-FILE-NAME "OZ:PS:<JPT>LISPM-INIT.LISP.25" :BANNER-CREATION-DATE 23607014771 :PRESS-FONTS (("LPT" "" 12)) ...)

SI:HARDCOPY-FROM-STREAM:  (P.C. = 27)
   Arg 0 (STREAM): #<FILE-INPUT-CHARACTER-STREAM "OZ:PS:<JPT>LISPM-INIT.LISP.25" 3613550>
   Arg 1 (DEVICE): #<PRINTER TREMONT-VIA-MC 50663137>
   Rest arg (OPTIONS): (:BANNER-FILE-NAME "OZ:PS:<JPT>LISPM-INIT.LISP.25" :BANNER-CREATION-DATE 23607014771 :PRESS-FONTS (("LPT" "" 12)) :COPIES 1 :PAGE-HEADINGS T ...)

SI:HARDCOPY-TEXT-FILE:  (P.C. = 52)
   Arg 0 (FILE-NAME): #<TOPS20-PATHNAME "OZ:PS:<JPT>LISPM-INIT.LISP.25">
   Arg 1 (DEVICE): #<PRINTER TREMONT-VIA-MC 50663137>
   Rest arg (OPTIONS): (:PRESS-FONTS (("LPT" "" 12)) :COPIES 1 :PAGE-HEADINGS T :LANDSCAPE-P NIL)

PRESS:HARDCOPY-VIA-MENUS:  (P.C. = 1522)
   Arg 0 (PATH): NIL
   Arg 1 (LOWER-PRIORITY-P): T

SI:*EVAL:  (P.C. = 370)
   Arg 0 (FORM): (PRESS:HARDCOPY-VIA-MENUS NIL T)

(:METHOD TV:MENU-EXECUTE-MIXIN :EXECUTE):  (P.C. = 53)
   Arg 0 (SELF): #<DYNAMIC-MULTICOLUMN-MOMENTARY-WINDOW-HACKING-PROCESS-RENAMING-MENU Dynamic Multicolumn Momentary Window Hacking Process Renaming Menu 1 53311014 deactivated>
   Arg 1 (SELF-MAPPING-TABLE): TV:MENU-EXECUTE-MIXIN
   Arg 2 (OPERATION): :EXECUTE
   Arg 3 (ITEM): ("Hardcopy" :EVAL (PRESS:HARDCOPY-VIA-MENUS NIL T) :DOCUMENTATION "Print files on the hardcopy printer")

(:METHOD TV:DYNAMIC-MULTICOLUMN-MOMENTARY-WINDOW-HACKING-PROCESS-RENAMING-MENU :COMBINED :EXECUTE):  (P.C. = 24)
   Arg 0 (SELF): #<DYNAMIC-MULTICOLUMN-MOMENTARY-WINDOW-HACKING-PROCESS-RENAMING-MENU Dynamic Multicolumn Momentary Window Hacking Process Renaming Menu 1 53311014 deactivated>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:DYNAMIC-MULTICOLUMN-MOMENTARY-WINDOW-HACKING-PROCESS-RENAMING-MENU -- 0. IV's, 3. FL's 104522751>
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

(:METHOD TV:BASIC-MENU :CHOOSE):  (P.C. = 21)
   Arg 0 (SELF): #<DYNAMIC-MULTICOLUMN-MOMENTARY-WINDOW-HACKING-PROCESS-RENAMING-MENU Dynamic Multicolumn Momentary Window Hacking Process Renaming Menu 1 53311014 deactivated>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:BASIC-MENU -- 29. IV's, 0. FL's 104522776>
   Arg 2 (OPERATION): :CHOOSE

(:METHOD TV:DYNAMIC-MULTICOLUMN-MOMENTARY-WINDOW-HACKING-MENU :COMBINED :CHOOSE):  (P.C. = 34)
   Arg 0 (SELF): #<DYNAMIC-MULTICOLUMN-MOMENTARY-WINDOW-HACKING-PROCESS-RENAMING-MENU Dynamic Multicolumn Momentary Window Hacking Process Renaming Menu 1 53311014 deactivated>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:DYNAMIC-MULTICOLUMN-MOMENTARY-WINDOW-HACKING-MENU -- 0. IV's, 4. FL's 104522766>
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

TV:CALL-SYSTEM-MENU:  (P.C. = 26)
   Arg 0 (SUPERIOR): #<MAIN-SCREEN Main Screen 32640077 exposed>

SI:PROCESS-RUN-FUNCTION-INTERNAL:  (P.C. = 51)
   Arg 0 (RESTART-ON-RESET): NIL
   Arg 1 (FUNCTION): #<DTP-COMPILED-FUNCTION TV:CALL-SYSTEM-MENU 20747101>
   Rest arg (ARGS): (#<MAIN-SCREEN Main Screen 32640077 exposed>)

SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
   Arg 0 (IGNORE): NIL
 4-Mar-84 22:09:59-EST,1401;000000000000
Received: from SCRC-YUKON by MIT-OZ via Chaosnet; 4 Mar 84 22:09-EST
Received: from SCRC-HARLEM by SCRC-YUKON with CHAOS; Sun 4-Mar-84 22:09:45-EST
Date: Sunday, 4 March 1984, 22:13-EST
From: Joseph R Goldstone <joseph at SCRC-QUABBIN>
Subject: :keyword-list bad keyword in a CHOOSE-VARIABLE-VALUES-WINDOW, r.i.p.
To: scott a douglass <SAD at MIT-XX>
Cc: BUG-LISPM at MIT-OZ
In-reply-to: The message of 3 Mar 84 16:13-EST from scott a douglass <SAD at MIT-XX>

    Date: Saturday, 3 March 1984, 16:13-EST
    From: scott a douglass <SAD at MIT-XX>
    In System 242.269, FEP 13, Purple MEF, on MEF Live Oak (3600):

    In zmacs I tryied m-X Change File Properties for the (default) file name
    cherry:>sad>cl.lisp.  This is what happened:

    >>Error: :keyword-list bad keyword in a CHOOSE-VARIABLE-VALUES-WINDOW
    While in the function (:method tv:basic-choose-variable-values :decode-variable-type)  (:method tv:basic-choose-variable-values :decode-item-for-printing)  (:method tv:basic-choose-variable-values :item-width)

Thanks for the report.  242.271 fixes this, and is in Moby Grape, the
successor to Imperial Purple.  I'll send out a message to info-lispm@oz,
(and cc: you explictly) on how to get this band, installed last night.

-- joseph

p.s. did you type in the entire backtrace by hand, or what?  the capitalization
(or lack of it) was most unusual.
 4-Mar-84 22:43:32-EST,1860;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 4 Mar 84 22:42-EST
Received: from SCRC-HARLEM by SCRC-YUKON with CHAOS; Sun 4-Mar-84 22:42:59-EST
Date: Sun, 4 Mar 84 22:46 EST
From: Joseph R Goldstone <joseph%SCRC-QUABBIN@MIT-MC.ARPA>
Subject: new Symbolics world available for 3600 users
To: info-lispm@MIT-MC.ARPA

A more up-to-date version of the Symbolics Release 5 Beta Test world
is available for 3600 users (with a CADR version to follow shortly).
A new microcode (tmc5-mic 270) should be installed in conjuction with
the new world.  To install the new microcode and world load:

 o   Clear out 20000. pages of space in your FEP file system, by deleting
     obsolete world loads, old scratch files, and such...

 o   Get the new microcode with (si:install-microcode 270.) assuming that
     OZ is up and happy.

 o   Get the new world from Buddy or Janis or whomever else has a copy,
     with (si:receive-band "buddy" "grape") [substitutions for "buddy"
     are encouraged to spread the load off that machine].  If the band
     transfer process offers to checksum the transfer, don't turn it
     down!  The checksum only takes an extra couple of minutes.

 o   Adjust whatever boot file was being used for booting Release 5.

Reboot the new world, and enjoy.

This new world has the following improvements over previous Release 5 worlds:
 Hardcopying to the dover works again (finally!).
 Boot time is shorter (about 1 minute).
 Miscellaneous bug fixes [(si:print-patches 'system 266.) tells all].

As in the past, we ask that any worlds customized from this standard world
be saved with a significantly different name.  It's a help to us when
a bug report says "Apiary Grape", "Grape MEF", "Moby GripeX", etc. as opposed
to the standard "Moby Grape".

Bugs to BUG-BETA-TEST@OZ, as usual.  Thanks.

-- joseph
 5-Mar-84 11:57:52-EST,1234;000000000000
Received: from SCRC-YUKON by MIT-OZ via Chaosnet; 5 Mar 84 11:57-EST
Received: from SCRC-MERRIMACK by SCRC-YUKON with CHAOS; Mon 5-Mar-84 12:05:07-EST
Date: Monday, 5 March 1984, 12:11-EST
From: Charles Hornig <Hornig at SCRC-QUABBIN>
Subject: TCP FTP in 242
To: Margaret Hirlinger <maggie at MIT-EDDIE>, BUG-LISPM at MIT-OZ,
    bug-beta-test at SCRC-QUABBIN
In-Reply-To: The message of 3 Mar 84 17:39-EST from Margaret Hirlinger <maggie at MIT-EDDIE>
Message-ID: <840305121112.4.Hornig@QUABBIN.SCRC.Symbolics>

    Date: Saturday, 3 March 1984, 17:39-EST
    From: Margaret Hirlinger <maggie at MIT-EDDIE>

    In System 242.269, Purple MEF, on MEF Flame of the Forest (3600):

    After working for a while in zmacs, I could not save my file back onto multics.  Maybe because my
    multics server timed-out.  The message Multics sent looks like a sign on.

    >>Error: Unknown response from host: <177>{<177>{<177>y120 Unattended Service (expecting 220).
    While in the function (:DEFUN-METHOD FS:TCP-FTP-CHECK-COMMAND-RESPONSE)  (:DEFUN-METHOD FS:TCP-FTP-VALIDATE-CONN)  (:METHOD FS:TCP-FTP-CONN :ALLOCATE)

I know this won't do you much good, but this is fixed in the
(unreleased) new TCP package.
 5-Mar-84 12:07:32-EST,1345;000000000000
Received: from SCRC-RIVERSIDE by MIT-OZ via Chaosnet; 5 Mar 84 12:06-EST
Received: from SCRC-MERRIMACK by SCRC-RIVERSIDE via CHAOS with CHAOS-MAIL id 8513; Mon 5-Mar-84 12:14:45-EST
Date: Monday, 5 March 1984, 12:21-EST
From: Charles Hornig <Hornig at SCRC-QUABBIN>
Subject: >>Error: Attempt to to read from CHAOS Connection for TCP 10.0.0.6 117 to MC,
To: David Kirsh <KIRSH at MIT-OZ>, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 2 Mar 84 04:58-EST from David Kirsh <KIRSH at MIT-OZ>
Message-ID: <840305122134.5.Hornig@QUABBIN.SCRC.Symbolics>

    Date: Friday, 2 March 1984, 04:58-EST
    From: David Kirsh <KIRSH at MIT-OZ>

    In Release 5.0 [Beta Test rev 4], FEP 18, imperial purple, on Lisp Machine Apiary-10 (3600):

    This happened while trying to finger at Multics. It was outputing
    names and then it seemed to lose the connection.  Is this Multics losing?

    >>Error: Attempt to to read from CHAOS Connection for TCP 10.0.0.6 117 to MC,
	      which was closed by MC.
	     Reason given was "? Socket entered illegal state #3"
    While in the function (:DEFUN-METHOD CHAOS:BASIC-INPUT-STREAM-BAD-INPUT-PACKET)  (:METHOD CHAOS:BASIC-INPUT-STREAM :GET-NEXT-INPUT-PKT)  (:METHOD CHAOS:CHARACTER-INPUT-STREAM-MIXIN :NEXT-INPUT-BUFFER)

Multics reset the connection.  Useless message curtesy of MC.
 5-Mar-84 22:11:05-EST,3141;000000000000
Received: from MIT-EECS by MIT-OZ via Chaosnet; 5 Mar 84 22:10-EST
Date: Monday, 5 March 1984, 22:07-EST
From: Weld <weld at MIT-OZ>
Subject: This is really from Alan
To: BUG-LISPM at MIT-OZ

In Release 5.0 [Beta Test rev 4], imperial purple, on Lisp Machine Elvis Presley (3600):

Dan Weld was trying to create a user object for himself, but that turns
out to be awkward because you have to be logged in to do that.  Catch-22.

Another complaint is that when I tried to C-M this bug, it still
insisted that someone log in.  That wouldn't be too bad, except the
little pop up window that asked me for a username (followed by an
optional t...) accepted that information and then the machine was into a
Lock state.

Finally when I got back to the error handler to try to c-M this thing
again, I did (login 'alan :load-init-file nil) and was informed that the
USER named ALAN did not exist.  I don't have the patience to figure out
for the umpteenth time why this has happened to me.

>>Error: Error from server: Update-by not supplied;you must be logged in.
While in the function NET:UPDATE-OBJECT-PERMANENTLY  (:DEFUN-METHOD TV:PERFORM-COMMAND)  (:METHOD TV:NAMESPACE-EDITOR-FRAME :TOP-LEVEL)

NET:UPDATE-OBJECT-PERMANENTLY:  (P.C. = 167)
   Arg 0 (CLASS): #<CLASS USER 74113262>
   Arg 1 (NAMESPACE): #<NAMESPACE MIT 74015123>
   Arg 2 (NAME): #<NAME MIT|WELD 57424345>
   Arg 3 (PROPERTY-LIST): (:LISPM-NAME "weld" :PERSONAL-NAME "Weld" :HOME-HOST #<TOPS20-HOST OZ 74375304> :MAIL-ADDRESS ("weld" #<TOPS20-HOST OZ 74375304>) :LOGIN-NAME (("weld" #<TOPS20-HOST OZ 74375304>)) ...)
   Local 4 (.ME-P.): T
   Local 5 (.CLOSE-MODE.): :ABORT
   Local 6: #<DTP-LOCATIVE 3743672>
   Local 7: SYS:UNWIND-PROTECT-TAG
   Local 8: #<DTP-ODD-PC 46442447>
   Local 9: #<DTP-LOCATIVE 3743700>
   Local 10: #<DTP-LOCATIVE 43440064>
   Local 11 (.CELL.): #<DTP-LOCATIVE 50712241>
   Local 12 (.LOCK-P.): :LOCKED
   Local 13: SYS:UNWIND-PROTECT-TAG
   Local 14: #<DTP-ODD-PC 46442453>
   Local 15: #<DTP-LOCATIVE 3743700>
   Local 16: #<DTP-LOCATIVE 43440133>
   Local 17 (OBJECT): #<USER WELD 57424361>
   Local 18 (STREAM): #<CHARACTER-STREAM 3753275>
   Local 19 (*NAMESPACE-SEARCH-LIST*-initialization): (#<NAMESPACE MIT 74015123>)
   Local 20 (RECORD): (("ERROR" "Update-by not supplied;you must be logged in."))
   Local 21 (*SELECTQ-ITEM*): "ERROR"

(:DEFUN-METHOD TV:PERFORM-COMMAND):  (P.C. = 446)
   Arg 0 (SELF): #<NAMESPACE-EDITOR-FRAME Namespace Editor 1 1040000 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:NAMESPACE-EDITOR-FRAME -- 15. IV's, 12. FL's 76174663>
   Arg 2 (CH): 163

(:METHOD TV:NAMESPACE-EDITOR-FRAME :TOP-LEVEL):  (P.C. = 120)
   Arg 0 (SELF): #<NAMESPACE-EDITOR-FRAME Namespace Editor 1 1040000 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:NAMESPACE-EDITOR-FRAME -- 15. IV's, 12. FL's 76174663>
   Arg 2 (OPERATION): :TOP-LEVEL

TV:START-NAMESPACE-EDITOR:  (P.C. = 4)
   Arg 0 (WINDOW): #<NAMESPACE-EDITOR-FRAME Namespace Editor 1 1040000 exposed>

SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
   --Defaulted args:--
   Arg 0 (IGNORE): NIL
 7-Mar-84 13:38:29-EST,857;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 7 Mar 84 13:37-EST
Received: from SCRC-BIG by SCRC-STONY-BROOK with CHAOS; Wed 7-Mar-84 13:42:46-EST
Date: Wednesday, 7 March 1984, 13:35-EST
From: Gregor J Kiczales <Gregor at SCRC-TENEX>
Subject: :INIT-KEYWORDS
To: klotz at MIT-OZ, bug-lispm at MIT-OZ
In-Reply-To: The message of 1 Mar 84 21:42-EST from Leigh L. Klotz <klotz at MIT-OZ>

    Date: Thursday, 1 March 1984, 21:42-EST
    From: Leigh L. Klotz <klotz at MIT-OZ>

    Is there a way of saying not to do the error checking, or to call some flavor-function
    on unhandled init keywords.  There is a :DEFAULT-MESSAGE-HANDLER option to DEFFLAVOR,
    but no way to allow the same sort of action for init keywords.

Should we have a :DEFAULT-INIT-KEYWORD-HANDLER or should we support
:allow-other-keywords ala common-lisp.
 7-Mar-84 14:34:11-EST,1585;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 7 Mar 84 14:28-EST
Date: Wednesday, 7 March 1984, 13:59-EST
From: Kent M Pitman <kmp at MIT-MC>
Subject: (IF (MEMQ key (SEND cond ':PROCEED-TYPES)) (SEND cond ':PROCEED key))
To: BUG-LISPM at OZ
Cc: KBE-I-FILE at OZ

In Release 4.5, Experimental Knowledge-Based-Editor 292.0,
site configuration 86, Black Magic, on PA Lisp Machine Avatar:

  (SEND cond ':PROCEED 'proceed-type)

should be defined (and documented) to signal an error if the
proceed-type is not in (SEND cond ':PROCEED-TYPES). 

When I have reasonable reason to believe the proceed type will
be available, I should not have to write the check explicitly.
I am tired of writing this idiom all over:

  (IF (MEMQ ':FOO (SEND COND ':PROCEED-TYPES))
      (SEND COND ':PROCEED ':FOO))

It should be adequate for me to write simply:

  (SEND COND ':PROCEED ':FOO)

The case where this comes up is typically in CONDITION-BIND-IF
where if I am not in debug mode, I want to blindly proceed certain
kinds of errors that I signal for debugging purposes. For example:

  (CONDITION-BIND-IF (NOT *DEBUG*)
		     ((MY-CONTINUABLE-ERROR
			#'(LAMBDA (COND)
			    (IF (MEMQ ':CONTINUE
				      (SEND COND ':PROCEED-TYPES))
				(SEND COND ':PROCEED ':CONTINUE)))))
    ...)

where I know that MY-CONTINUABLE-ERROR is always signalled by a 
certain set of functions which always handle the :CONTINUE case.

I'm willing to spare the compute time for the MEMQ check to be 
done; I just don't think I'm the one who should have to write 
the check.
 8-Mar-84 11:02:45-EST,1086;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 8 Mar 84 11:02-EST
Received: from SCRC-HARLEM by SCRC-STONY-BROOK with CHAOS; Thu 8-Mar-84 11:08:19-EST
Date: Thursday, 8 March 1984, 11:01-EST
From: Joseph R Goldstone <joseph at SCRC-QUABBIN>
Subject: color:color-exists-p
To: Daniel Weise <DANIEL at MIT-MC>
Cc: BUG-LISPM at MIT-OZ
In-reply-to: The message of 25 Feb 84 15:45-EST from Daniel Weise <DANIEL at MIT-MC>

    Date: Saturday, 25 February 1984, 15:45-EST
    From: Daniel Weise <DANIEL at MIT-MC>
    In Release 5.0 [Beta Test rev 4], COLOR 5.1, imperial purple, on Lisp Machine Buddy Holly (3600):

    How come this always returns nil?  This machine has a color monitor that works (sort of)
    sitting right here next to the console.  It returns nil even after (make-system 'color).

243.583  242.300.  The 3600 version of this was just a stub
that always returned NIL.  You'll see it as part of 5.0 Real.

As for the "sort of", the monitor undulations may go away soon.
Amtron gave us some ideas that are rumored to help a lot.

-- joseph
 8-Mar-84 14:04:10-EST,2149;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 8 Mar 84 14:03-EST
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK with CHAOS; Thu 8-Mar-84 14:09:04-EST
Date: Thursday, 8 March 1984, 14:01-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: (IF (MEMQ key (SEND cond ':PROCEED-TYPES)) (SEND cond ':PROCEED key))
To: Kent M Pitman <kmp at MIT-MC>
Cc: BUG-LISPM at MIT-OZ, KBE-I-FILE at MIT-OZ
In-reply-to: The message of 7 Mar 84 13:59-EST from Kent M Pitman <kmp at MIT-MC>

    Date: Wednesday, 7 March 1984, 13:59-EST
    From: Kent M Pitman <kmp at MIT-MC>

    In Release 4.5, Experimental Knowledge-Based-Editor 292.0,
    site configuration 86, Black Magic, on PA Lisp Machine Avatar:

      (SEND cond ':PROCEED 'proceed-type)

    should be defined (and documented) to signal an error if the
    proceed-type is not in (SEND cond ':PROCEED-TYPES). 

    When I have reasonable reason to believe the proceed type will
    be available, I should not have to write the check explicitly.
    I am tired of writing this idiom all over:

      (IF (MEMQ ':FOO (SEND COND ':PROCEED-TYPES))
	  (SEND COND ':PROCEED ':FOO))

    It should be adequate for me to write simply:

      (SEND COND ':PROCEED ':FOO)

    The case where this comes up is typically in CONDITION-BIND-IF
    where if I am not in debug mode, I want to blindly proceed certain
    kinds of errors that I signal for debugging purposes. For example:

      (CONDITION-BIND-IF (NOT *DEBUG*)
			 ((MY-CONTINUABLE-ERROR
			    #'(LAMBDA (COND)
				(IF (MEMQ ':CONTINUE
					  (SEND COND ':PROCEED-TYPES))
				    (SEND COND ':PROCEED ':CONTINUE)))))
	...)

    where I know that MY-CONTINUABLE-ERROR is always signalled by a 
    certain set of functions which always handle the :CONTINUE case.

    I'm willing to spare the compute time for the MEMQ check to be 
    done; I just don't think I'm the one who should have to write 
    the check.

Well, do you want it to signal an error if the proceed type is not available
(as you said at the front of your message) or to return NIL (as the code
fragment above does)?
 8-Mar-84 14:32:41-EST,512;000000000000
Received: from MIT-LISPM-7 by MIT-OZ via Chaosnet; 8 Mar 84 14:31-EST
Date: Thursday, 8 March 1984, 14:32-EST
From: Laurel A. Simmons <LAUREL at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In System 98.36, CADR 3.6, ZMail 53.13, MIT-Specific 22.0, microcode 309,
on Lisp Machine Seven:

CALL no longer works.  It just echoes in a Lisp Listener, and complains
of not being defined in Zwei.  There is still documentation for it in
Terminal-help, though.  It should be made to work again -- it was
useful.

-PGS
 8-Mar-84 14:37:22-EST,2706;000000000000
Received: from MIT-LISPM-7 by MIT-OZ via Chaosnet; 8 Mar 84 14:36-EST
Date: Thursday, 8 March 1984, 14:37-EST
From: pgs at MIT-OZ
Sender: LAUREL at MIT-OZ
To: BUG-LISPM at MIT-OZ

In System 98.36, CADR 3.6, ZMail 53.13, MIT-Specific 22.0, microcode 309,
on Lisp Machine Seven:

I did (set-current-microload 'mcr7).  I got the stuff below.  Looks like
it checks for a string, and if it doesn't have one, assumes a number.
It should check for symbols as well.

>>ERROR: No partition named "MCRMCR7" exists on disk unit 0.
Backtrace from the debugger:

Additional information supplied with call:
 Expecting 3 values

SYSTEM:FIND-DISK-PARTITION-FOR-READ (P.C. = 134)

 Arg 0 (NAME): "MCRMCR7"
 Arg 1 (RQB): #<ART-16B-3740 7604416>
 Arg 2 (UNIT): 0
   --Defaulted args:--
 Arg 3 (ALREADY-READ-P): NIL
 Arg 4 (NUMBER-PREFIX): "LOD"
Local 0 (FIRST-BLOCK): NIL
Local 1 (N-BLOCKS): NIL
Local 2 (LABEL-LOC): NIL


SET-CURRENT-BAND (P.C. = 261)

 Arg 0 (BAND): "MCRMCR7"
 Arg 1 (UNIT): 0
 Arg 2 (MICRO-P): T
Local 0 (RQB): #<ART-16B-3740 7604416>
Local 1 (LABEL-INDEX): NIL
Local 2 (DONT-DISPOSE): NIL
Local 3 (UCODE-NAME): "MCR"
Local 4 (MEMORY-SIZE-OF-BAND): NIL
Local 5 (UCODE-VERSION-OF-BAND): NIL
Local 6 (CURRENT-UCODE-VERSION): NIL
Local 7 (MACHINE-MEMORY-SIZE): NIL
Local 8 (BASE-BAND-NAME): NIL
Local 9 (BASE-BAND-VALID): NIL
Local 10 (BAND-UCODE-PARTITION): NIL


SET-CURRENT-MICROLOAD (P.C. = 32)

 Arg 0 (BAND): MCR7
   --Defaulted args:--
 Arg 1 (UNIT): 0


SI:EVAL1 (P.C. = 1324)

 Arg 0 (FORM): (SET-CURRENT-MICROLOAD (QUOTE MCR7))
   --Defaulted args:--
 Arg 1 (NOHOOK): NIL
Local 0 (ARGNUM): 1
Local 1 (TEM): NIL
Local 2 (ENV): NIL
Local 3 (TAIL): NIL
Local 4 (FCTN): #<DTP-FEF-POINTER SET-CURRENT-MICROLOAD 11355534>
Local 5 (ARG-DESC): 400102
Local 6 (NUM-ARGS): 1
Local 7 (CLOSURE-PASSED): NIL
Local 8 (LAMBDA-LIST): NIL
Local 9 (LL): NIL
Local 10 (QUOTE-STATUS): NIL
Local 11 (REST-FLAG): NIL
Local 12 (ARGL): NIL
Local 13: NIL
Local 14: NIL
Local 15 (IGNORE): NIL
Local 16 (ADL): NIL
Local 17 (ITEM): NIL
Local 18 (*SELECTQ-ITEM*): NIL


Additional information supplied with call:
 Values to be collected for MULTIPLE-VALUE-LIST

SI:EVAL-ABORT-TRIVIAL-ERRORS (P.C. = 61)

 Arg 0 (TOP-LEVEL-FORM): (SET-CURRENT-MICROLOAD (QUOTE MCR7))
Local 0: ((SYSTEM:TOO-FEW-ARGUMENTS SYSTEM:TOO-MANY-ARGUMENTS SYSTEM:CELL-CONTENTS-ERROR SYSTEM:WRONG-TYPE-ARGUMENT ...) SI:EVAL-ABORT-TRIVIAL-ERRORS-HANDLER)
Local 1: ((** SI:EVAL-ABORT-TRIVIAL-ERRORS-HANDLER))


Remainder of stack:

SI:LISP-TOP-LEVEL1 (P.C. = 426)
SI:LISP-TOP-LEVEL2 (P.C. = 27)
SI:PROCESS-TOP-LEVEL (P.C. = 246)
SI:LISP-TOP-LEVEL (P.C. = 47)
 8-Mar-84 14:40:30-EST,3119;000000000000
Received: from MIT-LISPM-7 by MIT-OZ via Chaosnet; 8 Mar 84 14:38-EST
Date: Thursday, 8 March 1984, 14:39-EST
From: pgs at MIT-OZ
Sender: LAUREL at MIT-OZ
To: BUG-LISPM at MIT-OZ

In System 98.36, CADR 3.6, ZMail 53.13, MIT-Specific 22.0, microcode 309,
on Lisp Machine Seven:

I did (disk-save 'lod7) and got this cruft.  It really should check for
symbols.

>>ERROR: No partition named "LODL" exists on disk unit 0.
Backtrace from the debugger:

Additional information supplied with call:
 Expecting 2 values

SYSTEM:FIND-DISK-PARTITION-FOR-WRITE (P.C. = 244)

 Arg 0 (NAME): "LODL"
   --Defaulted args:--
 Arg 1 (RQB): NIL
 Arg 2 (UNIT): 0
 Arg 3 (ALREADY-READ-P): NIL
 Arg 4 (NUMBER-PREFIX): "LOD"
Local 0 (CURRENT-BAND): "LOD7"
Local 1 (CURRENT-BAND-BASE-BAND): NIL
Local 2 (CURRENT-RUNNING-BAND): "LOD7"
Local 3 (FIRST-BLOCK): NIL
Local 4 (N-BLOCKS): NIL
Local 5 (LABEL-LOC): NIL


DISK-SAVE (P.C. = 240)

 Arg 0 (PARTITION): LOD7
   --Defaulted args:--
 Arg 1 (NO-QUERY): NIL
 Arg 2 (INCREMENTAL): NIL
Local 0 (L): (46104 47514)
Local 1 (PART-NAME): "LODL"
Local 2 (PART-BASE): NIL
Local 3 (PART-SIZE): NIL
Local 4 (SYSTEM-VERSION): NIL
Local 5 (MAX-ADDR): NIL
Local 6 (INC-PAGES-SAVED): 0
Local 7: NIL
Local 8 (PATCH-SYSTEM): NIL
Local 9 (VERS): NIL
Local 10 (.OLD.OUTPUT.HOLD.): NIL
Local 11 (S): NIL
Local 12 (.OLD.VALUE.): NIL
Local 13: NIL
Local 14 (I): NIL


SI:EVAL1 (P.C. = 1324)

 Arg 0 (FORM): (DISK-SAVE (QUOTE LOD7))
   --Defaulted args:--
 Arg 1 (NOHOOK): NIL
Local 0 (ARGNUM): 1
Local 1 (TEM): NIL
Local 2 (ENV): NIL
Local 3 (TAIL): NIL
Local 4 (FCTN): #<DTP-FEF-POINTER DISK-SAVE 2371573>
Local 5 (ARG-DESC): 103
Local 6 (NUM-ARGS): 1
Local 7 (CLOSURE-PASSED): NIL
Local 8 (LAMBDA-LIST): NIL
Local 9 (LL): NIL
Local 10 (QUOTE-STATUS): NIL
Local 11 (REST-FLAG): NIL
Local 12 (ARGL): NIL
Local 13: NIL
Local 14: NIL
Local 15 (IGNORE): NIL
Local 16 (ADL): NIL
Local 17 (ITEM): NIL
Local 18 (*SELECTQ-ITEM*): NIL


Additional information supplied with call:
 Values to be collected for MULTIPLE-VALUE-LIST

SI:EVAL-ABORT-TRIVIAL-ERRORS (P.C. = 61)

 Arg 0 (TOP-LEVEL-FORM): (DISK-SAVE (QUOTE LOD7))
Local 0: ((SYSTEM:TOO-FEW-ARGUMENTS SYSTEM:TOO-MANY-ARGUMENTS SYSTEM:CELL-CONTENTS-ERROR SYSTEM:WRONG-TYPE-ARGUMENT ...) SI:EVAL-ABORT-TRIVIAL-ERRORS-HANDLER)
Local 1: ((** SI:EVAL-ABORT-TRIVIAL-ERRORS-HANDLER))


SI:LISP-TOP-LEVEL1 (P.C. = 426)

 Arg 0 (TERMINAL-IO): #<LISP-LISTENER Lisp Listener 1 4640000 exposed>
   --Defaulted args:--
 Arg 1 (TOP-LEVEL-P): T
Local 0 (OLD-PACKAGE): #<Package USER 5000020>
Local 1 (W-PKG): #<Package USER 5000020>
Local 2 (LAST-TIME-DEFAULT-COMMON-LISP): NIL
Local 3 (THROW-FLAG): T
Local 4: ("Return to top level in ~A." "Lisp Listener 1")
Local 5: ((SYSTEM:ABORT ERROR) ("Return to top level in ~A." "Lisp Listener 1") T ("Return to top level in ~A." "Lisp Listener 1") ...)
Local 6 (VALUES): NIL
Local 7: NIL
Local 8 (VALUE): T


Remainder of stack:

SI:LISP-TOP-LEVEL2 (P.C. = 27)
SI:PROCESS-TOP-LEVEL (P.C. = 246)
SI:LISP-TOP-LEVEL (P.C. = 47)
 8-Mar-84 15:45:25-EST,4466;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 8 Mar 84 15:40-EST
Date: 8 March 1984 15:39-EST
From: Kent M Pitman <KMP @ MIT-MC>
Subject:  (SEND cond ':PROCEED key) for unhandled keys should signal non-fatal condition
To: Moon @ SCRC-TENEX
cc: KMP @ MIT-MC, BUG-LISPM @ MIT-OZ, KBE-I-FILE @ MIT-OZ
References:
  Msg of Wed 7 Mar 84 13:59-EST from Kent M Pitman <kmp @ MIT-MC>,
  Msg of Thu 8 Mar 84 14:01-EST from David A. Moon <Moon @ SCRC-TENEX>

    Date: Thu, 8 Mar 84 14:01 EST
    From: David A. Moon <Moon%SCRC-TENEX at MIT-MC.ARPA>

        Date: Wednesday, 7 March 1984, 13:59-EST
        From: Kent M Pitman <kmp at MIT-MC>

        In Release 4.5, Experimental Knowledge-Based-Editor 292.0,
        site configuration 86, Black Magic, on PA Lisp Machine Avatar:

          (SEND cond ':PROCEED 'proceed-type)

        should be defined (and documented) to signal an error if the
        proceed-type is not in (SEND cond ':PROCEED-TYPES)...
        I am tired of writing this idiom all over:

          (IF (MEMQ ':FOO (SEND COND ':PROCEED-TYPES))
	      (SEND COND ':PROCEED ':FOO))

        It should be adequate for me to write simply:

          (SEND COND ':PROCEED ':FOO)

    Well, do you want it to signal an error if the proceed type is not 
    available (as you said at the front of your message) or to return 
    NIL (as the code fragment above does)?

Oops. Funny I didn't notice that ambiguity when I sent it. In fact, my 
system used to do (IF (MEMQ ...) (SEND ...)) and I changed it to err
when you used an invalid proceed type.

I am not sure it matters heavily; I only care that it will not do something 
random like return a value that is not expected.

I guess there's a funny question about whether you think the purpose of
an error system is to "identify" errors (as for debugging) or to "gloss
over" errors (as for released systems). I think the current error system
blurs this distinction, but I cannot suggest how it could go about not
doing so.

The case of interest is when some error handler "mis-handles" the proceed
stuff. Do you want to pick him out as bad code or do you want to give 
other condition handlers a chance to clean up the mess he has made?

One could make the claim that

  (CONDITION-BIND ((FOO #'(LAMBDA (C) (SEND C ':PROCEED ':BAR))))
    (CONDITION-BIND ((FOO #'(LAMBDA (C) (SEND C ':PROCEED ':FOO))))
      ... (SIGNAL 'FOO ':PROCEED-TYPES '(:BAR)) ...))

has a "right" to win (eg, for a released system) but has the "obligation"
to lose (eg, for debugging).

Presumably the right thing is to have a non-fatal condition signalled 
upon failure to handle a proceed case, as in:

(COND ((MEMQ KEY (SEND OBJ ':PROCEED-TYPES))
       (SEND OBJ ':PROCEED KEY))
      (T
       (SIGNAL-PROCEED-CASE ((VALS) 'PROCEED-CASE-NOT-HANDLED ':CASE KEY)
	 (:HANDLE (VALUES-LIST VALS))
	 (NIL NIL))))

The interesting question is whether "not handled" should be an error or
not.  It could just be a vanilla condition.  My inclination is that making
it not be an error condition will be maximally useful to people. That way,
people who want to do the work of trapping it can do so, but most people
will tend to silently win without knowing why because it will appear as if
you opted explicitly to not handle the originally-signalled condition...

By the way, I was surprised when I made this be an error in the 
KBE how many places surfaced where I didn't realize I had been assuming 
the :PROCEED-TYPES info was set up.

I was also surprised at how many times I call SIGNAL without initializing
:PROCEED-TYPES. I actually suspect that the DBG:PROCEED-TYPES instance 
variable should default to NIL rather than UNBOUND if not specified.

So the answer is that I'll buy either a guaranteed error or treating
the thing as not handled as through the SIGNAL-PROCEED-CASE above, with
slight intuitional preference for the latter.

The main point of my first note was to say I don't like it doing something 
random. As long as the behavior is well-defined I will feel much better.
Thanks for catching me on the obvious holes in that request.
-kmp

ps As a side note, another possibly-silly reason for making the condition
   not be an error is that there are virtually no primitive non-error
   conditions, and I'd just as soon see a couple of non-error conditions
   batting around so people would get used to using them...

 8-Mar-84 19:17:49-EST,898;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 8 Mar 84 19:13-EST
Date: Thursday, 8 March 1984, 19:09-EST
From: Scott Cyphers <sr.ehpyc at MIT-SPEECH>
Subject: Random ancient disk-save bug
To: BUG-lispm at MIT-OZ

In System 242.269, Experimental MIT 1.2, Spire-Macros 1.1, Compute 1.1,
Attribute 1.0, Audio 1.0, Speech-Attributes 1.0, Display 1.0,
Speech-Layouts 1.0, Versatec 1.0, Spire 13.0, SpireX 10.0,
Imperial SpireX, on Lisp Machine Yogi (LM-2):

I think the following has been happening for ages.  Receive/transmit-band
seem to know what the proper size is, but disk-save doesn't seem to save
it in the format that describe-partition can interpret.  Compress does.

(si:describe-partition "lod2")
  LOD2 at block 130815, 36000 blocks long, "New Spire"
    Invalid size designator 30540000000
    System Version 242
    Desired Microcode 998
    GC Generation 6
NIL
 8-Mar-84 21:58:30-EST,1400;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 8 Mar 84 21:54-EST
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK with CHAOS; Thu 8-Mar-84 22:00:46-EST
Date: Thursday, 8 March 1984, 21:53-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: Random ancient disk-save bug
To: Scott Cyphers <sr.ehpyc at MIT-SPEECH>
Cc: BUG-lispm at MIT-OZ
In-reply-to: The message of 8 Mar 84 19:09-EST from Scott Cyphers <sr.ehpyc at MIT-SPEECH>

    Date: Thursday, 8 March 1984, 19:09-EST
    From: Scott Cyphers <sr.ehpyc at MIT-SPEECH>

    In System 242.269, Experimental MIT 1.2, Spire-Macros 1.1, Compute 1.1,
    Attribute 1.0, Audio 1.0, Speech-Attributes 1.0, Display 1.0,
    Speech-Layouts 1.0, Versatec 1.0, Spire 13.0, SpireX 10.0,
    Imperial SpireX, on Lisp Machine Yogi (LM-2):

    I think the following has been happening for ages.  Receive/transmit-band
    seem to know what the proper size is, but disk-save doesn't seem to save
    it in the format that describe-partition can interpret.  Compress does.

    (si:describe-partition "lod2")
      LOD2 at block 130815, 36000 blocks long, "New Spire"
	Invalid size designator 30540000000
	System Version 242
	Desired Microcode 998
	GC Generation 6

It overflowed into a negative fixnum (your band is more than half the size
of the full address space).  I think this bug is just in si:describe-partition.
 9-Mar-84 06:38:11-EST,1064;000000000000
Received: from MIT-LISPM-1 by MIT-OZ via Chaosnet; 9 Mar 84 06:36-EST
Date: Friday, 9 March 1984, 06:37-EST
From: Richard Mlynarik <Mly at MIT-OZ>
Subject: call
To: pgs at MIT-OZ
CC: BUG-LISPM at MIT-OZ
In-reply-to: The message of 8 Mar 1984 14:32-EST from Laurel A. Simmons <LAUREL at MIT-OZ>
Message-ID: <[MIT-LISPM-1].9-Mar-84 06:37:44.Mly>

    Date: Thursday, 8 March 1984, 14:32-EST
    From: Laurel A. Simmons <LAUREL at MIT-OZ>

    In System 98.36, CADR 3.6, ZMail 53.13, MIT-Specific 22.0, microcode 309,
    on Lisp Machine Seven:

    CALL no longer works.  It just echoes in a Lisp Listener, and complains
    of not being defined in Zwei.  There is still documentation for it in
    Terminal-help, though.  It should be made to work again -- it was
    useful.

    -PGS
Is this really necessary??
terminal-a system-l will do much the same thing, on the rare
occasion when you need to do this.
The two-key sequence terminal-a isn't really that much slower
than just hitting call if you need to arrest a process in a
hurry.
 9-Mar-84 12:36:59-EST,1464;000000000000
Mail-From: PGS created at  9-Mar-84 12:30:28
Date: Fri, 9 Mar 1984  12:30 EST
Message-ID: <PGS.11997997819.BABYL@MIT-OZ>
From: PGS@MIT-OZ
To:   Richard Mlynarik <Mly@MIT-OZ>
Cc:   BUG-LISPM@MIT-OZ
Subject: call
In-reply-to: Msg of 9 Mar 1984 06:37-EST from Richard Mlynarik <Mly>

    Date: Friday, 9 March 1984, 06:37-EST
    From: Richard Mlynarik <Mly>
    To:   pgs
    cc:   BUG-LISPM
    Re:   call

    ...Is this really necessary??
    terminal-a system-l will do much the same thing, on the rare
    occasion when you need to do this.
    The two-key sequence terminal-a isn't really that much slower
    than just hitting call if you need to arrest a process in a
    hurry.

Actually, I never use CALL myself.  The only reason I looked for it was
because I was teaching two novices about the Lisp machine on two consecutive
days, and I told one that he could use CALL to get a Lisp if he had
hopelessly screwed himself, and told the same thing to the next one, who
actually tried to use it and didn't find it.  Worse yet, it was still
documented in Terminal-Help.

It is a plenty useful key for novices, who can't be expected to remember
two sequences (one of which does something they don't understand) in order to
get out of a wedged situation.  If you decide to no longer support it, you
should definitely take it out of the documentation, and you should first have
asked users if they felt that it was unnecessary.
 9-Mar-84 17:10:48-EST,2262;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 9 Mar 84 17:09-EST
Date: Friday, 9 March 1984, 17:08-EST
From: Tim McNerney <TIM at MIT-MC>
To: BUG-LISPM at MIT-OZ

In System 98.36, CADR 3.6, ZMail 53.13, MIT-Specific 22.0, microcode 306,
on Lisp Machine Thirty:


Tag Search of def<any> syntax-table<return>


>>TRAP 4230. (SUBSCRIPT-OOB M-Q M-S (NIL XAREF-RECHECK-INDEX) M-A)
The subscript 8. for #<ART-Q-8. 14632704> was out of range in AR-1.
Backtrace from the debugger:

ZWEI:BUILD-FSM-CHARACTER-SET (P.C. = 344)

 Arg 0 (STRING-LIST): ("def syntax-table")
 Arg 1 (CASE-DEPENDENT-P): NIL
Local 0 (MAXCHAR): 14.
Local 1: NIL
Local 2 (STRING): "def syntax-table"
Local 3 (I): 17.
Local 4 (LEN): 17.
Local 5 (CH): 112.
Local 6 (SET-ALIST): ((65535. . 14.))
Local 7 (MASK): 65535.
Local 8 (ENTRY): (65535. . 14.)
Local 9 (SET): 8.
Local 10 (BIT): 513.


ZWEI:BUILD-FSM (P.C. = 47)

 Arg 0 (STRING-LIST): ("def syntax-table")
   --Defaulted args:--
 Arg 1 (CASE-DEPENDENT-P): NIL
Local 0 (NCHARN): NIL
Local 1 (NSTATES): NIL


ZWEI:FSM-SEARCH (P.C. = 134)

 Arg 0 (BP): ("; -*- Mode:LISP; Package:STEVE; Readtable:CL; Base:10 -*-" 0. :NORMAL)
 Arg 1 (STRINGS): ("def syntax-table")
   --Defaulted args:--
 Arg 2 (REVERSE-P): NIL
 Arg 3 (FIXUP-P): NIL
 Arg 4 (IGNORE): NIL
 Arg 5 (LIMIT-BP): ("" 0. :MOVES)
 Arg 6 (STATE): 0.
Local 0 (WORD): NIL
Local 1 (*FROM-BP*): NIL
Local 2 (*TO-BP*): NIL
Local 3 (LINE): NIL
Local 4 (*FIRST-INDEX*): NIL
Local 5 (*LAST-LINE*): NIL
Local 6 (*THIS-IS-THE-LAST-LINE*): NIL
Local 7 (INDEX): NIL
Local 8 (*LAST-INDEX*): NIL


ZWEI:TAGS-SEARCH-NEXT-OCCURRENCE (P.C. = 66)

 Arg 0 (RESTART): T
Local 0 (BP): NIL
Local 1 (PT): ("; -*- Mode:LISP; Package:STEVE; Readtable:CL; Base:10 -*-" 0. :NORMAL)


ZWEI:COM-TAGS-SEARCH (P.C. = 114)



Remainder of stack:

ZWEI:COMMAND-EXECUTE (P.C. = 115)
ZWEI:PROCESS-COMMAND-CHAR (P.C. = 65)
(:METHOD ZWEI:WINDOW :EDIT) (P.C. = 464)
(:INTERNAL (:METHOD ZWEI:ZMACS-WINDOW :COMBINED :EDIT) 0.) (P.C. = 74)
FUNCALL (P.C. = 25)
(:METHOD ZWEI:DISPLAYER :AROUND :EDIT) (P.C. = 31)
(:METHOD ZWEI:ZMACS-WINDOW :COMBINED :EDIT) (P.C. = 47)
ZWEI:ZMACS-WINDOW-TOP-LEVEL (P.C. = 46)
SI:PROCESS-TOP-LEVEL (P.C. = 152)
 9-Mar-84 17:39:03-EST,1113;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 9 Mar 84 17:38-EST
Date: 9 Mar 1984  17:40 EST (Fri)
Message-ID: <SR.EHPYC.11998054230.BABYL@MIT-SPEECH>
From: Scott Cyphers <SR.EHPYC@MIT-SPEECH>
Subject: LMFS overhead
To:   bug-lispm@MIT-OZ

I noticed that opening a 3600 LMFS file in a large directory
(approximately 1500 files) took several seconds, most of it being
disk-waits.  As the files were small, about 4 or 5 blocks, it took far
longer to open the file than to read its contents.  Looking at the
code, it appears that files are found by linearly looking through a
list of all the files in a particular directory (though finding the
directory appears to be cached) which would explain the behavior I
saw.  Does anyone know what good sizes for directories are (or ratios
of file size to directory size) that reduce the overhead per data of
opening files?  Are there any plans for trying to reduce the overhead
of accessing files in the near future?  For now I have just broken my
directory into 20 subdirectories, but there are many more of these
kinds of directories in the works.
 9-Mar-84 18:30:38-EST,2222;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 9 Mar 84 18:29-EST
Received: from SCRC-CONCORD by SCRC-STONY-BROOK with CHAOS; Fri 9-Mar-84 18:36:16-EST
Date: Friday, 9 March 1984, 18:27-EST
From: Bernard S. Greenberg <BSG at SCRC-TENEX>
Subject: LMFS overhead
To: SR.EHPYC at MIT-SPEECH, bug-lispm at MIT-OZ
In-reply-to: <SR.EHPYC.11998054230.BABYL@MIT-SPEECH>

    Date: 9 Mar 1984  17:40 EST (Fri)
    From: Scott Cyphers <SR.EHPYC@MIT-SPEECH>

    I noticed that opening a 3600 LMFS file in a large directory
    (approximately 1500 files) took several seconds, most of it being
    disk-waits.  
Yup.
		 As the files were small, about 4 or 5 blocks, it took far
    longer to open the file than to read its contents.  Looking at the
    code, it appears that files are found by linearly looking through a
    list 
Worse than a list.  A large set of disk records.  Once a directory
becomes larger than the buffer pool, continuous disk I/O occurs.
	 of all the files in a particular directory (though finding the
    directory appears to be cached) which would explain the behavior I
    saw.  Does anyone know what good sizes for directories are (or ratios
    of file size to directory size) 
Nope.   Large directories have this problem.
				    that reduce the overhead per data of
    opening files?  Are there any plans for trying to reduce the overhead
    of accessing files in the near future?  
Yes.  We intend to experiment with in-core hash-cacheing schemes in
the timeframe of the next release (this is NOT a commitment).
The current structure of directories on disk is still thought to be
right, for reasons of reliability.   The interesting issues are
how much virtual memory to spend on encaching directories, how to
multiplex this virtual memory, etc.  

We acknowledge a total performance deficiency in large directories, and
intend to do something about it.  It was a deliberate design tradeoff
for directory format robustness, but can be addressed as outlined above.
					    For now I have just broken my
    directory into 20 subdirectories, but there are many more of these
    kinds of directories in the works.
All I can say is hold your hat.
 9-Mar-84 19:12:26-EST,4648;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 9 Mar 84 19:12-EST
Date: Friday, 9 March 1984, 18:51-EST
From: Tim McNerney <TIM at MIT-MC>
To: BUG-LISPM at MIT-OZ

In System 98.36, CADR 3.6, ZMail 53.13, MIT-Specific 22.0, microcode 306,
on Lisp Machine Thirty:


To a buffer with an associated file of VULCAN:NIL$DISK:[NIL.STEVE]AUX.LSP
I did a c-X c-W OBI:<return>
To which it replied:

   >>ERROR: directory not found for OBI:USRD$:[NIL.STEVE]AUX.LSP

Why didn't it preserve the NIL$DISK: part of the pathname???
"Defaulting" to USRD$: is the WRONG THING!!!


Backtrace from the debugger:

FS:OPEN-CHAOS (P.C. = 1521)

 Arg 0 (HOST): #FS:VMS-CHAOS-HOST "MIT-OBERON"
 Arg 1 (PATHNAME): #FS:VMS-PATHNAME "OBI:USRD$:[NIL.STEVE]AUX.LSP"
 Rest arg (OPTIONS): (:DIRECTION :OUTPUT)
Local 1 (DIRECTION): :OUTPUT
Local 2 (CHARACTERS): T
Local 3 (ERROR): T
Local 4 (ACCESS-ERROR): NIL
Local 5 (ELEMENT-TYPE): STRING-CHAR
Local 6 (IF-EXISTS): :NEW-VERSION
Local 7 (IF-DOES-NOT-EXIST): :CREATE
Local 8 (TEMPORARY): NIL
Local 9 (DELETED): NIL
Local 10 (RAW): NIL
Local 11 (SUPER-IMAGE): NIL
Local 12 (BYTE-SIZE): :DEFAULT
Local 13 (PRESERVE-DATES): NIL
Local 14 (INHIBIT-LINKS): NIL
Local 15 (ELEMENT-TYPE-P): NIL
Local 16 (HOST-UNIT): #<HOST-UNIT 14711214>
Local 17 (DATA-CONN): (#<CHAOS Connection 12746342> "I2226" "O2227" 7018638. ...)
Local 18 (PKT): #<CHAOS packet. PKT-STRING "T2309  OPEN 03//09//84 17:01:05 718 NIL T /".MAIL./"
MC: TIM; TIM MAIL
" PKT-STATUS NIL 12760045>
Local 19 (SUCCESS): NIL
Local 20 (STRING): "O2227 ERROR DNF C directory not found"
Local 21 (NOT-ABORTED): T
Local 22 (PHONY-CHARACTERS): NIL
Local 23 (SIGN-EXTEND-BYTES): NIL
Local 24 (IF-EXISTS-P): NIL
Local 25 (*SELECTQ-ITEM*): :NEWEST
Local 26 (ERROR-OBJECT): (#<CHAOS Connection 12746342> "I2226" "O2227" 7018638. ...)
Local 27: ((FS:FILE-NOT-FOUND SI:CONDITION-CASE-THROW USER:G2542) (** SI:FILE-RETRY-HANDLER #FS:VMS-PATHNAME "OBI:USRD$:[NIL.STEVE]AUX.LSP"))
Local 28: (FS:FILE-NOT-FOUND SI:CONDITION-CASE-THROW USER:G2542)
Local 29: (FS:FILE-ALREADY-EXISTS SI:CONDITION-CASE-THROW USER:G2549)
Local 30: ((FS:FILE-ALREADY-EXISTS SI:CONDITION-CASE-THROW USER:G2549) (** SI:FILE-RETRY-HANDLER #FS:VMS-PATHNAME "OBI:USRD$:[NIL.STEVE]AUX.LSP"))
Local 31 (PROPERTIES): NIL
Local 32 (CLOSE-SUCCESS): NIL
Local 33 (ERROR-OBJECT): NIL
Local 34 (IGNORE): NIL


(:METHOD FS:CHAOS-PATHNAME :OPEN) (P.C. = 31)
  (SELF is #FS:VMS-PATHNAME "OBI:USRD$:[NIL.STEVE]AUX.LSP")

 Arg 0 (OPERATION): :OPEN
 Arg 1 (PATHNAME): #FS:VMS-PATHNAME "OBI:USRD$:[NIL.STEVE]AUX.LSP"
 Rest arg (OPTIONS): (:DIRECTION :OUTPUT)


OPEN (P.C. = 212)

 Arg 0 (FILENAME): #FS:VMS-PATHNAME "OBI:USRD$:[NIL.STEVE]AUX.LSP"
 Rest arg (KEYWORD-ARGS): (:DIRECTION :OUTPUT)
Local 1: ((FS:FILE-ERROR) SI:FILE-RETRY-HANDLER #FS:VMS-PATHNAME "OBI:USRD$:[NIL.STEVE]AUX.LSP")
Local 2: ((** SI:FILE-RETRY-HANDLER #FS:VMS-PATHNAME "OBI:USRD$:[NIL.STEVE]AUX.LSP") (** SI:FILE-RETRY-HANDLER #FS:VMS-PATHNAME "OBI:USRD$:[NIL.STEVE]AUX.LSP"))
Local 3 (NEW-PATHNAME): NIL
Local 4 (KEYL): NIL
Local 5 (KEY): NIL
Local 6 (CHARACTERS): NIL
Local 7 (DIRECTION): NIL
Local 8 (BYTE-SIZE): NIL
Local 9 (ERROR-P): NIL
Local 10 (ERROR-P-SPECD): NIL
Local 11 (DELETED-P): NIL
Local 12 (TEMPORARY-P): NIL
Local 13 (RAW-P): NIL
Local 14 (SUPER-IMAGE-P): NIL


ZWEI:WRITE-FILE-INTERNAL (P.C. = 222)

 Arg 0 (PATHNAME): #FS:VMS-PATHNAME "OBI:USRD$:[NIL.STEVE]AUX.LSP"
 Arg 1 (BUFFER): #<ZMACS-BUFFER "AUX.LSP NIL$DISK:[NIL.STEVE] VULCAN:" 35725612>
Local 0 (PLIST): (:MODE :LISP :PACKAGE :STEVE ...)
Local 1: NIL
Local 2 (.FILE-ABORTED-FLAG.): :ABORT
Local 3: ((FS:FILE-ERROR) SI:FILE-RETRY-HANDLER #FS:VMS-PATHNAME "OBI:USRD$:[NIL.STEVE]AUX.LSP")
Local 4: ((** SI:FILE-RETRY-HANDLER #FS:VMS-PATHNAME "OBI:USRD$:[NIL.STEVE]AUX.LSP"))
Local 5 (NEW-PATHNAME): NIL
Local 6 (STREAM): NIL


ZWEI:WRITE-BUFFER (P.C. = 62)

 Arg 0 (BUFFER): #<ZMACS-BUFFER "AUX.LSP NIL$DISK:[NIL.STEVE] VULCAN:" 35725612>
Local 0 (PATHNAME): #FS:VMS-PATHNAME "OBI:USRD$:[NIL.STEVE]AUX.LSP"


Remainder of stack:

ZWEI:COM-WRITE-FILE (P.C. = 32)
ZWEI:COMMAND-EXECUTE (P.C. = 115)
ZWEI:MAKE-EXTENDED-COMMAND-INTERNAL (P.C. = 72)
ZWEI:COMMAND-EXECUTE (P.C. = 115)
ZWEI:PROCESS-COMMAND-CHAR (P.C. = 65)
(:METHOD ZWEI:WINDOW :EDIT) (P.C. = 464)
(:INTERNAL (:METHOD ZWEI:ZMACS-WINDOW :COMBINED :EDIT) 0.) (P.C. = 74)
FUNCALL (P.C. = 25)
(:METHOD ZWEI:DISPLAYER :AROUND :EDIT) (P.C. = 31)
(:METHOD ZWEI:ZMACS-WINDOW :COMBINED :EDIT) (P.C. = 47)
ZWEI:ZMACS-WINDOW-TOP-LEVEL (P.C. = 46)
SI:PROCESS-TOP-LEVEL (P.C. = 152)
 9-Mar-84 22:23:52-EST,384;000000000000
Received: from MIT-AVATAR by MIT-OZ via Chaosnet; 9 Mar 84 22:23-EST
Date: Friday, 9 March 1984, 22:23-EST
From: Apprentice for KMP <kbe at MIT-OZ>
Subject: ZWEI:EXTENDED-COMMAND-P
To: BUG-LISPM at MIT-OZ

In Release 4.5 on Avatar (CADR)...

ZWEI:EXTENDED-COMMAND-P should take an optional comtab argument
(default *COMTAB*) rather than having *COMTAB* wired into its guts.
 9-Mar-84 23:33:02-EST,811;000000000000
Received: from MIT-AVATAR by MIT-OZ via Chaosnet; 9 Mar 84 23:32-EST
Date: Friday, 9 March 1984, 23:32-EST
From: Apprentice for KMP <kbe at MIT-OZ>
Subject: Glag! m-X Set Key...m-X 
To: BUG-LISPM at MIT-OZ

In Release 4.5, Experimental Knowledge-Based-Editor 294.0,
site configuration 61, Vanilla, on PA Lisp Machine Avatar:

m-X Set Key should query for confirmation before setting 
the given command on m-X. It is *very* painful working in
an environment where m-X has been redefined to soemthing
silly. My reflex to type m-X is very high, and it's easy to
make a mistake. 

I had actually wanted to move something from the c-m-X comtab
to the m-X comtab, which it would be consistent for m-X Set Key
to do, since (for example) Help C allows one to type m-X and 
then a m-X command name.
10-Mar-84 14:31:25-EST,1043;000000000000
Received: from MIT-EECS by MIT-OZ via Chaosnet; 10 Mar 84 14:30-EST
Date: Saturday, 10 March 1984, 14:05-EST
From: Jeffrey N Eisen <JNE at MIT-OZ>
Subject: tv:choose-variable-values
To: BUG-LISPM at MIT-OZ

In System 242.269, Experimental Schema 18.2, imperial purple, on Lisp Machine Joe Louis (3600):

Why is that when one uses an associated function with
tv:choose-variable-values the value of the variable is already modified
by the time the associated function is called.  Normally this would cause
no problems, but it makes it a pain in the ass when the variable is not really
intended to be changed to 47, for example, but rather is to be modified so that
its foo instance variable is now supposed to be (bar 47). 

(The problem really arises in my case where I'm trying to propagate constraints and
the 47 is really a cell with value 47, not just the number 47.

I have solved the problem for my case with a whole bunch of locfs and other ugliness, but
I don't think this should really be necessary.

-Jeff Eisen
10-Mar-84 23:16:42-EST,1200;000000000000
Received: from MIT-LISPM-1 by MIT-OZ via Chaosnet; 10 Mar 84 23:16-EST
Date: Saturday, 10 March 1984, 23:18-EST
From: Robert L. Krawitz <ZZZ.RLK at MIT-OZ>
To: BUG-LISPM at MIT-OZ
CC: rlk at MIT-OZ
Message-ID: <[MIT-LISPM-1].3/10/84 23:18:12.ZZZ.RLK>

In System 98.34, CADR 3.6, ZMail 53.10, MIT-Specific 22.0, microcode 306,
on Lisp Machine One:

This one's not as detailed as my previous bug report, but...

This happens in dired in zwei and in zmail in the profile option.  I
tried in zmail to change the default-cc list, by mousing it (after
mousing and selecting the profile option in the main menu).  After
mousing and selecting (per instructions) the default-cc-list option, I
typed zzz.rlk (my choice) and return.  The system did not exit and
accept my choice.  Other tries: <end> key, C-Z, C-M-Z and various and
sundry other trivial choices.

Similar things happened when I tried to change the file attributes of
file <zzz.rlk.bitnet>bitnet.babyl using dired (all operations with the
mouse).  It would not accept the input of 777777 after <cr>.

RPK, who was also present, tried and confirmed the bug (on the same
machine, trying the same operation).

				Robert
10-Mar-84 23:36:19-EST,4283;000000000000
Received: from MIT-LISPM-1 by MIT-OZ via Chaosnet; 10 Mar 84 23:35-EST
Date: Saturday, 10 March 1984, 23:37-EST
From: Robert L. Krawitz <ZZZ.RLK at MIT-OZ>
To: BUG-LISPM at MIT-OZ
CC: rlk at MIT-OZ

In System 98.34, CADR 3.6, ZMail 53.10, MIT-Specific 22.0, microcode 306,
on Lisp Machine One:


Insert your description of the circumstances here:

Moused mail files in profile option of zmail.
I don't remember everything that I did.  I'll try.

I managed to select it earlier without problem.  I added a file, clicked
over a file that I wished to deselect (which then turned off the inverse
over that file, <zzz.rlk>bitnet.babyl; the file I added was
<zzz.rlk.bitnet>bitnet.babyl).  I then saved the changes, did a little
more randomizing (I forget; it was quite a bit including the source for
the other bug reports I sent) and tried to re-enter the profiler and
moused mail files, clicking right.  I moused other mail files, clicked
and got an error.  I aborted, moused mail files again, and clicked left
(mail files menu option) and got another error.  At this point I c-m'ed
and sent this.

>>ERROR: Keyword arg keyword :KEY unrecognized.
Backtrace from the debugger:

CLI:RASSOC (P.C. = 43)

 Arg 0 (ITEM): #FS:TOPS20-PATHNAME "OZ:PS:<ZZZ.RLK.BITNET>BITNET.BABYL."
 Arg 1 (LIST): (("BITNET.BABYL PS:<ZZZ.RLK.BITNET> OZ:" . #<BABYL-MAIL-FILE-BUFFER "BITNET.BABYL PS:<ZZZ.RLK.BITNET> OZ:" 35454776>) (#FS:UNIX-PATHNAME "CCC: mbox //usr//rlk//" . #FS:UNIX-PATHNAME "CCC: mbox //usr//rlk//"))
 Rest arg: (:KEY BUFFER-PATHNAME)
Local 1 (TEST): NIL
Local 2 (TEST-NOT): NIL
Local 3 (TAIL): NIL


EDIT-PROFILE-REMEMBERED-MAIL-FILES (P.C. = 107)

 Arg 0 (NEAR-MODE): (:WINDOW #<BUTTON-PANE Mail files 4664270 exposed>)
Local 0 (ZMAIL-BUFFER-ALIST): (("BITNET.BABYL PS:<ZZZ.RLK.BITNET> OZ:" . #<BABYL-MAIL-FILE-BUFFER "BITNET.BABYL PS:<ZZZ.RLK.BITNET> OZ:" 35454776>) (#FS:UNIX-PATHNAME "CCC: mbox //usr//rlk//" . #FS:UNIX-PATHNAME "CCC: mbox //usr//rlk//"))
Local 1 (ACTIVE-LIST): (#FS:UNIX-PATHNAME "CCC: mbox //usr//rlk//")
Local 2 (TEM): NIL
Local 3: (#FS:TOPS20-PATHNAME "OZ:PS:<ZZZ.RLK.BITNET>BITNET.BABYL.")
Local 4 (FILE-NAME): #FS:TOPS20-PATHNAME "OZ:PS:<ZZZ.RLK.BITNET>BITNET.BABYL."
Local 5 (X): NIL
Local 6: NIL
Local 7: NIL


PROFILE-MAIL-FILES-BUTTON (P.C. = 73)

 Arg 0 (NEAR-MODE): (:WINDOW #<BUTTON-PANE Mail files 4664270 exposed>)
Local 0 (MODE): :PROFILE-REMEMBERED-MAIL-FILES


(:SELECT-METHOD ZMAIL-PROFILE-COMMAND-LIST :MOUSE-BUTTON) (P.C. = 343)

 Arg 0 (IGNORE): :MOUSE-BUTTON
 Arg 1 (CH): 4000002
 Arg 2 (WINDOW): #<BUTTON-PANE Mail files 4664270 exposed>
 Arg 3 (IGNORE): 54
 Arg 4 (IGNORE): 5
Local 0 (WINDOW-NAME): MAIL-FILES-BUTTON
Local 1 (NEAR-MODE): (:WINDOW #<BUTTON-PANE Mail files 4664270 exposed>)
Local 2 (ALIST): NIL
Local 3 (ZMAIL-BUFFER): NIL
Local 4: NIL
Local 5 (.FILE-ABORTED-FLAG.): NIL
Local 6 (SRC-FILE): NIL
Local 7 (.WINDOW.): NIL
Local 8 (.FOR-WINDOW.): NIL
Local 9 (.OSTATUS.): NIL
Local 10 (.OSUBST.): NIL
Local 11 (.QUEUE-LEFT.): NIL
Local 12 (E): NIL


(:METHOD ZMAIL-PROFILE-FRAME :PROCESS-SPECIAL-COMMAND) (P.C. = 25)
  (SELF is #<ZMAIL-PROFILE-FRAME Zmail Profile Frame 1 4652324 exposed>)

 Arg 0 (OPERATION): :PROCESS-SPECIAL-COMMAND
 Rest arg (ARGS): (:MOUSE-BUTTON 4000002 #<BUTTON-PANE Mail files 4664270 exposed> 54 ...)


Remainder of stack:

(:METHOD ZMAIL-COMMAND-LOOP-MIXIN :COMMAND-LOOP) (P.C. = 252)
(:INTERNAL (:METHOD ZMAIL-UTILITY-FRAME :COMBINED :COMMAND-LOOP) 0) (P.C. = 44)
FUNCALL (P.C. = 25)
(:METHOD ZMAIL-COMMAND-LOOP-MIXIN :AROUND :COMMAND-LOOP) (P.C. = 57)
(:METHOD ZMAIL-UTILITY-FRAME :COMBINED :COMMAND-LOOP) (P.C. = 43)
COM-ZMAIL-PROFILE (P.C. = 241)
COMMAND-EXECUTE (P.C. = 115)
ZMAIL-COMMAND-EXECUTE (P.C. = 27)
(:SELECT-METHOD ZMAIL-COMMAND-LIST :MENU) (P.C. = 32)
(:METHOD ZMAIL-FRAME :PROCESS-SPECIAL-COMMAND) (P.C. = 25)
(:METHOD ZMAIL-COMMAND-LOOP-MIXIN :COMMAND-LOOP) (P.C. = 252)
(:INTERNAL (:METHOD ZMAIL-FRAME :COMBINED :COMMAND-LOOP) 0) (P.C. = 44)
FUNCALL (P.C. = 25)
(:METHOD ZMAIL-COMMAND-LOOP-MIXIN :AROUND :COMMAND-LOOP) (P.C. = 57)
(:METHOD ZMAIL-FRAME :COMBINED :COMMAND-LOOP) (P.C. = 43)
ZMAIL-PROCESS-TOP-LEVEL (P.C. = 115)
SI:PROCESS-TOP-LEVEL (P.C. = 246)
11-Mar-84 02:40:18-EST,811;000000000000
Received: from MIT-XX by MIT-OZ via Chaosnet; 11 Mar 84 02:39-EST
Date: Sunday, 11 March 1984, 02:37-EST
From: scott a douglass <SAD at MIT-XX>
Subject: supdup/overstike
To: BUG-LISPM at MIT-OZ

In Release 5.0 [Beta Test rev 7], FEP 13, Rel 5.7 Grape MEF, on MEF Live Oak (3600):

While using eddie with supdup I sometimes find that when I have
overstrike turned off (i.e. characters replace each other when typed on
top of each other) that I lose the first character on each line.  It is
as if eddie is sending cr/lf at the end of the line and the lf is
replacing the first character on the line (which is where the cursor is
just after the assumed cr).  This action seems to start after the page
wraps and if I clear the page via the "clear" command it stops for a
while.  thanks,
				-scott
11-Mar-84 17:49:05-EST,2100;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 11 Mar 84 17:48-EST
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK with CHAOS; Sun 11-Mar-84 17:49:08-EST
Date: Sunday, 11 March 1984, 17:47-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: tv:choose-variable-values
To: Jeffrey N Eisen <JNE at MIT-OZ>
Cc: BUG-LISPM at MIT-OZ
In-reply-to: The message of 10 Mar 84 14:05-EST from Jeffrey N Eisen <JNE at MIT-OZ>

    Date: Saturday, 10 March 1984, 14:05-EST
    From: Jeffrey N Eisen <JNE at MIT-OZ>

    In System 242.269, Experimental Schema 18.2, imperial purple, on Lisp Machine Joe Louis (3600):

    Why is that when one uses an associated function with
    tv:choose-variable-values the value of the variable is already modified
    by the time the associated function is called.  Normally this would cause
    no problems, but it makes it a pain in the ass when the variable is not really
    intended to be changed to 47, for example, but rather is to be modified so that
    its foo instance variable is now supposed to be (bar 47). 

    (The problem really arises in my case where I'm trying to propagate constraints and
    the 47 is really a cell with value 47, not just the number 47.

    I have solved the problem for my case with a whole bunch of locfs and other ugliness, but
    I don't think this should really be necessary.

It sounds like choose-variable-values isn't general enough for your application,
a result of its "declarative" rather than "imperative" nature.  One of our long-term
goals is to provide better basic facilities so that it would be easy for you to
implement something that provides a user interface similar to choose-variable-values
but uses your own procedures for accessing the data.  There are ideas for how to
do this, but it can't happen soon.  In the meantime I don't know of any way you can
do better than to create a bunch of dummy variables and code to copy values back
and forth between the dummy variables and the real locations of the values; it sounds
like this is what you are doing already.
12-Mar-84 09:48:57-EST,1217;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 12 Mar 84 09:48-EST
Received: from SCRC-CONCORD by SCRC-STONY-BROOK with CHAOS; Mon 12-Mar-84 09:47:05-EST
Date: Monday, 12 March 1984, 09:45-EST
From: Bernard S. Greenberg <BSG at SCRC-TENEX>
Subject: Glag! m-X Set Key...m-X 
To: kmp at MIT-OZ, BUG-LISPM at MIT-OZ
In-reply-to: The message of 9 Mar 84 23:32-EST from Apprentice for KMP <kbe at MIT-OZ>

    Date: Friday, 9 March 1984, 23:32-EST
    From: Apprentice for KMP <kbe at MIT-OZ>

    In Release 4.5, Experimental Knowledge-Based-Editor 294.0,
    site configuration 61, Vanilla, on PA Lisp Machine Avatar:

    m-X Set Key should query for confirmation before setting 
    the given command on m-X. It is *very* painful working in
    an environment where m-X has been redefined to soemthing
    silly. My reflex to type m-X is very high, and it's easy to
    make a mistake. 
The reflex to type ABORT is even higher.  This creates utter disaster.
It should special-case ABORT somehow, I would not be dissatisfied if
it simply ABORTed.  Right now, the only way out of a M-X Set Key is
c-m-s-hyper-Z, or something else you don't hope to type.  I have been
there many times.
12-Mar-84 17:06:54-EST,3964;000000000000
Received: from MIT-LISPM-1 by MIT-OZ via Chaosnet; 12 Mar 84 16:42-EST
Date: Monday, 12 March 1984, 16:41-EST
From: Robert L. Krawitz <ZZZ.RLK at MIT-OZ>
To: BUG-LISPM at MIT-OZ
CC: rlk at MIT-OZ

In System 98.34, CADR 3.6, ZMail 53.10, MIT-Specific 22.0, microcode 306,
on Lisp Machine One:


Insert your description of the circumstances here:

In the profile editor, I first clicked left on the Mail Files box,
producing this error.  Then I clicked right, moused Other Mail Files,
and clicked right again, reproducing this error.  My current init file
is generation 2.

  >>ERROR: Keyword arg keyword :KEY unrecognized.
Backtrace from the debugger:

CLI:RASSOC (P.C. = 43)

 Arg 0 (ITEM): #FS:TOPS20-PATHNAME "OZ:PS:<ZZZ.RLK.BITNET>BITNET.BABYL."
 Arg 1 (LIST): (("BITNET.BABYL PS:<ZZZ.RLK.BITNET> OZ:" . #<BABYL-MAIL-FILE-BUFFER "BITNET.BABYL PS:<ZZZ.RLK.BITNET> OZ:" 35611703>) ("OLD-MAIL.TEMP PS:<ZZZ.RLK> OZ:" . #<BABYL-MAIL-FILE-BUFFER "OLD-MAIL.TEMP PS:<ZZZ.RLK> OZ:" 35754566>) (#FS:UNIX-PATHNAME "CCC: mbox //usr//rlk//" . #FS:UNIX-PATHNAME "CCC: mbox //usr//rlk//"))
 Rest arg: (:KEY BUFFER-PATHNAME)
Local 1 (TEST): NIL
Local 2 (TEST-NOT): NIL
Local 3 (TAIL): NIL


EDIT-PROFILE-REMEMBERED-MAIL-FILES (P.C. = 107)

 Arg 0 (NEAR-MODE): (:WINDOW #<BUTTON-PANE Mail files 4664270 exposed>)
Local 0 (ZMAIL-BUFFER-ALIST): (("BITNET.BABYL PS:<ZZZ.RLK.BITNET> OZ:" . #<BABYL-MAIL-FILE-BUFFER "BITNET.BABYL PS:<ZZZ.RLK.BITNET> OZ:" 35611703>) ("OLD-MAIL.TEMP PS:<ZZZ.RLK> OZ:" . #<BABYL-MAIL-FILE-BUFFER "OLD-MAIL.TEMP PS:<ZZZ.RLK> OZ:" 35754566>) (#FS:UNIX-PATHNAME "CCC: mbox //usr//rlk//" . #FS:UNIX-PATHNAME "CCC: mbox //usr//rlk//"))
Local 1 (ACTIVE-LIST): (#FS:UNIX-PATHNAME "CCC: mbox //usr//rlk//")
Local 2 (TEM): NIL
Local 3: (#FS:TOPS20-PATHNAME "OZ:PS:<ZZZ.RLK.BITNET>BITNET.BABYL.")
Local 4 (FILE-NAME): #FS:TOPS20-PATHNAME "OZ:PS:<ZZZ.RLK.BITNET>BITNET.BABYL."
Local 5 (X): NIL
Local 6: NIL
Local 7: NIL


PROFILE-MAIL-FILES-BUTTON (P.C. = 73)

 Arg 0 (NEAR-MODE): (:WINDOW #<BUTTON-PANE Mail files 4664270 exposed>)
Local 0 (MODE): :PROFILE-REMEMBERED-MAIL-FILES


(:SELECT-METHOD ZMAIL-PROFILE-COMMAND-LIST :MOUSE-BUTTON) (P.C. = 343)

 Arg 0 (IGNORE): :MOUSE-BUTTON
 Arg 1 (CH): 4000002
 Arg 2 (WINDOW): #<BUTTON-PANE Mail files 4664270 exposed>
 Arg 3 (IGNORE): 44
 Arg 4 (IGNORE): 12
Local 0 (WINDOW-NAME): MAIL-FILES-BUTTON
Local 1 (NEAR-MODE): (:WINDOW #<BUTTON-PANE Mail files 4664270 exposed>)
Local 2 (ALIST): NIL
Local 3 (ZMAIL-BUFFER): NIL
Local 4: NIL
Local 5 (.FILE-ABORTED-FLAG.): NIL
Local 6 (SRC-FILE): NIL
Local 7 (.WINDOW.): NIL
Local 8 (.FOR-WINDOW.): NIL
Local 9 (.OSTATUS.): NIL
Local 10 (.OSUBST.): NIL
Local 11 (.QUEUE-LEFT.): NIL
Local 12 (E): NIL


(:METHOD ZMAIL-PROFILE-FRAME :PROCESS-SPECIAL-COMMAND) (P.C. = 25)
  (SELF is #<ZMAIL-PROFILE-FRAME Zmail Profile Frame 1 4652324 exposed>)

 Arg 0 (OPERATION): :PROCESS-SPECIAL-COMMAND
 Rest arg (ARGS): (:MOUSE-BUTTON 4000002 #<BUTTON-PANE Mail files 4664270 exposed> 44 ...)


Remainder of stack:

(:METHOD ZMAIL-COMMAND-LOOP-MIXIN :COMMAND-LOOP) (P.C. = 252)
(:INTERNAL (:METHOD ZMAIL-UTILITY-FRAME :COMBINED :COMMAND-LOOP) 0) (P.C. = 44)
FUNCALL (P.C. = 25)
(:METHOD ZMAIL-COMMAND-LOOP-MIXIN :AROUND :COMMAND-LOOP) (P.C. = 57)
(:METHOD ZMAIL-UTILITY-FRAME :COMBINED :COMMAND-LOOP) (P.C. = 43)
COM-ZMAIL-PROFILE (P.C. = 241)
COMMAND-EXECUTE (P.C. = 115)
ZMAIL-COMMAND-EXECUTE (P.C. = 27)
(:SELECT-METHOD ZMAIL-COMMAND-LIST :MENU) (P.C. = 32)
(:METHOD ZMAIL-FRAME :PROCESS-SPECIAL-COMMAND) (P.C. = 25)
(:METHOD ZMAIL-COMMAND-LOOP-MIXIN :COMMAND-LOOP) (P.C. = 252)
(:INTERNAL (:METHOD ZMAIL-FRAME :COMBINED :COMMAND-LOOP) 0) (P.C. = 44)
FUNCALL (P.C. = 25)
(:METHOD ZMAIL-COMMAND-LOOP-MIXIN :AROUND :COMMAND-LOOP) (P.C. = 57)
(:METHOD ZMAIL-FRAME :COMBINED :COMMAND-LOOP) (P.C. = 43)
ZMAIL-PROCESS-TOP-LEVEL (P.C. = 115)
SI:PROCESS-TOP-LEVEL (P.C. = 152)
13-Mar-84 02:10:31-EST,660;000000000000
Received: from MIT-LISPM-1 by MIT-OZ via Chaosnet; 13 Mar 84 02:09-EST
Date: Tuesday, 13 March 1984, 02:09-EST
From: Richard M. Stallman <RMS at MIT-OZ>
Subject: TYPEP of one argument
To: info-lispm-mit at MIT-OZ

Should TYPEP of one argument return a keyword (such as :SYMBOL)
or something in GLOBAL or USER (such as SYMBOL)?
The former is what it does now, and is more compatible with the
past few systems.  But it fails nowadays to be compatible with
Maclisp, which is what TYPEP of one argument is really supported for.
The latter would be compatible with Maclisp as it was originally
intended to be, but might break a few programs right now.
13-Mar-84 22:24:37-EST,507;000000000000
Mail-From: STRAZ created at 13-Mar-84 22:22:11
Date: Tue 13 Mar 84 22:22:11-EST
From: Steve Strassmann <STRAZ@MIT-OZ>
Subject: bad 3600
To: bug-lispm@MIT-OZ


Keith Moon (@7AI) has a bad time after cold boot. It seems to
be waiting for the chaos to do something. (It flashes Run & Net In)

Abort does nothing
CTRL-Abort prints [Sorry, no Abort handlers found in this process]
C-M-Abort stops whatever, but the mouse process is dead afterward.

Is there a special BUG-3600 mail list?
-------
13-Mar-84 23:23:13-EST,2720;000000000000
Received: from MIT-LISPM-25 by MIT-OZ via Chaosnet; 13 Mar 84 23:22-EST
Date: Tuesday, 13 March 1984, 23:22-EST
From: Robert P. Krajewski <RpK at MIT-OZ>
Subject: FORMAT lossage (while m-$ found an incorrect word)
To: BUG-LISPM-MIT at MIT-OZ

In Don't-dump-a-band! Inconsistent (unreleased patches loaded) System 98.39,
CADR 3.6, ZMail 53.13, MIT-Specific 22.0, microcode 306,
on Lisp Machine Twenty-five:

Insert your description of the circumstances here:

m-$ found an incorrect word (``IBM'' !), and so a FORMAT statement
managed to screw up, though I'm not sure exactly what the 26 (octal), in
a list, is doing there.

>>TRAP 14055 (ARGTYP NUMBER PP 0 QIEQL)
The first argument to =, (26), was of the wrong type.
The function expected a number.
Backtrace from the debugger:

FORMAT:FORMAT-GET-CHARACTER-NAME (P.C. = 47)

 Arg 0 (CHAR): 40
Local 0 (L): ((:CIRCLE-CROSS 26) (:TENSOR 26) (:DOUBLE-ARROW . 27) (:LEFT-ARROW . 30) ...)


FORMAT:FORMAT-CTL-CHARACTER (P.C. = 475)

 Arg 0 (ARG): 40
 Arg 1 (IGNORE): NIL
Local 0 (CHNAME): NIL
Local 1 (BITS): 0
Local 2 (STR): NIL


FORMAT:FORMAT-CTL-OP (P.C. = 63)

 Arg 0 (OP): FORMAT:C
 Arg 1 (ARGS): (40 122)
 Arg 2 (PARAMS): NIL
Local 0 (TEM): FORMAT:FORMAT-CTL-CHARACTER


FORMAT:FORMAT-CTL-STRING (P.C. = 136)

 Arg 0 (ARGS): (40 122)
 Arg 1 (CTL-STRING): "Choose the letter corresponding to the correct spelling of the word ~A.
Type ~:@c to leave the word alone,
or type ~C to enter the new spelling from the keyboard.

If you change the word, you will be asked whether to
query-replace all occurrences of it."
Local 0 (FORMAT-PARAMS): #<ART-Q-LIST-12 32262327>
Local 1 (TEM): FORMAT:C


FORMAT (P.C. = 177)

 Arg 0 (STREAM): NIL
 Arg 1 (CTL-STRING): "Choose the letter corresponding to the correct spelling of the word ~A.
Type ~:@c to leave the word alone,
or type ~C to enter the new spelling from the keyboard.

If you change the word, you will be asked whether to
query-replace all occurrences of it."
 Rest arg (ARGS): ("IBM" 40 122)
Local 1: "Choose the letter corresponding to the correct spelling of the word IBM.
Type "


Remainder of stack:

ZWEI:USER-CHOOSE-WORD (P.C. = 72)
ZWEI:CORRECT-SPELLING-1 (P.C. = 71)
CORRECT-SPELLING (P.C. = 123)
ZWEI:COM-CORRECT-WORD-SPELLING (P.C. = 124)
ZWEI:COMMAND-EXECUTE (P.C. = 115)
ZWEI:PROCESS-COMMAND-CHAR (P.C. = 65)
(:METHOD ZWEI:WINDOW :EDIT) (P.C. = 464)
(:INTERNAL (:METHOD ZWEI:ZMACS-WINDOW :COMBINED :EDIT) 0) (P.C. = 74)
FUNCALL (P.C. = 25)
(:METHOD ZWEI:DISPLAYER :AROUND :EDIT) (P.C. = 31)
(:METHOD ZWEI:ZMACS-WINDOW :COMBINED :EDIT) (P.C. = 47)
ZWEI:ZMACS-WINDOW-TOP-LEVEL (P.C. = 46)
SI:PROCESS-TOP-LEVEL (P.C. = 152)
13-Mar-84 23:24:22-EST,1274;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 13 Mar 84 23:23-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK with CHAOS; Tue 13-Mar-84 23:22:47-EST
Date: Tuesday, 13 March 1984, 23:20-EST
From: David C. Plummer <DCP at SCRC-TENEX>
Subject: bad 3600
To: STRAZ at MIT-OZ, bug-lispm at MIT-OZ
In-Reply-To: The message of 13 Mar 84 22:22-EST from Steve Strassmann <STRAZ at MIT-OZ>

    Date: Tue 13 Mar 84 22:22:11-EST
    From: Steve Strassmann <STRAZ@MIT-OZ>

Please include the standard bug herald (use m-X Bug or something).

    Keith Moon (@7AI) has a bad time after cold boot. It seems to
    be waiting for the chaos to do something. (It flashes Run & Net In)

    Abort does nothing
    CTRL-Abort prints [Sorry, no Abort handlers found in this process]
    C-M-Abort stops whatever, but the mouse process is dead afterward.
You would do the same thing if somebody hit you over the head with a
hammer while you were trying to wake up!  Why don't you try c-m-Break
and see what it thinks it was doing.  My guess is the band is old and is
getting a large update from some namespace server.

    Is there a special BUG-3600 mail list?
If you think it is related to the beta-test versions of Release 5, send
it to bug-beta-test.
16-Mar-84 13:31:19-EST,3588;000000000000
Received: from MIT-LISPM-18 by MIT-OZ via Chaosnet; 16 Mar 84 13:25-EST
Date: Friday, 16 March 1984, 13:23-EST
From: Robert L. Krawitz <zzz.rlk at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In Don't-dump-a-band! Inconsistent (unreleased patches loaded) System 98.39,
CADR 3.6, ZMail 53.13, MIT-Specific 22.0, microcode 306, ZM MIT,
on Lisp Machine Eighteen:


FIRST I edited my profile (in the edit option)
I typed, at the beginning, (login-setq *default-cc-list* '(zzz.rlk@oz))
then I exited with control-z.  I scrolled the options window by bumping the
cursor against top, and when I reached default-cc-list it barfed.  I typed
<abort> which led to a second prompt.  I then typed resume and gave as a 
value ('zzz.rlk 'oz) and it recursively barfed (to second level) Note that
even c-m-abort and c-abort failed to release me.  Robert Krawitz
>>ERROR: The regular push-down list has overflown.
Backtrace from the debugger:

SYSTEM:INVALID-FUNCTION (P.C. = 46)

 Arg 0 (FORM): ((QUOTE ZZZ.RLK) (QUOTE OZ))


SI:EVAL1 (P.C. = 767)

 Arg 0 (FORM): ((QUOTE ZZZ.RLK) (QUOTE OZ))
   --Defaulted args:--
 Arg 1 (NOHOOK): NIL
Local 0 (ARGNUM): NIL
Local 1 (TEM): NIL
Local 2 (ENV): NIL
Local 3 (TAIL): NIL
Local 4 (FCTN): (QUOTE ZZZ.RLK)
Local 5 (ARG-DESC): 1000077
Local 6 (NUM-ARGS): NIL
Local 7 (CLOSURE-PASSED): NIL
Local 8 (LAMBDA-LIST): NIL
Local 9 (LL): NIL
Local 10 (QUOTE-STATUS): NIL
Local 11 (REST-FLAG): NIL
Local 12 (ARGL): NIL
Local 13: NIL
Local 14: NIL
Local 15 (IGNORE): NIL
Local 16 (ADL): NIL
Local 17 (ITEM): NIL
Local 18 (*SELECTQ-ITEM*): NIL


SI:EVAL-ABORT-TRIVIAL-ERRORS (P.C. = 61)

 Arg 0 (TOP-LEVEL-FORM): ((QUOTE ZZZ.RLK) (QUOTE OZ))
Local 0: ((SYSTEM:TOO-FEW-ARGUMENTS SYSTEM:TOO-MANY-ARGUMENTS SYSTEM:CELL-CONTENTS-ERROR SYSTEM:WRONG-TYPE-ARGUMENT ...) SI:EVAL-ABORT-TRIVIAL-ERRORS-HANDLER)
Local 1: ((** SI:EVAL-ABORT-TRIVIAL-ERRORS-HANDLER) (** SI:EVAL-ABORT-TRIVIAL-ERRORS-HANDLER))


SI:EVAL-READ-PROMPT-AND-READ (P.C. = 253)

 Arg 0 (OPTION): :EVAL-READ
 Arg 1 (STREAM): #:TERMINAL-IO-SYN-STREAM
Local 0 (VALUE): NIL
Local 1 (FORM): ((QUOTE ZZZ.RLK) (QUOTE OZ))
Local 2 (FLAG): NIL
Local 3: ("Try again to type this input.")
Local 4: (ERROR ("Try again to type this input.") T ("Try again to type this input.") ...)
Local 5: #<DTP-CLOSURE 32551655>
Local 6 (IGNORE): NIL


PROMPT-AND-READ (P.C. = 107)

 Arg 0 (OPTION): :EVAL-READ
 Arg 1 (FORMAT-STRING): "Form to evaluate and use as replacement argument: "
 Rest arg (FORMAT-ARGS): NIL
Local 1 (OPTION-TYPE): :EVAL-READ
Local 2 (FUNCTION): NIL


Remainder of stack:

LEXPR-FUNCALL (P.C. = 30)
SI:EVAL1 (P.C. = 1324)
SI:EVAL-ABORT-TRIVIAL-ERRORS (P.C. = 61)
EH:FH-STREAM-BINDING-EVALER (P.C. = 244)
EH:FOOTHOLD (P.C. = 20)
STRING-FROM-HEADER (P.C. = 133)
PRINT-ADDRESS-LIST (P.C. = 52)
(:METHOD TV:MOUSE-SENSITIVE-TEXT-SCROLL-WINDOW-WITHOUT-CLICK :ITEM1) (P.C. = 123)
(:METHOD TV:BASIC-CHOOSE-VARIABLE-VALUES :PRINT-ITEM) (P.C. = 260)
(:METHOD ZMAIL-CHOOSE-VARIABLE-VALUES-PANE :COMBINED :PRINT-ITEM) (P.C. = 46)
...
(:METHOD ZMAIL-CHOOSE-VARIABLE-VALUES-PANE :COMBINED :SCROLL-REDISPLAY) (P.C. = 46)
(:METHOD TV:TEXT-SCROLL-WINDOW :SCROLL-TO) (P.C. = 62)
TV:FLASHY-SCROLLING-MOUSE-MOVES (P.C. = 261)
(:METHOD ZMAIL-CHOOSE-VARIABLE-VALUES-PANE :COMBINED :MOUSE-MOVES) (P.C. = 51)
TV:MOUSE-DEFAULT-HANDLER (P.C. = 630)
(:METHOD TV:ESSENTIAL-MOUSE :HANDLE-MOUSE) (P.C. = 37)
(:METHOD ZMAIL-CHOOSE-VARIABLE-VALUES-PANE :COMBINED :HANDLE-MOUSE) (P.C. = 57)
TV:MOUSE-OVERSEER (P.C. = 132)
SI:PROCESS-TOP-LEVEL (P.C. = 246)
16-Mar-84 15:17:48-EST,507;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 16 Mar 84 15:11-EST
Date: Friday, 16 March 1984, 14:39-EST
From: Patrick G. Sobalvarro <pgs at MIT-OZ>
Subject: documentation
To: BUG-LISPM at MIT-OZ

In Don't-dump-a-band! Inconsistent (unreleased patches loaded) System 98.39,
CADR 3.6, ZMail 53.13, MIT-Specific 22.0, microcode 309, ZM MIT,
on Lisp Machine Thirty-one:

C-Sh-D on something not documented results in the message ``NIL is not
documented'' being printed at the bottom of the screen.
16-Mar-84 19:49:53-EST,1000;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 16 Mar 84 19:49-EST
Date: Friday, 16 March 1984, 19:47-EST
From: Tim McNerney <TIM at MIT-MC>
Subject: File/buffer name lossage
To: bug-lispm at MIT-MC

I realize that what I consider a bug is actually a feature most
of the time.  However, I am complaining about the case where I
do a c-X c-W to save a duplicate of the file, and the visited
file name changes.  I do a Set Visited File Name to set it back,
and it INSISTS that it now needs to be saved!  Perhaps there
should be a "Save Copy" command which doesn't change the name.

I mentioned that Set Visted File Name makes no attempt to use
the buffer name as a default.  If I make a new buffer called
"mumble.lsp", it still presents me with a default of FOO.LSP.
Have you changed this in an unreleased patch?

Also, if I do a c-X c-F with a default of FROTZ.TXT, and I type
FOO, it loads FOO.LSP!!!  This is clearly wrong.  What happened
to defaulting of the file type?

		Tim
18-Mar-84 14:17:42-EST,1630;000000000000
Received: from MIT-JIMI by MIT-OZ via Chaosnet; 18 Mar 84 14:15-EST
Date: Sunday, 18 March 1984, 14:14-EST
From: John Batali <BATALI at MIT-OZ>
Subject: Non-Terminating-Macro-Char
To: bug-lispm at MIT-OZ

Alan made the following patch for me and then gave me the responsibility
for finding out when or if it would be installed.

(A "non-terminating-macro-char" has character code -9 and is described
as being "a macro-character but not a token separator")

Note that installation requires both the loading of the new readtable,
(the old one had a typo in which "-9" was written "-8") and the
definition of the SET-SYNTAX-... function.

; From file READ.LISP SRC:<S.R5.IO> OZ: (371)
#8R SYSTEM-INTERNALS:(COMPILER-LET ((PACKAGE (PKG-FIND-PACKAGE "SYSTEM-INTERNALS")))

(LOAD "OZ:PS:<ALAN.LM>RDTBL")

;;;; Set the character CHAR in A-READTABLE to be a single-character
;;;; macro with the given FUNCTION.
(DEFUN SET-SYNTAX-NON-TERMINATING-MACRO-CHAR (CHAR FUNCTION
			      &OPTIONAL (A-READTABLE READTABLE))
       (LET ((SYNTAX (GET (LOCF (RDTBL-PLIST A-READTABLE)) 'NON-TERMINATING-MACRO)))
	    (OR (AND (LISTP SYNTAX)
		     (FIXP (CAR SYNTAX))
		     (FIXP (CDR SYNTAX)))
		(FERROR "No saved syntax found for defining macro characters"))
	    (SETF (RDTBL-BITS A-READTABLE CHAR) (CAR SYNTAX))
	    (SETF (RDTBL-CODE A-READTABLE CHAR) (CDR SYNTAX))
	    (LET ((X (ASSQ CHAR (RDTBL-MACRO-ALIST A-READTABLE))))
		 (IF (NULL X)
		     (SETF (RDTBL-MACRO-ALIST A-READTABLE)
			   (CONS (CONS CHAR FUNCTION) (RDTBL-MACRO-ALIST A-READTABLE)))
		     (SETF (CDR X) FUNCTION))))
       CHAR)

)
19-Mar-84 17:19:04-EST,2937;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 19 Mar 84 17:17-EST
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK with CHAOS; Mon 19-Mar-84 17:19:04-EST
Date: Monday, 19 March 1984, 17:16-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: :INIT-KEYWORDS
To: Leigh L. Klotz <klotz at MIT-OZ>,
    Gregor J Kiczales <Gregor at SCRC-TENEX>,
    Mike McMahon <MMcM at SCRC-TENEX>
Cc: bug-lispm at MIT-OZ
In-reply-to: The message of 1 Mar 84 21:42-EST from Leigh L. Klotz <klotz at MIT-OZ>,
             The message of 7 Mar 84 13:35-EST from Gregor J Kiczales <Gregor at SCRC-TENEX>,
             The message of 19 Mar 84 16:06-EST from Gregor J Kiczales <Gregor at SCRC-TENEX>,
             <840319161451.4.MMcM@TENEX.SCRC.Symbolics>

    Date: Thursday, 1 March 1984, 21:42-EST
    From: Leigh L. Klotz <klotz at MIT-OZ>

    Is there a way of saying not to do the error checking, or to call some flavor-function
    on unhandled init keywords.  There is a :DEFAULT-MESSAGE-HANDLER option to DEFFLAVOR,
    but no way to allow the same sort of action for init keywords.

    Date: Wednesday, 7 March 1984, 13:35-EST
    From: Gregor J Kiczales <Gregor at SCRC-TENEX>

    Should we have a :DEFAULT-INIT-KEYWORD-HANDLER or should we support
    :allow-other-keywords ala common-lisp.

    Date: Monday, 19 March 1984, 16:06-EST
    From: Gregor J Kiczales <Gregor at SCRC-TENEX>

    I suppose the reason no one responded to my :allow-other-keywords suggestion
    is that they figured that the return-unhandled-init-keywords-p argument to
    instantiate-flavor could be used to do this.  I was suggesting it for times
    when that argument is not accessible like make-blinker or make-window.  I
    thought that it was for reasons like that that it got put into make-array.
    If no-one answers this message either I will never bring it up again.  If
    people think it is a good idea I will install it.

My reason for not responding is that I am 300 messages behind on my mail, so I'm
only dealing with things that can be dealt with right away, and letting most
other things wait in the hope that someone else will handle them.

    Date: Monday, 19 March 1984, 16:14-EST
    From: Mike McMahon <MMcM at SCRC-TENEX>

    Having :allow-other-keys in make-instance and making it work when it
    comes from :default-init-plist sounds fine to me.

I agree.  However, if you reread Leigh's message it's not clear whether this
satisfies his unspecified need: he seems to be asking for something to put in
the DEFFLAVOR, not in the MAKE-INSTANCE.  I guess (:default-init-plist
:allow-other-keys t) is better than having a new DEFFLAVOR option that would
have to be documented separately.  Also, perhaps Leigh wants to be able to
specify a function to be called if there are unrecognized keywords.  Then
again the answer to that is probably "use a :BEFORE :INIT method."
19-Mar-84 18:04:30-EST,478;000000000000
Received: from MIT-LISPM-3 by MIT-OZ via Chaosnet; 19 Mar 84 18:03-EST
Date: Monday, 19 March 1984, 18:02-EST
From: Harry L. Voorhees <hlv at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In System 98.34, CADR 3.6, ZMail 53.11, MIT-Specific 22.0, microcode 306,
ZM MIT, on Lisp Machine Three:

The left-hand CONTROL key doesn't always work.  

Also, sometimes when you try to cold-boot the machine it warm boots instead
(perhaps this has something to do with the first problem.)
19-Mar-84 21:34:00-EST,1543;000000000000
Mail-From: KLOTZ created at 19-Mar-84 21:31:42
Date: Mon, 19 Mar 1984  21:31 EST
Message-ID: <KLOTZ.12000717787.BABYL@MIT-OZ>
From: "Leigh L. Klotz" <KLOTZ@MIT-OZ>
To:   "David A. Moon" <Moon@SCRC-TENEX>
Cc:   bug-lispm@MIT-OZ, Gregor J Kiczales <Gregor@SCRC-TENEX>,
      Mike McMahon <MMcM@SCRC-TENEX>
Subject: :INIT-KEYWORDS -- in explanation
In-reply-to: Msg of 19 Mar 1984 17:16-EST from David A. Moon <Moon at SCRC-TENEX>

The problem came up when I was thinking of making an blinker object which
would funnel all messages to two other objects, maintained by the first
instance.  Some methods would need wrappers or :before methods or perhaps
entirely new methods, but most would just be sent to the two objects
successively.

While this might not be the best way to handle the particular problem I
had at the time, it occurred to me that it's not possible to do since even
though I can forward all the messages to both sub-objects, there was no
way to have the init plist work right, except to compile the knowledge of
the allowed init plist entries into the flavor definition of my composite
object.  Obviously, I wanted to avoid this.

If :ALLOW-OTHER-KEYWORDS is put in, I could make the composite object
remove the keywords it handles itself before passing the init keyword list
to its constituent objects, which would complain if they got something
they didn't like.  The :DEFAULT-INIT-KEYWORD-HANDLER wasn't really what
I needed, but it was what I was looking for at the time by analogy.

Leigh.


19-Mar-84 21:44:46-EST,962;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 19 Mar 84 21:44-EST
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK with CHAOS; Mon 19-Mar-84 21:44:31-EST
Date: Monday, 19 March 1984, 21:42-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: Non-Terminating-Macro-Char
To: John Batali <BATALI at MIT-OZ>, Alan at MIT-MC
Cc: bug-lispm at MIT-OZ
In-reply-to: The message of 18 Mar 84 14:14-EST from John Batali <BATALI at MIT-OZ>

    Date: Sunday, 18 March 1984, 14:14-EST
    From: John Batali <BATALI at MIT-OZ>

    Alan made the following patch for me and then gave me the responsibility
    for finding out when or if it would be installed....

Patch 243.614 makes SET-SYNTAX-MACRO-CHAR take an optional fourth argument,
which if non-NIL makes the macro nonterminating.  The readtable typo seems
to have been fixed as a byproduct of patches 243.506.  These patches will
get to you in a future patch release after 5.0 goes out.
20-Mar-84 13:45:22-EST,534;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 20 Mar 84 13:42-EST
Date: Tuesday, 20 March 1984, 13:41-EST
From: Patrick Odonnell <PAO at MIT-PYGMALION>
To: BUG-LISPM at MIT-OZ

In System 97.23, CADR 1.0, ZMail 51.9, MIT-Specific 21.0, microcode 257,
ZM MIT, on Lisp Machine Twenty-five:

When doing Find File in the editor, it tells me that the default is, for
instance, OZ:PS:<PUMA.11>PUMA.PALX, then, just typing the filename
MVPROC it happily attempts to read MVPROC.LISP.  MVPROC.LISP doesn't
exist; MVPROC.PALX does.
20-Mar-84 16:25:34-EST,4198;000000000000
Received: from MIT-LISPM-18 by MIT-OZ via Chaosnet; 20 Mar 84 16:16-EST
Date: Tuesday, 20 March 1984, 16:15-EST
From: Robert L. Krawitz <ZZZ.RLK at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In System 98.37, CADR 3.6, ZMail 53.13, MIT-Specific 22.0, microcode 309,
ZM MIT, on Lisp Machine Eighteen:


Insert your description of the circumstances here:

In the profile option, I clicked left on Mail Files
I might have reported this before; if I did, sorry

>>TRAP 10027 (INSTANCE-LACKS-INSTANCE-VARIABLE M-C M-A)
There is no instance variable PATHNAME in #FS:UNIX-PATHNAME "CCC: mbox //usr//rlk//".
Backtrace from the debugger:

(:INTERNAL EDIT-PROFILE-REMEMBERED-MAIL-FILES 0) (P.C. = 23)

 Arg 0 (X): (#FS:UNIX-PATHNAME "CCC: mbox //usr//rlk//" . #FS:UNIX-PATHNAME "CCC: mbox //usr//rlk//")


GLOBAL:FIND (P.C. = 273)

 Arg 0 (ITEM): #FS:TOPS20-PATHNAME "OZ:PS:<ZZZ.RLK.BITNET>BITNET.BABYL."
 Arg 1 (SEQUENCE): (("BITNET.BABYL PS:<ZZZ.RLK.BITNET> OZ:" . #<BABYL-MAIL-FILE-BUFFER "BITNET.BABYL PS:<ZZZ.RLK.BITNET> OZ:" 21410010>) (#FS:UNIX-PATHNAME "CCC: mbox //usr//rlk//" . #FS:UNIX-PATHNAME "CCC: mbox //usr//rlk//"))
 Rest arg (KEYARGS): (:KEY #<DTP-FEF-POINTER (:INTERNAL EDIT-PROFILE-REMEMBERED-MAIL-FILES 0) 30576404>)
Local 1 (FROM-END): NIL
Local 2 (TEST): NIL
Local 3 (TEST-NOT): NIL
Local 4 (START): 0
Local 5 (END): NIL
Local 6 (KEY): #<DTP-FEF-POINTER (:INTERNAL EDIT-PROFILE-REMEMBERED-MAIL-FILES 0) 30576404>
Local 7 (ONE-ARG-PREDICATE): NIL
Local 8 (INDEX): ((#FS:UNIX-PATHNAME "CCC: mbox //usr//rlk//" . #FS:UNIX-PATHNAME "CCC: mbox //usr//rlk//"))
Local 9 (I): 1
Local 10 (STOP-INDEX): NIL
Local 11 (LAST-ELT): NIL
Local 12 (LAST-POS): NIL


EDIT-PROFILE-REMEMBERED-MAIL-FILES (P.C. = 107)

 Arg 0 (NEAR-MODE): (:WINDOW #<BUTTON-PANE Mail files 3224270 exposed>)
Local 0 (ZMAIL-BUFFER-ALIST): (("BITNET.BABYL PS:<ZZZ.RLK.BITNET> OZ:" . #<BABYL-MAIL-FILE-BUFFER "BITNET.BABYL PS:<ZZZ.RLK.BITNET> OZ:" 21410010>) (#FS:UNIX-PATHNAME "CCC: mbox //usr//rlk//" . #FS:UNIX-PATHNAME "CCC: mbox //usr//rlk//"))
Local 1 (ACTIVE-LIST): (#FS:UNIX-PATHNAME "CCC: mbox //usr//rlk//")
Local 2: (#FS:TOPS20-PATHNAME "OZ:PS:<ZZZ.RLK.BITNET>BITNET.BABYL.")
Local 3 (FILE-NAME): #FS:TOPS20-PATHNAME "OZ:PS:<ZZZ.RLK.BITNET>BITNET.BABYL."
Local 4: #FS:UNIX-PATHNAME "CCC: mbox //usr//rlk//"
Local 5 (X): NIL
Local 6: NIL


PROFILE-MAIL-FILES-BUTTON (P.C. = 73)

 Arg 0 (NEAR-MODE): (:WINDOW #<BUTTON-PANE Mail files 3224270 exposed>)
Local 0 (MODE): :PROFILE-REMEMBERED-MAIL-FILES


(:SELECT-METHOD ZMAIL-PROFILE-COMMAND-LIST :MOUSE-BUTTON) (P.C. = 371)

 Arg 0 (IGNORE): :MOUSE-BUTTON
 Arg 1 (CH): 4000000
 Arg 2 (WINDOW): #<BUTTON-PANE Mail files 3224270 exposed>
 Arg 3 (IGNORE): 50
 Arg 4 (IGNORE): 4
Local 0 (WINDOW-NAME): MAIL-FILES-BUTTON
Local 1 (*ZMAIL-COMMAND-BUTTON*): :LEFT
Local 2 (NEAR-MODE): (:WINDOW #<BUTTON-PANE Mail files 3224270 exposed>)
Local 3 (ALIST): NIL
Local 4 (ZMAIL-BUFFER): NIL
Local 5: NIL
Local 6 (.FILE-ABORTED-FLAG.): NIL
Local 7 (SRC-FILE): NIL
Local 8 (.WINDOW.): NIL
Local 9 (.FOR-WINDOW.): NIL
Local 10 (.OSTATUS.): NIL
Local 11 (.OSUBST.): NIL
Local 12 (.QUEUE-LEFT.): NIL
Local 13 (E): NIL


Remainder of stack:

(:METHOD ZMAIL-PROFILE-FRAME :PROCESS-SPECIAL-COMMAND) (P.C. = 25)
(:METHOD ZMAIL-COMMAND-LOOP-MIXIN :COMMAND-LOOP) (P.C. = 252)
(:INTERNAL (:METHOD ZMAIL-UTILITY-FRAME :COMBINED :COMMAND-LOOP) 0) (P.C. = 44)
FUNCALL (P.C. = 25)
(:METHOD ZMAIL-COMMAND-LOOP-MIXIN :AROUND :COMMAND-LOOP) (P.C. = 57)
(:METHOD ZMAIL-UTILITY-FRAME :COMBINED :COMMAND-LOOP) (P.C. = 43)
COM-ZMAIL-PROFILE (P.C. = 241)
COMMAND-EXECUTE (P.C. = 115)
ZMAIL-COMMAND-EXECUTE (P.C. = 27)
(:SELECT-METHOD ZMAIL-COMMAND-LIST :MENU) (P.C. = 32)
(:METHOD ZMAIL-FRAME :PROCESS-SPECIAL-COMMAND) (P.C. = 25)
(:METHOD ZMAIL-COMMAND-LOOP-MIXIN :COMMAND-LOOP) (P.C. = 252)
(:INTERNAL (:METHOD ZMAIL-FRAME :COMBINED :COMMAND-LOOP) 0) (P.C. = 44)
FUNCALL (P.C. = 25)
(:METHOD ZMAIL-COMMAND-LOOP-MIXIN :AROUND :COMMAND-LOOP) (P.C. = 57)
(:METHOD ZMAIL-FRAME :COMBINED :COMMAND-LOOP) (P.C. = 43)
ZMAIL-PROCESS-TOP-LEVEL (P.C. = 115)
SI:PROCESS-TOP-LEVEL (P.C. = 152)
20-Mar-84 16:35:30-EST,2349;000000000000
Received: from MIT-LISPM-18 by MIT-OZ via Chaosnet; 20 Mar 84 16:29-EST
Date: Tuesday, 20 March 1984, 16:28-EST
From: Robert L. Krawitz <ZZZ.RLK at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In System 98.37, CADR 3.6, ZMail 53.13, MIT-Specific 22.0, microcode 309,
ZM MIT, on Lisp Machine Eighteen:


Insert your description of the circumstances here:

I TRIED to get my new mail with the G command, and got an error
destination file not closed or something like that.  I tried this
several times.  I then tried to save my file and got this.

				Robert, yet again

>>ERROR: Inbox buffer out of synch (:NEW-MAIL), get a wizard
Backtrace from the debugger:

(:METHOD ZWEI:MAIL-FILE-BUFFER :SAVING-DONE) (P.C. = 113)
  (SELF is #<BABYL-MAIL-FILE-BUFFER "ZZZ/.RLK.BABYL PS:<ZZZ.RLK> OZ:" 21224475>)

 Arg 0 (OPERATION): :SAVING-DONE
   --Defaulted args:--
 Arg 1 (FORCING-OUT): NIL
Local 0 (OMF): #<TENEX-INBOX-BUFFER "New mail for ZZZ/.RLK.BABYL PS:<ZZZ.RLK> OZ:" 21556675>


(:METHOD ZWEI:BABYL-MAIL-FILE-BUFFER :COMBINED :SAVING-DONE) (P.C. = 102)
  (SELF is #<BABYL-MAIL-FILE-BUFFER "ZZZ/.RLK.BABYL PS:<ZZZ.RLK> OZ:" 21224475>)

 Rest arg (.DAEMON-CALLER-ARGS.): (:SAVING-DONE)
Local 1 (.DAEMON-MAPPING-TABLE.): #<ART-16B-5 30660112>


ZWEI:SAVE-ZMAIL-BUFFER (P.C. = 131)

 Arg 0 (ZMAIL-BUFFER): #<BABYL-MAIL-FILE-BUFFER "ZZZ/.RLK.BABYL PS:<ZZZ.RLK> OZ:" 21224475>
Local 0 (OPTIONS): #<DTP-LOCATIVE 21224512>
Local 1 (OWNER): "ZZZ.RLK"


ZWEI:ZMAIL-SAVE-ALL (P.C. = 60)

Local 0: (#<BABYL-MAIL-FILE-BUFFER "ZZZ/.RLK.BABYL PS:<ZZZ.RLK> OZ:" 21224475> #<BABYL-MAIL-FILE-BUFFER "BITNET.BABYL PS:<ZZZ.RLK.BITNET> OZ:" 21410010>)
Local 1 (ZMAIL-BUFFER): #<BABYL-MAIL-FILE-BUFFER "ZZZ/.RLK.BABYL PS:<ZZZ.RLK> OZ:" 21224475>


ZWEI:COM-ZMAIL-SAVE (P.C. = 65)



Remainder of stack:

ZWEI:COMMAND-EXECUTE (P.C. = 115)
ZWEI:ZMAIL-COMMAND-EXECUTE (P.C. = 27)
(:METHOD ZWEI:ZMAIL-FRAME :PROCESS-COMMAND-CHAR) (P.C. = 40)
(:METHOD ZWEI:ZMAIL-COMMAND-LOOP-MIXIN :COMMAND-LOOP) (P.C. = 257)
(:INTERNAL (:METHOD ZWEI:ZMAIL-FRAME :COMBINED :COMMAND-LOOP) 0) (P.C. = 44)
FUNCALL (P.C. = 25)
(:METHOD ZWEI:ZMAIL-COMMAND-LOOP-MIXIN :AROUND :COMMAND-LOOP) (P.C. = 57)
(:METHOD ZWEI:ZMAIL-FRAME :COMBINED :COMMAND-LOOP) (P.C. = 43)
ZWEI:ZMAIL-PROCESS-TOP-LEVEL (P.C. = 115)
SI:PROCESS-TOP-LEVEL (P.C. = 246)
20-Mar-84 16:39:02-EST,3899;000000000000
Received: from MIT-LISPM-18 by MIT-OZ via Chaosnet; 20 Mar 84 16:34-EST
Date: Tuesday, 20 March 1984, 16:33-EST
From: Robert L. Krawitz <ZZZ.RLK at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In System 98.37, CADR 3.6, ZMail 53.13, MIT-Specific 22.0, microcode 309,
ZM MIT, on Lisp Machine Eighteen:


Insert your description of the circumstances here:

...and here's what happens when I try to get my new mail, using g.  This
doesn't happen too regularly -- it happens all the time on zarniwoop,
which is a cadr running slimebolics (M-X Hiss) software, this is the
first time on mit software

			Robert

ps aren't you getting tired of all these things???

>>ERROR: Destination file is not closed (at 7727 inside FILE server) for OZ:PS:<ZZZ.RLK>MAIL.TXT.1
Backtrace from the debugger:

FS:RENAME-CHAOS (P.C. = 160)

 Arg 0 (HOST): #FS:TOPS20-CHAOS-HOST "MIT-OZ"
 Arg 1 (OLD-PATHNAME): #FS:TOPS20-PATHNAME "OZ:PS:<ZZZ.RLK>MAIL.TXT.1"
 Arg 2 (NEW-PATHNAME): #FS:TOPS20-PATHNAME "OZ:PS:<ZZZ.RLK>MAIL._ZMAIL_TXT.1"
 Arg 3 (ERROR-P): T
Local 0 (HOST-UNIT): #<HOST-UNIT 7731304>
Local 1 (PKT): #<CHAOS packet. PKT-STRING "T1365  ERROR BUG F Destination file is not closed (at 7727 inside FILE server)" PKT-STATUS CHAOS:RELEASED 35054266>
Local 2 (SUCCESS): NIL
Local 3 (STRING): " ERROR BUG F Destination file is not closed (at 7727 inside FILE server)"
Local 4 (FROM): NIL
Local 5 (TRUENAME-STRING): NIL
Local 6 (IGNORE): NIL


(:METHOD FS:CHAOS-PATHNAME :RENAME) (P.C. = 43)
  (SELF is #FS:TOPS20-PATHNAME "OZ:PS:<ZZZ.RLK>MAIL.TXT.1")

 Arg 0 (OPERATION): :RENAME
 Arg 1 (NEW-PATHNAME): #FS:TOPS20-PATHNAME "OZ:PS:<ZZZ.RLK>MAIL._ZMAIL_TXT.1"
   --Defaulted args:--
 Arg 2 (ERROR-P): T


(:METHOD ZWEI:INBOX-BUFFER :START-NEXT-FILE) (P.C. = 427)
  (SELF is #<TENEX-INBOX-BUFFER "New mail for ZZZ/.RLK.BABYL PS:<ZZZ.RLK> OZ:" 35057602>)

 Arg 0 (OPERATION): :START-NEXT-FILE
Local 0 (FILE): #FS:TOPS20-PATHNAME "OZ:PS:<ZZZ.RLK>MAIL.TXT.1"
Local 1 (RENAME): #FS:TOPS20-PATHNAME "OZ:PS:<ZZZ.RLK>MAIL._ZMAIL_TXT.1"
Local 2 (DELETE-P): T
Local 3 (STR): #<FILE-PROBE-STREAM "OZ:PS:<ZZZ.RLK>MAIL.TXT.1" 35060327>
Local 4 (LOADING-NAME): #FS:TOPS20-PATHNAME "OZ:PS:<ZZZ.RLK>MAIL.TXT.1"
Local 5 (LOADING-TRUENAME): #FS:TOPS20-PATHNAME "OZ:PS:<ZZZ.RLK>MAIL.TXT.1"
Local 6: ((FS:FILE-LOCKED SI:CONDITION-CASE-THROW ZWEI:G1409) (ZWEI:UNKNOWN-SPECIAL-COMMAND ZWEI:ZMAIL-COMMAND-LOOP-UNKNOWN-SPECIAL-COMMAND))
Local 7: (FS:FILE-LOCKED SI:CONDITION-CASE-THROW ZWEI:G1409)
Local 8 (*SELECTQ-ITEM*): (FS:FILE-LOOKUP-ERROR FS:FILE-OPERATION-FAILURE FS:FILE-ERROR ERROR ...)
Local 9 (TEM): NIL
Local 10: NIL
Local 11 (*SELECTQ-ITEM*): NIL


ZWEI:GET-NEW-MAIL-FOR-ZMAIL-BUFFER (P.C. = 165)

 Arg 0 (ZMAIL-BUFFER): #<BABYL-MAIL-FILE-BUFFER "ZZZ/.RLK.BABYL PS:<ZZZ.RLK> OZ:" 21224475>
 Arg 1 (FROM-FILE): NIL
 Arg 2 (DELETE-P): NIL
 Arg 3 (TELL-BACKGROUND-P): NIL
Local 0 (MOVE-P): NIL
Local 1 (INBOX-BUFFER): #<TENEX-INBOX-BUFFER "New mail for ZZZ/.RLK.BABYL PS:<ZZZ.RLK> OZ:" 35057602>
Local 2 (APPEND-P): T
Local 3: NIL
Local 4: NIL


ZWEI:COM-GET-NEW-MAIL-INTERNAL (P.C. = 224)

 Arg 0 (FIRST-TIME-P): NIL
   --Defaulted args:--
 Arg 1 (FOR-BUFFER): #<BABYL-MAIL-FILE-BUFFER "ZZZ/.RLK.BABYL PS:<ZZZ.RLK> OZ:" 21224475>
Local 0 (FROM-FILE): NIL


Remainder of stack:

ZWEI:COM-GET-NEW-MAIL (P.C. = 34)
ZWEI:COMMAND-EXECUTE (P.C. = 115)
ZWEI:ZMAIL-COMMAND-EXECUTE (P.C. = 27)
(:METHOD ZWEI:ZMAIL-FRAME :PROCESS-COMMAND-CHAR) (P.C. = 40)
(:METHOD ZWEI:ZMAIL-COMMAND-LOOP-MIXIN :COMMAND-LOOP) (P.C. = 257)
(:INTERNAL (:METHOD ZWEI:ZMAIL-FRAME :COMBINED :COMMAND-LOOP) 0) (P.C. = 44)
FUNCALL (P.C. = 25)
(:METHOD ZWEI:ZMAIL-COMMAND-LOOP-MIXIN :AROUND :COMMAND-LOOP) (P.C. = 57)
(:METHOD ZWEI:ZMAIL-FRAME :COMBINED :COMMAND-LOOP) (P.C. = 43)
ZWEI:ZMAIL-PROCESS-TOP-LEVEL (P.C. = 115)
SI:PROCESS-TOP-LEVEL (P.C. = 246)
20-Mar-84 20:51:59-EST,6819;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 20 Mar 84 20:51-EST
Date: Tuesday, 20 March 1984, 20:48-EST
From: Michael E. Sullivan <SULLIV at MIT-MC>
Subject: Bugs in FED package FNTCNV.LISP
To: BUG-LISPM at OZ

In Release 4.3, System 222.239, Zmail 74.47, LMFS 30.46,
site configuration 66, Educational Computing Group, on Lisp Machine Twenty:

There are a few errors in package fed:  Both have to do with functions
for AL format fonts.
	The first is in read-al-into font-descriptor.  At one point, it
tries to write a new value into the structure fd with aset.  This loses
because it doesn't expand the array first, and it gets a "subscript
beyond the length of array" error or some such nonsense.  Function
fd-store-cd does the right thing (it's what the others use) and the
corrected function appears in full below.
	The second error is in write-font-descriptor-into-al, and it
occurs when it encounters a non-existent character in a font.  Each
element of structure fd is either a charcter-descriptor *or NIL* for
chars that don't exist.  As the function loops through the characters,
it calls an accessor macro on the value of the char-descriptor of that
char *before* testing to see if the character-descriptor actually
exists.  It seems to do this with array-leader, and if the
char-descriptor is NIL, it barfs.  This point in the function is marked
below.  When it encounters a non-existant character, it should simply
write a pointer to the dummy character into the file's pointer table.  I
have included a file map of an AL format font for convenience.

 ;; Load an ALTO font file into a font descriptor 
 ;; Fixed by Michael E. SULLIVan @MC to treat fd properly when saving cd
(DEFUN READ-AL-INTO-FONT-DESCRIPTOR (FILENAME &OPTIONAL FONTNAME
				     &AUX FD ARRAY LINE-HEIGHT PROPORTIONAL MAX-WIDTH)
  (MULTIPLE-VALUE (FILENAME FONTNAME)
    (GET-INPUT-FILENAME-AND-FONTNAME FILENAME FONTNAME ':AL))
  (SETQ FD (MAKE-FONT-DESCRIPTOR FD-NAME FONTNAME))
  (SETF (FD-NAME FD) FONTNAME)
  (WITH-OPEN-FILE (STREAM FILENAME '(:IN :FIXNUM))
    (SETQ LINE-HEIGHT (FUNCALL STREAM ':TYI))
    (SETF (FD-LINE-SPACING FD) LINE-HEIGHT)
    (SETF (FD-BLINKER-HEIGHT FD) LINE-HEIGHT)
    (LET ((BASELINE-AND-MAX-WIDTH (FUNCALL STREAM ':TYI)))
      (SETQ PROPORTIONAL (LDB-TEST 1701 BASELINE-AND-MAX-WIDTH))
      (SETF (FD-BASELINE FD) (LDB 1007 BASELINE-AND-MAX-WIDTH))
      (SETF (FD-SPACE-WIDTH FD) (SETQ MAX-WIDTH (LDB 0010 BASELINE-AND-MAX-WIDTH))))
    (SETQ ARRAY (MAKE-ARRAY 1000. ':TYPE 'ART-16B ':LEADER-LIST '(0)))
    (DO CH (FUNCALL STREAM ':TYI) (FUNCALL STREAM ':TYI) (NULL CH)
      (ARRAY-PUSH-EXTEND ARRAY CH)))
  (DO ((CH 0 (1+ CH))
       (CD)
       (CHAR-WIDTH))
      (( CH 200))	;Alto font could have 400 characters, our fonts don't yet
    (SETQ CHAR-WIDTH 0)
    (DO ((IDX CH)
	 (XW))
	(NIL)
      (SETQ IDX (+ IDX (AREF ARRAY IDX)))
      (SETQ XW (AREF ARRAY IDX))
      (IF (ZEROP (PROG1 (LOGAND XW 1) (SETQ XW (// XW 2))))
	  (SETQ CHAR-WIDTH (+ CHAR-WIDTH 16.)
		IDX XW)
	  (RETURN (SETQ CHAR-WIDTH (+ CHAR-WIDTH XW)))))
    (SETQ CD (MAKE-CHAR-DESCRIPTOR MAKE-ARRAY (:TYPE ART-1B
					       :LENGTH (LIST LINE-HEIGHT CHAR-WIDTH))))
    (SETF (CD-CHAR-WIDTH CD) CHAR-WIDTH)
    (AND (= CH #\SP) (SETF (FD-SPACE-WIDTH FD) CHAR-WIDTH))
    (SETF (CD-CHAR-LEFT-KERN CD) 0)
    (FD-STORE-CD FD CD CH)			;Fixed by sulliv@mc to use fd-store-cd
    (READ-AL-INTO-FONT-DESCRIPTOR-1 CD ARRAY CH 0))
  (SETF (FD-FILL-POINTER FD) 200)
  ;; Set width of blinker and space fields from the space character.
  (SETF (FD-BLINKER-WIDTH FD) (FD-SPACE-WIDTH FD))
  FD)


;I don't think this does the desired thing for variable-width ("proportional") fonts
(DEFUN WRITE-FONT-DESCRIPTOR-INTO-AL (FD &OPTIONAL FILENAME &AUX ARRAY CARRAY LINE-HEIGHT)
  (SETQ FILENAME (GET-OUTPUT-FILENAME-FROM-FONT-DESCRIPTOR FD FILENAME ':AL))
  (WITH-OPEN-FILE (STREAM FILENAME '(:OUT :FIXNUM))
    (FUNCALL STREAM ':TYO (SETQ LINE-HEIGHT (FD-LINE-SPACING FD)))
    (FUNCALL STREAM ':TYO (DPB (FD-BASELINE FD) 1007 (FD-SPACE-WIDTH FD)))
    (SETQ ARRAY (MAKE-ARRAY 1000. ':TYPE 'ART-16B ':LEADER-LIST '(0))	;Data array
	  CARRAY (MAKE-ARRAY 400 ':TYPE 'ART-16B ':LEADER-LIST '(400)))	;Non self-rel chars
    ;; Store dummy
    (ARRAY-PUSH-EXTEND ARRAY 1)
    (ARRAY-PUSH-EXTEND ARRAY 0)
    (LOOP FOR CH FROM 0 BELOW 200
	  AS CD = (AREF FD CH)
	  AS CHAR-WIDTH = (CD-CHAR-WIDTH CD)	;Barfs here...
	  DO (LOOP WITH CH = CH WITH (XW HD-XH)
		   FOR XOFF FROM 0 BY 16. BELOW CHAR-WIDTH
		   DO (SETQ HD-XH (WRITE-AL-COLUMN CD XOFF ARRAY))
		      (ASET (ARRAY-LEADER ARRAY 0) CARRAY CH)	;Sets pointer to raster
						                ;data here
		      (SETQ XW (IF (> (- CHAR-WIDTH XOFF) 16.)
				   (* (SETQ CH (PROG1 (ARRAY-LEADER CARRAY 0)
						      (ARRAY-PUSH-EXTEND CARRAY 0)))
				      2)
				   (1+ (* (- CHAR-WIDTH XOFF) 2))))
		      (ARRAY-PUSH-EXTEND ARRAY XW)
		      (ARRAY-PUSH-EXTEND ARRAY HD-XH)))
    (LOOP FOR I FROM 0 BELOW (ARRAY-ACTIVE-LENGTH CARRAY)	;Make self-relative
	  DO (ASET (- (+ (AREF CARRAY I) (ARRAY-ACTIVE-LENGTH CARRAY)) I)
		   CARRAY I))
    (FUNCALL STREAM ':STRING-OUT CARRAY)
    (FUNCALL STREAM ':STRING-OUT ARRAY)
    (FUNCALL STREAM ':CLOSE)
    (FUNCALL STREAM ':TRUENAME)))

 If char doesn't exist it should do:
(aset 0 carray ch)		;ie. pointer to the dummy char
...then back into the loop for ch from 0 below 200

The AS CHAR-WIDTH stuff can be put inside the next (LOOP, and the do can be made
conditionally:

	AS CD = (AREF FD CH)
	UNLESS (NULL CD)
	DO (LOOP WITH CHAR-WIDTH = (CD-CHAR-WIDTH CD) AND CH = CH WITH (XW HD-XH)
		.....)
	ELSE (ASET 0 CARRAY CH))
    (LOOP FOR I FROM 0 BELOW...

Map of AL format font (in 16-bit words):

0       +--------------
        |Height word
1       +--------------
        |Proportional bit, baseline location 7 bits, maximum width 8 bits
2       +--------------                         0   +----------------+
        | ^@        pointer table                   |   contents     |
        |                                           |      of        |
2+377   | 1^?   ie char 1111 1111             377   |    CARRAY      |
        +--------------                             |                |
        n extension chars                     377+n +----------------+ 
2+400+n +--------------                         0   +----------------+
        |XW word of dummy char = 1                  |   contents     |
        |HD byte, XH byte both = 0              1   |      of        |
2+402+n +--------------                             |    ARRAY       |
        |Data for first char that exists in font    |                |
        |etc.                                       |                |
20-Mar-84 21:57:57-EST,723;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 20 Mar 84 21:57-EST
Date: Tuesday, 20 March 1984, 21:53-EST
From: Michael E. Sullivan <SULLIV at MIT-MC>
Subject: Addendum to Bugs in package FED; FNTCNV
To: BUG-LISPM at OZ
Cc: SULLIV at MC

In Release 4.3, System 222.239, Zmail 74.47, LMFS 30.46,
site configuration 66, Educational Computing Group, on Lisp Machine Twenty:

 One more thing;  the loop bounds of the outermost LOOP should be:
    (LOOP FOR CH FROM 0 BELOW (ARRAY-LENGTH FD)	;Just to end of fd
in case DEL (177) doesn't exist in the font, and fd won't be adjust-array-size'd
big enough for BELOW 200.

	Corrected and tested versions of both these functions can be found on
MC:MEDG;FNTCNV LISP.
21-Mar-84 01:18:33-EST,739;000000000000
Received: from MIT-LISPM-30 by MIT-OZ via Chaosnet; 21 Mar 84 01:18-EST
Date: Wednesday, 21 March 1984, 01:17-EST
From: Patrick G. Sobalvarro <PGS at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In Don't-dump-a-band! Inconsistent (unreleased patches loaded) System 98.39,
CADR 3.6, ZMail 53.13, MIT-Specific 22.0, microcode 309, ZM MIT,
on Lisp Machine Thirty:

If one binds STANDARD-OUTPUT to another stream (as with with-output-to-string),
then incidences of (format t ...) do output to the other stream.  However,
incidences of (write-char ... t) will output to standard-output.  The following
function will demonstrate this.

(defun foo ()
  (with-output-to-string (standard-output)
    (format t "foo")
    (write-char #\a t)))
21-Mar-84 01:57:02-EST,1333;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 21 Mar 84 01:56-EST
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK with CHAOS; Wed 21-Mar-84 01:56:59-EST
Date: Wednesday, 21 March 1984, 01:54-EST
From: David A. Moon <Moon at SCRC-TENEX>
To: Patrick G. Sobalvarro <PGS at MIT-OZ>
Cc: BUG-LISPM at MIT-OZ
In-reply-to: The message of 21 Mar 84 01:17-EST from Patrick G. Sobalvarro <PGS at MIT-OZ>

    Date: Wednesday, 21 March 1984, 01:17-EST
    From: Patrick G. Sobalvarro <PGS at MIT-OZ>

    In Don't-dump-a-band! Inconsistent (unreleased patches loaded) System 98.39,
    CADR 3.6, ZMail 53.13, MIT-Specific 22.0, microcode 309, ZM MIT,
    on Lisp Machine Thirty:

    If one binds STANDARD-OUTPUT to another stream (as with with-output-to-string),
    then incidences of (format t ...) do output to the other stream.  However,
    incidences of (write-char ... t) will output to standard-output.  The following
    function will demonstrate this.

    (defun foo ()
      (with-output-to-string (standard-output)
	(format t "foo")
	(write-char #\a t)))

In Common Lisp, T as an argument to an output function means to output
to *TERMINAL-IO* (not *STANDARD-OUTPUT*).  Unfortunately FORMAT does
not follow this rule, but has its own interpretation of T and NIL where
a stream is expected.
22-Mar-84 00:43:55-EST,456;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 22 Mar 84 00:43-EST
Date: Thursday, 22 March 1984, 00:41-EST
From: Christopher C. Stacy <CStacy at MIT-MC>
To: BUG-LISPM at MIT-OZ

In Release 5.0 [Beta Test rev 7], on PA Lisp Machine Avatar (CADR):

I am getting no better than 1200 baud service over SUPDUP connections,
and I am pretty certain the delay is on this end.  You don't notice
this on the 3600, but it makes the older machines unusable.
22-Mar-84 01:23:15-EST,377;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 22 Mar 84 01:23-EST
Date: Thursday, 22 March 1984, 01:20-EST
From: Henry Lieberman <Henry at OZ>
Subject: Graphic Lisp
To: Bug-Lispm at OZ


I was playing with the Graphic Lisp program on <S.Examples>, and I had
a lot of fun with it. Unfortunately, we only have here on Oz
a 4.5 version. Can you ship over a 5 version?

22-Mar-84 12:00:51-EST,1051;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 22 Mar 84 11:57-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK with CHAOS; Thu 22-Mar-84 12:00:23-EST
Date: Thursday, 22 March 1984, 11:56-EST
From: David C. Plummer <DCP at SCRC-TENEX>
To: CStacy at MIT-MC, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 22 Mar 84 00:41-EST from Christopher C. Stacy <CStacy at MIT-MC>

    Date: Thursday, 22 March 1984, 00:41-EST
    From: Christopher C. Stacy <CStacy at MIT-MC>

    In Release 5.0 [Beta Test rev 7], on PA Lisp Machine Avatar (CADR):

    I am getting no better than 1200 baud service over SUPDUP connections,
    and I am pretty certain the delay is on this end.  You don't notice
    this on the 3600, but it makes the older machines unusable.
This is an unfortunate by-product of the reorganization of the Terminal
program.  KMP actualy metered it long ago when 5.0beta first became
available.  What is biting you is the slowness of function calling
(mostly instance calling in this case, I think) on the LM-2.
22-Mar-84 15:38:04-EST,1598;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 22 Mar 84 15:36-EST
Received: from SCRC-AMAZON by SCRC-STONY-BROOK with CHAOS; Thu 22-Mar-84 15:39:17-EST
Date: Thursday, 22 March 1984, 15:32-EST
From: Philip Greenspun <philg at SCRC-QUABBIN>
To: Christopher C. Stacy <CStacy at MIT-MC>
Cc: bug-beta-test at SCRC-QUABBIN, bug-lispm at MIT-OZ
In-reply-to: The message of 22 Mar 84 00:41-EST from Christopher C. Stacy <CStacy at MIT-MC>

    Date: Thursday, 22 March 1984, 00:41-EST
    From: Christopher C. Stacy <CStacy at MIT-MC>

    In Release 5.0 [Beta Test rev 7], on PA Lisp Machine Avatar (CADR):

    I am getting no better than 1200 baud service over SUPDUP connections,
    and I am pretty certain the delay is on this end.  You don't notice
    this on the 3600, but it makes the older machines unusable.

Thanks for the report and sorry about this, but I don't think it is
going to change. If I recall correctly, in response to KMP's complaints
and extremely helpful metering, it was determined that the reason SUPDUP
is slow on the LM-2 is that a lot of hair was taken out of the code (so
that it now uses :LINE-OUT instead of :TYO or something like that) which
did not significantly change the speed of SUPDUP on the 3600, but slowed
it down on the CADR (due to some things being microcode on the CADR and
macrocode on the 3600).  Reports that we will be shipping LM-2s in the
future with Qualludes are false however.

Philip

ps.  If you're really interested in this, send mail to me and I will
find the original conversation from the archives.
23-Mar-84 01:58:01-EST,439;000000000000
Received: from MIT-XX by MIT-OZ via Chaosnet; 23 Mar 84 01:57-EST
Date: Friday, 23 March 1984, 01:57-EST
From: scott a douglass <SAD at MIT-XX>
Subject: bug in zmacs m-X completion
To: BUG-LISPM at MIT-OZ

In Release 5.0 [Beta Test rev 7], Rel 5.7 Grape MEF, on MEF Flame of the Forest (3600):

After m-X zmacs can't find Evaluate Region Verbose (which is assigned to
c-m-sh-E); but HELP D can complete it.  thanks
						-scott
23-Mar-84 09:42:48-EST,1049;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 23 Mar 84 09:41-EST
Received: from SCRC-OTTAWA by SCRC-STONY-BROOK with CHAOS; Fri 23-Mar-84 09:44:42-EST
Date: Friday, 23 March 1984, 09:45-EST
From: Jan Walker <JWalker at SCRC-TENEX>
Subject: bug in zmacs m-X completion
To: SAD at MIT-XX
Cc: bug-lispm at MIT-OZ
In-reply-to: The message of 23 Mar 84 01:57-EST from scott a douglass <SAD at MIT-XX>

    Date: Friday, 23 March 1984, 01:57-EST
    From: scott a douglass <SAD at MIT-XX>

    In Release 5.0 [Beta Test rev 7], Rel 5.7 Grape MEF, on MEF Flame of the Forest (3600):

    After m-X zmacs can't find Evaluate Region Verbose (which is assigned to
    c-m-sh-E); but HELP D can complete it.  thanks
						    -scott
Actually this is not a bug.  Unlike EMACS, not all commands in Zmacs are
available with m-X.  By convention, if a command has been assigned to a
"single" keystroke, it is not put into the m-X command table.  This is
to keep the completion space from becoming cluttered and hence not as
useful.
24-Mar-84 19:38:58-EST,551;000000000000
Received: from MIT-LENNON by MIT-OZ via Chaosnet; 24 Mar 84 19:38-EST
Date: Saturday, 24 March 1984, 19:42-EST
From: Jerry Roylance <GLR at MIT-OZ>
Subject: Conventional Day of the Week
To: BUG-LISPM at MIT-OZ

In System 242.269, patched imperial purple, on Lisp Machine John Lennon (3600):

(time:day-of-the-week-string 0) => "Monday" is not, as the Manual says, usual.
Sunday is the conventional start of the week.

See algorithm 199 of Collected Algorithms of the ACM,
Comm ACM 11, 657  (Oct 1968), and
Comm ACM  6, 444  (Aug 1963)

24-Mar-84 21:55:21-EST,1735;000000000000
Received: from SCRC-TENEX by MIT-OZ via Chaosnet; 24 Mar 84 21:55-EST
Date: Saturday, 24 March 1984  21:57-EST
From: David C. Plummer <DCP at SCRC-TENEX>
To:   Jerry Roylance <GLR at MIT-OZ>
Cc:   BUG-LISPM at MIT-OZ
Subject: Conventional Day of the Week
In-reply-to: The message of 24 Mar 1984 19:42-EST from Jerry Roylance <GLR at MIT-OZ>

    Date: Saturday, 24 March 1984, 19:42-EST
    From: Jerry Roylance <GLR at MIT-OZ>

    In System 242.269, patched imperial purple, on Lisp Machine John Lennon (3600):

    (time:day-of-the-week-string 0) => "Monday" is not, as the Manual says, usual.
    Sunday is the conventional start of the week.

    See algorithm 199 of Collected Algorithms of the ACM,
    Comm ACM 11, 657  (Oct 1968), and
    Comm ACM  6, 444  (Aug 1963)

"[A]nd the heaven and the earth were finished, and all the host of
 them.  And on the seventh day God finished His work which He had
 made; and He rested on the seventh day from all His work which He
 had made."  [Genesis 2;1,2]

Now we come to the problem: Which day IS the seventh day?

"Observe the sabbath day, to keep it holy, as the Lord thy God
 commanded thee.  Six days shalt thou labour, and do all thy
 work; but the seventh day is a sabbath unto the Lord thy God,
 ..."  [Deuteronomy 5;12-14]

Ok, so the seventh day is the sabbath.  In Spanish, 'Saturday' is
'sabado.'  I'm not sure how the Christians decided to make Sunday
the day of rest.  Perhaps Mr. Batali or Mr. McMahon can enlighten
us?

You have to admit, I think, that American society does start
its week's productivity on Monday.  There is also the name
'weekend' to deal with; it is not called 'weekbegining' nor is
it called 'weekbridge.'
24-Mar-84 22:24:35-EST,1811;000000000000
Mail-From: GLR created at 24-Mar-84 22:23:31
Date: Sat, 24 Mar 1984  22:23 EST
Message-ID: <GLR.12002037943.BABYL@MIT-OZ>
From: Jerry Roylance <GLR@MIT-OZ>
To:   "David C. Plummer" <DCP@SCRC-TENEX>
Cc:   BUG-LISPM@MIT-OZ
Subject: (Un)Conventional Day of the Week
In-reply-to: Msg of 24 Mar 1984  21:57-EST from David C. Plummer <DCP at SCRC-TENEX>


    Date: Saturday, 24 March 1984  21:57-EST
    From: David C. Plummer <DCP at SCRC-TENEX>

        Date: Saturday, 24 March 1984, 19:42-EST
        From: Jerry Roylance <GLR at MIT-OZ>


        (time:day-of-the-week-string 0) => "Monday" is not, as the Manual says, usual.
        Sunday is the conventional start of the week.

        See algorithm 199 of Collected Algorithms of the ACM,
        Comm ACM 11, 657  (Oct 1968), and
        Comm ACM  6, 444  (Aug 1963)

    "[A]nd the heaven and the earth were finished, and all the host of
     them.  And on the seventh day God finished His work which He had
     made; and He rested on the seventh day from all His work which He
     had made."  [Genesis 2;1,2]

    Now we come to the problem: Which day IS the seventh day?

    "Observe the sabbath day, to keep it holy, as the Lord thy God
     commanded thee.  Six days shalt thou labour, and do all thy
     work; but the seventh day is a sabbath unto the Lord thy God,
     ..."  [Deuteronomy 5;12-14]

Who cares about the Bible?  If you look in your Funk and Wagnall's under
Sunday, it will say it's the first day of the week....


    You have to admit, I think, that American society does start
    its week's productivity on Monday.  There is also the name
    'weekend' to deal with; it is not called 'weekbegining' nor is
    it called 'weekbridge.'


A line has two ends.  The weekend has both.
24-Mar-84 22:41:07-EST,741;000000000000
Received: from SCRC-TENEX by MIT-OZ via Chaosnet; 24 Mar 84 22:40-EST
Date: Saturday, 24 March 1984  22:43-EST
From: David C. Plummer <DCP at SCRC-TENEX>
To:   Jerry Roylance <GLR at MIT-OZ>
Cc:   BUG-LISPM at MIT-OZ
Subject: (Un)Conventional Day of the Week
In-reply-to: The message of Sat 24 Mar 1984  22:23 EST from Jerry Roylance <GLR at MIT-OZ>

    Date: Sat, 24 Mar 1984  22:23 EST
    From: Jerry Roylance <GLR@MIT-OZ>

    Who cares about the Bible?
Ronny Raygun.  If you're not careful, you may have to observe
your terminal's right to silent prayer (IOrev6 may require you to
observe spoken prayer) before you start hacking.

    A line has two ends.  The weekend has both.
A circle has no beginning and no end.
25-Mar-84 13:35:48-EST,1260;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 25 Mar 84 13:35-EST
Date: 25 Mar 1984  13:39 EST (Sun)
Message-ID: <SR.EHPYC.12002204705.BABYL@MIT-SPEECH>
From: Scott Cyphers <SR.EHPYC@MIT-SPEECH>
To:   Jerry Roylance <GLR@MIT-OZ>
Cc:   BUG-LISPM@MIT-OZ, "David C. Plummer" <DCP@SCRC-TENEX>
Subject: (Un)Conventional Day of the Week
In-reply-to: Msg of 24 Mar 1984  22:23-EST from Jerry Roylance <GLR at MIT-OZ>

        "[A]nd the heaven and the earth were finished, and all the host of
         them.  And on the seventh day God finished His work which He had
         made; and He rested on the seventh day from all His work which He
         had made."  [Genesis 2;1,2]

        Now we come to the problem: Which day IS the seventh day?

        "Observe the sabbath day, to keep it holy, as the Lord thy God
         commanded thee.  Six days shalt thou labour, and do all thy
         work; but the seventh day is a sabbath unto the Lord thy God,
         ..."  [Deuteronomy 5;12-14]

Heathens!  2000 years ago the holy day was Saturday, but some people
changed it to Sunday on account of the first Easter being on a Sunday.
Depending upon who you are, the holy day is Saturday or Sunday, but
the seventh day remains Saturday.
25-Mar-84 23:11:23-EST,813;000000000000
Received: from SCRC-TENEX by MIT-OZ via Chaosnet; 25 Mar 84 23:10-EST
Date: Sunday, 25 March 1984  23:13-EST
From: MOON at SCRC-TENEX
To:   Jerry Roylance <GLR at MIT-OZ>
Cc:   BUG-LISPM at MIT-OZ
Subject: Conventional Day of the Week
In-reply-to: The message of 24 Mar 1984 19:42-EST from Jerry Roylance <GLR at MIT-OZ>

    Date: Saturday, 24 March 1984, 19:42-EST
    From: Jerry Roylance <GLR at MIT-OZ>

    (time:day-of-the-week-string 0) => "Monday" is not, as the Manual says, usual.
    Sunday is the conventional start of the week.

In this context, "as usual" means "as usual in the Lisp Machine system" or
"compatibly with the rest of the functions described in the Lisp Machine
Manual chapter 30."

I guess this isn't the first time a holy war has been started over a single word.
25-Mar-84 23:41:10-EST,813;000000000000
Received: from SCRC-TENEX by MIT-OZ via Chaosnet; 25 Mar 84 23:40-EST
Date: Sunday, 25 March 1984  23:13-EST
From: MOON at SCRC-TENEX
To:   Jerry Roylance <GLR at MIT-OZ>
Cc:   BUG-LISPM at MIT-OZ
Subject: Conventional Day of the Week
In-reply-to: The message of 24 Mar 1984 19:42-EST from Jerry Roylance <GLR at MIT-OZ>

    Date: Saturday, 24 March 1984, 19:42-EST
    From: Jerry Roylance <GLR at MIT-OZ>

    (time:day-of-the-week-string 0) => "Monday" is not, as the Manual says, usual.
    Sunday is the conventional start of the week.

In this context, "as usual" means "as usual in the Lisp Machine system" or
"compatibly with the rest of the functions described in the Lisp Machine
Manual chapter 30."

I guess this isn't the first time a holy war has been started over a single word.
26-Mar-84 17:17:11-EST,493;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 26 Mar 84 17:13-EST
Date:  Mon, 26 Mar 84 17:07 EST
From:  Barry Margolin <Margolin@MIT-MULTICS.ARPA>
Subject:  Re: Conventional Day of the Week
To:  MOON@SCRC-TENEX.ARPA
cc:  BUG-LISPM@MIT-OZ.ARPA
In-Reply-To:  Message of 25 Mar 84 23:13 EST from "MOON at SCRC-TENEX"
Message-ID:  <840326220716.364240@MIT-MULTICS.ARPA>

Am i the only one who got four copies of Moon's reply to GLR about this,
or is the bug someplace besides Multics?
27-Mar-84 14:15:55-EST,862;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 27 Mar 84 14:03-EST
Date: Tuesday, 27 March 1984, 14:01-EST
From: Daniel Weise <DANIEL at MIT-MC>
Subject: defsystem query
To: BUG-LISPM at MIT-OZ

In Release 5.0 [Beta Test rev 7],
Experimental TECHNOLOGY-INDEPENDENT-DAEDALUS 1.0, COLOR 5.1, on Lisp Machine Buddy Holly (3600):

I am trying to make two flavors of daedalus, one for nmos and one for cmos.  The way
I am trying to do this is 

(defsystem nmos-daed 
   ...
   (component-systems technology-independent-daedalus)

   (:module nmos ("nmos"))

   (compile-load nmos))

and likewise for CMOS.  Unfortunately, a make-system of the above causes
it to load the nmos file before loading technology-independent-daedalus.
How do I specify the module being dependent on the system?  Do we have to
define our own transformation?

Daniel
27-Mar-84 15:39:15-EST,1596;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 27 Mar 84 14:50-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK with CHAOS; Tue 27-Mar-84 14:25:33-EST
Date: Tuesday, 27 March 1984, 14:21-EST
From: David C. Plummer <DCP at SCRC-TENEX>
Subject: defsystem query
To: DANIEL at MIT-MC, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 27 Mar 84 14:01-EST from Daniel Weise <DANIEL at MIT-MC>

    Date: Tuesday, 27 March 1984, 14:01-EST
    From: Daniel Weise <DANIEL at MIT-MC>

    In Release 5.0 [Beta Test rev 7],
    Experimental TECHNOLOGY-INDEPENDENT-DAEDALUS 1.0, COLOR 5.1, on Lisp Machine Buddy Holly (3600):

    I am trying to make two flavors of daedalus, one for nmos and one for cmos.  The way
    I am trying to do this is 

    (defsystem nmos-daed 
       ...
       (component-systems technology-independent-daedalus)

       (:module nmos ("nmos"))

       (compile-load nmos))

[I assume you really have colons in the real source.]

    and likewise for CMOS.  Unfortunately, a make-system of the above causes
    it to load the nmos file before loading technology-independent-daedalus.
    How do I specify the module being dependent on the system?  Do we have to
    define our own transformation?

You want the :do-components kludge (Actually, you want the
unimiplemented :required-systems kludge/feature):

    (defsystem nmos-daed 
      ...
      (:component-systems technology-independent-daedalus)
      
      (:module nmos ("nmos"))
      (:do-components nil)
      (:compile-load nmos (si:do-components-internal)))
27-Mar-84 15:40:38-EST,1247;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 27 Mar 84 14:50-EST
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK with CHAOS; Tue 27-Mar-84 14:29:44-EST
Date: Tuesday, 27 March 1984, 14:27-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: defsystem query
To: Daniel Weise <DANIEL at MIT-MC>
Cc: BUG-LISPM at MIT-OZ, HOSS at SCRC-TENEX
In-reply-to: The message of 27 Mar 84 14:01-EST from Daniel Weise <DANIEL at MIT-MC>

    Date: Tuesday, 27 March 1984, 14:01-EST
    From: Daniel Weise <DANIEL at MIT-MC>

    I am trying to make two flavors of daedalus, one for nmos and one for cmos.  The way
    I am trying to do this is 

    (defsystem nmos-daed 
       ...
       (component-systems technology-independent-daedalus)

       (:module nmos ("nmos"))

       (compile-load nmos))

    and likewise for CMOS.  Unfortunately, a make-system of the above causes
    it to load the nmos file before loading technology-independent-daedalus.
    How do I specify the module being dependent on the system?  Do we have to
    define our own transformation?

You can use :do-components as a transformation, and make the module's
:compile-load transformation depend on it.  See page 410 of the Chine Nual.
27-Mar-84 20:10:34-EST,2040;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 27 Mar 84 20:09-EST
Received: from SCRC-HARLEM by SCRC-STONY-BROOK with CHAOS; Tue 27-Mar-84 19:57:28-EST
Date: Tuesday, 27 March 1984, 19:57-EST
From: Joseph R Goldstone <joseph at SCRC-QUABBIN>
Subject: defsystem query
To: David C. Plummer <DCP at SCRC-TENEX>
Cc: DANIEL at MIT-MC, BUG-LISPM at MIT-OZ
In-reply-to: The message of 27 Mar 84 14:21-EST from David C. Plummer <DCP at SCRC-TENEX>
File-References: Y:>rel-5>colour>sysdcl.lisp

    Date: Tuesday, 27 March 1984, 14:21-EST
    From: David C. Plummer <DCP at SCRC-TENEX>
	Date: Tuesday, 27 March 1984, 14:01-EST
	From: Daniel Weise <DANIEL at MIT-MC>
	In Release 5.0 [Beta Test rev 7],
	Experimental TECHNOLOGY-INDEPENDENT-DAEDALUS 1.0, COLOR 5.1, on Lisp Machine Buddy Holly (3600):

	I am trying to make two flavors of daedalus, one for nmos and one for cmos.  The way
	I am trying to do this is 

	(defsystem nmos-daed 
	   ...
	   (component-systems technology-independent-daedalus)

	   (:module nmos ("nmos"))

	   (compile-load nmos))

    [I assume you really have colons in the real source.]

	and likewise for CMOS.  Unfortunately, a make-system of the above causes
	it to load the nmos file before loading technology-independent-daedalus.
	How do I specify the module being dependent on the system?  Do we have to
	define our own transformation?

    You want the :do-components kludge (Actually, you want the
    unimiplemented :required-systems kludge/feature):

	(defsystem nmos-daed 
	  ...
	  (:component-systems technology-independent-daedalus)
      
	  (:module nmos ("nmos"))
	  (:do-components nil)
	  (:compile-load nmos (si:do-components-internal)))

You might be amused by yukon:>rel-5>colour>sysdcl.lisp, which defines three
systems, the last two of which have their predecessors as components.  It
may change before it ships, of course, and it tickles a make-system bug that
can only be supressed by having all systems have the same major version.
27-Mar-84 23:03:23-EST,7426;000000000000
Received: from MIT-JANIS by MIT-OZ via Chaosnet; 27 Mar 84 23:01-EST
Date: Tuesday, 27 March 1984, 23:03-EST
From: Daniel Huttenlocher <dph at MIT-OZ>
Subject: MIT-JIMI to MIT-OZ via SWW
To: BUG-LISPM at MIT-OZ, bug-beta-test at MIT-OZ

In Release 5.0 [Beta Test rev 7], FEP 18, on Lisp Machine Janis Joplin (3600):

Why is FIND-PATHS-FOR-MEDIUM-TO-HOST trying to validate namespace SWW in the process of finding paths
from MIT-JIMI to MIT-OZ, which are on the same piece of physical ethernet cable?

By the way, it was in this (or some other) "Net In" process wait for more than 5 minutes before I
hit break.

>>Break: 
While in the function PROCESS-WAIT  CHAOS:GET-NEXT-PKT  (:METHOD CHAOS:BASIC-INPUT-STREAM :GET-NEXT-INPUT-PKT)

PROCESS-WAIT:
   Arg 0 (WHOSTATE): "Net In"
   Arg 1 (FUNCTION): #<DTP-COMPILED-FUNCTION (:INTERNAL CHAOS:GET-NEXT-PKT 0) 45756424>
   Rest arg (ARGUMENTS): (#<CHAOS Connection for NAMESPACE to MIT|LM15 75730140>)

CHAOS:GET-NEXT-PKT:  (P.C. = 160)
   Arg 0 (CONN): #<CHAOS Connection for NAMESPACE to MIT|LM15 75730140>
   Arg 1 (NO-HANG-P): NIL

(:METHOD CHAOS:BASIC-INPUT-STREAM :GET-NEXT-INPUT-PKT):  (P.C. = 52)
   Arg 0 (SELF): #<CHARACTER-STREAM 3065772>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor CHAOS:BASIC-INPUT-STREAM -- 2. IV's, 0. FL's 104136624>
   Arg 2 (OPERATION): :GET-NEXT-INPUT-PKT
   Arg 3 (NO-HANG-P): NIL

(:METHOD CHAOS:CHARACTER-INPUT-STREAM-MIXIN :NEXT-INPUT-BUFFER):  (P.C. = 6)
   Arg 0 (SELF): #<CHARACTER-STREAM 3065772>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor CHAOS:CHARACTER-INPUT-STREAM-MIXIN -- 1. IV's, 0. FL's 104136653>
   Arg 2 (OPERATION): :NEXT-INPUT-BUFFER
   Arg 3 (NO-HANG-P): NIL

(:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :SETUP-NEXT-INPUT-BUFFER):  (P.C. = 11)
   Arg 0 (SELF): #<CHARACTER-STREAM 3065772>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:BASIC-BUFFERED-INPUT-STREAM -- 3. IV's, 0. FL's 104136660>
   Arg 2 (OPERATION): :SETUP-NEXT-INPUT-BUFFER
   --Defaulted args:--
   Arg 3 (NO-HANG-P): NIL

(:METHOD CHAOS:CHARACTER-STREAM :COMBINED :SETUP-NEXT-INPUT-BUFFER):  (P.C. = 10)
   Arg 0 (SELF): #<CHARACTER-STREAM 3065772>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor CHAOS:CHARACTER-STREAM -- 0. IV's, 8. FL's 104136666>
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

(:METHOD SI:BUFFERED-LINE-INPUT-STREAM :STRING-LINE-IN):  (P.C. = 22)
   Arg 0 (SELF): #<CHARACTER-STREAM 3065772>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:BUFFERED-LINE-INPUT-STREAM -- 3. IV's, 0. FL's 104136640>
   Arg 2 (OPERATION): :STRING-LINE-IN
   Arg 3 (EOF): NIL
   Arg 4 (LINE): "SECONDARY-NAME-SERVER SPA|RUSSIANO-RIVERSIDEce.textTIMESTAMPELEM"
   --Defaulted args:--
   Arg 5 (START): 0
   Arg 6 (END): 100

NETI:PARSE-RECORD-AS-TOKENS:  (P.C. = 32)
   Arg 0 (STREAM): #<CHARACTER-STREAM 3065772>
   --Defaulted args:--
   Arg 1 (COMMENTS-P): T

NETI:QUERY-NAMESPACE-SERVER:  (P.C. = 302)
   Arg 0 (CLASS): :SITE
   Arg 1 (NAMESPACE): #<NAMESPACE SWW 50640004>
   Rest arg (PROPERTY-LIST): (:NAME :SWW)

NETI:GET-INCREMENTAL-UPDATE-FROM-NETWORK:  (P.C. = 415)
   Arg 0 (NAMESPACE): #<NAMESPACE SWW 50640004>
   Arg 1 (STARTING-TIMESTAMP): 265

(:METHOD NETI:NAMESPACE :GET-LATEST-TIMESTAMP):  (P.C. = 21)
   Arg 0 (SELF): #<NAMESPACE SWW 50640004>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NETI:NAMESPACE -- 8. IV's, 0. FL's 104040434>
   Arg 2 (OPERATION): :GET-LATEST-TIMESTAMP

(:METHOD NETI:NAMESPACE :VALIDATION-TIMESTAMP):  (P.C. = 27)
   Arg 0 (SELF): #<NAMESPACE SWW 50640004>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NETI:NAMESPACE -- 8. IV's, 0. FL's 104040434>
   Arg 2 (OPERATION): :VALIDATION-TIMESTAMP

(:METHOD NET:OBJECT :CHECK-VALIDITY):  (P.C. = 70)
   Arg 0 (SELF): #<CHAOS-NETWORK CHAOS 75203444>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NET:OBJECT -- 3. IV's, 1. FL's 104133072>
   Arg 2 (OPERATION): :CHECK-VALIDITY
   Arg 3 (RELATIVE-TO-NAMESPACE): #<NAMESPACE SWW 50640004>

(:METHOD NET:OBJECT :CHECK-VALIDITY):  (P.C. = 30)
   Arg 0 (SELF): #<CHAOS-NETWORK CHAOS 75203444>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NET:OBJECT -- 3. IV's, 1. FL's 104133072>
   Arg 2 (OPERATION): :CHECK-VALIDITY
   --Defaulted args:--
   Arg 3 (RELATIVE-TO-NAMESPACE): NIL

(:METHOD NET:OBJECT :BEFORE :GET):  (P.C. = 5)
   Arg 0 (SELF): #<CHAOS-NETWORK CHAOS 75203444>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NET:OBJECT -- 3. IV's, 1. FL's 104133072>
   Arg 2 (OPERATION): :GET
   Rest arg (IGNORE): (:TYPE)

(:METHOD NET:OBJECT :COMBINED :GET):  (P.C. = 7)
   Arg 0 (SELF): #<CHAOS-NETWORK CHAOS 75203444>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NET:OBJECT -- 3. IV's, 1. FL's 104133072>
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

(:METHOD NET:NETWORK :NETWORK-TYPEP):  (P.C. = 6)
   Arg 0 (SELF): #<CHAOS-NETWORK CHAOS 75203444>
   Arg 1 (SELF-MAPPING-TABLE): NET:NETWORK
   Arg 2 (OPERATION): :NETWORK-TYPEP
   Arg 3 (TYPE): :CHAOS

NETI:FIND-PATHS-FOR-MEDIUM-TO-HOST-1:  (P.C. = 330)
   Arg 0 (PATH): ((:NETWORK :CHAOS))
   Arg 1 (PROTOCOL): #<PROTOCOL QFILE 75203406>
   Arg 2 (HOST): #<TOPS20-HOST MIT|OZ 76234573>
   Arg 3 (FROM-HOST): #<LISPM-HOST MIT|JANIS 76234767>

NETI:FIND-PATHS-FOR-MEDIUM-TO-HOST:  (P.C. = 31)
   Arg 0 (MEDIUM-NAME): :CHAOS
   Arg 1 (PROTOCOL): #<PROTOCOL QFILE 75203406>
   Arg 2 (HOST): #<TOPS20-HOST MIT|OZ 76234573>
   --Defaulted args:--
   Arg 3 (FROM-HOST): #<LISPM-HOST MIT|JANIS 76234767>

NETI:FIND-PATHS-TO-SERVICE-ON-HOST-1:  (P.C. = 6)
   Arg 0 (SERVICE): :FILE
   Arg 1 (PROTOCOL): #<PROTOCOL QFILE 75203406>
   Arg 2 (HOST): #<TOPS20-HOST MIT|OZ 76234573>
   Arg 3 (MEDIUM-NAME): :CHAOS

NET:FIND-PATHS-TO-SERVICE-ON-HOST:  (P.C. = 217)
   Arg 0 (SERVICE): :FILE
   Arg 1 (HOST): #<TOPS20-HOST MIT|OZ 76234573>
   --Defaulted args:--
   Arg 2 (ONLY-NEED-BEST): NIL

NET:INVOKE-SERVICE-ON-HOST:  (P.C. = 50)
   Arg 0 (SERVICE): :FILE
   Arg 1 (HOST): #<TOPS20-HOST MIT|OZ 76234573>
   Rest arg (SERVICE-ARGS): (#<TOPS20-PATHNAME "MIT|OZ:"> :HOMEDIR)

(:METHOD FS:ACTIVE-PATHNAME-HOST :FILE-ACCESS-PATH):  (P.C. = 37)
   Arg 0 (SELF): #<TOPS20-HOST MIT|OZ 76234573>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:ACTIVE-PATHNAME-HOST -- 1. IV's, 0. FL's 104116406>
   Arg 2 (OPERATION): :FILE-ACCESS-PATH
   Arg 3 (PATHNAME): #<TOPS20-PATHNAME "MIT|OZ:">
   Arg 4 (OPERATION): :HOMEDIR

(:METHOD FS:ACTIVE-PATHNAME-MIXIN :HOMEDIR):  (P.C. = 6)
   Arg 0 (SELF): #<TOPS20-PATHNAME "MIT|OZ:">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:ACTIVE-PATHNAME-MIXIN -- 1. IV's, 0. FL's 104072150>
   Arg 2 (OPERATION): :HOMEDIR

FS:USER-HOMEDIR:  (P.C. = 22)
   --Defaulted args:--
   Arg 0 (HOST): #<TOPS20-HOST MIT|OZ 76234573>

LOGIN:  (P.C. = 323)
   Arg 0 (USER-NAME): "dph"
   Rest arg: NIL

SI:*EVAL:  (P.C. = 370)
   Arg 0 (FORM): (LOGIN "dph")

SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 200)
   Rest arg: (:NAME "Lisp Top Level in Lisp Listener 1" :ABORTED-FUNCTION NIL :BEFORE-PROMPT-FUNCTION NIL :READ-FUNCTION NIL :EVAL-FUNCTION NIL ...)

SI:LISP-COMMAND-LOOP:  (P.C. = 115)
   Arg 0 (STREAM): #<LISP-LISTENER Lisp Listener 1 32640000 exposed>
   Rest arg: (:NAME "Lisp Top Level in Lisp Listener 1")

SI:LISP-TOP-LEVEL1:  (P.C. = 22)
   Arg 0 (TERMINAL-IO-initialization): #<LISP-LISTENER Lisp Listener 1 32640000 exposed>

SI:LISP-TOP-LEVEL:  (P.C. = 7)
27-Mar-84 23:30:16-EST,1698;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 27 Mar 84 23:29-EST
Received: from SCRC-HARLEM by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 11418; Tue 27-Mar-84 23:33:08-EST
Date: Tuesday, 27 March 1984, 23:34-EST
From: Joseph R Goldstone <joseph at SCRC-QUABBIN>
Subject: MIT-JIMI to MIT-OZ via SWW
To: Daniel Huttenlocher <dph at MIT-OZ>
Cc: BUG-LISPM at MIT-OZ, bug-beta-test at MIT-OZ
In-reply-to: The message of 27 Mar 84 23:03-EST from Daniel Huttenlocher <dph at MIT-OZ>

    Date: Tuesday, 27 March 1984, 23:03-EST
    From: Daniel Huttenlocher <dph at MIT-OZ>
    In Release 5.0 [Beta Test rev 7], FEP 18, on Lisp Machine Janis Joplin (3600):

    Why is FIND-PATHS-FOR-MEDIUM-TO-HOST trying to validate namespace SWW in the process of finding paths
    from MIT-JIMI to MIT-OZ, which are on the same piece of physical ethernet cable?
Because it wants to verify that nothing strange has happened to the chaos network
(the logical network, as opposed to your Ether subnet).  The "globe-girdling chaosnet"
connects and is shared by MIT, SCRC, SPA, SCH, and SWW.  It was off checking that
none of these namespaces had anything new to say about the network.

    By the way, it was in this (or some other) "Net In" process wait for more than 5 minutes before I
    hit break.
There is timeout code for this, but it's not in 5.0.  I cannot tell you what release
it will be in because the resources allocated to releases beyond 5.0 are unknown to me.
It is quite high on my list for patch migration, because it screws us too [I and much
of my department run 5.0 exclusively] and because I am such a nice guy.

Seriously, I will fix this as soon as I can.
28-Mar-84 04:01:28-EST,5134;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 28 Mar 84 04:01-EST
Date: Wednesday, 28 March 1984, 04:01-EST
From: Tim McNerney <TIM at MIT-MC>
To: BUG-LISPM at MIT-OZ

In System 98.37, CADR 3.6, ZMail 53.13, MIT-Specific 22.0, microcode 309,
ZM MIT, on Lisp Machine Thirty-one:


Insert your description of the circumstances here:

Earlier in this session I was in an "Attributes" menu and clicked middle
on "Border width."  It lost its lunch and got confused as to what window
was selected.  I suspect that this has something to do with the first
lossage.  This time I didn't click on anything.

>>ERROR: (:MOUSE-BUTTON 1048577. #<TEMPORARY-CHOOSE-VARIABLE-VALUES-WINDOW Temporary Choose Variable Values Window 1 4667353 deexposed> 151. ...) unknown message from #<TEMPORARY-CHOOSE-VARIABLE-VALUES-WINDOW Temporary Choose Variable Values Window 1 4667353 deexposed>
Backtrace from the debugger:

TV:CHOOSE-VARIABLE-VALUES-PROCESS-MESSAGE (P.C. = 70)

 Arg 0 (WINDOW): #<TEMPORARY-CHOOSE-VARIABLE-VALUES-WINDOW Temporary Choose Variable Values Window 1 4667353 deexposed>
 Arg 1 (MSG): (:MOUSE-BUTTON 1048577. #<TEMPORARY-CHOOSE-VARIABLE-VALUES-WINDOW Temporary Choose Variable Values Window 1 4667353 deexposed> 151. ...)


Additional information supplied with call:
 Expecting 2 values

TV:CHOOSE-VARIABLE-VALUES (P.C. = 544)

 Arg 0 (VARIABLES): ((TV:CURRENT-FONT-VALUE "Current font" :DOCUMENTATION "Set the current font to one of the fonts in the font map." ...) (TV:MORE-P-VALUE "More processing enabled" :DOCUMENTATION "Enable typing **MORE** and waiting for typein when there is too much typeout." ...) (TV:REVERSE-VIDEO-P "Reverse video" :DOCUMENTATION "Use white characters on a black background in this window." ...) (TV:VSP "Vertical spacing" :DOCUMENTATION "The number of pixels between successive lines of printed text" ...) ...)
 Rest arg: (:LABEL "Edit window attributes of Edit: AUX.LSP USRD$:[TIM.STEVE] OBI:." :MARGIN-CHOICES ("Done" **) ...)
Local 1 (FUNCTION): TV:ATTRIBUTE-EDITOR-HOOK
Local 2 (NEAR-MODE): (:MOUSE)
Local 3 (LABEL): "Edit window attributes of Edit: AUX.LSP USRD$:[TIM.STEVE] OBI:."
Local 4 (WIDTH): NIL
Local 5 (EXTRA-WIDTH): 10.
Local 6 (MARGIN-CHOICES): (("Done" NIL TV:CHOOSE-VARIABLE-VALUES-CHOICE-BOX-HANDLER 42. ...) ("Abort" NIL TV:CHOOSE-VARIABLE-VALUES-CHOICE-BOX-HANDLER 356. ...))
Local 7 (SUPERIOR): #<STANDARD-SCREEN Main Screen 4640147 exposed>
Local 8 (REVERSE-VIDEO-P): NIL
Local 9 (OSW): #<ZMACS-WINDOW-PANE Zmacs Window Pane 3 4667034 deactivated>
Local 10 (L): ("Done" ("Abort" **))
Local 11: (("Done" NIL TV:CHOOSE-VARIABLE-VALUES-CHOICE-BOX-HANDLER 42. ...) ("Abort" NIL TV:CHOOSE-VARIABLE-VALUES-CHOICE-BOX-HANDLER 356. ...))
Local 12: (("Abort" NIL TV:CHOOSE-VARIABLE-VALUES-CHOICE-BOX-HANDLER 356. ...))
Local 13: NIL
Local 14 (X): ("Abort" (*THROW ** NIL))
Local 15 (ELEM): TV:BORDER-MARGIN-WIDTH-VALUE
Local 16 (WINDOW): #<TEMPORARY-CHOOSE-VARIABLE-VALUES-WINDOW Temporary Choose Variable Values Window 1 4667353 deexposed>
Local 17 (IOB): #<IO-BUFFER 15006021: 1 entries, State: NIL>
Local 18 (.QUEUE-LEFT.): NIL
Local 19 (E): NIL


TV:SCREEN-EDITOR-EDIT-ATTRIBUTES (P.C. = 413)

 Arg 0 (WINDOW): #<ZMACS-WINDOW-PANE Zmacs Window Pane 3 4667034 deactivated>
Local 0 (BORDERS-P): T
Local 1 (LABEL-P): T
Local 2 (NAME-P): NIL
Local 3 (OLD-CURRENT-FONT-VALUE): #<FONT TVFONT 33062663>
Local 4 (OLD-MORE-P-VALUE): T
Local 5 (OLD-REVERSE-VIDEO-P): NIL
Local 6 (OLD-VSP): 2.
Local 7 (OLD-IN-ACTION): :NORMAL
Local 8 (OLD-OUT-ACTION): :NORMAL
Local 9 (OLD-OTHER-OUT-ACTION): NIL
Local 10 (OLD-CHAR-ALU-FCN): 7.
Local 11 (OLD-ERASE-ALU-FCN): 2.
Local 12 (OLD-PRIORITY-VALUE): NIL
Local 13 (OLD-SAVE-BITS-VALUE): T
Local 14 (OLD-LABEL-OR-NAME): NIL
Local 15 (OLD-BORDERS-SPEC): ((TV:DRAW-RECTANGULAR-BORDER 0. 0. 1. ...) (TV:DRAW-RECTANGULAR-BORDER 1. 0. 0. ...) (TV:DRAW-RECTANGULAR-BORDER -1. 1. 0. ...) (TV:DRAW-RECTANGULAR-BORDER 1. -1. -1. ...))
Local 16 (OLD-BORDER-MARGIN-WIDTH-VALUE): 1.
Local 17 (ABORT-P): NIL


TV:SYSTEM-MENU-EDIT-WINDOW-ATTRIBUTES (P.C. = 24)

 Arg 0 (WINDOW): #<ZMACS-WINDOW-PANE Zmacs Window Pane 3 4667034 deactivated>
 Arg 1 (IGNORE): 206.
 Arg 2 (IGNORE): 285.


(:METHOD TV:WINDOW-HACKING-MENU-MIXIN :EXECUTE-WINDOW-OP) (P.C. = 32)
  (SELF is #<DYNAMIC-MULTICOLUMN-MOMENTARY-WINDOW-HACKING-MENU Dynamic Multicolumn Momentary Window Hacking Menu 1 4641424 deactivated>)

 Arg 0 (OPERATION): :EXECUTE-WINDOW-OP
 Arg 1 (FUNCTION): TV:SYSTEM-MENU-EDIT-WINDOW-ATTRIBUTES


Remainder of stack:

(:METHOD TV:MENU-EXECUTE-MIXIN :EXECUTE) (P.C. = 164)
(:METHOD TV:MOMENTARY-MENU :COMBINED :EXECUTE) (P.C. = 52)
(:METHOD TV:BASIC-MENU :CHOOSE) (P.C. = 64)
(:INTERNAL (:METHOD TV:DYNAMIC-MULTICOLUMN-MOMENTARY-WINDOW-HACKING-MENU :COMBINED :CHOOSE) 0.) (P.C. = 74)
(:METHOD TV:BASIC-MOMENTARY-MENU :AROUND :CHOOSE) (P.C. = 62)
(:METHOD TV:DYNAMIC-MULTICOLUMN-MOMENTARY-WINDOW-HACKING-MENU :COMBINED :CHOOSE) (P.C. = 47)
(:INTERNAL TV:MOUSE-CALL-SYSTEM-MENU 0.) (P.C. = 42)
SI:PROCESS-RUN-FUNCTION-INTERNAL (P.C. = 100)
SI:PROCESS-TOP-LEVEL (P.C. = 246)
29-Mar-84 05:17:57-EST,885;000000000000
Received: from MIT-LISPM-9 by MIT-OZ via Chaosnet; 29 Mar 84 05:17-EST
Date: Thursday, 29 March 1984, 05:18-EST
From: Christopher Fry <cfry at MIT-OZ>
Subject: 5.0 Beta Rev7 available
To: bug-lispm at MIT-OZ

I've just configured a CADR Rel 5.0 Beta test rev 7 band
configured for MIT. So far as I know, know other configured bands
of this system exist.
Copy it from :
Cadr-4, LOD4    or
Cadr-9, LOD3  .

Its hard to figure out exactly how many blocks it needs.
It currently fits in 34000.
There is a bug in si:describe-partition where, if the 
actual number of blocks exceeds 32000, a garbage answer is printed
due to an overflow bug.

si:describe-partition claims the valid size of this band is
exactly 32000, which is hard to believe both because
its such a convienient number, and because I would have guessed
its actual size to be between 28k & 30k blocks.
29-Mar-84 06:55:03-EST,1106;000000000000
Received: from MIT-LISPM-18 by MIT-OZ via Chaosnet; 29 Mar 84 06:54-EST
Received: from MIT-LISPM-9 by MIT-OZ via Chaosnet; 29 Mar 84 05:17-EST
Date: Thursday, 29 March 1984, 05:18-EST
From: Christopher Fry <cfry at MIT-OZ>
Subject: 5.0 Beta Rev7 available
To: bug-lispm at MIT-OZ
Redistributed-to: info-lispm at MIT-OZ
Redistributed-by: Richard Mlynarik <Mly at MIT-OZ>
Redistributed-date: Thursday, 29 March 1984, 06:55-EST

I've just configured a CADR Rel 5.0 Beta test rev 7 band
configured for MIT. So far as I know, know other configured bands
of this system exist.
Copy it from :
Cadr-4, LOD4    or
Cadr-9, LOD3  .

Its hard to figure out exactly how many blocks it needs.
It currently fits in 34000.
There is a bug in si:describe-partition where, if the 
actual number of blocks exceeds 32000, a garbage answer is printed
due to an overflow bug.

si:describe-partition claims the valid size of this band is
exactly 32000, which is hard to believe both because
its such a convienient number, and because I would have guessed
its actual size to be between 28k & 30k blocks.
29-Mar-84 09:12:33-EST,1449;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 29 Mar 84 09:11-EST
Date: Thursday, 29 March 1984, 09:09-EST
From:  <KDF at MIT-PYGMALION>
Subject: File loading unreliable
To: BUG-LISPM at MIT-OZ

In Release 5.0 [Beta Test rev 7], on Lisp Machine Jimi Hendrix (3600):

In this revision file loading has become rather unreliable.  This error occurs in the background,
the most common bug is that it suddenly decides that some file isn't a BIN file, yet when one re-tries
loading it the file is correctly loaded.  In a system of about 50 files, the error happens two or three
times.  I'll send a trace of it when it next occurs. 

>>Error: FILE protocol violation at interrupt level from host PYGMALION, unknown transaction id in "T1886 I1881 ERROR MSC C Connection in illegal state"
While in the function (:INTERNAL FS:HOST-CHAOS-INTERRUPT-FUNCTION 1)  SI:PROCESS-RUN-FUNCTION-INTERNAL  SI:PROCESS-TOP-LEVEL

(:INTERNAL FS:HOST-CHAOS-INTERRUPT-FUNCTION 1):  (P.C. = 12)
   Arg 0 (PKT): #<Chaos Packet 55340521>
   Arg 1 (CONN): #<CHAOS Connection for FILE 1 to PYGMALION 75203451>

SI:PROCESS-RUN-FUNCTION-INTERNAL:  (P.C. = 51)
   Arg 0 (RESTART-ON-RESET): NIL
   Arg 1 (FUNCTION): #<DTP-COMPILED-FUNCTION (:INTERNAL FS:HOST-CHAOS-INTERRUPT-FUNCTION 1) 46477022>
   Rest arg (ARGS): (#<Chaos Packet 55340521> #<CHAOS Connection for FILE 1 to PYGMALION 75203451>)

SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
   Arg 0 (IGNORE): NIL
30-Mar-84 11:24:13-EST,2338;000000000000
Received: from MIT-EECS by MIT-OZ via Chaosnet; 30 Mar 84 11:21-EST
Date: Friday, 30 March 1984, 11:20-EST
From:  <KDF at MIT-PYGMALION>
Subject: Flakey File Loading
To: BUG-LISPM at MIT-OZ

In Release 5.0 [Beta Test rev 7], on Lisp Machine Jimi Hendrix (3600):

Here's an example of the flakiness mentioned in a previous message.  The file involved
is a legitimate BIN file, and in fact was just compiled by the machine.  The same problem
appears with files compiled previously, which I think rules out a compiler bug.  Re-trying
the load causes it to win completely.

>>Error: PYGMALION:USRD$:[KDF]ASSUME.BIN;6 is not a BIN file
While in the function SI:BIN-LOAD-START  SI:BIN-LOAD-FILE-INTERNAL  SI:BIN-LOAD-FILE

SI:BIN-LOAD-START:  (P.C. = 15)
   Arg 0 (STREAM): #<FILE-INPUT-BINARY-STREAM "PYGMALION:USRD$:[KDF]ASSUME.BIN" 33523223>
   Arg 1 (SKIP-READING-PROPERTY-LIST): NIL
   Local 2 (WORD): 0

SI:BIN-LOAD-FILE-INTERNAL:  (P.C. = 26)
   Arg 0 (STREAM): #<FILE-INPUT-BINARY-STREAM "PYGMALION:USRD$:[KDF]ASSUME.BIN" 33523223>
   Arg 1 (INTO-PACKAGE): "USER"
   Arg 2 (NO-MSG-P): T

SI:BIN-LOAD-FILE:  (P.C. = 22)
   Arg 0 (FILE): #<VMS-PATHNAME "PYGMALION:USRD$:[KDF]ASSUME.BIN">
   Arg 1 (INTO-PACKAGE): "USER"
   Arg 2 (NO-MSG-P): T

SI:FASLOAD-1:  (P.C. = 5)
   Arg 0 (INFILE): #<VMS-PATHNAME "PYGMALION:USRD$:[KDF]ASSUME.BIN">

SI:DO-FILE-TRANSFORMATIONS:  (P.C. = 242)

SI:PERFORM-TRANSFORMATIONS:  (P.C. = 166)
   Arg 0 (TRANSFORMATION-LIST): ((#<TRANSFORMATION FASLOAD 4141631> "USER" NIL NIL) (#<TRANSFORMATION FASLOAD 4141647> "USER" NIL NIL) (#<TRANSFORMATION FASLOAD 4141665> "USER" NIL NIL) (#<TRANSFORMATION FASLOAD 4141703> "USER" NIL NIL) (#<TRANSFORMATION FASLOAD 4141721> "USER" NIL NIL) (#<TRANSFORMATION FASLOAD 4141737> "USER" NIL NIL) (#<TRANSFORMATION FASLOAD 4141755> "USER" NIL NIL) (#<TRANSFORMATION FASLOAD 4142252> "USER" NIL NIL) (#<TRANSFORMATION FASLOAD 4142270> "USER" NIL NIL) (#<TRANSFORMATION FASLOAD 4142306> "USER" NIL NIL) ...)

MAKE-SYSTEM:  (P.C. = 222)
   Arg 0 (SYSTEM): NQP
   Rest arg (KEYWORDS): (:COMPILE :BATCH)

SI:*EVAL:  (P.C. = 370)
   Arg 0 (FORM): (MAKE-SYSTEM (QUOTE NQP) (QUOTE :COMPILE) (QUOTE :BATCH))

Rest of stack:
DEBACLE-TOP-LEVEL:  (P.C. = 161)  (from PYGMALION:USRD$:[KDF]DISPLAY)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
30-Mar-84 11:58:50-EST,1363;000000000000
Received: from SCRC-TENEX by MIT-OZ via Chaosnet; 30 Mar 84 11:55-EST
Date: Friday, 30 March 1984  11:48-EST
From: David C. Plummer <DCP at SCRC-TENEX>
To:   <KDF at MIT-PYGMALION>
Cc:   BUG-LISPM at MIT-OZ
Subject: Flakey File Loading
In-reply-to: The message of 30 Mar 1984 11:20-EST from <KDF at MIT-PYGMALION>

    Date: Friday, 30 March 1984, 11:20-EST
    From:  <KDF at MIT-PYGMALION>

    In Release 5.0 [Beta Test rev 7], on Lisp Machine Jimi Hendrix (3600):

    Here's an example of the flakiness mentioned in a previous
    message.  The file involved is a legitimate BIN file, and in fact
    was just compiled by the machine.  The same problem appears with
    files compiled previously, which I think rules out a compiler
    bug.  Re-trying the load causes it to win completely.

    >>Error: PYGMALION:USRD$:[KDF]ASSUME.BIN;6 is not a BIN file
    While in the function SI:BIN-LOAD-START  SI:BIN-LOAD-FILE-INTERNAL  SI:BIN-LOAD-FILE

Can you reproduce this if you put all the files on a non-VMS,
e.g., OZ?  One possible answer is that there is a subtle bug in
the VMS file server.  Also, does it always have the problem with
the same files?  --or-- does it always bomb on the next file
AFTER a certain set of files?  In other words, could some files
be confusing something which causes the next file to get trashed?
31-Mar-84 13:13:41-EST,459;000000000000
Received: from MIT-APIARY-8 by MIT-OZ via Chaosnet; 31 Mar 84 13:12-EST
Date: Saturday, 31 March 1984, 13:12-EST
From: David Chapman <Zvona at MIT-OZ>
Subject: Copy file feature
To: bug-lispm at MIT-OZ

could this happen entirely with in the file server when possible and
when copying within a single host?  This would be faster and would also
avoid the ``Can't copy AUTHOR because: WHEEL or OPERATOR required''
message you get when copying to 20X.
31-Mar-84 14:35:25-EST,730;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 31 Mar 84 14:30-EST
Date: 31 Mar 1984  14:33 EST (Sat)
Message-ID: <SR.EHPYC.12003787456.BABYL@MIT-SPEECH>
From: Scott Cyphers <SR.EHPYC@MIT-SPEECH>
To:   David Chapman <Zvona@MIT-OZ>
Cc:   bug-lispm@MIT-OZ
Subject: Copy file feature
In-reply-to: Msg of 31 Mar 1984 13:12-EST from David Chapman <Zvona at MIT-OZ>

If this is done, then maybe at the same time something should be put
in so that if A is copying files from B to C, A asks B and C if either
of them could do it, and if so, the copy is done directly from B to C
without involving A.  Perhaps after each file, the host actually doing
the copying could send something to A saying the file had been copied.
31-Mar-84 16:53:23-EST,1296;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 31 Mar 84 16:52-EST
Received: from SCRC-EUPHRATES by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 42886; Sat 31-Mar-84 16:54:41-EST
Date: Saturday, 31 March 1984, 16:54-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: Copy file feature
To: David Chapman <Zvona at MIT-OZ>
Cc: bug-lispm at MIT-OZ
In-reply-to: The message of 31 Mar 84 13:12-EST from David Chapman <Zvona at MIT-OZ>

    Date: Saturday, 31 March 1984, 13:12-EST
    From: David Chapman <Zvona at MIT-OZ>

    could this happen entirely with in the file server when possible and
    when copying within a single host?  This would be faster and would also
    avoid the ``Can't copy AUTHOR because: WHEEL or OPERATOR required''
    message you get when copying to 20X.

I don't see any reason to suppose that it would avoid that message.  If the
within-server copying was functionally identical to normal copying, it would
have the same problem.  If it wasn't functionally identical, then if no one
wanted that functionality, then why not change it in the regular copy command,
too?

Incidentally, I believe this is actually a bug in Tops-20.  I can send you
a brief discussion of the problem, assuming I will be able to find it, if
you are interested.
 1-Apr-84 11:18:35-EST,474;000000000000
Received: from MIT-BUDDY by MIT-OZ via Chaosnet; 1 Apr 84 11:18-EST
Date: Sunday, 1 April 1984, 11:20-EST
From: Steven C. Bagley <bagley at MIT-OZ>
Subject: arglist uses wrong function
To: BUG-LISPM at MIT-OZ

In Release 5.0 [Beta Test rev 7], on Lisp Machine Buddy Holly (3600):

do the following:

(defun foo (a b c d) (ignore a b c d))

then type

(foo 1 (list 2 3) 4

then control-shift-A (arglist).
it gives the arglist of LIST not FOO, as it should.
 1-Apr-84 11:23:26-EST,642;000000000000
Received: from MIT-BUDDY by MIT-OZ via Chaosnet; 1 Apr 84 11:23-EST
Date: Sunday, 1 April 1984, 11:24-EST
From: Steven C. Bagley <bagley at MIT-OZ>
Subject: zwei creates new buffers when switching selected windows.
To: BUG-LISPM at MIT-OZ, bug-zwei at MIT-OZ

In Release 5.0 [Beta Test rev 7], on Lisp Machine Buddy Holly (3600):

in zwei, save out the current buffer using c-x c-s.  IMMEDIATELY (before
it finishes saving the file), type select-T.  Type some stuff to the
foreign system, waiting for the file write to finish.  Switch back to
zwei using select-E.  Zwei will create a new buffer (*BUFFER-n* style)
and select it.
 1-Apr-84 16:53:37-EST,397;000000000000
Mail-From: ZVONA created at  1-Apr-84 16:52:45
Date: Sun 1 Apr 84 16:52-EST
From: David Chapman <ZVONA@MIT-OZ>
Subject: @ce echoing problem
To: bug-system@MIT-OZ, bug-lispm@MIT-OZ

Don't know who is guilty, so I'm sending this several places.

When supduping to OZ from a lispm (which has overstrike on backspace) the
@ce redisplay overstrikes like crazy and makes hash of your command.
 2-Apr-84 08:22:09-EST,966;000000000000
Received: from MIT-LISPM-24 by MIT-OZ via Chaosnet; 2 Apr 84 08:21-EST
Date: Monday, 2 April 1984, 08:21-EST
From: Harry L. Voorhees <HLV at MIT-OZ>
To: BUG-LISPM at MIT-OZ, bug-mit at MIT-OZ

In System 98.37, CADR 3.6, ZMail 53.13, MIT-Specific 22.0, microcode 306,
ZM MIT, on Lisp Machine Twenty-four:

I have compiled a function,

(defun list-bindings (&quote &rest names)
   (mapcar #'list names (mapcar #'eval names)))

and call if from another function to return an list of bindings...

(defun filter (&optional (n 10.) (dy 1.) (p 0.05)
  (...(list-bindings n dy p)...)

Oddly, this works if filter is evaluated.  But, when filter is compiled
I get an error saying that n (and the other variables) are undefined in
list-bindings.  (Using the debugger, it seems that they are undefined
in filter, too.)  

Is there some subtlety regarding compiled functions that I don't know about?
Or is this a bug in the compiler?

Harry Voorhees	
 2-Apr-84 13:27:10-EST,1704;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 2 Apr 84 13:24-EST
Date: 2 April 1984 13:20-EST
From: David Vinayak Wallace <GUMBY @ MIT-MC>
Subject:  Compiler bindings
To: HLV @ MIT-OZ
cc: BUG-LISPM @ MIT-OZ, bug-mit @ MIT-OZ

    Date: Monday, 2 April 1984, 08:21-EST
    From: Harry L. Voorhees <HLV%MIT-OZ at MIT-MC.ARPA>

    I have compiled a function,

    (defun list-bindings (&quote &rest names)
       (mapcar #'list names (mapcar #'eval names)))

    and call if from another function to return an list of bindings...

    (defun filter (&optional (n 10.) (dy 1.) (p 0.05)
      (...(list-bindings n dy p)...)

    Oddly, this works if filter is evaluated.  But, when filter is compiled
    I get an error saying that n (and the other variables) are undefined in
    list-bindings.  (Using the debugger, it seems that they are undefined
    in filter, too.)  

    Is there some subtlety regarding compiled functions that I don't know about?
    Or is this a bug in the compiler?


Indeed there is.  In the interpreter, all variables are special, so it
means something to get their bindings.  But in the compiler, local
variables are not visible outside their function of definition, so
your list-bindings function can't reference filter's locals.  There is
a section in the Chinual on this, I believe.

In any case, you don't want a special form (e.g. created with &QUOTE).
Try a macro:

(defmacro list-bindings (&rest names)
  (mapcar #'list names (mapcar #'symeval names)))

or, more efficiently,

(defmacro list-bindings (&rest names)
  (let ((pairs ()))
    (dolist (var names)
      (push (list var (eval var)) pairs))
    pairs))

david
 2-Apr-84 13:41:33-EST,1231;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 2 Apr 84 13:40-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 12637; Mon 2-Apr-84 13:40:10-EST
Date: Monday, 2 April 1984, 13:38-EST
From: David C. Plummer <DCP at SCRC-TENEX>
Subject: Compiler bindings
To: GUMBY at MIT-MC, HLV at MIT-OZ
cc: BUG-LISPM at MIT-OZ, bug-mit at MIT-OZ
In-Reply-To: The message of 2 Apr 84 13:20-EST from David Vinayak Wallace <GUMBY at MIT-MC>

    Date: 2 April 1984 13:20-EST
    From: David Vinayak Wallace <GUMBY @ MIT-MC>

    In any case, you don't want a special form (e.g. created with &QUOTE).
    Try a macro:

C'mon, Gumby...

    (defmacro list-bindings (&rest names)
      (mapcar #'list names (mapcar #'symeval names)))

    or, more efficiently,

    (defmacro list-bindings (&rest names)
      (let ((pairs ()))
	(dolist (var names)
	  (push (list var (eval var)) pairs))
	pairs))

Neither of these will work.  First of all, there are no backquotes.
Second of all, you are STILL calling SYMEVAL or EVAL which will not get
the local value.  Howzabout
	(defmacro list-bindings (&rest names)
	  `(list ,@(loop for name in names
			 collect `(list ',name ,name))))
 2-Apr-84 14:27:54-EST,771;000000000000
Received: from MIT-EECS by MIT-OZ via Chaosnet; 2 Apr 84 14:27-EST
Date: Monday, 2 April 1984, 14:25-EST
From:  <dove at MIT-TWEETY-PIE>
Subject: Fix for improper erasure in non-overstrike supdup
To: BUG-LISPM at MIT-OZ

In Release 5.0 [Beta Test rev 7], on Lisp Machine Tweety Pie (3600):

The following change to a patch in release 5.0 prevents the erasure
of the first character of previous lines when using supdup in
non-overstrike mode.  There are perhaps other "motion" characters that
should be checked for, but this is an improvement over previous
behavior.

(DEFMETHOD (TELNET:NVT-WINDOW :BEFORE :TYO) (CH &OPTIONAL IGNORE)
  (TELNET:WALLPAPER-OPERATION ':TYO CH)
  (UNLESS (OR TELNET:OVERSTRIKE-P (EQ CH #/RETURN)) (SEND SELF ':CLEAR-CHAR)))

 2-Apr-84 15:34:40-EST,573;000000000000
Received: from MIT-MORRISON by MIT-OZ via Chaosnet; 2 Apr 84 15:33-EST
Date: Monday, 2 April 1984, 15:30-EST
From: David Chapman <Zvona at MIT-OZ>
Subject: component systems
To: moon at MIT-OZ
Cc: bug-lispm at MIT-OZ

    From: David A. Moon <Moon at SCRC-TENEX>
    Subject: defsystem query

    You can use :do-components as a transformation, and make the
    module's :compile-load transformation depend on it.  See page 410
    of the Chine Nual. 

Unfortunately, you can't use a :do-components as a dependency in
:compile-load-init, which I've wanted.
 2-Apr-84 18:56:09-EST,548;000000000000
Received: from MIT-MORRISON by MIT-OZ via Chaosnet; 2 Apr 84 18:55-EST
Date: Monday, 2 April 1984, 18:52-EST
From: David Chapman <Zvona at MIT-OZ>
Subject: inspector mouseclick forces readin from read-eval-print pane
To: BUG-LISPM at MIT-OZ

In Release 5.0 [Beta Test rev 7], FEP 18, on Lisp Machine Jim Morrison (3600):

Bug or feature?  If I snarf a complete form into the read-eval-print
pane of the inspector with control-C and then mouse something in the
history pane, it forces reading of the form (as though i'd typed an
<end>).
