3-Jul-85 21:00:12-EDT,1389;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 7 May 85 13:33-EDT
Received: from SCRC-STONY-BROOK.ARPA by MIT-MC.ARPA;  7 MAY 85 13:33:28 EDT
Received: from PEACE.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 231855; Tue 7-May-85 13:28:46-EDT
Date: Tue, 7 May 85 13:31 EDT
From: Charles Hornig <Hornig@SCRC-STONY-BROOK.ARPA>
Subject: Mailer loses on soml delivery option
To: CJL%OZ@MIT-MC.ARPA, BUG-LISPM%OZ@MIT-MC.ARPA
In-Reply-To: <850503144931.4.FILE-SERVER@MIT-REAGAN>
Message-ID: <850507133154.4.HORNIG@PEACE.SCRC.Symbolics.COM>

    Date: Fri, 3 May 85 14:49 EDT
    From: CJL@OZ

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 8.6, Mailer 43.0,
    microcode TMC5-MIC 319, on Lisp Machine Ronald Reagan:

    If mail is received destined for foo@reagan here on reagan, regardless
    of who is logged in on the machine, send is assumed, and a window pops
    up and displays the message, asking for response. This is not the right
    thing. A send should only be done if user-id matches the destination of
    the message. It's really annoying to get tons of messages from the dover
    spooler aimed at people that aren't even in the building, but mail
    address is on reagan.

I'm not sure I understand this.  Do you mean if a SEND message is
received?  The LispM SMTP doesn't implement the SAML and SOML commands.

3-Jul-85 21:00:13-EDT,3453;000000000000 
Received: from MIT-REAGAN by MIT-OZ via Chaosnet; 7 May 85 13:35-EDT
Received: from SCRC-STONY-BROOK.ARPA by MIT-REAGAN via INTERNET with SMTP id 4256; 7 May 85 13:37:26-EDT
Received: from NEPONSET.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 231860; Tue 7-May-85 13:31:26-EDT
Date: Tue, 7 May 85 13:36 EDT
From: David C. Plummer in disguise <DCP@SCRC-QUABBIN.ARPA>
Subject: CL:PUSHNEW loses on symbol macros.
To: David A. Moon <Moon@SCRC-STONY-BROOK.ARPA>, Ken Haase <KWH@OZ.mit>
cc: BUG-LISPM@OZ.mit
In-Reply-To: <850423174808.3.MOON@EUPHRATES.SCRC.Symbolics.COM>
References: <850423081705.6.KWH@JIMI.MIT>,
            <850423153950.6.HORNIG@PEACE.SCRC.Symbolics.COM>,
            <850423161001.9.NFEP@NEPONSET.SCRC.Symbolics.COM>,
            <850423174808.3.MOON@EUPHRATES.SCRC.Symbolics.COM>,
            <850424205657.5.MOON@EUPHRATES.SCRC.Symbolics.COM>
File-References: Q:>Moon>Plans>zl-cl-setf-discrepancies.text
Message-ID: <850507133600.8.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Tuesday, 23 April 1985, 17:48-EST
    From: David A. Moon <Moon at SCRC-STONY-BROOK>

	Date: Tuesday, 23 April 1985, 08:17-EST
	From: Ken Haase <KWH at OZ>

	In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 8.4,
	Experimental Meta Representation Langauge 2.18, microcode TMC5-MIC 319, on Lisp Machine Jimi Hendrix:

	CL:PUSHNEW loses on symbol macros.  Try evaluating:
	   (CL:PUSHNEW '(LOAD-EXPERIMENTAL-PATCH 2 1) ZWEI:*LISP-INDENT-OFFSET-ALIST*)

	>>Error: No SETF method known for ZWEI:VARIABLE-VALUE forms (macroexpanded from ZWEI:*LISP-INDENT-OFFSET-ALIST*)
	While in the function CL:GET-SETF-METHOD-MULTIPLE-VALUE  CL:GET-SETF-METHOD  LT::EXPAND-PUSH
	While processing (CL:PUSHNEW '(LOAD-EXPERIMENTAL-PATCH 2 1) ZWEI:*LISP-INDENT-OFFSET-ALIST*)

    Thank you for the report.  ZWEI:VARIABLE-VALUE is only understood by the Zetalisp SETF,
    not by the Common Lisp one.  This is clearly a bug that we need to fix.  A possible
    workaround is to evaluate:

      (CL:DEFSETF ZWEI:VARIABLE-VALUE ZWEI:SET-VARIABLE-VALUE)

    BUG-LISPM@SCRC: The referenced file lists the 326 functions in the almost-6.0 world
    I was running that are known to the Zetalisp SETF and not to the Common Lisp SETF.
    I generated the file using m-X List Matching Symbols and a little post-processing
    (sorting, plus running a couple of little programs to annotate the listing).
    Of these 326, there are four (flagged with exclamation points) that I think are bugs
    (i.e. they are things that a Common Lisp program, using documented interfaces,
    might need to SETF).  I think we ought to fix these in a near-term release.
    There are also six, flagged "-- undefined", that shouldn't have Zetalisp
    SETF methods either; they are all holdovers from the LM-2.  We should also consider
    eliminating the Zetalisp SETF completely in a future major release; perhaps that
    would be an unreasonably incompatible change though.

Common Lisp 4.5 (which will be in Release 6.1) puts CL SETF properties
on the following accessors:
  SYS:%1D-AREF
  ZL:GET
  ZL:GETHASH
  LDB-TEST
  CHAR-BIT
  SYS:FLOAT-OPERATING-MODE
  SYS:FLOAT-OPERATION-STATUS
  ZWEI:VARIABLE-VALUE
These were the accessors I judged to be most user visible and worthy of
fixing for 6.1.  Many of the 326 are internal to the system or from
LMFS:DEFSTORAGE, and are therefore not user visible.

3-Jul-85 21:00:14-EDT,1944;000000000000
Received: from MIT-REAGAN by MIT-OZ via Chaosnet; 7 May 85 13:56-EDT
Received: from SCRC-STONY-BROOK.ARPA by MIT-REAGAN via INTERNET with SMTP id 4257; 7 May 85 13:58:33-EDT
Received: from NEPONSET.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 231887; Tue 7-May-85 13:52:22-EDT
Date: Tue, 7 May 85 13:56 EDT
From: David C. Plummer in disguise <DCP@SCRC-QUABBIN.ARPA>
Subject: LET-IF not using the environment its called with....
To: Ken Haase <KWH@OZ.mit>, BUG-LISPM@OZ.mit
In-Reply-To: <850404231522.1.KWH@JANIS.MIT.EDU>
Message-ID: <850507135655.0.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Thursday, 4 April 1985, 23:15-EST
    From: Ken Haase <KWH at OZ>

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.8,
    Experimental Meta Representation Langauge 2.10, microcode TMC5-MIC 319, on Lisp Machine Janis Joplin:

    This happened in the midst of a macro-expansion which called
    CONDITION-CASE, which called LET-IF inside of a stack list binding.  You
    can see in the second frame that LET-IF is trying to bind
    DBG:*BOUND-HANDLERS* to #:G0426, which it complains (and this is the
    relevant bug) is unbound.  However, if we look in the environment handed
    to the LET-IF (supposing that I am reading the environment correctly --
    i.e. as an alist -- we see that it was indeed passed a value for
    #:G0426, precisely the value:
       (#<CASE-HANDLER 23273305> #<LEXICAL-CLOSURE ** 43440053>)
    computed in the WITH-STACK-LIST* above it.

    This bug can be reliably reproduced by trying to compile the file
    "OZ:<LMLIB>PP-6.LISP".

LET-IF didn't work very well interpreted at all, which another customer
also found out.  A simple case is to EVALUATE
	(defmacro me-maybe (cond form)
	  (condition-case-if cond ()
	      form
	    (error form)))
and then try to macro expand
	(me-maybe t foo)
Fixed in 271.51, which will be part of 6.1.

3-Jul-85 21:00:14-EDT,1767;000000000000  
Received: from MIT-MC by MIT-OZ via Chaosnet; 7 May 85 14:09-EDT
Received: from MIT-OZ by MIT-MC via Chaosnet; 7 MAY 85  14:04:12 EDT
Date: Tue, 7 May 1985  13:58 EDT
Message-ID: <CJL.12109152061.BABYL@MIT-OZ>
From: Chris Lindblad <CJL%MIT-OZ@MIT-MC.ARPA>
To:   Charles Hornig <Hornig@SCRC-STONY-BROOK.ARPA>
Cc:   BUG-LISPM%OZ@MIT-MC.ARPA, CJL%OZ@MIT-MC.ARPA
Subject: Mailer loses on soml delivery option
In-reply-to: Msg of 7 May 1985  13:31-EDT from Charles Hornig <Hornig at SCRC-STONY-BROOK.ARPA>

    Date: Tuesday, 7 May 1985  13:31-EDT
    From: Charles Hornig <Hornig at SCRC-STONY-BROOK.ARPA>

        Date: Fri, 3 May 85 14:49 EDT
        From: CJL@OZ

        In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 8.6, Mailer 43.0,
        microcode TMC5-MIC 319, on Lisp Machine Ronald Reagan:

        If mail is received destined for foo@reagan here on reagan, regardless
        of who is logged in on the machine, send is assumed, and a window pops
        up and displays the message, asking for response. This is not the right
        thing. A send should only be done if user-id matches the destination of
        the message. It's really annoying to get tons of messages from the dover
        spooler aimed at people that aren't even in the building, but mail
        address is on reagan.

    I'm not sure I understand this.  Do you mean if a SEND message is
    received?  The LispM SMTP doesn't implement the SAML and SOML commands.

You're right, I misunderstood what was going on. The mailers here
first try to do a SEND to foo@MIT-REAGAN, and then mail if that failed.
The problem is lisp machines accept sends to any name. Sigh. It would be
nice if they only accepted sends to the person using the machine.
3-Jul-85 21:00:15-EDT,1712;000000000000  
Received: from MIT-MC by MIT-OZ via Chaosnet; 7 May 85 15:08-EDT
Received: from SCRC-STONY-BROOK.ARPA by MIT-MC.ARPA;  7 MAY 85 15:07:28 EDT
Received: from NEPONSET.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 231984; Tue 7-May-85 15:02:45-EDT
Date: Tue, 7 May 85 15:07 EDT
From: David C. Plummer in disguise <DCP@SCRC-QUABBIN.ARPA>
Subject: hashtables
To: allegra!sweet!kwc@mit-vax.mit, bug-lispm@MIT-MC.ARPA
In-Reply-To: The message of 6 May 85 13:25-EDT from allegra!sweet!kwc@mit-vax
Supersedes: <850507150708.5.NFEP@NEPONSET.SCRC.Symbolics.COM>
Message-ID: <850507150720.6.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Mon, 6 May 85 13:25:30 edt
    From: allegra!sweet!kwc@mit-vax

	Date: Fri, 3 May 85 13:50 EDT
	From: David C. Plummer in disguise <allegra!mit-eddie!DCP@SCRC-QUABBIN.ARPA>
	Subject: Possible problem with EQUAL hash tables interacting with the GC.

	    <deleted to save space - kwc>

	There is a known problem with the ephemeral GC and EQUAL-HASH-TABLES.
	The problem comes up when the key is a list with an item someplace in
	its structure that is ephemeral and an object that hashes using %pointer
	(for example an instance or an array).  Your key is still in there (you
	can find it with :MAP-HASH), but :GET-HASH, :PUT-HASH, :MODIFY-HASH,
	etc, won't find it because the EGC will flip, will cause %pointer to
	change, but WON'T tell the hash table to rehash.  We are still trying to
	figure out the best, most compatible, least dangerous fix to this subtle
	interaction.
    
	Does this sound like your problem?

    My keys are almost always strings.

Not helpful.  What are they when they DON'T happen to be strings?

3-Jul-85 21:00:15-EDT,2754;000000000000
Received: from MIT-HTVAX by MIT-OZ via Chaosnet; 7 May 85 15:24-EDT
Received: from SCRC-STONY-BROOK.ARPA (scrc-stony-brook.arpa.ARPA) by MIT-HTVAX.ARPA (4.12/4.7) 
	id AA04709; Tue, 7 May 85 15:23:36 edt
Received: from NEPONSET.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 232007; Tue 7-May-85 15:17:00-EDT
Date: Tue, 7 May 85 15:21 EDT
From: David C. Plummer in disguise <DCP@SCRC-QUABBIN.ARPA>
Subject: [QUAM at SRI-AI: Forwarded]
To: Richard Lamson <rsl@RUSSIAN.SPA.Symbolics.COM>,
        David A. Moon <Moon@SCRC-STONY-BROOK.ARPA>,
        Ken Haase <KWH%OZ@MIT-HTVAX.ARPA>,
        David C. Plummer in disguise <DCP@SCRC-QUABBIN.ARPA>,
        allegra!sweet!kwc@mit-eddie.mit, QUAM@SRI-AI.ARPA,
        BUG-LISPM%OZ@MIT-HTVAX.ARPA
Cc: HOSS@SCRC-STONY-BROOK.ARPA
In-Reply-To: <850322135433.6.RSL@RUSSIAN.SPA.Symbolics.COM>,
             <850322183500.2.MOON@EUPHRATES.SCRC.Symbolics.COM>,
             <850322163739.6.RSL@RUSSIAN.SPA.Symbolics.COM>,
             <850322212623.8.MOON@EUPHRATES.SCRC.Symbolics.COM>,
             <850503103229.1.KWH@MOON>,
             <850503135025.8.NFEP@NEPONSET.SCRC.Symbolics.COM>,
             <850410115225.9.NFEP@NEPONSET.SCRC.Symbolics.COM>,
             The message of 3 May 85 20:53-EDT from allegra!sweet!kwc@mit-eddie,
             The message of 6 May 85 13:25-EDT from allegra!sweet!kwc@mit-vax
Message-Id: <850507152133.7.NFEP@NEPONSET.SCRC.Symbolics.COM>

The referenced messages concern a problem interaction between the
ephemeral garbarge collector and EQUAL hash tables.  A simple test
program to show the problem is

(defflavor foobar ()())

(defvar *hash*)

(defun foo ()
  (setq *hash* (make-equal-hash-table))
  (loop repeat 10.
	as item = (list-in-area neti:network-cons-area (make-instance 'foobar))
	do (send *hash* :put-hash item item))
  (list (loop for entry being the hash-elements of *hash* with-key key
	      always (eq (send *hash* :get-hash key) entry))
	(loop with start = si:%gc-generation-number
	      until ( start si:%gc-generation-number)
	      do (make-array 1000.)
	      finally (process-wait "GC finished" #'symeval 'si:%gc-flip-ready)
		      (return "and after..."))
	(loop for entry being the hash-elements of *hash* with-key key
	      always (eq (send *hash* :get-hash key) entry))))

(foo) in the buggy version returns (T "and after..." NIL) instead of
(T "and after..." T). If you (describe *hash*) you will see all 10
elements still there.  Patch System 271.51, which will be part of 6.1,
fixes this problem.  Programs that keep track of the second value of
SI:EQUAL-HASH will have to be changed slightly; new information about
SI:EQUAL-HASH will be in the 6.1 release notes.

3-Jul-85 21:00:16-EDT,1645;000000000000    
Received: from MIT-MC by MIT-OZ via Chaosnet; 7 May 85 16:43-EDT
Received: from SCRC-STONY-BROOK.ARPA by MIT-MC.ARPA;  7 MAY 85 15:07:23 EDT
Received: from NEPONSET.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 231982; Tue 7-May-85 15:02:34-EDT
Date: Tue, 7 May 85 15:07 EDT
From: David C. Plummer in disguise <DCP@SCRC-QUABBIN.ARPA>
Subject: hashtables
To: allegra!sweet!kwc@mit-vax, bug-lispm@MIT-MC.ARPA
In-Reply-To: The message of 6 May 85 13:25-EDT from allegra!sweet!kwc@mit-vax
Message-ID: <850507150708.5.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Mon, 6 May 85 13:25:30 edt
    From: allegra!sweet!kwc@mit-vax

	Date: Fri, 3 May 85 13:50 EDT
	From: David C. Plummer in disguise <allegra!mit-eddie!DCP@SCRC-QUABBIN.ARPA>
	Subject: Possible problem with EQUAL hash tables interacting with the GC.

	    <deleted to save space - kwc>

	There is a known problem with the ephemeral GC and EQUAL-HASH-TABLES.
	The problem comes up when the key is a list with an item someplace in
	its structure that is ephemeral and an object that hashes using %pointer
	(for example an instance or an array).  Your key is still in there (you
	can find it with :MAP-HASH), but :GET-HASH, :PUT-HASH, :MODIFY-HASH,
	etc, won't find it because the EGC will flip, will cause %pointer to
	change, but WON'T tell the hash table to rehash.  We are still trying to
	figure out the best, most compatible, least dangerous fix to this subtle
	interaction.
    
	Does this sound like your problem?

    My keys are almost always strings.

Not helpful.  What are they when they DON'T happen to be strings?

3-Jul-85 21:00:16-EDT,2017;000000000000  
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 7 May 85 17:02-EDT
Received: from SCRC-STONY-BROOK.ARPA by MIT-REAGAN via INTERNET with SMTP id 4305; 7 May 85 16:58:22-EDT
Received: from NEPONSET.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 232136; Tue 7-May-85 16:44:07-EDT
Date: Tue, 7 May 85 16:48 EDT
From: David C. Plummer in disguise <DCP@SCRC-QUABBIN.ARPA>
Subject: Common-Lisp Syntax
To: David C. Plummer in disguise <DCP@SCRC-QUABBIN.ARPA>,
    Scott Cyphers <sr.ehpyc@MIT-SPEECH.mit>, BUG-LISPM@MIT-SPEECH.mit
In-Reply-To: <850411164229.0.NFEP@NEPONSET.SCRC.Symbolics.COM>
References: <850410162451.4.CYPHER@MIT-YOGI.MIT>,
            <850411100643.0.SWM@THAMES.SCRC.Symbolics.COM>,
            <850411100643.0.SWM@THAMES.SCRC.Symbolics.COM>,
            <850411164229.0.NFEP@NEPONSET.SCRC.Symbolics.COM>
Message-ID: <850507164844.7.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Thursday, 11 April 1985, 16:42-EST
    From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>

	Date: Wednesday, 10 April 1985, 16:24-EST
	From: Scott Cyphers <sr.ehpyc at MIT-SPEECH>

	In Symbolics 3670 Release 6.0, IP-TCP 29.0, Experimental ZOO 5.4,
	Experimental Spire-Macros 5.1, Experimental Attribute 5.0,
	Experimental Compute 5.2, Experimental Audio 4.0,
	Experimental Speech-Attributes 4.0, Experimental Display 6.0,
	Experimental Speech-Layouts 6.0, Experimental Prtout 4.0,
	Experimental Versatec 5.0, Experimental Spire 16.0, ZOO-SPIRE 1.0,
	microcode TMC5-IO4-FPA-MIC 319, on Lisp Machine Yogi:

	I'm not really sure what the syntax is supposed to do for me, but when
	I set the syntax to be common-lisp, Zmacs indents LOOP the old way.

    Indeed.  SWM gave a magic incantation to somebody the other day, perhaps
    it was only on the local mailing list.  The problem is that CL:LOOP is
    not EQ to ZL:LOOP.  This incantation is probably good enough:
	    (push '(cl:loop . zwei:indent-loop) zwei:*lisp-indent-offset-alist*)
Fixed for 6.1.

3-Jul-85 21:00:16-EDT,2080;000000000000    
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 7 May 85 17:03-EDT
Received: from SCRC-STONY-BROOK.ARPA by MIT-REAGAN via INTERNET with SMTP id 4306; 7 May 85 16:58:39-EDT
Received: from NEPONSET.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 232137; Tue 7-May-85 16:44:27-EDT
Date: Tue, 7 May 85 16:49 EDT
From: David C. Plummer in disguise <DCP@SCRC-QUABBIN.ARPA>
Subject: Common-Lisp Syntax
To: David C. Plummer in disguise <DCP@SCRC-QUABBIN.ARPA>,
    Scott Cyphers <sr.ehpyc@MIT-SPEECH.mit>, BUG-LISPM@MIT-SPEECH.mit
In-Reply-To: <850411164229.0.NFEP@NEPONSET.SCRC.Symbolics.COM>
References: <850410162451.4.CYPHER@MIT-YOGI.MIT>,
            <850411100643.0.SWM@THAMES.SCRC.Symbolics.COM>,
            <850411100643.0.SWM@THAMES.SCRC.Symbolics.COM>,
            <850411164229.0.NFEP@NEPONSET.SCRC.Symbolics.COM>
Supersedes: <850507164844.7.NFEP@NEPONSET.SCRC.Symbolics.COM>
Message-ID: <850507164902.8.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Thursday, 11 April 1985, 16:42-EST
    From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>

	Date: Wednesday, 10 April 1985, 16:24-EST
	From: Scott Cyphers <sr.ehpyc at MIT-SPEECH>

	In Symbolics 3670 Release 6.0, IP-TCP 29.0, Experimental ZOO 5.4,
	Experimental Spire-Macros 5.1, Experimental Attribute 5.0,
	Experimental Compute 5.2, Experimental Audio 4.0,
	Experimental Speech-Attributes 4.0, Experimental Display 6.0,
	Experimental Speech-Layouts 6.0, Experimental Prtout 4.0,
	Experimental Versatec 5.0, Experimental Spire 16.0, ZOO-SPIRE 1.0,
	microcode TMC5-IO4-FPA-MIC 319, on Lisp Machine Yogi:

	I'm not really sure what the syntax is supposed to do for me, but when
	I set the syntax to be common-lisp, Zmacs indents LOOP the old way.

    Indeed.  SWM gave a magic incantation to somebody the other day, perhaps
    it was only on the local mailing list.  The problem is that CL:LOOP is
    not EQ to ZL:LOOP.  This incantation is probably good enough:
	    (push '(cl:loop . zwei:indent-loop) zwei:*lisp-indent-offset-alist*)
Fixed for 6.1.

3-Jul-85 21:00:17-EDT,1289;000000000000
Received: from MIT-SARAH by MIT-OZ via Chaosnet; 7 May 85 17:13-EDT
Date: Tuesday, 7 May 1985, 17:10-EDT
From: Tom Cloney <Muse at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In Experimental System 99.13, CADR 4.0, Experimental ZMail 54.3,
MIT-Specific 23.0, Experimental Camera 5.0, microcode 320, GC@2,
on Sarah Bernhardt:


Insert your description of the circumstances here:

I periodically get this error after doing (gc-on). I haven't the foggiest what it means.

>>TRAP 80 (ARGTYP LOCATIVE PP 0)
The first argument to %STORE-CONDITIONAL, NIL, was of the wrong type.
The function expected a locative.
Backtrace from the debugger:

SI:GC-PROCESS (P.C. = 126)

Local 0 (COMMITTED-FREE-SPACE): 9947677
Local 1 (FREE-SPACE): 9781290
Local 2 (POINTER): NIL
Local 3 (ALREADY-MINE): NIL


SI::PROCESS-TOP-LEVEL (P.C. = 115)

   --Defaulted args:--
 Arg 0 (IGNORE): NIL
Local 0: ("Reset and arrest process ~A." "Garbage Collector")
Local 1: (CONDITION ("Reset and arrest process ~A." "Garbage Collector") T ("Reset and arrest process ~A." "Garbage Collector") ...)
Local 2: ("Restart process ~A." "Garbage Collector")
Local 3: ((SYS:ABORT CONDITION) ("Restart process ~A." "Garbage Collector") T ("Restart process ~A." "Garbage Collector") ...)
Local 4 (IGNORE): NIL
3-Jul-85 21:00:17-EDT,9051;000000000000   
Received: from MIT-MC by MIT-OZ via Chaosnet; 7 May 85 17:59-EDT
Received: from MIT-OZ by MIT-MC via Chaosnet; 7 MAY 85  17:53:31 EDT
Received: from MIT-MORRISON by MIT-OZ via Chaosnet; 7 May 85 17:44-EDT
Date: Tue, 7 May 85 17:43 EDT
From: Gavan Duffy <GAVAN@OZ>
Subject: Can't dired Multics
To: RWK@SCRC-YUKON.ARPA, GAVAN@OZ
cc: BUG-LISPM@MIT-MC.ARPA
In-Reply-To: <850507115207.7.RWK@CROW.SCRC.Symbolics.COM>
Message-ID: <850507174332.2.GAVAN@MORRISON>

    Date: Tue, 7 May 85 11:52 EDT
    From: Robert W. Kerns <RWK@SCRC-YUKON.ARPA>

	Date: Mon, 6 May 85 22:03 EDT
	From: Gavan Duffy <GAVAN@OZ>

	In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.0,
	Experimental RELATUS 138.0, microcode TMC5-MIC 319, FEP 22, on Lisp Machine Jim Morrison:

	    Date: Mon, 6 May 85 19:15 EDT
	    From: Robert W. Kerns <RWK@SCRC-YUKON.ARPA>

		Date: Sat, 4 May 85 19:01 EDT
		From: Gavan Duffy <GAVAN@OZ>

		How do I dired a Multics?

	    This was noticed a few weeks ago here, so I have a quick answer for you:

	    ; From file pathst.lisp >rel-6>sys>io Q: (395)
	    #8R FILE-SYSTEM::(GLOBAL:COMPILER-LET ((GLOBAL:PACKAGE (GLOBAL:PKG-FIND-PACKAGE "FILE-SYSTEM")))
   

	    (DEFMETHOD (MULTICS-FAMILY-PATHNAME-MIXIN :VALID-NAME-P) (NAM)
	      (OR (STRINGP NAM) (MEMQ NAM '(NIL :WILD))))

	    (DEFMETHOD (MULTICS-FAMILY-PATHNAME-MIXIN :VALID-TYPE-P) (TYP)
	      (OR (STRINGP TYP) (MEMQ TYP '(NIL :UNSPECIFIC :WILD))))

	    )

	Nice try.  I copmpiled your code, and here's what I got.

    This is a different bug.  You'll need to keep the fix I gave you after
    you apply Hornig's fix in his message.  BTW, to answer the question
    you asked in a later message, Charlie meant "IP-TCP:", not "IP_TCP:".

OK.  I did all that.  The connection was made and the directory list even
started to happen.  But then I got the following error repeatedly.  Is this
Multics screwing me, or is it the lispm?

>>Error: Block mode stream closed unexpectedly.
While in the function (:METHOD TCP::FTP-BLOCK-MODE-INPUT-MIXIN :NEXT-INPUT-BUFFER)  (:INTERNAL (:METHOD TCP::FTP-BLOCK-MODE-CHARACTER-INPUT-STREAM :COMBINED :NEXT-INPUT-BUFFER) 0)  (:METHOD SI:ASCII-TRANSLATING-BUFFERED-INPUT-STREAM-MIXIN :WHOPPER :NEXT-INPUT-BUFFER)

(:METHOD TCP::FTP-BLOCK-MODE-INPUT-MIXIN :NEXT-INPUT-BUFFER):  (P.C. = 27)
   Arg 0 (SELF): #<FTP-BLOCK-MODE-CHARACTER-INPUT-STREAM "MULTICS: >udd>Datanet>Duffy>**" 13460567>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TCP::FTP-BLOCK-MODE-INPUT-MIXIN -- 2. IV's, 0. FL's 13456141>
   Arg 2 (OPERATION): :NEXT-INPUT-BUFFER
   Arg 3 (IGNORE): NIL
   Local 4 (LEN): NIL
   Local 5 (HEADER-LENGTH): 0
   Local 6 (EOF): T

(:INTERNAL (:METHOD TCP::FTP-BLOCK-MODE-CHARACTER-INPUT-STREAM :COMBINED :NEXT-INPUT-BUFFER) 0):  (P.C. = 11)
   Arg 0 (SELF): #<FTP-BLOCK-MODE-CHARACTER-INPUT-STREAM "MULTICS: >udd>Datanet>Duffy>**" 13460567>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TCP::FTP-BLOCK-MODE-CHARACTER-INPUT-STREAM -- 4. IV's, 7. FL's 36320406>
   Arg 2 (.OPERATION.): :NEXT-INPUT-BUFFER
   Rest arg (.DAEMON-CALLER-ARGS.): (NIL)

(:METHOD SI:ASCII-TRANSLATING-BUFFERED-INPUT-STREAM-MIXIN :WHOPPER :NEXT-INPUT-BUFFER):  (P.C. = 14)
   Arg 0 (SELF): #<FTP-BLOCK-MODE-CHARACTER-INPUT-STREAM "MULTICS: >udd>Datanet>Duffy>**" 13460567>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:ASCII-TRANSLATING-BUFFERED-INPUT-STREAM-MIXIN -- 5. IV's, 0. FL's 36320431>
   Arg 2 (.WHOPPER-CONTINUATION.): #<DTP-COMPILED-FUNCTION (:INTERNAL (:METHOD TCP::FTP-BLOCK-MODE-CHARACTER-INPUT-STREAM :COMBINED :NEXT-INPUT-BUFFER) 0) 76574656>
   Arg 3 (.OLD-SELF-MAPPING-TABLE.): #<Map to flavor TCP::FTP-BLOCK-MODE-CHARACTER-INPUT-STREAM -- 4. IV's, 7. FL's 36320406>
   Arg 4 (.OPERATION.): :NEXT-INPUT-BUFFER
   Arg 5 (NO-WAIT-P): NIL

(:METHOD TCP::FTP-BLOCK-MODE-CHARACTER-INPUT-STREAM :COMBINED :NEXT-INPUT-BUFFER):  (P.C. = 13)
   Arg 0 (SELF): #<FTP-BLOCK-MODE-CHARACTER-INPUT-STREAM "MULTICS: >udd>Datanet>Duffy>**" 13460567>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TCP::FTP-BLOCK-MODE-CHARACTER-INPUT-STREAM -- 4. IV's, 7. FL's 36320406>
   Arg 2 (.OPERATION.): :NEXT-INPUT-BUFFER
   Rest arg (.DAEMON-CALLER-ARGS.): (NIL)

(:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :SETUP-NEXT-INPUT-BUFFER):  (P.C. = 12)
   Arg 0 (SELF): #<FTP-BLOCK-MODE-CHARACTER-INPUT-STREAM "MULTICS: >udd>Datanet>Duffy>**" 13460567>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:BASIC-BUFFERED-INPUT-STREAM -- 3. IV's, 0. FL's 36320440>
   Arg 2 (OPERATION): :SETUP-NEXT-INPUT-BUFFER
   Arg 3 (NO-HANG-P): NIL
   Arg 4 (EOF): NIL

(:METHOD TCP::FTP-BLOCK-MODE-CHARACTER-INPUT-STREAM :COMBINED :SETUP-NEXT-INPUT-BUFFER):  (P.C. = 11)
   Arg 0 (SELF): #<FTP-BLOCK-MODE-CHARACTER-INPUT-STREAM "MULTICS: >udd>Datanet>Duffy>**" 13460567>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TCP::FTP-BLOCK-MODE-CHARACTER-INPUT-STREAM -- 4. IV's, 7. FL's 36320406>
   Arg 2 (.OPERATION.): :SETUP-NEXT-INPUT-BUFFER
   Rest arg (.DAEMON-CALLER-ARGS.): (NIL NIL)

(:METHOD SI:BUFFERED-LINE-INPUT-MIXIN :LINE-IN):  (P.C. = 17)
   Arg 0 (SELF): #<FTP-BLOCK-MODE-CHARACTER-INPUT-STREAM "MULTICS: >udd>Datanet>Duffy>**" 13460567>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:BUFFERED-LINE-INPUT-MIXIN -- 3. IV's, 0. FL's 36320471>
   Arg 2 (OPERATION): :LINE-IN
   --Defaulted args:--
   Arg 3 (LEADER): NIL

(:METHOD FS:TCP-FTP-CONN :DIRECTORY-LIST):  (P.C. = 32)
   Arg 0 (SELF): #<TCP-FTP-CONN 13455347>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:TCP-FTP-CONN -- 8. IV's, 0. FL's 36304031>
   Arg 2 (OPERATION): :DIRECTORY-LIST
   Arg 3 (PATHNAME): #<MULTICS-PATHNAME "MULTICS: >udd>Datanet>Duffy>**">
   Arg 4 (OPTIONS): (:SORTED :DELETED)

(:METHOD FS:TCP-FTP-FILE-ACCESS-PATH :DIRECTORY-LIST):  (P.C. = 12)
   Arg 0 (SELF): #<TCP-FTP-FILE-ACCESS-PATH MULTICS using TCP-FTP 13455336>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:TCP-FTP-FILE-ACCESS-PATH -- 2. IV's, 2. FL's 36304014>
   Arg 2 (OPERATION): :DIRECTORY-LIST
   Rest arg (ARGS): (#<MULTICS-PATHNAME "MULTICS: >udd>Datanet>Duffy>**"> (:SORTED :DELETED))

(:METHOD FS:ACTIVE-PATHNAME-MIXIN :DIRECTORY-LIST):  (P.C. = 12)
   Arg 0 (SELF): #<MULTICS-PATHNAME "MULTICS: >udd>Datanet>Duffy>**">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:ACTIVE-PATHNAME-MIXIN -- 1. IV's, 0. FL's 105226543>
   Arg 2 (OPERATION): :DIRECTORY-LIST
   Arg 3 (OPTIONS): (:SORTED :DELETED)

FS:DIRECTORY-LIST:  (P.C. = 114)
   Arg 0 (FILENAME): #<MULTICS-PATHNAME "MULTICS: >udd>Datanet>Duffy>**">
   Rest arg (OPTIONS): (:SORTED :DELETED)

(:METHOD ZWEI:DIRED-NODE-MIXIN :REVERT):  (P.C. = 42)
   Arg 0 (SELF): #<DIRED-BUFFER "*Dired-1*" 11202137>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:DIRED-NODE-MIXIN -- 4. IV's, 0. FL's 143215622>
   Arg 2 (OPERATION): :REVERT

(:METHOD ZWEI:DIRED-BUFFER :COMBINED :REVERT):  (P.C. = 11)
   Arg 0 (SELF): #<DIRED-BUFFER "*Dired-1*" 11202137>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:DIRED-BUFFER -- 3. IV's, 4. FL's 143215610>
   Arg 2 (.OPERATION.): :REVERT
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

(:METHOD ZWEI:ZMACS-EDITOR :FIND-SPECIAL-BUFFER):  (P.C. = 45)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 121171573>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMACS-EDITOR -- 3. IV's, 0. FL's 142345763>
   Arg 2 (OPERATION): :FIND-SPECIAL-BUFFER
   Arg 3 (TYPE): :DIRED
   Arg 4 (NEW-P): T
   Rest arg (SETS): (:SET-PATHNAME #<MULTICS-PATHNAME "MULTICS: >udd>Datanet>Duffy>**">)

(:METHOD ZWEI:ZMACS-EDITOR :SELECT-SPECIAL-BUFFER):  (P.C. = 10)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 121171573>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMACS-EDITOR -- 3. IV's, 0. FL's 142345763>
   Arg 2 (OPERATION): :SELECT-SPECIAL-BUFFER
   Arg 3 (TYPE): :DIRED
   Arg 4 (NEW-P): T
   Rest arg (SETS): (:SET-PATHNAME #<MULTICS-PATHNAME "MULTICS: >udd>Datanet>Duffy>**">)

ZWEI:DIRECTORY-EDIT:  (P.C. = 22)
   Arg 0 (PATHNAME): #<MULTICS-PATHNAME "MULTICS: >udd>Datanet>Duffy>**">

ZWEI:COM-DIRED:  (P.C. = 5)

ZWEI:COM-EXTENDED-COMMAND:  (P.C. = 27)

ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
   Arg 0 (COMMAND): ZWEI:COM-EXTENDED-COMMAND
   Arg 1 (CHAR): 600
   Arg 2 (PREFIX-CHAR): NIL
   Arg 3 (HOOK-LIST): NIL

ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
   Arg 0 (CH): 600

(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 233)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 121171573>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:EDITOR -- 12. IV's, 0. FL's 142346020>
   Arg 2 (OPERATION): :EDIT
   --Defaulted args:--
   Arg 3 (TOP-LEVEL-P): T
   Arg 4 (DESCRIPTION): NIL

(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 60)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 121171573>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:TOP-LEVEL-EDITOR -- 13. IV's, 1. FL's 142345776>
   Arg 2 (.OPERATION.): :EDIT
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 51)

SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
   Arg 0 (IGNORE): NIL
3-Jul-85 21:00:18-EDT,1917;000000000000  
Received: from MIT-MC by MIT-OZ via Chaosnet; 7 May 85 19:13-EDT
Received: from SCRC-STONY-BROOK.ARPA by MIT-MC.ARPA;  7 MAY 85 19:13:53 EDT
Received: from CUYAHOGA.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 232265; Tue 7-May-85 19:09:12-EDT
Date: Tue, 7 May 85 19:14 EDT
From: Robert A. Cassels <Cassels@TENEX.SCRC.Symbolics.COM>
Subject: hashtables
To: DCP@SCRC-QUABBIN.ARPA, allegra!sweet!kwc@mit-vax.mit,
    bug-lispm@MIT-MC.ARPA
In-Reply-To: <850507150720.6.NFEP@NEPONSET.SCRC.Symbolics.COM>
Message-ID: <850507191405.2.CASSELS@CUYAHOGA.SCRC.Symbolics.COM>

    Date: Tue, 7 May 85 15:07 EDT
    From: David C. Plummer in disguise <DCP@SCRC-QUABBIN.ARPA>

	Date: Mon, 6 May 85 13:25:30 edt
	From: allegra!sweet!kwc@mit-vax

	    Date: Fri, 3 May 85 13:50 EDT
	    From: David C. Plummer in disguise <allegra!mit-eddie!DCP@SCRC-QUABBIN.ARPA>
	    Subject: Possible problem with EQUAL hash tables interacting with the GC.

		<deleted to save space - kwc>

	    There is a known problem with the ephemeral GC and EQUAL-HASH-TABLES.
	    The problem comes up when the key is a list with an item someplace in
	    its structure that is ephemeral and an object that hashes using %pointer
	    (for example an instance or an array).  Your key is still in there (you
	    can find it with :MAP-HASH), but :GET-HASH, :PUT-HASH, :MODIFY-HASH,
	    etc, won't find it because the EGC will flip, will cause %pointer to
	    change, but WON'T tell the hash table to rehash.  We are still trying to
	    figure out the best, most compatible, least dangerous fix to this subtle
	    interaction.
    
	    Does this sound like your problem?

	My keys are almost always strings.

    Not helpful.  What are they when they DON'T happen to be strings?

Hmm....  Are they simple strings, or are they possibly indirect arrays,
like the result of NSUBSTRING?

3-Jul-85 21:00:18-EDT,4806;000000000000   
Received: from MIT-MC by MIT-OZ via Chaosnet; 7 May 85 19:20-EDT
Received: from MIT-OZ by MIT-MC via Chaosnet; 7 MAY 85  19:19:20 EDT
Received: from MIT-MORRISON by MIT-OZ via Chaosnet; 7 May 85 19:16-EDT
Date: Tue, 7 May 85 19:16 EDT
From: Gavan Duffy <GAVAN@OZ>
Subject: Grinding bug?
To: BUG-LISPM@MIT-MC.ARPA
Message-ID: <850507191626.0.GAVAN@MORRISON>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.1,
Experimental RELATUS 138.1, microcode TMC5-MIC 319, FEP 22, on Lisp Machine Jim Morrison:

What sort of thing can't be ground?  I'm trying to grind some form into a
buffer here, but can't because of this error.  I can't look at the thing
that's losing because when I do c-m-l, I get only <<Error printing value>>.
What do you think this means.  I'm not trying to grind anything but lists
here.

>>Trap: The word #<DTP-NULL 30442470> was read from location 30442470 (in GAVAN-SHORT-TERM-AREA).
While in the function SI:PRINT-OBJECT  PRIN1  SI:GRIND-ATOM

SI:PRINT-OBJECT:  (P.C. = 417)
   Arg 0 (EXP): <<Error printing value>>
   Arg 1 (I-PRINDEPTH): 0
   Arg 2 (SLASHIFY-P): T
   Arg 3 (STREAM): #<DTP-COMPILED-FUNCTION SI:GRIND-COUNT-IO 14307152>
   --Defaulted args:--
   Arg 4 (WHICH-OPERATIONS): (:TYO)
   Local 5: #<CASE-HANDLER 120405105>
   Local 6: NIL
   Local 7: (#<CASE-HANDLER 120405105>)

PRIN1:  (P.C. = 10)
   Arg 0 (EXP): <<Error printing value>>
   Arg 1 (STREAM): #<DTP-COMPILED-FUNCTION SI:GRIND-COUNT-IO 14307152>

SI:GRIND-ATOM:  (P.C. = 41)
   Arg 0 (ATOM): <<Error printing value>>
   Arg 1 (STREAM): #<DTP-COMPILED-FUNCTION SI:GRIND-COUNT-IO 14307152>
   Arg 2 (LOC): #<DTP-LOCATIVE 16670217>

SI:GRIND-LINEAR-FORM:  (P.C. = 21)
   Arg 0 (EXP): <<Error printing value>>
   Arg 1 (LOC): #<DTP-LOCATIVE 16670217>
   --Defaulted args:--
   Arg 2 (CHECK-FOR-MACROS): T

SI:GRIND-TRY:  (P.C. = 66)
   Arg 0 (FORM): #<DTP-COMPILED-FUNCTION SI:GRIND-LINEAR-FORM 14307350>
   Arg 1 (EXP): <<Error printing value>>
   Arg 2 (LOC): #<DTP-LOCATIVE 16670217>
   Rest arg (ARGS): NIL

SI:GRIND-AS-BLOCK:  (P.C. = 105)
   Arg 0 (EXP): (<<Error printing value>>
   Arg 1 (LOC): #<DTP-LOCATIVE 16670216>

SI:GRIND-QUOTE:  (P.C. = 45)
   Arg 0 (EXP): (QUOTE (<<Error printing value>>
   Arg 1 (LOC): #<DTP-LOCATIVE 16670212>

SI:GRIND-LINEAR-FORM:  (P.C. = 203)
   Arg 0 (EXP): (QUOTE (<<Error printing value>>
   Arg 1 (LOC): #<DTP-LOCATIVE 16670212>
   --Defaulted args:--
   Arg 2 (CHECK-FOR-MACROS): T

Remainder of stack:
SI:GRIND-LINEAR-TAIL:  (P.C. = 33)
SI:GRIND-LINEAR-FORM:  (P.C. = 222)
SI:GRIND-LINEAR-TAIL:  (P.C. = 33)
SI:GRIND-LINEAR-FORM:  (P.C. = 222)
SI:GRIND-TRY:  (P.C. = 66)
SI:GRIND-AS-BLOCK:  (P.C. = 105)
SI:GRIND-QUOTE:  (P.C. = 45)
SI:GRIND-FORM:  (P.C. = 63)
SI:GRIND-TRY:  (P.C. = 123)
SI:GRIND-OPTI-MISER:  (P.C. = 30)
SI:GRIND-REST-OF-LIST:  (P.C. = 50)
SI:GRIND-MISER-FORM:  (P.C. = 24)
SI:GRIND-OPTI-MISER:  (P.C. = 34)
SI:GRIND-REST-OF-LIST:  (P.C. = 50)
SI:GRIND-MISER-FORM:  (P.C. = 24)
SI:GRIND-OPTI-MISER:  (P.C. = 34)
SI:GRIND-REST-OF-LIST:  (P.C. = 15)
SI:GRIND-MISER-FORM:  (P.C. = 24)
SI:GRIND-OPTI-MISER:  (P.C. = 34)
SI:GRIND-REST-OF-LIST:  (P.C. = 50)
SI:GRIND-MISER-FORM:  (P.C. = 24)
SI:GRIND-OPTI-MISER:  (P.C. = 34)
SI:GRIND-REST-OF-LIST:  (P.C. = 50)
SI:GRIND-MISER-FORM:  (P.C. = 24)
SI:GRIND-OPTI-MISER:  (P.C. = 34)
SI:GRIND-REST-OF-LIST:  (P.C. = 50)
SI:GRIND-MISER-FORM:  (P.C. = 24)
SI:GRIND-OPTI-MISER:  (P.C. = 34)
SI:GRIND-REST-OF-LIST:  (P.C. = 50)
SI:GRIND-MISER-FORM:  (P.C. = 24)
SI:GRIND-OPTI-MISER:  (P.C. = 34)
SI:GRIND-REST-OF-LIST:  (P.C. = 50)
SI:GRIND-MISER-FORM:  (P.C. = 24)
SI:GRIND-OPTI-MISER:  (P.C. = 34)
SI:GRIND-REST-OF-LIST:  (P.C. = 50)
SI:GRIND-MISER-FORM:  (P.C. = 24)
SI:GRIND-OPTI-MISER:  (P.C. = 34)
SI:GRIND-REST-OF-LIST:  (P.C. = 15)
SI:GRIND-MISER-FORM:  (P.C. = 24)
SI:GRIND-OPTI-MISER:  (P.C. = 34)
GRIND-TOP-LEVEL:  (P.C. = 60)
(:METHOD SI:TEXTUAL-DUMP-MIXIN :DUMP-TEXTUALLY-TO-BUFFER):  (P.C. = 52)  (from RL: UTILS; TEXTDUMP)
(:INTERNAL (:METHOD BELIEF-SYSTEM :COMBINED :DUMP-TEXTUALLY-TO-BUFFER) 0):  (P.C. = 11)
(:METHOD BELIEF-SYSTEM :WHOPPER :DUMP-TEXTUALLY-TO-BUFFER):  (P.C. = 110)  (from PIG:USRD$:[RELATUS.UTILS]TDUMPBSYS)
(:METHOD BELIEF-SYSTEM :COMBINED :DUMP-TEXTUALLY-TO-BUFFER):  (P.C. = 12)  (from PIG:USRD$:[RELATUS.UTILS]TDUMPBSYS)
SEND:  (P.C. = 6)
SI:*EVAL:  (P.C. = 403)
TV:MOUSE-SENSITIVE-EVAL-FOR-LISP-COMMAND-LOOP:  (P.C. = 35)  (from RL: UTILS; WMAGIC)
(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0):  (P.C. = 152)
TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
SI:LISP-COMMAND-LOOP:  (P.C. = 67)
TV:RELATUS-LISTENER-TOP-LEVEL1:  (P.C. = 31)  (from RL: UTILS; WMAGIC)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
3-Jul-85 21:00:19-EDT,1335;000000000000    
Received: from MIT-MC by MIT-OZ via Chaosnet; 7 May 85 19:31-EDT
Received: from SCRC-YUKON.ARPA by MIT-MC.ARPA;  7 MAY 85 19:30:57 EDT
Received: from EUPHRATES.SCRC.Symbolics.COM by SCRC-YUKON.ARPA via CHAOS with CHAOS-MAIL id 124358; Tue 7-May-85 19:29:57-EDT
Date: Tue, 7 May 85 19:29 EDT
From: David A. Moon <Moon@SCRC-STONY-BROOK.ARPA>
Subject: Grinding bug?
To: Gavan Duffy <GAVAN@OZ>
cc: BUG-LISPM@MIT-MC.ARPA
In-Reply-To: <850507191626.0.GAVAN@MORRISON>
Message-ID: <850507192945.5.MOON@EUPHRATES.SCRC.Symbolics.COM>

    Date: Tue, 7 May 85 19:16 EDT
    From: Gavan Duffy <GAVAN@OZ>

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.1,
    Experimental RELATUS 138.1, microcode TMC5-MIC 319, FEP 22, on Lisp Machine Jim Morrison:

    What sort of thing can't be ground?  I'm trying to grind some form into a
    buffer here, but can't because of this error.  I can't look at the thing
    that's losing because when I do c-m-l, I get only <<Error printing value>>.
    What do you think this means.  I'm not trying to grind anything but lists
    here.

    >>Trap: The word #<DTP-NULL 30442470> was read from location 30442470 (in GAVAN-SHORT-TERM-AREA).
    While in the function SI:PRINT-OBJECT  PRIN1  SI:GRIND-ATOM

You called RESET-TEMPORARY-AREA on GAVAN-SHORT-TERM-AREA, right?

3-Jul-85 21:00:19-EDT,1351;000000000000   
Received: from MIT-MC by MIT-OZ via Chaosnet; 7 May 85 19:32-EDT
Received: from SCRC-QUABBIN.ARPA by MIT-MC.ARPA;  7 MAY 85 19:31:16 EDT
Received: from EUPHRATES.SCRC.Symbolics.COM by SCRC-QUABBIN.ARPA via CHAOS with CHAOS-MAIL id 161593; Tue 7-May-85 19:27:23-EDT
Date: Tue, 7 May 85 19:30 EDT
From: David A. Moon <Moon@SCRC-STONY-BROOK.ARPA>
Subject: Grinding bug?
To: Gavan Duffy <GAVAN%OZ@MIT-MC.ARPA>
cc: BUG-LISPM@MIT-MC.ARPA
In-Reply-To: <850507191626.0.GAVAN@MORRISON>
Message-ID: <850507193014.6.MOON@EUPHRATES.SCRC.Symbolics.COM>

    Date: Tue, 7 May 85 19:16 EDT
    From: Gavan Duffy <GAVAN@OZ>

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.1,
    Experimental RELATUS 138.1, microcode TMC5-MIC 319, FEP 22, on Lisp Machine Jim Morrison:

    What sort of thing can't be ground?  I'm trying to grind some form into a
    buffer here, but can't because of this error.  I can't look at the thing
    that's losing because when I do c-m-l, I get only <<Error printing value>>.
    What do you think this means.  I'm not trying to grind anything but lists
    here.

    >>Trap: The word #<DTP-NULL 30442470> was read from location 30442470 (in GAVAN-SHORT-TERM-AREA).
    While in the function SI:PRINT-OBJECT  PRIN1  SI:GRIND-ATOM

You called RESET-TEMPORARY-AREA on GAVAN-SHORT-TERM-AREA, right?

3-Jul-85 21:00:19-EDT,1083;000000000000 
Received: from MIT-MC by MIT-OZ via Chaosnet; 7 May 85 19:36-EDT
Date: Tue,  7 May 85 19:34:57 EST
From: Christopher C. Stacy <CSTACY@MIT-MC>
Subject:  Mailer loses on soml delivery option
To: CJL@MIT-OZ
cc: Hornig@SCRC-STONY-BROOK, BUG-LISPM@MIT-OZ
In-reply-to: Msg of Tue 7 May 1985  13:58 EDT from Chris Lindblad <CJL%MIT-OZ at MIT-MC.ARPA>
Message-ID: <[MIT-MC].490659.850507.CSTACY>

    Date: Tue, 7 May 1985  13:58 EDT
    From: Chris Lindblad <CJL%MIT-OZ at MIT-MC.ARPA>

    It would be nice if they only accepted sends to the person 
    using the machine.

I am not offhand convinced this restriction would be nice.
LispMs are not like timesharing machines, because there is only one
place an interactive message can be delivered to.  I frequently
intentionally send to a LispM using a different name than the
recipient is actually logged in as.  I am under the imporession
that I am using the SEND or CONVERSE protocol though, and not SMTP.
Someone needs to figure out the functional intent of implementing
all these protocols on the Lisp Machine.
3-Jul-85 21:00:20-EDT,1147;000000000000  
Received: from MIT-MC by MIT-OZ via Chaosnet; 7 May 85 19:42-EDT
Date: Tue,  7 May 85 19:40:15 EST
From: Christopher C. Stacy <CSTACY@MIT-MC>
Subject:  Mailer loses on soml delivery option
To: CJL@MIT-OZ
cc: Hornig@SCRC-STONY-BROOK, BUG-LISPM@MIT-OZ
In-reply-to: Msg of Tue 7 May 1985  13:58 EDT from Chris Lindblad <CJL%MIT-OZ at MIT-MC.ARPA>
Message-ID: <[MIT-MC].490667.850507.CSTACY>


     Date: Fri, 3 May 85 14:49 EDT
     From: CJL@OZ

     In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 8.6,
     Mailer 43.0, microcode TMC5-MIC 319, on Lisp Machine
     Ronald Reagan:
     
     If mail is received destined for foo@reagan here on
     reagan, regardless of who is logged in on the machine,
     send is assumed, and a window pops up and displays the
     message, asking for response.

If I understand your message, maybe the real bug is that the mailer on
Reagan turns MAIL into SEND.  Maybe if the user is unknown (no
forwarding or whatever) then it should dump the mail into a mailbox in
some dead-letters directory in LMFS and send an error receipt to
the originator as specified by the return path.
3-Jul-85 21:00:20-EDT,1331;000000000000   
Received: from MIT-GOLDILOCKS by MIT-OZ via Chaosnet; 7 May 85 19:54-EDT
Received: from MIT-KOALA by GOLDILOCKS via CHAOS with CHAOS-MAIL id 1238; Tue 7-May-85 19:55:10-EDT
Date: Tuesday, 7 May 1985, 19:54-EDT
From: Scott Cyphers <sr.ehpyc at MIT-SPEECH>
Subject: Mailer loses on soml delivery option
To: CSTACY at MIT-MC, CJL at OZ
cc: Hornig at SCRC-STONY-BROOK, BUG-LISPM at OZ
In-Reply-To: <[MIT-MC].490659.850507.CSTACY>
Message-ID: <850507195404.5.CYPHER@MIT-KOALA.MIT>

I think of all of the lisp machines at a site as being one virtual
processor, and think it would make sense to be able to do a converse to
someone at a site, perhaps via the namespace server for that site or
something, analagous to CJL's finger server.  Converse and finger do
this for the local site, but it would be useful if they could do it for
additional sites as well.

I too do sends to names other than the logged in person, but it's always
because I'm too lazy to see what they happened to be logged in as if I
know who's on the machine.  Perhaps if any of the login names of the
user, as well as the nickname of the user were considered acceptable as
the person using the machine, CJL's idea would be good.  It could be
useful on the occasion where who you thought was on machine A was on B
and someone else was on A.

3-Jul-85 21:00:21-EDT,1531;000000000001   
Received: from MIT-MC by MIT-OZ via Chaosnet; 8 May 85 09:12-EDT
Received: from SCRC-STONY-BROOK.ARPA by MIT-MC.ARPA;  8 MAY 85 09:13:38 EDT
Received: from CONCORD.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 232485; Wed 8-May-85 09:08:50-EDT
Date: Wed, 8 May 85 09:14 EDT
From: Bernard S. Greenberg <BSG@STONY-BROOK.SCRC.Symbolics.COM>
Subject: Mailer loses on soml delivery option
To: CSTACY@MIT-MC.ARPA, CJL%OZ@MIT-MC.ARPA
cc: Hornig@STONY-BROOK.SCRC.Symbolics.COM, BUG-LISPM%OZ@MIT-MC.ARPA
In-Reply-To: <[MIT-MC].490667.850507.CSTACY>
Message-ID: <850508091436.8.BSG@CONCORD.SCRC.Symbolics.COM>

    Date: Tue,  7 May 85 19:40:15 EST
    From: Christopher C. Stacy <CSTACY@MIT-MC>


	 Date: Fri, 3 May 85 14:49 EDT
	 From: CJL@OZ

	 In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 8.6,
	 Mailer 43.0, microcode TMC5-MIC 319, on Lisp Machine
	 Ronald Reagan:
     
	 If mail is received destined for foo@reagan here on
	 reagan, regardless of who is logged in on the machine,
	 send is assumed, and a window pops up and displays the
	 message, asking for response.

    If I understand your message, maybe the real bug is that the mailer on
    Reagan turns MAIL into SEND.  Maybe if the user is unknown (no
    forwarding or whatever) then it should dump the mail into a mailbox in
    some dead-letters directory in LMFS and send an error receipt to
    the originator as specified by the return path.

Machines are not required to have a LMFS.   Most don't.

3-Jul-85 21:00:21-EDT,1895;000000000001    
Received: from MIT-MC by MIT-OZ via Chaosnet; 8 May 85 10:08-EDT
Received: from HARLEM.SCRC.Symbolics.COM by MIT-MC.ARPA;  8 MAY 85 10:08:35 EDT
Date: Wed, 8 May 85 10:08 EDT
From: Joseph R Goldstone <joseph@SCRC-QUABBIN.ARPA>
Subject: Mailer loses on soml delivery option
To: Bernard S. Greenberg <BSG@SCRC-STONY-BROOK.ARPA>, CSTACY@MIT-MC.ARPA,
    CJL%OZ@MIT-MC.ARPA
cc: Hornig@SCRC-STONY-BROOK.ARPA, BUG-LISPM%OZ@MIT-MC.ARPA
In-Reply-To: <850508091436.8.BSG@CONCORD.SCRC.Symbolics.COM>
Message-ID: <850508100806.2.JOSEPH@HARLEM.SCRC.Symbolics.COM>

    Date: Wed, 8 May 85 09:14 EDT
    From: Bernard S. Greenberg <BSG@STONY-BROOK.SCRC.Symbolics.COM>

	Date: Tue,  7 May 85 19:40:15 EST
	From: Christopher C. Stacy <CSTACY@MIT-MC>


	     Date: Fri, 3 May 85 14:49 EDT
	     From: CJL@OZ

	     In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 8.6,
	     Mailer 43.0, microcode TMC5-MIC 319, on Lisp Machine
	     Ronald Reagan:
     
	     If mail is received destined for foo@reagan here on
	     reagan, regardless of who is logged in on the machine,
	     send is assumed, and a window pops up and displays the
	     message, asking for response.

	If I understand your message, maybe the real bug is that the mailer on
	Reagan turns MAIL into SEND.  Maybe if the user is unknown (no
	forwarding or whatever) then it should dump the mail into a mailbox in
	some dead-letters directory in LMFS and send an error receipt to
	the originator as specified by the return path.

    Machines are not required to have a LMFS.   Most don't.


All Symbolics computers (urrk-ptuui!  LispMs!) that run our Mailer software
must have a local LMFS.  The logical place to put failed MAILs as described
above would be with the rest of the rubbish in local:>Mail>Static>failed.mail.

I'll try to think about the issues behind this conversation later today.

3-Jul-85 21:00:21-EDT,3392;000000000001  
Received: from MIT-MC by MIT-OZ via Chaosnet; 8 May 85 10:35-EDT
Received: from MIT-OZ by MIT-MC via Chaosnet; 8 MAY 85  10:34:25 EDT
Date: Wed, 8 May 1985  10:33 EDT
Message-ID: <CJL.12109376756.BABYL@MIT-OZ>
From: Chris Lindblad <CJL%MIT-OZ@MIT-MC.ARPA>
To:   BUG-COMSAT@MIT-MC
Cc:   Joseph R Goldstone <joseph@SCRC-QUABBIN.ARPA>,
      "Bernard S. Greenberg" <BSG@SCRC-STONY-BROOK.ARPA>,
      BUG-LISPM%OZ@MIT-MC.ARPA, CJL%OZ@MIT-MC.ARPA, CSTACY@MIT-MC.ARPA,
      Hornig@SCRC-STONY-BROOK.ARPA
Subject: Mailer loses on soml delivery option
In-reply-to: Msg of 8 May 1985  10:08-EDT from Joseph R Goldstone <joseph at SCRC-QUABBIN.ARPA>

    Date: Wednesday, 8 May 1985  10:08-EDT
    From: Joseph R Goldstone <joseph at SCRC-QUABBIN.ARPA>
    To:   Bernard S. Greenberg <BSG at SCRC-STONY-BROOK.ARPA>,
          CSTACY at MIT-MC.ARPA, CJL%OZ at MIT-MC.ARPA
    cc:   Hornig at SCRC-STONY-BROOK.ARPA, BUG-LISPM%OZ at MIT-MC.ARPA
    Re:   Mailer loses on soml delivery option

    Date: Wed, 8 May 85 09:14 EDT
    From: Bernard S. Greenberg <BSG@STONY-BROOK.SCRC.Symbolics.COM>

    Date: Tue,  7 May 85 19:40:15 EST
    From: Christopher C. Stacy <CSTACY@MIT-MC>


         Date: Fri, 3 May 85 14:49 EDT
         From: CJL@OZ

         In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 8.6,
         Mailer 43.0, microcode TMC5-MIC 319, on Lisp Machine
         Ronald Reagan:
         
         If mail is received destined for foo@reagan here on
         reagan, regardless of who is logged in on the machine,
         send is assumed, and a window pops up and displays the
         message, asking for response.

    If I understand your message, maybe the real bug is that the mailer on
    Reagan turns MAIL into SEND.  Maybe if the user is unknown (no
    forwarding or whatever) then it should dump the mail into a mailbox in
    some dead-letters directory in LMFS and send an error receipt to
    the originator as specified by the return path.

    Machines are not required to have a LMFS.   Most don't.


    All Symbolics computers (urrk-ptuui!  LispMs!) that run our Mailer software
    must have a local LMFS.  The logical place to put failed MAILs as described
    above would be with the rest of the rubbish in local:>Mail>Static>failed.mail.

    I'll try to think about the issues behind this conversation later today.

From COMSAT's log file on MC:

200854	inreq: 1 > 1;  specs:{j:dvrspl}{dvrspl}{claims-to-be:the-dover-spooler}{tl=68.} id=<[mit-mc].490690.850507.dvrspl> exp->lsi.yew@40700013065
200855	  icp->mit-reagan (chaos-send)

If my reading of COMSAT's log file on MC is correct, it is MC that is
turning mail into sends, just like OZ's does. This once again results in
the screw case: 

User foo logged into lisp machine X sends a file to the dover, giving
his mail address foo@Y, because that indeed it his mail address. After
printing foo's file, the dover spooler sends gives a message to
comsat, which proceeds to invoke chaos-send, not chaos-mail to deliver a
message to Y that the file has been printed on the dover, but foo is
logged into X. 

If this is indeed what is happening, why is comsat doing a SEND going to
somebody's mail address? It's supposed to go to a logged in user. Just
because somebody get's mail in the machine doesn't mean he'll ever log
in on it.



3-Jul-85 21:00:22-EDT,1150;000000000001    
Received: from MIT-MC by MIT-OZ via Chaosnet; 8 May 85 10:38-EDT
Received: from MIT-OZ by MIT-MC via Chaosnet; 8 MAY 85  10:38:37 EDT
Received: from MIT-MORRISON by MIT-OZ via Chaosnet; 8 May 85 10:37-EDT
Date: Wed, 8 May 85 10:36 EDT
From: Gavan Duffy <GAVAN@OZ>
Subject: Grinding bug?
To: Moon@SCRC-STONY-BROOK.ARPA, GAVAN@OZ
cc: BUG-LISPM@MIT-MC.ARPA
In-Reply-To: <850507192945.5.MOON@EUPHRATES.SCRC.Symbolics.COM>
Message-ID: <850508103641.1.GAVAN@MORRISON>

    Date: Tue, 7 May 85 19:29 EDT
    From: David A. Moon <Moon@SCRC-STONY-BROOK.ARPA>

	Date: Tue, 7 May 85 19:16 EDT
	From: Gavan Duffy <GAVAN@OZ>

	In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.1,
	Experimental RELATUS 138.1, microcode TMC5-MIC 319, FEP 22, on Lisp Machine Jim Morrison:

	>>Trap: The word #<DTP-NULL 30442470> was read from location 30442470 (in GAVAN-SHORT-TERM-AREA).
	While in the function SI:PRINT-OBJECT  PRIN1  SI:GRIND-ATOM

    You called RESET-TEMPORARY-AREA on GAVAN-SHORT-TERM-AREA, right?

Right.  There shouldn't be any pointers into there, but there's obviously
at least one.  Time for some detective work.  Thanks.
3-Jul-85 21:00:22-EDT,2243;000000000001 
Received: from MIT-MC by MIT-OZ via Chaosnet; 8 May 85 10:45-EDT
Received: from SCRC-STONY-BROOK.ARPA by MIT-MC.ARPA;  8 MAY 85 10:45:16 EDT
Received: from CONCORD.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 232575; Wed 8-May-85 10:40:27-EDT
Date: Wed, 8 May 85 10:46 EDT
From: Bernard S. Greenberg <BSG@STONY-BROOK.SCRC.Symbolics.COM>
Subject: Mailer loses on soml delivery option
To: joseph@QUABBIN.SCRC.Symbolics.COM, CSTACY@MIT-MC.ARPA,
    CJL%OZ@MIT-MC.ARPA
cc: Hornig@STONY-BROOK.SCRC.Symbolics.COM, BUG-LISPM%OZ@MIT-MC.ARPA
In-Reply-To: <850508100806.2.JOSEPH@HARLEM.SCRC.Symbolics.COM>
Message-ID: <850508104608.5.BSG@CONCORD.SCRC.Symbolics.COM>

    Date: Wed, 8 May 85 10:08 EDT
    From: Joseph R Goldstone <joseph@SCRC-QUABBIN.ARPA>

	Date: Wed, 8 May 85 09:14 EDT
	From: Bernard S. Greenberg <BSG@STONY-BROOK.SCRC.Symbolics.COM>

	    Date: Tue,  7 May 85 19:40:15 EST
	    From: Christopher C. Stacy <CSTACY@MIT-MC>


		 Date: Fri, 3 May 85 14:49 EDT
		 From: CJL@OZ

		 In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 8.6,
		 Mailer 43.0, microcode TMC5-MIC 319, on Lisp Machine
		 Ronald Reagan:
     
		 If mail is received destined for foo@reagan here on
		 reagan, regardless of who is logged in on the machine,
		 send is assumed, and a window pops up and displays the
		 message, asking for response.

	    If I understand your message, maybe the real bug is that the mailer on
	    Reagan turns MAIL into SEND.  Maybe if the user is unknown (no
	    forwarding or whatever) then it should dump the mail into a mailbox in
	    some dead-letters directory in LMFS and send an error receipt to
	    the originator as specified by the return path.

	Machines are not required to have a LMFS.   Most don't.


    All Symbolics computers (urrk-ptuui!  LispMs!) that run our Mailer software
    must have a local LMFS.  The logical place to put failed MAILs as described
    above would be with the rest of the rubbish in local:>Mail>Static>failed.mail.
Oh I see.  For some reason, I thought he was talking about client machines,
not server machines.  That still leaves the issue open of what happens
when you send mail to, say BSG@CONCORD....

3-Jul-85 21:00:23-EDT,2778;000000000001 
Received: from MIT-MC by MIT-OZ via Chaosnet; 8 May 85 11:02-EDT
Received: from SCRC-STONY-BROOK.ARPA by MIT-MC.ARPA;  8 MAY 85 11:02:51 EDT
Received: from CONCORD.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 232596; Wed 8-May-85 10:57:57-EDT
Date: Wed, 8 May 85 11:03 EDT
From: Bernard S. Greenberg <BSG@STONY-BROOK.SCRC.Symbolics.COM>
Subject: Mailer loses on soml delivery option
To: CJL%MIT-OZ@MIT-MC.ARPA, BUG-COMSAT@MIT-MC.ARPA
cc: joseph@QUABBIN.SCRC.Symbolics.COM, BUG-LISPM%OZ@MIT-MC.ARPA,
    CJL%OZ@MIT-MC.ARPA, CSTACY@MIT-MC.ARPA,
    Hornig@STONY-BROOK.SCRC.Symbolics.COM
In-Reply-To: <CJL.12109376756.BABYL@MIT-OZ>
Message-ID: <850508110339.6.BSG@CONCORD.SCRC.Symbolics.COM>

    Date: Wed, 8 May 1985  10:33 EDT
    From: Chris Lindblad <CJL%MIT-OZ@MIT-MC.ARPA>

    From COMSAT's log file on MC:

    200854	inreq: 1 > 1;  specs:{j:dvrspl}{dvrspl}{claims-to-be:the-dover-spooler}{tl=68.} id=<[mit-mc].490690.850507.dvrspl> exp->lsi.yew@40700013065
    200855	  icp->mit-reagan (chaos-send)

    If my reading of COMSAT's log file on MC is correct, it is MC that is
    turning mail into sends, just like OZ's does. This once again results in
    the screw case: 

    User foo logged into lisp machine X sends a file to the dover, giving 
    his mail address foo@Y, because that indeed it his mail address. After
    printing foo's file, the dover spooler sends gives a message to
    comsat, which proceeds to invoke chaos-send, not chaos-mail to deliver a
    message to Y that the file has been printed on the dover, but foo is
    logged into X. 

    If this is indeed what is happening, why is comsat doing a SEND going to
    somebody's mail address? It's supposed to go to a logged in user. Just
    because somebody get's mail in the machine doesn't mean he'll ever log
    in on it.
Oh I understand.  Among possibilities for the right answers are
 1) Fix Dover Spooler to send mail, obviously not the right solution.
 2) Say "this is what spooler documentably does", and give your
    local-machine address to it instead of your mail address.  Why
    do we give it our mail address, anyway?
 3) This is hard, but maybe any machine that you claim as posessing your
    mail address, should declare itself open for SEND's to you as well,
    knowing how to find your interactive self,
    and know how to forward the SENDs or convert them into mail.  Obviously,
    this requires either a "semi-permanent" association, which can be
    temporarily wrong (someone else uses your machine), but it could
    check if you're logged in, or a "dynamic association", whereby
    you report your whereabouts when you log in, which has serious
    problems of too-easy subversion.

3-Jul-85 21:00:23-EDT,2863;000000000001 
Received: from MIT-MC by MIT-OZ via Chaosnet; 8 May 85 16:55-EDT
Received: from SCRC-STONY-BROOK.ARPA by MIT-MC.ARPA;  8 MAY 85 16:53:02 EDT
Received: from ANNISQUAM.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 232875; Wed 8-May-85 15:35:00-EDT
Date: Wed, 8 May 85 15:39 EDT
From: Doug Dodds <DODDS@TENEX.SCRC.Symbolics.COM>
Subject: Profile problems with hosts
To: PARKER%mit-OZ@MIT-MC.ARPA
cc: BUG-LISPM%mit-OZ@MIT-MC.ARPA, bug-zmail%mit-OZ@MIT-MC.ARPA
In-Reply-To: <850506224655.3.PARKER@CROSBY>
Message-ID: <850508153942.8.DODDS@ANNISQUAM.SCRC.Symbolics.COM>

    Date: Mon, 6 May 85 22:46 EDT
    From: Randy Parker <PARKER@OZ>

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.1,
    microcode TMC5-MIC 319, FEP 17, on Lisp Machine Bing Crosby:
    Warm booted from: ZMACS-WINDOWS.

    Awhile back I edited my profile and typed "Randy Parker <parker@oz>" to the choose
    variables window in Edit profile for the value of *default-cc-list*.  ZMAIL inserted
    the following form in my zmail init file:

    (LOGIN-SETQ zwei:*DEFAULT-CC-LIST* '((:PERSONAL-NAME "Randy Parker"
						    :NAME
						    "PARKER"
						    :HOST
						    (:OBJECT "OZ"))))

    When I check *default-cc-list*, it reads as follows:
    ((:PERSONAL-NAME "Randy Parker" :NAME "PARKER" :HOST (:OBJECT #<TOPS20-HOST OZ 1400364>)))

    All this is fine (and has been since that time), but recently, after selecting other
    options in the profile variable windows, clicking on EDIT, and then evaling the profile
    buffer (this has been repeated several times), any attempt to Reply or Mail generates
    this error.  

    Of course, *default-cc-list* gives this:
    ((:PERSONAL-NAME "Randy Parker" :NAME "PARKER" :HOST (:OBJECT "OZ")))

    It is clear which is right and how to get the host object, but both are being
    generated by the system. I haven't had a chance to look at ZWEI:STRING-FROM-HEADER.



    >>Error: The array, "OZ", is not a valid function except when
	     given a valid subscript as its argument.
    While in the function "OZ"  ZWEI:STRING-FROM-HEADER  ZWEI:PRINT-ADDRESS-HEADER

    "OZ":
       Arg 0: :DEFAULT-MAIL-NAMING-CONVENTION

    ZWEI:STRING-FROM-HEADER:  (P.C. =223)  (from 1AISITE: AISITE; NETWORK0)   What's this?!?
       Arg 0 (HEADER): (:PERSONAL-NAME "Randy Parker" :NAME "PARKER" :HOST (:OBJECT "OZ"))
       Arg 1 (FORMAT): NIL
       Arg 2 (NAMING-CONVENTION): :DEFAULT

The bug is clearly in the hacked-up version of ZWEI:STRING-FROM-HEADER
that you are using.  I infer that it has been altered to attempt to deal
better with the new state of host namespaces.  It probably assumes that
the :HOST in the parsed header is a Host object; likely it needs to
allow for the string case, and parse it into a host object.

3-Jul-85 21:00:24-EDT,8694;000000000000
Received: from MIT-BUDDY by MIT-OZ via Chaosnet; 8 May 85 17:36-EDT
Date: Wed, 8 May 85 17:35 EDT
From: Chris Lindblad <CJL@OZ>
Subject: Profile problems with hosts
To: DODDS%TENEX@SCRC-STONY-BROOK
cc: BUG-LISPM@OZ, BUG-ZMAIL@OZ, PARKER@OZ
In-Reply-To: <850508153942.8.DODDS@ANNISQUAM.SCRC.Symbolics.COM>
Message-ID: <850508173549.1.CJL@BUDDY>

    Date: Wed, 8 May 85 15:39 EDT
    From: Doug Dodds <DODDS@TENEX.SCRC.Symbolics.COM>
	Date: Mon, 6 May 85 22:46 EDT
	From: Randy Parker <PARKER@OZ>
	In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.1,
	microcode TMC5-MIC 319, FEP 17, on Lisp Machine Bing Crosby:
	Warm booted from: ZMACS-WINDOWS.

	Awhile back I edited my profile and typed "Randy Parker <parker@oz>" to the choose
	variables window in Edit profile for the value of *default-cc-list*.  ZMAIL inserted
	the following form in my zmail init file:

	(LOGIN-SETQ zwei:*DEFAULT-CC-LIST* '((:PERSONAL-NAME "Randy Parker"
							:NAME
							"PARKER"
							:HOST
							(:OBJECT "OZ"))))

	When I check *default-cc-list*, it reads as follows:
	((:PERSONAL-NAME "Randy Parker" :NAME "PARKER" :HOST (:OBJECT #<TOPS20-HOST OZ 1400364>)))

	All this is fine (and has been since that time), but recently, after selecting other
	options in the profile variable windows, clicking on EDIT, and then evaling the profile
	buffer (this has been repeated several times), any attempt to Reply or Mail generates
	this error.  

	Of course, *default-cc-list* gives this:
	((:PERSONAL-NAME "Randy Parker" :NAME "PARKER" :HOST (:OBJECT "OZ")))

	It is clear which is right and how to get the host object, but both are being
	generated by the system. I haven't had a chance to look at ZWEI:STRING-FROM-HEADER.



	>>Error: The array, "OZ", is not a valid function except when
		 given a valid subscript as its argument.
	While in the function "OZ"  ZWEI:STRING-FROM-HEADER  ZWEI:PRINT-ADDRESS-HEADER

	"OZ":
	   Arg 0: :DEFAULT-MAIL-NAMING-CONVENTION

	ZWEI:STRING-FROM-HEADER:  (P.C. =223)  (from 1AISITE: AISITE; NETWORK0)   What's this?!?
	   Arg 0 (HEADER): (:PERSONAL-NAME "Randy Parker" :NAME "PARKER" :HOST (:OBJECT "OZ"))
	   Arg 1 (FORMAT): NIL
	   Arg 2 (NAMING-CONVENTION): :DEFAULT

    The bug is clearly in the hacked-up version of ZWEI:STRING-FROM-HEADER
    that you are using.  I infer that it has been altered to attempt to deal
    better with the new state of host namespaces.  It probably assumes that
    the :HOST in the parsed header is a Host object; likely it needs to
    allow for the string case, and parse it into a host object.

The version of ZWEI:STRING-FROM-HEADER was supplied to us from Hornig to
fix interaction problems with mailers here at MIT. It's too hairy for
me to figure out:

;;; -*- Mode: LISP; Syntax: Zetalisp; Package: ZWEI; Base: 10; Patch-file: T -*-
;;; Patch file for Zmail version 107.3
;;; Reason: Function (:METHOD NET:HOST :MAIL-NAME):  Don't use made-up domain name.
;;; Function MAILER:ARPANET-MAIL-GATEWAY-HOST:  Search correct sites for gateway.
;;; Function (:METHOD NET:HOST :DEFAULT-MAIL-NAMING-CONVENTION):  Always use Internet domain names in headers.
;;; Function ZWEI:PRINT-DATE-HEADER:  Always use RFC 822 format.
;;; Function ZWEI:STRING-FROM-HEADER:  Always use @'s.
;;; Allow ZMail user to try hosts believed to be unavailable.
;;; Function MAILER:SMTP-SERVER:  Better management of paths.
;;; Function (:METHOD MAILER:SMTP-USER :INIT):  Don't use :ARPANET kludges.
;;; Function (:METHOD MAILER:SMTP-USER :START-MESSAGE):  More path management.
;;; Function MAILER:ADD-HOST-TO-ROUTE:  COmmon routine.
;;; Written by File-Server, 4/23/85 10:44:02
;;; while running on Riverside from FEP0:>rel6-server-mmpt-ns-fixed.load.1
;;; with Release 6.0, System 271.33, Zmail 107.2, LMFS 57.2, Tape 41.1, Basic Sage 15.9, Documentation Database 3.2, Common Lisp 4.2, Experimental Writer Tools 12.23, SCRC 5.5, Print 38.0, Mailer 43.3, IP-TCP 29.3, File Server stuff 1.5, microcode TMC5-MIC 319, Automatic server bug reporter, Namespace Server, MMPT fix.

...

; From file headers.lisp >rel-6>sys>zmail Q: (90)
#8R ZWEI::(GLOBAL:COMPILER-LET ((GLOBAL:PACKAGE (GLOBAL:PKG-FIND-PACKAGE "ZWEI")))

;;; NAMING-CONVENTION is one of :INTERNET, :LOCALNET, or :ARPANET.
;;;  :INTERNET means the whole internet with hierarchical domains.
;;;  :LOCALNET means a local network which probably doesn't understand domains.
;;;  :ARPANET means the current turd that only understands the .ARPA domain, doesn't
;;;   allow path routing, etc.
;;; :DEFAULT means pick it so as to make it parsable.  Note that :LOCALNET is not always
;;; re-parsable.
(DEFUN STRING-FROM-HEADER (HEADER FORMAT &OPTIONAL (NAMING-CONVENTION ':DEFAULT)
					 &AUX (PLIST (LOCF HEADER)) TEM)
  (COND ((AND (EQ FORMAT ':USE-ORIGINAL)
	      (SETQ TEM (GET PLIST ':INTERVAL)))
	 (STRING-INTERVAL (FIRST TEM) (SECOND TEM) T))
	((SETQ TEM (GETL PLIST '(:INFERIORS)))
	 (LOOP WITH STR = (MAKE-EMPTY-STRING 20.)
	       WITH (SUP-START SUP-END) = (CADR (GETL PLIST '(:INTERVAL :ORIGINAL-INTERVAL)))
	       FOR START FIRST SUP-START THEN (SECOND INF-INT)
	       FOR INF IN (CADR TEM)
	       AS INF-INT = (CADR (GETL (LOCF INF) '(:INTERVAL :ORIGINAL-INTERVAL)))
	       DO (SETQ STR (STRING-NCONC STR (STRING-INTERVAL START (FIRST INF-INT))))
		  (LET ((SUBHEAD (STRING-FROM-HEADER INF FORMAT NAMING-CONVENTION)))
		    (WHEN SUBHEAD
		      (SETQ STR (STRING-NCONC STR SUBHEAD))))
	       FINALLY (RETURN (STRING-NCONC STR (STRING-INTERVAL START SUP-END)))))
	(T
	 (LET ((USER (GET PLIST ':USER))
	       (STRING (GET PLIST ':NAME)))
	   (UNLESS (AND (NULL USER) (NULL STRING))
	     (LET ((HOST (GET PLIST ':HOST)))
	       (WHEN (NOT (NULL USER))
		 (SETF `(,STRING ,HOST) (SEND USER ':MAIL-ADDRESS))
		 (SETQ HOST `(:OBJECT ,HOST)))
	       (SETQ STRING (RFC822-QUOTE-IF-NECESSARY STRING))
	       (WHEN (AND (EQ FORMAT ':LOCAL-DEFAULT-HOST)
			  (GET PLIST ':HOST-DEFAULTED))
		 (SETQ HOST NIL))
	       (SELECTQ (CAR HOST)
		 (:OBJECT
		  (WHEN (EQ NAMING-CONVENTION ':DEFAULT)
		    (SETQ NAMING-CONVENTION (SEND (SECOND HOST)
						  ':DEFAULT-MAIL-NAMING-CONVENTION)))
		  (UNLESS (AND (EQ FORMAT ':ONLY-PERSONAL)
			       (SUMMARY-SUPPRESS-HOST-P (SECOND HOST)))
		    ;; Use the "standard" name for this host.
		    (MULTIPLE-VALUE-BIND (HOST-NAME %-KLUDGE)
			(SEND (SECOND HOST) :MAIL-NAME :NAMING-CONVENTION NAMING-CONVENTION
			      :%-ROUTING-KLUDGE T)
		      (SETQ STRING (STRING-APPEND STRING (IF %-KLUDGE #/% #/@) HOST-NAME)))))
		 (:DOMAIN
		  (WHEN (EQ NAMING-CONVENTION ':DEFAULT)
		    (SETQ NAMING-CONVENTION ':INTERNET))
		  (SETQ STRING (STRING-APPEND STRING #/@))
		  (LOOP FOR FIRST-P FIRST T THEN NIL
			FOR STR IN (CDR HOST)
			UNLESS FIRST-P DO (SETQ STRING (STRING-APPEND STRING #/.))
			DO (SETQ STRING (STRING-APPEND STRING STR))))
		 (OTHERWISE
		  (WHEN (EQ NAMING-CONVENTION ':DEFAULT)
		    (SETQ NAMING-CONVENTION ':LOCALNET))
		  (DOLIST (HOST (CDR HOST))
		    (SETQ STRING (STRING-APPEND STRING #/@ HOST))))))
	     (SELECTQ FORMAT
	       ((:USE-ORIGINAL :INCLUDE-PERSONAL :ONLY-PERSONAL)
		(LET ((PERSONAL-NAME (IF USER
					 (SEND USER ':PERSONAL-NAME-FIRST-NAME-FIRST)
					 (GET PLIST ':PERSONAL-NAME)))
		      (ROUTE-SPEC (GET PLIST ':ROUTE)))
		  (WHEN (OR PERSONAL-NAME ROUTE-SPEC)
		    (WHEN ROUTE-SPEC
		      (SETQ STRING (STRING-APPEND
				     (ROUTE-SPEC-STRING ROUTE-SPEC NAMING-CONVENTION)
				     STRING)))
		    (SETQ STRING (STRING-APPEND #/< STRING #/>))
		    (WHEN PERSONAL-NAME
		      (IF (EQ FORMAT ':ONLY-PERSONAL)
			  (SETQ STRING PERSONAL-NAME)
			  (SETQ PERSONAL-NAME (RFC822-QUOTE-IF-NECESSARY PERSONAL-NAME))
			  (SETQ STRING (STRING-APPEND PERSONAL-NAME #\SP STRING)))))))
	       ((:HOST :LOCAL-DEFAULT-HOST)
		;; For now, turn a route specification into multiple @'s when
		;; talking to the mail server.
		(LET ((ROUTE-SPEC (GET PLIST ':ROUTE)))
		  (WHEN ROUTE-SPEC
		    (IF (MEMQ NAMING-CONVENTION '(:INTERNET :ARPANET))
			(SETQ STRING (STRING-APPEND
				       (ROUTE-SPEC-STRING ROUTE-SPEC NAMING-CONVENTION)
				       STRING))
			(SETQ STRING (STRING-APPEND
				       STRING
				       (WITH-OUTPUT-TO-STRING (STREAM)
					 (LOOP FOR DOMAIN IN (REVERSE ROUTE-SPEC)
					       DO (SEND STREAM ':TYO #/@)
					       ;; Also only output the most specific
					       ;; part of the domain, since it tends
					       ;; to confuse existing mailers.
					       (SEND STREAM ':STRING-OUT
						     (STRING-FROM-HOST DOMAIN
								       NAMING-CONVENTION)))
					 ))))))))
	     STRING)))))

)
3-Jul-85 21:00:24-EDT,9347;000000000000  
Received: from MIT-SINATRA by MIT-OZ via Chaosnet; 8 May 85 19:48-EDT
Date: Wed, 8 May 85 19:48 EDT
From: Randy Parker <PARKER@OZ>
Subject: Profile problems with hosts
To: Chris Lindblad <CJL@OZ>
cc: DODDS%TENEX@SCRC-STONY-BROOK, BUG-LISPM@OZ, BUG-ZMAIL@OZ,
    Randy Parker <PARKER@OZ>
Message-ID: <850508194812.1.PARKER@SINATRA>

    Date: Wed, 8 May 85 17:35 EDT
    From: Chris Lindblad <CJL@OZ>

	Date: Wed, 8 May 85 15:39 EDT
	From: Doug Dodds <DODDS@TENEX.SCRC.Symbolics.COM>

	    Date: Mon, 6 May 85 22:46 EDT
	    From: Randy Parker <PARKER@OZ>
	    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.1,
	    microcode TMC5-MIC 319, FEP 17, on Lisp Machine Bing Crosby:
	    Warm booted from: ZMACS-WINDOWS.

	    Awhile back I edited my profile and typed "Randy Parker <parker@oz>" to the choose
	    variables window in Edit profile for the value of *default-cc-list*.  ZMAIL inserted
	    the following form in my zmail init file:

	    (LOGIN-SETQ zwei:*DEFAULT-CC-LIST* '((:PERSONAL-NAME "Randy Parker"
							    :NAME
							    "PARKER"
							    :HOST
							    (:OBJECT "OZ"))))

	    When I check *default-cc-list*, it reads as follows:
	    ((:PERSONAL-NAME "Randy Parker" :NAME "PARKER" :HOST (:OBJECT #<TOPS20-HOST OZ 1400364>)))

	    All this is fine (and has been since that time), but recently, after selecting other
	    options in the profile variable windows, clicking on EDIT, and then evaling the profile
	    buffer (this has been repeated several times), any attempt to Reply or Mail generates
	    this error.  

	    Of course, *default-cc-list* gives this:
	    ((:PERSONAL-NAME "Randy Parker" :NAME "PARKER" :HOST (:OBJECT "OZ")))

	    It is clear which is right and how to get the host object, but both are being
	    generated by the system. I haven't had a chance to look at ZWEI:STRING-FROM-HEADER.



	    >>Error: The array, "OZ", is not a valid function except when
		     given a valid subscript as its argument.
	    While in the function "OZ"  ZWEI:STRING-FROM-HEADER  ZWEI:PRINT-ADDRESS-HEADER

	    "OZ":
	       Arg 0: :DEFAULT-MAIL-NAMING-CONVENTION

	    ZWEI:STRING-FROM-HEADER:  (P.C. =223)  (from 1AISITE: AISITE; NETWORK0)   What's this?!?
	       Arg 0 (HEADER): (:PERSONAL-NAME "Randy Parker" :NAME "PARKER" :HOST (:OBJECT "OZ"))
	       Arg 1 (FORMAT): NIL
	       Arg 2 (NAMING-CONVENTION): :DEFAULT

	The bug is clearly in the hacked-up version of ZWEI:STRING-FROM-HEADER
	that you are using.  I infer that it has been altered to attempt to deal
	better with the new state of host namespaces.  It probably assumes that
	the :HOST in the parsed header is a Host object; likely it needs to
	allow for the string case, and parse it into a host object.

Right. See below.

    The version of ZWEI:STRING-FROM-HEADER was supplied to us from Hornig to
    fix interaction problems with mailers here at MIT. It's too hairy for
    me to figure out:

    ;;; -*- Mode: LISP; Syntax: Zetalisp; Package: ZWEI; Base: 10; Patch-file: T -*-
    ;;; Patch file for Zmail version 107.3
    ;;; Reason: Function (:METHOD NET:HOST :MAIL-NAME):  Don't use made-up domain name.
    ;;; Function MAILER:ARPANET-MAIL-GATEWAY-HOST:  Search correct sites for gateway.
    ;;; Function (:METHOD NET:HOST :DEFAULT-MAIL-NAMING-CONVENTION):  Always use Internet domain names in headers.
    ;;; Function ZWEI:PRINT-DATE-HEADER:  Always use RFC 822 format.
    ;;; Function ZWEI:STRING-FROM-HEADER:  Always use @'s.
    ;;; Allow ZMail user to try hosts believed to be unavailable.
    ;;; Function MAILER:SMTP-SERVER:  Better management of paths.
    ;;; Function (:METHOD MAILER:SMTP-USER :INIT):  Don't use :ARPANET kludges.
    ;;; Function (:METHOD MAILER:SMTP-USER :START-MESSAGE):  More path management.
    ;;; Function MAILER:ADD-HOST-TO-ROUTE:  COmmon routine.
    ;;; Written by File-Server, 4/23/85 10:44:02
    ;;; while running on Riverside from FEP0:>rel6-server-mmpt-ns-fixed.load.1
    ;;; with Release 6.0, System 271.33, Zmail 107.2, LMFS 57.2, Tape 41.1, Basic Sage 15.9, Documentation Database 3.2, Common Lisp 4.2, Experimental Writer Tools 12.23, SCRC 5.5, Print 38.0, Mailer 43.3, IP-TCP 29.3, File Server stuff 1.5, microcode TMC5-MIC 319, Automatic server bug reporter, Namespace Server, MMPT fix.

    ...

    ; From file headers.lisp >rel-6>sys>zmail Q: (90)
    #8R ZWEI::(GLOBAL:COMPILER-LET ((GLOBAL:PACKAGE (GLOBAL:PKG-FIND-PACKAGE "ZWEI")))

    ;;; NAMING-CONVENTION is one of :INTERNET, :LOCALNET, or :ARPANET.
    ;;;  :INTERNET means the whole internet with hierarchical domains.
    ;;;  :LOCALNET means a local network which probably doesn't understand domains.
    ;;;  :ARPANET means the current turd that only understands the .ARPA domain, doesn't
    ;;;   allow path routing, etc.
    ;;; :DEFAULT means pick it so as to make it parsable.  Note that :LOCALNET is not always
    ;;; re-parsable.
    (DEFUN STRING-FROM-HEADER (HEADER FORMAT &OPTIONAL (NAMING-CONVENTION ':DEFAULT)
					     &AUX (PLIST (LOCF HEADER)) TEM)
      (COND ((AND (EQ FORMAT ':USE-ORIGINAL)
		  (SETQ TEM (GET PLIST ':INTERVAL)))
	     (STRING-INTERVAL (FIRST TEM) (SECOND TEM) T))
	    ((SETQ TEM (GETL PLIST '(:INFERIORS)))
	     (LOOP WITH STR = (MAKE-EMPTY-STRING 20.)
		   WITH (SUP-START SUP-END) = (CADR (GETL PLIST '(:INTERVAL :ORIGINAL-INTERVAL)))
		   FOR START FIRST SUP-START THEN (SECOND INF-INT)
		   FOR INF IN (CADR TEM)
		   AS INF-INT = (CADR (GETL (LOCF INF) '(:INTERVAL :ORIGINAL-INTERVAL)))
		   DO (SETQ STR (STRING-NCONC STR (STRING-INTERVAL START (FIRST INF-INT))))
		      (LET ((SUBHEAD (STRING-FROM-HEADER INF FORMAT NAMING-CONVENTION)))
			(WHEN SUBHEAD
			  (SETQ STR (STRING-NCONC STR SUBHEAD))))
		   FINALLY (RETURN (STRING-NCONC STR (STRING-INTERVAL START SUP-END)))))
	    (T
	     (LET ((USER (GET PLIST ':USER))
		   (STRING (GET PLIST ':NAME)))
	       (UNLESS (AND (NULL USER) (NULL STRING))
		 (LET ((HOST (GET PLIST ':HOST)))
		   (WHEN (NOT (NULL USER))
		     (SETF `(,STRING ,HOST) (SEND USER ':MAIL-ADDRESS))
		     (SETQ HOST `(:OBJECT ,HOST)))
		   (SETQ STRING (RFC822-QUOTE-IF-NECESSARY STRING))
		   (WHEN (AND (EQ FORMAT ':LOCAL-DEFAULT-HOST)
			      (GET PLIST ':HOST-DEFAULTED))
		     (SETQ HOST NIL))
;;;************************************************
;;; This seems to fix the error reported above.
    ;;; 
    ;;; Replaced (SECOND HOST) with host-object
    ;;;
		   (SELECTQ (CAR HOST)
		     (:OBJECT
		      (let ((host-object (neti:parse-host (second host))))  ; guarantees you have a parsed host
			(WHEN (EQ NAMING-CONVENTION ':DEFAULT)
			  (SETQ NAMING-CONVENTION (SEND host-object
							':DEFAULT-MAIL-NAMING-CONVENTION)))
			(UNLESS (AND (EQ FORMAT ':ONLY-PERSONAL)
				     (SUMMARY-SUPPRESS-HOST-P host-object))
			  ;; Use the "standard" name for this host.
			  (MULTIPLE-VALUE-BIND (HOST-NAME %-KLUDGE)
			      (SEND host-object :MAIL-NAME :NAMING-CONVENTION NAMING-CONVENTION
				    :%-ROUTING-KLUDGE T)
			    (SETQ STRING (STRING-APPEND STRING (IF %-KLUDGE #/% #/@) HOST-NAME))))))
;;;************************************************
		     (:DOMAIN
		      (WHEN (EQ NAMING-CONVENTION ':DEFAULT)
			(SETQ NAMING-CONVENTION ':INTERNET))
		      (SETQ STRING (STRING-APPEND STRING #/@))
		      (LOOP FOR FIRST-P FIRST T THEN NIL
			    FOR STR IN (CDR HOST)
			    UNLESS FIRST-P DO (SETQ STRING (STRING-APPEND STRING #/.))
			    DO (SETQ STRING (STRING-APPEND STRING STR))))
		     (OTHERWISE
		      (WHEN (EQ NAMING-CONVENTION ':DEFAULT)
			(SETQ NAMING-CONVENTION ':LOCALNET))
		      (DOLIST (HOST (CDR HOST))
			(SETQ STRING (STRING-APPEND STRING #/@ HOST))))))
		 (SELECTQ FORMAT
		   ((:USE-ORIGINAL :INCLUDE-PERSONAL :ONLY-PERSONAL)
		    (LET ((PERSONAL-NAME (IF USER
					     (SEND USER ':PERSONAL-NAME-FIRST-NAME-FIRST)
					     (GET PLIST ':PERSONAL-NAME)))
			  (ROUTE-SPEC (GET PLIST ':ROUTE)))
		      (WHEN (OR PERSONAL-NAME ROUTE-SPEC)
			(WHEN ROUTE-SPEC
			  (SETQ STRING (STRING-APPEND
					 (ROUTE-SPEC-STRING ROUTE-SPEC NAMING-CONVENTION)
					 STRING)))
			(SETQ STRING (STRING-APPEND #/< STRING #/>))
			(WHEN PERSONAL-NAME
			  (IF (EQ FORMAT ':ONLY-PERSONAL)
			      (SETQ STRING PERSONAL-NAME)
			      (SETQ PERSONAL-NAME (RFC822-QUOTE-IF-NECESSARY PERSONAL-NAME))
			      (SETQ STRING (STRING-APPEND PERSONAL-NAME #\SP STRING)))))))
		   ((:HOST :LOCAL-DEFAULT-HOST)
		    ;; For now, turn a route specification into multiple @'s when
		    ;; talking to the mail server.
		    (LET ((ROUTE-SPEC (GET PLIST ':ROUTE)))
		      (WHEN ROUTE-SPEC
			(IF (MEMQ NAMING-CONVENTION '(:INTERNET :ARPANET))
			    (SETQ STRING (STRING-APPEND
					   (ROUTE-SPEC-STRING ROUTE-SPEC NAMING-CONVENTION)
					   STRING))
			    (SETQ STRING (STRING-APPEND
					   STRING
					   (WITH-OUTPUT-TO-STRING (STREAM)
					     (LOOP FOR DOMAIN IN (REVERSE ROUTE-SPEC)
						   DO (SEND STREAM ':TYO #/@)
						   ;; Also only output the most specific
						   ;; part of the domain, since it tends
						   ;; to confuse existing mailers.
						   (SEND STREAM ':STRING-OUT
							 (STRING-FROM-HOST DOMAIN
									   NAMING-CONVENTION)))
					     ))))))))
		 STRING)))))

    )
3-Jul-85 21:00:24-EDT,1120;000000000000    
Received: from MIT-MC by MIT-OZ via Chaosnet; 8 May 85 22:27-EDT
Date: Wed,  8 May 85 22:25:33 EST
From: Christopher C. Stacy <CSTACY@MIT-MC>
Subject:  Mailer loses on soml delivery option
To: BSG@SCRC-STONY-BROOK
cc: BUG-COMSAT@MIT-MC, Hornig@SCRC-STONY-BROOK,
    joseph@SCRC-STONY-BROOK, BUG-LISPM@MIT-OZ
Message-ID: <[MIT-MC].492500.850508.CSTACY>

    Date: Wed, 8 May 85 11:03 EDT
    From: Bernard S. Greenberg <BSG at STONY-BROOK.SCRC.Symbolics.COM>
    In-Reply-To: <CJL.12109376756.BABYL@MIT-OZ>

     2) Say "this is what spooler documentably does", and give your
        local-machine address to it instead of your mail address.  Why
        do we give it our mail address, anyway?

This is what the spooler documentably does.
Why are you giving it your mail address anyway?

COMSAT is not changing mail into sends; DVRSPL it to do an interactive
send. Actually, I think it probably ordered it to SOML.  If not, it
should. The LispM ought to accept SOML somehow.)

Maybe the interface to the dover spooler needs rethinking.
Maybe the dover spooler needs additional functionality.

3-Jul-85 21:00:25-EDT,6478;000000000000 
Received: from MIT-MC by MIT-OZ via Chaosnet; 9 May 85 08:44-EDT
Received: from 40700015427 by MIT-MC via Chaosnet; 9 MAY 85  08:44:57 EDT
Date: Wednesday, 8 May 1985, 18:25-EDT
From: Cory Myers <cory at MIT-BUGS-BUNNY>
Subject: Scheduler Died
To: BUG-LISPM at OZ
Message-ID: <850508182502.1.CORY@DAFFY-DUCK.MIT>

In Symbolics 3670 Release 6.0, IP-TCP 29.0,
microcode TMC5-IO4-FPA-MIC 319, FEP 22, with UTIL, on Lisp Machine Daffy Duck:

I left my machine on last night - not running any jobs.  I cam in this
morning and found it this way.

>>Trap: The argument given to the SYS:MOVEM-LOCAL instruction, 0 (from local variable SI:PRI), was not a locative, or a list.
While in the function SI:PROCESS-SCHEDULER

SI:PROCESS-SCHEDULER:  (P.C. = 204)
   Local 0: #<DTP-LOCATIVE 14700006>
   Local 1: #<DTP-COMPILED-FUNCTION (:INTERNAL SI:PROCESS-SCHEDULER 1) 6743031>
   Local 2: #<DTP-LOCATIVE 14700006>
   Local 3: #<DTP-COMPILED-FUNCTION (:INTERNAL SI:PROCESS-SCHEDULER 0) 6743042>
   Local 4: "Error in the scheduler"
   Local 5: (DBG:SCHEDULER-DEBUGGER-HANDLER)
   Local 6 (REMAINING-QUANTUM): 0
   Local 7 (NEXT-PROCESS): NIL
   Local 8 (OLD-CURRENT-PROCESS): NIL
   Local 9 (THIS-TIME): 3162767
   Local 10 (LAST-TIME): 3162767
   Local 11 (DELTA-TIME): 0
   Local 12 (NEXT-WHO-TIME): 56
   Local 13 (PROCS): ((#<COROUTINING-PROCESS ZMACS-WINDOWS 120371310> #<DTP-COMPILED-FUNCTION (:INTERNAL TV:KBD-IO-BUFFER-INPUT-WAIT 0) 22405612> (#<IO-BUFFER 121156015: empty, State: NIL> #<DTP-COMPILED-FUNCTION (:INTERNAL ZWEI:EDITOR-INPUT 0) 31515510> (#<DTP-LOCATIVE 43240772> NIL NIL)) 0 NIL NIL #<IO-BUFFER 121156015: empty, State: NIL> #<DTP-COMPILED-FUNCTION (:INTERNAL ZWEI:EDITOR-INPUT 0) 31515510> (#<DTP-LOCATIVE 43240772> NIL NIL)) (#<PROCESS Main Zmail Window 120350602> #<DTP-COMPILED-FUNCTION (:INTERNAL TV:KBD-IO-BUFFER-INPUT-WAIT 0) 22405612> (#<IO-BUFFER 120602772: empty, State: NIL> #<DTP-COMPILED-FUNCTION (:INTERNAL ZWEI:EDITOR-INPUT 0) 31515510> (#<DTP-LOCATIVE 43203220> #<DTP-COMPILED-FUNCTION TV:IO-BUFFER-NOT-EMPTY-P 22316710> **)) 0 NIL NIL #<IO-BUFFER 120602772: empty, State: NIL> #<DTP-COMPILED-FUNCTION (:INTERNAL ZWEI:EDITOR-INPUT 0) 31515510> (#<DTP-LOCATIVE 43203220> #<DTP-COMPILED-FUNCTION TV:IO-BUFFER-NOT-EMPTY-P 22316710> (#<IO-BUFFER 120572214: empty, State: NIL>))) (#<PROCESS Screen Manager Background 120360603> #<DTP-COMPILED-FUNCTION (:INTERNAL TV:SCREEN-MANAGE-BACKGROUND-TOP-LEVEL 0) 22334271> (NIL 2641499 NIL) 0 NIL NIL NIL 2641499 NIL) (#<PROCESS NFILE Response Reader 120360632> #<DTP-COMPILED-FUNCTION FS:NFILE-RESPONSE-READER-CONDITION 14202726> NIL 0 NIL NIL NIL NIL NIL) (#<PROCESS Lisp Listener 1 120336526> #<DTP-COMPILED-FUNCTION (:INTERNAL TV:KBD-IO-BUFFER-INPUT-WAIT 0) 22405612> (#<IO-BUFFER 120673433: empty, State: NIL> #<DTP-COMPILED-FUNCTION (:INTERNAL ** 0) 14331024> (#<DTP-LOCATIVE 43200314>)) 0 NIL NIL #<IO-BUFFER 120673433: empty, State: NIL> #<DTP-COMPILED-FUNCTION (:INTERNAL (:DEFUN-METHOD SI:IE-INPUT-WAIT) 0) 14331024> (#<DTP-LOCATIVE 43200314>)) (#<PROCESS Alarm Background 657127> #<DTP-COMPILED-FUNCTION TIME-ELAPSED-P 2213023> (7200 3161776) -1 NIL NIL NIL 7200 3161776) (#<ZMAIL-BACKGROUND-PROCESS Zmail background 120350546> #<DTP-COMPILED-FUNCTION ZWEI:ZMAIL-BACKGROUND-PAUSE 47464347> (3162396 1800 NIL #<DTP-LOCATIVE 120350575> NIL #<DTP-LOCATIVE 120350577>) -1 NIL NIL NIL NIL NIL) (NIL NIL NIL NIL NIL NIL NIL NIL NIL) (NIL NIL NIL NIL NIL NIL NIL NIL NIL) (NIL NIL NIL NIL NIL NIL NIL NIL NIL) ...)
   Local 14 (THIS-PROCESS-WANTS-TO-RUN-BUTS-ITS-QUANTUM-HAS-EXPIRED): NIL
   Local 15 (FIRST-OF-THIS-PRIORITY): ((#<SIMPLE-PROCESS File Connection Scavenger 120360661> #<DTP-COMPILED-FUNCTION FS:FILE-CONNECTION-SCAVENGE-CONDITION 11576311> NIL 0 NIL NIL NIL NIL NIL) (#<COROUTINING-PROCESS ZMACS-WINDOWS 120371310> #<DTP-COMPILED-FUNCTION (:INTERNAL TV:KBD-IO-BUFFER-INPUT-WAIT 0) 22405612> (#<IO-BUFFER 121156015: empty, State: NIL> #<DTP-COMPILED-FUNCTION (:INTERNAL ZWEI:EDITOR-INPUT 0) 31515510> (#<DTP-LOCATIVE 43240772> NIL NIL)) 0 NIL NIL #<IO-BUFFER 121156015: empty, State: NIL> #<DTP-COMPILED-FUNCTION (:INTERNAL ZWEI:EDITOR-INPUT 0) 31515510> (#<DTP-LOCATIVE 43240772> NIL NIL)) (#<PROCESS Main Zmail Window 120350602> #<DTP-COMPILED-FUNCTION (:INTERNAL TV:KBD-IO-BUFFER-INPUT-WAIT 0) 22405612> (#<IO-BUFFER 120602772: empty, State: NIL> #<DTP-COMPILED-FUNCTION (:INTERNAL ZWEI:EDITOR-INPUT 0) 31515510> (#<DTP-LOCATIVE 43203220> #<DTP-COMPILED-FUNCTION TV:IO-BUFFER-NOT-EMPTY-P 22316710> **)) 0 NIL NIL #<IO-BUFFER 120602772: empty, State: NIL> #<DTP-COMPILED-FUNCTION (:INTERNAL ZWEI:EDITOR-INPUT 0) 31515510> (#<DTP-LOCATIVE 43203220> #<DTP-COMPILED-FUNCTION TV:IO-BUFFER-NOT-EMPTY-P 22316710> (#<IO-BUFFER 120572214: empty, State: NIL>))) (#<PROCESS Screen Manager Background 120360603> #<DTP-COMPILED-FUNCTION (:INTERNAL TV:SCREEN-MANAGE-BACKGROUND-TOP-LEVEL 0) 22334271> (NIL 2641499 NIL) 0 NIL NIL NIL 2641499 NIL) (#<PROCESS NFILE Response Reader 120360632> #<DTP-COMPILED-FUNCTION FS:NFILE-RESPONSE-READER-CONDITION 14202726> NIL 0 NIL NIL NIL NIL NIL) (#<PROCESS Lisp Listener 1 120336526> #<DTP-COMPILED-FUNCTION (:INTERNAL TV:KBD-IO-BUFFER-INPUT-WAIT 0) 22405612> (#<IO-BUFFER 120673433: empty, State: NIL> #<DTP-COMPILED-FUNCTION (:INTERNAL ** 0) 14331024> (#<DTP-LOCATIVE 43200314>)) 0 NIL NIL #<IO-BUFFER 120673433: empty, State: NIL> #<DTP-COMPILED-FUNCTION (:INTERNAL (:DEFUN-METHOD SI:IE-INPUT-WAIT) 0) 14331024> (#<DTP-LOCATIVE 43200314>)) (#<PROCESS Alarm Background 657127> #<DTP-COMPILED-FUNCTION TIME-ELAPSED-P 2213023> (7200 3161776) -1 NIL NIL NIL 7200 3161776) (#<ZMAIL-BACKGROUND-PROCESS Zmail background 120350546> #<DTP-COMPILED-FUNCTION ZWEI:ZMAIL-BACKGROUND-PAUSE 47464347> (3162396 1800 NIL #<DTP-LOCATIVE 120350575> NIL #<DTP-LOCATIVE 120350577>) -1 NIL NIL NIL NIL NIL) (NIL NIL NIL NIL NIL NIL NIL NIL NIL) (NIL NIL NIL NIL NIL NIL NIL NIL NIL) ...)
   Local 16 (CURRENT-PRIORITY): 0
   Local 17 (APE): (#<COROUTINING-PROCESS ZMACS-WINDOWS 120371310> #<DTP-COMPILED-FUNCTION (:INTERNAL TV:KBD-IO-BUFFER-INPUT-WAIT 0) 22405612> (#<IO-BUFFER 121156015: empty, State: NIL> #<DTP-COMPILED-FUNCTION (:INTERNAL ZWEI:EDITOR-INPUT 0) 31515510> (#<DTP-LOCATIVE 43240772> NIL NIL)) 0 NIL NIL #<IO-BUFFER 121156015: empty, State: NIL> #<DTP-COMPILED-FUNCTION (:INTERNAL ZWEI:EDITOR-INPUT 0) 31515510> (#<DTP-LOCATIVE 43240772> NIL NIL))
   Local 18 (PRI): 0
   Local 19 (PROC): #<COROUTINING-PROCESS ZMACS-WINDOWS 120371310>
3-Jul-85 21:00:25-EDT,3575;000000000000    
Received: from MIT-MC by MIT-OZ via Chaosnet; 9 May 85 10:41-EDT
Received: from SCRC-STONY-BROOK.ARPA by MIT-MC.ARPA;  9 MAY 85 10:40:26 EDT
Received: from ANNISQUAM.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 233424; Thu 9-May-85 10:30:37-EDT
Date: Thu, 9 May 85 10:35 EDT
From: Doug Dodds <DODDS@TENEX.SCRC.Symbolics.COM>
Subject: Profile problems with hosts
To: PARKER%MIT-OZ@MIT-MC.ARPA
cc: CJL%MIT-OZ@MIT-MC.ARPA, DODDS@TENEX, BUG-LISPM%MIT-OZ@MIT-MC.ARPA,
    BUG-ZMAIL%MIT-OZ@MIT-MC.ARPA
In-Reply-To: <850508194812.1.PARKER@SINATRA>
Message-ID: <850509103521.8.DODDS@ANNISQUAM.SCRC.Symbolics.COM>

    Date: Wed, 8 May 85 19:48 EDT
    From: Randy Parker <PARKER@OZ>
	From: Chris Lindblad <CJL@OZ>
	    From: Doug Dodds <DODDS@TENEX.SCRC.Symbolics.COM>
		From: Randy Parker <PARKER@OZ>
		In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.1,
		microcode TMC5-MIC 319, FEP 17, on Lisp Machine Bing Crosby:
		Warm booted from: ZMACS-WINDOWS.

		Awhile back I edited my profile and typed "Randy Parker <parker@oz>" to the choose
		variables window in Edit profile for the value of *default-cc-list*.  ZMAIL inserted
		the following form in my zmail init file:

		(LOGIN-SETQ zwei:*DEFAULT-CC-LIST* '((:PERSONAL-NAME "Randy Parker"
								:NAME
								"PARKER"
								:HOST
								(:OBJECT "OZ"))))

		When I check *default-cc-list*, it reads as follows:
		((:PERSONAL-NAME "Randy Parker" :NAME "PARKER" :HOST (:OBJECT #<TOPS20-HOST OZ 1400364>)))

		All this is fine (and has been since that time), but recently, after selecting other
		options in the profile variable windows, clicking on EDIT, and then evaling the profile
		buffer (this has been repeated several times), any attempt to Reply or Mail generates
		this error.  

		>>Error: The array, "OZ", is not a valid function except when
			 given a valid subscript as its argument.
		While in the function "OZ"  ZWEI:STRING-FROM-HEADER  ZWEI:PRINT-ADDRESS-HEADER

	    The bug is clearly in the hacked-up version of ZWEI:STRING-FROM-HEADER
	    that you are using.  I infer that it has been altered to attempt to deal
	    better with the new state of host namespaces.  It probably assumes that
	    the :HOST in the parsed header is a Host object; likely it needs to
	    allow for the string case, and parse it into a host object.

    Right. See below.

	The version of ZWEI:STRING-FROM-HEADER was supplied to us from Hornig to
	fix interaction problems with mailers here at MIT. It's too hairy for
	me to figure out:

      ...

    ;;;************************************************
    ;;; This seems to fix the error reported above.
	;;; 
	;;; Replaced (SECOND HOST) with host-object
	;;;
		       (SELECTQ (CAR HOST)
			 (:OBJECT
			  (let ((host-object (neti:parse-host (second host))))  ; guarantees you have a parsed host
			    (WHEN (EQ NAMING-CONVENTION ':DEFAULT)
			      (SETQ NAMING-CONVENTION (SEND host-object
							    ':DEFAULT-MAIL-NAMING-CONVENTION)))
			    (UNLESS (AND (EQ FORMAT ':ONLY-PERSONAL)
					 (SUMMARY-SUPPRESS-HOST-P host-object))
			      ;; Use the "standard" name for this host.
			      (MULTIPLE-VALUE-BIND (HOST-NAME %-KLUDGE)
				  (SEND host-object :MAIL-NAME :NAMING-CONVENTION NAMING-CONVENTION
					:%-ROUTING-KLUDGE T)
				(SETQ STRING (STRING-APPEND STRING (IF %-KLUDGE #/% #/@) HOST-NAME))))))
    ;;;************************************************

    ...

Thanks.  It hasn't been reported here, but it looks like we need this
fix also.

3-Jul-85 21:00:25-EDT,2486;000000000000   
Received: from MIT-MC by MIT-OZ via Chaosnet; 9 May 85 11:57-EDT
Received: from SCRC-STONY-BROOK.ARPA by MIT-MC.ARPA;  9 MAY 85 11:41:31 EDT
Received: from PEACE.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 233502; Thu 9-May-85 11:36:25-EDT
Date: Thu, 9 May 85 11:40 EDT
From: Charles Hornig <Hornig@SCRC-STONY-BROOK.ARPA>
Subject: Mailer loses on soml delivery option
To: Joseph R Goldstone <joseph@SCRC-QUABBIN.ARPA>,
    Bernard S. Greenberg <BSG@SCRC-STONY-BROOK.ARPA>, CSTACY@MIT-MC.ARPA,
    CJL%OZ@MIT-MC.ARPA
cc: Hornig@SCRC-STONY-BROOK.ARPA, BUG-LISPM%OZ@MIT-MC.ARPA
In-Reply-To: <850508100806.2.JOSEPH@HARLEM.SCRC.Symbolics.COM>
Message-ID: <850509114008.2.HORNIG@PEACE.SCRC.Symbolics.COM>

    Date: Wed, 8 May 85 10:08 EDT
    From: Joseph R Goldstone <joseph@SCRC-QUABBIN.ARPA>

	Date: Wed, 8 May 85 09:14 EDT
	From: Bernard S. Greenberg <BSG@STONY-BROOK.SCRC.Symbolics.COM>

	    Date: Tue,  7 May 85 19:40:15 EST
	    From: Christopher C. Stacy <CSTACY@MIT-MC>

		 Date: Fri, 3 May 85 14:49 EDT
		 From: CJL@OZ

		 In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 8.6,
		 Mailer 43.0, microcode TMC5-MIC 319, on Lisp Machine
		 Ronald Reagan:
     
		 If mail is received destined for foo@reagan here on
		 reagan, regardless of who is logged in on the machine,
		 send is assumed, and a window pops up and displays the
		 message, asking for response.

	    If I understand your message, maybe the real bug is that the mailer on
	    Reagan turns MAIL into SEND.  Maybe if the user is unknown (no
	    forwarding or whatever) then it should dump the mail into a mailbox in
	    some dead-letters directory in LMFS and send an error receipt to
	    the originator as specified by the return path.

	Machines are not required to have a LMFS.   Most don't.

    All Symbolics computers (urrk-ptuui!  LispMs!) that run our Mailer software
    must have a local LMFS.  The logical place to put failed MAILs as described
    above would be with the rest of the rubbish in local:>Mail>Static>failed.mail.

    I'll try to think about the issues behind this conversation later today.

Before this goes too far, remember that CJL's problem above had nothing
to do with MAIL.  He was confused.  In fact, the Dover server was doing
a SEND to Reagan (using SMTP).  The fact that Converse pays no attention
to the recipient of the message is longstanding and I have been told
that it is a feature.

3-Jul-85 21:00:26-EDT,3333;000000000000 
Received: from MIT-MC by MIT-OZ via Chaosnet; 9 May 85 12:22-EDT
Received: from SCRC-STONY-BROOK.ARPA by MIT-MC.ARPA;  9 MAY 85 12:22:16 EDT
Received: from PEACE.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 233543; Thu 9-May-85 12:17:10-EDT
Date: Thu, 9 May 85 12:20 EDT
From: Charles Hornig <Hornig@SCRC-STONY-BROOK.ARPA>
Subject: Profile problems with hosts
To: Chris Lindblad <CJL%OZ@MIT-MC.ARPA>, DODDS@SCRC-STONY-BROOK.ARPA
cc: BUG-LISPM%OZ@MIT-MC.ARPA, BUG-ZMAIL%OZ@MIT-MC.ARPA,
    PARKER%oz@MIT-MC.ARPA
In-Reply-To: <850508173549.1.CJL@BUDDY>
Message-ID: <850509122056.4.HORNIG@PEACE.SCRC.Symbolics.COM>

    Date: Wed, 8 May 85 17:35 EDT
    From: Chris Lindblad <CJL@OZ>
	Date: Wed, 8 May 85 15:39 EDT
	From: Doug Dodds <DODDS@TENEX.SCRC.Symbolics.COM>
	    Date: Mon, 6 May 85 22:46 EDT
	    From: Randy Parker <PARKER@OZ>
	    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.1,
	    microcode TMC5-MIC 319, FEP 17, on Lisp Machine Bing Crosby:
	    Warm booted from: ZMACS-WINDOWS.

	    Awhile back I edited my profile and typed "Randy Parker <parker@oz>" to the choose
	    variables window in Edit profile for the value of *default-cc-list*.  ZMAIL inserted
	    the following form in my zmail init file:

	    (LOGIN-SETQ zwei:*DEFAULT-CC-LIST* '((:PERSONAL-NAME "Randy Parker"
							    :NAME
							    "PARKER"
							    :HOST
							    (:OBJECT "OZ"))))

The problem is here!  "OZ" isn't a host object, it's a string.  ZMail
shouldn't be putting it there.

	    When I check *default-cc-list*, it reads as follows:
	    ((:PERSONAL-NAME "Randy Parker" :NAME "PARKER" :HOST (:OBJECT #<TOPS20-HOST OZ 1400364>)))

	    All this is fine (and has been since that time), but recently, after selecting other
	    options in the profile variable windows, clicking on EDIT, and then evaling the profile
	    buffer (this has been repeated several times), any attempt to Reply or Mail generates
	    this error.  

	    Of course, *default-cc-list* gives this:
	    ((:PERSONAL-NAME "Randy Parker" :NAME "PARKER" :HOST (:OBJECT "OZ")))

	    It is clear which is right and how to get the host object, but both are being
	    generated by the system. I haven't had a chance to look at ZWEI:STRING-FROM-HEADER.



	    >>Error: The array, "OZ", is not a valid function except when
		     given a valid subscript as its argument.
	    While in the function "OZ"  ZWEI:STRING-FROM-HEADER  ZWEI:PRINT-ADDRESS-HEADER

	    "OZ":
	       Arg 0: :DEFAULT-MAIL-NAMING-CONVENTION

	    ZWEI:STRING-FROM-HEADER:  (P.C. =223)  (from 1AISITE: AISITE; NETWORK0)   What's this?!?
	       Arg 0 (HEADER): (:PERSONAL-NAME "Randy Parker" :NAME "PARKER" :HOST (:OBJECT "OZ"))
	       Arg 1 (FORMAT): NIL
	       Arg 2 (NAMING-CONVENTION): :DEFAULT

	The bug is clearly in the hacked-up version of ZWEI:STRING-FROM-HEADER
	that you are using.  I infer that it has been altered to attempt to deal
	better with the new state of host namespaces.  It probably assumes that
	the :HOST in the parsed header is a Host object; likely it needs to
	allow for the string case, and parse it into a host object.

There is no "string case".  If you say :OBJECT, there should be an
object.  If you want an arbitrary string, use :SINGLE.

3-Jul-85 21:00:26-EDT,1590;000000000000    
Received: from MIT-MC by MIT-OZ via Chaosnet; 9 May 85 12:35-EDT
Received: from SCRC-STONY-BROOK.ARPA by MIT-MC.ARPA;  9 MAY 85 12:30:34 EDT
Received: from PEACE.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 233554; Thu 9-May-85 12:25:16-EDT
Date: Thu, 9 May 85 12:29 EDT
From: Charles Hornig <Hornig@SCRC-STONY-BROOK.ARPA>
Subject: Can't dired Multics
To: Gavan Duffy <GAVAN@OZ>, RWK@SCRC-YUKON.ARPA
cc: BUG-LISPM@MIT-MC.ARPA, c.c@MIT-MULTICS.ARPA
In-Reply-To: <850507174332.2.GAVAN@MORRISON>
Message-ID: <850509122902.7.HORNIG@PEACE.SCRC.Symbolics.COM>

    Date: Tue, 7 May 85 17:43 EDT
    From: Gavan Duffy <GAVAN@OZ>
    ...
    OK.  I did all that.  The connection was made and the directory list even
    started to happen.  But then I got the following error repeatedly.  Is this
    Multics screwing me, or is it the lispm?

    >>Error: Block mode stream closed unexpectedly.
    While in the function (:METHOD TCP::FTP-BLOCK-MODE-INPUT-MIXIN :NEXT-INPUT-BUFFER)  (:INTERNAL (:METHOD TCP::FTP-BLOCK-MODE-CHARACTER-INPUT-STREAM :COMBINED :NEXT-INPUT-BUFFER) 0)  (:METHOD SI:ASCII-TRANSLATING-BUFFERED-INPUT-STREAM-MIXIN :WHOPPER :NEXT-INPUT-BUFFER)

This is Multics screwing you.  They use the wrong bit to indicate Block
Mode EOF.  Sigh.  That's one of the special checks that the
MULTICS-TCP-FTP-FILE-ACCESS-PATH code did.  You just can't win.  Next
hack is to hack out the whole part of the :LOGIN method that sends the
"MODE B" command and pretend that it failed.  It should be clear what is
going on from the source.

3-Jul-85 21:00:26-EDT,1664;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 9 May 85 12:36-EDT
Received: from SCRC-STONY-BROOK.ARPA by MIT-MC.ARPA;  9 MAY 85 12:31:06 EDT
Received: from PEACE.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 233556; Thu 9-May-85 12:25:36-EDT
Date: Thu, 9 May 85 12:29 EDT
From: Charles Hornig <Hornig@SCRC-STONY-BROOK.ARPA>
Subject: Can't dired Multics
To: Gavan Duffy <GAVAN%OZ@MIT-MC.ARPA>, RWK@SCRC-YUKON.ARPA
cc: BUG-LISPM@MIT-MC.ARPA, c.c@MIT-MULTICS.ARPA
In-Reply-To: <850507174332.2.GAVAN@MORRISON>
Supersedes: <850509122902.7.HORNIG@PEACE.SCRC.Symbolics.COM>
Message-ID: <850509122921.8.HORNIG@PEACE.SCRC.Symbolics.COM>

    Date: Tue, 7 May 85 17:43 EDT
    From: Gavan Duffy <GAVAN@OZ>
    ...
    OK.  I did all that.  The connection was made and the directory list even
    started to happen.  But then I got the following error repeatedly.  Is this
    Multics screwing me, or is it the lispm?

    >>Error: Block mode stream closed unexpectedly.
    While in the function (:METHOD TCP::FTP-BLOCK-MODE-INPUT-MIXIN :NEXT-INPUT-BUFFER)  (:INTERNAL (:METHOD TCP::FTP-BLOCK-MODE-CHARACTER-INPUT-STREAM :COMBINED :NEXT-INPUT-BUFFER) 0)  (:METHOD SI:ASCII-TRANSLATING-BUFFERED-INPUT-STREAM-MIXIN :WHOPPER :NEXT-INPUT-BUFFER)

This is Multics screwing you.  They use the wrong bit to indicate Block
Mode EOF.  Sigh.  That's one of the special checks that the
MULTICS-TCP-FTP-FILE-ACCESS-PATH code did.  You just can't win.  Next
hack is to hack out the whole part of the :LOGIN method that sends the
"MODE B" command and pretend that it failed.  It should be clear what is
going on from the source.

3-Jul-85 21:00:26-EDT,2856;000000000000   
Received: from MIT-REAGAN by MIT-OZ via Chaosnet; 9 May 85 13:59-EDT
Received: from SCRC-QUABBIN.ARPA by MIT-REAGAN via INTERNET with SMTP id 4412; 9 May 85 13:59:31-EDT
Received: from NEPONSET.SCRC.Symbolics.COM by SCRC-QUABBIN.ARPA via CHAOS with CHAOS-MAIL id 162153; Thu 9-May-85 13:55:08-EDT
Date: Thu, 9 May 85 13:59 EDT
From: David C. Plummer in disguise <DCP@SCRC-QUABBIN.ARPA>
Subject: Scheduler Died
To: Cory Myers <cory@MIT-BUGS-BUNNY.mit>, BUG-LISPM@OZ.mit
In-Reply-To: <850508182502.1.CORY@DAFFY-DUCK.MIT>
Message-ID: <850509135930.2.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Wednesday, 8 May 1985, 18:25-EDT
    From: Cory Myers <cory at MIT-BUGS-BUNNY>

    In Symbolics 3670 Release 6.0, IP-TCP 29.0,
    microcode TMC5-IO4-FPA-MIC 319, FEP 22, with UTIL, on Lisp Machine Daffy Duck:

    I left my machine on last night - not running any jobs.  I cam in this
    morning and found it this way.

My guess is that the MOVEM-LOCAL instruction at PC 204 actually
reexecuted the CAR instruction at PC 203.  The disassembly looks like it
is executing
	(setq pri (cadddr ape))
Well, (cadddr ape) is indeed 0.  My first guess is the TMC board, second
guess is SQ.  If this isn't very repeatable, we may never know for sure.

    >>Trap: The argument given to the SYS:MOVEM-LOCAL instruction, 0 (from local variable SI:PRI), was not a locative, or a list.
    While in the function SI:PROCESS-SCHEDULER

    SI:PROCESS-SCHEDULER:  (P.C. = 204)
       Local 0: #<DTP-LOCATIVE 14700006>
       Local 1: #<DTP-COMPILED-FUNCTION (:INTERNAL SI:PROCESS-SCHEDULER 1) 6743031>
       Local 2: #<DTP-LOCATIVE 14700006>
       Local 3: #<DTP-COMPILED-FUNCTION (:INTERNAL SI:PROCESS-SCHEDULER 0) 6743042>
       Local 4: "Error in the scheduler"
       Local 5: (DBG:SCHEDULER-DEBUGGER-HANDLER)
       Local 6 (REMAINING-QUANTUM): 0
       Local 7 (NEXT-PROCESS): NIL
       Local 8 (OLD-CURRENT-PROCESS): NIL
       Local 9 (THIS-TIME): 3162767
       Local 10 (LAST-TIME): 3162767
       Local 11 (DELTA-TIME): 0
       Local 12 (NEXT-WHO-TIME): 56
       Local 13 (PROCS): (...many...)
       Local 14 (THIS-PROCESS-WANTS-TO-RUN-BUTS-ITS-QUANTUM-HAS-EXPIRED): NIL
       Local 15 (FIRST-OF-THIS-PRIORITY): (...many...)
       Local 16 (CURRENT-PRIORITY): 0
       Local 17 (APE): (#<COROUTINING-PROCESS ZMACS-WINDOWS 120371310> #<DTP-COMPILED-FUNCTION (:INTERNAL TV:KBD-IO-BUFFER-INPUT-WAIT 0) 22405612> (#<IO-BUFFER 121156015: empty, State: NIL> #<DTP-COMPILED-FUNCTION (:INTERNAL ZWEI:EDITOR-INPUT 0) 31515510> (#<DTP-LOCATIVE 43240772> NIL NIL)) 0 NIL NIL #<IO-BUFFER 121156015: empty, State: NIL> #<DTP-COMPILED-FUNCTION (:INTERNAL ZWEI:EDITOR-INPUT 0) 31515510> (#<DTP-LOCATIVE 43240772> NIL NIL))
       Local 18 (PRI): 0
       Local 19 (PROC): #<COROUTINING-PROCESS ZMACS-WINDOWS 120371310>


3-Jul-85 21:00:27-EDT,1712;000000000000  
Received: from MIT-SID by MIT-OZ via Chaosnet; 9 May 85 15:49-EDT
Date: Thu, 9 May 85 15:48 EDT
From: Chris Lindblad <CJL@OZ>
Subject: Mailer loses on soml delivery option
To: CSTACY@MIT-MC, BSG@SCRC-STONY-BROOK
cc: BUG-COMSAT@MIT-MC, Hornig@SCRC-STONY-BROOK, joseph@SCRC-STONY-BROOK,
    BUG-LISPM@OZ
In-Reply-To: <[MIT-MC].492500.850508.CSTACY>
Message-ID: <850509154830.1.CJL@SID>

    Date: Wed,  8 May 85 22:25:33 EST
    From: Christopher C. Stacy <CSTACY@MIT-MC>
	Date: Wed, 8 May 85 11:03 EDT
	From: Bernard S. Greenberg <BSG at STONY-BROOK.SCRC.Symbolics.COM>
	 2) Say "this is what spooler documentably does", and give your
	    local-machine address to it instead of your mail address.  Why
	    do we give it our mail address, anyway?

    This is what the spooler documentably does.
    Why are you giving it your mail address anyway?

    COMSAT is not changing mail into sends; DVRSPL it to do an interactive
    send. Actually, I think it probably ordered it to SOML.  If not, it
    should. The LispM ought to accept SOML somehow.)

Wait. Does the dover do a send, or a soml? If it's a send, then
person@logged-in-machine is what it wants. If its a soml,
person's-mailbox@mail-machine is what it wants. There is a difference.
The dover should not send mail to person@logged-in-machine, nor do a
send to person's-mailbox@mail-machine.

My impression is there is two marginal-but-works-most-of-the-time
things going on here. 

1. Comsat does a chaos-send to a mail address.
2. Lisp Machines accept sends to people that aren't even logged into
   them.

I don't expect either of these things to be changed.

I added (zwei:qsends-off) to reagan's init file.
3-Jul-85 21:00:27-EDT,2087;000000000000  
Received: from MIT-MC by MIT-OZ via Chaosnet; 9 May 85 17:08-EDT
Date: Thu,  9 May 85 17:02:07 EST
From: Christopher C. Stacy <CSTACY@MIT-MC>
Subject:  Mailer loses on soml delivery option
To: CJL@MIT-OZ
cc: BUG-COMSAT@MIT-MC, BSG@SCRC-STONY-BROOK,
    Hornig@SCRC-STONY-BROOK, joseph@SCRC-STONY-BROOK,
    BUG-LISPM@MIT-OZ
In-reply-to: Msg of Thu 9 May 85 15:48 EDT from Chris Lindblad <CJL at OZ>
Message-ID: <[MIT-MC].493903.850509.CSTACY>

    Date: Thu, 9 May 85 15:48 EDT
    From: Chris Lindblad <CJL at OZ>
    To:   CSTACY at MIT-MC.ARPA, BSG at SCRC-STONY-BROOK.ARPA
    cc:   BUG-COMSAT at MIT-MC.ARPA, Hornig at SCRC-STONY-BROOK.ARPA,
          joseph at SCRC-STONY-BROOK.ARPA, BUG-LISPM at OZ
    Re:   Mailer loses on soml delivery option
    In-Reply-To: <[MIT-MC].492500.850508.CSTACY>

        Date: Wed,  8 May 85 22:25:33 EST
        From: Christopher C. Stacy <CSTACY@MIT-MC>
    	Date: Wed, 8 May 85 11:03 EDT
    	From: Bernard S. Greenberg <BSG at STONY-BROOK.SCRC.Symbolics.COM>
    	 2) Say "this is what spooler documentably does", and give your
    	    local-machine address to it instead of your mail address.  Why
    	    do we give it our mail address, anyway?

        This is what the spooler documentably does.
        Why are you giving it your mail address anyway?

        COMSAT is not changing mail into sends; DVRSPL it to do an interactive
        send. Actually, I think it probably ordered it to SOML.  If not, it
        should. The LispM ought to accept SOML somehow.)

    Wait. Does the dover do a send, or a soml? If it's a send, then

The DVRSPL program is either telling COMSAT to SEND or to SOML, I am
not sure which but it should probably be the latter.  The DVRSPL
does not tell COMSAT to MAIL things.  COMSAT is *not* randomly
changing mail into sends or anythign like that.

This problem is that this stuff was not designed to work with personal
machines.  It assumes that people are queuing things from a machine
where they receive mail, although they may be logged in there sometimes.
3-Jul-85 21:00:27-EDT,1440;000000000000    
Received: from MIT-REAGAN by MIT-OZ via Chaosnet; 9 May 85 18:38-EDT
Received: from SCRC-QUABBIN.ARPA by MIT-REAGAN via INTERNET with SMTP id 4602; 9 May 85 18:37:43-EDT
Received: from NEPONSET.SCRC.Symbolics.COM by SCRC-QUABBIN.ARPA via CHAOS with CHAOS-MAIL id 162307; Thu 9-May-85 17:48:35-EDT
Date: Thu, 9 May 85 17:52 EDT
From: David C. Plummer in disguise <DCP@SCRC-QUABBIN.ARPA>
Subject: Mailer loses on soml delivery option
To: Chris Lindblad <CJL@OZ>, CSTACY@MIT-MC.ARPA,
    BSG@SCRC-STONY-BROOK.ARPA
cc: BUG-COMSAT@MIT-MC.ARPA, Hornig@SCRC-STONY-BROOK.ARPA,
    joseph@SCRC-STONY-BROOK.ARPA, BUG-LISPM@OZ.mit
In-Reply-To: <850509154830.1.CJL@SID>
Supersedes: <850509175250.4.NFEP@NEPONSET.SCRC.Symbolics.COM>
Message-ID: <850509175259.5.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Thu, 9 May 85 15:48 EDT
    From: Chris Lindblad <CJL@OZ>

    My impression is there is two marginal-but-works-most-of-the-time
    things going on here. 

    1. Comsat does a chaos-send to a mail address.
    2. Lisp Machines accept sends to people that aren't even logged into
       them.

    I don't expect either of these things to be changed.
Being DCP logged in these days as NFEP, I consider (2) a feature.

    I added (zwei:qsends-off) to reagan's init file.
Sigh.  I hope nobody ever needs to legitimately send a qsend to
File-Server@Reagan.  Maybe it would be better to hack up (2) just for
Reagan?

3-Jul-85 21:00:28-EDT,1508;000000000000 
Received: from MIT-REAGAN by MIT-OZ via Chaosnet; 9 May 85 18:38-EDT
Received: from SCRC-QUABBIN.ARPA by MIT-REAGAN via INTERNET with SMTP id 4603; 9 May 85 18:37:49-EDT
Received: from NEPONSET.SCRC.Symbolics.COM by SCRC-QUABBIN.ARPA via CHAOS with CHAOS-MAIL id 162309; Thu 9-May-85 17:48:41-EDT
Date: Thu, 9 May 85 17:53 EDT
From: David C. Plummer in disguise <DCP@SCRC-QUABBIN.ARPA>
Subject: Mailer loses on soml delivery option
To: Chris Lindblad <CJL@OZ.mit>, CSTACY@MIT-MC.ARPA,
    BSG@SCRC-STONY-BROOK.ARPA
cc: BUG-COMSAT@MIT-MC.ARPA, Hornig@SCRC-STONY-BROOK.ARPA,
    joseph@SCRC-STONY-BROOK.ARPA, BUG-LISPM@OZ.mit
In-Reply-To: <850509154830.1.CJL@SID>
Supersedes: <850509175250.4.NFEP@NEPONSET.SCRC.Symbolics.COM>,
            <850509175259.5.NFEP@NEPONSET.SCRC.Symbolics.COM>
Message-ID: <850509175305.6.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Thu, 9 May 85 15:48 EDT
    From: Chris Lindblad <CJL@OZ>

    My impression is there is two marginal-but-works-most-of-the-time
    things going on here. 

    1. Comsat does a chaos-send to a mail address.
    2. Lisp Machines accept sends to people that aren't even logged into
       them.

    I don't expect either of these things to be changed.
Being DCP logged in these days as NFEP, I consider (2) a feature.

    I added (zwei:qsends-off) to reagan's init file.
Sigh.  I hope nobody ever needs to legitimately send a qsend to
File-Server@Reagan.  Maybe it would be better to hack up (2) just for
Reagan?

3-Jul-85 21:00:28-EDT,1397;000000000000  
Received: from MIT-MC by MIT-OZ via Chaosnet; 9 May 85 18:53-EDT
Received: from MIT-OZ by MIT-MC via Chaosnet; 9 MAY 85  18:51:25 EDT
Received: from MIT-MORRISON by MIT-OZ via Chaosnet; 9 May 85 18:41-EDT
Date: Thu, 9 May 85 18:40 EDT
From: Gavan Duffy <GAVAN@OZ>
Subject: Can't dired Multics
To: Hornig@SCRC-STONY-BROOK.ARPA, GAVAN@OZ, RWK@SCRC-YUKON.ARPA
cc: BUG-LISPM@MIT-MC.ARPA, c.c@MIT-MULTICS.ARPA
In-Reply-To: <850509122902.7.HORNIG@PEACE.SCRC.Symbolics.COM>
Message-ID: <850509184024.2.GAVAN@MORRISON>

    Date: Thu, 9 May 85 12:29 EDT
    From: Charles Hornig <Hornig@SCRC-STONY-BROOK.ARPA>

    This is Multics screwing you.  They use the wrong bit to indicate Block
    Mode EOF.  Sigh.  That's one of the special checks that the
    MULTICS-TCP-FTP-FILE-ACCESS-PATH code did.  You just can't win.  Next
    hack is to hack out the whole part of the :LOGIN method that sends the
    "MODE B" command and pretend that it failed.  It should be clear what is
    going on from the source.

OK, I was successful.  Thanks.  Someone should force Multics to do the right
thing.  Either that, or pull the plug.  Will this be fixed by 6.1 do you
think, or should I try to remember all this procedure in case I ever again
need to dired Multics?

Also, how do I close the connection on Multics' end so that my account is not
charged even when I've finished direding?
3-Jul-85 21:00:28-EDT,1339;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 10 May 85 20:08-EDT
Received: from MIT-OZ by MIT-MC via Chaosnet; 10 MAY 85  20:03:32 EDT
Received: from MIT-MORRISON by MIT-OZ via Chaosnet; 10 May 85 20:02-EDT
Date: Fri, 10 May 85 20:01 EDT
From: Gavan Duffy <GAVAN@OZ>
Subject: Declarations after doc-strings in macros. 
To: DCP@QUABBIN.SCRC.Symbolics.COM, GAVAN@OZ, BUG-LISPM@MIT-MC.ARPA
In-Reply-To: <850501183311.1.NFEP@NEPONSET.SCRC.Symbolics.COM>
Message-ID: <850510200123.6.GAVAN@MORRISON>

    Date: Wed, 1 May 85 18:33 EDT
    From: David C. Plummer in disguise <DCP@QUABBIN.SCRC.Symbolics.COM>

	Date: Mon, 29 Apr 85 05:43 EDT
	From: Gavan Duffy <GAVAN@OZ>

	In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 8.6,
	microcode TMC5-MIC 319, FEP 22, on Lisp Machine Jim Morrison:

	Declarations in macros work just fine, unless they follow doc-strings.
	This form compiles just fine.

	(DEFMACRO FOO (BAR)
	  (DECLARE (VALUES FOOBAR))
	  `(INTERN (STRING-APPEND "FOO" ,BAR)))

	However, the compiler issues a warning that the declaration in
	this next form is illegal and will be ignored.

	(DEFMACRO BAR (FOO)
	  "Similar to FOO."
	  (DECLARE (VALUES BARFOO))
	  `(INTERN (STRING-APPEND "BAR" ,FOO)))

    This has already been fixed for 6.1.

Great.  Any way to make them work in the meantime?
3-Jul-85 21:00:29-EDT,298;000000000000  
Mail-From: KLOTZ created at 11-May-85 05:27:38
Date: Sat 11 May 85 05:27-EDT
From: Leigh L. Klotz <KLOTZ@MIT-OZ>
To: bug-symbolics-hardware@MIT-OZ, bug-lispm@MIT-OZ

Reagan stopped dead in its tracks.  No response to kbd input.
The red fault light is on.  JCMA tried to boot it once anyway.
3-Jul-85 21:00:29-EDT,4093;000000000001 
Received: from MIT-BUDDY by MIT-OZ via Chaosnet; 11 May 85 16:12-EDT
Date: Sat, 11 May 85 16:12 EDT
From: Henry Lieberman <HENRY@OZ>
Subject: Namespace lossage while namespace server down
To: BUG-LISPM@OZ
Message-ID: <"850511161235.1.Henry@OZ"@BUDDY>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.1,
Experimental COLOR 135.1, Experimental COLOR-DEMO 68.0,
Experimental COLOR-EDITOR 4.0, Experimental COLOR-PALETTE 2.0,
microcode TMC5-MIC 319, on Lisp Machine Buddy Holly:

When I logged into this machine, it said "User Henry not known. Log in to some
host?" to which I replied "Oz". Then, trying to read a file off Oz got stuck
in "TCP connect" in the who line, then this. Investigation showed namespace
server Reagan in the middle of cold booting.

>>Error: REAGAN (at Internet address 128.52.22.53) did not respond to a 104659(:NEW-FILE) request.
While in the function TCP::CHECK-CONNECTION-STATE  TCP::COMPLETE-OPEN-TCB  TCP::OPEN-TCB

TCP::CHECK-CONNECTION-STATE:  (P.C. = 32)
   Arg 0 (TCB): #<TCP connection to REAGAN 59 (:NEW-FILE), local port 1046 6007416>
   Local 1 (STATE): :SYN-SENT
   Local 2 (SUBSTATE): :ACTIVE

TCP::COMPLETE-OPEN-TCB:  (P.C. = 13)
   Arg 0 (TCB): #<TCP connection to REAGAN 59 (:NEW-FILE), local port 1046 6007416>
   Arg 1 (TIMEOUT): 1200

TCP::OPEN-TCB:  (P.C. = 156)
   Arg 0 (ACTIVE-P): T
   Arg 1 (HOST): #<LISPM-HOST REAGAN 1400000>
   Arg 2 (PORT): 59
   Arg 3 (LOCAL-PORT): NIL
   Local 3 (LOCAL-PORT): 1046
   Rest arg: (:TIMEOUT 1200)

TCP:OPEN-TCP-STREAM:  (P.C. = 263)
   Arg 0 (HOST): #<LISPM-HOST REAGAN 1400000>
   Arg 1 (PORT): 59
   Arg 2 (LOCAL-PORT): NIL
   Rest arg: NIL

NETI:|MEDIUM-TCP-((NETWORK INTERNET))-G0663|:  (P.C. = 21)
   Arg 0 (SERVICE-ACCESS-PATH): #<SERVICE-ACCESS-PATH FILE (NEW-FILE) -- REAGAN on INTERNET 20036741>
   Rest arg (CONNECTION-ARGS): NIL

NETI:GET-CONNECTION-FOR-SERVICE-TO-HOST:  (P.C. = 12)
   Arg 0 (SERVICE-ACCESS-PATH): #<SERVICE-ACCESS-PATH FILE (NEW-FILE) -- REAGAN on INTERNET 20036741>
   Arg 1 (NETWORK): #<INTERNET-NETWORK INTERNET 1400023>
   Arg 2 (IMPLEMENTATION): #<MEDIUM-IMPLEMENTATION 17217560>
   Arg 3 (CONNECTION-ARGS): NIL

NETI:GET-CONNECTION-FOR-SERVICE-ON-MEDIUM:  (P.C. = 262)
   Arg 0 (MEDIUM): #<MEDIUM-DESCRIPTION on INTERNET 20036557>
   Arg 1 (SERVICE-ACCESS-PATH): #<SERVICE-ACCESS-PATH FILE (NEW-FILE) -- REAGAN on INTERNET 20036741>
   Arg 2 (CONNECTION-ARGS): NIL

NETI:GET-CONNECTION-FOR-SERVICE-ON-MEDIUM:  (P.C. = 174)
   Arg 0 (MEDIUM): #<MEDIUM-DESCRIPTION on INTERNET 20036735>
   Arg 1 (SERVICE-ACCESS-PATH): #<SERVICE-ACCESS-PATH FILE (NEW-FILE) -- REAGAN on INTERNET 20036741>
   Arg 2 (CONNECTION-ARGS): (:TOKEN-LIST T)

Rest of stack:
NET:GET-CONNECTION-FOR-SERVICE:  (P.C. = 7)
(:METHOD FS:NFILE-SERVER-UNIT :VALIDATE-CONTROL-STREAM):  (P.C. = 66)
(:METHOD FS:NFILE-ACCESS-PATH :GET-DATA-CHANNEL):  (P.C. = 17)
(:METHOD FS:NFILE-ACCESS-PATH :OPEN):  (P.C. = 300)
(:METHOD FS:ACTIVE-PATHNAME-MIXIN :OPEN):  (P.C. = 14)
(:DEFUN-METHOD FS:LOGICAL-PATHNAME-PASS-ON):  (P.C. = 10)
(:METHOD FS:LOGICAL-PATHNAME :OPEN):  (P.C. = 10)
FS:COMMON-LISP-OPEN:  (P.C. = 450)
OPEN:  (P.C. = 257)
FED:FIND-AND-LOAD-BFD:  (P.C. = 53)
FED:FIND-AND-LOAD-FONT:  (P.C. = 10)
ZWEI:GET-FONT-ALIST-ATTRIBUTE:  (P.C. = 50)
ZWEI:SET-BUFFER-FONT-ATTRIBUTES-FROM-GENERIC-PATHNAME:  (P.C. = 10)
ZWEI:REPARSE-ATTRIBUTE-LIST-INTERNAL:  (P.C. = 177)
(:DEFUN-METHOD ZWEI:REVERT-FROM-STREAM):  (P.C. = 52)
(:METHOD ZWEI:FILE-BUFFER-MIXIN :REVERT):  (P.C. = 114)
ZWEI:FIND-FILE:  (P.C. = 155)
ZWEI:COM-FIND-FILE:  (P.C. = 13)
ZWEI:COM-FIND-FILE-AND-ABBREVS:  (P.C. = 2)  (from HENRYS-INIT: HENRY; ZWEI)
ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
ZWEI:MAKE-EXTENDED-COMMAND-INTERNAL:  (P.C. = 107)
Closure of ZWEI:MAKE-EXTENDED-COMMAND-INTERNAL:
ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 233)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 60)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 51)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
3-Jul-85 21:00:29-EDT,791;000000000000    
Received: from MIT-XX by MIT-OZ via Chaosnet; 11 May 85 16:31-EDT
Date: Sat 11 May 85 16:33:19-EDT
From: Michael J. Beckerle <BECKERLE@MIT-XX>
Subject: running out of storage
To: bug-lispm@MIT-OZ


dear bug-lispm,

Is it possible to set up a garbage-collected area for compiled
functions? I realize that the truly static system code etc. belongs
in a static area, but during program development, compiled code
arrays are quite ephemeral.

The reason I'm asking is that my machine is currently telling me
that I'm past the point where incremental gc will work, but I 
just did a gc-immediate. the only thing that has been going
on of note is compilation of lisp functions, and I've noticed
that the compiled function area is quite large now.


...mike beckerle
-------
3-Jul-85 21:00:29-EDT,1978;000000000000 
Received: from MIT-LENNON by MIT-OZ via Chaosnet; 12 May 85 00:37-EDT
Date: Sun, 12 May 85 00:37 EDT
From: Gavan Duffy <GAVAN@OZ>
Subject: ZMAIL Save all files "file owned by ... Save anyway?" query
To: hukee@SCRC-QUABBIN, GAVAN@MIT-MC, DCP@SCRC-STONY-BROOK, BUG-LISPM@OZ
In-Reply-To: <850511082929.0.HUKEE@NUBONUSIT.SCRC.Symbolics.COM>
Message-ID: <850512003720.1.GAVAN@LENNON>

    Date: Sat, 11 May 85 08:29 EDT
    From: Joanne Hukee <hukee@SCRC-QUABBIN.ARPA>

	Date: Fri, 10 May 85 19:56 EDT
	From: Gavan Duffy <GAVAN@OZ>

	    Date: Tue, 30 Apr 85 09:20 EDT
	    From: Joanne Hukee <hukee@SCRC-QUABBIN.ARPA>

		Date: Mon, 29 Apr 85 03:32 EDT
		From: Gavan Duffy <GAVAN@OZ>

		A while back, DCP said that ZMAIL sources were to be withheld only for sites
		with very limited disk space.  This is clearly not MIT.  He said the ZMAIL
		sources should be propagated to MIT pronto.  They're still not here.  Can we
		get them soon, please?	

	    Hi. Somebody will get back to you soon with the answer to this.

	Well, it's been a couple of weeks now.

    Sorry, I guess our communications link didn't work too well. Jim Roche
    should be contacting you about either buying them or working out some
    other kind of deal.

Hello?  As I recall, DCP said that MIT did not receive the ZMAIL sources
because Symbolics has some sort of policy not to send them to people who have
limited disk space.  Some sort of oversight must have been made in MIT's case.
MIT's disk space is finite, but I'm sure there's room somewhere for the ZMAIL
sources.

I am certainly not in a position to buy these sources, neither for myself nor
for MIT.  I don't think you'll want to approach MIT officialdom with such a
deal.  MIT might bristle just a little at having to buy them. 

In general, sources are helpful for people who like to customize their
environments.  Without them, you might as well toss these useless machines
right down the stairs.
3-Jul-85 21:00:30-EDT,1241;000000000000   
Received: from MIT-MORRISON by MIT-OZ via Chaosnet; 12 May 85 04:14-EDT
Date: Sun, 12 May 85 04:14 EDT
From: jcma@MIT-MC
Subject: &Key In Macros
To: BUG-LISPM@OZ
Message-ID: <850512041434.4.JCMA@MORRISON>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.1,
Experimental RELATUS 138.18, microcode TMC5-MIC 319, FEP 22, on Lisp Machine Jim Morrison:

Given the definition below,  if I evaluate

(WITH-FORM-TIMED (PRINT 'FOO)) 

it blows out claiming the arguments did not match the pattern.  Well, there
were no keywords, so that's the pattern.  Use the defaults.

(DEFMACRO WITH-FORM-TIMED (&KEY (OPERATION '"The operation")
			   (STREAM 'STANDARD-OUTPUT)
			   &BODY BODY)
  "A macro that is useful for quick timings of things." 
  `(LET ((STREAM ,STREAM)
	 (OPERATION ,OPERATION)
	 EUTIME EMTIME UDIFF
	 (UTIME (TIME:GET-UNIVERSAL-TIME))
	 (MTIME (TIME:FIXNUM-MICROSECOND-TIME)))
     ,@BODY
     (SETQ EMTIME (TIME:FIXNUM-MICROSECOND-TIME)
	   EUTIME (TIME:GET-UNIVERSAL-TIME))
     (COND ((ZEROP (SETQ UDIFF (TIME:DIFFERENCE EUTIME UTIME)))
	    (FORMAT STREAM "~&~A took ~D microseconds."
		    OPERATION (- EMTIME MTIME)))
	   (T (FORMAT STREAM "~&~A took ~\time-interval\" OPERATION UDIFF)))))

3-Jul-85 21:00:30-EDT,2926;000000000000   
Received: from MIT-SID by MIT-OZ via Chaosnet; 12 May 85 12:36-EDT
Date: Sun, 12 May 85 12:36 EDT
From: Daniel Weise <DANIEL@MIT-MC>
Subject: blowout during M-X Compile Changed Definitions
To: BUG-LISPM@OZ
Message-ID: <850512123610.1.DANIEL@SID>

In Symbolics 3670 Release 6.0, IP-TCP 29.0, AISite 9.1,
microcode TMC5-IO4-MIC 319, FEP 22, on Lisp Machine Sid Vicious:

Don't know if this is reproducible at all.  After massive surgery to my
code I did M-X Compile Changed Definitions.  It blew up after a couple
of functions had been compiled.  The function it was trying to read when
it died has no paren errors.  Even if this bug is caused by the buffer
being bogus (maybe some earlier stray parens have thrown off the buffer
sectionizing?) it shouldn't blow out.

>>Trap: The first argument given to the ARRAY-LEADER instruction, NIL, was not an array.
While in the function (:METHOD ZWEI:INTERVAL-STREAM :TYI)  SI:XR-XRTYI  SI:XR-XRTYI-WHITE-OUT

(:METHOD ZWEI:INTERVAL-STREAM :TYI):  (P.C. = 75)
   Arg 0 (SELF): #<INTERVAL-STREAM 57265053>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:INTERVAL-STREAM -- 8. IV's, 1. FL's 105172005>
   Arg 2 (OPERATION): :TYI
   --Defaulted args:--
   Arg 3 (EOF): NIL
   Local 4 (CH): NIL

SI:XR-XRTYI:  (P.C. = 6)
   Arg 0 (STREAM): #<INTERVAL-STREAM 57265053>
   Arg 1 (WHITE-OUT?): T

SI:XR-XRTYI-WHITE-OUT:  (P.C. = 4)
   Arg 0 (STREAM): #<INTERVAL-STREAM 57265053>

SI:XR-READ-THING:  (P.C. = 15)
   Arg 0 (STREAM): #<INTERVAL-STREAM 57265053>

(:INTERNAL SI:READ-INTERNAL 0):  (P.C. = 15)
   Arg 0 (.LEXICAL-ENVIRONMENT-POINTER.): #<DTP-LOCATIVE 43440525>

SI:WITH-INPUT-EDITING-INTERNAL:  (P.C. = 25)
   Arg 0 (STREAM): #<INTERVAL-STREAM 57265053>
   Arg 1 (CONTINUATION): #<LEXICAL-CLOSURE (:INTERNAL SI:READ-INTERNAL 0) 43440527>
   Arg 2 (ACTIVATORS): (148)
   Arg 3 (LINE-P): NIL
   Arg 4 (INPUT-EDITOR-OPTIONS): NIL

SI:READ-INTERNAL:  (P.C. = 34)
   Arg 0 (FUNCTION): READ
   Rest arg (READ-ARGS): (#<INTERVAL-STREAM 57265053> (NIL))

READ:  (P.C. = 6)
   Rest arg (READ-ARGS): (#<INTERVAL-STREAM 57265053> (NIL))

Rest of stack:
(:INTERNAL COMPILER:COMPILE-PROCESS-DEFAULT 5 (:READ)):  (P.C. = 4)
COMPILER:COMPILE-PROCESS-DEFAULT:  (P.C. = 66)
COMPILER:COMPILE-TO-CORE:  (P.C. = 67)
COMPILER:PROCESS-FORMS-FROM-STREAM:  (P.C. = 102)
COMPILER:COMPILE-FROM-STREAM:  (P.C. = 237)
ZWEI:COMPILE-INTERVAL:  (P.C. = 142)
ZWEI:COMPILE-PRINT-INTERVAL:  (P.C. = 121)
(:METHOD ZWEI:MAJOR-MODE :DEFAULT :COMPILE-BUFFER-CHANGED-DEFINITIONS):  (P.C. = 76)
ZWEI:COM-COMPILE-CHANGED-DEFINITIONS:  (P.C. = 114)
ZWEI:COM-EXTENDED-COMMAND:  (P.C. = 27)
ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 233)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 60)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 51)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
3-Jul-85 21:00:31-EDT,1776;000000000001   
Received: from MIT-MC by MIT-OZ via Chaosnet; 12 May 85 13:51-EDT
Received: from SCRC-STONY-BROOK.ARPA by MIT-MC.ARPA; 12 May 85 13:51:50 EST
Received: from NEPONSET.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 235110; Sun 12-May-85 13:46:24-EDT
Date: Sun, 12 May 85 13:51 EDT
From: David C. Plummer in disguise <DCP@SCRC-QUABBIN.ARPA>
Subject: Declarations after doc-strings in macros. 
To: Gavan Duffy <GAVAN@OZ>, DCP@SCRC-QUABBIN.ARPA, BUG-LISPM@MIT-MC.ARPA
In-Reply-To: <850510200123.6.GAVAN@MORRISON>
Message-ID: <850512135134.0.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Fri, 10 May 85 20:01 EDT
    From: Gavan Duffy <GAVAN@OZ>

	Date: Wed, 1 May 85 18:33 EDT
	From: David C. Plummer in disguise <DCP@QUABBIN.SCRC.Symbolics.COM>

	    Date: Mon, 29 Apr 85 05:43 EDT
	    From: Gavan Duffy <GAVAN@OZ>

	    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 8.6,
	    microcode TMC5-MIC 319, FEP 22, on Lisp Machine Jim Morrison:

	    Declarations in macros work just fine, unless they follow doc-strings.
	    This form compiles just fine.

	    (DEFMACRO FOO (BAR)
	      (DECLARE (VALUES FOOBAR))
	      `(INTERN (STRING-APPEND "FOO" ,BAR)))

	    However, the compiler issues a warning that the declaration in
	    this next form is illegal and will be ignored.

	    (DEFMACRO BAR (FOO)
	      "Similar to FOO."
	      (DECLARE (VALUES BARFOO))
	      `(INTERN (STRING-APPEND "BAR" ,FOO)))

	This has already been fixed for 6.1.

    Great.  Any way to make them work in the meantime?

You can either have your program suppress the things that don't work, or
swap the declare and documentation string (which drops the doc string,
but keeps the declaration [the fix fixes both of these]).

3-Jul-85 21:00:31-EDT,1848;000000000001 
Received: from MIT-MC by MIT-OZ via Chaosnet; 12 May 85 13:52-EDT
Received: from SCRC-STONY-BROOK.ARPA by MIT-MC.ARPA; 12 May 85 13:52:15 EST
Received: from NEPONSET.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 235112; Sun 12-May-85 13:46:32-EDT
Date: Sun, 12 May 85 13:51 EDT
From: David C. Plummer in disguise <DCP@SCRC-QUABBIN.ARPA>
Subject: Declarations after doc-strings in macros. 
To: Gavan Duffy <GAVAN@OZ.mit>, DCP@SCRC-QUABBIN.ARPA,
    BUG-LISPM@MIT-MC.ARPA
In-Reply-To: <850510200123.6.GAVAN@MORRISON>
Supersedes: <850512135134.0.NFEP@NEPONSET.SCRC.Symbolics.COM>
Message-ID: <850512135142.1.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Fri, 10 May 85 20:01 EDT
    From: Gavan Duffy <GAVAN@OZ>

	Date: Wed, 1 May 85 18:33 EDT
	From: David C. Plummer in disguise <DCP@QUABBIN.SCRC.Symbolics.COM>

	    Date: Mon, 29 Apr 85 05:43 EDT
	    From: Gavan Duffy <GAVAN@OZ>

	    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 8.6,
	    microcode TMC5-MIC 319, FEP 22, on Lisp Machine Jim Morrison:

	    Declarations in macros work just fine, unless they follow doc-strings.
	    This form compiles just fine.

	    (DEFMACRO FOO (BAR)
	      (DECLARE (VALUES FOOBAR))
	      `(INTERN (STRING-APPEND "FOO" ,BAR)))

	    However, the compiler issues a warning that the declaration in
	    this next form is illegal and will be ignored.

	    (DEFMACRO BAR (FOO)
	      "Similar to FOO."
	      (DECLARE (VALUES BARFOO))
	      `(INTERN (STRING-APPEND "BAR" ,FOO)))

	This has already been fixed for 6.1.

    Great.  Any way to make them work in the meantime?

You can either have your program suppress the things that don't work, or
swap the declare and documentation string (which drops the doc string,
but keeps the declaration [the fix fixes both of these]).

3-Jul-85 21:00:31-EDT,5130;000000000000    
Received: from MIT-REAGAN by MIT-OZ via Chaosnet; 12 May 85 14:01-EDT
Received: from SCRC-STONY-BROOK.ARPA by MIT-REAGAN via INTERNET with SMTP id 4904; 12 May 85 14:01:42-EDT
Received: from NEPONSET.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 235117; Sun 12-May-85 13:56:15-EDT
Date: Sun, 12 May 85 14:01 EDT
From: David C. Plummer in disguise <DCP@SCRC-QUABBIN.ARPA>
Subject: Namespace lossage while namespace server down
To: Henry Lieberman <HENRY@OZ.mit>, BUG-LISPM@OZ.mit
In-Reply-To: <"850511161235.1.Henry@OZ"@BUDDY>
Message-ID: <850512140124.4.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Sat, 11 May 85 16:12 EDT
    From: Henry Lieberman <HENRY@OZ>

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.1,
    Experimental COLOR 135.1, Experimental COLOR-DEMO 68.0,
    Experimental COLOR-EDITOR 4.0, Experimental COLOR-PALETTE 2.0,
    microcode TMC5-MIC 319, on Lisp Machine Buddy Holly:

    When I logged into this machine, it said "User Henry not known. Log in to some
    host?" to which I replied "Oz". Then, trying to read a file off Oz got stuck
    in "TCP connect" in the who line, then this. Investigation showed namespace
    server Reagan in the middle of cold booting.

There was an earlier report that REAGAN was down.  From the backtrace,
you were in the editor trying to load a file that had font
specifications that weren't loaded on your machine.  You machine then
tried to load the font, which is stored on REAGAN, which lost because
REAGAN was down.

    >>Error: REAGAN (at Internet address 128.52.22.53) did not respond to a 104659(:NEW-FILE) request.
    While in the function TCP::CHECK-CONNECTION-STATE  TCP::COMPLETE-OPEN-TCB  TCP::OPEN-TCB

    TCP::CHECK-CONNECTION-STATE:  (P.C. = 32)
       Arg 0 (TCB): #<TCP connection to REAGAN 59 (:NEW-FILE), local port 1046 6007416>
       Local 1 (STATE): :SYN-SENT
       Local 2 (SUBSTATE): :ACTIVE

    TCP::COMPLETE-OPEN-TCB:  (P.C. = 13)
       Arg 0 (TCB): #<TCP connection to REAGAN 59 (:NEW-FILE), local port 1046 6007416>
       Arg 1 (TIMEOUT): 1200

    TCP::OPEN-TCB:  (P.C. = 156)
       Arg 0 (ACTIVE-P): T
       Arg 1 (HOST): #<LISPM-HOST REAGAN 1400000>
       Arg 2 (PORT): 59
       Arg 3 (LOCAL-PORT): NIL
       Local 3 (LOCAL-PORT): 1046
       Rest arg: (:TIMEOUT 1200)

    TCP:OPEN-TCP-STREAM:  (P.C. = 263)
       Arg 0 (HOST): #<LISPM-HOST REAGAN 1400000>
       Arg 1 (PORT): 59
       Arg 2 (LOCAL-PORT): NIL
       Rest arg: NIL

    NETI:|MEDIUM-TCP-((NETWORK INTERNET))-G0663|:  (P.C. = 21)
       Arg 0 (SERVICE-ACCESS-PATH): #<SERVICE-ACCESS-PATH FILE (NEW-FILE) -- REAGAN on INTERNET 20036741>
       Rest arg (CONNECTION-ARGS): NIL

    NETI:GET-CONNECTION-FOR-SERVICE-TO-HOST:  (P.C. = 12)
       Arg 0 (SERVICE-ACCESS-PATH): #<SERVICE-ACCESS-PATH FILE (NEW-FILE) -- REAGAN on INTERNET 20036741>
       Arg 1 (NETWORK): #<INTERNET-NETWORK INTERNET 1400023>
       Arg 2 (IMPLEMENTATION): #<MEDIUM-IMPLEMENTATION 17217560>
       Arg 3 (CONNECTION-ARGS): NIL

    NETI:GET-CONNECTION-FOR-SERVICE-ON-MEDIUM:  (P.C. = 262)
       Arg 0 (MEDIUM): #<MEDIUM-DESCRIPTION on INTERNET 20036557>
       Arg 1 (SERVICE-ACCESS-PATH): #<SERVICE-ACCESS-PATH FILE (NEW-FILE) -- REAGAN on INTERNET 20036741>
       Arg 2 (CONNECTION-ARGS): NIL

    NETI:GET-CONNECTION-FOR-SERVICE-ON-MEDIUM:  (P.C. = 174)
       Arg 0 (MEDIUM): #<MEDIUM-DESCRIPTION on INTERNET 20036735>
       Arg 1 (SERVICE-ACCESS-PATH): #<SERVICE-ACCESS-PATH FILE (NEW-FILE) -- REAGAN on INTERNET 20036741>
       Arg 2 (CONNECTION-ARGS): (:TOKEN-LIST T)

    Rest of stack:
    NET:GET-CONNECTION-FOR-SERVICE:  (P.C. = 7)
    (:METHOD FS:NFILE-SERVER-UNIT :VALIDATE-CONTROL-STREAM):  (P.C. = 66)
    (:METHOD FS:NFILE-ACCESS-PATH :GET-DATA-CHANNEL):  (P.C. = 17)
    (:METHOD FS:NFILE-ACCESS-PATH :OPEN):  (P.C. = 300)
    (:METHOD FS:ACTIVE-PATHNAME-MIXIN :OPEN):  (P.C. = 14)
    (:DEFUN-METHOD FS:LOGICAL-PATHNAME-PASS-ON):  (P.C. = 10)
    (:METHOD FS:LOGICAL-PATHNAME :OPEN):  (P.C. = 10)
    FS:COMMON-LISP-OPEN:  (P.C. = 450)
    OPEN:  (P.C. = 257)
    FED:FIND-AND-LOAD-BFD:  (P.C. = 53)
    FED:FIND-AND-LOAD-FONT:  (P.C. = 10)
    ZWEI:GET-FONT-ALIST-ATTRIBUTE:  (P.C. = 50)
    ZWEI:SET-BUFFER-FONT-ATTRIBUTES-FROM-GENERIC-PATHNAME:  (P.C. = 10)
    ZWEI:REPARSE-ATTRIBUTE-LIST-INTERNAL:  (P.C. = 177)
    (:DEFUN-METHOD ZWEI:REVERT-FROM-STREAM):  (P.C. = 52)
    (:METHOD ZWEI:FILE-BUFFER-MIXIN :REVERT):  (P.C. = 114)
    ZWEI:FIND-FILE:  (P.C. = 155)
    ZWEI:COM-FIND-FILE:  (P.C. = 13)
    ZWEI:COM-FIND-FILE-AND-ABBREVS:  (P.C. = 2)  (from HENRYS-INIT: HENRY; ZWEI)
    ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
    ZWEI:MAKE-EXTENDED-COMMAND-INTERNAL:  (P.C. = 107)
    Closure of ZWEI:MAKE-EXTENDED-COMMAND-INTERNAL:
    ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
    ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
    (:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 233)
    (:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 60)
    ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 51)
    SI:PROCESS-TOP-LEVEL:  (P.C. = 54)


3-Jul-85 21:00:32-EDT,2042;000000000000  
Received: from MIT-REAGAN by MIT-OZ via Chaosnet; 12 May 85 14:08-EDT
Received: from SCRC-STONY-BROOK.ARPA by MIT-REAGAN via INTERNET with SMTP id 4905; 12 May 85 14:09:13-EDT
Received: from NEPONSET.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 235122; Sun 12-May-85 14:03:46-EDT
Date: Sun, 12 May 85 14:08 EDT
From: David C. Plummer in disguise <DCP@SCRC-QUABBIN.ARPA>
Subject: running out of storage
To: Michael J. Beckerle <BECKERLE@MIT-XX.ARPA>, bug-lispm@MIT-OZ.mit
In-Reply-To: The message of 11 May 85 16:33-EDT from Michael J. Beckerle <BECKERLE@MIT-XX>
Message-ID: <850512140856.6.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Sat 11 May 85 16:33:19-EDT
    From: Michael J. Beckerle <BECKERLE@MIT-XX>


    dear bug-lispm,

    Is it possible to set up a garbage-collected area for compiled
    functions? I realize that the truly static system code etc. belongs
    in a static area, but during program development, compiled code
    arrays are quite ephemeral.

    The reason I'm asking is that my machine is currently telling me
    that I'm past the point where incremental gc will work, but I 
    just did a gc-immediate. the only thing that has been going
    on of note is compilation of lisp functions, and I've noticed
    that the compiled function area is quite large now.

There are several problems.  There is a :PREVIOUS-DEFINITION property on
the symbol which is the function's name.  This lets you do UNDEFUN (it
should probably be called REVERT-FDEFINITION).  Methods can get tucked
away in many other hidey-holes.  One very large problem is that a large
part of the garbage collector (most of it on the 3600) is in Lisp.  This
means the GC would trip over itself and get infinite oldspace traps.
The Release 5.2 method of GCing compiled functions implied GCing for
system release, which is not a sanctioned thing for customers to do.

I understand what you are trying to do, and I'll keep this suggestion
around in case some inspiration stikes.

3-Jul-85 21:00:32-EDT,1990;000000000000    
Received: from MIT-REAGAN by MIT-OZ via Chaosnet; 12 May 85 14:17-EDT
Received: from SCRC-STONY-BROOK.ARPA by MIT-REAGAN via INTERNET with SMTP id 4906; 12 May 85 14:18:14-EDT
Received: from NEPONSET.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 235125; Sun 12-May-85 14:12:44-EDT
Date: Sun, 12 May 85 14:17 EDT
From: David C. Plummer in disguise <DCP@SCRC-QUABBIN.ARPA>
Subject: &Key In Macros
To: jcma@MIT-MC.ARPA, BUG-LISPM@OZ.mit
In-Reply-To: <850512041434.4.JCMA@MORRISON>
Message-ID: <850512141754.7.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Sun, 12 May 85 04:14 EDT
    From: jcma@MIT-MC

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.1,
    Experimental RELATUS 138.18, microcode TMC5-MIC 319, FEP 22, on Lisp Machine Jim Morrison:

    Given the definition below,  if I evaluate

    (WITH-FORM-TIMED (PRINT 'FOO)) 

    it blows out claiming the arguments did not match the pattern.  Well, there
    were no keywords, so that's the pattern.  Use the defaults.

It was really complaining about wrong number of args (&KEY assumes an
even number).

    (DEFMACRO WITH-FORM-TIMED (&KEY (OPERATION '"The operation")
			       (STREAM 'STANDARD-OUTPUT)
			       &BODY BODY)

This arglist is illegal.  Unfortunately DEFMACRO didn't tell you (on the
bug-list).  &KEY cannot coexist with &BODY.  &KEY can coexist with
&WHOLE, but I shudder to think of a reasonable application.

Also, the prefered syntax on this side of the railroad tracks is to have
the first form be an environment modifier, instead of having it all
inline.  Therefore, I would suggest

    (DEFMACRO WITH-FORM-TIMED ((&KEY (OPERATION '"The operation")
				     (STREAM 'STANDARD-OUTPUT))
			       &BODY BODY)
and
    (WITH-FORM-TIMED ()
      (PRINT 'FOO))
    (WITH-FORM-TIMED
      (:OPERATION "Printing FOO") (PRINT 'FOO))
    (WITH-FORM-TIMED (:STREAM ERROR-OUTPUT
		      :OPERATION "Printing FOO")
      (PRINT 'FOO))

3-Jul-85 21:00:33-EDT,1097;000000000000  
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 12 May 85 14:47-EDT
Date: 12 May 1985  14:49 EDT (Sun)
Message-ID: <SR.EHPYC.12110471970.BABYL@MIT-SPEECH>
From: Scott Cyphers <SR.EHPYC@MIT-SPEECH>
To:   "David C. Plummer in disguise" <DCP@SCRC-QUABBIN.ARPA>
Cc:   "Michael J. Beckerle" <BECKERLE@MIT-XX.ARPA>, bug-lispm@MIT-OZ
Subject: running out of storage
In-reply-to: Msg of 12 May 1985  14:08-EDT from David C. Plummer in disguise <DCP at SCRC-QUABBIN.ARPA>

He's only asking that HIS functions, not the system's, go to somewhere
not static.  (si:full-gc) could then copy things to static storage
(and probably safely flush previous definitions).  It shouldn't be
hard to cause the GC code to go into a static area as it is loaded for
the first time.  Maybe it even makes sense to have loaded code go into
a static area, and compiler generated code go into dynamic (unless
declared static), or to have a make-system option.  All of these would
solve problems of it tripping over itself.  When you're developing
code, it's hardly static, so I think his idea is a good one.
3-Jul-85 21:00:33-EDT,5424;000000000000
Received: from MIT-REAGAN by MIT-OZ via Chaosnet; 12 May 85 16:16-EDT
Received: from SCRC-STONY-BROOK.ARPA by MIT-REAGAN via INTERNET with SMTP id 4908; 12 May 85 16:17:25-EDT
Received: from NEPONSET.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 235205; Sun 12-May-85 16:11:48-EDT
Date: Sun, 12 May 85 16:16 EDT
From: David C. Plummer in disguise <DCP@SCRC-QUABBIN.ARPA>
Subject: running out of storage
To: Scott Cyphers <SR.EHPYC@MIT-SPEECH>,
    Michael J. Beckerle <BECKERLE@MIT-XX.ARPA>,
    David C. Plummer in disguise <DCP@SCRC-QUABBIN.ARPA>
cc: bug-lispm@MIT-OZ.mit
In-Reply-To: <SR.EHPYC.12110471970.BABYL@MIT-SPEECH>,
             The message of 12 May 85 14:56-EDT from Michael J. Beckerle <BECKERLE@MIT-XX.ARPA>
Supersedes: <850512161643.9.NFEP@NEPONSET.SCRC.Symbolics.COM>
Message-ID: <850512161659.0.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: 12 May 1985  14:49 EDT (Sun)
    From: Scott Cyphers <SR.EHPYC@MIT-SPEECH>

    He's only asking that HIS functions, not the system's, go to somewhere
    not static.  (si:full-gc) could then copy things to static storage
    (and probably safely flush previous definitions).  It shouldn't be
    hard to cause the GC code to go into a static area as it is loaded for
    the first time.  Maybe it even makes sense to have loaded code go into
    a static area, and compiler generated 
You mean compiled-to-core code, right?
    code go into dynamic (unless
    declared static), or to have a make-system option.  All of these would
    solve problems of it tripping over itself.  When you're developing
    code, it's hardly static, so I think his idea is a good one.
Indeed, for most users this is sufficient.  (It's a good way to shaft
me, though, since I recompile parts of the GC every few weeks!)  More
below.


    Date: Sun 12 May 85 14:56:28-EDT
    From: Michael J. Beckerle <BECKERLE@MIT-XX.ARPA>

    The problem with putting compiled funtions in an ephemeral region
    that you have identified is that code may try to transport itself,
    i.e., if the garbage collection code was in an ephemeral region.
I said more than that.

    I am not suggesting that the entire of the system source code
    including garbage collector, zmacs, etc be put in the garbage 
    collected heap. The idea is that a system would be compiled
    as it is now, with the code all put into a static region. Once
    the system is released, users could arrange for the 
    compiler to put THEIR CODE into an ephemeral region to avoid
    cluttering up static space. The system code would not budge.
What about loading system patches?  You also haven't addressed the issue
of UNDEFUN?  Another issue I didn't bring up is that dynamic space
(potentially) takes up twice as much space as static.  This is because
you have to copy (surviving) dynamic objects.  It also causes the system
to flip more often and the GC takes longer because it has to copy more.

    The snafu is of course what if you inadvertantly re-compile
    the garbage collector. However, the source for GC is not 
    available in release 6, so there is really no way a user
    could do that. On the other hand, one could write a program 
    which moves objects around in storage by using the pointers,
    and hacking the type bits, etc., and such a program might move
    itself around, but if you're doing that you deserve to lose
    anyway if you don't understand storage areas.

    I tried just binding the variable compiled-function-area
    to working-storage-area, and the system seemed to work,
    but I'd like to know if I'm going to lose eventually.

I assume you really mean you SETQed it, unless you found the right part
of the compiler to put the binding around.  I'm don't know if you will
lose (in the machine-crash sense) or not.  I do know that you won't
reclaim as much as you would wish until you fix the UNDEFUN problem.  I
also think that if you DO want to experiment you should make a new area
(EPHEMERAL-COMPILED-FUNCTION-AREA) and bind compiled-function-area to
that.  Program development will often cons data in working-storage-area
which will accelerate migration, so your compiled code will migrate
faster than you would like.

    Finally, if this can be done for the compiled function area,
    why not for many other of the static areas? 
Because there are REASONS they are static.  One, as I state above, is
that dynamic objects take up more room and cause flipping more often and
slows the system down by transporting more data.
    Property lists for all the code atoms ought not hang around the heap
    forever either,  
The cons cells for the indicator and value go away only if you do a
REMPROP.  There are surprising few users of REMPROP.  Therefore, the
properties tend to stay around forever (i.e., they are static).
    etc., 
You will have to be more specific.
    also namespace objects, 
The nature of namespace objects is that they exist until you cold boot.
Additionally, NETI:*NAMESPACE-OBJECT-AREA* in my machine is consuming a
trivial amount of space.
    and so on.
Like what?

As I said before, I know what you are trying to do and I know the
reasons why.  "Easier said than done" is appropriate; Cyphers mumbles
some possible routes toward a solution, but I haven't seen nor thought
of any definite possibilities.

3-Jul-85 21:00:33-EDT,5492;000000000000  
Received: from MIT-REAGAN by MIT-OZ via Chaosnet; 12 May 85 16:17-EDT
Received: from SCRC-STONY-BROOK.ARPA by MIT-REAGAN via INTERNET with SMTP id 4909; 12 May 85 16:17:51-EDT
Received: from NEPONSET.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 235207; Sun 12-May-85 16:12:02-EDT
Date: Sun, 12 May 85 16:17 EDT
From: David C. Plummer in disguise <DCP@SCRC-QUABBIN.ARPA>
Subject: running out of storage
To: Scott Cyphers <SR.EHPYC@MIT-SPEECH.mit>,
    Michael J. Beckerle <BECKERLE@MIT-XX.ARPA>,
    David C. Plummer in disguise <DCP@SCRC-QUABBIN.ARPA>
cc: bug-lispm@MIT-OZ.mit
In-Reply-To: <SR.EHPYC.12110471970.BABYL@MIT-SPEECH>,
             The message of 12 May 85 14:56-EDT from Michael J. Beckerle <BECKERLE@MIT-XX.ARPA>
Supersedes: <850512161643.9.NFEP@NEPONSET.SCRC.Symbolics.COM>,
            <850512161659.0.NFEP@NEPONSET.SCRC.Symbolics.COM>
Message-ID: <850512161710.1.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: 12 May 1985  14:49 EDT (Sun)
    From: Scott Cyphers <SR.EHPYC@MIT-SPEECH>

    He's only asking that HIS functions, not the system's, go to somewhere
    not static.  (si:full-gc) could then copy things to static storage
    (and probably safely flush previous definitions).  It shouldn't be
    hard to cause the GC code to go into a static area as it is loaded for
    the first time.  Maybe it even makes sense to have loaded code go into
    a static area, and compiler generated 
You mean compiled-to-core code, right?
    code go into dynamic (unless
    declared static), or to have a make-system option.  All of these would
    solve problems of it tripping over itself.  When you're developing
    code, it's hardly static, so I think his idea is a good one.
Indeed, for most users this is sufficient.  (It's a good way to shaft
me, though, since I recompile parts of the GC every few weeks!)  More
below.


    Date: Sun 12 May 85 14:56:28-EDT
    From: Michael J. Beckerle <BECKERLE@MIT-XX.ARPA>

    The problem with putting compiled funtions in an ephemeral region
    that you have identified is that code may try to transport itself,
    i.e., if the garbage collection code was in an ephemeral region.
I said more than that.

    I am not suggesting that the entire of the system source code
    including garbage collector, zmacs, etc be put in the garbage 
    collected heap. The idea is that a system would be compiled
    as it is now, with the code all put into a static region. Once
    the system is released, users could arrange for the 
    compiler to put THEIR CODE into an ephemeral region to avoid
    cluttering up static space. The system code would not budge.
What about loading system patches?  You also haven't addressed the issue
of UNDEFUN?  Another issue I didn't bring up is that dynamic space
(potentially) takes up twice as much space as static.  This is because
you have to copy (surviving) dynamic objects.  It also causes the system
to flip more often and the GC takes longer because it has to copy more.

    The snafu is of course what if you inadvertantly re-compile
    the garbage collector. However, the source for GC is not 
    available in release 6, so there is really no way a user
    could do that. On the other hand, one could write a program 
    which moves objects around in storage by using the pointers,
    and hacking the type bits, etc., and such a program might move
    itself around, but if you're doing that you deserve to lose
    anyway if you don't understand storage areas.

    I tried just binding the variable compiled-function-area
    to working-storage-area, and the system seemed to work,
    but I'd like to know if I'm going to lose eventually.

I assume you really mean you SETQed it, unless you found the right part
of the compiler to put the binding around.  I'm don't know if you will
lose (in the machine-crash sense) or not.  I do know that you won't
reclaim as much as you would wish until you fix the UNDEFUN problem.  I
also think that if you DO want to experiment you should make a new area
(EPHEMERAL-COMPILED-FUNCTION-AREA) and bind compiled-function-area to
that.  Program development will often cons data in working-storage-area
which will accelerate migration, so your compiled code will migrate
faster than you would like.

    Finally, if this can be done for the compiled function area,
    why not for many other of the static areas? 
Because there are REASONS they are static.  One, as I state above, is
that dynamic objects take up more room and cause flipping more often and
slows the system down by transporting more data.
    Property lists for all the code atoms ought not hang around the heap
    forever either,  
The cons cells for the indicator and value go away only if you do a
REMPROP.  There are surprising few users of REMPROP.  Therefore, the
properties tend to stay around forever (i.e., they are static).
    etc., 
You will have to be more specific.
    also namespace objects, 
The nature of namespace objects is that they exist until you cold boot.
Additionally, NETI:*NAMESPACE-OBJECT-AREA* in my machine is consuming a
trivial amount of space.
    and so on.
Like what?

As I said before, I know what you are trying to do and I know the
reasons why.  "Easier said than done" is appropriate; Cyphers mumbles
some possible routes toward a solution, but I haven't seen nor thought
of any definite possibilities.

3-Jul-85 21:00:34-EDT,3071;000000000000   
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 12 May 85 16:51-EDT
Date: 12 May 1985  16:53 EDT (Sun)
Message-ID: <SR.EHPYC.12110494629.BABYL@MIT-SPEECH>
From: Scott Cyphers <SR.EHPYC@MIT-SPEECH>
To:   "David C. Plummer in disguise" <DCP@SCRC-QUABBIN.ARPA>
Cc:   "Michael J. Beckerle" <BECKERLE@MIT-XX.ARPA>, bug-lispm@MIT-OZ
Subject: running out of storage
In-reply-to: Msg of 12 May 1985  16:16-EDT from David C. Plummer in disguise <DCP at SCRC-QUABBIN.ARPA>

    Date: Sunday, 12 May 1985  16:16-EDT
    From: David C. Plummer in disguise <DCP at SCRC-QUABBIN.ARPA>
    To:   Scott Cyphers <SR.EHPYC>,
          Michael J. Beckerle <BECKERLE at MIT-XX.ARPA>,
          David C. Plummer in disguise <DCP at SCRC-QUABBIN.ARPA>
    cc:   bug-lispm at MIT-OZ.mit
    Re:   running out of storage
    Supersedes: <850512161643.9.NFEP@NEPONSET.SCRC.Symbolics.COM>

        Date: 12 May 1985  14:49 EDT (Sun)
        From: Scott Cyphers <SR.EHPYC@MIT-SPEECH>

        He's only asking that HIS functions, not the system's, go to somewhere
        not static.  (si:full-gc) could then copy things to static storage
        (and probably safely flush previous definitions).  It shouldn't be
        hard to cause the GC code to go into a static area as it is loaded for
        the first time.  Maybe it even makes sense to have loaded code go into
        a static area, and compiler generated 
    You mean compiled-to-core code, right?
        code go into dynamic (unless
        declared static), or to have a make-system option.  All of these would
        solve problems of it tripping over itself.  When you're developing
        code, it's hardly static, so I think his idea is a good one.
    Indeed, for most users this is sufficient.  (It's a good way to shaft
    me, though, since I recompile parts of the GC every few weeks!)  More
    below.

That's why I had that thing in about "unless declared static".

Maybe if compiled to ram code started ephemeral and then went right to
static, things would work better.  Usually (in my style), a small
number of functions will get compiled about N times, and then they'll
work, and I'll go on to a different set of functions (so it is okay
for them to become static, which should happen as they get pushed out
of the ephemeral regions by the new set of code being developed).  If
this is a typical model of programming, then maybe that would work.

In fact, the same scheme might work for loading system patches too,
although I think it makes more sense to send them straight to static,
since they're going there anyways.

I don't see how undefun relates to this -- you only keep one previous
definition, don't you?  There's a pointer to it, so the GC won't eat
it.

There is only one other area that is static that I think shouldn't be
as static -- the pathnames.  Why not intern them only when someone
mungs their property list, and then make them static?  It means EQ
won't work on the result of parsing a pathname - I don't know how
serious this is.

3-Jul-85 21:00:34-EDT,3111;000000000000   
Received: from MIT-REAGAN by MIT-OZ via Chaosnet; 13 May 85 12:16-EDT
Received: from SCRC-STONY-BROOK.ARPA by MIT-REAGAN via INTERNET with SMTP id 4913; 13 May 85 12:15:47-EDT
Received: from NEPONSET.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 235638; Mon 13-May-85 12:08:58-EDT
Date: Mon, 13 May 85 12:14 EDT
From: David C. Plummer in disguise <DCP@SCRC-QUABBIN.ARPA>
Subject: running out of storage
To: Scott Cyphers <SR.EHPYC@MIT-SPEECH.mit>,
    David C. Plummer in disguise <DCP@SCRC-QUABBIN.ARPA>
cc: Michael J. Beckerle <BECKERLE@MIT-XX.ARPA>, bug-lispm@MIT-OZ.mit
In-Reply-To: <SR.EHPYC.12110494629.BABYL@MIT-SPEECH>
Supersedes: <850513121407.6.NFEP@NEPONSET.SCRC.Symbolics.COM>
Message-ID: <850513121422.7.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: 12 May 1985  16:53 EDT (Sun)
    From: Scott Cyphers <SR.EHPYC@MIT-SPEECH>

    Maybe if compiled to ram code started ephemeral and then went right to
    static, things would work better.  Usually (in my style), a small
    number of functions will get compiled about N times, and then they'll
    work, and I'll go on to a different set of functions (so it is okay
    for them to become static, which should happen as they get pushed out
    of the ephemeral regions by the new set of code being developed).  If
    this is a typical model of programming, then maybe that would work.

    In fact, the same scheme might work for loading system patches too,
    although I think it makes more sense to send them straight to static,
    since they're going there anyways.

Right, which is why a mechanism is needed to say "put this in static
regardless."  I don't now know what that mechanism could look like.

    I don't see how undefun relates to this -- you only keep one previous
    definition, don't you?  There's a pointer to it, so the GC won't eat
    it.

That could be considered a problem.  Suppose you compile a buffer.  All
your code is in ephemeral space.  You test it a bit.  You do some
incremental recompilations.  You flip your ephemeral compiled function
area and your ephemeral code goes into the next level.  You munge around
for a while and recompile the buffer again.  Current code goes on
:PREVIOUS-DEFINITION, and suppose you flip again.  Your OLD code,
because it is pointed to by :PREVIOUS-DEFINITION goes to the third
level.  If you only have two levels you have just succeeded in putting
your FIRST compilation into static space.  "Senator, we need a verb."

    There is only one other area that is static that I think shouldn't be
    as static -- the pathnames.  Why not intern them only when someone
    mungs their property list, and then make them static?  It means EQ
    won't work on the result of parsing a pathname - I don't know how
    serious this is.
In today's system, quite serious.

Look, I've said I understand what you want to do.  I've said I'll think
about it.  How much more can I agree with you?  I need a CONCRETE
proposal (an "algorithm", not a hand-wave) that can be implemented and
addresses the issues.

3-Jul-85 21:00:34-EDT,3016;000000000000   
Received: from MIT-MC by MIT-OZ via Chaosnet; 13 May 85 16:26-EDT
Date: Mon, 13 May 85 16:25:15 EST
From: David Vinayak Wallace <GUMBY@MIT-MC>
Subject:  running out of storage
To: DCP@SCRC-QUABBIN
cc: BECKERLE@MIT-XX, bug-lispm@MIT-OZ, SR.EHPYC@MIT-SPEECH
In-reply-to: Msg of Mon 13 May 85 12:14 EDT from David C. Plummer in disguise <DCP at SCRC-QUABBIN.ARPA>
Message-ID: <[MIT-MC].501304.850513.GUMBY>

    Date: Mon, 13 May 85 12:14 EDT
    From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>

        Date: 12 May 1985  16:53 EDT (Sun)
        From: Scott Cyphers <SR.EHPYC at SPEECH>

        Maybe if compiled to ram code started ephemeral and then went right to
        static, things would work better.  Usually (in my style), a small
        number of functions will get compiled about N times, and then they'll
        work, and I'll go on to a different set of functions (so it is okay
        for them to become static, which should happen as they get pushed out
        of the ephemeral regions by the new set of code being developed).  If
        this is a typical model of programming, then maybe that would work.

        In fact, the same scheme might work for loading system patches too,
        although I think it makes more sense to send them straight to static,
        since they're going there anyways.

    Right, which is why a mechanism is needed to say "put this in static
    regardless."  I don't now know what that mechanism could look like.

Well, when you load a file the forms have to go somewhere.  In essence all
you should have to do is bind *FUNCTION-CONSING-AREA* (or whatever) to your
static space.  LOAD could be tought to load files with a PATCH-FILE
attribute into the static area.  And MAKE-SYSTEM by default should do this too.

                                        ...Suppose you compile a buffer.  All
    your code is in ephemeral space.  You test it a bit.  You do some
    incremental recompilations.  You flip your ephemeral compiled function
    area and your ephemeral code goes into the next level.  You munge around
    for a while and recompile the buffer again.  Current code goes on
    :PREVIOUS-DEFINITION, and suppose you flip again.  Your OLD code,
    because it is pointed to by :PREVIOUS-DEFINITION goes to the third
    level.  If you only have two levels you have just succeeded in putting
    your FIRST compilation into static space.

Can't you make your ephemeral migration have three levels?  I know it would
only delay the problem, but it might be enough.

Personally, I only use UNDEFUN with system functions I redefine; with my
own the change is usually small enough that I can reconstruct the old
version if necessary (I usually keep an unedited copy around anyway).  So
actually, were there a switch to tell the compiler only to record the
previous-definition when it was already in static space, I would run with
it on (otherwise it should set the previous definition to nil).
3-Jul-85 21:00:35-EDT,5200;000000000000    
Received: from MIT-BUDDY by MIT-OZ via Chaosnet; 13 May 85 17:56-EDT
Date: Mon, 13 May 85 17:55 EDT
From: David M. J. Saslav <saz@OZ>
Subject: color demo error
To: BUG-LISPM@OZ
Message-ID: <850513175502.1.SAZ@BUDDY>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.1,
Experimental COLOR 135.1, Experimental COLOR-DEMO 68.0,
Experimental COLOR-EDITOR 4.0, Experimental COLOR-PALETTE 2.0,
microcode TMC5-MIC 319, on Lisp Machine Buddy Holly:

I'd killed the color demo window and was attempting to 
start a fresh demo.

>>Trap: The AR-1 microcode ran into an ARRAY-INDIRECT-POINTER that was not an array.
While in the function (:METHOD COLOR:STD-COLOR-CONTROL-MIXIN :VIDEO-ON)  (:METHOD COLOR:STD-COLOR-CONTROL-MIXIN :SET-VIDEO-ON)  (:METHOD COLOR:FIX-SELECTED-WINDOWS-ON-DEACTIVATE-MIXIN :BEFORE :DEACTIVATE)

(:METHOD COLOR:STD-COLOR-CONTROL-MIXIN :VIDEO-ON):  (P.C. = 7)
   Arg 0 (SELF): #<MANAGED-SC-SCREEN 24-bit standard direct color screen 1140000 deexposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor COLOR:STD-COLOR-CONTROL-MIXIN -- 13. IV's, 0. FL's 26117166>
   Arg 2 (OPERATION): :VIDEO-ON
   Arg 3 (CONT): #<ART-Q-11 10010325>

(:METHOD COLOR:STD-COLOR-CONTROL-MIXIN :SET-VIDEO-ON):  (P.C. = 36)
   Arg 0 (SELF): #<MANAGED-SC-SCREEN 24-bit standard direct color screen 1140000 deexposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor COLOR:STD-COLOR-CONTROL-MIXIN -- 13. IV's, 0. FL's 26117166>
   Arg 2 (OPERATION): :SET-VIDEO-ON
   Arg 3 (T-OR-NIL): NIL
   Local 3 (T-OR-NIL): 0
   --Defaulted args:--
   Arg 4 (CONT): #<ART-Q-11 10010325>

(:METHOD COLOR:FIX-SELECTED-WINDOWS-ON-DEACTIVATE-MIXIN :BEFORE :DEACTIVATE):  (P.C. = 25)
   Arg 0 (SELF): #<MANAGED-SC-SCREEN 24-bit standard direct color screen 1140000 deexposed>
   Arg 1 (SELF-MAPPING-TABLE): COLOR:FIX-SELECTED-WINDOWS-ON-DEACTIVATE-MIXIN
   Arg 2 (OPERATION): :DEACTIVATE
   Rest arg (IGNORE): NIL

(:METHOD COLOR:MANAGED-SC-SCREEN :COMBINED :DEACTIVATE):  (P.C. = 32)
   Arg 0 (SELF): #<MANAGED-SC-SCREEN 24-bit standard direct color screen 1140000 deexposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor COLOR:MANAGED-SC-SCREEN -- 1. IV's, 16. FL's 26122256>
   Arg 2 (.OPERATION.): :DEACTIVATE
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

(:METHOD COLOR:COMMON-CONTROL-MIXIN :BEFORE :EXPOSE):  (P.C. = 47)
   Arg 0 (SELF): #<MANAGED-SC-SCREEN 24-bit standard direct color screen 1140776 deexposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor COLOR:COMMON-CONTROL-MIXIN -- 11. IV's, 0. FL's 26117221>
   Arg 2 (OPERATION): :EXPOSE
   Rest arg (IGNORE): (NIL NIL 0 0)

(:INTERNAL (:INTERNAL (:METHOD COLOR:MANAGED-SC-SCREEN :COMBINED :EXPOSE) 0) 0):  (P.C. = 11)
   Arg 0 (SELF): #<MANAGED-SC-SCREEN 24-bit standard direct color screen 1140776 deexposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor COLOR:MANAGED-SC-SCREEN -- 1. IV's, 16. FL's 26122256>
   Arg 2 (.OPERATION.): :EXPOSE
   Rest arg (.DAEMON-CALLER-ARGS.): (NIL NIL 0 0)

(:METHOD TV:SHEET :WHOPPER :EXPOSE):  (P.C. = 63)
   Arg 0 (SELF): #<MANAGED-SC-SCREEN 24-bit standard direct color screen 1140776 deexposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:SHEET -- 0. IV's, 1. FL's 26117114>
   Arg 2 (.WHOPPER-CONTINUATION.): #<DTP-COMPILED-FUNCTION (:INTERNAL (:INTERNAL (:METHOD COLOR:MANAGED-SC-SCREEN :COMBINED :EXPOSE) 0) 0) 76677236>
   Arg 3 (.OLD-SELF-MAPPING-TABLE.): #<Map to flavor COLOR:MANAGED-SC-SCREEN -- 1. IV's, 16. FL's 26122256>
   Arg 4 (.OPERATION.): :EXPOSE
   --Defaulted args:--
   Arg 5 (TURN-ON-BLINKERS): NIL
   Arg 6 (BITS-ACTION): NIL
   Arg 7 (X): 0
   Arg 8 (Y): 0

(:INTERNAL (:METHOD COLOR:MANAGED-SC-SCREEN :COMBINED :EXPOSE) 0):  (P.C. = 13)
   Arg 0 (SELF): #<MANAGED-SC-SCREEN 24-bit standard direct color screen 1140776 deexposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor COLOR:MANAGED-SC-SCREEN -- 1. IV's, 16. FL's 26122256>
   Arg 2 (.OPERATION.): :EXPOSE
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

(:METHOD COLOR:COMMON-CONTROL-MIXIN :WHOPPER :EXPOSE):  (P.C. = 14)
   Arg 0 (SELF): #<MANAGED-SC-SCREEN 24-bit standard direct color screen 1140776 deexposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor COLOR:COMMON-CONTROL-MIXIN -- 11. IV's, 0. FL's 26117221>
   Arg 2 (.WHOPPER-CONTINUATION.): #<DTP-COMPILED-FUNCTION (:INTERNAL (:METHOD COLOR:MANAGED-SC-SCREEN :COMBINED :EXPOSE) 0) 76677220>
   Arg 3 (.OLD-SELF-MAPPING-TABLE.): #<Map to flavor COLOR:MANAGED-SC-SCREEN -- 1. IV's, 16. FL's 26122256>
   Arg 4 (.OPERATION.): :EXPOSE
   Rest arg (ARGS): NIL

(:METHOD COLOR:MANAGED-SC-SCREEN :COMBINED :EXPOSE):  (P.C. = 13)
   Arg 0 (SELF): #<MANAGED-SC-SCREEN 24-bit standard direct color screen 1140776 deexposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor COLOR:MANAGED-SC-SCREEN -- 1. IV's, 16. FL's 26122256>
   Arg 2 (.OPERATION.): :EXPOSE
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

COLOR:MAKE-COLOR-SCREEN:  (P.C. = 447)
   Rest arg (KEYS): (:SETUP :STANDARD :BITS-PER-PIXEL 24)

COLOR:CREATE-COLOR-SCREEN:  (P.C. = 207)

COLOR:DEMO:  (P.C. = 117)
   --Defaulted args:--
   Arg 0 (WINDOW): #<COLOR-DEMO-WINDOW Color Demo Window 1 1140114 deactivated>
   Arg 1 (SCREEN): NIL
3-Jul-85 21:00:35-EDT,2417;000000000000  
Received: from MIT-GOLDILOCKS by MIT-OZ via Chaosnet; 13 May 85 19:26-EDT
Received: from KOALA by GOLDILOCKS via CHAOS with CHAOS-MAIL id 1308; Mon 13-May-85 19:24:01-EDT
Date: Monday, 13 May 1985, 19:23-EDT
From: Scott Cyphers <sr.ehpyc at MIT-SPEECH>
Subject: running out of storage
To: GUMBY at MIT-MC, DCP at SCRC-QUABBIN
cc: BECKERLE at MIT-XX, bug-lispm at OZ, SR.EHPYC at MIT-SPEECH
In-Reply-To: <[MIT-MC].501304.850513.GUMBY>
Message-ID: <850513192336.1.CYPHER@KOALA.MIT>


    Personally, I only use UNDEFUN with system functions I redefine; with my
    own the change is usually small enough that I can reconstruct the old
    version if necessary (I usually keep an unedited copy around anyway).  So
    actually, were there a switch to tell the compiler only to record the
    previous-definition when it was already in static space, I would run with
    it on (otherwise it should set the previous definition to nil).

Maybe undefun is the wrong mechanism for what it is trying to do.
Suppose there were something like a kill ring for functions.  You
compile your buffer, all your code is in ephemeral space.  you test it a
bit.  You do some incremental recompilations, the last N redefinitions
of which are kept in the kill ring, the others getting flushed.  Along
comes an ephemeral flip, leaving latest definitions and the last N in
the kill ring in level 2.  You recompile the buffer again, leaving the
last N redefined things in the kill ring, in level 1.  The older
redefinitions, in level 2, are no longer pointed at.  How's that sound?

The previous definition facility is good for when you redefine things
that are going to give you a warning, like when you define your own
version of something in another file.  Then a previous definition
facility is good, since you might not even have the sources for that
file.  But, if you are redefining, say, SI:HAIRY-FUNCTION, and trying to
debug it too, you don't want to lose the original version -- that one
you want on the previous definition.  But your own redefinitions go on
the kill ring.

So, the algorithm is:
If the source file of the new definition is the same as the old
definition, the old definition goes into the function kill ring, which
has a fixed maximum size.

If the source of the new definition is different than the old
definition, then the old definition goes on :PREVIOUS-DEFINITION.
3-Jul-85 21:00:35-EDT,1763;000000000001 
Received: from MIT-MC by MIT-OZ via Chaosnet; 14 May 85 04:03-EDT
Received: from MIT-OZ by MIT-MC via Chaosnet; 14 MAY 85  04:01:29 EDT
Received: from MIT-MORRISON by MIT-OZ via Chaosnet; 14 May 85 04:01-EDT
Date: Tue, 14 May 85 04:00 EDT
From: Gavan Duffy <GAVAN@OZ>
Subject: Declarations after doc-strings in macros. 
To: DCP@SCRC-QUABBIN.ARPA, GAVAN@OZ, BUG-LISPM@MIT-MC.ARPA
In-Reply-To: <850512135142.1.NFEP@NEPONSET.SCRC.Symbolics.COM>
Message-ID: <850514040029.6.GAVAN@MORRISON>

    Date: Sun, 12 May 85 13:51 EDT
    From: David C. Plummer in disguise <DCP@SCRC-QUABBIN.ARPA>

	Date: Fri, 10 May 85 20:01 EDT
	From: Gavan Duffy <GAVAN@OZ>

	    Date: Wed, 1 May 85 18:33 EDT
	    From: David C. Plummer in disguise <DCP@QUABBIN.SCRC.Symbolics.COM>

		Date: Mon, 29 Apr 85 05:43 EDT
		From: Gavan Duffy <GAVAN@OZ>

		In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 8.6,
		microcode TMC5-MIC 319, FEP 22, on Lisp Machine Jim Morrison:

		Declarations in macros work just fine, unless they follow doc-strings.
		This form compiles just fine.

		(DEFMACRO FOO (BAR)
		  (DECLARE (VALUES FOOBAR))
		  `(INTERN (STRING-APPEND "FOO" ,BAR)))

		However, the compiler issues a warning that the declaration in
		this next form is illegal and will be ignored.

		(DEFMACRO BAR (FOO)
		  "Similar to FOO."
		  (DECLARE (VALUES BARFOO))
		  `(INTERN (STRING-APPEND "BAR" ,FOO)))

	    This has already been fixed for 6.1.

	Great.  Any way to make them work in the meantime?

    You can either have your program suppress the things that don't work, or
    swap the declare and documentation string (which drops the doc string,
    but keeps the declaration [the fix fixes both of these]).

That's not much help.  
3-Jul-85 21:00:36-EDT,4954;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 14 May 85 14:46-EDT
Date: 14 May 1985  14:46 EDT (Tue)
Message-ID: <SR.EHPYC.12110995800.BABYL@MIT-SPEECH>
From: Scott Cyphers <SR.EHPYC@MIT-SPEECH>
To:   "David C. Plummer in disguise" <DCP@SCRC-QUABBIN.ARPA>
Cc:   BUG-LISPM@MIT-OZ
Subject: What might cause this?
In-reply-to: Msg of 6 May 1985  10:52-EDT from David C. Plummer in disguise <DCP at SCRC-QUABBIN.ARPA>


The datapath board has been replaced to fix an occasional B-mem parity
error.  I recopied the world load just in case it had gotten copied
wrong somehow.  The error only happens on Koala, and it's not
completely deterministic.  However, it always happens in the same way
when it happens.  Here's the information you asked for.  Restarting
the patch loading worked, but restarting loop-translate gave the error
again.

(si:%region-number #o1177775)
6
(si:%area-number #o1177775)
32
(describe-area *)
Area #40: ZWEI:ZMAIL-MSG-LINE-AREA has 1 region, max size 2000000000, region size 200000 (octal):
    Region #6: Origin 1100000, Length 200000, Free 77144, GC 0, New Structure, NoScav
  New Structure space: 65,536 allocated, 32,356 used.
  Total for ZWEI:ZMAIL-MSG-LINE-AREA: 65,536 allocated, 32,356 used.
T
(si:%region-number #o1737775)
15
(si:%area-number #o1737775)
5
(describe-area *)
Area #5: PERMANENT-STORAGE-AREA has 5 regions, max size 2000000000, region size 40000 (octal):
    Region #17: Origin 1600000, Length 140000, Free 104010, GC 104010, Static Structure, Scav
    Region #240: Origin 56140000, Length 100000, Free 77761, GC 77761, Static Structure, Scav
    Region #275: Origin 76300000, Length 100000, Free 66776, GC 66776, Static Structure, Scav
  Static Structure space: 114,688 allocated, 95,735 used.
    Region #246: Origin 75640000, Length 240000, Free 240000, GC 240000, Static List, Scav
    Region #302: Origin 143700000, Length 240000, Free 62377, GC 61153, Static List, Scav
  Static List space: 163,840 allocated, 107,775 used.
  Total for PERMANENT-STORAGE-AREA: 278,528 allocated, 203,510 used.
T

>>Trap: The word #<DTP-NULL 1177775> was read from location 1737775 (in PERMANENT-STORAGE-AREA).
While in the function NIL  SI:LOOP-TRANSLATE  FUNCALL

NIL:
   Arg 0: (LOOP SPIRE:FOR SPIRE:I SPIRE:FROM 0 SPIRE:BELOW 32 SPIRE:BY 4 SPIRE:DOING ...)

SI:LOOP-TRANSLATE:  (P.C. = 5)
   Arg 0 (X): (LOOP SPIRE:FOR SPIRE:I SPIRE:FROM 0 SPIRE:BELOW 32 SPIRE:BY 4 SPIRE:DOING ...)
   Arg 1 (IGNORE): NIL

FUNCALL:  (P.C. = 5)
   Arg 0 (FN): SI:LOOP-TRANSLATE
   Rest arg (ARGS): ((LOOP SPIRE:FOR SPIRE:I SPIRE:FROM 0 SPIRE:BELOW 32 SPIRE:BY 4 SPIRE:DOING ...) NIL)

SI:MACROEXPAND-1-INTERNAL:  (P.C. = 206)
   Arg 0 (MACRO-CALL): (LOOP SPIRE:FOR SPIRE:I SPIRE:FROM 0 SPIRE:BELOW 32 SPIRE:BY 4 SPIRE:DOING ...)
   Arg 1 (ENV): NIL
   Arg 2 (RUN-STYLE-CHECKERS-P): NIL
   Arg 3 (DONT-EXPAND-SPECIAL-FORMS): T

MACROEXPAND:  (P.C. = 11)
   Arg 0 (MACRO-CALL): (LOOP SPIRE:FOR SPIRE:I SPIRE:FROM 0 SPIRE:BELOW 32 SPIRE:BY 4 SPIRE:DOING ...)
   Arg 1 (ENV): NIL
   Arg 2 (DONT-EXPAND-SPECIAL-FORMS): T

SI:PARSE-BODY-DECLARATIONS:  (P.C. = 35)
   Arg 0 (BODY): ((LOOP SPIRE:FOR SPIRE:I SPIRE:FROM 0 SPIRE:BELOW 32 SPIRE:BY 4 SPIRE:DOING ...) ARRAY)
   Arg 1 (ENV): NIL
   --Defaulted args:--
   Arg 2 (LAMBDA-LIST): NIL

LET:  (P.C. = 21)
   Arg 0 (FORM): (LET ((ARRAY (MAKE-ARRAY ** :TYPE ART-1B))) (LOOP SPIRE:FOR SPIRE:I SPIRE:FROM 0 SPIRE:BELOW 32 SPIRE:BY 4 SPIRE:DOING ...) ARRAY)
   Arg 1 (ENV): NIL

SI:*EVAL:  (P.C. = 165)
   Arg 0 (FORM): (LET ((ARRAY (MAKE-ARRAY ** :TYPE ART-1B))) (LOOP SPIRE:FOR SPIRE:I SPIRE:FROM 0 SPIRE:BELOW 32 SPIRE:BY 4 SPIRE:DOING ...) ARRAY)
   --Defaulted args:--
   Arg 1 (ENV): NIL
   Arg 2 (HOOK): NIL

Rest of stack:
SI:LOAD-BIN-OP-FORM:  (P.C. = 4)
SI:BIN-LOAD-NEXT-COMMAND:  (P.C. = 24)
SI:BIN-NEXT-VALUE:  (P.C. = 5)
SI:BIN-DEFCONST-1:  (P.C. = 15)
SI:LOAD-BIN-OP-DEFCONST:  (P.C. = 5)
SI:BIN-LOAD-NEXT-COMMAND:  (P.C. = 21)
SI:BIN-LOAD-TOP-LEVEL:  (P.C. = 6)
(:METHOD ZWEI:MAJOR-MODE :DEFAULT :LOAD-BINARY-FILE):  (P.C. = 4)
SI:BIN-LOAD-FILE-INTERNAL:  (P.C. = 147)
SI:LOAD-PATCH:  (P.C. = 64)
LOAD-PATCHES:  (P.C. = 554)
SI:*EVAL:  (P.C. = 403)
IF:  (P.C. = 45)
SI:*EVAL:  (P.C. = 165)
COND:  (P.C. = 46)
SI:*EVAL:  (P.C. = 165)
SI:LOAD-BIN-OP-FORM:  (P.C. = 4)
SI:BIN-LOAD-NEXT-COMMAND:  (P.C. = 24)
SI:BIN-LOAD-TOP-LEVEL:  (P.C. = 6)
(:METHOD ZWEI:MAJOR-MODE :DEFAULT :LOAD-BINARY-FILE):  (P.C. = 4)
SI:BIN-LOAD-FILE-INTERNAL:  (P.C. = 147)
FS:LOAD-STREAM:  (P.C. = 16)
LOGIN:  (P.C. = 604)
(:PROPERTY SI:COM-LOGIN SI:CP-FUNCTION):  (P.C. = 22)
SI:COM-LOGIN:  (P.C. = 24)
SI:*EVAL:  (P.C. = 403)
(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0):  (P.C. = 152)
TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
SI:LISP-COMMAND-LOOP:  (P.C. = 67)
SI:LISP-TOP-LEVEL1:  (P.C. = 5)
SI:LISP-TOP-LEVEL:  (P.C. = 7)
3-Jul-85 21:00:37-EDT,1301;000000000000   
Received: from MIT-MORRISON by MIT-OZ via Chaosnet; 14 May 85 21:59-EDT
Date: Tue, 14 May 85 21:58 EDT
From: jcma@MIT-MC
Subject: Input Editor
To: BUG-LISPM@OZ
Message-ID: <850514215823.5.JCMA@MORRISON>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.1,
Experimental RELATUS 138.23, microcode TMC5-MIC 319, FEP 22, on Lisp Machine Jim Morrison:

The input editor needs comtabs.  These comtabs should be compatible with the
command processor.  The reason for this is that you want to be able to control
what commands keys are bound to in particular contexts.  Some contexts
shouldn't have certain commands which will not work properly in them.

One approach is to have a comtab that is shared by both the command processor
and the input editor.  Alternatively, it might be better to provide a key
binding facility for the command processor so that people don't have to use
the input editor for this function.  

I could do something like this but not without the sources to the CP which are
being withheld (because the command processor is a valuable trade secret of
Symbolics (Gee, if that is a valuable one, I would hate to see one that isn't
valuable)).  Incidently, I never heard more from my request for sources to the
command processor.  What about it? (Yes or No)
3-Jul-85 21:00:37-EDT,5160;000000000000    
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 15 May 85 10:25-EDT
Received: from KOALA by GOLDILOCKS via CHAOS with CHAOS-MAIL id 1406; Wed 15-May-85 10:20:19-EDT
Date: Wednesday, 15 May 1985, 10:19-EDT
From: David H. Kaufman <Sr.Kaufman at MIT-SPEECH>
Subject: ZMail bug?
To: BUG-LISPM at MIT-SPEECH
Message-ID: <850515101947.1.QUX@KOALA.MIT>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, Spire-Macros 5.1,
Attribute 5.4, Compute 5.2, Audio 4.0, Speech-Attributes 4.0,
Display 6.13, Speech-Layouts 6.1, Prtout 4.0, Versatec 5.0, Spire 16.0,
ZOO 6.5, ZOO-SPIRE 2.0, microcode TMC5-MIC 319, FEP 18, on Lisp Machine Koala:

This is in a fresh ZMail on a freshly booted machine.  A copy of the
dastardly _ZMAIL_TXT file is in Speech:PS:<SR.KAUFMAN>ZMAIL-TROUBLE._ZMAIL_TXT
(I was able to read my mail with Babyl instead).

>>Error: The negative array length -1 is illegal.
While in the function MAKE-ARRAY  (:METHOD ZWEI:TENEX-BUFFER-MIXIN :LINE-END-OF-MSG-P)  (:METHOD ZWEI:MSG-BUFFER :READ-NEXT-MSG)

MAKE-ARRAY:  (P.C. = 166)
   Arg 0 (DIMENSIONS): -1
   Rest arg (OPTIONS): (:TYPE ART-STRING :AREA 32 :LEADER-LENGTH 9)
   Local 2 (TYPE): ART-STRING
   Local 3 (AREA): 32
   Local 4 (LEADER-LIST): NIL
   Local 5 (LEADER-LENGTH): 9
   Local 6 (FILL-POINTER): NIL
   Local 7 (DISPLACED-TO): NIL
   Local 8 (DISPLACED-INDEX-OFFSET): NIL
   Local 9 (NAMED-STRUCTURE-SYMBOL): NIL
   Local 10 (INITIAL-VALUE): NIL
   Local 11 (DISPLACED-CONFORMALLY): NIL
   Local 12 (N-ELEMS): NIL
   Local 13 (ARRAY): NIL
   Local 14 (INDEX-P): NIL
   Local 15 (Q-P): NIL
   Local 16 (N-WORDS): NIL
   Local 17 (N-DIMS): NIL
   Local 18 (TOTAL-SIZE): NIL

(:METHOD ZWEI:TENEX-BUFFER-MIXIN :LINE-END-OF-MSG-P):  (P.C. = 22)
   Arg 0 (SELF): #<TENEX-INBOX-BUFFER "SPEECH:PS:<SR.KAUFMAN>MAIL._ZMAIL_TXT.1" 7264053>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:TENEX-BUFFER-MIXIN -- 2. IV's, 0. FL's 142672530>
   Arg 2 (OPERATION): :LINE-END-OF-MSG-P
   Arg 3 (LINE): ""
   Arg 4 (LENGTH): 0
   Arg 5 (STATE): 1
   Arg 6 (IGNORE): T

(:METHOD ZWEI:MSG-BUFFER :READ-NEXT-MSG):  (P.C. = 230)
   Arg 0 (SELF): #<TENEX-INBOX-BUFFER "SPEECH:PS:<SR.KAUFMAN>MAIL._ZMAIL_TXT.1" 7264053>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:MSG-BUFFER -- 15. IV's, 0. FL's 142672514>
   Arg 2 (OPERATION): :READ-NEXT-MSG
   Arg 3 (NMSGS): 65535

(:INTERNAL (:METHOD ZWEI:TENEX-INBOX-BUFFER :COMBINED :READ-NEXT-MSG) 0):  (P.C. = 11)
   Arg 0 (SELF): #<TENEX-INBOX-BUFFER "SPEECH:PS:<SR.KAUFMAN>MAIL._ZMAIL_TXT.1" 7264053>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:TENEX-INBOX-BUFFER -- 1. IV's, 5. FL's 142672563>
   Arg 2 (.OPERATION.): :READ-NEXT-MSG
   Rest arg (.DAEMON-CALLER-ARGS.): (65535)

(:METHOD ZWEI:MSG-BUFFER :WHOPPER :READ-NEXT-MSG):  (P.C. = 162)
   Arg 0 (SELF): #<TENEX-INBOX-BUFFER "SPEECH:PS:<SR.KAUFMAN>MAIL._ZMAIL_TXT.1" 7264053>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:MSG-BUFFER -- 15. IV's, 0. FL's 142672514>
   Arg 2 (.WHOPPER-CONTINUATION.): #<DTP-COMPILED-FUNCTION (:INTERNAL (:METHOD ZWEI:TENEX-INBOX-BUFFER :COMBINED :READ-NEXT-MSG) 0) 47715403>
   Arg 3 (.OLD-SELF-MAPPING-TABLE.): #<Map to flavor ZWEI:TENEX-INBOX-BUFFER -- 1. IV's, 5. FL's 142672563>
   Arg 4 (.OPERATION.): :READ-NEXT-MSG
   Rest arg (ARGLIST): (65535)

(:METHOD ZWEI:TENEX-INBOX-BUFFER :COMBINED :READ-NEXT-MSG):  (P.C. = 13)
   Arg 0 (SELF): #<TENEX-INBOX-BUFFER "SPEECH:PS:<SR.KAUFMAN>MAIL._ZMAIL_TXT.1" 7264053>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:TENEX-INBOX-BUFFER -- 1. IV's, 5. FL's 142672563>
   Arg 2 (.OPERATION.): :READ-NEXT-MSG
   Rest arg (.DAEMON-CALLER-ARGS.): (65535)

ZWEI:LOAD-ALL-MSGS:  (P.C. = 62)
   Arg 0 (BUFFER): #<TENEX-INBOX-BUFFER "SPEECH:PS:<SR.KAUFMAN>MAIL._ZMAIL_TXT.1" 7264053>

ZWEI:START-LOADING-BUFFER:  (P.C. = 36)
   Arg 0 (BUFFER): #<TENEX-INBOX-BUFFER "SPEECH:PS:<SR.KAUFMAN>MAIL._ZMAIL_TXT.1" 7264053>
   Arg 1 (STREAM): #<FILE-INPUT-CHARACTER-STREAM "SPEECH:PS:<SR.KAUFMAN>MAIL._ZMAIL_TXT.1" 7264400>
   Arg 2 (BACKGROUND-P): NIL
   Arg 3 (TRUENAME): NIL

Rest of stack:
(:METHOD ZWEI:INBOX-BUFFER :START-NEXT-INBOX):  (P.C. = 73)
ZWEI:GET-INBOX-FOR-BUFFER:  (P.C. = 145)
ZWEI:COM-GET-INBOX-INTERNAL:  (P.C. = 253)
ZWEI:STARTUP-MAIL-FILE:  (P.C. = 176)
ZWEI:COM-GET-INBOX-INTERNAL:  (P.C. = 37)
ZWEI:COM-GET-NEW-MAIL-FROM-INBOX:  (P.C. = 7)
ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
ZWEI:ZMAIL-COMMAND-EXECUTE:  (P.C. = 6)
(:METHOD ZWEI:ZMAIL-FRAME :PROCESS-COMMAND-CHAR):  (P.C. = 7)
(:INTERNAL (:INTERNAL (:METHOD ZWEI:ZMAIL-FRAME :COMBINED :PROCESS-COMMAND-CHAR) 0) 0):  (P.C. = 10)
(:METHOD ZWEI:ZMAIL-COMMAND-LOOP-MIXIN :WHOPPER :PROCESS-COMMAND-CHAR):  (P.C. = 21)
(:INTERNAL (:METHOD ZWEI:ZMAIL-FRAME :COMBINED :PROCESS-COMMAND-CHAR) 0):  (P.C. = 13)
(:METHOD ZWEI:ZMAIL-FRAME :WHOPPER :PROCESS-COMMAND-CHAR):  (P.C. = 21)
(:METHOD ZWEI:ZMAIL-FRAME :COMBINED :PROCESS-COMMAND-CHAR):  (P.C. = 12)
(:METHOD ZWEI:ZMAIL-FRAME :COMMAND-LOOP):  (P.C. = 143)
(:METHOD ZWEI:ZMAIL-FRAME :COMBINED :COMMAND-LOOP):  (P.C. = 70)
ZWEI:ZMAIL-PROCESS-TOP-LEVEL:  (P.C. = 105)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
3-Jul-85 21:00:37-EDT,1687;000000000001  
Received: from MIT-MC by MIT-OZ via Chaosnet; 15 May 85 11:52-EDT
Received: from SCRC-QUABBIN.ARPA by MIT-MC.ARPA; 15 May 85 11:46:14 EST
Received: from NEPONSET.SCRC.Symbolics.COM by SCRC-QUABBIN.ARPA via CHAOS with CHAOS-MAIL id 163869; Wed 15-May-85 11:40:51-EDT
Date: Wed, 15 May 85 11:45 EDT
From: David C. Plummer in disguise <DCP@SCRC-QUABBIN.ARPA>
Subject: Declarations after doc-strings in macros. 
To: Gavan Duffy <GAVAN@OZ>, DCP@SCRC-QUABBIN.ARPA, BUG-LISPM@MIT-MC.ARPA
In-Reply-To: <850514040029.6.GAVAN@MORRISON>
Message-ID: <850515114558.4.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Tue, 14 May 85 04:00 EDT
    From: Gavan Duffy <GAVAN@OZ>

	Date: Sun, 12 May 85 13:51 EDT
	From: David C. Plummer in disguise <DCP@SCRC-QUABBIN.ARPA>

	    Date: Fri, 10 May 85 20:01 EDT
	    From: Gavan Duffy <GAVAN@OZ>

		Date: Wed, 1 May 85 18:33 EDT
		From: David C. Plummer in disguise <DCP@QUABBIN.SCRC.Symbolics.COM>

		This has already been fixed for 6.1.

	    Great.  Any way to make them work in the meantime?

	You can either have your program suppress the things that don't work, or
	swap the declare and documentation string (which drops the doc string,
	but keeps the declaration [the fix fixes both of these]).

    That's not much help.  

What kind of answer do you want (on the Bug-LispM mailing list)?  I
don't have the time, energy, desire, OR AUTHORITY to send you, MIT (or
anybody for that matter) any individual patch or collection of patches
that solve your immediate problems.  

The one option I didn't say, which I assumed you already knew, is to
contact your FOSS/HOSS and make arrangements to privately get patches.

3-Jul-85 21:00:38-EDT,1759;000000000001
Received: from MIT-MC by MIT-OZ via Chaosnet; 15 May 85 11:53-EDT
Received: from SCRC-QUABBIN.ARPA by MIT-MC.ARPA; 15 May 85 11:46:34 EST
Received: from NEPONSET.SCRC.Symbolics.COM by SCRC-QUABBIN.ARPA via CHAOS with CHAOS-MAIL id 163871; Wed 15-May-85 11:41:07-EDT
Date: Wed, 15 May 85 11:46 EDT
From: David C. Plummer in disguise <DCP@SCRC-QUABBIN.ARPA>
Subject: Declarations after doc-strings in macros. 
To: Gavan Duffy <GAVAN@OZ.mit>, DCP@SCRC-QUABBIN.ARPA,
    BUG-LISPM@MIT-MC.ARPA
In-Reply-To: <850514040029.6.GAVAN@MORRISON>
Supersedes: <850515114558.4.NFEP@NEPONSET.SCRC.Symbolics.COM>
Message-ID: <850515114614.5.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Tue, 14 May 85 04:00 EDT
    From: Gavan Duffy <GAVAN@OZ>

	Date: Sun, 12 May 85 13:51 EDT
	From: David C. Plummer in disguise <DCP@SCRC-QUABBIN.ARPA>

	    Date: Fri, 10 May 85 20:01 EDT
	    From: Gavan Duffy <GAVAN@OZ>

		Date: Wed, 1 May 85 18:33 EDT
		From: David C. Plummer in disguise <DCP@QUABBIN.SCRC.Symbolics.COM>

		This has already been fixed for 6.1.

	    Great.  Any way to make them work in the meantime?

	You can either have your program suppress the things that don't work, or
	swap the declare and documentation string (which drops the doc string,
	but keeps the declaration [the fix fixes both of these]).

    That's not much help.  

What kind of answer do you want (on the Bug-LispM mailing list)?  I
don't have the time, energy, desire, OR AUTHORITY to send you, MIT (or
anybody for that matter) any individual patch or collection of patches
that solve your immediate problems.  

The one option I didn't say, which I assumed you already knew, is to
contact your FOSS/HOSS and make arrangements to privately get patches.

3-Jul-85 21:00:38-EDT,6402;000000000001  
Received: from MIT-REAGAN by MIT-OZ via Chaosnet; 15 May 85 12:14-EDT
Received: from SCRC-QUABBIN.ARPA (QUABBIN) by MIT-REAGAN via INTERNET with SMTP id 4948; 15 May 85 12:14:53-EDT
Received: from NEPONSET.SCRC.Symbolics.COM by SCRC-QUABBIN.ARPA via CHAOS with CHAOS-MAIL id 163885; Wed 15-May-85 12:08:21-EDT
Date: Wed, 15 May 85 12:13 EDT
From: David C. Plummer in disguise <DCP@SCRC-QUABBIN.ARPA>
Subject: What might cause this?
To: Scott Cyphers <SR.EHPYC@MIT-SPEECH.mit>,
    David C. Plummer in disguise <DCP@SCRC-QUABBIN.ARPA>
cc: BUG-LISPM@MIT-OZ.mit
In-Reply-To: <SR.EHPYC.12110995800.BABYL@MIT-SPEECH>
Message-ID: <850515121328.1.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: 14 May 1985  14:46 EDT (Tue)
    From: Scott Cyphers <SR.EHPYC@MIT-SPEECH>

    The datapath board has been replaced to fix an occasional B-mem parity
    error.  I recopied the world load just in case it had gotten copied
    wrong somehow.  The error only happens on Koala, and it's not
    completely deterministic.  However, it always happens in the same way
    when it happens.  Here's the information you asked for.  Restarting
    the patch loading worked, but restarting loop-translate gave the error
    again.

As far as I can tell, both regions have been created since Release 6.0
time, so it is all new storage.  Note also that 1177775 is beyond the
limit (1177144) of region 6, and 1737775 is beyong the limit (1704010)
of region #o17.  Instruction 5 of SI:LOOP-TRANSLATE is
  4  CALL-1-STACK #'SI:LOOP-TRANSLATE-1
  5  CALL-2-RETURN #'DISPLACE
thought it is possible this happened during the return of
SI:LOOP-TRANSLATE-1, especially since the call to displace is a
CALL-2-RETURN and NIL is being passed one argument.  The only other
thing I can suggest is to c-N one or two frames and start doing c-<n>
c-m-L for <n> from 0 to something big.  This will show you the stack,
from which you might be able to find out what it thought it was doing.

    (si:%region-number #o1177775)
    6
    (si:%area-number #o1177775)
    32
    (describe-area *)
    Area #40: ZWEI:ZMAIL-MSG-LINE-AREA has 1 region, max size 2000000000, region size 200000 (octal):
	Region #6: Origin 1100000, Length 200000, Free 77144, GC 0, New Structure, NoScav
      New Structure space: 65,536 allocated, 32,356 used.
      Total for ZWEI:ZMAIL-MSG-LINE-AREA: 65,536 allocated, 32,356 used.
    T
    (si:%region-number #o1737775)
    15
    (si:%area-number #o1737775)
    5
    (describe-area *)
    Area #5: PERMANENT-STORAGE-AREA has 5 regions, max size 2000000000, region size 40000 (octal):
	Region #17: Origin 1600000, Length 140000, Free 104010, GC 104010, Static Structure, Scav
	Region #240: Origin 56140000, Length 100000, Free 77761, GC 77761, Static Structure, Scav
	Region #275: Origin 76300000, Length 100000, Free 66776, GC 66776, Static Structure, Scav
      Static Structure space: 114,688 allocated, 95,735 used.
	Region #246: Origin 75640000, Length 240000, Free 240000, GC 240000, Static List, Scav
	Region #302: Origin 143700000, Length 240000, Free 62377, GC 61153, Static List, Scav
      Static List space: 163,840 allocated, 107,775 used.
      Total for PERMANENT-STORAGE-AREA: 278,528 allocated, 203,510 used.
    T

    >>Trap: The word #<DTP-NULL 1177775> was read from location 1737775 (in PERMANENT-STORAGE-AREA).
    While in the function NIL  SI:LOOP-TRANSLATE  FUNCALL

    NIL:
       Arg 0: (LOOP SPIRE:FOR SPIRE:I SPIRE:FROM 0 SPIRE:BELOW 32 SPIRE:BY 4 SPIRE:DOING ...)

    SI:LOOP-TRANSLATE:  (P.C. = 5)
       Arg 0 (X): (LOOP SPIRE:FOR SPIRE:I SPIRE:FROM 0 SPIRE:BELOW 32 SPIRE:BY 4 SPIRE:DOING ...)
       Arg 1 (IGNORE): NIL

    FUNCALL:  (P.C. = 5)
       Arg 0 (FN): SI:LOOP-TRANSLATE
       Rest arg (ARGS): ((LOOP SPIRE:FOR SPIRE:I SPIRE:FROM 0 SPIRE:BELOW 32 SPIRE:BY 4 SPIRE:DOING ...) NIL)

    SI:MACROEXPAND-1-INTERNAL:  (P.C. = 206)
       Arg 0 (MACRO-CALL): (LOOP SPIRE:FOR SPIRE:I SPIRE:FROM 0 SPIRE:BELOW 32 SPIRE:BY 4 SPIRE:DOING ...)
       Arg 1 (ENV): NIL
       Arg 2 (RUN-STYLE-CHECKERS-P): NIL
       Arg 3 (DONT-EXPAND-SPECIAL-FORMS): T

    MACROEXPAND:  (P.C. = 11)
       Arg 0 (MACRO-CALL): (LOOP SPIRE:FOR SPIRE:I SPIRE:FROM 0 SPIRE:BELOW 32 SPIRE:BY 4 SPIRE:DOING ...)
       Arg 1 (ENV): NIL
       Arg 2 (DONT-EXPAND-SPECIAL-FORMS): T

    SI:PARSE-BODY-DECLARATIONS:  (P.C. = 35)
       Arg 0 (BODY): ((LOOP SPIRE:FOR SPIRE:I SPIRE:FROM 0 SPIRE:BELOW 32 SPIRE:BY 4 SPIRE:DOING ...) ARRAY)
       Arg 1 (ENV): NIL
       --Defaulted args:--
       Arg 2 (LAMBDA-LIST): NIL

    LET:  (P.C. = 21)
       Arg 0 (FORM): (LET ((ARRAY (MAKE-ARRAY ** :TYPE ART-1B))) (LOOP SPIRE:FOR SPIRE:I SPIRE:FROM 0 SPIRE:BELOW 32 SPIRE:BY 4 SPIRE:DOING ...) ARRAY)
       Arg 1 (ENV): NIL

    SI:*EVAL:  (P.C. = 165)
       Arg 0 (FORM): (LET ((ARRAY (MAKE-ARRAY ** :TYPE ART-1B))) (LOOP SPIRE:FOR SPIRE:I SPIRE:FROM 0 SPIRE:BELOW 32 SPIRE:BY 4 SPIRE:DOING ...) ARRAY)
       --Defaulted args:--
       Arg 1 (ENV): NIL
       Arg 2 (HOOK): NIL

    Rest of stack:
    SI:LOAD-BIN-OP-FORM:  (P.C. = 4)
    SI:BIN-LOAD-NEXT-COMMAND:  (P.C. = 24)
    SI:BIN-NEXT-VALUE:  (P.C. = 5)
    SI:BIN-DEFCONST-1:  (P.C. = 15)
    SI:LOAD-BIN-OP-DEFCONST:  (P.C. = 5)
    SI:BIN-LOAD-NEXT-COMMAND:  (P.C. = 21)
    SI:BIN-LOAD-TOP-LEVEL:  (P.C. = 6)
    (:METHOD ZWEI:MAJOR-MODE :DEFAULT :LOAD-BINARY-FILE):  (P.C. = 4)
    SI:BIN-LOAD-FILE-INTERNAL:  (P.C. = 147)
    SI:LOAD-PATCH:  (P.C. = 64)
    LOAD-PATCHES:  (P.C. = 554)
    SI:*EVAL:  (P.C. = 403)
    IF:  (P.C. = 45)
    SI:*EVAL:  (P.C. = 165)
    COND:  (P.C. = 46)
    SI:*EVAL:  (P.C. = 165)
    SI:LOAD-BIN-OP-FORM:  (P.C. = 4)
    SI:BIN-LOAD-NEXT-COMMAND:  (P.C. = 24)
    SI:BIN-LOAD-TOP-LEVEL:  (P.C. = 6)
    (:METHOD ZWEI:MAJOR-MODE :DEFAULT :LOAD-BINARY-FILE):  (P.C. = 4)
    SI:BIN-LOAD-FILE-INTERNAL:  (P.C. = 147)
    FS:LOAD-STREAM:  (P.C. = 16)
    LOGIN:  (P.C. = 604)
    (:PROPERTY SI:COM-LOGIN SI:CP-FUNCTION):  (P.C. = 22)
    SI:COM-LOGIN:  (P.C. = 24)
    SI:*EVAL:  (P.C. = 403)
    (:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0):  (P.C. = 152)
    TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
    SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
    SI:LISP-COMMAND-LOOP:  (P.C. = 67)
    SI:LISP-TOP-LEVEL1:  (P.C. = 5)
    SI:LISP-TOP-LEVEL:  (P.C. = 7)


3-Jul-85 21:00:39-EDT,2526;000000000001   
Received: from MIT-MC by MIT-OZ via Chaosnet; 15 May 85 12:19-EDT
Received: from MIT-OZ by MIT-MC via Chaosnet; 15 MAY 85  12:16:07 EDT
Received: from MIT-MORRISON by MIT-OZ via Chaosnet; 15 May 85 12:14-EDT
Date: Wed, 15 May 85 12:12 EDT
From: Gavan Duffy <GAVAN@OZ>
Subject: Declarations after doc-strings in macros. 
To: DCP@SCRC-QUABBIN.ARPA, GAVAN@OZ, BUG-LISPM@MIT-MC.ARPA
In-Reply-To: <850515114614.5.NFEP@NEPONSET.SCRC.Symbolics.COM>
Message-ID: <850515121218.8.GAVAN@MORRISON>

    Date: Wed, 15 May 85 11:46 EDT
    From: David C. Plummer in disguise <DCP@SCRC-QUABBIN.ARPA>

	Date: Tue, 14 May 85 04:00 EDT
	From: Gavan Duffy <GAVAN@OZ>

	    Date: Sun, 12 May 85 13:51 EDT
	    From: David C. Plummer in disguise <DCP@SCRC-QUABBIN.ARPA>

		Date: Fri, 10 May 85 20:01 EDT
		From: Gavan Duffy <GAVAN@OZ>

		    Date: Wed, 1 May 85 18:33 EDT
		    From: David C. Plummer in disguise <DCP@QUABBIN.SCRC.Symbolics.COM>

		    This has already been fixed for 6.1.

		Great.  Any way to make them work in the meantime?

	    You can either have your program suppress the things that don't work, or
	    swap the declare and documentation string (which drops the doc string,
	    but keeps the declaration [the fix fixes both of these]).

	That's not much help.  

    What kind of answer do you want (on the Bug-LispM mailing list)?  I
    don't have the time, energy, desire, OR AUTHORITY to send you, MIT (or
    anybody for that matter) any individual patch or collection of patches
    that solve your immediate problems.  

First of all, you may not realize it, and this may hurt your feelings, but
people on this side of the railroad tracks (to use your terminology) generally
DON'T spend all their time at seminars on the inner workings of Symbolics'
bureaucracy.

Second of all, if YOUR code is broken, you should see it as YOUR problem, not
mine.

    The one option I didn't say, which I assumed you already knew, is to
    contact your FOSS/HOSS and make arrangements to privately get patches.

Great.  Now, what's a FOSS/HOSS?  Yes, I've heard of these before (about two
years ago RWK mentioned something about them) but how do I recognize one when
I see one?  Is Mark Robbins one?  What about that woman who wants to sell me
the ZMAIL sources?  Is she one?

Hmmm... Maybe there should be something in the document examiner about FOSSes
and HOSSes.  I checked.  There ain't.  Hey, is HOSS that guy on Bonanza?  And
FOSS, wasn't he in `All That Jazz'?
3-Jul-85 21:00:39-EDT,2233;000000000000 
Received: from MIT-MC by MIT-OZ via Chaosnet; 15 May 85 15:22-EDT
Received: from SCRC-QUABBIN.ARPA by MIT-MC.ARPA; 15 May 85 15:19:19 EST
Received: from WHITE.SWW.Symbolics.COM by SCRC-QUABBIN.ARPA via CHAOS with CHAOS-MAIL id 163962; Wed 15-May-85 15:13:58-EDT
Received: from SWW-PURPLE by SWW-WHITE via CHAOS with CHAOS-MAIL id 109394; Wed 15-May-85 12:19:02-PDT
Date: Wed, 15 May 85 12:18 PDT
From: DDYER@SCRC-RIVERSIDE.ARPA
Subject: color demo error
To: David M. J. Saslav <saz%OZ@MIT-MC.ARPA>, BUG-LISPM%OZ@MIT-MC.ARPA
cc: bug-color@WHITE
Fcc: W:>ddyer>mail.sent
In-Reply-To: <850513175502.1.SAZ@BUDDY>
Supersedes: <850515120837.6.DDYER@PURPLE.SWW.Symbolics.COM>,
            <850515120854.7.DDYER@PURPLE.SWW.Symbolics.COM>,
            <850515121022.8.DDYER@PURPLE.SWW.Symbolics.COM>,
            <850515121036.9.DDYER@PURPLE.SWW.Symbolics.COM>
Message-ID: <850515121817.0.DDYER@PURPLE.SWW.Symbolics.COM>
Fonts: CPTFONT, CPTFONTB, CPTFONTI

    Date: Mon, 13 May 85 17:55 EDT
    From: David M. J. Saslav <saz@OZ>

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.1,
    Experimental COLOR 135.1, Experimental COLOR-DEMO 68.0,
    Experimental COLOR-EDITOR 4.0, Experimental COLOR-PALETTE 2.0,
    microcode TMC5-MIC 319, on Lisp Machine Buddy Holly:

    I'd killed the color demo window and was attempting to 
    start a fresh demo.

    >>Trap: The AR-1 microcode ran into an ARRAY-INDIRECT-POINTER that was not an array.
    While in the function (:METHOD COLOR:STD-COLOR-CONTROL-MIXIN :VIDEO-ON)  ...

    (:METHOD COLOR:STD-COLOR-CONTROL-MIXIN :VIDEO-ON):  (P.C. = 7)
       Arg 0 (SELF): #<MANAGED-SC-SCREEN 24-bit standard direct 1color screen 1140000 deexposed0>
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor COLOR:STD-COLOR-CONTROL-MIX...
       Arg 2 (OPERATION): :VIDEO-ON
       Arg 3 (CONT): #<ART-Q-11 10010325>

This was caused by a bug in the EXPOSE logic - the color system automatically deeactivates
previous screens, but you confused it by manually deactivating it.   You won't have this
problem if you let the automatic mechanism get rid of the old screen.

This problem was fixed a while ago by patch 135.7.  The current pach level is 135.13.

3-Jul-85 21:00:39-EDT,1145;000000000001    
Received: from MIT-MC by MIT-OZ via Chaosnet; 15 May 85 16:32-EDT
Received: from SCRC-STONY-BROOK.ARPA by MIT-MC.ARPA; 15 May 85 16:30:28 EST
Received: from NEPONSET.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 237412; Wed 15-May-85 16:24:57-EDT
Date: Wed, 15 May 85 16:30 EDT
From: David C. Plummer in disguise <DCP@SCRC-QUABBIN.ARPA>
Subject: Declarations after doc-strings in macros. 
To: Gavan Duffy <GAVAN@OZ.mit>, DCP@SCRC-QUABBIN.ARPA,
    BUG-LISPM@MIT-MC.ARPA
In-Reply-To: <850515121218.8.GAVAN@MORRISON>
Message-ID: <850515163001.9.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Wed, 15 May 85 12:12 EDT
    From: Gavan Duffy <GAVAN@OZ>

    Second of all, if YOUR code is broken, you should see it as YOUR problem, not
    mine.

Yes, it is OUR problem; and the technical problem of your bug report has
been fixed, and it will be in 6.1.  Everything else you talk about is
administration.  Bug-LispM is for technical reports and correspondence.
If you don't want to learn about our administration (which is
reasonable), I suggest you have your (MIT's) administration deal with
ours.

3-Jul-85 21:00:40-EDT,426;000000000001    
Received: from MIT-MC by MIT-OZ via Chaosnet; 15 May 85 16:48-EDT
Date: Wed, 15 May 85 16:46:35 EST
From: Glenn S. Burke <GSB@MIT-MC>
Subject: administration
To: DCP@SCRC-QUABBIN
cc: "GAVAN@OZ.MIT"@MIT-MC, BUG-LISPM@MIT-MC
Message-ID: <[MIT-MC].504810.850515.GSB>

anyone out there remember a famous piece of computer mail which read in
part (something like) "Please have your lawyer call my lawyer to tell me ..."?
3-Jul-85 21:00:40-EDT,766;000000000000    
Received: from MIT-JANIS by MIT-OZ via Chaosnet; 16 May 85 12:40-EDT
Date: Thu, 16 May 85 12:39 EDT
From: Ken Haase <KWH@OZ>
Subject: Sources request.
To: BUG-LISPM@OZ
Message-ID: <850516123927.4.KWH@JANIS>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.1,
Experimental Meta Representation Langauge 3.1, microcode TMC5-MIC 319, on Lisp Machine Janis Joplin:

I would like the sources to the TIME-DIFFERENCE function; I have some
automatic timing tools which use MICROSECOND-TIME and would like to see
if TIME-DIFFERENCE does the right things about wraparound for
microsecond time bignums.  (I know it won't let me win for computations
which take longer than an hour, but I would like to win for evaluations
which go over the edge.)  

Ken

3-Jul-85 21:00:40-EDT,7287;000000000000  
Received: from MIT-MC by MIT-OZ via Chaosnet; 17 May 85 12:28-EDT
Received: from mit-amt.ARPA by MIT-MC.ARPA; 17 May 85 12:23:55 EST
Received: by mit-amt.ARPA (4.12/4.8)  id AA02075; Fri, 17 May 85 12:23:52 edt
Date: Fri, 17 May 85 12:23:52 edt
From: Jim Davis <jrd@mit-amt.ARPA>
Message-Id: <8505171623.AA02075@mit-amt.ARPA>
To: bug-lispm%oz@mc
Reply-To: JRD at AMT-VAX
Subject:  FED:LOAD-FONT-FROM-SYM uses null defaults

In Symbolics 3600 Release 6.0, IP-TCP 29.0, Experimental COLOR 135.1,
Experimental COLOR-DEMO 68.0, Experimental IMAGES 56.0,
Experimental COLOR-EDITOR 4.0, Experimental COLOR-PALETTE 2.0,
Experimental MENU 6.0, microcode TMC5-MIC 319, on Xevious:
Warm booted from: IFS Phone Server.

Here's the code.

(DEFUN LOAD-FONT-FROM-SYM (SYM &OPTIONAL (QUERY-P NIL))
(LET ((WHERE (FIND-LGP-OR-SCREEN-BFD-FILE SYM)))
(WHEN (AND WHERE
(OR (NOT QUERY-P) (FQUERY NIL "Load ~A? " WHERE)))
(FORMAT QUERY-IO "~&Reading ~A." WHERE)
(PROG1
(READ-FONT-FROM-BFD-FILE WHERE SYM)
(FS:SET-DEFAULT-PATHNAME WHERE PATHNAME-DEFAULTS)))))

>>Error: The second argument (DEFAULTS) to FS:SET-DEFAULT-PATHNAME, NIL, was of the wrong type.
The function expected pathname defaults alist.
While in the function FS:SET-DEFAULT-PATHNAME  LOAD-FONT-FROM-SYM  (:PROPERTY SI:COM-SHOW-FONT SI:CP-FUNCTION)

FS:SET-DEFAULT-PATHNAME:  (P.C. = 134)
Arg 0 (PATHNAME): #<LMFS-PATHNAME "XEVIOUS:>rel-6>sys>fonts>lgp-1>gothic11.bfd">
Arg 1 (DEFAULTS): NIL
Local 2: ("Skip setting default to ~A,~@
and perhaps try to use it." #<LMFS-PATHNAME "XEVIOUS:>rel-6>sys>fonts>lgp-1>gothic11.bfd">)
Local 3 (ELEM): NIL

LOAD-FONT-FROM-SYM:  (P.C. = 27)
Arg 0 (SYM): FONTS:GOTHIC11
--Defaulted args:--
Arg 1 (QUERY-P): NIL

(:PROPERTY SI:COM-SHOW-FONT SI:CP-FUNCTION):  (P.C. = 11)
Arg 0 (FONT): "GOTHIC11"

SI:COM-SHOW-FONT:  (P.C. = 7)
Arg 0 (FONT): "GOTHIC11"

Date: Thu, 16 May 85 14:36 EDT
From: Jim Davis at XEVIOUS.AMT
Sender: jrd at XEVIOUS.AMT
Reply-To: JRD at AMT-VAX.AMT
To:   BUG-LISPM%OZ at MC.AMT
Re:   unwired array ??

In Symbolics 3600 Release 6.0, IP-TCP 29.0, Experimental COLOR 135.1,
Experimental COLOR-DEMO 68.0, Experimental IMAGES 56.0,
Experimental COLOR-EDITOR 4.0, Experimental COLOR-PALETTE 2.0,
Experimental MENU 6.0, microcode TMC5-MIC 319, on Xevious:
Warm booted from: IFS Phone Server.

I was in the editor, I typed Suspend, then Logout.  My logout-list includes:

((PROGN (SEND TV:INITIAL-LISP-LISTENER :EXPOSE) (SI:DRAW-INITIAL-WINDOW)) (SETQ-STANDARD-VALUE IBASE (QUOTE 10)) (SETQ-STANDARD-VALUE BASE (QUOTE 10)) (PROGN (SET-GLOBALLY (QUOTE TV:MOUSE-DOUBLE-CLICK-TIME) (QUOTE 200000))))

The initial window was exposed, but the initial-window was not drawn (because standard-output was
still the typeout window of the editor).  I selected the editor, and saw the initial window drawm.
Then I typed either Resume or Abort, I forget which. 

>>Error: Disk array is not set up.
While in the function SI:UNWIRE-DISK-ARRAY  SI:DISK-IO  SYS:DISK-READ

SI:UNWIRE-DISK-ARRAY:  (P.C. = 10)
Arg 0 (DISK-ARRAY): #<ART-Q-1152 15351367>

SI:DISK-IO:  (P.C. = 216)
Arg 0 (MODE): :READ
Arg 1 (DISK-ARRAYS): (#<ART-Q-1152 15351367>)
Arg 2 (DISK-EVENT): #<ART-2B-32 44562023>
Arg 3 (DPN): 221037
Arg 4 (N-BLOCKS): 4
Arg 5 (HANG-P): T

SYS:DISK-READ:
Arg 0 (DISK-ARRAYS): (#<ART-Q-1152 15351367>)
Arg 1 (DISK-EVENT): #<ART-2B-32 44562023>
Arg 2 (DPN): 221037
Arg 3 (N-BLOCKS): 4
Arg 4 (HANG-P): T

(:METHOD SI:BLOCK-DISK-STREAM :BLOCK-IO):  (P.C. = 27)
Arg 0 (SELF): #<BLOCK-DISK-STREAM "FEP0:>AUX-FILE.LMFS.1" 72041027>
Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:BLOCK-DISK-STREAM -- 2. IV's, 1. FL's 142513606>
Arg 2 (OPERATION): :BLOCK-IO
Arg 3 (FCN): SYS:DISK-READ
Arg 4 (EXTEND-P): NIL
Arg 5 (BLOCK): 40
Arg 6 (N-BLOCKS): 4
Arg 7 (DISK-ARRAYS): (#<ART-Q-1152 15351367>)
Arg 8 (DISK-EVENT): #<ART-2B-32 44562023>
Arg 9 (HANG-P): T

(:METHOD SI:BLOCK-DISK-STREAM :BLOCK-IN):  (P.C. = 41)
Arg 0 (SELF): #<BLOCK-DISK-STREAM "FEP0:>AUX-FILE.LMFS.1" 72041027>
Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:BLOCK-DISK-STREAM -- 2. IV's, 1. FL's 142513606>
Arg 2 (OPERATION): :BLOCK-IN
Arg 3 (BLOCK): 40
Arg 4 (N-BLOCKS): 4
Arg 5 (DISK-ARRAYS): (#<ART-Q-1152 15351367>)
Rest arg: (:DISK-EVENT #<ART-2B-32 44562023> :HANG-P T)

LMFS:FILE-DISK-OPERATION:  (P.C. = 53)
Arg 0 (UNIT): #<BLOCK-DISK-STREAM "FEP0:>AUX-FILE.LMFS.1" 72041027>
Arg 1 (BLOCK-ADDRESS): 40
Arg 2 (OPERATION): :BLOCK-IN
Rest arg (BUFFERS): (#<ART-Q-1152 15351367>)

LMFS:FILE-DISK-READ:  (P.C. = 10)
Arg 0 (UNIT): #<BLOCK-DISK-STREAM "FEP0:>AUX-FILE.LMFS.1" 72041027>
Arg 1 (BLOCK-ADDRESS): 40
Rest arg (BUFFERS): (#<ART-Q-1152 15351367>)

LMFS:READ-FILE-RECORD-INTO-BUFFER:  (P.C. = 116)
Arg 0 (FILE): #<FILE-DESC 72041164 *FREE MAP*..SYSTEM..1>
Arg 1 (BUF): #<FILE-BUFFER 72037710>
Arg 2 (RECORD): 10
Rest arg (MORE-BUFS): NIL

LMFS:GET-BUFFER-GIVEN-FD-AND-WORDADDR:  (P.C. = 202)
Arg 0 (HEADERP): T
Arg 1 (FILE): #<FILE-DESC 72041164 *FREE MAP*..SYSTEM..1>
Arg 2 (WORDADDR): 0

LMFS:GET-GENERAL-FILE-ADDRESSOR:  (P.C. = 45)
Arg 0 (HEADERP): T
Arg 1 (FILE): #<FILE-DESC 72041164 *FREE MAP*..SYSTEM..1>
Arg 2 (WORDADDR): 0

LMFS:GET-RECORD-ADDRESS-FOR-IO:  (P.C. = 52)
Arg 0 (FILE): #<FILE-DESC 72041164 *FREE MAP*..SYSTEM..1>
Arg 1 (ABSWORD): 568
Local 1 (ABSWORD): 0

LMFS:GET-BUFFER-GIVEN-FD-AND-WORDADDR:  (P.C. = 45)
Arg 0 (HEADERP): NIL
Arg 1 (FILE): #<FILE-DESC 72041164 *FREE MAP*..SYSTEM..1>
Arg 2 (WORDADDR): 284

LMFS:GET-GENERAL-FILE-ADDRESSOR:  (P.C. = 45)
Arg 0 (HEADERP): NIL
Arg 1 (FILE): #<FILE-DESC 72041164 *FREE MAP*..SYSTEM..1>
Arg 2 (WORDADDR): 284

LMFS:BLOODLET-FREEMAP:  (P.C. = 127)
Arg 0 (MAP): #<FREEMAP 72041042>
Arg 1 (GOAL): 23

LMFS:WRING-FREEMAP:  (P.C. = 7)
Arg 0 (PART): #<PARTITION FEP0:>AUX-FILE.LMFS.1 72040171>

LMFS:SHUTWARM-ALL-VOLUMES:  (P.C. = 34)

LMFS:SHUTWARM:  (P.C. = 22)

SI:*EVAL:  (P.C. = 403)
Arg 0 (FORM): (LMFS:SHUT)
Local 0 (FORM): NIL
--Defaulted args:--
Arg 1 (ENV): NIL
Arg 2 (HOOK): NIL

INITIALIZATIONS:  (P.C. = 42)
Arg 0 (LIST-NAME): SI:LOGOUT-INITIALIZATION-LIST
--Defaulted args:--
Arg 1 (REDO-FLAG): NIL
Arg 2 (FLAG): T

LOGOUT:  (P.C. = 6)

(:PROPERTY SI:COM-LOGOUT SI:CP-FUNCTION):  (P.C. = 105)
Arg 0 (SAVE-BUFFERS): :YES
Arg 1 (SAVE-MAIL): :YES

SI:COM-LOGOUT:  (P.C. = 21)
Rest arg: NIL

SI:*EVAL:  (P.C. = 403)
Arg 0 (FORM): (SI:COM-LOGOUT)
Local 0 (FORM): NIL
--Defaulted args:--
Arg 1 (ENV): NIL
Arg 2 (HOOK): NIL

(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0):  (P.C. = 152)
Arg 0 (.LEXICAL-ENVIRONMENT-POINTER.): #<DTP-LOCATIVE 43440262>

TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
Arg 0 (NEW-MODE): :BLAST
Arg 1 (STREAM): #:TERMINAL-IO-SYN-STREAM
Arg 2 (CONTINUATION): #<LEXICAL-CLOSURE (:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0) 43440267>

SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
Arg 0 (NAME): "Breakpoint ZMACS"
Arg 1 (ABORT-FUNCTION): SI:BREAK-HERALD
Arg 2 (READ-FUNCTION): SI:BREAK-READ-FUNCTION
--Defaulted args:--
Arg 3 (EVAL-FUNCTION): NIL
Arg 4 (PRINT-FUNCTION): NIL

SI:BREAK-INTERNAL:  (P.C. = 176)
Arg 0 (TAG): ZWEI:ZMACS
Local 0 (TAG): "Breakpoint ZMACS"
Arg 1 (CONDITIONAL): T

ZWEI:COM-BREAK:  (P.C. = 64)


3-Jul-85 21:00:41-EDT,1048;000000000000 
Received: from MIT-GOLDILOCKS by MIT-OZ via Chaosnet; 18 May 85 14:40-EDT
Received: from YOGI by GOLDILOCKS via CHAOS with CHAOS-MAIL id 1433; Sat 18-May-85 14:39:47-EDT
Date: Saturday, 18 May 1985, 14:38-EDT
From: Scott Cyphers <sr.ehpyc at MIT-SPEECH>
Subject: Notification scroll window
To: BUG-LISPM at OZ
Message-ID: <850518143853.1.CYPHER@YOGI.MIT>

In Symbolics 3670 Release 6.0, IP-TCP 29.0, Spire-Macros 5.1,
Attribute 5.5, Compute 5.2, Audio 4.0, Speech-Attributes 4.0,
Display 6.16, Speech-Layouts 6.2, Prtout 4.0, Versatec 5.0, Spire 16.0,
ZOO 6.5, ZOO-SPIRE 2.0, microcode TMC5-IO4-FPA-MIC 319, on Lisp Machine Yogi:

Typing a break in the notification scroll window given an output hold.
Typing function-escape to undo the output hold exposes a background lisp
interactor, but does not select it.  If you select it with the mouse,
typing resume gives you another output hold.

Also, it would be nice if there was a way to yank something from the
notification scroll window, for example to include in a bug report.
3-Jul-85 21:00:41-EDT,1881;000000000000   
Received: from MIT-REAGAN by MIT-OZ via Chaosnet; 20 May 85 10:52-EDT
Received: from STONY-BROOK by MIT-REAGAN via INTERNET with SMTP id 5019; 20 May 85 10:55:02-EDT
Received: from NEPONSET.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 239699; Mon 20-May-85 10:51:28-EDT
Date: Mon, 20 May 85 10:52 EDT
From: David C. Plummer in disguise <DCP@SCRC-QUABBIN.ARPA>
Subject: Sources request.
To: Ken Haase <KWH@OZ.mit>, BUG-LISPM@OZ.mit
In-Reply-To: <850516123927.4.KWH@JANIS>
Message-ID: <850520105237.5.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Thu, 16 May 85 12:39 EDT
    From: Ken Haase <KWH@OZ>

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.1,
    Experimental Meta Representation Langauge 3.1, microcode TMC5-MIC 319, on Lisp Machine Janis Joplin:

    I would like the sources to the TIME-DIFFERENCE function; I have some
    automatic timing tools which use MICROSECOND-TIME and would like to see
    if TIME-DIFFERENCE does the right things about wraparound for
    microsecond time bignums.  (I know it won't let me win for computations
    which take longer than an hour, but I would like to win for evaluations
    which go over the edge.)  

If you are going to be timing things for over 35 minutes (half the time
it takes a 32 bit microsecond counter to roll over), you should probably
be using universal times (resulution 1 second) or internal times (from
(TIME), resolution 1/60th second).  Going close to the edge is a good
way of falling off!  Maybe you need to use both, using the universal
timer as guide for which more precise timer is the best one to use.

Anyway, it does not do your "right thing" for wraparound.  Here's the
definition, which is a subst, so you could have macro expanded a call to
it.

(DEFSUBST TIME-DIFFERENCE (TIME1 TIME2)
  (LDB (BYTE 31. 0) (- TIME1 TIME2)))

3-Jul-85 21:00:41-EDT,7043;000000000000 
Received: from MIT-MC by MIT-OZ via Chaosnet; 20 May 85 11:16-EDT
Received: from SCRC-STONY-BROOK.ARPA by MIT-MC.ARPA; 20 May 85 11:18:01 EST
Received: from NEPONSET.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 239737; Mon 20-May-85 11:15:38-EDT
Date: Mon, 20 May 85 11:16 EDT
From: David C. Plummer in disguise <DCP@SCRC-QUABBIN.ARPA>
Subject: unwired array ??
To: JRD%AMT-VAX@MIT-MC.ARPA, BUG-LISPM%OZ@MIT-MC.ARPA
In-Reply-To: <850516143659.1.JRD@XEVIOUS.AMT>
Message-ID: <850520111646.2.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Thu, 16 May 85 14:36 EDT
    From: Jim Davis@XEVIOUS.AMT

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, Experimental COLOR 135.1,
    Experimental COLOR-DEMO 68.0, Experimental IMAGES 56.0,
    Experimental COLOR-EDITOR 4.0, Experimental COLOR-PALETTE 2.0,
    Experimental MENU 6.0, microcode TMC5-MIC 319, on Xevious:
    Warm booted from: IFS Phone Server.

    I was in the editor, I typed Suspend, then Logout.  My logout-list includes:

    ((PROGN (SEND TV:INITIAL-LISP-LISTENER :EXPOSE)
	    (SI:DRAW-INITIAL-WINDOW))
     (SETQ-STANDARD-VALUE IBASE (QUOTE 10))
     (SETQ-STANDARD-VALUE BASE (QUOTE 10))
     (PROGN (SET-GLOBALLY (QUOTE TV:MOUSE-DOUBLE-CLICK-TIME) (QUOTE 200000))))

[This happens to be irrelevant for this bug report, but thanks for
considering it as a possibility.  It is actually a system supplied
logout "initialization" that it is executing.]

    The initial window was exposed, but the initial-window was not drawn
    (because standard-output was still the typeout window of the
    editor).  I selected the editor, and saw the initial window drawm.
    Then I typed either Resume or Abort, I forget which.

Probably Abort.  There is a small timing window in the user-disk code
such that hitting (c-)Abort can cause this error.  I think this is
considered low priority for the 6.1 timeframe.

    >>Error: Disk array is not set up.
    While in the function SI:UNWIRE-DISK-ARRAY  SI:DISK-IO  SYS:DISK-READ

    SI:UNWIRE-DISK-ARRAY:  (P.C. = 10)
       Arg 0 (DISK-ARRAY): #<ART-Q-1152 15351367>

    SI:DISK-IO:  (P.C. = 216)
       Arg 0 (MODE): :READ
       Arg 1 (DISK-ARRAYS): (#<ART-Q-1152 15351367>)
       Arg 2 (DISK-EVENT): #<ART-2B-32 44562023>
       Arg 3 (DPN): 221037
       Arg 4 (N-BLOCKS): 4
       Arg 5 (HANG-P): T

    SYS:DISK-READ:
       Arg 0 (DISK-ARRAYS): (#<ART-Q-1152 15351367>)
       Arg 1 (DISK-EVENT): #<ART-2B-32 44562023>
       Arg 2 (DPN): 221037
       Arg 3 (N-BLOCKS): 4
       Arg 4 (HANG-P): T

    (:METHOD SI:BLOCK-DISK-STREAM :BLOCK-IO):  (P.C. = 27)
       Arg 0 (SELF): #<BLOCK-DISK-STREAM "FEP0:>AUX-FILE.LMFS.1" 72041027>
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:BLOCK-DISK-STREAM -- 2. IV's, 1. FL's 142513606>
       Arg 2 (OPERATION): :BLOCK-IO
       Arg 3 (FCN): SYS:DISK-READ
       Arg 4 (EXTEND-P): NIL
       Arg 5 (BLOCK): 40
       Arg 6 (N-BLOCKS): 4
       Arg 7 (DISK-ARRAYS): (#<ART-Q-1152 15351367>)
       Arg 8 (DISK-EVENT): #<ART-2B-32 44562023>
       Arg 9 (HANG-P): T

    (:METHOD SI:BLOCK-DISK-STREAM :BLOCK-IN):  (P.C. = 41)
       Arg 0 (SELF): #<BLOCK-DISK-STREAM "FEP0:>AUX-FILE.LMFS.1" 72041027>
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:BLOCK-DISK-STREAM -- 2. IV's, 1. FL's 142513606>
       Arg 2 (OPERATION): :BLOCK-IN
       Arg 3 (BLOCK): 40
       Arg 4 (N-BLOCKS): 4
       Arg 5 (DISK-ARRAYS): (#<ART-Q-1152 15351367>)
       Rest arg: (:DISK-EVENT #<ART-2B-32 44562023> :HANG-P T)

    LMFS:FILE-DISK-OPERATION:  (P.C. = 53)
       Arg 0 (UNIT): #<BLOCK-DISK-STREAM "FEP0:>AUX-FILE.LMFS.1" 72041027>
       Arg 1 (BLOCK-ADDRESS): 40
       Arg 2 (OPERATION): :BLOCK-IN
       Rest arg (BUFFERS): (#<ART-Q-1152 15351367>)

    LMFS:FILE-DISK-READ:  (P.C. = 10)
       Arg 0 (UNIT): #<BLOCK-DISK-STREAM "FEP0:>AUX-FILE.LMFS.1" 72041027>
       Arg 1 (BLOCK-ADDRESS): 40
       Rest arg (BUFFERS): (#<ART-Q-1152 15351367>)

    LMFS:READ-FILE-RECORD-INTO-BUFFER:  (P.C. = 116)
       Arg 0 (FILE): #<FILE-DESC 72041164 *FREE MAP*..SYSTEM..1>
       Arg 1 (BUF): #<FILE-BUFFER 72037710>
       Arg 2 (RECORD): 10
       Rest arg (MORE-BUFS): NIL

    LMFS:GET-BUFFER-GIVEN-FD-AND-WORDADDR:  (P.C. = 202)
       Arg 0 (HEADERP): T
       Arg 1 (FILE): #<FILE-DESC 72041164 *FREE MAP*..SYSTEM..1>
       Arg 2 (WORDADDR): 0

    LMFS:GET-GENERAL-FILE-ADDRESSOR:  (P.C. = 45)
       Arg 0 (HEADERP): T
       Arg 1 (FILE): #<FILE-DESC 72041164 *FREE MAP*..SYSTEM..1>
       Arg 2 (WORDADDR): 0

    LMFS:GET-RECORD-ADDRESS-FOR-IO:  (P.C. = 52)
       Arg 0 (FILE): #<FILE-DESC 72041164 *FREE MAP*..SYSTEM..1>
       Arg 1 (ABSWORD): 568
       Local 1 (ABSWORD): 0

    LMFS:GET-BUFFER-GIVEN-FD-AND-WORDADDR:  (P.C. = 45)
       Arg 0 (HEADERP): NIL
       Arg 1 (FILE): #<FILE-DESC 72041164 *FREE MAP*..SYSTEM..1>
       Arg 2 (WORDADDR): 284

    LMFS:GET-GENERAL-FILE-ADDRESSOR:  (P.C. = 45)
       Arg 0 (HEADERP): NIL
       Arg 1 (FILE): #<FILE-DESC 72041164 *FREE MAP*..SYSTEM..1>
       Arg 2 (WORDADDR): 284

    LMFS:BLOODLET-FREEMAP:  (P.C. = 127)
       Arg 0 (MAP): #<FREEMAP 72041042>
       Arg 1 (GOAL): 23

    LMFS:WRING-FREEMAP:  (P.C. = 7)
       Arg 0 (PART): #<PARTITION FEP0:>AUX-FILE.LMFS.1 72040171>

    LMFS:SHUTWARM-ALL-VOLUMES:  (P.C. = 34)

    LMFS:SHUTWARM:  (P.C. = 22)

    SI:*EVAL:  (P.C. = 403)
       Arg 0 (FORM): (LMFS:SHUT)
       Local 0 (FORM): NIL
       --Defaulted args:--
       Arg 1 (ENV): NIL
       Arg 2 (HOOK): NIL

    INITIALIZATIONS:  (P.C. = 42)
       Arg 0 (LIST-NAME): SI:LOGOUT-INITIALIZATION-LIST
       --Defaulted args:--
       Arg 1 (REDO-FLAG): NIL
       Arg 2 (FLAG): T

    LOGOUT:  (P.C. = 6)

    (:PROPERTY SI:COM-LOGOUT SI:CP-FUNCTION):  (P.C. = 105)
       Arg 0 (SAVE-BUFFERS): :YES
       Arg 1 (SAVE-MAIL): :YES

    SI:COM-LOGOUT:  (P.C. = 21)
       Rest arg: NIL

    SI:*EVAL:  (P.C. = 403)
       Arg 0 (FORM): (SI:COM-LOGOUT)
       Local 0 (FORM): NIL
       --Defaulted args:--
       Arg 1 (ENV): NIL
       Arg 2 (HOOK): NIL

    (:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0):  (P.C. = 152)
       Arg 0 (.LEXICAL-ENVIRONMENT-POINTER.): #<DTP-LOCATIVE 43440262>

    TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
       Arg 0 (NEW-MODE): :BLAST
       Arg 1 (STREAM): #:TERMINAL-IO-SYN-STREAM
       Arg 2 (CONTINUATION): #<LEXICAL-CLOSURE (:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0) 43440267>

    SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
       Arg 0 (NAME): "Breakpoint ZMACS"
       Arg 1 (ABORT-FUNCTION): SI:BREAK-HERALD
       Arg 2 (READ-FUNCTION): SI:BREAK-READ-FUNCTION
       --Defaulted args:--
       Arg 3 (EVAL-FUNCTION): NIL
       Arg 4 (PRINT-FUNCTION): NIL

    SI:BREAK-INTERNAL:  (P.C. = 176)
       Arg 0 (TAG): ZWEI:ZMACS
       Local 0 (TAG): "Breakpoint ZMACS"
       Arg 1 (CONDITIONAL): T

    ZWEI:COM-BREAK:  (P.C. = 64)




3-Jul-85 21:00:41-EDT,847;000000000000   
Mail-From: SAZ created at 20-May-85 12:27:11
Date: Mon 20 May 85 12:27:11-EDT
From: David M. J. Saslav <SAZ@MIT-OZ>
Subject: screen incompatibility
To: bug-lispm@MIT-OZ, bug-mm@MIT-OZ


I don't know if anyone is aware of this (and I certainly don't know
who's supposed to be handling it!) but there is some sort of screen mixup
when using mm on a 3600.

The editor window in MM (emacs) has a problem handling the
number of "-"'s which reside beneath the header field.  What I get
is something that looks like this:

-----------------------------------------------------------------------------------------------------------------------                 
!
-------

until I refresh the screen.  Then the right set up appears (no line runoff,
excl pt on second line, or extra dashes on third line).

Any clues?

saz
-------
3-Jul-85 21:00:42-EDT,757;000000000000   
Received: from MIT-BUDDY by MIT-OZ via Chaosnet; 20 May 85 14:41-EDT
Date: Mon, 20 May 85 14:38 EDT
From: Henry Lieberman <Henry@OZ>
Subject: Stepper
To: Bug-Lispm@OZ, Swm@STONY-BROOK
Message-ID: <850520143819.2.HENRY@BUDDY>


I still need the patch that makes the Control-B command in the stepper
use the right lexical environment for evaluating variables in interpreted
code.  I was given a pointer to Q:>swm>devo>eval-in-error-environment
but cannot access that file due to protection lossage.

Also, because of lexical scoping, DBG doesn't seem to give you access to the
local environment either.

(defun foo (x) (dbg))

finds X unbound in the breakpoint. There's got to be SOME way to evaluate
local variables during debugging.  

3-Jul-85 21:00:42-EDT,6926;000000000000   
Received: from MIT-DUANE by MIT-OZ via Chaosnet; 21 May 85 10:22-EDT
Date: Tue, 21 May 85 10:21 EDT
From: Ken Haase <KWH@OZ>
Subject: Error while making split screen frame with inspect window.
To: BUG-LISPM@OZ
Message-ID: <850521102144.1.KWH@DUANE>

In Symbolics 3670 Release 6.0, IP-TCP 29.0, AISite 9.1,
Experimental Meta Representation Langauge 3.2,
microcode TMC5-IO4-MIC 319, FEP 22, on Lisp Machine Duane Allman:

This happened while making a split-screen frame (from the system menu)
whose top pane was a Common LISP listener and whose bottom pane was an
inspector.

>>Trap: The instance variable TV:TYPEOUT-WINDOW is unbound in #<INSPECT-FRAME-WITH-OWN-PROCESS Inspect Frame With Own Process 1 10445245 exposed>.
While in the function (:METHOD TV:INSPECT-FRAME :TYPEOUT-WINDOW)  (:METHOD
                                                                    TV:INTERACTION-PANE
                                                                    :AFTER
                                                                    :SELECT)  (:METHOD
                                                                                TV:INTERACTION-PANE
                                                                                :COMBINED
                                                                                :SELECT)

(:METHOD TV:INSPECT-FRAME :TYPEOUT-WINDOW):  (P.C. = 1)
   Arg 0 (SELF): #<INSPECT-FRAME-WITH-OWN-PROCESS Inspect Frame With Own Process 1 10445245 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:INSPECT-FRAME -- 5. IV's, 5. FL's 143115152>
   Arg 2 (IGNORE): :TYPEOUT-WINDOW

(:METHOD TV:INTERACTION-PANE :AFTER :SELECT):  (P.C. = 5)
   Arg 0 (SELF): #<INTERACTION-PANE Interaction Pane 2 10446077 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:INTERACTION-PANE -- 0. IV's, 8. FL's 104501761>
   Arg 2 (OPERATION): :SELECT
   Rest arg (IGNORE): NIL

(:METHOD TV:INTERACTION-PANE :COMBINED :SELECT):  (P.C. = 67)
   Arg 0 (SELF): #<INTERACTION-PANE Interaction Pane 2 10446077 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:INTERACTION-PANE -- 0. IV's, 8. FL's 104501761>
   Arg 2 (.OPERATION.): :SELECT
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

(:METHOD TV:SELECT-MIXIN :SELECT-RELATIVE):  (P.C. = 34)
   Arg 0 (SELF): #<INTERACTION-PANE Interaction Pane 2 10446077 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:SELECT-MIXIN -- 1. IV's, 0. FL's 104501653>
   Arg 2 (OPERATION): :SELECT-RELATIVE

(:METHOD TV:BASIC-FRAME :SELECT-PANE):  (P.C. = 47)
   Arg 0 (SELF): #<INSPECT-FRAME-WITH-OWN-PROCESS Inspect Frame With Own Process 1 10445245 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:BASIC-FRAME -- 2. IV's, 5. FL's 143114237>
   Arg 2 (OPERATION): :SELECT-PANE
   Arg 3 (PANE): #<INTERACTION-PANE Interaction Pane 2 10446077 exposed>

(:METHOD TV:INSPECT-FRAME :AFTER :INIT):  (P.C. = 12)
   Arg 0 (SELF): #<INSPECT-FRAME-WITH-OWN-PROCESS Inspect Frame With Own Process 1 10445245 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:INSPECT-FRAME -- 5. IV's, 5. FL's 143115152>
   Arg 2 (OPERATION): :INIT
   Arg 3 (IGNORE): #<DTP-LOCATIVE 36300352>

(:METHOD TV:INSPECT-FRAME-WITH-OWN-PROCESS :COMBINED :INIT):  (P.C. = 66)
   Arg 0 (SELF): #<INSPECT-FRAME-WITH-OWN-PROCESS Inspect Frame With Own Process 1 10445245 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:INSPECT-FRAME-WITH-OWN-PROCESS -- 2. IV's, 10. FL's 143115166>
   Arg 2 (.OPERATION.): :INIT
   Rest arg (.DAEMON-CALLER-ARGS.): (#<DTP-LOCATIVE 36300352>)

TV:MAKE-WINDOW:  (P.C. = 66)
   Arg 0 (FLAVOR-NAME): TV:INSPECT-FRAME-WITH-OWN-PROCESS
   Rest arg (OPTIONS): (:SUPERIOR #<SPLIT-SCREEN-FRAME X 10445062 exposed> :LEFT 0 :TOP 384
                        :RIGHT 1067 :BOTTOM 768)
   Local 1 (OPTIONS): (:TAB-NCHARS 8 :MORE-P NIL :BLINKER-P NIL :SAVE-BITS :DELAYED :SCREEN
                       #<MAIN-SCREEN Main Screen 43200000 exposed> ...)

TV:SPLIT-SCREEN-VIA-MENUS-SETUP-WINDOW:  (P.C. = 205)
   Arg 0 (SUP): #<SPLIT-SCREEN-FRAME X 10445062 exposed>
   Arg 1 (EDGES): (0 0 1067 769)
   Arg 2 (WINDOW-TYPE-LIST): (TV:INSPECT-FRAME-WITH-OWN-PROCESS)
   Arg 3 (N-WINDOWS): 2
   Arg 4 (LAYWIN): #<DISPLAY-LAYOUT-WINDOW Display Layout Window 1 43277703 deactivated>

TV:SYSTEM-MENU-SPLIT-SCREEN-VIA-MENUS:  (P.C. = 641)
   --Defaulted args:--
   Arg 0 (SUP): #<MAIN-SCREEN Main Screen 43200000 exposed>

(:METHOD TV:MENU-EXECUTE-MIXIN :EXECUTE):  (P.C. = 61)
   Arg 0 (SELF): #<DYNAMIC-MULTICOLUMN-MOMENTARY-WINDOW-HACKING-PROCESS-RENAMING-MENU Dynamic Multicolumn Momentary Window Hacking Process Renaming Menu 1 103101766 deactivated>
   Arg 1 (SELF-MAPPING-TABLE): TV:MENU-EXECUTE-MIXIN
   Arg 2 (OPERATION): :EXECUTE
   Arg 3 (ITEM): ("Split Screen" :FUNCALL TV:SYSTEM-MENU-SPLIT-SCREEN-VIA-MENUS :DOCUMENTATION
                  "Create a split screen configuration.  Options from menu.")

(:METHOD TV:DYNAMIC-MULTICOLUMN-MOMENTARY-WINDOW-HACKING-PROCESS-RENAMING-MENU :COMBINED
 :EXECUTE):  (P.C. = 27)
   Arg 0 (SELF): #<DYNAMIC-MULTICOLUMN-MOMENTARY-WINDOW-HACKING-PROCESS-RENAMING-MENU Dynamic Multicolumn Momentary Window Hacking Process Renaming Menu 1 103101766 deactivated>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:DYNAMIC-MULTICOLUMN-MOMENTARY-WINDOW-HACKING-PROCESS-RENAMING-MENU -- 0. IV's, 3. FL's 143110644>
   Arg 2 (.OPERATION.): :EXECUTE
   Rest arg (.DAEMON-CALLER-ARGS.): (("Split Screen" :FUNCALL
                                      TV:SYSTEM-MENU-SPLIT-SCREEN-VIA-MENUS :DOCUMENTATION
                                      "Create a split screen configuration.  Options from menu."))

(:METHOD TV:BASIC-MENU :CHOOSE):  (P.C. = 26)
   Arg 0 (SELF): #<DYNAMIC-MULTICOLUMN-MOMENTARY-WINDOW-HACKING-PROCESS-RENAMING-MENU Dynamic Multicolumn Momentary Window Hacking Process Renaming Menu 1 103101766 deactivated>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:BASIC-MENU -- 30. IV's, 0. FL's 143110202>
   Arg 2 (OPERATION): :CHOOSE

(:METHOD TV:DYNAMIC-MULTICOLUMN-MOMENTARY-WINDOW-HACKING-MENU :COMBINED :CHOOSE):  (P.C. = 42)
   Arg 0 (SELF): #<DYNAMIC-MULTICOLUMN-MOMENTARY-WINDOW-HACKING-PROCESS-RENAMING-MENU Dynamic Multicolumn Momentary Window Hacking Process Renaming Menu 1 103101766 deactivated>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:DYNAMIC-MULTICOLUMN-MOMENTARY-WINDOW-HACKING-MENU -- 0. IV's, 4. FL's 143110661>
   Arg 2 (.OPERATION.): :CHOOSE
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

TV:CALL-SYSTEM-MENU:  (P.C. = 51)
   Arg 0 (SUPERIOR): #<MAIN-SCREEN Main Screen 43200000 exposed>

SI:PROCESS-RUN-FUNCTION-INTERNAL:  (P.C. = 52)
   Arg 0 (RESTART-ON-RESET): NIL
   Arg 1 (FUNCTION): #<DTP-COMPILED-FUNCTION TV:CALL-SYSTEM-MENU 22377345>
   Rest arg (ARGS): (#<MAIN-SCREEN Main Screen 43200000 exposed>)

SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
   Arg 0 (IGNORE): NIL
3-Jul-85 21:00:42-EDT,448;000000000000  
Received: from MIT-MC by MIT-OZ via Chaosnet; 21 May 85 16:59-EDT
Date: Tue, 21 May 85 16:59:29 EST
From: Glenn S. Burke <GSB@MIT-MC>
To: BUG-lispm@MIT-OZ
Message-ID: <[MIT-MC].513104.850521.GSB>

:name gsb@mit,mly@mit


[MIT-REAGAN]
gsb,mly: The user named "gsb,mly" was not found.
No user with that name is already known by the local machine,
but it is not certain that there is no such user.
Some namespace server did not respond.
3-Jul-85 21:00:43-EDT,1169;000000000000
Received: from MIT-REAGAN by MIT-OZ via Chaosnet; 21 May 85 21:05-EDT
Received: from STONY-BROOK by MIT-REAGAN via INTERNET with SMTP id 5107; 21 May 85 21:04:06-EDT
Received: from NEPONSET.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 241472; Tue 21-May-85 21:04:17-EDT
Date: Tue, 21 May 85 21:05 EDT
From: David C. Plummer in disguise <DCP@SCRC-QUABBIN.ARPA>
To: Glenn S. Burke <GSB@MIT-MC.ARPA>, BUG-lispm@MIT-OZ.mit
In-Reply-To: <[MIT-MC].513104.850521.GSB>
Message-ID: <850521210530.0.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Tue, 21 May 85 16:59:29 EST
    From: Glenn S. Burke <GSB@MIT-MC>

    :name gsb@mit,mly@mit


    [MIT-REAGAN]
    gsb,mly: The user named "gsb,mly" was not found.
    No user with that name is already known by the local machine,
    but it is not certain that there is no such user.
    Some namespace server did not respond.

As far as I know, only the ITS name server allows multiple
specifications separated by comma.  (That's because ITS does it right;
user and server are the same.)  I can't recall any other user or server
name program that allows/accepts multiple specs.

3-Jul-85 21:00:43-EDT,1370;000000000000    
Mail-From: SAZ created at 23-May-85 09:08:01
Date: Thu 23 May 85 09:08-EDT
From: David M. J. Saslav <SAZ@MIT-OZ>
Subject: background typeout
To: BUG-lispm@MIT-OZ

I had function-4-t'ed, activating background processing in deexposed
windows, and had gone from lisp listener (henceforth "A") to terminal
1 ("B").  I was logging in to oz from B when I got a popup window
saying that process A wanted to typeout -- sure enough, there was some
query-io that i was doing in my init file asking me if i wanted to
load certain files... I told it to proceed and figured I might as well
type ahead my response to the next and final query io msg of the init
file (which I knew from experience would come up shortly thereafter)
at the same time.  As soon as I typed the two "Y"'s at A (no typeout
took place in A before the switch, I don't think), I went back to B,
where a little later I was again told that A wanted to tell me
something (same popup window as before).  When I went back to A,
however, the second queryio msg was not what was awaiting me, as I'd
half expected -- the second set of files had gone ahead and loaded in
as they were supposed to -- what was awaiting me in A was a message
telling me that B wanted to typeout...

Not a crucial bug but an interesting one nonetheless...hope y'all can
regenerate it if you're so inclined...

saz
3-Jul-85 21:00:43-EDT,2446;000000000000   
Received: from MIT-ROBOT-5 by MIT-OZ via Chaosnet; 23 May 85 13:07-EDT
Date: Thu, 23 May 85 13:06 EDT
From: David M. J. Saslav <saz@OZ>
Subject: m-V generated this error
To: BUG-LISPM@OZ
Message-ID: <850523130613.1.SAZ@ROBOT-5>

In Symbolics 3670 Release 6.0, IP-TCP 29.0, AISite 9.1,
microcode TMC5-IO4-FPA-MIC 319, on Lisp Machine Robot-5:

Just came out of a breakpoint with a double  and tried a meta-v...
						
>>Error: POINT is not in the interval being displayed
While in the function ZWEI:PUT-POINT-AT-PLINE  ZWEI:RECENTER-WINDOW  ZWEI:RECENTER-WINDOW-RELATIVE

ZWEI:PUT-POINT-AT-PLINE:  (P.C. = 35)
   Arg 0 (SHEET): #<ZMACS-WINDOW-PANE Zmacs Window Pane 1 43240666 exposed>
   Arg 1 (POINT-LINE): "(defun DOMINANT-SEVENTH? (pitch-list)"
   Arg 2 (POINT-INDEX): 37
   Arg 3 (POINT-PLINE): 79
   Arg 4 (FIRST-BP): (";;; -*- Package: MUSIC; Base: 10.; Mode: LISP -*-" 0 :NORMAL)
   Arg 5 (LAST-BP): ("" 0 :MOVES)
   Local 6 (LH): 14
   Local 7 (P): 54
   Local 8 (STOP-LINE): ";;; -*- Package: MUSIC; Base: 10.; Mode: LISP -*-"
   Local 9 (DIAGRAM-NPLINES): NIL
   Local 10 (LINE): NIL
   Local 11 (POINT-LINE-P): NIL
   Local 12 (DIAGRAM): NIL

ZWEI:RECENTER-WINDOW:  (P.C. = 101)
   Arg 0 (WINDOW): #<WINDOW 121162025>
   Arg 1 (RECENTER-TYPE): :RELATIVE
   Arg 2 (RC1): -48
   --Defaulted args:--
   Arg 3 (RC2): NIL

ZWEI:RECENTER-WINDOW-RELATIVE:  (P.C. = 30)
   Arg 0 (WINDOW): #<WINDOW 121162025>
   Arg 1 (NLINES): -48

ZWEI:COM-PREVIOUS-SCREEN:  (P.C. = 22)

ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
   Arg 0 (COMMAND): ZWEI:COM-PREVIOUS-SCREEN
   Arg 1 (CHAR): 598
   Arg 2 (PREFIX-CHAR): NIL
   Arg 3 (HOOK-LIST): NIL

ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
   Arg 0 (CH): 598

(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 233)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 121171573>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:EDITOR -- 12. IV's, 0. FL's 142346020>
   Arg 2 (OPERATION): :EDIT
   --Defaulted args:--
   Arg 3 (TOP-LEVEL-P): T
   Arg 4 (DESCRIPTION): NIL

(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 60)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 121171573>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:TOP-LEVEL-EDITOR -- 13. IV's, 1. FL's 142345776>
   Arg 2 (.OPERATION.): :EDIT
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 51)

SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
   Arg 0 (IGNORE): NIL
3-Jul-85 21:00:44-EDT,5463;000000000000 
Received: from MIT-ZERMATT by MIT-OZ via Chaosnet; 24 May 85 10:50-EDT
Date: Fri, 24 May 85 10:50 EDT
From: Richard E. Zippel <RZ@ZERMATT>
Subject: Undigestify problems in ZMail
To: BUG-LISPM@OZ
Message-ID: <850524105046.5.RZ@ZERMATT>

In Symbolics 3670 Release 6.0, IP-TCP 29.0, MLSite 7.2, Mailer 43.0,
Experimental Schema 83.1, microcode TMC5-IO4-MIC 319, on Lisp Machine Zermatt:

I selected the ZMail buffer in Zermatt:>RZ>Mail>Architecture.babyl.9
and tried to undigestify the first message in the buffer.

(describe #<MSG 23217625>) = 

#<MSG 23217625> is a ZWEI:MSG
   REAL-INTERVAL:                #<NODE 23217577>
   INTERVAL:                     #<NODE 23217612>
   TICK:                         195192
   BUFFER:                       #<BABYL-BUFFER "Z:>RZ>Mail>Architecture.babyl" 52220250>
   SUMMARY-LINE:                 "  212  3-Nov                        WorkS Digest          Tuesday, 3 Nov 1981        Volume 1 : Issue 29"
   DISPLAYED-INDEX:              0
   STATUS:                       (ZWEI:REFERENCES NIL ZWEI:MSG-IDS ((1952 :DATE 2582606160 :FROM (:NAME "MISSING-FROM-FIELD"))) ZWEI:SCROLL-ITEM-DISPLAYER #<ART-Q-4 52221461> ZWEI:DELETED NIL ZWEI:HEADERS-END-BP ("From: Jonathan Alan Solomon <JSol at RUTGERS>" 0) :DATE 2582606160)
   PARSED-P:                     T
   INSERTION-TICK:               195191
#<MSG 23217625> is implemented as an ART-Q type array.
It uses %ARRAY-DISPATCH-WORD; it is 10 elements long.
#<MSG 23217625>


>>Error: The first argument (CONS) to CAR-LOCATION, NIL, was of the wrong type.
         The function expected a CONS.
While in the function CAR-LOCATION  ZWEI:UNDIGESTIFY-MSG  ZWEI:COM-ZMAIL-UNDIGESTIFY

CAR-LOCATION:  (P.C. = 15)
   Arg 0 (CONS): NIL

ZWEI:UNDIGESTIFY-MSG:  (P.C. = 10)
   Arg 0 (MSG): #<MSG 23217625>

ZWEI:COM-ZMAIL-UNDIGESTIFY:  (P.C. = 13)

ZWEI:COM-ZMAIL-EXTENDED-COMMAND:  (P.C. = 33)

ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
   Arg 0 (COMMAND): ZWEI:COM-ZMAIL-EXTENDED-COMMAND
   Arg 1 (CHAR): 600
   --Defaulted args:--
   Arg 2 (PREFIX-CHAR): NIL
   Arg 3 (HOOK-LIST): NIL

ZWEI:ZMAIL-COMMAND-EXECUTE:  (P.C. = 6)
   Arg 0: ZWEI:COM-ZMAIL-EXTENDED-COMMAND

(:METHOD ZWEI:ZMAIL-FRAME :PROCESS-COMMAND-CHAR):  (P.C. = 7)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 43200617 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-FRAME -- 65. IV's, 20. FL's 142611405>
   Arg 2 (OPERATION): :PROCESS-COMMAND-CHAR
   Arg 3 (CH): 600

(:INTERNAL (:INTERNAL (:METHOD ZWEI:ZMAIL-FRAME :COMBINED :PROCESS-COMMAND-CHAR) 0) 0):  (P.C. = 10)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 43200617 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-FRAME -- 65. IV's, 20. FL's 142611405>
   Arg 2 (.OPERATION.): :PROCESS-COMMAND-CHAR
   Rest arg (.DAEMON-CALLER-ARGS.): (600)

(:METHOD ZWEI:ZMAIL-COMMAND-LOOP-MIXIN :WHOPPER :PROCESS-COMMAND-CHAR):  (P.C. = 21)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 43200617 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-COMMAND-LOOP-MIXIN -- 6. IV's, 0. FL's 142611503>
   Arg 2 (.WHOPPER-CONTINUATION.): #<DTP-COMPILED-FUNCTION (:INTERNAL (:INTERNAL (:METHOD ZWEI:ZMAIL-FRAME :COMBINED :PROCESS-COMMAND-CHAR) 0) 0) 47674121>
   Arg 3 (.OLD-SELF-MAPPING-TABLE.): #<Map to flavor ZWEI:ZMAIL-FRAME -- 65. IV's, 20. FL's 142611405>
   Arg 4 (.OPERATION.): :PROCESS-COMMAND-CHAR
   Arg 5 (CHAR): 600

(:INTERNAL (:METHOD ZWEI:ZMAIL-FRAME :COMBINED :PROCESS-COMMAND-CHAR) 0):  (P.C. = 13)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 43200617 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-FRAME -- 65. IV's, 20. FL's 142611405>
   Arg 2 (.OPERATION.): :PROCESS-COMMAND-CHAR
   Rest arg (.DAEMON-CALLER-ARGS.): (600)

(:METHOD ZWEI:ZMAIL-FRAME :WHOPPER :PROCESS-COMMAND-CHAR):  (P.C. = 21)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 43200617 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-FRAME -- 65. IV's, 20. FL's 142611405>
   Arg 2 (.WHOPPER-CONTINUATION.): #<DTP-COMPILED-FUNCTION (:INTERNAL (:METHOD ZWEI:ZMAIL-FRAME :COMBINED :PROCESS-COMMAND-CHAR) 0) 47674106>
   Arg 3 (.OLD-SELF-MAPPING-TABLE.): #<Map to flavor ZWEI:ZMAIL-FRAME -- 65. IV's, 20. FL's 142611405>
   Arg 4 (.OPERATION.): :PROCESS-COMMAND-CHAR
   Arg 5 (CHAR): 600

(:METHOD ZWEI:ZMAIL-FRAME :COMBINED :PROCESS-COMMAND-CHAR):  (P.C. = 12)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 43200617 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-FRAME -- 65. IV's, 20. FL's 142611405>
   Arg 2 (.OPERATION.): :PROCESS-COMMAND-CHAR
   Rest arg (.DAEMON-CALLER-ARGS.): (600)

(:METHOD ZWEI:ZMAIL-FRAME :COMMAND-LOOP):  (P.C. = 143)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 43200617 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-FRAME -- 65. IV's, 20. FL's 142611405>
   Arg 2 (OPERATION): :COMMAND-LOOP

(:METHOD ZWEI:ZMAIL-FRAME :COMBINED :COMMAND-LOOP):  (P.C. = 70)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 43200617 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-FRAME -- 65. IV's, 20. FL's 142611405>
   Arg 2 (.OPERATION.): :COMMAND-LOOP
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

ZWEI:ZMAIL-PROCESS-TOP-LEVEL:  (P.C. = 105)
   Arg 0 (WINDOW): #<ZMAIL-FRAME Main Zmail Window 43200617 exposed>

SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
   --Defaulted args:--
   Arg 0 (IGNORE): NIL
3-Jul-85 21:00:44-EDT,1324;000000000000
Received: from MIT-DUANE by MIT-OZ via Chaosnet; 24 May 85 15:17-EDT
Date: Fri, 24 May 85 15:18 EDT
From: Ken Haase <KWH@OZ>
Subject: Can't export from a patch.
To: BUG-LISPM@OZ
Message-ID: <850524151827.1.KWH@DUANE>

In Symbolics 3670 Release 6.0, IP-TCP 29.0, AISite 9.1,
Experimental Meta Representation Langauge 3.1,
microcode TMC5-IO4-MIC 319, FEP 22, on Lisp Machine Duane Allman:

When an export form is patched, the resultant compiled code ignores the
package-local information which is neccessary for the use of export to
make sense.  In particular, if you M-X Add Patch the following form:

    (EXPORT '(RELATIVITY-FUDGE))

from a buffer and file where the package is PHYSICS, the resulting patch
is compiled into a load-time call of the form:

   (EXPORT (LIST (INTERN "RELATIVITY-FUDGE")))

which (since the package of the patch file is USER) exports
USER:RELATIVITY-FUDGE instead of PHYSICS:RELATIVITY-FUDGE, which is
exactly the wrong thing.

The conversion of the first form into the second package-ignoring form
seems to be handled by EXPORT's COMPILER:TOP-LEVEL-FORM property.  I'd
say more if I had the sources, but (bitch bitch) Symbolics doesn't seem
to have the corporate sense to preserve one of their products most
significant selling points.

Mildly upset,

Ken

3-Jul-85 21:00:44-EDT,4901;000000000000   
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 24 May 85 15:56-EDT
Received: from GRIZZLY by GOLDILOCKS via CHAOS with CHAOS-MAIL id 1508; Fri 24-May-85 15:56:27-EDT
Date: Friday, 24 May 1985, 15:56-EDT
From: Robert Kassel <sr.rob at MIT-SPEECH>
Subject: I still don't think you guys have debugged 6.0!
To: BUG-LISPM at MIT-SPEECH
Message-ID: <850524155600.1.ROB@GRIZZLY.MIT>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, Spire-Macros 5.1,
Attribute 5.5, Compute 5.2, Audio 4.0, Speech-Attributes 4.0,
Display 6.16, Speech-Layouts 6.2, Prtout 4.0, Versatec 5.0, Spire 16.0,
ZOO 6.5, ZOO-SPIRE 2.0, Defsystem Extensions 1.2,
Experimental Alexis Definition 1.0, Experimental Pop-Up-Calculator 1.0,
Experimental Alexis Television 4.1, microcode TMC5-MIC 319, on Lisp Machine Grizzly: 

I was trying to instantiate tv:text-scroll-window to check for a bug and
I didn't even get that far!  Is this not an instantiable flavor?  If
not, why did it let me try?

>>Error: :OVERRIDE :WHO-LINE-DOCUMENTATION-STRING method(s) illegal when using :DAEMON method-combination
While in the function SI:GET-CERTAIN-METHODS  (:PROPERTY :DAEMON SI:METHOD-COMBINATION)  SI:COMPOSE-METHOD-COMBINATION

SI:GET-CERTAIN-METHODS:  (P.C. = 62)
   Arg 0 (MAGIC-LIST-ENTRY): (:WHO-LINE-DOCUMENTATION-STRING NIL NIL (:OVERRIDE (:METHOD TV:BASIC-SCROLL-BAR :OVERRIDE :WHO-LINE-DOCUMENTATION-STRING)))
   Arg 1 (METHOD-TYPE): NIL
   Arg 2 (OTHER-METHODS-ALLOWED): (:BEFORE :AFTER)
   Arg 3 (NO-METHODS-OK): T
   Arg 4 (ORDERING-DECLARATION): :BASE-FLAVOR-LAST
   --Defaulted args:--
   Arg 5 (OTHER-METHOD-TYPE): NIL
   Arg 6 (FL): NIL
   Local 7 (METHODS): NIL
   Local 8 (MORE-METHODS): NIL
   Local 9: ((:OVERRIDE (:METHOD TV:BASIC-SCROLL-BAR :OVERRIDE :WHO-LINE-DOCUMENTATION-STRING)))
   Local 10 (X): (:OVERRIDE (:METHOD TV:BASIC-SCROLL-BAR :OVERRIDE :WHO-LINE-DOCUMENTATION-STRING))

(:PROPERTY :DAEMON SI:METHOD-COMBINATION):  (P.C. = 10)
   Arg 0 (FL): #<FLAVOR TV:TEXT-SCROLL-WINDOW 76317754>
   Arg 1 (MAGIC-LIST-ENTRY): (:WHO-LINE-DOCUMENTATION-STRING NIL NIL (:OVERRIDE (:METHOD TV:BASIC-SCROLL-BAR :OVERRIDE :WHO-LINE-DOCUMENTATION-STRING)))

SI:COMPOSE-METHOD-COMBINATION:  (P.C. = 457)
   Arg 0 (FL): #<FLAVOR TV:TEXT-SCROLL-WINDOW 76317754>
   --Defaulted args:--
   Arg 1 (SINGLE-OPERATION): NIL

SI:COMPOSE-METHOD-COMBINATION-UNLESS-ABSTRACT:  (P.C. = 15)
   Arg 0 (FL): #<FLAVOR TV:TEXT-SCROLL-WINDOW 76317754>

INSTANTIATE-FLAVOR:  (P.C. = 60)
   Arg 0 (FLAVOR-NAME): TV:TEXT-SCROLL-WINDOW
   Arg 1 (INIT-PLIST): #<DTP-LOCATIVE 43440400>
   Arg 2 (SEND-INIT-MESSAGE-P): NIL
   Arg 3 (RETURN-UNHANDLED-KEYWORDS-P): NIL
   Arg 4 (AREA-TO-CONS-INSTANCE-IN): 23

TV:MAKE-WINDOW:  (P.C. = 43)
   Arg 0 (FLAVOR-NAME): TV:TEXT-SCROLL-WINDOW
   Rest arg (OPTIONS): (:EDGES-FROM :MOUSE)
   Local 1 (OPTIONS): (:SUPERIOR #<MAIN-SCREEN Main Screen 43200000 exposed> :SCREEN #<MAIN-SCREEN Main Screen 43200000 exposed> :EDGES-FROM :MOUSE)

SI:*EVAL:  (P.C. = 403)
   Arg 0 (FORM): (TV:MAKE-WINDOW (QUOTE TV:TEXT-SCROLL-WINDOW) :EDGES-FROM :MOUSE)
   Local 0 (FORM): NIL
   --Defaulted args:--
   Arg 1 (ENV): NIL
   Arg 2 (HOOK): NIL

(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0):  (P.C. = 152)
   Arg 0 (.LEXICAL-ENVIRONMENT-POINTER.): #<DTP-LOCATIVE 43440261>

TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
   Arg 0 (NEW-MODE): :BLAST
   Arg 1 (STREAM): #:TERMINAL-IO-SYN-STREAM
   Arg 2 (CONTINUATION): #<LEXICAL-CLOSURE (:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0) 43440266>

SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
   Arg 0 (NAME): "Breakpoint ZMACS"
   Arg 1 (ABORT-FUNCTION): SI:BREAK-HERALD
   Arg 2 (READ-FUNCTION): SI:BREAK-READ-FUNCTION
   --Defaulted args:--
   Arg 3 (EVAL-FUNCTION): NIL
   Arg 4 (PRINT-FUNCTION): NIL

SI:BREAK-INTERNAL:  (P.C. = 176)
   Arg 0 (TAG): ZWEI:ZMACS
   Local 0 (TAG): "Breakpoint ZMACS"
   Arg 1 (CONDITIONAL): T

ZWEI:COM-BREAK:  (P.C. = 64)

ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
   Arg 0 (COMMAND): ZWEI:COM-BREAK
   Arg 1 (CHAR): 129
   Arg 2 (PREFIX-CHAR): NIL
   Arg 3 (HOOK-LIST): NIL

ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
   Arg 0 (CH): 129

(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 233)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 121171573>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:EDITOR -- 12. IV's, 0. FL's 142346020>
   Arg 2 (OPERATION): :EDIT
   --Defaulted args:--
   Arg 3 (TOP-LEVEL-P): T
   Arg 4 (DESCRIPTION): NIL

(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 60)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 121171573>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:TOP-LEVEL-EDITOR -- 13. IV's, 1. FL's 142345776>
   Arg 2 (.OPERATION.): :EDIT
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 51)

SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
   --Defaulted args:--
   Arg 0 (IGNORE): NIL
3-Jul-85 21:00:45-EDT,2567;000000000000  
Received: from MIT-GOLDILOCKS by MIT-OZ via Chaosnet; 24 May 85 16:25-EDT
Received: from GRIZZLY by GOLDILOCKS via CHAOS with CHAOS-MAIL id 1511; Fri 24-May-85 16:26:21-EDT
Date: Friday, 24 May 1985, 16:26-EDT
From: Robert Kassel <sr.rob at MIT-SPEECH>
Subject: bug with scroll bars
To: BUG-LISPM at OZ
Message-ID: <850524162610.2.ROB@GRIZZLY.MIT>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, Spire-Macros 5.1,
Attribute 5.5, Compute 5.2, Audio 4.0, Speech-Attributes 4.0,
Display 6.16, Speech-Layouts 6.2, Prtout 4.0, Versatec 5.0, Spire 16.0,
ZOO 6.5, ZOO-SPIRE 2.0, Defsystem Extensions 1.2,
Experimental Alexis Definition 1.0, Experimental Pop-Up-Calculator 1.0,
Experimental Alexis Television 4.1, Experimental Alexis Interface 5.0,
Experimental ALexiS 1.0, Experimental LexiS 7.0, microcode TMC5-MIC 319, on Lisp Machine Grizzly:

I noticed a bug (feature?) with scroll bars.  Suppose you have a window
that looks like this:


-----       +----------------------------------------------------------------+
  ^         |               <Some sort of margin goes here>                  |
  |         |                                                                |
  |   ----- |   A Line of text                                               |
        ^   |   B Line of text                                               |
  1     2   |   C Line of text                                               |
        v   |   D Line of text                                               |
  |   ----- |   E Line of text                                               |
  |         |                                                                |
  v         |               <Some sort of margin goes here>                  |
-----       +----------------------------------------------------------------+


This sort of window is used in the inspector.

The scroll bar is displayed in the margin within dimension two's bounds
as it should be.  Clicking the left or right mouse buttons works
properly, but scrolling using the middle button is wrong.  It seems as
if the "percentage" is based on the mouse's position within dimension
one.  Thus, when you click for the scroll the new bar is displayed
somewhat below where you'ld expect it to be displayed.

BTW: Weeks ago I sent a bug report about a FED bug, and I have yet to
see a reply.  I've heard the "Oh, we're so busy" story before.  You
should at least acknowledge getting the report so People don't feel that
sending the reports are a waste of time.


						ROB

3-Jul-85 21:00:46-EDT,7330;000000000000    
Received: from MIT-MC by MIT-OZ via Chaosnet; 24 May 85 16:33-EDT
Received: from MIT-TWEETY-PIE by MIT-MC via Chaosnet; 24 MAY 85  16:33:48 EDT
Date: Friday, 24 May 1985, 16:34-EDT
From: Cory Myers <cory at MIT-BUGS-BUNNY>
Subject: Too many constants
To: BUG-LISPM at OZ
Message-ID: <850524163415.1.CORY@TWEETY-PIE.MIT>

In Symbolics 3600 Release 6.0, IP-TCP 29.0,
microcode TMC5-IO4-FPA-MIC 319, with UTIL, on Lisp Machine Tweety Pie:

While trying to compile a very big function.

>>Error: The operand 400 was beyond the limit, 400 for CONSTANT-OPERAND
         Your function probably has too many constants or external functions.
While in the function COMPILER:CHECK-OPERAND-RANGE  COMPILER:CHECK-OBJECT-OFFSET  SYS:CONSTANT-OPERAND
Error occurred while compiling FORWARD-RADIX-4-FFT-256

COMPILER:CHECK-OPERAND-RANGE:  (P.C. = 23)
   Arg 0 (OPERAND): 256
   Arg 1 (UPPER-BOUND): 256
   Arg 2 (FORMAT): SYS:CONSTANT-OPERAND
   Arg 3 (WHATS): "constants or external functions"

COMPILER:CHECK-OBJECT-OFFSET:  (P.C. = 6)
   Arg 0 (OFFSET): 256
   Arg 1 (FORMAT): SYS:CONSTANT-OPERAND

SYS:CONSTANT-OPERAND:  (P.C. = 4)
   Arg 0 (OPCODE): 65
   Arg 1 (OFFSET): 256

SYS:PUSH-CONSTANT:  (P.C. = 21)
   Arg 0 (OBJECT): 0.98917663

(:PROPERTY COMPILER:CONST COMPILER:ASSEMBLE):  (P.C. = 22)
   Arg 0 (INST): #<Inst (Const 0.98917663)>

COMPILER:ASSEMBLE-INTERVAL:  (P.C. = 101)
   Arg 0 (INTERVAL): #<INTERVAL 41503436>
   Arg 1 (FUNCTION): #<EXTERNAL-FUNCTION 41503335>

COMPILER:ASSEMBLE-FUNCTION:  (P.C. = 76)
   Arg 0 (FUNCTION): #<EXTERNAL-FUNCTION 41503335>

MAPC:  (P.C. = 37)
   Arg 0 (FCN): #<DTP-COMPILED-FUNCTION COMPILER:ASSEMBLE-FUNCTION 22225714>
   Rest arg (LISTS): (NIL)

COMPILER:RUN-PHASE-4:  (P.C. = 6)
   Arg 0: T

COMPILER:COMPILE-DEFINITION-1:  (P.C. = 50)
   Arg 0 (TYPE): DEFUN
   Arg 1 (FUNCTION-SPEC): FORWARD-RADIX-4-FFT-256
   Arg 2 (LAMBDA-LIST): (INPUT-REAL INPUT-IMAG &AUX T0-R T0-I I1-R I1-I T1-R T1-I I2-R ...)
   Arg 3 (DEBUG-INFO): NIL
   Arg 4 (DEFINITION): ((RADIX-4-REVERSE INPUT-REAL 256) (RADIX-4-REVERSE INPUT-IMAG 256) (WITH-ARRAY-REGISTERS-NO-PAGE-IN (INPUT-REAL INPUT-IMAG) (SETQ T0-R (AREF INPUT-REAL 0)) (SETQ T0-I (AREF INPUT-IMAG 0)) (SETQ T1-R (AREF INPUT-REAL 1)) (SETQ T1-I (AREF INPUT-IMAG 1)) (SETQ T2-R (AREF INPUT-REAL 2)) (SETQ T2-I (AREF INPUT-IMAG 2)) (SETQ T3-R (AREF INPUT-REAL 3)) (SETQ T3-I (AREF INPUT-IMAG 3)) ...))
   Arg 5 (FIXUP-P): T

COMPILER:COMPILE-DEFINITION:  (P.C. = 122)
   Arg 0 (EXP): (DEFUN FORWARD-RADIX-4-FFT-256 (INPUT-REAL INPUT-IMAG &AUX T0-R T0-I I1-R I1-I T1-R T1-I I2-R ...) (RADIX-4-REVERSE INPUT-REAL 256) (RADIX-4-REVERSE INPUT-IMAG 256) (WITH-ARRAY-REGISTERS-NO-PAGE-IN (INPUT-REAL INPUT-IMAG) (SETQ T0-R (AREF INPUT-REAL 0)) (SETQ T0-I (AREF INPUT-IMAG 0)) (SETQ T1-R (AREF INPUT-REAL 1)) (SETQ T1-I (AREF INPUT-IMAG 1)) (SETQ T2-R (AREF INPUT-REAL 2)) (SETQ T2-I (AREF INPUT-IMAG 2)) (SETQ T3-R (AREF INPUT-REAL 3)) (SETQ T3-I (AREF INPUT-IMAG 3)) ...))
   Arg 1 (FIXUP-P): T
   Arg 2 (DEBUG-INFO): NIL

(:INTERNAL COMPILER:COMPILE-TO-CORE 0 (:DUMP-DEFINITION)):  (P.C. = 5)
   Arg 0 (**DEFSELECT-OP**): :DUMP-DEFINITION
   Arg 1 (EXP): (DEFUN FORWARD-RADIX-4-FFT-256 (INPUT-REAL INPUT-IMAG &AUX T0-R T0-I I1-R I1-I T1-R T1-I I2-R ...) (RADIX-4-REVERSE INPUT-REAL 256) (RADIX-4-REVERSE INPUT-IMAG 256) (WITH-ARRAY-REGISTERS-NO-PAGE-IN (INPUT-REAL INPUT-IMAG) (SETQ T0-R (AREF INPUT-REAL 0)) (SETQ T0-I (AREF INPUT-IMAG 0)) (SETQ T1-R (AREF INPUT-REAL 1)) (SETQ T1-I (AREF INPUT-IMAG 1)) (SETQ T2-R (AREF INPUT-REAL 2)) (SETQ T2-I (AREF INPUT-IMAG 2)) (SETQ T3-R (AREF INPUT-REAL 3)) (SETQ T3-I (AREF INPUT-IMAG 3)) ...))

COMPILER:COMPILE-TO-CORE:  (P.C. = 12)
   Arg 0 (OPERATION): :DUMP-DEFINITION
   Rest arg (SELECT-METHOD-ARGS): ((DEFUN FORWARD-RADIX-4-FFT-256 (INPUT-REAL INPUT-IMAG &AUX T0-R T0-I I1-R I1-I T1-R T1-I I2-R ...) (RADIX-4-REVERSE INPUT-REAL 256) (RADIX-4-REVERSE INPUT-IMAG 256) (WITH-ARRAY-REGISTERS-NO-PAGE-IN (INPUT-REAL INPUT-IMAG) (SETQ T0-R **) (SETQ T0-I **) (SETQ T1-R **) (SETQ T1-I **) (SETQ T2-R **) (SETQ T2-I **) (SETQ T3-R **) (SETQ T3-I **) ...)))

COMPILER:COMPILE-FORM-FUNCTION:  (P.C. = 41)
   Arg 0 (FORM): (DEFUN FORWARD-RADIX-4-FFT-256 (INPUT-REAL INPUT-IMAG &AUX T0-R T0-I I1-R I1-I T1-R T1-I I2-R ...) (RADIX-4-REVERSE INPUT-REAL 256) (RADIX-4-REVERSE INPUT-IMAG 256) (WITH-ARRAY-REGISTERS-NO-PAGE-IN (INPUT-REAL INPUT-IMAG) (SETQ T0-R (AREF INPUT-REAL 0)) (SETQ T0-I (AREF INPUT-IMAG 0)) (SETQ T1-R (AREF INPUT-REAL 1)) (SETQ T1-I (AREF INPUT-IMAG 1)) (SETQ T2-R (AREF INPUT-REAL 2)) (SETQ T2-I (AREF INPUT-IMAG 2)) (SETQ T3-R (AREF INPUT-REAL 3)) (SETQ T3-I (AREF INPUT-IMAG 3)) ...))
   Arg 1 (COMPILE-TIME-P): NIL
   Arg 2 (LOAD-TIME-P): T

COMPILER:COMPILE-FROM-STREAM-1:  (P.C. = 330)
   Arg 0: (UNWIND-FORWARD-RADIX-4-FFT 256)
   --Defaulted args:--
   Arg 1 (COMPILE-TIME-TOO): NIL

COMPILER:PROCESS-FORMS-FROM-STREAM:  (P.C. = 117)
   Arg 0 (INPUT-STREAM): #<INTERVAL-STREAM 41502770>
   Arg 1 (PROCESS-FUNCTION): COMPILER:COMPILE-FROM-STREAM-1
   Arg 2 (FOR-FILE): NIL
   Arg 3 (AREA-FOR-READING): 4

COMPILER:COMPILE-FROM-STREAM:  (P.C. = 237)
   Arg 0 (INPUT-STREAM): #<INTERVAL-STREAM 41502770>
   Arg 1 (GENERIC-PATHNAME): NIL
   Arg 2: #<DTP-COMPILED-FUNCTION COMPILER:COMPILE-TO-CORE 22236230>
   Arg 3 (ADDITIONAL-BINDINGS): (:PACKAGE #<Package KBSP 15147042>)

ZWEI:COMPILE-INTERVAL:  (P.C. = 142)
   Arg 0 (COMPILE-P): T
   Arg 1: NIL
   Arg 2: T
   Arg 3 (BP1): ("(UNWIND-FORWARD-RADIX-4-FFT 256)" 0)
   Arg 4 (BP2): ("" 0)
   Arg 5 (IN-ORDER-P): T
   Arg 6 (SPECIAL-COMPILER-FUNCTION): NIL
   Arg 7: NIL

ZWEI:COMPILE-PRINT-INTERVAL:  (P.C. = 121)
   Arg 0 (BP1): ("(UNWIND-FORWARD-RADIX-4-FFT 256)" 0)
   Arg 1 (BP2): ("" 0)
   Arg 2 (IN-ORDER-P): T
   Arg 3 (COMPILE-P): T
   Arg 4 (DEFINITION-NAME): "Definition"
   Arg 5 (MODE-NAME): "Compiling"
   Arg 6 (ECHO-NAME): "compiled."
   Arg 7 (USE-TYPEOUT): NIL
   Arg 8 (DEFVAR-HACK): T
   Arg 9 (SPECIAL-COMPILER-FUNCTION): NIL

ZWEI:COMPILE-DEFINITION-INTERNAL:  (P.C. = 100)
   Arg 0 (COMPILE-P): T
   Arg 1 (MODE-NAME): "Compiling"
   Arg 2 (ECHO-NAME): "compiled."
   --Defaulted args:--
   Arg 3 (USE-TYPEOUT): NIL
   Arg 4 (DEFVAR-HACK): T
   Arg 5 (SPECIAL-COMPILER-FUNCTION): NIL

ZWEI:COM-COMPILE-REGION:  (P.C. = 5)

ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
   Arg 0 (COMMAND): ZWEI:COM-COMPILE-REGION
   Arg 1 (CHAR): 355
   Arg 2 (PREFIX-CHAR): NIL
   Arg 3 (HOOK-LIST): (ZWEI:SHIFT-LOCK-HOOK)

ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
   Arg 0 (CH): 355

(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 233)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 121171573>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:EDITOR -- 12. IV's, 0. FL's 142346020>
   Arg 2 (OPERATION): :EDIT
   --Defaulted args:--
   Arg 3 (TOP-LEVEL-P): T
   Arg 4 (DESCRIPTION): NIL

(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 60)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 121171573>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:TOP-LEVEL-EDITOR -- 13. IV's, 1. FL's 142345776>
   Arg 2 (.OPERATION.): :EDIT
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 51)

SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
   --Defaulted args:--
   Arg 0 (IGNORE): NIL
3-Jul-85 21:00:47-EDT,2513;000000000000 
Received: from MIT-HTVAX by MIT-OZ via Chaosnet; 24 May 85 17:13-EDT
Received: by MIT-HTVAX.ARPA (4.12/4.7) 
	id AA00313; Fri, 24 May 85 17:15:21 edt
To: bug-lispm@mit-oz
Subject: Finger servers that "Do it right"
Date: 24 May 85 17:15:14 EDT (Fri)
From: Martin David Connor <mdc@mit-htvax>

    Date: Tue, 21 May 85 21:05 EDT
    From: David C. Plummer in disguise <DCP@SCRC-QUABBIN.ARPA>

	Date: Tue, 21 May 85 16:59:29 EST
	From: Glenn S. Burke <GSB@MIT-MC>

	:name gsb@mit,mly@mit

	[MIT-REAGAN]
	gsb,mly: The user named "gsb,mly" was not found.
	  [...]

    As far as I know, only the ITS name server allows multiple
    specifications separated by comma.  (That's because ITS does it right;
    user and server are the same.)  I can't recall any other user or server
    name program that allows/accepts multiple specs.

As a point of information, The OZ (Tops-20) name server and user are
the same program, with conditional assembly switches. I can do:

    Script started on Fri May 24 16:47:59 1985

    ht.finger "mdc,gz"@OZ
    [mit-oz]
    -User-   GR --Full name--         -What- Idle TTY -Console location-
    GZ          Gail Zacharias        Logout Sun 12-May-85 10:28pm from TTY57
     GZ has new mail from TINA@MIT-XX.ARPA.Internet on Fri May 24, 1985 ...
     last read on Wed May 15, 1985 at 4:49pm
    
    MDC         Martin David Connor   Logout Fri 24-May-85 5:59am (det)
     Mail is forwarded to mdc@MIT-HTVAX]

I also note that the Multics server has the ability to accept multiple
names separated by commas:

    Script started on Fri May 24 17:00:01 1985

    ht.f "DClark,JFox"@multics
    [mit-multics.arpa]
    --User--  -- Full Name --      Idle -- Location --
    DClark    David Clark            23 ID "TVT6" STY owned by Internet.Daemon
    JFox      Julia Fox              23 ID "0309" Dialup 30 cps, CISL

I also find that the INTERNET finger Server on Unix (but not CHAOS!) can
handle the request:

    finger "keith,mike"@seismo

and do something reasonable.

The Unix Internet Finger server fires up a finger user program and pipes the
command to it, so functionally the server and the user are one.

So, it seems to me that a very good percentage of the the finger
servers in the Internet can handle multiple requests, and do "do it
right" to reasonable approximation.  

It would be nice if the 3600 could parse the request for spaces and
commas and do something reasonable.

Just for the record.

3-Jul-85 21:00:48-EDT,1448;000000000000 
Received: from MIT-REAGAN by MIT-OZ via Chaosnet; 24 May 85 20:33-EDT
Received: from SCRC-STONY-BROOK by MIT-REAGAN via INTERNET with SMTP id 5413; 24 May 85 20:35:46-EDT
Received: from NEPONSET.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 243703; Fri 24-May-85 20:35:00-EDT
Date: Fri, 24 May 85 20:37 EDT
From: David C. Plummer in disguise <DCP@SCRC-QUABBIN.ARPA>
Subject: Too many constants
To: Cory Myers <cory@MIT-BUGS-BUNNY.ARPA>, BUG-LISPM@OZ.mit
In-Reply-To: <850524163415.1.CORY@TWEETY-PIE.MIT>
Message-ID: <850524203704.1.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Friday, 24 May 1985, 16:34-EDT
    From: Cory Myers <cory at MIT-BUGS-BUNNY>

    In Symbolics 3600 Release 6.0, IP-TCP 29.0,
    microcode TMC5-IO4-FPA-MIC 319, with UTIL, on Lisp Machine Tweety Pie:

    While trying to compile a very big function.

Each implementation of Lisp has its own limitations.  As the message
says, you hit one of ours by having "too many constants or external
functions."  Break up your function into smaller pieces.

    >>Error: The operand 400 was beyond the limit, 400 for CONSTANT-OPERAND
	     Your function probably has too many constants or external functions.
    While in the function COMPILER:CHECK-OPERAND-RANGE  COMPILER:CHECK-OBJECT-OFFSET  SYS:CONSTANT-OPERAND
    Error occurred while compiling FORWARD-RADIX-4-FFT-256

    COMPILER:CHECK-OPERAND-RANGE:  (P.C. = 23)

3-Jul-85 21:00:48-EDT,899;000000000000 
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 25 May 85 13:49-EDT
Received: from SMOKEY by GOLDILOCKS via CHAOS with CHAOS-MAIL id 1514; Sat 25-May-85 13:48:57-EDT
Date: Saturday, 25 May 1985, 13:48-EDT
From: Scott Cyphers <sr.ehpyc at MIT-SPEECH>
Subject: Common Lisp unflavorful
To: BUG-LISPM at MIT-SPEECH
Message-ID: <850525134838.8.CYPHER@SMOKEY.MIT>

In Symbolics 3670 Release 6.0, IP-TCP 29.0, Spire-Macros 5.1,
Attribute 5.5, Compute 5.2, Audio 4.0, Speech-Attributes 4.0,
Display 6.16, Speech-Layouts 6.2, Prtout 4.0, Versatec 5.0, Spire 16.0,
ZOO 6.5, ZOO-SPIRE 2.0, microcode TMC5-IO4-FPA-MIC 319, on Lisp Machine Smokey:

For a good time, try this in Common Lisp:

(typep tv:selected-window (type-of tv:selected-window))

This makes flavors practically useless in Common Lisp if you are doing
anything that wants to check the type of an instance or its ancestors.
3-Jul-85 21:00:49-EDT,548;000000000000  
Received: from MIT-MC by MIT-OZ via Chaosnet; 26 May 85 01:20-EDT
Date: Sun, 26 May 85 01:23:55 EST
From: David Vinayak Wallace <GUMBY@MIT-MC>
Subject:  bucky-keys in SUPDUP to a lispm
To: BUG-LISPM@MIT-MC
Message-ID: <[MIT-MC].518586.850526.GUMBY>

How do I type a proceed option to the debugger when my terminal cannont
generate the full character set?  Could I have used ^_ if I had known the
proper codes?

When I connected it said "type ^_H" rather than "TOP-H" for help.  That
means it knows I can't type a full character set...
3-Jul-85 21:00:50-EDT,4532;000000000000  
Received: from MIT-JIMI by MIT-OZ via Chaosnet; 26 May 85 02:45-EDT
Date: Sun, 26 May 85 02:47 EDT
From: David Vinayak Wallace <Gumby@MIT-MC>
Subject: invalid simultanious access
To: BUG-LISPM@OZ
Message-ID: <850526024718.1.GUMBY@JIMI>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.1,
microcode TMC5-MIC 319, on Lisp Machine Jimi Hendrix:

I thought this was fixed long ago.  How do I get around it without
resetting the host unit?

>>Error: Invalid simultaneous access
         For OZ:<GUMBY>DONT.FORGET
While in the function (:METHOD FS:HOST-UNIT :COMMAND)  FS:OPEN-CHAOS  (:METHOD FS:QFILE-ACCESS-PATH :OPEN)

(:METHOD FS:HOST-UNIT :COMMAND):  (P.C. = 236)
   Arg 0 (SELF): #<HOST-UNIT 1143137>
   Arg 1 (SELF-MAPPING-TABLE): FS:HOST-UNIT
   Arg 2 (OPERATION): :COMMAND
   Arg 3 (MARK-P): NIL
   Arg 4 (STREAM-OR-HANDLE): (:CREATE "O2434")
   Local 4 (STREAM-OR-HANDLE): "O2434"
   Arg 5 (SIMPLE-P): NIL
   Arg 6 (WHOSTATE): "Open"
   Rest arg (COMMANDS): ("OPEN " :WRITE " " :CHARACTER "" "" "" "" "" "" ...)
   Local 8 (HANDLE): "O2434"
   Local 9 (STREAM): NIL
   Local 10 (PKT): #<Chaos Packet 6004254>
   Local 11 (SUCCESS): NIL
   Local 12 (STRING): "O2434 ERROR LCK F Invalid simultaneous access"
   Local 13 (TRANSACTION-ID): "T2437"
   Local 14 (CREATE-P): T
   Local 15 (CONDITION): NIL
   Local 16: T
   Local 17: #<CASE-HANDLER 120711625>
   Local 18: (#<LEXICAL-CLOSURE (:INTERNAL ** 0.) 43440054>)
   Local 19: (#<CASE-HANDLER 120711625> #<LEXICAL-CLOSURE (:INTERNAL ** 0.) 43440054>)

FS:OPEN-CHAOS:  (P.C. = 674)
   Arg 0 (ACCESS-PATH): #<TOPS20-QFILE-ACCESS-PATH OZ using QFILE 1143200>
   Arg 1 (REAL-PATHNAME): #<TOPS20-PATHNAME "OZ:<GUMBY>DONT.FORGET">
   Arg 2: #<TOPS20-PATHNAME "OZ:<GUMBY>DONT.FORGET">
   Arg 3 (OPTIONS): (:CHARACTERS T :DIRECTION :OUTPUT)

(:METHOD FS:QFILE-ACCESS-PATH :OPEN):  (P.C. = 7)
   Arg 0 (SELF): #<TOPS20-QFILE-ACCESS-PATH OZ using QFILE 1143200>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:QFILE-ACCESS-PATH -- 4. IV's, 0. FL's 121666243>
   Arg 2 (OPERATION): :OPEN
   Arg 3 (REAL-PATHNAME): #<TOPS20-PATHNAME "OZ:<GUMBY>DONT.FORGET">
   Arg 4 (PATHNAME): #<TOPS20-PATHNAME "OZ:<GUMBY>DONT.FORGET">
   Rest arg (OPTIONS): (:CHARACTERS T :DIRECTION :OUTPUT)

(:METHOD FS:ACTIVE-PATHNAME-MIXIN :OPEN):  (P.C. = 14)
   Arg 0 (SELF): #<TOPS20-PATHNAME "OZ:<GUMBY>DONT.FORGET">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:ACTIVE-PATHNAME-MIXIN -- 1. IV's, 0. FL's 105211451>
   Arg 2 (OPERATION): :OPEN
   Arg 3 (PATHNAME): #<TOPS20-PATHNAME "OZ:<GUMBY>DONT.FORGET">
   Rest arg (OPTIONS): (:CHARACTERS T :DIRECTION :OUTPUT)

FS:MACLISP-COMPATIBILITY-OPEN:  (P.C. = 365)
   Arg 0 (FILENAME): #<TOPS20-PATHNAME "OZ:<GUMBY>DONT.FORGET">
   Arg 1 (OPTIONS): (ZWEI:OUT)

OPEN:  (P.C. = 254)
   Arg 0 (PATHNAME): #<TOPS20-PATHNAME "OZ:<GUMBY>DONT.FORGET">
   Rest arg (KEYWORD-ARGS): ((ZWEI:OUT))

(:METHOD ZWEI:FILE-BUFFER-MIXIN :SAVE):  (P.C. = 46)
   Arg 0 (SELF): #<FILE-BUFFER "DONT.FORGET  OZ:" 11300242>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:FILE-BUFFER-MIXIN -- 9. IV's, 0. FL's 104512643>
   Arg 2 (OPERATION): :SAVE

ZWEI:SAVE-BUFFER:  (P.C. = 203)
   Arg 0 (BUFFER): #<FILE-BUFFER "DONT.FORGET  OZ:" 11300242>

ZWEI:COM-SAVE-FILE:  (P.C. = 14)

ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
   Arg 0 (COMMAND): ZWEI:COM-SAVE-FILE
   Arg 1 (CHAR): 339.
   Arg 2 (PREFIX-CHAR): 344.
   --Defaulted args:--
   Arg 3 (HOOK-LIST): NIL

ZWEI:MAKE-EXTENDED-COMMAND-INTERNAL:  (P.C. = 107)

Closure of ZWEI:MAKE-EXTENDED-COMMAND-INTERNAL:

ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
   Arg 0 (COMMAND): #<DTP-CLOSURE 112451571>
   Arg 1 (CHAR): 344.
   Arg 2 (PREFIX-CHAR): NIL
   Arg 3 (HOOK-LIST): NIL

ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
   Arg 0 (CH): 344.

(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 233)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 121171573>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:EDITOR -- 12. IV's, 0. FL's 142346020>
   Arg 2 (OPERATION): :EDIT
   --Defaulted args:--
   Arg 3 (TOP-LEVEL-P): T
   Arg 4 (DESCRIPTION): NIL

(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 60)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 121171573>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:TOP-LEVEL-EDITOR -- 13. IV's, 1. FL's 142345776>
   Arg 2 (.OPERATION.): :EDIT
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 51)

SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
   Arg 0 (IGNORE): NIL
3-Jul-85 21:00:51-EDT,672;000000000000   
Received: from MIT-JIMI by MIT-OZ via Chaosnet; 26 May 85 04:49-EDT
Date: Sun, 26 May 85 04:51 EDT
From: David Vinayak Wallace <Gumby@MIT-MC>
Subject: hardcopy option in system menu
To: Bug-Lispm@OZ
Message-ID: <850526045125.3.GUMBY@JIMI>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.1,
microcode TMC5-MIC 319, on Lisp Machine Jimi Hendrix:

I moused 'hardcopy" in the system menu and it popped up an empty window.
it then proceeded to log me in somewhere and to start to read a
fonts.widths file.  This took some time, during which I was quite
mystified.  Why should it need to do such a thing?

That's what I get for using the mouse, I suppose.
3-Jul-85 21:00:51-EDT,483;000000000000  
Received: from MIT-JIMI by MIT-OZ via Chaosnet; 26 May 85 04:52-EDT
Date: Sun, 26 May 85 04:54 EDT
From: David Vinayak Wallace <Gumby@MIT-MC>
Subject: the options in :Set Default hardcopy Device should be mouse-sensitive
To: BUG-LISPM@OZ
Message-ID: <850526045415.4.GUMBY@JIMI>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.1,
microcode TMC5-MIC 319, on Lisp Machine Jimi Hendrix:

seeing as I've had to move my hand away from home anyway in order to
type <help>
3-Jul-85 21:00:51-EDT,841;000000000000    
Received: from MIT-JIMI by MIT-OZ via Chaosnet; 26 May 85 04:56-EDT
Date: Sun, 26 May 85 04:57 EDT
From: David Vinayak Wallace <Gumby@MIT-MC>
Subject: notifications are slow
To: BUG-LISPM@OZ
Message-ID: <850526045751.6.GUMBY@JIMI>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.1,
microcode TMC5-MIC 319, on Lisp Machine Jimi Hendrix:

If I'm typing to some window (such as a supdup) that can only handle
notifications in a popup window, the window and the notification come up
reasonably quickly, but the message that says "type any character to
dexpose this window" or whatever it says takes a hell of a long time to
come up.  I type spaces ahead, and since nothing changes, I think
they've been lost.  what this means is that when I eventually get back
to my supdup it's got a bunch of spaces in its input buffer.
3-Jul-85 21:00:51-EDT,1512;000000000000  
Received: from MIT-REAGAN by MIT-OZ via Chaosnet; 27 May 85 11:19-EDT
Received: from SCRC-STONY-BROOK by MIT-REAGAN via INTERNET with SMTP id 5421; 27 May 85 11:19:28-EDT
Received: from NEPONSET.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 244140; Mon 27-May-85 11:17:21-EDT
Date: Mon, 27 May 85 11:20 EDT
From: David C. Plummer in disguise <DCP@SCRC-QUABBIN.ARPA>
Subject: hardcopy option in system menu
To: David Vinayak Wallace <Gumby@MIT-MC.ARPA>, Bug-Lispm@OZ.mit
In-Reply-To: <850526045125.3.GUMBY@JIMI>
Message-ID: <850527112008.1.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Sun, 26 May 85 04:51 EDT
    From: David Vinayak Wallace <Gumby@MIT-MC>

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.1,
    microcode TMC5-MIC 319, on Lisp Machine Jimi Hendrix:

    I moused 'hardcopy" in the system menu and it popped up an empty window.
    it then proceeded to log me in somewhere and to start to read a
    fonts.widths file.  This took some time, during which I was quite
    mystified.  Why should it need to do such a thing?

    That's what I get for using the mouse, I suppose.

The hardcopy system is in pretty poor shape and is actually undergoing
repair (yeah!).  It loads fonts.widths because it thinks it might need
it in case you hardcopy a press file on the default printer.  The
obvious thing to do is grab it when you actually DO hardcopy a press
file on a printer, and then it can read the fonts.widths for THAT
printer.

3-Jul-85 21:00:52-EDT,1884;000000000000
Received: from MIT-REAGAN by MIT-OZ via Chaosnet; 27 May 85 11:24-EDT
Received: from SCRC-STONY-BROOK by MIT-REAGAN via INTERNET with SMTP id 5422; 27 May 85 11:24:15-EDT
Received: from NEPONSET.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 244145; Mon 27-May-85 11:21:33-EDT
Date: Mon, 27 May 85 11:24 EDT
From: David C. Plummer in disguise <DCP@SCRC-QUABBIN.ARPA>
Subject: notifications are slow
To: David Vinayak Wallace <Gumby@MIT-MC.ARPA>, BUG-LISPM@OZ.mit
In-Reply-To: <850526045751.6.GUMBY@JIMI>
Message-ID: <850527112421.3.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Sun, 26 May 85 04:57 EDT
    From: David Vinayak Wallace <Gumby@MIT-MC>

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.1,
    microcode TMC5-MIC 319, on Lisp Machine Jimi Hendrix:

    If I'm typing to some window (such as a supdup) that can only handle
    notifications in a popup window, the window and the notification come up
    reasonably quickly, but the message that says "type any character to
    dexpose this window" or whatever it says takes a hell of a long time to
    come up.  I type spaces ahead, and since nothing changes, I think
    they've been lost.  what this means is that when I eventually get back
    to my supdup it's got a bunch of spaces in its input buffer.

This is by design.  The theory is that if you are madly typing ahead,
you don't want that typeahead (or perhaps one character) to be gobbled
by the pop-up notification so fast you don't even get to read the
pop-up.  Therefore, the whostate says "Unexpected Select."  One way out
is to press <Abort>, which it recognized specially and won't go into the
preempted input buffer.  Another thing you can try is setting
TV:UNEXPECTED-SELECT-DELAY to a value (in 60ths) that best suits you. 
The default is 180 (3 seconds).  I set it to 60 (1 second).

3-Jul-85 21:00:52-EDT,1224;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 27 May 85 11:41-EDT
Received: from SCRC-STONY-BROOK.ARPA by MIT-MC.ARPA; 27 May 85 11:42:18 EST
Received: from NEPONSET.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 244138; Mon 27-May-85 11:13:58-EDT
Date: Mon, 27 May 85 11:16 EDT
From: David C. Plummer in disguise <DCP@SCRC-QUABBIN.ARPA>
Subject: bucky-keys in SUPDUP to a lispm
To: David Vinayak Wallace <GUMBY@MIT-MC.ARPA>, BUG-LISPM@MIT-MC.ARPA
In-Reply-To: <[MIT-MC].518586.850526.GUMBY>
Message-ID: <850527111645.9.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Sun, 26 May 85 01:23:55 EST
    From: David Vinayak Wallace <GUMBY@MIT-MC>

    How do I type a proceed option to the debugger when my terminal cannont
    generate the full character set?  Could I have used ^_ if I had known the
    proper codes?

    When I connected it said "type ^_H" rather than "TOP-H" for help.  That
    means it knows I can't type a full character set...

Did you try typing ^_H??  (I'm not at an ascii terminal to try it.)  I
believe it tells you how to "type" the bucky bits, as well as Resume,
Clear Input and other (3600) keyboard strokes that don't appear on ascii
terminals.

3-Jul-85 21:00:53-EDT,1030;000000000000    
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 27 May 85 17:48-EDT
Received: from KOALA by GOLDILOCKS via CHAOS with CHAOS-MAIL id 1521; Mon 27-May-85 17:43:00-EDT
Date: Monday, 27 May 1985, 17:42-EDT
From: Niels Lauritzen <SR.LAURITZEN at MIT-SPEECH>
Subject: typeout sensitive items have wrong bounding boxes (blinkers)
To: BUG-LISPM at MIT-SPEECH
Message-ID: <850527174226.1.LAURITZEN@KOALA.MIT>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, Spire-Macros 5.1,
Attribute 5.5, Compute 5.2, Audio 4.0, Speech-Attributes 4.0,
Display 6.16, Speech-Layouts 6.2, Prtout 4.0, Versatec 5.0, Spire 16.0,
ZOO 6.6, ZOO-SPIRE 2.0, microcode TMC5-MIC 319, FEP 18, on Lisp Machine Koala:

The FED is just one example of where the typeout sensitive items don't have the
right bounding boxes (blinkers).  For example, when viewing a font each character is mouse sensitive,
but when the mouse is moved over the character, the box is way too tall, the width is o.k., but
its bottom border is at the bottom of the whole window!
3-Jul-85 21:00:53-EDT,1267;000000000000  
Received: from MIT-MC by MIT-OZ via Chaosnet; 27 May 85 19:39-EDT
Received: from SCRC-STONY-BROOK.ARPA by MIT-MC.ARPA; 27 May 85 19:37:45 EST
Received: from CONCORD.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 244247; Mon 27-May-85 19:34:32-EDT
Date: Mon, 27 May 85 19:35 EDT
From: Bernard S. Greenberg <BSG@SCRC-STONY-BROOK.ARPA>
Subject: typeout sensitive items have wrong bounding boxes (blinkers)
To: SR.LAURITZEN%MIT-SPEECH@MIT-MC.ARPA, BUG-LISPM%mit-oz@MIT-MC.ARPA
In-Reply-To: <850527174226.1.LAURITZEN@KOALA.MIT>
Message-ID: <850527193522.5.BSG@CONCORD.SCRC.Symbolics.COM>

    Date: Monday, 27 May 1985, 17:42-EDT
    From: Niels Lauritzen <SR.LAURITZEN at MIT-SPEECH>

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, Spire-Macros 5.1,

    The FED is just one example of where the typeout sensitive items don't have the
    right bounding boxes (blinkers).  For example, when viewing a font each character is mouse sensitive,
    but when the mouse is moved over the character, the box is way too tall, the width is o.k., but
    its bottom border is at the bottom of the whole window!

This is not a FED or typeout window problem; some fonts have bogus blinker
heights.  We should find and fix them all.

3-Jul-85 21:00:53-EDT,4878;000000000000 
Received: from MIT-JANIS by MIT-OZ via Chaosnet; 28 May 85 08:01-EDT
Date: Tue, 28 May 85 07:58 EDT
From: Ken Haase <KWH@OZ>
Subject: Dumping objects and request for sources.
To: BUG-LISPM@OZ
Message-ID: <850528075855.1.KWH@JANIS>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.1,
Experimental Meta Representation Langauge 4.0, microcode TMC5-MIC 319, on Lisp Machine Janis Joplin:

It seems like it should be possible to dump lexical closures, given that
they require nothing special in the way of eq-ness, and have only two
distinguishing features (their definitions and their environment).

I would hack this myself (as I did in Release 5) by extending the dumper, which is
a relatively trivial operation.  As I get my structures to dump, I suspect that I will
be running into a lot of difficulties like these, and would appreciate having a copy of
the fasdumping sources to look at.  If you wish, I will even mail my patches back to you
so that they can be included in future releases.  

The lack of these sources is now seriously interrupting my research,
since I can't very well save intermediate state of my program unless I
can dump it out without entering the debugger.  Thus, I'd greatly
appreciate getting these sources.

>>Error: Cannot dump object #<LEXICAL-CLOSURE (LAMBDA ** **) 5331560>
While in the function SI:DUMP-OBJECT  SI:DUMP-LIST  SI:DUMP-OBJECT

SI:DUMP-OBJECT:  (P.C. = 241)
   Arg 0 (OBJECT): #<LEXICAL-CLOSURE (LAMBDA ** **) 5331560>
   Arg 1 (STREAM): #<NFILE-OUTPUT-WIDE-BINARY-STREAM "MRL: TOP; DUMP.BIN.NEWEST" 30440326>
   Local 2 (INDEX): NIL

SI:DUMP-LIST:  (P.C. = 116)
   Arg 0 (LIST): (CITATION #<LEXICAL-CLOSURE ** 5331560> #>GENERATOR #>FUNCTION-CALL
                  *5/28/85 06:26:55*)
   Arg 1 (STREAM): #<NFILE-OUTPUT-WIDE-BINARY-STREAM "MRL: TOP; DUMP.BIN.NEWEST" 30440326>

SI:DUMP-OBJECT:  (P.C. = 144)
   Arg 0 (OBJECT): (CITATION #<LEXICAL-CLOSURE ** 5331560> #>GENERATOR #>FUNCTION-CALL
                    *5/28/85 06:26:55*)
   Arg 1 (STREAM): #<NFILE-OUTPUT-WIDE-BINARY-STREAM "MRL: TOP; DUMP.BIN.NEWEST" 30440326>

SI:DUMP-LIST:  (P.C. = 116)
   Arg 0 (LIST): '(CITATION #<LEXICAL-CLOSURE ** 5331560> #>GENERATOR #>FUNCTION-CALL
                   *5/28/85 06:26:55*)
   Arg 1 (STREAM): #<NFILE-OUTPUT-WIDE-BINARY-STREAM "MRL: TOP; DUMP.BIN.NEWEST" 30440326>

SI:DUMP-OBJECT:  (P.C. = 144)
   Arg 0 (OBJECT): '(CITATION #<LEXICAL-CLOSURE ** 5331560> #>GENERATOR #>FUNCTION-CALL
                     *5/28/85 06:26:55*)
   Arg 1 (STREAM): #<NFILE-OUTPUT-WIDE-BINARY-STREAM "MRL: TOP; DUMP.BIN.NEWEST" 30440326>

SI:DUMP-LIST:  (P.C. = 116)
   Arg 0 (LIST): (REFERENCE-DATOB '(CITATION #<LEXICAL-CLOSURE ** 5331560> #>GENERATOR
                                    #>FUNCTION-CALL *5/28/85 06:26:55*))
   Arg 1 (STREAM): #<NFILE-OUTPUT-WIDE-BINARY-STREAM "MRL: TOP; DUMP.BIN.NEWEST" 30440326>

SI:DUMP-OBJECT:  (P.C. = 144)
   Arg 0 (OBJECT): (REFERENCE-DATOB '(CITATION #<LEXICAL-CLOSURE ** 5331560> #>GENERATOR
                                      #>FUNCTION-CALL *5/28/85 06:26:55*))
   Arg 1 (STREAM): #<NFILE-OUTPUT-WIDE-BINARY-STREAM "MRL: TOP; DUMP.BIN.NEWEST" 30440326>

SI:DUMP-FORM-TO-EVAL:  (P.C. = 321)
   Arg 0 (FORM): (REFERENCE-DATOB '(CITATION #<LEXICAL-CLOSURE ** 5331560> #>GENERATOR
                                    #>FUNCTION-CALL *5/28/85 06:26:55*))
   Arg 1 (STREAM): #<NFILE-OUTPUT-WIDE-BINARY-STREAM "MRL: TOP; DUMP.BIN.NEWEST" 30440326>

Rest of stack:
SI:DUMP-INSTANCE:  (P.C. = 13)
SI:DUMP-OBJECT:  (P.C. = 202)
SI:DUMP-LIST:  (P.C. = 116)
SI:DUMP-OBJECT:  (P.C. = 144)
SI:DUMP-FORM-TO-EVAL:  (P.C. = 321)
SYS:DUMP-FORMS-TO-FILE:  (P.C. = 61)
DUMP-WORLD:  (P.C. = 32)  (from B:>kwh>mrl>active>datob)
SI:*EVAL:  (P.C. = 403)
TOOLS:EVAL-INSTANCE:  (P.C. = 27)  (from B:>lmlib>tools)
(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0):  (P.C. = 152)
TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
SI:BREAK-INTERNAL:  (P.C. = 176)
PROCESS-WAIT:  (P.C. = 1)
TV:KBD-IO-BUFFER-INPUT-WAIT:  (P.C. = 34)
(:METHOD TV:STREAM-MIXIN :INPUT-WAIT):  (P.C. = 23)
(:INTERNAL (:METHOD ZWEI:ZWEI-WITH-TYPEOUT :COMBINED :INPUT-WAIT) 0):  (P.C. = 11)
(:METHOD SI:INTERACTIVE-STREAM :WHOPPER :INPUT-WAIT):  (P.C. = 25)
(:METHOD ZWEI:ZWEI-WITH-TYPEOUT :COMBINED :INPUT-WAIT):  (P.C. = 13)
(:INTERNAL ZWEI:RECORDING-STREAM 2 (:INPUT-WAIT)):  (P.C. = 12)
ZWEI:RECORDING-STREAM:  (P.C. = 32)
Closure of ZWEI:RECORDING-STREAM:
(:INTERNAL ZWEI:MACRO-STREAM-IO 3 (:INPUT-WAIT)):  (P.C. = 11)
ZWEI:MACRO-STREAM-IO:  (P.C. = 52)
Closure of ZWEI:MACRO-STREAM-IO:
ZWEI:EDITOR-INPUT:  (P.C. = 104)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 173)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 60)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 51)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
3-Jul-85 21:00:53-EDT,3277;000000000000  
Received: from MIT-REAGAN by MIT-OZ via Chaosnet; 28 May 85 13:42-EDT
Received: from SCRC-STONY-BROOK by MIT-REAGAN via INTERNET with SMTP id 5427; 28 May 85 13:41:25-EDT
Received: from NEPONSET.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 244667; Tue 28-May-85 13:38:13-EDT
Date: Tue, 28 May 85 13:40 EDT
From: David C. Plummer in disguise <DCP@SCRC-QUABBIN.ARPA>
Subject: Dumping objects and request for sources.
To: Ken Haase <KWH@OZ.mit>, BUG-LISPM@OZ.mit
In-Reply-To: <850528075855.1.KWH@JANIS>
Message-ID: <850528134029.2.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Tue, 28 May 85 07:58 EDT
    From: Ken Haase <KWH@OZ>

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.1,
    Experimental Meta Representation Langauge 4.0, microcode TMC5-MIC 319, on Lisp Machine Janis Joplin:

I've forwarded your request for sources to the appropriate people.

    It seems like it should be possible to dump lexical closures, given that
    they require nothing special in the way of eq-ness, and have only two
    distinguishing features (their definitions and their environment).

This was brought up a while back, I forget by whom (DEG?).  It is not
possible in general to dump lexical closures.  Specifically, it is quite
definitely not possible to dump a stack closure, since the environment
surely won't exist when it is reloaded.  EQ-ness is VERY important if
more than one closure is side effecting variables shared by the same
environment.  This may not be a problem in your application.  EQ-ness of
functions should also be preserved.  This probably isn't hard for either
interpreted or compiled functions.  However, what happens in the
compiled function case?  Do you dump the compiled function afresh?  Our
current theory is that you don't.  Instead, you dump a description of
the compiled function, which not only includes its name but a
description of the environment.  When it is loaded, the function must
already exist and it must have the same environment description as
required by the loader.

If you get the sources, I suggest you get your application to work,
unless of course you want to tackle the general problem.

    I would hack this myself (as I did in Release 5) by extending the dumper, which is
    a relatively trivial operation.  As I get my structures to dump, I suspect that I will
    be running into a lot of difficulties like these, and would appreciate having a copy of
    the fasdumping sources to look at.  If you wish, I will even mail my patches back to you
    so that they can be included in future releases.  

    The lack of these sources is now seriously interrupting my research,
    since I can't very well save intermediate state of my program unless I
    can dump it out without entering the debugger.  Thus, I'd greatly
    appreciate getting these sources.

    >>Error: Cannot dump object #<LEXICAL-CLOSURE (LAMBDA ** **) 5331560>
    While in the function SI:DUMP-OBJECT  SI:DUMP-LIST  SI:DUMP-OBJECT

    SI:DUMP-OBJECT:  (P.C. = 241)
       Arg 0 (OBJECT): #<LEXICAL-CLOSURE (LAMBDA ** **) 5331560>
       Arg 1 (STREAM): #<NFILE-OUTPUT-WIDE-BINARY-STREAM "MRL: TOP; DUMP.BIN.NEWEST" 30440326>
       Local 2 (INDEX): NIL


3-Jul-85 21:00:54-EDT,1189;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 28 May 85 20:15-EDT
Received: from HARLEM.SCRC.Symbolics.COM by MIT-MC.ARPA 28 May 85 20:14:05 EST
Date: Tue, 28 May 85 20:12 EDT
From: Joseph R Goldstone <joseph@SCRC-QUABBIN.ARPA>
Subject: the options in :Set Default hardcopy Device should be mouse-sensitive
To: David Vinayak Wallace <Gumby@MIT-MC.ARPA>, BUG-LISPM%OZ@MIT-MC.ARPA,
    release-6@SCRC-QUABBIN.ARPA
In-Reply-To: <850526045415.4.GUMBY@JIMI>
Message-ID: <850528201228.7.JOSEPH@HARLEM.SCRC.Symbolics.COM>

    Date: Sun, 26 May 85 04:54 EDT
    From: David Vinayak Wallace <Gumby@MIT-MC>

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.1,
    microcode TMC5-MIC 319, on Lisp Machine Jimi Hendrix:

    seeing as I've had to move my hand away from home anyway in order to
    type <help>

Probably true.  However, I don't think this is one of our officially provided
commands.  I suggest you figure out where it came from and ask the author or
authoress to add mouse-sensitivity.

If I knew where it came from, and saw the code, I could comment better on
adding this (needed) functionality to the system.

[Chemquasabamticook?  Gesundheit!]

3-Jul-85 21:00:54-EDT,1823;000000000000 
Mail-From: CJL created at 28-May-85 21:51:43
Date: Tue, 28 May 1985  21:51 EDT
Message-ID: <CJL.12114743151.BABYL@MIT-OZ>
From: Chris Lindblad <CJL@MIT-OZ>
To:   Joseph R Goldstone <joseph@SCRC-QUABBIN.ARPA>
Cc:   BUG-LISPM@MIT-OZ, David Vinayak Wallace <Gumby@MIT-MC.ARPA>,
      release-6@SCRC-QUABBIN.ARPA
Subject: the options in :Set Default hardcopy Device should be mouse-sensitive
In-reply-to: Msg of 28 May 1985  20:12-EDT from Joseph R Goldstone <joseph at SCRC-QUABBIN.ARPA>

    Date: Tuesday, 28 May 1985  20:12-EDT
    From: Joseph R Goldstone <joseph at SCRC-QUABBIN.ARPA>

        Date: Sun, 26 May 85 04:54 EDT
        From: David Vinayak Wallace <Gumby@MIT-MC>

        In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.1,
        microcode TMC5-MIC 319, on Lisp Machine Jimi Hendrix:

        seeing as I've had to move my hand away from home anyway in order to
        type <help>

    Probably true.  However, I don't think this is one of our officially provided
    commands.  I suggest you figure out where it came from and ask the author or
    authoress to add mouse-sensitivity.

    If I knew where it came from, and saw the code, I could comment better on
    adding this (needed) functionality to the system.

The functionality needed is for the printer cp type to make mouse
sensitive the printers listed currently with a call to
cp-possibilities-help. Looks hard to me. Other namespace objects like
network & namespace should have cp-types that act similarly.


;;; From reagan:>aisite>hardcopy.lisp

(define-cp-command (com-set-default-hardcopy-device :comtab "USER")
		   ((printer :printer
			     :default si:*default-hardcopy-device*
			     :prompt "to"
			     ))
  (when printer
    (si:set-default-hardcopy-device printer))
  (values))
3-Jul-85 21:00:54-EDT,1669;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 29 May 85 11:17-EDT
Received: from SCRC-STONY-BROOK.ARPA by MIT-MC.ARPA 29 May 85 11:13:31 EST
Received: from MOBILE.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 245314; Wed 29-May-85 11:10:26-EDT
Date: Wed, 29 May 85 11:10 EDT
From: David E. Goldfarb <DEG@SCRC-QUABBIN.ARPA>
Subject: the options in :Set Default hardcopy Device should be mouse-sensitive
To: CJL%MIT-OZ@MIT-MC.ARPA, joseph@SCRC-QUABBIN.ARPA
cc: BUG-LISPM%MIT-OZ@MIT-MC.ARPA, Gumby@MIT-MC.ARPA,
    release-6@SCRC-QUABBIN.ARPA, DEG@SCRC-QUABBIN.ARPA
In-Reply-To: <CJL.12114743151.BABYL@MIT-OZ>
Message-ID: <850529111055.1.DEG@MOBILE.SCRC.Symbolics.COM>

    Date: Tue, 28 May 1985  21:51 EDT
    From: Chris Lindblad <CJL%MIT-OZ@MIT-MC.ARPA>

    The functionality needed is for the printer cp type to make mouse
    sensitive the printers listed currently with a call to
    cp-possibilities-help. Looks hard to me. Other namespace objects like
    network & namespace should have cp-types that act similarly.

Would you believe that the CP already does that automatically?  The problem
is that it only works in windows that happen to support mouse sensitive
items.  Try it in a Zmacs typeout window, for example.  Someday, all windows
will truly be equal; until then the CP cannot do any better.

    ;;; From reagan:>aisite>hardcopy.lisp

    (define-cp-command (com-set-default-hardcopy-device :comtab "USER")
		       ((printer :printer
				 :default si:*default-hardcopy-device*
				 :prompt "to"
				 ))
      (when printer
	(si:set-default-hardcopy-device printer))
      (values))


3-Jul-85 21:00:54-EDT,2144;000000000000
Received: from MIT-REAGAN by MIT-OZ via Chaosnet; 29 May 85 15:50-EDT
Received: from SCRC-STONY-BROOK by MIT-REAGAN via INTERNET with SMTP id 5438; 29 May 85 15:49:41-EDT
Received: from WESER.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 245547; Wed 29-May-85 15:47:15-EDT
Date: Wed, 29 May 85 15:49 EDT
From: Kalman Reti <Reti@SCRC-STONY-BROOK.ARPA>
Subject: notifications are slow
To: DCP@SCRC-QUABBIN.ARPA
cc: Gumby@MIT-MC.ARPA, BUG-LISPM@OZ.mit
In-Reply-To: <850527112421.3.NFEP@NEPONSET.SCRC.Symbolics.COM>
Message-ID: <850529154958.5.RETI@WESER.SCRC.Symbolics.COM>

    Date: Mon, 27 May 85 11:24 EDT
    From: David C. Plummer in disguise <DCP@SCRC-QUABBIN.ARPA>

	Date: Sun, 26 May 85 04:57 EDT
	From: David Vinayak Wallace <Gumby@MIT-MC>

	In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.1,
	microcode TMC5-MIC 319, on Lisp Machine Jimi Hendrix:

	If I'm typing to some window (such as a supdup) that can only handle
	notifications in a popup window, the window and the notification come up
	reasonably quickly, but the message that says "type any character to
	dexpose this window" or whatever it says takes a hell of a long time to
	come up.  I type spaces ahead, and since nothing changes, I think
	they've been lost.  what this means is that when I eventually get back
	to my supdup it's got a bunch of spaces in its input buffer.

    This is by design.  The theory is that if you are madly typing ahead,
    you don't want that typeahead (or perhaps one character) to be gobbled
    by the pop-up notification so fast you don't even get to read the
    pop-up.  Therefore, the whostate says "Unexpected Select."  One way out
    is to press <Abort>, which it recognized specially and won't go into the
    preempted input buffer.  Another thing you can try is setting
    TV:UNEXPECTED-SELECT-DELAY to a value (in 60ths) that best suits you. 
    The default is 180 (3 seconds).  I set it to 60 (1 second).


You can also set this to NIL.  Then you MUST type abort to make the pop-up window
go away; however, typeahead always goes to the original window.

3-Jul-85 21:00:55-EDT,1556;000000000000   
Received: from MIT-APIARY-4 by MIT-OZ via Chaosnet; 29 May 85 17:01-EDT
Date: Wed, 29 May 85 16:59 EDT
From: Henry Lieberman <Henry@OZ>
Subject: Can you still write Lisp in Lisp?
To: BUG-LISPM@OZ
Message-ID: <850529165907.1.HENRY@APIARY-4>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.1,
microcode TMC5-MIC 319, FEP 18, on Lisp Machine Apiary-4:

Now that lexical scoping requires environments for expanding macros and 
handling special forms, is there any function to access the current "lexical
environment"?  It would be nice to consider environments as first-class objects,
so the user could examine and construct them.  

What I'm trying to do is write a special interpreter for Lisp code that 
does some special stuff, but wants to basically just "do what Lisp does" on 
special forms it doesn't specifically handle.  In the old dynamic scoping
regime, it worked OK in most cases just to APPLY the special form to its
arguments, which is now disallowed.  I want to avoid writing handlers for each
special form, as there are 216 of them in the system.  I'm at a loss as to how to
fix it.   With the new lexical scoping, is it still possible for the user to
write a Lisp interpreter in Lisp?  

A small point: The way the interpreter now designates special forms and macros is
different from Rel 5 [lists starting with SPECIAL in the function cell]
and appears nowhere I could find in the documentation.  It wasn't hard to dig
it out of the source for EVAL, but it should appear in the documentation
somewhere. 

3-Jul-85 21:00:55-EDT,3150;000000000000    
Received: from MIT-REAGAN by MIT-OZ via Chaosnet; 30 May 85 12:05-EDT
Received: from SCRC-STONY-BROOK by MIT-REAGAN via INTERNET with SMTP id 5445; 30 May 85 12:05:54-EDT
Received: from NEPONSET.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 246098; Thu 30-May-85 12:02:59-EDT
Date: Thu, 30 May 85 12:05 EDT
From: David C. Plummer in disguise <DCP@SCRC-QUABBIN.ARPA>
Subject: Can you still write Lisp in Lisp?
To: Henry Lieberman <Henry@OZ.mit>, BUG-LISPM@OZ.mit
In-Reply-To: <850529165907.1.HENRY@APIARY-4>
Message-ID: <850530120547.0.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Wed, 29 May 85 16:59 EDT
    From: Henry Lieberman <Henry@OZ>

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.1,
    microcode TMC5-MIC 319, FEP 18, on Lisp Machine Apiary-4:

    Now that lexical scoping requires environments for expanding macros and 
    handling special forms, is there any function to access the current "lexical
    environment"?  It would be nice to consider environments as first-class objects,
    so the user could examine and construct them.  

In normal operation, users should never have to know what environments
look like, for either viewing or modification.  Instead, macros and
special forms accept an environment (via the &ENVIRONMENT keyword in the
arglist) and pass this environment to EVAL as necessary).  I think you
will agree this is the normal case.

We aren't currently prepared to handle your case of a Lisp-like
interpreter that resorts to Lisp.

    What I'm trying to do is write a special interpreter for Lisp code that 
    does some special stuff, but wants to basically just "do what Lisp does" on 
    special forms it doesn't specifically handle.  In the old dynamic scoping
    regime, it worked OK in most cases just to APPLY the special form to its
    arguments, which is now disallowed.  I want to avoid writing handlers for each
    special form, as there are 216 of them in the system.  I'm at a loss as to how to
    fix it.   With the new lexical scoping, is it still possible for the user to
    write a Lisp interpreter in Lisp?  

Yes, it is, but you have to know how to create or modify environments.
You can probably figure most of it out by studying the sources for the
current special forms.  (Your message implies you have the sources.)

    A small point: The way the interpreter now designates special forms and macros is
    different from Rel 5 [lists starting with SPECIAL in the function cell]
    and appears nowhere I could find in the documentation.  It wasn't hard to dig
    it out of the source for EVAL, but it should appear in the documentation
    somewhere. 

Was the old format documented before?  The appropriate predicates are
	(functionp #'eval) => T
	(functionp #'if) => NIL
	(si:macro-function #'eval) => NIL
	(si:macro-function #'if) => SI:EXPAND-IF
	(si:special-form-p #'eval) => NIL
	(si:special-form-p #'if) => #<DTP-COMPILED-FUNCTION IF 2167510>
The new format satisfies the Common Lisp requirement that macros may be
implemented as special forms for speed in the interpreter.

3-Jul-85 21:00:55-EDT,508;000000000000  
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 30 May 85 13:26-EDT
Date: 30 May 1985  13:25 EDT (Thu)
Message-ID: <SR.EHPYC.12115175260.BABYL@MIT-SPEECH>
From: Scott Cyphers <SR.EHPYC@MIT-SPEECH>
To:   bug-lispm@oz
Subject: Hardcopy

Aren't hardcopies of files (particularly for the LGP) supposed to do
the right thing with fonts, since they're listed in the attribute list
for the file, or at least drop out the font change information so you
don't end up with epsilons all over the printout.
3-Jul-85 21:00:55-EDT,7419;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 30 May 85 14:44-EDT
Received: from [128.11.6.2] by MIT-MC.ARPA 30 May 85 14:43:28 EST
Date: Thu, 30 May 85 14:42 EDT
From: Richard Shu <rshu@[192.1.2.67]>
Subject: Using &allow-other-keys with &rest &key
To: BUG-LISPM@MIT-MC.ARPA
Message-ID: <850530144222.3.RSHU@CONGER.arpa>

In Symbolics 3670 Release 6.0, IP-TCP 29.0, BBN 20.1,
Experimental COLOR 135.1, Experimental VINT2-MAP 83.0,
microcode TMC5-IO4-MIC 319, FEP 22, on Conger:

I have defun'ed route-vis as follows

(defun route-vis (&rest rte-vis-options
 
		  &key  (foe-route             NIL foe-route-supplied)
		        (friend-route          NIL friend-route-supplied)
		        (time-interval         .15)
		  &allow-other-keys

		  &aux  (collect-points        NIL)
		        (invisibility-analysis NIL)
			
			(scouting-radius       4))

"Compute intervisibility of route1 and route2 -- animated by moving tanks"

  (if (and (not foe-route-supplied) (boundp '*route1*))
      (setq foe-route *route1*)
  ) ; end if

  (if (and (not friend-route-supplied) (boundp '*route2*))
      (setq friend-route *route2*)
  ) ; end if

  (cond-every ((member :collect-points        rte-vis-options) (setq collect-points T))
	      ((member :invisibility-analysis rte-vis-options) (setq invisibility-analysis T))
  ) ; end cond-every

;  (dbgprt "ROUTE-VIS: collect-points ~A~%" collect-points)
;  (dbgprt "ROUTE-VIS: invisibility-analysis ~A~%" invisibility-analysis)

...... (rest of function definition)

      
When I evaluate "(route-vis :invisibility-analysis)", I get:


>>Error: The value after the keyword :INVISIBILITY-ANALYSIS is missing.
While in the function SI:APPLY-LAMBDA-INTERNAL  SI:APPLY-LAMBDA  SYS:CALL-FUNNY-FUNCTION

SI:APPLY-LAMBDA-INTERNAL:  (P.C. = 323)
   Arg 0 (BINDINGS): (&REST RTE-VIS-OPTIONS &KEY (:FOE-ROUTE FOE-ROUTE NIL FOE-ROUTE-SUPPLIED) (:FRIEND-ROUTE FRIEND-ROUTE NIL FRIEND-ROUTE-SUPPLIED) (:TIME-INTERVAL TIME-INTERVAL 0.15) &AUX (NIL . COLLECT-POINTS) (NIL . INVISIBILITY-ANALYSIS) (4 . SCOUTING-RADIUS))
   Local 0 (BINDINGS): ((:FOE-ROUTE FOE-ROUTE NIL FOE-ROUTE-SUPPLIED) (:FRIEND-ROUTE FRIEND-ROUTE NIL FRIEND-ROUTE-SUPPLIED) (:TIME-INTERVAL TIME-INTERVAL 0.15) &AUX (NIL . COLLECT-POINTS) (NIL . INVISIBILITY-ANALYSIS) (4 . SCOUTING-RADIUS))
   Arg 1 (ARGUMENTS): (:INVISIBILITY-ANALYSIS)
   Arg 2 (ENV): (((RTE-VIS-OPTIONS (:INVISIBILITY-ANALYSIS))) NIL NIL NIL NIL NIL NIL)
   Arg 3 (ARGS-INFO): 327680
   Arg 4 (LAMBDA-INFO): 1033
   Arg 5 (BODY): ((IF (AND (NOT FOE-ROUTE-SUPPLIED) (BOUNDP **)) (SETQ FOE-ROUTE *ROUTE1*)) (IF (AND (NOT FRIEND-ROUTE-SUPPLIED) (BOUNDP **)) (SETQ FRIEND-ROUTE *ROUTE2*)) (COND-EVERY ((MEMBER :COLLECT-POINTS RTE-VIS-OPTIONS) (SETQ COLLECT-POINTS T)) ((MEMBER :INVISIBILITY-ANALYSIS RTE-VIS-OPTIONS) (SETQ INVISIBILITY-ANALYSIS T))) (IF (AND FOE-ROUTE FRIEND-ROUTE) (LET* (** ** ** ** VISIBLE VISIBLE-FROM-PREV VISIBLE-FROM-NEXT) (SETQ *POINTS-DRAWN* NIL) (LOOP FOR TO-PT IN TIMED-FRIEND-ROUTE AND FOR FROM-PT IN TIMED-FOE-ROUTE ...))))
   Local 6 (N): 0
   Local 7 (TEM): &KEY
   Local 8 (BP): (NIL (RTE-VIS-OPTIONS (:INVISIBILITY-ANALYSIS)))
   Local 9 (VAR): RTE-VIS-OPTIONS
   Local 10 (VAL): NIL
   Local 11 (L): NIL

SI:APPLY-LAMBDA:  (P.C. = 306)
   Arg 0 (FUNCTION): (SI:DIGESTED-LAMBDA (LAMBDA (&REST RTE-VIS-OPTIONS &KEY (FOE-ROUTE NIL FOE-ROUTE-SUPPLIED) (FRIEND-ROUTE NIL FRIEND-ROUTE-SUPPLIED) (TIME-INTERVAL 0.15) &ALLOW-OTHER-KEYS &AUX (COLLECT-POINTS NIL) (INVISIBILITY-ANALYSIS NIL) ...) "Compute intervisibility of route1 and route2 -- animated by moving tanks" (IF (AND ** **) (SETQ FOE-ROUTE *ROUTE1*)) (IF (AND ** **) (SETQ FRIEND-ROUTE *ROUTE2*)) (COND-EVERY (** **) (** **)) (IF (AND FOE-ROUTE FRIEND-ROUTE) (LET* ** ** **))) (ROUTE-VIS (:DOCUMENTATION "Compute intervisibility of route1 and route2 -- animated by moving tanks")) 1033 327680 NIL (&REST RTE-VIS-OPTIONS &KEY (:FOE-ROUTE FOE-ROUTE NIL FOE-ROUTE-SUPPLIED) (:FRIEND-ROUTE FRIEND-ROUTE NIL FRIEND-ROUTE-SUPPLIED) (:TIME-INTERVAL TIME-INTERVAL 0.15) &AUX (NIL . COLLECT-POINTS) (NIL . INVISIBILITY-ANALYSIS) (4 . SCOUTING-RADIUS)) NIL (IF (AND (NOT FOE-ROUTE-SUPPLIED) (BOUNDP **)) (SETQ FOE-ROUTE *ROUTE1*)) (IF (AND (NOT FRIEND-ROUTE-SUPPLIED) (BOUNDP **)) (SETQ FRIEND-ROUTE *ROUTE2*)) ...)
   Arg 1 (ARGUMENTS): (:INVISIBILITY-ANALYSIS)

SYS:CALL-FUNNY-FUNCTION:  (P.C. = 102)
   Arg 0 (FUNCTION): (SI:DIGESTED-LAMBDA (LAMBDA (&REST RTE-VIS-OPTIONS &KEY (FOE-ROUTE NIL FOE-ROUTE-SUPPLIED) (FRIEND-ROUTE NIL FRIEND-ROUTE-SUPPLIED) (TIME-INTERVAL 0.15) &ALLOW-OTHER-KEYS &AUX (COLLECT-POINTS NIL) (INVISIBILITY-ANALYSIS NIL) ...) "Compute intervisibility of route1 and route2 -- animated by moving tanks" (IF (AND ** **) (SETQ FOE-ROUTE *ROUTE1*)) (IF (AND ** **) (SETQ FRIEND-ROUTE *ROUTE2*)) (COND-EVERY (** **) (** **)) (IF (AND FOE-ROUTE FRIEND-ROUTE) (LET* ** ** **))) (ROUTE-VIS (:DOCUMENTATION "Compute intervisibility of route1 and route2 -- animated by moving tanks")) 1033 327680 NIL (&REST RTE-VIS-OPTIONS &KEY (:FOE-ROUTE FOE-ROUTE NIL FOE-ROUTE-SUPPLIED) (:FRIEND-ROUTE FRIEND-ROUTE NIL FRIEND-ROUTE-SUPPLIED) (:TIME-INTERVAL TIME-INTERVAL 0.15) &AUX (NIL . COLLECT-POINTS) (NIL . INVISIBILITY-ANALYSIS) (4 . SCOUTING-RADIUS)) NIL (IF (AND (NOT FOE-ROUTE-SUPPLIED) (BOUNDP **)) (SETQ FOE-ROUTE *ROUTE1*)) (IF (AND (NOT FRIEND-ROUTE-SUPPLIED) (BOUNDP **)) (SETQ FRIEND-ROUTE *ROUTE2*)) ...)
   Rest arg (ARGS): (:INVISIBILITY-ANALYSIS)

ROUTE-VIS:  (from NARWHAL:>vint2>route)
   Rest arg (RTE-VIS-OPTIONS): (:INVISIBILITY-ANALYSIS)

(:METHOD GRAPHIC-KERNEL :DISPLAY-INTERVISIBILITY):  (P.C. = 5)  (from VINT2: VINT2; INTERFACE)
   Arg 0 (SELF): #<GRAPHIC-KERNEL 5100024>
   Arg 1 (SELF-MAPPING-TABLE): GRAPHIC-KERNEL
   Arg 2 (OPERATION): :DISPLAY-INTERVISIBILITY

DO-FULL-SCENARIO:  (P.C. = 306)  (from VINT2: VINT2; INTERFACE)
   Rest arg (SCENARIO-OPTIONS): (:FAST-DEMO :DEBUGGING-ENABLED :TEST-INVISIBILITY)

SI:*EVAL:  (P.C. = 403)
   Arg 0 (FORM): (DO-FULL-SCENARIO :FAST-DEMO :DEBUGGING-ENABLED :TEST-INVISIBILITY)
   Local 0 (FORM): NIL
   --Defaulted args:--
   Arg 1 (ENV): NIL
   Arg 2 (HOOK): NIL

(:METHOD TV:MENU-EXECUTE-MIXIN :EXECUTE):  (P.C. = 53)
   Arg 0 (SELF): #<DYNAMIC-MOMENTARY-MENU Dynamic Momentary Menu 3 6641232 deactivated>
   Arg 1 (SELF-MAPPING-TABLE): TV:MENU-EXECUTE-MIXIN
   Arg 2 (OPERATION): :EXECUTE
   Arg 3 (ITEM): ("Debug Demonstration" :EVAL (DO-FULL-SCENARIO :FAST-DEMO :DEBUGGING-ENABLED :TEST-INVISIBILITY) :DOCUMENTATION "Debug Ambush Scenario")

Rest of stack:
(:METHOD TV:MOMENTARY-MENU :COMBINED :EXECUTE):  (P.C. = 20)
(:METHOD TV:BASIC-MENU :CHOOSE):  (P.C. = 26)
(:METHOD TV:DYNAMIC-MOMENTARY-MENU :COMBINED :CHOOSE):  (P.C. = 33)
SYSTEM-MENU:  (P.C. = 4)  (from VINT2: VINT2; SYSTEM-MENU)
SI:*EVAL:  (P.C. = 403)
(:METHOD TV:MENU-EXECUTE-MIXIN :EXECUTE):  (P.C. = 53)
(:METHOD TV:MOMENTARY-MENU :COMBINED :EXECUTE):  (P.C. = 20)
(:METHOD TV:BASIC-MENU :CHOOSE):  (P.C. = 26)
(:METHOD TV:DYNAMIC-MOMENTARY-MENU :COMBINED :CHOOSE):  (P.C. = 33)
MENU:  (P.C. = 66)  (from VINT2: VINT2; USER-MENU)
SI:*EVAL:  (P.C. = 403)
(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0):  (P.C. = 152)
TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
SI:LISP-COMMAND-LOOP:  (P.C. = 67)
SI:LISP-TOP-LEVEL1:  (P.C. = 5)
SI:LISP-TOP-LEVEL:  (P.C. = 7)

3-Jul-85 21:00:56-EDT,2505;000000000000    
Received: from MIT-REAGAN by MIT-OZ via Chaosnet; 30 May 85 15:16-EDT
Received: from SCRC-STONY-BROOK by MIT-REAGAN via INTERNET with SMTP id 5462; 30 May 85 15:16:36-EDT
Received: from NEPONSET.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 246268; Thu 30-May-85 15:13:34-EDT
Date: Thu, 30 May 85 15:16 EDT
From: David C. Plummer in disguise <DCP@SCRC-QUABBIN.ARPA>
Subject: Supdup graphics
To: Charles Hornig <Hornig@SCRC-STONY-BROOK.ARPA>,
    Alan Bawden <Alan@MC.MIT>, BUG-LISPM@OZ.MIT
In-Reply-To: <850411121857.5.HORNIG@PEACE.SCRC.Symbolics.COM>
References: <850409110255.1.ALAN@MOON.MIT>,
            <850411121857.5.HORNIG@PEACE.SCRC.Symbolics.COM>,
            <850411121857.5.HORNIG@PEACE.SCRC.Symbolics.COM>,
            <850411130822.8.HORNIG@PEACE.SCRC.Symbolics.COM>
Message-ID: <850530151624.9.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Thu, 11 Apr 85 12:18 EST
    From: Charles Hornig <Hornig@STONY-BROOK.SCRC.Symbolics.COM>

	Date: Tuesday, 9 April 1985, 11:02-EST
	From: Alan Bawden <Alan at MIT-MC>

	In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.9,
	microcode TMC5-MIC 319, on Lisp Machine Keith Moon:

	I was running DPRESS on MC on the file AR:.;THESIS PRESS (ITS hackers
	can guess why I was doing that!)  I was just N'ing through the file
	when:

	>>Error: The object #<SUPDUP-GRAPHICS-STATE 30510141> received a NIL message, which went unclaimed.
		 The rest of the message was (36)
	While in the function (:METHOD TELNET:SUPDUP-GRAPHICS-STATE :GRAPHICS-PUSH)  (:METHOD TELNET:SUPDUP-GRAPHICS-STATE :SUPDUP-GRAPHICS)  (:METHOD TELNET:SUPDUP-STATE-BLOCK :SUPDUP-GRAPHICS)

    I believe that I have fixed this problem in the source of the
    development system.  The needed change is (in SYS:NETWORK;TELNET):

Migrated to 6.1 (271.71).

    TELNET:
    (DEFMETHOD (SUPDUP-GRAPHICS-STATE :GRAPHICS-PUSH) (IGNORE)
      (LET-GLOBALLY ((GRAPHICS-XPOS GRAPHICS-XPOS)
		     (GRAPHICS-YPOS GRAPHICS-YPOS)
		     (GRAPHICS-RIGHT GRAPHICS-RIGHT)
		     (GRAPHICS-LEFT GRAPHICS-LEFT)
		     (GRAPHICS-TOP GRAPHICS-TOP)
		     (GRAPHICS-BOTTOM GRAPHICS-BOTTOM)
		     (GRAPHICS-XOR-MODE GRAPHICS-XOR-MODE)
		     (GRAPHICS-VIRTUAL-MODE GRAPHICS-VIRTUAL-MODE))
	(DO (CH) (())
	  (SETQ CH (SEND SELF ':GRAPHICS-NETI))
	  (LET ((COMMAND (IF (BIT-TEST CH #O100)
			     (AREF *DRAW-DISPATCH* (LOGAND CH #O017))
			     (AREF *GRAPHICS-DISPATCH* CH))))
	    (WHEN COMMAND (SEND SELF COMMAND CH))))))

3-Jul-85 21:00:56-EDT,2050;000000000000    
Received: from MIT-REAGAN by MIT-OZ via Chaosnet; 30 May 85 16:24-EDT
Received: from SCRC-STONY-BROOK by MIT-REAGAN via INTERNET with SMTP id 5463; 30 May 85 16:25:07-EDT
Received: from NEPONSET.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 246335; Thu 30-May-85 16:22:08-EDT
Date: Thu, 30 May 85 16:24 EDT
From: David C. Plummer in disguise <DCP@SCRC-QUABBIN.ARPA>
Subject: TERMINAL
To: David Vinayak Wallace <Gumby@MIT-MC.ARPA>, Bug-Lispm@OZ.mit
In-Reply-To: <850502070004.0.GUMBY@JIMI>,
             <850502070612.1.GUMBY@JIMI>
Message-ID: <850530162458.1.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Thu, 2 May 85 07:00 EDT
    From: David Vinayak Wallace <Gumby@MIT-MC>

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.0,
    microcode TMC5-MIC 319, on Lisp Machine Jimi Hendrix:

    1> To repeat an earlier complaint: why do I have to use the mouse to
       select all the "X" options?  Why aren't there keystroke equivalents?
[I'm not answering this.]

    2> Can I set the default terminal emulation mode when TERMINAL uses
       TELNET to be ambassador instead of glass?  glass is essentially useless.
I did just this for 6.1.  I also made sure I didn't accidentally break
SUPDUP.

    Date: Thu, 2 May 85 07:06 EDT
    From: David Vinayak Wallace <Gumby@MIT-MC>

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.0,
    microcode TMC5-MIC 319, on Lisp Machine Jimi Hendrix:

    The ambassador emulation sometimes loses with twenex and unix.  The
    cases are a bit complicated (though worse if you're trying to read the
    screen!) so I'll expand if anyone's planning on fixing it.

I also (for 6.1) added a lot of missing motion commands (for the AAA
case, at least, maybe VT100 will magically work now too).  I tested it
using EMACS on MC, which was the way I usually lost with dialnet.  I
tried to test it on XX, but I couldn't get there and none of the other
MIT 20X systems are on the Internet.  [I don't have any desire to test
it on Unix.]

3-Jul-85 21:00:56-EDT,2094;000000000000
Received: from MIT-SID by MIT-OZ via Chaosnet; 31 May 85 00:30-EDT
Date: Fri, 31 May 85 00:28 EDT
From: Henry Lieberman <Henry@OZ>
Subject: Can you still write Lisp in Lisp?
To: David C. Plummer in disguise <DCP@SCRC-QUABBIN>
cc: BUG-LISPM@OZ
In-Reply-To: <850530120547.0.NFEP@NEPONSET.SCRC.Symbolics.COM>
Message-ID: <850531002825.2.HENRY@SID>


    In normal operation, users should never have to know what environments
    look like, for either viewing or modification.  Instead, macros and
    special forms accept an environment (via the &ENVIRONMENT keyword in the
    arglist) and pass this environment to EVAL as necessary).  I think you
    will agree this is the normal case.

    We aren't currently prepared to handle your case of a Lisp-like
    interpreter that resorts to Lisp.

That's very discouraging.  Since my work, and the work of many of your users
involves constructing Lisp-based programming environments, the ability to 
write interpreters for Lisp and Lisp-embedded languages is crucial. It IS
part of "normal operation".  

If you're going to have environments in the system, they might as well be
first-class objects.  Right now, it's so bad you can't even print out an 
environment, since they're circular defstructs. I can sympathize with your
intention of not wanting users to be too dependent on the details of the 
evaluator, but putting the Lisp "programs are data" philosophy into practice
means that the workings of such things as environments and special forms must be
available to users.   

I'm all for lexical scoping, but I'd have to say that in the current system, 
it is not completely implemented.  The "lexical scoping is better" argument
loses considerable force if it means that you have to give up the ability to
write Lisp-embedded languages and sacrifice important debugging features
like being able to examine variables in breakpoints.  I'd just like to 
be able to do some of the things I used to do with bad old dynamic scoping.
I hope you will give some thought to fixing these problems.  Thanks.  

3-Jul-85 21:00:57-EDT,538;000000000000  
Received: from MIT-ZERMATT by MIT-OZ via Chaosnet; 31 May 85 01:23-EDT
Received: from SNOWBIRD by ZERMATT via CHAOS with CHAOS-MAIL id 5797; Fri 31-May-85 01:21:52-EDT
Date: Friday, 31 May 1985, 01:21-EDT
From: Carl W. Hoffman <CWH at ZERMATT>
To: BUG-LISPM at OZ
Message-ID: <850531012148.1.CWH@SNOWBIRD.MIT>

In Symbolics 3640 Release 6.0, IP-TCP 29.0, Japanese 20.0,
microcode TMC5-IO4-ST506-MIC 319, on Snowbird:

The error message you get from the circular definition
    (DEFFLAVOR FOO () (FOO BAR))
could be improved.
3-Jul-85 21:00:57-EDT,4797;000000000000  
Received: from MIT-JANIS by MIT-OZ via Chaosnet; 31 May 85 09:56-EDT
Date: Fri, 31 May 85 09:54 EDT
From: Ken Haase <KWH@OZ>
Subject: REQUIRE hard to use from ZetaLisp.
To: BUG-LISPM@OZ
cc: KWH@OZ
Message-ID: <850531095443.1.KWH@JANIS>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.1,
Experimental Meta Representation Langauge 4.1, microcode TMC5-MIC 319, on Lisp Machine Janis Joplin:

I tried to do a (CL:REQUIRE 'SET-ABSTRACTION "SYS: LMLib; Sets") in a ZetaLISP buffer, and got
the following error;  it would be nice if this coereced ZetaLISP strings.

>>Error: The first argument (X) to CL:PATHNAME, "SYS: LMLib; Sets", was of the wrong type.
         The function expected #"a pathname"#", "#"a "#"string"#", "#"a symbol"#", or "#"a stream".
While in the function CL:PATHNAME  CL:LOAD  CL:REQUIRE

CL:PATHNAME:  (P.C. = 34)
   Arg 0 (X): "SYS: LMLib; Sets"
   Arg 1 (DEFAULTS): ((#<TOPS20-HOST OZ 1400364>
                       . #<TOPS20-PATHNAME "OZ:PS:<KWH.HACKS>LMLIB.LISP">)
                      (#<LOGICAL-HOST SYS>
                       . #<LOGICAL-PATHNAME "SYS: FACILITIES; GOBBLE.BIN.NEWEST">)
                      (#<LISPM-HOST REAGAN 1400000> . #<LMFS-PATHNAME "B:>foo>foo.lisp">)
                      (NIL . #<TOPS20-PATHNAME "OZ:PS:<KWH.HACKS>LMLIB.LISP">))

CL:LOAD:  (P.C. = 105)
   Arg 0 (FILE): "SYS: LMLib; Sets"
   Rest arg: NIL

CL:REQUIRE:  (P.C. = 31)
   Arg 0 (MODULE-NAME): SET-ABSTRACTION
   Local 0 (MODULE-NAME): #"SET-ABSTRACTION"
   Arg 1 (PATHNAME): "SYS: LMLib; Sets"

SI:*EVAL:  (P.C. = 403)
   Arg 0 (FORM): (CL:REQUIRE 'SET-ABSTRACTION "SYS: LMLib; Sets")
   Local 0 (FORM): NIL
   Arg 1 (ENV): NIL
   Arg 2 (HOOK): NIL

TOOLS:EVAL-INSTANCE:  (P.C. = 27)  (from B:>lmlib>tools)
   Arg 0 (FORM): (CL:REQUIRE 'SET-ABSTRACTION "SYS: LMLib; Sets")
   --Defaulted args:--
   Arg 1 (ENVIRONMENT): NIL
   Arg 2: NIL

SCL::EVAL-AT-COMPILE-TIME:  (P.C. = 3)
   Arg 0 (FORM): (CL:REQUIRE 'SET-ABSTRACTION "SYS: LMLib; Sets")

COMPILER:COMPILE-FROM-STREAM-1:  (P.C. = 403)
   Arg 0: (CL:REQUIRE 'SET-ABSTRACTION "SYS: LMLib; Sets")
   --Defaulted args:--
   Arg 1 (COMPILE-TIME-TOO): NIL

COMPILER:PROCESS-FORMS-FROM-STREAM:  (P.C. = 117)
   Arg 0 (INPUT-STREAM): #<INTERVAL-STREAM 30506252>
   Arg 1 (PROCESS-FUNCTION): COMPILER:COMPILE-FROM-STREAM-1
   Arg 2 (FOR-FILE): NIL
   Arg 3 (AREA-FOR-READING): 4

COMPILER:COMPILE-FROM-STREAM:  (P.C. = 237)
   Arg 0 (INPUT-STREAM): #<INTERVAL-STREAM 30506252>
   Arg 1 (GENERIC-PATHNAME): #<TOPS20-PATHNAME "OZ:PS:<KWH.HACKS>BUFFERS">
   Arg 2: #<DTP-COMPILED-FUNCTION COMPILER:COMPILE-TO-CORE 22236230>
   Arg 3 (ADDITIONAL-BINDINGS): (:SYNTAX :ZETALISP :BASE 10 :PACKAGE #<Package ZWEI 13351650>)

COMPILE-INTERVAL:  (P.C. = 142)
   Arg 0 (COMPILE-P): T
   Arg 1: NIL
   Arg 2: NIL
   Arg 3 (BP1): #<FILE-BUFFER "BUFFERS.LISP PS:<KWH.HACKS> OZ:" 11301315>
   Local 3 (BP1): (";;; -*- Mode: LISP; Syntax: Zetalisp; Base: 10; Package: ZWEI -*-" 0
                   :NORMAL)
   Arg 4 (BP2): NIL
   Local 4 (BP2): ("(defun file-buffer-p (buffer) (typep buffer 'zwei:file-buffer))" 63 :MOVES)
   Arg 5 (IN-ORDER-P): T
   Arg 6 (SPECIAL-COMPILER-FUNCTION): NIL
   Arg 7: NIL

COMPILE-PRINT-INTERVAL:  (P.C. = 121)
   Arg 0 (BP1): #<FILE-BUFFER "BUFFERS.LISP PS:<KWH.HACKS> OZ:" 11301315>
   Arg 1 (BP2): NIL
   Arg 2 (IN-ORDER-P): T
   Arg 3 (COMPILE-P): T
   Arg 4 (DEFINITION-NAME): "Buffer"
   Arg 5 (MODE-NAME): "Compiling"
   Arg 6 (ECHO-NAME): "compiled."
   Arg 7 (USE-TYPEOUT): NIL
   Arg 8 (DEFVAR-HACK): NIL
   Arg 9 (SPECIAL-COMPILER-FUNCTION): NIL

COMPILE-BUFFER:  (P.C. = 34)
   Arg 0 (COMPILE-P): T
   Arg 1 (MODE-NAME): "Compiling"
   Arg 2 (ECHO-NAME): "compiled."
   --Defaulted args:--
   Arg 3 (SPECIAL-COMPILER-FUNCTION): NIL

COM-COMPILE-BUFFER:  (P.C. = 5)

COMMAND-EXECUTE:  (P.C. = 57)
   Arg 0 (COMMAND): COM-COMPILE-BUFFER
   Arg 1 (CHAR): 2115
   Arg 2 (PREFIX-CHAR): NIL
   Arg 3 (HOOK-LIST): (EXPAND-ABBREV-HOOK)

PROCESS-COMMAND-CHAR:  (P.C. = 14)
   Arg 0 (CH): 2115

(:METHOD EDITOR :EDIT):  (P.C. = 233)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 121171573>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor EDITOR -- 12. IV's, 0. FL's 142346020>
   Arg 2 (OPERATION): :EDIT
   --Defaulted args:--
   Arg 3 (TOP-LEVEL-P): T
   Arg 4 (DESCRIPTION): NIL

(:METHOD TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 60)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 121171573>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TOP-LEVEL-EDITOR -- 13. IV's, 1. FL's 142345776>
   Arg 2 (.OPERATION.): :EDIT
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 51)

SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
   --Defaulted args:--
   Arg 0 (IGNORE): NIL
3-Jul-85 21:00:57-EDT,4451;000000000000   
Received: from MIT-REAGAN by MIT-OZ via Chaosnet; 31 May 85 12:18-EDT
Received: from SCRC-STONY-BROOK by MIT-REAGAN via INTERNET with SMTP id 5468; 31 May 85 12:19:50-EDT
Received: from NEPONSET.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 246896; Fri 31-May-85 12:16:19-EDT
Date: Fri, 31 May 85 12:19 EDT
From: David C. Plummer in disguise <DCP@SCRC-QUABBIN.ARPA>
Subject: Can you still write Lisp in Lisp?
To: Henry Lieberman <Henry@OZ.mit>,
    David C. Plummer in disguise <DCP@SCRC-QUABBIN.ARPA>
cc: BUG-LISPM@OZ.mit
In-Reply-To: <850531002825.2.HENRY@SID>
Supersedes: <850531121914.6.NFEP@NEPONSET.SCRC.Symbolics.COM>
Message-ID: <850531121924.7.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Fri, 31 May 85 00:28 EDT
    From: Henry Lieberman <Henry@OZ>

Moon is the right one to give you the gory details.  He'll be back in 10
days or so.

	In normal operation, users should never have to know what environments
	look like, for either viewing or modification.  Instead, macros and
	special forms accept an environment (via the &ENVIRONMENT keyword in the
	arglist) and pass this environment to EVAL as necessary).  I think you
	will agree this is the normal case.

	We aren't currently prepared to handle your case of a Lisp-like
	interpreter that resorts to Lisp.

    That's very discouraging.  Since my work, and the work of many of your users
    involves constructing Lisp-based programming environments, 
I don't believe this.  If you change "many" to "some" I would.
    the ability to 
    write interpreters for Lisp and Lisp-embedded languages is crucial. 
Therefore I don't believe this.
    It IS part of "normal operation".  
I am under the impression MOST of our users write applications in Lisp.
What I gather you are doing is augmenting or writing a dialect of Lisp
based on the Lisp we provide.  I would be surprised of 10% of the 1000+
installed machines normally do their work in something other than
ZetaLisp.

    If you're going to have environments in the system, they might as well be
    first-class objects.
In a sense, they are.  They are as first-class as the internal parsed
datastructures of scroll windows.
    Right now, it's so bad you can't even print out an 
    environment, since they're circular defstructs. 
They are lists.  More than that, they are "consed" on the stack when
possible so it doesn't take up heap space.
    I can sympathize with your
    intention of not wanting users to be too dependent on the details of the 
    evaluator, but putting the Lisp "programs are data" philosophy into practice
    means that the workings of such things as environments and special forms must be
    available to users.   
Again, this is not the "normal" case.  Common Lisp, for example,
specifically all the special forms that officially exist in the
language.  They are lists on the top of page 57 of the silver edition.
Common Lisp does not provide a way to define more.  Common Lisp says
that EVAL takes an optional environment, but never says how you get your
hands on an environment, much less how to construct one.  I'm mumbling.
I think I'm trying to say that I don't think this has much to do with
"programs are data." 

    I'm all for lexical scoping, but I'd have to say that in the current system, 
    it is not completely implemented.  The "lexical scoping is better" argument
    loses considerable force if it means that you have to give up the ability to
    write Lisp-embedded languages and sacrifice important debugging features
    like being able to examine variables in breakpoints.  I'd just like to 
    be able to do some of the things I used to do with bad old dynamic scoping.
    I hope you will give some thought to fixing these problems.  Thanks.  
I believe the debugger has been significantly improved between 6.0 and
6.1 to understand both compiled and interpreted environments.  Note that
you still can't examine variables at breakpoints (meaning (BREAK)).
This is on the grounds that a breakpoint executes in a top level
(null) environment.  Getting into the debugger will give you lexical
access, so use (FSIGNAL "poke around") or something.

In some future release we may have the resources to document how to
create, modify and augment environments.  We are still developing our
own tools to do this, as each application seems to always want some
variant.

3-Jul-85 21:00:58-EDT,1872;000000000000  
Received: from MIT-MC by MIT-OZ via Chaosnet; 31 May 85 12:33-EDT
Received: from SCRC-STONY-BROOK.ARPA by MIT-MC.ARPA 31 May 85 12:29:33 EST
Received: from NEPONSET.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 246908; Fri 31-May-85 12:27:38-EDT
Date: Fri, 31 May 85 12:30 EDT
From: David C. Plummer in disguise <DCP@SCRC-QUABBIN.ARPA>
Subject: Using &allow-other-keys with &rest &key
To: Richard Shu <rshu@BBNG.ARPA>, BUG-LISPM@MIT-MC.ARPA
In-Reply-To: <850530144222.3.RSHU@CONGER.arpa>
Message-ID: <850531123042.0.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Thu, 30 May 85 14:42 EDT
    From: Richard Shu <rshu@[192.1.2.67]>

    In Symbolics 3670 Release 6.0, IP-TCP 29.0, BBN 20.1,
    Experimental COLOR 135.1, Experimental VINT2-MAP 83.0,
    microcode TMC5-IO4-MIC 319, FEP 22, on Conger:

    I have defun'ed route-vis as follows

    (defun route-vis (&rest rte-vis-options
 
		      &key  (foe-route             NIL foe-route-supplied)
			    (friend-route          NIL friend-route-supplied)
			    (time-interval         .15)
		      &allow-other-keys

		      &aux  (collect-points        NIL)
			    (invisibility-analysis NIL)
			
			    (scouting-radius       4))
	...)
      
    When I evaluate "(route-vis :invisibility-analysis)", I get:

&KEY implies everything else is keyword/value pairs.  Therefore, the
length of the list must be even.  &allow-other-keys simply turns off
error checking.  &REST gives you a handle on everything in case you want
to do your own parsing.  See the last paragraph on page 61 of the silver
edition of Common Lisp, the Language.

    >>Error: The value after the keyword :INVISIBILITY-ANALYSIS is missing.
    While in the function SI:APPLY-LAMBDA-INTERNAL  SI:APPLY-LAMBDA  SYS:CALL-FUNNY-FUNCTION

    SI:APPLY-LAMBDA-INTERNAL:  (P.C. = 323)

3-Jul-85 21:00:58-EDT,1585;000000000000    
Received: from MIT-REAGAN by MIT-OZ via Chaosnet; 31 May 85 13:34-EDT
Received: from SCRC-STONY-BROOK by MIT-REAGAN via INTERNET with SMTP id 5469; 31 May 85 13:35:17-EDT
Received: from NEPONSET.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 246942; Fri 31-May-85 13:13:35-EDT
Date: Fri, 31 May 85 13:16 EDT
From: David C. Plummer in disguise <DCP@SCRC-QUABBIN.ARPA>
Subject: REQUIRE hard to use from ZetaLisp.
To: Ken Haase <KWH@OZ.mit>, BUG-LISPM@OZ.mit
In-Reply-To: <850531095443.1.KWH@JANIS>
Message-ID: <850531131640.0.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Fri, 31 May 85 09:54 EDT
    From: Ken Haase <KWH@OZ>

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.1,
    Experimental Meta Representation Langauge 4.1, microcode TMC5-MIC 319, on Lisp Machine Janis Joplin:

    I tried to do a (CL:REQUIRE 'SET-ABSTRACTION "SYS: LMLib; Sets") in a ZetaLISP buffer, and got
    the following error;  it would be nice if this coereced ZetaLISP strings.

    >>Error: The first argument (X) to CL:PATHNAME, "SYS: LMLib; Sets", was of the wrong type.
	     The function expected #"a pathname"#", "#"a "#"string"#", "#"a symbol"#", or "#"a stream".
    While in the function CL:PATHNAME  CL:LOAD  CL:REQUIRE

    CL:PATHNAME:  (P.C. = 34)
       Arg 0 (X): "SYS: LMLib; Sets"

In Release 6, if you are going to mix CL and ZL, you are going to have
to do more mixing than you have.  Try
	(CL:REQUIRE 'SET-ABSTRACTION (CL:STRING "SYS:LMLib; Sets"))
Fixed in Release 7, when there is only one type of string (again).

3-Jul-85 21:00:58-EDT,2290;000000000000    
Received: from MIT-REAGAN by MIT-OZ via Chaosnet; 31 May 85 17:17-EDT
Received: from SCRC-STONY-BROOK by MIT-REAGAN via INTERNET with SMTP id 5472; 31 May 85 17:19:08-EDT
Received: from NEPONSET.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 247170; Fri 31-May-85 17:15:31-EDT
Date: Fri, 31 May 85 17:18 EDT
From: David C. Plummer in disguise <DCP@SCRC-QUABBIN.ARPA>
Subject: Bug in sys:dump-forms-to-file
To: Dinarte R. Morais <DRM@MIT-XX.ARPA>,
    Bernard S. Greenberg <BSG@TENEX.SCRC.Symbolics.COM>,
    David A. Moon <Moon@SCRC-QUABBIN.ARPA>,
    Kalman Reti <Reti@SCRC-STONY-BROOK.ARPA>,
    David C. Plummer in disguise <DCP@SCRC-QUABBIN.ARPA>,
    Gerry Smith <gsmith@SCRC-YUKON.ARPA>, BUG-LISPM@MIT-OZ.mit
In-Reply-To: The message of 19 Jan 85 16:28-EST from Dinarte R. Morais <DRM@MIT-XX>,
             <850128150601.5.BSG@CONCORD.SCRC.Symbolics.COM>,
             <850216001320.2.MOON@EUPHRATES.SCRC.Symbolics.COM>,
             <850222190324.5.RETI@WESER.SCRC.Symbolics.COM>,
             <850222190804.6.RETI@WESER.SCRC.Symbolics.COM>,
             <850222225630.0.MOON@EUPHRATES.SCRC.Symbolics.COM>,
             <850223102331.8.RETI@WESER.SCRC.Symbolics.COM>,
             <850226134833.0.RETI@WESER.SCRC.Symbolics.COM>,
             <850226151717.5.NFEP@NEPONSET.SCRC.Symbolics.COM>,
             <850227160801.1.MOON@EUPHRATES.SCRC.Symbolics.COM>,
             <850306173414.2.GSMITH@BIG.SCRC.Symbolics.COM>,
             <850307163859.9.NFEP@NEPONSET.SCRC.Symbolics.COM>,
             <850507113457.0.RETI@WESER.SCRC.Symbolics.COM>,
             <850509111328.3.NFEP@NEPONSET.SCRC.Symbolics.COM>
File-References: Q:>Reti>rel6-dump-patch.lisp,
                 Q:>Reti>rel7-dump-patch.lisp
Message-ID: <850531171840.7.NFEP@NEPONSET.SCRC.Symbolics.COM>

These messages concern a bug in the dumper/loader that did not always
successfully handle large (over 2^16 objects) datastructures.  It was
possible to get it into a loop trying to dump an index to itself (as
Dinarte Morais provided an example).  271.77, which will be part of 6.1,
installs Reti's patch for this.  Old :BIN files will still load into
6.1.  I believe that :BIN files created in 6.1 that have more than 2^16
objects will NOT load into 6.0.

3-Jul-85 21:00:59-EDT,3355;000000000000    
Received: from MIT-REAGAN by MIT-OZ via Chaosnet; 31 May 85 17:29-EDT
Received: from SCRC-STONY-BROOK by MIT-REAGAN via INTERNET with SMTP id 5473; 31 May 85 17:30:50-EDT
Received: from ALBATROSS.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 247178; Fri 31-May-85 17:25:50-EDT
Date: Fri, 31 May 85 17:30 EDT
From: Ilene H. Lang <LANG@SCRC-YUKON.ARPA>
Subject: Communication Channels Between M.I.T. and Symbolics
To: INFO-LISPM@OZ.MIT, BUG-LISPM@OZ.MIT, BUG-SYMBOLICS-SOFTWARE@OZ.MIT
cc: Lang@SCRC-YUKON.ARPA
Message-ID: <850531173020.0.LANG@ALBATROSS.SCRC.Symbolics.COM>


The purpose of this message is to publicize the channels of
communication that we will be using with M.I.T.  We are trying to
distinguish between the two most common types of discussions:  technical
and administrative/policy.


Disclaimer:

I realize that this message will be read by people other than M.I.T.
users, due to the broad distribution of these mailing lists.  However,
please understand that the procedures described herein apply only to
M.I.T. users.


Technical Discussions:

These discussions happen on Bug-LispM.  Symbolics people will
communicate freely.  If the discussion leads to the conclusion that
M.I.T. needs a special patch, the patch will be forwarded to Dennis
Doughty, the Symbolics Field Office Software Support person responsible
for providing service to M.I.T.  Dennis will deliver it to M.I.T.  We
hope that this will provide the most prompt and efficient response, as
well as the most complete technical service, to M.I.T. users.


Administrative/Policy Discussions:

These discussions are appropriately left to administrative people.  Jim
Roche, the Symbolics sales representative who is responsible for M.I.T.,
is our spokesperson.  He has identified the administrative people at
M.I.T. who buy systems, negotiate deals, sign contracts, and discuss
policy.  These people include, but are not necessarily limited to:

	AI Lab		Karen Prendergast 

	LCS		Dave Gifford
			Greg Papadopoulos
			Richard Soley
			Peter Szolovits
			Richard Zippel

	RLE		Web Dove
			Lance Glasser
			Ken Krohn
			Bill Rabinowitz

	ERL		Roger M. Turpening

	Arts & Media	Dave Zeltzer

Any M.I.T. user who has questions or comments regarding purchases,
loaners, policies, and the like, should contact the M.I.T.
administrative person who is responsible for his or her machine.  If you
don't know who that person is, you can call Jim Roche (577-7600), and he
will help you figure it out.  You can also send mail to ROCHE at
Symbolics.

Our technical people will not respond to any administrative/policy
issues that come to Symbolics via Bug-LispM.  Instead they will redirect
the question to an appropriate internal forum, to be discussed, resolved,
and communicated by the administrative folks.  Such issues will be
acknowledged on Bug-LispM, and periodic status reports will be issued.  


Current Status of Open Issues:

A revision of the Release 6 Source Code Distribution Program is now in
place.  Jim Roche has all the details.  As soon as we have a general
flyer for distribution to customers, we will send it to these mailing
lists.  In the meantime, contact your administrative person.  





From:	Ilene H. Lang, Vice President, Software Products 

3-Jul-85 21:00:59-EDT,1051;000000000000   
Received: from MIT-REAGAN by MIT-OZ via Chaosnet; 31 May 85 20:44-EDT
Received: from SCRC-STONY-BROOK by MIT-REAGAN via INTERNET with SMTP id 5474; 31 May 85 20:46:05-EDT
Received: from NEPONSET.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 247252; Fri 31-May-85 20:42:31-EDT
Date: Fri, 31 May 85 20:45 EDT
From: David C. Plummer in disguise <DCP@SCRC-QUABBIN.ARPA>
Subject: disabling services in distribution worlds
To: Scott Cyphers <SR.EHPYC@MIT-SPEECH.mit>, bug-lispm@oz.mit
In-Reply-To: <SR.EHPYC.12102657984.BABYL@MIT-SPEECH>
References: <SR.EHPYC.12102657984.BABYL@MIT-SPEECH>,
            <850415142338.4.MOON@EUPHRATES.SCRC.Symbolics.COM>,
            <850419141604.4.SWM@THAMES.SCRC.Symbolics.COM>
Message-ID: <850531204542.7.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: 12 Apr 1985  18:25 EST (Fri)
    From: Scott Cyphers <SR.EHPYC@MIT-SPEECH>

    Release 6.0 Distribution worlds don't disable services when they boot.

Release 6.1 Distribution worlds won't enable services when they boot.

3-Jul-85 21:01:00-EDT,603;000000000000  
Received: from MIT-ELVIS by MIT-OZ via Chaosnet; 1 Jun 85 17:39-EDT
Date: Sat, 1 Jun 85 17:37 EDT
From: Chris Lindblad <CJL@OZ>
Subject: Bug in parse-enumeration-choice
To: BUG-LISPM@OZ
Message-ID: <850601173751.1.CJL@ELVIS>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.1,
microcode TMC5-MIC 319, FEP 22, on Lisp Machine Elvis Presley:

Compile this:
(define-cp-command (com-foo :comtab "USER")
		   ((bar (:enumeration
			  :webster-dictionary
			  :webster^s-dictionary)))
  bar)

and then try :foo webster-dictionary
It complains that webster-dictionary is ambiguous.


3-Jul-85 21:01:00-EDT,1716;000000000000   
Received: from MIT-REAGAN by MIT-OZ via Chaosnet; 1 Jun 85 19:34-EDT
Received: from SCRC-STONY-BROOK by MIT-REAGAN via INTERNET with SMTP id 5478; 1 Jun 85 19:36:33-EDT
Received: from WESER.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 247458; Sat 1-Jun-85 19:32:24-EDT
Date: Sat, 1 Jun 85 19:34 EDT
From: Kalman Reti <Reti@SCRC-STONY-BROOK.ARPA>
Subject: Bug in sys:dump-forms-to-file
To: DCP@SCRC-QUABBIN.ARPA
cc: DRM@MIT-XX.ARPA, BSG@TENEX.SCRC.Symbolics.COM,
    Moon@SCRC-QUABBIN.ARPA, Reti@SCRC-STONY-BROOK.ARPA,
    gsmith@SCRC-YUKON.ARPA, BUG-LISPM@MIT-OZ.mit
In-Reply-To: <850531171840.7.NFEP@NEPONSET.SCRC.Symbolics.COM>
File-References: Q:>Reti>rel6-dump-patch.lisp,
                 Q:>Reti>rel7-dump-patch.lisp
Message-ID: <850601193407.0.RETI@WESER.SCRC.Symbolics.COM>

    Date: Fri, 31 May 85 17:18 EDT
    From: David C. Plummer in disguise <DCP@SCRC-QUABBIN.ARPA>

    These messages concern a bug in the dumper/loader that did not always
    successfully handle large (over 2^16 objects) datastructures.  It was
    possible to get it into a loop trying to dump an index to itself (as
    Dinarte Morais provided an example).  271.77, which will be part of 6.1,
    installs Reti's patch for this.  Old :BIN files will still load into
    6.1.  I believe that :BIN files created in 6.1 that have more than 2^16
    objects will NOT load into 6.0.

This is true.  They will get an unknown BIN-OP error.  (Actually, it is possible
under 6.1 to create a :BIN file with more than 2^16 objects that WILL
load in 6.0, but the chances of doing this accidentally are incredibly small.
The :BIN file so loaded into 6.0 will be perfectly correct.)

3-Jul-85 21:01:00-EDT,4099;000000000000
Received: from MIT-MOON by MIT-OZ via Chaosnet; 1 Jun 85 20:57-EDT
Date: Sat, 1 Jun 85 20:55 EDT
From: Chris Lindblad <CJL@OZ>
Subject: cp command Create directory doesn't force user to login
To: BUG-LISPM@OZ
Message-ID: <850601205535.1.CJL@MOON>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.1,
Experimental NS 23.61, microcode TMC5-MIC 319, on Lisp Machine Keith Moon:

>>Error: Null user name not permitted
While in the function (:METHOD FS:NFILE-SERVER-UNIT :WAIT-FOR-COMMAND)  (:METHOD FS:NFILE-SERVER-UNIT :SEND-AND-WAIT-FOR-COMMAND)  (:METHOD FS:NFILE-SERVER-UNIT :SEND-IN-COMMAND-CONDITION-ENVIRONMENT)

(:METHOD FS:NFILE-SERVER-UNIT :WAIT-FOR-COMMAND):  (P.C. = 65)
   Arg 0 (SELF): #<NFILE-SERVER-UNIT 10104764>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:NFILE-SERVER-UNIT -- 15. IV's, 0. FL's 104167041>
   Arg 2 (OPERATION): :WAIT-FOR-COMMAND
   Arg 3 (TID-CONS-ARGS): ("T2640" :LOGIN "Login" NIL)
   Local 4 (DATA-CHANNEL): NIL
   Local 5 (COMMAND-TID): "T2640"
   Local 6 (COMMAND-NAME): :LOGIN
   Local 7 (WHOSTATE): "Login"
   Local 8 (RESPONSE-ARGS): ("BUG" NIL "Null user name not permitted")
   Local 9 (RESPONSE-NAME): :ERROR

(:METHOD FS:NFILE-SERVER-UNIT :SEND-AND-WAIT-FOR-COMMAND):  (P.C. = 40)
   Arg 0 (SELF): #<NFILE-SERVER-UNIT 10104764>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:NFILE-SERVER-UNIT -- 15. IV's, 0. FL's 104167041>
   Arg 2 (OPERATION): :SEND-AND-WAIT-FOR-COMMAND
   Arg 3 (DATA): (:LOGIN "Login" NIL "" NIL :USER-VERSION 1.)

(:METHOD FS:NFILE-SERVER-UNIT :SEND-IN-COMMAND-CONDITION-ENVIRONMENT):  (P.C. = 54)
   Arg 0 (SELF): #<NFILE-SERVER-UNIT 10104764>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:NFILE-SERVER-UNIT -- 15. IV's, 0. FL's 104167041>
   Arg 2 (OPERATION): :SEND-IN-COMMAND-CONDITION-ENVIRONMENT
   Arg 3 (MESSAGE): :SEND-AND-WAIT-FOR-COMMAND
   Arg 4 (DATA): (:LOGIN "Login" NIL "" NIL :USER-VERSION 1.)

(:METHOD FS:NFILE-SERVER-UNIT :COMMAND):  (P.C. = 7)
   Arg 0 (SELF): #<NFILE-SERVER-UNIT 10104764>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:NFILE-SERVER-UNIT -- 15. IV's, 0. FL's 104167041>
   Arg 2 (OPERATION): :COMMAND
   Rest arg (DATA): (:LOGIN "Login" NIL "" NIL :USER-VERSION 1.)

FS:NFILE-KEYWORD-LIST-CALLER:  (P.C. = 165)
   Arg 0 (INSTANCE): #<NFILE-SERVER-UNIT 10104764>
   Arg 1 (CMDNAME): :LOGIN
   Arg 2 (WHOSTATE): "Login"
   Arg 3 (DATA-CHANNEL): NIL
   Arg 4 (CONSTANT-ARGS): ("" NIL :USER-VERSION 1.)
   Local 4 (CONSTANT-ARGS): NIL
   Arg 5 (KEYWORD-VALUE-PAIRS): NIL

(:METHOD FS:NFILE-SERVER-UNIT :LOGIN):  (P.C. = 104)
   Arg 0 (SELF): #<NFILE-SERVER-UNIT 10104764>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:NFILE-SERVER-UNIT -- 15. IV's, 0. FL's 104167041>
   Arg 2 (OPERATION): :LOGIN
   Arg 3 (LOGIN-P): T
   --Defaulted args:--
   Arg 4 (CONDITION): NIL

(:METHOD FS:NFILE-SERVER-UNIT :COMBINED :LOGIN):  (P.C. = 10)
   Arg 0 (SELF): #<NFILE-SERVER-UNIT 10104764>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:NFILE-SERVER-UNIT -- 15. IV's, 0. FL's 104167041>
   Arg 2 (.OPERATION.): :LOGIN
   Rest arg (.DAEMON-CALLER-ARGS.): (T)

(:METHOD FS:NFILE-SERVER-UNIT :VALIDATE-CONTROL-STREAM):  (P.C. = 157)
   Arg 0 (SELF): #<NFILE-SERVER-UNIT 10104764>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:NFILE-SERVER-UNIT -- 15. IV's, 0. FL's 104167041>
   Arg 2 (OPERATION): :VALIDATE-CONTROL-STREAM
   Arg 3 (NO-ERROR-P): T

Rest of stack:
(:METHOD FS:NFILE-ACCESS-PATH :GET-SERVER-UNIT):  (P.C. = 21)
(:METHOD FS:NFILE-ACCESS-PATH :SIMPLE-COMMAND):  (P.C. = 5)
(:METHOD FS:NFILE-ACCESS-PATH :CREATE-DIRECTORY):  (P.C. = 17)
(:METHOD FS:ACTIVE-PATHNAME-MIXIN :CREATE-DIRECTORY):  (P.C. = 16)
(:PROPERTY SI:COM-CREATE-DIRECTORY SI:CP-FUNCTION):  (P.C. = 20)
SI:COM-CREATE-DIRECTORY:  (P.C. = 7)
SI:*EVAL:  (P.C. = 403)
(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0.):  (P.C. = 152)
TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
SI:LISP-COMMAND-LOOP:  (P.C. = 67)
SI:LISP-TOP-LEVEL1:  (P.C. = 5)
SI:LISP-TOP-LEVEL:  (P.C. = 7)
3-Jul-85 21:01:02-EDT,1125;000000000000    
Received: from MIT-MC by MIT-OZ via Chaosnet; 3 Jun 85 10:33-EDT
Received: from SCRC-STONY-BROOK.ARPA by MIT-MC.ARPA  3 Jun 85 10:31:27 EST
Received: from ANNISQUAM.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 247764; Mon 3-Jun-85 10:28:02-EDT
Date: Mon, 3 Jun 85 10:29 EDT
From: Doug Dodds <DODDS@TENEX.SCRC.Symbolics.COM>
Subject: cp command Create directory doesn't force user to login
To: CJL@OZ
cc: BUG-LISPM%OZ@MIT-MC.ARPA, Bug-CP@TENEX
In-Reply-To: <850601205535.1.CJL@MOON>
Message-ID: <850603102941.6.DODDS@ANNISQUAM.SCRC.Symbolics.COM>

    Date: Sat, 1 Jun 85 20:55 EDT
    From: Chris Lindblad <CJL@OZ>

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.1,
    Experimental NS 23.61, microcode TMC5-MIC 319, on Lisp Machine Keith Moon:

    >>Error: Null user name not permitted
    While in the function (:METHOD FS:NFILE-SERVER-UNIT :WAIT-FOR-COMMAND)  (:METHOD FS:NFILE-SERVER-UNIT :SEND-AND-WAIT-FOR-COMMAND)  (:METHOD FS:NFILE-SERVER-UNIT :SEND-IN-COMMAND-CONDITION-ENVIRONMENT)

Oops.  Fixed now in the development system.  Thanks for the report.

3-Jul-85 21:01:02-EDT,1202;000000000000  
Received: from MIT-MC by MIT-OZ via Chaosnet; 3 Jun 85 10:33-EDT
Received: from SCRC-STONY-BROOK.ARPA by MIT-MC.ARPA  3 Jun 85 10:31:44 EST
Received: from ANNISQUAM.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 247766; Mon 3-Jun-85 10:28:29-EDT
Date: Mon, 3 Jun 85 10:30 EDT
From: Doug Dodds <DODDS@TENEX.SCRC.Symbolics.COM>
Subject: cp command Create directory doesn't force user to login
To: CJL%OZ@MIT-MC.ARPA
cc: BUG-LISPM%OZ@MIT-MC.ARPA, Bug-CP@TENEX
In-Reply-To: <850601205535.1.CJL@MOON>
Supersedes: <850603102941.6.DODDS@ANNISQUAM.SCRC.Symbolics.COM>
Message-ID: <850603103009.7.DODDS@ANNISQUAM.SCRC.Symbolics.COM>

    Date: Sat, 1 Jun 85 20:55 EDT
    From: Chris Lindblad <CJL@OZ>

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.1,
    Experimental NS 23.61, microcode TMC5-MIC 319, on Lisp Machine Keith Moon:

    >>Error: Null user name not permitted
    While in the function (:METHOD FS:NFILE-SERVER-UNIT :WAIT-FOR-COMMAND)  (:METHOD FS:NFILE-SERVER-UNIT :SEND-AND-WAIT-FOR-COMMAND)  (:METHOD FS:NFILE-SERVER-UNIT :SEND-IN-COMMAND-CONDITION-ENVIRONMENT)

Oops.  Fixed now in the development system.  Thanks for the report.

3-Jul-85 21:01:02-EDT,427;000000000000   
Received: from MIT-MOON by MIT-OZ via Chaosnet; 4 Jun 85 07:44-EDT
Date: Tue, 4 Jun 85 07:42 EDT
From: Alan Bawden <Alan@MIT-MC>
Subject: Where is the source for HACKS:DEMO
To: BUG-LISPM@OZ
Message-ID: <850604074245.1.ALAN@MOON>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.2,
microcode TMC5-MIC 319, on Moon:

I did Meta-. HACKS:DEMO and the editor told me there was no >sys>r6>demo
directory on B.  Foo.
3-Jul-85 21:01:02-EDT,3481;000000000000   
Received: from MIT-MOON by MIT-OZ via Chaosnet; 4 Jun 85 07:53-EDT
Date: Tue, 4 Jun 85 07:51 EDT
From: Alan Bawden <Alan@MIT-MC>
To: BUG-LISPM@OZ
Message-ID: <850604075126.2.ALAN@MOON>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.2,
microcode TMC5-MIC 319, on Moon:

I wanted to know what SYS: directories there were, so I used Tree Edit ROOT
in FSEdit.  The bug is that this shouldn't put me into the debugger.

>>Error: The :ALL-DIRECTORIES operation is not supported.
While in the function (:METHOD FS:PATHNAME :ALL-DIRECTORIES)  FS:ALL-DIRECTORIES  (:METHOD FS:PATHNAME :LIST-ROOT)

(:METHOD FS:PATHNAME :ALL-DIRECTORIES):  (P.C. = 5)
   Arg 0 (SELF): #<LOGICAL-PATHNAME "SYS: *; FOO.LISP.NEWEST">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:PATHNAME -- 8. IV's, 1. FL's 104206635>
   Arg 2 (OPERATION): :ALL-DIRECTORIES
   Arg 3 (OPTIONS): NIL

FS:ALL-DIRECTORIES:  (P.C. = 126)
   Arg 0 (PATHNAME): #<LOGICAL-PATHNAME "SYS: *; FOO.LISP.NEWEST">
   Rest arg (OPTIONS): NIL

(:METHOD FS:PATHNAME :LIST-ROOT):  (P.C. = 21)
   Arg 0 (SELF): #<LOGICAL-PATHNAME "SYS: FOO; FOO.LISP.NEWEST">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:PATHNAME -- 8. IV's, 1. FL's 104206635>
   Arg 2 (OPERATION): :LIST-ROOT
   --Defaulted args:--
   Arg 3 (OPTIONS): NIL

(:METHOD TV:TREE-LIST-ROOT-TOPNODE :GENERATE-INFERIORS-LIST):  (P.C. = 6)
   Arg 0 (SELF): #<NON-HIERARCHICAL-ROOT-TOPNODE 20035611>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:TREE-LIST-ROOT-TOPNODE -- 4. IV's, 0. FL's 143350341>
   Arg 2 (OPERATION): :GENERATE-INFERIORS-LIST

(:METHOD TV:DIRECTORY-TREE :BEFORE :VISIBLE-INFERIORS):  (P.C. = 16)
   Arg 0 (SELF): #<NON-HIERARCHICAL-ROOT-TOPNODE 20035611>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:DIRECTORY-TREE -- 9. IV's, 1. FL's 143350301>
   Arg 2 (OPERATION): :VISIBLE-INFERIORS

(:METHOD TV:DIRECTORY-TREE :COMBINED :VISIBLE-INFERIORS):  (P.C. = 10)
   Arg 0 (SELF): #<NON-HIERARCHICAL-ROOT-TOPNODE 20035611>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:DIRECTORY-TREE -- 9. IV's, 1. FL's 143350301>
   Arg 2 (.OPERATION.): :VISIBLE-INFERIORS
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

(:METHOD TV:TREE-LIST-TOPNODE :AFTER :INIT):  (P.C. = 10)
   Arg 0 (SELF): #<NON-HIERARCHICAL-ROOT-TOPNODE 20035611>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:TREE-LIST-TOPNODE -- 3. IV's, 1. FL's 143350313>
   Arg 2 (OPERATION): :INIT
   Rest arg (IGNORE): (#<DTP-LOCATIVE 44140322>)

(:METHOD TV:NON-HIERARCHICAL-ROOT-TOPNODE :COMBINED :INIT):  (P.C. = 21)
   Arg 0 (SELF): #<NON-HIERARCHICAL-ROOT-TOPNODE 20035611>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:NON-HIERARCHICAL-ROOT-TOPNODE -- 4. IV's, 2. FL's 143350331>
   Arg 2 (.OPERATION.): :INIT
   Rest arg (.DAEMON-CALLER-ARGS.): (#<DTP-LOCATIVE 44140322>)

Rest of stack:
INSTANTIATE-FLAVOR:  (P.C. = 445)
MAKE-INSTANCE:  (P.C. = 6)
TV:FILE-SYSTEM-EDIT:  (P.C. = 22)
(:METHOD LMFS:FSMAINT-FRAME :HIERED-ROOT):  (P.C. = 14)
(:METHOD LMFS:FSMAINT-FRAME :EXECUTE):  (P.C. = 63)
(:METHOD LMFS:FSMAINT-FRAME :INTERPRET-INPUT):  (P.C. = 150)
LMFS:FSMAINT-READ-FCN:  (P.C. = 72)
(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0):  (P.C. = 105)
TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
SI:LISP-COMMAND-LOOP:  (P.C. = 67)
(:METHOD LMFS:FSMAINT-FRAME :FSMAINT-TOP-LEVEL):  (P.C. = 72)
LMFS:FSMAINT-TOP-LEVEL:  (P.C. = 6)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
3-Jul-85 21:01:03-EDT,3384;000000000000
Received: from MIT-MOON by MIT-OZ via Chaosnet; 4 Jun 85 09:13-EDT
Date: Tue, 4 Jun 85 09:12 EDT
From: Alan Bawden <Alan@MIT-MC>
Subject: Ignore the backtrace
To: BUG-LISPM@OZ
Message-ID: <850604091213.3.ALAN@MOON>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.2,
microcode TMC5-MIC 319, on Moon:

My complaint is that there is no proceed option for this error that will
allow me to continue the compilation, but skip the one toplevel form that
contained the error.

>>Error: VARIABLE-VALUE has no LOCF property.  Can't get locative from this reference:  (VARIABLE-VALUE (QUOTE *LISP-INDENT-OFFSET*))
While in the function LOCF  FUNCALL  SI:MACROEXPAND-1-INTERNAL
While compiling COM-INDENT-WITH-OFFSET-1

LOCF:  (P.C. = 132)
   Arg 0 (.FORM.): (LOCF *LISP-INDENT-OFFSET*)
   Arg 1 (ENV): NIL
   Local 2 (ACCESSOR): *LISP-INDENT-OFFSET*
   Local 3 (REF): (VARIABLE-VALUE (QUOTE *LISP-INDENT-OFFSET*))
   Local 4 (FCN): NIL
   Local 5 (LOCAL): NIL

FUNCALL:  (P.C. = 5)
   Arg 0 (FN): #<DTP-COMPILED-FUNCTION LOCF 2255135>
   Rest arg (ARGS): ((LOCF *LISP-INDENT-OFFSET*) NIL)

SI:MACROEXPAND-1-INTERNAL:  (P.C. = 206)
   Arg 0 (MACRO-CALL): (LOCF *LISP-INDENT-OFFSET*)
   Arg 1 (ENV): NIL
   Arg 2 (RUN-STYLE-CHECKERS-P): NIL
   Arg 3 (DONT-EXPAND-SPECIAL-FORMS): NIL

MACROEXPAND-1:  (P.C. = 10)
   Arg 0 (MACRO-CALL): (LOCF *LISP-INDENT-OFFSET*)
   Arg 1 (ENV): NIL
   --Defaulted args:--
   Arg 2 (DONT-EXPAND-SPECIAL-FORMS): NIL

COMPILER:TRANSFORM:  (P.C. = 551)
   Arg 0 (FORM): (LOCF *LISP-INDENT-OFFSET*)
   Arg 1 (DESTINATION): COMPILER:STACK
   --Defaulted args:--
   Arg 2 (TRANSFORM-P): T
   Arg 3 (OPTIMIZE-P): T

COMPILER:PHASE-1:  (P.C. = 16)
   Arg 0 (FORM): (LOCF *LISP-INDENT-OFFSET*)
   Arg 1 (DESTINATION): COMPILER:STACK
   --Defaulted args:--
   Arg 2 (DO-TRANSFORM): T
   Arg 3 (FORM-IS-ARGUMENT-P): NIL

COMPILER:INITIALIZE-VARIABLE:  (P.C. = 13)
   Arg 0 (VAR-NAME): X
   Arg 1 (DECLARATION): COMPILER:LEXICAL
   Arg 2 (CLASS): COMPILER:NORMAL
   Arg 3 (VALUE-FORM): (LOCF *LISP-INDENT-OFFSET*)

COMPILER:PROCESS-VVLIST:  (P.C. = 226)
   Arg 0 (VVLIST): ((X (LOCF *LISP-INDENT-OFFSET*)))
   Arg 1 (PARALLEL-P): T
   Local 1 (PARALLEL-P): NIL
   Arg 2 (NEW-LOCAL-DECLARATIONS): NIL

Rest of stack:
COMPILER:PHASE-1-LET:  (P.C. = 26)
(:PROPERTY LET COMPILER:PHASE-1):  (P.C. = 5)
COMPILER:PHASE-1:  (P.C. = 347)
COMPILER:PHASE-1-PROGN:  (P.C. = 27)
COMPILER:PHASE-1-FUNCTION-DEFINITION:  (P.C. = 315)
COMPILER:PHASE-1-EXTERNAL-FUNCTION:  (P.C. = 35)
COMPILER:RUN-PHASE-1-FUNCTION:  (P.C. = 73)
COMPILER:COMPILE-DEFINITION-1:  (P.C. = 10)
COMPILER:COMPILE-DEFINITION:  (P.C. = 122)
(:INTERNAL COMPILER:COMPILE-TO-FILE 0 (:DUMP-DEFINITION)):  (P.C. = 4)
COMPILER:COMPILE-TO-FILE:  (P.C. = 12)
COMPILER:COMPILE-FORM-FUNCTION:  (P.C. = 41)
COMPILER:COMPILE-FROM-STREAM-1:  (P.C. = 330)
COMPILER:COMPILE-FROM-STREAM-1:  (P.C. = 165)
COMPILER:PROCESS-FORMS-FROM-STREAM:  (P.C. = 117)
COMPILER:COMPILE-FROM-STREAM:  (P.C. = 237)
COMPILER:COMPILE-FILE:  (P.C. = 303)
COM-COMPILE-FILE:  (P.C. = 57)
COM-EXTENDED-COMMAND:  (P.C. = 27)
COMMAND-EXECUTE:  (P.C. = 57)
PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD EDITOR :EDIT):  (P.C. = 233)
(:METHOD TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 60)
ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 51)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
3-Jul-85 21:01:03-EDT,1747;000000000000  
Received: from MIT-MOON by MIT-OZ via Chaosnet; 4 Jun 85 09:26-EDT
Date: Tue, 4 Jun 85 09:24 EDT
From: Alan Bawden <Alan@MIT-MC>
To: BUG-LISPM@OZ
Message-ID: <850604092441.4.ALAN@MOON>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.2,
microcode TMC5-MIC 319, on Moon:

Seems to me that the symbol 5PM should work just as well as the string
"5PM".

>>Error: The first argument (TIME) to HACKS:SET-ALARM, 5PM, was of the wrong type.
         The function expected a universal time described as an integer or a string.
While in the function HACKS:SET-ALARM  SI:*EVAL  (:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0)

HACKS:SET-ALARM:  (P.C. = 36)  (from SYS: DEMO; ALARM)
   Arg 0 (TIME): 5PM
   Arg 1 (MESSAGE): "foo"

SI:*EVAL:  (P.C. = 403)
   Arg 0 (FORM): (HACKS:SET-ALARM (QUOTE 5PM) "foo")
   Local 0 (FORM): NIL
   --Defaulted args:--
   Arg 1 (ENV): NIL
   Arg 2 (HOOK): NIL

(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0):  (P.C. = 152)
   Arg 0 (.LEXICAL-ENVIRONMENT-POINTER.): #<DTP-LOCATIVE 500047>

TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
   Arg 0 (NEW-MODE): :BLAST
   Arg 1 (STREAM): #:TERMINAL-IO-SYN-STREAM
   Arg 2 (CONTINUATION): #<LEXICAL-CLOSURE (:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0) 500054>

SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
   Arg 0 (NAME): "Lisp Top Level"
   Arg 1 (ABORT-FUNCTION): NIL
   Arg 2 (READ-FUNCTION): NIL
   Arg 3 (EVAL-FUNCTION): NIL
   Arg 4 (PRINT-FUNCTION): NIL

SI:LISP-COMMAND-LOOP:  (P.C. = 67)
   Arg 0: #<LISP-LISTENER Lisp Listener 1 43200216 exposed>
   Rest arg: (:NAME "Lisp Top Level")

SI:LISP-TOP-LEVEL1:  (P.C. = 5)
   Arg 0 (STREAM): #<LISP-LISTENER Lisp Listener 1 43200216 exposed>

SI:LISP-TOP-LEVEL:  (P.C. = 7)
3-Jul-85 21:01:03-EDT,4142;000000000000  
Received: from MIT-MOON by MIT-OZ via Chaosnet; 4 Jun 85 09:37-EDT
Date: Tue, 4 Jun 85 09:35 EDT
From: Alan Bawden <Alan@MIT-MC>
Subject: This time, you can read the backtrace
To: BUG-LISPM@OZ
Message-ID: <850604093527.5.ALAN@MOON>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.2,
microcode TMC5-MIC 319, on Moon:

This occured while compiling the following trivial Zwei command:

(defcom com-indent-with-offset-1 "Indent for Lisp with offset 1." ()
  (let ((x (locf *lisp-indent-offset*)))
    (bind x 1)
    (com-indent-for-lisp)))

I don't remember now, but I suspect the reason this wasn't simply

(defcom com-indent-with-offset-1 "Indent for Lisp with offset 1." ()
  (let ((*lisp-indent-offset* 1))
    (com-indent-for-lisp)))

is because *LISP-INDENT-OFFSET* was an atomic macro at some point or
something?  In any case it seems to me that no matter -what-
*LISP-INDENT-OFFSET* happens to be this release, I should be able to write
(LOCF *LISP-INDENT-OFFSET*).

[ God Damn It!  Meta-. isn't defined in this mail-sending buffer!  I hope
  you have somebody working on fixing that problem. ]

>>Error: VARIABLE-VALUE has no LOCF property.  Can't get locative from this reference:  (VARIABLE-VALUE (QUOTE *LISP-INDENT-OFFSET*))
While in the function LOCF  FUNCALL  SI:MACROEXPAND-1-INTERNAL
While compiling COM-INDENT-WITH-OFFSET-1

LOCF:  (P.C. = 132)
   Arg 0 (.FORM.): (LOCF *LISP-INDENT-OFFSET*)
   Arg 1 (ENV): NIL
   Local 2 (ACCESSOR): *LISP-INDENT-OFFSET*
   Local 3 (REF): (VARIABLE-VALUE (QUOTE *LISP-INDENT-OFFSET*))
   Local 4 (FCN): NIL
   Local 5 (LOCAL): NIL

FUNCALL:  (P.C. = 5)
   Arg 0 (FN): #<DTP-COMPILED-FUNCTION LOCF 2255135>
   Rest arg (ARGS): ((LOCF *LISP-INDENT-OFFSET*) NIL)

SI:MACROEXPAND-1-INTERNAL:  (P.C. = 206)
   Arg 0 (MACRO-CALL): (LOCF *LISP-INDENT-OFFSET*)
   Arg 1 (ENV): NIL
   Arg 2 (RUN-STYLE-CHECKERS-P): NIL
   Arg 3 (DONT-EXPAND-SPECIAL-FORMS): NIL

MACROEXPAND-1:  (P.C. = 10)
   Arg 0 (MACRO-CALL): (LOCF *LISP-INDENT-OFFSET*)
   Arg 1 (ENV): NIL
   --Defaulted args:--
   Arg 2 (DONT-EXPAND-SPECIAL-FORMS): NIL

COMPILER:TRANSFORM:  (P.C. = 551)
   Arg 0 (FORM): (LOCF *LISP-INDENT-OFFSET*)
   Arg 1 (DESTINATION): COMPILER:STACK
   --Defaulted args:--
   Arg 2 (TRANSFORM-P): T
   Arg 3 (OPTIMIZE-P): T

COMPILER:PHASE-1:  (P.C. = 16)
   Arg 0 (FORM): (LOCF *LISP-INDENT-OFFSET*)
   Arg 1 (DESTINATION): COMPILER:STACK
   --Defaulted args:--
   Arg 2 (DO-TRANSFORM): T
   Arg 3 (FORM-IS-ARGUMENT-P): NIL

COMPILER:INITIALIZE-VARIABLE:  (P.C. = 13)
   Arg 0 (VAR-NAME): X
   Arg 1 (DECLARATION): COMPILER:LEXICAL
   Arg 2 (CLASS): COMPILER:NORMAL
   Arg 3 (VALUE-FORM): (LOCF *LISP-INDENT-OFFSET*)

COMPILER:PROCESS-VVLIST:  (P.C. = 226)
   Arg 0 (VVLIST): ((X (LOCF *LISP-INDENT-OFFSET*)))
   Arg 1 (PARALLEL-P): T
   Local 1 (PARALLEL-P): NIL
   Arg 2 (NEW-LOCAL-DECLARATIONS): NIL

Rest of stack:
COMPILER:PHASE-1-LET:  (P.C. = 26)
(:PROPERTY LET COMPILER:PHASE-1):  (P.C. = 5)
COMPILER:PHASE-1:  (P.C. = 347)
COMPILER:PHASE-1-PROGN:  (P.C. = 27)
COMPILER:PHASE-1-FUNCTION-DEFINITION:  (P.C. = 315)
COMPILER:PHASE-1-EXTERNAL-FUNCTION:  (P.C. = 35)
COMPILER:RUN-PHASE-1-FUNCTION:  (P.C. = 73)
COMPILER:COMPILE-DEFINITION-1:  (P.C. = 10)
COMPILER:COMPILE-DEFINITION:  (P.C. = 122)
(:INTERNAL COMPILER:COMPILE-TO-CORE 0 (:DUMP-DEFINITION)):  (P.C. = 5)
COMPILER:COMPILE-TO-CORE:  (P.C. = 12)
COMPILER:COMPILE-FORM-FUNCTION:  (P.C. = 41)
COMPILER:COMPILE-FROM-STREAM-1:  (P.C. = 330)
COMPILER:COMPILE-FROM-STREAM-1:  (P.C. = 165)
COMPILER:PROCESS-FORMS-FROM-STREAM:  (P.C. = 117)
COMPILER:COMPILE-FROM-STREAM:  (P.C. = 237)
COMPILE-INTERVAL:  (P.C. = 142)
COMPILE-PRINT-INTERVAL:  (P.C. = 121)
COMPILE-DEFINITION-INTERNAL:  (P.C. = 100)
COM-COMPILE-REGION:  (P.C. = 5)
COM-COMPILE-REGION-AND-EXIT:  (P.C. = 5)  (from MC: ALAN; ZWINIT)
COMMAND-EXECUTE:  (P.C. = 57)
PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD EDITOR :EDIT):  (P.C. = 233)
(:METHOD TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 60)
ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 51)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
3-Jul-85 21:01:04-EDT,626;000000000000    
Received: from MIT-MC by MIT-OZ via Chaosnet; 4 Jun 85 13:18-EDT
Received: from 40700015427 by MIT-MC via Chaosnet; 4 JUN 85  13:16:18 EDT
Date: Tuesday, 4 June 1985, 13:14-EDT
From: Cory Myers <cory at MIT-BUGS-BUNNY>
Subject: Prompt-and-read and dribbling
To: BUG-LISPM at OZ
Fcc: BUGS-BUNNY: /syla/dspg/cory/mbox
Message-ID: <850604131444.3.CORY@DAFFY-DUCK.MIT>

In Symbolics 3670 Release 6.0, IP-TCP 29.0,
microcode TMC5-IO4-FPA-MIC 319, FEP 22, with UTIL, on Lisp Machine Daffy Duck:
Warm booted from: Lisp Listener 1.

The prompts from promat-and-read do not show up on the dribble output
when dribbling.
3-Jul-85 21:01:04-EDT,4458;000000000000 
Received: from MIT-REAGAN by MIT-OZ via Chaosnet; 4 Jun 85 15:11-EDT
Date: Tue, 4 Jun 85 15:14 EDT
From: CJL@MIT-REAGAN
Sender: File-Server@MIT-REAGAN
Subject: load-patches blowout
To: BUG-LISPM@OZ
Message-ID: <850604151423.1.FILE-SERVER@MIT-REAGAN>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, Mailer 43.0, AISite 9.1,
microcode TMC5-MIC 319, Network-Security patch,
Update-Internet-Namespace patch, Server-Finger patch, on Lisp Machine Ronald Reagan:

did a (load-patches)

fs:*default-pathname-defaults* => 
((#<LISPM-HOST REAGAN 56326117> . #<LMFS-PATHNAME "B:>aisite>patch>AISite-9>*.*.*">)
 (#<TOPS20-HOST XX 56323715> . #<TOPS20-PATHNAME "XX:PS:<SYSTEM>HOSTS.TXT.*">)
 (NIL . #<LMFS-PATHNAME "B:>aisite>patch>AISite-9>*.*.*">))

>>Error: Wildcard pathnames are not allowed for the OPEN operation.
         For B:>aisite>patch>AISite-9>AISite-9-2.*
While in the function (:METHOD LMFS:LOCAL-LMFS-ACCESS-MIXIN :OPEN)  (:METHOD FS:ACTIVE-PATHNAME-MIXIN :OPEN)  FS:COMMON-LISP-OPEN

(:METHOD LMFS:LOCAL-LMFS-ACCESS-MIXIN :OPEN):  (P.C. = 10)
   Arg 0 (SELF): #<LOCAL-LMFS-ACCESS-PATH B using LOCAL-FILE 12255160>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor LMFS:LOCAL-LMFS-ACCESS-MIXIN -- 1. IV's, 0. FL's 1101504>
   Arg 2 (OPERATION): :OPEN
   Arg 3 (PATHNAME): #<LMFS-PATHNAME "B:>aisite>patch>AISite-9>AISite-9-2.*">
   Arg 4 (PATH): #<LMFS-PATHNAME "B:>aisite>patch>AISite-9>AISite-9-2.*">
   Rest arg (ARGS): (:DIRECTION :PROBE)

(:METHOD FS:ACTIVE-PATHNAME-MIXIN :OPEN):  (P.C. = 14)
   Arg 0 (SELF): #<LMFS-PATHNAME "B:>aisite>patch>AISite-9>AISite-9-2.*">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:ACTIVE-PATHNAME-MIXIN -- 1. IV's, 0. FL's 104225115>
   Arg 2 (OPERATION): :OPEN
   Arg 3 (PATHNAME): #<LMFS-PATHNAME "B:>aisite>patch>AISite-9>AISite-9-2.*">
   Rest arg (OPTIONS): (:DIRECTION :PROBE)

FS:COMMON-LISP-OPEN:  (P.C. = 450)
   Arg 0 (PATHNAME): #<LMFS-PATHNAME "B:>aisite>patch>AISite-9>AISite-9-2.*">
   Arg 1 (KEYWORD-ARGS): (:DIRECTION :PROBE)

OPEN:  (P.C. = 257)
   Arg 0 (PATHNAME): #<LMFS-PATHNAME "B:>aisite>patch>AISite-9>AISite-9-2">
   Local 0 (PATHNAME): #<LMFS-PATHNAME "B:>aisite>patch>AISite-9>AISite-9-2.*">
   Rest arg (KEYWORD-ARGS): (:DIRECTION :PROBE)

PROBEF:  (P.C. = 57)
   Arg 0 (FILE): #<LMFS-PATHNAME "B:>aisite>patch>AISite-9>AISite-9-2">

(:INTERNAL FS:HIERARCHICAL-DIRECTORY-PATCH-FILE-SEARCH 0. FS:PROBE-PATCH-FILE):  (P.C. = 75)
   Arg 0 (.LEXICAL-ENVIRONMENT-POINTER.): #<DTP-LOCATIVE 500631>
   Rest arg: (:TRY-PATHNAME #<LMFS-PATHNAME "B:>aisite>patch>AISite-9>AISite-9-2"> :SUCCESS-TYPE :NEW)

FS:HIERARCHICAL-DIRECTORY-PATCH-FILE-SEARCH:  (P.C. = 20)
   Arg 0 (TRY-CONTINUATION): #<LEXICAL-CLOSURE (:INTERNAL ** 0. FS:TRY-CONTINUATION) 500610>
   Arg 1 (TRY-OLD): #<LEXICAL-CLOSURE (:INTERNAL ** 1. FS:TRY-OLD) 500606>

(:METHOD FS:HIERARCHICAL-DIRECTORY-MIXIN :WHOPPER :PATCH-FILE-PATHNAME):  (P.C. = 134)
   Arg 0 (SELF): #<LMFS-PATHNAME "B:>aisite>patch>">
   Arg 1 (SELF-MAPPING-TABLE): FS:HIERARCHICAL-DIRECTORY-MIXIN
   Arg 2 (.WHOPPER-CONTINUATION.): #<DTP-COMPILED-FUNCTION (:INTERNAL (:METHOD FS:LMFS-PATHNAME :COMBINED :PATCH-FILE-PATHNAME) 0.) 14216472>
   Arg 3 (.OLD-SELF-MAPPING-TABLE.): #<Map to flavor FS:LMFS-PATHNAME -- 5. IV's, 9. FL's 120666400>
   Arg 4 (.OPERATION.): :PATCH-FILE-PATHNAME
   Arg 5 (SYSTEM-NAME): "AISite"
   Arg 6 (SAME-DIRECTORY-P): NIL
   Arg 7 (PATOM): "PATCH"
   Arg 8 (PATCH-TYPE): :PATCH-FILE
   Arg 9 (MAJOR-VERSION): 9.
   Arg 10 (MINOR-VERSION): 2.
   Arg 11 (FILE-TYPE): NIL

Rest of stack:
(:METHOD FS:LMFS-PATHNAME :COMBINED :PATCH-FILE-PATHNAME):  (P.C. = 13)
(:PROPERTY FS:PATCH-FILE FS:TRANSLATION-FUNCTION):  (P.C. = 114)
(:METHOD FS:LOGICAL-HOST :INVOKE-TRANSLATION):  (P.C. = 36)
(:METHOD FS:LOGICAL-HOST :TRANSLATE-INTERNAL):  (P.C. = 36)
(:METHOD FS:LOGICAL-HOST :TRANSLATE):  (P.C. = 177)
(:METHOD FS:LOGICAL-PATHNAME :TRANSLATED-PATHNAME):  (P.C. = 67)
(:DEFUN-METHOD FS:LOGICAL-PATHNAME-PASS-ON):  (P.C. = 5)
(:METHOD FS:LOGICAL-PATHNAME :PUTPROP):  (P.C. = 10)
SI:PATCH-SYSTEM-PATHNAME:  (P.C. = 57)
SI:LOAD-PATCH:  (P.C. = 14)
LOAD-PATCHES:  (P.C. = 554)
SI:*EVAL:  (P.C. = 403)
(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0.):  (P.C. = 152)
TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
SI:LISP-COMMAND-LOOP:  (P.C. = 67)
SI:LISP-TOP-LEVEL1:  (P.C. = 5)
SI:LISP-TOP-LEVEL:  (P.C. = 7)
3-Jul-85 21:01:04-EDT,814;000000000000 
Received: from MIT-ZERMATT by MIT-OZ via Chaosnet; 4 Jun 85 21:43-EDT
Date: Tue, 4 Jun 85 21:41 EDT
From: Richard E. Zippel <RZ@ZERMATT>
Subject: Common Lisp defsetf
To: BUG-LISPM@OZ
Message-ID: <850604214119.7.RZ@ZERMATT>

In Symbolics 3670 Release 6.0, IP-TCP 29.0, MLSite 7.2, Mailer 43.0,
Experimental Imagen Spooler 2.1, Experimental Schema 84.0,
microcode TMC5-IO4-MIC 319, on Zermatt:

I occasionally define a simple setf method i.e.:

(cl:defsetf nth-string set-nth-string)

and then define that a more complex definition is required, i.e.:

(cl:defsetf nth-string (string i) (char)
  `(set-nth-string ,char ,string ,i))

It seems that the lt::trivial-setf-method property is not deleted when
the more complex property is added and thus the most recent defsetf does
not take effect.
3-Jul-85 21:01:04-EDT,904;000000000000 
Received: from MIT-REAGAN by MIT-OZ via Chaosnet; 5 Jun 85 10:53-EDT
Received: from APIARY-4 by MIT-REAGAN via CHAOS with CHAOS-MAIL id 5496; Wed 5-Jun-85 10:57:22-EDT
Date: Wed, 5 Jun 85 10:52 EDT
From: Stephen Robbins <STEVER@OZ>
Subject: Input history
To: BUG-LISPM@OZ
Message-ID: <850605105216.2.STEVER@APIARY-4>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.2,
microcode TMC5-MIC 319, FEP 18, on Lisp Machine Apiary-4:

My LISP Listener 1 input history is about 100 elements long.  I'd like
to list the whole thing out.  I've tried setting
ZWEI:*HISTORY-MENU-LENGTH* to large values (> 50), but the history
always stops displaying after approximately 50 items.  I say
approximately because the number of items displayed seems to change
every time I type a command.

I'm not sure if this is a LISPM bug, a documentation bug, or extreme
density on my part...

-Stever@OZ
3-Jul-85 21:01:05-EDT,476;000000000000    
Received: from MIT-LENNON by MIT-OZ via Chaosnet; 5 Jun 85 11:25-EDT
Date: Wed, 5 Jun 85 11:24 EDT
From: David Vinayak Wallace <Gumby@MIT-MC>
Subject: cl:intern
To: BUG-LISPM@OZ
Message-ID: <850605112425.1.GUMBY@LENNON>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.2,
microcode TMC5-MIC 319, on Lisp Machine John Lennon:

Page 185 of the silver bible claims common-lisp's INTERN will not accept
a symbol.  However, CL:INTERN will happily accept a symbol.
3-Jul-85 21:01:05-EDT,551;000000000000    
Received: from MIT-LENNON by MIT-OZ via Chaosnet; 5 Jun 85 11:26-EDT
Date: Wed, 5 Jun 85 11:25 EDT
From: David Vinayak Wallace <Gumby@MIT-MC>
Subject: supdup server
To: BUG-LISPM@OZ
Message-ID: <850605112539.2.GUMBY@LENNON>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.2,
microcode TMC5-MIC 319, on Lisp Machine John Lennon:

You can't send bug mail when supdup-ing to a lisp machine.  At the very
least you ought to be able to send a bug report (a la :bug its under
ITS) -- use the rh and have end or complete send the message.
3-Jul-85 21:01:05-EDT,540;000000000000
Received: from MIT-LENNON by MIT-OZ via Chaosnet; 5 Jun 85 11:29-EDT
Date: Wed, 5 Jun 85 11:28 EDT
From: David Vinayak Wallace <Gumby@MIT-MC>
Subject: more supdup 
To: Bug-Lispm@OZ
Message-ID: <850605112806.3.GUMBY@LENNON>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.2,
microcode TMC5-MIC 319, on Lisp Machine John Lennon:

(when supdupping in from ITS)
If I exit supdup asking supdup to log me out of the remote lispm (i.e.
<break>L) the connexion is dropped all right, but I find I am still
logged into the lispm.
3-Jul-85 21:01:05-EDT,510;000000000000
Received: from MIT-MOON by MIT-OZ via Chaosnet; 5 Jun 85 15:04-EDT
Date: Wed, 5 Jun 85 15:03 EDT
From: Alan Bawden <Alan@MIT-MC>
Subject: Question
To: BUG-LISPM@OZ
Message-ID: <850605150342.1.ALAN@MOON>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.2,
microcode TMC5-MIC 319, on Lisp Machine Keith Moon:

I would like to put something in my init file that does what Function
Meta-C does.  I have already looked at the documentation, and I am certain
that I can't figure it out from there.
3-Jul-85 21:01:06-EDT,811;000000000000    
Mail-From: EHL created at  5-Jun-85 15:29:49
Date: Wed, 5 Jun 1985  15:29 EDT
Message-ID: <EHL.12116770781.BABYL@MIT-OZ>
From: EHL@MIT-OZ
To:   Alan Bawden <Alan@MIT-MC>
Cc:   BUG-LISPM@MIT-OZ
Subject: Question
In-reply-to: Msg of 5 Jun 1985  15:03-EDT from Alan Bawden <Alan at MIT-MC>

    From: Alan Bawden <Alan at MIT-MC>

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.2,
    microcode TMC5-MIC 319, on Lisp Machine Keith Moon:

    I would like to put something in my init file that does what Function
    Meta-C does.  I have already looked at the documentation, and I am certain
    that I can't figure it out from there.

What about...

(when (send tv:who-line-documentation-window :reverse-video-p)
   (send tv:who-line-documentation-window :set-reverse-video-p nil))
3-Jul-85 21:01:06-EDT,408;000000000000  
Received: from MIT-MC by MIT-OZ via Chaosnet; 5 Jun 85 15:35-EDT
Date: Wed,  5 Jun 85 15:33:53 EST
From: David Vinayak Wallace <GUMBY@MIT-MC.ARPA>
Subject:  Question
To: ALAN@MIT-MC.ARPA
cc: BUG-LISPM@MIT-OZ
Message-ID: <[MIT-MC.ARPA].531693.850605.GUMBY>


(send tv:who-line-documentation-window ':set-reverse-video-p nil)

My init file is full of this sort of shit if you want to frob it more.
3-Jul-85 21:01:06-EDT,980;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 5 Jun 85 15:50-EDT
Date: Wed,  5 Jun 85 15:49:46 EST
From: Roland G. Ouellette <ROLY@MIT-MC.ARPA>
Subject:  Question
To: ALAN@MIT-MC.ARPA
cc: BUG-LISPM@MIT-OZ
In-reply-to: Msg of Wed 5 Jun 85 15:03 EDT from Alan Bawden <Alan>
Message-ID: <[MIT-MC.ARPA].531728.850605.ROLY>

    Date: Wed, 5 Jun 85 15:03 EDT
    From: Alan Bawden <Alan>
    To:   BUG-LISPM at OZ
    Re:   Question

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.2,
    microcode TMC5-MIC 319, on Lisp Machine Keith Moon:

    I would like to put something in my init file that does what Function
    Meta-C does.  I have already looked at the documentation, and I am certain
    that I can't figure it out from there.

;;; Get rid of the reverse video in the mouse-doc line.
(WHEN (send tv:who-line-documentation-window :reverse-video-p)
  (send tv:who-line-documentation-window :set-reverse-video-p nil))

This will do the trick
3-Jul-85 21:01:07-EDT,1033;000000000000 
Received: from MIT-REAGAN by MIT-OZ via Chaosnet; 5 Jun 85 15:50-EDT
Received: from SCRC-STONY-BROOK by MIT-REAGAN via INTERNET with SMTP id 5498; 5 Jun 85 15:43:26-EDT
Received: from MOBILE.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 249063; Wed 5-Jun-85 15:37:15-EDT
Date: Wed, 5 Jun 85 15:38 EDT
From: David E. Goldfarb <DEG@SCRC-QUABBIN.ARPA>
Subject: Question
To: Alan@MIT-MC.ARPA, BUG-LISPM@OZ.mit
cc: DEG@SCRC-QUABBIN.ARPA
In-Reply-To: <850605150342.1.ALAN@MOON>
Message-ID: <850605153857.7.DEG@MOBILE.SCRC.Symbolics.COM>

    Date: Wed, 5 Jun 85 15:03 EDT
    From: Alan Bawden <Alan@MIT-MC>

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.2,
    microcode TMC5-MIC 319, on Lisp Machine Keith Moon:

    I would like to put something in my init file that does what Function
    Meta-C does.  I have already looked at the documentation, and I am certain
    that I can't figure it out from there.

(send tv:who-line-documentation-window :set-reverse-video-p nil)

3-Jul-85 21:01:07-EDT,508;000000000000  
Received: from MIT-BUGS-BUNNY by MIT-OZ via Chaosnet; 5 Jun 85 22:26-EDT
Received: by MIT-BUGS-BUNNY.ARPA (4.12/4.8)
	id AA09629; Wed, 5 Jun 85 22:25:15 edt
Date: Wed, 5 Jun 85 22:25:15 edt
From: Web Dove <dove@bugs-bunny>
To: bug-lispm@oz
Subject: fix for supdup for vt100's

Does anybody have a fix for the SUPDUP service that deals with the fact some
terminals don't have delete character (like vt100's)?  When I try to delete
internal parts of a command line, nothing happens until I type ^L.
3-Jul-85 21:01:07-EDT,23768;000000000000
Received: from MIT-APIARY-5 by MIT-OZ via Chaosnet; 6 Jun 85 11:23-EDT
Date: Thu, 6 Jun 85 11:23 EDT
From: Stephen Robbins <STEVER@OZ>
Subject: Unbound variable within a MACRO expansion
To: BUG-LISPM@OZ
cc: STEVER@OZ
Message-ID: <850606112300.6.STEVER@APIARY-5>
Fonts: CPTFONT, HL10B, CPTFONTCB, TR10I

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.2,
microcode TMC5-MIC 319, FEP 18, on Lisp Machine Apiary-5:

I am writing a macro, DEFOBJECT, which defined a couple of other
macros.  The first time my macro is expanded after I evaluate its
DEFMACRO, it blows up with "The variable INSTANCE-VARNAMES is
unbound."  This only happens the first time I expand the macro (using
M-X Macro Expand in ZWEI).

If I reevaluate the DEFMACRO, I get the error again on the first
expansion of DEFOBJECT.  INSTANCE-VARNAMES is used in the MAPCAN
surrounding the LAMBDA which is giving the error.  If it were really
completely unbound, the MAPCAN would give an error first.

Below are the (42, ugh) stack frames at the time of the error.  At the
end of this moby message is a copy of the entire file containing the
macro definition that blew up, including both the code which worked and which didn't.

To reproduce the error, load in the file as included below.  It will tell you the
form to type to produce the error.  Note that to reproduce the Unbound-var error, you must
reevaluate the DEFOBJECT form from the below file (i.e. read it into an editor somewhere
and do What Must Be Done...)

I found that changing the form:
        (mapcan #'(lambda (x) (make-request-handler x scripflav-name
                                                    instance-varnames))
                instance-varnames)
to:
        (let ((temp instance-varnames))
          (mapcan #'(lambda (x) (make-request-handler x scripflav-name temp))
                  instance-varnames))
caused the problem to go away.  Even the first expansion worked fine.

NOTE THAT THIS WORKED *FINE* WITH THE COMPILER!!!


>>Trap: The variable INSTANCE-VARNAMES is unbound.
While in the function SI:*EVAL  SI:*EVAL  SI:APPLY-LAMBDA

SI:*EVAL:  (P.C. = 23)
   Arg 0 (FORM): INSTANCE-VARNAMES
   Arg 1 (ENV): (((X COLOR) (SCRIPFLAV-NAME SCRIPFLAV-BASIC-THING) (COMPONENTS NIL) (VARLIST (SIZE LOCATION **)) (NAME BASIC-THING) (OPTIONS NIL) (SI:.ENV. NIL) (SI:.FORM. (DEFOBJECT BASIC-THING ** NIL))) NIL ((DEFOBJECT #<DTP-LOCATIVE 43440447>)) (((TAGBODY ** #:G0334 **) #<DTP-LOCATIVE 43440525>)) NIL NIL (((SCRIPFLAV-NAME SCRIPFLAV-BASIC-THING) (COMPONENTS NIL) (VARLIST **) (NAME BASIC-THING) (OPTIONS NIL) (SI:.ENV. NIL) (SI:.FORM. **)) NIL ((DEFOBJECT #<DTP-LOCATIVE 43440447>)) ((** #<DTP-LOCATIVE 43440525>))))
   --Defaulted args:--
   Arg 2 (HOOK): NIL

SI:*EVAL:  (P.C. = 370)
   Arg 0 (FORM): (MAKE-REQUEST-HANDLER X SCRIPFLAV-NAME INSTANCE-VARNAMES)
   Local 0 (FORM): NIL
   Arg 1 (ENV): (((X COLOR) (SCRIPFLAV-NAME SCRIPFLAV-BASIC-THING) (COMPONENTS NIL) (VARLIST (SIZE LOCATION **)) (NAME BASIC-THING) (OPTIONS NIL) (SI:.ENV. NIL) (SI:.FORM. (DEFOBJECT BASIC-THING ** NIL))) NIL ((DEFOBJECT #<DTP-LOCATIVE 43440447>)) (((TAGBODY ** #:G0334 **) #<DTP-LOCATIVE 43440525>)) NIL NIL (((SCRIPFLAV-NAME SCRIPFLAV-BASIC-THING) (COMPONENTS NIL) (VARLIST **) (NAME BASIC-THING) (OPTIONS NIL) (SI:.ENV. NIL) (SI:.FORM. **)) NIL ((DEFOBJECT #<DTP-LOCATIVE 43440447>)) ((** #<DTP-LOCATIVE 43440525>))))
   --Defaulted args:--
   Arg 2 (HOOK): NIL

SI:APPLY-LAMBDA:  (P.C. = 507)
   Arg 0 (FUNCTION): (SI:DIGESTED-LAMBDA (LAMBDA (X) (MAKE-REQUEST-HANDLER X SCRIPFLAV-NAME INSTANCE-VARNAMES)) NIL 2305 262401 NIL (X) NIL (MAKE-REQUEST-HANDLER X SCRIPFLAV-NAME INSTANCE-VARNAMES))
   Arg 1 (ARGUMENTS): ((((SCRIPFLAV-NAME SCRIPFLAV-BASIC-THING) (COMPONENTS NIL) (VARLIST **) (NAME BASIC-THING) (OPTIONS NIL) (SI:.ENV. NIL) (SI:.FORM. **)) NIL ((DEFOBJECT #<DTP-LOCATIVE 43440447>)) ((** #<DTP-LOCATIVE 43440525>))) COLOR)
   Local 1 (ARGUMENTS): NIL

SYS:CALL-FUNNY-FUNCTION:  (P.C. = 102)
   Arg 0 (FUNCTION): (SI:DIGESTED-LAMBDA (LAMBDA (X) (MAKE-REQUEST-HANDLER X SCRIPFLAV-NAME INSTANCE-VARNAMES)) NIL 2305 262401 NIL (X) NIL (MAKE-REQUEST-HANDLER X SCRIPFLAV-NAME INSTANCE-VARNAMES))
   Rest arg (ARGS): ((((SCRIPFLAV-NAME SCRIPFLAV-BASIC-THING) (COMPONENTS NIL) (VARLIST **) (NAME BASIC-THING) (OPTIONS NIL) (SI:.ENV. NIL) (SI:.FORM. **)) NIL ((DEFOBJECT #<DTP-LOCATIVE 43440447>)) ((** #<DTP-LOCATIVE 43440525>))) COLOR)

(LAMBDA (X) (MAKE-REQUEST-HANDLER X SCRIPFLAV-NAME INSTANCE-VARNAMES)):
   Arg 0 (X): (((SCRIPFLAV-NAME SCRIPFLAV-BASIC-THING) (COMPONENTS NIL) (VARLIST (SIZE LOCATION **)) (NAME BASIC-THING) (OPTIONS NIL) (SI:.ENV. NIL) (SI:.FORM. (DEFOBJECT BASIC-THING ** NIL))) NIL ((DEFOBJECT #<DTP-LOCATIVE 43440447>)) (((TAGBODY ** #:G0334 **) #<DTP-LOCATIVE 43440525>)))
   --Extraneous args:--
   Arg 1: COLOR

MAPCAN:  (P.C. = 40)
   Arg 0 (FCN): #<LEXICAL-CLOSURE (LAMBDA ** **) 27145537>
   Rest arg (LISTS): ((LOCATION SIZE))

DEFOBJECT:  (from AP6:>stever>scripter-flavor)
   Arg 0 (.FORM.)
   --Missing args:--
   Arg 1 (.ENV.)
   Extraneous Rest Arg: NIL

FUNCALL:  (P.C. = 5)
   Arg 0 (FN): (SI:DIGESTED-LAMBDA (LAMBDA (SI:.FORM. SI:.ENV.) (DECLARE (ARGLIST NAME &OPTIONAL ** ** &REST OPTIONS)) (BLOCK DEFOBJECT (TAGBODY ** #:G0334 **))) (DEFOBJECT (ARGLIST NAME &OPTIONAL (VARLIST NIL) (COMPONENTS NIL) &REST OPTIONS)) 2050 262658 NIL (SI:.FORM. SI:.ENV.) NIL (BLOCK DEFOBJECT (TAGBODY (SI:DIGESTED-LET* ** ** NIL ** ** **) #:G0334 (RETURN-FROM DEFOBJECT **))))
   Rest arg (ARGS): ((DEFOBJECT BASIC-THING (SIZE LOCATION (COLOR "blue")) NIL) NIL)

SI:MACROEXPAND-1-INTERNAL:  (P.C. = 206)
   Arg 0 (MACRO-CALL): (DEFOBJECT BASIC-THING (SIZE LOCATION (COLOR "blue")) NIL)
   Arg 1 (ENV): NIL
   Arg 2 (RUN-STYLE-CHECKERS-P): NIL
   Arg 3 (DONT-EXPAND-SPECIAL-FORMS): NIL

MACROEXPAND:  (P.C. = 11)
   Arg 0 (MACRO-CALL): (DEFOBJECT BASIC-THING (SIZE LOCATION (COLOR "blue")) NIL)
   --Defaulted args:--
   Arg 1 (ENV): NIL
   Arg 2 (DONT-EXPAND-SPECIAL-FORMS): NIL

ZWEI:MACRO-EXPAND-TOP-LEVEL:  (P.C. = 21)
   Arg 0 (FORM): (DEFOBJECT BASIC-THING (SIZE LOCATION (COLOR "blue")) NIL)

ZWEI:COM-MACRO-EXPAND-EXPRESSION:  (P.C. = 200)

ZWEI:COM-EXTENDED-COMMAND:  (P.C. = 27)

ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
   Arg 0 (COMMAND): ZWEI:COM-EXTENDED-COMMAND
   Arg 1 (CHAR): 600
   Arg 2 (PREFIX-CHAR): NIL
   Arg 3 (HOOK-LIST): (ZWEI:FONT-LOCK-HOOK)

ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
   Arg 0 (CH): 600

(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 233)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 121171573>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:EDITOR -- 12. IV's, 0. FL's 142346020>
   Arg 2 (OPERATION): :EDIT
   --Defaulted args:--
   Arg 3 (TOP-LEVEL-P): T
   Arg 4 (DESCRIPTION): NIL

(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 60)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 121171573>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:TOP-LEVEL-EDITOR -- 13. IV's, 1. FL's 142345776>
   Arg 2 (.OPERATION.): :EDIT
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 51)

SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
   Arg 0 (IGNORE): NIL


--------------------------------------------------------------------------------

                       AND NOW THE FILE ITSELF:

--------------------------------------------------------------------------------

;;; -*- Fonts: CPTFONT,HL10B,CPTFONT,TR10I; Mode: LISP -*-

;;;
;;; SCRIPTER-FLAVOR.LISP - by Stever Robbins  6/4/85
;;;
;;; Defined in this file:
;;;	make-scrip-instance			macro
;;;	defobject				macro
;;;
;;; This file contains macros which will be added to DEFOBJECT.  Currently, DEFOBJECT creates a flavor.  Once these
;;; macros are added, it will also create a scripter actor.  This actor will behave like a LISP machine flavor.  In
;;; particular, consider the example:
;;;
;;; (defobject indefinite-article
;;;     	    ((name "it")					; Instance variable list
;;; 	     (gender 'neuter)
;;;	      average-usage-count)
;;;	    (grammar-part))					; Included flavor list
;;;
;;; A new macro has been defined:
;;;    (make-scrip-instance <name>)	which expands into (new <name>).  This creates an instance of a scripter
;;;    			     	flavor.
;;;
;;;----------------------------------------
;;;
;;; The above DEFOBJECT creates the following SCRIPTER serializer script:
;;;
;;; (defserializer* (scripflav-indefinite-article (name "it") (gender 'neuter) average-usage-count
;;; 				     <instance variables defined by grammar-part>)
;;;    ((is-request (message m) (target self))
;;;     ((name) (in-parallel (ready self) (reply name)))
;;;     ((set-name (with new-value val))
;;;    (in-parallel (replace self (new 'scripflav-indefinite-article
;;;     			           :name val
;;;     			       :gender gender
;;;     			       :average-usage-count average-usage-count))
;;;     	      (reply t)))
;;;     <handlers for typep, instance-vars, make-object, and rest of instance variables>
;;;     (otherwise (in-parallel (complain (a-msg invalid-request (with message m) (with target self)))
;;;         		       (ready self))))
;;;    ))
;;;
;;; An instantiation of this actor will take the messages of the form:
;;;	(a-msg typep)			get the flavor name (e.g. indefinite-article in above example)
;;;	(a-msg instance-vars)		returns a list of the instance variables
;;;	(a-msg make-object)		return a MAKE-OBJECT version of the scripter flavor
;;;					(be careful that any instance variables which are supposed to
;;;					be LISPM flavors are also MAKE-OBJECTed if necessary)
;;; 	(a-msg <instance variable>)		the reply will be the value of the instance variable
;;; 	(a-msg set-<instance variable> (with new-value <value>)
;;; 					set the given instance variable to the given value; return t
;;;
;;; Property list modifications to scripflav-indefinite-article:
;;; 	scripflav-combined-varlist		list of instance variables used by this flavor
;;;	scripflav-defined			non-nil when this flavor has been defined (to tell when a
;;;					component flavor has been defined)
;;;
;;;			WARNING!!!
;;;
;;;	Scripter flavors only inherit instance variables, and they only inherit at time of defobject.
;;;	This means that if you change a scripter flavor component, the DEFSCRIPT* of the flavor's actor
;;;	will still use the old variable list.
;;;	
;;;
;;;  When you change a flavor which is a component of another flavor, a warning is printed.  The warning includes
;;;  only flavors which use the changed flavor directly.  It does not include flavors which inherit from a flavor which
;;;  inherits from the changed flavor (Got that?)  Note that the code for this works fine in the interpreter.  I
;;;  haven't taken the time to figure out what EVAL-WHENs are needed to get this to work properly with compiled
;;;  code.
;;;

;;;; (COMPONENT-VARS 'component-name)
;;;
;;;  Takes the name of a component scripter-flavor of this object and returns a list of the variables from that
;;;  flavor.
;;;  
;;;  Note that the variable name are always returned as they originally appeared.  That is, if they originally had
;;;  initialization forms, the forms will still be there.  COPYLIST* is used to return the list because the list is then
;;;  NCONC'd with other lists using MAPCAN.
;;;

(defun component-vars (comp-name)
  "Given a scripter-flavor component name, extracts the list of instance variables from
   the scripter-flavor's property list and returns a copy of that list.  Prints a warning
   message if the flavor isn't defined."
  (if (get comp-name 'scripflav-defined)        ; Is this component a defined scripter flavor?
      (copylist* (get comp-name'scripflav-combined-varlist))    ; Yep.  Return its instance
                                                ; variables.
      (ferror "SCRIPTER Flavor component ~S is not a scripter flavor" comp-name))
                                                ; Otherwise signal an error.
  )

;;;; (REMOVE-IF test list)	macro
;;;; (REMOVE-IF-NOT test list)	macro
;;;
;;;  Removes all elements of list which satisfy the given test.  (simple version of common lisp REMOVE-IF)
;;;

(defmacro remove-if (test lst)
  `(mapcan #'(lambda (x) (if (funcall ,test x) nil (list x))) ,lst))

(defmacro remove-if-not (test lst)
  `(mapcan #'(lambda (x) (if (funcall ,test x) (list x) nil)) ,lst))

;;;; (FLATTEN-VARLIST varlist)
;;;
;;;  Takes a varlist as its argument.  This is a list with each element either a variable or a list of the form
;;;  (variable initial-value).  This varlist is the concatenation of several varlists.  Variables appearing near the start
;;;  of the list should overshadow those towards the end.
;;;
;;;  FLATTEN-VARLIST removes overshadowed variables from the end of a varlist.  If variable appears before
;;;  (variable initial-value) in the varlist, then (variable initial-value) will overshadow variable.
;;;
;;;  e.g.  (FLATTEN-VARLIST '(NAME (ADDRESS "Cambridge") (NAME "John Luser")  (ADDRESS "Boston"))) will
;;;  return:
;;;     ((ADDRESS "Cambridge") (NAME "John Luser"))
;;;     

;;; Auxiliary function:  See if a variable is mentioned in a variable list.

(defun in-varlist? (var varlist)
  "Takes var, varlist.  Returns the element of the varlist in which var occurs.
   Varlist entries are of the form <variable> or (<variable> <initial value>)." 
  (cond ((null varlist) nil)                    ; A variable is never in the empty varlist.
        ((or (eq var (car varlist))             ; Variable is 1st element of varlist.  Found.
             (and (listp (car varlist))         ; Variable is variable in an init form.  Found.
                  (eq var (caar varlist)))) (car varlist))
        (t (in-varlist? var (cdr varlist)))))   ; Otherwise, check for var being in the rest of varlist.

(defun flatten-varlist (varlist-to-flatten)
  "Takes a varlist of the form (var1 (var2 init2) ...) and handles shadowing of variables
   late in the list by variables early in the list."
  (flatten-varlist-1 varlist-to-flatten nil))   ; Pass to flatten-varlist-1 with an empty new-varlist.

(defun flatten-varlist-1 (varlist flat-varlist)
  "Does the work of flatten-varlist."
  (if (null varlist)                            ; No more vars in varlist.  We're done.
      flat-varlist                              ; Return the flattened list.
      (let* ((cur-varform (car varlist))        ; Get the current variable form we're examining,
             (to-be-flattened (cdr varlist))    ;  and the variables yet-to-be-examined.
             (cur-var (if (atom cur-varform)
                          cur-varform
                          (car cur-varform))))  ; Get just the variable from cur variable form.
        
        (if (or (and (atom cur-varform)         ; Front of list is an atom?  Ignore if it appears later in 
                     (in-varlist? cur-var to-be-flattened))     ; the varlist.
                (in-varlist? cur-var flat-varlist))     ; Ignore if the var is already in the flattened list.
            (flatten-varlist-1 to-be-flattened flat-varlist)
            (flatten-varlist-1 to-be-flattened (cons cur-varform flat-varlist))))))

;;;; (MAKE-REQUEST-HANDLER symbol-name scriptor-flavor-name flavor-instance-vars)	function
;;;
;;; Pass:	symbol-name		The name of the symbol to create the handler for
;;; 	scripter-flavor-name		The name to use when doing a (new 'scripter-flavor-name).
;;;	flavor-instance-vars		A list of instance variables for the flavor (for use in the "(new...)")
;;; 
;;; This function takes a symbol name and makes a DEFOBJECT request handler.  It makes a handler to GET the given
;;; symbol with a message of the form (a-msg symbol-name).  It also makes a handler to set the given symbol with
;;; a message of the form (a-msg SET-symbol-name (with new-value new-value)).  It returns a LIST of the two
;;; handlers.
;;;

(defun make-request-handler (symbol scripflav-name instance-vars)
  "Return the form for a SCRIPTER request handler for a scripter-flavor retrieve and
   scripter-flavor set of scripter instance variables."
  (let ((set-handler-name (intern (string-append "SET-" symbol))))
    (list `((,symbol)
            (in-parallel (ready self)
                         (reply ,symbol)))
          `((,set-handler-name new-value)
            (in-parallel (replace self (new ',scripflav-name
                                            ,@(mapcan #'(lambda (x)
                                                          (list (intern (string x) :keyword)
                                                                (if (eq x symbol)
                                                                    'new-value
                                                                    x)))
                                                      instance-vars)))
                         (reply t))))))
                                  
;;;; (DEFOBJECT object-name (var1 var2 ...) (flav1 flav2 ...) options...)
;;;
;;;  Creates both a Lispm flavor and a scripter-flavor of the name object-name.  The instance variables are specified
;;;  as varn or as a list of (varn default-valuen).  Instance variables of the component flavns are also included.  Note
;;;  that the scripter-flavor object-name will only have the instance variables from those components which are
;;;  also scripter-flavors.  This is because it gets those instance variables from the flavors' property list.
;;;
;;;  Options are options to the LISP machine's DEFFLAVOR.  Scripter-flavors ignore these.
;;;

(defmacro defobject (name &optional (varlist nil) (components nil) &rest options)
  "Defines both a lisp machine flavor and a scripter flavor actor from the given instance
   variables and component flavors.  The instance variables from a component flavor
   are only included in the scripter flavor if the component is a scripter flavor."
  (let* ((scripflav-name (symbol-append 'SCRIPFLAV- name))      ; Name for scripter-flavor script.
         (scripflav-comp (mapcar #'(lambda (x) (symbol-append 'SCRIPFLAV- x))
                                 components))   ; Symbol names of component flavor symbols
         (combined-varlist (flatten-varlist (append varlist
                                                    (mapcan #'component-vars
                                                            scripflav-comp))))
                                                ; Get varlist from combining our instance varlist
                                                ; with our components' varlists [list of varns/(varn initn)s]
         (instance-varnames (get-acquaintance-names combined-varlist))
                                                ; Get all instance variable names.
         
         )

    ;; Remove ourselves from each old component's dependent flavors list.
    (mapc #'(lambda (comp-flavor)
              (setf (get comp-flavor 'scripflav-dependents)
                    (subset #'(lambda (x) (neq x name))
                            (get comp-flavor 'scripflav-dependents))))
          (get scripflav-name 'scripflav-components))
    
    ;; Add ourselves to each new component's dependent flavors list.
    (mapc #'(lambda (comp-flavor)
              (setf (get comp-flavor 'scripflav-dependents)
                    (union (get comp-flavor 'scripflav-dependents)
                           (list name))))
          scripflav-comp)
    
    ;; Give the user a warning if they're changing the variable list of an existing scripter flavor object.
    ;; Only the immediate instance variables are checked for changes.  Inherited variables are not examined.
    (and (get scripflav-name 'scripflav-defined)        ; This flavor has been defined before.
         (not (equal (get scripflav-name 'scripflav-combined-varlist)
                     combined-varlist))         ;  With a different combined varlist?  Warn!
         (progn (format t
                        "Warning: Instance variables of Scripter flavor ~A being ~
			changed.~%" name)
                (let ((dependents (get scripflav-name 'scripflav-dependents)))
                  (and dependents
                       (lexpr-funcall #'format t
                                      "~9,0TPlease re-DEFOBJECT Scripter flavor~#[~;~:;s~]~
				      ~#[~; ~A~; ~A and ~A~:;~@{~#[~; and~] ~A~^,~}~]."
                                      dependents)))))
    
    ;; Set the scripter flavor's total variable list for use in inheritence and redefinition detection.
    ;; Set flavor-defined flag.
    ;; Save our list of component flavors.
    (setf (get scripflav-name 'scripflav-combined-varlist) combined-varlist)
    (setf (get scripflav-name 'scripflav-defined) t)
    (setf (get scripflav-name 'scripflav-components) components)

    `(progn 'compile
            
  ;; First, define the LISP machine flavor corresponding to this object:
  (defflavor ,name
             ,varlist
             (,@components object)
              :gettable-instance-variables
              :settable-instance-variables
              :initable-instance-variables
              ,@options)
            
  ;; Now, the scripter flavor actor
  (defserializer* (,scripflav-name ,@combined-varlist)
    ((is-request (message m) (target self))
     ((typep) (reply ',name))                           ; TYPEP messages get flavor name
     ((instance-vars) (reply ',instance-varnames))      ; INSTANCE-VARS gets list of instance variables
     ((make-object) (reply (make-object ',name
                                        ,@(mapcan #'(lambda (x) (list (intern (string x)
                                                                              :keyword)
                                                                      x))
                                                  instance-varnames))))
#||;;;       THE CODE WHICH WORKS:
     ,@(let ((temp instance-varnames))
         (mapcan #'(lambda (x)
                     (make-request-handler x scripflav-name temp))
                 instance-varnames))            ; Insert message handlers
||#;;;	 THE CODE WHICH DOESN'T WORK:
     ,@(mapcan #'(lambda (x)
                   (make-request-handler x scripflav-name instance-varnames))
               instance-varnames)               ; Insert message handlers


     (otherwise (in-parallel (complain (a-msg invalid-request (with message m)
                                              (with target self)))
                             (ready self)))))
  )))



;;;; (MAKE-SCRIP-INSTANCE flavor-name init-keywords...)	macro
;;;
;;;  This macro expands into a form which creates an instance of the given scripter flavor.
;;;  In other words, it becomes a (NEW ...)
;;;
(defmacro make-scrip-instance (flav-name &rest keywords)
  `(new ',(symbol-append 'SCRIPFLAV- flav-name) ,@keywords))


(DEFUN GET-ACQUAINTANCE-NAMES (ACQUAINTANCE-NAMES-AND-INIT-CODE)
  (MAPCAR #'(LAMBDA (AC) (IF (SYMBOLP AC) AC (FIRST AC)))
	  ACQUAINTANCE-NAMES-AND-INIT-CODE))

(DEFUN SYMBOL-APPEND (&REST STUFF)
       "Concatenates arguments into a symbol: (SYMBOL-APPEND 'FOO 'BAR) ==> FOOBAR"
       (INTERN (APPLY 'STRING-APPEND
		      (MAPCAR '(LAMBDA (S) (FORMAT NIL "~A" S)) STUFF))))

(format t "Now try the following:~%")
(grind-top-level '(macroexpand '(defobject basic-thing
                                          (size
                                            location
                                            (color "blue"))
                                 ())))
3-Jul-85 21:01:08-EDT,2975;000000000000    
Received: from MIT-GOLDILOCKS by MIT-OZ via Chaosnet; 6 Jun 85 12:59-EDT
Received: from KOALA by GOLDILOCKS via CHAOS with CHAOS-MAIL id 1626; Thu 6-Jun-85 12:59:37-EDT
Date: Thursday, 6 June 1985, 12:57-EDT
From: David H. Kaufman <Sr.Kaufman at MIT-SPEECH>
Subject: Changing Namespace Objects
To: BUG-LISPM at OZ
Message-ID: <850606125753.2.QUX@KOALA.MIT>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, Spire-Macros 5.1,
Attribute 5.6, Compute 5.4, Audio 4.0, Speech-Attributes 4.3,
Display 6.16, Speech-Layouts 6.2, Prtout 4.0, Versatec 5.0, Spire 16.0,
ZOO 6.7, ZOO-SPIRE 2.0, microcode TMC5-MIC 319, FEP 18,
4.2 Finger Compatibility, 4.2 FTP Compatibility,
Lazy Redisplay for Spire, New Transcription Patches, on Lisp Machine Koala:

I typed:

(tv:edit-namespace-object :user "kaufman"
	:locally t
	:property-list '(:name "El Quxo")
	:new nil)

From the Documentation Examiner, Section TV:EDIT-NAMESPACE-OBJECT-FUNCTION:

:property-list   A list of alternating indicators (keywords) and values.
		 *** The new attributes are merged with the existing
                 attributes unless new is given. ***

(Asterisks mine) What really bothers me here is that I can't figure out
a clean way for a program to change a namespace object (I don't consider
the method used by tv:edit-namespace-object very clean: I want to do a
net:find-object-named and send messages to the object).

>>Error: Property list can only be specified when creating a new object.
While in the function TV:EDIT-NAMESPACE-OBJECT  SI:*EVAL  (:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0)

TV:EDIT-NAMESPACE-OBJECT:  (P.C. = 35)
   Arg 0 (CLASS): :USER
   Arg 1 (NAME): "kaufman"
   Rest arg: (:LOCALLY T :PROPERTY-LIST (:NAME "El Quxo") :NEW NIL)
   Local 3 (LOCALLY): T
   Local 4 (CREATE): NIL
   Local 5 (PROPERTY-LIST): (:NAME "El Quxo")
   Local 6 (NEW): NIL
   Local 7 (WAIT): NIL

SI:*EVAL:  (P.C. = 403)
   Arg 0 (FORM): (TV:EDIT-NAMESPACE-OBJECT :USER "kaufman" :LOCALLY T :PROPERTY-LIST (QUOTE (:NAME "El Quxo")) :NEW NIL)
   Local 0 (FORM): NIL
   --Defaulted args:--
   Arg 1 (ENV): NIL
   Arg 2 (HOOK): NIL

(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0):  (P.C. = 152)
   Arg 0 (.LEXICAL-ENVIRONMENT-POINTER.): #<DTP-LOCATIVE 500047>

TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
   Arg 0 (NEW-MODE): :BLAST
   Arg 1 (STREAM): #:TERMINAL-IO-SYN-STREAM
   Arg 2 (CONTINUATION): #<LEXICAL-CLOSURE (:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0) 500054>

SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
   Arg 0 (NAME): "Lisp Top Level"
   Arg 1 (ABORT-FUNCTION): NIL
   Arg 2 (READ-FUNCTION): NIL
   Arg 3 (EVAL-FUNCTION): NIL
   Arg 4 (PRINT-FUNCTION): NIL

SI:LISP-COMMAND-LOOP:  (P.C. = 67)
   Arg 0: #<LISP-LISTENER Lisp Listener 1 43200216 exposed>
   Rest arg: (:NAME "Lisp Top Level")

SI:LISP-TOP-LEVEL1:  (P.C. = 5)
   Arg 0 (STREAM): #<LISP-LISTENER Lisp Listener 1 43200216 exposed>

SI:LISP-TOP-LEVEL:  (P.C. = 7)
3-Jul-85 21:01:08-EDT,1286;000000000000   
Received: from MIT-REAGAN by MIT-OZ via Chaosnet; 6 Jun 85 13:43-EDT
Received: from SCRC-STONY-BROOK by MIT-REAGAN via INTERNET with SMTP id 5501; 6 Jun 85 13:47:16-EDT
Received: from CARDINAL.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 249458; Thu 6-Jun-85 13:40:35-EDT
Date: Thu, 6 Jun 85 13:42 EDT
From: William M. York <York@SCRC-QUABBIN.ARPA>
Subject: Changing Namespace Objects
To: Sr.Kaufman@MIT-SPEECH.mit, BUG-LISPM@OZ.mit
In-Reply-To: <850606125753.2.QUX@KOALA.MIT>
Message-ID: <850606134223.2.YORK@CARDINAL.SCRC.Symbolics.COM>

    Date: Thursday, 6 June 1985, 12:57-EDT
    From: David H. Kaufman <Sr.Kaufman at MIT-SPEECH>

    I typed:

    (tv:edit-namespace-object :user "kaufman"
	    :locally t
	    :property-list '(:name "El Quxo")
	    :new nil)

    What really bothers me here is that I can't figure out
    a clean way for a program to change a namespace object (I don't consider
    the method used by tv:edit-namespace-object very clean: I want to do a
    net:find-object-named and send messages to the object).

Namespace objects have si:property-list-mixin mixed in, so if you want
to change a property of a user object you can do

(send (net:find-object-named :user "Zippy") :putprop t :pinhead)

3-Jul-85 21:01:09-EDT,3382;000000000000  
Received: from MIT-EDDIE by MIT-OZ via Chaosnet; 6 Jun 85 15:17-EDT
Received: by mit-eddie.ARPA (4.12/4.8)  id AA02778; Thu, 6 Jun 85 15:16:40 edt
Date: Thu, 6 Jun 85 15:16:40 edt
From: allegra!des@mit-eddie
To: mit-eddie!bug-lispm@oz.ARPA
Subject: zwei-tab-bug


In Symbolics 3670 Release 6.0, Experimental Standard Utilities 4.17,
IP-TCP 29.0, microcode TMC5-IO4-MIC 319, on Lisp Machine Branflake:

Got the following bug in zwei when editing a file with only this 
form (the setq) in it (though that makes no difference) by moving the cursor
to the beginning of the blank line just above the line starting
with "Singular Noun" and hitting the <tab> key.  
This can be reliably reproduced 
on other machines here (all rel-6, both 3600s and 3670s):

;;; -*- Mode: LISP -*-

(setq part-to-pattern-info '(
			     (noun noun (* noun * (sp sing) nt) "Noun"
				   
	    "Singular Noun" "Singular Noun")
      (nounpl noun (* noun * (sp plural) nt) "Plural Noun")))


Curiously enough, a quick fix can be had by just placing a single
character after the open paren of setq's second arg, on the first
line, i.e. (setq part-to-pattern-info '(x
					  (noun ....)
and trying the tab again.  Now the tab will work correctly,
and will continue to do so even after the single character 
(the "x" in this example) is removed.  After this fix, the
bug usually doesn't reappear until the next cold boot.

doug stumberger

>>Trap: The subscript given to the AR-1 instruction, 29, on "(setq part-to-pattern-info '(" was beyond the length, 29.
While in the function ZWEI:LISP-INDENT-FLET-P  ZWEI:INDENT-FOR-LISP  ZWEI:INDENT-INTERVAL-FOR-LISP

ZWEI:LISP-INDENT-FLET-P:  (P.C. = 22)
   Arg 0 (LASTPAREN): ("			     (noun noun (* noun * (sp sing) nt) /"Noun/"" 8)
   Arg 1 (BP1): ("(setq part-to-pattern-info '(" 0)
   Local 2 (BACK1): ("(setq part-to-pattern-info '(" 28)
   Local 3 (FBP): ("(setq part-to-pattern-info '(" 29)

ZWEI:INDENT-FOR-LISP:  (P.C. = 107)
   Arg 0 (BP): ("" 0)
   Local 0 (BP): ("" 0)
   Arg 1 (START-DEFINITION-BP): ("(setq part-to-pattern-info '(" 0)

ZWEI:INDENT-INTERVAL-FOR-LISP:  (P.C. = 130)
   Arg 0 (BP1): ("" 0)
   Arg 1 (BP2): ("	    /"Singular Noun/" /"Singular Noun/")" 0)
   Arg 2 (IN-ORDER-P): NIL
   Arg 3 (START-BP): NIL
   Local 3 (START-BP): ("(setq part-to-pattern-info '(" 0)
   Arg 4 (COMMENTS-P): NIL

ZWEI:COM-INDENT-FOR-LISP:  (P.C. = 25)

ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
   Arg 0 (COMMAND): ZWEI:COM-INDENT-FOR-LISP
   Arg 1 (CHAR): 137
   Arg 2 (PREFIX-CHAR): NIL
   Arg 3 (HOOK-LIST): NIL

ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
   Arg 0 (CH): 137

(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 233)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 40635132>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:EDITOR -- 12. IV's, 0. FL's 55075157>
   Arg 2 (OPERATION): :EDIT
   --Defaulted args:--
   Arg 3 (TOP-LEVEL-P): T
   Arg 4 (DESCRIPTION): NIL

(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 60)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 40635132>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:TOP-LEVEL-EDITOR -- 13. IV's, 1. FL's 55075143>
   Arg 2 (.OPERATION.): :EDIT
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 51)

SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
   --Defaulted args:--
   Arg 0 (IGNORE): NIL
3-Jul-85 21:01:09-EDT,679;000000000000 
Received: from MIT-EDDIE by MIT-OZ via Chaosnet; 6 Jun 85 16:00-EDT
Received: by mit-eddie.ARPA (4.12/4.8)  id AA03733; Thu, 6 Jun 85 15:59:31 edt
Date: Thu, 6 Jun 85 15:59:31 edt
From: allegra!des@mit-eddie
To: mit-eddie!bug-lispm@oz.ARPA
Subject: sage-scrolling

In Symbolics 3600 SAGE in Release 6.0,
Experimental Standard Utilities 4.17, IP-TCP 29.0,
microcode TMC5-MIC 319, FEP 22, on Lisp Machine Daffy:

It'd be nice to be able to do keyboard scrolling in the "Current
Candidates" and "Bookmark" panes in SAGE instead of always having 
to use the cumbersome mouse scrolling.  Perhaps C-V/M-V, etc. could scroll
the pane that the mouse was currently over.

3-Jul-85 21:01:09-EDT,748;000000000000  
Received: from MIT-MC by MIT-OZ via Chaosnet; 6 Jun 85 16:11-EDT
Received: from MIT-TWEETY-PIE by MIT-MC via Chaosnet; 6 JUN 85  16:12:11 EDT
Date: Thursday, 6 June 1985, 16:11-EDT
From: Webster Dove <dove at MIT-BUGS-BUNNY>
Subject: defsubst uses no (let () ...)?
To: BUG-LISPM at OZ
Message-ID: <850606161148.1.DOVE@TWEETY-PIE.MIT>

In Symbolics 3600 Release 6.0, IP-TCP 29.0,
microcode TMC5-IO4-FPA-MIC 319, with UTIL, on Lisp Machine Tweety Pie:

The documentation for defsubst says that it binds the forms to the
variables with let then optimises away what it can.  In practice, it
does not bind anything and the code does not indicate that it will
either.  Is the documentation wrong, or do we have the wrong defsubst
code.

3-Jul-85 21:01:10-EDT,2522;000000000000  
Received: from MIT-EDDIE by MIT-OZ via Chaosnet; 6 Jun 85 16:50-EDT
Received: from SCRC-STONY-BROOK.ARPA by mit-eddie.ARPA (4.12/4.8)  id AA04174; Thu, 6 Jun 85 16:49:32 edt
Received: from TURKEY.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 249601; Thu 6-Jun-85 16:47:37-EDT
Date: Thu, 6 Jun 85 16:48 EDT
From: Michael Greenwald <Greenwald@SCRC-STONY-BROOK.ARPA>
Subject: zwei-tab-bug
To: allegra!des@MIT-EDDIE.ARPA, bug-lispm%oz@MIT-EDDIE.ARPA
In-Reply-To: The message of 6 Jun 85 15:16-EDT from allegra!des@mit-eddie
Message-Id: <850606164850.1.GREENWALD@TURKEY.SCRC.Symbolics.COM>

    Date: Thu, 6 Jun 85 15:16:40 edt
    From: allegra!des@mit-eddie


    In Symbolics 3670 Release 6.0, Experimental Standard Utilities 4.17,
    IP-TCP 29.0, microcode TMC5-IO4-MIC 319, on Lisp Machine Branflake:

    Got the following bug in zwei when editing a file with only this 
    form (the setq) in it (though that makes no difference) by moving the cursor
    to the beginning of the blank line just above the line starting
    with "Singular Noun" and hitting the <tab> key.  
    This can be reliably reproduced 
    on other machines here (all rel-6, both 3600s and 3670s):

    ;;; -*- Mode: LISP -*-

    (setq part-to-pattern-info '(
				 (noun noun (* noun * (sp sing) nt) "Noun"
				   
		"Singular Noun" "Singular Noun")
	  (nounpl noun (* noun * (sp plural) nt) "Plural Noun")))


    Curiously enough, a quick fix can be had by just placing a single
    character after the open paren of setq's second arg, on the first
    line, i.e. (setq part-to-pattern-info '(x
					      (noun ....)
    and trying the tab again.  Now the tab will work correctly,
    and will continue to do so even after the single character 
    (the "x" in this example) is removed.  After this fix, the
    bug usually doesn't reappear until the next cold boot.

    doug stumberger

    >>Trap: The subscript given to the AR-1 instruction, 29, on "(setq part-to-pattern-info '(" was beyond the length, 29.
    While in the function ZWEI:LISP-INDENT-FLET-P  ZWEI:INDENT-FOR-LISP  ZWEI:INDENT-INTERVAL-FOR-LISP

    ZWEI:LISP-INDENT-FLET-P:  (P.C. = 22)
       Arg 0 (LASTPAREN): ("			     (noun noun (* noun * (sp sing) nt) /"Noun/"" 8)
       Arg 1 (BP1): ("(setq part-to-pattern-info '(" 0)
       Local 2 (BACK1): ("(setq part-to-pattern-info '(" 28)
       Local 3 (FBP): ("(setq part-to-pattern-info '(" 29)

308.22, and I'll patch it into 6.1


3-Jul-85 21:01:10-EDT,949;000000000000 
Received: from MIT-APIARY-4 by MIT-OZ via Chaosnet; 6 Jun 85 19:26-EDT
Date: Thu, 6 Jun 85 19:25 EDT
From: Randy Parker <PARKER@OZ>
Subject: Trivial but (time:print-interval-or-never foo nil) dies.
To: BUG-LISPM@OZ
Message-ID: <850606192512.9.PARKER@APIARY-4>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.3,
microcode TMC5-MIC 319, FEP 18, on Lisp Machine Apiary-4:

Although the doc makes no claims to this,

time:
(defun print-interval-or-never (interval &optional (stream standard-output))
  (send stream ':string-out
	(if (null interval) "never"
	    (time:seconds-to-interval-string interval))))

should probably look something more like this so that the convention
of sorts w.r.t. nil stream args to time formatters is upheld:

time:
(defun print-interval-or-never (interval &optional (stream standard-output))
  (format stream
	(if (null interval) "never"
	    (time:seconds-to-interval-string interval))))
3-Jul-85 21:01:10-EDT,422;000000000000   
Received: from MIT-MC by MIT-OZ via Chaosnet; 6 Jun 85 22:17-EDT
Date: Thu,  6 Jun 85 22:15:49 EST
From: David Vinayak Wallace <GUMBY@MIT-MC.ARPA>
Subject:  fix for supdup for vt100's
To: dove@MIT-BUGS-BUNNY.ARPA
cc: bug-lispm@MIT-OZ
In-reply-to: Msg of Wed 5 Jun 85 22:25:15 edt from Web Dove <dove at bugs-bunny>
Message-ID: <[MIT-MC.ARPA].533534.850606.GUMBY>

Isn't this a problem with your supdup USER end?
3-Jul-85 21:01:11-EDT,952;000000000000   
Received: from MIT-GOLDILOCKS by MIT-OZ via Chaosnet; 7 Jun 85 12:27-EDT
Received: from GRIZZLY by GOLDILOCKS via CHAOS with CHAOS-MAIL id 1633; Fri 7-Jun-85 09:42:07-EDT
Date: Friday, 7 June 1985, 09:40-EDT
From: Scott Cyphers <sr.ehpyc at MIT-SPEECH>
Subject: Obituary: Polar -- A Faithful Server
To: Bug-Lispm at OZ
Message-ID: <850607094030.1.CYPHER@GRIZZLY.MIT>

Polar -- 16210 Chaosnet
  Booted: Feburary 5, 1985
  Crashed: June 6, 1985
  Age: 121 days

Last night, Polar, an LM2, crashed after 121 days of continuous faithful
service.  Polar was running Release 5.1, and had performed 26 garbage
collections in its lifetime.  A private funeral service, (for LM2s and
Cadrs running 5.1 only) will be held tomorrow via the network in memory
of Polar's service.  Polar's hardware was salvaged, and, after a
namespace lobotomy, has proven suitable for a new boot.  Let us hope
that it shall prove as fruitful as its predecessor.
3-Jul-85 21:01:11-EDT,3029;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 7 Jun 85 12:54-EDT
Received: from MIT-JANIS by MIT-MC via Chaosnet; 7 JUN 85  10:04:27 EDT
Date: Fri, 7 Jun 85 10:02 EDT
From: Ken Haase <KWH@OZ>
Subject: Time parser can't read
To: BUG-LISPM@OZ
Message-ID: <850607100233.2.KWH@JANIS>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.3,
Experimental Meta Representation Langauge 4.2, microcode TMC5-MIC 319, on Lisp Machine Janis Joplin:

This happened when interval parsing the string "Two hours"; it would be
nice if it took such cardinal strings, like TIME:PARSE-UNIVERSAL-TIME
does.

>>Error: "Two" encountered where number expected in time interval spec.
While in the function TIME:BARF  TIME:TIME-INTERVAL-TO-SECONDS  TIME:PARSE-INTERVAL-OR-NEVER

TIME:BARF:  (P.C. = 14)
   Arg 0 (FORMAT-STRING): "~S encountered where number expected in time interval spec."
   Rest arg (FORMAT-ARGS): ("Two")

TIME:TIME-INTERVAL-TO-SECONDS:  (P.C. = 37)
   Arg 0 (STRING): "Two hours"

TIME:PARSE-INTERVAL-OR-NEVER:  (P.C. = 27)
   Arg 0 (STRING): "Two hours"
   Local 0 (STRING): "Two hours"
   --Defaulted args:--
   Arg 1 (START): NIL
   Arg 2 (END): NIL

SI:*EVAL:  (P.C. = 403)
   Arg 0 (FORM): (TIME:PARSE-INTERVAL-OR-NEVER "Two hours")
   Local 0 (FORM): NIL
   Arg 1 (ENV): NIL
   Arg 2 (HOOK): NIL

TOOLS:EVAL-INSTANCE:  (P.C. = 27)  (from B:>lmlib>tools)
   Arg 0 (FORM): (TIME:PARSE-INTERVAL-OR-NEVER "Two hours")
   Arg 1 (ENVIRONMENT): NIL
   --Defaulted args:--
   Arg 2: NIL

SI:*EVAL:  (P.C. = 370)
   Arg 0 (FORM): (+ (TIME:GET-UNIVERSAL-TIME) (TIME:PARSE-INTERVAL-OR-NEVER "Two hours"))
   Local 0 (FORM): NIL
   Arg 1 (ENV): NIL
   Arg 2 (HOOK): NIL

TOOLS:EVAL-INSTANCE:  (P.C. = 27)  (from B:>lmlib>tools)
   Arg 0 (FORM): (+ (TIME:GET-UNIVERSAL-TIME) (TIME:PARSE-INTERVAL-OR-NEVER "Two hours"))
   Arg 1 (ENVIRONMENT): NIL
   --Defaulted args:--
   Arg 2: NIL

SI:DIGESTED-DO:  (P.C. = 251)
   Arg 0 (BODY): (SI:DIGESTED-DO (DO ((USER:END **) 
                                      (USER:NOW ** **))
                                     ((> USER:NOW USER:END) USER:END)
                                   (NOISY-RUN-TASKS #>ALL-TASKS))
                                 NIL
                                 NIL
                                 (((TIME:GET-UNIVERSAL-TIME) USER:NOW) ((+ ** **) USER:END))
                                 NIL
                                 ((USER:NOW (TIME:GET-UNIVERSAL-TIME)))
                                 ((> USER:NOW USER:END) USER:END)
                                 (NOISY-RUN-TASKS #>ALL-TASKS))
   Local 0 (BODY): ((NOISY-RUN-TASKS #>ALL-TASKS))
   Arg 1 (ENV): NIL

Rest of stack:
SI:DIGEST-INTERNAL:  (P.C. = 30)
SI:DO-INTERNAL:  (P.C. = 160)
DO:  (P.C. = 11)
SI:*EVAL:  (P.C. = 165)
TOOLS:EVAL-INSTANCE:  (P.C. = 27)  (from B:>lmlib>tools)
ZWEI:FREE-EVAL:  (P.C. = 76)  (from OZ:OZ:<KWH.HACKS>GOBBLE)
SI:PROCESS-RUN-FUNCTION-INTERNAL:  (P.C. = 52)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
3-Jul-85 21:01:11-EDT,515;000000000000
Received: from MIT-BUGS-BUNNY by MIT-OZ via Chaosnet; 7 Jun 85 13:17-EDT
Received: by MIT-BUGS-BUNNY.ARPA (4.12/4.8)
	id AA25006; Fri, 7 Jun 85 13:17:41 edt
Date: Fri, 7 Jun 85 13:17:41 edt
From: Web Dove <dove@bugs-bunny>
To: GUMBY@MIT-MC.ARPA, dove@MIT-BUGS-BUNNY.ARPA
Subject: Re:  fix for supdup for vt100's
Cc: bug-lispm@MIT-OZ

I don't believe that it is a problem with the user end because the 
handling of insert/delete line/character is optional, and the user end
is not claiming to handle it.
3-Jul-85 21:01:12-EDT,5314;000000000000
Received: from MIT-GOLDILOCKS by MIT-OZ via Chaosnet; 7 Jun 85 15:20-EDT
Received: from KOALA by GOLDILOCKS via CHAOS with CHAOS-MAIL id 1638; Fri 7-Jun-85 15:22:52-EDT
Date: Friday, 7 June 1985, 15:21-EDT
From: David H. Kaufman <Sr.Kaufman at MIT-SPEECH>
Subject: Logical/Physical host confusion
To: BUG-LISPM at OZ
Message-ID: <850607152107.1.QUX@KOALA.MIT>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, Spire-Macros 5.1,
Attribute 5.6, Compute 5.4, Audio 4.0, Speech-Attributes 4.3,
Display 6.16, Speech-Layouts 6.2, Prtout 4.0, Versatec 5.0, Spire 16.0,
ZOO 6.8, ZOO-SPIRE 2.0, microcode TMC5-MIC 319, FEP 18,
4.2 Finger Compatibility, 4.2 FTP Compatibility,
Lazy Redisplay for Spire, New Transcription Patches, on Lisp Machine Koala:

I did a dired of SPIRE: FONTS;, then tried to do a dired of
">sys>fonts>".  >Sys>fonts> may be an invalid name component for the
logical host SPIRE; it is certainly valid for GOLDILOCKS.

>>Error: ">sys>fonts>" is an invalid name component for GOLDILOCKS (a LISPM host).
While in the function (:METHOD FS:PATHNAME :VALIDATE-COMPONENT)  (:METHOD FS:PATHNAME :VALIDATE)  (:METHOD FS:PATHNAME-HASH-TABLE-MIXIN :GET-PATHNAME)

(:METHOD FS:PATHNAME :VALIDATE-COMPONENT):  (P.C. = 40)
   Arg 0 (SELF): #<LMFS-PATHNAME "GOLDY:>s>fonts>foo.*.*">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:PATHNAME -- 8. IV's, 1. FL's 104221466>
   Arg 2 (OPERATION): :VALIDATE-COMPONENT
   Arg 3 (TEST-ARG): ">sys>fonts>"
   Arg 4 (TEST-ARG-LOC): #<DTP-LOCATIVE 30204260>
   Arg 5 (VALID-MSG): :RAW-NAME
   Arg 6 (TEST-MSG): :VALID-NAME-P
   Arg 7 (CASE-MSG): :CASE-NAME
   Arg 8 (UNCASE-MSG): :UNCASE-NAME
   Arg 9 (COMPONENT): :NAME
   Arg 10 (PRETTY-NAME): "name component"

(:METHOD FS:PATHNAME :VALIDATE):  (P.C. = 45)
   Arg 0 (SELF): #<LMFS-PATHNAME "GOLDY:>s>fonts>foo.*.*">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:PATHNAME -- 8. IV's, 1. FL's 104221466>
   Arg 2 (OPERATION): :VALIDATE

(:METHOD FS:PATHNAME-HASH-TABLE-MIXIN :GET-PATHNAME):  (P.C. = 30)
   Arg 0 (SELF): #<CASE-INSENSITIVE-PATHNAME-HASH-TABLE GOLDILOCKS>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:PATHNAME-HASH-TABLE-MIXIN -- 1. IV's, 0. FL's 104225614>
   Arg 2 (OPERATION): :GET-PATHNAME
   Arg 3 (DEV): :UNSPECIFIC
   Arg 4 (DIR): ("s" "fonts")
   Arg 5 (NAM): ">sys>fonts>"
   Arg 6 (TYP): :WILD
   Arg 7 (VRS): :WILD
   Arg 8 (OTHERS): NIL
   Arg 9 (KEY): (("s" "fonts") ">sys>fonts>" :WILD :WILD)

(:METHOD NET:NO-DEVICE-HOST-MIXIN :GET-PATHNAME):  (P.C. = 27)
   Arg 0 (SELF): #<LISPM-HOST GOLDILOCKS 1440000>
   Arg 1 (SELF-MAPPING-TABLE): NET:NO-DEVICE-HOST-MIXIN
   Arg 2 (OPERATION): :GET-PATHNAME
   Arg 3 (DEV): :UNSPECIFIC
   Arg 4 (DIR): ("s" "fonts")
   Arg 5 (NAM): ">sys>fonts>"
   Arg 6 (TYP): :WILD
   Arg 7 (VRS): :WILD
   Arg 8 (OTHERS): NIL

FS:MAKE-PATHNAME-1:  (P.C. = 607)
   Arg 0 (ACTOR): #<LMFS-PATHNAME "GOLDY:>S>FONTS>*.*.*">
   Rest arg (OPTIONS): (:DEFAULT-HOST #<LISPM-HOST GOLDILOCKS 1440000> :DEFAULT-DEVICE :UNSPECIFIC :DEFAULT-DIRECTORY ("S" "FONTS") :DEFAULT-NAME :WILD :DEFAULT-TYPE :WILD ...)

(:METHOD FS:PATHNAME :NEW-PATHNAME):  (P.C. = 22)
   Arg 0 (SELF): #<LMFS-PATHNAME "GOLDY:>S>FONTS>*.*.*">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:PATHNAME -- 8. IV's, 1. FL's 104221466>
   Arg 2 (OPERATION): :NEW-PATHNAME
   Rest arg (OPTIONS): (:DEVICE :UNSPECIFIC :DIRECTORY ("S" "FONTS") :NAME ">SYS>FONTS>" :TYPE :WILD :VERSION :WILD)

(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 67)
   Arg 0 (SELF): #<LMFS-PATHNAME "GOLDY:>S>FONTS>*.*.*">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:PATHNAME -- 8. IV's, 1. FL's 104221466>
   Arg 2 (.OPERATION.): :NEW-PATHNAME
   Rest arg (.DAEMON-CALLER-ARGS.): (:DEVICE :UNSPECIFIC :DIRECTORY ("S" "FONTS") :NAME ">SYS>FONTS>" :TYPE :WILD :VERSION :WILD)

(:METHOD FS:PATHNAME :TRANSLATE-WILD-PATHNAME):  (P.C. = 76)
   Arg 0 (SELF): #<LOGICAL-PATHNAME "SPIRE: FONTS; *.*.*">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:PATHNAME -- 8. IV's, 1. FL's 104206635>
   Arg 2 (OPERATION): :TRANSLATE-WILD-PATHNAME
   Arg 3 (WILD-PATHNAME): #<LMFS-PATHNAME "GOLDY:>S>FONTS>*.*.*">
   Arg 4 (SOURCE-PATHNAME): #<LOGICAL-PATHNAME "SPIRE: FONTS; >SYS>FONTS>.*.*">

Rest of stack:
(:METHOD FS:PATHNAME :TRANSLATE-WILD-PATHNAME-REVERSIBLE):  (P.C. = 11)
(:PROPERTY :TRANSLATE-WILD FS:TRANSLATION-FUNCTION):  (P.C. = 6)
(:METHOD FS:LOGICAL-HOST :INVOKE-TRANSLATION):  (P.C. = 36)
(:METHOD FS:LOGICAL-HOST :TRANSLATE):  (P.C. = 544)
(:METHOD FS:LOGICAL-PATHNAME :TRANSLATED-PATHNAME):  (P.C. = 67)
(:METHOD FS:LOGICAL-PATHNAME :DIRECTORY-LIST):  (P.C. = 11)
FS:DIRECTORY-LIST:  (P.C. = 114)
(:METHOD ZWEI:DIRED-NODE-MIXIN :REVERT):  (P.C. = 42)
(:METHOD ZWEI:DIRED-BUFFER :COMBINED :REVERT):  (P.C. = 11)
(:METHOD ZWEI:ZMACS-EDITOR :FIND-SPECIAL-BUFFER):  (P.C. = 45)
(:METHOD ZWEI:ZMACS-EDITOR :SELECT-SPECIAL-BUFFER):  (P.C. = 10)
ZWEI:DIRECTORY-EDIT:  (P.C. = 22)
ZWEI:COM-DIRED:  (P.C. = 5)
ZWEI:COM-EXTENDED-COMMAND:  (P.C. = 27)
ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 233)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 60)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 51)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
3-Jul-85 21:01:12-EDT,1857;000000000000  
Received: from MIT-HTVAX by MIT-OZ via Chaosnet; 7 Jun 85 16:48-EDT
Received: from SCRC-STONY-BROOK.ARPA (scrc-stony-brook.arpa.ARPA) by MIT-HTVAX.ARPA (4.12/4.7) 
	id AA01177; Fri, 7 Jun 85 16:27:37 edt
Received: from CARDINAL.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 249366; Thu 6-Jun-85 10:40:38-EDT
Date: Thu, 6 Jun 85 10:42 EDT
From: William M. York <York@SCRC-QUABBIN.ARPA>
Subject: Input history
To: STEVER%OZ@MIT-HTVAX.ARPA, BUG-LISPM%OZ@MIT-HTVAX.ARPA
In-Reply-To: <850605105216.2.STEVER@APIARY-4>
Message-Id: <850606104217.2.YORK@CARDINAL.SCRC.Symbolics.COM>

    Date: Wed, 5 Jun 85 10:52 EDT
    From: Stephen Robbins <STEVER%OZ@MIT-HTVAX.ARPA>

    My LISP Listener 1 input history is about 100 elements long.  I'd like
    to list the whole thing out.  I've tried setting
    ZWEI:*HISTORY-MENU-LENGTH* to large values (> 50), but the history
    always stops displaying after approximately 50 items.  I say
    approximately because the number of items displayed seems to change
    every time I type a command.

    I'm not sure if this is a LISPM bug, a documentation bug, or extreme
    density on my part...

I have noticed the behavior you describe before but your message
prompted me to do a little investigation.  The problem is that the
history-displaying code (zwei:display-history-menu) listens for keyboard
input during the display and stops displaying if it gets any.  Thus a
premature SPACE intended for a **MORE** break will cause the history
display to stop immediately.  

Bug-lispm: I think that this is a bug (it is certainly unexpected
behavior), but I don't have the time now to study the implications of
changing this function (perhaps it should simply ignore spaces, perhaps
it should only stop on Abort).  Does anyone else know anything about
this?

3-Jul-85 21:01:13-EDT,9251;000000000000   
Received: from MIT-ELVIS by MIT-OZ via Chaosnet; 7 Jun 85 23:19-EDT
Date: Fri, 7 Jun 85 23:20 EDT
From: Chris Lindblad <CJL@OZ>
Subject: ZMAIL BUG
To: BUG-LISPM@OZ
Message-ID: <850607232043.3.CJL@ELVIS>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.3,
microcode TMC5-MIC 319, FEP 22, on Lisp Machine Elvis Presley:

Tk's logged into elvis. CJL logs in. He types system-m, gets zmail,
which has nothing loaded in. Types g, and CJL's mail is loaded into the
machine. Great. He deals with his mail, and types s. IT THEN PROCEEDS TO
SAVE CJL's MAIL IN TK's MAIL FILE. Bad computer.

(This bug trace was produced typing s a second time, after I quickly
typed c-abort for the first s. I typed s the second time to make a
backtrace to show you.)

>>Error: File system bug on host MC:
         Channel not open
         For MC: TK; TK BABYL
While in the function (:METHOD FS:HOST-UNIT :COMMAND)  (:METHOD FS:FILE-DATA-STREAM-MIXIN :COMMAND)  (:METHOD FS:FILE-OUTPUT-STREAM-MIXIN :REAL-CLOSE)

(:METHOD FS:HOST-UNIT :COMMAND):  (P.C. = 236)
   Arg 0 (SELF): #<HOST-UNIT 722105>
   Arg 1 (SELF-MAPPING-TABLE): FS:HOST-UNIT
   Arg 2 (OPERATION): :COMMAND
   Arg 3 (MARK-P): :OUTPUT
   Arg 4 (STREAM-OR-HANDLE): #<FILE-OUTPUT-CHARACTER-STREAM "MC: TK; TK BABYL" 27271726>
   Arg 5 (SIMPLE-P): NIL
   Arg 6 (WHOSTATE): "Close"
   Rest arg (COMMANDS): ("CLOSE")
   Local 8 (HANDLE): "O2509"
   Local 9 (STREAM): #<FILE-OUTPUT-CHARACTER-STREAM "MC: TK; TK BABYL" 27271726>
   Local 10 (PKT): #<Chaos Packet 6004067>
   Local 11 (SUCCESS): NIL
   Local 12 (STRING): "O2509 ERROR BUG F Channel not open"
   Local 13 (TRANSACTION-ID): "T2516"
   Local 14 (CREATE-P): NIL
   Local 15 (CONDITION): NIL
   Local 16: T
   Local 17: #<CASE-HANDLER 120711625>
   Local 18: (#<CASE-HANDLER 121426367> #<LEXICAL-CLOSURE (:INTERNAL ** 0.) 43640056>)
   Local 19: (#<CASE-HANDLER 120711625> #<CASE-HANDLER 121426367> #<LEXICAL-CLOSURE (:INTERNAL ** 0.) 43640056>)

(:METHOD FS:FILE-DATA-STREAM-MIXIN :COMMAND):  (P.C. = 14)
   Arg 0 (SELF): #<FILE-OUTPUT-CHARACTER-STREAM "MC: TK; TK BABYL" 27271726>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:FILE-DATA-STREAM-MIXIN -- 6. IV's, 0. FL's 104532157>
   Arg 2 (OPERATION): :COMMAND
   Arg 3 (MARK-P): :OUTPUT
   Arg 4 (WHOSTATE): "Close"
   Arg 5 (COM): "CLOSE"
   Rest arg (STRINGS): NIL

(:METHOD FS:FILE-OUTPUT-STREAM-MIXIN :REAL-CLOSE):  (P.C. = 56)
   Arg 0 (SELF): #<FILE-OUTPUT-CHARACTER-STREAM "MC: TK; TK BABYL" 27271726>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:FILE-OUTPUT-STREAM-MIXIN -- 6. IV's, 1. FL's 104532117>
   Arg 2 (OPERATION): :REAL-CLOSE
   Arg 3 (ABORT-P): :ABORT

(:METHOD FS:FILE-DATA-STREAM-MIXIN :CLOSE):  (P.C. = 26)
   Arg 0 (SELF): #<FILE-OUTPUT-CHARACTER-STREAM "MC: TK; TK BABYL" 27271726>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:FILE-DATA-STREAM-MIXIN -- 6. IV's, 0. FL's 104532157>
   Arg 2 (OPERATION): :CLOSE
   Arg 3 (ABORTP): :ABORT

(:METHOD FS:FILE-OUTPUT-CHARACTER-STREAM :COMBINED :CLOSE):  (P.C. = 21)
   Arg 0 (SELF): #<FILE-OUTPUT-CHARACTER-STREAM "MC: TK; TK BABYL" 27271726>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:FILE-OUTPUT-CHARACTER-STREAM -- 1. IV's, 8. FL's 104532127>
   Arg 2 (.OPERATION.): :CLOSE
   Rest arg (.DAEMON-CALLER-ARGS.): (:ABORT)

(:METHOD ZWEI:FILE-MAIL-BUFFER :ABORT-SAVE):  (P.C. = 23)
   Arg 0 (SELF): #<BABYL-BUFFER "MC: TK; TK BABYL" 723110>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:FILE-MAIL-BUFFER -- 9. IV's, 1. FL's 142630564>
   Arg 2 (OPERATION): :ABORT-SAVE
   Arg 3 (TWICE): NIL

(:INTERNAL (:METHOD ZWEI:BABYL-BUFFER :COMBINED :ABORT-SAVE) 0.):  (P.C. = 11)
   Arg 0 (SELF): #<BABYL-BUFFER "MC: TK; TK BABYL" 723110>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:BABYL-BUFFER -- 3. IV's, 6. FL's 142630520>
   Arg 2 (.OPERATION.): :ABORT-SAVE
   Rest arg (.DAEMON-CALLER-ARGS.): (NIL)

(:METHOD ZWEI:MSG-BUFFER :WHOPPER :ABORT-SAVE):  (P.C. = 30)
   Arg 0 (SELF): #<BABYL-BUFFER "MC: TK; TK BABYL" 723110>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:MSG-BUFFER -- 15. IV's, 0. FL's 142630543>
   Arg 2 (.WHOPPER-CONTINUATION.): #<DTP-COMPILED-FUNCTION (:INTERNAL (:METHOD ZWEI:BABYL-BUFFER :COMBINED :ABORT-SAVE) 0.) 47714400>
   Arg 3 (.OLD-SELF-MAPPING-TABLE.): #<Map to flavor ZWEI:BABYL-BUFFER -- 3. IV's, 6. FL's 142630520>
   Arg 4 (.OPERATION.): :ABORT-SAVE
   --Defaulted args:--
   Arg 5 (TWICE): NIL

(:METHOD ZWEI:BABYL-BUFFER :COMBINED :ABORT-SAVE):  (P.C. = 13)
   Arg 0 (SELF): #<BABYL-BUFFER "MC: TK; TK BABYL" 723110>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:BABYL-BUFFER -- 3. IV's, 6. FL's 142630520>
   Arg 2 (.OPERATION.): :ABORT-SAVE
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

ZWEI:FOREGROUND-BACKGROUND-FINISH:  (P.C. = 106)
   Arg 0 (BUFFER): #<BABYL-BUFFER "MC: TK; TK BABYL" 723110>
   --Defaulted args:--
   Arg 1 (ABORT-P): T

(:METHOD ZWEI:MSG-BUFFER :BEFORE :EXPUNGE):  (P.C. = 4)
   Arg 0 (SELF): #<BABYL-BUFFER "MC: TK; TK BABYL" 723110>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:MSG-BUFFER -- 15. IV's, 0. FL's 142630543>
   Arg 2 (OPERATION): :EXPUNGE
   Arg 3 (IGNORE): T

(:METHOD ZWEI:ITS-BUFFER-MIXIN :COMBINED :EXPUNGE):  (P.C. = 31)
   Arg 0 (SELF): #<BABYL-BUFFER "MC: TK; TK BABYL" 723110>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ITS-BUFFER-MIXIN -- 0. IV's, 3. FL's 142630534>
   Arg 2 (.OPERATION.): :EXPUNGE
   Rest arg (.DAEMON-CALLER-ARGS.): (T)

ZWEI:EXPUNGE-SEQUENCE:  (P.C. = 6)
   Arg 0 (SEQUENCE): #<BABYL-BUFFER "MC: TK; TK BABYL" 723110>
   --Defaulted args:--
   Arg 1 (DELETED-MSGS): T

ZWEI:ZMAIL-SAVE-ALL:  (P.C. = 21)

ZWEI:COM-ZMAIL-SAVE:  (P.C. = 16)

ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
   Arg 0 (COMMAND): ZWEI:COM-ZMAIL-SAVE
   Arg 1 (CHAR): 115.
   --Defaulted args:--
   Arg 2 (PREFIX-CHAR): NIL
   Arg 3 (HOOK-LIST): NIL

ZWEI:ZMAIL-COMMAND-EXECUTE:  (P.C. = 6)
   Arg 0: ZWEI:COM-ZMAIL-SAVE

(:METHOD ZWEI:ZMAIL-FRAME :PROCESS-COMMAND-CHAR):  (P.C. = 7)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 43200617 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-FRAME -- 65. IV's, 20. FL's 142611405>
   Arg 2 (OPERATION): :PROCESS-COMMAND-CHAR
   Arg 3 (CH): 115.

(:INTERNAL (:INTERNAL (:METHOD ZWEI:ZMAIL-FRAME :COMBINED :PROCESS-COMMAND-CHAR) 0.) 0.):  (P.C. = 10)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 43200617 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-FRAME -- 65. IV's, 20. FL's 142611405>
   Arg 2 (.OPERATION.): :PROCESS-COMMAND-CHAR
   Rest arg (.DAEMON-CALLER-ARGS.): (115.)

(:METHOD ZWEI:ZMAIL-COMMAND-LOOP-MIXIN :WHOPPER :PROCESS-COMMAND-CHAR):  (P.C. = 21)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 43200617 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-COMMAND-LOOP-MIXIN -- 6. IV's, 0. FL's 142611503>
   Arg 2 (.WHOPPER-CONTINUATION.): #<DTP-COMPILED-FUNCTION (:INTERNAL (:INTERNAL (:METHOD ZWEI:ZMAIL-FRAME :COMBINED :PROCESS-COMMAND-CHAR) 0.) 0.) 47674121>
   Arg 3 (.OLD-SELF-MAPPING-TABLE.): #<Map to flavor ZWEI:ZMAIL-FRAME -- 65. IV's, 20. FL's 142611405>
   Arg 4 (.OPERATION.): :PROCESS-COMMAND-CHAR
   Arg 5 (CHAR): 115.

(:INTERNAL (:METHOD ZWEI:ZMAIL-FRAME :COMBINED :PROCESS-COMMAND-CHAR) 0.):  (P.C. = 13)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 43200617 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-FRAME -- 65. IV's, 20. FL's 142611405>
   Arg 2 (.OPERATION.): :PROCESS-COMMAND-CHAR
   Rest arg (.DAEMON-CALLER-ARGS.): (115.)

(:METHOD ZWEI:ZMAIL-FRAME :WHOPPER :PROCESS-COMMAND-CHAR):  (P.C. = 21)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 43200617 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-FRAME -- 65. IV's, 20. FL's 142611405>
   Arg 2 (.WHOPPER-CONTINUATION.): #<DTP-COMPILED-FUNCTION (:INTERNAL (:METHOD ZWEI:ZMAIL-FRAME :COMBINED :PROCESS-COMMAND-CHAR) 0.) 47674106>
   Arg 3 (.OLD-SELF-MAPPING-TABLE.): #<Map to flavor ZWEI:ZMAIL-FRAME -- 65. IV's, 20. FL's 142611405>
   Arg 4 (.OPERATION.): :PROCESS-COMMAND-CHAR
   Arg 5 (CHAR): 115.

(:METHOD ZWEI:ZMAIL-FRAME :COMBINED :PROCESS-COMMAND-CHAR):  (P.C. = 12)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 43200617 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-FRAME -- 65. IV's, 20. FL's 142611405>
   Arg 2 (.OPERATION.): :PROCESS-COMMAND-CHAR
   Rest arg (.DAEMON-CALLER-ARGS.): (115.)

(:METHOD ZWEI:ZMAIL-FRAME :COMMAND-LOOP):  (P.C. = 143)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 43200617 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-FRAME -- 65. IV's, 20. FL's 142611405>
   Arg 2 (OPERATION): :COMMAND-LOOP

(:METHOD ZWEI:ZMAIL-FRAME :COMBINED :COMMAND-LOOP):  (P.C. = 70)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 43200617 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-FRAME -- 65. IV's, 20. FL's 142611405>
   Arg 2 (.OPERATION.): :COMMAND-LOOP
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

ZWEI:ZMAIL-PROCESS-TOP-LEVEL:  (P.C. = 105)
   Arg 0 (WINDOW): #<ZMAIL-FRAME Main Zmail Window 43200617 exposed>

SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
   Arg 0 (IGNORE): NIL
3-Jul-85 21:01:13-EDT,568;000000000000  
Received: from MIT-ELVIS by MIT-OZ via Chaosnet; 7 Jun 85 23:24-EDT
Date: Fri, 7 Jun 85 23:25 EDT
From: Chris Lindblad <CJL@OZ>
Subject: ZMAIL BUG
To: BUG-LISPM@OZ
Message-ID: <850607232538.1.CJL@ELVIS>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.3,
microcode TMC5-MIC 319, FEP 22, on Lisp Machine Elvis Presley:

Well, maybe not. Apparently TK's mail was being saved into TK's mail
file, even though I didn't even know he had mail sitting on this machine
that had to be saved. I really don't think "s" should do this. It gave
me a real panic.
3-Jul-85 21:01:13-EDT,5288;000000000000 
Received: from MIT-REAGAN by MIT-OZ via Chaosnet; 9 Jun 85 16:18-EDT
Received: from SCRC-STONY-BROOK by MIT-REAGAN via INTERNET with SMTP id 5515; 9 Jun 85 16:25:40-EDT
Received: from NEPONSET.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 250699; Sun 9-Jun-85 16:17:24-EDT
Date: Sun, 9 Jun 85 16:19 EDT
From: David C. Plummer in disguise <DCP@SCRC-QUABBIN.ARPA>
Subject: load-patches blowout
To: CJL@MIT-REAGAN.ARPA, BUG-LISPM@OZ.mit
In-Reply-To: <850604151423.1.FILE-SERVER@MIT-REAGAN>
Message-ID: <850609161912.2.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Tue, 4 Jun 85 15:14 EDT
    From: CJL@MIT-REAGAN

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, Mailer 43.0, AISite 9.1,
    microcode TMC5-MIC 319, Network-Security patch,
    Update-Internet-Namespace patch, Server-Finger patch, on Lisp Machine Ronald Reagan:

    did a (load-patches)

I wish I saw more of the backtrace.  The last full arglist shown has a
FILE-TYPE argument of NIL, for reasons I don't know because of lack of
backtrace.

    fs:*default-pathname-defaults* => 
    ((#<LISPM-HOST REAGAN 56326117> . #<LMFS-PATHNAME "B:>aisite>patch>AISite-9>*.*.*">)
     (#<TOPS20-HOST XX 56323715> . #<TOPS20-PATHNAME "XX:PS:<SYSTEM>HOSTS.TXT.*">)
     (NIL . #<LMFS-PATHNAME "B:>aisite>patch>AISite-9>*.*.*">))

    >>Error: Wildcard pathnames are not allowed for the OPEN operation.
	     For B:>aisite>patch>AISite-9>AISite-9-2.*
    While in the function (:METHOD LMFS:LOCAL-LMFS-ACCESS-MIXIN :OPEN)  (:METHOD FS:ACTIVE-PATHNAME-MIXIN :OPEN)  FS:COMMON-LISP-OPEN

    (:METHOD LMFS:LOCAL-LMFS-ACCESS-MIXIN :OPEN):  (P.C. = 10)
       Arg 0 (SELF): #<LOCAL-LMFS-ACCESS-PATH B using LOCAL-FILE 12255160>
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor LMFS:LOCAL-LMFS-ACCESS-MIXIN -- 1. IV's, 0. FL's 1101504>
       Arg 2 (OPERATION): :OPEN
       Arg 3 (PATHNAME): #<LMFS-PATHNAME "B:>aisite>patch>AISite-9>AISite-9-2.*">
       Arg 4 (PATH): #<LMFS-PATHNAME "B:>aisite>patch>AISite-9>AISite-9-2.*">
       Rest arg (ARGS): (:DIRECTION :PROBE)

    (:METHOD FS:ACTIVE-PATHNAME-MIXIN :OPEN):  (P.C. = 14)
       Arg 0 (SELF): #<LMFS-PATHNAME "B:>aisite>patch>AISite-9>AISite-9-2.*">
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:ACTIVE-PATHNAME-MIXIN -- 1. IV's, 0. FL's 104225115>
       Arg 2 (OPERATION): :OPEN
       Arg 3 (PATHNAME): #<LMFS-PATHNAME "B:>aisite>patch>AISite-9>AISite-9-2.*">
       Rest arg (OPTIONS): (:DIRECTION :PROBE)

    FS:COMMON-LISP-OPEN:  (P.C. = 450)
       Arg 0 (PATHNAME): #<LMFS-PATHNAME "B:>aisite>patch>AISite-9>AISite-9-2.*">
       Arg 1 (KEYWORD-ARGS): (:DIRECTION :PROBE)

    OPEN:  (P.C. = 257)
       Arg 0 (PATHNAME): #<LMFS-PATHNAME "B:>aisite>patch>AISite-9>AISite-9-2">
       Local 0 (PATHNAME): #<LMFS-PATHNAME "B:>aisite>patch>AISite-9>AISite-9-2.*">
       Rest arg (KEYWORD-ARGS): (:DIRECTION :PROBE)

    PROBEF:  (P.C. = 57)
       Arg 0 (FILE): #<LMFS-PATHNAME "B:>aisite>patch>AISite-9>AISite-9-2">

    (:INTERNAL FS:HIERARCHICAL-DIRECTORY-PATCH-FILE-SEARCH 0. FS:PROBE-PATCH-FILE):  (P.C. = 75)
       Arg 0 (.LEXICAL-ENVIRONMENT-POINTER.): #<DTP-LOCATIVE 500631>
       Rest arg: (:TRY-PATHNAME #<LMFS-PATHNAME "B:>aisite>patch>AISite-9>AISite-9-2"> :SUCCESS-TYPE :NEW)

    FS:HIERARCHICAL-DIRECTORY-PATCH-FILE-SEARCH:  (P.C. = 20)
       Arg 0 (TRY-CONTINUATION): #<LEXICAL-CLOSURE (:INTERNAL ** 0. FS:TRY-CONTINUATION) 500610>
       Arg 1 (TRY-OLD): #<LEXICAL-CLOSURE (:INTERNAL ** 1. FS:TRY-OLD) 500606>

    (:METHOD FS:HIERARCHICAL-DIRECTORY-MIXIN :WHOPPER :PATCH-FILE-PATHNAME):  (P.C. = 134)
       Arg 0 (SELF): #<LMFS-PATHNAME "B:>aisite>patch>">
       Arg 1 (SELF-MAPPING-TABLE): FS:HIERARCHICAL-DIRECTORY-MIXIN
       Arg 2 (.WHOPPER-CONTINUATION.): #<DTP-COMPILED-FUNCTION (:INTERNAL (:METHOD FS:LMFS-PATHNAME :COMBINED :PATCH-FILE-PATHNAME) 0.) 14216472>
       Arg 3 (.OLD-SELF-MAPPING-TABLE.): #<Map to flavor FS:LMFS-PATHNAME -- 5. IV's, 9. FL's 120666400>
       Arg 4 (.OPERATION.): :PATCH-FILE-PATHNAME
       Arg 5 (SYSTEM-NAME): "AISite"
       Arg 6 (SAME-DIRECTORY-P): NIL
       Arg 7 (PATOM): "PATCH"
       Arg 8 (PATCH-TYPE): :PATCH-FILE
       Arg 9 (MAJOR-VERSION): 9.
       Arg 10 (MINOR-VERSION): 2.
       Arg 11 (FILE-TYPE): NIL

    Rest of stack:
    (:METHOD FS:LMFS-PATHNAME :COMBINED :PATCH-FILE-PATHNAME):  (P.C. = 13)
    (:PROPERTY FS:PATCH-FILE FS:TRANSLATION-FUNCTION):  (P.C. = 114)
    (:METHOD FS:LOGICAL-HOST :INVOKE-TRANSLATION):  (P.C. = 36)
    (:METHOD FS:LOGICAL-HOST :TRANSLATE-INTERNAL):  (P.C. = 36)
    (:METHOD FS:LOGICAL-HOST :TRANSLATE):  (P.C. = 177)
    (:METHOD FS:LOGICAL-PATHNAME :TRANSLATED-PATHNAME):  (P.C. = 67)
    (:DEFUN-METHOD FS:LOGICAL-PATHNAME-PASS-ON):  (P.C. = 5)
    (:METHOD FS:LOGICAL-PATHNAME :PUTPROP):  (P.C. = 10)
    SI:PATCH-SYSTEM-PATHNAME:  (P.C. = 57)
    SI:LOAD-PATCH:  (P.C. = 14)
    LOAD-PATCHES:  (P.C. = 554)
    SI:*EVAL:  (P.C. = 403)
    (:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0.):  (P.C. = 152)
    TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
    SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
    SI:LISP-COMMAND-LOOP:  (P.C. = 67)
    SI:LISP-TOP-LEVEL1:  (P.C. = 5)
    SI:LISP-TOP-LEVEL:  (P.C. = 7)


3-Jul-85 21:01:14-EDT,1319;000000000000
Received: from MIT-HTVAX by MIT-OZ via Chaosnet; 9 Jun 85 16:27-EDT
Received: from SCRC-STONY-BROOK.ARPA (scrc-stony-brook.arpa.ARPA) by MIT-HTVAX.ARPA (4.12/4.7) 
	id AA04268; Sun, 9 Jun 85 16:23:50 edt
Received: from NEPONSET.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 250705; Sun 9-Jun-85 16:24:55-EDT
Date: Sun, 9 Jun 85 16:26 EDT
From: David C. Plummer in disguise <DCP@SCRC-QUABBIN.ARPA>
Subject: more supdup 
To: David Vinayak Wallace <Gumby%MIT-MC@MIT-HTVAX.ARPA>,
        Bug-Lispm%OZ@MIT-HTVAX.ARPA
In-Reply-To: <850605112806.3.GUMBY@LENNON>
Message-Id: <850609162642.4.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Wed, 5 Jun 85 11:28 EDT
    From: David Vinayak Wallace <Gumby%MIT-MC@MIT-HTVAX.ARPA>

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.2,
    microcode TMC5-MIC 319, on Lisp Machine John Lennon:

    (when supdupping in from ITS)
    If I exit supdup asking supdup to log me out of the remote lispm (i.e.
    <break>L) the connexion is dropped all right, but I find I am still
    logged into the lispm.
LispMs are not timesharing machines.  Perhaps it should do this if you
did LOGIN during the session and nobody was previous logged in.  It is
VERY wrong to arbitrarily do a LOGOUT.  Consider supduping to the file
server...

3-Jul-85 21:01:14-EDT,1147;000000000000  
Received: from MIT-REAGAN by MIT-OZ via Chaosnet; 9 Jun 85 16:28-EDT
Received: from SCRC-STONY-BROOK by MIT-REAGAN via INTERNET with SMTP id 5516; 9 Jun 85 16:35:38-EDT
Received: from NEPONSET.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 250707; Sun 9-Jun-85 16:27:22-EDT
Date: Sun, 9 Jun 85 16:29 EDT
From: David C. Plummer in disguise <DCP@SCRC-QUABBIN.ARPA>
Subject: cl:intern
To: David Vinayak Wallace <Gumby@MIT-MC.ARPA>, BUG-LISPM@OZ.mit
In-Reply-To: <850605112425.1.GUMBY@LENNON>
Message-ID: <850609162910.6.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Wed, 5 Jun 85 11:24 EDT
    From: David Vinayak Wallace <Gumby@MIT-MC>

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.2,
    microcode TMC5-MIC 319, on Lisp Machine John Lennon:

    Page 185 of the silver bible claims common-lisp's INTERN will not accept
    a symbol.  However, CL:INTERN will happily accept a symbol.

Fixed in Release 7 when there is only one type of string.  Currently,
CL:INTERN converts the first argument to a ZL string (or just returns
the symbol if given a symbol) and then calls ZL:INTERN.  Sigh.

3-Jul-85 21:01:14-EDT,1461;000000000000   
Received: from MIT-REAGAN by MIT-OZ via Chaosnet; 9 Jun 85 16:39-EDT
Received: from SCRC-YUKON.ARPA by MIT-REAGAN via INTERNET with SMTP id 5517; 9 Jun 85 16:46:41-EDT
Received: from NEPONSET.SCRC.Symbolics.COM by SCRC-YUKON.ARPA via CHAOS with CHAOS-MAIL id 130311; Sun 9-Jun-85 15:27:39-EDT
Date: Sun, 9 Jun 85 16:39 EDT
From: David C. Plummer in disguise <DCP@SCRC-QUABBIN.ARPA>
Subject: fix for supdup for vt100's
To: Web Dove <dove@MIT-BUGS-BUNNY.ARPA>,
    David Vinayak Wallace <GUMBY@MIT-MC.ARPA>, bug-lispm@oz.mit
In-Reply-To: The message of 5 Jun 85 22:25-EDT from Web Dove <dove@bugs-bunny>,
             <[MIT-MC.ARPA].533534.850606.GUMBY>
Message-ID: <850609163945.8.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Wed, 5 Jun 85 22:25:15 edt
    From: Web Dove <dove@bugs-bunny>

    Does anybody have a fix for the SUPDUP service that deals with the fact some
    terminals don't have delete character (like vt100's)?  When I try to delete
    internal parts of a command line, nothing happens until I type ^L.


    Date: Thu,  6 Jun 85 22:15:49 EST
    From: David Vinayak Wallace <GUMBY@MIT-MC.ARPA>

    Isn't this a problem with your supdup USER end?

After eliminating all the possible cases, that seems to be the correct
counter-question.  SUPDUP is a generic protocol; it knows not that you
are on a VT100.  The user program is supposed to supply the server side
with the functionality capable of the terminal.

3-Jul-85 21:01:15-EDT,5820;000000000000    
Received: from MIT-REAGAN by MIT-OZ via Chaosnet; 9 Jun 85 17:22-EDT
Date: Sun, 9 Jun 85 17:29 EDT
From: CJL@OZ
Sender: File-Server@MIT-REAGAN
Subject: CP Show Directory no robust about defaults
To: BUG-LISPM@OZ
Message-ID: <850609172918.3.FILE-SERVER@MIT-REAGAN>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, Mailer 43.0, AISite 9.4,
microcode TMC5-MIC 319, Network-Security patch,
Update-Internet-Namespace patch, Server-Finger patch, on Lisp Machine Ronald Reagan:

I typed :show directory, and then a space. Didn't even type a return.
The current default was B:>foo.directory, which doesn't exist, but :show
directory shouldn't blow out because of this.

fs:*default-pathname-defaults*
=>
((#<LISPM-HOST REAGAN 56326117> . #<LMFS-PATHNAME "B:>foo.directory">)
 (#<LISPM-HOST ELVIS 56306273> . #<LMFS-PATHNAME "ELVIS:>carry>install.notes">)
 (#<TOPS20-HOST XX 56323715> . #<TOPS20-PATHNAME "XX:PS:<SYSTEM>HOSTS.TXT.*">)
 (NIL . #<LMFS-PATHNAME "B:>foo.directory">))

>>Error: The file was not found.
         For B:>foo.directory
While in the function LMFS:OPEN-LOCAL-LMFS  (:METHOD LMFS:LOCAL-LMFS-ACCESS-MIXIN :OPEN)  (:METHOD FS:ACTIVE-PATHNAME-MIXIN :OPEN)

LMFS:OPEN-LOCAL-LMFS:  (P.C. = 623)
   Arg 0 (PATHNAME): #<LMFS-PATHNAME "B:>foo.directory">
   Arg 1 (LOGPATH): #<LMFS-PATHNAME "B:>foo.directory">
   Arg 2 (ACCESS-PATH): #<LOCAL-LMFS-ACCESS-PATH B using LOCAL-FILE 12255160>
   Arg 3 (OPTIONS): (:DIRECTION :INPUT)
   Local 4 (MODE): :INPUT
   Local 5 (TYPE): :CHARACTERS
   Local 6 (IF-EXISTS): NIL
   Local 7 (IF-NOT-EXISTS): :ERROR
   Local 8 (PROBE-DIRECTORY): NIL
   Local 9 (DELETED-P): NIL
   Local 10 (BYTE-SIZE): NIL
   Local 11 (RANDOM-OPTIONS): NIL
   Local 12 (FULL-PROBE-OPENING): NIL

(:METHOD LMFS:LOCAL-LMFS-ACCESS-MIXIN :OPEN):  (P.C. = 15)
   Arg 0 (SELF): #<LOCAL-LMFS-ACCESS-PATH B using LOCAL-FILE 12255160>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor LMFS:LOCAL-LMFS-ACCESS-MIXIN -- 1. IV's, 0. FL's 1101504>
   Arg 2 (OPERATION): :OPEN
   Arg 3 (PATHNAME): #<LMFS-PATHNAME "B:>foo.directory">
   Arg 4 (PATH): #<LMFS-PATHNAME "B:>foo.directory">
   Rest arg (ARGS): (:DIRECTION :INPUT)

(:METHOD FS:ACTIVE-PATHNAME-MIXIN :OPEN):  (P.C. = 14)
   Arg 0 (SELF): #<LMFS-PATHNAME "B:>foo.directory">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:ACTIVE-PATHNAME-MIXIN -- 1. IV's, 0. FL's 104225115>
   Arg 2 (OPERATION): :OPEN
   Arg 3 (PATHNAME): #<LMFS-PATHNAME "B:>foo.directory">
   Rest arg (OPTIONS): (:DIRECTION :INPUT)

FS:COMMON-LISP-OPEN:  (P.C. = 450)
   Arg 0 (PATHNAME): #<LMFS-PATHNAME "B:>foo.directory">
   Arg 1 (KEYWORD-ARGS): NIL

OPEN:  (P.C. = 257)
   Arg 0 (PATHNAME): #<LMFS-PATHNAME "B:>foo.directory">
   Rest arg (KEYWORD-ARGS): NIL

#:COM-SHOW-DIRECTORY-PATHNAME-MENTIONED-DEFAULT:  (P.C. = 33)

SI:READ-POS-ARG:  (P.C. = 61)
   Arg 0 (STREAM): #:TERMINAL-IO-SYN-STREAM
   Arg 1 (ARG): #<POS-CP-ARG Pathname #o121735001>
   --Defaulted args:--
   Arg 2 (FOR-KEYWORD-ARG): NIL

SI:READ-COMMAND-INTERNAL:  (P.C. = 200)
   Arg 0 (STREAM): #:TERMINAL-IO-SYN-STREAM
   Arg 1 (COMMAND-TABLE): #<COMTAB User 121373326>

SI:READ-COMMAND-DISPATCH:  (P.C. = 7)
   Arg 0 (STREAM): #:TERMINAL-IO-SYN-STREAM
   Arg 1 (COMMAND-TABLE): #<COMTAB User 121373326>

(:INTERNAL READ-COMMAND-OR-FORM 0.):  (P.C. = 31)
   Arg 0 (.LEXICAL-ENVIRONMENT-POINTER.): #<DTP-LOCATIVE 500152>

(:INTERNAL SI:CP-INPUT-EDITING 0.):  (P.C. = 75)
   Arg 0 (.LEXICAL-ENVIRONMENT-POINTER.): #<DTP-LOCATIVE 500211>

(:DEFUN-METHOD SI:INPUT-EDITOR-READ):  (P.C. = 53)
   Arg 0 (SELF): #<LISP-LISTENER Lisp Listener 1 43200216 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:INTERACTIVE-STREAM -- 20. IV's, 2. FL's 104234231>
   Arg 2 (READ-FUNCTION): #<LEXICAL-CLOSURE (:INTERNAL SI:CP-INPUT-EDITING 0.) 500215>
   Arg 3 (READ-ARGS): NIL

(:METHOD SI:INTERACTIVE-STREAM :INPUT-EDITOR):  (P.C. = 131)
   Arg 0 (SELF): #<LISP-LISTENER Lisp Listener 1 43200216 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:INTERACTIVE-STREAM -- 20. IV's, 2. FL's 104234231>
   Arg 2 (OPERATION): :INPUT-EDITOR
   Arg 3 (READ-FUNCTION): #<LEXICAL-CLOSURE (:INTERNAL SI:CP-INPUT-EDITING 0.) 500215>
   Rest arg (READ-ARGS): NIL

SI:WITH-INPUT-EDITING-INTERNAL:  (P.C. = 113)
   Arg 0 (STREAM): #:TERMINAL-IO-SYN-STREAM
   Arg 1 (CONTINUATION): #<LEXICAL-CLOSURE (:INTERNAL SI:CP-INPUT-EDITING 0.) 500215>
   Arg 2 (ACTIVATORS): NIL
   Arg 3 (LINE-P): NIL
   Arg 4 (INPUT-EDITOR-OPTIONS): NIL

SI:CP-INPUT-EDITING:  (P.C. = 76)
   Arg 0 (STREAM): #:TERMINAL-IO-SYN-STREAM
   Arg 1 (PROMPT): ""
   Arg 2 (BLANK-LINE-MODE): :REPROMPT
   Arg 3 (CONTINUATION): #<LEXICAL-CLOSURE (:INTERNAL READ-COMMAND-OR-FORM 0.) 500154>

READ-COMMAND-OR-FORM:  (P.C. = 146)
   Arg 0 (STREAM): #:TERMINAL-IO-SYN-STREAM
   Rest arg: (:DISPATCH-MODE :FORM-PREFERRED :BLANK-LINE-MODE :REPROMPT :PROMPT "")

SI:CP-COMMAND-LOOP-READ-FUNCTION:  (P.C. = 13)

(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0.):  (P.C. = 105)
   Arg 0 (.LEXICAL-ENVIRONMENT-POINTER.): #<DTP-LOCATIVE 500047>

TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
   Arg 0 (NEW-MODE): :BLAST
   Arg 1 (STREAM): #:TERMINAL-IO-SYN-STREAM
   Arg 2 (CONTINUATION): #<LEXICAL-CLOSURE (:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0.) 500054>

SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
   Arg 0 (NAME): "Lisp Top Level"
   Arg 1 (ABORT-FUNCTION): NIL
   Arg 2 (READ-FUNCTION): NIL
   Arg 3 (EVAL-FUNCTION): NIL
   Arg 4 (PRINT-FUNCTION): NIL

SI:LISP-COMMAND-LOOP:  (P.C. = 67)
   Arg 0: #<LISP-LISTENER Lisp Listener 1 43200216 exposed>
   Rest arg: (:NAME "Lisp Top Level")

SI:LISP-TOP-LEVEL1:  (P.C. = 5)
   Arg 0 (STREAM): #<LISP-LISTENER Lisp Listener 1 43200216 exposed>

SI:LISP-TOP-LEVEL:  (P.C. = 7)
3-Jul-85 21:01:15-EDT,5123;000000000000 
Received: from MIT-REAGAN by MIT-OZ via Chaosnet; 9 Jun 85 17:26-EDT
Date: Sun, 9 Jun 85 17:33 EDT
From: CJL@OZ
Sender: File-Server@MIT-REAGAN
Subject: More lack of robustness in CP Show Directory command
To: BUG-LISPM@OZ
Message-ID: <850609173316.4.FILE-SERVER@MIT-REAGAN>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, Mailer 43.0, AISite 9.4,
microcode TMC5-MIC 319, Network-Security patch,
Update-Internet-Namespace patch, Server-Finger patch, on Lisp Machine Ronald Reagan:

fs:*default-pathname-defaults* 
=>
((#<LISPM-HOST REAGAN 56326117> . #<LMFS-PATHNAME "B:>foo.directory.*">)
 (#<LISPM-HOST ELVIS 56306273> . #<LMFS-PATHNAME "ELVIS:>carry>install.notes">)
 (#<TOPS20-HOST XX 56323715> . #<TOPS20-PATHNAME "XX:PS:<SYSTEM>HOSTS.TXT.*">)
 (NIL . #<LMFS-PATHNAME "B:>foo.directory.*">))

>>Error: Wildcard pathnames are not allowed for the OPEN operation.
         For B:>foo.directory.*
While in the function (:METHOD LMFS:LOCAL-LMFS-ACCESS-MIXIN :OPEN)  (:METHOD FS:ACTIVE-PATHNAME-MIXIN :OPEN)  FS:COMMON-LISP-OPEN

(:METHOD LMFS:LOCAL-LMFS-ACCESS-MIXIN :OPEN):  (P.C. = 10)
   Arg 0 (SELF): #<LOCAL-LMFS-ACCESS-PATH B using LOCAL-FILE 12255160>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor LMFS:LOCAL-LMFS-ACCESS-MIXIN -- 1. IV's, 0. FL's 1101504>
   Arg 2 (OPERATION): :OPEN
   Arg 3 (PATHNAME): #<LMFS-PATHNAME "B:>foo.directory.*">
   Arg 4 (PATH): #<LMFS-PATHNAME "B:>foo.directory.*">
   Rest arg (ARGS): (:DIRECTION :INPUT)

(:METHOD FS:ACTIVE-PATHNAME-MIXIN :OPEN):  (P.C. = 14)
   Arg 0 (SELF): #<LMFS-PATHNAME "B:>foo.directory.*">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:ACTIVE-PATHNAME-MIXIN -- 1. IV's, 0. FL's 104225115>
   Arg 2 (OPERATION): :OPEN
   Arg 3 (PATHNAME): #<LMFS-PATHNAME "B:>foo.directory.*">
   Rest arg (OPTIONS): (:DIRECTION :INPUT)

FS:COMMON-LISP-OPEN:  (P.C. = 450)
   Arg 0 (PATHNAME): #<LMFS-PATHNAME "B:>foo.directory.*">
   Arg 1 (KEYWORD-ARGS): NIL

OPEN:  (P.C. = 257)
   Arg 0 (PATHNAME): #<LMFS-PATHNAME "B:>foo.directory.*">
   Rest arg (KEYWORD-ARGS): NIL

#:COM-SHOW-DIRECTORY-PATHNAME-MENTIONED-DEFAULT:  (P.C. = 33)

SI:READ-POS-ARG:  (P.C. = 61)
   Arg 0 (STREAM): #:TERMINAL-IO-SYN-STREAM
   Arg 1 (ARG): #<POS-CP-ARG Pathname #o121735001>
   --Defaulted args:--
   Arg 2 (FOR-KEYWORD-ARG): NIL

SI:READ-COMMAND-INTERNAL:  (P.C. = 200)
   Arg 0 (STREAM): #:TERMINAL-IO-SYN-STREAM
   Arg 1 (COMMAND-TABLE): #<COMTAB User 121373326>

SI:READ-COMMAND-DISPATCH:  (P.C. = 7)
   Arg 0 (STREAM): #:TERMINAL-IO-SYN-STREAM
   Arg 1 (COMMAND-TABLE): #<COMTAB User 121373326>

(:INTERNAL READ-COMMAND-OR-FORM 0.):  (P.C. = 31)
   Arg 0 (.LEXICAL-ENVIRONMENT-POINTER.): #<DTP-LOCATIVE 500152>

(:INTERNAL SI:CP-INPUT-EDITING 0.):  (P.C. = 75)
   Arg 0 (.LEXICAL-ENVIRONMENT-POINTER.): #<DTP-LOCATIVE 500211>

(:DEFUN-METHOD SI:INPUT-EDITOR-READ):  (P.C. = 53)
   Arg 0 (SELF): #<LISP-LISTENER Lisp Listener 1 43200216 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:INTERACTIVE-STREAM -- 20. IV's, 2. FL's 104234231>
   Arg 2 (READ-FUNCTION): #<LEXICAL-CLOSURE (:INTERNAL SI:CP-INPUT-EDITING 0.) 500215>
   Arg 3 (READ-ARGS): NIL

(:METHOD SI:INTERACTIVE-STREAM :INPUT-EDITOR):  (P.C. = 131)
   Arg 0 (SELF): #<LISP-LISTENER Lisp Listener 1 43200216 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:INTERACTIVE-STREAM -- 20. IV's, 2. FL's 104234231>
   Arg 2 (OPERATION): :INPUT-EDITOR
   Arg 3 (READ-FUNCTION): #<LEXICAL-CLOSURE (:INTERNAL SI:CP-INPUT-EDITING 0.) 500215>
   Rest arg (READ-ARGS): NIL

SI:WITH-INPUT-EDITING-INTERNAL:  (P.C. = 113)
   Arg 0 (STREAM): #:TERMINAL-IO-SYN-STREAM
   Arg 1 (CONTINUATION): #<LEXICAL-CLOSURE (:INTERNAL SI:CP-INPUT-EDITING 0.) 500215>
   Arg 2 (ACTIVATORS): NIL
   Arg 3 (LINE-P): NIL
   Arg 4 (INPUT-EDITOR-OPTIONS): NIL

SI:CP-INPUT-EDITING:  (P.C. = 76)
   Arg 0 (STREAM): #:TERMINAL-IO-SYN-STREAM
   Arg 1 (PROMPT): ""
   Arg 2 (BLANK-LINE-MODE): :REPROMPT
   Arg 3 (CONTINUATION): #<LEXICAL-CLOSURE (:INTERNAL READ-COMMAND-OR-FORM 0.) 500154>

READ-COMMAND-OR-FORM:  (P.C. = 146)
   Arg 0 (STREAM): #:TERMINAL-IO-SYN-STREAM
   Rest arg: (:DISPATCH-MODE :FORM-PREFERRED :BLANK-LINE-MODE :REPROMPT :PROMPT "")

SI:CP-COMMAND-LOOP-READ-FUNCTION:  (P.C. = 13)

(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0.):  (P.C. = 105)
   Arg 0 (.LEXICAL-ENVIRONMENT-POINTER.): #<DTP-LOCATIVE 500047>

TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
   Arg 0 (NEW-MODE): :BLAST
   Arg 1 (STREAM): #:TERMINAL-IO-SYN-STREAM
   Arg 2 (CONTINUATION): #<LEXICAL-CLOSURE (:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0.) 500054>

SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
   Arg 0 (NAME): "Lisp Top Level"
   Arg 1 (ABORT-FUNCTION): NIL
   Arg 2 (READ-FUNCTION): NIL
   Arg 3 (EVAL-FUNCTION): NIL
   Arg 4 (PRINT-FUNCTION): NIL

SI:LISP-COMMAND-LOOP:  (P.C. = 67)
   Arg 0: #<LISP-LISTENER Lisp Listener 1 43200216 exposed>
   Rest arg: (:NAME "Lisp Top Level")

SI:LISP-TOP-LEVEL1:  (P.C. = 5)
   Arg 0 (STREAM): #<LISP-LISTENER Lisp Listener 1 43200216 exposed>

SI:LISP-TOP-LEVEL:  (P.C. = 7)
3-Jul-85 21:01:15-EDT,1627;000000000000  
Received: from MIT-REAGAN by MIT-OZ via Chaosnet; 9 Jun 85 17:53-EDT
Received: from SCRC-YUKON.ARPA by MIT-REAGAN via INTERNET with SMTP id 5520; 9 Jun 85 18:00:54-EDT
Received: from NEPONSET.SCRC.Symbolics.COM by SCRC-YUKON.ARPA via CHAOS with CHAOS-MAIL id 130317; Sun 9-Jun-85 16:42:08-EDT
Date: Sun, 9 Jun 85 17:54 EDT
From: David C. Plummer in disguise <DCP@SCRC-QUABBIN.ARPA>
Subject: Unbound variable within a MACRO expansion
To: Stephen Robbins <STEVER@OZ.mit>, BUG-LISPM@OZ.mit
In-Reply-To: <850606112300.6.STEVER@APIARY-5>
Message-ID: <850609175426.0.NFEP@NEPONSET.SCRC.Symbolics.COM>
Fonts: CPTFONT, HL10B, CPTFONTCB, TR10I

    Date: Thu, 6 Jun 85 11:23 EDT
    From: Stephen Robbins <STEVER@OZ>

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.2,
    microcode TMC5-MIC 319, FEP 18, on Lisp Machine Apiary-5:

Why are you writing your own REMOVE-IF and REMOVE-IF-NOT forms?  You can
either use REM-IF and REM-IF-NOT in the Zetalisp GLOBAL package, or you
can use CL:REMOVE-IF and CL:REMOVE-IF-NOT.

As for your bug, it's pretty gross.  Here's a simpler case I've managed
to reproduce.

(defmacro environment-evacuation-loses (name)
  (let* ((local1 (ignore name))
	 (local2 #'(lambda (x) nil)))
    (funcall #'(lambda () local2))))

(environment-evacuation-loses foo)

I haven't figure out why it works the second time (all of this is
interpreted).  As for the first time, it is an interaction with the
#'(lambda ...) which will be local2 causing the environment to be
evacuated out from under LET* trying to maintain said environment.  The
compiler does this right.

3-Jul-85 21:01:16-EDT,1537;000000000000  
Received: from MIT-REAGAN by MIT-OZ via Chaosnet; 9 Jun 85 18:02-EDT
Received: from SCRC-YUKON.ARPA by MIT-REAGAN via INTERNET with SMTP id 5521; 9 Jun 85 18:10:04-EDT
Received: from NEPONSET.SCRC.Symbolics.COM by SCRC-YUKON.ARPA via CHAOS with CHAOS-MAIL id 130322; Sun 9-Jun-85 16:51:18-EDT
Date: Sun, 9 Jun 85 18:03 EDT
From: David C. Plummer in disguise <DCP@SCRC-QUABBIN.ARPA>
Subject: defsubst uses no (let () ...)?
To: Webster Dove <dove@MIT-BUGS-BUNNY.ARPA>, BUG-LISPM@OZ.mit
In-Reply-To: <850606161148.1.DOVE@TWEETY-PIE.MIT>
Message-ID: <850609180336.3.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Thursday, 6 June 1985, 16:11-EDT
    From: Webster Dove <dove at MIT-BUGS-BUNNY>

    In Symbolics 3600 Release 6.0, IP-TCP 29.0,
    microcode TMC5-IO4-FPA-MIC 319, with UTIL, on Lisp Machine Tweety Pie:

    The documentation for defsubst says that it binds the forms to the
    variables with let then optimises away what it can.  In practice, it
    does not bind anything and the code does not indicate that it will
    either.  Is the documentation wrong, or do we have the wrong defsubst
    code.

Could you provide an example?  Zetalisp GLOBAL:DEFSUBST is pretty out to
lunch.  SCL:DEFSUBST, on the other hand, does what you expect:

	(defsubst foo (a b)
	  (list a a b b))
	(scl:defsubst bar (a b)
	  (list a a b b))

	(foo (xyz) (abc)) => (LIST (XYZ) (XYZ) (ABC) (ABC))
	(bar (xyz) (abc)) => (LET ((A (XYZ))
				   (B (ABC)))
			       (LIST A A B B))
	(bar 1 2) => (LIST 1 1 2 2) 

3-Jul-85 21:01:16-EDT,1714;000000000000
Received: from MIT-REAGAN by MIT-OZ via Chaosnet; 9 Jun 85 18:12-EDT
Received: from SCRC-YUKON.ARPA by MIT-REAGAN via INTERNET with SMTP id 5522; 9 Jun 85 18:19:47-EDT
Received: from NEPONSET.SCRC.Symbolics.COM by SCRC-YUKON.ARPA via CHAOS with CHAOS-MAIL id 130327; Sun 9-Jun-85 17:01:03-EDT
Date: Sun, 9 Jun 85 18:13 EDT
From: David C. Plummer in disguise <DCP@SCRC-QUABBIN.ARPA>
Subject: Trivial but (time:print-interval-or-never foo nil) dies.
To: Randy Parker <PARKER@OZ.mit>, BUG-LISPM@OZ.mit
In-Reply-To: <850606192512.9.PARKER@APIARY-4>
Message-ID: <850609181322.6.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Thu, 6 Jun 85 19:25 EDT
    From: Randy Parker <PARKER@OZ>

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.3,
    microcode TMC5-MIC 319, FEP 18, on Lisp Machine Apiary-4:

    Although the doc makes no claims to this,

    time:
    (defun print-interval-or-never (interval &optional (stream standard-output))
      (send stream ':string-out
	    (if (null interval) "never"
		(time:seconds-to-interval-string interval))))

    should probably look something more like this so that the convention
    of sorts w.r.t. nil stream args to time formatters is upheld:

    time:
    (defun print-interval-or-never (interval &optional (stream standard-output))
      (format stream
	    (if (null interval) "never"
		(time:seconds-to-interval-string interval))))

[you meant (format stream "~A" ...)]

Mumble.  It says STREAM, not FORMAT-LIKE-STREAM, though people have come
to expect that kind of thing.  I'm can't decide what the right answer
is.  Perhaps you should be doing
	(format nil "~\TIME-INTERVAL\" foo)
if you want FORMAT functionality.

3-Jul-85 21:01:16-EDT,1019;000000000000
Received: from MIT-REAGAN by MIT-OZ via Chaosnet; 9 Jun 85 19:51-EDT
Received: from SCRC-STONY-BROOK by MIT-REAGAN via INTERNET with SMTP id 5523; 9 Jun 85 19:59:02-EDT
Received: from NEPONSET.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 250760; Sun 9-Jun-85 19:50:43-EDT
Date: Sun, 9 Jun 85 19:52 EDT
From: David C. Plummer in disguise <DCP@SCRC-QUABBIN.ARPA>
Subject: Re:  fix for supdup for vt100's
To: Web Dove <dove@MIT-BUGS-BUNNY.ARPA>, GUMBY@MIT-MC.ARPA
cc: bug-lispm@MIT-OZ.mit
In-Reply-To: The message of 7 Jun 85 13:17-EDT from Web Dove <dove@MIT-BUGS-BUNNY.ARPA>
Message-ID: <850609195233.0.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Fri, 7 Jun 85 13:17:41 edt
    From: Web Dove <dove@bugs-bunny>

    I don't believe that it is a problem with the user end because the 
    handling of insert/delete line/character is optional, and the user end
    is not claiming to handle it.

Yes, but does the user end claim it CAN handle it, when in fact it
cannot?

3-Jul-85 21:01:16-EDT,964;000000000000 
Received: from MIT-BUGS-BUNNY by MIT-OZ via Chaosnet; 9 Jun 85 21:37-EDT
Received: by MIT-BUGS-BUNNY.ARPA (4.12/4.8)
	id AA11068; Sun, 9 Jun 85 21:38:34 edt
Date: Sun, 9 Jun 85 21:38:34 edt
From: Web Dove <dove@bugs-bunny>
To: bug-lispm@oz
Subject: Re:  defsubst uses no (let () ...)?

  Date: Sun, 9 Jun 85 18:03 EDT
  From: David C. Plummer in disguise <DCP@SCRC-QUABBIN.ARPA>
  Subject: defsubst uses no (let () ...)?
  To: Webster Dove <dove@MIT-BUGS-BUNNY.ARPA>, BUG-LISPM@OZ.mit

  	(defsubst foo (a b)
  	  (list a a b b))
  	(scl:defsubst bar (a b)
  	  (list a a b b))
  
  	(foo (xyz) (abc)) => (LIST (XYZ) (XYZ) (ABC) (ABC))
  	(bar (xyz) (abc)) => (LET ((A (XYZ))
  				   (B (ABC)))
  			       (LIST A A B B))
  	(bar 1 2) => (LIST 1 1 2 2) 
  
  
This example is exactly what I was getting at.  The documentation
implies that the behavior will be the way scl: behaves.  Should I be
trying to use scl: and not zetalisp?

3-Jul-85 21:01:17-EDT,2086;000000000000   
Received: from MIT-REAGAN by MIT-OZ via Chaosnet; 10 Jun 85 06:28-EDT
Received: from SCRC-STONY-BROOK by MIT-REAGAN via INTERNET with SMTP id 5526; 10 Jun 85 06:35:40-EDT
Received: from NEPONSET.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 250860; Mon 10-Jun-85 06:27:05-EDT
Date: Mon, 10 Jun 85 06:29 EDT
From: David C. Plummer in disguise <DCP@SCRC-QUABBIN.ARPA>
Subject: Re:  defsubst uses no (let () ...)?
To: Web Dove <dove@MIT-BUGS-BUNNY.ARPA>, bug-lispm@oz.mit
In-Reply-To: The message of 9 Jun 85 21:38-EDT from Web Dove <dove@MIT-BUGS-BUNNY.ARPA>
Message-ID: <850610062902.7.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Sun, 9 Jun 85 21:38:34 edt
    From: Web Dove <dove@bugs-bunny>

      Date: Sun, 9 Jun 85 18:03 EDT
      From: David C. Plummer in disguise <DCP@SCRC-QUABBIN.ARPA>
      Subject: defsubst uses no (let () ...)?
      To: Webster Dove <dove@MIT-BUGS-BUNNY.ARPA>, BUG-LISPM@OZ.mit

	    (defsubst foo (a b)
	      (list a a b b))
	    (scl:defsubst bar (a b)
	      (list a a b b))
  
	    (foo (xyz) (abc)) => (LIST (XYZ) (XYZ) (ABC) (ABC))
	    (bar (xyz) (abc)) => (LET ((A (XYZ))
				       (B (ABC)))
				   (LIST A A B B))
	    (bar 1 2) => (LIST 1 1 2 2) 
  
  
    This example is exactly what I was getting at.  The documentation
    implies that the behavior will be the way scl: behaves.  Should I be
    trying to use scl: and not zetalisp?

That's right.  Zetalisp is becoming a dead language and is receiving
less and less maintenance in favor of maintaining CL and SCL.  At some
point Zetalisp will only exist as a compatibility package (the way CLCP
(Common Lisp Compatibility Package) introduced CL in Release 5), and
after that it will be dropped completely.  I can't give you specific
release numbers, but you should assume the switchovers will happen as
fast as possible.

You can use SCL: constructs from Zetalisp, or you can use ZL: constructs
from SCL:.  This allows you to choose which "language" to write your
code in and also get the features of the other.

3-Jul-85 21:01:17-EDT,4246;000000000000   
Received: from MIT-ROBOT-2 by MIT-OZ via Chaosnet; 10 Jun 85 10:47-EDT
Date: Mon, 10 Jun 85 10:46 EDT
From: Patrick A. O'Donnell <PAO@MIT-EECS>
Subject: VMS pathname bug
To: BUG-LISPM@OZ
Message-ID: <850610104655.1.PAO@ROBOT-2>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 8.6, Manip 5.1,
Puma 5.0, microcode TMC5-MIC 319, FEP 18, on Lisp Machine Robot-2:

In the editor, I was editing a boot file on the FEP, so the default
filename was "FEP0:>rel6.boot".  I then tried to find a file on PIG and
got the following error:


>>Trap: The first argument given to the AR-1 instruction, :ROOT, was not an array.
While in the function FS:NUMERIC-P  FS:VMS-ROOT-P  (:METHOD FS:VMS-PATHNAME-MIXIN :FIXUP-DIRECTORY-SPEC)

FS:NUMERIC-P:  (P.C. = 21)
   Arg 0 (STRING): :ROOT
   Arg 1 (PARTIAL-OK): T
   Arg 2 (SIGN-OK): NIL
   Arg 3 (LEADING-ZERO-OK): T
   Local 4 (I): 0.
   Local 5 (LEN): 4.
   Local 6 (NUM): NIL
   Local 7 (SIGN): 1.
   Local 8 (CH): NIL

FS:VMS-ROOT-P:  (P.C. = 33)
   Arg 0 (DIR): :ROOT

(:METHOD FS:VMS-PATHNAME-MIXIN :FIXUP-DIRECTORY-SPEC):  (P.C. = 3)
   Arg 0 (SELF): #<VMS-PATHNAME "PIG:DEV:[FOO]FOO.LSP">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:VMS-PATHNAME-MIXIN -- 1. IV's, 0. FL's 105216331>
   Arg 2 (OPERATION): :FIXUP-DIRECTORY-SPEC
   Arg 3 (DIR): :ROOT

(:METHOD FS:TENEX-FAMILY-PATHNAME-MIXIN :PARSE-DIRECTORY-SPEC):  (P.C. = 55)
   Arg 0 (SELF): #<VMS-PATHNAME "PIG:DEV:[FOO]FOO.LSP">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:TENEX-FAMILY-PATHNAME-MIXIN -- 6. IV's, 1. FL's 105216343>
   Arg 2 (OPERATION): :PARSE-DIRECTORY-SPEC
   Arg 3 (SPEC): :ROOT

FS:MAKE-PATHNAME-1:  (P.C. = 502)
   Arg 0 (ACTOR): #<VMS-PATHNAME "PIG:DEV:[FOO]FOO.LSP">
   Rest arg (OPTIONS): (:DEFAULT-HOST #<VMS-HOST PYGMALION 1700437> :DEFAULT-DEVICE "DEV" :DEFAULT-DIRECTORY ("FOO") :DEFAULT-NAME "FOO" :DEFAULT-TYPE "LSP" ...)

(:METHOD FS:PATHNAME :NEW-PATHNAME):  (P.C. = 22)
   Arg 0 (SELF): #<VMS-PATHNAME "PIG:DEV:[FOO]FOO.LSP">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:PATHNAME -- 8. IV's, 1. FL's 105216320>
   Arg 2 (OPERATION): :NEW-PATHNAME
   Rest arg (OPTIONS): (:RAW-DEVICE "SYS$DISK" :RAW-DIRECTORY :ROOT :RAW-NAME "REL6" :RAW-TYPE "BOO" :VERSION :NEWEST ...)

(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 67)
   Arg 0 (SELF): #<VMS-PATHNAME "PIG:DEV:[FOO]FOO.LSP">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:PATHNAME -- 8. IV's, 1. FL's 105216320>
   Arg 2 (.OPERATION.): :NEW-PATHNAME
   Rest arg (.DAEMON-CALLER-ARGS.): (:RAW-DEVICE "SYS$DISK" :RAW-DIRECTORY :ROOT :RAW-NAME "REL6" :RAW-TYPE "BOO" :VERSION :NEWEST ...)

(:METHOD FS:PATHNAME :NEW-DEFAULT-PATHNAME):  (P.C. = 316)
   Arg 0 (SELF): #<VMS-PATHNAME "PIG:DEV:[FOO]FOO.LSP">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:PATHNAME -- 8. IV's, 1. FL's 105216320>
   Arg 2 (OPERATION): :NEW-DEFAULT-PATHNAME
   Rest arg (OPTIONS): (:HOST #<VMS-HOST PYGMALION 1700437> :DEVICE "SYS$DISK" :DIRECTORY :ROOT :NAME "REL6" :CANONICAL-TYPE "BOOT" ...)
   Local 3 (OPTIONS): NIL

Rest of stack:
(:INTERNAL (:METHOD FS:PATHNAME :COMBINED :NEW-DEFAULT-PATHNAME) 0.):  (P.C. = 10)
(:METHOD FS:PATHNAME :WHOPPER :NEW-DEFAULT-PATHNAME):  (P.C. = 64)
(:METHOD FS:PATHNAME :COMBINED :NEW-DEFAULT-PATHNAME):  (P.C. = 12)
FS:DEFAULT-PATHNAME:  (P.C. = 414)
FS:COMPLETE-PATHNAME-INTERNAL:  (P.C. = 50)
FS:HEURISTIC-COMPLETE-PATHNAME:  (P.C. = 12)
ZWEI:PATHNAME-COMPLETE:  (P.C. = 16)
ZWEI:COM-PATHNAME-COMPLETE-AND-EXIT-IF-UNIQUE:  (P.C. = 2)
ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 233)
ZWEI:COMMAND-LOOP:  (P.C. = 73)
ZWEI:EDIT-IN-MINI-BUFFER:  (P.C. = 130)
(:METHOD ZWEI:HISTORY :FUNCALL-WITH-DEFAULT):  (P.C. = 13)
ZWEI:READ-DEFAULTED-PATHNAME:  (P.C. = 57)
ZWEI:COM-FIND-FILE:  (P.C. = 4)
ZWEI:RE-EXECUTE-MINI-BUFFER-COMMAND:  (P.C. = 114)
ZWEI:COM-REPEAT-LAST-MINI-BUFFER-COMMAND:  (P.C. = 27)
ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 233)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 60)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 51)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
3-Jul-85 21:01:17-EDT,1893;000000000000 
Received: from MIT-REAGAN by MIT-OZ via Chaosnet; 10 Jun 85 13:05-EDT
Received: from SCRC-STONY-BROOK by MIT-REAGAN via INTERNET with SMTP id 5528; 10 Jun 85 13:12:59-EDT
Received: from CONCORD.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 251132; Mon 10-Jun-85 13:04:11-EDT
Date: Mon, 10 Jun 85 13:07 EDT
From: Bernard S. Greenberg <BSG@SCRC-STONY-BROOK.ARPA>
Subject: load-patches blowout
To: DCP@SCRC-QUABBIN.ARPA, CJL@MIT-REAGAN.ARPA, BUG-LISPM@OZ.mit
cc: rwk@SCRC-STONY-BROOK.ARPA
In-Reply-To: <850609161912.2.NFEP@NEPONSET.SCRC.Symbolics.COM>
Message-ID: <850610130703.9.BSG@CONCORD.SCRC.Symbolics.COM>

    Date: Sun, 9 Jun 85 16:19 EDT
    From: David C. Plummer in disguise <DCP@SCRC-QUABBIN.ARPA>

	Date: Tue, 4 Jun 85 15:14 EDT
	From: CJL@MIT-REAGAN

	In Symbolics 3600 Release 6.0, IP-TCP 29.0, Mailer 43.0, AISite 9.1,
	microcode TMC5-MIC 319, Network-Security patch,
	Update-Internet-Namespace patch, Server-Finger patch, on Lisp Machine Ronald Reagan:

	did a (load-patches)

    I wish I saw more of the backtrace.  The last full arglist shown has a
    FILE-TYPE argument of NIL, for reasons I don't know because of lack of
    backtrace.

	fs:*default-pathname-defaults* => 
	((#<LISPM-HOST REAGAN 56326117> . #<LMFS-PATHNAME "B:>aisite>patch>AISite-9>*.*.*">)
	 (#<TOPS20-HOST XX 56323715> . #<TOPS20-PATHNAME "XX:PS:<SYSTEM>HOSTS.TXT.*">)
	 (NIL . #<LMFS-PATHNAME "B:>aisite>patch>AISite-9>*.*.*">))
I hope I am not belaboring the obvious, but this business of getting wildcard
pathnames in the default defaults is turning out to be a bug-exposer, finding
people who attempt to open un-fully-specified files.

One wonders how it ever works when it does not blow out.

Should open NOT merge, but TRAP these bogosities at the right time?
Should the system refuse to put wild defaults into the default list?

3-Jul-85 21:01:18-EDT,1861;000000000000   
Received: from MIT-HTVAX by MIT-OZ via Chaosnet; 10 Jun 85 21:27-EDT
Received: from SCRC-STONY-BROOK.ARPA (scrc-stony-brook.arpa.ARPA) by MIT-HTVAX.ARPA (4.12/4.7) 
	id AA10933; Mon, 10 Jun 85 21:24:28 edt
Received: from EUPHRATES.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 251591; Mon 10-Jun-85 21:25:20-EDT
Date: Mon, 10 Jun 85 21:27 EDT
From: David A. Moon <Moon@STONY-BROOK.SCRC.Symbolics.COM>
Subject: Input history
To: William M. York <York@QUABBIN.SCRC.Symbolics.COM>
Cc: STEVER%OZ@MIT-HTVAX.ARPA, BUG-LISPM%OZ@MIT-HTVAX.ARPA
In-Reply-To: <850606104217.2.YORK@CARDINAL.SCRC.Symbolics.COM>
Message-Id: <850610212749.2.MOON@EUPHRATES.SCRC.Symbolics.COM>

    Date: Thu, 6 Jun 85 10:42 EDT
    From: William M. York <York@SCRC-QUABBIN.ARPA>

    I have noticed the behavior you describe before but your message
    prompted me to do a little investigation.  The problem is that the
    history-displaying code (zwei:display-history-menu) listens for keyboard
    input during the display and stops displaying if it gets any.  Thus a
    premature SPACE intended for a **MORE** break will cause the history
    display to stop immediately.  

    Bug-lispm: I think that this is a bug (it is certainly unexpected
    behavior), but I don't have the time now to study the implications of
    changing this function (perhaps it should simply ignore spaces, perhaps
    it should only stop on Abort).  Does anyone else know anything about
    this?

I believe this feature was put in by user request.

I don't know how to resolve the conflict between not having to wait half a
minute before it reads your next command and not having to wait for a **more**
break before typing a space.  However, if we cannot resolve the conflict I
think the present behavior is much better than the alternative.

3-Jul-85 21:01:18-EDT,1552;000000000000  
Received: from MIT-REAGAN by MIT-OZ via Chaosnet; 10 Jun 85 21:39-EDT
Received: from SCRC-STONY-BROOK by MIT-REAGAN via INTERNET with SMTP id 5533; 10 Jun 85 21:46:42-EDT
Received: from EUPHRATES.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 251596; Mon 10-Jun-85 21:37:47-EDT
Date: Mon, 10 Jun 85 21:40 EDT
From: David A. Moon <Moon@STONY-BROOK.SCRC.Symbolics.COM>
Subject: Changing Namespace Objects
To: William M. York <York@QUABBIN.SCRC.Symbolics.COM>,
    Sr.Kaufman@MIT-SPEECH.mit
cc: BUG-LISPM@OZ.mit, Hornig@STONY-BROOK.SCRC.Symbolics.COM
In-Reply-To: <850606134223.2.YORK@CARDINAL.SCRC.Symbolics.COM>
Message-ID: <850610214016.5.MOON@EUPHRATES.SCRC.Symbolics.COM>

    Date: Thu, 6 Jun 85 13:42 EDT
    From: William M. York <York@SCRC-QUABBIN.ARPA>

	Date: Thursday, 6 June 1985, 12:57-EDT
	From: David H. Kaufman <Sr.Kaufman at MIT-SPEECH>

	What really bothers me here is that I can't figure out
	a clean way for a program to change a namespace object (I don't consider
	the method used by tv:edit-namespace-object very clean: I want to do a
	net:find-object-named and send messages to the object).

    Namespace objects have si:property-list-mixin mixed in, so if you want
    to change a property of a user object you can do

    (send (net:find-object-named :user "Zippy") :putprop t :pinhead)

NB: I believe this answer to be incorrect.  Hornig mentioned the other day
the right way to do it, perhaps he could repeat it for the benefit of the
list since I don't remember it.

3-Jul-85 21:01:18-EDT,785;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 10 Jun 85 23:46-EDT
Received: from mit-ems.ARPA by MIT-MC.ARPA 10 Jun 85 23:45:43 EST
Received: by mit-ems.ARPA (4.12/4.8)  id AA02371; Mon, 10 Jun 85 23:45:07 edt
Date: Mon, 10 Jun 85 23:45:07 edt
From: Steven Haflich <smh@mit-ems.ARPA>
Message-Id: <8506110345.AA02371@mit-ems.ARPA>
To: bug-lispm%mit-oz@mit-mc
Subject: :pass-on method combination

In the current Release 6 Reference Guide p.456 (and also in recent
Chine Nials), the format of the :pass-on method-combination option to
defflavor is given as

  (:method-combination (:pass-on (ordering . arglist)) . operation-names)

I've never used the frob, but shouldn't it be the following?

  (:method-combination (:pass-on (ordering . arglist) . operation-names))
3-Jul-85 21:01:19-EDT,575;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 11 Jun 85 03:35-EDT
Date: Tue, 11 Jun 85 03:38:13 EDT
From: David Vinayak Wallace <GUMBY@MIT-MC>
Subject:  weird addresses
To: DCP@SCRC-QUABBIN
cc: Bug-Lispm@MIT-OZ
In-reply-to: Msg of Sun 9 Jun 85 16:26 EDT from David C. Plummer in disguise <DCP at SCRC-QUABBIN.ARPA>
Message-ID: <[MIT-MC].537966.850611.GUMBY>

Why do your replies to me have addresses like "bug-lispm%OZ@MIT-HTVAX.ARPA",
and more outrageously "GUMBY%MIT-MC@MIT-HTVAX.ARPA"?  I'd feel safer NOT
having the unix "mailer" touching my mail, thank-you!
3-Jul-85 21:01:19-EDT,1557;000000000000  
Received: from MIT-MC by MIT-OZ via Chaosnet; 11 Jun 85 03:48-EDT
Date: Tue, 11 Jun 85 03:50:49 EDT
From: David Vinayak Wallace <GUMBY@MIT-MC>
Subject:  more supdup 
To: DCP@SCRC-QUABBIN
cc: Bug-Lispm@MIT-OZ
In-reply-to: Msg of Sun 9 Jun 85 16:26 EDT from David C. Plummer in disguise <DCP at SCRC-QUABBIN.ARPA>
Message-ID: <[MIT-MC].537973.850611.GUMBY>

    Date: Sun, 9 Jun 85 16:26 EDT
    From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>

        Date: Wed, 5 Jun 85 11:28 EDT
        From: David Vinayak Wallace <Gumby at MC>

        (when supdupping in from ITS)
        If I exit supdup asking supdup to log me out of the remote lispm (i.e.
        <break>L) the connexion is dropped all right, but I find I am still
        logged into the lispm.

    LispMs are not timesharing machines.  Perhaps it should do this if you
    did LOGIN during the session and nobody was previous logged in.  It is
    VERY wrong to arbitrarily do a LOGOUT.  Consider supduping to the file
    server...

Umm.  Interesting screw.

I suppose LOGIN should store standard-io (or some other conventiont stream)
into the user object (or whatever it's called these days..SI:*USER*?).  If
someone comes up to a machine and tries to log in while *user* is non-nil
and set to an object whose login-stream is a nvt-stream...(of course the
local luser can always boot the machine...)

It's a bit of hair, sure, but this functionality is quite handy.  I dunno
about losers who put save-all-files in their logout-list, but I'd do OK.
3-Jul-85 21:01:20-EDT,1303;000000000000 
Received: from MIT-MC by MIT-OZ via Chaosnet; 11 Jun 85 04:34-EDT
Date: Tue, 11 Jun 85 04:37:09 EDT
From: David Vinayak Wallace <GUMBY@MIT-MC.ARPA>
Subject:  cl:intern
To: Moon@SCRC-STONY-BROOK.ARPA
cc: BUG-LISPM@MIT-OZ
In-reply-to: Msg of Mon 10 Jun 85 21:17 EDT from David A. Moon <Moon at STONY-BROOK.SCRC.Symbolics.COM>
Message-ID: <[MIT-MC.ARPA].537981.850611.GUMBY>

    Date: Mon, 10 Jun 85 21:17 EDT
    From: David A. Moon <Moon at STONY-BROOK.SCRC.Symbolics.COM>

        Date: Wed, 5 Jun 85 11:24 EDT
        From: David Vinayak Wallace <Gumby@MIT-MC>

        In Symbolics 3600 Release 6.0

        Page 185 of the silver bible claims common-lisp's INTERN will not
        accept a symbol.  However, CL:INTERN will happily accept a symbol.

    Language extensions are not bugs.

Well I don't have access to documentation at the moment, so I can't see
what the document frobber says.  but I had to help someone figure out what
he thought was a bug in the system because the documentation he had said
nothing about intern's taking a symbol and making that package import that
symbol. I find this behaviour weird and counter-intuitive (is that
redundent?).

What's wrong with using IMPORT for this purpose?  I though operator
overloading went out with Lisp 1.5.
3-Jul-85 21:01:20-EDT,1431;000000000000   
Received: from MIT-MC by MIT-OZ via Chaosnet; 11 Jun 85 04:36-EDT
Date: Tue, 11 Jun 85 04:38:26 EDT
From: David Vinayak Wallace <GUMBY@MIT-MC.ARPA>
Subject:  fix for supdup for vt100's
To: DCP@SCRC-QUABBIN.ARPA
cc: bug-lispm@MIT-OZ, dove@MIT-BUGS-BUNNY.ARPA
In-reply-to: Msg of Sun 9 Jun 85 16:39 EDT from David C. Plummer in disguise <DCP at SCRC-QUABBIN.ARPA>
Message-ID: <[MIT-MC.ARPA].537989.850611.GUMBY>

    Date: Sun, 9 Jun 85 16:39 EDT
    From: David C. Plummer in disguise <DCP at SCRC-QUABBIN.ARPA>

        Date: Wed, 5 Jun 85 22:25:15 edt
        From: Web Dove <dove@bugs-bunny>

        Does anybody have a fix for the SUPDUP service that deals with the
        fact some terminals don't have delete character (like vt100's)?
        When I try to delete internal parts of a command line, nothing
        happens until I type ^L.


        Date: Thu,  6 Jun 85 22:15:49 EST
        From: David Vinayak Wallace <GUMBY@MIT-MC.ARPA>

        Isn't this a problem with your supdup USER end?

    After eliminating all the possible cases, that seems to be the correct
    counter-question.  SUPDUP is a generic protocol; it knows not that you
    are on a VT100.  The user program is supposed to supply the server side
    with the functionality capable of the terminal.

Actually, I'm CRTSTY'ing a VT100 to MC, and when I SUPDUPped to JIMI I had
the same problem.  Sorry, web!

david
3-Jul-85 21:01:21-EDT,1937;000000000000  
Received: from MIT-HTVAX by MIT-OZ via Chaosnet; 11 Jun 85 07:23-EDT
Received: by MIT-HTVAX.ARPA (4.12/4.7) 
	id AA13623; Tue, 11 Jun 85 07:17:06 edt
To: David Vinayak Wallace <GUMBY@mit-mc.arpa>
Cc: DCP@scrc-quabbin.arpa, Bug-Lispm@mit-oz
Subject: Re: weird addresses
In-Reply-To: Your message of Tue, 11 Jun 85 03:38:13 EDT.
Date: 11 Jun 85 07:16:54 EDT (Tue)
From: Martin David Connor <mdc@mit-htvax>

    Date: Tue, 11 Jun 85 03:38:13 EDT
    From: David Vinayak Wallace <GUMBY@MIT-MC>

    Why do your replies to me have addresses like "bug-lispm%OZ@MIT-HTVAX.ARPA",
    and more outrageously "GUMBY%MIT-MC@MIT-HTVAX.ARPA"?  I'd feel safer NOT
    having the unix "mailer" touching my mail, thank-you!

There is a list of mailers that are known Arpnanet/Chaosnet gateways.
HT is one of them, MC is first in preference.  If it is the case that
someone uses HT as a gateway and supplies and address of the form

  addr@chaos-site

and the intended recipient is on an Arpanet site, that address is
rewritten as:

  addr%chaos-site@MIT-HTVAX.ARPA

Although MC is certainly on the Arpanet, if an address of the form 

  addr@MIT-MC

with no .ARPA is received, it is rewritten as

  addr%MIT-MC@MIT-HTVAX.ARPA

so that the Internet recipients could reply to it if needed.
Of course they could probably reply to the original message too, but
sometimes such addresses are useful when say, MC is down on Arpa, but
is up on Chaos, then HT will reach MC with mail using the Chaos
address of MC.

Btw, HT, PREP, and HERMES (all 4.2 vaxen) have been forwarding mail
for Lispms and OZ for a long time now.  They seem to do about as well
as any other forwarding host, in most circumstances.  Comsat on MC is
a little better in some very odd instances, but then, when MC is
down, mail can still go through one of the redundant hosts.

I hope this is of some general information value to the list.

3-Jul-85 21:01:21-EDT,1949;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 11 Jun 85 08:45-EDT
Received: from SCRC-STONY-BROOK.ARPA by MIT-MC.ARPA 11 Jun 85 08:48:03 EST
Received: from CONCORD.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 251791; Tue 11-Jun-85 08:44:22-EDT
Date: Tue, 11 Jun 85 08:47 EDT
From: Bernard S. Greenberg <BSG@SCRC-STONY-BROOK.ARPA>
Subject: more supdup 
To: GUMBY@MIT-MC.ARPA, DCP@SCRC-QUABBIN.ARPA
cc: Bug-Lispm%MIT-OZ@MIT-MC.ARPA
In-Reply-To: <[MIT-MC].537973.850611.GUMBY>
Message-ID: <850611084746.0.BSG@CONCORD.SCRC.Symbolics.COM>

    Date: Tue, 11 Jun 85 03:50:49 EDT
    From: David Vinayak Wallace <GUMBY@MIT-MC>

	Date: Sun, 9 Jun 85 16:26 EDT
	From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>

	    Date: Wed, 5 Jun 85 11:28 EDT
	    From: David Vinayak Wallace <Gumby at MC>

	    (when supdupping in from ITS)
	    If I exit supdup asking supdup to log me out of the remote lispm (i.e.
	    <break>L) the connexion is dropped all right, but I find I am still
	    logged into the lispm.

	LispMs are not timesharing machines.  Perhaps it should do this if you
	did LOGIN during the session and nobody was previous logged in.  It is
	VERY wrong to arbitrarily do a LOGOUT.  Consider supduping to the file
	server...

    Umm.  Interesting screw.

    I suppose LOGIN should store standard-io (or some other conventiont stream)
    into the user object (or whatever it's called these days..SI:*USER*?).  If
    someone comes up to a machine and tries to log in while *user* is non-nil
    and set to an object whose login-stream is a nvt-stream...(of course the
    local luser can always boot the machine...)

    It's a bit of hair, sure, but this functionality is quite handy.  I dunno
    about losers who put save-all-files in their logout-list, but I'd do OK.

At SCRC, our file server init file undefines LOGIN and LOGOUT, saving them
in magic places.

3-Jul-85 21:01:21-EDT,5646;000000000000   
Received: from MIT-MC by MIT-OZ via Chaosnet; 11 Jun 85 13:14-EDT
Received: from SCRC-STONY-BROOK.ARPA by MIT-MC.ARPA 11 Jun 85 13:16:34 EST
Received: from EUPHRATES.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 252035; Tue 11-Jun-85 13:12:48-EDT
Date: Monday, 10 June 1985, 23:14-EDT
From: Postmaster at SCRC-STONY-BROOK.ARPA
Subject: Unable to deliver letter
To: Moon@SCRC-STONY-BROOK
Resent-To: bug-lispm%oz@MIT-MC.ARPA, henry%oz@MIT-MC.ARPA
Resent-From: Moon@STONY-BROOK.SCRC.Symbolics.COM
Resent-Date: Tue, 11 Jun 85 13:15 EDT
Resent-Message-ID: <850611131515.6.MOON@EUPHRATES.SCRC.Symbolics.COM>
Resent-Comments: What domain is OZ really in?

Unable to deliver letter to the following recipients:
  BUG-LISPM@OZ.mit.edu: SMTP error from MIT-REAGAN: 550  The host of recipient BUG-LISPM@OZ.mit.edu is not recognized.
  Henry@OZ.mit.edu: SMTP error from MIT-REAGAN: 550  The host of recipient Henry@OZ.mit.edu is not recognized.

----- Text of letter follows -----
Received: from EUPHRATES.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 251649; Mon 10-Jun-85 23:14:08-EDT
Date: Mon, 10 Jun 85 23:16 EDT
From: David A. Moon <Moon@STONY-BROOK.SCRC.Symbolics.COM>
Subject: Can you still write Lisp in Lisp?
To: Henry Lieberman <Henry@OZ.mit.edu>
cc: David C. Plummer in disguise <DCP@QUABBIN.SCRC.Symbolics.COM>,
    BUG-LISPM@OZ.mit.edu
In-Reply-To: <850529165907.1.HENRY@APIARY-4>,
             <850530120547.0.NFEP@NEPONSET.SCRC.Symbolics.COM>,
             <850531002825.2.HENRY@SID>,
             <850531121924.7.NFEP@NEPONSET.SCRC.Symbolics.COM>
Message-ID: <850610231637.5.MOON@EUPHRATES.SCRC.Symbolics.COM>

For brevity, I'm only including portions of the conversation that I have something
specific to say about.

    Date: Wed, 29 May 85 16:59 EDT
    From: Henry Lieberman <Henry@OZ>

    In Symbolics 3600 Release 6.0

    Now that lexical scoping requires environments for expanding macros and 
    handling special forms, is there any function to access the current "lexical
    environment"?  It would be nice to consider environments as first-class objects,
    so the user could examine and construct them.  

The concept of "current lexical environment" doesn't mean anything to me.  If you're
asking, "are there functions to access the internal slots of a lexical environment,
rather than just passing environments around from place to place without looking
inside them," the answer is that there aren't such functions as part of the
documented interface: we don't support writing your own special forms.  Of course you
can figure it out from the source of the interpreter, which we supply, but there is
no guarantee that it won't change.  If you've looked at it, you know that it was
optimized for run-time efficiency rather than simplicity, user understandability, or
maintainability.  I can't figure out from your message whether you just need to
insert a hook, or whether you need to make your own variable bindings and so forth.
If the latter, you need to delve deep into the internals if you want to use the same
data structures as the existing interpreter.

    What I'm trying to do is write a special interpreter for Lisp code that 
    does some special stuff, but wants to basically just "do what Lisp does" on 
    special forms it doesn't specifically handle.  In the old dynamic scoping
    regime, it worked OK in most cases just to APPLY the special form to its
    arguments, which is now disallowed.  I want to avoid writing handlers for each
    special form, as there are 216 of them in the system.  I'm at a loss as to how to
    fix it.

(funcall (cl:special-form-p (car form)) form environment).  This used to be in the
Common Lisp manual, but Common Lisp was changed to un-guarantee the value returned
by special-form-p (I'm not sure why).

    With the new lexical scoping, is it still possible for the user to
    write a Lisp interpreter in Lisp?  

Lisp is Turing-equivalent.  Your real question is, does the supplied documentation
include everything you need to know to customize every internal part of the Lisp
interpreter, and of course the answer is "no".  That was true in Release 5 also;
I think your complaint is really that you have to figure out some undocumented things
over again in order to make your interpreter modifications work in the new release,
and that a lexical interpreter is more complicated than a dynamic interpreter.

    Date: Fri, 31 May 85 00:28 EDT
    From: Henry Lieberman <Henry@OZ>

    I'm all for lexical scoping, but I'd have to say that in the current system, 
    it is not completely implemented.  

That is correct.  Additional portions, mainly in the debugger, are scheduled for the
next release (6.1).  It's hard to do everything all at once.  Also, I disagree with
your contention that a "complete" implementation of lexical scoping has to include
documented interfaces that allow the user to modify the interpreter's handling of
special forms.  Few people (probably only those like yourself doing research into
advanced programming support tools) need that.

    Date: Fri, 31 May 85 12:19 EDT
    From: David C. Plummer in disguise <DCP@SCRC-QUABBIN.ARPA>

    Moon is the right one to give you the gory details.  He'll be back in 10
    days or so.

Let me know if you need more assistance.  I haven't really given you any details
except for telling you what cl:special-form-p returns and telling you to read
the source; I'll be happy to explain more when I have time available, if you ask
me.

3-Jul-85 21:01:22-EDT,1648;000000000000 
Received: from MIT-MC by MIT-OZ via Chaosnet; 11 Jun 85 13:25-EDT
Received: from SCRC-STONY-BROOK.ARPA by MIT-MC.ARPA 11 Jun 85 13:27:40 EST
Received: from EUPHRATES.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 252050; Tue 11-Jun-85 13:17:49-EDT
Date: Monday, 10 June 1985, 21:14-EDT
From: Postmaster at SCRC-STONY-BROOK.ARPA
Subject: Unable to deliver letter
To: Moon@SCRC-STONY-BROOK
Resent-To: bug-lispm%oz@MIT-MC.ARPA
Resent-From: Moon@STONY-BROOK.SCRC.Symbolics.COM
Resent-Date: Tue, 11 Jun 85 13:20 EDT
Resent-Message-ID: <850611132022.9.MOON@EUPHRATES.SCRC.Symbolics.COM>

Unable to deliver letter to the following recipient:
  BUG-LISPM@OZ.mit.edu: SMTP error from MIT-REAGAN: 550  The host of recipient BUG-LISPM@OZ.mit.edu is not recognized.

----- Text of letter follows -----
Received: from EUPHRATES.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 251586; Mon 10-Jun-85 21:14:47-EDT
Date: Mon, 10 Jun 85 21:17 EDT
From: David A. Moon <Moon@STONY-BROOK.SCRC.Symbolics.COM>
Subject: cl:intern
To: David Vinayak Wallace <Gumby@MIT-MC.ARPA>
cc: BUG-LISPM@OZ.mit.edu
In-Reply-To: <850605112425.1.GUMBY@LENNON>
Message-ID: <850610211716.1.MOON@EUPHRATES.SCRC.Symbolics.COM>

    Date: Wed, 5 Jun 85 11:24 EDT
    From: David Vinayak Wallace <Gumby@MIT-MC>

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.2,
    microcode TMC5-MIC 319, on Lisp Machine John Lennon:

    Page 185 of the silver bible claims common-lisp's INTERN will not accept
    a symbol.  However, CL:INTERN will happily accept a symbol.

Language extensions are not bugs.

3-Jul-85 21:01:22-EDT,2122;000000000000  
Received: from MIT-MC by MIT-OZ via Chaosnet; 11 Jun 85 13:26-EDT
Received: from SCRC-STONY-BROOK.ARPA by MIT-MC.ARPA 11 Jun 85 13:27:52 EST
Received: from EUPHRATES.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 252051; Tue 11-Jun-85 13:18:01-EDT
Date: Monday, 10 June 1985, 21:11-EDT
From: Postmaster at SCRC-STONY-BROOK.ARPA
Subject: Unable to deliver letter
To: Moon@SCRC-STONY-BROOK
Resent-To: bug-lispm%oz@MIT-MC.ARPA
Resent-From: Moon@STONY-BROOK.SCRC.Symbolics.COM
Resent-Date: Tue, 11 Jun 85 13:20 EDT
Resent-Message-ID: <850611132035.0.MOON@EUPHRATES.SCRC.Symbolics.COM>

Unable to deliver letter to the following recipient:
  BUG-LISPM@OZ.mit.edu: SMTP error from MIT-REAGAN: 550  The host of recipient BUG-LISPM@OZ.mit.edu is not recognized.

----- Text of letter follows -----
Received: from EUPHRATES.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 251576; Mon 10-Jun-85 21:09:42-EDT
Date: Mon, 10 Jun 85 21:12 EDT
From: David A. Moon <Moon@STONY-BROOK.SCRC.Symbolics.COM>
Subject: defsubst uses no (let () ...)?
To: Webster Dove <dove@MIT-BUGS-BUNNY.ARPA>,
    David C. Plummer in disguise <DCP@QUABBIN.SCRC.Symbolics.COM>
cc: BUG-LISPM@OZ.mit.edu, bug-lmdoc@STONY-BROOK.SCRC.Symbolics.COM
In-Reply-To: <850606161148.1.DOVE@TWEETY-PIE.MIT>,
             <850609180336.3.NFEP@NEPONSET.SCRC.Symbolics.COM>,
             The message of 9 Jun 85 21:38-EDT from Web Dove <dove@bugs-bunny>
Message-ID: <850610211212.8.MOON@EUPHRATES.SCRC.Symbolics.COM>

I think this one is my fault; I gave incorrect information to the documentation
people.  I thought the Symbolics Common Lisp version of DEFSUBST had been installed
back into Zetalisp, replacing the old crufty one, but I was wrong.  In general,
the SCL versions of macros such as DEFSUBST, SETF, and the like are much more
careful about multiple and out-of-order evaluation than the Zetalisp versions.
I'm not sure if there are reasons (compatibility with old bugs people are
depending on?  bootstrapping?) why the Zetalisp ones should not be replaced
with the new ones.

3-Jul-85 21:01:23-EDT,2252;000000000000  
Received: from MIT-MC by MIT-OZ via Chaosnet; 11 Jun 85 13:26-EDT
Received: from SCRC-STONY-BROOK.ARPA by MIT-MC.ARPA 11 Jun 85 13:28:19 EST
Received: from EUPHRATES.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 252055; Tue 11-Jun-85 13:23:19-EDT
Date: Tue, 11 Jun 85 13:25 EDT
From: David A. Moon <Moon@STONY-BROOK.SCRC.Symbolics.COM>
Subject: cl:intern
To: David Vinayak Wallace <GUMBY@MIT-MC.ARPA>
cc: BUG-LISPM%OZ@MIT-MC.ARPA
In-Reply-To: <[MIT-MC.ARPA].537981.850611.GUMBY>
Message-ID: <850611132551.2.MOON@EUPHRATES.SCRC.Symbolics.COM>

    Date: Tue, 11 Jun 85 04:37:09 EDT
    From: David Vinayak Wallace <GUMBY@MIT-MC.ARPA>

	Date: Mon, 10 Jun 85 21:17 EDT
	From: David A. Moon <Moon at STONY-BROOK.SCRC.Symbolics.COM>

	    Date: Wed, 5 Jun 85 11:24 EDT
	    From: David Vinayak Wallace <Gumby@MIT-MC>

	    In Symbolics 3600 Release 6.0

	    Page 185 of the silver bible claims common-lisp's INTERN will not
	    accept a symbol.  However, CL:INTERN will happily accept a symbol.

	Language extensions are not bugs.

    Well I don't have access to documentation at the moment, so I can't see
    what the document frobber says.  but I had to help someone figure out what
    he thought was a bug in the system because the documentation he had said
    nothing about intern's taking a symbol and making that package import that
    symbol. I find this behaviour weird and counter-intuitive (is that
    redundent?).

    What's wrong with using IMPORT for this purpose?

I guess that in the future when I think I only need to send a one-line response
I should just send nothing at all.  The point I was trying to make, and failed
to get across clearly, is that Common Lisp allows implementations to define the
behavior of cases that the manual says "are an error" (as opposed to "signals
an error".)  This is explained somewhere near the front of the Common Lisp manual.
In our implementation, CL:INTERN currently accepts a symbol because ZL:INTERN
does so.  Indeed, this is to be phased out in favor of the new function IMPORT,
but it hasn't gone away yet.

    I thought operator overloading went out with Lisp 1.5.

Take a closer look at Common Lisp.  Or ADA.

3-Jul-85 21:01:23-EDT,2607;000000000000  
Received: from MIT-MC by MIT-OZ via Chaosnet; 11 Jun 85 14:31-EDT
Received: from SCRC-STONY-BROOK.ARPA by MIT-MC.ARPA 11 Jun 85 14:34:16 EST
Received: from CONCORD.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 252137; Tue 11-Jun-85 14:30:33-EDT
Date: Tue, 11 Jun 85 14:34 EDT
From: Bernard S. Greenberg <BSG@SCRC-STONY-BROOK.ARPA>
Subject: cl:intern
To: Moon@SCRC-STONY-BROOK.ARPA, GUMBY@MIT-MC.ARPA
cc: BUG-LISPM%OZ@MIT-MC.ARPA
In-Reply-To: <850611132551.2.MOON@EUPHRATES.SCRC.Symbolics.COM>
Message-ID: <850611143403.4.BSG@CONCORD.SCRC.Symbolics.COM>

    Date: Tue, 11 Jun 85 13:25 EDT
    From: David A. Moon <Moon@STONY-BROOK.SCRC.Symbolics.COM>

	Date: Tue, 11 Jun 85 04:37:09 EDT
	From: David Vinayak Wallace <GUMBY@MIT-MC.ARPA>

	    Date: Mon, 10 Jun 85 21:17 EDT
	    From: David A. Moon <Moon at STONY-BROOK.SCRC.Symbolics.COM>

		Date: Wed, 5 Jun 85 11:24 EDT
		From: David Vinayak Wallace <Gumby@MIT-MC>

		In Symbolics 3600 Release 6.0

		Page 185 of the silver bible claims common-lisp's INTERN will not
		accept a symbol.  However, CL:INTERN will happily accept a symbol.

	    Language extensions are not bugs.

	Well I don't have access to documentation at the moment, so I can't see
	what the document frobber says.  but I had to help someone figure out what
	he thought was a bug in the system because the documentation he had said
	nothing about intern's taking a symbol and making that package import that
	symbol. I find this behaviour weird and counter-intuitive (is that
	redundent?).

	What's wrong with using IMPORT for this purpose?

    I guess that in the future when I think I only need to send a one-line response
    I should just send nothing at all.  The point I was trying to make, and failed
    to get across clearly, is that Common Lisp allows implementations to define the
    behavior of cases that the manual says "are an error" (as opposed to "signals
    an error".)  This is explained somewhere near the front of the Common Lisp manual.
    In our implementation, CL:INTERN currently accepts a symbol because ZL:INTERN
    does so.  Indeed, this is to be phased out in favor of the new function IMPORT,
    but it hasn't gone away yet.

	I thought operator overloading went out with Lisp 1.5.

    Take a closer look at Common Lisp.  Or ADA.
Intern interning symbols is a TRAP for the unwary that can damage the environment,
esp.  if you try to intern on the keyword package (I have done this, doing
an implicit STRING in my erring mind).  To barf empower it would be a feature.

3-Jul-85 21:01:23-EDT,4191;000000000000   
Received: from MIT-MC by MIT-OZ via Chaosnet; 11 Jun 85 14:51-EDT
Received: from SCRC-STONY-BROOK.ARPA by MIT-MC.ARPA 11 Jun 85 14:53:38 EST
Received: from HUDSON.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 252154; Tue 11-Jun-85 14:49:54-EDT
Date: Tue, 11 Jun 85 14:51 EDT
From: Charles Hornig <Hornig@SCRC-STONY-BROOK.ARPA>
Subject: [Postmaster@SCRC-STONY-BROOK.ARPA: Unable to deliver letter]
         [Postmaster@SCRC-STONY-BROOK.ARPA: Unable to deliver letter]
         [Postmaster@SCRC-STONY-BROOK.ARPA: Unable to deliver letter]
To: moon@SCRC-STONY-BROOK.ARPA, bug-lispm%oz@MIT-MC.ARPA,
    henry%oz@MIT-MC.ARPA
Message-ID: <850611145145.2.HORNIG@HUDSON.SCRC.Symbolics.COM>

The MIT namespace object does not specify an Internet domain name for
MIT.  Consequently, reagan does not recognize OZ.MIT.EDU.

- - - - -

Return-path: <@MIT-MC.ARPA:Postmaster@SCRC-STONY-BROOK.ARPA>
Received: from MIT-MC.ARPA by SCRC-STONY-BROOK.ARPA via INTERNET with SMTP id 252044; 11 Jun 85 13:16:08-EDT
Received: from MIT-OZ by MIT-MC.ARPA via Chaosnet; 11 JUN 85  13:17:17 EDT
Received: from MIT-MC by MIT-OZ via Chaosnet; 11 Jun 85 13:14-EDT
Received: from SCRC-STONY-BROOK.ARPA by MIT-MC.ARPA 11 Jun 85 13:16:34 EST
Received: from EUPHRATES.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 252035; Tue 11-Jun-85 13:12:48-EDT
Date: Monday, 10 June 1985, 23:14-EDT
From: Postmaster at SCRC-STONY-BROOK.ARPA
Subject: Unable to deliver letter
To: Moon@SCRC-STONY-BROOK
Resent-To: bug-lispm%oz@MIT-MC.ARPA, henry%oz@MIT-MC.ARPA
Resent-From: Moon@STONY-BROOK.SCRC.Symbolics.COM
Resent-Date: Tue, 11 Jun 85 13:15 EDT
Resent-Message-ID: <850611131515.6.MOON@EUPHRATES.SCRC.Symbolics.COM>
Resent-Comments: What domain is OZ really in?

Unable to deliver letter to the following recipients:
  BUG-LISPM@OZ.mit.edu: SMTP error from MIT-REAGAN: 550  The host of recipient BUG-LISPM@OZ.mit.edu is not recognized.
  Henry@OZ.mit.edu: SMTP error from MIT-REAGAN: 550  The host of recipient Henry@OZ.mit.edu is not recognized.



Return-path: <@MIT-MC.ARPA:Postmaster@SCRC-STONY-BROOK.ARPA>
Received: from MIT-MC.ARPA by SCRC-STONY-BROOK.ARPA via INTERNET with SMTP id 252062; 11 Jun 85 13:28:48-EDT
Received: from MIT-OZ by MIT-MC.ARPA via Chaosnet; 11 JUN 85  13:28:29 EDT
Received: from MIT-MC by MIT-OZ via Chaosnet; 11 Jun 85 13:25-EDT
Received: from SCRC-STONY-BROOK.ARPA by MIT-MC.ARPA 11 Jun 85 13:27:40 EST
Received: from EUPHRATES.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 252050; Tue 11-Jun-85 13:17:49-EDT
Date: Monday, 10 June 1985, 21:14-EDT
From: Postmaster at SCRC-STONY-BROOK.ARPA
Subject: Unable to deliver letter
To: Moon@SCRC-STONY-BROOK
Resent-To: bug-lispm%oz@MIT-MC.ARPA
Resent-From: Moon@STONY-BROOK.SCRC.Symbolics.COM
Resent-Date: Tue, 11 Jun 85 13:20 EDT
Resent-Message-ID: <850611132022.9.MOON@EUPHRATES.SCRC.Symbolics.COM>

Unable to deliver letter to the following recipient:
  BUG-LISPM@OZ.mit.edu: SMTP error from MIT-REAGAN: 550  The host of recipient BUG-LISPM@OZ.mit.edu is not recognized.


Return-path: <@MIT-MC.ARPA:Postmaster@SCRC-STONY-BROOK.ARPA>
Received: from MIT-MC.ARPA by SCRC-STONY-BROOK.ARPA via INTERNET with SMTP id 252064; 11 Jun 85 13:31:14-EDT
Received: from MIT-OZ by MIT-MC.ARPA via Chaosnet; 11 JUN 85  13:29:33 EDT
Received: from MIT-MC by MIT-OZ via Chaosnet; 11 Jun 85 13:26-EDT
Received: from SCRC-STONY-BROOK.ARPA by MIT-MC.ARPA 11 Jun 85 13:27:52 EST
Received: from EUPHRATES.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 252051; Tue 11-Jun-85 13:18:01-EDT
Date: Monday, 10 June 1985, 21:11-EDT
From: Postmaster at SCRC-STONY-BROOK.ARPA
Subject: Unable to deliver letter
To: Moon@SCRC-STONY-BROOK
Resent-To: bug-lispm%oz@MIT-MC.ARPA
Resent-From: Moon@STONY-BROOK.SCRC.Symbolics.COM
Resent-Date: Tue, 11 Jun 85 13:20 EDT
Resent-Message-ID: <850611132035.0.MOON@EUPHRATES.SCRC.Symbolics.COM>

Unable to deliver letter to the following recipient:
  BUG-LISPM@OZ.mit.edu: SMTP error from MIT-REAGAN: 550  The host of recipient BUG-LISPM@OZ.mit.edu is not recognized.



3-Jul-85 21:01:23-EDT,1607;000000000000  
Received: from MIT-REAGAN by MIT-OZ via Chaosnet; 11 Jun 85 15:09-EDT
Received: from SCRC-STONY-BROOK by MIT-REAGAN via INTERNET with SMTP id 5539; 11 Jun 85 15:17:24-EDT
Received: from EUPHRATES.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 252168; Tue 11-Jun-85 15:08:00-EDT
Date: Tue, 11 Jun 85 15:10 EDT
From: David A. Moon <Moon@STONY-BROOK.SCRC.Symbolics.COM>
Subject: Can't export from a patch.
To: Ken Haase <KWH@OZ.mit>
cc: BUG-LISPM@OZ.mit
In-Reply-To: <850524151827.1.KWH@DUANE>
Message-ID: <850611151033.9.MOON@EUPHRATES.SCRC.Symbolics.COM>

    Date: Fri, 24 May 85 15:18 EDT
    From: Ken Haase <KWH@OZ>

    In Symbolics 3670 Release 6.0

    When an export form is patched, the resultant compiled code ignores the
    package-local information which is neccessary for the use of export to
    make sense.  In particular, if you M-X Add Patch the following form:

	(EXPORT '(RELATIVITY-FUDGE))

    from a buffer and file where the package is PHYSICS, the resulting patch
    is compiled into a load-time call of the form:

       (EXPORT (LIST (INTERN "RELATIVITY-FUDGE")))

    which (since the package of the patch file is USER) exports
    USER:RELATIVITY-FUDGE instead of PHYSICS:RELATIVITY-FUDGE, which is
    exactly the wrong thing.

    The conversion of the first form into the second package-ignoring form
    seems to be handled by EXPORT's COMPILER:TOP-LEVEL-FORM property.

Thanks for reminding us.  This has been a pending known bug since the Release 6
beta test, and as far as I know has not yet been resolved.

3-Jul-85 21:01:23-EDT,1752;000000000000  
Received: from MIT-REAGAN by MIT-OZ via Chaosnet; 11 Jun 85 15:10-EDT
Received: from SCRC-STONY-BROOK by MIT-REAGAN via INTERNET with SMTP id 5541; 11 Jun 85 15:18:04-EDT
Received: from EUPHRATES.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 252170; Tue 11-Jun-85 15:08:47-EDT
Date: Tue, 11 Jun 85 15:11 EDT
From: David A. Moon <Moon@STONY-BROOK.SCRC.Symbolics.COM>
Subject: Can't export from a patch.
To: Ken Haase <KWH@OZ.mit>
cc: BUG-LISPM@OZ.mit
In-Reply-To: <850524151827.1.KWH@DUANE>
Supersedes: <850611151033.9.MOON@EUPHRATES.SCRC.Symbolics.COM>
Message-ID: <850611151121.0.MOON@EUPHRATES.SCRC.Symbolics.COM>

    Date: Fri, 24 May 85 15:18 EDT
    From: Ken Haase <KWH@OZ>

    In Symbolics 3670 Release 6.0

    When an export form is patched, the resultant compiled code ignores the
    package-local information which is neccessary for the use of export to
    make sense.  In particular, if you M-X Add Patch the following form:

	(EXPORT '(RELATIVITY-FUDGE))

    from a buffer and file where the package is PHYSICS, the resulting patch
    is compiled into a load-time call of the form:

       (EXPORT (LIST (INTERN "RELATIVITY-FUDGE")))

    which (since the package of the patch file is USER) exports
    USER:RELATIVITY-FUDGE instead of PHYSICS:RELATIVITY-FUDGE, which is
    exactly the wrong thing.

    The conversion of the first form into the second package-ignoring form
    seems to be handled by EXPORT's COMPILER:TOP-LEVEL-FORM property.

Thanks for reminding us.  This has been a pending known bug since the Release 6
beta test, and as far as I know has not yet been resolved.  The workaround is
of course to wrap a ZL:PKG-BIND form around the EXPORT form.

3-Jul-85 21:01:24-EDT,2571;000000000000   
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 11 Jun 85 15:21-EDT
Received: from SCRC-STONY-BROOK.ARPA (scrc-stony-brook.arpa.ARPA) by MIT-HTVAX.ARPA (4.12/4.7) 
	id AA16349; Tue, 11 Jun 85 15:06:49 edt
Received: from EUPHRATES.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 252165; Tue 11-Jun-85 15:05:34-EDT
Date: Tue, 11 Jun 85 15:08 EDT
From: David A. Moon <Moon@STONY-BROOK.SCRC.Symbolics.COM>
Subject: I still don't think you guys have debugged 6.0!
To: Robert Kassel <sr.rob%MIT-SPEECH@MIT-HTVAX.ARPA>
Cc: BUG-LISPM%MIT-SPEECH@MIT-HTVAX.ARPA,
        bug-lmdoc@STONY-BROOK.SCRC.Symbolics.COM
In-Reply-To: <850524155600.1.ROB@GRIZZLY.MIT>
Message-Id: <850611150802.8.MOON@EUPHRATES.SCRC.Symbolics.COM>

    Date: Friday, 24 May 1985, 15:56-EDT
    From: Robert Kassel <sr.rob%MIT-SPEECH@MIT-HTVAX.ARPA>

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, Spire-Macros 5.1,
    Attribute 5.5, Compute 5.2, Audio 4.0, Speech-Attributes 4.0,
    Display 6.16, Speech-Layouts 6.2, Prtout 4.0, Versatec 5.0, Spire 16.0,
    ZOO 6.5, ZOO-SPIRE 2.0, Defsystem Extensions 1.2,
    Experimental Alexis Definition 1.0, Experimental Pop-Up-Calculator 1.0,
    Experimental Alexis Television 4.1, microcode TMC5-MIC 319, on Lisp Machine Grizzly: 

    I was trying to instantiate tv:text-scroll-window to check for a bug and
    I didn't even get that far!  Is this not an instantiable flavor?  If
    not, why did it let me try?

    >>Error: :OVERRIDE :WHO-LINE-DOCUMENTATION-STRING method(s) illegal when using :DAEMON method-combination
    While in the function SI:GET-CERTAIN-METHODS  (:PROPERTY :DAEMON SI:METHOD-COMBINATION)  SI:COMPOSE-METHOD-COMBINATION

    SI:COMPOSE-METHOD-COMBINATION:  (P.C. = 457)
       Arg 0 (FL): #<FLAVOR TV:TEXT-SCROLL-WINDOW 76317754>

    TV:MAKE-WINDOW:  (P.C. = 43)
       Arg 0 (FLAVOR-NAME): TV:TEXT-SCROLL-WINDOW
       Rest arg (OPTIONS): (:EDGES-FROM :MOUSE)

It's a mixin, according to the :documentation clause in its defflavor.

bug-lmdoc: The documentation of this flavor in the document examiner doesn't say
that it is a mixin.  Actually the current text scroll windows section seems to
be a placeholder to be replaced in the future by the real documentation on text
scroll windows when it's finished.

Why did it let you try to instantiate it?  No one told the flavor system it shouldn't.
There is a small deficiency here: we have normal flavors and abstract flavors.  This
is neither of those; there ought to be a third category, mixin flavors.

3-Jul-85 21:01:24-EDT,2785;000000000000    
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 11 Jun 85 18:20-EDT
Date: 11 Jun 1985  18:22 EDT (Tue)
Message-ID: <SR.ROB.12118375057.BABYL@MIT-SPEECH>
From: "Robert H. Kassel" <sr.rob@MIT-SPEECH>
To:   "David A. Moon" <Moon@STONY-BROOK.SCRC.Symbolics.COM>
Cc:   BUG-LISPM@MIT-SPEECH, bug-lmdoc@STONY-BROOK.SCRC.Symbolics.COM
Subject: I still don't think you guys have debugged 6.0!

    Date: Tuesday, 11 June 1985  15:08-EDT
    From: David A. Moon <Moon at STONY-BROOK.SCRC.Symbolics.COM>
    To:   Robert Kassel <sr.rob%MIT-SPEECH at MIT-HTVAX.ARPA>
    cc:   BUG-LISPM%MIT-SPEECH at MIT-HTVAX.ARPA,
          bug-lmdoc at STONY-BROOK.SCRC.Symbolics.COM
    Re:   I still don't think you guys have debugged 6.0!

        Date: Friday, 24 May 1985, 15:56-EDT
        From: Robert Kassel <sr.rob%MIT-SPEECH@MIT-HTVAX.ARPA>

        In Symbolics 3600 Release 6.0, IP-TCP 29.0, Spire-Macros 5.1,
        Attribute 5.5, Compute 5.2, Audio 4.0, Speech-Attributes 4.0,
        Display 6.16, Speech-Layouts 6.2, Prtout 4.0, Versatec 5.0, Spire 16.0,
        ZOO 6.5, ZOO-SPIRE 2.0, Defsystem Extensions 1.2,
        Experimental Alexis Definition 1.0, Experimental Pop-Up-Calculator 1.0,
        Experimental Alexis Television 4.1, microcode TMC5-MIC 319, on Lisp Machine Grizzly: 

        I was trying to instantiate tv:text-scroll-window to check for a bug and
        I didn't even get that far!  Is this not an instantiable flavor?  If
        not, why did it let me try?

        >>Error: :OVERRIDE :WHO-LINE-DOCUMENTATION-STRING method(s) illegal when using :DAEMON method-combination
        While in the function SI:GET-CERTAIN-METHODS  (:PROPERTY :DAEMON SI:METHOD-COMBINATION)  SI:COMPOSE-METHOD-COMBINATION

        SI:COMPOSE-METHOD-COMBINATION:  (P.C. = 457)
           Arg 0 (FL): #<FLAVOR TV:TEXT-SCROLL-WINDOW 76317754>

        TV:MAKE-WINDOW:  (P.C. = 43)
           Arg 0 (FLAVOR-NAME): TV:TEXT-SCROLL-WINDOW
           Rest arg (OPTIONS): (:EDGES-FROM :MOUSE)

    It's a mixin, according to the :documentation clause in its defflavor.

    bug-lmdoc: The documentation of this flavor in the document examiner doesn't say
    that it is a mixin.  Actually the current text scroll windows section seems to
    be a placeholder to be replaced in the future by the real documentation on text
    scroll windows when it's finished.

    Why did it let you try to instantiate it?  No one told the flavor system it shouldn't.
    There is a small deficiency here: we have normal flavors and abstract flavors.  This
    is neither of those; there ought to be a third category, mixin flavors.

Perhaps the name should be changed too.  I wouldn't have tried to
instntiate it if it was named tv:text-scroll-window-mixin.
3-Jul-85 21:01:24-EDT,1978;000000000000 
Received: from MIT-APIARY-3 by MIT-OZ via Chaosnet; 12 Jun 85 00:17-EDT
Date: Wed, 12 Jun 85 00:18 EDT
From: Henry Lieberman <Henry@OZ>
Subject: Can you still write Lisp in Lisp?
To: Moon@SCRC-STONY-BROOK
cc: Bug-Lispm@OZ
Message-ID: <850612001843.1.HENRY@APIARY-3>


    I think your complaint is really that you have to figure out some undocumented things
    over again in order to make your interpreter modifications work in the new release,
    and that a lexical interpreter is more complicated than a dynamic interpreter.

Yes, I guess that's a fair way to put it. 

    Also, I disagree with
    your contention that a "complete" implementation of lexical scoping has to include
    documented interfaces that allow the user to modify the interpreter's handling of
    special forms.  Few people (probably only those like yourself doing research into
    advanced programming support tools) need that.

What I'm interested in is NOT modifying the Lisp interpreter, as you seem to
imply, but in writing ANOTHER interpreter that extends the semantics of Lisp.
This is not all so unusual -- I can think of lots of examples offhand.  The trick
in doing this is to let Lisp take care of anything your special language doesn't
want to treat specially.  That is what makes Lisp so attractive as a
language-building language - you don't have to re-implement the world.  I'm just
asking for a documented interface of enough of the Lisp interpreter to support
building language extensions.

    Let me know if you need more assistance.  I haven't really given you any details
    except for telling you what cl:special-form-p returns and telling you to read
    the source; I'll be happy to explain more when I have time available, if you ask
    me.

Thanks.  Knowing about CL:SPECIAL-FORM-P is a helpful bit of information.  
I'll get back to you after more study of the new evaluator, and thinking about my
needs for this application.  

3-Jul-85 21:01:25-EDT,1066;000000000000   
Received: from MIT-MC by MIT-OZ via Chaosnet; 12 Jun 85 01:56-EDT
Date: Wed, 12 Jun 85 01:59:10 EDT
From: Christopher C. Stacy <CSTACY@MIT-MC.ARPA>
Subject:  [Postmaster@SCRC-STONY-BROOK.ARPA: Unable to deliver letter]
To: Hornig@SCRC-STONY-BROOK.ARPA
cc: Moon@SCRC-STONY-BROOK.ARPA, Bug-LISPM@MIT-OZ, HENRY@MIT-OZ
In-reply-to: Msg of Tue 11 Jun 85 14:51 EDT from Charles Hornig <Hornig at SCRC-STONY-BROOK.ARPA>
Message-ID: <[MIT-MC.ARPA].539632.850612.CSTACY>

Looking too long at this problem report hurt my eyes, so I didn't look
at it all that hard, but I think it just looks like EUPHRATES had the
incorrect idea about OZ's name, REAGAN correctly barfed about it, and
STONY correctly relayed the error back to Moon.  Is this right?

There is an MIT domain currently being maintained on some Athena
machine but I don't think there are any hosts registered in it yet.
The MIT Internet machines are in the ARPA domain and the Chaosnet
machines are not in any domain yet (they are all hidden behind a .ARPA
relay machine such as MIT-MC.ARPA.)

3-Jul-85 21:01:25-EDT,2040;000000000000    
Received: from MIT-REAGAN by MIT-OZ via Chaosnet; 12 Jun 85 09:01-EDT
Received: from SCRC-STONY-BROOK by MIT-REAGAN via INTERNET with SMTP id 5543; 12 Jun 85 09:09:35-EDT
Received: from NEPONSET.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 252642; Wed 12-Jun-85 08:59:42-EDT
Date: Wed, 12 Jun 85 09:02 EDT
From: David C. Plummer in disguise <DCP@SCRC-QUABBIN.ARPA>
Subject: [Postmaster@SCRC-STONY-BROOK.ARPA: Unable to deliver letter]
To: Christopher C. Stacy <CSTACY@MIT-MC.ARPA>,
    Hornig@SCRC-STONY-BROOK.ARPA
cc: Moon@SCRC-STONY-BROOK.ARPA, Bug-LISPM@MIT-OZ.mit, HENRY@MIT-OZ.mit
In-Reply-To: <[MIT-MC.ARPA].539632.850612.CSTACY>
Message-ID: <850612090214.4.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Wed, 12 Jun 85 01:59:10 EDT
    From: Christopher C. Stacy <CSTACY@MIT-MC.ARPA>

    Looking too long at this problem report hurt my eyes, so I didn't look
    at it all that hard, but I think it just looks like EUPHRATES had the
    incorrect idea about OZ's name, REAGAN correctly barfed about it, and
    STONY correctly relayed the error back to Moon.  Is this right?

    There is an MIT domain
Excuse me, there is not such thing as an MIT domain, and the MIT
namespace is wrong in thinking there is.  If there is any domain at all
for MIT, it is MIT.EDU.
    currently being maintained on some Athena machine 
And this is the wrong place for it to be kept.  Domains are maintained
by the NIC.  If what you are really trying to say is that the handler
for the .MIT.EDU domain is some Athena machine, my impression is that
this is a bad idea.  I thought Athena was an experimental project for
student computing.  Something as large as .MIT.EDU should have a much
more stable (read: Internet/Arpanet) handler.
    but I don't think there are any hosts registered in it yet.
    The MIT Internet machines are in the ARPA domain and the Chaosnet
    machines are not in any domain yet (they are all hidden behind a .ARPA
    relay machine such as MIT-MC.ARPA.)



3-Jul-85 21:01:25-EDT,2468;000000000000 
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 12 Jun 85 12:11-EDT
Received: from SCRC-STONY-BROOK.ARPA (scrc-stony-brook.arpa.ARPA) by MIT-HTVAX.ARPA (4.12/4.7) 
	id AA22221; Wed, 12 Jun 85 12:02:10 edt
Received: from CARDINAL.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 252827; Wed 12-Jun-85 12:02:24-EDT
Date: Wed, 12 Jun 85 12:04 EDT
From: William M. York <York@SCRC-QUABBIN.ARPA>
Subject: I still don't think you guys have debugged 6.0!
To: Moon@SCRC-STONY-BROOK.ARPA, sr.rob%MIT-SPEECH@MIT-HTVAX.ARPA
Cc: BUG-LISPM%MIT-SPEECH@MIT-HTVAX.ARPA
In-Reply-To: <850611150802.8.MOON@EUPHRATES.SCRC.Symbolics.COM>
Message-Id: <850612120430.6.YORK@CARDINAL.SCRC.Symbolics.COM>

    Date: Tue, 11 Jun 85 15:08 EDT
    From: David A. Moon <Moon@STONY-BROOK.SCRC.Symbolics.COM>

	Date: Friday, 24 May 1985, 15:56-EDT
	From: Robert Kassel <sr.rob%MIT-SPEECH@MIT-HTVAX.ARPA>

	I was trying to instantiate tv:text-scroll-window to check for a bug and
	I didn't even get that far!  Is this not an instantiable flavor?  If
	not, why did it let me try?

	>>Error: :OVERRIDE :WHO-LINE-DOCUMENTATION-STRING method(s) illegal when using :DAEMON method-combination
	While in the function SI:GET-CERTAIN-METHODS  (:PROPERTY :DAEMON SI:METHOD-COMBINATION)  SI:COMPOSE-METHOD-COMBINATION

    It's a mixin, according to the :documentation clause in its defflavor.

    bug-lmdoc: The documentation of this flavor in the document examiner doesn't say
    that it is a mixin.  Actually the current text scroll windows section seems to
    be a placeholder to be replaced in the future by the real documentation on text
    scroll windows when it's finished.

    Why did it let you try to instantiate it?  No one told the flavor system it shouldn't.
    There is a small deficiency here: we have normal flavors and abstract flavors.  This
    is neither of those; there ought to be a third category, mixin flavors.

[removed bug-lmdoc]

The tv:text-scroll-window flavor definition specifies (:included-flavors
tv:basic-scroll-bar).  The tv:basic-scroll-bar flavor definition
specifies (:required-flavors tv:essential-window).  I don't know much
about flavor instantiation or combination, but it would be nice if
(tv:make-window 'tv:text-scroll-window) would warn you about the missing
required flavor tv:essential-window before blowing up.  That would give
the user a pretty big clue as to what was going on.

3-Jul-85 21:01:26-EDT,2209;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 12 Jun 85 14:08-EDT
Received: from SCRC-QUABBIN.ARPA (scrc-quabbin.arpa.ARPA) by MIT-HTVAX.ARPA (4.12/4.7) 
	id AA22794; Wed, 12 Jun 85 13:59:29 edt
Received: from EUPHRATES.SCRC.Symbolics.COM by SCRC-QUABBIN.ARPA via CHAOS with CHAOS-MAIL id 170992; Wed 12-Jun-85 14:00:35-EDT
Date: Wed, 12 Jun 85 14:02 EDT
From: David A. Moon <Moon@STONY-BROOK.SCRC.Symbolics.COM>
Subject: I still don't think you guys have debugged 6.0!
To: William M. York <York@QUABBIN.SCRC.Symbolics.COM>
Cc: sr.rob%MIT-SPEECH@MIT-HTVAX.ARPA, BUG-LISPM%MIT-SPEECH@MIT-HTVAX.ARPA
In-Reply-To: <850612120430.6.YORK@CARDINAL.SCRC.Symbolics.COM>
Message-Id: <850612140217.3.MOON@EUPHRATES.SCRC.Symbolics.COM>

    Date: Wed, 12 Jun 85 12:04 EDT
    From: William M. York <York@SCRC-QUABBIN.ARPA>

	    Date: Friday, 24 May 1985, 15:56-EDT
	    From: Robert Kassel <sr.rob%MIT-SPEECH@MIT-HTVAX.ARPA>

	    I was trying to instantiate tv:text-scroll-window

	    >>Error: :OVERRIDE :WHO-LINE-DOCUMENTATION-STRING method(s) illegal when using :DAEMON method-combination
	    While in the function SI:GET-CERTAIN-METHODS  (:PROPERTY :DAEMON SI:METHOD-COMBINATION)  SI:COMPOSE-METHOD-COMBINATION

    The tv:text-scroll-window flavor definition specifies (:included-flavors
    tv:basic-scroll-bar).  The tv:basic-scroll-bar flavor definition
    specifies (:required-flavors tv:essential-window).  I don't know much
    about flavor instantiation or combination, but it would be nice if
    (tv:make-window 'tv:text-scroll-window) would warn you about the missing
    required flavor tv:essential-window before blowing up.  That would give
    the user a pretty big clue as to what was going on.

Yes, that is what was supposed to happen.  Unfortunately this other error
happened first, because the appropriate method-combination type did not
get inherited from the required flavor that wasn't there.  The reason it
can't just check for required flavors before it thinks about methods is
that it wants to report missing flavors and missing methods in a single
report.  I'll track this, since I'm currently studying what's wrong with
the flavor system.

3-Jul-85 21:01:26-EDT,752;000000000000   
Received: from MIT-SID by MIT-OZ via Chaosnet; 12 Jun 85 16:01-EDT
Date: Wed, 12 Jun 85 16:01 EDT
From: Daniel Weise <DANIEL@MIT-MC>
Subject: a trap for novice users
To: BUG-LISPM@OZ
Message-ID: <850612160118.0.DANIEL@SID>

In Symbolics 3670 Release 6.0, IP-TCP 29.0, AISite 9.3,
microcode TMC5-IO4-MIC 319, FEP 22, on Lisp Machine Sid Vicious:

When in command preferred mode typing

b<cr>

results in the machine irretrievably booting itself because 
"b" completes to boot.  I think that the boot command should 
ask for confirmation.  (This happened to someone I know who
got confused and typed B<cr> thinking it would show the value of
the variable B.  Imagine the surprise generated when the machine
booted itself!!)

Daniel
3-Jul-85 21:01:26-EDT,5131;000000000000   
Received: from MIT-APIARY-4 by MIT-OZ via Chaosnet; 12 Jun 85 20:47-EDT
Date: Wed, 12 Jun 85 20:46 EDT
From: Randy Parker <PARKER@OZ>
Subject: Can you still write Lisp in Lisp?
To: Bug-Lispm@OZ
cc: Henry Lieberman <Henry@OZ>,
    David C. Plummer in disguise <DCP@SCRC-QUABBIN>,
    Moon@SCRC-STONY-BROOK
References: <850520143819.2.HENRY@BUDDY>,
            <850529165907.1.HENRY@APIARY-4>,
            <850530120547.0.NFEP@NEPONSET.SCRC.Symbolics.COM>,
            <850531002825.2.HENRY@SID>,
            <850531121924.7.NFEP@NEPONSET.SCRC.Symbolics.COM>,
            <850612001843.1.HENRY@APIARY-3>
Message-ID: <850612204630.5.PARKER@APIARY-4>

    Date: Fri, 31 May 85 12:19 EDT
    From: David C. Plummer in disguise <DCP@SCRC-QUABBIN.ARPA>

	Date: Fri, 31 May 85 00:28 EDT
	From: Henry Lieberman <Henry@OZ>

    Moon is the right one to give you the gory details.  He'll be back in 10
    days or so.

	    In normal operation, users should never have to know what environments
	    look like, for either viewing or modification.  Instead, macros and
	    special forms accept an environment (via the &ENVIRONMENT keyword in the
	    arglist) and pass this environment to EVAL as necessary).  I think you
	    will agree this is the normal case.

	    We aren't currently prepared to handle your case of a Lisp-like
	    interpreter that resorts to Lisp.

	That's very discouraging.  Since my work, and the work of many of your users
	involves constructing Lisp-based programming environments, 
    I don't believe this.  If you change "many" to "some" I would.
	the ability to 
	write interpreters for Lisp and Lisp-embedded languages is crucial. 
    Therefore I don't believe this.
	It IS part of "normal operation".  
    I am under the impression MOST of our users write applications in Lisp.
    What I gather you are doing is augmenting or writing a dialect of Lisp
    based on the Lisp we provide.  I would be surprised of 10% of the 1000+
    installed machines normally do their work in something other than
    ZetaLisp.

My application (a stepping debugging tool) is not a Lisp evaluator, but
nonetheless would benefit from access to environments.
Agreed that the "normal" usage is as described above, but I would agree
with Henry's request for access to environments and perhaps even some
documentation on such.
MOST of your users would never have to see it, but a non-trivial number
of tools dealing with Lisp would use such things.  I don't think these
uses can be so easily forgotten.

	If you're going to have environments in the system, they might as well be
	first-class objects.
    In a sense, they are.  They are as first-class as the internal parsed
    datastructures of scroll windows.
	Right now, it's so bad you can't even print out an 
	environment, since they're circular defstructs. 
    They are lists.  More than that, they are "consed" on the stack when
    possible so it doesn't take up heap space.
	I can sympathize with your
	intention of not wanting users to be too dependent on the details of the 
	evaluator, but putting the Lisp "programs are data" philosophy into practice
	means that the workings of such things as environments and special forms must be
	available to users.   
    Again, this is not the "normal" case.  Common Lisp, for example,
    specifically all the special forms that officially exist in the
    language.  They are lists on the top of page 57 of the silver edition.
    Common Lisp does not provide a way to define more.  Common Lisp says
    that EVAL takes an optional environment, but never says how you get your
    hands on an environment,
Maybe this needs to be reconsidered.
                             much less how to construct one.  I'm mumbling.
    I think I'm trying to say that I don't think this has much to do with
    "programs are data."

	I'm all for lexical scoping, but I'd have to say that in the current system, 
	it is not completely implemented.  The "lexical scoping is better" argument
	loses considerable force if it means that you have to give up the ability to
	write Lisp-embedded languages and sacrifice important debugging features
	like being able to examine variables in breakpoints.  I'd just like to 
	be able to do some of the things I used to do with bad old dynamic scoping.
	I hope you will give some thought to fixing these problems.  Thanks.  
    I believe the debugger has been significantly improved between 6.0 and
    6.1 to understand both compiled and interpreted environments.  Note that
    you still can't examine variables at breakpoints (meaning (BREAK)).
    This is on the grounds that a breakpoint executes in a top level
    (null) environment.  Getting into the debugger will give you lexical
    access, so use (FSIGNAL "poke around") or something.

    In some future release we may have the resources to document how to
    create, modify and augment environments.  We are still developing our
    own tools to do this, as each application seems to always want some
    variant.

A good idea.
3-Jul-85 21:01:27-EDT,3106;000000000000   
Received: from MIT-MORRISON by MIT-OZ via Chaosnet; 12 Jun 85 23:30-EDT
Date: Wed, 12 Jun 85 23:28 EDT
From: Chris Lindblad <CJL@OZ>
Subject: My default printer is Buffy, but Zmail wants to send to Tremont  
To: BUG-LISPM@OZ
Message-ID: <850612232853.2.CJL@MORRISON>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.4,
microcode TMC5-MIC 319, FEP 22, on Lisp Machine Jim Morrison:

si:*default-hardcopy-device* => #<ASCII-PRINTER BUFFY 1400040>
(This was so because the namespace object for Morrison it's default
printer should be buffy)
But:
zwei:*hardcopy-device* => #<PRESS-PRINTER TREMONT 1402073>
Why does Zmail maintain it's own hardcopy device, that's not updated
with the right default for the local machine? It's not even the default
for the local site.

>>Break: 
While in the function PROCESS-WAIT  PROCESS-WAIT-WITH-TIMEOUT  TCP::TFTP-READ-ACK

ZWEI:COM-ZMAIL-HARDCOPY-MSG:  (P.C. = 22)

ZWEI:COM-ZMAIL-OTHER-COMMANDS:  (P.C. = 3)

ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
   Arg 0 (COMMAND): ZWEI:COM-ZMAIL-OTHER-COMMANDS
   Arg 1 (CHAR): (:MENU ("Other" . ZWEI:COM-ZMAIL-OTHER-COMMANDS) 1. #<ZMAIL-MAIN-COMMAND-MENU-PANE Zmail Main Command Menu Pane 1 43207724 exposed>)
   --Defaulted args:--
   Arg 2 (PREFIX-CHAR): NIL
   Arg 3 (HOOK-LIST): NIL

ZWEI:ZMAIL-COMMAND-EXECUTE:  (P.C. = 6)
   Arg 0: ZWEI:COM-ZMAIL-OTHER-COMMANDS

(:INTERNAL ZWEI:ZMAIL-COMMAND-LIST 0. (:MENU)):  (P.C. = 10)
   Arg 0 (**DEFSELECT-OP**): :MENU
   Arg 1 (ITEM): ("Other" . ZWEI:COM-ZMAIL-OTHER-COMMANDS)
   Arg 2 (CH): 1.
   Arg 3 (WINDOW): #<ZMAIL-MAIN-COMMAND-MENU-PANE Zmail Main Command Menu Pane 1 43207724 exposed>

ZWEI:ZMAIL-COMMAND-LIST:  (P.C. = 12)
   Arg 0 (OPERATION): :MENU
   Rest arg (SELECT-METHOD-ARGS): (("Other" . ZWEI:COM-ZMAIL-OTHER-COMMANDS) 1. #<ZMAIL-MAIN-COMMAND-MENU-PANE Zmail Main Command Menu Pane 1 43207724 exposed>)

(:METHOD ZWEI:ZMAIL-FRAME :PROCESS-SPECIAL-COMMAND):  (P.C. = 16)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 43200617 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-FRAME -- 65. IV's, 20. FL's 142611405>
   Arg 2 (OPERATION): :PROCESS-SPECIAL-COMMAND
   Rest arg (ARGS): (:MENU ("Other" . ZWEI:COM-ZMAIL-OTHER-COMMANDS) 1. #<ZMAIL-MAIN-COMMAND-MENU-PANE Zmail Main Command Menu Pane 1 43207724 exposed>)

(:METHOD ZWEI:ZMAIL-FRAME :COMMAND-LOOP):  (P.C. = 136)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 43200617 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-FRAME -- 65. IV's, 20. FL's 142611405>
   Arg 2 (OPERATION): :COMMAND-LOOP

(:METHOD ZWEI:ZMAIL-FRAME :COMBINED :COMMAND-LOOP):  (P.C. = 70)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 43200617 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-FRAME -- 65. IV's, 20. FL's 142611405>
   Arg 2 (.OPERATION.): :COMMAND-LOOP
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

ZWEI:ZMAIL-PROCESS-TOP-LEVEL:  (P.C. = 105)
   Arg 0 (WINDOW): #<ZMAIL-FRAME Main Zmail Window 43200617 exposed>

SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
   --Defaulted args:--
   Arg 0 (IGNORE): NIL
3-Jul-85 21:01:27-EDT,2914;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 13 Jun 85 12:34-EDT
Received: from SCRC-STONY-BROOK.ARPA by MIT-MC.ARPA 13 Jun 85 12:36:45 EST
Received: from ANNISQUAM.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 253620; Thu 13-Jun-85 12:32:06-EDT
Date: Thu, 13 Jun 85 12:34 EDT
From: Doug Dodds <DODDS@TENEX.SCRC.Symbolics.COM>
Subject: ZMAIL BUG
To: CJL%OZ@MIT-MC.ARPA
cc: BUG-LISPM%OZ@MIT-MC.ARPA, bug-zmail@TENEX.SCRC.Symbolics.COM
In-Reply-To: <850607232043.3.CJL@ELVIS>,
             <850607232538.1.CJL@ELVIS>
Message-ID: <850613123456.7.DODDS@ANNISQUAM.SCRC.Symbolics.COM>

    Date: Fri, 7 Jun 85 23:20 EDT
    From: Chris Lindblad <CJL@OZ>

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.3,
    microcode TMC5-MIC 319, FEP 22, on Lisp Machine Elvis Presley:

    Tk's logged into elvis. CJL logs in. He types system-m, gets zmail,
    which has nothing loaded in. Types g, and CJL's mail is loaded into the
    machine. Great. He deals with his mail, and types s. IT THEN PROCEEDS TO
    SAVE CJL's MAIL IN TK's MAIL FILE. Bad computer.

    (This bug trace was produced typing s a second time, after I quickly
    typed c-abort for the first s. I typed s the second time to make a
    backtrace to show you.)


    Date: Fri, 7 Jun 85 23:25 EDT
    From: Chris Lindblad <CJL@OZ>

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.3,
    microcode TMC5-MIC 319, FEP 22, on Lisp Machine Elvis Presley:

    Well, maybe not. Apparently TK's mail was being saved into TK's mail
    file, even though I didn't even know he had mail sitting on this machine
    that had to be saved. I really don't think "s" should do this. It gave
    me a real panic.

Well, um, <Help> S says that's what it does (expunge and write out all
files) and so does the mouse line doc for [Save(L)].  I guess I agree
that it's a surprisingly drastic option for the vanilla version of a
letter command, but it has been defined that way forever, and there has
been resistance to changing it.  But it won't surprise you the next
time, I bet.

Other options that would be useful to become familiar with are m-X Save
Current Buffer, which is what new users sometime assume is what "S"
should do; and [Save(R)], which gives a multiple choice menu for saving,
expunging, and killing any of the existing buffers.

Part of the problem here, too, is what happens or should happen to mail
buffers when one user logs out and another logs in.  This has been a
topic of considerable debate, but for the moment, the weight of public
opinion is on the side of the way it works now: existing buffers are
retained, but there is made to be no current buffer.  So somebody can
log in "over" somebody else, read mail, log out, and the first guy's
mail beffers are still there.  I don't like this too much either, but
the majority seems to like it.

3-Jul-85 21:01:27-EDT,2633;000000000000 
Received: from MIT-MC by MIT-OZ via Chaosnet; 13 Jun 85 15:12-EDT
Received: from SCRC-STONY-BROOK.ARPA by MIT-MC.ARPA 13 Jun 85 15:15:07 EST
Received: from EUPHRATES.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 253817; Thu 13-Jun-85 15:11:06-EDT
Return-path: <MAILER-DAEMON@MIT-EDDIE.ARPA>
Received: from MIT-EDDIE.ARPA by SCRC-STONY-BROOK.ARPA via INTERNET with SMTP id 253741; 13 Jun 85 14:13:01-EDT
Received: from SCRC-STONY-BROOK.ARPA by mit-eddie.ARPA (4.12/4.8)  id AA05088; Thu, 13 Jun 85 14:14:25 edt
Date: Thu, 13 Jun 85 14:10 EDT
From: Mail Delivery Subsystem <MAILER-DAEMON@mit-eddie.ARPA>
Subject: Returned mail: Host unknown
Message-Id: <8506131814.AA05088@mit-eddie.ARPA>
To: <Moon@SCRC-STONY-BROOK.ARPA>
Resent-To: bug-lispm%mit-oz@MIT-MC.ARPA
Resent-From: Moon@SCRC-STONY-BROOK.ARPA
Resent-Date: Thu, 13 Jun 85 15:13 EDT
Resent-Message-ID: <850613151348.0.MOON@EUPHRATES.SCRC.Symbolics.COM>
Resent-Comments: You bug-lispm people probably didn't really want to see this anyway....

   ----- Transcript of session follows -----
550 <Bug-LISPM%MIT-OZ.mit@MIT-EDDIE.ARPA>... Host unknown

   ----- Unsent message follows -----
Received: from SCRC-STONY-BROOK.ARPA by mit-eddie.ARPA (4.12/4.8)  id AA05086; Thu, 13 Jun 85 14:14:25 edt
Received: from EUPHRATES.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 253724; Thu 13-Jun-85 14:07:25-EDT
Date: Thu, 13 Jun 85 14:10 EDT
From: David A. Moon <Moon@SCRC-STONY-BROOK.ARPA>
Subject: [Postmaster@SCRC-STONY-BROOK.ARPA: Unable to deliver letter]
To: JIS@MIT-MULTICS.ARPA
Cc: DCP@SCRC-QUABBIN.ARPA, CSTACY@MIT-MC.ARPA, Hornig@SCRC-STONY-BROOK.ARPA,
        Bug-LISPM%MIT-OZ.mit@MIT-EDDIE.ARPA
In-Reply-To: <8506131754.AA12614@MIT-BITSY.MIT.EDU>
Message-Id: <850613141009.2.MOON@EUPHRATES.SCRC.Symbolics.COM>

    Date: Thu, 13 Jun 85 13:54:27 edt
    From: jis@MIT-BITSY.MIT.EDU (Jeffrey I. Schiller)

    Correct solution:

    Add a "CHAOS" class to the domain system. Register all MIT chaos hosts
    in the MIT.EDU domain accordingly. As a cute second level task write
    a domain resolver using chaos protocols (RFC-ANS instead of UDP).

Note that there is more than one Chaosnet in the world.  In fact there are
several hundred.  If I remember the domain-system RFC's correctly, this is
one of the facts they overlooked since (they thought) there is only one
Internet in the world.  You could call the class MIT-CHAOS, or you could
ignore the issue, allowing domain servers to hand out bogus addresses that
are on a different Chaosnet than expected by the queryer.


3-Jul-85 21:01:27-EDT,1868;000000000000 
Received: from MIT-MORRISON by MIT-OZ via Chaosnet; 13 Jun 85 16:12-EDT
Date: Thu, 13 Jun 85 16:11 EDT
From: Chris Lindblad <CJL@OZ>
Subject: tcp:translate-nic-host-stream & SCRC NIC host table entries
To: BUG-LISPM@OZ
Message-ID: <850613161149.4.CJL@MORRISON>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.4,
microcode TMC5-MIC 319, FEP 22, on Lisp Machine Jim Morrison:

tcp:translate-nic-host-stream made the primary name for stony-brook to
be scrc. It also made YUKON the primary for scrc-yukon. This is probably
because yukon comes before scrc-yukon in the entry.

Is this on purpose?

HOST : 192.10.41.144 : SCRC-STONY-BROOK.ARPA,SCRC,SYMBOLICS,SCRC-STONY-BROOK,STONY-BROOK.SCRC.SYMBOLICS.COM : SYMBOLICS-3600 : LISPM : UDP/TIME,UDP/TFTP,TCP/FINGER,TCP/FTP,TCP/SMTP,TCP/SUPDUP,TCP/TELNET,TCP/TIME,UDP/FINGER,UDP/DOMAIN :

HOST SCRC
NICKNAME SYMBOLICS
NICKNAME SCRC-STONY-BROOK
ADDRESS INTERNET 192.10.41.144
MACHINE-TYPE 3600
SYSTEM-TYPE LISPM
SERVICE TIME UDP TIME-SIMPLE-MSB
SERVICE FILE UDP TFTP
SERVICE SHOW-USERS TCP ASCII-NAME
SERVICE FILE TCP TCP-FTP
SERVICE MAIL-TO-USER TCP SMTP
SERVICE SEND TCP SMTP
SERVICE EXPAND-MAIL-RECIPIENT TCP SMTP
SERVICE LOGIN TCP SUPDUP
SERVICE LOGIN TCP TELNET
SERVICE TIME TCP TIME-MSB

HOST : 192.10.41.3 : SCRC-YUKON.ARPA,YUKON,SCRC-YUKON,YUKON.SCRC.SYMBOLICS.COM : SYMBOLICS-3600 : LISPM : TCP/FINGER,TCP/FTP,TCP/SMTP,TCP/SUPDUP,TCP/TELNET,TCP/TIME,UDP/FINGER,UDP/TIME,UDP/TFTP :

HOST YUKON
NICKNAME SCRC-YUKON
ADDRESS INTERNET 192.10.41.3
MACHINE-TYPE 3600
SYSTEM-TYPE LISPM
SERVICE SHOW-USERS TCP ASCII-NAME
SERVICE FILE TCP TCP-FTP
SERVICE MAIL-TO-USER TCP SMTP
SERVICE SEND TCP SMTP
SERVICE EXPAND-MAIL-RECIPIENT TCP SMTP
SERVICE LOGIN TCP SUPDUP
SERVICE LOGIN TCP TELNET
SERVICE TIME TCP TIME-MSB
SERVICE TIME UDP TIME-SIMPLE-MSB
SERVICE FILE UDP TFTP

3-Jul-85 21:01:28-EDT,1151;000000000000   
Received: from MIT-MC by MIT-OZ via Chaosnet; 13 Jun 85 17:46-EDT
Received: from 40700015427 by MIT-MC.ARPA via Chaosnet; 13 JUN 85  17:48:48 EDT
Date: Thursday, 13 June 1985, 17:46-EDT
From: Cory Myers <cory at MIT-BUGS-BUNNY>
Subject: TAPE:CARRY-DUMP does not preserve BYTE-SIZE
To: BUG-LISPM at OZ
Fcc: BUGS-BUNNY: /syla/dspg/cory/mbox
Message-ID: <850613174659.2.CORY@DAFFY-DUCK.MIT>

In Symbolics 3670 Release 6.0, IP-TCP 29.0,
microcode TMC5-IO4-FPA-MIC 319, FEP 22, with UTIL, on Lisp Machine Daffy Duck:

I dumped the file:

      data..1         19  41658(16)    !   05/03/85 14:03:43 (06/13/85)   eem

using TAPE:CARRY-DUMP.  It did not print that it was copying a binary
file although the byte size was 16.  When I reloaded this file onto
another machine I got:

      data..1         10  41658(8)     !   05/03/85 14:03:43 (06/13/85)   eem

The byte size is wrong and all my programs which assume our binary data
is written with byte size 16 will not open this new file.  The problem
seems to be in TAPE:DUMP-FILE-OPENER but I am not sure what all the
different byte sizes that show up in are supposed to mean.

3-Jul-85 21:01:28-EDT,2329;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 13 Jun 85 18:31-EDT
Received: from SCRC-STONY-BROOK.ARPA by MIT-MC.ARPA 13 Jun 85 18:34:08 EST
Received: from CONCORD.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 254005; Thu 13-Jun-85 18:30:05-EDT
Date: Thu, 13 Jun 85 18:34 EDT
From: Bernard S. Greenberg <BSG@SCRC-STONY-BROOK.ARPA>
Subject: TAPE:CARRY-DUMP does not preserve BYTE-SIZE
To: cory@MIT-BUGS-BUNNY.ARPA, BUG-LISPM%OZ@MIT-MC.ARPA,
    rwk@SCRC-STONY-BROOK.ARPA
In-Reply-To: <850613174659.2.CORY@DAFFY-DUCK.MIT>
Message-ID: <850613183449.8.BSG@CONCORD.SCRC.Symbolics.COM>

    Date: Thursday, 13 June 1985, 17:46-EDT
    From: Cory Myers <cory at MIT-BUGS-BUNNY>

    In Symbolics 3670 Release 6.0, IP-TCP 29.0,
    microcode TMC5-IO4-FPA-MIC 319, FEP 22, with UTIL, on Lisp Machine Daffy Duck:

    I dumped the file:

	  data..1         19  41658(16)    !   05/03/85 14:03:43 (06/13/85)   eem

    using TAPE:CARRY-DUMP.  It did not print that it was copying a binary
    file although the byte size was 16.  When I reloaded this file onto
    another machine I got:

	  data..1         10  41658(8)     !   05/03/85 14:03:43 (06/13/85)   eem

    The byte size is wrong and all my programs which assume our binary data
    is written with byte size 16 will not open this new file.  The problem
    seems to be in TAPE:DUMP-FILE-OPENER but I am not sure what all the
    different byte sizes that show up in are supposed to mean.
Well, this is a good one.  Byte-size/binariness
is cued of canonical type for files that have a known canonical type,
and otherwise, from the file system, because many file systems have
no notion of byte size.

The bug is that "" has a canonical type, :NULL-TYPE.  This is to
facilitate copying files that have this type between systems.  Since
they have a canonical type, the system looks for the
:BINARY-FILE-BYTE-SIZE property, finds none, and assumes character.

This is the only canonical type I know of where the system doesn't
pretend to know anything about a file whose type it claims to know
about.  A new concept of "meaningless canonical type" is necessary, or
at very least, half a dozen functions that think they know how to open
files by pathname alone have to be changed to special case :NULL-TYPE.

3-Jul-85 21:01:28-EDT,896;000000000000    
Received: from MIT-MC by MIT-OZ via Chaosnet; 14 Jun 85 03:39-EDT
Date: Fri, 14 Jun 85 03:41:28 EDT
From: David Vinayak Wallace <GUMBY@MIT-MC.ARPA>
Subject:  Abstract vs mixin flavours
To: Moon@SCRC-STONY-BROOK.ARPA
cc: BUG-LISPM@MIT-MC.ARPA, bug-lmdoc@SCRC-STONY-BROOK.ARPA
In-reply-to: Msg of Tue 11 Jun 85 15:08 EDT from David A. Moon <Moon at STONY-BROOK.SCRC.Symbolics.COM>
Message-ID: <[MIT-MC.ARPA].542257.850614.GUMBY>

    Date: Tue, 11 Jun 85 15:08 EDT
    From: David A. Moon <Moon at STONY-BROOK>

    ...There is a small deficiency here: we have normal flavors and
    abstract flavors.  This is neither of those; there ought to be a third
    category, mixin flavors.

I don't have the manuals near me.  Why need there be a distinction between
abstract flavours and mixin flavours?  Why shouldn't all mixin flavours be
abstract flavours, and vice versa?

david
3-Jul-85 21:01:29-EDT,1389;000000000000
Received: from MIT-XX by MIT-OZ via Chaosnet; 14 Jun 85 03:58-EDT
Received: from SCRC-QUABBIN.ARPA by MIT-XX.ARPA with TCP; Fri 14 Jun 85 04:03:15-EDT
Received: from CHAOS|37730 by SCRC-QUABBIN.ARPA via CHAOS with CHAOS-MAIL id 171589; Fri 14-Jun-85 03:57:41-EDT
Received: from CIRCE.SSF.Symbolics.COM by CERRIDWYN.SSF.Symbolics.COM via CHAOS with CHAOS-MAIL id 2625; Thu 13-Jun-85 21:31:37-PDT
Date: Thu, 13 Jun 85 21:29 PDT
From: Richard Lamson <rsl@RUSSIAN.SPA.Symbolics.COM>
Subject: My default printer is Buffy, but Zmail wants to send to Tremont
To: Chris Lindblad <CJL%OZ@MIT-XX.ARPA>, BUG-LISPM%OZ@MIT-XX.ARPA
In-Reply-To: <850612232853.2.CJL@MORRISON>
Message-ID: <850613212940.4.RSL@CIRCE.SSF.Symbolics.COM>

    Date: Wed, 12 Jun 85 23:28 EDT
    From: Chris Lindblad <CJL@OZ>

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.4,
    microcode TMC5-MIC 319, FEP 22, on Lisp Machine Jim Morrison:

    si:*default-hardcopy-device* => #<ASCII-PRINTER BUFFY 1400040>
    (This was so because the namespace object for Morrison it's default
    printer should be buffy)
    But:
    zwei:*hardcopy-device* => #<PRESS-PRINTER TREMONT 1402073>
    Why does Zmail maintain it's own hardcopy device, that's not updated
    with the right default for the local machine? It's not even the default
    for the local site.

Look in your ZMail init file.

3-Jul-85 21:01:29-EDT,1014;000000000000
Received: from MIT-GOLDILOCKS by MIT-OZ via Chaosnet; 14 Jun 85 11:17-EDT
Received: from KOALA by GOLDILOCKS via CHAOS with CHAOS-MAIL id 1813; Fri 14-Jun-85 11:21:24-EDT
Date: Friday, 14 June 1985, 11:18-EDT
From: David H. Kaufman <Sr.Kaufman at MIT-SPEECH>
Subject: CP :Delete File Screw
To: BUG-LISPM at OZ
Message-ID: <850614111843.2.QUX@KOALA.MIT>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, Spire-Macros 5.1,
Attribute 5.6, Compute 5.4, Audio 4.0, Speech-Attributes 4.3,
Display 6.16, Speech-Layouts 6.2, Prtout 4.0, Versatec 5.0, Spire 16.0,
ZOO 6.10, ZOO-SPIRE 2.0, microcode TMC5-MIC 319,
4.2 Finger Compatibility, 4.2 FTP Compatibility,
Lazy Redisplay for Spire, New Transcription Patches, on Lisp Machine Koala:

I typed

	:Delete File >s>exspire>attribute>*.bin.* [Return]

Everything worked, I was happy.  Then I typed 

	:Delete File >s>exspire>attribute>*.bin.* [End]

AND THE CP COMPLETED "*.bin.*" to "*" AND DELETED EVERY ".lisp" FILE IN
THE DIRECTORY!  I am not happy.
3-Jul-85 21:01:29-EDT,1111;000000000000   
Received: from MIT-GOLDILOCKS by MIT-OZ via Chaosnet; 14 Jun 85 11:59-EDT
Received: from KOALA by GOLDILOCKS via CHAOS with CHAOS-MAIL id 1820; Fri 14-Jun-85 12:02:45-EDT
Date: Friday, 14 June 1985, 12:00-EDT
From: David H. Kaufman <Sr.Kaufman at MIT-SPEECH>
Subject: Ugliness in NETI:FINGER-LISPMS
To: BUG-LISPM at OZ
Message-ID: <850614120008.6.QUX@KOALA.MIT>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, Spire-Macros 5.1,
Attribute 5.6, Compute 5.4, Audio 4.0, Speech-Attributes 4.3,
Display 6.16, Speech-Layouts 6.2, Prtout 4.0, Versatec 5.0, Spire 16.0,
ZOO 6.10, ZOO-SPIRE 2.0, microcode TMC5-MIC 319,
4.2 Finger Compatibility, 4.2 FTP Compatibility,
Lazy Redisplay for Spire, New Transcription Patches, on Lisp Machine Koala:

    (WHEN PRINT-FREE
      (FORMAT STREAM
	      (IF (NULL FREE)
--->		  "~2&No Free Lisp machines:~%"
		  "~2&Free Lisp machines: ~{~%~5@T~15A ~A~}")
	      FREE)

should look like

    (WHEN PRINT-FREE
      (FORMAT STREAM
	      (IF (NULL FREE)
--->		  "~2&No free Lisp machines.~%"
		  "~2&Free Lisp machines: ~{~%~5@T~15A ~A~}")
	      FREE)
3-Jul-85 21:01:29-EDT,1279;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 14 Jun 85 12:02-EDT
Received: from SCRC-STONY-BROOK.ARPA by MIT-MC.ARPA 14 Jun 85 12:03:37 EST
Received: from EUPHRATES.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 254336; Fri 14-Jun-85 11:58:43-EDT
Date: Fri, 14 Jun 85 12:01 EDT
From: David A. Moon <Moon@SCRC-STONY-BROOK.ARPA>
Subject: Abstract vs mixin flavours
To: David Vinayak Wallace <GUMBY@MIT-MC.ARPA>
cc: BUG-LISPM@MIT-MC.ARPA, bug-lmdoc@SCRC-STONY-BROOK.ARPA
In-Reply-To: <[MIT-MC.ARPA].542257.850614.GUMBY>
Message-ID: <850614120126.3.MOON@EUPHRATES.SCRC.Symbolics.COM>

    Date: Fri, 14 Jun 85 03:41:28 EDT
    From: David Vinayak Wallace <GUMBY@MIT-MC.ARPA>

	Date: Tue, 11 Jun 85 15:08 EDT
	From: David A. Moon <Moon at STONY-BROOK>

	...There is a small deficiency here: we have normal flavors and
	abstract flavors.  This is neither of those; there ought to be a third
	category, mixin flavors.

    I don't have the manuals near me.  Why need there be a distinction between
    abstract flavours and mixin flavours?  Why shouldn't all mixin flavours be
    abstract flavours, and vice versa?

"Abstract" means more than just "non-instantiable".  For details, check the
documentation when you get a chance.

3-Jul-85 21:01:30-EDT,1613;000000000000 
Mail-From: CJL created at 14-Jun-85 13:53:53
Date: Fri, 14 Jun 1985  13:53 EDT
Message-ID: <CJL.12119112614.BABYL@MIT-OZ>
From: Chris Lindblad <CJL@MIT-OZ>
To:   Richard Lamson <rsl%RUSSIAN@SCRC-STONY-BROOK.ARPA.Internet>,
      BUG-LISPM@MIT-OZ
Subject: My default printer is Buffy, but Zmail wants to send to Tremont
In-reply-to: Msg of 14 Jun 1985  00:29-EDT from Richard Lamson <rsl at RUSSIAN.SPA.Symbolics.COM>

    Date: Friday, 14 June 1985  00:29-EDT
    From: Richard Lamson <rsl at RUSSIAN.SPA.Symbolics.COM>

        Date: Wed, 12 Jun 85 23:28 EDT
        From: Chris Lindblad <CJL@OZ>

        In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.4,
        microcode TMC5-MIC 319, FEP 22, on Lisp Machine Jim Morrison:

        si:*default-hardcopy-device* => #<ASCII-PRINTER BUFFY 1400040>
        (This was so because the namespace object for Morrison it's default
        printer should be buffy)
        But:
        zwei:*hardcopy-device* => #<PRESS-PRINTER TREMONT 1402073>
        Why does Zmail maintain it's own hardcopy device, that's not updated
        with the right default for the local machine? It's not even the default
        for the local site.

    Look in your ZMail init file.

As part of it's initializations before loading th users zmail init file,
Zmail should set the default printer to si:*default-hardcopy-device*, so
if the user doesn't have a Zmail init file, like I didn't (I do now).
The printer is set to a reasonable value (currently the value seems to
be the default printer for the machine from which the world was
disk-saved)
3-Jul-85 21:01:30-EDT,629;000000000000 
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 14 Jun 85 16:56-EDT
Received: from KOALA by GOLDILOCKS via CHAOS with CHAOS-MAIL id 1829; Fri 14-Jun-85 16:58:34-EDT
Date: Friday, 14 June 1985, 16:55-EDT
From: sr.ehpyc at MIT-SPEECH, sr.kaufman at MIT-SPEECH
Sender: Lisp-Machine at MIT-REAGAN
Subject: declare
To: BUG-LISPM at MIT-SPEECH
Message-ID: <850614165555.1.LISP-MACHINE@KOALA.MIT>

In Symbolics 3600 Release 6.0, Experimental Spire-Macros 1.0,
microcode TMC5-MIC 319, on Lisp Machine Koala:

In 

(defwhopper (mumble frotz)
            (my-args)
  (declare (foo bar))
  ...)

is an illegal declare
3-Jul-85 21:01:30-EDT,1067;000000000000  
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 14 Jun 85 19:27-EDT
Received: from SMOKEY by GOLDILOCKS via CHAOS with CHAOS-MAIL id 1833; Fri 14-Jun-85 19:27:48-EDT
Date: Friday, 14 June 1985, 19:25-EDT
From: Robert Kassel <sr.rob at MIT-SPEECH>
Subject: area exam
To: BUG-LISPM at MIT-SPEECH
Message-ID: <850614192512.2.ROB@SMOKEY.MIT>

In Symbolics 3670 Release 6.0, IP-TCP 29.0, Spire-Macros 5.1,
Attribute 5.6, Compute 5.4, Audio 4.0, Speech-Attributes 4.3,
Display 6.16, Speech-Layouts 6.2, Prtout 4.0, Versatec 5.0, Spire 16.0,
ZOO 6.11, ZOO-SPIRE 2.0, Experimental ALexiS 5.0, LexiS 7.2,
microcode TMC5-IO4-FPA-MIC 319, on Lisp Machine Smokey:

Some questions on area:
  
  1> The documentation mentions that static areas are not GC'd until you
     explicitly ask for them to be GC'd.  Aside from doing a FULL-GC on
     everything, how can you GC a single static area?

  2> What are reasonable values for the :swap-recommendations option to
     make-area.  In fact, that portion could use some examples.

Thanks, 

						ROB

3-Jul-85 21:01:31-EDT,1082;000000000000  
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 14 Jun 85 19:57-EDT
Received: from SCRC-STONY-BROOK.ARPA by MIT-MC.ARPA 14 Jun 85 19:56:13 EST
Received: from BIG.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 254686; Fri 14-Jun-85 19:52:00-EDT
Date: Fri, 14 Jun 85 19:54 EDT
From: Charles Hornig <Hornig@SCRC-STONY-BROOK.ARPA>
Subject: declare
To: sr.ehpyc%MIT-SPEECH@MIT-MC.ARPA, sr.kaufman%MIT-SPEECH@MIT-MC.ARPA,
    BUG-LISPM%MIT-SPEECH@MIT-MC.ARPA
In-Reply-To: <850614165555.1.LISP-MACHINE@KOALA.MIT>
Message-ID: <850614195424.5.HORNIG@BIG.SCRC.Symbolics.COM>

    Date: Friday, 14 June 1985, 16:55-EDT
    From: sr.ehpyc at MIT-SPEECH, sr.kaufman at MIT-SPEECH

    In Symbolics 3600 Release 6.0, Experimental Spire-Macros 1.0,
    microcode TMC5-MIC 319, on Lisp Machine Koala:

    In 

    (defwhopper (mumble frotz)
		(my-args)
      (declare (foo bar))
      ...)

    is an illegal declare

Thank you for this report.  The problem you describe has been found and
will be fixed in a future release of the system.

3-Jul-85 21:01:31-EDT,2544;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 14 Jun 85 20:01-EDT
Received: from SCRC-STONY-BROOK.ARPA by MIT-MC.ARPA 14 Jun 85 20:03:31 EST
Received: from BIG.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 254693; Fri 14-Jun-85 19:59:06-EDT
Date: Fri, 14 Jun 85 20:01 EDT
From: Charles Hornig <Hornig@SCRC-STONY-BROOK.ARPA>
Subject: tcp:translate-nic-host-stream & SCRC NIC host table entries
To: Chris Lindblad <CJL%OZ@MIT-MC.ARPA>, BUG-LISPM%OZ@MIT-MC.ARPA
In-Reply-To: <850613161149.4.CJL@MORRISON>
Message-ID: <850614200137.8.HORNIG@BIG.SCRC.Symbolics.COM>

    Date: Thu, 13 Jun 85 16:11 EDT
    From: Chris Lindblad <CJL@OZ>

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.4,
    microcode TMC5-MIC 319, FEP 22, on Lisp Machine Jim Morrison:

    tcp:translate-nic-host-stream made the primary name for stony-brook to
    be scrc. It also made YUKON the primary for scrc-yukon. This is probably
    because yukon comes before scrc-yukon in the entry.

    Is this on purpose?

No, this is because the NIC changed the format of the table without
warning.  They have changed it back now.

    HOST : 192.10.41.144 : SCRC-STONY-BROOK.ARPA,SCRC,SYMBOLICS,SCRC-STONY-BROOK,STONY-BROOK.SCRC.SYMBOLICS.COM : SYMBOLICS-3600 : LISPM : UDP/TIME,UDP/TFTP,TCP/FINGER,TCP/FTP,TCP/SMTP,TCP/SUPDUP,TCP/TELNET,TCP/TIME,UDP/FINGER,UDP/DOMAIN :

    HOST SCRC
    NICKNAME SYMBOLICS
    NICKNAME SCRC-STONY-BROOK
    ADDRESS INTERNET 192.10.41.144
    MACHINE-TYPE 3600
    SYSTEM-TYPE LISPM
    SERVICE TIME UDP TIME-SIMPLE-MSB
    SERVICE FILE UDP TFTP
    SERVICE SHOW-USERS TCP ASCII-NAME
    SERVICE FILE TCP TCP-FTP
    SERVICE MAIL-TO-USER TCP SMTP
    SERVICE SEND TCP SMTP
    SERVICE EXPAND-MAIL-RECIPIENT TCP SMTP
    SERVICE LOGIN TCP SUPDUP
    SERVICE LOGIN TCP TELNET
    SERVICE TIME TCP TIME-MSB

    HOST : 192.10.41.3 : SCRC-YUKON.ARPA,YUKON,SCRC-YUKON,YUKON.SCRC.SYMBOLICS.COM : SYMBOLICS-3600 : LISPM : TCP/FINGER,TCP/FTP,TCP/SMTP,TCP/SUPDUP,TCP/TELNET,TCP/TIME,UDP/FINGER,UDP/TIME,UDP/TFTP :

    HOST YUKON
    NICKNAME SCRC-YUKON
    ADDRESS INTERNET 192.10.41.3
    MACHINE-TYPE 3600
    SYSTEM-TYPE LISPM
    SERVICE SHOW-USERS TCP ASCII-NAME
    SERVICE FILE TCP TCP-FTP
    SERVICE MAIL-TO-USER TCP SMTP
    SERVICE SEND TCP SMTP
    SERVICE EXPAND-MAIL-RECIPIENT TCP SMTP
    SERVICE LOGIN TCP SUPDUP
    SERVICE LOGIN TCP TELNET
    SERVICE TIME TCP TIME-MSB
    SERVICE TIME UDP TIME-SIMPLE-MSB
    SERVICE FILE UDP TFTP



3-Jul-85 21:01:31-EDT,1926;000000000000   
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 14 Jun 85 21:22-EDT
Received: from SCRC-STONY-BROOK by MIT-REAGAN via INTERNET with SMTP id 5566; 14 Jun 85 21:30:58-EDT
Received: from NEPONSET.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 254726; Fri 14-Jun-85 21:19:54-EDT
Date: Fri, 14 Jun 85 21:22 EDT
From: David C. Plummer in disguise <DCP@SCRC-QUABBIN.ARPA>
Subject: area exam
To: Robert Kassel <sr.rob@MIT-SPEECH.mit>, BUG-LISPM@MIT-SPEECH.mit
In-Reply-To: <850614192512.2.ROB@SMOKEY.MIT>
Message-ID: <850614212239.9.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Friday, 14 June 1985, 19:25-EDT
    From: Robert Kassel <sr.rob at MIT-SPEECH>

    In Symbolics 3670 Release 6.0, IP-TCP 29.0, Spire-Macros 5.1,
    Attribute 5.6, Compute 5.4, Audio 4.0, Speech-Attributes 4.3,
    Display 6.16, Speech-Layouts 6.2, Prtout 4.0, Versatec 5.0, Spire 16.0,
    ZOO 6.11, ZOO-SPIRE 2.0, Experimental ALexiS 5.0, LexiS 7.2,
    microcode TMC5-IO4-FPA-MIC 319, on Lisp Machine Smokey:

    Some questions on area:
  
      1> The documentation mentions that static areas are not GC'd until you
	 explicitly ask for them to be GC'd.  Aside from doing a FULL-GC on
	 everything, how can you GC a single static area?

You can't today.  Maybe in Release 7 you will be able to use some knob
to FULL-GC to do what you want.

      2> What are reasonable values for the :swap-recommendations option to
	 make-area.  In fact, that portion could use some examples.

It depends on your application.  If your databases are such that taking
a demand page fault on a random page implies you will be touching the
next N pages, N is your number.  (I think there is a limit of 15, but I
don't know off hand if it checks it.)  If your application takes random
demand page faults, using this will cause more disk traffic and main
memory usage and might slow your program down.


3-Jul-85 21:01:31-EDT,609;000000000000 
Received: from MIT-MOON by MIT-OZ via Chaosnet; 17 Jun 85 16:14-EDT
Date: Mon, 17 Jun 85 16:14 EDT
From: Alan Bawden <Alan@MIT-MC>
Subject: Booting broken
To: BUG-LISPM@OZ
Message-ID: <850617161423.1.ALAN@MOON>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.4,
microcode TMC5-MIC 319, on Lisp Machine Keith Moon:

Booting this machine from >boot.boot, which loads >AI-6-0-B.load generally
results in the error

    Error: Request for 644 longs failed.  No more memory
    Closing command file.

during the Load World command.  I typed in the command file by hand and had
no problems.
3-Jul-85 21:01:32-EDT,2213;000000000000 
Received: from MIT-AI by MIT-OZ via Chaosnet; 17 Jun 85 16:37-EDT
Received: from MIT-MOON.ARPA by MIT-AI.ARPA via Chaosnet; 17 JUN 85  16:40:28 EDT
Date: Mon, 17 Jun 85 16:37 EDT
From: Alan Bawden <Alan@MIT-MC>
Subject: :Show Font
To: BUG-LISPM@OZ
Message-ID: <850617163718.3.ALAN@MOON>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.4,
microcode TMC5-MIC 319, on Lisp Machine Keith Moon:

I did :Show Font FIX100

I notice also that :Show Font  lists NAMED-STRUCTURE-SYMBOL amoung my
possible choices...

>>Error: The second argument (DEFAULTS) to FS:SET-DEFAULT-PATHNAME, NIL, was of the wrong type.
         The function expected pathname defaults alist.
While in the function FS:SET-DEFAULT-PATHNAME  FED:LOAD-FONT-FROM-SYM  (:PROPERTY SI:COM-SHOW-FONT SI:CP-FUNCTION)

FS:SET-DEFAULT-PATHNAME:  (P.C. = 134)
   Arg 0 (PATHNAME): #<LMFS-PATHNAME "B:>sys>r6>fonts>nlgp1>fix100.bfd">
   Arg 1 (DEFAULTS): NIL
   Local 2: ("Skip setting default to ~A,~@
			       and perhaps try to use it." #<LMFS-PATHNAME "B:>sys>r6>fonts>nlgp1>fix100.bfd">)
   Local 3 (ELEM): NIL

FED:LOAD-FONT-FROM-SYM:  (P.C. = 27)
   Arg 0 (SYM): FONTS:FIX100
   --Defaulted args:--
   Arg 1 (QUERY-P): NIL

(:PROPERTY SI:COM-SHOW-FONT SI:CP-FUNCTION):  (P.C. = 11)
   Arg 0 (FONT): "FIX100"

SI:COM-SHOW-FONT:  (P.C. = 7)
   Arg 0 (FONT): "FIX100"

SI:*EVAL:  (P.C. = 403)
   Arg 0 (FORM): (SI:COM-SHOW-FONT "FIX100")
   Local 0 (FORM): NIL
   --Defaulted args:--
   Arg 1 (ENV): NIL
   Arg 2 (HOOK): NIL

(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0):  (P.C. = 152)
   Arg 0 (.LEXICAL-ENVIRONMENT-POINTER.): #<DTP-LOCATIVE 500047>

TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
   Arg 0 (NEW-MODE): :BLAST
   Arg 1 (STREAM): #:TERMINAL-IO-SYN-STREAM
   Arg 2 (CONTINUATION): #<LEXICAL-CLOSURE (:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0) 500054>

SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
   Arg 0 (NAME): "Lisp Top Level"
   Arg 1 (ABORT-FUNCTION): NIL
   Arg 2 (READ-FUNCTION): NIL
   Arg 3 (EVAL-FUNCTION): NIL
   Arg 4 (PRINT-FUNCTION): NIL

Rest of stack:
SI:LISP-COMMAND-LOOP:  (P.C. = 67)
SI:LISP-TOP-LEVEL1:  (P.C. = 5)
SI:LISP-TOP-LEVEL:  (P.C. = 7)
3-Jul-85 21:01:32-EDT,1373;000000000000 
Received: from MIT-REAGAN by MIT-OZ via Chaosnet; 17 Jun 85 19:04-EDT
Received: from SCRC-STONY-BROOK by MIT-REAGAN via INTERNET with SMTP id 5575; 17 Jun 85 19:14:44-EDT
Received: from CARDINAL.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 256089; Mon 17-Jun-85 19:02:09-EDT
Date: Mon, 17 Jun 85 19:05 EDT
From: William M. York <York@SCRC-QUABBIN.ARPA>
Subject: Booting broken
To: Alan@MIT-MC.ARPA, BUG-LISPM@OZ.MIT
In-Reply-To: <850617161423.1.ALAN@MOON>
Message-ID: <850617190530.4.YORK@CARDINAL.SCRC.Symbolics.COM>

    Date: Mon, 17 Jun 85 16:14 EDT
    From: Alan Bawden <Alan@MIT-MC>

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.4,
    microcode TMC5-MIC 319, on Lisp Machine Keith Moon:

    Booting this machine from >boot.boot, which loads >AI-6-0-B.load generally
    results in the error

	Error: Request for 644 longs failed.  No more memory
	Closing command file.

    during the Load World command.  I typed in the command file by hand and had
    no problems.

This problem results from FEP FS disk block fragmentation and limited
FEP memory.  As Scott mentioned, it is fixed permanently in rel 6.1.
Until then, you can try deleting some other worlds from the disk and
re-saving the troublesome one, or copying it over a world of similar
size that hasn't had any problems.  Good luck.

3-Jul-85 21:01:32-EDT,3402;000000000000  
Received: from MIT-DUANE by MIT-OZ via Chaosnet; 18 Jun 85 09:03-EDT
Date: Tue, 18 Jun 85 09:04 EDT
From: Ken Haase <KWH@OZ>
Subject: Problem with renaming logicals.
To: BUG-LISPM@OZ
Message-ID: <850618090418.3.KWH@DUANE>

In Symbolics 3670 Release 6.0, IP-TCP 29.0, AISite 9.4,
Experimental Meta Representation Langauge 4.4,
microcode TMC5-IO4-MIC 319, FEP 22, on Lisp Machine Duane Allman:

This happened when doing a wild-carded rename of one logical pathname to another.

>>Error: The fifth argument (NEW-PATHNAME) to (:METHOD NFILE-ACCESS-PATH :RENAME), #<LOGICAL-PATHNAME "MRL: DOC; DESIGN.TEXT.12">, was of the wrong type.
         The function expected A pathname for this host.
While in the function (:METHOD NFILE-ACCESS-PATH :RENAME)  (:METHOD
                                                             ACTIVE-PATHNAME-MIXIN
                                                             :RENAME)  RENAMEF

(:METHOD NFILE-ACCESS-PATH :RENAME):  (P.C. = 72)
   Arg 0 (SELF): #<LMFS-NFILE-ACCESS-PATH B using NEW-FILE 17507647>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NFILE-ACCESS-PATH -- 4. IV's, 2. FL's 121346410>
   Arg 2 (OPERATION): :RENAME
   Arg 3 (OLD-PATHNAME): #<LMFS-PATHNAME "B:>kwh>Cyrano>Design.TEXT.12">
   Arg 4 (NEW-PATHNAME): #<LOGICAL-PATHNAME "MRL: DOC; DESIGN.TEXT.12">
   Local 5 (RESULT): NEW-PATHNAME
   Local 6 (.SERVER-VALUE.): #<LOGICAL-PATHNAME "MRL: DOC; DESIGN.TEXT.12">
   Local 7 (FROM-PATHNAME): "A pathname for this host"
   Local 8 (TO-PATHNAME): #<DTP-LOCATIVE 43440350>

(:METHOD ACTIVE-PATHNAME-MIXIN :RENAME):  (P.C. = 12)
   Arg 0 (SELF): #<LMFS-PATHNAME "B:>kwh>Cyrano>Design.TEXT.12">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ACTIVE-PATHNAME-MIXIN -- 1. IV's, 0. FL's 104225115>
   Arg 2 (OPERATION): :RENAME
   Arg 3 (NEW-PATHNAME): #<LOGICAL-PATHNAME "MRL: DOC; DESIGN.TEXT.12">

RENAMEF:  (P.C. = 231)
   Arg 0 (STRING-OR-STREAM): #<LMFS-PATHNAME "B:>kwh>Cyrano>Design.TEXT.12">
   Arg 1 (NEW-NAME): #<LOGICAL-PATHNAME "MRL: DOC; DESIGN.TEXT.12">
   --Defaulted args:--
   Arg 2 (ERROR-P): T

ZWEI:RENAME-FILE-INTERNAL:  (P.C. = 4)
   Arg 0 (FROM): #<LMFS-PATHNAME "B:>kwh>Cyrano>Design.TEXT.12">
   Arg 1 (TO): #<LOGICAL-PATHNAME "MRL: DOC; DESIGN.TEXT.12">
   Arg 2 (PRINTER): #<DTP-COMPILED-FUNCTION ZWEI:TYPEOUT-LINE 31636521>

ZWEI:COM-RENAME-FILE:  (P.C. = 126)

ZWEI:COM-EXTENDED-COMMAND:  (P.C. = 27)

ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
   Arg 0 (COMMAND): ZWEI:COM-EXTENDED-COMMAND
   Arg 1 (CHAR): 600
   Arg 2 (PREFIX-CHAR): NIL
   Arg 3 (HOOK-LIST): (ZWEI:EXPAND-ABBREV-HOOK)

ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
   Arg 0 (CH): 600

(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 233)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 121171573>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:EDITOR -- 12. IV's, 0. FL's 142346020>
   Arg 2 (OPERATION): :EDIT
   --Defaulted args:--
   Arg 3 (TOP-LEVEL-P): T
   Arg 4 (DESCRIPTION): NIL

(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 60)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 121171573>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:TOP-LEVEL-EDITOR -- 13. IV's, 1. FL's 142345776>
   Arg 2 (.OPERATION.): :EDIT
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 51)

SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
   --Defaulted args:--
   Arg 0 (IGNORE): NIL
3-Jul-85 21:01:32-EDT,1497;000000000000  
Received: from MIT-REAGAN by MIT-OZ via Chaosnet; 18 Jun 85 12:53-EDT
Received: from SCRC-QUABBIN (SCRC-QUABBIN) by MIT-REAGAN via INTERNET with SMTP id 5576; 18 Jun 85 13:04:24-EDT
Received: from NEPONSET.SCRC.Symbolics.COM by SCRC-QUABBIN.ARPA via CHAOS with CHAOS-MAIL id 173008; Tue 18-Jun-85 12:54:31-EDT
Date: Tue, 18 Jun 85 12:50 EDT
From: David C. Plummer in disguise <DCP@SCRC-QUABBIN.ARPA>
Subject: :Show Font
To: Alan Bawden <Alan@MIT-MC.ARPA>, BUG-LISPM@OZ.mit
In-Reply-To: <850617163718.3.ALAN@MOON>
Message-ID: <850618125032.3.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Mon, 17 Jun 85 16:37 EDT
    From: Alan Bawden <Alan@MIT-MC>

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.4,
    microcode TMC5-MIC 319, on Lisp Machine Keith Moon:

    I did :Show Font FIX100

Standard 6.0 bug.  Standard report.  Standard reply: Fixed in 6.1.
Somebody at MIT may already have a workaround they should patch into
AISite.

    I notice also that :Show Font  lists NAMED-STRUCTURE-SYMBOL amoung my
    possible choices...

    >>Error: The second argument (DEFAULTS) to FS:SET-DEFAULT-PATHNAME, NIL, was of the wrong type.
	     The function expected pathname defaults alist.
    While in the function FS:SET-DEFAULT-PATHNAME  FED:LOAD-FONT-FROM-SYM  (:PROPERTY SI:COM-SHOW-FONT SI:CP-FUNCTION)

    FS:SET-DEFAULT-PATHNAME:  (P.C. = 134)
       Arg 0 (PATHNAME): #<LMFS-PATHNAME "B:>sys>r6>fonts>nlgp1>fix100.bfd">
       Arg 1 (DEFAULTS): NIL

3-Jul-85 21:01:33-EDT,6348;000000000000 
Received: from MIT-REAGAN by MIT-OZ via Chaosnet; 18 Jun 85 16:36-EDT
Date: Tue, 18 Jun 85 16:47 EDT
From: CJL@OZ
Sender: File-Server@MIT-REAGAN
Subject: "Redirecting Internet route..." Notifications
To: BUG-LISPM@OZ
Message-ID: <850618164701.5.FILE-SERVER@MIT-REAGAN>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, Mailer 43.0, AISite 9.4,
microcode TMC5-MIC 319, Network-Security patch,
Update-Internet-Namespace patch, Server-Finger patch, on Lisp Machine Ronald Reagan:

Do I care about what ip gateway my lisp machines uses? I think not. 
How can I prevent these notifications from happening?

13:04:17 Redirecting Internet route #<IP-ROUTE (192.10.41.136) via 128.52.22.8 (AI-GW)> to go via 128.52.22.9
6/17 15:38:28 Redirecting Internet route #<IP-ROUTE MIT-RING-WORLD (18.70.0.1) via 128.52.22.8 (AI-GW)> to go via 128.52.22.9
6/17 15:29:56 Redirecting Internet route #<IP-ROUTE MIT-NESSUS (18.70.0.3) via 128.52.22.8 (AI-GW)> to go via 128.52.22.9
6/17 14:34:30 Redirecting Internet route #<IP-ROUTE (18.71.0.2) via 128.52.22.8 (AI-GW)> to go via 128.52.22.9
6/15 11:33:28 Redirecting Internet route #<IP-ROUTE (18.70.0.5) via 128.52.22.8 (AI-GW)> to go via 128.52.22.9
6/14 21:30:50 Redirecting Internet route #<IP-ROUTE (192.10.41.144) via 128.52.22.8 (AI-GW)> to go via 128.52.22.9
6/14 17:37:38 Redirecting Internet route #<IP-ROUTE DUTCH (18.10.0.67) via 128.52.22.8 (AI-GW)> to go via 128.52.22.9
6/14 17:37:36 Redirecting Internet route #<IP-ROUTE MOLSON (18.10.0.82) via 128.52.22.8 (AI-GW)> to go via 128.52.22.9
6/14 17:37:36 Redirecting Internet route #<IP-ROUTE HEINEKEN (18.10.0.78) via 128.52.22.8 (AI-GW)> to go via 128.52.22.9
6/14 17:37:35 Redirecting Internet route #<IP-ROUTE LOUISWU (18.70.0.2) via 128.52.22.8 (AI-GW)> to go via 128.52.22.9
6/14 17:37:35 Redirecting Internet route #<IP-ROUTE HERA (18.58.0.3) via 128.52.22.8 (AI-GW)> to go via 128.52.22.9
6/14 17:37:35 Redirecting Internet route #<IP-ROUTE FAB (18.10.0.70) via 128.52.22.8 (AI-GW)> to go via 128.52.22.9
6/14 17:37:33 Redirecting Internet route #<IP-ROUTE OA (18.10.0.79) via 128.52.22.8 (AI-GW)> to go via 128.52.22.9
6/14 17:37:32 Redirecting Internet route #<IP-ROUTE BOLD (18.10.0.69) via 128.52.22.8 (AI-GW)> to go via 128.52.22.9
6/14 17:37:31 Redirecting Internet route #<IP-ROUTE ATLAS (18.58.0.15) via 128.52.22.8 (AI-GW)> to go via 128.52.22.9
6/14 17:37:28 Redirecting Internet route #<IP-ROUTE PRJ (18.10.0.71) via 128.52.22.8 (AI-GW)> to go via 128.52.22.9
6/14 17:28:15 Redirecting Internet route #<IP-ROUTE AMTGW (18.85.0.1) via 128.52.22.8 (AI-GW)> to go via 128.52.22.9
6/14 17:28:14 Redirecting Internet route #<IP-ROUTE MACEWAN (18.10.0.80) via 128.52.22.8 (AI-GW)> to go via 128.52.22.9
6/14 17:28:13 Redirecting Internet route #<IP-ROUTE (192.10.41.21) via 128.52.22.8 (AI-GW)> to go via 128.52.22.9
6/14 17:28:12 Redirecting Internet route #<IP-ROUTE DASH (18.10.0.73) via 128.52.22.8 (AI-GW)> to go via 128.52.22.9
6/14 17:28:12 Redirecting Internet route #<IP-ROUTE OPUS (18.10.0.87) via 128.52.22.8 (AI-GW)> to go via 128.52.22.9
6/14 17:28:10 Redirecting Internet route #<IP-ROUTE ATRP (18.85.0.3) via 128.52.22.8 (AI-GW)> to go via 128.52.22.9
6/14 17:28:10 Redirecting Internet route #<IP-ROUTE MILO (18.10.0.86) via 128.52.22.8 (AI-GW)> to go via 128.52.22.9
6/14 17:28:09 Redirecting Internet route #<IP-ROUTE AMT (18.85.0.2) via 128.52.22.8 (AI-GW)> to go via 128.52.22.9
6/14 17:28:09 Redirecting Internet route #<IP-ROUTE RINSO (18.10.0.88) via 128.52.22.8 (AI-GW)> to go via 128.52.22.9
6/14 17:28:08 Redirecting Internet route #<IP-ROUTE ATHENA (18.58.0.1) via 128.52.22.8 (AI-GW)> to go via 128.52.22.9
6/14 17:28:07 Redirecting Internet route #<IP-ROUTE APOLLO (18.58.0.10) via 128.52.22.8 (AI-GW)> to go via 128.52.22.9
6/14 17:28:07 Redirecting Internet route #<IP-ROUTE LCS-HQ (18.10.0.128) via 128.52.22.8 (AI-GW)> to go via 128.52.22.9
6/14 17:28:06 Redirecting Internet route #<IP-ROUTE AJAX (18.10.0.64) via 128.52.22.8 (AI-GW)> to go via 128.52.22.9
6/14 17:28:05 Redirecting Internet route #<IP-ROUTE NEWTOWNE-VARIETY (18.10.0.75 18.48.0.216) via 128.52.22.8 (AI-GW)> to go via 128.52.22.9
6/14 17:28:04 Redirecting Internet route #<IP-ROUTE TIDE (18.10.0.74) via 128.52.22.8 (AI-GW)> to go via 128.52.22.9
6/14 17:28:04 Redirecting Internet route #<IP-ROUTE POSEIDON (18.58.0.6) via 128.52.22.8 (AI-GW)> to go via 128.52.22.9
6/14 17:28:02 Redirecting Internet route #<IP-ROUTE CLS (18.10.0.76 18.48.0.30) via 128.52.22.8 (AI-GW)> to go via 128.52.22.9
6/14 17:28:01 Redirecting Internet route #<IP-ROUTE DEMETER (18.58.0.4) via 128.52.22.8 (AI-GW)> to go via 128.52.22.9
6/14 17:28:00 Redirecting Internet route #<IP-ROUTE DUZ (18.10.0.72) via 128.52.22.8 (AI-GW)> to go via 128.52.22.9
6/14 17:28:00 Redirecting Internet route #<IP-ROUTE PERSEPHONE (18.58.0.8) via 128.52.22.8 (AI-GW)> to go via 128.52.22.9
6/14 17:27:59 Redirecting Internet route #<IP-ROUTE CSR (18.10.0.8) via 128.52.22.8 (AI-GW)> to go via 128.52.22.9
6/14 17:27:58 Redirecting Internet route #<IP-ROUTE APHRODITE (18.58.0.12) via 128.52.22.8 (AI-GW)> to go via 128.52.22.9
6/14 17:27:58 Redirecting Internet route #<IP-ROUTE MRCLEAN (18.10.0.68) via 128.52.22.8 (AI-GW)> to go via 128.52.22.9
6/14 17:27:56 Redirecting Internet route #<IP-ROUTE COMET (18.10.0.66) via 128.52.22.8 (AI-GW)> to go via 128.52.22.9
6/14 17:27:55 Redirecting Internet route #<IP-ROUTE PROMETHEUS (18.58.0.14) via 128.52.22.8 (AI-GW)> to go via 128.52.22.9
6/14 17:27:54 Redirecting Internet route #<IP-ROUTE ZEUS (18.58.0.2) via 128.52.22.8 (AI-GW)> to go via 128.52.22.9
6/14 17:27:54 Redirecting Internet route #<IP-ROUTE KIRIN (18.10.0.81) via 128.52.22.8 (AI-GW)> to go via 128.52.22.9
6/14 17:27:53 Redirecting Internet route #<IP-ROUTE ARES (18.58.0.5) via 128.52.22.8 (AI-GW)> to go via 128.52.22.9
6/14 17:27:52 Redirecting Internet route #<IP-ROUTE ARTEMIS (18.58.0.11) via 128.52.22.8 (AI-GW)> to go via 128.52.22.9
6/14 17:27:51 Redirecting Internet route #<IP-ROUTE EMS (18.85.0.6) via 128.52.22.8 (AI-GW)> to go via 128.52.22.9
6/14 17:27:51 Redirecting Internet route #<IP-ROUTE WILD-BLUE-YONDER (18.48.0.216) via 128.52.22.8 (AI-GW)> to go via 128.52.22.9
6/14 17:27:47 Redirecting Internet route #<IP-ROUTE BORAX (18.10.0.65) via 128.52.22.8 (AI-GW)> to go via 128.52.22.9
3-Jul-85 21:01:33-EDT,4327;000000000000  
Received: from MIT-ELVIS by MIT-OZ via Chaosnet; 18 Jun 85 18:31-EDT
Date: Tue, 18 Jun 85 18:32 EDT
From: Alan Bawden <Alan@MIT-MC>
Subject: I was reading in my Babyl file from MC when it crashed
To: BUG-LISPM@OZ
Message-ID: <850618183242.2.ALAN@ELVIS>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.4,
microcode TMC5-MIC 319, FEP 22, on Lisp Machine Elvis Presley:

Nothing could make me more queasy than that little note that came with this
error that explained to me that the inhibit scheduling flag was set and so
perhaps ZMail was left in an inconsistent state.  Am I supposed to boot my
machine now?

>>Error: Attempt to complete a FILE transaction on CHAOS Connection for FILE 1 to MC, which stopped responding.
While in the function CHAOS:BAD-CHAOS-CONNECTION-STATE  FS:FILE-WAIT-FOR-TRANSACTION  (:METHOD FS:HOST-UNIT :COMMAND)

CHAOS:BAD-CHAOS-CONNECTION-STATE:  (P.C. = 20)
   Arg 0 (CONN): #<CHAOS Connection for FILE 1 to MC 120465277>
   Arg 1 (ATTEMPT): "complete a FILE transaction on"
   Local 2 (STATE): CHAOS:HOST-DOWN-STATE
   Local 3 (PKT): NIL

FS:FILE-WAIT-FOR-TRANSACTION:  (P.C. = 34)
   Arg 0 (TID): "T2501"
   Arg 1 (CONN): #<CHAOS Connection for FILE 1 to MC 120465277>
   Arg 2 (WHOSTATE): "Close"

(:METHOD FS:HOST-UNIT :COMMAND):  (P.C. = 116)
   Arg 0 (SELF): #<HOST-UNIT 7156200>
   Arg 1 (SELF-MAPPING-TABLE): FS:HOST-UNIT
   Arg 2 (OPERATION): :COMMAND
   Arg 3 (MARK-P): :INPUT
   Arg 4 (STREAM-OR-HANDLE): #<FILE-INPUT-CHARACTER-STREAM "MC: ALAN; ALAN BABYL" 7156672>
   Arg 5 (SIMPLE-P): NIL
   Arg 6 (WHOSTATE): "Close"
   Rest arg (COMMANDS): ("CLOSE")

(:METHOD FS:FILE-INPUT-STREAM-MIXIN :REAL-CLOSE):  (P.C. = 47)
   Arg 0 (SELF): #<FILE-INPUT-CHARACTER-STREAM "MC: ALAN; ALAN BABYL" 7156672>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:FILE-INPUT-STREAM-MIXIN -- 5. IV's, 1. FL's 104517356>
   Arg 2 (OPERATION): :REAL-CLOSE
   Arg 3 (ABORT-P): NIL

(:METHOD FS:FILE-DATA-STREAM-MIXIN :CLOSE):  (P.C. = 26)
   Arg 0 (SELF): #<FILE-INPUT-CHARACTER-STREAM "MC: ALAN; ALAN BABYL" 7156672>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:FILE-DATA-STREAM-MIXIN -- 6. IV's, 0. FL's 104517272>
   Arg 2 (OPERATION): :CLOSE
   Arg 3 (ABORTP): NIL

(:INTERNAL (:METHOD FS:FILE-INPUT-CHARACTER-STREAM :COMBINED :CLOSE) 1):  (P.C. = 20)
   Arg 0 (SELF): #<FILE-INPUT-CHARACTER-STREAM "MC: ALAN; ALAN BABYL" 7156672>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:FILE-INPUT-CHARACTER-STREAM -- 4. IV's, 7. FL's 104517341>
   Arg 2 (.OPERATION.): :CLOSE
   Rest arg (.DAEMON-CALLER-ARGS.): (NIL)

(:METHOD CHAOS:INPUT-STREAM-MIXIN :WHOPPER :CLOSE):  (P.C. = 13)
   Arg 0 (SELF): #<FILE-INPUT-CHARACTER-STREAM "MC: ALAN; ALAN BABYL" 7156672>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor CHAOS:INPUT-STREAM-MIXIN -- 1. IV's, 0. FL's 104517403>
   Arg 2 (.WHOPPER-CONTINUATION.): #<DTP-COMPILED-FUNCTION (:INTERNAL (:METHOD FS:FILE-INPUT-CHARACTER-STREAM :COMBINED :CLOSE) 1) 22253755>
   Arg 3 (.OLD-SELF-MAPPING-TABLE.): #<Map to flavor FS:FILE-INPUT-CHARACTER-STREAM -- 4. IV's, 7. FL's 104517341>
   Arg 4 (.OPERATION.): :CLOSE
   --Defaulted args:--
   Arg 5 (ABORT-P): NIL

(:METHOD FS:FILE-INPUT-CHARACTER-STREAM :COMBINED :CLOSE):  (P.C. = 14)
   Arg 0 (SELF): #<FILE-INPUT-CHARACTER-STREAM "MC: ALAN; ALAN BABYL" 7156672>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:FILE-INPUT-CHARACTER-STREAM -- 4. IV's, 7. FL's 104517341>
   Arg 2 (.OPERATION.): :CLOSE
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

Rest of stack:
(:METHOD ZWEI:FILE-MAIL-BUFFER :LOADING-DONE):  (P.C. = 15)
(:INTERNAL (:METHOD ZWEI:BABYL-BUFFER :COMBINED :LOADING-DONE) 0):  (P.C. = 11)
(:METHOD ZWEI:MSG-BUFFER :WHOPPER :LOADING-DONE):  (P.C. = 31)
(:METHOD ZWEI:BABYL-BUFFER :COMBINED :LOADING-DONE):  (P.C. = 13)
(:INTERNAL ZWEI:ZMAIL-BACKGROUND-REQUEST 1 (ZWEI:FILE-LOADED)):  (P.C. = 4)
ZWEI:ZMAIL-BACKGROUND-REQUEST:  (P.C. = 22)
(:INTERNAL ZWEI:ZMAIL-COMMAND-LIST 5 (ZWEI:BACKGROUND)):  (P.C. = 5)
ZWEI:ZMAIL-COMMAND-LIST:  (P.C. = 62)
(:METHOD ZWEI:ZMAIL-FRAME :PROCESS-SPECIAL-COMMAND):  (P.C. = 16)
(:METHOD ZWEI:ZMAIL-FRAME :COMMAND-LOOP):  (P.C. = 136)
(:METHOD ZWEI:ZMAIL-FRAME :COMBINED :COMMAND-LOOP):  (P.C. = 70)
ZWEI:ZMAIL-PROCESS-TOP-LEVEL:  (P.C. = 105)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
3-Jul-85 21:01:34-EDT,2069;000000000000
Received: from MIT-REAGAN by MIT-OZ via Chaosnet; 19 Jun 85 11:18-EDT
Received: from SCRC-STONY-BROOK by MIT-REAGAN via INTERNET with SMTP id 5585; 19 Jun 85 11:29:03-EDT
Received: from THAMES.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 257606; Tue 18-Jun-85 18:07:35-EDT
Date: Tue, 18 Jun 85 18:07 EDT
From: Scott McKay <SWM@SCRC-QUABBIN.ARPA>
Subject: THE STEPPER BECOMES USELESS IN RELEASE 6.0
To: VANDUC@OZ.MIT, BUG-LISPM@OZ.MIT
In-Reply-To: <"850417133214.1.vanduc@OZ"@APIARY-4.MIT>
Message-ID: <850618180745.1.SWM@THAMES.SCRC.Symbolics.COM>

    Date: Wednesday, 17 April 1985, 13:32-EST
    From: Van-Duc Nguyen <VANDUC%OZ@MIT-HTVAX.ARPA>

    Hi,

    I notice that in Release 6.0, when a function or procedure
    is evaluated and stepped, you can no longer look at the values
    of the local variables.

    With the previous releases, release 5.2, for example, you
    can single-step a procedure, and look at the variables anytime
    by just telling the read-eval loop to eval the variables. Ex:

    (defun discriminant (a b c)
	(let ((ac (* a c)))
	    (sqrt (- (* b b) 
		     (* 4 ac)))))

    (step '(discriminant 1 -3.0 2))
     (DISCRIMINANT 1 -3.0 2)
       1  1
       -3.0  -3.0
       2  2
       (LET ((AC (* A C))) (SQRT (- (* B B) (* 4 AC))))
	 (* A C)  2
	 (SQRT (- (* B B) (* 4 AC))) Eval: ac
    2

    We get 2, but with release 6.0 which has a lexically-scoped
    interpreter rather than a dynamically-scoped one, we get
    UNBOUND!!! 

The stepper will work in Release 6.1

    >>Trap: the variable ac is unbound.

    The window debugger is also useless, because clicking to
    see the variables will return UNBOUND.

This does not appear to have been fixed yet.

    Please, I would like to know two things:
     1. if you will add features to release 6.0 such that the
    stepper will work as before, i.e. like dynamically-scope.
     2. if there is existing feature that allows me to look
    at the values of local variables.


3-Jul-85 21:01:34-EDT,5297;000000000000  
Received: from MIT-GOLDILOCKS by MIT-OZ via Chaosnet; 19 Jun 85 11:21-EDT
Received: from YOGI by GOLDILOCKS via CHAOS with CHAOS-MAIL id 1903; Wed 19-Jun-85 11:25:42-EDT
Date: Wed, 19 Jun 85 11:22 EDT
From: David H. Kaufman <Sr.Kaufman%MIT-SPEECH@MIT-REAGAN.ARPA>
Subject: ZMail blowout
To: BUG-LISPM@MIT-GOLDILOCKS.ARPA
Message-ID: <850619112245.7.QUX@YOGI.MIT>

In Symbolics 3670 Release 6.0, IP-TCP 29.0, Spire-Macros 5.1,
Attribute 5.6, Compute 5.4, Audio 4.0, Speech-Attributes 4.3,
Display 6.16, Speech-Layouts 6.4, Prtout 4.0, Versatec 5.0, Spire 16.0,
ZOO 6.12, ZOO-SPIRE 2.0, microcode TMC5-IO4-FPA-MIC 319,
4.2 Finger Compatibility, 4.2 FTP Compatibility,
Lazy Redisplay for Spire, New Transcription Patches, on Lisp Machine Yogi:

Tried to Undigestify an SF-Lovers digest.

>>Trap: The subscript given to the AS-1 instruction, 0, on "" was beyond the length, 0.
While in the function (:METHOD ZWEI:BABYL-BUFFER :SET-REFORMATTED-HEADERS)  ZWEI:REFORMAT-HEADERS  ZWEI:SET-PARSED-MSG-HEADERS

(:METHOD ZWEI:BABYL-BUFFER :SET-REFORMATTED-HEADERS):  (P.C. = 155)
   Arg 0 (SELF): #<BABYL-BUFFER "SPEECH:SPEECH:<SR.KAUFMAN>SR/.KAUFMAN.BABYL" 12554446>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:BABYL-BUFFER -- 3. IV's, 6. FL's 142630520>
   Arg 2 (OPERATION): :SET-REFORMATTED-HEADERS
   Arg 3 (MSG): #<MSG 6573677>
   Arg 4 (STAT): #<DTP-LOCATIVE 6573707>
   Arg 5 (NEW-HEADERS-INTERVAL): #<NODE 40610312>
   Local 6 (MSG-INTERVAL): #<NODE 6573664>
   Local 7 (MSG-REAL-INTERVAL): #<NODE 6573651>
   Local 8 (HEADERS-END-BP): ("Is anyone out there conversant on the differences between the 1954" 0)
   Local 9 (WHERE): :IN-FILE
   Local 10 (MSG-START-BP): ("Date: Saturday, 15 June 1985, 02:57-EDT" 0 :NORMAL)
   Local 11 (OLD-FIRST-LINE): "Date: Fri, 14 Jun 85 23:57:13 pdt"
   Local 12 (START-PREVIOUS-LINE): ""
   Local 13 (REAL-START-BP): ("" 0 :NORMAL)
   Local 14 (REAL-START-LINE): ""
   Local 15 (REAL-ORIGINAL-AREA-END-LINE): "*** EOOH ***"
   Local 16 (BODY-START-LINE): "Is anyone out there conversant on the differences between the 1954"
   Local 17 (OLD-LAST-LINE): ""
   Local 18 (FIRST-NEW-LINE): "Date: Saturday, 15 June 1985, 02:57-EDT"
   Local 19 (LAST-NEW-LINE): ""
   Local 20 (NEW-INTERVAL-FOR-OLD): #<NODE 6573651>

ZWEI:REFORMAT-HEADERS:  (P.C. = 56)
   Arg 0 (MSG): #<MSG 6573677>
   --Defaulted args:--
   Arg 1 (FORCE-P): NIL

ZWEI:SET-PARSED-MSG-HEADERS:  (P.C. = 152)
   Arg 0 (MSG): #<MSG 6573677>
   Arg 1 (STATUS): #<DTP-LOCATIVE 6573707>

(:METHOD ZWEI:MSG-BUFFER :PARSE-MSG):  (P.C. = 7)
   Arg 0 (SELF): #<BABYL-BUFFER "SPEECH:SPEECH:<SR.KAUFMAN>SR/.KAUFMAN.BABYL" 12554446>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:MSG-BUFFER -- 15. IV's, 0. FL's 142630543>
   Arg 2 (OPERATION): :PARSE-MSG
   Arg 3 (MSG): #<MSG 6573677>
   Arg 4 (MSG-STATUS): #<DTP-LOCATIVE 6573707>
   --Defaulted args:--
   Arg 5 (BUFFER-TICK): NIL

(:METHOD ZWEI:BABYL-BUFFER :COMBINED :PARSE-MSG):  (P.C. = 17)
   Arg 0 (SELF): #<BABYL-BUFFER "SPEECH:SPEECH:<SR.KAUFMAN>SR/.KAUFMAN.BABYL" 12554446>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:BABYL-BUFFER -- 3. IV's, 6. FL's 142630520>
   Arg 2 (.OPERATION.): :PARSE-MSG
   Rest arg (.DAEMON-CALLER-ARGS.): (#<MSG 6573677> #<DTP-LOCATIVE 6573707>)

ZWEI:ASSURE-MSG-PARSED:  (P.C. = 60)
   Arg 0 (MSG): #<MSG 6573677>
   --Defaulted args:--
   Arg 1 (KILLED-OK): NIL

(:METHOD ZWEI:BABYL-BUFFER :UPDATE-MSG-OPTIONS-IN-FILE):  (P.C. = 4)
   Arg 0 (SELF): #<BABYL-BUFFER "SPEECH:SPEECH:<SR.KAUFMAN>SR/.KAUFMAN.BABYL" 12554446>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:BABYL-BUFFER -- 3. IV's, 6. FL's 142630520>
   Arg 2 (OPERATION): :UPDATE-MSG-OPTIONS-IN-FILE
   Arg 3 (MSG): #<MSG 6573677>

(:DEFUN-METHOD ZWEI:REPLACE-REAL-HEADER-AREA):  (P.C. = 24)
   Arg 0 (SELF): #<BABYL-BUFFER "SPEECH:SPEECH:<SR.KAUFMAN>SR/.KAUFMAN.BABYL" 12554446>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:SEQUENCE -- 6. IV's, 0. FL's 142630603>
   Arg 2 (MSG): #<MSG 6573677>
   Arg 3 (STRING): "
*** EOOH ***
"

Rest of stack:
(:METHOD ZWEI:FILE-MAIL-BUFFER :NEW-MSG):  (P.C. = 24)
(:METHOD ZWEI:BABYL-BUFFER :COMBINED :NEW-MSG):  (P.C. = 11)
(:METHOD ZWEI:FILE-MAIL-BUFFER :ADD-MSG-TEXT):  (P.C. = 57)
(:METHOD ZWEI:SEQUENCE :ADD-MSG):  (P.C. = 171)
(:METHOD ZWEI:BABYL-BUFFER :COMBINED :ADD-MSG):  (P.C. = 23)
ZWEI:UNDIGESTIFY-MSG:  (P.C. = 213)
ZWEI:COM-ZMAIL-UNDIGESTIFY:  (P.C. = 13)
ZWEI:COM-ZMAIL-EXTENDED-COMMAND:  (P.C. = 33)
ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
ZWEI:ZMAIL-COMMAND-EXECUTE:  (P.C. = 6)
(:METHOD ZWEI:ZMAIL-FRAME :PROCESS-COMMAND-CHAR):  (P.C. = 7)
(:INTERNAL (:INTERNAL (:METHOD ZWEI:ZMAIL-FRAME :COMBINED :PROCESS-COMMAND-CHAR) 0) 0):  (P.C. = 10)
(:METHOD ZWEI:ZMAIL-COMMAND-LOOP-MIXIN :WHOPPER :PROCESS-COMMAND-CHAR):  (P.C. = 21)
(:INTERNAL (:METHOD ZWEI:ZMAIL-FRAME :COMBINED :PROCESS-COMMAND-CHAR) 0):  (P.C. = 13)
(:METHOD ZWEI:ZMAIL-FRAME :WHOPPER :PROCESS-COMMAND-CHAR):  (P.C. = 21)
(:METHOD ZWEI:ZMAIL-FRAME :COMBINED :PROCESS-COMMAND-CHAR):  (P.C. = 12)
(:METHOD ZWEI:ZMAIL-FRAME :COMMAND-LOOP):  (P.C. = 143)
(:METHOD ZWEI:ZMAIL-FRAME :COMBINED :COMMAND-LOOP):  (P.C. = 70)
ZWEI:ZMAIL-PROCESS-TOP-LEVEL:  (P.C. = 105)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
3-Jul-85 21:01:34-EDT,1266;000000000000   
Received: from MIT-SID by MIT-OZ via Chaosnet; 19 Jun 85 17:24-EDT
Date: Wed, 19 Jun 85 17:24 EDT
From: Chris Lindblad <CJL@OZ>
Subject: Minor mail problem
To: BUG-LISPM@OZ
Message-ID: <850619172435.3.CJL@SID>

In Symbolics 3670 Release 6.0, IP-TCP 29.0, AISite 9.4,
microcode TMC5-IO4-MIC 319, FEP 22, on Lisp Machine Sid Vicious:

Sending mail To: foo@oz, bar@oz, baz@prep ends up contacting oz's mail
server twice. Once for service MAIL-TO-USER to foo@oz, and bar@oz; and
then again for service STORE-AND-FORWARD-MAIL to baz@prep. This sounds
fine if one's view is that store-and-forward-mail and mail-to-user mean
different things, but has some problems:

  Oz's mail server has to process two messages, instead of one.
  There's more network traffic.
  It takes zwei twice as long to send the message.
  This aggravates the multiple messages problem. The message is destined
  to foo@mc, and bug-foobar@oz, and foo@mc is on bug-foobar, foo will
  get two messages instead of one.

It would be nice if my lispm would notice that it was going to use
store-and-forward mail on a host that it also was planning to use
mail-to-user, and merge the mail-to-user mail into the store-and-forward
mail.  Or at least behave this way optionally.
3-Jul-85 21:01:34-EDT,3115;000000000000    
Received: from MIT-ZERMATT by MIT-OZ via Chaosnet; 19 Jun 85 21:04-EDT
Received: from BRECKENRIDGE by ZERMATT via CHAOS with CHAOS-MAIL id 6861; Wed 19-Jun-85 21:04:17-EDT
Date: Wed, 19 Jun 85 21:04 EDT
From: Steve Seda <Seda@ZERMATT>
Subject: FSMaint's RENAME bugs
To: BUG-LISPM@OZ
Message-ID: <850619210458.7.SEDA@BRECKENRIDGE>

In Symbolics 3640 Release 6.0, IP-TCP 29.0, MLSite 7.2,
Experimental Schema 85.3, microcode TMC5-IO4-ST506-MIC 319, on Lisp Machine Breckenridge:


I have discovered three bugs with the FSMaint's RENAME menu command (Release 6.0):


(1) When renaming directories, RENAME does not alway put the renamed entry back in
    alphabetical order.

    For example, I can reproduce the error in FSMaint as follows:
	- create a new directory called TEST
	- within TEST, create a new directory called B
	- open directory TEST
	- within TEST, create a new directory called C
	- rename C to A
    Everything happened correctly except at this last step.  Directory B now appears before
    directory A.


(2) RENAME does not always use the same case in which the new name was entered.

    For example, I can reproduce the error in FSMaint as follows:
	- create a new directory called Test-Case
	- within Test-Case, create a new directory called Apple
	- open directory Test-Case
	- rename Apple to Banana
	- rename Banana to APPLE, however Apple appears
	- rename Apple to banana, however Banana appears
    The same sort of thing also happens when renaming files.

    Although some may not (at first) consider this a bug, I do.  I think the user should have
    complete control over the case of the (strings representing) file and directory names.


(3) RENAME does not redisplay the line containing the renamed file correctly since the
    "not-backed-up" flag will not appear if it was not originally present.

    (However, the flag will appear as soon as one does a DECACHE on the containing directory.)


I reproduced all of these errors on MIT|BRECKENRIDGE, a 3640 running Release 6.0 with some
other systems loaded.  The files were stored on a remote file server, MIT|ZERMATT, a 3670 also
running Release 6.0 with some other systems loaded.

The heralds for these machines are

Symbolics System, Fep0:>Schema.load.1
3640 Processor, 1024K words Physical memory, 30000K words Swapping space.
 Release                6.0
 IP-TCP                29.0
 MLSite                 7.2
 Experimental Schema   85.3
MIT MathLab Lisp Machine Breckenridge

Symbolics System, fep1:>ML-6-0-C-mailer.load
3670 Processor, 1024K words Physical memory, 33750K words Swapping space.
 Release                        6.0
 IP-TCP                        29.0
 MLSite                         7.2
 Mailer                        43.0
 Experimental Imagen Spooler    3.1
 Experimental Schema           85.2
 Microcode TMC5-IO4-MIC       322
MIT MathLab Zermatt

Although these machines have a lot of other systems loaded, I would guess that the problem is
in the Release 6.0 code.  (These problems were probably present before Release 6.0.)
3-Jul-85 21:01:35-EDT,951;000000000000    
Received: from MIT-MC by MIT-OZ via Chaosnet; 19 Jun 85 21:11-EDT
Received: from SRI-BISHOP.ARPA by MIT-MC.ARPA 19 Jun 85 21:07:07 EST
Received: from SRI-LASSEN by SRI-BISHOP via CHAOS with CHAOS-MAIL id 1241; Wed 19-Jun-85 15:49:36-PDT
Date: Wed, 19 Jun 85 15:49 PDT
From: David Chapman <ZVONA@SRI-AI.ARPA>
Subject: :named-structure type for typep
To: BUG-LISPM@MIT-MC.ARPA
Message-ID: <850619154955.1.ZVONA@LASSEN.ARPA>

In Symbolics 3600 Release 6.0, Experimental SRI-SITE-OPTIONS 7.12,
Experimental LOCAL-PATCHES 2.13, IP-TCP 29.0,
Experimental Image-Calc 10.9, microcode TMC5-MIC 319, on Lassen:
(SI:FULL-GC :SYSTEM-RELEASE T)'s since release of system: 2
(SI:FULL-GC :GC-COMPILED-FUNCTIONS T)'s since release of system: 1
Warm booted from: Peek Frame 1.

There should be a thing you can give as the second arg to typep to see
if something is a named-structure (of some sort).  This would be
useful particularly in typecase.

3-Jul-85 21:01:35-EDT,839;000000000000 
Received: from MIT-MC by MIT-OZ via Chaosnet; 19 Jun 85 21:11-EDT
Received: from SRI-BISHOP.ARPA by MIT-MC.ARPA 19 Jun 85 21:07:20 EST
Received: from SRI-LASSEN by SRI-BISHOP via CHAOS with CHAOS-MAIL id 1243; Wed 19-Jun-85 16:10:42-PDT
Date: Wed, 19 Jun 85 16:11 PDT
From: David Chapman <ZVONA@SRI-AI.ARPA>
Subject: stuff
To: BUG-LISPM@MIT-MC.ARPA
Message-ID: <850619161103.2.ZVONA@LASSEN.ARPA>

In Symbolics 3600 Release 6.0, Experimental SRI-SITE-OPTIONS 7.12,
Experimental LOCAL-PATCHES 2.13, IP-TCP 29.0,
Experimental Image-Calc 10.9, microcode TMC5-MIC 319, on Lassen:
(SI:FULL-GC :SYSTEM-RELEASE T)'s since release of system: 2
(SI:FULL-GC :GC-COMPILED-FUNCTIONS T)'s since release of system: 1
Warm booted from: Peek Frame 1.

named-structure-symbol has no setf method.
Common Lisp has gethash but not puthash.

3-Jul-85 21:01:35-EDT,2170;000000000000    
Received: from MIT-MC by MIT-OZ via Chaosnet; 19 Jun 85 22:20-EDT
Received: from SCRC-STONY-BROOK.ARPA by MIT-MC.ARPA 19 Jun 85 22:20:32 EST
Received: from EUPHRATES.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 258504; Wed 19-Jun-85 15:13:11-EDT
Date: Wednesday, 19 June 1985, 14:43-EDT
From: Postmaster at SCRC-STONY-BROOK.ARPA
Subject: Unable to deliver letter
To: Moon@SCRC-STONY-BROOK
Resent-To: Henry%mit-oz@MIT-MC.ARPA, bug-lispm%mit-oz@MIT-MC.ARPA
Resent-From: Moon@SCRC-STONY-BROOK.ARPA
Resent-Date: Wed, 19 Jun 85 15:12 EDT
Resent-Message-ID: <850619151255.7.MOON@EUPHRATES.SCRC.Symbolics.COM>
Resent-Comments: The NIC thinks MIT-AI is at Internet address 10.2.0.6, but it isn't (yet).

Unable to deliver letter to the following recipients:
  Bug-Lispm@MIT-AI: Host not responding.
  Henry@MIT-AI: Host not responding.

----- Text of letter follows -----
Received: from EUPHRATES.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 252871; Wed 12-Jun-85 13:03:09-EDT
Date: Wed, 12 Jun 85 13:05 EDT
From: David A. Moon <Moon@STONY-BROOK.SCRC.Symbolics.COM>
Subject: Can you still write Lisp in Lisp?
To: Henry Lieberman <Henry@MIT-AI.ARPA>
cc: Bug-Lispm@MIT-AI.ARPA
In-Reply-To: <850612001843.1.HENRY@APIARY-3>
Message-ID: <850612130541.5.MOON@EUPHRATES.SCRC.Symbolics.COM>

    Date: Wed, 12 Jun 85 00:18 EDT
    From: Henry Lieberman <Henry@MIT-AI.ARPA>
    ....
    What I'm interested in is NOT modifying the Lisp interpreter, as you seem to
    imply, but in writing ANOTHER interpreter that extends the semantics of Lisp.
    This is not all so unusual -- I can think of lots of examples offhand.  The trick
    in doing this is to let Lisp take care of anything your special language doesn't
    want to treat specially.  That is what makes Lisp so attractive as a
    language-building language - you don't have to re-implement the world.  I'm just
    asking for a documented interface of enough of the Lisp interpreter to support
    building language extensions.

Fair enough.  For some people, macros are enough of a documented interface.  Others
need more.

3-Jul-85 21:01:36-EDT,882;000000000000   
Received: from MIT-MC by MIT-OZ via Chaosnet; 19 Jun 85 22:55-EDT
Received: from SCRC-STONY-BROOK.ARPA by MIT-MC.ARPA 19 Jun 85 22:51:29 EST
Received: from EUPHRATES.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 258918; Wed 19-Jun-85 22:50:16-EDT
Date: Wed, 19 Jun 85 22:50 EDT
From: David A. Moon <Moon@SCRC-STONY-BROOK.ARPA>
Subject: :named-structure type for typep
To: David Chapman <ZVONA@SRI-AI.ARPA>
cc: BUG-LISPM@MIT-MC.ARPA
In-Reply-To: <850619154955.1.ZVONA@LASSEN.ARPA>
Message-ID: <850619225013.2.MOON@EUPHRATES.SCRC.Symbolics.COM>

    Date: Wed, 19 Jun 85 15:49 PDT
    From: David Chapman <ZVONA@SRI-AI.ARPA>

    There should be a thing you can give as the second arg to typep to see
    if something is a named-structure (of some sort).  This would be
    useful particularly in typecase.

(cl:typep x 'cl:structure).

3-Jul-85 21:01:36-EDT,1902;000000000000  
Received: from MIT-MOON by MIT-OZ via Chaosnet; 19 Jun 85 22:59-EDT
Date: Wed, 19 Jun 85 23:01 EDT
From: Alan Bawden <Alan@MIT-MC>
Subject: load patches lossage after loading supplemental sources
To: BUG-LISPM@OZ
Message-ID: <850619230121.1.ALAN@MOON>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.4,
microcode TMC5-MIC 319, on Lisp Machine Keith Moon:

This is what happens when I do (load-patches :noselective).  Yesterday CJL
loaded the supplemental sources tape.

Patches for Hardcopy (Current version is 46.2):
46.2     Function (:METHOD SI:BASIC-HARDCOPY-STREAM :CONVERT-FROM-DEVICE-UNITS):  Round, not //
         Function (:METHOD SI:SIMPLE-HARDCOPY-STREAM :MICAS-TO-DEVICE-UNITS):  Ditto
         Function (:METHOD SI:DEBUG-HARDCOPY-STREAM :DEVICE-UNITS-TO-PIXELS):  Ditto
         Function (:METHOD SI:DEBUG-HARDCOPY-STREAM :PIXELS-TO-DEVICE-UNITS):  Ditto
         Function (:METHOD SI:WINDOW-HARDCOPY-STREAM :DEVICE-UNITS-TO-PIXELS):  Ditto
         Function (:METHOD SI:WINDOW-HARDCOPY-STREAM :PIXELS-TO-DEVICE-UNITS):  Ditto
         Function (:METHOD SI:WINDOW-HARDCOPY-STREAM :DEVICE-UNITS-TO-MICAS):  Ditto
         Function (:METHOD SI:WINDOW-HARDCOPY-STREAM :MICAS-TO-DEVICE-UNITS):  Ditto
         Function (:METHOD SI:HARDCOPY-DEVICE-MIXIN :MAKE-HARDCOPY-STREAM):  Convolve the code to 
         make sure the inner stream gets closed if instantiating the outer stream is aborted
         Function (:METHOD LGP:BASIC-LGP-STREAM :DEVICE-UNITS-TO-MICAS):  Round, not //
         Function (:METHOD LGP:BASIC-LGP-STREAM :MICAS-TO-DEVICE-UNITS):  Ditto
         Function (:METHOD LGP:LGP-TEXT-STREAM :SHOW-BITMAP):  Know that the LGP doesn't move the cursor -- RLB
(Patch file for Hardcopy 46.2 has not yet been compiled for the 3600;
 no further patches for Hardcopy can be loaded.)
(The patches may not have been correctly distributed from SCRC)
3-Jul-85 21:01:37-EDT,1174;000000000000
Received: from MIT-MOON by MIT-OZ via Chaosnet; 20 Jun 85 05:13-EDT
Date: Thu, 20 Jun 85 05:15 EDT
From: Alan Bawden <Alan@MIT-MC>
Subject: SCL:DESTRUCTURING-BIND:  The right idea, but not quite.
To: BUG-LISPM@OZ
Message-ID: <850620051529.3.ALAN@MOON>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.4,
microcode TMC5-MIC 319, on Lisp Machine Keith Moon:

SCL:DESTRUCTURING-BIND is a good try.  It's nice to have something do the hard
part of what defmacro does for you.  I'd like to use it in a compiler of my
own, but it doesn't let me control the error message.  My users don't want
to hear about DESTRUCTURING-BIND.  Worse than that, it appears that the
error message always contains a fragment of -my- code: the form that
resulted in the un-destructurable object, rather than the un-destructurable
object itself.  I -certainly- don't want my users to see error messages
with the internals of the compiler in them when they make a syntax error.
*Sigh*  Have to write my own I guess...

(Years ago I sent a proposal about a tool that would be very much like this
but would let you control the error case as well.  I suppose that's now
lost.)
3-Jul-85 21:01:37-EDT,562;000000000000   
Received: from MIT-APIARY-8 by MIT-OZ via Chaosnet; 20 Jun 85 10:22-EDT
Date: Thu, 20 Jun 85 10:24 EDT
From: Stephen Robbins <STEVER@OZ>
Subject: Amazingly low priority random suggestion
To: BUG-LISPM@OZ
Message-ID: <850620102425.4.STEVER@APIARY-8>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.4,
microcode TMC5-MIC 319, FEP 18, on Lisp Machine Apiary-8:

How about a file directory generation retention count based on file type?

It would be nice to be able to set a retention count of 3 on .lisp, 1 on .bin, default 3,
etc...

-Stever
3-Jul-85 21:01:37-EDT,559;000000000000 
Received: from MIT-DUANE by MIT-OZ via Chaosnet; 20 Jun 85 11:44-EDT
Date: Thu, 20 Jun 85 11:45 EDT
From: Ken Haase <KWH@OZ>
Subject: Completion over system names.
To: BUG-LISPM@OZ
Message-ID: <850620114524.2.KWH@DUANE>

In Symbolics 3670 Release 6.0, IP-TCP 29.0, AISite 9.4,
Experimental Meta Representation Langauge 4.5,
microcode TMC5-IO4-MIC 319, FEP 22, on Lisp Machine Duane Allman:

It would be nice if completion over system names (as in M-X Select System As Tags Table)
completed over system short names as well as system long names.

3-Jul-85 21:01:37-EDT,1615;000000000000    
Received: from MIT-MC by MIT-OZ via Chaosnet; 20 Jun 85 12:13-EDT
Received: from SCRC-STONY-BROOK.ARPA by MIT-MC.ARPA 20 Jun 85 12:11:22 EST
Received: from NEPONSET.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 259368; Thu 20-Jun-85 11:43:36-EDT
Date: Thu, 20 Jun 85 11:43 EDT
From: David C. Plummer in disguise <DCP@SCRC-QUABBIN.ARPA>
Subject: stuff
To: David Chapman <ZVONA@SRI-AI.ARPA>, BUG-LISPM@MIT-MC.ARPA
In-Reply-To: <850619161103.2.ZVONA@LASSEN.ARPA>
Message-ID: <850620114352.9.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Wed, 19 Jun 85 16:11 PDT
    From: David Chapman <ZVONA@SRI-AI.ARPA>

    In Symbolics 3600 Release 6.0, Experimental SRI-SITE-OPTIONS 7.12,
    Experimental LOCAL-PATCHES 2.13, IP-TCP 29.0,
    Experimental Image-Calc 10.9, microcode TMC5-MIC 319, on Lassen:
    (SI:FULL-GC :SYSTEM-RELEASE T)'s since release of system: 2
    (SI:FULL-GC :GC-COMPILED-FUNCTIONS T)'s since release of system: 1
    Warm booted from: Peek Frame 1.

    named-structure-symbol has no setf method.

I'm not convinced this is a reasonable thing to expect.  If FOOs are 9
elements and the printing looks at the 9th element, and then you change
an occurance of FOO to a BAR which has 10 elements and printing looks at
the 10th, then BAR will not print because it will get an out-of-bounds
error.

    Common Lisp has gethash but not puthash.

That's by design.  You aren't supposed to know what the inverse of
accessors are.  That's what SETF is for:
	(cl:setf (cl:gethash foo bar) baz)
Note that CL doesn't have ASET by the same reasoning.

3-Jul-85 21:01:38-EDT,1294;000000000000
Received: from MIT-HTVAX by MIT-OZ via Chaosnet; 20 Jun 85 13:49-EDT
Received: from SCRC-STONY-BROOK.ARPA (scrc-stony-brook.arpa.ARPA) by MIT-HTVAX.ARPA (4.12/4.7) 
	id AA09905; Thu, 20 Jun 85 13:29:13 edt
Received: from BIG.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 259417; Thu 20-Jun-85 12:17:10-EDT
Date: Thu, 20 Jun 85 12:17 EDT
From: Charles Hornig <Hornig@SCRC-STONY-BROOK.ARPA>
Subject: "Redirecting Internet route..." Notifications
To: CJL%OZ@MIT-HTVAX.ARPA, BUG-LISPM%OZ@MIT-HTVAX.ARPA
In-Reply-To: <850618164701.5.FILE-SERVER@MIT-REAGAN>
Message-Id: <850620121729.8.HORNIG@BIG.SCRC.Symbolics.COM>

    Date: Tue, 18 Jun 85 16:47 EDT
    From: CJL%OZ@MIT-HTVAX.ARPA

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, Mailer 43.0, AISite 9.4,
    microcode TMC5-MIC 319, Network-Security patch,
    Update-Internet-Namespace patch, Server-Finger patch, on Lisp Machine Ronald Reagan:

    Do I care about what ip gateway my lisp machines uses? I think not. 
    How can I prevent these notifications from happening?

    13:04:17 Redirecting Internet route #<IP-ROUTE (192.10.41.136) via 128.52.22.8 (AI-GW)> to go via 128.52.22.9
    ...

Quick fix is to (DEFF TCP::IP-NOTIFY #'IGNORE).  This will be fixed in
the next release.

3-Jul-85 21:01:38-EDT,1085;000000000000    
Received: from MIT-MC by MIT-OZ via Chaosnet; 20 Jun 85 21:49-EDT
Received: from SCRC-STONY-BROOK.ARPA by MIT-MC.ARPA 20 Jun 85 21:41:51 EST
Received: from BIG.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 259388; Thu 20-Jun-85 11:56:00-EDT
Date: Thu, 20 Jun 85 11:56 EDT
From: Charles Hornig <Hornig@SCRC-STONY-BROOK.ARPA>
Subject: stuff
To: David Chapman <ZVONA@SRI-AI.ARPA>, BUG-LISPM@MIT-MC.ARPA
In-Reply-To: <850619161103.2.ZVONA@LASSEN.ARPA>
Message-ID: <850620115615.2.HORNIG@BIG.SCRC.Symbolics.COM>

    Date: Wed, 19 Jun 85 16:11 PDT
    From: David Chapman <ZVONA@SRI-AI.ARPA>

    In Symbolics 3600 Release 6.0, Experimental SRI-SITE-OPTIONS 7.12,
    Experimental LOCAL-PATCHES 2.13, IP-TCP 29.0,
    Experimental Image-Calc 10.9, microcode TMC5-MIC 319, on Lassen:
    (SI:FULL-GC :SYSTEM-RELEASE T)'s since release of system: 2
    (SI:FULL-GC :GC-COMPILED-FUNCTIONS T)'s since release of system: 1
    Warm booted from: Peek Frame 1.

    Common Lisp has gethash but not puthash.

True.  Use (SETF (GETHASH ...) ...).

3-Jul-85 21:01:39-EDT,1168;000000000000 
Received: from MIT-APIARY-5 by MIT-OZ via Chaosnet; 20 Jun 85 22:57-EDT
Date: Thu, 20 Jun 85 22:54 EDT
From: Henry Lieberman <Henry@OZ>
Subject: Multi-font strings in FORMAT-STRING-STREAM
To: BUG-LISPM@OZ
Message-ID: <850620225447.3.HENRY@APIARY-5>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.4,
microcode TMC5-MIC 319, FEP 18, on Lisp Machine Apiary-5:

FORMAT:FORMAT-STRING-STREAM, the stream which accepts input when you
do (FORMAT NIL ...) should accept multi-font "fat" strings.  

I was trying to define a format code to print strings in other fonts,
by

(FORMAT:DEFFORMAT FORMAT:|| (:ONE-ARG) (ARGUMENT PARAMETERS)
                  (FORMAT FORMAT:*FORMAT-OUTPUT*
                          (STRING-IN-FONT (FORMAT NIL "~A" ARGUMENT)
                                          (CAR PARAMETERS))))

where STRING-IN-FONT returns a fat string in the specified font
[is there a system function for this?].
You could then do (FORMAT T "Zippy eats ~1" "Ding Dongs")
and have "Ding Dongs" come out in font 1. 

Worked OK except in (FORMAT NIL ...) situations. 
It would be nice if the format font code were put into the system.

3-Jul-85 21:01:39-EDT,1730;000000000000    
Received: from MIT-MC by MIT-OZ via Chaosnet; 21 Jun 85 01:57-EDT
Date: Fri, 21 Jun 85 01:57:15 EDT
From: Christopher C. Stacy <CSTACY@MIT-MC.ARPA>
Subject:  "Redirecting Internet route..." Notifications
To: Hornig@SCRC-STONY-BROOK.ARPA
cc: BUG-LISPM@MIT-OZ, CJL@MIT-OZ
In-reply-to: Msg of Thu 20 Jun 85 12:17 EDT from Charles Hornig <Hornig at SCRC-STONY-BROOK.ARPA>
Message-ID: <[MIT-MC.ARPA].551205.850621.CSTACY>

    Date: Thu, 20 Jun 85 12:17 EDT
    From: Charles Hornig <Hornig at SCRC-STONY-BROOK.ARPA>
    To:   CJL%OZ at MIT-HTVAX.ARPA, BUG-LISPM%OZ at MIT-HTVAX.ARPA
    Re:   "Redirecting Internet route..." Notifications
    In-Reply-To: <850618164701.5.FILE-SERVER@MIT-REAGAN>

        Date: Tue, 18 Jun 85 16:47 EDT
        From: CJL%OZ@MIT-HTVAX.ARPA

        In Symbolics 3600 Release 6.0, IP-TCP 29.0, Mailer 43.0, AISite 9.4,
        microcode TMC5-MIC 319, Network-Security patch,
        Update-Internet-Namespace patch, Server-Finger patch, on Lisp Machine Ronald Reagan:

        Do I care about what ip gateway my lisp machines uses? I think not. 
        How can I prevent these notifications from happening?

        13:04:17 Redirecting Internet route #<IP-ROUTE (192.10.41.136) via 128.52.22.8 (AI-GW)> to go via 128.52.22.9
        ...

    Quick fix is to (DEFF TCP::IP-NOTIFY #'IGNORE).  This will be fixed in
    the next release.


I like getting those particular notifications, since they tell me what
is going on with my network connection.  Some (users probably don't
care, but don't dike out the feature completely. I guess the interface
should be handled by the same notification mechanism that the garbage
collector uses (whatever that winds up being.)
3-Jul-85 21:01:39-EDT,2067;000000000000  
Received: from MIT-REAGAN by MIT-OZ via Chaosnet; 21 Jun 85 12:05-EDT
Received: from SCRC-YUKON.ARPA by MIT-REAGAN via INTERNET with SMTP id 5618; 21 Jun 85 12:14:04-EDT
Received: from NEPONSET.SCRC.Symbolics.COM by SCRC-YUKON.ARPA via CHAOS with CHAOS-MAIL id 133357; Fri 21-Jun-85 12:02:53-EDT
Date: Fri, 21 Jun 85 12:02 EDT
From: David C. Plummer in disguise <DCP@SCRC-QUABBIN.ARPA>
Subject: Can't export from a patch.
To: Ken Haase <KWH@OZ.mit>
cc: David A. Moon <Moon@SCRC-STONY-BROOK.ARPA>, BUG-LISPM@OZ.mit
In-Reply-To: <850611151121.0.MOON@EUPHRATES.SCRC.Symbolics.COM>
Message-ID: <850621120256.5.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Tue, 11 Jun 85 15:11 EDT
    From: David A. Moon <Moon@STONY-BROOK.SCRC.Symbolics.COM>

	Date: Fri, 24 May 85 15:18 EDT
	From: Ken Haase <KWH@OZ>

	In Symbolics 3670 Release 6.0

	When an export form is patched, the resultant compiled code ignores the
	package-local information which is neccessary for the use of export to
	make sense.  In particular, if you M-X Add Patch the following form:

	    (EXPORT '(RELATIVITY-FUDGE))

	from a buffer and file where the package is PHYSICS, the resulting patch
	is compiled into a load-time call of the form:

	   (EXPORT (LIST (INTERN "RELATIVITY-FUDGE")))

	which (since the package of the patch file is USER) exports
	USER:RELATIVITY-FUDGE instead of PHYSICS:RELATIVITY-FUDGE, which is
	exactly the wrong thing.

	The conversion of the first form into the second package-ignoring form
	seems to be handled by EXPORT's COMPILER:TOP-LEVEL-FORM property.

    Thanks for reminding us.  This has been a pending known bug since the Release 6
    beta test, and as far as I know has not yet been resolved.  The workaround is
    of course to wrap a ZL:PKG-BIND form around the EXPORT form.

I migrated the development version of the appropriate function so that
in 6.1. the BIN file will contain the folloing for your example:
  (LET ((CL:*PACKAGE* (PKG-FIND-PACKAGE "PHYSICS")))
    (EXPORT (LIST (INTERN "RELATIVITY-FUDGE"))))

3-Jul-85 21:01:39-EDT,1708;000000000000 
Received: from MIT-MC by MIT-OZ via Chaosnet; 21 Jun 85 14:21-EDT
Received: from SCRC-STONY-BROOK.ARPA by MIT-MC.ARPA 21 Jun 85 14:18:33 EST
Received: from CONCORD.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 260174; Fri 21-Jun-85 08:32:27-EDT
Date: Fri, 21 Jun 85 08:33 EDT
From: Bernard S. Greenberg <BSG@SCRC-STONY-BROOK.ARPA>
Subject: Multi-font strings in FORMAT-STRING-STREAM
To: Henry%OZ@MIT-MC.ARPA, BUG-LISPM%oz@MIT-MC.ARPA
In-Reply-To: <850620225447.3.HENRY@APIARY-5>
Message-ID: <850621083347.3.BSG@CONCORD.SCRC.Symbolics.COM>

    Date: Thu, 20 Jun 85 22:54 EDT
    From: Henry Lieberman <Henry@OZ>

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.4,
    microcode TMC5-MIC 319, FEP 18, on Lisp Machine Apiary-5:

    FORMAT:FORMAT-STRING-STREAM, the stream which accepts input when you
    do (FORMAT NIL ...) should accept multi-font "fat" strings.  

    I was trying to define a format code to print strings in other fonts,
    by

    (FORMAT:DEFFORMAT FORMAT:|| (:ONE-ARG) (ARGUMENT PARAMETERS)
		      (FORMAT FORMAT:*FORMAT-OUTPUT*
			      (STRING-IN-FONT (FORMAT NIL "~A" ARGUMENT)
					      (CAR PARAMETERS))))

    where STRING-IN-FONT returns a fat string in the specified font
    [is there a system function for this?].
    You could then do (FORMAT T "Zippy eats ~1" "Ding Dongs")
    and have "Ding Dongs" come out in font 1. 

    Worked OK except in (FORMAT NIL ...) situations. 
    It would be nice if the format font code were put into the system.


General font hack of this sort is being done on unprecedented
global scale for Release 7, with a whole new theory on fonts
and character sets.

3-Jul-85 21:01:40-EDT,818;000000000000  
Received: from MIT-MC by MIT-OZ via Chaosnet; 21 Jun 85 15:13-EDT
Received: from SRI-BISHOP.ARPA by MIT-MC.ARPA 21 Jun 85 14:57:02 EST
Received: from SONORA by SRI-BISHOP via CHAOS with CHAOS-MAIL id 1295; Fri 21-Jun-85 11:38:11-PDT
Date: Fri, 21 Jun 85 11:38 PDT
From: David Chapman <ZVONA@SRI-AI.ARPA>
Subject: bogus defstruct compiler warning
To: BUG-LISPM@MIT-MC.ARPA
Message-ID: <850621113815.1.ZVONA@SONORA.ARPA>

In Symbolics 3600 Release 6.0, Experimental SRI-SITE-OPTIONS 7.9,
Experimental LOCAL-PATCHES 2.11, IP-TCP 29.0, microcode TMC5-MIC 319,
FEP 22, on Sonora:
(SI:FULL-GC :SYSTEM-RELEASE T)'s since release of system: 2
(SI:FULL-GC :GC-COMPILED-FUNCTIONS T)'s since release of system: 1

compiling (defstruct (foo)) with common lisp syntax complains that
copy-foo doesn't use si:x.


3-Jul-85 21:01:40-EDT,1080;000000000000    
Received: from MIT-MC by MIT-OZ via Chaosnet; 21 Jun 85 15:49-EDT
Received: from SCRC-STONY-BROOK.ARPA by MIT-MC.ARPA 21 Jun 85 15:46:01 EST
Received: from THAMES.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 260647; Fri 21-Jun-85 15:44:37-EDT
Date: Fri, 21 Jun 85 15:45 EDT
From: Scott McKay <SWM@SCRC-QUABBIN.ARPA>
Subject: bogus defstruct compiler warning
To: ZVONA@SRI-AI.ARPA, BUG-LISPM@MIT-MC.ARPA
In-Reply-To: <850621113815.1.ZVONA@SONORA.ARPA>
Message-ID: <850621154515.8.SWM@THAMES.SCRC.Symbolics.COM>

    Date: Fri, 21 Jun 85 11:38 PDT
    From: David Chapman <ZVONA@SRI-AI.ARPA>

    In Symbolics 3600 Release 6.0, Experimental SRI-SITE-OPTIONS 7.9,
    Experimental LOCAL-PATCHES 2.11, IP-TCP 29.0, microcode TMC5-MIC 319,
    FEP 22, on Sonora:
    (SI:FULL-GC :SYSTEM-RELEASE T)'s since release of system: 2
    (SI:FULL-GC :GC-COMPILED-FUNCTIONS T)'s since release of system: 1

    compiling (defstruct (foo)) with common lisp syntax complains that
    copy-foo doesn't use si:x.

This works for me in 271.113.

3-Jul-85 21:01:40-EDT,1169;000000000000
Received: from MIT-HTVAX by MIT-OZ via Chaosnet; 21 Jun 85 19:07-EDT
Received: from SCRC-STONY-BROOK.ARPA (scrc-stony-brook.arpa.ARPA) by MIT-HTVAX.ARPA (4.12/4.7) 
	id AA00420; Fri, 21 Jun 85 19:03:08 edt
Received: from CONCORD.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 260207; Fri 21-Jun-85 09:41:11-EDT
Date: Fri, 21 Jun 85 09:42 EDT
From: Bernard S. Greenberg <BSG@SCRC-STONY-BROOK.ARPA>
Subject: Amazingly low priority random suggestion
To: STEVER%OZ@MIT-HTVAX.ARPA, BUG-LISPM%OZ@MIT-HTVAX.ARPA
In-Reply-To: <850620102425.4.STEVER@APIARY-8>
Message-Id: <850621094232.6.BSG@CONCORD.SCRC.Symbolics.COM>

    Date: Thu, 20 Jun 85 10:24 EDT
    From: Stephen Robbins <STEVER%OZ@MIT-HTVAX.ARPA>

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.4,
    microcode TMC5-MIC 319, FEP 18, on Lisp Machine Apiary-8:

    How about a file directory generation retention count based on file type?

    It would be nice to be able to set a retention count of 3 on .lisp, 1 on .bin, default 3,
    etc...

    -Stever
Well, I agree, that'd be nice, but unfortunately is fairly difficult in the
current structure.

3-Jul-85 21:01:40-EDT,4600;000000000000    
Received: from MIT-LENNON by MIT-OZ via Chaosnet; 23 Jun 85 16:32-EDT
Date: Sun, 23 Jun 85 16:30 EDT
From: Alan Bawden <Alan@MIT-MC>
Subject: What LGP?  We have a Dover...
To: BUG-LISPM@OZ
Message-ID: <850623163036.1.ALAN@LENNON>
Fonts: CPTFONT, EUREX24I

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.4,
microcode TMC5-MIC 319, on Lisp Machine John Lennon:

I gave the Hardcopy Viewer command to the 4Symbolics
Document Examiner0.  I guess I should have been
tipped off by the fact that the documentation told me it was going to print
the hardcopy on "the LGP".

>>Error: Cannot coerce #<BFONT-DESCRIPTOR FONTS:CENTURYSCHOOLBOOK105 1697107> into a string
While in the function STRING  STRING-REVERSE-SEARCH-SET  PRESS:DECODE-FONT-NAME

STRING:  (P.C. = 113)
   Arg 0 (X): #<BFONT-DESCRIPTOR FONTS:CENTURYSCHOOLBOOK105 1697107>
   Local 1 (STR): "Cannot coerce ~S into a string"

STRING-REVERSE-SEARCH-SET:  (P.C. = 21)
   Arg 0 (CHAR-SET): (48 49 50 51 52 53 54 55 56 57)
   Arg 1 (STRING): #<BFONT-DESCRIPTOR FONTS:CENTURYSCHOOLBOOK105 1697107>
   --Defaulted args:--
   Arg 2 (FROM): NIL
   Arg 3 (TO): 0

PRESS:DECODE-FONT-NAME:  (P.C. = 7)
   Arg 0 (STRING): #<BFONT-DESCRIPTOR FONTS:CENTURYSCHOOLBOOK105 1697107>

(:METHOD PRESS:PRESS-STREAM :CANONICALIZE-FONT):  (P.C. = 42)
   Arg 0 (SELF): #<PRESS-STREAM 6340070>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor PRESS:PRESS-STREAM -- 33. IV's, 3. FL's 26113724>
   Arg 2 (OPERATION): :CANONICALIZE-FONT
   Arg 3 (FONT): #<BFONT-DESCRIPTOR FONTS:CENTURYSCHOOLBOOK105 1697107>
   Arg 4 (TYPE): :DEVICE

(:METHOD SI:HARDCOPY-STREAM-FONT-MIXIN :AFTER :INIT):  (P.C. = 72)
   Arg 0 (SELF): #<PRESS-STREAM 6340070>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:HARDCOPY-STREAM-FONT-MIXIN -- 7. IV's, 0. FL's 26112304>
   Arg 2 (OPERATION): :INIT
   Arg 3 (PLIST): #<DTP-LOCATIVE 44240377>

(:METHOD PRESS:PRESS-STREAM :COMBINED :INIT):  (P.C. = 26)
   Arg 0 (SELF): #<PRESS-STREAM 6340070>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor PRESS:PRESS-STREAM -- 33. IV's, 3. FL's 26113724>
   Arg 2 (.OPERATION.): :INIT
   Rest arg (.DAEMON-CALLER-ARGS.): (#<DTP-LOCATIVE 44240377>)

INSTANTIATE-FLAVOR:  (P.C. = 445)
   Arg 0 (FLAVOR-NAME): PRESS:PRESS-STREAM
   Arg 1 (INIT-PLIST): #<DTP-LOCATIVE 44240377>
   Arg 2 (SEND-INIT-MESSAGE-P): :MAYBE
   --Defaulted args:--
   Arg 3 (RETURN-UNHANDLED-KEYWORDS-P): NIL
   Arg 4 (AREA-TO-CONS-INSTANCE-IN): NIL

MAKE-INSTANCE:  (P.C. = 6)
   Arg 0 (FLAVOR-NAME): PRESS:PRESS-STREAM
   Rest arg (INIT-OPTIONS): (:DEVICE #<PRESS-PRINTER TREMONT-VIA-MC 1400135> :OUTPUT-STREAM #<FILE-OUTPUT-BINARY-STREAM "MC: .DOVR.; ALAN >" 6345257> :NEW-PAGE-HOOK NIL :FONTS (#<BFONT-DESCRIPTOR FONTS:CENTURYSCHOOLBOOK105 1697107> #<BFONT-DESCRIPTOR FONTS:CENTURYSCHOOLBOOK105I 1697283> #<BFONT-DESCRIPTOR FONTS:CENTURYSCHOOLBOOK105B 1697459> #<BFONT-DESCRIPTOR FONTS:CENTURYSCHOOLBOOK105B 1697459> #<BFONT-DESCRIPTOR FONTS:TIMESROMAN8 1697635> #<BFONT-DESCRIPTOR FONTS:CENTURYSCHOOLBOOK105B 1697459> #<BFONT-DESCRIPTOR FONTS:FIX100 1697771> #<BFONT-DESCRIPTOR FONTS:TVFONT9 1697907> #<BFONT-DESCRIPTOR FONTS:FIX9 1698043> #<BFONT-DESCRIPTOR FONTS:SYMBOL10 1698179> ...) :HEADER-FONT-P NIL ...)
   Local 1 (INIT-OPTIONS): (:MARGINS (2000 1270 2000 1270) :DEVICE #<PRESS-PRINTER TREMONT-VIA-MC 1400135> :OUTPUT-STREAM #<FILE-OUTPUT-BINARY-STREAM "MC: .DOVR.; ALAN >" 6345257> :NEW-PAGE-HOOK NIL :FONTS (#<BFONT-DESCRIPTOR FONTS:CENTURYSCHOOLBOOK105 1697107> #<BFONT-DESCRIPTOR FONTS:CENTURYSCHOOLBOOK105I 1697283> #<BFONT-DESCRIPTOR FONTS:CENTURYSCHOOLBOOK105B 1697459> #<BFONT-DESCRIPTOR FONTS:CENTURYSCHOOLBOOK105B 1697459> #<BFONT-DESCRIPTOR FONTS:TIMESROMAN8 1697635> #<BFONT-DESCRIPTOR FONTS:CENTURYSCHOOLBOOK105B 1697459> #<BFONT-DESCRIPTOR FONTS:FIX100 1697771> #<BFONT-DESCRIPTOR FONTS:TVFONT9 1697907> #<BFONT-DESCRIPTOR FONTS:FIX9 1698043> #<BFONT-DESCRIPTOR FONTS:SYMBOL10 1698179> ...) ...)

Rest of stack:
(:METHOD SI:HARDCOPY-DEVICE-MIXIN :MAKE-HARDCOPY-STREAM):  (P.C. = 124)
SI:MAKE-HARDCOPY-STREAM:  (P.C. = 52)
SAGE:FIND-LGP-STREAM-WITH-FONT-MAP:  (P.C. = 17)
(:METHOD SAGE:LGP-DEVICE :WITH-DEVICE-PREPARED):  (P.C. = 21)
(:METHOD SAGE:DEX :HARDCOPY-VIEWING-CONTEXT):  (P.C. = 46)
(:METHOD SAGE:DEX :COM-HARDCOPY-VIEWER):  (P.C. = 16)
(:METHOD SAGE:DEX :COMMAND-MESSAGE):  (P.C. = 43)
(:INTERNAL (:METHOD SAGE:DEX :COMMAND-LOOP) 0 SAGE:DOIT):  (P.C. = 27)
(:METHOD SAGE:DEX :COMMAND-LOOP):  (P.C. = 55)
(:METHOD SAGE:DEX :TOPLEVEL):  (P.C. = 255)
SAGE:DEX-TOPLEVEL:  (P.C. = 4)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
3-Jul-85 21:01:41-EDT,1301;000000000000   
Received: from MIT-REAGAN by MIT-OZ via Chaosnet; 23 Jun 85 19:41-EDT
Received: from APIARY-8 by MIT-REAGAN via CHAOS with CHAOS-MAIL id 5641; Sun 23-Jun-85 19:51:31-EDT
Date: Sun, 23 Jun 85 19:40 EDT
From: Randy Parker <PARKER@OZ>
Subject: Connections message
To: BUG-LISPM@OZ
Message-ID: <850623194016.2.PARKER@APIARY-8>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.4,
microcode TMC5-MIC 319, FEP 18, on Lisp Machine Apiary-8:
Warm booted from: Peek Frame 3.

Often, when a connection gets closed unexpectedly, such as a terminal
connection (in this case due to a warm boot), the message "Attempt to
<blank> from <connection>, which <blanked>." appears.  However, I have
noticed that frequently this message is inappropriate or wrong.

For instance, I had to warm boot with a SUPDUP open to OZ.  After the
"start", I went to that window with Select-T and saw the old typeout,
which quickly vanished and was replaced with the above message and an
opportunity to connect again.  All this is absolutely correct, except
that the message was about a FINGER connection to OZ.  I have noticed
this other times, sometimes appearing to put any totally random
connection in the message.

I will send you a concrete example and/or a method of generating this if
I find one.
3-Jul-85 21:01:41-EDT,1271;000000000000   
Received: from MIT-ROBOT-2 by MIT-OZ via Chaosnet; 24 Jun 85 12:33-EDT
Date: Mon, 24 Jun 85 12:32 EDT
From: Patrick A. O'Donnell <PAO@MIT-EECS>
Subject: Accessing internal symbols
To: BUG-LISPM@OZ
Message-ID: <850624123230.9.PAO@ROBOT-2>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.4, Manip 5.8,
Puma 5.5, microcode TMC5-MIC 319, FEP 18, on Lisp Machine Robot-2:

In the course of debugging, I needed to access the internal symbol
ARMED-GUARDS in the MANIPULATOR package.  *PACKAGE* was USER, so I typed
MANIP::ARMED-GUARDS, and was astonished to find it had the value
:ARMED-GUARDS, rather than the array I was expecting.  After examining
the following information,

(intern "ARMED-GUARDS" 'keyword)
:ARMED-GUARDS
:EXTERNAL
(intern "ARMED-GUARDS" 'manip)
MANIP::ARMED-GUARDS
:INTERNAL

I assume that "manip::armed-guards" is being interpreted as
"manip:keyword:armed-guards" when :ARMED-GUARDS exists :EXTERNAL and the
symbol in MANIP is :INTERNAL.

Nope:  I just tried it again in a different Lisp Listener, and the
problem wasn't there.  It seems that setting the "typein font" on my
Lisp Listener causes the problem.  In that case, it appears that
"manip::whatever" is always interpreted as "manip:keyword:whatever".
		- Pat
3-Jul-85 21:01:41-EDT,2817;000000000000  
Received: from MIT-REAGAN by MIT-OZ via Chaosnet; 24 Jun 85 15:42-EDT
Received: from CROSBY by MIT-REAGAN via CHAOS with CHAOS-MAIL id 5654; Mon 24-Jun-85 15:52:44-EDT
Date: Mon, 24 Jun 85 15:40 EDT
From: Randy Parker <PARKER@OZ>
Subject: bogus error message
To: BUG-LISPM@OZ
Message-ID: <850624154048.8.PARKER@CROSBY>
Fonts: CPTFONT, CPTFONTB

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.4,
microcode TMC5-MIC 319, FEP 17, on Lisp Machine Bing Crosby:

This makes no sense.  Is NIL now neq NIL?

>>Error: 1NIL0 illegal as :CHARACTER-WIDTH; use 1NIL0, number, or string
While in the function (:DEFUN-METHOD TV:DECODE-CHARACTER-WIDTH-SPEC)  (:METHOD STANDALONE-ZWEI-WINDOW-PANE :SIZE-DELTAS-FOR-STRING)  (:METHOD BASIC-STANDALONE-EDITOR-FRAME :SET-SIZE-FROM-STRING)

(:DEFUN-METHOD TV:DECODE-CHARACTER-WIDTH-SPEC):  (P.C. = 35)
   Arg 0 (SELF): #<STANDALONE-ZWEI-WINDOW-PANE Standalone Zwei Window Pane 1 103100000 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:SHEET -- 0. IV's, 1. FL's 104653264>
   Arg 2 (SPEC): NIL
   Local 3 (IGNORE): "~S illegal as :CHARACTER-WIDTH; use NIL, number, or string"
   Local 4 (IGNORE): NIL
   Local 5 (MAX-X): #<DTP-LOCATIVE 43440471>

(:METHOD STANDALONE-ZWEI-WINDOW-PANE :SIZE-DELTAS-FOR-STRING):  (P.C. = 10)
   Arg 0 (SELF): #<STANDALONE-ZWEI-WINDOW-PANE Standalone Zwei Window Pane 1 103100000 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor STANDALONE-ZWEI-WINDOW-PANE -- 0. IV's, 1. FL's 104653426>
   Arg 2 (OPERATION): :SIZE-DELTAS-FOR-STRING
   Arg 3 (STRING): NIL

(:METHOD BASIC-STANDALONE-EDITOR-FRAME :SET-SIZE-FROM-STRING):  (P.C. = 32)
   Arg 0 (SELF): #<POP-UP-STANDALONE-EDITOR-FRAME Pop Up Standalone Editor Frame 1 43242220 deactivated>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor BASIC-STANDALONE-EDITOR-FRAME -- 5. IV's, 0. FL's 104441237>
   Arg 2 (OPERATION): :SET-SIZE-FROM-STRING
   Arg 3 (STRING): NIL
   Arg 4 (MIN-WIDTH): 400
   Arg 5 (MIN-HEIGHT): 200
   --Defaulted args:--
   Arg 6 (MAX-WIDTH): 1088
   Arg 7 (MAX-HEIGHT): 749

POP-UP-EDSTRING:  (P.C. = 24)
   Arg 0 (STRING): NIL				1;my bug
0   Arg 1 (NEAR-MODE): (:MOUSE)
   Arg 2 (MODE-LINE-LIST): NIL
   Arg 3 (MIN-WIDTH): 400
   Arg 4 (MIN-HEIGHT): 200
   Arg 5 (INITIAL-MESSAGE): "Press END when done. Keep it short."

COM-PUSHER:  (from OZ:PS:<PARKER>ZWEI-INIT)

COM-EXTENDED-COMMAND:  (P.C. = 27)

COMMAND-EXECUTE:  (P.C. = 57)
   Arg 0 (COMMAND): COM-EXTENDED-COMMAND
   Arg 1 (CHAR): 600
   Arg 2 (PREFIX-CHAR): NIL
   Arg 3 (HOOK-LIST): NIL

PROCESS-COMMAND-CHAR:  (P.C. = 14)
   Arg 0 (CH): 600

Rest of stack:
(:METHOD EDITOR :EDIT):  (P.C. = 233)
(:METHOD TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 60)
ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 51)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
3-Jul-85 21:01:42-EDT,2452;000000000000  
Received: from MIT-ELVIS by MIT-OZ via Chaosnet; 24 Jun 85 16:16-EDT
Date: Mon, 24 Jun 85 16:15 EDT
From: Chris Lindblad <CJL@OZ>
Subject: Namespace lossage
To: BUG-LISPM@OZ
Message-ID: <850624161505.1.CJL@ELVIS>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.4,
Experimental NS 23.61, microcode TMC5-MIC 319, FEP 22, on Lisp Machine Elvis Presley:

Editing the namespace object HOST REAGAN, type s, get this.

>>Error: No servers are known for namespace MIT.
While in the function NETI:FIND-NAMESPACE-ACCESS-PATH  NETI:UPDATE-OBJECT-THROUGH-NETWORK  NET:UPDATE-OBJECT-PERMANENTLY

NETI:FIND-NAMESPACE-ACCESS-PATH:  (P.C. = 350)
   Arg 0 (NAMESPACE): #<NAMESPACE MIT 1400115>
   Rest arg: (:PRIMARY-ONLY T)
   Local 2 (MAP-RESULT): (#<SERVICE-ACCESS-PATH NAMESPACE (NAMESPACE) -- REAGAN on CHAOS 37236241>)
   Local 3 (PRIMARY-ONLY): T
   Local 4 (SERVICES): ((#<LISPM-HOST REAGAN 1400000> #<SERVICE-ACCESS-PATH NAMESPACE (NAMESPACE) -- REAGAN on CHAOS 37236241> #<SERVICE-ACCESS-PATH NAMESPACE-TIMESTAMP (NAMESPACE-TIMESTAMP) -- REAGAN on CHAOS 37236256>))
   Local 5 (ERRORS): NIL

NETI:UPDATE-OBJECT-THROUGH-NETWORK:  (P.C. = 45)
   Arg 0 (NAMESPACE): #<NAMESPACE MIT 1400115>
   Arg 1 (OBJECT): #<LISPM-HOST REAGAN 1400000>

NET:UPDATE-OBJECT-PERMANENTLY:  (P.C. = 34)
   Arg 0 (CLASS): :HOST
   Arg 1 (NAMESPACE): #<NAMESPACE MIT 1400115>
   Arg 2 (NAME): #<NAME MIT|REAGAN 1400111>
   Arg 3 (PROPERTY-LIST): (:SYSTEM-TYPE :LISPM :NICKNAME (#<NAME MIT|BONZO 1400071> #<NAME MIT|MIT-REAGAN 1400075>) :SHORT-NAME (#<NAME MIT|B 1400101>) :SITE #<SITE MIT 1400014> :MACHINE-TYPE :|3600| ...)
   Arg 4 (DONT-UPDATE-FILES): NIL

(:DEFUN-METHOD NETI:PERFORM-COMMAND):  (P.C. = 445)
   Arg 0 (SELF): #<NAMESPACE-EDITOR-FRAME Namespace Editor 1 542045 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NETI:NAMESPACE-EDITOR-FRAME -- 15. IV's, 13. FL's 122665776>
   Arg 2 (CH): 115.
   Local 2 (CH): 83.

(:METHOD NETI:NAMESPACE-EDITOR-FRAME :TOP-LEVEL):  (P.C. = 121)
   Arg 0 (SELF): #<NAMESPACE-EDITOR-FRAME Namespace Editor 1 542045 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NETI:NAMESPACE-EDITOR-FRAME -- 15. IV's, 13. FL's 122665776>
   Arg 2 (OPERATION): :TOP-LEVEL

NETI:START-NAMESPACE-EDITOR:  (P.C. = 4)
   Arg 0 (WINDOW): #<NAMESPACE-EDITOR-FRAME Namespace Editor 1 542045 exposed>

SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
   --Defaulted args:--
   Arg 0 (IGNORE): NIL
3-Jul-85 21:01:42-EDT,516;000000000000    
Received: from MIT-APIARY-9 by MIT-OZ via Chaosnet; 24 Jun 85 17:18-EDT
Date: Mon, 24 Jun 85 17:17 EDT
From: David Vinayak Wallace <Gumby@MIT-MC>
Subject: sage:*whitespace* and sage:*white-space*
To: BUG-LISPM@OZ
Message-ID: <850624171705.1.GUMBY@APIARY-9>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.4,
microcode TMC5-MIC 319, on Lisp Machine Apiary-9:

They are set-equal.  It's also not really clear to me why they need be
different from si:*whitespace* or zwei:*whitespace-chars*.

david
3-Jul-85 21:01:42-EDT,1819;000000000000
Received: from MIT-XX by MIT-OZ via Chaosnet; 24 Jun 85 22:33-EDT
Received: from SCRC-STONY-BROOK.ARPA by MIT-XX.ARPA with TCP; Mon 24 Jun 85 22:31:56-EDT
Received: from TURKEY.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 262159; Mon 24-Jun-85 22:30:38-EDT
Date: Mon, 24 Jun 85 22:31 EDT
From: Michael Greenwald <Greenwald@SCRC-STONY-BROOK.ARPA>
Subject: Accessing internal symbols
To: PAO@MIT-EECS, BUG-LISPM%OZ@MIT-XX.ARPA
In-Reply-To: <850624123230.9.PAO@ROBOT-2>
Message-ID: <850624223113.5.GREENWALD@TURKEY.SCRC.Symbolics.COM>

    Date: Mon, 24 Jun 85 12:32 EDT
    From: Patrick A. O'Donnell <PAO@MIT-EECS>

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.4, Manip 5.8,
    Puma 5.5, microcode TMC5-MIC 319, FEP 18, on Lisp Machine Robot-2:

    In the course of debugging, I needed to access the internal symbol
    ARMED-GUARDS in the MANIPULATOR package.  *PACKAGE* was USER, so I typed
    MANIP::ARMED-GUARDS, and was astonished to find it had the value
    :ARMED-GUARDS, rather than the array I was expecting.  After examining
    the following information,

    (intern "ARMED-GUARDS" 'keyword)
    :ARMED-GUARDS
    :EXTERNAL
    (intern "ARMED-GUARDS" 'manip)
    MANIP::ARMED-GUARDS
    :INTERNAL

    I assume that "manip::armed-guards" is being interpreted as
    "manip:keyword:armed-guards" when :ARMED-GUARDS exists :EXTERNAL and the
    symbol in MANIP is :INTERNAL.

    Nope:  I just tried it again in a different Lisp Listener, and the
    problem wasn't there.  It seems that setting the "typein font" on my
    Lisp Listener causes the problem.  In that case, it appears that
    "manip::whatever" is always interpreted as "manip:keyword:whatever".
		    - Pat

This has already been fixed in the 6.1 reader.


3-Jul-85 21:01:42-EDT,1897;000000000000  
Received: from MIT-XX by MIT-OZ via Chaosnet; 24 Jun 85 22:34-EDT
Received: from SCRC-STONY-BROOK.ARPA by MIT-XX.ARPA with TCP; Mon 24 Jun 85 22:32:08-EDT
Received: from TURKEY.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 262161; Mon 24-Jun-85 22:30:59-EDT
Date: Mon, 24 Jun 85 22:31 EDT
From: Michael Greenwald <Greenwald@SCRC-STONY-BROOK.ARPA>
Subject: Accessing internal symbols
To: PAO%MIT-EECS@MIT-XX.ARPA, BUG-LISPM%OZ@MIT-XX.ARPA
In-Reply-To: <850624123230.9.PAO@ROBOT-2>
Supersedes: <850624223113.5.GREENWALD@TURKEY.SCRC.Symbolics.COM>
Message-ID: <850624223134.6.GREENWALD@TURKEY.SCRC.Symbolics.COM>

    Date: Mon, 24 Jun 85 12:32 EDT
    From: Patrick A. O'Donnell <PAO@MIT-EECS>

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.4, Manip 5.8,
    Puma 5.5, microcode TMC5-MIC 319, FEP 18, on Lisp Machine Robot-2:

    In the course of debugging, I needed to access the internal symbol
    ARMED-GUARDS in the MANIPULATOR package.  *PACKAGE* was USER, so I typed
    MANIP::ARMED-GUARDS, and was astonished to find it had the value
    :ARMED-GUARDS, rather than the array I was expecting.  After examining
    the following information,

    (intern "ARMED-GUARDS" 'keyword)
    :ARMED-GUARDS
    :EXTERNAL
    (intern "ARMED-GUARDS" 'manip)
    MANIP::ARMED-GUARDS
    :INTERNAL

    I assume that "manip::armed-guards" is being interpreted as
    "manip:keyword:armed-guards" when :ARMED-GUARDS exists :EXTERNAL and the
    symbol in MANIP is :INTERNAL.

    Nope:  I just tried it again in a different Lisp Listener, and the
    problem wasn't there.  It seems that setting the "typein font" on my
    Lisp Listener causes the problem.  In that case, it appears that
    "manip::whatever" is always interpreted as "manip:keyword:whatever".
		    - Pat

This has already been fixed in the 6.1 reader.


3-Jul-85 21:01:43-EDT,714;000000000000 
Received: from MIT-MOON by MIT-OZ via Chaosnet; 24 Jun 85 23:20-EDT
Date: Mon, 24 Jun 85 23:19 EDT
From: Alan Bawden <Alan@MIT-MC>
Subject: The variable NIL is unknown and has been declared SPECIAL
To: bug-lispm@OZ
Message-ID: <850624231938.1.ALAN@MOON>

I got the following compiler warning:
  
  For Function PRINT-TERMINAL
    Not enough args for TERMINAL-ALTER-EGO, binding TERMINAL to NIL
    While compiling (AR-1 NIL 3):
    The variable NIL is unknown and has been declared SPECIAL

TERMINAL-ALTER-EGO is a defstruct-defined accessor (I guess that is a
DEFSUBSTed frob these days?) that I accidentally called with no arguments.
"The variable NIL is unknown and has been declared SPECIAL"?
3-Jul-85 21:01:43-EDT,2945;000000000000    
Received: from MIT-MC by MIT-OZ via Chaosnet; 25 Jun 85 10:50-EDT
Received: from MIT-TWEETY-PIE.ARPA by MIT-MC.ARPA via Chaosnet; 25 JUN 85  10:49:14 EDT
Date: Tuesday, 25 June 1985, 10:48-EDT
From: Cory Myers <cory at MIT-BUGS-BUNNY>
Subject: Cartridge Tape Problem
To: BUG-LISPM at OZ
Message-ID: <850625104811.1.CORY@TWEETY-PIE.MIT>

In Symbolics 3600 Release 6.0, IP-TCP 29.0,
microcode TMC5-IO4-FPA-MIC 319, with UTIL, on Lisp Machine Tweety Pie:

I did a tape:carry-dump to our local cartridge tape.  That worked
without error.  I then tried a tape:carry-list and got this.

>>Error: Hard tape error: FEP/Command error: 1101_16. (Bus turn timeout)
While in the function (:METHOD TAPE:CART-TAPE-STREAM-MIXIN :COMMAND)  (:DEFUN-METHOD TAPE:CART-READ-STATUS)  (:METHOD TAPE:CART-TAPE-STREAM-MIXIN :REWIND)

(:METHOD TAPE:CART-TAPE-STREAM-MIXIN :COMMAND):  (P.C. = 33)
   Arg 0 (SELF): #<CART-INPUT-STREAM 10532570>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TAPE:CART-TAPE-STREAM-MIXIN -- 17. IV's, 0. FL's 142762734>
   Arg 2 (OPERATION): :COMMAND
   Arg 3 (CODE): 0
   --Defaulted args:--
   Arg 4 (IGNORE-ERROR): NIL

(:DEFUN-METHOD TAPE:CART-READ-STATUS):  (P.C. = 5)
   Arg 0 (SELF): #<CART-INPUT-STREAM 10532570>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TAPE:CART-TAPE-STREAM-MIXIN -- 17. IV's, 0. FL's 142762734>

(:METHOD TAPE:CART-TAPE-STREAM-MIXIN :REWIND):  (P.C. = 26)
   Arg 0 (SELF): #<CART-INPUT-STREAM 10532570>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TAPE:CART-TAPE-STREAM-MIXIN -- 17. IV's, 0. FL's 142762734>
   Arg 2 (OPERATION): :REWIND

(:METHOD TAPE:CART-INPUT-STREAM :COMBINED :REWIND):  (P.C. = 20)
   Arg 0 (SELF): #<CART-INPUT-STREAM 10532570>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TAPE:CART-INPUT-STREAM -- 3. IV's, 6. FL's 142763000>
   Arg 2 (.OPERATION.): :REWIND
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

TAPE:CARRY-LIST:  (P.C. = 66)
   Rest arg: NIL

SI:*EVAL:  (P.C. = 403)
   Arg 0 (FORM): (TAPE:CARRY-LIST)
   Local 0 (FORM): NIL
   --Defaulted args:--
   Arg 1 (ENV): NIL
   Arg 2 (HOOK): NIL

(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0):  (P.C. = 152)
   Arg 0 (.LEXICAL-ENVIRONMENT-POINTER.): #<DTP-LOCATIVE 500047>

TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
   Arg 0 (NEW-MODE): :BLAST
   Arg 1 (STREAM): #:TERMINAL-IO-SYN-STREAM
   Arg 2 (CONTINUATION): #<LEXICAL-CLOSURE (:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0) 500054>

SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
   Arg 0 (NAME): "Lisp Top Level"
   Arg 1 (ABORT-FUNCTION): NIL
   Arg 2 (READ-FUNCTION): NIL
   Arg 3 (EVAL-FUNCTION): NIL
   Arg 4 (PRINT-FUNCTION): NIL

SI:LISP-COMMAND-LOOP:  (P.C. = 67)
   Arg 0: #<LISP-LISTENER Lisp Listener 1 43200216 exposed>
   Rest arg: (:NAME "Lisp Top Level")

SI:LISP-TOP-LEVEL1:  (P.C. = 5)
   Arg 0 (STREAM): #<LISP-LISTENER Lisp Listener 1 43200216 exposed>

SI:LISP-TOP-LEVEL:  (P.C. = 7)
3-Jul-85 21:01:43-EDT,1509;000000000000
Mail-From: CJL created at 25-Jun-85 11:51:42
Date: Tue, 25 Jun 1985  11:51 EDT
Message-ID: <CJL.12121973952.BABYL@MIT-OZ>
From: Chris Lindblad <CJL@MIT-OZ>
To:   Cory Myers <cory@MIT-BUGS-BUNNY>
Cc:   BUG-LISPM@MIT-OZ
Subject: Cartridge Tape Problem
In-reply-to: Msg of 25 Jun 1985 10:48-EDT from Cory Myers <cory at MIT-BUGS-BUNNY>

    Date: Tuesday, 25 June 1985, 10:48-EDT
    From: Cory Myers <cory at MIT-BUGS-BUNNY>

    In Symbolics 3600 Release 6.0, IP-TCP 29.0,
    microcode TMC5-IO4-FPA-MIC 319, with UTIL, on Lisp Machine Tweety Pie:

    I did a tape:carry-dump to our local cartridge tape.  That worked
    without error.  I then tried a tape:carry-list and got this.

    >>Error: Hard tape error: FEP/Command error: 1101_16. (Bus turn timeout)
    While in the function (:METHOD TAPE:CART-TAPE-STREAM-MIXIN :COMMAND)  (:DEFUN-METHOD TAPE:CART-READ-STATUS)  (:METHOD TAPE:CART-TAPE-STREAM-MIXIN :REWIND)

I've heard (but not from bug-lispm, even though this bug gets reported
about once a month) that this is a FEP timing bug. When you get here,
type c-N c-m-R space. This seems to work.

This bug has been around a long time, and has been reported many times.
It happens so much here at MIT that I can only assume that it happens
often everywhere else. I have never seen any mention of this or any
workaround reported in any Symbolics literature. How many tape drives &
FEP boards on how many machines have been replaced by field service
because of this bug?
3-Jul-85 21:01:43-EDT,693;000000000000  
Received: from MIT-APIARY-4 by MIT-OZ via Chaosnet; 25 Jun 85 12:40-EDT
Date: Tue, 25 Jun 85 12:39 EDT
From: David Vinayak Wallace <Gumby@MIT-MC>
Subject: no such host: MIT-EDDIE.ARPA
To: BUG-LISPM@OZ
Message-ID: <850625123907.3.GUMBY@APIARY-4>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.4,
microcode TMC5-MIC 319, FEP 18, on Lisp Machine Apiary-4:

I wanted to supdup to eddie via internet, so I thought I'd see if I
could connect to MIT-EDDIE.ARPA.  My machine connected to bonzo and
decided that there was no such host.  But it's in the host table!

btw, I did connect via INTERNET|MIT-EDDIE, but it still decided to use
chaos.  How may I override this?

david
3-Jul-85 21:01:44-EDT,605;000000000000
Received: from MIT-APIARY-4 by MIT-OZ via Chaosnet; 25 Jun 85 12:49-EDT
Date: Tue, 25 Jun 85 12:48 EDT
From: David Vinayak Wallace <Gumby@MIT-MC>
Subject: terminal emulation in SUPDUP
To: BUG-LISPM@OZ
Message-ID: <850625124800.5.GUMBY@APIARY-4>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.4,
microcode TMC5-MIC 319, FEP 18, on Lisp Machine Apiary-4:

It still be nice to have terminal emulation mode be available in supdup
so that when you (e.g.) supdup to MC and telnet to some remote host (or
dial from some vax you supdup-ed to) you could still use things like
display editors.
3-Jul-85 21:01:44-EDT,1326;000000000000   
Received: from MIT-REAGAN by MIT-OZ via Chaosnet; 25 Jun 85 14:07-EDT
Received: from SCRC-STONY-BROOK by MIT-REAGAN via INTERNET with SMTP id 5674; 25 Jun 85 14:17:49-EDT
Received: from THAMES.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 262610; Tue 25-Jun-85 14:01:09-EDT
Date: Tue, 25 Jun 85 14:06 EDT
From: Scott McKay <SWM@SCRC-QUABBIN.ARPA>
Subject: Cartridge Tape Problem
To: cory@MIT-BUGS-BUNNY.mit, BUG-LISPM@OZ.mit
In-Reply-To: <850625104811.1.CORY@TWEETY-PIE.MIT>
Message-ID: <850625140608.5.SWM@THAMES.SCRC.Symbolics.COM>

    Date: Tuesday, 25 June 1985, 10:48-EDT
    From: Cory Myers <cory at MIT-BUGS-BUNNY>

    In Symbolics 3600 Release 6.0, IP-TCP 29.0,
    microcode TMC5-IO4-FPA-MIC 319, with UTIL, on Lisp Machine Tweety Pie:

    I did a tape:carry-dump to our local cartridge tape.  That worked
    without error.  I then tried a tape:carry-list and got this.

    >>Error: Hard tape error: FEP/Command error: 1101_16. (Bus turn timeout)
    While in the function (:METHOD TAPE:CART-TAPE-STREAM-MIXIN :COMMAND)  (:DEFUN-METHOD TAPE:CART-READ-STATUS)  (:METHOD TAPE:CART-TAPE-STREAM-MIXIN :REWIND)

This will work properly in Rel 6.1.  I am forwarding this message to our
software support people in case you need to get a patch earlier than
that.

3-Jul-85 21:01:44-EDT,1425;000000000000    
Received: from MIT-HTVAX by MIT-OZ via Chaosnet; 25 Jun 85 14:32-EDT
Received: from SCRC-YUKON.ARPA (scrc-yukon.arpa.ARPA) by MIT-HTVAX.ARPA (4.12/4.7) 
	id AA06735; Tue, 25 Jun 85 14:16:06 edt
Received: from WAIKATO.SCRC.Symbolics.COM by SCRC-YUKON.ARPA via CHAOS with CHAOS-MAIL id 134102; Tue 25-Jun-85 14:15:25-EDT
Received: from BIG.SCRC.Symbolics.COM by WAIKATO.SCRC.Symbolics.COM via CHAOS with CHAOS-MAIL id 104649; Tue 25-Jun-85 14:14:48-EDT
Date: Tue, 25 Jun 85 14:13 EDT
From: Charles Hornig <Hornig@SCRC-STONY-BROOK.ARPA>
Subject: terminal emulation in SUPDUP
To: David Vinayak Wallace <Gumby%MIT-MC@MIT-HTVAX.ARPA>,
        BUG-LISPM%OZ@MIT-HTVAX.ARPA
In-Reply-To: <850625124800.5.GUMBY@APIARY-4>
Message-Id: <850625141344.4.HORNIG@BIG.SCRC.Symbolics.COM>

    Date: Tue, 25 Jun 85 12:48 EDT
    From: David Vinayak Wallace <Gumby%MIT-MC@MIT-HTVAX.ARPA>

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.4,
    microcode TMC5-MIC 319, FEP 18, on Lisp Machine Apiary-4:

    It still be nice to have terminal emulation mode be available in supdup
    so that when you (e.g.) supdup to MC and telnet to some remote host (or
    dial from some vax you supdup-ed to) you could still use things like
    display editors.

It can't be done.  MC is sending SUPDUP codes to the LispM, the original
terminal codes are already lost.  You would have to run the terminal
emulator on MC.

3-Jul-85 21:01:44-EDT,1551;000000000000   
Received: from MIT-HTVAX by MIT-OZ via Chaosnet; 25 Jun 85 14:32-EDT
Received: from SCRC-YUKON.ARPA (scrc-yukon.arpa.ARPA) by MIT-HTVAX.ARPA (4.12/4.7) 
	id AA06731; Tue, 25 Jun 85 14:15:54 edt
Received: from WAIKATO.SCRC.Symbolics.COM by SCRC-YUKON.ARPA via CHAOS with CHAOS-MAIL id 134100; Tue 25-Jun-85 14:15:16-EDT
Received: from BIG.SCRC.Symbolics.COM by WAIKATO.SCRC.Symbolics.COM via CHAOS with CHAOS-MAIL id 104646; Tue 25-Jun-85 14:13:41-EDT
Date: Tue, 25 Jun 85 14:12 EDT
From: Charles Hornig <Hornig@SCRC-STONY-BROOK.ARPA>
Subject: no such host: MIT-EDDIE.ARPA
To: David Vinayak Wallace <Gumby%MIT-MC@MIT-HTVAX.ARPA>,
        BUG-LISPM%OZ@MIT-HTVAX.ARPA
In-Reply-To: <850625123907.3.GUMBY@APIARY-4>
Message-Id: <850625141236.3.HORNIG@BIG.SCRC.Symbolics.COM>

    Date: Tue, 25 Jun 85 12:39 EDT
    From: David Vinayak Wallace <Gumby%MIT-MC@MIT-HTVAX.ARPA>

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.4,
    microcode TMC5-MIC 319, FEP 18, on Lisp Machine Apiary-4:

    I wanted to supdup to eddie via internet, so I thought I'd see if I
    could connect to MIT-EDDIE.ARPA.  My machine connected to bonzo and
    decided that there was no such host.  But it's in the host table!

This problem is known and will be fixed in a future release.  PARSE-HOST
does not know about domain names in 6.0.

    btw, I did connect via INTERNET|MIT-EDDIE, but it still decided to use
    chaos.  How may I override this?

Edit (locally) the service entries for EDDIE with the Namespace Editor.

    david

3-Jul-85 21:01:45-EDT,3080;000000000000    
Received: from MIT-APIARY-4 by MIT-OZ via Chaosnet; 25 Jun 85 15:07-EDT
Date: Tue, 25 Jun 85 15:06 EDT
From: David Vinayak Wallace <Gumby@MIT-MC>
Subject: one buffer; two names
To: BUG-LISPM@OZ
Message-ID: <850625150641.7.GUMBY@APIARY-4>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.4,
microcode TMC5-MIC 319, FEP 18, on Lisp Machine Apiary-4:

I did a m-.; while it was frobbing I got a notification.  When it
finally finished the m-. I was still in my old buffer.  But wait -- the
buffer now had the name the the file my m-. loaded!  A couple of c-m-l's
confirmed that the same buffer had two names.  But a c-l caused the
followinf error:


>>Error: WINDOW-START-BP is not in the interval being displayed
While in the function ZWEI:REDISPLAY  ZWEI:REDISPLAY-ALL-WINDOWS  (:METHOD ZWEI:EDITOR :EDIT)

ZWEI:REDISPLAY:  (P.C. = 1015)
   Arg 0 (WINDOW): #<WINDOW 121162025>
   --Defaulted args:--
   Arg 1 (RECENTER-TYPE): :POINT
   Arg 2 (RC1): NIL
   Arg 3 (RC2): NIL
   Arg 4 (FORCE-TO-COMPLETION-P): NIL
   Local 5 (N-PLINES): 48.
   Local 6 (POINT): ("(defvar *recognised-inquir-fields* '(:SUNAM :UNAME :NAME :NICK :BIRTH :MITAD :MITTE :HOMAD" 0. :NORMAL)
   Local 7 (SHEET): #<ZMACS-WINDOW-PANE Zmacs Window Pane 1 43240666 exposed>
   Local 8 (DEGREE): 4.
   Local 9 (POINT-BLINKER): #<RECTANGULAR-BLINKER 56242334>
   Local 10 (INTERVAL): #<FILE-BUFFER "namespaces.lisp >sys>r6>network B:" 11301500>
   Local 11 (START-BP): ("(defvar *recognised-inquir-fields* '(:SUNAM :UNAME :NAME :NICK :BIRTH :MITAD :MITTE :HOMAD" 0. :NORMAL)
   Local 12 (NOW): 30585.
   Local 13 (POINT-PLINE): NIL
   Local 14 (LH): 14.
   Local 15 (POINT-LINE): "(defvar *recognised-inquir-fields* '(:SUNAM :UNAME :NAME :NICK :BIRTH :MITAD :MITTE :HOMAD"
   Local 16 (POINT-INDEX): 0.
   Local 17 (TOP-LINE): "(defvar *recognised-inquir-fields* '(:SUNAM :UNAME :NAME :NICK :BIRTH :MITAD :MITTE :HOMAD"
   Local 18 (TOP-INDEX): 0.
   Local 19 (LAST-BP): ("" 0. :MOVES)
   Local 20 (INITIAL-DEGREE): 4.
   Local 21: #<FILE-BUFFER "namespaces.lisp >sys>r6>network B:" 11301500>
   Local 22 (LINE): NIL
   Local 23 (FROM-INDEX): 0.
   Local 24 (TO-INDEX): 42.
   Local 25 (PLINE): 39.
   Local 26 (STOP-LINE): ""

ZWEI:REDISPLAY-ALL-WINDOWS:  (P.C. = 34)
   --Defaulted args:--
   Arg 0 (FORCE-TO-COMPLETION-P): NIL
   Arg 1 (SELECT-P): T

(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 160)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 121171573>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:EDITOR -- 12. IV's, 0. FL's 142346020>
   Arg 2 (OPERATION): :EDIT
   --Defaulted args:--
   Arg 3 (TOP-LEVEL-P): T
   Arg 4 (DESCRIPTION): NIL

(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 60)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 121171573>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:TOP-LEVEL-EDITOR -- 13. IV's, 1. FL's 142345776>
   Arg 2 (.OPERATION.): :EDIT
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 51)

SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
   Arg 0 (IGNORE): NIL
3-Jul-85 21:01:45-EDT,709;000000000000 
Received: from MIT-HTVAX by MIT-OZ via Chaosnet; 25 Jun 85 15:16-EDT
Received: from SCRC-STONY-BROOK.ARPA (scrc-stony-brook.arpa.ARPA) by MIT-HTVAX.ARPA (4.12/4.7) 
	id AA07187; Tue, 25 Jun 85 15:06:45 edt
Received: from MENOTOMY.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 262715; Tue 25-Jun-85 14:45:29-EDT
Date: Tue, 25 Jun 85 14:49 EDT
From: rom@SCRC-YUKON.ARPA
To: BUG-LISPM%OZ@MIT-HTVAX.ARPA
Subject: sage:*whitespace* and sage:*white-space*
References: <850624171705.1.GUMBY@APIARY-9>
Message-Id: <850625144955.6.ROM@MENOTOMY.SCRC.Symbolics.COM>

[The referenced message has been redirected:
    bug-lispm%oz has been removed;
    bug-sage has been added.]

3-Jul-85 21:01:46-EDT,1563;000000000000 
Received: from MIT-ZERMATT by MIT-OZ via Chaosnet; 25 Jun 85 16:02-EDT
Received: from BRECKENRIDGE by ZERMATT via CHAOS with CHAOS-MAIL id 7208; Tue 25-Jun-85 15:59:47-EDT
Date: Tue, 25 Jun 85 15:59 EDT
From: Christopher Eliot <CRE@SANCHO-PANZA>
Subject: Si:Rename-Package
To: BUG-LISPM@OZ
cc: cre@SANCHO-PANZA
Message-ID: <850625155939.3.CRE@BRECKENRIDGE>

In Symbolics 3640 Release 6.0, IP-TCP 29.0, MLSite 7.2,
Experimental Schema 85.0, microcode TMC5-IO4-ST506-MIC 319, on Lisp Machine Breckenridge:

The function Si:Rename-Package does not seem to work consistantly.

I typed this sequence of forms to a lisp listener:

(pkg-find-package 'xqsim :find)
NIL

(pkg-find-package 'qsim :find)
#<PACKAGE QSIM>

(si:rename-package * "QSIM" "XQSIM")
...

Then I loaded a system, which references both XQSIM and QSIM packages,
(which should now be synonymous), but QSIM is not recognized.

Later I used the same sequence of commands to rename
XQSIM to XQSIM, QSIM and it works.

I have noticed this problem, intermitently for several
months.  I have not been able to figure out in which circumstances
circumstances it happens.  I have never noticed si:rename-package
failing twice in a row.  If I use si:rename-package and then
immediately use pkg-find-package to look it via both of the new
names it always seems to work.  However, when I assume that it works,
and load a system that refers to it it often fails to work.

I have not found any sequence of commands that always results in this
problem.  Sorry.

	Chris Eliot
3-Jul-85 21:01:46-EDT,1186;000000000000   
Received: from MIT-MC by MIT-OZ via Chaosnet; 25 Jun 85 18:55-EDT
Received: from SRI-BISHOP.ARPA by MIT-MC.ARPA 25 Jun 85 18:38:16 EST
Received: from SONORA by SRI-BISHOP via CHAOS with CHAOS-MAIL id 1355; Tue 25-Jun-85 15:38:49-PDT
Date: Tue, 25 Jun 85 15:38 PDT
From: David Chapman <ZVONA@SRI-AI.ARPA>
Subject: common lisp setf screws up on substs
To: Bug-Lispm@MIT-MC.ARPA
Message-ID: <850625153857.1.ZVONA@SONORA.ARPA>

In Symbolics 3600 Lispm@mit-mc.arpa in Release 6.0,
Experimental SRI-SITE-OPTIONS 7.9, Experimental LOCAL-PATCHES 2.11,
IP-TCP 29.0, microcode TMC5-MIC 319, FEP 22, on Sonora:
(SI:FULL-GC :SYSTEM-RELEASE T)'s since release of system: 2
(SI:FULL-GC :GC-COMPILED-FUNCTIONS T)'s since release of system: 1

(defsubst gleep (x) (car x))
(defun flub (x) (setf (gleep x) 17))

If you put these two in a file and :Compile File it,
get-setf-method-multiple-value tries to %args-info GLEEP and dies
complaining that it isn't defined.  Whereas if you compile them
sequentially out of an editor buffer, it works OK.  Since we don't have
source for SETF here (diatribe deleted here; did MIT ever get them?) I
can't fix this presumably trivial bug.

3-Jul-85 21:01:47-EDT,1630;000000000000    
Received: from MIT-GOLDILOCKS by MIT-OZ via Chaosnet; 26 Jun 85 14:04-EDT
Received: from GRIZZLY by GOLDILOCKS via CHAOS with CHAOS-MAIL id 2405; Wed 26-Jun-85 14:02:49-EDT
Date: Wed, 26 Jun 85 14:02 EDT
From: David H. Kaufman <Sr.Kaufman%MIT-SPEECH@MIT-REAGAN.ARPA>
Subject: Nested if in loop indents incorrectly
To: BUG-LISPM@MIT-GOLDILOCKS.ARPA
Message-ID: <850626140244.3.QUX@GRIZZLY.MIT>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, Spire-Macros 5.1,
Attribute 5.6, Compute 5.4, Audio 4.0, Speech-Attributes 4.3,
Display 6.17, Speech-Layouts 6.4, Prtout 4.0, Versatec 5.0, Spire 16.0,
ZOO 6.12, ZOO-SPIRE 2.1, microcode TMC5-MIC 319,
4.2 Finger Compatibility, 4.2 FTP Compatibility,
Lazy Redisplay for Spire, New Transcription Patches, on Lisp Machine Grizzly:

      (loop for attribute being the hash-elements of attribute-alist with-key name
	    if (member name *names-of-attributes-to-be-dumped-kludge*)
	      if (typep attribute 'speaker-to-spire)
		collect (list name (send attribute :fasd-form)) into diddled-alist
!	    else
!	      collect (list name attribute) into diddled-alist
	    finally
	      (putprop fasd-plist diddled-alist 'attribute-alist))

should really be

      (loop for attribute being the hash-elements of attribute-alist with-key name
	    if (member name *names-of-attributes-to-be-dumped-kludge*)
	      if (typep attribute 'speaker-to-spire)
		collect (list name (send attribute :fasd-form)) into diddled-alist
!	      else
!	        collect (list name attribute) into diddled-alist
	    finally
	      (putprop fasd-plist diddled-alist 'attribute-alist))
3-Jul-85 21:01:47-EDT,1104;000000000000
Received: from MIT-GOLDILOCKS by MIT-OZ via Chaosnet; 26 Jun 85 14:06-EDT
Received: from GRIZZLY by GOLDILOCKS via CHAOS with CHAOS-MAIL id 2406; Wed 26-Jun-85 14:05:02-EDT
Date: Wed, 26 Jun 85 14:05 EDT
From: David H. Kaufman <Sr.Kaufman%MIT-SPEECH@MIT-REAGAN.ARPA>
Subject: Global state considered harmful
To: BUG-LISPM@MIT-GOLDILOCKS.ARPA
Message-ID: <850626140504.4.QUX@GRIZZLY.MIT>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, Spire-Macros 5.1,
Attribute 5.6, Compute 5.4, Audio 4.0, Speech-Attributes 4.3,
Display 6.17, Speech-Layouts 6.4, Prtout 4.0, Versatec 5.0, Spire 16.0,
ZOO 6.12, ZOO-SPIRE 2.1, microcode TMC5-MIC 319,
4.2 Finger Compatibility, 4.2 FTP Compatibility,
Lazy Redisplay for Spire, New Transcription Patches, on Lisp Machine Grizzly:

I often want to set the prompt and/or package for a special-purpose Lisp
Listener (such as the one under the Mailer Log Window) to a special
value (e.g. "Mailer: " and the Mailer package), and I am constantly
annoyed when I switch to a different Lisp Listener and find that I have
changed the prompt/package there as well.
3-Jul-85 21:01:47-EDT,2133;000000000000 
Received: from MIT-GOLDILOCKS by MIT-OZ via Chaosnet; 26 Jun 85 15:22-EDT
Received: from SCRC-STONY-BROOK.MIT by GOLDILOCKS.MIT via INTERNET with SMTP id 2409; 26 Jun 85 15:20:31-EDT
Received: from THAMES.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 263759; Wed 26-Jun-85 15:11:13-EDT
Date: Wed, 26 Jun 85 15:16 EDT
From: Scott McKay <SWM@SCRC-QUABBIN.ARPA>
Subject: Nested if in loop indents incorrectly
To: Sr.Kaufman%MIT-SPEECH@MIT-REAGAN.ARPA, BUG-LISPM@MIT-GOLDILOCKS.ARPA
In-Reply-To: <850626140244.3.QUX@GRIZZLY.MIT>
Message-ID: <850626151631.5.SWM@THAMES.SCRC.Symbolics.COM>

    Date: Wed, 26 Jun 85 14:02 EDT
    From: David H. Kaufman <Sr.Kaufman%MIT-SPEECH@MIT-REAGAN.ARPA>

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, Spire-Macros 5.1,
    Attribute 5.6, Compute 5.4, Audio 4.0, Speech-Attributes 4.3,
    Display 6.17, Speech-Layouts 6.4, Prtout 4.0, Versatec 5.0, Spire 16.0,
    ZOO 6.12, ZOO-SPIRE 2.1, microcode TMC5-MIC 319,
    4.2 Finger Compatibility, 4.2 FTP Compatibility,
    Lazy Redisplay for Spire, New Transcription Patches, on Lisp Machine Grizzly:

	  (loop for attribute being the hash-elements of attribute-alist with-key name
		if (member name *names-of-attributes-to-be-dumped-kludge*)
		  if (typep attribute 'speaker-to-spire)
		    collect (list name (send attribute :fasd-form)) into diddled-alist
	  !	else
	  !	  collect (list name attribute) into diddled-alist
		finally
		  (putprop fasd-plist diddled-alist 'attribute-alist))

    should really be

	  (loop for attribute being the hash-elements of attribute-alist with-key name
		if (member name *names-of-attributes-to-be-dumped-kludge*)
		  if (typep attribute 'speaker-to-spire)
		    collect (list name (send attribute :fasd-form)) into diddled-alist
	  !	  else
	  !	    collect (list name attribute) into diddled-alist
		finally
		  (putprop fasd-plist diddled-alist 'attribute-alist))

This is a(n all too) well-known bug.  To fix it requires that the LOOP
indentor understand the some of the semantics of LOOP.  This is not
planned for the near future.

3-Jul-85 21:01:47-EDT,784;000000000000 
Received: from MIT-MC by MIT-OZ via Chaosnet; 26 Jun 85 17:11-EDT
Received: from SCRC-STONY-BROOK.ARPA by MIT-MC.ARPA 26 Jun 85 17:10:51 EST
Received: from THAMES.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 263876; Wed 26-Jun-85 17:04:48-EDT
Date: Wed, 26 Jun 85 17:10 EDT
From: Scott McKay <SWM@SCRC-QUABBIN.ARPA>
Subject: :Trace
To: ZVONA@SRI-AI.ARPA, BUG-LISPM@MIT-MC.ARPA
In-Reply-To: <850626130216.1.ZVONA@SONORA.ARPA>
Message-ID: <850626171008.7.SWM@THAMES.SCRC.Symbolics.COM>

    Date: Wed, 26 Jun 85 13:02 PDT
    From: David Chapman <ZVONA@SRI-AI.ARPA>

    In Symbolics 3600 Release 6.0...

    One of the motivating examples for the command processor was an
    interface for tracing.  It's still a good idea.

Someday...

3-Jul-85 21:01:48-EDT,555;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 26 Jun 85 17:25-EDT
Received: from SRI-BISHOP.ARPA by MIT-MC.ARPA 26 Jun 85 16:25:55 EST
Received: from SONORA by SRI-BISHOP via CHAOS with CHAOS-MAIL id 1374; Wed 26-Jun-85 13:01:46-PDT
Date: Wed, 26 Jun 85 13:02 PDT
From: David Chapman <ZVONA@SRI-AI.ARPA>
Subject: :Trace
To: BUG-LISPM@MIT-MC.ARPA
Message-ID: <850626130216.1.ZVONA@SONORA.ARPA>

In Symbolics 3600 Release 6.0...

One of the motivating examples for the command processor was an
interface for tracing.  It's still a good idea.

3-Jul-85 21:01:48-EDT,806;000000000000    
Received: from MIT-MC by MIT-OZ via Chaosnet; 26 Jun 85 17:33-EDT
Received: from SCRC-STONY-BROOK.ARPA by MIT-MC.ARPA 26 Jun 85 17:32:26 EST
Received: from CARDINAL.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 263888; Wed 26-Jun-85 17:26:20-EDT
Date: Wed, 26 Jun 85 17:31 EDT
From: William M. York <York@SCRC-QUABBIN.ARPA>
Subject: :Trace
To: ZVONA@SRI-AI.ARPA, BUG-LISPM@MIT-MC.ARPA
In-Reply-To: <850626130216.1.ZVONA@SONORA.ARPA>
Message-ID: <850626173121.7.YORK@CARDINAL.SCRC.Symbolics.COM>

    Date: Wed, 26 Jun 85 13:02 PDT
    From: David Chapman <ZVONA@SRI-AI.ARPA>

    One of the motivating examples for the command processor was an
    interface for tracing.  It's still a good idea.

It's a great idea, but it won't be available before release 7.

3-Jul-85 21:01:48-EDT,499;000000000000 
Received: from MIT-MOON by MIT-OZ via Chaosnet; 27 Jun 85 01:00-EDT
Date: Thu, 27 Jun 85 00:59 EDT
From: David Vinayak Wallace <Gumby@MIT-MC>
Subject: CANNOT LIST ARCHIVE DEVICE
To: BUG-LISPM@OZ
Message-ID: <850627005938.1.GUMBY@MOON>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.4,
microcode TMC5-MIC 319, on Lisp Machine Keith Moon:

Trying to list MC:ARC:GUMBY;* * (c-U c-X D) gives the above error.  But
I can read MC:ARC:GUMBY;.FILE. (DIR) jest fine.  What gives?

david
3-Jul-85 21:01:48-EDT,6382;000000000000  
Received: from MIT-APIARY-3 by MIT-OZ via Chaosnet; 27 Jun 85 09:52-EDT
Date: Thu, 27 Jun 85 09:51 EDT
From:  <etzi@APIARY-6>
Subject: ap6 file server lossage.
To: BUG-LISPM@APIARY-6
Message-ID: <"850627095128.2.etzi@APIARY-6"@APIARY-3>

I tried to login to ap6 and the following happened: 

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.4,
microcode TMC5-MIC 319, on Lisp Machine Apiary-3:



>>Error: %DISK-ERROR-DEVICE-CHECK during a %DCW-WRITE32 on unit 1.,
           Irrecoverable disk error,
           4. pending transfers associated with this disk event aborted.
         Word 0 of file header, record #o70441 of partition 1
         (File partition in FEP1:>lmfs.file.1)
         For AP6:>etzi>lispm-init.lisp.81
While in the function (:METHOD FS:NFILE-SERVER-UNIT :WAIT-FOR-COMMAND)  (:METHOD FS:NFILE-SERVER-UNIT :SEND-AND-WAIT-FOR-COMMAND)  (:METHOD FS:NFILE-SERVER-UNIT :SEND-IN-COMMAND-CONDITION-ENVIRONMENT)

(:METHOD FS:NFILE-SERVER-UNIT :WAIT-FOR-COMMAND):  (P.C. = 65)
   Arg 0 (SELF): #<NFILE-SERVER-UNIT 17675615>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:NFILE-SERVER-UNIT -- 15. IV's, 0. FL's 104167041>
   Arg 2 (OPERATION): :WAIT-FOR-COMMAND
   Arg 3 (TID-CONS-ARGS): ("T2389" :OPEN "Open" #<NFILE-DATA-CHANNEL I2385 17704123>)
   Local 4 (DATA-CHANNEL): #<NFILE-DATA-CHANNEL I2385 17704123>
   Local 5 (COMMAND-TID): "T2389"
   Local 6 (COMMAND-NAME): :OPEN
   Local 7 (WHOSTATE): "Open"
   Local 8 (RESPONSE-ARGS): ("DAT" (:PATHNAME ">etzi>lispm-init.lisp.81") "%DISK-ERROR-DEVICE-CHECK during a %DCW-WRITE32 on unit 1.,
  Irrecoverable disk error,
  4. pending transfers associated with this disk event aborted.
Word 0 of file header, record #o70441 of partition 1
/(File partition in FEP1:>lmfs.file.1)
")
   Local 9 (RESPONSE-NAME): :ERROR

(:METHOD FS:NFILE-SERVER-UNIT :SEND-AND-WAIT-FOR-COMMAND):  (P.C. = 40)
   Arg 0 (SELF): #<NFILE-SERVER-UNIT 17675615>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:NFILE-SERVER-UNIT -- 15. IV's, 0. FL's 104167041>
   Arg 2 (OPERATION): :SEND-AND-WAIT-FOR-COMMAND
   Arg 3 (DATA): (:OPEN "Open" #<NFILE-DATA-CHANNEL I2385 17704123> "I2385" ">etzi>lispm-init.lisp.NEWEST" :INPUT :DEFAULT)

(:METHOD FS:NFILE-SERVER-UNIT :SEND-IN-COMMAND-CONDITION-ENVIRONMENT):  (P.C. = 54)
   Arg 0 (SELF): #<NFILE-SERVER-UNIT 17675615>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:NFILE-SERVER-UNIT -- 15. IV's, 0. FL's 104167041>
   Arg 2 (OPERATION): :SEND-IN-COMMAND-CONDITION-ENVIRONMENT
   Arg 3 (MESSAGE): :SEND-AND-WAIT-FOR-COMMAND
   Arg 4 (DATA): (:OPEN "Open" #<NFILE-DATA-CHANNEL I2385 17704123> "I2385" ">etzi>lispm-init.lisp.NEWEST" :INPUT :DEFAULT)

(:METHOD FS:NFILE-SERVER-UNIT :COMMAND):  (P.C. = 7)
   Arg 0 (SELF): #<NFILE-SERVER-UNIT 17675615>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:NFILE-SERVER-UNIT -- 15. IV's, 0. FL's 104167041>
   Arg 2 (OPERATION): :COMMAND
   Rest arg (DATA): (:OPEN "Open" #<NFILE-DATA-CHANNEL I2385 17704123> "I2385" ">etzi>lispm-init.lisp.NEWEST" :INPUT :DEFAULT)

FS:NFILE-KEYWORD-LIST-CALLER:  (P.C. = 165)
   Arg 0 (INSTANCE): #<NFILE-SERVER-UNIT 17675615>
   Arg 1 (CMDNAME): :OPEN
   Arg 2 (WHOSTATE): "Open"
   Arg 3 (DATA-CHANNEL): #<NFILE-DATA-CHANNEL I2385 17704123>
   Arg 4 (CONSTANT-ARGS): ("I2385" ">etzi>lispm-init.lisp.NEWEST" :INPUT :DEFAULT)
   Local 4 (CONSTANT-ARGS): NIL
   Arg 5 (KEYWORD-VALUE-PAIRS): (:BYTE-SIZE NIL :DELETED NIL :RAW NIL :SUPER-IMAGE NIL :PRESERVE-DATES NIL ...)
   Local 5 (KEYWORD-VALUE-PAIRS): NIL

(:METHOD FS:NFILE-ACCESS-PATH :OPEN):  (P.C. = 375)
   Arg 0 (SELF): #<LMFS-NFILE-ACCESS-PATH AP6 using NEW-FILE 17675516>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:NFILE-ACCESS-PATH -- 4. IV's, 2. FL's 121346410>
   Arg 2 (OPERATION): :OPEN
   Arg 3 (REAL-PATHNAME): #<LMFS-PATHNAME "AP6:>etzi>lispm-init.lisp">
   Arg 4 (COMMAND-PATHNAME): #<LMFS-PATHNAME "AP6:>etzi>lispm-init.lisp">
   Rest arg: (:DIRECTION :INPUT :CHARACTERS :DEFAULT)

(:METHOD FS:ACTIVE-PATHNAME-MIXIN :OPEN):  (P.C. = 14)
   Arg 0 (SELF): #<LMFS-PATHNAME "AP6:>etzi>lispm-init.lisp">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:ACTIVE-PATHNAME-MIXIN -- 1. IV's, 0. FL's 104225115>
   Arg 2 (OPERATION): :OPEN
   Arg 3 (PATHNAME): #<LMFS-PATHNAME "AP6:>etzi>lispm-init.lisp">
   Rest arg (OPTIONS): (:DIRECTION :INPUT :CHARACTERS :DEFAULT)

FS:COMMON-LISP-OPEN:  (P.C. = 450)
   Arg 0 (PATHNAME): #<LMFS-PATHNAME "AP6:>etzi>lispm-init.lisp">
   Arg 1 (KEYWORD-ARGS): (:CHARACTERS :DEFAULT)

OPEN:  (P.C. = 257)
   Arg 0 (PATHNAME): #<LMFS-PATHNAME "AP6:>etzi>lispm-init.lisp">
   Rest arg (KEYWORD-ARGS): (:CHARACTERS :DEFAULT)

FS:LOAD-OPEN:  (P.C. = 122)
   Arg 0 (PATHNAME): #<LMFS-PATHNAME "AP6:>etzi>lispm-init">
   Arg 1 (NONEXISTENT-OK-FLAG): NIL
   Arg 2 (DONT-SET-DEFAULT-P): T

LOGIN:  (P.C. = 564)
   Arg 0 (USER-NAME): "etzi"
   Local 0 (USER-NAME): "etzi"
   Rest arg: (:HOST #<LISPM-HOST APIARY-6 1401244> :LOAD-INIT-FILE T)

(:PROPERTY SI:COM-LOGIN SI:CP-FUNCTION):  (P.C. = 22)
   Arg 0 (USER): "etzi"
   Arg 1 (HOST): #<LISPM-HOST APIARY-6 1401244>
   Arg 2 (INIT-FILE): :DEFAULT-INIT-FILE

SI:COM-LOGIN:  (P.C. = 24)
   Arg 0 (USER): "etzi"
   Rest arg: (:HOST #<LISPM-HOST APIARY-6 1401244>)

SI:*EVAL:  (P.C. = 403)
   Arg 0 (FORM): (SI:COM-LOGIN "etzi" :HOST #<LISPM-HOST APIARY-6 1401244>)
   Local 0 (FORM): NIL
   --Defaulted args:--
   Arg 1 (ENV): NIL
   Arg 2 (HOOK): NIL

(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0):  (P.C. = 152)
   Arg 0 (.LEXICAL-ENVIRONMENT-POINTER.): #<DTP-LOCATIVE 500101>

TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
   Arg 0 (NEW-MODE): :BLAST
   Arg 1 (STREAM): #:TERMINAL-IO-SYN-STREAM
   Arg 2 (CONTINUATION): #<LEXICAL-CLOSURE (:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0) 500106>

SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
   Arg 0 (NAME): "Lisp Top Level"
   Arg 1 (ABORT-FUNCTION): NIL
   Arg 2 (READ-FUNCTION): NIL
   Arg 3 (EVAL-FUNCTION): NIL
   Arg 4 (PRINT-FUNCTION): NIL

SI:LISP-COMMAND-LOOP:  (P.C. = 67)
   Arg 0: #<LISP-LISTENER Lisp Listener 1 43200216 exposed>
   Rest arg: (:NAME "Lisp Top Level")

SI:LISP-TOP-LEVEL1:  (P.C. = 5)
   Arg 0 (STREAM): #<LISP-LISTENER Lisp Listener 1 43200216 exposed>

SI:LISP-TOP-LEVEL2:  (P.C. = 5)

SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
   Arg 0 (IGNORE): NIL
3-Jul-85 21:01:49-EDT,1330;000000000000    
Received: from MIT-GOLDILOCKS by MIT-OZ via Chaosnet; 27 Jun 85 10:10-EDT
Received: from MIT-SPEECH by GOLDILOCKS via CHAOS with CHAOS-MAIL id 2505; Thu 27-Jun-85 10:08:49-EDT
Received: from YOGI by GOLDILOCKS via CHAOS with CHAOS-MAIL id 2504; Thu 27-Jun-85 10:08:19-EDT
Date: Thursday, 27 June 1985, 10:08-EDT
From: David H. Kaufman <Sr.Kaufman at MIT-SPEECH>
Subject: ap6 file server lossage.
To: BUG-LISPM at MIT-SPEECH
In-Reply-To: <"850627095128.2.etzi@APIARY-6"@APIARY-3>
Message-ID: <850627100826.1.QUX@YOGI.MIT>

    Date: Thu, 27 Jun 85 09:51 EDT
    From:  <etzi@APIARY-6>

    >>Error: %DISK-ERROR-DEVICE-CHECK during a %DCW-WRITE32 on unit 1.,
	       Irrecoverable disk error,
	       4. pending transfers associated with this disk event aborted.
	     Word 0 of file header, record #o70441 of partition 1
	     (File partition in FEP1:>lmfs.file.1)
	     For AP6:>etzi>lispm-init.lisp.81
    While in the function (:METHOD FS:NFILE-SERVER-UNIT :WAIT-FOR-COMMAND)  (:METHOD FS:NFILE-SERVER-UNIT :SEND-AND-WAIT-FOR-COMMAND)  (:METHOD FS:NFILE-SERVER-UNIT :SEND-IN-COMMAND-CONDITION-ENVIRONMENT)

We got one of these on Grizzly (a user machine) about a week ago.  Funny
thing is, Goldilocks (our file server) had no idea anything was wrong.
It hasn't happened again since.  Network problems?
3-Jul-85 21:01:49-EDT,2804;000000000000
Received: from MIT-REAGAN by MIT-OZ via Chaosnet; 27 Jun 85 20:37-EDT
Date: Thu, 27 Jun 85 20:35 EDT
From: Alan@MIT-MC
Sender: File-Server@MIT-REAGAN
Subject: I don't know aht mailing list to send this too.
To: BUG-LISPM@OZ
Message-ID: <850627203554.6.FILE-SERVER@MIT-REAGAN>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, Mailer 43.0, AISite 9.4,
microcode TMC5-MIC 319, Network-Security patch,
Update-Internet-Namespace patch, Server-Finger patch, on Lisp Machine Ronald Reagan:

Seems like the most natural thing in the world to want to do after doing
TAPE:CARRY-DUMP is TAPE:CARRY-LIST.  But this always seems to happen if
I do that.  I'm using the cart tape on Reagan, dumping files from the
filesystem on Reagan.

>>Error: Hard tape error: FEP/Command error: 1101_16. (Bus turn timeout)
While in the function (:METHOD TAPE:CART-TAPE-STREAM-MIXIN :COMMAND)  (:DEFUN-METHOD TAPE:CART-READ-STATUS)  (:METHOD TAPE:CART-TAPE-STREAM-MIXIN :REWIND)

(:METHOD TAPE:CART-TAPE-STREAM-MIXIN :COMMAND):  (P.C. = 33)
   Arg 0 (SELF): #<CART-INPUT-STREAM 12472077>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TAPE:CART-TAPE-STREAM-MIXIN -- 17. IV's, 0. FL's 142762734>
   Arg 2 (OPERATION): :COMMAND
   Arg 3 (CODE): 0.
   --Defaulted args:--
   Arg 4 (IGNORE-ERROR): NIL

(:DEFUN-METHOD TAPE:CART-READ-STATUS):  (P.C. = 5)
   Arg 0 (SELF): #<CART-INPUT-STREAM 12472077>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TAPE:CART-TAPE-STREAM-MIXIN -- 17. IV's, 0. FL's 142762734>

(:METHOD TAPE:CART-TAPE-STREAM-MIXIN :REWIND):  (P.C. = 26)
   Arg 0 (SELF): #<CART-INPUT-STREAM 12472077>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TAPE:CART-TAPE-STREAM-MIXIN -- 17. IV's, 0. FL's 142762734>
   Arg 2 (OPERATION): :REWIND

(:METHOD TAPE:CART-INPUT-STREAM :COMBINED :REWIND):  (P.C. = 20)
   Arg 0 (SELF): #<CART-INPUT-STREAM 12472077>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TAPE:CART-INPUT-STREAM -- 3. IV's, 6. FL's 142763000>
   Arg 2 (.OPERATION.): :REWIND
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

TAPE:CARRY-LIST:  (P.C. = 66)
   Rest arg: NIL

SI:*EVAL:  (P.C. = 403)
   Arg 0 (FORM): (TAPE:CARRY-LIST)
   Local 0 (FORM): NIL
   --Defaulted args:--
   Arg 1 (ENV): NIL
   Arg 2 (HOOK): NIL

(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0.):  (P.C. = 152)
   Arg 0 (.LEXICAL-ENVIRONMENT-POINTER.): #<DTP-LOCATIVE 500101>

TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
   Arg 0 (NEW-MODE): :BLAST
   Arg 1 (STREAM): #:TERMINAL-IO-SYN-STREAM
   Arg 2 (CONTINUATION): #<LEXICAL-CLOSURE (:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0.) 500106>

Rest of stack:
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
SI:LISP-COMMAND-LOOP:  (P.C. = 67)
SI:LISP-TOP-LEVEL1:  (P.C. = 5)
SI:LISP-TOP-LEVEL2:  (P.C. = 5)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
3-Jul-85 21:01:49-EDT,2705;000000000000    
Received: from MIT-MC by MIT-OZ via Chaosnet; 27 Jun 85 23:41-EDT
Received: from MIT-REAGAN.ARPA by MIT-MC.ARPA via Chaosnet; 27 JUN 85  23:33:37 EDT
Received: from APIARY-4 by MIT-REAGAN via CHAOS with CHAOS-MAIL id 5725; Thu 27-Jun-85 16:30:13-EDT
Date: Thu, 27 Jun 85 16:29 EDT
From: Randy Parker <PARKER@MIT-AI.ARPA>
Subject: Bogus user host name
To: bug-lispm@MIT-REAGAN.ARPA
Message-ID: <850627162948.8.PARKER@APIARY-4>

In Symbolics 3600 in Release 6.0, IP-TCP 29.0, AISite 9.4,
microcode TMC5-MIC 319, FEP 18 on Lisp Machine Apiary-4:

<<This was sent to bug-lispm@reagan to see if it would cause the from to
read PARKER@MIT-AI, the bug that is being reported.>>

In checking to see if mail to me at REAGAN would win (a Show Mailing
List said it would (I didn't have a dir there, nor a mailbox), so I take
it it gets it from the namespace entry), I sent a message from Zmail on
ap4 to: parker@reagan (with my mail-network-host set to REAGAN).

This first message below is what I received on OZ.
Now I don't exist at AI (although I have a namespace entry there under a
different name), so it shouldn't say From: PARKER@MIT-AI.  The second
message was just a confirmation from COMSAT that things are indeed in a
bad way.

CJL has noticed this, too, and thinks it may only happen when sending
mail to Internet hosts.

RP

********************************************************************************
Received: from MIT-REAGAN by MIT-OZ via Chaosnet; 27 Jun 85 13:05-EDT
Received: from APIARY-4 by MIT-REAGAN via CHAOS with CHAOS-MAIL id 5704; Thu 27-Jun-85 13:03:36-EDT
Date: Thu, 27 Jun 85 13:03 EDT
From: Randy Parker <PARKER@MIT-AI.ARPA>
Subject: testing....
To: parker@MIT-REAGAN.ARPA
Message-ID: <850627130318.6.PARKER@APIARY-4>

********************************************************************************
Received: from MIT-AI by MIT-OZ via Chaosnet; 27 Jun 85 13:06-EDT
Date: Thu, 27 Jun 85 13:07:16 EDT
From: Communications Satellite <COMSAT%MIT-AI.ARPA@MIT-MC.ARPA>
Subject: Msg of Thursday, 27 June 1985 13:07-EDT
To: PARKER@MIT-OZ
Message-ID: <[MIT-AI.ARPA].2344.850627>

============ A copy of your message is being returned, because: ============
"PARKER" at MIT-AI.ARPA is an unknown recipient.
	Will try sending to the file "USERS3;PARKER MAIL".
============ Failed message follows: ============
Received: from MIT-OZ by MIT-AI.ARPA via Chaosnet; 27 JUN 85  13:07:14 EDT
Date: Thu 27 Jun 85 13:06:39-EDT
From: Randy Parker <PARKER@MIT-OZ>
Subject: testing...
To: parker@MIT-AI


Reagan just put PARKER@AI on one of my letters so I
am checking to see whether this somehow wins or whether it
is just broken.
-------
3-Jul-85 21:01:49-EDT,1493;000000000000 
Received: from MIT-GOLDILOCKS by MIT-OZ via Chaosnet; 28 Jun 85 09:50-EDT
Received: from KOALA by GOLDILOCKS via CHAOS with CHAOS-MAIL id 2514; Fri 28-Jun-85 09:48:40-EDT
Date: Fri, 28 Jun 85 09:48 EDT
From: Robert Kassel <rob@MIT-GOLDILOCKS.ARPA>
Subject: si:*princase*
To: BUG-LISPM@MIT-GOLDILOCKS.ARPA
Message-ID: <850628094822.1.ROB@KOALA.MIT>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, Spire-Macros 5.1,
Attribute 5.6, Compute 5.4, Audio 4.0, Speech-Attributes 4.3,
Display 6.18, Speech-Layouts 6.4, Prtout 4.0, Versatec 5.0, Spire 16.0,
ZOO 6.12, ZOO-SPIRE 2.1, microcode TMC5-MIC 319, on Lisp Machine Koala:


I'm not 100% sure if my diagnosis is correct, but here goes...

Recently I had the pleasure (?) of loading a distibution tape of SPIRE
at another site.  Everything is going fine until we have to load a patch
object file, when we get an error complaining that :|bin| is not a valid
canonical type for the host.  This happened only with patch objects, not
patch sources or other file objects.

Now there's not much I can attribute this odd behavior to.  About the
only thing I can think of is si:*princase*, which may or may not have
been set to :downcase at that time.  

I would look at the sources, but you seem to feel that my knowing how
distribution tapes work might hurt your bussiness.  Too bad it's just
the opposite.


						ROB

BTW: After several months I'm still waiting for replies on two bug
     reports.  What's the deal?

3-Jul-85 21:01:50-EDT,1931;000000000000   
Received: from MIT-REAGAN by MIT-OZ via Chaosnet; 28 Jun 85 11:53-EDT
Received: from SCRC-STONY-BROOK by MIT-REAGAN via INTERNET with SMTP id 5742; 28 Jun 85 11:52:28-EDT
Received: from NEPONSET.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 265147; Fri 28-Jun-85 11:47:14-EDT
Date: Fri, 28 Jun 85 11:51 EDT
From: David C. Plummer in disguise <DCP@SCRC-QUABBIN.ARPA>
Subject: Connections message
To: Randy Parker <PARKER@OZ.mit>, BUG-LISPM@OZ.mit
In-Reply-To: <850623194016.2.PARKER@APIARY-8>
Message-ID: <850628115159.6.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Sun, 23 Jun 85 19:40 EDT
    From: Randy Parker <PARKER@OZ>

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.4,
    microcode TMC5-MIC 319, FEP 18, on Lisp Machine Apiary-8:
    Warm booted from: Peek Frame 3.

    Often, when a connection gets closed unexpectedly, such as a terminal
    connection (in this case due to a warm boot), the message "Attempt to
    <blank> from <connection>, which <blanked>." appears.  However, I have
    noticed that frequently this message is inappropriate or wrong.

    For instance, I had to warm boot with a SUPDUP open to OZ.  After the
    "start", I went to that window with Select-T and saw the old typeout,
    which quickly vanished and was replaced with the above message and an
    opportunity to connect again.  All this is absolutely correct, except
    that the message was about a FINGER connection to OZ.  I have noticed
    this other times, sometimes appearing to put any totally random
    connection in the message.

    I will send you a concrete example and/or a method of generating this if
    I find one.

This is a long outstanding bug where the connection is freed but the
error instance keeps its hands on the connection and therefore uses
obsolete data.  This gets reported every 2 months and I'll fix it when
I get a chance.

3-Jul-85 21:01:50-EDT,649;000000000000 
Received: from MIT-ZERMATT by MIT-OZ via Chaosnet; 28 Jun 85 13:39-EDT
Date: Fri, 28 Jun 85 13:36 EDT
From: Richard E. Zippel <RZ@ZERMATT>
Subject: Zmail buglet
To: BUG-LISPM@OZ
Message-ID: <850628133652.5.RZ@ZERMATT>

In Symbolics 3670 Release 6.0, IP-TCP 29.0, MLSite 7.2, Mailer 43.0,
Imagen Spooler 5.0, Experimental Schema 90.7, microcode TMC5-IO4-MIC 319,
Server-Finger patch, on Zermatt:

If I am in the middle of sending mail (in Zmail), and my cursor is in
the ``Headers'' window, then why I do an Apropos <anything>, the
information is printed in the tiny Headers window instead of in the typeout
window of the main body.  
3-Jul-85 21:01:50-EDT,2219;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 28 Jun 85 14:03-EDT
Received: from SRI-AI.ARPA by MIT-MC.ARPA.ARPA; 28 Jun 85 13:55:44 EDT
Date: Fri, 28 Jun 1985  09:34 PDT
Message-ID: <ZVONA.12122768214.BABYL@SRI-AI>
From: ZVONA@SRI-AI
To:   bug-comsat@mc, bug-lispm@mc
cc:   postmaster@bishop
Subject: [Postmaster: Unable to deliver letter]

Who's violating protocol here?  (Bishop is a 3600.)

Date: Thursday, 27 June 1985, 20:37-PDT
From: Postmaster at SRI-BISHOP
To:   ZVONA
Re:   Unable to deliver letter

Unable to deliver letter to the following recipient:
  fleck at MIT-MC: Unknown response from host MIT-MC: 050 System is being debugged -- proceed with caution! (expecting 220).

----- Text of letter follows -----
Received: from SONORA by SRI-BISHOP via CHAOS with CHAOS-MAIL id 1415; Thu 27-Jun-85 13:57:40-PDT
Date: Thu, 27 Jun 85 13:58 PDT
From: David Chapman <ZVONA@SRI-AI.ARPA>
Subject: hierarchical planning
To: fleck@MIT-MC.ARPA
Message-ID: <850627135809.1.ZVONA@SONORA.ARPA>

I'm embarassed to admit I'm not sure.  I haven't paid much attention to
hierarchical planning.  

The standard reference is Sacerdoti's ABSTRIPS (AIJ circa 73 -- in my
files (alphabetically)).  However, so far as I remember, the
different levels of hierarchy in ABSTRIPS and NOAH aren't really
different representations.  All that ``hierarchy'' really means there is
that you work on certain types of goals before others.  For example,
first make a plan to get from one end of the building to the other
ignoring the possibility of closed doors; then go back and patch that by
putting in OPEN-DOOR actions as appropriate.  But the same
representation is used for both; you just put off satisfying the
DOOR-OPEN preconditions of PASS-THROUGH-DOORWAY actions until you've
done all the rest of the planning.

So far as I know, no one has ever written a planner that uses genuinely
different representations.  Sucks, doesn't it?  It's one of these things
where everyone thinks hierarchy is understood because Sacerdoti did it,
and they never read it carefully enough to see that he didn't do it at
all. 

However, I haven't done a careful study of this stuff, so I can't be
sure.
3-Jul-85 21:01:50-EDT,2764;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 28 Jun 85 14:54-EDT
Received: from csnet-relay by MIT-MC.ARPA.ARPA; 28 Jun 85 14:52:48 EDT
Received: from btl by csnet-relay.csnet id al06610; 28 Jun 85 14:44 EDT
To: bug-lispm%mit-mc.csnet-relay.csnet@csnet-relay.arpa
From: kwc%sola.btl.csnet@csnet-relay.arpa
Date: Fri, 28 Jun EDT 1985 11:47

To: bug-lispm@mit-mc
Subject: SPIRE distribution tape
--Text follows this line--

    From allegra!mit-eddie!rob@MIT-GOLDILOCKS.ARPA  Fri Jun 28 10:47:33 1985
    Received: from mit-oz by mit-eddie.ARPA (4.12/4.8)  via CHAOS with CHAOS id AA08987; Fri, 28 Jun 85 09:49:24 edt
    Received: from MIT-GOLDILOCKS by MIT-OZ via Chaosnet; 28 Jun 85 09:50-EDT
    Received: from KOALA by GOLDILOCKS via CHAOS with CHAOS-MAIL id 2514; Fri 28-Jun-85 09:48:40-EDT
    Date: Fri, 28 Jun 85 09:48 EDT
    From: Robert Kassel <allegra!mit-eddie!rob@MIT-GOLDILOCKS.ARPA>
    Subject: si:*princase*
    To: BUG-LISPM@MIT-GOLDILOCKS.ARPA
    Message-Id: <850628094822.1.ROB@KOALA.MIT>
    
    In Symbolics 3600 Release 6.0, IP-TCP 29.0, Spire-Macros 5.1,
    Attribute 5.6, Compute 5.4, Audio 4.0, Speech-Attributes 4.3,
    Display 6.18, Speech-Layouts 6.4, Prtout 4.0, Versatec 5.0, Spire 16.0,
    ZOO 6.12, ZOO-SPIRE 2.1, microcode TMC5-MIC 319, on Lisp Machine Koala:
    
    
    I'm not 100% sure if my diagnosis is correct, but here goes...
    
    Recently I had the pleasure (?) of loading a distibution tape of SPIRE
    at another site.  Everything is going fine until we have to load a patch
    object file, when we get an error complaining that :|bin| is not a valid
    canonical type for the host.  This happened only with patch objects, not
    patch sources or other file objects.
    
    Now there's not much I can attribute this odd behavior to.  About the
    only thing I can think of is si:*princase*, which may or may not have
    been set to :downcase at that time.  
    
    I would look at the sources, but you seem to feel that my knowing how
    distribution tapes work might hurt your bussiness.  Too bad it's just
    the opposite.
    
    
						    ROB
    
    BTW: After several months I'm still waiting for replies on two bug
	 reports.  What's the deal?
   
I loaded the SPIRE tape recently and found the :|bin| problem.  I was
able to get by it by resuming each time I got the error and telling it
to use :BIN instead.

We also tried to make a distribution tape yesterday and found lots of
problems with files whose logical pathnames pointed to unix files
and used fancy translation rules to get around the differences between
unix files and logical files.  I wasn't there at the time, so I can't
generate a very good report.

- ken
3-Jul-85 21:01:51-EDT,1969;000000000000
Received: from MIT-GOLDILOCKS by MIT-OZ via Chaosnet; 28 Jun 85 16:08-EDT
Received: from MIT-SPEECH by GOLDILOCKS via CHAOS with CHAOS-MAIL id 2518; Fri 28-Jun-85 16:07:14-EDT
Received: from SCRC-STONY-BROOK.ARPA (scrc-stony-brook.arpa.ARPA) by MIT-HTVAX.ARPA (4.12/4.7) 
	id AA28230; Fri, 28 Jun 85 16:02:51 edt
Received: from NEPONSET.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 265358; Fri 28-Jun-85 15:58:12-EDT
Date: Fri, 28 Jun 85 16:03 EDT
From: David C. Plummer in disguise <DCP@SCRC-QUABBIN.ARPA>
Subject: ap6 file server lossage.
To: David H. Kaufman <Sr.Kaufman%MIT-SPEECH@MIT-HTVAX.ARPA>,
        BUG-LISPM%MIT-SPEECH@MIT-HTVAX.ARPA
In-Reply-To: <850627100826.1.QUX@YOGI.MIT>
Message-Id: <850628160301.2.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Thursday, 27 June 1985, 10:08-EDT
    From: David H. Kaufman <Sr.Kaufman%MIT-SPEECH@MIT-HTVAX.ARPA>

	Date: Thu, 27 Jun 85 09:51 EDT
	From:  <etzi@APIARY-6>

	>>Error: %DISK-ERROR-DEVICE-CHECK during a %DCW-WRITE32 on unit 1.,
		   Irrecoverable disk error,
		   4. pending transfers associated with this disk event aborted.
		 Word 0 of file header, record #o70441 of partition 1
		 (File partition in FEP1:>lmfs.file.1)
		 For AP6:>etzi>lispm-init.lisp.81
	While in the function (:METHOD FS:NFILE-SERVER-UNIT :WAIT-FOR-COMMAND)  (:METHOD FS:NFILE-SERVER-UNIT :SEND-AND-WAIT-FOR-COMMAND)  (:METHOD FS:NFILE-SERVER-UNIT :SEND-IN-COMMAND-CONDITION-ENVIRONMENT)

    We got one of these on Grizzly (a user machine) about a week ago.  Funny
    thing is, Goldilocks (our file server) had no idea anything was wrong.
    It hasn't happened again since.  Network problems?

If this is an Eagle, it could be the sign of a small power glitch.
About a year ago there was a power glitch that took down all the DEC
machines (VAXen, PDP-11s).  All the 3600s kept on running(!), but all
the Eagles decided to device-check themselves (for good reason).

3-Jul-85 21:01:51-EDT,6263;000000000000 
Received: from MIT-REAGAN by MIT-OZ via Chaosnet; 28 Jun 85 16:43-EDT
Received: from APIARY-9 by MIT-REAGAN via CHAOS with CHAOS-MAIL id 5754; Fri 28-Jun-85 16:42:54-EDT
Date: Fri, 28 Jun 85 16:42 EDT
From: Randy Parker <PARKER@OZ>
Subject: FS Edit VMS root bug
To: BUG-LISPM@OZ
Message-ID: <850628164249.7.PARKER@APIARY-9>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.4,
microcode TMC5-MIC 319, on Lisp Machine Apiary-9:

Clicked right on Tree Edit Root in FSEdit and entered "Pig" (a VMS host).

<<This may have already been reported previously.>>

>>Trap: The first argument given to the AR-1 instruction, :ROOT, was not an array.
While in the function FS:NUMERIC-P  FS:VMS-ROOT-P  (:METHOD FS:VMS-PATHNAME-MIXIN :FIXUP-DIRECTORY-SPEC)

FS:NUMERIC-P:  (P.C. = 21)
   Arg 0 (STRING): :ROOT
   Arg 1 (PARTIAL-OK): T
   Arg 2 (SIGN-OK): NIL
   Arg 3 (LEADING-ZERO-OK): T
   Local 4 (I): 0
   Local 5 (LEN): 4
   Local 6 (NUM): NIL
   Local 7 (SIGN): 1
   Local 8 (CH): NIL

FS:VMS-ROOT-P:  (P.C. = 33)
   Arg 0 (DIR): :ROOT

(:METHOD FS:VMS-PATHNAME-MIXIN :FIXUP-DIRECTORY-SPEC):  (P.C. = 3)
   Arg 0 (SELF): #<VMS-PATHNAME "PIG:DEV:[FOO]FOO.LSP">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:VMS-PATHNAME-MIXIN -- 1. IV's, 0. FL's 105216331>
   Arg 2 (OPERATION): :FIXUP-DIRECTORY-SPEC
   Arg 3 (DIR): :ROOT

(:METHOD FS:TENEX-FAMILY-PATHNAME-MIXIN :PARSE-DIRECTORY-SPEC):  (P.C. = 55)
   Arg 0 (SELF): #<VMS-PATHNAME "PIG:DEV:[FOO]FOO.LSP">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:TENEX-FAMILY-PATHNAME-MIXIN -- 6. IV's, 1. FL's 105216343>
   Arg 2 (OPERATION): :PARSE-DIRECTORY-SPEC
   Arg 3 (SPEC): :ROOT

FS:MAKE-PATHNAME-1:  (P.C. = 502)
   Arg 0 (ACTOR): #<VMS-PATHNAME "PIG:DEV:[FOO]FOO.LSP">
   Rest arg (OPTIONS): (:DEFAULT-HOST #<VMS-HOST PYGMALION 1400350> :DEFAULT-DEVICE "DEV" :DEFAULT-DIRECTORY ("FOO") :DEFAULT-NAME "FOO" :DEFAULT-TYPE "LSP" ...)

(:METHOD FS:PATHNAME :NEW-PATHNAME):  (P.C. = 22)
   Arg 0 (SELF): #<VMS-PATHNAME "PIG:DEV:[FOO]FOO.LSP">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:PATHNAME -- 8. IV's, 1. FL's 105216320>
   Arg 2 (OPERATION): :NEW-PATHNAME
   Rest arg (OPTIONS): (:DIRECTORY :ROOT)

(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 67)
   Arg 0 (SELF): #<VMS-PATHNAME "PIG:DEV:[FOO]FOO.LSP">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:PATHNAME -- 8. IV's, 1. FL's 105216320>
   Arg 2 (.OPERATION.): :NEW-PATHNAME
   Rest arg (.DAEMON-CALLER-ARGS.): (:DIRECTORY :ROOT)

(:METHOD FS:PATHNAME :NEW-DIRECTORY):  (P.C. = 6)
   Arg 0 (SELF): #<VMS-PATHNAME "PIG:DEV:[FOO]FOO.LSP">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:PATHNAME -- 8. IV's, 1. FL's 105216320>
   Arg 2 (OPERATION): :NEW-DIRECTORY
   Arg 3 (NEW-DIRECTORY): :ROOT

(:METHOD TV:HIERARCHICAL-ROOT-TOPNODE :DEFAULT-MATCH-PATHNAME):  (P.C. = 6)
   Arg 0 (SELF): #<HIERARCHICAL-ROOT-TOPNODE 37354167>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:HIERARCHICAL-ROOT-TOPNODE -- 5. IV's, 2. FL's 143347715>
   Arg 2 (OPERATION): :DEFAULT-MATCH-PATHNAME
   Rest arg (IGNORE): NIL

(:METHOD TV:HIERARCHICAL-ROOT-TOPNODE :COMBINED :DEFAULT-MATCH-PATHNAME):  (P.C. = 10)
   Arg 0 (SELF): #<HIERARCHICAL-ROOT-TOPNODE 37354167>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:HIERARCHICAL-ROOT-TOPNODE -- 5. IV's, 2. FL's 143347715>
   Arg 2 (.OPERATION.): :DEFAULT-MATCH-PATHNAME
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

(:METHOD TV:DIRECTORY-TREE :AFTER :INIT):  (P.C. = 101)
   Arg 0 (SELF): #<HIERARCHICAL-ROOT-TOPNODE 37354167>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:DIRECTORY-TREE -- 9. IV's, 1. FL's 143347674>
   Arg 2 (OPERATION): :INIT
   Arg 3 (IGNORE): #<DTP-LOCATIVE 44140170>

(:METHOD TV:HIERARCHICAL-ROOT-TOPNODE :COMBINED :INIT):  (P.C. = 12)
   Arg 0 (SELF): #<HIERARCHICAL-ROOT-TOPNODE 37354167>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:HIERARCHICAL-ROOT-TOPNODE -- 5. IV's, 2. FL's 143347715>
   Arg 2 (.OPERATION.): :INIT
   Rest arg (.DAEMON-CALLER-ARGS.): (#<DTP-LOCATIVE 44140170>)

INSTANTIATE-FLAVOR:  (P.C. = 445)
   Arg 0 (FLAVOR-NAME): TV:HIERARCHICAL-ROOT-TOPNODE
   Arg 1 (INIT-PLIST): #<DTP-LOCATIVE 44140170>
   Arg 2 (SEND-INIT-MESSAGE-P): :MAYBE
   --Defaulted args:--
   Arg 3 (RETURN-UNHANDLED-KEYWORDS-P): NIL
   Arg 4 (AREA-TO-CONS-INSTANCE-IN): NIL

MAKE-INSTANCE:  (P.C. = 6)
   Arg 0 (FLAVOR-NAME): TV:HIERARCHICAL-ROOT-TOPNODE
   Rest arg (INIT-OPTIONS): (:SAMPLE-PATH #<VMS-PATHNAME "PIG:DEV:[FOO]FOO.LSP">)

TV:FILE-SYSTEM-EDIT:  (P.C. = 22)
   Arg 0 (WINDOW): #<FSMAINT-HIERED-PANE Fsmaint Hiered Pane 1 43234672 exposed>
   Arg 1 (PATH): #<VMS-PATHNAME "PIG:DEV:[FOO]FOO.LSP">
   Arg 2 (ROOT-P): T
   Rest arg (OPTIONS): (:SAMPLE-PATH #<VMS-PATHNAME "PIG:DEV:[FOO]FOO.LSP">)

(:METHOD LMFS:FSMAINT-FRAME :HIERED-ROOT):  (P.C. = 14)
   Arg 0 (SELF): #<FSMAINT-FRAME Fsmaint Frame 1 43234143 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor LMFS:FSMAINT-FRAME -- 11. IV's, 13. FL's 142306073>
   Arg 2 (OPERATION): :HIERED-ROOT
   Arg 3 (HOST): #<VMS-HOST PYGMALION 1400350>

(:METHOD LMFS:FSMAINT-FRAME :EXECUTE):  (P.C. = 63)
   Arg 0 (SELF): #<FSMAINT-FRAME Fsmaint Frame 1 43234143 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor LMFS:FSMAINT-FRAME -- 11. IV's, 13. FL's 142306073>
   Arg 2 (OPERATION): :EXECUTE
   Arg 3 (KEY): :TREE-EDIT-ANY-ROOT

(:METHOD LMFS:FSMAINT-FRAME :INTERPRET-INPUT):  (P.C. = 150)
   Arg 0 (SELF): #<FSMAINT-FRAME Fsmaint Frame 1 43234143 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor LMFS:FSMAINT-FRAME -- 11. IV's, 13. FL's 142306073>
   Arg 2 (OPERATION): :INTERPRET-INPUT
   Arg 3 (INPUT): (:MENU (NIL :VALUE :TREE-EDIT-ANY-ROOT) 4 #<COMMAND-MENU-PANE Command Menu Pane 3 43234370 exposed>)

(:METHOD LMFS:FSMAINT-FRAME :FSMAINT-TOP-LEVEL):  (P.C. = 60)
   Arg 0 (SELF): #<FSMAINT-FRAME Fsmaint Frame 1 43234143 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor LMFS:FSMAINT-FRAME -- 11. IV's, 13. FL's 142306073>
   Arg 2 (OPERATION): :FSMAINT-TOP-LEVEL

LMFS:FSMAINT-TOP-LEVEL:  (P.C. = 6)
   Arg 0: #<FSMAINT-FRAME Fsmaint Frame 1 43234143 exposed>

SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
   --Defaulted args:--
   Arg 0 (IGNORE): NIL
3-Jul-85 21:01:51-EDT,1688;000000000000 
Received: from MIT-MC by MIT-OZ via Chaosnet; 28 Jun 85 17:50-EDT
Received: from SRI-BISHOP.ARPA by MIT-MC.ARPA.ARPA; 28 Jun 85 17:50:07 EDT
Received: from SONORA by SRI-BISHOP via CHAOS with CHAOS-MAIL id 1457; Fri 28-Jun-85 14:49:31-PDT
Date: Fri, 28 Jun 85 14:50 PDT
From: David Chapman <ZVONA@SRI-AI.ARPA>
Subject: lexical scoping still broken?
To: BUG-LISPM@MIT-MC.ARPA
Message-ID: <850628145006.4.ZVONA@SONORA.ARPA>

In Symbolics 3600 Release 6.0, Experimental SRI-SITE-OPTIONS 7.9,
Experimental LOCAL-PATCHES 2.11, IP-TCP 29.0, microcode TMC5-MIC 319,
FEP 22, on Sonora:
(SI:FULL-GC :SYSTEM-RELEASE T)'s since release of system: 2
(SI:FULL-GC :GC-COMPILED-FUNCTIONS T)'s since release of system: 1

Think I reported a couple bugs like this some months ago.  (I'm not
hacking environments, so this can't be my bug, right?) Either you fixed
it or I eventually figured out how to get around it, I forget which.
Are we behind on patches here, or is it still broken?  If the latter, do
you know what tickles the bug so I can work around it?

BTW, tail recursion would be nice.

>>Trap: The argument given to the ZETALISP-SYSTEM:%FETCH-FREEVAR-N instruction, NIL, was not a locative, or a list.
While in the function (:INTERNAL (:INTERNAL DECLOBBER-LOOP 0) 0)  CONTINUE-PLANNING  ACHIEVE-SIMPLY!

(:INTERNAL (:INTERNAL DECLOBBER-LOOP 0) 0):  (P.C. = 16)
   Arg 0 (.LEXICAL-ENVIRONMENT-POINTER.): (NIL #<INPUT-SITUATION #<PUTON A B Z-287>>
                                           #<Proposition (NOT (ON A Z-287))>
                                           #<Proposition (ON A Z-287)>)

CONTINUE-PLANNING:  (P.C. = 11)  (from B:>Zvona>tweak)

...

3-Jul-85 21:01:52-EDT,1490;000000000000    
Received: from MIT-REAGAN by MIT-OZ via Chaosnet; 28 Jun 85 20:59-EDT
Received: from SCRC-STONY-BROOK by MIT-REAGAN via INTERNET with SMTP id 5758; 28 Jun 85 20:58:49-EDT
Received: from EUPHRATES.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 265578; Fri 28-Jun-85 20:53:26-EDT
Date: Fri, 28 Jun 85 20:57 EDT
From: David A. Moon <Moon@SCRC-STONY-BROOK.ARPA>
Subject: CANNOT LIST ARCHIVE DEVICE
To: David Vinayak Wallace <Gumby@MIT-MC.ARPA>
cc: BUG-LISPM@OZ.mit
In-Reply-To: <850627005938.1.GUMBY@MOON>
Message-ID: <850628205758.8.MOON@EUPHRATES.SCRC.Symbolics.COM>

    Date: Thu, 27 Jun 85 00:59 EDT
    From: David Vinayak Wallace <Gumby@MIT-MC>

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.4,
    microcode TMC5-MIC 319, on Lisp Machine Keith Moon:

    Trying to list MC:ARC:GUMBY;* * (c-U c-X D) gives the above error.

The message comes from the ITS file server; not a Lisp machine problem.
This comment appears in the source of the ITS file server:

;The following might be nice, but the directory format of archives is evidently
;not 100% compatible since we get an MPV trying to look at the descriptors.
;So we give an error if we try to take the directory of an archive.

Evidently the archive device doesn't follow the proper protocol when one reads
its binary directory.

    But I can read MC:ARC:GUMBY;.FILE. (DIR) jest fine.  What gives?

You're reading the ascii directory, not the binary one, right?

3-Jul-85 21:01:52-EDT,3468;000000000000 
Received: from MIT-MC by MIT-OZ via Chaosnet; 28 Jun 85 22:05-EDT
Received: from SCRC-STONY-BROOK.ARPA by MIT-MC.ARPA.ARPA; 28 Jun 85 22:05:33 EDT
Received: from NEPONSET.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 265619; Fri 28-Jun-85 21:59:08-EDT
Date: Fri, 28 Jun 85 22:03 EDT
From: David C. Plummer in disguise <DCP@SCRC-QUABBIN.ARPA>
Subject: si:*princase*
To: kwc%sola.btl.csnet@CSNET-RELAY.ARPA, rob@MIT-GOLDILOCKS.ARPA
cc: bug-lispm@MIT-MC.ARPA
In-Reply-To: The message of 28 Jun 85 11:47-EDT from kwc%sola.btl.csnet@csnet-relay.arpa
Message-ID: <850628220358.9.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Fri, 28 Jun EDT 1985 11:47
    From: kwc%sola.btl.csnet@csnet-relay.arpa
    To: bug-lispm@mit-mc
    Subject: SPIRE distribution tape

	Date: Fri, 28 Jun 85 09:48 EDT
	From: Robert Kassel <allegra!mit-eddie!rob@MIT-GOLDILOCKS.ARPA>
    
	In Symbolics 3600 Release 6.0, IP-TCP 29.0, Spire-Macros 5.1,
	Attribute 5.6, Compute 5.4, Audio 4.0, Speech-Attributes 4.3,
	Display 6.18, Speech-Layouts 6.4, Prtout 4.0, Versatec 5.0, Spire 16.0,
	ZOO 6.12, ZOO-SPIRE 2.1, microcode TMC5-MIC 319, on Lisp Machine Koala:
    
    
	I'm not 100% sure if my diagnosis is correct, but here goes...
    
	Recently I had the pleasure (?) of loading a distibution tape of SPIRE
	at another site.  Everything is going fine until we have to load a patch
	object file, when we get an error complaining that :|bin| is not a valid
	canonical type for the host.  This happened only with patch objects, not
	patch sources or other file objects.
    
	Now there's not much I can attribute this odd behavior to.  About the
	only thing I can think of is si:*princase*, which may or may not have
	been set to :downcase at that time.  
    
	I would look at the sources, but you seem to feel that my knowing how
	distribution tapes work might hurt your bussiness.  Too bad it's just
	the opposite.
    
    
							ROB
    
	BTW: After several months I'm still waiting for replies on two bug
	     reports.  What's the deal?
   
    I loaded the SPIRE tape recently and found the :|bin| problem.  I was
    able to get by it by resuming each time I got the error and telling it
    to use :BIN instead.

    We also tried to make a distribution tape yesterday and found lots of
    problems with files whose logical pathnames pointed to unix files
    and used fancy translation rules to get around the differences between
    unix files and logical files.  I wasn't there at the time, so I can't
    generate a very good report.

BUG-LispM is not the place to be discussing this.  This is a bug in the
Spire distribution, not with Lisp Machine software provided by Symbolics
(module the acknowledgement below).  The logical pathname problem is
again a Spire distribution problem.  We suggest EVERYBODY who ships
software offsite do QA on their distribution techniques.  Symbolics may
have some written guidelines and/or some people to talk to help, since
we have a large amount of experience shipping software to a diverse
community.  I've BCC'ed a few people who can correct me or offer
assistance.

We acknowledge a poor interaction with various global variables (e.g.,
si:*princase*) and their effect on various subsystems (e.g., the
distribution dumper).  We are discussing general solutions so that such
interactions will be harder to accidentally trip over in the future.

3-Jul-85 21:01:52-EDT,2215;000000000000    
Received: from MIT-MC by MIT-OZ via Chaosnet; 28 Jun 85 22:17-EDT
Received: from SCRC-STONY-BROOK.ARPA by MIT-MC.ARPA.ARPA; 28 Jun 85 22:16:58 EDT
Received: from NEPONSET.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 265623; Fri 28-Jun-85 22:10:37-EDT
Date: Fri, 28 Jun 85 22:15 EDT
From: David C. Plummer in disguise <DCP@SCRC-QUABBIN.ARPA>
Subject: lexical scoping still broken?
To: David Chapman <ZVONA@SRI-AI.ARPA>, BUG-LISPM@MIT-MC.ARPA
In-Reply-To: <850628145006.4.ZVONA@SONORA.ARPA>
Message-ID: <850628221531.1.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Fri, 28 Jun 85 14:50 PDT
    From: David Chapman <ZVONA@SRI-AI.ARPA>

    In Symbolics 3600 Release 6.0, Experimental SRI-SITE-OPTIONS 7.9,
    Experimental LOCAL-PATCHES 2.11, IP-TCP 29.0, microcode TMC5-MIC 319,
    FEP 22, on Sonora:
    (SI:FULL-GC :SYSTEM-RELEASE T)'s since release of system: 2
    (SI:FULL-GC :GC-COMPILED-FUNCTIONS T)'s since release of system: 1

    Think I reported a couple bugs like this some months ago.  (I'm not
    hacking environments, so this can't be my bug, right?) Either you fixed
    it or I eventually figured out how to get around it, I forget which.
    Are we behind on patches here, or is it still broken?  If the latter, do
    you know what tickles the bug so I can work around it?

Is it possible to provide a test case.  There have been a variety of
lexical scoping bugs fixed since 6.0.

    BTW, tail recursion would be nice.

Any particular reason?  A fully functional debugger (e.g., full call
history) and tail recursion are incompatible in a stack oriented
function calling machine.

    >>Trap: The argument given to the ZETALISP-SYSTEM:%FETCH-FREEVAR-N instruction, NIL, was not a locative, or a list.
    While in the function (:INTERNAL (:INTERNAL DECLOBBER-LOOP 0) 0)  CONTINUE-PLANNING  ACHIEVE-SIMPLY!

    (:INTERNAL (:INTERNAL DECLOBBER-LOOP 0) 0):  (P.C. = 16)
       Arg 0 (.LEXICAL-ENVIRONMENT-POINTER.): (NIL #<INPUT-SITUATION #<PUTON A B Z-287>>
					       #<Proposition (NOT (ON A Z-287))>
					       #<Proposition (ON A Z-287)>)

    CONTINUE-PLANNING:  (P.C. = 11)  (from B:>Zvona>tweak)

    ...



3-Jul-85 21:01:53-EDT,5011;000000000000   
Received: from MIT-MC by MIT-OZ via Chaosnet; 28 Jun 85 22:17-EDT
Received: from BBNG.ARPA by MIT-MC.ARPA.ARPA; 28 Jun 85 22:17:14 EDT
Date: Fri, 28 Jun 1985  22:15 EDT
Message-ID: <INGRIA.12122873955.BABYL@BBNG.ARPA>
From: INGRIA@BBNG.ARPA
To:   BUG-LISPM@MIT-MC.ARPA
Subject: cl:with-open-file


In Symbolics 3670 Release 6.0, IP-TCP 29.0, BBN 20.1,
microcode TMC5-IO4-MIC 319, FEP 22, on Conger:

cl:with-open-file seems to die if you give it the name of a file that
does not already exist.

I got this error by evaluating the form (SAVEDICT "beluga:>ingria>newertestdict.lisp")

Here is the relevant portion of SAVEDICT, my function that calls
with-open-file:

(defun savedict (&optional (newfilename "irus:irus;noscdict.lisp"))
...
      (with-open-file (*dict-stream* newfilename
				     :direction :output
				     :if-exists :new-version
				     :if-does-not-exist :create)
...))

From the description of the options to open given on pp. 418-422 of the
Common LISP manual, these options should do the right thing.  Or am I
just being dense?

>>Error: The file was not found.
         For BELUGA:>ingria>newertestdict.lisp
While in the function (:METHOD FS:HOST-UNIT :COMMAND)  FS:OPEN-CHAOS  (:METHOD FS:QFILE-ACCESS-PATH :OPEN)

(:METHOD FS:HOST-UNIT :COMMAND):  (P.C. = 236)
   Arg 0 (SELF): #<HOST-UNIT 30711674>
   Arg 1 (SELF-MAPPING-TABLE): FS:HOST-UNIT
   Arg 2 (OPERATION): :COMMAND
   Arg 3 (MARK-P): NIL
   Arg 4 (STREAM-OR-HANDLE): NIL
   Arg 5 (SIMPLE-P): NIL
   Arg 6 (WHOSTATE): #"Probe"
   Rest arg (COMMANDS): (#"OPEN " :PROBE #" " :CHARACTER #"" #"" #"" #"" #"" #"" ...)
   Local 8 (HANDLE): NIL
   Local 9 (STREAM): NIL
   Local 10 (PKT): #<Chaos Packet 7341415>
   Local 11 (SUCCESS): NIL
   Local 12 (STRING): #" ERROR FNF F The file was not found."
   Local 13 (TRANSACTION-ID): #"T2501"
   Local 14 (CREATE-P): NIL
   Local 15 (CONDITION): NIL
   Local 16: T
   Local 17: #<CASE-HANDLER 120711625>
   Local 18: NIL
   Local 19: (#<CASE-HANDLER 120711625>)

FS:OPEN-CHAOS:  (P.C. = 674)
   Arg 0 (ACCESS-PATH): #<LMFS-QFILE-ACCESS-PATH BELUGA using QFILE 30711644>
   Arg 1 (REAL-PATHNAME): #P"BELUGA:>ingria>newertestdict.lisp"
   Arg 2: #P"BELUGA:>ingria>newertestdict.lisp"
   Arg 3 (OPTIONS): (:DIRECTION :PROBE :BYTE-SIZE NIL :CHARACTERS T)

(:METHOD FS:QFILE-ACCESS-PATH :OPEN):  (P.C. = 7)
   Arg 0 (SELF): #<LMFS-QFILE-ACCESS-PATH BELUGA using QFILE 30711644>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:QFILE-ACCESS-PATH -- 4. IV's, 0. FL's 104676437>
   Arg 2 (OPERATION): :OPEN
   Arg 3 (REAL-PATHNAME): #P"BELUGA:>ingria>newertestdict.lisp"
   Arg 4 (PATHNAME): #P"BELUGA:>ingria>newertestdict.lisp"
   Rest arg (OPTIONS): (:DIRECTION :PROBE :BYTE-SIZE NIL :CHARACTERS T)

(:METHOD FS:ACTIVE-PATHNAME-MIXIN :OPEN):  (P.C. = 14)
   Arg 0 (SELF): #P"BELUGA:>ingria>newertestdict.lisp"
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:ACTIVE-PATHNAME-MIXIN -- 1. IV's, 0. FL's 104225115>
   Arg 2 (OPERATION): :OPEN
   Arg 3 (PATHNAME): #P"BELUGA:>ingria>newertestdict.lisp"
   Rest arg (OPTIONS): (:DIRECTION :PROBE :BYTE-SIZE NIL :CHARACTERS T)

FS:COMMON-LISP-OPEN:  (P.C. = 450)
   Arg 0 (PATHNAME): #P"BELUGA:>ingria>newertestdict.lisp"
   Arg 1 (KEYWORD-ARGS): (:CHARACTERS T :BYTE-SIZE NIL :DIRECTION :PROBE)

ZL:OPEN:  (P.C. = 257)
   Arg 0 (PATHNAME): #P"BELUGA:>ingria>newertestdict.lisp"
   Local 0 (PATHNAME): #P"BELUGA:>ingria>newertestdict.lisp"
   Rest arg (KEYWORD-ARGS): (:CHARACTERS T :BYTE-SIZE NIL :DIRECTION :PROBE)

OPEN:  (P.C. = 167)
   Arg 0 (PATHNAME): #P"BELUGA:>ingria>newertestdict.lisp"
   Rest arg (KEYWORD-ARGS): (:DIRECTION :PROBE)

TRUENAME:  (P.C. = 17)
   Arg 0 (X): "beluga:>ingria>newertestdict.lisp"

IRUS:SAVEDICT:  (P.C. = 37)  (from BELUGA:>ingria>noscfns)
   Arg 0 (NEWFILENAME): "beluga:>ingria>newertestdict.lisp"

SI:*EVAL:  (P.C. = 403)
   Arg 0 (FORM): (IRUS:SAVEDICT "beluga:>ingria>newertestdict.lisp")
   Local 0 (FORM): NIL
   --Defaulted args:--
   Arg 1 (ENV): NIL
   Arg 2 (HOOK): NIL

(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0):  (P.C. = 152)
   Arg 0 (.LEXICAL-ENVIRONMENT-POINTER.): #<DTP-LOCATIVE 11300102>

TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
   Arg 0 (NEW-MODE): :BLAST
   Arg 1 (STREAM): #:TERMINAL-IO-SYN-STREAM
   Arg 2 (CONTINUATION): #<LEXICAL-CLOSURE (:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0) 11300107>

SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
   Arg 0 (NAME): #"Common Lisp Top Level"
   Arg 1 (ABORT-FUNCTION): NIL
   Arg 2 (READ-FUNCTION): NIL
   Arg 3 (EVAL-FUNCTION): NIL
   Arg 4 (PRINT-FUNCTION): NIL

SI:LISP-COMMAND-LOOP:  (P.C. = 67)
   Arg 0: #<COMMON-LISP-LISTENER Common Lisp Listener 1 7400602 exposed>
   Rest arg: (:NAME #"Common Lisp Top Level")

SI:COMMON-LISP-TOP-LEVEL:  (P.C. = 46)
   Arg 0 (WINDOW): #<COMMON-LISP-LISTENER Common Lisp Listener 1 7400602 exposed>

SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
   Arg 0 (IGNORE): NIL

3-Jul-85 21:01:53-EDT,2333;000000000000 
Received: from MIT-MC by MIT-OZ via Chaosnet; 28 Jun 85 22:18-EDT
Received: from SCRC-STONY-BROOK.ARPA by MIT-MC.ARPA.ARPA; 28 Jun 85 22:17:25 EDT
Received: from NEPONSET.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 265625; Fri 28-Jun-85 22:11:01-EDT
Date: Fri, 28 Jun 85 22:15 EDT
From: David C. Plummer in disguise <DCP@SCRC-QUABBIN.ARPA>
Subject: lexical scoping still broken?
To: David Chapman <ZVONA@SRI-AI.ARPA>, BUG-LISPM@MIT-MC.ARPA
In-Reply-To: <850628145006.4.ZVONA@SONORA.ARPA>
Supersedes: <850628221531.1.NFEP@NEPONSET.SCRC.Symbolics.COM>
Message-ID: <850628221555.2.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Fri, 28 Jun 85 14:50 PDT
    From: David Chapman <ZVONA@SRI-AI.ARPA>

    In Symbolics 3600 Release 6.0, Experimental SRI-SITE-OPTIONS 7.9,
    Experimental LOCAL-PATCHES 2.11, IP-TCP 29.0, microcode TMC5-MIC 319,
    FEP 22, on Sonora:
    (SI:FULL-GC :SYSTEM-RELEASE T)'s since release of system: 2
    (SI:FULL-GC :GC-COMPILED-FUNCTIONS T)'s since release of system: 1

    Think I reported a couple bugs like this some months ago.  (I'm not
    hacking environments, so this can't be my bug, right?) Either you fixed
    it or I eventually figured out how to get around it, I forget which.
    Are we behind on patches here, or is it still broken?  If the latter, do
    you know what tickles the bug so I can work around it?

Is it possible to provide a test case.  There have been a variety of
lexical scoping bugs fixed since 6.0.

    BTW, tail recursion would be nice.

Any particular reason?  [I have counter examples for the standard
examples.]  A fully functional debugger (e.g., full call history) and
tail recursion are incompatible in a stack oriented function calling
machine.

    >>Trap: The argument given to the ZETALISP-SYSTEM:%FETCH-FREEVAR-N instruction, NIL, was not a locative, or a list.
    While in the function (:INTERNAL (:INTERNAL DECLOBBER-LOOP 0) 0)  CONTINUE-PLANNING  ACHIEVE-SIMPLY!

    (:INTERNAL (:INTERNAL DECLOBBER-LOOP 0) 0):  (P.C. = 16)
       Arg 0 (.LEXICAL-ENVIRONMENT-POINTER.): (NIL #<INPUT-SITUATION #<PUTON A B Z-287>>
					       #<Proposition (NOT (ON A Z-287))>
					       #<Proposition (ON A Z-287)>)

    CONTINUE-PLANNING:  (P.C. = 11)  (from B:>Zvona>tweak)

    ...



3-Jul-85 21:01:53-EDT,1798;000000000000 
Received: from MIT-MC by MIT-OZ via Chaosnet; 28 Jun 85 22:47-EDT
Received: from MIT-OZ by MIT-MC.ARPA via Chaosnet; 28 JUN 85  22:46:29 EDT
Date: Fri, 28 Jun 1985  22:46 EDT
Message-ID: <X.GYRO.12122879535.BABYL@MIT-OZ>
From: X.GYRO%MIT-OZ@MIT-MC.ARPA
To:   "David C. Plummer in disguise" <DCP@SCRC-QUABBIN.ARPA>
Cc:   BUG-LISPM@MIT-MC.ARPA
Subject: lexical scoping still broken?
In-reply-to: Msg of 28 Jun 1985  22:15-EDT from David C. Plummer in disguise <DCP at SCRC-QUABBIN.ARPA>

    Date: Friday, 28 June 1985  22:15-EDT
    From: David C. Plummer in disguise <DCP at SCRC-QUABBIN.ARPA>

        Date: Fri, 28 Jun 85 14:50 PDT
        From: David Chapman <ZVONA@SRI-AI.ARPA>

        BTW, tail recursion would be nice.

    Any particular reason?

Yes.  I, for one, am enamored of the Scheme style of writing iterations using
LABELS.

			    [I have counter examples for the standard
    examples.]  A fully functional debugger (e.g., full call history) and
    tail recursion are incompatible in a stack oriented function calling
    machine.

I'm curious what you consider the standard examples to be, and what your
counterexamples are.

I would be very happy if tail recursion were somehow made to happen only in
the case of the use of LABELS.  This seems to me to combine the best of both
worlds.  Actually, I would be even happier if uses of LABELS for iteration
were open-coded a la Steele's RABBIT.  (To be honest, I haven't checked to see
whether this works already, but if you tell me it does, I'll be so pleased I
won't have time to be embarrassed.)

[RMS, MLY: could this be done in the MIT compiler?  BTW, I turned on
TAIL-RECURSION-FLAG in 99.20 and very quickly had a very dead machine -- you
might want to check this out.]

-- Scott
3-Jul-85 21:01:53-EDT,471;000000000000    
Received: from MIT-APIARY-9 by MIT-OZ via Chaosnet; 28 Jun 85 23:18-EDT
Date: Fri, 28 Jun 85 23:17 EDT
From: David Vinayak Wallace <Gumby@MIT-MC>
Subject: Sage doesn't find the obvios things
To: Bug-lispm@OZ
Message-ID: <850628231758.1.GUMBY@APIARY-9>

In Symbolics 3600 Sage in Release 6.0, IP-TCP 29.0, AISite 9.4,
microcode TMC5-MIC 319, on Lisp Machine Apiary-9:

in the documentation frobber: :find any ... of "ALIST" doesn't produce
ASSOC, ASSQ, etc...
3-Jul-85 21:01:54-EDT,761;000000000000    
Received: from MIT-JIMI by MIT-OZ via Chaosnet; 29 Jun 85 08:14-EDT
Date: Sat, 29 Jun 85 08:14 EDT
From: David Vinayak Wallace <Gumby@MIT-MC>
Subject: more processing in 3600-login
To: Bug-Lispm@OZ
Message-ID: <850629081407.7.GUMBY@JIMI>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.4,
microcode TMC5-MIC 319, on Lisp Machine Jimi Hendrix:

I was making a carry-tape on REAGAN.  I used TERMINAL to get there, so I
am using it remotely vial 3600-LOGIN.  I noticed that it was taking an
unusually long time on some files -- it turned out that REAGAN was in a
more break, but without typing any "**MORE**".  As soon as I typed
something it would continue on its merry way (but leaving the bottom
line of the screen always blank).

david
3-Jul-85 21:01:54-EDT,653;000000000000  
Received: from MIT-JIMI by MIT-OZ via Chaosnet; 29 Jun 85 08:25-EDT
Date: Sat, 29 Jun 85 08:25 EDT
From: David Vinayak Wallace <Gumby@MIT-MC>
Subject: hollerith editor
To: BUG-LISPM@OZ
Message-ID: <850629082525.8.GUMBY@JIMI>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.4,
microcode TMC5-MIC 319, on Lisp Machine Jimi Hendrix:

if I <select>-select some other window (like a TERMINAL) which takes up
the whole screen, and then <function>-S my way back to the
multiple-hollerith-editor, the hollerith display is trashed.

Not a good example.  How will you be able to convince all those fortran
programmers with a demo like that?
3-Jul-85 21:01:54-EDT,343;000000000000  
Received: from MIT-MC by MIT-OZ via Chaosnet; 29 Jun 85 09:22-EDT
Date: Sat, 29 Jun 85 09:22:38 EDT
From: David Vinayak Wallace <GUMBY@MIT-MC.ARPA>
Subject:  Pascal/TEX
To: bug-lispm@MIT-OZ
Message-ID: <[MIT-MC.ARPA].559649.850629.GUMBY>

Do we have Symbolics Pascal?  Has anyone used it to bring TeX up on
the lisp machine?

david
3-Jul-85 21:01:54-EDT,2281;000000000000   
Received: from MIT-GOLDILOCKS by MIT-OZ via Chaosnet; 29 Jun 85 11:48-EDT
Received: from MIT-SPEECH by GOLDILOCKS via CHAOS with CHAOS-MAIL id 2520; Sat 29-Jun-85 11:47:12-EDT
Date: 29 Jun 1985  11:48 EDT (Sat)
Message-ID: <SR.ROB.12123021918.BABYL@MIT-SPEECH>
From: "Robert H. Kassel" <sr.rob@MIT-SPEECH>
To:   bug-lispm@MIT-SPEECH, dccp@scrc-quabbin
Subject: si:*princase*
In-reply-to: Msg of 28 Jun 1985  22:03-EDT from David C. Plummer in disguise <DCP at SCRC-QUABBIN.ARPA>


        I loaded the SPIRE tape recently and found the :|bin| problem.  I was
        able to get by it by resuming each time I got the error and telling it
        to use :BIN instead.

        We also tried to make a distribution tape yesterday and found lots of
        problems with files whose logical pathnames pointed to unix files
        and used fancy translation rules to get around the differences between
        unix files and logical files.  I wasn't there at the time, so I can't
        generate a very good report.

    BUG-LispM is not the place to be discussing this.  This is a bug in the
    Spire distribution, not with Lisp Machine software provided by Symbolics
    (module the acknowledgement below).  The logical pathname problem is
    again a Spire distribution problem.

Did he say he was trying to make a SPIRE distribution tape?  No.  He
simply flamed about unix file names and logical pathnames.  No SPIRE
problem here.  (We recommend making the SPIRE: host a LispM anyway,
just to make installation a little easier.)  Additionally, Bug-lispm IS
the place to be discussing this.  I made a distribution tape in
accordance with the manual's guidelines.  We've made these in previous
releases and they loaded fine.  Now they don't.  I'm not saying it's
NOT something on our side, just that this happened and it MAY be your
problem.  In any event it's something you should know about, for if it
happens once it may happen again and the problem/assumptions we made
should be documented to prevent it. 

    We acknowledge a poor interaction with various global variables (e.g.,
    si:*princase*) and their effect on various subsystems (e.g., the
    distribution dumper).  

So it may be a Symbolics problem after all...  Geeez.
3-Jul-85 21:01:55-EDT,682;000000000000   
Received: from MIT-ROBOT-3 by MIT-OZ via Chaosnet; 29 Jun 85 16:21-EDT
Date: Sat, 29 Jun 85 16:20 EDT
From: Harry L. Voorhees <HLV@OZ>
Subject: VMS File System Bug
To: BUG-LISPM@OZ
Message-ID: <850629162005.1.HLV@ROBOT-3>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.4,
microcode TMC5-MIC 319, FEP 18, on Lisp Machine Robot-3:

Zmacs on the Lisp machine just let me do:

M-X Rename File (From) pig:[hlv]*.*.* (To) pig:[hlv.lispm]*.*.*

which had the most undesirable effect of copying directories as well
as files, and hence wiping out two years of research.
(Once file [hlv]lispm.dir got renamed to [hlv.lispm], all 
files previously renamed were lost.)
3-Jul-85 21:01:55-EDT,1213;000000000000 
Received: from MIT-MC by MIT-OZ via Chaosnet; 29 Jun 85 16:45-EDT
Date: Sat, 29 Jun 85 16:45:46 EDT
From: Glenn S. Burke <GSB@MIT-MC.ARPA>
Subject: VMS File System Bug
To: BUG-LISPM@MIT-OZ
cc: HLV@MIT-OZ, cjl@MIT-OZ
Message-ID: <[MIT-MC.ARPA].559896.850629.GSB>

    Date: Sat, 29 Jun 85 16:20 EDT
    From: Harry L. Voorhees <HLV@OZ>

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 9.4,
    microcode TMC5-MIC 319, FEP 18, on Lisp Machine Robot-3:

    Zmacs on the Lisp machine just let me do:

    M-X Rename File (From) pig:[hlv]*.*.* (To) pig:[hlv.lispm]*.*.*

    which had the most undesirable effect of copying directories as well
    as files, and hence wiping out two years of research.
    (Once file [hlv]lispm.dir got renamed to [hlv.lispm], all 
    files previously renamed were lost.)

Hey man, this is pretty neat.  Look closely, [hlv.lispm] IS the
directory file which it got renamed into.  It's now circular, and
there's no pointer to it from the outside world.

I'm gonna take down pig and run disk-repair later to reclaim all these
files later, unless i hear from someone first.  It probably needs it
anyway.  wonder how much other trash i will uncover?
3-Jul-85 21:01:55-EDT,559;000000000000 
Received: from MIT-MC by MIT-OZ via Chaosnet; 29 Jun 85 20:22-EDT
Date: Sat, 29 Jun 85 20:22:46 EDT
From: Glenn S. Burke <GSB@MIT-MC.ARPA>
Subject: file-system edification
To: hlv@MIT-OZ
cc: bug-lispm@MIT-OZ
Message-ID: <[MIT-MC.ARPA].560037.850629.GSB>

The rename-file function in NIL, which uses whatever "high level" service
VMS provides to do file renaming, permitted me to do such a rename operation
on Corwin just now.  Apparently the RENAME command in DCL does more
checking than anything else.

Guess it's time to repair corwin's disk.
