30-Jan-85 16:00:14-EST,2023;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 30 Jan 85 16:00-EST
Received: from SCRC-ANNISQUAM by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 168994; Wed 30-Jan-85 15:54:40-EST
Date: Wednesday, 30 January 1985, 15:54-EST
From: Doug Dodds <DODDS at SCRC-TENEX>
Subject: >>Error: Bad status line SIDNEY.G.HECHT, TTY14, 22-Jan-85  4:55am
To: GAVAN at MIT-OZ
cc: BUG-LISPM at MIT-OZ, Bug-Zmail at SCRC-STONY-BROOK
In-Reply-To: The message of 30 Jan 85 10:46-EST from Gavan Duffy <GAVAN at MIT-OZ>
Message-ID: <850130155407.8.DODDS@ANNISQUAM.SCRC.Symbolics.COM>

    Date: Wednesday, 30 January 1985, 10:46-EST
    From: Gavan Duffy <GAVAN at MIT-OZ>

    In Symbolics 3600 System 242.356, Hardcopy 20.10,
    Experimental RELATUS 131.226, FEP 22, on Lisp Machine Jim Morrison:

    What does this mean?  This error occured in the zmail-background-process.
    Is the locative causing the error?  How'd it get there?

    >>Error: Bad status line SIDNEY.G.HECHT, TTY14, 22-Jan-85  4:55am
    While in the function ZWEI:PARSE-MSG-NEW-BABYL-STATUS-LINE  (:METHOD ZWEI:BABYL-BUFFER :BEFORE :PARSE-MSG)  (:METHOD ZWEI:BABYL-BUFFER :COMBINED :PARSE-MSG)

Ironically, this problem just happened here a Symbolics a couple of days
ago.  What undoubtedly happened was that a -character, symbol-w, crept
into a message that was in the babyl file being parsed.  If one of these
characters is the last one on a line, save for formfeed or whitespace,
it is interpreted as a message separator.  The blowout came from Zmail
trying to parse the following line as a Babyl message option.

A likely source of these letterbombs is somebody grabbing a chunk of a
Babyl file, using an editor buffer, for inclusion in a message.

What we discovered from this is that Zmail is not even slightly robust
in recovering from bogus separator sequences in mailfiles (for any of
the several mail formats that it parses).  This bug has a high priority
for Release 6.1; it is unfortunately too late for 6.0.
30-Jan-85 16:24:16-EST,1005;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 30 Jan 85 16:24-EST
Date: Wednesday, 30 January 1985, 16:23-EST
From: Gavan Duffy <GAVAN at MIT-OZ>
Subject: >>Error: Bad status line SIDNEY.G.HECHT, TTY14, 22-Jan-85  4:55am
To: DODDS at SCRC-TENEX, GAVAN at MIT-OZ
Cc: BUG-LISPM at MIT-OZ, Bug-Zmail at SCRC-STONY-BROOK
In-reply-to: <850130155407.8.DODDS@ANNISQUAM.SCRC.Symbolics.COM>

    Date: Wednesday, 30 January 1985, 15:54-EST
    From: Doug Dodds <DODDS at SCRC-TENEX>

	Date: Wednesday, 30 January 1985, 10:46-EST
	From: Gavan Duffy <GAVAN at MIT-OZ>

	In Symbolics 3600 System 242.356, Hardcopy 20.10,
	Experimental RELATUS 131.226, FEP 22, on Lisp Machine Jim Morrison:

	What does this mean?  This error occured in the zmail-background-process.
	Is the locative causing the error?  How'd it get there?

    What undoubtedly happened was that a -character, symbol-w, crept
    into a message that was in the babyl file being parsed.  

Actually, from a tops20 sends.txt

31-Jan-85 02:39:48-EST,2706;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 31 Jan 85 02:39-EST
Date: Thursday, 31 January 1985, 02:40-EST
From: David Vinayak Wallace <Gumby at MC>
Subject: AAAAAAGHHHHHHH
To: BUG-LISPM at OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 22, on Lisp Machine Duane Allman:

I tried to M-. a function and........

>>Error: WINDOW-START-BP is not in the interval being displayed
While in the function ZWEI:REDISPLAY  ZWEI:REDISPLAY-ALL-WINDOWS  (:METHOD ZWEI:EDITOR :EDIT)

ZWEI:REDISPLAY:  (P.C. = 1033)
   Arg 0 (WINDOW): #<WINDOW 27307522>
   --Defaulted args:--
   Arg 1 (RECENTER-TYPE): :POINT
   Arg 2 (RC1): NIL
   Arg 3 (RC2): NIL
   Arg 4 (FORCE-TO-COMPLETION-P): NIL
   Local 5 (N-PLINES): 49.
   Local 6 (POINT): ("(defun format-file-to-stream (file stream &optional fresh-stream)" 0. :NORMAL)
   Local 7 (SHEET): #<ZMACS-WINDOW-PANE Zmacs Window Pane 4 1000216 exposed>
   Local 8 (DEGREE): 4.
   Local 9 (POINT-BLINKER): #<RECTANGULAR-BLINKER 1040030>
   Local 10 (INTERVAL): #<FILE-BUFFER "OUTPUT <GUMBY.ATSIGN> PIG:" 27054337>
   Local 11 (START-BP): ("(defun format-file-to-stream (file stream &optional fresh-stream)" 0. :NORMAL)
   Local 12 (NOW): 35425.
   Local 13 (POINT-PLINE): NIL
   Local 14 (LH): 14.
   Local 15 (POINT-LINE): "(defun format-file-to-stream (file stream &optional fresh-stream)"
   Local 16 (POINT-INDEX): 0.
   Local 17 (TOP-LINE): "(defun format-file-to-stream (file stream &optional fresh-stream)"
   Local 18 (TOP-INDEX): 0.
   Local 19 (LAST-BP): ("" 0. :MOVES)
   Local 20 (INITIAL-DEGREE): 4.
   Local 21 (*INTERVAL*-initialization): #<FILE-BUFFER "OUTPUT <GUMBY.ATSIGN> PIG:" 27054337>
   Local 22 (LINE): "(defun format-file-to-stream (file stream &optional fresh-stream)"
   Local 23 (FROM-INDEX): 0.
   Local 24 (TO-INDEX): NIL
   Local 25 (PLINE): 0.
   Local 26 (STOP-LINE): ""

ZWEI:REDISPLAY-ALL-WINDOWS:  (P.C. = 34)
   --Defaulted args:--
   Arg 0 (FORCE-TO-COMPLETION-P): NIL
   Arg 1 (SELECT-P): T

(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 140)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 56044432>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:EDITOR -- 12. IV's, 0. FL's 56044271>
   Arg 2 (OPERATION): :EDIT
   --Defaulted args:--
   Arg 3 (TOP-LEVEL-P): T
   Arg 4 (DESCRIPTION): NIL

(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 41)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 56044432>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:TOP-LEVEL-EDITOR -- 12. IV's, 1. FL's 60246144>
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)

SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
   --Defaulted args:--
   Arg 0 (IGNORE): NIL
31-Jan-85 15:43:49-EST,3390;000000000000
Received: from MIT-HTVAX by MIT-OZ via Chaosnet; 31 Jan 85 15:43-EST
Received: from MIT-JOE-LOUIS by MIT-HTVAX (4.12/4.7) with CHAOS 
	id AA18582; Thu, 31 Jan 85 14:25:42 est
Date: Thursday, 31 January 1985, 14:28-EST
From: Roland Ouellette <Roly@MIT-MC>
Subject: popup menu blowout in peek
To: BUG-LISPM@MIT-OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10, Experimental Boxer 5.4, on Lisp Machine Joe Louis:

I was in peek and moused-right a hilighted thing [something like #<chaos
connection 02029 to minnie-mouse 710389847012374>], and got this error
instead of the menue of interesting things to do, as was promised.  This
is repeatable (at least for me).  Maybe you can tell something from the
attached backtrace.



>>Trap: The function (:DEFUN-METHOD TV:PEEK-CONNECTION-MENU) was called with too many arguments.
While in the function (:DEFUN-METHOD TV:PEEK-CONNECTION-MENU)  TV:PEEK-CONNECTION-MENU  SI:*EVAL

(:DEFUN-METHOD TV:PEEK-CONNECTION-MENU):  (P.C. = 0)
   Arg 0 (SELF): #<PEEK-PANE Peek Pane 1 3641317 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:BASIC-PEEK -- 3. IV's, 0. FL's 12333412>
   Arg 2 (CONN): #<CHAOS-NETWORK CHAOS 10554647>
   Arg 3 (ITEM): #<CHAOS Connection for O2091 to MINNIE-MOUSE 10557250>
   Extraneous Rest Arg: (#<ART-Q-2. 13603052>)

TV:PEEK-CONNECTION-MENU:  (P.C. = 12)
   Rest arg (ARGS): (#<CHAOS-NETWORK CHAOS 10554647> #<CHAOS Connection for O2091 to MINNIE-MOUSE 10557250> #<ART-Q-2. 13603052>)

SI:*EVAL:  (P.C. = 370)
   Arg 0 (FORM): (TV:PEEK-CONNECTION-MENU (QUOTE #<CHAOS-NETWORK CHAOS 10554647>) (QUOTE #<CHAOS Connection for O2091 to MINNIE-MOUSE 10557250>) (QUOTE #<ART-Q-2. 13603052>))

(:METHOD TV:MENU-EXECUTE-MIXIN :EXECUTE):  (P.C. = 53)
   Arg 0 (SELF): #<PEEK-PANE Peek Pane 1 3641317 exposed>
   Arg 1 (SELF-MAPPING-TABLE): TV:MENU-EXECUTE-MIXIN
   Arg 2 (OPERATION): :EXECUTE
   Arg 3 (ITEM): (NIL :EVAL (TV:PEEK-CONNECTION-MENU (QUOTE #<CHAOS-NETWORK CHAOS 10554647>) (QUOTE #<CHAOS Connection for O2091 to MINNIE-MOUSE 10557250>) (QUOTE #<ART-Q-2. 13603052>)) :DOCUMENTATION "Menu of useful things to do to data connection")

(:METHOD TV:ESSENTIAL-SCROLL-MOUSE-MIXIN :MOUSE-CLICK):  (P.C. = 114)
   Arg 0 (SELF): #<PEEK-PANE Peek Pane 1 3641317 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:ESSENTIAL-SCROLL-MOUSE-MIXIN -- 6. IV's, 0. FL's 53245171>
   Arg 2 (OPERATION): :MOUSE-CLICK
   Arg 3 (BUTTON): 32770.
   Arg 4 (X): 341.
   Arg 5 (Y): 107.

(:METHOD TV:PEEK-PANE :COMBINED :MOUSE-CLICK):  (P.C. = 10)
   Arg 0 (SELF): #<PEEK-PANE Peek Pane 1 3641317 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:PEEK-PANE -- 1. IV's, 21. FL's 53245262>
   Rest arg (.DAEMON-CALLER-ARGS.): (:MOUSE-CLICK 32770. 341. 107.)

(:METHOD TV:ESSENTIAL-MOUSE :MOUSE-BUTTONS):  (P.C. = 17)
   Arg 0 (SELF): #<PEEK-PANE Peek Pane 1 3641317 exposed>
   Arg 1 (SELF-MAPPING-TABLE): TV:ESSENTIAL-MOUSE
   Arg 2 (OPERATION): :MOUSE-BUTTONS
   Arg 3 (BD): 4.
   Arg 4 (X): 341.
   Arg 5 (Y): 107.

TV:MOUSE-DEFAULT-HANDLER:  (P.C. = 357)
   Arg 0 (WINDOW): #<PEEK-PANE Peek Pane 1 3641317 exposed>
   Arg 1 (SCROLL-BAR-FLAG): T

Rest of stack:
(:METHOD TV:ESSENTIAL-MOUSE :HANDLE-MOUSE):  (P.C. = 10)
(:METHOD TV:PEEK-PANE :COMBINED :HANDLE-MOUSE):  (P.C. = 10)
TV:MOUSE-OVERSEER:  (P.C. = 101)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
31-Jan-85 20:36:51-EST,1258;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 31 Jan 85 20:36-EST
Received: from SCRC-CONCORD by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 128813; Thu 31-Jan-85 20:36:45-EST
Date: Thu, 31 Jan 85 20:37 EST
From: Bernard S. Greenberg <BSG at SCRC-TENEX>
Subject: popup menu blowout in peek
To: Roly at MIT-MC, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 31 Jan 85 14:28-EST from Roland Ouellette <Roly at MIT-MC>
Message-ID: <850131203749.0.BSG@CONCORD.SCRC.Symbolics.COM>

    Date: Thursday, 31 January 1985, 14:28-EST
    From: Roland Ouellette <Roly@MIT-MC>

    In Symbolics 3600 System 242.356, Hardcopy 20.10, Experimental Boxer 5.4, on Lisp Machine Joe Louis:

    I was in peek and moused-right a hilighted thing [something like #<chaos
    connection 02029 to minnie-mouse 710389847012374>], and got this error
    instead of the menue of interesting things to do, as was promised.  This
    is repeatable (at least for me).  Maybe you can tell something from the
    attached backtrace.



    >>Trap: The function (:DEFUN-METHOD TV:PEEK-CONNECTION-MENU) was called with too many arguments.
    While in the function (:DEFUN-METHOD TV:PEEK-CONNECTION-MENU)  TV:PEEK-CONNECTION-MENU  SI:*EVAL
Fixed in Release 6.
31-Jan-85 22:54:01-EST,3616;000000000000
Received: from MIT-APIARY-3 by MIT-OZ via Chaosnet; 31 Jan 85 22:53-EST
Date: Thursday, 31 January 1985, 22:54-EST
From: Randy Parker <PARKER at MIT-OZ>
Subject: flavor examiner--all methods referring to IV
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 18, on Lisp Machine Apiary-3:

After creating a flavor, I went to the flavor examiner and listed all its instance
variables.   From this list, I clicked left on an IV to get all the methods that
refer to it.  Why did it lose in this manner?

>>Trap: The argument given to the CDR instruction, :METHOD, was not a list, a locative or NIL.
While in the function SI:COMPILED-FUNCTION-DEBUGGING-INFO  SI:FIND-CALLERS-OF-SYMBOLS-IN-COMPILED-FUNCTION  FLAVEX:FIND-IVS-IN-METHOD

SI:COMPILED-FUNCTION-DEBUGGING-INFO:  (P.C. = 6)
   Arg 0 (FUNCTION): (NAMED-LAMBDA ((:METHOD VISISTEP:HISTORY-PANE :DISPLAY) (:FLAVOR VISISTEP:HISTORY-PANE)) (SELF SYS:SELF-MAPPING-TABLE SI:OPERATION) (DECLARE (SYS:INSTANCE-VARIABLES VISISTEP:HISTORY-PANE TV:SCREEN-ARRAY TV:LOCATIONS-PER-LINE TV:OLD-SCREEN-ARRAY TV:BIT-ARRAY TV:NAME TV:LOCK TV:LOCK-COUNT TV:SUPERIOR ...)) (PROGN SELF SYS:SELF-MAPPING-TABLE SI:OPERATION NIL) (SEND SELF (QUOTE :SET-ITEMS) VISISTEP:*HISTORY-STORAGE*) (SEND SELF (QUOTE :PUT-LAST-ITEM-IN-WINDOW)))

SI:FIND-CALLERS-OF-SYMBOLS-IN-COMPILED-FUNCTION:  (P.C. = 173)
   Arg 0 (CALLER): (:METHOD VISISTEP:HISTORY-PANE :DISPLAY)
   Arg 1 (CALLER-FUNCTION): (NAMED-LAMBDA ((:METHOD VISISTEP:HISTORY-PANE :DISPLAY) (:FLAVOR VISISTEP:HISTORY-PANE)) (SELF SYS:SELF-MAPPING-TABLE SI:OPERATION) (DECLARE (SYS:INSTANCE-VARIABLES VISISTEP:HISTORY-PANE TV:SCREEN-ARRAY TV:LOCATIONS-PER-LINE TV:OLD-SCREEN-ARRAY TV:BIT-ARRAY TV:NAME TV:LOCK TV:LOCK-COUNT TV:SUPERIOR ...)) (PROGN SELF SYS:SELF-MAPPING-TABLE SI:OPERATION NIL) (SEND SELF (QUOTE :SET-ITEMS) VISISTEP:*HISTORY-STORAGE*) (SEND SELF (QUOTE :PUT-LAST-ITEM-IN-WINDOW)))

FLAVEX:FIND-IVS-IN-METHOD:  (P.C. = 32)
   Arg 0 (IVS): (TV:BORDERS)
   Arg 1 (SPEC): (:METHOD VISISTEP:HISTORY-PANE :DISPLAY)

(:METHOD FLAVEX:METHOD :GET-IVS-REFERENCED-IN-METHOD):  (P.C. = 6)
   Arg 0 (SELF): #<METHOD (VISISTEP:HISTORY-PANE :PRIMARY :DAEMON :DISPLAY) 30662757>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FLAVEX:METHOD -- 7. IV's, 0. FL's 53132601>
   Arg 2 (OPERATION): :GET-IVS-REFERENCED-IN-METHOD
   Arg 3 (IVS): (TV:BORDERS)

(:METHOD FLAVEX:FLAVOR :GET-METHODS-THAT-REFERENCE-IV):  (P.C. = 32)
   Arg 0 (SELF): #<FLAVOR (VISISTEP:HISTORY-PANE) 30647227>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FLAVEX:FLAVOR -- 16. IV's, 0. FL's 53133056>
   Arg 2 (OPERATION): :GET-METHODS-THAT-REFERENCE-IV
   Arg 3 (IV): TV:BORDERS

(:METHOD FLAVEX:FRAME :GET-METHODS-THAT-REFERENCE-IV):  (P.C. = 6)
   Arg 0 (SELF): #<FRAME Frame 1 2605305 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FLAVEX:FRAME -- 21. IV's, 11. FL's 53523714>
   Arg 2 (OPERATION): :GET-METHODS-THAT-REFERENCE-IV
   Arg 3 (IV): TV:BORDERS
   Arg 4 (FLAVOR): #<FLAVOR (VISISTEP:HISTORY-PANE) 30647227>

SEND:  (P.C. = 6)
   Arg 0 (OBJECT): #<FRAME Frame 1 2605305 exposed>
   Arg 1 (MESSAGE-NAME): :GET-METHODS-THAT-REFERENCE-IV
   Rest arg (ARGUMENTS): (TV:BORDERS #<FLAVOR (VISISTEP:HISTORY-PANE) 30647227>)

SI:*EVAL:  (P.C. = 370)
   Arg 0 (FORM): (SEND (QUOTE #<FRAME Frame 1 2605305 exposed>) (QUOTE :GET-METHODS-THAT-REFERENCE-IV) (QUOTE TV:BORDERS) (QUOTE #<FLAVOR (VISISTEP:HISTORY-PANE) 30647227>))

Rest of stack:
(:METHOD FLAVEX:ITEM :HANDLE-CLICK):  (P.C. = 32)
FLAVEX:FRAME-FUNCTION:  (P.C. = 163)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
 1-Feb-85 00:12:15-EST,433;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 1 Feb 85 00:12-EST
Date: Friday, 1 February 1985, 00:11-EST
From:  <zippy at MIT-MOON>
Subject: Input Editor Missing Commands
To: BUG-LISPM at MIT-OZ
Message-ID: <"850201001114.1.zippy@MOON"@JIMI.MIT>

In Symbolics 3600 Release 6.0 Beta IIc, microcode TMC5-MIC 315, FEP 18, on Lisp Machine Jimi Hendrix:

The input editor still does not have META-C, META-L, META-U from ZMACS.
 1-Feb-85 11:08:03-EST,1318;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 1 Feb 85 11:07-EST
Date: 1 February 1985 11:06-EST
From: Tim McNerney <TIM @ MIT-MC>
Subject:  Telnet lossage
To: BUG-LISPM @ MIT-MC

SYMPTOM:

When TELNETting to a VAX running VMS and using the STEVE editor in NIL, moving
down the left margin of the buffer with c-N causes the cursor to move to the
beginning of the next line BUT ALSO CLEARS THE LINE!

DIAGNOSIS:

NIL optimizes cursor motion in this case by sending CRLFs.  I believe that
the 3600's Virtual Terminal looks at this and does a
       (SEND *TERMINAL-SCREEN* :TYO #\NEWLINE)
This is the wrong thing to do here because it does an implicit :CLEAR-EOL
after moving the cursor.

I realize that this code is also used for simulating a glass tty, but when
simulating a "real terminal" like an Ann Arbor Ambassador, sending a CRLF
should only move the cursor.

NOTE:

This bug report has also been sent to bug-rel6@vx (along with another bug
specific to the Rel. 6 NVT).  Since that mailing list is acting like a
bottomless pit, I am sending it here as well.

P.S.

When simulating a terminal, the overstrike attribute should be appropriately
frobbed to reflect simulated reality.  Also, please reinstate Network-M for
toggling more processing.  Using Network-X is a real pain!
 1-Feb-85 11:16:04-EST,2755;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 1 Feb 85 11:15-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 170309; Fri 1-Feb-85 11:15:17-EST
Date: Friday, 1 February 1985, 11:14-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: flavor examiner--all methods referring to IV
To: Randy Parker <PARKER at MIT-OZ>, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 31 Jan 85 22:54-EST from Randy Parker <PARKER at MIT-OZ>
Message-ID: <850201111412.5.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Thursday, 31 January 1985, 22:54-EST
    From: Randy Parker <PARKER at MIT-OZ>

    In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 18, on Lisp Machine Apiary-3:

    After creating a flavor, I went to the flavor examiner and listed all its instance
    variables.   From this list, I clicked left on an IV to get all the methods that
    refer to it.  Why did it lose in this manner?

In the last frame I include, you will note the substring
"IN-COMPILED-FUNCTION" in the function name, the name of Arg 1
(CALLER-FUNCTION), and it's value, an >interpreted< definition.  The
flavor examiner does not deal well with interpreted functions.  This is
still true in Release 6.  Truthfully, this will probably not get fixed
in the current Flavor Examiner.

    >>Trap: The argument given to the CDR instruction, :METHOD, was not a list, a locative or NIL.
    While in the function SI:COMPILED-FUNCTION-DEBUGGING-INFO  SI:FIND-CALLERS-OF-SYMBOLS-IN-COMPILED-FUNCTION  FLAVEX:FIND-IVS-IN-METHOD

    SI:COMPILED-FUNCTION-DEBUGGING-INFO:  (P.C. = 6)
       Arg 0 (FUNCTION): (NAMED-LAMBDA ((:METHOD VISISTEP:HISTORY-PANE :DISPLAY) (:FLAVOR VISISTEP:HISTORY-PANE)) (SELF SYS:SELF-MAPPING-TABLE SI:OPERATION) (DECLARE (SYS:INSTANCE-VARIABLES VISISTEP:HISTORY-PANE TV:SCREEN-ARRAY TV:LOCATIONS-PER-LINE TV:OLD-SCREEN-ARRAY TV:BIT-ARRAY TV:NAME TV:LOCK TV:LOCK-COUNT TV:SUPERIOR ...)) (PROGN SELF SYS:SELF-MAPPING-TABLE SI:OPERATION NIL) (SEND SELF (QUOTE :SET-ITEMS) VISISTEP:*HISTORY-STORAGE*) (SEND SELF (QUOTE :PUT-LAST-ITEM-IN-WINDOW)))

    SI:FIND-CALLERS-OF-SYMBOLS-IN-COMPILED-FUNCTION:  (P.C. = 173)
       Arg 0 (CALLER): (:METHOD VISISTEP:HISTORY-PANE :DISPLAY)
       Arg 1 (CALLER-FUNCTION): (NAMED-LAMBDA ((:METHOD VISISTEP:HISTORY-PANE :DISPLAY) (:FLAVOR VISISTEP:HISTORY-PANE)) (SELF SYS:SELF-MAPPING-TABLE SI:OPERATION) (DECLARE (SYS:INSTANCE-VARIABLES VISISTEP:HISTORY-PANE TV:SCREEN-ARRAY TV:LOCATIONS-PER-LINE TV:OLD-SCREEN-ARRAY TV:BIT-ARRAY TV:NAME TV:LOCK TV:LOCK-COUNT TV:SUPERIOR ...)) (PROGN SELF SYS:SELF-MAPPING-TABLE SI:OPERATION NIL) (SEND SELF (QUOTE :SET-ITEMS) VISISTEP:*HISTORY-STORAGE*) (SEND SELF (QUOTE :PUT-LAST-ITEM-IN-WINDOW)))

 1-Feb-85 11:19:55-EST,1354;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 1 Feb 85 11:19-EST
Received: from SCRC-PEACE by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 170313; Fri 1-Feb-85 11:19:13-EST
Date: Fri, 1 Feb 85 11:18 EST
From: Charles Hornig <Hornig at SCRC-STONY-BROOK>
Subject: popup menu blowout in peek
To: Roland Ouellette <Roly at MIT-MC>, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 31 Jan 85 14:28-EST from Roland Ouellette <Roly at MIT-MC>
Message-ID: <850201111829.2.HORNIG@PEACE.SCRC.Symbolics.COM>

    Date: Thursday, 31 January 1985, 14:28-EST
    From: Roland Ouellette <Roly@MIT-MC>

    In Symbolics 3600 System 242.356, Hardcopy 20.10, Experimental Boxer 5.4, on Lisp Machine Joe Louis:

    I was in peek and moused-right a hilighted thing [something like #<chaos
    connection 02029 to minnie-mouse 710389847012374>], and got this error
    instead of the menue of interesting things to do, as was promised.  This
    is repeatable (at least for me).  Maybe you can tell something from the
    attached backtrace.

    >>Trap: The function (:DEFUN-METHOD TV:PEEK-CONNECTION-MENU) was called with too many arguments.
    While in the function (:DEFUN-METHOD TV:PEEK-CONNECTION-MENU)  TV:PEEK-CONNECTION-MENU  SI:*EVAL

A known bug in release 5.  Fixed in release 6, and also in the release 5
IP-TCP I believe.
 1-Feb-85 11:57:25-EST,2585;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 1 Feb 85 11:57-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 170362; Fri 1-Feb-85 11:50:27-EST
Date: Fri, 1 Feb 85 11:49 EST
From: David C. Plummer in disguise <DCP@SCRC-QUABBIN.ARPA>
Subject: Telnet lossage
To: Tim McNerney <TIM@MIT-MC.ARPA>, BUG-LISPM@MIT-MC.ARPA
In-Reply-To: The message of 1 Feb 85 11:06-EST from Tim McNerney <TIM at MIT-MC>
Message-ID: <850201114927.4.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: 1 February 1985 11:06-EST
    From: Tim McNerney <TIM @ MIT-MC>

I'm getting very annoyed at people refusing to include bug headers that
show what version of the system they are running.  I remember there
being a bug like this in Rel5 that I thought was fixed, but I don't have
an account on "a VAX running VMS" nor do I know how to run the STEVE
editor, so I can't try it in Rel6.  In addition, you don't say what
terminal you are emulating; I can only assume it is a VT100.  If you ARE
simulating a glass TTY, then the behavior is correct.

    SYMPTOM:

    When TELNETting to a VAX running VMS and using the STEVE editor in NIL, moving
    down the left margin of the buffer with c-N causes the cursor to move to the
    beginning of the next line BUT ALSO CLEARS THE LINE!

    DIAGNOSIS:

    NIL optimizes cursor motion in this case by sending CRLFs.  I believe that
    the 3600's Virtual Terminal looks at this and does a
	   (SEND *TERMINAL-SCREEN* :TYO #\NEWLINE)
    This is the wrong thing to do here because it does an implicit :CLEAR-EOL
    after moving the cursor.

    I realize that this code is also used for simulating a glass tty, but when
    simulating a "real terminal" like an Ann Arbor Ambassador, sending a CRLF
    should only move the cursor.

    NOTE:

    This bug report has also been sent to bug-rel6@vx (along with another bug
    specific to the Rel. 6 NVT).  Since that mailing list is acting like a
    bottomless pit, I am sending it here as well.

We are seeing Bug-Rel6@VX reports.

    P.S.

    When simulating a terminal, the overstrike attribute should be appropriately
    frobbed to reflect simulated reality.
What's reality, and how does it currently differ?  Printing terminals
overstike.  Glass TTYs are printing terminals without the paper.  VT100s
and AAAs do not overstrike.  Unix refuses to be told to overstrike (and
there are kludges to get around this braindeath).
    Also, please reinstate Network-M for
    toggling more processing.  Using Network-X is a real pain!
 1-Feb-85 12:18:02-EST,1396;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 1 Feb 85 12:17-EST
Date: 1 February 1985 12:15-EST
From: Tim McNerney <TIM @ MIT-MC>
Subject:  Terminal lossage
To: DCP @ SCRC-STONY-BROOK
cc: BUG-LISPM @ MIT-MC

Okay, let's try again...

In Release 5.2, System 242.356, on a 3600 named Sid Vicious, in the Terminal
window, using Telnet protocol, and simulating an Ann Arbor Ambassdor...

Since you claim to be unable to use the information in the "symptom" section
below, I refer you to the "diagnosis" section further below.  There you will
find a more detailed analysis of what is probably causing the aforementioned
lossage.  This bug appears in both 5.2 and 6-beta-test-iic.

SYMPTOM:

When TELNETting to a VAX running VMS and using the STEVE editor in NIL, moving
down the left margin of the buffer with c-N causes the cursor to move to the
beginning of the next line BUT ALSO CLEARS THE LINE!

DIAGNOSIS:

NIL optimizes cursor motion in this case by sending CRLFs.  I believe that
the 3600's Virtual Terminal looks at this and does a
       (SEND *TERMINAL-SCREEN* :TYO #\NEWLINE)
This is the wrong thing to do here because it does an implicit :CLEAR-EOL
after moving the cursor.

I realize that this code is also used for simulating a glass tty, but when
simulating a "real terminal" like an Ann Arbor Ambassador, sending a CRLF
should only move the cursor.
 1-Feb-85 14:45:58-EST,358;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 1 Feb 85 14:45-EST
Date: Friday, 1 February 1985, 14:44-EST
From: David Chapman <Zvona at MIT-OZ>
Subject: with-open-file doesn't handle -*-
To: bug-lispm at MIT-OZ

I find it counterintuitive that with-open-file doesn't make the package
and so forth come out right for reads from the stream it creates.
 1-Feb-85 17:24:32-EST,3191;000000000000
Received: from MIT-HTVAX by MIT-OZ via Chaosnet; 1 Feb 85 17:24-EST
Received: from SANCHO-PANZA by MIT-HTVAX (4.12/4.7) with CHAOS 
	id AA26986; Fri, 1 Feb 85 17:12:19 est
Date: Friday, 1 February 1985, 17:11-EST
From: Christopher Eliot <CRE@SANCHO-PANZA>
Subject: Grind top level
To: BUG-LISPM@MIT-OZ
Cc: cre@SANCHO-PANZA

In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 18, on Lisp Machine Sancho Panza:

Grind-top-level is a losing function.
It is seriously lacking in functionality and doesn't always work anyhow.
My current "bug" involves the TERPRI-P argument.  If the argument is non-nil
then the grinder gets confused enough so that things don't line up properly.
For example consider this function:

(defun grind-loser (&optional (terpri-p nil))
  (format t "~&This grinder loses: ")
  (grind-top-level '(defun clause-definer (clause-type)
		      (let ((definer (assq clause-type *description-type-clause-definers*)))
			(when (null definer)
			  (fsignal "~@[While defining ~a ~]Unknown definition clause ~a."
				   *currently-defining* clause-type))
			definer))
		   70 standard-output nil 'si:displaced TERPRI-P))

Call it twice:
   (grind-loser t)
   (grind-loser nil)

Notice that in the output from the second call the second line does not
line up with the first.

I also have some other, general gripes about GRIND-TOP-LEVEL.
(1) There are too many arguments.  It should accept keyword arguments.
(2) I want to be able to control how atoms print.  In particular I often
want it to use PRINC instead of PRIN1.  I think it would be reasonable to
pass in a function to use to print atoms with.  I once hacked up a version
of GRIND-TOP-LEVEL to be able to do this, and used a special function to print
atoms which recognized flavor instances of certain types and (if the stream
supported it) printed and made them be mousable-items.  The result was very
flashy.
(3) The default width of 95 seems crazy to me.  75 would be better
since many printers and terminals have 80 columns.  This matters if the
output is going to a file.  The only place where a bigger width makes sense
is on a 3600 console, but almost any stream which prints onto a 3600 console will
tell grind-top-level some explicit width.
(4) Coping with multiple/variable width fonts would be very difficult I am sure,
but useful.  Multiple-fixed width fonts might not be so hard to deal with.
(5) The TERPRI-P problem prevents me from indenting output.  Actually, I think
that indenting would be a useful feature of windows.  I would like to be able
to do something like this:
	(with-indenting (standard-output 5)
	   ...)
I always want to do this when I am implementing a trace facility in a recursive program.
It would also be nice to have an option or the TRACE function that would set
the left margins so that program output was indented to the same level as trace
output.  I often find that program output obscures trace output.

SUGGESTION: Don't change grind-top-level at all.  Instead implement a
new function (GRIND-OBJECT or whatever) that takes keyword arguments
and behaves properly.  Then let grind-top-level wither away and die.
 1-Feb-85 17:33:10-EST,1262;000000000000
Received: from SANCHO-PANZA by MIT-OZ via Chaosnet; 1 Feb 85 17:33-EST
Date: Friday, 1 February 1985, 17:31-EST
From: Christopher Eliot <CRE at SANCHO-PANZA>
Subject: Fix to Grind Top Level
To: BUG-LISPM at MIT-OZ
Cc: cre at SANCHO-PANZA

In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 18, on Lisp Machine Sancho Panza:

The revised code below seems to fix the problem with grind-top-level
and the TERPRI-P flag.

(DEFUN GRIND-TOP-LEVEL (EXP &OPTIONAL (GRIND-WIDTH NIL)
			(GRIND-REAL-IO STANDARD-OUTPUT)
			(GRIND-UNTYO-P NIL)
			(GRIND-DISPLACED 'DISPLACED)
			(TERPRI-P T)
			(GRIND-NOTIFY-FUN NIL)
			(LOC (NCONS EXP)))
  (IF (NULL GRIND-WIDTH)
      (SETQ GRIND-WIDTH (GRIND-WIDTH-OF-STREAM GRIND-REAL-IO)))
  (AND TERPRI-P (FUNCALL GRIND-REAL-IO ':FRESH-LINE))
  (LET ((GRIND-IO (FUNCTION GRIND-PRINT-IO))
	;; The next two lines have changed.
	;; Previously both GRIND-INDENT and GRIND-HPOS were incorrectly
	;; set to zero no matter what the state of the TERPRI-P flag --CRE
	(GRIND-INDENT (send grind-real-io :read-cursorpos :character))
	(GRIND-HPOS (send grind-real-io :read-cursorpos :character))
	(GRIND-VPOS 0))
     (COND ((LISTP EXP)
	    (GRIND-OPTI-MISER EXP LOC))
	   (T (GRIND-ATOM EXP GRIND-IO LOC)))))
 2-Feb-85 06:44:28-EST,468;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 2 Feb 85 06:44-EST
Date: 2 February 1985 06:42-EST
From: Tim McNerney <TIM @ MIT-MC>
Subject:  Closing Chaos connections in si:halt
To: BUG-LISPM @ MIT-MC

This would be cleaner than just letting the server at the other end
eventually figure out that there is nothing at the other end.  Besides
this would prevent screws caused by braindamaged chaos implementations
like (ahem) your servers which run under VMS.
 2-Feb-85 14:38:32-EST,1202;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 2 Feb 85 14:38-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 170613; Fri 1-Feb-85 17:17:36-EST
Date: Friday, 1 February 1985, 17:15-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: with-open-file doesn't handle -*-
To: David Chapman <Zvona at MIT-OZ>, bug-lispm at MIT-OZ
In-Reply-To: The message of 1 Feb 85 14:44-EST from David Chapman <Zvona at MIT-OZ>
Message-ID: <850201171527.8.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Friday, 1 February 1985, 14:44-EST
    From: David Chapman <Zvona at MIT-OZ>

    I find it counterintuitive that with-open-file doesn't make the package
    and so forth come out right for reads from the stream it creates.

Write a macro called with-open-input-file-binding-attributes or
something that does what you want.  This is of course built on
with-open-file :direction :input, fs:read-attribute-list, progv, and
fs:file-attribute-bindings.  This is documented in STREAMS, section 7.2,
under obsolete names.

with-open-file has a very simple contract: open the file and bind a
variable to the result, and close the file on exit.
 2-Feb-85 14:38:59-EST,1791;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 2 Feb 85 14:38-EST
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 170639; Fri 1-Feb-85 18:23:05-EST
Date: Friday, 1 February 1985, 18:21-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: with-open-file doesn't handle -*-
To: David Chapman <Zvona at MIT-OZ>
cc: bug-lispm at MIT-OZ, bug-lmdoc at SCRC-TENEX
In-Reply-To: The message of 1 Feb 85 14:44-EST from David Chapman <Zvona at MIT-OZ>
Message-ID: <850201182154.4.MOON@EUPHRATES.SCRC.Symbolics.COM>

    Date: Friday, 1 February 1985, 14:44-EST
    From: David Chapman <Zvona at MIT-OZ>

    I find it counterintuitive that with-open-file doesn't make the package
    and so forth come out right for reads from the stream it creates.

You might be opening a file with the intention of reading it some other
way than by calling the READ function, so WITH-OPEN-FILE itself mustn't do that.

If you want to bind the package and so forth there is a standard cliche
involving the functions FS:READ-ATTRIBUTE-LIST, FS:FILE-ATTRIBUTE-BINDINGS,
and PROGV.  BTW in the Release 5 documentation these are documented under
different names, which I think are obsolete.  You can find them in the
section a few pages after WITH-OPEN-FILE.

bug-lispm: Maybe we should introduce a macro that packages up that
standard cliche.

Bug-lmdoc: There should be cross-references from WITH-OPEN-FILE and its
three companion macros, before the table of file-opening options, to
FS:READ-ATTRIBUTE-LIST and FS:FILE-ATTRIBUTE-BINDINGS, or else to that
new macro if we introduce it.

bug-lmdoc: The documentation documents the nonexistent function
FS:FILE-READ-ATTRIBUTE-LIST.  It's actually named FS:READ-ATTRIBUTE-LIST
(in Rel 6 anyway).
 2-Feb-85 19:27:51-EST,418;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 2 Feb 85 19:27-EST
Date: Saturday, 2 February 1985, 19:26-EST
From: David Vinayak Wallace <Gumby at MC>
Subject: Peek is confused about "HELP" highlighting
To: BUG-LISPM at OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 18, on Lisp Machine Jimi Hendrix:

In Peek, the "HELP" button is always illuminated EXCEPT when you type
the help key to selct it!
 2-Feb-85 23:44:55-EST,5799;000000000000
Received: from MIT-DUANE by MIT-OZ via Chaosnet; 2 Feb 85 23:44-EST
Date: Saturday, 2 February 1985, 23:42-EST
From: Scott Wills <SCOTTY at MIT-OZ>
Subject: control stack overflow on lispm's
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 22, on Lisp Machine Duane Allman:

The control stack overflows when I do three or four commands in my program.  To make the error
happen, I load <scotty>use.lisp in the editor and compile the buffer, then load <scotty>bug-version.lisp
and evaluate buffer.  Then function-x to run the program.  Type the left button four times in random
places on the large window and wamo, overflow.  It is very repeatable.  typeing resume several times
makes things okay without further problems.  Also, I got parts of the window system from a different
program <scotty>solo.lisp which is completely different except for the window specification and I'm
told it has a similar problem.


Thanks

Scotty@oz


>>Error: The control stack overflowed.
While in the function TV:%DRAW-STRING-INTERNAL  (:METHOD TV:SCREEN :%DRAW-STRING)  TV:%DRAW-STRING

TV:%DRAW-STRING-INTERNAL:
   Arg 0 (ARRAY): #<ART-1B-1067.-256. 14637546>
   Arg 1 (ALU): 7.
   Arg 2 (X): 154.
   Arg 3 (Y): 58.
   Arg 4 (STRING): "TV"
   Arg 5 (FONT): #<FONT CPTFONT 10664245>
   Arg 6 (INDEX): 0.
   Arg 7 (LIMIT): 2.
   Arg 8 (XLIM): 1065.

(:METHOD TV:SCREEN :%DRAW-STRING):  (P.C. = 26)
   Arg 0 (SELF): #<MAIN-SCREEN Main Screen 3640077 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:SCREEN -- 5. IV's, 1. FL's 53021471>
   Arg 2 (OPERATION): :%DRAW-STRING
   Arg 3 (SHEET): #<BACKGROUND-LISP-INTERACTOR Background Lisp Interactor 3 1005356 exposed>
   Arg 4 (ALU): 7.
   Arg 5 (X): 154.
   Arg 6 (Y): 58.
   Arg 7 (STRING): "TV"
   Arg 8 (FONT): #<FONT CPTFONT 10664245>
   Arg 9 (INDEX): 0.
   Arg 10 (LIMIT): 2.
   Arg 11 (XLIM): 1065.

TV:%DRAW-STRING:  (P.C. = 42)
   Arg 0 (SHEET-OR-ARRAY): #<BACKGROUND-LISP-INTERACTOR Background Lisp Interactor 3 1005356 exposed>
   Arg 1 (ALU): 7.
   Arg 2 (X): 154.
   Arg 3 (Y): 58.
   Arg 4 (STRING): "TV"
   Arg 5 (FONT): #<FONT CPTFONT 10664245>
   Arg 6 (INDEX): 0.
   Arg 7 (LIMIT): 2.
   Arg 8 (XLIM): 1065.

(:METHOD TV:SHEET :STRING-OUT):  (P.C. = 163)
   Arg 0 (SELF): #<BACKGROUND-LISP-INTERACTOR Background Lisp Interactor 3 1005356 exposed>
   Arg 1 (SELF-MAPPING-TABLE): TV:SHEET
   Arg 2 (OPERATION): :STRING-OUT
   Arg 3 (STRING): "TV"
   --Defaulted args:--
   Arg 4 (START): 0.
   Arg 5 (END): NIL

SI:PRINT-RAW-STRING:  (P.C. = 23)
   Arg 0 (STRING): "TV"
   Arg 1 (STREAM): #:TERMINAL-IO-SYN-STREAM
   Arg 2 (FASTP): (:STRING-OUT :LINE-OUT :LISTEN :TYI :TYI-NO-HANG :ANY-TYI :ANY-TYI-NO-HANG :POINT :DRAW-POINT :DRAW-CHAR ...)

SI:PRINT-PNAME-STRING:  (P.C. = 427)
   Arg 0 (SYMBOL): "TV"
   Arg 1 (SLASHIFY-P): T
   Arg 2 (STREAM): #:TERMINAL-IO-SYN-STREAM
   Arg 3 (FASTP): (:STRING-OUT :LINE-OUT :LISTEN :TYI :TYI-NO-HANG :ANY-TYI :ANY-TYI-NO-HANG :POINT :DRAW-POINT :DRAW-CHAR ...)

(:INTERNAL SI:PRINT-PNAME-STRING 0.):  (P.C. = 6)
   Arg 0 (NAME): "TV"
   Arg 1 (IGNORE): 0.
   Arg 2 (INTERNAL): NIL

SI:PKG-PACKAGE-PREFIX:  (P.C. = 153)
   Arg 0 (FUNCTION): #<DTP-COMPILED-FUNCTION (:INTERNAL SI:PRINT-PNAME-STRING 0.) 7055162>
   Arg 1 (TO-PKG): #<Package TV 24240000>
   Arg 2 (FROM-PKG): #<Package USER 21400000>
   Arg 3 (ABBREVIATE-P): T
   Arg 4 (CNT): 0.
   Arg 5 (FLAG): NIL

Rest of stack:
SI:PKG-SYMBOL-PREFIX:  (P.C. = 60)
SI:PRINT-PNAME-STRING:  (P.C. = 27)
SI:PRINT-OBJECT:  (P.C. = 73)
SI:PRINT-LIST:  (P.C. = 32)
SI:PRINT-OBJECT:  (P.C. = 126)
SI:PRINT-LIST:  (P.C. = 32)
SI:PRINT-OBJECT:  (P.C. = 126)
PRIN1:  (P.C. = 10)
DBG:DISPLAY-ARG-VALUE:  (P.C. = 42)
DBG:PRINT-FRAME-ARGS:  (P.C. = 262)
DBG:PRINT-FUNCTION-AND-ARGS:  (P.C. = 213)
DBG:SHOW-FUNCTION-AND-ARGS:  (P.C. = 3)
DBG:SHOW:  (P.C. = 10)
DBG:DEBUGGER-TOP-LEVEL:  (P.C. = 423)
DBG:ENTER-DEBUGGER:  (P.C. = 16)
DBG:DEBUGGER-HANDLER-HANDLE-CONDITION:  (P.C. = 7)
DBG:DEBUGGER-HANDLER:  (P.C. = 12)
(:METHOD CONDITION :SIGNAL):  (P.C. = 114)
(:METHOD CONDITION :COMBINED :SIGNAL):  (P.C. = 21)
SIGNAL:  (P.C. = 10)
SYS:STACK-OVERFLOW:  (P.C. = 16)
COPYLIST:
(:DEFUN-METHOD TV:PARSE-BORDERS-SPEC):  (P.C. = 66)
(:METHOD TV:BORDERS-MIXIN :PARSE-BORDERS-SPEC):  (P.C. = 14)
(:DEFUN-METHOD TV:ADJUST-MARGINS):  (P.C. = 73)
(:METHOD TV:BORDERS-MIXIN :BEFORE :REDEFINE-MARGINS):  (P.C. = 12)
(:METHOD TV:WINDOW :COMBINED :REDEFINE-MARGINS):  (P.C. = 10)
(:METHOD TV:ESSENTIAL-LABEL-MIXIN :SET-LABEL):  (P.C. = 12)
TV:ALLOCATE-BACKGROUND-LISP-INTERACTOR:  (P.C. = 32)
(:METHOD TV:SHEET :NOTICE):  (P.C. = 161)
DBG:DEBUGGER-TOP-LEVEL:  (P.C. = 301)
DBG:ENTER-DEBUGGER:  (P.C. = 16)
DBG:DEBUGGER-HANDLER-HANDLE-CONDITION:  (P.C. = 7)
DBG:DEBUGGER-HANDLER:  (P.C. = 12)
(:METHOD CONDITION :SIGNAL):  (P.C. = 114)
(:METHOD CONDITION :COMBINED :SIGNAL):  (P.C. = 21)
SIGNAL:  (P.C. = 10)
SYS:STACK-OVERFLOW:  (P.C. = 16)
GETL:
(:METHOD CELL :IS-THIS-POINT-IN-YOUR-SPACE?):  (from OZ:OZ:<SCOTTY>CELLBLOCKS)
SEND:  (P.C. = 6)
PICK-CELL:  (from OZ:OZ:<SCOTTY>CELLBLOCKS)
PICK-CELL:  (from OZ:OZ:<SCOTTY>CELLBLOCKS)
PICK-CELL:  (from OZ:OZ:<SCOTTY>CELLBLOCKS)
(:METHOD CELLSPACE-PANE-FLAVOR :MAKE-CELL):  (from OZ:OZ:<SCOTTY>CELLBLOCKS)
SEND:  (P.C. = 6)
SI:*EVAL:  (P.C. = 370)
COND:  (P.C. = 23)
SI:*EVAL:  (P.C. = 421)
LET:  (P.C. = 102)
SI:*EVAL:  (P.C. = 605)
COND:  (P.C. = 23)
SI:*EVAL:  (P.C. = 421)
SI:DO-INTERNAL:  (P.C. = 447)
(:METHOD STATUS-PANE-FLAVOR :PROCESS-TOPLEVEL):  (from OZ:OZ:<SCOTTY>CELLBLOCKS)
SEND:  (P.C. = 6)
SI:*EVAL:  (P.C. = 370)
SI:DO-INTERNAL:  (P.C. = 447)
PROCESS-TOPLEVEL:  (from OZ:OZ:<SCOTTY>CELLBLOCKS)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
 3-Feb-85 04:17:48-EST,784;000000000000
Received: from MIT-MORRISON by MIT-OZ via Chaosnet; 3 Feb 85 04:17-EST
Date: Sunday, 3 February 1985, 04:16-EST
From: jcma@MIT-MC
Subject: Errors
To: BUG-LISPM@MIT-OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10,
Experimental RELATUS 131.249, FEP 22, on Lisp Machine Jim Morrison:

It would be nice if :BUG-REPORT-DESCRIPTION could be sent to an error by a
handler without blowing up due to assumptions about the state of the stack
where it is called.  DBG:*CURRENT-FRAME* was unbound when my handler tried to
get the description of the stack so that a background process could report the
error to implementors.  Presumably that information is not lost until after my
handler gets done it's work, since it could decline and the error would be
signalled as usual.
 3-Feb-85 14:08:14-EST,955;000000000000
Mail-From: X.GYRO created at  3-Feb-85 14:08:09
Date: Sun 3 Feb 85 14:08-EST
From: Scott W. Layson <X.GYRO@MIT-OZ>
Subject: Terminal emulation (re Tim McNerney's message)
To: bug-lispm@MIT-OZ

I once wrote a "roll mode" (LF off the bottom of the screen
goes to the top line, rather than scrolling) terminal emulator.
It was a little tricky to get it right.  I had to maintain a
variable which contained the row number of the current "virtual
bottom of the screen" -- the row which would be at the bottom if
we were scrolling.  When the cursor is on this row, LF clears the
next row, but if the cursor is positioned elsewhere on the screen,
LF does not clear.  Home-and-clear (indeed, if I remember correctly,
anything that invokes clear-to-end-of-window) resets the virtual-
screen-bottom to the last physical row.

I did this for my CP/M system, and it has worked perfectly with
all manner of H19 software.

Hope this helps
  Scott
 3-Feb-85 14:46:21-EST,917;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 3 Feb 85 14:46-EST
Date: Sunday, 3 February 1985, 14:44-EST
From: Scott Cyphers <sr.ehpyc at MIT-SPEECH>
Subject: FLET
To: BUG-LISPM at MIT-OZ
Message-ID: <850203144410.1.CYPHER@MIT-SMOKEY.MIT>

In Symbolics 3670 Release 6.0 Beta IIc, microcode TMC5-IO4-FPA-MIC 315,
FEP 22, on Lisp Machine Smokey:

Suppose I have a function like this:

(defun clip-array (min max array)
  (flet ((clip (arg)
	   (min max (max arg min))))
    (dotimes (i (array-active-length array))
      (setf (aref array i) (clip (aref array i))))))

First, the editor should indent it like that, the way it does defun.

Second, is there any reason why in cases like this the fletted function
can't be open-coded, maybe with a (declare (open-code clip)) or
something?  I know macrolet would work, but having to use a macro seems
like overkill for something as simple as clip.
 3-Feb-85 15:00:36-EST,1127;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 3 Feb 85 15:00-EST
Date: Sunday, 3 February 1985, 14:57-EST
From: Webster Dove <dove at MIT-BUGS-BUNNY>
Subject: undesirable interning
To: BUG-LISPM at MIT-OZ
Message-ID: <850203145751.1.DOVE@TWEETY-PIE.MIT>

In Symbolics 3600 , on Lisp Machine Tweety Pie:

The following form results in the creation of internal symbol "STRT"

(DEFUN FOO (STRT)
  (ARGUMENT-TYPECASE STRT
    (NAMED-OBJECT-NAME) (NODE (NAME! STRT))))
; macro exp expr all
(DEFUN FOO (STRT)
    (PROG
     T
     NIL
     LOOP
     (RETURN-FROM T
                  (COND ((TYPEP STRT 'NAMED-OBJECT-NAME) NIL)
                        ((TYPEP STRT 'NODE)
                         (NAME! STRT))
                        (T
                         (SETQ STRT (DBG:ARGUMENT-TYPECASE-1 'STRT STRT '(NAMED-OBJECT-NAME
                                                                          NODE)))
                         (GO LOOP))))))

This behavior causes me some difficulty with package exporting since it
creates what I would call a "spurios" symbol.  Is there a way to avoid
this?
 3-Feb-85 23:15:28-EST,1446;000000000000
Mail-From: MLY created at  3-Feb-85 23:15:21
Date: Sun 3 Feb 85 23:15:21-EST
From: Your Friendly(*) Marketing Representative <MLY@MIT-OZ>
Subject: Re: FLET
To: bug-lispm@MIT-OZ, sr.ehpyc@MIT-SPEECH
In-Reply-To: Message from "Scott Cyphers <sr.ehpyc at MIT-SPEECH>" of Sun 3 Feb 85 14:46:27-EST

    Date: Sunday, 3 February 1985, 14:44-EST
    From: Scott Cyphers <sr.ehpyc at MIT-SPEECH>

    Suppose I have a function like this:

    (defun clip-array (min max array)
      (flet ((clip (arg)
    	   (min max (max arg min))))
        (dotimes (i (array-active-length array))
          (setf (aref array i) (clip (aref array i))))))

    Second, is there any reason why in cases like this the fletted function
    can't be open-coded, maybe with a (declare (open-code clip)) or
    something?  I know macrolet would work, but having to use a macro seems
    like overkill for something as simple as clip.

(declare (inline ...)) is the commonlisp way of doing this, which seems well-
defined for local functions. Currently neither lisp machine compiler does
anything with this declaration, so you'll just have to macrolet.

CoMmONLisP doesn't have DEFSUBST at all: one is supposed to use
(proclaim '(inline ...), though whether the usage is meant to be

(proclaim '(inline foo))
(defun foo ...)

or

(defun foo ...)
(proclaim '(inline foo))

is something which is not made clear in the manual...
-------
 4-Feb-85 01:06:23-EST,1346;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 4 Feb 85 01:06-EST
Date: Monday, 4 February 1985, 00:57-EST
From: Alan Bawden <Alan at MIT-MC>
Subject: Please stop bothering me about Pointer
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 18, on Lisp Machine Jimi Hendrix:

This still happens when I try to log in to a 3600.  Pointer hasn't
appeared in my namespace entry for quite some time now.

>>Error: The host POINTER cannot be a file computer.
While in the function FS:ADD-FILE-COMPUTER  SI:SET-USER-VARIABLES  LOGIN

FS:ADD-FILE-COMPUTER:  (P.C. = 23)
   Arg 0 (HOST): #<HOST POINTER 15140073>

SI:SET-USER-VARIABLES:  (P.C. = 66)

LOGIN:  (P.C. = 64)
   Arg 0 (USER-NAME): ALAN
   Rest arg: NIL

SI:*EVAL:  (P.C. = 370)
   Arg 0 (FORM): (LOGIN (QUOTE ALAN))

SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 200)
   Rest arg: (:NAME "Lisp Top Level in Lisp Listener 1" :ABORTED-FUNCTION NIL :BEFORE-PROMPT-FUNCTION NIL :READ-FUNCTION NIL :EVAL-FUNCTION NIL ...)

SI:LISP-COMMAND-LOOP:  (P.C. = 115)
   Arg 0 (STREAM): #<LISP-LISTENER Lisp Listener 1 3640000 exposed>
   Rest arg: (:NAME "Lisp Top Level in Lisp Listener 1")

SI:LISP-TOP-LEVEL1:  (P.C. = 22)
   Arg 0 (TERMINAL-IO-initialization): #<LISP-LISTENER Lisp Listener 1 3640000 exposed>

SI:LISP-TOP-LEVEL:  (P.C. = 7)
 4-Feb-85 02:20:34-EST,817;000000000000
Received: from SCRC-TENEX by MIT-OZ via Chaosnet; 4 Feb 85 02:20-EST
Date:  4 Feb 1985 0217-EST
From: David A. Moon <MOON@SCRC-TENEX>
Subject: Re: control stack overflow on lispm's
To: SCOTTY@MIT-OZ
cc: BUG-LISPM@MIT-OZ
In-Reply-To: The message of Saturday, 2 February 1985, 23:42-EST from Scott Wills <SCOTTY at MIT-OZ>

In Release 5 there were some problems with some processes having stacks
that were initially too small.  This will be corrected in Release 6.
In the meantime, running your code compiled instead of interpreted will
decrease its stack consumption and also make it run much faster.  Almost
all program development and debugging tools work at least as well on
compiled code as on interpreted code, so you won't be giving up
anything significant, I think, by running compiled.
-------
 4-Feb-85 08:08:27-EST,1096;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 4 Feb 85 08:08-EST
Date: Monday, 4 February 1985, 08:06-EST
From: Gavan Duffy <GAVAN at MIT-OZ>
Subject: c-sh-a mistakes EVAL-WHEN for a message.
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10,
Experimental RELATUS 131.258, FEP 22, on Lisp Machine Jim Morrison:

;;;; Doing a c-sh-a with the cursor after FOOBAR somehow
;;;; generates a call to ZWEI:METHOD-ARGLIST with the 
;;;; argument LOAD, presumably from the EVAL-WHEN below.
;;;; ZWEI:METHOD-ARGLIST internal seems to walk the entire
;;;; flavor hierarchy starting from SI:VANILLA-FLAVOR.  This
;;;; seems to take a while, so I guess it would be better
;;;; if c-sh-a didn't make such a gross error.

;;;; Of course, if :TEST-MESSAGE is closed, the error doesn't
;;;; occur.  But it's nice not to have to close s-expressions
;;;; in order to get an arglist.

(DEFMETHOD (KERN :TEST-MESSAGE) ()
  (FOOBAR

(EVAL-WHEN (LOAD)
  (DEFINE-RELATUS-MOUSE-SENSITIVE-ITEM-TYPE
    'PROCEDURE 'EDIT-PROCEDURE "Mouse left to edit this procedure."))

 4-Feb-85 09:50:48-EST,1463;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 4 Feb 85 09:50-EST
Received: from SCRC-PEACE by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 171251; Mon 4-Feb-85 09:50:25-EST
Date: Mon, 4 Feb 85 09:48 EST
From: Charles Hornig <Hornig at SCRC-STONY-BROOK>
Subject: Please stop bothering me about Pointer
To: Alan Bawden <Alan at MIT-MC>, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 4 Feb 85 00:57-EST from Alan Bawden <Alan at MIT-MC>
Message-ID: <850204094820.1.HORNIG@PEACE.SCRC.Symbolics.COM>

    Date: Monday, 4 February 1985, 00:57-EST
    From: Alan Bawden <Alan at MIT-MC>

    In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 18, on Lisp Machine Jimi Hendrix:

    This still happens when I try to log in to a 3600.  Pointer hasn't
    appeared in my namespace entry for quite some time now.

    >>Error: The host POINTER cannot be a file computer.
    While in the function FS:ADD-FILE-COMPUTER  SI:SET-USER-VARIABLES  LOGIN

Probably Pointer is cached in the ALAN user object on your machine.  I
know that "Fixed in release 6" is not very helpful.  If you're willing
to save out  new world, you can do:

   (boot the machine)
   (SEND (NET:FIND-OBJECT-NAMED :USER "ALAN") :CHECK-VALIDITY NIL T)
   (SEND (NET:FIND-OBJECT-NAMED :HOST "POINTER") :CHECK-VALIDITY NIL T)
   (DISK-SAVE)

There is some hope that this will correct any misunderstandings between
your machine and the real state of the world.
 4-Feb-85 11:48:18-EST,4166;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 4 Feb 85 11:48-EST
Date: Monday, 4 February 1985, 11:45-EST
From: Webster Dove <dove at MIT-BUGS-BUNNY>
Subject: zwei:install-record-cleanly is undefined
To: BUG-LISPM at MIT-OZ
Message-ID: <850204114549.2.DOVE@TWEETY-PIE.MIT>

In Symbolics 3600 , on Lisp Machine Tweety Pie:

Try getting documentation on anything which has none.

>>Trap: The function ZWEI:INSTALL-RECORD-CLEANLY is undefined.
While in the function SAGE:MAKE-RECORD-FROM-STRING  SAGE:RECORD-FOR-TOPIC&TYPE  (:METHOD SAGE:SOURCE-OF-FORMATTED-SAGE-RECORD-LINES :INIT)

SAGE:MAKE-RECORD-FROM-STRING:  (P.C. = 44)  (from SYS: SAGE; PATCH; BASIC-SAGE-13-20)
   Arg 0 (TOPIC): :DISPLAY-STRING
   Arg 1 (TYPE): SAGE:METHOD
   Arg 2 (SOURCE-DESIGNATOR): SAGE:NO-DOCUMENTATION-AVAILABLE
   Arg 3 (CONTENTS-LIST): (SAGE:@ LIST (SAGE:@ *) "No documentation available for " ":DISPLAY-STRING" (SAGE:@ LIST " as a " "Method"))

SAGE:RECORD-FOR-TOPIC&TYPE:  (P.C. = 143)
   Arg 0 (TOPIC): :DISPLAY-STRING
   Arg 1 (TYPE): SAGE:METHOD
   --Defaulted args:--
   Arg 2 (MONITOR): T

(:METHOD SAGE:SOURCE-OF-FORMATTED-SAGE-RECORD-LINES :INIT):  (P.C. = 24)
   Arg 0 (SELF): #<SOURCE-OF-FORMATTED-SAGE-RECORD-LINES 37732026>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SAGE:SOURCE-OF-FORMATTED-SAGE-RECORD-LINES -- 3. IV's, 1. FL's 105613360>
   Arg 2 (OPERATION): :INIT
   Arg 3 (IGNORE): #<DTP-LOCATIVE 32240405>

INSTANTIATE-FLAVOR:  (P.C. = 445)
   Arg 0 (FLAVOR-NAME): SAGE:SOURCE-OF-FORMATTED-SAGE-RECORD-LINES
   Arg 1 (INIT-PLIST): #<DTP-LOCATIVE 32240405>
   Arg 2 (SEND-INIT-MESSAGE-P): :MAYBE
   --Defaulted args:--
   Arg 3 (RETURN-UNHANDLED-KEYWORDS-P): NIL
   Arg 4 (AREA-TO-CONS-INSTANCE-IN): NIL

MAKE-INSTANCE:  (P.C. = 6)
   Arg 0 (FLAVOR-NAME): SAGE:SOURCE-OF-FORMATTED-SAGE-RECORD-LINES
   Rest arg (INIT-OPTIONS): (:TOPIC :DISPLAY-STRING :TYPE SAGE:METHOD)

SAGE:FORMATTED-SAGE-RECORD-LINE-SOURCE:  (P.C. = 11)
   Arg 0 (TOPIC): :DISPLAY-STRING
   Arg 1 (TYPE): SAGE:METHOD

SAGE:DISPLAY-ON-DEVICE:  (P.C. = 73)
   Arg 0 (DEVICE): #<WINDOW-OUTPUT-DEVICE 37730621>
   Arg 1 (FUNCTION): #<DTP-COMPILED-FUNCTION SAGE:FORMATTED-SAGE-RECORD-LINE-SOURCE 44360001>
   Rest arg (ARGS): (:DISPLAY-STRING SAGE:METHOD)

(:METHOD SAGE:WINDOW-OUTPUT-DEVICE :WITH-DEVICE-PREPARED):  (P.C. = 47)
   Arg 0 (SELF): #<WINDOW-OUTPUT-DEVICE 37730621>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SAGE:WINDOW-OUTPUT-DEVICE -- 11. IV's, 0. FL's 143456706>
   Arg 2 (OPERATION): :WITH-DEVICE-PREPARED
   Arg 3 (FUNCTION): #<DTP-COMPILED-FUNCTION SAGE:DISPLAY-ON-DEVICE 62563152>
   Rest arg (ARGS): (#<DTP-COMPILED-FUNCTION SAGE:FORMATTED-SAGE-RECORD-LINE-SOURCE 44360001> :DISPLAY-STRING SAGE:METHOD)

SAGE:SAGE-DISPLAYER:  (P.C. = 55)
   Arg 0 (DEVICE-TYPE): :SCREEN
   Arg 1 (FUNCTION): #<DTP-COMPILED-FUNCTION SAGE:FORMATTED-SAGE-RECORD-LINE-SOURCE 44360001>
   Rest arg (ARGS): (:DISPLAY-STRING SAGE:METHOD)

ZWEI:SAGE-DISPLAYER-INTERFACE:  (P.C. = 103)
   Arg 0 (SYMBOL-OR-BOTH): :DISPLAY-STRING
   Arg 1 (TYPE): SAGE:METHOD
   --Defaulted args:--
   Arg 2 (DEVICE-TYPE): :SCREEN

ZWEI:COM-SHOW-DOCUMENTATION-FUNCTION:  (P.C. = 66)

ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
   Arg 0 (COMMAND): ZWEI:COM-SHOW-DOCUMENTATION-FUNCTION
   Arg 1 (CHAR): 609
   Arg 2 (PREFIX-CHAR): NIL
   Arg 3 (HOOK-LIST): (ZWEI:SHIFT-LOCK-HOOK)

ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
   Arg 0 (CH): 609

(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 233)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 122771431>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:EDITOR -- 12. IV's, 0. FL's 106267516>
   Arg 2 (OPERATION): :EDIT
   --Defaulted args:--
   Arg 3 (TOP-LEVEL-P): T
   Arg 4 (DESCRIPTION): NIL

(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 60)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 122771431>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:TOP-LEVEL-EDITOR -- 13. IV's, 1. FL's 106267502>
   Arg 2 (.OPERATION.): :EDIT
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 51)

SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
   Arg 0 (IGNORE): NIL
 4-Feb-85 12:18:32-EST,841;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 4 Feb 85 12:18-EST
Received: from SCRC-THAMES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 171400; Mon 4-Feb-85 12:16:46-EST
Date: Monday, 4 February 1985, 12:14-EST
From:  <SWM at SCRC-QUABBIN>
Subject: Peek is confused about "HELP" highlighting
To: Gumby at MIT-MC, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 2 Feb 85 19:26-EST from David Vinayak Wallace <Gumby at MIT-MC>
Message-ID: <"850204121444.9.SWM@QUABBIN"@THAMES.SCRC.Symbolics.COM>

    Date: Saturday, 2 February 1985, 19:26-EST
    From: David Vinayak Wallace <Gumby at MC>

    In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 18, on Lisp Machine Jimi Hendrix:

    In Peek, the "HELP" button is always illuminated EXCEPT when you type
    the help key to selct it!
This is fixed in Rel6.
 4-Feb-85 12:47:31-EST,1003;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 4 Feb 85 12:46-EST
Received: from SCRC-CONCORD by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 171431; Mon 4-Feb-85 12:36:51-EST
Date: Mon, 4 Feb 85 12:37 EST
From: Bernard S. Greenberg <BSG at SCRC-TENEX>
Subject: FLET
To: sr.ehpyc at MIT-SPEECH, BUG-LISPM at MIT-OZ
In-Reply-To: <850203144410.1.CYPHER@MIT-SMOKEY.MIT>
Message-ID: <850204123706.5.BSG@CONCORD.SCRC.Symbolics.COM>

    Date: Sunday, 3 February 1985, 14:44-EST
    From: Scott Cyphers <sr.ehpyc at MIT-SPEECH>

    In Symbolics 3670 Release 6.0 Beta IIc, microcode TMC5-IO4-FPA-MIC 315,
    FEP 22, on Lisp Machine Smokey:

    Suppose I have a function like this:

    (defun clip-array (min max array)
      (flet ((clip (arg)
	       (min max (max arg min))))
	(dotimes (i (array-active-length array))
	  (setf (aref array i) (clip (aref array i))))))

    First, the editor should indent it like that, the way it does defun.
Fixed in "real" Release 6.
 4-Feb-85 13:26:51-EST,1086;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 4 Feb 85 13:26-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 171457; Mon 4-Feb-85 13:04:27-EST
Date: Mon, 4 Feb 85 13:01 EST
From: David C. Plummer in disguise <DCP@SCRC-QUABBIN.ARPA>
Subject: Closing Chaos connections in si:halt
To: Tim McNerney <TIM@MIT-MC.ARPA>, BUG-LISPM@MIT-MC.ARPA
In-Reply-To: The message of 2 Feb 85 06:42-EST from Tim McNerney <TIM at MIT-MC>
Message-ID: <850204130125.0.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: 2 February 1985 06:42-EST
    From: Tim McNerney <TIM @ MIT-MC>

    This would be cleaner than just letting the server at the other end
    eventually figure out that there is nothing at the other end.  

Sorry, that's wrong.  Consider the case where you (si:halt) and poke
around for a short enough time and then type Continue to the FEP.  Maybe
you should type (logout) before you type (si:halt)?

    Besides
    this would prevent screws caused by braindamaged chaos implementations
    like (ahem) your servers which run under VMS.

 4-Feb-85 13:27:45-EST,1003;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 4 Feb 85 13:27-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 171464; Mon 4-Feb-85 13:10:32-EST
Date: Monday, 4 February 1985, 13:07-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: Peek is confused about "HELP" highlighting
To: David Vinayak Wallace <Gumby at MIT-MC>, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 2 Feb 85 19:26-EST from David Vinayak Wallace <Gumby at MIT-MC>
Message-ID: <850204130727.3.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Saturday, 2 February 1985, 19:26-EST
    From: David Vinayak Wallace <Gumby at MC>

    In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 18, on Lisp Machine Jimi Hendrix:

    In Peek, the "HELP" button is always illuminated EXCEPT when you type
    the help key to selct it!

I believe this lossage was fixed somewhere along the way.  It hasn't
happened for many months here, nor have I seen it happen in Rel6.
 4-Feb-85 14:13:27-EST,1696;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 4 Feb 85 14:13-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 171522; Mon 4-Feb-85 13:58:37-EST
Date: Monday, 4 February 1985, 13:55-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: Errors
To: jcma at MIT-MC, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 3 Feb 85 04:16-EST from jcma at MIT-MC
Message-ID: <850204135535.6.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Sunday, 3 February 1985, 04:16-EST
    From: jcma@MIT-MC

    In Symbolics 3600 System 242.356, Hardcopy 20.10,
    Experimental RELATUS 131.249, FEP 22, on Lisp Machine Jim Morrison:

    It would be nice if :BUG-REPORT-DESCRIPTION could be sent to an error by a
    handler without blowing up due to assumptions about the state of the stack
    where it is called.  DBG:*CURRENT-FRAME* was unbound when my handler tried to
    get the description of the stack so that a background process could report the
    error to implementors.  Presumably that information is not lost until after my
    handler gets done it's work, since it could decline and the error would be
    signalled as usual.

As I understand it, :BUG-REPORT-DESCRIPTION is part of the debugger,
while handlers are part of the condition system.  It could quite
possibly slow down the condition system significantly to have it figure
out what the erring frame is.  Perhaps you can find some special (or
perhaps instance variable of the condition) bound to the signalling
frame.  But even then, most of the workhorse of :bug-report-description
is part of the debugger and may still not work as well as you would
like.
 4-Feb-85 14:17:12-EST,1630;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 4 Feb 85 14:17-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 171529; Mon 4-Feb-85 14:02:17-EST
Date: Monday, 4 February 1985, 13:59-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: FLET
To: Scott Cyphers <sr.ehpyc at MIT-SPEECH>, BUG-LISPM at MIT-OZ
In-Reply-To: <850203144410.1.CYPHER@MIT-SMOKEY.MIT>
Message-ID: <850204135915.8.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Sunday, 3 February 1985, 14:44-EST
    From: Scott Cyphers <sr.ehpyc at MIT-SPEECH>

    In Symbolics 3670 Release 6.0 Beta IIc, microcode TMC5-IO4-FPA-MIC 315,
    FEP 22, on Lisp Machine Smokey:

[Sorry if this has already been answered.  I read in my mail a while ago
and just now got around to it.]

    Suppose I have a function like this:

    (defun clip-array (min max array)
      (flet ((clip (arg)
	       (min max (max arg min))))
	(dotimes (i (array-active-length array))
	  (setf (aref array i) (clip (aref array i))))))

    First, the editor should indent it like that, the way it does defun.

Fixed in the real 6.0.

    Second, is there any reason why in cases like this the fletted function
    can't be open-coded, maybe with a (declare (open-code clip)) or
    something?  I know macrolet would work, but having to use a macro seems
    like overkill for something as simple as clip.

Why?  If you want open coding, you should use a macro.  Why is it
overkill?  It's an internal macro that goes away when you exit its
scope?  Think about it for 5 more minutes and convince yourself.
 4-Feb-85 14:19:25-EST,1661;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 4 Feb 85 14:18-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 171532; Mon 4-Feb-85 14:05:43-EST
Date: Monday, 4 February 1985, 14:02-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: undesirable interning
To: Webster Dove <dove at MIT-BUGS-BUNNY>, BUG-LISPM at MIT-OZ
In-Reply-To: <850203145751.1.DOVE@TWEETY-PIE.MIT>
Message-ID: <850204140240.9.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Sunday, 3 February 1985, 14:57-EST
    From: Webster Dove <dove at MIT-BUGS-BUNNY>

    In Symbolics 3600 , on Lisp Machine Tweety Pie:

    The following form results in the creation of internal symbol "STRT"

    (DEFUN FOO (STRT)
      (ARGUMENT-TYPECASE STRT
	(NAMED-OBJECT-NAME) (NODE (NAME! STRT))))
    ; macro exp expr all
    (DEFUN FOO (STRT)
	(PROG
	 T
	 NIL
	 LOOP
	 (RETURN-FROM T
		      (COND ((TYPEP STRT 'NAMED-OBJECT-NAME) NIL)
			    ((TYPEP STRT 'NODE)
			     (NAME! STRT))
			    (T
			     (SETQ STRT (DBG:ARGUMENT-TYPECASE-1 'STRT STRT '(NAMED-OBJECT-NAME
									      NODE)))
			     (GO LOOP))))))

    This behavior causes me some difficulty with package exporting since it
    creates what I would call a "spurios" symbol.  Is there a way to avoid
    this?
Exactly where is the "suprious internal" symbol??  Are you refering to
'STRT.  It has to be there for argument-typecase-1 to work.  And
besides, if you look at the arglist for FOO it will also have that
symbol in it.  I also fail to see how this causes problems with package
exporting unless you are misusing the package system.
 4-Feb-85 14:31:20-EST,2388;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 4 Feb 85 14:31-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 171553; Mon 4-Feb-85 14:22:13-EST
Date: Monday, 4 February 1985, 14:19-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: c-sh-a mistakes EVAL-WHEN for a message.
To: Gavan Duffy <GAVAN at MIT-OZ>, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 4 Feb 85 08:06-EST from Gavan Duffy <GAVAN at MIT-OZ>
Message-ID: <850204141911.3.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Monday, 4 February 1985, 08:06-EST
    From: Gavan Duffy <GAVAN at MIT-OZ>

    In Symbolics 3600 System 242.356, Hardcopy 20.10,
    Experimental RELATUS 131.258, FEP 22, on Lisp Machine Jim Morrison:

    ;;;; Doing a c-sh-a with the cursor after FOOBAR somehow
    ;;;; generates a call to ZWEI:METHOD-ARGLIST with the 
    ;;;; argument LOAD, presumably from the EVAL-WHEN below.
    ;;;; ZWEI:METHOD-ARGLIST internal seems to walk the entire
    ;;;; flavor hierarchy starting from SI:VANILLA-FLAVOR.  This
    ;;;; seems to take a while, so I guess it would be better
    ;;;; if c-sh-a didn't make such a gross error.

In Release 6 it will not make this gross error.  Instead, it will call
zwei:method-arglist on :TEST-MESSAGE like it is supposed to.  This is
because it can't find an arglist for FOOBAR, so it slowly wanders up the
calling sequence and gets DEFMETHOD.  Knowing that if you get to the
function name of DEFMETHOD, that is, the (KERN :TEST-MESSAGE) part, you
know the arglist of DEFMETHOD and are therefore interested in the
arglist of the method.  Ideally, it would stop this heuristic after you
supply the arglist.  (Umm... I guess you might also be interested in the
values so you can supply the correct (DECLARE (VALUES ...)) clause...
Anyway...) There was a bug in early versions of Release 6 (and therefore
Release 5, etc) that caused it to get the wrong message name.  This has
been fixed for Release 6.

    ;;;; Of course, if :TEST-MESSAGE is closed, the error doesn't
    ;;;; occur.  But it's nice not to have to close s-expressions
    ;;;; in order to get an arglist.

    (DEFMETHOD (KERN :TEST-MESSAGE) ()
      (FOOBAR

    (EVAL-WHEN (LOAD)
      (DEFINE-RELATUS-MOUSE-SENSITIVE-ITEM-TYPE
	'PROCEDURE 'EDIT-PROCEDURE "Mouse left to edit this procedure."))

 4-Feb-85 15:01:27-EST,2633;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 4 Feb 85 15:01-EST
Date: Monday, 4 February 1985, 14:57-EST
From: Scott Cyphers <sr.ehpyc at MIT-SPEECH>
Subject: FLET
To: DCP at SCRC-QUABBIN, sr.ehpyc at MIT-SPEECH, BUG-LISPM at MIT-OZ
In-Reply-To: <850204135915.8.NFEP@NEPONSET.SCRC.Symbolics.COM>
Message-ID: <850204145733.1.CYPHER@MIT-SMOKEY.MIT>

    Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 4 Feb 85 14:17-EST
    Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 171529; Mon 4-Feb-85 14:02:17-EST
    Date: Monday, 4 February 1985, 13:59-EST
    From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
    Subject: FLET
    To: Scott Cyphers <sr.ehpyc at MIT-SPEECH>, BUG-LISPM at MIT-OZ
    In-Reply-To: <850203144410.1.CYPHER@MIT-SMOKEY.MIT>
    Message-ID: <850204135915.8.NFEP@NEPONSET.SCRC.Symbolics.COM>

	Second, is there any reason why in cases like this the fletted function
	can't be open-coded, maybe with a (declare (open-code clip)) or
	something?  I know macrolet would work, but having to use a macro seems
	like overkill for something as simple as clip.

    Why?  If you want open coding, you should use a macro.  Why is it
    overkill?  It's an internal macro that goes away when you exit its
    scope?  Think about it for 5 more minutes and convince yourself.

Suppose the funtion were written like this:

(defun clip-array (min max array)
  (dotimes (i (array-active-length array))
    (setf (aref array i) (min max (max min (aref array i))))))

Unless you were used to such things, you'd have to look at it for a few
seconds to figure out what those mins and maxs were doing in this case.
The only reason for using the FLET in this situation is that it
separates the code into a CLIP part and a MAP part, each of which is
independent.  When a macro definition appears and you are trying to
figure out what it is doing, you have to go through and check all the
back quotes and things like that, figuring out who's quoting whom and
what's getting rearranged.  That's what I mean by overkill.  When you
see a macro, you expect certain kinds of things to be being done, and
they're not the kinds of things being done for the open code behavior,
which, in the past, was done with a subst.  By saying it as a function,
you're telling the person trying to understand the code that there's
none of that going on, and that it's just your average every day run of
the mill function that's getting open coded.  For CLIP, the difference
is minor, but for a more complex internal function, the difference would
be significant.
 4-Feb-85 15:15:38-EST,1634;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 4 Feb 85 15:15-EST
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 171629; Mon 4-Feb-85 15:03:55-EST
Date: Monday, 4 February 1985, 15:01-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: Errors
To: jcma at MIT-MC, bug-lmdoc at SCRC-TENEX
cc: BUG-LISPM at MIT-OZ
In-Reply-To: The message of 3 Feb 85 04:16-EST from jcma at MIT-MC
Message-ID: <850204150152.7.MOON@EUPHRATES.SCRC.Symbolics.COM>

    Date: Sunday, 3 February 1985, 04:16-EST
    From: jcma@MIT-MC

    In Symbolics 3600 System 242.356, Hardcopy 20.10,
    Experimental RELATUS 131.249, FEP 22, on Lisp Machine Jim Morrison:

    It would be nice if :BUG-REPORT-DESCRIPTION could be sent to an error by a
    handler without blowing up due to assumptions about the state of the stack
    where it is called.  DBG:*CURRENT-FRAME* was unbound when my handler tried to
    get the description of the stack so that a background process could report the
    error to implementors.  Presumably that information is not lost until after my
    handler gets done it's work, since it could decline and the error would be
    signalled as usual.

dbg:with-erring-frame (which is documented) can help you out here, but unfortunately
the :BUG-REPORT-DESCRIPTION message wasn't really intended to be sent by anyone
but the Debugger.  It's documented so you can define conditions that have their own
methods for it.  It would certainly be a good feature if your condition-bind handler
could do everything the Debugger can do; we should consider this for the future.
 4-Feb-85 15:45:49-EST,4312;000000000000
Received: from MIT-FORD by MIT-OZ via Chaosnet; 4 Feb 85 15:45-EST
Date: Monday, 4 February 1985, 15:44-EST
From: Robert L. Krawitz <ZZZ.RLK at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In System 98.80, CADR 3.10, ZMail 53.19, MIT-Specific 22.5,
microcode 309, ZM MIT gc*2, on Ford Prefect:


Insert your description of the circumstances here:

In profile editor, I was in the editor pane (editing my init file) and I
hit clear screen (for reasons known only to myself) and got this error.
I tried supplying zero and kept getting this error back.

>>TRAP 14072 (ARGTYP NUMBER M-T 1 QIGRP0)
The second argument to >, DELETED, was of the wrong type.
The function expected a number.
Backtrace from the debugger:

(:METHOD WINDOW :REDISPLAY) (P.C. = 1227)
  (SELF is #<ZMAIL-WINDOW Zmail Window 5 3400357 exposed>)

 Arg 0 (OPERATION): :REDISPLAY
 Arg 1 (RECENTER-TYPE): :POINT
 Arg 2 (RC1): NIL
 Arg 3 (RC2): NIL
 Arg 4 (FORCE-TO-COMPLETION-P): NIL
Local 0 (LH): 16
Local 1 (NOW): 14007
Local 2 (POINT-PLINE): NIL
Local 3 (POINT-LINE): "            '(#FS:TOPS20-PATHNAME /"OZ:PS:<COMMON>INFO-NETS.ARCHIVES./" "
Local 4 (POINT-INDEX): 16
Local 5 (TOP-LINE): "(LOGIN-SETQ *PRUNE-HEADERS-AFTER-YANKING* T)"
Local 6 (TOP-INDEX): 0
Local 7 (LAST-BP): ("" 0 :MOVES)
Local 8 (INITIAL-DEGREE): 4
Local 9 (POINT-NODE): NIL
Local 10 (START-BP-NODE): NIL
Local 11 (BUF): NIL
Local 12 (NEW-TOP-INDEX): NIL
Local 13 (Y): NIL
Local 14 (LINE): "(LOGIN-SETQ *NEXT-MIDDLE-MODE* ':NEXT)"
Local 15 (INDEX): NIL
Local 16 (P): NIL
Local 17 (LINE-LENGTH): NIL
Local 18 (LEN): NIL
Local 19 (DWID): NIL
Local 20 (CH): NIL
Local 21 (FONT): NIL
Local 22 (CWT): NIL
Local 23 (CWID): NIL
Local 24 (RWID): NIL
Local 25 (I): 57
Local 26 (TW): 560
Local 27 (L): NIL
Local 28 (FROM-INDEX): 0
Local 29 (TO-INDEX): 46
Local 30 (PLINE): 3
Local 31 (STOP-LINE): ""
Local 32 (FROB): NIL
Local 33 (PLINE): NIL
Local 34: NIL
Local 35 (BL): NIL


REDISPLAY (P.C. = 70)

 Arg 0 (WINDOW): #<ZMAIL-WINDOW Zmail Window 5 3400357 exposed>
   --Defaulted args:--
 Arg 1 (RECENTER-TYPE): :POINT
 Arg 2 (RC1): NIL
 Arg 3 (RC2): NIL
 Arg 4 (FORCE-TO-COMPLETION-P): NIL


REDISPLAY-ALL-WINDOWS (P.C. = 75)

   --Defaulted args:--
 Arg 0 (FORCE-TO-COMPLETION-P): NIL
 Arg 1 (SELECT-P): T
Local 0: (#<ZMAIL-WINDOW Zmail Window 5 3400357 exposed>)
Local 1 (WINDOW): #<ZMAIL-WINDOW Zmail Window 5 3400357 exposed>


(:METHOD WINDOW :EDIT) (P.C. = 413)
  (SELF is #<ZMAIL-WINDOW Zmail Window 5 3400357 exposed>)

 Arg 0 (OPERATION): :EDIT
   --Defaulted args:--
 Arg 1 (IGNORE): NIL
 Arg 2 (*COMTAB*): #<COMTAB MODE-COMTAB 22467365>
 Arg 3 (*MODE-LINE-LIST*): ("ZMail " "Profile")
 Arg 4 (TOP-LEVEL-P): T
Local 0 (TEM1): ((** ** T ** ...) (** ** T ** ...) (** ** T ** ...) (CONDITION ** T ** ...))
Local 1: ("Return to top level editor command loop.")
Local 2: ((SYSTEM:ABORT ERROR) ("Return to top level editor command loop.") T ("Return to top level editor command loop.") ...)
Local 3 (CH): NIL


(:INTERNAL (:INTERNAL (:METHOD ZMAIL-WINDOW :COMBINED :EDIT) 0) 0) (P.C. = 66)

 Rest arg (.DAEMON-CALLER-ARGS.): (:EDIT)
Local 1 (.DAEMON-MAPPING-TABLE.): #<ART-16B-12 30647272>


Remainder of stack:

FUNCALL (P.C. = 25)
(:METHOD DISPLAYER :AROUND :EDIT) (P.C. = 31)
(:INTERNAL (:METHOD ZMAIL-WINDOW :COMBINED :EDIT) 0) (P.C. = 43)
(:METHOD ZMAIL-WINDOW :AROUND :EDIT) (P.C. = 63)
(:METHOD ZMAIL-WINDOW :COMBINED :EDIT) (P.C. = 41)
(:SELECT-METHOD ZMAIL-PROFILE-COMMAND-LIST :MOUSE-BUTTON) (P.C. = 650)
(:SELECT-METHOD ZMAIL-PROFILE-COMMAND-LIST SELECT-WINDOW) (P.C. = 42)
(:METHOD ZMAIL-PROFILE-FRAME :PROCESS-SPECIAL-COMMAND) (P.C. = 25)
(:SELECT-METHOD ZMAIL-PROFILE-COMMAND-LIST :MOUSE-BUTTON) (P.C. = 330)
(:METHOD ZMAIL-PROFILE-FRAME :PROCESS-SPECIAL-COMMAND) (P.C. = 25)
...
(:SELECT-METHOD ZMAIL-COMMAND-LIST :MENU) (P.C. = 32)
(:METHOD ZMAIL-FRAME :PROCESS-SPECIAL-COMMAND) (P.C. = 25)
(:METHOD ZMAIL-COMMAND-LOOP-MIXIN :COMMAND-LOOP) (P.C. = 252)
(:INTERNAL (:METHOD ZMAIL-FRAME :COMBINED :COMMAND-LOOP) 0) (P.C. = 44)
FUNCALL (P.C. = 25)
(:METHOD ZMAIL-COMMAND-LOOP-MIXIN :AROUND :COMMAND-LOOP) (P.C. = 57)
(:METHOD ZMAIL-FRAME :COMBINED :COMMAND-LOOP) (P.C. = 43)
ZMAIL-PROCESS-TOP-LEVEL (P.C. = 115)
SI:PROCESS-TOP-LEVEL (P.C. = 152)
 4-Feb-85 15:47:01-EST,1383;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 4 Feb 85 15:46-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 171674; Mon 4-Feb-85 15:39:04-EST
Date: Monday, 4 February 1985, 15:36-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: zwei:install-record-cleanly is undefined
To: Webster Dove <dove at MIT-BUGS-BUNNY>, BUG-LISPM at MIT-OZ
In-Reply-To: <850204114549.2.DOVE@TWEETY-PIE.MIT>
Message-ID: <850204153601.2.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Monday, 4 February 1985, 11:45-EST
    From: Webster Dove <dove at MIT-BUGS-BUNNY>

    In Symbolics 3600 , on Lisp Machine Tweety Pie:

That trick won't work.  We know you are using Release 6 since SAGE
doesn't exist in Release 5.  If you aren't a valid beta-test customer,
you shouldn't be using it (and therefore since you aren't using it you
can't report bugs).  If you are a beta-test customer, this has already
been fixed.  If nothing else, don't try to fake us out.

    Try getting documentation on anything which has none.

    >>Trap: The function ZWEI:INSTALL-RECORD-CLEANLY is undefined.
    While in the function SAGE:MAKE-RECORD-FROM-STRING  SAGE:RECORD-FOR-TOPIC&TYPE  (:METHOD SAGE:SOURCE-OF-FORMATTED-SAGE-RECORD-LINES :INIT)

    SAGE:MAKE-RECORD-FROM-STRING:  (P.C. = 44)  (from SYS: SAGE; PATCH; BASIC-SAGE-13-20)
 4-Feb-85 18:07:04-EST,2983;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 4 Feb 85 18:06-EST
Date: Monday, 4 February 1985, 17:58-EST
From: Scott Cyphers <sr.ehpyc at MIT-SPEECH>
Subject: FLET
To: DCP at SCRC-QUABBIN, sr.ehpyc at MIT-SPEECH, BUG-LISPM at MIT-OZ
In-Reply-To: <850204161200.0.NFEP@NEPONSET.SCRC.Symbolics.COM>
Message-ID: <850204175838.4.CYPHER@MIT-SMOKEY.MIT>

    Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 171738; Mon 4-Feb-85 16:15:08-EST
    Date: Monday, 4 February 1985, 16:12-EST
    From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
    Subject: FLET
    To: Scott Cyphers <sr.ehpyc at MIT-SPEECH>, DCP at SCRC-QUABBIN,
	BUG-LISPM at MIT-OZ
    In-Reply-To: <850204145733.1.CYPHER@MIT-SMOKEY.MIT>
    Message-ID: <850204161200.0.NFEP@NEPONSET.SCRC.Symbolics.COM>

    If it can be done with a subst, it can be done with a single level of
    backquote.  Therefore you DON'T have to "go through and check all the
    back quotes and things like that, ..." because it is one of the simplest
    cases of macros there are.  Consider this a challenge to prove me wrong.
  
Consider these two functions:

(defun f-1 (left list right)
  (flet ((g (value) `(,left ,value ,right)))
    (declare (inline g))
    (loop for elt in list collecting (g elt))))

(defun f-2 (left list right)
  (macrolet ((g (value) ``(,,'left ,,value ,,'right)))
    (loop for elt in list collecting (g elt))))

I know what f-1 does by just looking at it.  I can't say the same for
f-2, and I imagine the same is true for most other people.

    Additionally, I don't think the user has to know if it is a {macro, a
    function or a subst} x {lexical or dynamic}.  If the user DOES need to
    know that, then some abstraction is wrong.  A form fulfills a contract;
    it doesn't matter how it is implemented.

This supports my point.  What you say is fine if the form does indeed
fill a contract, but I have run into cases (in other people's code, of
course) where a form doesn't fulfill its contract.  Then the problem
becomes:  "What is this form really doing, and what do I have to change
to make it do what it's supposed to do?", and that is where the
difference comes in.  If you do things the macrolet way, you first have
to put the backquotes and commas in, and, then, when you're trying to
understand what is going on, you have to take them back out again
(mentally).  At the time the code was written, the programmer knew that
the macro wasn't doing anything complicated, but as soon as the
backquotes and commas were added, that information was gone.  A comment
could be added, but trusting comments associated with code known to be
broken isn't always a good idea since the code and comments don't always
stay consistent.  If the form is written as a function, and told to be
open coded, the information is all there, and can't become inconsistent
since that would require changing things to use a macro.
 4-Feb-85 19:19:29-EST,551;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 4 Feb 85 19:19-EST
Date: Monday, 4 February 1985, 19:15-EST
From: Scott Cyphers <sr.ehpyc at MIT-SPEECH>
Subject: Auto Fill Lisp Comments Mode suggestion
To: BUG-LISPM at MIT-OZ
Message-ID: <850204191553.6.CYPHER@MIT-SMOKEY.MIT>

In Symbolics 3670 Release 6.0 Beta IIc, microcode TMC5-IO4-FPA-MIC 315,
FEP 22, on Lisp Machine Smokey:

In Auto Fill Lisp Comments Mode, how does having meta-s center the
contents of the comment on that line, while leaving the semi colons
where they are sound?
 4-Feb-85 20:49:04-EST,5054;000000000000
Received: from MIT-ROBOT-4 by MIT-OZ via Chaosnet; 4 Feb 85 20:48-EST
Date: Monday, 4 February 1985, 20:47-EST
From: zvona at MIT-OZ
Sender: KOCH at MIT-OZ
Subject: yecch
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10, NS 19.74, on Lisp Machine Robot-2:

I got this doing terminal-one-f.

>>Trap: The first argument given to the SYS:INTERNAL-> instruction, NIL, was not a number.
While in the function NETI:GET-LATEST-TIMESTAMP-FROM-NETWORK  NETI:GET-INCREMENTAL-UPDATE-FROM-NETWORK  (:METHOD NETI:NAMESPACE :GET-LATEST-TIMESTAMP)

NETI:GET-LATEST-TIMESTAMP-FROM-NETWORK:  (P.C. = 136)
   Arg 0 (NAMESPACE): #<NAMESPACE ARPANET 12270044>
   Local 1: (#<SERVICE-ACCESS-PATH NAMESPACE-TIMESTAMP (NAMESPACE-TIMESTAMP) -- GOLDILOCKS on CHAOS 32004261> #<SERVICE-ACCESS-PATH NAMESPACE-TIMESTAMP (NAMESPACE-TIMESTAMP) -- POLAR on CHAOS 32004276> #<SERVICE-ACCESS-PATH NAMESPACE-TIMESTAMP (NAMESPACE-TIMESTAMP) -- SCH|GODZILLA on CHAOS 32004212> #<SERVICE-ACCESS-PATH NAMESPACE-TIMESTAMP (NAMESPACE-TIMESTAMP) -- WAIKATO on CHAOS 32004227> #<SERVICE-ACCESS-PATH NAMESPACE-TIMESTAMP (NAMESPACE-TIMESTAMP) -- SCRC-STONY-BROOK on CHAOS 32004244> #<SERVICE-ACCESS-PATH NAMESPACE-TIMESTAMP (NAMESPACE-TIMESTAMP) -- SCRC-RIVERSIDE on CHAOS 32004313>)
   Local 2 (SERVICES): (#<SERVICE-ACCESS-PATH NAMESPACE-TIMESTAMP (NAMESPACE-TIMESTAMP) -- GOLDILOCKS on CHAOS 32004261> #<SERVICE-ACCESS-PATH NAMESPACE-TIMESTAMP (NAMESPACE-TIMESTAMP) -- POLAR on CHAOS 32004276> #<SERVICE-ACCESS-PATH NAMESPACE-TIMESTAMP (NAMESPACE-TIMESTAMP) -- SCH|GODZILLA on CHAOS 32004212> #<SERVICE-ACCESS-PATH NAMESPACE-TIMESTAMP (NAMESPACE-TIMESTAMP) -- WAIKATO on CHAOS 32004227> #<SERVICE-ACCESS-PATH NAMESPACE-TIMESTAMP (NAMESPACE-TIMESTAMP) -- SCRC-STONY-BROOK on CHAOS 32004244> #<SERVICE-ACCESS-PATH NAMESPACE-TIMESTAMP (NAMESPACE-TIMESTAMP) -- SCRC-RIVERSIDE on CHAOS 32004313>)
   Local 3 (ARGS): (#<NAMESPACE ARPANET 12270044>)
   Local 4 (SERVICE): #<SERVICE-ACCESS-PATH NAMESPACE-TIMESTAMP (NAMESPACE-TIMESTAMP) -- GOLDILOCKS on CHAOS 32004261>
   Local 5: (#<SERVICE-ACCESS-PATH NAMESPACE-TIMESTAMP (NAMESPACE-TIMESTAMP) -- POLAR on CHAOS 32004276> #<SERVICE-ACCESS-PATH NAMESPACE-TIMESTAMP (NAMESPACE-TIMESTAMP) -- SCH|GODZILLA on CHAOS 32004212> #<SERVICE-ACCESS-PATH NAMESPACE-TIMESTAMP (NAMESPACE-TIMESTAMP) -- WAIKATO on CHAOS 32004227> #<SERVICE-ACCESS-PATH NAMESPACE-TIMESTAMP (NAMESPACE-TIMESTAMP) -- SCRC-STONY-BROOK on CHAOS 32004244> #<SERVICE-ACCESS-PATH NAMESPACE-TIMESTAMP (NAMESPACE-TIMESTAMP) -- SCRC-RIVERSIDE on CHAOS 32004313>)
   Local 6: #<CASE-HANDLER 12176716>
   Local 7: (#<CASE-HANDLER 12176664> #<CASE-HANDLER 12176744>)
   Local 8: #<DTP-LOCATIVE 16500464>
   Local 9: #<DTP-ODD-PC 11024312>
   Local 10: #<DTP-LOCATIVE 12304464>
   Local 11: #<DTP-LOCATIVE 16500441>
   Local 12 (TS): NIL

NETI:GET-INCREMENTAL-UPDATE-FROM-NETWORK:  (P.C. = 440)
   Arg 0 (NAMESPACE): #<NAMESPACE ARPANET 12270044>
   Arg 1 (STARTING-TIMESTAMP): 150.

(:METHOD NETI:NAMESPACE :GET-LATEST-TIMESTAMP):  (P.C. = 21)
   Arg 0 (SELF): #<NAMESPACE ARPANET 12270044>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NETI:NAMESPACE -- 8. IV's, 0. FL's 52476512>
   Arg 2 (OPERATION): :GET-LATEST-TIMESTAMP

(:METHOD NETI:NAMESPACE :VALIDATION-TIMESTAMP):  (P.C. = 20)
   Arg 0 (SELF): #<NAMESPACE ARPANET 12270044>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NETI:NAMESPACE -- 8. IV's, 0. FL's 52476512>
   Arg 2 (OPERATION): :VALIDATION-TIMESTAMP

(:METHOD NET:OBJECT :CHECK-VALIDITY):  (P.C. = 102)
   Arg 0 (SELF): #<LISPM-HOST DAFFY-DUCK 5726327>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NET:OBJECT -- 3. IV's, 1. FL's 52676452>
   Arg 2 (OPERATION): :CHECK-VALIDITY
   Arg 3 (RELATIVE-TO-NAMESPACE): #<NAMESPACE ARPANET 12270044>
   Arg 4 (FORCE-P): NIL

(:METHOD NET:OBJECT :CHECK-VALIDITY):  (P.C. = 34)
   Arg 0 (SELF): #<LISPM-HOST DAFFY-DUCK 5726327>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NET:OBJECT -- 3. IV's, 1. FL's 52676452>
   Arg 2 (OPERATION): :CHECK-VALIDITY
   --Defaulted args:--
   Arg 3 (RELATIVE-TO-NAMESPACE): NIL
   Arg 4 (FORCE-P): NIL

(:METHOD NET:OBJECT :BEFORE :GET):  (P.C. = 5)
   Arg 0 (SELF): #<LISPM-HOST DAFFY-DUCK 5726327>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NET:OBJECT -- 3. IV's, 1. FL's 52676452>
   Arg 2 (OPERATION): :GET
   Rest arg (IGNORE): (:SERVICE)

(:METHOD NET:OBJECT :COMBINED :GET):  (P.C. = 7)
   Arg 0 (SELF): #<LISPM-HOST DAFFY-DUCK 5726327>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NET:OBJECT -- 3. IV's, 1. FL's 52676452>
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

Rest of stack:
(:METHOD NET:HOST :NETWORK-SERVICES):  (P.C. = 5)
NET:FIND-PATHS-TO-SERVICE-ON-HOST:  (P.C. = 41)
NETI:FIND-PATH-TO-SERVICE-ON-HOST:  (P.C. = 7)
NETI:SCAN-LISPMS:  (P.C. = 37)
NETI:FINGER-LISPMS:  (P.C. = 24)
NET:FINGER-LOCAL-LISPMS:  (P.C. = 11)
TV:KBD-FINGER:  (P.C. = 171)
(:INTERNAL TV:KBD-ESC 1.):  (P.C. = 4)
SI:PROCESS-RUN-FUNCTION-INTERNAL:  (P.C. = 51)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
 4-Feb-85 21:17:38-EST,2558;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 4 Feb 85 21:17-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 171738; Mon 4-Feb-85 16:15:08-EST
Date: Monday, 4 February 1985, 16:12-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: FLET
To: Scott Cyphers <sr.ehpyc at MIT-SPEECH>, DCP at SCRC-QUABBIN,
    BUG-LISPM at MIT-OZ
In-Reply-To: <850204145733.1.CYPHER@MIT-SMOKEY.MIT>
Message-ID: <850204161200.0.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Monday, 4 February 1985, 14:57-EST
    From: Scott Cyphers <sr.ehpyc at MIT-SPEECH>

    Suppose the funtion were written like this:

    (defun clip-array (min max array)
      (dotimes (i (array-active-length array))
	(setf (aref array i) (min max (max min (aref array i))))))

    Unless you were used to such things, you'd have to look at it for a few
    seconds to figure out what those mins and maxs were doing in this case.
    The only reason for using the FLET in this situation is that it
    separates the code into a CLIP part and a MAP part, each of which is
    independent.  When a macro definition appears and you are trying to
    figure out what it is doing, you have to go through and check all the
    back quotes and things like that, figuring out who's quoting whom and
    what's getting rearranged.  That's what I mean by overkill.  When you
    see a macro, you expect certain kinds of things to be being done, and
    they're not the kinds of things being done for the open code behavior,
    which, in the past, was done with a subst.  By saying it as a function,
    you're telling the person trying to understand the code that there's
    none of that going on, and that it's just your average every day run of
    the mill function that's getting open coded.  For CLIP, the difference
    is minor, but for a more complex internal function, the difference would
    be significant.

(declare (inline ...)) discussions aside...

If it can be done with a subst, it can be done with a single level of
backquote.  Therefore you DON'T have to "go through and check all the
back quotes and things like that, ..." because it is one of the simplest
cases of macros there are.  Consider this a challenge to prove me wrong.
Additionally, I don't think the user has to know if it is a {macro, a
function or a subst} x {lexical or dynamic}.  If the user DOES need to
know that, then some abstraction is wrong.  A form fulfills a contract;
it doesn't matter how it is implemented.
 4-Feb-85 23:49:23-EST,3653;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 4 Feb 85 23:49-EST
Received: from SCRC-NEPONSET by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 129959; Mon 4-Feb-85 19:55:43-EST
Date: Monday, 4 February 1985, 19:55-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: FLET
To: Scott Cyphers <sr.ehpyc at MIT-SPEECH>, DCP at SCRC-QUABBIN,
    BUG-LISPM at MIT-OZ
In-Reply-To: <850204175838.4.CYPHER@MIT-SMOKEY.MIT>
Message-ID: <850204195538.8.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Monday, 4 February 1985, 17:58-EST
    From: Scott Cyphers <sr.ehpyc at MIT-SPEECH>

	Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 171738; Mon 4-Feb-85 16:15:08-EST
	Date: Monday, 4 February 1985, 16:12-EST
	From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
	Subject: FLET
	To: Scott Cyphers <sr.ehpyc at MIT-SPEECH>, DCP at SCRC-QUABBIN,
	    BUG-LISPM at MIT-OZ
	In-Reply-To: <850204145733.1.CYPHER@MIT-SMOKEY.MIT>
	Message-ID: <850204161200.0.NFEP@NEPONSET.SCRC.Symbolics.COM>

	If it can be done with a subst, it can be done with a single level of
	backquote.  Therefore you DON'T have to "go through and check all the
	back quotes and things like that, ..." because it is one of the simplest
	cases of macros there are.  Consider this a challenge to prove me wrong.
  
    Consider these two functions:

    (defun f-1 (left list right)
      (flet ((g (value) `(,left ,value ,right)))
	(declare (inline g))
	(loop for elt in list collecting (g elt))))

    (defun f-2 (left list right)
      (macrolet ((g (value) ``(,,'left ,,value ,,'right)))
	(loop for elt in list collecting (g elt))))

    I know what f-1 does by just looking at it.  I can't say the same for
    f-2, and I imagine the same is true for most other people.

I would have written it

(defun f-2 (left list right)
  (macrolet ((g (value) ``(,left ,,value ,right)))
    (loop for elt in list collecting (g elt))))

but I think even this satisfies my challenge.

	Additionally, I don't think the user has to know if it is a {macro, a
	function or a subst} x {lexical or dynamic}.  If the user DOES need to
	know that, then some abstraction is wrong.  A form fulfills a contract;
	it doesn't matter how it is implemented.

    This supports my point.  What you say is fine if the form does indeed
    fill a contract, but I have run into cases (in other people's code, of
    course) where a form doesn't fulfill its contract.  Then the problem
    becomes:  "What is this form really doing, and what do I have to change
    to make it do what it's supposed to do?", and that is where the
    difference comes in.  If you do things the macrolet way, you first have
    to put the backquotes and commas in, and, then, when you're trying to
    understand what is going on, you have to take them back out again
    (mentally).  At the time the code was written, the programmer knew that
    the macro wasn't doing anything complicated, but as soon as the
    backquotes and commas were added, that information was gone.  A comment
    could be added, but trusting comments associated with code known to be
    broken isn't always a good idea since the code and comments don't always
    stay consistent.  If the form is written as a function, and told to be
    open coded, the information is all there, and can't become inconsistent
    since that would require changing things to use a macro.

What you are saying is that it's easier, by virtue of backquote, to
write hairier macros than hairier functions.  Agreed.  So now we're back
to (declare (inline ...)).
 5-Feb-85 03:34:58-EST,2033;000000000000
Received: from SPA-RUSSIAN by MIT-OZ via Chaosnet; 5 Feb 85 03:34-EST
Date: Monday, 4 February 1985, 17:24-PST
From: Richard Lamson <rsl at SPA-RUSSIAN>
Subject: nil namespace arg
To: Webster Dove <dove at MIT-BUGS-BUNNY>,
    Charles Hornig <Hornig at SCRC-STONY-BROOK>, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 28 Jan 85 09:39-PST from Webster Dove <dove at MIT-BUGS-BUNNY>,
             <850128132046.1.HORNIG@PEACE.SCRC.Symbolics.COM>
Message-ID: <850204172411.4.RSL@RUSSIAN.SPA.Symbolics.COM>

I believe this is due to the :*-doesn't-match-NIL feature installed at
my request some time ago.  A simple fix is to add SPOOL-VIA NETWORK to
the spooled-printer entry on the host object of the host which is
attached to the printer.  [I am not 100% sure this is the same bug, but
it can't hurt to try it -- try adding the entry locally first.]

    Date: Monday, 28 January 1985, 12:39-EST
    From: Webster Dove <dove at MIT-BUGS-BUNNY>

    In Symbolics 3600 System 242.356, Hardcopy 20.10, Experimental FPA 2.0,
    Experimental UTIL 9.0, on Lisp Machine Tweety Pie:

    I was trying (lgp:write-lgp-record-file-from-press-file ">dove>junk.press" "dspg-lgp")

    >>Error: The symbol NIL has an invalid function definition
    While in the function NIL  NETI:FIND-OBJECT-NAMED-IN-NAMESPACE  NET:FIND-OBJECT-NAMED

    NIL:
       Arg 0: :GET-NAME-ENTRY
       Arg 1: :CLASS
       Arg 2: :HOST
       Arg 3: NIL

    NETI:FIND-OBJECT-NAMED-IN-NAMESPACE:  (P.C. = 27)
    NET:FIND-OBJECT-NAMED:  (P.C. = 46)
    NETI:FINDING-OBJECTS:  (P.C. = 42)

    NET:FIND-OBJECTS-FROM-PROPERTY-LIST:  (P.C. = 15)
       Arg 0 (CLASS): :HOST
    Rest arg (PROPERTY-LIST): (:SPOOLED-PRINTER ((#<PRINTER dspg-lgp 14634535> :*))) 
[etc.]

    Date: Mon, 28 Jan 85 13:20 EST
    From: Charles Hornig <Hornig at SCRC-STONY-BROOK>

    Tracking this down at this point would be pretty hopeless, I'm afraid.
    This code was all scrapped for release 6.

    Does this happen consistently?
 5-Feb-85 14:19:46-EST,1110;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 5 Feb 85 14:19-EST
Received: from SCRC-PEACE by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 172635; Tue 5-Feb-85 14:13:58-EST
Date: Tue, 5 Feb 85 14:11 EST
From: Charles Hornig <Hornig at SCRC-STONY-BROOK>
Subject: yecch
To: zvona at MIT-OZ, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 4 Feb 85 20:47-EST from zvona at MIT-OZ
Message-ID: <850205141124.1.HORNIG@PEACE.SCRC.Symbolics.COM>

    Date: Monday, 4 February 1985, 20:47-EST
    From: zvona at MIT-OZ

    In Symbolics 3600 System 242.356, Hardcopy 20.10, NS 19.74, on Lisp Machine Robot-2:

    I got this doing terminal-one-f.

    >>Trap: The first argument given to the SYS:INTERNAL-> instruction, NIL, was not a number.
    While in the function NETI:GET-LATEST-TIMESTAMP-FROM-NETWORK  NETI:GET-INCREMENTAL-UPDATE-FROM-NETWORK  (:METHOD NETI:NAMESPACE :GET-LATEST-TIMESTAMP)

There was a fix to this distributed to MIT about a month ago.  This is
what happens when an unfixed rel-5-2 systems meets a rel-6 namespace
server.  Ask CJL where you can find the fix.
 5-Feb-85 18:19:36-EST,5320;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 5 Feb 85 18:19-EST
Date: Tuesday, 5 February 1985, 18:17-EST
From: Cory Myers <cory at MIT-BUGS-BUNNY>
Subject: load-patches
To: BUG-LISPM at MIT-OZ
Message-ID: <850205181734.1.CORY@DAFFY-DUCK.MIT>

In Symbolics 3670 Release 6.0 Beta IIc, microcode TMC5-IO4-FPA-MIC 315,
FEP 22, on Lisp Machine Daffy Duck:

The first thing I typed to my newly cold-booted lisp machine was (load-patches).  It found no patches for system or hardcopy then blew up on zmail.

>>Error: The logical pathname SYS: ZMAIL; PATCH; is not defined
While in the function (:METHOD FS:LOGICAL-HOST :TRANSLATE-RAW)  (:METHOD FS:LOGICAL-HOST :TRANSLATE)  (:METHOD FS:LOGICAL-PATHNAME :TRANSLATED-PATHNAME)

(:METHOD FS:LOGICAL-HOST :TRANSLATE-RAW):  (P.C. = 36)
   Arg 0 (SELF): #<LOGICAL-HOST SYS>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:LOGICAL-HOST -- 9. IV's, 2. FL's 105422371>
   Arg 2 (OPERATION): :TRANSLATE-RAW
   Arg 3 (PATHNAME): #<LOGICAL-PATHNAME "SYS: ZMAIL; PATCH; ZMAIL-105.PATCH-DIR.NEWEST">

(:METHOD FS:LOGICAL-HOST :TRANSLATE):  (P.C. = 5)
   Arg 0 (SELF): #<LOGICAL-HOST SYS>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:LOGICAL-HOST -- 9. IV's, 2. FL's 105422371>
   Arg 2 (OPERATION): :TRANSLATE
   Arg 3 (PATHNAME): #<LOGICAL-PATHNAME "SYS: ZMAIL; PATCH; ZMAIL-105.PATCH-DIR.NEWEST">

(:METHOD FS:LOGICAL-PATHNAME :TRANSLATED-PATHNAME):  (P.C. = 67)
   Arg 0 (SELF): #<LOGICAL-PATHNAME "SYS: ZMAIL; PATCH; ZMAIL-105.PATCH-DIR.NEWEST">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:LOGICAL-PATHNAME -- 8. IV's, 3. FL's 105360754>
   Arg 2 (OPERATION): :TRANSLATED-PATHNAME

(:DEFUN-METHOD FS:LOGICAL-PATHNAME-PASS-ON):  (P.C. = 5)
   Arg 0 (SELF): #<LOGICAL-PATHNAME "SYS: ZMAIL; PATCH; ZMAIL-105.PATCH-DIR.NEWEST">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:LOGICAL-PATHNAME -- 8. IV's, 3. FL's 105360754>
   Arg 2 (MESSAGE): :OPEN
   Rest arg (REST): (#<LOGICAL-PATHNAME "SYS: ZMAIL; PATCH; ZMAIL-105.PATCH-DIR.NEWEST"> :DIRECTION :INPUT)

(:METHOD FS:LOGICAL-PATHNAME :OPEN):  (P.C. = 10)
   Arg 0 (SELF): #<LOGICAL-PATHNAME "SYS: ZMAIL; PATCH; ZMAIL-105.PATCH-DIR.NEWEST">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:LOGICAL-PATHNAME -- 8. IV's, 3. FL's 105360754>
   Arg 2 (OPERATION): :OPEN
   Rest arg (.ARGS.): (#<LOGICAL-PATHNAME "SYS: ZMAIL; PATCH; ZMAIL-105.PATCH-DIR.NEWEST"> :DIRECTION :INPUT)

FS:COMMON-LISP-OPEN:  (P.C. = 450)
   Arg 0 (PATHNAME): #<LOGICAL-PATHNAME "SYS: ZMAIL; PATCH; ZMAIL-105.PATCH-DIR.NEWEST">
   Arg 1 (KEYWORD-ARGS): NIL

OPEN:  (P.C. = 257)
   Arg 0 (PATHNAME): #<LOGICAL-PATHNAME "SYS: ZMAIL; PATCH; ZMAIL-105.PATCH-DIR.NEWEST">
   Rest arg (KEYWORD-ARGS): NIL

SI:READ-PATCH-DIRECTORY:  (P.C. = 102)
   Arg 0 (PATCH): ("Zmail" 105 :RELEASED ((8 "Template ZWEI:BUG-REPORT-TEMPLATE:
  The vote are in: /"Command Processor/" is added to the Bug Mail menu." "dodds") (7 "Fix up Converse to not suppress parsing of addresse and to never use the :ARPANET naming convention.
Function (:METHOD NET:HOST :MAIL-NAME):  Clean up treatment of INTERNET namespace a bit.
Function (:METHOD NET:HOST :DEFAULT-MAIL-NAMING-CONVENTION):  ditto" "Hornig") (6 "Function SEND-MESSAGE-STRING:  I knew I'd get into trouble inviting users to call this;
                               add more format conversion." "MMcM") (5 "Function (:METHOD MAILER:LMFS-MAILER :RECEIVE-MESSAGE):  Caller of broken WITH-OUTPUT-TO-STRING
Function (:METHOD UNIX-MAIL-BUFFER :UPDATE-MSG-OPTIONS-IN-FILE):  Ditto
Function STRING-FROM-OPTION:  Ditto" "RLB") (4 "Function PARSE-DOMAIN-OR-HOST:  Avoid infinite recursion if no Internet namespace." "Hornig") (3 "Function CONVERSE-SEND-MSG:  When mailing, supply a subject and give a report stream.
Function (:METHOD BASIC-DRAFT-MSG :MESSAGE-SENT):  Use :REPORT-STREAM rather than always TYPEIN-LINE.
Function (:METHOD BASIC-DRAFT-MSG :REPORT-STREAM):  default for above.
Flavor SEND-MESSAGE-STRING-DRAFT-MSG:  Use DEFAULT-TRANSMIT-TEMPLATE so
  ignore *REQUIRE-SUBJECTS*; have own REPORT-STREAM.
Function SEND-MESSAGE-STRING:  Take more arguments to allow setting subject or other headers." "MMcM") (2 "Function GET-FILTER-DEFINITION:  Make filters work in the world of LAMBDA.
Variable *BUG-REPORT-ALTERNATIVE-REPLY-ALIST*:
     Add Rel60-Beta to special bug-tracking addresses." "dodds") (1 "Function ZWEI:GET-DRAFT-MSG-FOR-REVOKE, 
 (:METHOD REDISTRIBUTE-DRAFT-MSG :SUMMARY-STRING): Fix m-X Show Draft Disposition for the 
 case of expunged redistributed messages; fix m-X Revoke Msg not to offer same.
Functions ZWEI:GET-INBOX-FOR-BUFFER, FOREGROUND-BACKGROUND-FINISH: Interlock to Logout.
Function INITIALIZE-ZMAIL-COMTABS:  Include Scroll and m-Scroll as chars to scroll
 current message window.
Function ZMAIL-SAVE-ALL-FILES: Call them /"mail buffers/" to avoid confusion." "dodds") (0 "Zmail Loaded" "LISPM")))
   --Defaulted args:--
   Arg 1 (NOERROR): NIL

Rest of stack:
LOAD-PATCHES:  (P.C. = 1002)
SI:*EVAL:  (P.C. = 403)
(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0):  (P.C. = 152)
TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)  (from SYS: PATCH; SYSTEM-269-48)
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
SI:LISP-COMMAND-LOOP:  (P.C. = 67)
SI:LISP-TOP-LEVEL1:  (P.C. = 5)
SI:LISP-TOP-LEVEL:  (P.C. = 7)
 6-Feb-85 16:54:18-EST,3661;000000000000
Received: from MIT-FORD by MIT-OZ via Chaosnet; 6 Feb 85 16:54-EST
Date: Wednesday, 6 February 1985, 16:53-EST
From: Robert L. Krawitz <ZZZ.RLK at MIT-OZ>
To: BUG-LISPM at MIT-OZ, bug-oz at MIT-OZ

In System 98.80, CADR 3.10, ZMail 53.19, MIT-Specific 22.5,
microcode 309, ZM MIT gc*2, on Ford Prefect:


Insert your description of the circumstances here:

I was in dired.  I clicked right on the left-most column for that file,
clicked on change-properties, and clicked on protection (the number,
777777).  I typed c-K on the left-most column (to clear out the entire
line) and typed 770000. After clicking do it, I got this.  Is this maybe
an oz bug?  It looks like it was trying to set the right thing to the
right value.

>>ERROR: Illegal to change specified bits for OZ:OZ:<ZZZ.RLK>RANDOM.FLAME.1
Backtrace from the debugger:

FS:CHANGE-PROPERTIES-CHAOS (P.C. = 113)

 Arg 0 (HOST): #FS:TOPS20-CHAOS-HOST "MIT-OZ"
 Arg 1 (PATHNAME): #FS:TOPS20-PATHNAME "OZ:OZ:<ZZZ.RLK>RANDOM.FLAME.1"
 Arg 2 (ERROR-P): T
 Arg 3 (PROPERTIES): (:PROTECTION "770000")
Local 0 (STRING): " ERROR ACC F Illegal to change specified bits"
Local 1 (HOST-UNIT): #<HOST-UNIT 36045463>
Local 2 (PKT): #<CHAOS packet :STRING "T2063  ERROR ACC F Illegal to change specified bits" :STATUS CHAOS:RELEASED 23120063>
Local 3 (SUCCESS): NIL
Local 4 (IGNORE): NIL


(:METHOD FS:CHAOS-PATHNAME :CHANGE-PROPERTIES) (P.C. = 33)
  (SELF is #FS:TOPS20-PATHNAME "OZ:OZ:<ZZZ.RLK>RANDOM.FLAME.1")

 Arg 0 (OPERATION): :CHANGE-PROPERTIES
 Arg 1 (ERROR-P): T
 Rest arg (PROPERTIES): (:PROTECTION "770000")


FS:CHANGE-FILE-PROPERTIES (P.C. = 111)

 Arg 0 (PATHNAME): #FS:TOPS20-PATHNAME "OZ:OZ:<ZZZ.RLK>RANDOM.FLAME.1"
 Arg 1 (ERROR-P): T
 Rest arg (PROPERTIES): (:PROTECTION "770000")
Local 1: ((FS:FILE-ERROR) SI:FILE-RETRY-HANDLER #FS:TOPS20-PATHNAME "OZ:OZ:<ZZZ.RLK>RANDOM.FLAME.1")
Local 2: ((** SI:FILE-RETRY-HANDLER #FS:TOPS20-PATHNAME "OZ:OZ:<ZZZ.RLK>RANDOM.FLAME.1"))
Local 3 (NEW-PATHNAME): NIL


ZWEI:CHANGE-FILE-PROPERTIES (P.C. = 351)

 Arg 0 (PATHNAME): #FS:TOPS20-PATHNAME "OZ:OZ:<ZZZ.RLK>RANDOM.FLAME.1"
Local 0 (DIRECTORY): (#FS:TOPS20-PATHNAME "OZ:OZ:<ZZZ.RLK>RANDOM.FLAME.1" :PROTECTION "777777" :GENERATION-RETENTION-COUNT ...)
Local 1 (INDICATORS): (:NOT-BACKED-UP :AUTHOR :CREATION-DATE :REFERENCE-DATE ...)
Local 2 (VALUES): (T "ZZZ.RLK" 2685562435 2685563042 ...)
Local 3 (CHOICES): ((:NOT-BACKED-UP "Not Backed Up" :BOOLEAN) (:AUTHOR "Author" :STRING) (:CREATION-DATE "Creation Date" :DATE) (:REFERENCE-DATE "Reference Date" :DATE-OR-NEVER) ...)
Local 4 (CHANGES): (:PROTECTION "770000")
Local 5 (IND): :DONT-REAP
Local 6: NIL
Local 7: NIL
Local 8: NIL
Local 9 (L): ((** :DELETED :DONT-DELETE :DONT-DUMP ...) (** :ACCOUNT :AUTHOR :LINK-TO ...) (** :BLOCK-SIZE :BYTE-SIZE :GENERATION-RETENTION-COUNT ...) (** :CREATION-DATE :MODIFICATION-DATE) ...)
Local 10 (VAL): NIL
Local 11: NIL
Local 12 (NEW): NIL
Local 13: ("770000")
Local 14: (:PROTECTION "770000")


ZWEI:COM-DIRED-CHANGE-FILE-PROPERTIES (P.C. = 42)

Local 0 (NEW-PROPS): NIL
Local 1 (L): NIL


Remainder of stack:

ZWEI:COM-DIRED-MOUSE-MENU (P.C. = 116)
ZWEI:COMMAND-EXECUTE (P.C. = 115)
ZWEI:PROCESS-COMMAND-CHAR (P.C. = 65)
(:SELECT-METHOD ZWEI:PROCESS-SPECIAL-COMMAND :MOUSE-BUTTON) (P.C. = 157)
(:METHOD ZWEI:WINDOW :EDIT) (P.C. = 442)
(:INTERNAL (:METHOD ZWEI:ZMACS-WINDOW :COMBINED :EDIT) 0) (P.C. = 74)
FUNCALL (P.C. = 25)
(:METHOD ZWEI:DISPLAYER :AROUND :EDIT) (P.C. = 31)
(:METHOD ZWEI:ZMACS-WINDOW :COMBINED :EDIT) (P.C. = 47)
ZWEI:ZMACS-WINDOW-TOP-LEVEL (P.C. = 46)
SI:PROCESS-TOP-LEVEL (P.C. = 152)
 6-Feb-85 16:55:22-EST,3730;000000000000
Received: from MIT-FORD by MIT-OZ via Chaosnet; 6 Feb 85 16:55-EST
Date: Wednesday, 6 February 1985, 16:54-EST
From: Robert L. Krawitz <ZZZ.RLK at MIT-OZ>
To: BUG-LISPM at MIT-OZ, bug-oz at MIT-OZ

In System 98.80, CADR 3.10, ZMail 53.19, MIT-Specific 22.5,
microcode 309, ZM MIT gc*2, on Ford Prefect:


Insert your description of the circumstances here:

I was in dired.  I clicked right on the left-most column for that file,
clicked on change-properties, and clicked on protection (the number,
777777).  I typed c-K on the left-most column (to clear out the entire
line) and typed 770000. After clicking do it, I got this.  Is this maybe
an oz bug?  It looks like it was trying to set the right thing to the
right value.

Please don't look at the file unless you have to -- it's private.

>>ERROR: Illegal to change specified bits for OZ:OZ:<ZZZ.RLK>RANDOM.FLAME.1
Backtrace from the debugger:

FS:CHANGE-PROPERTIES-CHAOS (P.C. = 113)

 Arg 0 (HOST): #FS:TOPS20-CHAOS-HOST "MIT-OZ"
 Arg 1 (PATHNAME): #FS:TOPS20-PATHNAME "OZ:OZ:<ZZZ.RLK>RANDOM.FLAME.1"
 Arg 2 (ERROR-P): T
 Arg 3 (PROPERTIES): (:PROTECTION "770000")
Local 0 (STRING): " ERROR ACC F Illegal to change specified bits"
Local 1 (HOST-UNIT): #<HOST-UNIT 36045463>
Local 2 (PKT): #<CHAOS packet :STRING "T2063  ERROR ACC F Illegal to change specified bits" :STATUS CHAOS:RELEASED 23120063>
Local 3 (SUCCESS): NIL
Local 4 (IGNORE): NIL


(:METHOD FS:CHAOS-PATHNAME :CHANGE-PROPERTIES) (P.C. = 33)
  (SELF is #FS:TOPS20-PATHNAME "OZ:OZ:<ZZZ.RLK>RANDOM.FLAME.1")

 Arg 0 (OPERATION): :CHANGE-PROPERTIES
 Arg 1 (ERROR-P): T
 Rest arg (PROPERTIES): (:PROTECTION "770000")


FS:CHANGE-FILE-PROPERTIES (P.C. = 111)

 Arg 0 (PATHNAME): #FS:TOPS20-PATHNAME "OZ:OZ:<ZZZ.RLK>RANDOM.FLAME.1"
 Arg 1 (ERROR-P): T
 Rest arg (PROPERTIES): (:PROTECTION "770000")
Local 1: ((FS:FILE-ERROR) SI:FILE-RETRY-HANDLER #FS:TOPS20-PATHNAME "OZ:OZ:<ZZZ.RLK>RANDOM.FLAME.1")
Local 2: ((** SI:FILE-RETRY-HANDLER #FS:TOPS20-PATHNAME "OZ:OZ:<ZZZ.RLK>RANDOM.FLAME.1"))
Local 3 (NEW-PATHNAME): NIL


ZWEI:CHANGE-FILE-PROPERTIES (P.C. = 351)

 Arg 0 (PATHNAME): #FS:TOPS20-PATHNAME "OZ:OZ:<ZZZ.RLK>RANDOM.FLAME.1"
Local 0 (DIRECTORY): (#FS:TOPS20-PATHNAME "OZ:OZ:<ZZZ.RLK>RANDOM.FLAME.1" :PROTECTION "777777" :GENERATION-RETENTION-COUNT ...)
Local 1 (INDICATORS): (:NOT-BACKED-UP :AUTHOR :CREATION-DATE :REFERENCE-DATE ...)
Local 2 (VALUES): (T "ZZZ.RLK" 2685562435 2685563042 ...)
Local 3 (CHOICES): ((:NOT-BACKED-UP "Not Backed Up" :BOOLEAN) (:AUTHOR "Author" :STRING) (:CREATION-DATE "Creation Date" :DATE) (:REFERENCE-DATE "Reference Date" :DATE-OR-NEVER) ...)
Local 4 (CHANGES): (:PROTECTION "770000")
Local 5 (IND): :DONT-REAP
Local 6: NIL
Local 7: NIL
Local 8: NIL
Local 9 (L): ((** :DELETED :DONT-DELETE :DONT-DUMP ...) (** :ACCOUNT :AUTHOR :LINK-TO ...) (** :BLOCK-SIZE :BYTE-SIZE :GENERATION-RETENTION-COUNT ...) (** :CREATION-DATE :MODIFICATION-DATE) ...)
Local 10 (VAL): NIL
Local 11: NIL
Local 12 (NEW): NIL
Local 13: ("770000")
Local 14: (:PROTECTION "770000")


ZWEI:COM-DIRED-CHANGE-FILE-PROPERTIES (P.C. = 42)

Local 0 (NEW-PROPS): NIL
Local 1 (L): NIL


Remainder of stack:

ZWEI:COM-DIRED-MOUSE-MENU (P.C. = 116)
ZWEI:COMMAND-EXECUTE (P.C. = 115)
ZWEI:PROCESS-COMMAND-CHAR (P.C. = 65)
(:SELECT-METHOD ZWEI:PROCESS-SPECIAL-COMMAND :MOUSE-BUTTON) (P.C. = 157)
(:METHOD ZWEI:WINDOW :EDIT) (P.C. = 442)
(:INTERNAL (:METHOD ZWEI:ZMACS-WINDOW :COMBINED :EDIT) 0) (P.C. = 74)
FUNCALL (P.C. = 25)
(:METHOD ZWEI:DISPLAYER :AROUND :EDIT) (P.C. = 31)
(:METHOD ZWEI:ZMACS-WINDOW :COMBINED :EDIT) (P.C. = 47)
ZWEI:ZMACS-WINDOW-TOP-LEVEL (P.C. = 46)
SI:PROCESS-TOP-LEVEL (P.C. = 152)
 6-Feb-85 17:51:02-EST,1406;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 6 Feb 85 17:47-EST
Received: from SCRC-PEACE by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 173620; Wed 6-Feb-85 17:19:22-EST
Date: Wed, 6 Feb 85 17:16 EST
From: Charles Hornig <Hornig at SCRC-STONY-BROOK>
Subject: load-patches
To: Cory Myers <cory at MIT-BUGS-BUNNY>, BUG-LISPM at MIT-OZ
In-Reply-To: <850205181734.1.CORY@DAFFY-DUCK.MIT>
Message-ID: <850206171645.3.HORNIG@PEACE.SCRC.Symbolics.COM>

    Date: Tuesday, 5 February 1985, 18:17-EST
    From: Cory Myers <cory at MIT-BUGS-BUNNY>

    In Symbolics 3670 Release 6.0 Beta IIc, microcode TMC5-IO4-FPA-MIC 315,
    FEP 22, on Lisp Machine Daffy Duck:

    The first thing I typed to my newly cold-booted lisp machine was (load-patches).  It found no patches for system or hardcopy then blew up on zmail.

    >>Error: The logical pathname SYS: ZMAIL; PATCH; is not defined
    While in the function (:METHOD FS:LOGICAL-HOST :TRANSLATE-RAW)  (:METHOD FS:LOGICAL-HOST :TRANSLATE)  (:METHOD FS:LOGICAL-PATHNAME :TRANSLATED-PATHNAME)

This is because release 6 has never really been installed at MIT.  A
world-load was brought over for namespace system beta-testing, but the
source tape, patch tape, etc. have never been loaded at MIT.  It's not
surprising that the Zmail patch directory doesn't exist.  This will work
properly once MIT installs release 6 for real.
 7-Feb-85 00:56:16-EST,729;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 7 Feb 85 00:56-EST
Date: Thursday, 7 February 1985, 00:55-EST
From: CJL at MIT-OZ
Sender: bug-lispm at MIT-OZ
Subject: Disk save thinks I'm saving to the current load when I'm not
To: BUG-LISPM at MIT-OZ
Message-ID: <850207005525.8.FILE-SERVER@REAGAN.MIT>

In Symbolics 3600 Release 6.0 Beta IIc, microcode TMC5-MIC 315,
on Lisp Machine Ronald Reagan:

If the current load is fep0:>MIT-6-0-Beta-IIc.load.2, and I disk save to
fep0:>MIT-6-0-Beta-IIc.load.3, It acts as if I'm disk saving to the same
world load from which I booted the machine, even though it's a different
load. Does it matter that the load world command in the fep doesn't
mention a version number? 
 7-Feb-85 22:53:13-EST,1291;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 7 Feb 85 22:53-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 174666; Thu 7-Feb-85 21:59:48-EST
Date: Thursday, 7 February 1985, 21:55-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: Disk save thinks I'm saving to the current load when I'm not
To: CJL at MIT-OZ, BUG-LISPM at MIT-OZ
In-Reply-To: <850207005525.8.FILE-SERVER@REAGAN.MIT>
Message-ID: <850207215535.9.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Thursday, 7 February 1985, 00:55-EST
    From: CJL at MIT-OZ

    In Symbolics 3600 Release 6.0 Beta IIc, microcode TMC5-MIC 315,
    on Lisp Machine Ronald Reagan:

    If the current load is fep0:>MIT-6-0-Beta-IIc.load.2, and I disk save to
    fep0:>MIT-6-0-Beta-IIc.load.3, It acts as if I'm disk saving to the same
    world load from which I booted the machine, even though it's a different
    load. Does it matter that the load world command in the fep doesn't
    mention a version number? 

It doesn't trust the FEP, so it compares the pathnames without versions.
There were some changes in this area since BetaIIc to make it do the
right thing (see if any pages from the world are still in use).  This
probably came out in the wash.
 8-Feb-85 16:17:47-EST,1712;000000000000
Received: from MIT-APIARY-5 by MIT-OZ via Chaosnet; 8 Feb 85 16:17-EST
Date: Friday, 8 February 1985, 16:16-EST
From: Henry Lieberman <Henry at MIT-OZ>
Subject: Wildcard lossage
To: BUG-LISPM at MIT-OZ
Message-ID: <850208161658.4.HENRY@APIARY-5.MIT>

In Symbolics 3600 Release 6.0 Beta IIc, microcode TMC5-MIC 315, FEP 18, on Lisp Machine Apiary-5:

I tried to copy Oz:<Henry>*.* to AP6: 

>>Error: Attempt to translate pathname OZ:OZ:<HENRY>3D.BIN.2, but it doesn't match the pattern.
         The translation was OZ:PS:<HENRY>*.*  AP6:>Henry>*.*.
While in the function (:METHOD FS:PATHNAME :TRANSLATE-WILD-PATHNAME)  (:PROPERTY SI:COM-COPY-FILE SI:CP-FUNCTION)  SI:COM-COPY-FILE

(:METHOD FS:PATHNAME :TRANSLATE-WILD-PATHNAME):  (P.C. = 26)
   Arg 0 (SELF): #<TOPS20-PATHNAME "OZ:PS:<HENRY>*.*">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:PATHNAME -- 8. IV's, 1. FL's 106506473>
   Arg 2 (OPERATION): :TRANSLATE-WILD-PATHNAME
   Arg 3 (WILD-PATHNAME): #<LMFS-PATHNAME "AP6:>Henry>*.*">
   Arg 4 (SOURCE-PATHNAME): #<TOPS20-PATHNAME "OZ:OZ:<HENRY>3D.BIN.2">
   Local 5 (PATTERN): #<TOPS20-PATHNAME "OZ:PS:<HENRY>*.*.*">

(:PROPERTY SI:COM-COPY-FILE SI:CP-FUNCTION):  (P.C. = 167)
   Arg 0 (FROM-FILE): #<TOPS20-PATHNAME "OZ:PS:<HENRY>*.*">
   Arg 1 (TO-FILE): #<LMFS-PATHNAME "AP6:>Henry>*.*">
   Arg 2 (BYTE-SIZE): NIL
   Arg 3 (COPY-PROPERTIES): (:AUTHOR :CREATION-DATE)
   Arg 4 (CREATE-DIRECTORIES): :QUERY-EACH
   Arg 5 (MODE): :DEFAULT
   Arg 6 (QUERY-EACH): :NO

SI:COM-COPY-FILE:  (P.C. = 42)  (from SYS: CP; FILE-COMMANDS)
   Arg 0 (FROM-FILE): #<TOPS20-PATHNAME "OZ:PS:<HENRY>*.*">
   Arg 1 (TO-FILE): #<LMFS-PATHNAME "AP6:>Henry>*.*">
   Rest arg: NIL

 8-Feb-85 17:29:32-EST,1093;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 8 Feb 85 17:29-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 175214; Fri 8-Feb-85 17:31:56-EST
Date: Friday, 8 February 1985, 17:28-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: Wildcard lossage
To: Henry Lieberman <Henry at MIT-OZ>, BUG-LISPM at MIT-OZ
In-Reply-To: <850208161658.4.HENRY@APIARY-5.MIT>
Message-ID: <850208172840.1.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Friday, 8 February 1985, 16:16-EST
    From: Henry Lieberman <Henry at MIT-OZ>

    In Symbolics 3600 Release 6.0 Beta IIc, microcode TMC5-MIC 315, FEP 18, on Lisp Machine Apiary-5:

    I tried to copy Oz:<Henry>*.* to AP6: 

I believe you need to copy OZ:<Henry>*.*.* to AP6:

    >>Error: Attempt to translate pathname OZ:OZ:<HENRY>3D.BIN.2, but it doesn't match the pattern.
	     The translation was OZ:PS:<HENRY>*.*  AP6:>Henry>*.*.
    While in the function (:METHOD FS:PATHNAME :TRANSLATE-WILD-PATHNAME)  (:PROPERTY SI:COM-COPY-FILE SI:CP-FUNCTION)  SI:COM-COPY-FILE

 8-Feb-85 17:53:09-EST,3170;000000000000
Received: from MIT-APIARY-5 by MIT-OZ via Chaosnet; 8 Feb 85 17:52-EST
Date: Friday, 8 February 1985, 17:52-EST
From: Henry Lieberman <Henry at MIT-OZ>
Subject: Compiler bug
To: BUG-LISPM at MIT-OZ
Message-ID: <850208175212.8.HENRY@APIARY-5.MIT>

In Symbolics 3600 Release 6.0 Beta IIc, microcode TMC5-MIC 315, FEP 18, on Lisp Machine Apiary-5:

While trying to compile the following ...

(DEFUN TINKER-WITH-COLOR ()
       (COND ((NOT (STATUS FEATURE COLOR))
	      (SETQ COLOR T BW NIL)
	      (LOAD "<Henry>SLmCt")))
       (SETUP-TINKER-FRAME)
       (STARTDISPLAY)
       (RESTART-TINKER NIL))

>>Trap: The argument given to the CDR instruction, SYS:REAL-ARGLIST, was not a locative, a list, or NIL.
While in the function SI:COMPILED-FUNCTION-DEBUGGING-INFO  DEBUGGING-INFO  SI:DECLARED-DEFINITION-INTERNAL
While compiling TINKER-WITH-COLOR

SI:COMPILED-FUNCTION-DEBUGGING-INFO:  (P.C. = 6)
   Arg 0 (FUNCTION): (SI:DIGESTED-LAMBDA (LAMBDA (&REST IGNORE) (FMAKUNBOUND (QUOTE STARTDISPLAY)) (REMPROP (QUOTE STARTDISPLAY) (QUOTE :SOURCE-FILE-NAME)) (LET (**) (LOAD "<HENRY>LMT")) (APPLY (FUNCTION STARTDISPLAY) IGNORE)) NIL 257 327680 NIL (&REST IGNORE) NIL (FMAKUNBOUND (QUOTE STARTDISPLAY)) (REMPROP (QUOTE STARTDISPLAY) (QUOTE :SOURCE-FILE-NAME)) ...)

DEBUGGING-INFO:  (P.C. = 142)
   Arg 0 (FUNCTION): #<LEXICAL-CLOSURE (LAMBDA ** ** ** ...) 23412740>

SI:DECLARED-DEFINITION-INTERNAL:  (P.C. = 117)
   Arg 0 (FUNCTION): STARTDISPLAY

SI:CACHED-LOCAL-DECLARATION:  (P.C. = 7)
   Arg 0 (FUNCTION): SI:DECLARED-DEFINITION-INTERNAL
   Arg 1 (ARG): STARTDISPLAY

SYS:DECLARED-DEFINITION:  (P.C. = 4)
   Arg 0 (FUNCTION): STARTDISPLAY

COMPILER:COLLECT-TOP-LEVEL-MACROS-1:  (P.C. = 25)
   Arg 0 (EXP): (STARTDISPLAY)

COMPILER:COLLECT-TOP-LEVEL-MACROS-1:  (P.C. = 74)
   Arg 0 (EXP): ((COND ((NOT **) (SETQ COLOR T BW NIL) (LOAD "<Henry>SLmCt"))) (SETUP-TINKER-FRAME) (STARTDISPLAY) (RESTART-TINKER NIL))

COMPILER:COLLECT-TOP-LEVEL-MACROS:  (P.C. = 5)
   Arg 0 (EXP): ((COND ((NOT **) (SETQ COLOR T BW NIL) (LOAD "<Henry>SLmCt"))) (SETUP-TINKER-FRAME) (STARTDISPLAY) (RESTART-TINKER NIL))

Rest of stack:
COMPILER:PHASE-1-FUNCTION-DEFINITION:  (P.C. = 13)
COMPILER:PHASE-1-EXTERNAL-FUNCTION:  (P.C. = 35)
COMPILER:RUN-PHASE-1-FUNCTION:  (P.C. = 73)
COMPILER:COMPILE-DEFINITION-1:  (P.C. = 10)
COMPILER:COMPILE-DEFINITION:  (P.C. = 104)
(:INTERNAL COMPILER:COMPILE-TO-CORE 0 (:DUMP-DEFINITION)):  (P.C. = 5)
COMPILER:COMPILE-TO-CORE:  (P.C. = 12)
COMPILER:COMPILE-FORM-FUNCTION:  (P.C. = 41)
COMPILER:COMPILE-FROM-STREAM-1:  (P.C. = 326)
COMPILER:PROCESS-FORMS-FROM-STREAM:  (P.C. = 117)
COMPILER:COMPILE-FROM-STREAM:  (P.C. = 237)
ZWEI:COMPILE-INTERVAL:  (P.C. = 142)
ZWEI:COMPILE-PRINT-INTERVAL:  (P.C. = 121)
ZWEI:COMPILE-DEFINITION-INTERNAL:  (P.C. = 100)
ZWEI:COM-COMPILE-REGION:  (P.C. = 5)
ZWEI:COM-EXTENDED-COMMAND:  (P.C. = 27)
ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 233)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 60)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 51)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
 9-Feb-85 16:03:05-EST,4449;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 9 Feb 85 16:01-EST
Date: Saturday, 9 February 1985, 16:00-EST
From: A Lisp Machine <LISPM at MIT-MC>
Subject: LISP-MACHINE too hairy for VMS pathnames.
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10,
Experimental RELATUS 131.280, FEP 22, on Lisp Machine Jim Morrison:

While trying to do an (si:full-gc :system-release t).

>>Error: ("S" "R5" "LISP-MACHINE") is an invalid directory for FS:VMS-PATHNAME
While in the function (:METHOD FS:PATHNAME :VALIDATE-COMPONENT)  (:METHOD FS:PATHNAME :VALIDATE)  (:METHOD FS:PATHNAME-HASH-TABLE-MIXIN :GET-PATHNAME)

(:METHOD FS:PATHNAME :VALIDATE-COMPONENT):  (P.C. = 40)
   Arg 0 (SELF): #<VMS-PATHNAME "PIG:USRD$:FOO.LSP">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:PATHNAME -- 0. IV's, 1. FL's 100030364>
   Arg 2 (OPERATION): :VALIDATE-COMPONENT
   Arg 3 (TEST-ARG): ("S" "R5" "LISP-MACHINE")
   Arg 4 (TEST-ARG-LOC): #<DTP-LOCATIVE 26127430>
   Arg 5 (VALID-MSG): :RAW-DIRECTORY
   Arg 6 (TEST-MSG): :VALID-DIRECTORY-P
   Arg 7 (CASE-MSG): :CASE-DIRECTORY
   Arg 8 (UNCASE-MSG): :UNCASE-DIRECTORY
   Arg 9 (COMPONENT): :DIRECTORY
   Arg 10 (PRETTY-NAME): "directory"

(:METHOD FS:PATHNAME :VALIDATE):  (P.C. = 57)
   Arg 0 (SELF): #<VMS-PATHNAME "PIG:USRD$:FOO.LSP">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:PATHNAME -- 0. IV's, 1. FL's 100030364>
   Arg 2 (OPERATION): :VALIDATE

(:METHOD FS:PATHNAME-HASH-TABLE-MIXIN :GET-PATHNAME):  (P.C. = 27)
   Arg 0 (SELF): #<CASE-INSENSITIVE-PATHNAME-HASH-TABLE PYGMALION>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:PATHNAME-HASH-TABLE-MIXIN -- 1. IV's, 0. FL's 55371250>
   Arg 2 (OPERATION): :GET-PATHNAME
   Arg 3 (DEV): "USRD$"
   Arg 4 (DIR): ("S" "R5" "LISP-MACHINE")
   Arg 5 (NAM): "FOO"
   Arg 6 (TYP): "LSP"
   Arg 7 (VRS): :NEWEST
   Arg 8 (KEY): ("USRD$" ("S" "R5" "LISP-MACHINE") "FOO" "LSP" :NEWEST)

(:METHOD NET:PATHNAME-HOST-MIXIN :GET-PATHNAME):  (P.C. = 27)
   Arg 0 (SELF): #<VMS-HOST PYGMALION 77175117>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NET:PATHNAME-HOST-MIXIN -- 2. IV's, 0. FL's 55434651>
   Arg 2 (OPERATION): :GET-PATHNAME
   Arg 3 (DEV): "USRD$"
   Arg 4 (DIR): ("S" "R5" "LISP-MACHINE")
   Arg 5 (NAM): "FOO"
   Arg 6 (TYP): "LSP"
   Arg 7 (VRS): :NEWEST

FS:MAKE-PATHNAME-1:  (P.C. = 562)
   Rest arg (OPTIONS): (:DEFAULT-HOST #<VMS-HOST PYGMALION 77175117> :DEFAULT-DEVICE "SYS$DISK" :DEFAULT-DIRECTORY :WILD :DEFAULT-NAME :WILD :DEFAULT-TYPE :WILD ...)

(:METHOD FS:PATHNAME :NEW-PATHNAME):  (P.C. = 21)
   Arg 0 (SELF): #<VMS-PATHNAME "PIG:SYS$DISK:[*]*.*;*">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:PATHNAME -- 0. IV's, 1. FL's 100030364>
   Arg 2 (OPERATION): :NEW-PATHNAME
   Rest arg (OPTIONS): (:RAW-DEVICE "USRD$" :RAW-DIRECTORY ("S" "R5" "LISP-MACHINE") :RAW-NAME "FOO" :RAW-TYPE "LSP" :VERSION :NEWEST)

(:METHOD FS:VMS-MAILBOX-PATHNAME-MIXIN :COMBINED :NEW-PATHNAME):  (P.C. = 37)
   Arg 0 (SELF): #<VMS-PATHNAME "PIG:SYS$DISK:[*]*.*;*">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:VMS-MAILBOX-PATHNAME-MIXIN -- 2. IV's, 2. FL's 100030371>
   Rest arg (.DAEMON-CALLER-ARGS.): (:NEW-PATHNAME :RAW-DEVICE "USRD$" :RAW-DIRECTORY ("S" "R5" "LISP-MACHINE") :RAW-NAME "FOO" :RAW-TYPE "LSP" :VERSION ...)

(:METHOD FS:PATHNAME :TRANSLATE-WILD-PATHNAME):  (P.C. = 106)
   Arg 0 (SELF): #<LOGICAL-PATHNAME "SYS: *; *.*.*">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:PATHNAME -- 0. IV's, 1. FL's 55400531>
   Arg 2 (OPERATION): :TRANSLATE-WILD-PATHNAME
   Arg 3 (WILD-PATHNAME): #<VMS-PATHNAME "PIG:USRD$:[S.R5.*]*.*;*">
   Arg 4 (SOURCE-PATHNAME): #<LOGICAL-PATHNAME "SYS: LISP-MACHINE; FOO.LISP.NEWEST">

Rest of stack:
(:METHOD FS:PATHNAME :TRANSLATE-WILD-PATHNAME-REVERSIBLE):  (P.C. = 11)
(:METHOD FS:LOGICAL-PATHNAME :TRANSLATED-PATHNAME):  (P.C. = 66)
(:INTERNAL (:METHOD FS:LOGICAL-PATHNAME :COMBINED :TRANSLATED-PATHNAME) 0.):  (P.C. = 7)
(:METHOD FS:LOGICAL-PATHNAME :WHOPPER :TRANSLATED-PATHNAME):  (P.C. = 21)
(:METHOD FS:LOGICAL-PATHNAME :COMBINED :TRANSLATED-PATHNAME):  (P.C. = 11)
FS:FULL-GC-FLUSH-UNTRANSLATABLE-LOGICAL-PATHNAMES:  (P.C. = 51)
SI:*EVAL:  (P.C. = 370)
INITIALIZATIONS:  (P.C. = 42)
SI:FULL-GC:  (P.C. = 42)
SI:*EVAL:  (P.C. = 370)
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 200)
SI:LISP-COMMAND-LOOP:  (P.C. = 115)
SI:LISP-TOP-LEVEL1:  (P.C. = 22)
SI:LISP-TOP-LEVEL:  (P.C. = 7)
10-Feb-85 02:14:38-EST,572;000000000000
Mail-From: PAO created at 10-Feb-85 02:14:31
Date: 10 Feb 1985  02:14 EST (Sun)
Message-ID: <PAO.12086490361.BABYL@MIT-OZ>
From: Pat O'Donnell <PAO@MIT-OZ>
To:   bug-minits@MIT-OZ, bug-lispm@MIT-OZ
Subject: Time warp


Symbolics:  Years ahead of its time...


[PHOTO:  Recording initiated  Sun 10-Feb-85 2:11am]

 MIT TOPS-20 Command Processor 5(312125)-2
@times prancer
SCRC-PRANCER        8-Nov-2031 00:17:32   1475013946
@times blitzen
SPA-BLITZEN        21-Dec-2035 18:30:13   1605025102
@pop

[PHOTO:  Recording terminated  Sun 10-Feb-85 2:11am]
10-Feb-85 12:30:44-EST,491;000000000000
Mail-From: ZVONA created at 10-Feb-85 12:30:37
Date: Sun, 10 Feb 1985  12:30 EST
Message-ID: <ZVONA.12086602522.BABYL@MIT-OZ>
From: ZVONA@MIT-OZ
To:   bug-lispm@MIT-OZ
Subject:defstruct feature suggestions

IWBNI constructors had more useful arglist info than just (X).  

IWBNI zwei knew to indent values a space or two over from keys, eg

(make-mumble frotz gloob
	     grubble
	      (really-hairy-thing-that-wouldn/'t-have-fit-on-the-last-line)
	     some-other-slot 19.)
10-Feb-85 22:03:19-EST,3690;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 10 Feb 85 22:03-EST
Date: Sunday, 10 February 1985, 22:02-EST
From:  <TIM at MIT-MC>
Subject: Another probably unreproduceable bug
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 22, on Lisp Machine Duane Allman:

Huh?

>>Error: Attempt to :UNTYI something different than last :TYI'ed.
While in the function (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :UNTYI)  (:METHOD ZWEI:EDITOR-TYPEOUT-WINDOW :MORE-EXCEPTION)  (:METHOD TV:SHEET :HANDLE-EXCEPTIONS)

(:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :UNTYI):  (P.C. = 24)
   Arg 0 (SELF): #<FILE-INPUT-CHARACTER-STREAM "MC: TIM; LOAD >" 717401>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:BASIC-BUFFERED-INPUT-STREAM -- 3. IV's, 0. FL's 52657410>
   Arg 2 (OPERATION): :UNTYI
   Arg 3 (CH): 116
   Local 4 (NEW-INDEX): 437

(:METHOD ZWEI:EDITOR-TYPEOUT-WINDOW :MORE-EXCEPTION):  (P.C. = 33)
   Arg 0 (SELF): #<EDITOR-TYPEOUT-WINDOW Editor Typeout Window 5 3722260 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:EDITOR-TYPEOUT-WINDOW -- 0. IV's, 1. FL's 53275761>
   Arg 2 (OPERATION): :MORE-EXCEPTION

(:METHOD TV:SHEET :HANDLE-EXCEPTIONS):  (P.C. = 30)
   Arg 0 (SELF): #<EDITOR-TYPEOUT-WINDOW Editor Typeout Window 5 3722260 exposed>
   Arg 1 (SELF-MAPPING-TABLE): TV:SHEET
   Arg 2 (OPERATION): :HANDLE-EXCEPTIONS

(:METHOD TV:SHEET :STRING-OUT):  (P.C. = 113)
   Arg 0 (SELF): #<EDITOR-TYPEOUT-WINDOW Editor Typeout Window 5 3722260 exposed>
   Arg 1 (SELF-MAPPING-TABLE): TV:SHEET
   Arg 2 (OPERATION): :STRING-OUT
   Arg 3 (STRING): "~&Globalizing ~S into package ~A."
   Arg 4 (START): 2
   Arg 5 (END): 14

(:METHOD TV:TYPEOUT-WINDOW-WITH-MOUSE-SENSITIVE-ITEMS :COMBINED :STRING-OUT):  (P.C. = 16)
   Arg 0 (SELF): #<EDITOR-TYPEOUT-WINDOW Editor Typeout Window 5 3722260 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:TYPEOUT-WINDOW-WITH-MOUSE-SENSITIVE-ITEMS -- 0. IV's, 15. FL's 53275661>
   Rest arg (.DAEMON-CALLER-ARGS.): (:STRING-OUT "~&Globalizing ~S into package ~A." 2 14)

FORMAT:FORMAT-CTL-STRING:  (P.C. = 43)
   Arg 0 (ARGS): (CHAR #<Package GLOBAL 21402430>)
   Arg 1 (CTL-STRING-initialization): "~&Globalizing ~S into package ~A."

FORMAT:  (P.C. = 70)
   Arg 0 (STREAM): #:TERMINAL-IO-SYN-STREAM
   Arg 1 (CTL-STRING-initialization): "~&Globalizing ~S into package ~A."
   Rest arg (ARGS): (CHAR #<Package GLOBAL 21402430>)

GLOBALIZE:  (P.C. = 114)
   Arg 0 (STRING): CHAR
   --Defaulted args:--
   Arg 1 (INTO-PACKAGE): #<Package GLOBAL 21402430>

Rest of stack:
SI:*EVAL:  (P.C. = 370)
SI:LOAD-BIN-OP-FORM:  (P.C. = 4)
SI:BIN-LOAD-NEXT-COMMAND:  (P.C. = 24)
SI:BIN-LOAD-TOP-LEVEL:  (P.C. = 6)
(:METHOD ZWEI:MAJOR-MODE :DEFAULT :LOAD-BINARY-FILE):  (P.C. = 4)
SI:BIN-LOAD-FILE-INTERNAL:  (P.C. = 131)
FS:LOAD-STREAM:  (P.C. = 16)
LOAD:  (P.C. = 122)
SI:*EVAL:  (P.C. = 370)
PROGN:  (P.C. = 22)
SI:*EVAL:  (P.C. = 421)
COND:  (P.C. = 23)
SI:*EVAL:  (P.C. = 421)
LET:  (P.C. = 102)
SI:*EVAL:  (P.C. = 605)
SI:APPLY-LAMBDA:  (P.C. = 1106)
SYS:CALL-FUNNY-FUNCTION:  (P.C. = 26)
(LAMBDA (ENTRY) (LET (** **) (ZWEI:LOAD-FILE-INTO-ZMACS FILE) (UNLESS DONT-LOAD-P **))):
MAPCAR:  (P.C. = 35)
SI:*EVAL:  (P.C. = 370)
SI:READFILE-INTERNAL:  (P.C. = 77)
FS:LOAD-STREAM:  (P.C. = 16)
LOAD:  (P.C. = 122)
ZWEI:COM-LOAD-FILE:  (P.C. = 162)
ZWEI:COM-EXTENDED-COMMAND:  (P.C. = 27)
ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 214)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 41)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
10-Feb-85 23:30:52-EST,5686;000000000000
Received: from MIT-APIARY-5 by MIT-OZ via Chaosnet; 10 Feb 85 23:30-EST
Date: Sunday, 10 February 1985, 23:29-EST
From: Henry Lieberman <Henry at MIT-OZ>
Subject: Window creation bug
To: BUG-LISPM at MIT-OZ
Message-ID: <850210232908.4.HENRY@APIARY-5.MIT>

In Symbolics 3600 Release 6.0 Beta IIc, microcode TMC5-MIC 315, FEP 18, on Lisp Machine Apiary-5:

This code worked in 5.2

(DEFFLAVOR EDITOR-AND-TELNET-FRAME
           ()
           (TV:BORDERED-CONSTRAINT-FRAME)
           (:DEFAULT-INIT-PLIST
            :EXPOSE-P T
            :PANES `((EDITOR ZWEI:ZMACS-FRAME) (TELNET TELNET-PANE))
            :CONSTRAINTS `((STANDARD . ((WHOLE-THING)
                                        ((WHOLE-THING :HORIZONTAL
                                                      (:EVEN)
                                                      (EDITOR TELNET)
                                                      ((EDITOR 94 :CHARACTERS))
                                                      ((TELNET :EVEN)))))))
            :SELECTED-PANE 'EDITOR))

(DEFMETHOD (EDITOR-AND-TELNET-FRAME :NAME-FOR-SELECTION) ()
           (FORMAT NIL
                   "~A // ~A"
                   (SEND (SEND SELF :GET-PANE 'EDITOR) :NAME-FOR-SELECTION)
                   (SEND (SEND SELF :GET-PANE 'TELNET) :NAME-FOR-SELECTION)))

(SETQ W (TV:MAKE-WINDOW 'EDITOR-AND-TELNET-FRAME))

>>Error: The second argument (ARRAY) to ARRAY-DIMENSION-N, NIL, was of the wrong type.
         The function expected an array.
While in the function ARRAY-DIMENSION-N  (:METHOD TV:TEMPORARY-TYPEOUT-WINDOW-MIXIN :AFTER :DEEXPOSE)  (:INTERNAL (:METHOD TV:TEMPORARY-TYPEOUT-WINDOW :COMBINED :DEEXPOSE) 0)

ARRAY-DIMENSION-N:  (P.C. = 162)
   Arg 0 (N): 1
   Arg 1 (ARRAY): NIL
   Local 2 (DISPATCH): ARRAY
   Local 3 (NDIMS): NIL

(:METHOD TV:TEMPORARY-TYPEOUT-WINDOW-MIXIN :AFTER :DEEXPOSE):  (P.C. = 5)
   Arg 0 (SELF): #<TEMPORARY-TYPEOUT-WINDOW Temporary Typeout Window 4 553677 deactivated>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:TEMPORARY-TYPEOUT-WINDOW-MIXIN -- 6. IV's, 0. FL's 143220014>
   Arg 2 (OPERATION): :DEEXPOSE
   Rest arg (IGNORE): (:DEFAULT :NOOP)

(:INTERNAL (:METHOD TV:TEMPORARY-TYPEOUT-WINDOW :COMBINED :DEEXPOSE) 0):  (P.C. = 63)
   Arg 0 (SELF): #<TEMPORARY-TYPEOUT-WINDOW Temporary Typeout Window 4 553677 deactivated>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:TEMPORARY-TYPEOUT-WINDOW -- 0. IV's, 3. FL's 143217744>
   Arg 2 (.OPERATION.): :DEEXPOSE
   Rest arg (.DAEMON-CALLER-ARGS.): (:DEFAULT :NOOP)

(:METHOD TV:SHEET :WHOPPER :DEEXPOSE):  (P.C. = 100)
   Arg 0 (SELF): #<TEMPORARY-TYPEOUT-WINDOW Temporary Typeout Window 4 553677 deactivated>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:SHEET -- 0. IV's, 1. FL's 143217705>
   Arg 2 (.WHOPPER-CONTINUATION.): #<DTP-COMPILED-FUNCTION (:INTERNAL (:METHOD TV:TEMPORARY-TYPEOUT-WINDOW :COMBINED :DEEXPOSE) 0) 31055057>
   Arg 3 (.OLD-SELF-MAPPING-TABLE.): #<Map to flavor TV:TEMPORARY-TYPEOUT-WINDOW -- 0. IV's, 3. FL's 143217744>
   Arg 4 (.OPERATION.): :DEEXPOSE
   Rest arg (ARGS): (:DEFAULT :NOOP)

(:METHOD TV:TEMPORARY-TYPEOUT-WINDOW :COMBINED :DEEXPOSE):  (P.C. = 13)
   Arg 0 (SELF): #<TEMPORARY-TYPEOUT-WINDOW Temporary Typeout Window 4 553677 deactivated>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:TEMPORARY-TYPEOUT-WINDOW -- 0. IV's, 3. FL's 143217744>
   Arg 2 (.OPERATION.): :DEEXPOSE
   Rest arg (.DAEMON-CALLER-ARGS.): NIL
   Local 3 (.DAEMON-CALLER-ARGS.): (:DEFAULT :NOOP)

(:METHOD TELNET:NVT-WINDOW :COMBINED :CHANGE-OF-SIZE-OR-MARGINS):  (P.C. = 34)
   Arg 0 (SELF): #<TELNET-PANE Terminal 4 553553 deactivated>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TELNET:NVT-WINDOW -- 11. IV's, 16. FL's 21063416>
   Arg 2 (.OPERATION.): :CHANGE-OF-SIZE-OR-MARGINS
   Rest arg (.DAEMON-CALLER-ARGS.): (:LEFT 755 :TOP 1 :WIDTH 332 :HEIGHT 747)

(:DEFUN-METHOD TV:SYSTEM-SET-EDGES):  (P.C. = 356)
   Arg 0 (SELF): #<TELNET-PANE Terminal 4 553553 deactivated>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:ESSENTIAL-SET-EDGES -- 0. IV's, 1. FL's 21063462>
   Arg 2 (OPERATION): :SET-EDGES
   Arg 3 (NEW-LEFT): 755
   Arg 4 (NEW-TOP): 1
   Arg 5 (NEW-RIGHT): 1087
   Arg 6 (NEW-BOTTOM): 748
   Arg 7 (OPTION): NIL

(:METHOD TV:ESSENTIAL-SET-EDGES :SET-EDGES):  (P.C. = 10)
   Arg 0 (SELF): #<TELNET-PANE Terminal 4 553553 deactivated>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:ESSENTIAL-SET-EDGES -- 0. IV's, 1. FL's 21063462>
   Arg 2 (OPERATION): :SET-EDGES
   Rest arg (.ARGS.): (755 1 1087 748 NIL)

Rest of stack:
(:METHOD TELNET:TERMINAL-SCREEN :COMBINED :SET-EDGES):  (P.C. = 51)
TV:CONSTRAINT-FRAME-SET-EDGES:  (P.C. = 77)
TV:CONSTRAINT-FRAME-SET-EDGES:  (P.C. = 110)
(:DEFUN-METHOD TV:CONSTRAINT-FRAME-RECOMPUTE-CONFIGURATION):  (P.C. = 105)
(:METHOD TV:BASIC-CONSTRAINT-FRAME :AFTER :INIT):  (P.C. = 55)
(:METHOD TV:BORDERED-CONSTRAINT-FRAME :COMBINED :INIT):  (P.C. = 50)
TV:MAKE-WINDOW:  (P.C. = 66)
SI:*EVAL:  (P.C. = 403)
SETQ:  (P.C. = 24)
SI:*EVAL:  (P.C. = 165)
ZWEI:DO-IT-MULTIPLE-EVAL:  (P.C. = 21)  (from HENRYS-INIT: HENRY; ZTOP)
ZWEI:DO-IT-EVAL-PRINT:  (P.C. = 22)  (from HENRYS-INIT: HENRY; ZTOP)
ZWEI:DO-IT-EVAL-AND-PRINT-FORMS:  (P.C. = 11)  (from HENRYS-INIT: HENRY; ZTOP)
ZWEI:DO-IT:  (P.C. = 52)  (from HENRYS-INIT: HENRY; ZTOP)
ZWEI:COM-DO-IT:  (P.C. = 7)  (from HENRYS-INIT: HENRY; ZTOP)
ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 233)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 60)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 51)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
11-Feb-85 10:38:23-EST,1848;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 11 Feb 85 10:38-EST
Received: from SCRC-PEACE by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 175922; Mon 11-Feb-85 10:20:20-EST
Date: Mon, 11 Feb 85 10:16 EST
From: Charles Hornig <Hornig at SCRC-STONY-BROOK>
Subject: Window creation bug
To: Henry Lieberman <Henry at MIT-OZ>, BUG-LISPM at MIT-OZ
In-Reply-To: <850210232908.4.HENRY@APIARY-5.MIT>
Message-ID: <850211101602.1.HORNIG@PEACE.SCRC.Symbolics.COM>

    Date: Sunday, 10 February 1985, 23:29-EST
    From: Henry Lieberman <Henry at MIT-OZ>

    In Symbolics 3600 Release 6.0 Beta IIc, microcode TMC5-MIC 315, FEP 18, on Lisp Machine Apiary-5:

    This code worked in 5.2

    (DEFFLAVOR EDITOR-AND-TELNET-FRAME
	       ()
	       (TV:BORDERED-CONSTRAINT-FRAME)
	       (:DEFAULT-INIT-PLIST
		:EXPOSE-P T
		:PANES `((EDITOR ZWEI:ZMACS-FRAME) (TELNET TELNET-PANE))
		:CONSTRAINTS `((STANDARD . ((WHOLE-THING)
					    ((WHOLE-THING :HORIZONTAL
							  (:EVEN)
							  (EDITOR TELNET)
							  ((EDITOR 94 :CHARACTERS))
							  ((TELNET :EVEN)))))))
		:SELECTED-PANE 'EDITOR))

    (DEFMETHOD (EDITOR-AND-TELNET-FRAME :NAME-FOR-SELECTION) ()
	       (FORMAT NIL
		       "~A // ~A"
		       (SEND (SEND SELF :GET-PANE 'EDITOR) :NAME-FOR-SELECTION)
		       (SEND (SEND SELF :GET-PANE 'TELNET) :NAME-FOR-SELECTION)))

    (SETQ W (TV:MAKE-WINDOW 'EDITOR-AND-TELNET-FRAME))

    >>Error: The second argument (ARRAY) to ARRAY-DIMENSION-N, NIL, was of the wrong type.
	     The function expected an array.
    While in the function ARRAY-DIMENSION-N  (:METHOD TV:TEMPORARY-TYPEOUT-WINDOW-MIXIN :AFTER :DEEXPOSE)  (:INTERNAL (:METHOD TV:TEMPORARY-TYPEOUT-WINDOW :COMBINED :DEEXPOSE) 0)

This bug was found and fixed later in the beta test.  This should work
properly in the real release 6.
11-Feb-85 11:04:03-EST,4410;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 11 Feb 85 11:03-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 175974; Mon 11-Feb-85 11:03:26-EST
Date: Monday, 11 February 1985, 10:59-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: Compiler bug
To: Henry Lieberman <Henry at MIT-OZ>, BUG-LISPM at MIT-OZ
In-Reply-To: <850208175212.8.HENRY@APIARY-5.MIT>
Message-ID: <850211105906.4.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Friday, 8 February 1985, 17:52-EST
    From: Henry Lieberman <Henry at MIT-OZ>

    In Symbolics 3600 Release 6.0 Beta IIc, microcode TMC5-MIC 315, FEP 18, on Lisp Machine Apiary-5:

    While trying to compile the following ...

    (DEFUN TINKER-WITH-COLOR ()
	   (COND ((NOT (STATUS FEATURE COLOR))
		  (SETQ COLOR T BW NIL)
		  (LOAD "<Henry>SLmCt")))
	   (SETUP-TINKER-FRAME)
	   (STARTDISPLAY)
	   (RESTART-TINKER NIL))

This is certainly not enough information.  Where is the definition for
start-display?  Its function cell appears to be bound to an interpreted
lexical closure that, among other things, makes itself unbound, removes
it's :source-file-name and then loads a file.  Well, foo, after I woke
up and looked at the backtrace, the braindamage is apparent.  The code
for debugging-info
    (DEFUN DEBUGGING-INFO (FUNCTION)
      ...
      (:LEXICAL-CLOSURE
       (COMPILED-FUNCTION-DEBUGGING-INFO (%P-CONTENTS-OFFSET FUNCTION 1)))
      ...)
stupidly assumes that lexical closures are always
closing compiled functions.  ARGLIST and others may be similarly broken.
Despite the freeze, I'm going to try to get this fixed for the real 6.0.

    >>Trap: The argument given to the CDR instruction, SYS:REAL-ARGLIST, was not a locative, a list, or NIL.
    While in the function SI:COMPILED-FUNCTION-DEBUGGING-INFO  DEBUGGING-INFO  SI:DECLARED-DEFINITION-INTERNAL
    While compiling TINKER-WITH-COLOR

    SI:COMPILED-FUNCTION-DEBUGGING-INFO:  (P.C. = 6)
       Arg 0 (FUNCTION): (SI:DIGESTED-LAMBDA (LAMBDA (&REST IGNORE) (FMAKUNBOUND (QUOTE STARTDISPLAY)) (REMPROP (QUOTE STARTDISPLAY) (QUOTE :SOURCE-FILE-NAME)) (LET (**) (LOAD "<HENRY>LMT")) (APPLY (FUNCTION STARTDISPLAY) IGNORE)) NIL 257 327680 NIL (&REST IGNORE) NIL (FMAKUNBOUND (QUOTE STARTDISPLAY)) (REMPROP (QUOTE STARTDISPLAY) (QUOTE :SOURCE-FILE-NAME)) ...)

    DEBUGGING-INFO:  (P.C. = 142)
       Arg 0 (FUNCTION): #<LEXICAL-CLOSURE (LAMBDA ** ** ** ...) 23412740>

    SI:DECLARED-DEFINITION-INTERNAL:  (P.C. = 117)
       Arg 0 (FUNCTION): STARTDISPLAY

    SI:CACHED-LOCAL-DECLARATION:  (P.C. = 7)
       Arg 0 (FUNCTION): SI:DECLARED-DEFINITION-INTERNAL
       Arg 1 (ARG): STARTDISPLAY

    SYS:DECLARED-DEFINITION:  (P.C. = 4)
       Arg 0 (FUNCTION): STARTDISPLAY

    COMPILER:COLLECT-TOP-LEVEL-MACROS-1:  (P.C. = 25)
       Arg 0 (EXP): (STARTDISPLAY)

    COMPILER:COLLECT-TOP-LEVEL-MACROS-1:  (P.C. = 74)
       Arg 0 (EXP): ((COND ((NOT **) (SETQ COLOR T BW NIL) (LOAD "<Henry>SLmCt"))) (SETUP-TINKER-FRAME) (STARTDISPLAY) (RESTART-TINKER NIL))

    COMPILER:COLLECT-TOP-LEVEL-MACROS:  (P.C. = 5)
       Arg 0 (EXP): ((COND ((NOT **) (SETQ COLOR T BW NIL) (LOAD "<Henry>SLmCt"))) (SETUP-TINKER-FRAME) (STARTDISPLAY) (RESTART-TINKER NIL))

    Rest of stack:
    COMPILER:PHASE-1-FUNCTION-DEFINITION:  (P.C. = 13)
    COMPILER:PHASE-1-EXTERNAL-FUNCTION:  (P.C. = 35)
    COMPILER:RUN-PHASE-1-FUNCTION:  (P.C. = 73)
    COMPILER:COMPILE-DEFINITION-1:  (P.C. = 10)
    COMPILER:COMPILE-DEFINITION:  (P.C. = 104)
    (:INTERNAL COMPILER:COMPILE-TO-CORE 0 (:DUMP-DEFINITION)):  (P.C. = 5)
    COMPILER:COMPILE-TO-CORE:  (P.C. = 12)
    COMPILER:COMPILE-FORM-FUNCTION:  (P.C. = 41)
    COMPILER:COMPILE-FROM-STREAM-1:  (P.C. = 326)
    COMPILER:PROCESS-FORMS-FROM-STREAM:  (P.C. = 117)
    COMPILER:COMPILE-FROM-STREAM:  (P.C. = 237)
    ZWEI:COMPILE-INTERVAL:  (P.C. = 142)
    ZWEI:COMPILE-PRINT-INTERVAL:  (P.C. = 121)
    ZWEI:COMPILE-DEFINITION-INTERNAL:  (P.C. = 100)
    ZWEI:COM-COMPILE-REGION:  (P.C. = 5)
    ZWEI:COM-EXTENDED-COMMAND:  (P.C. = 27)
    ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
    ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
    (:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 233)
    (:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 60)
    ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 51)
    SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
11-Feb-85 11:38:16-EST,1232;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 11 Feb 85 11:33-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 176005; Mon 11-Feb-85 11:36:47-EST
Date: Monday, 11 February 1985, 11:32-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: defstruct feature suggestions
To: ZVONA at MIT-OZ, bug-lispm at MIT-OZ
In-Reply-To: <ZVONA.12086602522.BABYL@MIT-OZ>
Message-ID: <850211113241.0.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Sun, 10 Feb 1985  12:30 EST
    From: ZVONA@MIT-OZ

    IWBNI constructors had more useful arglist info than just (X).  

In Common Lisp, constructors are functions that take keyword-(in the
keyword package)-value pairs.

    IWBNI zwei knew to indent values a space or two over from keys, eg

    (make-mumble frotz gloob
		 grubble
		  (really-hairy-thing-that-wouldn/'t-have-fit-on-the-last-line)
		 some-other-slot 19.)

Given the above statement, this would look like
    (make-mumble :frotz gloob
		 :grubble
		 (really-hairy-thing-that-wouldn/'t-have-fit-on-the-last-line)
		 :some-other-slot 19.)
Are you willing to suggest that ALL &KEY values be indented, i.e., not
just those of defstruct constructors?
11-Feb-85 11:50:27-EST,6377;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 11 Feb 85 11:50-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 176024; Mon 11-Feb-85 11:46:06-EST
Date: Monday, 11 February 1985, 11:41-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: Window creation bug
To: Henry Lieberman <Henry at MIT-OZ>, BUG-LISPM at MIT-OZ
In-Reply-To: <850210232908.4.HENRY@APIARY-5.MIT>
Message-ID: <850211114158.3.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Sunday, 10 February 1985, 23:29-EST
    From: Henry Lieberman <Henry at MIT-OZ>

    In Symbolics 3600 Release 6.0 Beta IIc, microcode TMC5-MIC 315, FEP 18, on Lisp Machine Apiary-5:

    This code worked in 5.2

We reserve the right to reimplement parts of the system.  We reserve the
right not to document every line of code.  The window system interface
to the Terminal program (TELNET) changed between Release 5 and Release
6.  As it was in Release 5, is now and (probably) ever shall be, you
will have to read the source and convert your code accordingly.

    (DEFFLAVOR EDITOR-AND-TELNET-FRAME
	       ()
	       (TV:BORDERED-CONSTRAINT-FRAME)
	       (:DEFAULT-INIT-PLIST
		:EXPOSE-P T
		:PANES `((EDITOR ZWEI:ZMACS-FRAME) (TELNET TELNET-PANE))
		:CONSTRAINTS `((STANDARD . ((WHOLE-THING)
					    ((WHOLE-THING :HORIZONTAL
							  (:EVEN)
							  (EDITOR TELNET)
							  ((EDITOR 94 :CHARACTERS))
							  ((TELNET :EVEN)))))))
		:SELECTED-PANE 'EDITOR))

    (DEFMETHOD (EDITOR-AND-TELNET-FRAME :NAME-FOR-SELECTION) ()
	       (FORMAT NIL
		       "~A // ~A"
		       (SEND (SEND SELF :GET-PANE 'EDITOR) :NAME-FOR-SELECTION)
		       (SEND (SEND SELF :GET-PANE 'TELNET) :NAME-FOR-SELECTION)))

    (SETQ W (TV:MAKE-WINDOW 'EDITOR-AND-TELNET-FRAME))

    >>Error: The second argument (ARRAY) to ARRAY-DIMENSION-N, NIL, was of the wrong type.
	     The function expected an array.
    While in the function ARRAY-DIMENSION-N  (:METHOD TV:TEMPORARY-TYPEOUT-WINDOW-MIXIN :AFTER :DEEXPOSE)  (:INTERNAL (:METHOD TV:TEMPORARY-TYPEOUT-WINDOW :COMBINED :DEEXPOSE) 0)

    ARRAY-DIMENSION-N:  (P.C. = 162)
       Arg 0 (N): 1
       Arg 1 (ARRAY): NIL
       Local 2 (DISPATCH): ARRAY
       Local 3 (NDIMS): NIL

    (:METHOD TV:TEMPORARY-TYPEOUT-WINDOW-MIXIN :AFTER :DEEXPOSE):  (P.C. = 5)
       Arg 0 (SELF): #<TEMPORARY-TYPEOUT-WINDOW Temporary Typeout Window 4 553677 deactivated>
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:TEMPORARY-TYPEOUT-WINDOW-MIXIN -- 6. IV's, 0. FL's 143220014>
       Arg 2 (OPERATION): :DEEXPOSE
       Rest arg (IGNORE): (:DEFAULT :NOOP)

    (:INTERNAL (:METHOD TV:TEMPORARY-TYPEOUT-WINDOW :COMBINED :DEEXPOSE) 0):  (P.C. = 63)
       Arg 0 (SELF): #<TEMPORARY-TYPEOUT-WINDOW Temporary Typeout Window 4 553677 deactivated>
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:TEMPORARY-TYPEOUT-WINDOW -- 0. IV's, 3. FL's 143217744>
       Arg 2 (.OPERATION.): :DEEXPOSE
       Rest arg (.DAEMON-CALLER-ARGS.): (:DEFAULT :NOOP)

    (:METHOD TV:SHEET :WHOPPER :DEEXPOSE):  (P.C. = 100)
       Arg 0 (SELF): #<TEMPORARY-TYPEOUT-WINDOW Temporary Typeout Window 4 553677 deactivated>
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:SHEET -- 0. IV's, 1. FL's 143217705>
       Arg 2 (.WHOPPER-CONTINUATION.): #<DTP-COMPILED-FUNCTION (:INTERNAL (:METHOD TV:TEMPORARY-TYPEOUT-WINDOW :COMBINED :DEEXPOSE) 0) 31055057>
       Arg 3 (.OLD-SELF-MAPPING-TABLE.): #<Map to flavor TV:TEMPORARY-TYPEOUT-WINDOW -- 0. IV's, 3. FL's 143217744>
       Arg 4 (.OPERATION.): :DEEXPOSE
       Rest arg (ARGS): (:DEFAULT :NOOP)

    (:METHOD TV:TEMPORARY-TYPEOUT-WINDOW :COMBINED :DEEXPOSE):  (P.C. = 13)
       Arg 0 (SELF): #<TEMPORARY-TYPEOUT-WINDOW Temporary Typeout Window 4 553677 deactivated>
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:TEMPORARY-TYPEOUT-WINDOW -- 0. IV's, 3. FL's 143217744>
       Arg 2 (.OPERATION.): :DEEXPOSE
       Rest arg (.DAEMON-CALLER-ARGS.): NIL
       Local 3 (.DAEMON-CALLER-ARGS.): (:DEFAULT :NOOP)

    (:METHOD TELNET:NVT-WINDOW :COMBINED :CHANGE-OF-SIZE-OR-MARGINS):  (P.C. = 34)
       Arg 0 (SELF): #<TELNET-PANE Terminal 4 553553 deactivated>
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TELNET:NVT-WINDOW -- 11. IV's, 16. FL's 21063416>
       Arg 2 (.OPERATION.): :CHANGE-OF-SIZE-OR-MARGINS
       Rest arg (.DAEMON-CALLER-ARGS.): (:LEFT 755 :TOP 1 :WIDTH 332 :HEIGHT 747)

    (:DEFUN-METHOD TV:SYSTEM-SET-EDGES):  (P.C. = 356)
       Arg 0 (SELF): #<TELNET-PANE Terminal 4 553553 deactivated>
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:ESSENTIAL-SET-EDGES -- 0. IV's, 1. FL's 21063462>
       Arg 2 (OPERATION): :SET-EDGES
       Arg 3 (NEW-LEFT): 755
       Arg 4 (NEW-TOP): 1
       Arg 5 (NEW-RIGHT): 1087
       Arg 6 (NEW-BOTTOM): 748
       Arg 7 (OPTION): NIL

    (:METHOD TV:ESSENTIAL-SET-EDGES :SET-EDGES):  (P.C. = 10)
       Arg 0 (SELF): #<TELNET-PANE Terminal 4 553553 deactivated>
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:ESSENTIAL-SET-EDGES -- 0. IV's, 1. FL's 21063462>
       Arg 2 (OPERATION): :SET-EDGES
       Rest arg (.ARGS.): (755 1 1087 748 NIL)

    Rest of stack:
    (:METHOD TELNET:TERMINAL-SCREEN :COMBINED :SET-EDGES):  (P.C. = 51)
    TV:CONSTRAINT-FRAME-SET-EDGES:  (P.C. = 77)
    TV:CONSTRAINT-FRAME-SET-EDGES:  (P.C. = 110)
    (:DEFUN-METHOD TV:CONSTRAINT-FRAME-RECOMPUTE-CONFIGURATION):  (P.C. = 105)
    (:METHOD TV:BASIC-CONSTRAINT-FRAME :AFTER :INIT):  (P.C. = 55)
    (:METHOD TV:BORDERED-CONSTRAINT-FRAME :COMBINED :INIT):  (P.C. = 50)
    TV:MAKE-WINDOW:  (P.C. = 66)
    SI:*EVAL:  (P.C. = 403)
    SETQ:  (P.C. = 24)
    SI:*EVAL:  (P.C. = 165)
    ZWEI:DO-IT-MULTIPLE-EVAL:  (P.C. = 21)  (from HENRYS-INIT: HENRY; ZTOP)
    ZWEI:DO-IT-EVAL-PRINT:  (P.C. = 22)  (from HENRYS-INIT: HENRY; ZTOP)
    ZWEI:DO-IT-EVAL-AND-PRINT-FORMS:  (P.C. = 11)  (from HENRYS-INIT: HENRY; ZTOP)
    ZWEI:DO-IT:  (P.C. = 52)  (from HENRYS-INIT: HENRY; ZTOP)
    ZWEI:COM-DO-IT:  (P.C. = 7)  (from HENRYS-INIT: HENRY; ZTOP)
    ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
    ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
    (:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 233)
    (:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 60)
    ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 51)
    SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
11-Feb-85 14:19:21-EST,928;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 11 Feb 85 14:19-EST
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 176166; Mon 11-Feb-85 13:49:06-EST
Date: Monday, 11 February 1985, 13:45-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: LISP-MACHINE too hairy for VMS pathnames.
To: A Lisp Machine <LISPM at MIT-MC>
cc: BUG-LISPM at MIT-OZ
In-Reply-To: The message of 9 Feb 85 16:00-EST from A Lisp Machine <LISPM at MIT-MC>
Message-ID: <850211134501.0.MOON@EUPHRATES.SCRC.Symbolics.COM>

    Date: Saturday, 9 February 1985, 16:00-EST
    From: A Lisp Machine <LISPM at MIT-MC>

    In Symbolics 3600 System 242.356, Hardcopy 20.10,
    Experimental RELATUS 131.280, FEP 22, on Lisp Machine Jim Morrison:

    While trying to do an (si:full-gc :system-release t).

Please do not use the :system-release option to si:full-gc, even if your
name is A Lisp Machine!
11-Feb-85 20:29:49-EST,788;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 11 Feb 85 20:29-EST
Date: Monday, 11 February 1985, 20:08-EST
From: Charles Rich <RICH at MIT-OZ>
Subject: Documentation strings in user-defined defining forms
To: BUG-LISPM at OZ

In Release 4.5, Reasoning Utility Package 29.0, site configuration 88,
Rich, on PA Lisp Machine Avatar:

It should be easy for me to define my own defining form, DEFOO,
which takes a syntax like DEFUN, including the optional documentation
string of the form

(DEFOO X (A B)
  "Frobnicates the shnozzle"
  ...)

I suppose I could write the macro myself so as to check if the first
element of the body is a string and then put it on the right
property of X, etc. but it seems a shame to duplicate this
logic which is already in Defun, etc.

11-Feb-85 20:56:49-EST,2015;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 11 Feb 85 20:55-EST
Received: from SCRC-CONCORD by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 176467; Mon 11-Feb-85 20:59:29-EST
Date: Mon, 11 Feb 85 20:55 EST
From: Bernard S. Greenberg <BSG at SCRC-TENEX>
Subject: Documentation strings in user-defined defining forms
To: RICH at MIT-OZ, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 11 Feb 85 20:08-EST from Charles Rich <RICH at MIT-OZ>
Message-ID: <850211205523.5.BSG@CONCORD.SCRC.Symbolics.COM>

    Date: Monday, 11 February 1985, 20:08-EST
    From: Charles Rich <RICH at MIT-OZ>

    In Release 4.5, Reasoning Utility Package 29.0, site configuration 88,
    Rich, on PA Lisp Machine Avatar:

    It should be easy for me to define my own defining form, DEFOO,
    which takes a syntax like DEFUN, including the optional documentation
    string of the form

    (DEFOO X (A B)
      "Frobnicates the shnozzle"
      ...)

    I suppose I could write the macro myself so as to check if the first
    element of the body is a string and then put it on the right
    property of X, etc. but it seems a shame to duplicate this
    logic which is already in Defun, etc.

We recently figured this out, so we wrote the function.

(DEFUN FIND-BODY-DECLARATIONS (BODY ENV &OPTIONAL (IGNORE NIL LAMBDA-LIST-P))
  "Separate the declarations from the body."
  (DECLARE (VALUES DECLARATIONS REAL-BODY FIRST-FORM-ALREADY-MACRO-EXPANDED))
  (LOOP	WITH STRING-SEEN = NIL
	FOR REAL-BODY ON BODY
	FOR FORM = (FIRST REAL-BODY)
	FOR EXPANDED-FORM = FORM
	WHILE (TYPECASE FORM
		(:LIST (OR (EQ (FIRST FORM) 'DECLARE)
			   (EQ (FIRST (SETF EXPANDED-FORM (MACROEXPAND FORM ENV)))
			       'DECLARE)))
		(:STRING (AND LAMBDA-LIST-P
			      (NOT STRING-SEEN)
			      (REST1 REAL-BODY)
			      (SETF STRING-SEEN T))))
	COLLECT EXPANDED-FORM INTO DECLARATIONS
	FINALLY (RETURN (VALUES DECLARATIONS REAL-BODY (AND REAL-BODY EXPANDED-FORM)))))

It won't make release 6.
11-Feb-85 21:39:11-EST,2680;000000000000
Received: from SCRC-TENEX by MIT-OZ via Chaosnet; 11 Feb 85 21:39-EST
Date: 11 Feb 1985 2134-EST
From: Bernard S. Greenberg <BSG@SCRC-TENEX>
Subject: Re: Documentation strings in user-defined defining forms
To: RICH@MIT-OZ, BUG-LISPM@MIT-OZ
In-Reply-To: <850211205523.5.BSG@CONCORD.SCRC.Symbolics.COM>

Return-path: <BSG@SCRC-TENEX>
Received: from SCRC-STONY-BROOK by SCRC-TENEX with CHAOS; Mon 11-Feb-85 21:00:19-EST
Received: from MIT-OZ by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 176469; Mon 11-Feb-85 21:03:31-EST
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 11 Feb 85 20:55-EST
Received: from SCRC-CONCORD by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 176467; Mon 11-Feb-85 20:59:29-EST
Date: Mon, 11 Feb 85 20:55 EST
From: Bernard S. Greenberg <BSG at SCRC-TENEX>
Subject: Documentation strings in user-defined defining forms
To: RICH at MIT-OZ, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 11 Feb 85 20:08-EST from Charles Rich <RICH at MIT-OZ>
Message-ID: <850211205523.5.BSG@CONCORD.SCRC.Symbolics.COM>

    Date: Monday, 11 February 1985, 20:08-EST
    From: Charles Rich <RICH at MIT-OZ>

    In Release 4.5, Reasoning Utility Package 29.0, site configuration 88,
    Rich, on PA Lisp Machine Avatar:

    It should be easy for me to define my own defining form, DEFOO,
    which takes a syntax like DEFUN, including the optional documentation
    string of the form

    (DEFOO X (A B)
      "Frobnicates the shnozzle"
      ...)

    I suppose I could write the macro myself so as to check if the first
    element of the body is a string and then put it on the right
    property of X, etc. but it seems a shame to duplicate this
    logic which is already in Defun, etc.

We recently figured this out, so we wrote the function.

(DEFUN FIND-BODY-DECLARATIONS (BODY ENV &OPTIONAL (IGNORE NIL LAMBDA-LIST-P))
  "Separate the declarations from the body."
  (DECLARE (VALUES DECLARATIONS REAL-BODY FIRST-FORM-ALREADY-MACRO-EXPANDED))
  (LOOP	WITH STRING-SEEN = NIL
	FOR REAL-BODY ON BODY
	FOR FORM = (FIRST REAL-BODY)
	FOR EXPANDED-FORM = FORM
	WHILE (TYPECASE FORM
		(:LIST (OR (EQ (FIRST FORM) 'DECLARE)
			   (EQ (FIRST (SETF EXPANDED-FORM (MACROEXPAND FORM ENV)))
			       'DECLARE)))
		(:STRING (AND LAMBDA-LIST-P
			      (NOT STRING-SEEN)
			      (REST1 REAL-BODY)
			      (SETF STRING-SEEN T))))
	COLLECT EXPANDED-FORM INTO DECLARATIONS
	FINALLY (RETURN (VALUES DECLARATIONS REAL-BODY (AND REAL-BODY EXPANDED-FORM)))))

It won't make release 6.
----
This was doubtless from Hornig my console.  However, I would
have said the same thing, for whatever that's worth.
-------
11-Feb-85 22:42:22-EST,1735;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 11 Feb 85 22:42-EST
Date: Monday, 11 February 1985, 22:40-EST
From: Gavan Duffy <GAVAN at MIT-OZ>
Subject: Re: Documentation strings in user-defined defining forms
To: HORNIG at SCRC-TENEX, BSG at SCRC-TENEX, RICH at MIT-OZ,
    BUG-LISPM at MIT-OZ
In-reply-to: The message of 11 Feb 85 21:34-EST from Bernard S. Greenberg <BSG at SCRC-TENEX>

    Date: 11 Feb 1985 2134-EST
    From: Bernard S. Greenberg <BSG@SCRC-TENEX>
    Really-From: Hornig

	Date: Monday, 11 February 1985, 20:08-EST
	From: Charles Rich <RICH at MIT-OZ>

	In Release 4.5, Reasoning Utility Package 29.0, site configuration 88,
	Rich, on PA Lisp Machine Avatar:

	It should be easy for me to define my own defining form, DEFOO,
	which takes a syntax like DEFUN, including the optional documentation
	string of the form

et cetera

    We recently figured this out, so we wrote the function.

    (DEFUN FIND-BODY-DECLARATIONS (BODY ENV &OPTIONAL (IGNORE NIL LAMBDA-LIST-P))
      "Separate the declarations from the body."
      . . .)

et cetera

    It won't make release 6.

    This was doubtless from Hornig my console.  However, I would
    have said the same thing, for whatever that's worth.

But would you have given a clue about its use?

This code defines a function FOO, for which I can get an arglist and
documentation.  Is this what you intended?  

(DEFMACRO DEFFOO (NAME ARGS &BODY BODY)
  "Yikes"
  (SI:FIND-BODY-DECLARATIONS
     `(DEFUN ,NAME ,ARGS
	 . ,BODY)
     NAME))

(DEFFOO FOO (BAR)
  "Yow! Does this work yet?"
  (FORMAT T "~S" BAR))

If so, try macroexpanding the DEFFOO.  Also, evaluating it returns NIL.  Am I
broken, or are you?
11-Feb-85 22:45:58-EST,2579;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 11 Feb 85 22:45-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 176541; Mon 11-Feb-85 22:48:16-EST
Date: Monday, 11 February 1985, 22:44-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: Re: Documentation strings in user-defined defining forms
To: Bernard S. Greenberg <BSG at SCRC-TENEX>, RICH at MIT-OZ,
    BUG-LISPM at MIT-OZ
In-Reply-To: The message of 11 Feb 85 21:34-EST from Bernard S. Greenberg <BSG at SCRC-TENEX>
Message-ID: <850211224444.1.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: 11 Feb 1985 2134-EST
    From: Bernard S. Greenberg <BSG@SCRC-TENEX>

	Date: Mon, 11 Feb 85 20:55 EST
	From: Bernard S. Greenberg <BSG at SCRC-TENEX>
    
	    Date: Monday, 11 February 1985, 20:08-EST
	    From: Charles Rich <RICH at MIT-OZ>
    
	    In Release 4.5, Reasoning Utility Package 29.0, site configuration 88,
	    Rich, on PA Lisp Machine Avatar:
    
	    It should be easy for me to define my own defining form, DEFOO,
	    which takes a syntax like DEFUN, including the optional documentation
	    string of the form
    
	    (DEFOO X (A B)
	      "Frobnicates the shnozzle"
	      ...)
    
	    I suppose I could write the macro myself so as to check if the first
	    element of the body is a string and then put it on the right
	    property of X, etc. but it seems a shame to duplicate this
	    logic which is already in Defun, etc.
    
	We recently figured this out, so we wrote the function.
    
	(DEFUN FIND-BODY-DECLARATIONS (BODY ENV &OPTIONAL (IGNORE NIL LAMBDA-LIST-P))
	  "Separate the declarations from the body."
	  (DECLARE (VALUES DECLARATIONS REAL-BODY FIRST-FORM-ALREADY-MACRO-EXPANDED))
	  (LOOP	WITH STRING-SEEN = NIL
		FOR REAL-BODY ON BODY
		FOR FORM = (FIRST REAL-BODY)
		FOR EXPANDED-FORM = FORM
		WHILE (TYPECASE FORM
			(:LIST (OR (EQ (FIRST FORM) 'DECLARE)
				   (EQ (FIRST (SETF EXPANDED-FORM (MACROEXPAND FORM ENV)))
				       'DECLARE)))
			(:STRING (AND LAMBDA-LIST-P
				      (NOT STRING-SEEN)
				      (REST1 REAL-BODY)
				      (SETF STRING-SEEN T))))
		COLLECT EXPANDED-FORM INTO DECLARATIONS
		FINALLY (RETURN (VALUES DECLARATIONS REAL-BODY (AND REAL-BODY EXPANDED-FORM)))))
    
	It won't make release 6.

    This was doubtless from Hornig my console.  However, I would
    have said the same thing, for whatever that's worth.

OK, so what's the difference between FIND-BODY-DECLARATIONS (not in
Rel6) and SI:PARSE-BODY-DECLARATIONS (in Rel6)?
12-Feb-85 02:36:27-EST,1895;000000000000
Mail-From: RPK created at 12-Feb-85 02:36:22
Date: 12 Feb 1985  02:36 EST (Tue)
Message-ID: <RPK.12087018630.BABYL@MIT-OZ>
From: "Robert P. Krajewski" <RPK@MIT-OZ>
To:   "David A. Moon" <Moon@SCRC-TENEX>
Cc:   bug-lispm@MIT-OZ, bug-lmdoc@SCRC-TENEX, David Chapman <Zvona@MIT-OZ>
Subject: with-open-file doesn't handle -*-
In-reply-to: Msg of 1 Feb 1985 18:21-EST from David A. Moon <Moon at SCRC-TENEX>

    Date: Friday, 1 February 1985, 18:21-EST
    From: David A. Moon <Moon at SCRC-TENEX>

        Date: Friday, 1 February 1985, 14:44-EST
        From: David Chapman <Zvona at MIT-OZ>

        I find it counterintuitive that with-open-file doesn't make the package
        and so forth come out right for reads from the stream it creates.

    You might be opening a file with the intention of reading it some other
    If you want to bind the package and so forth there is a standard cliche
    involving the functions FS:READ-ATTRIBUTE-LIST, FS:FILE-ATTRIBUTE-BINDINGS,
    and PROGV.  BTW in the Release 5 documentation these are documented under
    different names, which I think are obsolete.  You can find them in the
    section a few pages after WITH-OPEN-FILE.

    bug-lispm: Maybe we should introduce a macro that packages up that
    standard cliche.

In the case of reading a series of forms from a file while obeying the
attribute list, in the MIT system there are the macros

FS:READING-FROM-FILE (form file) body....

	Execute the BODY for every FORM in FILE.

and

FS:READING-FROM-FILE-CASE (form file error) clauses....

	Execute a clause (a la CONDITION-CASE) if an error occurs:
	If no error occurs, use the :NO-ERROR clause for each
	FORM in the FILE.

Of course, these macros assume that you are reading Lisp forms from a text
file, though attribute lists could be also used for text files with non-Lisp
formatted data.
12-Feb-85 07:53:56-EST,1165;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 12 Feb 85 07:53-EST
Received: from SCRC-CONCORD by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 176660; Tue 12-Feb-85 07:57:42-EST
Date: Tue, 12 Feb 85 07:53 EST
From: Bernard S. Greenberg <BSG at SCRC-TENEX>
Subject: Re: Documentation strings in user-defined defining forms
To: DCP at SCRC-QUABBIN, RICH at MIT-OZ, BUG-LISPM at MIT-OZ
In-Reply-To: <850211224444.1.NFEP@NEPONSET.SCRC.Symbolics.COM>
Message-ID: <850212075343.8.BSG@CONCORD.SCRC.Symbolics.COM>

    Date: Monday, 11 February 1985, 22:44-EST
    From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>

    OK, so what's the difference between FIND-BODY-DECLARATIONS (not in
    Rel6) and SI:PARSE-BODY-DECLARATIONS (in Rel6)?

PARSE-BODY-DECLARATIONS does semantic analysis of the declarations and
figures out what they mean.  In doing this, it puts them in a form that
is somewhat difficult to put back together.

FIND-BODY-DECLARATIONS just parses off the declarations and
documentation string, making no attempt to understand them.  It returns
a list of the declaration forms themselves.

Each of them has a place.
12-Feb-85 07:57:12-EST,1873;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 12 Feb 85 07:57-EST
Received: from SCRC-CONCORD by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 176666; Tue 12-Feb-85 08:01:07-EST
Date: Tue, 12 Feb 85 07:57 EST
From: hornig at SCRC-TENEX
Sender: BSG at SCRC-TENEX
Subject: Re: Documentation strings in user-defined defining forms
To: GAVAN at MIT-OZ, RICH at MIT-OZ, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 11 Feb 85 22:40-EST from Gavan Duffy <GAVAN at MIT-OZ>
Message-ID: <850212075708.0.BSG@CONCORD.SCRC.Symbolics.COM>

    Date: Monday, 11 February 1985, 22:40-EST
    From: Gavan Duffy <GAVAN at MIT-OZ>

	Date: 11 Feb 1985 2134-EST
	From: Bernard S. Greenberg <BSG@SCRC-TENEX>
	Really-From: Hornig

	    Date: Monday, 11 February 1985, 20:08-EST
	    From: Charles Rich <RICH at MIT-OZ>

	    In Release 4.5, Reasoning Utility Package 29.0, site configuration 88,
	    Rich, on PA Lisp Machine Avatar:

	    It should be easy for me to define my own defining form, DEFOO,
	    which takes a syntax like DEFUN, including the optional documentation
	    string of the form

    et cetera

	We recently figured this out, so we wrote the function.

	(DEFUN FIND-BODY-DECLARATIONS (BODY ENV &OPTIONAL (IGNORE NIL LAMBDA-LIST-P))
	  "Separate the declarations from the body."
	  . . .)

    et cetera

	It won't make release 6.

	This was doubtless from Hornig my console.  However, I would
	have said the same thing, for whatever that's worth.

    But would you have given a clue about its use?

I thought it was clear from the code.  Here is an example:

(defmacro common-lisp-defun (name arglist &body body)
   (multiple-value-bind (declarations real-body)
          (find-body-declarations body nil)
       `(defun ,name ,arglist
            ,@declarations
	    (block ,name
	       ,@real-body))))
12-Feb-85 08:01:21-EST,1233;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 12 Feb 85 08:01-EST
Received: from SCRC-CONCORD by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 176662; Tue 12-Feb-85 07:58:00-EST
Date: Tue, 12 Feb 85 07:54 EST
From: hornig at SCRC-TENEX
Sender: BSG at SCRC-TENEX
Subject: Re: Documentation strings in user-defined defining forms
To: DCP at SCRC-QUABBIN, RICH at MIT-OZ, BUG-LISPM at MIT-OZ
In-Reply-To: <850211224444.1.NFEP@NEPONSET.SCRC.Symbolics.COM>
Supersedes: <850212075343.8.BSG@CONCORD.SCRC.Symbolics.COM>
Message-ID: <850212075401.9.BSG@CONCORD.SCRC.Symbolics.COM>

    Date: Monday, 11 February 1985, 22:44-EST
    From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>

    OK, so what's the difference between FIND-BODY-DECLARATIONS (not in
    Rel6) and SI:PARSE-BODY-DECLARATIONS (in Rel6)?

PARSE-BODY-DECLARATIONS does semantic analysis of the declarations and
figures out what they mean.  In doing this, it puts them in a form that
is somewhat difficult to put back together.

FIND-BODY-DECLARATIONS just parses off the declarations and
documentation string, making no attempt to understand them.  It returns
a list of the declaration forms themselves.

Each of them has a place.
12-Feb-85 09:01:09-EST,571;000000000000
Received: from MIT-LISPM-23 by MIT-OZ via Chaosnet; 12 Feb 85 09:00-EST
Date: Tuesday, 12 February 1985, 09:00-EST
From: Rodney A. Brooks <Brooks at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In System 98.80, CADR 3.10, ZMail 53.19, MIT-Specific 22.5,
microcode 309, ZM MIT, on Lisp Machine Twenty-three:


The keyboard on this machine was sending about 10 characters when the c key was hit.
So I swapped it with the keyboard on CADR-4, whose screen was already blank, so
presumably the machine is broken.

(Note this is cadr-23 but its monitor is labelled cadr-32.)
12-Feb-85 14:14:36-EST,270;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 12 Feb 85 14:14-EST
Date: Tue, 12 Feb 85 14:13 EST
From: Dale Worley <DRW@MIT-MC.ARPA>
Subject: screen handling problems on a symbolics lispm
To: bug-lispm@MIT-MC.ARPA
Message-ID: <850212141330.1.DRW@APIARY-3.MIT>


12-Feb-85 14:20:26-EST,613;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 12 Feb 85 14:20-EST
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 176996; Tue 12-Feb-85 14:18:26-EST
Date: Tuesday, 12 February 1985, 14:14-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: with-open-file doesn't handle -*-
To: Robert P. Krajewski <RPK at MIT-OZ>
cc: bug-lispm at MIT-OZ, bug-lmdoc at SCRC-TENEX,
    David Chapman <Zvona at MIT-OZ>
In-Reply-To: <RPK.12087018630.BABYL@MIT-OZ>
Message-ID: <850212141400.9.MOON@EUPHRATES.SCRC.Symbolics.COM>

Thanks for the suggestion (FS:READING-FROM-FILE).
13-Feb-85 03:25:49-EST,782;000000000000
Received: from MIT-MORRISON by MIT-OZ via Chaosnet; 13 Feb 85 03:25-EST
Date: Wednesday, 13 February 1985, 03:25-EST
From: jcma@MIT-MC
Subject: LISP-MACHINE too hairy for VMS pathnames.
To: Moon@SCRC-TENEX
Cc: BUG-LISPM@MIT-OZ
In-reply-to: <850211134501.0.MOON@EUPHRATES.SCRC.Symbolics.COM>

    Date: Monday, 11 February 1985, 13:45-EST
    From: David A. Moon <Moon at SCRC-TENEX>

	Date: Saturday, 9 February 1985, 16:00-EST
	From: A Lisp Machine <LISPM at MIT-MC>

	In Symbolics 3600 System 242.356, Hardcopy 20.10,
	Experimental RELATUS 131.280, FEP 22, on Lisp Machine Jim Morrison:

	While trying to do an (si:full-gc :system-release t).

    Please do not use the :system-release option to si:full-gc, even if your
    name is A Lisp Machine!
Why not?
13-Feb-85 12:06:43-EST,1247;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 13 Feb 85 12:06-EST
Date:  Tue, 12 Feb 85 16:24 EST
From:  Barry Margolin <Margolin@MIT-MULTICS.ARPA>
Subject:  Re: with-open-file doesn't handle -*-
To:  "Robert P. Krajewski" <RPK%MIT-OZ@MIT-MC.ARPA>
cc:  "David A. Moon" <Moon%SCRC-TENEX@MIT-MC.ARPA>, 
     bug-lispm%MIT-OZ@MIT-MC.ARPA, 
     David Chapman <Zvona%MIT-OZ@MIT-MC.ARPA>
In-Reply-To:  Message of 12 Feb 85 02:36 EST from "Robert P. Krajewski"
Message-ID:  <850212212456.130380@MIT-MULTICS.ARPA>

You might also want to come up with a way to make READ use the package
attribute of a stream as the default package, rather than using
*PACKAGE* (or whatever it is called).  Just making WITH-OPEN-FILE bind
the variable is probably the wrong thing.  It will certainly do the
wrong thing with nested WITH-OPEN-FILEs:
 (with-open-file (stream1 path1)
   (with-open-file (stream2 path2)
     (read stream2)
     (read stream1)))

Maybe you could get this fairly easily by putting a wrapper on the :READ
method for the base flavor of streams to files, which would bind
*PACKAGE* there.  It could also bind IBASE, too.  Given the
incompatibility, you might want to make this behavior optional, using an
opening option.
13-Feb-85 12:11:05-EST,1573;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 13 Feb 85 12:10-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 177556; Wed 13-Feb-85 12:10:46-EST
Date: Wednesday, 13 February 1985, 12:04-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: LISP-MACHINE too hairy for VMS pathnames.
To: jcma at MIT-MC, Moon at SCRC-TENEX
cc: BUG-LISPM at MIT-OZ
In-Reply-To: The message of 13 Feb 85 03:25-EST from jcma at MIT-MC
Message-ID: <850213120436.9.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Wednesday, 13 February 1985, 03:25-EST
    From: jcma@MIT-MC

	Date: Monday, 11 February 1985, 13:45-EST
	From: David A. Moon <Moon at SCRC-TENEX>

	    Date: Saturday, 9 February 1985, 16:00-EST
	    From: A Lisp Machine <LISPM at MIT-MC>

	    In Symbolics 3600 System 242.356, Hardcopy 20.10,
	    Experimental RELATUS 131.280, FEP 22, on Lisp Machine Jim Morrison:

	    While trying to do an (si:full-gc :system-release t).

	Please do not use the :system-release option to si:full-gc, even if your
	name is A Lisp Machine!
    Why not?
Why?

Less obnoxiously: Because :SYSTEM-RELEASE T is meant to clean up after
building a world.  In Release 6 it will be documented as a feature
reserved by Symbolics.  We understand the need for customers to be able
to do various levels of SI:FULL-GC which aren't as comprehensive as
SYSTEM-RELEASE T but have a better chance of working outside Symbolics.

I believe the problem you ran up against is a VMS pathname bug that is
fixed in Release 6.
13-Feb-85 13:46:04-EST,1919;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 13 Feb 85 13:46-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 177645; Wed 13-Feb-85 13:46:59-EST
Date: Wednesday, 13 February 1985, 13:40-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: Re: with-open-file doesn't handle -*-
To: Barry Margolin <Margolin at MIT-MULTICS>,
    Robert P. Krajewski <RPK at MIT-OZ>
cc: David A. Moon <Moon at SCRC-TENEX>, bug-lispm at MIT-OZ,
    David Chapman <Zvona at MIT-OZ>
In-Reply-To: <850212212456.130380@MIT-MULTICS.ARPA>
Message-ID: <850213134046.8.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date:  Tue, 12 Feb 85 16:24 EST
    From:  Barry Margolin <Margolin@MIT-MULTICS.ARPA>

    You might also want to come up with a way to make READ use the package
    attribute of a stream as the default package, rather than using
    *PACKAGE* (or whatever it is called).  Just making WITH-OPEN-FILE bind
    the variable is probably the wrong thing.  It will certainly do the
    wrong thing with nested WITH-OPEN-FILEs:
     (with-open-file (stream1 path1)
       (with-open-file (stream2 path2)
	 (read stream2)
	 (read stream1)))

    Maybe you could get this fairly easily by putting a wrapper on the :READ
    method for the base flavor of streams to files, which would bind
    *PACKAGE* there.  It could also bind IBASE, too.  Given the
    incompatibility, you might want to make this behavior optional, using an
    opening option.

As discussed, WITH-OPEN-FILE currently does not, and definitely should
not go around playing with attributes.  Whopping base flavors is a
horrible kludge.  You want something along the lines of
	(with-open-file (stream1 path1)
	  (with-open-file (stream2 path2)
	    (with-file-attributes stream2
	      (read stream2))
	    (with-file-attributes stream1
	      (read stream1))))
or something.	
13-Feb-85 15:06:22-EST,2377;000000000000
Received: from MIT-VAX by MIT-OZ via Chaosnet; 13 Feb 85 15:06-EST
Received: by mit-vax.Mit-chaos.Arpa (4.12/4.8) with CHAOS id AA12111; Wed, 13 Feb 85 14:53:17 est
Date: Wednesday, 13 February 1985, 14:52-EST
From: <DRM@MIT-CHERRY>
Subject: Namespace lossage
To: BUG-LISPM@MIT-OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 22,
Tanglewood Version VII, on Project Tanglewood Cherry:

This happened during a cold boot.

>>Error: The object (:HOST #<NAME SEW|HYDRA 35034671> #<NAMESPACE SEW 35034617>) is not a valid function
While in the function (:HOST #<NAME SEW|HYDRA 35034671> #<NAMESPACE SEW 35034617>)  NETI:OPEN-NAMESPACE-SERVER  NETI:QUERY-NAMESPACE-SERVER

(:HOST #<NAME SEW|HYDRA 35034671> #<NAMESPACE SEW 35034617>):
   Arg 0: :SITE

NETI:OPEN-NAMESPACE-SERVER:  (P.C. = 123)
   Arg 0 (NAMESPACE): #<NAMESPACE SEW 35034617>
   --Defaulted args:--
   Arg 1 (FOR-UPDATE): NIL

NETI:QUERY-NAMESPACE-SERVER:  (P.C. = 75)
   Arg 0 (CLASS): :HOST
   Arg 1 (NAMESPACE): #<NAMESPACE SEW 35034617>
   Rest arg (PROPERTY-LIST): (:NAME #<NAME SEW|HYDRA 35034671>)

NETI:FIND-OBJECT-NAMED-IN-NAMESPACE:  (P.C. = 205)
   Arg 0 (CLASS): :HOST
   Arg 1 (NAME): #<NAME SEW|HYDRA 35034671>
   Arg 2 (NAMESPACE): #<NAMESPACE SEW 35034617>
   Arg 3 (ERROR-P): NIL

NETI:DO-UNKNOWN-OBJECT-FIXUPS:  (P.C. = 136)
   Arg 0 (DECACHE-FIRST): T

NETI:QUERY-NAMESPACE-SERVER:  (P.C. = 477)
   Arg 0 (CLASS): :NAMESPACE
   Arg 1 (NAMESPACE): #<NAMESPACE SCRC 61555601>
   Rest arg (PROPERTY-LIST): (:NAME :SCRC)

NETI:GET-INCREMENTAL-UPDATE-FROM-NETWORK:  (P.C. = 421)
   Arg 0 (NAMESPACE): #<NAMESPACE SCRC 61555601>
   Arg 1 (STARTING-TIMESTAMP): 4764

(:METHOD NETI:NAMESPACE :GET-LATEST-TIMESTAMP):  (P.C. = 21)
   Arg 0 (SELF): #<NAMESPACE SCRC 61555601>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NETI:NAMESPACE -- 8. IV's, 0. FL's 44036534>
   Arg 2 (OPERATION): :GET-LATEST-TIMESTAMP

Rest of stack:
(:METHOD NETI:NAMESPACE :VALIDATION-TIMESTAMP):  (P.C. = 20)
(:METHOD NETI:NAMESPACE :SET-CHANGED-OBJECTS-ALIST):  (P.C. = 33)
NETI:DELETE-OBJECT-FROM-NAMESPACE:  (P.C. = 73)
NETI:GET-INCREMENTAL-UPDATE-FROM-NETWORK:  (P.C. = 224)
(:METHOD NETI:NAMESPACE :GET-LATEST-TIMESTAMP):  (P.C. = 21)
NETI:INITIALIZE-NAMESPACES-AND-NETWORK:  (P.C. = 155)
LISP-REINITIALIZE:  (P.C. = 443)
SI:LISP-TOP-LEVEL:  (P.C. = 3)
13-Feb-85 15:15:19-EST,2359;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 13 Feb 85 15:15-EST
Date: Wednesday, 13 February 1985, 15:08-EST
From:  <GAVAN at MIT-MOON>
Subject: Blow out while booting
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10,
Experimental RELATUS 131.280, FEP 24, on Lisp Machine Jim Morrison:

Trying to boot, got this error.

>>Error: The object (:HOST #<NAME SEW|HYDRA 7275302> #<NAMESPACE SEW 7275236>) is not a valid function
While in the function (:HOST #<NAME SEW|HYDRA 7275302> #<NAMESPACE SEW 7275236>)  NETI:OPEN-NAMESPACE-SERVER  NETI:QUERY-NAMESPACE-SERVER

(:HOST #<NAME SEW|HYDRA 7275302> #<NAMESPACE SEW 7275236>):
   Arg 0: :SITE

NETI:OPEN-NAMESPACE-SERVER:  (P.C. = 123)
   Arg 0 (NAMESPACE): #<NAMESPACE SEW 7275236>
   --Defaulted args:--
   Arg 1 (FOR-UPDATE): NIL

NETI:QUERY-NAMESPACE-SERVER:  (P.C. = 75)
   Arg 0 (CLASS): :HOST
   Arg 1 (NAMESPACE): #<NAMESPACE SEW 7275236>
   Rest arg (PROPERTY-LIST): (:NAME #<NAME SEW|HYDRA 7275302>)

NETI:FIND-OBJECT-NAMED-IN-NAMESPACE:  (P.C. = 205)
   Arg 0 (CLASS): :HOST
   Arg 1 (NAME): #<NAME SEW|HYDRA 7275302>
   Arg 2 (NAMESPACE): #<NAMESPACE SEW 7275236>
   Arg 3 (ERROR-P): NIL

NETI:DO-UNKNOWN-OBJECT-FIXUPS:  (P.C. = 136)
   Arg 0 (DECACHE-FIRST): T

NETI:QUERY-NAMESPACE-SERVER:  (P.C. = 477)
   Arg 0 (CLASS): :NAMESPACE
   Arg 1 (NAMESPACE): #<NAMESPACE SCRC 44607255>
   Rest arg (PROPERTY-LIST): (:NAME :SCRC)

NETI:GET-INCREMENTAL-UPDATE-FROM-NETWORK:  (P.C. = 421)
   Arg 0 (NAMESPACE): #<NAMESPACE SCRC 44607255>
   Arg 1 (STARTING-TIMESTAMP): 5136

(:METHOD NETI:NAMESPACE :GET-LATEST-TIMESTAMP):  (P.C. = 21)
   Arg 0 (SELF): #<NAMESPACE SCRC 44607255>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NETI:NAMESPACE -- 8. IV's, 0. FL's 47024177>
   Arg 2 (OPERATION): :GET-LATEST-TIMESTAMP

Rest of stack:
(:METHOD NETI:NAMESPACE :VALIDATION-TIMESTAMP):  (P.C. = 20)
(:METHOD NET:OBJECT :CHECK-VALIDITY):  (P.C. = 102)
(:METHOD NET:OBJECT :CHECK-VALIDITY):  (P.C. = 34)
NETI:FIND-OBJECT-NAMED-IN-NAMESPACE:  (P.C. = 45)
NET:FIND-OBJECT-NAMED:  (P.C. = 46)
NETI:GET-INCREMENTAL-UPDATE-FROM-NETWORK:  (P.C. = 267)
(:METHOD NETI:NAMESPACE :GET-LATEST-TIMESTAMP):  (P.C. = 21)
NETI:INITIALIZE-NAMESPACES-AND-NETWORK:  (P.C. = 155)
LISP-REINITIALIZE:  (P.C. = 443)
SI:LISP-TOP-LEVEL:  (P.C. = 3)
13-Feb-85 15:51:21-EST,5047;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 13 Feb 85 15:51-EST
Date: Wednesday, 13 February 1985, 15:42-EST
From: CJL at MIT-OZ
Sender: File-Server at MIT-PYGMALION
Subject: Namespace server lossage
To: BUG-LISPM at MIT-OZ
Message-ID: <850213154243.1.NOT LOGGED IN@REAGAN.MIT>

In Symbolics 3600 Release 6.0 Beta IIc, microcode TMC5-MIC 315, on Lisp Machine Ronald Reagan:

I boot reagan, and login as file server. Maybe half an hour later, it
will load file-server's lispm-init file, because it decided that it
first had to get a full namespace update of the spa and sch namespaces
before it could finish logging in. Mind you I have never seen it
complete getting the full update.  It usually errors out after half an
hour with a timeout, or a broken connection. Why does full namespace
updates occur in foreground, and not in some background process?

I have also noticed that gc flips seem to be inhibited when a full
update is occuring.  Is this what is happening? This can cause problem,
because I have seen full updates take 30 minutes. Do gc flips really
have to be inhibited for 30 minutes?

>>Break: 
While in the function PROCESS-WAIT  CHAOS:GET-NEXT-PKT  (:METHOD CHAOS:BASIC-INPUT-STREAM :GET-NEXT-INPUT-PKT)

NETI:GET-FULL-INCREMENTAL-UPDATE-FROM-NETWORK:  (P.C. = 110)
   Arg 0 (NAMESPACE): #<NAMESPACE SWW 62301534>
   Arg 1 (TIMESTAMP):515
   Local 2 (.ME-P.): T
   Local 3: #<DTP-LOCATIVE 440062>
   Local 4: SYS:UNWIND-PROTECT-TAG
   Local 5: #<DTP-EVEN-PC 7076060>
   Local 6: #<DTP-LOCATIVE 440066>
   Local 7: #<DTP-LOCATIVE 500652>
   Local 8 (.ME.): T
   Local 9: SYS:UNWIND-PROTECT-TAG
   Local 10: #<DTP-ODD-PC 7076062>
   Local 11: #<DTP-LOCATIVE 440066>
   Local 12: #<DTP-LOCATIVE 500672>
   Local 13 (ERROR): NIL
   Local 14: #<CASE-HANDLER 122361506>
   Local 15: (#<LEXICAL-CLOSURE (:INTERNAL ** 0) 500322> #<CASE-HANDLER 122557175>)
   Local 16: #<DTP-LOCATIVE 500704>
   Local 17: #<DTP-ODD-PC 7076041>
   Local 18: #<DTP-LOCATIVE 440072>
   Local 19: #<DTP-LOCATIVE 500677>
   Local 20 (NEW-TIMESTAMP): 517
   Local 21 (SUCCESS): T
   Local 22 (NAP): #<LISPM-NAMESPACE-ACCESS-PATH Namespace Lock SWW|WHITE 17225072>

(:METHOD NETI:NAMESPACE :GET-LATEST-TIMESTAMP):  (P.C. = 66)
   Arg 0 (SELF): #<NAMESPACE SWW 62301534>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NETI:NAMESPACE -- 11. IV's, 1. FL's 105712115>
   Arg 2 (OPERATION): :GET-LATEST-TIMESTAMP
   Arg 3 (FORCE-P): NIL

(:METHOD NET:OBJECT :CHECK-VALIDITY):  (P.C. = 122)
   Arg 0 (SELF): #<CHAOS-NETWORK CHAOS 62302203>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NET:OBJECT -- 4. IV's, 1. FL's 105444142>
   Arg 2 (OPERATION): :CHECK-VALIDITY
   Arg 3 (RELATIVE-TO-NAMESPACE): #<NAMESPACE SWW 62301534>
   Arg 4 (FORCE-P): NIL

(:METHOD NET:OBJECT :CHECK-VALIDITY):  (P.C. = 40)
   Arg 0 (SELF): #<CHAOS-NETWORK CHAOS 62302203>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NET:OBJECT -- 4. IV's, 1. FL's 105444142>
   Arg 2 (OPERATION): :CHECK-VALIDITY
   --Defaulted args:--
   Arg 3 (RELATIVE-TO-NAMESPACE): NIL
   Arg 4 (FORCE-P): NIL

(:METHOD NET:OBJECT :BEFORE :GET):  (P.C. = 5)
   Arg 0 (SELF): #<CHAOS-NETWORK CHAOS 62302203>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NET:OBJECT -- 4. IV's, 1. FL's 105444142>
   Arg 2 (OPERATION): :GET
   Rest arg (IGNORE): (:TYPE)

(:METHOD NET:OBJECT :COMBINED :GET):  (P.C. = 10)
   Arg 0 (SELF): #<CHAOS-NETWORK CHAOS 62302203>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NET:OBJECT -- 4. IV's, 1. FL's 105444142>
   Arg 2 (.OPERATION.): :GET
   Rest arg (.DAEMON-CALLER-ARGS.): NIL
   Local 3 (.DAEMON-CALLER-ARGS.): (:TYPE)

(:METHOD NET:NETWORK :NETWORK-TYPEP):  (P.C. = 6)
   Arg 0 (SELF): #<CHAOS-NETWORK CHAOS 62302203>
   Arg 1 (SELF-MAPPING-TABLE): NET:NETWORK
   Arg 2 (OPERATION): :NETWORK-TYPEP
   Arg 3 (TYPE): :CHAOS

NETI:FIND-PATHS-FOR-MEDIUM-TO-HOST-1:  (P.C. = 365)<<Error printing function name>>
   Arg 0 (PATH): ((:NETWORK :CHAOS))
   Arg 1 (PROTOCOL): #<PROTOCOL QFILE 122175204>
   Arg 2 (HOST): #<VMS-HOST PYGMALION 62303752>
   Arg 3 (FROM-HOST): #<LISPM-HOST REAGAN 62301352>

Rest of stack:
NETI:FIND-PATHS-FOR-MEDIUM-TO-HOST:  (P.C. = 31)
NETI:FIND-PATHS-TO-SERVICE-ON-HOST-1:  (P.C. = 17)
NET:FIND-PATHS-TO-SERVICE-ON-HOST:  (P.C. = 100)
NET:INVOKE-SERVICE-ON-HOST:  (P.C. = 53)
(:METHOD FS:ACTIVE-PATHNAME-HOST :FILE-ACCESS-PATH):  (P.C. = 57)
(:METHOD FS:ACTIVE-PATHNAME-MIXIN :HOMEDIR):  (P.C. = 6)
FS:USER-HOMEDIR:  (P.C. = 22)
LOGIN:  (P.C. = 362)
(:PROPERTY SI:COM-LOGIN SI:CP-FUNCTION):  (P.C. = 10)<<Error printing function name>>
SI:COM-LOGIN:  (P.C. = 24)  (from SYS: CP; UTILITY-COMMANDS)
SI:*EVAL:  (P.C. = 403)
(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0):  (P.C. = 152)
TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)<<Error printing function name>>
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)<<Error printing function name>>
SI:LISP-COMMAND-LOOP:  (P.C. = 67)
SI:LISP-TOP-LEVEL1:  (P.C. = 5)
SI:LISP-TOP-LEVEL:  (P.C. = 7)
13-Feb-85 17:27:07-EST,683;000000000000
Received: from SCRC-RIVERSIDE by MIT-OZ via Chaosnet; 13 Feb 85 17:26-EST
Date: Wednesday, 13 February 1985, 17:26-EST
From: hornig at SCRC-QUABBIN
Sender: File-Server at SCRC-QUABBIN
Subject: Namespace lossage
To: DRM at MIT-CHERRY, GAVAN at MIT-MOON, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 13 Feb 85 14:52-EST from DRM at MIT-CHERRY,
             The message of 13 Feb 85 15:08-EST from GAVAN at MIT-MOON
Message-ID: <850213172626.6.FILE-SERVER@RIVERSIDE.SCRC.Symbolics.COM>

I believe that I have patched things up so that rel-5 systems at MIT
will no longer blow up when you boot them due to the new SEW namespace.
If they still do, please send mail again.
13-Feb-85 19:52:28-EST,1040;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 13 Feb 85 19:52-EST
Date: 13 February 1985 19:50-EST
From: J. Noel Chiappa <JNC @ MIT-MC>
Sender: JNC0 @ MIT-MC
Subject: Excess STATUS contacting
To: bug-lispm @ MIT-OZ
cc: MIT-IP-PEOPLE @ MIT-MC, JNC @ MIT-MC

	This afternoon the LCS Ether was made essentially unusable
from hosts with small packet pools like PC's when APIARY-SIX decided
that it HAD to STATUS all the machines on that wire, including all
the non-attached Explorers. Since it seemed to be sitting in a loop
trying to do this all afternoon, the resultant excess broadcast
ARP request traffic from the MINITS bridge sunk most of the smaller
machines. I cleared it up by patching a machine to pretend to be
all of the machines it was trying to contact, but this is not
the best fix.
	I seem to recall that this happened once before. Could
whatever piece of code keeps doing this get fixed? The next time
it happens....."Do not meddle in the affairs of network wizards, for
they are quick to anger".

	Noel
13-Feb-85 20:22:57-EST,4094;000000000000
Received: from MIT-HTVAX by MIT-OZ via Chaosnet; 13 Feb 85 20:22-EST
Received: from MIT-JACARANDA by MIT-HTVAX (4.12/4.7) with CHAOS 
	id AA01723; Wed, 13 Feb 85 20:16:44 est
Date: Wednesday, 13 February 1985, 20:03-EST
From: <dawn@MIT-LIVE-OAK>
Subject: Namespace blowout - Take 2
To: BUG-LISPM@MIT-OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 24,
Tanglewood Version VII, on Project Tanglewood Cherry:

This is still happening even after you (Charlie Hornig) said you thought
you had fixed it.

-- Dinarte R. Morais

>>Error: The object (:HOST #<NAME SEW|HYDRA 35034637> #<NAMESPACE SEW 35034617>) is not a valid function
While in the function (:HOST #<NAME SEW|HYDRA 35034637> #<NAMESPACE SEW 35034617>)  NETI:OPEN-NAMESPACE-SERVER  NETI:QUERY-NAMESPACE-SERVER

NETI:OPEN-NAMESPACE-SERVER:  (P.C. = 123)
   Arg 0 (NAMESPACE): #<NAMESPACE MIT 61762161>
   --Defaulted args:--
   Arg 1 (FOR-UPDATE): NIL
   Local 2: (#<LISPM-HOST APIARY-6 27740373>)
   Local 3: NIL
   Local 4: NIL
   Local 5 (HOSTS): (#<LISPM-HOST APIARY-6 27740373> #<LISPM-HOST GOLDILOCKS 27740360> #<LISPM-HOST SCRC-RIVERSIDE 63452160> #<LISPM-HOST SCRC-STONY-BROOK 27740345> (:HOST #<NAME SEW|HYDRA 35034637> #<NAMESPACE SEW 35034617>) #<LISPM-HOST REAGAN 27740022>
)
   Local 6 (PENDING-FIXUPS): NIL
   Local 7 (*INHIBIT-VALIDITY-CHECKING*-initialization): T
   Local 8 (HOST): (:HOST #<NAME SEW|HYDRA 35034637> #<NAMESPACE SEW 35034617>)
   Local 9: (#<LISPM-HOST REAGAN 27740022>)
   Local 10: (#<LISPM-HOST APIARY-6 27740373>)

NETI:QUERY-NAMESPACE-SERVER:  (P.C. = 75)
   Arg 0 (CLASS): :NETWORK
   Arg 1 (NAMESPACE): #<NAMESPACE MIT 61762161>
   Rest arg (PROPERTY-LIST): (:NAME #<NAME MIT|INTERNET 27740611> :TIMESTAMP 4417)

(:METHOD NET:OBJECT :CHECK-VALIDITY):  (P.C. = 227)
   Arg 0 (SELF): #<INTERNET-NETWORK INTERNET 27740140>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NET:OBJECT -- 3. IV's, 1. FL's 44632547>
   Arg 2 (OPERATION): :CHECK-VALIDITY
   Arg 3 (RELATIVE-TO-NAMESPACE): #<NAMESPACE MIT 61762161>
   Arg 4 (FORCE-P): NIL

(:METHOD NET:OBJECT :CHECK-VALIDITY):  (P.C. = 34)
   Arg 0 (SELF): #<INTERNET-NETWORK INTERNET 27740140>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NET:OBJECT -- 3. IV's, 1. FL's 44632547>
   Arg 2 (OPERATION): :CHECK-VALIDITY
   --Defaulted args:--
   Arg 3 (RELATIVE-TO-NAMESPACE): NIL
   Arg 4 (FORCE-P): NIL

(:METHOD NET:OBJECT :BEFORE :GET):  (P.C. = 5)
   Arg 0 (SELF): #<INTERNET-NETWORK INTERNET 27740140>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NET:OBJECT -- 3. IV's, 1. FL's 44632547>
   Arg 2 (OPERATION): :GET
   Rest arg (IGNORE): (:TYPE)

(:METHOD NET:OBJECT :COMBINED :GET):  (P.C. = 7)
   Arg 0 (SELF): #<INTERNET-NETWORK INTERNET 27740140>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NET:OBJECT -- 3. IV's, 1. FL's 44632547>
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

(:METHOD NET:NETWORK :NETWORK-TYPEP):  (P.C. = 6)
   Arg 0 (SELF): #<INTERNET-NETWORK INTERNET 27740140>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NET:NETWORK -- 1. IV's, 0. FL's 71131005>
   Arg 2 (OPERATION): :NETWORK-TYPEP
   Arg 3 (TYPE): :CHAOS

NETI:FIND-PATHS-FOR-MEDIUM-TO-HOST-1:  (P.C. = 330)
   Arg 0 (PATH): ((:NETWORK :CHAOS))
   Arg 1 (PROTOCOL): #<PROTOCOL QFILE 62107532>
   Arg 2 (HOST): #<LISPM-HOST LIVE-OAK 27740125>
   Arg 3 (FROM-HOST): #<LISPM-HOST JACARANDA 35007447>

Rest of stack:
NETI:FIND-PATHS-FOR-MEDIUM-TO-HOST:  (P.C. = 31)
NETI:FIND-PATHS-TO-SERVICE-ON-HOST-1:  (P.C. = 6)
NET:FIND-PATHS-TO-SERVICE-ON-HOST:  (P.C. = 217)
NET:INVOKE-SERVICE-ON-HOST:  (P.C. = 50)
(:METHOD FS:ACTIVE-PATHNAME-HOST :FILE-ACCESS-PATH):  (P.C. = 37)
(:METHOD FS:ACTIVE-PATHNAME-HOST :HOST-USER-ID):  (P.C. = 4)
(:METHOD FS:LMFS-PATHNAME-MIXIN :HOMEDIR):  (P.C. = 7)
FS:USER-HOMEDIR:  (P.C. = 22)
LOGIN:  (P.C. = 343)
CP:LOGIN-COMMAND:  (P.C. = 26)  (from OAK:>Soley>cp>comran)
SI:*EVAL:  (P.C. = 370)
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 200)
SI:LISP-COMMAND-LOOP:  (P.C. = 115)
SI:LISP-TOP-LEVEL1:  (P.C. = 22)
SI:LISP-TOP-LEVEL:  (P.C. = 7)
13-Feb-85 23:03:08-EST,2009;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 13 Feb 85 23:03-EST
Date: Wednesday, 13 February 1985, 23:02-EST
From:  <ZiPpY at MIT-MC>
Subject: Yow!  Is the Namespace losing yet?
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10,
Experimental RELATUS 131.280, FEP 22, on Lisp Machine Jim Morrison:

Either this is STILL BROKEN or I work for TI.

>>Error: The object (:HOST #<NAME SEW|HYDRA 7275302> #<NAMESPACE SEW 7275236>) is not a valid function
While in the function (:HOST #<NAME SEW|HYDRA 7275302> #<NAMESPACE SEW 7275236>)  NETI:OPEN-NAMESPACE-SERVER  NETI:QUERY-NAMESPACE-SERVER

(:HOST #<NAME SEW|HYDRA 7275302> #<NAMESPACE SEW 7275236>):
   Arg 0: :SITE

NETI:OPEN-NAMESPACE-SERVER:  (P.C. = 123)
   Arg 0 (NAMESPACE): #<NAMESPACE SEW 7275236>
   --Defaulted args:--
   Arg 1 (FOR-UPDATE): NIL

NETI:QUERY-NAMESPACE-SERVER:  (P.C. = 75)
   Arg 0 (CLASS): :HOST
   Arg 1 (NAMESPACE): #<NAMESPACE SEW 7275236>
   Rest arg (PROPERTY-LIST): (:NAME #<NAME SEW|HYDRA 7275302>)

NETI:FIND-OBJECT-NAMED-IN-NAMESPACE:  (P.C. = 205)
   Arg 0 (CLASS): :HOST
   Arg 1 (NAME): #<NAME SEW|HYDRA 7275302>
   Arg 2 (NAMESPACE): #<NAMESPACE SEW 7275236>
   Arg 3 (ERROR-P): NIL

NETI:DO-UNKNOWN-OBJECT-FIXUPS:  (P.C. = 136)
   Arg 0 (DECACHE-FIRST): T

NETI:QUERY-NAMESPACE-SERVER:  (P.C. = 477)
   Arg 0 (CLASS): :NAMESPACE
   Arg 1 (NAMESPACE): #<NAMESPACE SCRC 44607255>
   Rest arg (PROPERTY-LIST): (:NAME :SCRC)

NETI:GET-INCREMENTAL-UPDATE-FROM-NETWORK:  (P.C. = 421)
   Arg 0 (NAMESPACE): #<NAMESPACE SCRC 44607255>
   Arg 1 (STARTING-TIMESTAMP): 5136

(:METHOD NETI:NAMESPACE :GET-LATEST-TIMESTAMP):  (P.C. = 21)
   Arg 0 (SELF): #<NAMESPACE SCRC 44607255>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NETI:NAMESPACE -- 8. IV's, 0. FL's 47024177>
   Arg 2 (OPERATION): :GET-LATEST-TIMESTAMP

Rest of stack:
NETI:INITIALIZE-NAMESPACES-AND-NETWORK:  (P.C. = 155)
LISP-REINITIALIZE:  (P.C. = 443)
SI:LISP-TOP-LEVEL:  (P.C. = 3)
14-Feb-85 00:53:01-EST,1693;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 14 Feb 85 00:52-EST
Received: from SCRC-NEPONSET by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 133418; Wed 13-Feb-85 23:00:41-EST
Date: Wednesday, 13 February 1985, 23:01-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: Namespace server lossage
To: CJL at MIT-OZ, BUG-LISPM at MIT-OZ
In-Reply-To: <850213154243.1.NOT LOGGED IN@REAGAN.MIT>
Message-ID: <850213230119.8.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Wednesday, 13 February 1985, 15:42-EST
    From: CJL at MIT-OZ

    In Symbolics 3600 Release 6.0 Beta IIc, microcode TMC5-MIC 315, on Lisp Machine Ronald Reagan:

    I boot reagan, and login as file server. Maybe half an hour later, it
    will load file-server's lispm-init file, because it decided that it
    first had to get a full namespace update of the spa and sch namespaces
    before it could finish logging in. Mind you I have never seen it
    complete getting the full update.  It usually errors out after half an
    hour with a timeout, or a broken connection. Why does full namespace
    updates occur in foreground, and not in some background process?

The modularity probably forces it to get a full update on a reference.

    I have also noticed that gc flips seem to be inhibited when a full
    update is occuring.  Is this what is happening? This can cause problem,
    because I have seen full updates take 30 minutes. Do gc flips really
    have to be inhibited for 30 minutes?

It is mucking a hash table.  It is probably the EGC that it is locking
out.  This interaction is benign and nothing to lose any sleep over; it
happens on our servers too.
14-Feb-85 04:01:54-EST,4882;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 14 Feb 85 04:01-EST
Date: Thursday, 14 February 1985, 04:01-EST
From: Richard Mlynarik <Mly at MIT-MC>
Subject: Macro declaration lossage?
To: BUG-LISPM at MIT-OZ

In Don't-dump-a-band! Inconsistent (unreleased patches loaded) System 99.20,
CADR 4.2, Experimental ZMail 54.3, MIT-Specific 23.0, microcode 320,
GC@2, on Lisp Machine Nine:


Insert your description of the circumstances here:

This lossage seems to only happen when compiling a file.
No problem when doing c-sh-C in Zwei.

>>ERROR: The interpreter encountered the unknown declaration (ARGLIST DEF-NAME TYPE &OPTIONAL ...)
Backtrace from the debugger:

SI::GOBBLE-DECLARATIONS-INTERNAL (P.C. = 72)

 Arg 0 (BODY): ((DECLARE # #) (SI::XR-BQ-LIST # # # ...))
 Arg 1 (VARS-ENV): (NIL (#<DTP-LOCATIVE 35455043> # #<DTP-LOCATIVE 35455050> NIL) NIL NIL)
Local 0 (ENV): (NIL NIL (NIL # NIL NIL) (#))
Local 1: ((DECLARE # #) (SI::XR-BQ-LIST # # # ...))
Local 2 (BODYELT): (DECLARE (DOCUMENTATION "Used to tell Zwei of the existence of a defining form.  
The TYPE is used to select an appropriate (:PROPERTY ... SYMBOL-FROM-STRING) function to
parse the the name into a function spec.  The optional SUB-TYPE is needed in cases where
one parsing function is shared by several defining forms.  For instance
(:PROPERTY :ALWAYS-METHOD SYMBOL-FROM-STRING) is used for both DEFMETHOD and DEFWRAPPER,
but DEFWRAPPER needs an implicit :WRAPPER inserted into the function spec.") (ARGLIST DEF-NAME TYPE &OPTIONAL ...))
Local 3: ((ARGLIST DEF-NAME TYPE &OPTIONAL ...))
Local 4 (DECL): (ARGLIST DEF-NAME TYPE &OPTIONAL ...)
Local 5 (TEM): NIL


Additional information supplied with call:
 SYS:ADI-FEXPR-CALL

LET* (P.C. = 136)

 Arg 0 (VARLIST): ((DEF-NAME #) (TYPE #) (SUB-TYPE #))
 Rest arg (BODY): ((DECLARE # #) (SI::XR-BQ-LIST # # # ...))
Local 1 (VARS-LEFT): NIL
Local 2 (L): NIL
Local 3 (VARS-ENV): (NIL (#<DTP-LOCATIVE 35455043> # #<DTP-LOCATIVE 35455050> NIL) NIL NIL)
Local 4 (BINDFRAME): NIL
Local 5 (VALS-LEFT): NIL
Local 6 (THISVAR): NIL
Local 7 (THISVAL): NIL
Local 8 (THIS-SPECIALP): NIL
Local 9 (TEM): NIL
Local 10: NIL
Local 11 (MUMBLE): NIL


SYS:EVAL1 (P.C. = 717)

 Arg 0 (FORM): (LET* (# # #) (DECLARE # #) (SI::XR-BQ-LIST # # # ...))
   --Defaulted args:--
 Arg 1 (NOHOOK): NIL
Local 0 (ARGNUM): 1
Local 1 (TEM): NIL
Local 2 (ENV): NIL
Local 3 (MUMBLE): NIL
Local 4 (TAIL): NIL
Local 5 (FCTN): #<DTP-FEF-POINTER LET* 2345027>
Local 6 (ARG-DESC): 12000101
Local 7 (NUM-ARGS): 1
Local 8 (CLOSURE-PASSED): NIL
Local 9 (LAMBDA-LIST): NIL
Local 10 (LL): NIL
Local 11 (QUOTE-STATUS): NIL
Local 12 (REST-FLAG): NIL
Local 13 (ARGL): ((DECLARE # #) (SI::XR-BQ-LIST # # # ...))
Local 14: NIL
Local 15: NIL
Local 16 (IGNORE): NIL
Local 17 (ADL): (440 145 40145 145 ...)
Local 18 (ITEM): 400
Local 19 (.SELECTQ.ITEM.): 0


Additional information supplied with call:
 SYS:ADI-FEXPR-CALL

BLOCK (P.C. = 153)

 Arg 0 (NAME): DECLARE-DEFINER
 Rest arg (BODY): (SI::*MACROENVIRONMENT* (AND # #) (LET* # # #))
Local 1 (TEM): (DECLARE-DEFINER #<DTP-LOCATIVE 5442424>)
Local 2 (FRAME): (BLOCK (DECLARE-DEFINER #<DTP-LOCATIVE 5442424>))
Local 3 (TEM1): (NIL (#<DTP-LOCATIVE 35455043> # #<DTP-LOCATIVE 35455050> NIL) NIL NIL)
Local 4 (L): ((LET* # # #))
Local 5 (VARS): (NIL (#<DTP-LOCATIVE 35455043> # #<DTP-LOCATIVE 35455050> NIL) NIL NIL)


SYS:EVAL1 (P.C. = 717)

 Arg 0 (FORM): (BLOCK DECLARE-DEFINER SI::*MACROENVIRONMENT* (AND # #) ...)
   --Defaulted args:--
 Arg 1 (NOHOOK): NIL
Local 0 (ARGNUM): 1
Local 1 (TEM): NIL
Local 2 (ENV): NIL
Local 3 (MUMBLE): NIL
Local 4 (TAIL): NIL
Local 5 (FCTN): #<DTP-FEF-POINTER BLOCK 2346431>
Local 6 (ARG-DESC): 12000101
Local 7 (NUM-ARGS): 1
Local 8 (CLOSURE-PASSED): NIL
Local 9 (LAMBDA-LIST): NIL
Local 10 (LL): NIL
Local 11 (QUOTE-STATUS): NIL
Local 12 (REST-FLAG): NIL
Local 13 (ARGL): (SI::*MACROENVIRONMENT* (AND # #) (LET* # # #))
Local 14: NIL
Local 15: NIL
Local 16 (IGNORE): NIL
Local 17 (ADL): (440 145 145 40145 ...)
Local 18 (ITEM): 400
Local 19 (.SELECTQ.ITEM.): 0


Remainder of stack:

SYS:APPLY-LAMBDA (P.C. = 1423)
DECLARE-DEFINER
FUNCALL (P.C. = 21)
MACROEXPAND-1 (P.C. = 199)
COMPILER:COMPILE-DRIVER (P.C. = 242)
COMPILER:COMPILE-DRIVER (P.C. = 495)
COMPILER:COMPILE-DRIVER (P.C. = 431)
COMPILER:COMPILE-DRIVER (P.C. = 528)
COMPILER::QC-FILE-WORK-COMPILE (P.C. = 36)
COMPILER:COMPILE-STREAM (P.C. = 581)
...
PROCESS-COMMAND-CHAR (P.C. = 61)
(:METHOD WINDOW :PROCESS-COMMAND-CHAR) (P.C. = 20)
(:METHOD WINDOW :EDIT) (P.C. = 307)
(:INTERNAL (:METHOD ZMACS-WINDOW :COMBINED :EDIT) 0) (P.C. = 60)
FUNCALL (P.C. = 21)
(:METHOD DISPLAYER :AROUND :EDIT) (P.C. = 25)
(:METHOD ZMACS-WINDOW :COMBINED :EDIT) (P.C. = 39)
ZMACS-WINDOW-TOP-LEVEL (P.C. = 38)
SI::PROCESS-TOP-LEVEL (P.C. = 115)
14-Feb-85 06:59:58-EST,2050;000000000000
Received: from MIT-JANIS by MIT-OZ via Chaosnet; 14 Feb 85 06:59-EST
Date: Thursday, 14 February 1985, 06:59-EST
From: Ken Haase <KWH at MIT-OZ>
Subject: Error in SORT.
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10, ARLO 25.53, ARLOX 5.57,
Experimental CYRANO 2.8, FEP 24, Plain ARLO & ARLOX 2/8/85, on Lisp Machine Janis Joplin:

This error in SORT occured when running one of MY gc demons, which I
had placed on the list SI:GC-AFTER-FLIP-LIST.  The daemon sorts a
bunch of lists (stored in an equal hash table) by the function
POINTER-< (which takes two objects and numerically compares what
%POINTER returns for them.)  This sorting is supposed to put them back
into some canonical order after a flip.  I don't think there are any other
special circumstances.....

>>Error: Illegal attempt to change array's dispatch by making it too long
While in the function SI:CHANGE-INDIRECT-ARRAY  SI:SORT-CONTIG-LIST-QUICK  SI:SORT-LIST-PREFIX

SI:SORT-CONTIG-LIST-QUICK:  (P.C. = 16)
   Arg 0 (LIST): ([ [ ] ] [ [ ] ] [ [ ] ] [ [ ] ] [ [ ] ] [ [ ] ] [ [ ] ] [ [ ] ] [ [ ] ] [ [ ] ] ...)
   Arg 1 (LENGTH): 962.
   Local 2 (LLOC): #<DTP-LOCATIVE 255422061>
   Local 3 (FLOC): NIL

SI:SORT-LIST-PREFIX:  (P.C. = 25)
   Arg 0 (HEIGHT): 0.

SI:SORT-LIST:  (P.C. = 13)
   Arg 0 (SORT-INPUT-LIST-initialization): ([ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] ...)

SORT:  (P.C. = 23)
   Arg 0 (X): ([ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] ...)
   Arg 1 (SORT-LESSP-PREDICATE-initialization): #<DTP-COMPILED-FUNCTION ARLO:POINTER-< 33605463>

ARLO:FIX-UP-CACHED-BAGS:  (P.C. = 33)  (from PIG:USRD$:[KWH.ARLO.CPATCHES]2X1)

SI:*EVAL:  (P.C. = 370)
   Arg 0 (FORM): (ARLO:FIX-UP-CACHED-BAGS)

MAPC:  (P.C. = 34)
   Arg 0 (FCN): SI:*EVAL
   Rest arg (LISTS): (((SI:GC-DAEMON-REQUEUE)))

SI:GC-FLIP-NOW:  (P.C. = 273)
   Arg 0 (RATIO): 1.
   Arg 1 (NO-QUERY): :NOTIFY
   Arg 2 (MAYBE-RECLAIM-IMMEDIATELY): NIL

Rest of stack:
SI:GC-PROCESS:  (P.C. = 46)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
14-Feb-85 11:01:52-EST,3016;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 14 Feb 85 11:01-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 178166; Thu 14-Feb-85 11:04:41-EST
Date: Thursday, 14 February 1985, 10:59-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: Error in SORT.
To: Ken Haase <KWH at MIT-OZ>, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 14 Feb 85 06:59-EST from Ken Haase <KWH at MIT-OZ>
Message-ID: <850214105955.5.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Thursday, 14 February 1985, 06:59-EST
    From: Ken Haase <KWH at MIT-OZ>

    In Symbolics 3600 System 242.356, Hardcopy 20.10, ARLO 25.53, ARLOX 5.57,
    Experimental CYRANO 2.8, FEP 24, Plain ARLO & ARLOX 2/8/85, on Lisp Machine Janis Joplin:

    This error in SORT occured when running one of MY gc demons, which I
    had placed on the list SI:GC-AFTER-FLIP-LIST.  The daemon sorts a
    bunch of lists (stored in an equal hash table) by the function
    POINTER-< (which takes two objects and numerically compares what
    %POINTER returns for them.)  This sorting is supposed to put them back
    into some canonical order after a flip.  I don't think there are any other
    special circumstances.....

I can't reproduce this in Release 6.  [Note your backtrace doesn't
include the call to change-indirect-array.]  I also note that the
arguments to SORT and SORT-LIST are no longer "-initialization"
variables in Release 6, so it is quite likely it really is fixed.  If
you supply a specific example >I can type in< I'll try again.  The best
I could do is create a list 962. items long and hope it matched yours.

    >>Error: Illegal attempt to change array's dispatch by making it too long
    While in the function SI:CHANGE-INDIRECT-ARRAY  SI:SORT-CONTIG-LIST-QUICK  SI:SORT-LIST-PREFIX

    SI:SORT-CONTIG-LIST-QUICK:  (P.C. = 16)
       Arg 0 (LIST): ([ [ ] ] [ [ ] ] [ [ ] ] [ [ ] ] [ [ ] ] [ [ ] ] [ [ ] ] [ [ ] ] [ [ ] ] [ [ ] ] ...)
       Arg 1 (LENGTH): 962.
       Local 2 (LLOC): #<DTP-LOCATIVE 255422061>
       Local 3 (FLOC): NIL

    SI:SORT-LIST-PREFIX:  (P.C. = 25)
       Arg 0 (HEIGHT): 0.

    SI:SORT-LIST:  (P.C. = 13)
       Arg 0 (SORT-INPUT-LIST-initialization): ([ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] ...)

    SORT:  (P.C. = 23)
       Arg 0 (X): ([ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] ...)
       Arg 1 (SORT-LESSP-PREDICATE-initialization): #<DTP-COMPILED-FUNCTION ARLO:POINTER-< 33605463>

    ARLO:FIX-UP-CACHED-BAGS:  (P.C. = 33)  (from PIG:USRD$:[KWH.ARLO.CPATCHES]2X1)

    SI:*EVAL:  (P.C. = 370)
       Arg 0 (FORM): (ARLO:FIX-UP-CACHED-BAGS)

    MAPC:  (P.C. = 34)
       Arg 0 (FCN): SI:*EVAL
       Rest arg (LISTS): (((SI:GC-DAEMON-REQUEUE)))

    SI:GC-FLIP-NOW:  (P.C. = 273)
       Arg 0 (RATIO): 1.
       Arg 1 (NO-QUERY): :NOTIFY
       Arg 2 (MAYBE-RECLAIM-IMMEDIATELY): NIL

    Rest of stack:
    SI:GC-PROCESS:  (P.C. = 46)
    SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
14-Feb-85 11:02:37-EST,5444;000000000000
Received: from SCRC-RIVERSIDE by MIT-OZ via Chaosnet; 14 Feb 85 11:02-EST
Date: Thursday, 14 February 1985, 11:01-EST
From: hornig at SCRC-QUABBIN
Sender: File-Server at SCRC-QUABBIN
Subject: Namespace blowout - Take 2
To: dawn at MIT-LIVE-OAK, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 13 Feb 85 20:03-EST from dawn at MIT-LIVE-OAK,
             The message of 13 Feb 85 23:02-EST from ZiPpY at MIT-MC
Message-ID: <850214110106.2.FILE-SERVER@RIVERSIDE.SCRC.Symbolics.COM>

More about the problems with booting rel-5 systems...

Well, it turns out to be a bug in rel 5 that no amount of patching
things up will fix.  The bug doesn't exist in rel 6 (note that all of
the namespace servers survived).  The patch below should make your rel-5
system immune to the problem.  "How do I load the patch", you ask, "when
I can't even boot my machine?"  The answer is that each time it blows up
trying to send the :SITE message to a list, you use the debugger to
return NIL until it stops blowing up.  Then you load this patch and
disk-save a world.

I haven't had a chance to test this, as I am not at MIT and don't have a
rel 5 world handy.  I would appreciate it if someone could test this
advice and get back to me.

- - - - - - - - - - - - - - - - - - -

;;; -*- Mode: LISP; Syntax: Zetalisp; Package: USER; Base: 10; Patch-file: T -*-
;;; Patch file for Private version 0.0
;;; Reason: Function NETI:OPEN-NAMESPACE-SERVER:  Kludge to deal with fixups in namespace objects.
;;; Written by File-Server, 2/14/85 10:48:59
;;; while running on Riverside from FEP0:>System-269-304.load.1
;;; with Release 6.0 Beta IId, System 269.304, Basic Sage 13.79, CLCP 2.18, Print 38.0, Mailer 43.0, Experimental IP-TCP 27.7, SCRC 5.4, microcode TMC5-MIC 319, Automatic server bug reporter, Namespace server.



; From file namespaces.lisp >rel-5>network Y: (278)
#8R NETWORK-INTERNALS::(GLOBAL:COMPILER-LET ((GLOBAL:PACKAGE (GLOBAL:PKG-FIND-PACKAGE "NETWORK-INTERNALS")))

;;; replacement from patch 242.355
;;;
(DEFUN OPEN-NAMESPACE-SERVER (NAMESPACE &OPTIONAL FOR-UPDATE)
  (LET ((HOSTS (LET ((*INHIBIT-VALIDITY-CHECKING* T))
		 (IF (OR FOR-UPDATE (SEND NAMESPACE ':LOCAL-SERVER-P))
		     (SEND NAMESPACE ':PRIMARY-NAME-SERVER)
		     (SEND NAMESPACE ':SERVER-HOSTS))))
	(PENDING-FIXUPS (AND (BOUNDP '*UNKNOWN-OBJECT-FIXUPS*) *UNKNOWN-OBJECT-FIXUPS*)))
    (IF (AND *OPEN-NAMESPACE-SERVER-STREAM*
	     (OR (MEMQ *OPEN-NAMESPACE-SERVER-HOST* HOSTS)
		 ;; If this namespace is declared to have some servers, but we haven't
		 ;; resolved their names yet, assume that the open stream will be good
		 ;; enough to accomplish that.  If we closed it, we'd be left without any
		 ;; server.
		 (AND HOSTS
		      (LOOP FOR HOST IN HOSTS
			    ALWAYS (LOOP FOR (OBJECT . ENTRIES) IN PENDING-FIXUPS
					 THEREIS (MEMQ HOST ENTRIES))))))
	*OPEN-NAMESPACE-SERVER-STREAM*
	;; Use only servers at local site, if they exist.
	(LET ((LOCAL-HOSTS (LOOP WITH *INHIBIT-VALIDITY-CHECKING* = T
				 FOR HOST IN HOSTS
				 ;; !!!!! The (NOT (LISTP HOST)) is what is new !!!!!
				 WHEN (AND (NOT (LISTP HOST))
					   (EQ (SEND HOST :SITE) *LOCAL-SITE*))
				 COLLECT HOST)))
	  (WHEN LOCAL-HOSTS (SETF HOSTS LOCAL-HOSTS)))
	(LET ((SERVICES (LOOP FOR HOST IN HOSTS
			      ;; Do not attempt to connect to self:
			      ;;  only happens during initialization or if we are a
			      ;;  secondary server.
			      WHEN (UNLESS (OR (EQ HOST *LOCAL-HOST*)	;LOOP bd
					       (LOOP FOR (OBJECT . ENTRIES) IN PENDING-FIXUPS
						     THEREIS (MEMQ HOST ENTRIES)))
				     (CONDITION-CASE ()
					 (LET ((*INHIBIT-VALIDITY-CHECKING* T))
					   (FIND-PATH-TO-SERVICE-ON-HOST ':NAMESPACE HOST))
				       (NETWORK-ERROR NIL)))
			      COLLECT IT)))
	  (WHEN (AND *OPEN-NAMESPACE-SERVER-STREAM* SERVICES)
	    (CLOSE (PROG1 *OPEN-NAMESPACE-SERVER-STREAM*
			  (SETQ *OPEN-NAMESPACE-SERVER-STREAM* NIL))))
	  (SETQ SERVICES (SORT SERVICES #'SERVICE-ACCESS-PATH-DESIRABILITY-GREATERP))
	  (SETQ SERVICES (WEED-OUT-SILLY-SERVICE-ACCESS-PATHS SERVICES
							      *NAMESPACE-SERVICE-THRESHOLD*))
	  (LET* ((RANDOM (MOST-DESIRABLE-SERVICE-ACCESS-PATH SERVICES))
		 (LIST (MEMQ RANDOM SERVICES)))
	    (UNLESS (EQ LIST SERVICES)
	      (SWAPF (CAR LIST) (CAR SERVICES))))
	  (LOOP WITH ARGS = (LIST NAMESPACE)
		FOR SERVICES ON SERVICES
		AS SERVICE = (CAR SERVICES)
		;; On the last try, let the error percolate up
		DOING (CONDITION-CASE-IF (CDR SERVICES) (STREAM)
			  (LET ((*INHIBIT-VALIDITY-CHECKING* T))
			    (INVOKE-SERVICE-ACCESS-PATH-WITH-CACHED-UNAVAILABILITY
			      SERVICE *VALIDATION-RETRY-MINIMUM-WAIT* ARGS))
			(SYS:NETWORK-ERROR)
			(:NO-ERROR
			 (SETQ *OPEN-NAMESPACE-SERVER-STREAM* STREAM
			       *OPEN-NAMESPACE-SERVER-HOST* (SERVICE-ACCESS-PATH-HOST SERVICE))
			 (LOOP WHILE (> *NAMESPACE-PROTOCOL-VERSION*
					*LOWEST-SUPPORTED-PROTOCOL-VERSION*)
			       DO (FORMAT STREAM "PROTOCOL-VERSION ~D~2%"
					  *NAMESPACE-PROTOCOL-VERSION*)
			       (SEND STREAM ':FORCE-OUTPUT)
			       UNTIL (LET ((RECS
					     (LOOP AS REC = (PARSE-RECORD-AS-TOKENS-WITH-TIMEOUT
							      STREAM)
						   WHILE REC COLLECT REC)))
				       (NOT (EQUAL (FIRST (FIRST (FIRST RECS))) "ERROR")))
			       DO (DECF *NAMESPACE-PROTOCOL-VERSION*))
			 (RETURN STREAM)))
		FINALLY (ERROR 'NO-SERVER-FOR-NAMESPACE ':NAMESPACE NAMESPACE))))))

)

14-Feb-85 12:03:52-EST,742;000000000000
Mail-From: SAZ created at 14-Feb-85 12:03:37
Date: Thu 14 Feb 85 12:03:37-EST
From: David M. J. Saslav <SAZ@MIT-OZ>
Subject: More on the 5.1 Cadr Mess
To: bug-lispm@MIT-OZ


I don't know if anyone realizes this, but according to my debugging
stack frame, the (print-herald) command (which of course is evaluated
every time one boots) is sending a :pretty-name message to somewhere,
somewhere where it is NOT being claimed.  The next entry down in the
stack is a call to SI:INSTANCE-HASH-UNCLAIMED-MESSAGE with that
message as its argument.  The effect of this is that the host
namespace object querying loop is being entered infinitely.  This
seems kind of high up the stack for an unclaimed message...

Dave Saslav
-------
14-Feb-85 21:06:22-EST,2088;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 14 Feb 85 21:06-EST
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 179018; Thu 14-Feb-85 20:25:36-EST
Date: Thursday, 14 February 1985, 20:25-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: Error in SORT.
To: Ken Haase <KWH at MIT-OZ>
cc: BUG-LISPM at MIT-OZ
In-Reply-To: The message of 14 Feb 85 06:59-EST from Ken Haase <KWH at MIT-OZ>
Message-ID: <850214202535.8.MOON@EUPHRATES.SCRC.Symbolics.COM>

    Date: Thursday, 14 February 1985, 06:59-EST
    From: Ken Haase <KWH at MIT-OZ>

    In Symbolics 3600 System 242.356, Hardcopy 20.10, ARLO 25.53, ARLOX 5.57,
    Experimental CYRANO 2.8, FEP 24, Plain ARLO & ARLOX 2/8/85, on Lisp Machine Janis Joplin:

    This error in SORT occured when running one of MY gc demons, which I
    had placed on the list SI:GC-AFTER-FLIP-LIST.  The daemon sorts a
    bunch of lists (stored in an equal hash table) by the function
    POINTER-< (which takes two objects and numerically compares what
    %POINTER returns for them.)  This sorting is supposed to put them back
    into some canonical order after a flip.  I don't think there are any other
    special circumstances.....

    >>Error: Illegal attempt to change array's dispatch by making it too long
    While in the function SI:CHANGE-INDIRECT-ARRAY  SI:SORT-CONTIG-LIST-QUICK  SI:SORT-LIST-PREFIX

    SI:SORT-CONTIG-LIST-QUICK:  (P.C. = 16)
       Arg 0 (LIST): ([ [ ] ] [ [ ] ] [ [ ] ] [ [ ] ] [ [ ] ] [ [ ] ] [ [ ] ] [ [ ] ] [ [ ] ] [ [ ] ] ...)
       Arg 1 (LENGTH): 962.

This bug was definitely fixed after 5.2 was frozen and before 6.0 was
frozen, so you will see it fixed in the next release.  The bug will
happen whenever you sort a cdr-coded list 512 or more elements long.
I'm not sure what the best workaround for you would be -- if using an
array instead of a list would be okay, that would certainly avoid the
bug.

By the way, you might want to learn about the function %pointer-lessp,
which compares the addresses of two objects.
15-Feb-85 00:55:51-EST,719;000000000000
Mail-From: CJL created at 15-Feb-85 00:55:36
Date: Fri, 15 Feb 1985  00:55 EST
Message-ID: <CJL.12087786719.BABYL@MIT-OZ>
From: Chris Lindblad <CJL@MIT-OZ>
To:   Info-lispm-mit@MIT-OZ
Subject: Patch and world load that fixes Symbolics 3600 namespace lossage

I have tried out hornig's patch, and made a world load that seems to fix
the Symbolics 3600 namespace blowout your machine might be having when
you boot it.  The world load is >Release-5-2-qnam6.load and can be found
on any one of: MOON, ELVIS, BUDDY, JANIS, SID, DUANE, LENNON, ROBOT1,
ROBOT4.  You can band transfer this world onto your machine, or if you
want to load the patch yourself, just load "oz:<cjl>qns" and then disk
save your world.
15-Feb-85 12:58:24-EST,3243;000000000000
Received: from SANCHO-PANZA by MIT-OZ via Chaosnet; 15 Feb 85 12:58-EST
Date: Friday, 15 February 1985, 12:56-EST
From: Benjamin Kuipers <BEN at SANCHO-PANZA>
Subject: problem with host SEW|HYDRA
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 18, on Lisp Machine Sancho Panza:

After Cold-Booting the machine, errors of essentially this form, involving SEW|HYDRA
kept the Sancho from completing the Lispm-init, from letting me log in, from connecting
to MC, etc.  I seem to be able to continue by searching up the stack and returning from
some appropriate function by hand.  Presumably someone has put something incorrect into
the name server?  
					Ben


>>Error: The object (:HOST #<NAME SEW|HYDRA 14632225> #<NAMESPACE SEW 14632211>) is not a valid function
While in the function (:HOST #<NAME SEW|HYDRA 14632225> #<NAMESPACE SEW 14632211>)  NETI:OPEN-NAMESPACE-SERVER  NETI:QUERY-NAMESPACE-SERVER

(:HOST #<NAME SEW|HYDRA 14632225> #<NAMESPACE SEW 14632211>):
   Arg 0: :SITE

NETI:OPEN-NAMESPACE-SERVER:  (P.C. = 123)
   Arg 0 (NAMESPACE): #<NAMESPACE SCH 12156436>
   --Defaulted args:--
   Arg 1 (FOR-UPDATE): NIL

NETI:QUERY-NAMESPACE-SERVER:  (P.C. = 75)
   Arg 0 (CLASS): :NETWORK
   Arg 1 (NAMESPACE): #<NAMESPACE SCH 12156436>
   Rest arg (PROPERTY-LIST): (:NAME #<NAME SCH|INTERNET 14603223> :TIMESTAMP 764)

(:METHOD NET:OBJECT :CHECK-VALIDITY):  (P.C. = 227)
   Arg 0 (SELF): #<INTERNET-NETWORK INTERNET 5700623>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NET:OBJECT -- 3. IV's, 1. FL's 53153415>
   Arg 2 (OPERATION): :CHECK-VALIDITY
   Arg 3 (RELATIVE-TO-NAMESPACE): #<NAMESPACE SCH 12156436>
   Arg 4 (FORCE-P): NIL

(:METHOD NET:OBJECT :CHECK-VALIDITY):  (P.C. = 34)
   Arg 0 (SELF): #<INTERNET-NETWORK INTERNET 5700623>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NET:OBJECT -- 3. IV's, 1. FL's 53153415>
   Arg 2 (OPERATION): :CHECK-VALIDITY
   --Defaulted args:--
   Arg 3 (RELATIVE-TO-NAMESPACE): NIL
   Arg 4 (FORCE-P): NIL

(:METHOD NET:OBJECT :BEFORE :GET):  (P.C. = 5)
   Arg 0 (SELF): #<INTERNET-NETWORK INTERNET 5700623>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NET:OBJECT -- 3. IV's, 1. FL's 53153415>
   Arg 2 (OPERATION): :GET
   Rest arg (IGNORE): (:TYPE)

(:METHOD NET:OBJECT :COMBINED :GET):  (P.C. = 7)
   Arg 0 (SELF): #<INTERNET-NETWORK INTERNET 5700623>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NET:OBJECT -- 3. IV's, 1. FL's 53153415>
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

(:METHOD NET:NETWORK :NETWORK-TYPEP):  (P.C. = 6)
   Arg 0 (SELF): #<INTERNET-NETWORK INTERNET 5700623>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NET:NETWORK -- 1. IV's, 0. FL's 55445024>
   Arg 2 (OPERATION): :NETWORK-TYPEP
   Arg 3 (TYPE): :CHAOS

Rest of stack:
NETI:FIND-PATHS-FOR-MEDIUM-TO-HOST-1:  (P.C. = 330)
NETI:FIND-PATHS-FOR-MEDIUM-TO-HOST:  (P.C. = 31)
NETI:FIND-PATHS-TO-SERVICE-ON-HOST-1:  (P.C. = 6)
NET:FIND-PATHS-TO-SERVICE-ON-HOST:  (P.C. = 217)
NET:INVOKE-SERVICE-ON-HOST:  (P.C. = 50)
TELNET:GET-LOGIN-CONNECTION:  (P.C. = 37)
(:METHOD TELNET:NVT-WINDOW :CONNECT):  (P.C. = 6)
(:METHOD TELNET:NVT-WINDOW :TYPEIN-TOP-LEVEL):  (P.C. = 112)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
15-Feb-85 13:48:55-EST,1690;000000000000
Mail-From: CJL created at 15-Feb-85 13:48:13
Date: Fri, 15 Feb 1985  13:48 EST
Message-ID: <CJL.12087927369.BABYL@MIT-OZ>
From: Chris Lindblad <CJL@MIT-OZ>
To:   Benjamin Kuipers <BEN@SANCHO-PANZA>
Cc:   BUG-LISPM@MIT-OZ
Subject: problem with host SEW|HYDRA
In-reply-to: Msg of 15 Feb 1985 12:56-EST from Benjamin Kuipers <BEN at SANCHO-PANZA>

    Date: Friday, 15 February 1985, 12:56-EST
    From: Benjamin Kuipers <BEN at SANCHO-PANZA>

    In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 18, on Lisp Machine Sancho Panza:

    After Cold-Booting the machine, errors of essentially this form, involving SEW|HYDRA
    kept the Sancho from completing the Lispm-init, from letting me log in, from connecting
    to MC, etc.  I seem to be able to continue by searching up the stack and returning from
    some appropriate function by hand.  Presumably someone has put something incorrect into
    the name server?  
    					Ben


    >>Error: The object (:HOST #<NAME SEW|HYDRA 14632225> #<NAMESPACE SEW 14632211>) is not a valid function
    While in the function (:HOST #<NAME SEW|HYDRA 14632225> #<NAMESPACE SEW 14632211>)  NETI:OPEN-NAMESPACE-SERVER  NETI:QUERY-NAMESPACE-SERVER

    (:HOST #<NAME SEW|HYDRA 14632225> #<NAMESPACE SEW 14632211>):
       Arg 0: :SITE


1. After cold-booting your machine, type:

  (si:login-to-sys-host)
  (load "oz:<cjl>qns")
  (disk-save ">Release-5-2-qnam6.load")

The newly saved world load will work fine.

OR band-transfer from any 7th floor machine the band
">Release-5-2-qnam6.load" to your machine and use it instead of your
">Releae-5-2-name6.load".

2. Put yourself on info-lispm-mit@oz.


15-Feb-85 13:51:26-EST,5645;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 15 Feb 85 13:51-EST
Received: from SCRC-PEACE by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 179455; Fri 15-Feb-85 13:50:54-EST
Date: Fri, 15 Feb 85 13:50 EST
From: Charles Hornig <Hornig at SCRC-STONY-BROOK>
Subject: problem with host SEW|HYDRA
To: Benjamin Kuipers <BEN at SANCHO-PANZA>, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 15 Feb 85 12:56-EST from Benjamin Kuipers <BEN at SANCHO-PANZA>
Message-ID: <850215135041.1.HORNIG@PEACE.SCRC.Symbolics.COM>

    Date: Friday, 15 February 1985, 12:56-EST
    From: Benjamin Kuipers <BEN at SANCHO-PANZA>

    In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 18, on Lisp Machine Sancho Panza:

    After Cold-Booting the machine, errors of essentially this form, involving SEW|HYDRA
    kept the Sancho from completing the Lispm-init, from letting me log in, from connecting
    to MC, etc.  I seem to be able to continue by searching up the stack and returning from
    some appropriate function by hand.  Presumably someone has put something incorrect into
    the name server?  
					    Ben

    >>Error: The object (:HOST #<NAME SEW|HYDRA 14632225> #<NAMESPACE SEW 14632211>) is not a valid function
    While in the function (:HOST #<NAME SEW|HYDRA 14632225> #<NAMESPACE SEW 14632211>)  NETI:OPEN-NAMESPACE-SERVER  NETI:QUERY-NAMESPACE-SERVER

- - - - - - - - - -

This is a bug in release 5 that was fixed long ago in release 6.  To fix
your world, make this patch:

- - - - - - - - - -

;;; -*- Mode: LISP; Syntax: Zetalisp; Package: USER; Base: 10; Patch-file: T -*-
;;; Patch file for Private version 0.0
;;; Reason: Function NETI:OPEN-NAMESPACE-SERVER:  Kludge to deal with fixups in namespace objects.
;;; Written by File-Server, 2/14/85 10:48:59
;;; while running on Riverside from FEP0:>System-269-304.load.1
;;; with Release 6.0 Beta IId, System 269.304, Basic Sage 13.79, CLCP 2.18, Print 38.0, Mailer 43.0, Experimental IP-TCP 27.7, SCRC 5.4, microcode TMC5-MIC 319, Automatic server bug reporter, Namespace server.



; From file namespaces.lisp >rel-5>network Y: (278)
#8R NETWORK-INTERNALS::(GLOBAL:COMPILER-LET ((GLOBAL:PACKAGE (GLOBAL:PKG-FIND-PACKAGE "NETWORK-INTERNALS")))

;;; replacement from patch 242.355
;;;
(DEFUN OPEN-NAMESPACE-SERVER (NAMESPACE &OPTIONAL FOR-UPDATE)
  (LET ((HOSTS (LET ((*INHIBIT-VALIDITY-CHECKING* T))
		 (IF (OR FOR-UPDATE (SEND NAMESPACE ':LOCAL-SERVER-P))
		     (SEND NAMESPACE ':PRIMARY-NAME-SERVER)
		     (SEND NAMESPACE ':SERVER-HOSTS))))
	(PENDING-FIXUPS (AND (BOUNDP '*UNKNOWN-OBJECT-FIXUPS*) *UNKNOWN-OBJECT-FIXUPS*)))
    (IF (AND *OPEN-NAMESPACE-SERVER-STREAM*
	     (OR (MEMQ *OPEN-NAMESPACE-SERVER-HOST* HOSTS)
		 ;; If this namespace is declared to have some servers, but we haven't
		 ;; resolved their names yet, assume that the open stream will be good
		 ;; enough to accomplish that.  If we closed it, we'd be left without any
		 ;; server.
		 (AND HOSTS
		      (LOOP FOR HOST IN HOSTS
			    ALWAYS (LOOP FOR (OBJECT . ENTRIES) IN PENDING-FIXUPS
					 THEREIS (MEMQ HOST ENTRIES))))))
	*OPEN-NAMESPACE-SERVER-STREAM*
	;; Use only servers at local site, if they exist.
	(LET ((LOCAL-HOSTS (LOOP WITH *INHIBIT-VALIDITY-CHECKING* = T
				 FOR HOST IN HOSTS
				 WHEN (AND (NOT (LISTP HOST))
					   (EQ (SEND HOST :SITE) *LOCAL-SITE*))
				 COLLECT HOST)))
	  (WHEN LOCAL-HOSTS (SETF HOSTS LOCAL-HOSTS)))
	(LET ((SERVICES (LOOP FOR HOST IN HOSTS
			      ;; Do not attempt to connect to self:
			      ;;  only happens during initialization or if we are a
			      ;;  secondary server.
			      WHEN (UNLESS (OR (EQ HOST *LOCAL-HOST*)	;LOOP bd
					       (LOOP FOR (OBJECT . ENTRIES) IN PENDING-FIXUPS
						     THEREIS (MEMQ HOST ENTRIES)))
				     (CONDITION-CASE ()
					 (LET ((*INHIBIT-VALIDITY-CHECKING* T))
					   (FIND-PATH-TO-SERVICE-ON-HOST ':NAMESPACE HOST))
				       (NETWORK-ERROR NIL)))
			      COLLECT IT)))
	  (WHEN (AND *OPEN-NAMESPACE-SERVER-STREAM* SERVICES)
	    (CLOSE (PROG1 *OPEN-NAMESPACE-SERVER-STREAM*
			  (SETQ *OPEN-NAMESPACE-SERVER-STREAM* NIL))))
	  (SETQ SERVICES (SORT SERVICES #'SERVICE-ACCESS-PATH-DESIRABILITY-GREATERP))
	  (SETQ SERVICES (WEED-OUT-SILLY-SERVICE-ACCESS-PATHS SERVICES
							      *NAMESPACE-SERVICE-THRESHOLD*))
	  (LET* ((RANDOM (MOST-DESIRABLE-SERVICE-ACCESS-PATH SERVICES))
		 (LIST (MEMQ RANDOM SERVICES)))
	    (UNLESS (EQ LIST SERVICES)
	      (SWAPF (CAR LIST) (CAR SERVICES))))
	  (LOOP WITH ARGS = (LIST NAMESPACE)
		FOR SERVICES ON SERVICES
		AS SERVICE = (CAR SERVICES)
		;; On the last try, let the error percolate up
		DOING (CONDITION-CASE-IF (CDR SERVICES) (STREAM)
			  (LET ((*INHIBIT-VALIDITY-CHECKING* T))
			    (INVOKE-SERVICE-ACCESS-PATH-WITH-CACHED-UNAVAILABILITY
			      SERVICE *VALIDATION-RETRY-MINIMUM-WAIT* ARGS))
			(SYS:NETWORK-ERROR)
			(:NO-ERROR
			 (SETQ *OPEN-NAMESPACE-SERVER-STREAM* STREAM
			       *OPEN-NAMESPACE-SERVER-HOST* (SERVICE-ACCESS-PATH-HOST SERVICE))
			 (LOOP WHILE (> *NAMESPACE-PROTOCOL-VERSION*
					*LOWEST-SUPPORTED-PROTOCOL-VERSION*)
			       DO (FORMAT STREAM "PROTOCOL-VERSION ~D~2%"
					  *NAMESPACE-PROTOCOL-VERSION*)
			       (SEND STREAM ':FORCE-OUTPUT)
			       UNTIL (LET ((RECS
					     (LOOP AS REC = (PARSE-RECORD-AS-TOKENS-WITH-TIMEOUT
							      STREAM)
						   WHILE REC COLLECT REC)))
				       (NOT (EQUAL (FIRST (FIRST (FIRST RECS))) "ERROR")))
			       DO (DECF *NAMESPACE-PROTOCOL-VERSION*))
			 (RETURN STREAM)))
		FINALLY (ERROR 'NO-SERVER-FOR-NAMESPACE ':NAMESPACE NAMESPACE))))))

)
15-Feb-85 17:28:37-EST,5353;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 15 Feb 85 17:28-EST
Date: Friday, 15 February 1985, 17:26-EST
From: Mark H. Shirley <MHS at MIT-MC>
Subject: Bug in hardcopy from file system editor
To: BUG-LISPM at MIT-OZ
Message-ID: <850215172649.1.MHS@APIARY-9.MIT>

In Symbolics 3600 Release 6.0 Beta IIc, microcode TMC5-MIC 315, FEP 18, on APIARY-9:

I logged in with no init file.  Did <select>-F and "Tree Edit Any".
When the directory came up, I clicked right on the file
(OZ:<williams.systems>assertions.lisp) and hit hardcopy.  The font
widths table was then loaded from PIG.  In addition to the defaults, I
specified "Landscape".  This was the result....

>>Trap: The first argument given to the AR-1 instruction, NIL, was not an array.
While in the function (:METHOD PRESS:PRESS-STREAM :CHARACTER-WIDTH)  (:METHOD SI:HARDCOPY-STREAM-FONT-MIXIN :UPDATE-SPACE-WIDTH)  (:METHOD SI:HARDCOPY-STREAM-FONT-MIXIN :AFTER :INIT)

(:METHOD PRESS:PRESS-STREAM :CHARACTER-WIDTH):  (P.C. = 14)
   Arg 0 (SELF): #<PRESS-STREAM 40443332>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor PRESS:PRESS-STREAM -- 33. IV's, 3. FL's 21051273>
   Arg 2 (OPERATION): :CHARACTER-WIDTH
   Arg 3 (CHAR): 32

(:METHOD SI:HARDCOPY-STREAM-FONT-MIXIN :UPDATE-SPACE-WIDTH):  (P.C. = 5)
   Arg 0 (SELF): #<PRESS-STREAM 40443332>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:HARDCOPY-STREAM-FONT-MIXIN -- 7. IV's, 0. FL's 21050453>
   Arg 2 (OPERATION): :UPDATE-SPACE-WIDTH

(:METHOD SI:HARDCOPY-STREAM-FONT-MIXIN :AFTER :INIT):  (P.C. = 224)
   Arg 0 (SELF): #<PRESS-STREAM 40443332>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:HARDCOPY-STREAM-FONT-MIXIN -- 7. IV's, 0. FL's 21050453>
   Arg 2 (OPERATION): :INIT
   Arg 3 (PLIST): #<DTP-LOCATIVE 61040332>

(:METHOD PRESS:PRESS-STREAM :COMBINED :INIT):  (P.C. = 26)
   Arg 0 (SELF): #<PRESS-STREAM 40443332>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor PRESS:PRESS-STREAM -- 33. IV's, 3. FL's 21051273>
   Arg 2 (.OPERATION.): :INIT
   Rest arg (.DAEMON-CALLER-ARGS.): NIL
   Local 3 (.DAEMON-CALLER-ARGS.): (#<DTP-LOCATIVE 61040332>)

INSTANTIATE-FLAVOR:  (P.C. = 445)
   Arg 0 (FLAVOR-NAME): PRESS:PRESS-STREAM
   Arg 1 (INIT-PLIST): #<DTP-LOCATIVE 61040332>
   Arg 2 (SEND-INIT-MESSAGE-P): :MAYBE
   --Defaulted args:--
   Arg 3 (RETURN-UNHANDLED-KEYWORDS-P): NIL
   Arg 4 (AREA-TO-CONS-INSTANCE-IN): NIL

MAKE-INSTANCE:  (P.C. = 6)
   Arg 0 (FLAVOR-NAME): PRESS:PRESS-STREAM
   Rest arg (INIT-OPTIONS): (:DEVICE #<PRESS-PRINTER TREMONT-VIA-MC 62304106> :OUTPUT-STREAM #<FILE-OUTPUT-BINARY-STREAM "MC: .DOVR.; MHS >" 40437526> :NEW-PAGE-HOOK #<DTP-COMPILED-FUNCTION SI:HARDCOPY-PRINT-PAGE-HEADING 43431716> :HEADER-FONT-P T :PAGE-NUMBER 0 ...)
   Local 1 (INIT-OPTIONS): (:MARGINS (2000 1270 2000 1270) :DEVICE #<PRESS-PRINTER TREMONT-VIA-MC 62304106> :OUTPUT-STREAM #<FILE-OUTPUT-BINARY-STREAM "MC: .DOVR.; MHS >" 40437526> :NEW-PAGE-HOOK #<DTP-COMPILED-FUNCTION SI:HARDCOPY-PRINT-PAGE-HEADING 43431716> :HEADER-FONT-P T ...)

(:METHOD SI:HARDCOPY-DEVICE-MIXIN :MAKE-HARDCOPY-STREAM):  (P.C. = 124)
   Arg 0 (SELF): #<PRESS-PRINTER TREMONT-VIA-MC 62304106>
   Arg 1 (SELF-MAPPING-TABLE): SI:HARDCOPY-DEVICE-MIXIN
   Arg 2 (OPERATION): :MAKE-HARDCOPY-STREAM
   Arg 3 (OPTIONS): (:NEW-PAGE-HOOK #<DTP-COMPILED-FUNCTION SI:HARDCOPY-PRINT-PAGE-HEADING 43431716> :HEADER-FONT-P T :PAGE-NUMBER 0 :BANNER-FILE-NAME "OZ:OZ:<WILLIAMS.SYSTEMS>ASSERTIONS.LISP.6" :BANNER-CREATION-DATE 2682517267 ...)

SI:MAKE-HARDCOPY-STREAM:  (P.C. = 52)
   Arg 0 (DEVICE): #<PRESS-PRINTER TREMONT-VIA-MC 62304106>
   Rest arg (OPTIONS): (:NEW-PAGE-HOOK #<DTP-COMPILED-FUNCTION SI:HARDCOPY-PRINT-PAGE-HEADING 43431716> :HEADER-FONT-P T :PAGE-NUMBER 0 :BANNER-FILE-NAME "OZ:OZ:<WILLIAMS.SYSTEMS>ASSERTIONS.LISP.6" :BANNER-CREATION-DATE 2682517267 ...)

SI:HARDCOPY-FROM-STREAM:  (P.C. = 137)
   Arg 0 (STREAM): #<FILE-INPUT-CHARACTER-STREAM "OZ:OZ:<WILLIAMS.SYSTEMS>ASSERTIONS.LISP.6" 40437277>
   Arg 1 (DEVICE): #<PRESS-PRINTER TREMONT-VIA-MC 62304106>
   Rest arg (OPTIONS): (:BANNER-FILE-NAME "OZ:OZ:<WILLIAMS.SYSTEMS>ASSERTIONS.LISP.6" :BANNER-CREATION-DATE 2682517267 :PRESS-FONTS (("LPT" "" 10)) :COPIES 1 :PAGE-HEADINGS T ...)

SI:HARDCOPY-FILE:  (P.C. = 127)
   Arg 0 (FILE-NAME): #<TOPS20-PATHNAME "OZ:OZ:<WILLIAMS.SYSTEMS>ASSERTIONS.LISP.6">
   Arg 1 (DEVICE): #<PRESS-PRINTER TREMONT-VIA-MC 62304106>
   Rest arg (OPTIONS): (:FORMAT :TEXT :PRESS-FONTS (("LPT" "" 10)) :COPIES 1 :PAGE-HEADINGS T :LANDSCAPE-P T)
   Local 2 (OPTIONS): (:PRESS-FONTS (("LPT" "" 10)) :COPIES 1 :PAGE-HEADINGS T :LANDSCAPE-P T)

SI:HARDCOPY-TEXT-FILE:  (P.C. = 11)
   Arg 0 (FILE-NAME): #<TOPS20-PATHNAME "OZ:OZ:<WILLIAMS.SYSTEMS>ASSERTIONS.LISP.6">
   Arg 1 (DEVICE): #<PRESS-PRINTER TREMONT-VIA-MC 62304106>
   Rest arg (OPTIONS): (:PRESS-FONTS (("LPT" "" 10)) :COPIES 1 :PAGE-HEADINGS T :LANDSCAPE-P T)

PRESS:HARDCOPY-VIA-MENUS:  (P.C. = 1514)
   Arg 0 (PATH): #<TOPS20-PATHNAME "OZ:OZ:<WILLIAMS.SYSTEMS>ASSERTIONS.LISP.6">
   --Defaulted args:--
   Arg 1 (LOWER-PRIORITY-P): NIL

SI:PROCESS-RUN-FUNCTION-INTERNAL:  (P.C. = 52)
   Arg 0 (RESTART-ON-RESET): NIL
   Arg 1 (FUNCTION): PRESS:HARDCOPY-VIA-MENUS
   Rest arg (ARGS): (#<TOPS20-PATHNAME "OZ:OZ:<WILLIAMS.SYSTEMS>ASSERTIONS.LISP.6">)

SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
   Arg 0 (IGNORE): NIL
16-Feb-85 01:49:26-EST,4534;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 16 Feb 85 01:49-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 179830; Sat 16-Feb-85 01:47:46-EST
Date: Saturday, 16 February 1985, 01:47-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: Compiler bug
To: David C. Plummer in disguise <DCP at SCRC-QUABBIN>,
    Henry Lieberman <Henry at MIT-OZ>, BUG-LISPM at MIT-OZ
In-Reply-To: <850211105906.4.NFEP@NEPONSET.SCRC.Symbolics.COM>
Message-ID: <850216014715.8.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Monday, 11 February 1985, 10:59-EST
    From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>

	Date: Friday, 8 February 1985, 17:52-EST
	From: Henry Lieberman <Henry at MIT-OZ>

	In Symbolics 3600 Release 6.0 Beta IIc, microcode TMC5-MIC 315, FEP 18, on Lisp Machine Apiary-5:

	While trying to compile the following ...

	(DEFUN TINKER-WITH-COLOR ()
	       (COND ((NOT (STATUS FEATURE COLOR))
		      (SETQ COLOR T BW NIL)
		      (LOAD "<Henry>SLmCt")))
	       (SETUP-TINKER-FRAME)
	       (STARTDISPLAY)
	       (RESTART-TINKER NIL))

    This is certainly not enough information.  Where is the definition for
    start-display?  Its function cell appears to be bound to an interpreted
    lexical closure that, among other things, makes itself unbound, removes
    it's :source-file-name and then loads a file.  Well, foo, after I woke
    up and looked at the backtrace, the braindamage is apparent.  The code
    for debugging-info
	(DEFUN DEBUGGING-INFO (FUNCTION)
	  ...
	  (:LEXICAL-CLOSURE
	   (COMPILED-FUNCTION-DEBUGGING-INFO (%P-CONTENTS-OFFSET FUNCTION 1)))
	  ...)
    stupidly assumes that lexical closures are always
    closing compiled functions.  ARGLIST and others may be similarly broken.
    Despite the freeze, I'm going to try to get this fixed for the real 6.0.

This will be fixed in the real 6.0.

	>>Trap: The argument given to the CDR instruction, SYS:REAL-ARGLIST, was not a locative, a list, or NIL.
	While in the function SI:COMPILED-FUNCTION-DEBUGGING-INFO  DEBUGGING-INFO  SI:DECLARED-DEFINITION-INTERNAL
	While compiling TINKER-WITH-COLOR

	SI:COMPILED-FUNCTION-DEBUGGING-INFO:  (P.C. = 6)
	   Arg 0 (FUNCTION): (SI:DIGESTED-LAMBDA (LAMBDA (&REST IGNORE) (FMAKUNBOUND (QUOTE STARTDISPLAY)) (REMPROP (QUOTE STARTDISPLAY) (QUOTE :SOURCE-FILE-NAME)) (LET (**) (LOAD "<HENRY>LMT")) (APPLY (FUNCTION STARTDISPLAY) IGNORE)) NIL 257 327680 NIL (&REST IGNORE) NIL (FMAKUNBOUND (QUOTE STARTDISPLAY)) (REMPROP (QUOTE STARTDISPLAY) (QUOTE :SOURCE-FILE-NAME)) ...)

	DEBUGGING-INFO:  (P.C. = 142)
	   Arg 0 (FUNCTION): #<LEXICAL-CLOSURE (LAMBDA ** ** ** ...) 23412740>

	SI:DECLARED-DEFINITION-INTERNAL:  (P.C. = 117)
	   Arg 0 (FUNCTION): STARTDISPLAY

	SI:CACHED-LOCAL-DECLARATION:  (P.C. = 7)
	   Arg 0 (FUNCTION): SI:DECLARED-DEFINITION-INTERNAL
	   Arg 1 (ARG): STARTDISPLAY

	SYS:DECLARED-DEFINITION:  (P.C. = 4)
	   Arg 0 (FUNCTION): STARTDISPLAY

	COMPILER:COLLECT-TOP-LEVEL-MACROS-1:  (P.C. = 25)
	   Arg 0 (EXP): (STARTDISPLAY)

	COMPILER:COLLECT-TOP-LEVEL-MACROS-1:  (P.C. = 74)
	   Arg 0 (EXP): ((COND ((NOT **) (SETQ COLOR T BW NIL) (LOAD "<Henry>SLmCt"))) (SETUP-TINKER-FRAME) (STARTDISPLAY) (RESTART-TINKER NIL))

	COMPILER:COLLECT-TOP-LEVEL-MACROS:  (P.C. = 5)
	   Arg 0 (EXP): ((COND ((NOT **) (SETQ COLOR T BW NIL) (LOAD "<Henry>SLmCt"))) (SETUP-TINKER-FRAME) (STARTDISPLAY) (RESTART-TINKER NIL))

	Rest of stack:
	COMPILER:PHASE-1-FUNCTION-DEFINITION:  (P.C. = 13)
	COMPILER:PHASE-1-EXTERNAL-FUNCTION:  (P.C. = 35)
	COMPILER:RUN-PHASE-1-FUNCTION:  (P.C. = 73)
	COMPILER:COMPILE-DEFINITION-1:  (P.C. = 10)
	COMPILER:COMPILE-DEFINITION:  (P.C. = 104)
	(:INTERNAL COMPILER:COMPILE-TO-CORE 0 (:DUMP-DEFINITION)):  (P.C. = 5)
	COMPILER:COMPILE-TO-CORE:  (P.C. = 12)
	COMPILER:COMPILE-FORM-FUNCTION:  (P.C. = 41)
	COMPILER:COMPILE-FROM-STREAM-1:  (P.C. = 326)
	COMPILER:PROCESS-FORMS-FROM-STREAM:  (P.C. = 117)
	COMPILER:COMPILE-FROM-STREAM:  (P.C. = 237)
	ZWEI:COMPILE-INTERVAL:  (P.C. = 142)
	ZWEI:COMPILE-PRINT-INTERVAL:  (P.C. = 121)
	ZWEI:COMPILE-DEFINITION-INTERNAL:  (P.C. = 100)
	ZWEI:COM-COMPILE-REGION:  (P.C. = 5)
	ZWEI:COM-EXTENDED-COMMAND:  (P.C. = 27)
	ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
	ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
	(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 233)
	(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 60)
	ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 51)
	SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
16-Feb-85 13:06:45-EST,2477;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 16 Feb 85 13:06-EST
Date: Saturday, 16 February 1985, 12:04-EST
From: David Chapman <Zvona at MIT-OZ>
Subject: compiler blowout
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 24, on Lisp Machine Buddy Holly:

Compiling

(defun foo ()
  (let (MUMBLE)
    (FUNCTION (LAMBDA () MUMBLE))))

>>Error: Cannot address the variable #<NORMAL-LEXICAL-VARIABLE 32414731>
While in the function COMPILER:USE-STACK-ADDRESSING-P  COMPILER:ACCESS-LEXICAL-VARIABLE  (:PROPERTY COMPILER:VAR COMPILER:ASSEMBLE)
Error occurred while compiling (:INTERNAL FOO 0)

COMPILER:USE-STACK-ADDRESSING-P:  (P.C. = 43)
   Arg 0 (VARIABLE): #<NORMAL-LEXICAL-VARIABLE 32414731>
   Arg 1 (LEVEL): 0
   Arg 2 (LOCATION): 0
   Local 3 (FUNCTION): #<EXTERNAL-FUNCTION 32414632>

COMPILER:ACCESS-LEXICAL-VARIABLE:  (P.C. = 6)
   Arg 0 (OPCODE): COMPILER:VAR
   Arg 1 (VARIABLE): #<NORMAL-LEXICAL-VARIABLE 32414731>
   Arg 2 (LEVEL): 0

(:PROPERTY COMPILER:VAR COMPILER:ASSEMBLE):  (P.C. = 16)
   Arg 0 (INST): #<Inst (Var MUMBLE S.0)>

COMPILER:ASSEMBLE-INTERVAL:  (P.C. = 50)
   Arg 0 (INTERVAL): #<INTERVAL 32415043>

COMPILER:ASSEMBLE-FUNCTION:  (P.C. = 71)
   Arg 0 (FUNCTION): #<INTERNAL-FUNCTION 32415003>

MAPC:  (P.C. = 34)
   Arg 0 (FCN): COMPILER:ASSEMBLE-FUNCTION
   Rest arg (LISTS): ((#<EXTERNAL-FUNCTION 32414632>))

COMPILER:RUN-PHASE-4:  (P.C. = 4)

COMPILER:COMPILE-DEFINITION-1:  (P.C. = 47)
   Arg 0 (TYPE): DEFUN
   Arg 1 (FUNCTION-SPEC): FOO
   Arg 2 (LAMBDA-LIST): NIL
   Arg 3 (DEBUG-INFO): NIL
   Arg 4 (DEFINITION): ((LET (MUMBLE) (FUNCTION (LAMBDA NIL MUMBLE))))
   Arg 5 (FIXUP-P): T

Rest of stack:
COMPILER:COMPILE-DEFINITION:  (P.C. = 43)
(:INTERNAL COMPILER:COMPILE-TO-CORE 0):  (P.C. = 5)
COMPILER:COMPILE-TO-CORE:  (P.C. = 12)
COMPILER:COMPILE-FORM-FUNCTION:  (P.C. = 41)
COMPILER:COMPILE-FROM-STREAM-1:  (P.C. = 306)
COMPILER:PROCESS-FORMS-FROM-STREAM:  (P.C. = 117)
COMPILER:COMPILE-FROM-STREAM:  (P.C. = 235)
ZWEI:COMPILE-INTERVAL:  (P.C. = 141)
ZWEI:COMPILE-PRINT-INTERVAL:  (P.C. = 76)
ZWEI:COMPILE-DEFINITION-INTERNAL:  (P.C. = 73)
ZWEI:COM-COMPILE-REGION:  (P.C. = 5)
ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 214)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 41)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
16-Feb-85 13:24:45-EST,3051;000000000000
Received: from SCRC-TENEX by MIT-OZ via Chaosnet; 16 Feb 85 13:24-EST
Date: 16 Feb 1985 1322-EST
From: Bernard S. Greenberg <BSG@SCRC-TENEX>
Subject: Re: compiler blowout
To: Zvona@MIT-OZ
cc: BUG-LISPM@MIT-OZ
In-Reply-To: The message of Saturday, 16 February 1985, 12:04-EST from David Chapman <Zvona at MIT-OZ>

    Date: Saturday, 16 February 1985, 12:04-EST
    From: David Chapman <Zvona at MIT-OZ>

    In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 24, on Lisp Machine Buddy Holly:

    Compiling

    (defun foo ()
      (let (MUMBLE)
	(FUNCTION (LAMBDA () MUMBLE))))

    >>Error: Cannot address the variable #<NORMAL-LEXICAL-VARIABLE 32414731>
    While in the function COMPILER:USE-STACK-ADDRESSING-P  COMPILER:ACCESS-LEXICAL-VARIABLE  (:PROPERTY COMPILER:VAR COMPILER:ASSEMBLE)
    Error occurred while compiling (:INTERNAL FOO 0)

    COMPILER:USE-STACK-ADDRESSING-P:  (P.C. = 43)
       Arg 0 (VARIABLE): #<NORMAL-LEXICAL-VARIABLE 32414731>
       Arg 1 (LEVEL): 0
       Arg 2 (LOCATION): 0
       Local 3 (FUNCTION): #<EXTERNAL-FUNCTION 32414632>

    COMPILER:ACCESS-LEXICAL-VARIABLE:  (P.C. = 6)
       Arg 0 (OPCODE): COMPILER:VAR
       Arg 1 (VARIABLE): #<NORMAL-LEXICAL-VARIABLE 32414731>
       Arg 2 (LEVEL): 0

    (:PROPERTY COMPILER:VAR COMPILER:ASSEMBLE):  (P.C. = 16)
       Arg 0 (INST): #<Inst (Var MUMBLE S.0)>

    COMPILER:ASSEMBLE-INTERVAL:  (P.C. = 50)
       Arg 0 (INTERVAL): #<INTERVAL 32415043>

    COMPILER:ASSEMBLE-FUNCTION:  (P.C. = 71)
       Arg 0 (FUNCTION): #<INTERNAL-FUNCTION 32415003>

    MAPC:  (P.C. = 34)
       Arg 0 (FCN): COMPILER:ASSEMBLE-FUNCTION
       Rest arg (LISTS): ((#<EXTERNAL-FUNCTION 32414632>))

    COMPILER:RUN-PHASE-4:  (P.C. = 4)

    COMPILER:COMPILE-DEFINITION-1:  (P.C. = 47)
       Arg 0 (TYPE): DEFUN
       Arg 1 (FUNCTION-SPEC): FOO
       Arg 2 (LAMBDA-LIST): NIL
       Arg 3 (DEBUG-INFO): NIL
       Arg 4 (DEFINITION): ((LET (MUMBLE) (FUNCTION (LAMBDA NIL MUMBLE))))
       Arg 5 (FIXUP-P): T

    Rest of stack:
    COMPILER:COMPILE-DEFINITION:  (P.C. = 43)
    (:INTERNAL COMPILER:COMPILE-TO-CORE 0):  (P.C. = 5)
    COMPILER:COMPILE-TO-CORE:  (P.C. = 12)
    COMPILER:COMPILE-FORM-FUNCTION:  (P.C. = 41)
    COMPILER:COMPILE-FROM-STREAM-1:  (P.C. = 306)
    COMPILER:PROCESS-FORMS-FROM-STREAM:  (P.C. = 117)
    COMPILER:COMPILE-FROM-STREAM:  (P.C. = 235)
    ZWEI:COMPILE-INTERVAL:  (P.C. = 141)
    ZWEI:COMPILE-PRINT-INTERVAL:  (P.C. = 76)
    ZWEI:COMPILE-DEFINITION-INTERNAL:  (P.C. = 73)
    ZWEI:COM-COMPILE-REGION:  (P.C. = 5)
    ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
    ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
    (:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 214)
    (:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 41)
    ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)
    SI:PROCESS-TOP-LEVEL:  (P.C. = 53)


Do I read your bug report right, that you are trying this in RELEASE 5?
That does not work in release 5.   Lexical scoping is
a release 6 feature.
-------
16-Feb-85 13:50:25-EST,736;000000000000
Mail-From: ZVONA created at 16-Feb-85 13:50:17
Date: Sat, 16 Feb 1985  13:50 EST
Message-ID: <ZVONA.12088189885.BABYL@MIT-OZ>
From: ZVONA@MIT-OZ
To:   "Bernard S. Greenberg" <BSG@SCRC-TENEX>
Cc:   BUG-LISPM@MIT-OZ
Subject: compiler blowout
In-reply-to: Msg of 16 Feb 1985  13:22-EST from Bernard S. Greenberg <BSG at SCRC-TENEX>

    Do I read your bug report right, that you are trying this in RELEASE 5?
    That does not work in release 5.   Lexical scoping is
    a release 6 feature.

Right, but I wasn't even trying to get lexical scoping; it was a bug
in my program.  The point is that the compiler shouldn't blow up.
Graceful degradation, you know?

If you don't want to hear rel 5 bugs any more, let me know.
16-Feb-85 14:05:27-EST,1351;000000000000
Received: from SCRC-TENEX by MIT-OZ via Chaosnet; 16 Feb 85 14:05-EST
Date: 16 Feb 1985 1402-EST
From: Bernard S. Greenberg <BSG@SCRC-TENEX>
Subject: Re: compiler blowout
To: ZVONA@MIT-OZ
cc: BUG-LISPM@MIT-OZ
In-Reply-To: <ZVONA.12088189885.BABYL@MIT-OZ>

Return-path: <ZVONA@MIT-OZ>
Received: from SCRC-STONY-BROOK by SCRC-TENEX with CHAOS; Sat 16-Feb-85 13:54:46-EST
Received: from MIT-OZ by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 179945; Sat 16-Feb-85 13:54:12-EST
Date: Sat, 16 Feb 1985  13:50 EST
Message-ID: <ZVONA.12088189885.BABYL@MIT-OZ>
From: ZVONA@MIT-OZ
To:   "Bernard S. Greenberg" <BSG@SCRC-TENEX>
Cc:   BUG-LISPM@MIT-OZ
Subject: compiler blowout
In-reply-to: Msg of 16 Feb 1985  13:22-EST from Bernard S. Greenberg <BSG at SCRC-TENEX>

    Do I read your bug report right, that you are trying this in RELEASE 5?
    That does not work in release 5.   Lexical scoping is
    a release 6 feature.

Right, but I wasn't even trying to get lexical scoping; it was a bug
in my program.  The point is that the compiler shouldn't blow up.
Graceful degradation, you know?

If you don't want to hear rel 5 bugs any more, let me know.
----------
No we wanna hear bugs that -might- not have been fixed, but
I can say with some assurance that this bug has been fixed
in the grandest way possible.....
-------
16-Feb-85 15:06:30-EST,1843;000000000000
Received: from SANCHO-PANZA by MIT-OZ via Chaosnet; 16 Feb 85 15:06-EST
Date: Saturday, 16 February 1985, 15:06-EST
From: Christopher Eliot <CRE at SANCHO-PANZA>
Subject: M-X Untabify
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 18, on Lisp Machine Sancho Panza:

I tried to use M-X Untabify and it bombed.  I don't think there was
anything special about the file or environment that I was working in, except
perhaps the fact that it is a fonted file.  The current region was this:

.nf
        <value>  ;Match only this value.
	(NOT <value>)  	;Match any other known value.
	(OR . <values>) 	;Match any of the listed values.
.fi

>>Error: The negative array length -1 is illegal.
While in the function MAKE-ARRAY  ZWEI:INSERT-CHARS  ZWEI:TAB-CONVERT

ZWEI:COM-UNTABIFY:  (P.C. = 21)
   Local 0 (BP): ("        <value>  ;Match only this value." 17)

ZWEI:COM-EXTENDED-COMMAND:  (P.C. = 27)

ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
   Arg 0 (COMMAND): ZWEI:COM-EXTENDED-COMMAND
   Arg 1 (CHAR): 600
   Arg 2 (PREFIX-CHAR): NIL
   Arg 3 (HOOK-LIST): NIL

ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
   Arg 0 (CH): 600

(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 214)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 56161072>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:EDITOR -- 12. IV's, 0. FL's 56160673>
   Arg 2 (OPERATION): :EDIT
   --Defaulted args:--
   Arg 3 (TOP-LEVEL-P): T
   Arg 4 (DESCRIPTION): NIL

(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 41)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 56161072>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:TOP-LEVEL-EDITOR -- 12. IV's, 1. FL's 67653650>
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)

SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
   Arg 0 (IGNORE): NIL
16-Feb-85 18:38:06-EST,839;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 16 Feb 85 18:38-EST
Date: Saturday, 16 February 1985, 18:02-EST
From: Gavan Duffy <GAVAN at MIT-OZ>
Subject: Indenting of DEFFed macros-surrounding-code.
To: BUG-LISPM at MIT-OZ

;In Symbolics 3600 System 242.356, Hardcopy 20.10,
;Experimental RELATUS 131.301, FEP 24, on Lisp Machine Buddy Holly:
;
;If a macro with an &body on its lambda list is DEFFed, the
;DEFFed form doesn't indent properly in the editor.
;
;Example:

(DEFVAR FOOBAR NIL)

(DEFMACRO WITH-FOOBAR-BOUND (VALUE &BODY BODY)
  `(LET ((FOOBAR ,VALUE))
     . ,BODY))

(DEFUN FOO ()
  (WITH-FOOBAR-BOUND 'YOW
    (FORMAT STANDARD-OUTPUT "~S" FOOBAR)))

(DEFF WITH-A-BOUND-FOOBAR #'WITH-FOOBAR-BOUND)

(DEFUN BAR ()
  (WITH-A-BOUND-FOOBAR 'YIKES
		       (FORMAT STANDARD-OUTPUT "~S" FOOBAR)))

 
16-Feb-85 19:52:15-EST,4126;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 16 Feb 85 19:52-EST
Date: Sat, 16 Feb 85 19:53 EST
From: "Mark H. Shirley" <MHS@MIT-MC.ARPA>
To: BUG-LISPM@MIT-MC.ARPA
Message-ID: <850216195312.1.MHS@APIARY-7.MIT>

In Symbolics 3600 Release 6.0 Beta IIc, microcode TMC5-MIC 315, FEP 18, on Lisp Machine Apiary-7:

I don't know whether this is a problem with the apiary machines or with the rel 6 band
we've got, but in the cases I've tried, Document Examiner can't seem to read anything
from pig.

Also, I notice that there's no PIG:[S.R6] or whatever it is that rel 6 needs to get it's
source files.  I tried to look at the definition of si:lisp-command-loop and M-. tried
to read the source file from "sys: sys;" which translates to USRD$:[S.R5.SYS].  The file
wasn't there, I suppose since things have been moved around between releases.  In any
case, looking in [S.R5] seems pretty wrong to me.

>>Error: The logical pathname SYS: DOC; STR; is not defined
While in the function (:METHOD FS:LOGICAL-HOST :TRANSLATE-RAW)  (:METHOD FS:LOGICAL-HOST :TRANSLATE)  (:METHOD FS:LOGICAL-PATHNAME :TRANSLATED-PATHNAME)

(:METHOD FS:LOGICAL-HOST :TRANSLATE-RAW):  (P.C. = 36)
   Arg 0 (SELF): #<LOGICAL-HOST SYS>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:LOGICAL-HOST -- 9. IV's, 2. FL's 105422371>
   Arg 2 (OPERATION): :TRANSLATE-RAW
   Arg 3 (PATHNAME): #<LOGICAL-PATHNAME "SYS: DOC; STR; STR6.SAB.4">

(:METHOD FS:LOGICAL-HOST :TRANSLATE):  (P.C. = 5)
   Arg 0 (SELF): #<LOGICAL-HOST SYS>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:LOGICAL-HOST -- 9. IV's, 2. FL's 105422371>
   Arg 2 (OPERATION): :TRANSLATE
   Arg 3 (PATHNAME): #<LOGICAL-PATHNAME "SYS: DOC; STR; STR6.SAB.4">

(:METHOD FS:LOGICAL-PATHNAME :TRANSLATED-PATHNAME):  (P.C. = 67)
   Arg 0 (SELF): #<LOGICAL-PATHNAME "SYS: DOC; STR; STR6.SAB.4">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:LOGICAL-PATHNAME -- 8. IV's, 3. FL's 105360754>
   Arg 2 (OPERATION): :TRANSLATED-PATHNAME

(:DEFUN-METHOD FS:LOGICAL-PATHNAME-PASS-ON):  (P.C. = 5)
   Arg 0 (SELF): #<LOGICAL-PATHNAME "SYS: DOC; STR; STR6.SAB.4">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:LOGICAL-PATHNAME -- 8. IV's, 3. FL's 105360754>
   Arg 2 (MESSAGE): :OPEN
   Rest arg (REST): (#<LOGICAL-PATHNAME "SYS: DOC; STR; STR6.SAB.4"> :DIRECTION :INPUT :BYTE-SIZE 8 :CHARACTERS NIL)

(:METHOD FS:LOGICAL-PATHNAME :OPEN):  (P.C. = 10)
   Arg 0 (SELF): #<LOGICAL-PATHNAME "SYS: DOC; STR; STR6.SAB.4">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:LOGICAL-PATHNAME -- 8. IV's, 3. FL's 105360754>
   Arg 2 (OPERATION): :OPEN
   Rest arg (.ARGS.): (#<LOGICAL-PATHNAME "SYS: DOC; STR; STR6.SAB.4"> :DIRECTION :INPUT :BYTE-SIZE 8 :CHARACTERS NIL)

FS:COMMON-LISP-OPEN:  (P.C. = 450)
   Arg 0 (PATHNAME): #<LOGICAL-PATHNAME "SYS: DOC; STR; STR6.SAB.4">
   Arg 1 (KEYWORD-ARGS): (:CHARACTERS NIL :BYTE-SIZE 8)

OPEN:  (P.C. = 257)
   Arg 0 (PATHNAME): #<LOGICAL-PATHNAME "SYS: DOC; STR; STR6.SAB.4">
   Rest arg (KEYWORD-ARGS): (:CHARACTERS NIL :BYTE-SIZE 8)

SAGE:OPEN-SAGE-FILE:  (P.C. = 155)
   Arg 0 (PATHNAME): #<LOGICAL-PATHNAME "SYS: DOC; STR; STR6.SAB.4">

Rest of stack:
(:METHOD SAGE:BASIC-DOC-RECORD :INIT):  (P.C. = 37)
INSTANTIATE-FLAVOR:  (P.C. = 445)
MAKE-INSTANCE:  (P.C. = 6)
SAGE:INSTALL-RECORD:  (P.C. = 34)
SAGE:RECORD-FOR-TOPIC&TYPE:  (P.C. = 224)<<Error printing function name>>
(:METHOD SAGE:SOURCE-OF-FORMATTED-SAGE-RECORD-LINES :INIT):  (P.C. = 24)
INSTANTIATE-FLAVOR:  (P.C. = 445)
MAKE-INSTANCE:  (P.C. = 6)
SAGE:FORMATTED-SAGE-RECORD-LINE-SOURCE:  (P.C. = 11)
(:METHOD SAGE:DEX-ITEM :PREPARE-DOCUMENTATION):  (P.C. = 6)
(:METHOD SAGE:DEX-VIEWING-CONTEXT :DISPLAY-DEX-ITEM):  (P.C. = 12)
(:METHOD SAGE:DEX-VIEWING-CONTEXT :ADD-ITEM-TO-CONTEXT):  (P.C. = 20)
(:METHOD SAGE:DEX :CANDIDATE-ITEM-CLICK):  (P.C. = 31)
(:METHOD SAGE:DEX :COMMAND-BLIP):  (P.C. = 104)
(:METHOD SAGE:DEX :COMMAND-LOOP):  (P.C. = 47)<<Error printing function name>>
(:METHOD SAGE:DEX :TOPLEVEL):  (P.C. = 255)<<Error printing function name>>
SAGE:DEX-TOPLEVEL:  (P.C. = 4)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
16-Feb-85 20:38:18-EST,508;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 16 Feb 85 20:38-EST
Date: Saturday, 16 February 1985, 20:39-EST
From: David Vinayak Wallace <Gumby at MC>
Subject: bugs in the hacks package
To: BUG-LISPM at OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 18, on Lisp Machine Jimi Hendrix:

1> Some things run too fast on the 3600 (i.e. rotate).

2> The keys for flicking the pdp-6 switches don't line up correctly on
   the new 3600 keyboard.  E.g, LOCAL should toggle bit 0, not NETWORK.
16-Feb-85 22:19:48-EST,889;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 16 Feb 85 22:19-EST
Date: Sat, 16 Feb 85 22:20 EST
From: "Mark H. Shirley" <MHS@MIT-MC.ARPA>
Subject: Bug in scrolling a supdup window
To: BUG-LISPM@MIT-MC.ARPA
Message-ID: <850216222040.2.MHS@APIARY-7.MIT>

In Symbolics 3600 Release 6.0 Beta IIc, microcode TMC5-MIC 315, FEP 18, on Lisp Machine Apiary-7:

I used supdup to get to MC (<select> T), cranked up an emacs and started sending mail.
I filled in To: and :Re and hit return to begin a cc: line.  The return caused the
"--Text follows this line--" line to scroll down.  It looked like the scroll was
implemented with bitblt and the window didn't know where the lines were on the screen,
because all of the "--Text follows this line--" line moved down except the tops of the
characters.  When I set the border-margin-width of the nvt window to 0, the problem went
away.
18-Feb-85 15:42:35-EST,552;000000000000
Received: from MIT-DUANE by MIT-OZ via Chaosnet; 18 Feb 85 15:42-EST
Date: Monday, 18 February 1985, 15:42-EST
From: zvona at MIT-OZ
Sender: DAM at MIT-OZ
Subject: why does terminal 1 f at MIT connect to Riverside?
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 22, on Lisp Machine Duane Allman:

terminal 1 f =>

09:07 SCRC-RIVERSIDE (at Chaos address 24425) did not respond to a NAMESPACE request.;
Obsolete host information may be used.

I verified that REAGAN was willing to take a namespace request.
18-Feb-85 16:01:27-EST,1812;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 18 Feb 85 16:01-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 180266; Mon 18-Feb-85 12:23:14-EST
Date: Monday, 18 February 1985, 12:21-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: compiler blowout
To: ZVONA at MIT-OZ, Bernard S. Greenberg <BSG at SCRC-TENEX>
cc: BUG-LISPM at MIT-OZ
In-Reply-To: <ZVONA.12088189885.BABYL@MIT-OZ>
References: The message of 16 Feb 85 12:04-EST from David Chapman <Zvona at MIT-OZ>,
            The message of 16 Feb 85 13:22-EST from Bernard S. Greenberg <BSG at SCRC-TENEX>,
            <ZVONA.12088189885.BABYL@MIT-OZ>,
            The message of 16 Feb 85 14:02-EST from Bernard S. Greenberg <BSG at SCRC-TENEX>
Message-ID: <850218122157.3.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Sat, 16 Feb 1985  13:50 EST
    From: ZVONA@MIT-OZ

	Do I read your bug report right, that you are trying this in RELEASE 5?
	That does not work in release 5.   Lexical scoping is
	a release 6 feature.

    Right, but I wasn't even trying to get lexical scoping; it was a bug
    in my program.  
The bug in your program was trying to get lexical scoping.  I guess that
makes you guilty by association :-)
    The point is that the compiler shouldn't blow up.
    Graceful degradation, you know?

Graceful degredation is a major project which is on the queue.  If it
only took a few hours to implement, it may have been done already.  It
isn't that easy, though.

    If you don't want to hear rel 5 bugs any more, let me know.

We don't want to hear Rel 5 bugs that you know are fixed in Rel 6, or
that have simple enough test cases you can ask one of the Rel 6
beta-sites at MIT to test for you, and the test shows it's already
fixed.
18-Feb-85 16:02:34-EST,1555;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 18 Feb 85 16:01-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 180270; Mon 18-Feb-85 12:31:28-EST
Date: Monday, 18 February 1985, 12:30-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: Indenting of DEFFed macros-surrounding-code.
To: Gavan Duffy <GAVAN at MIT-OZ>, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 16 Feb 85 18:02-EST from Gavan Duffy <GAVAN at MIT-OZ>
Message-ID: <850218123013.5.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Saturday, 16 February 1985, 18:02-EST
    From: Gavan Duffy <GAVAN at MIT-OZ>

    ;In Symbolics 3600 System 242.356, Hardcopy 20.10,
    ;Experimental RELATUS 131.301, FEP 24, on Lisp Machine Buddy Holly:
    ;
    ;If a macro with an &body on its lambda list is DEFFed, the
    ;DEFFed form doesn't indent properly in the editor.
    ;
    ;Example:

    (DEFVAR FOOBAR NIL)

    (DEFMACRO WITH-FOOBAR-BOUND (VALUE &BODY BODY)
      `(LET ((FOOBAR ,VALUE))
	 . ,BODY))

    (DEFUN FOO ()
      (WITH-FOOBAR-BOUND 'YOW
	(FORMAT STANDARD-OUTPUT "~S" FOOBAR)))

    (DEFF WITH-A-BOUND-FOOBAR #'WITH-FOOBAR-BOUND)

    (DEFUN BAR ()
      (WITH-A-BOUND-FOOBAR 'YIKES
			   (FORMAT STANDARD-OUTPUT "~S" FOOBAR)))

 
Macros add indentation information to a zwei database for that purpose.
This example indicates that that design decision was a poor one.  An
alternative is to put indentation on the debugging-info of the function
instead of in a separate database.
18-Feb-85 16:18:24-EST,748;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 18 Feb 85 16:18-EST
Date: 18 February 1985 16:07-EST
From: Dale Worley <DRW @ MIT-MC>
Subject:  Yucky screen behavior on Apiary-5
To: BUG-LISPM @ MIT-MC

Apiary-5 is doing strange things to its screen.  When you are talking
to an EMACS on MC, and you do c-O, the top row of pixels in the first
line of characters being moved down stays put.  This leaves the screen
looking strange.  Also, the first column of pixels in the first column
of characters doesn't like to participate in this function, either.

I'm also getting two cursors on this screen, which blink at different
rates!  One is the cursor from the SUPDUP program, the other is
leaking through from some other window.

Dale
18-Feb-85 16:36:16-EST,1277;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 18 Feb 85 16:36-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 180272; Mon 18-Feb-85 12:33:21-EST
Date: Mon, 18 Feb 85 12:32 EST
From: David C. Plummer in disguise <DCP@SCRC-QUABBIN.ARPA>
Subject: Bug in scrolling a supdup window
To: Mark H. Shirley <MHS@MIT-MC.ARPA>, BUG-LISPM@MIT-MC.ARPA
In-Reply-To: <850216222040.2.MHS@APIARY-7.MIT>
Message-ID: <850218123205.6.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Sat, 16 Feb 85 22:20 EST
    From: "Mark H. Shirley" <MHS@MIT-MC.ARPA>

    In Symbolics 3600 Release 6.0 Beta IIc, microcode TMC5-MIC 315, FEP 18, on Lisp Machine Apiary-7:

    I used supdup to get to MC (<select> T), cranked up an emacs and started sending mail.
    I filled in To: and :Re and hit return to begin a cc: line.  The return caused the
    "--Text follows this line--" line to scroll down.  It looked like the scroll was
    implemented with bitblt and the window didn't know where the lines were on the screen,
    because all of the "--Text follows this line--" line moved down except the tops of the
    characters.  When I set the border-margin-width of the nvt window to 0, the problem went
    away.

This has been fixed for the Real 6.0.
18-Feb-85 17:24:14-EST,1354;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 18 Feb 85 17:24-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 180429; Mon 18-Feb-85 17:24:43-EST
Date: Mon, 18 Feb 85 17:23 EST
From: David C. Plummer in disguise <DCP@SCRC-QUABBIN.ARPA>
Subject: Yucky screen behavior on Apiary-5
To: Dale Worley <DRW@MIT-MC.ARPA>, BUG-LISPM@MIT-MC.ARPA
In-Reply-To: The message of 18 Feb 85 16:07-EST from Dale Worley <DRW at MIT-MC>
Message-ID: <850218172318.9.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: 18 February 1985 16:07-EST
    From: Dale Worley <DRW @ MIT-MC>

[Standard flame #69:] Please include the standard bug header so we know
what system you are running.

    Apiary-5 is doing strange things to its screen.  When you are talking
    to an EMACS on MC, and you do c-O, the top row of pixels in the first
    line of characters being moved down stays put.  This leaves the screen
    looking strange.  Also, the first column of pixels in the first column
    of characters doesn't like to participate in this function, either.

    I'm also getting two cursors on this screen, which blink at different
    rates!  One is the cursor from the SUPDUP program, the other is
    leaking through from some other window.

Assuming this is Rel6 BetaIIc, this bug has been fixed for the real
Release 6.
18-Feb-85 17:25:06-EST,1504;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 18 Feb 85 17:25-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 180431; Mon 18-Feb-85 17:25:21-EST
Date: Mon, 18 Feb 85 17:23 EST
From: David C. Plummer in disguise <DCP@SCRC-QUABBIN.ARPA>
Subject: Yucky screen behavior on Apiary-5
To: Dale Worley <DRW@MIT-MC.ARPA>, BUG-LISPM@MIT-MC.ARPA
In-Reply-To: The message of 18 Feb 85 16:07-EST from Dale Worley <DRW at MIT-MC>
Message-ID: <850218172359.0.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: 18 February 1985 16:07-EST
    From: Dale Worley <DRW @ MIT-MC>

[Standard flame #69:] Please include the standard bug header so we know
what system you are running.

    Apiary-5 is doing strange things to its screen.  When you are talking
    to an EMACS on MC, and you do c-O, the top row of pixels in the first
    line of characters being moved down stays put.  This leaves the screen
    looking strange.  Also, the first column of pixels in the first column
    of characters doesn't like to participate in this function, either.

Assuming this is Rel6 BetaIIc, this bug has been fixed for the real
Release 6.

    I'm also getting two cursors on this screen, which blink at different
    rates!  One is the cursor from the SUPDUP program, the other is
    leaking through from some other window.

It's probably the cold load stream cursor which failed to get deselected
somehow.  Do (send tv:cold-load-stream :deselect) and it should go away.
18-Feb-85 23:13:48-EST,961;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 18 Feb 85 23:13-EST
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 180565; Mon 18-Feb-85 23:10:03-EST
Date: Monday, 18 February 1985, 23:08-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: Grind top level
To: Christopher Eliot <CRE at SANCHO-PANZA>
cc: BUG-LISPM at MIT-OZ
In-Reply-To: The message of 1 Feb 85 17:11-EST from Christopher Eliot <CRE at SANCHO-PANZA>
Message-ID: <850218230842.3.MOON@EUPHRATES.SCRC.Symbolics.COM>

    Date: Friday, 1 February 1985, 17:11-EST
    From: Christopher Eliot <CRE@SANCHO-PANZA>
    Actually, I think
    that indenting would be a useful feature of windows.  I would like to be able
    to do something like this:
	    (with-indenting (standard-output 5)
	       ...)

SYS:WITH-INDENTATION is defined in Release 5, I think (I didn't actually go and check).

This does not answer the rest of your message.
19-Feb-85 10:07:30-EST,1265;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 19 Feb 85 10:07-EST
Received: from SCRC-PEACE by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 180717; Tue 19-Feb-85 10:02:04-EST
Date: Tue, 19 Feb 85 10:01 EST
From: Charles Hornig <Hornig@SCRC-STONY-BROOK.ARPA>
Subject: Bug in scrolling a supdup window
To: Mark H. Shirley <MHS@MIT-MC.ARPA>, BUG-LISPM@MIT-MC.ARPA
In-Reply-To: <850216222040.2.MHS@APIARY-7.MIT>
Message-ID: <850219100121.3.HORNIG@PEACE.SCRC.Symbolics.COM>

    Date: Sat, 16 Feb 85 22:20 EST
    From: "Mark H. Shirley" <MHS@MIT-MC.ARPA>

    In Symbolics 3600 Release 6.0 Beta IIc, microcode TMC5-MIC 315, FEP 18, on Lisp Machine Apiary-7:

    I used supdup to get to MC (<select> T), cranked up an emacs and started sending mail.
    I filled in To: and :Re and hit return to begin a cc: line.  The return caused the
    "--Text follows this line--" line to scroll down.  It looked like the scroll was
    implemented with bitblt and the window didn't know where the lines were on the screen,
    because all of the "--Text follows this line--" line moved down except the tops of the
    characters.  When I set the border-margin-width of the nvt window to 0, the problem went
    away.

This is fixed in the real release 6.
19-Feb-85 10:08:49-EST,1793;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 19 Feb 85 10:08-EST
Received: from SCRC-PEACE by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 180718; Tue 19-Feb-85 10:03:53-EST
Date: Tue, 19 Feb 85 10:03 EST
From: Charles Hornig <Hornig@SCRC-STONY-BROOK.ARPA>
Subject: release 6 at MIT
To: Mark H. Shirley <MHS@MIT-MC.ARPA>, BUG-LISPM@MIT-MC.ARPA
In-Reply-To: <850216195312.1.MHS@APIARY-7.MIT>
Message-ID: <850219100301.4.HORNIG@PEACE.SCRC.Symbolics.COM>

    Date: Sat, 16 Feb 85 19:53 EST
    From: "Mark H. Shirley" <MHS@MIT-MC.ARPA>

    In Symbolics 3600 Release 6.0 Beta IIc, microcode TMC5-MIC 315, FEP 18, on Lisp Machine Apiary-7:

    I don't know whether this is a problem with the apiary machines or with the rel 6 band
    we've got, but in the cases I've tried, Document Examiner can't seem to read anything
    from pig.

    Also, I notice that there's no PIG:[S.R6] or whatever it is that rel 6 needs to get it's
    source files.  I tried to look at the definition of si:lisp-command-loop and M-. tried
    to read the source file from "sys: sys;" which translates to USRD$:[S.R5.SYS].  The file
    wasn't there, I suppose since things have been moved around between releases.  In any
    case, looking in [S.R5] seems pretty wrong to me.

    >>Error: The logical pathname SYS: DOC; STR; is not defined
    While in the function (:METHOD FS:LOGICAL-HOST :TRANSLATE-RAW)  (:METHOD FS:LOGICAL-HOST :TRANSLATE)  (:METHOD FS:LOGICAL-PATHNAME :TRANSLATED-PATHNAME)

Release 6 exists at MIT solely so that the namespace system can be
tested.  That means that none of the sources or binaries, including the
documentation, have been loaded there.  Only things needed by the
namespace servers are there.  The rest will come with the real release
6.
19-Feb-85 22:29:03-EST,1115;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 19 Feb 85 22:28-EST
Date: 19 February 1985 22:15-EST
From: Dale Worley <DRW @ MIT-MC>
Subject:  Yucky screen behavior on Apiary-5
To: DCP @ SCRC-QUABBIN
cc: BUG-LISPM @ MIT-MC
In-reply-to: Msg of Mon 18 Feb 85 17:23 EST from David C. Plummer in disguise <DCP at SCRC-QUABBIN.ARPA>

    Date: Mon, 18 Feb 85 17:23 EST
    From: David C. Plummer in disguise <DCP at SCRC-QUABBIN.ARPA>
    To:   Dale Worley <DRW at MIT-MC.ARPA>, BUG-LISPM at MIT-MC.ARPA
    Re:   Yucky screen behavior on Apiary-5

        Date: 18 February 1985 16:07-EST
        From: Dale Worley <DRW @ MIT-MC>

        [...]

    [Standard flame #69:] Please include the standard bug header so we know
    what system you are running.

Q: What is the "standard bug header"?  Also, how do you get a lispm to
tell you what version it's running?  It does put a version message up
when you cold-boot it, but cold-booting can be antisocial if someone's
got something loaded up...  The underlying problem is that I'm not a
lispm hacker, I just use it to Chaos over to MC.

Dale
20-Feb-85 09:20:45-EST,376;000000000000
Received: from MIT-BUDDY by MIT-OZ via Chaosnet; 20 Feb 85 09:20-EST
Date: Wednesday, 20 February 1985, 09:15-EST
From:  <HLV at OZ>
Subject: robob3 hangs when booting
To: BUG-LISPM at OZ
Cc: eln at OZ

Robot3 hangs when "changing site to AI..." when booting (using
>boot.boot which loads rel-5-5-qnam6.load).  It reads in 96% of a file
from Pig and stops.

Harry
20-Feb-85 09:27:16-EST,342;000000000000
Mail-From: ELN created at 20-Feb-85 09:27:04
Date: Wed 20 Feb 85 09:27-EST
From: Ellen C. Hildreth <ELN@MIT-OZ>
Subject: robot4 hangs when booting
To: bug-lispm@MIT-OZ


Robot4 hangs when "changing site to AI..." when booting (using
>boot.boot which loads rel-5-5-qnam6.load). It reads in 96% of a
file from PIG and stops.

ellen
20-Feb-85 09:57:53-EST,2932;000000000000
Received: from MIT-VAX by MIT-OZ via Chaosnet; 20 Feb 85 09:57-EST
Received: by mit-vax.Mit-chaos.Arpa (4.12/4.8) with CHAOS id AA16762; Wed, 20 Feb 85 09:47:27 est
Date: Wednesday, 20 February 1985, 09:32-EST
From: <beckerle@MIT-MAHOGANY>
Subject: wierd namespace junk on screen
To: BUG-LISPM@OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 18,
Tanglewood Version VII, on Project Tanglewood Cherry:

just reboot, and this is what you get. This has been happening for several days.
Also, the header above says this is machine "Cherry", when it is really "Mahogany",
so reply to beckerle@xx please.

>>Error: The object (:HOST #<NAME SEW|HYDRA 35035031> #<NAMESPACE SEW 35034757>) is not a valid function
While in the function (:HOST #<NAME SEW|HYDRA 35035031> #<NAMESPACE SEW 35034757>)  NETI:OPEN-NAMESPACE-SERVER  NETI:QUERY-NAMESPACE-SERVER

(:HOST #<NAME SEW|HYDRA 35035031> #<NAMESPACE SEW 35034757>):
   Arg 0: :SITE

NETI:OPEN-NAMESPACE-SERVER:  (P.C. = 123)
   Arg 0 (NAMESPACE): #<NAMESPACE SEW 35034757>
   --Defaulted args:--
   Arg 1 (FOR-UPDATE): NIL

NETI:QUERY-NAMESPACE-SERVER:  (P.C. = 75)
   Arg 0 (CLASS): :HOST
   Arg 1 (NAMESPACE): #<NAMESPACE SEW 35034757>
   Rest arg (PROPERTY-LIST): (:NAME #<NAME SEW|HYDRA 35035031>)

NETI:FIND-OBJECT-NAMED-IN-NAMESPACE:  (P.C. = 205)
   Arg 0 (CLASS): :HOST
   Arg 1 (NAME): #<NAME SEW|HYDRA 35035031>
   Arg 2 (NAMESPACE): #<NAMESPACE SEW 35034757>
   Arg 3 (ERROR-P): NIL

NETI:DO-UNKNOWN-OBJECT-FIXUPS:  (P.C. = 136)
   Arg 0 (DECACHE-FIRST): T

NETI:QUERY-NAMESPACE-SERVER:  (P.C. = 477)
   Arg 0 (CLASS): :NAMESPACE
   Arg 1 (NAMESPACE): #<NAMESPACE SCRC 61555601>
   Rest arg (PROPERTY-LIST): (:NAME :SCRC)

NETI:GET-INCREMENTAL-UPDATE-FROM-NETWORK:  (P.C. = 421)
   Arg 0 (NAMESPACE): #<NAMESPACE SCRC 61555601>
   Arg 1 (STARTING-TIMESTAMP): 4764

(:METHOD NETI:NAMESPACE :GET-LATEST-TIMESTAMP):  (P.C. = 21)
   Arg 0 (SELF): #<NAMESPACE SCRC 61555601>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NETI:NAMESPACE -- 8. IV's, 0. FL's 44036534>
   Arg 2 (OPERATION): :GET-LATEST-TIMESTAMP

Rest of stack:
(:METHOD NETI:NAMESPACE :VALIDATION-TIMESTAMP):  (P.C. = 20)
(:METHOD NET:OBJECT :CHECK-VALIDITY):  (P.C. = 102)
(:METHOD NET:OBJECT :CHECK-VALIDITY):  (P.C. = 34)
NETI:FIND-OBJECT-NAMED-IN-NAMESPACE:  (P.C. = 45)
NET:FIND-OBJECT-NAMED:  (P.C. = 46)
NETI:GET-INCREMENTAL-UPDATE-FROM-NETWORK:  (P.C. = 267)
(:METHOD NETI:NAMESPACE :GET-LATEST-TIMESTAMP):  (P.C. = 21)
(:METHOD NETI:NAMESPACE :VALIDATION-TIMESTAMP):  (P.C. = 20)
(:METHOD NETI:NAMESPACE :SET-CHANGED-OBJECTS-ALIST):  (P.C. = 33)
NETI:DELETE-OBJECT-FROM-NAMESPACE:  (P.C. = 73)
NETI:GET-INCREMENTAL-UPDATE-FROM-NETWORK:  (P.C. = 224)
(:METHOD NETI:NAMESPACE :GET-LATEST-TIMESTAMP):  (P.C. = 21)
NETI:INITIALIZE-NAMESPACES-AND-NETWORK:  (P.C. = 155)
LISP-REINITIALIZE:  (P.C. = 443)
SI:LISP-TOP-LEVEL:  (P.C. = 3)
20-Feb-85 10:09:24-EST,679;000000000000
Mail-From: CJL created at 20-Feb-85 10:09:04
Date: Wed, 20 Feb 1985  10:09 EST
Message-ID: <CJL.12089198189.BABYL@MIT-OZ>
From: Chris Lindblad <CJL@MIT-OZ>
To:   HLV@MIT-OZ, ELN@MIT-OZ
Cc:   BUG-LISPM@MIT-OZ
Subject: robot3 hangs when booting
In-reply-to: Msg of 20 Feb 1985 09:15-EST from <HLV at OZ>

    Date: Wednesday, 20 February 1985, 09:15-EST
    From: <HLV at OZ>

    Robot3 hangs when "changing site to AI..." when booting (using
    >boot.boot which loads rel-5-5-qnam6.load).  It reads in 96% of a file
    from Pig and stops.

Look carefully. It's not hung. It's doing something. It's converting
pathnames. Give it a few minutes. It will finish.
21-Feb-85 14:50:38-EST,758;000000000000
Received: from MIT-MOON by MIT-OZ via Chaosnet; 21 Feb 85 14:50-EST
Date: Thursday, 21 February 1985, 14:45-EST
From: Chris Lindblad <cjl at OZ>
Subject: Cp display of possible commands not in order.
To: BUG-LISPM at OZ
Message-ID: <850221144525.2.CJL@MOON.MIT>

In Symbolics 3600 Release 6.0 Beta IIc, microcode TMC5-MIC 315, on Lisp
Machine Keith Moon:

The display of command names given by the "help" command and the help
key should be sorted by name, regardless of which comtab each command is
in. Currently, the commands in the user comtab are displayed in
alphabetical order, then the commands in the global comtab.

ps. It seems a bit strange that si:print-possible-commands compiles to
something different if symbol foo is bound.

21-Feb-85 15:54:39-EST,1020;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 21 Feb 85 15:49-EST
Date: Thursday, 21 February 1985, 15:41-EST
From: Cory Myers <cory at MIT-BUGS-BUNNY>
Subject: Conformal arrays have some non-intuitive behavior
To: BUG-LISPM at OZ
Fcc: BUGS-BUNNY: /syla/dspg/cory/mbox
Message-ID: <850221154142.1.CORY@TWEETY-PIE.MIT>

In Symbolics 3600 Release 6.0 Beta IIc, microcode TMC5-FPA-MIC 315,
FEP 17, with util, on Lisp Machine Tweety Pie:

(setq x (make-array '(5 5)))
 ==>
#<ART-Q-5-5 13732357>

(setq y (make-array '(3 3) :displaced-to x :displaced-index-offset 0
:displaced-conformally t))
 ==>
#<ART-Q-3-3 13733647>

(fillarray y '(1))
 ==>
#<ART-Q-3-3 13733647>

(listarray x)
 ==>
(1 1 1 NIL NIL
 1 1 1 NIL NIL
 1 1 1 NIL NIL
 NIL NIL NIL NIL NIL
 NIL NIL NIL NIL NIL)

(listarray y)
 ==>
(1 1 1 1 1 1 1 1 1 NIL NIL NIL NIL NIL NIL)

(array-length y)
 ==>
15

BTW, it would be very useful if the displaced-index-offset could be
specified as an arbitrary index (such as (1 1)).
21-Feb-85 15:56:48-EST,806;000000000000
Mail-From: SLC created at 21-Feb-85 15:51:22
Date: Thu 21 Feb 85 15:51:21-EST
From: Stephen L. Chiu <SLC@MIT-OZ>
Subject: bug in displaced arrays
To: bug-lispm@MIT-OZ

There seems to be a bug in the make-array function with regards to displaced
arrays.  Example:

  (setq a (make-array 10 :type 'art-16b))
  (setq b (make-array 10 :type 'art-8b :displaced-to a :displaced-index-offset 4))
  (setq c (make-array  5 :type 'art-16b :displaced-to b))
  (aset 2 c 0)

The result is:

  a = 0 0 0 0 2 0 0 ...
  b = 0 0 0 0 2 0 0 ...
  c = 2 0 0 ...

Hence, the array b bears the correct relation to the array a, but the array c
does not bear the correct relation to b.  It may be that the array c thinks
that it also has a displaced-index-offset of 4 with respect to a.

-Steve
-------
22-Feb-85 09:26:29-EST,4610;000000000000
Received: from MIT-JANIS by MIT-OZ via Chaosnet; 22 Feb 85 09:26-EST
Date: Friday, 22 February 1985, 09:21-EST
From: Ken Haase <KWH at OZ>
Subject: Page fault on unallocated VMA.
To: BUG-LISPM at OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10, ARLO 25.57, ARLOX 5.59,
Experimental CYRANO 3.0, FEP 24, Plain ARLO & ARLOX 2/15/85, on Lisp Machine Janis Joplin:

This happened while describing the fullness distribution of a hash table.

>>Error: Page fault on unallocated VMA 126755003
While in the function (:METHOD SI:EQ-HASH-TABLE :DESCRIBE)  DESCRIBE  SI:*EVAL

(:METHOD SI:EQ-HASH-TABLE :DESCRIBE):  (P.C. = 70)
   Arg 0 (SELF): #<EQ-HASH-TABLE 121416710>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:EQ-HASH-TABLE -- 7. IV's, 0. FL's 75341130>
   Arg 2 (OPERATION): :DESCRIBE
   Local 3 (NBLOCKS): 186803.
   Local 4 (INFO): #<ART-Q-9. 126754571>
   Local 5 (BLOCK-INDEX): 89027.
   Local 6: 186803.
   Local 7 (COUNT): 0.
   Local 8: 7.
   Local 9 (LOC): #<DTP-LOCATIVE 126755003>

DESCRIBE:  (P.C. = 76)
   Arg 0 (ANYTHING): #<EQ-HASH-TABLE 121416710>
   --Defaulted args:--
   Arg 1 (NO-COMPLAINTS): NIL

SI:*EVAL:  (P.C. = 370)
   Arg 0 (FORM): (DESCRIBE (DBG:ARG (QUOTE SELF)))

DBG:EVAL-IN-ERROR-ENVIRONMENT:  (P.C. = 343)
   Arg 0 (FORM): (DESCRIBE (DBG:ARG (QUOTE SELF)))
   Arg 1 (BIND-STREAMS): T

DBG:COMMAND-LOOP:  (P.C. = 455)

DBG:DEBUGGER-TOP-LEVEL:  (P.C. = 517)
   Arg 0 (*ERROR*-initialization): #<BREAK 54377611>
   Arg 1 (*INNERMOST-VISIBLE-FRAME*-initialization): #<DTP-LOCATIVE 43542146>
   Arg 2 (*REASON-DEBUGGER-ENTERED*-initialization): NIL
   Arg 3 (SPECIAL-COMMANDS): NIL

DBG:ENTER-DEBUGGER:  (P.C. = 16)
   Arg 0 (ERROR): #<BREAK 54377611>
   --Defaulted args:--
   Arg 1 (REASON): NIL
   Arg 2 (SPECIAL-COMMANDS): NIL

DBG-WITH-MORE:  (from ARLO: CYRANO; WINDOWS)
   Arg 0: #<CYRANO-WATCHER-FRAME Cyrano Watcher Frame 1 1040216 exposed>

Rest of stack:
DBG-WITH-MORE:  (from ARLO: CYRANO; WINDOWS)
SI:MAYBE-PREEMPT-CURRENT-PROCESS:  (P.C. = 22)
SI:%ALLOCATE-STRUCTURE-BLOCK-ESCAPE:  (P.C. = 155)
SYS:%ALLOCATE-BLOCK:  (P.C. = 17)
MAKE-ARRAY:  (P.C. = 1045)
(:METHOD SI:EQ-HASH-TABLE :NEW-ARRAY):  (P.C. = 17)
(:METHOD SI:EQ-HASH-TABLE :GROW):  (P.C. = 21)
(:METHOD SI:EQ-HASH-TABLE :PUT-HASH):  (P.C. = 131)
UPDATE-HASH-LIST:  (P.C. = 27)  (from PIG:USRD$:[KWH.ARLO.PATCHES]25X56)
(:METHOD DEPENDENCY-RECORD :REMOVE-DEPENDENT):  (P.C. = 52)  (from PIG:USRD$:[KWH.ARLO.PATCHES]25X56)
(:METHOD SLOT-COMPUTATION-RECORD :DETACH-SELF):  (P.C. = 14)  (from ARLO: SOURCES; KERNEL)
(:METHOD SLOT-COMPUTATION-RECORD :WHOPPER :INVALIDATE-SELF):  (P.C. = 7)  (from ARLO: SOURCES; KERNEL)
(:METHOD SLOT-COMPUTATION-RECORD :COMBINED :INVALIDATE-SELF):  (P.C. = 11)  (from ARLO: SOURCES; CODING)
(:METHOD SLOT-DEPENDENCY-RECORD :REPLACE-SELF):  (P.C. = 10)  (from ARLO: SOURCES; KERNEL)
MODIFY-SLOT-DEPENDENCIES:  (P.C. = 45)  (from ARLO: SOURCES; KERNEL)
RECORD-VALUE:  (P.C. = 25)  (from ARLO: SOURCES; KERNEL)
TYPED-PUT:  (P.C. = 151)  (from ARLO: SOURCES; BOOT)
INVERTED-PUT-VALUE:  (P.C. = 146)  (from ARLO: AI; INVERSES)
PUT-VALUE:  (P.C. = 46)  (from ARLO: SOURCES; KERNEL)
INVERTED-PUT-VALUE:  (P.C. = 165)  (from ARLO: AI; INVERSES)
PUT-VALUE:  (P.C. = 46)  (from ARLO: SOURCES; KERNEL)
INVERTED-CACHE-VALUE:  (P.C. = 170)  (from ARLO: AI; INVERSES)
CACHE-VALUE:  (P.C. = 50)  (from ARLO: SOURCES; KERNEL)
TYPED-DEFAULT-OR-GET:  (P.C. = 71)  (from ARLO: SOURCES; BOOT)
TYPED-AND-DEFAULTING-GET:  (P.C. = 122)  (from ARLO: SOURCES; BOOT)
GET-VALUE:  (P.C. = 44)  (from ARLO: SOURCES; KERNEL)
PARALLEL-JOIN-WITH-CONSTANT:  (P.C. = 56)  (from ARLO: CYRANO; AM)
APPLY-OPERATION:  (P.C. = 23)  (from ARLO: CYRANO; ABSTRACT)
FILL-IN-EXAMPLES-OF-OPERATION-APPLICATION:  (P.C. = 52)  (from ARLO: CYRANO; OPERATION)
EXECUTE-RULE:  (P.C. = 10)  (from PIG:USRD$:[KWH.ARLO.XPATCHES]5X50)
RUN-RULE:  (P.C. = 165)  (from ARLO: CYRANO; INTERFACE)
RUN-RULE:  (from ARLO: CYRANO; INTERFACE)
RUN-OVERRIDING-RULES-FOR-CLASSES:  (P.C. = 32)  (from ARLO: CYRANO; CONTROL)
OVERRIDING-RULE-INTERPRETER:  (P.C. = 17)  (from ARLO: CYRANO; CONTROL)
INTERPRET-CYRANO-RULES:  (P.C. = 4)  (from ARLO: CYRANO; GENERAL)
RUN-TASK:  (P.C. = 67)  (from ARLO: CYRANO; INTERFACE)
RUN-TASK:  (from ARLO: CYRANO; INTERFACE)
SELECT-AND-RUN-TASK:  (P.C. = 54)  (from ARLO: CYRANO; CONTROL)
THINK-ABOUT-TOPIC:  (P.C. = 45)  (from ARLO: CYRANO; CONTROL)
THINK-ABOUT-TOPIC-WITH-WATCHER:  (P.C. = 41)  (from ARLO: CYRANO; WINDOWS)
SI:PROCESS-RUN-FUNCTION-INTERNAL:  (P.C. = 51)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
22-Feb-85 12:21:57-EST,1905;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 22 Feb 85 12:21-EST
Received: from SCRC-HARLEM by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 136231; Fri 22-Feb-85 12:15:50-EST
Date: Fri, 22 Feb 85 12:16 EST
From: Joseph R Goldstone <joseph@SCRC-QUABBIN.ARPA>
Subject: Yucky screen behavior on Apiary-5
To: Dale Worley <DRW@MIT-MC.ARPA>
cc: BUG-LISPM@MIT-MC.ARPA
In-Reply-To: The message of 19 Feb 85 22:15-EST from Dale Worley <DRW at MIT-MC>
Message-ID: <850222121633.0.JOSEPH@HARLEM.SCRC.Symbolics.COM>

    Date: 19 February 1985 22:15-EST
    From: Dale Worley <DRW @ MIT-MC>

	Date: Mon, 18 Feb 85 17:23 EST
	From: David C. Plummer in disguise <DCP at SCRC-QUABBIN.ARPA>
	To:   Dale Worley <DRW at MIT-MC.ARPA>, BUG-LISPM at MIT-MC.ARPA
	Re:   Yucky screen behavior on Apiary-5

	    Date: 18 February 1985 16:07-EST
	    From: Dale Worley <DRW @ MIT-MC>

	    [...]

	[Standard flame #69:] Please include the standard bug header so we know
	what system you are running.

    Q: What is the "standard bug header"?  

One easy way to get the standard bug header is via the ZMacs m-X Bug command.
This will ask you to whom the bug should be reported; the default (which you
get by pressing RETURN when prompted in the minibuffer) is BUG-LISPM.  You
will then be given a buffer with the To: and Subject: lines at the top, a
line that looks like
  --Text follows this line--
and then the "standard bug header".  Fill in the subject line, move down to
the bottom, and describe the bug.  Press the END key to send the bug report.

					   Also, how do you get a lispm to
    tell you what version it's running?  It does put a version message up
    when you cold-boot it, but cold-booting can be antisocial if someone's
    got something loaded up...  
Indeed.  Typing (print-herald) to any MIT, Symbolics, LMI, or TI LispM should
get you the version info you need.
22-Feb-85 12:43:23-EST,4819;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 22 Feb 85 12:43-EST
Date: Friday, 22 February 1985, 12:38-EST
From: Patrick A. O'Donnell <PAO at MIT-EECS>
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10, NS 19.74,
Experimental Manip 3.1, Experimental Puma 3.0, FEP 18, on Lisp Machine Robot-2:

I typed <ESCAPE> to get the input history in the editor typeout window.
After listing the first 14 elements, the following error was signalled.
The GC had done two flips yesterday, then I had called (GC-IMMEDIATELY)
this morning before going to lunch.

Returning T from (:METHOD ZWEI:HISTORY :EQUAL-ELEMENTS) allowed it to
proceed without further molestation.

>>Trap: The word #<DTP-GC-FORWARD 137740240> was read from location 100244651 (in WORKING-STORAGE-AREA).
While in the function STRINGP  EQUAL  (:METHOD ZWEI:HISTORY :EQUAL-ELEMENTS)

STRINGP:  (P.C. = 6)
   Arg 0 (X): <<Error printing value>>

EQUAL:  (P.C. = 47)
   Arg 0 (A): <<Error printing value>>
   Arg 1 (B): "(setq quantization-offset 4)"

(:METHOD ZWEI:HISTORY :EQUAL-ELEMENTS):  (P.C. = 7)
   Arg 0 (SELF): #<ABBREVIATING-HISTORY Editor Typeout Window 5 Input 4614010>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:HISTORY -- 7. IV's, 0. FL's 53020130>
   Arg 2 (OPERATION): :EQUAL-ELEMENTS
   Arg 3 (ELEMENT1): <<Error printing value>>
   Arg 4 (ELEMENT2): "(setq quantization-offset 4)"

ZWEI:DISPLAY-HISTORY-MENU:  (P.C. = 234)
   Arg 0 (STREAM): #<EDITOR-TYPEOUT-WINDOW Editor Typeout Window 5 2643531 exposed>
   Arg 1 (HISTORY): #<ABBREVIATING-HISTORY Editor Typeout Window 5 Input 4614010>
   Arg 2 (MAXIMUM-LENGTH): 20.
   Arg 3 (META-Y): NIL
   Arg 4 (MOUSE-ITEM): NIL
   Arg 5 (STRING): NIL
   --Defaulted args:--
   Arg 6 (STARTING-POSITION): 0.

(:INTERNAL (:INTERNAL (:DEFUN-METHOD TV:RH-DISPLAY-HISTORY) 0.) 0.):  (P.C. = 27)
   Arg 0 (SELF): #<EDITOR-TYPEOUT-WINDOW Editor Typeout Window 5 2643531 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:STREAM-MIXIN -- 14. IV's, 0. FL's 55445551>
   Arg 2 (IGNORE): 95.
   Arg 3 (IGNORE): 48.
   Arg 4 (HISTORY): #<ABBREVIATING-HISTORY Editor Typeout Window 5 Input 4614010>
   Arg 5 (META-Y): NIL
   Arg 6 (AMOUNT): T
   Arg 7 (STRING): NIL

(:INTERNAL (:DEFUN-METHOD TV:RH-DISPLAY-HISTORY) 0.):  (P.C. = 12)
   Rest arg (ARGS): (95. 48. #<ABBREVIATING-HISTORY Editor Typeout Window 5 Input 4614010> NIL T NIL)

(:DEFUN-METHOD TV:RH-DISPLAY-INFO-WITH-FONTS-INTERNAL):  (P.C. = 65)
   Arg 0 (SELF): #<EDITOR-TYPEOUT-WINDOW Editor Typeout Window 5 2643531 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:STREAM-MIXIN -- 14. IV's, 0. FL's 55445551>
   Arg 2 (NUMERIC-ARG-P): NIL
   Arg 3 (SWITCH-FONT-MAP): NIL
   Arg 4 (PRINTER): #<DTP-COMPILED-FUNCTION (:INTERNAL (:DEFUN-METHOD TV:RH-DISPLAY-HISTORY) 0.) 11253515>
   Rest arg (PRINTER-ARGS): (#<ABBREVIATING-HISTORY Editor Typeout Window 5 Input 4614010> NIL T NIL)

(:DEFUN-METHOD TV:RH-DISPLAY-HISTORY):  (P.C. = 16)
   Arg 0 (SELF): #<EDITOR-TYPEOUT-WINDOW Editor Typeout Window 5 2643531 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:STREAM-MIXIN -- 14. IV's, 0. FL's 55445551>
   Arg 2 (HISTORY): #<ABBREVIATING-HISTORY Editor Typeout Window 5 Input 4614010>
   Arg 3 (META-Y): NIL
   Arg 4 (AMOUNT): T
   --Defaulted args:--
   Arg 5 (STRING): NIL

Rest of stack:
(:INTERNAL (:INTERNAL (:DEFUN-METHOD TV:COM-DISPLAY-INPUT-HISTORY) 0.) 0.):  (P.C. = 14)
(:INTERNAL (:DEFUN-METHOD TV:COM-DISPLAY-INPUT-HISTORY) 0.):  (P.C. = 12)
(:DEFUN-METHOD TV:COM-DISPLAY-INPUT-HISTORY):  (P.C. = 15)  (from NS: CODE; SYSTEM-PATCHES)
TV:COM-DISPLAY-INPUT-HISTORY:  (P.C. = 12)  (from NS: CODE; SYSTEM-PATCHES)
(:DEFUN-METHOD TV:ALTERNATE-RUBOUT-HANDLER-TYI):  (P.C. = 225)  (from NS: CODE; SYSTEM-PATCHES)
TV:ALTERNATE-RUBOUT-HANDLER-TYI:  (P.C. = 12)  (from NS: CODE; SYSTEM-PATCHES)
TV:RUBOUT-HANDLER-INVOKE:  (P.C. = 11)
(:METHOD TV:STREAM-MIXIN :ANY-TYI):  (P.C. = 43)
(:DEFUN-METHOD TV:TYI-INTERNAL):  (P.C. = 5)
(:METHOD TV:STREAM-MIXIN :TYI):  (P.C. = 7)
SI:XR-XRTYI-WHITE-OUT:  (P.C. = 5)
SI:XR-READ-THING:  (P.C. = 15)
(:INTERNAL SI:READ-INTERNAL 0.):  (P.C. = 15)
(:DEFUN-METHOD TV:RUBOUT-HANDLER-READ):  (P.C. = 61)
(:METHOD TV:STREAM-MIXIN :RUBOUT-HANDLER):  (P.C. = 72)
SI:READ-INTERNAL:  (P.C. = 46)
READ-FOR-TOP-LEVEL:  (P.C. = 6)
SI:BREAK-READ-FUNCTION:  (P.C. = 124)
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 142)
BREAK:  (P.C. = 173)
(:DEFUN-METHOD ZWEI:COM-BREAK):  (P.C. = 112)
ZWEI:COM-BREAK:  (P.C. = 12)
ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 214)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 41)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
22-Feb-85 13:50:09-EST,1596;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 22 Feb 85 13:50-EST
Received: from SCRC-HARLEM by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 136294; Fri 22-Feb-85 13:42:28-EST
Date: Friday, 22 February 1985, 13:43-EST
From: Joseph R Goldstone <joseph at SCRC-QUABBIN>
Subject: Cp display of possible commands not in order.
To: Chris Lindblad <cjl at OZ>, BUG-LISPM at OZ
In-Reply-To: <850221144525.2.CJL@MOON.MIT>
Message-ID: <850222134304.2.JOSEPH@HARLEM.SCRC.Symbolics.COM>
Fonts: CPTFONT

    Date: Thursday, 21 February 1985, 14:45-EST
    From: Chris Lindblad <cjl at OZ>

    In Symbolics 3600 Release 6.0 Beta IIc, microcode TMC5-MIC 315, on Lisp
    Machine Keith Moon:

    ...

    ps. It seems a bit strange that si:print-possible-commands compiles to
    something different if symbol foo is bound.

You mean if (status feature FOO) is non-NIL, which is not the same thing.
I do agree there are better ways to comment out code, though, than:

(defun print-possible-commands (stream completion-table)
  (multiple-value-bind (ignore choices)
      (cp-complete-string (or *cp-token* "") completion-table
			  :literal-delims-p *cp-multiple-space-meaningful*)
    (cond ;; *** This no longer works now that this guy gets called for
          ;; completing keywords as well as command names.
      #+FOO((= (length choices) 1)
	    (let* ((*cp-command* (get (cdr (first choices)) 'command))
		   (*cp-remaining-args* (cmd-args *cp-command*)))
	      (print-remaining-arguments stream)))
      (t
       (cp-display-completions stream choices t)))))
22-Feb-85 14:13:01-EST,1569;000000000000
Received: from SCC-WAIKATO by MIT-OZ via Chaosnet; 22 Feb 85 14:12-EST
Received: from SCRC-EUPHRATES by WAIKATO via CHAOS with CHAOS-MAIL id 83874; Fri 22-Feb-85 14:05:05-EST
Date: Friday, 22 February 1985, 14:07-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: bug in displaced arrays
To: Stephen L. Chiu <SLC at MIT-OZ>
cc: bug-lispm at MIT-OZ
In-Reply-To: The message of 21 Feb 85 15:51-EST from Stephen L. Chiu <SLC at MIT-OZ>
Message-ID: <850222140729.2.MOON@EUPHRATES.SCRC.Symbolics.COM>

    Date: Thu 21 Feb 85 15:51:21-EST
    From: Stephen L. Chiu <SLC@MIT-OZ>

    There seems to be a bug in the make-array function with regards to displaced
    arrays.  Example:

      (setq a (make-array 10 :type 'art-16b))
      (setq b (make-array 10 :type 'art-8b :displaced-to a :displaced-index-offset 4))
      (setq c (make-array  5 :type 'art-16b :displaced-to b))
      (aset 2 c 0)

    The result is:

      a = 0 0 0 0 2 0 0 ...
      b = 0 0 0 0 2 0 0 ...
      c = 2 0 0 ...

    Hence, the array b bears the correct relation to the array a, but the array c
    does not bear the correct relation to b.  It may be that the array c thinks
    that it also has a displaced-index-offset of 4 with respect to a.

This sounds like a microcode bug that was fixed at some point in the past.
Could you please resubmit this report, using the standard bug reporting commands
(e.g. m-X Bug in the editor)?  That way we will know what system and microcode
versions you were using and can better evaluate the problem.  Thank you.
22-Feb-85 14:15:36-EST,1742;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 22 Feb 85 14:15-EST
Received: from SCRC-EUPHRATES by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 136322; Fri 22-Feb-85 14:09:33-EST
Date: Friday, 22 February 1985, 14:10-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: Conformal arrays have some non-intuitive behavior
To: Cory Myers <cory at MIT-BUGS-BUNNY>
cc: BUG-LISPM at MIT-OZ
In-Reply-To: <850221154142.1.CORY@TWEETY-PIE.MIT>
Message-ID: <850222141007.3.MOON@EUPHRATES.SCRC.Symbolics.COM>

    Date: Thursday, 21 February 1985, 15:41-EST
    From: Cory Myers <cory at MIT-BUGS-BUNNY>

    In Symbolics 3600 Release 6.0 Beta IIc, microcode TMC5-FPA-MIC 315,
    FEP 17, with util, on Lisp Machine Tweety Pie:

    (setq x (make-array '(5 5)))
     ==>
    #<ART-Q-5-5 13732357>

    (setq y (make-array '(3 3) :displaced-to x :displaced-index-offset 0
    :displaced-conformally t))
     ==>
    #<ART-Q-3-3 13733647>

    (fillarray y '(1))
     ==>
    #<ART-Q-3-3 13733647>

    (listarray x)
     ==>
    (1 1 1 NIL NIL
     1 1 1 NIL NIL
     1 1 1 NIL NIL
     NIL NIL NIL NIL NIL
     NIL NIL NIL NIL NIL)

    (listarray y)
     ==>
    (1 1 1 1 1 1 1 1 1 NIL NIL NIL NIL NIL NIL)

    (array-length y)
     ==>
    15

fillarray and listarray DO NOT WORK for conformal arrays.  Unfortunately we never
got around to making them either signal an error when given a conformal array
or work correctly.  We did make the documentation warn you that they don't work
in this case.

    BTW, it would be very useful if the displaced-index-offset could be
    specified as an arbitrary index (such as (1 1)).

This is an interesting suggestion which I'll keep in mind.  Thanks.
22-Feb-85 14:27:01-EST,593;000000000000
Received: from MIT-HTVAX by MIT-OZ via Chaosnet; 22 Feb 85 14:26-EST
Received: from MIT-APIARY-9 by MIT-HTVAX (4.12/4.7) with CHAOS 
	id AA23232; Fri, 22 Feb 85 14:16:36 est
Date: Friday, 22 February 1985, 14:16-EST
From: <Henry@MIT-OZ>
Subject: Namespace lossage
To: BUG-LISPM@MIT-OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 18, on APIARY-9:

I tried to log into AP5 running Release 6 and the who-line got stuck
in "Namespace Lock APIARY-6". When booting a 5.2 band on this machine 
it also got stuck in "Changing site to AI", but Control-Meta-Abort
got it out.

22-Feb-85 14:27:29-EST,593;000000000000
Received: from MIT-HTVAX by MIT-OZ via Chaosnet; 22 Feb 85 14:27-EST
Received: from MIT-APIARY-9 by MIT-HTVAX (4.12/4.7) with CHAOS 
	id AA23226; Fri, 22 Feb 85 14:16:01 est
Date: Friday, 22 February 1985, 14:14-EST
From: <Henry@MIT-OZ>
Subject: Namespace lossage
To: BUG-LISPM@MIT-OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 18, on APIARY-9:

I tried to log into AP5 running Release 6 and the who-line got stuck
in "Namespace Lock APIARY-6". When booting a 5.2 band on this machine 
it also got stuck in "Changing site to AI", but Control-Meta-Abort
got it out.

22-Feb-85 15:12:15-EST,1766;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 22 Feb 85 15:12-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 183273; Fri 22-Feb-85 14:31:03-EST
Date: Friday, 22 February 1985, 14:28-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: Conformal arrays have some non-intuitive behavior
To: Cory Myers <cory at MIT-BUGS-BUNNY>, BUG-LISPM at MIT-OZ
In-Reply-To: <850221154142.1.CORY@TWEETY-PIE.MIT>
Message-ID: <850222142857.0.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Thursday, 21 February 1985, 15:41-EST
    From: Cory Myers <cory at MIT-BUGS-BUNNY>

    In Symbolics 3600 Release 6.0 Beta IIc, microcode TMC5-FPA-MIC 315,
    FEP 17, with util, on Lisp Machine Tweety Pie:

    (setq x (make-array '(5 5)))
     ==>
    #<ART-Q-5-5 13732357>

    (setq y (make-array '(3 3) :displaced-to x :displaced-index-offset 0
    :displaced-conformally t))
     ==>
    #<ART-Q-3-3 13733647>

    (fillarray y '(1))
     ==>
    #<ART-Q-3-3 13733647>

    (listarray x)
     ==>
    (1 1 1 NIL NIL
     1 1 1 NIL NIL
     1 1 1 NIL NIL
     NIL NIL NIL NIL NIL
     NIL NIL NIL NIL NIL)

    (listarray y)
     ==>
    (1 1 1 1 1 1 1 1 1 NIL NIL NIL NIL NIL NIL)

    (array-length y)
     ==>
    15

I believe the Release 6 documentation will cover this in the discussion
of :displaced-conformally.  The summary is that linear array operations
do not make sense, and should perhaps be an error, for conformally
displaced arrays.

    BTW, it would be very useful if the displaced-index-offset could be
    specified as an arbitrary index (such as (1 1)).

Try ARRAY-COLUMN-MAJOR-INDEX to generate the index offset.  This will be
documented in Release 6.
22-Feb-85 15:18:43-EST,1556;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 22 Feb 85 15:18-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 183280; Fri 22-Feb-85 14:36:06-EST
Date: Friday, 22 February 1985, 14:34-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: bug in displaced arrays
To: Stephen L. Chiu <SLC at MIT-OZ>, bug-lispm at MIT-OZ
In-Reply-To: The message of 21 Feb 85 15:51-EST from Stephen L. Chiu <SLC at MIT-OZ>
Message-ID: <850222143400.1.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Thu 21 Feb 85 15:51:21-EST
    From: Stephen L. Chiu <SLC@MIT-OZ>

Standard flame #69:  Please include the standard bug-header.

    There seems to be a bug in the make-array function with regards to displaced
    arrays.  Example:

      (setq a (make-array 10 :type 'art-16b))
      (setq b (make-array 10 :type 'art-8b :displaced-to a :displaced-index-offset 4))
      (setq c (make-array  5 :type 'art-16b :displaced-to b))
      (aset 2 c 0)

    The result is:

      a = 0 0 0 0 2 0 0 ...
      b = 0 0 0 0 2 0 0 ...
      c = 2 0 0 ...

    Hence, the array b bears the correct relation to the array a, but the array c
    does not bear the correct relation to b.  It may be that the array c thinks
    that it also has a displaced-index-offset of 4 with respect to a.

I can only assume you are using Symbolics Release 5.x, since in Release
6 this code results in
	(listarray a) => (0 0 2 0 0 0 0 0 0 0)
	(listarray b) => (2 0 0 0 0 0 0 0 0 0)
	(listarray c) => (2 0 0 0 0)
22-Feb-85 16:03:27-EST,1724;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 22 Feb 85 16:03-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 183155; Fri 22-Feb-85 13:11:07-EST
Date: Fri, 22 Feb 85 13:09 EST
From: David C. Plummer in disguise <DCP@SCRC-QUABBIN.ARPA>
Subject: Yucky screen behavior on Apiary-5
To: Dale Worley <DRW@MIT-MC.ARPA>, DCP@SCRC-QUABBIN.ARPA
cc: BUG-LISPM@MIT-MC.ARPA
In-Reply-To: The message of 19 Feb 85 22:15-EST from Dale Worley <DRW at MIT-MC>
Message-ID: <850222130903.4.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: 19 February 1985 22:15-EST
    From: Dale Worley <DRW @ MIT-MC>

	Date: Mon, 18 Feb 85 17:23 EST
	From: David C. Plummer in disguise <DCP at SCRC-QUABBIN.ARPA>
	To:   Dale Worley <DRW at MIT-MC.ARPA>, BUG-LISPM at MIT-MC.ARPA
	Re:   Yucky screen behavior on Apiary-5

	    Date: 18 February 1985 16:07-EST
	    From: Dale Worley <DRW @ MIT-MC>

	    [...]

	[Standard flame #69:] Please include the standard bug header so we know
	what system you are running.

    Q: What is the "standard bug header"?  
The thing you get when you do m-X Bug from Zwei or Zmail, clicking
middle on Mail in Zmail, typing Report Bug to the command processor
(Rel6) or typing c-M to the debugger.
    Also, how do you get a lispm to
    tell you what version it's running?  It does put a version message up
    when you cold-boot it, but cold-booting can be antisocial if someone's
    got something loaded up...  
(print-herald)
    The underlying problem is that I'm not a
    lispm hacker, I just use it to Chaos over to MC.
You, and everybody else that is going to report bugs about the LispM,
LispM hacker or not, are asked to report bugs correctly.
22-Feb-85 19:34:16-EST,1608;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 22 Feb 85 19:34-EST
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 183446; Fri 22-Feb-85 16:56:20-EST
Date: Fri, 22 Feb 85 16:53 EST
From: David A. Moon <Moon@SCRC-QUABBIN.ARPA>
Subject: Yucky screen behavior on Apiary-5
To: Dale Worley <DRW@MIT-MC.ARPA>
cc: DCP@SCRC-QUABBIN.ARPA, BUG-LISPM@MIT-MC.ARPA
In-Reply-To: The message of 19 Feb 85 22:15-EST from Dale Worley <DRW at MIT-MC>
Message-ID: <850222165348.3.MOON@EUPHRATES.SCRC.Symbolics.COM>

    Date: 19 February 1985 22:15-EST
    From: Dale Worley <DRW @ MIT-MC>

	Date: Mon, 18 Feb 85 17:23 EST
	From: David C. Plummer in disguise <DCP at SCRC-QUABBIN.ARPA>
	To:   Dale Worley <DRW at MIT-MC.ARPA>, BUG-LISPM at MIT-MC.ARPA
	Re:   Yucky screen behavior on Apiary-5

	    Date: 18 February 1985 16:07-EST
	    From: Dale Worley <DRW @ MIT-MC>

	[Standard flame #69:] Please include the standard bug header so we know
	what system you are running.

    Q: What is the "standard bug header"?

Use the command m-X Bug in the editor, or click middle on [Mail] in Zmail, or
evaluate the Lisp form (bug) in the Lisp Listener, or (in Release 6) use
the Report Bug command in the Lisp Listener.  This will put you into the
mail-sending program with the text initialized to include the standard bug
header.

    Also, how do you get a lispm to
    tell you what version it's running?

Evaluate the Lisp form (print-herald) or execute the command Show Herald.
Or start to send a bug report but hit the ABORT key after reading the bug
header.
24-Feb-85 02:16:13-EST,2023;000000000000
Received: from MIT-MORRISON by MIT-OZ via Chaosnet; 24 Feb 85 02:16-EST
Date: Sunday, 24 February 1985, 02:17-EST
From: A Lisp Machine <LISPM at MIT-MC>
Subject: Can't GC
To: BUG-LISPM at OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10,
Experimental RELATUS 131.310, FEP 22, on Lisp Machine Jim Morrison:

while in (si:full-gc :gc-compiled-functions t).

>>Error: The object #<HOST POINTER 7276217> received a :PATHNAME-HASH-TABLE message, which went unclaimed.
         The rest of the message was ()
While in the function (:METHOD NET:OBJECT :UNCLAIMED-MESSAGE)  SI:FLAVOR-UNCLAIMED-MESSAGE  SI:INSTANCE-HASH-UNCLAIMED-MESSAGE

(:METHOD NET:OBJECT :UNCLAIMED-MESSAGE):  (P.C. = 31)
   Arg 0 (SELF): #<HOST POINTER 7276217>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NET:OBJECT -- 3. IV's, 1. FL's 47034154>
   Arg 2 (OPERATION): :UNCLAIMED-MESSAGE
   Arg 3 (MESSAGE): :PATHNAME-HASH-TABLE
   Rest arg (ARGS): NIL

SI:FLAVOR-UNCLAIMED-MESSAGE:  (P.C. = 20)
   Arg 0 (SELF): #<HOST POINTER 7276217>
   Arg 1 (IGNORE): NIL
   Rest arg (MESSAGE): (:PATHNAME-HASH-TABLE)

SI:INSTANCE-HASH-UNCLAIMED-MESSAGE:  (P.C. = 35)
   Arg 0 (SELF): #<HOST POINTER 7276217>
   Arg 1 (SELF-MAPPING-TABLE): NIL
   Rest arg (MESSAGE): NIL

SI:GC-PATHNAMES:  (P.C. = 21)

SI:*EVAL:  (P.C. = 370)
   Arg 0 (FORM): (SI:GC-PATHNAMES)

COND:  (P.C. = 23)
   Rest arg (CLAUSES): ((SI:*FULL-GC-FOR-SYSTEM-RELEASE* (SI:GC-PATHNAMES)) (T NIL))

SI:*EVAL:  (P.C. = 421)
   Arg 0 (FORM): (SI:DISPLACED (IF SI:*FULL-GC-FOR-SYSTEM-RELEASE* (SI:GC-PATHNAMES)) (COND (SI:*FULL-GC-FOR-SYSTEM-RELEASE* (SI:GC-PATHNAMES)) (T NIL)))

INITIALIZATIONS:  (P.C. = 42)
   Arg 0 (LIST-NAME): SI:FULL-GC-INITIALIZATION-LIST
   Arg 1 (REDO-FLAG): T
   --Defaulted args:--
   Arg 2 (FLAG): T

Rest of stack:
SI:FULL-GC:  (P.C. = 42)
SI:*EVAL:  (P.C. = 370)
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 200)
SI:LISP-COMMAND-LOOP:  (P.C. = 115)
SI:LISP-TOP-LEVEL1:  (P.C. = 22)
SI:LISP-TOP-LEVEL:  (P.C. = 7)
24-Feb-85 02:38:15-EST,726;000000000000
Received: from MIT-BUDDY by MIT-OZ via Chaosnet; 24 Feb 85 02:38-EST
Date: Sunday, 24 February 1985, 02:37-EST
From: Gavan Duffy <GAVAN at OZ>
Subject: Sending to an array?
To: BUG-LISPM at OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10,
Experimental RELATUS 131.310, FEP 24, on Lisp Machine Buddy Holly:

In VALIDATE-REQUEST-FOR-SYSTEM, in the user package,  there's an fquery
with the following format string:

"System ~S is not normally maintained at this site.  Patching it here may result
in version skews and make it difficult for your site to receive subsequent software updates.
Are you sure you really sure you want to patch it? " (SEND SYSTEM :NAME)))

Isn't SYSTEM an array?  Why send to it?
24-Feb-85 19:35:23-EST,1034;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 24 Feb 85 19:35-EST
Received: from SCRC-MOBILE by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 184205; Sun 24-Feb-85 19:39:57-EST
Date: Sunday, 24 February 1985, 19:38-EST
From: David E. Goldfarb <DEG at SCRC-QUABBIN>
Subject: Cp display of possible commands not in order.
To: cjl at MIT-OZ, BUG-LISPM at MIT-OZ
cc: DEG at SCRC-QUABBIN
In-Reply-To: <850221144525.2.CJL@MOON.MIT>
Message-ID: <850224193824.9.DEG@MOBILE.SCRC.Symbolics.COM>

    Date: Thursday, 21 February 1985, 14:45-EST
    From: Chris Lindblad <cjl at OZ>
    In Symbolics 3600 Release 6.0 Beta IIc, microcode TMC5-MIC 315, on Lisp
    Machine Keith Moon:

    The display of command names given by the "help" command and the help
    key should be sorted by name, regardless of which comtab each command is
    in. Currently, the commands in the user comtab are displayed in
    alphabetical order, then the commands in the global comtab.

This has been fixed already for the real rel6.
25-Feb-85 00:59:44-EST,2326;000000000000
Received: from MIT-VAX by MIT-OZ via Chaosnet; 25 Feb 85 00:59-EST
Received: by mit-vax.Mit-chaos.Arpa (4.12/4.8) with CHAOS id AA23120; Mon, 25 Feb 85 00:52:01 est
Date: Monday, 25 February 1985, 00:54-EST
From: joanne@MIT-MAHOGANY
To: BUG-LISPM@OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 18,
Tanglewood Version VII, on Project Tanglewood Mahogany:

just try to name a buffer to be 'something.somethingelse
using "with-output-to-buffer".
You end up unable to use the choose-buffer menu.

>>Error: The argument ARRAY to ARRAY-ACTIVE-LENGTH, TEST3B.NEW, was of the wrong type.
         The function expected an array.
While in the function ARRAY-ACTIVE-LENGTH  SI:WITH-OUTPUT-TO-STRING-INTERNAL-FUNCTION  ZWEI:CRAM-STRING-OUT

ARRAY-ACTIVE-LENGTH:  (P.C. = 123)
   Arg 0 (ARRAY): TEST3B.NEW
   Local 1 (TEM): NIL
   Local 2 (*SELECTQ-ITEM*): ARRAY

SI:WITH-OUTPUT-TO-STRING-INTERNAL-FUNCTION:  (P.C. = 51)
   Arg 0 (OP): :STRING-OUT
   Arg 1 (ARG1): TEST3B.NEW
   Rest arg (ARGS): NIL

ZWEI:CRAM-STRING-OUT:  (P.C. = 12)
   Arg 0 (STREAM): #<DTP-COMPILED-FUNCTION SI:WITH-OUTPUT-TO-STRING-INTERNAL-FUNCTION 36465463>
   Arg 1 (STRING): TEST3B.NEW
   Arg 2 (MAX-SIZE): 53
   Arg 3 (TRUNCATED): NIL

ZWEI:LIST-BUFFERS-INTERNAL:  (P.C. = 532)
   Arg 0 (STREAM): #<EDITOR-TYPEOUT-WINDOW Editor Typeout Window 52 1004227 exposed>
   Arg 1 (PRINTER): #<DTP-COMPILED-FUNCTION (:INTERNAL ZWEI:COM-LIST-BUFFERS 0) 37472410>
   Arg 2 (WIDTH): 137
   Arg 3 (PERIOD-FLAG): NIL
   Arg 4 (APROPOS): NIL

ZWEI:COM-LIST-BUFFERS:  (P.C. = 15)

ZWEI:COMMAND-EXECUTE:  (P.C. = 55)  (from SOLEY: UTILITIES; PATCH)
   Arg 0 (COMMAND): ZWEI:COM-LIST-BUFFERS
   Arg 1 (CHAR): 502
   Arg 2 (PREFIX-CHAR): 530
   --Defaulted args:--
   Arg 3 (HOOK-LIST): NIL

ZWEI:MAKE-EXTENDED-COMMAND-INTERNAL:  (P.C. = 77)

SYS:CALL-FUNNY-FUNCTION:  (P.C. = 101)
   Arg 0 (FUNCTION): #<DTP-CLOSURE 41116645>
   Rest arg (ARGS): NIL

Rest of stack:
Closure of ZWEI:MAKE-EXTENDED-COMMAND-INTERNAL:
ZWEI:COMMAND-EXECUTE:  (P.C. = 55)  (from SOLEY: UTILITIES; PATCH)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 214)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 41)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
25-Feb-85 08:16:06-EST,956;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 25 Feb 85 08:16-EST
Received: from SCRC-PEACE by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 184303; Mon 25-Feb-85 08:21:18-EST
Date: Mon, 25 Feb 85 08:20 EST
From: Charles Hornig <Hornig at SCRC-STONY-BROOK>
Subject: Namespace lossage
To: Henry at OZ, BUG-LISPM at OZ
In-Reply-To: The message of 22 Feb 85 14:16-EST from Henry at OZ
Message-ID: <850225082011.2.HORNIG@PEACE.SCRC.Symbolics.COM>

    Date: Friday, 22 February 1985, 14:16-EST
    From: <Henry@MIT-OZ>

    In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 18, on APIARY-9:

    I tried to log into AP5 running Release 6 and the who-line got stuck
    in "Namespace Lock APIARY-6". When booting a 5.2 band on this machine 
    it also got stuck in "Changing site to AI", but Control-Meta-Abort
    got it out.

If this happens repeatably, it would be good to get a backtrace.  Type
c-m-Suspend and then c-M.
25-Feb-85 09:18:53-EST,2469;000000000000
Received: from MIT-JANIS by MIT-OZ via Chaosnet; 25 Feb 85 09:18-EST
Date: Monday, 25 February 1985, 09:20-EST
From: Ken Haase <KWH at OZ>
Subject: Compiling macro's twice errors out.
To: BUG-LISPM at OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 24, on Lisp Machine Janis Joplin:

>>>  This happens when you do the following:

(defmacro FOO (x) `(+ ,x 3))

(compile 'FOO)
FOO
(compile 'FOO)

>>>  And then.......

>>Error: #<DTP-COMPILED-FUNCTION FOO 3073217> is not a valid form
While in the function COMPILER:COMPILE-LAMBDA-EXP  (:INTERNAL COMPILER:COMPILE-TO-CORE 1.)  COMPILER:COMPILE-TO-CORE

COMPILER:COMPILE-LAMBDA-EXP:  (P.C. = 115)
   Arg 0 (SPEC): FOO
   Arg 1 (LAMBDA-EXP): #<DTP-COMPILED-FUNCTION FOO 3073217>
   Arg 2 (FIXUP-P): T
   Arg 3 (DEBUG-INFO): ((:INTERPRETED-DEFINITION
                         (MACRO . #<DTP-COMPILED-FUNCTION FOO 3073217>)))
   Local 4: #<DTP-COMPILED-FUNCTION FOO 3073217>
   Local 5 (DEFINITION): "~S is not a valid form"
   Local 6 (LAMBDA-LIST): #<DTP-COMPILED-FUNCTION FOO 3073217>
   Local 7 (NAME-AND-INFO): #<DTP-LOCATIVE 26500427>

(:INTERNAL COMPILER:COMPILE-TO-CORE 1.):  (P.C. = 21)
   Arg 0 (**DEFSELECT-OP**): :DUMP-LAMBDA-EXPRESSION
   Arg 1 (FSPEC): FOO
   Arg 2 (LAMBDA-EXP): (MACRO . #<DTP-COMPILED-FUNCTION FOO 3073217>)

COMPILER:COMPILE-TO-CORE:  (P.C. = 22)
   Arg 0 (OPERATION): :DUMP-LAMBDA-EXPRESSION
   Rest arg (SELECT-METHOD-ARGS): (FOO (MACRO . #<DTP-COMPILED-FUNCTION FOO 3073217>))

COMPILE:  (P.C. = 110)
   Arg 0 (FUNCTION-SPEC): FOO
   --Defaulted args:--
   Arg 1 (LAMBDA-EXP): (MACRO . #<DTP-COMPILED-FUNCTION FOO 3073217>)

SI:*EVAL:  (P.C. = 370)
   Arg 0 (FORM): (COMPILE 'FOO)

EVAL-INSTANCES-WITH-SEND:  (P.C. = 16)  (from B:>KWH>MRL>Tools)
   Arg 0 (FORM): (COMPILE 'FOO)

SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 200)
   Rest arg: (:NAME "Breakpoint ZMACS" :ABORTED-FUNCTION SI:BREAK-ABORTED-FUNCTION
              :READ-FUNCTION SI:BREAK-READ-FUNCTION)

BREAK:  (P.C. = 173)
   Arg 0 (TAG): ZWEI:ZMACS
   --Defaulted args:--
   Arg 1 (CONDITIONAL): T

Rest of stack:
(:DEFUN-METHOD ZWEI:COM-BREAK):  (P.C. = 112)
ZWEI:COM-BREAK:  (P.C. = 12)
ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 214)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 41)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
25-Feb-85 09:35:57-EST,984;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 25 Feb 85 09:35-EST
Received: from SCRC-PEACE by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 184357; Mon 25-Feb-85 09:41:11-EST
Date: Mon, 25 Feb 85 09:40 EST
From: Charles Hornig <Hornig at SCRC-STONY-BROOK>
Subject: why does terminal 1 f at MIT connect to Riverside?
To: zvona at OZ, BUG-LISPM at OZ
In-Reply-To: The message of 18 Feb 85 15:42-EST from zvona at OZ
Message-ID: <850225094000.6.HORNIG@PEACE.SCRC.Symbolics.COM>

    Date: Monday, 18 February 1985, 15:42-EST
    From: zvona at MIT-OZ

    In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 22, on Lisp Machine Duane Allman:

    terminal 1 f =>

    09:07 SCRC-RIVERSIDE (at Chaos address 24425) did not respond to a NAMESPACE request.;
    Obsolete host information may be used.

    I verified that REAGAN was willing to take a namespace request.

It shouldn't do this.  Does it happen under release 6?  (Try it on
Reagan or AP6.)
25-Feb-85 10:00:52-EST,1090;000000000000
Received: from MIT-VAX by MIT-OZ via Chaosnet; 25 Feb 85 10:00-EST
Received: by mit-vax.Mit-chaos.Arpa (4.12/4.8) with CHAOS id AA25322; Mon, 25 Feb 85 09:54:03 est
Date: Monday, 25 February 1985, 09:55-EST
From: Richard E. Zippel <RZ@MIT-MC>
Subject: why does terminal 1 f at MIT connect to Riverside?
To: Hornig@SCRC-STONY-BROOK, zvona@OZ, BUG-LISPM@OZ
In-Reply-To: <850225094000.6.HORNIG@PEACE.SCRC.Symbolics.COM>
Message-Id: <850225095548.1.RZ@GSTAAD.MIT>

    Date: Mon, 25 Feb 85 09:40 EST
    From: Charles Hornig <Hornig at SCRC-STONY-BROOK>

	Date: Monday, 18 February 1985, 15:42-EST
	From: zvona at MIT-OZ

	In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 22, on Lisp Machine Duane Allman:

	terminal 1 f =>

	09:07 SCRC-RIVERSIDE (at Chaos address 24425) did not respond to a NAMESPACE request.;
	Obsolete host information may be used.

	I verified that REAGAN was willing to take a namespace request.

    It shouldn't do this.  Does it happen under release 6?  (Try it on
    Reagan or AP6.)
This doesn't seem to happen in Release 6 Beta IIc.
25-Feb-85 13:12:00-EST,1312;000000000000
Received: from MIT-VAX by MIT-OZ via Chaosnet; 25 Feb 85 13:11-EST
Received: by mit-vax.Mit-chaos.Arpa (4.12/4.8) with CHAOS id AA28041; Mon, 25 Feb 85 13:02:43 est
Date: Monday, 25 February 1985, 13:04-EST
From: Richard E. Zippel <RZ@MIT-MC>
Subject: why does terminal 1 f at MIT connect to Riverside?
To: Hornig@SCRC-STONY-BROOK, zvona@OZ, BUG-LISPM@OZ
In-Reply-To: <850225095548.1.RZ@GSTAAD.MIT>
Message-Id: <850225130421.2.RZ@GSTAAD.MIT>

    Date: Monday, 25 February 1985, 09:55-EST
    From: Richard E. Zippel <RZ@MIT-MC>

	Date: Mon, 25 Feb 85 09:40 EST
	From: Charles Hornig <Hornig at SCRC-STONY-BROOK>

	    Date: Monday, 18 February 1985, 15:42-EST
	    From: zvona at MIT-OZ

	    In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 22, on Lisp Machine Duane Allman:

	    terminal 1 f =>

	    09:07 SCRC-RIVERSIDE (at Chaos address 24425) did not respond to a NAMESPACE request.;
	    Obsolete host information may be used.

	    I verified that REAGAN was willing to take a namespace request.

	It shouldn't do this.  Does it happen under release 6?  (Try it on
	Reagan or AP6.)
    This doesn't seem to happen in Release 6 Beta IIc.

I take that back.   (R's and B's are so similar I missed it last time.)
finger-local-lispms does try to connect to Riverside.
25-Feb-85 13:58:41-EST,2533;000000000000
Received: from MIT-LISPM-25 by MIT-OZ via Chaosnet; 25 Feb 85 13:58-EST
Date: Monday, 25 February 1985, 14:00-EST
From: Patrick A O'Donnell <PAO at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In Don't-dump-a-band! Inconsistent (unreleased patches loaded) System 99.21,
CADR 4.2, Experimental ZMail 54.3, MIT-Specific 23.0, microcode 320,
GC@2, on Lisp Machine Twenty-five:


Insert your description of the circumstances here:

Attempting to compile a system...  It was trying to load the file it
just compiled.  It appears that SYS:FASL-OP-FILE-PROPERTY-LIST was
attempting to back translate MANIP:SOURCE;DEFS, even though that was
already a logical pathname.



>>TRAP 8077 (TRANS-TRAP)
The function GLOBAL:NIL is undefined.
Backtrace from the debugger:

SYS:FASL-OP-FILE-PROPERTY-LIST (P.C. = 63)

Local 0 (PLIST): (:COMPILE-DATA ("PAO" "Lisp Machine Twenty-five" 2687193430 99 ...) :SOURCE-FILE-GENERIC-PATHNAME #FS::LOGICAL-PATHNAME "MANIP: SOURCE; DEFS  " ...)
Local 1 (SOURCE-PATHNAME): GLOBAL:NIL
Local 2 (PLIST): GLOBAL:NIL


SI::FASL-GROUP (P.C. = 118)

Local 0 (FASL-GROUP-BITS): 32818
Local 1 (FASL-GROUP-TYPE): 50


SI::FASL-WHACK-SAVE-FASL-TABLE (P.C. = 47)

Local 0 (FASL-RETURN-FLAG): GLOBAL:NIL
Local 1: #<ART-Q-LIST-16379 1100003>


SI::FASL-FILE-PROPERTY-LIST (P.C. = 25)



Additional information supplied with call:
 Multiple values passed to frame, but frame pointer is NIL.
 This means that we were going to pass multiple values
 to a frame that did not want them.

SI::FASLOAD-INTERNAL (P.C. = 216)

 Arg 0 (FASL-STREAM): #<FS::QFILE-INPUT-BINARY-STREAM "MANIP: BIN; DEFS QFASL >" 17175313>
 Arg 1 (PKG): GLOBAL:MANIPULATOR
 Arg 2 (NO-MSG-P): GLOBAL:T
Local 0 (PATHNAME): #FS::LOGICAL-PATHNAME "MANIP: BIN; DEFS QFASL >"
Local 1 (FILE-ID): (#FS::VMS-PATHNAME "PIG:USRD$:[PUMA.MANIP.MITBIN]DEFS.QFS;37" . 2687193514)
Local 2 (W1): 50792
Local 3 (W2): 29616
Local 4 (PLIST): GLOBAL:NIL
Local 5 (VARS): GLOBAL:NIL
Local 6 (VALS): GLOBAL:NIL
Local 7: GLOBAL:NIL
Local 8: GLOBAL:NIL


Remainder of stack:

GLOBAL:FASLOAD (P.C. = 77)
SI::FASLOAD-1 (P.C. = 26)
SI::DO-FILE-TRANSFORMATIONS (P.C. = 171)
SI::PERFORM-TRANSFORMATIONS (P.C. = 82)
SI::PERFORM-TRANSFORMATIONS (P.C. = 63)
GLOBAL:MAKE-SYSTEM (P.C. = 158)
SYS:EVAL1 (P.C. = 717)
SI:EVAL-SPECIAL-OK (P.C. = 82)
SI:EVAL-ABORT-TRIVIAL-ERRORS (P.C. = 36)
SI:LISP-TOP-LEVEL1 (P.C. = 274)
SI::LISP-TOP-LEVEL2 (P.C. = 23)
SI::PROCESS-TOP-LEVEL (P.C. = 115)
SI:LISP-TOP-LEVEL (P.C. = 39)
25-Feb-85 14:37:39-EST,3319;000000000000
Received: from MIT-LISPM-25 by MIT-OZ via Chaosnet; 25 Feb 85 14:37-EST
Date: Monday, 25 February 1985, 14:39-EST
From: Patrick A O'Donnell <PAO at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In Don't-dump-a-band! Inconsistent (unreleased patches loaded) System 99.21,
CADR 4.2, Experimental ZMail 54.3, MIT-Specific 23.0, microcode 320,
GC@2, on Lisp Machine Twenty-five:


Insert your description of the circumstances here:

The following error occurred because ROT-24-BIT was being called with a
negative rotation which was creating a really bogus byte specifier.
This occurs when hashing a non-nil-terminated list when the non-nil
cdr is reached with (< ROT 4).


>>TRAP 3670 (ARGTYP FIXNUM PP 1 XDPB0)
The second argument to DPB, 536870747, was of the wrong type.
The function expected a fixnum.
Backtrace from the debugger:

SXHASH (P.C. = 151) (from file MANIP: MANIP; SYS99FIX  )

 Arg 0 (X): (VARLIST TYPE FORMAT-STRING . FORMAT-ARGS)
 Arg 1 (RANDOM-OBJECT-ACTION): NIL
Local 0 (ROT): 1
Local 1 (HASH): 9281738
Local 2 (Y): FORMAT-STRING
Local 3 (X): FORMAT-ARGS
Local 4: -3
Local 5: 6865099


SXHASH (P.C. = 114) (from file MANIP: MANIP; SYS99FIX  )

 Arg 0 (X): (ARGLIST (VARLIST TYPE FORMAT-STRING . FORMAT-ARGS) &BODY CLAUSES)
 Arg 1 (RANDOM-OBJECT-ACTION): NIL
Local 0 (ROT): 18
Local 1 (HASH): 11686902
Local 2 (Y): (VARLIST TYPE FORMAT-STRING . FORMAT-ARGS)
Local 3 (X): (&BODY CLAUSES)
Local 4: 8312394
Local 5: NIL


SXHASH (P.C. = 114) (from file MANIP: MANIP; SYS99FIX  )

 Arg 0 (X): (DECLARE (ARGLIST # &BODY CLAUSES) (ZWEI:INDENTATION 1 1))
 Arg 1 (RANDOM-OBJECT-ACTION): NIL
Local 0 (ROT): 18
Local 1 (HASH): 16124181
Local 2 (Y): (ARGLIST (VARLIST TYPE FORMAT-STRING . FORMAT-ARGS) &BODY CLAUSES)
Local 3 (X): ((ZWEI:INDENTATION 1 1))
Local 4: 2277057
Local 5: NIL


SXHASH (P.C. = 114) (from file MANIP: MANIP; SYS99FIX  )

 Arg 0 (X): (LET* (# # # # ...) (DECLARE # #) (SI::XR-BQ-LIST* # # CLAUSES))
 Arg 1 (RANDOM-OBJECT-ACTION): NIL
Local 0 (ROT): 1
Local 1 (HASH): 13601851
Local 2 (Y): (DECLARE (ARGLIST # &BODY CLAUSES) (ZWEI:INDENTATION 1 1))
Local 3 (X): ((SI::XR-BQ-LIST* # # CLAUSES))
Local 4: 7431408
Local 5: NIL


SXHASH (P.C. = 114) (from file MANIP: MANIP; SYS99FIX  )

 Arg 0 (X): (BLOCK M-SIGNAL-PROCEED-CASE SI::*MACROENVIRONMENT* (AND # #) ...)
 Arg 1 (RANDOM-OBJECT-ACTION): NIL
Local 0 (ROT): 15
Local 1 (HASH): 11637892
Local 2 (Y): (LET* (# # # # ...) (DECLARE # #) (SI::XR-BQ-LIST* # # CLAUSES))
Local 3 (X): NIL
Local 4: 2539498
Local 5: NIL


Remainder of stack:

SXHASH (P.C. = 114) (from file MANIP: MANIP; SYS99FIX  )
COMPILER::FUNCTION-EXPR-SXHASH (P.C. = 74)
COMPILER::QCOMPILE0 (P.C. = 1004)
COMPILER::QC-TRANSLATE-FUNCTION (P.C. = 368)
COMPILER::QC-FILE-COMMON (P.C. = 88)
COMPILER:COMPILE-DRIVER (P.C. = 449)
COMPILER:COMPILE-DRIVER (P.C. = 439)
COMPILER::QC-FILE-WORK-COMPILE (P.C. = 36)
COMPILER:COMPILE-STREAM (P.C. = 581)
(:INTERNAL QC-FILE 1) (P.C. = 65)
...
SI::PERFORM-TRANSFORMATIONS (P.C. = 63)
MAKE-SYSTEM (P.C. = 158)
SYS:EVAL1 (P.C. = 717)
SI:EVAL-SPECIAL-OK (P.C. = 82)
SI:EVAL-ABORT-TRIVIAL-ERRORS (P.C. = 36)
SI:LISP-TOP-LEVEL1 (P.C. = 274)
SI::LISP-TOP-LEVEL2 (P.C. = 23)
SI::PROCESS-TOP-LEVEL (P.C. = 115)
SI:LISP-TOP-LEVEL (P.C. = 39)
25-Feb-85 16:01:41-EST,1355;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 25 Feb 85 16:00-EST
Date: 25 Feb 1985  16:05 EST (Mon)
Message-ID: <SR.EHPYC.12090573735.BABYL@MIT-SPEECH>
From: Scott Cyphers <SR.EHPYC@MIT-SPEECH>
To:   Charles Hornig <Hornig@SCRC-STONY-BROOK>
Cc:   BUG-LISPM@OZ, Henry@OZ
Subject: Namespace lossage
In-reply-to: Msg of 25 Feb 1985  08:20-EST from Charles Hornig <Hornig at SCRC-STONY-BROOK>

    Date: Monday, 25 February 1985  08:20-EST
    From: Charles Hornig <Hornig at SCRC-STONY-BROOK>
    To:   Henry at OZ, BUG-LISPM at OZ
    Re:   Namespace lossage

        Date: Friday, 22 February 1985, 14:16-EST
        From: <Henry@MIT-OZ>

        In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 18, on APIARY-9:

        I tried to log into AP5 running Release 6 and the who-line got stuck
        in "Namespace Lock APIARY-6". When booting a 5.2 band on this machine 
        it also got stuck in "Changing site to AI", but Control-Meta-Abort
        got it out.

    If this happens repeatably, it would be good to get a backtrace.  Type
    c-m-Suspend and then c-M.

I've seen this happen where there is a notification that never manages
to notify that it wants to notify that is causing the namespace lock.
Doing function-0s lets it expose itself and then the locks go away.
It sounds like a similar problem.
25-Feb-85 16:24:13-EST,1149;000000000000
Received: from MIT-LISPM-32 by MIT-OZ via Chaosnet; 25 Feb 85 16:02-EST
Date: Monday, 25 February 1985, 16:04-EST
From: Stephen L. Chiu <SLC at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In Experimental System 99.11, CADR 4.0, Experimental ZMail 54.2,
MIT-Specific 23.0, microcode 320, GC@2, on Lisp Machine Thirty-two:

There seems to be a bug in the (make-array) function with respect
to displaced-index-offsets.

Example:

  (setq a (make-array 10 :type 'art-16b))
  (setq b (make-array 10 :type 'art-8b :displaced-to a :displaced-index-offset 4))
  (setq c (make-array 5 :type 'art-16b :displaced-to b))
  (aset 2 c 0)

results in:

  a => 0 0 0 0 2 0 0 0 ...
  b => 0 0 0 0 2 0 0 0 ...
  c => 2 0 0 ...

Hence, the array b bears the correct relationship to a, but c does not bear
the correct relationship to b.  The array c seems to think that it also has
a displaced-index-offset of 4 with respect to a.  

I'm getting around this problem now by using a less efficient and verbose
method to obtain the desired effect.  Please let me know when this is fixed 
so I can use the more efficient version of my program.  Thanks.
25-Feb-85 17:25:42-EST,4398;000000000000
Received: from MIT-LISPM-25 by MIT-OZ via Chaosnet; 25 Feb 85 17:25-EST
Date: Monday, 25 February 1985, 17:27-EST
From: Patrick A O'Donnell <PAO at MIT-OZ>
Subject: Bug or feature?
To: BUG-LISPM at MIT-OZ

In Don't-dump-a-band! Inconsistent (unreleased patches loaded) System 99.21,
CADR 4.2, Experimental ZMail 54.3, MIT-Specific 23.0,
Experimental Manip 1.0, microcode 320, GC@2,
on Lisp Machine Twenty-five:


Insert your description of the circumstances here:

:IO-HANDLE-NON-FATAL-ERROR is defined to use :OR method combination.
There are no "primary" or :DEFAULT methods defined for it.

>>ERROR: No NIL :IO-HANDLE-NON-FATAL-ERROR method(s) supplied to :OR method-combination
Backtrace from the debugger:

SI::GET-CERTAIN-METHODS (P.C. = 96)

 Arg 0 (MAGIC-LIST-ENTRY): (:IO-HANDLE-NON-FATAL-ERROR :OR :BASE-FLAVOR-LAST (:OR #) ...)
 Arg 1 (METHOD-TYPE): NIL
 Arg 2 (OTHER-METHODS-ALLOWED): (:OR)
 Arg 3 (NO-METHODS-OK): NIL
 Arg 4 (ORDERING-DECLARATION): NIL
Local 0 (METHODS): NIL
Local 1 (DEFAULT-METHODS): NIL
Local 2: NIL
Local 3 (X): (:AROUND (:METHOD NOTIFY-TRIVIAL-ERRORS-MIXIN :AROUND :IO-HANDLE-NON-FATAL-ERROR))
Local 4 (.SELECTQ.ITEM.): NIL


SI::SIMPLE-METHOD-COMBINATION (P.C. = 48)

 Arg 0 (FL): #<Flavor PUMA 31413221>
 Arg 1 (MAGIC-LIST-ENTRY): (:IO-HANDLE-NON-FATAL-ERROR :OR :BASE-FLAVOR-LAST (:OR #) ...)
Local 0 (METHODS): NIL
Local 1 (WRAPPERS-P): NIL


SI::COMPOSE-METHOD-COMBINATION (P.C. = 420)

 Arg 0 (FL): #<Flavor PUMA 31413221>
   --Defaulted args:--
 Arg 1 (SINGLE-OPERATION): NIL
Local 0 (TEM): SI::SIMPLE-METHOD-COMBINATION
Local 1 (MAGIC-LIST): ((:IO-HANDLE-ASYNCHRONOUS-RESPONSE :OR :BASE-FLAVOR-LAST # ...) (:DISCONNECT NIL NIL # ...) (:SET-UP-COMMUNICATIONS NIL NIL #) (:INITIALIZE NIL NIL # ...) ...)
Local 2 (ORDER): NIL
Local 3 (MSG): :SET
Local 4 (ELEM): (:SET :CASE :BASE-FLAVOR-LAST (:CASE # # # ...) ...)
Local 5 (HANDLERS): ((:METHOD NETWORK-PROTOCOL-MIXIN :CONNECTION) (:METHOD NETWORK-PROTOCOL-MIXIN :HOST-NAME) (:METHOD NETWORK-PROTOCOL-MIXIN :CONTACT-NAME) (:METHOD NETWORK-PROTOCOL-MIXIN :SET-CONNECTION) ...)
Local 6 (FFL): #<Flavor SI:VANILLA-FLAVOR 1301155>
Local 7 (PL): #<DTP-LOCATIVE 1301201>
Local 8 (DEFAULT-CONS-AREA): 32
Local 9 (FFLS): NIL
Local 10: NIL
Local 11 (MTE): (:IO-HANDLE-NON-FATAL-ERROR :OR :BASE-FLAVOR-LAST (:OR #) ...)
Local 12: NIL
Local 13 (METH): ((:METHOD SI:VANILLA-FLAVOR :SET) #<DTP-FEF-POINTER (:METHOD SI:VANILLA-FLAVOR :SET) 2502446> (:SOURCE-FILE-NAME #FS::LOGICAL-PATHNAME "SYS: SYS2; FLAVOR  "))
Local 14 (TYPE): NIL
Local 15: (NIL (:METHOD SI:VANILLA-FLAVOR :SET))
Local 16: ((:IO-HANDLE-NON-FATAL-ERROR :OR :BASE-FLAVOR-LAST # ...) (:TRIVIAL-ERROR? NIL NIL #) (:IO-HANDLE-ASYNCHRONOUS-ERROR :OR :BASE-FLAVOR-LAST #) (:SET-NOTIFY-TRIVIAL-ERRORS? NIL NIL #) ...)
Local 17 (MSG): NIL
Local 18 (DEF): NIL
Local 19 (HT): NIL
Local 20 (HANDLERS): NIL
Local 21 (ML): NIL
Local 22 (HASH-INSTANCE): NIL


INSTANTIATE-FLAVOR (P.C. = 145)

 Arg 0 (FLAVOR-NAME): PUMA
 Arg 1 (INIT-PLIST): #<DTP-LOCATIVE 634761>
 Arg 2 (SEND-INIT-MESSAGE-P): T
   --Defaulted args:--
 Arg 3 (RETURN-UNHANDLED-KEYWORDS-P): NIL
 Arg 4 (AREA-TO-CONS-INSTANCE-IN): NIL
Local 0 (FL): #<Flavor PUMA 31413221>
Local 1 (UNHANDLED-KEYWORDS): NIL
Local 2 (INSTANCE): NIL
Local 3 (VARS): NIL
Local 4 (NEW-PLIST): NIL
Local 5 (TEM): NIL
Local 6 (MAP-RESULT): NIL
Local 7 (MAP-TEMP): NIL
Local 8 (.MAP-LOCAL-0.): NIL
Local 9 (KEYWORD): NIL
Local 10 (MISSING-KEYWORDS): NIL
Local 11 (V): NIL
Local 12 (I): NIL
Local 13 (VAR-KEYWORDS): NIL
Local 14 (REMAINING-KEYWORDS): NIL
Local 15 (PL): NIL
Local 16 (INDEX): NIL
Local 17: NIL
Local 18 (D): NIL


MAKE-INSTANCE (P.C. = 20)

 Arg 0 (FLAVOR-NAME): PUMA
 Rest arg (INIT-OPTIONS): NIL


Remainder of stack:

SYS:EVAL1 (P.C. = 717)
SETQ (P.C. = 86)
SYS:EVAL1 (P.C. = 717)
EVAL (P.C. = 90)
ADD-INITIALIZATION (P.C. = 257)
SYS:EVAL1 (P.C. = 717)
SYS:FASL-OP-EVAL1 (P.C. = 76)
SI::FASL-GROUP (P.C. = 118)
SI::FASL-WHACK-SAVE-FASL-TABLE (P.C. = 47)
SI::FASL-WHACK (P.C. = 19)
...
SI::PERFORM-TRANSFORMATIONS (P.C. = 63)
MAKE-SYSTEM (P.C. = 158)
SYS:EVAL1 (P.C. = 717)
SI:EVAL-SPECIAL-OK (P.C. = 82)
SI:EVAL-ABORT-TRIVIAL-ERRORS (P.C. = 36)
SI:LISP-TOP-LEVEL1 (P.C. = 274)
SI::LISP-TOP-LEVEL2 (P.C. = 23)
SI::PROCESS-TOP-LEVEL (P.C. = 115)
SI:LISP-TOP-LEVEL (P.C. = 39)
25-Feb-85 17:31:55-EST,1269;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 25 Feb 85 17:31-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 184608; Mon 25-Feb-85 14:23:03-EST
Date: Monday, 25 February 1985, 14:20-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: Sending to an array?
To: Gavan Duffy <GAVAN at MIT-OZ>, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 24 Feb 85 02:37-EST from Gavan Duffy <GAVAN at MIT-OZ>
Message-ID: <850225142004.3.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Sunday, 24 February 1985, 02:37-EST
    From: Gavan Duffy <GAVAN at OZ>

    In Symbolics 3600 System 242.356, Hardcopy 20.10,
    Experimental RELATUS 131.310, FEP 24, on Lisp Machine Buddy Holly:

    In VALIDATE-REQUEST-FOR-SYSTEM, in the user package,  there's an fquery
    with the following format string:

    "System ~S is not normally maintained at this site.  Patching it here may result
    in version skews and make it difficult for your site to receive subsequent software updates.
    Are you sure you really sure you want to patch it? " (SEND SYSTEM :NAME)))

    Isn't SYSTEM an array?  Why send to it?

Fixed a while ago.  (It won't complain about :NAME being an invalid
subscript in Release 6.)
25-Feb-85 18:00:45-EST,1066;000000000000
Received: from SCC-WAIKATO by MIT-OZ via Chaosnet; 25 Feb 85 18:00-EST
Received: from WARE by WAIKATO via CHAOS with CHAOS-MAIL id 84318; Mon 25-Feb-85 17:58:02-EST
Date: Monday, 25 February 1985, 18:00-EST
From:  <schatsky at WAIKATO>
Subject: Page fault on unallocated VMA.
To: BUG-LISPM at OZ
cc: rel60-beta at WAIKATO, dcp at WAIKATO
Fcc: WAIKATO:>schatsky>outgoing-mail.text
In-Reply-To: The message of 22 Feb 85 09:21-EST from Ken Haase <KWH at OZ>
Message-ID: <"850225180055.0.schatsky@WAIKATO"@WARE.SCRC.Symbolics.COM>

Something to keep in mind, perhaps.  I've yet to reproduce this myself
but MetaLogic (running Rel 6.0 Beta IIc) has had trouble with EQUAL hash
tables.  They claim that on several occasions within 20 macro
instructions of one another two uses of (send h-t :get-hash key) return
different values.  The first time the value associated with key is
returned.  The second time :get-hash returns NIL, claiming no such value
is in the table, but h-t and key have not changed.  Their impression is
that this behavior is GC-rel
25-Feb-85 18:12:31-EST,632;000000000000
Received: from MIT-LISPM-25 by MIT-OZ via Chaosnet; 25 Feb 85 18:12-EST
Date: Monday, 25 February 1985, 18:13-EST
From: Patrick A O'Donnell <PAO at MIT-OZ>
Subject: Bug in #= and ##
To: BUG-LISPM at MIT-OZ

In Don't-dump-a-band! Inconsistent (unreleased patches loaded) System 99.21,
CADR 4.2, Experimental ZMail 54.3, MIT-Specific 23.0,
Experimental Manip 1.0, microcode 320, GC@2,
on Lisp Machine Twenty-five:

(defstruct (foo :named) a b c)   => FOO

#1=#S(foo :a nil :b #1# :c 6)    => #S(FOO :A NIL :B (NIL) :C 6)

(setf (b *) *)			 => #1=#S(FOO :A NIL :B #1# :C 6)

'#1=(a b #1# #1#)		 => (a b #1=(NIL) #1#)
25-Feb-85 18:16:55-EST,2098;000000000000
Received: from SCC-WAIKATO by MIT-OZ via Chaosnet; 25 Feb 85 18:16-EST
Received: from WARE by WAIKATO via CHAOS with CHAOS-MAIL id 84318; Mon 25-Feb-85 17:58:02-EST
Date: Monday, 25 February 1985, 18:00-EST
From:  <schatsky at WAIKATO>
Subject: Page fault on unallocated VMA.
To: BUG-LISPM at OZ
cc: rel60-beta at WAIKATO, dcp at WAIKATO
Fcc: WAIKATO:>schatsky>outgoing-mail.text
In-Reply-To: The message of 22 Feb 85 09:21-EST from Ken Haase <KWH at OZ>
Message-ID: <"850225180055.0.schatsky@WAIKATO"@WARE.SCRC.Symbolics.COM>

Something to keep in mind, perhaps.  I've yet to reproduce this myself
but MetaLogic (running Rel 6.0 Beta IIc) has had trouble with EQUAL hash
tables.  They claim that on several occasions within 20 macro
instructions of one another two uses of (send h-t :get-hash key) return
different values.  The first time the value associated with key is
returned.  The second time :get-hash returns NIL, claiming no such value
is in the table, but h-t and key have not changed.  Their impression is
that this behavior is GC-related, happening more often when the EGC has
been flipping.

    Date: Friday, 22 February 1985, 09:21-EST
    From: Ken Haase <KWH at OZ>

    In Symbolics 3600 System 242.356, Hardcopy 20.10, ARLO 25.57, ARLOX 5.59,
    Experimental CYRANO 3.0, FEP 24, Plain ARLO & ARLOX 2/15/85, on Lisp Machine Janis Joplin:

    This happened while describing the fullness distribution of a hash table.

    >>Error: Page fault on unallocated VMA 126755003
    While in the function (:METHOD SI:EQ-HASH-TABLE :DESCRIBE)  DESCRIBE  SI:*EVAL

    (:METHOD SI:EQ-HASH-TABLE :DESCRIBE):  (P.C. = 70)
       Arg 0 (SELF): #<EQ-HASH-TABLE 121416710>
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:EQ-HASH-TABLE -- 7. IV's, 0. FL's 75341130>
       Arg 2 (OPERATION): :DESCRIBE
       Local 3 (NBLOCKS): 186803.
       Local 4 (INFO): #<ART-Q-9. 126754571>
       Local 5 (BLOCK-INDEX): 89027.
       Local 6: 186803.
       Local 7 (COUNT): 0.
       Local 8: 7.
       Local 9 (LOC): #<DTP-LOCATIVE 126755003>
. . .
25-Feb-85 22:35:33-EST,542;000000000000
Received: from MIT-LISPM-25 by MIT-OZ via Chaosnet; 25 Feb 85 22:35-EST
Date: Monday, 25 February 1985, 22:37-EST
From: Patrick A O'Donnell <PAO at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In Don't-dump-a-band! Inconsistent (unreleased patches loaded) System 99.21,
CADR 4.2, Experimental ZMail 54.3, MIT-Specific 23.0,
Experimental Manip 1.0, Experimental Puma 1.0, microcode 320, GC@2,
on Lisp Machine Twenty-five:

Patch 99.5 defines OPERATION-HANDLED-P to send the :OPEERATION-HANDLED-P
message.  (Note the misspelling of operation.)
25-Feb-85 22:45:07-EST,967;000000000000
Received: from MIT-LISPM-25 by MIT-OZ via Chaosnet; 25 Feb 85 22:45-EST
Date: Monday, 25 February 1985, 22:46-EST
From: Patrick A O'Donnell <PAO at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In Don't-dump-a-band! Inconsistent (unreleased patches loaded) System 99.21,
CADR 4.2, Experimental ZMail 54.3, MIT-Specific 23.0,
Experimental Manip 1.0, Experimental Puma 1.0, microcode 320, GC@2,
on Lisp Machine Twenty-five:

I have a flavor which defines a method for :SET-UP-COMMUNICATIONS.  Let
TEST be bound to an instance of that flavor:

(OPERATION-HANDLED-P TEST :SET-UP-COMMUNICATIONS)	=> NIL
(SEND TEST :OPERATION-HANDLED-P :SET-UP-COMMUNICATIONS)	=> T

(OPERATION-HANDLED-P TEST :SET-UP-COMMUNICATIONS)

  expands into

(PROGN (LEXPR-SEND (PROGN TEST) :OPERATION-HANDLED-P (PROGN (LIST :SET-UP-COMMUNICATIONS))))

  which expands into

(PROGN (APPLY (PROGN (PROGN TEST)) :OPERATION-HANDLED-P (PROGN (LIST (PROGN (LIST :SET-UP-COMMUNICATIONS)))))

25-Feb-85 22:49:14-EST,540;000000000000
Received: from MIT-LISPM-25 by MIT-OZ via Chaosnet; 25 Feb 85 22:49-EST
Date: Monday, 25 February 1985, 22:51-EST
From: Patrick A O'Donnell <PAO at MIT-OZ>
Subject: DEFMACRO
To: BUG-LISPM at MIT-OZ

In Don't-dump-a-band! Inconsistent (unreleased patches loaded) System 99.21,
CADR 4.2, Experimental ZMail 54.3, MIT-Specific 23.0,
Experimental Manip 1.0, Experimental Puma 1.0, microcode 320, GC@2,
on Lisp Machine Twenty-five:

Since when did a DEFMACRO no longer have effect for the remainder of the
file in which it appears?
26-Feb-85 05:42:48-EST,1969;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 26 Feb 85 05:42-EST
Date: Tuesday, 26 February 1985, 05:44-EST
From: ZiPpY tHe PiNhEaD <info-bd at OZ>
Subject: More namespace lossage
To: BUG-LISPM at OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10, Color 1.0, FEP 24, on Lisp Machine Buddy Holly:

while cold booting

>>Error: The object (:HOST #<NAME SEW|HYDRA 15474446> #<NAMESPACE SEW 15474421>) is not a valid function
While in the function (:HOST #<NAME SEW|HYDRA 15474446> #<NAMESPACE SEW 15474421>)  NETI:OPEN-NAMESPACE-SERVER  NETI:QUERY-NAMESPACE-SERVER

(:HOST #<NAME SEW|HYDRA 15474446> #<NAMESPACE SEW 15474421>):
   Arg 0: :SITE

NETI:OPEN-NAMESPACE-SERVER:  (P.C. = 123)
   Arg 0 (NAMESPACE): #<NAMESPACE SEW 15474421>
   --Defaulted args:--
   Arg 1 (FOR-UPDATE): NIL

NETI:QUERY-NAMESPACE-SERVER:  (P.C. = 75)
   Arg 0 (CLASS): :HOST
   Arg 1 (NAMESPACE): #<NAMESPACE SEW 15474421>
   Rest arg (PROPERTY-LIST): (:NAME #<NAME SEW|HYDRA 15474446>)

NETI:FIND-OBJECT-NAMED-IN-NAMESPACE:  (P.C. = 205)
   Arg 0 (CLASS): :HOST
   Arg 1 (NAME): #<NAME SEW|HYDRA 15474446>
   Arg 2 (NAMESPACE): #<NAMESPACE SEW 15474421>
   Arg 3 (ERROR-P): NIL

NETI:DO-UNKNOWN-OBJECT-FIXUPS:  (P.C. = 136)
   Arg 0 (DECACHE-FIRST): T

NETI:QUERY-NAMESPACE-SERVER:  (P.C. = 477)
   Arg 0 (CLASS): :NAMESPACE
   Arg 1 (NAMESPACE): #<NAMESPACE SCRC 10427333>
   Rest arg (PROPERTY-LIST): (:NAME :SCRC)

NETI:GET-INCREMENTAL-UPDATE-FROM-NETWORK:  (P.C. = 421)
   Arg 0 (NAMESPACE): #<NAMESPACE SCRC 10427333>
   Arg 1 (STARTING-TIMESTAMP): 4751

(:METHOD NETI:NAMESPACE :GET-LATEST-TIMESTAMP):  (P.C. = 21)
   Arg 0 (SELF): #<NAMESPACE SCRC 10427333>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NETI:NAMESPACE -- 8. IV's, 0. FL's 52475062>
   Arg 2 (OPERATION): :GET-LATEST-TIMESTAMP

Rest of stack:
NETI:INITIALIZE-NAMESPACES-AND-NETWORK:  (P.C. = 155)
LISP-REINITIALIZE:  (P.C. = 443)
SI:LISP-TOP-LEVEL:  (P.C. = 3)
26-Feb-85 11:36:20-EST,3888;000000000000
Received: from MIT-JANIS by MIT-OZ via Chaosnet; 26 Feb 85 11:36-EST
Date: Tuesday, 26 February 1985, 11:35-EST
From: Ken Haase <KWH at OZ>
Subject: File system bug?
To: BUG-LISPM at OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 24, on Lisp Machine Janis Joplin:

I don't remember doing anything bizzare to lead to this...

>>Error: File system bug on host REAGAN:
         File handle O2486 is still (or already?) in use.
         For B:>KWH>MRL>Tools.LISP
While in the function (:METHOD FS:HOST-UNIT :COMMAND)  FS:OPEN-CHAOS  (:METHOD
                                                                         FS:QFILE-ACCESS-PATH
                                                                         :OPEN)

(:METHOD FS:HOST-UNIT :COMMAND):  (P.C. = 236)
   Arg 0 (SELF): #<HOST-UNIT 17034057>
   Arg 1 (SELF-MAPPING-TABLE): FS:HOST-UNIT
   Arg 2 (OPERATION): :COMMAND
   Arg 3 (MARK-P): NIL
   Arg 4 (STREAM-OR-HANDLE): (:CREATE "O2486")
   Arg 5 (SIMPLE-P): NIL
   Arg 6 (WHOSTATE): "Open"
   Rest arg (COMMANDS): ("OPEN " :WRITE " " :CHARACTER "" "" "" "" "" "" ...)
   Local 8 (HANDLE): "O2486"
   Local 9 (STREAM): NIL
   Local 10 (PKT): #<Chaos Packet 1412240>
   Local 11 (SUCCESS): NIL
   Local 12 (STRING): "O2486 ERROR BUG F File handle O2486 is still (or already?) in use."
   Local 13 (TRANSACTION-ID): "T2502"
   Local 14 (CREATE-P): T
   Local 15 (CONDITION): NIL
   Local 16: T
   Local 17: #<CASE-HANDLER 10564155>
   Local 18: (#<BIND-HANDLER 12176067> #<BIND-HANDLER 12437466>)
   Local 19: (#<CASE-HANDLER 10564155> #<BIND-HANDLER 12176067> #<BIND-HANDLER 12437466>)

FS:OPEN-CHAOS:  (P.C. = 674)
   Arg 0 (ACCESS-PATH): #<LMFS-QFILE-ACCESS-PATH B using QFILE 17034046>
   Arg 1 (REAL-PATHNAME): #<LMFS-PATHNAME "B:>KWH>MRL>Tools.LISP">
   Arg 2 (*COMMAND-PATHNAME*-initialization): #<LMFS-PATHNAME "B:>KWH>MRL>Tools.LISP">
   Arg 3 (OPTIONS): (:CHARACTERS T :DIRECTION :OUTPUT)

(:METHOD FS:QFILE-ACCESS-PATH :OPEN):  (P.C. = 7)
   Arg 0 (SELF): #<LMFS-QFILE-ACCESS-PATH B using QFILE 17034046>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:QFILE-ACCESS-PATH -- 4. IV's, 0. FL's 10376410>
   Arg 2 (OPERATION): :OPEN
   Arg 3 (REAL-PATHNAME): #<LMFS-PATHNAME "B:>KWH>MRL>Tools.LISP">
   Arg 4 (PATHNAME): #<LMFS-PATHNAME "B:>KWH>MRL>Tools.LISP">
   Rest arg (OPTIONS): (:CHARACTERS T :DIRECTION :OUTPUT)

(:METHOD FS:ACTIVE-PATHNAME-MIXIN :OPEN):  (P.C. = 14)
   Arg 0 (SELF): #<LMFS-PATHNAME "B:>KWH>MRL>Tools.LISP">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:ACTIVE-PATHNAME-MIXIN -- 1. IV's, 0. FL's 52675451>
   Arg 2 (OPERATION): :OPEN
   Arg 3 (PATHNAME): #<LMFS-PATHNAME "B:>KWH>MRL>Tools.LISP">
   Rest arg (OPTIONS): (:CHARACTERS T :DIRECTION :OUTPUT)

FS:MACLISP-COMPATIBILITY-OPEN:  (P.C. = 362)
   Arg 0 (FILENAME): #<LMFS-PATHNAME "B:>KWH>MRL>Tools.LISP">
   Arg 1 (OPTIONS): (ZWEI:OUT)

OPEN:  (P.C. = 252)
   Arg 0 (PATHNAME): #<LMFS-PATHNAME "B:>KWH>MRL>Tools.LISP">
   Rest arg (KEYWORD-ARGS): ((ZWEI:OUT))

(:METHOD ZWEI:FILE-BUFFER-MIXIN :SAVE):  (P.C. = 44)
   Arg 0 (SELF): #<FILE-BUFFER "Tools.LISP >KWH>MRL B:" 17131502>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:FILE-BUFFER-MIXIN -- 9. IV's, 0. FL's 60253526>
   Arg 2 (OPERATION): :SAVE

ZWEI:SAVE-BUFFER:  (P.C. = 203)
   Arg 0 (BUFFER): #<FILE-BUFFER "Tools.LISP >KWH>MRL B:" 17131502>

Rest of stack:
ZWEI:COM-SAVE-FILE:  (P.C. = 14)
ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
ZWEI:MAKE-EXTENDED-COMMAND-INTERNAL:  (P.C. = 77)
SYS:CALL-FUNNY-FUNCTION:  (P.C. = 101)
Closure of ZWEI:MAKE-EXTENDED-COMMAND-INTERNAL:
ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 214)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 41)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
26-Feb-85 12:34:49-EST,2513;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 26 Feb 85 12:34-EST
Received: from SCRC-CUYAHOGA by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 185489; Tue 26-Feb-85 11:50:56-EST
Date: Tuesday, 26 February 1985, 11:49-EST
From: Robert A. Cassels <Cassels at SCRC-TENEX>
Subject: Page fault on unallocated VMA.
To: schatsky at WAIKATO, BUG-LISPM at OZ
cc: rel60-beta at WAIKATO, dcp at WAIKATO
In-Reply-To: <"850225180055.0.schatsky@WAIKATO"@WARE.SCRC.Symbolics.COM>
Message-ID: <850226114945.2.CASSELS@CUYAHOGA.SCRC.Symbolics.COM>

    Date: Monday, 25 February 1985, 18:00-EST
    From:  <schatsky at WAIKATO>

    Something to keep in mind, perhaps.  I've yet to reproduce this myself
    but MetaLogic (running Rel 6.0 Beta IIc) has had trouble with EQUAL hash
    tables.  They claim that on several occasions within 20 macro
    instructions of one another two uses of (send h-t :get-hash key) return
    different values.  The first time the value associated with key is
    returned.  The second time :get-hash returns NIL, claiming no such value
    is in the table, but h-t and key have not changed.  Their impression is
    that this behavior is GC-related, happening more often when the EGC has
    been flipping.

	Date: Friday, 22 February 1985, 09:21-EST
	From: Ken Haase <KWH at OZ>

	In Symbolics 3600 System 242.356, Hardcopy 20.10, ARLO 25.57, ARLOX 5.59,
	Experimental CYRANO 3.0, FEP 24, Plain ARLO & ARLOX 2/15/85, on Lisp Machine Janis Joplin:

	This happened while describing the fullness distribution of a hash table.

	>>Error: Page fault on unallocated VMA 126755003
	While in the function (:METHOD SI:EQ-HASH-TABLE :DESCRIBE)  DESCRIBE  SI:*EVAL

	(:METHOD SI:EQ-HASH-TABLE :DESCRIBE):  (P.C. = 70)
	   Arg 0 (SELF): #<EQ-HASH-TABLE 121416710>
	   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:EQ-HASH-TABLE -- 7. IV's, 0. FL's 75341130>
	   Arg 2 (OPERATION): :DESCRIBE
	   Local 3 (NBLOCKS): 186803.
	   Local 4 (INFO): #<ART-Q-9. 126754571>
	   Local 5 (BLOCK-INDEX): 89027.
	   Local 6: 186803.
	   Local 7 (COUNT): 0.
	   Local 8: 7.
	   Local 9 (LOC): #<DTP-LOCATIVE 126755003>
    . . .

It would be good to see the rest of the backtrace.  The last time one of
these came by, the DESCRIBE was being done from a break while the hash
table was being grown.  It's not too surprising that while the table is
being grown, some bogus pointers may be lying around.  (We should still
try to make it a little more robust.)
26-Feb-85 15:38:24-EST,658;000000000000
Received: from MIT-APIARY-3 by MIT-OZ via Chaosnet; 26 Feb 85 15:38-EST
Date: Tuesday, 26 February 1985, 15:35-EST
From:  <DJB at MIT-PYGMALION>
Subject: trig functions
To: BUG-LISPM at MIT-OZ

Do the arccos and arcsin functions exist on the LISPMs?  I am running
Rel 5.2.  It seems that a supplied micro-coded function would have to be
faster than my user-defined ones, especially since I wind up using a
SQRT, which I think is pretty slow.  I need to use an arccos in a tight
inner loop of a lengthy program, so this feature would help me a lot.

As an alternative, does anyone have a micro-coded version of these
functions?

Thanks,
Dave
26-Feb-85 22:26:17-EST,1420;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 26 Feb 85 22:26-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 185946; Tue 26-Feb-85 20:06:51-EST
Date: Tuesday, 26 February 1985, 20:02-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: trig functions
To: DJB at PYGMALION, BUG-LISPM at OZ
In-Reply-To: The message of 26 Feb 85 15:35-EST from DJB at PYGMALION
Message-ID: <850226200235.8.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Tuesday, 26 February 1985, 15:35-EST
    From:  <DJB at MIT-PYGMALION>

    Do the arccos and arcsin functions exist on the LISPMs?  I am running
    Rel 5.2.  It seems that a supplied micro-coded function would have to be
    faster than my user-defined ones, especially since I wind up using a
    SQRT, which I think is pretty slow.  I need to use an arccos in a tight
    inner loop of a lengthy program, so this feature would help me a lot.

    As an alternative, does anyone have a micro-coded version of these
    functions?

None of the trig functions are microcoded.  What you are really asking
for is system-supplied-fast-numeric versions.  I can't remember if we
fixed the bug in SQRT that was causing it to be slow.  Anyway, in
Release 6 CL:ACOS is the same as SI:CL-ACOS, which may or may not exist
in Release 5.  (si:cl-acos .1234) takes an average of 460 microseconds
on my machine.
27-Feb-85 12:08:35-EST,1992;000000000000
Received: by MIT-OZ via Chaosnet; 27 Feb 85 12:08-EST
Received: from SCRC-CUYAHOGA by SCRC-VALLECITO via CHAOS with CHAOS-MAIL id 253; Wed 27-Feb-85 12:03:12-EST
Date: Wednesday, 27 February 1985, 12:02-EST
From: Robert A. Cassels <Cassels at SCRC-TENEX>
Subject: trig functions
To: DCP at SCRC-QUABBIN, DJB at PYGMALION, BUG-LISPM at OZ
In-Reply-To: <850226200235.8.NFEP@NEPONSET.SCRC.Symbolics.COM>
Message-ID: <850227120247.7.CASSELS@CUYAHOGA.SCRC.Symbolics.COM>

    Date: Tuesday, 26 February 1985, 20:02-EST
    From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>

	Date: Tuesday, 26 February 1985, 15:35-EST
	From:  <DJB at MIT-PYGMALION>

	Do the arccos and arcsin functions exist on the LISPMs?  I am running
	Rel 5.2.  It seems that a supplied micro-coded function would have to be
	faster than my user-defined ones, especially since I wind up using a
	SQRT, which I think is pretty slow.  I need to use an arccos in a tight
	inner loop of a lengthy program, so this feature would help me a lot.

If you need less than full accuracy, you should look into simpler
approximations.  The system-supplied ones necessarily attempt to give
full machine accuracy.

	As an alternative, does anyone have a micro-coded version of these
	functions?

    None of the trig functions are microcoded.  What you are really asking
    for is system-supplied-fast-numeric versions.  I can't remember if we
    fixed the bug in SQRT that was causing it to be slow.
We did.
							   Anyway, in
    Release 6 CL:ACOS is the same as SI:CL-ACOS, which may or may not exist
    in Release 5.  (si:cl-acos .1234) takes an average of 460 microseconds
    on my machine.
350 on mine (with an FPA).

CL-ACOS (which uses the SQRT/ATAN approximation) contains this comment:
  ;;---I hope we can do a little better than these...

I looked into alternative approximations, and there are some other ideas
but they're all messy and would require some careful thought.
28-Feb-85 00:00:07-EST,2796;000000000000
Received: from MIT-JIMI by MIT-OZ via Chaosnet; 28 Feb 85 00:00-EST
Date: Wednesday, 27 February 1985, 23:57-EST
From: David Vinayak Wallace <Gumby at MC>
To: BUG-LISPM at OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 18, on Lisp Machine Jimi Hendrix:

I did edit word abbrevs and then m->.  This was the second time I did
Edit Word abbrevs; the first time worked fine.

>>Trap: The first argument given to the AP-LEADER instruction, NIL, was not an array.
While in the function ZWEI:PUT-POINT-AT-PLINE  ZWEI:RECENTER-WINDOW  ZWEI:REDISPLAY

ZWEI:PUT-POINT-AT-PLINE:  (P.C. = 23)
   Arg 0 (SHEET): #<ZMACS-WINDOW-PANE Zmacs Window Pane 3 26722243 deexposed>
   Arg 1 (POINT-LINE): "SOCI:                         1       /"society/""
   Arg 2 (POINT-INDEX): 47.
   Arg 3 (POINT-PLINE): 24.
   Arg 4 (FIRST-BP): ("POL:                           1       /"Polanyi/"" 0. :NORMAL)
   Arg 5 (LAST-BP): ("" 0. :MOVES)
   Local 6 (LH): 14.
   Local 7 (P): 16.
   Local 8 (STOP-LINE): "POL:                           1       /"Polanyi/""
   Local 9 (DIAGRAM-NPLINES): NIL
   Local 10 (LINE): NIL
   Local 11 (POINT-LINE-P): NIL
   Local 12 (DIAGRAM): NIL

ZWEI:RECENTER-WINDOW:  (P.C. = 101)
   Arg 0 (WINDOW): #<WINDOW 56120645>
   Arg 1 (RECENTER-TYPE): :ABSOLUTE
   Arg 2 (RC1): NIL
   Arg 3 (RC2): NIL

ZWEI:REDISPLAY:  (P.C. = 266)
   Arg 0 (WINDOW): #<WINDOW 56120645>
   --Defaulted args:--
   Arg 1 (RECENTER-TYPE): :ABSOLUTE
   Arg 2 (RC1): NIL
   Arg 3 (RC2): NIL
   Arg 4 (FORCE-TO-COMPLETION-P): NIL

ZWEI:REDISPLAY-ALL-WINDOWS:  (P.C. = 34)
   --Defaulted args:--
   Arg 0 (FORCE-TO-COMPLETION-P): NIL
   Arg 1 (SELECT-P): T

(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 140)
   Arg 0 (SELF): #<EDITOR 16764446>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:EDITOR -- 12. IV's, 0. FL's 56044056>
   Arg 2 (OPERATION): :EDIT
   Arg 3 (TOP-LEVEL-P): NIL
   Arg 4 (DESCRIPTION): NIL

ZWEI:COMMAND-LOOP:  (P.C. = 73)
   Arg 0 (COMTAB): #<COMTAB Recursive Edit 56044014>
   Arg 1 (WINDOW): #<WINDOW 56120645>
   --Defaulted args:--
   Arg 2 (TYPE): ZWEI:EDITOR
   Arg 3 (DESCRIPTION): NIL

ZWEI:RECURSIVE-EDIT:  (P.C. = 37)
   Arg 0 (INTERVAL): #<NODE 16772102>
   Arg 1 (MODE): "Edit Word Abbrevs"
   --Defaulted args:--
   Arg 2 (POINT): NIL

ZWEI:COM-EDIT-WORD-ABBREVS:  (P.C. = 13)

Rest of stack:
ZWEI:COM-EXTENDED-COMMAND:  (P.C. = 27)
ZWEI:RE-EXECUTE-MINI-BUFFER-COMMAND:  (P.C. = 114)
ZWEI:COM-REPEAT-LAST-MINI-BUFFER-COMMAND:  (P.C. = 27)
ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 214)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 41)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
28-Feb-85 22:10:55-EST,3705;000000000000
Received: from MIT-FORD by MIT-OZ via Chaosnet; 28 Feb 85 22:10-EST
Date: Thursday, 28 February 1985, 22:09-EST
From: Robert L. Krawitz <RLK at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In System 98.80, CADR 3.10, ZMail 53.19, MIT-Specific 22.5,
microcode 309, ZM MIT gc*2, on Ford Prefect:


Insert your description of the circumstances here:

Look in <zzz.rlk>bad-mail-2-28.txt.  This has totally broken zmail --
even the system key won't work, and I can't get out of this!  It goes
with zzz.rlk.babyl, which unfortunately has to change.  The only way
out that happened to work was a warm boot.  I started this message
before I got really hung.

Sorry if this works in 99 -- I've only once before (yesterday) had this
bug, and I managed to get out of it.

Seems to me that it should handle this gracefully -- not lose totally.

>>ERROR: Bad status line 26-Feb-85 14:51:53-EST,879;000000000000
Backtrace from the debugger:

ZWEI:PARSE-MSG-NEW-BABYL-STATUS-LINE (P.C. = 247)

 Arg 0 (LINE): "26-Feb-85 14:51:53-EST,879;000000000000"
 Arg 1 (STATUS): #<DTP-LOCATIVE 2641400>
Local 0 (KEYWORDS): NIL
Local 1 (I): 0
Local 2 (STATE): 1
Local 3 (LEN): 47
Local 4 (J): 27
Local 5 (STR): "26-Feb-85 14:51:53-EST"
Local 6 (TEM): NIL
Local 7 (*SELECTQ-ITEM*): 70


(:METHOD ZWEI:BABYL-MAIL-FILE-BUFFER :BEFORE :PARSE-MSG) (P.C. = 104)
  (SELF is #<BABYL-MAIL-FILE-BUFFER "ZZZ/.RLK.BABYL OZ:<ZZZ.RLK> OZ:" 22477235>)

 Arg 0 (OPERATION): :PARSE-MSG
 Arg 1 (MSG): #S(ZWEI:MSG :REAL-INTERVAL #<NODE 22555613> :INTERVAL ...)
 Arg 2 (-STATUS-): #<DTP-LOCATIVE 2641400>
Local 0 (START-BP): ("26-Feb-85 14:51:53-EST,879;000000000000" 0 :NORMAL)
Local 1 (END-BP): ("" 0 :MOVES)
Local 2 (REAL-START-LINE): "26-Feb-85 14:51:53-EST,879;000000000000"
Local 3 (END-LINE): ""
Local 4 (START-LINE): "26-Feb-85 14:51:53-EST,879;000000000000"
Local 5 (LINE): NIL


(:METHOD ZWEI:BABYL-MAIL-FILE-BUFFER :COMBINED :PARSE-MSG) (P.C. = 41)
  (SELF is #<BABYL-MAIL-FILE-BUFFER "ZZZ/.RLK.BABYL OZ:<ZZZ.RLK> OZ:" 22477235>)

 Rest arg (.DAEMON-CALLER-ARGS.): (:PARSE-MSG #S(ZWEI:MSG :REAL-INTERVAL #<NODE 22555613> :INTERVAL ...) #<DTP-LOCATIVE 2641400>)
Local 1 (.DAEMON-MAPPING-TABLE.): #<ART-16B-5 30660112>
Local 2 (.VAL1.): NIL
Local 3 (.VAL2.): NIL
Local 4 (.VAL3.): NIL


ZWEI:ASSURE-MSG-PARSED (P.C. = 100)

 Arg 0 (MSG): #S(ZWEI:MSG :REAL-INTERVAL #<NODE 22555613> :INTERVAL ...)
Local 0 (PARSED-P): #<DTP-LOCATIVE 2641401>
Local 1 (STATUS): #<DTP-LOCATIVE 2641400>
Local 2 (DONE-P): NIL


ZWEI:SUMMARY-DISPLAY-UPDATE (P.C. = 40)

 Arg 0 (MSG): #S(ZWEI:MSG :REAL-INTERVAL #<NODE 22555613> :INTERVAL ...)
Local 0 (STATUS): NIL


Remainder of stack:

(:SELECT-METHOD TV:SCROLL-ENTRY-CALL-FUNCTION-FUNCTION :RECOMPUTE) (P.C. = 23)
(:SELECT-METHOD TV:SCROLL-ENTRY-SYMBOL-VALUE-FUNCTION :CHANGED-P) (P.C. = 25)
TV:SCROLL-REDISPLAY-DISPLAY-ITEM (P.C. = 334)
TV:SCROLL-REDISPLAY-ITEM-LOOP (P.C. = 137)
TV:SCROLL-REDISPLAY-ITEM-LOOP (P.C. = 113)
TV:SCROLL-REDISPLAY (P.C. = 220)
(:METHOD TV:BASIC-SCROLL-WINDOW :REDISPLAY) (P.C. = 64)
(:METHOD ZWEI:ZMAIL-SUMMARY-SCROLL-WINDOW :COMBINED :REDISPLAY) (P.C. = 61)
(:METHOD ZWEI:ZMAIL-SUMMARY-SCROLL-WINDOW :REDISPLAY-AS-NECESSARY) (P.C. = 63)
(:METHOD ZWEI:ZMAIL-COMMAND-LOOP-MIXIN-WITH-SUMMARY :REDISPLAY) (P.C. = 47)
(:METHOD ZWEI:ZMAIL-COMMAND-LOOP-MIXIN :COMMAND-LOOP) (P.C. = 213)
(:INTERNAL (:METHOD ZWEI:ZMAIL-FRAME :COMBINED :COMMAND-LOOP) 0) (P.C. = 44)
FUNCALL (P.C. = 25)
(:METHOD ZWEI:ZMAIL-COMMAND-LOOP-MIXIN :AROUND :COMMAND-LOOP) (P.C. = 57)
(:METHOD ZWEI:ZMAIL-FRAME :COMBINED :COMMAND-LOOP) (P.C. = 43)
ZWEI:ZMAIL-PROCESS-TOP-LEVEL (P.C. = 115)
SI:PROCESS-TOP-LEVEL (P.C. = 152)
28-Feb-85 23:36:51-EST,3312;000000000000
Received: from MIT-APIARY-3 by MIT-OZ via Chaosnet; 28 Feb 85 23:36-EST
Date: Thursday, 28 February 1985, 23:34-EST
From: Henry Lieberman <Henry at OZ>
Subject: Compiler blowout
To: BUG-LISPM at OZ
Message-ID: <850228233410.1.HENRY@APIARY-3.MIT>

In Symbolics 3600 Release 6.0 Beta IIc, microcode TMC5-MIC 315, FEP 18, on Lisp Machine Apiary-3:

Compiling this:

(DEFUN NEW-ZSTEP (&OPTIONAL FORM)
       (COND ((BOUNDP 'ZSTEP-FRAME)
              (SEND ZSTEP-FRAME :DEACTIVATE)
              (SEND ZSTEP-PROCESS :KILL)
              (MAKUNBOUND 'ZSTEP-FRAME)))
       (ZSTEP FORM))

>>Trap: The argument given to the CDR instruction, 327680, was not a locative, a list, or NIL.
While in the function SI:COMPILED-FUNCTION-DEBUGGING-INFO  DEBUGGING-INFO  SI:DECLARED-DEFINITION-INTERNAL
While compiling NEW-ZSTEP

SI:COMPILED-FUNCTION-DEBUGGING-INFO:  (P.C. = 6)
   Arg 0 (FUNCTION): (SI:DIGESTED-LAMBDA (LAMBDA (&REST IGNORE) (FMAKUNBOUND (QUOTE ZSTEP)) (REMPROP (QUOTE ZSTEP) (QUOTE :SOURCE-FILE-NAME)) (LET (**) (LOAD "<Tinker>Zstep")) (APPLY (FUNCTION ZSTEP) IGNORE)) NIL 257 327680 NIL (&REST IGNORE) NIL (FMAKUNBOUND (QUOTE ZSTEP)) (REMPROP (QUOTE ZSTEP) (QUOTE :SOURCE-FILE-NAME)) ...)

DEBUGGING-INFO:  (P.C. = 142)<<Error printing function name>>
   Arg 0 (FUNCTION): #<LEXICAL-CLOSURE (LAMBDA ** ** ** ...) 7243420>

SI:DECLARED-DEFINITION-INTERNAL:  (P.C. = 117)
   Arg 0 (FUNCTION): ZSTEP

SI:CACHED-LOCAL-DECLARATION:  (P.C. = 7)
   Arg 0 (FUNCTION): SI:DECLARED-DEFINITION-INTERNAL
   Arg 1 (ARG): ZSTEP

SYS:DECLARED-DEFINITION:  (P.C. = 4)
   Arg 0 (FUNCTION): ZSTEP

COMPILER:COLLECT-TOP-LEVEL-MACROS-1:  (P.C. = 25)
   Arg 0 (EXP): (ZSTEP FORM)

COMPILER:COLLECT-TOP-LEVEL-MACROS-1:  (P.C. = 74)
   Arg 0 (EXP): ((COND ((BOUNDP **) (SEND ZSTEP-FRAME :DEACTIVATE) (SEND ZSTEP-PROCESS :KILL) (MAKUNBOUND **))) (ZSTEP FORM))

COMPILER:COLLECT-TOP-LEVEL-MACROS:  (P.C. = 5)
   Arg 0 (EXP): ((COND ((BOUNDP **) (SEND ZSTEP-FRAME :DEACTIVATE) (SEND ZSTEP-PROCESS :KILL) (MAKUNBOUND **))) (ZSTEP FORM))

Rest of stack:
COMPILER:PHASE-1-FUNCTION-DEFINITION:  (P.C. = 13)
COMPILER:PHASE-1-EXTERNAL-FUNCTION:  (P.C. = 35)
COMPILER:RUN-PHASE-1-FUNCTION:  (P.C. = 73)
COMPILER:COMPILE-DEFINITION-1:  (P.C. = 10)
COMPILER:COMPILE-DEFINITION:  (P.C. = 104)<<Error printing function name>>
(:INTERNAL COMPILER:COMPILE-TO-CORE 0 (:DUMP-DEFINITION)):  (P.C. = 5)
COMPILER:COMPILE-TO-CORE:  (P.C. = 12)
COMPILER:COMPILE-FORM-FUNCTION:  (P.C. = 41)
COMPILER:COMPILE-FROM-STREAM-1:  (P.C. = 326)
COMPILER:PROCESS-FORMS-FROM-STREAM:  (P.C. = 117)
COMPILER:COMPILE-FROM-STREAM:  (P.C. = 237)<<Error printing function name>>
ZWEI:COMPILE-INTERVAL:  (P.C. = 142)<<Error printing function name>>
ZWEI:COMPILE-PRINT-INTERVAL:  (P.C. = 121)
ZWEI:COMPILE-DEFINITION-INTERNAL:  (P.C. = 100)
ZWEI:COM-COMPILE-REGION:  (P.C. = 5)
ZWEI:DO-IT-COMPILE:  (P.C. = 21)  (from HENRYS-INIT: HENRY; ZTOP)
ZWEI:COM-DO-IT-COMPILE:  (P.C. = 2)  (from HENRYS-INIT: HENRY; ZTOP)
ZWEI:COMMAND-EXECUTE:  (P.C. = 57)<<Error printing function name>>
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 233)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 60)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 51)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
 1-Mar-85 12:43:33-EST,7662;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 1 Mar 85 12:43-EST
Date: Friday, 1 March 1985, 12:43-EST
From: CJL at OZ
Sender: bug-lispm at OZ
Subject: Reagan is talking to host NIL?
To: BUG-LISPM at OZ
Message-ID: <850301124346.1.FILE-SERVER@REAGAN.MIT>

In Symbolics 3600 Release 6.0 Beta IIc, microcode TMC5-MIC 315, on Lisp Machine Ronald Reagan:

Checking validity of internet network.
I think it's talking to WHITE, but it says it's talking to NIL.

>>Break: 
While in the function PROCESS-WAIT  CHAOS:GET-NEXT-PKT  (:METHOD CHAOS:BASIC-INPUT-STREAM :GET-NEXT-INPUT-PKT)

PROCESS-WAIT:
   Arg 0 (WHOSTATE): "Chaos In"
   Local 0 (WHOSTATE): #<BREAK 23526641>
   Arg 1 (FUNCTION): #<DTP-COMPILED-FUNCTION (:INTERNAL CHAOS:GET-NEXT-PKT 0) 11544740>
   Local 1 (FUNCTION): #<DTP-LOCATIVE 500755>
   Rest arg (ARGUMENTS): (#<CHAOS Connection for NAMESPACE to NIL 20167210> #<DTP-LOCATIVE 23526601>)
   Local 2 (ARGUMENTS): #<DTP-LOCATIVE 500754>

CHAOS:GET-NEXT-PKT:  (P.C. = 174)
   Arg 0 (CONN): #<CHAOS Connection for NAMESPACE to NIL 20167210>
   Arg 1 (NO-HANG-P): NIL
   Arg 2 (STREAM): #<CHARACTER-STREAM 23526575>

(:METHOD CHAOS:BASIC-INPUT-STREAM :GET-NEXT-INPUT-PKT):  (P.C. = 60)
   Arg 0 (SELF): #<CHARACTER-STREAM 23526575>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor CHAOS:BASIC-INPUT-STREAM -- 2. IV's, 0. FL's 142451041>
   Arg 2 (OPERATION): :GET-NEXT-INPUT-PKT
   Arg 3 (NO-HANG-P): NIL

(:METHOD CHAOS:CHARACTER-INPUT-STREAM-MIXIN :NEXT-INPUT-BUFFER):  (P.C. = 6)
   Arg 0 (SELF): #<CHARACTER-STREAM 23526575>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor CHAOS:CHARACTER-INPUT-STREAM-MIXIN -- 1. IV's, 0. FL's 142451122>
   Arg 2 (OPERATION): :NEXT-INPUT-BUFFER
   Arg 3 (NO-HANG-P): NIL

(:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :SETUP-NEXT-INPUT-BUFFER):  (P.C. = 12)
   Arg 0 (SELF): #<CHARACTER-STREAM 23526575>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:BASIC-BUFFERED-INPUT-STREAM -- 3. IV's, 0. FL's 142451046>
   Arg 2 (OPERATION): :SETUP-NEXT-INPUT-BUFFER
   Arg 3 (NO-HANG-P): NIL
   Arg 4 (EOF): NIL

(:METHOD CHAOS:CHARACTER-STREAM :COMBINED :SETUP-NEXT-INPUT-BUFFER):  (P.C. = 11)
   Arg 0 (SELF): #<CHARACTER-STREAM 23526575>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor CHAOS:CHARACTER-STREAM -- 3. IV's, 8. FL's 142451104>
   Arg 2 (.OPERATION.): :SETUP-NEXT-INPUT-BUFFER
   Rest arg (.DAEMON-CALLER-ARGS.): NIL
   Local 3 (.DAEMON-CALLER-ARGS.): (NIL NIL)

(:METHOD SI:BUFFERED-LINE-INPUT-MIXIN :STRING-LINE-IN):  (P.C. = 31)
   Arg 0 (SELF): #<CHARACTER-STREAM 23526575>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:BUFFERED-LINE-INPUT-MIXIN -- 3. IV's, 0. FL's 142451160>
   Arg 2 (OPERATION): :STRING-LINE-IN
   Arg 3 (EOF): NIL
   Arg 4 (LINE): "TOO-OLD 529RSION 3INTERNET Center/"S SERIAL-STREAME-TIMESTAMP2143"
   --Defaulted args:--
   Arg 5 (START): 0
   Arg 6 (END): 64

NETI:PARSE-RECORD-AS-TOKENS:  (P.C. = 34)
   Arg 0 (STREAM): #<CHARACTER-STREAM 23526575>
   Arg 1 (COMMENTS-P): T

NETI:PARSE-RECORD-AS-TOKENS-WITH-TIMEOUT:  (P.C. = 40)
   Arg 0 (STREAM): #<CHARACTER-STREAM 23526575>
   --Defaulted args:--
   Arg 1 (COMMENTS-P): T

(:DEFUN-METHOD NETI:LISPM-NAMESPACE-GET-STREAM):  (P.C. = 40)
   Arg 0 (SELF): #<LISPM-NAMESPACE-ACCESS-PATH Namespace Lock SWW|WHITE 5304116>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NETI:LISPM-NAMESPACE-ACCESS-PATH -- 3. IV's, 1. FL's 106036503>

(:METHOD NETI:LISPM-NAMESPACE-ACCESS-PATH :VALIDATE):  (P.C. = 7)
   Arg 0 (SELF): #<LISPM-NAMESPACE-ACCESS-PATH Namespace Lock SWW|WHITE 5304116>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NETI:LISPM-NAMESPACE-ACCESS-PATH -- 3. IV's, 1. FL's 106036503>
   Arg 2 (OPERATION): :VALIDATE

(:INTERNAL (:METHOD NETI:LISPM-NAMESPACE-ACCESS-PATH :COMBINED :VALIDATE) 0):  (P.C. = 11)
   Arg 0 (SELF): #<LISPM-NAMESPACE-ACCESS-PATH Namespace Lock SWW|WHITE 5304116>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NETI:LISPM-NAMESPACE-ACCESS-PATH -- 3. IV's, 1. FL's 106036503>
   Arg 2 (.OPERATION.): :VALIDATE
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

(:METHOD NETI:NAMESPACE-ACCESS-PATH :WHOPPER :VALIDATE):  (P.C. = 41)
   Arg 0 (SELF): #<LISPM-NAMESPACE-ACCESS-PATH Namespace Lock SWW|WHITE 5304116>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NETI:NAMESPACE-ACCESS-PATH -- 3. IV's, 0. FL's 106036475>
   Arg 2 (.WHOPPER-CONTINUATION.): #<DTP-COMPILED-FUNCTION (:INTERNAL (:METHOD NETI:LISPM-NAMESPACE-ACCESS-PATH :COMBINED :VALIDATE) 0) 21726742>
   Arg 3 (.OLD-SELF-MAPPING-TABLE.): #<Map to flavor NETI:LISPM-NAMESPACE-ACCESS-PATH -- 3. IV's, 1. FL's 106036503>
   Arg 4 (.OPERATION.): :VALIDATE

(:METHOD NETI:LISPM-NAMESPACE-ACCESS-PATH :COMBINED :VALIDATE):  (P.C. = 13)
   Arg 0 (SELF): #<LISPM-NAMESPACE-ACCESS-PATH Namespace Lock SWW|WHITE 5304116>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NETI:LISPM-NAMESPACE-ACCESS-PATH -- 3. IV's, 1. FL's 106036503>
   Arg 2 (.OPERATION.): :VALIDATE
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

NETI:FIND-NAMESPACE-ACCESS-PATH-TO-HOST:  (P.C. = 34)
   Arg 0 (SERVICE-ACCESS-PATH): #<SERVICE-ACCESS-PATH NAMESPACE (NAMESPACE) -- <Deleted> on CHAOS 23012220>

NETI:FIND-NAMESPACE-ACCESS-PATH:  (P.C. = 211)
   Arg 0 (NAMESPACE): #<NAMESPACE SWW 62301534>
   Rest arg: NIL

NETI:QUERY-NAMESPACE-SERVER:  (P.C. = 57)
   Arg 0 (CLASS): :NETWORK
   Arg 1 (NAMESPACE): #<NAMESPACE SWW 62301534>
   Rest arg (PROPERTY-LIST): (:NAME #<NAME SWW|INTERNET 62302753> :TIMESTAMP NIL)

(:METHOD NET:OBJECT :CHECK-VALIDITY):  (P.C. = 234)
   Arg 0 (SELF): #<INTERNET-NETWORK INTERNET 62303013>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NET:OBJECT -- 4. IV's, 1. FL's 105353050>
   Arg 2 (OPERATION): :CHECK-VALIDITY
   Arg 3 (RELATIVE-TO-NAMESPACE): #<NAMESPACE SWW 62301534>
   Arg 4 (FORCE-P): T

(:METHOD NET:OBJECT :CHECK-VALIDITY):  (P.C. = 40)
   Arg 0 (SELF): #<INTERNET-NETWORK INTERNET 62303013>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NET:OBJECT -- 4. IV's, 1. FL's 105353050>
   Arg 2 (OPERATION): :CHECK-VALIDITY
   Arg 3 (RELATIVE-TO-NAMESPACE): NIL
   Arg 4 (FORCE-P): T

(:PROPERTY SI:COM-SHOW-NAMESPACE-OBJECT SI:CP-FUNCTION):  (P.C. = 51)  (from B:>cjl>cp)
   Arg 0 (OBJECT-CLASS): :NETWORK
   Arg 1 (OBJECT-NAME): "internet"
   Arg 2 (NAMESPACE): #<NAMESPACE MIT 62300564>

SI:COM-SHOW-NAMESPACE-OBJECT:  (P.C. = 13)  (from B:>cjl>cp)
   Arg 0 (OBJECT-CLASS): :NETWORK
   Arg 1 (OBJECT-NAME): "internet"
   Arg 2 (NAMESPACE): #<NAMESPACE MIT 62300564>

SI:*EVAL:  (P.C. = 403)
   Arg 0 (FORM): (SI:COM-SHOW-NAMESPACE-OBJECT :NETWORK "internet" #<NAMESPACE MIT 62300564>)
   Local 0 (FORM): NIL
   --Defaulted args:--
   Arg 1 (ENV): NIL
   Arg 2 (HOOK): NIL

(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0):  (P.C. = 152)
   Arg 0 (.LEXICAL-ENVIRONMENT-POINTER.): #<DTP-LOCATIVE 500101>

TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)  (from SYS: PATCH; SYSTEM-269-48)
   Arg 0 (NEW-MODE): :BLAST
   Arg 1 (STREAM): #:TERMINAL-IO-SYN-STREAM
   Arg 2 (CONTINUATION): #<LEXICAL-CLOSURE (:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0) 500106>

SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
   Arg 0 (NAME): "Lisp Top Level"
   Arg 1 (ABORT-FUNCTION): NIL
   Arg 2 (READ-FUNCTION): NIL
   Arg 3 (EVAL-FUNCTION): NIL
   Arg 4 (PRINT-FUNCTION): NIL

SI:LISP-COMMAND-LOOP:  (P.C. = 67)
   Arg 0: #<LISP-LISTENER Lisp Listener 1 36641015 exposed>
   Rest arg: (:NAME "Lisp Top Level")

SI:LISP-TOP-LEVEL1:  (P.C. = 5)
   Arg 0 (STREAM): #<LISP-LISTENER Lisp Listener 1 36641015 exposed>

SI:LISP-TOP-LEVEL2:  (P.C. = 5)

SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
   Arg 0 (IGNORE): NIL
 1-Mar-85 12:50:55-EST,2510;000000000000
Received: from MIT-JIMI by MIT-OZ via Chaosnet; 1 Mar 85 12:50-EST
Date: Friday, 1 March 1985, 12:49-EST
From: Chris Lindblad <cjl at OZ>
Subject: Namespace lossage
To: BUG-LISPM at OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 18, on Lisp Machine Jimi Hendrix:

A lot of machines here are printing notifications every 5 secs...

257 Notifications, from 0 to 256:
12:45 Namespace server was unable to find NETWORK ARPANET|ARPANET in namespace ARPANET.
It will be removed from the namespace.
12:44 Namespace server was unable to find NETWORK INTERNET in namespace MIT.
It will be removed from the namespace.
12:44 Namespace server was unable to find NETWORK SCRC|INTERNET in namespace SCRC.
It will be removed from the namespace.
12:44 Namespace server was unable to find NETWORK SWW|INTERNET in namespace SWW.
It will be removed from the namespace.
12:44 Namespace server was unable to find NETWORK SCRC|INTERNET in namespace SCRC.
It will be removed from the namespace.
12:44 Namespace server was unable to find NETWORK INTERNET in namespace MIT.
It will be removed from the namespace.
12:44 Namespace server was unable to find NETWORK ARPANET|ARPANET in namespace ARPANET.
It will be removed from the namespace.
12:44 Namespace server was unable to find NETWORK INTERNET in namespace MIT.
It will be removed from the namespace.
12:44 Namespace server was unable to find NETWORK SCRC|INTERNET in namespace SCRC.
It will be removed from the namespace.
12:43 Namespace server was unable to find NETWORK SWW|INTERNET in namespace SWW.
It will be removed from the namespace.
12:43 Namespace server was unable to find NETWORK SCRC|INTERNET in namespace SCRC.
It will be removed from the namespace.
12:43 Namespace server was unable to find NETWORK INTERNET in namespace MIT.
It will be removed from the namespace.
12:43 Namespace server was unable to find NETWORK ARPANET|ARPANET in namespace ARPANET.
It will be removed from the namespace.
12:43 Namespace server was unable to find NETWORK INTERNET in namespace MIT.
It will be removed from the namespace.
12:43 Namespace server was unable to find NETWORK SCRC|INTERNET in namespace SCRC.
It will be removed from the namespace.
12:43 Namespace server was unable to find NETWORK SWW|INTERNET in namespace SWW.
It will be removed from the namespace.
12:43 Namespace server was unable to find NETWORK SCRC|INTERNET in namespace SCRC.
It will be removed from the namespace.
...

It goes on and on and on...
 1-Mar-85 18:41:32-EST,2671;000000000000
Received: from MIT-VAX by MIT-OZ via Chaosnet; 1 Mar 85 18:40-EST
Received: by mit-vax.Mit-chaos.Arpa (4.12/4.8) with CHAOS id AA26539; Fri, 1 Mar 85 18:36:06 est
Date: Friday, 1 March 1985, 18:39-EST
From: <DRM@MIT-LIVE-OAK>
Subject: Return of the Namespace blowout
To: BUG-LISPM@OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 22,
Tanglewood Version VII, on Project Tanglewood Cherry:

This happened during the boot of a Rel 5.2 world which has the latest
namespace patch loaded (the one that fixed the problems with SEW|HYDRA).

-- Dinarte R. Morais

>>Error: The object (:SITE :AI #<NAMESPACE MIT 61762161>) is not a valid function
While in the function (:SITE :AI #<NAMESPACE MIT 61762161>)  SI:PRINTER-SPOOLER-HOSTS  SI:GET-HARDCOPY-DEVICE-ALIST

(:SITE :AI #<NAMESPACE MIT 61762161>):
   Arg 0: :LOCAL-NAMESPACE

SI:PRINTER-SPOOLER-HOSTS:  (P.C. = 26)
   Arg 0 (PRINTER): #<PRINTER BUFFY 35006413>

SI:GET-HARDCOPY-DEVICE-ALIST:  (P.C. = 66)

SI:SITE-HARDCOPY-INITIALIZE:  (P.C. = 12)

SI:*EVAL:  (P.C. = 370)
   Arg 0 (FORM): (SI:SITE-HARDCOPY-INITIALIZE)

INITIALIZATIONS:  (P.C. = 42)
   Arg 0 (LIST-NAME): SI:SITE-INITIALIZATION-LIST
   Arg 1 (REDO-FLAG): T
   --Defaulted args:--
   Arg 2 (FLAG): T

NETI:RUN-SITE-INITIALIZATION-LIST:  (P.C. = 41)

(:METHOD NET:OBJECT :DEFAULT :CHANGE-OF-ATTRIBUTES):  (P.C. = 14)
   Arg 0 (SELF): #<OBJECT SITE MIT 61756511>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NET:OBJECT -- 3. IV's, 1. FL's 44033467>
   Arg 2 (OPERATION): :CHANGE-OF-ATTRIBUTES

Rest of stack:
NETI:ADD-OR-CHANGE-OBJECT:  (P.C. = 566)
NETI:QUERY-NAMESPACE-SERVER:  (P.C. = 434)
(:METHOD NET:OBJECT :CHECK-VALIDITY):  (P.C. = 227)
(:METHOD NET:OBJECT :CHECK-VALIDITY):  (P.C. = 34)
NETI:FIND-OBJECT-NAMED-IN-NAMESPACE:  (P.C. = 45)
NETI:CONVERT-TOKENS:  (P.C. = 154)
NETI:RECORD-INTO-PROPERTY-LIST-1:  (P.C. = 54)
NETI:RECORD-INTO-PROPERTY-LIST:  (P.C. = 75)
NETI:QUERY-NAMESPACE-SERVER:  (P.C. = 427)
(:METHOD NET:OBJECT :CHECK-VALIDITY):  (P.C. = 227)
NETI:FIND-OBJECT-NAMED-IN-NAMESPACE:  (P.C. = 45)
NETI:CONVERT-TOKENS:  (P.C. = 154)
(:INTERNAL (:PROPERTY :ELEMENT NETI:PRIMITIVE-TYPE) 0):  (P.C. = 5)
(:PROPERTY :ELEMENT NETI:PRIMITIVE-TYPE):  (P.C. = 12)
NETI:CONVERT-TOKENS:  (P.C. = 15)
NETI:RECORD-INTO-PROPERTY-LIST-1:  (P.C. = 54)
NETI:RECORD-INTO-PROPERTY-LIST:  (P.C. = 75)
NETI:QUERY-NAMESPACE-SERVER:  (P.C. = 427)
NETI:GET-INCREMENTAL-UPDATE-FROM-NETWORK:  (P.C. = 421)
(:METHOD NETI:NAMESPACE :GET-LATEST-TIMESTAMP):  (P.C. = 21)
NETI:INITIALIZE-NAMESPACES-AND-NETWORK:  (P.C. = 155)
LISP-REINITIALIZE:  (P.C. = 443)
SI:LISP-TOP-LEVEL:  (P.C. = 3)
 2-Mar-85 14:39:14-EST,713;000000000000
Received: from MIT-JIMI by MIT-OZ via Chaosnet; 2 Mar 85 14:39-EST
Date: Saturday, 2 March 1985, 14:38-EST
From: David Vinayak Wallace <Gumby at MC>
Subject: bogus headers generated somewhere
To: BUG-LISPM at OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 18, on Lisp Machine Jimi Hendrix:

I sent a message with the following header.  When I sent it I addressed
it to "Hal"; cc "f.julie@ee, gumby".  I set zwei:*mail-network-host* to
net:*local-host* to have direct delivery, and my home host is MC.

    Date: Fri, 1 Mar 85 18:05 EST
    From: David Vinayak Wallace <Gumby@MC.ARPA>
    Subject: 6.001 suggestion
    To: hal@MC.ARPA
    Cc: f.julie@EECS@RIVERSIDE.ARPA, Gumby@MC.ARPA
 2-Mar-85 16:49:59-EST,1108;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 2 Mar 85 16:49-EST
Date: Saturday, 2 March 1985, 16:33-EST
From: CJL at OZ
Sender: bug-lispm at OZ
Subject: Usage of neti:*host-protocol-desirabilities* seems awkward
To: BUG-LISPM at OZ
Message-ID: <850302163355.1.FILE-SERVER@REAGAN.MIT>

In Symbolics 3600 Release 6.0 Beta IIc, microcode TMC5-MIC 315,
on Lisp Machine Ronald Reagan:

Given that host objects return by default a protocol desirability of 1,
for any protocol, it seems that one can only decrease the desirability
of a particular host by adding an entry to the host protocol
desirabilites list. What if one wanted to increase the desirability of a
particular host? As far as I can tell, he/she has to decrease the
desirability of every other host, or make that particular hosts's
desirability greater than 1. I assume it is not advised to make a hosts
desirability greater than one, so that leaves having to mention every
other host that handles that particular protocol.

I suggest making the default host protocol desirability to be less than
1, perhaps .9 or even .5. 

 2-Mar-85 17:54:36-EST,1521;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 2 Mar 85 17:54-EST
Received: from SCRC-PEACE by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 188928; Sat 2-Mar-85 17:55:58-EST
Date: Sat, 2 Mar 85 17:55 EST
From: Charles Hornig <Hornig at SCRC-STONY-BROOK>
Subject: bogus headers generated somewhere
To: David Vinayak Wallace <Gumby at MIT-MC>, BUG-LISPM at OZ
In-Reply-To: The message of 2 Mar 85 14:38-EST from David Vinayak Wallace <Gumby at MIT-MC>
Message-ID: <850302175553.9.HORNIG@PEACE.SCRC.Symbolics.COM>

    Date: Saturday, 2 March 1985, 14:38-EST
    From: David Vinayak Wallace <Gumby at MC>

    In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 18, on Lisp Machine Jimi Hendrix:

    I sent a message with the following header.  When I sent it I addressed
    it to "Hal"; cc "f.julie@ee, gumby".  I set zwei:*mail-network-host* to
    net:*local-host* to have direct delivery, and my home host is MC.

	Date: Fri, 1 Mar 85 18:05 EST
	From: David Vinayak Wallace <Gumby@MC.ARPA>
	Subject: 6.001 suggestion
	To: hal@MC.ARPA
	Cc: f.julie@EECS@RIVERSIDE.ARPA, Gumby@MC.ARPA

This would have been a copy sent to MC.  It knows that MC in on the
ARPANET, so it tries to put a legal RFC-733 header on it.  Since EECS
isn't on the ARPANET, it can't say f.julie@eecs.  So it picks a
hypothetical relay host that is on both the ARPANET and the Chaos net.
Due to a bug, it does not restrict its choice to the local site.

In release 6, you will get f.julie%eecs@MIT-MC.ARPA.
 3-Mar-85 01:27:24-EST,1048;000000000000
Received: from MIT-ROBOT-3 by MIT-OZ via Chaosnet; 3 Mar 85 01:27-EST
Date: Sunday, 3 March 1985, 01:26-EST
From: mark <g.mac at MIT-EECS>
Subject: namespace updates
To: BUG-LISPM at OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 18, on Lisp Machine Robot-3:

  When I tried a dired of mit-live-oak:> and when I have no detached
file job and try to send an illustration (inside Illustrate) to the
dover, the screen is constantly barraged by shit like "Namespace server
was unable to find MIT INTERNET|INTERNET" or "...MIT ARPANET|ARPANET" or
something else the continually fucked-up namespace server is losing on.

  Whatever BOZO designed the namespace server without the slightest bit
of realistic testing should have this message forwarded to them.  And if
(s)he says, "It's not a bug, it's a feature!", this phrase should be
tape recorded.  This is so it can be continuously played back over
his/her screeches as (s)he is administered a white-hot iron enema.  I
believe the phrase is "negative re-inforcement".

 3-Mar-85 10:31:09-EST,2127;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 3 Mar 85 10:31-EST
Received: from SCRC-PEACE by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 189132; Sun 3-Mar-85 10:32:46-EST
Date: Sun, 3 Mar 85 10:32 EST
From: Charles Hornig <Hornig at SCRC-STONY-BROOK>
Subject: namespace updates
To: mark <g.mac at MIT-EECS>, BUG-LISPM at OZ
In-Reply-To: The message of 3 Mar 85 01:26-EST from mark <g.mac at MIT-EECS>
Message-ID: <850303103233.5.HORNIG@PEACE.SCRC.Symbolics.COM>

    Date: Sunday, 3 March 1985, 01:26-EST
    From: mark <g.mac at MIT-EECS>

    In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 18, on Lisp Machine Robot-3:

      When I tried a dired of mit-live-oak:> and when I have no detached
    file job and try to send an illustration (inside Illustrate) to the
    dover, the screen is constantly barraged by shit like "Namespace server
    was unable to find MIT INTERNET|INTERNET" or "...MIT ARPANET|ARPANET" or
    something else the continually fucked-up namespace server is losing on.

      Whatever BOZO designed the namespace server without the slightest bit
    of realistic testing should have this message forwarded to them.  And if
    (s)he says, "It's not a bug, it's a feature!", this phrase should be
    tape recorded.  This is so it can be continuously played back over
    his/her screeches as (s)he is administered a white-hot iron enema.  I
    believe the phrase is "negative re-inforcement".

What is happening to you is a real bug that will be (has been) fixed in
release 6.0.  An inconsistency in MIT's database somewhere has triggered
it on your machine.  I can't track it down now because I can't get
through to MIT's namespsace servers from SCRC right now.

The namespace system in release 5 is in an "unfortunate" (substitute
your own word) state.  It is extremely delicate, and tends to lose it
completely when fed even slightly inconsistent information.  We ended up
mostly reimplementing it in release 6.  You should see a significant
improvement when this is distributed at MIT.  (It already is running on
the namespace servers.)
 3-Mar-85 10:42:11-EST,743;000000000000
Received: from MIT-ROBOT-3 by MIT-OZ via Chaosnet; 3 Mar 85 10:42-EST
Date: Sunday, 3 March 1985, 10:43-EST
From: mark <g.mac at MIT-EECS>
Subject: namespace updates
To: Hornig at SCRC-STONY-BROOK, g.mac at MIT-EECS, BUG-LISPM at OZ
In-reply-to: <850303103233.5.HORNIG@PEACE.SCRC.Symbolics.COM>


  Thank you very much.  I should apologize for my over-zealousness and
excessive anger in sending the bug-report.  I'm not sure who (or what
group) wrote the namespace software, but I get the impression you're
just trying to fix someone else's bugs, and certainly don't need to hear
whining (and perhaps offensive) complaints from someone who has no
conception of the complexity/difficulty of fixing the namespaces.

Mark McEntee
 4-Mar-85 00:21:05-EST,3650;000000000000
Received: from MIT-ROBOT-1 by MIT-OZ via Chaosnet; 4 Mar 85 00:21-EST
Date: Monday, 4 March 1985, 00:19-EST
From: Christopher Fry <cfry at OZ>
Subject: mit lacks doc examiner directory?
To: BUG-LISPM at OZ
Message-ID: <850304001926.1.CFRY@ROBOT-1.MIT>

In Symbolics 3600 Release 6.0 Beta IIc, microcode TMC5-MIC 315, FEP 18, on Lisp Machine Robot 1:



>>Error: The logical pathname SYS: DOC; PATCH; is not defined
While in the function (:METHOD FS:LOGICAL-HOST :TRANSLATE-RAW)  (:METHOD FS:LOGICAL-HOST :TRANSLATE)  (:METHOD FS:LOGICAL-PATHNAME :TRANSLATED-PATHNAME)

(:METHOD FS:LOGICAL-HOST :TRANSLATE-RAW):  (P.C. = 36)
   Arg 0 (SELF): #<LOGICAL-HOST SYS>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:LOGICAL-HOST -- 9. IV's, 2. FL's 24707356>
   Arg 2 (OPERATION): :TRANSLATE-RAW
   Arg 3 (PATHNAME): #<LOGICAL-PATHNAME "SYS: DOC; PATCH; NDS-10-10.SAB.1">

(:METHOD FS:LOGICAL-HOST :TRANSLATE):  (P.C. = 5)
   Arg 0 (SELF): #<LOGICAL-HOST SYS>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:LOGICAL-HOST -- 9. IV's, 2. FL's 24707356>
   Arg 2 (OPERATION): :TRANSLATE
   Arg 3 (PATHNAME): #<LOGICAL-PATHNAME "SYS: DOC; PATCH; NDS-10-10.SAB.1">

(:METHOD FS:LOGICAL-PATHNAME :TRANSLATED-PATHNAME):  (P.C. = 67)
   Arg 0 (SELF): #<LOGICAL-PATHNAME "SYS: DOC; PATCH; NDS-10-10.SAB.1">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:LOGICAL-PATHNAME -- 8. IV's, 3. FL's 24707474>
   Arg 2 (OPERATION): :TRANSLATED-PATHNAME

(:DEFUN-METHOD FS:LOGICAL-PATHNAME-PASS-ON):  (P.C. = 5)
   Arg 0 (SELF): #<LOGICAL-PATHNAME "SYS: DOC; PATCH; NDS-10-10.SAB.1">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:LOGICAL-PATHNAME -- 8. IV's, 3. FL's 24707474>
   Arg 2 (MESSAGE): :OPEN
   Rest arg (REST): (#<LOGICAL-PATHNAME "SYS: DOC; PATCH; NDS-10-10.SAB.1"> :DIRECTION :INPUT :BYTE-SIZE 8 :CHARACTERS NIL)

(:METHOD FS:LOGICAL-PATHNAME :OPEN):  (P.C. = 10)
   Arg 0 (SELF): #<LOGICAL-PATHNAME "SYS: DOC; PATCH; NDS-10-10.SAB.1">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:LOGICAL-PATHNAME -- 8. IV's, 3. FL's 24707474>
   Arg 2 (OPERATION): :OPEN
   Rest arg (.ARGS.): (#<LOGICAL-PATHNAME "SYS: DOC; PATCH; NDS-10-10.SAB.1"> :DIRECTION :INPUT :BYTE-SIZE 8 :CHARACTERS NIL)

FS:COMMON-LISP-OPEN:  (P.C. = 450)
   Arg 0 (PATHNAME): #<LOGICAL-PATHNAME "SYS: DOC; PATCH; NDS-10-10.SAB.1">
   Arg 1 (KEYWORD-ARGS): (:CHARACTERS NIL :BYTE-SIZE 8)

OPEN:  (P.C. = 257)
   Arg 0 (PATHNAME): #<LOGICAL-PATHNAME "SYS: DOC; PATCH; NDS-10-10.SAB.1">
   Rest arg (KEYWORD-ARGS): (:CHARACTERS NIL :BYTE-SIZE 8)

SAGE:OPEN-SAGE-FILE:  (P.C. = 155)
   Arg 0 (PATHNAME): #<LOGICAL-PATHNAME "SYS: DOC; PATCH; NDS-10-10.SAB.1">

Rest of stack:
(:METHOD SAGE:BASIC-DOC-RECORD :INIT):  (P.C. = 37)
INSTANTIATE-FLAVOR:  (P.C. = 445)
MAKE-INSTANCE:  (P.C. = 6)
SAGE:INSTALL-RECORD:  (P.C. = 34)
SAGE:RECORD-FOR-TOPIC&TYPE:  (P.C. = 224)<<Error printing function name>>
(:METHOD SAGE:SOURCE-OF-FORMATTED-SAGE-RECORD-LINES :INIT):  (P.C. = 24)
INSTANTIATE-FLAVOR:  (P.C. = 445)
MAKE-INSTANCE:  (P.C. = 6)
SAGE:FORMATTED-SAGE-RECORD-LINE-SOURCE:  (P.C. = 11)
(:METHOD SAGE:DEX-ITEM :PREPARE-DOCUMENTATION):  (P.C. = 6)
(:METHOD SAGE:DEX-VIEWING-CONTEXT :DISPLAY-DEX-ITEM):  (P.C. = 12)
(:METHOD SAGE:DEX-VIEWING-CONTEXT :ADD-ITEM-TO-CONTEXT):  (P.C. = 20)
(:METHOD SAGE:DEX :COM-DEX-SELF-DOCUMENTATION):  (P.C. = 30)
(:METHOD SAGE:DEX :COMMAND-MESSAGE):  (P.C. = 25)
(:METHOD SAGE:DEX :COMMAND-LOOP):  (P.C. = 32)<<Error printing function name>>
(:METHOD SAGE:DEX :TOPLEVEL):  (P.C. = 255)<<Error printing function name>>
SAGE:DEX-TOPLEVEL:  (P.C. = 4)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
 4-Mar-85 03:55:30-EST,3616;000000000000
Received: from MIT-ROBOT-1 by MIT-OZ via Chaosnet; 4 Mar 85 03:55-EST
Date: Monday, 4 March 1985, 03:53-EST
From: Christopher Fry <cfry at OZ>
Subject: sage sourcefile unknown
To: BUG-LISPM at OZ
Message-ID: <850304035355.4.CFRY@ROBOT-1.MIT>

In Symbolics 3600 Release 6.0 Beta IIc, microcode TMC5-MIC 315, FEP 18, on Lisp Machine Robot 1:
Warm booted from: Select.

While meta . 'ing  NOTE, I got this error:


>>Error: The logical pathname SYS: SAGE; PATCH; is not defined
While in the function (:METHOD FS:LOGICAL-HOST :TRANSLATE-RAW)  (:METHOD FS:LOGICAL-HOST :TRANSLATE)  (:METHOD FS:LOGICAL-PATHNAME :TRANSLATED-PATHNAME)

(:METHOD FS:LOGICAL-HOST :TRANSLATE-RAW):  (P.C. = 36)
   Arg 0 (SELF): #<LOGICAL-HOST SYS>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:LOGICAL-HOST -- 9. IV's, 2. FL's 24707356>
   Arg 2 (OPERATION): :TRANSLATE-RAW
   Arg 3 (PATHNAME): #<LOGICAL-PATHNAME "SYS: SAGE; PATCH; BASIC-SAGE-13-22">

(:METHOD FS:LOGICAL-HOST :TRANSLATE):  (P.C. = 5)
   Arg 0 (SELF): #<LOGICAL-HOST SYS>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:LOGICAL-HOST -- 9. IV's, 2. FL's 24707356>
   Arg 2 (OPERATION): :TRANSLATE
   Arg 3 (PATHNAME): #<LOGICAL-PATHNAME "SYS: SAGE; PATCH; BASIC-SAGE-13-22">

(:METHOD FS:LOGICAL-PATHNAME :TRANSLATED-PATHNAME):  (P.C. = 67)
   Arg 0 (SELF): #<LOGICAL-PATHNAME "SYS: SAGE; PATCH; BASIC-SAGE-13-22">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:LOGICAL-PATHNAME -- 8. IV's, 3. FL's 24707474>
   Arg 2 (OPERATION): :TRANSLATED-PATHNAME

(:DEFUN-METHOD FS:LOGICAL-PATHNAME-PASS-ON):  (P.C. = 5)
   Arg 0 (SELF): #<LOGICAL-PATHNAME "SYS: SAGE; PATCH; BASIC-SAGE-13-22">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:LOGICAL-PATHNAME -- 8. IV's, 3. FL's 24707474>
   Arg 2 (MESSAGE): :GET
   Rest arg (REST): (:PATCH-FILE)

(:METHOD FS:LOGICAL-PATHNAME :GET):  (P.C. = 10)
   Arg 0 (SELF): #<LOGICAL-PATHNAME "SYS: SAGE; PATCH; BASIC-SAGE-13-22">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:LOGICAL-PATHNAME -- 8. IV's, 3. FL's 24707474>
   Arg 2 (OPERATION): :GET
   Rest arg (.ARGS.): NIL
   Local 3 (.ARGS.): (:PATCH-FILE)

(:METHOD ZWEI:DEFINITIONS-EDITING-BUFFER :ADD-NODES-FOR-FUNCTION-SPEC):  (P.C. = 105)
   Arg 0 (SELF): #<DEFINITIONS-EDITING-BUFFER "*Definitions-1*" 32000223>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:DEFINITIONS-EDITING-BUFFER -- 4. IV's, 3. FL's 50066222>
   Arg 2 (OPERATION): :ADD-NODES-FOR-FUNCTION-SPEC
   Arg 3 (FUNCTION-SPEC): SAGE:NOTE
   Arg 4 (ALLOWED-TYPES): NIL

(:METHOD ZWEI:DEFINITIONS-EDITING-BUFFER :REVERT):  (P.C. = 14)
   Arg 0 (SELF): #<DEFINITIONS-EDITING-BUFFER "*Definitions-1*" 32000223>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:DEFINITIONS-EDITING-BUFFER -- 4. IV's, 3. FL's 50066222>
   Arg 2 (OPERATION): :REVERT

(:METHOD ZWEI:DEFINITIONS-EDITING-BUFFER :COMBINED :REVERT):  (P.C. = 17)
   Arg 0 (SELF): #<DEFINITIONS-EDITING-BUFFER "*Definitions-1*" 32000223>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:DEFINITIONS-EDITING-BUFFER -- 4. IV's, 3. FL's 50066222>
   Arg 2 (.OPERATION.): :REVERT
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

Rest of stack:
(:METHOD ZWEI:ZMACS-EDITOR :FIND-SPECIAL-BUFFER):  (P.C. = 45)
(:METHOD ZWEI:ZMACS-EDITOR :SETUP-FUNCTION-SPECS-TO-EDIT):  (P.C. = 24)
ZWEI:COM-EDIT-DEFINITION:  (P.C. = 14)
ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 233)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 60)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 51)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
 4-Mar-85 11:35:49-EST,936;000000000000
Received: by MIT-OZ via Chaosnet; 4 Mar 85 11:35-EST
Received: from SCRC-PEACE by SCRC-VALLECITO via CHAOS with CHAOS-MAIL id 542; Mon 4-Mar-85 11:35:17-EST
Date: Mon, 4 Mar 85 11:33 EST
From: Charles Hornig <Hornig at SCRC-STONY-BROOK>
Subject: mit lacks doc examiner directory?
To: Christopher Fry <cfry at OZ>, BUG-LISPM at OZ
In-Reply-To: <850304001926.1.CFRY@ROBOT-1.MIT>
Message-ID: <850304113307.7.HORNIG@PEACE.SCRC.Symbolics.COM>

    Date: Monday, 4 March 1985, 00:19-EST
    From: Christopher Fry <cfry at OZ>

    In Symbolics 3600 Release 6.0 Beta IIc, microcode TMC5-MIC 315, FEP 18, on Lisp Machine Robot 1:

    >>Error: The logical pathname SYS: DOC; PATCH; is not defined
    While in the function (:METHOD FS:LOGICAL-HOST :TRANSLATE-RAW)  (:METHOD FS:LOGICAL-HOST :TRANSLATE)  (:METHOD FS:LOGICAL-PATHNAME :TRANSLATED-PATHNAME)

Only enough of release 6 to support the namespace servers is at MIT.
 4-Mar-85 15:45:09-EST,1143;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 4 Mar 85 15:44-EST
Received: from MIT-APIARY-5 by MIT-OZ via Chaosnet; 4 Mar 85 14:48-EST
Date: Mon, 4 Mar 85 14:46 EST
From: Thomas Reinhardt <Tomr@OZ.MIT>
Subject: Compiler Bug...
To: BUG-LISPM@MIT-MC.ARPA
cc: TomR@MIT-XX.ARPA, TomR@APIARY-6.MIT
Message-ID: <850304144645.3.TOMR@APIARY-5.MIT>

In Symbolics 3600 Release 6.0 Beta IIc, microcode TMC5-MIC 315, FEP 18, on Lisp Machine Apiary-5:

Compiling Defsubsts ... as in

(DEFSUBST FAST-MEMQ (KEY LST)
  "Just return T if key is a top-level atomic element in list."
  (DOLIST (ELEMENT LST)
    (AND (EQ ELEMENT KEY) (RETURN T))))

(DEFVAR BINARY-OPERATORS             
        '(= EQ < <=  MAX MIN > >=  \\ \ ^ + - *)
  "List of existing Act3 Binary Operators, used by the parsing routines.
   I hope to phase these things out.")

(DEFUN FIND-FIRST-OPERATOR-SPECIFIED (SOURCE)
  (LOCAL-DECLARE ((SPECIAL BINARY-OPERATORS))
    (DOLIST (TOKEN SOURCE)
      (AND (FAST-MEMQ TOKEN BINARY-OPERATORS) (RETURN TOKEN)))))

will invariably return NIL.  Changing the Defsubst to a 
Defun does the correct thing.

TOMR
 4-Mar-85 15:58:12-EST,1377;000000000000
Received: from MIT-JIMI by MIT-OZ via Chaosnet; 4 Mar 85 15:58-EST
Date: Monday, 4 March 1985, 15:56-EST
From: David Vinayak Wallace <Gumby at MC>
Subject: bogus headers generated somewhere
To: Charles Hornig <Hornig at STONY-BROOK>
Cc: BUG-LISPM at OZ
In-reply-to: <850302175553.9.HORNIG@PEACE.SCRC.Symbolics.COM>

    Date: Sat, 2 Mar 85 17:55 EST
    From: Charles Hornig <Hornig at SCRC-STONY-BROOK>

    ... message from me....

    This would have been a copy sent to MC.  It knows that MC in on the
    ARPANET, so it tries to put a legal RFC-733 header on it.  Since EECS
    isn't on the ARPANET, it can't say f.julie@eecs.  So it picks a
    hypothetical relay host that is on both the ARPANET and the Chaos net.
    Due to a bug, it does not restrict its choice to the local site.

    In release 6, you will get f.julie%eecs@MIT-MC.ARPA.

But we don't yet have official beta-6's yet, and in the meantime I'm
sending invalid and unreplyable headers over the network!

At least, RIVERSIDE isn't in the host table as being on the arpanet,
either at MIT or at NIC.

Also, will it restrict the host chosen by site or by namespace?  MC is
in the MIT namespace but not in my site (AI).

Finally, the IN-REPLY-TO that ZMAIL generated for this message
(In-reply-to: <850302175553.9.HORNIG@PEACE.SCRC.Symbolics.COM>) is
invalid too.

david
 4-Mar-85 17:40:34-EST,2018;000000000000
Received: from MIT-VAX by MIT-OZ via Chaosnet; 4 Mar 85 17:40-EST
Received: by mit-vax.Mit-chaos.Arpa (4.12/4.8) with CHAOS id AA28944; Mon, 4 Mar 85 17:27:27 est
Date: Monday, 4 March 1985, 17:31-EST
From: Cory Myers <cory@MIT-BUGS-BUNNY>
Subject: Scheduler Oops
To: BUG-LISPM@OZ
Message-Id: <850304173137.1.CORY@DAFFY-DUCK.MIT>

In Symbolics 3670 Release 6.0 Beta IIc, microcode TMC5-IO4-FPA-MIC 315,
FEP 22, on Lisp Machine Daffy Duck:

I walked away from my Lisp Machine for 5 minutes.  I left nothing
running but I had an open supdup connection as the chosen window.  When
I returned the process scheduler had entered the cold load stream and I
had to arrest the supdup connection and restart the scheduler.

BTW, this left lots of extra cursors floating around on my screen.  How
do I get rid of them?

>>Trap: The word #<DTP-HEADER-I 1224030002> was read from location 142451041 (in *FLAVOR-AREA*).
While in the function (:METHOD CHAOS:BASIC-INPUT-STREAM :LISTEN)  (:METHOD CHAOS:CHARACTER-STREAM :COMBINED :LISTEN)  (:METHOD TELNET:FILTER-STREAM :LISTEN)

(:METHOD CHAOS:BASIC-INPUT-STREAM :LISTEN):  (P.C. = 1)
   Arg 0 (SELF): #<CHARACTER-STREAM 73512022>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor CHAOS:BASIC-INPUT-STREAM -- 2. IV's, 0. FL's 142451041>
   Arg 2 (OPERATION): :LISTEN

(:METHOD CHAOS:CHARACTER-STREAM :COMBINED :LISTEN):  (P.C. = 24)
   Arg 0 (SELF): #<CHARACTER-STREAM 73512022>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor CHAOS:CHARACTER-STREAM -- 3. IV's, 8. FL's 142451104>
   Arg 2 (.OPERATION.): :LISTEN
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

(:METHOD TELNET:FILTER-STREAM :LISTEN):  (P.C. = 6)
   Arg 0 (SELF): #<SUPDUP-FILTER 73512100>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TELNET:FILTER-STREAM -- 3. IV's, 0. FL's 106257774>
   Arg 2 (OPERATION): :LISTEN

SEND:  (P.C. = 6)
   Arg 0 (OBJECT): #<SUPDUP-FILTER 73512100>
   Arg 1 (MESSAGE-NAME): :LISTEN
   Rest arg (ARGUMENTS): NIL

SI:PROCESS-SCHEDULER:  (P.C. = 222)
 4-Mar-85 18:19:52-EST,1440;000000000000
Mail-From: CJL created at  4-Mar-85 18:19:26
Date: Mon, 4 Mar 1985  18:19 EST
Message-ID: <CJL.12092433189.BABYL@MIT-OZ>
From: Chris Lindblad <CJL@MIT-OZ>
To:   bug-lispm@MIT-OZ
Subject: lispms could answer whois requests better.

I have set in my namespace object that my home host is reagan, so when I
log into my lisp machine, it loads my init files from there. I expected,
therefore that like every other server machine (not lispms, but vms,
top-20, unix) that I have an account on, if you whois me on the machine,
it shows stuff describing me, like my office number, and who my
supervisor is. No chance. If you whois me on reagan, It just shows who's
logged in on the machine. What's the use of me taking the time to keep
the information in my namespace entry up to date if whois doesn't even
display it?

I do not keep my mail on reagan, but I now assume that even if I did, it
would answer whois in the same way. This leads to the strange
circumstance that someone could get mail from foo@bar, and if bar is a
lispm, if he tried to whois foo@bar, he would not find any
information about foo at all!

@whois cjl@oz
[MIT-OZ]
CJL      AS Chris Lindblad        FINGER     .127 MIT-NE43-7B-HUB (Chaos)
   [CJL@MIT-OZ] Hacking for GJS and TK
   Work NE43-733; X3-8828

@whois cjl@reagan
[MIT-REAGAN]
File-Server   The File Server        REAGAN   5     7th (Rel 6.0 Beta IIc 1024K 3600)
   [bug-lispm@OZ]

 4-Mar-85 19:46:40-EST,4256;000000000000
Received: from MIT-BUDDY by MIT-OZ via Chaosnet; 4 Mar 85 19:46-EST
Date: Monday, 4 March 1985, 19:44-EST
From: David Chapman <Zvona at OZ>
Subject: namespace lossage
To: BUG-LISPM at OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10, Color 1.0, FEP 24, on Lisp Machine Buddy Holly:

c-X c-F MC:CENT;BBOARD LUSER

There are at least two bugs here.  First is that this is asking
Riverside about the Arpanet when it should be asking Reagan (which is up
and accepting namespace requests).  Second, it's random to go asking
about the arpanet; it shouldn't have to think about that, since MC is on
the same local Chaosnet I'm on.

Maybe this has something to do with the fact that for the last several
days all the machines around here when booted get 1729 notifications to
the effect that the arpanet has been mentioned but not found.

By the way, I think this "mentioned but not found" business sucks.  I've
only a sketchy idea what the notifications mean.  The must utterly
confuse naive users.  Almost always the notifications concern machines
I've never heard of and don't care about.  A much better user interface
would be to tell me how I'm losing when I try to refer to a
mentioned-but-not found object.  Don't you think?

>>Break: 
While in the function PROCESS-WAIT  CHAOS:WAIT  CHAOS:WAIT-FOR-CONNECT

NETI:INVOKE-SERVICE-ACCESS-PATH-WITH-CACHED-UNAVAILABILITY:  (P.C. = 43)
   Arg 0 (SERVICE-ACCESS-PATH): #<SERVICE-ACCESS-PATH NAMESPACE (NAMESPACE) -- SCRC-RIVERSIDE on CHAOS 25650704>
   Arg 1 (TIMEOUT): 43120
   Arg 2 (SERVICE-ARGS): (#<NAMESPACE ARPANET 10670417>)

NETI:OPEN-NAMESPACE-SERVER:  (P.C. = 363)  (from OZ:OZ:<CJL>QNS)
   Arg 0 (NAMESPACE): #<NAMESPACE ARPANET 10670417>
   --Defaulted args:--
   Arg 1 (FOR-UPDATE): NIL

NETI:GET-INCREMENTAL-UPDATE-FROM-NETWORK:  (P.C. = 51)
   Arg 0 (NAMESPACE): #<NAMESPACE ARPANET 10670417>
   Arg 1 (STARTING-TIMESTAMP): 231

(:METHOD NETI:NAMESPACE :GET-LATEST-TIMESTAMP):  (P.C. = 21)
   Arg 0 (SELF): #<NAMESPACE ARPANET 10670417>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NETI:NAMESPACE -- 8. IV's, 0. FL's 52475062>
   Arg 2 (OPERATION): :GET-LATEST-TIMESTAMP

(:METHOD NETI:NAMESPACE :VALIDATION-TIMESTAMP):  (P.C. = 20)
   Arg 0 (SELF): #<NAMESPACE ARPANET 10670417>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NETI:NAMESPACE -- 8. IV's, 0. FL's 52475062>
   Arg 2 (OPERATION): :VALIDATION-TIMESTAMP

(:METHOD NET:OBJECT :CHECK-VALIDITY):  (P.C. = 102)
   Arg 0 (SELF): #<ITS-HOST MC 10676436>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NET:OBJECT -- 3. IV's, 1. FL's 52563254>
   Arg 2 (OPERATION): :CHECK-VALIDITY
   Arg 3 (RELATIVE-TO-NAMESPACE): #<NAMESPACE ARPANET 10670417>
   Arg 4 (FORCE-P): NIL

(:METHOD NET:OBJECT :CHECK-VALIDITY):  (P.C. = 34)
   Arg 0 (SELF): #<ITS-HOST MC 10676436>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NET:OBJECT -- 3. IV's, 1. FL's 52563254>
   Arg 2 (OPERATION): :CHECK-VALIDITY
   --Defaulted args:--
   Arg 3 (RELATIVE-TO-NAMESPACE): NIL
   Arg 4 (FORCE-P): NIL

(:METHOD NET:OBJECT :BEFORE :GET):  (P.C. = 5)
   Arg 0 (SELF): #<ITS-HOST MC 10676436>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NET:OBJECT -- 3. IV's, 1. FL's 52563254>
   Arg 2 (OPERATION): :GET
   Rest arg (IGNORE): (:SERVICE)

Rest of stack:
(:METHOD NET:OBJECT :COMBINED :GET):  (P.C. = 7)
(:METHOD NET:HOST :NETWORK-SERVICES):  (P.C. = 5)
NET:FIND-PATHS-TO-SERVICE-ON-HOST:  (P.C. = 142)
NET:INVOKE-SERVICE-ON-HOST:  (P.C. = 50)
(:METHOD FS:ACTIVE-PATHNAME-HOST :FILE-ACCESS-PATH):  (P.C. = 37)
(:METHOD FS:ACTIVE-PATHNAME-MIXIN :OPEN):  (P.C. = 7)
FS:COMMON-LISP-OPEN:  (P.C. = 445)
OPEN:  (P.C. = 255)
(:METHOD ZWEI:FILE-BUFFER-MIXIN :REVERT):  (P.C. = 57)
ZWEI:FIND-FILE:  (P.C. = 125)
ZWEI:COM-FIND-FILE:  (P.C. = 13)
ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
ZWEI:MAKE-EXTENDED-COMMAND-INTERNAL:  (P.C. = 77)
SYS:CALL-FUNNY-FUNCTION:  (P.C. = 101)
Closure of ZWEI:MAKE-EXTENDED-COMMAND-INTERNAL:
ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 214)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 41)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
 5-Mar-85 00:22:44-EST,499;000000000000
Received: from MIT-JIMI by MIT-OZ via Chaosnet; 5 Mar 85 00:22-EST
Date: Tuesday, 5 March 1985, 00:20-EST
From:  <GUMBY at MC>
Subject: naespace blues
To: BUG-LISPM at OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 18, on Lisp Machine Jimi Hendrix:

There ought to be a way to tell the machine, "Look, I know your
namespace information might be out of date, but why don't you just
believe when you got at login time and don't try to be any more
up-to-date than that"

david
 5-Mar-85 02:12:30-EST,4564;000000000000
Received: from MIT-SID by MIT-OZ via Chaosnet; 5 Mar 85 02:12-EST
Date: Tuesday, 5 March 1985, 02:11-EST
From: Christopher Fry <cfry at OZ>
Subject: unix pathname version :unspecific
To: BUG-LISPM at OZ
Message-ID: <850305021102.2.CFRY@SID.MIT>

In Symbolics 3670 Release 6.0 Beta IIc, microcode TMC5-IO4-MIC 315,
FEP 22, on Lisp Machine Sid Vicious:

This error occurred after I evaled:
(make-system 'fb :compile)

fb is a logical host whose physical host is mit-prep [unix 4.2].
The physical extensions of my files are .bin and .lisp [as opposed to .bn and .l].
(make-system 'fb) works.
Pathname translation has never been robust for unix.
I would guess this bug has something to do with unix not
having any version numbers.

>>Error: :UNSPECIFIC is an invalid version for FB (a LOGICAL host).
While in the function (:METHOD FS:PATHNAME :VALIDATE-COMPONENT)  (:METHOD FS:PATHNAME :VALIDATE)  (:METHOD FS:PATHNAME-HASH-TABLE-MIXIN :GET-PATHNAME)

(:METHOD FS:PATHNAME :VALIDATE-COMPONENT):  (P.C. = 40)
   Arg 0 (SELF): #<LOGICAL-PATHNAME "FB: FB; INTERFAC.LISP.NEWEST">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:PATHNAME -- 8. IV's, 1. FL's 24707463>
   Arg 2 (OPERATION): :VALIDATE-COMPONENT
   Arg 3 (TEST-ARG): :UNSPECIFIC
   Arg 4 (TEST-ARG-LOC): #<DTP-LOCATIVE 42427736>
   Arg 5 (VALID-MSG): :VERSION
   Arg 6 (TEST-MSG): :VALID-VERSION-P
   Arg 7 (CASE-MSG): NIL
   Arg 8 (UNCASE-MSG): NIL
   Arg 9 (COMPONENT): :VERSION
   Arg 10 (PRETTY-NAME): "version"

(:METHOD FS:PATHNAME :VALIDATE):  (P.C. = 13)
   Arg 0 (SELF): #<LOGICAL-PATHNAME "FB: FB; INTERFAC.LISP.NEWEST">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:PATHNAME -- 8. IV's, 1. FL's 24707463>
   Arg 2 (OPERATION): :VALIDATE

(:METHOD FS:PATHNAME-HASH-TABLE-MIXIN :GET-PATHNAME):  (P.C. = 30)
   Arg 0 (SELF): #<CASE-INSENSITIVE-PATHNAME-HASH-TABLE FB>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:PATHNAME-HASH-TABLE-MIXIN -- 1. IV's, 0. FL's 24707422>
   Arg 2 (OPERATION): :GET-PATHNAME
   Arg 3 (DEV): :UNSPECIFIC
   Arg 4 (DIR): ("FB")
   Arg 5 (NAM): "INTERFAC"
   Arg 6 (TYP): "LISP"
   Arg 7 (VRS): :UNSPECIFIC
   Arg 8 (OTHERS): NIL
   Arg 9 (KEY): (("FB") "INTERFAC" "LISP" :UNSPECIFIC)

(:METHOD NET:NO-DEVICE-HOST-MIXIN :GET-PATHNAME):  (P.C. = 27)
   Arg 0 (SELF): #<LOGICAL-HOST FB>
   Arg 1 (SELF-MAPPING-TABLE): NET:NO-DEVICE-HOST-MIXIN
   Arg 2 (OPERATION): :GET-PATHNAME
   Arg 3 (DEV): :UNSPECIFIC
   Arg 4 (DIR): ("FB")
   Arg 5 (NAM): "INTERFAC"
   Arg 6 (TYP): "LISP"
   Arg 7 (VRS): :UNSPECIFIC
   Arg 8 (OTHERS): NIL

FS:MAKE-PATHNAME-1:  (P.C. = 607)
   Arg 0 (ACTOR): #<LOGICAL-PATHNAME "FB: FB; INTERFAC.LISP.NEWEST">
   Rest arg (OPTIONS): (:DEFAULT-HOST #<LOGICAL-HOST FB> :DEFAULT-DEVICE :UNSPECIFIC :DEFAULT-DIRECTORY ("FB") :DEFAULT-NAME "INTERFAC" :DEFAULT-TYPE "LISP" ...)

(:METHOD FS:PATHNAME :NEW-PATHNAME):  (P.C. = 22)
   Arg 0 (SELF): #<LOGICAL-PATHNAME "FB: FB; INTERFAC.LISP.NEWEST">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:PATHNAME -- 8. IV's, 1. FL's 24707463>
   Arg 2 (OPERATION): :NEW-PATHNAME
   Rest arg (OPTIONS): (:VERSION :UNSPECIFIC)

(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 67)
   Arg 0 (SELF): #<LOGICAL-PATHNAME "FB: FB; INTERFAC.LISP.NEWEST">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:PATHNAME -- 8. IV's, 1. FL's 24707463>
   Arg 2 (.OPERATION.): :NEW-PATHNAME
   Rest arg (.DAEMON-CALLER-ARGS.): NIL
   Local 3 (.DAEMON-CALLER-ARGS.): (:VERSION :UNSPECIFIC)

(:METHOD FS:PATHNAME :NEW-VERSION):  (P.C. = 6)
   Arg 0 (SELF): #<LOGICAL-PATHNAME "FB: FB; INTERFAC.LISP.NEWEST">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:PATHNAME -- 8. IV's, 1. FL's 24707463>
   Arg 2 (OPERATION): :NEW-VERSION
   Arg 3 (NEW-VERSION): :UNSPECIFIC

Rest of stack:
COMPILER:COMPUTE-ATTRIBUTE-LIST:  (P.C. = 137)
(:INTERNAL COMPILER:COMPILE-TO-FILE 3 (:INITIALIZE)):  (P.C. = 6)
COMPILER:COMPILE-TO-FILE:  (P.C. = 42)
COMPILER:COMPILE-FROM-STREAM:  (P.C. = 226)
COMPILER:COMPILE-FILE:  (P.C. = 303)
SI:COMPILE-FILE-1:  (P.C. = 6)
SI:DO-FILE-TRANSFORMATIONS:  (P.C. = 244)
SI:PERFORM-TRANSFORMATIONS:  (P.C. = 167)
SI:PERFORM-TRANSFORMATIONS:  (P.C. = 64)
MAKE-SYSTEM:  (P.C. = 241)
SI:*EVAL:  (P.C. = 403)
(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0):  (P.C. = 152)
TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)  (from SYS: PATCH; SYSTEM-269-48)
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
SI:LISP-COMMAND-LOOP:  (P.C. = 67)
SI:LISP-TOP-LEVEL1:  (P.C. = 5)
SI:LISP-TOP-LEVEL:  (P.C. = 7)
 5-Mar-85 02:30:19-EST,783;000000000000
Received: from MIT-SID by MIT-OZ via Chaosnet; 5 Mar 85 02:30-EST
Date: Tuesday, 5 March 1985, 02:28-EST
From: Christopher Fry <cfry at OZ>
Subject: defmacro doc string
To: BUG-LISPM at OZ
Message-ID: <850305022852.3.CFRY@SID.MIT>

In Symbolics 3670 Release 6.0 Beta IIc, microcode TMC5-IO4-MIC 315,
FEP 22, on Lisp Machine Sid Vicious:


(defmacro foo () "foo doc string" nil)
(documentation 'foo) => nil  ; should be the above string

(defun bar () "bar doc string" nil)
(documentation 'bar) => "bar doc string" ;as expected

Release 6 Beta Test I Notes do not contain an entry for the
function documentation in the index.
Is this a bug or an undocumented intended change?
Documentation strings for defmacro work in rel 5.
I would like them to work in rel 6.
 5-Mar-85 18:34:46-EST,814;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 5 Mar 85 18:34-EST
Date: 5 March 1985 18:33-EST
From: Roland G. Ouellette <ROLY @ MIT-MC>
Subject: cftp to lispm's
To: BUG-LISPM @ MIT-MC, BUG-CFTP @ MIT-MC

In release 5.2 qnam

CFTPing to a lisp machine looses.  When you login the lisp machine
logs it self in as file server.  This is the wrong direcory (it
doesn't exist).  Then the lisp machine won't allow you to set the
current direcory to be something else.  

It seems to me that it might be a good idea if lispm's supported
current direcories so that non-lispm operating systems might be able
to get files off of them.  This (seemingly simple) change would allow
me to get to my files when I can't get to my lispm.

This might also be the case with ftp, but I haven't tried that.

Roland
 5-Mar-85 21:18:05-EST,523;000000000000
Received: from MIT-ROBOT-3 by MIT-OZ via Chaosnet; 5 Mar 85 21:17-EST
Date: Tuesday, 5 March 1985, 21:15-EST
From: DRW at MIT-MC
Sender: VANDUC at OZ
Subject: Robot3 Terminal process is broken
To: BUG-LISPM at OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 18, on Lisp Machine Robot-3:

The Terminal program (Select T) breaks when trying to connect to MC.  It gives
an apparently infinite stream of notifications "The namespace server was unable to
find mumble in namespace mumble."

Dale (DRW@MC)
 6-Mar-85 04:21:59-EST,1901;000000000000
Received: from MIT-DUANE by MIT-OZ via Chaosnet; 6 Mar 85 04:21-EST
Date: Wednesday, 6 March 1985, 04:21-EST
From: Christopher Fry <cfry at OZ>
Subject: si:receive-band failed
To: BUG-LISPM at OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 22, on Lisp Machine Janis Joplin:

(si:receive-band 'buddy "fep0:>mit-6-0-beta-IIc.load.1")
caused this error.
A similar error was caused trying to get a different band from a different machine.
Both source machines are 3600's running rel 5.2.

>>Error: READLINE encountered an EOF in #<CHARACTER-STREAM 4365463>
While in the function SI:READLINE-EOF  READLINE  SI:CHECK-FOR-REMOTE-ERROR

SI:READLINE-EOF:  (P.C. = 14)
   Arg 0 (STREAM): #<CHARACTER-STREAM 4365463>
   Arg 1 (EOF-OPTION): SI:NO-EOF-OPTION

READLINE:  (P.C. = 106)
   Rest arg (READ-ARGS): (#<CHARACTER-STREAM 4365463>)

SI:CHECK-FOR-REMOTE-ERROR:  (P.C. = 3)
   Arg 0 (STREAM): #<CHARACTER-STREAM 4365463>

SI:REMOTE-COMMAND:  (P.C. = 14)
   Arg 0 (STREAM): #<CHARACTER-STREAM 4365463>
   Arg 1 (FORMAT-STRING): "VERSION~%"
   Rest arg (FORMAT-ARGS): NIL

SI:GET-BAND-WHICH-OPERATIONS:  (P.C. = 20)
   Arg 0 (STREAM): #<CHARACTER-STREAM 4365463>

SI:RECEIVE-BAND:  (P.C. = 21)
   Arg 0 (SOURCE-HOST): BUDDY
   Arg 1 (SOURCE-BAND): "fep0:>mit-6-0-beta-IIc.load.1"
   --Defaulted args:--
   Arg 2 (TARGET-BAND): NIL
   Arg 3 (SUBSET-START): NIL
   Arg 4 (SUBSET-N-BLOCKS): NIL

SI:*EVAL:  (P.C. = 370)
   Arg 0 (FORM): (SI:RECEIVE-BAND (QUOTE BUDDY) "fep0:>mit-6-0-beta-IIc.load.1")

SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 200)
   Rest arg: (:NAME "Lisp Top Level in Lisp Listener 1" :ABORTED-FUNCTION NIL :BEFORE-PROMPT-FUNCTION NIL :READ-FUNCTION NIL :EVAL-FUNCTION NIL ...)

Rest of stack:
SI:LISP-COMMAND-LOOP:  (P.C. = 115)
SI:LISP-TOP-LEVEL1:  (P.C. = 22)
SI:LISP-TOP-LEVEL2:  (P.C. = 5)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
 6-Mar-85 06:35:27-EST,1150;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 6 Mar 85 06:35-EST
Date: 6 March 1985 06:34-EST
From: David Vinayak Wallace <GUMBY @ MIT-MC>
Subject:  cftp to lispm's
To: ROLY @ MIT-MC
cc: BUG-CFTP @ MIT-MC, BUG-LISPM @ MIT-MC
In-reply-to: Msg of 5 Mar 1985 18:33-EST from Roland G. Ouellette <ROLY>

    Date: 5 March 1985 18:33-EST
    From: Roland G. Ouellette <ROLY>

    CFTPing to a lisp machine looses.  When you login the lisp machine
    logs it self in as file server.  This is the wrong direcory (it
    doesn't exist).  Then the lisp machine won't allow you to set the
    current direcory to be something else.  

Works ok for me (use the LOGIN command to CFTP).

    It seems to me that it might be a good idea if lispm's supported
    current direcories so that non-lispm operating systems might be able
    to get files off of them.  This (seemingly simple) change would allow
    me to get to my files when I can't get to my lispm.


You can get them if you specify the whole pathname.  It's no substitute for
a CWD command, but given the speed with which new features are added to
thew system these days...
 6-Mar-85 09:13:35-EST,3835;000000000000
Received: from MIT-DUANE by MIT-OZ via Chaosnet; 6 Mar 85 09:13-EST
Date: Wednesday, 6 March 1985, 09:13-EST
From: Ken Haase <KWH at OZ>
Subject: Fiel system bug.
To: BUG-LISPM at OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 22, on Lisp Machine Janis Joplin:

This happened after some aborted attempts to save this file.

>>Error: Invalid simultaneous access
         For OZ:OZ:<KWH.HACKS>GOBBLE.LISP
While in the function (:METHOD FS:HOST-UNIT :COMMAND)  FS:OPEN-CHAOS  (:METHOD
                                                                         FS:QFILE-ACCESS-PATH
                                                                         :OPEN)

(:METHOD FS:HOST-UNIT :COMMAND):  (P.C. = 236)
   Arg 0 (SELF): #<HOST-UNIT 25474702>
   Arg 1 (SELF-MAPPING-TABLE): FS:HOST-UNIT
   Arg 2 (OPERATION): :COMMAND
   Arg 3 (MARK-P): NIL
   Arg 4 (STREAM-OR-HANDLE): (:CREATE "O2314")
   Arg 5 (SIMPLE-P): NIL
   Arg 6 (WHOSTATE): "Open"
   Rest arg (COMMANDS): ("OPEN " :WRITE " " :CHARACTER "" "" "" "" "" "" ...)
   Local 8 (HANDLE): "O2314"
   Local 9 (STREAM): NIL
   Local 10 (PKT): #<Chaos Packet 14742344>
   Local 11 (SUCCESS): NIL
   Local 12 (STRING): "O2314 ERROR LCK F Invalid simultaneous access"
   Local 13 (TRANSACTION-ID): "T2316"
   Local 14 (CREATE-P): T
   Local 15 (CONDITION): NIL
   Local 16: T
   Local 17: #<CASE-HANDLER 10564155>
   Local 18: (#<BIND-HANDLER 12176067> #<BIND-HANDLER 12437466>)
   Local 19: (#<CASE-HANDLER 10564155> #<BIND-HANDLER 12176067> #<BIND-HANDLER 12437466>)

FS:OPEN-CHAOS:  (P.C. = 674)
   Arg 0 (ACCESS-PATH): #<TOPS20-QFILE-ACCESS-PATH OZ using QFILE 25474671>
   Arg 1 (REAL-PATHNAME): #<TOPS20-PATHNAME "OZ:OZ:<KWH.HACKS>GOBBLE.LISP">
   Arg 2 (*COMMAND-PATHNAME*-initialization): #<TOPS20-PATHNAME "OZ:OZ:<KWH.HACKS>GOBBLE.LISP">
   Arg 3 (OPTIONS): (:CHARACTERS T :DIRECTION :OUTPUT)

(:METHOD FS:QFILE-ACCESS-PATH :OPEN):  (P.C. = 7)
   Arg 0 (SELF): #<TOPS20-QFILE-ACCESS-PATH OZ using QFILE 25474671>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:QFILE-ACCESS-PATH -- 4. IV's, 0. FL's 10376335>
   Arg 2 (OPERATION): :OPEN
   Arg 3 (REAL-PATHNAME): #<TOPS20-PATHNAME "OZ:OZ:<KWH.HACKS>GOBBLE.LISP">
   Arg 4 (PATHNAME): #<TOPS20-PATHNAME "OZ:OZ:<KWH.HACKS>GOBBLE.LISP">
   Rest arg (OPTIONS): (:CHARACTERS T :DIRECTION :OUTPUT)

(:METHOD FS:ACTIVE-PATHNAME-MIXIN :OPEN):  (P.C. = 14)
   Arg 0 (SELF): #<TOPS20-PATHNAME "OZ:OZ:<KWH.HACKS>GOBBLE.LISP">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:ACTIVE-PATHNAME-MIXIN -- 1. IV's, 0. FL's 52530461>
   Arg 2 (OPERATION): :OPEN
   Arg 3 (PATHNAME): #<TOPS20-PATHNAME "OZ:OZ:<KWH.HACKS>GOBBLE.LISP">
   Rest arg (OPTIONS): (:CHARACTERS T :DIRECTION :OUTPUT)

FS:MACLISP-COMPATIBILITY-OPEN:  (P.C. = 362)
   Arg 0 (FILENAME): #<TOPS20-PATHNAME "OZ:OZ:<KWH.HACKS>GOBBLE.LISP">
   Arg 1 (OPTIONS): (OUT)

OPEN:  (P.C. = 252)
   Arg 0 (PATHNAME): #<TOPS20-PATHNAME "OZ:OZ:<KWH.HACKS>GOBBLE.LISP">
   Rest arg (KEYWORD-ARGS): ((OUT))

(:METHOD FILE-BUFFER-MIXIN :SAVE):  (P.C. = 44)
   Arg 0 (SELF): #<FILE-BUFFER "GOBBLE.LISP OZ:<KWH.HACKS> OZ:" 26272202>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FILE-BUFFER-MIXIN -- 9. IV's, 0. FL's 60253526>
   Arg 2 (OPERATION): :SAVE

SAVE-BUFFER:  (P.C. = 203)
   Arg 0 (BUFFER): #<FILE-BUFFER "GOBBLE.LISP OZ:<KWH.HACKS> OZ:" 26272202>

Rest of stack:
COM-SAVE-FILE:  (P.C. = 14)
COMMAND-EXECUTE:  (P.C. = 55)
MAKE-EXTENDED-COMMAND-INTERNAL:  (P.C. = 77)
SYS:CALL-FUNNY-FUNCTION:  (P.C. = 101)
Closure of MAKE-EXTENDED-COMMAND-INTERNAL:
COMMAND-EXECUTE:  (P.C. = 55)
PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD EDITOR :EDIT):  (P.C. = 214)
(:METHOD TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 41)
ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
 6-Mar-85 10:49:07-EST,513;000000000000
Received: from MIT-ROBOT-3 by MIT-OZ via Chaosnet; 6 Mar 85 10:48-EST
Date: Wednesday, 6 March 1985, 10:47-EST
From:  <HLV at OZ>
Subject: turning off namespace server messages
To: BUG-LISPM at OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 18, on Lisp Machine Robot-3:

How can one turn off the namespace server messages?  Lately the
namespace server seems to have gone wacko, and watching the screen
continually flash on and off is a sure way to get a headache.

Thanks,
Harry Voorhees
 6-Mar-85 12:24:22-EST,2964;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 6 Mar 85 12:24-EST
Received: from Chaosnet site 40700015427 by MIT-MC; 03/06/85 12:18:40
Date: Wednesday, 6 March 1985, 12:16-EST
From: Cory Myers <cory at MIT-BUGS-BUNNY>
Subject: Mail blow up on Save
To: BUG-LISPM at OZ
Message-ID: <850306121610.3.CORY@DAFFY-DUCK.MIT>

In Symbolics 3670 Release 6.0 Beta IIc, microcode TMC5-IO4-FPA-MIC 315,
FEP 22, with UTIL, on Lisp Machine Daffy Duck:

I sent out another bug report which contained an fcc.  I re-entered mail
and did a S to save my mbox.

>>Trap: The first argument given to the AR-1 instruction, NIL, was not an array.
While in the function (:METHOD ZWEI:SEQUENCE :EXPUNGE)  (:METHOD ZWEI:UNIX-MAIL-BUFFER :COMBINED :EXPUNGE)  ZWEI:EXPUNGE-SEQUENCE

(:METHOD ZWEI:SEQUENCE :EXPUNGE):  (P.C. = 355)
   Arg 0 (SELF): #<UNIX-MAIL-BUFFER "BUGS-BUNNY: //syla//dspg//cory//mbox" 60621550>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:SEQUENCE -- 6. IV's, 0. FL's 143403526>
   Arg 2 (OPERATION): :EXPUNGE
   Arg 3 (DELETED-MSGS): T
   Local 4 (OLD-MOD-TICK): 15913
   Local 5 (BUFFER-P): T
   Local 6 (LENGTH): 4

(:METHOD ZWEI:UNIX-MAIL-BUFFER :COMBINED :EXPUNGE):  (P.C. = 47)
   Arg 0 (SELF): #<UNIX-MAIL-BUFFER "BUGS-BUNNY: //syla//dspg//cory//mbox" 60621550>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:UNIX-MAIL-BUFFER -- 0. IV's, 5. FL's 143403564>
   Arg 2 (.OPERATION.): :EXPUNGE
   Rest arg (.DAEMON-CALLER-ARGS.): NIL
   Local 3 (.DAEMON-CALLER-ARGS.): (T)

ZWEI:EXPUNGE-SEQUENCE:  (P.C. = 6)
   Arg 0 (SEQUENCE): #<UNIX-MAIL-BUFFER "BUGS-BUNNY: //syla//dspg//cory//mbox" 60621550>
   --Defaulted args:--
   Arg 1 (DELETED-MSGS): T

ZWEI:ZMAIL-SAVE-ALL:  (P.C. = 21)

ZWEI:COM-ZMAIL-SAVE:  (P.C. = 16)

ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
   Arg 0 (COMMAND): ZWEI:COM-ZMAIL-SAVE
   Arg 1 (CHAR): 115
   --Defaulted args:--
   Arg 2 (PREFIX-CHAR): NIL
   Arg 3 (HOOK-LIST): NIL

ZWEI:ZMAIL-COMMAND-EXECUTE:  (P.C. = 6)
   Arg 0: ZWEI:COM-ZMAIL-SAVE

(:METHOD ZWEI:ZMAIL-FRAME :PROCESS-COMMAND-CHAR):  (P.C. = 7)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 36643307 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-FRAME -- 65. IV's, 18. FL's 105606217>
   Arg 2 (OPERATION): :PROCESS-COMMAND-CHAR
   Arg 3 (CH): 115

Rest of stack:
(:INTERNAL (:INTERNAL (:METHOD ZWEI:ZMAIL-FRAME :COMBINED :PROCESS-COMMAND-CHAR) 0) 0):  (P.C. = 11)
(:METHOD ZWEI:ZMAIL-COMMAND-LOOP-MIXIN :WHOPPER :PROCESS-COMMAND-CHAR):  (P.C. = 21)
(:INTERNAL (:METHOD ZWEI:ZMAIL-FRAME :COMBINED :PROCESS-COMMAND-CHAR) 0):  (P.C. = 13)
(:METHOD ZWEI:ZMAIL-FRAME :WHOPPER :PROCESS-COMMAND-CHAR):  (P.C. = 21)
(:METHOD ZWEI:ZMAIL-FRAME :COMBINED :PROCESS-COMMAND-CHAR):  (P.C. = 12)
(:METHOD ZWEI:ZMAIL-FRAME :COMMAND-LOOP):  (P.C. = 143)
(:METHOD ZWEI:ZMAIL-FRAME :COMBINED :COMMAND-LOOP):  (P.C. = 70)
ZWEI:ZMAIL-PROCESS-TOP-LEVEL:  (P.C. = 105)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
 6-Mar-85 15:00:37-EST,2845;000000000000
Received: from MIT-VAX by MIT-OZ via Chaosnet; 6 Mar 85 15:00-EST
Received: by mit-vax.Mit-chaos.Arpa (4.12/4.8) with CHAOS id AA24157; Wed, 6 Mar 85 14:45:05 est
Date: Wednesday, 6 March 1985, 14:52-EST
From: Webster Dove <dove@MIT-BUGS-BUNNY>
Subject: doc viewer m-> bug
To: BUG-LISPM@OZ
Message-Id: <850306145225.1.DOVE@TWEETY-PIE.MIT>

In Symbolics 3600 Release 6.0 Beta IIc, microcode TMC5-FPA-MIC 315,
FEP 17, with UTIL, on Lisp Machine Tweety Pie:

In doc viewer, looking at "the character set".  After the initial update
I typed "m->" to go to the end and it broke thusly:

>>Error: The symbol NIL has an invalid function definition
While in the function NIL  (:METHOD SAGE:DEX :COM-DISPLAY-ITEM)  (:METHOD SAGE:DEX :COM-GOTO-END)

NIL:
   Arg 0: :NEXT

(:METHOD SAGE:DEX :COM-DISPLAY-ITEM):  (P.C. = 113)
   Arg 0 (SELF): #<DEX-FRAME Dex Frame 1 36640064 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SAGE:DEX -- 7. IV's, 3. FL's 105311775>
   Arg 2 (OPERATION): :COM-DISPLAY-ITEM
   Arg 3 (IGNORE): NIL
   Arg 4 (LOCATION): :END
   Arg 5 (ITEM): #<DEX-ITEM "The Character Set" 27063130>

(:METHOD SAGE:DEX :COM-GOTO-END):  (P.C. = 30)
   Arg 0 (SELF): #<DEX-FRAME Dex Frame 1 36640064 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SAGE:DEX -- 7. IV's, 3. FL's 105311775>
   Arg 2 (OPERATION): :COM-GOTO-END
   Arg 3 (IGNORE): NIL

(:METHOD SAGE:DEX :COMMAND-CHAR):  (P.C. = 35)
   Arg 0 (SELF): #<DEX-FRAME Dex Frame 1 36640064 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SAGE:DEX -- 7. IV's, 3. FL's 105311775>
   Arg 2 (OPERATION): :COMMAND-CHAR
   Arg 3 (CHAR): 574
   Arg 4 (NUMERIC-ARG): NIL

SAGE:DEX-IE-COMMAND:  (P.C. = 10)
   Arg 0 (CODE): 574

(:DEFUN-METHOD SI:STANDARD-INPUT-EDITOR-TYI):  (P.C. = 356)
   Arg 0 (SELF): #<DEX-COMMAND-PANE Dex Command Pane 1 36640611 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:INTERACTIVE-STREAM -- 20. IV's, 1. FL's 105306021>
   Arg 2: NIL

SI:STANDARD-INPUT-EDITOR-TYI:  (P.C. = 12)
   Rest arg (ARGS): (NIL)

SI:INPUT-EDITOR-INVOKE:  (P.C. = 11)
   Arg 0 (OPERATION): TYI
   Local 0 (OPERATION): SI:STANDARD-INPUT-EDITOR-TYI
   Rest arg (ARGS): (NIL)

Rest of stack:
(:METHOD SI:INTERACTIVE-STREAM :WHOPPER :ANY-TYI):  (P.C. = 67)
(:METHOD TV:WINDOW :COMBINED :ANY-TYI):  (P.C. = 13)
(:INTERNAL (:METHOD SAGE:DEX :READ-COMPLETED-STRING) 0):  (P.C. = 5)
(:DEFUN-METHOD SI:INPUT-EDITOR-READ):  (P.C. = 67)
(:METHOD SI:INTERACTIVE-STREAM :INPUT-EDITOR):  (P.C. = 133)
(:METHOD SAGE:DEX :READ-COMPLETED-STRING):  (P.C. = 307)
(:METHOD SAGE:DEX :READ-COMMAND):  (P.C. = 25)
(:METHOD SAGE:DEX :COMMAND-LOOP):  (P.C. = 7)  (from SYS: SAGE; PATCH; BASIC-SAGE-13-26)
(:METHOD SAGE:DEX :TOPLEVEL):  (P.C. = 255)
SAGE:DEX-TOPLEVEL:  (P.C. = 4)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
 6-Mar-85 15:14:09-EST,643;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 6 Mar 85 15:13-EST
Received: from BBNA.ARPA by MIT-MC.ARPA; WED 6 MAR 1985 1509 EST
Date: Wed 6 Mar 85 15:10:27-EST
From: TI Computer Science Lab, Dallas <TICSL@BBNA.ARPA>
Subject: INFO-LISPM MAILING LIST
To: INFO-LISPM%MIT-OZ@MIT-MC.ARPA
cc: FORDYCE%CSL60%TI-CSL@CSNET-RELAY.ARPA
REPLY-TO: FORDYCE%CSL60%TI-CSL@CSNET-RELAY

PLEASE DELETE THE FOLLOWING USER FROM THE INFO-LISPM
MAILING LIST:

	TICSL@BBNA

PLEASE ADD THE FOLLOWING USER TO THE INFO-LISPM MAILING
LIST:

	INFO-LISPM-INCOMING%CSL60%TI-CSL@CSNET-RELAY

REGARDS, DAVID FORDYCE
	TI-CSL 2060 SYSTEM MANAGER
-------
 7-Mar-85 02:28:22-EST,835;000000000000
Received: from MIT-APIARY-4 by MIT-OZ via Chaosnet; 7 Mar 85 02:28-EST
Date: Thursday, 7 March 1985, 02:26-EST
From: A Lisp Machine <LISPM at MIT-MC>
Subject: show CP status wording
To: BUG-LISPM at OZ
Message-ID: <850307022610.1.LISP-MACHINE@APIARY-4.MIT>

In Symbolics 3600 Release 6.0 Beta IIc, microcode TMC5-MIC 315, FEP 18, on Lisp Machine Apiary-4:

Why does "Show Command Processor Status" indicate for
	Command-Preferred the following:
       Interprets input starting with a non-alphabetic character as commands;
       type an initial , to force Lisp interpretation.

When I type a non-alphabetic character, such as $ or % or &, it tries
LISP interpretation.  The same happens with numerics.  I think I
understand the point that this status message was trying to make,
but it is not being properly worded.
 7-Mar-85 14:07:03-EST,645;000000000000
Received: from MIT-VAX by MIT-OZ via Chaosnet; 7 Mar 85 14:05-EST
Received: by mit-vax.Mit-chaos.Arpa (4.12/4.8) with CHAOS id AA06904; Thu, 7 Mar 85 13:55:49 est
Date: Thursday, 7 March 1985, 13:54-EST
From: Roland Ouellette <Roly@MIT-MC>
Subject: first floor dover
To: BUG-LISPM@OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 18, on Lisp Machine Minnie Mouse:

Maybe someone could add the first floor dover, which is named Axe, to
the namespace.  It seems that the only machine that knows about it now
is XX.

Given the reliability of Tremont, having an alternative hardcopy device
seems to be a good idea.

Roland
 7-Mar-85 19:50:46-EST,1013;000000000000
Received: by MIT-OZ via Chaosnet; 7 Mar 85 19:50-EST
Received: from SCRC-NEPONSET by SCRC-VALLECITO via CHAOS with CHAOS-MAIL id 581; Mon 4-Mar-85 13:38:07-EST
Date: Monday, 4 March 1985, 13:37-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: mit lacks doc examiner directory?
To: Christopher Fry <cfry at OZ>, BUG-LISPM at OZ
In-Reply-To: <850304001926.1.CFRY@ROBOT-1.MIT>
Message-ID: <850304133751.3.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Monday, 4 March 1985, 00:19-EST
    From: Christopher Fry <cfry at OZ>

    In Symbolics 3600 Release 6.0 Beta IIc, microcode TMC5-MIC 315, FEP 18, on Lisp Machine Robot 1:



    >>Error: The logical pathname SYS: DOC; PATCH; is not defined
    While in the function (:METHOD FS:LOGICAL-HOST :TRANSLATE-RAW)  (:METHOD FS:LOGICAL-HOST :TRANSLATE)  (:METHOD FS:LOGICAL-PATHNAME :TRANSLATED-PATHNAME)

The MIT user community lacks a complete release of 6.0beta because
6.0beta is not yet released to the MIT user community.
 7-Mar-85 21:58:19-EST,1201;000000000000
Received: from SCRC-HARLEM by MIT-OZ via Chaosnet; 7 Mar 85 21:58-EST
Date: Monday, 4 March 1985, 14:45-EST
From: Joseph R Goldstone <joseph at SCRC-QUABBIN>
Subject: mit lacks doc examiner directory?
To: Christopher Fry <cfry at OZ>, BUG-LISPM at OZ
In-Reply-To: <850304001926.1.CFRY@ROBOT-1.MIT>
Message-ID: <850304144519.7.JOSEPH@HARLEM.SCRC.Symbolics.COM>

    Date: Monday, 4 March 1985, 00:19-EST
    From: Christopher Fry <cfry at OZ>

    In Symbolics 3600 Release 6.0 Beta IIc, microcode TMC5-MIC 315, FEP 18, on Lisp Machine Robot 1:

    >>Error: The logical pathname SYS: DOC; PATCH; is not defined
    While in the function (:METHOD FS:LOGICAL-HOST :TRANSLATE-RAW)
                         (:METHOD FS:LOGICAL-HOST :TRANSLATE)
                         (:METHOD FS:LOGICAL-PATHNAME :TRANSLATED-PATHNAME)

Your subject line is quite correct.  When the real version of Release 6.0 is released
to MIT, instead of the Beta Test version that was placed on a few MIT namespace servers
and given to a few Beta-Testing individual hosts, it will be accompanied by the sources,
the documentation database, and all the rest.

Fixed in the Real Release 6.0 installation kit.
 7-Mar-85 22:48:28-EST,2203;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 7 Mar 85 22:48-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 191995; Thu 7-Mar-85 22:34:18-EST
Date: Thursday, 7 March 1985, 22:32-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: lispms could answer whois requests better.
To: Chris Lindblad <CJL at OZ>, bug-lispm at OZ
In-Reply-To: <CJL.12092433189.BABYL@MIT-OZ>
Message-ID: <850307223246.9.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Mon, 4 Mar 1985  18:19 EST
    From: Chris Lindblad <CJL@MIT-OZ>

    I have set in my namespace object that my home host is reagan, so when I
    log into my lisp machine, it loads my init files from there. I expected,
    therefore that like every other server machine (not lispms, but vms,
    top-20, unix) that I have an account on, if you whois me on the machine,
    it shows stuff describing me, like my office number, and who my
    supervisor is. No chance. If you whois me on reagan, It just shows who's
    logged in on the machine. What's the use of me taking the time to keep
    the information in my namespace entry up to date if whois doesn't even
    display it?

    I do not keep my mail on reagan, but I now assume that even if I did, it
    would answer whois in the same way. This leads to the strange
    circumstance that someone could get mail from foo@bar, and if bar is a
    lispm, if he tried to whois foo@bar, he would not find any
    information about foo at all!

    @whois cjl@oz
    [MIT-OZ]
    CJL      AS Chris Lindblad        FINGER     .127 MIT-NE43-7B-HUB (Chaos)
       [CJL@MIT-OZ] Hacking for GJS and TK
       Work NE43-733; X3-8828

    @whois cjl@reagan
    [MIT-REAGAN]
    File-Server   The File Server        REAGAN   5     7th (Rel 6.0 Beta IIc 1024K 3600)
       [bug-lispm@OZ]

From my machine

(net:finger "cjl//w@Reagan")
File-Server   The File Server        REAGAN          7th (Rel 6.0 Beta IIc 1024K 3600)
CJL      Chris Lindblad         not using this machine.
   [cjl@OZ]
   Work: NE43-733   x8828

Maybe it's really a TWENEX bug not putting the /w where the LispM
expects it, or something?
 7-Mar-85 22:49:35-EST,1266;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 7 Mar 85 22:49-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 192010; Thu 7-Mar-85 22:38:48-EST
Date: Thursday, 7 March 1985, 22:37-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: defmacro doc string
To: Christopher Fry <cfry at OZ>, BUG-LISPM at OZ
In-Reply-To: <850305022852.3.CFRY@SID.MIT>
Message-ID: <850307223716.0.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Tuesday, 5 March 1985, 02:28-EST
    From: Christopher Fry <cfry at OZ>

    In Symbolics 3670 Release 6.0 Beta IIc, microcode TMC5-IO4-MIC 315,
    FEP 22, on Lisp Machine Sid Vicious:


    (defmacro foo () "foo doc string" nil)
    (documentation 'foo) => nil  ; should be the above string

    (defun bar () "bar doc string" nil)
    (documentation 'bar) => "bar doc string" ;as expected

    Release 6 Beta Test I Notes do not contain an entry for the
    function documentation in the index.
    Is this a bug or an undocumented intended change?
    Documentation strings for defmacro work in rel 5.
    I would like them to work in rel 6.

Already known about and on various people's queues.  If you expand the
DEFMACRO you will see where it put it.
 7-Mar-85 23:13:00-EST,947;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 7 Mar 85 23:12-EST
Received: from MIT-SMOKEY by MIT-MC via Chaosnet; 7 MAR 85  23:12:26 EST
Date: Thursday, 7 March 1985, 23:11-EST
From: Scott Cyphers <sr.ehpyc at MIT-SPEECH>
Subject: lispms could answer whois requests better.
To: DCP at SCRC-QUABBIN, CJL at OZ, bug-lispm at OZ
In-Reply-To: <850307223246.9.NFEP@NEPONSET.SCRC.Symbolics.COM>
Message-ID: <850307231120.4.CYPHER@MIT-SMOKEY.MIT>

It works on Speech:


[PHOTO:  Recording initiated  Thu 7-Mar-85 11:11PM]

 MIT TOPS-20 Command Processor 5(312120)-2
@whois cjl@goldy
[MIT-GOLDILOCKS]
Lisp Machine   A Lisp Machine         GOLDILOCKS   19     Bear's house, in the w!
woods, 3-4672 (Rel 6.0 Beta IIc Versatec 4.0 Versatec-Spool 6.0 Useful 1.0 1024K!
K 3600)
CJL      Chris Lindblad         not using this machine.
   [cjl@OZ]
   Work: NE43-733   x8828

@pop

[PHOTO:  Recording terminated  Thu 7-Mar-85 11:11PM]
 7-Mar-85 23:22:48-EST,2478;000000000000
Mail-From: CJL created at  7-Mar-85 23:22:40
Date: Thu, 7 Mar 1985  23:22 EST
Message-ID: <CJL.12093274823.BABYL@MIT-OZ>
From: Chris Lindblad <CJL@MIT-OZ>
To:   bug-finger@MIT-OZ, "David C. Plummer in disguise" <DCP@SCRC-QUABBIN>
Cc:   bug-lispm@MIT-OZ
Subject: lispms could answer whois requests better.
In-reply-to: Msg of 7 Mar 1985 22:32-EST from David C. Plummer in disguise <DCP at SCRC-QUABBIN>

    Date: Thursday, 7 March 1985, 22:32-EST
    From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>

        Date: Mon, 4 Mar 1985  18:19 EST
        From: Chris Lindblad <CJL@MIT-OZ>

        @whois cjl@oz
        [MIT-OZ]
        CJL      AS Chris Lindblad        FINGER     .127 MIT-NE43-7B-HUB (Chaos)
           [CJL@MIT-OZ] Hacking for GJS and TK
           Work NE43-733; X3-8828

        @whois cjl@reagan
        [MIT-REAGAN]
        File-Server   The File Server        REAGAN   5     7th (Rel 6.0 Beta IIc 1024K 3600)
           [bug-lispm@OZ]

    From my machine

    (net:finger "cjl//w@Reagan")
    File-Server   The File Server        REAGAN          7th (Rel 6.0 Beta IIc 1024K 3600)
    CJL      Chris Lindblad         not using this machine.
       [cjl@OZ]
       Work: NE43-733   x8828

    Maybe it's really a TWENEX bug not putting the /w where the LispM
    expects it, or something?

Twenex contacts with "NAME /W cjl"

Suggestion:
I don't know whether it's a bug in twenex finger that /W comes first or
not, or whether it's a bug that the lispm expects the /W to come after
the name. I just want one or the other to be fixed. I don't know the
NAME protocol. If there is a well defined protocol, obviously one of the
two operating systems is in error. If there is not, it seems to me that
it's unreasonable for the lisp machine to be inflexible, and to expect
oz to know where to put the /w if it's legal to put it either place. The
NAME service user can only do one case or the other, but not both, where
the server can handle both cases.

Pure Opinion:
I don't like the fact that lispms distract me with a list of the
currently logged in user even if i'm fingering someone else. The answer
to the question "Who is the user cjl on reagan?" should not be
"File-Server is logged in on reagan right now, and cjl is Chris
Lindblad...". If I wanted to know who was logged in on reagan right now,
I would have asked. I realize this might also be the result of ambiguity
in the NAME protocol.
 7-Mar-85 23:48:50-EST,3088;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 7 Mar 85 23:48-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 192152; Thu 7-Mar-85 23:48:20-EST
Date: Thursday, 7 March 1985, 23:46-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: lispms could answer whois requests better.
To: Chris Lindblad <CJL at OZ>, bug-finger at OZ,
    David C. Plummer in disguise <DCP at SCRC-QUABBIN>
cc: bug-lispm at OZ
In-Reply-To: <CJL.12093274823.BABYL@MIT-OZ>
Message-ID: <850307234630.3.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Thu, 7 Mar 1985  23:22 EST
    From: Chris Lindblad <CJL@MIT-OZ>

	Date: Thursday, 7 March 1985, 22:32-EST
	From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>

	    Date: Mon, 4 Mar 1985  18:19 EST
	    From: Chris Lindblad <CJL@MIT-OZ>

	    @whois cjl@oz
	    [MIT-OZ]
	    CJL      AS Chris Lindblad        FINGER     .127 MIT-NE43-7B-HUB (Chaos)
	       [CJL@MIT-OZ] Hacking for GJS and TK
	       Work NE43-733; X3-8828

	    @whois cjl@reagan
	    [MIT-REAGAN]
	    File-Server   The File Server        REAGAN   5     7th (Rel 6.0 Beta IIc 1024K 3600)
	       [bug-lispm@OZ]

	From my machine

	(net:finger "cjl//w@Reagan")
	File-Server   The File Server        REAGAN          7th (Rel 6.0 Beta IIc 1024K 3600)
	CJL      Chris Lindblad         not using this machine.
	   [cjl@OZ]
	   Work: NE43-733   x8828

	Maybe it's really a TWENEX bug not putting the /w where the LispM
	expects it, or something?

    Twenex contacts with "NAME /W cjl"

    Suggestion:
    I don't know whether it's a bug in twenex finger that /W comes first or
    not, or whether it's a bug that the lispm expects the /W to come after
    the name. I just want one or the other to be fixed. I don't know the
    NAME protocol. If there is a well defined protocol, obviously one of the
    two operating systems is in error. If there is not, it seems to me that
    it's unreasonable for the lisp machine to be inflexible, and to expect
    oz to know where to put the /w if it's legal to put it either place. The
    NAME service user can only do one case or the other, but not both, where
    the server can handle both cases.

    Pure Opinion:
    I don't like the fact that lispms distract me with a list of the
    currently logged in user even if i'm fingering someone else. The answer
    to the question "Who is the user cjl on reagan?" should not be
    "File-Server is logged in on reagan right now, and cjl is Chris
    Lindblad...". If I wanted to know who was logged in on reagan right now,
    I would have asked. I realize this might also be the result of ambiguity
    in the NAME protocol.

Consider how lucky you are!!!  When I tried to convince some Unix hacker
to implement /w he said "it isn't in the spec.  That's an MIT specific
hack that is a complete option, and we don't do it."  [This was the
Internet NAME server, not the CHAOS name server that comes with the
Unix Chaos NCP.]  It's so late I don't know what I'm saying... 
 8-Mar-85 00:04:25-EST,2832;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 8 Mar 85 00:04-EST
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 192178; Fri 8-Mar-85 00:02:37-EST
Date: Friday, 8 March 1985, 00:02-EST
From: David A. Moon <Moon at SCRC-STONY-BROOK>
Subject: lispms could answer whois requests better.
To: Chris Lindblad <CJL at OZ>, bug-twenex at OZ, bug-name at MIT-MC
cc: bug-finger at OZ, David C. Plummer in disguise <DCP at SCRC-QUABBIN>,
    bug-lispm at OZ
In-Reply-To: <CJL.12093274823.BABYL@MIT-OZ>
File-References: SRI-NIC:PS:<RFC>RFC742.TXT, MC: .INFO.; NAME ORDER,
                 SRI-KL:PS:<DOCUMENTATION>FINGER.DOC
Message-ID: <850308000250.2.MOON@EUPHRATES.SCRC.Symbolics.COM>

    Date: Thu, 7 Mar 1985  23:22 EST
    From: Chris Lindblad <CJL@MIT-OZ>

	Date: Thursday, 7 March 1985, 22:32-EST
	From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>

	    Date: Mon, 4 Mar 1985  18:19 EST
	    From: Chris Lindblad <CJL@MIT-OZ>

	    @whois cjl@reagan
	    [MIT-REAGAN]
	    File-Server   The File Server        REAGAN   5     7th (Rel 6.0 Beta IIc 1024K 3600)
	       [bug-lispm@OZ]

	From my machine

	(net:finger "cjl//w@Reagan")
	File-Server   The File Server        REAGAN          7th (Rel 6.0 Beta IIc 1024K 3600)
	CJL      Chris Lindblad         not using this machine.
	   [cjl@OZ]
	   Work: NE43-733   x8828

	Maybe it's really a TWENEX bug not putting the /w where the LispM
	expects it, or something?

    Twenex contacts with "NAME /W cjl"

    Suggestion:
    I don't know whether it's a bug in twenex finger that /W comes first or
    not, or whether it's a bug that the lispm expects the /W to come after
    the name. I just want one or the other to be fixed. I don't know the
    NAME protocol.

The documentation of the protocol, written in an amusingly informal style
(to say the least), may be found by reading all three of the referenced files.
None of these files unambiguously rules out the form that Twenex (actually,
just OZ) uses, but the only example of /W given puts the switch after the name.
I think the bug is at OZ.

The WHOIS command on MC has the same bug as the one at OZ.  The other Twenex's
besides OZ work, though.  OZ always has to be different, it seems.

    Pure Opinion:
    I don't like the fact that lispms distract me with a list of the
    currently logged in user even if i'm fingering someone else. The answer
    to the question "Who is the user cjl on reagan?" should not be
    "File-Server is logged in on reagan right now, and cjl is Chris
    Lindblad...". If I wanted to know who was logged in on reagan right now,
    I would have asked. I realize this might also be the result of ambiguity
    in the NAME protocol.

I agree that this is a bug in the Lispm server.
 8-Mar-85 01:43:44-EST,1201;000000000000
Mail-From: GZ created at  8-Mar-85 01:43:34
Date: Fri 8 Mar 85 01:43:34-EST
From: Gail Zacharias <GZ@MIT-OZ>
Subject: Re: lispms could answer whois requests better.
To: bug-finger@MIT-OZ
cc: CJL@MIT-OZ, bug-twenex@MIT-OZ, bug-name@MIT-MC, DCP@SCRC-QUABBIN,
    bug-lispm@MIT-OZ, moon@SCRC-STONY-BROOK
In-Reply-To: Message from "David A. Moon <Moon at SCRC-STONY-BROOK>" of Fri 8 Mar 85 00:05:19-EST

Well, gag me with a lisp parser.

Sigh.  OZ used to put the /W last, but Unix wants it first in the multi-name
case, else you get like:

    @RFC VIXEN NAME dcp moon/w
    Login name: dcp       			In real life: ???

    Login name: -l        			In real life: ???

    Login name: moon      			In real life: David Moon
    Directory: /usr2/moon               	Shell: /bin/csh
    Last login Mon Feb 25 21:08 on ttyp0

Putting the /w first gets rid of the -l part.  I tried it on a few other
operating systems and they all took the switch in any position, so I changed
it.  I guess I didn't try any lispm's because it didn't occur to me that
a lispm could have trouble with parsing...

Anyhow, I fixed OZ's finger put the damn /w where the target machine wants it.
-------
 9-Mar-85 11:08:26-EST,1858;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 9 Mar 85 11:08-EST
Received: from SCRC-STONY-BROOK by MIT-MC via Chaosnet; 9 MAR 85  11:07:49 EST
Received: from SCRC-HUDSON by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 193074; Sat 9-Mar-85 11:07:57-EST
Date: Sat, 9 Mar 85 11:07 EST
From: Charles Hornig <Hornig@SCRC-STONY-BROOK.ARPA>
Subject: Compiler Bug...
To: Thomas Reinhardt <Tomr@OZ.MIT>, BUG-LISPM@MIT-MC.ARPA
In-Reply-To: <850304144645.3.TOMR@APIARY-5.MIT>
Message-ID: <850309110747.6.HORNIG@HUDSON.SCRC.Symbolics.COM>

    Date: Mon, 4 Mar 85 14:46 EST
    From: Thomas Reinhardt <Tomr@OZ.MIT>

    In Symbolics 3600 Release 6.0 Beta IIc, microcode TMC5-MIC 315, FEP 18, on Lisp Machine Apiary-5:

    Compiling Defsubsts ... as in

    (DEFsubst FAST-MEMQ (KEY LST)
      "Just return T if key is a top-level atomic element in list."
      (DOLIST (ELEMENT LST)
	(AND (EQ ELEMENT KEY) (RETURN T))))

    (DEFsubst FAST-MEMQ (KEY LST)
      "Just return T if key is a top-level atomic element in list."
	    (do ((foo lst (cdr foo)))
	    ((null foo))
	    (AND (EQ (car foo) KEY) (RETURN T))))

    (DEFVAR BINARY-OPERATORS             
	    '(= EQ < <=  MAX MIN > >=  \\ \ ^ + - *)
      "List of existing Act3 Binary Operators, used by the parsing routines.
       I hope to phase these things out.")

    (DEFUN FIND-FIRST-OPERATOR-SPECIFIED (SOURCE)
      (LOCAL-DECLARE ((SPECIAL BINARY-OPERATORS))
	(DOLIST (TOKEN SOURCE)
	  (AND  (FAST-MEMQ TOKEN BINARY-OPERATORS) (RETURN TOKEN)))))

    will invariably return NIL.  Changing the Defsubst to a 
    Defun does the correct thing.

    TOMR

Thank you for reporting this problem.  It is a bug in LT::MAPFORMS-DO,
which will get you for any subst with a DO in it.  It is too late to
fix it in release 6.  It will be fixed in a future release.
 9-Mar-85 14:08:10-EST,597;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 9 Mar 85 14:07-EST
Received: from MIT-OZ by MIT-MC via Chaosnet; 9 MAR 85  14:07:26 EST
Date: Sat, 9 Mar 1985  14:07 EST
Message-ID: <TOMR.12093697986.BABYL@MIT-OZ>
From: Tom Reinhardt <TOMR%MIT-OZ@MIT-MC.ARPA>
To:   Charles Hornig <Hornig%SCRC-STONY-BROOK@MIT-MC.ARPA>
Cc:   BUG-LISPM@MIT-MC
Subject: Compiler Bug...
In-reply-to: Msg of 9 Mar 1985  11:07-EST from Charles Hornig <Hornig at SCRC-STONY-BROOK>

Thanks for the reply...as you probably know David Plummer has also
replied.  

Now, if we could only get rid of SEW|Hydra... .
 9-Mar-85 15:38:05-EST,1998;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 9 Mar 85 15:33-EST
Received: from SCRC-CROW by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 193127; Sat 9-Mar-85 15:32:58-EST
Date: Saturday, 9 March 1985, 15:33-EST
From: Robert W. Kerns <RWK at SCRC-YUKON>
Subject: unix pathname version :unspecific
To: Christopher Fry <cfry at OZ>
cc: BUG-LISPM at OZ
In-Reply-To: <850305021102.2.CFRY@SID.MIT>
Message-ID: <850309153317.1.RWK@CROW.SCRC.Symbolics.COM>

    Date: Tuesday, 5 March 1985, 02:11-EST
    From: Christopher Fry <cfry at OZ>

    In Symbolics 3670 Release 6.0 Beta IIc, microcode TMC5-IO4-MIC 315,
    FEP 22, on Lisp Machine Sid Vicious:

    This error occurred after I evaled:
    (make-system 'fb :compile)

    fb is a logical host whose physical host is mit-prep [unix 4.2].
    The physical extensions of my files are .bin and .lisp [as opposed to .bn and .l].
    (make-system 'fb) works.
    Pathname translation has never been robust for unix.
There isn't any pathname translation going on here.

    I would guess this bug has something to do with unix not
    having any version numbers.

Well, that and the function COMPILER:COMPUTE-ATTRIBUTE-LIST
thinking it's OK to blindly copy pathname components between
differing types of hosts.  (It's not OK).  But this bug is
already fixed in the real 6.0.  Thanks for your report.

    >>Error: :UNSPECIFIC is an invalid version for FB (a LOGICAL host).
    While in the function (:METHOD FS:PATHNAME :VALIDATE-COMPONENT)  (:METHOD FS:PATHNAME :VALIDATE)  (:METHOD FS:PATHNAME-HASH-TABLE-MIXIN :GET-PATHNAME)

    (:METHOD FS:PATHNAME :NEW-VERSION):  (P.C. = 6)
       Arg 0 (SELF): #<LOGICAL-PATHNAME "FB: FB; INTERFAC.LISP.NEWEST">
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:PATHNAME -- 8. IV's, 1. FL's 24707463>
       Arg 2 (OPERATION): :NEW-VERSION
       Arg 3 (NEW-VERSION): :UNSPECIFIC

    Rest of stack:
    COMPILER:COMPUTE-ATTRIBUTE-LIST:  (P.C. = 137)
 9-Mar-85 15:59:08-EST,990;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 9 Mar 85 15:58-EST
Received: from SCRC-PEACE by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 193135; Sat 9-Mar-85 15:58:26-EST
Date: Sat, 9 Mar 85 15:59 EST
From: Charles Hornig <Hornig at SCRC-STONY-BROOK>
Subject: Robot3 Terminal process is broken
To: DRW at MIT-MC, BUG-LISPM at OZ
In-Reply-To: The message of 5 Mar 85 21:15-EST from DRW at MIT-MC
Message-ID: <850309155925.2.HORNIG@PEACE.SCRC.Symbolics.COM>

    Date: Tuesday, 5 March 1985, 21:15-EST
    From: DRW at MIT-MC

    In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 18, on Lisp Machine Robot-3:

    The Terminal program (Select T) breaks when trying to connect to MC.  It gives
    an apparently infinite stream of notifications "The namespace server was unable to
    find mumble in namespace mumble."

    Dale (DRW@MC)

The particular situation that triggered this has been fixed.  All of
this works a lot better in the next release.
 9-Mar-85 16:00:50-EST,957;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 9 Mar 85 15:59-EST
Received: from SCRC-PEACE by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 193137; Sat 9-Mar-85 15:59:15-EST
Date: Sat, 9 Mar 85 16:00 EST
From: Charles Hornig <Hornig at SCRC-STONY-BROOK>
Subject: naespace blues
To: GUMBY at MIT-MC, BUG-LISPM at OZ
In-Reply-To: The message of 5 Mar 85 00:20-EST from GUMBY at MIT-MC
Message-ID: <850309160015.3.HORNIG@PEACE.SCRC.Symbolics.COM>

    Date: Tuesday, 5 March 1985, 00:20-EST
    From:  <GUMBY at MC>

    In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 18, on Lisp Machine Jimi Hendrix:

    There ought to be a way to tell the machine, "Look, I know your
    namespace information might be out of date, but why don't you just
    believe when you got at login time and don't try to be any more
    up-to-date than that"

There is.  It is turned on by default.  Unfortunately, it doesn't work
in release 5.
 9-Mar-85 16:04:17-EST,1093;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 9 Mar 85 16:03-EST
Received: from SCRC-PEACE by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 193140; Sat 9-Mar-85 16:03:01-EST
Date: Sat, 9 Mar 85 16:04 EST
From: Charles Hornig <Hornig at SCRC-STONY-BROOK>
Subject: turning off namespace server messages
To: HLV at OZ, BUG-LISPM at OZ
In-Reply-To: The message of 6 Mar 85 10:47-EST from HLV at OZ
Message-ID: <850309160400.4.HORNIG@PEACE.SCRC.Symbolics.COM>

    Date: Wednesday, 6 March 1985, 10:47-EST
    From:  <HLV at OZ>

    In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 18, on Lisp Machine Robot-3:

    How can one turn off the namespace server messages?  Lately the
    namespace server seems to have gone wacko, and watching the screen
    continually flash on and off is a sure way to get a headache.

    Thanks,
    Harry Voorhees

You can turn them off by doing

 (FDEFINE 'NETI:NAMESPACE-WARNING 'IGNORE)

IOf things get screwed up, though, you won't know.

The cause of the infinite notifications has been fixed for the time
being.
 9-Mar-85 16:07:15-EST,1117;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 9 Mar 85 16:05-EST
Received: from SCRC-PEACE by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 193142; Sat 9-Mar-85 16:04:44-EST
Date: Sat, 9 Mar 85 16:05 EST
From: Charles Hornig <Hornig at SCRC-STONY-BROOK>
Subject: Namespace lossage
To: Chris Lindblad <cjl at OZ>, BUG-LISPM at OZ
In-Reply-To: The message of 1 Mar 85 12:49-EST from Chris Lindblad <cjl at OZ>
Message-ID: <850309160544.5.HORNIG@PEACE.SCRC.Symbolics.COM>

    Date: Friday, 1 March 1985, 12:49-EST
    From: Chris Lindblad <cjl at OZ>

    In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 18, on Lisp Machine Jimi Hendrix:

    A lot of machines here are printing notifications every 5 secs...

The specific cause of this has been patched up.  Rel-5 should boot now.

    257 Notifications, from 0 to 256:
    12:45 Namespace server was unable to find NETWORK ARPANET|ARPANET in namespace ARPANET.
    It will be removed from the namespace.
    12:44 Namespace server was unable to find NETWORK INTERNET in namespace MIT.
    It will be removed from the namespace.
10-Mar-85 19:07:38-EST,1526;000000000000
Received: from MIT-MORRISON by MIT-OZ via Chaosnet; 10 Mar 85 19:07-EST
Date: Sunday, 10 March 1985, 19:08-EST
From: Gavan Duffy <GAVAN at OZ>
Subject: [MAILER-DAEMON at HTVAX: Returned mail: User unknown]
To: BUG-MARTY at OZ, BUG-MAIL at OZ, BUG-LISPM-MIT at OZ
Cc: Gavan at OZ

Grumble:  

When Oz or MC snarfs mail from my Lispm, it knows where to put it.  Not HTVAX,
apparently.

JUST LOOK at the To: field at bottom.  The hosts are specified for each
address!  What's the story here?  Why can't HTVAX simply forward the mail to
Oz?

LISPM-USERS:  Beware.

Received: from MIT-HTVAX by MIT-OZ via Chaosnet; 10 Mar 85 18:12-EST
Received: from MIT-MORRISON by MIT-HTVAX (4.12/4.7) with CHAOS 
	id AB24049; Sun, 10 Mar 85 12:04:43 est
Date: Sunday, 10 March 1985, 12:04-EST
From: Mail Delivery Subsystem <MAILER-DAEMON@mit-htvax>
Subject: Returned mail: User unknown
To: Gavan Duffy <GAVAN@OZ>

   ----- Transcript of session follows -----
550 TOM... User unknown
550 JCMA... User unknown
550 KWH... User unknown
550 JRD... User unknown
550 MARG... User unknown

   ----- Unsent message follows -----
Received: from MIT-MORRISON by MIT-HTVAX (4.12/4.7) with CHAOS 
	id AA24049; Sun, 10 Mar 85 12:04:43 est
Message-Id: <8503101704.AA24049@MIT-HTVAX.ARPA>
Date: Sunday, 10 March 1985, 12:04-EST
From: Gavan Duffy <GAVAN@OZ>
Subject: [CMP.WERNER at UTEXAS-20: news from the SW:  Bellcore accepted into MCC]
To: GUMBY@OZ, MARG@OZ, JRD@OZ, KWH@OZ, JCMA@OZ, MONICA@OZ, TOM@OZ

<et cetera>
10-Mar-85 23:57:46-EST,465;000000000000
Received: from MIT-APIARY-5 by MIT-OZ via Chaosnet; 10 Mar 85 23:57-EST
Date: Sunday, 10 March 1985, 23:56-EST
From: Henry Lieberman <Henry at OZ>
Subject: No free Lispms
To: BUG-LISPM at OZ
Message-ID: <850310235631.2.HENRY@APIARY-5.MIT>

In Symbolics 3600 Release 6.0 Beta IIc, microcode TMC5-MIC 315, FEP 18, on Lisp Machine Apiary-5:

Function-1-F just finds me logged in to this machine, nobody else, and says
"No free Lispms". Namespace problem?

11-Mar-85 04:07:06-EST,341;000000000000
Received: from MIT-MOON by MIT-OZ via Chaosnet; 11 Mar 85 04:07-EST
Date: Monday, 11 March 1985, 04:05-EST
From: David Vinayak Wallace <Gumby at MC>
Subject: (prompt-and-read :past-date)
To: Bug-Lispm at OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 24, on Lisp Machine Keith Moon:

doesn't enforce the date's pastness.
11-Mar-85 12:48:18-EST,901;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 11 Mar 85 12:47-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 193716; Mon 11-Mar-85 12:47:22-EST
Date: Monday, 11 March 1985, 12:47-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: (prompt-and-read :past-date)
To: David Vinayak Wallace <Gumby at MIT-MC>, Bug-Lispm at OZ
In-Reply-To: The message of 11 Mar 85 04:05-EST from David Vinayak Wallace <Gumby at MIT-MC>
Message-ID: <850311124728.1.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Monday, 11 March 1985, 04:05-EST
    From: David Vinayak Wallace <Gumby at MC>

    In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 24, on Lisp Machine Keith Moon:

    doesn't enforce the date's pastness.

Isn't this the same thing you reported last month about past times?  The
:past- is only a clue for resolving ambiguity.
12-Mar-85 17:42:42-EST,1069;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 12 Mar 85 17:37-EST
Received: from 40700015427 by MIT-MC via Chaosnet; 12 MAR 85  17:37:36 EST
Date: Tuesday, 12 March 1985, 17:36-EST
From: Cory Myers <cory at MIT-BUGS-BUNNY>
Subject: Is this a Flavor's Bug?
To: BUG-LISPM at OZ
Fcc: BUGS-BUNNY: /syla/dspg/cory/mbox
Message-ID: <850312173601.1.CORY@DAFFY-DUCK.MIT>

In Symbolics 3670 Release 6.0 Beta IIc, microcode TMC5-IO4-FPA-MIC 315,
FEP 22, with UTIL, on Lisp Machine Daffy Duck:

I define a flavor BAR as

(DEFFLAVOR BAR ()
	   ()
  )

(DEFMETHOD (BAR :AFTER :MESSAGE) ()
  (FORMAT T "In After method")
  :AFTER-RESULT)

When I do a (SEND (MAKE-INSTANCE 'BAR) :MESSAGE) it prints "In After
method" and returns NIL.  According to the documentation on :deamon
combination "All the :before methods are called, then the primary
(untyped) method for the outermost flavor that has one is called, then
all the after :afterr methods are called.  However, there is no primary
method handler for the method :MESSAGE.  Should this report an error?
12-Mar-85 20:37:33-EST,1167;000000000000
Received: from MIT-VAX by MIT-OZ via Chaosnet; 12 Mar 85 20:37-EST
Received: by mit-vax.Mit-chaos.Arpa (4.12/4.8) with CHAOS id AA21308; Tue, 12 Mar 85 20:30:45 est
Date: Tuesday, 12 March 1985, 20:30-EST
From: Christopher Eliot <CRE@SANCHO-PANZA>
Subject: Fquery
To: Bug-Lispm@OZ
Message-Id: <850312203023.3.CRE@SANCHO-PANZA.MIT>

The Fquery function ignores echo strings for :readline types.
This is not consistent with the documentation, as I read it.
The code can be fixed as shown below.  However, it might be
better to print the echo string on the same line as the input.
In other words suppress the terpri and supply it after printing the
echo.

Is it possible that FQUERY (or something like it) could
be made to do completion over the set of choices?  This
would be a big help.
	Chris Eliot

format:
(DEFSELECT READLINE-FQUERY-FUNCTION
  (:READ (STREAM)
   (WITH-INPUT-EDITING-OPTIONS ((:BRIEF-HELP FQUERY-HELP-FUNCTION))
     (READLINE-TRIM STREAM)))
  (:ECHO (ECHO STREAM)
   ECHO STREAM
   (send stream :string-out echo)		;Add This line to fix the problem.
   )
  (:MEMBER (STRING LIST)
   (MEM #'STRING-EQUAL STRING LIST)))
12-Mar-85 21:10:29-EST,1526;000000000000
Received: by MIT-OZ via Chaosnet; 12 Mar 85 21:10-EST
Received: from SCRC-EUPHRATES by SCRC-VALLECITO via CHAOS with CHAOS-MAIL id 1838; Tue 12-Mar-85 21:05:02-EST
Date: Tuesday, 12 March 1985, 21:04-EST
From: David A. Moon <Moon at SCRC-STONY-BROOK>
Subject: Is this a Flavor's Bug?
To: Cory Myers <cory at MIT-BUGS-BUNNY>
cc: BUG-LISPM at OZ
In-Reply-To: <850312173601.1.CORY@DAFFY-DUCK.MIT>
Message-ID: <850312210451.5.MOON@EUPHRATES.SCRC.Symbolics.COM>

    Date: Tuesday, 12 March 1985, 17:36-EST
    From: Cory Myers <cory at MIT-BUGS-BUNNY>

    In Symbolics 3670 Release 6.0 Beta IIc, microcode TMC5-IO4-FPA-MIC 315,
    FEP 22, with UTIL, on Lisp Machine Daffy Duck:

    I define a flavor BAR as

    (DEFFLAVOR BAR ()
	       ()
      )

    (DEFMETHOD (BAR :AFTER :MESSAGE) ()
      (FORMAT T "In After method")
      :AFTER-RESULT)

    When I do a (SEND (MAKE-INSTANCE 'BAR) :MESSAGE) it prints "In After
    method" and returns NIL.  According to the documentation on :deamon
    combination "All the :before methods are called, then the primary
    (untyped) method for the outermost flavor that has one is called, then
    all the after :afterr methods are called.  However, there is no primary
    method handler for the method :MESSAGE.  Should this report an error?

It's a feature that if you have no primary method, daemon method combination
automatically generates a primary method that does nothing but return NIL.

The value of an :AFTER method is never returned.
13-Mar-85 09:58:48-EST,1288;000000000000
Received: from MIT-VAX by MIT-OZ via Chaosnet; 13 Mar 85 09:58-EST
Received: by mit-vax.Mit-chaos.Arpa (4.12/4.8) with CHAOS id AA25835; Wed, 13 Mar 85 09:53:40 est
Date: Wednesday, 13 March 1985, 09:54-EST
From: Steve Ward <WARD@MIT-VAX>
To: BUG-LISPM@MIT-OZ

In Experimental HAL 1.63, Experimental Error Handler 1.5,
Experimental Font Editor 1.1, Experimental ZMACS 1.10,
Experimental Universal Command Loop 6.1, Experimental Compiler 2.4,
Experimental ZMail 1.2, Experimental Net-Config 3.5,
Experimental Suggestions 1.0, Experimental Local-File 5.8,
Experimental Explorer Streamer Tape 5.17,
Experimental User Profile Utility 2.2, Experimental Glossary 2.1,
Experimental VT100 1.5,
Experimental Explorer Serial & Parallel Ports 1.2,
Experimental PRINTER 1.0, Experimental Window System 1.30,
Experimental Utilities 1.7, Experimental Input Editor 1.0,
Experimental Formatter 2.0, Experimental Grasper 2.2,
Experimental Graphics Window 2.2, Experimental Graphics Editor 2.3,
Experimental Tree Drawing Utility 2.0,
Experimental Relational Table Management System 1.0,
Experimental NLMenu 2.9, Experimental PROLOG 1.1,
Experimental NLMenu-RTMS-Interface 4.1, Experimental HAL-A 1.0,
microcode 179, HAL1.63 TK MIT2, on G-COOPER:

This is a test of bug reports.

13-Mar-85 10:29:29-EST,1665;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 13 Mar 85 10:29-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 196395; Wed 13-Mar-85 10:16:49-EST
Date: Wednesday, 13 March 1985, 10:17-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: Fquery
To: Christopher Eliot <CRE at SANCHO-PANZA>, Bug-Lispm at OZ
In-Reply-To: <850312203023.3.CRE@SANCHO-PANZA.MIT>
Message-ID: <850313101718.3.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Tuesday, 12 March 1985, 20:30-EST
    From: Christopher Eliot <CRE@SANCHO-PANZA>

    The Fquery function ignores echo strings for :readline types.
    This is not consistent with the documentation, as I read it.
    The code can be fixed as shown below.  However, it might be
    better to print the echo string on the same line as the input.
    In other words suppress the terpri and supply it after printing the
    echo.

[I'm not answering this]

    Is it possible that FQUERY (or something like it) could
    be made to do completion over the set of choices?  This
    would be a big help.

Try something like
  (prompt-and-read '(:complete-string :alist (("foo" foo-data) ("bar" bar-data)))) 
Use backquote and comma to construct variable alist data.


    format:
    (DEFSELECT READLINE-FQUERY-FUNCTION
      (:READ (STREAM)
       (WITH-INPUT-EDITING-OPTIONS ((:BRIEF-HELP FQUERY-HELP-FUNCTION))
	 (READLINE-TRIM STREAM)))
      (:ECHO (ECHO STREAM)
       ECHO STREAM
       (send stream :string-out echo)		;Add This line to fix the problem.
       )
      (:MEMBER (STRING LIST)
       (MEM #'STRING-EQUAL STRING LIST)))
14-Mar-85 18:29:38-EST,1052;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 14 Mar 85 18:29-EST
Received: from MIT-JOE-LOUIS by MIT-MC via Chaosnet; 14 MAR 85  18:29:24 EST
Date: Thursday, 14 March 1985, 18:28-EST
From: Edward H Lay <EHL at OZ>
Subject: namespace confusion
To: BUG-LISPM at OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10, Experimental Boxer 6.0, on Lisp Machine Joe Louis:

Who does Reagan think he is, anyway.

Doesn't seem to have broken anything though...

17:24 Namespace server was unable to find HOST REAGAN in namespace MIT.
It will be removed from the namespace.

17:24 It is necessary to change the flavor of namespace object #<HOST REAGAN 1007563> from NET:HOST to FS:LISPM-HOST.
This may cause problems in dealing with this object until the next use of
 (SI:FULL-GC :SYSTEM-RELEASE T).

17:15 It is necessary to change the flavor of namespace object #<LISPM-HOST MIT|REAGAN 15140014> from FS:LISPM-HOST to NET:HOST.
This may cause problems in dealing with this object until the next use of
 (SI:FULL-GC :SYSTEM-RELEASE T).

15-Mar-85 01:28:46-EST,682;000000000000
Received: from MIT-APIARY-3 by MIT-OZ via Chaosnet; 15 Mar 85 01:28-EST
Date: Sunday, 25 March 1951, 07:44-EST
From: Henry Lieberman <Henry at OZ>
Subject: Break broken!
To: BUG-LISPM at OZ
Message-ID: <510325074409.3.HENRY@APIARY-3.MIT>

In Symbolics 3600 Release 6.0 Beta IIc, microcode TMC5-MIC 315, FEP 18, on Lisp Machine Apiary-3:

The Control-B break option of the stepper is completely broken in release 6.

(DEFUN FOO (X) (1+ X))
(STEP '(FOO 7))

Control-N until evaluating X, then Control-B.
You'll find X unbound, and STEP-FORM and STEP-VALUE variables wrong.

I need a patch for this ASAP, since I find that feature essential for debugging
my code.

15-Mar-85 01:40:06-EST,483;000000000000
Received: from MIT-APIARY-3 by MIT-OZ via Chaosnet; 15 Mar 85 01:39-EST
Date: Sunday, 25 March 1951, 07:55-EST
From: Henry Lieberman <Henry at OZ>
Subject: Break broken, part 2
To: BUG-LISPM at OZ
Message-ID: <510325075537.4.HENRY@APIARY-3.MIT>

In Symbolics 3600 Release 6.0 Beta IIc, microcode TMC5-MIC 315, FEP 18, on Lisp Machine Apiary-3:

Break is broken, even without the stepper:

(DEFUN BREAK-BROKEN (X) (BREAK BROKEN))
(BREAK-BROKEN 69)

finds X unbound. 

15-Mar-85 14:24:59-EST,457;000000000000
Received: from MIT-DUANE by MIT-OZ via Chaosnet; 15 Mar 85 14:23-EST
Date: Friday, 15 March 1985, 14:21-EST
From:  <jar at MIT-MC>
Subject: Inspecting lexical closures
To: BUG-LISPM at OZ
Message-ID: <"850315142132.1.jar@MC"@DUANE.MIT>

In Symbolics 3670 Release 6.0 Beta IIc, microcode TMC5-IO4-MIC 315,
FEP 22, on Lisp Machine Duane Allman:

The inspector does nothing useful with lexical closures.  Is this
behavior intentional?

Jonathan.
15-Mar-85 21:33:50-EST,1685;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 15 Mar 85 21:33-EST
Received: from MIT-TWEETY-PIE by MIT-MC via Chaosnet; 15 MAR 85  21:33:45 EST
Date: Friday, 15 March 1985, 21:34-EST
From: Webster Dove <dove at MIT-BUGS-BUNNY>
Subject: package not set properly
To: BUG-LISPM at OZ
Message-ID: <850315213411.1.DOVE@TWEETY-PIE.MIT>

In Symbolics 3600 Release 6.0 Beta IIc, microcode TMC5-FPA-MIC 315,
FEP 17, with UTIL,
on Lisp Machine Tweety Pie:

I have gotten in a state within release 6 that is outside my previous
experience, and quite annoying.  When in that state, I am in a lisp
listener having performed (pkg-goto 'foo) (a valid package that inherits
global).  In the editor are two files that were read in with attributes 
"-*- package: (bar) -*-" and "-*- package: (glob) -*-".

When I type <select> e, the first of those two editor buffers appears on
the screen.  However, the package remains 'foo.  If I type <suspend> the
package becomes 'bar.  When I type <resume> it goes back to 'foo.  This
is of course surprising since the package should always be 'bar.

When I switch to the other buffer, the package goes correctly to 'glob.
<suspend> and <resume> have no effect on the package.  Now I go back to
the previous buffer and Lo and Behold! the package is now 'bar and
<suspend> and <resume> have no effect.

Unfortunately, when I exit the editor the package remains 'bar instead
of going back to the proper package 'foo.  This in turn requires me to
retype (pkg-goto 'foo) to the lisp listener.

It appears that the mechanism of switching packages when the process
changes has become confused.

Is this a familiar behavior to anyone?
16-Mar-85 04:59:15-EST,3456;000000000000
Received: from MIT-MOON by MIT-OZ via Chaosnet; 16 Mar 85 04:59-EST
Date: Saturday, 16 March 1985, 04:59-EST
From: David Vinayak Wallace <Gumby at MC>
Subject: Example file won't work
To: BUG-LISPM at OZ
Cc: KMP at MC

In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 24, on Lisp Machine Keith Moon:

The FORMAT-MOUSE example file won't compile (at least if read into a
buffer and compled with Compile Buffer.

>>Error: REGION-MARKER has no SETF property.  Can't invert this reference:  (REGION-MARKER REGION)
While in the function SI:SETF-1  SETF  FUNCALL
While compiling (:METHOD MOUSE-SENSITIVE-REGIONS-MIXIN :AFTER :END-OF-PAGE-EXCEPTION)

SI:SETF-1:  (P.C. = 132)
   Arg 0 (X): (SETF (REGION-MARKER REGION) T)
   Local 1 (REF): (REGION-MARKER REGION)
   Local 2 (VAL): T
   Local 3 (FCN): NIL

SETF:  (P.C. = 3)
   Arg 0 (X): (SETF (REGION-MARKER REGION) T)

FUNCALL:  (P.C. = 5)
   Arg 0 (FN): #<DTP-COMPILED-FUNCTION SETF 6354416>
   Rest arg (ARGS): ((SETF (REGION-MARKER REGION) T))

MACROEXPAND-1:  (P.C. = 146)
   Arg 0 (MACRO-CALL): (SETF (REGION-MARKER REGION) T)
   --Defaulted args:--
   Arg 1 (IGNORE): NIL

COMPILER:TRANSFORM:  (P.C. = 437)
   Arg 0 (FORM): (SETF (REGION-MARKER REGION) T)
   Arg 1 (DESTINATION): IGNORE
   --Defaulted args:--
   Arg 2 (TRANSFORM-P): T
   Arg 3 (OPTIMIZE-P): T

COMPILER:PHASE-1:  (P.C. = 15)
   Arg 0 (FORM): (SETF (REGION-MARKER REGION) T)
   Arg 1 (DESTINATION): IGNORE
   --Defaulted args:--
   Arg 2 (DO-TRANSFORM): T

COMPILER:PHASE-1-PROGN:  (P.C. = 22)
   Arg 0 (FORMS): ((SETF (REGION-MARKER REGION) T) (PUSH REGION NEW-REGIONS))
   Arg 1 (DESTINATION): IGNORE

(:PROPERTY PROGN COMPILER:PHASE-1):  (P.C. = 4)
   Arg 0 (BODY): ((SETF (REGION-MARKER REGION) T) (PUSH REGION NEW-REGIONS))
   Arg 1 (DESTINATION): IGNORE

Rest of stack:
COMPILER:PHASE-1:  (P.C. = 245)
COMPILER:PHASE-1-PROGN:  (P.C. = 27)
(:PROPERTY COND COMPILER:PHASE-1):  (P.C. = 64)
COMPILER:PHASE-1:  (P.C. = 245)
COMPILER:PHASE-1-PROG:  (P.C. = 222)
(:PROPERTY PROG COMPILER:PHASE-1):  (P.C. = 5)
COMPILER:PHASE-1:  (P.C. = 245)
COMPILER:PHASE-1-PROGN:  (P.C. = 22)
COMPILER:PHASE-1-PROGN-WITH-BINDING-STACK-LEVEL:  (P.C. = 41)
COMPILER:PHASE-1-LET:  (P.C. = 27)
(:PROPERTY LET COMPILER:PHASE-1):  (P.C. = 5)
COMPILER:PHASE-1:  (P.C. = 245)
COMPILER:PHASE-1-PROGN:  (P.C. = 27)
COMPILER:PHASE-1-FUNCTION-DEFINITION:  (P.C. = 250)
COMPILER:PHASE-1-EXTERNAL-FUNCTION:  (P.C. = 24)
COMPILER:RUN-PHASE-1-FUNCTION:  (P.C. = 67)
COMPILER:COMPILE-DEFINITION-1:  (P.C. = 10)
COMPILER:COMPILE-DEFINITION:  (P.C. = 43)
(:INTERNAL COMPILER:COMPILE-TO-CORE 0.):  (P.C. = 5)
COMPILER:COMPILE-TO-CORE:  (P.C. = 12)
COMPILER:COMPILE-FORM-FUNCTION:  (P.C. = 41)
COMPILER:COMPILE-FROM-STREAM-1:  (P.C. = 306)
SYS:COMPILER-LET-INTERNAL:  (P.C. = 226)
COMPILER:COMPILE-FROM-STREAM-1:  (P.C. = 264)
COMPILER:COMPILE-FROM-STREAM-1:  (P.C. = 172)
COMPILER:PROCESS-FORMS-FROM-STREAM:  (P.C. = 117)
COMPILER:COMPILE-FROM-STREAM:  (P.C. = 235)
ZWEI:COMPILE-INTERVAL:  (P.C. = 141)
ZWEI:COMPILE-PRINT-INTERVAL:  (P.C. = 76)
ZWEI:COMPILE-BUFFER:  (P.C. = 34)
ZWEI:COM-COMPILE-BUFFER:  (P.C. = 5)
ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 214)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 41)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
16-Mar-85 05:16:11-EST,383;000000000000
Received: from MIT-MOON by MIT-OZ via Chaosnet; 16 Mar 85 05:16-EST
Date: Saturday, 16 March 1985, 05:16-EST
From: David Vinayak Wallace <Gumby at MC>
Subject: FIRST, SECOND, et al
To: BUG-LISPM at OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 24, on Lisp Machine Keith Moon:

Why are these FUNCTIONS that call CAR and CDR instead of substs for CAR,
CADR, etc?
16-Mar-85 05:18:36-EST,337;000000000000
Received: from MIT-MOON by MIT-OZ via Chaosnet; 16 Mar 85 05:18-EST
Date: Saturday, 16 March 1985, 05:18-EST
From: David Vinayak Wallace <Gumby at MC>
Subject: Never mind
To: BUG-LISPM at OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 24, on Lisp Machine Keith Moon:

Yow!  3600 has no CADR!  great!

Emily Litella
17-Mar-85 00:13:54-EST,1366;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 17 Mar 85 00:13-EST
Received: from SCRC-RIO-DE-JANEIRO by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 198559; Sun 17-Mar-85 00:12:49-EST
Date: Sunday, 17 March 1985, 00:13-EST
From: Kent M Pitman <KMP at SCRC-STONY-BROOK>
Subject: Example file won't work
To: Gumby at MIT-MC, BUG-LISPM at OZ
cc: KMP at MIT-MC
In-Reply-To: The message of 16 Mar 85 04:59-EST from David Vinayak Wallace <Gumby at MIT-MC>
Message-ID: <850317001309.3.KMP@RIO-DE-JANEIRO.SCRC.Symbolics.COM>

    Date: Saturday, 16 March 1985, 04:59-EST
    From: David Vinayak Wallace <Gumby at MC>
    Re:   Example file won't work

    In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 24, on Lisp Machine Keith Moon:

    The FORMAT-MOUSE example file won't compile (at least if read into a
    buffer and compled with Compile Buffer.

    >>Error: REGION-MARKER has no SETF property.  Can't invert this reference:  (REGION-MARKER REGION)
    While in the function SI:SETF-1  SETF  FUNCALL

On page 48 of the WINDEX section of my copy of the Encyclopedia Symbolica, it quite
clearly says:

  How to Run
   1. Type:
      (load "sys: examples; overlap")
      (load "sys: examples; format-mouse")
      ...

Moral: You must have SYS:EXAMPLES;OVERLAP loaded. It has the definition for REGION-MARKER.
-kmp
18-Mar-85 06:00:10-EST,398;000000000000
Received: from MIT-JIMI by MIT-OZ via Chaosnet; 18 Mar 85 06:00-EST
Date: Monday, 18 March 1985, 06:00-EST
From: David Vinayak Wallace <Gumby at MC>
Subject: Example file won't work
To: Kent M Pitman <KMP at STONY-BROOK>
Cc: BUG-LISPM at OZ
In-reply-to: <850317001309.3.KMP@RIO-DE-JANEIRO.SCRC.Symbolics.COM>

I don't have a copy of the magnum opus on hand.  Why can't it load it
itself?
18-Mar-85 13:12:29-EST,1238;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 18 Mar 85 13:11-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 198968; Mon 18-Mar-85 10:39:36-EST
Date: Monday, 18 March 1985, 10:39-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: Inspecting lexical closures
To: jar at MIT-MC, BUG-LISPM at OZ
In-Reply-To: <"850315142132.1.jar@MC"@DUANE.MIT>
Message-ID: <850318103947.4.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Friday, 15 March 1985, 14:21-EST
    From:  <jar at MIT-MC>

    In Symbolics 3670 Release 6.0 Beta IIc, microcode TMC5-IO4-MIC 315,
    FEP 22, on Lisp Machine Duane Allman:

    The inspector does nothing useful with lexical closures.  Is this
    behavior intentional?

No, it's one of the things that got missed in the conversion to lexical
scoping.  There are three types of lexical closures in our system:
interpreter, compiler heap consed, and compiler stack consed.  If you
ever get a compiler stack consed lexical closure into the inspector, you
are asking for trouble.  Anyway, the format of the environments is
different, for anybody willing to take a crack at this.  I imagine much
code can be borrowed from the debugger.
18-Mar-85 13:13:05-EST,856;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 18 Mar 85 13:12-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 198979; Mon 18-Mar-85 10:53:09-EST
Date: Monday, 18 March 1985, 10:53-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: FIRST, SECOND, et al
To: David Vinayak Wallace <Gumby at MIT-MC>, BUG-LISPM at OZ
In-Reply-To: The message of 16 Mar 85 05:16-EST from David Vinayak Wallace <Gumby at MIT-MC>
Message-ID: <850318105320.8.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Saturday, 16 March 1985, 05:16-EST
    From: David Vinayak Wallace <Gumby at MC>

    In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 24, on Lisp Machine Keith Moon:

    Why are these FUNCTIONS that call CAR and CDR instead of substs for CAR,
    CADR, etc?

They are SUBSTs in Release 6.
18-Mar-85 13:13:28-EST,928;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 18 Mar 85 13:12-EST
Received: from SCRC-MENOTOMY by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 199000; Mon 18-Mar-85 11:22:30-EST
Date: Monday, 18 March 1985, 11:23-EST
From: Robert O. Mathews <rom at SCRC-VIXEN>
Subject: Example file won't work
To: Gumby at MIT-MC
cc: KMP at SCRC-STONY-BROOK, BUG-LISPM at OZ
In-Reply-To: The message of 18 Mar 85 06:00-EST from David Vinayak Wallace <Gumby at MIT-MC>
Message-ID: <850318112312.3.ROM@MENOTOMY.SCRC.Symbolics.COM>

    Date: Monday, 18 March 1985, 06:00-EST
    From: David Vinayak Wallace <Gumby at MC>

    I don't have a copy of the magnum opus on hand.  Why can't it load it
    itself?

Look at SYS: EXAMPLES; -README-.TEXT.  It tells you the same thing.  Why
should it load the other file itself?  I'd prefer an additional comment
at the front that says you have to load the other file first.
18-Mar-85 14:54:01-EST,1003;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 18 Mar 85 14:43-EST
Date: 18 March 1985 14:42-EST
From: David Vinayak Wallace <GUMBY @ MIT-MC>
Subject:  Example file won't work
To: rom @ SCRC-RIVERSIDE
cc: BUG-LISPM @ MIT-OZ, KMP @ SCRC-STONY-BROOK
In-reply-to: Msg of Mon 18 Mar 85 11:23 EST from Robert O. Mathews <rom at SCRC-RIVERSIDE.ARPA>

    Date: Mon, 18 Mar 85 11:23 EST
    From: Robert O. Mathews <rom at SCRC-RIVERSIDE.ARPA>

        Date: Monday, 18 March 1985, 06:00-EST
        From: David Vinayak Wallace <Gumby at MC>

        I don't have a copy of the magnum opus on hand.  Why can't it load it
        itself?

    Look at SYS: EXAMPLES; -README-.TEXT.  It tells you the same thing.  Why
    should it load the other file itself?  I'd prefer an additional comment
    at the front that says you have to load the other file first.

Why not?  It's you're not going to load it unless you intend to use it, and
you can't run it alone.  What's the problem?

david
18-Mar-85 21:20:13-EST,479;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 18 Mar 85 21:19-EST
Received: from MIT-REAGAN by MIT-MC via Chaosnet; 18 MAR 85  21:18:49 EST
Date: Monday, 18 March 1985, 21:18-EST
From: The File Server <bug-lispm at OZ>
Subject: SWW namespace really should be fixed
To: BUG-LISPM at OZ
Message-ID: <850318211848.1.FILE-SERVER@REAGAN.MIT>

In Symbolics 3600 Release 6.0 Beta IIc, microcode TMC5-MIC 315,
on Lisp Machine Ronald Reagan:

SWW|RR is not helping reagan


18-Mar-85 21:28:03-EST,1698;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 18 Mar 85 21:27-EST
Received: from MIT-REAGAN by MIT-MC via Chaosnet; 18 MAR 85  21:26:09 EST
Date: Monday, 18 March 1985, 21:26-EST
From: CJL at OZ
Sender: bug-lispm at OZ
Subject: SWW namespace really should be fixed
To: BUG-LISPM at OZ
Message-ID: <850318212611.2.FILE-SERVER@REAGAN.MIT>

In Symbolics 3600 Release 6.0 Beta IIc, microcode TMC5-MIC 315,
on Lisp Machine Ronald Reagan:

SWW|RR is not helping reagan in any way.  Somebody who is allowed should
fix the sww namespace object to have MIT|REAGAN as a secondary server,
NOT SWW|RR, and delete SWW|RR.

(send (neti:find-namespace-named "SWW") :property-list)
(:PRIMARY-NAME-SERVER
 (#<LISPM-HOST SWW|WHITE 62301613>)
 :SECONDARY-NAME-SERVER
 (#<LISPM-HOST SCRC-RIVERSIDE 62301065> #<LISPM-HOST SPA|RUSSIAN 62301715>
                                        #<LISPM-HOST WAIKATO 62304234>
                                        #<LISPM-HOST SCH|GODZILLA 62302034>
                                        #<LISPM-HOST SCRC-STONY-BROOK 62300756>
                                        #<LISPM-HOST GOLDILOCKS 62301202>
                                        #<LISPM-HOST APIARY-6 62301255>
                                        #<RANDOM-HOST SWW|RR 62423220>)
 :SEARCH-RULES
 (#<NAMESPACE SWW 62301534> #<NAMESPACE SCRC 62300632>
                            #<NAMESPACE SCH 62301731>
                            #<NAMESPACE SPA 62301627>
                            #<NAMESPACE MIT 62300564>
                            #<NAMESPACE INTERNET 62301366>)
 :DESCRIPTOR-FILE
 "white:>sys>site>sww-namespace.text"
 :INTERNET-DOMAIN-NAME
 "SWW.Symbolics.COM")
19-Mar-85 11:47:32-EST,1257;000000000000
Received: from MIT-VAX by MIT-OZ via Chaosnet; 19 Mar 85 11:47-EST
Received: by mit-vax.Mit-chaos.Arpa (4.12/4.8) with CHAOS id AA02893; Tue, 19 Mar 85 11:40:24 est
Date: Tuesday, 19 March 1985, 11:40-EST
From: Richard E. Zippel <RZ@MIT-MC>
Subject: Namespaces and Sites
To: BUG-LISPM@OZ
Message-Id: <850319114019.3.RZ@GSTAAD.MIT>

In Symbolics 3670 Release 6.0 Beta IIc, microcode TMC5-IO4-MIC 315, on Lisp Machine Gstaad:

This is more a suggestion than a bug report.   

It seems odd to me that namespaces have namespace search lists.  
Wouldn't it be more flexible for each site to have its own namespace
search list?  

For instance at MIT, where there are several sites (:AI, :MIT, :ML,
:ZOO), we are all forced to search the same set of namespaces.  The :ML
site would like to also search the Harris namespace.  This could be
accomplished in two ways it seems.  Firstly, by adding the the Harris
namespace to the MIT namespace, thus forcing all hosts at MIT to search
it.  Or secondly, by creating a new ML namespace that searches the
Harris and MIT namespaces.  The second solution would force us to create
another namespace server which we would really prefer not to do.

Perhaps I've missed some obvious third solution? 
19-Mar-85 11:58:03-EST,29956;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 19 Mar 85 11:57-EST
Received: from MIT-REAGAN by MIT-MC via Chaosnet; 19 MAR 85  11:56:29 EST
Date: Tuesday, 19 March 1985, 11:56-EST
From: CJL at OZ
Sender: bug-lispm at OZ
Subject: Pathname lossage
To: BUG-LISPM at OZ
Message-ID: <850319115613.1.FILE-SERVER@REAGAN.MIT>

In Symbolics 3600 Release 6.0 Beta IIc, microcode TMC5-MIC 315, on Lisp Machine Ronald Reagan:

(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME) seems to infinitely recurse on reagan.
I included notifications in this report because there was a "Interned pathnames..."
notification.

24 Notifications, from 0 to 23:
11:50:58 Warning:  GC is waiting to flip, but flipping has been inhibited for 1 minute 11 seconds.
11:50:18 Warning:  GC is waiting to flip, but flipping has been inhibited for 31 seconds.
11:49:57 Warning:  GC is waiting to flip, but flipping has been inhibited for 10 seconds.
11:49:15 Process NFILE Control (DUANE) got an error
11:46:13 Process NFILE Control (B) got an error
11:44:11 Process NFILE Control (DUANE) got an error
11:33:59 Process NFILE Control (DUANE) got an error
11:27:02 Process NFILE Control (DUANE) got an error
11:26:56 GC: Finished waiting to flip.
11:26:29 Warning:  GC is waiting to flip, but flipping has been inhibited for 1 minute 11 seconds.
11:25:49 Warning:  GC is waiting to flip, but flipping has been inhibited for 31 seconds.
11:25:28 Warning:  GC is waiting to flip, but flipping has been inhibited for 10 seconds.
11:25:17 Process NFILE Control (DUANE) got an error
11:24:58 Process NFILE Control (B) got an error
11:19:25 Process NFILE Control (B) got an error
11:06:44 Interned pathnames on host MIT|REAGAN are being forgotten because of
         an incompatible change in the host's attributes.
         This may cause problems when accessing files on this host.
         Recent servers contacted are SCH|GODZILLA
11:06:44 Merging #<LISPM-HOST MIT|REAGAN 62301352> with #<RANDOM-HOST RR 62374414>.  This may cause problems in dealing with these objects until the next use of (SI:FULL-GC).
         Recent servers contacted are SCH|GODZILLA
11:04:27 Namespace SWW has become unloaded:
         no longer server for this namespace
10:50:15 The object #<LISPM-HOST SEW|HYDRA 62376655> in namespace SEW contained a reference to PRINTER LAIKA which could not be resolved.
         The printer named #<NAME SEW|LAIKA 62376651> was not found.
         No printer with that name is already known by the local machine,
         but it is not certain that there is no such printer.
         No servers are known for namespace SEW.
         Recent servers contacted are SCH|GODZILLA SPA|RUSSIAN SCRC-RIVERSIDE SWW|WHITE
10:44:55 Namespace Lock SPA|RUSSIAN: Reloading namespace SPA.
         Recent servers contacted are SPA|RUSSIAN SCRC-RIVERSIDE SWW|WHITE
10:44:55 Namespace SPA has become unloaded:
         records don't go back far enough
         Recent servers contacted are SPA|RUSSIAN SCRC-RIVERSIDE SWW|WHITE
10:43:29 The object #<NAMESPACE SWW 62301534> in namespace SWW contained a reference to HOST RR which could not be resolved.
         The host named #<NAME SWW|RR 62350241> was not found.
         No host with that name is already known by the local machine,
         but it is not certain that there is no such host.
         Some namespace server did not respond.
         Recent servers contacted are SWW|WHITE
10:41:00 Moving name INTERNET|WSMR from #<UNIX-HOST WSMR06 1565041> to #<UNIX-HOST WSMR01 1557354>.
         Recent servers contacted are SCRC-RIVERSIDE
03:31:12 Services are enabled now.

>>Error: The control stack overflowed.
While in the function ARRAY-ACTIVE-LENGTH  SYS:SXHASH-STRING  SI:EQUAL-HASH

ARRAY-ACTIVE-LENGTH:
   Arg 0 (ARRAY): "NIL"
   Local 0 (ARRAY): NIL

SYS:SXHASH-STRING:  (P.C. = 4)
   Arg 0 (STRING): "NIL"

SI:EQUAL-HASH:  (P.C. = 102)
   Arg 0 (X): (NIL NIL NIL NIL)
   Local 0 (X): (NIL NIL NIL)

(:METHOD SI:EQUAL-HASH-TABLE :GET-HASH):  (P.C. = 45)
   Arg 0 (SELF): #<CASE-INSENSITIVE-PATHNAME-HASH-TABLE REAGAN>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:EQUAL-HASH-TABLE -- 9. IV's, 0. FL's 105436772>
   Arg 2 (OPERATION): :GET-HASH
   Arg 3 (KEY): (NIL NIL NIL NIL)

(:METHOD FS:PATHNAME-HASH-TABLE-MIXIN :GET-PATHNAME):  (P.C. = 6)
   Arg 0 (SELF): #<CASE-INSENSITIVE-PATHNAME-HASH-TABLE REAGAN>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:PATHNAME-HASH-TABLE-MIXIN -- 1. IV's, 0. FL's 105437037>
   Arg 2 (OPERATION): :GET-PATHNAME
   Arg 3 (DEV): :UNSPECIFIC
   Arg 4 (DIR): NIL
   Arg 5 (NAM): NIL
   Arg 6 (TYP): NIL
   Arg 7 (VRS): NIL
   Arg 8 (OTHERS): NIL
   Arg 9 (KEY): (NIL NIL NIL NIL)

(:METHOD NET:NO-DEVICE-HOST-MIXIN :GET-PATHNAME):  (P.C. = 27)
   Arg 0 (SELF): #<LISPM-HOST REAGAN 62374414>
   Arg 1 (SELF-MAPPING-TABLE): NET:NO-DEVICE-HOST-MIXIN
   Arg 2 (OPERATION): :GET-PATHNAME
   Arg 3 (DEV): :UNSPECIFIC
   Arg 4 (DIR): NIL
   Arg 5 (NAM): NIL
   Arg 6 (TYP): NIL
   Arg 7 (VRS): NIL
   Arg 8 (OTHERS): NIL

FS:MAKE-PATHNAME-1:  (P.C. = 607)
   Arg 0 (ACTOR): #<LMFS-PATHNAME "B:>foo>foo.lisp">
   Rest arg (OPTIONS): (:DEFAULT-HOST #<LISPM-HOST REAGAN 62374414> :DEFAULT-DEVICE :UNSPECIFIC :DEFAULT-DIRECTORY ("foo") :DEFAULT-NAME "foo" :DEFAULT-TYPE "lisp" ...)

(:METHOD FS:PATHNAME :NEW-PATHNAME):  (P.C. = 22)
   Arg 0 (SELF): #<LMFS-PATHNAME "B:>foo>foo.lisp">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:PATHNAME -- 8. IV's, 1. FL's 105416764>
   Arg 2 (OPERATION): :NEW-PATHNAME
   Rest arg (OPTIONS): (:RAW-DEVICE :UNSPECIFIC :RAW-DIRECTORY NIL :RAW-NAME NIL :RAW-TYPE NIL :VERSION NIL ...)

Rest of stack:
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 67)
(:METHOD FS:PATHNAME :NEW-DEFAULT-PATHNAME):  (P.C. = 316)
(:INTERNAL (:METHOD FS:PATHNAME :COMBINED :NEW-DEFAULT-PATHNAME) 0.):  (P.C. = 11)
(:METHOD FS:PATHNAME :WHOPPER :NEW-DEFAULT-PATHNAME):  (P.C. = 64)
(:METHOD FS:PATHNAME :COMBINED :NEW-DEFAULT-PATHNAME):  (P.C. = 12)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 55)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 61)
FS:MAKE-PATHNAME:  (P.C. = 44)
FS:NFILE-SERVER-HOME-DIRECTORY:  (P.C. = 20)
(:PROPERTY :LOGIN FS:FILE-SERVER-COMMAND):  (P.C. = 12)
FS:NFILE-SERVER-DISPATCH:  (P.C. = 12)
FS:NFILE-SERVER-COMMAND-LOOP:  (P.C. = 151)
FS:NFILE-SERVER:  (P.C. = 114)
(:METHOD FS:NFILE-SERVER-INSTANCE :SERVER-TOP-LEVEL):  (P.C. = 7)
NETI:FUNCALL-SERVER-FUNCTION:  (P.C. = 75)
NETI:BYTE-STREAM-INVOKE-SERVICE-FUNCTION:  (P.C. = 50)
NETI:INVOKE-SERVER-INTERNAL:  (P.C. = 217)
SI:PROCESS-RUN-FUNCTION-INTERNAL:  (P.C. = 52)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
19-Mar-85 18:14:19-EST,782;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 19 Mar 85 18:13-EST
Received: from MIT-SARAH by MIT-MC via Chaosnet; 19 MAR 85  18:12:46 EST
Date: Tuesday, 19 March 1985, 18:12-EST
From: Devon S. McCullough <Devon at MIT-MC>
To: BUG-LISPM at MIT-OZ

In Experimental System 99.13, CADR 4.0, Experimental ZMail 54.3,
MIT-Specific 23.0, microcode 320, GC@2 Simple CAM, on Sarah Bernhardt:

Meta-Shift-D LDB dies in STRING=
 arg 0 = ("SETF")
 arg 1 = ("FUNCTION" . doc-string)
 rest arg = (FUNCTION)

at least I got to read the doc-string in the error message.
Funny, it doesn't croak on most other functions.

This is even after re-compiling com-long-documentation from sys:patch;system-99-9
(I couldn't make sense out of the code, never did read the chapter on LOOP)
19-Mar-85 21:18:53-EST,4120;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 19 Mar 85 21:18-EST
Received: from MIT-OZ by MIT-MC via Chaosnet; 19 MAR 85  21:17:07 EST
Received: from MIT-MOON by MIT-OZ via Chaosnet; 19 Mar 85 21:17-EST
Date: Tue, 19 Mar 85 21:16 EST
From: Alan Bawden <Alan@MIT-MC.ARPA>
To: BUG-LISPM@MIT-MC.ARPA

In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 24, on Lisp Machine Janis Joplin:

I just found this machine in this state after it had just been cold-booted.

>>Error: The object (:HOST #<NAME SWW|RR 15477044> #<NAMESPACE SWW 15140220>) is not a valid function
While in the function (:HOST #<NAME SWW|RR 15477044> #<NAMESPACE SWW 15140220>)  NET:FIND-PATHS-TO-SERVICE-ON-HOST  NETI:FIND-PATH-TO-SERVICE-ON-HOST

(:HOST #<NAME SWW|RR 15477044> #<NAMESPACE SWW 15140220>):
   Arg 0: :NETWORK-SERVICES

NET:FIND-PATHS-TO-SERVICE-ON-HOST:  (P.C. = 41)
   Arg 0 (SERVICE): :NAMESPACE-TIMESTAMP
   Arg 1 (HOST): (:HOST #<NAME SWW|RR 15477044> #<NAMESPACE SWW 15140220>)
   Arg 2 (ONLY-NEED-BEST): T

NETI:FIND-PATH-TO-SERVICE-ON-HOST:  (P.C. = 7)
   Arg 0 (SERVICE): :NAMESPACE-TIMESTAMP
   Arg 1 (HOST): (:HOST #<NAME SWW|RR 15477044> #<NAMESPACE SWW 15140220>)

NETI:GET-LATEST-TIMESTAMP-FROM-NETWORK:  (P.C. = 34)
   Arg 0 (NAMESPACE): #<NAMESPACE SWW 15140220>

NETI:GET-INCREMENTAL-UPDATE-FROM-NETWORK:  (P.C. = 440)
   Arg 0 (NAMESPACE): #<NAMESPACE SWW 15140220>
   Arg 1 (STARTING-TIMESTAMP): 1012

(:METHOD NETI:NAMESPACE :GET-LATEST-TIMESTAMP):  (P.C. = 21)
   Arg 0 (SELF): #<NAMESPACE SWW 15140220>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NETI:NAMESPACE -- 8. IV's, 0. FL's 52475062>
   Arg 2 (OPERATION): :GET-LATEST-TIMESTAMP

(:METHOD NETI:NAMESPACE :VALIDATION-TIMESTAMP):  (P.C. = 20)
   Arg 0 (SELF): #<NAMESPACE SWW 15140220>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NETI:NAMESPACE -- 8. IV's, 0. FL's 52475062>
   Arg 2 (OPERATION): :VALIDATION-TIMESTAMP

(:METHOD NET:OBJECT :CHECK-VALIDITY):  (P.C. = 102)
   Arg 0 (SELF): #<NAMESPACE SWW 15140220>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NET:OBJECT -- 3. IV's, 1. FL's 52475072>
   Arg 2 (OPERATION): :CHECK-VALIDITY
   Arg 3 (RELATIVE-TO-NAMESPACE): #<NAMESPACE SWW 15140220>
   Arg 4 (FORCE-P): NIL

Rest of stack:
(:METHOD NET:OBJECT :CHECK-VALIDITY):  (P.C. = 34)
NETI:FIND-OBJECT-NAMED-IN-NAMESPACE:  (P.C. = 45)
NETI:PARSE-NAME:  (P.C. = 104)
(:INTERNAL (:PROPERTY :NAME NETI:PRIMITIVE-TYPE) 0):  (P.C. = 6)
(:PROPERTY :NAME NETI:PRIMITIVE-TYPE):  (P.C. = 12)
NETI:CONVERT-TOKENS:  (P.C. = 15)
(:INTERNAL (:PROPERTY :ELEMENT NETI:PRIMITIVE-TYPE) 0):  (P.C. = 5)
(:PROPERTY :ELEMENT NETI:PRIMITIVE-TYPE):  (P.C. = 12)
NETI:CONVERT-TOKENS:  (P.C. = 15)
NETI:RECORD-INTO-PROPERTY-LIST-1:  (P.C. = 54)
NETI:RECORD-INTO-PROPERTY-LIST:  (P.C. = 75)
NETI:QUERY-NAMESPACE-SERVER:  (P.C. = 427)
(:METHOD NET:OBJECT :CHECK-VALIDITY):  (P.C. = 227)
NETI:FIND-OBJECT-NAMED-IN-NAMESPACE:  (P.C. = 45)
NETI:CONVERT-TOKENS:  (P.C. = 154)
(:INTERNAL (:PROPERTY :PAIR NETI:PRIMITIVE-TYPE) 0):  (P.C. = 5)
(:PROPERTY :PAIR NETI:PRIMITIVE-TYPE):  (P.C. = 12)
NETI:CONVERT-TOKENS:  (P.C. = 15)
(:INTERNAL (:PROPERTY :ELEMENT NETI:PRIMITIVE-TYPE) 0):  (P.C. = 5)
(:PROPERTY :ELEMENT NETI:PRIMITIVE-TYPE):  (P.C. = 12)
NETI:CONVERT-TOKENS:  (P.C. = 15)
NETI:RECORD-INTO-PROPERTY-LIST-1:  (P.C. = 54)
NETI:RECORD-INTO-PROPERTY-LIST:  (P.C. = 75)
NETI:QUERY-NAMESPACE-SERVER:  (P.C. = 427)
(:METHOD NET:OBJECT :CHECK-VALIDITY):  (P.C. = 227)
NETI:FIND-OBJECT-NAMED-IN-NAMESPACE:  (P.C. = 45)
NETI:CONVERT-TOKENS:  (P.C. = 154)
(:INTERNAL (:PROPERTY :ELEMENT NETI:PRIMITIVE-TYPE) 0):  (P.C. = 5)
(:PROPERTY :ELEMENT NETI:PRIMITIVE-TYPE):  (P.C. = 12)
NETI:CONVERT-TOKENS:  (P.C. = 15)
NETI:RECORD-INTO-PROPERTY-LIST-1:  (P.C. = 54)
NETI:RECORD-INTO-PROPERTY-LIST:  (P.C. = 75)
NETI:QUERY-NAMESPACE-SERVER:  (P.C. = 427)
NETI:GET-INCREMENTAL-UPDATE-FROM-NETWORK:  (P.C. = 421)
(:METHOD NETI:NAMESPACE :GET-LATEST-TIMESTAMP):  (P.C. = 21)
NETI:INITIALIZE-NAMESPACES-AND-NETWORK:  (P.C. = 155)
LISP-REINITIALIZE:  (P.C. = 443)
SI:LISP-TOP-LEVEL:  (P.C. = 3)
19-Mar-85 22:14:04-EST,1391;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 19 Mar 85 22:13-EST
Received: from MIT-TWEETY-PIE by MIT-MC via Chaosnet; 19 MAR 85  21:55:22 EST
Date: Tuesday, 19 March 1985, 21:54-EST
From: Cory Myers <cory at MIT-BUGS-BUNNY>
Subject: INHIBIT-FDEFINE-WARNINGS
To: BUG-LISPM at OZ
Fcc: BUGS-BUNNY: /syla/dspg/cory/mbox
Message-ID: <850319215449.1.CORY@TWEETY-PIE.MIT>

In Symbolics 3600 Release 6.0 Beta IIc, microcode TMC5-FPA-MIC 315,
FEP 17, with UTIL, on Lisp Machine Tweety Pie:

I hope I am not missing something obvious but here goes:

How do I specify in a file that a function definition replaces a
function definition in another file.  I have tried (COMPILER-LET
((INHIBIT-FDEFINE-WARNINGS T)) (DEFUN ...)) and that works when I
compile the region or buffer during editing but not when I compile then
load the file.  (Of course it fails, because compiler-let has no effect
when the file is loaded.)  If I use LET (or LET-GLOBALLY) instead of
COMPILER-LET I get no warnings but the function is not compiled - it
becomes some sort of digested-lambda.  I can get around all of this if I
am willing to put the patch-file attribute into the file but I am not
willing since this is only one function in a very large file.  How do I
declare that this function redefinition is ok (at both compile and load
time) and to really compile it?

Thanks,

	Cory Myers
19-Mar-85 22:15:07-EST,5334;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 19 Mar 85 22:14-EST
Received: from MIT-TWEETY-PIE by MIT-MC via Chaosnet; 19 MAR 85  21:58:20 EST
Date: Tuesday, 19 March 1985, 21:58-EST
From: Cory Myers <cory at MIT-BUGS-BUNNY>
Subject: Mail Blowout
To: BUG-LISPM at OZ
Message-ID: <850319215808.2.CORY@TWEETY-PIE.MIT>

In Symbolics 3600 Release 6.0 Beta IIc, microcode TMC5-FPA-MIC 315,
FEP 17, with UTIL, on Lisp Machine Tweety Pie:

I sent a bug report in about something else, this put a file copy into
my mbox.  I then tried to save and boom!

>>Trap: The first argument given to the AR-1 instruction, NIL, was not an array.
While in the function (:METHOD ZWEI:SEQUENCE :EXPUNGE)  (:METHOD ZWEI:UNIX-MAIL-BUFFER :COMBINED :EXPUNGE)  ZWEI:EXPUNGE-SEQUENCE

(:METHOD ZWEI:SEQUENCE :EXPUNGE):  (P.C. = 355)
   Arg 0 (SELF): #<UNIX-MAIL-BUFFER "BUGS-BUNNY: //syla//dspg//cory//mbox" 50014717>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:SEQUENCE -- 6. IV's, 0. FL's 143403526>
   Arg 2 (OPERATION): :EXPUNGE
   Arg 3 (DELETED-MSGS): T
   Local 4 (OLD-MOD-TICK): 13781
   Local 5 (BUFFER-P): T
   Local 6 (LENGTH): 6

(:METHOD ZWEI:UNIX-MAIL-BUFFER :COMBINED :EXPUNGE):  (P.C. = 47)
   Arg 0 (SELF): #<UNIX-MAIL-BUFFER "BUGS-BUNNY: //syla//dspg//cory//mbox" 50014717>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:UNIX-MAIL-BUFFER -- 0. IV's, 5. FL's 143403564>
   Arg 2 (.OPERATION.): :EXPUNGE
   Rest arg (.DAEMON-CALLER-ARGS.): NIL
   Local 3 (.DAEMON-CALLER-ARGS.): (T)

ZWEI:EXPUNGE-SEQUENCE:  (P.C. = 6)
   Arg 0 (SEQUENCE): #<UNIX-MAIL-BUFFER "BUGS-BUNNY: //syla//dspg//cory//mbox" 50014717>
   --Defaulted args:--
   Arg 1 (DELETED-MSGS): T

ZWEI:ZMAIL-SAVE-ALL:  (P.C. = 21)

ZWEI:COM-ZMAIL-SAVE:  (P.C. = 16)

ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
   Arg 0 (COMMAND): ZWEI:COM-ZMAIL-SAVE
   Arg 1 (CHAR): 115
   --Defaulted args:--
   Arg 2 (PREFIX-CHAR): NIL
   Arg 3 (HOOK-LIST): NIL

ZWEI:ZMAIL-COMMAND-EXECUTE:  (P.C. = 6)
   Arg 0: ZWEI:COM-ZMAIL-SAVE

(:METHOD ZWEI:ZMAIL-FRAME :PROCESS-COMMAND-CHAR):  (P.C. = 7)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 36643307 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-FRAME -- 65. IV's, 18. FL's 105606217>
   Arg 2 (OPERATION): :PROCESS-COMMAND-CHAR
   Arg 3 (CH): 115

(:INTERNAL (:INTERNAL (:METHOD ZWEI:ZMAIL-FRAME :COMBINED :PROCESS-COMMAND-CHAR) 0) 0):  (P.C. = 11)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 36643307 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-FRAME -- 65. IV's, 18. FL's 105606217>
   Arg 2 (.OPERATION.): :PROCESS-COMMAND-CHAR
   Rest arg (.DAEMON-CALLER-ARGS.): (115)

(:METHOD ZWEI:ZMAIL-COMMAND-LOOP-MIXIN :WHOPPER :PROCESS-COMMAND-CHAR):  (P.C. = 21)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 36643307 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-COMMAND-LOOP-MIXIN -- 6. IV's, 0. FL's 105606106>
   Arg 2 (.WHOPPER-CONTINUATION.): #<DTP-COMPILED-FUNCTION (:INTERNAL (:INTERNAL (:METHOD ZWEI:ZMAIL-FRAME :COMBINED :PROCESS-COMMAND-CHAR) 0) 0) 43734455>
   Arg 3 (.OLD-SELF-MAPPING-TABLE.): #<Map to flavor ZWEI:ZMAIL-FRAME -- 65. IV's, 18. FL's 105606217>
   Arg 4 (.OPERATION.): :PROCESS-COMMAND-CHAR
   Arg 5 (CHAR): 115

(:INTERNAL (:METHOD ZWEI:ZMAIL-FRAME :COMBINED :PROCESS-COMMAND-CHAR) 0):  (P.C. = 13)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 36643307 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-FRAME -- 65. IV's, 18. FL's 105606217>
   Arg 2 (.OPERATION.): :PROCESS-COMMAND-CHAR
   Rest arg (.DAEMON-CALLER-ARGS.): (115)

(:METHOD ZWEI:ZMAIL-FRAME :WHOPPER :PROCESS-COMMAND-CHAR):  (P.C. = 21)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 36643307 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-FRAME -- 65. IV's, 18. FL's 105606217>
   Arg 2 (.WHOPPER-CONTINUATION.): #<DTP-COMPILED-FUNCTION (:INTERNAL (:METHOD ZWEI:ZMAIL-FRAME :COMBINED :PROCESS-COMMAND-CHAR) 0) 43734440>
   Arg 3 (.OLD-SELF-MAPPING-TABLE.): #<Map to flavor ZWEI:ZMAIL-FRAME -- 65. IV's, 18. FL's 105606217>
   Arg 4 (.OPERATION.): :PROCESS-COMMAND-CHAR
   Arg 5 (CHAR): 115

(:METHOD ZWEI:ZMAIL-FRAME :COMBINED :PROCESS-COMMAND-CHAR):  (P.C. = 12)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 36643307 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-FRAME -- 65. IV's, 18. FL's 105606217>
   Arg 2 (.OPERATION.): :PROCESS-COMMAND-CHAR
   Rest arg (.DAEMON-CALLER-ARGS.): NIL
   Local 3 (.DAEMON-CALLER-ARGS.): (115)

(:METHOD ZWEI:ZMAIL-FRAME :COMMAND-LOOP):  (P.C. = 143)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 36643307 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-FRAME -- 65. IV's, 18. FL's 105606217>
   Arg 2 (OPERATION): :COMMAND-LOOP

(:METHOD ZWEI:ZMAIL-FRAME :COMBINED :COMMAND-LOOP):  (P.C. = 70)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 36643307 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-FRAME -- 65. IV's, 18. FL's 105606217>
   Arg 2 (.OPERATION.): :COMMAND-LOOP
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

ZWEI:ZMAIL-PROCESS-TOP-LEVEL:  (P.C. = 105)
   Arg 0 (WINDOW): #<ZMAIL-FRAME Main Zmail Window 36643307 exposed>

SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
   --Defaulted args:--
   Arg 0 (IGNORE): NIL
19-Mar-85 23:02:54-EST,1085;000000000000
Received: by MIT-OZ via Chaosnet; 19 Mar 85 23:02-EST
Received: from SCRC-EUPHRATES by SCRC-VALLECITO via CHAOS with CHAOS-MAIL id 3587; Tue 19-Mar-85 22:51:27-EST
Date: Tuesday, 19 March 1985, 22:51-EST
From: David A. Moon <Moon at SCRC-STONY-BROOK>
Subject: INHIBIT-FDEFINE-WARNINGS
To: Cory Myers <cory at MIT-BUGS-BUNNY>
cc: BUG-LISPM at OZ
In-Reply-To: <850319215449.1.CORY@TWEETY-PIE.MIT>
Message-ID: <850319225151.9.MOON@EUPHRATES.SCRC.Symbolics.COM>

    Date: Tuesday, 19 March 1985, 21:54-EST
    From: Cory Myers <cory at MIT-BUGS-BUNNY>

    In Symbolics 3600 Release 6.0 Beta IIc, microcode TMC5-FPA-MIC 315,
    FEP 17, with UTIL, on Lisp Machine Tweety Pie:

    I hope I am not missing something obvious but here goes:

    How do I specify in a file that a function definition replaces a
    function definition in another file.

Look up the topic "Note on Record-source-file-name" with the document
examiner.  I don't know for sure that that topic was present in the
Beta IIc version of the documentation, so if you don't find it, ask
again.
20-Mar-85 03:45:26-EST,1002;000000000000
Received: from MIT-BUDDY by MIT-OZ via Chaosnet; 20 Mar 85 03:45-EST
Date: Wednesday, 20 March 1985, 03:44-EST
From: Christopher Fry <cfry at OZ>
Subject: serial stream hang
To: BUG-LISPM at OZ
Message-ID: <850320034451.1.CFRY@BUDDY.MIT>

In Symbolics 3600 Release 6.0 Beta IIc, microcode TMC5-MIC 315, on Lisp Machine Buddy Holly:


(setq ss (si:make-serial-stream
		     :unit 3
		     :baud 9600.
		     :number-of-stop-bits 2
		     :parity nil
		     :number-of-data-bits 8.
		     :FLAVOR 'SI:SERIAL-FORCE-OUTPUT-BINARY-STREAM
		     ))

works just fine.
but evaluating:

(send *midi-serial-stream* :tyo -128.)

causes the machine to hang such that its necesary to reset the fep.
even if this is always illegal, the error state shouldn't be quite so
wedged.

Sending a bug report fails to include the fep version number.
(print-herald) doesn't show the fep version number either.
[It does in rel 5.2]
How can a user and/or a Symbolics bug fixer going to find out?
20-Mar-85 09:38:58-EST,3770;000000000000
Received: from MIT-REAGAN by MIT-OZ via Chaosnet; 20 Mar 85 09:38-EST
Date: Wednesday, 20 March 1985, 09:37-EST
From: CJL at OZ
Sender: bug-lispm at OZ
Subject: Namespace lossage.
To: BUG-LISPM at OZ
Message-ID: <850320093752.1.FILE-SERVER@REAGAN.MIT>

In Symbolics 3600 Release 6.0 Beta IIc, microcode TMC5-MIC 315, on Lisp Machine Ronald Reagan:

This question is asked by reagan quite often.  As far as I can tell
there is aboslutely nothing that I can do here.  If I answer sew|hydra,
it tries to connect to hydra, fails, and asks again.  If I try any other
namespace server, it talks to the machine for a while, and then asks
this question again. If I try to play with the stack manually, and
return from the function, reagan later gets other errors about
object fixups getting unhandled messages. There should be some
acceptable way to say "I don't know" to this question.

>>Break: 
While in the function PROCESS-WAIT  TV:KBD-IO-BUFFER-INPUT-WAIT  (:METHOD TV:STREAM-MIXIN :INPUT-WAIT)

PROMPT-AND-READ:  (P.C. = 61)
   Arg 0 (TYPE): :STRING-TRIM
   Arg 1 (FORMAT-STRING): "What host is a namespace server for ~A (default: Local): "
   Rest arg (FORMAT-ARGS): (:SEW)
   Local 3: #<DTP-LOCATIVE 500631>
   Local 4: #<DTP-COMPILED-FUNCTION (:INTERNAL PROMPT-AND-READ 0.) 43246442>
   Local 5 (FUNCTION): #<DTP-COMPILED-FUNCTION (:PROPERTY :STRING-TRIM PROMPT-AND-READ) 2272555>
   Local 6 (TYPE-KEYWORD): :STRING-TRIM
   Local 7 (TYPE-ARGS): NIL
   Local 8: "What host is a namespace server for ~A (default: Local): "
   Local 9: (:SEW)
   Local 10 (PROMPT): ("What host is a namespace server for ~A (default: Local): " :SEW)

NETI:FIND-LOCAL-SITE:  (P.C. = 5)
   Arg 0 (SITE-AND-NAMESPACE-NAME): :SEW

(:DEFUN-METHOD NETI:GET-FIXUP-OBJECT):  (P.C. = 110)  (from SYS: PATCH; SYSTEM-269-44)
   Arg 0 (SELF): #<OBJECT-FIXUP Fixup for SITE SEW in namespace SEW 25201555>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NETI:OBJECT-FIXUP -- 3. IV's, 0. FL's 105420650>
   Arg 2 (OBJECT): #<LISPM-HOST SEW|HYDRA 62372736>
   Arg 3 (DECACHE-FIRST): T
   Local 3 (DECACHE-FIRST): NIL

(:METHOD NETI:OBJECT-FIXUP :RESOLVE):  (P.C. = 10)
   Arg 0 (SELF): #<OBJECT-FIXUP Fixup for SITE SEW in namespace SEW 25201555>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NETI:OBJECT-FIXUP -- 3. IV's, 0. FL's 105420650>
   Arg 2 (OPERATION): :RESOLVE
   Arg 3 (OBJECT): #<LISPM-HOST SEW|HYDRA 62372736>
   Arg 4 (DECACHE-FIRST): T

NETI:DO-UNKNOWN-OBJECT-FIXUPS:  (P.C. = 73)
   Arg 0 (DECACHE-FIRST): T

NETI:DO-UNKNOWN-OBJECT-FIXUPS-IF-NECESSARY:  (P.C. = 20)

NETI:GET-FULL-INCREMENTAL-UPDATE-FROM-NETWORK:  (P.C. = 242)
   Arg 0 (NAMESPACE): #<NAMESPACE SWW 62301534>
   Arg 1 (TIMESTAMP): 515.

(:METHOD NETI:NAMESPACE :GET-LATEST-TIMESTAMP):  (P.C. = 66)
   Arg 0 (SELF): #<NAMESPACE SWW 62301534>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NETI:NAMESPACE -- 11. IV's, 1. FL's 105712115>
   Arg 2 (OPERATION): :GET-LATEST-TIMESTAMP
   Arg 3 (FORCE-P): NIL

Rest of stack:
NETI:BOOT-TIMESTAMP-VALID-P:  (P.C. = 34)
NETI:FIND-OBJECT-NAMED-IN-NAMESPACE:  (P.C. = 72)
NETI:FIND-NAMESPACE-NAMED:  (P.C. = 30)
NETI:PARSE-NAME:  (P.C. = 35)
NETI:PARSE-AND-INTERN-NAME:  (P.C. = 35)
NETI:FIND-OBJECT-NAMED-IN-NAMESPACE:  (P.C. = 23)
NET:FIND-OBJECT-NAMED:  (P.C. = 71)
SI:PARSE-HOST:  (P.C. = 63)
CHAOS:POLL-HOSTS:  (P.C. = 47)
CHAOS:HOSTAT-INTERNAL:  (P.C. = 7)
HOSTAT:  (P.C. = 10)
SI:*EVAL:  (P.C. = 403)
(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0.):  (P.C. = 152)
TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)  (from SYS: PATCH; SYSTEM-269-48)
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
SI:LISP-COMMAND-LOOP:  (P.C. = 67)
SI:LISP-TOP-LEVEL1:  (P.C. = 5)
SI:LISP-TOP-LEVEL:  (P.C. = 7)
20-Mar-85 10:35:31-EST,1174;000000000000
Received: by MIT-OZ via Chaosnet; 20 Mar 85 10:35-EST
Received: from SCRC-HARLEM by SCRC-VALLECITO via CHAOS with CHAOS-MAIL id 3624; Wed 20-Mar-85 10:24:28-EST
Date: Wednesday, 20 March 1985, 10:24-EST
From: Joseph R Goldstone <joseph at SCRC-QUABBIN>
Subject: serial stream hang
To: Christopher Fry <cfry at OZ>, BUG-LISPM at OZ
In-Reply-To: <850320034451.1.CFRY@BUDDY.MIT>
Message-ID: <850320102429.7.JOSEPH@HARLEM.SCRC.Symbolics.COM>

    Date: Wednesday, 20 March 1985, 03:44-EST
    From: Christopher Fry <cfry at OZ>

    In Symbolics 3600 Release 6.0 Beta IIc, microcode TMC5-MIC 315, on Lisp Machine Buddy Holly:

    ...

    Sending a bug report fails to include the fep version number.
    (print-herald) doesn't show the fep version number either.
    [It does in rel 5.2]
    How can a user and/or a Symbolics bug fixer going to find out?

(print-herald :verbose t) or (when talking to the Fep) Show Version
will tell you the FEP version.  

If we don't see it in the bug header, then it must be the same as
the FEP prom version bundled in with the Release.  For 6.0 Beta IIc
this is FEP version 24.  See the variable si:*releases*.
20-Mar-85 10:48:52-EST,1193;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 20 Mar 85 10:48-EST
Received: from SCRC-STONY-BROOK by MIT-MC via Chaosnet; 20 MAR 85  10:49:18 EST
Received: from SCRC-PEACE by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 200197; Wed 20-Mar-85 08:36:22-EST
Date: Wed, 20 Mar 85 08:36 EST
From: Charles Hornig <Hornig@STONY-BROOK.SCRC.Symbolics.COM>
Subject: SWW|RR
To: Alan Bawden <Alan@MIT-MC>, BUG-LISPM@MIT-MC
In-Reply-To: The message of 19 Mar 85 21:16-EST from Alan Bawden <Alan@MIT-MC>
Message-ID: <850320083630.3.HORNIG@PEACE.SCRC.Symbolics.COM>

    Date: Tue, 19 Mar 85 21:16 EST
    From: Alan Bawden <Alan@MIT-MC.ARPA>

    In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 24, on Lisp Machine Janis Joplin:

    I just found this machine in this state after it had just been cold-booted.

    >>Error: The object (:HOST #<NAME SWW|RR 15477044> #<NAMESPACE SWW 15140220>) is not a valid function
    While in the function (:HOST #<NAME SWW|RR 15477044> #<NAMESPACE SWW 15140220>)  NET:FIND-PATHS-TO-SERVICE-ON-HOST  NETI:FIND-PATH-TO-SERVICE-ON-HOST

I just deleted SWW|RR and the refwerence to it in the SWW namespace.  I
hope that this makes this stop.
20-Mar-85 11:20:22-EST,4097;000000000000
Mail-From: GZ created at 20-Mar-85 11:20:14
Received: by MIT-OZ via Chaosnet; 20 Mar 85 11:07-EST
Received: from SCRC-PEACE by SCRC-VALLECITO via CHAOS with CHAOS-MAIL id 3639; Wed 20-Mar-85 11:06:15-EST
Date: Wed, 20 Mar 85 11:06 EST
From: Charles Hornig <Hornig@STONY-BROOK.SCRC.Symbolics.COM>
Subject: Pathname lossage
To: CJL@OZ, BUG-LISPM@OZ
In-Reply-To: <850319115613.1.FILE-SERVER@REAGAN.MIT>
Message-ID: <850320110635.6.HORNIG@PEACE.SCRC.Symbolics.COM>

    Date: Tuesday, 19 March 1985, 11:56-EST
    From: CJL at OZ

    In Symbolics 3600 Release 6.0 Beta IIc, microcode TMC5-MIC 315, on Lisp Machine Ronald Reagan:

    (:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME) seems to infinitely recurse on reagan.
    I included notifications in this report because there was a "Interned pathnames..."
    notification.

This lossage with RR should be fixed now.

    24 Notifications, from 0 to 23:
    11:50:58 Warning:  GC is waiting to flip, but flipping has been inhibited for 1 minute 11 seconds.
    11:50:18 Warning:  GC is waiting to flip, but flipping has been inhibited for 31 seconds.
    11:49:57 Warning:  GC is waiting to flip, but flipping has been inhibited for 10 seconds.
    11:49:15 Process NFILE Control (DUANE) got an error
    11:46:13 Process NFILE Control (B) got an error
    11:44:11 Process NFILE Control (DUANE) got an error
    11:33:59 Process NFILE Control (DUANE) got an error
    11:27:02 Process NFILE Control (DUANE) got an error
    11:26:56 GC: Finished waiting to flip.
    11:26:29 Warning:  GC is waiting to flip, but flipping has been inhibited for 1 minute 11 seconds.
    11:25:49 Warning:  GC is waiting to flip, but flipping has been inhibited for 31 seconds.
    11:25:28 Warning:  GC is waiting to flip, but flipping has been inhibited for 10 seconds.
    11:25:17 Process NFILE Control (DUANE) got an error
    11:24:58 Process NFILE Control (B) got an error
    11:19:25 Process NFILE Control (B) got an error
    11:06:44 Interned pathnames on host MIT|REAGAN are being forgotten because of
	     an incompatible change in the host's attributes.
	     This may cause problems when accessing files on this host.
	     Recent servers contacted are SCH|GODZILLA
    11:06:44 Merging #<LISPM-HOST MIT|REAGAN 62301352> with #<RANDOM-HOST RR 62374414>.  This may cause problems in dealing with these objects until the next use of (SI:FULL-GC).
	     Recent servers contacted are SCH|GODZILLA
    11:04:27 Namespace SWW has become unloaded:
	     no longer server for this namespace
    10:50:15 The object #<LISPM-HOST SEW|HYDRA 62376655> in namespace SEW contained a reference to PRINTER LAIKA which could not be resolved.
	     The printer named #<NAME SEW|LAIKA 62376651> was not found.
	     No printer with that name is already known by the local machine,
	     but it is not certain that there is no such printer.
	     No servers are known for namespace SEW.
	     Recent servers contacted are SCH|GODZILLA SPA|RUSSIAN SCRC-RIVERSIDE SWW|WHITE
    10:44:55 Namespace Lock SPA|RUSSIAN: Reloading namespace SPA.
	     Recent servers contacted are SPA|RUSSIAN SCRC-RIVERSIDE SWW|WHITE
    10:44:55 Namespace SPA has become unloaded:
	     records don't go back far enough
	     Recent servers contacted are SPA|RUSSIAN SCRC-RIVERSIDE SWW|WHITE
    10:43:29 The object #<NAMESPACE SWW 62301534> in namespace SWW contained a reference to HOST RR which could not be resolved.
	     The host named #<NAME SWW|RR 62350241> was not found.
	     No host with that name is already known by the local machine,
	     but it is not certain that there is no such host.
	     Some namespace server did not respond.
	     Recent servers contacted are SWW|WHITE
    10:41:00 Moving name INTERNET|WSMR from #<UNIX-HOST WSMR06 1565041> to #<UNIX-HOST WSMR01 1557354>.
	     Recent servers contacted are SCRC-RIVERSIDE
    03:31:12 Services are enabled now.

    >>Error: The control stack overflowed.
    While in the function ARRAY-ACTIVE-LENGTH  SYS:SXHASH-STRING  SI:EQUAL-HASH

-------
20-Mar-85 11:24:34-EST,1716;000000000000
Mail-From: GZ created at 20-Mar-85 11:22:30
Received: by MIT-OZ via Chaosnet; 20 Mar 85 11:08-EST
Received: from SCRC-PEACE by SCRC-VALLECITO via CHAOS with CHAOS-MAIL id 3642; Wed 20-Mar-85 11:08:53-EST
Date: Wed, 20 Mar 85 11:09 EST
From: Charles Hornig <Hornig@STONY-BROOK.SCRC.Symbolics.COM>
Subject: SWW namespace really should be fixed
To: CJL@OZ, BUG-LISPM@OZ
In-Reply-To: <850318212611.2.FILE-SERVER@REAGAN.MIT>
Message-ID: <850320110911.7.HORNIG@PEACE.SCRC.Symbolics.COM>

    Date: Monday, 18 March 1985, 21:26-EST
    From: CJL at OZ

    In Symbolics 3600 Release 6.0 Beta IIc, microcode TMC5-MIC 315,
    on Lisp Machine Ronald Reagan:

    SWW|RR is not helping reagan in any way.  Somebody who is allowed should
    fix the sww namespace object to have MIT|REAGAN as a secondary server,
    NOT SWW|RR, and delete SWW|RR.

This has been fixed.

    (send (neti:find-namespace-named "SWW") :property-list)
    (:PRIMARY-NAME-SERVER
     (#<LISPM-HOST SWW|WHITE 62301613>)
     :SECONDARY-NAME-SERVER
     (#<LISPM-HOST SCRC-RIVERSIDE 62301065> #<LISPM-HOST SPA|RUSSIAN 62301715>
					    #<LISPM-HOST WAIKATO 62304234>
					    #<LISPM-HOST SCH|GODZILLA 62302034>
					    #<LISPM-HOST SCRC-STONY-BROOK 62300756>
					    #<LISPM-HOST GOLDILOCKS 62301202>
					    #<LISPM-HOST APIARY-6 62301255>
					    #<RANDOM-HOST SWW|RR 62423220>)
     :SEARCH-RULES
     (#<NAMESPACE SWW 62301534> #<NAMESPACE SCRC 62300632>
				#<NAMESPACE SCH 62301731>
				#<NAMESPACE SPA 62301627>
				#<NAMESPACE MIT 62300564>
				#<NAMESPACE INTERNET 62301366>)
     :DESCRIPTOR-FILE
     "white:>sys>site>sww-namespace.text"
     :INTERNET-DOMAIN-NAME
     "SWW.Symbolics.COM")
20-Mar-85 11:25:56-EST,1487;000000000000
Mail-From: GZ created at 20-Mar-85 11:23:32
Received: by MIT-OZ via Chaosnet; 20 Mar 85 11:11-EST
Received: from SCRC-PEACE by SCRC-VALLECITO via CHAOS with CHAOS-MAIL id 3644; Wed 20-Mar-85 11:11:42-EST
Date: Wed, 20 Mar 85 11:12 EST
From: Charles Hornig <Hornig@STONY-BROOK.SCRC.Symbolics.COM>
Subject: namespace confusion
To: Edward H Lay <EHL@OZ>, BUG-LISPM@OZ
In-Reply-To: The message of 14 Mar 85 18:28-EST from Edward H Lay <EHL@OZ>
Message-ID: <850320111202.9.HORNIG@PEACE.SCRC.Symbolics.COM>

    Date: Thursday, 14 March 1985, 18:28-EST
    From: Edward H Lay <EHL at OZ>

    In Symbolics 3600 System 242.356, Hardcopy 20.10, Experimental Boxer 6.0, on Lisp Machine Joe Louis:

    Who does Reagan think he is, anyway.

    Doesn't seem to have broken anything though...

This was due to a screw-up at SWW.  It has been fixed.

    17:24 Namespace server was unable to find HOST REAGAN in namespace MIT.
    It will be removed from the namespace.

    17:24 It is necessary to change the flavor of namespace object #<HOST REAGAN 1007563> from NET:HOST to FS:LISPM-HOST.
    This may cause problems in dealing with this object until the next use of
     (SI:FULL-GC :SYSTEM-RELEASE T).

    17:15 It is necessary to change the flavor of namespace object #<LISPM-HOST MIT|REAGAN 15140014> from FS:LISPM-HOST to NET:HOST.
    This may cause problems in dealing with this object until the next use of
     (SI:FULL-GC :SYSTEM-RELEASE T).

-------
20-Mar-85 13:25:39-EST,1729;000000000000
Received: by MIT-OZ via Chaosnet; 20 Mar 85 13:18-EST
Received: from SCRC-NEPONSET by SCRC-VALLECITO via CHAOS with CHAOS-MAIL id 3668; Wed 20-Mar-85 12:06:44-EST
Date: Wednesday, 20 March 1985, 12:07-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: serial stream hang
To: Christopher Fry <cfry at OZ>, BUG-LISPM at OZ
In-Reply-To: <850320034451.1.CFRY@BUDDY.MIT>
Message-ID: <850320120731.5.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Wednesday, 20 March 1985, 03:44-EST
    From: Christopher Fry <cfry at OZ>

    In Symbolics 3600 Release 6.0 Beta IIc, microcode TMC5-MIC 315, on Lisp Machine Buddy Holly:


    (setq ss (si:make-serial-stream
			 :unit 3
			 :baud 9600.
			 :number-of-stop-bits 2
			 :parity nil
			 :number-of-data-bits 8.
			 :FLAVOR 'SI:SERIAL-FORCE-OUTPUT-BINARY-STREAM
			 ))

    works just fine.
    but evaluating:

    (send *midi-serial-stream* :tyo -128.)

Since when is -128. a valid character?  It may not be documented, but
various high bits (which you are setting by using a negative number),
cause various interesting things to happen to the chip.  This isn't a
mistake; there are good reasons for it.

    causes the machine to hang such that its necesary to reset the fep.
    even if this is always illegal, the error state shouldn't be quite so
    wedged.

    Sending a bug report fails to include the fep version number.
That means it is the version number for the release (V24).
    (print-herald) doesn't show the fep version number either.
Try (print-herald :verbose t)
    [It does in rel 5.2]
    How can a user and/or a Symbolics bug fixer going to find out?
(print-herald :verbose t) or look in si:*releases*.
20-Mar-85 19:44:59-EST,2011;000000000000
Mail-From: ZZZ.RLK created at 20-Mar-85 19:44:38
Date: Wed, 20 Mar 1985  19:44 EST
Message-ID: <ZZZ.RLK.12096643002.BABYL@MIT-OZ>
Sender: ZZZ.RLK@MIT-OZ
From: "Robert L. Krawitz" <RLK@MIT-OZ>
To:   bug-mail@MIT-OZ, bug-lispm@MIT-OZ
Subject: [COMSAT: Msg of Wednesday, 20 March 1985 17:36-EST]

I always have strange problems with bitnet addresses (or berkeley
addresses, for that matter) from lisp machines.  The precise reason
for the return isn't what I'm interested in; rather look at the junk
characters in the headers of the returned message (in particular the
to: and cc: lines).  In addition to the junk characters inserted, part
of the address has been chopped off in all cases (usually an adjunct
address such as @wiscvm.arpa).

I seem to remember someone saying that it was a problem with various
mailers not knowing the right thing to do.  It used to happen with
Babyl but still happens with zmail all the time.

Robert^Z
------

Date: Wednesday, 20 March 1985  17:36-EST
From: Communications Satellite <COMSAT at MIT-MC>
To:   RLK
Re:   Msg of Wednesday, 20 March 1985 17:36-EST

============ A copy of your message is being returned, because: ============
"BARKAN-CSNET@MIT-MC.BITNET" at MIT-MC is an unknown recipient.
============ Failed message follows: ============
Received: from WISCVM.ARPA by MIT-MC.ARPA; 20 MAR 85 17:36:39 EST
Received: from MIT-MC by wiscvm.arpa on 03/20/85 at 16:21:51 CST
Received: from MIT-OZ by MIT-MC via Chaosnet; 20 MAR 85  17:24:37 EST
Received: from MIT-FORD by MIT-OZ via Chaosnet; 20 Mar 85 17:23-EST
Date: Wednesday, 20 March 1985, 17:24-EST
From: Robert L. Krawitz <RLK%MIT-OZ@MIT-MC.ARPA>
Subject: interest in Israel
To: BARKAN at wisdom.bitnet,
    barkan-csnet at MIT-MC.bitnet
CC: deg%MIT-OZ@MIT-MC.ARPA, brand%MIT-OZ@MIT-MC.ARPA,
    FESHARON at WEIZMANN.bitnet
In-reply-to: <850320131428.2.BARKAN@AYIN.WISDOM>
Message-ID: <[MIT-FORD].3/20/85 17:24:07.RLK>

Unfortunately, I don't know C.

Robert^Z
20-Mar-85 22:52:21-EST,2728;000000000000
Received: by MIT-OZ via Chaosnet; 20 Mar 85 22:52-EST
Received: from SCRC-EUPHRATES by SCRC-VALLECITO via CHAOS with CHAOS-MAIL id 3862; Wed 20-Mar-85 22:50:28-EST
Date: Wednesday, 20 March 1985, 22:51-EST
From: David A. Moon <Moon at SCRC-STONY-BROOK>
Subject: [COMSAT: Msg of Wednesday, 20 March 1985 17:36-EST]
To: Robert L. Krawitz <RLK at OZ>
cc: bug-mail at OZ, bug-lispm at OZ
In-Reply-To: <ZZZ.RLK.12096643002.BABYL@MIT-OZ>
Message-ID: <850320225143.3.MOON@EUPHRATES.SCRC.Symbolics.COM>

    Date: Wed, 20 Mar 1985  19:44 EST
    From: "Robert L. Krawitz" <RLK@MIT-OZ>

    I always have strange problems with bitnet addresses (or berkeley
    addresses, for that matter) from lisp machines.  The precise reason
    for the return isn't what I'm interested in; rather look at the junk
    characters in the headers of the returned message (in particular the
    to: and cc: lines).  In addition to the junk characters inserted, part
    of the address has been chopped off in all cases (usually an adjunct
    address such as @wiscvm.arpa).

    I seem to remember someone saying that it was a problem with various
    mailers not knowing the right thing to do.  It used to happen with
    Babyl but still happens with zmail all the time.

Those integral signs (character code 177 octal) in the header are a tip-off
that this is a bug in the Tops-20 mail system.  Integral signs are put around
host names so that the mailer can later plug in a domainified host name.

I won't swear that there isn't a Zmail problem as well, but there is certainly
a Tops-20 problem.

    Date: Wednesday, 20 March 1985  17:36-EST
    From: Communications Satellite <COMSAT at MIT-MC>
    To:   RLK
    Re:   Msg of Wednesday, 20 March 1985 17:36-EST

    ============ A copy of your message is being returned, because: ============
    "BARKAN-CSNET@MIT-MC.BITNET" at MIT-MC is an unknown recipient.
    ============ Failed message follows: ============
    Received: from WISCVM.ARPA by MIT-MC.ARPA; 20 MAR 85 17:36:39 EST
    Received: from MIT-MC by wiscvm.arpa on 03/20/85 at 16:21:51 CST
    Received: from MIT-OZ by MIT-MC via Chaosnet; 20 MAR 85  17:24:37 EST
    Received: from MIT-FORD by MIT-OZ via Chaosnet; 20 Mar 85 17:23-EST
    Date: Wednesday, 20 March 1985, 17:24-EST
    From: Robert L. Krawitz <RLK%MIT-OZ@MIT-MC.ARPA>
    Subject: interest in Israel
    To: BARKAN at wisdom.bitnet,
	barkan-csnet at MIT-MC.bitnet
    CC: deg%MIT-OZ@MIT-MC.ARPA, brand%MIT-OZ@MIT-MC.ARPA,
	FESHARON at WEIZMANN.bitnet
    In-reply-to: <850320131428.2.BARKAN@AYIN.WISDOM>
    Message-ID: <[MIT-FORD].3/20/85 17:24:07.RLK>

    Unfortunately, I don't know C.

    Robert^Z
21-Mar-85 08:50:01-EST,623;000000000001
Received: from MIT-MC by MIT-OZ via Chaosnet; 21 Mar 85 08:49-EST
Received: from SUMEX-AIM.ARPA by MIT-MC.ARPA; 21 MAR 85 08:50:34 EST
Date: Thu 21 Mar 85 05:47:49-PST
From: Nakul Saraiya <SARAIYA@SUMEX-AIM.ARPA>
Subject: Dumping object heirarchies
To: bug-lispm%MIT-OZ@MIT-XX.ARPA


Is there a working version of the dumper/binary-file-loader
that allows one to dump an object heirarchy (with circular
references) and read it back in?

Release 5.2, System 242.356 does not allow it, and there must
be a patch somewhere to take care of it. Or am I going to have
to define my own?

Nakul Saraiya

-------
21-Mar-85 10:57:03-EST,3646;000000000001
Received: from MIT-SARAH by MIT-OZ via Chaosnet; 21 Mar 85 10:56-EST
Date: Thursday, 21 March 1985, 10:55-EST
From: Devon at MIT-MC
Sender: Muse at MIT-OZ
To: BUG-LISPM at MIT-OZ

In Experimental System 99.13, CADR 4.0, Experimental ZMail 54.3,
MIT-Specific 23.0, microcode 320, GC@2 Simple CAM, on Sarah Bernhardt:

Sorry I didn't know about c-M before.  Here is what Meta-Shift-D LDB does in ZEMACS:

>>ERROR: Keyword arg keyword FUNCTION unrecognized.
Backtrace from the debugger:

STRING= (P.C. = 51)

 Arg 0 (STRING1): ("SETF")
 Arg 1 (STRING2): ("FUNCTION" . "Load a byte specified by PPSS out of the number WORD.
PPSS is a number whose printed representation in octal, as four digits,
 contains a two-digit position-within-word and a two-digit size.
The position is the number of low bits of WORD after the desired byte.
The size must be less than 25. so that the value fits in a fixnum.")
 Rest arg: (FUNCTION)
Local 1 (START1): 0
Local 2 (END1): NIL
Local 3 (START2): 0
Local 4 (END2): NIL


ZWEI::COM-LONG-DOCUMENTATION (P.C. = 105)

Local 0 (NAME): LDB
Local 1 (DOC): "Load a byte specified by PPSS out of the number WORD.
PPSS is a number whose printed representation in octal, as four digits,
 contains a two-digit position-within-word and a two-digit size.
The position is the number of low bits of WORD after the desired byte.
The size must be less than 25. so that the value fits in a fixnum."
Local 2 (ALL-DOC): (("FUNCTION" . "Load a byte specified by PPSS out of the number WORD.
PPSS is a number whose printed representation in octal, as four digits,
 contains a two-digit position-within-word and a two-digit size.
The position is the number of low bits of WORD after the desired byte.
The size must be less than 25. so that the value fits in a fixnum.") ("SETF"))
Local 3 (KIND): ("FUNCTION" . "Load a byte specified by PPSS out of the number WORD.
PPSS is a number whose printed representation in octal, as four digits,
 contains a two-digit position-within-word and a two-digit size.
The position is the number of low bits of WORD after the desired byte.
The size must be less than 25. so that the value fits in a fixnum.")
Local 4: (("FUNCTION" . "Load a byte specified by PPSS out of the number WORD.
PPSS is a number whose printed representation in octal, as four digits,
 contains a two-digit position-within-word and a two-digit size.
The position is the number of low bits of WORD after the desired byte.
The size must be less than 25. so that the value fits in a fixnum.") ("SETF"))


Additional information supplied with call:
 Expecting 3 values

ZWEI::COMMAND-EXECUTE (P.C. = 92)

 Arg 0 (COMMAND): ZWEI::COM-LONG-DOCUMENTATION
 Arg 1 (CHAR): #/m-/d
 Arg 2 (PREFIX-CHAR): NIL
 Arg 3 (HOOK-LIST): (ZWEI::EXPAND-ABBREV-HOOK ZWEI::SHIFT-LOCK-HOOK)
Local 0 (HOOK-SUCCESS): T
Local 1: NIL
Local 2 (HOOK): ZWEI::SHIFT-LOCK-HOOK


ZWEI::PROCESS-COMMAND-CHAR (P.C. = 61)

 Arg 0 (CH): #/m-/d
Local 0 (VALUE): NIL
Local 1 (LINE): NIL
Local 2 (INDEX): NIL
Local 3: NIL
Local 4 (HOOK): NIL


(:METHOD ZWEI:WINDOW :PROCESS-COMMAND-CHAR) (P.C. = 20)
  (SELF is #<ZWEI::ZMACS-WINDOW-PANE Zmacs Window Pane 1 2701270 exposed>)

 Arg 0 (.OPERATION.): :PROCESS-COMMAND-CHAR
 Arg 1 (CH): 4194404


Remainder of stack:

(:METHOD ZWEI:WINDOW :EDIT) (P.C. = 307)
(:INTERNAL (:METHOD ZWEI:ZMACS-WINDOW :COMBINED :EDIT) 0) (P.C. = 60)
FUNCALL (P.C. = 21)
(:METHOD ZWEI::DISPLAYER :AROUND :EDIT) (P.C. = 25)
(:METHOD ZWEI:ZMACS-WINDOW :COMBINED :EDIT) (P.C. = 39)
ZWEI::ZMACS-WINDOW-TOP-LEVEL (P.C. = 38)
SI::PROCESS-TOP-LEVEL (P.C. = 115)
21-Mar-85 11:57:16-EST,1498;000000000001
Mail-From: GZ created at 21-Mar-85 11:55:48
Date: Thu, 21 Mar 1985  11:55 EST
Message-ID: <GZ.12096819798.BABYL@MIT-OZ>
From: Gail Zacharias <GZ@MIT-OZ>
To:   "Robert L. Krawitz" <RLK@MIT-OZ>
Cc:   bug-lispm@MIT-OZ, bug-mail@MIT-OZ
Subject: [COMSAT: Msg of Wednesday, 20 March 1985 17:36-EST]
In-reply-to: Msg of 20 Mar 1985  19:44-EST from Robert L. Krawitz <RLK>

The way things work is that programs which queue mail on tops-20 put
rubouts around host names.  The tops-20 mail system then standardizes
the host names etc and removes the rubouts.  However, when the supposed
host name is not known to the mail system, the whole address,  including
the rubouts, is left alone.

This means that the 'junk characters in the headers' are not the cause of
your problem, they are just an indication of something else going wrong.
What's going wrong is that wisdom.bitnet et. al. are not valid host names.
If you're specifying wisdom.bitnet, then there's really no bug (except for
nobody telling you you're doing something wrong when you're doing it).  If
you're specifying wisdom.bitnet@wiscvm.arpa and sombody is cutting off the
second part, that's a bug.  The fact that the rubouts are still there in
the reformed header tends to indicate that the mailer never touched the
address and the bug is in the lispm, but you never know.  Catch me online
sometime and we'll try to get hold of what's actually coming out of the
lisp machine and what happens to it inside the mailer.
21-Mar-85 15:21:33-EST,1479;000000000001
Mail-From: GZ created at 21-Mar-85 15:21:02
Date: Thu, 21 Mar 1985  15:21 EST
Message-ID: <GZ.12096857158.BABYL@MIT-OZ>
From: Gail Zacharias <GZ@MIT-OZ>
To:   bug-lispm@MIT-OZ
Cc:   "David A. Moon" <Moon@SCRC-STONY-BROOK>, bug-mail@MIT-OZ,
      "Robert L. Krawitz" <RLK@MIT-OZ>
Subject: [COMSAT: Msg of Wednesday, 20 March 1985 17:36-EST]
In-reply-to: Msg of 20 Mar 1985 22:51-EST from David A. Moon <Moon at SCRC-STONY-BROOK>

Well, it's definitely the lispm that's losing the "@wiscvm.arpa" in the header.
RLK entered the following into zmail:

    To: gz, rlk, barkan%wisdom.bitnet@wiscvm.arpa
    cc: This is a test of losing mailers <barkan%wisdom.bitnet@wiscvm.arpa>
    fto: oz:<zzz.rlk>bad.mail

The following is the resulting queue file on OZ  (as written by the mail
server, which just copies the message verbatim from the net to the file)

    =NET-MAIL-FROM-HOST:MIT-ARTHUR
    MIT-OZ
    gz@MIT-OZ
    rlk@MIT-OZ
    barkan%wisdom.bitnet@wiscvm.arpa
    barkan%wisdom.bitnet@wiscvm.arpa
    
    Received: from MIT-ARTHUR by MIT-OZ via Chaosnet; 21 Mar 85 14:34-EST
    Date: Thursday, 21 March 1985, 14:34-EST
    From: Robert L. Krawitz <RLK at MIT-OZ>
    To: gz at MIT-OZ,
	rlk at MIT-OZ,
	barkan at wisdom.bitnet
    FTo: OZ:OZ:<ZZZ.RLK>BAD.MAIL
    CC: This is a test of losing mailers <barkan at wisdom.bitnet>
    Message-ID: <[MIT-ARTHUR].3/21/85 14:34:36.RLK>

    Ignore this message.

    Robert^Z

21-Mar-85 18:38:41-EST,569;000000000001
Mail-From: ZZZ.RLK created at 21-Mar-85 18:38:31
Date: Thu, 21 Mar 1985  18:38 EST
Message-ID: <ZZZ.RLK.12096893112.BABYL@MIT-OZ>
Sender: ZZZ.RLK@MIT-OZ
From: "Robert L. Krawitz" <RLK@MIT-OZ>
To:   Gail Zacharias <GZ@MIT-OZ>
Cc:   bug-lispm@MIT-OZ, bug-mail@MIT-OZ,
      "David A. Moon" <Moon@SCRC-STONY-BROOK>
Subject: [COMSAT: Msg of Wednesday, 20 March 1985 17:36-EST]
In-reply-to: Msg of 21 Mar 1985  15:21-EST from Gail Zacharias <GZ>

I might add the following:

The test was conducted from MIT-ARTHUR, running 98.80 with Zmail
53.19.

Robert^Z
21-Mar-85 22:18:40-EST,618;000000000001
Received: from MIT-XX by MIT-OZ via Chaosnet; 21 Mar 85 22:18-EST
Date: Thu 21 Mar 85 22:20:05-EST
From: Michael Travers <MT@MIT-XX>
Subject: [Harold Goldberger <HAROLD at MIT-MC>:]
To: bug-lispm@MIT-OZ, bug-mail@MIT-MC.ARPA

The addresses in this message are bogus.  

                ---------------

Return-Path: <@MIT-MC:HAROLD@MIT-MC>
Received: from MIT-MC by MIT-XX.ARPA with TCP; Thu 21 Mar 85 15:03:27-EST
Received: from MIT-LISPM-9 by MIT-MC via Chaosnet; 21 MAR 85  15:03:34 EST
Date: Thursday, 21 March 1985, 15:02-EST
From: Harold Goldberger <HAROLD at MIT-MC>
To: MT at XX

...
-------
22-Mar-85 17:35:39-EST,894;000000000001
Received: from MIT-AVATAR by MIT-OZ via Chaosnet; 22 Mar 85 17:35-EST
Date: Friday, 22 March 1985, 17:35-EST
From: Charles Rich <RICH at MIT-OZ>
Subject: LOAD
To: BUG-LISPM at MIT-OZ
Cc: Yishai at MIT-OZ, Rich at MIT-OZ

Is there a version of LOAD which when given a filename of the
form "dev:<dir>fn1", i.e. with no FN2, will load either the
binary or the source file, *whichever is more recent* ???

The present behavior of LOAD is to always load the binary if
it exists in this case.  

For example, the new version of load I suggest above would
be more appropriate for loading LISPM-INIT files.  I just spent
several wasted hours trying to debug an subtle login initialization problem
without realizing that there was an old compiled version sitting
around.  I am sure there are many other situations where the
suggested semantics is also more appropriate.

		-Chuck.
22-Mar-85 20:17:46-EST,2295;000000000001
Received: from MIT-MERLIN by MIT-OZ via Chaosnet; 22 Mar 85 20:17-EST
Date: Friday, 22 March 1985, 20:16-EST
From: Charles Rich <RICH at MIT-OZ>
Subject: Make-System
To: BUG-LISPM at MIT-OZ
Cc: RICH at MIT-OZ, YISHAI at MIT-OZ

In Release 4.5, Experimental FOO 1.0, FEP 18, site configuration 62,
on PA Lisp Machine Merlin: (**Note the code is the same in Rel 5; I checked --CR)

MAKE-SYSTEM goes into an infinite loop between SI:SYSTEM-SOURCE-FILES-1 and
SI:DECLARATION-FILE-SYSTEM in the case when you have a call to MAKE-SYSTEM
in a file which is loaded.  To illustrate, put the following in the file FOO.LISP
and then do (LOAD "FOO"):

---

(DEFSYSTEM FOO (:PATCHABLE "FOO"))

(MAKE-SYSTEM 'FOO ':COMPILE)

---

You will see an infinite loop develop at the very end of processing when it is
updating the (newly created) patch directory.  

Note - that the problem is not due to the absence of any modules in FOO or the
fact that the DEFSYSTEM and the MAKE-SYSTEM are in the same file.  This example
is just a distillation of over a day of wasted effort tracking down this bug.

Basically, as far as I can see, the problem is that the source file name of
the system gensym'ed by SI:DECLARATION-FILE-SYSTEM is the generic name of the
file being loaded, which does not have a type, so that SI:SYSTEM-SOURCE-FILES-1
calls SI:DECLARATION-FILE-SYSTEM again, and so on.

My conclusion from this is that it will never work to have an evaluated call
to MAKE-SYSTEM in a file which is then loaded (including a LISPM-INIT file!).
I find it hard to believe no one has tried this before, but this is definitely
the problem I am being screwed by.

Btw, my temporary fix is to bind SYS:FDEFINE-FILE-PATHNAME to nil around the
call to MAKE-SYSTEM.

Finally, just as a historical note, this problem doesn't arise if the
type of the file being loaded is not a known file type (i.e. is not one
of LISP, BIN, etc.).  In this case the source file name of the gensym'ed
system *does* include the type, and the loop is broken.  You will
remember in Rel 4.5, init files were called LISPM.INIT, and it turns out
INIT is not a known file type.  So fortuitously, you can get away with a
MAKE-SYSTEM in a Rel 4.5 init file (but not in Rel 5).

					Grumble....  CR

23-Mar-85 11:56:46-EST,461;000000000001
Received: from MIT-SID by MIT-OZ via Chaosnet; 23 Mar 85 11:56-EST
Date: Saturday, 23 March 1985, 11:46-EST
From: Philip E. Agre <Agre at OZ>
Subject: Function-0-P
To: BUG-LISPM at OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 22, on Lisp Machine Sid Vicious:

I did Function-0-P and asked for a finger "@oz ", including the space (without
the ""s of course).  It complained that "oz ", including the space, was an
unknown host.

/phil
23-Mar-85 12:03:02-EST,383;000000000001
Received: from MIT-SID by MIT-OZ via Chaosnet; 23 Mar 85 12:02-EST
Date: Saturday, 23 March 1985, 11:52-EST
From: Philip E. Agre <Agre at OZ>
Subject: This is what computers are for.
To: BUG-LISPM at OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 22, on Lisp Machine Sid Vicious:

That's Function-0-F, not Function-0-P.
My mind was off making ashtrays.

/phil
23-Mar-85 13:32:44-EST,639;000000000001
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 23 Mar 85 13:32-EST
Date: 23 Mar 1985  13:35 EST (Sat)
Message-ID: <SR.EHPYC.12097362193.BABYL@MIT-SPEECH>
From: Scott Cyphers <SR.EHPYC@MIT-SPEECH>
Subject: Terminal F
To:   bug-lispm@oz

There should be a way in terminal-f to finger a site full of lisp
machines.  I know that the function chaos:finger-lispms-at-site will
do it, but there should be a way to do something like have terminal-nf
finger all the lispms in the MIT site (not the namespace, which is too
big to be useful), and have terminal-0f have a way of accepting a
site, similar to the way it accepts a host.
23-Mar-85 14:39:14-EST,976;000000000001
Received: from MIT-VAX by MIT-OZ via Chaosnet; 23 Mar 85 14:39-EST
Received: by mit-vax.Mit-chaos.Arpa (4.12/4.8) with CHAOS id AA29894; Sat, 23 Mar 85 14:36:14 est
Date: Saturday, 23 March 1985, 14:37-EST
From: Richard E. Zippel <RZ@MIT-MC>
Subject: Function-0-P
To: Agre@OZ, BUG-LISPM@OZ
In-Reply-To: The message of 23 Mar 85 11:46-EST from Philip E. Agre <Agre at OZ>,
             The message of 23 Mar 85 11:52-EST from Philip E. Agre <Agre at OZ>
Message-Id: <850323143705.5.RZ@GSTAAD.MIT>

    Date: Saturday, 23 March 1985, 11:46-EST
    From: Philip E. Agre <Agre at OZ>

    In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 22, on Lisp Machine Sid Vicious:

    I did Function-0-F and asked for a finger "@oz ", including the space (without
    the ""s of course).  It complained that "oz ", including the space, was an
    unknown host.

    /phil

Both (neti:finger "@oz ") and
Function-0-F "@oz "  seem to work on Release 6.0 Beta II.
23-Mar-85 14:45:59-EST,1608;000000000001
Received: by MIT-OZ via Chaosnet; 23 Mar 85 14:45-EST
Received: from SCRC-NEPONSET by SCRC-VALLECITO via CHAOS with CHAOS-MAIL id 4344; Sat 23-Mar-85 13:28:54-EST
Date: Saturday, 23 March 1985, 13:30-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: LOAD
To: Charles Rich <RICH at OZ>, BUG-LISPM at OZ
cc: Yishai at OZ
In-Reply-To: The message of 22 Mar 85 17:35-EST from Charles Rich <RICH at OZ>
Message-ID: <850323133002.5.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Friday, 22 March 1985, 17:35-EST
    From: Charles Rich <RICH at MIT-OZ>

    Is there a version of LOAD which when given a filename of the
    form "dev:<dir>fn1", i.e. with no FN2, will load either the
    binary or the source file, *whichever is more recent* ???

Yes, but it's called something else, and it doesn't take a filename...

    The present behavior of LOAD is to always load the binary if
    it exists in this case.  

    For example, the new version of load I suggest above would
    be more appropriate for loading LISPM-INIT files.  I just spent
    several wasted hours trying to debug an subtle login initialization problem
    without realizing that there was an old compiled version sitting
    around.  I am sure there are many other situations where the
    suggested semantics is also more appropriate.

It's called (make-system <system> :compile :noconfirm).  I'm serious,
even for init files.  I do NOT compile my init file, but my init file
does contain a defsystem which describes my personal environment, and my
init file really does do a make-system.
23-Mar-85 14:49:01-EST,1013;000000000001
Received: from MIT-VAX by MIT-OZ via Chaosnet; 23 Mar 85 14:48-EST
Received: by mit-vax.Mit-chaos.Arpa (4.12/4.8) with CHAOS id AA29927; Sat, 23 Mar 85 14:38:52 est
Date: Saturday, 23 March 1985, 14:39-EST
From: Richard E. Zippel <RZ@MIT-MC>
Subject: Terminal F
To: SR.EHPYC@MIT-SPEECH, bug-lispm@OZ
In-Reply-To: <SR.EHPYC.12097362193.BABYL@MIT-SPEECH>
Message-Id: <850323143940.7.RZ@GSTAAD.MIT>

    Date: 23 Mar 1985  13:35 EST (Sat)
    From: Scott Cyphers <SR.EHPYC@MIT-SPEECH>

    There should be a way in terminal-f to finger a site full of lisp
    machines.  I know that the function chaos:finger-lispms-at-site will
    do it, but there should be a way to do something like have terminal-nf
    finger all the lispms in the MIT site (not the namespace, which is too
    big to be useful), and have terminal-0f have a way of accepting a
    site, similar to the way it accepts a host.

In vx:/usr/rz/Hacks/Finger-hack.lisp, there is some code that does this
for Release 6.0 Systems.
23-Mar-85 15:01:11-EST,785;000000000001
Received: from MIT-MC by MIT-OZ via Chaosnet; 23 Mar 85 15:00-EST
Received: from MIT-SMOKEY by MIT-MC via Chaosnet; 23 MAR 85  15:00:57 EST
Date: Saturday, 23 March 1985, 14:59-EST
From: Scott Cyphers <sr.ehpyc at MIT-SPEECH>
Subject: Terminal F
To: RZ at MIT-MC, SR.EHPYC at MIT-SPEECH, bug-lispm at OZ
In-Reply-To: <850323143940.7.RZ@GSTAAD.MIT>
Message-ID: <850323145932.1.CYPHER@MIT-SMOKEY.MIT>

That then makes at least two of us who have thought it was useful enough
to go and write something that does it.  My version uses a name not
preceded by an @ to indicate a site instead of a host. (see
goldy:>cypher>finger-lsc.lisp (it also has a terminal-L for LSC movie
information).  That makes it a trend, reinforcing the idea that it
should be a part of the system.
23-Mar-85 21:03:47-EST,3984;000000000001
Received: from MIT-JANIS by MIT-OZ via Chaosnet; 23 Mar 85 21:03-EST
Date: Saturday, 23 March 1985, 21:03-EST
From: David Chapman <Zvona at OZ>
Subject: namespace lossage
To: BUG-LISPM at OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 24, on Lisp Machine Janis Joplin:

I found this machine cold-booted in this state:

>>Error: The object (:HOST #<NAME SWW|RR 15477044> #<NAMESPACE SWW 15140220>) is not a valid function
While in the function (:HOST #<NAME SWW|RR 15477044> #<NAMESPACE SWW 15140220>)  NET:FIND-PATHS-TO-SERVICE-ON-HOST  NETI:FIND-PATH-TO-SERVICE-ON-HOST

(:HOST #<NAME SWW|RR 15477044> #<NAMESPACE SWW 15140220>):
   Arg 0: :NETWORK-SERVICES

NET:FIND-PATHS-TO-SERVICE-ON-HOST:  (P.C. = 41)
   Arg 0 (SERVICE): :NAMESPACE-TIMESTAMP
   Arg 1 (HOST): (:HOST #<NAME SWW|RR 15477044> #<NAMESPACE SWW 15140220>)
   Arg 2 (ONLY-NEED-BEST): T

NETI:FIND-PATH-TO-SERVICE-ON-HOST:  (P.C. = 7)
   Arg 0 (SERVICE): :NAMESPACE-TIMESTAMP
   Arg 1 (HOST): (:HOST #<NAME SWW|RR 15477044> #<NAMESPACE SWW 15140220>)

NETI:GET-LATEST-TIMESTAMP-FROM-NETWORK:  (P.C. = 34)
   Arg 0 (NAMESPACE): #<NAMESPACE SWW 15140220>

NETI:GET-INCREMENTAL-UPDATE-FROM-NETWORK:  (P.C. = 440)
   Arg 0 (NAMESPACE): #<NAMESPACE SWW 15140220>
   Arg 1 (STARTING-TIMESTAMP): 1012

(:METHOD NETI:NAMESPACE :GET-LATEST-TIMESTAMP):  (P.C. = 21)
   Arg 0 (SELF): #<NAMESPACE SWW 15140220>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NETI:NAMESPACE -- 8. IV's, 0. FL's 52475062>
   Arg 2 (OPERATION): :GET-LATEST-TIMESTAMP

(:METHOD NETI:NAMESPACE :VALIDATION-TIMESTAMP):  (P.C. = 20)
   Arg 0 (SELF): #<NAMESPACE SWW 15140220>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NETI:NAMESPACE -- 8. IV's, 0. FL's 52475062>
   Arg 2 (OPERATION): :VALIDATION-TIMESTAMP

(:METHOD NET:OBJECT :CHECK-VALIDITY):  (P.C. = 102)
   Arg 0 (SELF): #<NAMESPACE SWW 15140220>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NET:OBJECT -- 3. IV's, 1. FL's 52475072>
   Arg 2 (OPERATION): :CHECK-VALIDITY
   Arg 3 (RELATIVE-TO-NAMESPACE): #<NAMESPACE SWW 15140220>
   Arg 4 (FORCE-P): NIL

Rest of stack:
(:METHOD NET:OBJECT :CHECK-VALIDITY):  (P.C. = 34)
NETI:FIND-OBJECT-NAMED-IN-NAMESPACE:  (P.C. = 45)
NETI:PARSE-NAME:  (P.C. = 104)
(:INTERNAL (:PROPERTY :NAME NETI:PRIMITIVE-TYPE) 0):  (P.C. = 6)
(:PROPERTY :NAME NETI:PRIMITIVE-TYPE):  (P.C. = 12)
NETI:CONVERT-TOKENS:  (P.C. = 15)
(:INTERNAL (:PROPERTY :ELEMENT NETI:PRIMITIVE-TYPE) 0):  (P.C. = 5)
(:PROPERTY :ELEMENT NETI:PRIMITIVE-TYPE):  (P.C. = 12)
NETI:CONVERT-TOKENS:  (P.C. = 15)
NETI:RECORD-INTO-PROPERTY-LIST-1:  (P.C. = 54)
NETI:RECORD-INTO-PROPERTY-LIST:  (P.C. = 75)
NETI:QUERY-NAMESPACE-SERVER:  (P.C. = 427)
(:METHOD NET:OBJECT :CHECK-VALIDITY):  (P.C. = 227)
NETI:FIND-OBJECT-NAMED-IN-NAMESPACE:  (P.C. = 45)
NETI:CONVERT-TOKENS:  (P.C. = 154)
(:INTERNAL (:PROPERTY :PAIR NETI:PRIMITIVE-TYPE) 0):  (P.C. = 5)
(:PROPERTY :PAIR NETI:PRIMITIVE-TYPE):  (P.C. = 12)
NETI:CONVERT-TOKENS:  (P.C. = 15)
(:INTERNAL (:PROPERTY :ELEMENT NETI:PRIMITIVE-TYPE) 0):  (P.C. = 5)
(:PROPERTY :ELEMENT NETI:PRIMITIVE-TYPE):  (P.C. = 12)
NETI:CONVERT-TOKENS:  (P.C. = 15)
NETI:RECORD-INTO-PROPERTY-LIST-1:  (P.C. = 54)
NETI:RECORD-INTO-PROPERTY-LIST:  (P.C. = 75)
NETI:QUERY-NAMESPACE-SERVER:  (P.C. = 427)
(:METHOD NET:OBJECT :CHECK-VALIDITY):  (P.C. = 227)
NETI:FIND-OBJECT-NAMED-IN-NAMESPACE:  (P.C. = 45)
NETI:CONVERT-TOKENS:  (P.C. = 154)
(:INTERNAL (:PROPERTY :ELEMENT NETI:PRIMITIVE-TYPE) 0):  (P.C. = 5)
(:PROPERTY :ELEMENT NETI:PRIMITIVE-TYPE):  (P.C. = 12)
NETI:CONVERT-TOKENS:  (P.C. = 15)
NETI:RECORD-INTO-PROPERTY-LIST-1:  (P.C. = 54)
NETI:RECORD-INTO-PROPERTY-LIST:  (P.C. = 75)
NETI:QUERY-NAMESPACE-SERVER:  (P.C. = 427)
NETI:GET-INCREMENTAL-UPDATE-FROM-NETWORK:  (P.C. = 421)
(:METHOD NETI:NAMESPACE :GET-LATEST-TIMESTAMP):  (P.C. = 21)
NETI:INITIALIZE-NAMESPACES-AND-NETWORK:  (P.C. = 155)
LISP-REINITIALIZE:  (P.C. = 443)
SI:LISP-TOP-LEVEL:  (P.C. = 3)
23-Mar-85 21:59:18-EST,935;000000000001
Received: from MIT-MC by MIT-OZ via Chaosnet; 23 Mar 85 21:59-EST
Received: from MIT-JOE-LOUIS by MIT-MC via Chaosnet; 23 MAR 85  21:59:56 EST
Date: Saturday, 23 March 1985, 21:57-EST
From: Jeff Chang <chang at VAX>
To: BUG-LISPM at OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10, Experimental Boxer 5.4,
Educational Computing Group, on Lisp Machine Joe Louis:

I was in the debugger and pressed c-M and the system died!

>>Error: The object #<IBEAM-BLINKER 1001447> received a :SET-SIZE message, which went unclaimed.
         The rest of the message was (18. 43.)
While in the function (:METHOD TV:SHEET :SET-FONT-MAP)  TOP-LEVEL  SI:PROCESS-TOP-LEVEL

TOP-LEVEL:  (P.C. = 44)  (from VX: /usr/chang/box2.)
   Arg 0 (FRAME): #<FORMULA-FRAME Formula Frame 2 1103332 deexposed>
   Local 1 (FONT-TYPE): #<ART-Q-4. 33351047>

SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
   --Defaulted args:--
   Arg 0 (IGNORE): NIL
23-Mar-85 21:59:59-EST,4477;000000000001
Received: from MIT-DUANE by MIT-OZ via Chaosnet; 23 Mar 85 21:59-EST
Date: Saturday, 23 March 1985, 21:57-EST
From: Tim McNerney <TIM at MIT-MC>
Subject: Debugger scoping lossage
To: BUG-LISPM at OZ
Message-ID: <850323215731.1.TIM@DUANE.MIT>

In Symbolics 3670 Release 6.0 Beta IIc, AISite 6.0,
microcode TMC5-IO4-MIC 315, FEP 22, on Lisp Machine Duane Allman:

   What happened to the locals INT and UPPER-BOUND?

   It looks like the rearrangement of code by the compiler
   is not accurately reflected in the debugging info...

>>Break: 
While in the function INT-SET-INSERT!  *EVAL  (:INTERNAL LISP-COMMAND-LOOP-INTERNAL 0)

INT-SET-INSERT!:  (P.C. = 11)  (from CORWIN:NIL$DISK:[NIL.IO]MINTSET)
   Arg 0 (INT-SET): (INT-SET (3 . 6) (16 . 20))
   Arg 1 (I): 6
   Arg 2 (GAP-WIDTH): 7
   --Defaulted args:--
   Arg 3 (MAX): NIL
   Local 4 (INTS): ((3 . 6) (16 . 20))

Source Code:

(defun int-set-insert! (int-set i gap-width &optional max)
  (do ((ints (int-set-int-list int-set) (rest ints)))
      ((null ints))
    (let* ((int (first ints))
	   (upper-bound (int-upper-bound int)))
      (unless (<=& upper-bound i)
	(cond ((<=& i (int-lower-bound int))
	       (incf (int-lower-bound int) gap-width)
	       (incf (int-upper-bound int) gap-width))
	      (:split-int
	       (setf (int-upper-bound int) i)
	       (DBG)
	       (setf (rest ints) (cons (make-int (+& i gap-width -1)
						 (+& upper-bound gap-width -1))
				       (rest ints))))))))
  (when max
    (int-set-truncate! int-set max))
  int-set)

Disassembled Code:

      0  ENTRY: 3 REQUIRED, 1 OPTIONAL
      1  PUSH-NIL 
      2  PUSH-LOCAL FP|0            ;INT-SET
      3  BUILTIN CDR STACK          ;creating INTS(FP|4)
      4  BRANCH 31
      5  PUSH-LOCAL FP|5
      6  PUSH-LOCAL FP|1            ;I
      7  BUILTIN RPLACD IGNORE 
     10  CALL-0-IGNORE #'DBG
  => 11  PUSH-LOCAL FP|4            ;INTS
     12  PUSH-LOCAL FP|1            ;I
     13  PUSH-LOCAL FP|2            ;GAP-WIDTH
     14  PUSH-IMMED -1
     15  CALL-3-STACK #'+&
     16  PUSH-LOCAL FP|6
     17  PUSH-LOCAL FP|2            ;GAP-WIDTH
     20  PUSH-IMMED -1
     21  CALL-3-STACK #'+&
     22  BUILTIN CONS STACK 
     23  PUSH-LOCAL FP|4            ;INTS
     24  BUILTIN CDR STACK 
     25  BUILTIN CONS STACK 
     26  BUILTIN RPLACD IGNORE 
     27  POP-N 2
     30  BUILTIN CDR-LOCAL IGNORE FP|4      ;INTS
     31  PUSH-LOCAL FP|4            ;INTS
     32  BRANCH-FALSE-AND-POP 61
     33  BUILTIN CAR STACK          ;creating INT(FP|5)
     34  PUSH-LOCAL FP|5
     35  BUILTIN CDR STACK          ;creating UPPER-BOUND(FP|6)
     36  PUSH-LOCAL FP|6
     37  PUSH-LOCAL FP|1            ;I
     40  CALL-2-STACK #'GLOBAL:<=&
     41  BRANCH-TRUE 27
     42  PUSH-LOCAL FP|1            ;I
     43  PUSH-LOCAL FP|5
     44  BUILTIN CAR STACK 
     45  CALL-2-STACK #'GLOBAL:<=&
     46  BRANCH-FALSE 5
     47  PUSH-LOCAL FP|5
     50  PUSH-LOCAL FP|5
     51  BUILTIN CAR STACK 
     52  BUILTIN +-INTERNAL STACK FP|2      ;GAP-WIDTH
     53  BUILTIN RPLACA IGNORE 
     54  PUSH-LOCAL FP|5
     55  PUSH-LOCAL FP|5
     56  BUILTIN CDR STACK 
     57  BUILTIN +-INTERNAL STACK FP|2      ;GAP-WIDTH
     60  BRANCH 26
     61  POP-N 1
     62  PUSH-LOCAL FP|3            ;MAX
     63  BRANCH-FALSE 117
     64  PUSH-INDIRECT *TEMP-INTS*
     65  BRANCH-TRUE 72
     66  PUSH-LOCAL FP|3            ;MAX
     67  PUSH-CONSTANT 2147483647
     70  BUILTIN CONS STACK 
     71  BRANCH 106
     72  PUSH-INDIRECT *TEMP-INTS*
     73  PUSH-INDIRECT *TEMP-INTS*
     74  BUILTIN CDR STACK 
     75  POP-INDIRECT *TEMP-INTS*   ;creating .OLD-INT.(FP|4)
     76  PUSH-LOCAL FP|4            ;.OLD-INT.
     77  PUSH-LOCAL FP|3            ;MAX
    100  BUILTIN RPLACA IGNORE 
    101  PUSH-LOCAL FP|4            ;.OLD-INT.
    102  PUSH-CONSTANT 2147483647
    103  BUILTIN RPLACD IGNORE 
    104  PUSH-LOCAL FP|4            ;.OLD-INT.
    105  POP-N-SAVE-1 1             ;creating .INT(FP|4)
    106  PUSH-LOCAL FP|0            ;INT-SET
    107  PUSH-LOCAL FP|4            ;.INT
    110  CALL-2-IGNORE #'INT-SET-REM-INT!
    111  PUSH-LOCAL FP|4            ;.INT
    112  PUSH-INDIRECT *TEMP-INTS*
    113  BUILTIN RPLACD IGNORE 
    114  PUSH-LOCAL FP|4            ;.INT
    115  MOVEM-INDIRECT *TEMP-INTS*
    116  POP-N 2
    117  PUSH-LOCAL FP|0            ;INT-SET
    120  RETURN-STACK 
25-Mar-85 11:37:03-EST,645;000000000001
Received: from MIT-AVATAR by MIT-OZ via Chaosnet; 25 Mar 85 11:36-EST
Date: Monday, 25 March 1985, 11:36-EST
From: Rich at MIT-OZ
Subject: Fundefine
To: BUG-LISPM at MIT-OZ

In Release 4.5, Reasoning Utility Package 29.0, site configuration 88,
Cake, on PA Lisp Machine Avatar:

May I suggest that FUNDEFINE return the old definition.  Currently
it just returns its argument (the function spec).  Returning the
old definition would help catch the error I often make in debugging,
which is to spell the desired function name slightly wrong and then
not realize that the call to FUNDEFINE has not had the desired 
effect.

			-CR
25-Mar-85 17:50:06-EST,1001;000000000001
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 25 Mar 85 17:50-EST
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 203186; Mon 25-Mar-85 17:27:33-EST
Date: Monday, 25 March 1985, 17:27-EST
From: David A. Moon <Moon at SCRC-STONY-BROOK>
Subject: Debugger scoping lossage
To: Tim McNerney <TIM at MIT-MC>
cc: BUG-LISPM at OZ
In-Reply-To: <850323215731.1.TIM@DUANE.MIT>
Message-ID: <850325172741.3.MOON@EUPHRATES.SCRC.Symbolics.COM>

    Date: Saturday, 23 March 1985, 21:57-EST
    From: Tim McNerney <TIM at MIT-MC>

    In Symbolics 3670 Release 6.0 Beta IIc, AISite 6.0,
    microcode TMC5-IO4-MIC 315, FEP 22, on Lisp Machine Duane Allman:

       What happened to the locals INT and UPPER-BOUND?

       It looks like the rearrangement of code by the compiler
       is not accurately reflected in the debugging info...

Yes, this has been a "known bug" for quite a while.  It won't
be fixed in Release 6.0, but maybe someday, I hope.
27-Mar-85 16:17:03-EST,455;000000000001
Received: from MIT-AVATAR by MIT-OZ via Chaosnet; 27 Mar 85 16:16-EST
Date: Wednesday, 27 March 1985, 16:16-EST
From: RICH at MIT-OZ
Sender: YISHAI at MIT-OZ
Subject: INTERVAL-STREAM
To: BUG-LISPM at MIT-OZ

In Release 4.5, Reasoning Utility Package 29.0, site configuration 88,
Cake, on PA Lisp Machine Avatar:

Streams created by INTERVAL-STREAM and INTERVAL-FONTS-STREAM
do not handle the message :SIZE-IN-CHARACTERS.  They should.
			-CR
27-Mar-85 17:03:49-EST,1051;000000000001
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 27 Mar 85 17:03-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 204414; Wed 27-Mar-85 16:51:33-EST
Date: Wednesday, 27 March 1985, 16:53-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: INTERVAL-STREAM
To: RICH at OZ, BUG-LISPM at OZ
In-Reply-To: The message of 27 Mar 85 16:16-EST from RICH at OZ
Message-ID: <850327165309.6.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Wednesday, 27 March 1985, 16:16-EST
    From: RICH at MIT-OZ

    In Release 4.5, Reasoning Utility Package 29.0, site configuration 88,
    Cake, on PA Lisp Machine Avatar:

    Streams created by INTERVAL-STREAM and INTERVAL-FONTS-STREAM
    do not handle the message :SIZE-IN-CHARACTERS.  They should.

What should it return??  Outputing beyond the width does not do a
newline and start on the next line; it keeps on going.  What if you have
5 Zmacs frames?  From which does it get the possible values?  Maybe
returning NIL NIL is good enough?
27-Mar-85 17:47:14-EST,1547;000000000001
Mail-From: RICH created at 27-Mar-85 17:47:05
Date: 27 Mar 1985  17:47 EST (Wed)
Message-ID: <RICH.12098456610.BABYL@MIT-OZ>
From: Charles Rich <RICH@MIT-OZ>
To:   "David C. Plummer in disguise" <DCP@SCRC-QUABBIN>
Cc:   BUG-LISPM@MIT-OZ
Subject: INTERVAL-STREAM
In-reply-to: Msg of 27 Mar 1985 16:53-EST from David C. Plummer in disguise <DCP at SCRC-QUABBIN>

    Date: Wednesday, 27 March 1985, 16:53-EST
    From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
    To:   RICH at OZ, BUG-LISPM at OZ
    Re:   INTERVAL-STREAM

        Date: Wednesday, 27 March 1985, 16:16-EST
        From: RICH at MIT-OZ

        In Release 4.5, Reasoning Utility Package 29.0, site configuration 88,
        Cake, on PA Lisp Machine Avatar:

        Streams created by INTERVAL-STREAM and INTERVAL-FONTS-STREAM
        do not handle the message :SIZE-IN-CHARACTERS.  They should.

    What should it return??  Outputing beyond the width does not do a
    newline and start on the next line; it keeps on going.  What if you have
    5 Zmacs frames?  From which does it get the possible values?  Maybe
    returning NIL NIL is good enough?

The problem I am having is that I am pretty-printing into a buffer
using (ZWEI:OPEN-EDITOR-STREAM ':BUFFER-NAME "..."), and the pretty
printer needs to know the line width.  The value returned by the
message :SIZE-IN-CHARACTERS should be the number of characters which
fit on a line in the current font in that buffer without wrapping over.
		
		Thanks for your attention, -Chuck.
28-Mar-85 01:47:18-EST,2346;000000000001
Received: from MIT-JANIS by MIT-OZ via Chaosnet; 28 Mar 85 01:47-EST
Date: Thursday, 28 March 1985, 01:50-EST
From: David Chapman <Zvona at OZ>
Subject: pathname default problem in CP Show Font command
To: BUG-LISPM at OZ
Message-ID: <850328015010.3.ZVONA@JANIS.MIT>

In Symbolics 3600 Release 6.0, AISite 7.0, microcode TMC5-MIC 319, on Lisp Machine Janis Joplin:
(SI:FULL-GC :SYSTEM-RELEASE T)'s since release of system: 1

It's not too early to bug-report 6.0, right?

Show Font TALLY

>>Error: The second argument (DEFAULTS) to FS:SET-DEFAULT-PATHNAME, NIL, was of the wrong type.
         The function expected pathname defaults alist.
While in the function FS:SET-DEFAULT-PATHNAME  FED:LOAD-FONT-FROM-SYM  (:PROPERTY
                                                                          SI:COM-SHOW-FONT
                                                                          SI:CP-FUNCTION)

FS:SET-DEFAULT-PATHNAME:  (P.C. = 134)
   Arg 0 (PATHNAME): #<LMFS-PATHNAME "B:>sys>r6>fonts>tv>tally.bfd">
   Arg 1 (DEFAULTS): NIL
   Local 2: ("Skip setting default to ~A,~@
			       and perhaps try to use it."
             #<LMFS-PATHNAME "B:>sys>r6>fonts>tv>tally.bfd">)
   Local 3 (ELEM): NIL

FED:LOAD-FONT-FROM-SYM:  (P.C. = 27)
   Arg 0 (SYM): FONTS:TALLY
   --Defaulted args:--
   Arg 1 (QUERY-P): NIL

(:PROPERTY SI:COM-SHOW-FONT SI:CP-FUNCTION):  (P.C. = 11)
   Arg 0 (FONT): "TALLY"

SI:COM-SHOW-FONT:  (P.C. = 7)
   Arg 0 (FONT): "TALLY"

SI:*EVAL:  (P.C. = 403)
   Arg 0 (FORM): (SI:COM-SHOW-FONT "TALLY")
   Local 0 (FORM): NIL
   --Defaulted args:--
   Arg 1 (ENV): NIL
   Arg 2 (HOOK): NIL

(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0):  (P.C. = 152)
   Arg 0 (.LEXICAL-ENVIRONMENT-POINTER.): #<DTP-LOCATIVE 15200073>

TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
   Arg 0 (NEW-MODE): :BLAST
   Arg 1 (STREAM): #:TERMINAL-IO-SYN-STREAM
   Arg 2 (CONTINUATION): #<LEXICAL-CLOSURE (:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0) 15200100>

SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
   Arg 0 (NAME): "Lisp Top Level"
   Arg 1 (ABORT-FUNCTION): NIL
   Arg 2 (READ-FUNCTION): NIL
   Arg 3 (EVAL-FUNCTION): NIL
   Arg 4 (PRINT-FUNCTION): NIL

Rest of stack:
SI:LISP-COMMAND-LOOP:  (P.C. = 67)
SI:LISP-TOP-LEVEL1:  (P.C. = 5)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
28-Mar-85 07:48:09-EST,6955;000000000001
Received: from MIT-APIARY-9 by MIT-OZ via Chaosnet; 28 Mar 85 07:48-EST
Date: Thursday, 28 March 1985, 07:48-EST
From: Tomr at OZ
Sender: crm at OZ
Subject: Daemonic File Lossage.
To: BUG-LISPM at OZ
Message-ID: <850328074808.1.CRM@APIARY-9.MIT>

In Symbolics 3600 Release 6.0 Beta IIc, microcode TMC5-MIC 315, FEP 18, on APIARY-9:

As you can see, I was making a system when this occured.

This error occured once before, running the same release, different file though.
It's tough for me to reproduce it since it occurs randomly.  When I check the
buffer, sure enough, I find that the code has been replaced by the lossage you
see below.

Any ideas as to the "Hows" and "Whys"??

>>Error: End of file for #<DTP-CLOSURE 117423527>.
         End of file occurred while reading (IN-PARALLEL (READY TARGET)                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             )
While in the function (:PROPERTY LIST SI:STANDARD-READ-FUNCTION)  SI:XR-READ-THING  (:PROPERTY LIST SI:STANDARD-READ-FUNCTION)

(:PROPERTY LIST SI:STANDARD-READ-FUNCTION):  (P.C. = 271)
   Arg 0 (STREAM): #<DTP-CLOSURE 117423527>
   Arg 1 (SHOULD-BE-NIL): NIL
   Arg 2 (FIFTY): 40
   Local 3 (LIST): (IN-PARALLEL (READY TARGET)                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             )
   Local 4 (THING): SI:EOF
   Local 5 (TYPE): SI:SPECIAL-TOKEN
   Local 6 (SPLICEP): NIL
   Local 7 (END-OF-LIST): (                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            )
   Local 8 (BP): NIL
   Local 9 (CORRESPONDENCE-ENTRY): NIL

SI:XR-READ-THING:  (P.C. = 60)
   Arg 0 (STREAM): #<DTP-CLOSURE 117423527>

(:PROPERTY LIST SI:STANDARD-READ-FUNCTION):  (P.C. = 44)
   Arg 0 (STREAM): #<DTP-CLOSURE 117423527>
   Arg 1 (SHOULD-BE-NIL): NIL
   Arg 2 (FIFTY): 40

SI:XR-READ-THING:  (P.C. = 60)
   Arg 0 (STREAM): #<DTP-CLOSURE 117423527>

(:PROPERTY LIST SI:STANDARD-READ-FUNCTION):  (P.C. = 44)
   Arg 0 (STREAM): #<DTP-CLOSURE 117423527>
   Arg 1 (SHOULD-BE-NIL): NIL
   Arg 2 (FIFTY): 40

SI:XR-READ-THING:  (P.C. = 60)
   Arg 0 (STREAM): #<DTP-CLOSURE 117423527>

(:PROPERTY LIST SI:STANDARD-READ-FUNCTION):  (P.C. = 44)
   Arg 0 (STREAM): #<DTP-CLOSURE 117423527>
   Arg 1 (SHOULD-BE-NIL): NIL
   Arg 2 (FIFTY): 40

SI:XR-READ-THING:  (P.C. = 60)
   Arg 0 (STREAM): #<DTP-CLOSURE 117423527>

Rest of stack:
(:PROPERTY LIST SI:STANDARD-READ-FUNCTION):  (P.C. = 44)
SI:XR-READ-THING:  (P.C. = 60)
(:INTERNAL SI:READ-INTERNAL 0 SI:.WITH-INPUT-EDITING-FUNCTION.):  (P.C. = 15)
SI:READ-INTERNAL:  (P.C. = 35)
READ:  (P.C. = 6)
(:INTERNAL COMPILER:COMPILE-PROCESS-DEFAULT 5 (:READ)):  (P.C. = 4)
COMPILER:COMPILE-PROCESS-DEFAULT:  (P.C. = 66)
COMPILER:COMPILE-TO-FILE:  (P.C. = 77)
COMPILER:PROCESS-FORMS-FROM-STREAM:  (P.C. = 102)
COMPILER:COMPILE-FROM-STREAM:  (P.C. = 237)
COMPILER:COMPILE-FILE:  (P.C. = 303)
SI:COMPILE-FILE-1:  (P.C. = 6)
SI:DO-FILE-TRANSFORMATIONS:  (P.C. = 244)
SI:PERFORM-TRANSFORMATIONS:  (P.C. = 167)
SI:PERFORM-TRANSFORMATIONS:  (P.C. = 64)
MAKE-SYSTEM:  (P.C. = 241)
MS1:  (from AP6:>act3-experimental>loader)
SI:*EVAL:  (P.C. = 403)
SI:READFILE-INTERNAL:  (P.C. = 131)
FS:LOAD-STREAM:  (P.C. = 16)
LOAD:  (P.C. = 124)
SI:*EVAL:  (P.C. = 403)
(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0):  (P.C. = 152)
TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)  (from SYS: PATCH; SYSTEM-269-48)
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
SI:LISP-COMMAND-LOOP:  (P.C. = 67)
SI:LISP-TOP-LEVEL1:  (P.C. = 5)
SI:LISP-TOP-LEVEL2:  (P.C. = 5)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
28-Mar-85 08:52:47-EST,876;000000000001
Received: from MIT-ELVIS by MIT-OZ via Chaosnet; 28 Mar 85 08:52-EST
Date: Thursday, 28 March 1985, 08:54-EST
From: Chris Lindblad <cjl at OZ>
Subject: net:set-site confused about site and namespace
To: BUG-LISPM at OZ
Message-ID: <850328085406.1.CJL@ELVIS.MIT>

In Symbolics 3600 Release 6.0, AISite 7.0, microcode TMC5-MIC 319,
FEP 22, on Lisp Machine Elvis Presley:

It appears that net:set-site only works when the arg is either the name
of a site that in in a namespace of the same name, or the name of a site
in the current namespace. For example, from the distributed 6.0 world, I
can't (neti:set-site :ai) on a machine in the ai site, but I can
(neti:set-site :mit) on a machine in the mit site, and then on that
world load, do (neti:set-site :ai) on a machine in the ai site. I would
like to be able to set site to ai from a distribution world load.
28-Mar-85 11:47:44-EST,1998;000000000001
Received: by MIT-OZ via Chaosnet; 28 Mar 85 11:47-EST
Received: from SCRC-NEPONSET by SCRC-VALLECITO via CHAOS with CHAOS-MAIL id 4915; Wed 27-Mar-85 19:20:42-EST
Date: Wednesday, 27 March 1985, 19:21-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: INTERVAL-STREAM
To: Charles Rich <RICH at OZ>,
    David C. Plummer in disguise <DCP at SCRC-QUABBIN>
cc: BUG-LISPM at OZ
In-Reply-To: <RICH.12098456610.BABYL@MIT-OZ>
Message-ID: <850327192112.8.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: 27 Mar 1985  17:47 EST (Wed)
    From: Charles Rich <RICH@MIT-OZ>

	Date: Wednesday, 27 March 1985, 16:53-EST
	From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>

	    Date: Wednesday, 27 March 1985, 16:16-EST
	    From: RICH at MIT-OZ

	    In Release 4.5, Reasoning Utility Package 29.0, site configuration 88,
	    Cake, on PA Lisp Machine Avatar:

	    Streams created by INTERVAL-STREAM and INTERVAL-FONTS-STREAM
	    do not handle the message :SIZE-IN-CHARACTERS.  They should.

	What should it return??  Outputing beyond the width does not do a
	newline and start on the next line; it keeps on going.  What if you have
	5 Zmacs frames?  From which does it get the possible values?  Maybe
	returning NIL NIL is good enough?

    The problem I am having is that I am pretty-printing into a buffer
    using (ZWEI:OPEN-EDITOR-STREAM ':BUFFER-NAME "..."), and the pretty
    printer needs to know the line width.  The value returned by the
    message :SIZE-IN-CHARACTERS should be the number of characters which
    fit on a line in the current font in that buffer without wrapping over.

Buffers don't have widths, windows do.  Some people have full screen
editors windows.  Some have #o1400 pixel wide editors.  Some people
might create ones that are in between, or perhaps even smaller.

Hmmm... maybe what it really wants to do is use the current
fill-pointer?  That still doesn't give any hint what the vertical size
should be.
28-Mar-85 12:39:35-EST,1073;000000000001
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 28 Mar 85 12:39-EST
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 204944; Thu 28-Mar-85 12:38:26-EST
Date: Thursday, 28 March 1985, 12:39-EST
From: David A. Moon <Moon at SCRC-STONY-BROOK>
Subject: net:set-site confused about site and namespace
To: Chris Lindblad <cjl at OZ>
cc: BUG-LISPM at OZ
In-Reply-To: <850328085406.1.CJL@ELVIS.MIT>
Message-ID: <850328123947.4.MOON@EUPHRATES.SCRC.Symbolics.COM>

    Date: Thursday, 28 March 1985, 08:54-EST
    From: Chris Lindblad <cjl at OZ>

    In Symbolics 3600 Release 6.0, AISite 7.0, microcode TMC5-MIC 319,
    FEP 22, on Lisp Machine Elvis Presley:

    It appears that net:set-site only works when the arg is either the name
    of a site that in in a namespace of the same name, or the name of a site
    in the current namespace.

Side comment: names of sites are global, they are not relative to any particular
namespace.  This does not answer your bug report of course, it's just a point
of information.
28-Mar-85 18:32:04-EST,820;000000000001
Received: from MIT-MC by MIT-OZ via Chaosnet; 28 Mar 85 18:31-EST
Received: from MIT-JOE-LOUIS by MIT-MC via Chaosnet; 28 MAR 85  18:32:54 EST
Date: Thursday, 28 March 1985, 18:31-EST
From: Edward H Lay <EHL at OZ>
Subject: named structure funnies
To: BUG-LISPM at OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10, Experimental Boxer 6.0, on Lisp Machine Joe Louis:

How come I can make new data types with....

(DEFSTRUCT (FOO (:TYPE :ARRAY) :NAMED)
  SLOT)

(typep (make-foo)) ==> FOO

(DEFSTRUCT (FOO (:TYPE :NAMED-ARRAY))
  SLOT)

(typep (make-foo)) ==> FOO

(DEFSTRUCT (FOO (:TYPE :NAMED-ARRAY-LEADER))
  SLOT)

(typep (make-foo)) ==> FOO



but not with....


(DEFSTRUCT (FOO (:TYPE :NAMED-LIST))
  SLOT)

(mamed-structure-p (make-foo)) ==> NIL
(typep (make-foo)) ==> :LIST
28-Mar-85 18:44:57-EST,3979;000000000001
Received: from MIT-JIMI by MIT-OZ via Chaosnet; 28 Mar 85 18:44-EST
Date: Thursday, 28 March 1985, 18:44-EST
From: Gumby at MIT-MC
Sender: dph at OZ
Subject: can't hardcopy in doc examiner
To: BUG-LISPM at OZ
Message-ID: <850328184449.3.DPH@JIMI.MIT>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.0,
microcode TMC5-MIC 319, FEP 18, on Lisp Machine Jimi Hendrix:

I said Hardcopy Viewer.  The spooler supports only TFTP.
Also, can that filename be correct?  One of the proceed options was "Retry open of SPOOLER:<DPH>some-file-name.LISP"

>>Error: SPOOLER (at Internet address 18.2.0.128) did not respond to a 104021(:TCP-FTP) request.
While in the function TCP::CHECK-CONNECTION-STATE  TCP::COMPLETE-OPEN-TCB  TCP::OPEN-TCB

TCP::CHECK-CONNECTION-STATE:  (P.C. = 32)
   Arg 0 (TCB): #<TCP connection to SPOOLER 21 (:TCP-FTP), local port 1040 1707460>
   Local 1 (STATE): :SYN-SENT
   Local 2 (SUBSTATE): :ACTIVE

TCP::COMPLETE-OPEN-TCB:  (P.C. = 13)
   Arg 0 (TCB): #<TCP connection to SPOOLER 21 (:TCP-FTP), local port 1040 1707460>
   Arg 1 (TIMEOUT): 1200

TCP::OPEN-TCB:  (P.C. = 156)
   Arg 0 (ACTIVE-P): T
   Arg 1 (HOST): #<ALTO-HOST SPOOLER 1154261>
   Arg 2 (PORT): 21
   Arg 3 (LOCAL-PORT): NIL
   Local 3 (LOCAL-PORT): 1040
   Rest arg: (:TIMEOUT 1200)

TCP:OPEN-TCP-STREAM:  (P.C. = 263)
   Arg 0 (HOST): #<ALTO-HOST SPOOLER 1154261>
   Arg 1 (PORT): 21
   Arg 2 (LOCAL-PORT): NIL
   Rest arg: (:ASCII-TRANSLATION T)

NETI:|MEDIUM-TCP-((NETWORK INTERNET))-G0663|:  (P.C. = 21)
   Arg 0 (SERVICE-ACCESS-PATH): #<SERVICE-ACCESS-PATH FILE (TCP-FTP) -- SPOOLER on INTERNET 12731306>
   Rest arg (CONNECTION-ARGS): (:ASCII-TRANSLATION T)

NETI:GET-CONNECTION-FOR-SERVICE-TO-HOST:  (P.C. = 12)
   Arg 0 (SERVICE-ACCESS-PATH): #<SERVICE-ACCESS-PATH FILE (TCP-FTP) -- SPOOLER on INTERNET 12731306>
   Arg 1 (NETWORK): #<INTERNET-NETWORK INTERNET 1140151>
   Arg 2 (IMPLEMENTATION): #<MEDIUM-IMPLEMENTATION 30011444>
   Arg 3 (CONNECTION-ARGS): (:ASCII-TRANSLATION T)

NETI:GET-CONNECTION-FOR-SERVICE-ON-MEDIUM:  (P.C. = 262)
   Arg 0 (MEDIUM): #<MEDIUM-DESCRIPTION on INTERNET 12731212>
   Arg 1 (SERVICE-ACCESS-PATH): #<SERVICE-ACCESS-PATH FILE (TCP-FTP) -- SPOOLER on INTERNET 12731306>
   Arg 2 (CONNECTION-ARGS): (:ASCII-TRANSLATION T)

NET:GET-CONNECTION-FOR-SERVICE:  (P.C. = 7)
   Arg 0 (SERVICE-ACCESS-PATH): #<SERVICE-ACCESS-PATH FILE (TCP-FTP) -- SPOOLER on INTERNET 12731306>
   Rest arg (CONNECTION-ARGS): (:ASCII-TRANSLATION T)

Rest of stack:
(:DEFUN-METHOD FS:TCP-FTP-VALIDATE-CONN):  (P.C. = 42)
(:METHOD FS:TCP-FTP-CONN :ALLOCATE):  (P.C. = 11)
(:METHOD FS:TCP-FTP-CONN :INIT):  (P.C. = 4)
INSTANTIATE-FLAVOR:  (P.C. = 445)
MAKE-INSTANCE:  (P.C. = 6)
(:METHOD FS:TCP-FTP-FILE-ACCESS-PATH :INIT):  (P.C. = 10)
INSTANTIATE-FLAVOR:  (P.C. = 445)
MAKE-INSTANCE:  (P.C. = 6)
FS:INVOKE-FILE-SERVICE:  (P.C. = 51)
FS:INVOKE-SERVICE-FILE-WITH-TCP-FTP:  (P.C. = 3)
NET:INVOKE-SERVICE-ACCESS-PATH:  (P.C. = 75)
NET:INVOKE-SERVICE-ON-HOST:  (P.C. = 226)
(:METHOD FS:ACTIVE-PATHNAME-HOST :FILE-ACCESS-PATH):  (P.C. = 57)
(:METHOD FS:ACTIVE-PATHNAME-MIXIN :OPEN):  (P.C. = 7)
FS:COMMON-LISP-OPEN:  (P.C. = 450)
OPEN:  (P.C. = 257)
(:PROPERTY :FILE SI:HARDCOPY-SPOOLER-STREAM-FUNCTION):  (P.C. = 17)
(:METHOD SI:PRINTER :HARDCOPY-DEVICE-STREAM):  (P.C. = 25)
(:METHOD SI:HARDCOPY-DEVICE-MIXIN :MAKE-HARDCOPY-STREAM):  (P.C. = 122)
SI:MAKE-HARDCOPY-STREAM:  (P.C. = 52)
SAGE:FIND-LGP-STREAM-WITH-FONT-MAP:  (P.C. = 17)
(:METHOD SAGE:LGP-DEVICE :WITH-DEVICE-PREPARED):  (P.C. = 21)
(:METHOD SAGE:DEX :HARDCOPY-VIEWING-CONTEXT):  (P.C. = 46)
(:METHOD SAGE:DEX :COM-HARDCOPY-VIEWER):  (P.C. = 16)
(:METHOD SAGE:DEX :COMMAND-MESSAGE):  (P.C. = 43)
(:INTERNAL (:METHOD SAGE:DEX :COMMAND-LOOP) 0 SAGE:DOIT):  (P.C. = 27)
(:METHOD SAGE:DEX :COMMAND-LOOP):  (P.C. = 55)
(:METHOD SAGE:DEX :TOPLEVEL):  (P.C. = 255)
SAGE:DEX-TOPLEVEL:  (P.C. = 4)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
28-Mar-85 18:52:53-EST,4603;000000000001
Received: from MIT-JIMI by MIT-OZ via Chaosnet; 28 Mar 85 18:52-EST
Date: Thursday, 28 March 1985, 18:52-EST
From: Gumby at MIT-MC
Sender: dph at OZ
Subject: We don't have fonts for doc examiner
To: BUG-LISPM at OZ
Message-ID: <850328185226.4.DPH@JIMI.MIT>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.0,
microcode TMC5-MIC 319, FEP 18, on Lisp Machine Jimi Hendrix:

Well, I got the doc exam to send via MC, but we still lost.  I copied
fonts.widths from OZ and installed it on >sys>r6>fonts>fonts.widths, but
it doesn't contain the fonts the doc exam wants.

>>Error: Cannot coerce #<BFONT-DESCRIPTOR FONTS:CENTURYSCHOOLBOOK105 1386039> into a string
While in the function STRING  STRING-REVERSE-SEARCH-SET  PRESS:DECODE-FONT-NAME

STRING:  (P.C. = 113)
   Arg 0 (X): #<BFONT-DESCRIPTOR FONTS:CENTURYSCHOOLBOOK105 1386039>
   Local 1 (STR): "Cannot coerce ~S into a string"

STRING-REVERSE-SEARCH-SET:  (P.C. = 21)
   Arg 0 (CHAR-SET): (48 49 50 51 52 53 54 55 56 57)
   Arg 1 (STRING): #<BFONT-DESCRIPTOR FONTS:CENTURYSCHOOLBOOK105 1386039>
   --Defaulted args:--
   Arg 2 (FROM): NIL
   Arg 3 (TO): 0

PRESS:DECODE-FONT-NAME:  (P.C. = 7)
   Arg 0 (STRING): #<BFONT-DESCRIPTOR FONTS:CENTURYSCHOOLBOOK105 1386039>

(:METHOD PRESS:PRESS-STREAM :CANONICALIZE-FONT):  (P.C. = 42)
   Arg 0 (SELF): #<PRESS-STREAM 13041305>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor PRESS:PRESS-STREAM -- 33. IV's, 3. FL's 24234540>
   Arg 2 (OPERATION): :CANONICALIZE-FONT
   Arg 3 (FONT): #<BFONT-DESCRIPTOR FONTS:CENTURYSCHOOLBOOK105 1386039>
   Arg 4 (TYPE): :DEVICE

(:METHOD SI:HARDCOPY-STREAM-FONT-MIXIN :AFTER :INIT):  (P.C. = 72)
   Arg 0 (SELF): #<PRESS-STREAM 13041305>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:HARDCOPY-STREAM-FONT-MIXIN -- 7. IV's, 0. FL's 24233720>
   Arg 2 (OPERATION): :INIT
   Arg 3 (PLIST): #<DTP-LOCATIVE 44240400>

(:METHOD PRESS:PRESS-STREAM :COMBINED :INIT):  (P.C. = 26)
   Arg 0 (SELF): #<PRESS-STREAM 13041305>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor PRESS:PRESS-STREAM -- 33. IV's, 3. FL's 24234540>
   Arg 2 (.OPERATION.): :INIT
   Rest arg (.DAEMON-CALLER-ARGS.): (#<DTP-LOCATIVE 44240400>)

INSTANTIATE-FLAVOR:  (P.C. = 445)
   Arg 0 (FLAVOR-NAME): PRESS:PRESS-STREAM
   Arg 1 (INIT-PLIST): #<DTP-LOCATIVE 44240400>
   Arg 2 (SEND-INIT-MESSAGE-P): :MAYBE
   --Defaulted args:--
   Arg 3 (RETURN-UNHANDLED-KEYWORDS-P): NIL
   Arg 4 (AREA-TO-CONS-INSTANCE-IN): NIL

MAKE-INSTANCE:  (P.C. = 6)
   Arg 0 (FLAVOR-NAME): PRESS:PRESS-STREAM
   Rest arg (INIT-OPTIONS): (:DEVICE #<PRESS-PRINTER TREMONT-VIA-MC 1141274> :OUTPUT-STREAM #<FILE-OUTPUT-BINARY-STREAM "MC: .DOVR.; ZIPPY >" 13034504> :NEW-PAGE-HOOK NIL :FONTS (#<BFONT-DESCRIPTOR FONTS:CENTURYSCHOOLBOOK105 1386039> #<BFONT-DESCRIPTOR FONTS:CENTURYSCHOOLBOOK105I 1392317> #<BFONT-DESCRIPTOR FONTS:CENTURYSCHOOLBOOK105B 1398633> #<BFONT-DESCRIPTOR FONTS:CENTURYSCHOOLBOOK105B 1398633> #<BFONT-DESCRIPTOR FONTS:TIMESROMAN8 1404733> #<BFONT-DESCRIPTOR FONTS:CENTURYSCHOOLBOOK105B 1398633> #<BFONT-DESCRIPTOR FONTS:FIX100 1410084> #<BFONT-DESCRIPTOR FONTS:TVFONT9 1416181> #<BFONT-DESCRIPTOR FONTS:FIX9 1422248> #<BFONT-DESCRIPTOR FONTS:SYMBOL10 1428345> ...) :HEADER-FONT-P NIL ...)
   Local 1 (INIT-OPTIONS): (:MARGINS (2000 1270 2000 1270) :DEVICE #<PRESS-PRINTER TREMONT-VIA-MC 1141274> :OUTPUT-STREAM #<FILE-OUTPUT-BINARY-STREAM "MC: .DOVR.; ZIPPY >" 13034504> :NEW-PAGE-HOOK NIL :FONTS (#<BFONT-DESCRIPTOR FONTS:CENTURYSCHOOLBOOK105 1386039> #<BFONT-DESCRIPTOR FONTS:CENTURYSCHOOLBOOK105I 1392317> #<BFONT-DESCRIPTOR FONTS:CENTURYSCHOOLBOOK105B 1398633> #<BFONT-DESCRIPTOR FONTS:CENTURYSCHOOLBOOK105B 1398633> #<BFONT-DESCRIPTOR FONTS:TIMESROMAN8 1404733> #<BFONT-DESCRIPTOR FONTS:CENTURYSCHOOLBOOK105B 1398633> #<BFONT-DESCRIPTOR FONTS:FIX100 1410084> #<BFONT-DESCRIPTOR FONTS:TVFONT9 1416181> #<BFONT-DESCRIPTOR FONTS:FIX9 1422248> #<BFONT-DESCRIPTOR FONTS:SYMBOL10 1428345> ...) ...)

Rest of stack:
(:METHOD SI:HARDCOPY-DEVICE-MIXIN :MAKE-HARDCOPY-STREAM):  (P.C. = 124)
SI:MAKE-HARDCOPY-STREAM:  (P.C. = 52)
SAGE:FIND-LGP-STREAM-WITH-FONT-MAP:  (P.C. = 17)
(:METHOD SAGE:LGP-DEVICE :WITH-DEVICE-PREPARED):  (P.C. = 21)
(:METHOD SAGE:DEX :HARDCOPY-VIEWING-CONTEXT):  (P.C. = 46)
(:METHOD SAGE:DEX :COM-HARDCOPY-VIEWER):  (P.C. = 16)
(:METHOD SAGE:DEX :COMMAND-MESSAGE):  (P.C. = 43)
(:INTERNAL (:METHOD SAGE:DEX :COMMAND-LOOP) 0 SAGE:DOIT):  (P.C. = 27)
(:METHOD SAGE:DEX :COMMAND-LOOP):  (P.C. = 55)
(:METHOD SAGE:DEX :TOPLEVEL):  (P.C. = 255)
SAGE:DEX-TOPLEVEL:  (P.C. = 4)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
28-Mar-85 18:55:16-EST,2927;000000000001
Received: from MIT-JIMI by MIT-OZ via Chaosnet; 28 Mar 85 18:54-EST
Date: Thursday, 28 March 1985, 18:54-EST
From: gumby at MIT-MC
Sender: dph at OZ
Subject: Why can't I hardcopy documentation on a simple hardcopy stream?
To: BUG-LISPM at OZ
Message-ID: <850328185442.5.DPH@JIMI.MIT>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.0,
microcode TMC5-MIC 319, FEP 18, on Lisp Machine Jimi Hendrix:

I tried to use BUFFY this time....

>>Error: The variable SI:FONT-TABLE is not an instance variable of #<SIMPLE-HARDCOPY-STREAM 13204743>
While in the function SYMEVAL-IN-INSTANCE  (:METHOD SAGE:LGP-DEVICE :WITH-DEVICE-PREPARED)  (:METHOD SAGE:DEX :HARDCOPY-VIEWING-CONTEXT)

SYMEVAL-IN-INSTANCE:  (P.C. = 71)
   Arg 0 (INSTANCE): #<SIMPLE-HARDCOPY-STREAM 13204743>
   Arg 1 (PTR): SI:FONT-TABLE
   Local 1 (PTR): #<DTP-LOCATIVE 36522273>
   --Defaulted args:--
   Arg 2 (NO-ERROR-P): NIL
   Local 3 (N): NIL

(:METHOD SAGE:LGP-DEVICE :WITH-DEVICE-PREPARED):  (P.C. = 42)
   Arg 0 (SELF): #<LGP-DEVICE 13204561>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SAGE:LGP-DEVICE -- 7. IV's, 0. FL's 143037065>
   Arg 2 (OPERATION): :WITH-DEVICE-PREPARED
   Arg 3 (FUNCTION): #<LEXICAL-CLOSURE (:INTERNAL ** 0) 44240235>
   Rest arg (ARGS): NIL

(:METHOD SAGE:DEX :HARDCOPY-VIEWING-CONTEXT):  (P.C. = 46)
   Arg 0 (SELF): #<DEX-FRAME Dex Frame 1 43200064 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SAGE:DEX -- 7. IV's, 3. FL's 104333716>
   Arg 2 (OPERATION): :HARDCOPY-VIEWING-CONTEXT
   Arg 3 (CONTEXT-OR-NAME): "Default Viewer"
   --Defaulted args:--
   Arg 4 (SEEN-ONLY): T

(:METHOD SAGE:DEX :COM-HARDCOPY-VIEWER):  (P.C. = 16)
   Arg 0 (SELF): #<DEX-FRAME Dex Frame 1 43200064 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SAGE:DEX -- 7. IV's, 3. FL's 104333716>
   Arg 2 (OPERATION): :COM-HARDCOPY-VIEWER
   Arg 3 (IGNORE): :COM-HARDCOPY-VIEWER

(:METHOD SAGE:DEX :COMMAND-MESSAGE):  (P.C. = 43)
   Arg 0 (SELF): #<DEX-FRAME Dex Frame 1 43200064 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SAGE:DEX -- 7. IV's, 3. FL's 104333716>
   Arg 2 (OPERATION): :COMMAND-MESSAGE
   Arg 3 (MESSAGE): :COM-HARDCOPY-VIEWER
   Rest arg (MESSAGE-ARGS): NIL

(:INTERNAL (:METHOD SAGE:DEX :COMMAND-LOOP) 0 SAGE:DOIT):  (P.C. = 27)
   Arg 0 (.LEXICAL-ENVIRONMENT-POINTER.): #<DTP-LOCATIVE 44240127>

(:METHOD SAGE:DEX :COMMAND-LOOP):  (P.C. = 55)
   Arg 0 (SELF): #<DEX-FRAME Dex Frame 1 43200064 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SAGE:DEX -- 7. IV's, 3. FL's 104333716>
   Arg 2 (OPERATION): :COMMAND-LOOP

(:METHOD SAGE:DEX :TOPLEVEL):  (P.C. = 255)
   Arg 0 (SELF): #<DEX-FRAME Dex Frame 1 43200064 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SAGE:DEX -- 7. IV's, 3. FL's 104333716>
   Arg 2 (OPERATION): :TOPLEVEL

Rest of stack:
SAGE:DEX-TOPLEVEL:  (P.C. = 4)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
28-Mar-85 19:01:38-EST,640;000000000001
Received: from MIT-MC by MIT-OZ via Chaosnet; 28 Mar 85 19:01-EST
Received: from MIT-OZ by MIT-MC via Chaosnet; 28 MAR 85  18:58:42 EST
Received: from MIT-JIMI by MIT-OZ via Chaosnet; 28 Mar 85 18:56-EST
Date: Thu, 28 Mar 85 18:57 EST
From: Gumby@MIT-MC.ARPA
Subject: document examiner
To: BUG-LISPM@MIT-MC.ARPA
Message-ID: <850328185704.6.GUMBY@JIMI.MIT>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.0,
microcode TMC5-MIC 319, FEP 18, on Lisp Machine Jimi Hendrix:

<HELP> when you've already typed something to the command window should
show partial completions a la <help> in the completing minibuffer in
zwei.

28-Mar-85 19:21:41-EST,2389;000000000001
Received: from MIT-JIMI by MIT-OZ via Chaosnet; 28 Mar 85 19:21-EST
Date: Thursday, 28 March 1985, 19:21-EST
From: David Vinayak Wallace <Gumby at MIT-MC>
Subject: can't hardcopy simple text files on dover
To: BUG-LISPM at OZ
Message-ID: <850328192132.7.GUMBY@JIMI.MIT>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.0,
microcode TMC5-MIC 319, FEP 18, on Lisp Machine Jimi Hendrix:

>>Error: Cannot coerce ("LPT" "" 10) into a string
While in the function STRING  STRING-REVERSE-SEARCH-SET  PRESS:DECODE-FONT-NAME

STRING:  (P.C. = 113)
   Arg 0 (X): ("LPT" "" 10)
   Local 1 (STR): "Cannot coerce ~S into a string"

STRING-REVERSE-SEARCH-SET:  (P.C. = 21)
   Arg 0 (CHAR-SET): (48 49 50 51 52 53 54 55 56 57)
   Arg 1 (STRING): ("LPT" "" 10)
   --Defaulted args:--
   Arg 2 (FROM): NIL
   Arg 3 (TO): 0

PRESS:DECODE-FONT-NAME:  (P.C. = 7)
   Arg 0 (STRING): ("LPT" "" 10)

(:PROPERTY SI:COM-HARDCOPY-FILE SI:CP-FUNCTION):  (P.C. = 104)
   Arg 0 (FILE): (#<ITS-PATHNAME "MC: GUMBY; NAD >">)
   Arg 1 (BANNER-MESSAGE): NIL
   Arg 2 (COPIES): 1
   Arg 3 (DELETE): NIL
   Arg 4 (FILE-TYPES): :USE-CANONICAL-TYPE
   Arg 5 (FONTS): (:DEFAULT-FONT)
   Arg 6 (FORMAT): :PORTRAIT
   Arg 7 (PRINTER): #<PRESS-PRINTER TREMONT 1141261>
   Arg 8 (QUERY): :NO
   Arg 9 (RUNNING-HEAD): :NUMBERED

SI:COM-HARDCOPY-FILE:  (P.C. = 60)
   Arg 0 (FILE): (#<ITS-PATHNAME "MC: GUMBY; NAD >">)
   Rest arg: NIL

SI:*EVAL:  (P.C. = 403)
   Arg 0 (FORM): (SI:COM-HARDCOPY-FILE (QUOTE (#<ITS-PATHNAME "MC: GUMBY; NAD >">)))
   Local 0 (FORM): NIL
   --Defaulted args:--
   Arg 1 (ENV): NIL
   Arg 2 (HOOK): NIL

(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0):  (P.C. = 152)
   Arg 0 (.LEXICAL-ENVIRONMENT-POINTER.): #<DTP-LOCATIVE 43440262>

TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
   Arg 0 (NEW-MODE): :BLAST
   Arg 1 (STREAM): #:TERMINAL-IO-SYN-STREAM
   Arg 2 (CONTINUATION): #<LEXICAL-CLOSURE (:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0) 43440267>

Rest of stack:
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
SI:BREAK-INTERNAL:  (P.C. = 176)
ZWEI:COM-BREAK:  (P.C. = 64)
ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 233)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 60)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 51)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
28-Mar-85 19:25:39-EST,598;000000000001
Received: from MIT-MORRISON by MIT-OZ via Chaosnet; 28 Mar 85 19:25-EST
Date: Thursday, 28 March 1985, 19:25-EST
From: John C. Mallery <jcma at MIT-MC>
Subject: Loop grinding is broken
To: BUG-LISPM at OZ
Message-ID: <850328192542.1.JCMA@MORRISON.MIT>

In Symbolics 3600 Release 6.0, AISite 7.0, microcode TMC5-MIC 319,
FEP 22, on Lisp Machine James Morrison:
(SI:FULL-GC :SYSTEM-RELEASE T)'s since release of system: 1

I hope this is going to be patched forthwith.  Otherwise, the world will
know just how broken Symbolics (TM) software really is! (Is the lossage
copyrighted too?)
28-Mar-85 19:27:19-EST,576;000000000001
Received: from MIT-JIMI by MIT-OZ via Chaosnet; 28 Mar 85 19:27-EST
Date: Thursday, 28 March 1985, 19:27-EST
From: David Vinayak Wallace <Gumby at MIT-MC>
Subject: reset file connexion in peek
To: BUG-LISPM at OZ
Message-ID: <850328192725.8.GUMBY@JIMI.MIT>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.0,
microcode TMC5-MIC 319, FEP 18, on Lisp Machine Jimi Hendrix:

Mousing a file connexion and trying to reset it asks for confirmation
but does nothing.  Mousing the HOST and using reset there does the right
thing (but does not ask for confirmation).
28-Mar-85 19:47:11-EST,742;000000000001
Received: from MIT-MC by MIT-OZ via Chaosnet; 28 Mar 85 19:47-EST
Received: from MIT-ROBOT-4 by MIT-MC via Chaosnet; 28 MAR 85  19:47:22 EST
Date: Thursday, 28 March 1985, 19:44-EST
From: Christopher C. Stacy <CStacy at MIT-MC>
Subject: Telnet
To: BUG-LISPM at OZ
Message-ID: <850328194459.3.CSTACY@ROBOT-4.MIT>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.0,
microcode TMC5-MIC 319, FEP 17, on Lisp Machine Robot-4:

I am getting terrible throughput using the terminal window to SUPDUP to
MIT-MC.  The response is worse than from a terminal connected to a MINITS box,
and I bet that the problem is not in the network or host.  Did something
change in Release 6 to drastically degrade the performance of this program?
28-Mar-85 19:53:07-EST,1021;000000000001
Received: from MIT-JIMI by MIT-OZ via Chaosnet; 28 Mar 85 19:53-EST
Date: Thursday, 28 March 1985, 19:53-EST
From: David Vinayak Wallace <Gumby at MIT-MC>
Subject: window system suggestions
To: BUG-LISPM at OZ
Message-ID: <850328195315.2.GUMBY@JIMI.MIT>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.0,
microcode TMC5-MIC 319, FEP 18, on Lisp Machine Jimi Hendrix:

1> If you tried to reshape a window and make it  make it too small, you
   are told "Some constraint could not be satisfied."  How about having
   it disallow the creation of a box that's too small?  That is, if I
   try to move the edges too close together the mouse cursor should just
   stop moving in that axis.

2> If I set the upper-left mouse corner and then change my mind, there's
   no way to anchor the lower-right and return to moving the upper-left.
   I must abort the entire operation.  This is a pain.

Both of these are features of the interlisp window system that I think
are particularly winning.

david
28-Mar-85 20:03:10-EST,435;000000000001
Received: from MIT-MC by MIT-OZ via Chaosnet; 28 Mar 85 20:03-EST
Date: 28 March 1985 20:04-EST
From: David Vinayak Wallace <GUMBY @ MIT-MC>
Subject:  named structure funnies
To: EHL @ MIT-OZ
cc: BUG-LISPM @ MIT-OZ
In-reply-to: Msg of 28 Mar 1985 18:31-EST from Edward H Lay <EHL at OZ>

Should NAMED-STRUCTURE-P work?  Typep of a structure you wanted built out
of a list should be :LIST.  Does (TYPEP (MAKE-FOO) 'FOO) work?
28-Mar-85 20:05:10-EST,2009;000000000001
Received: from MIT-MORRISON by MIT-OZ via Chaosnet; 28 Mar 85 20:05-EST
Date: Thursday, 28 March 1985, 20:04-EST
From: John C. Mallery <jcma at MIT-MC>
Subject: DEFF Lossage
To: BUG-LISPM at OZ
Message-ID: <850328200444.1.JCMA@MORRISON.MIT>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.0,
microcode TMC5-MIC 319, FEP 22, on Lisp Machine James Morrison:

DEFFs now lose when invoked anywhere but toplevel.


  For Function CONDITIONALIZE-3600
    While compiling (DEFF QC-FILE (FUNCTION COMPILER:COMPILE-FILE)):
    DEFF is a special form but the compiler has not been told
    how to compile calls to it.  Use a macro, a compiler transformer,
    a COMPILER:PHASE-1 property, or a COMPILER:PHASE-1-HOOK property.
    While compiling (DEFF QC-FILE-LOAD (FUNCTION COMPILER:COMPILE-FILE-LOAD)):
    DEFF is a special form but the compiler has not been told
    how to compile calls to it.  Use a macro, a compiler transformer,
    a COMPILER:PHASE-1 property, or a COMPILER:PHASE-1-HOOK property.
    While compiling (DEFF FASLOAD (FUNCTION LOAD)):
    DEFF is a special form but the compiler has not been told
    how to compile calls to it.  Use a macro, a compiler transformer,
    a COMPILER:PHASE-1 property, or a COMPILER:PHASE-1-HOOK property.


(DEFUN CONDITIONALIZE-3600 ()
  ;; conditionalize my old favorites -- at least for the time being
  (DEFF QC-FILE #'COMPILER:COMPILE-FILE)
  (DEFF QC-FILE-LOAD #'COMPILER:COMPILE-FILE-LOAD)
  (DEFF FASLOAD #'LOAD)
  ;; do the globalization
  (GLOBALIZE* "QC-FILE" "QC-FILE-LOAD" "FASLOAD")
  (si:enable-services)				;Cretin avoidance.
  ;; hack scheduling
;  (set-scheduler-quantum 1.)			;Scheduler non-avoidance.
  ;; fix up wholine docs
;  (send tv:who-line-documentation-window :eval-inside-yourself
;	'(setq tv:left-margin-size 4 tv:line-height 14 tv:baseline-adj -1))
;  (AND (Y-OR-N-P "Use old key bindings? ")
;       (SI:SET-KEYBOARD-LAYOUT NIL))		;keep the key bindings straight until new kbd
  )
28-Mar-85 20:13:12-EST,11113;000000000001
Received: from MIT-MC by MIT-OZ via Chaosnet; 28 Mar 85 20:13-EST
Received: from MIT-MORRISON by MIT-MC via Chaosnet; 28 MAR 85  20:13:57 EST
Date: Thursday, 28 March 1985, 20:12-EST
From: John C. Mallery <jcma at MIT-MC>
Subject: FS:FILE-HOST-USER-ID:
To: BUG-LISPM at OZ
Message-ID: <850328201239.2.JCMA@MORRISON.MIT>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.0,
microcode TMC5-MIC 319, FEP 22, on Lisp Machine James Morrison:

Should not ask for any passwords until I actually use a connection to the host.

>>Break: 
While in the function PROCESS-WAIT  TV:KBD-IO-BUFFER-INPUT-WAIT  (:METHOD TV:STREAM-MIXIN :INPUT-WAIT)

PROCESS-WAIT:
   Arg 0 (WHOSTATE): "Tyi"
   Local 0 (WHOSTATE): #<BREAK 12664067>
   Arg 1 (FUNCTION): #<DTP-COMPILED-FUNCTION (:INTERNAL TV:KBD-IO-BUFFER-INPUT-WAIT 0) 22405612>
   Local 1 (FUNCTION): #<DTP-LOCATIVE 501250>
   Rest arg (ARGUMENTS): (#<IO-BUFFER 120673433: empty, State: NIL> #<DTP-COMPILED-FUNCTION (:INTERNAL SI:READ-CHARACTER-INTERNAL 0) 2271666> (#<DTP-LOCATIVE 43200314> #<LISP-LISTENER Lisp Listener 1 43200216 exposed> NIL))
   Local 2 (ARGUMENTS): #<DTP-LOCATIVE 501247>

TV:KBD-IO-BUFFER-INPUT-WAIT:  (P.C. = 34)
   Arg 0 (BUFFER): #<IO-BUFFER 120673433: empty, State: NIL>
   Arg 1 (WHOSTATE): "Tyi"
   Arg 2 (FUNCTION): #<DTP-COMPILED-FUNCTION (:INTERNAL SI:READ-CHARACTER-INTERNAL 0) 2271666>
   Rest arg (ARGUMENTS): (#<DTP-LOCATIVE 43200314> #<LISP-LISTENER Lisp Listener 1 43200216 exposed> NIL)

(:METHOD TV:STREAM-MIXIN :INPUT-WAIT):  (P.C. = 23)
   Arg 0 (SELF): #<LISP-LISTENER Lisp Listener 1 43200216 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:STREAM-MIXIN -- 1. IV's, 0. FL's 104234251>
   Arg 2 (OPERATION): :INPUT-WAIT
   Arg 3 (WHOSTATE): "Tyi"
   Arg 4 (FUNCTION): #<DTP-COMPILED-FUNCTION (:INTERNAL SI:READ-CHARACTER-INTERNAL 0) 2271666>
   Rest arg (ARGUMENTS): (#<DTP-LOCATIVE 43200314> #<LISP-LISTENER Lisp Listener 1 43200216 exposed> NIL)

(:INTERNAL (:METHOD TV:WINDOW :COMBINED :INPUT-WAIT) 0):  (P.C. = 11)
   Arg 0 (SELF): #<LISP-LISTENER Lisp Listener 1 43200216 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:WINDOW -- 0. IV's, 12. FL's 104234270>
   Arg 2 (.OPERATION.): :INPUT-WAIT
   Rest arg (.DAEMON-CALLER-ARGS.): ("Tyi" #<DTP-COMPILED-FUNCTION (:INTERNAL SI:READ-CHARACTER-INTERNAL 0) 2271666> #<DTP-LOCATIVE 43200314> #<LISP-LISTENER Lisp Listener 1 43200216 exposed> NIL)

(:METHOD SI:INTERACTIVE-STREAM :WHOPPER :INPUT-WAIT):  (P.C. = 25)
   Arg 0 (SELF): #<LISP-LISTENER Lisp Listener 1 43200216 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:INTERACTIVE-STREAM -- 20. IV's, 2. FL's 104234231>
   Arg 2 (.WHOPPER-CONTINUATION.): #<DTP-COMPILED-FUNCTION (:INTERNAL (:METHOD TV:WINDOW :COMBINED :INPUT-WAIT) 0) 31301632>
   Arg 3 (.OLD-SELF-MAPPING-TABLE.): #<Map to flavor TV:WINDOW -- 0. IV's, 12. FL's 104234270>
   Arg 4 (.OPERATION.): :INPUT-WAIT
   Arg 5 (WHOSTATE): NIL
   Arg 6 (FUNCTION): #<DTP-COMPILED-FUNCTION (:INTERNAL SI:READ-CHARACTER-INTERNAL 0) 2271666>
   Rest arg (ARGUMENTS): (#<DTP-LOCATIVE 43200314> #<LISP-LISTENER Lisp Listener 1 43200216 exposed> NIL)

(:METHOD TV:WINDOW :COMBINED :INPUT-WAIT):  (P.C. = 13)
   Arg 0 (SELF): #<LISP-LISTENER Lisp Listener 1 43200216 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:WINDOW -- 0. IV's, 12. FL's 104234270>
   Arg 2 (.OPERATION.): :INPUT-WAIT
   Rest arg (.DAEMON-CALLER-ARGS.): (NIL #<DTP-COMPILED-FUNCTION (:INTERNAL SI:READ-CHARACTER-INTERNAL 0) 2271666> #<DTP-LOCATIVE 43200314> #<LISP-LISTENER Lisp Listener 1 43200216 exposed> NIL)

SI:READ-CHARACTER-INTERNAL:  (P.C. = 102)
   Arg 0 (STREAM): #:TERMINAL-IO-SYN-STREAM
   Local 0 (STREAM): #<LISP-LISTENER Lisp Listener 1 43200216 exposed>
   Arg 1 (PROMPT-X): 0
   Arg 2 (PROMPT-Y): 309
   Rest arg: (:TERMINATORS (141 138 148 159) :PROMPT ("Password for logging in to ~A as ~A (or ~:C to change user id): " #<VMS-HOST OBERON 1152065> "jcma" 159))

READLINE-NO-ECHO:  (P.C. = 72)
   Arg 0 (STREAM): #:TERMINAL-IO-SYN-STREAM
   Rest arg (KEYWORDS): (:TERMINATORS (141 138 148 159) :PROMPT ("Password for logging in to ~A as ~A (or ~:C to change user id): " #<VMS-HOST OBERON 1152065> "jcma" 159))

(:INTERNAL FS:PROMPT-FOR-USER-AND-PASSWORD 1):  (P.C. = 22)
   Arg 0 (.LEXICAL-ENVIRONMENT-POINTER.): #<DTP-LOCATIVE 500747>

SI:WITH-IE-TYPEIN-INTERNAL:  (P.C. = 20)
   Arg 0 (STREAM): #:TERMINAL-IO-SYN-STREAM
   Arg 1 (TYPE): NIL
   Arg 2 (CONTINUATION): #<LEXICAL-CLOSURE (:INTERNAL FS:PROMPT-FOR-USER-AND-PASSWORD 1) 500757>

FS:PROMPT-FOR-USER-AND-PASSWORD:  (P.C. = 54)
   Arg 0 (HOST): #<VMS-HOST OBERON 1152065>
   Arg 1 (HOST-USER-ID): "jcma"
   Arg 2 (CONDITION): #<QINVALID-PASSWORD 12664032>
   Arg 3 (PRINT-ERROR-MESSAGE): NIL
   Arg 4 (NEED-NEW-USER): NIL
   Arg 5 (NEED-PASSWORD): T
   Arg 6 (ALLOW-ANONYMOUS): NIL
   Arg 7 (NO-PASSWORDS): NIL

(:METHOD FS:USER-FILE-ACCESS-PATH :PROMPT-FOR-USER-AND-PASSWORD):  (P.C. = 20)
   Arg 0 (SELF): #<NORMAL-QFILE-ACCESS-PATH OBERON using QFILE 12663740>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:USER-FILE-ACCESS-PATH -- 4. IV's, 0. FL's 104772342>
   Arg 2 (OPERATION): :PROMPT-FOR-USER-AND-PASSWORD
   Arg 3 (HOST-USER): "jcma"
   Arg 4 (CONDITION): #<QINVALID-PASSWORD 12664032>
   Arg 5 (PRINT-ERROR-MESSAGE): NIL
   Arg 6 (NEED-NEW-USER): NIL
   Arg 7 (NEED-PASSWORD): T

FS:GET-USER-ID-AND-PASSWORD:  (P.C. = 161)
   Arg 0 (ACCESS-PATH): #<NORMAL-QFILE-ACCESS-PATH OBERON using QFILE 12663740>
   Arg 1 (HOST-USER-ID): "jcma"
   Arg 2 (HOST-PASSWORD): NIL
   Arg 3 (CONDITION): #<QINVALID-PASSWORD 12664032>

FS:LOGIN-HOST-UNIT:  (P.C. = 120)
   Arg 0 (UNIT): #<HOST-UNIT 12663751>
   Arg 1 (LOGIN-P): T
   Arg 2 (CONDITION): NIL
   Local 2 (CONDITION): #<QINVALID-PASSWORD 12664032>

(:METHOD FS:QFILE-ACCESS-PATH :LOGIN-UNIT):  (P.C. = 10)
   Arg 0 (SELF): #<NORMAL-QFILE-ACCESS-PATH OBERON using QFILE 12663740>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:QFILE-ACCESS-PATH -- 4. IV's, 0. FL's 122647736>
   Arg 2 (OPERATION): :LOGIN-UNIT
   Arg 3 (UNIT): #<HOST-UNIT 12663751>
   Arg 4 (LOGIN-P): T
   --Defaulted args:--
   Arg 5 (CONDITION): NIL

(:METHOD FS:NORMAL-QFILE-ACCESS-PATH :COMBINED :LOGIN-UNIT):  (P.C. = 11)
   Arg 0 (SELF): #<NORMAL-QFILE-ACCESS-PATH OBERON using QFILE 12663740>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:NORMAL-QFILE-ACCESS-PATH -- 1. IV's, 3. FL's 104772356>
   Arg 2 (.OPERATION.): :LOGIN-UNIT
   Rest arg (.DAEMON-CALLER-ARGS.): (#<HOST-UNIT 12663751> T)

(:METHOD FS:HOST-UNIT :VALIDATE-CONTROL-CONNECTION):  (P.C. = 121)
   Arg 0 (SELF): #<HOST-UNIT 12663751>
   Arg 1 (SELF-MAPPING-TABLE): FS:HOST-UNIT
   Arg 2 (OPERATION): :VALIDATE-CONTROL-CONNECTION
   --Defaulted args:--
   Arg 3 (NO-ERROR-P): NIL

(:METHOD FS:QFILE-ACCESS-PATH :NEW-HOST-UNIT):  (P.C. = 25)
   Arg 0 (SELF): #<NORMAL-QFILE-ACCESS-PATH OBERON using QFILE 12663740>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:QFILE-ACCESS-PATH -- 4. IV's, 0. FL's 122647736>
   Arg 2 (OPERATION): :NEW-HOST-UNIT

(:METHOD FS:QFILE-ACCESS-PATH :GET-HOST-UNIT):  (P.C. = 6)
   Arg 0 (SELF): #<NORMAL-QFILE-ACCESS-PATH OBERON using QFILE 12663740>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:QFILE-ACCESS-PATH -- 4. IV's, 0. FL's 122647736>
   Arg 2 (OPERATION): :GET-HOST-UNIT

(:METHOD FS:QFILE-ACCESS-PATH :AFTER :INIT):  (P.C. = 4)
   Arg 0 (SELF): #<NORMAL-QFILE-ACCESS-PATH OBERON using QFILE 12663740>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:QFILE-ACCESS-PATH -- 4. IV's, 0. FL's 122647736>
   Arg 2 (OPERATION): :INIT
   Arg 3 (IGNORE): #<DTP-LOCATIVE 500442>

(:METHOD FS:NORMAL-QFILE-ACCESS-PATH :COMBINED :INIT):  (P.C. = 20)
   Arg 0 (SELF): #<NORMAL-QFILE-ACCESS-PATH OBERON using QFILE 12663740>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:NORMAL-QFILE-ACCESS-PATH -- 1. IV's, 3. FL's 104772356>
   Arg 2 (.OPERATION.): :INIT
   Rest arg (.DAEMON-CALLER-ARGS.): (#<DTP-LOCATIVE 500442>)

INSTANTIATE-FLAVOR:  (P.C. = 445)
   Arg 0 (FLAVOR-NAME): FS:NORMAL-QFILE-ACCESS-PATH
   Arg 1 (INIT-PLIST): #<DTP-LOCATIVE 500442>
   Arg 2 (SEND-INIT-MESSAGE-P): :MAYBE
   --Defaulted args:--
   Arg 3 (RETURN-UNHANDLED-KEYWORDS-P): NIL
   Arg 4 (AREA-TO-CONS-INSTANCE-IN): NIL

MAKE-INSTANCE:  (P.C. = 6)
   Arg 0 (FLAVOR-NAME): FS:NORMAL-QFILE-ACCESS-PATH
   Rest arg (INIT-OPTIONS): (:HOST #<VMS-HOST OBERON 1152065> :SERVICE-ACCESS-PATH #<SERVICE-ACCESS-PATH FILE (QFILE) -- OBERON on CHAOS 12663715>)

FS:INVOKE-FILE-SERVICE:  (P.C. = 51)
   Arg 0 (SERVICE-ACCESS-PATH): #<SERVICE-ACCESS-PATH FILE (QFILE) -- OBERON on CHAOS 12663715>
   Rest arg (IGNORE): NIL

FS:INVOKE-SERVICE-FILE-WITH-QFILE:  (P.C. = 3)
   Arg 0 (.SERVICE.): #<SERVICE-ACCESS-PATH FILE (QFILE) -- OBERON on CHAOS 12663715>

NET:INVOKE-SERVICE-ACCESS-PATH:  (P.C. = 75)
   Arg 0 (SERVICE-ACCESS-PATH): #<SERVICE-ACCESS-PATH FILE (QFILE) -- OBERON on CHAOS 12663715>
   Arg 1 (SERVICE-ARGS): (NIL NIL)

NET:INVOKE-SERVICE-ON-HOST:  (P.C. = 226)
   Arg 0 (SERVICE): :FILE
   Arg 1 (HOST): #<VMS-HOST OBERON 1152065>
   Rest arg (SERVICE-ARGS): (NIL NIL)

(:METHOD FS:ACTIVE-PATHNAME-HOST :FILE-ACCESS-PATH):  (P.C. = 57)
   Arg 0 (SELF): #<VMS-HOST OBERON 1152065>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:ACTIVE-PATHNAME-HOST -- 1. IV's, 0. FL's 105232636>
   Arg 2 (OPERATION): :FILE-ACCESS-PATH
   --Defaulted args:--
   Arg 3 (PATHNAME): NIL
   Arg 4 (OPERATION): NIL
   Arg 5 (DONT-CREATE): NIL

(:METHOD FS:ACTIVE-PATHNAME-HOST :SET-HOST-USER-ID):  (P.C. = 4)
   Arg 0 (SELF): #<VMS-HOST OBERON 1152065>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:ACTIVE-PATHNAME-HOST -- 1. IV's, 0. FL's 105232636>
   Arg 2 (OPERATION): :SET-HOST-USER-ID
   Arg 3 (NEW-USER-ID): "JCMA"

FS:FILE-HOST-USER-ID:  (P.C. = 5)
   Arg 0 (UID): "JCMA"
   Arg 1 (HOST): #<VMS-HOST OBERON 1152065>

SET-HOST-UNAME-ASSOCIATIONS:  (P.C. = 15)  (from PIG:SYS$DISK:[JCMA]LISPMINI)

HELLO:  (P.C. = 45)  (from PIG:SYS$DISK:[JCMA]LISPMINI)
   Arg 0 (DEFAULT-INIT): T

SI:*EVAL:  (P.C. = 403)
   Arg 0 (FORM): (HELLO T)
   Local 0 (FORM): NIL
   --Defaulted args:--
   Arg 1 (ENV): NIL
   Arg 2 (HOOK): NIL

(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0):  (P.C. = 152)
   Arg 0 (.LEXICAL-ENVIRONMENT-POINTER.): #<DTP-LOCATIVE 500047>

TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
   Arg 0 (NEW-MODE): :BLAST
   Arg 1 (STREAM): #:TERMINAL-IO-SYN-STREAM
   Arg 2 (CONTINUATION): #<LEXICAL-CLOSURE (:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0) 500054>

SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
   Arg 0 (NAME): "Lisp Top Level"
   Arg 1 (ABORT-FUNCTION): NIL
   Arg 2 (READ-FUNCTION): NIL
   Arg 3 (EVAL-FUNCTION): NIL
   Arg 4 (PRINT-FUNCTION): NIL

SI:LISP-COMMAND-LOOP:  (P.C. = 67)
   Arg 0: #<LISP-LISTENER Lisp Listener 1 43200216 exposed>
   Rest arg: (:NAME "Lisp Top Level")

SI:LISP-TOP-LEVEL1:  (P.C. = 5)
   Arg 0 (STREAM): #<LISP-LISTENER Lisp Listener 1 43200216 exposed>

SI:LISP-TOP-LEVEL:  (P.C. = 7)
28-Mar-85 20:35:23-EST,770;000000000001
Received: from MIT-MC by MIT-OZ via Chaosnet; 28 Mar 85 20:35-EST
Received: from MIT-YOGI by MIT-MC via Chaosnet; 28 MAR 85  20:35:56 EST
Date: Thursday, 28 March 1985, 20:34-EST
From: Scott Cyphers <sr.ehpyc at MIT-SPEECH>
Subject: Release 6.0 Sources missing
To: bug-lispm at OZ
Message-ID: <850328203440.4.CYPHER@MIT-YOGI.MIT>

There is this tape that claims to be Release 6.0 sources, 03/26/85, TD
995277, which doesn't have much of anything useful on it.  It looks like
the L-* systems have disappeared, so hopefully this is just
an artifact of of the DE-CADRization, although other directories, like
LMFS, look rather sparse too.  Anything that can be done to get this
fixed quickly will be appreciated, so that we can start using the new
software.
28-Mar-85 21:07:21-EST,535;000000000001
Received: from MIT-JIMI by MIT-OZ via Chaosnet; 28 Mar 85 21:07-EST
Date: Thursday, 28 March 1985, 21:07-EST
From: David Vinayak Wallace <Gumby at MIT-MC>
Subject: always losing my place in doc viewer
To: BUG-LISPM at OZ
Message-ID: <850328210719.4.GUMBY@JIMI.MIT>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.0,
microcode TMC5-MIC 319, FEP 18, on Lisp Machine Jimi Hendrix:

If I select a new viewer and then go back to the old one, the old one is
now back at the front of the document.  This is REALLY annoying.
28-Mar-85 21:08:56-EST,1045;000000000001
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 28 Mar 85 21:08-EST
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 205368; Thu 28-Mar-85 21:07:36-EST
Date: Thursday, 28 March 1985, 21:08-EST
From: David A. Moon <Moon at SCRC-STONY-BROOK>
Subject: Telnet
To: Christopher C. Stacy <CStacy at MIT-MC>
cc: BUG-LISPM at OZ
In-Reply-To: <850328194459.3.CSTACY@ROBOT-4.MIT>
Message-ID: <850328210859.5.MOON@EUPHRATES.SCRC.Symbolics.COM>

    Date: Thursday, 28 March 1985, 19:44-EST
    From: Christopher C. Stacy <CStacy at MIT-MC>

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.0,
    microcode TMC5-MIC 319, FEP 17, on Lisp Machine Robot-4:

    I am getting terrible throughput using the terminal window to SUPDUP to
    MIT-MC.  The response is worse than from a terminal connected to a MINITS box,
    and I bet that the problem is not in the network or host.  Did something
    change in Release 6 to drastically degrade the performance of this program?

It works for me.
28-Mar-85 21:19:31-EST,5387;000000000001
Received: from MIT-MC by MIT-OZ via Chaosnet; 28 Mar 85 21:19-EST
Received: from MIT-MORRISON by MIT-MC via Chaosnet; 28 MAR 85  21:20:08 EST
Date: Thursday, 28 March 1985, 21:18-EST
From: jcma@MIT-MC
Subject: Logical Pathname Names  Lossage
To: BUG-LISPM@OZ
Message-ID: <850328211852.7.JCMA@MORRISON.MIT>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.0,
microcode TMC5-MIC 319, FEP 22, on Lisp Machine James Morrison:

This is trying to tell me I can't have two logical pathnames pointing at the
same real pathname.  What kind of lossage is that?

>>Error: Attempt to translate RL: U;  to PIG:USRD$:<RELATUS.UTILS>.
         We had previously gotten this pathname as a translation of RL: UTILS; .
         Files may be overwritten accidentally if you proceed.
While in the function FS:CHECK-TRANSLATION  (:METHOD FS:LOGICAL-HOST :TRANSLATE)  (:METHOD FS:LOGICAL-PATHNAME :TRANSLATED-PATHNAME)

FS:CHECK-TRANSLATION:  (P.C. = 60)
   Arg 0 (PATHNAME): #<LOGICAL-PATHNAME "RL: U; ">
   Arg 1 (TRAN): #<VMS-PATHNAME "PIG:USRD$:<RELATUS.UTILS>">
   Local 2 (HOST): #<LOGICAL-HOST RL>
   Local 3 (ALIST): ((#<LOGICAL-HOST RL> #<LOGICAL-PATHNAME "RL: UTILS; ">))
   Local 4 (BUCKET): (#<LOGICAL-HOST RL> #<LOGICAL-PATHNAME "RL: UTILS; ">)

(:METHOD FS:LOGICAL-HOST :TRANSLATE):  (P.C. = 551)
   Arg 0 (SELF): #<LOGICAL-HOST RL>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:LOGICAL-HOST -- 9. IV's, 2. FL's 104227142>
   Arg 2 (OPERATION): :TRANSLATE
   Arg 3 (PATHNAME): #<LOGICAL-PATHNAME "RL: U; ">

(:METHOD FS:LOGICAL-PATHNAME :TRANSLATED-PATHNAME):  (P.C. = 67)
   Arg 0 (SELF): #<LOGICAL-PATHNAME "RL: U; ">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:LOGICAL-PATHNAME -- 8. IV's, 3. FL's 104206646>
   Arg 2 (OPERATION): :TRANSLATED-PATHNAME

(:METHOD FS:LOGICAL-PATHNAME :TRANSLATE-FROM-TO):  (P.C. = 34)
   Arg 0 (SELF): #<LOGICAL-PATHNAME "RL: U; *.*.*">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:LOGICAL-PATHNAME -- 8. IV's, 3. FL's 104206646>
   Arg 2 (OPERATION): :TRANSLATE-FROM-TO

(:METHOD FS:LOGICAL-HOST :TRANSLATE):  (P.C. = 4)
   Arg 0 (SELF): #<LOGICAL-HOST RL>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:LOGICAL-HOST -- 9. IV's, 2. FL's 104227142>
   Arg 2 (OPERATION): :TRANSLATE
   Arg 3 (PATHNAME): #<LOGICAL-PATHNAME "RL: U; *.*.*">

(:METHOD FS:LOGICAL-PATHNAME :TRANSLATED-PATHNAME):  (P.C. = 67)
   Arg 0 (SELF): #<LOGICAL-PATHNAME "RL: U; *.*.*">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:LOGICAL-PATHNAME -- 8. IV's, 3. FL's 104206646>
   Arg 2 (OPERATION): :TRANSLATED-PATHNAME

(:METHOD FS:LOGICAL-PATHNAME :DIRECTORY-LIST):  (P.C. = 11)
   Arg 0 (SELF): #<LOGICAL-PATHNAME "RL: U; *.*.*">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:LOGICAL-PATHNAME -- 8. IV's, 3. FL's 104206646>
   Arg 2 (OPERATION): :DIRECTORY-LIST
   Arg 3 (OPTIONS): (:SORTED :DELETED)

FS:DIRECTORY-LIST:  (P.C. = 114)
   Arg 0 (FILENAME): #<LOGICAL-PATHNAME "RL: U; *.*.*">
   Rest arg (OPTIONS): (:SORTED :DELETED)

(:METHOD ZWEI:DIRED-NODE-MIXIN :REVERT):  (P.C. = 42)
   Arg 0 (SELF): #<DIRED-BUFFER "*Dired-1*" 10541074>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:DIRED-NODE-MIXIN -- 4. IV's, 0. FL's 143215622>
   Arg 2 (OPERATION): :REVERT

(:METHOD ZWEI:DIRED-BUFFER :COMBINED :REVERT):  (P.C. = 11)
   Arg 0 (SELF): #<DIRED-BUFFER "*Dired-1*" 10541074>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:DIRED-BUFFER -- 3. IV's, 4. FL's 143215610>
   Arg 2 (.OPERATION.): :REVERT
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

(:METHOD ZWEI:ZMACS-EDITOR :FIND-SPECIAL-BUFFER):  (P.C. = 45)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 121171573>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMACS-EDITOR -- 3. IV's, 0. FL's 142345763>
   Arg 2 (OPERATION): :FIND-SPECIAL-BUFFER
   Arg 3 (TYPE): :DIRED
   Arg 4 (NEW-P): T
   Rest arg (SETS): (:SET-PATHNAME #<LOGICAL-PATHNAME "RL: U; *.*.*">)

(:METHOD ZWEI:ZMACS-EDITOR :SELECT-SPECIAL-BUFFER):  (P.C. = 10)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 121171573>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMACS-EDITOR -- 3. IV's, 0. FL's 142345763>
   Arg 2 (OPERATION): :SELECT-SPECIAL-BUFFER
   Arg 3 (TYPE): :DIRED
   Arg 4 (NEW-P): T
   Rest arg (SETS): (:SET-PATHNAME #<LOGICAL-PATHNAME "RL: U; *.*.*">)

ZWEI:DIRECTORY-EDIT:  (P.C. = 22)
   Arg 0 (PATHNAME): #<LOGICAL-PATHNAME "RL: U; *.*.*">

ZWEI:COM-DIRED:  (P.C. = 5)

ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
   Arg 0 (COMMAND): ZWEI:COM-DIRED
   Arg 1 (CHAR): 3140
   Arg 2 (PREFIX-CHAR): NIL
   Arg 3 (HOOK-LIST): (ZWEI:SHIFT-LOCK-HOOK)

ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
   Arg 0 (CH): 3140

(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 233)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 121171573>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:EDITOR -- 12. IV's, 0. FL's 142346020>
   Arg 2 (OPERATION): :EDIT
   --Defaulted args:--
   Arg 3 (TOP-LEVEL-P): T
   Arg 4 (DESCRIPTION): NIL

(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 60)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 121171573>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:TOP-LEVEL-EDITOR -- 13. IV's, 1. FL's 142345776>
   Arg 2 (.OPERATION.): :EDIT
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 51)

SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
   Arg 0 (IGNORE): NIL
28-Mar-85 21:20:30-EST,914;000000000001
Received: from MIT-MC by MIT-OZ via Chaosnet; 28 Mar 85 21:20-EST
Date: 28 March 1985 21:20-EST
From: Roland G. Ouellette <ROLY @ MIT-MC>
Subject: Telnet
To: CSTACY @ MIT-MC
cc: BUG-LISPM @ MIT-OZ

    Date: Thursday, 28 March 1985, 19:44-EST
    From: Christopher C. Stacy <CStacy at MIT-MC>

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.0,
    microcode TMC5-MIC 319, FEP 17, on Lisp Machine Robot-4:

    I am getting terrible throughput using the terminal window to SUPDUP to
    MIT-MC.  The response is worse than from a terminal connected to a MINITS box,
    and I bet that the problem is not in the network or host.  Did something
    change in Release 6 to drastically degrade the performance of this program?

I have noticed the same losing behavior in beta test 5.2 with TCP on
Minnie Mouse.  I see that you are running TCP here too: this may be
the problem.

Roland
28-Mar-85 21:28:31-EST,622;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 28 Mar 85 21:28-EST
Received: from MIT-MORRISON by MIT-MC via Chaosnet; 28 MAR 85  21:28:22 EST
Date: Thursday, 28 March 1985, 21:27-EST
From: jcma@MIT-MC
Subject: Redefinition Warnings
To: BUG-LISPM@OZ
Message-ID: <850328212706.8.JCMA@MORRISON.MIT>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.0,
microcode TMC5-MIC 319, FEP 22, on Lisp Machine James Morrison:

I am getting function redefinition warnings because the system doesn't know
that a binary file is the same file as the source file.  This may be a bug for
only VMS pathnames.  I don't know.
28-Mar-85 21:33:31-EST,1520;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 28 Mar 85 21:33-EST
Received: from SCRC-CUYAHOGA by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 205385; Thu 28-Mar-85 21:29:10-EST
Date: Thursday, 28 March 1985, 21:30-EST
From: Robert A. Cassels <Cassels at SCRC-TENEX>
Subject: Loop grinding is broken
To: jcma at MIT-MC, BUG-LISPM at OZ
In-Reply-To: <850328192542.1.JCMA@MORRISON.MIT>
Message-ID: <850328213041.4.CASSELS@CUYAHOGA.SCRC.Symbolics.COM>

    Date: Thursday, 28 March 1985, 19:25-EST
    From: John C. Mallery <jcma at MIT-MC>

    In Symbolics 3600 Release 6.0, AISite 7.0, microcode TMC5-MIC 319,
    FEP 22, on Lisp Machine James Morrison:
    (SI:FULL-GC :SYSTEM-RELEASE T)'s since release of system: 1

    I hope this is going to be patched forthwith.  Otherwise, the world will
    know just how broken Symbolics (TM) software really is! (Is the lossage
    copyrighted too?)

[I assume you're talking about editor indentation via <line> and <tab>.]

It works for me.  Do you have a specific example?

Note that loop indentation has been redone, and now works a little
differently.  In general, you may have to type <tab> after typing the
first keyword (or paren) on a line to get it correctly placed.  That's
because the new indenter tries to get more things right, especially in
cases where the desired indentation may depend on the contents of the
line.  c-m-Q always does the right thing (for me) even if incremental
indentation gets momentarily confused.
28-Mar-85 21:37:40-EST,1409;000000000001
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 28 Mar 85 21:37-EST
Received: from SCRC-HUDSON by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 205389; Thu 28-Mar-85 21:32:18-EST
Date: Thursday, 28 March 1985, 21:33-EST
From: Charles Hornig <Hornig at SCRC-STONY-BROOK>
Subject: Telnet
To: Roland G. Ouellette <ROLY at MIT-MC>, CSTACY at MIT-MC
cc: BUG-LISPM at OZ
In-Reply-To: The message of 28 Mar 85 21:20-EST from Roland G. Ouellette <ROLY at MIT-MC>
Message-ID: <850328213301.1.HORNIG@HUDSON.SCRC.Symbolics.COM>

    Date: 28 March 1985 21:20-EST
    From: Roland G. Ouellette <ROLY @ MIT-MC>

	Date: Thursday, 28 March 1985, 19:44-EST
	From: Christopher C. Stacy <CStacy at MIT-MC>

	In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.0,
	microcode TMC5-MIC 319, FEP 17, on Lisp Machine Robot-4:

	I am getting terrible throughput using the terminal window to SUPDUP to
	MIT-MC.  The response is worse than from a terminal connected to a MINITS box,
	and I bet that the problem is not in the network or host.  Did something
	change in Release 6 to drastically degrade the performance of this program?

    I have noticed the same losing behavior in beta test 5.2 with TCP on
    Minnie Mouse.  I see that you are running TCP here too: this may be
    the problem.

TCP TELNET to MC from a LispM must go through the ARPANET.  This may be
the cause of the problem.
28-Mar-85 21:46:40-EST,818;000000000000
Mail-From: CJL created at 28-Mar-85 21:45:59
Date: Thu, 28 Mar 1985  21:45 EST
Message-ID: <CJL.12098762244.BABYL@MIT-OZ>
From: Chris Lindblad <CJL@MIT-OZ>
To:   info-lispm-mit@MIT-OZ
Subject: Symbolics system release 6.0 for 3600's is now avaliable here at mit

Symbolics system release 6.0 for 3600's is now avaliable for machines
here at mit. Included in this release is a distribution of TCP/IP.  If
you want to get a copy of this release on your machine, band transfer
from JIMI >MIT-6-0.load to your machine, and also take version 319 of
the microcode. If you machine is an AI lab machine, you want
>AI-6-0.load instead.

Also with this release the sys host for mit ans ai sites is now reagan.
The mit and ai site directory is reagan:>sys>site, and the lispm sources
are kept on reagan as well.
28-Mar-85 21:56:42-EST,652;000000000001
Received: from MIT-MORRISON by MIT-OZ via Chaosnet; 28 Mar 85 21:56-EST
Date: Thursday, 28 March 1985, 22:00-EST
From: John C. Mallery <jcma at MIT-MC>
Subject: Losing File Attribute Warnings
To: BUG-LISPM at OZ
Message-ID: <850328220058.4.JCMA@MORRISON.MIT>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.0,
microcode TMC5-MIC 319, FEP 22, on Lisp Machine James Morrison:

My init file had this as its file attributes, and yet I still got the warning
that the file didn't have a syntax or base attribute and it was assuming
something.

;-*- Mode:LISP;; Fonts: (CPTFONTB CPTFONT); Patch-File: Yes; Syntax: Zetalisp; Base: 10. -*-
28-Mar-85 22:04:06-EST,552;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 28 Mar 85 22:03-EST
Received: from MIT-MORRISON by MIT-MC via Chaosnet; 28 MAR 85  21:30:54 EST
Date: Thursday, 28 March 1985, 21:29-EST
From: jcma@MIT-MC
Subject: Defsystem
To: BUG-LISPM@OZ
Message-ID: <850328212941.9.JCMA@MORRISON.MIT>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.0,
microcode TMC5-MIC 319, FEP 22, on Lisp Machine James Morrison:

still thinks that compiler warnings defaultedly belong in the user's home
directory rather than directory where the defsystem lives.
28-Mar-85 22:15:17-EST,868;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 28 Mar 85 22:15-EST
Received: from MIT-VAX by MIT-MC via Chaosnet; 28 MAR 85  22:10:57 EST
Received: by mit-vax.Mit-chaos.Arpa (4.12/4.8) with CHAOS id AA01784; Thu, 28 Mar 85 22:08:28 est
Date: Thu, 28 Mar 85 22:07 EST
From: "Mark H. Shirley" <MHS@MIT-MC.ARPA>
To: BUG-LISPM@MIT-MC.ARPA
Message-Id: <850328220719.1.MHS@TELLURIDE.MIT>

In Symbolics 3600 Release 6.0 Beta IIc, microcode TMC5-MIC 315, FEP 18, on Lisp Machine Telluride:

Here's a small bug in indentation for the loop macro.

With a comment in a bad spot:
(loop for this in that
      do nothing
      finally                             ;This comment doesn't help much
                                          (finish-the-loop))

Without the comment:
(loop for this in that
      do nothing
      finally
        (finish-the-loop))
28-Mar-85 22:31:48-EST,1825;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 28 Mar 85 22:31-EST
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 205407; Thu 28-Mar-85 22:30:32-EST
Date: Thursday, 28 March 1985, 22:31-EST
From: David A. Moon <Moon at SCRC-STONY-BROOK>
Subject: Telnet
To: Charles Hornig <Hornig at SCRC-STONY-BROOK>
cc: Roland G. Ouellette <ROLY at MIT-MC>, CSTACY at MIT-MC,
    BUG-LISPM at OZ
In-Reply-To: <850328213301.1.HORNIG@HUDSON.SCRC.Symbolics.COM>
Message-ID: <850328223151.8.MOON@EUPHRATES.SCRC.Symbolics.COM>

    Date: Thursday, 28 March 1985, 21:33-EST
    From: Charles Hornig <Hornig at SCRC-STONY-BROOK>

	Date: 28 March 1985 21:20-EST
	From: Roland G. Ouellette <ROLY @ MIT-MC>

	    Date: Thursday, 28 March 1985, 19:44-EST
	    From: Christopher C. Stacy <CStacy at MIT-MC>

	    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.0,
	    microcode TMC5-MIC 319, FEP 17, on Lisp Machine Robot-4:

	    I am getting terrible throughput using the terminal window to SUPDUP to
	    MIT-MC.  The response is worse than from a terminal connected to a MINITS box,
	    and I bet that the problem is not in the network or host.  Did something
	    change in Release 6 to drastically degrade the performance of this program?

	I have noticed the same losing behavior in beta test 5.2 with TCP on
	Minnie Mouse.  I see that you are running TCP here too: this may be
	the problem.

    TCP TELNET to MC from a LispM must go through the ARPANET.  This may be
    the cause of the problem.

Could be, but if so the bug-report header on CStacy's message is a lie, since
it says he didn't have TCP loaded.

Chris, we could fix this ITS bug relatively easily.  It just doesn't talk the
same encapsulated Internet protocol that the Lisp Machine talks.
28-Mar-85 22:32:28-EST,560;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 28 Mar 85 22:32-EST
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 205409; Thu 28-Mar-85 22:30:59-EST
Date: Thursday, 28 March 1985, 22:32-EST
From: David A. Moon <Moon at SCRC-STONY-BROOK>
Subject: Telnet
To: Charles Hornig <Hornig at SCRC-STONY-BROOK>,
    Roland G. Ouellette <ROLY at MIT-MC>, CSTACY at MIT-MC,
    BUG-LISPM at OZ
Revokes: <850328223151.8.MOON@EUPHRATES.SCRC.Symbolics.COM>
Message-ID: <850328223225.9.MOON@EUPHRATES.SCRC.Symbolics.COM>


28-Mar-85 22:33:12-EST,628;000000000001
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 28 Mar 85 22:32-EST
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 205411; Thu 28-Mar-85 22:31:36-EST
Date: Thursday, 28 March 1985, 22:33-EST
From: David A. Moon <Moon at SCRC-STONY-BROOK>
Subject: Telnet
To: Charles Hornig <Hornig at SCRC-STONY-BROOK>
cc: Roland G. Ouellette <ROLY at MIT-MC>, CSTACY at MIT-MC,
    BUG-LISPM at OZ
In-Reply-To: <850328213301.1.HORNIG@HUDSON.SCRC.Symbolics.COM>
Message-ID: <850328223302.0.MOON@EUPHRATES.SCRC.Symbolics.COM>

Please ignore the idiotic message I just sent and revoked.  Sorry.
28-Mar-85 22:35:44-EST,1018;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 28 Mar 85 22:35-EST
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 205416; Thu 28-Mar-85 22:34:04-EST
Date: Thursday, 28 March 1985, 22:35-EST
From: David A. Moon <Moon at SCRC-STONY-BROOK>
Subject: Redefinition Warnings
To: jcma at MIT-MC
cc: BUG-LISPM at OZ
In-Reply-To: <850328212706.8.JCMA@MORRISON.MIT>
Message-ID: <850328223530.2.MOON@EUPHRATES.SCRC.Symbolics.COM>

    Date: Thursday, 28 March 1985, 21:27-EST
    From: jcma@MIT-MC

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.0,
    microcode TMC5-MIC 319, FEP 22, on Lisp Machine James Morrison:

    I am getting function redefinition warnings because the system doesn't know
    that a binary file is the same file as the source file.  This may be a bug for
    only VMS pathnames.  I don't know.

If you expect a response please provide an example.  If you're just letting off
steam, you can ignore my message and I'll ignore yours.
28-Mar-85 23:12:37-EST,1953;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 28 Mar 85 23:12-EST
Received: from MIT-MORRISON by MIT-MC via Chaosnet; 28 MAR 85  23:13:26 EST
Date: Thursday, 28 March 1985, 23:16-EST
From: jcma@MIT-MC
Subject: Redefinition Warnings
To: Moon@SCRC-STONY-BROOK
cc: BUG-LISPM@OZ
In-Reply-To: <850328223530.2.MOON@EUPHRATES.SCRC.Symbolics.COM>
Message-ID: <850328231659.8.JCMA@MORRISON.MIT>

    Date: Thu, 28 Mar 85 22:35 EST
    From: David A. Moon <Moon@SCRC-STONY-BROOK.ARPA>

	Date: Thursday, 28 March 1985, 21:27-EST
	From: jcma@MIT-MC

	In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.0,
	microcode TMC5-MIC 319, FEP 22, on Lisp Machine James Morrison:

	I am getting function redefinition warnings because the system doesn't know
	that a binary file is the same file as the source file.  This may be a bug for
	only VMS pathnames.  I don't know.

    If you expect a response please provide an example.  If you're just letting off
    steam, you can ignore my message and I'll ignore yours.

I compiled a function in the editor.  Then I saved the file.  Then I compiled
the file with meta-x compile file.  then I loaded the file and it told me that
the binary version was redefining the one I had compiled in the buffer.  The
file already existed.  It was my init file.  

I just had to reboot because I landed in the cold load stream while trying to
recompile relatus in rel 6.  This wasn't your fault.  But, the proceed option
to arrest the inital process doesn't look like a winning way to proceed from
errors in that process.

Give me a couple of days trying to bring up relatus in rel 6 and then I'll let
some steam off.  I'll be sure to warn you before doing so.

You have to bear in mind that when lots of software must make the transition
between releases there are going to be many bugs.  This is not like
incrementally encountering bugs as the development system evolves.  It is all
at once.
28-Mar-85 23:42:57-EST,1879;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 28 Mar 85 23:38-EST
Received: from MIT-MORRISON by MIT-MC via Chaosnet; 28 MAR 85  23:39:42 EST
Date: Thursday, 28 March 1985, 23:43-EST
From: jcma@MIT-MC
Subject: Loop grinding is broken
To: Cassels@SCRC-TENEX
cc: BUG-LISPM@OZ
In-Reply-To: <850328213041.4.CASSELS@CUYAHOGA.SCRC.Symbolics.COM>
Message-ID: <850328234315.0.JCMA@MORRISON.MIT>

    Date: Thursday, 28 March 1985, 21:30-EST
    From: Robert A. Cassels <Cassels at SCRC-TENEX>

	Date: Thursday, 28 March 1985, 19:25-EST
	From: John C. Mallery <jcma at MIT-MC>

	In Symbolics 3600 Release 6.0, AISite 7.0, microcode TMC5-MIC 319,
	FEP 22, on Lisp Machine James Morrison:
	(SI:FULL-GC :SYSTEM-RELEASE T)'s since release of system: 1

	I hope this is going to be patched forthwith.  Otherwise, the world will
	know just how broken Symbolics (TM) software really is! (Is the lossage
	copyrighted too?)

    [I assume you're talking about editor indentation via <line> and <tab>.]

    It works for me.  Do you have a specific example?

    Note that loop indentation has been redone, and now works a little
    differently.  In general, you may have to type <tab> after typing the
    first keyword (or paren) on a line to get it correctly placed.  That's
    because the new indenter tries to get more things right, especially in
    cases where the desired indentation may depend on the contents of the
    line.  c-m-Q always does the right thing (for me) even if incremental
    indentation gets momentarily confused.

The serious lossage seems to be in a bogus rel6 that was on this machine.
The version I am running now seems to work fine for C-M-Q, although it
does seem to get confused by parens when line is hit to get a new line, e.g.:

(DEFUN FOO (LIST)
  (LOOP FOR ITEM IN LIST
	DO (PRINT ITEM)
	   FINALLY (RETURN T))
29-Mar-85 00:50:47-EST,783;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 29 Mar 85 00:50-EST
Received: from MIT-MORRISON by MIT-MC via Chaosnet; 29 MAR 85  00:51:20 EST
Date: Friday, 29 March 1985, 00:54-EST
From: jcma@MIT-MC
Subject: Local-Declare Special And Macro Interaction
To: BUG-LISPM@OZ
Message-ID: <850329005451.2.JCMA@MORRISON.MIT>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.0,
microcode TMC5-MIC 319, FEP 22, on Lisp Machine James Morrison:

This used to work in rel5.  I get an unbound variable warning in rel6 for bar.
this does work for defuns.  Is this supposed to still work or is it a bug?

(LOCAL-DECLARE ((SPECIAL BAR))

  (DEFMACRO TEST0 ()
    `(LET ((BAR 'YOW))
      (TEST1)))

  (DEFUN TEST1 ()
    (TEST2))

  (DEFUN TEST2 ()
    (PRINT BAR))
  )
29-Mar-85 00:51:26-EST,1157;000000000000
Mail-From: EHL created at 29-Mar-85 00:51:14
Date: Fri, 29 Mar 1985  00:51 EST
Message-ID: <EHL.12098795969.BABYL@MIT-OZ>
From: EHL@MIT-OZ
To:   David Vinayak Wallace <GUMBY@MIT-MC>
Cc:   BUG-LISPM@MIT-OZ
Subject: named structure funnies
In-reply-to: Msg of 28 Mar 1985  20:04-EST from David Vinayak Wallace <GUMBY at MIT-MC>

    Date: Thursday, 28 March 1985  20:04-EST
    From: David Vinayak Wallace <GUMBY at MIT-MC>
    To:   EHL
    cc:   BUG-LISPM
    Re:   named structure funnies

    Should NAMED-STRUCTURE-P work?  Typep of a structure you wanted built out
    of a list should be :LIST.  Does (TYPEP (MAKE-FOO) 'FOO) work?
(typep (make-foo) 'foo) will return NIL if the structure is a :NAMED-LIST but T
if it is a :NAMED-anythingelse.  When I create a  structure with the :NAMED
option, I expect (typep (make-foo)) to return 'FOO and not to have it depend
on what I happen to be  building the structure out of.

The documentation is a bit vague on this point (DEFS ch 7. Named Structures)
claiming that "any array can be made a name structure, usually the :NAMED option
of defstruct is used to create named structures.
29-Mar-85 05:21:56-EST,738;000000000000
Received: from MIT-APIARY-9 by MIT-OZ via Chaosnet; 29 Mar 85 05:21-EST
Date: Friday, 29 March 1985, 05:21-EST
From: David M. J. Saslav <saz at OZ>
Subject: couldn't a check be made...
To: BUG-LISPM at OZ
Message-ID: <850329052129.1.SAZ@APIARY-9.MIT>

In Symbolics 3600 Release 6.0 Beta IIc, microcode TMC5-MIC 315, FEP 18, on APIARY-9:

...to see if a flonum is "fixnumable" before expt calls LOG here?...

Also, why did I have to log in to PIG before I could start up this bug window?

dave s.

>>Error: Attempt to take the logarithm of -3.0, which is not a positive number.
While in the function LOG  ^  SI:*EVAL

LOG:  (P.C. = 45)
   Arg 0 (N): -3.0

^:  (P.C. = 145)
   Arg 0 (NUM): -3
   Arg 1 (EXPT): 2.0
29-Mar-85 11:19:38-EST,1228;000000000001
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 29 Mar 85 11:10-EST
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 205592; Fri 29-Mar-85 10:40:46-EST
Date: Friday, 29 March 1985, 10:40-EST
From: David A. Moon <Moon at SCRC-STONY-BROOK>
Subject: Local-Declare Special And Macro Interaction
To: jcma at MIT-MC
cc: BUG-LISPM at OZ
In-Reply-To: <850329005451.2.JCMA@MORRISON.MIT>
Message-ID: <850329104048.1.MOON@EUPHRATES.SCRC.Symbolics.COM>

    Date: Friday, 29 March 1985, 00:54-EST
    From: jcma@MIT-MC

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.0,
    microcode TMC5-MIC 319, FEP 22, on Lisp Machine James Morrison:

    This used to work in rel5.  I get an unbound variable warning in rel6 for bar.
    this does work for defuns.  Is this supposed to still work or is it a bug?

    (LOCAL-DECLARE ((SPECIAL BAR))

      (DEFMACRO TEST0 ()
	`(LET ((BAR 'YOW))
	  (TEST1)))

      (DEFUN TEST1 ()
	(TEST2))

      (DEFUN TEST2 ()
	(PRINT BAR))
      )

Compiling the above form works for me.  If that is because of typographical
errors in your report, please send it again.

LOCAL-DECLARE is obsolete but still works in this release.
29-Mar-85 11:21:01-EST,2376;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 29 Mar 85 11:11-EST
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 205596; Fri 29-Mar-85 10:43:17-EST
Date: Friday, 29 March 1985, 10:43-EST
From: David A. Moon <Moon at SCRC-STONY-BROOK>
Subject: Redefinition Warnings
To: jcma at MIT-MC
cc: BUG-LISPM at OZ
In-Reply-To: <850328231659.8.JCMA@MORRISON.MIT>
Message-ID: <850329104320.2.MOON@EUPHRATES.SCRC.Symbolics.COM>

    Date: Thursday, 28 March 1985, 23:16-EST
    From: jcma@MIT-MC

	Date: Thu, 28 Mar 85 22:35 EST
	From: David A. Moon <Moon@SCRC-STONY-BROOK.ARPA>

	    Date: Thursday, 28 March 1985, 21:27-EST
	    From: jcma@MIT-MC

	    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.0,
	    microcode TMC5-MIC 319, FEP 22, on Lisp Machine James Morrison:

	    I am getting function redefinition warnings because the system doesn't know
	    that a binary file is the same file as the source file.  This may be a bug for
	    only VMS pathnames.  I don't know.

	If you expect a response please provide an example.  If you're just letting off
	steam, you can ignore my message and I'll ignore yours.

    I compiled a function in the editor.  Then I saved the file.  Then I compiled
    the file with meta-x compile file.  then I loaded the file and it told me that
    the binary version was redefining the one I had compiled in the buffer.  The
    file already existed.  It was my init file.  

It's not an example if you don't include the file name!!
It's only an example if the reader of the bug report has enough information to
be able to try to reproduce the problem.

    I just had to reboot because I landed in the cold load stream while trying to
    recompile relatus in rel 6.  This wasn't your fault.  But, the proceed option
    to arrest the inital process doesn't look like a winning way to proceed from
    errors in that process.

    Give me a couple of days trying to bring up relatus in rel 6 and then I'll let
    some steam off.  I'll be sure to warn you before doing so.

    You have to bear in mind that when lots of software must make the transition
    between releases there are going to be many bugs.  This is not like
    incrementally encountering bugs as the development system evolves.  It is all
    at once.

I'll try to be patient.
29-Mar-85 11:48:02-EST,2426;000000000000
Received: by MIT-OZ via Chaosnet; 29 Mar 85 11:47-EST
Received: from SCRC-HUDSON by SCRC-VALLECITO via CHAOS with CHAOS-MAIL id 5141; Fri 29-Mar-85 06:36:10-EST
Date: Fri, 29 Mar 85 06:35 EST
From: Charles Hornig <Hornig@SCRC-STONY-BROOK>
Subject: DEFF Lossage
To: John C. Mallery <jcma@MIT-MC>, BUG-LISPM@OZ
In-Reply-To: <850328200444.1.JCMA@MORRISON.MIT>
Message-ID: <850329063523.1.HORNIG@HUDSON.SCRC.Symbolics.COM>

    Date: Thursday, 28 March 1985, 20:04-EST
    From: John C. Mallery <jcma at MIT-MC>

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.0,
    microcode TMC5-MIC 319, FEP 22, on Lisp Machine James Morrison:

    DEFFs now lose when invoked anywhere but toplevel.

This is fixed in a later release.  In the mean time, you can put them at
top-level or use FDEFINE.

      For Function CONDITIONALIZE-3600
	While compiling (DEFF QC-FILE (FUNCTION COMPILER:COMPILE-FILE)):
	DEFF is a special form but the compiler has not been told
	how to compile calls to it.  Use a macro, a compiler transformer,
	a COMPILER:PHASE-1 property, or a COMPILER:PHASE-1-HOOK property.
	While compiling (DEFF QC-FILE-LOAD (FUNCTION COMPILER:COMPILE-FILE-LOAD)):
	DEFF is a special form but the compiler has not been told
	how to compile calls to it.  Use a macro, a compiler transformer,
	a COMPILER:PHASE-1 property, or a COMPILER:PHASE-1-HOOK property.
	While compiling (DEFF FASLOAD (FUNCTION LOAD)):
	DEFF is a special form but the compiler has not been told
	how to compile calls to it.  Use a macro, a compiler transformer,
	a COMPILER:PHASE-1 property, or a COMPILER:PHASE-1-HOOK property.


    (DEFUN CONDITIONALIZE-3600 ()
      ;; conditionalize my old favorites -- at least for the time being
      (DEFF QC-FILE #'COMPILER:COMPILE-FILE)
      (DEFF QC-FILE-LOAD #'COMPILER:COMPILE-FILE-LOAD)
      (DEFF FASLOAD #'LOAD)
      ;; do the globalization
      (GLOBALIZE* "QC-FILE" "QC-FILE-LOAD" "FASLOAD")
      (si:enable-services)				;Cretin avoidance.
      ;; hack scheduling
    ;  (set-scheduler-quantum 1.)			;Scheduler non-avoidance.
      ;; fix up wholine docs
    ;  (send tv:who-line-documentation-window :eval-inside-yourself
    ;	'(setq tv:left-margin-size 4 tv:line-height 14 tv:baseline-adj -1))
    ;  (AND (Y-OR-N-P "Use old key bindings? ")
    ;       (SI:SET-KEYBOARD-LAYOUT NIL))		;keep the key bindings straight until new kbd
      )
29-Mar-85 12:18:21-EST,7901;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 29 Mar 85 12:17-EST
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 205706; Fri 29-Mar-85 12:15:14-EST
Date: Friday, 29 March 1985, 12:15-EST
From: David A. Moon <Moon at SCRC-STONY-BROOK>
Subject: Daemonic File Lossage.
To: Tomr at OZ
cc: BUG-LISPM at OZ
In-Reply-To: <850328074808.1.CRM@APIARY-9.MIT>
Message-ID: <850329121515.5.MOON@EUPHRATES.SCRC.Symbolics.COM>

    Date: Thursday, 28 March 1985, 07:48-EST
    From: Tomr at OZ

    In Symbolics 3600 Release 6.0 Beta IIc, microcode TMC5-MIC 315, FEP 18, on APIARY-9:

    As you can see, I was making a system when this occured.

    This error occured once before, running the same release, different file though.
    It's tough for me to reproduce it since it occurs randomly.  When I check the
    buffer, sure enough, I find that the code has been replaced by the lossage you
    see below.

    Any ideas as to the "Hows" and "Whys"??

What's this closure its reading from?  File streams are instances.  The only guess
I can make is that this is an editor-buffer stream (I didn't know you could make-system
from those) and you have another process molesting the editor in the background.
Is this right, or a wild guess that is totally off?

Perhaps you had more files of system patches loaded than you are telling us?

    >>Error: End of file for #<DTP-CLOSURE 117423527>.
	     End of file occurred while reading (IN-PARALLEL (READY TARGET)                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             )
    While in the function (:PROPERTY LIST SI:STANDARD-READ-FUNCTION)  SI:XR-READ-THING  (:PROPERTY LIST SI:STANDARD-READ-FUNCTION)

    (:PROPERTY LIST SI:STANDARD-READ-FUNCTION):  (P.C. = 271)
       Arg 0 (STREAM): #<DTP-CLOSURE 117423527>
       Arg 1 (SHOULD-BE-NIL): NIL
       Arg 2 (FIFTY): 40
       Local 3 (LIST): (IN-PARALLEL (READY TARGET)                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             )
       Local 4 (THING): SI:EOF
       Local 5 (TYPE): SI:SPECIAL-TOKEN
       Local 6 (SPLICEP): NIL
       Local 7 (END-OF-LIST): (                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            )
       Local 8 (BP): NIL
       Local 9 (CORRESPONDENCE-ENTRY): NIL

    SI:XR-READ-THING:  (P.C. = 60)
       Arg 0 (STREAM): #<DTP-CLOSURE 117423527>

    (:PROPERTY LIST SI:STANDARD-READ-FUNCTION):  (P.C. = 44)
       Arg 0 (STREAM): #<DTP-CLOSURE 117423527>
       Arg 1 (SHOULD-BE-NIL): NIL
       Arg 2 (FIFTY): 40

    SI:XR-READ-THING:  (P.C. = 60)
       Arg 0 (STREAM): #<DTP-CLOSURE 117423527>

    (:PROPERTY LIST SI:STANDARD-READ-FUNCTION):  (P.C. = 44)
       Arg 0 (STREAM): #<DTP-CLOSURE 117423527>
       Arg 1 (SHOULD-BE-NIL): NIL
       Arg 2 (FIFTY): 40

    SI:XR-READ-THING:  (P.C. = 60)
       Arg 0 (STREAM): #<DTP-CLOSURE 117423527>

    (:PROPERTY LIST SI:STANDARD-READ-FUNCTION):  (P.C. = 44)
       Arg 0 (STREAM): #<DTP-CLOSURE 117423527>
       Arg 1 (SHOULD-BE-NIL): NIL
       Arg 2 (FIFTY): 40

    SI:XR-READ-THING:  (P.C. = 60)
       Arg 0 (STREAM): #<DTP-CLOSURE 117423527>

    Rest of stack:
    (:PROPERTY LIST SI:STANDARD-READ-FUNCTION):  (P.C. = 44)
    SI:XR-READ-THING:  (P.C. = 60)
    (:INTERNAL SI:READ-INTERNAL 0 SI:.WITH-INPUT-EDITING-FUNCTION.):  (P.C. = 15)
    SI:READ-INTERNAL:  (P.C. = 35)
    READ:  (P.C. = 6)
    (:INTERNAL COMPILER:COMPILE-PROCESS-DEFAULT 5 (:READ)):  (P.C. = 4)
    COMPILER:COMPILE-PROCESS-DEFAULT:  (P.C. = 66)
    COMPILER:COMPILE-TO-FILE:  (P.C. = 77)
    COMPILER:PROCESS-FORMS-FROM-STREAM:  (P.C. = 102)
    COMPILER:COMPILE-FROM-STREAM:  (P.C. = 237)
    COMPILER:COMPILE-FILE:  (P.C. = 303)
    SI:COMPILE-FILE-1:  (P.C. = 6)
    SI:DO-FILE-TRANSFORMATIONS:  (P.C. = 244)
    SI:PERFORM-TRANSFORMATIONS:  (P.C. = 167)
    SI:PERFORM-TRANSFORMATIONS:  (P.C. = 64)
    MAKE-SYSTEM:  (P.C. = 241)
    MS1:  (from AP6:>act3-experimental>loader)
    SI:*EVAL:  (P.C. = 403)
    SI:READFILE-INTERNAL:  (P.C. = 131)
    FS:LOAD-STREAM:  (P.C. = 16)
    LOAD:  (P.C. = 124)
    SI:*EVAL:  (P.C. = 403)
    (:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0):  (P.C. = 152)
    TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)  (from SYS: PATCH; SYSTEM-269-48)
    SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
    SI:LISP-COMMAND-LOOP:  (P.C. = 67)
    SI:LISP-TOP-LEVEL1:  (P.C. = 5)
    SI:LISP-TOP-LEVEL2:  (P.C. = 5)
    SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
29-Mar-85 12:19:43-EST,865;000000000000
Received: from MIT-MOON by MIT-OZ via Chaosnet; 29 Mar 85 12:17-EST
Date: Friday, 29 March 1985, 12:17-EST
From: Chris Lindblad <cjl at OZ>
Subject: cp improvements
To: BUG-LISPM at OZ
Message-ID: <850329121703.1.CJL@MOON.MIT>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.0,
microcode TMC5-MIC 319, on Lisp Machine Keith Moon:

There should be cp arg types for all namespace object classes.  There is
only host and printer.  There should also be user, network, site and
namespace types.

There should be documentation for the function si:define-cp-type.

There should be more examples of usage of si:define-cp-command.

Cp sources should be supplied with the distribution. If cp sources are
not supplied, cp documentation must be much better, in terms of
documenting the functions mentioned above, and giving examples of their
usage.
29-Mar-85 13:18:58-EST,2230;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 29 Mar 85 13:17-EST
Date: 29 March 1985 13:17-EST
From: Christopher C. Stacy <CSTACY @ MIT-MC>
Subject:  Telnet
To: ROLY @ MIT-MC, BUG-LISPM @ MIT-MC
cc: Moon @ SCRC-STONY-BROOK

    Date: Thu, 28 Mar 85 22:34 EST
    From: David A. Moon <Moon at SCRC-STONY-BROOK.ARPA>
    To:   CSTACY at MIT-MC.ARPA
    Re:   Telnet
    Received: from SCRC-STONY-BROOK by MIT-MC via Chaosnet; 28 MAR 85  22:36:25 EST
    Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 205415; Thu 28-Mar-85 22:33:10-EST
    In-Reply-To: <850328213301.1.HORNIG@HUDSON.SCRC.Symbolics.COM>
    Message-ID: <850328223435.1.MOON@EUPHRATES.SCRC.Symbolics.COM>

        Date: Thursday, 28 March 1985, 21:33-EST
        From: Charles Hornig <Hornig at SCRC-STONY-BROOK>

    	Date: 28 March 1985 21:20-EST
    	From: Roland G. Ouellette <ROLY @ MIT-MC>

    	    Date: Thursday, 28 March 1985, 19:44-EST
    	    From: Christopher C. Stacy <CStacy at MIT-MC>

    	    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.0,
    	    microcode TMC5-MIC 319, FEP 17, on Lisp Machine Robot-4:

    	    I am getting terrible throughput using the terminal window
    	    to SUPDUP to MIT-MC.  The response is worse than from a
    	    terminal connected to a MINITS box, and I bet that the
    	    problem is not in the network or host.  Did something
    	    change in Release 6 to drastically degrade the performance
    	    of this program?

    	I have noticed the same losing behavior in beta test 5.2 with
    	TCP on Minnie Mouse.  I see that you are running TCP here too:
    	this may be the problem.

        TCP TELNET to MC from a LispM must go through the ARPANET.  This
        may be the cause of the problem.

    Chris, if this is the problem it probably wouldn't be a major big deal
    to fix ITS to talk the same encapsulated Internet protocol that the
    Lisp Machine talks.  Somewhere in my old mail I have retained a
    message from Hornig explaining what the problem is with the protocol
    ITS talks now.

Huh?  My Terminal window was not not using TCP at all, just a simple
Chaosnet connection directly to MC.
29-Mar-85 13:26:54-EST,1414;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 29 Mar 85 13:26-EST
Received: from SCRC-CUYAHOGA by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 205756; Fri 29-Mar-85 13:26:07-EST
Date: Friday, 29 March 1985, 13:26-EST
From: Robert A. Cassels <Cassels at SCRC-TENEX>
Subject: couldn't a check be made...
To: saz at OZ, BUG-LISPM at OZ
In-Reply-To: <850329052129.1.SAZ@APIARY-9.MIT>
Message-ID: <850329132620.4.CASSELS@CUYAHOGA.SCRC.Symbolics.COM>

    Date: Friday, 29 March 1985, 05:21-EST
    From: David M. J. Saslav <saz at OZ>

    In Symbolics 3600 Release 6.0 Beta IIc, microcode TMC5-MIC 315, FEP 18, on APIARY-9:

    ...to see if a flonum is "fixnumable" before expt calls LOG here?...

    Also, why did I have to log in to PIG before I could start up this bug window?

    dave s.

    >>Error: Attempt to take the logarithm of -3.0, which is not a positive number.
    While in the function LOG  ^  SI:*EVAL

    LOG:  (P.C. = 45)
       Arg 0 (N): -3.0

    ^:  (P.C. = 145)
       Arg 0 (NUM): -3
       Arg 1 (EXPT): 2.0

Floating-point is presumed to be inaccurate.  Pretending that 2.0 is
exactly 2 might work for you, but would be misleading for most people
doing real floating-point work.  In general, the rules for
floating-point are the result of long debates in the numerical analysis
community.

FYI, (CL:EXPT -3 2.0) => #C(9.0 1.5736101e-6)
29-Mar-85 14:46:40-EST,2177;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 29 Mar 85 14:45-EST
Received: from MIT-TWEETY-PIE by MIT-MC via Chaosnet; 29 MAR 85  14:43:53 EST
Date: Friday, 29 March 1985, 14:42-EST
From: Webster Dove <dove at MIT-BUGS-BUNNY>
Subject: ip-fix for icmp-echo and subnet routing
To: BUG-LISPM at OZ
Message-ID: <850329144234.2.DOVE@TWEETY-PIE.MIT>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, microcode TMC5-FPA-MIC 319,
FEP 17, on Lisp Machine Tweety Pie:

I found two problems with the mit-6-0.load

1) apparently, as delivered it was using smaller that 8 byte icmp echo packets to
check gateway status.  Our vax wouldn't respond to them so it looked down.

2) SCRC and SCH have a :internet-subnets-with-subnet-routing :user-property that block
the MIT one from working.  There is a duplicate user-property at MIT called
mit-subnet-routing that works.

Compiling the following form cures these two problems.

;;; -*- Mode: LISP; Package: TCP; Base: 10.; Syntax: Zetalisp -*-
;; only loaded if tcp is made
(COMPILER-LET ((INHIBIT-FDEFINE-WARNINGS T))
  (DEFMETHOD (ICMP-PROTOCOL :ICMP-SEND-ECHO) (HOST &OPTIONAL LENGTH DELAY)
    (SETF LENGTH (MAX 8 (OR LENGTH 8)))
    (MULTIPLE-VALUE-BIND (ROUTE LOCAL-ADDRESS FOREIGN-ADDRESS)
	(SEND NETWORK :ROUTE-TO-HOST HOST)
      (LET ((SEQUENCE (IF (< *ICMP-ECHO-SEQUENCE* 65535)
			  (INCF *ICMP-ECHO-SEQUENCE*)
			  (SETQ *ICMP-ECHO-SEQUENCE* 0))))
	(SEND SELF :GET-ECHO-REPLY SEQUENCE)
	(PUSH (NCONS SEQUENCE) ECHOES-OUTSTANDING)
	(SEND SELF :ICMP-SEND-ECHO-INTERNAL
	      ROUTE LOCAL-ADDRESS FOREIGN-ADDRESS 0 LENGTH SEQUENCE)
	(PROG1 (PROCESS-WAIT-WITH-TIMEOUT
		   "ICMP Echo" (OR DELAY (* 5 60))
		 #'(LAMBDA (ICMP SEQUENCE)
		     (NOT (NULL (SEND ICMP :ECHO-REPLY SEQUENCE))))
		 SELF SEQUENCE)
	       (SEND SELF :GET-ECHO-REPLY SEQUENCE)))))
  
  (DEFUN-METHOD IP-GET-SUBNET-ROUTING-INFO IP-PROTOCOL ()
    (LET ((SRI (SEND NETWORK :USER-GET :MIT-SUBNET-ROUTING)))
      (WHEN SRI
	(LOOP FOR (SUBNET . GATEWAYS) IN (READ-FROM-STRING SRI)
	      COLLECT (LIST* (PARSE-INTERNET-ADDRESS SUBNET)
			     (LOOP FOR GW IN GATEWAYS
				   COLLECT (PARSE-INTERNET-ADDRESS GW))))))))
29-Mar-85 15:32:41-EST,1812;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 29 Mar 85 15:32-EST
Received: from SCRC-CROW by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 205830; Fri 29-Mar-85 15:32:09-EST
Date: Friday, 29 March 1985, 15:31-EST
From: Robert W. Kerns <RWK at SCRC-YUKON>
Subject: Logical Pathname Names  Lossage
To: jcma at MIT-MC
cc: BUG-LISPM at OZ
In-Reply-To: <850328211852.7.JCMA@MORRISON.MIT>
Message-ID: <850329153138.4.RWK@CROW.SCRC.Symbolics.COM>

    Date: Thursday, 28 March 1985, 21:18-EST
    From: jcma@MIT-MC

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.0,
    microcode TMC5-MIC 319, FEP 22, on Lisp Machine James Morrison:

    This is trying to tell me I can't have two logical pathnames pointing at the
    same real pathname.  What kind of lossage is that?

Not lossage.  Winnage to prevent major lossage.  Logical pathnames TRY
to be two-way, i.e. if you have PIG:USRD$:[RELATUS.UTILS]FOO.LSP, how is
the system supposed to know whether you mean RL:U;FOO.LISP or
RL:UTILS;FOO.LISP.

Even more important:  If two logical pathnames end up translating to the
same physical pathname, there is no way to tell whether they were
intended to be the same file!  Consider what would happen if both
pathnames appeared on a distribution tape, and one overwrote the other
because you made an error in setting up your translations.

(You might prefer non-determinism, maybe?  Might be more INTERESTING, but...)

    >>Error: Attempt to translate RL: U;  to PIG:USRD$:<RELATUS.UTILS>.
	     We had previously gotten this pathname as a translation of RL: UTILS; .
	     Files may be overwritten accidentally if you proceed.
    While in the function FS:CHECK-TRANSLATION  (:METHOD FS:LOGICAL-HOST :TRANSLATE)  (:METHOD FS:LOGICAL-PATHNAME :TRANSLATED-PATHNAME)
29-Mar-85 17:03:48-EST,1658;000000000000
Mail-From: HENRY created at 29-Mar-85 17:03:28
Date: Fri, 29 Mar 1985  17:03 EST
Message-ID: <HENRY.12098972959.BABYL@MIT-OZ>
From: HENRY@MIT-OZ
To:   jcma@MIT-MC
Cc:   BUG-LISPM@MIT-OZ
Subject: Logical Pathname Names  Lossage
In-reply-to: Msg of 28 Mar 1985 21:18-EST from jcma at MIT-MC


    Date: Thursday, 28 March 1985, 21:18-EST
    From: jcma at MIT-MC
    To:   BUG-LISPM at OZ
    Re:   Logical Pathname Names  Lossage

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.0,
    microcode TMC5-MIC 319, FEP 22, on Lisp Machine James Morrison:

    This is trying to tell me I can't have two logical pathnames pointing at the
    same real pathname.  What kind of lossage is that?

    >>Error: Attempt to translate RL: U;  to PIG:USRD$:<RELATUS.UTILS>.
             We had previously gotten this pathname as a translation of RL: UTILS; .
             Files may be overwritten accidentally if you proceed.

Yes, I encountered this too, and its bad. It was explained to me
that it is trying to protect you from writing a file on two different
logical pathnames with the same physical pathname, but

- It shouldn't complain until I actually try to write such a file, 
rather than when I set up something only with the potential of doing so.

- That's a terribly worded error message since it will scare unsophisticated
users in cases where its likely that no harm will be done at all.
At most it should be a warning and not an error.

- Logical pathnames are supposed to provide a measure of independence from
physical placement of files, and here you go re-introducing a dependency
on physical location.

29-Mar-85 17:33:41-EST,437;000000000000
Received: from MIT-MOON by MIT-OZ via Chaosnet; 29 Mar 85 17:33-EST
Date: Friday, 29 March 1985, 17:31-EST
From: Chris Lindblad <cjl at OZ>
Subject: CP should have a sticky pathnmame defaulting capability
To: BUG-LISPM at OZ
Message-ID: <850329173142.1.CJL@MOON.MIT>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.0,
microcode TMC5-MIC 319, on Lisp Machine Keith Moon:

The cp should have sticky pathname defaulting.

29-Mar-85 18:33:06-EST,1031;000000000000
Received: from MIT-YOGI by MIT-OZ via Chaosnet; 29 Mar 85 18:33-EST
Date: Friday, 29 March 1985, 18:31-EST
From: A Lisp Machine <LISPM at MIT-MC>
Subject: SPA|C, validating CHAOS
To: BUG-LISPM at OZ
Message-ID: <850329183154.1.LISP-MACHINE@MIT-YOGI.MIT>

In Symbolics 3670 Release 6.0, IP-TCP 29.0,
microcode TMC5-IO4-FPA-MIC 319, on Lisp Machine Yogi:

Every time I do something with the network more than 5 minutes after
something else with the network, I have to connect to SPA|C to try and
validate namespace information about the network CHAOS in the SEW
namespace.  The problem seems to be that when you ask to validate CHAOS
and don't specify a namespace, it does it in all of the ones it's
defined in.  Shouldn't it check only the ones in the namespace search
list (which solves the problem) unless you are explicitly asking about
something in another namespace?  I have a patch that makes it do that in
the obvious way, but I'm a little worried about what strange
interactions it might cause on Goldy.
29-Mar-85 18:46:03-EST,410;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 29 Mar 85 18:45-EST
Date: 29 Mar 1985  18:46 EST (Fri)
Message-ID: <SR.EHPYC.12098991647.BABYL@MIT-SPEECH>
From: Scott Cyphers <SR.EHPYC@MIT-SPEECH>
To:   BUG-LISPM@OZ
Subject: SPA|C, validating CHAOS
In-reply-to: Msg of 29 Mar 1985 18:31-EST from A Lisp Machine <LISPM at MIT-MC>

Sorry, I didn't see that I wasn't really logged in when I sent that.
29-Mar-85 19:10:50-EST,421;000000000000
Received: from MIT-JANIS by MIT-OZ via Chaosnet; 29 Mar 85 19:10-EST
Date: Friday, 29 March 1985, 19:08-EST
From: Chris Lindblad <cjl at OZ>
Subject: Filename completion for fep files doesn't work
To: BUG-LISPM at OZ
Message-ID: <850329190819.1.CJL@JANIS.MIT>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.1,
microcode TMC5-MIC 319, on Lisp Machine Janis Joplin:

Typing b|fep0:>MIT-  gives me b:>MIT-
29-Mar-85 22:42:01-EST,4273;000000000000
Received: from MIT-JANIS by MIT-OZ via Chaosnet; 29 Mar 85 22:41-EST
Date: Friday, 29 March 1985, 22:39-EST
From: Patrick A. O'Donnell <PAO at MIT-EECS>
Subject: Format bug
To: BUG-LISPM at OZ
Message-ID: <850329223938.1.PAO@JANIS.MIT>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.1,
microcode TMC5-MIC 319, on Lisp Machine Janis Joplin:

It certainly appears that there is a ~] in the format string!  However,
on close examination it is discovered that the format string is
ART-FAT-STRING.  FORMAT-PARSE-CLAUSES discovers that it isn't
ART-STRING, assumes that it's a Common Lisp string and fails to find the
character object #\~ in the string.

The following is sufficient to demonstrate the problem:

(format nil "~:[ ~;*~]" t)  ==> "*"
(format nil
	(fillarray (make-array 9 :type art-fat-string) "~:[ ~;*~]")
	t)
		==> error...

>>Error: Missing ~] in format string:
               
            "~:[ ~;*~]"
         
While in the function FORMAT:FORMAT-PARSE-CLAUSES  (:PROPERTY FORMAT:[ FORMAT:CTL-MULTI-ARG)  FORMAT:FORMAT-CTL-OP

FORMAT:FORMAT-PARSE-CLAUSES:  (P.C. = 67)
   Arg 0 (CLOSECHAR): FORMAT:]
   Arg 1 (SEMIP): T
   Local 2 (I): 3.
   Local 3 (J): NIL
   Local 4 (TEM): NIL
   Local 5 (START): 6.
   Local 6 (CLAUSES): #<ART-Q-LIST-30. 6300055>
   Local 7 (STACK): #<ART-Q-LIST-10. 6300116>

(:PROPERTY FORMAT:[ FORMAT:CTL-MULTI-ARG):  (P.C. = 47)
   Arg 0 (ARGS): (NIL)
   Local 0 (ARGS): NIL
   Arg 1 (PARAMS): NIL

FORMAT:FORMAT-CTL-OP:  (P.C. = 45)
   Arg 0 (OP): FORMAT:[
   Arg 1 (ARGS): (NIL)
   Arg 2 (PARAMS): NIL

FORMAT:FORMAT-CTL-STRING:  (P.C. = 101)
   Arg 0 (ARGS): (NIL)
   Arg 1: "~:[ ~;*~]"

FORMAT:  (P.C. = 66)
   Arg 0 (STREAM): #<PP-WINDOW Pp Window 1 601656 exposed>
   Arg 1: "~:[ ~;*~]"
   Rest arg (ARGS): (NIL)

(:INTERNAL (:INTERNAL (:PROPERTY TV:SCROLL-ENTRY-SYMBOL-VALUE-FUNCTION :DEFUN-SELECT-METHOD) 0. (:PRINT)) 0.):  (P.C. = 45)
   Arg 0 (SELF): #<PP-WINDOW Pp Window 1 601656 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:BASIC-SCROLL-WINDOW -- 8. IV's, 0. FL's 24364455>
   Arg 2 (ENTRY): #<ART-Q-12. 16170210>

(:INTERNAL (:PROPERTY TV:SCROLL-ENTRY-SYMBOL-VALUE-FUNCTION :DEFUN-SELECT-METHOD) 0. (:PRINT)):  (P.C. = 7)
   Arg 0 (**DEFSELECT-OP**): :PRINT
   Arg 1 (SELF): #<PP-WINDOW Pp Window 1 601656 exposed>
   Arg 2 (SELF-MAPPING-TABLE): #<Map to flavor TV:BASIC-SCROLL-WINDOW -- 8. IV's, 0. FL's 24364455>
   Rest arg (.ARGS.): (#<ART-Q-12. 16170210>)

(:PROPERTY TV:SCROLL-ENTRY-SYMBOL-VALUE-FUNCTION :DEFUN-SELECT-METHOD):  (P.C. = 12)
   Arg 0 (OPERATION): :PRINT
   Rest arg (SELECT-METHOD-ARGS): (#<PP-WINDOW Pp Window 1 601656 exposed> #<Map to flavor TV:BASIC-SCROLL-WINDOW -- 8. IV's, 0. FL's 24364455> #<ART-Q-12. 16170210>)

Rest of stack:
(:DEFUN-METHOD TV:SCROLL-ENTRY-SYMBOL-VALUE-FUNCTION):  (P.C. = 12)
TV:SCROLL-ENTRY-SYMBOL-VALUE-FUNCTION:  (P.C. = 12)
TV:SCROLL-ENTRY-CALL-FUNCTION-FUNCTION-TAIL-POINTER:  (P.C. = 10)
(:PROPERTY TV:SCROLL-ENTRY-CALL-FUNCTION-FUNCTION :DEFUN-SELECT-METHOD):  (P.C. = 31)
(:DEFUN-METHOD TV:SCROLL-ENTRY-CALL-FUNCTION-FUNCTION):  (P.C. = 14)
TV:SCROLL-ENTRY-CALL-FUNCTION-FUNCTION:  (P.C. = 14)
(:DEFUN-METHOD TV:SCROLL-REDISPLAY-DISPLAY-ITEM):  (P.C. = 646)
TV:SCROLL-REDISPLAY-DISPLAY-ITEM:  (P.C. = 12)
(:DEFUN-METHOD TV:SCROLL-REDISPLAY-ITEM-LOOP):  (P.C. = 132)
TV:SCROLL-REDISPLAY-ITEM-LOOP:  (P.C. = 14)
(:DEFUN-METHOD TV:SCROLL-REDISPLAY-ITEM-LOOP):  (P.C. = 101)
(:DEFUN-METHOD TV:SCROLL-REDISPLAY):  (P.C. = 71)
(:METHOD TV:BASIC-SCROLL-WINDOW :REDISPLAY):  (P.C. = 14)
(:METHOD W:PP-WINDOW :COMBINED :REDISPLAY):  (P.C. = 11)
(:METHOD TV:BASIC-SCROLL-WINDOW :SET-DISPLAY-ITEM):  (P.C. = 14)
(:METHOD W:PAST-PERFORMANCES :DISPLAY-YOURSELF):  (P.C. = 102)  (from WHINNY: CODE; DISPLAY)
(:METHOD W:HORSE :DISPLAY-YOURSELF):  (P.C. = 250)  (from WHINNY: CODE; DISPLAY)
(:METHOD W:WHINNY-FRAME :CASE :DO-COMMAND :MODIFY-HORSE):  (P.C. = 13)  (from WHINNY: CODE; WHINNY-FRAME)
(:METHOD W:WHINNY-FRAME :COMBINED :DO-COMMAND):  (P.C. = 136)
(:METHOD W:WHINNY-FRAME :TOP-LEVEL-LOOP):  (P.C. = 147)  (from WHINNY: CODE; WHINNY-FRAME)
W:WHINNY-TOP-LEVEL-LOOP:  (P.C. = 4)  (from WHINNY: CODE; WHINNY-FRAME)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
30-Mar-85 01:23:13-EST,1393;000000000000
Received: from MIT-YOGI by MIT-OZ via Chaosnet; 30 Mar 85 01:23-EST
Date: Saturday, 30 March 1985, 01:21-EST
From: Scott Cyphers <sr.ehpyc at MIT-SPEECH>
Subject: File copy screwed up
To: BUG-LISPM at OZ
Message-ID: <850330012133.4.CYPHER@MIT-YOGI.MIT>

In Symbolics 3670 Release 6.0, IP-TCP 29.0, Experimental ZOO 5.0,
Experimental Display 6.0, Experimental Spire 16.0,
Experimental Speech-Layouts 7.0, Experimental Spire-Macros 1.0,
Experimental Compute 1.0, Experimental Attribute 1.0,
Experimental Audio 1.0, Experimental Speech-Attributes 1.0,
microcode TMC5-IO4-FPA-MIC 319, on Lisp Machine Yogi:

The end of this file, which I have renamed to GOLDY:>S>SPIRE>DISPLAY>BAD-OVERLAY.LISP
got messed up in a copy from >S>SPIRE>OVERLAY.LISP -- The end is like this:

					  (send display :clearable-overlays)
					  (and cursors (send display :cursor-list)))
		       collect `(,(send                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
30-Mar-85 08:23:34-EST,2392;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 30 Mar 85 08:23-EST
Received: from SCRC-CROW by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 205839; Fri 29-Mar-85 15:44:51-EST
Date: Friday, 29 March 1985, 15:44-EST
From: Robert W. Kerns <RWK at SCRC-YUKON>
Subject: Redefinition Warnings
To: jcma at MIT-MC
cc: Moon at SCRC-STONY-BROOK, BUG-LISPM at OZ
In-Reply-To: <850328231659.8.JCMA@MORRISON.MIT>
Message-ID: <850329154419.5.RWK@CROW.SCRC.Symbolics.COM>

    Date: Thursday, 28 March 1985, 23:16-EST
    From: jcma@MIT-MC

	Date: Thu, 28 Mar 85 22:35 EST
	From: David A. Moon <Moon@SCRC-STONY-BROOK.ARPA>

	    Date: Thursday, 28 March 1985, 21:27-EST
	    From: jcma@MIT-MC

	    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.0,
	    microcode TMC5-MIC 319, FEP 22, on Lisp Machine James Morrison:

	    I am getting function redefinition warnings because the system doesn't know
	    that a binary file is the same file as the source file.  This may be a bug for
	    only VMS pathnames.  I don't know.

	If you expect a response please provide an example.  If you're just letting off
	steam, you can ignore my message and I'll ignore yours.

    I compiled a function in the editor.  Then I saved the file.  Then I compiled
    the file with meta-x compile file.  then I loaded the file and it told me that
    the binary version was redefining the one I had compiled in the buffer.  The
    file already existed.  It was my init file.  

I'll bet you used a different name than VMS will tell you for the file,
right?  Say PIG:USRD$:, while Pig will tell you it's USER$DISK: instead?

    I just had to reboot because I landed in the cold load stream while trying to
    recompile relatus in rel 6.  This wasn't your fault.  But, the proceed option
    to arrest the inital process doesn't look like a winning way to proceed from
    errors in that process.

    Give me a couple of days trying to bring up relatus in rel 6 and then I'll let
    some steam off.  I'll be sure to warn you before doing so.
OK, I'll be sure to get my asbestos suit back from the cleaners.

    You have to bear in mind that when lots of software must make the transition
    between releases there are going to be many bugs.  This is not like
    incrementally encountering bugs as the development system evolves.  It is all
    at once.
30-Mar-85 14:43:40-EST,1046;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 30 Mar 85 14:43-EST
Received: from MIT-TWEETY-PIE by MIT-MC via Chaosnet; 30 MAR 85  14:43:48 EST
Date: Saturday, 30 March 1985, 14:42-EST
From: Webster Dove <dove at MIT-BUGS-BUNNY>
Subject: internet/chaos usage
To: BUG-LISPM at OZ
Message-ID: <850330144238.2.DOVE@TWEETY-PIE.MIT>

In Symbolics 3600 Release 6.0 Beta IIc, microcode TMC5-FPA-MIC 315,
FEP 17, with UTIL, on Lisp Machine Tweety Pie:

With the machines able to use both nets, and with one of them being down
frequently (e.g. chaos to prancer), is it possible for the machine to
include the status of each net in determining the best path to a host?

For example, if prancer is down, it seems that the machine should
recognize that ip-tcp is the only way to get namespace service from
riverside, rather than doggedly trying to use chaos to do it.

I appreciate that this may be extremely hard, but I thought I should
bring it to someones attention now that ip packets use a different route
than the microwave link.
30-Mar-85 15:09:21-EST,3857;000000000000
Received: from MIT-JOE-LOUIS by MIT-OZ via Chaosnet; 30 Mar 85 15:09-EST
Date: Saturday, 30 March 1985, 15:06-EST
From: Roland Ouellette <Roly at MIT-MC>
Subject: Bad date format error
To: BUG-LISPM at OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10, on Lisp Machine Joe Louis:

Well in lieu of any understanding of this error, I'm following the
directions of the error.  I was trying to dired jimi|fep0:> in
zmacs (presumablly running rel6.0) from Joe running a rel5.2-qnam6
band..... 

>>Error: The FILE server violated protocol: "03//30//109 14:08:40" is not in the right date-time format.
         Please report this bug.  To try using the full time parser, set FS:*USE-FULL-PARSER* to T
         and try again.
While in the function FS:PARSE-DIRECTORY-DATE-PROPERTY  FS:READ-DIRECTORY-STREAM-ENTRY  (:METHOD FS:DIRECTORY-STREAM-FILE-ACCESS-PATH-MIXIN :DIRECTORY-LIST)

FS:PARSE-DIRECTORY-DATE-PROPERTY:  (P.C. = 172)
   Arg 0 (STRING): "CREATION-DATE 03//30//109 14:08:40"
   Arg 1 (START): 14.
   --Defaulted args:--
   Arg 2 (END): 32.
   Local 3 (FLAG): NIL
   Local 4 (DATE): "The FILE server violated protocol: ~S is not in the right date-time format.
Please report this bug.  To try using the full time parser, set FS:*USE-FULL-PARSER* to T
and try again."
   Local 5 (MONTH): "03//30//109 14:08:40"
   Local 6 (YEAR): #<DTP-LOCATIVE 26500477>
   Local 7 (HOURS): #<DTP-LOCATIVE 26500502>
   Local 8 (MINUTES): #<DTP-EVEN-PC 6713624>
   Local 9 (SECONDS): 2.

FS:READ-DIRECTORY-STREAM-ENTRY:  (P.C. = 142)
   Arg 0 (STREAM): #<FILE-DIRECTORY-STREAM "JIMI|FEP0:>*.*.*" 5132127>
   Arg 1 (DEFAULTING-PATHNAME): #<FEP-PATHNAME "JIMI|FEP0:>*.*.*">

(:METHOD FS:DIRECTORY-STREAM-FILE-ACCESS-PATH-MIXIN :DIRECTORY-LIST):  (P.C. = 40)
   Arg 0 (SELF): #<REMOTE-FEP-QFILE-ACCESS-PATH JIMI, FEP unit 0, using QFILE 5127314>
   Arg 1 (SELF-MAPPING-TABLE): FS:DIRECTORY-STREAM-FILE-ACCESS-PATH-MIXIN
   Arg 2 (OPERATION): :DIRECTORY-LIST
   Arg 3 (PATHNAME): #<FEP-PATHNAME "JIMI|FEP0:>*.*.*">
   Arg 4 (OPTIONS): (:SORTED :DELETED)

(:METHOD FS:ACTIVE-PATHNAME-MIXIN :DIRECTORY-LIST):  (P.C. = 12)
   Arg 0 (SELF): #<FEP-PATHNAME "JIMI|FEP0:>*.*.*">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:ACTIVE-PATHNAME-MIXIN -- 1. IV's, 0. FL's 53632324>
   Arg 2 (OPERATION): :DIRECTORY-LIST
   Arg 3 (OPTIONS): (:SORTED :DELETED)

FS:DIRECTORY-LIST:  (P.C. = 111)
   Arg 0 (FILENAME): #<FEP-PATHNAME "JIMI|FEP0:>*.*.*">
   Rest arg (OPTIONS): (:SORTED :DELETED)

(:METHOD ZWEI:DIRED-NODE-MIXIN :REVERT):  (P.C. = 42)
   Arg 0 (SELF): #<DIRED-BUFFER "*Dired-1*" 5127250>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:DIRED-NODE-MIXIN -- 4. IV's, 0. FL's 56645626>
   Arg 2 (OPERATION): :REVERT

(:METHOD ZWEI:DIRED-BUFFER :COMBINED :REVERT):  (P.C. = 10)
   Arg 0 (SELF): #<DIRED-BUFFER "*Dired-1*" 5127250>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:DIRED-BUFFER -- 3. IV's, 4. FL's 60440337>
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

(:METHOD ZWEI:ZMACS-EDITOR :FIND-SPECIAL-BUFFER):  (P.C. = 45)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 56044432>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMACS-EDITOR -- 3. IV's, 0. FL's 60246130>
   Arg 2 (OPERATION): :FIND-SPECIAL-BUFFER
   Arg 3 (TYPE): :DIRED
   Arg 4 (NEW-P): T
   Rest arg (SETS): (:SET-PATHNAME #<FEP-PATHNAME "JIMI|FEP0:>*.*.*">)

Rest of stack:
(:METHOD ZWEI:ZMACS-EDITOR :SELECT-SPECIAL-BUFFER):  (P.C. = 13)
(:DEFUN-METHOD ZWEI:DIRECTORY-EDIT):  (P.C. = 10)
ZWEI:DIRECTORY-EDIT:  (P.C. = 12)
ZWEI:COM-DIRED:  (P.C. = 5)
ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 214)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 41)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
30-Mar-85 15:33:59-EST,1753;000000000000
Received: from MIT-TWEETY-PIE by MIT-OZ via Chaosnet; 30 Mar 85 15:33-EST
Date: Saturday, 30 March 1985, 15:32-EST
From: Webster Dove <dove at MIT-BUGS-BUNNY>
Subject: small packets help unc-chaos transmission
To: BUG-LISPM at OZ
Message-ID: <850330153248.3.DOVE@TWEETY-PIE.MIT>

In Symbolics 3600 Release 6.0 Beta IIc, microcode TMC5-FPA-MIC 315,
FEP 17, with UTIL, on Lisp Machine Tweety Pie:

As was the case with our vaxes, limiting the window size of a tcp
connection that goes through an unc-gateway improves throughput on the
lispms dramatically.

If each tcp packet is 512 bytes, and each chaos is 400, then 5 tcp
packets will occupy 7 chaos packets.  Suppose all 7 chaos packets are
queued up, but each time they are sent (as a group) the second is lost
due to data overrun somewhere.  It will not be possible for the remote
gateway to reassemble any tcp packets, so retransmission will occur.  If
the second packet never gets through then communication is impossible
and the tcp level will eventually time out.  There appears to be no
mechanism in the chaos definition for "spacing out" the individual
packets if a retransmit is necessary and many packets are queued.

If the tcp packets are small enough that each fits in its own chaos
packet, then if 7 are queued and the second never gets through 6 are
still sent and acknowledged.  Thus communication is only slightly
slowed.

On the 3600's, it seems that this can be accomplished by:

(setq tcp:*default-window-size* 400. tcp:*max-window-size* 400.)

While this reduces the ip packet size (and thus bandwidth) on local ip
connections also, typical local connections are made with chaosnet
anyway.

I'd be happy to hear about a more elegant solution.
30-Mar-85 16:55:55-EST,4485;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 30 Mar 85 16:55-EST
Received: from MIT-YOGI by MIT-OZ via Chaosnet; 30 Mar 85 16:54-EST
Date: Saturday, 30 March 1985, 16:53-EST
From: Robert Kassel <rob at OZ>
Subject: woops in sage
To: BUG-LISPM at MIT-SPEECH
Message-ID: <850330165304.1.ROB@MIT-YOGI.MIT>

In Symbolics 3670 Release 6.0, IP-TCP 29.0, Experimental ZOO 5.0,
Experimental Spire-Macros 5.0, Experimental Attribute 5.0,
Experimental Compute 5.0, Experimental Audio 4.0,
Experimental Speech-Attributes 4.0, Experimental Display 6.0,
Experimental Speech-Layouts 6.0, Experimental Prtout 4.0,
Experimental Versatec 5.0, Experimental Spire 16.0, ZOO-SPIRE 1.0,
microcode TMC5-IO4-FPA-MIC 319, on Lisp Machine Yogi:

Reading a whole bunch of goodies into one examiner...

>>Trap: The subscript given to the AS-1 instruction, 100 (from local variable SAGE:I), on #<ART-Q-100 26603426> was beyond the length, 100.
While in the function (:METHOD SAGE:DEX-VIEWER-CONTENTS :COMPUTE-TOTAL-HEIGHT-OF-ITEMS)  (:METHOD SAGE:DEX-VIEWER-CONTENTS :SELECT-VIEW-ITEM)  (:METHOD SAGE:DEX-VIEWING-CONTEXT :DISPLAY-DEX-ITEM)

(:METHOD SAGE:DEX-VIEWER-CONTENTS :COMPUTE-TOTAL-HEIGHT-OF-ITEMS):  (P.C. = 20)
   Arg 0 (SELF): #<DEX-VIEWER-CONTENTS 26603742>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SAGE:DEX-VIEWER-CONTENTS -- 4. IV's, 0. FL's 143133671>
   Arg 2 (OPERATION): :COMPUTE-TOTAL-HEIGHT-OF-ITEMS
   Local 3 (TOTAL-PIXELS): 28262
   Local 4 (TOTAL-LINES): 1363
   Local 5 (I): 100
   Local 6: 101
   Local 7 (ITEM): #<DEX-ITEM "SYS:READ-PREMATURE-END-OF-SYMBOL" 26614002>

(:METHOD SAGE:DEX-VIEWER-CONTENTS :SELECT-VIEW-ITEM):  (P.C. = 23)
   Arg 0 (SELF): #<DEX-VIEWER-CONTENTS 26603742>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SAGE:DEX-VIEWER-CONTENTS -- 4. IV's, 0. FL's 143133671>
   Arg 2 (OPERATION): :SELECT-VIEW-ITEM
   Arg 3 (CONTEXT): #<DEX-VIEWING-CONTEXT "Default Viewer" 26604125>
   Arg 4 (ITEM): #<DEX-ITEM "SYS:READ-PREMATURE-END-OF-SYMBOL" 26614002>

(:METHOD SAGE:DEX-VIEWING-CONTEXT :DISPLAY-DEX-ITEM):  (P.C. = 25)
   Arg 0 (SELF): #<DEX-VIEWING-CONTEXT "Default Viewer" 26604125>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SAGE:DEX-VIEWING-CONTEXT -- 4. IV's, 0. FL's 143133160>
   Arg 2 (OPERATION): :DISPLAY-DEX-ITEM
   Arg 3 (FRAME): #<DEX-FRAME Dex Frame 1 43200064 exposed>
   Arg 4 (ITEM): #<DEX-ITEM "SYS:READ-PREMATURE-END-OF-SYMBOL" 26614002>
   --Defaulted args:--
   Arg 5 (HBOX): NIL

(:METHOD SAGE:DEX-VIEWING-CONTEXT :ADD-ITEM-TO-CONTEXT):  (P.C. = 20)
   Arg 0 (SELF): #<DEX-VIEWING-CONTEXT "Default Viewer" 26604125>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SAGE:DEX-VIEWING-CONTEXT -- 4. IV's, 0. FL's 143133160>
   Arg 2 (OPERATION): :ADD-ITEM-TO-CONTEXT
   Arg 3 (FRAME): #<DEX-FRAME Dex Frame 1 43200064 exposed>
   Arg 4 (ITEM): #<DEX-ITEM "SYS:READ-PREMATURE-END-OF-SYMBOL" 26614002>

(:METHOD SAGE:DEX :CANDIDATE-ITEM-CLICK):  (P.C. = 47)
   Arg 0 (SELF): #<DEX-FRAME Dex Frame 1 43200064 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SAGE:DEX -- 7. IV's, 3. FL's 104333716>
   Arg 2 (OPERATION): :CANDIDATE-ITEM-CLICK
   Arg 3 (ITEM): #<DEX-ITEM "SYS:READ-PREMATURE-END-OF-SYMBOL" 26614002>
   Arg 4 (BUTTON): 32768

(:METHOD SAGE:DEX :COMMAND-BLIP):  (P.C. = 104)
   Arg 0 (SELF): #<DEX-FRAME Dex Frame 1 43200064 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SAGE:DEX -- 7. IV's, 3. FL's 104333716>
   Arg 2 (OPERATION): :COMMAND-BLIP
   Arg 3 (BLIP-TYPE): :CANDIDATE
   Arg 4 (BLIP-ARGS): (#<DEX-ITEM "SYS:READ-PREMATURE-END-OF-SYMBOL" 26614002> #<DEX-CANDIDATES-TEXT-SCROLL-PANE Dex Candidates Text Scroll Pane 1 43244020 exposed> 32768)

(:INTERNAL (:METHOD SAGE:DEX :COMMAND-LOOP) 0 SAGE:DOIT):  (P.C. = 44)
   Arg 0 (.LEXICAL-ENVIRONMENT-POINTER.): #<DTP-LOCATIVE 44240126>

(:METHOD SAGE:DEX :COMMAND-LOOP):  (P.C. = 55)
   Arg 0 (SELF): #<DEX-FRAME Dex Frame 1 43200064 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SAGE:DEX -- 7. IV's, 3. FL's 104333716>
   Arg 2 (OPERATION): :COMMAND-LOOP

(:METHOD SAGE:DEX :TOPLEVEL):  (P.C. = 255)
   Arg 0 (SELF): #<DEX-FRAME Dex Frame 1 43200064 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SAGE:DEX -- 7. IV's, 3. FL's 104333716>
   Arg 2 (OPERATION): :TOPLEVEL

SAGE:DEX-TOPLEVEL:  (P.C. = 4)
   Arg 0 (FRAME): #<DEX-FRAME Dex Frame 1 43200064 exposed>

SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
   --Defaulted args:--
   Arg 0 (IGNORE): NIL
30-Mar-85 19:29:05-EST,2991;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 30 Mar 85 19:29-EST
Received: from MIT-JOE-LOUIS by MIT-MC via Chaosnet; 30 MAR 85  19:25:17 EST
Date: Saturday, 30 March 1985, 19:23-EST
From: Roland Ouellette <Roly at MIT-MC>
Subject: zwei doesn't handle killed buffers well
To: BUG-LISPM at OZ
Message-ID: <850330192336.1.ROLY@JOE-LOUIS.MIT>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, microcode TMC5-MIC 319,
FEP 17, on Lisp Machine Joe Louis:
Warm booted from: ZMACS-WINDOWS.

Trying to straighten up my world, I attempted to kill a few buffers
using control-x k, but I lost.

I then succeded using meta-x kill or save buffers, but I think that I
screwed myself here, because when I tried to create a new buffer with
contol-x control-f, I got this error.

As a zero-th order guess at what's going on, I think that zwei is trying
to be clever and reuse its buffer windows, but something got frobbed.

Roland

>>Error: The variable ZWEI:SAVED-MODE-LIST is not an instance variable of #<NODE 20730764>
While in the function SET-IN-INSTANCE  ZWEI:MAKE-BUFFER-CURRENT  (:METHOD ZWEI:ZMACS-EDITOR :SELECT-SPECIAL-BUFFER)

SET-IN-INSTANCE:  (P.C. = 66)
   Arg 0 (INSTANCE): #<NODE 20730764>
   Arg 1 (PTR): ZWEI:SAVED-MODE-LIST
   Local 1 (PTR): #<DTP-LOCATIVE 36412253>
   Arg 2 (VAL): ((#<LISP-MODE 120576060> ((PROGN ** **) NIL NIL (PROGN ** **))))
   Local 3 (N): NIL

ZWEI:MAKE-BUFFER-CURRENT:  (P.C. = 11)
   Arg 0 (BUFFER): #<DIRED-BUFFER "*Dired-1*" 14500537>

(:METHOD ZWEI:ZMACS-EDITOR :SELECT-SPECIAL-BUFFER):  (P.C. = 11)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 121171573>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMACS-EDITOR -- 3. IV's, 0. FL's 142345763>
   Arg 2 (OPERATION): :SELECT-SPECIAL-BUFFER
   Arg 3 (TYPE): :DIRED
   Arg 4 (NEW-P): T
   Rest arg (SETS): (:SET-PATHNAME #<LMFS-PATHNAME "JOE-LOUIS:>Roly>*.*.*">)

ZWEI:DIRECTORY-EDIT:  (P.C. = 22)
   Arg 0 (PATHNAME): #<LMFS-PATHNAME "JOE-LOUIS:>Roly>*.*.*">

ZWEI:COM-DIRED:  (P.C. = 5)

ZWEI:COM-EXTENDED-COMMAND:  (P.C. = 27)

ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
   Arg 0 (COMMAND): ZWEI:COM-EXTENDED-COMMAND
   Arg 1 (CHAR): 600
   Arg 2 (PREFIX-CHAR): NIL
   Arg 3 (HOOK-LIST): NIL

ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
   Arg 0 (CH): 600

(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 233)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 121171573>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:EDITOR -- 12. IV's, 0. FL's 142346020>
   Arg 2 (OPERATION): :EDIT
   --Defaulted args:--
   Arg 3 (TOP-LEVEL-P): T
   Arg 4 (DESCRIPTION): NIL

(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 60)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 121171573>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:TOP-LEVEL-EDITOR -- 13. IV's, 1. FL's 142345776>
   Arg 2 (.OPERATION.): :EDIT
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 51)

SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
   Arg 0 (IGNORE): NIL
30-Mar-85 21:03:47-EST,404;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 30 Mar 85 21:03-EST
Date: 30 March 1985 21:03-EST
From: David Vinayak Wallace <GUMBY @ MIT-MC>
Subject:  doc examiner scrolling commands are incompatible with those of zwei
To: Bug-lispm @ MIT-OZ


In Symbolics 3600 Lisp in Release 6.0, IP-TCP 29.0, AISite 7.0,
microcode TMC5-MIC 319, FEP 18, on Lisp Machine Jimi Hendrix:

which is confusing.

31-Mar-85 14:51:54-EST,2755;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 31 Mar 85 14:51-EST
Received: from SCRC-PEACE by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 206217; Sun 31-Mar-85 14:50:32-EST
Date: Sun, 31 Mar 85 14:50 EST
From: Charles Hornig <Hornig@SCRC-STONY-BROOK>
Subject: small packets help unc-chaos transmission
To: Webster Dove <dove@MIT-BUGS-BUNNY>, BUG-LISPM@OZ
In-Reply-To: <850330153248.3.DOVE@TWEETY-PIE.MIT>
Message-ID: <850331145040.1.HORNIG@PEACE.SCRC.Symbolics.COM>

    Date: Saturday, 30 March 1985, 15:32-EST
    From: Webster Dove <dove at MIT-BUGS-BUNNY>

    In Symbolics 3600 Release 6.0 Beta IIc, microcode TMC5-FPA-MIC 315,
    FEP 17, with UTIL, on Lisp Machine Tweety Pie:

    As was the case with our vaxes, limiting the window size of a tcp
    connection that goes through an unc-gateway improves throughput on the
    lispms dramatically.

    If each tcp packet is 512 bytes, and each chaos is 400, then 5 tcp
    packets will occupy 7 chaos packets.  Suppose all 7 chaos packets are
    queued up, but each time they are sent (as a group) the second is lost
    due to data overrun somewhere.  It will not be possible for the remote
    gateway to reassemble any tcp packets, so retransmission will occur.  If
    the second packet never gets through then communication is impossible
    and the tcp level will eventually time out.  There appears to be no
    mechanism in the chaos definition for "spacing out" the individual
    packets if a retransmit is necessary and many packets are queued.

    If the tcp packets are small enough that each fits in its own chaos
    packet, then if 7 are queued and the second never gets through 6 are
    still sent and acknowledged.  Thus communication is only slightly
    slowed.

    On the 3600's, it seems that this can be accomplished by:

    (setq tcp:*default-window-size* 400. tcp:*max-window-size* 400.)

    While this reduces the ip packet size (and thus bandwidth) on local ip
    connections also, typical local connections are made with chaosnet
    anyway.

    I'd be happy to hear about a more elegant solution.

If I understand what you are trying to do, then I think that changing
TCP:*IP-DEFAULT-MAX-PACKET-SIZE* from 576 to (for example) 488 might be
what you want to do.  This would make each TCP packet sent fit in a
Chaos packet, but would still allow multiple packets to be sent before
blocking for more window.  This is what we do here at Symbolics.

Also, when you get the real release 6 (now available from CJL), you will
have to turn on TCP:*ENABLE-CHAOS-UNC-INTERFACE* if you need to have a
LispM send the UNC packets itself.  (Our other customers were saying
"What's this UNC thing, anyway?".)
31-Mar-85 18:40:27-EST,2235;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 31 Mar 85 18:40-EST
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 206273; Sun 31-Mar-85 17:34:57-EST
Date: Sunday, 31 March 1985, 17:35-EST
From: David A. Moon <Moon at SCRC-STONY-BROOK>
Subject: File copy screwed up
To: Scott Cyphers <sr.ehpyc at MIT-SPEECH>
cc: BUG-LISPM at OZ
In-Reply-To: <850330012133.4.CYPHER@MIT-YOGI.MIT>
Message-ID: <850331173515.6.MOON@EUPHRATES.SCRC.Symbolics.COM>

    Date: Saturday, 30 March 1985, 01:21-EST
    From: Scott Cyphers <sr.ehpyc at MIT-SPEECH>

    In Symbolics 3670 Release 6.0, IP-TCP 29.0, Experimental ZOO 5.0,
    Experimental Display 6.0, Experimental Spire 16.0,
    Experimental Speech-Layouts 7.0, Experimental Spire-Macros 1.0,
    Experimental Compute 1.0, Experimental Attribute 1.0,
    Experimental Audio 1.0, Experimental Speech-Attributes 1.0,
    microcode TMC5-IO4-FPA-MIC 319, on Lisp Machine Yogi:

    The end of this file, which I have renamed to GOLDY:>S>SPIRE>DISPLAY>BAD-OVERLAY.LISP
    got messed up in a copy from >S>SPIRE>OVERLAY.LISP -- The end is like this:

					      (send display :clearable-overlays)
					      (and cursors (send display :cursor-list)))
			   collect `(,(send                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        

This is an extremely obscure bug in LMFS, which took us about 6 months to find.
It wasn't found in time to be fixed in 6.0.  The bug is stimulated by far the
most frequently by file copying (the COPYF function) using NEW-FILE protocol.  I
suggest that you remove the entry SERVICE FILE CHAOS NEW-FILE from GOLDY until
such time as you get the fix (6.1 presumably, unless you get it earlier as a
special favor).  The fix is still being evaluated for correctness here.
31-Mar-85 18:42:00-EST,1621;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 31 Mar 85 18:41-EST
Received: from SCRC-PEACE by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 206225; Sun 31-Mar-85 15:38:32-EST
Date: Sun, 31 Mar 85 15:38 EST
From: Charles Hornig <Hornig@SCRC-STONY-BROOK>
Subject: Format bug
To: Patrick A. O'Donnell <PAO@MIT-EECS>, BUG-LISPM@OZ
In-Reply-To: <850329223938.1.PAO@JANIS.MIT>
Message-ID: <850331153842.2.HORNIG@PEACE.SCRC.Symbolics.COM>

    Date: Friday, 29 March 1985, 22:39-EST
    From: Patrick A. O'Donnell <PAO at MIT-EECS>

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.1,
    microcode TMC5-MIC 319, on Lisp Machine Janis Joplin:

    It certainly appears that there is a ~] in the format string!  However,
    on close examination it is discovered that the format string is
    ART-FAT-STRING.  FORMAT-PARSE-CLAUSES discovers that it isn't
    ART-STRING, assumes that it's a Common Lisp string and fails to find the
    character object #\~ in the string.

    The following is sufficient to demonstrate the problem:

    (format nil "~:[ ~;*~]" t)  ==> "*"
    (format nil
	    (fillarray (make-array 9 :type art-fat-string) "~:[ ~;*~]")
	    t)
		    ==> error...

    >>Error: Missing ~] in format string:
		   
		"~:[ ~;*~]"
         
    While in the function FORMAT:FORMAT-PARSE-CLAUSES  (:PROPERTY FORMAT:[ FORMAT:CTL-MULTI-ARG)  FORMAT:FORMAT-CTL-OP

This problem is, of course, fixed by definition in the next release when
we only have one kind of string.

In the mean time, you will find that there are still a lot of bugs with
fat strings.
31-Mar-85 21:25:29-EST,553;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 31 Mar 85 21:25-EST
Received: from MIT-MORRISON by MIT-MC via Chaosnet; 31 MAR 85  21:23:53 EST
Date: Sunday, 31 March 1985, 21:22-EST
From: jcma@MIT-MC
Subject: Sage
To: BUG-LISPM@OZ
Message-ID: <850331212215.4.JCMA@MORRISON.MIT>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.3,
microcode TMC5-MIC 319, FEP 22, on Lisp Machine James Morrison:

There doesn't appear to be a way of editing the definition of functions,
variables, ... by mousing on items in the display.  Can this be so?
31-Mar-85 23:50:32-EST,7032;000000000000
Received: from MIT-MOON by MIT-OZ via Chaosnet; 31 Mar 85 23:50-EST
Date: Sunday, 31 March 1985, 23:48-EST
From: Chris Lindblad <cjl at OZ>
Subject: Compiler bug
To: BUG-LISPM at OZ
Message-ID: <850331234815.1.CJL@MOON.MIT>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.4,
microcode TMC5-MIC 319, on Lisp Machine Keith Moon:

c-sh-C this function in zwei gives me this

(defun tex-file (path)
  (let ((path (fs:parse-pathname path))
	(job-done nil))
    (condition-case (err)
	(with-open-stream (stream (chaos:open-stream
				    (send path :host)
				    (format nil "TEX ~a" (send path :string-for-host))))
	  (process-run-function "TEX output"
	    #'(lambda (standard-output)
		(ignore-errors
		  (unwind-protect
		      (loop for c = (tyi stream :eof)
			    until (eq c :eof)
			    do (tyo c standard-output))
		    (setq job-done t))))
	    standard-output)
	  (loop until job-done))
      (chaos:chaos-host-not-responding-during-connection
	(send err :report standard-output))
      (chaos:chaos-connection-refused
	(send err :report standard-output)))))

>>Trap: The first argument given to the SYS:INTERNAL-> instruction, NIL, was not a number.
While in the function COMPILER:ACCESS-ENVIRONMENT-VARIABLE  COMPILER:ACCESS-FREE-LEXICAL-VARIABLE  COMPILER:ACCESS-LEXICAL-VARIABLE
Error occurred while compiling (:INTERNAL TEX-FILE 1)

COMPILER:ACCESS-ENVIRONMENT-VARIABLE:  (P.C. = 31)
   Arg 0 (FUN): #<INTERNAL-FUNCTION 15472007>
   Arg 1 (OPCODE): COMPILER:SET-POP
   Arg 2 (E): #<NORMAL-LEXICAL-VARIABLE COMPILER:.LEXICAL-ENVIRONMENT-POINTER. 15473625>
   Arg 3 (VARIABLE): #<NORMAL-LEXICAL-VARIABLE JOB-DONE 15470137>
   Local 4 (E-OFFSET): NIL

COMPILER:ACCESS-FREE-LEXICAL-VARIABLE:  (P.C. = 41)
   Arg 0 (OPCODE): COMPILER:SET-POP
   Arg 1 (VARIABLE): #<NORMAL-LEXICAL-VARIABLE JOB-DONE 15470137>
   Arg 2 (FUNCTION): #<INTERNAL-FUNCTION 15472007>
   Arg 3 (GENERATION): 1

COMPILER:ACCESS-LEXICAL-VARIABLE:  (P.C. = 57)
   Arg 0 (OPCODE): COMPILER:SET-POP
   Arg 1 (VARIABLE): #<NORMAL-LEXICAL-VARIABLE JOB-DONE 15470137>
   Arg 2 (LEVEL): 1
   Arg 3 (FUNCTION): #<INTERNAL-FUNCTION 15472007>

(:PROPERTY SETQ COMPILER:PEEP-HOLE-OPTIMIZER):  (P.C. = 55)
   Arg 0 (INST): #<Inst (Setq JOB-DONE-377)>
   Arg 1 (FUNCTION): #<INTERNAL-FUNCTION 15472007>

COMPILER:ASSEMBLE-INTERVAL:  (P.C. = 46)
   Arg 0 (INTERVAL): #<INTERVAL 15472070>
   Arg 1 (FUNCTION): #<INTERNAL-FUNCTION 15472007>

COMPILER:ASSEMBLE-FUNCTION:  (P.C. = 116)
   Arg 0 (FUNCTION): #<INTERNAL-FUNCTION 15471231>

MAPC:  (P.C. = 37)
   Arg 0 (FCN): #<DTP-COMPILED-FUNCTION COMPILER:ASSEMBLE-FUNCTION 22225714>
   Rest arg (LISTS): ((#<EXTERNAL-FUNCTION 15467673>))

COMPILER:RUN-PHASE-4:  (P.C. = 6)
   Arg 0: T

COMPILER:COMPILE-DEFINITION-1:  (P.C. = 50)
   Arg 0 (TYPE): DEFUN
   Arg 1 (FUNCTION-SPEC): TEX-FILE
   Arg 2 (LAMBDA-LIST): (PATH)
   Arg 3 (DEBUG-INFO): NIL
   Arg 4 (DEFINITION): ((LET ((PATH **) (JOB-DONE NIL)) (CONDITION-CASE (ERR) (SI:DISPLACED ** **) (CHAOS:CHAOS-HOST-NOT-RESPONDING-DURING-CONNECTION **) (CHAOS:CHAOS-CONNECTION-REFUSED **))))
   Arg 5 (FIXUP-P): T

COMPILER:COMPILE-DEFINITION:  (P.C. = 122)
   Arg 0 (EXP): (DEFUN TEX-FILE (PATH) (LET ((PATH **) (JOB-DONE NIL)) (CONDITION-CASE (ERR) (SI:DISPLACED ** **) (CHAOS:CHAOS-HOST-NOT-RESPONDING-DURING-CONNECTION **) (CHAOS:CHAOS-CONNECTION-REFUSED **))))
   Arg 1 (FIXUP-P): T
   Arg 2 (DEBUG-INFO): NIL

(:INTERNAL COMPILER:COMPILE-TO-CORE 0 (:DUMP-DEFINITION)):  (P.C. = 5)
   Arg 0 (**DEFSELECT-OP**): :DUMP-DEFINITION
   Arg 1 (EXP): (DEFUN TEX-FILE (PATH) (LET ((PATH **) (JOB-DONE NIL)) (CONDITION-CASE (ERR) (SI:DISPLACED ** **) (CHAOS:CHAOS-HOST-NOT-RESPONDING-DURING-CONNECTION **) (CHAOS:CHAOS-CONNECTION-REFUSED **))))

COMPILER:COMPILE-TO-CORE:  (P.C. = 12)
   Arg 0 (OPERATION): :DUMP-DEFINITION
   Rest arg (SELECT-METHOD-ARGS): ((DEFUN TEX-FILE (PATH) (LET (** **) (CONDITION-CASE ** ** ** **))))

COMPILER:COMPILE-FORM-FUNCTION:  (P.C. = 41)
   Arg 0 (FORM): (DEFUN TEX-FILE (PATH) (LET ((PATH **) (JOB-DONE NIL)) (CONDITION-CASE (ERR) (SI:DISPLACED ** **) (CHAOS:CHAOS-HOST-NOT-RESPONDING-DURING-CONNECTION **) (CHAOS:CHAOS-CONNECTION-REFUSED **))))
   Arg 1 (COMPILE-TIME-P): NIL
   Arg 2 (LOAD-TIME-P): T

COMPILER:COMPILE-FROM-STREAM-1:  (P.C. = 330)
   Arg 0: (DEFUN TEX-FILE (PATH) (LET ((PATH **) (JOB-DONE NIL)) (CONDITION-CASE (ERR) (SI:DISPLACED ** **) (CHAOS:CHAOS-HOST-NOT-RESPONDING-DURING-CONNECTION **) (CHAOS:CHAOS-CONNECTION-REFUSED **))))
   --Defaulted args:--
   Arg 1 (COMPILE-TIME-TOO): NIL

COMPILER:PROCESS-FORMS-FROM-STREAM:  (P.C. = 117)
   Arg 0 (INPUT-STREAM): #<INTERVAL-STREAM 15467324>
   Arg 1 (PROCESS-FUNCTION): COMPILER:COMPILE-FROM-STREAM-1
   Arg 2 (FOR-FILE): NIL
   Arg 3 (AREA-FOR-READING): 4

COMPILER:COMPILE-FROM-STREAM:  (P.C. = 237)
   Arg 0 (INPUT-STREAM): #<INTERVAL-STREAM 15467324>
   Arg 1 (GENERIC-PATHNAME): #<LMFS-PATHNAME "B:>cjl>tex">
   Arg 2: #<DTP-COMPILED-FUNCTION COMPILER:COMPILE-TO-CORE 22236230>
   Arg 3 (ADDITIONAL-BINDINGS): (:SYNTAX :ZETALISP :BASE 10 :PACKAGE #<Package USER 5440000>)

ZWEI:COMPILE-INTERVAL:  (P.C. = 142)
   Arg 0 (COMPILE-P): T
   Arg 1: NIL
   Arg 2: T
   Arg 3 (BP1): ("(defun tex-file (path)" 0)
   Arg 4 (BP2): ("" 0)
   Arg 5 (IN-ORDER-P): T
   Arg 6 (SPECIAL-COMPILER-FUNCTION): NIL
   Arg 7: NIL

ZWEI:COMPILE-PRINT-INTERVAL:  (P.C. = 121)
   Arg 0 (BP1): ("(defun tex-file (path)" 0)
   Arg 1 (BP2): ("" 0)
   Arg 2 (IN-ORDER-P): T
   Arg 3 (COMPILE-P): T
   Arg 4 (DEFINITION-NAME): "Function TEX-FILE"
   Arg 5 (MODE-NAME): "Compiling"
   Arg 6 (ECHO-NAME): "compiled."
   Arg 7 (USE-TYPEOUT): NIL
   Arg 8 (DEFVAR-HACK): T
   Arg 9 (SPECIAL-COMPILER-FUNCTION): NIL

ZWEI:COMPILE-DEFINITION-INTERNAL:  (P.C. = 100)
   Arg 0 (COMPILE-P): T
   Arg 1 (MODE-NAME): "Compiling"
   Arg 2 (ECHO-NAME): "compiled."
   --Defaulted args:--
   Arg 3 (USE-TYPEOUT): NIL
   Arg 4 (DEFVAR-HACK): T
   Arg 5 (SPECIAL-COMPILER-FUNCTION): NIL

ZWEI:COM-COMPILE-REGION:  (P.C. = 5)

ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
   Arg 0 (COMMAND): ZWEI:COM-COMPILE-REGION
   Arg 1 (CHAR): 355
   Arg 2 (PREFIX-CHAR): NIL
   Arg 3 (HOOK-LIST): NIL

ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
   Arg 0 (CH): 355

(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 233)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 121171573>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:EDITOR -- 12. IV's, 0. FL's 142346020>
   Arg 2 (OPERATION): :EDIT
   --Defaulted args:--
   Arg 3 (TOP-LEVEL-P): T
   Arg 4 (DESCRIPTION): NIL

(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 60)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 121171573>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:TOP-LEVEL-EDITOR -- 13. IV's, 1. FL's 142345776>
   Arg 2 (.OPERATION.): :EDIT
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 51)

SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
   Arg 0 (IGNORE): NIL
 1-Apr-85 09:30:34-EST,577;000000000000
Received: from MIT-BUGS-BUNNY by MIT-OZ via Chaosnet; 1 Apr 85 09:30-EST
Received: by MIT-BUGS-BUNNY.ARPA (4.12/4.8)
	id AA12851; Mon, 1 Apr 85 09:29:39 est
Date: Mon, 1 Apr 85 09:29:39 est
From: Web Dove <dove@bugs-bunny>
To: Hornig@SCRC-STONY-BROOK.ARPA
Subject: Re:  small packets help unc-chaos transmission
Cc: bug-lispm@oz

It looked to me like *ip-max-packet-size* limited datagrams (from the
documentation).  Aren't the tcp windows separate?  If the tcp packets
are broken into smaller packets at a lower level, is each still an
acknowledgable tcp packet?
 1-Apr-85 09:52:37-EST,1999;000000000000
Received: from MIT-ROBOT-2 by MIT-OZ via Chaosnet; 1 Apr 85 09:52-EST
Date: Monday, 1 April 1985, 09:50-EST
From: Patrick A. O'Donnell <PAO at MIT-EECS>
To: BUG-LISPM at OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10, NS 19.74, FEP 18, on Lisp Machine Robot-2:

Every other time I try to access PREP I get the several usual (in the
sense of when the namespace is broken) notifications about it having to
be changed from UNIX-HOST to HOST, and that it can't be found, etc.  On
alternate accesses, it seems to be fine.  I think that Goldy was being
queried on those times it broke, but I can't be certain.

>>Error: PREP is not connected to the local chaosnet.
While in the function CHAOS:ADDRESS-PARSE  CHAOS:OPEN-CONNECTION  CHAOS:CONNECT

CHAOS:ADDRESS-PARSE:  (P.C. = 45)
   Arg 0 (HOST-SPEC): #<HOST PREP 3301560>
   Local 1 (ADDRESS): NIL
   Local 2 (HOST): #<HOST PREP 3301560>

CHAOS:OPEN-CONNECTION:  (P.C. = 5)
   Arg 0 (HOST): #<HOST PREP 3301560>
   Arg 1 (CONTACT-NAME): "SPICE - - //usr//tmp//ROBOT-2-1"
   Arg 2 (WINDOW-SIZE): 13.

CHAOS:CONNECT:  (P.C. = 233)
   Arg 0 (HOST): #<HOST PREP 3301560>
   Arg 1 (CONTACT-NAME): "SPICE - - //usr//tmp//ROBOT-2-1"
   Arg 2 (WINDOW-SIZE): 13.
   Arg 3 (TIMEOUT): 600.

CHAOS:OPEN-STREAM:  (P.C. = 65)
   Arg 0 (HOST): #<HOST PREP 3301560>
   Arg 1 (CONTACT-NAME): "SPICE - - //usr//tmp//ROBOT-2-1"
   Rest arg: NIL

NS:RUN-SPICE-REMOTELY:  (P.C. = 147)  (from OZ:OZ:<KOCH.NS>NEW-SPICE)
   Arg 0 (SPICE-RUN): #<SPICE-RUN 33476702>
   Arg 1 (SPICE-INPUT-BUFFER-NAME): "Spice Deck B-TEST 4//01//85 09:40 1"
   Arg 2 (SPICE-OUTPUT-BUFFER-NAME): "Spice Output B-TEST 4//01//85 09:40 1"

SI:PROCESS-RUN-FUNCTION-INTERNAL:  (P.C. = 51)
   Arg 0 (RESTART-ON-RESET): NIL
   Arg 1 (FUNCTION): NS:RUN-SPICE-REMOTELY
   Rest arg (ARGS): (#<SPICE-RUN 33476702> "Spice Deck B-TEST 4//01//85 09:40 1" "Spice Output B-TEST 4//01//85 09:40 1")

SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
   Arg 0 (IGNORE): NIL
 1-Apr-85 11:28:47-EST,3858;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 1 Apr 85 11:28-EST
Received: from MIT-REAGAN by MIT-MC via Chaosnet; 1 APR 85  11:28:30 EST
Date: Monday, 1 April 1985, 11:29-EST
From: zvona at OZ
Sender: bug-lispm at OZ
Subject: namespace sucks
To: BUG-LISPM at OZ
Message-ID: <850401112933.1.FILE-SERVER@REAGAN.MIT>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.2,
microcode TMC5-MIC 319, on Lisp Machine Ronald Reagan:

Terminal 1 F here shouldn't have to talk to SCH|G, SWW|WHITE, etc. ad
nauseam.

>>Break: 
While in the function PROCESS-WAIT  CHAOS:WAIT  CHAOS:WAIT-FOR-CONNECT

PROCESS-WAIT:
   Arg 0 (WHOSTATE): "Chaos Connect SCH|G"
   Local 0 (WHOSTATE): #<BREAK 45222412>
   Arg 1 (FUNCTION): #<DTP-COMPILED-FUNCTION (:INTERNAL CHAOS:WAIT 0.) 11556262>
   Local 1 (FUNCTION): #<DTP-LOCATIVE 27301143>
   Rest arg (ARGUMENTS): (#<CHAOS Connection for NAMESPACE-TIMESTAMP SCH to SCH|G 120465453> CHAOS:RFC-SENT-STATE 22582122. 600.)
   Local 2 (ARGUMENTS): #<DTP-LOCATIVE 27301142>

CHAOS:WAIT:  (P.C. = 34)
   Arg 0 (CONN): #<CHAOS Connection for NAMESPACE-TIMESTAMP SCH to SCH|G 120465453>
   Arg 1 (STATE): CHAOS:RFC-SENT-STATE
   Arg 2 (TIMEOUT): 600.
   Arg 3 (WHOSTATE): "Chaos Connect SCH|G"

CHAOS:WAIT-FOR-CONNECT:  (P.C. = 10)
   Arg 0 (CONN): #<CHAOS Connection for NAMESPACE-TIMESTAMP SCH to SCH|G 120465453>
   Arg 1 (EXPECTED-STATE): CHAOS:ANSWERED-STATE
   Arg 2 (TIMEOUT): 600.

CHAOS:OPEN-SIMPLE-STREAM:  (P.C. = 270)
   Arg 0 (HOST): #<LISPM-HOST SCH|GODZILLA 1343330>
   Arg 1 (CONTACT-NAME): "NAMESPACE-TIMESTAMP SCH"
   Rest arg: NIL

CHAOS:|MEDIUM-CHAOS-SIMPLE-((NETWORK CHAOS))-G4466|:  (P.C. = 23)
   Arg 0 (SERVICE-ACCESS-PATH): #<SERVICE-ACCESS-PATH NAMESPACE-TIMESTAMP (NAMESPACE-TIMESTAMP) -- SCH|GODZILLA on CHAOS 25131610>
   Rest arg (CONNECTION-ARGS): NIL

NETI:GET-CONNECTION-FOR-SERVICE-TO-HOST:  (P.C. = 12)
   Arg 0 (SERVICE-ACCESS-PATH): #<SERVICE-ACCESS-PATH NAMESPACE-TIMESTAMP (NAMESPACE-TIMESTAMP) -- SCH|GODZILLA on CHAOS 25131610>
   Arg 1 (NETWORK): #<CHAOS-NETWORK CHAOS 1340053>
   Arg 2 (IMPLEMENTATION): #<MEDIUM-IMPLEMENTATION 120777153>
   Arg 3 (CONNECTION-ARGS): NIL

NETI:GET-CONNECTION-FOR-SERVICE-ON-MEDIUM:  (P.C. = 262)
   Arg 0 (MEDIUM): #<MEDIUM-DESCRIPTION on CHAOS 25137660>
   Arg 1 (SERVICE-ACCESS-PATH): #<SERVICE-ACCESS-PATH NAMESPACE-TIMESTAMP (NAMESPACE-TIMESTAMP) -- SCH|GODZILLA on CHAOS 25131610>
   Arg 2 (CONNECTION-ARGS): NIL

NET:GET-CONNECTION-FOR-SERVICE:  (P.C. = 7)
   Arg 0 (SERVICE-ACCESS-PATH): #<SERVICE-ACCESS-PATH NAMESPACE-TIMESTAMP (NAMESPACE-TIMESTAMP) -- SCH|GODZILLA on CHAOS 25131610>
   Rest arg (CONNECTION-ARGS): NIL

Rest of stack:
NETI:INVOKE-SERVICE-NAMESPACE-TIMESTAMP-WITH-NAMESPACE-TIMESTAMP:  (P.C. = 4)
NET:INVOKE-SERVICE-ACCESS-PATH:  (P.C. = 75)
NETI:GET-LATEST-TIMESTAMP-FROM-NETWORK:  (P.C. = 71)
NETI:GET-FULL-INCREMENTAL-UPDATE-FROM-NETWORK:  (P.C. = 56)
(:METHOD NETI:NAMESPACE :GET-LATEST-TIMESTAMP):  (P.C. = 65)
(:METHOD NET:OBJECT :CHECK-VALIDITY):  (P.C. = 122)
(:METHOD NET:OBJECT :CHECK-VALIDITY):  (P.C. = 40)
(:METHOD NET:OBJECT :BEFORE :GET):  (P.C. = 5)
(:METHOD NET:OBJECT :COMBINED :GET):  (P.C. = 10)
(:METHOD NET:NETWORK :NETWORK-TYPEP):  (P.C. = 6)
NETI:HOST-MEDIUM-MAXIMUM-DESIRABILITY:  (P.C. = 105)
NETI:HOST-SERVICE-MAXIMUM-DESIRABILITY:  (P.C. = 14)
NETI:FIND-USEFUL-SERVICE-ENTRIES:  (P.C. = 114)
NET:FIND-PATHS-TO-SERVICE-ON-HOST:  (P.C. = 33)
NET:FIND-PATH-TO-SERVICE-ON-HOST:  (P.C. = 10)
NETI:*SCAN-LISPMS:  (P.C. = 35)
NETI:FINGER-LISPMS:  (P.C. = 54)
TV:KBD-FINGER-INTERNAL:  (P.C. = 21)
(:INTERNAL TV:KBD-FINGER 0.):  (P.C. = 7)
TV:POP-UP-WINDOW-INTERNAL:  (P.C. = 42)
TV:KBD-FINGER:  (P.C. = 143)
(:INTERNAL TV:KBD-ESC 1.):  (P.C. = 4)
SI:PROCESS-RUN-FUNCTION-INTERNAL:  (P.C. = 52)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
 1-Apr-85 18:25:57-EST,4258;000000000000
Received: by MIT-OZ via Chaosnet; 1 Apr 85 18:25-EST
Date: Monday, 1 April 1985, 18:23-EST
From: Chris Lindblad <cjl at OZ>
Subject: VMS pathname blowout
To: BUG-LISPM at OZ
Message-ID: <850401182355.1.CJL@ROBOT-5.MIT>

In Symbolics 3670 Release 6.0, IP-TCP 29.0, AISite 7.5,
microcode TMC5-IO4-FPA-MIC 319, on Lisp Machine Robot-5:

Show Directory pig:[cjl] blew out with this.
Default was fep0:>*.*.*

>>Trap: The first argument given to the AR-1 instruction, :ROOT, was not an array.
While in the function FS:NUMERIC-P  FS:VMS-ROOT-P  (:METHOD FS:VMS-PATHNAME-MIXIN :FIXUP-DIRECTORY-SPEC)

FS:NUMERIC-P:  (P.C. = 21)
   Arg 0 (STRING): :ROOT
   Arg 1 (PARTIAL-OK): T
   Arg 2 (SIGN-OK): NIL
   Arg 3 (LEADING-ZERO-OK): T
   Local 4 (I): 0
   Local 5 (LEN): 4
   Local 6 (NUM): NIL
   Local 7 (SIGN): 1
   Local 8 (CH): NIL

FS:VMS-ROOT-P:  (P.C. = 33)
   Arg 0 (DIR): :ROOT

(:METHOD FS:VMS-PATHNAME-MIXIN :FIXUP-DIRECTORY-SPEC):  (P.C. = 3)
   Arg 0 (SELF): #<VMS-PATHNAME "PIG:DEV:[FOO]FOO.LSP">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:VMS-PATHNAME-MIXIN -- 1. IV's, 0. FL's 105216331>
   Arg 2 (OPERATION): :FIXUP-DIRECTORY-SPEC
   Arg 3 (DIR): :ROOT

(:METHOD FS:TENEX-FAMILY-PATHNAME-MIXIN :PARSE-DIRECTORY-SPEC):  (P.C. = 55)
   Arg 0 (SELF): #<VMS-PATHNAME "PIG:DEV:[FOO]FOO.LSP">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:TENEX-FAMILY-PATHNAME-MIXIN -- 6. IV's, 1. FL's 105216343>
   Arg 2 (OPERATION): :PARSE-DIRECTORY-SPEC
   Arg 3 (SPEC): :ROOT

FS:MAKE-PATHNAME-1:  (P.C. = 502)
   Arg 0 (ACTOR): #<VMS-PATHNAME "PIG:DEV:[FOO]FOO.LSP">
   Rest arg (OPTIONS): (:DEFAULT-HOST #<VMS-HOST PYGMALION 1140315> :DEFAULT-DEVICE "DEV" :DEFAULT-DIRECTORY ("FOO") :DEFAULT-NAME "FOO" :DEFAULT-TYPE "LSP" ...)

(:METHOD FS:PATHNAME :NEW-PATHNAME):  (P.C. = 22)
   Arg 0 (SELF): #<VMS-PATHNAME "PIG:DEV:[FOO]FOO.LSP">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:PATHNAME -- 8. IV's, 1. FL's 105216320>
   Arg 2 (OPERATION): :NEW-PATHNAME
   Rest arg (OPTIONS): (:RAW-DEVICE "SYS$DISK" :RAW-DIRECTORY :ROOT :RAW-NAME :WILD :RAW-TYPE :WILD :VERSION :WILD ...)

(:METHOD FS:PATHNAME :COMBINED :NEW-PATHNAME):  (P.C. = 67)
   Arg 0 (SELF): #<VMS-PATHNAME "PIG:DEV:[FOO]FOO.LSP">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:PATHNAME -- 8. IV's, 1. FL's 105216320>
   Arg 2 (.OPERATION.): :NEW-PATHNAME
   Rest arg (.DAEMON-CALLER-ARGS.): (:RAW-DEVICE "SYS$DISK" :RAW-DIRECTORY :ROOT :RAW-NAME :WILD :RAW-TYPE :WILD :VERSION :WILD ...)

(:METHOD FS:PATHNAME :NEW-DEFAULT-PATHNAME):  (P.C. = 316)
   Arg 0 (SELF): #<VMS-PATHNAME "PIG:DEV:[FOO]FOO.LSP">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:PATHNAME -- 8. IV's, 1. FL's 105216320>
   Arg 2 (OPERATION): :NEW-DEFAULT-PATHNAME
   Rest arg (OPTIONS): (:DEVICE :UNSPECIFIC :DIRECTORY :ROOT :NAME :WILD :TYPE :WILD :ORIGINAL-TYPE :WILD ...)
   Local 3 (OPTIONS): NIL

Rest of stack:
(:INTERNAL (:METHOD FS:PATHNAME :COMBINED :NEW-DEFAULT-PATHNAME) 0):  (P.C. = 10)
(:METHOD FS:PATHNAME :WHOPPER :NEW-DEFAULT-PATHNAME):  (P.C. = 64)
(:METHOD FS:PATHNAME :COMBINED :NEW-DEFAULT-PATHNAME):  (P.C. = 12)
(:METHOD FS:PATHNAME :WHOPPER :NEW-DEFAULT-PATHNAME):  (P.C. = 52)
(:METHOD FS:PATHNAME :COMBINED :NEW-DEFAULT-PATHNAME):  (P.C. = 12)
FS:MERGE-PATHNAMES:  (P.C. = 101)
(:PROPERTY :PATHNAME :CP-PARSER):  (P.C. = 153)  (from AISITE: PATCH; AISITE-7-2)
(:PROPERTY :PATHNAME :CP-PARSER):  (from AISITE: PATCH; AISITE-7-2)
SI:READ-POS-ARG-1:  (P.C. = 66)
SI:READ-POS-ARG:  (P.C. = 377)
SI:READ-COMMAND-INTERNAL:  (P.C. = 200)
SI:READ-COMMAND-DISPATCH:  (P.C. = 7)
(:INTERNAL READ-COMMAND-OR-FORM 0):  (P.C. = 56)
(:INTERNAL SI:CP-INPUT-EDITING 0):  (P.C. = 75)
(:DEFUN-METHOD SI:INPUT-EDITOR-READ):  (P.C. = 53)
(:METHOD SI:INTERACTIVE-STREAM :INPUT-EDITOR):  (P.C. = 131)
SI:WITH-INPUT-EDITING-INTERNAL:  (P.C. = 113)
SI:CP-INPUT-EDITING:  (P.C. = 76)
READ-COMMAND-OR-FORM:  (P.C. = 146)
SI:CP-COMMAND-LOOP-READ-FUNCTION:  (P.C. = 13)
(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0):  (P.C. = 105)
TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
SI:LISP-COMMAND-LOOP:  (P.C. = 67)
SI:LISP-TOP-LEVEL1:  (P.C. = 5)
SI:LISP-TOP-LEVEL:  (P.C. = 7)
 1-Apr-85 19:47:13-EST,3143;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 1 Apr 85 19:47-EST
Received: from SCRC-TURKEY by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 206487; Mon 1-Apr-85 12:32:21-EST
Date: Mon, 1 Apr 85 12:32 EST
From: Michael Greenwald <Greenwald@SCRC-STONY-BROOK>
Subject: Re:  small packets help unc-chaos transmission
To: dove@MIT-BUGS-BUNNY, Hornig@SCRC-STONY-BROOK
cc: bug-lispm@OZ
In-Reply-To: The message of 1 Apr 85 09:29-EST from Web Dove <dove@bugs-bunny>
Message-ID: <850401123209.9.GREENWALD@TURKEY.SCRC.Symbolics.COM>

    Date: Mon, 1 Apr 85 09:29:39 est
    From: Web Dove <dove@bugs-bunny>

    It looked to me like *ip-max-packet-size* limited datagrams (from the
    documentation).  Aren't the tcp windows separate?  If the tcp packets
    are broken into smaller packets at a lower level, is each still an
    acknowledgable tcp packet?
Yes.

Here's approximately how TCP works: (long message)

TCP is a reliable stream protocol built on top of IP datagrams.  Windows
are used for flow control, not acknowledgement.  A window just tells the
sender how many bytes it can send before waiting for more window.

Every TCP packet (An IP packet with a TCP header and data inside)
contains the sequence number of the first byte in the packet.  This lets
TCP re-order the packets it receiues and put them in the appropriate
place in the stream.

TCP acknowledges the last *BYTE* of data it received, this implicitly
acknowledges all data that came before it.

If an IP packet is too large for a gateway, it gets fragmented.  This is
the problem with the CHAOS-IP gateway.  If TCP builds too large an IP
packet and that packet gets fragmented, then if one of the fragments
gets lost IP can't reassemble the packet.  There is no way for it to use
partial information.  So all of the data gets lost, and TCP must
retransmit that packet.  If there is a pathological case where the same
fragment gets lost each time, performance will be abysmal.

TCP has an option, called MAX SEGMENT SIZE, which tries to negotiate the
*right* IP packet size for a connection based on intermediate gateways
and networks.  *ip-max-packet-size* only sets the MAX SEGMENT SIZE for
connections that go through gateways, local connections use the local
nets maximum (around 1500 bytes here).

If you set the window to 488, then the TCP becomes a lock-step protocol,
with an upper limit on throughput limited to 448 (488 - headers) divided
by round-trip delay.  If delay is a tenth of a second (I have no idea
about the delay through the microwave link) then you only get about
35kbps. This might be better than the throughput with lost packets, but
it is pretty slow, and seems to me like the wrong thing to do.
*ip-max-packet-size* (TCP MAX SEGMENT SIZE option) was designed for
precisely this case.  It's probably what you want.

Your confusion might stem from the fact that there is a datagram
protocol built on top of IP. (No one uses raw IP packets.) This is UDP,
or User Datagram Protocol.  As far as I know, (I haven't checked this
out just now) *ip-max-packet-size* doesn't affect UDP.
 1-Apr-85 19:47:43-EST,6220;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 1 Apr 85 19:47-EST
Received: from SCRC-TURKEY by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 206677; Mon 1-Apr-85 16:19:46-EST
Date: Mon, 1 Apr 85 16:19 EST
From: Michael Greenwald <Greenwald@SCRC-STONY-BROOK>
Subject: Re:  small packets help unc-chaos transmission
To: dove@MIT-BUGS-BUNNY, Hornig@SCRC-STONY-BROOK
cc: bug-lispm@OZ
In-Reply-To: The message of 1 Apr 85 09:29-EST from Web Dove <dove@bugs-bunny>
Supersedes: <850401123209.9.GREENWALD@TURKEY.SCRC.Symbolics.COM>
Message-ID: <850401161935.0.GREENWALD@TURKEY.SCRC.Symbolics.COM>

    Date: Mon, 1 Apr 85 09:29:39 est
    From: Web Dove <dove@bugs-bunny>

    It looked to me like *ip-max-packet-size* limited datagrams (from the
    documentation).  Aren't the tcp windows separate?  If the tcp packets
    are broken into smaller packets at a lower level, is each still an
    acknowledgable tcp packet?
Yes. Yes.

Here's approximately how TCP works: (long message, This is probably more
information than you ever really wanted, but....) 

TCP is a reliable stream protocol built on top of IP datagrams.  

IP is a transport protocol that provides datagram delivery in an
internet.  All it does is provide addressing and routing through the
internet.  If an IP packet goes through a gateway to a net that has a
max packet size smaller than the size of this packet, it is the
responsibility of the IP gateway to split the IP packet up into
fragments.  An IP receiver must be able to reassemble the IP packet from
the fragments. 

TCP is layered on top of IP.  It is a *seperate* protocol, though.  You
can really send TCP on top of any datagram service, if you wanted to.

The TCP receiver transmits a window to the sender (actually, a window
and acknowledgement field are included in every TCP packet.)  The
windows are used for flow control, not acknowledgement.  A window just
tells the sender how many bytes it can send before it is blocked for
flow control reasons.  The receiver will have to open up the window
again before the sender can continue transmitting data.

Every TCP packet (An IP packet with a TCP header and data inside)
contains the sequence number of the first byte in the packet.  The
sequence number is the index of the byte in the stream since the
connection was established.  This lets TCP re-order the packets it
receiues and put them in the appropriate place in the stream.  Packets
can contain overlapping data.  TCP is a reliable *BYTE* stream, not a
reliable packet stream.  The stream is built up out of the underlying
packets, but packet boundaries are lost.

TCP acknowledges the last byte of data it received; this implicitly
acknowledges all data that came before it.

If an IP packet is too large for a gateway, it gets fragmented.  This is
the problem with the CHAOS-IP gateway.  If TCP builds too large an IP
packet and that packet gets fragmented, then if one of the fragments
gets lost IP can't reassemble the packet.  There is no way for it to use
the partial information.  At best, it can save the fragments, and if the
sender retransmits the identical packet, then all the receiver needs is
to get the single missing fragment.  So TCP must retransmit the entire
packet, but as long as the missing fragment arrives, the packet gets
through.

Frequently, however, the sender compacts several packets together when
it retransmits, so while it covers the same area in the byte stream as
the last packet, the IP packet is not identical, and so cannot be
reassembled using the leftover fragments from the last packet.  Or, if
there is a pathological case where the same fragment gets lost each
time, performance will be abysmal, because it will take quite a while
before the packet gets completed.  (Or the implementation might not have
an option to retransmit an IP packet, in which case even if it *is* the
identical packet, the IP packet number gets changed, so the IP receiver
doesn't try to compbine the fragments from the two packets.)  IP
fragmentation should be avoided.  It is useful where packet boundaries
make a difference, or where there are fixed format packets, or where the
sender didn't know about the packet size limitations of an intermediate
network.  

TCP has an option, called MAX SEGMENT SIZE, which tries to negotiate the
*right* IP packet size for a connection based on intermediate gateways
and networks.  On the lispm, *ip-max-packet-size* only sets the MAX
SEGMENT SIZE for connections that go through gateways; local connections
use the local nets maximum (around 1500 bytes here).  This tries to make
sure that packets don't get fragmented by gateways, so a lost packet
isn't a major tragedy.   TCP can deal with resequencing, so all of the
packets that *did* get through, are useful.  The only thing that needs
to be retransmitted is the missing packet itself.  The sender and
receiver both continue to send data, and after an appropriate timeout
the sender will realize that a portion of the stream hasn't gotten
through, and it will retransmit that single packet.

If you set the window size to 488, however, then TCP becomes a lock-step
protocol, sending a single packet at a time, with an upper limit on
throughput limited to 448 bytes (488 - headers) divided by round-trip
delay.  If delay is a tenth of a second (I have no idea about the real
delay through the microwave link, but let's just pick this number) then
you only get about 35kbps.  This is the theoretical limit, and in
reality performance is probably much worse.  This might be better than
the throughput with large windows and lost packets, but it is pretty
slow, and seems to me like the wrong thing to do.  *ip-max-packet-size*
(TCP MAX SEGMENT SIZE option) was designed for precisely this case.
It's probably what you want.

Your confusion might stem from the fact that there is a datagram
protocol built on top of IP. (No one uses raw IP packets.) This is UDP,
or User Datagram Protocol.  As far as I know, (I haven't checked this
out just now) *ip-max-packet-size* doesn't affect UDP.

I hope this long-winded explanation was useful to somebody.
 1-Apr-85 19:48:37-EST,1355;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 1 Apr 85 19:48-EST
Received: from SCRC-PEACE by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 206731; Mon 1-Apr-85 18:08:13-EST
Date: Mon, 1 Apr 85 18:08 EST
From: Charles Hornig <Hornig@SCRC-STONY-BROOK>
Subject: rel 5 namespace
To: Patrick A. O'Donnell <PAO@MIT-EECS>, BUG-LISPM@OZ
In-Reply-To: The message of 1 Apr 85 09:50-EST from Patrick A. O'Donnell <PAO@MIT-EECS>
Message-ID: <850401180842.2.HORNIG@PEACE.SCRC.Symbolics.COM>

    Date: Monday, 1 April 1985, 09:50-EST
    From: Patrick A. O'Donnell <PAO at MIT-EECS>

    In Symbolics 3600 System 242.356, Hardcopy 20.10, NS 19.74, FEP 18, on Lisp Machine Robot-2:

    Every other time I try to access PREP I get the several usual (in the
    sense of when the namespace is broken) notifications about it having to
    be changed from UNIX-HOST to HOST, and that it can't be found, etc.  On
    alternate accesses, it seems to be fine.  I think that Goldy was being
    queried on those times it broke, but I can't be certain.

    >>Error: PREP is not connected to the local chaosnet.
    While in the function CHAOS:ADDRESS-PARSE  CHAOS:OPEN-CONNECTION  CHAOS:CONNECT

I suggest switching to release 6 (now available at MIT).  This should at
least quiet down the namespace errors and let the real bugs through.
 1-Apr-85 20:42:44-EST,5915;000000000000
Received: from MIT-MORRISON by MIT-OZ via Chaosnet; 1 Apr 85 20:42-EST
Date: Monday, 1 April 1985, 20:41-EST
From: John C. Mallery <jcma at MIT-MC>
Subject: FS:FILE-HOST-USER-ID:
To: BUG-LISPM at OZ
Message-ID: <850401204154.1.JCMA@MORRISON.MIT>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.5,
microcode TMC5-MIC 319, FEP 22, on Lisp Machine James Morrison:

If this is going to go off and try to connect (which I think is a bad idea),
it should at least degrade gracefully.

>>Error: MC (at Chaos address 1440) did not respond to a FILE 1 request.
While in the function CHAOS:CHECK-CONNECTION-STATE  CHAOS:WAIT-FOR-CONNECT  CHAOS:CONNECT

ERROR:  (P.C. = 55)
   Arg 0 (FLAVOR): CHAOS:CHAOS-HOST-NOT-RESPONDING-DURING-CONNECTION
   Rest arg (INIT-OPTIONS): (:CONNECTION #<CHAOS Connection for FILE 1 to MC 120465453> :CONTACT-NAME "FILE 1")
   Local 2 (CONDITION): #<CHAOS-HOST-NOT-RESPONDING-DURING-CONNECTION 30232271>

CHAOS:CHECK-CONNECTION-STATE:  (P.C. = 117)
   Arg 0 (CONN): #<CHAOS Connection for FILE 1 to MC 120465453>
   Arg 1 (EXPECTED-STATE): CHAOS:OPEN-STATE

CHAOS:WAIT-FOR-CONNECT:  (P.C. = 13)
   Arg 0 (CONN): #<CHAOS Connection for FILE 1 to MC 120465453>
   Arg 1 (EXPECTED-STATE): CHAOS:OPEN-STATE
   Arg 2 (TIMEOUT): 600

CHAOS:CONNECT:  (P.C. = 253)
   Arg 0 (HOST): #<ITS-HOST MC 1140425>
   Arg 1 (CONTACT-NAME): "FILE 1"
   Arg 2 (WINDOW-SIZE): 5
   --Defaulted args:--
   Arg 3 (TIMEOUT): 600

(:METHOD FS:HOST-UNIT :VALIDATE-CONTROL-CONNECTION):  (P.C. = 71)
   Arg 0 (SELF): #<HOST-UNIT 30232152>
   Arg 1 (SELF-MAPPING-TABLE): FS:HOST-UNIT
   Arg 2 (OPERATION): :VALIDATE-CONTROL-CONNECTION
   --Defaulted args:--
   Arg 3 (NO-ERROR-P): NIL

(:METHOD FS:QFILE-ACCESS-PATH :NEW-HOST-UNIT):  (P.C. = 25)
   Arg 0 (SELF): #<ITS-QFILE-ACCESS-PATH MC using QFILE 30232134>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:QFILE-ACCESS-PATH -- 4. IV's, 0. FL's 121666066>
   Arg 2 (OPERATION): :NEW-HOST-UNIT

(:METHOD FS:QFILE-ACCESS-PATH :GET-HOST-UNIT):  (P.C. = 6)
   Arg 0 (SELF): #<ITS-QFILE-ACCESS-PATH MC using QFILE 30232134>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:QFILE-ACCESS-PATH -- 4. IV's, 0. FL's 121666066>
   Arg 2 (OPERATION): :GET-HOST-UNIT

(:METHOD FS:QFILE-ACCESS-PATH :AFTER :INIT):  (P.C. = 4)
   Arg 0 (SELF): #<ITS-QFILE-ACCESS-PATH MC using QFILE 30232134>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:QFILE-ACCESS-PATH -- 4. IV's, 0. FL's 121666066>
   Arg 2 (OPERATION): :INIT
   Arg 3 (IGNORE): #<DTP-LOCATIVE 500442>

(:METHOD FS:ITS-QFILE-ACCESS-PATH :COMBINED :INIT):  (P.C. = 20)
   Arg 0 (SELF): #<ITS-QFILE-ACCESS-PATH MC using QFILE 30232134>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:ITS-QFILE-ACCESS-PATH -- 1. IV's, 3. FL's 104473272>
   Arg 2 (.OPERATION.): :INIT
   Rest arg (.DAEMON-CALLER-ARGS.): (#<DTP-LOCATIVE 500442>)

INSTANTIATE-FLAVOR:  (P.C. = 445)
   Arg 0 (FLAVOR-NAME): FS:ITS-QFILE-ACCESS-PATH
   Arg 1 (INIT-PLIST): #<DTP-LOCATIVE 500442>
   Arg 2 (SEND-INIT-MESSAGE-P): :MAYBE
   --Defaulted args:--
   Arg 3 (RETURN-UNHANDLED-KEYWORDS-P): NIL
   Arg 4 (AREA-TO-CONS-INSTANCE-IN): NIL

MAKE-INSTANCE:  (P.C. = 6)
   Arg 0 (FLAVOR-NAME): FS:ITS-QFILE-ACCESS-PATH
   Rest arg (INIT-OPTIONS): (:HOST #<ITS-HOST MC 1140425> :SERVICE-ACCESS-PATH #<SERVICE-ACCESS-PATH FILE (QFILE) -- MC on CHAOS 30232041>)

FS:INVOKE-FILE-SERVICE:  (P.C. = 51)
   Arg 0 (SERVICE-ACCESS-PATH): #<SERVICE-ACCESS-PATH FILE (QFILE) -- MC on CHAOS 30232041>
   Rest arg (IGNORE): NIL

FS:INVOKE-SERVICE-FILE-WITH-QFILE:  (P.C. = 3)
   Arg 0 (.SERVICE.): #<SERVICE-ACCESS-PATH FILE (QFILE) -- MC on CHAOS 30232041>

NET:INVOKE-SERVICE-ACCESS-PATH:  (P.C. = 75)
   Arg 0 (SERVICE-ACCESS-PATH): #<SERVICE-ACCESS-PATH FILE (QFILE) -- MC on CHAOS 30232041>
   Arg 1 (SERVICE-ARGS): (NIL NIL)

NET:INVOKE-SERVICE-ON-HOST:  (P.C. = 226)
   Arg 0 (SERVICE): :FILE
   Arg 1 (HOST): #<ITS-HOST MC 1140425>
   Rest arg (SERVICE-ARGS): (NIL NIL)

(:METHOD FS:ACTIVE-PATHNAME-HOST :FILE-ACCESS-PATH):  (P.C. = 57)
   Arg 0 (SELF): #<ITS-HOST MC 1140425>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:ACTIVE-PATHNAME-HOST -- 1. IV's, 0. FL's 104716543>
   Arg 2 (OPERATION): :FILE-ACCESS-PATH
   --Defaulted args:--
   Arg 3 (PATHNAME): NIL
   Arg 4 (OPERATION): NIL
   Arg 5 (DONT-CREATE): NIL

(:METHOD FS:ACTIVE-PATHNAME-HOST :SET-HOST-USER-ID):  (P.C. = 4)
   Arg 0 (SELF): #<ITS-HOST MC 1140425>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:ACTIVE-PATHNAME-HOST -- 1. IV's, 0. FL's 104716543>
   Arg 2 (OPERATION): :SET-HOST-USER-ID
   Arg 3 (NEW-USER-ID): "JCMa"

FS:FILE-HOST-USER-ID:  (P.C. = 5)
   Arg 0 (UID): "JCMa"
   Arg 1 (HOST): #<ITS-HOST MC 1140425>

SET-HOST-UNAME-ASSOCIATIONS:  (P.C. = 5)  (from PIG:SYS$DISK:[JCMA]LISPMINI)

HELLO:  (P.C. = 45)  (from PIG:SYS$DISK:[JCMA]LISPMINI)
   Arg 0 (DEFAULT-INIT): T

SI:*EVAL:  (P.C. = 403)
   Arg 0 (FORM): (HELLO T)
   Local 0 (FORM): NIL
   --Defaulted args:--
   Arg 1 (ENV): NIL
   Arg 2 (HOOK): NIL

(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0):  (P.C. = 152)
   Arg 0 (.LEXICAL-ENVIRONMENT-POINTER.): #<DTP-LOCATIVE 500047>

TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
   Arg 0 (NEW-MODE): :BLAST
   Arg 1 (STREAM): #:TERMINAL-IO-SYN-STREAM
   Arg 2 (CONTINUATION): #<LEXICAL-CLOSURE (:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0) 500054>

SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
   Arg 0 (NAME): "Lisp Top Level"
   Arg 1 (ABORT-FUNCTION): NIL
   Arg 2 (READ-FUNCTION): NIL
   Arg 3 (EVAL-FUNCTION): NIL
   Arg 4 (PRINT-FUNCTION): NIL

SI:LISP-COMMAND-LOOP:  (P.C. = 67)
   Arg 0: #<LISP-LISTENER Lisp Listener 1 43200216 exposed>
   Rest arg: (:NAME "Lisp Top Level")

SI:LISP-TOP-LEVEL1:  (P.C. = 5)
   Arg 0 (STREAM): #<LISP-LISTENER Lisp Listener 1 43200216 exposed>

SI:LISP-TOP-LEVEL:  (P.C. = 7)
 1-Apr-85 22:00:37-EST,488;000000000000
Received: from MIT-ROBOT-2 by MIT-OZ via Chaosnet; 1 Apr 85 22:00-EST
Date: Monday, 1 April 1985, 21:56-EST
From: Patrick A. O'Donnell <PAO at MIT-EECS>
Subject: Namespace loses again.  So do I.
To: BUG-LISPM at OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10, NS 19.74, FEP 18, on Lisp Machine Robot-2:

I wonder just how many man-hours have been lost here due to the losing
namespace system.  I'm currently working on my second one today.
Thank you, Symbolics.
		- Pat
 1-Apr-85 22:05:43-EST,2818;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 1 Apr 85 22:05-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 206868; Mon 1-Apr-85 20:29:23-EST
Date: Monday, 1 April 1985, 20:30-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: DEFF Lossage
To: Charles Hornig <Hornig at SCRC-STONY-BROOK>,
    John C. Mallery <jcma at MIT-MC>, BUG-LISPM at OZ
In-Reply-To: <850329063523.1.HORNIG@HUDSON.SCRC.Symbolics.COM>
Message-ID: <850401203016.4.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Fri, 29 Mar 85 06:35 EST
    From: Charles Hornig <Hornig@SCRC-STONY-BROOK>

	Date: Thursday, 28 March 1985, 20:04-EST
	From: John C. Mallery <jcma at MIT-MC>

	In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.0,
	microcode TMC5-MIC 319, FEP 22, on Lisp Machine James Morrison:

	DEFFs now lose when invoked anywhere but toplevel.

    This is fixed in a later release.  In the mean time, you can put them at
    top-level or use FDEFINE.

I will argue that DEFF should be allowed ONLY at top level, and that
allowing it other places introduces semantic ugliness into the language.
Are you going to allow DEFVAR inside programs too?

	  For Function CONDITIONALIZE-3600
	    While compiling (DEFF QC-FILE (FUNCTION COMPILER:COMPILE-FILE)):
	    DEFF is a special form but the compiler has not been told
	    how to compile calls to it.  Use a macro, a compiler transformer,
	    a COMPILER:PHASE-1 property, or a COMPILER:PHASE-1-HOOK property.
	    While compiling (DEFF QC-FILE-LOAD (FUNCTION COMPILER:COMPILE-FILE-LOAD)):
	    DEFF is a special form but the compiler has not been told
	    how to compile calls to it.  Use a macro, a compiler transformer,
	    a COMPILER:PHASE-1 property, or a COMPILER:PHASE-1-HOOK property.
	    While compiling (DEFF FASLOAD (FUNCTION LOAD)):
	    DEFF is a special form but the compiler has not been told
	    how to compile calls to it.  Use a macro, a compiler transformer,
	    a COMPILER:PHASE-1 property, or a COMPILER:PHASE-1-HOOK property.


	(DEFUN CONDITIONALIZE-3600 ()
	  ;; conditionalize my old favorites -- at least for the time being
	  (DEFF QC-FILE #'COMPILER:COMPILE-FILE)
	  (DEFF QC-FILE-LOAD #'COMPILER:COMPILE-FILE-LOAD)
	  (DEFF FASLOAD #'LOAD)
	  ;; do the globalization
	  (GLOBALIZE* "QC-FILE" "QC-FILE-LOAD" "FASLOAD")
	  (si:enable-services)				;Cretin avoidance.
	  ;; hack scheduling
	;  (set-scheduler-quantum 1.)			;Scheduler non-avoidance.
	  ;; fix up wholine docs
	;  (send tv:who-line-documentation-window :eval-inside-yourself
	;	'(setq tv:left-margin-size 4 tv:line-height 14 tv:baseline-adj -1))
	;  (AND (Y-OR-N-P "Use old key bindings? ")
	;       (SI:SET-KEYBOARD-LAYOUT NIL))		;keep the key bindings straight until new kbd
	  )
 1-Apr-85 22:06:40-EST,2358;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 1 Apr 85 22:05-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 206871; Mon 1-Apr-85 20:37:08-EST
Date: Monday, 1 April 1985, 20:38-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: Logical Pathname Names  Lossage
To: HENRY at OZ, jcma at MIT-MC
cc: BUG-LISPM at OZ, RWK at SCRC-QUABBIN
In-Reply-To: <HENRY.12098972959.BABYL@MIT-OZ>
Message-ID: <850401203800.5.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Fri, 29 Mar 1985  17:03 EST
    From: HENRY@MIT-OZ


	Date: Thursday, 28 March 1985, 21:18-EST
	From: jcma at MIT-MC
	To:   BUG-LISPM at OZ
	Re:   Logical Pathname Names  Lossage

	In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.0,
	microcode TMC5-MIC 319, FEP 22, on Lisp Machine James Morrison:

	This is trying to tell me I can't have two logical pathnames pointing at the
	same real pathname.  What kind of lossage is that?

	>>Error: Attempt to translate RL: U;  to PIG:USRD$:<RELATUS.UTILS>.
		 We had previously gotten this pathname as a translation of RL: UTILS; .
		 Files may be overwritten accidentally if you proceed.

    Yes, I encountered this too, and its bad. It was explained to me
    that it is trying to protect you from writing a file on two different
    logical pathnames with the same physical pathname, but

    - It shouldn't complain until I actually try to write such a file, 
    rather than when I set up something only with the potential of doing so.

In other words, you would like to be given a false sense of security,
and then when the time comes to actually DO something you are forbidden
because of something you did 2 hours ago?  I think that is really what
you are saying, and I hope you really don't mean it.  Isn't it better to
let you know as soon as possible when you are setting yourself up for
trouble so you can correct the root cause of the problem?

    - That's a terribly worded error message since it will scare unsophisticated
    users in cases where its likely that no harm will be done at all.
    At most it should be a warning and not an error.

    - Logical pathnames are supposed to provide a measure of independence from
    physical placement of files, and here you go re-introducing a dependency
    on physical location.

 1-Apr-85 22:07:29-EST,32722;000000000000
Received: from MIT-ROBOT-2 by MIT-OZ via Chaosnet; 1 Apr 85 22:06-EST
Date: Monday, 1 April 1985, 22:01-EST
From: Patrick A. O'Donnell <PAO at MIT-EECS>
Subject: \/\/\/\/\/ ???
To: BUG-LISPM at OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10, NS 19.74, FEP 18, on Lisp Machine Robot-2:

I suppose someone might get amusement out of this.  I suppose I would if
I weren't trying to get work done without the screen pretending it's a
Christmas tree light.  (BTW:  I don't expect a response to this report.)

>>Trap: The ASSQ microcode tried to take CAAR of (#<DTP-EVEN-PC 10340543> #<DTP-LOCATIVE 740046> #<DTP-LOCATIVE 140025> READ-FOR-TOP-LEVEL #<DTP-LOCATIVE 140112> #<DTP-LOCATIVE 140140><<Error printing object>>, which was a tail of the second argument.
While in the function (:METHOD TV:NOTIFICATION-MIXIN :PRINT-NOTIFICATION)  TV:CAREFUL-NOTIFY  TV:NOTIFY

(:METHOD TV:NOTIFICATION-MIXIN :PRINT-NOTIFICATION):  (P.C. = 143)
   Arg 0 (SELF): #<NS-INTERACTION-PANE Ns Interaction Pane 1 1000601 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:NOTIFICATION-MIXIN -- 1. IV's, 0. FL's 4755711>
   Arg 2 (OPERATION): :PRINT-NOTIFICATION
   Arg 3 (TIME): 2690246995
   Arg 4 (STRING): "Process Namespace warning wants to type out"
   Arg 5 (WINDOW-OF-INTEREST): #<BACKGROUND-LISP-INTERACTOR Background Lisp Interactor 1 2664207 exposed>
   Local 6 (HT): 14
   Local 7 (PROCESS): #<PROCESS Ns Interaction Pane 1 30166552>
   Local 8 (SG): #<STACK-GROUP Ns Interaction Pane 1 30166600>
   Local 9 (SG-RUBOUT-HANDLER): 0
   Local 10 (SG-RUBOUT-HANDLER-OPTIONS): ((#<DTP-CLOSURE 140017>) #<DTP-LOCATIVE 140133> #<DTP-EVEN-PC 10340543> #<DTP-LOCATIVE 740046> #<DTP-LOCATIVE 140025> READ-FOR-TOP-LEVEL #<DTP-LOCATIVE 140112> #<DTP-LOCATIVE 140140><<Error printing value>>
   Local 11: SYS:UNWIND-PROTECT-TAG
   Local 12: #<DTP-ODD-PC 11603463>
   Local 13: #<DTP-LOCATIVE 76246310>
   Local 14: #<DTP-LOCATIVE 26467142>
   Local 15 (RUBOUT-HANDLER-OPTIONS-initialization): NIL

TV:CAREFUL-NOTIFY:  (P.C. = 110)
   Arg 0 (WINDOW-OF-INTEREST): #<BACKGROUND-LISP-INTERACTOR Background Lisp Interactor 1 2664207 exposed>
   Arg 1 (CAREFUL-P): NIL
   Arg 2 (FORMAT-CONTROL): "Process ~A wants ~A"
   Rest arg (FORMAT-ARGS): ("Namespace warning" "to type out")

TV:NOTIFY:  (P.C. = 10)
   Arg 0 (WINDOW-OF-INTEREST): #<BACKGROUND-LISP-INTERACTOR Background Lisp Interactor 1 2664207 exposed>
   Arg 1 (FORMAT-CONTROL): "Process ~A wants ~A"
   Rest arg (FORMAT-ARGS): ("Namespace warning" "to type out")

(:METHOD TV:SHEET :NOTICE):  (P.C. = 47)
   Arg 0 (SELF): #<BACKGROUND-LISP-INTERACTOR Background Lisp Interactor 1 2664207 exposed>
   Arg 1 (SELF-MAPPING-TABLE): TV:SHEET
   Arg 2 (OPERATION): :NOTICE
   Arg 3 (EVENT): :OUTPUT
   Rest arg (ARGS): NIL

(:METHOD TV:SHEET :OUTPUT-HOLD-EXCEPTION):  (P.C. = 57)
   Arg 0 (SELF): #<BACKGROUND-LISP-INTERACTOR Background Lisp Interactor 1 2664207 exposed>
   Arg 1 (SELF-MAPPING-TABLE): TV:SHEET
   Arg 2 (OPERATION): :OUTPUT-HOLD-EXCEPTION

TV:SHEET-PREPARE-SHEET-INTERNAL:  (P.C. = 35)
   Arg 0 (SHEET): #<BACKGROUND-LISP-INTERACTOR Background Lisp Interactor 1 2664207 exposed>

(:METHOD TV:SHEET :TYO):  (P.C. = 43)
   Arg 0 (SELF): #<BACKGROUND-LISP-INTERACTOR Background Lisp Interactor 1 2664207 exposed>
   Arg 1 (SELF-MAPPING-TABLE): TV:SHEET
   Arg 2 (OPERATION): :TYO
   Arg 3 (CHAR): 141
   --Defaulted args:--
   Arg 4 (FONT): NIL

TERPRI:  (P.C. = 10)
   --Defaulted args:--
   Arg 0 (STREAM): NIL

Rest of stack:
DBG:SHOW:  (P.C. = 2)
DBG:DEBUGGER-TOP-LEVEL:  (P.C. = 423)
DBG:ENTER-DEBUGGER:  (P.C. = 16)
DBG:DEBUGGER-HANDLER-HANDLE-CONDITION:  (P.C. = 7)
DBG:DEBUGGER-HANDLER:  (P.C. = 12)
(:METHOD CONDITION :SIGNAL):  (P.C. = 114)
(:METHOD CONDITION :COMBINED :SIGNAL):  (P.C. = 21)
SIGNAL:  (P.C. = 10)
DBG:SIGNAL-TRAP:  (P.C. = 3)
SYS:MICROCODE-ERROR-HANDLER:  (P.C. = 101)
(:METHOD TV:NOTIFICATION-MIXIN :PRINT-NOTIFICATION):  (P.C. = 143)
TV:CAREFUL-NOTIFY:  (P.C. = 110)
TV:NOTIFY:  (P.C. = 10)
(:METHOD TV:SHEET :NOTICE):  (P.C. = 47)
(:METHOD TV:SHEET :OUTPUT-HOLD-EXCEPTION):  (P.C. = 57)
TV:SHEET-PREPARE-SHEET-INTERNAL:  (P.C. = 35)
(:METHOD TV:SHEET :TYO):  (P.C. = 43)
TERPRI:  (P.C. = 10)
DBG:SHOW:  (P.C. = 2)
DBG:DEBUGGER-TOP-LEVEL:  (P.C. = 423)
DBG:ENTER-DEBUGGER:  (P.C. = 16)
DBG:DEBUGGER-HANDLER-HANDLE-CONDITION:  (P.C. = 7)
DBG:DEBUGGER-HANDLER:  (P.C. = 12)
(:METHOD CONDITION :SIGNAL):  (P.C. = 114)
(:METHOD CONDITION :COMBINED :SIGNAL):  (P.C. = 21)
SIGNAL:  (P.C. = 10)
DBG:SIGNAL-TRAP:  (P.C. = 3)
SYS:MICROCODE-ERROR-HANDLER:  (P.C. = 101)
(:METHOD TV:NOTIFICATION-MIXIN :PRINT-NOTIFICATION):  (P.C. = 143)
TV:CAREFUL-NOTIFY:  (P.C. = 110)
TV:NOTIFY:  (P.C. = 10)
(:METHOD TV:SHEET :NOTICE):  (P.C. = 47)
(:METHOD TV:SHEET :OUTPUT-HOLD-EXCEPTION):  (P.C. = 57)
TV:SHEET-PREPARE-SHEET-INTERNAL:  (P.C. = 35)
(:METHOD TV:SHEET :TYO):  (P.C. = 43)
TERPRI:  (P.C. = 10)
DBG:SHOW:  (P.C. = 2)
DBG:DEBUGGER-TOP-LEVEL:  (P.C. = 423)
DBG:ENTER-DEBUGGER:  (P.C. = 16)
DBG:DEBUGGER-HANDLER-HANDLE-CONDITION:  (P.C. = 7)
DBG:DEBUGGER-HANDLER:  (P.C. = 12)
(:METHOD CONDITION :SIGNAL):  (P.C. = 114)
(:METHOD CONDITION :COMBINED :SIGNAL):  (P.C. = 21)
SIGNAL:  (P.C. = 10)
DBG:SIGNAL-TRAP:  (P.C. = 3)
SYS:MICROCODE-ERROR-HANDLER:  (P.C. = 101)
(:METHOD TV:NOTIFICATION-MIXIN :PRINT-NOTIFICATION):  (P.C. = 143)
TV:CAREFUL-NOTIFY:  (P.C. = 110)
TV:NOTIFY:  (P.C. = 10)
(:METHOD TV:SHEET :NOTICE):  (P.C. = 47)
(:METHOD TV:SHEET :OUTPUT-HOLD-EXCEPTION):  (P.C. = 57)
TV:SHEET-PREPARE-SHEET-INTERNAL:  (P.C. = 35)
(:METHOD TV:SHEET :TYO):  (P.C. = 43)
TERPRI:  (P.C. = 10)
DBG:SHOW:  (P.C. = 2)
DBG:DEBUGGER-TOP-LEVEL:  (P.C. = 423)
DBG:ENTER-DEBUGGER:  (P.C. = 16)
DBG:DEBUGGER-HANDLER-HANDLE-CONDITION:  (P.C. = 7)
DBG:DEBUGGER-HANDLER:  (P.C. = 12)
(:METHOD CONDITION :SIGNAL):  (P.C. = 114)
(:METHOD CONDITION :COMBINED :SIGNAL):  (P.C. = 21)
SIGNAL:  (P.C. = 10)
DBG:SIGNAL-TRAP:  (P.C. = 3)
SYS:MICROCODE-ERROR-HANDLER:  (P.C. = 101)
(:METHOD TV:NOTIFICATION-MIXIN :PRINT-NOTIFICATION):  (P.C. = 143)
TV:CAREFUL-NOTIFY:  (P.C. = 110)
TV:NOTIFY:  (P.C. = 10)
(:METHOD TV:SHEET :NOTICE):  (P.C. = 47)
(:METHOD TV:SHEET :OUTPUT-HOLD-EXCEPTION):  (P.C. = 57)
TV:SHEET-PREPARE-SHEET-INTERNAL:  (P.C. = 35)
(:METHOD TV:SHEET :TYO):  (P.C. = 43)
TERPRI:  (P.C. = 10)
DBG:SHOW:  (P.C. = 2)
DBG:DEBUGGER-TOP-LEVEL:  (P.C. = 423)
DBG:ENTER-DEBUGGER:  (P.C. = 16)
DBG:DEBUGGER-HANDLER-HANDLE-CONDITION:  (P.C. = 7)
DBG:DEBUGGER-HANDLER:  (P.C. = 12)
(:METHOD CONDITION :SIGNAL):  (P.C. = 114)
(:METHOD CONDITION :COMBINED :SIGNAL):  (P.C. = 21)
SIGNAL:  (P.C. = 10)
DBG:SIGNAL-TRAP:  (P.C. = 3)
SYS:MICROCODE-ERROR-HANDLER:  (P.C. = 101)
(:METHOD TV:NOTIFICATION-MIXIN :PRINT-NOTIFICATION):  (P.C. = 143)
TV:CAREFUL-NOTIFY:  (P.C. = 110)
TV:NOTIFY:  (P.C. = 10)
(:METHOD TV:SHEET :NOTICE):  (P.C. = 47)
(:METHOD TV:SHEET :OUTPUT-HOLD-EXCEPTION):  (P.C. = 57)
TV:SHEET-PREPARE-SHEET-INTERNAL:  (P.C. = 35)
(:METHOD TV:SHEET :TYO):  (P.C. = 43)
TERPRI:  (P.C. = 10)
DBG:SHOW:  (P.C. = 2)
DBG:DEBUGGER-TOP-LEVEL:  (P.C. = 423)
DBG:ENTER-DEBUGGER:  (P.C. = 16)
DBG:DEBUGGER-HANDLER-HANDLE-CONDITION:  (P.C. = 7)
DBG:DEBUGGER-HANDLER:  (P.C. = 12)
(:METHOD CONDITION :SIGNAL):  (P.C. = 114)
(:METHOD CONDITION :COMBINED :SIGNAL):  (P.C. = 21)
SIGNAL:  (P.C. = 10)
DBG:SIGNAL-TRAP:  (P.C. = 3)
SYS:MICROCODE-ERROR-HANDLER:  (P.C. = 101)
(:METHOD TV:NOTIFICATION-MIXIN :PRINT-NOTIFICATION):  (P.C. = 143)
TV:CAREFUL-NOTIFY:  (P.C. = 110)
TV:NOTIFY:  (P.C. = 10)
(:METHOD TV:SHEET :NOTICE):  (P.C. = 47)
(:METHOD TV:SHEET :OUTPUT-HOLD-EXCEPTION):  (P.C. = 57)
TV:SHEET-PREPARE-SHEET-INTERNAL:  (P.C. = 35)
(:METHOD TV:SHEET :TYO):  (P.C. = 43)
TERPRI:  (P.C. = 10)
DBG:SHOW:  (P.C. = 2)
DBG:DEBUGGER-TOP-LEVEL:  (P.C. = 423)
DBG:ENTER-DEBUGGER:  (P.C. = 16)
DBG:DEBUGGER-HANDLER-HANDLE-CONDITION:  (P.C. = 7)
DBG:DEBUGGER-HANDLER:  (P.C. = 12)
(:METHOD CONDITION :SIGNAL):  (P.C. = 114)
(:METHOD CONDITION :COMBINED :SIGNAL):  (P.C. = 21)
SIGNAL:  (P.C. = 10)
DBG:SIGNAL-TRAP:  (P.C. = 3)
SYS:MICROCODE-ERROR-HANDLER:  (P.C. = 101)
(:METHOD TV:NOTIFICATION-MIXIN :PRINT-NOTIFICATION):  (P.C. = 143)
TV:CAREFUL-NOTIFY:  (P.C. = 110)
TV:NOTIFY:  (P.C. = 10)
(:METHOD TV:SHEET :NOTICE):  (P.C. = 47)
(:METHOD TV:SHEET :OUTPUT-HOLD-EXCEPTION):  (P.C. = 57)
TV:SHEET-PREPARE-SHEET-INTERNAL:  (P.C. = 35)
(:METHOD TV:SHEET :TYO):  (P.C. = 43)
TERPRI:  (P.C. = 10)
DBG:SHOW:  (P.C. = 2)
DBG:DEBUGGER-TOP-LEVEL:  (P.C. = 423)
DBG:ENTER-DEBUGGER:  (P.C. = 16)
DBG:DEBUGGER-HANDLER-HANDLE-CONDITION:  (P.C. = 7)
DBG:DEBUGGER-HANDLER:  (P.C. = 12)
(:METHOD CONDITION :SIGNAL):  (P.C. = 114)
(:METHOD CONDITION :COMBINED :SIGNAL):  (P.C. = 21)
SIGNAL:  (P.C. = 10)
DBG:SIGNAL-TRAP:  (P.C. = 3)
SYS:MICROCODE-ERROR-HANDLER:  (P.C. = 101)
(:METHOD TV:NOTIFICATION-MIXIN :PRINT-NOTIFICATION):  (P.C. = 143)
TV:CAREFUL-NOTIFY:  (P.C. = 110)
TV:NOTIFY:  (P.C. = 10)
(:METHOD TV:SHEET :NOTICE):  (P.C. = 47)
(:METHOD TV:SHEET :OUTPUT-HOLD-EXCEPTION):  (P.C. = 57)
TV:SHEET-PREPARE-SHEET-INTERNAL:  (P.C. = 35)
(:METHOD TV:SHEET :TYO):  (P.C. = 43)
TERPRI:  (P.C. = 10)
DBG:SHOW:  (P.C. = 2)
DBG:DEBUGGER-TOP-LEVEL:  (P.C. = 423)
DBG:ENTER-DEBUGGER:  (P.C. = 16)
DBG:DEBUGGER-HANDLER-HANDLE-CONDITION:  (P.C. = 7)
DBG:DEBUGGER-HANDLER:  (P.C. = 12)
(:METHOD CONDITION :SIGNAL):  (P.C. = 114)
(:METHOD CONDITION :COMBINED :SIGNAL):  (P.C. = 21)
SIGNAL:  (P.C. = 10)
SYS:STACK-OVERFLOW:  (P.C. = 16)
TV:%DRAW-STRING-INTERNAL:
TV:%DRAW-STRING-INTERNAL:  (P.C. = 15)
(:METHOD TV:SCREEN :%DRAW-STRING):  (P.C. = 26)
TV:%DRAW-STRING:  (P.C. = 42)
(:METHOD TV:SHEET :STRING-OUT):  (P.C. = 163)
(:METHOD TV:SHEET :PRINT-SELF):  (P.C. = 64)
SI:PRINT-OBJECT:  (P.C. = 342)
PRINC:  (P.C. = 10)
FORMAT:FORMAT-CTL-ASCII:  (P.C. = 73)
(:PROPERTY FORMAT:A FORMAT:CTL-ONE-ARG):  (P.C. = 4)
FORMAT:FORMAT-CTL-OP:  (P.C. = 21)
FORMAT:FORMAT-CTL-STRING:  (P.C. = 74)
FORMAT:  (P.C. = 70)
(:METHOD TV:NOTIFICATION-MIXIN :PRINT-NOTIFICATION):  (P.C. = 126)
TV:CAREFUL-NOTIFY:  (P.C. = 110)
TV:NOTIFY:  (P.C. = 10)
(:METHOD TV:SHEET :NOTICE):  (P.C. = 47)
(:METHOD TV:SHEET :OUTPUT-HOLD-EXCEPTION):  (P.C. = 57)
TV:SHEET-PREPARE-SHEET-INTERNAL:  (P.C. = 35)
(:METHOD TV:SHEET :TYO):  (P.C. = 43)
TERPRI:  (P.C. = 10)
DBG:SHOW:  (P.C. = 2)
DBG:DEBUGGER-TOP-LEVEL:  (P.C. = 423)
DBG:ENTER-DEBUGGER:  (P.C. = 16)
DBG:DEBUGGER-HANDLER-HANDLE-CONDITION:  (P.C. = 7)
DBG:DEBUGGER-HANDLER:  (P.C. = 12)
(:METHOD CONDITION :SIGNAL):  (P.C. = 114)
(:METHOD CONDITION :COMBINED :SIGNAL):  (P.C. = 21)
SIGNAL:  (P.C. = 10)
DBG:SIGNAL-TRAP:  (P.C. = 3)
SYS:MICROCODE-ERROR-HANDLER:  (P.C. = 101)
(:METHOD TV:NOTIFICATION-MIXIN :PRINT-NOTIFICATION):  (P.C. = 143)
TV:CAREFUL-NOTIFY:  (P.C. = 110)
TV:NOTIFY:  (P.C. = 10)
(:METHOD TV:SHEET :NOTICE):  (P.C. = 47)
(:METHOD TV:SHEET :OUTPUT-HOLD-EXCEPTION):  (P.C. = 57)
TV:SHEET-PREPARE-SHEET-INTERNAL:  (P.C. = 35)
(:METHOD TV:SHEET :TYO):  (P.C. = 43)
TERPRI:  (P.C. = 10)
DBG:SHOW:  (P.C. = 2)
DBG:DEBUGGER-TOP-LEVEL:  (P.C. = 423)
DBG:ENTER-DEBUGGER:  (P.C. = 16)
DBG:DEBUGGER-HANDLER-HANDLE-CONDITION:  (P.C. = 7)
DBG:DEBUGGER-HANDLER:  (P.C. = 12)
(:METHOD CONDITION :SIGNAL):  (P.C. = 114)
(:METHOD CONDITION :COMBINED :SIGNAL):  (P.C. = 21)
SIGNAL:  (P.C. = 10)
DBG:SIGNAL-TRAP:  (P.C. = 3)
SYS:MICROCODE-ERROR-HANDLER:  (P.C. = 101)
(:METHOD TV:NOTIFICATION-MIXIN :PRINT-NOTIFICATION):  (P.C. = 143)
TV:CAREFUL-NOTIFY:  (P.C. = 110)
TV:NOTIFY:  (P.C. = 10)
(:METHOD TV:SHEET :NOTICE):  (P.C. = 47)
(:METHOD TV:SHEET :OUTPUT-HOLD-EXCEPTION):  (P.C. = 57)
TV:SHEET-PREPARE-SHEET-INTERNAL:  (P.C. = 35)
(:METHOD TV:SHEET :TYO):  (P.C. = 43)
TERPRI:  (P.C. = 10)
DBG:SHOW:  (P.C. = 2)
DBG:DEBUGGER-TOP-LEVEL:  (P.C. = 423)
DBG:ENTER-DEBUGGER:  (P.C. = 16)
DBG:DEBUGGER-HANDLER-HANDLE-CONDITION:  (P.C. = 7)
DBG:DEBUGGER-HANDLER:  (P.C. = 12)
(:METHOD CONDITION :SIGNAL):  (P.C. = 114)
(:METHOD CONDITION :COMBINED :SIGNAL):  (P.C. = 21)
SIGNAL:  (P.C. = 10)
DBG:SIGNAL-TRAP:  (P.C. = 3)
SYS:MICROCODE-ERROR-HANDLER:  (P.C. = 101)
(:METHOD TV:NOTIFICATION-MIXIN :PRINT-NOTIFICATION):  (P.C. = 143)
TV:CAREFUL-NOTIFY:  (P.C. = 110)
TV:NOTIFY:  (P.C. = 10)
(:METHOD TV:SHEET :NOTICE):  (P.C. = 47)
(:METHOD TV:SHEET :OUTPUT-HOLD-EXCEPTION):  (P.C. = 57)
TV:SHEET-PREPARE-SHEET-INTERNAL:  (P.C. = 35)
(:METHOD TV:SHEET :TYO):  (P.C. = 43)
TERPRI:  (P.C. = 10)
DBG:SHOW:  (P.C. = 2)
DBG:DEBUGGER-TOP-LEVEL:  (P.C. = 423)
DBG:ENTER-DEBUGGER:  (P.C. = 16)
DBG:DEBUGGER-HANDLER-HANDLE-CONDITION:  (P.C. = 7)
DBG:DEBUGGER-HANDLER:  (P.C. = 12)
(:METHOD CONDITION :SIGNAL):  (P.C. = 114)
(:METHOD CONDITION :COMBINED :SIGNAL):  (P.C. = 21)
SIGNAL:  (P.C. = 10)
DBG:SIGNAL-TRAP:  (P.C. = 3)
SYS:MICROCODE-ERROR-HANDLER:  (P.C. = 101)
(:METHOD TV:NOTIFICATION-MIXIN :PRINT-NOTIFICATION):  (P.C. = 143)
TV:CAREFUL-NOTIFY:  (P.C. = 110)
TV:NOTIFY:  (P.C. = 10)
(:METHOD TV:SHEET :NOTICE):  (P.C. = 47)
(:METHOD TV:SHEET :OUTPUT-HOLD-EXCEPTION):  (P.C. = 57)
TV:SHEET-PREPARE-SHEET-INTERNAL:  (P.C. = 35)
(:METHOD TV:SHEET :TYO):  (P.C. = 43)
TERPRI:  (P.C. = 10)
DBG:SHOW:  (P.C. = 2)
DBG:DEBUGGER-TOP-LEVEL:  (P.C. = 423)
DBG:ENTER-DEBUGGER:  (P.C. = 16)
DBG:DEBUGGER-HANDLER-HANDLE-CONDITION:  (P.C. = 7)
DBG:DEBUGGER-HANDLER:  (P.C. = 12)
(:METHOD CONDITION :SIGNAL):  (P.C. = 114)
(:METHOD CONDITION :COMBINED :SIGNAL):  (P.C. = 21)
SIGNAL:  (P.C. = 10)
DBG:SIGNAL-TRAP:  (P.C. = 3)
SYS:MICROCODE-ERROR-HANDLER:  (P.C. = 101)
(:METHOD TV:NOTIFICATION-MIXIN :PRINT-NOTIFICATION):  (P.C. = 143)
TV:CAREFUL-NOTIFY:  (P.C. = 110)
TV:NOTIFY:  (P.C. = 10)
(:METHOD TV:SHEET :NOTICE):  (P.C. = 47)
(:METHOD TV:SHEET :OUTPUT-HOLD-EXCEPTION):  (P.C. = 57)
TV:SHEET-PREPARE-SHEET-INTERNAL:  (P.C. = 35)
(:METHOD TV:SHEET :TYO):  (P.C. = 43)
TERPRI:  (P.C. = 10)
DBG:SHOW:  (P.C. = 2)
DBG:DEBUGGER-TOP-LEVEL:  (P.C. = 423)
DBG:ENTER-DEBUGGER:  (P.C. = 16)
DBG:DEBUGGER-HANDLER-HANDLE-CONDITION:  (P.C. = 7)
DBG:DEBUGGER-HANDLER:  (P.C. = 12)
(:METHOD CONDITION :SIGNAL):  (P.C. = 114)
(:METHOD CONDITION :COMBINED :SIGNAL):  (P.C. = 21)
SIGNAL:  (P.C. = 10)
DBG:SIGNAL-TRAP:  (P.C. = 3)
SYS:MICROCODE-ERROR-HANDLER:  (P.C. = 101)
(:METHOD TV:NOTIFICATION-MIXIN :PRINT-NOTIFICATION):  (P.C. = 143)
TV:CAREFUL-NOTIFY:  (P.C. = 110)
TV:NOTIFY:  (P.C. = 10)
(:METHOD TV:SHEET :NOTICE):  (P.C. = 47)
(:METHOD TV:SHEET :OUTPUT-HOLD-EXCEPTION):  (P.C. = 57)
TV:SHEET-PREPARE-SHEET-INTERNAL:  (P.C. = 35)
(:METHOD TV:SHEET :TYO):  (P.C. = 43)
TERPRI:  (P.C. = 10)
DBG:SHOW:  (P.C. = 2)
DBG:DEBUGGER-TOP-LEVEL:  (P.C. = 423)
DBG:ENTER-DEBUGGER:  (P.C. = 16)
DBG:DEBUGGER-HANDLER-HANDLE-CONDITION:  (P.C. = 7)
DBG:DEBUGGER-HANDLER:  (P.C. = 12)
(:METHOD CONDITION :SIGNAL):  (P.C. = 114)
(:METHOD CONDITION :COMBINED :SIGNAL):  (P.C. = 21)
SIGNAL:  (P.C. = 10)
DBG:SIGNAL-TRAP:  (P.C. = 3)
SYS:MICROCODE-ERROR-HANDLER:  (P.C. = 101)
(:METHOD TV:NOTIFICATION-MIXIN :PRINT-NOTIFICATION):  (P.C. = 143)
TV:CAREFUL-NOTIFY:  (P.C. = 110)
TV:NOTIFY:  (P.C. = 10)
(:METHOD TV:SHEET :NOTICE):  (P.C. = 47)
(:METHOD TV:SHEET :OUTPUT-HOLD-EXCEPTION):  (P.C. = 57)
TV:SHEET-PREPARE-SHEET-INTERNAL:  (P.C. = 35)
(:METHOD TV:SHEET :TYO):  (P.C. = 43)
TERPRI:  (P.C. = 10)
DBG:SHOW:  (P.C. = 2)
DBG:DEBUGGER-TOP-LEVEL:  (P.C. = 423)
DBG:ENTER-DEBUGGER:  (P.C. = 16)
DBG:DEBUGGER-HANDLER-HANDLE-CONDITION:  (P.C. = 7)
DBG:DEBUGGER-HANDLER:  (P.C. = 12)
(:METHOD CONDITION :SIGNAL):  (P.C. = 114)
(:METHOD CONDITION :COMBINED :SIGNAL):  (P.C. = 21)
SIGNAL:  (P.C. = 10)
DBG:SIGNAL-TRAP:  (P.C. = 3)
SYS:MICROCODE-ERROR-HANDLER:  (P.C. = 101)
(:METHOD TV:NOTIFICATION-MIXIN :PRINT-NOTIFICATION):  (P.C. = 143)
TV:CAREFUL-NOTIFY:  (P.C. = 110)
TV:NOTIFY:  (P.C. = 10)
(:METHOD TV:SHEET :NOTICE):  (P.C. = 47)
(:METHOD TV:SHEET :OUTPUT-HOLD-EXCEPTION):  (P.C. = 57)
TV:SHEET-PREPARE-SHEET-INTERNAL:  (P.C. = 35)
(:METHOD TV:SHEET :TYO):  (P.C. = 43)
TERPRI:  (P.C. = 10)
DBG:SHOW:  (P.C. = 2)
DBG:DEBUGGER-TOP-LEVEL:  (P.C. = 423)
DBG:ENTER-DEBUGGER:  (P.C. = 16)
DBG:DEBUGGER-HANDLER-HANDLE-CONDITION:  (P.C. = 7)
DBG:DEBUGGER-HANDLER:  (P.C. = 12)
(:METHOD CONDITION :SIGNAL):  (P.C. = 114)
(:METHOD CONDITION :COMBINED :SIGNAL):  (P.C. = 21)
SIGNAL:  (P.C. = 10)
DBG:SIGNAL-TRAP:  (P.C. = 3)
SYS:MICROCODE-ERROR-HANDLER:  (P.C. = 101)
(:METHOD TV:NOTIFICATION-MIXIN :PRINT-NOTIFICATION):  (P.C. = 143)
TV:CAREFUL-NOTIFY:  (P.C. = 110)
TV:NOTIFY:  (P.C. = 10)
(:METHOD TV:SHEET :NOTICE):  (P.C. = 47)
(:METHOD TV:SHEET :OUTPUT-HOLD-EXCEPTION):  (P.C. = 57)
TV:SHEET-PREPARE-SHEET-INTERNAL:  (P.C. = 35)
(:METHOD TV:SHEET :TYO):  (P.C. = 43)
TERPRI:  (P.C. = 10)
DBG:SHOW:  (P.C. = 2)
DBG:DEBUGGER-TOP-LEVEL:  (P.C. = 423)
DBG:ENTER-DEBUGGER:  (P.C. = 16)
DBG:DEBUGGER-HANDLER-HANDLE-CONDITION:  (P.C. = 7)
DBG:DEBUGGER-HANDLER:  (P.C. = 12)
(:METHOD CONDITION :SIGNAL):  (P.C. = 114)
(:METHOD CONDITION :COMBINED :SIGNAL):  (P.C. = 21)
SIGNAL:  (P.C. = 10)
SYS:STACK-OVERFLOW:  (P.C. = 16)
TV:SHEET-CAN-GET-LOCK-INTERNAL:
TV:SHEET-CAN-GET-LOCK:  (P.C. = 6)
(:METHOD TV:SHEET :TYO):  (P.C. = 40)
SI:PRINT-FIXNUM-1:  (P.C. = 34)
SI:PRINT-FIXNUM-1:  (P.C. = 14)
SI:PRINT-FIXNUM:  (P.C. = 35)
FORMAT:FORMAT-CTL-INTEGER:  (P.C. = 233)
(:PROPERTY FORMAT:D FORMAT:CTL-ONE-ARG):  (P.C. = 5)
FORMAT:FORMAT-CTL-OP:  (P.C. = 21)
FORMAT:FORMAT-CTL-STRING:  (P.C. = 74)
FORMAT:  (P.C. = 70)
TIME:PRINT-BRIEF-UNIVERSAL-TIME:  (P.C. = 44)
(:METHOD TV:NOTIFICATION-MIXIN :PRINT-NOTIFICATION):  (P.C. = 107)
TV:CAREFUL-NOTIFY:  (P.C. = 110)
TV:NOTIFY:  (P.C. = 10)
(:METHOD TV:SHEET :NOTICE):  (P.C. = 47)
(:METHOD TV:SHEET :OUTPUT-HOLD-EXCEPTION):  (P.C. = 57)
TV:SHEET-PREPARE-SHEET-INTERNAL:  (P.C. = 35)
(:METHOD TV:SHEET :TYO):  (P.C. = 43)
TERPRI:  (P.C. = 10)
DBG:SHOW:  (P.C. = 2)
DBG:DEBUGGER-TOP-LEVEL:  (P.C. = 423)
DBG:ENTER-DEBUGGER:  (P.C. = 16)
DBG:DEBUGGER-HANDLER-HANDLE-CONDITION:  (P.C. = 7)
DBG:DEBUGGER-HANDLER:  (P.C. = 12)
(:METHOD CONDITION :SIGNAL):  (P.C. = 114)
(:METHOD CONDITION :COMBINED :SIGNAL):  (P.C. = 21)
SIGNAL:  (P.C. = 10)
DBG:SIGNAL-TRAP:  (P.C. = 3)
SYS:MICROCODE-ERROR-HANDLER:  (P.C. = 101)
(:METHOD TV:NOTIFICATION-MIXIN :PRINT-NOTIFICATION):  (P.C. = 143)
TV:CAREFUL-NOTIFY:  (P.C. = 110)
TV:NOTIFY:  (P.C. = 10)
(:METHOD TV:SHEET :NOTICE):  (P.C. = 47)
(:METHOD TV:SHEET :OUTPUT-HOLD-EXCEPTION):  (P.C. = 57)
TV:SHEET-PREPARE-SHEET-INTERNAL:  (P.C. = 35)
(:METHOD TV:SHEET :TYO):  (P.C. = 43)
TERPRI:  (P.C. = 10)
DBG:SHOW:  (P.C. = 2)
DBG:DEBUGGER-TOP-LEVEL:  (P.C. = 423)
DBG:ENTER-DEBUGGER:  (P.C. = 16)
DBG:DEBUGGER-HANDLER-HANDLE-CONDITION:  (P.C. = 7)
DBG:DEBUGGER-HANDLER:  (P.C. = 12)
(:METHOD CONDITION :SIGNAL):  (P.C. = 114)
(:METHOD CONDITION :COMBINED :SIGNAL):  (P.C. = 21)
SIGNAL:  (P.C. = 10)
DBG:SIGNAL-TRAP:  (P.C. = 3)
SYS:MICROCODE-ERROR-HANDLER:  (P.C. = 101)
(:METHOD TV:NOTIFICATION-MIXIN :PRINT-NOTIFICATION):  (P.C. = 143)
TV:CAREFUL-NOTIFY:  (P.C. = 110)
TV:NOTIFY:  (P.C. = 10)
(:METHOD TV:SHEET :NOTICE):  (P.C. = 47)
(:METHOD TV:SHEET :OUTPUT-HOLD-EXCEPTION):  (P.C. = 57)
TV:SHEET-PREPARE-SHEET-INTERNAL:  (P.C. = 35)
(:METHOD TV:SHEET :TYO):  (P.C. = 43)
TERPRI:  (P.C. = 10)
DBG:SHOW:  (P.C. = 2)
DBG:DEBUGGER-TOP-LEVEL:  (P.C. = 423)
DBG:ENTER-DEBUGGER:  (P.C. = 16)
DBG:DEBUGGER-HANDLER-HANDLE-CONDITION:  (P.C. = 7)
DBG:DEBUGGER-HANDLER:  (P.C. = 12)
(:METHOD CONDITION :SIGNAL):  (P.C. = 114)
(:METHOD CONDITION :COMBINED :SIGNAL):  (P.C. = 21)
SIGNAL:  (P.C. = 10)
DBG:SIGNAL-TRAP:  (P.C. = 3)
SYS:MICROCODE-ERROR-HANDLER:  (P.C. = 101)
(:METHOD TV:NOTIFICATION-MIXIN :PRINT-NOTIFICATION):  (P.C. = 143)
TV:CAREFUL-NOTIFY:  (P.C. = 110)
TV:NOTIFY:  (P.C. = 10)
(:METHOD TV:SHEET :NOTICE):  (P.C. = 47)
(:METHOD TV:SHEET :OUTPUT-HOLD-EXCEPTION):  (P.C. = 57)
TV:SHEET-PREPARE-SHEET-INTERNAL:  (P.C. = 35)
(:METHOD TV:SHEET :TYO):  (P.C. = 43)
TERPRI:  (P.C. = 10)
DBG:SHOW:  (P.C. = 2)
DBG:DEBUGGER-TOP-LEVEL:  (P.C. = 423)
DBG:ENTER-DEBUGGER:  (P.C. = 16)
DBG:DEBUGGER-HANDLER-HANDLE-CONDITION:  (P.C. = 7)
DBG:DEBUGGER-HANDLER:  (P.C. = 12)
(:METHOD CONDITION :SIGNAL):  (P.C. = 114)
(:METHOD CONDITION :COMBINED :SIGNAL):  (P.C. = 21)
SIGNAL:  (P.C. = 10)
DBG:SIGNAL-TRAP:  (P.C. = 3)
SYS:MICROCODE-ERROR-HANDLER:  (P.C. = 101)
(:METHOD TV:NOTIFICATION-MIXIN :PRINT-NOTIFICATION):  (P.C. = 143)
TV:CAREFUL-NOTIFY:  (P.C. = 110)
TV:NOTIFY:  (P.C. = 10)
(:METHOD TV:SHEET :NOTICE):  (P.C. = 47)
(:METHOD TV:SHEET :OUTPUT-HOLD-EXCEPTION):  (P.C. = 57)
TV:SHEET-PREPARE-SHEET-INTERNAL:  (P.C. = 35)
(:METHOD TV:SHEET :TYO):  (P.C. = 43)
TERPRI:  (P.C. = 10)
DBG:SHOW:  (P.C. = 2)
DBG:DEBUGGER-TOP-LEVEL:  (P.C. = 423)
DBG:ENTER-DEBUGGER:  (P.C. = 16)
DBG:DEBUGGER-HANDLER-HANDLE-CONDITION:  (P.C. = 7)
DBG:DEBUGGER-HANDLER:  (P.C. = 12)
(:METHOD CONDITION :SIGNAL):  (P.C. = 114)
(:METHOD CONDITION :COMBINED :SIGNAL):  (P.C. = 21)
SIGNAL:  (P.C. = 10)
DBG:SIGNAL-TRAP:  (P.C. = 3)
SYS:MICROCODE-ERROR-HANDLER:  (P.C. = 101)
(:METHOD TV:NOTIFICATION-MIXIN :PRINT-NOTIFICATION):  (P.C. = 143)
TV:CAREFUL-NOTIFY:  (P.C. = 110)
TV:NOTIFY:  (P.C. = 10)
(:METHOD TV:SHEET :NOTICE):  (P.C. = 47)
(:METHOD TV:SHEET :OUTPUT-HOLD-EXCEPTION):  (P.C. = 57)
TV:SHEET-PREPARE-SHEET-INTERNAL:  (P.C. = 35)
(:METHOD TV:SHEET :TYO):  (P.C. = 43)
TERPRI:  (P.C. = 10)
DBG:SHOW:  (P.C. = 2)
DBG:DEBUGGER-TOP-LEVEL:  (P.C. = 423)
DBG:ENTER-DEBUGGER:  (P.C. = 16)
DBG:DEBUGGER-HANDLER-HANDLE-CONDITION:  (P.C. = 7)
DBG:DEBUGGER-HANDLER:  (P.C. = 12)
(:METHOD CONDITION :SIGNAL):  (P.C. = 114)
(:METHOD CONDITION :COMBINED :SIGNAL):  (P.C. = 21)
SIGNAL:  (P.C. = 10)
DBG:SIGNAL-TRAP:  (P.C. = 3)
SYS:MICROCODE-ERROR-HANDLER:  (P.C. = 101)
(:METHOD TV:NOTIFICATION-MIXIN :PRINT-NOTIFICATION):  (P.C. = 143)
TV:CAREFUL-NOTIFY:  (P.C. = 110)
TV:NOTIFY:  (P.C. = 10)
(:METHOD TV:SHEET :NOTICE):  (P.C. = 47)
(:METHOD TV:SHEET :OUTPUT-HOLD-EXCEPTION):  (P.C. = 57)
TV:SHEET-PREPARE-SHEET-INTERNAL:  (P.C. = 35)
(:METHOD TV:SHEET :TYO):  (P.C. = 43)
TERPRI:  (P.C. = 10)
DBG:SHOW:  (P.C. = 2)
DBG:DEBUGGER-TOP-LEVEL:  (P.C. = 423)
DBG:ENTER-DEBUGGER:  (P.C. = 16)
DBG:DEBUGGER-HANDLER-HANDLE-CONDITION:  (P.C. = 7)
DBG:DEBUGGER-HANDLER:  (P.C. = 12)
(:METHOD CONDITION :SIGNAL):  (P.C. = 114)
(:METHOD CONDITION :COMBINED :SIGNAL):  (P.C. = 21)
SIGNAL:  (P.C. = 10)
DBG:SIGNAL-TRAP:  (P.C. = 3)
SYS:MICROCODE-ERROR-HANDLER:  (P.C. = 101)
(:METHOD TV:NOTIFICATION-MIXIN :PRINT-NOTIFICATION):  (P.C. = 143)
TV:CAREFUL-NOTIFY:  (P.C. = 110)
TV:NOTIFY:  (P.C. = 10)
(:METHOD TV:SHEET :NOTICE):  (P.C. = 47)
(:METHOD TV:SHEET :OUTPUT-HOLD-EXCEPTION):  (P.C. = 57)
TV:SHEET-PREPARE-SHEET-INTERNAL:  (P.C. = 35)
(:METHOD TV:SHEET :TYO):  (P.C. = 43)
TERPRI:  (P.C. = 10)
DBG:SHOW:  (P.C. = 2)
DBG:DEBUGGER-TOP-LEVEL:  (P.C. = 423)
DBG:ENTER-DEBUGGER:  (P.C. = 16)
DBG:DEBUGGER-HANDLER-HANDLE-CONDITION:  (P.C. = 7)
DBG:DEBUGGER-HANDLER:  (P.C. = 12)
(:METHOD CONDITION :SIGNAL):  (P.C. = 114)
(:METHOD CONDITION :COMBINED :SIGNAL):  (P.C. = 21)
SIGNAL:  (P.C. = 10)
DBG:SIGNAL-TRAP:  (P.C. = 3)
SYS:MICROCODE-ERROR-HANDLER:  (P.C. = 101)
(:METHOD TV:NOTIFICATION-MIXIN :PRINT-NOTIFICATION):  (P.C. = 143)
TV:CAREFUL-NOTIFY:  (P.C. = 110)
TV:NOTIFY:  (P.C. = 10)
(:METHOD TV:SHEET :NOTICE):  (P.C. = 47)
(:METHOD TV:SHEET :OUTPUT-HOLD-EXCEPTION):  (P.C. = 57)
TV:SHEET-PREPARE-SHEET-INTERNAL:  (P.C. = 35)
(:METHOD TV:SHEET :TYO):  (P.C. = 43)
TERPRI:  (P.C. = 10)
DBG:SHOW:  (P.C. = 2)
DBG:DEBUGGER-TOP-LEVEL:  (P.C. = 423)
DBG:ENTER-DEBUGGER:  (P.C. = 16)
DBG:DEBUGGER-HANDLER-HANDLE-CONDITION:  (P.C. = 7)
DBG:DEBUGGER-HANDLER:  (P.C. = 12)
(:METHOD CONDITION :SIGNAL):  (P.C. = 114)
(:METHOD CONDITION :COMBINED :SIGNAL):  (P.C. = 21)
SIGNAL:  (P.C. = 10)
DBG:SIGNAL-TRAP:  (P.C. = 3)
SYS:MICROCODE-ERROR-HANDLER:  (P.C. = 101)
(:METHOD TV:NOTIFICATION-MIXIN :PRINT-NOTIFICATION):  (P.C. = 143)
TV:CAREFUL-NOTIFY:  (P.C. = 110)
TV:NOTIFY:  (P.C. = 10)
(:METHOD TV:SHEET :NOTICE):  (P.C. = 47)
(:METHOD TV:SHEET :OUTPUT-HOLD-EXCEPTION):  (P.C. = 57)
TV:SHEET-PREPARE-SHEET-INTERNAL:  (P.C. = 35)
(:METHOD TV:SHEET :TYO):  (P.C. = 43)
TERPRI:  (P.C. = 10)
DBG:SHOW:  (P.C. = 2)
DBG:DEBUGGER-TOP-LEVEL:  (P.C. = 423)
DBG:ENTER-DEBUGGER:  (P.C. = 16)
DBG:DEBUGGER-HANDLER-HANDLE-CONDITION:  (P.C. = 7)
DBG:DEBUGGER-HANDLER:  (P.C. = 12)
(:METHOD CONDITION :SIGNAL):  (P.C. = 114)
(:METHOD CONDITION :COMBINED :SIGNAL):  (P.C. = 21)
SIGNAL:  (P.C. = 10)
DBG:SIGNAL-TRAP:  (P.C. = 3)
SYS:MICROCODE-ERROR-HANDLER:  (P.C. = 101)
(:METHOD TV:NOTIFICATION-MIXIN :PRINT-NOTIFICATION):  (P.C. = 143)
TV:CAREFUL-NOTIFY:  (P.C. = 110)
TV:NOTIFY:  (P.C. = 10)
(:METHOD TV:SHEET :NOTICE):  (P.C. = 47)
(:METHOD TV:SHEET :OUTPUT-HOLD-EXCEPTION):  (P.C. = 57)
TV:SHEET-PREPARE-SHEET-INTERNAL:  (P.C. = 35)
(:METHOD TV:SHEET :TYO):  (P.C. = 43)
TERPRI:  (P.C. = 10)
DBG:SHOW:  (P.C. = 2)
DBG:DEBUGGER-TOP-LEVEL:  (P.C. = 423)
DBG:ENTER-DEBUGGER:  (P.C. = 16)
DBG:DEBUGGER-HANDLER-HANDLE-CONDITION:  (P.C. = 7)
DBG:DEBUGGER-HANDLER:  (P.C. = 12)
(:METHOD CONDITION :SIGNAL):  (P.C. = 114)
(:METHOD CONDITION :COMBINED :SIGNAL):  (P.C. = 21)
SIGNAL:  (P.C. = 10)
DBG:SIGNAL-TRAP:  (P.C. = 3)
SYS:MICROCODE-ERROR-HANDLER:  (P.C. = 101)
(:METHOD TV:NOTIFICATION-MIXIN :PRINT-NOTIFICATION):  (P.C. = 143)
TV:CAREFUL-NOTIFY:  (P.C. = 110)
TV:NOTIFY:  (P.C. = 10)
(:METHOD TV:SHEET :NOTICE):  (P.C. = 47)
(:METHOD TV:SHEET :OUTPUT-HOLD-EXCEPTION):  (P.C. = 57)
TV:SHEET-PREPARE-SHEET-INTERNAL:  (P.C. = 35)
(:METHOD TV:SHEET :TYO):  (P.C. = 43)
TERPRI:  (P.C. = 10)
DBG:SHOW:  (P.C. = 2)
DBG:DEBUGGER-TOP-LEVEL:  (P.C. = 423)
DBG:ENTER-DEBUGGER:  (P.C. = 16)
DBG:DEBUGGER-HANDLER-HANDLE-CONDITION:  (P.C. = 7)
DBG:DEBUGGER-HANDLER:  (P.C. = 12)
(:METHOD CONDITION :SIGNAL):  (P.C. = 114)
(:METHOD CONDITION :COMBINED :SIGNAL):  (P.C. = 21)
SIGNAL:  (P.C. = 10)
DBG:SIGNAL-TRAP:  (P.C. = 3)
SYS:MICROCODE-ERROR-HANDLER:  (P.C. = 101)
(:METHOD TV:NOTIFICATION-MIXIN :PRINT-NOTIFICATION):  (P.C. = 143)
TV:CAREFUL-NOTIFY:  (P.C. = 110)
TV:NOTIFY:  (P.C. = 10)
(:METHOD TV:SHEET :NOTICE):  (P.C. = 47)
(:METHOD TV:SHEET :OUTPUT-HOLD-EXCEPTION):  (P.C. = 57)
TV:SHEET-PREPARE-SHEET-INTERNAL:  (P.C. = 35)
(:METHOD TV:SHEET :TYO):  (P.C. = 43)
TERPRI:  (P.C. = 10)
DBG:SHOW:  (P.C. = 2)
DBG:DEBUGGER-TOP-LEVEL:  (P.C. = 423)
DBG:ENTER-DEBUGGER:  (P.C. = 16)
DBG:DEBUGGER-HANDLER-HANDLE-CONDITION:  (P.C. = 7)
DBG:DEBUGGER-HANDLER:  (P.C. = 12)
(:METHOD CONDITION :SIGNAL):  (P.C. = 114)
(:METHOD CONDITION :COMBINED :SIGNAL):  (P.C. = 21)
SIGNAL:  (P.C. = 10)
DBG:SIGNAL-TRAP:  (P.C. = 3)
SYS:MICROCODE-ERROR-HANDLER:  (P.C. = 101)
(:METHOD TV:NOTIFICATION-MIXIN :PRINT-NOTIFICATION):  (P.C. = 143)
TV:CAREFUL-NOTIFY:  (P.C. = 110)
TV:NOTIFY:  (P.C. = 10)
(:METHOD TV:SHEET :NOTICE):  (P.C. = 47)
(:METHOD TV:SHEET :OUTPUT-HOLD-EXCEPTION):  (P.C. = 57)
TV:SHEET-PREPARE-SHEET-INTERNAL:  (P.C. = 35)
(:METHOD TV:SHEET :TYO):  (P.C. = 43)
TERPRI:  (P.C. = 10)
DBG:SHOW:  (P.C. = 2)
DBG:DEBUGGER-TOP-LEVEL:  (P.C. = 423)
DBG:ENTER-DEBUGGER:  (P.C. = 16)
DBG:DEBUGGER-HANDLER-HANDLE-CONDITION:  (P.C. = 7)
DBG:DEBUGGER-HANDLER:  (P.C. = 12)
(:METHOD CONDITION :SIGNAL):  (P.C. = 114)
(:METHOD CONDITION :COMBINED :SIGNAL):  (P.C. = 21)
SIGNAL:  (P.C. = 10)
DBG:SIGNAL-TRAP:  (P.C. = 3)
SYS:MICROCODE-ERROR-HANDLER:  (P.C. = 101)
(:METHOD TV:NOTIFICATION-MIXIN :PRINT-NOTIFICATION):  (P.C. = 143)
TV:CAREFUL-NOTIFY:  (P.C. = 110)
TV:NOTIFY:  (P.C. = 10)
(:METHOD TV:SHEET :NOTICE):  (P.C. = 47)
(:METHOD TV:SHEET :OUTPUT-HOLD-EXCEPTION):  (P.C. = 57)
TV:SHEET-PREPARE-SHEET-INTERNAL:  (P.C. = 35)
(:METHOD TV:SHEET :TYO):  (P.C. = 43)
TERPRI:  (P.C. = 10)
DBG:SHOW:  (P.C. = 2)
DBG:DEBUGGER-TOP-LEVEL:  (P.C. = 423)
DBG:ENTER-DEBUGGER:  (P.C. = 16)
DBG:DEBUGGER-HANDLER-HANDLE-CONDITION:  (P.C. = 7)
DBG:DEBUGGER-HANDLER:  (P.C. = 12)
(:METHOD CONDITION :SIGNAL):  (P.C. = 114)
(:METHOD CONDITION :COMBINED :SIGNAL):  (P.C. = 21)
SIGNAL:  (P.C. = 10)
DBG:SIGNAL-TRAP:  (P.C. = 3)
SYS:MICROCODE-ERROR-HANDLER:  (P.C. = 101)
(:METHOD TV:NOTIFICATION-MIXIN :PRINT-NOTIFICATION):  (P.C. = 143)
TV:CAREFUL-NOTIFY:  (P.C. = 110)
TV:NOTIFY:  (P.C. = 10)
(:METHOD TV:SHEET :NOTICE):  (P.C. = 47)
(:METHOD TV:SHEET :OUTPUT-HOLD-EXCEPTION):  (P.C. = 57)
TV:SHEET-PREPARE-SHEET-INTERNAL:  (P.C. = 35)
(:METHOD TV:SHEET :TYO):  (P.C. = 43)
TERPRI:  (P.C. = 10)
DBG:SHOW:  (P.C. = 2)
DBG:DEBUGGER-TOP-LEVEL:  (P.C. = 423)
DBG:ENTER-DEBUGGER:  (P.C. = 16)
DBG:DEBUGGER-HANDLER-HANDLE-CONDITION:  (P.C. = 7)
DBG:DEBUGGER-HANDLER:  (P.C. = 12)
(:METHOD CONDITION :SIGNAL):  (P.C. = 114)
(:METHOD CONDITION :COMBINED :SIGNAL):  (P.C. = 21)
SIGNAL:  (P.C. = 10)
DBG:SIGNAL-TRAP:  (P.C. = 3)
SYS:MICROCODE-ERROR-HANDLER:  (P.C. = 101)
(:METHOD TV:NOTIFICATION-MIXIN :PRINT-NOTIFICATION):  (P.C. = 143)
TV:CAREFUL-NOTIFY:  (P.C. = 110)
TV:NOTIFY:  (P.C. = 10)
(:METHOD TV:SHEET :NOTICE):  (P.C. = 47)
(:METHOD TV:SHEET :OUTPUT-HOLD-EXCEPTION):  (P.C. = 57)
TV:SHEET-PREPARE-SHEET-INTERNAL:  (P.C. = 35)
(:METHOD TV:SHEET :TYO):  (P.C. = 43)
TERPRI:  (P.C. = 10)
DBG:SHOW:  (P.C. = 2)
DBG:DEBUGGER-TOP-LEVEL:  (P.C. = 423)
DBG:ENTER-DEBUGGER:  (P.C. = 16)
DBG:DEBUGGER-HANDLER-HANDLE-CONDITION:  (P.C. = 7)
DBG:DEBUGGER-HANDLER:  (P.C. = 12)
(:METHOD CONDITION :SIGNAL):  (P.C. = 114)
(:METHOD CONDITION :COMBINED :SIGNAL):  (P.C. = 21)
SIGNAL:  (P.C. = 10)
DBG:SIGNAL-TRAP:  (P.C. = 3)
SYS:MICROCODE-ERROR-HANDLER:  (P.C. = 101)
(:METHOD TV:NOTIFICATION-MIXIN :PRINT-NOTIFICATION):  (P.C. = 143)
TV:CAREFUL-NOTIFY:  (P.C. = 110)
TV:NOTIFY:  (P.C. = 10)
(:METHOD TV:SHEET :NOTICE):  (P.C. = 47)
(:METHOD TV:SHEET :OUTPUT-HOLD-EXCEPTION):  (P.C. = 57)
TV:SHEET-PREPARE-SHEET-INTERNAL:  (P.C. = 35)
(:METHOD TV:SHEET :TYO):  (P.C. = 43)
TERPRI:  (P.C. = 10)
DBG:SHOW:  (P.C. = 2)
DBG:DEBUGGER-TOP-LEVEL:  (P.C. = 423)
DBG:ENTER-DEBUGGER:  (P.C. = 16)
DBG:DEBUGGER-HANDLER-HANDLE-CONDITION:  (P.C. = 7)
DBG:DEBUGGER-HANDLER:  (P.C. = 12)
(:METHOD CONDITION :SIGNAL):  (P.C. = 114)
(:METHOD CONDITION :COMBINED :SIGNAL):  (P.C. = 21)
SIGNAL:  (P.C. = 10)
DBG:SIGNAL-TRAP:  (P.C. = 3)
SYS:MICROCODE-ERROR-HANDLER:  (P.C. = 101)
(:METHOD TV:NOTIFICATION-MIXIN :PRINT-NOTIFICATION):  (P.C. = 143)
TV:CAREFUL-NOTIFY:  (P.C. = 110)
TV:NOTIFY:  (P.C. = 10)
(:METHOD TV:SHEET :NOTICE):  (P.C. = 47)
(:METHOD TV:SHEET :OUTPUT-HOLD-EXCEPTION):  (P.C. = 57)
TV:SHEET-PREPARE-SHEET-INTERNAL:  (P.C. = 35)
(:METHOD TV:SHEET :TYO):  (P.C. = 43)
TERPRI:  (P.C. = 10)
DBG:SHOW:  (P.C. = 2)
DBG:DEBUGGER-TOP-LEVEL:  (P.C. = 423)
DBG:ENTER-DEBUGGER:  (P.C. = 16)
DBG:DEBUGGER-HANDLER-HANDLE-CONDITION:  (P.C. = 7)
DBG:DEBUGGER-HANDLER:  (P.C. = 12)
(:METHOD CONDITION :SIGNAL):  (P.C. = 114)
(:METHOD CONDITION :COMBINED :SIGNAL):  (P.C. = 21)
SIGNAL:  (P.C. = 10)
DBG:SIGNAL-TRAP:  (P.C. = 3)
SYS:MICROCODE-ERROR-HANDLER:  (P.C. = 101)
(:METHOD TV:NOTIFICATION-MIXIN :PRINT-NOTIFICATION):  (P.C. = 143)
TV:CAREFUL-NOTIFY:  (P.C. = 110)
TV:NOTIFY:  (P.C. = 10)
(:METHOD TV:SHEET :NOTICE):  (P.C. = 47)
(:METHOD TV:SHEET :OUTPUT-HOLD-EXCEPTION):  (P.C. = 57)
TV:SHEET-PREPARE-SHEET-INTERNAL:  (P.C. = 35)
(:METHOD TV:SHEET :TYO):  (P.C. = 43)
TERPRI:  (P.C. = 10)
DBG:SHOW:  (P.C. = 2)
DBG:DEBUGGER-TOP-LEVEL:  (P.C. = 423)
DBG:ENTER-DEBUGGER:  (P.C. = 16)
DBG:DEBUGGER-HANDLER-HANDLE-CONDITION:  (P.C. = 7)
DBG:DEBUGGER-HANDLER:  (P.C. = 12)
(:METHOD CONDITION :SIGNAL):  (P.C. = 114)
(:METHOD CONDITION :COMBINED :SIGNAL):  (P.C. = 21)
SIGNAL:  (P.C. = 10)
DBG:SIGNAL-TRAP:  (P.C. = 3)
SYS:MICROCODE-ERROR-HANDLER:  (P.C. = 101)
(:METHOD TV:NOTIFICATION-MIXIN :PRINT-NOTIFICATION):  (P.C. = 143)
TV:CAREFUL-NOTIFY:  (P.C. = 110)
TV:NOTIFY:  (P.C. = 10)
(:METHOD TV:SHEET :NOTICE):  (P.C. = 47)
(:METHOD TV:SHEET :OUTPUT-HOLD-EXCEPTION):  (P.C. = 57)
TV:SHEET-PREPARE-SHEET-INTERNAL:  (P.C. = 35)
(:METHOD TV:SHEET :TYO):  (P.C. = 43)
TERPRI:  (P.C. = 10)
DBG:SHOW:  (P.C. = 2)
DBG:DEBUGGER-TOP-LEVEL:  (P.C. = 423)
DBG:ENTER-DEBUGGER:  (P.C. = 16)
DBG:DEBUGGER-HANDLER-HANDLE-CONDITION:  (P.C. = 7)
DBG:DEBUGGER-HANDLER:  (P.C. = 12)
(:METHOD CONDITION :SIGNAL):  (P.C. = 114)
(:METHOD CONDITION :COMBINED :SIGNAL):  (P.C. = 21)
SIGNAL:  (P.C. = 10)
DBG:SIGNAL-TRAP:  (P.C. = 3)
SYS:MICROCODE-ERROR-HANDLER:  (P.C. = 101)
(:METHOD TV:NOTIFICATION-MIXIN :PRINT-NOTIFICATION):  (P.C. = 143)
TV:CAREFUL-NOTIFY:  (P.C. = 110)
TV:NOTIFY:  (P.C. = 10)
SI:PROCESS-RUN-FUNCTION-INTERNAL:  (P.C. = 51)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
 1-Apr-85 22:10:04-EST,2208;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 1 Apr 85 22:06-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 206875; Mon 1-Apr-85 20:42:06-EST
Date: Monday, 1 April 1985, 20:42-EST
From: DCP at SCRC-QUABBIN
Sender: DCP at SCRC-QUABBIN
Subject: Release 6
To: Info-LispM at OZ
Supersedes: <850328214657.0.NFEP@NEPONSET.SCRC.Symbolics.COM>
Message-ID: <850401204259.6.NFEP@NEPONSET.SCRC.Symbolics.COM>

[I tried to send this Thursday night, but misspelled info-lispm.  The
examples here have already been answered, but maybe that's good in that
it will allow a more global picture of what I'm trying to say.]

I just (textually) scanned my mailbox, and it appears to me that a lot
of the bug reports are knee-jerk reactions.  For example (sorry not to
include references, I don't have Zmail fired up yet):

LOOP grinding is broken.  No example was provided.  If this is in
reference to the way Zwei now indents LOOP, many consider it a feature.
There is a variable (zwei:*inhibit-fancy-loop-indentation*) that turns
it off.  The variable is in the Release notes I believe (which you
probably don't have yet) and can also be found by disassembling
zwei:indent-loop

DEFF loses when not at top level.  That is true.  DEFF is a special form
that is only intended to be used at top level.  THIS IS JUST ONE EXAMPLE
OF A MUCH LARGER GENERAL CHANGE.  Many things were made more consistent
with the introduction of lexical scoping.  Another things you will find
is that you can't funcall special forms.  For example,
	(funcall #'or a b c)
will no longer work.  It is a mistake it ever did.

There are three things I ask before spouting bug reports: (1) Try to
find some release notes or use the document examiner to scan them (I
know this isn't as good as paper for rapid scanning), (2) Think about
the reasonableness of what used to work and why it may have changed, (3)
compare the behavior of the system with the specifications of Common
Lisp, especially with language issues; if there is a conflict in
semantics between Release 5 and Common Lisp, Common Lisp will often win.
We are not IBM; complete compatibility is not a goal.
 1-Apr-85 22:56:01-EST,5308;000000000000
Received: by MIT-OZ via Chaosnet; 1 Apr 85 22:55-EST
Received: from SCRC-HARLEM by SCRC-VALLECITO via CHAOS with CHAOS-MAIL id 5296; Sun 31-Mar-85 12:51:15-EST
Date: Sunday, 31 March 1985, 12:51-EST
From: Joseph R Goldstone <joseph at SCRC-QUABBIN>
Subject: Logical Pathname Names  Lossage
To: HENRY at OZ, jcma at MIT-MC
cc: BUG-LISPM at OZ
In-Reply-To: <HENRY.12098972959.BABYL@MIT-OZ>
Message-ID: <850331125133.3.JOSEPH@HARLEM.SCRC.Symbolics.COM>
Fonts: CPTFONT, CPTFONTB, TVFONT

    Date: Fri, 29 Mar 1985  17:03 EST
    From: HENRY@MIT-OZ


	Date: Thursday, 28 March 1985, 21:18-EST
	From: jcma at MIT-MC
	To:   BUG-LISPM at OZ
	Re:   Logical Pathname Names  Lossage

	In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.0,
	microcode TMC5-MIC 319, FEP 22, on Lisp Machine James Morrison:

	This is trying to tell me I can't have two logical pathnames pointing at the
	same real pathname.  What kind of lossage is that?

	>>Error: Attempt to translate RL: U;  to PIG:USRD$:<RELATUS.UTILS>.
		 We had previously gotten this pathname as a translation of RL: UTILS; .
		 Files may be overwritten accidentally if you proceed.

    Yes, I encountered this too, and its bad. It was explained to me
    that it is trying to protect you from writing a file on two different
    logical pathnames with the same physical pathname, but

    - It shouldn't complain until I actually try to write such a file, 
    rather than when I set up something only with the potential of doing so.

What about the case where two groups come up with the same logical pathname?

Suppose that the Department of Urban Studies and Planning is doing grant work
on South American rent law.  They want to make their work portable, so they
set up a logical host named RL, and make subdirectories corresponding to the
various countries on the continent.  Each directory is named after the first
letter in the name of the subject country.  Thus RL: B; for Brazilian rent law,
RL: C; for Columbian rent law (RL: CH; for Chile), and RL: U; for Uruguay.

Now suppose the University of San Paulo sees a demo and decides to get some
Lisp Machines and run the system.  While in Cambridge, they also see some
of JCMA's Relatus stuff, are impressed, and convince him to send a tape of
Relatus down to the University.

Three months later, their LispM is wheeled in.  They load JCMA's tape, then
load the tape from DUSP.  Now, both have defined the logical directory RL: U;
for the use of their respective subsystems.  1There was no way (that I can
see, at least) for either JCMA or the folks in DUSP to have gotten a
warning0 1when they defined logical host RL.

0What happens at this point?  Whose copy of SYS: SITE; RL.TRANSLATIONS should
take precedence?  Sorry, I can't think of any good answers.

----------------------------------------------------------------------------

Really, this is just another namespace conflict (in the general sense of the
word).  What if the Mormon Tabernacle bought a LispM with which to handle
their task of tracing all the Mormon bloodlines, and brought together their
code in a system named RelatUs.  Someone at BYU then takes a term at MIT,
sees JCMA's stuff, and brings back a distribution tape.  Similar problem,
even if they don't define logical host RL.

----------------------------------------------------------------------------

    - That's a terribly worded error message since it will scare unsophisticated
    users in cases where its likely that no harm will be done at all.
    At most it should be a warning and not an error.

Well, it should say something closer to "files in the directory
PIG:USRD$:<RELATUS.UTILS> may be overwritten ...".  The entire file system is
most likely not in jeopardy, but the message makes it sound like we're saying:
"Everyone to the lifeboats!  Links and directories first!".

I think it still deserves to be an error.  Does the documentation of logical
pathnames discuss this in any detail?  If there's a good example of this,
then we could suggest they read about it before proceeding.

------------------------------------------------------------------------------

    - Logical pathnames are supposed to provide a measure of independence from
    physical placement of files, and here you go re-introducing a dependency
    on physical location.

No, it's not a dependency on physical location, it's logical location.

------------------------------------------------------------------------------

I wish I could think of a good solution to this problem, but nothing comes
to mind.  At least, nothing workable:

2    As stated in Section 4, every remote program is assigned a number that
    uniquely identifies it throughout the distributed system.  The program
    number space is administered by Xerox Corporation.  To obtain a block
    of program numbers, submit a written request to:
    
      Xerox Corporation
      Office Products Division
      Network Systems Administration Office
      3333 Coyote Hill Road
      Palo Alto, CA 94304
    
    [From: Courier, the Remote Procedure Call Protocol
	   Xerox System Integration Standard 038112
	   December, 1981
    
	   Xerox Corporation
	   Stamford, Connecticut 06904]
 1-Apr-85 23:11:29-EST,4334;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 1 Apr 85 23:11-EST
Received: from MIT-MORRISON by MIT-MC via Chaosnet; 1 APR 85  23:00:23 EST
Date: Monday, 1 April 1985, 22:59-EST
From: jcma@MIT-MC
Subject: TCP bug
To: BUG-LISPM@OZ
Message-ID: <850401225956.6.JCMA@MORRISON.MIT>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.5,
microcode TMC5-MIC 319, FEP 22, on Lisp Machine James Morrison:

I can connect to score from vaxes and mc and even other hosts on
this ethernet, but I have been getting this error.

>>Error: SU-SCORE (at Internet address 10.3.0.11) did not respond to a 103523(:TELNET) request.
         Either the destination does not support that protocol or some gateway could not determine a route to the destination.
While in the function TCP::CHECK-CONNECTION-STATE  TCP::COMPLETE-OPEN-TCB  TCP::OPEN-TCB

TCP::CHECK-CONNECTION-STATE:  (P.C. = 56)
   Arg 0 (TCB): #<TCP connection to SU-SCORE 23 (:TELNET), local port 1035 1707460>
   Local 1 (STATE): :CLOSED
   Local 2 (SUBSTATE): :DESTINATION-UNREACHABLE

TCP::COMPLETE-OPEN-TCB:  (P.C. = 13)
   Arg 0 (TCB): #<TCP connection to SU-SCORE 23 (:TELNET), local port 1035 1707460>
   Arg 1 (TIMEOUT): 1200

TCP::OPEN-TCB:  (P.C. = 156)
   Arg 0 (ACTIVE-P): T
   Arg 1 (HOST): #<TOPS20-HOST SU-SCORE 1154763>
   Arg 2 (PORT): 23
   Arg 3 (LOCAL-PORT): NIL
   Local 3 (LOCAL-PORT): 1035
   Rest arg: (:TIMEOUT 1200)

TCP:OPEN-TCP-STREAM:  (P.C. = 263)
   Arg 0 (HOST): #<TOPS20-HOST SU-SCORE 1154763>
   Arg 1 (PORT): 23
   Arg 2 (LOCAL-PORT): NIL
   Rest arg: NIL

NETI:|MEDIUM-TCP-((NETWORK INTERNET))-G0663|:  (P.C. = 21)
   Arg 0 (SERVICE-ACCESS-PATH): #<SERVICE-ACCESS-PATH LOGIN (TELNET) -- SU-SCORE on INTERNET 15711653>
   Rest arg (CONNECTION-ARGS): NIL

NETI:GET-CONNECTION-FOR-SERVICE-TO-HOST:  (P.C. = 12)
   Arg 0 (SERVICE-ACCESS-PATH): #<SERVICE-ACCESS-PATH LOGIN (TELNET) -- SU-SCORE on INTERNET 15711653>
   Arg 1 (NETWORK): #<INTERNET-NETWORK INTERNET 1140151>
   Arg 2 (IMPLEMENTATION): #<MEDIUM-IMPLEMENTATION 30011444>
   Arg 3 (CONNECTION-ARGS): NIL

NETI:GET-CONNECTION-FOR-SERVICE-ON-MEDIUM:  (P.C. = 262)
   Arg 0 (MEDIUM): #<MEDIUM-DESCRIPTION on INTERNET 15711451>
   Arg 1 (SERVICE-ACCESS-PATH): #<SERVICE-ACCESS-PATH LOGIN (TELNET) -- SU-SCORE on INTERNET 15711653>
   Arg 2 (CONNECTION-ARGS): NIL

NET:GET-CONNECTION-FOR-SERVICE:  (P.C. = 7)
   Arg 0 (SERVICE-ACCESS-PATH): #<SERVICE-ACCESS-PATH LOGIN (TELNET) -- SU-SCORE on INTERNET 15711653>
   Rest arg (CONNECTION-ARGS): NIL

TELNET:INVOKE-LOGIN-SERVICE-1:  (P.C. = 3)
   Arg 0 (SERVICE): #<SERVICE-ACCESS-PATH LOGIN (TELNET) -- SU-SCORE on INTERNET 15711653>
   Arg 1 (PROTOCOL): #<PROTOCOL TELNET 120445137>

TELNET:INVOKE-LOGIN-SERVICE:  (P.C. = 5)
   Arg 0 (SERVICE): #<SERVICE-ACCESS-PATH LOGIN (TELNET) -- SU-SCORE on INTERNET 15711653>

TELNET:INVOKE-SERVICE-LOGIN-WITH-TELNET:  (P.C. = 3)
   Arg 0 (.SERVICE.): #<SERVICE-ACCESS-PATH LOGIN (TELNET) -- SU-SCORE on INTERNET 15711653>

NET:INVOKE-SERVICE-ACCESS-PATH:  (P.C. = 75)
   Arg 0 (SERVICE-ACCESS-PATH): #<SERVICE-ACCESS-PATH LOGIN (TELNET) -- SU-SCORE on INTERNET 15711653>
   Arg 1 (SERVICE-ARGS): (:TERMINAL-SIMULATOR NIL)

NET:INVOKE-SERVICE-ON-HOST:  (P.C. = 226)
   Arg 0 (SERVICE): :LOGIN
   Arg 1 (HOST): #<TOPS20-HOST SU-SCORE 1154763>
   Rest arg (SERVICE-ARGS): (:TERMINAL-SIMULATOR NIL)

TELNET:GET-LOGIN-CONNECTION:  (P.C. = 62)
   Arg 0 (HOST): #<TOPS20-HOST SU-SCORE 1154763>
   Rest arg: NIL

(:METHOD TELNET:NVT-WINDOW :CONNECT):  (P.C. = 17)
   Arg 0 (SELF): #<NVT-WINDOW Terminal 1 600236 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TELNET:NVT-WINDOW -- 10. IV's, 14. FL's 143025751>
   Arg 2 (OPERATION): :CONNECT
   Arg 3 (HOST): #<TOPS20-HOST SU-SCORE 1154763>
   Rest arg (OPTIONS): NIL

(:METHOD TELNET:NVT-WINDOW :TYPEIN-TOP-LEVEL):  (P.C. = 34)
   Arg 0 (SELF): #<NVT-WINDOW Terminal 1 600236 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TELNET:NVT-WINDOW -- 10. IV's, 14. FL's 143025751>
   Arg 2 (OPERATION): :TYPEIN-TOP-LEVEL

SEND:  (P.C. = 6)
   Arg 0 (OBJECT): #<NVT-WINDOW Terminal 1 600236 exposed>
   Arg 1 (MESSAGE-NAME): :TYPEIN-TOP-LEVEL
   Rest arg (ARGUMENTS): NIL

SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
   --Defaulted args:--
   Arg 0 (IGNORE): NIL
 2-Apr-85 09:37:53-EST,900;000000000000
Received: from MIT-SID by MIT-OZ via Chaosnet; 2 Apr 85 09:37-EST
Date: Tuesday, 2 April 1985, 09:36-EST
From: Philip E. Agre <Agre at OZ>
Subject: Am I having fun yet?
To: BUG-LISPM at OZ
Message-ID: <850402093631.2.AGRE@SID.MIT>

In Symbolics 3670 Release 6.0, IP-TCP 29.0, AISite 7.6,
microcode TMC5-IO4-MIC 319, FEP 22, on Lisp Machine Sid Vicious:

I wouldn't bother you with this, but I don't imagine you get 
much praise from this district.  The ephemeral garbage collector
is an incredible win.  My system conses its brains out (almost
all of it in a ten-line pattern matcher and a version of sublis), 
but it only keeps about one cons in a thousand permanently, and 
throws the rest away immediately.  (gc-on :ephemeral t) makes the
difference between having to boot the machine after an hour and
a half and letting it run for 24 hours with no significant paging.

/phil
 2-Apr-85 10:29:26-EST,1232;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 2 Apr 85 10:29-EST
Received: from SCRC-PEACE by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 207108; Tue 2-Apr-85 09:59:01-EST
Date: Tue, 2 Apr 85 09:58 EST
From: Charles Hornig <Hornig@SCRC-STONY-BROOK>
Subject: TCP bug
To: jcma@MIT-MC, BUG-LISPM@OZ
In-Reply-To: <850401225956.6.JCMA@MORRISON.MIT>
Message-ID: <850402095829.2.HORNIG@PEACE.SCRC.Symbolics.COM>

    Date: Monday, 1 April 1985, 22:59-EST
    From: jcma@MIT-MC

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.5,
    microcode TMC5-MIC 319, FEP 22, on Lisp Machine James Morrison:

    I can connect to score from vaxes and mc and even other hosts on
    this ethernet, but I have been getting this error.

    >>Error: SU-SCORE (at Internet address 10.3.0.11) did not respond to a 103523(:TELNET) request.
	     Either the destination does not support that protocol or some gateway could not determine a route to the destination.
    While in the function TCP::CHECK-CONNECTION-STATE  TCP::COMPLETE-OPEN-TCB  TCP::OPEN-TCB

What does the Peek N display under Internet say about routing?  Does it
think the gateway is alive?  What does the Host Routing entry for SCORE
say?
 2-Apr-85 10:29:53-EST,6860;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 2 Apr 85 10:29-EST
Received: from SCRC-PEACE by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 207112; Tue 2-Apr-85 10:05:44-EST
Date: Tue, 2 Apr 85 10:05 EST
From: Charles Hornig <Hornig@SCRC-STONY-BROOK>
Subject: FS:FILE-HOST-USER-ID:
To: John C. Mallery <jcma@MIT-MC>, BUG-LISPM@OZ
In-Reply-To: <850401204154.1.JCMA@MORRISON.MIT>
Message-ID: <850402100506.3.HORNIG@PEACE.SCRC.Symbolics.COM>

    Date: Monday, 1 April 1985, 20:41-EST
    From: John C. Mallery <jcma at MIT-MC>

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.5,
    microcode TMC5-MIC 319, FEP 22, on Lisp Machine James Morrison:

    If this is going to go off and try to connect (which I think is a bad idea),
    it should at least degrade gracefully.

FS:FILE-HOST-USER-ID is now only present for compatibility with previous
releases.  The accepted way to do what you seem to want is to put the
host/uname associations in your namespace USER object.

    >>Error: MC (at Chaos address 1440) did not respond to a FILE 1 request.
    While in the function CHAOS:CHECK-CONNECTION-STATE  CHAOS:WAIT-FOR-CONNECT  CHAOS:CONNECT

    ERROR:  (P.C. = 55)
       Arg 0 (FLAVOR): CHAOS:CHAOS-HOST-NOT-RESPONDING-DURING-CONNECTION
       Rest arg (INIT-OPTIONS): (:CONNECTION #<CHAOS Connection for FILE 1 to MC 120465453> :CONTACT-NAME "FILE 1")
       Local 2 (CONDITION): #<CHAOS-HOST-NOT-RESPONDING-DURING-CONNECTION 30232271>

    CHAOS:CHECK-CONNECTION-STATE:  (P.C. = 117)
       Arg 0 (CONN): #<CHAOS Connection for FILE 1 to MC 120465453>
       Arg 1 (EXPECTED-STATE): CHAOS:OPEN-STATE

    CHAOS:WAIT-FOR-CONNECT:  (P.C. = 13)
       Arg 0 (CONN): #<CHAOS Connection for FILE 1 to MC 120465453>
       Arg 1 (EXPECTED-STATE): CHAOS:OPEN-STATE
       Arg 2 (TIMEOUT): 600

    CHAOS:CONNECT:  (P.C. = 253)
       Arg 0 (HOST): #<ITS-HOST MC 1140425>
       Arg 1 (CONTACT-NAME): "FILE 1"
       Arg 2 (WINDOW-SIZE): 5
       --Defaulted args:--
       Arg 3 (TIMEOUT): 600

    (:METHOD FS:HOST-UNIT :VALIDATE-CONTROL-CONNECTION):  (P.C. = 71)
       Arg 0 (SELF): #<HOST-UNIT 30232152>
       Arg 1 (SELF-MAPPING-TABLE): FS:HOST-UNIT
       Arg 2 (OPERATION): :VALIDATE-CONTROL-CONNECTION
       --Defaulted args:--
       Arg 3 (NO-ERROR-P): NIL

    (:METHOD FS:QFILE-ACCESS-PATH :NEW-HOST-UNIT):  (P.C. = 25)
       Arg 0 (SELF): #<ITS-QFILE-ACCESS-PATH MC using QFILE 30232134>
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:QFILE-ACCESS-PATH -- 4. IV's, 0. FL's 121666066>
       Arg 2 (OPERATION): :NEW-HOST-UNIT

    (:METHOD FS:QFILE-ACCESS-PATH :GET-HOST-UNIT):  (P.C. = 6)
       Arg 0 (SELF): #<ITS-QFILE-ACCESS-PATH MC using QFILE 30232134>
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:QFILE-ACCESS-PATH -- 4. IV's, 0. FL's 121666066>
       Arg 2 (OPERATION): :GET-HOST-UNIT

    (:METHOD FS:QFILE-ACCESS-PATH :AFTER :INIT):  (P.C. = 4)
       Arg 0 (SELF): #<ITS-QFILE-ACCESS-PATH MC using QFILE 30232134>
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:QFILE-ACCESS-PATH -- 4. IV's, 0. FL's 121666066>
       Arg 2 (OPERATION): :INIT
       Arg 3 (IGNORE): #<DTP-LOCATIVE 500442>

    (:METHOD FS:ITS-QFILE-ACCESS-PATH :COMBINED :INIT):  (P.C. = 20)
       Arg 0 (SELF): #<ITS-QFILE-ACCESS-PATH MC using QFILE 30232134>
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:ITS-QFILE-ACCESS-PATH -- 1. IV's, 3. FL's 104473272>
       Arg 2 (.OPERATION.): :INIT
       Rest arg (.DAEMON-CALLER-ARGS.): (#<DTP-LOCATIVE 500442>)

    INSTANTIATE-FLAVOR:  (P.C. = 445)
       Arg 0 (FLAVOR-NAME): FS:ITS-QFILE-ACCESS-PATH
       Arg 1 (INIT-PLIST): #<DTP-LOCATIVE 500442>
       Arg 2 (SEND-INIT-MESSAGE-P): :MAYBE
       --Defaulted args:--
       Arg 3 (RETURN-UNHANDLED-KEYWORDS-P): NIL
       Arg 4 (AREA-TO-CONS-INSTANCE-IN): NIL

    MAKE-INSTANCE:  (P.C. = 6)
       Arg 0 (FLAVOR-NAME): FS:ITS-QFILE-ACCESS-PATH
       Rest arg (INIT-OPTIONS): (:HOST #<ITS-HOST MC 1140425> :SERVICE-ACCESS-PATH #<SERVICE-ACCESS-PATH FILE (QFILE) -- MC on CHAOS 30232041>)

    FS:INVOKE-FILE-SERVICE:  (P.C. = 51)
       Arg 0 (SERVICE-ACCESS-PATH): #<SERVICE-ACCESS-PATH FILE (QFILE) -- MC on CHAOS 30232041>
       Rest arg (IGNORE): NIL

    FS:INVOKE-SERVICE-FILE-WITH-QFILE:  (P.C. = 3)
       Arg 0 (.SERVICE.): #<SERVICE-ACCESS-PATH FILE (QFILE) -- MC on CHAOS 30232041>

    NET:INVOKE-SERVICE-ACCESS-PATH:  (P.C. = 75)
       Arg 0 (SERVICE-ACCESS-PATH): #<SERVICE-ACCESS-PATH FILE (QFILE) -- MC on CHAOS 30232041>
       Arg 1 (SERVICE-ARGS): (NIL NIL)

    NET:INVOKE-SERVICE-ON-HOST:  (P.C. = 226)
       Arg 0 (SERVICE): :FILE
       Arg 1 (HOST): #<ITS-HOST MC 1140425>
       Rest arg (SERVICE-ARGS): (NIL NIL)

    (:METHOD FS:ACTIVE-PATHNAME-HOST :FILE-ACCESS-PATH):  (P.C. = 57)
       Arg 0 (SELF): #<ITS-HOST MC 1140425>
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:ACTIVE-PATHNAME-HOST -- 1. IV's, 0. FL's 104716543>
       Arg 2 (OPERATION): :FILE-ACCESS-PATH
       --Defaulted args:--
       Arg 3 (PATHNAME): NIL
       Arg 4 (OPERATION): NIL
       Arg 5 (DONT-CREATE): NIL

    (:METHOD FS:ACTIVE-PATHNAME-HOST :SET-HOST-USER-ID):  (P.C. = 4)
       Arg 0 (SELF): #<ITS-HOST MC 1140425>
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:ACTIVE-PATHNAME-HOST -- 1. IV's, 0. FL's 104716543>
       Arg 2 (OPERATION): :SET-HOST-USER-ID
       Arg 3 (NEW-USER-ID): "JCMa"

    FS:FILE-HOST-USER-ID:  (P.C. = 5)
       Arg 0 (UID): "JCMa"
       Arg 1 (HOST): #<ITS-HOST MC 1140425>

    SET-HOST-UNAME-ASSOCIATIONS:  (P.C. = 5)  (from PIG:SYS$DISK:[JCMA]LISPMINI)

    HELLO:  (P.C. = 45)  (from PIG:SYS$DISK:[JCMA]LISPMINI)
       Arg 0 (DEFAULT-INIT): T

    SI:*EVAL:  (P.C. = 403)
       Arg 0 (FORM): (HELLO T)
       Local 0 (FORM): NIL
       --Defaulted args:--
       Arg 1 (ENV): NIL
       Arg 2 (HOOK): NIL

    (:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0):  (P.C. = 152)
       Arg 0 (.LEXICAL-ENVIRONMENT-POINTER.): #<DTP-LOCATIVE 500047>

    TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
       Arg 0 (NEW-MODE): :BLAST
       Arg 1 (STREAM): #:TERMINAL-IO-SYN-STREAM
       Arg 2 (CONTINUATION): #<LEXICAL-CLOSURE (:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0) 500054>

    SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
       Arg 0 (NAME): "Lisp Top Level"
       Arg 1 (ABORT-FUNCTION): NIL
       Arg 2 (READ-FUNCTION): NIL
       Arg 3 (EVAL-FUNCTION): NIL
       Arg 4 (PRINT-FUNCTION): NIL

    SI:LISP-COMMAND-LOOP:  (P.C. = 67)
       Arg 0: #<LISP-LISTENER Lisp Listener 1 43200216 exposed>
       Rest arg: (:NAME "Lisp Top Level")

    SI:LISP-TOP-LEVEL1:  (P.C. = 5)
       Arg 0 (STREAM): #<LISP-LISTENER Lisp Listener 1 43200216 exposed>

    SI:LISP-TOP-LEVEL:  (P.C. = 7)
 2-Apr-85 10:40:50-EST,1937;000000000000
Mail-From: CJL created at  2-Apr-85 10:40:30
Date: Tue, 2 Apr 1985  10:40 EST
Message-ID: <CJL.12099951821.BABYL@MIT-OZ>
From: Chris Lindblad <CJL@MIT-OZ>
To:   Charles Hornig <Hornig@SCRC-STONY-BROOK>
Cc:   BUG-LISPM@MIT-OZ, jcma@MIT-MC
Subject: TCP bug
In-reply-to: Msg of 2 Apr 1985  09:58-EST from Charles Hornig <Hornig at SCRC-STONY-BROOK>

    Date: Tuesday, 2 April 1985  09:58-EST
    From: Charles Hornig <Hornig at SCRC-STONY-BROOK>

        Date: Monday, 1 April 1985, 22:59-EST
        From: jcma@MIT-MC

        In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.5,
        microcode TMC5-MIC 319, FEP 22, on Lisp Machine James Morrison:

        I can connect to score from vaxes and mc and even other hosts on
        this ethernet, but I have been getting this error.

        >>Error: SU-SCORE (at Internet address 10.3.0.11) did not respond to a 103523(:TELNET) request.
    	     Either the destination does not support that protocol or some gateway could not determine a route to the destination.
        While in the function TCP::CHECK-CONNECTION-STATE  TCP::COMPLETE-OPEN-TCB  TCP::OPEN-TCB

    What does the Peek N display under Internet say about routing?  Does it
    think the gateway is alive?  What does the Host Routing entry for SCORE
    say?

I suspect this is really because when the world was disk-saved, ai-lcs
(the gateway for 128.52.22.0) was not in the ai site, so when the world
boots and the internet network initializes, it sees no gateways. AI-lcs
is now in the ai site, so worlds disk saved now will work. I have found
that evaluating this makes the internet work, and have made it a patch
that loads whenever any AI machine boots.

  ;;; Reset the internet I'm on so I find gateways
  (LOOP FOR (NET) IN (SEND NET:*LOCAL-HOST* :ADDRESS)
	WHEN (EQ :INTERNET (SEND NET :TYPE))
	  DO (PROGN
	       (SEND NET :RESET)
	       (SEND NET :ENABLE)))
 2-Apr-85 12:31:39-EST,808;000000000000
Received: from MIT-BUGS-BUNNY by MIT-OZ via Chaosnet; 2 Apr 85 12:31-EST
Received: by MIT-BUGS-BUNNY.ARPA (4.12/4.8)
	id AA25276; Tue, 2 Apr 85 12:31:09 est
Date: Tue, 2 Apr 85 12:31:09 est
From: Web Dove <dove@bugs-bunny>
To: bug-lispm@oz
Subject: small ip packets on chaos-unc

Thanks for the tutorial, I was unsure based on staring at bsd
unix code and docs as to what was going on.  In fact, the thing
that needed changing in the tcp code on unix was the max segment
size not the windows.  Thus, TCP:*ip-default-max-packet-size* is the
right variable.

I did find that the unix code could renegotiate the max segment size, so
the code had to constrain such negotiations to small packets.  I assume
that the lispm code does likewise when tcp:*ip-default-max-packet-size*
is reduced.


 2-Apr-85 14:26:57-EST,2771;000000000000
Received: from MIT-ELVIS by MIT-OZ via Chaosnet; 2 Apr 85 14:26-EST
Date: Tuesday, 2 April 1985, 14:25-EST
From: Chris Lindblad <cjl at OZ>
Subject: cp com-hardcopy-file blowout on press printers
To: BUG-LISPM at OZ
Message-ID: <850402142531.2.CJL@ELVIS.MIT.EDU>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.5,
Experimental NS 23.61, microcode TMC5-MIC 319, FEP 22, on Lisp Machine Elvis Presley:

Trying to use cp command hardcopy file to the dover blows out.  I would
like someone to let me know a fix that I can make because I can't try to
fix it here, as apparently the source to si:com-hardcopy-file and
press:decode-font-name are such valuable trade secrets of symbolics that
they are not on the sources distribution. I know Gumby reported this bug
before, but there has been no response, and I wanted to emphasize that
this is really broken: I appears that nobody ever tried testing
hardcopying to a press printer before release 6 was distributed.

>>Error: Cannot coerce ("LPT" "" 10) into a string
While in the function STRING  STRING-REVERSE-SEARCH-SET  PRESS:DECODE-FONT-NAME

STRING:  (P.C. = 113)
   Arg 0 (X): ("LPT" "" 10)
   Local 1 (STR): "Cannot coerce ~S into a string"

STRING-REVERSE-SEARCH-SET:  (P.C. = 21)
   Arg 0 (CHAR-SET): (48 49 50 51 52 53 54 55 56 57)
   Arg 1 (STRING): ("LPT" "" 10)
   --Defaulted args:--
   Arg 2 (FROM): NIL
   Arg 3 (TO): 0

PRESS:DECODE-FONT-NAME:  (P.C. = 7)
   Arg 0 (STRING): ("LPT" "" 10)

(:PROPERTY SI:COM-HARDCOPY-FILE SI:CP-FUNCTION):  (P.C. = 104)
   Arg 0 (FILE): (#<LMFS-PATHNAME "B:>cjl>Lispm-Init.lisp">)
   Arg 1 (BANNER-MESSAGE): NIL
   Arg 2 (COPIES): 1
   Arg 3 (DELETE): NIL
   Arg 4 (FILE-TYPES): :USE-CANONICAL-TYPE
   Arg 5 (FONTS): (:DEFAULT-FONT)
   Arg 6 (FORMAT): :PORTRAIT
   Arg 7 (PRINTER): #<PRESS-PRINTER TREMONT-VIA-MC 1141274>
   Arg 8 (QUERY): :NO
   Arg 9 (RUNNING-HEAD): :NUMBERED

SI:COM-HARDCOPY-FILE:  (P.C. = 60)
   Arg 0 (FILE): (#<LMFS-PATHNAME "B:>cjl>Lispm-Init.lisp">)
   Rest arg: NIL

SI:*EVAL:  (P.C. = 403)
   Arg 0 (FORM): (SI:COM-HARDCOPY-FILE (QUOTE (#<LMFS-PATHNAME "B:>cjl>Lispm-Init.lisp">)))
   Local 0 (FORM): NIL
   --Defaulted args:--
   Arg 1 (ENV): NIL
   Arg 2 (HOOK): NIL

(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0):  (P.C. = 152)
   Arg 0 (.LEXICAL-ENVIRONMENT-POINTER.): #<DTP-LOCATIVE 500047>

TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
   Arg 0 (NEW-MODE): :BLAST
   Arg 1 (STREAM): #:TERMINAL-IO-SYN-STREAM
   Arg 2 (CONTINUATION): #<LEXICAL-CLOSURE (:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0) 500054>

Rest of stack:
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
SI:LISP-COMMAND-LOOP:  (P.C. = 67)
SI:LISP-TOP-LEVEL1:  (P.C. = 5)
SI:LISP-TOP-LEVEL:  (P.C. = 7)
 2-Apr-85 14:30:28-EST,3863;000000000000
Received: from MIT-ELVIS by MIT-OZ via Chaosnet; 2 Apr 85 14:30-EST
Date: Tuesday, 2 April 1985, 14:29-EST
From: Chris Lindblad <cjl at OZ>
Subject: Hardcopying from ZWEI to the dover doesn't work either.
To: BUG-LISPM at OZ
Message-ID: <850402142914.3.CJL@ELVIS.MIT.EDU>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.5,
Experimental NS 23.61, microcode TMC5-MIC 319, FEP 22, on Lisp Machine Elvis Presley:

m-x Hardcopy File b:>cjl>Lispm-Init.lisp
to tremont-via-mc

>>Trap: The first argument given to the AR-1 instruction, NIL, was not an array.
While in the function (:METHOD PRESS:PRESS-STREAM :CHARACTER-WIDTH)  (:METHOD SI:HARDCOPY-STREAM-FONT-MIXIN :UPDATE-SPACE-WIDTH)  (:METHOD SI:HARDCOPY-STREAM-FONT-MIXIN :AFTER :INIT)

(:METHOD PRESS:PRESS-STREAM :CHARACTER-WIDTH):  (P.C. = 14)
   Arg 0 (SELF): #<PRESS-STREAM 25501010>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor PRESS:PRESS-STREAM -- 33. IV's, 3. FL's 24504770>
   Arg 2 (OPERATION): :CHARACTER-WIDTH
   Arg 3 (CHAR): 32

(:METHOD SI:HARDCOPY-STREAM-FONT-MIXIN :UPDATE-SPACE-WIDTH):  (P.C. = 5)
   Arg 0 (SELF): #<PRESS-STREAM 25501010>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:HARDCOPY-STREAM-FONT-MIXIN -- 7. IV's, 0. FL's 24504150>
   Arg 2 (OPERATION): :UPDATE-SPACE-WIDTH

(:METHOD SI:HARDCOPY-STREAM-FONT-MIXIN :AFTER :INIT):  (P.C. = 224)
   Arg 0 (SELF): #<PRESS-STREAM 25501010>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:HARDCOPY-STREAM-FONT-MIXIN -- 7. IV's, 0. FL's 24504150>
   Arg 2 (OPERATION): :INIT
   Arg 3 (PLIST): #<DTP-LOCATIVE 21540306>

(:METHOD PRESS:PRESS-STREAM :COMBINED :INIT):  (P.C. = 26)
   Arg 0 (SELF): #<PRESS-STREAM 25501010>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor PRESS:PRESS-STREAM -- 33. IV's, 3. FL's 24504770>
   Arg 2 (.OPERATION.): :INIT
   Rest arg (.DAEMON-CALLER-ARGS.): (#<DTP-LOCATIVE 21540306>)

INSTANTIATE-FLAVOR:  (P.C. = 445)
   Arg 0 (FLAVOR-NAME): PRESS:PRESS-STREAM
   Arg 1 (INIT-PLIST): #<DTP-LOCATIVE 21540306>
   Arg 2 (SEND-INIT-MESSAGE-P): :MAYBE
   --Defaulted args:--
   Arg 3 (RETURN-UNHANDLED-KEYWORDS-P): NIL
   Arg 4 (AREA-TO-CONS-INSTANCE-IN): NIL

MAKE-INSTANCE:  (P.C. = 6)
   Arg 0 (FLAVOR-NAME): PRESS:PRESS-STREAM
   Rest arg (INIT-OPTIONS): (:DEVICE #<PRESS-PRINTER TREMONT-VIA-MC 1141274> :OUTPUT-STREAM #<FILE-OUTPUT-BINARY-STREAM "MC: .DOVR.; CJL >" 25500770> :NEW-PAGE-HOOK #<DTP-COMPILED-FUNCTION SI:HARDCOPY-PRINT-PAGE-HEADING 47371314> :HEADER-FONT-P T :PAGE-NUMBER 0 ...)
   Local 1 (INIT-OPTIONS): (:MARGINS (2000 1270 2000 1270) :DEVICE #<PRESS-PRINTER TREMONT-VIA-MC 1141274> :OUTPUT-STREAM #<FILE-OUTPUT-BINARY-STREAM "MC: .DOVR.; CJL >" 25500770> :NEW-PAGE-HOOK #<DTP-COMPILED-FUNCTION SI:HARDCOPY-PRINT-PAGE-HEADING 47371314> :HEADER-FONT-P T ...)

(:METHOD SI:HARDCOPY-DEVICE-MIXIN :MAKE-HARDCOPY-STREAM):  (P.C. = 124)
   Arg 0 (SELF): #<PRESS-PRINTER TREMONT-VIA-MC 1141274>
   Arg 1 (SELF-MAPPING-TABLE): SI:HARDCOPY-DEVICE-MIXIN
   Arg 2 (OPERATION): :MAKE-HARDCOPY-STREAM
   Arg 3 (OPTIONS): (:NEW-PAGE-HOOK #<DTP-COMPILED-FUNCTION SI:HARDCOPY-PRINT-PAGE-HEADING 47371314> :HEADER-FONT-P T :PAGE-NUMBER 0 :BANNER-FILE-NAME "B:>cjl>Lispm-Init.lisp.1" :BANNER-CREATION-DATE 2685328047)

SI:MAKE-HARDCOPY-STREAM:  (P.C. = 52)
   Arg 0 (DEVICE): #<PRESS-PRINTER TREMONT-VIA-MC 1141274>
   Rest arg (OPTIONS): (:NEW-PAGE-HOOK #<DTP-COMPILED-FUNCTION SI:HARDCOPY-PRINT-PAGE-HEADING 47371314> :HEADER-FONT-P T :PAGE-NUMBER 0 :BANNER-FILE-NAME "B:>cjl>Lispm-Init.lisp.1" :BANNER-CREATION-DATE 2685328047)

Rest of stack:
SI:HARDCOPY-FROM-STREAM:  (P.C. = 137)
SI:HARDCOPY-FILE:  (P.C. = 127)
ZWEI:DIRED-HARDCOPY-FILE-1:  (P.C. = 51)
ZWEI:HARDCOPY-FILE-BACKGROUND:  (P.C. = 25)
ZWEI:HARDCOPY-FILE-BACKGROUND:  (P.C. = 16)
SI:PROCESS-RUN-FUNCTION-INTERNAL:  (P.C. = 52)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
 2-Apr-85 14:36:33-EST,2128;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 2 Apr 85 14:36-EST
Date: 2 April 1985 14:36-EST
From: David Vinayak Wallace <GUMBY @ MIT-MC>
Subject:  Logical Pathname Names  Lossage
To: DCP @ SCRC-QUABBIN
cc: JCMA @ MIT-MC, BUG-LISPM @ MIT-OZ, HENRY @ MIT-OZ,
    RWK @ SCRC-QUABBIN
In-reply-to: Msg of 1 Apr 1985 20:38-EST from David C. Plummer in disguise <DCP at SCRC-QUABBIN>

    Date: Monday, 1 April 1985, 20:38-EST
    From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>

        Date: Fri, 29 Mar 1985  17:03 EST
        From: HENRY@MIT-OZ

            Date: Thursday, 28 March 1985, 21:18-EST
            From: jcma at MIT-MC

            This is trying to tell me I can't have two logical pathnames
            pointing at the same real pathname.  What kind of lossage is that?

        Yes, I encountered this too, and its bad. It was explained to me
        that it is trying to protect you from writing a file on two different
        logical pathnames with the same physical pathname, but

        - It shouldn't complain until I actually try to write such a file, 
    	rather than when I set up something only with the potential of
    	doing so.

    In other words, you would like to be given a false sense of security,
    and then when the time comes to actually DO something you are forbidden
    because of something you did 2 hours ago?  I think that is really what
    you are saying, and I hope you really don't mean it.  Isn't it better to
    let you know as soon as possible when you are setting yourself up for
    trouble so you can correct the root cause of the problem?

Why must :BACK-TRANSLATED-PATHNAME (or whatever it's called) be allowed?  I
think of logical pathnames as links implemented at the user end rather than
the filesystem end.  No filesystem I know of allows both links and "what is
this file's name?" once a :TRUENAME has been done.

I think the right thing is to disallow the back-translation of logical
pathnames.  If you want to remember the name by which a file was accessed
then you're going to have to remember it yourself.
 2-Apr-85 15:01:35-EST,504;000000000000
Received: from SCC-WAIKATO by MIT-OZ via Chaosnet; 2 Apr 85 15:01-EST
Received: from SCRC-EUPHRATES by WAIKATO via CHAOS with CHAOS-MAIL id 90567; Tue 2-Apr-85 13:10:30-EST
Date: Tuesday, 2 April 1985, 13:11-EST
From: David A. Moon <Moon at SCRC-STONY-BROOK>
Subject: Am I having fun yet?
To: Philip E. Agre <Agre at OZ>
cc: BUG-LISPM at OZ
In-Reply-To: <850402093631.2.AGRE@SID.MIT>
Message-ID: <850402131115.3.MOON@EUPHRATES.SCRC.Symbolics.COM>

Thank you.  I like to see people having fun.
 2-Apr-85 15:33:21-EST,1073;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 2 Apr 85 15:32-EST
Received: from SCRC-PEACE by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 207159; Tue 2-Apr-85 11:07:25-EST
Date: Tue, 2 Apr 85 11:06 EST
From: Charles Hornig <Hornig@SCRC-STONY-BROOK>
Subject: internet/chaos usage
To: Webster Dove <dove@MIT-BUGS-BUNNY>, BUG-LISPM@OZ
In-Reply-To: <850330144238.2.DOVE@TWEETY-PIE.MIT>
Message-ID: <850402110648.5.HORNIG@PEACE.SCRC.Symbolics.COM>

    Date: Saturday, 30 March 1985, 14:42-EST
    From: Webster Dove <dove at MIT-BUGS-BUNNY>

    In Symbolics 3600 Release 6.0 Beta IIc, microcode TMC5-FPA-MIC 315,
    FEP 17, with UTIL, on Lisp Machine Tweety Pie:

    With the machines able to use both nets, and with one of them being down
    frequently (e.g. chaos to prancer), is it possible for the machine to
    include the status of each net in determining the best path to a host?

    For example, if prancer is down, it seems that the machine should
    recognize that ip-tcp is the only way to get namespace service from
    riv
 2-Apr-85 17:14:01-EST,4017;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 2 Apr 85 17:13-EST
Received: from SANCHO-PANZA by MIT-MC via Chaosnet; 2 APR 85  17:13:03 EST
Date: Tuesday, 2 April 1985, 17:11-EST
From: Christopher Eliot <CRE at SANCHO-PANZA>
Subject: Bug?
To: BUG-LISPM at OZ
Message-ID: <850402171156.2.CRE@SANCHO-PANZA.MIT>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, microcode TMC5-MIC 319,
FEP 18, on Lisp Machine Sancho Panza:

This used to work.

>>Error: No font MEDFNB found.
While in the function TV:SCREEN-PARSE-FONT-DESCRIPTOR  TV:SCREEN-PARSE-FONT-DESCRIPTOR  (:METHOD TV:SCREEN :PARSE-FONT-DESCRIPTOR)

TV:SCREEN-PARSE-FONT-DESCRIPTOR:  (P.C. = 44)
   Arg 0 (FD): MEDFNB
   Arg 1 (TYPE): FONTS:CPT-FONT
   Arg 2 (DONT-LOAD-P): T
   Local 3 (FONT): NIL

TV:SCREEN-PARSE-FONT-DESCRIPTOR:  (P.C. = 102)
   Arg 0 (FD): MEDFNB
   Arg 1 (TYPE): FONTS:CPT-FONT
   --Defaulted args:--
   Arg 2 (DONT-LOAD-P): NIL

(:METHOD TV:SCREEN :PARSE-FONT-DESCRIPTOR):  (P.C. = 4)
   Arg 0 (SELF): #<MAIN-SCREEN Main Screen 43200000 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:SCREEN -- 6. IV's, 1. FL's 104144230>
   Arg 2 (OPERATION): :PARSE-FONT-DESCRIPTOR
   Arg 3 (FD): MEDFNB

(:DEFUN-METHOD TV:PARSE-LABEL-SPEC):  (P.C. = 140)
   Arg 0 (SELF): #<HIGHLIGHTING-COMMAND-MENU-PANE NIL 5741414 deactivated>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:LABEL-MIXIN -- 1. IV's, 1. FL's 27164570>
   Arg 2 (OPERATION): :PARSE-LABEL-SPEC
   Arg 3 (SPEC): (:STRING "Editing Commands" :FONT MEDFNB)
   Local 3 (SPEC): (NIL NIL NIL NIL MEDFNB "Editing Commands")
   Arg 4 (LM): 2
   Arg 5 (TM): 2
   Arg 6 (RM): 2
   Arg 7 (BM): 2
   Arg 8 (TOP-P): T

(:METHOD TV:TOP-BOX-LABEL-MIXIN :PARSE-LABEL-SPEC):  (P.C. = 16)
   Arg 0 (SELF): #<HIGHLIGHTING-COMMAND-MENU-PANE NIL 5741414 deactivated>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:TOP-BOX-LABEL-MIXIN -- 0. IV's, 1. FL's 27167742>
   Arg 2 (OPERATION): :PARSE-LABEL-SPEC
   Arg 3 (SPEC): (:STRING "Editing Commands" :FONT MEDFNB)
   Arg 4 (LM): 2
   Arg 5 (TM): 2
   Arg 6 (RM): 2
   Arg 7 (BM): 2

(:DEFUN-METHOD TV:ADJUST-MARGINS):  (P.C. = 73)
   Arg 0 (SELF): #<HIGHLIGHTING-COMMAND-MENU-PANE NIL 5741414 deactivated>
   Arg 1 (SELF-MAPPING-TABLE): TV:ESSENTIAL-WINDOW
   Arg 2 (INSTANCE-VARIABLE): TV:LABEL
   Arg 3 (PARSING-MESSAGE): :PARSE-LABEL-SPEC
   Arg 4 (PLIST): #<DTP-LOCATIVE 500415>
   Arg 5 (PLIST-KEYWORD): NIL

(:METHOD TV:ESSENTIAL-LABEL-MIXIN :BEFORE :INIT):  (P.C. = 12)
   Arg 0 (SELF): #<HIGHLIGHTING-COMMAND-MENU-PANE NIL 5741414 deactivated>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:ESSENTIAL-LABEL-MIXIN -- 1. IV's, 1. FL's 27164576>
   Arg 2 (OPERATION): :INIT
   Arg 3 (INIT-PLIST): #<DTP-LOCATIVE 500415>

(:METHOD HIGHLIGHTING-COMMAND-MENU-PANE :COMBINED :INIT):  (P.C. = 41)
   Arg 0 (SELF): #<HIGHLIGHTING-COMMAND-MENU-PANE NIL 5741414 deactivated>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor HIGHLIGHTING-COMMAND-MENU-PANE -- 0. IV's, 11. FL's 27167666>
   Arg 2 (.OPERATION.): :INIT
   Rest arg (.DAEMON-CALLER-ARGS.): (#<DTP-LOCATIVE 500415>)

Rest of stack:
TV:MAKE-WINDOW:  (P.C. = 66)
(:METHOD TV:CONSTRAINT-FRAME-WITH-SHARED-IO-BUFFER :CREATE-PANE):  (P.C. = 12)
(:DEFUN-METHOD TV:CONSTRAINT-FRAME-WINDOWS):  (P.C. = 11)
(:DEFUN-METHOD TV:CONSTRAINT-FRAME-PROCESS-CONSTRAINTS):  (P.C. = 20)
(:METHOD TV:BASIC-CONSTRAINT-FRAME :AFTER :INIT):  (P.C. = 16)
(:METHOD XS :COMBINED :INIT):  (P.C. = 74)
TV:MAKE-WINDOW:  (P.C. = 66)
TV:SELECT-OR-CREATE-WINDOW-OF-FLAVOR:  (P.C. = 7)
XS:  (P.C. = 6)  (from SANCHO:>qsim>sedit)
EXAMPLES-DECODE-VALUE:  (P.C. = 157)  (from SANCHO:>qsim>examples)
EXAMPLES:  (P.C. = 115)  (from SANCHO:>qsim>examples)
SI:*EVAL:  (P.C. = 403)
(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0):  (P.C. = 152)
TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
SI:LISP-COMMAND-LOOP:  (P.C. = 67)
SI:LISP-TOP-LEVEL1:  (P.C. = 5)
SI:LISP-TOP-LEVEL:  (P.C. = 7)
 2-Apr-85 19:15:53-EST,1440;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 2 Apr 85 19:15-EST
Received: from SCRC-PEACE by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 207159; Tue 2-Apr-85 11:07:25-EST
Date: Tue, 2 Apr 85 11:06 EST
From: Charles Hornig <Hornig@SCRC-STONY-BROOK>
Subject: internet/chaos usage
To: Webster Dove <dove@MIT-BUGS-BUNNY>, BUG-LISPM@OZ
In-Reply-To: <850330144238.2.DOVE@TWEETY-PIE.MIT>
Message-ID: <850402110648.5.HORNIG@PEACE.SCRC.Symbolics.COM>

    Date: Saturday, 30 March 1985, 14:42-EST
    From: Webster Dove <dove at MIT-BUGS-BUNNY>

    In Symbolics 3600 Release 6.0 Beta IIc, microcode TMC5-FPA-MIC 315,
    FEP 17, with UTIL, on Lisp Machine Tweety Pie:

    With the machines able to use both nets, and with one of them being down
    frequently (e.g. chaos to prancer), is it possible for the machine to
    include the status of each net in determining the best path to a host?

    For example, if prancer is down, it seems that the machine should
    recognize that ip-tcp is the only way to get namespace service from
    riverside, rather than doggedly trying to use chaos to do it.

    I appreciate that this may be extremely hard, but I thought I should
    bring it to someones attention now that ip packets use a different route
    than the microwave link.

Some applications (like Terminal) can already do this.  We are not
likely to make any sweeping changes in this area.


 2-Apr-85 20:18:32-EST,865;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 2 Apr 85 20:18-EST
Received: from MIT-YOGI by MIT-OZ via Chaosnet; 2 Apr 85 20:13-EST
Date: Tuesday, 2 April 1985, 20:12-EST
From: Niels Lauritzen <SR.LAURITZEN at MIT-SPEECH>
Subject: dired
To: BUG-LISPM at MIT-SPEECH
Message-ID: <850402201216.1.LAURITZEN@MIT-YOGI.MIT.EDU>

In Symbolics 3670 Release 6.0, IP-TCP 29.0, Experimental ZOO 5.0,
Experimental Spire-Macros 5.0, Experimental Attribute 5.0,
Experimental Compute 5.0, Experimental Audio 4.0,
Experimental Speech-Attributes 4.0, Experimental Display 6.0,
Experimental Speech-Layouts 6.0, Experimental Prtout 4.0,
Experimental Versatec 5.0, Experimental Spire 16.0, ZOO-SPIRE 1.0,
microcode TMC5-IO4-FPA-MIC 319, on Lisp Machine Yogi:

how about formatting the dired typeout? All that junk with different length
filenames looks terrible.

 2-Apr-85 20:22:54-EST,1937;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 2 Apr 85 20:22-EST
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 207717; Tue 2-Apr-85 19:55:52-EST
Date: Tuesday, 2 April 1985, 19:56-EST
From: David A. Moon <Moon at SCRC-STONY-BROOK>
Subject: cp com-hardcopy-file blowout on press printers
To: Chris Lindblad <cjl at OZ>
cc: BUG-LISPM at OZ, bug-cp at SCRC-STONY-BROOK
In-Reply-To: <850402142531.2.CJL@ELVIS.MIT.EDU>
Message-ID: <850402195635.9.MOON@EUPHRATES.SCRC.Symbolics.COM>

    Date: Tuesday, 2 April 1985, 14:25-EST
    From: Chris Lindblad <cjl at OZ>

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.5,
    Experimental NS 23.61, microcode TMC5-MIC 319, FEP 22, on Lisp Machine Elvis Presley:

    Trying to use cp command hardcopy file to the dover blows out...

    >>Error: Cannot coerce ("LPT" "" 10) into a string
    While in the function STRING  STRING-REVERSE-SEARCH-SET  PRESS:DECODE-FONT-NAME

Change this locally to whatever it is really supposed to be for your
printer.  You are the proud owner of the only one (two?) of these
printers in the world, so it's probably up to you to figure out what the
font name it really wants is.  I'd try "LPT10" first.  Presumably you'll
have to patch the DEFAULT-FONT and HEADER-FONT instance variables of the
already-created PRINTER objects, unless you load the patch into a
distribution world before setting its site.

PRESS:  ;from SYS:HARDCOPY;PRESS
(DEFFLAVOR PRESS-HARDCOPY-DEVICE-MIXIN () (SI:MULTIPLE-FONT-HARDCOPY-DEVICE-MIXIN)
  (:DEFAULT-INIT-PLIST :DEFAULT-FONT '("LPT" "" 10.) :HEADER-FONT '("LPT" "" 10.)))

Maybe Symbolics would be better off giving MIT back a copy of the Dover support we got
from MIT and then throwing it away, since MIT is the only place that has a Dover with
Lisp Machines talking to it, and we're not in a position to do a good job of supporting
Dovers.
 2-Apr-85 20:58:07-EST,4279;000000000000
Received: from MIT-DUANE by MIT-OZ via Chaosnet; 2 Apr 85 20:58-EST
Date: Tuesday, 2 April 1985, 20:56-EST
From: Alan Bawden <Alan at MIT-MC>
Subject: crufty
To: BUG-LISPM at OZ
Message-ID: <850402205618.1.ALAN@DUANE.MIT.EDU>

In Symbolics 3670 Release 6.0, IP-TCP 29.0, AISite 7.5,
microcode TMC5-IO4-MIC 319, FEP 22, on Lisp Machine Duane Allman:

I guess something that my init files does has been declared incorrect.
Funny, I was just reading in my init file when this happened.  I'm not sure
how I'm going to fix this given that it happens whenever I do anything in
the editor.  I guess I'll have to use something other than a Lisp Machine
to fix up my init file for Release 6.

>>Error: :SCM is an invalid canonical type for MC (a ITS host).
While in the function (:METHOD FS:PATHNAME :TYPE-FOR-NEW-CANONICAL-TYPE)  (:METHOD FS:PATHNAME :NEW-DEFAULT-PATHNAME)  (:INTERNAL (:INTERNAL (:METHOD FS:ITS-PATHNAME :COMBINED :NEW-DEFAULT-PATHNAME) 0) 0)

(:METHOD FS:PATHNAME :TYPE-FOR-NEW-CANONICAL-TYPE):  (P.C. = 65)
   Arg 0 (SELF): #<ITS-PATHNAME "MC: ALAN; FOO >">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:PATHNAME -- 8. IV's, 1. FL's 105226430>
   Arg 2 (OPERATION): :TYPE-FOR-NEW-CANONICAL-TYPE
   Arg 3 (CANONICAL-TYPE): :SCM
   Arg 4 (ORIGINAL-TYPE): NIL
   Arg 5 (ORIGINAL-TYPE-P): NIL

(:METHOD FS:PATHNAME :NEW-DEFAULT-PATHNAME):  (P.C. = 166)
   Arg 0 (SELF): #<ITS-PATHNAME "MC: ALAN; FOO >">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:PATHNAME -- 8. IV's, 1. FL's 105226430>
   Arg 2 (OPERATION): :NEW-DEFAULT-PATHNAME
   Rest arg (OPTIONS): (:TYPE :SCM)

(:INTERNAL (:INTERNAL (:METHOD FS:ITS-PATHNAME :COMBINED :NEW-DEFAULT-PATHNAME) 0) 0):  (P.C. = 11)
   Arg 0 (SELF): #<ITS-PATHNAME "MC: ALAN; FOO >">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:ITS-PATHNAME -- 5. IV's, 6. FL's 122660316>
   Arg 2 (.OPERATION.): :NEW-DEFAULT-PATHNAME
   Rest arg (.DAEMON-CALLER-ARGS.): (:TYPE :SCM)

(:METHOD FS:PATHNAME :WHOPPER :NEW-DEFAULT-PATHNAME):  (P.C. = 64)
   Arg 0 (SELF): #<ITS-PATHNAME "MC: ALAN; FOO >">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:PATHNAME -- 8. IV's, 1. FL's 105226430>
   Arg 2 (.WHOPPER-CONTINUATION.): #<DTP-COMPILED-FUNCTION (:INTERNAL (:INTERNAL (:METHOD FS:ITS-PATHNAME :COMBINED :NEW-DEFAULT-PATHNAME) 0) 0) 11540756>
   Arg 3 (.OLD-SELF-MAPPING-TABLE.): #<Map to flavor FS:ITS-PATHNAME -- 5. IV's, 6. FL's 122660316>
   Arg 4 (.OPERATION.): :NEW-DEFAULT-PATHNAME
   Rest arg (OPTIONS): (:TYPE :SCM)

(:INTERNAL (:METHOD FS:ITS-PATHNAME :COMBINED :NEW-DEFAULT-PATHNAME) 0):  (P.C. = 13)
   Arg 0 (SELF): #<ITS-PATHNAME "MC: ALAN; FOO >">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:ITS-PATHNAME -- 5. IV's, 6. FL's 122660316>
   Arg 2 (.OPERATION.): :NEW-DEFAULT-PATHNAME
   Rest arg (.DAEMON-CALLER-ARGS.): (:TYPE :SCM)

(:METHOD FS:ITS-PATHNAME-MIXIN :WHOPPER :NEW-DEFAULT-PATHNAME):  (P.C. = 35)
   Arg 0 (SELF): #<ITS-PATHNAME "MC: ALAN; FOO >">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:ITS-PATHNAME-MIXIN -- 7. IV's, 1. FL's 105226441>
   Arg 2 (.WHOPPER-CONTINUATION.): #<DTP-COMPILED-FUNCTION (:INTERNAL (:METHOD FS:ITS-PATHNAME :COMBINED :NEW-DEFAULT-PATHNAME) 0) 11540743>
   Arg 3 (.OLD-SELF-MAPPING-TABLE.): #<Map to flavor FS:ITS-PATHNAME -- 5. IV's, 6. FL's 122660316>
   Arg 4 (.OPERATION.): :NEW-DEFAULT-PATHNAME
   Rest arg (OPTIONS): (:TYPE :SCM)

(:METHOD FS:ITS-PATHNAME :COMBINED :NEW-DEFAULT-PATHNAME):  (P.C. = 13)
   Arg 0 (SELF): #<ITS-PATHNAME "MC: ALAN; FOO >">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:ITS-PATHNAME -- 5. IV's, 6. FL's 122660316>
   Arg 2 (.OPERATION.): :NEW-DEFAULT-PATHNAME
   Rest arg (.DAEMON-CALLER-ARGS.): (:TYPE :SCM)

ZWEI:PATHNAME-DEFAULTS:  (P.C. = 107)
   --Defaulted args:--
   Arg 0 (DEFAULTS): ((NIL))

Rest of stack:
ZWEI:COM-FIND-FILE:  (P.C. = 3)
ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
ZWEI:MAKE-EXTENDED-COMMAND-INTERNAL:  (P.C. = 107)
Closure of ZWEI:MAKE-EXTENDED-COMMAND-INTERNAL:
ZWEI:COMMAND-EXECUTE:  (P.C. = 57)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 233)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 60)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 51)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
 2-Apr-85 21:50:04-EST,939;000000000000
Received: by MIT-OZ via Chaosnet; 2 Apr 85 21:50-EST
Received: from SCRC-NEPONSET by SCRC-VALLECITO via CHAOS with CHAOS-MAIL id 5571; Tue 2-Apr-85 14:22:16-EST
Date: Tuesday, 2 April 1985, 14:23-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: Namespace loses again.  So do I.
To: Patrick A. O'Donnell <PAO at MIT-EECS>, BUG-LISPM at OZ
In-Reply-To: The message of 1 Apr 85 21:56-EST from Patrick A. O'Donnell <PAO at MIT-EECS>
Message-ID: <850402142308.3.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Monday, 1 April 1985, 21:56-EST
    From: Patrick A. O'Donnell <PAO at MIT-EECS>

    In Symbolics 3600 System 242.356, Hardcopy 20.10, NS 19.74, FEP 18, on Lisp Machine Robot-2:

    I wonder just how many man-hours have been lost here due to the losing
    namespace system.  I'm currently working on my second one today.
    Thank you, Symbolics.

I believe Release 6 has been released to MIT.
 2-Apr-85 23:12:50-EST,3591;000000000000
Received: from MIT-DUANE by MIT-OZ via Chaosnet; 2 Apr 85 23:12-EST
Date: Tuesday, 2 April 1985, 23:11-EST
From: Alan Bawden <Alan at MIT-MC>
Subject: odds and ends accumulated while playing idlely with Rel 6.
To: BUG-LISPM at OZ
Message-ID: <850402231103.2.ALAN@DUANE.MIT.EDU>

In Symbolics 3670 Release 6.0, IP-TCP 29.0, AISite 7.5,
microcode TMC5-IO4-MIC 319, FEP 22, on Lisp Machine Duane Allman:

I dislike having to type double quotes in the command processor so often.
Especially around ITS pathnames.

The Show Object command's self documentation says that it wants the "name"
of an object to show the description of.  It wasn't at all obvious to me
that what that means is for me to type a variable whose value is a lisp
object to be described.

If I type "FOO " the Lisp listener types a little message about FOO being
unbound and leaves me sitting in a state that looks very much like I am
typing at lisp.  If I now type "BAR ", nothing happens.  Very mysterious
and most unlike the way I am used to Lisp reacting to an unbound variable.
I haven't found a place in the release notes that tells me how to turn this
DWIM off yet (it better be there), but when I find it I intend to turn it
off.

I will repeat for the fourth or fith time my plea for the Machine to stop
badgering me about the lack of Base attributes in my file property lists.
You can find my arguments on this point in your archives I hope.  Nobody
has ever bothered to respond to them in my memory.

No spelling correction yet, so pleaes excuse the typos.

The document examiner has an inconsistent theory of scrolling.  I find it
very uncomfortable the the space bar does not scroll forwards.

The functions NUMERATOR, DENOMINATOR, GCD, and LCM should work on complex
rationsls.

It is a real pain in the document examiner that when you are reading
linearly through a long section of a document there isn't any way to track
down a cross reference and come back to exactly the point you were reading.
The best you seem to be able to do is return to the front (30 pages back of
where you left).  

The Munching Tunes entry in the menu popped up by (HACKS:DEMO) flashes a
two-item sub-menu briefly before my eyes as its only action.

On the other hand it's nice to once again be able to call
HACKS:MUNCHING-TUNES by hand when I want to amuse myself!

While in the Document Examiner I have been getting GC notifications in the
little command type-in window.  Just now one arrived via a pop-up
notification that I had to type a space to flush.  The inconsistency and
unpredictability is a loss.

In the document examiner I find that the little boxes drawn around
mouse-sensitive items frequently remain for a few second during redisplay
after the text they once surrounded is gone.  Makes me shudder to think
what you happen if I clicked on one...

Here is a good joke.  In the Doc. Exam. the release notes tell me that if I
want to learn more about destructuring in general I should read the section
"Destructuring", which is that portion of the LOOP documentation specific
to destructuring in LOOP.

I can't figure out what I am supposed to do about the screw I encountered
earlier where Zwei barfed at me about :SCM files.  All I want to do is tell
Zwei that files named FOO.SCM should be edited in Lisp mode.  What should I
be doing?

The doc. exam.'s Current Candidates window is hard to deal with because it
shows too much detail.  I should be able to select different depths to view
the tree.  Maybe it should work the way FSEdit does.
 2-Apr-85 23:24:22-EST,578;000000000000
Received: from MIT-DUANE by MIT-OZ via Chaosnet; 2 Apr 85 23:24-EST
Date: Tuesday, 2 April 1985, 23:22-EST
From: Alan Bawden <Alan at MIT-MC>
Subject: command processor
To: BUG-LISPM at OZ
Message-ID: <850402232248.3.ALAN@DUANE.MIT.EDU>

In Symbolics 3670 Release 6.0, IP-TCP 29.0, AISite 7.5,
microcode TMC5-IO4-MIC 319, FEP 22, on Lisp Machine Duane Allman:

What good are filename defualts if I can't use them?  I type ":sh fi " and
it shows me a perfectly reasonable default filename, so I type <return> and
it barfs at me cause I "must supply a value".  Barf!
 3-Apr-85 07:01:39-EST,1468;000000000000
Received: from MIT-MORRISON by MIT-OZ via Chaosnet; 3 Apr 85 07:01-EST
Date: Wednesday, 3 April 1985, 06:59-EST
From: jcma@MIT-MC
Subject: TCP bug
To: Hornig@SCRC-STONY-BROOK
cc: jcma@MIT-MC, BUG-LISPM@OZ
In-Reply-To: <850402095829.2.HORNIG@PEACE.SCRC.Symbolics.COM>
Message-ID: <850403065937.0.JCMA@MORRISON.MIT.EDU>

    Date: Tue, 2 Apr 85 09:58 EST
    From: Charles Hornig <Hornig@SCRC-STONY-BROOK>

	Date: Monday, 1 April 1985, 22:59-EST
	From: jcma@MIT-MC

	In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.5,
	microcode TMC5-MIC 319, FEP 22, on Lisp Machine James Morrison:

	I can connect to score from vaxes and mc and even other hosts on
	this ethernet, but I have been getting this error.

	>>Error: SU-SCORE (at Internet address 10.3.0.11) did not respond to a 103523(:TELNET) request.
		 Either the destination does not support that protocol or some gateway could not determine a route to the destination.
	While in the function TCP::CHECK-CONNECTION-STATE  TCP::COMPLETE-OPEN-TCB  TCP::OPEN-TCB

    What does the Peek N display under Internet say about routing?  Does it
    think the gateway is alive?  What does the Host Routing entry for SCORE
    say?

There is no routing table entry in the peek display under INTERNET.
It just has 0 reassmebly nodes and 0 connections under TCP.

The host routing says:

sri-ai (10.4.0.2): via unknown out: 1
(0.0.0.0 255.255.255.255): via broadcast (broadcast) out:  0
 3-Apr-85 07:27:02-EST,328;000000000000
Mail-From: ROB created at  3-Apr-85 07:26:58
Date: 3 Apr 1985  07:26 EST (Wed)
Message-ID: <ROB.12100178731.BABYL@MIT-OZ>
From: "Robert H. Kassel" <rob@MIT-OZ>
To:   bug-lispm@MIT-OZ
Subject: sage suggestion


I think it would be useful to be able to mouse functions in
the documentation and have the editor m-. them.
 3-Apr-85 10:43:10-EST,3984;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 3 Apr 85 10:42-EST
Received: from MIT-OZ by MIT-MC via Chaosnet; 3 APR 85  10:38:45 EST
Received: from MIT-APIARY-9 by MIT-OZ via Chaosnet; 3 Apr 85 10:38-EST
Date: Wed, 3 Apr 85 10:35 EST
From:  <ALLARD@[128.52.22.26]>
Subject: Error received in the documentor.
To: BUG-LISPM@MIT-MC.ARPA
Message-ID: <"850403103551.1.ALLARD@APIARY-6"@APIARY-9.MIT.EDU>


Hiya,

I entered the documentor, clicked on Find, typed "ignore", and an
appropriate looking candidate list appeared.  When I clicked on
IGNORE to view it, this error occured.  Have fun fixing...

                                Jim Allard

In Symbolics 3600 Release 6.0 Beta IIc, microcode TMC5-MIC 315, FEP 18, on APIARY-9:



>>Error: The logical pathname SYS: DOC; EVAL; is not defined
While in the function (:METHOD FS:LOGICAL-HOST :TRANSLATE-RAW)  (:METHOD FS:LOGICAL-HOST :TRANSLATE)  (:METHOD FS:LOGICAL-PATHNAME :TRANSLATED-PATHNAME)

(:METHOD FS:LOGICAL-HOST :TRANSLATE-RAW):  (P.C. = 36)
   Arg 0 (SELF): #<LOGICAL-HOST SYS>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:LOGICAL-HOST -- 9. IV's, 2. FL's 105422371>
   Arg 2 (OPERATION): :TRANSLATE-RAW
   Arg 3 (PATHNAME): #<LOGICAL-PATHNAME "SYS: DOC; EVAL; EVAL3.SAB.4">

(:METHOD FS:LOGICAL-HOST :TRANSLATE):  (P.C. = 5)
   Arg 0 (SELF): #<LOGICAL-HOST SYS>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:LOGICAL-HOST -- 9. IV's, 2. FL's 105422371>
   Arg 2 (OPERATION): :TRANSLATE
   Arg 3 (PATHNAME): #<LOGICAL-PATHNAME "SYS: DOC; EVAL; EVAL3.SAB.4">

(:METHOD FS:LOGICAL-PATHNAME :TRANSLATED-PATHNAME):  (P.C. = 67)
   Arg 0 (SELF): #<LOGICAL-PATHNAME "SYS: DOC; EVAL; EVAL3.SAB.4">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:LOGICAL-PATHNAME -- 8. IV's, 3. FL's 105360754>
   Arg 2 (OPERATION): :TRANSLATED-PATHNAME

(:DEFUN-METHOD FS:LOGICAL-PATHNAME-PASS-ON):  (P.C. = 5)
   Arg 0 (SELF): #<LOGICAL-PATHNAME "SYS: DOC; EVAL; EVAL3.SAB.4">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:LOGICAL-PATHNAME -- 8. IV's, 3. FL's 105360754>
   Arg 2 (MESSAGE): :OPEN
   Rest arg (REST): (#<LOGICAL-PATHNAME "SYS: DOC; EVAL; EVAL3.SAB.4"> :DIRECTION :INPUT :BYTE-SIZE 8 :CHARACTERS NIL)

(:METHOD FS:LOGICAL-PATHNAME :OPEN):  (P.C. = 10)
   Arg 0 (SELF): #<LOGICAL-PATHNAME "SYS: DOC; EVAL; EVAL3.SAB.4">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:LOGICAL-PATHNAME -- 8. IV's, 3. FL's 105360754>
   Arg 2 (OPERATION): :OPEN
   Rest arg (.ARGS.): (#<LOGICAL-PATHNAME "SYS: DOC; EVAL; EVAL3.SAB.4"> :DIRECTION :INPUT :BYTE-SIZE 8 :CHARACTERS NIL)

FS:COMMON-LISP-OPEN:  (P.C. = 450)
   Arg 0 (PATHNAME): #<LOGICAL-PATHNAME "SYS: DOC; EVAL; EVAL3.SAB.4">
   Arg 1 (KEYWORD-ARGS): (:CHARACTERS NIL :BYTE-SIZE 8)

OPEN:  (P.C. = 257)
   Arg 0 (PATHNAME): #<LOGICAL-PATHNAME "SYS: DOC; EVAL; EVAL3.SAB.4">
   Rest arg (KEYWORD-ARGS): (:CHARACTERS NIL :BYTE-SIZE 8)

SAGE:OPEN-SAGE-FILE:  (P.C. = 155)
   Arg 0 (PATHNAME): #<LOGICAL-PATHNAME "SYS: DOC; EVAL; EVAL3.SAB.4">

Rest of stack:
(:METHOD SAGE:BASIC-DOC-RECORD :INIT):  (P.C. = 37)
INSTANTIATE-FLAVOR:  (P.C. = 445)
MAKE-INSTANCE:  (P.C. = 6)
SAGE:INSTALL-RECORD:  (P.C. = 34)
SAGE:RECORD-FOR-TOPIC&TYPE:  (P.C. = 224)<<Error printing function name>>
(:METHOD SAGE:SOURCE-OF-FORMATTED-SAGE-RECORD-LINES :INIT):  (P.C. = 24)
INSTANTIATE-FLAVOR:  (P.C. = 445)
MAKE-INSTANCE:  (P.C. = 6)
SAGE:FORMATTED-SAGE-RECORD-LINE-SOURCE:  (P.C. = 11)
(:METHOD SAGE:DEX-ITEM :PREPARE-DOCUMENTATION):  (P.C. = 6)
(:METHOD SAGE:DEX-VIEWING-CONTEXT :DISPLAY-DEX-ITEM):  (P.C. = 12)
(:METHOD SAGE:DEX-VIEWING-CONTEXT :ADD-ITEM-TO-CONTEXT):  (P.C. = 20)
(:METHOD SAGE:DEX :CANDIDATE-ITEM-CLICK):  (P.C. = 31)
(:METHOD SAGE:DEX :COMMAND-BLIP):  (P.C. = 104)
(:METHOD SAGE:DEX :COMMAND-LOOP):  (P.C. = 47)<<Error printing function name>>
(:METHOD SAGE:DEX :TOPLEVEL):  (P.C. = 255)<<Error printing function name>>
SAGE:DEX-TOPLEVEL:  (P.C. = 4)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
 3-Apr-85 11:00:24-EST,815;000000000000
Received: from MIT-SID by MIT-OZ via Chaosnet; 3 Apr 85 10:56-EST
Date: Wednesday, 3 April 1985, 10:55-EST
From: Daniel Weise <DANIEL at MIT-MC>
Subject: A suggestion for obsolete functions.
To: BUG-LISPM at OZ
Message-ID: <850403105533.1.DANIEL@SID.MIT.EDU>

In Symbolics 3670 Release 6.0, IP-TCP 29.0, AISite 7.5,
microcode TMC5-IO4-MIC 319, FEP 22, on Lisp Machine Sid Vicious:

m-sh-A on tv:add-system-key says there is no documentation.
If one m-.'s it one sees the compiler:make-obsolete form
indicating the new function (tv:add-select-key).  Maybe
whatever conses up the online documentation could understand
compiler:make-obsoletes so that it could point users at
the right functions?  

Daniel

PS, I agree with ALAN that not being able to space through
a document is uncomfortable.

 3-Apr-85 12:00:53-EST,4753;000000000000
Received: from MIT-SID by MIT-OZ via Chaosnet; 3 Apr 85 11:56-EST
Date: Wednesday, 3 April 1985, 11:54-EST
From: Daniel Weise <DANIEL at MIT-MC>
Subject: make system doesn't know where my patch directories are.
To: BUG-LISPM at OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10,
Experimental TECHNOLOGY-INDEPENDENT-DAEDALUS 5.1,
Experimental DAEDALUS 5.0, FEP 22, on Lisp Machine Sid Vicious:

Make seems to be getting confused.  Daedalus has a component system
technology-independent-daedalus.  I did (make-system 'daedalus :compile)
after doing (make-system 'daedalus :noconfirm) and this happened when it
went to increment the major patch number of daedalus.  As part of the
make system it had just incremented the major version number of
technology independent daedalus.  It seems to have cached some filenames
somewhere...

This used to work.

>>Error: The system directory file of #<SYSTEM DAEDALUS 26346601> has been changed.  It should be OZ:OZ:<DPL.MIT.PATCH>TECHNOLOGY-INDEPENDENT-DAEDALUS.PATCH-DIRECTORY.7,
         but currently is OZ:OZ:<DPL.MIT.PATCH>DAEDALUS.PATCH-DIRECTORY.10
While in the function SI:WRITE-SYSTEM-DIRECTORY  SI:INCREMENT-PATCH-SYSTEM-MAJOR-VERSION  SI:INCREMENT-COMPILED-VERSION-1

SI:WRITE-SYSTEM-DIRECTORY:  (P.C. = 24)
   Arg 0 (SYSTEM): "DAEDALUS"
   Arg 1 (OLD-FILE): #<TOPS20-PATHNAME "OZ:OZ:<DPL.MIT.PATCH>TECHNOLOGY-INDEPENDENT-DAEDALUS.PATCH-DIRECTORY.7">
   Arg 2 (PLIST): ("TECHNOLOGY-INDEPENDENT-DAEDALUS" :LATEST 7)
   Arg 3 (VERSIONS): ((1 NIL (("DPL: DPL; TIDAED" 1 NIL) ("DPL: DPL; AUXIL" 32 2) ("DPL: DPL; PRIMOB" 116 2) ("DPL: DPL; NPD" 32 2) ("DPL: DPL; FIND" 55 2) ("DPL: DPL; MAKE" 105 2) ("DPL: DPL; CONTMS" 34 3) ("DPL: DPL; GROUP" 12 2) ("DPL: DPL; LAYPRM" 47 2) ("DPL: DPL; LAYPRT" 106 3) ...)))
   Local 4 (MAP-RESULT): NIL
   Local 5 (MAP-RESULT): NIL
   Local 6 (FILE): #<TOPS20-PATHNAME "OZ:<DPL.MIT.PATCH>DAEDALUS.PATCH-DIRECTORY">
   Local 7 (OFILE): #<TOPS20-PATHNAME "OZ:OZ:<DPL.MIT.PATCH>DAEDALUS.PATCH-DIRECTORY.10">

SI:INCREMENT-PATCH-SYSTEM-MAJOR-VERSION:  (P.C. = 35)
   Arg 0 (NAME): "DAEDALUS"
   Arg 1 (STATUS): :EXPERIMENTAL

SI:INCREMENT-COMPILED-VERSION-1:  (P.C. = 21)

SI:DO-FILE-TRANSFORMATIONS:  (P.C. = 242)

SI:PERFORM-TRANSFORMATIONS:  (P.C. = 166)
   Arg 0 (TRANSFORMATION-LIST): ((#<TRANSFORMATION COMPILE 26345722> DPL:DPL NIL #<SYSTEM TECHNOLOGY-INDEPENDENT-DAEDALUS 26344672>) (#<TRANSFORMATION COMPILE 26345740> DPL:DPL NIL #<SYSTEM TECHNOLOGY-INDEPENDENT-DAEDALUS 26344672>) (#<TRANSFORMATION COMPILE 26345756> DPL:DPL NIL #<SYSTEM TECHNOLOGY-INDEPENDENT-DAEDALUS 26344672>) (#<TRANSFORMATION COMPILE 26345774> DPL:DPL NIL #<SYSTEM TECHNOLOGY-INDEPENDENT-DAEDALUS 26344672>) (#<TRANSFORMATION COMPILE 26346012> DPL:DPL NIL #<SYSTEM TECHNOLOGY-INDEPENDENT-DAEDALUS 26344672>) (#<TRANSFORMATION COMPILE 26346030> DPL:DPL NIL #<SYSTEM TECHNOLOGY-INDEPENDENT-DAEDALUS 26344672>) (#<TRANSFORMATION COMPILE 26346046> DPL:DPL NIL #<SYSTEM TECHNOLOGY-INDEPENDENT-DAEDALUS 26344672>) (#<TRANSFORMATION COMPILE 26346064> DPL:DPL NIL #<SYSTEM TECHNOLOGY-INDEPENDENT-DAEDALUS 26344672>) (#<TRANSFORMATION COMPILE 26346102> DPL:DPL NIL #<SYSTEM TECHNOLOGY-INDEPENDENT-DAEDALUS 26344672>) (#<TRANSFORMATION COMPILE 26346120> DPL:DPL NIL #<SYSTEM TECHNOLOGY-INDEPENDENT-DAEDALUS 26344672>) ...)

SI:PERFORM-TRANSFORMATIONS:  (P.C. = 64)
   Arg 0 (TRANSFORMATION-LIST): ((#<TRANSFORMATION FASLOAD 26345731> DPL:DPL NIL #<SYSTEM TECHNOLOGY-INDEPENDENT-DAEDALUS 26344672>) (#<TRANSFORMATION FASLOAD 26345747> DPL:DPL NIL #<SYSTEM TECHNOLOGY-INDEPENDENT-DAEDALUS 26344672>) (#<TRANSFORMATION FASLOAD 26345765> DPL:DPL NIL #<SYSTEM TECHNOLOGY-INDEPENDENT-DAEDALUS 26344672>) (#<TRANSFORMATION FASLOAD 26346003> DPL:DPL NIL #<SYSTEM TECHNOLOGY-INDEPENDENT-DAEDALUS 26344672>) (#<TRANSFORMATION FASLOAD 26346021> DPL:DPL NIL #<SYSTEM TECHNOLOGY-INDEPENDENT-DAEDALUS 26344672>) (#<TRANSFORMATION FASLOAD 26346037> DPL:DPL NIL #<SYSTEM TECHNOLOGY-INDEPENDENT-DAEDALUS 26344672>) (#<TRANSFORMATION FASLOAD 26346055> DPL:DPL NIL #<SYSTEM TECHNOLOGY-INDEPENDENT-DAEDALUS 26344672>) (#<TRANSFORMATION FASLOAD 26346073> DPL:DPL NIL #<SYSTEM TECHNOLOGY-INDEPENDENT-DAEDALUS 26344672>) (#<TRANSFORMATION FASLOAD 26346111> DPL:DPL NIL #<SYSTEM TECHNOLOGY-INDEPENDENT-DAEDALUS 26344672>) (#<TRANSFORMATION FASLOAD 26346127> DPL:DPL NIL #<SYSTEM TECHNOLOGY-INDEPENDENT-DAEDALUS 26344672>) ...)

MAKE-SYSTEM:  (P.C. = 222)
   Arg 0 (SYSTEM): DAEDALUS
   Rest arg (KEYWORDS): (:COMPILE)

SI:*EVAL:  (P.C. = 370)
   Arg 0 (FORM): (MAKE-SYSTEM (QUOTE DAEDALUS) :COMPILE)

Rest of stack:
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 200)
SI:LISP-COMMAND-LOOP:  (P.C. = 115)
SI:LISP-TOP-LEVEL1:  (P.C. = 22)
SI:LISP-TOP-LEVEL:  (P.C. = 7)
 3-Apr-85 12:03:25-EST,1764;000000000000
Received: from MIT-SID by MIT-OZ via Chaosnet; 3 Apr 85 12:02-EST
Date: Wednesday, 3 April 1985, 12:01-EST
From: Daniel Weise <DANIEL at MIT-MC>
Subject: make system losing track of patch dirs.  (re: previous message)
To: BUG-LISPM at OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10,
Experimental TECHNOLOGY-INDEPENDENT-DAEDALUS 6.0,
Experimental DAEDALUS 6.0, FEP 22, on Lisp Machine Sid Vicious:

I commented out a couple lines as follows:

(DEFUNP READ-SYSTEM-DIRECTORY (SYSTEM &OPTIONAL NO-ERROR-P &AUX FILE DIR)
  (DECLARE (RETURN-LIST DIR-FILE NAME PLIST VERSIONS))
;  (WHEN *READ-SYSTEM-DIRECTORY-RESULTS*
;    (RETURN (VALUES-LIST *READ-SYSTEM-DIRECTORY-RESULTS*)))
  (SETQ SYSTEM (FIND-SYSTEM-NAMED SYSTEM))
  (LET ((IBASE 10.) (PACKAGE (PKG-FIND-PACKAGE "SI")))
    (WITH-OPEN-STREAM (F (CONDITION-CASE-IF NO-ERROR-P ()
			     (OPEN (PATCH-SYSTEM-PATHNAME (SYSTEM-NAME SYSTEM)
							  ':SYSTEM-DIRECTORY))
			   (FS:FILE-NOT-FOUND
			     (LET ((NAME (SYSTEM-NAME SYSTEM)))
			       (RETURN NIL NAME (NCONS NAME) NIL)))))
      (SETQ FILE (SEND F ':TRUENAME))
      (SETQ DIR (READ F))))
  (WHEN (STRINGP (FIRST DIR))
    (UNLESS *SILENT-P*
      (FORMAT ERROR-OUTPUT "~&Converting to new style directory file.~2%"))
    (SETQ DIR (MAKE-SYSTEM-DIRECTORY PLIST `(,(FIRST DIR) :LATEST ,(SECOND DIR))))
    (SETQ FILE (WRITE-SYSTEM-DIRECTORY SYSTEM FILE (SYSDIR-PLIST DIR) (SYSDIR-VERSIONS DIR))))
  (SETQ *READ-SYSTEM-DIRECTORY-RESULTS*
	(LIST FILE (SYSDIR-NAME DIR) (SYSDIR-PLIST DIR) (SYSDIR-VERSIONS DIR)))
  (VALUES-LIST *READ-SYSTEM-DIRECTORY-RESULTS*))
;;; end of replacement from patch 242.59

and RETRYED INCREMENT-PATCH-SYSTEM-MAJOR-VERSION from the error handler.
Things worked after that.

Daniel
 3-Apr-85 12:34:06-EST,787;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 3 Apr 85 12:34-EST
Date: 3 April 1985 12:31-EST
From: David Vinayak Wallace <GUMBY @ MIT-MC>
Subject:  Press printers
To: Moon @ SCRC-STONY-BROOK
cc: BUG-LISPM @ MIT-OZ, cjl @ MIT-OZ
In-reply-to: Msg of 2 Apr 1985 19:56-EST from David A. Moon <Moon at SCRC-STONY-BROOK>

    Date: Tuesday, 2 April 1985, 19:56-EST
    From: David A. Moon <Moon at SCRC-STONY-BROOK>

    You are the proud owner of the only one (two?) of these printers in the
    world, so it's probably up to you to figure out what the font name it
    really wants is.  ...MIT is the only place that has a Dover with Lisp
    Machines talking to it, and we're not in a position to do a good job of
    supporting Dovers.

What about HPP, SCORE, and PARC?
 3-Apr-85 13:11:47-EST,2615;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 3 Apr 85 13:11-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 208073; Wed 3-Apr-85 11:54:34-EST
Date: Wednesday, 3 April 1985, 11:52-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: cp com-hardcopy-file blowout on press printers
To: Chris Lindblad <cjl at OZ>, BUG-LISPM at OZ
In-Reply-To: <850402142531.2.CJL@ELVIS.MIT.EDU>
Message-ID: <850403115231.4.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Tuesday, 2 April 1985, 14:25-EST
    From: Chris Lindblad <cjl at OZ>

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.5,
    Experimental NS 23.61, microcode TMC5-MIC 319, FEP 22, on Lisp Machine Elvis Presley:

    Trying to use cp command hardcopy file to the dover blows out.  I would
    like someone to let me know a fix that I can make because I can't try to
    fix it here, as apparently the source to si:com-hardcopy-file and
    press:decode-font-name are such valuable trade secrets of symbolics that
    they are not on the sources distribution. I know Gumby reported this bug
    before, but there has been no response, and I wanted to emphasize that
    this is really broken: I appears that nobody ever tried testing
    hardcopying to a press printer before release 6 was distributed.

I'm not sure this is related to PRESS printing.  In release 5, it
completely ignored si:*hardcopy-default-fonts*, which I'll bet you set
in your init file.  When I fixed that bug, I noticed that the format in
the older documentation was wrong.  I believe the format in the current
documentation is correct; namely use "LPT10", and in general
"faceSIZEstyle".  Don't use lists anymore.

    >>Error: Cannot coerce ("LPT" "" 10) into a string
    While in the function STRING  STRING-REVERSE-SEARCH-SET  PRESS:DECODE-FONT-NAME

    STRING:  (P.C. = 113)
       Arg 0 (X): ("LPT" "" 10)
       Local 1 (STR): "Cannot coerce ~S into a string"

    STRING-REVERSE-SEARCH-SET:  (P.C. = 21)
       Arg 0 (CHAR-SET): (48 49 50 51 52 53 54 55 56 57)
       Arg 1 (STRING): ("LPT" "" 10)
       --Defaulted args:--
       Arg 2 (FROM): NIL
       Arg 3 (TO): 0

    PRESS:DECODE-FONT-NAME:  (P.C. = 7)
       Arg 0 (STRING): ("LPT" "" 10)

    (:PROPERTY SI:COM-HARDCOPY-FILE SI:CP-FUNCTION):  (P.C. = 104)
       Arg 0 (FILE): (#<LMFS-PATHNAME "B:>cjl>Lispm-Init.lisp">)
       Arg 1 (BANNER-MESSAGE): NIL
       Arg 2 (COPIES): 1
       Arg 3 (DELETE): NIL
       Arg 4 (FILE-TYPES): :USE-CANONICAL-TYPE
       Arg 5 (FONTS): (:DEFAULT-FONT)

 3-Apr-85 13:12:41-EST,4690;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 3 Apr 85 13:12-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 208080; Wed 3-Apr-85 11:58:08-EST
Date: Wednesday, 3 April 1985, 11:56-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: Hardcopying from ZWEI to the dover doesn't work either.
To: Chris Lindblad <cjl at OZ>, BUG-LISPM at OZ
In-Reply-To: <850402142914.3.CJL@ELVIS.MIT.EDU>
Message-ID: <850403115607.5.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Tuesday, 2 April 1985, 14:29-EST
    From: Chris Lindblad <cjl at OZ>

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.5,
    Experimental NS 23.61, microcode TMC5-MIC 319, FEP 22, on Lisp Machine Elvis Presley:

    m-x Hardcopy File b:>cjl>Lispm-Init.lisp
    to tremont-via-mc

Did you have trouble decoding the font when you tried this, as you did
in the last bug report?  If so, did you just proceed past it somehow?
It's also possible that the si:current-device-font of the instance
(which I would have to see in order to debug this furthre) isn't setup
correctly.

    >>Trap: The first argument given to the AR-1 instruction, NIL, was not an array.
    While in the function (:METHOD PRESS:PRESS-STREAM :CHARACTER-WIDTH)  (:METHOD SI:HARDCOPY-STREAM-FONT-MIXIN :UPDATE-SPACE-WIDTH)  (:METHOD SI:HARDCOPY-STREAM-FONT-MIXIN :AFTER :INIT)

    (:METHOD PRESS:PRESS-STREAM :CHARACTER-WIDTH):  (P.C. = 14)
       Arg 0 (SELF): #<PRESS-STREAM 25501010>
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor PRESS:PRESS-STREAM -- 33. IV's, 3. FL's 24504770>
       Arg 2 (OPERATION): :CHARACTER-WIDTH
       Arg 3 (CHAR): 32

    (:METHOD SI:HARDCOPY-STREAM-FONT-MIXIN :UPDATE-SPACE-WIDTH):  (P.C. = 5)
       Arg 0 (SELF): #<PRESS-STREAM 25501010>
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:HARDCOPY-STREAM-FONT-MIXIN -- 7. IV's, 0. FL's 24504150>
       Arg 2 (OPERATION): :UPDATE-SPACE-WIDTH

    (:METHOD SI:HARDCOPY-STREAM-FONT-MIXIN :AFTER :INIT):  (P.C. = 224)
       Arg 0 (SELF): #<PRESS-STREAM 25501010>
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:HARDCOPY-STREAM-FONT-MIXIN -- 7. IV's, 0. FL's 24504150>
       Arg 2 (OPERATION): :INIT
       Arg 3 (PLIST): #<DTP-LOCATIVE 21540306>

    (:METHOD PRESS:PRESS-STREAM :COMBINED :INIT):  (P.C. = 26)
       Arg 0 (SELF): #<PRESS-STREAM 25501010>
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor PRESS:PRESS-STREAM -- 33. IV's, 3. FL's 24504770>
       Arg 2 (.OPERATION.): :INIT
       Rest arg (.DAEMON-CALLER-ARGS.): (#<DTP-LOCATIVE 21540306>)

    INSTANTIATE-FLAVOR:  (P.C. = 445)
       Arg 0 (FLAVOR-NAME): PRESS:PRESS-STREAM
       Arg 1 (INIT-PLIST): #<DTP-LOCATIVE 21540306>
       Arg 2 (SEND-INIT-MESSAGE-P): :MAYBE
       --Defaulted args:--
       Arg 3 (RETURN-UNHANDLED-KEYWORDS-P): NIL
       Arg 4 (AREA-TO-CONS-INSTANCE-IN): NIL

    MAKE-INSTANCE:  (P.C. = 6)
       Arg 0 (FLAVOR-NAME): PRESS:PRESS-STREAM
       Rest arg (INIT-OPTIONS): (:DEVICE #<PRESS-PRINTER TREMONT-VIA-MC 1141274> :OUTPUT-STREAM #<FILE-OUTPUT-BINARY-STREAM "MC: .DOVR.; CJL >" 25500770> :NEW-PAGE-HOOK #<DTP-COMPILED-FUNCTION SI:HARDCOPY-PRINT-PAGE-HEADING 47371314> :HEADER-FONT-P T :PAGE-NUMBER 0 ...)
       Local 1 (INIT-OPTIONS): (:MARGINS (2000 1270 2000 1270) :DEVICE #<PRESS-PRINTER TREMONT-VIA-MC 1141274> :OUTPUT-STREAM #<FILE-OUTPUT-BINARY-STREAM "MC: .DOVR.; CJL >" 25500770> :NEW-PAGE-HOOK #<DTP-COMPILED-FUNCTION SI:HARDCOPY-PRINT-PAGE-HEADING 47371314> :HEADER-FONT-P T ...)

    (:METHOD SI:HARDCOPY-DEVICE-MIXIN :MAKE-HARDCOPY-STREAM):  (P.C. = 124)
       Arg 0 (SELF): #<PRESS-PRINTER TREMONT-VIA-MC 1141274>
       Arg 1 (SELF-MAPPING-TABLE): SI:HARDCOPY-DEVICE-MIXIN
       Arg 2 (OPERATION): :MAKE-HARDCOPY-STREAM
       Arg 3 (OPTIONS): (:NEW-PAGE-HOOK #<DTP-COMPILED-FUNCTION SI:HARDCOPY-PRINT-PAGE-HEADING 47371314> :HEADER-FONT-P T :PAGE-NUMBER 0 :BANNER-FILE-NAME "B:>cjl>Lispm-Init.lisp.1" :BANNER-CREATION-DATE 2685328047)

    SI:MAKE-HARDCOPY-STREAM:  (P.C. = 52)
       Arg 0 (DEVICE): #<PRESS-PRINTER TREMONT-VIA-MC 1141274>
       Rest arg (OPTIONS): (:NEW-PAGE-HOOK #<DTP-COMPILED-FUNCTION SI:HARDCOPY-PRINT-PAGE-HEADING 47371314> :HEADER-FONT-P T :PAGE-NUMBER 0 :BANNER-FILE-NAME "B:>cjl>Lispm-Init.lisp.1" :BANNER-CREATION-DATE 2685328047)

    Rest of stack:
    SI:HARDCOPY-FROM-STREAM:  (P.C. = 137)
    SI:HARDCOPY-FILE:  (P.C. = 127)
    ZWEI:DIRED-HARDCOPY-FILE-1:  (P.C. = 51)
    ZWEI:HARDCOPY-FILE-BACKGROUND:  (P.C. = 25)
    ZWEI:HARDCOPY-FILE-BACKGROUND:  (P.C. = 16)
    SI:PROCESS-RUN-FUNCTION-INTERNAL:  (P.C. = 52)
    SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
 3-Apr-85 13:32:03-EST,973;000000000000
Received: by MIT-OZ via Chaosnet; 3 Apr 85 13:31-EST
Received: from SCRC-CUYAHOGA by SCRC-VALLECITO via CHAOS with CHAOS-MAIL id 5734; Wed 3-Apr-85 09:34:50-EST
Date: Wednesday, 3 April 1985, 09:35-EST
From: Robert A. Cassels <Cassels at SCRC-TENEX>
Subject: odds and ends accumulated while playing idlely with Rel 6.
To: Alan at MIT-MC, BUG-LISPM at OZ
In-Reply-To: <850402231103.2.ALAN@DUANE.MIT.EDU>
Message-ID: <850403093532.0.CASSELS@CUYAHOGA.SCRC.Symbolics.COM>

    Date: Tuesday, 2 April 1985, 23:11-EST
    From: Alan Bawden <Alan at MIT-MC>

    In Symbolics 3670 Release 6.0, IP-TCP 29.0, AISite 7.5,
    microcode TMC5-IO4-MIC 319, FEP 22, on Lisp Machine Duane Allman:

One of my favorites.

    ...
    The functions NUMERATOR, DENOMINATOR, GCD, and LCM should work on complex
    rationsls.

I seem to have lost your mail on the subject.  If you'll point me at it,
I'll look into that and Gosper's fixes to GCD of rationals and (LCM).
 3-Apr-85 13:36:01-EST,4633;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 3 Apr 85 13:35-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 208179; Wed 3-Apr-85 13:18:22-EST
Date: Wednesday, 3 April 1985, 13:16-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: Bug?
To: Christopher Eliot <CRE at SANCHO-PANZA>, BUG-LISPM at OZ
In-Reply-To: <850402171156.2.CRE@SANCHO-PANZA.MIT>
Message-ID: <850403131622.4.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Tuesday, 2 April 1985, 17:11-EST
    From: Christopher Eliot <CRE at SANCHO-PANZA>

    In Symbolics 3600 Release 6.0, IP-TCP 29.0, microcode TMC5-MIC 319,
    FEP 18, on Lisp Machine Sancho Panza:

    This used to work.

Isn't it supposed to be in the FONTS: package?

    >>Error: No font MEDFNB found.
    While in the function TV:SCREEN-PARSE-FONT-DESCRIPTOR  TV:SCREEN-PARSE-FONT-DESCRIPTOR  (:METHOD TV:SCREEN :PARSE-FONT-DESCRIPTOR)

    TV:SCREEN-PARSE-FONT-DESCRIPTOR:  (P.C. = 44)
       Arg 0 (FD): MEDFNB
       Arg 1 (TYPE): FONTS:CPT-FONT
       Arg 2 (DONT-LOAD-P): T
       Local 3 (FONT): NIL

    TV:SCREEN-PARSE-FONT-DESCRIPTOR:  (P.C. = 102)
       Arg 0 (FD): MEDFNB
       Arg 1 (TYPE): FONTS:CPT-FONT
       --Defaulted args:--
       Arg 2 (DONT-LOAD-P): NIL

    (:METHOD TV:SCREEN :PARSE-FONT-DESCRIPTOR):  (P.C. = 4)
       Arg 0 (SELF): #<MAIN-SCREEN Main Screen 43200000 exposed>
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:SCREEN -- 6. IV's, 1. FL's 104144230>
       Arg 2 (OPERATION): :PARSE-FONT-DESCRIPTOR
       Arg 3 (FD): MEDFNB

    (:DEFUN-METHOD TV:PARSE-LABEL-SPEC):  (P.C. = 140)
       Arg 0 (SELF): #<HIGHLIGHTING-COMMAND-MENU-PANE NIL 5741414 deactivated>
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:LABEL-MIXIN -- 1. IV's, 1. FL's 27164570>
       Arg 2 (OPERATION): :PARSE-LABEL-SPEC
       Arg 3 (SPEC): (:STRING "Editing Commands" :FONT MEDFNB)
       Local 3 (SPEC): (NIL NIL NIL NIL MEDFNB "Editing Commands")
       Arg 4 (LM): 2
       Arg 5 (TM): 2
       Arg 6 (RM): 2
       Arg 7 (BM): 2
       Arg 8 (TOP-P): T

    (:METHOD TV:TOP-BOX-LABEL-MIXIN :PARSE-LABEL-SPEC):  (P.C. = 16)
       Arg 0 (SELF): #<HIGHLIGHTING-COMMAND-MENU-PANE NIL 5741414 deactivated>
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:TOP-BOX-LABEL-MIXIN -- 0. IV's, 1. FL's 27167742>
       Arg 2 (OPERATION): :PARSE-LABEL-SPEC
       Arg 3 (SPEC): (:STRING "Editing Commands" :FONT MEDFNB)
       Arg 4 (LM): 2
       Arg 5 (TM): 2
       Arg 6 (RM): 2
       Arg 7 (BM): 2

    (:DEFUN-METHOD TV:ADJUST-MARGINS):  (P.C. = 73)
       Arg 0 (SELF): #<HIGHLIGHTING-COMMAND-MENU-PANE NIL 5741414 deactivated>
       Arg 1 (SELF-MAPPING-TABLE): TV:ESSENTIAL-WINDOW
       Arg 2 (INSTANCE-VARIABLE): TV:LABEL
       Arg 3 (PARSING-MESSAGE): :PARSE-LABEL-SPEC
       Arg 4 (PLIST): #<DTP-LOCATIVE 500415>
       Arg 5 (PLIST-KEYWORD): NIL

    (:METHOD TV:ESSENTIAL-LABEL-MIXIN :BEFORE :INIT):  (P.C. = 12)
       Arg 0 (SELF): #<HIGHLIGHTING-COMMAND-MENU-PANE NIL 5741414 deactivated>
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:ESSENTIAL-LABEL-MIXIN -- 1. IV's, 1. FL's 27164576>
       Arg 2 (OPERATION): :INIT
       Arg 3 (INIT-PLIST): #<DTP-LOCATIVE 500415>

    (:METHOD HIGHLIGHTING-COMMAND-MENU-PANE :COMBINED :INIT):  (P.C. = 41)
       Arg 0 (SELF): #<HIGHLIGHTING-COMMAND-MENU-PANE NIL 5741414 deactivated>
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor HIGHLIGHTING-COMMAND-MENU-PANE -- 0. IV's, 11. FL's 27167666>
       Arg 2 (.OPERATION.): :INIT
       Rest arg (.DAEMON-CALLER-ARGS.): (#<DTP-LOCATIVE 500415>)

    Rest of stack:
    TV:MAKE-WINDOW:  (P.C. = 66)
    (:METHOD TV:CONSTRAINT-FRAME-WITH-SHARED-IO-BUFFER :CREATE-PANE):  (P.C. = 12)
    (:DEFUN-METHOD TV:CONSTRAINT-FRAME-WINDOWS):  (P.C. = 11)
    (:DEFUN-METHOD TV:CONSTRAINT-FRAME-PROCESS-CONSTRAINTS):  (P.C. = 20)
    (:METHOD TV:BASIC-CONSTRAINT-FRAME :AFTER :INIT):  (P.C. = 16)
    (:METHOD XS :COMBINED :INIT):  (P.C. = 74)
    TV:MAKE-WINDOW:  (P.C. = 66)
    TV:SELECT-OR-CREATE-WINDOW-OF-FLAVOR:  (P.C. = 7)
    XS:  (P.C. = 6)  (from SANCHO:>qsim>sedit)
    EXAMPLES-DECODE-VALUE:  (P.C. = 157)  (from SANCHO:>qsim>examples)
    EXAMPLES:  (P.C. = 115)  (from SANCHO:>qsim>examples)
    SI:*EVAL:  (P.C. = 403)
    (:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0):  (P.C. = 152)
    TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
    SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
    SI:LISP-COMMAND-LOOP:  (P.C. = 67)
    SI:LISP-TOP-LEVEL1:  (P.C. = 5)
    SI:LISP-TOP-LEVEL:  (P.C. = 7)
 3-Apr-85 13:38:59-EST,3851;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 3 Apr 85 13:38-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 208195; Wed 3-Apr-85 13:23:05-EST
Date: Wednesday, 3 April 1985, 13:21-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: dired
To: Niels Lauritzen <SR.LAURITZEN at MIT-SPEECH>,
    BUG-LISPM at MIT-SPEECH
In-Reply-To: <850402201216.1.LAURITZEN@MIT-YOGI.MIT.EDU>
Message-ID: <850403132106.5.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Tuesday, 2 April 1985, 20:12-EST
    From: Niels Lauritzen <SR.LAURITZEN at MIT-SPEECH>

    In Symbolics 3670 Release 6.0, IP-TCP 29.0, Experimental ZOO 5.0,
    Experimental Spire-Macros 5.0, Experimental Attribute 5.0,
    Experimental Compute 5.0, Experimental Audio 4.0,
    Experimental Speech-Attributes 4.0, Experimental Display 6.0,
    Experimental Speech-Layouts 6.0, Experimental Prtout 4.0,
    Experimental Versatec 5.0, Experimental Spire 16.0, ZOO-SPIRE 1.0,
    microcode TMC5-IO4-FPA-MIC 319, on Lisp Machine Yogi:

    how about formatting the dired typeout? All that junk with different length
    filenames looks terrible.

I assume you are complaining about the n-blocks and byte-size fields,
since the rest of it IS formatted, at least for the LMFS directory I tried:

SYS: WINDOW; *.LISP.NEWEST
  15520 free, 446930/462450 used (96%, 6 partitions)
  321 blocks in the files listed
>rel-6>sys>window
      basstr.lisp.432   17  72342(8)      $12/26/84 18:46:40 (04/01/85)   Dodds
      baswin.lisp.575   19  85115(8)      $10/31/84 02:52:50 (04/02/85)   CWH
      bitblt.lisp.24    5  17079(8)       $01/15/85 21:25:34 (03/29/85)   NFEP
      choice.lisp.194   20  87123(8)       02/26/85 16:28:13 (03/30/85)   NFEP
      cometh.lisp.33    2   3712(8)       $08/13/84 23:06:09 (03/25/85)   Moon
      csrpos.lisp.14    2   4867(8)       $01/21/84 22:04:14 (03/25/85)   PHILG
      flavex.lisp.33   19  82718(8)       $01/08/85 21:08:04 (03/28/85)   DCP
      frame.lisp.180   13  54925(8)       $02/06/85 12:30:09 (03/25/85)   joseph
      graphics.lisp.31   12  51514(8)     $12/27/84 16:02:50 (04/01/85)   DEG
      inspct.lisp.183   11  48791(8)       02/16/85 01:59:35 (03/29/85)   NFEP
      keytest.lisp.1    6  22419(8)        08/17/83 19:38:48 (03/13/85)   Zippy
      lscreen.lisp.120   10  42736(8)     $01/18/85 21:28:02 (03/28/85)   DCP
      ltvdef.lisp.25    2   4852(8)       $08/17/84 22:54:02 (03/29/85)   Moon
      menu.lisp.120   14  57952(8)        $01/02/85 18:43:29 (04/01/85)   CWH
      mouse.lisp.288   17  73226(8)       $02/01/85 14:10:51 (03/31/85)   DCP
      notification.lisp.78    6  25666(8)     02/16/85 01:39:33 (03/25/85) NFEP
      peek.lisp.220   11  46791(8)        $01/03/85 16:38:06 (03/31/85)   DCP
      peekch.lisp.55    5  19384(8)       $09/22/84 14:37:13 (03/25/85)   DCP
      peekfs.lisp.30    3  10356(8)       $11/21/84 14:42:44 (03/25/85)   BSG
      scred.lisp.121   16  69462(8)       $01/12/85 00:18:13 (03/30/85)   RLB
      scrman.lisp.189   11  45558(8)      $01/17/85 02:56:49 (03/25/85)   NFEP
      scroll.lisp.188   10  43726(8)      $01/27/85 20:21:10 (03/30/85)   NFEP
      sensit.lisp.9   11  44692(8)        $10/08/84 14:57:01 (03/25/85)   DCP
      sheet.lisp.609   26 113626(8)        02/19/85 10:41:11 (03/27/85)   joseph
      shwarm.lisp.323   14  59110(8)      $02/01/85 11:32:32 (04/01/85)   joseph
      sysmen.lisp.192   10  43334(8)      $10/06/84 02:22:27 (03/25/85)   RLB
      tscrol.lisp.74    6  25121(8)       $10/30/84 16:29:33 (04/01/85)   Moon
      tvdefs.lisp.297    8  33728(8)      $12/27/84 20:15:11 (03/25/85)   DEG
      typwin.lisp.128    9  35314(8)      $02/06/85 12:06:19 (03/28/85)   SWM
      wholin.lisp.128    6  22925(8)      $11/14/84 12:38:36 (03/31/85)   RWK
 3-Apr-85 13:40:13-EST,2313;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 3 Apr 85 13:39-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 208199; Wed 3-Apr-85 13:25:11-EST
Date: Wednesday, 3 April 1985, 13:23-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: cp com-hardcopy-file blowout on press printers
To: David A. Moon <Moon at SCRC-STONY-BROOK>, Chris Lindblad <cjl at OZ>
cc: BUG-LISPM at OZ, bug-cp at SCRC-STONY-BROOK
In-Reply-To: <850402195635.9.MOON@EUPHRATES.SCRC.Symbolics.COM>
Message-ID: <850403132312.6.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Tuesday, 2 April 1985, 19:56-EST
    From: David A. Moon <Moon at SCRC-STONY-BROOK>

	Date: Tuesday, 2 April 1985, 14:25-EST
	From: Chris Lindblad <cjl at OZ>

	In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.5,
	Experimental NS 23.61, microcode TMC5-MIC 319, FEP 22, on Lisp Machine Elvis Presley:

	Trying to use cp command hardcopy file to the dover blows out...

	>>Error: Cannot coerce ("LPT" "" 10) into a string
	While in the function STRING  STRING-REVERSE-SEARCH-SET  PRESS:DECODE-FONT-NAME

    Change this locally to whatever it is really supposed to be for your
    printer.  You are the proud owner of the only one (two?) of these
    printers in the world, so it's probably up to you to figure out what the
    font name it really wants is.  I'd try "LPT10" first.  Presumably you'll
    have to patch the DEFAULT-FONT and HEADER-FONT instance variables of the
    already-created PRINTER objects, unless you load the patch into a
    distribution world before setting its site.

    PRESS:  ;from SYS:HARDCOPY;PRESS
    (DEFFLAVOR PRESS-HARDCOPY-DEVICE-MIXIN () (SI:MULTIPLE-FONT-HARDCOPY-DEVICE-MIXIN)
      (:DEFAULT-INIT-PLIST :DEFAULT-FONT '("LPT" "" 10.) :HEADER-FONT '("LPT" "" 10.)))

As I said in a message that hasn't made the rounds yet, the LIST format
of FONTS doesn't work anymore.  Replace both lists with the string
"LPT10" and see if that helps.

    Maybe Symbolics would be better off giving MIT back a copy of the Dover support we got
    from MIT and then throwing it away, since MIT is the only place that has a Dover with
    Lisp Machines talking to it, and we're not in a position to do a good job of supporting
    Dovers.
 3-Apr-85 14:14:51-EST,693;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 3 Apr 85 14:11-EST
Received: from SUMEX-AIM.ARPA by MIT-MC.ARPA;  3 APR 85 14:11:14 EST
Date: Wed 3 Apr 85 11:10:38-PST
From: Andy Freeman <FREEMAN@SUMEX-AIM.ARPA>
Subject: Re: Press printers
To: GUMBY@MIT-MC.ARPA
cc: Moon@SCRC-STONY-BROOK.ARPA, BUG-LISPM%MIT-OZ@MIT-XX.ARPA,
    cjl%MIT-OZ@MIT-XX.ARPA
In-Reply-To: Message from "David Vinayak Wallace <GUMBY @ MIT-MC>" of Wed 3 Apr 85 09:31:00-PST

There is only one dover at Stanford; doesn't CMU have two?  Or don't
they have any Symbolics machines?  We have a few.  Does PARC have any?

-andy

ps - SCORE is just a computer, one of our DEC-2060's to be more specific.
-------
 3-Apr-85 15:48:08-EST,5031;000000000000
Received: from MIT-SID by MIT-OZ via Chaosnet; 3 Apr 85 15:46-EST
Date: Wednesday, 3 April 1985, 15:45-EST
From: Daniel Weise <DANIEL at MIT-MC>
Subject: make system did not create a new dir as it thought it had.
To: BUG-LISPM at OZ
Message-ID: <850403154557.1.DANIEL@SID.MIT.EDU>

In Symbolics 3670 Release 6.0, IP-TCP 29.0, AISite 7.6,
microcode TMC5-IO4-MIC 319, FEP 22, on Lisp Machine Sid Vicious:

I am doing (make-system 'daedalus :recompile) for the first time under
rel 6.  Rel 6 appears to have a different patch dir methodology than
earlier systems.  When it went to increment the major patch number it
said it was creating a new directory on oz. (I had a bug at that time
and  I had to change the max sub dirs of <dpl.mit.patch> from 0.) I
didn't check what dir it thought it created, there are no new ones there.
At any rate, now it can't find <dpl.mit.patch.tidaed-1>.  I am going to
hand create it and see what happens.

Second bug: you will notice it says that it is trying to write
DPL: PATCH; TIDAED-1.PATCH-DIR.NEWEST.  This is bogus, DPL:PATCH;
is <DPL.MIT.PATCH> but it is trying to write <DPL.MIT.PATCH.TIDAED>

Daniel

>>Error: No such directory name
         For DPL: PATCH; TIDAED-1.PATCH-DIR.NEWEST
While in the function (:METHOD FS:HOST-UNIT :COMMAND)  FS:OPEN-CHAOS  (:METHOD FS:QFILE-ACCESS-PATH :OPEN)

(:METHOD FS:HOST-UNIT :COMMAND):  (P.C. = 236)
   Arg 0 (SELF): #<HOST-UNIT 30522754>
   Arg 1 (SELF-MAPPING-TABLE): FS:HOST-UNIT
   Arg 2 (OPERATION): :COMMAND
   Arg 3 (MARK-P): NIL
   Arg 4 (STREAM-OR-HANDLE): (:CREATE "O2757")
   Local 4 (STREAM-OR-HANDLE): "O2757"
   Arg 5 (SIMPLE-P): NIL
   Arg 6 (WHOSTATE): "Open"
   Rest arg (COMMANDS): ("OPEN " :WRITE " " :CHARACTER "" "" "" "" "" "" ...)
   Local 8 (HANDLE): "O2757"
   Local 9 (STREAM): NIL
   Local 10 (PKT): #<Chaos Packet 1702714>
   Local 11 (SUCCESS): NIL
   Local 12 (STRING): "O2757 ERROR DNF F No such directory name"
   Local 13 (TRANSACTION-ID): "T2803"
   Local 14 (CREATE-P): T
   Local 15 (CONDITION): NIL
   Local 16: T
   Local 17: #<CASE-HANDLER 120711625>
   Local 18: NIL
   Local 19: (#<CASE-HANDLER 120711625>)

FS:OPEN-CHAOS:  (P.C. = 674)
   Arg 0 (ACCESS-PATH): #<TOPS20-QFILE-ACCESS-PATH OZ using QFILE 30522743>
   Arg 1 (REAL-PATHNAME): #<TOPS20-PATHNAME "OZ:PS:<DPL.MIT.PATCH.TIDAED-1>TIDAED-1.PATCH-DIR">
   Arg 2: #<LOGICAL-PATHNAME "DPL: PATCH; TIDAED-1.PATCH-DIR.NEWEST">
   Arg 3 (OPTIONS): (:DIRECTION :OUTPUT)

(:METHOD FS:QFILE-ACCESS-PATH :OPEN):  (P.C. = 7)
   Arg 0 (SELF): #<TOPS20-QFILE-ACCESS-PATH OZ using QFILE 30522743>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:QFILE-ACCESS-PATH -- 4. IV's, 0. FL's 121666243>
   Arg 2 (OPERATION): :OPEN
   Arg 3 (REAL-PATHNAME): #<TOPS20-PATHNAME "OZ:PS:<DPL.MIT.PATCH.TIDAED-1>TIDAED-1.PATCH-DIR">
   Arg 4 (PATHNAME): #<LOGICAL-PATHNAME "DPL: PATCH; TIDAED-1.PATCH-DIR.NEWEST">
   Rest arg (OPTIONS): (:DIRECTION :OUTPUT)

(:METHOD FS:ACTIVE-PATHNAME-MIXIN :OPEN):  (P.C. = 14)
   Arg 0 (SELF): #<TOPS20-PATHNAME "OZ:PS:<DPL.MIT.PATCH.TIDAED-1>TIDAED-1.PATCH-DIR">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:ACTIVE-PATHNAME-MIXIN -- 1. IV's, 0. FL's 105211451>
   Arg 2 (OPERATION): :OPEN
   Arg 3 (PATHNAME): #<LOGICAL-PATHNAME "DPL: PATCH; TIDAED-1.PATCH-DIR.NEWEST">
   Rest arg (OPTIONS): (:DIRECTION :OUTPUT)

(:DEFUN-METHOD FS:LOGICAL-PATHNAME-PASS-ON):  (P.C. = 10)
   Arg 0 (SELF): #<LOGICAL-PATHNAME "DPL: PATCH; TIDAED-1.PATCH-DIR.NEWEST">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:LOGICAL-PATHNAME -- 8. IV's, 3. FL's 104206646>
   Arg 2 (MESSAGE): :OPEN
   Rest arg (REST): (#<LOGICAL-PATHNAME "DPL: PATCH; TIDAED-1.PATCH-DIR.NEWEST"> :DIRECTION :OUTPUT)

(:METHOD FS:LOGICAL-PATHNAME :OPEN):  (P.C. = 10)
   Arg 0 (SELF): #<LOGICAL-PATHNAME "DPL: PATCH; TIDAED-1.PATCH-DIR.NEWEST">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:LOGICAL-PATHNAME -- 8. IV's, 3. FL's 104206646>
   Arg 2 (OPERATION): :OPEN
   Rest arg (.ARGS.): (#<LOGICAL-PATHNAME "DPL: PATCH; TIDAED-1.PATCH-DIR.NEWEST"> :DIRECTION :OUTPUT)

FS:COMMON-LISP-OPEN:  (P.C. = 450)
   Arg 0 (PATHNAME): #<LOGICAL-PATHNAME "DPL: PATCH; TIDAED-1.PATCH-DIR.NEWEST">
   Arg 1 (KEYWORD-ARGS): (:DIRECTION :OUTPUT)

OPEN:  (P.C. = 257)
   Arg 0 (PATHNAME): #<LOGICAL-PATHNAME "DPL: PATCH; TIDAED-1.PATCH-DIR.NEWEST">
   Rest arg (KEYWORD-ARGS): (:DIRECTION :OUTPUT)

Rest of stack:
SI:WRITE-PATCH-DIRECTORY:  (P.C. = 72)
SI:INCREMENT-PATCH-SYSTEM-MAJOR-VERSION:  (P.C. = 57)
SI:INCREMENT-COMPILED-VERSION-1:  (P.C. = 21)
SI:DO-FILE-TRANSFORMATIONS:  (P.C. = 244)
SI:PERFORM-TRANSFORMATIONS:  (P.C. = 167)
SI:PERFORM-TRANSFORMATIONS:  (P.C. = 64)
MAKE-SYSTEM:  (P.C. = 241)
SI:*EVAL:  (P.C. = 403)
(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0):  (P.C. = 152)
TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
SI:LISP-COMMAND-LOOP:  (P.C. = 67)
SI:LISP-TOP-LEVEL1:  (P.C. = 5)
SI:LISP-TOP-LEVEL:  (P.C. = 7)
 3-Apr-85 15:58:04-EST,603;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 3 Apr 85 15:57-EST
Date: 3 April 1985 15:57-EST
From: Christopher C. Stacy <CSTACY @ MIT-MC>
Subject:  Logical Pathname Names  Lossage
To: GUMBY @ MIT-MC
cc: JCMA @ MIT-MC, BUG-LISPM @ MIT-OZ, HENRY @ MIT-OZ,
    DCP @ SCRC-QUABBIN, RWK @ SCRC-QUABBIN
In-reply-to: Msg of 2 Apr 1985 14:36-EST from David Vinayak Wallace <GUMBY>

This whole logical pathname mapping issue seems to me to revolve
around "back translation", and my model of the world agrees with
Gumby's. If we are confused, could someone please explain what the
correct model is?
 3-Apr-85 16:02:52-EST,4486;000000000000
Received: from MIT-SID by MIT-OZ via Chaosnet; 3 Apr 85 16:02-EST
Date: Wednesday, 3 April 1985, 16:01-EST
From: Daniel Weise <DANIEL at MIT-MC>
Subject: directories make-system isn't creating.
To: BUG-LISPM at OZ
Message-ID: <850403160140.2.DANIEL@SID.MIT.EDU>

In Symbolics 3670 Release 6.0, IP-TCP 29.0, AISite 7.6,
microcode TMC5-IO4-MIC 319, FEP 22, on Lisp Machine Sid Vicious:

This time I caught it in the act.  It definitely said
(and I quote): "Created OZ:PS:<DPL.MIT.PATCH.DAED-1>."
and the next it did was bomb out like this.  Checking
OZ indicates the dir is not there. (although <dpl.mit.patch>DAED.SYSTEM-DIR.1
is there.)

>>Error: No such directory name
         For DPL: PATCH; DAED-1.PATCH-DIR.NEWEST
While in the function (:METHOD FS:HOST-UNIT :COMMAND)  FS:OPEN-CHAOS  (:METHOD FS:QFILE-ACCESS-PATH :OPEN)

(:METHOD FS:HOST-UNIT :COMMAND):  (P.C. = 236)
   Arg 0 (SELF): #<HOST-UNIT 30522754>
   Arg 1 (SELF-MAPPING-TABLE): FS:HOST-UNIT
   Arg 2 (OPERATION): :COMMAND
   Arg 3 (MARK-P): NIL
   Arg 4 (STREAM-OR-HANDLE): (:CREATE "O2757")
   Local 4 (STREAM-OR-HANDLE): "O2757"
   Arg 5 (SIMPLE-P): NIL
   Arg 6 (WHOSTATE): "Open"
   Rest arg (COMMANDS): ("OPEN " :WRITE " " :CHARACTER "" "" "" "" "" "" ...)
   Local 8 (HANDLE): "O2757"
   Local 9 (STREAM): NIL
   Local 10 (PKT): #<Chaos Packet 1703040>
   Local 11 (SUCCESS): NIL
   Local 12 (STRING): "O2757 ERROR DNF F No such directory name"
   Local 13 (TRANSACTION-ID): "T2825"
   Local 14 (CREATE-P): T
   Local 15 (CONDITION): NIL
   Local 16: T
   Local 17: #<CASE-HANDLER 120711625>
   Local 18: NIL
   Local 19: (#<CASE-HANDLER 120711625>)

FS:OPEN-CHAOS:  (P.C. = 674)
   Arg 0 (ACCESS-PATH): #<TOPS20-QFILE-ACCESS-PATH OZ using QFILE 30522743>
   Arg 1 (REAL-PATHNAME): #<TOPS20-PATHNAME "OZ:PS:<DPL.MIT.PATCH.DAED-1>DAED-1.PATCH-DIR">
   Arg 2: #<LOGICAL-PATHNAME "DPL: PATCH; DAED-1.PATCH-DIR.NEWEST">
   Arg 3 (OPTIONS): (:DIRECTION :OUTPUT)

(:METHOD FS:QFILE-ACCESS-PATH :OPEN):  (P.C. = 7)
   Arg 0 (SELF): #<TOPS20-QFILE-ACCESS-PATH OZ using QFILE 30522743>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:QFILE-ACCESS-PATH -- 4. IV's, 0. FL's 121666243>
   Arg 2 (OPERATION): :OPEN
   Arg 3 (REAL-PATHNAME): #<TOPS20-PATHNAME "OZ:PS:<DPL.MIT.PATCH.DAED-1>DAED-1.PATCH-DIR">
   Arg 4 (PATHNAME): #<LOGICAL-PATHNAME "DPL: PATCH; DAED-1.PATCH-DIR.NEWEST">
   Rest arg (OPTIONS): (:DIRECTION :OUTPUT)

(:METHOD FS:ACTIVE-PATHNAME-MIXIN :OPEN):  (P.C. = 14)
   Arg 0 (SELF): #<TOPS20-PATHNAME "OZ:PS:<DPL.MIT.PATCH.DAED-1>DAED-1.PATCH-DIR">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:ACTIVE-PATHNAME-MIXIN -- 1. IV's, 0. FL's 105211451>
   Arg 2 (OPERATION): :OPEN
   Arg 3 (PATHNAME): #<LOGICAL-PATHNAME "DPL: PATCH; DAED-1.PATCH-DIR.NEWEST">
   Rest arg (OPTIONS): (:DIRECTION :OUTPUT)

(:DEFUN-METHOD FS:LOGICAL-PATHNAME-PASS-ON):  (P.C. = 10)
   Arg 0 (SELF): #<LOGICAL-PATHNAME "DPL: PATCH; DAED-1.PATCH-DIR.NEWEST">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:LOGICAL-PATHNAME -- 8. IV's, 3. FL's 104206646>
   Arg 2 (MESSAGE): :OPEN
   Rest arg (REST): (#<LOGICAL-PATHNAME "DPL: PATCH; DAED-1.PATCH-DIR.NEWEST"> :DIRECTION :OUTPUT)

(:METHOD FS:LOGICAL-PATHNAME :OPEN):  (P.C. = 10)
   Arg 0 (SELF): #<LOGICAL-PATHNAME "DPL: PATCH; DAED-1.PATCH-DIR.NEWEST">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:LOGICAL-PATHNAME -- 8. IV's, 3. FL's 104206646>
   Arg 2 (OPERATION): :OPEN
   Rest arg (.ARGS.): (#<LOGICAL-PATHNAME "DPL: PATCH; DAED-1.PATCH-DIR.NEWEST"> :DIRECTION :OUTPUT)

FS:COMMON-LISP-OPEN:  (P.C. = 450)
   Arg 0 (PATHNAME): #<LOGICAL-PATHNAME "DPL: PATCH; DAED-1.PATCH-DIR.NEWEST">
   Arg 1 (KEYWORD-ARGS): (:DIRECTION :OUTPUT)

OPEN:  (P.C. = 257)
   Arg 0 (PATHNAME): #<LOGICAL-PATHNAME "DPL: PATCH; DAED-1.PATCH-DIR.NEWEST">
   Rest arg (KEYWORD-ARGS): (:DIRECTION :OUTPUT)

Rest of stack:
SI:WRITE-PATCH-DIRECTORY:  (P.C. = 72)
SI:INCREMENT-PATCH-SYSTEM-MAJOR-VERSION:  (P.C. = 57)
SI:INCREMENT-COMPILED-VERSION-1:  (P.C. = 21)
SI:DO-FILE-TRANSFORMATIONS:  (P.C. = 244)
SI:PERFORM-TRANSFORMATIONS:  (P.C. = 167)
SI:PERFORM-TRANSFORMATIONS:  (P.C. = 64)
MAKE-SYSTEM:  (P.C. = 241)
SI:*EVAL:  (P.C. = 403)
(:INTERNAL SI:LISP-COMMAND-LOOP-INTERNAL 0):  (P.C. = 152)
TV:WITH-NOTIFICATION-MODE-INTERNAL:  (P.C. = 16)
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 54)
SI:LISP-COMMAND-LOOP:  (P.C. = 67)
SI:LISP-TOP-LEVEL1:  (P.C. = 5)
SI:LISP-TOP-LEVEL:  (P.C. = 7)
 3-Apr-85 16:21:35-EST,5787;000000000000
Received: from MIT-MOON by MIT-OZ via Chaosnet; 3 Apr 85 16:21-EST
Date: Wednesday, 3 April 1985, 16:19-EST
From: Chris Lindblad <cjl at OZ>
Subject: Making Hardcopy to the dover work in REL6
To: DCP at SCRC-QUABBIN, cjl at OZ, BUG-LISPM at OZ
In-Reply-To: <850403115607.5.NFEP@NEPONSET.SCRC.Symbolics.COM>
Message-ID: <850403161949.1.CJL@MOON.MIT.EDU>

    Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 3 Apr 85 13:12-EST
    Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 208080; Wed 3-Apr-85 11:58:08-EST
    Date: Wednesday, 3 April 1985, 11:56-EST
    From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
    Subject: Hardcopying from ZWEI to the dover doesn't work either.
    To: Chris Lindblad <cjl at OZ>, BUG-LISPM at OZ
    In-Reply-To: <850402142914.3.CJL@ELVIS.MIT.EDU>
    Message-ID: <850403115607.5.NFEP@NEPONSET.SCRC.Symbolics.COM>

	Date: Tuesday, 2 April 1985, 14:29-EST
	From: Chris Lindblad <cjl at OZ>

	In Symbolics 3600 Release 6.0, IP-TCP 29.0, AISite 7.5,
	Experimental NS 23.61, microcode TMC5-MIC 319, FEP 22, on Lisp Machine Elvis Presley:

	m-x Hardcopy File b:>cjl>Lispm-Init.lisp
	to tremont-via-mc

    Did you have trouble decoding the font when you tried this, as you did
    in the last bug report?  If so, did you just proceed past it somehow?
    It's also possible that the si:current-device-font of the instance
    (which I would have to see in order to debug this furthre) isn't setup
    correctly.

I came up with a workaround that gets hardcopying to work. It may be ugly, but it works.

;;; Patch to make hardcopy to the dover work again
;;;
press:  ;from SYS:HARDCOPY;PRESS
(let ((inhibit-fdefine-warnings t))
  (defflavor press-hardcopy-device-mixin () (si:multiple-font-hardcopy-device-mixin)
    (:default-init-plist :default-font 'LPT8 :header-font 'LPT8)))

(loop for printer in (let ((neti:*inhibit-validity-checking* t))
		       (neti:find-objects-from-property-list :printer :type :press))
      do (send printer :eval-inside-yourself '(setq default-font 'LPT8))
	 (send printer :eval-inside-yourself '(setq header-font 'LPT8)))

(advise (:method press:press-stream :character-width) :before :set-device-font nil
  (unless (send (first arglist) :device-current-font)
    (send (first arglist) :set-device-font)))

	>>Trap: The first argument given to the AR-1 instruction, NIL, was not an array.
	While in the function (:METHOD PRESS:PRESS-STREAM :CHARACTER-WIDTH)  (:METHOD SI:HARDCOPY-STREAM-FONT-MIXIN :UPDATE-SPACE-WIDTH)  (:METHOD SI:HARDCOPY-STREAM-FONT-MIXIN :AFTER :INIT)

	(:METHOD PRESS:PRESS-STREAM :CHARACTER-WIDTH):  (P.C. = 14)
	   Arg 0 (SELF): #<PRESS-STREAM 25501010>
	   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor PRESS:PRESS-STREAM -- 33. IV's, 3. FL's 24504770>
	   Arg 2 (OPERATION): :CHARACTER-WIDTH
	   Arg 3 (CHAR): 32

	(:METHOD SI:HARDCOPY-STREAM-FONT-MIXIN :UPDATE-SPACE-WIDTH):  (P.C. = 5)
	   Arg 0 (SELF): #<PRESS-STREAM 25501010>
	   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:HARDCOPY-STREAM-FONT-MIXIN -- 7. IV's, 0. FL's 24504150>
	   Arg 2 (OPERATION): :UPDATE-SPACE-WIDTH

	(:METHOD SI:HARDCOPY-STREAM-FONT-MIXIN :AFTER :INIT):  (P.C. = 224)
	   Arg 0 (SELF): #<PRESS-STREAM 25501010>
	   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:HARDCOPY-STREAM-FONT-MIXIN -- 7. IV's, 0. FL's 24504150>
	   Arg 2 (OPERATION): :INIT
	   Arg 3 (PLIST): #<DTP-LOCATIVE 21540306>

	(:METHOD PRESS:PRESS-STREAM :COMBINED :INIT):  (P.C. = 26)
	   Arg 0 (SELF): #<PRESS-STREAM 25501010>
	   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor PRESS:PRESS-STREAM -- 33. IV's, 3. FL's 24504770>
	   Arg 2 (.OPERATION.): :INIT
	   Rest arg (.DAEMON-CALLER-ARGS.): (#<DTP-LOCATIVE 21540306>)

	INSTANTIATE-FLAVOR:  (P.C. = 445)
	   Arg 0 (FLAVOR-NAME): PRESS:PRESS-STREAM
	   Arg 1 (INIT-PLIST): #<DTP-LOCATIVE 21540306>
	   Arg 2 (SEND-INIT-MESSAGE-P): :MAYBE
	   --Defaulted args:--
	   Arg 3 (RETURN-UNHANDLED-KEYWORDS-P): NIL
	   Arg 4 (AREA-TO-CONS-INSTANCE-IN): NIL

	MAKE-INSTANCE:  (P.C. = 6)
	   Arg 0 (FLAVOR-NAME): PRESS:PRESS-STREAM
	   Rest arg (INIT-OPTIONS): (:DEVICE #<PRESS-PRINTER TREMONT-VIA-MC 1141274> :OUTPUT-STREAM #<FILE-OUTPUT-BINARY-STREAM "MC: .DOVR.; CJL >" 25500770> :NEW-PAGE-HOOK #<DTP-COMPILED-FUNCTION SI:HARDCOPY-PRINT-PAGE-HEADING 47371314> :HEADER-FONT-P T :PAGE-NUMBER 0 ...)
	   Local 1 (INIT-OPTIONS): (:MARGINS (2000 1270 2000 1270) :DEVICE #<PRESS-PRINTER TREMONT-VIA-MC 1141274> :OUTPUT-STREAM #<FILE-OUTPUT-BINARY-STREAM "MC: .DOVR.; CJL >" 25500770> :NEW-PAGE-HOOK #<DTP-COMPILED-FUNCTION SI:HARDCOPY-PRINT-PAGE-HEADING 47371314> :HEADER-FONT-P T ...)

	(:METHOD SI:HARDCOPY-DEVICE-MIXIN :MAKE-HARDCOPY-STREAM):  (P.C. = 124)
	   Arg 0 (SELF): #<PRESS-PRINTER TREMONT-VIA-MC 1141274>
	   Arg 1 (SELF-MAPPING-TABLE): SI:HARDCOPY-DEVICE-MIXIN
	   Arg 2 (OPERATION): :MAKE-HARDCOPY-STREAM
	   Arg 3 (OPTIONS): (:NEW-PAGE-HOOK #<DTP-COMPILED-FUNCTION SI:HARDCOPY-PRINT-PAGE-HEADING 47371314> :HEADER-FONT-P T :PAGE-NUMBER 0 :BANNER-FILE-NAME "B:>cjl>Lispm-Init.lisp.1" :BANNER-CREATION-DATE 2685328047)

	SI:MAKE-HARDCOPY-STREAM:  (P.C. = 52)
	   Arg 0 (DEVICE): #<PRESS-PRINTER TREMONT-VIA-MC 1141274>
	   Rest arg (OPTIONS): (:NEW-PAGE-HOOK #<DTP-COMPILED-FUNCTION SI:HARDCOPY-PRINT-PAGE-HEADING 47371314> :HEADER-FONT-P T :PAGE-NUMBER 0 :BANNER-FILE-NAME "B:>cjl>Lispm-Init.lisp.1" :BANNER-CREATION-DATE 2685328047)

	Rest of stack:
	SI:HARDCOPY-FROM-STREAM:  (P.C. = 137)
	SI:HARDCOPY-FILE:  (P.C. = 127)
	ZWEI:DIRED-HARDCOPY-FILE-1:  (P.C. = 51)
	ZWEI:HARDCOPY-FILE-BACKGROUND:  (P.C. = 25)
	ZWEI:HARDCOPY-FILE-BACKGROUND:  (P.C. = 16)
	SI:PROCESS-RUN-FUNCTION-INTERNAL:  (P.C. = 52)
	SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
 3-Apr-85 17:12:09-EST,1693;000000000000
Received: from MIT-ZERMATT by MIT-OZ via Chaosnet; 3 Apr 85 17:09-EST
Received: from BRECKENRIDGE by ZERMATT via CHAOS with CHAOS-MAIL id 725; Wed 3-Apr-85 17:08:33-EST
Date: Wednesday, 3 April 1985, 17:07-EST
From: Richard E. Zippel <RZ at ZERMATT>
Subject: Making Hardcopy to the dover work in REL6
To: cjl at OZ, DCP at SCRC-QUABBIN, BUG-LISPM at OZ
In-Reply-To: <850403161949.1.CJL@MOON.MIT.EDU>
Message-ID: <850403170742.8.RZ@BRECKENRIDGE.MIT.EDU>

    Date: Wednesday, 3 April 1985, 16:19-EST
    From: Chris Lindblad <cjl at OZ>

    I came up with a workaround that gets hardcopying to work. It may be ugly, but it works.

    ;;; Patch to make hardcopy to the dover work again
    ;;;
    press:  ;from SYS:HARDCOPY;PRESS
    (let ((inhibit-fdefine-warnings t))
      (defflavor press-hardcopy-device-mixin () (si:multiple-font-hardcopy-device-mixin)
	(:default-init-plist :default-font 'LPT8 :header-font 'LPT8)))

    (loop for printer in (let ((neti:*inhibit-validity-checking* t))
			   (neti:find-objects-from-property-list :printer :type :press))
	  do (send printer :eval-inside-yourself '(setq default-font 'LPT8))
	     (send printer :eval-inside-yourself '(setq header-font 'LPT8)))

    (advise (:method press:press-stream :character-width) :before :set-device-font nil
      (unless (send (first arglist) :device-current-font)
	(send (first arglist) :set-device-font)))
I believe the real code here should be:

(DEFMETHOD (PRESS-STREAM :CHARACTER-WIDTH) (CHAR)
  (UNLESS SI:DEVICE-CURRENT-FONT
    (SEND SELF :SET-DEVICE-FONT))
  (MAX 0 (AREF (SEVENTH SI:DEVICE-CURRENT-FONT) (CHAR-CODE CHAR))))
instead of the advise thing you put in.
 3-Apr-85 18:29:30-EST,1043;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 3 Apr 85 18:29-EST
Received: from SANCHO-PANZA by MIT-MC via Chaosnet; 3 APR 85  18:29:11 EST
Date: Wednesday, 3 April 1985, 18:28-EST
From: Christopher Eliot <CRE at SANCHO-PANZA>
Subject: Function Refresh
To: BUG-LISPM at OZ
Message-ID: <850403182817.1.CRE@SANCHO-PANZA.MIT.EDU>

In Symbolics 3600 Release 6.0, IP-TCP 29.0, microcode TMC5-MIC 319,
FEP 18, on Lisp Machine Sancho Panza:

Occationally I want to clear the screen while somthing is running.
Function Refresh will do this, but it doesn't move the cursor to
to the upper left corner, which I want it to do.

Another logical place to implement the functionality I want
is on Control-Refresh.  I think this should do what REFRESH
does as an interrupt.  This is analogous to the behavior of ABORT
and SUSPEND when modified by Control.

While I am on the subject of the keyboard, are there
any plans to make the Repeat key functional?  It is not exactly
the most important thing in the world, but it shuldn't hurt.
