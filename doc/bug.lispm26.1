1-Oct-84 02:13:00-EDT,3989;000000000000
Received: from MIT-ROBOT-4 by MIT-OZ via Chaosnet; 1 Oct 84 02:12-EDT
Date: Monday, 1 October 1984, 02:12-EDT
From:  <TIM at MIT-OZ>
Subject: Random [Edit Screen] -> [Create] blowout
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 Release 5.2, on Lisp Machine Robot-4:

Where on earth did Arg 3 (SPEC) came from?  I had created the NVT window
previously using tv:make-window but at this point it had been killed.

>>Trap: The argument given to the CDR instruction, #<NVT-WINDOW Terminal 2 1040212 deactivated>, was not a list, a locative or NIL.
While in the function (:METHOD TV:BASIC-SCROLL-BAR :PARSE-SCROLL-BAR-SPEC)  (:DEFUN-METHOD TV:ADJUST-MARGINS)  (:METHOD TV:BASIC-SCROLL-BAR :BEFORE :INIT)

(:METHOD TV:BASIC-SCROLL-BAR :PARSE-SCROLL-BAR-SPEC):  (P.C. = 25)
   Arg 0 (SELF): #<ZWEI-MINI-BUFFER NIL 1042156 deactivated>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:BASIC-SCROLL-BAR -- 3. IV's, 1. FL's 42047336>
   Arg 2 (OPERATION): :PARSE-SCROLL-BAR-SPEC
   Arg 3 (SPEC): #<NVT-WINDOW Terminal 2 1040212 deactivated>
   Arg 4 (LM): 1
   Arg 5 (TM): 1
   Arg 6 (RM): 1
   Arg 7 (BM): 1
   Local 8 (BAR-WIDTH): NIL

(:DEFUN-METHOD TV:ADJUST-MARGINS):  (P.C. = 73)
   Arg 0 (SELF): #<ZWEI-MINI-BUFFER NIL 1042156 deactivated>
   Arg 1 (SELF-MAPPING-TABLE): TV:ESSENTIAL-WINDOW
   Arg 2 (INSTANCE-VARIABLE): TV:SCROLL-BAR
   Arg 3 (PARSING-MESSAGE): :PARSE-SCROLL-BAR-SPEC
   Arg 4 (PLIST): #<DTP-LOCATIVE 16500451>
   Arg 5 (PLIST-KEYWORD): NIL

(:METHOD TV:BASIC-SCROLL-BAR :BEFORE :INIT):  (P.C. = 12)
   Arg 0 (SELF): #<ZWEI-MINI-BUFFER NIL 1042156 deactivated>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:BASIC-SCROLL-BAR -- 3. IV's, 1. FL's 42047336>
   Arg 2 (OPERATION): :INIT
   Arg 3 (INIT-PLIST): #<DTP-LOCATIVE 16500451>

(:METHOD ZWEI:ZWEI-WITH-TYPEOUT :COMBINED :INIT):  (P.C. = 27)
   Arg 0 (SELF): #<ZWEI-MINI-BUFFER NIL 1042156 deactivated>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZWEI-WITH-TYPEOUT -- 3. IV's, 15. FL's 42047254>
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

TV:MAKE-WINDOW:  (P.C. = 66)
   Arg 0 (FLAVOR-NAME): ZWEI:ZWEI-MINI-BUFFER
   Rest arg (OPTIONS): (:TOP 15 :IO-BUFFER #<IO-BUFFER 36177133: empty, State: NIL> :SUPERIOR #<ZMACS-MODE-LINE-WINDOW Zmacs Mode Line Window 6 1041756 deactivated> :LABEL NIL :SAVE-BITS NIL ...)

(:METHOD ZWEI:MODE-LINE-SUPERIOR-MIXIN :AFTER :INIT):  (P.C. = 44)
   Arg 0 (SELF): #<ZMACS-MODE-LINE-WINDOW Zmacs Mode Line Window 6 1041756 deactivated>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:MODE-LINE-SUPERIOR-MIXIN -- 4. IV's, 0. FL's 45403043>
   Arg 2 (OPERATION): :INIT
   Arg 3 (IGNORE): #<DTP-LOCATIVE 16500352>

(:METHOD ZWEI:ZMACS-MODE-LINE-WINDOW :COMBINED :INIT):  (P.C. = 65)
   Arg 0 (SELF): #<ZMACS-MODE-LINE-WINDOW Zmacs Mode Line Window 6 1041756 deactivated>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMACS-MODE-LINE-WINDOW -- 0. IV's, 11. FL's 45403103>
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

TV:MAKE-WINDOW:  (P.C. = 66)
   Arg 0 (FLAVOR-NAME): ZWEI:ZMACS-MODE-LINE-WINDOW
   Rest arg (OPTIONS): (:NUMBER-OF-MINI-BUFFER-LINES 3 :SUPERIOR #<ZMACS-FRAME Zmacs Frame 5 1041676 deactivated> :IO-BUFFER #<IO-BUFFER 36177133: empty, State: NIL> :BOTTOM 466 :EXPOSE-P T)

Rest of stack:
ZWEI:INITIALIZE-MINI-BUFFER-WINDOW:  (P.C. = 21)
(:METHOD ZWEI:ZWEI-FRAME :AFTER :INIT):  (P.C. = 24)
(:METHOD ZWEI:ZMACS-FRAME :COMBINED :INIT):  (P.C. = 43)
TV:MAKE-WINDOW:  (P.C. = 66)
TV:CREATE-WINDOW-WITH-MOUSE:  (P.C. = 62)
TV:SYSTEM-MENU-CREATE-WINDOW:  (P.C. = 61)
(:METHOD TV:MENU-EXECUTE-MIXIN :EXECUTE):  (P.C. = 61)
(:METHOD TV:DYNAMIC-MULTICOLUMN-MOMENTARY-WINDOW-HACKING-PROCESS-RENAMING-MENU :COMBINED :EXECUTE):  (P.C. = 24)
(:METHOD TV:BASIC-MENU :CHOOSE):  (P.C. = 21)
(:METHOD TV:DYNAMIC-MULTICOLUMN-MOMENTARY-WINDOW-HACKING-MENU :COMBINED :CHOOSE):  (P.C. = 34)
TV:CALL-SYSTEM-MENU:  (P.C. = 26)
SI:PROCESS-RUN-FUNCTION-INTERNAL:  (P.C. = 51)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
 1-Oct-84 05:04:32-EDT,1983;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 1 Oct 84 05:04-EDT
Date: Monday, 1 October 1984, 05:03-EDT
From:  <GAVAN at MIT-PYGMALION>
Subject: Your bug in background mail
To: DCP at SCRC-TENEX, GAVAN at MIT-PYGMALION, JCMA at MIT-OZ,
    BUG-relatus at MIT-OZ, BUG-LISPM at MIT-OZ,
    DODDS at SCRC-STONY-BROOK
In-reply-to: <840930204234.0.DCP@NEPONSET.SCRC.Symbolics>

    Date: Sunday, 30 September 1984, 20:42-EDT
    From: David C. Plummer <DCP at SCRC-TENEX>

	The basic problem is that WITH-OUTPUT-TO-STRING-INTERNAL-FUNCTION does not
	handle the :TYPEOUT-STAYS operation. 
    Say, hey.  Where is it written that :TYPEOUT-STAYS is a generic stream
    operation?  Oh, I see.  The mail service is assuming you are sending the
    mail from an editor buffer that can hack typein-lines.  


    Well, no I'm getting confused.  Maybe you shouldn't be using as much of
    Zwei as you are to be sending the message?  Might it be that
	    ZWEI:RELATUS-SEND-MESSAGE-STRING:  (P.C. = 41)  (from RL: PARSER; BACKGROUN)
    is making assumptions, some of which are false, about program
    interfaces?

Sure might.  You tell me.  Except for the condition-case, it just does:

(SEND (MAKE-INSTANCE 'SEND-MESSAGE-STRING-DRAFT-MSG
		       ':HEADERS `(:TO ,TO :SUBJECT ,SUBJECT) ':TEXT MESSAGE)
	':TRANSMIT)

at MMCM's suggestion, over a year ago.  We had no problem with it until 5.2
appeared upon the scene.

Maybe there should be a generic form, callable from anywhere, that sends mail.
It takes (at least) three arguments, a net address, a subject line, and a
message.  RMS has had this in his system for at least two years.  It's very
handy for sending mail to yourself from inside your code.

I temporarily kludged around this (hopefully) by having :TYPEOUT-STAYS no-op
in SI:STREAM-DEFAULT-HANDLER.  A better fix would be a generic mail facility
that doesn't depend on being in ZWEI.   Maybe there is one and I'm just
ignorant of it?
 1-Oct-84 10:49:18-EDT,1472;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 1 Oct 84 10:47-EDT
Date: Monday, 1 October 1984, 10:46-EDT
From: Ramesh S. Patil <RAMESH at MIT-MC>
Subject: Message of 28-Sep-84 11:10:36
To: AKR%MIT-OZ at MIT-MC.ARPA, bug-lispm%MIT-OZ at MIT-MC.ARPA


    Date: Fri 28 Sep 84 11:10:38-EDT
    From: The Mailer Daemon <Mailer%MIT-OZ@MIT-MC.ARPA>
    To: RAMESH%MIT-OZ@MIT-MC.ARPA
    Subject: Message of 28-Sep-84 11:10:36

    Message failed for the following:
    akr@MIT-OZ.#Chaos: Can't forward - unknown host "0z"
		------------
    Received: from MIT-LISPM-9 by MIT-OZ via Chaosnet; 28 Sep 84 11:10-EDT
    Date: Friday, 28 September 1984, 11:08-EDT
    From: Ramesh S. Patil <RAMESH at MIT-OZ>
    Subject: CADR16
    To: akr at 0z

    Cadr 16 is refusing to boot again.  When I CC it and probe around, it claimed 
    X-bus parity error, so I ran machine test.

    Cadr 16 is giving the following error when I run (CC-TEST-MACHINE):
    in [CC-FAST-ADDRESS-TESTS]

    LEVEL-1-MAP address bit 9 (2777 and 3777) fails storing 1's and then 0 in data bit 3
    LEVEL-1-MAP address bit 9 (2777 and 3777) fails storing 0's and then 1 in data bit 3

    The rest of the test goes through without any hitch.
    Could you tell me what part of the machine is busted?
      - thanks, ramesh
    -------
the problem went away over the weekend.
  I would still like to know what was going on, and what to do if it happens again
  - ramesh
 1-Oct-84 11:03:55-EDT,1136;000000000000
Mail-From: AKR created at  1-Oct-84 11:03:21
Date: Mon, 1 Oct 1984  11:03 EDT
Message-ID: <AKR.12051972703.BABYL@MIT-OZ>
From: AKR@MIT-OZ
To:   "Ramesh S. Patil" <RAMESH@MIT-MC>
Cc:   bug-lispm@MIT-OZ
Subject: Message of 28-Sep-84 11:10:36
In-reply-to: Msg of 1 Oct 1984 10:46-EDT from Ramesh S. Patil <RAMESH at MIT-MC>


This looks like an easy one.  All the memory in the processor is 
arranged by data bits per chip.  99 percent of the time when you
get that kind of failure in cc-test-"something" the corresponding 
static memory chip is broken.

In this case the chip corresponding to bit 3 in the level-1-map
memory is bad.  The processor schematics will give you the exact
location.  level-1-map is VMEM0 I think on the schematics and called
Virtual Memory Map Stage 0.   From the old schematics I have
here that would be chips 1C11 and 1C13.  The are 2 chips and I cannot
remember how to figure out which one it is offhand.  Those are 93425's.
We have them in the stock room.  You can also use 2115's I think but I would
have to check to be certain.

Do you have a set of prints for the cadr?

Alex.
 1-Oct-84 11:10:35-EDT,912;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 1 Oct 84 11:10-EDT
Received: from SCRC-NEPONSET by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 87038; Mon 1-Oct-84 10:58:39-EDT
Date: Mon, 1 Oct 84 10:58 EDT
From: "David C. Plummer" <DCP@SCRC-STONY-BROOK.ARPA>
Subject: Debugger c-E loses against combined methods
To: Tim McNerney <TIM@MIT-MC.ARPA>, BUG-LISPM@MIT-MC.ARPA
In-Reply-To: The message of 26 Sep 84 23:53-EDT from Tim McNerney <TIM at MIT-MC>
Message-ID: <841001105855.9.DCP@NEPONSET.SCRC.Symbolics>

    Date: 26 September 1984 23:53-EDT
    From: Tim McNerney <TIM @ MIT-MC>

    If you have the time, could you make it a bit more "intelligent"?  Four 
    out of five hackers would prefer not to be led to a COMPILE-FLAVOR-METHODS.
I give up, where would you like to be led?  Before you say "the primary
method" consider the case where there isn't one (e.g., just :before,
:after, etc).
 1-Oct-84 11:16:30-EDT,2424;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 1 Oct 84 11:15-EDT
Date: Monday, 1 October 1984, 11:11-EDT
From:  <GAVAN at MIT-PYGMALION>
Subject: Zmail blow-out.
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 Release 5.2, Experimental RELATUS 130.104, FEP 22, on Lisp Machine Buddy Holly:

In ZMAIL, Clicked on QUIT after getting an xmail file using GET INBOX.
This happened.

>>Trap: The first argument given to the AR-1 instruction, NIL, was not an array.
While in the function SEND  SIGNAL  DBG:SIGNAL-TRAP

SEND:  (P.C. = 6)
   Arg 0 (OBJECT): #<WRONG-TYPE-ARGUMENT-TRAP 32262651>
   Arg 1 (MESSAGE-NAME): :SIGNAL
   Rest arg (ARGUMENTS): (T)

SIGNAL:  (from RL: UTILS; KLUDGES)
   Arg 0 (FLAVOR): #<WRONG-TYPE-ARGUMENT-TRAP 32262651>
   Rest arg: NIL

DBG:SIGNAL-TRAP:  (P.C. = 3)
   Arg 0 (COND): #<WRONG-TYPE-ARGUMENT-TRAP 32262651>

SYS:MICROCODE-ERROR-HANDLER:  (P.C. = 101)
   Arg 0 (MICRO-PC): 736.
   Arg 1 (VMA): #<DTP-LOCATIVE 6400525>
   Arg 2 (MACRO-PC): NIL
   Arg 3 (OLD-INHIBIT-SCHEDULING-FLAG): #<DTP-ODD-PC 44752545>

(:METHOD ZWEI:SEQUENCE :EXPUNGE):  (P.C. = 355)
   Arg 0 (SELF): #<BABYL-BUFFER "OZ:OZ:<GAVAN>ORG.XMAIL" 32260766>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:SEQUENCE -- 6. IV's, 0. FL's 77573131>
   Arg 2 (OPERATION): :EXPUNGE
   Arg 3 (DELETED-MSGS): T

(:METHOD ZWEI:ITS-BUFFER-MIXIN :COMBINED :EXPUNGE):  (P.C. = 51)
   Arg 0 (SELF): #<BABYL-BUFFER "OZ:OZ:<GAVAN>ORG.XMAIL" 32260766>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ITS-BUFFER-MIXIN -- 0. IV's, 3. FL's 77573104>
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

ZWEI:EXPUNGE-SEQUENCE:  (P.C. = 6)
   Arg 0 (SEQUENCE): #<BABYL-BUFFER "OZ:OZ:<GAVAN>ORG.XMAIL" 32260766>
   --Defaulted args:--
   Arg 1 (DELETED-MSGS): T

ZWEI:EXPUNGE-AND-SAVE-SEQUENCE:  (P.C. = 6)
   Arg 0 (SEQUENCE): #<BABYL-BUFFER "OZ:OZ:<GAVAN>ORG.XMAIL" 32260766>

Rest of stack:
ZWEI:ZMAIL-SAVE-ALL:  (P.C. = 10)
ZWEI:COM-ZMAIL-QUIT:  (P.C. = 33)
ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
ZWEI:ZMAIL-COMMAND-EXECUTE:  (P.C. = 6)
(:INTERNAL ZWEI:ZMAIL-COMMAND-LIST 0.):  (P.C. = 10)
ZWEI:ZMAIL-COMMAND-LIST:  (P.C. = 12)
(:METHOD ZWEI:ZMAIL-FRAME :PROCESS-SPECIAL-COMMAND):  (P.C. = 16)
(:METHOD ZWEI:ZMAIL-FRAME :COMMAND-LOOP):  (P.C. = 141)
(:METHOD ZWEI:ZMAIL-FRAME :COMBINED :COMMAND-LOOP):  (P.C. = 47)
ZWEI:ZMAIL-PROCESS-TOP-LEVEL:  (P.C. = 52)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
 1-Oct-84 13:45:48-EDT,1603;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 1 Oct 84 13:41-EDT
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 101146; Mon 1-Oct-84 13:38:13-EDT
Date: Monday, 1 October 1984, 13:37-EDT
From: David C. Plummer <DCP at SCRC-TENEX>
Subject: Zmail blow-out.
To: GAVAN at MIT-PYGMALION, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 1 Oct 84 11:11-EDT from GAVAN at MIT-PYGMALION
Message-ID: <841001133718.0.DCP@NEPONSET.SCRC.Symbolics>
Fonts: CPTFONT, CPTFONTB

    Date: Monday, 1 October 1984, 11:11-EDT
    From:  <GAVAN at MIT-PYGMALION>

    In Symbolics 3600 Release 5.2, Experimental RELATUS 130.104, FEP 22, on Lisp Machine Buddy Holly:

    In ZMAIL, Clicked on QUIT after getting an xmail file using GET INBOX.
    This happened.

    >>Trap: The first argument given to the AR-1 instruction, NIL, was not an array.
    While in the function SEND  SIGNAL  DBG:SIGNAL-TRAP

    SEND:  (P.C. = 6)
       Arg 0 (OBJECT): #<WRONG-TYPE-ARGUMENT-TRAP 32262651>
       Arg 1 (MESSAGE-NAME): :SIGNAL
       Rest arg (ARGUMENTS): (T)

    SIGNAL:  1(from RL: UTILS; KLUDGES)
0       Arg 0 (FLAVOR): #<WRONG-TYPE-ARGUMENT-TRAP 32262651>
       Rest arg: NIL

I'm not sure what we can do if you insist on redefing system functions.
SIGNAL appears to be running interpreted, since it is calling SEND.
There is no AREF in SEND, so I can only guess that it is really bombing
out in SYS:CALL-FUNNY-FUNCTION.  If you insist this is our bug, then c-N
down the stack a couple times so we can see who is really signalling the
error.
 1-Oct-84 14:49:42-EDT,1018;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 1 Oct 84 14:48-EDT
Received: from SCRC-STILLWATER by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 87085; Mon 1-Oct-84 12:05:57-EDT
Date: Mon, 1 Oct 84 12:07 EDT
From: "James J. Cherry" <cherry@QUABBIN.SCRC.Symbolics>
Subject: Debugger c-E loses against combined methods
To: DCP@STONY-BROOK.SCRC.Symbolics, TIM@MIT-MC.ARPA,
    BUG-LISPM@MIT-MC.ARPA
In-reply-to: <841001105855.9.DCP@NEPONSET.SCRC.Symbolics>

    Date: Mon, 1 Oct 84 10:58 EDT
    From: "David C. Plummer" <DCP@SCRC-STONY-BROOK.ARPA>

	Date: 26 September 1984 23:53-EDT
	From: Tim McNerney <TIM @ MIT-MC>

	If you have the time, could you make it a bit more "intelligent"?  Four 
	out of five hackers would prefer not to be led to a COMPILE-FLAVOR-METHODS.
    I give up, where would you like to be led?  Before you say "the primary
    method" consider the case where there isn't one (e.g., just :before,
    :after, etc).

Give me a choice, like M-. does (do you mean mumble, y-or-n-p)
 2-Oct-84 00:22:38-EDT,1672;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 2 Oct 84 00:22-EDT
Date: 2 October 1984 00:21-EDT
From: Tim McNerney <TIM @ MIT-MC>
Subject:  Debugger c-E loses against combined methods
To: DCP @ SCRC-STONY-BROOK
cc: BUG-LISPM @ MIT-MC
In-reply-to: Msg of Mon 1 Oct 84 10:58 EDT from David C. Plummer <DCP at SCRC-STONY-BROOK.ARPA>

    Date: Mon, 1 Oct 84 10:58 EDT
    From: David C. Plummer <DCP at SCRC-STONY-BROOK.ARPA>
    To:   Tim McNerney <TIM at MIT-MC.ARPA>, BUG-LISPM at MIT-MC.ARPA
    Re:   Debugger c-E loses against combined methods

        Date: 26 September 1984 23:53-EDT
        From: Tim McNerney <TIM @ MIT-MC>

        If you have the time, could you make it a bit more "intelligent"?  Four 
        out of five hackers would prefer not to be led to a COMPILE-FLAVOR-METHODS.

    I give up, where would you like to be led?  Before you say "the primary
    method" consider the case where there isn't one (e.g., just :before,
    :after, etc).

All I really wanted was something that would not waste time chasing after
something useless when I accidentally typed c-E while in the stack frame of a
:combined-method.  We've seen a number of reasonable responses from your
collegues.  Anyone one of them would be acceptable, but here are a few more:

The least hairy:

  [Feep] "Did you really want to do this?  There are more more appropriate 
  methods to edit further up the stack."

The most hairy:

  Using a mechanism like Edit Callers does, let the user visit all of the
  methods subsumed by the combined method, going to each subsequent one
  with c-. (presumably in the order they would be executed).


 2-Oct-84 08:55:15-EDT,6265;000000000000
Received: from MIT-JANIS by MIT-OZ via Chaosnet; 2 Oct 84 08:54-EDT
Date: Tuesday, 2 October 1984, 08:53-EDT
From: Ken Haase <KWH at MIT-OZ>
Subject: File server lossage.
To: BUG-LISPM at MIT-OZ
Cc: Bug-PIG at MIT-OZ

In Symbolics 3600 Release 5.2, FEP 18, on Lisp Machine Janis Joplin:

This happened repeatedly on a file being loaded from PIG.


>>Error: illegal record encountered; STV = !UL
         For ARLO: SOURCES; WHISTLES.BIN.84
While in the function (:DEFUN-METHOD FS:FILE-PROCESS-ASYNC-MARK)  (:DEFUN-METHOD FS:FILE-NEXT-READ-PKT)  (:METHOD FS:FILE-INPUT-STREAM-MIXIN :GET-NEXT-INPUT-PKT)

FS:FILE-SIGNAL:  (P.C. = 26)
   Arg 0 (STRING): "I2118 ERROR MSC F illegal record encountered; STV = !UL"
   Arg 1 (PATHNAME): #<LOGICAL-PATHNAME "ARLO: SOURCES; WHISTLES.BIN.84">
   Rest arg (OPTIONS): (:STREAM #<FILE-INPUT-BINARY-STREAM "ARLO: SOURCES; WHISTLES.BIN.84" 10053554>)
   Local 3 (CODE): "MSC"
   Local 4 (SEVERITY): :FATAL
   Local 5 (DESCRIPTION): "illegal record encountered; STV = !UL"

(:DEFUN-METHOD FS:FILE-PROCESS-ASYNC-MARK):  (P.C. = 20)
   Arg 0 (SELF): #<FILE-INPUT-BINARY-STREAM "ARLO: SOURCES; WHISTLES.BIN.84" 10053554>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:FILE-DATA-STREAM-MIXIN -- 6. IV's, 0. FL's 41423367>
   Arg 2 (PKT): #<Chaos Packet 6142263>

(:DEFUN-METHOD FS:FILE-NEXT-READ-PKT):  (P.C. = 67)
   Arg 0 (SELF): #<FILE-INPUT-BINARY-STREAM "ARLO: SOURCES; WHISTLES.BIN.84" 10053554>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:FILE-INPUT-STREAM-MIXIN -- 5. IV's, 1. FL's 41423425>
   Arg 2 (NO-HANG-P): NIL
   Arg 3 (FOR-SYNC-MARK-P): NIL

(:METHOD FS:FILE-INPUT-STREAM-MIXIN :GET-NEXT-INPUT-PKT):  (P.C. = 17)
   Arg 0 (SELF): #<FILE-INPUT-BINARY-STREAM "ARLO: SOURCES; WHISTLES.BIN.84" 10053554>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:FILE-INPUT-STREAM-MIXIN -- 5. IV's, 1. FL's 41423425>
   Arg 2 (OPERATION): :GET-NEXT-INPUT-PKT
   Arg 3 (NO-HANG-P): NIL

(:METHOD CHAOS:BINARY-INPUT-STREAM-MIXIN :NEXT-INPUT-BUFFER):  (P.C. = 6)
   Arg 0 (SELF): #<FILE-INPUT-BINARY-STREAM "ARLO: SOURCES; WHISTLES.BIN.84" 10053554>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor CHAOS:BINARY-INPUT-STREAM-MIXIN -- 1. IV's, 0. FL's 41423347>
   Arg 2 (OPERATION): :NEXT-INPUT-BUFFER
   Arg 3 (NO-HANG-P): NIL

(:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :SETUP-NEXT-INPUT-BUFFER):  (P.C. = 11)
   Arg 0 (SELF): #<FILE-INPUT-BINARY-STREAM "ARLO: SOURCES; WHISTLES.BIN.84" 10053554>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:BASIC-BUFFERED-INPUT-STREAM -- 3. IV's, 0. FL's 41423376>
   Arg 2 (OPERATION): :SETUP-NEXT-INPUT-BUFFER
   --Defaulted args:--
   Arg 3 (NO-HANG-P): NIL

(:METHOD FS:FILE-INPUT-BINARY-STREAM :COMBINED :SETUP-NEXT-INPUT-BUFFER):  (P.C. = 10)
   Arg 0 (SELF): #<FILE-INPUT-BINARY-STREAM "ARLO: SOURCES; WHISTLES.BIN.84" 10053554>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:FILE-INPUT-BINARY-STREAM -- 1. IV's, 7. FL's 41423435>
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

(:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :TYI):  (P.C. = 13)
   Arg 0 (SELF): #<FILE-INPUT-BINARY-STREAM "ARLO: SOURCES; WHISTLES.BIN.84" 10053554>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:BASIC-BUFFERED-INPUT-STREAM -- 3. IV's, 0. FL's 41423376>
   Arg 2 (OPERATION): :TYI
   Arg 3 (EOF): "Unexpected end of file before logical end of binary data"

Rest of stack:
SI:BIN-NEXT-BYTE:  (P.C. = 5)
SI:BIN-LOAD-NEXT-COMMAND:  (P.C. = 3)
SI:BIN-NEXT-VALUE:  (P.C. = 5)
SI:LOAD-BIN-OP-PACKAGE-SYMBOL:  (P.C. = 7)
SI:BIN-LOAD-NEXT-COMMAND:  (P.C. = 24)
SI:BIN-NEXT-VALUE:  (P.C. = 5)
SI:LOAD-LIST:  (P.C. = 16)
SI:LOAD-BIN-OP-LIST-IMMEDIATE:  (P.C. = 10)
SI:BIN-LOAD-NEXT-COMMAND:  (P.C. = 21)
SI:BIN-NEXT-VALUE:  (P.C. = 5)
SI:LOAD-LIST:  (P.C. = 16)
SI:LOAD-BIN-OP-LIST-IMMEDIATE:  (P.C. = 10)
SI:BIN-LOAD-NEXT-COMMAND:  (P.C. = 21)
SI:BIN-NEXT-VALUE:  (P.C. = 5)
SI:LOAD-LIST:  (P.C. = 16)
SI:LOAD-BIN-OP-LIST-IMMEDIATE:  (P.C. = 10)
SI:BIN-LOAD-NEXT-COMMAND:  (P.C. = 21)
SI:BIN-NEXT-VALUE:  (P.C. = 5)
SI:LOAD-LIST:  (P.C. = 16)
SI:LOAD-BIN-OP-LIST-IMMEDIATE:  (P.C. = 10)
SI:BIN-LOAD-NEXT-COMMAND:  (P.C. = 21)
SI:BIN-NEXT-VALUE:  (P.C. = 5)
SI:LOAD-LIST:  (P.C. = 16)
SI:LOAD-BIN-OP-LIST-IMMEDIATE:  (P.C. = 10)
SI:BIN-LOAD-NEXT-COMMAND:  (P.C. = 21)
SI:BIN-NEXT-VALUE:  (P.C. = 5)
SI:LOAD-LIST:  (P.C. = 16)
SI:LOAD-BIN-OP-LIST-IMMEDIATE:  (P.C. = 10)
SI:BIN-LOAD-NEXT-COMMAND:  (P.C. = 21)
SI:BIN-NEXT-VALUE:  (P.C. = 5)
SI:LOAD-LIST:  (P.C. = 16)
SI:LOAD-BIN-OP-LIST-IMMEDIATE:  (P.C. = 10)
SI:BIN-LOAD-NEXT-COMMAND:  (P.C. = 21)
SI:BIN-NEXT-VALUE:  (P.C. = 5)
SI:LOAD-LIST:  (P.C. = 16)
SI:LOAD-BIN-OP-LIST-IMMEDIATE:  (P.C. = 10)
SI:BIN-LOAD-NEXT-COMMAND:  (P.C. = 21)
SI:BIN-NEXT-VALUE:  (P.C. = 5)
SI:LOAD-LIST:  (P.C. = 16)
SI:LOAD-BIN-OP-LIST-IMMEDIATE:  (P.C. = 10)
SI:BIN-LOAD-NEXT-COMMAND:  (P.C. = 21)
SI:BIN-NEXT-VALUE:  (P.C. = 5)
SI:LOAD-LIST:  (P.C. = 16)
SI:LOAD-BIN-OP-LIST-IMMEDIATE:  (P.C. = 10)
SI:BIN-LOAD-NEXT-COMMAND:  (P.C. = 21)
SI:BIN-NEXT-VALUE:  (P.C. = 5)
SI:LOAD-LIST:  (P.C. = 16)
SI:LOAD-BIN-OP-LIST-IMMEDIATE:  (P.C. = 10)
SI:BIN-LOAD-NEXT-COMMAND:  (P.C. = 21)
SI:BIN-NEXT-VALUE:  (P.C. = 5)
SI:LOAD-BIN-OP-FORM:  (P.C. = 3)
SI:BIN-LOAD-NEXT-COMMAND:  (P.C. = 24)
SI:BIN-LOAD-TOP-LEVEL:  (P.C. = 6)
(:METHOD ZWEI:MAJOR-MODE :DEFAULT :LOAD-BINARY-FILE):  (P.C. = 4)
SI:BIN-LOAD-FILE-INTERNAL:  (P.C. = 131)
SI:BIN-LOAD-FILE:  (P.C. = 22)
SI:FASLOAD-1:  (P.C. = 5)
SI:DO-FILE-TRANSFORMATIONS:  (P.C. = 242)
SI:PERFORM-TRANSFORMATIONS:  (P.C. = 166)
MAKE-SYSTEM:  (P.C. = 222)
SI:REQUIRE-SYSTEM:  (P.C. = 23)
SI:*EVAL:  (P.C. = 370)
SI:LOAD-BIN-OP-FORM:  (P.C. = 4)
SI:BIN-LOAD-NEXT-COMMAND:  (P.C. = 24)
SI:BIN-LOAD-TOP-LEVEL:  (P.C. = 6)
(:METHOD ZWEI:MAJOR-MODE :DEFAULT :LOAD-BINARY-FILE):  (P.C. = 4)
SI:BIN-LOAD-FILE-INTERNAL:  (P.C. = 131)
SI:BIN-LOAD-FILE:  (P.C. = 22)
SI:FASLOAD-1:  (P.C. = 5)
SI:DO-FILE-TRANSFORMATIONS:  (P.C. = 242)
SI:PERFORM-TRANSFORMATIONS:  (P.C. = 166)
MAKE-SYSTEM:  (P.C. = 222)
SI:*EVAL:  (P.C. = 370)
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 200)
SI:LISP-COMMAND-LOOP:  (P.C. = 115)
SI:LISP-TOP-LEVEL1:  (P.C. = 22)
SI:LISP-TOP-LEVEL2:  (P.C. = 5)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
 2-Oct-84 11:56:43-EDT,1532;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 2 Oct 84 11:55-EDT
Received: from SCRC-HARLEM by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 87470; Tue 2-Oct-84 11:54:32-EDT
Date: Tuesday, 2 October 1984, 11:55-EDT
From: Joseph R Goldstone <joseph at SCRC-QUABBIN>
Subject: Unable to do :TYI's from the serial port.
To: David C. Plummer <DCP at SCRC-TENEX>, Ken Haase <KWH at MIT-OZ>,
    BUG-LISPM at MIT-OZ, HOSS at SCRC-TENEX
In-Reply-To: <840926202250.1.DCP@NEPONSET.SCRC.Symbolics>
Message-ID: <841002115512.4.JOSEPH@HARLEM.SCRC.Symbolics>

    Date: Wednesday, 26 September 1984, 20:22-EDT
    From: David C. Plummer <DCP at SCRC-TENEX>

	Date: Saturday, 22 September 1984, 13:55-EDT
	From: Ken Haase <KWH at MIT-OZ>

	In Symbolics 3600 Release 5.2, FEP 18, on Lisp Machine Keith Moon:

	The method [(:METHOD SI:ASCII-TRANSLATING-INPUT-STREAM-MIXIN :WHOPPER :TYI)]
	was redefined in 242.341 as not taking any arguments.  This seems to make it
	impossible to do :TYI's from the serial port.

	>>Trap: The function (:METHOD SI:ASCII-TRANSLATING-INPUT-STREAM-MIXIN :WHOPPER :TYI) was called with too many arguments.
	While in the function (:METHOD SI:ASCII-TRANSLATING-INPUT-STREAM-MIXIN :WHOPPER :TYI)  (:INTERNAL (:METHOD SI:SERIAL-CHARACTER-STREAM :COMBINED :TYI) 0)  (:METHOD SI:BASIC-SERIAL-STREAM :WHOPPER :TYI)

    I haven't seen an answer to this.  I wish I had.  I also wish I could
    find a 5.2 bulletin to see if there was a fix for it.
You can get a 5.2 bulletin from Joanne Hukee.
 2-Oct-84 15:34:34-EDT,721;000000000000
Received: from MIT-APIARY-10 by MIT-OZ via Chaosnet; 2 Oct 84 15:23-EDT
Date: Tuesday, 2 October 1984, 15:21-EDT
From: Henry Lieberman <Henry at MIT-OZ>
Subject: Namespace error messages
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 Release 5.2, FEP 18, on APIARY-10:

Is there any way to muzzle those #!@%ing namespace error messages that
say things like "Host .... was mentioned but not found", "Obsolete host
information ...." and such? They come so frequently that they are VERY
annoying and disruptive, and I don't know what use I can make of the
information they provide anyway. Isn't there some way I can dike them out, 
at least until the namespace server software gets fixed so it works 
smoothly?

 2-Oct-84 16:25:20-EDT,1831;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 2 Oct 84 16:21-EDT
Date: Tuesday, 2 October 1984, 16:19-EDT
From:  <GAVAN at MIT-PYGMALION>
Subject: Zmail blow-out.
To: DCP at SCRC-TENEX, GAVAN at MIT-PYGMALION, BUG-LISPM at MIT-OZ
In-reply-to: <841001133718.0.DCP@NEPONSET.SCRC.Symbolics>
Fonts: CPTFONT, CPTFONTB

    Date: Monday, 1 October 1984, 13:37-EDT
    From: David C. Plummer <DCP at SCRC-TENEX>

	Date: Monday, 1 October 1984, 11:11-EDT
	From:  <GAVAN at MIT-PYGMALION>

	In Symbolics 3600 Release 5.2, Experimental RELATUS 130.104, FEP 22, on Lisp Machine Buddy Holly:

	In ZMAIL, Clicked on QUIT after getting an xmail file using GET INBOX.
	This happened.

	>>Trap: The first argument given to the AR-1 instruction, NIL, was not an array.
	While in the function SEND  SIGNAL  DBG:SIGNAL-TRAP

    I'm not sure what we can do if you insist on redefing system functions.

As I understand it, SIGNAL randomly conses in whatever area DEFAULT-CONS-AREA
is bound to.  It's redefined to cons in SI:WORKING-STORAGE-AREA.  This bug has
been reported, but it's not yet fixed in the system.  Sorry, we insist on
redefining broken system functions, which we'll unredefine as soon as they're
fixed.  One of the reasons I like lisp is that it gives you this capability.

    SIGNAL appears to be running interpreted, since it is calling SEND.
    There is no AREF in SEND, so I can only guess that it is really bombing
    out in SYS:CALL-FUNNY-FUNCTION.  

No, further down the stack.  I believe SYS:CALL-FUNNY-FUNCTION is called
whenever you're about to enter the debugger.

    If you insist this is our bug, then c-N down the stack a couple times so
    we can see who is really signalling the error.

What's the problem?  I sent you the whole stack.  Is your control-v broken?
Assum
 2-Oct-84 16:41:42-EDT,2827;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 2 Oct 84 16:35-EDT
Date: 2 October 1984 16:18-EDT
From: Kent M Pitman <KMP @ MIT-MC>
Subject:  Namespaces, A Priority Issue
To: Hornig @ SCRC-STONY-BROOK
cc: DPH @ MIT-MC, CSTACY @ MIT-MC, BUG-LISPM @ MIT-MC, Hewitt @ MIT-OZ,
    Gavan @ MIT-OZ, JCMa @ MIT-OZ

    From: Charles Hornig <Hornig@SCRC-STONY-BROOK.ARPA>
    To:   Kent M Pitman <KMP@MIT-MC.ARPA>
    cc:   Bug-Tracker@SCRC-STONY-BROOK.ARPA
    Re:   Namespace lossage in Symbolics 5.0 and above
    In-Reply-To: Msg of 27 Aug 84 16:27-EDT from Kent M Pitman <KMP at MIT-MC>
    Disposition: LOW-PRIORITY
    Category: namespace-suggestion
    Message-ID: <841002105646.3.HORNIG@PEACE.SCRC.Symbolics>

    Synopsis: KMP suggests that namespace information be cached in the local
    machine.

      -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --

	Date: 27 August 1984 16:27-EDT
	From: Kent M Pitman <KMP @ MIT-MC>

	As you may or may not know, there has been a lot of trouble around 
	MIT in the last few days with namespace stuff working unreliably. 
	Either LM15 is not responding or not responding fast enough, but 
	the end effect is that all the machines around suffer...

	It occurs to me to wonder why namespace information is cached in
	the local band environment (requiring disk-save to update) rather 
	than on a separate partition (ie, fep file)...

I hope the "low-priority" on this message refers to this particular strategy
for fixing namespaces and not to namespaces in general.

A quick informal survey of about 9 LispM users shows that Namespace problems
are almost universally considered high priority here. Some people thought 
there were problems as pressing, but none thought there were more pressing
problems.

Hewitt had the most favorable thing to say about the current state of 
namespaces when he said that the current level of support was ``not very
pleasing'' ... he corrected himself immediately afterward to say
``unsatisfactory.'' About half of those surveyed said the namespace code
should be fixed immediately or dyked out. Several suggested the situation
was hopeless and that we should give up on Symbolics and tell them we'll buy
Interlisp machines in the future. Others seemed content with internal 
variables they had found that disabled validity checking, etc. in the
namespace code. 

All in all, I find this a very sad state of affairs. The namespace situation
continues to be bad here. People complain about it a lot. It's gonna get
you a lot of bad press if anyone phones up and asks what using a 3600 is
like these days.

Especially since the systems with the problems are not beta-test but 
real releases, I'd recommend make fixing the namespace lossage your 
number one concern.

-kmp
 2-Oct-84 17:21:35-EDT,3309;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 2 Oct 84 17:20-EDT
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 102300; Tue 2-Oct-84 17:12:37-EDT
Date: Tuesday, 2 October 1984, 17:11-EDT
From: David C. Plummer <DCP at SCRC-TENEX>
Subject: Zmail blow-out.
To: GAVAN at MIT-PYGMALION, DCP at SCRC-TENEX, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 2 Oct 84 16:19-EDT from GAVAN at MIT-PYGMALION
Message-ID: <841002171120.2.DCP@NEPONSET.SCRC.Symbolics>
Fonts: CPTFONT, CPTFONTB

    Date: Tuesday, 2 October 1984, 16:19-EDT
    From:  <GAVAN at MIT-PYGMALION>

	Date: Monday, 1 October 1984, 13:37-EDT
	From: David C. Plummer <DCP at SCRC-TENEX>

	    Date: Monday, 1 October 1984, 11:11-EDT
	    From:  <GAVAN at MIT-PYGMALION>

	    In Symbolics 3600 Release 5.2, Experimental RELATUS 130.104, FEP 22, on Lisp Machine Buddy Holly:

	    In ZMAIL, Clicked on QUIT after getting an xmail file using GET INBOX.
	    This happened.

	    >>Trap: The first argument given to the AR-1 instruction, NIL, was not an array.
	    While in the function SEND  SIGNAL  DBG:SIGNAL-TRAP

	I'm not sure what we can do if you insist on redefing system functions.

    As I understand it, SIGNAL randomly conses in whatever area DEFAULT-CONS-AREA
    is bound to.  It's redefined to cons in SI:WORKING-STORAGE-AREA.  This bug has
    been reported, but it's not yet fixed in the system.  Sorry, we insist on
    redefining broken system functions, which we'll unredefine as soon as they're
    fixed.  One of the reasons I like lisp is that it gives you this capability.

OK, I made the source of signal bind DEFAULT-CONS-AREA to
BACKGROUND-CONS-AREA.  I've been screwed by this before too.

You still didn't tell me why your SIGNAL is apparently interpreted.

	SIGNAL appears to be running interpreted, since it is calling SEND.
	There is no AREF in SEND, so I can only guess that it is really bombing
	out in SYS:CALL-FUNNY-FUNCTION.  

    No, further down the stack.  I believe SYS:CALL-FUNNY-FUNCTION is called
    whenever you're about to enter the debugger.

No, SYS:CALL-FUNNY-FUNCTION gets invoked when you FUNCALL something
other than a compiled function, symbol or instance.  Arrays and stack
groups, are more-or-less legal things to funcall.  Interpreted
definitions too.

	If you insist this is our bug, then c-N down the stack a couple times so
	we can see who is really signalling the error.

    What's the problem?  I sent you the whole stack.  Is your control-v broken?
    Assum

OK.  Because SIGNAL is interpreted, it is calling SEND, which doesn't
have an ERROR-REPORTER property (which is correct), so it looked like it
was getting the error in SEND.  It even said so:
    >>Trap: The first argument given to the AR-1 instruction, NIL, was not an array.
    While in the function SEND  SIGNAL  DBG:SIGNAL-TRAP

The bug in Zmail still stands.  It may be that you typed Quit while the
background was still parsing headers.  Things like this have been broken
in Zmail for a long time.  It's hit me many times before.  Some of this
will be better in Release 6.  The rule of thumb with Zmail: Don't type
Q, E, S, G or any menu item that does any of those until Zmail is
completely quiescent.
 2-Oct-84 17:22:23-EDT,3502;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 2 Oct 84 17:21-EDT
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 102301; Tue 2-Oct-84 17:14:04-EDT
Date: Tuesday, 2 October 1984, 17:12-EDT
From: David C. Plummer <DCP at SCRC-TENEX>
Subject: Zmail blow-out.
To: GAVAN at MIT-PYGMALION, DCP at SCRC-TENEX, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 2 Oct 84 16:19-EDT from GAVAN at MIT-PYGMALION
Supersedes: <841002171120.2.DCP@NEPONSET.SCRC.Symbolics>
Message-ID: <841002171251.3.DCP@NEPONSET.SCRC.Symbolics>
Fonts: CPTFONT, CPTFONTB

    Date: Tuesday, 2 October 1984, 16:19-EDT
    From:  <GAVAN at MIT-PYGMALION>

	Date: Monday, 1 October 1984, 13:37-EDT
	From: David C. Plummer <DCP at SCRC-TENEX>

	    Date: Monday, 1 October 1984, 11:11-EDT
	    From:  <GAVAN at MIT-PYGMALION>

	    In Symbolics 3600 Release 5.2, Experimental RELATUS 130.104, FEP 22, on Lisp Machine Buddy Holly:

	    In ZMAIL, Clicked on QUIT after getting an xmail file using GET INBOX.
	    This happened.

	    >>Trap: The first argument given to the AR-1 instruction, NIL, was not an array.
	    While in the function SEND  SIGNAL  DBG:SIGNAL-TRAP

	I'm not sure what we can do if you insist on redefing system functions.

    As I understand it, SIGNAL randomly conses in whatever area DEFAULT-CONS-AREA
    is bound to.  It's redefined to cons in SI:WORKING-STORAGE-AREA.  This bug has
    been reported, but it's not yet fixed in the system.  Sorry, we insist on
    redefining broken system functions, which we'll unredefine as soon as they're
    fixed.  One of the reasons I like lisp is that it gives you this capability.

OK, I made the source of signal bind DEFAULT-CONS-AREA to
BACKGROUND-CONS-AREA.  I've been screwed by this before too.  I don't
remember the arguments against doing this, but whoever changes the code
back better put the arguments in comment in SIGNAL.

You still didn't tell me why your SIGNAL is apparently interpreted.

	SIGNAL appears to be running interpreted, since it is calling SEND.
	There is no AREF in SEND, so I can only guess that it is really bombing
	out in SYS:CALL-FUNNY-FUNCTION.  

    No, further down the stack.  I believe SYS:CALL-FUNNY-FUNCTION is called
    whenever you're about to enter the debugger.

No, SYS:CALL-FUNNY-FUNCTION gets invoked when you FUNCALL something
other than a compiled function, symbol or instance.  Arrays and stack
groups, are more-or-less legal things to funcall.  Interpreted
definitions too.

	If you insist this is our bug, then c-N down the stack a couple times so
	we can see who is really signalling the error.

    What's the problem?  I sent you the whole stack.  Is your control-v broken?
    Assum

OK.  Because SIGNAL is interpreted, it is calling SEND, which doesn't
have an ERROR-REPORTER property (which is correct), so it looked like it
was getting the error in SEND.  It even said so:
    >>Trap: The first argument given to the AR-1 instruction, NIL, was not an array.
    While in the function SEND  SIGNAL  DBG:SIGNAL-TRAP

The bug in Zmail still stands.  It may be that you typed Quit while the
background was still parsing headers.  Things like this have been broken
in Zmail for a long time.  It's hit me many times before.  Some of this
will be better in Release 6.  The rule of thumb with Zmail: Don't type
Q, E, S, G or any menu item that does any of those until Zmail is
completely quiescent.
 2-Oct-84 18:02:37-EDT,1243;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 2 Oct 84 18:01-EDT
Received: from SCRC-PEACE by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 102337; Tue 2-Oct-84 18:02:49-EDT
Date: Tuesday, 2 October 1984, 18:01-EDT
From: Charles Hornig <Hornig at SCRC-STONY-BROOK>
Subject: Namespace error messages
To: Henry Lieberman <Henry at MIT-OZ>, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 2 Oct 84 15:21-EDT from Henry Lieberman <Henry at MIT-OZ>
Message-ID: <841002180136.2.HORNIG@PEACE.SCRC.Symbolics>

    Date: Tuesday, 2 October 1984, 15:21-EDT
    From: Henry Lieberman <Henry at MIT-OZ>

    In Symbolics 3600 Release 5.2, FEP 18, on APIARY-10:

    Is there any way to muzzle those #!@%ing namespace error messages that
    say things like "Host .... was mentioned but not found", "Obsolete host
    information ...." and such? They come so frequently that they are VERY
    annoying and disruptive, and I don't know what use I can make of the
    information they provide anyway. Isn't there some way I can dike them out, 
    at least until the namespace server software gets fixed so it works 
    smoothly?

(deff neti:namespace-warning #'ignore) will do a very effective job of
getting rid of them.
 2-Oct-84 20:00:53-EDT,3114;000000000000
Received: from MIT-TWEETY-PIE by MIT-OZ via Chaosnet; 2 Oct 84 20:00-EDT
Date: Tuesday, 2 October 1984, 19:57-EDT
From: Webster Dove <dove at MIT-BUGS-BUNNY>
Subject: peek bug
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 Release 5.2, UTIL 1.5, FPA 1.0,
Experimental IP-TCP 15.3, on Lisp Machine Tweety Pie:

I got this when trying to peek on the file system.

>>Error: The object #<HOST MC 43213042> received a :PEEK-FILE-SYSTEM-P message, which went unclaimed.
         The rest of the message was ()
While in the function (:METHOD NET:OBJECT :UNCLAIMED-MESSAGE)  SI:FLAVOR-UNCLAIMED-MESSAGE  SI:INSTANCE-HASH-UNCLAIMED-MESSAGE

(:METHOD NET:OBJECT :UNCLAIMED-MESSAGE):  (P.C. = 31)
   Arg 0 (SELF): #<HOST MC 43213042>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NET:OBJECT -- 3. IV's, 1. FL's 41244764>
   Arg 2 (OPERATION): :UNCLAIMED-MESSAGE
   Arg 3 (MESSAGE): :PEEK-FILE-SYSTEM-P
   Rest arg (ARGS): NIL

SI:FLAVOR-UNCLAIMED-MESSAGE:  (P.C. = 20)
   Arg 0 (SELF): #<HOST MC 43213042>
   Arg 1 (IGNORE): NIL
   Rest arg (MESSAGE): (:PEEK-FILE-SYSTEM-P)

SI:INSTANCE-HASH-UNCLAIMED-MESSAGE:  (P.C. = 35)
   Arg 0 (SELF): #<HOST MC 43213042>
   Arg 1 (SELF-MAPPING-TABLE): NIL
   Rest arg (MESSAGE): NIL

(:INTERNAL TV:PEEK-FILE-SYSTEM 0.):  (P.C. = 17)

TV:SCROLL-MAINTAIN-LIST-UPDATE-FUNCTION:  (P.C. = 12)
   Arg 0 (ITEM): ((:PRE-PROCESS-FUNCTION TV:SCROLL-MAINTAIN-LIST-UPDATE-FUNCTION :FUNCTION NIL :INIT-FUNCTION #<DTP-COMPILED-FUNCTION (:INTERNAL TV:PEEK-FILE-SYSTEM 0.) 25525424> :INIT-ARGS NIL :ITEM-FUNCTION #<DTP-COMPILED-FUNCTION (:INTERNAL TV:PEEK-FILE-SYSTEM 1.) 25525410> ...))

(:DEFUN-METHOD TV:SCROLL-REDISPLAY-ITEM-LOOP):  (P.C. = 50)
   Arg 0 (SELF): #<PEEK-PANE Peek Pane 1 3142575 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:BASIC-SCROLL-WINDOW -- 8. IV's, 0. FL's 42606327>
   Arg 2 (ITEM): ((:PRE-PROCESS-FUNCTION TV:SCROLL-MAINTAIN-LIST-UPDATE-FUNCTION :FUNCTION NIL :INIT-FUNCTION #<DTP-COMPILED-FUNCTION (:INTERNAL TV:PEEK-FILE-SYSTEM 0.) 25525424> :INIT-ARGS NIL :ITEM-FUNCTION #<DTP-COMPILED-FUNCTION (:INTERNAL TV:PEEK-FILE-SYSTEM 1.) 25525410> ...))
   Arg 3 (CURRENT-COUNT): 0.
   Arg 4 (FUNCTION): #<DTP-COMPILED-FUNCTION TV:SCROLL-REDISPLAY-DISPLAY-ITEM 25243716>
   Arg 5 (NO-RECOMP): NIL
   Rest arg (POSITION): (0.)

(:DEFUN-METHOD TV:SCROLL-REDISPLAY):  (P.C. = 71)
   Arg 0 (SELF): #<PEEK-PANE Peek Pane 1 3142575 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:BASIC-SCROLL-WINDOW -- 8. IV's, 0. FL's 42606327>
   Arg 2 (FULL-REDISPLAY): T

(:METHOD TV:BASIC-SCROLL-WINDOW :REDISPLAY):  (P.C. = 14)
   Arg 0 (SELF): #<PEEK-PANE Peek Pane 1 3142575 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:BASIC-SCROLL-WINDOW -- 8. IV's, 0. FL's 42606327>
   Arg 2 (OPERATION): :REDISPLAY
   Arg 3 (FULL-P): T
   Arg 4 (FORCE-P): :FORCE

Rest of stack:
(:METHOD TV:PEEK-PANE :COMBINED :REDISPLAY):  (P.C. = 16)
(:METHOD TV:BASIC-SCROLL-WINDOW :SET-DISPLAY-ITEM):  (P.C. = 14)
TV:PEEK-SET-MODE:  (P.C. = 103)
TV:PEEK-TOP-LEVEL:  (P.C. = 247)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
 2-Oct-84 20:03:27-EDT,3007;000000000000
Received: from MIT-TWEETY-PIE by MIT-OZ via Chaosnet; 2 Oct 84 20:03-EDT
Date: Tuesday, 2 October 1984, 20:00-EDT
From: Webster Dove <dove at MIT-BUGS-BUNNY>
Subject: peek server connection bug
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 Release 5.2, UTIL 1.5, FPA 1.0,
Experimental IP-TCP 15.3, on Lisp Machine Tweety Pie:

This happened when I tried to mouse the connection listed under a qfile
server to daffy-duck.

>>Trap: The function (:DEFUN-METHOD TV:PEEK-CONNECTION-MENU) was called with too few arguments.
While in the function (:DEFUN-METHOD TV:PEEK-CONNECTION-MENU)  TV:PEEK-CONNECTION-MENU  SI:*EVAL

(:DEFUN-METHOD TV:PEEK-CONNECTION-MENU):  (P.C. = 1)  (from IP-TCP: IP-TCP; RELEASE-5-PATCH)
   Arg 0 (SELF): #<PEEK-PANE Peek Pane 1 3142575 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:BASIC-PEEK -- 3. IV's, 0. FL's 61663441>
   Arg 2 (NETWORK): #<CHAOS Connection for FILE to DAFFY-DUCK 7773451>
   Arg 3 (CONN): #<ART-Q-2. 17277346>
   --Missing args:--
   Arg 4 (ITEM)

TV:PEEK-CONNECTION-MENU:  (P.C. = 12)  (from IP-TCP: IP-TCP; RELEASE-5-PATCH)
   Rest arg (ARGS): (#<CHAOS Connection for FILE to DAFFY-DUCK 7773451> #<ART-Q-2. 17277346>)

SI:*EVAL:  (P.C. = 370)
   Arg 0 (FORM): (TV:PEEK-CONNECTION-MENU (QUOTE #<CHAOS Connection for FILE to DAFFY-DUCK 7773451>) (QUOTE #<ART-Q-2. 17277346>))

(:METHOD TV:MENU-EXECUTE-MIXIN :EXECUTE):  (P.C. = 53)
   Arg 0 (SELF): #<PEEK-PANE Peek Pane 1 3142575 exposed>
   Arg 1 (SELF-MAPPING-TABLE): TV:MENU-EXECUTE-MIXIN
   Arg 2 (OPERATION): :EXECUTE
   Arg 3 (ITEM): (NIL :EVAL (TV:PEEK-CONNECTION-MENU (QUOTE #<CHAOS Connection for FILE to DAFFY-DUCK 7773451>) (QUOTE #<ART-Q-2. 17277346>)) :DOCUMENTATION "Menu of useful things to do this connection")

(:METHOD TV:ESSENTIAL-SCROLL-MOUSE-MIXIN :MOUSE-CLICK):  (P.C. = 114)
   Arg 0 (SELF): #<PEEK-PANE Peek Pane 1 3142575 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:ESSENTIAL-SCROLL-MOUSE-MIXIN -- 6. IV's, 0. FL's 42606254>
   Arg 2 (OPERATION): :MOUSE-CLICK
   Arg 3 (BUTTON): 32768.
   Arg 4 (X): 627.
   Arg 5 (Y): 108.

(:METHOD TV:PEEK-PANE :COMBINED :MOUSE-CLICK):  (P.C. = 10)
   Arg 0 (SELF): #<PEEK-PANE Peek Pane 1 3142575 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:PEEK-PANE -- 1. IV's, 21. FL's 42606345>
   Rest arg (.DAEMON-CALLER-ARGS.): (:MOUSE-CLICK 32768. 627. 108.)

(:METHOD TV:ESSENTIAL-MOUSE :MOUSE-BUTTONS):  (P.C. = 17)
   Arg 0 (SELF): #<PEEK-PANE Peek Pane 1 3142575 exposed>
   Arg 1 (SELF-MAPPING-TABLE): TV:ESSENTIAL-MOUSE
   Arg 2 (OPERATION): :MOUSE-BUTTONS
   Arg 3 (BD): 1.
   Arg 4 (X): 627.
   Arg 5 (Y): 108.

TV:MOUSE-DEFAULT-HANDLER:  (P.C. = 357)
   Arg 0 (WINDOW): #<PEEK-PANE Peek Pane 1 3142575 exposed>
   Arg 1 (SCROLL-BAR-FLAG): T

Rest of stack:
(:METHOD TV:ESSENTIAL-MOUSE :HANDLE-MOUSE):  (P.C. = 10)
(:METHOD TV:PEEK-PANE :COMBINED :HANDLE-MOUSE):  (P.C. = 10)
TV:MOUSE-OVERSEER:  (P.C. = 101)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
 2-Oct-84 20:15:16-EDT,1179;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 2 Oct 84 20:14-EDT
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 102403; Tue 2-Oct-84 20:16:48-EDT
Date: Tuesday, 2 October 1984, 20:15-EDT
From: David C. Plummer <DCP at SCRC-TENEX>
Subject: peek bug
To: Webster Dove <dove at MIT-BUGS-BUNNY>, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 2 Oct 84 19:57-EDT from Webster Dove <dove at MIT-BUGS-BUNNY>
Message-ID: <841002201536.8.DCP@NEPONSET.SCRC.Symbolics>

    Date: Tuesday, 2 October 1984, 19:57-EDT
    From: Webster Dove <dove at MIT-BUGS-BUNNY>

    In Symbolics 3600 Release 5.2, UTIL 1.5, FPA 1.0,
    Experimental IP-TCP 15.3, on Lisp Machine Tweety Pie:

    I got this when trying to peek on the file system.

    >>Error: The object #<HOST MC 43213042> received a :PEEK-FILE-SYSTEM-P message, which went unclaimed.
	     The rest of the message was ()
    While in the function (:METHOD NET:OBJECT :UNCLAIMED-MESSAGE)  SI:FLAVOR-UNCLAIMED-MESSAGE  SI:INSTANCE-HASH-UNCLAIMED-MESSAGE

You are still being bitten by the MC/DM backwash.  Notice that it says
#<HOST MC ...> instead of #<ITS-HOST MC ...>
 2-Oct-84 20:52:43-EDT,649;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 2 Oct 84 20:52-EDT
Date: Tuesday, 2 October 1984, 20:48-EDT
From: Scott Cyphers <sr.ehpyc at MIT-SPEECH>
Subject: Auto fill long comments mode
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 Release 5.2, ZOO 3.0, Spire-Macros 3.0, Compute 2.0,
Attribute 3.0, Audio 2.1, Speech-Attributes 2.3, Display 3.5,
Speech-Layouts 4.7, Versatec 3.0, Prtout 2.0, Spire 14.0, SpireX 11.1,
ZOO-SPIRE 1.0, FEP 22, on Lisp Machine Smokey:

When in Auto-fill-lisp-comments-mode and in a comment, it seems like the
intuitive thing for meta-q to do should be a fill-long-comment instead
of a fill-paragraph.
 2-Oct-84 22:14:31-EDT,3979;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 2 Oct 84 22:14-EDT
Received: from SCRC-HARLEM by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 102426; Tue 2-Oct-84 20:54:44-EDT
Date: Tue, 2 Oct 84 20:53 EDT
From: Joseph R Goldstone <joseph@SCRC-QUABBIN.ARPA>
Subject: Namespaces, A Priority Issue
To: BUG-LISPM@MIT-MC.ARPA, Hornig@SCRC-STONY-BROOK.ARPA
cc: DPH@MIT-MC.ARPA, CSTACY@MIT-MC.ARPA, KMP@MIT-MC.ARPA,
    Hewitt%MIT-OZ@SCRC-RIVERSIDE.ARPA, Gavan%MIT-OZ@SCRC-RIVERSIDE.ARPA,
    JCMa%MIT-OZ@SCRC-RIVERSIDE.ARPA, gsmith@SCRC-QUABBIN.ARPA,
    dang@SCRC-QUABBIN.ARPA
In-Reply-To: The message of 2 Oct 84 16:18-EDT from Kent M Pitman <KMP at MIT-MC>
Message-ID: <841002205326.6.JOSEPH@HARLEM.SCRC.Symbolics>

I try not to flame about this issue more than once a quarter.  Well, Q2 is here.

    Date: 2 October 1984 16:18-EDT
    From: Kent M Pitman <KMP @ MIT-MC>

	From: Charles Hornig <Hornig@SCRC-STONY-BROOK.ARPA>
	To:   Kent M Pitman <KMP@MIT-MC.ARPA>
	cc:   Bug-Tracker@SCRC-STONY-BROOK.ARPA
	Re:   Namespace lossage in Symbolics 5.0 and above
	In-Reply-To: Msg of 27 Aug 84 16:27-EDT from Kent M Pitman <KMP at MIT-MC>
	Disposition: LOW-PRIORITY
	Category: namespace-suggestion
	Message-ID: <841002105646.3.HORNIG@PEACE.SCRC.Symbolics>

	Synopsis: KMP suggests that namespace information be cached in the local
	machine.

	  -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --

	    Date: 27 August 1984 16:27-EDT
	    From: Kent M Pitman <KMP @ MIT-MC>

	    As you may or may not know, there has been a lot of trouble around 
	    MIT in the last few days with namespace stuff working unreliably. 
	    Either LM15 is not responding or not responding fast enough, but 
	    the end effect is that all the machines around suffer...

	    It occurs to me to wonder why namespace information is cached in
	    the local band environment (requiring disk-save to update) rather 
	    than on a separate partition (ie, fep file)...

    I hope the "low-priority" on this message refers to this particular strategy
    for fixing namespaces and not to namespaces in general.
So do I.

    ...
    All in all, I find this a very sad state of affairs. The namespace situation
    continues to be bad here. People complain about it a lot. It's gonna get
    you a lot of bad press if anyone phones up and asks what using a 3600 is
    like these days.
I was using a machine at the Architecture Machine Group this afternoon (while
Quabbin was dead) and just about broke the edge off the table, given the number
of times I smashed my hand against it in extreme frustration.  As an example, I did a
(hostat 'harlem 'quabbin) that spent about three minutes messing around with
SCH|G and Waikato before actually sending the STATUS requests.  Next time I'll
be smart enough to do a (hostat 24606 24610), but it certainly was a rough lesson.

What happens at Release 6 time?  We're not going to support Release 6 on the LM-2.
What does this imply?  Either they allocate a 36xx for a namespace server, or they
keep running 243.778 on CADR-15.  I don't see any other ways out.  What do we do
if they choose the latter?  Refuse to investigate any network or namespace-related
bug reports?  If the answer is yes, then we should tell them NOW.

    Especially since the systems with the problems are not beta-test but 
    real releases, I'd recommend make fixing the namespace lossage your 
    number one concern.
I agree.  If there was some way to make the namespace problems that happen at MIT
@b(all the time) happen here @b(once a week), I think they'd get fixed.  I think
this would be true even if it was confined to our own 5.2 machines.  If the VLSI
group or the support group (both run 5.2) were losing as badly as they are over at
MIT, it would get fixed within the week.  And I think that's pretty sad.

Ahh, that feels better.  I hope I won't have to send another flame in Q3.
 2-Oct-84 22:39:38-EDT,1179;000000000000
Received: from MIT-EECS by MIT-OZ via Chaosnet; 2 Oct 84 22:39-EDT
Date: Tue 2 Oct 84 22:40:19-EDT
From: Patrick A. O'Donnell <PAO@MIT-EECS>
Subject: Re: peek bug
To: DCP@SCRC-TENEX
cc: dove@MIT-BUGS-BUNNY, BUG-LISPM@MIT-OZ
In-Reply-To: Message from "David C. Plummer <DCP at SCRC-TENEX>" of Tue 2 Oct 84 20:20:53-EDT

    Date: Tuesday, 2 October 1984, 20:15-EDT
    From: David C. Plummer <DCP at SCRC-TENEX>

	Date: Tuesday, 2 October 1984, 19:57-EDT
	From: Webster Dove <dove at MIT-BUGS-BUNNY>

	In Symbolics 3600 Release 5.2, UTIL 1.5, FPA 1.0,
	Experimental IP-TCP 15.3, on Lisp Machine Tweety Pie:

	I got this when trying to peek on the file system.

	>>Error: The object #<HOST MC 43213042> received a :PEEK-FILE-SYSTEM-P message, which went unclaimed.
		 The rest of the message was ()
	While in the function (:METHOD NET:OBJECT :UNCLAIMED-MESSAGE)  SI:FLAVOR-UNCLAIMED-MESSAGE  SI:INSTANCE-HASH-UNCLAIMED-MESSAGE

    You are still being bitten by the MC/DM backwash.  Notice that it says
    #<HOST MC ...> instead of #<ITS-HOST MC ...>

Indubitably.  However, should the confusion of the namespace system
break Peek so badly?
-------
 2-Oct-84 22:50:24-EDT,873;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 2 Oct 84 22:50-EDT
Date: Tuesday, 2 October 1984, 22:44-EDT
From: Jim Glass <SR.JRG at MIT-SPEECH>
Subject: with-input-editing is not quite right
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 Release 5.2, ZOO 3.0, Spire-Macros 3.0, Compute 2.0,
Attribute 3.0, Audio 2.1, Speech-Attributes 2.3, Display 3.6,
Speech-Layouts 4.7, Versatec 3.0, Prtout 2.0, Spire 14.0, SpireX 11.1,
ZOO-SPIRE 1.0, FEP 22, on Lisp Machine Kodiak:

The macro WITH-INPUT-EDITING does not expand into proper code when its 
keyword argument is :END-ACTIVATION, :LINE-ACTIVATION, or :LINE
and its the input-editor-options argument also specifies some additional
activation characters i.e. '((:ACTIVATION MEMQ (#/a #/b))).

I can work around this, but the documentation is still somewhat misleading
about how the options are handled.

 2-Oct-84 23:31:41-EDT,33715;000000000000
Received: from MIT-BUDDY by MIT-OZ via Chaosnet; 2 Oct 84 23:31-EDT
Date: Tuesday, 2 October 1984, 21:17-EDT
From: JCMA@MIT-OZ
Subject: Losing Notifications of Losing Namespace System
To: Bug-Lispm@MIT-OZ

In Symbolics 3600 Release 5.2, Experimental RELATUS 130.106, FEP 22, on Lisp Machine Buddy Holly:

Here's all the lossage of todays session. It is particulary obnoxious that it
has lost MC.  In case you don't want to read, there are about 500 lines of
cruft here.  Note that it flashes your screen every time tells about what new
way it has lost.

"213 Notifications, from 0 to 212:
21:09 Namespace server was unable to find HOST INTERNET|MIT-MC in namespace INTERNET.
It will be removed from the namespace.
21:09 Namespace server was unable to find HOST MC in namespace MIT.
It will be removed from the namespace.
21:09 It is necessary to change the flavor of namespace object #<HOST MC 34655574> from NET:HOST to FS:ITS-HOST.
This may cause problems in dealing with this object until the next use of
 (SI:FULL-GC :SYSTEM-RELEASE T).
21:09 Namespace server was unable to find HOST ARPANET|MIT-MC in namespace ARPANET.
It will be removed from the namespace.
21:09 It is necessary to change the flavor of namespace object #<ITS-HOST MIT-MC 34655562> from FS:ITS-HOST to NET:HOST.
This may cause problems in dealing with this object until the next use of
 (SI:FULL-GC :SYSTEM-RELEASE T).
21:04 Error from server: The namespace SCRC is not loaded.;
Obsolete host information may be used.
21:04 Namespace server was unable to find HOST MC in namespace MIT.
It will be removed from the namespace.
21:04 It is necessary to change the flavor of namespace object #<HOST MC 34655553> from NET:HOST to FS:ITS-HOST.
This may cause problems in dealing with this object until the next use of
 (SI:FULL-GC :SYSTEM-RELEASE T).
21:04 Namespace server was unable to find HOST ARPANET|MIT-MC in namespace ARPANET.
It will be removed from the namespace.
21:04 It is necessary to change the flavor of namespace object #<ITS-HOST MIT-MC 34655541> from FS:ITS-HOST to NET:HOST.
This may cause problems in dealing with this object until the next use of
 (SI:FULL-GC :SYSTEM-RELEASE T).
21:04 Error from server: The namespace SCRC is not loaded.;
Obsolete host information may be used.
21:04 Namespace server was unable to find HOST MC in namespace MIT.
It will be removed from the namespace.
21:04 It is necessary to change the flavor of namespace object #<HOST MC 34655532> from NET:HOST to FS:ITS-HOST.
This may cause problems in dealing with this object until the next use of
 (SI:FULL-GC :SYSTEM-RELEASE T).
21:04 Namespace server was unable to find HOST ARPANET|MIT-MC in namespace ARPANET.
It will be removed from the namespace.
21:04 It is necessary to change the flavor of namespace object #<ITS-HOST MIT-MC 34655520> from FS:ITS-HOST to NET:HOST.
This may cause problems in dealing with this object until the next use of
 (SI:FULL-GC :SYSTEM-RELEASE T).
21:04 Namespace server was unable to find HOST INTERNET|MIT-MC in namespace INTERNET.
It will be removed from the namespace.
21:04 Namespace server was unable to find HOST MC in namespace MIT.
It will be removed from the namespace.
21:04 It is necessary to change the flavor of namespace object #<HOST MC 34655505> from NET:HOST to FS:ITS-HOST.
This may cause problems in dealing with this object until the next use of
 (SI:FULL-GC :SYSTEM-RELEASE T).
21:03 Namespace server was unable to find HOST ARPANET|MIT-MC in namespace ARPANET.
It will be removed from the namespace.
21:03 It is necessary to change the flavor of namespace object #<ITS-HOST MIT-MC 34655473> from FS:ITS-HOST to NET:HOST.
This may cause problems in dealing with this object until the next use of
 (SI:FULL-GC :SYSTEM-RELEASE T).
21:03 Error from server: The namespace SCRC is not loaded.;
Obsolete host information may be used.
21:03 HOST MC was mentioned but then not found.
21:03 Error from server: The namespace SCRC is not loaded.;
Obsolete host information may be used.
21:03 It is necessary to change the flavor of namespace object #<HOST MC 34655454> from NET:HOST to FS:ITS-HOST.
This may cause problems in dealing with this object until the next use of
 (SI:FULL-GC :SYSTEM-RELEASE T).
21:03 Namespace server was unable to find HOST MC in namespace MIT.
It will be removed from the namespace.
21:03 HOST MC was mentioned but then not found.
21:02 Namespace server was unable to find HOST ARPANET|MIT-MC in namespace ARPANET.
It will be removed from the namespace.
21:02 It is necessary to change the flavor of namespace object #<ITS-HOST MIT-MC 34655442> from FS:ITS-HOST to NET:HOST.
This may cause problems in dealing with this object until the next use of
 (SI:FULL-GC :SYSTEM-RELEASE T).
21:02 HOST MC was mentioned but then not found.
21:02 HOST MC was mentioned but then not found.
21:02 Namespace server was unable to find HOST MC in namespace MIT.
It will be removed from the namespace.
21:01 It is necessary to change the flavor of namespace object #<HOST MC 34655400> from NET:HOST to FS:ITS-HOST.
This may cause problems in dealing with this object until the next use of
 (SI:FULL-GC :SYSTEM-RELEASE T).
20:54 Namespace server was unable to find HOST ARPANET|MIT-MC in namespace ARPANET.
It will be removed from the namespace.
20:54 It is necessary to change the flavor of namespace object #<ITS-HOST MIT-MC 34655366> from FS:ITS-HOST to NET:HOST.
This may cause problems in dealing with this object until the next use of
 (SI:FULL-GC :SYSTEM-RELEASE T).
20:54 Namespace server was unable to find HOST INTERNET|MIT-MC in namespace INTERNET.
It will be removed from the namespace.
20:54 Namespace server was unable to find HOST MC in namespace MIT.
It will be removed from the namespace.
20:54 It is necessary to change the flavor of namespace object #<HOST MC 34655357> from NET:HOST to FS:ITS-HOST.
This may cause problems in dealing with this object until the next use of
 (SI:FULL-GC :SYSTEM-RELEASE T).
20:51 Namespace server was unable to find HOST ARPANET|MIT-MC in namespace ARPANET.
It will be removed from the namespace.
20:51 It is necessary to change the flavor of namespace object #<ITS-HOST MIT-MC 34655345> from FS:ITS-HOST to NET:HOST.
This may cause problems in dealing with this object until the next use of
 (SI:FULL-GC :SYSTEM-RELEASE T).
20:51 Error from server: The namespace SCRC is not loaded.;
Obsolete host information may be used.
20:51 HOST MC was mentioned but then not found.
20:51 Error from server: The namespace SCRC is not loaded.;
Obsolete host information may be used.
20:50 HOST MC was mentioned but then not found.
20:50 Namespace server was unable to find HOST MC in namespace MIT.
It will be removed from the namespace.
20:50 It is necessary to change the flavor of namespace object #<HOST MC 34655336> from NET:HOST to FS:ITS-HOST.
This may cause problems in dealing with this object until the next use of
 (SI:FULL-GC :SYSTEM-RELEASE T).
20:50 Namespace server was unable to find HOST ARPANET|MIT-MC in namespace ARPANET.
It will be removed from the namespace.
20:50 It is necessary to change the flavor of namespace object #<ITS-HOST MIT-MC 34655143> from FS:ITS-HOST to NET:HOST.
This may cause problems in dealing with this object until the next use of
 (SI:FULL-GC :SYSTEM-RELEASE T).
20:50 HOST MC was mentioned but then not found.
20:50 HOST MC was mentioned but then not found.
18:14 It is necessary to change the flavor of namespace object #<HOST MC 34655114> from NET:HOST to FS:ITS-HOST.
This may cause problems in dealing with this object until the next use of
 (SI:FULL-GC :SYSTEM-RELEASE T).
18:14 Namespace server was unable to find HOST MC in namespace MIT.
It will be removed from the namespace.
18:14 Namespace server was unable to find HOST MIT-MC in namespace INTERNET.
It will be removed from the namespace.
18:14 Namespace server was unable to find HOST ARPANET|MIT-MC in namespace ARPANET.
It will be removed from the namespace.
18:14 It is necessary to change the flavor of namespace object #<ITS-HOST MIT-MC 34655062> from FS:ITS-HOST to NET:HOST.
This may cause problems in dealing with this object until the next use of
 (SI:FULL-GC :SYSTEM-RELEASE T).
18:13 It is necessary to change the flavor of namespace object #<HOST MC 34655053> from NET:HOST to FS:ITS-HOST.
This may cause problems in dealing with this object until the next use of
 (SI:FULL-GC :SYSTEM-RELEASE T).
18:13 Namespace server was unable to find HOST MC in namespace MIT.
It will be removed from the namespace.
18:13 Namespace server was unable to find HOST ARPANET|MIT-MC in namespace ARPANET.
It will be removed from the namespace.
18:13 It is necessary to change the flavor of namespace object #<ITS-HOST MIT-MC 34655041> from FS:ITS-HOST to NET:HOST.
This may cause problems in dealing with this object until the next use of
 (SI:FULL-GC :SYSTEM-RELEASE T).
18:13 Error from server: The namespace SCRC is not loaded.;
Obsolete host information may be used.
18:12 HOST MC was mentioned but then not found.
18:12 Error from server: The namespace SCRC is not loaded.;
Obsolete host information may be used.
18:12 HOST MC was mentioned but then not found.
18:12 Namespace server was unable to find HOST MC in namespace MIT.
It will be removed from the namespace.
18:12 It is necessary to change the flavor of namespace object #<HOST MC 34655032> from NET:HOST to FS:ITS-HOST.
This may cause problems in dealing with this object until the next use of
 (SI:FULL-GC :SYSTEM-RELEASE T).
18:12 Namespace server was unable to find HOST ARPANET|MIT-MC in namespace ARPANET.
It will be removed from the namespace.
18:12 It is necessary to change the flavor of namespace object #<ITS-HOST MIT-MC 34654772> from FS:ITS-HOST to NET:HOST.
This may cause problems in dealing with this object until the next use of
 (SI:FULL-GC :SYSTEM-RELEASE T).
18:12 HOST MC was mentioned but then not found.
18:12 HOST MC was mentioned but then not found.
18:12 Error from server: The namespace SCRC is not loaded.;
Obsolete host information may be used.
18:12 Namespace server was unable to find HOST MC in namespace MIT.
It will be removed from the namespace.
18:12 It is necessary to change the flavor of namespace object #<HOST MC 34654763> from NET:HOST to FS:ITS-HOST.
This may cause problems in dealing with this object until the next use of
 (SI:FULL-GC :SYSTEM-RELEASE T).
18:10 Namespace server was unable to find HOST ARPANET|MIT-MC in namespace ARPANET.
It will be removed from the namespace.
18:10 It is necessary to change the flavor of namespace object #<ITS-HOST MIT-MC 34654751> from FS:ITS-HOST to NET:HOST.
This may cause problems in dealing with this object until the next use of
 (SI:FULL-GC :SYSTEM-RELEASE T).
18:10 Namespace server was unable to find HOST INTERNET|MIT-MC in namespace INTERNET.
It will be removed from the namespace.
18:10 Namespace server was unable to find HOST MC in namespace MIT.
It will be removed from the namespace.
18:10 It is necessary to change the flavor of namespace object #<HOST MC 34654742> from NET:HOST to FS:ITS-HOST.
This may cause problems in dealing with this object until the next use of
 (SI:FULL-GC :SYSTEM-RELEASE T).
17:09 Namespace server was unable to find HOST ARPANET|MIT-MC in namespace ARPANET.
It will be removed from the namespace.
17:09 It is necessary to change the flavor of namespace object #<ITS-HOST MIT-MC 34654631> from FS:ITS-HOST to NET:HOST.
This may cause problems in dealing with this object until the next use of
 (SI:FULL-GC :SYSTEM-RELEASE T).
17:09 HOST MC was mentioned but then not found.
17:09 HOST MC was mentioned but then not found.
17:09 HOST MC was mentioned but then not found.
17:09 HOST MC was mentioned but then not found.
17:08 HOST MC was mentioned but then not found.
17:02 HOST OSTRICH was mentioned but then not found.
17:02 HOST NIGHT-HERON was mentioned but then not found.
17:02 HOST PEACOCK was mentioned but then not found.
17:00 HOST MC was mentioned but then not found.
17:00 Namespace server was unable to find HOST MC in namespace MIT.
It will be removed from the namespace.
17:00 Namespace server was unable to find HOST MIT-MC in namespace INTERNET.
It will be removed from the namespace.
17:00 It is necessary to change the flavor of namespace object #<HOST MIT-MC 34654564> from NET:HOST to FS:ITS-HOST.
This may cause problems in dealing with this object until the next use of
 (SI:FULL-GC :SYSTEM-RELEASE T).
17:00 Namespace server was unable to find HOST ARPANET|MIT-MC in namespace ARPANET.
It will be removed from the namespace.
17:00 It is necessary to change the flavor of namespace object #<ITS-HOST MIT-MC 34654546> from FS:ITS-HOST to NET:HOST.
This may cause problems in dealing with this object until the next use of
 (SI:FULL-GC :SYSTEM-RELEASE T).
17:00 Namespace server was unable to find HOST MIT-MC in namespace INTERNET.
It will be removed from the namespace.
17:00 It is necessary to change the flavor of namespace object #<HOST MIT-MC 34654537> from NET:HOST to FS:ITS-HOST.
This may cause problems in dealing with this object until the next use of
 (SI:FULL-GC :SYSTEM-RELEASE T).
17:00 Namespace server was unable to find HOST ARPANET|MIT-MC in namespace ARPANET.
It will be removed from the namespace.
17:00 It is necessary to change the flavor of namespace object #<ITS-HOST MIT-MC 34654457> from FS:ITS-HOST to NET:HOST.
This may cause problems in dealing with this object until the next use of
 (SI:FULL-GC :SYSTEM-RELEASE T).
17:00 Namespace server was unable to find HOST MIT-MC in namespace INTERNET.
It will be removed from the namespace.
16:59 It is necessary to change the flavor of namespace object #<HOST MIT-MC 34654444> from NET:HOST to FS:ITS-HOST.
This may cause problems in dealing with this object until the next use of
 (SI:FULL-GC :SYSTEM-RELEASE T).
16:59 Namespace server was unable to find HOST ARPANET|MIT-MC in namespace ARPANET.
It will be removed from the namespace.
16:59 It is necessary to change the flavor of namespace object #<ITS-HOST MIT-MC 34654356> from FS:ITS-HOST to NET:HOST.
This may cause problems in dealing with this object until the next use of
 (SI:FULL-GC :SYSTEM-RELEASE T).
16:59 Namespace server was unable to find HOST MIT-MC in namespace INTERNET.
It will be removed from the namespace.
16:59 It is necessary to change the flavor of namespace object #<HOST MIT-MC 34654343> from NET:HOST to FS:ITS-HOST.
This may cause problems in dealing with this object until the next use of
 (SI:FULL-GC :SYSTEM-RELEASE T).
16:59 Namespace server was unable to find HOST ARPANET|MIT-MC in namespace ARPANET.
It will be removed from the namespace.
16:59 It is necessary to change the flavor of namespace object #<ITS-HOST MIT-MC 34654264> from FS:ITS-HOST to NET:HOST.
This may cause problems in dealing with this object until the next use of
 (SI:FULL-GC :SYSTEM-RELEASE T).
16:59 Namespace server was unable to find HOST MIT-MC in namespace INTERNET.
It will be removed from the namespace.
16:59 It is necessary to change the flavor of namespace object #<HOST MIT-MC 34654207> from NET:HOST to FS:ITS-HOST.
This may cause problems in dealing with this object until the next use of
 (SI:FULL-GC :SYSTEM-RELEASE T).
16:59 Namespace server was unable to find HOST ARPANET|MIT-MC in namespace ARPANET.
It will be removed from the namespace.
16:59 It is necessary to change the flavor of namespace object #<ITS-HOST MIT-MC 34654143> from FS:ITS-HOST to NET:HOST.
This may cause problems in dealing with this object until the next use of
 (SI:FULL-GC :SYSTEM-RELEASE T).
16:59 Namespace server was unable to find HOST MIT-MC in namespace INTERNET.
It will be removed from the namespace.
16:59 It is necessary to change the flavor of namespace object #<HOST MIT-MC 34654134> from NET:HOST to FS:ITS-HOST.
This may cause problems in dealing with this object until the next use of
 (SI:FULL-GC :SYSTEM-RELEASE T).
16:59 Namespace server was unable to find HOST ARPANET|MIT-MC in namespace ARPANET.
It will be removed from the namespace.
16:59 It is necessary to change the flavor of namespace object #<ITS-HOST MIT-MC 34654122> from FS:ITS-HOST to NET:HOST.
This may cause problems in dealing with this object until the next use of
 (SI:FULL-GC :SYSTEM-RELEASE T).
16:59 Namespace server was unable to find HOST MIT-MC in namespace INTERNET.
It will be removed from the namespace.
16:59 It is necessary to change the flavor of namespace object #<HOST MIT-MC 34654113> from NET:HOST to FS:ITS-HOST.
This may cause problems in dealing with this object until the next use of
 (SI:FULL-GC :SYSTEM-RELEASE T).
16:59 Namespace server was unable to find HOST ARPANET|MIT-MC in namespace ARPANET.
It will be removed from the namespace.
16:59 It is necessary to change the flavor of namespace object #<ITS-HOST MIT-MC 34654075> from FS:ITS-HOST to NET:HOST.
This may cause problems in dealing with this object until the next use of
 (SI:FULL-GC :SYSTEM-RELEASE T).
16:59 Namespace server was unable to find HOST MIT-MC in namespace INTERNET.
It will be removed from the namespace.
16:59 It is necessary to change the flavor of namespace object #<HOST MIT-MC 34654066> from NET:HOST to FS:ITS-HOST.
This may cause problems in dealing with this object until the next use of
 (SI:FULL-GC :SYSTEM-RELEASE T).
16:59 Namespace server was unable to find HOST ARPANET|MIT-MC in namespace ARPANET.
It will be removed from the namespace.
16:59 It is necessary to change the flavor of namespace object #<ITS-HOST MIT-MC 34654054> from FS:ITS-HOST to NET:HOST.
This may cause problems in dealing with this object until the next use of
 (SI:FULL-GC :SYSTEM-RELEASE T).
16:59 Namespace server was unable to find HOST MIT-MC in namespace INTERNET.
It will be removed from the namespace.
16:59 It is necessary to change the flavor of namespace object #<HOST MIT-MC 34654045> from NET:HOST to FS:ITS-HOST.
This may cause problems in dealing with this object until the next use of
 (SI:FULL-GC :SYSTEM-RELEASE T).
16:59 Namespace server was unable to find HOST ARPANET|MIT-MC in namespace ARPANET.
It will be removed from the namespace.
16:59 It is necessary to change the flavor of namespace object #<ITS-HOST MIT-MC 34653775> from FS:ITS-HOST to NET:HOST.
This may cause problems in dealing with this object until the next use of
 (SI:FULL-GC :SYSTEM-RELEASE T).
16:59 Namespace server was unable to find HOST MIT-MC in namespace INTERNET.
It will be removed from the namespace.
16:59 It is necessary to change the flavor of namespace object #<HOST MIT-MC 34653766> from NET:HOST to FS:ITS-HOST.
This may cause problems in dealing with this object until the next use of
 (SI:FULL-GC :SYSTEM-RELEASE T).
16:59 Namespace server was unable to find HOST ARPANET|MIT-MC in namespace ARPANET.
It will be removed from the namespace.
16:59 It is necessary to change the flavor of namespace object #<ITS-HOST MIT-MC 34653754> from FS:ITS-HOST to NET:HOST.
This may cause problems in dealing with this object until the next use of
 (SI:FULL-GC :SYSTEM-RELEASE T).
16:59 Namespace server was unable to find HOST MIT-MC in namespace INTERNET.
It will be removed from the namespace.
16:59 It is necessary to change the flavor of namespace object #<HOST MIT-MC 34653741> from NET:HOST to FS:ITS-HOST.
This may cause problems in dealing with this object until the next use of
 (SI:FULL-GC :SYSTEM-RELEASE T).
16:59 Namespace server was unable to find HOST ARPANET|MIT-MC in namespace ARPANET.
It will be removed from the namespace.
16:59 It is necessary to change the flavor of namespace object #<ITS-HOST MIT-MC 34653657> from FS:ITS-HOST to NET:HOST.
This may cause problems in dealing with this object until the next use of
 (SI:FULL-GC :SYSTEM-RELEASE T).
16:59 Namespace server was unable to find HOST MIT-MC in namespace INTERNET.
It will be removed from the namespace.
16:59 It is necessary to change the flavor of namespace object #<HOST MIT-MC 34653650> from NET:HOST to FS:ITS-HOST.
This may cause problems in dealing with this object until the next use of
 (SI:FULL-GC :SYSTEM-RELEASE T).
16:59 Namespace server was unable to find HOST ARPANET|MIT-MC in namespace ARPANET.
It will be removed from the namespace.
16:59 It is necessary to change the flavor of namespace object #<ITS-HOST MIT-MC 34653564> from FS:ITS-HOST to NET:HOST.
This may cause problems in dealing with this object until the next use of
 (SI:FULL-GC :SYSTEM-RELEASE T).
16:59 Namespace server was unable to find HOST MIT-MC in namespace INTERNET.
It will be removed from the namespace.
16:59 It is necessary to change the flavor of namespace object #<HOST MIT-MC 34653555> from NET:HOST to FS:ITS-HOST.
This may cause problems in dealing with this object until the next use of
 (SI:FULL-GC :SYSTEM-RELEASE T).
16:58 Namespace server was unable to find HOST ARPANET|MIT-MC in namespace ARPANET.
It will be removed from the namespace.
16:58 It is necessary to change the flavor of namespace object #<ITS-HOST MIT-MC 34653543> from FS:ITS-HOST to NET:HOST.
This may cause problems in dealing with this object until the next use of
 (SI:FULL-GC :SYSTEM-RELEASE T).
16:58 Namespace server was unable to find HOST MIT-MC in namespace INTERNET.
It will be removed from the namespace.
16:58 It is necessary to change the flavor of namespace object #<HOST MIT-MC 34653506> from NET:HOST to FS:ITS-HOST.
This may cause problems in dealing with this object until the next use of
 (SI:FULL-GC :SYSTEM-RELEASE T).
16:58 Namespace server was unable to find HOST ARPANET|MIT-MC in namespace ARPANET.
It will be removed from the namespace.
16:58 It is necessary to change the flavor of namespace object #<ITS-HOST MIT-MC 34653474> from FS:ITS-HOST to NET:HOST.
This may cause problems in dealing with this object until the next use of
 (SI:FULL-GC :SYSTEM-RELEASE T).
16:58 Namespace server was unable to find HOST MIT-MC in namespace INTERNET.
It will be removed from the namespace.
16:58 It is necessary to change the flavor of namespace object #<HOST MIT-MC 34653465> from NET:HOST to FS:ITS-HOST.
This may cause problems in dealing with this object until the next use of
 (SI:FULL-GC :SYSTEM-RELEASE T).
16:58 Namespace server was unable to find HOST ARPANET|MIT-MC in namespace ARPANET.
It will be removed from the namespace.
16:58 It is necessary to change the flavor of namespace object #<ITS-HOST MIT-MC 34653453> from FS:ITS-HOST to NET:HOST.
This may cause problems in dealing with this object until the next use of
 (SI:FULL-GC :SYSTEM-RELEASE T).
16:58 Namespace server was unable to find HOST MIT-MC in namespace INTERNET.
It will be removed from the namespace.
16:58 It is necessary to change the flavor of namespace object #<HOST MIT-MC 34653444> from NET:HOST to FS:ITS-HOST.
This may cause problems in dealing with this object until the next use of
 (SI:FULL-GC :SYSTEM-RELEASE T).
16:58 Namespace server was unable to find HOST ARPANET|MIT-MC in namespace ARPANET.
It will be removed from the namespace.
16:58 It is necessary to change the flavor of namespace object #<ITS-HOST MIT-MC 34653432> from FS:ITS-HOST to NET:HOST.
This may cause problems in dealing with this object until the next use of
 (SI:FULL-GC :SYSTEM-RELEASE T).
16:58 Namespace server was unable to find HOST MIT-MC in namespace INTERNET.
It will be removed from the namespace.
16:58 It is necessary to change the flavor of namespace object #<HOST MIT-MC 34653423> from NET:HOST to FS:ITS-HOST.
This may cause problems in dealing with this object until the next use of
 (SI:FULL-GC :SYSTEM-RELEASE T).
16:58 It is necessary to change the flavor of namespace object #<ITS-HOST MIT-MC 34653337> from FS:ITS-HOST to NET:HOST.
This may cause problems in dealing with this object until the next use of
 (SI:FULL-GC :SYSTEM-RELEASE T).
16:58 Namespace server was unable to find HOST ARPANET|MIT-MC in namespace ARPANET.
It will be removed from the namespace.
16:58 Namespace server was unable to find HOST MIT-MC in namespace INTERNET.
It will be removed from the namespace.
16:58 It is necessary to change the flavor of namespace object #<HOST MIT-MC 34653324> from NET:HOST to FS:ITS-HOST.
This may cause problems in dealing with this object until the next use of
 (SI:FULL-GC :SYSTEM-RELEASE T).
16:58 Namespace server was unable to find HOST ARPANET|MIT-MC in namespace ARPANET.
It will be removed from the namespace.
16:58 It is necessary to change the flavor of namespace object #<ITS-HOST MIT-MC 34653312> from FS:ITS-HOST to NET:HOST.
This may cause problems in dealing with this object until the next use of
 (SI:FULL-GC :SYSTEM-RELEASE T).
16:58 Namespace server was unable to find HOST MIT-MC in namespace INTERNET.
It will be removed from the namespace.
16:58 It is necessary to change the flavor of namespace object #<HOST MIT-MC 34653303> from NET:HOST to FS:ITS-HOST.
This may cause problems in dealing with this object until the next use of
 (SI:FULL-GC :SYSTEM-RELEASE T).
16:58 Namespace server was unable to find HOST ARPANET|MIT-MC in namespace ARPANET.
It will be removed from the namespace.
16:58 It is necessary to change the flavor of namespace object #<ITS-HOST MIT-MC 34653271> from FS:ITS-HOST to NET:HOST.
This may cause problems in dealing with this object until the next use of
 (SI:FULL-GC :SYSTEM-RELEASE T).
16:58 Namespace server was unable to find HOST MIT-MC in namespace INTERNET.
It will be removed from the namespace.
16:58 It is necessary to change the flavor of namespace object #<HOST MIT-MC 34653262> from NET:HOST to FS:ITS-HOST.
This may cause problems in dealing with this object until the next use of
 (SI:FULL-GC :SYSTEM-RELEASE T).
16:58 Namespace server was unable to find HOST ARPANET|MIT-MC in namespace ARPANET.
It will be removed from the namespace.
16:58 It is necessary to change the flavor of namespace object #<ITS-HOST MIT-MC 34653250> from FS:ITS-HOST to NET:HOST.
This may cause problems in dealing with this object until the next use of
 (SI:FULL-GC :SYSTEM-RELEASE T).
16:58 Namespace server was unable to find HOST MIT-MC in namespace INTERNET.
It will be removed from the namespace.
16:58 It is necessary to change the flavor of namespace object #<HOST MIT-MC 34653241> from NET:HOST to FS:ITS-HOST.
This may cause problems in dealing with this object until the next use of
 (SI:FULL-GC :SYSTEM-RELEASE T).
16:58 Namespace server was unable to find HOST ARPANET|MIT-MC in namespace ARPANET.
It will be removed from the namespace.
16:58 It is necessary to change the flavor of namespace object #<ITS-HOST MIT-MC 34653227> from FS:ITS-HOST to NET:HOST.
This may cause problems in dealing with this object until the next use of
 (SI:FULL-GC :SYSTEM-RELEASE T).
16:58 Namespace server was unable to find HOST MIT-MC in namespace INTERNET.
It will be removed from the namespace.
16:58 It is necessary to change the flavor of namespace object #<HOST MIT-MC 34653220> from NET:HOST to FS:ITS-HOST.
This may cause problems in dealing with this object until the next use of
 (SI:FULL-GC :SYSTEM-RELEASE T).
16:58 Namespace server was unable to find HOST ARPANET|MIT-MC in namespace ARPANET.
It will be removed from the namespace.
16:58 It is necessary to change the flavor of namespace object #<ITS-HOST MIT-MC 34653206> from FS:ITS-HOST to NET:HOST.
This may cause problems in dealing with this object until the next use of
 (SI:FULL-GC :SYSTEM-RELEASE T).
16:58 Namespace server was unable to find HOST MIT-MC in namespace INTERNET.
It will be removed from the namespace.
16:58 It is necessary to change the flavor of namespace object #<HOST MIT-MC 34653177> from NET:HOST to FS:ITS-HOST.
This may cause problems in dealing with this object until the next use of
 (SI:FULL-GC :SYSTEM-RELEASE T).
16:58 Namespace server was unable to find HOST ARPANET|MIT-MC in namespace ARPANET.
It will be removed from the namespace.
16:58 It is necessary to change the flavor of namespace object #<ITS-HOST MIT-MC 34653161> from FS:ITS-HOST to NET:HOST.
This may cause problems in dealing with this object until the next use of
 (SI:FULL-GC :SYSTEM-RELEASE T).
16:58 Namespace server was unable to find HOST MIT-MC in namespace INTERNET.
It will be removed from the namespace.
16:58 It is necessary to change the flavor of namespace object #<HOST MIT-MC 34653152> from NET:HOST to FS:ITS-HOST.
This may cause problems in dealing with this object until the next use of
 (SI:FULL-GC :SYSTEM-RELEASE T).
16:58 Namespace server was unable to find HOST ARPANET|MIT-MC in namespace ARPANET.
It will be removed from the namespace.
16:58 It is necessary to change the flavor of namespace object #<ITS-HOST MIT-MC 34653116> from FS:ITS-HOST to NET:HOST.
This may cause problems in dealing with this object until the next use of
 (SI:FULL-GC :SYSTEM-RELEASE T).
16:58 Namespace server was unable to find HOST MIT-MC in namespace INTERNET.
It will be removed from the namespace.
16:58 It is necessary to change the flavor of namespace object #<HOST MIT-MC 34653107> from NET:HOST to FS:ITS-HOST.
This may cause problems in dealing with this object until the next use of
 (SI:FULL-GC :SYSTEM-RELEASE T).
16:58 Namespace server was unable to find HOST ARPANET|MIT-MC in namespace ARPANET.
It will be removed from the namespace.
16:58 It is necessary to change the flavor of namespace object #<ITS-HOST MIT-MC 34653075> from FS:ITS-HOST to NET:HOST.
This may cause problems in dealing with this object until the next use of
 (SI:FULL-GC :SYSTEM-RELEASE T).
16:58 Namespace server was unable to find HOST MIT-MC in namespace INTERNET.
It will be removed from the namespace.
16:58 It is necessary to change the flavor of namespace object #<HOST MIT-MC 34653066> from NET:HOST to FS:ITS-HOST.
This may cause problems in dealing with this object until the next use of
 (SI:FULL-GC :SYSTEM-RELEASE T).
16:58 Namespace server was unable to find HOST ARPANET|MIT-MC in namespace ARPANET.
It will be removed from the namespace.
16:58 It is necessary to change the flavor of namespace object #<ITS-HOST MIT-MC 34653054> from FS:ITS-HOST to NET:HOST.
This may cause problems in dealing with this object until the next use of
 (SI:FULL-GC :SYSTEM-RELEASE T).
16:58 Namespace server was unable to find HOST MIT-MC in namespace INTERNET.
It will be removed from the namespace.
16:58 It is necessary to change the flavor of namespace object #<HOST MIT-MC 34653045> from NET:HOST to FS:ITS-HOST.
This may cause problems in dealing with this object until the next use of
 (SI:FULL-GC :SYSTEM-RELEASE T).
16:58 Namespace server was unable to find HOST ARPANET|MIT-MC in namespace ARPANET.
It will be removed from the namespace.
16:58 It is necessary to change the flavor of namespace object #<ITS-HOST MIT-MC 34652753> from FS:ITS-HOST to NET:HOST.
This may cause problems in dealing with this object until the next use of
 (SI:FULL-GC :SYSTEM-RELEASE T).
16:57 Namespace server was unable to find HOST MC in namespace MIT.
It will be removed from the namespace.
16:57 It is necessary to change the flavor of namespace object #<HOST MC 34652132> from NET:HOST to FS:ITS-HOST.
This may cause problems in dealing with this object until the next use of
 (SI:FULL-GC :SYSTEM-RELEASE T).
16:55 Namespace server was unable to find HOST MIT-MC in namespace INTERNET.
It will be removed from the namespace.
16:55 It is necessary to change the flavor of namespace object #<ITS-HOST MIT-MC 34652062> from FS:ITS-HOST to NET:HOST.
This may cause problems in dealing with this object until the next use of
 (SI:FULL-GC :SYSTEM-RELEASE T).
16:55 Namespace server was unable to find HOST ARPANET|MIT-MC in namespace ARPANET.
It will be removed from the namespace.
16:54 Error from server: The namespace SCRC is not loaded.;
Obsolete host information may be used.
16:50 Namespace server was unable to find HOST INTERNET|MIT-MC in namespace INTERNET.
It will be removed from the namespace.
16:50 Namespace server was unable to find HOST MC in namespace MIT.
It will be removed from the namespace.
16:50 It is necessary to change the flavor of namespace object #<HOST MC 34652053> from NET:HOST to FS:ITS-HOST.
This may cause problems in dealing with this object until the next use of
 (SI:FULL-GC :SYSTEM-RELEASE T).
16:50 Namespace server was unable to find HOST ARPANET|MIT-MC in namespace ARPANET.
It will be removed from the namespace.
16:50 It is necessary to change the flavor of namespace object #<ITS-HOST MIT-MC 34652041> from FS:ITS-HOST to NET:HOST.
This may cause problems in dealing with this object until the next use of
 (SI:FULL-GC :SYSTEM-RELEASE T).
16:50 It is necessary to change the flavor of namespace object #<HOST MC 34652032> from NET:HOST to FS:ITS-HOST.
This may cause problems in dealing with this object until the next use of
 (SI:FULL-GC :SYSTEM-RELEASE T).
16:50 Namespace server was unable to find HOST MC in namespace MIT.
It will be removed from the namespace.
16:50 Namespace server was unable to find HOST MIT-MC in namespace INTERNET.
It will be removed from the namespace.
16:50 It is necessary to change the flavor of namespace object #<ITS-HOST MIT-MC 70263451> from FS:ITS-HOST to NET:HOST.
This may cause problems in dealing with this object until the next use of
 (SI:FULL-GC :SYSTEM-RELEASE T).
16:42 Timeout while waiting for GODZILLA.;
Obsolete host information may be used.
9//26 07:16 HOST TINMAN was mentioned but then not found.
"
 2-Oct-84 23:44:01-EDT,2189;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 2 Oct 84 23:43-EDT
Date: Tuesday, 2 October 1984, 23:44-EDT
From:  <GAVAN at MIT-PYGMALION>
Subject: Zmail blow-out.
To: DCP at SCRC-TENEX, GAVAN at MIT-PYGMALION, BUG-LISPM at MIT-OZ
In-reply-to: <841002171120.2.DCP@NEPONSET.SCRC.Symbolics>
Fonts: CPTFONT, CPTFONTB

    Date: Tuesday, 2 October 1984, 17:11-EDT
    From: David C. Plummer <DCP at SCRC-TENEX>

	Date: Tuesday, 2 October 1984, 16:19-EDT
	From:  <GAVAN at MIT-PYGMALION>

	    Date: Monday, 1 October 1984, 13:37-EDT
	    From: David C. Plummer <DCP at SCRC-TENEX>

		Date: Monday, 1 October 1984, 11:11-EDT
		From:  <GAVAN at MIT-PYGMALION>

		In Symbolics 3600 Release 5.2, Experimental RELATUS 130.104, FEP 22, on Lisp Machine Buddy Holly:

		In ZMAIL, Clicked on QUIT after getting an xmail file using GET INBOX.
		This happened.

		>>Trap: The first argument given to the AR-1 instruction, NIL, was not an array.
		While in the function SEND  SIGNAL  DBG:SIGNAL-TRAP

	    I'm not sure what we can do if you insist on redefing system functions.

	As I understand it, SIGNAL randomly conses in whatever area DEFAULT-CONS-AREA
	is bound to.  It's redefined to cons in SI:WORKING-STORAGE-AREA.  This bug has
	been reported, but it's not yet fixed in the system.  Sorry, we insist on
	redefining broken system functions, which we'll unredefine as soon as they're
	fixed.  One of the reasons I like lisp is that it gives you this capability.

    OK, I made the source of signal bind DEFAULT-CONS-AREA to
    BACKGROUND-CONS-AREA.  I've been screwed by this before too.

Don't forget FORMAT.

    You still didn't tell me why your SIGNAL is apparently interpreted.

Ask JCMa.  He claims he's about to fix it.

    The bug in Zmail still stands.  It may be that you typed Quit while the
    background was still parsing headers.  Things like this have been broken
    in Zmail for a long time.  It's hit me many times before.  Some of this
    will be better in Release 6.  The rule of thumb with Zmail: Don't type
    Q, E, S, G or any menu item that does any of those until Zmail is
    completely quiescent.

OK, thanks.
 3-Oct-84 02:03:53-EDT,1205;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 3 Oct 84 02:03-EDT
Received: from SCRC-EUPHRATES by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 87839; Wed 3-Oct-84 01:42:00-EDT
Date: Wednesday, 3 October 1984, 01:41-EDT
From: David A. Moon <Moon at SCRC-TENEX>
Subject: SHEET-DISPLAY-LOSENGED-STRING-INTERNAL lossage
To: TIM at MIT-DM
cc: BUG-LISPM at MIT-OZ
In-Reply-To: The message of 6 Sep 84 03:26-EDT from TIM at MIT-DM
Message-ID: <841003014153.3.MOON@EUPHRATES.SCRC.Symbolics>

    Date: Thursday, 6 September 1984, 03:26-EDT
    From:  <TIM at MIT-DM>

    In Release 5.1, Experimental MIT 1.4, FEP 18, on Lisp Machine Robot-1 (3600):

    SHEET-DISPLAY-LOSENGED-STRING-INTERNAL incompetently handles the case where
    the entire losenged string won't fit to the left of XLIM.  It draws the sides
    correctly, but it tries to make the top and bottom bars too wide, and often
    leaves too little room for the last displayed character.  In the case where
    none of the string will fit, it still tries to draw the box (even if the
    sides would look something like ><).

    A proposed patch....

Thanks for the suggestion, this will be fixed in the next release.
 3-Oct-84 12:09:10-EDT,1096;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 3 Oct 84 12:08-EDT
Received: from SCRC-THAMES by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 87878; Wed 3-Oct-84 10:18:57-EDT
Date: Wednesday, 3 October 1984, 10:19-EDT
From: Scott McKay <SWM at SCRC-QUABBIN>
Subject: Auto fill long comments mode
To: sr.ehpyc at MIT-SPEECH, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 2 Oct 84 20:48-EDT from Scott Cyphers <sr.ehpyc at MIT-SPEECH>
Message-ID: <841003101911.2.SWM@THAMES.SCRC.Symbolics>

    Date: Tuesday, 2 October 1984, 20:48-EDT
    From: Scott Cyphers <sr.ehpyc at MIT-SPEECH>

    In Symbolics 3600 Release 5.2, ZOO 3.0, Spire-Macros 3.0, Compute 2.0,
    Attribute 3.0, Audio 2.1, Speech-Attributes 2.3, Display 3.5,
    Speech-Layouts 4.7, Versatec 3.0, Prtout 2.0, Spire 14.0, SpireX 11.1,
    ZOO-SPIRE 1.0, FEP 22, on Lisp Machine Smokey:

    When in Auto-fill-lisp-comments-mode and in a comment, it seems like the
    intuitive thing for meta-q to do should be a fill-long-comment instead
    of a fill-paragraph.
This will be the case in the next release.
 3-Oct-84 12:10:44-EDT,3627;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 3 Oct 84 12:09-EDT
Received: from SCRC-THAMES by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 87929; Wed 3-Oct-84 12:01:16-EDT
Date: Wednesday, 3 October 1984, 12:01-EDT
From: Scott McKay <SWM at SCRC-QUABBIN>
Subject: peek server connection bug
To: dove at MIT-BUGS-BUNNY, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 2 Oct 84 20:00-EDT from Webster Dove <dove at MIT-BUGS-BUNNY>
Message-ID: <841003120128.7.SWM@THAMES.SCRC.Symbolics>

    Date: Tuesday, 2 October 1984, 20:00-EDT
    From: Webster Dove <dove at MIT-BUGS-BUNNY>

    In Symbolics 3600 Release 5.2, UTIL 1.5, FPA 1.0,
    Experimental IP-TCP 15.3, on Lisp Machine Tweety Pie:

    This happened when I tried to mouse the connection listed under a qfile
    server to daffy-duck.

    >>Trap: The function (:DEFUN-METHOD TV:PEEK-CONNECTION-MENU) was called with too few arguments.
    While in the function (:DEFUN-METHOD TV:PEEK-CONNECTION-MENU)  TV:PEEK-CONNECTION-MENU  SI:*EVAL

This has been fixed in the development (Rel 6) system.

    (:DEFUN-METHOD TV:PEEK-CONNECTION-MENU):  (P.C. = 1)  (from IP-TCP: IP-TCP; RELEASE-5-PATCH)
       Arg 0 (SELF): #<PEEK-PANE Peek Pane 1 3142575 exposed>
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:BASIC-PEEK -- 3. IV's, 0. FL's 61663441>
       Arg 2 (NETWORK): #<CHAOS Connection for FILE to DAFFY-DUCK 7773451>
       Arg 3 (CONN): #<ART-Q-2. 17277346>
       --Missing args:--
       Arg 4 (ITEM)

    TV:PEEK-CONNECTION-MENU:  (P.C. = 12)  (from IP-TCP: IP-TCP; RELEASE-5-PATCH)
       Rest arg (ARGS): (#<CHAOS Connection for FILE to DAFFY-DUCK 7773451> #<ART-Q-2. 17277346>)

    SI:*EVAL:  (P.C. = 370)
       Arg 0 (FORM): (TV:PEEK-CONNECTION-MENU (QUOTE #<CHAOS Connection for FILE to DAFFY-DUCK 7773451>) (QUOTE #<ART-Q-2. 17277346>))

    (:METHOD TV:MENU-EXECUTE-MIXIN :EXECUTE):  (P.C. = 53)
       Arg 0 (SELF): #<PEEK-PANE Peek Pane 1 3142575 exposed>
       Arg 1 (SELF-MAPPING-TABLE): TV:MENU-EXECUTE-MIXIN
       Arg 2 (OPERATION): :EXECUTE
       Arg 3 (ITEM): (NIL :EVAL (TV:PEEK-CONNECTION-MENU (QUOTE #<CHAOS Connection for FILE to DAFFY-DUCK 7773451>) (QUOTE #<ART-Q-2. 17277346>)) :DOCUMENTATION "Menu of useful things to do this connection")

    (:METHOD TV:ESSENTIAL-SCROLL-MOUSE-MIXIN :MOUSE-CLICK):  (P.C. = 114)
       Arg 0 (SELF): #<PEEK-PANE Peek Pane 1 3142575 exposed>
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:ESSENTIAL-SCROLL-MOUSE-MIXIN -- 6. IV's, 0. FL's 42606254>
       Arg 2 (OPERATION): :MOUSE-CLICK
       Arg 3 (BUTTON): 32768.
       Arg 4 (X): 627.
       Arg 5 (Y): 108.

    (:METHOD TV:PEEK-PANE :COMBINED :MOUSE-CLICK):  (P.C. = 10)
       Arg 0 (SELF): #<PEEK-PANE Peek Pane 1 3142575 exposed>
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:PEEK-PANE -- 1. IV's, 21. FL's 42606345>
       Rest arg (.DAEMON-CALLER-ARGS.): (:MOUSE-CLICK 32768. 627. 108.)

    (:METHOD TV:ESSENTIAL-MOUSE :MOUSE-BUTTONS):  (P.C. = 17)
       Arg 0 (SELF): #<PEEK-PANE Peek Pane 1 3142575 exposed>
       Arg 1 (SELF-MAPPING-TABLE): TV:ESSENTIAL-MOUSE
       Arg 2 (OPERATION): :MOUSE-BUTTONS
       Arg 3 (BD): 1.
       Arg 4 (X): 627.
       Arg 5 (Y): 108.

    TV:MOUSE-DEFAULT-HANDLER:  (P.C. = 357)
       Arg 0 (WINDOW): #<PEEK-PANE Peek Pane 1 3142575 exposed>
       Arg 1 (SCROLL-BAR-FLAG): T

    Rest of stack:
    (:METHOD TV:ESSENTIAL-MOUSE :HANDLE-MOUSE):  (P.C. = 10)
    (:METHOD TV:PEEK-PANE :COMBINED :HANDLE-MOUSE):  (P.C. = 10)
    TV:MOUSE-OVERSEER:  (P.C. = 101)
    SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
 3-Oct-84 12:32:59-EDT,1717;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 3 Oct 84 12:29-EDT
Received: from SCRC-NEPONSET by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 87945; Wed 3-Oct-84 12:27:13-EDT
Date: Wednesday, 3 October 1984, 12:27-EDT
From: David C. Plummer <DCP at SCRC-TENEX>
Subject: Re: peek bug
To: Patrick A. O'Donnell <PAO at MIT-EECS>, DCP at SCRC-TENEX
cc: dove at MIT-BUGS-BUNNY, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 2 Oct 84 22:40-EDT from Patrick A. O'Donnell <PAO at MIT-EECS>
Message-ID: <841003122721.6.DCP@NEPONSET.SCRC.Symbolics>

    Date: Tue 2 Oct 84 22:40:19-EDT
    From: Patrick A. O'Donnell <PAO@MIT-EECS>

	Date: Tuesday, 2 October 1984, 20:15-EDT
	From: David C. Plummer <DCP at SCRC-TENEX>

	    Date: Tuesday, 2 October 1984, 19:57-EDT
	    From: Webster Dove <dove at MIT-BUGS-BUNNY>

	    In Symbolics 3600 Release 5.2, UTIL 1.5, FPA 1.0,
	    Experimental IP-TCP 15.3, on Lisp Machine Tweety Pie:

	    I got this when trying to peek on the file system.

	    >>Error: The object #<HOST MC 43213042> received a :PEEK-FILE-SYSTEM-P message, which went unclaimed.
		     The rest of the message was ()
	    While in the function (:METHOD NET:OBJECT :UNCLAIMED-MESSAGE)  SI:FLAVOR-UNCLAIMED-MESSAGE  SI:INSTANCE-HASH-UNCLAIMED-MESSAGE

	You are still being bitten by the MC/DM backwash.  Notice that it says
	#<HOST MC ...> instead of #<ITS-HOST MC ...>

    Indubitably.  However, should the confusion of the namespace system
    break Peek so badly?

If PEEK is the thing it breaks the worst, you should be glad!  Only
file-system hosts are supposed to be able to show up in Peek File
System, so somebody was violating contracts at many, MANY levels.
 3-Oct-84 12:34:09-EDT,1130;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 3 Oct 84 12:32-EDT
Received: from SCRC-NEPONSET by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 87946; Wed 3-Oct-84 12:32:34-EDT
Date: Wednesday, 3 October 1984, 12:32-EDT
From: David C. Plummer <DCP at SCRC-TENEX>
Subject: Zmail blow-out.
To: GAVAN at MIT-PYGMALION, DCP at SCRC-TENEX, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 2 Oct 84 23:44-EDT from GAVAN at MIT-PYGMALION
Message-ID: <841003123244.7.DCP@NEPONSET.SCRC.Symbolics>
Fonts: CPTFONT, CPTFONTB

    Date: Tuesday, 2 October 1984, 23:44-EDT
    From:  <GAVAN at MIT-PYGMALION>

	Date: Tuesday, 2 October 1984, 17:11-EDT
	From: David C. Plummer <DCP at SCRC-TENEX>

	OK, I made the source of signal bind DEFAULT-CONS-AREA to
	BACKGROUND-CONS-AREA.  I've been screwed by this before too.

    Don't forget FORMAT.

Huh??  Example?  (FORMAT NIL "~S" 'FOO) conses in default-cons-area, no?
If you don't want it to cons results in you temporary area, you should
wrap your own LET around it.  Otherwise, you could never cons results in
your temporary area, which you may very well want to do.
 3-Oct-84 12:34:42-EDT,1109;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 3 Oct 84 12:34-EDT
Received: from SCRC-PEACE by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 102695; Wed 3-Oct-84 12:34:10-EDT
Date: Wednesday, 3 October 1984, 12:33-EDT
From: Charles Hornig <Hornig at SCRC-STONY-BROOK>
Subject: peek server connection bug
To: Webster Dove <dove at MIT-BUGS-BUNNY>, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 2 Oct 84 20:00-EDT from Webster Dove <dove at MIT-BUGS-BUNNY>
Message-ID: <841003123324.1.HORNIG@PEACE.SCRC.Symbolics>

    Date: Tuesday, 2 October 1984, 20:00-EDT
    From: Webster Dove <dove at MIT-BUGS-BUNNY>

    In Symbolics 3600 Release 5.2, UTIL 1.5, FPA 1.0,
    Experimental IP-TCP 15.3, on Lisp Machine Tweety Pie:

    This happened when I tried to mouse the connection listed under a qfile
    server to daffy-duck.

    >>Trap: The function (:DEFUN-METHOD TV:PEEK-CONNECTION-MENU) was called with too few arguments.
    While in the function (:DEFUN-METHOD TV:PEEK-CONNECTION-MENU)  TV:PEEK-CONNECTION-MENU  SI:*EVAL

This will be fixed in the new release of IP-TCP.
 3-Oct-84 18:25:44-EDT,3936;000000000000
Received: from MIT-APIARY-9 by MIT-OZ via Chaosnet; 3 Oct 84 18:11-EDT
Date: Wednesday, 3 October 1984, 18:10-EDT
From: Henry Lieberman <Henry at MIT-OZ>
Subject: Probably vms error
To: BUG-LISPM at MIT-OZ, bug-pygmalion at MIT-OZ

In Symbolics 3600 Release 5.2, FEP 18, on APIARY-9:

Trying to C-X C-F pig:[lmlib]lets

>>Error: illegal record encountered; STV = !UL
         For PIG:SYS$DISK:[LMLIB]LETS.LSP
While in the function (:DEFUN-METHOD FS:FILE-PROCESS-ASYNC-MARK)  (:DEFUN-METHOD FS:FILE-NEXT-READ-PKT)  (:METHOD FS:FILE-INPUT-STREAM-MIXIN :GET-NEXT-INPUT-PKT)

(:DEFUN-METHOD FS:FILE-PROCESS-ASYNC-MARK):  (P.C. = 20)
   Arg 0 (SELF): #<FILE-INPUT-CHARACTER-STREAM "PIG:SYS$DISK:[LMLIB]LETS.LSP" 12142631>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:FILE-DATA-STREAM-MIXIN -- 6. IV's, 0. FL's 41420040>
   Arg 2 (PKT): #<Chaos Packet 6144252>
   Local 3 (STRING): "I2164 ERROR MSC F illegal record encountered; STV = !UL"

(:DEFUN-METHOD FS:FILE-NEXT-READ-PKT):  (P.C. = 67)
   Arg 0 (SELF): #<FILE-INPUT-CHARACTER-STREAM "PIG:SYS$DISK:[LMLIB]LETS.LSP" 12142631>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:FILE-INPUT-STREAM-MIXIN -- 5. IV's, 1. FL's 41420076>
   Arg 2 (NO-HANG-P): NIL
   Arg 3 (FOR-SYNC-MARK-P): NIL

(:METHOD FS:FILE-INPUT-STREAM-MIXIN :GET-NEXT-INPUT-PKT):  (P.C. = 17)
   Arg 0 (SELF): #<FILE-INPUT-CHARACTER-STREAM "PIG:SYS$DISK:[LMLIB]LETS.LSP" 12142631>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:FILE-INPUT-STREAM-MIXIN -- 5. IV's, 1. FL's 41420076>
   Arg 2 (OPERATION): :GET-NEXT-INPUT-PKT
   Arg 3 (NO-HANG-P): NIL

(:METHOD CHAOS:CHARACTER-INPUT-STREAM-MIXIN :NEXT-INPUT-BUFFER):  (P.C. = 6)
   Arg 0 (SELF): #<FILE-INPUT-CHARACTER-STREAM "PIG:SYS$DISK:[LMLIB]LETS.LSP" 12142631>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor CHAOS:CHARACTER-INPUT-STREAM-MIXIN -- 1. IV's, 0. FL's 41420141>
   Arg 2 (OPERATION): :NEXT-INPUT-BUFFER
   Arg 3 (NO-HANG-P): NIL

(:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :SETUP-NEXT-INPUT-BUFFER):  (P.C. = 11)
   Arg 0 (SELF): #<FILE-INPUT-CHARACTER-STREAM "PIG:SYS$DISK:[LMLIB]LETS.LSP" 12142631>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:BASIC-BUFFERED-INPUT-STREAM -- 3. IV's, 0. FL's 41420047>
   Arg 2 (OPERATION): :SETUP-NEXT-INPUT-BUFFER
   --Defaulted args:--
   Arg 3 (NO-HANG-P): NIL

(:METHOD FS:FILE-INPUT-CHARACTER-STREAM :COMBINED :SETUP-NEXT-INPUT-BUFFER):  (P.C. = 10)
   Arg 0 (SELF): #<FILE-INPUT-CHARACTER-STREAM "PIG:SYS$DISK:[LMLIB]LETS.LSP" 12142631>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:FILE-INPUT-CHARACTER-STREAM -- 1. IV's, 7. FL's 41420106>
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

(:METHOD SI:BUFFERED-LINE-INPUT-STREAM :LINE-IN):  (P.C. = 16)
   Arg 0 (SELF): #<FILE-INPUT-CHARACTER-STREAM "PIG:SYS$DISK:[LMLIB]LETS.LSP" 12142631>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:BUFFERED-LINE-INPUT-STREAM -- 3. IV's, 0. FL's 41420153>
   Arg 2 (OPERATION): :LINE-IN
   Arg 3 (LEADER): 9

ZWEI:SECTIONIZE-BUFFER:  (P.C. = 163)
   Arg 0 (BUFFER): #<FILE-BUFFER "LETS.LSP SYS$DISK:[LMLIB] PIG:" 12142315>
   Arg 1 (STREAM): #<FILE-INPUT-CHARACTER-STREAM "PIG:SYS$DISK:[LMLIB]LETS.LSP" 12142631>
   Arg 2 (HACK-FONTS): NIL

Rest of stack:
(:DEFUN-METHOD ZWEI:REVERT-FROM-STREAM):  (P.C. = 171)
(:METHOD ZWEI:FILE-BUFFER-MIXIN :REVERT):  (P.C. = 71)
ZWEI:FIND-FILE:  (P.C. = 125)
ZWEI:COM-FIND-FILE:  (P.C. = 13)
ZWEI:COM-FIND-FILE-AND-ABBREVS:  (P.C. = 2)  (from HENRYS-INIT: HENRY; ZWEI)
ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
ZWEI:MAKE-EXTENDED-COMMAND-INTERNAL:  (P.C. = 77)
SYS:CALL-FUNNY-FUNCTION:  (P.C. = 101)
Closure of ZWEI:MAKE-EXTENDED-COMMAND-INTERNAL:
ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 214)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 41)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
 3-Oct-84 18:56:52-EDT,1054;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 3 Oct 84 18:56-EDT
Received: from SCRC-NEPONSET by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 87942; Wed 3-Oct-84 12:25:12-EDT
Date: Wed, 3 Oct 84 12:25 EDT
From: "David C. Plummer" <DCP@SCRC-STONY-BROOK.ARPA>
Subject: Namespaces, A Priority Issue
To: Kent M Pitman <KMP@MIT-MC.ARPA>
cc: DPH@MIT-MC.ARPA, CSTACY@MIT-MC.ARPA, BUG-LISPM@MIT-MC.ARPA,
    Hewitt%MIT-OZ@SCRC-STONY-BROOK.ARPA,
    Gavan%MIT-OZ@SCRC-STONY-BROOK.ARPA,
    JCMa%MIT-OZ@SCRC-STONY-BROOK.ARPA
In-Reply-To: The message of 2 Oct 84 16:18-EDT from Kent M Pitman <KMP at MIT-MC>
Message-ID: <841003122516.5.DCP@NEPONSET.SCRC.Symbolics>

    Date: 2 October 1984 16:18-EDT
    From: Kent M Pitman <KMP @ MIT-MC>

    ...

(1) I am on your side.  (2) I have sent our decision makers an ultimatum
that if they don't send you an official policy by Friday which covers
several topics, I will send you what I believe to be the case.  (3) I'm
am not trying to thwart the company; I am trying to get things out in
the open.
 3-Oct-84 19:08:33-EDT,3057;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 3 Oct 84 19:07-EDT
Date: Wednesday, 3 October 1984, 19:00-EDT
From: Scott Cyphers <sr.ehpyc at MIT-SPEECH>
Subject: Cause of AI namespace lossage conjecture
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 Release 5.2, ZOO 3.0, Spire-Macros 3.0, Compute 2.0,
Attribute 3.0, Audio 2.1, Speech-Attributes 2.3, Display 3.5,
Speech-Layouts 4.7, Versatec 3.0, Prtout 2.0, Spire 14.0, SpireX 11.1,
ZOO-SPIRE 1.0, FEP 22, on Lisp Machine Smokey:

As I was reading my mail with Zmail, it stopped to consult with some
namespace server for a few seconds and then said that host MC must be
changed from ITS to an object of whatever type it is that it isn't
supposed to be.  Every 3600 world here comes from the one from AI, so
the fact that it is changing from ITS to some other type of machine
would seem to me to indicate that the world is correct but someone is
wrong about it.  Both our namespace secondary servers (Polar and Goldy)
think MC is running ITS, and I'm sure LM15 does too.  However, a week
ago when LM15 was down, I noticed that sometimes in booting, Goldy/Polar
would not respond fast enough and some secondary at Symbolics would
respond instead and that Symbolics server would inform my machine that
Goldy and Polar were NOT secondary servers, indicating extremely
outdated information, as they have been secondaries for months now.  Of
course this screwed up all my defenses against LM15 being down.  Now
that LM15 has been up, the problem has stopped.  Might it be that some
secondary MIT server at Symbolics is sending out this ancient version of
the world which is screwing things up with MC and such?  Our Zoo
machines (except Goldy and Polar) are not having the problems described
at AI (generally we get 2 or four notifications during a boot and that's
it).  I imagine part of this is because we are a different site, but I
have this mail code loaded in as part of the Zoo system, which ought to cause
problems with some MIT hosts.  Might it be that the AI machines are timing
out on LM15 and getting a Symbolics response faster than a response from Goldy
or Polar, and that the responder has this obsolete MIT information which is
screwing everything up?  It would be interesting to know if Tweety Pie, which
is on the same subnet as Goldy, but in the MIT site, is behaving like an
MIT site machine or a Zoo site machine in regards to the namespace lossage.

;;; Make mail try non direct routes (kludgey)

;;; replacement from patch 83.40
;;;
(record-source-file-name 'zwei:find-mail-services 'defun t)

zwei:
(DEFUN FIND-MAIL-SERVICES ()
  (WITH-STACK-LIST (NET:*NAMESPACE-SEARCH-LIST* (SEND NET:*LOCAL-SITE* ':LOCAL-NAMESPACE))
    (neti:keeping-namespace-server
      (nconc 
	(WITH-STACK-LIST (THIS-SITE ':SITE NET:*LOCAL-SITE*)
	  (NET:FIND-PATHS-TO-SERVICE ':STORE-AND-FORWARD-MAIL THIS-SITE))
	(with-stack-list (mit-site :site (neti:find-object-named :site :mit))
	  (NET:FIND-PATHS-TO-SERVICE ':STORE-AND-FORWARD-MAIL mit-SITE))))))

 3-Oct-84 20:45:31-EDT,3578;000000000000
Received: from MIT-LISPM-31 by MIT-OZ via Chaosnet; 3 Oct 84 20:45-EDT
Date: Wednesday, 3 October 1984, 20:44-EDT
From: Steve Gander <GANDER at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In System 98.67, CADR 3.8, ZMail 53.18, MIT-Specific 22.2, microcode 309,
gc@36, on Lisp Machine Thirty-one:


Insert your description of the circumstances here:

trying to start a zmail...

>>TRAP 17443 (TRANS-TRAP)
The variable ZWEI:*PROFILE-EDITOR-WINDOW* is unbound.
Backtrace from the debugger:

(:METHOD ZWEI:ZMAIL-PROFILE-FRAME :AFTER :INIT) (P.C. = 61)
  (SELF is #<ZMAIL-PROFILE-FRAME Zmail Profile Frame 2 2233634 deactivated>)

 Arg 0 (OPERATION): :INIT
 Arg 1 (IGNORE): #<DTP-LOCATIVE 3223537>


(:INTERNAL (:METHOD ZWEI:ZMAIL-PROFILE-FRAME :COMBINED :INIT) 0) (P.C. = 155)

 Rest arg (.DAEMON-CALLER-ARGS.): (:INIT #<DTP-LOCATIVE 3223537>)
Local 1 (.DAEMON-MAPPING-TABLE.): #<ART-16B-6 23632535>
Local 2 (.VAL1.): #<ZMAIL-PROFILE-FRAME Zmail Profile Frame 2 2233634 deactivated>
Local 3 (.VAL2.): NIL
Local 4 (.VAL3.): NIL


(:METHOD TV:SHEET :INVERSE-AROUND :INIT) (P.C. = 140)
  (SELF is #<ZMAIL-PROFILE-FRAME Zmail Profile Frame 2 2233634 deactivated>)

 Arg 0 (OPERATION): :INIT
 Arg 1 (CONT): #<DTP-FEF-POINTER (:INTERNAL (:METHOD ZWEI:ZMAIL-PROFILE-FRAME :COMBINED :INIT) 0) 30257642>
 Arg 2 (MT): #<ART-16B-6 23632535>
 Arg 3 (ARGS): (:INIT #<DTP-LOCATIVE 3223537>)
 Arg 4 (INIT-PLIST): #<DTP-LOCATIVE 3223537>
Local 0 (.QUEUE-LEFT.): T
Local 1 (.OLD.OUTPUT.HOLD.): NIL
Local 2 (EXPOSE-P): NIL
Local 3: NIL
Local 4 (E): NIL


(:METHOD ZWEI:ZMAIL-PROFILE-FRAME :COMBINED :INIT) (P.C. = 43)
  (SELF is #<ZMAIL-PROFILE-FRAME Zmail Profile Frame 2 2233634 deactivated>)

 Rest arg (.DAEMON-CALLER-ARGS.): (:INIT #<DTP-LOCATIVE 3223537>)
Local 1 (.DAEMON-MAPPING-TABLE.): #<ART-16B-6 23632535>


INSTANTIATE-FLAVOR (P.C. = 523)

 Arg 0 (FLAVOR-NAME): ZWEI:ZMAIL-PROFILE-FRAME
 Arg 1 (INIT-PLIST): #<DTP-LOCATIVE 3223537>
 Arg 2 (SEND-INIT-MESSAGE-P): T
   --Defaulted args:--
 Arg 3 (RETURN-UNHANDLED-KEYWORDS-P): NIL
 Arg 4 (AREA-TO-CONS-INSTANCE-IN): 63
Local 0 (FL): #<FLAVOR ZWEI:ZMAIL-PROFILE-FRAME 23553334>
Local 1 (UNHANDLED-KEYWORDS): NIL
Local 2 (INSTANCE): #<ZMAIL-PROFILE-FRAME Zmail Profile Frame 2 2233634 deactivated>
Local 3 (VARS): (TV:SCREEN-ARRAY TV:LOCATIONS-PER-LINE TV:OLD-SCREEN-ARRAY TV:BIT-ARRAY ...)
Local 4 (NEW-PLIST): (:EDITOR-CLOSURE-VARIABLES (** ** ** ** ...) :BLINKER-P NIL ...)
Local 5 (TEM): NIL
Local 6 (MAP-RESULT): NIL
Local 7 (MAP-TEMP): #<DTP-LOCATIVE 3223541>
Local 8 (MAP-LOCAL-0): NIL
Local 9 (KEYWORD): NIL
Local 10 (MISSING-KEYWORDS): NIL
Local 11 (V): NIL
Local 12 (I): 73
Local 13 (VAR-KEYWORDS): (NIL NIL NIL :BIT-ARRAY ...)
Local 14 (REMAINING-KEYWORDS): (:ACTIVATE-P :AREA :ASYNCHRONOUS-CHARACTERS :BACKSPACE-NOT-OVERPRINTING-FLAG ...)
Local 15 (PL): NIL
Local 16 (INDEX): 53
Local 17: NIL
Local 18 (D): (53 NIL)


Remainder of stack:

TV:MAKE-WINDOW (P.C. = 26)
(:METHOD TV:CONSTRAINT-FRAME-WITH-SHARED-IO-BUFFER :CREATE-PANE) (P.C. = 42)
TV:CONSTRAINT-FRAME-WINDOWS (P.C. = 43)
TV:CONSTRAINT-FRAME-PROCESS-CONSTRAINTS (P.C. = 60)
(:METHOD TV:BASIC-CONSTRAINT-FRAME :AFTER :INIT) (P.C. = 43)
(:INTERNAL (:METHOD ZWEI:ZMAIL-FRAME :COMBINED :INIT) 0) (P.C. = 154)
(:METHOD TV:SHEET :INVERSE-AROUND :INIT) (P.C. = 140)
(:METHOD ZWEI:ZMAIL-FRAME :COMBINED :INIT) (P.C. = 43)
INSTANTIATE-FLAVOR (P.C. = 523)
TV:MAKE-WINDOW (P.C. = 26)
TV:KBD-SYS-1 (P.C. = 565)
SI:PROCESS-RUN-FUNCTION-INTERNAL (P.C. = 100)
SI:PROCESS-TOP-LEVEL (P.C. = 246)
 3-Oct-84 20:50:31-EDT,2248;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 3 Oct 84 20:50-EDT
Received: from SCRC-THAMES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 103120; Wed 3-Oct-84 19:30:20-EDT
Date: Wednesday, 3 October 1984, 19:31-EDT
From: Scott McKay <SWM at SCRC-QUABBIN>
Subject: null extraneous rest arg
To: Moon at SCRC-TENEX
cc: Zvona at MIT-OZ, BUG-LISPM at MIT-OZ,
    Bug-Tracking-Replies at SCRC-QUABBIN
In-Reply-To: <840916204923.0.MOON@EUPHRATES.SCRC.Symbolics>
Disposition: LOW-PRIORITY
Category: debugger
Message-ID: <841003193101.4.SWM@THAMES.SCRC.Symbolics>

Synopsis:   -- Fill in your brief summary of this problem --

The debugger complains about extraneous &REST args when, in fact, there
is nothing wrong.  It seems to happen for interpreted functions only.
The bug is annoying, but benign.  I'll look at it (and a related bug
from JWalker) soon.

  -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --

    Date: Sunday, 16 September 1984, 20:49-EDT
    From: David A. Moon <Moon at SCRC-TENEX>

	Date: Sunday, 16 September 1984, 12:38-EDT
	From: David Chapman <Zvona at MIT-OZ>

	In Symbolics 3600 Release 5.2, FEP 18, on Lisp Machine Jim Morrison:

	Under what conditions does the debugger mention this null extraneous
	rest arg?  It doesn't seem to be an error condition, so unless there is
	some good reason to display it, it should be suppressed as confusing.
	If there is a criterion for when to display that is meaningful to the
	user, I'd be interested to know what it is.

	(:PROPERTY :NOT RUP:CONJ-NORMAL):  (from OZ:OZ:<AGRE.SP>PI-LISP)
	   Arg 0 (EXP)
	   Extraneous Rest Arg: NIL

    It's a bug, not a misfeature.  I don't know what the bug is exactly, but
    the simplest test case is

	    (funcall '(lambda (x) (dbg)) '(1))

    NB: This only happens when you run your code interpreted.

    Aside to BUG-LISPM @ SCRC: The recently-introduced bug in the Debugger that
    is revealed if you run this -in the development system- (the function is
    displayed as NIL) is fixed in my private copy (and "always" has been) so
    it should get fixed automatically when that's merged in.  In other words
    don't expend a lot of effort fixing it.
 3-Oct-84 22:14:49-EDT,714;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 3 Oct 84 22:14-EDT
Date: Wednesday, 3 October 1984, 22:13-EDT
From: Kent M Pitman <kmp at MIT-MC>
Subject: Comparing multi-font buffers and files using m-X Source Compare
To: BUG-LISPM at OZ
Cc: CWH at SCRC

In Symbolics 3600 Release 4.5 on PA Lisp Machine Merlin:

Doing m-X Source Compare from buffer to file when the file was
just written from the buffer shows lots of differences if the
file has multiple fonts, because epsilons appear in the file 
but not in the buffer. 

I assume things are different in later releases due to changes
in the way fonts are handled, but since different doesn't always
imply fixed, I figured I'd mention it.
-kmp
 3-Oct-84 22:51:20-EDT,637;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 3 Oct 84 22:49-EDT
Date: Wednesday, 3 October 1984, 22:44-EDT
From: Scott Cyphers <sr.ehpyc at MIT-SPEECH>
Subject: Byte size
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 Release 5.2, ZOO 3.0, Spire-Macros 3.0, Compute 2.0,
Attribute 3.0, Audio 2.1, Speech-Attributes 2.3, Display 3.5,
Speech-Layouts 4.7, Versatec 3.0, Prtout 2.0, Spire 14.0, SpireX 11.1,
ZOO-SPIRE 1.0, FEP 22, on Lisp Machine Smokey:

On a 3600, why isn't it possible to open a binary file with a byte-size
of 32?  This would be useful for writing a bunch of integers or floating
point numbers to a file.
 4-Oct-84 02:09:48-EDT,1161;000000000000
Received: from MIT-MORRISON by MIT-OZ via Chaosnet; 4 Oct 84 02:09-EDT
Date: Thursday, 4 October 1984, 02:09-EDT
From: Scott W. Layson <x.Gyro at MIT-OZ>
Subject: &rest args and the error handler
To: BUG-LISPM at MIT-OZ
In-reply-to: <840928155448.4.MOON@EUPHRATES.SCRC.Symbolics>

    Date: Friday, 28 September 1984, 15:54-EDT
    From: David A. Moon <Moon at SCRC-TENEX>

	Date: Friday, 28 September 1984, 15:11-EDT
	From: Scott McKay <SWM at SCRC-QUABBIN>
	Question:  I notice than c-m-<number> c-m-L, where <number> is greater
	than the number of frame locals, still shows data.  Is this a bug, or a
	feature whereby you can look at the stack in places you don't own?  It
	seems a bit dubious to me.

    I often take advantage of this to examine the temporary-values stack of
    a function.  There used to be a note on my whiteboard saying to put an explicit
    command into the debugger for this, but I erased it.

Oh yeah, I was going to ask for a way to look at the stack too.  It's
good to know about this -- never occurred to me to try it.  It *would*
be nice if it were an explicit, documented debugger command.

-- Scott
 4-Oct-84 02:14:40-EDT,1168;000000000000
Received: from MIT-MORRISON by MIT-OZ via Chaosnet; 4 Oct 84 02:14-EDT
Date: Thursday, 4 October 1984, 02:15-EDT
From: Scott W. Layson <x.Gyro at MIT-OZ>
Subject: ART-BOOLEAN default value incorrectly computed
To: bug-lispm at MIT-OZ

[This message was sent once but never made it to SCRC, so I'm sending it
again -- OZ people please bear with me.]

In Symbolics 3600 Release 5.2, on Lisp Machine Robot-4:

I have found three functions in which the expression for the default
value of an array element computes the wrong value for ART-BOOLEAN
arrays (i.e., T instead of NIL): ADJUST-ARRAY-SIZE, COPY-ARRAY-CONTENTS,
and COPY-ARRAY-CONTENTS-AND-LEADER.  ADJUST-ARRAY-SIZE, for example,
uses the expression

  (IF (NULL (ARRAY-BITS-PER-ELEMENT TYPE)) NIL 0)

The problem is that (ARRAY-BITS-PER-ELEMENT ART-BOOLEAN) => 1, of
course, so this expression returns 0, which of course turns into T when
stored into the array.  COPY-ARRAY-CONTENTS and friend use a slightly
different expression with the same bug.  There are probably more
instances of this bug scattered around the system, too (though
MAKE-ARRAY works correctly).

-- Scott
-------
 4-Oct-84 09:03:48-EDT,1235;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 4 Oct 84 09:03-EDT
Received: from SCRC-PEACE by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 103364; Thu 4-Oct-84 09:03:38-EDT
Date: Thursday, 4 October 1984, 09:03-EDT
From: Charles Hornig <Hornig at SCRC-STONY-BROOK>
Subject: Byte size
To: Scott Cyphers <sr.ehpyc at MIT-SPEECH>, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 3 Oct 84 22:44-EDT from Scott Cyphers <sr.ehpyc at MIT-SPEECH>
Message-ID: <841004090331.7.HORNIG@PEACE.SCRC.Symbolics>

    Date: Wednesday, 3 October 1984, 22:44-EDT
    From: Scott Cyphers <sr.ehpyc at MIT-SPEECH>

    In Symbolics 3600 Release 5.2, ZOO 3.0, Spire-Macros 3.0, Compute 2.0,
    Attribute 3.0, Audio 2.1, Speech-Attributes 2.3, Display 3.5,
    Speech-Layouts 4.7, Versatec 3.0, Prtout 2.0, Spire 14.0, SpireX 11.1,
    ZOO-SPIRE 1.0, FEP 22, on Lisp Machine Smokey:

    On a 3600, why isn't it possible to open a binary file with a byte-size
    of 32?  This would be useful for writing a bunch of integers or floating
    point numbers to a file.

This is due to the fact that QFile doesn't support byte sizes greater
than 16, due to a supposed lack of interest.  TCP-FTP supports arbitrary
byte sizes.
 4-Oct-84 09:16:18-EDT,1323;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 4 Oct 84 09:15-EDT
Received: from SCRC-CONCORD by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 103374; Thu 4-Oct-84 09:15:33-EDT
Date: Thursday, 4 October 1984, 09:16-EDT
From: Bernard S. Greenberg <BSG at SCRC-TENEX>
Subject: Byte size
To: Hornig at SCRC-STONY-BROOK, sr.ehpyc at MIT-SPEECH,
    BUG-LISPM at MIT-OZ
In-Reply-To: <841004090331.7.HORNIG@PEACE.SCRC.Symbolics>
Message-ID: <841004091611.6.BSG@CONCORD.SCRC.Symbolics>

    Date: Thursday, 4 October 1984, 09:03-EDT
    From: Charles Hornig <Hornig at SCRC-STONY-BROOK>

	Date: Wednesday, 3 October 1984, 22:44-EDT
	From: Scott Cyphers <sr.ehpyc at MIT-SPEECH>

	On a 3600, why isn't it possible to open a binary file with a byte-size
	of 32?  This would be useful for writing a bunch of integers or floating
	point numbers to a file.

    This is due to the fact that QFile doesn't support byte sizes greater
    than 16, due to a supposed lack of interest.  
The release 6 file protocol doesn't support it, either.
						  TCP-FTP supports arbitrary
    byte sizes.
Lack of interest is only one issue.
Another good issue is what you get when you TYI from a 32-bit-byte stream.
A bignum?  A negative number?  What do you TYO?  Does it cons and require
bigna?  And so forth.
 4-Oct-84 12:21:39-EDT,1876;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 4 Oct 84 12:21-EDT
Date: 4 Oct 1984  12:24 EDT (Thu)
Message-ID: <SR.EHPYC.12052773838.BABYL@MIT-SPEECH>
From: Scott Cyphers <SR.EHPYC@MIT-SPEECH>
To:   "Bernard S. Greenberg" <BSG@SCRC-TENEX>
Cc:   BUG-LISPM@MIT-OZ, Hornig@SCRC-STONY-BROOK
Subject: Byte size
In-reply-to: Msg of 4 Oct 1984 09:16-EDT from Bernard S. Greenberg <BSG at SCRC-TENEX>

    Date: Thursday, 4 October 1984, 09:16-EDT
    From: Bernard S. Greenberg <BSG at SCRC-TENEX>
    To:   Hornig at SCRC-STONY-BROOK, sr.ehpyc, BUG-LISPM at MIT-OZ
    Re:   Byte size

        Date: Thursday, 4 October 1984, 09:03-EDT
        From: Charles Hornig <Hornig at SCRC-STONY-BROOK>

    	Date: Wednesday, 3 October 1984, 22:44-EDT
    	From: Scott Cyphers <sr.ehpyc at MIT-SPEECH>

    	On a 3600, why isn't it possible to open a binary file with a byte-size
    	of 32?  This would be useful for writing a bunch of integers or floating
    	point numbers to a file.

        This is due to the fact that QFile doesn't support byte sizes greater
        than 16, due to a supposed lack of interest.  
    The release 6 file protocol doesn't support it, either.
    						  TCP-FTP supports arbitrary
        byte sizes.
    Lack of interest is only one issue.
    Another good issue is what you get when you TYI from a 32-bit-byte stream.
    A bignum?  A negative number?  What do you TYO?  Does it cons and require
    bigna?  And so forth.

What's wrong with an integer?  It's 32 bits and it's a much more
intuitive way to do
(send stream :tyo (ldb (byte 16. 0.)))
(send stream :tyo (ldb (byte 16. 16.)))

Is it more than a matter of changing the 16s in the code to 32s?  I
looked a little at it (but not too closely) and it looked like that
was what was the major part of it, so I thought maybe it was a Cadr
holdover.
 4-Oct-84 14:37:36-EDT,1785;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 4 Oct 84 14:36-EDT
Received: from SCRC-THAMES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 103634; Thu 4-Oct-84 14:24:14-EDT
Date: Thursday, 4 October 1984, 14:24-EDT
From: Scott McKay <SWM at SCRC-QUABBIN>
Subject: ART-BOOLEAN default value incorrectly computed
To: x.Gyro at MIT-OZ, bug-lispm at MIT-OZ
cc: dcp at SCRC-QUABBIN
In-Reply-To: The message of 4 Oct 84 02:15-EDT from Scott W. Layson <x.Gyro at MIT-OZ>
Message-ID: <841004142447.7.SWM@THAMES.SCRC.Symbolics>

    Date: Thursday, 4 October 1984, 02:15-EDT
    From: Scott W. Layson <x.Gyro at MIT-OZ>

    [This message was sent once but never made it to SCRC, so I'm sending it
    again -- OZ people please bear with me.]

    In Symbolics 3600 Release 5.2, on Lisp Machine Robot-4:

    I have found three functions in which the expression for the default
    value of an array element computes the wrong value for ART-BOOLEAN
    arrays (i.e., T instead of NIL): ADJUST-ARRAY-SIZE, COPY-ARRAY-CONTENTS,
    and COPY-ARRAY-CONTENTS-AND-LEADER.  ADJUST-ARRAY-SIZE, for example,
    uses the expression

      (IF (NULL (ARRAY-BITS-PER-ELEMENT TYPE)) NIL 0)

    The problem is that (ARRAY-BITS-PER-ELEMENT ART-BOOLEAN) => 1, of
    course, so this expression returns 0, which of course turns into T when
    stored into the array.  COPY-ARRAY-CONTENTS and friend use a slightly
    different expression with the same bug.  There are probably more
    instances of this bug scattered around the system, too (though
    MAKE-ARRAY works correctly).

I don't recall if there was a function called ARRAY-NULL-ELEMENT in 5.2
or not, but COPY-ARRAY-CONTENTS[-AND-LEADER] both use it.  I made a
similar change to ADJUST-ARRAY-SIZE.
 4-Oct-84 14:39:10-EDT,2103;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 4 Oct 84 14:38-EDT
Received: from SCRC-CUYAHOGA by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 103644; Thu 4-Oct-84 14:31:42-EDT
Date: Thursday, 4 October 1984, 14:32-EDT
From: Robert A. Cassels <Cassels at SCRC-TENEX>
Subject: Byte size
To: SR.EHPYC at MIT-SPEECH, BSG at SCRC-TENEX
cc: BUG-LISPM at MIT-OZ, Hornig at SCRC-STONY-BROOK
In-Reply-To: <SR.EHPYC.12052773838.BABYL@MIT-SPEECH>
Message-ID: <841004143204.7.CASSELS@CUYAHOGA.SCRC.Symbolics>

    Date: 4 Oct 1984  12:24 EDT (Thu)
    From: Scott Cyphers <SR.EHPYC@MIT-SPEECH>

	Date: Thursday, 4 October 1984, 09:16-EDT
	From: Bernard S. Greenberg <BSG at SCRC-TENEX>
	To:   Hornig at SCRC-STONY-BROOK, sr.ehpyc, BUG-LISPM at MIT-OZ
	Re:   Byte size

	    Date: Thursday, 4 October 1984, 09:03-EDT
	    From: Charles Hornig <Hornig at SCRC-STONY-BROOK>

	    Date: Wednesday, 3 October 1984, 22:44-EDT
	    From: Scott Cyphers <sr.ehpyc at MIT-SPEECH>

	    On a 3600, why isn't it possible to open a binary file with a byte-size
	    of 32?  This would be useful for writing a bunch of integers or floating
	    point numbers to a file.

	    This is due to the fact that QFile doesn't support byte sizes greater
	    than 16, due to a supposed lack of interest.  
	The release 6 file protocol doesn't support it, either.
						      TCP-FTP supports arbitrary
	    byte sizes.
	Lack of interest is only one issue.
	Another good issue is what you get when you TYI from a 32-bit-byte stream.
	A bignum?  A negative number?  What do you TYO?  Does it cons and require
	bigna?  And so forth.

    What's wrong with an integer?  It's 32 bits and it's a much more
    intuitive way to do
    (send stream :tyo (ldb (byte 16. 0.)))
    (send stream :tyo (ldb (byte 16. 16.)))

    Is it more than a matter of changing the 16s in the code to 32s?
Yes.  LDB or %LOGLDB?
								      I
    looked a little at it (but not too closely) and it looked like that
    was what was the major part of it, so I thought maybe it was a Cadr
    holdover.
 4-Oct-84 14:42:33-EDT,1985;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 4 Oct 84 14:41-EDT
Received: from SCRC-THAMES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 103650; Thu 4-Oct-84 14:34:50-EDT
Date: Thursday, 4 October 1984, 14:35-EDT
From: Scott McKay <SWM at SCRC-QUABBIN>
Subject: ART-BOOLEAN default value incorrectly computed
To: x.Gyro at MIT-OZ, bug-lispm at MIT-OZ
cc: dcp at SCRC-QUABBIN
In-Reply-To: The message of 4 Oct 84 02:15-EDT from Scott W. Layson <x.Gyro at MIT-OZ>
Supersedes: <841004142447.7.SWM@THAMES.SCRC.Symbolics>
Message-ID: <841004143512.8.SWM@THAMES.SCRC.Symbolics>

    Date: Thursday, 4 October 1984, 02:15-EDT
    From: Scott W. Layson <x.Gyro at MIT-OZ>

    [This message was sent once but never made it to SCRC, so I'm sending it
    again -- OZ people please bear with me.]

    In Symbolics 3600 Release 5.2, on Lisp Machine Robot-4:

    I have found three functions in which the expression for the default
    value of an array element computes the wrong value for ART-BOOLEAN
    arrays (i.e., T instead of NIL): ADJUST-ARRAY-SIZE, COPY-ARRAY-CONTENTS,
    and COPY-ARRAY-CONTENTS-AND-LEADER.  ADJUST-ARRAY-SIZE, for example,
    uses the expression

      (IF (NULL (ARRAY-BITS-PER-ELEMENT TYPE)) NIL 0)

    The problem is that (ARRAY-BITS-PER-ELEMENT ART-BOOLEAN) => 1, of
    course, so this expression returns 0, which of course turns into T when
    stored into the array.  COPY-ARRAY-CONTENTS and friend use a slightly
    different expression with the same bug.  There are probably more
    instances of this bug scattered around the system, too (though
    MAKE-ARRAY works correctly).

I don't recall if there was a function called ARRAY-NULL-ELEMENT in 5.2
or not, but COPY-ARRAY-CONTENTS[-AND-LEADER] both use it.  I made a
similar change to ADJUST-ARRAY-SIZE.

Actually, says DCP, because of the way A-A-S fills the array, the old
code in that function appears to be correct, so I removed the change.
 4-Oct-84 16:45:46-EDT,1954;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 4 Oct 84 16:42-EDT
Received: from SCRC-CONCORD by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 103769; Thu 4-Oct-84 16:03:37-EDT
Date: Thursday, 4 October 1984, 16:03-EDT
From: Bernard S. Greenberg <BSG at SCRC-TENEX>
Subject: Byte size, or the Battle of Little Bigna continued
To: SR.EHPYC at MIT-SPEECH
cc: BUG-LISPM at MIT-OZ, Hornig at SCRC-STONY-BROOK
In-Reply-To: <SR.EHPYC.12052773838.BABYL@MIT-SPEECH>
Supersedes: <841004160304.7.BSG@CONCORD.SCRC.Symbolics>
Message-ID: <841004160345.8.BSG@CONCORD.SCRC.Symbolics>

    Date: 4 Oct 1984  12:24 EDT (Thu)
    From: Scott Cyphers <SR.EHPYC@MIT-SPEECH>

	Date: Thursday, 4 October 1984, 09:16-EDT
	From: Bernard S. Greenberg <BSG at SCRC-TENEX>
	To:   Hornig at SCRC-STONY-BROOK, sr.ehpyc, BUG-LISPM at MIT-OZ
	Re:   Byte size
	The release 6 file protocol doesn't support it, either.
	Lack of interest is only one issue.
	Another good issue is what you get when you TYI from a 32-bit-byte stream.
	A bignum?  A negative number?  What do you TYO?  Does it cons and require
	bigna?  And so forth.

    What's wrong with an integer?  It's 32 bits and it's a much more
    intuitive way to do
    (send stream :tyo (ldb (byte 16. 0.)))
    (send stream :tyo (ldb (byte 16. 16.)))
Well, and integer, when bit 31 is on, means a bignum.  You can't
output negative numbers to a stream.  32-bit files might suit you
just dandy if you are really saving a core-dump from a 360 or
whatever, but (this herring may admittedly blush shades of red to your
application) most requests around here for 32-bit I/O have been
from people having ART-Q arrays full of fixna, which are
not 0x<2^32, but -2^32x<2^32, and such numbers cannot be
conveyed in 32-bit I/O.  32-bit numbers are not particularly
convenient on the 3600.   Does your application in fact deal with
immediate fixna, or numbers really in the range 0x<2^32?
 4-Oct-84 17:02:31-EDT,2469;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 4 Oct 84 17:01-EDT
Date: 4 Oct 1984  17:04 EDT (Thu)
Message-ID: <SR.EHPYC.12052824934.BABYL@MIT-SPEECH>
From: Scott Cyphers <SR.EHPYC@MIT-SPEECH>
To:   "Bernard S. Greenberg" <BSG@SCRC-TENEX>
Cc:   BUG-LISPM@MIT-OZ, Hornig@SCRC-STONY-BROOK
Subject: Byte size, or the Battle of Little Bigna continued
In-reply-to: Msg of 4 Oct 1984 16:03-EDT from Bernard S. Greenberg <BSG at SCRC-TENEX>

    Date: Thursday, 4 October 1984, 16:03-EDT
    From: Bernard S. Greenberg <BSG at SCRC-TENEX>
    To:   SR.EHPYC
    cc:   BUG-LISPM at MIT-OZ, Hornig at SCRC-STONY-BROOK
    Re:   Byte size, or the Battle of Little Bigna continued
    Supersedes: <841004160304.7.BSG@CONCORD.SCRC.Symbolics>

        Date: 4 Oct 1984  12:24 EDT (Thu)
        From: Scott Cyphers <SR.EHPYC@MIT-SPEECH>

    	Date: Thursday, 4 October 1984, 09:16-EDT
    	From: Bernard S. Greenberg <BSG at SCRC-TENEX>
    	To:   Hornig at SCRC-STONY-BROOK, sr.ehpyc, BUG-LISPM at MIT-OZ
    	Re:   Byte size
    	The release 6 file protocol doesn't support it, either.
    	Lack of interest is only one issue.
    	Another good issue is what you get when you TYI from a 32-bit-byte stream.
    	A bignum?  A negative number?  What do you TYO?  Does it cons and require
    	bigna?  And so forth.

        What's wrong with an integer?  It's 32 bits and it's a much more
        intuitive way to do
        (send stream :tyo (ldb (byte 16. 0.)))
        (send stream :tyo (ldb (byte 16. 16.)))
    Well, and integer, when bit 31 is on, means a bignum.  You can't
    output negative numbers to a stream.  32-bit files might suit you
    just dandy if you are really saving a core-dump from a 360 or
    whatever, but (this herring may admittedly blush shades of red to your
    application) most requests around here for 32-bit I/O have been
    from people having ART-Q arrays full of fixna, which are
    not 0x<2^32, but -2^32x<2^32, and such numbers cannot be
    conveyed in 32-bit I/O.  32-bit numbers are not particularly
    convenient on the 3600.   Does your application in fact deal with
    immediate fixna, or numbers really in the range 0x<2^32?

Actually, they're 'SI:%FIXNUMs of flonums, which fit in the range,
although your points are quite valid.  If it was just a matter of
changing some 16s to be 32s I thought it might be a reasonable and
simple thing to do.  Thanks for the information.
 4-Oct-84 18:24:39-EDT,969;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 4 Oct 84 18:24-EDT
Date: Thursday, 4 October 1984, 18:19-EDT
From: Kent M Pitman <kmp at MIT-MC>
Subject: Having to type c-U before every m-Q in some files
To: BUG-LISPM at OZ

In Symbolics 3600 Release 4.5 on Lisp Machine Bing Crosby:

It seems to me that the c-U argument to m-Q has to be repeated
unnecessarily many times. It seems to me that on a per-buffer basis, I
either always want c-U m-Q or I want normal m-Q and that extremely
rarely is it a local decision within a buffer. Shouldn't it be possible
to have a buffer minor mode which specified that the buffer was to be
treated as either filled or adjusted?  That way, if I had an attribute
list like
 -*- Mode:Text; Adjust:Yes -*-
and I did m-Q, it would automatically assume I meant adjust (and a c-U
argument could complement the default behavior). Auto Fill Mode could
even look at this and do realtime adjustment instead of filling.
-kmp
 4-Oct-84 19:59:00-EDT,573;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 4 Oct 84 19:57-EDT
Received: from SCRC-NEPONSET by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 88619; Thu 4-Oct-84 19:54:12-EDT
Date: Thursday, 4 October 1984, 19:54-EDT
From: David C. Plummer <DCP at SCRC-TENEX>
Subject: Recording Stream/Keyboard Macro bug
To: TIM at MIT-MC, BUG-LispM at MIT-OZ
Message-ID: <841004195453.5.DCP@NEPONSET.SCRC.Symbolics>

    Date: Saturday, 21 July 1984, 12:21-EDT
    From:  <TIM at MIT-MC>

    In ZWEI in Release 5.1, Experimental MIT 1.4, FEP 18

    One would hope that
 4-Oct-84 20:14:00-EDT,1246;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 4 Oct 84 20:13-EDT
Received: from SCRC-NEPONSET by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 88619; Thu 4-Oct-84 19:54:12-EDT
Date: Thursday, 4 October 1984, 19:54-EDT
From: David C. Plummer <DCP at SCRC-TENEX>
Subject: Recording Stream/Keyboard Macro bug
To: TIM at MIT-MC, BUG-LispM at MIT-OZ
Message-ID: <841004195453.5.DCP@NEPONSET.SCRC.Symbolics>

    Date: Saturday, 21 July 1984, 12:21-EDT
    From:  <TIM at MIT-MC>

    In ZWEI in Release 5.1, Experimental MIT 1.4, FEP 18

    One would hope that it would be possible to define a keyboard macro that,
    for instance, did the following (contrived example) "without a hitch:"

      m-X Lisp Mode
      Tab
      m-X Text Mode

    Unfortunately, mode switching commands insist on asking the user if the
    buffer's attribute list should be updated, so he or she has to answer two
    questions each time the macro is executed.  
Personally, I do 
    (login-forms
	(setq zwei:*set-attribute-updates-list* nil)		;zwei doesn't do it right
	)
in my init file (because Zwei NEVER does it right for me).  This doesn't
address your bug (therefore I removed the In-Reply-To: field), but it
may come in handy.
 4-Oct-84 20:14:29-EDT,2895;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 4 Oct 84 20:14-EDT
Received: from SCRC-NEPONSET by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 88624; Thu 4-Oct-84 20:12:52-EDT
Date: Thursday, 4 October 1984, 20:13-EDT
From: David C. Plummer <DCP at SCRC-TENEX>
Subject: ART-BOOLEAN default value incorrectly computed
To: Scott McKay <SWM at SCRC-QUABBIN>, x.Gyro at MIT-OZ,
    bug-lispm at MIT-OZ
cc: dcp at SCRC-QUABBIN
In-Reply-To: <841004143512.8.SWM@THAMES.SCRC.Symbolics>
Message-ID: <841004201332.7.DCP@NEPONSET.SCRC.Symbolics>

    Date: Thursday, 4 October 1984, 14:35-EDT
    From: Scott McKay <SWM at SCRC-QUABBIN>

	Date: Thursday, 4 October 1984, 02:15-EDT
	From: Scott W. Layson <x.Gyro at MIT-OZ>

	[This message was sent once but never made it to SCRC, so I'm sending it
	again -- OZ people please bear with me.]

	In Symbolics 3600 Release 5.2, on Lisp Machine Robot-4:

	I have found three functions in which the expression for the default
	value of an array element computes the wrong value for ART-BOOLEAN
	arrays (i.e., T instead of NIL): ADJUST-ARRAY-SIZE, COPY-ARRAY-CONTENTS,
	and COPY-ARRAY-CONTENTS-AND-LEADER.  ADJUST-ARRAY-SIZE, for example,
	uses the expression

	  (IF (NULL (ARRAY-BITS-PER-ELEMENT TYPE)) NIL 0)

	The problem is that (ARRAY-BITS-PER-ELEMENT ART-BOOLEAN) => 1, of
	course, so this expression returns 0, which of course turns into T when
	stored into the array.  COPY-ARRAY-CONTENTS and friend use a slightly
	different expression with the same bug.  There are probably more
	instances of this bug scattered around the system, too (though
	MAKE-ARRAY works correctly).

    I don't recall if there was a function called ARRAY-NULL-ELEMENT in 5.2
    or not, but COPY-ARRAY-CONTENTS[-AND-LEADER] both use it.  I made a
    similar change to ADJUST-ARRAY-SIZE.

    Actually, says DCP, because of the way A-A-S fills the array, the old
    code in that function appears to be correct, so I removed the change.

A little more information.  COPY-ARRAY-CONTENTS-AND-LEADER deals with
array elements, and therefore must use the correct data type when
filling in the array.  The data for this comes from ARRAY-NULL-ELEMENT.
ADJUST-ARRAY-SIZE, on the other hand, does not deal with array elements,
but deals with memory (it is using %BLOCK-STORE-CDR-AND-CONTENTS).
Things which do this must keep in mind what RAW BITS they are tossing in
the memory.  Tossing in a NIL for an art-boolean would result in an
array, most of whose new elements were NIL, but some portion which
can be determined by (%pointer nil), are T.

Thanks for being paranoid.  I looked at all three functions.
ADJUST-ARRAY-SIZE was still confused.  It should be
	(IF (NULL (ARRAY-BITS-PER-ELEMENT TYPE))
	    (ARRAY-NULL-ELEMENT TYPE)
	    0)
not because of ART-BOOLEAN but because of ART-CHAR-Q-STRING.  I fixed
the source.
 4-Oct-84 20:19:50-EDT,2106;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 4 Oct 84 20:19-EDT
Received: from SCRC-NEPONSET by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 88622; Thu 4-Oct-84 20:02:06-EDT
Date: Thursday, 4 October 1984, 20:02-EDT
From: David C. Plummer <DCP at SCRC-TENEX>
Subject: Byte size
To: Scott Cyphers <SR.EHPYC at MIT-SPEECH>,
    Bernard S. Greenberg <BSG at SCRC-TENEX>
cc: BUG-LISPM at MIT-OZ, Hornig at SCRC-STONY-BROOK
In-Reply-To: <SR.EHPYC.12052773838.BABYL@MIT-SPEECH>
References: The message of 3 Oct 84 22:44-EDT from Scott Cyphers <sr.ehpyc at MIT-SPEECH>,
            <841004090331.7.HORNIG@PEACE.SCRC.Symbolics>,
            <841004091611.6.BSG@CONCORD.SCRC.Symbolics>,
            <SR.EHPYC.12052773838.BABYL@MIT-SPEECH>,
            <841004143204.7.CASSELS@CUYAHOGA.SCRC.Symbolics>,
            <841004160345.8.BSG@CONCORD.SCRC.Symbolics>
Message-ID: <841004200244.6.DCP@NEPONSET.SCRC.Symbolics>

    Date: 4 Oct 1984  12:24 EDT (Thu)
    From: Scott Cyphers <SR.EHPYC@MIT-SPEECH>

	Another good issue is what you get when you TYI from a 32-bit-byte stream.
	A bignum?  A negative number?  What do you TYO?  Does it cons and require
	bigna?  And so forth.

    What's wrong with an integer?  It's 32 bits and it's a much more
    intuitive way to do
    (send stream :tyo (ldb (byte 16. 0.)))
    (send stream :tyo (ldb (byte 16. 16.)))

    Is it more than a matter of changing the 16s in the code to 32s?  I
    looked a little at it (but not too closely) and it looked like that
    was what was the major part of it, so I thought maybe it was a Cadr
    holdover.

Executive summary: Suppose the architecture had 29 bit fixnums.  Doing a
:TYI of 32 bits whose most significant bit is on and all the others are
off would return a positive integer (bignum on the architecture).
Right?  Suppose the architecture has 36 bit fixnums.  The same number
still returns a positive integer.  Right?  namely 00001000....  Why, if
the architecture happens to have 32 bits, does it make the universe fold
over backwards and return si:*setz*, a NEGATIVE number?
 5-Oct-84 03:03:11-EDT,1223;000000000000
Received: from MIT-JANIS by MIT-OZ via Chaosnet; 5 Oct 84 03:02-EDT
Date: Friday, 5 October 1984, 03:01-EDT
From: JCMA@MIT-OZ
Subject: Having to type c-U before every m-Q in some files
To: kmp@MIT-MC
Cc: BUG-LISPM@MIT-OZ
In-reply-to: The message of 4 Oct 84 18:19-EDT from Kent M Pitman <kmp at MIT-MC>

    Date: Thursday, 4 October 1984, 18:19-EDT
    From: Kent M Pitman <kmp at MIT-MC>

    In Symbolics 3600 Release 4.5 on Lisp Machine Bing Crosby:

    It seems to me that the c-U argument to m-Q has to be repeated
    unnecessarily many times. It seems to me that on a per-buffer basis, I
    either always want c-U m-Q or I want normal m-Q and that extremely
    rarely is it a local decision within a buffer. Shouldn't it be possible
    to have a buffer minor mode which specified that the buffer was to be
    treated as either filled or adjusted?  That way, if I had an attribute
    list like
     -*- Mode:Text; Adjust:Yes -*-
    and I did m-Q, it would automatically assume I meant adjust (and a c-U
    argument could complement the default behavior). Auto Fill Mode could
    even look at this and do realtime adjustment instead of filling.
    -kmp

What about autofill mode?
 5-Oct-84 03:27:11-EDT,768;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 5 Oct 84 03:26-EDT
Date: Friday, 5 October 1984, 03:26-EDT
From: Steve Strassmann <STRAZ at MIT-OZ>
Subject: WITHOUT-INTERRUPTS doesn't behave as promised.
To: BUG-LISPM at MIT-OZ

In Release 5.1, Experimental MIT 1.4, FEP 22, on Lisp Machine Jim Morrison (3600):

Try this:

(WITHOUT-INTERRUPTS
 (PROCESS-WAIT "FOO" #'TV:KEY-STATE ':MODE-LOCK))

The above code goes into the wait state, yet the mouse process
still runs, the keyboard is still being polled (c-abort quits), etc.

I need to atomically execute several small operations in a window 
and shelter my state from spurious asynchronous computation generated by
:MOUSE-MOVES messages sent to it.

 If WITHOUT-INTERRUPTS won't work, what will?
 5-Oct-84 08:55:17-EDT,1241;000000000000
Received: from SCRC-RIVERSIDE by MIT-OZ via Chaosnet; 5 Oct 84 08:55-EDT
Received: from SCRC-CONCORD by SCRC-RIVERSIDE via CHAOS with CHAOS-MAIL id 23647; Fri 5-Oct-84 08:53:30-EDT
Date: Friday, 5 October 1984, 08:53-EDT
From: Bernard S. Greenberg <BSG at SCRC-TENEX>
Subject: Byte size
To: DCP at SCRC-TENEX, SR.EHPYC at MIT-SPEECH
cc: BUG-LISPM at MIT-OZ, Hornig at SCRC-STONY-BROOK
In-Reply-To: <841004200244.6.DCP@NEPONSET.SCRC.Symbolics>
Message-ID: <841005085358.3.BSG@CONCORD.SCRC.Symbolics>

    Date: Thursday, 4 October 1984, 20:02-EDT
    From: David C. Plummer <DCP at SCRC-TENEX>

    Executive summary: Suppose the architecture had 29 bit fixnums.  Doing a
    :TYI of 32 bits whose most significant bit is on and all the others are
    off would return a positive integer (bignum on the architecture).
    Right?  Suppose the architecture has 36 bit fixnums.  The same number
    still returns a positive integer.  Right?  namely 00001000....  Why, if
    the architecture happens to have 32 bits, does it make the universe fold
    over backwards and return si:*setz*, a NEGATIVE number?
Executive summary:  You didn't really want 32 bit integers, you wanted
3600-hardware-specific-single-word fixna.  
 5-Oct-84 11:04:35-EDT,1461;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 5 Oct 84 11:03-EDT
Received: from SCRC-THAMES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 104170; Fri 5-Oct-84 10:30:10-EDT
Date: Friday, 5 October 1984, 10:30-EDT
From: Scott McKay <SWM at SCRC-QUABBIN>
Subject: WITHOUT-INTERRUPTS doesn't behave as promised.
To: STRAZ at MIT-OZ, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 5 Oct 84 03:26-EDT from Steve Strassmann <STRAZ at MIT-OZ>
Message-ID: <841005103035.5.SWM@THAMES.SCRC.Symbolics>

    Date: Friday, 5 October 1984, 03:26-EDT
    From: Steve Strassmann <STRAZ at MIT-OZ>

    In Release 5.1, Experimental MIT 1.4, FEP 22, on Lisp Machine Jim Morrison (3600):

    Try this:

    (WITHOUT-INTERRUPTS
     (PROCESS-WAIT "FOO" #'TV:KEY-STATE ':MODE-LOCK))

    The above code goes into the wait state, yet the mouse process
    still runs, the keyboard is still being polled (c-abort quits), etc.

    I need to atomically execute several small operations in a window 
    and shelter my state from spurious asynchronous computation generated by
    :MOUSE-MOVES messages sent to it.

     If WITHOUT-INTERRUPTS won't work, what will?

What is PROCESS-WAIT supposed to mean when interrupts are turned off?
WITHOUT-INTERRUPTS is behaving as it should, but the PROCESS-WAIT is
turning interrupts back on.  If you really need to do this, you should
probably loop on TV:KEY-STATE, but it looks dangerous to me...
 5-Oct-84 12:56:42-EDT,4771;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 5 Oct 84 12:56-EDT
Received: from SCRC-NEPONSET by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 88856; Fri 5-Oct-84 12:40:50-EDT
Date: Friday, 5 October 1984, 12:40-EDT
From: David C. Plummer <DCP at SCRC-TENEX>
Subject: WITHOUT-INTERRUPTS doesn't behave as promised.
To: Steve Strassmann <STRAZ at MIT-OZ>
cc: Scott McKay <SWM at SCRC-QUABBIN>, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 5 Oct 84 03:26-EDT from Steve Strassmann <STRAZ at MIT-OZ>,
             <841005103035.5.SWM@THAMES.SCRC.Symbolics>
Message-ID: <841005124040.3.DCP@NEPONSET.SCRC.Symbolics>

    Date: Friday, 5 October 1984, 03:26-EDT
    From: Steve Strassmann <STRAZ at MIT-OZ>

    In Release 5.1, Experimental MIT 1.4, FEP 22, on Lisp Machine Jim Morrison (3600):

    Try this:

    (WITHOUT-INTERRUPTS
     (PROCESS-WAIT "FOO" #'TV:KEY-STATE ':MODE-LOCK))

    The above code goes into the wait state, yet the mouse process
    still runs, the keyboard is still being polled (c-abort quits), etc.

    I need to atomically execute several small operations in a window 
    and shelter my state from spurious asynchronous computation generated by
    :MOUSE-MOVES messages sent to it.

     If WITHOUT-INTERRUPTS won't work, what will?
		     ------------------------------
    Date: Friday, 5 October 1984, 10:30-EDT
    From: Scott McKay <SWM at SCRC-QUABBIN>

    What is PROCESS-WAIT supposed to mean when interrupts are turned off?
    WITHOUT-INTERRUPTS is behaving as it should, but the PROCESS-WAIT is
    turning interrupts back on.  If you really need to do this, you should
    probably loop on TV:KEY-STATE, but it looks dangerous to me...


There are deep philosophical disagreements of what process-wait means
inside a WITHOUT-INTERRUPTS.  One group (not me) contents it should be
illegal.  Another group (hopefully not me) uses it without knowing why,
or uses it by accident.  And then there is another group (me) that uses
this FOR A PURPOSE.

I know I'm adding fuel to the fire, but this is food for thought.
People who already know the issues I'm about to discuss hopefully won't
respond because we've been though it already.  The rest of the people
should think about it and the practical implications.

I have to assume process waiting within a without-interrupts is valid.
The people who think it is an error can easily, and validly because of
their beliefs, say that all these examples are bankrupt.
	(without-interrupts (process-sleep 10-hours))
Does this loop for 10-hours, or does it let other processes run for 10
hours before this wakes up?  Suppose instead it were
	(without-interrupts
	  (loop doing <do-some-things-without-interrupts>
		      (process-sleep 10-hours)))
What is the intent?  I see this as wishing to execute some critical code
without interrupts at 10 hour intervals.  So why can't it be written
	(loop doing
	  (without-interrupts
	    <some-things>)
	  (process-sleep 10-hours))
Well, suppose the without-interrupts is in 5 functions up the stack.
(This is where the illegal proponents have a good shot).

Now consider your application, which is a practical problem.  Exactly
what does the system need to do to effect your wait function:
    (WITHOUT-INTERRUPTS
     (PROCESS-WAIT "FOO" #'TV:KEY-STATE ':MODE-LOCK))
The answer is that the keyboard process has to run.  WITHOUT-INTERRUPTS
is a misnomer and should be called WITHOUT-SCHEDULING.  Well, if you
absolutely didn't allow scheduling the keyboard process would never
process your input and cause your wait function to return non-NIL.

People could say there should be a WITH-INTERRUPTS (should really be
called WITH-SCHEDULING) which >>BLINDLY<< turns scheduling back on.  (I
say blindly because the window system does this, when what it should
really be doing is restoring the flag to the value before the
without-interrupts, which may itself have been in a without-interrupts).

My style is to be aware of what is going on when I am inside a
WITHOUT-INTERRUPTS.  You need to know the contract of all the functions
that are called within the without-interrupts.  If something in the
transtive closure of called functions can process wait, you need to be
sure that either things are in a consistent state if an abort happens,
or there is an unwind-protect to clean things up.  Additionally, the
unwind-protect needs to be careful of the same things, since it is
possible to process-wait inside an unwind-protect that is executing
without-interrupts, so ther may need to be another unwind-protect in the
cleanup-forms.  

In other words, if you expect a certain state, you better use the right
forms to enforce that state.

Enough said.
 5-Oct-84 14:43:50-EDT,1914;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 5 Oct 84 14:42-EDT
Received: from SCRC-BIG by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 104361; Fri 5-Oct-84 14:28:36-EDT
Date: Fri, 5 Oct 84 14:28 EDT
From: Dan Gerson <DanG@SCRC-RIVERSIDE.ARPA>
Subject: Namespaces, a priority issue
To: KMP@MIT-MC.ARPA
cc: DPH@MIT-MC.ARPA, CStacy@MIT-MC.ARPA, Bug-Lispm@MIT-MC.ARPA,
    Hewitt%MIT-OZ@SCRC-RIVERSIDE.ARPA, Gavan%MIT-OZ@SCRC-RIVERSIDE.ARPA,
    JCMa%MIT-OZ@SCRC-RIVERSIDE.ARPA, DanG@SCRC-RIVERSIDE.ARPA,
    JLK@SCRC-RIVERSIDE.ARPA, Lang@SCRC-RIVERSIDE.ARPA,
    DCP@SCRC-RIVERSIDE.ARPA, HOSS@SCRC-RIVERSIDE.ARPA,
    Feinberg@SCRC-RIVERSIDE.ARPA, CEC@SCRC-RIVERSIDE.ARPA
Message-ID: <841005142808.7.DANG@BIG.SCRC.Symbolics>

The problem with namespaces is a high-priority issue.  KMP was correct
that low-priority disposition in the response to his namespace
suggestion was specific to the particulars of the suggestion.  These
dispositions are part of our internal bug-tracking mechanism, and should
not be seen by customers.  That particular disposition does not mean
that the overall problem is not important.

Instead of lingering on this issue much more, I will outline the actions
which we plan on taking to solve your immediate problem:

    1)	We will be making a fix to this problem in the 5.2 world.  As
soon as we have tested this fix here at Symbolics, we will bring a copy
of the fix over to MIT.  Neal Feinberg (Feinberg@SCRC-TENEX) will be
coordinating this.  Fixing your problem is of very high priority.

    2)	We will specifically test the next release of the system to make
sure that it does not have a similar problem.

    3)	We are coming up with a plan on replacing LM-15 with a 36xx
machine.  We pretty much have to do this before we can ship release 6.0
to MIT, and we are trying to do it as soon as we can.

Let me know if this is not satisfactory.
 6-Oct-84 00:42:58-EDT,3898;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 6 Oct 84 00:42-EDT
Date: Saturday, 6 October 1984, 00:34-EDT
From: Scott Cyphers <sr.ehpyc at MIT-SPEECH>
Subject: GC/Network lossage
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 Release 5.2, ZOO 3.0, Spire-Macros 3.0, Compute 2.0,
Attribute 3.0, Audio 2.1, Speech-Attributes 2.3, Display 3.5,
Speech-Layouts 4.7, Versatec 3.0, Prtout 2.0, Spire 14.0, SpireX 11.1,
ZOO-SPIRE 1.0, FEP 22, on Lisp Machine Smokey:

The reason this connection is in the bad chaos state is because I had
said (si:gc-on).  A flip started while the file names were being
received, and the flip locked out everything else enough that Goldy
concluded that Smokey was dead.  This seems to happen quite repeatedly
on this machine (which, if it makes a difference, has one of those
little disks on it).


>>Error: Attempt to get a packet from CHAOS Connection for O6950 to GOLDY, which stopped responding.
While in the function CHAOS:BAD-CHAOS-CONNECTION-STATE  CHAOS:GET-NEXT-PKT  (:DEFUN-METHOD FS:FILE-NEXT-READ-PKT)

CHAOS:BAD-CHAOS-CONNECTION-STATE:  (P.C. = 20)
   Arg 0 (CONN): #<CHAOS Connection for O6950 to GOLDY 37356677>
   Arg 1 (ATTEMPT): "get a packet from"
   Local 2 (STATE): CHAOS:HOST-DOWN-STATE
   Local 3 (PKT): NIL

CHAOS:GET-NEXT-PKT:  (P.C. = 46)
   Arg 0 (CONN): #<CHAOS Connection for O6950 to GOLDY 37356677>
   Arg 1 (NO-HANG-P): NIL
   --Defaulted args:--
   Arg 2 (STREAM): NIL

(:DEFUN-METHOD FS:FILE-NEXT-READ-PKT):  (P.C. = 21)
   Arg 0 (SELF): #<FILE-DIRECTORY-STREAM "GOLDY:>**>*.utt" 13040000>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:FILE-INPUT-STREAM-MIXIN -- 5. IV's, 1. FL's 57370327>
   Arg 2 (NO-HANG-P): NIL
   Arg 3 (FOR-SYNC-MARK-P): NIL

(:METHOD FS:FILE-INPUT-STREAM-MIXIN :GET-NEXT-INPUT-PKT):  (P.C. = 17)
   Arg 0 (SELF): #<FILE-DIRECTORY-STREAM "GOLDY:>**>*.utt" 13040000>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:FILE-INPUT-STREAM-MIXIN -- 5. IV's, 1. FL's 57370327>
   Arg 2 (OPERATION): :GET-NEXT-INPUT-PKT
   Arg 3 (NO-HANG-P): NIL

(:METHOD CHAOS:CHARACTER-INPUT-STREAM-MIXIN :NEXT-INPUT-BUFFER):  (P.C. = 6)
   Arg 0 (SELF): #<FILE-DIRECTORY-STREAM "GOLDY:>**>*.utt" 13040000>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor CHAOS:CHARACTER-INPUT-STREAM-MIXIN -- 1. IV's, 0. FL's 57370422>
   Arg 2 (OPERATION): :NEXT-INPUT-BUFFER
   Arg 3 (NO-HANG-P): NIL

(:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :SETUP-NEXT-INPUT-BUFFER):  (P.C. = 11)
   Arg 0 (SELF): #<FILE-DIRECTORY-STREAM "GOLDY:>**>*.utt" 13040000>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:BASIC-BUFFERED-INPUT-STREAM -- 3. IV's, 0. FL's 57370321>
   Arg 2 (OPERATION): :SETUP-NEXT-INPUT-BUFFER
   --Defaulted args:--
   Arg 3 (NO-HANG-P): NIL

(:METHOD FS:FILE-INPUT-CHARACTER-STREAM :COMBINED :SETUP-NEXT-INPUT-BUFFER):  (P.C. = 10)
   Arg 0 (SELF): #<FILE-DIRECTORY-STREAM "GOLDY:>**>*.utt" 13040000>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:FILE-INPUT-CHARACTER-STREAM -- 1. IV's, 7. FL's 57370346>
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

(:METHOD SI:BUFFERED-LINE-INPUT-STREAM :LINE-IN):  (P.C. = 16)
   Arg 0 (SELF): #<FILE-DIRECTORY-STREAM "GOLDY:>**>*.utt" 13040000>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:BUFFERED-LINE-INPUT-STREAM -- 3. IV's, 0. FL's 57370434>
   Arg 2 (OPERATION): :LINE-IN
   --Defaulted args:--
   Arg 3 (LEADER): NIL

Rest of stack:
FS:READ-DIRECTORY-STREAM-ENTRY:  (P.C. = 40)
(:METHOD FS:DIRECTORY-STREAM-FILE-ACCESS-PATH-MIXIN :DIRECTORY-LIST):  (P.C. = 40)
(:METHOD FS:ACTIVE-PATHNAME-MIXIN :DIRECTORY-LIST):  (P.C. = 12)
FS:DIRECTORY-LIST:  (P.C. = 111)
SPIRE:GET-ALL-REAL-UTTERANCES:  (P.C. = 25)  (from GOLDY:>p>cypher>garu)
SI:*EVAL:  (P.C. = 370)
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 200)
SI:LISP-COMMAND-LOOP:  (P.C. = 115)
SI:LISP-TOP-LEVEL1:  (P.C. = 22)
SI:LISP-TOP-LEVEL:  (P.C. = 7)
 6-Oct-84 09:56:51-EDT,1832;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 6 Oct 84 09:56-EDT
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 104712; Sat 6-Oct-84 09:54:43-EDT
Date: Saturday, 6 October 1984, 09:54-EDT
From: David C. Plummer <DCP at SCRC-TENEX>
Subject: GC/Network lossage
To: Scott Cyphers <sr.ehpyc at MIT-SPEECH>, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 6 Oct 84 00:34-EDT from Scott Cyphers <sr.ehpyc at MIT-SPEECH>
Message-ID: <841006095436.3.DCP@NEPONSET.SCRC.Symbolics>

    Date: Saturday, 6 October 1984, 00:34-EDT
    From: Scott Cyphers <sr.ehpyc at MIT-SPEECH>

    In Symbolics 3600 Release 5.2, ZOO 3.0, Spire-Macros 3.0, Compute 2.0,
    Attribute 3.0, Audio 2.1, Speech-Attributes 2.3, Display 3.5,
    Speech-Layouts 4.7, Versatec 3.0, Prtout 2.0, Spire 14.0, SpireX 11.1,
    ZOO-SPIRE 1.0, FEP 22, on Lisp Machine Smokey:

    The reason this connection is in the bad chaos state is because I had
    said (si:gc-on).  A flip started while the file names were being
    received, and the flip locked out everything else enough that Goldy
    concluded that Smokey was dead.  This seems to happen quite repeatedly
    on this machine (which, if it makes a difference, has one of those
    little disks on it).

This is an inherent problem with incremental GCs, isn't it?  Once you
decide to flip, you have to transport an oldspace object if you trip
over it.  The unfortunate part is that you do a lot of tripping
initially because the scheduler and all running processes are going to
try to use their data structures.

    >>Error: Attempt to get a packet from CHAOS Connection for O6950 to GOLDY, which stopped responding.
    While in the function CHAOS:BAD-CHAOS-CONNECTION-STATE  CHAOS:GET-NEXT-PKT  (:DEFUN-METHOD FS:FILE-NEXT-READ-PKT)

 6-Oct-84 14:24:46-EDT,1816;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 6 Oct 84 14:24-EDT
Date: 6 Oct 1984  14:27 EDT (Sat)
Message-ID: <SR.EHPYC.12053320630.BABYL@MIT-SPEECH>
From: Scott Cyphers <SR.EHPYC@MIT-SPEECH>
To:   "David C. Plummer" <DCP@SCRC-TENEX>
Cc:   BUG-LISPM@MIT-OZ
Subject: GC/Network lossage
In-reply-to: Msg of 6 Oct 1984 09:54-EDT from David C. Plummer <DCP at SCRC-TENEX>

    Date: Saturday, 6 October 1984, 09:54-EDT
    From: David C. Plummer <DCP at SCRC-TENEX>
    To:   Scott Cyphers <sr.ehpyc>, BUG-LISPM at MIT-OZ
    Re:   GC/Network lossage

    This is an inherent problem with incremental GCs, isn't it?  Once you
    decide to flip, you have to transport an oldspace object if you trip
    over it.  The unfortunate part is that you do a lot of tripping
    initially because the scheduler and all running processes are going to
    try to use their data structures.

Even if it is inherent it is still a bug, and there should at least be
a statement in the GC documentation that says turning on the current
GC is not compatible with network connections.  Maybe I'm slow, but it
was only because I happened to walk in just when the GC was beginning
and notice that everything but the GC was dead that I figured out what
was going on.  After the initial comatose period (in a revised version
of the program that only had to get through the directory list without
dying) it seemed like the GC was doing the right thing.

Since you say it's only the scheduler and processes that are flipping
out in the beginning, it would seem like there ought to be some way to
explicitly copy them first, knowing that they cause performance
problems and are going to be copied anyways, so as to reduce the
paging overhead associated with randomly tripping over them by the
scheduler.
 6-Oct-84 16:52:45-EDT,3552;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 6 Oct 84 16:52-EDT
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 104768; Sat 6-Oct-84 16:15:01-EDT
Date: Saturday, 6 October 1984, 16:14-EDT
From: David C. Plummer <DCP at SCRC-TENEX>
Subject: GC/Network lossage
To: Scott Cyphers <SR.EHPYC at MIT-SPEECH>,
    David C. Plummer <DCP at SCRC-TENEX>
cc: BUG-LISPM at MIT-OZ
In-Reply-To: <SR.EHPYC.12053320630.BABYL@MIT-SPEECH>
Message-ID: <841006161451.0.DCP@NEPONSET.SCRC.Symbolics>

    Date: 6 Oct 1984  14:27 EDT (Sat)
    From: Scott Cyphers <SR.EHPYC@MIT-SPEECH>

	Date: Saturday, 6 October 1984, 09:54-EDT
	From: David C. Plummer <DCP at SCRC-TENEX>
	To:   Scott Cyphers <sr.ehpyc>, BUG-LISPM at MIT-OZ
	Re:   GC/Network lossage

	This is an inherent problem with incremental GCs, isn't it?  Once you
	decide to flip, you have to transport an oldspace object if you trip
	over it.  The unfortunate part is that you do a lot of tripping
	initially because the scheduler and all running processes are going to
	try to use their data structures.

    Even if it is inherent it is still a bug, and there should at least be
    a statement in the GC documentation that says turning on the current
    GC is not compatible with network connections.  Maybe I'm slow, but it
    was only because I happened to walk in just when the GC was beginning
    and notice that everything but the GC was dead that I figured out what
    was going on.  After the initial comatose period (in a revised version
    of the program that only had to get through the directory list without
    dying) it seemed like the GC was doing the right thing.

    Since you say it's only the scheduler and processes that are flipping
    out in the beginning, it would seem like there ought to be some way to
    explicitly copy them first, knowing that they cause performance
    problems and are going to be copied anyways, so as to reduce the
    paging overhead associated with randomly tripping over them by the
    scheduler.

Mumble.  A lot depends on your environment.  I have often flipped and
had my network connections stay intact.  I have also lost them.  The
ephemeral GC (that will be in Release 6) helps a bit because you have to
transport less data.  However, any time critical activity has the
potential to be fouled up by the GC.  It isn't as predictable as you
suggest.  The act of flipping is atomic.  I don't think it matters if
you try to guess what the user is going to trip over first because (a)
you could wind up spending time transporting that won't be tripped over
immediately and (b) you could miss some things.  Why not just let things
take their normal course?  It isn't just the scheduler and processes, it
is whatever they happen to touch that was in oldspace for however long
they get to run.  The scheduler (being without interrupts) has to
transport the scheduler's database (which isn't completely static).  The
network has to transport all of its databases.  If you have a program
that is touching some large, dynamic arrays, they are going to get
transported.  Additionally, since a moderate amount of time is likely
taken in page faults right after a flip, as soon as a transport is
finished the process will probably be descheduled, resulting in some
thrashing.

I hesitate to suggest heuristics to prepage, trip early, etc, because I
don't see how they are easily implemented and I'm not convinced they
solve the problem you are seeing.
 6-Oct-84 17:17:25-EDT,404;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 6 Oct 84 17:15-EDT
Date: Saturday, 6 October 1984, 17:07-EDT
From: David Chapman <Zvona at MIT-OZ>
Subject: better debugger c-E command
To: bug-lispm at MIT-OZ

If you are already inside ``the'' editor, it would be nice if you were
given a third choice: to create a new editor (or use some other existing
one, if the code doesn't already try that).
 6-Oct-84 17:27:22-EDT,871;000000000000
Received: from MIT-ELVIS by MIT-OZ via Chaosnet; 6 Oct 84 17:27-EDT
Date: Saturday, 6 October 1984, 17:21-EDT
From:  <ZVONA at MIT-OZ>
Subject: namespace cretinosity
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 Release 5.2, NS 19.70, FEP 18, on Lisp Machine Elvis Presley:

(print-notifications) =>
17:17 SCRC-RIVERSIDE is believed to be down or unavailable.;
Obsolete host information may be used.
17:15 Timeout while waiting for ARPANET|SCRC-RIVERSIDE.;
Obsolete host information may be used.

1).  I can't see why this machine should ever need to talk to SCRC-RIVERSIDE.  
2).  I can't see why there should be a host ARPANET|SCRC-RIVERSIDE.
     It's not on the arpanet, right? 
3).  Why did it take another two minutes trying to talk to
     SCRC-RIVERSIDE after it determined that ARPANET|SCRC-RIVERSIDE was
     down?  These are the same machine.
 6-Oct-84 19:48:44-EDT,2654;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 6 Oct 84 19:48-EDT
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 104819; Sat 6-Oct-84 19:48:57-EDT
Date: Saturday, 6 October 1984, 19:48-EDT
From: David C. Plummer <DCP at SCRC-TENEX>
Subject: Misleading error message from AS-2 into an indirect array.
To: "(probably) David C. Plummer" <DCP at SCRC-TENEX>,
    Alan Bawden <Alan at MIT-MC>, BUG-LISPM at MIT-OZ
In-Reply-To: <840806165213.2.NFEP@NEPONSET.SCRC.Symbolics>
References: The message of 13 Nov 4 22:30-EST from Alan Bawden <Alan at MIT-MC>,
            <840806165213.2.NFEP@NEPONSET.SCRC.Symbolics>,
            <840806165213.2.NFEP@NEPONSET.SCRC.Symbolics>
Disposition: IMPROVED
Message-ID: <841006194835.9.DCP@NEPONSET.SCRC.Symbolics>

    Date: Monday, 6 August 1984, 16:52-EDT
    From: "(probably) David C. Plummer" <DCP at SCRC-TENEX>

	Date: Sunday, 13 November 1904, 22:30-EST
	From: Alan Bawden <Alan at MIT-MC>

	In Release 5.1, Experimental MIT 1.5, FEP 18, on Lisp Machine Jimi Hendrix (3600):

	Huh?  I guess the fact that there are indirect arrays being used here
	explains the confusing error message.  It shouldn't be too much trouble for
	you to fix this to really explain the error.

	>>Trap: The subscripts given to the AS-2 instruction, 10 and 656, on #<ART-8B-114-710 3677415> were beyond the limits, 
		   114 by 710
	While in the function HACKS:MUGSHOT-READ  HACKS:ROGUES-GALLERY  SI:*EVAL

    In the development system, I get the same error.  There is some hair to
    get you the right error message for out of bounds on a 1d indirect
    array, e.g., 
	(aref (make-array 100 :displaced-to "alkdjf") 11)
    gives
	>>Trap: The subscript given to the AR-1 instruction, 11, on #<ART-Q-100 32732713> 
		was beyond the length, 1, of the part of this indirect array validly
		contained in "alkdjf", the array providing the actual storage.

    I'll file this to be worked on when I get a chance and have a fresh head
    to do it reasonably.

I rearranged the source a little so that the new error looks like this:
    (aref (make-array '(114 710)
		      :displaced-to (make-array '(4 5)))
	  10 656) 
gives
    >>Trap: The subscripts given to the AR-2 instruction, 10 and 656, on
	    #<ART-Q-114-710 65760702> was beyond the length, 24, of the part
	    of this indirect array validly contained in #<ART-Q-4-5
	    65760655>, the array providing the actual storage.
I didn't do anything profound.  If somebody can figure out a better
wording that explains what is going on in a reasonable way, I'll help
code it if necessary.
 7-Oct-84 03:18:41-EDT,1074;000000000000
Received: from MIT-MOON by MIT-OZ via Chaosnet; 7 Oct 84 03:18-EDT
Date: Sunday, 7 October 1984, 03:17-EDT
From: Steve Strassmann <STRAZ at MIT-OZ>
Subject: I'm losing with DEFSYSTEM
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 Release 5.2, FEP 18, on Lisp Machine Keith Moon:

I have a DEFSYSTEM defined in OZ:<STRAZ.ICON>DEFSYSTEM.LISP
and corresponding files defined in
 SYS:SITE;ICON.LDT and  SYS:SITE;ICON.SYD

When I do (MAKE-SYSTEM 'ICON ':COMPILE) what does this message mean?
I get it on all the files to be compiled:

	"Warnings for file OZ:PS:<STRAZ.ICON>BOX-BUTTONS
	 Warning (not associated with any definition)
	
	 Source file truename OZ:OZ:<STRAZ.ICON>BOX-BUTTONS.LISP.2 cannot be
	 translated to logical host ICON -- QFASL-SOURCE-FILE-UNIQUE-ID will be
	 omitted."
  
Yet, my virtual pathnames seem to have been defined all right.

=>(FS:PARSE-PATHNAME "ICON:ICON;BOX-BUTTONS") yields 
#<LOGICAL-PATHNAME "ICON: ICON; BOX-BUTTONS">
T
and 
=>(SEND * :TRANSLATED-PATHNAME) yields
#<TOPS20-PATHNAME "OZ:PS:<STRAZ.ICON>BOX-BUTTONS">
 7-Oct-84 04:50:11-EDT,446;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 7 Oct 84 04:49-EDT
Date: Sun, 7 Oct 84 04:47 EDT
From: JCMA%MIT-OZ@SCRC-RIVERSIDE.ARPA
Subject: New Fep Debugger Files Needed For V22 PROMs
To: BUG-LISPM@OZ@mc

In Symbolics 3600 Release 5.2, Experimental RELATUS 130.136, FEP 22, on Lisp Machine Buddy Holly:

We now have some V22 PROMs but I don't see any V-22-DEBUG.FLOD files around.
Could someone please transfer one over here? Thanks.
 7-Oct-84 13:14:01-EDT,1744;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 7 Oct 84 13:13-EDT
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 104905; Sun 7-Oct-84 13:14:33-EDT
Date: Sunday, 7 October 1984, 13:14-EDT
From: David C. Plummer <DCP at SCRC-TENEX>
Subject: I'm losing with DEFSYSTEM
To: Steve Strassmann <STRAZ at MIT-OZ>, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 7 Oct 84 03:17-EDT from Steve Strassmann <STRAZ at MIT-OZ>
Message-ID: <841007131404.6.DCP@NEPONSET.SCRC.Symbolics>
Fonts: CPTFONT, CPTFONTB

    Date: Sunday, 7 October 1984, 03:17-EDT
    From: Steve Strassmann <STRAZ at MIT-OZ>

    In Symbolics 3600 Release 5.2, FEP 18, on Lisp Machine Keith Moon:

    I have a DEFSYSTEM defined in OZ:<STRAZ.ICON>DEFSYSTEM.LISP
    and corresponding files defined in
     SYS:SITE;ICON.LDT and  SYS:SITE;ICON.SYD

    When I do (MAKE-SYSTEM 'ICON ':COMPILE) what does this message mean?
    I get it on all the files to be compiled:

	    "Warnings for file OZ:PS:<STRAZ.ICON>BOX-BUTTONS
	     Warning (not associated with any definition)
	
	     Source file 1truename OZ:OZ:<STRAZ.ICON>BOX-BUTTONS.LISP.20 cannot be
	     translated to logical host ICON -- QFASL-SOURCE-FILE-UNIQUE-ID will be
	     omitted."
  
    Yet, my virtual pathnames seem to have been defined all right.

    =>(FS:PARSE-PATHNAME "ICON:ICON;BOX-BUTTONS") yields 
    #<LOGICAL-PATHNAME "ICON: ICON; BOX-BUTTONS">
    T
    and 
    =>(SEND * :TRANSLATED-PATHNAME) yields
    1#<TOPS20-PATHNAME "OZ:PS:<STRAZ.ICON>BOX-BUTTONS">
0If you look closely, these aren't quite the same pathname.  If you
define your logical host to point to OZ:OZ: instead of OZ:PS: you will
probably have more luck.
 7-Oct-84 13:20:04-EDT,1396;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 7 Oct 84 13:19-EDT
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 104908; Sun 7-Oct-84 13:20:29-EDT
Date: Sunday, 7 October 1984, 13:19-EDT
From: David C. Plummer <DCP at SCRC-TENEX>
Subject: New Fep Debugger Files Needed For V22 PROMs
To: JCMA at MIT-OZ, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 7 Oct 84 04:47-EDT from JCMA at MIT-OZ
Message-ID: <841007131955.7.DCP@NEPONSET.SCRC.Symbolics>

    Date: Sun, 7 Oct 84 04:47 EDT
    From: JCMA%MIT-OZ@SCRC-RIVERSIDE.ARPA

    In Symbolics 3600 Release 5.2, Experimental RELATUS 130.136, FEP 22, on Lisp Machine Buddy Holly:

    We now have some V22 PROMs but I don't see any V-22-DEBUG.FLOD files around.
    Could someone please transfer one over here? Thanks.

What's this?  Also, the convention for the FEP: version is
V22-debug.flod, not V-22-debug.flod.

Will you please stop using illegal mail headers?

PIG:USRD$:[S.R5.L*]V*DEBUG.*;*
  
  268 blocks in the files listed
USRD$:[S.R5.LFEP]
      V17DEBUG.FLO;13   67                 07/10/84 13:19:46              [10,1]
      V18DEBUG.FLO;13   67                 07/10/84 13:19:40              [10,1]
      V22DEBUG.FLO;14   67                 07/10/84 13:19:31              [10,1]
      V24DEBUG.FLO;1   67                  09/10/84 13:48:06              [100,124]
 7-Oct-84 14:15:26-EDT,719;000000000000
Mail-From: STRAZ created at  7-Oct-84 14:15:08
Date: Sun, 7 Oct 1984  14:15 EDT
Message-ID: <STRAZ.12053580481.BABYL@MIT-OZ>
From: Steve Strassmann <STRAZ@MIT-OZ>
To:   "David C. Plummer" <DCP@SCRC-TENEX>
Cc:   BUG-LISPM@MIT-OZ
Subject: I'm losing with DEFSYSTEM
In-reply-to: Msg of 7 Oct 1984 13:14-EDT from David C. Plummer <DCP at SCRC-TENEX>


	If you look closely, these aren't quite the same pathname.  If you
	define your logical host to point to OZ:OZ: instead of OZ:PS: you will
	probably have more luck.

Sheesh, do you think the compiler could be a little smarter about this, please?
People never refer to "OZ:OZ:", just to "OZ:" or "OZ:PS:", and I hate random
compiler warnings about this.
 7-Oct-84 14:44:28-EDT,1469;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 7 Oct 84 14:44-EDT
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 104938; Sun 7-Oct-84 14:43:14-EDT
Date: Sunday, 7 October 1984, 14:42-EDT
From: David C. Plummer <DCP at SCRC-TENEX>
Subject: I'm losing with DEFSYSTEM
To: Steve Strassmann <STRAZ at MIT-OZ>,
    David C. Plummer <DCP at SCRC-TENEX>
cc: BUG-LISPM at MIT-OZ
In-Reply-To: <STRAZ.12053580481.BABYL@MIT-OZ>
Message-ID: <841007144244.9.DCP@NEPONSET.SCRC.Symbolics>

    Date: Sun, 7 Oct 1984  14:15 EDT
    From: Steve Strassmann <STRAZ@MIT-OZ>


	    If you look closely, these aren't quite the same pathname.  If you
	    define your logical host to point to OZ:OZ: instead of OZ:PS: you will
	    probably have more luck.

    Sheesh, do you think the compiler could be a little smarter about this, please?
    People never refer to "OZ:OZ:", just to "OZ:" or "OZ:PS:", and I hate random
    compiler warnings about this.

It isn't the compiler's fault, and I don't think I can really blame the
pathname system.  What would you have it do?  It is trying to compute
qfasl-source-file-unique-id (Release 6 changes a few names around in
this area).  It does this by sending a :TRUENAME message to the stream,
which gets the truename FROM OZ'S VIEWPOINT and gets OZ:OZ:.  It then
tries to backtranslate this USING THE TRANSLATIONS DATABASE >>YOU<< GAVE
IT, which only has entries for OZ:PS:.
 7-Oct-84 15:03:37-EDT,1529;000000000000
Mail-From: STRAZ created at  7-Oct-84 15:03:15
Date: Sun, 7 Oct 1984  15:03 EDT
Message-ID: <STRAZ.12053589241.BABYL@MIT-OZ>
From: Steve Strassmann <STRAZ@MIT-OZ>
To:   "David C. Plummer" <DCP@SCRC-TENEX>
Cc:   BUG-LISPM@MIT-OZ
Subject: When is OZ: not OZ:
In-reply-to: Msg of 7 Oct 1984 14:42-EDT from David C. Plummer <DCP at SCRC-TENEX>


	It isn't the compiler's fault, and I don't think I can really blame the
	pathname system.  What would you have it do?  It is trying to compute
	qfasl-source-file-unique-id (Release 6 changes a few names around in
	this area).

I don't claim to understand the notions of "truename", etc, so I will defer
if I'm flaming about something that can't be helped. 

	It does this by sending a :TRUENAME message to the stream, which
	gets the truename FROM OZ'S VIEWPOINT and gets OZ:OZ:.

Why does OZ claim to be called "OZ:OZ:" instead of just "OZ:"? Does the
second "OZ:" convey information the first doesn't? Why aren't redundant
device names merged/eliminated wherever possible, at least by the lispm
pathname system, if not by the host?

	It then	tries to backtranslate this USING THE TRANSLATIONS DATABASE
        >>YOU<< GAVE IT, which only has entries for OZ:PS:.

I have modified my translations database to refer to "OZ:<STRAZ.FOO>"
instead of "OZ:PS:<STRAZ.FOO>", and I hope it fixes everything.
Still, the pathname system ought to know that on a twenex host,
the hostname alone can be interpreted as "host:PS:" for merging
and comparison purposes.
 7-Oct-84 15:17:12-EDT,1273;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 7 Oct 84 15:16-EDT
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 104951; Sun 7-Oct-84 15:17:11-EDT
Date: Sunday, 7 October 1984, 15:16-EDT
From: David A. Moon <Moon at SCRC-TENEX>
Subject: better debugger c-E command
To: David Chapman <Zvona at MIT-OZ>
cc: bug-lispm at MIT-OZ
In-Reply-To: The message of 6 Oct 84 17:07-EDT from David Chapman <Zvona at MIT-OZ>
Message-ID: <841007151638.4.MOON@EUPHRATES.SCRC.Symbolics>

    Date: Saturday, 6 October 1984, 17:07-EDT
    From: David Chapman <Zvona at MIT-OZ>

    If you are already inside ``the'' editor, it would be nice if you were
    given a third choice: to create a new editor (or use some other existing
    one, if the code doesn't already try that).

I assume this refers to the Symbolics system.  The problem is that currently
there can only be one editor.  You can have multiple editor windows, but they
are all operated by the same process, so it isn't possible to implement your
third choice.  Of course this is wrong, and it should be possible to have
multiple editors, but that requires some data structure redesign to be doable
without introducing reliablity problems, that last thing we want.
 7-Oct-84 16:10:55-EDT,2501;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 7 Oct 84 16:10-EDT
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 104980; Sun 7-Oct-84 16:11:05-EDT
Date: Sunday, 7 October 1984, 16:10-EDT
From: David A. Moon <Moon at SCRC-TENEX>
Subject: When is OZ: not OZ:
To: Steve Strassmann <STRAZ at MIT-OZ>
cc: David C. Plummer <DCP at SCRC-TENEX>, BUG-LISPM at MIT-OZ
In-Reply-To: <STRAZ.12053589241.BABYL@MIT-OZ>
Message-ID: <841007161031.3.MOON@EUPHRATES.SCRC.Symbolics>

    Date: Sun, 7 Oct 1984  15:03 EDT
    From: Steve Strassmann <STRAZ@MIT-OZ>

	    It does this by sending a :TRUENAME message to the stream, which
	    gets the truename FROM OZ'S VIEWPOINT and gets OZ:OZ:.

    Why does OZ claim to be called "OZ:OZ:" instead of just "OZ:"? Does the
    second "OZ:" convey information the first doesn't? 

I don't know why.  The people in charge of OZ suddenly changed the name of
the file system from PS to OZ one day.  At least it looked sudden to me; it
may well have been discussed within the AI lab.

Note that OZ has other file systems on it besides the one named OZ, so in some
sense that second OZ conveys some information.

						       Why aren't redundant
    device names merged/eliminated wherever possible, at least by the lispm
    pathname system, if not by the host?

The Lisp machine doesn't know it's redundant.  It doesn't know that the name
of the primary file system is OZ on MIT-OZ and PS on MIT-XX.  Actually it
still believes that it is PS on all Tops-20's, and OZ at some level translates
PS into OZ so things will work.  Too bad it doesn't translate it back to PS
on output.

	    It then	tries to backtranslate this USING THE TRANSLATIONS DATABASE
	    >>YOU<< GAVE IT, which only has entries for OZ:PS:.

    I have modified my translations database to refer to "OZ:<STRAZ.FOO>"
    instead of "OZ:PS:<STRAZ.FOO>", and I hope it fixes everything.

I think you'll have to say OZ:OZ: to fix everything.

    Still, the pathname system ought to know that on a twenex host,
    the hostname alone can be interpreted as "host:PS:" for merging
    and comparison purposes.

It does know that.  Unfortunately, that "fact" isn't true on MIT-OZ.  I
suppose I could reopen old debates about whether the AI lab's new
hardware ought to run a stable, documented system, or some one-of-a-kind
thing that keeps getting changed incompatibly by random hackers from the
net.  But I'll refrain.
 8-Oct-84 04:35:10-EDT,1563;000000000000
Received: from MIT-BUDDY by MIT-OZ via Chaosnet; 8 Oct 84 04:35-EDT
Date: Monday, 8 October 1984, 04:29-EDT
From:  <GAVAN at MIT-OZ>
Subject: Zmail blow-out.
To: DCP at SCRC-TENEX, GAVAN at MIT-PYGMALION, BUG-LISPM at MIT-OZ
In-reply-to: <841003123244.7.DCP@NEPONSET.SCRC.Symbolics>
Fonts: CPTFONT, CPTFONTB

    Date: Wednesday, 3 October 1984, 12:32-EDT
    From: David C. Plummer <DCP at SCRC-TENEX>

	Date: Tuesday, 2 October 1984, 23:44-EDT
	From:  <GAVAN at MIT-PYGMALION>

	    Date: Tuesday, 2 October 1984, 17:11-EDT
	    From: David C. Plummer <DCP at SCRC-TENEX>

	    OK, I made the source of signal bind DEFAULT-CONS-AREA to
	    BACKGROUND-CONS-AREA.  I've been screwed by this before too.

	Don't forget FORMAT.

    Huh??  Example?  (FORMAT NIL "~S" 'FOO) conses in default-cons-area, no?
    If you don't want it to cons results in you temporary area, you should
    wrap your own LET around it.  Otherwise, you could never cons results in
    your temporary area, which you may very well want to do.

Yes, when FORMAT's stream argument is NIL, but not when it's anything
else, I don't think.

In any event, the system default shouldn't require applications
programmers to write any more code than is necessary.  Consing formats
to non-null streams will only rarely, if ever, go anywhere other than in
working-storage.  In those extremely rare cases in which I might want to
cons format in some area other than working-storage, I'd be willing to
LET the BACKGROUND-CONS-AREA be that area.

Or am I confused?
 8-Oct-84 13:50:17-EDT,2703;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 8 Oct 84 13:50-EDT
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 105226; Mon 8-Oct-84 13:51:00-EDT
Date: Monday, 8 October 1984, 13:50-EDT
From: David C. Plummer <DCP at SCRC-TENEX>
Subject: Zmail blow-out.
To: GAVAN at MIT-OZ, DCP at SCRC-TENEX, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 8 Oct 84 04:29-EDT from GAVAN at MIT-OZ
Message-ID: <841008135014.7.DCP@NEPONSET.SCRC.Symbolics>
Fonts: CPTFONT, CPTFONTB

    Date: Monday, 8 October 1984, 04:29-EDT
    From:  <GAVAN at MIT-OZ>

	Date: Wednesday, 3 October 1984, 12:32-EDT
	From: David C. Plummer <DCP at SCRC-TENEX>

	    Date: Tuesday, 2 October 1984, 23:44-EDT
	    From:  <GAVAN at MIT-PYGMALION>

		Date: Tuesday, 2 October 1984, 17:11-EDT
		From: David C. Plummer <DCP at SCRC-TENEX>

		OK, I made the source of signal bind DEFAULT-CONS-AREA to
		BACKGROUND-CONS-AREA.  I've been screwed by this before too.

	    Don't forget FORMAT.

	Huh??  Example?  (FORMAT NIL "~S" 'FOO) conses in default-cons-area, no?
	If you don't want it to cons results in you temporary area, you should
	wrap your own LET around it.  Otherwise, you could never cons results in
	your temporary area, which you may very well want to do.

    Yes, when FORMAT's stream argument is NIL, but not when it's anything
    else, I don't think.

    In any event, the system default shouldn't require applications
    programmers to write any more code than is necessary.  Consing formats
    to non-null streams will only rarely, if ever, go anywhere other than in
    working-storage.  In those extremely rare cases in which I might want to
    cons format in some area other than working-storage, I'd be willing to
    LET the BACKGROUND-CONS-AREA be that area.

    Or am I confused?

You're confused (and so am I, since I don't understand your middle
paragraph).  Why should (format nil "~A" string) cons in an area
different than (substring string 0)??  I contend that if an application
program is hacking with areas, then any data he cares about should be
consed explictly in working-storage-area and all other consing (e.g.,
(FORMAT NIL ...)) is considered temporary without taking steps to make
it otherwise.

I just changed SIGNAL to bing default-cons-area to working-storage-area
(instead of background-cons-area) for a few reasons.
 * background-cons-area isn't documented
 * background-cons-area isn't documented in the code
 * it seems to be the place you direct things when you want them to go
   away quickly (this may be a CADR feature, or something), so
   redirecting SIGNAL there sounds dangerous.
 8-Oct-84 17:20:34-EDT,1607;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 8 Oct 84 17:20-EDT
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 105285; Mon 8-Oct-84 15:48:48-EDT
Date: Monday, 8 October 1984, 15:47-EDT
From: David A. Moon <Moon at SCRC-TENEX>
Subject: background-cons-area or working-storage-area?
To: David C. Plummer <DCP at SCRC-TENEX>
cc: GAVAN at MIT-OZ, BUG-LISPM at MIT-OZ
In-Reply-To: <841008135014.7.DCP@NEPONSET.SCRC.Symbolics>
Message-ID: <841008154739.3.MOON@EUPHRATES.SCRC.Symbolics>
Fonts: CPTFONT, CPTFONTB

    Date: Monday, 8 October 1984, 13:50-EDT
    From: David C. Plummer <DCP at SCRC-TENEX>

    I just changed SIGNAL to bind default-cons-area to working-storage-area
    (instead of background-cons-area) for a few reasons.
     * background-cons-area isn't documented
     * background-cons-area isn't documented in the code
     * it seems to be the place you direct things when you want them to go
       away quickly (this may be a CADR feature, or something), so
       redirecting SIGNAL there sounds dangerous.

No, background-cons-area is the place you direct things you -don't- want to
go away quickly.  It was put in to defeat the CADR feature where default-cons-area
would be a temporary area while compiling.  Background-cons-area is probably the
right place for "unrequested" consing, as in SIGNAL, to take place.  I'm sure
there are dozens of places in the system that don't obey this; since we flushed
the temporary-area feature we didn't need to be very careful about default-cons-area
vs. background-cons-area.
 8-Oct-84 19:15:47-EDT,3032;000000000000
Received: from MIT-LISPM-2 by MIT-OZ via Chaosnet; 8 Oct 84 19:15-EDT
Date: Monday, 8 October 1984, 19:14-EDT
From: Steve Gander <GANDER at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In System 98.30, CADR 3.6, ZMail 53.10, MIT-Specific 22.0, DAEDALUS 5.2,
microcode 306, ZM MIT, on Lisp Machine Two:


Insert your description of the circumstances here:

code broke at this point , 
traced the error to the macro SWAPF which expands into the wrong thing
causing the arg x2 to become nil... 


>>TRAP 13626 (ARGTYP NUMBER PP 0 QISUB)
The first argument to -, NIL, was of the wrong type.
The function expected a number.
Backtrace from the debugger:

COLOR-DRAW-LINE (P.C. = 153)

 Arg 0 (X1): 100
 Arg 1 (Y1): 100
 Arg 2 (X2): NIL
 Arg 3 (Y2): 0
   --Defaulted args:--
 Arg 4 (COLOR): 17
 Arg 5 (ALU): 5
 Arg 6 (SCREEN): #<COLOR-SCREEN COLOR 2200063 exposed>
Local 0: NIL
Local 1 (X1): 0
Local 2 (Y1): NIL
Local 3 (DX): NIL
Local 4 (DY): NIL
Local 5 (PIXEL-ARRAY): NIL
Local 6 (DIR-Y): NIL
Local 7 (DY): NIL
Local 8 (REM): NIL
Local 9 (I): NIL
Local 10 (Y): NIL


SI:EVAL1 (P.C. = 1324)

 Arg 0 (FORM): (COLOR-DRAW-LINE 100 100 0 ...)
   --Defaulted args:--
 Arg 1 (NOHOOK): NIL
Local 0 (ARGNUM): 4
Local 1 (TEM): NIL
Local 2 (ENV): NIL
Local 3 (TAIL): NIL
Local 4 (FCTN): #<DTP-FEF-POINTER COLOR-DRAW-LINE 34521237>
Local 5 (ARG-DESC): 400407
Local 6 (NUM-ARGS): 4
Local 7 (CLOSURE-PASSED): NIL
Local 8 (LAMBDA-LIST): NIL
Local 9 (LL): NIL
Local 10 (QUOTE-STATUS): NIL
Local 11 (REST-FLAG): NIL
Local 12 (ARGL): NIL
Local 13: NIL
Local 14: NIL
Local 15 (IGNORE): NIL
Local 16 (ADL): NIL
Local 17 (ITEM): NIL
Local 18 (*SELECTQ-ITEM*): NIL


Additional information supplied with call:
 Values to be collected for MULTIPLE-VALUE-LIST

SI:EVAL-ABORT-TRIVIAL-ERRORS (P.C. = 61)

 Arg 0 (TOP-LEVEL-FORM): (COLOR-DRAW-LINE 100 100 0 ...)
Local 0: ((TOO-FEW-ARGUMENTS TOO-MANY-ARGUMENTS CELL-CONTENTS-ERROR WRONG-TYPE-ARGUMENT ...) SI:EVAL-ABORT-TRIVIAL-ERRORS-HANDLER)
Local 1: ((** SI:EVAL-ABORT-TRIVIAL-ERRORS-HANDLER))


BREAK (P.C. = 623)

 Arg 0 (FORMAT-STRING): "ZMACS."
 Rest arg (ARGS): NIL
Local 1 (SAVED-BUFFER): NIL
Local 2 (SAVED-BUFFER-POSITION): NIL
Local 3: NIL
Local 4 (CHAR): 10000103
Local 5 (THROW-FLAG): T
Local 6: ("Return to BREAK ~?" "ZMACS." NIL)
Local 7: ((ABORT ERROR) ("Return to BREAK ~?" "ZMACS." NIL) T ("Return to BREAK ~?" "ZMACS." NIL) ...)
Local 8 (TEM1): (COLOR-DRAW-LINE 100 100 0 ...)
Local 9 (TEM): NIL
Local 10 (VALUES): NIL
Local 11: NIL
Local 12 (VALUE): NIL


ZWEI:COM-BREAK (P.C. = 44)



Remainder of stack:

ZWEI:COMMAND-EXECUTE (P.C. = 115)
ZWEI:PROCESS-COMMAND-CHAR (P.C. = 65)
(:METHOD ZWEI:WINDOW :EDIT) (P.C. = 464)
(:INTERNAL (:METHOD ZWEI:ZMACS-WINDOW :COMBINED :EDIT) 0) (P.C. = 74)
FUNCALL (P.C. = 25)
(:METHOD ZWEI:DISPLAYER :AROUND :EDIT) (P.C. = 31)
(:METHOD ZWEI:ZMACS-WINDOW :COMBINED :EDIT) (P.C. = 47)
ZWEI:ZMACS-WINDOW-TOP-LEVEL (P.C. = 46)
SI:PROCESS-TOP-LEVEL (P.C. = 246)
 8-Oct-84 19:21:56-EDT,3596;000000000000
Received: from MIT-MERLIN by MIT-OZ via Chaosnet; 8 Oct 84 19:21-EDT
Date: Monday, 8 October 1984, 19:20-EDT
From: Kent M Pitman <kmp at MIT-OZ>
Subject: The m-J command
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 Release 4.5 on PA Lisp Machine Merlin
                  Release 5.2 on Bing Crosby:

The m-J (Change Font Word) has one small bug and a couple
of misfeatures that make it hard for me to deal with.

Frequently, I want to change a whole lot of textually
distant words to the same font. And it's in general a
pain to have to retype the font code all the time.  

Also, if I type it by accident, I find myself locked in
the font-prompter with my screen flashing wildly at me
until I take some special action to get out of it.

I suggest the following changes to the command's behavior:

Typing m-J should prompt for a font, showing a default
either from the last m-J command or perhaps all the fonts
could share a font-change history list and the most
recent font in the history which is not the current font
could be shown as the default.

Currently (Rel4), the message is:
   Change for of words to (Font ID):
I assume this is a typo for something like:
   Change font of word to (Font ID):
I checked and it's fixed in Rel5, but I don't remember
exactly what it says. Anyway, I would prefer:
   Change font of words to Font ID (A):

The following chars should be special after m-J:

     Return    Accept the default
     m-J       Accept the default
     c-G       Abort, hiding fact that m-J was just typed.
     Abort     Abort, hiding fact that m-J was just typed.

Allowing Return to accept the default would be consistent
with other default-accepting commands.

Allowing m-J to accept the default would be convenient to
touch typists, since they wouldn't have to move their
fingers to accept the default, since it is not ambiguous
with any font code, and since the gut reflex (for me at
least) is to not even look at the echo area to see the
prompt but just to hit m-J a second time when the font
isn't changed when I typed m-J the first time.

Currently, there is a bug where if you type m-J c-G, then
type m-J, it thinks you just typed a m-J and that it
shouldn't prompt again for a font. I feel this is a bug.
If you type c-G, it should erase the information that the
last command was m-J, so that immediately typing m-J
still prompts for a font. This same is true for m-J Abort,
though that's much harder to type, so it never hits me.

Note: If the same subroutine is called in order to prompt
  for m-J as for c-X c-J, etc. and you want to avoid
  the problem of TYI for two characters to accept the
  default on that command, then m-J could just
  quietly exit on any command that wasn't Return or a
  font code. Then the next command, if it were the
  same command, could just accept the default without
  prompting because it thinks it is a second call to
  the same function. I didn't look at the code to see
  if this is how it's done, but I figured I'd mention
  this technique it just in case.

  This approach would have the advantage that if someone
  typed m-J by mistake and didn't mean to, normal
  cursor motion commands like c-A, c-S, etc. would be
  sufficient to get one out. Right now, the person is
  locked in the m-J prompt with the screen flashing
  at him if he hit m-J by accident.  The case of c-J
  is much worse for those who grew up on ASCII
  keyboards and think c-J is going to do Linefeed,
  but haven't set their environment up correctly to
  make that work.
 9-Oct-84 08:39:01-EDT,1628;000000000000
Received: from SCRC-RIVERSIDE by MIT-OZ via Chaosnet; 9 Oct 84 08:38-EDT
Received: from SCRC-PEACE by SCRC-RIVERSIDE via CHAOS with CHAOS-MAIL id 23924; Tue 9-Oct-84 08:35:03-EDT
Date: Tuesday, 9 October 1984, 08:34-EDT
From: Charles Hornig <Hornig at SCRC-STONY-BROOK>
Subject: Namespace and Public Key
To: Jerry Roylance <GLR at MIT-OZ>
cc: Bug-Lispm at MIT-OZ, Bug-Tracking-Replies at SCRC-STONY-BROOK
In-Reply-To: The message of 17 Sep 84 14:28-EDT from Jerry Roylance <GLR at MIT-OZ>
Disposition: LOW-PRIORITY
Category: namepace-suggestion
Message-ID: <841009083441.6.HORNIG@PEACE.SCRC.Symbolics>

Synopsis:  We need some better way to not force the user to keep giving
her password to file servers.

  -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --

    Date: Monday, 17 September 1984, 14:28-EDT
    From: Jerry Roylance <GLR at MIT-OZ>


    I'm tired of logging-in to several different machines.  How about putting into
    the namespace an encrypted password slot for each host in the user object.
    The encryption key is something the user selects.

    Then let me set a *REMEMBER-PASSWORD-KEY* in my lisp environment.  When
    the system needs to log into PIG, it checks to see if there is a
    remember password key.  If there is, then it fetches the encrypted
    password out of the user object, decrypts it, and tries logging in.  (If
    the login fails, then the system can ask the user for the password.)

    Thus I only log in once, but have access to all the hosts I use.

    The encryption and decryption key need never leave my machine.

 9-Oct-84 11:19:56-EDT,3511;000000000000
Received: from MIT-JANIS by MIT-OZ via Chaosnet; 9 Oct 84 11:18-EDT
Date: Tuesday, 9 October 1984, 11:17-EDT
From: JCMA@MIT-OZ
Subject: VMS lossage
To: BUG-LISPM@MIT-OZ

In Symbolics 3600 Release 5.2, Experimental RELATUS 130.149, FEP 18, on Lisp Machine Janis Joplin:



>>Error: "RELATUS-VISION" is an invalid file name for FS:VMS-PATHNAME
While in the function SEND  SIGNAL  (:METHOD FS:PATHNAME :VALIDATE-COMPONENT)

(:METHOD FS:PATHNAME :VALIDATE-COMPONENT):  (P.C. = 40)
   Arg 0 (SELF): #<VMS-PATHNAME "PIG:USRD$:[RELATUS.VISION].CWN">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:PATHNAME -- 0. IV's, 1. FL's 70103465>
   Arg 2 (OPERATION): :VALIDATE-COMPONENT
   Arg 3 (TEST-ARG): "RELATUS-VISION"
   Arg 4 (TEST-ARG-LOC): #<DTP-LOCATIVE 101160632>
   Arg 5 (VALID-MSG): :RAW-NAME
   Arg 6 (TEST-MSG): :VALID-NAME-P
   Arg 7 (CASE-MSG): :CASE-NAME
   Arg 8 (UNCASE-MSG): :UNCASE-NAME
   Arg 9 (COMPONENT): :NAME
   Arg 10 (PRETTY-NAME): "file name"

(:METHOD FS:PATHNAME :VALIDATE):  (P.C. = 43)
   Arg 0 (SELF): #<VMS-PATHNAME "PIG:USRD$:[RELATUS.VISION].CWN">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:PATHNAME -- 0. IV's, 1. FL's 70103465>
   Arg 2 (OPERATION): :VALIDATE

(:METHOD FS:PATHNAME-HASH-TABLE-MIXIN :GET-PATHNAME):  (P.C. = 27)
   Arg 0 (SELF): #<CASE-INSENSITIVE-PATHNAME-HASH-TABLE PYGMALION>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:PATHNAME-HASH-TABLE-MIXIN -- 1. IV's, 0. FL's 73657450>
   Arg 2 (OPERATION): :GET-PATHNAME
   Arg 3 (DEV): "USRD$"
   Arg 4 (DIR): ("RELATUS" "VISION")
   Arg 5 (NAM): "RELATUS-VISION"
   Arg 6 (TYP): "CWN"
   Arg 7 (VRS): :NEWEST
   Arg 8 (KEY): ("USRD$" ("RELATUS" "VISION") "RELATUS-VISION" "CWN" :NEWEST)

(:METHOD NET:PATHNAME-HOST-MIXIN :GET-PATHNAME):  (P.C. = 27)
   Arg 0 (SELF): #<VMS-HOST PYGMALION 70136034>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NET:PATHNAME-HOST-MIXIN -- 2. IV's, 0. FL's 73722551>
   Arg 2 (OPERATION): :GET-PATHNAME
   Arg 3 (DEV): "USRD$"
   Arg 4 (DIR): ("RELATUS" "VISION")
   Arg 5 (NAM): "RELATUS-VISION"
   Arg 6 (TYP): "CWN"
   Arg 7 (VRS): :NEWEST

FS:MAKE-PATHNAME-1:  (P.C. = 562)
   Rest arg (OPTIONS): (:DEFAULT-HOST #<VMS-HOST PYGMALION 70136034> :DEFAULT-DEVICE "USRD$" :DEFAULT-DIRECTORY ("RELATUS" "VISION") :DEFAULT-NAME "FOO" :DEFAULT-TYPE "LSP" ...)

(:METHOD FS:PATHNAME :NEW-PATHNAME):  (P.C. = 21)
   Arg 0 (SELF): #<VMS-PATHNAME "PIG:USRD$:[RELATUS.VISION]FOO.LSP">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:PATHNAME -- 0. IV's, 1. FL's 70103465>
   Arg 2 (OPERATION): :NEW-PATHNAME
   Rest arg (OPTIONS): (:NAME "RELATUS-VISION" :CANONICAL-TYPE :CWARNS :VERSION :NEWEST)

(:METHOD FS:VMS-MAILBOX-PATHNAME-MIXIN :COMBINED :NEW-PATHNAME):  (P.C. = 37)
   Arg 0 (SELF): #<VMS-PATHNAME "PIG:USRD$:[RELATUS.VISION]FOO.LSP">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:VMS-MAILBOX-PATHNAME-MIXIN -- 2. IV's, 2. FL's 70103472>
   Rest arg (.DAEMON-CALLER-ARGS.): (:NEW-PATHNAME :NAME "RELATUS-VISION" :CANONICAL-TYPE :CWARNS :VERSION :NEWEST)

(:PROPERTY :BATCH SI:MAKE-SYSTEM-KEYWORD):  (P.C. = 21)

Rest of stack:
MAKE-SYSTEM:  (P.C. = 125)
SI:*EVAL:  (P.C. = 370)
TV:MOUSE-SENSITIVE-EVAL-FOR-TOP-LEVEL:  (P.C. = 35)  (from RL: UTILS; WMAGIC)
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 200)
SI:MY-LISP-COMMAND-LOOP:  (P.C. = 116)  (from RL: U; FIX-LISP-COMMAND-LOOP)
TV:MOUSE-SENSITIVE-LISP-TOP-LEVEL1:  (P.C. = 32)  (from RL: UTILS; WMAGIC)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
 9-Oct-84 11:59:04-EDT,636;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 9 Oct 84 11:58-EDT
Date: Tuesday, 9 October 1984, 11:54-EDT
From: Kent M. Pitman <KMP at MIT-MC>
Subject: TV:EDIT-NAMESPACE-OBJECT
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 Release 5.2, on Lisp Machine Bing Crosby:

If Namespace Editor window is exposed, but not selected
(eg, a Lisp Listener which is also full exposed is selected), then
clicking on its menu items puts random characters in the selected 
windows buffers.

The Namespace Editor (in fact, everything) should not use
:KBD menu items until/unless :KBD menu items are fixed to do
something reasonable.

-kmp
 9-Oct-84 12:37:27-EDT,3401;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 9 Oct 84 12:36-EDT
Date: Tuesday, 9 October 1984, 12:33-EDT
From: KMP at MIT-MC
Sender: SSUR at MIT-MC
Subject: Lossage with host MC 
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 Release 5.2, FEP 18, on Lisp Machine Apiary-3:

The Apiary machines (in this room, anyway) seem to be having a lot of
trouble talking to MC (finding init files, parsing pathnames, etc) due to
infinite silliness in the handling of namespaces. The symptoms seem to
vary minute to minute and are also terribly dependent on the machine state
at a given time, so are hard to report. If debugging info is needed, it
should be easy enough to walk across and borrow any of several of these
troubled machines for a little while.

Here's a transcript of the notifications on this console since booting; 
note how it has changed #<HOST MIT-MC 43212266> from NET:HOST to FS:ITS-HOST
and then immediately has changed it back from FS:ITS-HOST to NET:HOST:

    12 Notifications, from 0 to 11:
    12:21 Namespace server was unable to find HOST INTERNET|MIT-MC 
          in namespace INTERNET. It will be removed from the namespace.
    12:21 Namespace server was unable to find HOST MC in namespace MIT.
          It will be removed from the namespace.
    12:21 It is necessary to change the flavor of namespace 
          object #<HOST MC 43212526> from NET:HOST to FS:ITS-HOST.
          This may cause problems in dealing with this object until 
          the next use of (SI:FULL-GC :SYSTEM-RELEASE T).
    12:19 It is necessary to change the flavor of namespace 
          object #<ITS-HOST MIT-MC 43212275> from FS:ITS-HOST to NET:HOST.
          This may cause problems in dealing with this object until 
          the next use of (SI:FULL-GC :SYSTEM-RELEASE T).
    12:19 Namespace server was unable to find HOST MC in namespace MIT.
          It will be removed from the namespace.
    12:18 Namespace server was unable to find HOST ARPANET|MIT-MC 
          in namespace ARPANET. It will be removed from the namespace.
    12:18 Namespace server was unable to find HOST MC in namespace MIT.
          It will be removed from the namespace.
    12:18 Error from server: The namespace SCRC is not loaded.;
          Obsolete host information may be used.
    10:19 Error from server: The namespace SCRC is not loaded.;
          Obsolete host information may be used.
    01:11 Namespace server was unable to find HOST INTERNET|MIT-MC 
          in namespace INTERNET. It will be removed from the namespace.
    01:11 It is necessary to change the flavor of namespace 
          object #<HOST MIT-MC 43212266> from NET:HOST to FS:ITS-HOST.
          This may cause problems in dealing with this object until
          the next use of (SI:FULL-GC :SYSTEM-RELEASE T).
    01:11 It is necessary to change the flavor of namespace object
          #<ITS-HOST MIT-MC 35270424> from FS:ITS-HOST to NET:HOST.
          This may cause problems in dealing with this object until the 
          next use of (SI:FULL-GC :SYSTEM-RELEASE T).

Another console in the room was running out of stack space while
in the function (:METHOD FS:ITS-MAILBOX-PATHNAME-MIXIN :COMBINED :NEW-PATHNAME),
which had dozens of call frames on the stack and must have been
infinitely recursing.

The behavior described above is not user friendly.

-kmp
 9-Oct-84 14:28:42-EDT,1275;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 9 Oct 84 14:26-EDT
Date: Tuesday, 9 October 1984, 13:01-EDT
From: Kent M. Pitman <KMP at MIT-MC>
Subject: Latency time in saving data from Namespace Editor 
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 Release 5.2, on Lisp Machine Bing Crosby:

I just had to edit five namespace objects. Editing each took just a few
seconds, but saving each took several minutes.

Why is it necessary to lock up my machine so that it can't do anything
during a save of information to the namespace server? Is the namespace
server writing its entire database out to a file or something?  Couldn't
it just update its in-core copy, put a temporary file on disk to remind
it of the change in case of a crash, and then save a full copy of the
database later?

The problem is made worse by the fact there are a number of other
operations that can't be done at the same time as you're waiting for the
save to happen because many kinds of network accesses have to block
locked (waiting for the network data to be declared consistent, I
suppose) until the save is complete.

If this isn't the problem, I'd be interested in knowing what is.  It
doesn't seem to me there can be a reasonable excuse for the delay in
saving.

-kmp
 9-Oct-84 14:40:44-EDT,598;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 9 Oct 84 14:39-EDT
Date: 9 Oct 1984  14:42 EDT (Tue)
Message-ID: <SR.EHPYC.12054109822.BABYL@MIT-SPEECH>
From: Scott Cyphers <SR.EHPYC@MIT-SPEECH>
To:   "Kent M. Pitman" <KMP@MIT-MC>
Cc:   BUG-LISPM@MIT-OZ
Subject: Latency time in saving data from Namespace Editor 
In-reply-to: Msg of 9 Oct 1984 13:01-EDT from Kent M. Pitman <KMP at MIT-MC>

I've watched LM15 do an update.  It writes out that whole long file
every time.  Can't it just do an append, or else append to a changes
file and update the big one at a more convenient time?
 9-Oct-84 19:44:57-EDT,1062;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 9 Oct 84 19:44-EDT
Date: Tuesday, 9 October 1984, 19:33-EDT
From: Webster Dove <dove at MIT-BUGS-BUNNY>
Subject: More microcoded fcns
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 Release 5.2, UTIL 1.5, FPA 1.0,
Experimental IP-TCP 15.3, on Lisp Machine Tweety Pie:

I could REALLY use two capabilities.

1) An array mapping fcn that would accept a dyadic operator and three
arguments (input-a input-b output) where each argument could be an array
or an atom. (e.g. (maparray #'* array-a scaler-b array-a) would scale
array-a by scaler-b,  (maparray #'+ array-a 0 array-b) FAST COPY!)

The fastest I can even reference arrays is 3.5 usec per aref.  This has
to be much slower than this machine can go!

2) An array type that allows a non-zero starting index.  (e.g.
(make-array 10 :start-at -100))

These would obviously involve ucoding which normal 3600 users cannot do.
Has anyone at Symbolics thought of these things?  They would
dramatically improve the numeric capability of your machine!
 9-Oct-84 20:38:18-EDT,2959;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 9 Oct 84 20:38-EDT
Date: Tuesday, 9 October 1984, 20:29-EDT
From: Scott Cyphers <sr.ehpyc at MIT-SPEECH>
Subject: More microcoded fcns
To: dove at MIT-BUGS-BUNNY, BUG-LISPM at MIT-OZ
In-reply-to: The message of 9 Oct 84 19:33-EDT from Webster Dove <dove at MIT-BUGS-BUNNY>

Using the functions at the end of this message, I get
(time-fast-aref (make-array 10.) 10000.) => 1.6968
(time-aref (make-array 10.) 10000.) => 3.3379
(time-fast-aset (make-array 10.) 10000.) => 1.7081
(time-aset (make-array 10.) 10000.) => 3.6452
(time-add 10000. 2. 3.) => .8302
(time-inc 10000. 2.) => .1668
(time-incf 10000. 2.) => .1672

So, you can do better by using array registers.  But, as I have found,
you don't get twice as good, as it would at first appear, because the
cost of computing your indices, etc., are comparable to array access
costs, and you get maybe a 16% improvement.  Looking at disassembled
code can yield suprises too.  All those MOVEMs and POPs cost cycles.
Doing something like

(let ((b (+ a 3))
      (a (+ a 4)))
  ...)

instead of

(setq b (+ a 3))
(setq a (+ a 4))

would intuitively (to me at least) seem more expensive since you have to
allocate for the new variables, when, in reality, you don't have to
because it's all done at compile time, and you save on the pops and
moves by "binding" instead of setqing to a degree, and then getting all
the little pops over with one bigger pop.  So, even without special
microcoding, you can probably get a noticeable improvement by noticing
these non obvious kinds of things.

I've wished for negative index arrays myself, but if it would mean
slower array referencing, I think I'd prefer to do it by sticking an
offset value in the leader and simulating it with macros, subtracting it
off in the looping start and end.  Maybe the compiler or loop could do
something to support it, by declaring the array to be one with an
arbitrary index shift.

(defmacro time-it (n &body body)
  `(without-interrupts
     (let ((start1 (time:microsecond-time)))
       ;; Find the loop overhead
       (dotimes (i n))
       (let ((t1 (time:time-difference (time:microsecond-time) start1))
	     (start2 (time:microsecond-time)))
	 (dotimes (i n)
	   ,@body)
	 (// (- (time:time-difference (time:microsecond-time) start2)
		t1)
	     (float ,n))))))

(defun time-fast-aref (a n)
  (let ((a a))
    (declare (sys:array-register a))
    (time-it n
      (aref a 0))))

(defun time-aref (a n)
  (let ((a a))
    (time-it n
      (aref a 0))))

(defun time-fast-aset (a n)
  (let ((a a))
    (declare (sys:array-register a))
    (time-it n
      (aset 0 a 0))))

(defun time-aset (a n)
  (let ((a a))
    (time-it n
      (aset 0 a 0))))

(defun time-add (n a b)
  (time-it n (+ a b)))

(defun time-inc (n a)
  (time-it n (1+ a)))

(defun time-incf (n a)
  (time-it n (incf a)))
 9-Oct-84 22:54:09-EDT,5965;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 9 Oct 84 22:53-EDT
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 106090; Tue 9-Oct-84 22:54:55-EDT
Date: Tuesday, 9 October 1984, 22:53-EDT
From: David C. Plummer <DCP at SCRC-TENEX>
Subject: More microcoded fcns
To: Webster Dove <dove at MIT-BUGS-BUNNY>,
    Scott Cyphers <sr.ehpyc at MIT-SPEECH>, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 9 Oct 84 19:33-EDT from Webster Dove <dove at MIT-BUGS-BUNNY>,
             The message of 9 Oct 84 20:29-EDT from Scott Cyphers <sr.ehpyc at MIT-SPEECH>
Message-ID: <841009225327.2.DCP@NEPONSET.SCRC.Symbolics>

    Date: Tuesday, 9 October 1984, 19:33-EDT
    From: Webster Dove <dove at MIT-BUGS-BUNNY>

    In Symbolics 3600 Release 5.2, UTIL 1.5, FPA 1.0,
    Experimental IP-TCP 15.3, on Lisp Machine Tweety Pie:

    I could REALLY use two capabilities.

These are REALLY hard to do in microcode.

    1) An array mapping fcn that would accept a dyadic operator and three
    arguments (input-a input-b output) where each argument could be an array
    or an atom. (e.g. (maparray #'* array-a scaler-b array-a) would scale
    array-a by scaler-b,  (maparray #'+ array-a 0 array-b) FAST COPY!)

I think it is possible give a general function to the microcode and
actually have the microcode call out.  I'm not sure.  At any rate, this
isn't going to make the machine any faster because the callout to #'+ is
going to be slow, and will even use the interpreter's version of +.  "So
special case + and *!"  OK, what else get's special cased?  CDR? -? //?
MIN?  Why not have the general case of operator, output array, and 
inputs where if some input isn't an array the input is used as is.  This
would allow you to add two arrays: (maparray #'+ output input1 input2)?
As you can see, your short request is very, very restrictive.  Also, if
you want FAST-COPY you should use copy-array-portion.  

There is a possibility we will implement a FAST-COPY.

    The fastest I can even reference arrays is 3.5 usec per aref.  This has
    to be much slower than this machine can go!

See my comments to Cyphers.

    2) An array type that allows a non-zero starting index.  (e.g.
    (make-array 10 :start-at -100))

This is not in CommonLisp.  (I can't remember if APL has it or not.)
Maybe you should buy our Pascal compiler?  Maybe you want PLANES (see
tv:make-plane)?  Maybe you want it to be fast?  Planes aren't very good
at being fast?  One reason this is hard is the format of arrays -- it
only stores the upper bound(s) and assumes the lower bounds are 0.  This
is for speed (you only have to do one compare, using unsigned
arithmetic, since a negative number is really a huge positive number
when viewed as an unsigned).  This comparison is probably done in
parallel with other operations; again, for speed.  If you want to see
the difference, have Cyphers do his (non-fast) tests on the CADR, and
see the difference.

    These would obviously involve ucoding which normal 3600 users cannot do.
Maybe some eon that won't be the case.
    Has anyone at Symbolics thought of these things?  
As for your suggestion (1), fast-copy has crossed our minds.  Your other
suggestions have not (that I know of), perhaps because of my lengthy
counterargument.
    They would dramatically improve the numeric capability of your machine!
I'm not convinced.

		     ------------------------------

    Date: Tuesday, 9 October 1984, 20:29-EDT
    From: Scott Cyphers <sr.ehpyc at MIT-SPEECH>

    Using the functions at the end of this message, I get
    (time-fast-aref (make-array 10.) 10000.) => 1.6968
    (time-aref (make-array 10.) 10000.) => 3.3379
    (time-fast-aset (make-array 10.) 10000.) => 1.7081
    (time-aset (make-array 10.) 10000.) => 3.6452
    (time-add 10000. 2. 3.) => .8302
    (time-inc 10000. 2.) => .1668
    (time-incf 10000. 2.) => .1672

    So, you can do better by using array registers.  But, as I have found,
    you don't get twice as good, as it would at first appear, because the
    cost of computing your indices, etc., are comparable to array access
    costs, and you get maybe a 16% improvement.  

Try
	(time-aref (make-array 10.
				    :displaced-to (make-array 10.))
			10000.)
=> 1.705 (time-aref gives 8.97) and even worse
	(time-fast-aref (make-array 10.
				    :displaced-to (make-array 10.
							      :displaced-to 10.))
			10000.) 
=> 1.71 (time-aref gives 9.46).

    Looking at disassembled code can yield suprises too.  All those
    MOVEMs and POPs cost cycles.
200 nanoseconds, roughly.
    Doing something like

    (let ((b (+ a 3))
	  (a (+ a 4)))
      ...)

    instead of

    (setq b (+ a 3))
    (setq a (+ a 4))

    would intuitively (to me at least) seem more expensive since you have to
    allocate for the new variables, when, in reality, you don't have to
    because it's all done at compile time, and you save on the pops and
    moves by "binding" instead of setqing to a degree, and then getting all
    the little pops over with one bigger pop.  
Sort of.  The right analysis is that this is a stack machine.
    So, even without special
    microcoding, you can probably get a noticeable improvement by noticing
    these non obvious kinds of things.

    I've wished for negative index arrays myself, but if it would mean
    slower array referencing, I think I'd prefer to do it by sticking an
    offset value in the leader and simulating it with macros, subtracting it
    off in the looping start and end.  Maybe the compiler or loop could do
    something to support it, by declaring the array to be one with an
    arbitrary index shift.
The compiler cannot do that, nor can loop, since you want it to be
completely transparent.  Dove wants (aref foo x) to work as long as foo
is an array and x is a valid subscript.
10-Oct-84 00:20:29-EDT,3783;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 10 Oct 84 00:19-EDT
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 106113; Wed 10-Oct-84 00:21:35-EDT
Date: Wednesday, 10 October 1984, 00:19-EDT
From: David A. Moon <Moon at SCRC-TENEX>
Subject: More microcoded fcns
To: Webster Dove <dove at MIT-BUGS-BUNNY>
cc: BUG-LISPM at MIT-OZ
In-Reply-To: The message of 9 Oct 84 19:33-EDT from Webster Dove <dove at MIT-BUGS-BUNNY>
Message-ID: <841010001946.9.MOON@EUPHRATES.SCRC.Symbolics>

    Date: Tuesday, 9 October 1984, 19:33-EDT
    From: Webster Dove <dove at MIT-BUGS-BUNNY>

    In Symbolics 3600 Release 5.2, UTIL 1.5, FPA 1.0,
    Experimental IP-TCP 15.3, on Lisp Machine Tweety Pie:

    I could REALLY use two capabilities.

    1) An array mapping fcn that would accept a dyadic operator and three
    arguments (input-a input-b output) where each argument could be an array
    or an atom. (e.g. (maparray #'* array-a scaler-b array-a) would scale
    array-a by scaler-b,  (maparray #'+ array-a 0 array-b) FAST COPY!)

    The fastest I can even reference arrays is 3.5 usec per aref.  This has
    to be much slower than this machine can go!

It's a pity that array registers were accidentally omitted from the
Release 5 documentation.  They make your array references run at memory
speed.  Of course, they don't improve the speed of the rest of your
program.  I see Cyphers has told you about them.  I hope you'll use them.

    These would obviously involve ucoding which normal 3600 users cannot do.
    Has anyone at Symbolics thought of these things?  They would
    dramatically improve the numeric capability of your machine!

It isn't obvious to me that you need microcode to do this.  Actually I
don't believe microcode would even help, on this machine.  I think you
can write maparray as a macro (of course, the less you know at compile
time the slower it will be at run time, for instance if the function to
be mapped isn't constant at compile time you will get slower code).  If
you apply the same amount of cleverness to writing the macro (examining
the disassembled compiled code carefully, using array registers, moving
tests out of loops, unrolling loops, etc.) as you would in writing the
microcode, you'll get about the same performance.  The only advantage of
microcode would be if it allows more cleverness than Lisp code does, so
that you can get higher performance if you use an asymptotic amount of
cleverness.  I've found that quite a lot can be achieved without using
microcode, just by writing Lisp as carefully as I would write microcode,
for this sort of inner-loop array-processing application.

I am interested in hearing any suggestions you may have for new primitive
operations, supplied by microcode or by hardware, that would ease the
writing of such efficient array-processing applications.  This is not
a promise to implement them, but I'm interested in listening to them.
It's possible that you don't understand why maparray is not in that category.
Basically, it's too complex for what can sensibly be done in microcode.
Anything that involves calling an arbitrary function would be too complex.
It helps if you ignore microcode and think about what you would want
hardware to do, then once you've decided that use microcode as a technique
for implementing "soft" hardware.

    2) An array type that allows a non-zero starting index.  (e.g.
    (make-array 10 :start-at -100))

I think you and I discussed this last year, so I won't repeat that discussion.
In summary, it is a reasonable thing to want, but would slow everything
else down and is fairly easy to simulate with compile-time macrology for
restricted applications.
10-Oct-84 11:27:11-EDT,1383;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 10 Oct 84 11:24-EDT
Date: 10 Oct 1984  11:28 EDT (Wed)
Message-ID: <SR.EHPYC.12054336603.BABYL@MIT-SPEECH>
From: Scott Cyphers <SR.EHPYC@MIT-SPEECH>
To:   "David C. Plummer" <DCP@SCRC-TENEX>
Cc:   BUG-LISPM@MIT-OZ, Webster Dove <dove@MIT-BUGS-BUNNY>
Subject: More microcoded fcns
In-reply-to: Msg of 9 Oct 1984 22:53-EDT from David C. Plummer <DCP at SCRC-TENEX>

    Date: Tuesday, 9 October 1984, 22:53-EDT
    From: David C. Plummer <DCP at SCRC-TENEX>
    To:   Webster Dove <dove at MIT-BUGS-BUNNY>, Scott Cyphers <sr.ehpyc>,
          BUG-LISPM at MIT-OZ
    Re:   More microcoded fcns

        Looking at disassembled code can yield suprises too.  All those
        MOVEMs and POPs cost cycles.
    200 nanoseconds, roughly.

Right.  And since all the arefs are really
PUSH-IMMEDIATE
(FAST)-AREF
POP

and the asets are
PUSH-IMMEDIATE
PUSH-IMMEDIATE
(FAST)ASET

you can subtract almost 400 nanoseconds from those times.


By the way

(let ((a a)(b b))
  (declare (sys:array-register a b))
  (loop for elt1 being the array-elements of a
	for elt2 being the array-elements of b
	summing (* elt1 elt2)))

won't give you fast arefs because of the way loop expands.  As Moon
says, you've got to be concious of what the compiler and the macros
are doing if you want to make something fast.
10-Oct-84 12:10:41-EDT,1876;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 10 Oct 84 12:09-EDT
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 106290; Wed 10-Oct-84 12:11:23-EDT
Date: Wednesday, 10 October 1984, 12:09-EDT
From: David C. Plummer <DCP at SCRC-TENEX>
Subject: More microcoded fcns
To: Scott Cyphers <SR.EHPYC at MIT-SPEECH>,
    David C. Plummer <DCP at SCRC-TENEX>
cc: BUG-LISPM at MIT-OZ, Webster Dove <dove at MIT-BUGS-BUNNY>
In-Reply-To: <SR.EHPYC.12054336603.BABYL@MIT-SPEECH>
Message-ID: <841010120944.6.DCP@NEPONSET.SCRC.Symbolics>

    Date: 10 Oct 1984  11:28 EDT (Wed)
    From: Scott Cyphers <SR.EHPYC@MIT-SPEECH>

    By the way

    (let ((a a)(b b))
      (declare (sys:array-register a b))
      (loop for elt1 being the array-elements of a
	    for elt2 being the array-elements of b
	    summing (* elt1 elt2)))

    won't give you fast arefs because of the way loop expands.  As Moon
    says, you've got to be concious of what the compiler and the macros
    are doing if you want to make something fast.

I thought I explained this in the mail before.  Read the macro
expansions.  It is binding a gensym to the arrays.  For comparison, try
	(let ()
	  (declare (sys:array-register a b))
	  (loop for elt1 being the array-elements of a using (sequence a)
		for elt2 being the array-elements of b using (sequence b) 
		summing (* elt1 elt2)))
which will give you array registers for a and b.  As you point out that
Moon says about being conscious, a faster version of this is
	(let ((a a) (b b))
	  (declare (sys:array-register a b))
	  (loop for idx below (min (array-active-length a)
				   (array-active-length b))
		summing (* (aref a idx) (aref b idx))))
which is about half as many instructions because of eliminated dual
comparisons, local variables (MOVEMs, PUSHed, POPs, etc), etc.
10-Oct-84 13:24:18-EDT,3231;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 10 Oct 84 13:22-EDT
Date: Wednesday, 10 October 1984, 13:16-EDT
From: Gavan Duffy <GAVAN at MIT-OZ>
Subject: Zmail blow-out.
To: DCP at SCRC-TENEX, GAVAN at MIT-OZ, BUG-LISPM at MIT-OZ
In-reply-to: <841008135014.7.DCP@NEPONSET.SCRC.Symbolics>
Fonts: CPTFONT, CPTFONTB

    Date: Monday, 8 October 1984, 13:50-EDT
    From: David C. Plummer <DCP at SCRC-TENEX>

	Date: Monday, 8 October 1984, 04:29-EDT
	From:  <GAVAN at MIT-OZ>

	    Date: Wednesday, 3 October 1984, 12:32-EDT
	    From: David C. Plummer <DCP at SCRC-TENEX>

	    Huh??  Example?  (FORMAT NIL "~S" 'FOO) conses in default-cons-area, no?
	    If you don't want it to cons results in you temporary area, you should
	    wrap your own LET around it.  Otherwise, you could never cons results in
	    your temporary area, which you may very well want to do.

	Yes, when FORMAT's stream argument is NIL, but not when it's anything
	else, I don't think.

	In any event, the system default shouldn't require applications
	programmers to write any more code than is necessary.  Consing formats
	to non-null streams will only rarely, if ever, go anywhere other than in
	working-storage.  In those extremely rare cases in which I might want to
	cons format in some area other than working-storage, I'd be willing to
	LET the BACKGROUND-CONS-AREA be that area.

	Or am I confused?

    You're confused (and so am I, since I don't understand your middle
    paragraph).  Why should (format nil "~A" string) cons in an area
    different than (substring string 0)??  

It shouln't.  It should cons in the area to which DEFAULT-CONS-AREA is bound.
The question is, in what area should:

(FORMAT <anything other then NIL> "~A" STRING) 

cons?  If it's DEFAULT-CONS-AREA, and the code is running within the contour
of a LET which binds DEFAULT-CONS-AREA to some other area, then
DEFAULT-CONS-AREA would have to be rebound to working-storage in order to get
FORMAT to cons there.  I contend that that would be silly.  FORMAT should just
cons in WORKING-STORAGE (or wherever it's supposed to go) unless NIL is the
stream argument, since in that case the author of the code wants to use
FORMAT's output as a string.  In that case it should cons in DEFAULT-CONS-AREA.

    I contend that if an application program is hacking with areas, then any
    data he cares about should be consed explictly in working-storage-area . . .

Hunh?  What if I want to localize my data structures in their own area so that
all the garbage in working-storage doesn't slow down operations over them?  Do
you really suggest that I cons everything in working storage and then copy
everything I want to my own area?

    . . . and all other consing (e.g., (FORMAT NIL ...)) is considered 
    temporary without taking steps to make it otherwise.

(FORMAT NIL . . .) should cons in DEFAULT-CONS-AREA, no?  If it's bound to the
area I want the FORMAT output to go to, there's no problem.  But I still
wonder where FORMAT output with a different stream argument will cons.  I'd
prefer it to cons someplace safe, like working-storage, which is not
necessarily the same thing as DEFAULT-CONS-AREA.
10-Oct-84 14:22:19-EDT,507;000000000000
Received: from SCRC-TENEX by MIT-OZ via Chaosnet; 10 Oct 84 14:21-EDT
Date: 10 Oct 1984 1417-EDT
From: David A. Moon <MOON@SCRC-TENEX>
Subject: Should FORMAT cons in DDEFAULT-CONS-AREA
To: GAVAN@MIT-OZ
cc: DCP@SCRC-TENEX, BUG-LISPM@MIT-OZ
In-Reply-To: The message of Wednesday, 10 October 1984, 13:16-EDT from Gavan Duffy <GAVAN at MIT-OZ>

FORMAT with a non-null first argument shoulddn't cons in any area at all.
Currently it tries not to cons, but I believe there are one or two bugs.
-------
10-Oct-84 15:19:29-EDT,507;000000000000
Received: from SCRC-TENEX by MIT-OZ via Chaosnet; 10 Oct 84 15:16-EDT
Date: 10 Oct 1984 1417-EDT
From: David A. Moon <MOON@SCRC-TENEX>
Subject: Should FORMAT cons in DDEFAULT-CONS-AREA
To: GAVAN@MIT-OZ
cc: DCP@SCRC-TENEX, BUG-LISPM@MIT-OZ
In-Reply-To: The message of Wednesday, 10 October 1984, 13:16-EDT from Gavan Duffy <GAVAN at MIT-OZ>

FORMAT with a non-null first argument shoulddn't cons in any area at all.
Currently it tries not to cons, but I believe there are one or two bugs.
-------
10-Oct-84 15:32:25-EDT,704;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 10 Oct 84 15:22-EDT
Date: Wednesday, 10 October 1984, 15:05-EDT
From: Gavan Duffy <GAVAN at MIT-OZ>
Subject: Should FORMAT cons in DDEFAULT-CONS-AREA
To: MOON at SCRC-TENEX, GAVAN at MIT-OZ
Cc: DCP at SCRC-TENEX, BUG-LISPM at MIT-OZ
In-reply-to: The message of 10 Oct 84 14:17-EDT from David A. Moon <MOON at SCRC-TENEX>

    Date: 10 Oct 1984 1417-EDT
    From: David A. Moon <MOON@SCRC-TENEX>

    FORMAT with a non-null first argument shoulddn't cons in any area at all.
    Currently it tries not to cons, but I believe there are one or two bugs.

Right.  I'm referring (incorrectly) to the area in which the resulting array 
is located.
10-Oct-84 16:00:08-EDT,3762;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 10 Oct 84 15:59-EDT
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 106469; Wed 10-Oct-84 15:49:43-EDT
Date: Wednesday, 10 October 1984, 15:47-EDT
From: David C. Plummer <DCP at SCRC-TENEX>
Subject: Zmail blow-out.
To: Gavan Duffy <GAVAN at MIT-OZ>, DCP at SCRC-TENEX,
    BUG-LISPM at MIT-OZ
In-Reply-To: The message of 10 Oct 84 13:16-EDT from Gavan Duffy <GAVAN at MIT-OZ>
Message-ID: <841010154758.5.DCP@NEPONSET.SCRC.Symbolics>
Fonts: CPTFONT, CPTFONTB

    Date: Wednesday, 10 October 1984, 13:16-EDT
    From: Gavan Duffy <GAVAN at MIT-OZ>

	Date: Monday, 8 October 1984, 13:50-EDT
	From: David C. Plummer <DCP at SCRC-TENEX>

	    Date: Monday, 8 October 1984, 04:29-EDT
	    From:  <GAVAN at MIT-OZ>

		Date: Wednesday, 3 October 1984, 12:32-EDT
		From: David C. Plummer <DCP at SCRC-TENEX>

		Huh??  Example?  (FORMAT NIL "~S" 'FOO) conses in default-cons-area, no?
		If you don't want it to cons results in you temporary area, you should
		wrap your own LET around it.  Otherwise, you could never cons results in
		your temporary area, which you may very well want to do.

	    Yes, when FORMAT's stream argument is NIL, but not when it's anything
	    else, I don't think.

	    In any event, the system default shouldn't require applications
	    programmers to write any more code than is necessary.  Consing formats
	    to non-null streams will only rarely, if ever, go anywhere other than in
	    working-storage.  In those extremely rare cases in which I might want to
	    cons format in some area other than working-storage, I'd be willing to
	    LET the BACKGROUND-CONS-AREA be that area.

	    Or am I confused?

	You're confused (and so am I, since I don't understand your middle
	paragraph).  Why should (format nil "~A" string) cons in an area
	different than (substring string 0)??  

    It shouln't.  It should cons in the area to which DEFAULT-CONS-AREA is bound.
    The question is, in what area should:

    (FORMAT <anything other then NIL> "~A" STRING) 

    cons?  
It conses in format:format-temporary-area, just as it has for eons.  Do
you have evidence it does otherwise?
    If it's DEFAULT-CONS-AREA, and the code is running within the contour
    of a LET which binds DEFAULT-CONS-AREA to some other area, then
    DEFAULT-CONS-AREA would have to be rebound to working-storage in order to get
    FORMAT to cons there.  I contend that that would be silly.  FORMAT should just
    cons in WORKING-STORAGE (or wherever it's supposed to go) unless NIL is the
    stream argument, since in that case the author of the code wants to use
    FORMAT's output as a string.  In that case it should cons in DEFAULT-CONS-AREA.

	I contend that if an application program is hacking with areas, then any
	data he cares about should be consed explictly in working-storage-area . . .

    Hunh?  What if I want to localize my data structures in their own area so that
    all the garbage in working-storage doesn't slow down operations over them?  Do
    you really suggest that I cons everything in working storage and then copy
    everything I want to my own area?
Ditto.
	. . . and all other consing (e.g., (FORMAT NIL ...)) is considered 
	temporary without taking steps to make it otherwise.

    (FORMAT NIL . . .) should cons in DEFAULT-CONS-AREA, no?  If it's bound to the
    area I want the FORMAT output to go to, there's no problem.  But I still
    wonder where FORMAT output with a different stream argument will cons.  I'd
    prefer it to cons someplace safe, like working-storage, which is not
    necessarily the same thing as DEFAULT-CONS-AREA.
Ditto.
10-Oct-84 19:04:07-EDT,1168;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 10 Oct 84 19:03-EDT
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 106584; Wed 10-Oct-84 19:06:11-EDT
Date: Wednesday, 10 October 1984, 19:04-EDT
From: David C. Plummer <DCP at SCRC-TENEX>
Subject: Should FORMAT cons in DDEFAULT-CONS-AREA
To: Gavan Duffy <GAVAN at MIT-OZ>, MOON at SCRC-TENEX
cc: DCP at SCRC-TENEX, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 10 Oct 84 15:05-EDT from Gavan Duffy <GAVAN at MIT-OZ>
Message-ID: <841010190425.8.DCP@NEPONSET.SCRC.Symbolics>

    Date: Wednesday, 10 October 1984, 15:05-EDT
    From: Gavan Duffy <GAVAN at MIT-OZ>

	Date: 10 Oct 1984 1417-EDT
	From: David A. Moon <MOON@SCRC-TENEX>

	FORMAT with a non-null first argument shoulddn't cons in any area at all.
	Currently it tries not to cons, but I believe there are one or two bugs.

    Right.  I'm referring (incorrectly) to the area in which the resulting array 
    is located.

As you have probably seen by now, it conses its temporaries in
format:format-temporary-area.  Bugs can be witnessed by seeing if the
region(s) there are non-zero in length.
10-Oct-84 19:14:37-EDT,1421;000000000000
Received: from MIT-BUDDY by MIT-OZ via Chaosnet; 10 Oct 84 19:14-EDT
Date: Wednesday, 10 October 1984, 19:14-EDT
From: JCMA@MIT-OZ
Subject: Defsystem loses on cwarns files for VMS in case where system name is not a legal VMS pathname
To: cherry@SCRC-QUABBIN
Cc: bug-lispm@MIT-OZ
In-reply-to: The message of 9 Oct 84 22:05-EDT from James J. Cherry <cherry at SCRC-QUABBIN>

    Date: Tuesday, 9 October 1984, 22:05-EDT
    From: James J. Cherry <cherry at SCRC-QUABBIN>

	Date: Tuesday, 9 October 1984, 11:17-EDT
	From: JCMA@MIT-OZ

	In Symbolics 3600 Release 5.2, Experimental RELATUS 130.149, FEP 18, on Lisp Machine Janis Joplin:



	>>Error: "RELATUS-VISION" is an invalid file name for FS:VMS-PATHNAME
	While in the function SEND  SIGNAL  (:METHOD FS:PATHNAME :VALIDATE-COMPONENT)

    Are you a pinhead or just a pain in the ass?  the error msg is correct.
    I thought vms's don't like "-"'s in thier pathnames.
(sp their not thier)

Well, bozo, if you had looked further down the stack you would have seen that
defsystem was the program trying to open the file.  Defsystem had failed to
perform VMS pathname truncation.  The name of the system was RELATUS-VISION,
so defsystem was trying write a cwarns file, but it wasn't smart enough to to
truncate the pathname for VMS compatibility.


I don't think ad hominem bug responses will fix system bugs or advance your
popularity.
10-Oct-84 19:26:26-EDT,1390;000000000000
Received: from MIT-BUDDY by MIT-OZ via Chaosnet; 10 Oct 84 19:26-EDT
Date: Wednesday, 10 October 1984, 19:26-EDT
From: JCMA@MIT-OZ
Subject: Timings on TI's Lisp Machines Reported in Alist
To: bug-lispm@MIT-OZ

What do we think of this?

Date: Tue 9 Oct 84 17:49:39-PDT
From: PENTLAND@SRI-AI.ARPA
Subject: TI's new Lisp Machines

News about TI's new Lisp Machines:

Timing figures, 1/60th of a second.
Both TI and 3600 were 1Mword memory, 300Mbyte disk

op              TI      3600            comment
---------------------------------------------------------------
bitblt          270     441     shows basic memory cycle time
floating pt     23      17      //,* about the same, TI has 25 bit number
cons            25-40   17-40   depends somewhat on paging
paging          225-280 160-450 same transfer rate, seek time 50% more for TI
create flavor
  instance      140     52      not fully microcoded yet
send msg        52      21      not fully microcoded yet
function call   31      16      not fully microcoded yet
32bit floating  33      17      includes consing in TI machine

It appears that by the April delivery date, the TI will be the equal of a
3600.  It is already much more than an LMI, Cadr or LM2 (I ran these
benchmarks on an LM2, it was 1/2 to 1/5 the TI in all cases).
Ask for the benchmark programs if you are interested in details.
10-Oct-84 20:19:04-EDT,1143;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 10 Oct 84 20:18-EDT
Received: from SCRC-NEPONSET by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 90167; Wed 10-Oct-84 20:18:03-EDT
Date: Wednesday, 10 October 1984, 20:18-EDT
From: David C. Plummer <DCP at SCRC-TENEX>
Subject: Timings on TI's Lisp Machines Reported in Alist
To: JCMA at MIT-OZ, bug-lispm at MIT-OZ
In-Reply-To: The message of 10 Oct 84 19:26-EDT from JCMA at MIT-OZ
Message-ID: <841010201841.3.DCP@NEPONSET.SCRC.Symbolics>

    Date: Wednesday, 10 October 1984, 19:26-EDT
    From: JCMA@MIT-OZ

    What do we think of this?

As my 10th grade homeroom teacher (who was a physics teacher) would put
it: What units?  ELEPHANTS?  Seriously, I have no idea what these
figures mean, even with my knowledge of the execution time of the 3600.
Is these numbers the number of 60ths of a second to perform one
operation, 1000 operations, or is this the inverse: number of operations
performed in 1/60th second?  Also, the data is so sparse it doesn't give
any meaning.  What kind of function call?  Zero arguments?  4 arguments?
2 required, 2 optional, 3 supplied?
10-Oct-84 21:36:16-EDT,1505;000000000000
Received: from MIT-BUDDY by MIT-OZ via Chaosnet; 10 Oct 84 21:35-EDT
Date: Wednesday, 10 October 1984, 21:35-EDT
From: JCMA@MIT-OZ
Subject: Timings on TI's Lisp Machines Reported in Alist
To: DCP@SCRC-TENEX
Cc: bug-lispm@MIT-OZ
In-reply-to: <841010201841.3.DCP@NEPONSET.SCRC.Symbolics>

    Date: Wednesday, 10 October 1984, 20:18-EDT
    From: David C. Plummer <DCP at SCRC-TENEX>

	Date: Wednesday, 10 October 1984, 19:26-EDT
	From: JCMA@MIT-OZ

	What do we think of this?

    As my 10th grade homeroom teacher (who was a physics teacher) would put
    it: What units?  ELEPHANTS?  Seriously, I have no idea what these
    figures mean, even with my knowledge of the execution time of the 3600.
    Is these numbers the number of 60ths of a second to perform one
    operation, 1000 operations, or is this the inverse: number of operations
    performed in 1/60th second?  Also, the data is so sparse it doesn't give
    any meaning.  What kind of function call?  Zero arguments?  4 arguments?
    2 required, 2 optional, 3 supplied?

Good points.  That's why I sent to PENTLAND@SRI-AI for the rest of the
details.  I will forward them to this list when I get them.  Hopefully, they
will be more informative.  The curious thing about Pentland's message was that
it claimed the TI explorer would equal a 3600 by this spring but his timings
didn't seem to indicate that at all.  Perhaps someone should send in to the
AIlist and raise some of these questions with Pentland.
11-Oct-84 07:48:03-EDT,3623;000000000000
Received: from MIT-LENNON by MIT-OZ via Chaosnet; 11 Oct 84 07:47-EDT
Date: Thursday, 11 October 1984, 07:38-EDT
From: Ken Haase <KWH at MIT-OZ>
Subject: Namespace deletion bug.
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 Release 5.2, ARLO 25.22, ARLOX 5.18, FEP 18, on Lisp Machine John Lennon:

This happened in the middle of a full gc.

>>Error: You can't delete the primary name this way yet.
While in the function NETI:DELETE-NAME-FROM-NAMESPACE  NETI:ADD-OR-CHANGE-OBJECT  NETI:QUERY-NAMESPACE-SERVER

NETI:DELETE-NAME-FROM-NAMESPACE:  (P.C. = 37)
   Arg 0 (NAME): #<NAME INTERNET|MIT-TWEETY-PIE 14336357>
   Arg 1 (NAMESPACE): #<NAMESPACE INTERNET 14300012>
   Arg 2 (OBJECT): #<LISPM-HOST MIT-TWEETY-PIE 14334743>
   Local 3 (VTS): (#<NAMESPACE INTERNET 14300012> (12 25) 21752757 #<NAME INTERNET|MIT-TWEETY-PIE 14336357> (:SHORT-NAME NIL :ADDRESS ((#<INTERNET-NETWORK INTERNET 14300135> "18.20.27.16")) :NICKNAME (#<NAME INTERNET|MIT-TWEETY-GW 14336367>) :MACHINE-TYPE :|3600| :SYSTEM-TYPE :LISPM ...))

NETI:ADD-OR-CHANGE-OBJECT:  (P.C. = 445)
   Arg 0 (CLASS-NAME): :HOST
   Arg 1 (NAME): #<NAME INTERNET|MIT-TWEETY-PIE 14336357>
   Arg 2 (PROPERTY-LIST): (:NICKNAME (#<NAME INTERNET|TWEETY-PIE 43212167> #<NAME INTERNET|TWEETY 14336363>) :ADDRESS ((#<INTERNET-NETWORK INTERNET 14300135> "18.27.0.16")) :MACHINE-TYPE :|3600| :SYSTEM-TYPE :LISPM :SERVICE ((:TIME :UDP :TIME-SIMPLE-MSB) (:FILE :UDP :TFTP) (:SHOW-USERS :TCP :ASCII-NAME) (:MAIL-TO-USER :TCP :SMTP) (:SEND :TCP :SMTP) (:EXPAND-MAIL-RECIPIENT :TCP :SMTP) (:LOGIN :TCP :TELNET) (:TIME :TCP :TIME-MSB) (:FILE :TCP :TCP-FTP)))

NETI:QUERY-NAMESPACE-SERVER:  (P.C. = 434)
   Arg 0 (CLASS): :HOST
   Arg 1 (NAMESPACE): #<NAMESPACE INTERNET 14300012>
   Rest arg (PROPERTY-LIST): (:NAME #<NAME INTERNET|MIT-TWEETY-PIE 14336357> :TIMESTAMP 25)

(:METHOD NET:OBJECT :CHECK-VALIDITY):  (P.C. = 227)
   Arg 0 (SELF): #<LISPM-HOST MIT-TWEETY-PIE 14334743>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NET:OBJECT -- 3. IV's, 1. FL's 41437636>
   Arg 2 (OPERATION): :CHECK-VALIDITY
   Arg 3 (RELATIVE-TO-NAMESPACE): #<NAMESPACE INTERNET 14300012>
   --Defaulted args:--
   Arg 4 (FORCE-P): NIL

NETI:FIND-OBJECT-NAMED-IN-NAMESPACE:  (P.C. = 45)
   Arg 0 (CLASS): :HOST
   Arg 1 (NAME): "MIT-TWEETY-PIE"
   Arg 2 (NAMESPACE): #<NAMESPACE INTERNET 14300012>
   Arg 3 (ERROR-P): NIL

NETI:QUERY-NAMESPACE-SERVER:  (P.C. = 302)
   Arg 0 (CLASS): :HOST
   Arg 1 (NAMESPACE): #<NAMESPACE INTERNET 14300012>
   Rest arg (PROPERTY-LIST): (:TIMESTAMP 25 :NAMES-ONLY T :SERVICE ((:UPTIME :* :UPTIME-SIMPLE)))

NETI:FIND-OBJECTS-FROM-PROPERTY-LIST-IN-NAMESPACE:  (P.C. = 311)
   Arg 0 (CLASS): #<CLASS HOST 35646055>
   Arg 1 (NAMESPACE): #<NAMESPACE INTERNET 14300012>
   Rest arg (PROPERTY-LIST): (:SERVICE ((:UPTIME :* :UPTIME-SIMPLE)))

NETI:FINDING-OBJECTS:  (P.C. = 56)
   Arg 0 (CLASS): :HOST
   Arg 1 (PROPERTY-LIST-initialization): (:SERVICE ((:UPTIME :* :UPTIME-SIMPLE)))
   Arg 2 (FUNCTION-initialization): #<DTP-COMPILED-FUNCTION (:INTERNAL NET:FIND-OBJECTS-FROM-PROPERTY-LIST 0) 25446404>
   Rest arg (OTHER-ARGS-initialization): (#<DTP-LOCATIVE 140272> #<DTP-LOCATIVE 140273>)

Rest of stack:
NET:FIND-OBJECTS-FROM-PROPERTY-LIST:  (P.C. = 15)
NETI:HOSTS-SUPPORTING-SERVICE:  (P.C. = 144)
SI:*EVAL:  (P.C. = 370)
INITIALIZATIONS:  (P.C. = 42)
NETI:ENSURE-PROPERTY-LISTS-ENCACHED:  (P.C. = 61)
SI:FULL-GC:  (P.C. = 21)
SI:*EVAL:  (P.C. = 370)
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 200)
SI:LISP-COMMAND-LOOP:  (P.C. = 115)
SI:LISP-TOP-LEVEL1:  (P.C. = 22)
SI:LISP-TOP-LEVEL:  (P.C. = 7)
11-Oct-84 08:04:33-EDT,1013;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 11 Oct 84 08:04-EDT
Received: from SCRC-PEACE by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 90231; Thu 11-Oct-84 08:03:46-EDT
Date: Thursday, 11 October 1984, 08:04-EDT
From: Charles Hornig <Hornig at SCRC-STONY-BROOK>
Subject: Latency time in saving data from Namespace Editor 
To: Scott Cyphers <SR.EHPYC at MIT-SPEECH>,
    Kent M. Pitman <KMP at MIT-MC>
cc: BUG-LISPM at MIT-OZ
In-Reply-To: <SR.EHPYC.12054109822.BABYL@MIT-SPEECH>
Message-ID: <841011080456.4.HORNIG@PEACE.SCRC.Symbolics>

    Date: 9 Oct 1984  14:42 EDT (Tue)
    From: Scott Cyphers <SR.EHPYC@MIT-SPEECH>

    I've watched LM15 do an update.  It writes out that whole long file
    every time.  Can't it just do an append, or else append to a changes
    file and update the big one at a more convenient time?

This whole thing was designed before appending existed.  The next time
we redesign it (Release 7, maybe) we will consider making it do fewer
file operations.
11-Oct-84 10:33:54-EDT,1155;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 11 Oct 84 10:33-EDT
Date: Thursday, 11 October 1984, 10:32-EDT
From: Webster Dove <dove at MIT-BUGS-BUNNY>
Subject: stack efficiency
To: BUG-LISPM at MIT-OZ
Fcc: bugs:/syla/dspg/dove/mbox

In Symbolics 3600 Release 5.2, UTIL 1.5, FPA 1.0,
Experimental IP-TCP 15.3, on Lisp Machine Tweety Pie:

Why does the variable TMP have to be pushed on the stack before being
operated upon?  Couldn't steps 2,4,7,12,14 be eliminated?

;;; -*- Mode: LISP -*-

(DEFUN TEST (N M)
  (LET ((TMP N))
    (SETQ TMP (+ TMP 3))
    (SETQ TMP (* TMP M))
    (SETQ TMP (\\ TMP 3))
    (INCF TMP)))

 #|
TEST:
  0 ENTRY: 2. REQUIRED, 0. OPTIONAL
  1 PUSH-LOCAL FP|0             ;N      creating TMP(FP|2)
  2 PUSH-LOCAL FP|2             ;TMP
  3 BUILTIN +-INTERNAL STACK 3.
  4 MOVEM-LOCAL FP|2            ;TMP
  5 PUSH-LOCAL FP|1             ;M
  6 BUILTIN *-INTERNAL STACK 
  7 MOVEM-LOCAL FP|2            ;TMP
 10 PUSH-IMMED 3.
 11 CALL-2-STACK #'SYS:\\-INTERNAL
 12 MOVEM-LOCAL FP|2            ;TMP
 13 BUILTIN +-INTERNAL STACK 1.
 14 MOVEM-LOCAL FP|2            ;TMP
 15 RETURN-STACK 
 |#
11-Oct-84 15:13:56-EDT,817;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 11 Oct 84 15:13-EDT
Date: 11 Oct 1984  15:17 EDT (Thu)
Message-ID: <SR.EHPYC.12054640407.BABYL@MIT-SPEECH>
From: Scott Cyphers <SR.EHPYC@MIT-SPEECH>
Subject: Cadr microcode question
To:   bug-lispm@oz

One of our server LM2s runs a Versatec, and has a magic specially
microcoded function passed down through the systems for several years
which rotates a pixel array (like a screen) 90 degrees almost
instantaneously.  Among the magic associated with making this work is
an initialization which adds ua:ua-reboot to the :WARM initialization
list.  Twice, in maybe two months, this has somehow managed to undo
itself.  Does anyone who's worked with Cadr microcode have any ideas on
what kind of thing might cause a ua:ua-reboot to undo itself?

Thanks
11-Oct-84 15:32:00-EDT,2280;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 11 Oct 84 15:31-EDT
Received: from SCRC-CUYAHOGA by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 107096; Thu 11-Oct-84 15:28:13-EDT
Date: Thursday, 11 October 1984, 15:25-EDT
From: Robert A. Cassels <Cassels at SCRC-TENEX>
Subject: stack efficiency
To: dove at MIT-BUGS-BUNNY, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 11 Oct 84 10:32-EDT from Webster Dove <dove at MIT-BUGS-BUNNY>
Message-ID: <841011152555.4.CASSELS@CUYAHOGA.SCRC.Symbolics>

    Date: Thursday, 11 October 1984, 10:32-EDT
    From: Webster Dove <dove at MIT-BUGS-BUNNY>

    In Symbolics 3600 Release 5.2, UTIL 1.5, FPA 1.0,
    Experimental IP-TCP 15.3, on Lisp Machine Tweety Pie:

    Why does the variable TMP have to be pushed on the stack before being
    operated upon?  Couldn't steps 2,4,7,12,14 be eliminated?

    ;;; -*- Mode: LISP -*-

    (DEFUN TEST (N M)
      (LET ((TMP N))
	(SETQ TMP (+ TMP 3))
	(SETQ TMP (* TMP M))
	(SETQ TMP (\\ TMP 3))
	(INCF TMP)))

     #|
    TEST:
      0 ENTRY: 2. REQUIRED, 0. OPTIONAL
      1 PUSH-LOCAL FP|0             ;N      creating TMP(FP|2)
      2 PUSH-LOCAL FP|2             ;TMP
      3 BUILTIN +-INTERNAL STACK 3.
      4 MOVEM-LOCAL FP|2            ;TMP
      5 PUSH-LOCAL FP|1             ;M
      6 BUILTIN *-INTERNAL STACK 
      7 MOVEM-LOCAL FP|2            ;TMP
     10 PUSH-IMMED 3.
     11 CALL-2-STACK #'SYS:\\-INTERNAL
     12 MOVEM-LOCAL FP|2            ;TMP
     13 BUILTIN +-INTERNAL STACK 1.
     14 MOVEM-LOCAL FP|2            ;TMP
     15 RETURN-STACK 
     |#

Yes, although figuring this out in general is expensive.  You need to
verify that no one is going to use or change the value of FP|2.  This is
harder than it looks, since there might be a locative to TMP.  There are
well-known compiler techniques for doing this sort of optimization, but
there is currently no structure in the compiler for adding them.

Most humans wouldn't write this kind of code.  Is this a rhetorical
question, or do you have a need for better optimization of this sort of
thing?  Some of the cases could be optimized specially -- the MOVEM
before the RETURN is easy.  Can you identify special cases which would
be especially useful?
11-Oct-84 16:53:38-EDT,2896;000000000000
Received: from MIT-LENNON by MIT-OZ via Chaosnet; 11 Oct 84 16:52-EDT
Date: Thursday, 11 October 1984, 16:49-EDT
From: Ken Haase <KWH at MIT-OZ>
Subject: Distribution dumping of bands.
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 Release 5.2, ARLO 25.23, ARLOX 5.19, FEP 18, ARLO,
ARLOX 10/11/84, on Lisp Machine John Lennon:

This happened while trying to place a band on a distribution tape.

>>Error: Invalid byte-size 16 for character mode in OPEN.
         For FEP0:>ARLO-DISTRIBUTION.LOAD
While in the function FS:FEP-PATHNAME-ERROR  (:METHOD FS:FEP-FILE-ACCESS-PATH :OPEN)  (:METHOD FS:ACTIVE-PATHNAME-MIXIN :OPEN)

FS:FEP-PATHNAME-ERROR:  (P.C. = 15)
   Arg 0 (PATHNAME): #<FEP-PATHNAME "FEP0:>ARLO-DISTRIBUTION.LOAD">
   Arg 1 (ERROR-STRING): "Invalid byte-size ~D for character mode in OPEN."
   Rest arg (ARGS): (16.)

(:METHOD FS:FEP-FILE-ACCESS-PATH :OPEN):  (P.C. = 213)
   Arg 0 (SELF): #<FEP-FILE-ACCESS-PATH FEP0 1315650>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:FEP-FILE-ACCESS-PATH -- 10. IV's, 1. FL's 77521300>
   Arg 2 (OPERATION): :OPEN
   Arg 3 (TRANSLATED-PATHNAME): #<FEP-PATHNAME "FEP0:>ARLO-DISTRIBUTION.LOAD">
   Arg 4 (PATHNAME): #<FEP-PATHNAME "FEP0:>ARLO-DISTRIBUTION.LOAD">
   Rest arg: (:DIRECTION :INPUT :BYTE-SIZE 16. :CHARACTERS T)

(:METHOD FS:ACTIVE-PATHNAME-MIXIN :OPEN):  (P.C. = 14)
   Arg 0 (SELF): #<FEP-PATHNAME "FEP0:>ARLO-DISTRIBUTION.LOAD">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:ACTIVE-PATHNAME-MIXIN -- 1. IV's, 0. FL's 74365665>
   Arg 2 (OPERATION): :OPEN
   Arg 3 (PATHNAME): #<FEP-PATHNAME "FEP0:>ARLO-DISTRIBUTION.LOAD">
   Rest arg (OPTIONS): (:DIRECTION :INPUT :BYTE-SIZE 16. :CHARACTERS T)

FS:COMMON-LISP-OPEN:  (P.C. = 445)
   Arg 0 (PATHNAME): #<FEP-PATHNAME "FEP0:>ARLO-DISTRIBUTION.LOAD">
   Arg 1 (KEYWORD-ARGS): (:CHARACTERS T :BYTE-SIZE 16.)

OPEN:  (P.C. = 255)
   Arg 0 (PATHNAME): #<FEP-PATHNAME "FEP0:>ARLO-DISTRIBUTION.LOAD">
   Rest arg (KEYWORD-ARGS): (:CHARACTERS T :BYTE-SIZE 16.)

DIS:DISTRIBUTION-FILE-WRITER:  (P.C. = 62)
   Arg 0 (STREAM): #<EMBEDDED-LENGTH-CHARACTER-OUTPUT-STREAM 1412357>
   Arg 1 (KEY): "PARTITION"
   Arg 2 (REALPATH): #<FEP-PATHNAME "FEP0:>ARLO-DISTRIBUTION.LOAD">
   Arg 3 (REPORTPATH): #<FEP-PATHNAME "FEP0:>ARLO-DISTRIBUTION.LOAD">
   Arg 4 (CHARACTERS): T
   Arg 5 (SYSTEM): "BAND"
   Arg 6 (ADDITIONAL): NIL

DIS:WRITE-DISTRIBUTION-BAND:  (P.C. = 14)
   Arg 0 (BAND): <DUMP-BAND FEP file FEP0:>ARLO-DISTRIBUTION.LOAD 1407664>
   Arg 1 (STREAM): #<EMBEDDED-LENGTH-CHARACTER-OUTPUT-STREAM 1412357>

DIS:WRITE-DISTRIBUTION-TAPE:  (P.C. = 312)

Rest of stack:
SI:*EVAL:  (P.C. = 370)
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 200)
SI:LISP-COMMAND-LOOP:  (P.C. = 115)
ARLO-TOP-LEVEL1:  (P.C. = 36)  (from ARLO: SOURCES; WHISTLES)
SI:PROCESS-RUN-FUNCTION-INTERNAL:  (P.C. = 51)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
11-Oct-84 18:58:04-EDT,1184;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 11 Oct 84 18:57-EDT
Received: from SCRC-CONCORD by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 107250; Thu 11-Oct-84 18:48:22-EDT
Date: Thursday, 11 October 1984, 18:47-EDT
From: Bernard S. Greenberg <BSG at SCRC-TENEX>
Subject: Distribution dumping of bands.
To: KWH at MIT-OZ, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 11 Oct 84 16:49-EDT from Ken Haase <KWH at MIT-OZ>
Message-ID: <841011184741.0.BSG@CONCORD.SCRC.Symbolics>

    Date: Thursday, 11 October 1984, 16:49-EDT
    From: Ken Haase <KWH at MIT-OZ>

    In Symbolics 3600 Release 5.2, ARLO 25.23, ARLOX 5.19, FEP 18, ARLO,
    ARLOX 10/11/84, on Lisp Machine John Lennon:

    This happened while trying to place a band on a distribution tape.

    >>Error: Invalid byte-size 16 for character mode in OPEN.
	     For FEP0:>ARLO-DISTRIBUTION.LOAD
    While in the function FS:FEP-PATHNAME-ERROR  (:METHOD FS:FEP-FILE-ACCESS-PATH :OPEN)  (:METHOD FS:ACTIVE-PATHNAME-MIXIN :OPEN)
You can't dump 3600 bands to distribution tape.  Use the FEP tools.
The menu that thinks that you can do this dumping will be
removed shortly.  

Sorry!
11-Oct-84 19:57:12-EDT,6005;000000000000
Received: from SCRC-YUKON by MIT-OZ via Chaosnet; 11 Oct 84 19:56-EDT
Received: from SCRC-HUDSON by SCRC-YUKON via CHAOS with CHAOS-MAIL id 67007; Thu 11-Oct-84 19:56:03-EDT
Date: Thursday, 11 October 1984, 19:56-EDT
From: Robert W. Kerns <RWK at SCRC-YUKON>
Subject: [JCMA at MIT-OZ: VMS lossage]
To: Scott McKay <SWM at SCRC-QUABBIN>
cc: jcma at MIT-OZ, bug-lispm at MIT-OZ, matsumoto at SCRC-YUKON,
    hukee at SCRC-YUKON
In-Reply-To: <841011111434.8.SWM@THAMES.SCRC.Symbolics>
Message-ID: <841011195611.1.RWK@HUDSON.SCRC.Symbolics>

    Date: Thu, 11 Oct 84 11:14 EDT
    From: Scott McKay <SWM@SCRC-QUABBIN.ARPA>

    I never know what to do about these kinds of bugs.  Maybe if you tell me
    how they're fixed in the future, and what to do about them now, I'll be
    able to relate that info to other people.

Bug?  What bug?  Not our bug!  DEC's BUG!  He's trying to keep files on
VMS with names that VMS doesn't like.  Send DEC an SPR!  What can we do
about it?

<< hysterics, screams, yells about "that's 5 times in two days I've
been asked that!", much crazed laughter >>

Well, to answer my own question, we can kludge.  There's such a kludge in
the system for the system's files.  You can do it too.  See the file
SYS:SYS;SYS.LOGTRAN.  (Unless you're at SCRC; then see the file
Y:>Rel-5>sys>sys.logtran).  In there, you'll find an explanation of how
it works, and how the SYS host is set up.  But see the disclaimer below!

A somewhat easier, but less tasty, kludge is to name your files so that VMS
likes them.  (In this case, that will mean calling your system something
9 characters or less without any hyphens in it!)

An only-slightly-more-tasteful kludge is to upgrade to VMS 4.0, and use
_ instead of - in your filenames.  At least your filenames can then be
a reasonable length.

* * * DISCLAIMER * * *

THIS IS NOT HOW IT WILL BE DONE IN RELEASE 6.0.  In Release 6.0, there is
a default set of "translation rules" which include a heuristic that will handle
the usual cases of VMS filename translation, and a different mechanism for
specifying any exceptional cases needed.  This will be documented (although
I haven't written any documentation yet, it's on my whiteboard).

    ----Begin forwarded message----
    Date: Tuesday, 9 October 1984, 11:17-EDT
    From: JCMA@MIT-OZ
    Subject: VMS lossage
    To: BUG-LISPM@MIT-OZ

    In Symbolics 3600 Release 5.2, Experimental RELATUS 130.149, FEP 18, on Lisp Machine Janis Joplin:

    >>Error: "RELATUS-VISION" is an invalid file name for FS:VMS-PATHNAME
    While in the function SEND  SIGNAL  (:METHOD FS:PATHNAME :VALIDATE-COMPONENT)

    (:METHOD FS:PATHNAME :VALIDATE-COMPONENT):  (P.C. = 40)
       Arg 0 (SELF): #<VMS-PATHNAME "PIG:USRD$:[RELATUS.VISION].CWN">
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:PATHNAME -- 0. IV's, 1. FL's 70103465>
       Arg 2 (OPERATION): :VALIDATE-COMPONENT
       Arg 3 (TEST-ARG): "RELATUS-VISION"
       Arg 4 (TEST-ARG-LOC): #<DTP-LOCATIVE 101160632>
       Arg 5 (VALID-MSG): :RAW-NAME
       Arg 6 (TEST-MSG): :VALID-NAME-P
       Arg 7 (CASE-MSG): :CASE-NAME
       Arg 8 (UNCASE-MSG): :UNCASE-NAME
       Arg 9 (COMPONENT): :NAME
       Arg 10 (PRETTY-NAME): "file name"

    (:METHOD FS:PATHNAME :VALIDATE):  (P.C. = 43)
       Arg 0 (SELF): #<VMS-PATHNAME "PIG:USRD$:[RELATUS.VISION].CWN">
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:PATHNAME -- 0. IV's, 1. FL's 70103465>
       Arg 2 (OPERATION): :VALIDATE

    (:METHOD FS:PATHNAME-HASH-TABLE-MIXIN :GET-PATHNAME):  (P.C. = 27)
       Arg 0 (SELF): #<CASE-INSENSITIVE-PATHNAME-HASH-TABLE PYGMALION>
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:PATHNAME-HASH-TABLE-MIXIN -- 1. IV's, 0. FL's 73657450>
       Arg 2 (OPERATION): :GET-PATHNAME
       Arg 3 (DEV): "USRD$"
       Arg 4 (DIR): ("RELATUS" "VISION")
       Arg 5 (NAM): "RELATUS-VISION"
       Arg 6 (TYP): "CWN"
       Arg 7 (VRS): :NEWEST
       Arg 8 (KEY): ("USRD$" ("RELATUS" "VISION") "RELATUS-VISION" "CWN" :NEWEST)

    (:METHOD NET:PATHNAME-HOST-MIXIN :GET-PATHNAME):  (P.C. = 27)
       Arg 0 (SELF): #<VMS-HOST PYGMALION 70136034>
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NET:PATHNAME-HOST-MIXIN -- 2. IV's, 0. FL's 73722551>
       Arg 2 (OPERATION): :GET-PATHNAME
       Arg 3 (DEV): "USRD$"
       Arg 4 (DIR): ("RELATUS" "VISION")
       Arg 5 (NAM): "RELATUS-VISION"
       Arg 6 (TYP): "CWN"
       Arg 7 (VRS): :NEWEST

    FS:MAKE-PATHNAME-1:  (P.C. = 562)
       Rest arg (OPTIONS): (:DEFAULT-HOST #<VMS-HOST PYGMALION 70136034> :DEFAULT-DEVICE "USRD$" :DEFAULT-DIRECTORY ("RELATUS" "VISION") :DEFAULT-NAME "FOO" :DEFAULT-TYPE "LSP" ...)

    (:METHOD FS:PATHNAME :NEW-PATHNAME):  (P.C. = 21)
       Arg 0 (SELF): #<VMS-PATHNAME "PIG:USRD$:[RELATUS.VISION]FOO.LSP">
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:PATHNAME -- 0. IV's, 1. FL's 70103465>
       Arg 2 (OPERATION): :NEW-PATHNAME
       Rest arg (OPTIONS): (:NAME "RELATUS-VISION" :CANONICAL-TYPE :CWARNS :VERSION :NEWEST)

    (:METHOD FS:VMS-MAILBOX-PATHNAME-MIXIN :COMBINED :NEW-PATHNAME):  (P.C. = 37)
       Arg 0 (SELF): #<VMS-PATHNAME "PIG:USRD$:[RELATUS.VISION]FOO.LSP">
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:VMS-MAILBOX-PATHNAME-MIXIN -- 2. IV's, 2. FL's 70103472>
       Rest arg (.DAEMON-CALLER-ARGS.): (:NEW-PATHNAME :NAME "RELATUS-VISION" :CANONICAL-TYPE :CWARNS :VERSION :NEWEST)

    (:PROPERTY :BATCH SI:MAKE-SYSTEM-KEYWORD):  (P.C. = 21)

    Rest of stack:
    MAKE-SYSTEM:  (P.C. = 125)
    SI:*EVAL:  (P.C. = 370)
    TV:MOUSE-SENSITIVE-EVAL-FOR-TOP-LEVEL:  (P.C. = 35)  (from RL: UTILS; WMAGIC)
    SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 200)
    SI:MY-LISP-COMMAND-LOOP:  (P.C. = 116)  (from RL: U; FIX-LISP-COMMAND-LOOP)
    TV:MOUSE-SENSITIVE-LISP-TOP-LEVEL1:  (P.C. = 32)  (from RL: UTILS; WMAGIC)
    SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
    ----End forwarded messages----
12-Oct-84 02:36:39-EDT,2597;000000000000
Received: from MIT-JANIS by MIT-OZ via Chaosnet; 12 Oct 84 02:36-EDT
Date: Friday, 12 October 1984, 02:41-EDT
From: JCMA@MIT-OZ
Subject: [PENTLAND at SRI-AI: ti benchmarks]
To: bug-lispm@MIT-OZ

Here are the details on Pentland's timimgs.

Received: from MIT-MC by MIT-OZ via Chaosnet; 11 Oct 84 02:55-EDT
Date: Wed 10 Oct 84 23:50:31-PDT
From: PENTLAND@SRI-AI.ARPA
Subject: ti benchmarks
To: tyson@SRI-AI.ARPA, jcma%MIT-OZ@MIT-MC.ARPA, poser@SU-CSLI.ARPA

Here are the benchmarks I reported.  They are simple because I had
to type them in during the short period of time available to me.

;;; -*- Mode: LISP -*-
;;; SIMPLE benchmarks for typing in short time 

(defun meter (s)
  (setq time (time))
  (eval s)
  (time-difference (time) time))

(setq ar1 (make-array '(100. 100.) ':type art-8b) 
ar2 (make-array '(100. 100.) ':type art-8b) 
bigar (make-array '(1000. 1000.) ':type art-8b))

(defflavor ship (a b c d e) () :gettable-instance-variables 
:settable-instance-variables :initable-instance-variables)

(defun blt (ar1 ar2) 
  (loop for i from 0 below 1000. do 
     (bitblt tv:alu-seta 100. 100. ar1 0 0 ar2 0 0)))

(defun func (&optional (x 10000.)) (if (plusp x) (func (- x 1))))

(defun num (&optional (sum 0.0))  ; repeat with * instead of //, etc.
	(loop for i from 1.0 below 10000.0 by 1.0 do 
		(setq sum (* sum i))))

(defun nums (&optional (sum 0s0))   ; also repeat with // etc
	(loop for i from 1s0 below 10000s0 by 1s0 do
		 (setq sum (* sum i))))

(defun numo (&optional (sum 0.0))  ; loop overhead 14/60th for 3600
	(loop for i from 0.0 below 10000.0 by 1.0 do ())) ; 21/60 for TI

(defun numos (&optional (sum 0s0)) ; 16/60 for TI, 24/60 for LM2
	(loop for i from 0s0 below 10000s0 by 1s0 do ()))

(defun consit () (loop for i from 0 below 10000. by 1 do (cons nil nil)))

(defun inst () 
	(loop for i from 0 below 1000. do 
		(make-instance 'ship ':a 0 ':b 0 ':c 0 ':d 0 ':e 0)))

(defun msg () (setq s (make-instance 'ship)) 
	(loop for i from 0 below 10000. do (send s ':set-a 1)))

(defun pager (bigar) 
  (loop for x from 0 below 1000. do
        (loop for y from 0 below 1000. do
              (aref bigar x y))))         
; running protocol: run until stable times are achieved 
;  e.g., (meter '(func)) need to extend stack several times 
; first time through
; timings 9 oct 84
	ti	lm2	3600
	270	730	441	bitblt
	31	70	16	func
	33	50	17	floating pt (averages over *, //, etc)
	25-40	130	17-40	cons
	140	234	52	inst  
	52	122	21	msg
	2250	7150	1600	pager (min no. 1/60th taken) 
-------
12-Oct-84 03:52:35-EDT,3266;000000000000
Received: from MIT-JANIS by MIT-OZ via Chaosnet; 12 Oct 84 03:52-EDT
Date: Friday, 12 October 1984, 03:57-EDT
From: JCMA@MIT-OZ
Subject: Flavor TMSing/compilation bug
To: BUG-LISPM@MIT-OZ

In Symbolics 3600 Release 5.2, Experimental RELATUS 130.160, FEP 18, on Lisp Machine Janis Joplin:

This hapened while trying to compile a whopper for a flavor which had had some
methods undefemethoded.  I had a flavor for which I undefmethoded several
methods.  I then mixed in a new mixin and redefined the methods on the new
mixin.  Everything worked ok until I got to a whopper.  then this happened.

>>Trap: The ASSQ microcode tried to take CAAR of (1085234407 (SYS:REAL-ARGLIST SI:*MACROARG*) (ARGLIST STRING &BODY TV:BODY) (:MACROS-EXPANDED (SI:XR-BQ-LIST* SI:XR-BQ-LIST))), which was a tail of the second argument.
While in the function SEND  SIGNAL  DBG:SIGNAL-TRAP
While compiling (:METHOD SENTENCE-REFERENCE-MIXIN :WHOPPER :POSIT)

SEND:  (P.C. = 6)
   Arg 0 (OBJECT): #<ASSQ-ELEMENT-TYPE-TRAP 32436243>
   Arg 1 (MESSAGE-NAME): :SIGNAL
   Rest arg (ARGUMENTS): (T)

SIGNAL:  (from RL: UTILS; KLUDGES)
   Arg 0 (FLAVOR): #<ASSQ-ELEMENT-TYPE-TRAP 32436243>
   Rest arg: NIL

DBG:SIGNAL-TRAP:  (P.C. = 3)
   Arg 0 (COND): #<ASSQ-ELEMENT-TYPE-TRAP 32436243>

SYS:MICROCODE-ERROR-HANDLER:  (P.C. = 101)
   Arg 0 (MICRO-PC): 2304
   Arg 1 (VMA): #<DTP-LOCATIVE 53656301>
   Arg 2 (MACRO-PC): NIL
   Arg 3 (OLD-INHIBIT-SCHEDULING-FLAG): #<DTP-ODD-PC 24465047>

ASSQ:  (P.C. = 3)
   Arg 0 (ITEM): SYS:SUBST-DEFINITION
   Arg 1 (IN-LIST): ((USER:FONT-SET DEFFLAVOR) 1085234407 (SYS:REAL-ARGLIST SI:*MACROARG*) (ARGLIST STRING &BODY TV:BODY) (:MACROS-EXPANDED (SI:XR-BQ-LIST* SI:XR-BQ-LIST)))

SI:DECLARED-DEFINITION-INTERNAL:  (P.C. = 115)
   Arg 0 (FUNCTION): WITH-WHOSTATE

SI:CACHED-LOCAL-DECLARATION:  (P.C. = 7)
   Arg 0 (FUNCTION): SI:DECLARED-DEFINITION-INTERNAL
   Arg 1 (ARG): WITH-WHOSTATE

SYS:DECLARED-DEFINITION:  (P.C. = 4)
   Arg 0 (FUNCTION): WITH-WHOSTATE

Rest of stack:
COMPILER:COLLECT-TOP-LEVEL-MACROS-1:  (P.C. = 25)
COMPILER:COLLECT-TOP-LEVEL-MACROS-1:  (P.C. = 63)
COMPILER:COLLECT-TOP-LEVEL-MACROS:  (P.C. = 5)
COMPILER:PHASE-1-FUNCTION-DEFINITION:  (P.C. = 12)
COMPILER:PHASE-1-EXTERNAL-FUNCTION:  (P.C. = 24)
COMPILER:RUN-PHASE-1-FUNCTION:  (P.C. = 67)
COMPILER:COMPILE-DEFINITION-1:  (P.C. = 10)
COMPILER:COMPILE-DEFINITION:  (P.C. = 43)
(:INTERNAL COMPILER:COMPILE-TO-CORE 0):  (P.C. = 5)
COMPILER:COMPILE-TO-CORE:  (P.C. = 12)
COMPILER:COMPILE-FORM-FUNCTION:  (P.C. = 41)
COMPILER:COMPILE-FROM-STREAM-1:  (P.C. = 306)
COMPILER:COMPILE-FROM-STREAM-1:  (P.C. = 172)
SYS:COMPILER-LET-INTERNAL:  (P.C. = 226)
COMPILER:COMPILE-FROM-STREAM-1:  (P.C. = 264)
COMPILER:PROCESS-FORMS-FROM-STREAM:  (P.C. = 117)
COMPILER:COMPILE-FROM-STREAM:  (P.C. = 235)
ZWEI:COMPILE-INTERVAL:  (P.C. = 141)
ZWEI:COMPILE-PRINT-INTERVAL:  (P.C. = 76)
ZWEI:COMPILE-DEFINITION-INTERNAL:  (P.C. = 73)
ZWEI:COM-COMPILE-REGION:  (P.C. = 5)
ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 214)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 41)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
12-Oct-84 03:57:21-EDT,3730;000000000000
Received: from MIT-JANIS by MIT-OZ via Chaosnet; 12 Oct 84 03:57-EDT
Date: Friday, 12 October 1984, 04:02-EDT
From: JCMA@MIT-OZ
Subject: Bogus bug report [Flavor TMSing/compilation bug]
To: JCMA@MIT-OZ
Cc: BUG-LISPM@MIT-OZ
In-reply-to: The message of 12 Oct 84 03:57-EDT from JCMA at MIT-OZ

Ignore this it is some problem with a macro.

    Date: Friday, 12 October 1984, 03:57-EDT
    From: JCMA@MIT-OZ

    In Symbolics 3600 Release 5.2, Experimental RELATUS 130.160, FEP 18, on Lisp Machine Janis Joplin:

    This hapened while trying to compile a whopper for a flavor which had had some
    methods undefemethoded.  I had a flavor for which I undefmethoded several
    methods.  I then mixed in a new mixin and redefined the methods on the new
    mixin.  Everything worked ok until I got to a whopper.  then this happened.

    >>Trap: The ASSQ microcode tried to take CAAR of (1085234407 (SYS:REAL-ARGLIST SI:*MACROARG*) (ARGLIST STRING &BODY TV:BODY) (:MACROS-EXPANDED (SI:XR-BQ-LIST* SI:XR-BQ-LIST))), which was a tail of the second argument.
    While in the function SEND  SIGNAL  DBG:SIGNAL-TRAP
    While compiling (:METHOD SENTENCE-REFERENCE-MIXIN :WHOPPER :POSIT)

    SEND:  (P.C. = 6)
       Arg 0 (OBJECT): #<ASSQ-ELEMENT-TYPE-TRAP 32436243>
       Arg 1 (MESSAGE-NAME): :SIGNAL
       Rest arg (ARGUMENTS): (T)

    SIGNAL:  (from RL: UTILS; KLUDGES)
       Arg 0 (FLAVOR): #<ASSQ-ELEMENT-TYPE-TRAP 32436243>
       Rest arg: NIL

    DBG:SIGNAL-TRAP:  (P.C. = 3)
       Arg 0 (COND): #<ASSQ-ELEMENT-TYPE-TRAP 32436243>

    SYS:MICROCODE-ERROR-HANDLER:  (P.C. = 101)
       Arg 0 (MICRO-PC): 2304
       Arg 1 (VMA): #<DTP-LOCATIVE 53656301>
       Arg 2 (MACRO-PC): NIL
       Arg 3 (OLD-INHIBIT-SCHEDULING-FLAG): #<DTP-ODD-PC 24465047>

    ASSQ:  (P.C. = 3)
       Arg 0 (ITEM): SYS:SUBST-DEFINITION
       Arg 1 (IN-LIST): ((USER:FONT-SET DEFFLAVOR) 1085234407 (SYS:REAL-ARGLIST SI:*MACROARG*) (ARGLIST STRING &BODY TV:BODY) (:MACROS-EXPANDED (SI:XR-BQ-LIST* SI:XR-BQ-LIST)))

    SI:DECLARED-DEFINITION-INTERNAL:  (P.C. = 115)
       Arg 0 (FUNCTION): WITH-WHOSTATE

    SI:CACHED-LOCAL-DECLARATION:  (P.C. = 7)
       Arg 0 (FUNCTION): SI:DECLARED-DEFINITION-INTERNAL
       Arg 1 (ARG): WITH-WHOSTATE

    SYS:DECLARED-DEFINITION:  (P.C. = 4)
       Arg 0 (FUNCTION): WITH-WHOSTATE

    Rest of stack:
    COMPILER:COLLECT-TOP-LEVEL-MACROS-1:  (P.C. = 25)
    COMPILER:COLLECT-TOP-LEVEL-MACROS-1:  (P.C. = 63)
    COMPILER:COLLECT-TOP-LEVEL-MACROS:  (P.C. = 5)
    COMPILER:PHASE-1-FUNCTION-DEFINITION:  (P.C. = 12)
    COMPILER:PHASE-1-EXTERNAL-FUNCTION:  (P.C. = 24)
    COMPILER:RUN-PHASE-1-FUNCTION:  (P.C. = 67)
    COMPILER:COMPILE-DEFINITION-1:  (P.C. = 10)
    COMPILER:COMPILE-DEFINITION:  (P.C. = 43)
    (:INTERNAL COMPILER:COMPILE-TO-CORE 0):  (P.C. = 5)
    COMPILER:COMPILE-TO-CORE:  (P.C. = 12)
    COMPILER:COMPILE-FORM-FUNCTION:  (P.C. = 41)
    COMPILER:COMPILE-FROM-STREAM-1:  (P.C. = 306)
    COMPILER:COMPILE-FROM-STREAM-1:  (P.C. = 172)
    SYS:COMPILER-LET-INTERNAL:  (P.C. = 226)
    COMPILER:COMPILE-FROM-STREAM-1:  (P.C. = 264)
    COMPILER:PROCESS-FORMS-FROM-STREAM:  (P.C. = 117)
    COMPILER:COMPILE-FROM-STREAM:  (P.C. = 235)
    ZWEI:COMPILE-INTERVAL:  (P.C. = 141)
    ZWEI:COMPILE-PRINT-INTERVAL:  (P.C. = 76)
    ZWEI:COMPILE-DEFINITION-INTERNAL:  (P.C. = 73)
    ZWEI:COM-COMPILE-REGION:  (P.C. = 5)
    ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
    ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
    (:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 214)
    (:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 41)
    ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)
    SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
12-Oct-84 06:50:50-EDT,487;000000000000
Received: from MIT-JANIS by MIT-OZ via Chaosnet; 12 Oct 84 06:50-EDT
Date: Friday, 12 October 1984, 06:56-EDT
From: JCMA@MIT-OZ
Subject: Monitoring Instance Variables
To: Bug-Lispm@MIT-OZ

In Symbolics 3600 Release 5.2, Experimental RELATUS 130.160, FEP 18, on Lisp Machine Janis Joplin:

Is there a facility for monitoring the values of instance variables of flavor
instances?  If there isn't, this would be a good feature for debugging
complicated object-oriented programs.
12-Oct-84 10:15:13-EDT,2028;000000000000
Received: from SCRC-RIVERSIDE by MIT-OZ via Chaosnet; 12 Oct 84 10:14-EDT
Received: from SCRC-MISSISSIPPI by SCRC-RIVERSIDE via CHAOS with CHAOS-MAIL id 24164; Fri 12-Oct-84 10:15:36-EDT
Date: Friday, 12 October 1984, 10:13-EDT
From: William Dubuque <Wgd at SCRC-TENEX>
Subject: Monitoring Instance Variables and abstraction
To: JCMA at MIT-OZ
Cc: Bug-Lispm at MIT-OZ, bil at MIT-MC

   Date: Friday, 12 October 1984, 06:56-EDT
   From: JCMA@MIT-OZ
   Subject: Monitoring Instance Variables
   To: Bug-Lispm@MIT-OZ
   
   In Symbolics 3600 Release 5.2, Experimental RELATUS 130.160, FEP 18, on 
   Lisp Machine Janis Joplin:
   
   Is there a facility for monitoring the values of instance variables of flavor
   instances?  If there isn't, this would be a good feature for debugging
   complicated object-oriented programs.

Ideally, the notion of an instance variable would be suitably abstracted
so that one could just wrap an appropriate monitor around the desired
instance variable operations. Realistically, however, since the Flavor
system has a non-uniform base (its data structures and routines are
not first-class objects) this is not currently conceivable. Similarly,
one can't define new methods of flavor or method compostion because 
these operations have also not been suitable abstracted (indeed, 
a flavor descriptor is not even an flavor instance). Other, more
uniformly designed message passing systems (e.g. Smalltalk and, to
some degree my (incomplete) MacLisp flavor system) handle such 
problems easily. Over the rainbow lies the system that allows you
to formally (but easily--the two are not contradictory) specify
concepts so that you aren't inhibited by anyone's (especially
the system designers) particular interpretation of objects: 
all you need do is translate his specifications and concepts
into your domain. Given the every increasing research on
abstract data types and specification languages this may even
prove feasible in the not-too-distant future. 
12-Oct-84 15:42:45-EDT,772;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 12 Oct 84 15:41-EDT
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 107609; Fri 12-Oct-84 15:40:36-EDT
Date: Friday, 12 October 1984, 15:42-EDT
From: David C. Plummer <DCP at SCRC-TENEX>
Subject: [PENTLAND at SRI-AI: ti benchmarks]
To: JCMA at MIT-OZ, bug-lispm at MIT-OZ
In-Reply-To: The message of 12 Oct 84 02:41-EDT from JCMA at MIT-OZ
Message-ID: <841012154206.3.DCP@NEPONSET.SCRC.Symbolics>

    Date: Friday, 12 October 1984, 02:41-EDT
    From: JCMA@MIT-OZ

    Here are the details on Pentland's timimgs.

His metering method is crazed, as are some of his attempts to meter
particular things.  I think I'll wait for the movie, uh, I mean Gabriel
benchmarks...
12-Oct-84 15:53:43-EDT,1327;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 12 Oct 84 15:53-EDT
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 107615; Fri 12-Oct-84 15:46:02-EDT
Date: Friday, 12 October 1984, 15:47-EDT
From: David C. Plummer <DCP at SCRC-TENEX>
Subject: Monitoring Instance Variables
To: JCMA at MIT-OZ, Bug-Lispm at MIT-OZ
In-Reply-To: The message of 12 Oct 84 06:56-EDT from JCMA at MIT-OZ
Message-ID: <841012154734.4.DCP@NEPONSET.SCRC.Symbolics>

    Date: Friday, 12 October 1984, 06:56-EDT
    From: JCMA@MIT-OZ

    In Symbolics 3600 Release 5.2, Experimental RELATUS 130.160, FEP 18, on Lisp Machine Janis Joplin:

    Is there a facility for monitoring the values of instance variables of flavor
    instances?  If there isn't, this would be a good feature for debugging
    complicated object-oriented programs.

This is special case of monitoring a set of memory locations, right?
The special case is that all the memory locations you want to monitor
are within one instance.  Therefore, what you are asking for is the MAR
feature, which is one various people's back burner.

Now I do have this other tool... It allows you to trace ONE instance
(not all instances of a flavor).  If you describe what you are really
trying to do, I'll tell you if my tool applies.
12-Oct-84 17:47:06-EDT,1074;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 12 Oct 84 17:46-EDT
Received: from Cabernet.MS by ArpaGateway.ms ; 12 OCT 84 14:46:50 PDT
Date: Fri, 12 Oct 84  14:45 PDT
From: dekleer.PA@XEROX.ARPA
Sender: johan.PA@XEROX.ARPA
Subject: TI timings.
To: bug-lispm%mit-oz@MIT-MC.ARPA

Just because I didn't have anything better to do I ran the identical
program on my machine (first column):

CADR	ti	lm2	3600
434	270	730	441	bitblt
50	31	70	16	func
33	33	50	17	floating pt (averages over *, //, etc)
26-48	25-40	130	17-40	cons
120-128	140	234	52	inst  
73	52	122	21	msg
3452	2250	7150	1600	pager (min no. 1/60th taken) 

Now either I am a very good kit builder, or the timings given by
pentland are given in octal (the CADR timings I did are decimal).  Or
maybe the ti is in decimal?  Statistically its pretty improbable to have
no 8's or 9's in 60 digits.  Even translating to octal-decimal the LM2
timings seem a little high.  So what does the product of one meaningless
number with another equal ...

Also waiting for the movie version.

-------
13-Oct-84 00:06:10-EDT,1625;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 13 Oct 84 00:05-EDT
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 107706; Fri 12-Oct-84 19:09:18-EDT
Date: Friday, 12 October 1984, 19:10-EDT
From: David C. Plummer <DCP at SCRC-TENEX>
Subject: Benchmarking
To: JCMa at MIT-OZ, Bug-LispM at MIT-OZ
Message-ID: <841012191047.9.DCP@NEPONSET.SCRC.Symbolics>

The lesson to be learned is that if you are going to benchmark, at least
have an idea of what you are doing.  I'll admit my methods have some
flaws, but look at the amount of information I get from one of my
metering routines:

(arglist 'mtf) ; stands for make-timing-function
(NAME ARGS &BODY FORMS)

(mtf meter-cons (a b) (cons a b))

(arglist 'meter-cons)
;; first value args, second value values
(.COUNT. .NBUCKETS. .BUCKET-RES. .BASE-BUCKET. A B)
(TOTAL-UTIME-COUNTED-SAMPLES COUNT-SAMPLES USECS-PER-COUNTED-SAMPLE SAMPLES-BEFORE-FIRST-BUCKET SAMPLES-AFTER-LAST-BUCKET)

(meter-cons 10000. 1000. 1 0 'the-car 'the-cdr)
    0 samples took less than      0 microseconds (00.0000%)
 7880 samples      took           8 microseconds (78.8000%)
 2093 samples      took           9 microseconds (20.9300%)
    1 samples      took          11 microseconds (00.0100%)
    5 samples      took         146 microseconds (00.0500%)
    2 samples      took         148 microseconds (00.0200%)
   19 samples took more than   1000 microseconds (00.1900%)
    Sample-usec factor (doesn't count out of range samples): 82914. for 9981. samples
241742 ;; octal
23375  ;; octal
8.307183
0  ;; octal
23 ;; octal
13-Oct-84 13:28:02-EDT,3452;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 13 Oct 84 13:27-EDT
Date: Wednesday, 10 October 1984, 17:32-EDT
From: A Lisp Machine <joseph at SCRC-QUABBIN>
Subject: Bug in the Flavor System
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 Release 5.2, FEP 18, on Lisp Machine Janis Joplin:

If a flavor requires a flavor, and the required flavor is to be
instantiated.  The flavor system will go into an infinite loop when
compiled method tables are loaded.  The function below drives that loop.
The same might happen for included flavors, but I didn't check.

(DEFUN FLAVOR-DEPENDS-ON-FLAVOR-P (FL FLAVOR-DEPENDS-ON &AUX RFLS)
  ;; Do fast top-level checks first
  (OR (MEMQ FLAVOR-DEPENDS-ON (FLAVOR-DEPENDS-ON FL))
      (MEMQ FLAVOR-DEPENDS-ON (FLAVOR-INCLUDES FL))
==>   (MEMQ FLAVOR-DEPENDS-ON (SETQ RFLS (GET (LOCF (FLAVOR-PLIST FL)) ':REQUIRED-FLAVORS)))
      (FLAVORS-DEPEND-ON-FLAVOR-P (FLAVOR-DEPENDS-ON FL) FLAVOR-DEPENDS-ON)
      (FLAVORS-DEPEND-ON-FLAVOR-P (FLAVOR-INCLUDES FL) FLAVOR-DEPENDS-ON)
      (FLAVORS-DEPEND-ON-FLAVOR-P RFLS FLAVOR-DEPENDS-ON)
      ;; Special case.  This isn't exactly right, but is only used for an error message
      (EQ FLAVOR-DEPENDS-ON 'VANILLA-FLAVOR)))

Here's where I found this out.

>>Error: The control stack overflowed.
While in the function SI:FLAVORS-DEPEND-ON-FLAVOR-P  SI:FLAVOR-DEPENDS-ON-FLAVOR-P  SI:FLAVORS-DEPEND-ON-FLAVOR-P

SI:FLAVOR-DEPENDS-ON-FLAVOR-P:  (P.C. = 31)
   Arg 0 (FL): #<FLAVOR SENTENCE 35037560>
   Arg 1 (FLAVOR-DEPENDS-ON): TRANSFORM-KERN-SENTENCE-CONSTRAINT-POSTING-MIXIN
   Local 2 (RFLS): NIL

SI:GET-COMPONENT-FLAVOR-INFO:  (P.C. = 35)
   Arg 0 (FL): #<FLAVOR SENTENCE 35037560>
   Arg 1 (COMPONENT-FLAVOR): TRANSFORM-KERN-SENTENCE-CONSTRAINT-POSTING-MIXIN
   --Defaulted args:--
   Arg 2 (DONT-CREATE): NIL
   Arg 3 (FOR-SELF): NIL

SI:GET-FLAVOR-MAPPING-TABLE-FLAVOR-ARRAY-LEADER-INDEX:  (P.C. = 4)
   Arg 0 (FL): #<FLAVOR SENTENCE 35037560>
   Arg 1 (MAPPED-FLAVOR): TRANSFORM-KERN-SENTENCE-CONSTRAINT-POSTING-MIXIN

SYS:FIXUP-METHOD:  (P.C. = 154)
   Arg 0 (CCA): #<DTP-LOCATIVE 11177163>

SI:LOAD-COMPILED-FUNCTION:  (P.C. = 141)
   Arg 0 (STREAM): #<FILE-INPUT-BINARY-STREAM "RL: UTILS; AGENTTABL.BIN.NEWEST" 13673460>

SI:LOAD-BIN-OP-COMPILED-FUNCTION:  (P.C. = 7)
   Arg 0 (STREAM): #<FILE-INPUT-BINARY-STREAM "RL: UTILS; AGENTTABL.BIN.NEWEST" 13673460>

SI:BIN-LOAD-NEXT-COMMAND:  (P.C. = 24)
   Arg 0 (STREAM): #<FILE-INPUT-BINARY-STREAM "RL: UTILS; AGENTTABL.BIN.NEWEST" 13673460>

SI:BIN-NEXT-VALUE:  (P.C. = 5)
   Arg 0 (STREAM): #<FILE-INPUT-BINARY-STREAM "RL: UTILS; AGENTTABL.BIN.NEWEST" 13673460>

Rest of stack:
SI:LOAD-COMPILED-FUNCTION:  (P.C. = 45)
SI:LOAD-BIN-OP-COMPILED-FUNCTION:  (P.C. = 7)
SI:BIN-LOAD-NEXT-COMMAND:  (P.C. = 24)
SI:BIN-NEXT-VALUE:  (P.C. = 5)
SI:LOAD-BIN-OP-FDEFINE:  (P.C. = 5)
SI:BIN-LOAD-NEXT-COMMAND:  (P.C. = 24)
SI:BIN-LOAD-TOP-LEVEL:  (P.C. = 6)
(:METHOD ZWEI:MAJOR-MODE :DEFAULT :LOAD-BINARY-FILE):  (P.C. = 4)
SI:BIN-LOAD-FILE-INTERNAL:  (P.C. = 131)
SI:BIN-LOAD-FILE:  (P.C. = 22)
SI:FASLOAD-1:  (P.C. = 5)
SI:DO-FILE-TRANSFORMATIONS:  (P.C. = 242)
SI:PERFORM-TRANSFORMATIONS:  (P.C. = 166)
MAKE-SYSTEM:  (P.C. = 222)
SI:*EVAL:  (P.C. = 370)
PROGN:  (P.C. = 13)
SI:*EVAL:  (P.C. = 421)
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 200)
SI:LISP-COMMAND-LOOP:  (P.C. = 115)
SI:LISP-TOP-LEVEL1:  (P.C. = 22)
SI:LISP-TOP-LEVEL:  (P.C. = 7)
13-Oct-84 13:33:17-EDT,1744;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 13 Oct 84 13:32-EDT
Date: Thursday, 6 September 1984, 18:15-EDT
From: Kent M Pitman <kmp at MIT-MC>
Subject: Buffer-modified "*" in bad place in Zmacs mode line
To: BUG-LISPM at OZ

In Symbolics 3600 Release 4.5 on PA Lisp Machine Merlin:

The "*" indicating a modified buffer in Zmacs should go closer to
the head of the mode line. If the mode line is very long, it 
falls off the end and there is no visual annotation of the fact
that the buffer needs to be saved.

I suspect the current layout is partly for visual compatibility
with Emacs, but it's worth noting that Emacs will force the * in
at the right margin even if the other stuff on the modeline has
to be truncated, and that's not true for ZWEI (at least in Rel4).

In the Programmer's Apprentice environment, I change 
ZWEI:*MODE-LINE-LIST* as follows:

("KBE//ZMACS " 
 "(" ZWEI:*MODE-NAME-LIST*
     (ZWEI:*MODE-QUANTITY-NAME* " <" ZWEI:*MODE-QUANTITY-NAME* ">")
 ")"
 ZWEI:*BUFFER-MODIFIED-P*
 " "
 ZWEI:*ZMACS-BUFFER-NAME*
 ZWEI:*ZMACS-BUFFER-VERSION-STRING*
 (ZWEI:*FONT-NAME* "  Font: " ZWEI:*FONT-NAME*)
 (ZWEI:*MACRO-LEVEL* "  Macro-level: " ZWEI:*MACRO-LEVEL*)
 "     End mails, Abort aborts")

Obviously, you don't want to change "ZMACS" to "KBE//ZMACS", but
the changes to the area after the parenthesized mode info is of
interest. It makes the mode line come out like:

KBE/ZMACS (Text) * PAPER.TEXT PS:<KMP.FOO> OZ: (55)  Font: A (TR12)

so that there's far less risk that the * will fall off the end.
Also, I have come to like having the file name and the asterisk in
close proximity to one another just on general principle since it
seems to me they are closely related.
-kmp
13-Oct-84 13:37:02-EDT,1572;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 13 Oct 84 13:36-EDT
Date: Thursday, 6 September 1984, 18:18-EDT
From: Kent M Pitman <kmp at MIT-MC>
Subject: Should ZWEI:*MODE-LINE-LIST* be per-editor or per-window?
To: BUG-LISPM at MC
References: The message of 6 Sep 84 18:15-EDT from KMP at MIT-MC.ARPA

In Symbolics 3600 Release 4.5 on PA Lisp Machine Merlin:

By the way, while I'm on the subject of mode lines, I'm discouraged
that this is a per-editor feature and not a per-window feature. There
is sometimes per-window stuff that could go in the mode line, but
it looks silly if you select a window where such info doesn't make
sense. eg, the KBE has a bunch of commands that work in Zmacs but it
really only wants to highlight the fact when you are also in an
augmented window that can give you KBE status information in an extra
pane that normal Zmacs windows don't have. I'd have liked it if 
the normal Zmacs frame (which I have on Select Z) just said
ZMACS (Text) ...
while the KBE Frame (which has a Zmacs frame as one of its panes and
a status pane as the other pane and is on System E) said
KBE/ZMACS (Text) ...
The main reason for wanting the distinction is that the System E window
sometimes scares people and I like to advertise that System Z is an
unmodified window they can use if they want to revert. The claim isn't
convincing if it has a hi-tech mode line. I looked at the way ZWEI/Zmacs
was structured and couldn't find an easy way to make this happen, 
so finally punted and let it say KBE/ZMACS in all contexts.

-kmp
13-Oct-84 13:56:16-EDT,713;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 13 Oct 84 13:55-EDT
Date: Saturday, 13 October 1984, 13:56-EDT
From: Kent M Pitman <kmp at MIT-MC>
Subject: Date on my last two messages
To: BUG-LISPM at MC
References: The message of 6 Sep 84 18:15-EDT from KMP at MIT-MC.ARPA,
            The message of 6 Sep 84 18:18-EDT from KMP at MIT-MC.ARPA

In Symbolics 3600 Release 4.5 on PA Lisp Machine Merlin:

Sorry about the funny dates in those messages. There are
a lot of machines on the net right now giving the wrong
date info and Rel4 just takes the first time it gets, no
matter how much it differs from others available. I've
not noticed such lossage in Rel5, which I guess is a good
sign. -kmp
13-Oct-84 19:58:03-EDT,1593;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 13 Oct 84 19:56-EDT
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 107889; Sat 13-Oct-84 19:56:12-EDT
Date: Saturday, 13 October 1984, 19:57-EDT
From: David C. Plummer <DCP at SCRC-TENEX>
Subject: Bug in the Flavor System
To: JCMa at MIT-OZ, Gavan at MIT-OZ
cc: BUG-LISPM at MIT-OZ
In-Reply-To: The message of 10 Oct 84 17:32-EDT from A Lisp Machine <joseph at SCRC-QUABBIN>
Message-ID: <841013195721.4.DCP@NEPONSET.SCRC.Symbolics>

    Date: Wednesday, 10 October 1984, 17:32-EDT
    From: A Lisp Machine <joseph at SCRC-QUABBIN>

    In Symbolics 3600 Release 5.2, FEP 18, on Lisp Machine Janis Joplin:

    If a flavor requires a flavor, and the required flavor is to be
    instantiated.  The flavor system will go into an infinite loop when
    compiled method tables are loaded.  The function below drives that loop.
    The same might happen for included flavors, but I didn't check.

Not having a real example, and not knowing where RL:UTILS; lives, I
constructed this example from your description.  It works.  I do
remember that FIXUP-METHOD had some bankrupt ideas which were flushed
post-5.2.

;;; -*- Mode: LISP; Package: USER; Base: 8 -*-

(defflavor xxx () ())

(defmethod (xxx :init) (ignore))

(defflavor yyy
	()
	()
  (:required-flavors xxx))

(defmethod (yyy :after :init) (ignore))

(defflavor zzz
	()
	(yyy xxx))

(defmethod (zzz :before :init) (ignore))

(compile-flavor-methods xxx zzz)

(send (make-instance 'xxx) :which-operations)

14-Oct-84 01:16:37-EDT,7133;000000000000
Received: from MIT-JANIS by MIT-OZ via Chaosnet; 14 Oct 84 01:15-EDT
Date: Sunday, 14 October 1984, 01:16-EDT
From: John C. Mallery <JCMA at MIT-OZ>
Subject: Weirdness in Error Flavors
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 Release 5.2, Experimental RELATUS 131.0, FEP 18, on Lisp Machine Janis Joplin:

For some reason that I can'f figure out, but which has been happening when I
recompile my system for about a year, the dbg:special-command on parse-error
for reporting a syntactic parsing bug mysteriously disappears.  I just kludged
the init after message to make it work.  I recall frobbing method combination
order and patching the problem away in the past.  I kept assuming that I was
just losing on method combination order.  Can someone tell me what the problem
is?  All the relevant code should be included here.

(DEFFLAVOR HACK-FORMAT-ARGS
	(FORMAT-STRING
	  (FORMAT-ARGS NIL))
	()
  :INITABLE-INSTANCE-VARIABLES
  :GETTABLE-INSTANCE-VARIABLES
  (:DOCUMENTATION :LOW-LEVEL-MIXIN
  "Use this to get format args recognized.")
  :ABSTRACT-FLAVOR)

(DEFMETHOD (HACK-FORMAT-ARGS :REPORT) (STREAM)
  (CALL #'FORMAT () STREAM () FORMAT-STRING '(:OPTIONAL :SPREAD) FORMAT-ARGS))

(DEFFLAVOR HACK-BUG-REPORT-RECIPIENT-MIXIN 
	((BUG-RECIPIENT 'BETA-TEST))
	()
  :ABSTRACT-FLAVOR)

(DEFMETHOD (HACK-BUG-REPORT-RECIPIENT-MIXIN :BUG-REPORT-RECIPIENT-SYSTEM)
	   () BUG-RECIPIENT)

;;--------------------------------------------------------------------------------
;; implement a special command for parse-errors
(DEFFLAVOR EXAMINE-PARSE-TREE-MIXIN () ()
  (:INCLUDED-FLAVORS DBG:SPECIAL-COMMANDS-MIXIN)
  (:REQUIRED-INSTANCE-VARIABLES SENTENCE-OBJECT)
  :ABSTRACT-FLAVOR)

(DEFMETHOD (EXAMINE-PARSE-TREE-MIXIN :AFTER :INIT) (&REST IGNORE)
  (UNLESS SENTENCE-OBJECT
    (SETQ DBG:SPECIAL-COMMANDS
	  (DELQ :EXAMINE-SENTENCE-SYNTAX DBG:SPECIAL-COMMANDS))))

(DEFMETHOD (EXAMINE-PARSE-TREE-MIXIN
	     :CASE :SPECIAL-COMMAND :EXAMINE-SENTENCE-SYNTAX) ()
  "Examine parse for sentence"
  (IF SENTENCE-OBJECT
      (SEND SENTENCE-OBJECT :STEP-INTERNAL TERMINAL-IO)
      (FORMAT
	TERMINAL-IO "~&Can't examine sentence because one couldn't be found."))
  NIL)					  ;ensure error is not proceeded

;;--------------------------------------------------------------------------------
(DEFFLAVOR EDIT-WORD-SYNTAX-MIXIN () ()
  (:INCLUDED-FLAVORS DBG:SPECIAL-COMMANDS-MIXIN)
  :ABSTRACT-FLAVOR)

(DEFMETHOD (EDIT-WORD-SYNTAX-MIXIN :CASE :SPECIAL-COMMAND :EDIT-WORD-SYNTAX) ()
  "Edit word syntax"
  (UPDATE-WORD NIL)
  NIL)					  ;don't try to proceed
  

;;--------------------------------------------------------------------------------
;; Report parsing bugs with a special command
(DEFFLAVOR PARSE-BUG-REPORTING-MIXIN () ()
  (:REQUIRED-FLAVORS PARSE-ERROR)
  (:REQUIRED-INSTANCE-VARIABLES SENTENCE-OBJECT PARSE-BUG-RECIPIENT)
  (:INCLUDED-FLAVORS DBG:SPECIAL-COMMANDS-MIXIN)
  :ABSTRACT-FLAVOR)

(DEFMETHOD (PARSE-BUG-REPORTING-MIXIN :AFTER :INIT) (&REST IGNORE)
  (COND ((NOT (AND SENTENCE-OBJECT PARSE-BUG-RECIPIENT))
	 (SETQ DBG:SPECIAL-COMMANDS
	      (DELQ  :REPORT-A-SYNTACTIC-PARSING-BUG DBG:SPECIAL-COMMANDS)))
	((MEMQ :REPORT-A-SYNTACTIC-PARSING-BUG DBG:SPECIAL-COMMANDS))
	(T (PUSH :REPORT-A-SYNTACTIC-PARSING-BUG DBG:SPECIAL-COMMANDS))))

(DEFUN REPORT-PARSE-BUG (ERROR BUG-RECIPIENT SENTENCE N-FRAMES)
  "Used to report parse bugs by
 (PARSE-BUG-REPORTING-MIXIN :CASE :SPECIAL-COMMAND :REPORT-PARSING-BUG)"
  (DECLARE (VALUES BUG-REPORT-PROCESS))
  (LET*
    ((ZWEI:*REQUIRE-SUBJECTS* T)
     (ORIGINAL-SENTENCE (SEND SENTENCE :ORIGINAL-STRING))
     (PARSE-TREE (AND (Y-OR-N-P
			"Include a description of the parse tree? ")
		      (SEND SENTENCE
			    :DESCRIBE-PARSE-AS-STRING)))
     (TOP-LEVEL-D (UNLESS PARSE-TREE
		    (AND
		      (Y-OR-N-P "Include top-level description of the sentence? ")
		      (SEND SENTENCE :DESCRIBE-AS-STRING))))
     (SYNTAX-INFO (AND
		    (Y-OR-N-P "Include a description of the syntax information? ")
		    (SEND SENTENCE :DESCRIBE-SYNTAX-INFO-AS-STRING)))
     (STACK-DATA (WITH-OUTPUT-TO-STRING (STREAM)
		   (SEND ERROR :BUG-REPORT-DESCRIPTION STREAM N-FRAMES))))
    ;; body
    (PROCESS-RUN-FUNCTION
      "Mail from debugger"
      #'BUG
      BUG-RECIPIENT
      (COND ((AND SYNTAX-INFO (OR PARSE-TREE TOP-LEVEL-D))
	     (FORMAT
	       NIL "~&Buggy Sentence: ~A~2%~A~2%~A~2%**** Stack ****~&~A"
	       ORIGINAL-SENTENCE (OR PARSE-TREE TOP-LEVEL-D) SYNTAX-INFO
	       STACK-DATA))
	    ((OR SYNTAX-INFO PARSE-TREE TOP-LEVEL-D)
	     (FORMAT
	       NIL "~&Buggy Sentence: ~A~2%~A~2%**** Stack ****~&~A"
	       ORIGINAL-SENTENCE (OR SYNTAX-INFO PARSE-TREE TOP-LEVEL-D)
	       STACK-DATA))
	    (T (FORMAT NIL "~&Buggy Sentence: ~A~2%**** Stack ****~&~A"
		       ORIGINAL-SENTENCE STACK-DATA)))
      "Insert your description of the parse bug."
      T)))

(DEFMETHOD (PARSE-BUG-REPORTING-MIXIN
	     :CASE :SPECIAL-COMMAND :REPORT-A-SYNTACTIC-PARSING-BUG) ()
  "Report parse bug"
  (LET ((PROCESS (REPORT-PARSE-BUG SELF
				   PARSE-BUG-RECIPIENT
				   SENTENCE-OBJECT
				   (IF DBG:*NUMERIC-ARG-P* DBG:*NUMERIC-ARG*
				       DBG:*DEFAULT-BACKTRACE-DEPTH*))))
    (COND ((SI:SG-RESUMABLE-P DBG:SCHEDULER-STACK-GROUP)
	   ;; Wait until the process has started up and covered over our window
	   (PROCESS-WAIT-WITH-TIMEOUT
	     "Bug window startup" 900.	  ;15 seconds
	     #'(LAMBDA (PROCESS)
		 (EQUAL (SI:PROCESS-WHOSTATE PROCESS) "Tyi"))
	     PROCESS)
	   ;; Now wait until our window comes back to the top before prompting
	   (TV:AWAIT-WINDOW-EXPOSURE))
	  (T				  ;Error in the scheduler
	   (FORMAT T "~&Bug-report window will start up when the scheduler is running again."))))
  NIL)					  ;don't try to proceed

;;--------------------------------------------------------------------------------
;; Parser conditions

(DEFFLAVOR SKIP-PARSING-SENTENCE-CONDITION     () () :ABSTRACT-FLAVOR)
(DEFFLAVOR SKIP-POSITING-SENTENCE-CONDITION    () () :ABSTRACT-FLAVOR)
(DEFFLAVOR SKIP-PREPARSING-SENTENCE-CONDITION  () () :ABSTRACT-FLAVOR)
(DEFFLAVOR RETRY-PARSING-SENTENCE-CONDITION    () () :ABSTRACT-FLAVOR)
(DEFFLAVOR RETRY-PREPARSING-SENTENCE-CONDITION () () :ABSTRACT-FLAVOR)
(DEFFLAVOR RETRY-POSITING-SENTENCE-CONDITION   () () :ABSTRACT-FLAVOR)

(DEFFLAVOR PARSE-ERROR
	((SENTENCE-OBJECT *SENTENCE-FOR-PARSE-ERRORS-TO-EXAMINE*)
	 (PARSE-BUG-RECIPIENT "RELATUS-PARSER"))
	(EXAMINE-PARSE-TREE-MIXIN
	 PARSE-BUG-REPORTING-MIXIN
	 EDIT-WORD-SYNTAX-MIXIN
	 SKIP-PARSING-SENTENCE-CONDITION
	 SKIP-POSITING-SENTENCE-CONDITION
	 RETRY-PARSING-SENTENCE-CONDITION
	 RETRY-POSITING-SENTENCE-CONDITION
	 ERROR
	 HACK-BUG-REPORT-RECIPIENT-MIXIN)
  :INITABLE-INSTANCE-VARIABLES
  :GETTABLE-INSTANCE-VARIABLES
  :ABSTRACT-FLAVOR)

(DEFFLAVOR PARSE-FERROR	() (HACK-FORMAT-ARGS PARSE-ERROR))

(DEFMACRO PARSE-BARF (FORMAT-STRING &OPTIONAL &REST FORMAT-ARGS)
  (CHECK-ARG-TYPE FORMAT-STRING :STRING)
  `(SIGNAL 'PARSE-FERROR :FORMAT-STRING ,FORMAT-STRING
	   :FORMAT-ARGS `,(LIST ,.FORMAT-ARGS)))
14-Oct-84 02:39:14-EDT,2387;000000000000
Received: from MIT-JANIS by MIT-OZ via Chaosnet; 14 Oct 84 02:38-EDT
Received: from MIT-MC by MIT-OZ via Chaosnet; 13 Oct 84 11:02-EDT
Date: Saturday, 13 October 1984, 11:01-EDT
From: A Lisp Machine <joseph at SCRC-QUABBIN>
Subject: Lost while trying to do a full gc
To: BUG-RELATUS at MIT-OZ
Redistributed-to: bug-lispm at MIT-OZ
Redistributed-by: JCMA at MIT-OZ
Redistributed-date: Sunday, 14 October 1984, 02:38-EDT

In Symbolics 3600 RELATUS in Release 5.2, Experimental RELATUS 131.0,
FEP 18, on Lisp Machine Janis Joplin:



>>Trap: The word #<DTP-NULL 13177325> was read from location 13177325 (in COMPILED-FUNCTION-AREA).
While in the function SI:CONSTANTS-TO-CONSTANTS-AREA  SI:*EVAL  COND

SI:CONSTANTS-TO-CONSTANTS-AREA:  (P.C. = 72)
   Local 0 (START-TIME): 2675516067.
   Local 1 (MODULUS): 300007.
   Local 2 (HASH-TABLE): #<ART-Q-300007. 52403564>
   Local 3 (N-CONSTANTS-MADE): 3396.
   Local 4 (N-CONSTANTS-SAVED): 2398.
   Local 5 (ALPHABETIC-CASE-AFFECTS-STRING-COMPARISON-initialization): T
   Local 6: SYS:UNWIND-PROTECT-TAG
   Local 7: #<DTP-ODD-PC 25064425>
   Local 8: #<DTP-LOCATIVE 740056>
   Local 9: #<DTP-LOCATIVE 43540104>
   Local 10 (REGION): 26.
   Local 11 (P): 2948817.
   Local 12 (SIZE): 13.
   Local 13 (BOUNDARY): 2949117.
   Local 14 (J): 4.
   Local 15: 1.
   Local 16 (CONST): NIL

SI:*EVAL:  (P.C. = 370)
   Arg 0 (FORM): (SI:CONSTANTS-TO-CONSTANTS-AREA)

COND:  (P.C. = 23)
   Rest arg (CLAUSES): ((SI:*FULL-GC-FOR-SYSTEM-RELEASE* (SI:CONSTANTS-TO-CONSTANTS-AREA)) (T NIL))

SI:*EVAL:  (P.C. = 421)
   Arg 0 (FORM): (SI:DISPLACED (IF SI:*FULL-GC-FOR-SYSTEM-RELEASE* (SI:CONSTANTS-TO-CONSTANTS-AREA)) (COND (SI:*FULL-GC-FOR-SYSTEM-RELEASE* (SI:CONSTANTS-TO-CONSTANTS-AREA)) (T NIL)))

INITIALIZATIONS:  (P.C. = 42)
   Arg 0 (LIST-NAME): SI:FULL-GC-INITIALIZATION-LIST
   Arg 1 (REDO-FLAG): T
   --Defaulted args:--
   Arg 2 (FLAG): T

SI:FULL-GC:  (P.C. = 42)
   Rest arg: (:SYSTEM-RELEASE T)

SI:*EVAL:  (P.C. = 370)
   Arg 0 (FORM): (SI:FULL-GC :SYSTEM-RELEASE T)

SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 200)
   Rest arg: (:NAME "Lisp Top Level in Lisp Listener 1" :ABORTED-FUNCTION NIL :BEFORE-PROMPT-FUNCTION NIL :READ-FUNCTION NIL :EVAL-FUNCTION NIL ...)

Rest of stack:
SI:LISP-COMMAND-LOOP:  (P.C. = 115)
SI:LISP-TOP-LEVEL1:  (P.C. = 22)
SI:LISP-TOP-LEVEL:  (P.C. = 7)
15-Oct-84 12:23:34-EDT,2999;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 15 Oct 84 12:17-EDT
Received: from SCRC-NEPONSET by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 91235; Mon 15-Oct-84 10:25:21-EDT
Date: Monday, 15 October 1984, 10:26-EDT
From: David C. Plummer <DCP at SCRC-TENEX>
Subject: Lost while trying to do a full gc
To: JCMa at MIT-OZ, BUG-RELATUS at MIT-OZ
cc: Bug-LispM at MIT-OZ
In-Reply-To: The message of 13 Oct 84 11:01-EDT from A Lisp Machine <joseph at SCRC-QUABBIN>
Message-ID: <841015102606.7.DCP@NEPONSET.SCRC.Symbolics>

    Date: Saturday, 13 October 1984, 11:01-EDT
    From: A Lisp Machine <joseph at SCRC-QUABBIN>

    In Symbolics 3600 RELATUS in Release 5.2, Experimental RELATUS 131.0,
    FEP 18, on Lisp Machine Janis Joplin:

(1) Is this reproducible?
(2) Did you have any errors while loading your system?  In particular,
    did it err while trying to load a compiled function?  

I'll make si:constants-to-constants-area more robust when I get a
chance.

    >>Trap: The word #<DTP-NULL 13177325> was read from location 13177325 (in COMPILED-FUNCTION-AREA).
    While in the function SI:CONSTANTS-TO-CONSTANTS-AREA  SI:*EVAL  COND

    SI:CONSTANTS-TO-CONSTANTS-AREA:  (P.C. = 72)
       Local 0 (START-TIME): 2675516067.
       Local 1 (MODULUS): 300007.
       Local 2 (HASH-TABLE): #<ART-Q-300007. 52403564>
       Local 3 (N-CONSTANTS-MADE): 3396.
       Local 4 (N-CONSTANTS-SAVED): 2398.
       Local 5 (ALPHABETIC-CASE-AFFECTS-STRING-COMPARISON-initialization): T
       Local 6: SYS:UNWIND-PROTECT-TAG
       Local 7: #<DTP-ODD-PC 25064425>
       Local 8: #<DTP-LOCATIVE 740056>
       Local 9: #<DTP-LOCATIVE 43540104>
       Local 10 (REGION): 26.
       Local 11 (P): 2948817.
       Local 12 (SIZE): 13.
       Local 13 (BOUNDARY): 2949117.
       Local 14 (J): 4.
       Local 15: 1.
       Local 16 (CONST): NIL

    SI:*EVAL:  (P.C. = 370)
       Arg 0 (FORM): (SI:CONSTANTS-TO-CONSTANTS-AREA)

    COND:  (P.C. = 23)
       Rest arg (CLAUSES): ((SI:*FULL-GC-FOR-SYSTEM-RELEASE* (SI:CONSTANTS-TO-CONSTANTS-AREA)) (T NIL))

    SI:*EVAL:  (P.C. = 421)
       Arg 0 (FORM): (SI:DISPLACED (IF SI:*FULL-GC-FOR-SYSTEM-RELEASE* (SI:CONSTANTS-TO-CONSTANTS-AREA)) (COND (SI:*FULL-GC-FOR-SYSTEM-RELEASE* (SI:CONSTANTS-TO-CONSTANTS-AREA)) (T NIL)))

    INITIALIZATIONS:  (P.C. = 42)
       Arg 0 (LIST-NAME): SI:FULL-GC-INITIALIZATION-LIST
       Arg 1 (REDO-FLAG): T
       --Defaulted args:--
       Arg 2 (FLAG): T

    SI:FULL-GC:  (P.C. = 42)
       Rest arg: (:SYSTEM-RELEASE T)

    SI:*EVAL:  (P.C. = 370)
       Arg 0 (FORM): (SI:FULL-GC :SYSTEM-RELEASE T)

    SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 200)
       Rest arg: (:NAME "Lisp Top Level in Lisp Listener 1" :ABORTED-FUNCTION NIL :BEFORE-PROMPT-FUNCTION NIL :READ-FUNCTION NIL :EVAL-FUNCTION NIL ...)

    Rest of stack:
    SI:LISP-COMMAND-LOOP:  (P.C. = 115)
    SI:LISP-TOP-LEVEL1:  (P.C. = 22)
    SI:LISP-TOP-LEVEL:  (P.C. = 7)
15-Oct-84 12:55:28-EDT,3003;000000000000
Received: from SCRC-RIVERSIDE by MIT-OZ via Chaosnet; 15 Oct 84 12:26-EDT
Received: from SCRC-NEPONSET by SCRC-RIVERSIDE via CHAOS with CHAOS-MAIL id 24227; Mon 15-Oct-84 10:26:21-EDT
Date: Monday, 15 October 1984, 10:26-EDT
From: David C. Plummer <DCP at SCRC-TENEX>
Subject: Lost while trying to do a full gc
To: JCMa at MIT-OZ, BUG-RELATUS at MIT-OZ
cc: Bug-LispM at MIT-OZ
In-Reply-To: The message of 13 Oct 84 11:01-EDT from A Lisp Machine <joseph at SCRC-QUABBIN>
Message-ID: <841015102606.7.DCP@NEPONSET.SCRC.Symbolics>

    Date: Saturday, 13 October 1984, 11:01-EDT
    From: A Lisp Machine <joseph at SCRC-QUABBIN>

    In Symbolics 3600 RELATUS in Release 5.2, Experimental RELATUS 131.0,
    FEP 18, on Lisp Machine Janis Joplin:

(1) Is this reproducible?
(2) Did you have any errors while loading your system?  In particular,
    did it err while trying to load a compiled function?  

I'll make si:constants-to-constants-area more robust when I get a
chance.

    >>Trap: The word #<DTP-NULL 13177325> was read from location 13177325 (in COMPILED-FUNCTION-AREA).
    While in the function SI:CONSTANTS-TO-CONSTANTS-AREA  SI:*EVAL  COND

    SI:CONSTANTS-TO-CONSTANTS-AREA:  (P.C. = 72)
       Local 0 (START-TIME): 2675516067.
       Local 1 (MODULUS): 300007.
       Local 2 (HASH-TABLE): #<ART-Q-300007. 52403564>
       Local 3 (N-CONSTANTS-MADE): 3396.
       Local 4 (N-CONSTANTS-SAVED): 2398.
       Local 5 (ALPHABETIC-CASE-AFFECTS-STRING-COMPARISON-initialization): T
       Local 6: SYS:UNWIND-PROTECT-TAG
       Local 7: #<DTP-ODD-PC 25064425>
       Local 8: #<DTP-LOCATIVE 740056>
       Local 9: #<DTP-LOCATIVE 43540104>
       Local 10 (REGION): 26.
       Local 11 (P): 2948817.
       Local 12 (SIZE): 13.
       Local 13 (BOUNDARY): 2949117.
       Local 14 (J): 4.
       Local 15: 1.
       Local 16 (CONST): NIL

    SI:*EVAL:  (P.C. = 370)
       Arg 0 (FORM): (SI:CONSTANTS-TO-CONSTANTS-AREA)

    COND:  (P.C. = 23)
       Rest arg (CLAUSES): ((SI:*FULL-GC-FOR-SYSTEM-RELEASE* (SI:CONSTANTS-TO-CONSTANTS-AREA)) (T NIL))

    SI:*EVAL:  (P.C. = 421)
       Arg 0 (FORM): (SI:DISPLACED (IF SI:*FULL-GC-FOR-SYSTEM-RELEASE* (SI:CONSTANTS-TO-CONSTANTS-AREA)) (COND (SI:*FULL-GC-FOR-SYSTEM-RELEASE* (SI:CONSTANTS-TO-CONSTANTS-AREA)) (T NIL)))

    INITIALIZATIONS:  (P.C. = 42)
       Arg 0 (LIST-NAME): SI:FULL-GC-INITIALIZATION-LIST
       Arg 1 (REDO-FLAG): T
       --Defaulted args:--
       Arg 2 (FLAG): T

    SI:FULL-GC:  (P.C. = 42)
       Rest arg: (:SYSTEM-RELEASE T)

    SI:*EVAL:  (P.C. = 370)
       Arg 0 (FORM): (SI:FULL-GC :SYSTEM-RELEASE T)

    SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 200)
       Rest arg: (:NAME "Lisp Top Level in Lisp Listener 1" :ABORTED-FUNCTION NIL :BEFORE-PROMPT-FUNCTION NIL :READ-FUNCTION NIL :EVAL-FUNCTION NIL ...)

    Rest of stack:
    SI:LISP-COMMAND-LOOP:  (P.C. = 115)
    SI:LISP-TOP-LEVEL1:  (P.C. = 22)
    SI:LISP-TOP-LEVEL:  (P.C. = 7)
15-Oct-84 14:25:18-EDT,2921;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 15 Oct 84 14:24-EDT
Received: from SCRC-EUPHRATES by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 91332; Mon 15-Oct-84 14:17:32-EDT
Date: Monday, 15 October 1984, 14:17-EDT
From: David A. Moon <Moon at SCRC-TENEX>
Subject: Bug in the Flavor System
To: BUG-LISPM at MIT-OZ
In-Reply-To: The message of 10 Oct 84 17:32-EDT from A Lisp Machine <joseph at SCRC-QUABBIN>
Message-ID: <841015141740.8.MOON@EUPHRATES.SCRC.Symbolics>

    Date: Wednesday, 10 October 1984, 17:32-EDT
    From: A Lisp Machine <joseph at SCRC-QUABBIN>

joseph???

    In Symbolics 3600 Release 5.2, FEP 18, on Lisp Machine Janis Joplin:

    If a flavor requires a flavor, and the required flavor is to be
    instantiated.  The flavor system will go into an infinite loop when
    compiled method tables are loaded.  The function below drives that loop.
    The same might happen for included flavors, but I didn't check.

    (DEFUN FLAVOR-DEPENDS-ON-FLAVOR-P (FL FLAVOR-DEPENDS-ON &AUX RFLS)
      ;; Do fast top-level checks first
      (OR (MEMQ FLAVOR-DEPENDS-ON (FLAVOR-DEPENDS-ON FL))
	  (MEMQ FLAVOR-DEPENDS-ON (FLAVOR-INCLUDES FL))
    ==>   (MEMQ FLAVOR-DEPENDS-ON (SETQ RFLS (GET (LOCF (FLAVOR-PLIST FL)) ':REQUIRED-FLAVORS)))
	  (FLAVORS-DEPEND-ON-FLAVOR-P (FLAVOR-DEPENDS-ON FL) FLAVOR-DEPENDS-ON)
	  (FLAVORS-DEPEND-ON-FLAVOR-P (FLAVOR-INCLUDES FL) FLAVOR-DEPENDS-ON)
	  (FLAVORS-DEPEND-ON-FLAVOR-P RFLS FLAVOR-DEPENDS-ON)
	  ;; Special case.  This isn't exactly right, but is only used for an error message
	  (EQ FLAVOR-DEPENDS-ON 'VANILLA-FLAVOR)))

    Here's where I found this out.

    >>Error: The control stack overflowed.
    While in the function SI:FLAVORS-DEPEND-ON-FLAVOR-P  SI:FLAVOR-DEPENDS-ON-FLAVOR-P  SI:FLAVORS-DEPEND-ON-FLAVOR-P

    SI:FLAVOR-DEPENDS-ON-FLAVOR-P:  (P.C. = 31)
       Arg 0 (FL): #<FLAVOR SENTENCE 35037560>
       Arg 1 (FLAVOR-DEPENDS-ON): TRANSFORM-KERN-SENTENCE-CONSTRAINT-POSTING-MIXIN
       Local 2 (RFLS): NIL

    SI:GET-COMPONENT-FLAVOR-INFO:  (P.C. = 35)
       Arg 0 (FL): #<FLAVOR SENTENCE 35037560>
       Arg 1 (COMPONENT-FLAVOR): TRANSFORM-KERN-SENTENCE-CONSTRAINT-POSTING-MIXIN
       --Defaulted args:--
       Arg 2 (DONT-CREATE): NIL
       Arg 3 (FOR-SELF): NIL

DCP sez this might be fixed in newest system, but didn't seem sure.

Moon sez that I don't see how one can get any data from a bug report where the relevant
part of the backtrace (the part with the infinite recursion in it) has been edited out
by hand!  As far as I know this has not been changed recently and the real problem
is that the user's flavors have circular dependencies.  But without the backtrace and
without such background information as the flavor definitions that were involved, it's
hard to say.

Perhaps whoever sent this bug report could resubmit it with better information included.
15-Oct-84 18:54:03-EDT,2043;000000000000
Received: from MIT-LISPM-9 by MIT-OZ via Chaosnet; 15 Oct 84 18:53-EDT
Date: Monday, 15 October 1984, 18:53-EDT
From: Tim McNerney <TIM at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In Experimental System 99.5, CADR 4.0, Experimental ZMail 54.1,
MIT-Specific 23.0, microcode 320, GC@2, on Lisp Machine Nine:


Insert your description of the circumstances here:

Self explanatory

>>TRAP 8077 (TRANS-TRAP)
The function T is undefined.
Backtrace from the debugger:

ZWEI:SET-BUFFER-PATHNAME (P.C. = 59)

 Arg 0 (PATHNAME): T
 Arg 1 (BUFFER): #<ZWEI:ZMACS-BUFFER LISPM INIT TIM; MC: 32777562>
Local 0 (STRING): NIL


ZWEI:RENAME-FILE-1 (P.C. = 74)

 Arg 0 (INPUT-PATHNAME): #FS:ITS-PATHNAME "MC: TIM; LISPM INIT"
 Arg 1 (OUTPUT-PATHNAME): T
Local 0 (BUF): #<ZWEI:ZMACS-BUFFER LISPM INIT TIM; MC: 32777562>


ZWEI:COM-RENAME-FILE (P.C. = 228)

Local 0 (PATHNAME): #FS:ITS-PATHNAME "MC: TIM; LISPM INIT"
Local 1 (TO-SPEC): "tim lispm"
Local 2 (DIR): NIL
Local 3 (TO-PATHNAME): NIL
Local 4: NIL
Local 5 (ELT): NIL
Local 6 (ERROR): NIL
Local 7: (1305 . 74)
Local 8 (ERROR): #FS:ITS-PATHNAME "MC: TIM; TIM LISPM"
Local 9 (.SELECTQ.ITEM.): NIL
Local 10 (OLD-TRUENAME): #FS:ITS-PATHNAME "MC: TIM; LISPM INIT"
Local 11 (NEW-TRUENAME): T


ZWEI:COM-EXTENDED-COMMAND (P.C. = 56)

Local 0 (ANS): ("Rename File" . ZWEI:COM-RENAME-FILE)


Additional information supplied with call:
 Expecting 3 values

ZWEI:COMMAND-EXECUTE (P.C. = 92)

 Arg 0 (COMMAND): ZWEI:COM-EXTENDED-COMMAND
 Arg 1 (CHAR): #/m-X
 Arg 2 (PREFIX-CHAR): NIL
 Arg 3 (HOOK-LIST): NIL
Local 0 (HOOK-SUCCESS): T
Local 1: NIL
Local 2 (HOOK): NIL


Remainder of stack:

ZWEI:PROCESS-COMMAND-CHAR (P.C. = 61)
(:METHOD ZWEI:WINDOW :EDIT) (P.C. = 309)
(:INTERNAL (:METHOD ZWEI:ZMACS-WINDOW :COMBINED :EDIT) 0) (P.C. = 60)
FUNCALL (P.C. = 21)
(:METHOD ZWEI:DISPLAYER :AROUND :EDIT) (P.C. = 25)
(:METHOD ZWEI:ZMACS-WINDOW :COMBINED :EDIT) (P.C. = 39)
ZWEI:ZMACS-WINDOW-TOP-LEVEL (P.C. = 38)
SI:PROCESS-TOP-LEVEL (P.C. = 115)
17-Oct-84 01:57:24-EDT,2703;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 17 Oct 84 01:56-EDT
Date: Wednesday, 17 October 1984, 01:33-EDT
From: Tim McNerney <TIM at MIT-MC>
Subject: Wierd lossage in Converse Help?
To: BUG-LISPM at MIT-OZ

In Experimental System 99.8, CADR 4.0, Experimental ZMail 54.2,
MIT-Specific 23.0, microcode 320, GC@2, on Lisp Machine Nine:


Insert your description of the circumstances here:

  Did <Help> A save <return> from Converse

>>TRAP 6052 (ARGTYP NUMBER PP T X1PLS)
The argument to 1+, "Control-X J", was of the wrong type.
The function expected a number.
Backtrace from the debugger:

ZWEI:FIND-COMMAND-ON-KEYS (P.C. = 83)

 Arg 0 (COMMAND): ZWEI:COM-JUMP-TO-SAVED-POSITION
 Arg 1 (LIMIT): 4
 Arg 2 (MESSAGE): "  which can be invoked via: "
   --Defaulted args:--
 Arg 3 (COMTAB): #<ZWEI:COMTAB ZWEI:MODE-COMTAB 20417045>
Local 0 (STARTING-CHAR): 0
Local 1 (STARTING-COMTAB): #/c-X
Local 2 (CHAR-STRING): #/c-X
Local 3 (CHAR-NUMBER): "Control-X J"
Local 4 (COUNT): 0


ZWEI:COM-APROPOS (P.C. = 87)

Local 0 (FUNCTION): STRING-SEARCH
Local 1 (KEY): "save"
Local 2 (EXTENDED-CMD): "Meta-X"
Local 3 (ANY-EXTENDED-CMD): "Control-Meta-X"
Local 4: (("Jump To Saved Position" . ZWEI:COM-JUMP-TO-SAVED-POSITION) ("Save Position" . ZWEI:COM-SAVE-POSITION) ("Kill Register" . ZWEI:COM-KILL-REGISTER) ("List Registers" . ZWEI:COM-LIST-REGISTERS) ...)
Local 5 (X): ("Jump To Saved Position" . ZWEI:COM-JUMP-TO-SAVED-POSITION)
Local 6 (NAME): "Jump To Saved Position"


ZWEI:COM-DOCUMENTATION (P.C. = 195)

Local 0 (CHAR): 65
Local 1: NIL
Local 2 (ELT): (87 ZWEI:COM-WHERE-IS)
Local 3 (OLD-SELECTED-WINDOW): #<ZWEI:CONVERSE-FRAME Converse Frame 1 2700350 exposed>
Local 4 (OLD-SUBSTITUTE): #<ZWEI:ZWEI-WINDOW-PANE Converse 2701040 exposed>
Local 5 (CHAR): 65
Local 6 (FUNCTION): ZWEI:COM-APROPOS


Additional information supplied with call:
 Expecting 3 values

ZWEI:COMMAND-EXECUTE (P.C. = 92)

 Arg 0 (COMMAND): ZWEI:COM-DOCUMENTATION
 Arg 1 (CHAR): #/HELP
 Arg 2 (PREFIX-CHAR): NIL
 Arg 3 (HOOK-LIST): NIL
Local 0 (HOOK-SUCCESS): T
Local 1: NIL
Local 2 (HOOK): NIL


ZWEI:PROCESS-COMMAND-CHAR (P.C. = 61)

 Arg 0 (CH): #/HELP
Local 0 (VALUE): NIL
Local 1 (LINE): NIL
Local 2 (INDEX): NIL
Local 3: NIL
Local 4 (HOOK): NIL


Remainder of stack:

(:METHOD ZWEI:WINDOW :EDIT) (P.C. = 309)
(:INTERNAL (:METHOD ZWEI:ZWEI-WINDOW-PANE :COMBINED :EDIT) 0) (P.C. = 60)
FUNCALL (P.C. = 21)
(:METHOD ZWEI:DISPLAYER :AROUND :EDIT) (P.C. = 25)
(:METHOD ZWEI:ZWEI-WINDOW-PANE :COMBINED :EDIT) (P.C. = 39)
(:METHOD ZWEI:ZWEI-FRAME :EDIT) (P.C. = 27)
ZWEI:CONVERSE-WINDOW-TOP-LEVEL (P.C. = 20)
SI:PROCESS-TOP-LEVEL (P.C. = 115)
17-Oct-84 18:30:41-EDT,2466;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 17 Oct 84 18:29-EDT
Date: Wednesday, 17 October 1984, 18:28-EDT
From: Gavan Duffy <GAVAN at MIT-OZ>
Subject: Grinding DO when not a DO.
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 Release 5.2, Experimental RELATUS 131.26, FEP 18, on Lisp Machine John Lennon:

I have a sunst, defined thusly:

(DEFSUBST TO-DO-P (WORD)
  (MEMQ WORD '(DO DID DOES DONE DOING)))

Reasonable?  Well, when I evaluate

(TO-DO-P 'DO)

at top level, the grinder thinks it should grind it as if it were the DO form.
But it's just a list.  Is this fixable?  I realize I'm likely to be the only
person ever to run into this.

>>Error: The argument CONS to CAR-LOCATION, NIL, was of the wrong type.
         The function expected a CONS.
While in the function CAR-LOCATION  SI:GRIND-REST-OF-DO  SI:GRIND-DO

CAR-LOCATION:  (P.C. = 15)
   Arg 0 (CONS): NIL

SI:GRIND-REST-OF-DO:  (P.C. = 135)
   Arg 0 (EXP): (DO DID DOES DONE)
   Arg 1 (LOC): ((DO DID DOES DONE))

SI:GRIND-DO:  (P.C. = 33)
   Arg 0 (EXP): (DO DID DOES DONE)
   Arg 1 (LOC): ((DO DID DOES DONE))

SI:GRIND-FORM:  (P.C. = 54)
   Arg 0 (EXP): (DO DID DOES DONE)
   Arg 1 (LOC): ((DO DID DOES DONE))

SI:GRIND-TRY:  (P.C. = 123)
   Arg 0 (FORM): #<DTP-COMPILED-FUNCTION SI:GRIND-FORM 25033056>
   Arg 1 (EXP): (DO DID DOES DONE)
   Arg 2 (LOC): ((DO DID DOES DONE))
   Rest arg (ARGS): NIL

SI:GRIND-OPTI-MISER:  (P.C. = 30)
   Arg 0 (EXP): (DO DID DOES DONE)
   Arg 1 (LOC): ((DO DID DOES DONE))

GRIND-TOP-LEVEL:  (P.C. = 60)
   Arg 0 (EXP): (DO DID DOES DONE)
   --Defaulted args:--
   Arg 1 (GRIND-WIDTH-initialization): NIL
   Arg 2 (GRIND-REAL-IO-initialization): #:TERMINAL-IO-SYN-STREAM
   Arg 3 (GRIND-UNTYO-P-initialization): NIL
   Arg 4 (GRIND-DISPLACED-initialization): SI:DISPLACED
   Arg 5 (TERPRI-P): T
   Arg 6 (GRIND-NOTIFY-FUN-initialization): NIL
   Arg 7 (LOC): ((DO DID DOES DONE))

SI:LISP-COMMAND-LOOP-PRINT-FUNCTION:  (P.C. = 6)
   Arg 0 (VALUE): (DO DID DOES DONE)

Rest of stack:
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 237)
BREAK:  (P.C. = 173)
(:DEFUN-METHOD ZWEI:COM-BREAK):  (P.C. = 112)
ZWEI:COM-BREAK:  (P.C. = 12)
ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 214)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 41)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
17-Oct-84 21:00:57-EDT,3405;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 17 Oct 84 21:00-EDT
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 110289; Wed 17-Oct-84 20:47:50-EDT
Date: Wednesday, 17 October 1984, 20:47-EDT
From: David C. Plummer <DCP at SCRC-TENEX>
Subject: Grinding DO when not a DO.
To: Gavan Duffy <GAVAN at MIT-OZ>, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 17 Oct 84 18:28-EDT from Gavan Duffy <GAVAN at MIT-OZ>
Message-ID: <841017204741.8.DCP@NEPONSET.SCRC.Symbolics>

    Date: Wednesday, 17 October 1984, 18:28-EDT
    From: Gavan Duffy <GAVAN at MIT-OZ>

    In Symbolics 3600 Release 5.2, Experimental RELATUS 131.26, FEP 18, on Lisp Machine John Lennon:

    I have a sunst, defined thusly:

    (DEFSUBST TO-DO-P (WORD)
      (MEMQ WORD '(DO DID DOES DONE DOING)))

    Reasonable?  Well, when I evaluate

    (TO-DO-P 'DO)

    at top level, the grinder thinks it should grind it as if it were the DO form.
    But it's just a list.  Is this fixable?  I realize I'm likely to be the only
    person ever to run into this.

It doesn't happen at top level, it happens because you use
grind-top-level as your top level print function.  When the sources are
stable and I make a pass through my mailbox, I'll put in some checking
for bad cases.  BTW, you're fibbing.  Grinding
	(DO DID DOES DONE DOING)
does work, but what you ground was (DO DID DOES DONE).

    >>Error: The argument CONS to CAR-LOCATION, NIL, was of the wrong type.
	     The function expected a CONS.
    While in the function CAR-LOCATION  SI:GRIND-REST-OF-DO  SI:GRIND-DO

    CAR-LOCATION:  (P.C. = 15)
       Arg 0 (CONS): NIL

    SI:GRIND-REST-OF-DO:  (P.C. = 135)
       Arg 0 (EXP): (DO DID DOES DONE)
       Arg 1 (LOC): ((DO DID DOES DONE))

    SI:GRIND-DO:  (P.C. = 33)
       Arg 0 (EXP): (DO DID DOES DONE)
       Arg 1 (LOC): ((DO DID DOES DONE))

    SI:GRIND-FORM:  (P.C. = 54)
       Arg 0 (EXP): (DO DID DOES DONE)
       Arg 1 (LOC): ((DO DID DOES DONE))

    SI:GRIND-TRY:  (P.C. = 123)
       Arg 0 (FORM): #<DTP-COMPILED-FUNCTION SI:GRIND-FORM 25033056>
       Arg 1 (EXP): (DO DID DOES DONE)
       Arg 2 (LOC): ((DO DID DOES DONE))
       Rest arg (ARGS): NIL

    SI:GRIND-OPTI-MISER:  (P.C. = 30)
       Arg 0 (EXP): (DO DID DOES DONE)
       Arg 1 (LOC): ((DO DID DOES DONE))

    GRIND-TOP-LEVEL:  (P.C. = 60)
       Arg 0 (EXP): (DO DID DOES DONE)
       --Defaulted args:--
       Arg 1 (GRIND-WIDTH-initialization): NIL
       Arg 2 (GRIND-REAL-IO-initialization): #:TERMINAL-IO-SYN-STREAM
       Arg 3 (GRIND-UNTYO-P-initialization): NIL
       Arg 4 (GRIND-DISPLACED-initialization): SI:DISPLACED
       Arg 5 (TERPRI-P): T
       Arg 6 (GRIND-NOTIFY-FUN-initialization): NIL
       Arg 7 (LOC): ((DO DID DOES DONE))

    SI:LISP-COMMAND-LOOP-PRINT-FUNCTION:  (P.C. = 6)
       Arg 0 (VALUE): (DO DID DOES DONE)

    Rest of stack:
    SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 237)
    BREAK:  (P.C. = 173)
    (:DEFUN-METHOD ZWEI:COM-BREAK):  (P.C. = 112)
    ZWEI:COM-BREAK:  (P.C. = 12)
    ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
    ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
    (:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 214)
    (:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 41)
    ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)
    SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
17-Oct-84 22:49:48-EDT,534;000000000000
Received: from MIT-APIARY-10 by MIT-OZ via Chaosnet; 17 Oct 84 22:49-EDT
Date: Wednesday, 17 October 1984, 22:47-EDT
From: Henry Lieberman <Henry at MIT-OZ>
Subject: Spaces in input editor
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 Release 5.2, FEP 18, on APIARY-10:

With the s-expression (STEP '(+ 2 3)) on the kill ring from the editor, 
mouse the Lisp Listener type Control-Y to get the text, then space to evaluate
it. Unfortunately, the stepper sees the space and you don't get a chance to 
step through the form.

18-Oct-84 00:06:21-EDT,1247;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 18 Oct 84 00:05-EDT
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 110742; Thu 18-Oct-84 00:07:05-EDT
Date: Thursday, 18 October 1984, 00:05-EDT
From: David C. Plummer <DCP at SCRC-TENEX>
Subject: Spaces in input editor
To: Henry Lieberman <Henry at MIT-OZ>, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 17 Oct 84 22:47-EDT from Henry Lieberman <Henry at MIT-OZ>
Message-ID: <841018000545.2.DCP@NEPONSET.SCRC.Symbolics>

    Date: Wednesday, 17 October 1984, 22:47-EDT
    From: Henry Lieberman <Henry at MIT-OZ>

    In Symbolics 3600 Release 5.2, FEP 18, on APIARY-10:

    With the s-expression (STEP '(+ 2 3)) on the kill ring from the editor, 
    mouse the Lisp Listener type Control-Y to get the text, then space to evaluate
    it. Unfortunately, the stepper sees the space and you don't get a chance to 
    step through the form.

Is this a suggestion for the input editor to trim whitespace (a bad
idea, as it disallows typeahead), or a suggestion that the stepper
should discard input (a bad idea, as it disallows typeahead)?  I assume
you know that [End] is the prefered way to finish input editing and
cause a reparse.
18-Oct-84 02:13:14-EDT,482;000000000000
Received: from MIT-APIARY-10 by MIT-OZ via Chaosnet; 18 Oct 84 02:12-EDT
Date: Thursday, 18 October 1984, 02:14-EDT
From: Henry Lieberman <Henry at MIT-OZ>
Subject: Spaces in input editor
To: David C. Plummer <DCP at SCRC-TENEX>
Cc: BUG-LISPM at MIT-OZ
In-reply-to: <841018000545.2.DCP@NEPONSET.SCRC.Symbolics>

    I assume
    you know that [End] is the prefered way to finish input editing and
    cause a reparse.

Actually, I didn't, so that solves the problem.

18-Oct-84 13:09:38-EDT,919;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 18 Oct 84 13:07-EDT
Date: Thursday, 18 October 1984, 13:05-EDT
From: Daniel Weise <DANIEL at MIT-MC>
Subject: No error signalled for not found GO tag.
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 Release 5.2, FEP 22, on Lisp Machine Sid Vicious:

In the following code no error signalled when the code is executed,
in fact, the GO is just compiled away.  (Though the compiler does
warn about the tag being unknown.)  The documentation says 
"If the body has no such tag, the bodies of any lexically containing
TAGBODY forms are examine as well.  If no tag is found, an error is signalled."
One would assumed this means "an error is signalled at run time," rather
than, "the compiler issues a warning."  (Especially since an error is
signalled when the code is interpreted.)

(defun test ()
  (prog ()
	(go not-there)
	(ferror "We got here.")))

Daniel
18-Oct-84 13:47:31-EDT,4668;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 18 Oct 84 13:42-EDT
Date: Thursday, 18 October 1984, 13:36-EDT
From: Francine Chen <SR.CHEN at MIT-SPEECH>
Subject: file system bug???
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 Release 5.2, ZOO 3.2, Spire-Macros 3.8, Compute 2.5,
Attribute 3.3, Audio 2.4, Speech-Attributes 2.3, Display 3.7,
Speech-Layouts 4.7, Versatec 3.0, Prtout 2.0, Spire 14.0, SpireX 11.1,
ZOO-SPIRE 1.0, FEP 18, on Lisp Machine Grizzly:

I was loading this file using defsystem when I got this error:

>>Error: File system bug on host GOLDILOCKS:
         Operating system error - Page fault on unallocated VMA 73106074.
         For CAPRIS: SOURCES; NOT-FEATURES.BIN.NEWEST
While in the function (:METHOD FS:HOST-UNIT :COMMAND)  FS:OPEN-CHAOS  (:METHOD FS:QFILE-ACCESS-PATH :OPEN)

(:METHOD FS:HOST-UNIT :COMMAND):  (P.C. = 236)
   Arg 0 (SELF): #<HOST-UNIT 3210002>
   Arg 1 (SELF-MAPPING-TABLE): FS:HOST-UNIT
   Arg 2 (OPERATION): :COMMAND
   Arg 3 (MARK-P): NIL
   Arg 4 (STREAM-OR-HANDLE): (:CREATE "O2813")
   Arg 5 (SIMPLE-P): NIL
   Arg 6 (WHOSTATE): "Open"
   Rest arg (COMMANDS): ("OPEN " :WRITE " " :BINARY "" "" "" "" "" "" ...)
   Local 8 (HANDLE): "O2813"
   Local 9 (STREAM): NIL
   Local 10 (PKT): #<Chaos Packet 24043600>
   Local 11 (SUCCESS): NIL
   Local 12 (STRING): "O2813 ERROR BUG F Operating system error - Page fault on unallocated VMA 73106074.
"
   Local 13 (TRANSACTION-ID): "T3005"
   Local 14 (CREATE-P): T
   Local 15 (CONDITION): NIL
   Local 16: T
   Local 17: #<CASE-HANDLER 37666420>
   Local 18: NIL
   Local 19: (#<CASE-HANDLER 37666420>)

FS:OPEN-CHAOS:  (P.C. = 674)
   Arg 0 (ACCESS-PATH): #<LMFS-QFILE-ACCESS-PATH GOLDY using QFILE 3207771>
   Arg 1 (REAL-PATHNAME): #<LMFS-PATHNAME "GOLDY:>p>chen>5src>not-features.bin">
   Arg 2 (*COMMAND-PATHNAME*-initialization): #<LOGICAL-PATHNAME "CAPRIS: SOURCES; NOT-FEATURES.BIN.NEWEST">
   Arg 3 (OPTIONS): (:DIRECTION :OUTPUT :CHARACTERS NIL)

(:METHOD FS:QFILE-ACCESS-PATH :OPEN):  (P.C. = 7)
   Arg 0 (SELF): #<LMFS-QFILE-ACCESS-PATH GOLDY using QFILE 3207771>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:QFILE-ACCESS-PATH -- 4. IV's, 0. FL's 37173641>
   Arg 2 (OPERATION): :OPEN
   Arg 3 (REAL-PATHNAME): #<LMFS-PATHNAME "GOLDY:>p>chen>5src>not-features.bin">
   Arg 4 (PATHNAME): #<LOGICAL-PATHNAME "CAPRIS: SOURCES; NOT-FEATURES.BIN.NEWEST">
   Rest arg (OPTIONS): (:DIRECTION :OUTPUT :CHARACTERS NIL)

(:METHOD FS:ACTIVE-PATHNAME-MIXIN :OPEN):  (P.C. = 14)
   Arg 0 (SELF): #<LMFS-PATHNAME "GOLDY:>p>chen>5src>not-features.bin">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:ACTIVE-PATHNAME-MIXIN -- 1. IV's, 0. FL's 57376727>
   Arg 2 (OPERATION): :OPEN
   Arg 3 (PATHNAME): #<LOGICAL-PATHNAME "CAPRIS: SOURCES; NOT-FEATURES.BIN.NEWEST">
   Rest arg (OPTIONS): (:DIRECTION :OUTPUT :CHARACTERS NIL)

(:DEFUN-METHOD FS:LOGICAL-PATHNAME-PASS-ON):  (P.C. = 7)
   Arg 0 (SELF): #<LOGICAL-PATHNAME "CAPRIS: SOURCES; NOT-FEATURES.BIN.NEWEST">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:LOGICAL-PATHNAME -- 0. IV's, 4. FL's 57226501>
   Rest arg (REST): (:OPEN #<LOGICAL-PATHNAME "CAPRIS: SOURCES; NOT-FEATURES.BIN.NEWEST"> :DIRECTION :OUTPUT :CHARACTERS NIL)

(:METHOD FS:LOGICAL-PATHNAME :OPEN):  (P.C. = 10)
   Arg 0 (SELF): #<LOGICAL-PATHNAME "CAPRIS: SOURCES; NOT-FEATURES.BIN.NEWEST">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:LOGICAL-PATHNAME -- 0. IV's, 4. FL's 57226501>
   Arg 2 (OPERATION): :OPEN
   Rest arg (.ARGS.): (#<LOGICAL-PATHNAME "CAPRIS: SOURCES; NOT-FEATURES.BIN.NEWEST"> :DIRECTION :OUTPUT :CHARACTERS NIL)

FS:COMMON-LISP-OPEN:  (P.C. = 445)
   Arg 0 (PATHNAME): #<LOGICAL-PATHNAME "CAPRIS: SOURCES; NOT-FEATURES.BIN.NEWEST">
   Arg 1 (KEYWORD-ARGS): (:DIRECTION :OUTPUT :CHARACTERS NIL)

OPEN:  (P.C. = 255)
   Arg 0 (PATHNAME): #<LOGICAL-PATHNAME "CAPRIS: SOURCES; NOT-FEATURES.BIN.NEWEST">
   Rest arg (KEYWORD-ARGS): (:DIRECTION :OUTPUT :CHARACTERS NIL)

Rest of stack:
COMPILER:COMPILE-FILE:  (P.C. = 206)
SI:COMPILE-FILE-1:  (P.C. = 6)
SI:DO-FILE-TRANSFORMATIONS:  (P.C. = 242)
SI:PERFORM-TRANSFORMATIONS:  (P.C. = 166)
SI:PERFORM-TRANSFORMATIONS:  (P.C. = 64)
MAKE-SYSTEM:  (P.C. = 222)
SI:*EVAL:  (P.C. = 370)
PROGN:  (P.C. = 22)
SI:*EVAL:  (P.C. = 421)
COND:  (P.C. = 23)
SI:*EVAL:  (P.C. = 421)
LET*:  (P.C. = 57)
SI:*EVAL:  (P.C. = 605)
SI:READFILE-INTERNAL:  (P.C. = 77)
FS:LOAD-STREAM:  (P.C. = 16)
LOGIN:  (P.C. = 557)
SI:*EVAL:  (P.C. = 370)
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 200)
SI:LISP-COMMAND-LOOP:  (P.C. = 115)
SI:LISP-TOP-LEVEL1:  (P.C. = 22)
SI:LISP-TOP-LEVEL:  (P.C. = 7)
18-Oct-84 14:10:20-EDT,1288;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 18 Oct 84 14:09-EDT
Date: 18 Oct 1984  14:11 EDT (Thu)
Message-ID: <SR.EHPYC.12056463426.BABYL@MIT-SPEECH>
From: Scott Cyphers <SR.EHPYC@MIT-SPEECH>
To:   Francine Chen <SR.CHEN@MIT-SPEECH>
Cc:   BUG-LISPM@MIT-OZ
Subject: file system bug???
In-reply-to: Msg of 18 Oct 1984 13:36-EDT from Francine Chen <SR.CHEN>

    Date: Thursday, 18 October 1984, 13:36-EDT
    From: Francine Chen <SR.CHEN>
    To:   BUG-LISPM at MIT-OZ
    Re:   file system bug???

    In Symbolics 3600 Release 5.2, ZOO 3.2, Spire-Macros 3.8, Compute 2.5,
    Attribute 3.3, Audio 2.4, Speech-Attributes 2.3, Display 3.7,
    Speech-Layouts 4.7, Versatec 3.0, Prtout 2.0, Spire 14.0, SpireX 11.1,
    ZOO-SPIRE 1.0, FEP 18, on Lisp Machine Grizzly:

    I was loading this file using defsystem when I got this error:

    >>Error: File system bug on host GOLDILOCKS:
             Operating system error - Page fault on unallocated VMA 73106074.
             For CAPRIS: SOURCES; NOT-FEATURES.BIN.NEWEST
    While in the function (:METHOD FS:HOST-UNIT :COMMAND)  FS:OPEN-CHAOS  (:METHOD FS:QFILE-ACCESS-PATH :OPEN)

A few days ago I found this file by Moon in the DOC directory with
various warnings and things in it and gave it a try.
18-Oct-84 14:13:36-EDT,765;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 18 Oct 84 14:12-EDT
Date: 18 Oct 1984  14:15 EDT (Thu)
Message-ID: <SR.EHPYC.12056464066.BABYL@MIT-SPEECH>
From: Scott Cyphers <SR.EHPYC@MIT-SPEECH>
To:   Francine Chen <SR.CHEN@MIT-SPEECH>
Cc:   BUG-LISPM@MIT-OZ
Subject: file system bug???
In-reply-to: Msg of 18 Oct 1984 13:36-EDT from Francine Chen <SR.CHEN>

Soory about that partial reply.

Anyways, I may have made soe of the numbers too big (although things
seemd to be working better the last few days) so I'm going to try
something a little smaller and see if that makes ther problme go away.
The unallocated VMA is happening when Goldy tries to intern the
pathname in the hash table, which is why I suspect some of those
changes I tried.
19-Oct-84 16:40:06-EDT,382;000000000000
Mail-From: SLC created at 19-Oct-84 16:39:02
Date: Fri 19 Oct 84 16:39:01-EDT
From: Stephen L. Chiu <SLC@MIT-OZ>
Subject: Bug in atan function
To: bug-lispm@MIT-OZ

There appears to be a bug in the atan and atan2 functions in version 92.
(atan y x) returns a number greater than pi/2 when both y and x are
positive.  This happens when y>>x.  Try (atan 1.0e5 1.0).
-------
19-Oct-84 23:02:16-EDT,1529;000000000000
Received: from MIT-JIMI by MIT-OZ via Chaosnet; 19 Oct 84 23:01-EDT
Date: Friday, 19 October 1984, 23:02-EDT
From: jcma at MIT-MC
Sender: KWH at MIT-OZ
Subject: Dumping a band
To: RWK at SCRC-YUKON
Cc: jcma at MIT-MC, BUG-LISPM at MIT-OZ, bug-lmdoc at SCRC-YUKON
In-reply-to: <840731095243.3.RWK@YUKON.SCRC.Symbolics>

    Received: from SCRC-YUKON by MIT-OZ via Chaosnet; 31 Jul 84 10:02-EDT
    Date: Tuesday, 31 July 1984, 09:52-EDT
    From: Robert W. Kerns <RWK at SCRC-YUKON>
    Subject: Dumping a band
    To: jcma at MIT-PYGMALION
    cc: BUG-LISPM at MIT-OZ, bug-lmdoc at SCRC-YUKON
    In-Reply-To: The message of 31 Jul 84 03:17-EDT from jcma at MIT-PYGMALION
    Message-ID: <840731095243.3.RWK@YUKON.SCRC.Symbolics>

	Date: Tuesday, 31 July 1984, 03:17-EDT
	From:  <jcma at MIT-PYGMALION>
	doesn't seem to work in 5.1.  See bsg's comment in the source.

	>>Error: Invalid byte-size 16 for character mode in OPEN.
		 For FEP0:>relatus-128.load.2
	While in the function FS:FEP-PATHNAME-ERROR  (:METHOD FS:FEP-FILE-ACCESS-PATH :OPEN)  (:METHOD FS:ACTIVE-PATHNAME-MIXIN :OPEN)
    You are trying to use LM-2 technology for world
    distribution on a 3600.  Do (MAKE-SYSTEM 'FEP-TAPE)
    and (TAPE:WRITE-FEP-FILES-TO-TAPE).

    It seems that the TAPE document only documents the wrong
    way to do it, and nothing documents the right way.  This
    was an oversight; FEP-TAPE was distributed with Release 5.0.

What is the recommended procedure for reloading fep files from tape?
21-Oct-84 16:53:18-EDT,7465;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 21 Oct 84 16:48-EDT
Date: 21 October 1984 16:49-EDT
From: Alan Bawden <ALAN @ MIT-MC>
Subject:  DON'T RESPOND TO ALAN, I'M JUST FORWARDING THIS.
To: BUG-LISPM @ MIT-MC

Date: Sunday, 30 September 1984, 13:29-EDT
From: Christopher Eliot <CRE at SANCHO-PANZA>
Subject: Bug sending mail from Zmail
To: BUG-LISPM at MIT-OZ

In Release 5.1, Hardcopy 20.9, Zmail 83.60, LMFS 37.37,
Experimental MIT 1.4, FEP 18, on Lisp Machine Sancho Panza (3600):



>>Trap: The function MAILER:ALL-MAIL-ADDRESSES-FORWARD-BETWEEN-HOSTS-P is undefined.
While in the function (:METHOD MAILER:CHAOS-MAIL-USER :START-MESSAGE)  (:METHOD MAILER:CHAOS-MAIL-USER :COMBINED :START-MESSAGE)  ZWEI:INVOKE-MAIL-SERVICE

(:METHOD MAILER:CHAOS-MAIL-USER :START-MESSAGE):  (P.C. = 16)
   Arg 0 (SELF): #<CHAOS-MAIL-USER 55177657>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor MAILER:CHAOS-MAIL-USER -- 3. IV's, 1. FL's 2600337>
   Arg 2 (OPERATION): :START-MESSAGE
   Rest arg (IGNORE): ((:USER #<USER CRE 16343433>))

(:METHOD MAILER:CHAOS-MAIL-USER :COMBINED :START-MESSAGE):  (P.C. = 15)
   Arg 0 (SELF): #<CHAOS-MAIL-USER 55177657>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor MAILER:CHAOS-MAIL-USER -- 3. IV's, 1. FL's 2600337>
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

ZWEI:INVOKE-MAIL-SERVICE:  (P.C. = 54)
   Arg 0 (SERVICE-ACCESS-PATH): #<SERVICE-ACCESS-PATH STORE-AND-FORWARD-MAIL (CHAOS-MAIL) -- ML on CHAOS 55172514>
   Arg 1 (RECIPIENTS): ((:NAME "cre" :HOST (:OBJECT #<LISPM-HOST SANCHO-PANZA 16343025>) :ORIGINAL-INTERVAL (("Cc: cre" 4) ("Cc: cre" 7)) :HOST-DEFAULTED T) (:NAME "CRE" :HOST (:OBJECT #<ITS-HOST MC 16350663>) :INTERVAL (("To: CRE@MIT-MC" 4) ("To: CRE@MIT-MC" 14))) (:NAME "TIM" :HOST (:OBJECT #<ITS-HOST MC 16350663>) :INTERVAL (("To: TIM@MIT-MC" 4) ("To: TIM@MIT-MC" 14))))
   Arg 2 (TEMPLATE-EXPANSION): (:TEXT #<NODE 55171272> :HEADERS (:DATE 2674402030 :FROM ((:USER #<USER CRE 16343433>)) :SUBJECT "Steve" :TO ((:NAME "TIM" :HOST ** :INTERVAL **) (:NAME "CRE" :HOST ** :INTERVAL **)) :CC ((:NAME "cre" :HOST ** :ORIGINAL-INTERVAL ** :HOST-DEFAULTED T)) ...) :HEADER-FORMAT :INCLUDE-PERSONAL :TRANSMIT-TIME 2674402030 :DRAFT-MSG #<DRAFT-MSG 12233756>)

ZWEI:NETWORK-SEND-IT-1:  (P.C. = 147)
   Arg 0 (SERVICES): (#<SERVICE-ACCESS-PATH STORE-AND-FORWARD-MAIL (CHAOS-MAIL) -- MC on CHAOS 55171662> #<SERVICE-ACCESS-PATH STORE-AND-FORWARD-MAIL (CHAOS-MAIL) -- ML on CHAOS 55172514> #<SERVICE-ACCESS-PATH STORE-AND-FORWARD-MAIL (CHAOS-MAIL) -- XX on CHAOS 55173505> #<SERVICE-ACCESS-PATH STORE-AND-FORWARD-MAIL (CHAOS-MAIL) -- OZ on CHAOS 55173676> #<SERVICE-ACCESS-PATH STORE-AND-FORWARD-MAIL (CHAOS-MAIL) -- PREP on CHAOS 55173102> #<SERVICE-ACCESS-PATH STORE-AND-FORWARD-MAIL (CHAOS-MAIL) -- NU-1 on CHAOS 55173363> #<SERVICE-ACCESS-PATH STORE-AND-FORWARD-MAIL (CHAOS-MAIL) -- NU-0 on CHAOS 55173644> #<SERVICE-ACCESS-PATH STORE-AND-FORWARD-MAIL (CHAOS-MAIL) -- NU-21 on CHAOS 55173745> #<SERVICE-ACCESS-PATH STORE-AND-FORWARD-MAIL (CHAOS-MAIL) -- NU-14 on CHAOS 55173762> #<SERVICE-ACCESS-PATH STORE-AND-FORWARD-MAIL (CHAOS-MAIL) -- NU-22 on CHAOS 55173777> ...)
   Arg 1 (RECIPIENTS): ((:NAME "cre" :HOST (:OBJECT #<LISPM-HOST SANCHO-PANZA 16343025>) :ORIGINAL-INTERVAL (("Cc: cre" 4) ("Cc: cre" 7)) :HOST-DEFAULTED T) (:NAME "CRE" :HOST (:OBJECT #<ITS-HOST MC 16350663>) :INTERVAL (("To: CRE@MIT-MC" 4) ("To: CRE@MIT-MC" 14))) (:NAME "TIM" :HOST (:OBJECT #<ITS-HOST MC 16350663>) :INTERVAL (("To: TIM@MIT-MC" 4) ("To: TIM@MIT-MC" 14))))
   Arg 2 (TEMPLATE-EXPANSION): (:TEXT #<NODE 55171272> :HEADERS (:DATE 2674402030 :FROM ((:USER #<USER CRE 16343433>)) :SUBJECT "Steve" :TO ((:NAME "TIM" :HOST ** :INTERVAL **) (:NAME "CRE" :HOST ** :INTERVAL **)) :CC ((:NAME "cre" :HOST ** :ORIGINAL-INTERVAL ** :HOST-DEFAULTED T)) ...) :HEADER-FORMAT :INCLUDE-PERSONAL :TRANSMIT-TIME 2674402030 :DRAFT-MSG #<DRAFT-MSG 12233756>)

ZWEI:NETWORK-SEND-IT:  (P.C. = 114)
   Arg 0 (RECIPIENTS): ((:NAME "TIM" :HOST (:OBJECT #<ITS-HOST MC 16350663>) :INTERVAL (("To: TIM@MIT-MC" 4) ("To: TIM@MIT-MC" 14))) (:NAME "CRE" :HOST (:OBJECT #<ITS-HOST MC 16350663>) :INTERVAL (("To: CRE@MIT-MC" 4) ("To: CRE@MIT-MC" 14))) (:NAME "cre" :HOST (:OBJECT #<LISPM-HOST SANCHO-PANZA 16343025>) :ORIGINAL-INTERVAL (("Cc: cre" 4) ("Cc: cre" 7)) :HOST-DEFAULTED T))
   Arg 1 (TEMPLATE-EXPANSION): (:TEXT #<NODE 55171272> :HEADERS (:DATE 2674402030 :FROM ((:USER #<USER CRE 16343433>)) :SUBJECT "Steve" :TO ((:NAME "TIM" :HOST ** :INTERVAL **) (:NAME "CRE" :HOST ** :INTERVAL **)) :CC ((:NAME "cre" :HOST ** :ORIGINAL-INTERVAL ** :HOST-DEFAULTED T)) ...) :HEADER-FORMAT :INCLUDE-PERSONAL :TRANSMIT-TIME 2674402030 :DRAFT-MSG #<DRAFT-MSG 12233756>)

ZWEI:FUNCALL-TEMPLATE-EXPANSION:  (P.C. = 47)
   Arg 0 (TEMPLATE-EXPANSION): (:TEXT #<NODE 55171272> :HEADERS (:DATE 2674402030 :FROM ((:USER #<USER CRE 16343433>)) :SUBJECT "Steve" :TO ((:NAME "TIM" :HOST ** :INTERVAL **) (:NAME "CRE" :HOST ** :INTERVAL **)) :CC ((:NAME "cre" :HOST ** :ORIGINAL-INTERVAL ** :HOST-DEFAULTED T)) ...) :HEADER-FORMAT :INCLUDE-PERSONAL :TRANSMIT-TIME 2674402030 :DRAFT-MSG #<DRAFT-MSG 12233756>)
   Arg 1 (FUNCTION): ZWEI:NETWORK-SEND-IT
   Rest arg (ARGS): (((:NAME "TIM" :HOST (:OBJECT #<ITS-HOST MC 16350663>) :INTERVAL (** **)) (:NAME "CRE" :HOST (:OBJECT #<ITS-HOST MC 16350663>) :INTERVAL (** **)) (:NAME "cre" :HOST (:OBJECT #<LISPM-HOST SANCHO-PANZA 16343025>) :ORIGINAL-INTERVAL (** **) :HOST-DEFAULTED T)) (:TEXT #<NODE 55171272> :HEADERS (:DATE 2674402030 :FROM (**) :SUBJECT "Steve" :TO (** **) :CC (**) ...) :HEADER-FORMAT :INCLUDE-PERSONAL :TRANSMIT-TIME 2674402030 :DRAFT-MSG #<DRAFT-MSG 12233756>))

(:METHOD ZWEI:BASIC-DRAFT-MSG :TRANSMIT):  (P.C. = 315)
   Arg 0 (SELF): #<DRAFT-MSG 12233756>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:BASIC-DRAFT-MSG -- 7. IV's, 0. FL's 4271413>
   Arg 2 (OPERATION): :TRANSMIT

(:METHOD ZWEI:DRAFT-MSG :COMBINED :TRANSMIT):  (P.C. = 25)
   Arg 0 (SELF): #<DRAFT-MSG 12233756>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:DRAFT-MSG -- 17. IV's, 3. FL's 4271423>
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

Rest of stack:
ZWEI:COM-SEND-MESSAGE:  (P.C. = 50)
ZWEI:COM-MAIL-END:  (P.C. = 4)
ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 200)
(:METHOD ZWEI:ZMAIL-FRAME :COMBINED :EDIT):  (P.C. = 50)
ZWEI:ZMAIL-MAIL:  (P.C. = 113)
ZWEI:CONTINUE-DRAFT-MSG:  (P.C. = 21)
ZWEI:COMPOSE-VIA-DRAFT-MSG:  (P.C. = 5)
ZWEI:FUNCALL-TEMPLATE-EXPANSION:  (P.C. = 47)
ZWEI:COMPOSE-FROM-TEMPLATE:  (P.C. = 20)
ZWEI:NORMAL-REPLY-INTERNAL:  (P.C. = 54)
ZWEI:NORMAL-REPLY:  (P.C. = 5)
ZWEI:COM-ZMAIL-REPLY:  (P.C. = 20)
ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
ZWEI:ZMAIL-COMMAND-EXECUTE:  (P.C. = 6)
(:METHOD ZWEI:ZMAIL-FRAME :PROCESS-COMMAND-CHAR):  (P.C. = 7)
(:INTERNAL (:INTERNAL (:METHOD ZWEI:ZMAIL-FRAME :COMBINED :PROCESS-COMMAND-CHAR) 0) 0):  (P.C. = 7)
(:METHOD ZWEI:ZMAIL-COMMAND-LOOP-MIXIN :WHOPPER :PROCESS-COMMAND-CHAR):  (P.C. = 21)
(:INTERNAL (:METHOD ZWEI:ZMAIL-FRAME :COMBINED :PROCESS-COMMAND-CHAR) 0):  (P.C. = 12)
(:METHOD ZWEI:ZMAIL-FRAME :WHOPPER :PROCESS-COMMAND-CHAR):  (P.C. = 21)
(:METHOD ZWEI:ZMAIL-FRAME :COMBINED :PROCESS-COMMAND-CHAR):  (P.C. = 11)
(:METHOD ZWEI:ZMAIL-FRAME :COMMAND-LOOP):  (P.C. = 146)
(:METHOD ZWEI:ZMAIL-FRAME :COMBINED :COMMAND-LOOP):  (P.C. = 47)
ZWEI:ZMAIL-PROCESS-TOP-LEVEL:  (P.C. = 52)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
21-Oct-84 20:40:02-EDT,1856;000000000000
Received: from SCRC-YUKON by MIT-OZ via Chaosnet; 21 Oct 84 20:39-EDT
Received: from SCRC-NEPONSET by SCRC-YUKON via CHAOS with CHAOS-MAIL id 68580; Sun 21-Oct-84 20:33:53-EDT
Date: Sunday, 21 October 1984, 20:35-EDT
From: David C. Plummer <DCP at SCRC-TENEX>
Subject: Found PACKAGE bound to NIL in break loop
To: TIM at MIT-MC, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 23 Sep 84 03:19-EDT from TIM at MIT-MC
Message-ID: <841021203550.0.DCP@NEPONSET.SCRC.Symbolics>

    Date: Sunday, 23 September 1984, 03:19-EDT
    From:  <TIM at MIT-MC>

    In Symbolics 3600 Release 5.2, FEP 18, on Lisp Machine Janis Joplin:

    In the midst of doing an APROPOS, the window took a MORE exception.
    While paused, I decided to enter a break loop (to see what a symbol was
    bound to), and, well, PACKAGE was bound to NIL, and we lost.  Perhaps
    someone should make sure that PACKAGE is bound to something reasonable
    when the user enters a break loop.

      (DEFUN APROPOS-1 (SYMBOL &AUX COMMA)
	(COND ((STRING-SEARCH APROPOS-SUBSTRING (GET-PNAME SYMBOL))
	       (PUSH SYMBOL RETURN-LIST)
	       ;; Binding the package to NIL forces the package to be printed.
	       ;; This is better than explicitly printing the package, because
	       ;; this way you get the "short" version.
	       (LET ((PACKAGE NIL))
    **MORE**==>  (FORMAT T "~%~S" SYMBOL))
	       ...)))

    >>Trap: The first argument given to the ARRAY-LEADER instruction, NIL, was not an array.
    While in the function SI:PKG-INTERN-INTERNAL  INTERN  SI:XR-READ-SYMBOL

This problem, and many more in its class, has been fixed by a general
mechanism to handle standard values and interactive values.  There are
still some rough edges and little things we didn't think about, but the
general problem has been fixed and will appear in 6.0.
21-Oct-84 20:44:58-EDT,2047;000000000000
Received: from SCRC-YUKON by MIT-OZ via Chaosnet; 21 Oct 84 20:44-EDT
Received: from SCRC-NEPONSET by SCRC-YUKON via CHAOS with CHAOS-MAIL id 68584; Sun 21-Oct-84 20:38:19-EDT
Date: Sunday, 21 October 1984, 20:40-EDT
From: David C. Plummer <DCP at SCRC-TENEX>
Subject: Found PACKAGE bound to NIL in break loop
To: TIM at MIT-MC
cc: David C. Plummer <DCP at SCRC-TENEX>,
    Joseph R Goldstone <joseph at SCRC-QUABBIN>,
    David A. Moon <Moon at SCRC-TENEX>, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 23 Sep 84 03:19-EDT from TIM at MIT-MC
Supersedes: <841021203550.0.DCP@NEPONSET.SCRC.Symbolics>
Message-ID: <841021204013.2.DCP@NEPONSET.SCRC.Symbolics>

    Date: Sunday, 23 September 1984, 03:19-EDT
    From:  <TIM at MIT-MC>

    In Symbolics 3600 Release 5.2, FEP 18, on Lisp Machine Janis Joplin:

    In the midst of doing an APROPOS, the window took a MORE exception.
    While paused, I decided to enter a break loop (to see what a symbol was
    bound to), and, well, PACKAGE was bound to NIL, and we lost.  Perhaps
    someone should make sure that PACKAGE is bound to something reasonable
    when the user enters a break loop.

      (DEFUN APROPOS-1 (SYMBOL &AUX COMMA)
	(COND ((STRING-SEARCH APROPOS-SUBSTRING (GET-PNAME SYMBOL))
	       (PUSH SYMBOL RETURN-LIST)
	       ;; Binding the package to NIL forces the package to be printed.
	       ;; This is better than explicitly printing the package, because
	       ;; this way you get the "short" version.
	       (LET ((PACKAGE NIL))
    **MORE**==>  (FORMAT T "~%~S" SYMBOL))
	       ...)))

    >>Trap: The first argument given to the ARRAY-LEADER instruction, NIL, was not an array.
    While in the function SI:PKG-INTERN-INTERNAL  INTERN  SI:XR-READ-SYMBOL

This problem, and many more in its class, has been fixed by a general
mechanism to handle standard values and interactive values.  There are
still some rough edges and little things we didn't think about, but the
general problem has been fixed and will appear in 6.0.
21-Oct-84 22:45:17-EDT,1017;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 21 Oct 84 22:43-EDT
Received: from SCRC-HARLEM by SCRC-YUKON via CHAOS with CHAOS-MAIL id 68607; Sun 21-Oct-84 22:38:00-EDT
Date: Sun, 21 Oct 84 22:39 EDT
From: Joseph R Goldstone <joseph@SCRC-QUABBIN.ARPA>
Subject: FED is still confused about where fonts should go
To: Tim McNerney <TIM@MIT-MC.ARPA>, BUG-LISPM@MIT-MC.ARPA
In-Reply-To: The message of 7 Sep 84 05:56-EDT from Tim McNerney <TIM at MIT-MC>
Message-ID: <841021223922.4.JOSEPH@HARLEM.SCRC.Symbolics>

    Date: 7 September 1984 05:56-EDT
    From: Tim McNerney <TIM @ MIT-MC>

    FED still thinks that font files should be saved in SYS:FONTS;

This should have been fixed in Release 5.2, if I read the Release 5 sources here
(y:>rel-5>lmsym>fed.lisp) correctly.  *FONT-PATHNAME-TEMPLATE* is the root from
which FED creates the default pathname offered by [Write File] (for example).
It stores into SYS:FONTS;TV; now.

Do you remember what world you were using when you sent this report?
21-Oct-84 23:54:57-EDT,1658;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 21 Oct 84 23:53-EDT
Received: from SCRC-HARLEM by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 93387; Sun 21-Oct-84 23:52:47-EDT
Date: Sun, 21 Oct 84 23:52 EDT
From: Joseph R Goldstone <joseph@SCRC-QUABBIN.ARPA>
Subject: DON'T RESPOND TO ALAN, I'M JUST FORWARDING THIS.
To: CRE@MIT-MC.ARPA
cc: CJL%MIT-OZ@MIT-ML.ARPA, BUG-LISPM@MIT-MC.ARPA
In-Reply-To: The message of 21 Oct 84 16:49-EDT from Alan Bawden <ALAN at MIT-MC>
Message-ID: <841021235258.7.JOSEPH@HARLEM.SCRC.Symbolics>

    Date: 21 October 1984 16:49-EDT
    From: Alan Bawden <ALAN @ MIT-MC>

    Date: Sunday, 30 September 1984, 13:29-EDT
    From: Christopher Eliot <CRE at SANCHO-PANZA>
    Subject: Bug sending mail from Zmail
    To: BUG-LISPM at MIT-OZ

    In Release 5.1, Hardcopy 20.9, Zmail 83.60, LMFS 37.37,
    Experimental MIT 1.4, FEP 18, on Lisp Machine Sancho Panza (3600):

    >>Trap: The function MAILER:ALL-MAIL-ADDRESSES-FORWARD-BETWEEN-HOSTS-P is undefined.
    While in the function (:METHOD MAILER:CHAOS-MAIL-USER :START-MESSAGE)  (:METHOD MAILER:CHAOS-MAIL-USER :COMBINED :START-MESSAGE)  ZWEI:INVOKE-MAIL-SERVICE

The cause of this problem is your rather unique environment.  You have loaded
Hardcopy, ZMail, and LMFS patches past 5.1 levels, but neglected to load patches
for the System system.  That must have taken some work.  Anyway, some of the 
Zmail stuff patched in at Zmail 83.58 uses code patched in System patch 242.337.
The lesson is, you can't try to fool Zmail, or you will confuse it even more.

I'd snarf a 5.2 off some reputable 7th floor machine; maybe CJL can suggest one?
22-Oct-84 01:26:48-EDT,6594;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 22 Oct 84 01:25-EDT
Received: from SCRC-NEPONSET by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 93389; Mon 22-Oct-84 00:16:23-EDT
Date: Monday, 22 October 1984, 00:17-EDT
From: David C. Plummer <DCP at SCRC-TENEX>
Subject: [PENTLAND at SRI-AI: ti benchmarks]
To: JCMA at MIT-OZ, bug-lispm at MIT-OZ
In-Reply-To: The message of 12 Oct 84 02:41-EDT from JCMA at MIT-OZ
Message-ID: <841022001711.3.DCP@NEPONSET.SCRC.Symbolics>

    Date: Friday, 12 October 1984, 02:41-EDT
    From: JCMA@MIT-OZ

    Here are the details on Pentland's timimgs.

Here's my comments.

    Received: from MIT-MC by MIT-OZ via Chaosnet; 11 Oct 84 02:55-EDT
    Date: Wed 10 Oct 84 23:50:31-PDT
    From: PENTLAND@SRI-AI.ARPA
    Subject: ti benchmarks
    To: tyson@SRI-AI.ARPA, jcma%MIT-OZ@MIT-MC.ARPA, poser@SU-CSLI.ARPA

    Here are the benchmarks I reported.  They are simple because I had
    to type them in during the short period of time available to me.

    ;;; -*- Mode: LISP -*-
    ;;; SIMPLE benchmarks for typing in short time 

    (defun meter (s)
      (setq time (time))
      (eval s)
      (time-difference (time) time))

This is accurate to 1/60 second.  He should be using
(time:fixnum-microsecond-time) which is in the GrayNual and presumably
in all Lisp Machine systems.  Another problem this has is that it allows
scheduling.  This will show up as irregularities in the timings.  You
will get OK timings most of the time, but sometimes they will be wildly
off.  He should probably wrap a without-interrupts around it, but that
won't really turn of everything; it just turns off scheduling.  The
combination of these two could easily disqualify all his timings.

    (setq ar1 (make-array '(100. 100.) ':type art-8b) 
	  ar2 (make-array '(100. 100.) ':type art-8b) 
	  bigar (make-array '(1000. 1000.) ':type art-8b))

Note that two dimensional arrays aren't speed demons, since they need to
do a multiply per array activity.  If that's what he wants to meter, he
should say so.

    (defflavor ship (a b c d e) () :gettable-instance-variables 
    :settable-instance-variables :initable-instance-variables)

    (defun blt (ar1 ar2) 
      (loop for i from 0 below 1000. do 
	 (bitblt tv:alu-seta 100. 100. ar1 0 0 ar2 0 0)))

This is an OK test, but doesn't show much.  It also isn't qualified.  He
should vary the ALU, vary the width, vary the height, and vary the
offsets.  Some of these cause the microcode to take different paths.
The thing he is metering here is probably the fastest route.

    (defun func (&optional (x 10000.)) (if (plusp x) (func (- x 1))))

This is unrealistic.  It isn't measuring function calling, it is
measuring recursion.  The 3600 will have to bump stack buffers in and
out pretty often with this test.  If he really wanted to measure
function calling, he should have done
    (defun func (&optional just-return)
      (if just-return nil
	(loop repeat 10000. do (func t))))
or he should have used one of the TAK routines which is a much better
test.  This also only test a specified optional argument function call.
What about &rest, 0, 9 arguments, several &optionals, combinations, and
things like 2 required, 2 &optional, 3 supplied?

    (defun num (&optional (sum 0.0))  ; repeat with * instead of //, etc.
	    (loop for i from 1.0 below 10000.0 by 1.0 do 
		    (setq sum (* sum i))))
This is testing more than just floating multiply.  The multiply is one
instruction out of a 10 instruction loop on the 3600 (which includes a
floating add and a floating compare and some extra memory references).

    (defun nums (&optional (sum 0s0))   ; also repeat with // etc
	    (loop for i from 1s0 below 10000s0 by 1s0 do
		     (setq sum (* sum i))))

The 3600 doesn't have small floats.

    (defun numo (&optional (sum 0.0))  ; loop overhead 14/60th for 3600
	    (loop for i from 0.0 below 10000.0 by 1.0 do ())) ; 21/60 for TI

OK, so he noticed the overhead.

    (defun numos (&optional (sum 0s0)) ; 16/60 for TI, 24/60 for LM2
	    (loop for i from 0s0 below 10000s0 by 1s0 do ()))

    (defun consit () (loop for i from 0 below 10000. by 1 do (cons nil nil)))

If you are going to report numbers about consing, you MUST use something
that gives the kind of information MTF gives.  CONS is usually fast, but
every so often it has to extend a region, or if it can't do that,
allocate a new region.  If the CADR paging system is still a linear
portion of disk, allocating more memory is cheap on the CADR, but a
little more expensive on the 3600.  I'll also mention that since the
3600's paging system is written in Lisp and disk accesses don't tie up
the entire processor, the 3600 can do some storage optimizations that
could make a CADR thrash.

    (defun inst () 
	    (loop for i from 0 below 1000. do 
		    (make-instance 'ship ':a 0 ':b 0 ':c 0 ':d 0 ':e 0)))

I guess, though that isn't interesting.  You also have to determine how
important this is.  You also have to meter real-life instances, which
are usually application dependent.

    (defun msg () (setq s (make-instance 'ship)) 
	    (loop for i from 0 below 10000. do (send s ':set-a 1)))

This is metering 1 required argument (4 on the 3600, 2(?) on the CADR),
and the same number supplied.  It is also metering the
MOVEM-INSTANCE-VARIABLE instruction of the 3600 (I don't know how the
CADR does it).

    (defun pager (bigar) 
      (loop for x from 0 below 1000. do
	    (loop for y from 0 below 1000. do
		  (aref bigar x y))))         

Granted the disk is much slower than the processor.  I'll point out that
any serious application program would notice this is where time was
going and use page-in-array as necessary.  Additionally, any serious
application program that makes random access on such a large array is
going to lose without enough physical memory to accomidate it.  Finally,
this test isn't very easy to run.  Did he you guarentee all the pages
were not in main memory?  This one will also cause a lot of schedules
since it takes so long to run.

    ; running protocol: run until stable times are achieved 
    ;  e.g., (meter '(func)) need to extend stack several times 
    ; first time through
    ; timings 9 oct 84
	ti	lm2	3600
	270	730	441	bitblt
	31	70	16	func
	33	50	17	floating pt (averages over *, //, etc)
	25-40	130	17-40	cons
	140	234	52	inst  
	52	122	21	msg
	2250	7150	1600	pager (min no. 1/60th taken) 

As I said, I'll wait for the movie.
22-Oct-84 01:29:03-EDT,8761;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 22 Oct 84 01:27-EDT
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 112398; Mon 22-Oct-84 01:11:35-EDT
Date: Monday, 22 October 1984, 01:08-EDT
From: David C. Plummer <DCP at SCRC-TENEX>
Subject: Weirdness in Error Flavors
To: John C. Mallery <JCMA at MIT-OZ>, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 14 Oct 84 01:16-EDT from John C. Mallery <JCMA at MIT-OZ>
Message-ID: <841022010856.8.DCP@NEPONSET.SCRC.Symbolics>

    Date: Sunday, 14 October 1984, 01:16-EDT
    From: John C. Mallery <JCMA at MIT-OZ>

    In Symbolics 3600 Release 5.2, Experimental RELATUS 131.0, FEP 18, on Lisp Machine Janis Joplin:

    For some reason that I can'f figure out, but which has been happening when I
    recompile my system for about a year, the dbg:special-command on parse-error
    for reporting a syntactic parsing bug mysteriously disappears.  I just kludged
    the init after message to make it work.  I recall frobbing method combination
    order and patching the problem away in the past.  I kept assuming that I was
    just losing on method combination order.  Can someone tell me what the problem
    is?  All the relevant code should be included here.

Didn't your mommy ever tell you not to use DELQ??  Simple test case:

    (defflavor foo () (dbg:special-commands-mixin error))
    (defflavor bar () (foo))
    
    (defmethod (foo :case :special-command :bar) ()
      "bar"
      123)
    
    (defmethod (foo :case :special-command :baz) ()
      "baz"
      456)
    
    (defmethod (bar :after :init) (ignore)
      (setq dbg:special-commands
	    (delq :bar dbg:special-commands)))
    
    (compile-flavor-methods foo bar)

    (setq xyz (symeval-in-instance (make-instance 'foo) 'dbg:special-commands)) 
=> (:BAZ :BAR)
    (make-instance 'bar)
    xyz
=> (:BAZ)

You're lucky I didn't puke when I saw
    (DEFMETHOD (HACK-FORMAT-ARGS :REPORT) (STREAM)
      (CALL #'FORMAT () STREAM () FORMAT-STRING '(:OPTIONAL :SPREAD) FORMAT-ARGS))
because if I did you wouldn't have gotten this reply.  What's wrong with
LEXPR-FUNCALL?

    (DEFFLAVOR HACK-FORMAT-ARGS
	    (FORMAT-STRING
	      (FORMAT-ARGS NIL))
	    ()
      :INITABLE-INSTANCE-VARIABLES
      :GETTABLE-INSTANCE-VARIABLES
      (:DOCUMENTATION :LOW-LEVEL-MIXIN
      "Use this to get format args recognized.")
      :ABSTRACT-FLAVOR)

    (DEFMETHOD (HACK-FORMAT-ARGS :REPORT) (STREAM)
      (CALL #'FORMAT () STREAM () FORMAT-STRING '(:OPTIONAL :SPREAD) FORMAT-ARGS))

    (DEFFLAVOR HACK-BUG-REPORT-RECIPIENT-MIXIN 
	    ((BUG-RECIPIENT 'BETA-TEST))
	    ()
      :ABSTRACT-FLAVOR)

    (DEFMETHOD (HACK-BUG-REPORT-RECIPIENT-MIXIN :BUG-REPORT-RECIPIENT-SYSTEM)
	       () BUG-RECIPIENT)
    
    ;;--------------------------------------------------------------------------------
    ;; implement a special command for parse-errors
    (DEFFLAVOR EXAMINE-PARSE-TREE-MIXIN () ()
      (:INCLUDED-FLAVORS DBG:SPECIAL-COMMANDS-MIXIN)
      (:REQUIRED-INSTANCE-VARIABLES SENTENCE-OBJECT)
      :ABSTRACT-FLAVOR)

    (DEFMETHOD (EXAMINE-PARSE-TREE-MIXIN :AFTER :INIT) (&REST IGNORE)
      (UNLESS SENTENCE-OBJECT
	(SETQ DBG:SPECIAL-COMMANDS
	      (DELQ :EXAMINE-SENTENCE-SYNTAX DBG:SPECIAL-COMMANDS))))

    (DEFMETHOD (EXAMINE-PARSE-TREE-MIXIN
		 :CASE :SPECIAL-COMMAND :EXAMINE-SENTENCE-SYNTAX) ()
      "Examine parse for sentence"
      (IF SENTENCE-OBJECT
	  (SEND SENTENCE-OBJECT :STEP-INTERNAL TERMINAL-IO)
	  (FORMAT
	    TERMINAL-IO "~&Can't examine sentence because one couldn't be found."))
      NIL)					  ;ensure error is not proceeded
    
    ;;--------------------------------------------------------------------------------
    (DEFFLAVOR EDIT-WORD-SYNTAX-MIXIN () ()
      (:INCLUDED-FLAVORS DBG:SPECIAL-COMMANDS-MIXIN)
      :ABSTRACT-FLAVOR)

    (DEFMETHOD (EDIT-WORD-SYNTAX-MIXIN :CASE :SPECIAL-COMMAND :EDIT-WORD-SYNTAX) ()
      "Edit word syntax"
      (UPDATE-WORD NIL)
      NIL)					  ;don't try to proceed
  
    
    ;;--------------------------------------------------------------------------------
    ;; Report parsing bugs with a special command
    (DEFFLAVOR PARSE-BUG-REPORTING-MIXIN () ()
      (:REQUIRED-FLAVORS PARSE-ERROR)
      (:REQUIRED-INSTANCE-VARIABLES SENTENCE-OBJECT PARSE-BUG-RECIPIENT)
      (:INCLUDED-FLAVORS DBG:SPECIAL-COMMANDS-MIXIN)
      :ABSTRACT-FLAVOR)

    (DEFMETHOD (PARSE-BUG-REPORTING-MIXIN :AFTER :INIT) (&REST IGNORE)
      (COND ((NOT (AND SENTENCE-OBJECT PARSE-BUG-RECIPIENT))
	     (SETQ DBG:SPECIAL-COMMANDS
		  (DELQ  :REPORT-A-SYNTACTIC-PARSING-BUG DBG:SPECIAL-COMMANDS)))
	    ((MEMQ :REPORT-A-SYNTACTIC-PARSING-BUG DBG:SPECIAL-COMMANDS))
	    (T (PUSH :REPORT-A-SYNTACTIC-PARSING-BUG DBG:SPECIAL-COMMANDS))))

    (DEFUN REPORT-PARSE-BUG (ERROR BUG-RECIPIENT SENTENCE N-FRAMES)
      "Used to report parse bugs by
     (PARSE-BUG-REPORTING-MIXIN :CASE :SPECIAL-COMMAND :REPORT-PARSING-BUG)"
      (DECLARE (VALUES BUG-REPORT-PROCESS))
      (LET*
	((ZWEI:*REQUIRE-SUBJECTS* T)
	 (ORIGINAL-SENTENCE (SEND SENTENCE :ORIGINAL-STRING))
	 (PARSE-TREE (AND (Y-OR-N-P
			    "Include a description of the parse tree? ")
			  (SEND SENTENCE
				:DESCRIBE-PARSE-AS-STRING)))
	 (TOP-LEVEL-D (UNLESS PARSE-TREE
			(AND
			  (Y-OR-N-P "Include top-level description of the sentence? ")
			  (SEND SENTENCE :DESCRIBE-AS-STRING))))
	 (SYNTAX-INFO (AND
			(Y-OR-N-P "Include a description of the syntax information? ")
			(SEND SENTENCE :DESCRIBE-SYNTAX-INFO-AS-STRING)))
	 (STACK-DATA (WITH-OUTPUT-TO-STRING (STREAM)
		       (SEND ERROR :BUG-REPORT-DESCRIPTION STREAM N-FRAMES))))
	;; body
	(PROCESS-RUN-FUNCTION
	  "Mail from debugger"
	  #'BUG
	  BUG-RECIPIENT
	  (COND ((AND SYNTAX-INFO (OR PARSE-TREE TOP-LEVEL-D))
		 (FORMAT
		   NIL "~&Buggy Sentence: ~A~2%~A~2%~A~2%**** Stack ****~&~A"
		   ORIGINAL-SENTENCE (OR PARSE-TREE TOP-LEVEL-D) SYNTAX-INFO
		   STACK-DATA))
		((OR SYNTAX-INFO PARSE-TREE TOP-LEVEL-D)
		 (FORMAT
		   NIL "~&Buggy Sentence: ~A~2%~A~2%**** Stack ****~&~A"
		   ORIGINAL-SENTENCE (OR SYNTAX-INFO PARSE-TREE TOP-LEVEL-D)
		   STACK-DATA))
		(T (FORMAT NIL "~&Buggy Sentence: ~A~2%**** Stack ****~&~A"
			   ORIGINAL-SENTENCE STACK-DATA)))
	  "Insert your description of the parse bug."
	  T)))

    (DEFMETHOD (PARSE-BUG-REPORTING-MIXIN
		 :CASE :SPECIAL-COMMAND :REPORT-A-SYNTACTIC-PARSING-BUG) ()
      "Report parse bug"
      (LET ((PROCESS (REPORT-PARSE-BUG SELF
				       PARSE-BUG-RECIPIENT
				       SENTENCE-OBJECT
				       (IF DBG:*NUMERIC-ARG-P* DBG:*NUMERIC-ARG*
					   DBG:*DEFAULT-BACKTRACE-DEPTH*))))
	(COND ((SI:SG-RESUMABLE-P DBG:SCHEDULER-STACK-GROUP)
	       ;; Wait until the process has started up and covered over our window
	       (PROCESS-WAIT-WITH-TIMEOUT
		 "Bug window startup" 900.	  ;15 seconds
		 #'(LAMBDA (PROCESS)
		     (EQUAL (SI:PROCESS-WHOSTATE PROCESS) "Tyi"))
		 PROCESS)
	       ;; Now wait until our window comes back to the top before prompting
	       (TV:AWAIT-WINDOW-EXPOSURE))
	      (T				  ;Error in the scheduler
	       (FORMAT T "~&Bug-report window will start up when the scheduler is running again."))))
      NIL)					  ;don't try to proceed
    
    ;;--------------------------------------------------------------------------------
    ;; Parser conditions

    (DEFFLAVOR SKIP-PARSING-SENTENCE-CONDITION     () () :ABSTRACT-FLAVOR)
    (DEFFLAVOR SKIP-POSITING-SENTENCE-CONDITION    () () :ABSTRACT-FLAVOR)
    (DEFFLAVOR SKIP-PREPARSING-SENTENCE-CONDITION  () () :ABSTRACT-FLAVOR)
    (DEFFLAVOR RETRY-PARSING-SENTENCE-CONDITION    () () :ABSTRACT-FLAVOR)
    (DEFFLAVOR RETRY-PREPARSING-SENTENCE-CONDITION () () :ABSTRACT-FLAVOR)
    (DEFFLAVOR RETRY-POSITING-SENTENCE-CONDITION   () () :ABSTRACT-FLAVOR)

    (DEFFLAVOR PARSE-ERROR
	    ((SENTENCE-OBJECT *SENTENCE-FOR-PARSE-ERRORS-TO-EXAMINE*)
	     (PARSE-BUG-RECIPIENT "RELATUS-PARSER"))
	    (EXAMINE-PARSE-TREE-MIXIN
	     PARSE-BUG-REPORTING-MIXIN
	     EDIT-WORD-SYNTAX-MIXIN
	     SKIP-PARSING-SENTENCE-CONDITION
	     SKIP-POSITING-SENTENCE-CONDITION
	     RETRY-PARSING-SENTENCE-CONDITION
	     RETRY-POSITING-SENTENCE-CONDITION
	     ERROR
	     HACK-BUG-REPORT-RECIPIENT-MIXIN)
      :INITABLE-INSTANCE-VARIABLES
      :GETTABLE-INSTANCE-VARIABLES
      :ABSTRACT-FLAVOR)

    (DEFFLAVOR PARSE-FERROR	() (HACK-FORMAT-ARGS PARSE-ERROR))

    (DEFMACRO PARSE-BARF (FORMAT-STRING &OPTIONAL &REST FORMAT-ARGS)
      (CHECK-ARG-TYPE FORMAT-STRING :STRING)
      `(SIGNAL 'PARSE-FERROR :FORMAT-STRING ,FORMAT-STRING
	       :FORMAT-ARGS `,(LIST ,.FORMAT-ARGS)))
22-Oct-84 01:39:14-EDT,3373;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 22 Oct 84 01:37-EDT
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 112409; Mon 22-Oct-84 01:40:36-EDT
Date: Monday, 22 October 1984, 01:37-EDT
From: David C. Plummer <DCP at SCRC-TENEX>
Subject: Lost while trying to do a full gc
To: David C. Plummer <DCP at SCRC-TENEX>, JCMa at MIT-OZ,
    BUG-RELATUS at MIT-OZ
cc: Bug-LispM at MIT-OZ
In-Reply-To: <841015102606.7.DCP@NEPONSET.SCRC.Symbolics>
Message-ID: <841022013743.0.DCP@NEPONSET.SCRC.Symbolics>

    Date: Monday, 15 October 1984, 10:26-EDT
    From: David C. Plummer <DCP at SCRC-TENEX>

	Date: Saturday, 13 October 1984, 11:01-EDT
	From: A Lisp Machine <joseph at SCRC-QUABBIN>

	In Symbolics 3600 RELATUS in Release 5.2, Experimental RELATUS 131.0,
	FEP 18, on Lisp Machine Janis Joplin:

    (1) Is this reproducible?
    (2) Did you have any errors while loading your system?  In particular,
	did it err while trying to load a compiled function?  

    I'll make si:constants-to-constants-area more robust when I get a
    chance.

Well, that will be a good trick since things were renamed.  Anyway,
here's the patch comment of what I did.  I don't know if this is
sufficient though.

Fucntion LOCALIZE-FUNCTION-CELLS-2: Try not to trip over unbound
locations.  This shouldn't normally happen since it indicates an error
while .BIN loading, and if that happens people shouldn't be doing a
full-gc anyway.

	>>Trap: The word #<DTP-NULL 13177325> was read from location 13177325 (in COMPILED-FUNCTION-AREA).
	While in the function SI:CONSTANTS-TO-CONSTANTS-AREA  SI:*EVAL  COND

	SI:CONSTANTS-TO-CONSTANTS-AREA:  (P.C. = 72)
	   Local 0 (START-TIME): 2675516067.
	   Local 1 (MODULUS): 300007.
	   Local 2 (HASH-TABLE): #<ART-Q-300007. 52403564>
	   Local 3 (N-CONSTANTS-MADE): 3396.
	   Local 4 (N-CONSTANTS-SAVED): 2398.
	   Local 5 (ALPHABETIC-CASE-AFFECTS-STRING-COMPARISON-initialization): T
	   Local 6: SYS:UNWIND-PROTECT-TAG
	   Local 7: #<DTP-ODD-PC 25064425>
	   Local 8: #<DTP-LOCATIVE 740056>
	   Local 9: #<DTP-LOCATIVE 43540104>
	   Local 10 (REGION): 26.
	   Local 11 (P): 2948817.
	   Local 12 (SIZE): 13.
	   Local 13 (BOUNDARY): 2949117.
	   Local 14 (J): 4.
	   Local 15: 1.
	   Local 16 (CONST): NIL

	SI:*EVAL:  (P.C. = 370)
	   Arg 0 (FORM): (SI:CONSTANTS-TO-CONSTANTS-AREA)

	COND:  (P.C. = 23)
	   Rest arg (CLAUSES): ((SI:*FULL-GC-FOR-SYSTEM-RELEASE* (SI:CONSTANTS-TO-CONSTANTS-AREA)) (T NIL))

	SI:*EVAL:  (P.C. = 421)
	   Arg 0 (FORM): (SI:DISPLACED (IF SI:*FULL-GC-FOR-SYSTEM-RELEASE* (SI:CONSTANTS-TO-CONSTANTS-AREA)) (COND (SI:*FULL-GC-FOR-SYSTEM-RELEASE* (SI:CONSTANTS-TO-CONSTANTS-AREA)) (T NIL)))

	INITIALIZATIONS:  (P.C. = 42)
	   Arg 0 (LIST-NAME): SI:FULL-GC-INITIALIZATION-LIST
	   Arg 1 (REDO-FLAG): T
	   --Defaulted args:--
	   Arg 2 (FLAG): T

	SI:FULL-GC:  (P.C. = 42)
	   Rest arg: (:SYSTEM-RELEASE T)

	SI:*EVAL:  (P.C. = 370)
	   Arg 0 (FORM): (SI:FULL-GC :SYSTEM-RELEASE T)

	SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 200)
	   Rest arg: (:NAME "Lisp Top Level in Lisp Listener 1" :ABORTED-FUNCTION NIL :BEFORE-PROMPT-FUNCTION NIL :READ-FUNCTION NIL :EVAL-FUNCTION NIL ...)

	Rest of stack:
	SI:LISP-COMMAND-LOOP:  (P.C. = 115)
	SI:LISP-TOP-LEVEL1:  (P.C. = 22)
	SI:LISP-TOP-LEVEL:  (P.C. = 7)
22-Oct-84 11:52:32-EDT,1244;000000000000
Received: from SCRC-YUKON by MIT-OZ via Chaosnet; 22 Oct 84 11:51-EDT
Received: from SCRC-TURKEY by SCRC-YUKON via CHAOS with CHAOS-MAIL id 68766; Mon 22-Oct-84 11:49:45-EDT
Date: Monday, 22 October 1984, 11:44-EDT
From: Gerry Smith <gsmith at SCRC-YUKON>
Subject: Dumping a band
To: jcma at MIT-MC, RWK at SCRC-YUKON
cc: BUG-LISPM at MIT-OZ, bug-lmdoc at SCRC-YUKON
In-Reply-To: The message of 19 Oct 84 23:02-EDT from jcma at MIT-MC
Message-ID: <841022114412.3.GSMITH@TURKEY.SCRC.Symbolics>

    Date: Friday, 19 October 1984, 23:02-EDT
    From: jcma at MIT-MC

    What is the recommended procedure for reloading fep files from tape?

Unfortunately, the only way to reload a Fep file from tape is (groan)
use Disk Restore from the Fep.  This means that first you must have a
file on the machine's local disk (fepN:>) that is big enough to hold the
world, then halt the machine and Disk Restore your saved file to the
file on the local disk.  For more information, try reading pages 23, 22,
6, and 7 of the Software Installation Guide (volume 8, Opus Symbolicus).

I hope to get a more reasonable restore-fep-file-from-tape utility out
in some future release, but in the meantime, the ugly way will have to
suffice.
22-Oct-84 13:43:54-EDT,2463;000000000000
Received: from MIT-LISPM-31 by MIT-OZ via Chaosnet; 22 Oct 84 13:36-EDT
Date: Monday, 22 October 1984, 13:38-EDT
From: Robert P. Krajewski <RpK at MIT-OZ>
Subject: Found PACKAGE bound to NIL in break loop
To: BUG-LISPM at MIT-OZ
CC: TIM at MIT-MC, joseph at SCRC-QUABBIN
In-reply-to: <841021204013.2.DCP@NEPONSET.SCRC.Symbolics>
Message-ID: <[MIT-LISPM-31].10/22/84 13:38:32.RpK>

    From: David C. Plummer <DCP at SCRC-TENEX>

	In Symbolics 3600 Release 5.2

	In the midst of doing an APROPOS, the window took a MORE exception.
	While paused, I decided to enter a break loop (to see what a symbol was
	bound to), and, well, PACKAGE was bound to NIL, and we lost.  Perhaps
	someone should make sure that PACKAGE is bound to something reasonable
	when the user enters a break loop.

	  (DEFUN APROPOS-1 (SYMBOL &AUX COMMA)
	    (COND ((STRING-SEARCH APROPOS-SUBSTRING (GET-PNAME SYMBOL))
		   (PUSH SYMBOL RETURN-LIST)
		   ;; Binding the package to NIL forces the package to be printed.
		   ;; This is better than explicitly printing the package, because
		   ;; this way you get the "short" version.
		   (LET ((PACKAGE NIL))
	**MORE**==>  (FORMAT T "~%~S" SYMBOL))
		   ...)))

    This problem, and many more in its class, has been fixed by a general
    mechanism to handle standard values and interactive values.

Now hold on here.  What do you mean by `values' ?  The problem here is
getting a Lisp object to print out in a certain way.  Whoever wrote this
code knew that he could bind *package* to NIL and get package names to
print out all the time.  This is a crock, because it binds a variable
that must be a package.  Besides, binding the current package to NIL in
other Common Lisps is undefined.  [I am not even going to address the
Brand S tendency of maximum hair to minimum solution.]

The real solution should have been for Common Lisp to have a new print
parameter called *PRINT-PACKAGE*, which, when non-NIL, would cause the
printer to output the package prefix all the time.  A particular non-NIL
value would output the short package name (the prefix name).  Besides
having the application (in APROPOS) of assuring disambiguation of the
symbol, one could to also be sure that you could read in Lisp text files
and have to worry about what the current package was, or parsing the
attribute list.  This costs space, but the feature would ensure
PRINT/READ correctness with a minimum of effort.
22-Oct-84 13:52:17-EDT,1434;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 22 Oct 84 13:51-EDT
Date: Monday, 22 October 1984, 13:53-EDT
From: Gavan Duffy <GAVAN at MIT-OZ>
Subject: Grinding DO when not a DO.
To: DCP at SCRC-TENEX, GAVAN at MIT-OZ, BUG-LISPM at MIT-OZ
In-reply-to: <841017204741.8.DCP@NEPONSET.SCRC.Symbolics>

    Date: Wednesday, 17 October 1984, 20:47-EDT
    From: David C. Plummer <DCP at SCRC-TENEX>

	Date: Wednesday, 17 October 1984, 18:28-EDT
	From: Gavan Duffy <GAVAN at MIT-OZ>

	In Symbolics 3600 Release 5.2, Experimental RELATUS 131.26, FEP 18, on Lisp Machine John Lennon:

	I have a sunst, defined thusly:

	(DEFSUBST TO-DO-P (WORD)
	  (MEMQ WORD '(DO DID DOES DONE DOING)))

	Reasonable?  Well, when I evaluate

	(TO-DO-P 'DO)

	at top level, the grinder thinks it should grind it as if it were the DO form.
	But it's just a list.  Is this fixable?  I realize I'm likely to be the only
	person ever to run into this.

    It doesn't happen at top level, it happens because you use
    grind-top-level as your top level print function.  When the sources are
    stable and I make a pass through my mailbox, I'll put in some checking
    for bad cases.  BTW, you're fibbing.  Grinding
	    (DO DID DOES DONE DOING)
    does work, but what you ground was (DO DID DOES DONE).

I don't really have such a subst, either.  Grinding (DO DID DOES DONE DOING)
puts the close-paren on a new line.  Yuck.
22-Oct-84 15:26:33-EDT,2653;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 22 Oct 84 15:25-EDT
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 112764; Mon 22-Oct-84 15:23:31-EDT
Date: Monday, 22 October 1984, 15:21-EDT
From: David C. Plummer <DCP at SCRC-TENEX>
Subject: Found PACKAGE bound to NIL in break loop
To: Robert P. Krajewski <RpK at MIT-OZ>, BUG-LISPM at MIT-OZ
cc: TIM at MIT-MC, joseph at SCRC-QUABBIN
In-Reply-To: <[MIT-LISPM-31].10/22/84 13:38:32.RpK>
Message-ID: <841022152117.7.DCP@NEPONSET.SCRC.Symbolics>

    Date: Monday, 22 October 1984, 13:38-EDT
    From: Robert P. Krajewski <RpK at MIT-OZ>

    Now hold on here.  What do you mean by `values' ?  The problem here is
    getting a Lisp object to print out in a certain way.  Whoever wrote this
    code knew that he could bind *package* to NIL and get package names to
    print out all the time.  This is a crock, because it binds a variable
    that must be a package.  Besides, binding the current package to NIL in
    other Common Lisps is undefined.  [I am not even going to address the
    Brand S tendency of maximum hair to minimum solution.]

APROPOS is interacting with the printer.  Yes, it can be rightfully
called a crock, but both the internals of ARPOPOS and PRINT are not
specified by Common Lisp, so we are at liberty to implement it anyway
that works.  The same can be said for hash-tables: CL gives no
requirements on how they are implemented, as long as they are
implemented according to the specification.  

As for "Maximum hair for minimum solution" you didn't read the part of
my message saying that this fixes a much larger class of problems.

    The real solution should have been for Common Lisp to have a new print
    parameter called *PRINT-PACKAGE*, which, when non-NIL, would cause the
    printer to output the package prefix all the time.  A particular non-NIL
    value would output the short package name (the prefix name).  Besides
    having the application (in APROPOS) of assuring disambiguation of the
    symbol, one could to also be sure that you could read in Lisp text files
    and have to worry about what the current package was, or parsing the
    attribute list.  This costs space, but the feature would ensure
    PRINT/READ correctness with a minimum of effort.

Right: minimum effort, minimum gain.  For example, our mechanism fixes
the problems of typing colon and then Break and having package be bound
to keyword package when in the break loop, or type GLOBAL: and then
break and find yourself in global.

The hair isn't very much, the solution is near maximal.
22-Oct-84 17:35:13-EDT,1523;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 22 Oct 84 17:34-EDT
Date: 22 October 1984 17:33-EDT
From: Glenn S. Burke <GSB @ MIT-MC>
Subject: Found PACKAGE bound to NIL in break loop
To: DCP @ SCRC-TENEX
cc: TIM @ MIT-MC, BUG-LISPM @ MIT-OZ

The NIL reader manages to not bind PACKAGE when it sees tokens of the
form <anything>:<something> or <anything>::<something>, only for
<anything>:<terminator> which is then treated like a macro character.
I didn't think i could live without "pervasiv package prefixes" when i
implemented the common-lisp reader.

From the arguments i've heard, i think i'll implement *print-package*.
But it looks like *print-package* might want to have three values, not
just two:  print package prefixes normally (when necessary), print
them always, and never print them.

I do believe that some sort of interactive values scheme is needed,
but don't see how it can be done without imposing this added hair on
the user, all over the place.  I suspect the *package* business
becomes substantially less important with the CL package system.
However, my pet expectation for lossage of this sort is the value of
*readtable*.  How can you tell that the current readtable is one which
the user mucked up in order to parse cobol programs, and not just a
trivial perturbation of the standard or initial readtable (which
should be left alone in breaks)?  Someone has got to tell the system
about this sort of thing, right?  I'd like to hear what you have in
mind about this.
23-Oct-84 19:41:47-EDT,3382;000000000000
Received: from SCRC-RIVERSIDE by MIT-OZ via Chaosnet; 23 Oct 84 19:41-EDT
Received: from SCRC-THAMES by SCRC-RIVERSIDE via CHAOS with CHAOS-MAIL id 24533; Tue 23-Oct-84 14:38:35-EDT
Date: Tuesday, 23 October 1984, 14:38-EDT
From: Scott McKay <SWM at SCRC-QUABBIN>
Subject: Found PACKAGE bound to NIL in break loop
To: RpK at MIT-OZ, BUG-LISPM at MIT-OZ
cc: TIM at MIT-MC, joseph at SCRC-QUABBIN, DCP at SCRC-QUABBIN
In-Reply-To: <841022152117.7.DCP@NEPONSET.SCRC.Symbolics>
Message-ID: <841023143830.3.SWM@THAMES.SCRC.Symbolics>

    Date: Monday, 22 October 1984, 15:21-EDT
    From: David C. Plummer <DCP at SCRC-TENEX>

	Date: Monday, 22 October 1984, 13:38-EDT
	From: Robert P. Krajewski <RpK at MIT-OZ>

	Now hold on here.  What do you mean by `values' ?  The problem here is
	getting a Lisp object to print out in a certain way.  Whoever wrote this
	code knew that he could bind *package* to NIL and get package names to
	print out all the time.  This is a crock, because it binds a variable
	that must be a package.  Besides, binding the current package to NIL in
	other Common Lisps is undefined.  [I am not even going to address the
	Brand S tendency of maximum hair to minimum solution.]

    APROPOS is interacting with the printer.  Yes, it can be rightfully
    called a crock, but both the internals of ARPOPOS and PRINT are not
    specified by Common Lisp, so we are at liberty to implement it anyway
    that works.  The same can be said for hash-tables: CL gives no
    requirements on how they are implemented, as long as they are
    implemented according to the specification.  

    As for "Maximum hair for minimum solution" you didn't read the part of
    my message saying that this fixes a much larger class of problems.

	The real solution should have been for Common Lisp to have a new print
	parameter called *PRINT-PACKAGE*, which, when non-NIL, would cause the
	printer to output the package prefix all the time.  A particular non-NIL
	value would output the short package name (the prefix name).  Besides
	having the application (in APROPOS) of assuring disambiguation of the
	symbol, one could to also be sure that you could read in Lisp text files
	and have to worry about what the current package was, or parsing the
	attribute list.  This costs space, but the feature would ensure
	PRINT/READ correctness with a minimum of effort.

    Right: minimum effort, minimum gain.  For example, our mechanism fixes
    the problems of typing colon and then Break and having package be bound
    to keyword package when in the break loop, or type GLOBAL: and then
    break and find yourself in global.

DCP is correct. This fixes a much larger class of problems than just
PACKAGE.  What happens when you have your BASE set to 8, and some hack
blows out which has bound BASE to :ROMAN?  Should things set BASE to 8
arbitrarily?  What if your Lispm-Init file has set base to 10?  Then
what do you bind BASE to?  How about if you happen to have READTABLE
bound to something bizarre so that you can read something with a strange
syntax?  Do you just bind READTABLE to STANDARD-READTABLE?  That won't
work if you're in the CLCP (Common Lisp).  Our solution addresses the
whole class of bugs surrounding so-called "interactive" variables.

    The hair isn't very much, the solution is near maximal.
23-Oct-84 19:43:29-EDT,2146;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 23 Oct 84 19:42-EDT
Received: from SCRC-HARLEM by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 93838; Mon 22-Oct-84 20:07:58-EDT
Date: Monday, 22 October 1984, 20:08-EDT
From: Joseph R Goldstone <joseph at SCRC-QUABBIN>
Subject: Using dired to rename other machine's FEP files bombs (but still works)
To: Scott Cyphers <sr.ehpyc at MIT-SPEECH>, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 17 Sep 84 19:40-EDT from Scott Cyphers <sr.ehpyc at MIT-SPEECH>
Message-ID: <841022200816.2.JOSEPH@HARLEM.SCRC.Symbolics>

    Date: Monday, 17 September 1984, 19:40-EDT
    From: Scott Cyphers <sr.ehpyc at MIT-SPEECH>

    In Release 5.1, Experimental MIT 1.4, Spire-Macros 1.9, Compute 1.5,
    Attribute 1.8, Audio 1.2, Speech-Attributes 1.1, Display 1.13,
    Speech-Layouts 1.8, Experimental Versatec 2.1, Experimental Prtout 1.1,
    Spire 13.0, SpireX 10.3, LexiS 6.5, Experimental ZOO 2.4, FEP 22, on Lisp Machine Smokey (3600):

    I tried to rename GRIZZLY|FEP0:>new-spire.boot to be GRIZZLY|FEP0:>spirex.boot and got this error.
    I was in Dired at the time, and used the R command to do it.
    In spite of the error, the file ends up renamed.

    >>Error: FEP file FEP:>lmfs.file.newest, required for the file system as a partition, is not accessible:
	     FEP File not found.
	     For FEP0:>lmfs.fileFor GRIZZLY:>spirex.boot.1
    While in the function (:METHOD FS:HOST-UNIT :COMMAND)  FS:DIRECTORY-CHAOS  (:METHOD FS:QFILE-ACCESS-PATH :DIRECTORY-STREAM)

Better, but not fixed, in the current system (265.20).  I m-X dired'd loire|fep0:>,
and used the R command to rename boot.boot.50 to frye.  It munched for a while,
then printed out some stuff, the last of which was 
    LOIRE:>boot.boot.50 renamed to LOIRE:>frye.boot.50
    The file was not found.
    For LOIRE:>frye.boot.50
The dired buffer didn't show frye.boot, but m-X Revert Buffer gave me a copy that
showed frye.boot.50.

BTW, boot.boot.50 wasn't the newest boot.boot, it was two versions out of date,
if that matters (probably not, but...)

This should be easily reproducible.
24-Oct-84 10:10:41-EDT,928;000000000000
Received: from MIT-LISPM-31 by MIT-OZ via Chaosnet; 24 Oct 84 10:10-EDT
Date: Wednesday, 24 October 1984, 10:11-EDT
From: Robert P. Krajewski <RpK at MIT-OZ>
Subject: Found PACKAGE bound to NIL in break loop
To: SWM at SCRC-QUABBIN
CC: BUG-LISPM at MIT-OZ, TIM at MIT-MC, joseph at SCRC-QUABBIN,
    DCP at SCRC-QUABBIN
FCC: OZ:OZ:<RPK.MAIL>CC.XMAIL
In-reply-to: <841023143830.3.SWM@THAMES.SCRC.Symbolics>
Message-ID: <[MIT-LISPM-31].10/24/84 10:11:05.RpK>

Well, I think I understand what the interactive variable mechanism is,
now that you have given me an example of where it would win.  You must
admit, however, that binding the package to NIL is still a crock.  Your
interactive variable scheme will not get a chance to win in
non-interactive situations -- for example, calling INTERN with one
argument when *PACKAGE* is NIL.

How does BREAK+NIVS tell when a package is bad ?  When a readtable is
bad ?
24-Oct-84 10:44:14-EDT,730;000000000000
Received: from MIT-JANIS by MIT-OZ via Chaosnet; 24 Oct 84 10:43-EDT
Date: Wednesday, 24 October 1984, 10:34-EDT
From: Ken Haase <KWH at MIT-OZ>
Subject: The Hardy Boys and the "Mysterious X"
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 Release 5.2, ARLO 25.28, ARLOX 5.21, FEP 18, ARLO,
ARLOX 10/11/84, on Lisp Machine Janis Joplin:

(send (fs:parse-pathname "SYS: Fonts; TV; 40VSHD BFD >") :translated-pathname)
    ====>  #<VMS-PATHNAME "PIG:USRD$:[S.R5.FONTS.TV]40XVSHD.BFD">
                                                      |
                                                      where did this X come from?

This is reproducible, I just tried it on Sid Vicious and
it was confused in the same way.

Ken
24-Oct-84 12:15:14-EDT,1424;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 24 Oct 84 12:14-EDT
Date: Wednesday, 24 October 1984, 12:13-EDT
From: David Chapman <Zvona at MIT-OZ>
Subject: proceding from si:forward-symbol-cells
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 Release 5.2, FEP 22, on Lisp Machine Duane Allman:

The various errors signalled by this function should all be procedable.  

(FERROR "~S is already forwarded to ~S; can't forward it to ~S"
	FROM	
	(%FIND-STRUCTURE-HEADER (%P-CONTENTS-AS-LOCATIVE-OFFSET FROM 3))
	TO)
s-A: go ahead and forward FROM to TO anyway
s-B: procede without forwarding

(FERROR "~S and ~S both already have values" FROM TO)
s-A: Throw away value of FROM, forwarding it it TO
s-B: procede without forwarding value cell

(FERROR "~S and ~S both already have function definitions" FROM TO)
s-A: Throw away function definition of FROM, forwarding it it TO
s-B: procede without forwarding function cell

(FERROR "~S and ~S both already have ~S properties" FROM TO (CAR PLIST))
s-A: Throw away (CAR PLIST) property of FROM, forwarding it it to that of TO
s-B: procede without forwarding property (CAR PLIST)

(FERROR "Both ~S and ~S have forwarding pointers in symbol cell #~D.~@
			       I don't know which cell should be forwarded to the other to ~
			       make them share."
	FROM TO I)
s-A: forward the cell of FROM to that of TO
s-B: forward the cell of TO to that of FROM
24-Oct-84 15:38:24-EDT,750;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 24 Oct 84 15:36-EDT
Date: Wednesday, 24 October 1984, 15:37-EDT
From: David Chapman <Zvona at MIT-OZ>
Subject: rubout handler buglet
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 Release 5.2, FEP 22, on Lisp Machine Duane Allman:

It is possible to get <point> of the rubout handler back from the end
without using any input editor commands except self-insertion and
rubout.  This is not a big bug, but it is counter-intuitive and confuses
naive users.

Example (there may be others):  To a lisp-listener, type
foo<colon>[error message appears]<space><rubout>[error message
disappears]m[error message appears]u[error message disappears]mble.  On
the screen, you see

foo:umblem

Weird.
24-Oct-84 18:41:55-EDT,3904;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 24 Oct 84 18:39-EDT
Received: from SCRC-THAMES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 114060; Wed 24-Oct-84 11:10:31-EDT
Date: Wednesday, 24 October 1984, 11:09-EDT
From: Scott McKay <SWM at SCRC-QUABBIN>
Subject: Found PACKAGE bound to NIL in break loop
To: GSB at MIT-MC
cc: DCP at SCRC-QUABBIN, SWM at SCRC-QUABBIN, Tim at MIT-MC,
    Bug-LispM at MIT-OZ
In-Reply-To: The message of 22 Oct 84 17:33-EDT from Glenn S. Burke <GSB at MIT-MC>
Message-ID: <841024110938.9.SWM@THAMES.SCRC.Symbolics>

    Date: 22 October 1984 17:33-EDT
    From: Glenn S. Burke <GSB @ MIT-MC>

    The NIL reader manages to not bind PACKAGE when it sees tokens of the
    form <anything>:<something> or <anything>::<something>, only for
    <anything>:<terminator> which is then treated like a macro character.
    I didn't think i could live without "pervasiv package prefixes" when i
    implemented the common-lisp reader.

: acts like a delimiter in our reader, for what it's worth.

    From the arguments i've heard, i think i'll implement *print-package*.
    But it looks like *print-package* might want to have three values, not
    just two:  print package prefixes normally (when necessary), print
    them always, and never print them.

I don't think it's worthwhile given the "new scheme".

    I do believe that some sort of interactive values scheme is needed,
    but don't see how it can be done without imposing this added hair on
    the user, all over the place.  

There is "added hair", but it need not be imposed on the user.  The only
time interactive values are important is when you enter a (dbg) or
(break) loop, whether that be via c-m-Suspend, or typing Break in ZMacs,
or blowing out in some code, or whatever.  The implementation is mostly
in some editor code, some Lisp command-loop code, some debugger support,
and a few random places (like PKG-GOTO).

				   I suspect the *package* business
    becomes substantially less important with the CL package system.
    However, my pet expectation for lossage of this sort is the value of
    *readtable*.  How can you tell that the current readtable is one which
    the user mucked up in order to parse cobol programs, and not just a
    trivial perturbation of the standard or initial readtable (which
    should be left alone in breaks)?  

Readtables are a bit hairy, as you know.  Readtables usable for break
loops have a :READTABLE-LANGUAGE property of :LISP (bad naming, oh
well).  There is a special form to bind an alist of interactive values,
but things are validated before they are put on the alist.  Readtables
must have this property to be "valid".  When in Common Lisp, for
example, the top level reader would use BINDING-INTERACTIVE-VALUES to
change the standard readtable to *CL-READTABLE*.  If you just muck up
READTABLE, you'll lose; if you muck it up by binding READTABLE to
COBOL-READTABLE, then the mechanism will win.  (Our notion with this
readtable stuff is that, when you enter a break loop, you almost
certainly want to talk to the debugger with some kind of lisp readtable.
There are probably still some rough edges, but they can be ironed out.)

				      Someone has got to tell the system
    about this sort of thing, right?  I'd like to hear what you have in
    mind about this.

Yes, you do have to tell the system about this sort of thing.  Where
your init file use to say

	(SETQ BASE 10.)
	(ADD-INITIALIZATION '(SETQ BASE 10.) '(:WARM)

you now say

	(SETQ-STANDARD-VALUE BASE 10.)

(The new scheme makes sure that standard values get restored upon warm
boots, too.  If you didn't used to have the add-init, you probably got
screwed by it more than once...)

This stuff will be in the beta-test world, so you'll have ample
opportunity to comment on it soon.
24-Oct-84 18:46:09-EDT,2709;000000000000
Received: from SCRC-YUKON by MIT-OZ via Chaosnet; 24 Oct 84 18:45-EDT
Received: from SCRC-HARLEM by SCRC-YUKON via CHAOS with CHAOS-MAIL id 69323; Tue 23-Oct-84 22:36:03-EDT
Date: Tuesday, 23 October 1984, 22:37-EDT
From: Joseph R Goldstone <joseph at SCRC-QUABBIN>
Subject: The m-J command
To: BUG-LISPM at MIT-OZ
cc: kmp at MIT-MC
In-Reply-To: The message of 8 Oct 84 19:20-EDT from Kent M Pitman <kmp at MIT-OZ>
Message-ID: <841023223759.9.JOSEPH@HARLEM.SCRC.Symbolics>

Testing the behavior of this stuff in the current system...

    Date: Monday, 8 October 1984, 19:20-EDT
    From: Kent M Pitman <kmp at MIT-OZ>

    In Symbolics 3600 Release 4.5 on PA Lisp Machine Merlin
		      Release 5.2 on Bing Crosby:

    The m-J (Change Font Word) has one small bug and a couple
    of misfeatures that make it hard for me to deal with.

    ...

    Currently, there is a bug where if you type m-J c-G, then
    type m-J, it thinks you just typed a m-J and that it
    shouldn't prompt again for a font. I feel this is a bug.
    If you type c-G, it should erase the information that the
    last command was m-J, so that immediately typing m-J
    still prompts for a font. This same is true for m-J Abort,
    though that's much harder to type, so it never hits me.
I tried to test this, but spazzed.  I typed m-J c-H [oops] c-G,
and it let me go.  Next time I typed m-J, it blew out into the
debugger claiming that NIL wasn't so hot a font number.  This
is easy to reproduce, so I won't include a backtrace.

    Note: If the same subroutine is called in order to prompt
      for m-J as for c-X c-J, etc. and you want to avoid
      the problem of TYI for two characters to accept the
      default on that command, then m-J could just
      quietly exit on any command that wasn't Return or a
      font code. Then the next command, if it were the
      same command, could just accept the default without
      prompting because it thinks it is a second call to
      the same function. I didn't look at the code to see
      if this is how it's done, but I figured I'd mention
      this technique it just in case.

      This approach would have the advantage that if someone
      typed m-J by mistake and didn't mean to, normal
      cursor motion commands like c-A, c-S, etc. would be
      sufficient to get one out. Right now, the person is
      locked in the m-J prompt with the screen flashing
      at him if he hit m-J by accident.  The case of c-J
      is much worse for those who grew up on ASCII
      keyboards and think c-J is going to do Linefeed,
      but haven't set their environment up correctly to
      make that work.
24-Oct-84 20:19:49-EDT,2131;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 24 Oct 84 20:18-EDT
Date: Wednesday, 24 October 1984, 20:18-EDT
From: Gavan Duffy <GAVAN at MIT-OZ>
Subject: Error in mouse process while awaiting mail.
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 Release 5.2, Experimental RELATUS 131.15, FEP 18, on Lisp Machine John Lennon:

I get this error when moving my mouse to scrolling position whiole waiting for
my mail to come up.

>>Trap: The first argument given to the ARRAY-LEADER instruction, NIL, was not an array.
While in the function ZWEI:COUNT-LINES  (:METHOD ZWEI:ZWEI :SCROLL-POSITION)  (:DEFUN-METHOD TV:SCROLL-BAR-DRAW)

ZWEI:COUNT-LINES:  (P.C. = 34)
   Arg 0 (FROM-BP): ("Date: Wednesday, 24 October 1984, 18:55-EDT" 0. :NORMAL)
   Arg 1 (TO-BP): ("0, recent,," 0. :NORMAL)
   Arg 2 (IN-ORDER-P): T
   Local 3 (LINE): NIL
   Local 4 (LAST-LINE): "0, recent,,"
   Local 5 (I): 65.

(:METHOD ZWEI:ZWEI :SCROLL-POSITION):  (P.C. = 15)
   Arg 0 (SELF): #<ZMAIL-WINDOW Zmail Window 7 15653243 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZWEI -- 5. IV's, 0. FL's 76434770>
   Arg 2 (OPERATION): :SCROLL-POSITION

(:DEFUN-METHOD TV:SCROLL-BAR-DRAW):  (P.C. = 11)
   Arg 0 (SELF): #<ZMAIL-WINDOW Zmail Window 7 15653243 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:BASIC-SCROLL-BAR -- 3. IV's, 1. FL's 76435057>

(:METHOD TV:BASIC-SCROLL-BAR :HANDLE-MOUSE-SCROLL):  (P.C. = 34)
   Arg 0 (SELF): #<ZMAIL-WINDOW Zmail Window 7 15653243 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:BASIC-SCROLL-BAR -- 3. IV's, 1. FL's 76435057>
   Arg 2 (OPERATION): :HANDLE-MOUSE-SCROLL

TV:MOUSE-DEFAULT-HANDLER:  (P.C. = 167)
   Arg 0 (WINDOW): #<ZMAIL-WINDOW Zmail Window 7 15653243 exposed>
   Arg 1 (SCROLL-BAR-FLAG): T

(:METHOD ZWEI:ZWEI :HANDLE-MOUSE):  (P.C. = 27)
   Arg 0 (SELF): #<ZMAIL-WINDOW Zmail Window 7 15653243 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZWEI -- 5. IV's, 0. FL's 76434770>
   Arg 2 (OPERATION): :HANDLE-MOUSE

TV:MOUSE-OVERSEER:  (P.C. = 101)

SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
   Arg 0 (IGNORE): NIL
24-Oct-84 23:30:22-EDT,3491;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 24 Oct 84 23:29-EDT
Received: from SCRC-YANGTZE by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 114741; Wed 24-Oct-84 23:30:15-EDT
Date: Wednesday, 24 October 1984, 23:29-EDT
From: Carl Hoffman <CWH at SCRC-TENEX>
Subject: rubout handler buglet
To: Zvona at MIT-OZ, BUG-LISPM at MIT-OZ
cc: ROM at SCRC-TENEX, Doc-Changes at SCRC-TENEX
In-Reply-To: The message of 24 Oct 84 15:37-EDT from David Chapman <Zvona at MIT-OZ>
Message-ID: <841024232941.2.CWH@YANGTZE.SCRC.Symbolics>

    Date: Wednesday, 24 October 1984, 15:37-EDT
    From: David Chapman <Zvona at MIT-OZ>

    In Symbolics 3600 Release 5.2, FEP 22, on Lisp Machine Duane Allman:

    It is possible to get <point> of the rubout handler back from the end
    without using any input editor commands except self-insertion and
    rubout.  This is not a big bug, but it is counter-intuitive and confuses
    naive users.

This is actually supposed to be a feature, although I agree that the behavior
in the particular case you describe is counter-intuitive.  More on this below.

    Example (there may be others):  To a lisp-listener, type
    foo<colon>[error message appears]<space><rubout>[error message
    disappears]m[error message appears]u[error message disappears]mble.  On
    the screen, you see

    foo:umblem

This particular example is fixed in the development system; it now does "what
you expect it to do".  However, there are slightly more complicated examples
you can construct in the development system which will cause the cursor to end
up in the middle of the input buffer even though the user only typed
self-inserting characters and <Rubout>.

To illustrate the feature this is trying to implement, yank the following form
into a Lisp Listener and press <End>.

(DEFUN CAPITALIZE-STRING (STRING &OPTIONAL (COPY-P T))
  (COERCE-STRING-ARG STRING)
  (IF COPY-P (SETQ STRING (STRING-APPEND STRING)))
  (DO ((I 0 (1+ I))
       (FLAG T)
       (CHAR)
       (FONT)
       (LIM (STRING-LENGTH STRING)))
      (( I LIM) STRING)
    (SETQ CHAR (AREF STRING I))
    (WHEN (CHAR-STANDARD CHAR)
      (SETQ FONT (LDB %%CH-FONT CHAR))
      (SETQ CHAR (LDB %%CH-CHAR CHAR))
      (COND ((= CHAR #/-)
	     (ASET (DPB FONT %%CH-FONT #\SPACE) STRING I)
	     (SETQ FLAG T))
	    ((= CHAR #\SPAC)
	     (SETQ FLAG T))
	    (FLAG
	     (IF ( #/a CHAR #/z)
		 (ASET (DPB FONT %%CH-FONT (- CHAR 40)) STRING I))
	     (SETQ FLAG NIL))
	    (( #/A CHAR #/Z)
	     (ASET (DPB FONT %%CH-FONT (+ CHAR 40)) STRING I))))))

Anyway, since this feature can cause unexpected behavior, I added a variable
SI:*POSITION-TO-READ-ERROR-THRESHOLD* which if set to NIL will always leave
the cursor at the end of the input buffer.  Otherwise, it is an integer which
says how far the cursor must be from the read error before the cursor will be
moved to it.  [ROM: This variable should be documented in the new input editor
document, along with the rest of the input editor customization variables.]

You can patch this change into your 5.2 world by changing the function
TV:RUBOUT-HANDLER-READ.  Replace

       (< (RHB-SCAN-POINTER) (RHB-FILL-POINTER))

with NIL, to turn the feature off altogether, or with 

       (AND *POSITION-TO-READ-ERROR-THRESHOLD*
	    (< (RHB-SCAN-POINTER)
	       (- (RHB-FILL-POINTER) *POSITION-TO-READ-ERROR-THRESHOLD*)))

to put it under the control of the variable.
25-Oct-84 10:50:41-EDT,1513;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 25 Oct 84 10:49-EDT
Received: from SCRC-ANNISQUAM by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 114835; Thu 25-Oct-84 10:39:07-EDT
Date: Thursday, 25 October 1984, 10:37-EDT
From: Doug Dodds <DODDS at SCRC-TENEX>
Subject: Error in mouse process while awaiting mail.
To: GAVAN at MIT-OZ
cc: BUG-LISPM at MIT-OZ
In-Reply-To: The message of 24 Oct 84 20:18-EDT from Gavan Duffy <GAVAN at MIT-OZ>
Message-ID: <841025103731.3.DODDS@ANNISQUAM.SCRC.Symbolics>

    Date: Wednesday, 24 October 1984, 20:18-EDT
    From: Gavan Duffy <GAVAN at MIT-OZ>

    In Symbolics 3600 Release 5.2, Experimental RELATUS 131.15, FEP 18, on Lisp Machine John Lennon:

    I get this error when moving my mouse to scrolling position whiole waiting for
    my mail to come up.

    >>Trap: The first argument given to the ARRAY-LEADER instruction, NIL, was not an array.
    While in the function ZWEI:COUNT-LINES  (:METHOD ZWEI:ZWEI :SCROLL-POSITION)  (:DEFUN-METHOD TV:SCROLL-BAR-DRAW)

Thanks for the report.  That appears still to be a problem in the
development system.  Very sporadically, different parts of Zmail's
message window develop different opinions of the interval being
displayed during the mail input process, and this kind of blowout
develops.  We have been chasing this.  The particular way you
"discovered" to provoke the problem may be useful in making it happen
more predictably, which should help in debugging.  Thanks again.
25-Oct-84 10:57:20-EDT,1555;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 25 Oct 84 10:55-EDT
Received: from SCRC-THAMES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 114856; Thu 25-Oct-84 10:51:55-EDT
Date: Thursday, 25 October 1984, 10:50-EDT
From: Scott McKay <SWM at SCRC-QUABBIN>
Subject: Found PACKAGE bound to NIL in break loop
To: RpK at MIT-OZ
cc: Bug-LispM at MIT-OZ, Tim at MIT-MC, GSB at MIT-MC,
    Joseph at SCRC-QUABBIN, DCP at SCRC-QUABBIN, SWM at SCRC-QUABBIN
In-Reply-To: <[MIT-LISPM-31].10/24/84 10:11:05.RpK>
Message-ID: <841025105059.4.SWM@THAMES.SCRC.Symbolics>

    Date: Wednesday, 24 October 1984, 10:11-EDT
    From: Robert P. Krajewski <RpK at MIT-OZ>

    Well, I think I understand what the interactive variable mechanism is,
    now that you have given me an example of where it would win.  You must
    admit, however, that binding the package to NIL is still a crock.  Your
    interactive variable scheme will not get a chance to win in
    non-interactive situations -- for example, calling INTERN with one
    argument when *PACKAGE* is NIL.

    How does BREAK+NIVS tell when a package is bad ?  When a readtable is
    bad ?

A package is "bad" when it is not the standard interactive package.  A
base is "bad" when it is not the standard interactive base.  Et cetera.
SETQ-STANDARD-VALUE runs a validation function before it sets the
standard value.  For example, the standard value of PACKAGE must be a
package and it must inherit from global.  The standard value of BASE
must be in the range [2,36].
25-Oct-84 12:38:28-EDT,1527;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 25 Oct 84 12:37-EDT
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 114937; Thu 25-Oct-84 12:26:14-EDT
Date: Thursday, 25 October 1984, 12:25-EDT
From: David C. Plummer <DCP at SCRC-TENEX>
Subject: The Hardy Boys and the "Mysterious X"
To: Ken Haase <KWH at MIT-OZ>, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 24 Oct 84 10:34-EDT from Ken Haase <KWH at MIT-OZ>
Message-ID: <841025122540.3.DCP@NEPONSET.SCRC.Symbolics>

    Date: Wednesday, 24 October 1984, 10:34-EDT
    From: Ken Haase <KWH at MIT-OZ>

    In Symbolics 3600 Release 5.2, ARLO 25.28, ARLOX 5.21, FEP 18, ARLO,
    ARLOX 10/11/84, on Lisp Machine Janis Joplin:

    (send (fs:parse-pathname "SYS: Fonts; TV; 40VSHD BFD >") :translated-pathname)
	====>  #<VMS-PATHNAME "PIG:USRD$:[S.R5.FONTS.TV]40XVSHD.BFD">
							  |
							  where did this X come from?

    This is reproducible, I just tried it on Sid Vicious and
    it was confused in the same way.

I don't have your sys translations, but here's what my machine does
running a predecessor of Release 6.

(send (fs:parse-pathname "SYS: Fonts; TV; 40VSHD BFD >")
      :new-pathname :host (net:parse-host "PIG"))
 => #<VMS-PATHNAME "PIG:SYS$DISK:[FONTS.TV]40VSHD.BFD">
without the X.  If this form produces the X in your world, its already
been fixed.  If not, then either there is magic for VMS pathnames going
on, or something stranger is happening.  Please tell us what.  Thanks.
25-Oct-84 13:18:02-EDT,2784;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 25 Oct 84 13:17-EDT
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 115002; Thu 25-Oct-84 13:17:31-EDT
Date: Thursday, 25 October 1984, 13:16-EDT
From: David C. Plummer <DCP at SCRC-TENEX>
Subject: proceding from si:forward-symbol-cells
To: David Chapman <Zvona at MIT-OZ>, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 24 Oct 84 12:13-EDT from David Chapman <Zvona at MIT-OZ>
Message-ID: <841025131658.0.DCP@NEPONSET.SCRC.Symbolics>

    Date: Wednesday, 24 October 1984, 12:13-EDT
    From: David Chapman <Zvona at MIT-OZ>

    In Symbolics 3600 Release 5.2, FEP 22, on Lisp Machine Duane Allman:

    The various errors signalled by this function should all be procedable.  

No, on all counts I believe.  Any proceed option is encouragement to
trash your world.  If it is going to offer proceed options it would have
to be 10 times as verbose saying what was in the old cells.  Consider
	(setq pack1:foo "I really want to stay")
	(setq pack2:foo "I can go")
	(defun pack1:foo () "I can go")
	(defun pack2:foo () "I should stay")
	(defprop pack1:foo "I should stay" :prop1)
	(defprop pack2:foo "I can go" :prop2)
	(defprop pack1:foo "I can go" :prop1)
	(defprop pack2:foo "I should stay" :prop2)
	(globalize "FOO")
In this case, half of the things should come from pack1:foo and the
other half from pack2:foo.  Users should globalize symbols (export,
import, whatever) BEFORE they are used.  If globalizing is done as
hindsight, then it should be the user's responsibility to MAKUNBOUND,
FMAKUNBOUND and REMPROP the undesirable properties.

    (FERROR "~S is already forwarded to ~S; can't forward it to ~S"
	    FROM	
	    (%FIND-STRUCTURE-HEADER (%P-CONTENTS-AS-LOCATIVE-OFFSET FROM 3))
	    TO)
    s-A: go ahead and forward FROM to TO anyway
    s-B: procede without forwarding

    (FERROR "~S and ~S both already have values" FROM TO)
    s-A: Throw away value of FROM, forwarding it it TO
    s-B: procede without forwarding value cell

    (FERROR "~S and ~S both already have function definitions" FROM TO)
    s-A: Throw away function definition of FROM, forwarding it it TO
    s-B: procede without forwarding function cell

    (FERROR "~S and ~S both already have ~S properties" FROM TO (CAR PLIST))
    s-A: Throw away (CAR PLIST) property of FROM, forwarding it it to that of TO
    s-B: procede without forwarding property (CAR PLIST)

    (FERROR "Both ~S and ~S have forwarding pointers in symbol cell #~D.~@
				   I don't know which cell should be forwarded to the other to ~
				   make them share."
	    FROM TO I)
    s-A: forward the cell of FROM to that of TO
    s-B: forward the cell of TO to that of FROM
25-Oct-84 17:15:55-EDT,2289;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 25 Oct 84 17:15-EDT
Received: from SCRC-HUDSON by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 95395; Thu 25-Oct-84 17:04:29-EDT
Date: Thursday, 25 October 1984, 17:05-EDT
From: Robert W. Kerns <RWK at SCRC-YUKON>
Subject: The Hardy Boys and the "Mysterious X"
To: Ken Haase <KWH at MIT-OZ>
cc: BUG-LISPM at MIT-OZ
In-Reply-To: The message of 24 Oct 84 10:34-EDT from Ken Haase <KWH at MIT-OZ>
Message-ID: <841025170526.1.RWK@HUDSON.SCRC.Symbolics>

    Date: Wednesday, 24 October 1984, 10:34-EDT
    From: Ken Haase <KWH at MIT-OZ>

    In Symbolics 3600 Release 5.2, ARLO 25.28, ARLOX 5.21, FEP 18, ARLO,
    ARLOX 10/11/84, on Lisp Machine Janis Joplin:

    (send (fs:parse-pathname "SYS: Fonts; TV; 40VSHD BFD >") :translated-pathname)
	====>  #<VMS-PATHNAME "PIG:USRD$:[S.R5.FONTS.TV]40XVSHD.BFD">
							  |
							  where did this X come from?

    This is reproducible, I just tried it on Sid Vicious and
    it was confused in the same way.

It has translation rules for fonts on VMS that keep it
from losing information.  For example, turning HELVETICA30B
into HELVET30B instead of HELVETICA, which would conflict
with HELVETICA20B or HELVETICA20I, etc.

It considers everything before the digits to be the font name, the
digits to be the point size, and the letters after to be the face
type (B for Bold, I for Italics, BI for Bold Italics, etc.)

The X comes in, because if the font name (which is never considered
to be "", so is "20" in this case) would end with a digit, it appends
an "X" to keep the digits separated.  Otherwise, you could have
INDY500FONT20B turn into INDY5020B.  Instead, you'd get INDY5X20B,
so the font size is still obvious.

Unfortunately, you're seeing it where you shouldn't.  It's only
supposed to be on SYS:FONTS;LGP-1;, not on SYS:FONTS;TV;, which
uses somewhat different rules.  I'm not quite sure how this came
about, but those are the rules that Rel 5 is using.  Since that's
where loading the distribution tape will put the files, you're
probably best off not doing anything about it.  Release 6 will
only use this rule for the FONTS;LGP-1; directory.

This isn't as much of an issue with VMS version 4, which has
more reasonable filenames.
25-Oct-84 20:28:55-EDT,891;000000000000
Received: by MIT-OZ via Chaosnet; 25 Oct 84 20:28-EDT
Date: Thursday, 25 October 1984, 20:29-EDT
From: Alejandro Ferdman <FERDI at ZAXXON>
Reply-to: STRAZ at MIT-OZ
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 Release 5.2, FEP 24, on Zaxxon:

Maybe I'm on the wrong drugs, but &REST is not behaving the way I've
always thought, in both defuns and defmethods. I haven't used it in a
long time, but what could be wrong with

(defun foo (&rest things)
  things)

I compile FOO.

(foo 'a 'b 'c 'd) returns the circular list:


(#<DTP-LOCATIVE 26500241>
 #<DTP-EVEN-PC 24454301>
 3074.
 #<DTP-COMPILED-FUNCTION FORMAT:FORMAT-CTL-STRING 24605111>
 (((#<DTP-LOCATIVE 26500241>
    #<DTP-EVEN-PC 24454301>
    3074.
    #<DTP-COMPILED-FUNCTION FORMAT:FORMAT-CTL-STRING 24605111>
    (((...   

I then evaluated FOO, and I get the same result. What's going on?

-steve
25-Oct-84 20:52:26-EDT,1107;000000000000
Received: from SPA-RUSSIAN by MIT-OZ via Chaosnet; 25 Oct 84 20:51-EDT
Date: Thursday, 25 October 1984, 17:53-PDT
From: Richard Lamson <rsl at SPA-RUSSIAN>
Subject: The wrong drugs will get you every time
To: Alejandro Ferdman <FERDI at ZAXXON>, STRAZ at MIT-OZ,
    BUG-LISPM at MIT-OZ
In-reply-to: The message of 25 Oct 84 17:29-PDT from Alejandro Ferdman <FERDI at ZAXXON>

    Date: Thursday, 25 October 1984, 20:29-EDT
    From: Alejandro Ferdman <FERDI at ZAXXON>

    In Symbolics 3600 Release 5.2, FEP 24, on Zaxxon:

    Maybe I'm on the wrong drugs, but &REST is not behaving the way I've
    always thought, in both defuns and defmethods. 

    (defun foo (&rest things)
      things)

    I compile FOO.

    (foo 'a 'b 'c 'd) returns the circular list:

What's going on is that you're not allowed to return the &REST argument
from a function.  Its value is in the stack frame of the called
function, and therefore it becomes invalid as soon as you return from
the function.

If you want to return a list which is EQUAL to the &REST argument, you
can use COPYLIST.
25-Oct-84 20:52:57-EDT,1656;000000000000
Received: from SCRC-TENEX by MIT-OZ via Chaosnet; 25 Oct 84 20:51-EDT
Date: 25 Oct 1984 2054-EDT
From: Bernard S. Greenberg <BSG@SCRC-TENEX>
To: STRAZ@MIT-OZ
cc: BUG-LISPM@MIT-OZ
In-Reply-To: The message of Thursday, 25 October 1984, 20:29-EDT from Alejandro Ferdman <FERDI at ZAXXON>

    Date: Thursday, 25 October 1984, 20:29-EDT
    From: Alejandro Ferdman <FERDI at ZAXXON>
    Reply-to: STRAZ at MIT-OZ

    In Symbolics 3600 Release 5.2, FEP 24, on Zaxxon:

    Maybe I'm on the wrong drugs, but &REST is not behaving the way I've
    always thought, in both defuns and defmethods. I haven't used it in a
    long time, but what could be wrong with

    (defun foo (&rest things)
      things)

    I compile FOO.

    (foo 'a 'b 'c 'd) returns the circular list:


    (#<DTP-LOCATIVE 26500241>
     #<DTP-EVEN-PC 24454301>
     3074.
     #<DTP-COMPILED-FUNCTION FORMAT:FORMAT-CTL-STRING 24605111>
     (((#<DTP-LOCATIVE 26500241>
        #<DTP-EVEN-PC 24454301>
        3074.
        #<DTP-COMPILED-FUNCTION FORMAT:FORMAT-CTL-STRING 24605111>
        (((...   

    I then evaluated FOO, and I get the same result. What's going on?

    -steve
&REST args do not really exist as first-class list structure;
they are the "argument list of the function", which is consed
on the stack, and effectively unconsed (made into total randomness)
when the called function returns.  It is impermissible to
return an &REST arg, or store it into permanent structure.
Use (copylist things) in foo.

This may be fixed by advanced hardware/microcode/compiler features
some time in the non-immediate future.
-------
25-Oct-84 23:37:44-EDT,697;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 25 Oct 84 23:37-EDT
Date: Thursday, 25 October 1984, 23:28-EDT
From: Scott Cyphers <sr.ehpyc at MIT-SPEECH>
Subject: Resource suggestion
To: bug-lispm at MIT-OZ

Sometime when the world gets recompiled, I think it would be useful to
add another slot to resources called :deallocator which would let you do
things that might help the garbage collector.  For example, if your
resource is a data base, with pointers to all kinds of random objects,
the :deallocator could go through the resource and fill it with nils so
that the garbage collector wouldn't wrongly think things only accessible
through the resource were still accessible.
26-Oct-84 05:30:42-EDT,1069;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 26 Oct 84 05:30-EDT
Date: 26 October 1984 05:05-EDT
From: Glenn S. Burke <GSB @ MIT-MC>
Subject: Resource suggestion
To: sr.ehpyc @ MIT-SPEECH
cc: bug-lispm @ MIT-OZ

    Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 25 Oct 84 23:37-EDT
    Date: Thursday, 25 October 1984, 23:28-EDT
    From: Scott Cyphers <sr.ehpyc at MIT-SPEECH>

    Sometime when the world gets recompiled, I think it would be useful to
    add another slot to resources called :deallocator which would let you do
    things that might help the garbage collector.  For example, if your
    resource is a data base, with pointers to all kinds of random objects,
    the :deallocator could go through the resource and fill it with nils so
    that the garbage collector wouldn't wrongly think things only accessible
    through the resource were still accessible.

this has been in the NIL (and Maclisp [unsupported utility there]) resource
code for a couple years now, under the name :deinitializer.  It's used
a fair amount.
26-Oct-84 10:56:32-EDT,591;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 26 Oct 84 10:54-EDT
Date: Friday, 26 October 1984, 09:54-EDT
From: Webster Dove <dove at MIT-BUGS-BUNNY>
Subject: suggestion->make connections mouseable in peek/network
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 Release 5.2, Experimental IP-TCP 15.3,
Experimental UTIL 5.1, FEP 22, on Lisp Machine Daffy Duck:

There should be a means to mouse connections in the peek network window
so they can be inspected.  Right now, the only things that can be done
that way are a few operations on hosts, and operations on the network
itself.
26-Oct-84 17:45:07-EDT,633;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 26 Oct 84 17:44-EDT
Date: Friday, 26 October 1984, 17:46-EDT
From: Daniel Weise <DANIEL at MIT-MC>
To: BUG-LISPM at MIT-OZ

In System 98.43, CADR 3.6, ZMail 53.14, MIT-Specific 22.0, DAEDALUS 5.3,
Experimental Nodes 3.0, microcode 309, on Lisp Machine Two:

Daedalus stopped accepting mouse-blips.

To make it work again I had to change

(send daed-interactor ':preemptable-read nil #'read daed-interactor)

to

(send daed-interactor
     :rubout-handler '((:preemptable :mouse-char)) #'read daed-interactor)

From what I can tell the former just does a normal read.
26-Oct-84 18:03:26-EDT,4452;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 26 Oct 84 18:02-EDT
Date: Friday, 26 October 1984, 18:03-EDT
From: Christopher Eliot <CRE at SANCHO-PANZA>
Subject: Grrr
To: bug-lispm at MIT-OZ
Cc: cre at SANCHO-PANZA

To: bug-lispm@oz 
--Text follows this line--
(1) Sending bug mail did not work.  I had to go into PEEK, click on the "mail from debugger" process,
tweak it (return from some PARSE-ARG function) and then it actually gave me this bug window.  Obviously
a bug which prevents people from sending bug reports is a major loss.

(2) I have to see dozens of totaly extraneous messages about some host or another
was mentioned and then not found and other bullshit.  Make this go away.  I don't need it
and I don't want to hear anything about a host that I havn't touched or even heard of.

(3) On the other hand, when I try to Edit something with tv:edit-namespace-object
it doesn't tell me anything about LM15 being down.  Do you think that an editor should
doesn casually let you do a bunch of work and THEN tell you that it can't be saved?  This
is extremely stupid.  TV:edit-namespace-object should definately have some "Mode Line" which
includes a comment about whether or not it thinks the namespace server is up or down, and whether
it thinks your changes can be saved.  This should be visible before you put any work into making them.

	Grrr

[P.S.  Just to put me in an even better mood I typed END to this bug window and it
went into the state LOCK and waited.  I will try to force it to do something by 
using the debugger to break the lock.  --CRE

=That didn't work. Trying to save to a file.]

>>Error: Timeout while waiting for CADR-15.
While in the function (:METHOD SI:INPUT-STREAM-EXCEPTION-MIXIN :CHECK-INPUT-EXCEPTION)  CHAOS:GET-NEXT-PKT  (:METHOD CHAOS:BASIC-INPUT-STREAM :GET-NEXT-INPUT-PKT)

(:METHOD SI:INPUT-STREAM-EXCEPTION-MIXIN :CHECK-INPUT-EXCEPTION):  (P.C. = 10)
   Arg 0 (SELF): #<CHARACTER-STREAM 34070031>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:INPUT-STREAM-EXCEPTION-MIXIN -- 1. IV's, 0. FL's 17702017>
   Arg 2 (OPERATION): :CHECK-INPUT-EXCEPTION

CHAOS:GET-NEXT-PKT:  (P.C. = 172)
   Arg 0 (CONN): #<CHAOS Connection for NAMESPACE to LM15 53244001>
   Arg 1 (NO-HANG-P): NIL
   Arg 2 (STREAM): #<CHARACTER-STREAM 34070031>

(:METHOD CHAOS:BASIC-INPUT-STREAM :GET-NEXT-INPUT-PKT):  (P.C. = 53)
   Arg 0 (SELF): #<CHARACTER-STREAM 34070031>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor CHAOS:BASIC-INPUT-STREAM -- 2. IV's, 0. FL's 17701762>
   Arg 2 (OPERATION): :GET-NEXT-INPUT-PKT
   Arg 3 (NO-HANG-P): NIL

(:METHOD CHAOS:CHARACTER-INPUT-STREAM-MIXIN :NEXT-INPUT-BUFFER):  (P.C. = 6)
   Arg 0 (SELF): #<CHARACTER-STREAM 34070031>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor CHAOS:CHARACTER-INPUT-STREAM-MIXIN -- 1. IV's, 0. FL's 17701743>
   Arg 2 (OPERATION): :NEXT-INPUT-BUFFER
   Arg 3 (NO-HANG-P): NIL

(:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :SETUP-NEXT-INPUT-BUFFER):  (P.C. = 11)
   Arg 0 (SELF): #<CHARACTER-STREAM 34070031>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:BASIC-BUFFERED-INPUT-STREAM -- 3. IV's, 0. FL's 17701676>
   Arg 2 (OPERATION): :SETUP-NEXT-INPUT-BUFFER
   --Defaulted args:--
   Arg 3 (NO-HANG-P): NIL

(:METHOD CHAOS:CHARACTER-STREAM :COMBINED :SETUP-NEXT-INPUT-BUFFER):  (P.C. = 10)
   Arg 0 (SELF): #<CHARACTER-STREAM 34070031>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor CHAOS:CHARACTER-STREAM -- 0. IV's, 10. FL's 17701725>
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

(:METHOD SI:BUFFERED-LINE-INPUT-STREAM :STRING-LINE-IN):  (P.C. = 22)
   Arg 0 (SELF): #<CHARACTER-STREAM 34070031>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:BUFFERED-LINE-INPUT-STREAM -- 3. IV's, 0. FL's 17701767>
   Arg 2 (OPERATION): :STRING-LINE-IN
   Arg 3 (EOF): NIL
   Arg 4 (LINE): "anonyous pigBen Kuipers/"St. Medford Mass. 02155/"NNNECTIONSTPspoo"
   --Defaulted args:--
   Arg 5 (START): 0
   Arg 6 (END): 64

NETI:PARSE-RECORD-AS-TOKENS:  (P.C. = 32)
   Arg 0 (STREAM): #<CHARACTER-STREAM 34070031>
   Arg 1 (COMMENTS-P): T

Rest of stack:
NETI:PARSE-RECORD-AS-TOKENS-WITH-TIMEOUT:  (P.C. = 23)
NETI:OPEN-NAMESPACE-SERVER:  (P.C. = 364)
NET:UPDATE-OBJECT-PERMANENTLY:  (P.C. = 73)
(:DEFUN-METHOD TV:PERFORM-COMMAND):  (P.C. = 446)
(:METHOD TV:NAMESPACE-EDITOR-FRAME :TOP-LEVEL):  (P.C. = 120)
TV:START-NAMESPACE-EDITOR:  (P.C. = 4)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
26-Oct-84 19:28:53-EDT,1633;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 26 Oct 84 19:28-EDT
Received: from SCRC-NEPONSET by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 95908; Fri 26-Oct-84 11:49:12-EDT
Date: Friday, 26 October 1984, 11:49-EDT
From: David C. Plummer <DCP at SCRC-TENEX>
Subject: Can't return &REST argument -- Standard bug number 179
To: STRAZ at MIT-OZ, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 25 Oct 84 20:29-EDT from Alejandro Ferdman <FERDI at ZAXXON>
Message-ID: <841026114909.4.DCP@NEPONSET.SCRC.Symbolics>

    Date: Thursday, 25 October 1984, 20:29-EDT
    From: Alejandro Ferdman <FERDI at ZAXXON>

    In Symbolics 3600 Release 5.2, FEP 24, on Zaxxon:

    Maybe I'm on the wrong drugs, but &REST is not behaving the way I've
    always thought, in both defuns and defmethods. I haven't used it in a
    long time, but what could be wrong with

    (defun foo (&rest things)
      things)

    I compile FOO.

    (foo 'a 'b 'c 'd) returns the circular list:

In addition to other replies already offered:  Are you on Bug-LispM?
This is reported about once every three months, and the answer is always
one of two (or both): "You aren't allowed to do it because ..." and
"This issue is discussed in the documentation ...".


    (#<DTP-LOCATIVE 26500241>
     #<DTP-EVEN-PC 24454301>
     3074.
     #<DTP-COMPILED-FUNCTION FORMAT:FORMAT-CTL-STRING 24605111>
     (((#<DTP-LOCATIVE 26500241>
	#<DTP-EVEN-PC 24454301>
	3074.
	#<DTP-COMPILED-FUNCTION FORMAT:FORMAT-CTL-STRING 24605111>
	(((...   

    I then evaluated FOO, and I get the same result. What's going on?

    -steve
27-Oct-84 13:51:54-EDT,1498;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 27 Oct 84 13:51-EDT
Date: Saturday, 27 October 1984, 13:38-EDT
From: Scott Cyphers <sr.ehpyc at MIT-SPEECH>
Subject: Comment lies
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 Release 5.2, ZOO 3.3, Spire-Macros 3.8, Compute 2.5,
Attribute 3.3, Audio 2.4, Speech-Attributes 2.3, Display 3.7,
Speech-Layouts 4.7, Versatec 3.0, Prtout 2.0, Spire 14.0, SpireX 11.1,
ZOO-SPIRE 1.0, FEP 22, on Lisp Machine Smokey:

;;; Find the current lexical value of SELF
(DEFUN %FIND-SELF-ON-STACK ()
  (DO ((FP (%STACK-FRAME-POINTER) (FRAME-PREVIOUS-FRAME FP))) (NIL)
    (AND (NOT (ZEROP (FRAME-INSTANCE-CALLED FP))) (RETURN (CAR FP)))	;Return first argument
    (AND (NOT (ZEROP (FRAME-BOTTOM-BIT FP))) (RETURN NIL))))

This should say "Find the current dynamic value of SELF".  It's used by
si:get-flavor-mapping-table-and-self which usually works since the dynamic
self and the lexical self are usually the same thing, but breaks if you try
to do something like this:  (of course this will all get fixed by lexical
scoping, so all I'm reporting is the incorrect comment).

(defflavor test-flavor
	(foo bar)
	()
  :initable-instance-variables
  :gettable-instance-variables)

(defmethod (test-flavor :frob)
	   ()
  (send foo :map-hash #'(lambda (key value)
			  key
			  (+ value bar))))

(setq a (make-instance 'si:eq-hash-table))
(send a :put-hash 'abc 1)
(setq b (make-instance 'test-flavor :foo a :bar 3))
(send b :frob)
27-Oct-84 16:24:56-EDT,1484;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 27 Oct 84 16:24-EDT
Received: from SCRC-PEACE by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 116519; Sat 27-Oct-84 16:22:24-EDT
Date: Saturday, 27 October 1984, 16:22-EDT
From: Charles Hornig <Hornig at SCRC-STONY-BROOK>
Subject: ARPA|YALE not a filecomputer
To: David H Kaufman <Sr.Kaufman at MIT-SPEECH>, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 28 Jun 84 13:21-EDT from David H Kaufman <Sr.Kaufman at MIT-SPEECH>
Message-ID: <841027162250.8.HORNIG@PEACE.SCRC.Symbolics>

    Date: Thursday, 28 June 1984, 13:21-EDT
    From: David H Kaufman <Sr.Kaufman at MIT-SPEECH>

    In Release 5.0, Experimental MIT 1.4, Spire-Macros 1.8, Compute 1.4,
    Attribute 1.8, Audio 1.2, Speech-Attributes 1.1, Display 1.12,
    Speech-Layouts 1.8, Experimental Versatec 2.0, Experimental Prtout 1.1,
    Spire 13.0, SpireX 10.3, LexiS 6.3, ZOO 1.2, FEP 18, on Lisp Machine Grizzly (3600):

    I was logging in.  LM15 is of course down.  One of my userids (listed in the namespace)
    is Kaufman@Yale; there should be a way to proceed from this error other than aborting to
    the Lisp Listener.

    >>Error: The host YALE cannot be a file computer.
    While in the function FS:ADD-FILE-COMPUTER  SI:SET-USER-VARIABLES  LOGIN

Our solution to this was to remote the ADD-FILE-COMPUTER from
SET-USER-VARIABLES.  It is no longer necessary.  This way you won't lose
with YALE until you try and use it.
27-Oct-84 16:37:52-EDT,2170;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 27 Oct 84 16:37-EDT
Received: from SCRC-PEACE by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 116523; Sat 27-Oct-84 16:34:08-EDT
Date: Saturday, 27 October 1984, 16:34-EDT
From: Charles Hornig <Hornig at SCRC-STONY-BROOK>
Subject: Mixed namespace lossage and distribution lossage
To: Scott Cyphers <sr.ehpyc at MIT-SPEECH>, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 8 Jul 84 00:57-EDT from Scott Cyphers <sr.ehpyc at MIT-SPEECH>
Message-ID: <841027163432.9.HORNIG@PEACE.SCRC.Symbolics>

    Date: Sunday, 8 July 1984, 00:57-EDT
    From: Scott Cyphers <sr.ehpyc at MIT-SPEECH>

    In Release 5.1, Spire-Macros 1.9, Compute 1.4, Attribute 1.8, Audio 1.2,
    Speech-Attributes 1.1, Display 1.12, Speech-Layouts 1.8,
    Experimental Versatec 2.0, Experimental Prtout 1.1, Spire 13.0,
    SpireX 10.3, Experimental ZOO 2.2, on Lisp Machine Yogi (LM-2):

    Here's one for the complete loss half of the namespace code, as well as
    the completely totally losing (but at least better than it used to be
    thanks to the winning half of the namespace code) distribution tape
    system.  I'm doing dis:write-distribution-tape, and I caught my who-line
    trying to talk to SCH|G and broke in to investigate.  It seems that the
    code thought I might want to do a remote tape to some host out on the
    Arpanet and it was going to find hosts out there supporting the service
    just in case I asked which ones supported it.  Now it would be amusing
    to write this on a tape on a Dandelion at Xerox were it not so late at
    night, and were it not that speech is so much more convenient.  Really,
    there is no need to do this lookup unless I ask which ones support it,
    and then I should have a choice of specifying which sites I'm interested
    in asking about instead of getting every tape drive reachable via the
    namespace.

    >>Break: 
    While in the function PROCESS-WAIT  CHAOS:WAIT  CHAOS:WAIT-FOR-CONNECT

    TAPE:FIND-TAPE-SERVICE-HOSTS:  (P.C. = 60)

In the next release FIND-TAPE-SERVICE-HOSTS will only search the local
namespace.
27-Oct-84 16:53:43-EDT,1046;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 27 Oct 84 16:51-EDT
Received: from SCRC-PEACE by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 116530; Sat 27-Oct-84 16:49:05-EDT
Date: Saturday, 27 October 1984, 16:49-EDT
From: Charles Hornig <Hornig at SCRC-STONY-BROOK>
Subject: edit-namespace-object writes wrong author
To: Christopher Schmidt <SCHMIDT at SUMEX-AIM>, Bug-LispM at MIT-OZ
In-Reply-To: The message of 17 Aug 84 14:10-EDT from Christopher Schmidt <SCHMIDT at SUMEX-AIM>
Message-ID: <841027164928.1.HORNIG@PEACE.SCRC.Symbolics>

    Date: Fri 17 Aug 84 11:10:15-PDT
    From: Christopher Schmidt <SCHMIDT@SUMEX-AIM.ARPA>

	    In Release 5.1 I find that if I run tv:edit-namespace-object
    from a machine which is not the namespace server that the resulting
    files have as their author the person currently using the namespace
    server, and not the person editing the object (me)!
	    This has not caused any problems.
    --Christopher
    -------
This will be fixed in the next major release.
27-Oct-84 17:08:20-EDT,972;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 27 Oct 84 17:08-EDT
Received: from SCRC-PEACE by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 116545; Sat 27-Oct-84 17:05:44-EDT
Date: Saturday, 27 October 1984, 17:06-EDT
From: Charles Hornig <Hornig at SCRC-STONY-BROOK>
Subject: Namespace deletion bug.
To: Ken Haase <KWH at MIT-OZ>, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 11 Oct 84 07:38-EDT from Ken Haase <KWH at MIT-OZ>
Message-ID: <841027170612.1.HORNIG@PEACE.SCRC.Symbolics>

    Date: Thursday, 11 October 1984, 07:38-EDT
    From: Ken Haase <KWH at MIT-OZ>

    In Symbolics 3600 Release 5.2, ARLO 25.22, ARLOX 5.18, FEP 18, on Lisp Machine John Lennon:

    This happened in the middle of a full gc.

    >>Error: You can't delete the primary name this way yet.
    While in the function NETI:DELETE-NAME-FROM-NAMESPACE  NETI:ADD-OR-CHANGE-OBJECT  NETI:QUERY-NAMESPACE-SERVER

This will be fixed in the next major release.
27-Oct-84 17:51:53-EDT,5114;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 27 Oct 84 17:51-EDT
Received: from SCRC-PEACE by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 116556; Sat 27-Oct-84 17:31:08-EDT
Date: Saturday, 27 October 1984, 17:31-EDT
From: Charles Hornig <Hornig at SCRC-STONY-BROOK>
Subject: The MC/DM namespace problem
To: Gavan Duffy <GAVAN at MIT-OZ>,
    Christopher C. Stacy <CStacy at MIT-MC>,
    Robert W. Kerns <RWK at SCRC-YUKON>,
    David A. Moon <Moon at SCRC-TENEX>,
    Gerry Smith <gsmith at SCRC-YUKON>,
    Richard Pavelle <RP at SCRC-TENEX>,
    Joseph R Goldstone <joseph at SCRC-QUABBIN>,
    Richard Lamson <rsl at SPA-RUSSIAN>,
    Patrick A. O'Donnell <PAO at MIT-EECS>, JCMA at MIT-OZ,
    tk at SCRC-STONY-BROOK, Scott McKay <SWM at SCRC-QUABBIN>,
    Scott Cyphers <sr.ehpyc at MIT-SPEECH>,
    Bill Gosper <rwg at SPA-NIMBUS>, KMP at MIT-MC, BUG-LISPM at MIT-OZ,
    Lispm-Networks at SCRC-TENEX, DCP at SCRC-TENEX
cc: DLW at SCRC-STONY-BROOK, TAFT at MIT-MC, jwalker at SCRC-YUKON,
    pmiller at SCRC-YUKON, dove at MIT-BUGS-BUNNY
In-Reply-To: The message of 20 Sep 84 10:25-EDT from Gavan Duffy <GAVAN at MIT-OZ>,
             The message of 20 Sep 84 22:42-EDT from APIARY-SERVERS at MIT-APIARY-6,
             The message of 21 Sep 84 10:08-EDT from Christopher C. Stacy <CStacy at MIT-DM>,
             <840922033042.7.RWK@HUDSON.SCRC.Symbolics>,
             <840922134635.5.MOON@EUPHRATES.SCRC.Symbolics>,
             <840924084519.2.GSMITH@TURKEY.SCRC.Symbolics>,
             The message of 24 Sep 84 12:29-EDT from Christopher C. Stacy <CSTACY at MIT-MC>,
             <840925222111.4.RWK@HUDSON.SCRC.Symbolics>,
             <840926093332.8.GSMITH@TURKEY.SCRC.Symbolics>,
             <840928162417.7.MOON@EUPHRATES.SCRC.Symbolics>,
             <840922165035.1.MOON@EUPHRATES.SCRC.Symbolics>,
             The message of 24 Sep 84 06:37-EDT from Richard Pavelle <RP at SCRC-TENEX>,
             The message of 24 Sep 84 14:38-EDT from Richard Pavelle <RP at SCRC-TENEX>,
             <841001212641.1.JOSEPH@HARLEM.SCRC.Symbolics>,
             The message of 2 Oct 84 16:56-EDT from Richard Lamson <rsl at SPA-RUSSIAN>,
             The message of 2 Oct 84 18:48-EDT from Richard Lamson <rsl at SPA-RUSSIAN>,
             The message of 2 Oct 84 22:40-EDT from Patrick A. O'Donnell <PAO at MIT-EECS>,
             The message of 2 Oct 84 21:17-EDT from JCMA at MIT-OZ,
             The message of 3 Oct 84 06:40-EDT from tk at SCRC-STONY-BROOK,
             The message of 3 Oct 84 06:52-EDT from Richard Pavelle <RP at SCRC-TENEX>,
             <841003103033.4.SWM@THAMES.SCRC.Symbolics>,
             The message of 3 Oct 84 19:00-EDT from Scott Cyphers <sr.ehpyc at MIT-SPEECH>,
             <841003202309.2.GSMITH@TURKEY.SCRC.Symbolics>,
             The message of 6 Oct 84 02:49-EDT from Bill Gosper <rwg at SPA-NIMBUS>,
             The message of 9 Oct 84 12:33-EDT from KMP at MIT-MC
Message-ID: <841027173114.6.HORNIG@PEACE.SCRC.Symbolics>

This is to let me clear out all of my old mail about this problem and to
make sure that everyone knows what happened.

The "MC/DM" problem was due to the fact that the Release 5.2 namespace
system was unable, due to design deficiencies, to deal with the names
MIT-DM, MITDM, and DM being removed from MIT-MC and put on a
newly-created host in two namespaces (INTERNET and ARPANET) at once.  It
typically would hear about the change in one namespace, create the new host,
then notice that MC and DM were both nicknames for the same host on the
other namespace and recombine the hosts.  The recombining involved
a 50/50 chance of the combined MC host becoming a UNIX host.

The flavor changing that this required triggered another 5.2 deficiency,
which was that if you change the flavor of the same host twice after its
creation, the system gets hopelessly confused and rapidly goes to
pieces.  This is due to different copies of the host not being EQ to
each other.  This was also the source of some of the "MC not found"
errors.

Another class of problems that people saw were caused by early attempts
to fix the problem before it was fully understood.  It the time, it was
thought that only the namespace servers were confused, and that if they
could be fixed by hand, everything would be all right.  Well-intended
surgery on LM15 resulted in some of the "MC not found" errors people
saw.

The bugs in the code which caused these problems will be fixed in the
next release.  The system will be much more careful about when it
combines or renames existing hosts.  It will also keep better track of
its flavor changing so that it won't drop the ball there.

As for 5.2, we intend to build a 5.2 world from which all traces of the
old MC host with the DM nicknames have been removed.  When booted, the
bachine will learn about MC and DM through the normal machanisms, never
realizing that they were once the same host.  Booting this world first
on the namespace servers, then on the rest of the machines should allow
life to return to normal.
27-Oct-84 18:14:21-EDT,1615;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 27 Oct 84 18:14-EDT
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 116577; Sat 27-Oct-84 18:11:51-EDT
Date: Saturday, 27 October 1984, 18:12-EDT
From: David C. Plummer <DCP at SCRC-TENEX>
Subject: Resource suggestion
To: GSmith at SCRC-TENEX, RWK at SCRC-TENEX
cc: bug-lispm at MIT-OZ
In-Reply-To: The message of 26 Oct 84 05:05-EDT from Glenn S. Burke <GSB at MIT-MC>
Message-ID: <841027181217.3.DCP@NEPONSET.SCRC.Symbolics>

    Date: 26 October 1984 05:05-EDT
    From: Glenn S. Burke <GSB @ MIT-MC>

	Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 25 Oct 84 23:37-EDT
	Date: Thursday, 25 October 1984, 23:28-EDT
	From: Scott Cyphers <sr.ehpyc at MIT-SPEECH>

	Sometime when the world gets recompiled, I think it would be useful to
	add another slot to resources called :deallocator which would let you do
	things that might help the garbage collector.  For example, if your
	resource is a data base, with pointers to all kinds of random objects,
	the :deallocator could go through the resource and fill it with nils so
	that the garbage collector wouldn't wrongly think things only accessible
	through the resource were still accessible.

    this has been in the NIL (and Maclisp [unsupported utility there]) resource
    code for a couple years now, under the name :deinitializer.  It's used
    a fair amount.

What's the policy of "Adding new features near the beginning of
beta-test which USERS request?"  A "Can't" answer means they won't see
it until April '86, 18 months from now.
27-Oct-84 18:26:03-EDT,5147;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 27 Oct 84 18:25-EDT
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 116581; Sat 27-Oct-84 18:17:09-EDT
Date: Saturday, 27 October 1984, 18:17-EDT
From: David C. Plummer <DCP at SCRC-TENEX>
Subject: Grrr
To: Christopher Eliot <CRE at SANCHO-PANZA>, bug-lispm at MIT-OZ
In-Reply-To: The message of 26 Oct 84 18:03-EDT from Christopher Eliot <CRE at SANCHO-PANZA>
Message-ID: <841027181733.5.DCP@NEPONSET.SCRC.Symbolics>

    Date: Friday, 26 October 1984, 18:03-EDT
    From: Christopher Eliot <CRE at SANCHO-PANZA>

    To: bug-lispm@oz 
    --Text follows this line--

    (1) Sending bug mail did not work.  I had to go into PEEK, click on
    the "mail from debugger" process, tweak it (return from some
    PARSE-ARG function) and then it actually gave me this bug window.
    Obviously a bug which prevents people from sending bug reports is a
    major loss.

    (2) I have to see dozens of totaly extraneous messages about some
    host or another was mentioned and then not found and other bullshit.
    Make this go away.  I don't need it and I don't want to hear
    anything about a host that I havn't touched or even heard of.

    (3) On the other hand, when I try to Edit something with
    tv:edit-namespace-object it doesn't tell me anything about LM15
    being down.  Do you think that an editor should doesn casually let
    you do a bunch of work and THEN tell you that it can't be saved?
    This is extremely stupid.  TV:edit-namespace-object should
    definately have some "Mode Line" which includes a comment about
    whether or not it thinks the namespace server is up or down, and
    whether it thinks your changes can be saved.  This should be visible
    before you put any work into making them.

	    Grrr

    [P.S.  Just to put me in an even better mood I typed END to this bug window and it
    went into the state LOCK and waited.  I will try to force it to do something by 
    using the debugger to break the lock.  --CRE

    =That didn't work. Trying to save to a file.]

    >>Error: Timeout while waiting for CADR-15.
    While in the function (:METHOD SI:INPUT-STREAM-EXCEPTION-MIXIN :CHECK-INPUT-EXCEPTION)  CHAOS:GET-NEXT-PKT  (:METHOD CHAOS:BASIC-INPUT-STREAM :GET-NEXT-INPUT-PKT)

    (:METHOD SI:INPUT-STREAM-EXCEPTION-MIXIN :CHECK-INPUT-EXCEPTION):  (P.C. = 10)
       Arg 0 (SELF): #<CHARACTER-STREAM 34070031>
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:INPUT-STREAM-EXCEPTION-MIXIN -- 1. IV's, 0. FL's 17702017>
       Arg 2 (OPERATION): :CHECK-INPUT-EXCEPTION

    CHAOS:GET-NEXT-PKT:  (P.C. = 172)
       Arg 0 (CONN): #<CHAOS Connection for NAMESPACE to LM15 53244001>
       Arg 1 (NO-HANG-P): NIL
       Arg 2 (STREAM): #<CHARACTER-STREAM 34070031>

    (:METHOD CHAOS:BASIC-INPUT-STREAM :GET-NEXT-INPUT-PKT):  (P.C. = 53)
       Arg 0 (SELF): #<CHARACTER-STREAM 34070031>
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor CHAOS:BASIC-INPUT-STREAM -- 2. IV's, 0. FL's 17701762>
       Arg 2 (OPERATION): :GET-NEXT-INPUT-PKT
       Arg 3 (NO-HANG-P): NIL

    (:METHOD CHAOS:CHARACTER-INPUT-STREAM-MIXIN :NEXT-INPUT-BUFFER):  (P.C. = 6)
       Arg 0 (SELF): #<CHARACTER-STREAM 34070031>
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor CHAOS:CHARACTER-INPUT-STREAM-MIXIN -- 1. IV's, 0. FL's 17701743>
       Arg 2 (OPERATION): :NEXT-INPUT-BUFFER
       Arg 3 (NO-HANG-P): NIL

    (:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :SETUP-NEXT-INPUT-BUFFER):  (P.C. = 11)
       Arg 0 (SELF): #<CHARACTER-STREAM 34070031>
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:BASIC-BUFFERED-INPUT-STREAM -- 3. IV's, 0. FL's 17701676>
       Arg 2 (OPERATION): :SETUP-NEXT-INPUT-BUFFER
       --Defaulted args:--
       Arg 3 (NO-HANG-P): NIL

    (:METHOD CHAOS:CHARACTER-STREAM :COMBINED :SETUP-NEXT-INPUT-BUFFER):  (P.C. = 10)
       Arg 0 (SELF): #<CHARACTER-STREAM 34070031>
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor CHAOS:CHARACTER-STREAM -- 0. IV's, 10. FL's 17701725>
       Rest arg (.DAEMON-CALLER-ARGS.): NIL

    (:METHOD SI:BUFFERED-LINE-INPUT-STREAM :STRING-LINE-IN):  (P.C. = 22)
       Arg 0 (SELF): #<CHARACTER-STREAM 34070031>
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:BUFFERED-LINE-INPUT-STREAM -- 3. IV's, 0. FL's 17701767>
       Arg 2 (OPERATION): :STRING-LINE-IN
       Arg 3 (EOF): NIL
       Arg 4 (LINE): "anonyous pigBen Kuipers/"St. Medford Mass. 02155/"NNNECTIONSTPspoo"
       --Defaulted args:--
       Arg 5 (START): 0
       Arg 6 (END): 64

    NETI:PARSE-RECORD-AS-TOKENS:  (P.C. = 32)
       Arg 0 (STREAM): #<CHARACTER-STREAM 34070031>
       Arg 1 (COMMENTS-P): T

    Rest of stack:
    NETI:PARSE-RECORD-AS-TOKENS-WITH-TIMEOUT:  (P.C. = 23)
    NETI:OPEN-NAMESPACE-SERVER:  (P.C. = 364)
    NET:UPDATE-OBJECT-PERMANENTLY:  (P.C. = 73)
    (:DEFUN-METHOD TV:PERFORM-COMMAND):  (P.C. = 446)
    (:METHOD TV:NAMESPACE-EDITOR-FRAME :TOP-LEVEL):  (P.C. = 120)
    TV:START-NAMESPACE-EDITOR:  (P.C. = 4)
    SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
27-Oct-84 19:05:42-EDT,2977;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 27 Oct 84 19:05-EDT
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 116596; Sat 27-Oct-84 19:01:07-EDT
Date: Saturday, 27 October 1984, 19:01-EDT
From: David C. Plummer <DCP at SCRC-TENEX>
Subject: Comment lies
To: Scott Cyphers <sr.ehpyc at MIT-SPEECH>, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 27 Oct 84 13:38-EDT from Scott Cyphers <sr.ehpyc at MIT-SPEECH>
Message-ID: <841027190132.1.DCP@NEPONSET.SCRC.Symbolics>

    Date: Saturday, 27 October 1984, 13:38-EDT
    From: Scott Cyphers <sr.ehpyc at MIT-SPEECH>

    In Symbolics 3600 Release 5.2, ZOO 3.3, Spire-Macros 3.8, Compute 2.5,
    Attribute 3.3, Audio 2.4, Speech-Attributes 2.3, Display 3.7,
    Speech-Layouts 4.7, Versatec 3.0, Prtout 2.0, Spire 14.0, SpireX 11.1,
    ZOO-SPIRE 1.0, FEP 22, on Lisp Machine Smokey:

    ;;; Find the current lexical value of SELF
    (DEFUN %FIND-SELF-ON-STACK ()
      (DO ((FP (%STACK-FRAME-POINTER) (FRAME-PREVIOUS-FRAME FP))) (NIL)
	(AND (NOT (ZEROP (FRAME-INSTANCE-CALLED FP))) (RETURN (CAR FP)))	;Return first argument
	(AND (NOT (ZEROP (FRAME-BOTTOM-BIT FP))) (RETURN NIL))))

    This should say "Find the current dynamic value of SELF".  It's used by
    si:get-flavor-mapping-table-and-self which usually works since the dynamic
    self and the lexical self are usually the same thing, but breaks if you try
    to do something like this:  (of course this will all get fixed by lexical
    scoping, so all I'm reporting is the incorrect comment).

I reported this internally about a month ago, and indeed, what I /think/
you are complaining about (you didn't include a backtrace, but it should
have tried to find SELF as a TEST-FLAVOR instance but instead found SELF
as an EQ-HASH-TABLE instance) is indeed fixed by lexical scoping in
Releae 6.

Note that the above function is a kludge to make up for people
funcalling DEFUN-METHODS.  The case you tripped over creates an internal
defun-method in Release 5 to make up for the lack of lexical scoping.
There are other examples where it does even more wrong things.  Consider

(defflavor test-flavor (a) ()
  :initable-instance-variables
  :gettable-instance-variables)

(defmethod (test-flavor :a-funarg) ()
  #'(lambda () a))

(defmethod (test-flavor :funcall) (fun) (funcall fun))

(send (make-instance 'test-flavor :a 1) :funcall
      (send (make-instance 'test-flavor :a 2) :a-funarg))

With lexical scoping, I get 2.  You probably get 1.

    (defflavor test-flavor
	    (foo bar)
	    ()
      :initable-instance-variables
      :gettable-instance-variables)

    (defmethod (test-flavor :frob)
	       ()
      (send foo :map-hash #'(lambda (key value)
			      key
			      (+ value bar))))

    (setq a (make-instance 'si:eq-hash-table))
    (send a :put-hash 'abc 1)
    (setq b (make-instance 'test-flavor :foo a :bar 3))
    (send b :frob)
27-Oct-84 19:34:55-EDT,2720;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 27 Oct 84 19:34-EDT
Date: Saturday, 27 October 1984, 19:34-EDT
From: Chris Lindblad <cjl at MIT-OZ>
Subject: The MC/DM namespace problem
To: Hornig at SCRC-STONY-BROOK, GAVAN at MIT-OZ, CStacy at MIT-MC,
    RWK at SCRC-YUKON, Moon at SCRC-TENEX, gsmith at SCRC-YUKON,
    RP at SCRC-TENEX, joseph at SCRC-QUABBIN, rsl at SPA-RUSSIAN,
    PAO at MIT-EECS, JCMA at MIT-OZ, tk at SCRC-STONY-BROOK,
    SWM at SCRC-QUABBIN, sr.ehpyc at MIT-SPEECH, rwg at SPA-NIMBUS,
    KMP at MIT-MC, BUG-LISPM at MIT-OZ, Lispm-Networks at SCRC-TENEX,
    DCP at SCRC-TENEX
Cc: DLW at SCRC-STONY-BROOK, TAFT at MIT-MC, jwalker at SCRC-YUKON,
    pmiller at SCRC-YUKON, dove at MIT-BUGS-BUNNY
In-reply-to: <841027173114.6.HORNIG@PEACE.SCRC.Symbolics>

    Date: Saturday, 27 October 1984, 17:31-EDT
    From: Charles Hornig <Hornig at SCRC-STONY-BROOK>

    As for 5.2, we intend to build a 5.2 world from which all traces of the
    old MC host with the DM nicknames have been removed.  When booted, the
    bachine will learn about MC and DM through the normal machanisms, never
    realizing that they were once the same host.  Booting this world first
    on the namespace servers, then on the rest of the machines should allow
    life to return to normal.

When I built the >Release-5-2-bulletin.load here at MIT that was meant
for general distribution I was real careful to make sure that the load
knew the correct information about which namespace servers were the
correct ones, and the correct information about MC and DM. Newer world
loads that aren't disk saved as carefully might be wrong, but they are
in the small minority here. I am sure that this is not the problem. The
problem is CADR-15.  

We are running a very old load on CADR-15, so old that it thinks that it
is a secondary for SCRC, SCH, and SPA, and that MC and DM are the same
host, and they are MC. It doesn't know about any other secondaries on
this side of the microwave for any namespace. I manually added code to
the file-server login file so that when it boots, if the microwave is
up, it eventually gets the news that there are different secondaries,
and that it isn't a secondary for these namespaces. If it's lucky, it
also figures out that MC and DM are different in the correct way. If the
microwave is down, though, we lose. When CADR-15 is wrong about MC,
eventually some secondaries get wrong, and the whole world gets lost. I
suspect that POLAR gets confused this way too. I don't know how old it's
band is.

I believe that when/if we get a 3600 primary namespace server running a
5.2 with the right info on MC and DM, the MC/DM problem will disappear.
27-Oct-84 20:15:38-EDT,2210;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 27 Oct 84 20:15-EDT
Date: Saturday, 27 October 1984, 20:13-EDT
From: Scott Cyphers <sr.ehpyc at MIT-SPEECH>
Subject: The MC/DM namespace problem
To: cjl at MIT-OZ, Hornig at SCRC-STONY-BROOK, GAVAN at MIT-OZ,
    CStacy at MIT-MC, RWK at SCRC-YUKON, Moon at SCRC-TENEX,
    gsmith at SCRC-YUKON, RP at SCRC-TENEX, joseph at SCRC-QUABBIN,
    rsl at SPA-RUSSIAN, PAO at MIT-EECS, JCMA at MIT-OZ,
    tk at SCRC-STONY-BROOK, SWM at SCRC-QUABBIN, sr.ehpyc at MIT-SPEECH,
    rwg at SPA-NIMBUS, KMP at MIT-MC, BUG-LISPM at MIT-OZ,
    Lispm-Networks at SCRC-TENEX, DCP at SCRC-TENEX
Cc: DLW at SCRC-STONY-BROOK, TAFT at MIT-MC, jwalker at SCRC-YUKON,
    pmiller at SCRC-YUKON, dove at MIT-BUGS-BUNNY
In-reply-to: The message of 27 Oct 84 19:34-EDT from Chris Lindblad <cjl at MIT-OZ>

For what it's worth, these are the major points in the life of Polar.
It was born before time, on Collie, and then moved to Afghan:

SCRC|LISP-MACHINE           Collie
SCRC|LISP-MACHINE           Collie
SCRC|LISP-MACHINE           Collie            8/10/83 22:42:42
SCRC|LISP-MACHINE           Afghan            10/27/83 19:36:12

It had an active life on Afghan before it went onto a tape and appeared
on Yogi.  The last disk save was in July, and, as I remember it, it took
a couple hours, which is why I haven't saved it much.  I still have the
tape.  It knows DM is unix and MC is ITS.  I booted it with the chaosnet
disconnected, and it still new MC was ITS and DM was unix and it had the
right hosts as secondaries for the MIT namespace, so I think it's fine.
It's running 5.1 instead of the 243.x that LM15 is running.

SCRC|LISP-MACHINE           Afghan            6/05/84 14:56:45
LISP-MACHINE                Lisp Machine Yogi 6/28/84 22:31:48
LISP-MACHINE                Lisp Machine Polar 6/29/84 22:11:45
LISP-MACHINE                Lisp Machine Polar 7/02/84 03:12:34
LISP-MACHINE                Lisp Machine Polar 7/07/84 09:04:03
LISP-MACHINE                Lisp Machine Polar 7/24/84 16:30:49
LISP-MACHINE                Lisp Machine Polar 10/24/84 13:20:21
LISP-MACHINE                Lisp Machine Polar 10/24/84 13:34:50
27-Oct-84 20:23:34-EDT,477;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 27 Oct 84 20:23-EDT
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 116636; Sat 27-Oct-84 20:21:25-EDT
Date: Saturday, 27 October 1984, 20:21-EDT
From: David C. Plummer <DCP at SCRC-TENEX>
Subject: Grrr
To: Christopher Eliot <CRE at SANCHO-PANZA>, bug-lispm at MIT-OZ
Revokes: <841027181733.5.DCP@NEPONSET.SCRC.Symbolics>
Message-ID: <841027202105.9.DCP@NEPONSET.SCRC.Symbolics>


27-Oct-84 20:48:55-EDT,797;000000000000
Received: from MIT-BING-CROSBY by MIT-OZ via Chaosnet; 27 Oct 84 20:48-EDT
Date: Saturday, 27 October 1984, 20:43-EDT
From:  <REID at MIT-OZ>
Subject: Problems with "make-system"
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 Release 5.2, on Lisp Machine Bing Crosby:

This has to do with "make-system" rereading files (even though I have
the 5.2 patches loaded).  When I say "(make-system 'foo)", all the files
are loaded with explicit version numbers.  Then if I say "(make-system
'bar)", where "bar" needs some of the modules in "foo", the files will
be reloaded (apparently because the system looks for the files without
explicit version numbers, and never sees that the ones with explicit
version numbers are already loaded.

Is there any patch for this?

Thanks, Reid Simmons
27-Oct-84 21:18:52-EDT,1535;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 27 Oct 84 21:18-EDT
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 116654; Sat 27-Oct-84 21:16:20-EDT
Date: Saturday, 27 October 1984, 21:16-EDT
From: David C. Plummer <DCP at SCRC-TENEX>
Subject: Problems with "make-system"
To: REID at MIT-OZ, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 27 Oct 84 20:43-EDT from REID at MIT-OZ
Message-ID: <841027211633.2.DCP@NEPONSET.SCRC.Symbolics>

    Date: Saturday, 27 October 1984, 20:43-EDT
    From:  <REID at MIT-OZ>

    In Symbolics 3600 Release 5.2, on Lisp Machine Bing Crosby:

    This has to do with "make-system" rereading files (even though I have
    the 5.2 patches loaded).  When I say "(make-system 'foo)", all the files
    are loaded with explicit version numbers.  Then if I say "(make-system
    'bar)", where "bar" needs some of the modules in "foo", the files will
    be reloaded (apparently because the system looks for the files without
    explicit version numbers, and never sees that the ones with explicit
    version numbers are already loaded.

    Is there any patch for this?

I guessing (since I don't know where you define FOO and BAR, and if "5.2
patches loaded" includes that 5.2 bulletin patches) that FOO's :LATEST
(or whatever) version specifies explicit versions, but BAR asks for
:NEWEST versions.  In that case, I think make-system isn't being very
smart, but I also think you should more clearly specify how BAR depends
on FOO.
28-Oct-84 00:40:47-EDT,591;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 28 Oct 84 00:39-EDT
Date: Sunday, 28 October 1984, 00:35-EDT
From:  <saz at MIT-OZ>
Subject: audio hardware
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 Release 5.2, FEP 22, on Lisp Machine Sid Vicious:

I find it hard to believe that (beep 3225 <duration>)
and (beep 3226 <duration>) produce sounds an entire half
step apart.  Is this some sort of pathological case or
something?  Beep is defined in the patch notes for 5.2,
in the AUDIO section, under a longer name starting with
%beep...

that's 3225 and 3226 DECIMAL...

Saz
28-Oct-84 21:14:52-EST,952;000000000000
Received: from MIT-BUDDY by MIT-OZ via Chaosnet; 28 Oct 84 21:13-EST
Date: Sunday, 28 October 1984, 21:05-EST
From: Christopher Fry <cfry at MIT-OZ>
Subject: cadr patches 
To: bug-lispm at MIT-OZ
Cc: cfry at MIT-OZ

In Symbolics 3600 Release 5.2, COLOR 5.1, Experimental FB 194.0, FEP 22, on Lisp Machine Buddy Holly:

I am trying to get cadr-4 working.
There is a rel 5.1 band on it.
Since I don't know where to get a 5.2 band for cadr's, and since
the network wouldn't work long enough to transfer a band anyway,
I'm trying to make a current band.

I can't load patches because some of them are not compiled for cadr's.

I can't compile them all because they simply won't compile, even
with up to the previous patches loaded.

Loading all the patches I can, I can't do disk-save
due to some network bug.

I didn't send this from cadr-4 because it was so wedged from the
above actions that I had to cold boot.

Please help.
29-Oct-84 18:29:26-EST,698;000000000000
Received: from MIT-ROBOT-3 by MIT-OZ via Chaosnet; 29 Oct 84 18:22-EST
Date: Monday, 29 October 1984, 18:22-EST
From:  <HLV at MIT-OZ>
Subject: copying conformally displaced arrays
To: BUG-LISPM at MIT-OZ

In Release 5.1, Experimental MIT 1.4, FEP 18, on Lisp Machine Robot-3 (3600):

Function copy-array-contents doesn't appear to work on conformally-displaced arrays.

I am trying to write a function which, like bitblt, lets one copy a section of an array,
without having the alignment restrictions of bitblt.   Since copy-array-contents
doesn't work, is there another way of doing this without explicitly computing
indices on the original array myself?  Thanks.

Harry Voorhees
29-Oct-84 19:43:40-EST,489;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 29 Oct 84 19:42-EST
Date: Monday, 26 July 1976, 02:38-EDT
From: Gavan Duffy <GAVAN at MIT-OZ>
Subject: Where's my comtab?
To: BUG-LISPM at MIT-OZ

Why do I have to do this?

(DEFUN *RELATUS-COMTAB* ()
  "Returns the RELATUS Mode comtab."
  (SEND (MODE-OF-FLAVOR 'RELATUS-MODE) :EVAL-INSIDE-YOURSELF '*MODE-COMTAB*))

Why isn't a special variable or, better, a defun created which
returns the comtab when the defmajor is defined?
29-Oct-84 22:13:03-EST,4997;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 29 Oct 84 22:11-EST
Date: Monday, 29 October 1984, 22:09-EST
From: sr.ehpyc at MIT-SPEECH
Sender: sr.randolph at MIT-SPEECH
Subject: File connection problem
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 Release 5.2, ZOO 3.3, Spire-Macros 3.8, Compute 2.5,
Attribute 3.3, Audio 2.4, Speech-Attributes 2.3, Display 3.7,
Speech-Layouts 4.7, Versatec 3.0, Prtout 2.0, Spire 14.0, SpireX 11.1,
ZOO-SPIRE 1.0, FEP 22, on Lisp Machine Kodiak:

Was just loading files when this happened.
Restarting the load worked.

>>Error: Response over control connection was for wrong file handle
While in the function FS:FILE-CHECK-HANDLE  (:METHOD FS:HOST-UNIT :COMMAND)  (:METHOD FS:FILE-DATA-STREAM-MIXIN :COMMAND)

FS:FILE-CHECK-HANDLE:  (P.C. = 22)
   Arg 0 (HANDLE): "I3119"
   Arg 1 (STRING): "I3 ERROR UKC F The :NIL operation is not supported."
   Local 2 (HANDLE-END): 2.

(:METHOD FS:HOST-UNIT :COMMAND):  (P.C. = 133)
   Arg 0 (SELF): #<HOST-UNIT 5120753>
   Arg 1 (SELF-MAPPING-TABLE): FS:HOST-UNIT
   Arg 2 (OPERATION): :COMMAND
   Arg 3 (MARK-P): T
   Arg 4 (STREAM-OR-HANDLE): #<FILE-INPUT-BINARY-STREAM "GOLDY:>u>zue>cb>word57-cb.utt" 13771347>
   Arg 5 (SIMPLE-P): NIL
   Arg 6 (WHOSTATE): "File Position"
   Rest arg (COMMANDS): ("FILEPOS " "19605")

(:METHOD FS:FILE-DATA-STREAM-MIXIN :COMMAND):  (P.C. = 14)
   Arg 0 (SELF): #<FILE-INPUT-BINARY-STREAM "GOLDY:>u>zue>cb>word57-cb.utt" 13771347>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:FILE-DATA-STREAM-MIXIN -- 6. IV's, 0. FL's 57364166>
   Arg 2 (OPERATION): :COMMAND
   Arg 3 (MARK-P): T
   Arg 4 (WHOSTATE): "File Position"
   Arg 5 (COM): "FILEPOS "
   Rest arg (STRINGS): NIL

(:METHOD FS:FILE-DATA-STREAM-MIXIN :SET-BUFFER-POINTER):  (P.C. = 45)
   Arg 0 (SELF): #<FILE-INPUT-BINARY-STREAM "GOLDY:>u>zue>cb>word57-cb.utt" 13771347>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:FILE-DATA-STREAM-MIXIN -- 6. IV's, 0. FL's 57364166>
   Arg 2 (OPERATION): :SET-BUFFER-POINTER
   Arg 3 (NEW-POINTER): 19605.

(:METHOD SI:INPUT-POINTER-REMEMBERING-MIXIN :SET-POINTER):  (P.C. = 45)
   Arg 0 (SELF): #<FILE-INPUT-BINARY-STREAM "GOLDY:>u>zue>cb>word57-cb.utt" 13771347>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:INPUT-POINTER-REMEMBERING-MIXIN -- 5. IV's, 0. FL's 57364215>
   Arg 2 (OPERATION): :SET-POINTER
   Arg 3 (NEW-POINTER): 19605.

(:PROPERTY ART-FPS-FLOAT SPIRE:SKIP-FORM):  (P.C. = 37)  (from SPIRE: SPIRE; DUMP)
   Arg 0 (STREAM): #<FILE-INPUT-BINARY-STREAM "GOLDY:>u>zue>cb>word57-cb.utt" 13771347>

SPIRE:SKIP-THING1:  (P.C. = 21)  (from SPIRE: SPIRE; DUMP)
   Arg 0 (STREAM): #<FILE-INPUT-BINARY-STREAM "GOLDY:>u>zue>cb>word57-cb.utt" 13771347>
   Rest arg (ARGS): NIL

(:PROPERTY :LIST SPIRE:SKIP-FORM):  (P.C. = 16)  (from SPIRE: SPIRE; DUMP)
   Arg 0 (STREAM): #<FILE-INPUT-BINARY-STREAM "GOLDY:>u>zue>cb>word57-cb.utt" 13771347>

Rest of stack:
SPIRE:SKIP-THING1:  (P.C. = 21)  (from SPIRE: SPIRE; DUMP)
(:PROPERTY :LIST SPIRE:SKIP-FORM):  (P.C. = 16)  (from SPIRE: SPIRE; DUMP)
SPIRE:SKIP-THING1:  (P.C. = 21)  (from SPIRE: SPIRE; DUMP)
(:PROPERTY :LIST SPIRE:SKIP-FORM):  (P.C. = 16)  (from SPIRE: SPIRE; DUMP)
SPIRE:SKIP-THING1:  (P.C. = 21)  (from SPIRE: SPIRE; DUMP)
(:PROPERTY :LIST SPIRE:SKIP-FORM):  (P.C. = 16)  (from SPIRE: SPIRE; DUMP)
SPIRE:SKIP-THING1:  (P.C. = 21)  (from SPIRE: SPIRE; DUMP)
(:PROPERTY :LIST SPIRE:SKIP-FORM):  (P.C. = 16)  (from SPIRE: SPIRE; DUMP)
SPIRE:SKIP-THING1:  (P.C. = 21)  (from SPIRE: SPIRE; DUMP)
(:PROPERTY :INSTANCE SPIRE:SKIP-FORM):  (P.C. = 24)  (from SPIRE: SPIRE; DUMP)
SPIRE:SKIP-THING1:  (P.C. = 21)  (from SPIRE: SPIRE; DUMP)
(:PROPERTY SPIRE:UTTERANCE-DUMP-HANDLER SPIRE:UNDUMP-HANDLER):  (P.C. = 215)  (from GOLDY:>S>PATCH>SPIRE>Attribute-3-3)
(:PROPERTY :INSTANCE SPIRE:UNDUMP-FORM):  (P.C. = 16)  (from SPIRE: SPIRE; DUMP)
SPIRE:UNDUMP-THING1:  (P.C. = 17)  (from SPIRE: SPIRE; DUMP)
SPIRE:UNDUMP-THING-START:  (P.C. = 35)  (from GOLDY:>S>PATCH>SPIRE>Spire-Macros-3-3)
SPIRE:FASL-VALUE:  (P.C. = 45)  (from GOLDY:>S>PATCH>SPIRE>Spire-Macros-3-4)
SPIRE:UNDUMP-VALUE:  (P.C. = 3)  (from SPIRE: SPIRE; DMPFLAV)
SPIRE:LOAD-UTTERANCE:  (P.C. = 5)  (from GOLDY:>S>PATCH>SPIRE>Attribute-3-2)
SPIRE:UTTERANCE:  (P.C. = 41)  (from SPIRE: SPIRE; UTTERANCE)
(:METHOD SAMPLE :LOAD-UTTERANCES):  (P.C. = 33)  (from GOLDY:>p>randolph>statistics>eda-data-structures)
SEND:  (P.C. = 6)
SI:*EVAL:  (P.C. = 370)
ZWEI:EVAL-PRINT:  (P.C. = 3)
COMPILER:PROCESS-FORMS-FROM-STREAM:  (P.C. = 117)
ZWEI:COMPILE-INTERVAL:  (P.C. = 324)
ZWEI:COMPILE-PRINT-INTERVAL:  (P.C. = 76)
ZWEI:COMPILE-DEFINITION-INTERNAL:  (P.C. = 73)
ZWEI:COM-EVALUATE-REGION-VERBOSE:  (P.C. = 7)
ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 214)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 41)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
29-Oct-84 22:38:33-EST,593;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 29 Oct 84 22:37-EST
Date: Monday, 29 October 1984, 22:26-EST
From: Scott Cyphers <sr.ehpyc at MIT-SPEECH>
Subject: File connection problem
To: sr.ehpyc at MIT-SPEECH, BUG-LISPM at MIT-OZ
In-reply-to: The message of 29 Oct 84 22:09-EST from sr.ehpyc at MIT-SPEECH

Shortly afterwards, on a different file the characters "SPIRE" got read
as "SPIRS", and again re-reading made it work, so maybe it's hardware
someplace?  Shouldn't something have caught an error like that at a
much lower level than when it tried to be a package name?
30-Oct-84 01:15:18-EST,561;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 30 Oct 84 01:14-EST
Date: 30 October 1984 01:15-EST
From: Tim McNerney <TIM @ MIT-MC>
Subject:  Bug? in SI:RECEIVE-BAND and SI:TRANSMIT-BAND
To: BUG-LISPM @ MIT-MC

In System 99.9

I was under the impression that you could abbreviate the names of
bands of the form "LODn" to simply the fixnum n.  If this is the case,
then there is bug in SI:RECEIVE-BAND and SI:TRANSMIT-BAND.  If this
is a figment of my imagination, then please make the error message
more informative than "No NIL partition here..."
30-Oct-84 05:13:31-EST,2274;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 30 Oct 84 05:13-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 117032; Mon 29-Oct-84 09:59:41-EST
Date: Monday, 29 October 1984, 09:59-EST
From: David C. Plummer <DCP at SCRC-TENEX>
Subject: audio hardware
To: saz at MIT-OZ, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 28 Oct 84 00:35-EDT from saz at MIT-OZ
Message-ID: <841029095933.5.DCP@NEPONSET.SCRC.Symbolics>

    Date: Sunday, 28 October 1984, 00:35-EDT
    From:  <saz at MIT-OZ>

    In Symbolics 3600 Release 5.2, FEP 22, on Lisp Machine Sid Vicious:

    I find it hard to believe that (beep 3225 <duration>)
    and (beep 3226 <duration>) produce sounds an entire half
    step apart.  Is this some sort of pathological case or
    something?  Beep is defined in the patch notes for 5.2,
    in the AUDIO section, under a longer name starting with
    %beep...

    that's 3225 and 3226 DECIMAL...

The EXAMPLE is called %beep-ignoring-most-issues, which should tell you
a few things about it.  Another thing to notice is that I spazzed
completely when writing that code.  The first argument should be called
half-wavelength as it is on the CADR.  If you bothered to do the math,
you would have found
	samples-per-cycle = 16. for f = 3225.
and	samples-per-cycle = 15. for f = 3226.
This is NECESSARY for hardware limitations.  (Please don't complain
about the use of ROUND, since any float->fix conversion will have this
boundary case someplace.)  Reconverting to frequency:
	(// audio:*sample-rate* 16.) = 3125.0
	(// audio:*sample-rate* 15.) = 3333.3333
	(// 3333.3333 3125.0) = 1.0666666
	1.0666666 = 2.0^(n/12)
	=> log(1.0666666) = log(2.0) * n/12
	=> n = 12 * log(1.0666666) // log(2.0) = 1.1173118
so it is really 1.117 halfsteps different.

Release 6 contains a much more correct %BEEP, both in arguments taken
(first arg is half-wavelength, which puts all this conversion burden on
the user), and addresses the issues that %beep-ignoring-most-issues
ignores.  If you think you can produce exact frequencies with static
square waves, you are wrong.  If you want to do serious sound
generation, you should view the examples as just that, examples, and not
Truth.
30-Oct-84 14:10:52-EST,1897;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 30 Oct 84 14:09-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 117889; Tue 30-Oct-84 13:36:09-EST
Date: Tuesday, 30 October 1984, 13:36-EST
From: David C. Plummer <DCP at SCRC-TENEX>
Subject: copying conformally displaced arrays
To: HLV at MIT-OZ, BUG-LISPM at MIT-OZ
cc: Bug-LMDoc at SCRC-TENEX
In-Reply-To: The message of 29 Oct 84 18:22-EST from HLV at MIT-OZ
Message-ID: <841030133605.6.DCP@NEPONSET.SCRC.Symbolics>

    Date: Monday, 29 October 1984, 18:22-EST
    From:  <HLV at MIT-OZ>

    In Release 5.1, Experimental MIT 1.4, FEP 18, on Lisp Machine Robot-3 (3600):

    Function copy-array-contents doesn't appear to work on conformally-displaced arrays.

I think the last time this was brought up 6 months ago some notes were
sent to documentat the fact that many system array copying routines
don't work well.  The most recent documentation doesn't address this.
The closest it comes is to say (in "Conformal Indirection") "The meaning
of @b[adjust-array-size] for conformal indirect arrays is undefined."
It should also say that
copy-array-[portion,contents,contents-and-leader] does not respect
conformal indirection and will not do what is intended.

    I am trying to write a function which, like bitblt, lets one copy a section of an array,
    without having the alignment restrictions of bitblt.   Since copy-array-contents
    doesn't work, is there another way of doing this without explicitly computing
    indices on the original array myself?  Thanks.

There was talk about making a general copy-array-<something> which took
two multidimensional arrays of the same rank, and ranges of subscripts,
and copied the portions.  This hasn't been done, and it isn't easy to
make this general case be fast (I tried once).  I'll keep this on the
queue.
31-Oct-84 03:15:02-EST,980;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 31 Oct 84 03:14-EST
Received: from SCRC-THAMES by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 97339; Tue 30-Oct-84 16:45:53-EST
Date: Tuesday, 30 October 1984, 16:48-EST
From: Scott McKay <SWM at SCRC-QUABBIN>
Subject: Where's my comtab?
To: GAVAN at MIT-OZ, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 26 Jul 76 02:38-EDT from Gavan Duffy <GAVAN at MIT-OZ>
Message-ID: <841030164853.0.SWM@THAMES.SCRC.Symbolics>

    Date: Monday, 26 July 1976, 02:38-EDT
    From: Gavan Duffy <GAVAN at MIT-OZ>

    Why do I have to do this?

    (DEFUN *RELATUS-COMTAB* ()
      "Returns the RELATUS Mode comtab."
      (SEND (MODE-OF-FLAVOR 'RELATUS-MODE) :EVAL-INSIDE-YOURSELF '*MODE-COMTAB*))

    Why isn't a special variable or, better, a defun created which
    returns the comtab when the defmajor is defined?

I guess nobody ever realized it was a useful thing to do.  I see nothing
wrong with your function.
31-Oct-84 12:19:30-EST,3814;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 31 Oct 84 12:19-EST
Date: Wednesday, 31 October 1984, 12:20-EST
From: CJL at MIT-OZ
Sender: File-Server at MIT-LISPM-15
Subject: Blowout in namespace editor.
To: BUG-LISPM at MIT-OZ
Message-ID: <841031122032.1.FILE-SERVER@CADR-15.MIT>

In Symbolics LM-2 Experimental System 243.794,
Experimental Hardcopy 21.31, Experimental Zmail 84.162,
Experimental LMFS 38.91, Experimental Tape 22.17,
Experimental Print 35.10, microcode 998, on Lisp Machine Fifteen:

I clicked VIEW, then clicked NAMESPACE.

>>Trap: The function NIL is undefined.
While in the function SI:READ-DELIMITED-STRING-INTERNAL  (:INTERNAL READLINE 0)  (:DEFUN-METHOD TV:RUBOUT-HANDLER-READ)

SI:READ-DELIMITED-STRING-INTERNAL:  (P.C. = 103)
   Arg 0 (DELIMITERS): NIL
   Arg 1 (STREAM): #<NAMESPACE-INTERACTOR-PANE Namespace Editor Interactor Pane -27737335 exposed>
   Arg 2 (EOF): NIL
   Arg 3 (BUFFER): "                                                                                                    "
   --Defaulted args:--
   Arg 4 (BEGIN): NIL
   Arg 5 (END): NIL
   Local 0 (LENGTH): 144
   Local 1 (INDEX): 0
   Local 2 (CHAR): NIL
   Local 3 (RETURN-CHAR): NIL
   Local 4 (RETURN-ARG): NIL

(:INTERNAL READLINE 0):  (P.C. = 33)
   Arg 0 (STREAM): #<NAMESPACE-INTERACTOR-PANE Namespace Editor Interactor Pane -27737335 exposed>
   Arg 1 (BUFFER): "                                                                                                    "

(:DEFUN-METHOD TV:RUBOUT-HANDLER-READ):  (P.C. = 204)
   (SELF = #<NAMESPACE-INTERACTOR-PANE Namespace Editor Interactor Pane -27737335 exposed>)
   Arg 0 (SELF-MAPPING-TABLE): #<Map to flavor TV:STREAM-MIXIN -- 15. IV's, 0. FL's 1542373>
   Arg 1 (FUNCTION): #<DTP-FEF-POINTER (:INTERNAL READLINE 0) 11122077>
   Arg 2 (ARGS): (#<NAMESPACE-INTERACTOR-PANE Namespace Editor Interactor Pane -27737335 exposed> "                                                                                                    ")

(:METHOD TV:STREAM-MIXIN :RUBOUT-HANDLER):  (P.C. = 201)
   (SELF = #<NAMESPACE-INTERACTOR-PANE Namespace Editor Interactor Pane -27737335 exposed>)
   Arg 0 (OPERATION): :RUBOUT-HANDLER
   Arg 1 (RUBOUT-HANDLER-OPTIONS): ((:ACTIVATION MEMQ (215 212 224)) (:PROMPT "Enter a name for the namespace to be viewed: "))
   Arg 2 (FUNCTION): #<DTP-FEF-POINTER (:INTERNAL READLINE 0) 11122077>
   Rest arg (ARGS): (#<NAMESPACE-INTERACTOR-PANE Namespace Editor Interactor Pane -27737335 exposed> "                                                                                                    ")

READLINE:  (P.C. = 152)
   Rest arg (READ-ARGS): (#<NAMESPACE-INTERACTOR-PANE Namespace Editor Interactor Pane -27737335 exposed> NIL ((:PROMPT "Enter a name for the namespace to be viewed: ")))

APPLY:
   Arg 0 (FN): #<DTP-FEF-POINTER READLINE 11121762>
   Arg 1 (ARGS): (#<NAMESPACE-INTERACTOR-PANE Namespace Editor Interactor Pane -27737335 exposed> NIL ((:PROMPT "Enter a name for the namespace to be viewed: ")))

READLINE-TRIM:  (P.C. = 35)
   Rest arg (READ-ARGS): (#<NAMESPACE-INTERACTOR-PANE Namespace Editor Interactor Pane -27737335 exposed> NIL ((:PROMPT "Enter a name for the namespace to be viewed: ")))

READLINE-OR-NIL:  (P.C. = 54)
   Arg 0 (STREAM): #<NAMESPACE-INTERACTOR-PANE Namespace Editor Interactor Pane -27737335 exposed>
   Arg 1 (EOF-OPTION): NIL
   Arg 2 (INPUT-EDITOR-OPTIONS): ((:PROMPT "Enter a name for the namespace to be viewed: "))

Rest of stack:
(:PROPERTY :STRING-OR-NIL PROMPT-AND-READ):  (P.C. = 24)
PROMPT-AND-READ:  (P.C. = 221)
(:DEFUN-METHOD TV:PERFORM-COMMAND):  (P.C. = 525)
(:METHOD TV:NAMESPACE-EDITOR-FRAME :TOP-LEVEL):  (P.C. = 242)
TV:START-NAMESPACE-EDITOR:  (P.C. = 22)
SI:PROCESS-TOP-LEVEL:  (P.C. = 123)
31-Oct-84 12:44:43-EST,1418;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 31 Oct 84 12:44-EST
Received: from SCRC-NEPONSET by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 97630; Wed 31-Oct-84 12:34:46-EST
Date: Wednesday, 31 October 1984, 12:36-EST
From: David C. Plummer in disguise <DCP at SCRC-TENEX>
Subject: Stickiness of default font in Zmacs
To: Kent M Pitman <kmp at MIT-MC>, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 17 Aug 84 19:10-EDT from Kent M Pitman <kmp at MIT-MC>
Message-ID: <841031123655.6.NFEP@NEPONSET.SCRC.Symbolics>

    Date: Friday, 17 August 1984, 19:10-EDT
    From: Kent M Pitman <kmp at MIT-MC>

    In Symbolics Release 4.5 on Merlin (3600):

    Switching buffers destroys the "current font" attribute. If I've done
    c-m-J to change default font, it's changed back if I do c-m-L c-m-L.

This is still broken in the most recent (Release 6 Beta I minus
epsilon) system.

    Date: Saturday, 18 August 1984, 16:14-EDT
    From: David A. Moon <Moon at SCRC-TENEX>
    
    I believe the current-font should be maintained per-window per-buffer in exactly
    the way that Point is maintained.

As far as I can tell (the culprit appears to be ZWEI:SET-WINDOW-BUFFER)
this requires adding a slot to the zwei:window defstruct; the buffer's
current font could be done on the buffer's property list, as the font
map is done.  This requires recompiling Zwei.

Is there another way?
31-Oct-84 15:27:50-EST,1122;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 31 Oct 84 15:26-EST
Received: from SCRC-NEPONSET by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 97780; Wed 31-Oct-84 15:26:32-EST
Date: Wednesday, 31 October 1984, 15:28-EST
From: David C. Plummer in disguise <DCP at SCRC-TENEX>
Subject: Slow/No Booting
To: Howard I. Cannon <HIC at SWW-WHITE>, DRM at MIT-XX,
    bug-lispm at MIT-OZ
In-Reply-To: The message of 4 Sep 84 18:11-EDT from Howard I. Cannon <HIC at SWW-WHITE>,
             Msg of 30 Aug 1984  07:56-EDT from Bruce Edwards <BEE at SCRC-STONY-BROOK.ARPA>,
             <DRM.12043882644.BABYL@MIT-XX>
Message-ID: <841031152840.1.NFEP@NEPONSET.SCRC.Symbolics>

The cause of the In-Reply-to message is that there is a (supposed)
problem with 3600s and 3670s running the same world, and that the
machine hangs forever, but can be warm booted from the hang.  I asked
that somebody use the FEP debugger to tell me what the machine thought
it was doing.  Having gotten no information, I'm deleting the mail.  If
it still happens, please provide sufficient information for us to be
able to debug it.
31-Oct-84 17:10:05-EST,949;000000000000
Received: from MIT-BUGS-BUNNY by MIT-OZ via Chaosnet; 31 Oct 84 17:08-EST
Received: by bugs-bunny.mit.arpa (4.12/4.8) id AA06648; Wed, 31 Oct 84 17:05:45 est
Date: Wed, 31 Oct 84 17:05:45 est
From: Web Dove <dove@bugs-bunny>
To: bug-lispm@oz
Subject: namespace

Since Symbolics is unable or unwilling to keep the microwave up, perhaps
MIT should maintain its own internet primary and remove all the
Symbolics namespaces until they get a more robust link going.

I find myself unable to disk save any bands because I can't find a time
when the entire namespace is consistant!

I once heard that Goldy was offered for use as a 3600 primary, but that
certain factions in Tech sq didn't want that because the path from Tech
sq to bldg 36 wasn't considered reliable.  Since LM15 is proving wholely
unreliable (unsupported software not being the least of its problems),
is the option of appointing Goldy as MIT primary still available?
31-Oct-84 17:45:07-EST,3748;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 31 Oct 84 17:43-EST
Date: Wednesday, 31 October 1984, 17:37-EST
From:  <MHS at MIT-HTVAX>
Subject: Wrong chaos address in network database?
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 Release 5.2, on Lisp Machine Bing Crosby:

>>Error: HTVAX (at Chaos address 3025) did not respond to a FILE 1 request.
While in the function CHAOS:CHECK-CONNECTION-STATE  CHAOS:WAIT-FOR-CONNECT  CHAOS:CONNECT

	It looks like the address for HTVAX is wrong.  Here's what host on OZ says:

[PHOTO:  Recording initiated  Wed 31-Oct-84 5:34pm]

 MIT TOPS-20 Command Processor 5(712117)-2
@host chaos mit-htvax

  Official Host Name: MIT-HTVAX
  Host Nicknames:
    HT
    HTUNIX
    HTVAX
    MIT-HT
  Host Address(es):
    Network BBN-CRONUS, address: 15013026
       (Net: 200, Host: 15013026)
    Chaosnet address: subnet 26, host 26
       (Net: 7, Host: 13026)
  VAX-11/780 running UNIX

@pop

[PHOTO:  Recording terminated  Wed 31-Oct-84 5:35pm]

	Who is supposed to keep the network database up-to-date?  I
assume I shouldn't just change the address with
(tv:edit-namespace-object).

	Also, why are many normal zmacs commands (e.g. C-X C-F)
unavailable in this mailing environment?  I put that photo recording in
another buffer and then cranked up this bug report.  I couldn't switch
buffers to go get it.  I had to M-X Insert File.

CHAOS:CHECK-CONNECTION-STATE:  (P.C. = 117)
   Arg 0 (CONN): #<CHAOS Connection for FILE 1 to HTVAX 37156620>
   Arg 1 (EXPECTED-STATE): CHAOS:OPEN-STATE
   Local 2 (STATE): CHAOS:RFC-SENT-STATE

CHAOS:WAIT-FOR-CONNECT:  (P.C. = 13)
   Arg 0 (CONN): #<CHAOS Connection for FILE 1 to HTVAX 37156620>
   Arg 1 (EXPECTED-STATE): CHAOS:OPEN-STATE
   Arg 2 (TIMEOUT): 2260

CHAOS:CONNECT:  (P.C. = 250)
   Arg 0 (HOST): #<UNIX-HOST HTVAX 37116733>
   Arg 1 (CONTACT-NAME): "FILE 1"
   Arg 2 (WINDOW-SIZE): 5
   --Defaulted args:--
   Arg 3 (TIMEOUT): 1130

(:METHOD FS:HOST-UNIT :VALIDATE-CONTROL-CONNECTION):  (P.C. = 71)
   Arg 0 (SELF): #<HOST-UNIT 4262322>
   Arg 1 (SELF-MAPPING-TABLE): FS:HOST-UNIT
   Arg 2 (OPERATION): :VALIDATE-CONTROL-CONNECTION
   --Defaulted args:--
   Arg 3 (NO-ERROR-P): NIL

(:METHOD FS:QFILE-ACCESS-PATH :NEW-HOST-UNIT):  (P.C. = 25)
   Arg 0 (SELF): #<NORMAL-QFILE-ACCESS-PATH HTVAX using QFILE 4262216>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:QFILE-ACCESS-PATH -- 4. IV's, 0. FL's 35266764>
   Arg 2 (OPERATION): :NEW-HOST-UNIT

(:METHOD FS:QFILE-ACCESS-PATH :GET-HOST-UNIT):  (P.C. = 6)
   Arg 0 (SELF): #<NORMAL-QFILE-ACCESS-PATH HTVAX using QFILE 4262216>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:QFILE-ACCESS-PATH -- 4. IV's, 0. FL's 35266764>
   Arg 2 (OPERATION): :GET-HOST-UNIT

(:METHOD FS:QFILE-ACCESS-PATH :UPDATE-HOMEDIR):  (P.C. = 4)
   Arg 0 (SELF): #<NORMAL-QFILE-ACCESS-PATH HTVAX using QFILE 4262216>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:QFILE-ACCESS-PATH -- 4. IV's, 0. FL's 35266764>
   Arg 2 (OPERATION): :UPDATE-HOMEDIR
   Arg 3 (IGNORE): #<UNIX-PATHNAME "HTVAX: ">

(:METHOD FS:USER-FILE-ACCESS-PATH :HOMEDIR):  (P.C. = 27)
   Arg 0 (SELF): #<NORMAL-QFILE-ACCESS-PATH HTVAX using QFILE 4262216>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:USER-FILE-ACCESS-PATH -- 4. IV's, 0. FL's 41431303>
   Arg 2 (OPERATION): :HOMEDIR
   Arg 3 (PATHNAME): #<UNIX-PATHNAME "HTVAX: ">
   Arg 4 (CARE-A-LOT-P): T

Rest of stack:
(:METHOD FS:ACTIVE-PATHNAME-MIXIN :HOMEDIR):  (P.C. = 12)
FS:USER-HOMEDIR:  (P.C. = 22)
LOGIN:  (P.C. = 343)
SI:*EVAL:  (P.C. = 370)
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 200)
SI:LISP-COMMAND-LOOP:  (P.C. = 115)
SI:LISP-TOP-LEVEL1:  (P.C. = 22)
SI:LISP-TOP-LEVEL:  (P.C. = 7)
31-Oct-84 21:31:05-EST,1643;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 31 Oct 84 21:30-EST
Date: Wednesday, 31 October 1984, 21:08-EST
From:  <GAVAN at MIT-PYGMALION>
Subject: Where's my comtab?
To: SWM at SCRC-QUABBIN, GAVAN at MIT-OZ, BUG-LISPM at MIT-OZ
In-reply-to: <841030164853.0.SWM@THAMES.SCRC.Symbolics>

    Date: Tuesday, 30 October 1984, 16:48-EST
    From: Scott McKay <SWM at SCRC-QUABBIN>

	Date: Monday, 26 July 1976, 02:38-EDT
	From: Gavan Duffy <GAVAN at MIT-OZ>

	Why do I have to do this?

	(DEFUN *RELATUS-COMTAB* ()
	  "Returns the RELATUS Mode comtab."
	  (SEND (MODE-OF-FLAVOR 'RELATUS-MODE) :EVAL-INSIDE-YOURSELF '*MODE-COMTAB*))

	Why isn't a special variable or, better, a defun created which
	returns the comtab when the defmajor is defined?

    I guess nobody ever realized it was a useful thing to do.  I see nothing
    wrong with your function.

It's useful because I have some macros which automatically define some meta-x
commands which I want to put on that comtab.  Unfortunately, these definitions
must happen before the defmajor is defined.  So I cache them on a special var
and later post them to the Relatus comtab.  Fine.  with this function I can
refer to the comtab and include these commands in it later.  Unfortunately, I
can't patch the system with this definition because I must already be in Zwei
(for some reason) when it loads.  Since I'm likely to be anywhere when I load
patches, this just won't do.  It just throws you into the debugger
(*MODE-COMTAB* being unbound).

Solution: When DEFMAJOR is evaluated, automatically define a function for
retrieving the associated comtab.
 1-Nov-84 01:32:12-EST,3745;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 1 Nov 84 01:31-EST
Received: from SCRC-EUPHRATES by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 97928; Wed 31-Oct-84 23:48:01-EST
Date: Wednesday, 31 October 1984, 23:50-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: Comment lies
To: David C. Plummer <DCP at SCRC-TENEX>,
    Scott Cyphers <sr.ehpyc at MIT-SPEECH>
cc: BUG-LISPM at MIT-OZ
In-Reply-To: <841027190132.1.DCP@NEPONSET.SCRC.Symbolics>
Message-ID: <841031235011.1.MOON@EUPHRATES.SCRC.Symbolics>

    Date: Saturday, 27 October 1984, 19:01-EDT
    From: David C. Plummer <DCP at SCRC-TENEX>

	Date: Saturday, 27 October 1984, 13:38-EDT
	From: Scott Cyphers <sr.ehpyc at MIT-SPEECH>

	In Symbolics 3600 Release 5.2, ZOO 3.3, Spire-Macros 3.8, Compute 2.5,
	Attribute 3.3, Audio 2.4, Speech-Attributes 2.3, Display 3.7,
	Speech-Layouts 4.7, Versatec 3.0, Prtout 2.0, Spire 14.0, SpireX 11.1,
	ZOO-SPIRE 1.0, FEP 22, on Lisp Machine Smokey:

	;;; Find the current lexical value of SELF
	(DEFUN %FIND-SELF-ON-STACK ()
	  (DO ((FP (%STACK-FRAME-POINTER) (FRAME-PREVIOUS-FRAME FP))) (NIL)
	    (AND (NOT (ZEROP (FRAME-INSTANCE-CALLED FP))) (RETURN (CAR FP)))	;Return first argument
	    (AND (NOT (ZEROP (FRAME-BOTTOM-BIT FP))) (RETURN NIL))))

	This should say "Find the current dynamic value of SELF".  

No, that doesn't describe accurately what it does either.  It doesn't look
at the dynamic variable SELF.  It looks at the lexical variable SELF, in
some lexical environment chosen dynamically -- in fact the lexical environment
of the dynamically innermost method.  What it should have done in your case,
and does not do, is to look at the lexical variable SELF in the environment
of its caller.

								   It's used by
	si:get-flavor-mapping-table-and-self which usually works since the dynamic
	self and the lexical self are usually the same thing, but breaks if you try
	to do something like this:  (of course this will all get fixed by lexical
	scoping, so all I'm reporting is the incorrect comment).

The need for this function won't be fixed by lexical scoping, since there will
still be defun-methods.  What will be (has been) fixed is the compiler's
cloaking of internal lambdas in the clothes of defun-methods, which was always a
terrible travesty.

	(defflavor test-flavor
		(foo bar)
		()
	  :initable-instance-variables
	  :gettable-instance-variables)

	(defmethod (test-flavor :frob)
		   ()
	  (send foo :map-hash #'(lambda (key value)
				  key
				  (+ value bar))))

	(setq a (make-instance 'si:eq-hash-table))
	(send a :put-hash 'abc 1)
	(setq b (make-instance 'test-flavor :foo a :bar 3))
	(send b :frob)

    I reported this internally about a month ago, and indeed, what I /think/
    you are complaining about (you didn't include a backtrace, but it should
    have tried to find SELF as a TEST-FLAVOR instance but instead found SELF
    as an EQ-HASH-TABLE instance) is indeed fixed by lexical scoping in
    Releae 6.

    Note that the above function is a kludge to make up for people
    funcalling DEFUN-METHODS.  The case you tripped over creates an internal
    defun-method in Release 5 to make up for the lack of lexical scoping.
    There are other examples where it does even more wrong things.  Consider

    (defflavor test-flavor (a) ()
      :initable-instance-variables
      :gettable-instance-variables)

    (defmethod (test-flavor :a-funarg) ()
      #'(lambda () a))

    (defmethod (test-flavor :funcall) (fun) (funcall fun))

    (send (make-instance 'test-flavor :a 1) :funcall
	  (send (make-instance 'test-flavor :a 2) :a-funarg))

    With lexical scoping, I get 2.  You probably get 1.
 1-Nov-84 10:38:09-EST,3612;000000000000
Received: from MIT-SID by MIT-OZ via Chaosnet; 1 Nov 84 10:31-EST
Date: Thursday, 1 November 1984, 10:32-EST
From: Ken Haase <KWH at MIT-OZ>
Subject: 3600 to 3640 incompatability.
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 Release 5.2, ARLO 25.28, ARLOX 5.29, FEP 22, on CHAOS|13061:

This happened on a Terminal-1-F.  I suspect that this
world load came from a 3600 (not a 3640 or 3670) which
had a differently sized screen.  And whenever the magic
sheet-resizing happend, this finger display was left out.

>>Error: Attempt to expose #<TRUNCATING-POP-UP-TEXT-WINDOW-WITH-RESET Truncating Pop Up Text Window With Reset 1 34715702 deexposed> outside of its superior
While in the function (:METHOD TV:SHEET :WHOPPER :EXPOSE)  (:METHOD TV:WINDOW :COMBINED :EXPOSE)  (:METHOD TV:SELECT-MIXIN :BEFORE :SELECT)

(:METHOD TV:SHEET :WHOPPER :EXPOSE):  (P.C. = 104)
   Arg 0 (SELF): #<TRUNCATING-POP-UP-TEXT-WINDOW-WITH-RESET Truncating Pop Up Text Window With Reset 1 34715702 deexposed>
   Arg 1 (SELF-MAPPING-TABLE): TV:SHEET
   Arg 2 (.WHOPPER-CONTINUATION.): #<DTP-COMPILED-FUNCTION (:INTERNAL (:METHOD TV:WINDOW :COMBINED :EXPOSE) 0.) 44632055>
   Arg 3 (.OLD-SELF-MAPPING-TABLE.): #<Map to flavor TV:WINDOW -- 0. IV's, 11. FL's 42147213>
   Arg 4 (.OPERATION.): :EXPOSE
   Arg 5 (TURN-ON-BLINKERS): T
   --Defaulted args:--
   Arg 6 (BITS-ACTION): NIL
   Arg 7 (X): 0.
   Arg 8 (Y): 0.
   Local 9 (VAL1): NIL
   Local 10 (VAL2): NIL
   Local 11 (VAL3): NIL
   Local 12 (.QUEUE-LEFT.): T
   Local 13: SYS:UNWIND-PROTECT-TAG
   Local 14: #<DTP-ODD-PC 25207704>
   Local 15: #<DTP-LOCATIVE 36742024>
   Local 16: #<DTP-LOCATIVE 26600141>
   Local 17: #<DTP-LOCATIVE 36742024>
   Local 18: SYS:UNWIND-PROTECT-TAG
   Local 19: #<DTP-ODD-PC 25207720>
   Local 20: #<DTP-LOCATIVE 36742024>
   Local 21: #<DTP-LOCATIVE 26600227>
   Local 22: SYS:UNWIND-PROTECT-TAG
   Local 23: #<DTP-ODD-PC 25207722>
   Local 24: #<DTP-LOCATIVE 36742030>
   Local 25: #<DTP-LOCATIVE 26600234>
   Local 26 (DONE): NIL
   Local 27 (ERROR): (NIL "Attempt to expose ~S outside of its superior" #<TRUNCATING-POP-UP-TEXT-WINDOW-WITH-RESET Truncating Pop Up Text Window With Reset 1 34715702 deexposed>)

(:METHOD TV:WINDOW :COMBINED :EXPOSE):  (P.C. = 12)
   Arg 0 (SELF): #<TRUNCATING-POP-UP-TEXT-WINDOW-WITH-RESET Truncating Pop Up Text Window With Reset 1 34715702 deexposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:WINDOW -- 0. IV's, 11. FL's 42147213>
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

(:METHOD TV:SELECT-MIXIN :BEFORE :SELECT):  (P.C. = 13)
   Arg 0 (SELF): #<TRUNCATING-POP-UP-TEXT-WINDOW-WITH-RESET Truncating Pop Up Text Window With Reset 1 34715702 deexposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:SELECT-MIXIN -- 1. IV's, 0. FL's 42147232>
   Arg 2 (OPERATION): :SELECT
   --Defaulted args:--
   Arg 3 (SAVE-SELECTED): T

(:METHOD TV:WINDOW :COMBINED :SELECT):  (P.C. = 37)
   Arg 0 (SELF): #<TRUNCATING-POP-UP-TEXT-WINDOW-WITH-RESET Truncating Pop Up Text Window With Reset 1 34715702 deexposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:WINDOW -- 0. IV's, 11. FL's 42147213>
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

TV:KBD-FINGER:  (P.C. = 157)
   Arg 0 (ARG): 1.

(:INTERNAL TV:KBD-ESC 1.):  (P.C. = 4)
   Arg 0 (FCN): TV:KBD-FINGER
   Arg 1 (ARG): 1.

SI:PROCESS-RUN-FUNCTION-INTERNAL:  (P.C. = 51)
   Arg 0 (RESTART-ON-RESET): NIL
   Arg 1 (FUNCTION): #<DTP-COMPILED-FUNCTION (:INTERNAL TV:KBD-ESC 1.) 25504375>
   Rest arg (ARGS): (TV:KBD-FINGER 1.)

SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
   Arg 0 (IGNORE): NIL
 1-Nov-84 18:29:44-EST,2881;000000000000
Received: from MIT-APIARY-4 by MIT-OZ via Chaosnet; 1 Nov 84 18:29-EST
Date: Thursday, 1 November 1984, 18:24-EST
From:  <SAZ at MIT-OZ>
Subject: Can't expunge
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 Release 5.2, FEP 18, on Lisp Machine Apiary-4:

Can't expunge my mail file!!!!
Dropping the extra argument just flashes the screen and prints
the message "Attempt to expunge Inbox <SAZ>mail.txt"

>>Trap: The function (:METHOD ZWEI:INBOX-BUFFER :EXPUNGE) was called with too many arguments.
While in the function (:METHOD ZWEI:INBOX-BUFFER :EXPUNGE)  (:METHOD ZWEI:TENEX-INBOX-BUFFER :COMBINED :EXPUNGE)  ZWEI:EXPUNGE-SEQUENCE

(:METHOD ZWEI:INBOX-BUFFER :EXPUNGE):  (P.C. = 0)
   Arg 0 (SELF): #<TENEX-INBOX-BUFFER "OZ:PS:<SAZ>MAIL.TXT.1" 6225777>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:INBOX-BUFFER -- 12. IV's, 3. FL's 6400037>
   Arg 2 (OPERATION): :EXPUNGE
   Extraneous Rest Arg: (T)

(:METHOD ZWEI:TENEX-INBOX-BUFFER :COMBINED :EXPUNGE):  (P.C. = 51)
   Arg 0 (SELF): #<TENEX-INBOX-BUFFER "OZ:PS:<SAZ>MAIL.TXT.1" 6225777>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:TENEX-INBOX-BUFFER -- 1. IV's, 5. FL's 6400054>
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

ZWEI:EXPUNGE-SEQUENCE:  (P.C. = 6)
   Arg 0 (SEQUENCE): #<TENEX-INBOX-BUFFER "OZ:PS:<SAZ>MAIL.TXT.1" 6225777>
   --Defaulted args:--
   Arg 1 (DELETED-MSGS): T

ZWEI:COM-ZMAIL-EXPUNGE:  (P.C. = 21)

ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
   Arg 0 (COMMAND): ZWEI:COM-ZMAIL-EXPUNGE
   Arg 1 (CHAR): 145
   --Defaulted args:--
   Arg 2 (PREFIX-CHAR): NIL
   Arg 3 (HOOK-LIST): NIL

ZWEI:ZMAIL-COMMAND-EXECUTE:  (P.C. = 6)
   Arg 0 (*CURRENT-COMMAND*-initialization): ZWEI:COM-ZMAIL-EXPUNGE

(:METHOD ZWEI:ZMAIL-FRAME :PROCESS-COMMAND-CHAR):  (P.C. = 7)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 3101030 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-FRAME -- 68. IV's, 20. FL's 61664310>
   Arg 2 (OPERATION): :PROCESS-COMMAND-CHAR
   Arg 3 (CH): 145

(:INTERNAL (:INTERNAL (:METHOD ZWEI:ZMAIL-FRAME :COMBINED :PROCESS-COMMAND-CHAR) 0) 0):  (P.C. = 7)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 3101030 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-FRAME -- 68. IV's, 20. FL's 61664310>
   Rest arg (.DAEMON-CALLER-ARGS.): (:PROCESS-COMMAND-CHAR 145)

Rest of stack:
(:METHOD ZWEI:ZMAIL-COMMAND-LOOP-MIXIN :WHOPPER :PROCESS-COMMAND-CHAR):  (P.C. = 21)
(:INTERNAL (:METHOD ZWEI:ZMAIL-FRAME :COMBINED :PROCESS-COMMAND-CHAR) 0):  (P.C. = 12)
(:METHOD ZWEI:ZMAIL-FRAME :WHOPPER :PROCESS-COMMAND-CHAR):  (P.C. = 21)
(:METHOD ZWEI:ZMAIL-FRAME :COMBINED :PROCESS-COMMAND-CHAR):  (P.C. = 11)
(:METHOD ZWEI:ZMAIL-FRAME :COMMAND-LOOP):  (P.C. = 146)
(:METHOD ZWEI:ZMAIL-FRAME :COMBINED :COMMAND-LOOP):  (P.C. = 47)
ZWEI:ZMAIL-PROCESS-TOP-LEVEL:  (P.C. = 52)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
 1-Nov-84 18:34:51-EST,3842;000000000000
Received: from MIT-APIARY-4 by MIT-OZ via Chaosnet; 1 Nov 84 18:34-EST
Date: Thursday, 1 November 1984, 18:29-EST
From:  <SAZ at MIT-OZ>
Subject: OY VEY!!!
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 Release 5.2, FEP 18, on Lisp Machine Apiary-4:

Now I get this error when I hit help at the debugger prompt
which is asking me to drop an extraneous argument!  Let's get
with it...And how do I expunge from ZMAIL?

>>Trap: The function DBG:TOO-MANY-ARGS-FQUERY-HELP is undefined.
While in the function DBG:TOO-MANY-ARGS-FQUERY-HELP  (:INTERNAL FORMAT:TYI-FQUERY-FUNCTION 0)  FORMAT:TYI-FQUERY-FUNCTION

DBG:TOO-MANY-ARGS-FQUERY-HELP:
   Arg 0: #:TERMINAL-IO-SYN-STREAM
   Arg 1: (((T "Yes.") 131 124 40 231) ((NIL "No.") 116 207 232))
   Arg 2: #<DTP-COMPILED-FUNCTION FORMAT:TYI-FQUERY-FUNCTION 24607653>

(:INTERNAL FORMAT:TYI-FQUERY-FUNCTION 0):  (P.C. = 24)
   Arg 0 (**DEFSELECT-OP**): :READ
   Arg 1 (STREAM): #:TERMINAL-IO-SYN-STREAM
   Arg 2 (IGNORE): ((:PROMPT "Drop extra 1 argument? (Y or N) "))

FORMAT:TYI-FQUERY-FUNCTION:  (P.C. = 12)
   Arg 0 (OPERATION): :READ
   Rest arg (SELECT-METHOD-ARGS): (#:TERMINAL-IO-SYN-STREAM ((:PROMPT "Drop extra 1 argument? (Y or N) ")))

FQUERY:  (P.C. = 412)
   Arg 0 (OPTIONS): (:CHOICES (((T "Yes.") 131 124 40 231) ((NIL "No.") 116 207 232)) :HELP-FUNCTION DBG:TOO-MANY-ARGS-FQUERY-HELP)
   Arg 1 (FQUERY-FORMAT-STRING-initialization): "Drop extra ~D argument~:P? "
   Rest arg (FQUERY-FORMAT-ARGS-initialization): (1)

(:METHOD SYS:TOO-MANY-ARGUMENTS :CASE :PROCEED :FEWER-ARGUMENTS):  (P.C. = 61)
   Arg 0 (SELF): #<TOO-MANY-ARGUMENTS-TRAP 10471133>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SYS:TOO-MANY-ARGUMENTS -- 3. IV's, 2. FL's 41210170>
   Arg 2 (OPERATION): :FEWER-ARGUMENTS
   --Defaulted args:--
   Arg 3 (NEW-NARGS): NIL

(:METHOD DBG:TOO-MANY-ARGUMENTS-TRAP :COMBINED :PROCEED):  (P.C. = 46)
   Arg 0 (SELF): #<TOO-MANY-ARGUMENTS-TRAP 10471133>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor DBG:TOO-MANY-ARGUMENTS-TRAP -- 2. IV's, 4. FL's 41210200>
   Rest arg (.DAEMON-CALLER-ARGS.): (:PROCEED :FEWER-ARGUMENTS)

APPLY:  (P.C. = 4)
   Arg 0 (FUNCTION): #<TOO-MANY-ARGUMENTS-TRAP 10471133>
   Arg 1 (ARGS): (:PROCEED :FEWER-ARGUMENTS)

SI:*EVAL:  (P.C. = 370)
   Arg 0 (FORM): (APPLY (QUOTE #<TOO-MANY-ARGUMENTS-TRAP 10471133>) (QUOTE (:PROCEED :FEWER-ARGUMENTS)))

Rest of stack:
DBG:EVAL-IN-ERROR-ENVIRONMENT:  (P.C. = 343)
DBG:EXECUTE-PROCEED-COMMAND:  (P.C. = 53)
DBG:COMMAND-LOOP:  (P.C. = 426)
DBG:DEBUGGER-TOP-LEVEL:  (P.C. = 517)
DBG:ENTER-DEBUGGER:  (P.C. = 16)
DBG:DEBUGGER-HANDLER-HANDLE-CONDITION:  (P.C. = 7)
DBG:DEBUGGER-HANDLER:  (P.C. = 12)
(:METHOD CONDITION :SIGNAL):  (P.C. = 114)
(:METHOD CONDITION :COMBINED :SIGNAL):  (P.C. = 21)
SIGNAL:  (P.C. = 10)
DBG:SIGNAL-TRAP:  (P.C. = 3)
SYS:MICROCODE-ERROR-HANDLER:  (P.C. = 101)
(:METHOD ZWEI:INBOX-BUFFER :EXPUNGE):  (P.C. = 0)
(:METHOD ZWEI:TENEX-INBOX-BUFFER :COMBINED :EXPUNGE):  (P.C. = 51)
ZWEI:EXPUNGE-SEQUENCE:  (P.C. = 6)
ZWEI:COM-ZMAIL-EXPUNGE:  (P.C. = 21)
ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
ZWEI:ZMAIL-COMMAND-EXECUTE:  (P.C. = 6)
(:METHOD ZWEI:ZMAIL-FRAME :PROCESS-COMMAND-CHAR):  (P.C. = 7)
(:INTERNAL (:INTERNAL (:METHOD ZWEI:ZMAIL-FRAME :COMBINED :PROCESS-COMMAND-CHAR) 0) 0):  (P.C. = 7)
(:METHOD ZWEI:ZMAIL-COMMAND-LOOP-MIXIN :WHOPPER :PROCESS-COMMAND-CHAR):  (P.C. = 21)
(:INTERNAL (:METHOD ZWEI:ZMAIL-FRAME :COMBINED :PROCESS-COMMAND-CHAR) 0):  (P.C. = 12)
(:METHOD ZWEI:ZMAIL-FRAME :WHOPPER :PROCESS-COMMAND-CHAR):  (P.C. = 21)
(:METHOD ZWEI:ZMAIL-FRAME :COMBINED :PROCESS-COMMAND-CHAR):  (P.C. = 11)
(:METHOD ZWEI:ZMAIL-FRAME :COMMAND-LOOP):  (P.C. = 146)
(:METHOD ZWEI:ZMAIL-FRAME :COMBINED :COMMAND-LOOP):  (P.C. = 47)
ZWEI:ZMAIL-PROCESS-TOP-LEVEL:  (P.C. = 52)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
 2-Nov-84 12:45:46-EST,1635;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 2 Nov 84 12:42-EST
Date: Friday, 2 November 1984, 12:42-EST
From: David Chapman <Zvona at MIT-OZ>
Subject: interesting frames
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 Release 5.2, FEP 22, on Lisp Machine Duane Allman:

I've written an evaluator, and want to make the evaluator internals be
uninteresting to the debugger's control-N and control-P commands.  I
pushed the evaluator internal functions onto
dbg:*uninteresting-functions*.  That doesn't work.  The culprit in the
case of control-N (control-P is implemented differently, and I didn't
look at it) is the following function:

;;; Given a frame, find out if it is one of the frames of a call to an interpreted function.
;;; If so, return the outermost frame of this call to the interpreted function.
;;; If not, return the original frame.
(DEFUN FRAME-OUT-TO-INTERESTING-ACTIVE-FRAME (FRAME)
  (COND ((NULL FRAME) NIL)
	((FRAME-INTERESTING-P FRAME) FRAME)
	(T
	 (DO ((NEW-FRAME FRAME (FRAME-PREVIOUS-ACTIVE-FRAME NEW-FRAME)))
	     (NIL)
	   (COND ((NULL NEW-FRAME)
		  (RETURN FRAME))
		 ((NOT (FRAME-INTERESTING-P NEW-FRAME)))	;Keep looping
		 ((atom (frame-function new-frame))
		  (return frame))
		 (T (RETURN NEW-FRAME)))))))

The code in lower case means that frames are not skipped by control-N
unless the next interesting frame has a non-atomic function.  I don't
see why this is the right thing.  It can't work properly for common lisp
closures, for example.  It certainly means that I can't win.  What is
the ATOM test really testing?  Shouldn't it test that, instead of
atomness?
 2-Nov-84 16:27:19-EST,488;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 2 Nov 84 16:26-EST
Date: Friday, 2 November 1984, 16:26-EST
From: David Chapman <Zvona at MIT-OZ>
Subject: defstruct type-checking
To: bug-lispm at MIT-OZ
Cc: alan at MIT-OZ

I find that one of the most common types of simple bugs I make is type
errors in applying DEFSTRUCT accessors.  This is completely preventable.
DEFSTRUCT ought to have an option (requiring :named) to make the
accessors generated type-check their argument.
 2-Nov-84 19:12:57-EST,2877;000000000000
Received: from SCRC-RIVERSIDE by MIT-OZ via Chaosnet; 2 Nov 84 19:12-EST
Received: from MIT-MC by SCRC-RIVERSIDE via CHAOS with CHAOS-MAIL id 25676; Fri 2-Nov-84 19:14:01-EST
Date: Friday, 2 November 1984, 18:43-EST
From:  <Soley at MIT-MC>
Subject: 'nother TCP problem
To: BUG-LISPM at MIT-OZ

In Release 5.1, Experimental MIT 1.5, Experimental IP-TCP 12.7, FEP 22,
Tanglewood Version V, on Project Tanglewood Cherry (3600):

Fooey!  Newt is on the same --CABLE-- as I am (subnet 32), but I can't
get the Terminal program to get to it.  Note that:

(send (si:parse-host "NEWT") :get :service)  =>
((:LOGIN :TCP :SMTP) (:SEND :TCP :SMTP) (:MAIL-TO-USER :TCP :SMTP) (:FILE :TCP :TCP-FTP))

And yet.........

>>Error: NEWTOWNE-VARIETY does not support LOGIN in a reachable way.
While in the function NET:INVOKE-SERVICE-ON-HOST  TELNET:GET-LOGIN-CONNECTION  (:METHOD TELNET:NVT-WINDOW :CONNECT)

NET:INVOKE-SERVICE-ON-HOST:  (P.C. = 62)
   Arg 0 (SERVICE): :LOGIN
   Arg 1 (HOST): #<UNIX-HOST NEWTOWNE-VARIETY 26053562>
   Rest arg (SERVICE-ARGS): (:TERMINAL-SIMULATOR NIL)
   Local 3: ("Retry invoking ~A on ~A." :LOGIN #<UNIX-HOST NEWTOWNE-VARIETY 26053562>)
   Local 4: NIL
   Local 5: NIL
   Local 6 (THESE-ARGS): (:TERMINAL-SIMULATOR NIL)
   Local 7: "Retry invoking ~A on ~A."
   Local 8: :LOGIN
   Local 9: #<UNIX-HOST NEWTOWNE-VARIETY 26053562>
   Local 10: #<ERROR-RESTART-HANDLER 43262765>
   Local 11: #<DTP-LOCATIVE 1207705>
   Local 12: #<DTP-LOCATIVE 10300134>
   Local 13: (#<ERROR-RESTART-HANDLER 43262765> #<DTP-LOCATIVE 1207705> #<DTP-LOCATIVE 10300134>)
   Local 14: #<DTP-CLOSURE 10300143>
   Local 15: (#<DTP-CLOSURE 10300051> #<DTP-CLOSURE 10300016>)
   Local 16: #<DTP-LOCATIVE 10300147>
   Local 17: #<DTP-EVEN-PC 46364352>
   Local 18: #<DTP-LOCATIVE 6173736>
   Local 19: #<DTP-LOCATIVE 10300057>
   Local 20: NETI:FIND-PATH-RETRY
   Local 21: #<DTP-EVEN-PC 46364351>
   Local 22: #<DTP-LOCATIVE 6173736>
   Local 23: #<DTP-LOCATIVE 10300151>
   Local 24 (SERVICE-ACCESS-PATHS): NIL
   Local 25 (ERRORS): NIL

TELNET:GET-LOGIN-CONNECTION:  (P.C. = 37)
   Arg 0 (HOST): #<UNIX-HOST NEWTOWNE-VARIETY 26053562>
   Rest arg: NIL

(:METHOD TELNET:NVT-WINDOW :CONNECT):  (P.C. = 6)
   Arg 0 (SELF): #<NVT-WINDOW Terminal 1 3300000 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TELNET:NVT-WINDOW -- 18. IV's, 10. FL's 45021664>
   Arg 2 (OPERATION): :CONNECT
   Arg 3 (HOST): #<UNIX-HOST NEWTOWNE-VARIETY 26053562>
   Rest arg (OPTIONS): NIL

(:METHOD TELNET:NVT-WINDOW :TYPEIN-TOP-LEVEL):  (P.C. = 112)
   Arg 0 (SELF): #<NVT-WINDOW Terminal 1 3300000 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TELNET:NVT-WINDOW -- 18. IV's, 10. FL's 45021664>
   Arg 2 (OPERATION): :TYPEIN-TOP-LEVEL

SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
   --Defaulted args:--
   Arg 0 (IGNORE): NIL
 2-Nov-84 23:35:58-EST,768;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 2 Nov 84 23:35-EST
Date: 2 November 1984 23:38-EST
From: Alan Bawden <ALAN @ MIT-MC>
Subject:  defstruct type-checking
To: Zvona @ MIT-OZ
cc: bug-lispm @ MIT-OZ
In-reply-to: Msg of 2 Nov 1984 16:26-EST from David Chapman <Zvona at MIT-OZ>

    Date: Friday, 2 November 1984, 16:26-EST
    From: David Chapman <Zvona at MIT-OZ>
    I find that one of the most common types of simple bugs I make is type
    errors in applying DEFSTRUCT accessors.  This is completely preventable.
    DEFSTRUCT ought to have an option (requiring :named) to make the
    accessors generated type-check their argument.

You can use DEFSTRUCT-DEFINE-TYPE to define a defstruct type that does this
in only a few lines of code.
 3-Nov-84 10:40:12-EST,1144;000000000000
Received: from SCRC-RIVERSIDE by MIT-OZ via Chaosnet; 3 Nov 84 10:39-EST
Received: from SCRC-NEPONSET by SCRC-RIVERSIDE via CHAOS with CHAOS-MAIL id 25741; Sat 3-Nov-84 10:41:49-EST
Date: Saturday, 3 November 1984, 10:41-EST
From: David C. Plummer in disguise <DCP at SCRC-TENEX>
Subject: 'nother TCP problem
To: Soley at MIT-MC, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 2 Nov 84 18:43-EST from Soley at MIT-MC
Message-ID: <841103104158.1.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Friday, 2 November 1984, 18:43-EST
    From:  <Soley at MIT-MC>

    In Release 5.1, Experimental MIT 1.5, Experimental IP-TCP 12.7, FEP 22,
    Tanglewood Version V, on Project Tanglewood Cherry (3600):

    Fooey!  Newt is on the same --CABLE-- as I am (subnet 32), but I can't
    get the Terminal program to get to it.  Note that:

    (send (si:parse-host "NEWT") :get :service)  =>
    ((:LOGIN :TCP :SMTP) (:SEND :TCP :SMTP) (:MAIL-TO-USER :TCP :SMTP) (:FILE :TCP :TCP-FTP))

    And yet.........

Don't you think TELNET is a better login protocol than SMTP?  I don't
think anybody ever added the POLY command to SMTP...
 3-Nov-84 11:44:49-EST,1323;000000000000
Received: from SCRC-RIVERSIDE by MIT-OZ via Chaosnet; 3 Nov 84 11:44-EST
Received: from SCRC-NEPONSET by SCRC-RIVERSIDE via CHAOS with CHAOS-MAIL id 25749; Sat 3-Nov-84 11:11:50-EST
Date: Saturday, 3 November 1984, 11:11-EST
From: David C. Plummer in disguise <DCP at SCRC-TENEX>
Subject: defstruct type-checking
To: Alan Bawden <ALAN at MIT-MC>, Zvona at MIT-OZ
cc: bug-lispm at MIT-OZ
In-Reply-To: The message of 2 Nov 84 23:38-EST from Alan Bawden <ALAN at MIT-MC>
Message-ID: <841103111158.6.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: 2 November 1984 23:38-EST
    From: Alan Bawden <ALAN @ MIT-MC>

	Date: Friday, 2 November 1984, 16:26-EST
	From: David Chapman <Zvona at MIT-OZ>
	I find that one of the most common types of simple bugs I make is type
	errors in applying DEFSTRUCT accessors.  This is completely preventable.
	DEFSTRUCT ought to have an option (requiring :named) to make the
	accessors generated type-check their argument.

Note that this will obviously slow down your code, since AREF will turn
into (progn <type-check> (aref ... ...)).  I guess
	(setf (accessor struct) val)
turns into
	(progn <type-check>
	       (setf (internal-accessor struct) val))

    You can use DEFSTRUCT-DEFINE-TYPE to define a defstruct type that does this
    in only a few lines of code.
 3-Nov-84 13:52:50-EST,3689;000000000000
Received: from MIT-LISPM-9 by MIT-OZ via Chaosnet; 3 Nov 84 13:52-EST
Date: Saturday, 3 November 1984, 13:55-EST
From: Robert P. Krajewski <RpK at MIT-OZ>
Subject: Inspector bug
To: BUG-LISPM at MIT-OZ

In Don't-dump-a-band! Inconsistent (unreleased patches loaded) System 99.10,
CADR 4.0, Experimental ZMail 54.2, MIT-Specific 23.0, microcode 320,
GC@2, on Lisp Machine Nine:

In the inspecter, inspective a locative inside an interpreter closure
made as follows:

 (defun make-adder (x) #'(lambda (a) (+ a x)))
 (make-adder 3)
 (inspect *)

>>TRAP 8077 (TRANS-TRAP)
The variable X is unbound.
Backtrace from the debugger:

Additional information supplied with call:
 Expecting 6 values

(:METHOD TV:BASIC-INSPECT :OBJECT-LOCATIVE) (P.C. = 25)
  (SELF is #<TV:INSPECT-WINDOW-WITH-TYPEOUT Inspect Window With Typeout 1 2707610 exposed>)

 Arg 0 (.OPERATION.): :OBJECT-LOCATIVE
 Arg 1 (LOC): #<DTP-LOCATIVE 7272106>


TV:INSPECT-SETUP-OBJECT-DISPLAY-LIST (P.C. = 132)

 Arg 0 (OBJECT): #<DTP-LOCATIVE 7272106>
 Arg 1 (WINDOW): #<TV:INSPECT-WINDOW-WITH-TYPEOUT Inspect Window With Typeout 1 2707610 exposed>
 Arg 2 (TOP-ITEM): NIL
 Arg 3 (LABEL): NIL
Local 0 (STR): NIL
Local 1 (.SELECTQ.ITEM.): DTP-LOCATIVE
Local 2 (DISPLAY-LIST): NIL
Local 3 (ARG): NIL
Local 4 (ALT-PRINT-FUN): NIL
Local 5 (FIRST-TOP-ITEM): NIL
Local 6 (OBJ-LABEL): NIL
Local 7 (ITEM-GENERATOR): NIL


(:METHOD TV:INSPECT-HISTORY-WINDOW :INSPECT-OBJECT) (P.C. = 92)
  (SELF is #<TV:INSPECT-HISTORY-WINDOW-WITH-MARGIN-SCROLLING Inspect History Window With Margin Scrolling 1 2710477 exposed>)

 Arg 0 (.OPERATION.): :INSPECT-OBJECT
 Arg 1 (OBJECT): #<DTP-LOCATIVE 7272106>
 Arg 2 (INSPECTOR): #<TV:INSPECT-WINDOW-WITH-TYPEOUT Inspect Window With Typeout 1 2707610 exposed>
 Arg 3 (TOP-ITEM-NO): NIL
 Arg 4 (-LABEL-): NIL
 Arg 5 (DONT-PROPOGATE): T
Local 0 (DISP): (TV:INSPECT-PRINTER NIL (# # # # ...) 0 ...)
Local 1 (I): 1
Local 2: 2
Local 3 (CE): NIL


TV:INSPECT-COMMAND-LOOP (P.C. = 391)

 Arg 0 (FRAME): #<TV:INSPECT-FRAME Inspect Frame 1 2706155 exposed>
Local 0 (USER): #<TV:INTERACTION-PANE Interaction Pane 1 2706524 exposed>
Local 1 (IS): (#<TV:INSPECT-WINDOW-WITH-TYPEOUT Inspect Window With Typeout 1 2707610 exposed> #<TV:INSPECT-WINDOW Inspect Window 1 2711027 exposed> #<TV:INSPECT-WINDOW Inspect Window 2 2710711 exposed>)
Local 2 (HISTORY): #<TV:INSPECT-HISTORY-WINDOW-WITH-MARGIN-SCROLLING Inspect History Window With Margin Scrolling 1 2710477 exposed>
Local 3: 3
Local 4 (I): 0
Local 5 (TYPEOUT-WINDOW): #<TV:TYPEOUT-WINDOW Typeout Window 1 2706614 exposed>
Local 6 (THING): #<DTP-LOCATIVE 7272106>
Local 7 (TOP-ITEM): NIL
Local 8 (ITEMS): #<ART-Q-100 10650244>
Local 9 (IW): #<TV:INSPECT-WINDOW-WITH-TYPEOUT Inspect Window With Typeout 1 2707610 exposed>
Local 10 (IDX): 1
Local 11 (DISP): (TV:INSPECT-PRINTER NIL NIL 0 ...)
Local 12 (NITEMS): 1
Local 13: (8395290 . 65628)
Local 14 (CH): NIL
Local 15 (VALUE): NIL
Local 16 (PUNT-P): NIL
Local 17 (FLAG): NIL
Local 18 (.SELECTQ.ITEM.): NIL
Local 19 (1ST-THING): NIL
Local 20 (2ND-THING): NIL


INSPECT (P.C. = 80)

 Arg 0 (OBJECT): #<CLOSURE (Interpreter) 15661467>
Local 0 (IFRAME): #<TV:INSPECT-FRAME Inspect Frame 1 2706155 exposed>
Local 1 (.CURRENT-WINDOW.): #<TV:LISP-LISTENER Lisp Listener 1 2700000 deexposed>
Local 2 (.QUEUE-LEFT.): NIL
Local 3 (.FLAG.): NIL
Local 4: NIL
Local 5 (E): NIL


Remainder of stack:

SYS:EVAL1 (P.C. = 717)
SI:EVAL-SPECIAL-OK (P.C. = 82)
SI:EVAL-ABORT-TRIVIAL-ERRORS (P.C. = 36)
SI:LISP-TOP-LEVEL1 (P.C. = 274)
SI:LISP-TOP-LEVEL2 (P.C. = 23)
SI:PROCESS-TOP-LEVEL (P.C. = 115)
SI:LISP-TOP-LEVEL (P.C. = 39)
 3-Nov-84 16:23:50-EST,2370;000000000000
Received: from SCRC-YUKON by MIT-OZ via Chaosnet; 3 Nov 84 16:23-EST
Received: from SCRC-ANNISQUAM by SCRC-YUKON via CHAOS with CHAOS-MAIL id 72298; Sat 3-Nov-84 16:25:04-EST
Date: Saturday, 3 November 1984, 16:24-EST
From: Doug Dodds <DODDS at SCRC-TENEX>
Subject: Can't expunge
To: SAZ at MIT-OZ
cc: BUG-LISPM at MIT-OZ
In-Reply-To: The message of 1 Nov 84 18:24-EST from SAZ at MIT-OZ
Message-ID: <841103162407.4.DODDS@ANNISQUAM.SCRC.Symbolics.COM>

    Date: Thursday, 1 November 1984, 18:24-EST
    From:  <SAZ at MIT-OZ>

    In Symbolics 3600 Release 5.2, FEP 18, on Lisp Machine Apiary-4:

    Can't expunge my mail file!!!!
    Dropping the extra argument just flashes the screen and prints
    the message "Attempt to expunge Inbox <SAZ>mail.txt"

    >>Trap: The function (:METHOD ZWEI:INBOX-BUFFER :EXPUNGE) was called with too many arguments.
    While in the function (:METHOD ZWEI:INBOX-BUFFER :EXPUNGE)  (:METHOD ZWEI:TENEX-INBOX-BUFFER :COMBINED :EXPUNGE)  ZWEI:EXPUNGE-SEQUENCE

    (:METHOD ZWEI:INBOX-BUFFER :EXPUNGE):  (P.C. = 0)
       Arg 0 (SELF): #<TENEX-INBOX-BUFFER "OZ:PS:<SAZ>MAIL.TXT.1" 6225777>
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:INBOX-BUFFER -- 12. IV's, 3. FL's 6400037>
       Arg 2 (OPERATION): :EXPUNGE
       Extraneous Rest Arg: (T)

You have gotten into a situation where Zmail thinks your Inbox is a
Sequence.  This is a bug that is under investigation here.  It seems to
happen when you Get Inbox for the first time (mailbox file not loaded).
It loades inbox first, to let you read new mail while the mailbox is
loading in the background.  If you finish the inbox, expunge, and Get
Inbox again before the input of the mailbox is complete, the bug occurs.
(Zmail probably should refuse the Get Inbox in that state, it can get
everything in sync before another inbox is input.)  I think the above
implies a sufficient precaution to avoid triggering the bug -- it's a
pain, but should serve until the next release.

How to get out, if it does happen: use Move to move any undeleted
messages to your real mailbox (which should appear as a separate
sequence in the Select menu), then click right on Save to get a
save-expunge-kill menu on all sequences, and kill the bogus inbox
sequence.  Then select your mailbox and do Get Inbox.  I'm pretty sure
this will work.
 3-Nov-84 18:23:29-EST,6402;000000000000
Received: from MIT-MORRISON by MIT-OZ via Chaosnet; 3 Nov 84 18:22-EST
Date: Saturday, 3 November 1984, 18:22-EST
From: John C. Mallery <JCMA at MIT-OZ>
Subject: While trying to save a user namespace object
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 Release 5.2, Experimental RELATUS 131.15, FEP 22, on Lisp Machine Jim Morrison:



>>Error: The control stack overflowed.
While in the function TV:%DRAW-STRING-INTERNAL  (:METHOD TV:SCREEN :%DRAW-STRING)  TV:%DRAW-STRING

TV:%DRAW-STRING-INTERNAL:  (from OZ:OZ:<CJL>REL5-2-BULLETIN-LOSSAGE)
   Arg 0 (ARRAY): #<ART-1B-1126-310 412661>
   Arg 1 (ALU): 7
   Arg 2 (X): 122
   Arg 3 (Y): 126
   Arg 4 (STRING): "X"
   Arg 5 (FONT): #<FONT CPTFONT 67374172>
   Arg 6 (INDEX): 0
   Arg 7 (LIMIT): 1
   Arg 8 (XLIM): 1124

(:METHOD TV:SCREEN :%DRAW-STRING):  (P.C. = 26)
   Arg 0 (SELF): #<MAIN-SCREEN Main Screen 15640071 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:SCREEN -- 5. IV's, 1. FL's 76122561>
   Arg 2 (OPERATION): :%DRAW-STRING
   Arg 3 (SHEET): #<NAMESPACE-INTERACTOR-PANE Namespace Editor Interactor Pane 1040443 exposed>
   Arg 4 (ALU): 7
   Arg 5 (X): 122
   Arg 6 (Y): 126
   Arg 7 (STRING): "X"
   Arg 8 (FONT): #<FONT CPTFONT 67374172>
   Arg 9 (INDEX): 0
   Arg 10 (LIMIT): 1
   Arg 11 (XLIM): 1124

TV:%DRAW-STRING:  (P.C. = 42)
   Arg 0 (SHEET-OR-ARRAY): #<NAMESPACE-INTERACTOR-PANE Namespace Editor Interactor Pane 1040443 exposed>
   Arg 1 (ALU): 7
   Arg 2 (X): 122
   Arg 3 (Y): 126
   Arg 4 (STRING): "X"
   Arg 5 (FONT): #<FONT CPTFONT 67374172>
   Arg 6 (INDEX): 0
   Arg 7 (LIMIT): 1
   Arg 8 (XLIM): 1124

(:METHOD TV:SHEET :STRING-OUT):  (P.C. = 163)
   Arg 0 (SELF): #<NAMESPACE-INTERACTOR-PANE Namespace Editor Interactor Pane 1040443 exposed>
   Arg 1 (SELF-MAPPING-TABLE): TV:SHEET
   Arg 2 (OPERATION): :STRING-OUT
   Arg 3 (STRING): "X"
   --Defaulted args:--
   Arg 4 (START): 0
   Arg 5 (END): NIL

SI:PRINT-RAW-STRING:  (P.C. = 23)
   Arg 0 (STRING): "X"
   Arg 1 (STREAM): #:TERMINAL-IO-SYN-STREAM
   Arg 2 (FASTP): (:STRING-OUT :LINE-OUT :LISTEN :TYI :TYI-NO-HANG :ANY-TYI :ANY-TYI-NO-HANG :POINT :DRAW-POINT :DRAW-CHAR ...)

SI:PRINT-PNAME-STRING:  (P.C. = 61)
   Arg 0 (SYMBOL): SI:X
   Arg 1 (SLASHIFY-P): NIL
   Arg 2 (STREAM): #:TERMINAL-IO-SYN-STREAM
   Arg 3 (FASTP): (:STRING-OUT :LINE-OUT :LISTEN :TYI :TYI-NO-HANG :ANY-TYI :ANY-TYI-NO-HANG :POINT :DRAW-POINT :DRAW-CHAR ...)

SI:PRINT-OBJECT:  (P.C. = 73)
   Arg 0 (EXP): SI:X
   Arg 1 (I-PRINDEPTH): 0
   Arg 2 (SLASHIFY-P): NIL
   Arg 3 (STREAM): #:TERMINAL-IO-SYN-STREAM
   --Defaulted args:--
   Arg 4 (WHICH-OPERATIONS): (:TYO :STRING-OUT :LINE-OUT :LISTEN :TYI :TYI-NO-HANG :ANY-TYI :ANY-TYI-NO-HANG :POINT :DRAW-POINT ...)

PRINC:  (P.C. = 10)
   Arg 0 (EXP): SI:X
   Arg 1 (STREAM): #:TERMINAL-IO-SYN-STREAM

Rest of stack:
FORMAT:FORMAT-CTL-ASCII:  (P.C. = 73)
(:PROPERTY FORMAT:A FORMAT:CTL-ONE-ARG):  (P.C. = 4)
FORMAT:FORMAT-CTL-OP:  (P.C. = 21)
FORMAT:FORMAT-CTL-STRING:  (P.C. = 74)
FORMAT:  (P.C. = 70)  (from RL: UTILS; KLUDGES)
FORMAT:  (from RL: UTILS; KLUDGES)
DBG:DISPLAY-ARG-NAME:  (P.C. = 13)
DBG:DISPLAY-ARG-VALUE:  (P.C. = 15)
DBG:PRINT-FRAME-ARGS:  (P.C. = 262)
DBG:PRINT-FUNCTION-AND-ARGS:  (P.C. = 213)
DBG:SHOW-FUNCTION-AND-ARGS:  (P.C. = 3)
DBG:SHOW:  (P.C. = 10)
DBG:DEBUGGER-TOP-LEVEL:  (P.C. = 423)
DBG:ENTER-DEBUGGER:  (P.C. = 16)
DBG:DEBUGGER-HANDLER-HANDLE-CONDITION:  (P.C. = 7)
DBG:DEBUGGER-HANDLER:  (P.C. = 12)
(:METHOD CONDITION :SIGNAL):  (P.C. = 114)
(:METHOD CONDITION :COMBINED :SIGNAL):  (P.C. = 23)  (from RL: UTILS; KLUDGES)
SIGNAL:  (P.C. = 10)
SYS:STACK-OVERFLOW:  (P.C. = 16)
STRINGP:
FORMAT:  (from RL: UTILS; KLUDGES)
DBG:PRINT-ERROR-MESSAGE:  (P.C. = 31)
DBG:SHOW:  (P.C. = 7)
DBG:DEBUGGER-TOP-LEVEL:  (P.C. = 423)
DBG:ENTER-DEBUGGER:  (P.C. = 16)
DBG:DEBUGGER-HANDLER-HANDLE-CONDITION:  (P.C. = 7)
DBG:DEBUGGER-HANDLER:  (P.C. = 12)
(:METHOD CONDITION :SIGNAL):  (P.C. = 114)
(:METHOD CONDITION :COMBINED :SIGNAL):  (P.C. = 23)  (from RL: UTILS; KLUDGES)
SIGNAL:  (P.C. = 10)
SYS:STACK-OVERFLOW:  (P.C. = 16)
TV:%DRAW-STRING-INTERNAL:  (from OZ:OZ:<CJL>REL5-2-BULLETIN-LOSSAGE)
(:METHOD TV:SCREEN :%DRAW-STRING):  (P.C. = 26)
TV:%DRAW-STRING:  (P.C. = 42)
(:METHOD TV:SHEET :STRING-OUT):  (P.C. = 163)
(:METHOD SI:INDENTING-STREAM :STRING-OUT):  (P.C. = 40)
SI:PRINT-RAW-STRING:  (P.C. = 23)
SI:PRINT-QUOTED-STRING:  (P.C. = 15)
SI:PRINT-OBJECT:  (P.C. = 215)
PRINC:  (P.C. = 10)
(:METHOD NET:OWN-FLAVOR-OBJECT :PRINT-SELF):  (P.C. = 71)
SI:PRINT-OBJECT:  (P.C. = 342)
PRINC:  (P.C. = 10)
FORMAT:FORMAT-CTL-ASCII:  (P.C. = 73)
(:PROPERTY FORMAT:A FORMAT:CTL-ONE-ARG):  (P.C. = 4)
FORMAT:FORMAT-CTL-OP:  (P.C. = 21)
FORMAT:FORMAT-CTL-STRING:  (P.C. = 74)
FORMAT:  (P.C. = 70)  (from RL: UTILS; KLUDGES)
FORMAT:  (from RL: UTILS; KLUDGES)
(:METHOD CHAOS:CHAOS-HOST-NOT-RESPONDING-DURING-CONNECTION :REPORT):  (P.C. = 17)
(:INTERNAL (:METHOD CHAOS:CHAOS-HOST-NOT-RESPONDING-DURING-CONNECTION :COMBINED :REPORT) 0):  (P.C. = 7)
(:METHOD CONDITION :WHOPPER :REPORT):  (P.C. = 12)
(:METHOD CHAOS:CHAOS-HOST-NOT-RESPONDING-DURING-CONNECTION :COMBINED :REPORT):  (P.C. = 12)
DBG:PRINT-ERROR-MESSAGE:  (P.C. = 65)
DBG:SHOW:  (P.C. = 7)
DBG:DEBUGGER-TOP-LEVEL:  (P.C. = 423)
DBG:ENTER-DEBUGGER:  (P.C. = 16)
DBG:DEBUGGER-HANDLER-HANDLE-CONDITION:  (P.C. = 7)
DBG:DEBUGGER-HANDLER:  (P.C. = 12)
(:METHOD CONDITION :SIGNAL):  (P.C. = 114)
(:METHOD CONDITION :COMBINED :SIGNAL):  (P.C. = 23)  (from RL: UTILS; KLUDGES)
ERROR:  (P.C. = 55)
CHAOS:CHECK-CONNECTION-STATE:  (P.C. = 117)
CHAOS:WAIT-FOR-CONNECT:  (P.C. = 13)
CHAOS:CONNECT:  (P.C. = 250)
CHAOS:OPEN-STREAM:  (P.C. = 65)
CHAOS:|MEDIUM-CHAOS-((NETWORK CHAOS))-G0223|:  (P.C. = 11)
NETI:GET-CONNECTION-FOR-SERVICE-TO-HOST:  (P.C. = 12)
NETI:GET-CONNECTION-FOR-SERVICE-1:  (P.C. = 220)
NET:GET-CONNECTION-FOR-SERVICE:  (P.C. = 7)
NETI:INVOKE-SERVICE-NAMESPACE-WITH-NAMESPACE:  (P.C. = 3)
NET:INVOKE-SERVICE-ACCESS-PATH:  (P.C. = 21)
NETI:INVOKE-SERVICE-ACCESS-PATH-WITH-CACHED-UNAVAILABILITY:  (P.C. = 43)
NETI:OPEN-NAMESPACE-SERVER:  (P.C. = 317)
NET:UPDATE-OBJECT-PERMANENTLY:  (P.C. = 73)
(:DEFUN-METHOD TV:PERFORM-COMMAND):  (P.C. = 446)
(:METHOD TV:NAMESPACE-EDITOR-FRAME :TOP-LEVEL):  (P.C. = 120)
TV:START-NAMESPACE-EDITOR:  (P.C. = 4)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
 3-Nov-84 19:22:39-EST,2261;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 3 Nov 84 19:22-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 120646; Sat 3-Nov-84 19:19:01-EST
Date: Saturday, 3 November 1984, 19:18-EST
From: David C. Plummer in disguise <DCP at SCRC-TENEX>
Subject: Random Flavor Examiner blowout
To: David A. Moon <Moon at SCRC-TENEX>, TIM at MIT-MC
cc: BUG-LISPM at MIT-OZ
In-Reply-To: <840912140800.2.MOON@EUPHRATES.SCRC.Symbolics>
References: The message of 12 Sep 84 10:47-EDT from TIM at MIT-MC,
            <840912140800.2.MOON@EUPHRATES.SCRC.Symbolics>
Message-ID: <841103191847.8.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Wednesday, 12 September 1984, 14:08-EDT
    From: David A. Moon <Moon at SCRC-TENEX>

	Date: Wednesday, 12 September 1984, 10:47-EDT
	From:  <TIM at MIT-MC>

	In Release 5.1, Experimental MIT 1.4, COLOR 5.1, FEP 18, on Lisp Machine Buddy Holly (3600):

	>>Trap: The argument given to the CDR instruction, :METHOD, was not a list, a locative or NIL.
	While in the function SI:COMPILED-FUNCTION-DEBUGGING-INFO  SI:FIND-CALLERS-OF-SYMBOLS-IN-COMPILED-FUNCTION  FLAVEX:FIND-IVS-IN-METHOD

	SI:COMPILED-FUNCTION-DEBUGGING-INFO:  (P.C. = 6)
	   Arg 0 (FUNCTION): (NAMED-LAMBDA ((:METHOD FOO :AFTER :INIT) (:FLAVOR FOO)) (SELF SYS:SELF-MAPPING-TABLE SI:OPERATION &KEY U SCREW) (DECLARE (SYS:INSTANCE-VARIABLES FOO)) (PROGN SELF SYS:SELF-MAPPING-TABLE SI:OPERATION NIL) (PRINT SCREW) (PRINT U))

	SI:FIND-CALLERS-OF-SYMBOLS-IN-COMPILED-FUNCTION:  (P.C. = 173)
	   Arg 0 (CALLER): (:METHOD FOO :AFTER :INIT)
	   Arg 1 (CALLER-FUNCTION): (NAMED-LAMBDA ((:METHOD FOO :AFTER :INIT) (:FLAVOR FOO)) (SELF SYS:SELF-MAPPING-TABLE SI:OPERATION &KEY U SCREW) (DECLARE (SYS:INSTANCE-VARIABLES FOO)) (PROGN SELF SYS:SELF-MAPPING-TABLE SI:OPERATION NIL) (PRINT SCREW) (PRINT U))

	FLAVEX:FIND-IVS-IN-METHOD:  (P.C. = 32)
	   Arg 0 (IVS): NIL
	   Arg 1 (SPEC): (:METHOD FOO :AFTER :INIT)

    Thanks for the report. FLAVEX:FIND-IVS-IN-METHOD should be calling
    SI:FIND-CALLERS-OF-SYMBOLS-AUX1, not SI:FIND-CALLERS-OF-SYMBOLS-IN-COMPILED-FUNCTION.
    Someone was confused, evidently.

Somebody made this change to the source, too.  It looks like it was
Hornig on October 9th.
 3-Nov-84 20:06:32-EST,2332;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 3 Nov 84 20:06-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 120671; Sat 3-Nov-84 20:08:24-EST
Date: Saturday, 3 November 1984, 20:08-EST
From: David C. Plummer in disguise <DCP at SCRC-TENEX>
Subject: problem with format directive ~T
To: David A. Moon <Moon at SCRC-TENEX>, Dick at MIT-MC,
    Carl Hoffman <CWH at SCRC-TENEX>
cc: BUG-LISPM at MIT-OZ
In-Reply-To: <840909160250.6.MOON@EUPHRATES.SCRC.Symbolics>,
             <DICK.12046532453.BABYL@MIT-OZ>,
             <840912115412.3.CWH@YANGTZE.SCRC.Symbolics>,
             <840912222440.2.MOON@EUPHRATES.SCRC.Symbolics>,
             <DICK.12047290801.BABYL@MIT-OZ>
Message-ID: <841103200811.9.NFEP@NEPONSET.SCRC.Symbolics.COM>

265.164, which will be part of Release 6 (but not Beta I), makes format
~n,mT conform to both the current LispM documentation and the Common
Lisp documentation.  Namely, it goes to column n+km for smallest
feasible k>0.  I've read the messages and think this is a reasonable
thing to do (as Moon said
    I believe that n+mk is better than c+mk because it makes your tables line up
    in neat columns.  Also it's what the documentation says.
    )

So, we now have
	(loop for count from 0 to 3 doing
	  (loop for mincol from 0 to 3
		doing
	    (loop for colinc from 0 to 3
		  doing
	      (format t "~D ~D ~D |~A|~%" count mincol colinc 
		      (format nil "~V~~V,VT" count mincol colinc)))))
0 0 0 ||
0 0 1 | |
0 0 2 |  |
0 0 3 |   |
0 1 0 | |
0 1 1 | |
0 1 2 | |
0 1 3 | |
0 2 0 |  |
0 2 1 |  |
0 2 2 |  |
0 2 3 |  |
0 3 0 |   |
0 3 1 |   |
0 3 2 |   |
0 3 3 |   |
1 0 0 |~|
1 0 1 |~ |
1 0 2 |~ |
1 0 3 |~  |
1 1 0 |~|
1 1 1 |~ |
1 1 2 |~  |
1 1 3 |~   |
1 2 0 |~ |
1 2 1 |~ |
1 2 2 |~ |
1 2 3 |~ |
1 3 0 |~  |
1 3 1 |~  |
1 3 2 |~  |
1 3 3 |~  |
2 0 0 |~~|
2 0 1 |~~ |
2 0 2 |~~  |
2 0 3 |~~ |
2 1 0 |~~|
2 1 1 |~~ |
2 1 2 |~~ |
2 1 3 |~~  |
2 2 0 |~~|
2 2 1 |~~ |
2 2 2 |~~  |
2 2 3 |~~   |
2 3 0 |~~ |
2 3 1 |~~ |
2 3 2 |~~ |
2 3 3 |~~ |
3 0 0 |~~~|
3 0 1 |~~~ |
3 0 2 |~~~ |
3 0 3 |~~~   |
3 1 0 |~~~|
3 1 1 |~~~ |
3 1 2 |~~~  |
3 1 3 |~~~ |
3 2 0 |~~~|
3 2 1 |~~~ |
3 2 2 |~~~ |
3 2 3 |~~~  |
3 3 0 |~~~|
3 3 1 |~~~ |
3 3 2 |~~~  |
3 3 3 |~~~   |
 3-Nov-84 20:29:59-EST,1992;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 3 Nov 84 20:29-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 120675; Sat 3-Nov-84 20:31:50-EST
Date: Saturday, 3 November 1984, 20:31-EST
From: David C. Plummer in disguise <DCP at SCRC-TENEX>
Subject: Methods that need to be added to ZMACS-FRAME and ZMAIL-FRAME
To: JCMA at MIT-OZ, Bug-Lispm at MIT-OZ, bug-zmail at MIT-OZ
In-Reply-To: The message of 13 Sep 84 05:56-EDT from JCMA at MIT-OZ
Message-ID: <841103203141.2.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Thursday, 13 September 1984, 05:56-EDT
    From: JCMA@MIT-OZ

    In Symbolics 3600 Release 5.2, Experimental RELATUS 130.37, FEP 18, on Lisp Machine John Lennon:

    These provide a structured interface for obtaining this information.

(1) Why do you need these??  (2) In what circumstances isn't
standard-output and standard-input the right thing?  (3) Why are you
using VARIABLE-BOUNDP and then SYMEVAL.  That is, (BOUNDP 'X) is to
(SYMEVAL 'X) as (VARIABLE-BOUNDP 'X) is to X.  (4) Why is returning NIL
the right thing.  Shouldn't it err, or is your application code going
to check for that?  (5) [In Release 6] What you have won't work anyway.
These variables are bound per process in, for Zmacs, (:method
zwei:top-level-editor :combined :edit) so you already have to be in the
appropriate process anyway, in which case you can just make free
references.

    (DEFMETHOD (ZMACS-FRAME :TYPEOUT-WINDOW) ()
	(IF (VARIABLE-BOUNDP *TYPEOUT-WINDOW*)
	    (SYMEVAL '*TYPEOUT-WINDOW*)
	    NIL))

    (DEFMETHOD (ZMACS-FRAME :TYPEIN-WINDOW) ()
      (IF (VARIABLE-BOUNDP *typein-WINDOW*)
	  (SYMEVAL '*typein-WINDOW*)
	  NIL))

    (DEFMETHOD (ZMAIL-FRAME :TYPEOUT-WINDOW) ()
	(IF (VARIABLE-BOUNDP *TYPEOUT-WINDOW*)
	    (SYMEVAL '*TYPEOUT-WINDOW*)
	    NIL))

    (DEFMETHOD (ZMAIL-FRAME :TYPEIN-WINDOW) ()
      (IF (VARIABLE-BOUNDP *typein-WINDOW*)
	  (SYMEVAL '*typein-WINDOW*)
	  NIL))
 3-Nov-84 20:52:17-EST,2037;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 3 Nov 84 20:51-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 120694; Sat 3-Nov-84 20:45:20-EST
Date: Saturday, 3 November 1984, 20:45-EST
From: David C. Plummer in disguise <DCP at SCRC-TENEX>
Subject: Methods that need to be added to ZMACS-FRAME and ZMAIL-FRAME
To: JCMA at MIT-OZ, Bug-Lispm at MIT-OZ, bug-zmail at MIT-OZ
In-Reply-To: The message of 13 Sep 84 05:56-EDT from JCMA at MIT-OZ
Supersedes: <841103203141.2.NFEP@NEPONSET.SCRC.Symbolics.COM>
Message-ID: <841103204509.3.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Thursday, 13 September 1984, 05:56-EDT
    From: JCMA@MIT-OZ

    In Symbolics 3600 Release 5.2, Experimental RELATUS 130.37, FEP 18, on Lisp Machine John Lennon:

    These provide a structured interface for obtaining this information.

[This supersedes the previous message, which was somewhat braindamaged.]

(1) Why do you need these??  (2) In what circumstances isn't
standard-output and standard-input the right thing?  (3) Why are you
using VARIABLE-BOUNDP and then SYMEVAL.  That is, (BOUNDP 'X) is to
(SYMEVAL 'X) as (VARIABLE-BOUNDP X) is to X.  (4) Why is returning NIL
the right thing?  Shouldn't it err, or is your application code going
to check for that?  (5) [In Release 6] What you have won't work anyway.
These variables (for Zmacs, at least) are special instance variables of
ZWEI:TOP-LEVEL-EDITOR, not of ZWEI:ZMACS-FRAME.

    (DEFMETHOD (ZMACS-FRAME :TYPEOUT-WINDOW) ()
	(IF (VARIABLE-BOUNDP *TYPEOUT-WINDOW*)
	    (SYMEVAL '*TYPEOUT-WINDOW*)
	    NIL))

    (DEFMETHOD (ZMACS-FRAME :TYPEIN-WINDOW) ()
      (IF (VARIABLE-BOUNDP *typein-WINDOW*)
	  (SYMEVAL '*typein-WINDOW*)
	  NIL))

    (DEFMETHOD (ZMAIL-FRAME :TYPEOUT-WINDOW) ()
	(IF (VARIABLE-BOUNDP *TYPEOUT-WINDOW*)
	    (SYMEVAL '*TYPEOUT-WINDOW*)
	    NIL))

    (DEFMETHOD (ZMAIL-FRAME :TYPEIN-WINDOW) ()
      (IF (VARIABLE-BOUNDP *typein-WINDOW*)
	  (SYMEVAL '*typein-WINDOW*)
	  NIL))
 3-Nov-84 22:03:26-EST,1546;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 3 Nov 84 22:02-EST
Received: from SCRC-NEPONSET by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 98946; Sat 3-Nov-84 22:03:00-EST
Date: Saturday, 3 November 1984, 22:03-EST
From: David C. Plummer in disguise <DCP at SCRC-TENEX>
Subject: Namespace and Public Key
To: Jerry Roylance <GLR at MIT-OZ>, Bug-Lispm at MIT-OZ
In-Reply-To: The message of 17 Sep 84 14:28-EDT from Jerry Roylance <GLR at MIT-OZ>
Message-ID: <841103220347.2.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Monday, 17 September 1984, 14:28-EDT
    From: Jerry Roylance <GLR at MIT-OZ>

    I'm tired of logging-in to several different machines.  How about putting into
    the namespace an encrypted password slot for each host in the user object.
    The encryption key is something the user selects.

    Then let me set a *REMEMBER-PASSWORD-KEY* in my lisp environment.  When
    the system needs to log into PIG, it checks to see if there is a
    remember password key.  If there is, then it fetches the encrypted
    password out of the user object, decrypts it, and tries logging in.  (If
    the login fails, then the system can ask the user for the password.)

    Thus I only log in once, but have access to all the hosts I use.

    The encryption and decryption key need never leave my machine.

I assume you know, and probably don't care, that this as secure as
FS:*REMEMBER-PASSWORDS* (which is as secure as access to your Lisp
environment)?  Other than that, this is a reasonable idea.
 3-Nov-84 22:06:44-EST,413;000000000000
Received: from MIT-APIARY-3 by MIT-OZ via Chaosnet; 3 Nov 84 22:06-EST
Date: Saturday, 17 July 1909, 02:41-EDT
From: Henry Lieberman <Henry at MIT-OZ>
Subject: Won't even give me the time of day
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 Release 5.2, FEP 18, on Lisp Machine Apiary-3:

Time and date are wrong, even after (TIME:INITIALIZE-TIMEBASE).

(time:print-current-time)7/17/09 02:40:36
; NIL

 3-Nov-84 23:54:21-EST,1070;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 3 Nov 84 23:53-EST
Received: from SCRC-NEPONSET by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 98972; Sat 3-Nov-84 23:53:15-EST
Date: Saturday, 3 November 1984, 23:54-EST
From: David C. Plummer in disguise <DCP at SCRC-TENEX>
Subject: Won't even give me the time of day
To: Henry Lieberman <Henry at MIT-OZ>, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 17 Jul 9 02:41-EDT from Henry Lieberman <Henry at MIT-OZ>
Message-ID: <841103235404.2.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Saturday, 17 July 1909, 02:41-EDT
    From: Henry Lieberman <Henry at MIT-OZ>

    In Symbolics 3600 Release 5.2, FEP 18, on Lisp Machine Apiary-3:

    Time and date are wrong, even after (TIME:INITIALIZE-TIMEBASE).

    (time:print-current-time)7/17/09 02:40:36
    ; NIL

Sigh.  Release 6 has a much better mechanism for this.  I think
chaos:*brd-history* is part of release 5.  You should be able to find
out who gave you the bogus time.  You can then use (net:print-host-times
<host-name>) to verify it.
 4-Nov-84 11:27:16-EST,1737;000000000000
Mail-From: GLR created at  4-Nov-84 11:26:52
Date: Sun, 4 Nov 1984  11:26 EST
Message-ID: <GLR.12060900806.BABYL@MIT-OZ>
From: Jerry Roylance <GLR@MIT-OZ>
To:   "David C. Plummer in disguise" <DCP@SCRC-TENEX>
Cc:   glr@MIT-OZ, Bug-Lispm@MIT-OZ
Subject: Namespace and Public Key
In-reply-to: Msg of 3 Nov 1984 22:03-EST from David C. Plummer in disguise <DCP at SCRC-TENEX>


Yes, I realize its security problems, and yes, I don't care -- just as I
suspect you realize the security problems with transmitting cleartext
passwords over the network, with giving anybody physical access to a
machine or its code or its backup tapes, and with allowing backdoor
EVAL.  Anyone who wants passwords can obtain them easily enough:
listening to the network, opening TTYnn: and simulating the login
sequence, using messages to download softkeys, or installing trojan
horses.  (In fact, this past week some one remotely installed a
password-collecting trojan horse on several LISPMs.)

What it comes down to is convenience.  For the convenience, I will set
FS:*REMEMBER-PASSWORDS*.  Others don't have to set it or give it the
passwords to all their machines, but they should not delude themselves
into thinking that they are substantially more secure than one who does.
FS:*REMEMBER-PASSWORDS* just manufactures a master key that is as easy
to steal as any other key; it just happens to open more locks.

The proposed scheme does not decrease the users security IF the public
system is secure and IF the users local machine is secure (which it isn't
for reasons given above).  All information entering and leaving the local
machine is either the same information as before or else encrypted (and
by assumption secure).
 4-Nov-84 12:27:58-EST,848;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 4 Nov 84 12:26-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 120825; Sun 4-Nov-84 12:28:35-EST
Date: Sunday, 4 November 1984, 12:28-EST
From: David C. Plummer in disguise <DCP at SCRC-TENEX>
Subject: Namespace and Public Key
To: Jerry Roylance <GLR at MIT-OZ>,
    David C. Plummer in disguise <DCP at SCRC-TENEX>
cc: Bug-Lispm at MIT-OZ
In-Reply-To: <GLR.12060900806.BABYL@MIT-OZ>
Message-ID: <841104122809.4.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Sun, 4 Nov 1984  11:26 EST
    From: Jerry Roylance <GLR@MIT-OZ>

    Yes, I realize...

Whew!!

I've put this in my 'someday' file, which has more precedence than my
'someyear' file, but less than my main mail file and a few others.
Other people may also have this stashed away.
 5-Nov-84 12:05:08-EST,1216;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 5 Nov 84 12:04-EST
Received: from SCRC-THAMES by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 99283; Mon 5-Nov-84 12:03:39-EST
Date: Monday, 5 November 1984, 12:05-EST
From: Scott McKay <SWM at SCRC-QUABBIN>
Subject: Inspector bug
To: RpK at MIT-OZ, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 3 Nov 84 13:55-EST from Robert P. Krajewski <RpK at MIT-OZ>
Message-ID: <841105120531.0.SWM@THAMES.SCRC.Symbolics>

    Date: Saturday, 3 November 1984, 13:55-EST
    From: Robert P. Krajewski <RpK at MIT-OZ>

    In Don't-dump-a-band! Inconsistent (unreleased patches loaded) System 99.10,
    CADR 4.0, Experimental ZMail 54.2, MIT-Specific 23.0, microcode 320,
    GC@2, on Lisp Machine Nine:

    In the inspecter, inspective a locative inside an interpreter closure
    made as follows:

     (defun make-adder (x) #'(lambda (a) (+ a x)))
     (make-adder 3)
     (inspect *)

    >>TRAP 8077 (TRANS-TRAP)
    The variable X is unbound.
    Backtrace from the debugger:

Do lexically-scoped functions like MAKE-ADDER even work on the MIT
system?  I assume not, since X is unbound.  This works in the new
lexically-scoped interpreter.
 5-Nov-84 15:22:08-EST,1070;000000000000
Mail-From: RPK created at  5-Nov-84 14:48:54
Date: 5 Nov 1984  14:48 EST (Mon)
Message-ID: <RPK.12061199726.BABYL@MIT-OZ>
From: "Robert P. Krajewski" <RPK@MIT-OZ>
To:   Scott McKay <SWM@SCRC-QUABBIN>
Cc:   BUG-LISPM@MIT-OZ
Subject: Inspector bug
In-reply-to: Msg of 5 Nov 1984 12:05-EST from Scott McKay <SWM at SCRC-QUABBIN>

    From: Scott McKay <SWM at SCRC-QUABBIN>
        From: Robert P. Krajewski <RpK at MIT-OZ>

         (defun make-adder (x) #'(lambda (a) (+ a x)))
         (make-adder 3)
         (inspect *)

        >>TRAP 8077 (TRANS-TRAP)
        The variable X is unbound.
        Backtrace from the debugger:

    Do lexically-scoped functions like MAKE-ADDER even work on the MIT
    system?  I assume not, since X is unbound.  This works in the new
    lexically-scoped interpreter.

The MIT system has had a lexical interpreter for a few months now -- it's
just inspecting a locative to a``void'' value cell blew out.  Anyway, when
you actually evaluate the above, you get a cute little
#<CLOSURE (Interpreter) 6373404>
 5-Nov-84 19:18:09-EST,1513;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 5 Nov 84 19:16-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 121472; Mon 5-Nov-84 19:07:23-EST
Date: Monday, 5 November 1984, 19:06-EST
From: David C. Plummer in disguise <DCP at SCRC-TENEX>
Subject: Inspector bug
To: Robert P. Krajewski <RPK at MIT-OZ>,
    Scott McKay <SWM at SCRC-QUABBIN>
cc: BUG-LISPM at MIT-OZ
In-Reply-To: <RPK.12061199726.BABYL@MIT-OZ>
Message-ID: <841105190653.8.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: 5 Nov 1984  14:48 EST (Mon)
    From: "Robert P. Krajewski" <RPK@MIT-OZ>

	From: Scott McKay <SWM at SCRC-QUABBIN>
	    From: Robert P. Krajewski <RpK at MIT-OZ>

	     (defun make-adder (x) #'(lambda (a) (+ a x)))
	     (make-adder 3)
	     (inspect *)

	    >>TRAP 8077 (TRANS-TRAP)
	    The variable X is unbound.
	    Backtrace from the debugger:

	Do lexically-scoped functions like MAKE-ADDER even work on the MIT
	system?  I assume not, since X is unbound.  This works in the new
	lexically-scoped interpreter.

    The MIT system has had a lexical interpreter for a few months now -- it's
    just inspecting a locative to a``void'' value cell blew out.  Anyway, when
    you actually evaluate the above, you get a cute little
    #<CLOSURE (Interpreter) 6373404>

I don't know what you mean by ``void'' because X should be bound to 3.
That is
	(funcall (make-addr 3) 4) 
should return 7.  I obviously don't know what you are trying to say.
 5-Nov-84 21:25:01-EST,3248;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 5 Nov 84 21:22-EST
Received: from SCRC-EUPHRATES by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 99583; Mon 5-Nov-84 21:21:06-EST
Date: Monday, 5 November 1984, 21:22-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: interesting frames
To: David Chapman <Zvona at MIT-OZ>, bug-tracker at SCRC-STONY-BROOK
cc: BUG-LISPM at MIT-OZ
In-Reply-To: The message of 2 Nov 84 12:42-EST from David Chapman <Zvona at MIT-OZ>
Message-ID: <841105212205.8.MOON@EUPHRATES.SCRC.Symbolics.COM>

    Date: Friday, 2 November 1984, 12:42-EST
    From: David Chapman <Zvona at MIT-OZ>

    In Symbolics 3600 Release 5.2, FEP 22, on Lisp Machine Duane Allman:

    I've written an evaluator, and want to make the evaluator internals be
    uninteresting to the debugger's control-N and control-P commands.  I
    pushed the evaluator internal functions onto
    dbg:*uninteresting-functions*.  That doesn't work.  The culprit in the
    case of control-N (control-P is implemented differently, and I didn't
    look at it) is the following function:

    ;;; Given a frame, find out if it is one of the frames of a call to an interpreted function.
    ;;; If so, return the outermost frame of this call to the interpreted function.
    ;;; If not, return the original frame.
    (DEFUN FRAME-OUT-TO-INTERESTING-ACTIVE-FRAME (FRAME)
      (COND ((NULL FRAME) NIL)
	    ((FRAME-INTERESTING-P FRAME) FRAME)
	    (T
	     (DO ((NEW-FRAME FRAME (FRAME-PREVIOUS-ACTIVE-FRAME NEW-FRAME)))
		 (NIL)
	       (COND ((NULL NEW-FRAME)
		      (RETURN FRAME))
		     ((NOT (FRAME-INTERESTING-P NEW-FRAME)))	;Keep looping
		     ((atom (frame-function new-frame))
		      (return frame))
		     (T (RETURN NEW-FRAME)))))))

    The code in lower case means that frames are not skipped by control-N
    unless the next interesting frame has a non-atomic function.  I don't
    see why this is the right thing. It certainly means that I can't win.  What is
    the ATOM test really testing?  Shouldn't it test that, instead of
    atomness?

The idea is that only lists, used as functions, cause the interpreter to be
entered.  So if the interesting function that called the interpreter functions
isn't a list, then something bogus must be going on and the stack isn't
censored.  That's what the code thinks it's doing; it's a pity it isn't
commented a little better.

If you changed the circumstances in which the interpreter is entered (on
the 3600 you probably changed the function SI:CALL-FUNNY-FUNCTION) so
that you could have interpreted functions that aren't lists, then you
need to change the above function to remain consistent.

However, I don't think it would do any real harm to change that test to
	(typep (frame-function new-frame) ':compiled-function)
if that would make your application work.  Would it?

We can probably make this change in Release 6 if discussion determines
that it is right.  BUG-TRACKER take note, please.

    It can't work properly for common lisp closures, for example.

I don't see what makes you say that.  Common Lisp closures, in the version of
our Common Lisp support that has them at all, don't leave frames in the stack.
 5-Nov-84 23:08:24-EST,4263;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 5 Nov 84 23:07-EST
Date: Monday, 5 November 1984, 22:59-EST
From: Scott Cyphers <sr.ehpyc at MIT-SPEECH>
Subject: File renaming renames buffer wrong
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 Release 5.2, ZOO 3.3, Spire-Macros 3.8, Compute 2.5,
Attribute 3.3, Audio 2.4, Speech-Attributes 2.3, Display 3.7,
Speech-Layouts 4.7, Versatec 3.0, Prtout 2.0, Spire 14.0, SpireX 11.1,
ZOO-SPIRE 1.0, FEP 22, on Lisp Machine Smokey:

I earlier renamed this file (while it was loaded into a buffer) and it asked me if I wanted to
also rename the buffer.  I said yes.  Then, later, when I tried to save a modified version,
I got this error.  It seems it renames the buffer with an explicit version.

>>Error: The file already exists.
         For GOLDY:>cypher>multi-spire>eigen.lisp.16
While in the function (:METHOD FS:HOST-UNIT :COMMAND)  FS:OPEN-CHAOS  (:METHOD FS:QFILE-ACCESS-PATH :OPEN)

(:METHOD FS:HOST-UNIT :COMMAND):  (P.C. = 236)
   Arg 0 (SELF): #<HOST-UNIT 5331735>
   Arg 1 (SELF-MAPPING-TABLE): FS:HOST-UNIT
   Arg 2 (OPERATION): :COMMAND
   Arg 3 (MARK-P): NIL
   Arg 4 (STREAM-OR-HANDLE): (:CREATE "O3225")
   Arg 5 (SIMPLE-P): NIL
   Arg 6 (WHOSTATE): "Open"
   Rest arg (COMMANDS): ("OPEN " :WRITE " " :CHARACTER "" "" "" "" "" "" ...)
   Local 8 (HANDLE): "O3225"
   Local 9 (STREAM): NIL
   Local 10 (PKT): #<Chaos Packet 24043432>
   Local 11 (SUCCESS): NIL
   Local 12 (STRING): "O3225 ERROR FAE F The file already exists."
   Local 13 (TRANSACTION-ID): "T3232"
   Local 14 (CREATE-P): T
   Local 15 (CONDITION): NIL
   Local 16: T
   Local 17: #<CASE-HANDLER 37666420>
   Local 18: (#<BIND-HANDLER 64706502> #<BIND-HANDLER 64706506>)
   Local 19: (#<CASE-HANDLER 37666420> #<BIND-HANDLER 64706502> #<BIND-HANDLER 64706506>)

FS:OPEN-CHAOS:  (P.C. = 674)
   Arg 0 (ACCESS-PATH): #<LMFS-QFILE-ACCESS-PATH GOLDY using QFILE 5331724>
   Arg 1 (REAL-PATHNAME): #<LMFS-PATHNAME "GOLDY:>cypher>multi-spire>eigen.lisp.16">
   Arg 2 (*COMMAND-PATHNAME*-initialization): #<LMFS-PATHNAME "GOLDY:>cypher>multi-spire>eigen.lisp.16">
   Arg 3 (OPTIONS): (:CHARACTERS T :DIRECTION :OUTPUT)

(:METHOD FS:QFILE-ACCESS-PATH :OPEN):  (P.C. = 7)
   Arg 0 (SELF): #<LMFS-QFILE-ACCESS-PATH GOLDY using QFILE 5331724>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:QFILE-ACCESS-PATH -- 4. IV's, 0. FL's 37173641>
   Arg 2 (OPERATION): :OPEN
   Arg 3 (REAL-PATHNAME): #<LMFS-PATHNAME "GOLDY:>cypher>multi-spire>eigen.lisp.16">
   Arg 4 (PATHNAME): #<LMFS-PATHNAME "GOLDY:>cypher>multi-spire>eigen.lisp.16">
   Rest arg (OPTIONS): (:CHARACTERS T :DIRECTION :OUTPUT)

(:METHOD FS:ACTIVE-PATHNAME-MIXIN :OPEN):  (P.C. = 14)
   Arg 0 (SELF): #<LMFS-PATHNAME "GOLDY:>cypher>multi-spire>eigen.lisp.16">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:ACTIVE-PATHNAME-MIXIN -- 1. IV's, 0. FL's 57376727>
   Arg 2 (OPERATION): :OPEN
   Arg 3 (PATHNAME): #<LMFS-PATHNAME "GOLDY:>cypher>multi-spire>eigen.lisp.16">
   Rest arg (OPTIONS): (:CHARACTERS T :DIRECTION :OUTPUT)

FS:MACLISP-COMPATIBILITY-OPEN:  (P.C. = 362)
   Arg 0 (FILENAME): #<LMFS-PATHNAME "GOLDY:>cypher>multi-spire>eigen.lisp.16">
   Arg 1 (OPTIONS): (ZWEI:OUT)

OPEN:  (P.C. = 252)
   Arg 0 (PATHNAME): #<LMFS-PATHNAME "GOLDY:>cypher>multi-spire>eigen.lisp.16">
   Rest arg (KEYWORD-ARGS): ((ZWEI:OUT))

(:METHOD ZWEI:FILE-BUFFER-MIXIN :SAVE):  (P.C. = 44)
   Arg 0 (SELF): #<FILE-BUFFER "eigen.lisp.16 >cypher>multi-spire GOLDY:" 13320745>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:FILE-BUFFER-MIXIN -- 9. IV's, 0. FL's 73613675>
   Arg 2 (OPERATION): :SAVE

ZWEI:SAVE-BUFFER:  (P.C. = 203)
   Arg 0 (BUFFER): #<FILE-BUFFER "eigen.lisp.16 >cypher>multi-spire GOLDY:" 13320745>

Rest of stack:
ZWEI:COM-SAVE-FILE:  (P.C. = 14)
ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
ZWEI:MAKE-EXTENDED-COMMAND-INTERNAL:  (P.C. = 77)
SYS:CALL-FUNNY-FUNCTION:  (P.C. = 101)
Closure of ZWEI:MAKE-EXTENDED-COMMAND-INTERNAL:
ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 214)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 41)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
 6-Nov-84 07:15:43-EST,3180;000000000000
Received: from MIT-MORRISON by MIT-OZ via Chaosnet; 6 Nov 84 07:15-EST
Date: Tuesday, 6 November 1984, 07:19-EST
From: JCMA@MIT-OZ
Subject: If my mail address is at SCRC, does that mean I get a paycheck?
To: Hornig@SCRC-STONY-BROOK
Cc: bug-lispm@MIT-OZ, bug-zmail@SCRC-TENEX
In-reply-to: <841012090111.2.HORNIG@PEACE.SCRC.Symbolics>

    Date: Friday, 12 October 1984, 09:01-EDT
    From: Charles Hornig <Hornig at SCRC-STONY-BROOK>

	Date: Fri, 12 Oct 84 01:02 EDT
	From: JCMA%MIT-OZ@SCRC-STONY-BROOK.ARPA

	    Date: Thursday, 11 October 1984, 17:03-EDT
	    From: Dan Gerson <DanG at SCRC-TENEX>

		Date: Wed, 3 Oct 84 00:34 EDT
		From: "John C. Mallery" <JCMA%MIT-OZ@SCRC-RIVERSIDE.ARPA>

	Note the return address for jcma is symbolics, not OZ.  I have been having
	trouble getting responses over the arpanet due these bogus headers.  How can I
	fix this problem right away?

    If you are running Release 5.2, you can apply this patch (which will be
    part of the IP/TCP distribution also).  If you are running 5.1, you can
    get 5.2 and then apply the patch.

    - - - - - - - - - -

    ;;; -*- Mode: LISP; Patch-File: T; Package: Mailer; Base: 10; Patch-file: Yes -*-
    ;;; Patch file for Zmail version 98.16
    ;;; Reason: Function ARPANET-MAIL-GATEWAY-HOST:  Only allow ARPA mail pseudo-gateways at the local site.
    ;;; Written by Hornig, 10/12/84 08:49:16
    ;;; while running on Peace from FEP0:>System-258-141.load.1
    ;;; with Experimental System 258.146, Experimental Hardcopy 36.4, Experimental Zmail 98.15, Experimental LMFS 49.13, Experimental Tape 33.1, Experimental Basic Sage 7.6, Experimental Writer Tools 7.0, Experimental New Documentation System 6.11, Experimental IP-TCP 24.11, Experimental SCRC 4.3, cold load 153, microcode TMC5-MIC 309, FEP 21.



    ; From file mail-access-paths.lisp >sys>zmail Q: (87)
    #10R MAILER::(COMPILER-LET ((PACKAGE (PKG-FIND-PACKAGE "MAILER")))

    (defun arpanet-mail-gateway-host (host)
      (block found
	(let ((arpanet-namespace (find-arpanet-namespace)))
	  (with-stack-list (*namespace-search-list* arpanet-namespace)
	    (loop with site = (send host :site)
		  for (network) in (send host :address) doing
	      (with-stack-list (address network :*)
		(with-stack-list (address address)
		  (dolist (system-type '(:lispm :its :tops-20))
		    (dolist (host (find-objects-from-property-list
				    :host :site site :system-type system-type :address address
				    :service '((:store-and-forward-mail :* :*))))
		      (when (loop for name in (send host :names)
				  thereis (eq (send name :namespace) arpanet-namespace))
			(return-from found host)))))))))))

    )

I reported to you that this code did not work the day after you sent it. But, nothing
happened.  What's the story?  SCRC|Hornig not found in namespace?

This code does not work because the function FIND-ARPANET-NAMESPACE is not
defined in rel 5.2.  Could you please send a working patch over here
forthwith.  

Mail is very important around here.  It is a crisis when it is broken.  You
don't want to engender crises, so let's get this bug fixed.  Thanks.
 6-Nov-84 07:31:09-EST,3214;000000000000
Received: from MIT-MORRISON by MIT-OZ via Chaosnet; 6 Nov 84 07:30-EST
Date: Tuesday, 6 November 1984, 07:34-EST
From: JCMA@MIT-OZ
Subject: If my mail address is at SCRC, does that mean I get a paycheck?
To: Hornig@SCRC-STONY-BROOK
Cc: bug-lispm@MIT-OZ, bug-zmail@SCRC-TENEX
In-reply-to: <841012090111.2.HORNIG@PEACE.SCRC.Symbolics>
Supersedes: The message of 6 Nov 84 07:19-EST from  <JCMA at MIT-OZ>

    Date: Friday, 12 October 1984, 09:01-EDT
    From: Charles Hornig <Hornig at SCRC-STONY-BROOK>

	Date: Fri, 12 Oct 84 01:02 EDT
	From: JCMA%MIT-OZ@SCRC-STONY-BROOK.ARPA

	    Date: Thursday, 11 October 1984, 17:03-EDT
	    From: Dan Gerson <DanG at SCRC-TENEX>

		Date: Wed, 3 Oct 84 00:34 EDT
		From: "John C. Mallery" <JCMA%MIT-OZ@SCRC-RIVERSIDE.ARPA>

	Note the return address for jcma is symbolics, not OZ.  I have been having
	trouble getting responses over the arpanet due these bogus headers.  How can I
	fix this problem right away?

    If you are running Release 5.2, you can apply this patch (which will be
    part of the IP/TCP distribution also).  If you are running 5.1, you can
    get 5.2 and then apply the patch.

    - - - - - - - - - -

    ;;; -*- Mode: LISP; Patch-File: T; Package: Mailer; Base: 10; Patch-file: Yes -*-
    ;;; Patch file for Zmail version 98.16
    ;;; Reason: Function ARPANET-MAIL-GATEWAY-HOST:  Only allow ARPA mail pseudo-gateways at the local site.
    ;;; Written by Hornig, 10/12/84 08:49:16
    ;;; while running on Peace from FEP0:>System-258-141.load.1
    ;;; with Experimental System 258.146, Experimental Hardcopy 36.4, Experimental Zmail 98.15, Experimental LMFS 49.13, Experimental Tape 33.1, Experimental Basic Sage 7.6, Experimental Writer Tools 7.0, Experimental New Documentation System 6.11, Experimental IP-TCP 24.11, Experimental SCRC 4.3, cold load 153, microcode TMC5-MIC 309, FEP 21.



    ; From file mail-access-paths.lisp >sys>zmail Q: (87)
    #10R MAILER::(COMPILER-LET ((PACKAGE (PKG-FIND-PACKAGE "MAILER")))

    (defun arpanet-mail-gateway-host (host)
      (block found
	(let ((arpanet-namespace (neti:find-object-named :namespace "ARPANET"))) ;; losing function: find-arpanet-namespace
	  (with-stack-list (*namespace-search-list* arpanet-namespace)
	    (loop with site = (send host :site)
		  for (network) in (send host :address) doing
	      (with-stack-list (address network :*)
		(with-stack-list (address address)
		  (dolist (system-type '(:lispm :its :tops-20))
		    (dolist (host (find-objects-from-property-list
				    :host :site site :system-type system-type :address address
				    :service '((:store-and-forward-mail :* :*))))
		      (when (loop for name in (send host :names)
				  thereis (eq (send name :namespace) arpanet-namespace))
			(return-from found host)))))))))))

    )

I reported to you that this code did not work the day after you sent it. But, nothing
happened.  What's the story?  SCRC|Hornig not found in namespace?

This code does not work because the function FIND-ARPANET-NAMESPACE is not
defined in rel 5.2.  Could you please send a working patch over here
forthwith.  #$%!!^$%!!! I had to fix it to send this message!
 6-Nov-84 10:21:49-EST,3101;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 6 Nov 84 10:21-EST
Received: from SCRC-PEACE by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 121657; Tue 6-Nov-84 09:09:30-EST
Date: Tuesday, 6 November 1984, 09:08-EST
From: Charles Hornig <Hornig at SCRC-STONY-BROOK>
Subject: If my mail address is at SCRC, does that mean I get a paycheck?
To: JCMA at MIT-OZ
cc: bug-lispm at MIT-OZ, bug-zmail at SCRC-TENEX
In-Reply-To: The message of 6 Nov 84 07:34-EST from JCMA at MIT-OZ
Message-ID: <841106090822.3.HORNIG@PEACE.SCRC.Symbolics.COM>

    Date: Tuesday, 6 November 1984, 07:34-EST
    From: JCMA@MIT-OZ

	Date: Friday, 12 October 1984, 09:01-EDT
	From: Charles Hornig <Hornig at SCRC-STONY-BROOK>

	    Date: Fri, 12 Oct 84 01:02 EDT
	    From: JCMA%MIT-OZ@SCRC-STONY-BROOK.ARPA

		Date: Thursday, 11 October 1984, 17:03-EDT
		From: Dan Gerson <DanG at SCRC-TENEX>

		    Date: Wed, 3 Oct 84 00:34 EDT
		    From: "John C. Mallery" <JCMA%MIT-OZ@SCRC-RIVERSIDE.ARPA>

	    Note the return address for jcma is symbolics, not OZ.  I have been having
	    trouble getting responses over the arpanet due these bogus headers.  How can I
	    fix this problem right away?

	If you are running Release 5.2, you can apply this patch (which will be
	part of the IP/TCP distribution also).  If you are running 5.1, you can
	get 5.2 and then apply the patch.

    I reported to you that this code did not work the day after you sent it. But, nothing
    happened.  What's the story?  SCRC|Hornig not found in namespace?

I never saw the mail.  Probably network flakiness.

    This code does not work because the function FIND-ARPANET-NAMESPACE is not
    defined in rel 5.2.  Could you please send a working patch over here
    forthwith.  #$%!!^$%!!! I had to fix it to send this message!

Here is the current version of the code.  This will be part of the
forthcoming (really) TCP/IP distribution.

	- - - - - - - - - -

;;; -*- Mode: LISP; Patch-File: T; Package: Mailer; Base: 10; Patch-file: Yes -*-

(defun find-arpanet-namespace ()
  (condition-case ()
      (neti:find-namespace-named :internet)
    (net:object-not-found nil)))

(defun find-arpanet-network ()
  (condition-case ()
      (net:find-object-named :network "INTERNET|INTERNET")
    (net:object-not-found nil)))

(defun arpanet-mail-gateway-host (host)
  (block found
    (let ((arpanet-namespace (find-arpanet-namespace)))
      (when arpanet-namespace
	(with-stack-list (*namespace-search-list* arpanet-namespace)
	  (loop with site = (send host :site)
		for (network) in (send host :address) doing
	    (with-stack-list (address network :*)
	      (with-stack-list (address address)
		(dolist (system-type '(:lispm :its :tops-20))
		  (dolist (host (find-objects-from-property-list
				  :host :site site :system-type system-type :address address
				  :service '((:store-and-forward-mail :* :*))))
		    (when (loop for name in (send host :names)
				thereis (eq (send name :namespace) arpanet-namespace))
		      (return-from found host))))))))))))

 6-Nov-84 12:21:59-EST,2082;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 6 Nov 84 12:19-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 121777; Tue 6-Nov-84 12:21:15-EST
Date: Tuesday, 6 November 1984, 12:19-EST
From: David C. Plummer in disguise <DCP at SCRC-TENEX>
Subject: echoing of Read in M-C-Sh-E
To: Yishai A. Feldman <YISHAI at MIT-OZ>, BUG-LISPM at MIT-OZ
cc: RICH at MIT-OZ
In-Reply-To: The message of 17 Sep 84 17:47-EDT from Yishai A. Feldman <YISHAI at MIT-OZ>
Message-ID: <841106121922.5.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Monday, 17 September 1984, 22:48-EDT
    From: Carl Hoffman <CWH at SCRC-TENEX>

	Date: Monday, 17 September 1984, 18:10-EDT
	From: David C. Plummer <DCP at SCRC-TENEX>

	    Date: Monday, 17 September 1984, 17:47-EDT
	    From: Yishai A. Feldman <YISHAI at MIT-OZ>
	
	    In Release 5.1, Experimental MIT 1.4, on Lisp Machine Bing Crosby (3600):
	
	    It is odd that if you evaluate a form in the buffer (using M-C-Sh-E) in which
	    a read is to be evaluated, the characters typed to the read are not echoed
	    in the temporary pop-down screen (even if it has already been established).
	    Note that the read does in fact receive the characters.  This can be
	    demonstrated by simply typing the form
	
	    (PROGN (PRINT T) (READ))
	
	    into an empty buffer and then typing M-C-Sh-E.

	Popping down a typeout window for standard-output doesn't necessarily
	mean that standard-input will be set to something similar.  Try the
	following: ...

    That doesn't make it any less of a bug.  All you are saying is that binding
    STANDARD-OUTPUT doesn't necessarily cause STANDARD-INPUT to also be bound.
    That is an internal implementation detail of the editor; you aren't addressing
    the problem for the user's point of view.  I think this should be fixed.

OK.  In 265.164 (which will be part of Release 6, but probably not the
Beta-I version), ZWEI:COMPILE-INTERVAL binds STANDARD-INPUT to
*TYPEOUT-WINDOW* (not *TYPEIN-WINDOW*, which is the minibuffer).
 6-Nov-84 13:37:25-EST,3461;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 6 Nov 84 13:36-EST
Date: Tuesday, 6 November 1984, 13:37-EST
From: Kent M Pitman <kmp at MIT-MC>
Subject: m-X Set Expiration Date in Rel4 ZMail
To: BUG-LISPM at OZ

In ZMail in Symbolics 3600 Release 4.5, ... on Merlin:

I did m-X Set Expiration Date on a message, where the
default was November 7, 1984 and said "2pm 8 Nov 84",
getting the following error. I got a similar error for 
"8 Nov 84 2pm".

>>Trap: The first argument given to SYS:--INTERNAL,
        (2677528380. 2677525680.), was not a number.
        While in the function 
	   TIME:DECODE-UNIVERSAL-TIME-WITHOUT-DST
	  TIME:DECODE-UNIVERSAL-TIME
 	  ZWEI:PRINT-DATE-HEADER

TIME:DECODE-UNIVERSAL-TIME-WITHOUT-DST:  (P.C. = 15)
   Arg 0 (UNIVERSAL-TIME): (2677528380. 2677525680.)
   Arg 1 (TIMEZONE): 5.
   Local 2 (X): NIL
   Local 3 (SECS): NIL
   Local 4 (MINUTES): NIL
   Local 5 (HOURS): NIL
   Local 6 (DAY): NIL
   Local 7 (MONTH): NIL
   Local 8 (YEAR): NIL
   Local 9 (B): (2677528380. 2677525680.)
   Local 10 (A): 18000.
   Local 11 (C): #<DTP-ODD-PC 11330360>

TIME:DECODE-UNIVERSAL-TIME:  (P.C. = 33)
   Arg 0 (UNIVERSAL-TIME): (2677528380. 2677525680.)
   --Defaulted args:--
   Arg 1 (TIMEZONE): NIL

ZWEI:PRINT-DATE-HEADER:  (P.C. = 4)
   Arg 0 (STREAM): #<INTERVAL-STREAM 16024412>
   Arg 1 (DATE): (2677528380. 2677525680.)
   Arg 2 (NAME): "Date"
   Arg 3 (EXPANSION): (HEADERS (FROM ((NAME "Henry" HOST ** INTERVAL **)) 
				DATE 2677528435.
				SUBJECT "Seminar announcement" 
				DATE (2677528380. 2677525680.) 
				FROM ((NAME "Henry" HOST ** INTERVAL **) 
				      (NAME "Henry" HOST ** INTERVAL **)) ...))
   Arg 4 (IGNORE): 72.

ZWEI:PRINT-HEADER:  (P.C. = 43)
   Arg 0 (STREAM): #<INTERVAL-STREAM 16024412>
   Arg 1 (HEADER): (2677528380. 2677525680.)
   Arg 2 (TYPE): DATE
   Arg 3 (EXPANSION): (HEADERS (FROM ((NAME "Henry" HOST ** INTERVAL **)) 
				DATE 2677528435.
				SUBJECT "Seminar announcement" 
				DATE (2677528380. 2677525680.) 
				FROM ((NAME "Henry" HOST ** INTERVAL **) 
				      (NAME "Henry" HOST ** INTERVAL **)) ...))
   --Defaulted args:--
   Arg 4 (MAX-COL): 72.

ZWEI:OUTPUT-HEADERS:  (P.C. = 43)
   Arg 0 (STREAM): #<INTERVAL-STREAM 16024412>
   Arg 1 (TEMPLATE-EXPANSION): (HEADERS (FROM ((NAME "Henry" HOST ** INTERVAL **))
				DATE 2677528435.
				SUBJECT "Seminar announcement"
				DATE (2677528380. 2677525680.)
				FROM ((NAME "Henry" HOST ** INTERVAL **)
				      (NAME "Henry" HOST ** INTERVAL **)) ...))
   --Defaulted args:--
   Arg 2 (CR-AT-END): NIL

ZWEI:ADD-HEADER-TO-MSG:  (P.C. = 60)
   Arg 0 (MSG): #<MSG 11140024>
   Arg 1 (TYPE): EXPIRATION-DATE
   Arg 2 (PROP): 2677777200.
   Arg 3 (DELETE-IF-EMPTY-P): T

ZWEI:COM-SET-EXPIRATION-DATE:  (P.C. = 21)

ZWEI:COM-ZMAIL-EXTENDED-COMMAND:  (P.C. = 43)

Rest of stack:
ZWEI:COMMAND-EXECUTE:  (P.C. = 65)
ZWEI:ZMAIL-COMMAND-EXECUTE:  (P.C. = 6)
(METHOD ZWEI:ZMAIL-FRAME PROCESS-COMMAND-CHAR):  (P.C. = 7)
(INTERNAL (METHOD ZWEI:ZMAIL-FRAME COMBINED PROCESS-COMMAND-CHAR) 0.):  (P.C. = 7)
(METHOD ZWEI:ZMAIL-COMMAND-LOOP-MIXIN WHOPPER PROCESS-COMMAND-CHAR):  (P.C. = 21)
(METHOD ZWEI:ZMAIL-FRAME COMBINED PROCESS-COMMAND-CHAR):  (P.C. = 12)
(METHOD ZWEI:ZMAIL-FRAME COMMAND-LOOP):  (P.C. = 143)
(METHOD ZWEI:ZMAIL-FRAME COMBINED COMMAND-LOOP):  (P.C. = 45)
ZWEI:ZMAIL-PROCESS-TOP-LEVEL:  (P.C. = 56)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
 6-Nov-84 14:14:21-EST,1441;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 6 Nov 84 14:12-EST
Date: Tuesday, 6 November 1984, 14:11-EST
From: Kent M Pitman <kmp at MIT-MC>
Subject: What you see ain't always what you get (Rel4 ZMail)
To: BUG-LISPM at OZ
Cc: USER-INTERFACE at SCRC, ECC at OZ, KMP at MC

In Zmail in Symbolics 3600 Release 4.5 ... on Merlin:

I just SURVEYed a bunch of messages and mistakenly thought
I was viewing a collection (when in fact my "collection" 
hadn't changed and I was just looking at a typeout window).
Then I did Map Over (thinking I was referring to the 
messages in view) adding the keyword "CommonLisp". Rather 
than adding the keyword I'd given to the messages in view,
it added that keyword to all 450 of my messages. I tried
m-X Undo, but there isn't one. Figuring I was better off
at this point with nothing labelled CommonLisp, I tried
the Map Over menu to see if there was a way to remove
keywords via map, but there is not. Then I  thought of
writing a keyboard macro to map over messages by doing 
  c-X ( -L CommonLisp <Return> c-N c-X )
but of course c-X is not in the Zmail comtab (at least in
Rel4).

A good command interface should not make it so easy to make
a not-trivially-recoverable mistake like this.

Fortunately, I can write my file and go back to ZBabyl on
ITS and use its map command to remove all the labels. I
don't know why I didn't just use ZBabyl in the first place.

-kmp
 6-Nov-84 16:37:26-EST,5758;000000000000
Received: from MIT-LISPM-4 by MIT-OZ via Chaosnet; 6 Nov 84 16:36-EST
Date: Tuesday, 6 November 1984, 16:38-EST
From: David M. J. Saslav <SAZ at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In Experimental System 99.9, CADR 4.0, Experimental ZMail 54.2,
MIT-Specific 23.0, microcode 320, GC@2, on Lisp Machine Four:


Insert your description of the circumstances here:

Merely trying to save a file...I was doing some compiling, and at one point
decided not to save out before trying a compile of an altered file.

However, that shouldn't have mattered...

>>ERROR: File is not open (at 10500 inside FILE server) for OZ:OZ:<SAZ.HARMONY>CHORD-CONSTRUCTION.LISP
Backtrace from the debugger:

FS:FILE-PROCESS-ERROR (P.C. = 90)

 Arg 0 (CONDITION-NAME): NIL
 Arg 1 (ERROR-STRING): "File is not open (at 10500 inside FILE server) for OZ:OZ:<SAZ.HARMONY>CHORD-CONSTRUCTION.LISP"
 Arg 2 (PATHNAME-OR-STREAM): #FS:TOPS20-PATHNAME "OZ:OZ:<SAZ.HARMONY>CHORD-CONSTRUCTION.LISP"
 Arg 3 (PROCEEDABLE): NIL
 Arg 4 (NOERROR): NIL
 Rest arg (MAKE-CONDITION-ARGS): (:OPEN)
Local 1 (WHO-FOR): #FS:TOPS20-PATHNAME "OZ:OZ:<SAZ.HARMONY>CHORD-CONSTRUCTION.LISP"
Local 2 (CONDITION): #FS:FILE-OPERATION-FAILURE :PROPERTY-LIST (:PATHNAME #FS:TOPS20-PATHNAME "OZ:OZ:<SAZ.HARMONY>CHORD-CONSTRUCTION.LISP" :OPERATION :OPEN) :CONDITION-NAMES (FS:FILE-OPERATION-FAILURE FS:FILE-ERROR ERROR CONDITION ...) :FORMAT-STRING "~A" :FORMAT-ARGS ("File is not open (at 10500 inside FILE server) for OZ:OZ:<SAZ.HARMONY>CHORD-CONSTRUCTION.LISP") :PATHNAME #FS:TOPS20-PATHNAME "OZ:OZ:<SAZ.HARMONY>CHORD-CONSTRUCTION.LISP" :OPERATION :OPEN


FS:QFILE-PROCESS-ERROR-NEW (P.C. = 130)

 Arg 0 (STRING): "O1614 ERROR BUG F File is not open (at 10500 inside FILE server)"
 Arg 1 (PATHNAME-OR-STREAM): #FS:TOPS20-PATHNAME "OZ:OZ:<SAZ.HARMONY>CHORD-CONSTRUCTION.LISP"
 Arg 2 (PROCEEDABLE): NIL
 Arg 3 (NOERROR): NIL
 Rest arg (MAKE-CONDITION-ARGS): (:OPEN)
Local 1 (S-P): 17
Local 2 (ERROR-CODE): "BUG"
Local 3 (ERROR-SEVERITY): "F"
Local 4 (ERROR-STRING): "File is not open (at 10500 inside FILE server)"
Local 5 (WHO-FOR): #FS:TOPS20-PATHNAME "OZ:OZ:<SAZ.HARMONY>CHORD-CONSTRUCTION.LISP"
Local 6 (DEFAULT-CONS-AREA): 32


FS:OPEN-CHAOS (P.C. = 802)

 Arg 0 (ACCESS): #<FS:QFILE-ACCESS Chaos FILE access to MIT-OZ 16523053>
 Arg 1 (FILE): #FS:TOPS20-PATHNAME "OZ:OZ:<SAZ.HARMONY>CHORD-CONSTRUCTION.LISP"
 Arg 2 (PATHNAME): #FS:TOPS20-PATHNAME "OZ:OZ:<SAZ.HARMONY>CHORD-CONSTRUCTION.LISP"
 Rest arg (OPTIONS): (:DIRECTION :OUTPUT)
Local 1 (DIRECTION): :OUTPUT
Local 2 (CHARACTERS): T
Local 3 (ERROR): T
Local 4: (NIL)
Local 5: (NIL)
Local 6: (NIL)
Local 7: (NIL)
Local 8 (TEMPORARY): NIL
Local 9 (DELETED): NIL
Local 10 (RAW): NIL
Local 11 (SUPER-IMAGE): NIL
Local 12 (BYTE-SIZE): :DEFAULT
Local 13 (PRESERVE-DATES): NIL
Local 14 (INHIBIT-LINKS): NIL
Local 15 (SUBMIT): NIL
Local 16 (ESTIMATED-LENGTH): NIL
Local 17 (ELEMENT-TYPE-P): NIL
Local 18 (ACCESS-ERROR): NIL
Local 19 (ELEMENT-TYPE): STRING-CHAR
Local 20 (IF-EXISTS): :NEW-VERSION
Local 21 (IF-DOES-NOT-EXIST): :CREATE
Local 22 (HOST-UNIT): #<FS:QFILE-HOST-UNIT for Chaos FILE access to MIT-OZ 16523056>
Local 23 (DATA-CONN): (#<CHAOS Connection 33241467> "I1613" "O1614" 4388900 ...)
Local 24 (PKT): #<CHAOS packet :STRING "T1640 O1614 ERROR BUG F File is not open (at 10500 inside FILE server)" :STATUS NIL 33264732>
Local 25 (SUCCESS): NIL
Local 26 (STRING): "O1614 ERROR BUG F File is not open (at 10500 inside FILE server)"
Local 27 (NOT-ABORTED): T
Local 28 (PHONY-CHARACTERS): NIL
Local 29 (SIGN-EXTEND-BYTES): NIL
Local 30 (IF-EXISTS-P): NIL
Local 31 (.SELECTQ.ITEM.): :NEWEST
Local 32 (ERROR-OBJECT): (#<CHAOS Connection 33241467> "I1613" "O1614" 4388900 ...)
Local 33: ((FS:FILE-NOT-FOUND SI:CONDITION-CASE-THROW FS:G3666) (# SI:FILE-RETRY-HANDLER #FS:TOPS20-PATHNAME "OZ:OZ:<SAZ.HARMONY>CHORD-CONSTRUCTION.LISP" ZWEI:G1926))
Local 34: (FS:FILE-NOT-FOUND SI:CONDITION-CASE-THROW FS:G3666)
Local 35: (FS:FILE-ALREADY-EXISTS SI:CONDITION-CASE-THROW FS:G3673)
Local 36: ((FS:FILE-ALREADY-EXISTS SI:CONDITION-CASE-THROW FS:G3673) (# SI:FILE-RETRY-HANDLER #FS:TOPS20-PATHNAME "OZ:OZ:<SAZ.HARMONY>CHORD-CONSTRUCTION.LISP" ZWEI:G1926))
Local 37 (PROPERTIES): NIL
Local 38 (ERROR-OBJECT): NIL
Local 39 (IGNORE): NIL


(:METHOD FS:QFILE-ACCESS :OPEN) (P.C. = 26)
  (SELF is #<FS:QFILE-ACCESS Chaos FILE access to MIT-OZ 16523053>)

 Arg 0 (.OPERATION.): :OPEN
 Arg 1 (FILE): #FS:TOPS20-PATHNAME "OZ:OZ:<SAZ.HARMONY>CHORD-CONSTRUCTION.LISP"
 Arg 2 (PATHNAME): #FS:TOPS20-PATHNAME "OZ:OZ:<SAZ.HARMONY>CHORD-CONSTRUCTION.LISP"
 Rest arg (OPTIONS): (:DIRECTION :OUTPUT)


(:METHOD FS:FILE-HOST-MIXIN :ACCESS-OPERATION) (P.C. = 25)
  (SELF is #FS:TOPS20-HOST "MIT-OZ")

 Arg 0 (.OPERATION.): :ACCESS-OPERATION
 Arg 1 (OP): :OPEN
 Rest arg (ARGS): (#FS:TOPS20-PATHNAME "OZ:OZ:<SAZ.HARMONY>CHORD-CONSTRUCTION.LISP" #FS:TOPS20-PATHNAME "OZ:OZ:<SAZ.HARMONY>CHORD-CONSTRUCTION.LISP" :DIRECTION :OUTPUT)


Remainder of stack:

(:METHOD FS:HOST-PATHNAME :OPEN) (P.C. = 31)
OPEN (P.C. = 155)
ZWEI:WRITE-FILE-INTERNAL (P.C. = 151)
ZWEI:SAVE-BUFFER (P.C. = 117)
ZWEI:COM-SAVE-FILE (P.C. = 49)
ZWEI:COMMAND-EXECUTE (P.C. = 92)
ZWEI:MAKE-EXTENDED-COMMAND-INTERNAL (P.C. = 58)
ZWEI:COMMAND-EXECUTE (P.C. = 92)
ZWEI:PROCESS-COMMAND-CHAR (P.C. = 61)
(:METHOD ZWEI:WINDOW :PROCESS-COMMAND-CHAR) (P.C. = 20)
(:METHOD ZWEI:WINDOW :EDIT) (P.C. = 307)
(:INTERNAL (:METHOD ZWEI:ZMACS-WINDOW :COMBINED :EDIT) 0) (P.C. = 60)
FUNCALL (P.C. = 21)
(:METHOD ZWEI:DISPLAYER :AROUND :EDIT) (P.C. = 25)
(:METHOD ZWEI:ZMACS-WINDOW :COMBINED :EDIT) (P.C. = 39)
ZWEI:ZMACS-WINDOW-TOP-LEVEL (P.C. = 38)
SI:PROCESS-TOP-LEVEL (P.C. = 115)
 6-Nov-84 16:41:32-EST,5885;000000000000
Received: from MIT-LISPM-4 by MIT-OZ via Chaosnet; 6 Nov 84 16:40-EST
Date: Tuesday, 6 November 1984, 16:42-EST
From: David M. J. Saslav <SAZ at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In Experimental System 99.9, CADR 4.0, Experimental ZMail 54.2,
MIT-Specific 23.0, microcode 320, GC@2, on Lisp Machine Four:


Insert your description of the circumstances here:

Holy Shit, Batman!  I figured just MAYBE it was due to the fact that
I was trying to save into a subdir rather than top level <SAZ>, so I
tried a new pathname, identical except for the directory.  

A while back, I recall now, I was stopped from writing into the subdir
due to insuff write access, but that's also odd, eh?  Let's fix this, huh?

>>TRAP 1201 (THROW-TRAP)
There was no pending *CATCH for the tag #FS:TOPS20-PATHNAME "OZ:OZ:<SAZ>CHORD-CONSTRUCTION.LISP".
The value being thrown was USER:G0754.Backtrace from the debugger:

SI:FILE-RETRY-RESUME-HANDLER (P.C. = 25)

 Arg 0 (ERROR-OBJECT): #FS:FILE-OPERATION-FAILURE :PROPERTY-LIST (:PATHNAME #FS:TOPS20-PATHNAME "OZ:OZ:<SAZ.HARMONY>CHORD-CONSTRUCTION.LISP" :OPERATION :OPEN) :CONDITION-NAMES (FS:FILE-OPERATION-FAILURE FS:FILE-ERROR ERROR CONDITION ...) :FORMAT-STRING "~A" :FORMAT-ARGS ("File is not open (at 10500 inside FILE server) for OZ:OZ:<SAZ.HARMONY>CHORD-CONSTRUCTION.LISP") :PATHNAME #FS:TOPS20-PATHNAME "OZ:OZ:<SAZ.HARMONY>CHORD-CONSTRUCTION.LISP" :OPERATION :OPEN
 Arg 1 (NEW-PATHNAME): USER:G0754
 Arg 2 (TAG): #FS:TOPS20-PATHNAME "OZ:OZ:<SAZ>CHORD-CONSTRUCTION.LISP"


CALL (P.C. = 154)

 Arg 0 (FN): SI:FILE-RETRY-RESUME-HANDLER
 Rest arg (ALTERNATES): (NIL #FS:FILE-OPERATION-FAILURE :PROPERTY-LIST (:PATHNAME #FS:TOPS20-PATHNAME "OZ:OZ:<SAZ.HARMONY>CHORD-CONSTRUCTION.LISP" :OPERATION :OPEN) :CONDITION-NAMES (FS:FILE-OPERATION-FAILURE FS:FILE-ERROR ERROR CONDITION ...) :FORMAT-STRING "~A" :FORMAT-ARGS ("File is not open (at 10500 inside FILE server) for OZ:OZ:<SAZ.HARMONY>CHORD-CONSTRUCTION.LISP") :PATHNAME #FS:TOPS20-PATHNAME "OZ:OZ:<SAZ.HARMONY>CHORD-CONSTRUCTION.LISP" :OPERATION :OPEN :SPREAD (USER:G0754) ...)
Local 1 (MAX-ARGS): 0
Local 2 (ARGS-INF): 131203
Local 3 (Y): NIL
Local 4 (OPTIONAL-FLAG): NIL
Local 5 (SPREAD-FLAG): NIL
Local 6: NIL
Local 7 (X): #FS:TOPS20-PATHNAME "OZ:OZ:<SAZ>CHORD-CONSTRUCTION.LISP"


EH:INVOKE-RESUME-HANDLER (P.C. = 42)

 Arg 0 (CONDITION): #FS:FILE-OPERATION-FAILURE :PROPERTY-LIST (:PATHNAME #FS:TOPS20-PATHNAME "OZ:OZ:<SAZ.HARMONY>CHORD-CONSTRUCTION.LISP" :OPERATION :OPEN) :CONDITION-NAMES (FS:FILE-OPERATION-FAILURE FS:FILE-ERROR ERROR CONDITION ...) :FORMAT-STRING "~A" :FORMAT-ARGS ("File is not open (at 10500 inside FILE server) for OZ:OZ:<SAZ.HARMONY>CHORD-CONSTRUCTION.LISP") :PATHNAME #FS:TOPS20-PATHNAME "OZ:OZ:<SAZ.HARMONY>CHORD-CONSTRUCTION.LISP" :OPERATION :OPEN
 Arg 1 (PROCEED-TYPE): :NEW-PATHNAME
 Rest arg (ARGS): (#FS:TOPS20-PATHNAME "OZ:OZ:<SAZ>CHORD-CONSTRUCTION.LISP")
Local 1 (H): ((FS:FILE-ERROR) :NEW-PATHNAME T ("Try again with a new pathname, not telling the callers.") ...)


SIGNAL-CONDITION (P.C. = 206)

 Arg 0 (CONDITION): #FS:FILE-OPERATION-FAILURE :PROPERTY-LIST (:PATHNAME #FS:TOPS20-PATHNAME "OZ:OZ:<SAZ.HARMONY>CHORD-CONSTRUCTION.LISP" :OPERATION :OPEN) :CONDITION-NAMES (FS:FILE-OPERATION-FAILURE FS:FILE-ERROR ERROR CONDITION ...) :FORMAT-STRING "~A" :FORMAT-ARGS ("File is not open (at 10500 inside FILE server) for OZ:OZ:<SAZ.HARMONY>CHORD-CONSTRUCTION.LISP") :PATHNAME #FS:TOPS20-PATHNAME "OZ:OZ:<SAZ.HARMONY>CHORD-CONSTRUCTION.LISP" :OPERATION :OPEN
 Arg 1 (CONDITION-PROCEED-TYPES): NIL
   --Defaulted args:--
 Arg 2 (USE-DEBUGGER): T
 Arg 3 (UCODE-ERROR-STATUS): NIL
 Arg 4 (INHIBIT-RESUME-HANDLERS): NIL
Local 0 (TEM1): (:NEW-PATHNAME #FS:TOPS20-PATHNAME "OZ:OZ:<SAZ>CHORD-CONSTRUCTION.LISP")
Local 1 (CONDITION-NAMES): (FS:FILE-OPERATION-FAILURE FS:FILE-ERROR ERROR CONDITION ...)
Local 2 (DEBUGGER-CALLED): T
Local 3: NIL
Local 4 (C): NIL


SIGNAL (P.C. = 88)

 Arg 0 (SIGNAL-NAME-OR-CONDITION-OBJECT): #FS:FILE-OPERATION-FAILURE :PROPERTY-LIST (:PATHNAME #FS:TOPS20-PATHNAME "OZ:OZ:<SAZ.HARMONY>CHORD-CONSTRUCTION.LISP" :OPERATION :OPEN) :CONDITION-NAMES (FS:FILE-OPERATION-FAILURE FS:FILE-ERROR ERROR CONDITION ...) :FORMAT-STRING "~A" :FORMAT-ARGS ("File is not open (at 10500 inside FILE server) for OZ:OZ:<SAZ.HARMONY>CHORD-CONSTRUCTION.LISP") :PATHNAME #FS:TOPS20-PATHNAME "OZ:OZ:<SAZ.HARMONY>CHORD-CONSTRUCTION.LISP" :OPERATION :OPEN
 Rest arg (ARGS): (:PROCEED-TYPES NIL)
Local 1: NIL
Local 2 (PROCEED-TYPES-P): T
Local 3 (PROCEED-TYPES): NIL
Local 4 (CONDITION): #FS:FILE-OPERATION-FAILURE :PROPERTY-LIST (:PATHNAME #FS:TOPS20-PATHNAME "OZ:OZ:<SAZ.HARMONY>CHORD-CONSTRUCTION.LISP" :OPERATION :OPEN) :CONDITION-NAMES (FS:FILE-OPERATION-FAILURE FS:FILE-ERROR ERROR CONDITION ...) :FORMAT-STRING "~A" :FORMAT-ARGS ("File is not open (at 10500 inside FILE server) for OZ:OZ:<SAZ.HARMONY>CHORD-CONSTRUCTION.LISP") :PATHNAME #FS:TOPS20-PATHNAME "OZ:OZ:<SAZ.HARMONY>CHORD-CONSTRUCTION.LISP" :OPERATION :OPEN


Remainder of stack:

FS:FILE-PROCESS-ERROR (P.C. = 90)
FS:QFILE-PROCESS-ERROR-NEW (P.C. = 130)
FS:OPEN-CHAOS (P.C. = 802)
(:METHOD FS:QFILE-ACCESS :OPEN) (P.C. = 26)
(:METHOD FS:FILE-HOST-MIXIN :ACCESS-OPERATION) (P.C. = 25)
(:METHOD FS:HOST-PATHNAME :OPEN) (P.C. = 31)
OPEN (P.C. = 155)
ZWEI:WRITE-FILE-INTERNAL (P.C. = 151)
ZWEI:SAVE-BUFFER (P.C. = 117)
ZWEI:COM-SAVE-FILE (P.C. = 49)
...
ZWEI:PROCESS-COMMAND-CHAR (P.C. = 61)
(:METHOD ZWEI:WINDOW :PROCESS-COMMAND-CHAR) (P.C. = 20)
(:METHOD ZWEI:WINDOW :EDIT) (P.C. = 307)
(:INTERNAL (:METHOD ZWEI:ZMACS-WINDOW :COMBINED :EDIT) 0) (P.C. = 60)
FUNCALL (P.C. = 21)
(:METHOD ZWEI:DISPLAYER :AROUND :EDIT) (P.C. = 25)
(:METHOD ZWEI:ZMACS-WINDOW :COMBINED :EDIT) (P.C. = 39)
ZWEI:ZMACS-WINDOW-TOP-LEVEL (P.C. = 38)
SI:PROCESS-TOP-LEVEL (P.C. = 115)
 6-Nov-84 18:06:01-EST,905;000000000000
Received: from SWW-WHITE by MIT-OZ via Chaosnet; 6 Nov 84 18:05-EST
Received: from SWW-GREEN by SWW-WHITE via CHAOS with CHAOS-MAIL id 54398; Tue 6-Nov-84 14:23:17-PST
Date: Tuesday, 6 November 1984, 15:28-PST
From: Craig W. Reynolds <cwr at SWW-WHITE>
Subject: What you see ain't always what you get (Rel4 ZMail)
To: Kent M Pitman <kmp at MIT-MC>
Cc: BUG-LISPM at MIT-OZ, USER-INTERFACE at SCRC-TENEX, ECC at MIT-OZ
In-reply-to: The message of 6 Nov 84 11:11-PST from Kent M Pitman <kmp at MIT-MC>

    Date: Tuesday, 6 November 1984, 14:11-EST
    From: Kent M Pitman <kmp at MIT-MC>

    In Zmail in Symbolics 3600 Release 4.5 ... on Merlin:

    ... I tried the Map Over menu to see if there was a way to remove
    keywords via map, but there is not. ...

Maybe I don't understand what you are asking, but what's wrong with 
[R: Map Over / Unkeywords], I mean besides the grammer?
 6-Nov-84 22:35:02-EST,6450;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 6 Nov 84 22:34-EST
Date: Tuesday, 6 November 1984, 22:36-EST
From: sr.ehpyc at MIT-SPEECH
Sender: sr.krohn at MIT-SPEECH
Subject: Can't do backups of Goldy
To: BUG-LISPM at MIT-OZ
Cc: jtw at MIT-SPEECH, sr.jack at MIT-SPEECH

In Symbolics 3600 Release 5.2, ZOO 3.3, ZOO-KEEPER 3.2, Spire-Macros 3.8,
Versatec 3.0, Print 34.3, Experimental Versatec-Spool 4.0, FEP 18, on Lisp Machine Goldilocks:

This has been happenning for at least a week and a half on multi tape backups.
When the tape reaches its end, speech closes the connection, with the tape not
rewound, leaving the backing up in this error.  This happens in Rel 5.1 on an
LM2, and in 5.2 on a 3600, it always happens, and network flakiness and
hardware flakiness have been eliminated.  JTW reassembled the RTAPE server
today, but that didn't fix things.  Any ideas what is wrong?

>>Error: Attempt to send a packet to CHAOS Connection for RTAPE to SPEECH,
          which was closed by SPEECH.
         No reason was given.
While in the function CHAOS:BAD-CHAOS-CONNECTION-STATE  CHAOS:SEND-PKT  (:DEFUN-METHOD CHAOS:SEND-CHARACTER-PKT)

CHAOS:BAD-CHAOS-CONNECTION-STATE:  (P.C. = 62)
   Arg 0 (CONN): #<CHAOS Connection for RTAPE to SPEECH 76515456>
   Arg 1 (ATTEMPT): "send a packet to"
   Local 2 (STATE): CHAOS:CLS-RECEIVED-STATE
   Local 3 (PKT): #<Chaos Packet 3700602>

CHAOS:SEND-PKT:  (P.C. = 14)
   Arg 0 (CONN): #<CHAOS Connection for RTAPE to SPEECH 76515456>
   Arg 1 (PKT): #<Chaos Packet 3705472>
   Arg 2 (OPCODE): 200
   Arg 3 (STREAM): #<CHARACTER-STREAM 116431564>

(:DEFUN-METHOD CHAOS:SEND-CHARACTER-PKT):  (P.C. = 25)
   Arg 0 (SELF): #<CHARACTER-STREAM 116431564>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor CHAOS:CHARACTER-OUTPUT-STREAM-MIXIN -- 2. IV's, 0. FL's 45703364>
   Arg 2 (IGNORE): :SEND-OUTPUT-BUFFER
   Arg 3 (IGNORE): "ete: golf2 at 5//29//84 09:13:27 
  Capri s-4-27.qbin.1               (2//24//84 14:47:32 by Francine) on GOLFUL00, 21:06
               Previous dump tapes: Complete: golf2 at 5//29//84 09:13:28 
  capris-4-28.lisp.1               (2//25//84 16:42:21 by Francine) on GOLFUL00, 21:06
               Previous dump tapes: Complete: golf2 at 5//29//84 09:13:30 
  Capris-4-28.qbin.1               (2//25//84 16:42:38 by Francine) on GOLFUL00, 21:06
               Previous dump tapes: Complete: golf2 wIMw{p>E                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                "
   Arg 4 (LIMIT): 752

(:METHOD CHAOS:CHARACTER-OUTPUT-STREAM-MIXIN :SEND-OUTPUT-BUFFER):  (P.C. = 10)
   Arg 0 (SELF): #<CHARACTER-STREAM 116431564>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor CHAOS:CHARACTER-OUTPUT-STREAM-MIXIN -- 2. IV's, 0. FL's 45703364>
   Arg 2 (OPERATION): :SEND-OUTPUT-BUFFER
   Rest arg (.ARGS.): NIL

(:METHOD SI:BASIC-BUFFERED-OUTPUT-STREAM :SEND-CURRENT-OUTPUT-BUFFER):  (P.C. = 12)
   Arg 0 (SELF): #<CHARACTER-STREAM 116431564>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:BASIC-BUFFERED-OUTPUT-STREAM -- 3. IV's, 0. FL's 45703304>
   Arg 2 (OPERATION): :SEND-CURRENT-OUTPUT-BUFFER

(:METHOD CHAOS:CHARACTER-STREAM :COMBINED :SEND-CURRENT-OUTPUT-BUFFER):  (P.C. = 16)
   Arg 0 (SELF): #<CHARACTER-STREAM 116431564>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor CHAOS:CHARACTER-STREAM -- 0. IV's, 10. FL's 45703341>
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

(:METHOD SI:BUFFERED-FAST-STRING-OUT-MIXIN :STRING-OUT):  (P.C. = 56)
   Arg 0 (SELF): #<CHARACTER-STREAM 116431564>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:BUFFERED-FAST-STRING-OUT-MIXIN -- 3. IV's, 0. FL's 45703425>
   Arg 2 (OPERATION): :STRING-OUT
   Arg 3 (STRING): #<ART-8B-10000 105020041>
   Arg 4 (START): 0
   Arg 5 (END): 10000

(:METHOD SI:RECORD-STREAM-OUTPUT-MIXIN :WRITE-RECORD):  (P.C. = 24)
   Arg 0 (SELF): #<RECORD-STREAM-CHARACTER-IO-STREAM 116431603>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:RECORD-STREAM-OUTPUT-MIXIN -- 6. IV's, 0. FL's 1047644>
   Arg 2 (OPERATION): :WRITE-RECORD
   Arg 3 (OP): 5
   Arg 4 (STRING): #<ART-8B-10000 105020041>
   Arg 5 (FIRST): 0
   Arg 6 (END): 10000

Rest of stack:
(:DEFUN-METHOD TAPE:REMOTE-TAPE-OUTPUT-MIXIN-WRITE-RECORD):  (P.C. = 104)
TAPE:REMOTE-TAPE-OUTPUT-MIXIN-WRITE-RECORD:  (P.C. = 12)
(:METHOD TAPE:REMOTE-TAPE-OUTPUT-MIXIN :SEND-OUTPUT-BUFFER):  (P.C. = 21)
(:METHOD SI:BASIC-BUFFERED-OUTPUT-STREAM :SEND-CURRENT-OUTPUT-BUFFER):  (P.C. = 12)
(:METHOD SI:BUFFERED-FAST-STRING-OUT-MIXIN :STRING-OUT):  (P.C. = 56)
LMFS:DUMP-FILE-RECORDS-TO-TAPE:  (P.C. = 140)
LMFS:DUMP-FILE:  (P.C. = 154)
LMFS:DUMP-LIST-OF-FILES:  (P.C. = 137)
LMFS:DUMP-RECURSE:  (P.C. = 132)
LMFS:DUMP-RECURSE:  (P.C. = 244)
LMFS:BACKUP-DUMP-ROOT-NODES:  (P.C. = 22)
LMFS:BACKUP-DUMP-I:  (P.C. = 57)
LMFS:BACKUP-DUMPER:  (P.C. = 435)
(:METHOD LMFS:FSMAINT-FRAME :EXECUTE):  (P.C. = 267)
(:METHOD LMFS:FSMAINT-FRAME :INTERPRET-INPUT):  (P.C. = 167)
(:METHOD LMFS:FSMAINT-FRAME :FSMAINT-TOP-LEVEL):  (P.C. = 57)
LMFS:FSMAINT-TOP-LEVEL:  (P.C. = 6)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
 7-Nov-84 00:27:08-EST,1691;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 7 Nov 84 00:26-EST
Received: from SCRC-EUPHRATES by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 100001; Wed 7-Nov-84 00:25:06-EST
Date: Wednesday, 7 November 1984, 00:26-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: Can't do backups of Goldy
To: sr.ehpyc at MIT-SPEECH
cc: BUG-LISPM at MIT-OZ, jtw at MIT-SPEECH, sr.jack at MIT-SPEECH
In-Reply-To: The message of 6 Nov 84 22:36-EST from sr.ehpyc at MIT-SPEECH
Message-ID: <841107002624.8.MOON@EUPHRATES.SCRC.Symbolics.COM>

    Date: Tuesday, 6 November 1984, 22:36-EST
    From: sr.ehpyc at MIT-SPEECH

    In Symbolics 3600 Release 5.2, ZOO 3.3, ZOO-KEEPER 3.2, Spire-Macros 3.8,
    Versatec 3.0, Print 34.3, Experimental Versatec-Spool 4.0, FEP 18, on Lisp Machine Goldilocks:

    This has been happenning for at least a week and a half on multi tape backups.
    When the tape reaches its end, speech closes the connection, with the tape not
    rewound, leaving the backing up in this error.  This happens in Rel 5.1 on an
    LM2, and in 5.2 on a 3600, it always happens, and network flakiness and
    hardware flakiness have been eliminated.  JTW reassembled the RTAPE server
    today, but that didn't fix things.  Any ideas what is wrong?

    >>Error: Attempt to send a packet to CHAOS Connection for RTAPE to SPEECH,
	      which was closed by SPEECH.
	     No reason was given.

Presumably the RTAPE server got some error and killed itself.  I don't know
anything about it, but normal Tops-20 debugging techniques (run the RTAPE
server under an IDDT, in a job that you won't miss if it accidentally gets
logged out) might show something.
 7-Nov-84 12:16:04-EST,1043;000000000000
Mail-From: ZVONA created at  7-Nov-84 12:14:46
Date: Wed, 7 Nov 1984  12:14 EST
Message-ID: <ZVONA.12061695954.BABYL@MIT-OZ>
From: ZVONA@MIT-OZ
To:   "David A. Moon" <Moon@SCRC-TENEX>
Cc:   BUG-LISPM@MIT-OZ, bug-tracker@SCRC-STONY-BROOK
Subject: interesting frames
In-reply-to: Msg of 5 Nov 1984 21:22-EST from David A. Moon <Moon at SCRC-TENEX>

    From: David A. Moon <Moon at SCRC-TENEX>
    To:   David Chapman <Zvona>, bug-tracker at SCRC-STONY-BROOK

Thank you for your detailed reply.

    However, I don't think it would do any real harm to change that test to
    	(typep (frame-function new-frame) ':compiled-function)
    if that would make your application work.  Would it?

Alas, no.

    We can probably make this change in Release 6 if discussion determines
    that it is right.  BUG-TRACKER take note, please.

The right thing is for me to redefine the relevant functions myself as
necessary.  I'd hoped that the *uninteresting-functions* variable
would obviate this necessity, but it seems not to.
 7-Nov-84 20:52:40-EST,3548;000000000000
Received: from MIT-LISPM-23 by MIT-OZ via Chaosnet; 7 Nov 84 20:52-EST
Date: Wednesday, 7 November 1984, 20:51-EST
From: The Lisp Machine <LISPM at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In System 98.62, CADR 3.7, ZMail 53.17, MIT-Specific 22.1, microcode 309,
ZM MIT, on Lisp Machine Twenty-three:


(load-and-save-patches)

perhaps this is fixed in a later patch, i'm new here again

>>TRAP 5736 (ARGTYP CONS M-T T CDR CDR) ->  NTHCDR 
The argument to CDR, #<DTP-INSTANCE-HEADER 10736701>, was of the wrong type.
The function expected a cons.
Backtrace from the debugger:

(:METHOD SI:HOST :NETWORK-TYPEP) (P.C. = 25)
  (SELF is #FS:UNIX-CHAOS-HOST ...error printing #<FS:UNIX-CHAOS-HOST 21363500>...)

 Arg 0 (OPERATION): :NETWORK-TYPEP
 Arg 1 (TYPE): :CHAOS


CHAOS:RESET-SAVED-HOST-LISTS (P.C. = 111)

 Arg 0 (DO-ALL-HOSTS): T
 Arg 1 (DO-LOCAL-LISPMS): T
 Arg 2 (DO-ALL-LISPMS): T
Local 0: (("MIT-ATHENA" #FS:UNIX-CHAOS-HOST ...error printing #<FS:UNIX-CHAOS-HOST 21363500>... ** :UNIX ...) ("MIT-ARTEMIS" #SI:UNIX-HOST "MIT-ARTEMIS" ** :UNIX ...) ("MIT-ARES" #SI:UNIX-HOST "MIT-ARES" ** :UNIX ...) ("MIT-APHRODITE" #FS:UNIX-CHAOS-HOST ...error printing #<FS:UNIX-CHAOS-HOST 21363506>... ** :UNIX ...) ...)
Local 1 (H): ("MIT-ATHENA" #FS:UNIX-CHAOS-HOST ...error printing #<FS:UNIX-CHAOS-HOST 21363500>... ("ATHENA" "MIT-ATHENA") :UNIX ...)
Local 2 (ELEM): NIL
Local 3 (TEM): NIL


SI:EVAL1 (P.C. = 1324)

 Arg 0 (FORM): (CHAOS:RESET-SAVED-HOST-LISTS T T T)
   --Defaulted args:--
 Arg 1 (NOHOOK): NIL
Local 0 (ARGNUM): 3
Local 1 (TEM): NIL
Local 2 (ENV): NIL
Local 3 (TAIL): NIL
Local 4 (FCTN): #<DTP-FEF-POINTER CHAOS:RESET-SAVED-HOST-LISTS 30335277>
Local 5 (ARG-DESC): 400003
Local 6 (NUM-ARGS): 3
Local 7 (CLOSURE-PASSED): NIL
Local 8 (LAMBDA-LIST): NIL
Local 9 (LL): NIL
Local 10 (QUOTE-STATUS): NIL
Local 11 (REST-FLAG): NIL
Local 12 (ARGL): NIL
Local 13: NIL
Local 14: NIL
Local 15 (IGNORE): NIL
Local 16 (ADL): NIL
Local 17 (ITEM): NIL
Local 18 (*SELECTQ-ITEM*): NIL


Additional information supplied with call:
 SYSTEM:ADI-FEXPR-CALL

PROGN (P.C. = 71)

 Rest arg (BODY): ((CHAOS:RESET-SAVED-HOST-LISTS T T T) (CHAOS:INITIALIZE-CANONICAL-HOSTAT-ALL-LIST))
Local 1 (DECLS-ENV): (NIL)
Local 2 (L): ((CHAOS:RESET-SAVED-HOST-LISTS T T T) (CHAOS:INITIALIZE-CANONICAL-HOSTAT-ALL-LIST))


SI:EVAL1 (P.C. = 1324)

 Arg 0 (FORM): (PROGN (CHAOS:RESET-SAVED-HOST-LISTS T T T) (CHAOS:INITIALIZE-CANONICAL-HOSTAT-ALL-LIST))
   --Defaulted args:--
 Arg 1 (NOHOOK): NIL
Local 0 (ARGNUM): 0
Local 1 (TEM): NIL
Local 2 (ENV): NIL
Local 3 (TAIL): NIL
Local 4 (FCTN): #<DTP-FEF-POINTER PROGN 30420350>
Local 5 (ARG-DESC): 10000000
Local 6 (NUM-ARGS): 0
Local 7 (CLOSURE-PASSED): NIL
Local 8 (LAMBDA-LIST): NIL
Local 9 (LL): NIL
Local 10 (QUOTE-STATUS): NIL
Local 11 (REST-FLAG): NIL
Local 12 (ARGL): ((CHAOS:RESET-SAVED-HOST-LISTS T T T) (CHAOS:INITIALIZE-CANONICAL-HOSTAT-ALL-LIST))
Local 13: NIL
Local 14: NIL
Local 15 (IGNORE): NIL
Local 16 (ADL): NIL
Local 17 (ITEM): NIL
Local 18 (*SELECTQ-ITEM*): NIL


Remainder of stack:

EVAL (P.C. = 62)
INITIALIZATIONS (P.C. = 135)
UPDATE-SITE-CONFIGURATION-INFO (P.C. = 35)
SI:EVAL1 (P.C. = 1324)
EVAL (P.C. = 62)
MAKE-SYSTEM (P.C. = 246)
LOAD-PATCHES (P.C. = 536)
LOAD-AND-SAVE-PATCHES (P.C. = 252)
SI:EVAL1 (P.C. = 1324)
SI:EVAL-ABORT-TRIVIAL-ERRORS (P.C. = 61)
SI:LISP-TOP-LEVEL1 (P.C. = 426)
SI:LISP-TOP-LEVEL2 (P.C. = 27)
SI:PROCESS-TOP-LEVEL (P.C. = 246)
SI:LISP-TOP-LEVEL (P.C. = 47)
 7-Nov-84 21:30:37-EST,547;000000000000
Mail-From: CJL created at  7-Nov-84 21:29:37
Date: Wed, 7 Nov 1984  21:29 EST
Message-ID: <CJL.12061796962.BABYL@MIT-OZ>
From: Chris Lindblad <CJL@MIT-OZ>
To:   Bug-Symbolics-Hardware@MIT-OZ, Bug-Lispm@MIT-OZ
Subject: Garbage collector on REAGAN

I don't know if this is a software bug, or hardware being broken, but
when (si:full-gc) is run on REAGAN, which looks like it was once
GLACIER, says that it collected 100% of all areas, and then falls into
the FEP. The same world load, GC'd on SID, gc's fine. I suspect broken
hardware. 
 7-Nov-84 23:12:15-EST,2677;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 7 Nov 84 23:11-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 122876; Wed 7-Nov-84 23:13:13-EST
Date: Wednesday, 7 November 1984, 23:11-EST
From: David C. Plummer in disguise <DCP at SCRC-TENEX>
Subject: Resource suggestion
To: Scott Cyphers <sr.ehpyc at MIT-SPEECH>,
    Glenn S. Burke <GSB at MIT-MC>, David C. Plummer <DCP at SCRC-TENEX>,
    bug-lispm at MIT-OZ, GSmith at SCRC-TENEX, RWK at SCRC-TENEX
In-Reply-To: The message of 25 Oct 84 23:28-EDT from Scott Cyphers <sr.ehpyc at MIT-SPEECH>,
             The message of 26 Oct 84 05:05-EDT from Glenn S. Burke <GSB at MIT-MC>,
             <841027181217.3.DCP@NEPONSET.SCRC.Symbolics>
Message-ID: <841107231149.3.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Thursday, 25 October 1984, 23:28-EDT
    From: Scott Cyphers <sr.ehpyc at MIT-SPEECH>

    Sometime when the world gets recompiled, I think it would be useful to
    add another slot to resources called :deallocator which would let you do
    things that might help the garbage collector.  For example, if your
    resource is a data base, with pointers to all kinds of random objects,
    the :deallocator could go through the resource and fill it with nils so
    that the garbage collector wouldn't wrongly think things only accessible
    through the resource were still accessible.

I was given permission to do this, overriding the feature freeze.  We
will be building at least two more worlds for Release 6; this change
will be in the next one.

    Date: 26 October 1984 05:05-EDT
    From: Glenn S. Burke <GSB @ MIT-MC>

    this has been in the NIL (and Maclisp [unsupported utility there]) resource
    code for a couple years now, under the name :deinitializer.  It's used
    a fair amount.

Here's what I did.  :DEINITIALIZER is either a form (as with
:INITIALIZER, etc), or the name of a function.  If it is the name of a
function, it gets the resource as the first argument and the object as
the second argument.  An object is deinitialized when there is no
:FINDER function/form, and after it is verified the object belongs to
the resource.  Objects are not deinitialized in
DEALLOCATE-WHOLE-RESOURCE.

Questions for usability and consistency: Should objects be deinitialized
if there is a :FINDER function/form?  [I'm not sure, myself.]  Should
they be deinitialized even if they aren't in the resource?  [I say know;
it's a bug if they aren't in the resource.]  Should
DEALLOCATE-WHOLE-RESOURCE call the deinitializer?  [Not sure.]  If so,
should it call only for allocated objects, or for all object?
 7-Nov-84 23:32:05-EST,1768;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 7 Nov 84 23:31-EST
Date: 7 Nov 1984  23:34 EST (Wed)
Message-ID: <SR.EHPYC.12061819656.BABYL@MIT-SPEECH>
From: Scott Cyphers <SR.EHPYC@MIT-SPEECH>
To:   "David C. Plummer in disguise" <DCP@SCRC-TENEX>
Cc:   bug-lispm@MIT-OZ, "Glenn S. Burke" <GSB@MIT-MC>, GSmith@SCRC-TENEX,
      RWK@SCRC-TENEX
Subject: Resource suggestion
In-reply-to: Msg of 7 Nov 1984 23:11-EST from David C. Plummer in disguise <DCP at SCRC-TENEX>

    Date: Wednesday, 7 November 1984, 23:11-EST
    From: David C. Plummer in disguise <DCP at SCRC-TENEX>
    To:   Scott Cyphers <sr.ehpyc>, Glenn S. Burke <GSB at MIT-MC>,
          David C. Plummer <DCP at SCRC-TENEX>, bug-lispm at MIT-OZ,
          GSmith at SCRC-TENEX, RWK at SCRC-TENEX
    Re:   Resource suggestion

    Questions for usability and consistency: Should objects be deinitialized
    if there is a :FINDER function/form?  [I'm not sure, myself.]  Should
    they be deinitialized even if they aren't in the resource?  [I say know;
    it's a bug if they aren't in the resource.]  Should
    DEALLOCATE-WHOLE-RESOURCE call the deinitializer?  [Not sure.]  If so,
    should it call only for allocated objects, or for all object?

Presumably, only the allocated objects need to be deinitialized, so
they should be deallocated by deallocate-whole-resource, while the
unallocated ones shouldn't.  I can imagine a complex resource manager
that would break if it deallocated something twice (although then it
would also break if someone was still using the resource that had been
deallocate-whole-resource'd, but that'd be the user's fault, wheras the
first would be the system's fault).  The rest sounds perfectly
reasonable to me (except "know").
 8-Nov-84 01:03:53-EST,1096;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 8 Nov 84 01:03-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 122926; Thu 8-Nov-84 01:03:37-EST
Date: Thursday, 8 November 1984, 01:02-EST
From: David C. Plummer in disguise <DCP at SCRC-TENEX>
Subject: Garbage collector on REAGAN
To: Chris Lindblad <CJL at MIT-OZ>, Bug-Symbolics-Hardware at MIT-OZ,
    Bug-Lispm at MIT-OZ, Comp-Fac at SCRC-TENEX
In-Reply-To: <CJL.12061796962.BABYL@MIT-OZ>
Message-ID: <841108010214.0.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Wed, 7 Nov 1984  21:29 EST
    From: Chris Lindblad <CJL@MIT-OZ>

    I don't know if this is a software bug, or hardware being broken, but
    when (si:full-gc) is run on REAGAN, which looks like it was once
    GLACIER, says that it collected 100% of all areas, and then falls into
    the FEP. The same world load, GC'd on SID, gc's fine. I suspect broken
    hardware. 
I don't blame you.  It sounds like the gc-map is failing to cause
transport traps for oldspace.  This chunk of hardware lives on the DP
board. 
 8-Nov-84 02:40:45-EST,4961;000000000000
Received: from MIT-LISPM-2 by MIT-OZ via Chaosnet; 8 Nov 84 02:40-EST
Date: Thursday, 8 November 1984, 02:33-EST
From: Howard D. Trachtman <X.Hdt at MIT-OZ>
To: BUG-LISPM-mit at MIT-OZ

In System 98.70, CADR 3.9, ZMail 53.18, MIT-Specific 22.4, microcode 309,
ZM MIT, on Lisp Machine Two:


Super-b was supposed to let me specify a file name.  
I gave it garbage <x.hdt>  but it shouldn't barf like this.
The previous error wss invalid directory access from dired/zwei

>>TRAP 2260 (THROW-TRAP)
There was no pending *CATCH for the tag #FS:TOPS20-PATHNAME "OZ:OZ:<X.HDT>HDT.DIRECTORY".
The value being thrown was G3834.Backtrace from the debugger:

SI:FILE-RETRY-RESUME-HANDLER (P.C. = 31)

 Arg 0 (ERROR-OBJECT): #FS:FILE-OPERATION-FAILURE :PROPERTY-LIST (:PATHNAME #FS:TOPS20-PATHNAME "OZ:OZ:<X>HDT.DIRECTORY" :OPERATION :OPEN) :CONDITION-NAMES (FS:FILE-OPERATION-FAILURE FS:FILE-ERROR ERROR CONDITION ...) :FORMAT-STRING "~A" :FORMAT-ARGS ("Invalid access requested for OZ:OZ:<X>HDT.DIRECTORY") :PATHNAME #FS:TOPS20-PATHNAME "OZ:OZ:<X>HDT.DIRECTORY" :OPERATION :OPEN
 Arg 1 (NEW-PATHNAME): G3834
 Arg 2 (TAG): #FS:TOPS20-PATHNAME "OZ:OZ:<X.HDT>HDT.DIRECTORY"


CALL (P.C. = 221)

 Arg 0 (FN): SI:FILE-RETRY-RESUME-HANDLER
 Rest arg (ALTERNATES): (NIL #FS:FILE-OPERATION-FAILURE :PROPERTY-LIST (:PATHNAME #FS:TOPS20-PATHNAME "OZ:OZ:<X>HDT.DIRECTORY" :OPERATION :OPEN) :CONDITION-NAMES (FS:FILE-OPERATION-FAILURE FS:FILE-ERROR ERROR CONDITION ...) :FORMAT-STRING "~A" :FORMAT-ARGS ("Invalid access requested for OZ:OZ:<X>HDT.DIRECTORY") :PATHNAME #FS:TOPS20-PATHNAME "OZ:OZ:<X>HDT.DIRECTORY" :OPERATION :OPEN :SPREAD (G3834) ...)
Local 1 (MAX-ARGS): 0
Local 2 (ARGS-INF): 400203
Local 3 (Y): NIL
Local 4 (OPTIONAL-FLAG): NIL
Local 5 (SPREAD-FLAG): NIL
Local 6 (X): NIL


EH:INVOKE-RESUME-HANDLER (P.C. = 52)

 Arg 0 (CONDITION): #FS:FILE-OPERATION-FAILURE :PROPERTY-LIST (:PATHNAME #FS:TOPS20-PATHNAME "OZ:OZ:<X>HDT.DIRECTORY" :OPERATION :OPEN) :CONDITION-NAMES (FS:FILE-OPERATION-FAILURE FS:FILE-ERROR ERROR CONDITION ...) :FORMAT-STRING "~A" :FORMAT-ARGS ("Invalid access requested for OZ:OZ:<X>HDT.DIRECTORY") :PATHNAME #FS:TOPS20-PATHNAME "OZ:OZ:<X>HDT.DIRECTORY" :OPERATION :OPEN
 Arg 1 (PROCEED-TYPE): :NEW-PATHNAME
 Rest arg (ARGS): (#FS:TOPS20-PATHNAME "OZ:OZ:<X.HDT>HDT.DIRECTORY")
Local 1 (H): ((FS:FILE-ERROR) :NEW-PATHNAME T ("Try again with a new pathname, not telling the callers.") ...)


SIGNAL-CONDITION (P.C. = 316)

 Arg 0 (CONDITION): #FS:FILE-OPERATION-FAILURE :PROPERTY-LIST (:PATHNAME #FS:TOPS20-PATHNAME "OZ:OZ:<X>HDT.DIRECTORY" :OPERATION :OPEN) :CONDITION-NAMES (FS:FILE-OPERATION-FAILURE FS:FILE-ERROR ERROR CONDITION ...) :FORMAT-STRING "~A" :FORMAT-ARGS ("Invalid access requested for OZ:OZ:<X>HDT.DIRECTORY") :PATHNAME #FS:TOPS20-PATHNAME "OZ:OZ:<X>HDT.DIRECTORY" :OPERATION :OPEN
 Arg 1 (CONDITION-PROCEED-TYPES): NIL
   --Defaulted args:--
 Arg 2 (USE-DEBUGGER): T
 Arg 3 (UCODE-ERROR-STATUS): NIL
 Arg 4 (INHIBIT-RESUME-HANDLERS): NIL
Local 0 (TEM1): (:NEW-PATHNAME #FS:TOPS20-PATHNAME "OZ:OZ:<X.HDT>HDT.DIRECTORY")
Local 1 (CONDITION-NAMES): (FS:FILE-OPERATION-FAILURE FS:FILE-ERROR ERROR CONDITION ...)
Local 2 (DEBUGGER-CALLED): T
Local 3: NIL
Local 4 (C): NIL


SIGNAL (P.C. = 130)

 Arg 0 (SIGNAL-NAME-OR-CONDITION-OBJECT): #FS:FILE-OPERATION-FAILURE :PROPERTY-LIST (:PATHNAME #FS:TOPS20-PATHNAME "OZ:OZ:<X>HDT.DIRECTORY" :OPERATION :OPEN) :CONDITION-NAMES (FS:FILE-OPERATION-FAILURE FS:FILE-ERROR ERROR CONDITION ...) :FORMAT-STRING "~A" :FORMAT-ARGS ("Invalid access requested for OZ:OZ:<X>HDT.DIRECTORY") :PATHNAME #FS:TOPS20-PATHNAME "OZ:OZ:<X>HDT.DIRECTORY" :OPERATION :OPEN
 Rest arg (ARGS): (:PROCEED-TYPES NIL)
Local 1 (PROCEED-TYPES): NIL
Local 2 (PROCEED-TYPES-P): T
Local 3 (CONDITION): #FS:FILE-OPERATION-FAILURE :PROPERTY-LIST (:PATHNAME #FS:TOPS20-PATHNAME "OZ:OZ:<X>HDT.DIRECTORY" :OPERATION :OPEN) :CONDITION-NAMES (FS:FILE-OPERATION-FAILURE FS:FILE-ERROR ERROR CONDITION ...) :FORMAT-STRING "~A" :FORMAT-ARGS ("Invalid access requested for OZ:OZ:<X>HDT.DIRECTORY") :PATHNAME #FS:TOPS20-PATHNAME "OZ:OZ:<X>HDT.DIRECTORY" :OPERATION :OPEN


Remainder of stack:

FS:FILE-PROCESS-ERROR-NEW (P.C. = 257)
FS:OPEN-CHAOS (P.C. = 1546)
(:METHOD FS:CHAOS-PATHNAME :OPEN) (P.C. = 31)
OPEN (P.C. = 233)
PROBEF (P.C. = 64)
ZWEI:NEED-TO-REVERT-BUFFER (P.C. = 50)
ZWEI:DIRED-FIND-FILE (P.C. = 76)
ZWEI:DIRED-DO-FILE-LIST (P.C. = 141)
ZWEI:DIRED-PROCESS-FILES (P.C. = 546)
ZWEI:COM-DIRED-EXIT (P.C. = 31)
ZWEI:COMMAND-EXECUTE (P.C. = 115)
ZWEI:PROCESS-COMMAND-CHAR (P.C. = 65)
(:METHOD ZWEI:WINDOW :EDIT) (P.C. = 464)
(:INTERNAL (:METHOD ZWEI:ZMACS-WINDOW :COMBINED :EDIT) 0) (P.C. = 74)
FUNCALL (P.C. = 25)
(:METHOD ZWEI:DISPLAYER :AROUND :EDIT) (P.C. = 31)
(:METHOD ZWEI:ZMACS-WINDOW :COMBINED :EDIT) (P.C. = 47)
ZWEI:ZMACS-WINDOW-TOP-LEVEL (P.C. = 46)
SI:PROCESS-TOP-LEVEL (P.C. = 246)
 8-Nov-84 06:07:55-EST,4961;000000000000
Received: from MIT-LISPM-2 by MIT-OZ via Chaosnet; 8 Nov 84 06:07-EST
Date: Thursday, 8 November 1984, 06:07-EST
From: Howard D. Trachtman <X.Hdt at MIT-OZ>
To: BUG-LISPM-mit at MIT-OZ

In System 98.70, CADR 3.9, ZMail 53.18, MIT-Specific 22.4, microcode 309,
ZM MIT, on Lisp Machine Two:


Super-b was supposed to let me specify a file name.  
I gave it garbage <x.hdt>  but it shouldn't barf like this.
The previous error wss invalid directory access from dired/zwei

>>TRAP 2260 (THROW-TRAP)
There was no pending *CATCH for the tag #FS:TOPS20-PATHNAME "OZ:OZ:<X.HDT>HDT.DIRECTORY".
The value being thrown was G3834.Backtrace from the debugger:

SI:FILE-RETRY-RESUME-HANDLER (P.C. = 31)

 Arg 0 (ERROR-OBJECT): #FS:FILE-OPERATION-FAILURE :PROPERTY-LIST (:PATHNAME #FS:TOPS20-PATHNAME "OZ:OZ:<X>HDT.DIRECTORY" :OPERATION :OPEN) :CONDITION-NAMES (FS:FILE-OPERATION-FAILURE FS:FILE-ERROR ERROR CONDITION ...) :FORMAT-STRING "~A" :FORMAT-ARGS ("Invalid access requested for OZ:OZ:<X>HDT.DIRECTORY") :PATHNAME #FS:TOPS20-PATHNAME "OZ:OZ:<X>HDT.DIRECTORY" :OPERATION :OPEN
 Arg 1 (NEW-PATHNAME): G3834
 Arg 2 (TAG): #FS:TOPS20-PATHNAME "OZ:OZ:<X.HDT>HDT.DIRECTORY"


CALL (P.C. = 221)

 Arg 0 (FN): SI:FILE-RETRY-RESUME-HANDLER
 Rest arg (ALTERNATES): (NIL #FS:FILE-OPERATION-FAILURE :PROPERTY-LIST (:PATHNAME #FS:TOPS20-PATHNAME "OZ:OZ:<X>HDT.DIRECTORY" :OPERATION :OPEN) :CONDITION-NAMES (FS:FILE-OPERATION-FAILURE FS:FILE-ERROR ERROR CONDITION ...) :FORMAT-STRING "~A" :FORMAT-ARGS ("Invalid access requested for OZ:OZ:<X>HDT.DIRECTORY") :PATHNAME #FS:TOPS20-PATHNAME "OZ:OZ:<X>HDT.DIRECTORY" :OPERATION :OPEN :SPREAD (G3834) ...)
Local 1 (MAX-ARGS): 0
Local 2 (ARGS-INF): 400203
Local 3 (Y): NIL
Local 4 (OPTIONAL-FLAG): NIL
Local 5 (SPREAD-FLAG): NIL
Local 6 (X): NIL


EH:INVOKE-RESUME-HANDLER (P.C. = 52)

 Arg 0 (CONDITION): #FS:FILE-OPERATION-FAILURE :PROPERTY-LIST (:PATHNAME #FS:TOPS20-PATHNAME "OZ:OZ:<X>HDT.DIRECTORY" :OPERATION :OPEN) :CONDITION-NAMES (FS:FILE-OPERATION-FAILURE FS:FILE-ERROR ERROR CONDITION ...) :FORMAT-STRING "~A" :FORMAT-ARGS ("Invalid access requested for OZ:OZ:<X>HDT.DIRECTORY") :PATHNAME #FS:TOPS20-PATHNAME "OZ:OZ:<X>HDT.DIRECTORY" :OPERATION :OPEN
 Arg 1 (PROCEED-TYPE): :NEW-PATHNAME
 Rest arg (ARGS): (#FS:TOPS20-PATHNAME "OZ:OZ:<X.HDT>HDT.DIRECTORY")
Local 1 (H): ((FS:FILE-ERROR) :NEW-PATHNAME T ("Try again with a new pathname, not telling the callers.") ...)


SIGNAL-CONDITION (P.C. = 316)

 Arg 0 (CONDITION): #FS:FILE-OPERATION-FAILURE :PROPERTY-LIST (:PATHNAME #FS:TOPS20-PATHNAME "OZ:OZ:<X>HDT.DIRECTORY" :OPERATION :OPEN) :CONDITION-NAMES (FS:FILE-OPERATION-FAILURE FS:FILE-ERROR ERROR CONDITION ...) :FORMAT-STRING "~A" :FORMAT-ARGS ("Invalid access requested for OZ:OZ:<X>HDT.DIRECTORY") :PATHNAME #FS:TOPS20-PATHNAME "OZ:OZ:<X>HDT.DIRECTORY" :OPERATION :OPEN
 Arg 1 (CONDITION-PROCEED-TYPES): NIL
   --Defaulted args:--
 Arg 2 (USE-DEBUGGER): T
 Arg 3 (UCODE-ERROR-STATUS): NIL
 Arg 4 (INHIBIT-RESUME-HANDLERS): NIL
Local 0 (TEM1): (:NEW-PATHNAME #FS:TOPS20-PATHNAME "OZ:OZ:<X.HDT>HDT.DIRECTORY")
Local 1 (CONDITION-NAMES): (FS:FILE-OPERATION-FAILURE FS:FILE-ERROR ERROR CONDITION ...)
Local 2 (DEBUGGER-CALLED): T
Local 3: NIL
Local 4 (C): NIL


SIGNAL (P.C. = 130)

 Arg 0 (SIGNAL-NAME-OR-CONDITION-OBJECT): #FS:FILE-OPERATION-FAILURE :PROPERTY-LIST (:PATHNAME #FS:TOPS20-PATHNAME "OZ:OZ:<X>HDT.DIRECTORY" :OPERATION :OPEN) :CONDITION-NAMES (FS:FILE-OPERATION-FAILURE FS:FILE-ERROR ERROR CONDITION ...) :FORMAT-STRING "~A" :FORMAT-ARGS ("Invalid access requested for OZ:OZ:<X>HDT.DIRECTORY") :PATHNAME #FS:TOPS20-PATHNAME "OZ:OZ:<X>HDT.DIRECTORY" :OPERATION :OPEN
 Rest arg (ARGS): (:PROCEED-TYPES NIL)
Local 1 (PROCEED-TYPES): NIL
Local 2 (PROCEED-TYPES-P): T
Local 3 (CONDITION): #FS:FILE-OPERATION-FAILURE :PROPERTY-LIST (:PATHNAME #FS:TOPS20-PATHNAME "OZ:OZ:<X>HDT.DIRECTORY" :OPERATION :OPEN) :CONDITION-NAMES (FS:FILE-OPERATION-FAILURE FS:FILE-ERROR ERROR CONDITION ...) :FORMAT-STRING "~A" :FORMAT-ARGS ("Invalid access requested for OZ:OZ:<X>HDT.DIRECTORY") :PATHNAME #FS:TOPS20-PATHNAME "OZ:OZ:<X>HDT.DIRECTORY" :OPERATION :OPEN


Remainder of stack:

FS:FILE-PROCESS-ERROR-NEW (P.C. = 257)
FS:OPEN-CHAOS (P.C. = 1546)
(:METHOD FS:CHAOS-PATHNAME :OPEN) (P.C. = 31)
OPEN (P.C. = 233)
PROBEF (P.C. = 64)
ZWEI:NEED-TO-REVERT-BUFFER (P.C. = 50)
ZWEI:DIRED-FIND-FILE (P.C. = 76)
ZWEI:DIRED-DO-FILE-LIST (P.C. = 141)
ZWEI:DIRED-PROCESS-FILES (P.C. = 546)
ZWEI:COM-DIRED-EXIT (P.C. = 31)
ZWEI:COMMAND-EXECUTE (P.C. = 115)
ZWEI:PROCESS-COMMAND-CHAR (P.C. = 65)
(:METHOD ZWEI:WINDOW :EDIT) (P.C. = 464)
(:INTERNAL (:METHOD ZWEI:ZMACS-WINDOW :COMBINED :EDIT) 0) (P.C. = 74)
FUNCALL (P.C. = 25)
(:METHOD ZWEI:DISPLAYER :AROUND :EDIT) (P.C. = 31)
(:METHOD ZWEI:ZMACS-WINDOW :COMBINED :EDIT) (P.C. = 47)
ZWEI:ZMACS-WINDOW-TOP-LEVEL (P.C. = 46)
SI:PROCESS-TOP-LEVEL (P.C. = 246)
 8-Nov-84 12:02:12-EST,1156;000000000000
Received: from SCRC-YUKON by MIT-OZ via Chaosnet; 8 Nov 84 12:01-EST
Received: from SCRC-BLACKSTONE by SCRC-YUKON via CHAOS with CHAOS-MAIL id 73320; Thu 8-Nov-84 11:55:23-EST
Date: Thursday, 8 November 1984, 11:55-EST
From: Neal Feinberg <Feinberg at SCRC-YUKON>
Subject: Garbage collector on REAGAN
To: CJL at MIT-OZ, Bug-Symbolics-Hardware at MIT-OZ, Bug-Lispm at MIT-OZ
In-Reply-To: <CJL.12061796962.BABYL@MIT-OZ>
Message-ID: <841108115529.7.FEINBERG@BLACKSTONE.SCRC.Symbolics.COM>

    Date: Wed, 7 Nov 1984  21:29 EST
    From: Chris Lindblad <CJL@MIT-OZ>

    I don't know if this is a software bug, or hardware being broken, but
    when (si:full-gc) is run on REAGAN, which looks like it was once
    GLACIER, says that it collected 100% of all areas, and then falls into
    the FEP. The same world load, GC'd on SID, gc's fine. I suspect broken
    hardware. 

When RLL phoned me about this problem, I cold booted a 5.2 prime and did
a (FULL-GC :SYSTEM-RELEASE T), and I had no problems at
all.  A reasonable number of words was collected, and the system
operated fine after that.  Your suspicions are very likely correct.
 8-Nov-84 13:42:03-EST,1377;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 8 Nov 84 13:41-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 123444; Thu 8-Nov-84 13:39:07-EST
Date: Thursday, 8 November 1984, 13:38-EST
From: David C. Plummer in disguise <DCP at SCRC-TENEX>
Subject: Garbage collector on REAGAN
To: David C. Plummer in disguise <DCP at SCRC-TENEX>,
    Chris Lindblad <CJL at MIT-OZ>, Bug-Symbolics-Hardware at MIT-OZ,
    Bug-Lispm at MIT-OZ, Comp-Fac at SCRC-TENEX
In-Reply-To: <841108010214.0.NFEP@NEPONSET.SCRC.Symbolics.COM>
Message-ID: <841108133837.7.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Thursday, 8 November 1984, 01:02-EST
    From: David C. Plummer in disguise <DCP at SCRC-TENEX>

	Date: Wed, 7 Nov 1984  21:29 EST
	From: Chris Lindblad <CJL@MIT-OZ>

	I don't know if this is a software bug, or hardware being broken, but
	when (si:full-gc) is run on REAGAN, which looks like it was once
	GLACIER, says that it collected 100% of all areas, and then falls into
	the FEP. The same world load, GC'd on SID, gc's fine. I suspect broken
	hardware. 
    I don't blame you.  It sounds like the gc-map is failing to cause
    transport traps for oldspace.  This chunk of hardware lives on the DP
    board. 
I have been told ("The mail is in the network") that the DP board was
swapped and BONZO is happier now.
 8-Nov-84 13:56:42-EST,1524;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 8 Nov 84 13:55-EST
Received: from SCRC-YANGTZE by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 123457; Thu 8-Nov-84 13:55:10-EST
Date: Thursday, 8 November 1984, 13:53-EST
From: Carl Hoffman <CWH at SCRC-TENEX>
Subject: Resource suggestion
To: DCP at SCRC-TENEX, sr.ehpyc at MIT-SPEECH, GSB at MIT-MC,
    bug-lispm at MIT-OZ, GSmith at SCRC-TENEX, RWK at SCRC-TENEX
In-Reply-To: <841107231149.3.NFEP@NEPONSET.SCRC.Symbolics.COM>
Message-ID: <841108135343.5.CWH@YANGTZE.SCRC.Symbolics.COM>

    Date: Wednesday, 7 November 1984, 23:11-EST
    From: David C. Plummer in disguise <DCP at SCRC-TENEX>

    Questions for usability and consistency: Should objects be deinitialized
    if there is a :FINDER function/form?  [I'm not sure, myself.]

I'm not sure either, since I don't have time right now to reread the code.
								   
								   Should
    they be deinitialized even if they aren't in the resource?  [I say know;
    it's a bug if they aren't in the resource.]

I agree.  DEALLOCATE-RESOURCE should err if the object isn't in the resource.

						 Should
    DEALLOCATE-WHOLE-RESOURCE call the deinitializer?  [Not sure.]  If so,
    should it call only for allocated objects, or for all object?

I think it should, and only for allocated objects.  CLEAR-RESOURCE, on the
other hand, shouldn't.  Or, give DEALLOCATE-WHOLE-RESOURCE and CLEAR-RESOURCE
a new argument which controls whether or not the deinitializer is called.
 8-Nov-84 15:19:58-EST,5534;000000000000
Received: from MIT-LISPM-4 by MIT-OZ via Chaosnet; 8 Nov 84 15:05-EST
Date: Thursday, 8 November 1984, 14:57-EST
From: David M. J. Saslav <saz at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In Experimental System 99.9, CADR 4.0, Experimental ZMail 54.2,
MIT-Specific 23.0, microcode 320, GC@2, on Lisp Machine Four:


Insert your description of the circumstances here:

Somebody wanna tell me what's going on here?  I don't think it's
reasonable to have to put up with this lossage when merely trying
to save and compile files. can this be fixed (SOON)?

>>ERROR: File is not open (at 10500 inside FILE server) for OZ:OZ:<SAZ.HARMONY>INPUT-NOTATION.QFASL.25
Backtrace from the debugger:

FS:FILE-PROCESS-ERROR (P.C. = 90)

 Arg 0 (CONDITION-NAME): NIL
 Arg 1 (ERROR-STRING): "File is not open (at 10500 inside FILE server) for OZ:OZ:<SAZ.HARMONY>INPUT-NOTATION.QFASL.25"
 Arg 2 (PATHNAME-OR-STREAM): #FS:TOPS20-PATHNAME "OZ:OZ:<SAZ.HARMONY>INPUT-NOTATION.QFASL.25"
 Arg 3 (PROCEEDABLE): NIL
 Arg 4 (NOERROR): NIL
 Rest arg (MAKE-CONDITION-ARGS): (:OPEN)
Local 1 (WHO-FOR): #FS:TOPS20-PATHNAME "OZ:OZ:<SAZ.HARMONY>INPUT-NOTATION.QFASL.25"
Local 2 (CONDITION): #FS:FILE-OPERATION-FAILURE :PROPERTY-LIST (:PATHNAME #FS:TOPS20-PATHNAME "OZ:OZ:<SAZ.HARMONY>INPUT-NOTATION.QFASL.25" :OPERATION :OPEN) :CONDITION-NAMES (FS:FILE-OPERATION-FAILURE FS:FILE-ERROR ERROR CONDITION ...) :FORMAT-STRING "~A" :FORMAT-ARGS ("File is not open (at 10500 inside FILE server) for OZ:OZ:<SAZ.HARMONY>INPUT-NOTATION.QFASL.25") :PATHNAME #FS:TOPS20-PATHNAME "OZ:OZ:<SAZ.HARMONY>INPUT-NOTATION.QFASL.25" :OPERATION :OPEN


FS:QFILE-PROCESS-ERROR-NEW (P.C. = 130)

 Arg 0 (STRING): "O0953 ERROR BUG F File is not open (at 10500 inside FILE server)"
 Arg 1 (PATHNAME-OR-STREAM): #FS:TOPS20-PATHNAME "OZ:OZ:<SAZ.HARMONY>INPUT-NOTATION.QFASL.25"
 Arg 2 (PROCEEDABLE): NIL
 Arg 3 (NOERROR): NIL
 Rest arg (MAKE-CONDITION-ARGS): (:OPEN)
Local 1 (S-P): 17
Local 2 (ERROR-CODE): "BUG"
Local 3 (ERROR-SEVERITY): "F"
Local 4 (ERROR-STRING): "File is not open (at 10500 inside FILE server)"
Local 5 (WHO-FOR): #FS:TOPS20-PATHNAME "OZ:OZ:<SAZ.HARMONY>INPUT-NOTATION.QFASL.25"
Local 6 (DEFAULT-CONS-AREA): 32


FS:OPEN-CHAOS (P.C. = 802)

 Arg 0 (ACCESS): #<FS:QFILE-ACCESS Chaos FILE access to MIT-OZ 16523211>
 Arg 1 (FILE): #FS:TOPS20-PATHNAME "OZ:OZ:<SAZ.HARMONY>INPUT-NOTATION.QFASL.25"
 Arg 2 (PATHNAME): #FS:TOPS20-PATHNAME "OZ:OZ:<SAZ.HARMONY>INPUT-NOTATION.QFASL.25"
 Rest arg (OPTIONS): (:DIRECTION :OUTPUT :CHARACTERS NIL ...)
Local 1 (DIRECTION): :OUTPUT
Local 2 (CHARACTERS): NIL
Local 3 (ERROR): T
Local 4: (NIL)
Local 5: (NIL)
Local 6: :SUPERSEDE
Local 7: (NIL)
Local 8 (TEMPORARY): NIL
Local 9 (DELETED): NIL
Local 10 (RAW): NIL
Local 11 (SUPER-IMAGE): NIL
Local 12 (BYTE-SIZE): 16
Local 13 (PRESERVE-DATES): NIL
Local 14 (INHIBIT-LINKS): NIL
Local 15 (SUBMIT): NIL
Local 16 (ESTIMATED-LENGTH): NIL
Local 17 (ELEMENT-TYPE-P): NIL
Local 18 (ACCESS-ERROR): NIL
Local 19 (ELEMENT-TYPE): STRING-CHAR
Local 20 (IF-EXISTS): :SUPERSEDE
Local 21 (IF-DOES-NOT-EXIST): :CREATE
Local 22 (HOST-UNIT): #<FS:QFILE-HOST-UNIT for Chaos FILE access to MIT-OZ 16523214>
Local 23 (DATA-CONN): (#<CHAOS Connection 10042054> "I0952" "O0953" 1501421 ...)
Local 24 (PKT): #<CHAOS packet :STRING "T0992 O0953 ERROR BUG F File is not open (at 10500 inside FILE server)" :STATUS NIL 16443524>
Local 25 (SUCCESS): NIL
Local 26 (STRING): "O0953 ERROR BUG F File is not open (at 10500 inside FILE server)"
Local 27 (NOT-ABORTED): T
Local 28 (PHONY-CHARACTERS): NIL
Local 29 (SIGN-EXTEND-BYTES): NIL
Local 30 (IF-EXISTS-P): T
Local 31 (.SELECTQ.ITEM.): 25
Local 32 (ERROR-OBJECT): (#<CHAOS Connection 10042054> "I0952" "O0953" 1501421 ...)
Local 33: ((FS:FILE-NOT-FOUND SI:CONDITION-CASE-THROW FS:G3666))
Local 34: (FS:FILE-NOT-FOUND SI:CONDITION-CASE-THROW FS:G3666)
Local 35: (FS:FILE-ALREADY-EXISTS SI:CONDITION-CASE-THROW FS:G3673)
Local 36: ((FS:FILE-ALREADY-EXISTS SI:CONDITION-CASE-THROW FS:G3673))
Local 37 (PROPERTIES): NIL
Local 38 (ERROR-OBJECT): NIL
Local 39 (IGNORE): NIL


(:METHOD FS:QFILE-ACCESS :OPEN) (P.C. = 26)
  (SELF is #<FS:QFILE-ACCESS Chaos FILE access to MIT-OZ 16523211>)

 Arg 0 (.OPERATION.): :OPEN
 Arg 1 (FILE): #FS:TOPS20-PATHNAME "OZ:OZ:<SAZ.HARMONY>INPUT-NOTATION.QFASL.25"
 Arg 2 (PATHNAME): #FS:TOPS20-PATHNAME "OZ:OZ:<SAZ.HARMONY>INPUT-NOTATION.QFASL.25"
 Rest arg (OPTIONS): (:DIRECTION :OUTPUT :CHARACTERS NIL ...)


(:METHOD FS:FILE-HOST-MIXIN :ACCESS-OPERATION) (P.C. = 25)
  (SELF is #FS:TOPS20-HOST "MIT-OZ")

 Arg 0 (.OPERATION.): :ACCESS-OPERATION
 Arg 1 (OP): :OPEN
 Rest arg (ARGS): (#FS:TOPS20-PATHNAME "OZ:OZ:<SAZ.HARMONY>INPUT-NOTATION.QFASL.25" #FS:TOPS20-PATHNAME "OZ:OZ:<SAZ.HARMONY>INPUT-NOTATION.QFASL.25" :DIRECTION :OUTPUT ...)


Remainder of stack:

(:METHOD FS:HOST-PATHNAME :OPEN) (P.C. = 31)
OPEN (P.C. = 155)
QC-FILE (P.C. = 520)
ZWEI:EDITOR-COMPILE-FILE (P.C. = 119)
ZWEI:COM-COMPILE-FILE (P.C. = 31)
ZWEI:COM-EXTENDED-COMMAND (P.C. = 56)
ZWEI:COMMAND-EXECUTE (P.C. = 92)
ZWEI:PROCESS-COMMAND-CHAR (P.C. = 61)
(:METHOD ZWEI:WINDOW :PROCESS-COMMAND-CHAR) (P.C. = 20)
(:METHOD ZWEI:WINDOW :EDIT) (P.C. = 307)
(:INTERNAL (:METHOD ZWEI:ZMACS-WINDOW :COMBINED :EDIT) 0) (P.C. = 60)
FUNCALL (P.C. = 21)
(:METHOD ZWEI:DISPLAYER :AROUND :EDIT) (P.C. = 25)
(:METHOD ZWEI:ZMACS-WINDOW :COMBINED :EDIT) (P.C. = 39)
ZWEI:ZMACS-WINDOW-TOP-LEVEL (P.C. = 38)
SI:PROCESS-TOP-LEVEL (P.C. = 115)
 9-Nov-84 01:49:13-EST,1050;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 9 Nov 84 01:47-EST
Date: Friday, 9 November 1984, 01:44-EST
From: Chris Lindblad <cjl at MIT-OZ>
Subject: New Symbolics world load for 3600s
To: Info-Lispm-MIT at MIT-OZ

There is a new and improved Symbolics world load availiable to MIT.  The
name of the load is Release-5-2-prime.load, and it is available on any
one of these machines for band transferring to your machine: SID, ELVIS,
JIMI, MOON, BUDDY, DUANE, JANIS, MORRISON, ROBOT-1, ROBOT-4, APIARY-6,
APIARY-5, ASPEN, ZERMATT. It is highly recommended that if you are
currently using a 5.2 load, you start using this load as soon as
possible.

The changes to this world load significantly improve the performance of
the Namespace system. Patches were added to query servers only at the
local site and solve the MC/DM problem. Perhaps most importantly, with
this new load, MIT is now running a 3600 as a primary namespace server.
The machine's name is REAGAN. CADR-15 has been permanently
decommissioned as a namespace server.
 9-Nov-84 12:16:54-EST,2685;000000000000
Received: from MIT-BUGS-BUNNY by MIT-OZ via Chaosnet; 9 Nov 84 12:15-EST
Received: by bugs-bunny.mit.arpa (4.12/4.8) id AA12987; Fri, 9 Nov 84 12:13:30 est
Date: Fri, 9 Nov 84 12:13:30 est
From: Web Dove <dove@bugs-bunny>
To: Info-Lispm-MIT@mit-oz
Subject: Re:  New Symbolics world load for 3600s (bug)

It seems that the world load has lm15 listed as a secondary to MIT
which is incorrect.  It is best to correct that fact before resaving the
world.

This is a problem I have noticed with the scrc namespace.  The problem
can be observed by using the function (query-namespace ...) defined in
tweety:>util>query-namespace.(lisp/bin).  This uses the function
(neti:query-namespace-server class namespace properties) to find out
current information about objects.  It prints whether the information
was found on the server, whether the server considered it valid, and
whether the information was found locally using find-object-named.

It has usually been the case that when the primary was down, queries
about objects in some namespace went out to secondaries of that
namespace and came back "present but invalid" since the secondary
couldn't verify the requested information.  However, on some occasions
the server claimed that the information was present and valid even
though it was out of date.

This is what happened to me with the scrc namespace as seen from the scrc
namespace with a query from daffy to ap6.  Apparently, ap6 was out of
contact with scrc.  From daffy I asked for namespace scrc in namespace
scrc via the following request:
(query-namespace :namespace "scrc" :scrc)
This came back valid and present, but showed lm15 as a secondary.

I telneted to ap6 and tried the same query.  From there it came back
invalid and present.  So ap6 knew the info was out of date and claimed
that it was valid anyway!!  I then reset-host-availabilities on ap6,
redid the query and got valid information.  Then tried the same back on
daffy and got valid information.  The important fact was that daffy had
know way of being sure that ap6 hadn't lied!  Only if you were using ap6
itself could you tell that the info was invalid.

To make a long story short I have the following suggestion for
maintainers of secondaries.  In the file query-namespace.bin is another
function (validate-namespace) that resets all host availabilities and
then tries lots of queries for important things like namespaces and
networks and primaries and secondaries (and some unimportant things like
:user dove).  Please load this function and see that it evaluates
completely before saving worlds on secondaries!  This will save the rest
of us undue grief.
 9-Nov-84 17:15:43-EST,3926;000000000000
Received: from MIT-FLAME-OF-THE-FOREST by MIT-OZ via Chaosnet; 9 Nov 84 17:14-EST
Date: Friday, 9 November 1984, 17:08-EST
From: drm at MIT-XX
Sender: IANNUCCI at MIT-XX
Subject: Bug in FED
To: BUG-LISPM at MIT-OZ
Cc: drm at MIT-XX

In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 24, on Project Tanglewood Blue Spruce:

Tried to save the ill-font.  Gave this error message.  I wanted to save
it to oak:>drm>ill>ill-font.bin but it didn't even get far enough to ask
me for a pathname.

>>Error: "ILL-FONT" is an invalid file name for FS:VMS-PATHNAME
While in the function (:METHOD FS:PATHNAME :VALIDATE-COMPONENT)  (:METHOD FS:PATHNAME :VALIDATE)  (:METHOD FS:PATHNAME-HASH-TABLE-MIXIN :GET-PATHNAME)

(:METHOD FS:PATHNAME :VALIDATE-COMPONENT):  (P.C. = 40)
   Arg 0 (SELF): #<VMS-PATHNAME "PIG:.BFD">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:PATHNAME -- 0. IV's, 1. FL's 11777223>
   Arg 2 (OPERATION): :VALIDATE-COMPONENT
   Arg 3 (TEST-ARG): "ILL-FONT"
   Arg 4 (TEST-ARG-LOC): #<DTP-LOCATIVE 24514205>
   Arg 5 (VALID-MSG): :RAW-NAME
   Arg 6 (TEST-MSG): :VALID-NAME-P
   Arg 7 (CASE-MSG): :CASE-NAME
   Arg 8 (UNCASE-MSG): :UNCASE-NAME
   Arg 9 (COMPONENT): :NAME
   Arg 10 (PRETTY-NAME): "file name"

(:METHOD FS:PATHNAME :VALIDATE):  (P.C. = 43)
   Arg 0 (SELF): #<VMS-PATHNAME "PIG:.BFD">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:PATHNAME -- 0. IV's, 1. FL's 11777223>
   Arg 2 (OPERATION): :VALIDATE

(:METHOD FS:PATHNAME-HASH-TABLE-MIXIN :GET-PATHNAME):  (P.C. = 27)
   Arg 0 (SELF): #<CASE-INSENSITIVE-PATHNAME-HASH-TABLE PYGMALION>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:PATHNAME-HASH-TABLE-MIXIN -- 1. IV's, 0. FL's 52514753>
   Arg 2 (OPERATION): :GET-PATHNAME
   Arg 3 (DEV): NIL
   Arg 4 (DIR): NIL
   Arg 5 (NAM): "ILL-FONT"
   Arg 6 (TYP): "BFD"
   Arg 7 (VRS): NIL
   Arg 8 (KEY): (NIL NIL "ILL-FONT" "BFD" NIL)

(:METHOD NET:PATHNAME-HOST-MIXIN :GET-PATHNAME):  (P.C. = 27)
   Arg 0 (SELF): #<VMS-HOST PYGMALION 11662607>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NET:PATHNAME-HOST-MIXIN -- 2. IV's, 0. FL's 52556433>
   Arg 2 (OPERATION): :GET-PATHNAME
   Arg 3 (DEV): NIL
   Arg 4 (DIR): NIL
   Arg 5 (NAM): "ILL-FONT"
   Arg 6 (TYP): "BFD"
   Arg 7 (VRS): NIL

FS:MAKE-PATHNAME-1:  (P.C. = 562)
   Rest arg (OPTIONS): (:DEFAULT-HOST #<VMS-HOST PYGMALION 11662607> :DEFAULT-DEVICE NIL :DEFAULT-DIRECTORY NIL :DEFAULT-NAME NIL :DEFAULT-TYPE NIL ...)

(:METHOD FS:PATHNAME :NEW-PATHNAME):  (P.C. = 21)
   Arg 0 (SELF): #<VMS-PATHNAME "PIG:">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:PATHNAME -- 0. IV's, 1. FL's 11777223>
   Arg 2 (OPERATION): :NEW-PATHNAME
   Rest arg (OPTIONS): (:DEFAULTS ((#<VMS-HOST PYGMALION 11662607> . #<VMS-PATHNAME "PIG:USRD$:[S.R5.FONTS.TV]FOO.BFD">) (NIL . #<VMS-PATHNAME "PIG:USRD$:[S.R5.FONTS.TV]FOO.BFD">)) :NAME "ILL-FONT" :CANONICAL-TYPE :BFD)

(:METHOD FS:VMS-MAILBOX-PATHNAME-MIXIN :COMBINED :NEW-PATHNAME):  (P.C. = 37)
   Arg 0 (SELF): #<VMS-PATHNAME "PIG:">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:VMS-MAILBOX-PATHNAME-MIXIN -- 2. IV's, 2. FL's 11777230>
   Rest arg (.DAEMON-CALLER-ARGS.): (:NEW-PATHNAME :DEFAULTS ((#<VMS-HOST PYGMALION 11662607> . #<VMS-PATHNAME "PIG:USRD$:[S.R5.FONTS.TV]FOO.BFD">) (NIL . #<VMS-PATHNAME "PIG:USRD$:[S.R5.FONTS.TV]FOO.BFD">)) :NAME "ILL-FONT" :CANONICAL-TYPE :BFD)

FS:MAKE-PATHNAME:  (P.C. = 27)
   Rest arg (OPTIONS): (:DEFAULTS ((#<VMS-HOST PYGMALION 11662607> . #<VMS-PATHNAME "PIG:USRD$:[S.R5.FONTS.TV]FOO.BFD">) (NIL . #<VMS-PATHNAME "PIG:USRD$:[S.R5.FONTS.TV]FOO.BFD">)) :NAME "ILL-FONT" :CANONICAL-TYPE :BFD)

Rest of stack:
FED:READ-DEFAULTED-PATHNAME:  (P.C. = 23)
(:DEFUN-METHOD FED:FED-WRITE-FILE):  (P.C. = 6)
(:METHOD FED:BASIC-FED :COM-WRITE-FILE):  (P.C. = 12)
(:METHOD FED :COMMAND-LOOP):  (P.C. = 421)
FED:FED-TOP-LEVEL:  (P.C. = 65)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
 9-Nov-84 22:20:57-EST,3273;000000000000
Received: from MIT-LISPM-19 by MIT-OZ via Chaosnet; 9 Nov 84 22:20-EST
Date: Friday, 9 November 1984, 22:12-EST
From: The Lisp Machine <LispM at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In Experimental System 99.9, CADR 4.0, Experimental ZMail 54.2,
MIT-Specific 23.0, microcode 320, GC@2, on Lisp Machine Nineteen:


typing in a filename and used delete to do so.
as doing a make-system site on lisp listener-1, this error occurrend
in ZWEI as i tried to read in lmlocs
>>ERROR: The three characters immediately following a circlecross must be octal -- >
S.
Error occurred in reading from SI:READ-FROM-STRING-STREAM.
Backtrace from the debugger:

SI:XR-READ-CIRCLECROSS (P.C. = 79)

 Arg 0 (STREAM): SI:READ-FROM-STRING-STREAM
Local 0 (CH1): 62
Local 1 (CH2): 141
Local 2 (CH3): 83


Additional information supplied with call:
 Expecting 3 values

SI:XR-XRTYI (P.C. = 198)

 Arg 0 (STREAM): SI:READ-FROM-STRING-STREAM
   --Defaulted args:--
 Arg 1 (IGNORE-WHITESPACE): NIL
 Arg 2 (NO-CHARS-SPECIAL): NIL
 Arg 3 (NO-MULTIPLE-ESCAPES): NIL
Local 0 (CH): 22
Local 1 (BITS): 4
Local 2 (CODE): 1
Local 3 (CH-CHAR): 22
Local 4 (FOUND-MULTI-ESCAPES): NIL
Local 5 (CH1): NIL


Additional information supplied with call:
 Expecting 2 values

SI:XR-READ-THING (P.C. = 248)

 Arg 0 (STREAM): SI:READ-FROM-STRING-STREAM
Local 0 (CH): 46
Local 1 (NUM): 13
Local 2 (A): NIL
Local 3 (B): NIL
Local 4 (STRING): "E>LM"
Local 5 (INDEX): 9
Local 6 (STLEN): 64
Local 7 (REAL-CH): 46
Local 8 (ALREADY-RETURNED): NIL
Local 9 (READTABLE-FSM): #<ART-Q-62-22 1743553>
Local 10 (FNPROP): SI:STANDARD-READ-FUNCTION
Local 11 (STATE): 60
Local 12 (FOUND-MULTI-ESCAPES): T
Local 13 (FLAG): NIL
Local 14 (TODO): NIL
Local 15 (OLD): "E>LM"
Local 16: NIL


SI:INTERNAL-READ (P.C. = 234)

 Arg 0 (STREAM): SI:READ-FROM-STRING-STREAM
 Arg 1 (EOF-ERRORP): NIL
 Arg 2 (EOF-VALUE): NIL
   --Defaulted args:--
 Arg 3 (RECURSIVE-P): NIL
 Arg 4 (PRESERVE-WHITESPACE): NIL
 Arg 5 (DISCARD-CLOSEPARENS): NIL
 Arg 6 (CHECK-INDENTATION): NIL
Local 0 (W-O): (:TYI :UNTYI :GET-STRING-INDEX)
Local 1: NIL
Local 2: NIL
Local 3 (THING): NIL
Local 4 (TYPE): NIL
Local 5 (VALUES): NIL


Additional information supplied with call:
 Expecting 2 values

READ-FROM-STRING (P.C. = 66)

 Arg 0 (STRING): "I1074 ERROR FNF F No such file type0hMLOCS./>
SYSDCL.QFASL.186
"
 Arg 1 (EOF-OPTION): NIL
 Arg 2 (START): 35
   --Defaulted args:--
 Arg 3 (END): NIL
Local 0 (EOF-OPTION-P): T


Remainder of stack:

FS:READ-FILE-PROPERTY-LIST-STRING (P.C. = 147)
(:METHOD FS:QFILE-INPUT-STREAM-MIXIN :REAL-CLOSE) (P.C. = 96)
(:METHOD FS:QFILE-DATA-STREAM-MIXIN :CLOSE) (P.C. = 45)
(:METHOD FS:QFILE-INPUT-BINARY-STREAM :COMBINED :CLOSE) (P.C. = 48)
FASLOAD (P.C. = 87)
SI:FASLOAD-1 (P.C. = 26)
SI:DO-FILE-TRANSFORMATIONS (P.C. = 171)
SI:PERFORM-TRANSFORMATIONS (P.C. = 82)
MAKE-SYSTEM (P.C. = 158)
SI:MAYBE-RELOAD-FILE (P.C. = 143)
SI:MAYBE-RELOAD-SYSTEM-DECLARATION (P.C. = 71)
MAKE-SYSTEM (P.C. = 91)
SYS:EVAL1 (P.C. = 717)
SI:EVAL-SPECIAL-OK (P.C. = 82)
SI:EVAL-ABORT-TRIVIAL-ERRORS (P.C. = 36)
SI:LISP-TOP-LEVEL1 (P.C. = 274)
SI:LISP-TOP-LEVEL2 (P.C. = 23)
SI:PROCESS-TOP-LEVEL (P.C. = 115)
SI:LISP-TOP-LEVEL (P.C. = 39)
11-Nov-84 10:02:22-EST,868;000000000000
Received: from MIT-FRANK-SINATRA by MIT-OZ via Chaosnet; 11 Nov 84 10:02-EST
Date: Wednesday, 7 November 1984, 04:52-EST
From: Charles Rich <RICH at MIT-OZ>
Subject: Argument list of for Defstruct :Constructor macros
To: BUG-LISPM at MIT-OZ

In Release 4.5, Reasoning Utility Package 28.0, FEP 18,
site configuration 79, on Lisp Machine Frank Sinatra:

A fine point that could be improved:  If you define a argument order
constructor macro like the following

(DEFSTRUCT (SYNTAX (:TYPE LIST)
		   (:CONSTRUCTOR MAKE-SYNTAX (DOMAINS RANGE))
		   :CONC-NAME)
  DOMAINS
  RANGE)


when you use C-Sh-A to look at the arguments the system prints
out 

	MAKE-SYNTAX (MACRO): X

instead of showing the argument names provided in the definition above.
Since the whole point of the definition is the argument order, this
is sort of a shame.
				-CR
11-Nov-84 18:10:56-EST,2867;000000000000
Received: from MIT-LISPM-4 by MIT-OZ via Chaosnet; 11 Nov 84 18:10-EST
Date: Sunday, 11 November 1984, 18:09-EST
From: David M. J. Saslav <Devon at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In Experimental System 99.9, CADR 4.0, Experimental ZMail 54.2,
MIT-Specific 23.0, microcode 320, GC@2, on Lisp Machine Four:


Insert your description of the circumstances here:

I was trying to find the code that handles the <Terminal> key, so I typed <Terminal> <Help>
and when it said to type a space to flush, I entered peek, got the relevant (I guess)
process into the inspector, and there I was with this funcallable object and no good way
to find out what it was, so I tried to send it a :which-operations but that croaked as
you can see here.  Where is m-. now when I need it?

>>TRAP 4375 (SUBSCRIPT-OOB M-Q M-S (NIL XAREF-RECHECK-INDEX) M-A)
The subscript 14 for "NIL" was out of range in AR-1.
Backtrace from the debugger:

(:METHOD SI:VANILLA-FLAVOR :WHICH-OPERATIONS) (P.C. = 26)
  (SELF is NIL)

 Arg 0 (.OPERATION.): :WHICH-OPERATIONS


FUNCALL (P.C. = 21)

 Arg 0 (FN): #<EQ-SI:HASH-ARRAY (Funcallable) 1302170>
 Rest arg (ARGS): (:WHICH-OPERATIONS)


SYS:EVAL1 (P.C. = 717)

 Arg 0 (FORM): (FUNCALL FOO :WHICH-OPERATIONS)
 Arg 1 (NOHOOK): T
Local 0 (ARGNUM): 2
Local 1 (TEM): NIL
Local 2 (ENV): NIL
Local 3 (MUMBLE): NIL
Local 4 (TAIL): NIL
Local 5 (FCTN): #<DTP-FEF-POINTER FUNCALL 2304364>
Local 6 (ARG-DESC): 1048641
Local 7 (NUM-ARGS): 2
Local 8 (CLOSURE-PASSED): NIL
Local 9 (LAMBDA-LIST): NIL
Local 10 (LL): NIL
Local 11 (QUOTE-STATUS): NIL
Local 12 (REST-FLAG): NIL
Local 13 (ARGL): NIL
Local 14: NIL
Local 15: NIL
Local 16 (IGNORE): NIL
Local 17 (ADL): NIL
Local 18 (ITEM): NIL
Local 19 (.SELECTQ.ITEM.): NIL


SYS:EVAL1 (P.C. = 462)

 Arg 0 (FORM): (SI:DISPLACED (SEND FOO :WHICH-OPERATIONS) (FUNCALL FOO :WHICH-OPERATIONS))
   --Defaulted args:--
 Arg 1 (NOHOOK): NIL
Local 0 (ARGNUM): NIL
Local 1 (TEM): NIL
Local 2 (ENV): NIL
Local 3 (MUMBLE): NIL
Local 4 (TAIL): NIL
Local 5 (FCTN): (MACRO . #<DTP-FEF-POINTER SEND 11415705>)
Local 6 (ARG-DESC): 262207
Local 7 (NUM-ARGS): NIL
Local 8 (CLOSURE-PASSED): NIL
Local 9 (LAMBDA-LIST): NIL
Local 10 (LL): NIL
Local 11 (QUOTE-STATUS): NIL
Local 12 (REST-FLAG): NIL
Local 13 (ARGL): NIL
Local 14: ((FUNCALL FOO :WHICH-OPERATIONS) T)
Local 15: (NIL)
Local 16 (IGNORE): NIL
Local 17 (ADL): NIL
Local 18 (ITEM): NIL
Local 19 (.SELECTQ.ITEM.): NIL


SI:EVAL-SPECIAL-OK (P.C. = 82)

 Arg 0 (FORM): (SI:DISPLACED (SEND FOO :WHICH-OPERATIONS) (FUNCALL FOO :WHICH-OPERATIONS))
   --Defaulted args:--
 Arg 1 (NOHOOK): NIL
Local 0 (TEM): NIL
Local 1 (ENV): NIL


Remainder of stack:

SI:EVAL-ABORT-TRIVIAL-ERRORS (P.C. = 36)
SI:LISP-TOP-LEVEL1 (P.C. = 274)
SI:LISP-TOP-LEVEL2 (P.C. = 23)
SI:PROCESS-TOP-LEVEL (P.C. = 115)
11-Nov-84 18:22:03-EST,772;000000000000
Received: from MIT-LISPM-4 by MIT-OZ via Chaosnet; 11 Nov 84 18:21-EST
Date: Sunday, 11 November 1984, 18:21-EST
From: David M. J. Saslav <Devon at MIT-OZ>
Subject: Continuing saga
To: BUG-LISPM at MIT-OZ

In Experimental System 99.9, CADR 4.0, Experimental ZMail 54.2,
MIT-Specific 23.0, microcode 320, GC@2, on Lisp Machine Four:

In Peek, when I moused a process and tried to inpect it, nothing
happened, apparently because i had previously invoked the inspector this
way.  I tried several times before doing <System>-I and mousing the EXIT
box, at which time my queued-up requests were processed, and I killed
them all off by mousing each one's exit box in turn.  Urgh.  Also, the
Peek display was not getting updated until I killed off the inspectors.
12-Nov-84 09:49:21-EST,365;000000000000
Received: from MIT-LENNON by MIT-OZ via Chaosnet; 12 Nov 84 09:48-EST
Date: Monday, 12 November 1984, 09:48-EST
From: Gavan Duffy <GAVAN at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10,
Experimental RELATUS 131.90, FEP 18, on Lisp Machine John Lennon:

It STILL bothers me that LOAD-PATCHES' FQUERY doesn't FRESH-LINE.
12-Nov-84 13:09:25-EST,2968;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 12 Nov 84 13:08-EST
Received: from SCRC-NEPONSET by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 101546; Sun 11-Nov-84 12:35:09-EST
Date: Sunday, 11 November 1984, 12:35-EST
From: David C. Plummer in disguise <DCP at SCRC-TENEX>
Subject: Resource suggestion
To: Carl Hoffman <CWH at SCRC-TENEX>, DCP at SCRC-TENEX,
    sr.ehpyc at MIT-SPEECH, GSB at MIT-MC, bug-lispm at MIT-OZ,
    GSmith at SCRC-TENEX, RWK at SCRC-TENEX
In-Reply-To: <841108135343.5.CWH@YANGTZE.SCRC.Symbolics.COM>
References: <841107231149.3.NFEP@NEPONSET.SCRC.Symbolics.COM>,
            <SR.EHPYC.12061819656.BABYL@MIT-SPEECH>,
            <841108135343.5.CWH@YANGTZE.SCRC.Symbolics.COM>,
            <841108135343.5.CWH@YANGTZE.SCRC.Symbolics.COM>
Message-ID: <841111123543.8.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Thursday, 8 November 1984, 13:53-EST
    From: Carl Hoffman <CWH at SCRC-TENEX>

	Date: Wednesday, 7 November 1984, 23:11-EST
	From: David C. Plummer in disguise <DCP at SCRC-TENEX>

	Questions for usability and consistency: Should objects be deinitialized
	if there is a :FINDER function/form?  [I'm not sure, myself.]

    I'm not sure either, since I don't have time right now to reread the code.
								   
If there is a finder function and a deinitializer function, then the
deinitializer will get called.  [Think about it: deinitializer is a new
utility.  What's the point of specifying both a finder and a
deinitializer if the deinitializer can never get called?]

								       Should
	they be deinitialized even if they aren't in the resource?  [I say know;
	it's a bug if they aren't in the resource.]

    I agree.  DEALLOCATE-RESOURCE should err if the object isn't in the resource.

That's how I originally coded it (errs first, deinitializes only after
verified to be in the resource).  It's still that way.

						     Should
	DEALLOCATE-WHOLE-RESOURCE call the deinitializer?  [Not sure.]  If so,
	should it call only for allocated objects, or for all object?

    I think it should, and only for allocated objects.  CLEAR-RESOURCE, on the
    other hand, shouldn't.  Or, give DEALLOCATE-WHOLE-RESOURCE and CLEAR-RESOURCE
    a new argument which controls whether or not the deinitializer is called.

Here's what I did: deallocate-whole-resource deinitializes any objects
that are thought to have been allocated.  I didn't make clear-resource
call the deinitializer, since clear-resource isn't supposed to be able
to err and is a more destructive operation.  I did, however, make clear
resource mark the objects as not in use and cleared their parameters
field.  [This was patchable, so it's being patched.]  I've been bitten
by something related to this a few time.  It was usually a stack-frame
resource of the debugger that was sufficiently bashed that it couldn't
be cleared normally and caused even more problems when the debugger was
entered.
12-Nov-84 23:39:33-EST,4623;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 12 Nov 84 23:38-EST
Received: from SCRC-HUDSON by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 125727; Mon 12-Nov-84 23:42:01-EST
Date: Monday, 12 November 1984, 23:38-EST
From: Robert W. Kerns <RWK at SCRC-YUKON>
Subject: Bug in FED
To: drm at MIT-XX
cc: BUG-LISPM at MIT-OZ
In-Reply-To: The message of 9 Nov 84 17:08-EST from drm at MIT-XX
Message-ID: <841112233806.1.RWK@HUDSON.SCRC.Symbolics.COM>

    Date: Friday, 9 November 1984, 17:08-EST
    From: drm at MIT-XX

    In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 24, on Project Tanglewood Blue Spruce:

    Tried to save the ill-font.  Gave this error message.  I wanted to save
    it to oak:>drm>ill>ill-font.bin but it didn't even get far enough to ask
    me for a pathname.

FED was not using the proper technique for constructing pathname defaults.
Thanks to your report, I have fixed it for a future release.  Thank you.

    >>Error: "ILL-FONT" is an invalid file name for FS:VMS-PATHNAME
    While in the function (:METHOD FS:PATHNAME :VALIDATE-COMPONENT)  (:METHOD FS:PATHNAME :VALIDATE)  (:METHOD FS:PATHNAME-HASH-TABLE-MIXIN :GET-PATHNAME)

    (:METHOD FS:PATHNAME :VALIDATE-COMPONENT):  (P.C. = 40)
       Arg 0 (SELF): #<VMS-PATHNAME "PIG:.BFD">
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:PATHNAME -- 0. IV's, 1. FL's 11777223>
       Arg 2 (OPERATION): :VALIDATE-COMPONENT
       Arg 3 (TEST-ARG): "ILL-FONT"
       Arg 4 (TEST-ARG-LOC): #<DTP-LOCATIVE 24514205>
       Arg 5 (VALID-MSG): :RAW-NAME
       Arg 6 (TEST-MSG): :VALID-NAME-P
       Arg 7 (CASE-MSG): :CASE-NAME
       Arg 8 (UNCASE-MSG): :UNCASE-NAME
       Arg 9 (COMPONENT): :NAME
       Arg 10 (PRETTY-NAME): "file name"

    (:METHOD FS:PATHNAME :VALIDATE):  (P.C. = 43)
       Arg 0 (SELF): #<VMS-PATHNAME "PIG:.BFD">
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:PATHNAME -- 0. IV's, 1. FL's 11777223>
       Arg 2 (OPERATION): :VALIDATE

    (:METHOD FS:PATHNAME-HASH-TABLE-MIXIN :GET-PATHNAME):  (P.C. = 27)
       Arg 0 (SELF): #<CASE-INSENSITIVE-PATHNAME-HASH-TABLE PYGMALION>
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:PATHNAME-HASH-TABLE-MIXIN -- 1. IV's, 0. FL's 52514753>
       Arg 2 (OPERATION): :GET-PATHNAME
       Arg 3 (DEV): NIL
       Arg 4 (DIR): NIL
       Arg 5 (NAM): "ILL-FONT"
       Arg 6 (TYP): "BFD"
       Arg 7 (VRS): NIL
       Arg 8 (KEY): (NIL NIL "ILL-FONT" "BFD" NIL)

    (:METHOD NET:PATHNAME-HOST-MIXIN :GET-PATHNAME):  (P.C. = 27)
       Arg 0 (SELF): #<VMS-HOST PYGMALION 11662607>
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NET:PATHNAME-HOST-MIXIN -- 2. IV's, 0. FL's 52556433>
       Arg 2 (OPERATION): :GET-PATHNAME
       Arg 3 (DEV): NIL
       Arg 4 (DIR): NIL
       Arg 5 (NAM): "ILL-FONT"
       Arg 6 (TYP): "BFD"
       Arg 7 (VRS): NIL

    FS:MAKE-PATHNAME-1:  (P.C. = 562)
       Rest arg (OPTIONS): (:DEFAULT-HOST #<VMS-HOST PYGMALION 11662607> :DEFAULT-DEVICE NIL :DEFAULT-DIRECTORY NIL :DEFAULT-NAME NIL :DEFAULT-TYPE NIL ...)

    (:METHOD FS:PATHNAME :NEW-PATHNAME):  (P.C. = 21)
       Arg 0 (SELF): #<VMS-PATHNAME "PIG:">
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:PATHNAME -- 0. IV's, 1. FL's 11777223>
       Arg 2 (OPERATION): :NEW-PATHNAME
       Rest arg (OPTIONS): (:DEFAULTS ((#<VMS-HOST PYGMALION 11662607> . #<VMS-PATHNAME "PIG:USRD$:[S.R5.FONTS.TV]FOO.BFD">) (NIL . #<VMS-PATHNAME "PIG:USRD$:[S.R5.FONTS.TV]FOO.BFD">)) :NAME "ILL-FONT" :CANONICAL-TYPE :BFD)

    (:METHOD FS:VMS-MAILBOX-PATHNAME-MIXIN :COMBINED :NEW-PATHNAME):  (P.C. = 37)
       Arg 0 (SELF): #<VMS-PATHNAME "PIG:">
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:VMS-MAILBOX-PATHNAME-MIXIN -- 2. IV's, 2. FL's 11777230>
       Rest arg (.DAEMON-CALLER-ARGS.): (:NEW-PATHNAME :DEFAULTS ((#<VMS-HOST PYGMALION 11662607> . #<VMS-PATHNAME "PIG:USRD$:[S.R5.FONTS.TV]FOO.BFD">) (NIL . #<VMS-PATHNAME "PIG:USRD$:[S.R5.FONTS.TV]FOO.BFD">)) :NAME "ILL-FONT" :CANONICAL-TYPE :BFD)

    FS:MAKE-PATHNAME:  (P.C. = 27)
       Rest arg (OPTIONS): (:DEFAULTS ((#<VMS-HOST PYGMALION 11662607> . #<VMS-PATHNAME "PIG:USRD$:[S.R5.FONTS.TV]FOO.BFD">) (NIL . #<VMS-PATHNAME "PIG:USRD$:[S.R5.FONTS.TV]FOO.BFD">)) :NAME "ILL-FONT" :CANONICAL-TYPE :BFD)

    Rest of stack:
    FED:READ-DEFAULTED-PATHNAME:  (P.C. = 23)
    (:DEFUN-METHOD FED:FED-WRITE-FILE):  (P.C. = 6)
    (:METHOD FED:BASIC-FED :COM-WRITE-FILE):  (P.C. = 12)
    (:METHOD FED :COMMAND-LOOP):  (P.C. = 421)
    FED:FED-TOP-LEVEL:  (P.C. = 65)
    SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
13-Nov-84 09:34:57-EST,1035;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 13 Nov 84 09:34-EST
Received: from SCRC-ANNISQUAM by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 125867; Tue 13-Nov-84 09:35:58-EST
Date: Tuesday, 13 November 1984, 09:33-EST
From: Doug Dodds <DODDS at SCRC-TENEX>
To: GAVAN at MIT-OZ
cc: BUG-LISPM at MIT-OZ, User-Interface at SCRC-TENEX
In-Reply-To: The message of 12 Nov 84 09:48-EST from Gavan Duffy <GAVAN at MIT-OZ>
Message-ID: <841113093309.1.DODDS@ANNISQUAM.SCRC.Symbolics.COM>

    Date: Monday, 12 November 1984, 09:48-EST
    From: Gavan Duffy <GAVAN at MIT-OZ>

    In Symbolics 3600 System 242.356, Hardcopy 20.10,
    Experimental RELATUS 131.90, FEP 18, on Lisp Machine John Lennon:

    It STILL bothers me that LOAD-PATCHES' FQUERY doesn't FRESH-LINE.

I don't recall seeing earlier mail on this.  I kind of like the question
as it stands.  I imagine it was done to stretch out the patch comment
printouts less and to make the query stand out more.  Any opinions on
keeping or changing it?
13-Nov-84 12:38:24-EST,3118;000000000000
Received: from MIT-LISPM-4 by MIT-OZ via Chaosnet; 13 Nov 84 12:37-EST
Date: Tuesday, 13 November 1984, 12:38-EST
From: David M. J. Saslav <saz at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In Experimental System 99.9, CADR 4.0, Experimental ZMail 54.2,
MIT-Specific 23.0, microcode 320, GC@2, on Lisp Machine Four:


Insert your description of the circumstances here:

This is absolutely ridiculous...
I did nothing except hit "END" after entering a message to
be sent to someone on an APIARY.  

>>TRAP 4396 (ARGTYP ARRAY M-A 0 FALL-THROUGH AREF)
The first argument to AREF, (CDADR (#FS:LISPM-HOST "MIT-APIARY-1" #)), was of the wrong type.
The function expected an array.
Backtrace from the debugger:

CHAOS:FIND-LISPMS-LOGGED-IN-AS-USER (P.C. = 82)

 Arg 0 (USER): "batali"
Local 0 (ELEMS): ((#FS:LISPM-HOST "MIT-APIARY-1" #) (#FS:LISPM-HOST "MIT-APIARY-2" #) (#FS:LISPM-HOST "MIT-APIARY-3" #) (#FS:LISPM-HOST "MIT-APIARY-4" #) ...)
Local 1 (HOST-LIST): NIL
Local 2 (OLD-TIME): 1910888
Local 3: ((#FS:LISPM-HOST "MIT-APIARY-1" #) (#FS:LISPM-HOST "MIT-APIARY-2" #) (#FS:LISPM-HOST "MIT-APIARY-3" #) (#FS:LISPM-HOST "MIT-APIARY-4" #) ...)
Local 4 (ELEM): (#FS:LISPM-HOST "MIT-APIARY-1" (1601 . #<CHAOS Connection to MIT-APIARY-1 FINGER 16635331>))
Local 5 (CONN): (CDADR (#FS:LISPM-HOST "MIT-APIARY-1" #))
Local 6 (STATE): NIL
Local 7 (PKT): NIL
Local 8 (STR): NIL


CHAOS:FIND-HOSTS-OR-LISPMS-LOGGED-IN-AS-USER (P.C. = 24)

 Arg 0 (USER): "batali"
 Arg 1 (HOSTS): NIL
   --Defaulted args:--
 Arg 2 (NO-LISPMS-P): NIL
Local 0 (LISPMS): NIL
Local 1: NIL
Local 2 (HOST): NIL


Additional information supplied with call:
 Expecting 3 values

ZWEI:PARSE-SINGLE-DEST (P.C. = 49)

 Arg 0 (DEST): "batali"
   --Defaulted args:--
 Arg 1 (JUST-VERIFY): NIL
Local 0 (HOST): NIL
Local 1 (@-POS): NIL


ZWEI:CONVERSE-SEND-MSG-INTERNAL (P.C. = 49)

 Arg 0 (DESTINATION): "batali"
 Arg 1 (MESSAGE): "
Any chance of your buying back that IOU from Taft if 
I give you the money now?  This can't go on, you know..."
   --Defaulted args:--
 Arg 2 (MAIL-P): NIL
Local 0 (USER): NIL
Local 1 (HOST): NIL
Local 2 (LOSSAGE): NIL
Local 3 (DEST-LIST): ("batali")
Local 4 (LOSSAGE-REASON): NIL
Local 5: ("batali")
Local 6 (DEST): "batali"


ZWEI:CONVERSE-SEND-MSG (P.C. = 26)

Local 0 (DEST): "batali"
Local 1 (MSG): "
Any chance of your buying back that IOU from Taft if 
I give you the money now?  This can't go on, you know..."


Remainder of stack:

ZWEI:CONVERSE-SEND-WITHOUT-EXIT (P.C. = 19)
ZWEI:COM-CONVERSE-HANDLE-END (P.C. = 27)
ZWEI:COMMAND-EXECUTE (P.C. = 92)
ZWEI:PROCESS-COMMAND-CHAR (P.C. = 61)
(:METHOD ZWEI:WINDOW :PROCESS-COMMAND-CHAR) (P.C. = 20)
(:METHOD ZWEI:WINDOW :EDIT) (P.C. = 307)
(:INTERNAL (:METHOD ZWEI:ZWEI-WINDOW-PANE :COMBINED :EDIT) 0) (P.C. = 60)
FUNCALL (P.C. = 21)
(:METHOD ZWEI:DISPLAYER :AROUND :EDIT) (P.C. = 25)
(:METHOD ZWEI:ZWEI-WINDOW-PANE :COMBINED :EDIT) (P.C. = 39)
(:METHOD ZWEI:ZWEI-FRAME :EDIT) (P.C. = 27)
ZWEI:CONVERSE-WINDOW-TOP-LEVEL (P.C. = 20)
SI:PROCESS-TOP-LEVEL (P.C. = 115)
13-Nov-84 15:48:22-EST,810;000000000000
Received: from MIT-EMS by MIT-OZ via Chaosnet; 13 Nov 84 15:46-EST
Date: 13 Nov 1984 15:46:16-EST
From: smh@mit-ems
To: bug-lispm@mit-oz
Subject: :initable or :inittable ?

This one has probably been though the mill before, but I must have
missed it.  Different editions of the MIT Lisp Machine Manual disagree
about the spelling of the DEFFLAVOR option :INITABLE-INSTANCE-VARIABLES
aka :INITTABLE-INSTANCE-VARIABLES.  By direct experiment, it seems that
3600s accept only the former, while CADRs accept either.

I speculate that an attempt is underway to regularize the (mis)spelling
as :INITTABLE (to "agree" with :SETTABLE and :GETTABLE), but that
Symbolics is not going along?  Would someone in the know comment?  Which
spelling is likely to be the final one?

Steve Haflich, smh@mit-ems
13-Nov-84 16:36:11-EST,2163;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 13 Nov 84 16:35-EST
Received: from SCRC-WABASH by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 126202; Tue 13-Nov-84 16:21:58-EST
Date: Tuesday, 13 November 1984, 16:19-EST
From: Sue Miller <smiller at SCRC-STONY-BROOK>
Subject: :initable or :inittable ?
To: smh at MIT-EMS, bug-lispm at MIT-OZ
In-Reply-To: The message of 13 Nov 84 15:46-EST from smh at mit-ems
Message-ID: <841113161911.3.SMILLER@WABASH.SCRC.Symbolics.COM>

    Date: 13 Nov 1984 15:46:16-EST
    From: smh@mit-ems

    This one has probably been though the mill before, but I must have
    missed it.  Different editions of the MIT Lisp Machine Manual disagree
    about the spelling of the DEFFLAVOR option :INITABLE-INSTANCE-VARIABLES
    aka :INITTABLE-INSTANCE-VARIABLES.  By direct experiment, it seems that
    3600s accept only the former, while CADRs accept either.

    I speculate that an attempt is underway to regularize the (mis)spelling
    as :INITTABLE (to "agree" with :SETTABLE and :GETTABLE), but that
    Symbolics is not going along?  Would someone in the know comment?  Which
    spelling is likely to be the final one?

From a linguistic standpoint, it makes complete sense to have :SETTABLE
and :GETTABLE with two Ts, and :INITABLE with one T.  The morpheme INIT
differs in two distinct ways from SET and GET:

-GET and SET each have only one syllable; INIT has two syllables

-the second syllable of INIT doesn't have the same vowel sound as does
 GET and SET

If you don't have that extra T in GETTABLE and SETTABLE, you end up
making a sound that is rather awkward in American English.  On the other
hand, INIT is pronounced differently and doesn't need that extra T at
the beginning of the suffix.

English speakers use (albeit subconsciously) these kinds of distinctions
when figuring out how to add suffixes.  It also appears that in this
case the spelling matches the pronunciation.  In glancing through a
dictionary, suffixes to GET and SET do add an extra T, but suffixes to
multi-syllabic words ending in T use only one T.

Anyway, :inittable looks strange.
13-Nov-84 18:31:53-EST,1133;000000000000
Received: from MIT-APIARY-3 by MIT-OZ via Chaosnet; 13 Nov 84 18:31-EST
Date: Tuesday, 13 November 1984, 18:31-EST
From: Carl R. Manning <crm at MIT-OZ>
Subject: "OZ" is not a flavor object
To: bug-lispm at MIT-OZ

This bug is easily reproduced; just type <function> <help>.  However
it seems to be deeply rooted, as the same error crops up if you then try
to send a bug report, either from the debugger or from ZMail.  That's
why this message isn't in the form of a bug report.

I think something is finding a string where it expects a flavor object. 
Error messages look something like:

>>Trap: The subscript given to the AR-1 instruction, :SITE, was not a fixnum.

SYS:%LEXPR-AREF
  Arg 0 (ARRAY)    "OZ"
  Arg 1 (INDICES)  (:SHORT-NAME)
...
While in SYS:%LEXPR-AREF  SYS:CALL-FUNNY-FUNCTION  "OZ"  TV:FINGER-KEYWORD 



>>Trap: The subscript given to the AR-1 instruction, :SHORT-NAME, was not a fixnum.

SYS:%LEXPR-AREF
  Arg 0 (ARRAY)    "OZ"
  Arg 1 (INDICES)  (:SHORT-NAME)
...
While in SYS:%LEXPR-AREF  SYS:CALL-FUNNY-FUNCTION  "OZ"  MAILER:ALL-MAIL-ADDRESSES-FORWARD-BETWEEN-HOSTS-P

13-Nov-84 19:31:46-EST,3151;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 13 Nov 84 19:30-EST
Received: from SCRC-HARLEM by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 126361; Tue 13-Nov-84 19:32:25-EST
Date: Tuesday, 13 November 1984, 19:29-EST
From: Joseph R Goldstone <joseph at SCRC-QUABBIN>
Subject: "OZ" is not a flavor object
To: Carl R. Manning <crm at MIT-OZ>, bug-lispm at MIT-OZ
In-Reply-To: The message of 13 Nov 84 18:31-EST from Carl R. Manning <crm at MIT-OZ>
Message-ID: <841113192917.6.JOSEPH@HARLEM.SCRC.Symbolics.COM>

    Date: Tuesday, 13 November 1984, 18:31-EST
    From: Carl R. Manning <crm at MIT-OZ>

    This bug is easily reproduced; just type <function> <help>.  However
    it seems to be deeply rooted, as the same error crops up if you then try
    to send a bug report, either from the debugger or from ZMail.  That's
    why this message isn't in the form of a bug report.

    I think something is finding a string where it expects a flavor object. 
    Error messages look something like:

    >>Trap: The subscript given to the AR-1 instruction, :SHORT-NAME, was not a fixnum.

    SYS:%LEXPR-AREF
      Arg 0 (ARRAY)    "OZ"
      Arg 1 (INDICES)  (:SHORT-NAME)
    ...
    While in SYS:%LEXPR-AREF  SYS:CALL-FUNNY-FUNCTION  "OZ"  MAILER:ALL-MAIL-ADDRESSES-FORWARD-BETWEEN-HOSTS-P

Hmm.  I remember seeing something like this on an MIT machine which was using a band
with 5.2 ZMail patches loaded, but not 5.2 System patches, on which the ZMail patches
depended.  Looking at the disk label on AP3 gives:

  FEP0:>BAD-BLOCKS.FEP.1    29      0(8)   1/15/00 03:47:46 [List of bad blocks] COHN
  FEP0:>boot.boot.13     1    233(8)       10/02/84 00:01:20 [] Henry
  FEP0:>DISK-LABEL.FEP.1    24      0(8)   1/15/00 03:47:26 [The disk label] COHN
  FEP0:>FREE-PAGES.FEP.1    15      0(8)   1/15/00 03:47:39 [Free pages map] COHN
  FEP0:>PAGE.PAGE.1 60000      0(8)        1/15/00 03:48:30 [Main paging area] COHN
  FEP0:>page1.page.1 25000      0(8)       1/30/84 03:50:12 [Ancillary paging area] JCMa
  FEP0:>release-5-1-plus.boot.1     1    229(8) 8/13/84 11:08:47 [] Hewitt
  FEP0:>Release-5-1-Plus.Load.1 19756 22758912(8) 7/11/84 10:56:07 [Rel 5.1] Lisp Machine
  FEP0:>release-5-2-prime.boot.1     1    230(8) 11/08/84 08:45:49 [] Lisp Machine
  FEP0:>release-5-2-prime.load.1 21160 24376320(8) 11/07/84 21:54:23 [242.356] Lisp Machine
  FEP0:>ROOT-DIRECTORY.DIR.1     2      0(8) 1/15/00 03:47:24 [His highness] COHN
  FEP0:>Salvage.Tmp.1    61  69567(8)      1/31/84 17:14:34 [] Millgram
  FEP0:>sequence-number.fep.1     1      0(8) 11/23/83 02:57:11 [] Lisp Machine
  FEP0:>tmc5-mic.mic.296   108 123852(8)   9/10/84 13:24:05 [TMC5-MIC 296] Lisp Machine
  FEP0:>V18-Debug.Flod.1    29  32622(8)   1/29/84 21:35:33 [] DCP

Fooey, can't telnet to ap3 because File-Server is logged in.  By looking at your boot
files, I can see you must be using release-5-2-prime.load, which you've had for almost
a week.  Is this the first time you've had problems?  If they recur, I'd suggest you
delete some old world (say Release-5-1-plus.load) and bring over a new world from 7AI.
13-Nov-84 21:14:26-EST,1053;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 13 Nov 84 21:13-EST
Date:  Tue, 13 Nov 84 21:03 EST
From:  Barry Margolin <Margolin@MIT-MULTICS.ARPA>
Subject:  Re: :initable or :inittable ?
To:  Sue Miller <smiller@SCRC-STONY-BROOK.ARPA>
cc:  smh@MIT-EMS.ARPA, bug-lispm@MIT-OZ.ARPA
In-Reply-To:  Message of 13 Nov 84 16:19 EST from "Sue Miller"
Message-ID:  <841114020303.220236@MIT-MULTICS.ARPA>

If you're going to talk linguistically, then INITTABLE is more correct.
In general, when adding suffixes to words whose last syllable is a short
vowel sound followed by a single consonant you double the consonant if
the last syllable is accented.

I remember when the form with two T's was added to the MIT system.
There was no overriding concensus for one over the other.  RMS decided
to allow them both as synonyms so that everyone would be happy and
people wouldn't have to try to remember which one was really correct.
It's called the principle of least surprise:  when a user does something
that seems reasonable, don't screw him.
13-Nov-84 21:59:34-EST,2588;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 13 Nov 84 21:58-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 126448; Tue 13-Nov-84 22:02:15-EST
Date: Tuesday, 13 November 1984, 21:59-EST
From: David C. Plummer in disguise <DCP at SCRC-TENEX>
Subject: :initable or :inittable ?
To: Sue Miller <smiller at SCRC-STONY-BROOK>, smh at MIT-EMS,
    bug-lispm at MIT-OZ
In-Reply-To: <841113161911.3.SMILLER@WABASH.SCRC.Symbolics.COM>
Message-ID: <841113215935.2.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Tuesday, 13 November 1984, 16:19-EST
    From: Sue Miller <smiller at SCRC-STONY-BROOK>

	Date: 13 Nov 1984 15:46:16-EST
	From: smh@mit-ems

	This one has probably been though the mill before, but I must have
	missed it.  Different editions of the MIT Lisp Machine Manual disagree
	about the spelling of the DEFFLAVOR option :INITABLE-INSTANCE-VARIABLES
	aka :INITTABLE-INSTANCE-VARIABLES.  By direct experiment, it seems that
	3600s accept only the former, while CADRs accept either.

	I speculate that an attempt is underway to regularize the (mis)spelling
	as :INITTABLE (to "agree" with :SETTABLE and :GETTABLE), but that
	Symbolics is not going along?  Would someone in the know comment?  Which
	spelling is likely to be the final one?

    From a linguistic standpoint, it makes complete sense to have :SETTABLE
    and :GETTABLE with two Ts, and :INITABLE with one T.  The morpheme INIT
    differs in two distinct ways from SET and GET:

    -GET and SET each have only one syllable; INIT has two syllables

    -the second syllable of INIT doesn't have the same vowel sound as does
     GET and SET

    If you don't have that extra T in GETTABLE and SETTABLE, you end up
    making a sound that is rather awkward in American English.  On the other
    hand, INIT is pronounced differently and doesn't need that extra T at
    the beginning of the suffix.

    English speakers use (albeit subconsciously) these kinds of distinctions
    when figuring out how to add suffixes.  It also appears that in this
    case the spelling matches the pronunciation.  In glancing through a
    dictionary, suffixes to GET and SET do add an extra T, but suffixes to
    multi-syllabic words ending in T use only one T.

Additionally, the way I remember that it is :initable (instead of
:inittable [I'm a terrible speller]) is that it has the same number of
characters as :settable and :gettable, so these forms in the defflavor
all line up.

    Anyway, :inittable looks strange.

That too.
13-Nov-84 22:43:05-EST,545;000000000000
Mail-From: CRM created at 13-Nov-84 22:42:03
Date: Tue 13 Nov 84 22:42:03-EST
From: Carl R. Manning <CRM@MIT-OZ>
Subject: Re: "OZ" is not a flavor object
To: joseph@SCRC-QUABBIN
cc: bug-lispm@MIT-OZ
In-Reply-To: Message from "Joseph R Goldstone <joseph at SCRC-QUABBIN>" of Tue 13 Nov 84 19:31:47-EST

Actually, <function> <help> hasn't worked for a long time, maybe 6 months
or more.  It wasn't a serious problem, so I didn't report it; but since it
hasn't been fixed in the last few releases, I thought I might mention it.
-------
13-Nov-84 23:04:17-EST,1726;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 13 Nov 84 23:02-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 126476; Tue 13-Nov-84 23:06:10-EST
Date: Tuesday, 13 November 1984, 23:03-EST
From: David C. Plummer in disguise <DCP at SCRC-TENEX>
Subject: "OZ" is not a flavor object
To: Carl R. Manning <crm at MIT-OZ>, bug-lispm at MIT-OZ,
    LispM-Users at MIT-OZ
In-Reply-To: The message of 13 Nov 84 18:31-EST from Carl R. Manning <crm at MIT-OZ>
Message-ID: <841113230319.7.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Tuesday, 13 November 1984, 18:31-EST
    From: Carl R. Manning <crm at MIT-OZ>

    This bug is easily reproduced; just type <function> <help>.  However
    it seems to be deeply rooted, as the same error crops up if you then try
    to send a bug report, either from the debugger or from ZMail.  That's
    why this message isn't in the form of a bug report.

    I think something is finding a string where it expects a flavor object. 
    Error messages look something like:

	...

The bug is in your init file.
    (login-setq
	...
	    zwei:*host-for-bug-reports* "OZ"	  ; Where to BUG- people.
	)
zwei:*host-for-bug-reports* is supposed to be a host, not a string.
Many other people have reported this, but apparently our replies haven't
hit everybody.  Therefore, I am sending this to LispM-Uses.

This applies for Symbolics machines running 5.2.
zwei:*host-for-bug-reports* must be a host object, not a string.  If you
don't like the default value (I don't know what it is) and if you want
it to be OZ, you should use (net:parse-host "OZ") instead of just the
string "OZ".  Everybody please update your init files.
13-Nov-84 23:12:51-EST,1912;000000000000
Mail-From: MLY created at 13-Nov-84 23:11:31
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 13 Nov 84 23:02-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 126476; Tue 13-Nov-84 23:06:10-EST
Date: Tuesday, 13 November 1984, 23:03-EST
From: David C. Plummer in disguise <DCP at SCRC-TENEX>
Subject: "OZ" is not a flavor object
To: Carl R. Manning <crm at MIT-OZ>, bug-lispm at MIT-OZ,
    LispM-Users at MIT-OZ
In-Reply-To: The message of 13 Nov 84 18:31-EST from Carl R. Manning <crm at MIT-OZ>
Message-ID: <841113230319.7.NFEP@NEPONSET.SCRC.Symbolics.COM>
ReSent-Date: Tue 13 Nov 84 23:11:30-EST
ReSent-From: Your Friendly(*) Marketing Representative <MLY@MIT-OZ>
ReSent-To: info-lispm@MIT-OZ

    Date: Tuesday, 13 November 1984, 18:31-EST
    From: Carl R. Manning <crm at MIT-OZ>

    This bug is easily reproduced; just type <function> <help>.  However
    it seems to be deeply rooted, as the same error crops up if you then try
    to send a bug report, either from the debugger or from ZMail.  That's
    why this message isn't in the form of a bug report.

    I think something is finding a string where it expects a flavor object. 
    Error messages look something like:

	...

The bug is in your init file.
    (login-setq
	...
	    zwei:*host-for-bug-reports* "OZ"	  ; Where to BUG- people.
	)
zwei:*host-for-bug-reports* is supposed to be a host, not a string.
Many other people have reported this, but apparently our replies haven't
hit everybody.  Therefore, I am sending this to LispM-Uses.

This applies for Symbolics machines running 5.2.
zwei:*host-for-bug-reports* must be a host object, not a string.  If you
don't like the default value (I don't know what it is) and if you want
it to be OZ, you should use (net:parse-host "OZ") instead of just the
string "OZ".  Everybody please update your init files.
13-Nov-84 23:20:00-EST,2274;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 13 Nov 84 23:19-EST
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 126485; Tue 13-Nov-84 23:21:58-EST
Date: Tuesday, 13 November 1984, 23:19-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: Re: "OZ" is not a flavor object
To: Carl R. Manning <CRM at MIT-OZ>
cc: bug-lispm at MIT-OZ, bug-lmdoc at SCRC-TENEX
In-Reply-To: The message of 13 Nov 84 22:42-EST from Carl R. Manning <CRM at MIT-OZ>
Message-ID: <841113231906.7.MOON@EUPHRATES.SCRC.Symbolics.COM>

    Date: Tue 13 Nov 84 22:42:03-EST
    From: Carl R. Manning <CRM@MIT-OZ>

    Actually, <function> <help> hasn't worked for a long time, maybe 6 months
    or more.  It wasn't a serious problem, so I didn't report it; but since it
    hasn't been fixed in the last few releases, I thought I might mention it.

It hasn't worked since you started using Release 5, because your init file,
the file OZ:PS:<CRM>LISPM-INIT-BACKUP.LISP contains the form 

(login-setq tv:*finger-arg-alist*	  ; Places to finger.
	    '((NIL . :login)
	      (1 . :lisp-machines)
	      (2 "OZ")
	      (3 "MC")
	      (4 "MC" "ML")
	      (5 "XX" "EE")
	      (6 "SCRC")
	      (0 . :read) ))

The Release Notes don't seem to mention this, probably because there was
never any documentation saying you could set this variable (if there was,
I can't find it now).  A lot of people at MIT seem to have copied this
form from each other, but they didn't all tell each other when their
old value stopped working in Release 5.

Smash the variable to the correct value, or don't smash it at all, and
your troubles will be over.

By the way the default value at MIT is

  (("8" :ALL-LISP-MACHINES NIL)
   ("1" :LOCAL-LISP-MACHINES NIL)
   ("0" :READ NIL)
   ("NONE" :LOGIN NIL)
   ("3" :HOST (#<ITS-HOST MC 53304225>))
   ("2" :HOST (#<TOPS20-HOST OZ 53304127>))
   ("5" :HOST (#<VMS-HOST PYGMALION 53304101> #<UNIX-HOST PREP 53304041>))
   ("4" :HOST (#<TOPS20-HOST EECS 53303756>))
   ("6" :HOST (#<ITS-HOST ML 53303663>))
   ("7" :HOST (#<TENEX-HOST TENEX 53302330>)))

which except for the order being scrambled is only a little different from
what you have, and may be useful to you as a model.
14-Nov-84 12:21:35-EST,921;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 14 Nov 84 12:20-EST
Date: Wednesday, 14 November 1984, 12:08-EST
From: Gavan Duffy <GAVAN at MIT-OZ>
Subject: "OZ" is not a flavor object
To: DCP at SCRC-TENEX, crm at MIT-OZ, bug-lispm at MIT-OZ,
    LispM-Users at MIT-OZ
In-reply-to: <841113230319.7.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Tuesday, 13 November 1984, 23:03-EST
    From: David C. Plummer in disguise <DCP at SCRC-TENEX>

    zwei:*host-for-bug-reports* is supposed to be a host, not a string.
    Many other people have reported this, but apparently our replies haven't
    hit everybody.  Therefore, I am sending this to LispM-Uses.

I've found it helpful to have an extended command in ZMAIL that changes the
mail host.  It's very helpful when the mail host goes down or when it's
too busy to accept incoming mail (MC does that a lot).  The vanilla world
should have such a thing.
14-Nov-84 12:39:22-EST,1147;000000000000
Received: from MIT-MORRISON by MIT-OZ via Chaosnet; 14 Nov 84 12:39-EST
Date: Wednesday, 14 November 1984, 12:39-EST
From: Gavan Duffy <GAVAN at MIT-OZ>
To: DODDS at SCRC-TENEX
Cc: BUG-LISPM at MIT-OZ, User-Interface at SCRC-TENEX
In-reply-to: <841113093309.1.DODDS@ANNISQUAM.SCRC.Symbolics.COM>

    Date: Tuesday, 13 November 1984, 09:33-EST
    From: Doug Dodds <DODDS at SCRC-TENEX>

	Date: Monday, 12 November 1984, 09:48-EST
	From: Gavan Duffy <GAVAN at MIT-OZ>

	In Symbolics 3600 System 242.356, Hardcopy 20.10,
	Experimental RELATUS 131.90, FEP 18, on Lisp Machine John Lennon:

	It STILL bothers me that LOAD-PATCHES' FQUERY doesn't FRESH-LINE.

    I don't recall seeing earlier mail on this.  I kind of like the question
    as it stands.  

It was months ago.  No one responded.  I don't have any problem with the
content of the question (Load?), just with the fact that it doesn't
FRESH-LINE.  If you bind load-patches to a key in ZMACS, the patch comments
print to the typeout window while the query prints to the typein window.  The
queries bump up against each other with no spaces.  It looks like shit.
14-Nov-84 14:05:17-EST,802;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 14 Nov 84 14:05-EST
Date: 14 November 1984 14:05-EST
From: Christopher R. Eliot <CRE @ MIT-MC>
Subject:  Font Change problems.
To: Bug-Lispm @ MIT-OZ

The font change functions (e.g. C-X C-J) in Zwei put the font change indicators
in the wrong place.  If the region is at the end of a line, the font change code
gets put ater the CR.  This makes Zwei unusable for editing text justifier source
files, such as R.  For example, the following example shows how zwei can
cause severe formatting problems in R sources.  I used Zwei to change the font
of the Word BAZ, but this changed the line after the visible region, making the
"No fill" request illegal.
	Chris Eliot

;;; -*- Fonts: CPTFONT,CPTFONTB,CPTFONTI -*-
.fi
Foo Bar
1baz
0.nf
15-Nov-84 09:17:35-EST,1073;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 15 Nov 84 09:16-EST
Received: from SCRC-PEACE by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 126823; Wed 14-Nov-84 15:27:17-EST
Date: Wednesday, 14 November 1984, 15:24-EST
From: Charles Hornig <Hornig at SCRC-STONY-BROOK>
Subject: Blowout in namespace editor.
To: CJL at MIT-OZ, BUG-LISPM at MIT-OZ
In-Reply-To: <841031122032.1.FILE-SERVER@CADR-15.MIT>
Message-ID: <841114152427.4.HORNIG@PEACE.SCRC.Symbolics.COM>

    Date: Wednesday, 31 October 1984, 12:20-EST
    From: CJL at MIT-OZ

    In Symbolics LM-2 Experimental System 243.794,
    Experimental Hardcopy 21.31, Experimental Zmail 84.162,
    Experimental LMFS 38.91, Experimental Tape 22.17,
    Experimental Print 35.10, microcode 998, on Lisp Machine Fifteen:

    I clicked VIEW, then clicked NAMESPACE.

    >>Trap: The function NIL is undefined.
    While in the function SI:READ-DELIMITED-STRING-INTERNAL  (:INTERNAL READLINE 0)  (:DEFUN-METHOD TV:RUBOUT-HANDLER-READ)

CADR-15 is dead.  Does this still happen on Reagan?
15-Nov-84 12:22:57-EST,1743;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 15 Nov 84 12:22-EST
Received: from SCRC-ANNISQUAM by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 127548; Thu 15-Nov-84 12:22:13-EST
Date: Thursday, 15 November 1984, 12:21-EST
From: Doug Dodds <DODDS at SCRC-TENEX>
To: GAVAN at MIT-OZ
cc: DODDS at SCRC-TENEX, BUG-LISPM at MIT-OZ,
    User-Interface at SCRC-TENEX
In-Reply-To: The message of 14 Nov 84 12:39-EST from Gavan Duffy <GAVAN at MIT-OZ>
Message-ID: <841115122136.3.DODDS@ANNISQUAM.SCRC.Symbolics.COM>

    Date: Wednesday, 14 November 1984, 12:39-EST
    From: Gavan Duffy <GAVAN at MIT-OZ>

	Date: Tuesday, 13 November 1984, 09:33-EST
	From: Doug Dodds <DODDS at SCRC-TENEX>

	    Date: Monday, 12 November 1984, 09:48-EST
	    From: Gavan Duffy <GAVAN at MIT-OZ>

	    In Symbolics 3600 System 242.356, Hardcopy 20.10,
	    Experimental RELATUS 131.90, FEP 18, on Lisp Machine John Lennon:

	    It STILL bothers me that LOAD-PATCHES' FQUERY doesn't FRESH-LINE.

	I don't recall seeing earlier mail on this.  I kind of like the question
	as it stands.  

    It was months ago.  No one responded.  I don't have any problem with the
    content of the question (Load?), just with the fact that it doesn't
    FRESH-LINE.  If you bind load-patches to a key in ZMACS, the patch comments
    print to the typeout window while the query prints to the typein window.  The
    queries bump up against each other with no spaces.  It looks like shit.

Ah, now that I see the motivation, I've made a fix to do what you want
when the typeout and queries are to different streams, but leave it as
is for most folks' vanilla case, (load-patches) from a Lisp Listener.
Should be in the next release.
15-Nov-84 22:11:32-EST,1764;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 15 Nov 84 22:11-EST
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 128038; Thu 15-Nov-84 20:59:32-EST
Date: Thursday, 15 November 1984, 20:59-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: Font Change problems.
To: Christopher R. Eliot <CRE at MIT-MC>
cc: Bug-Lispm at MIT-OZ
In-Reply-To: The message of 14 Nov 84 14:05-EST from Christopher R. Eliot <CRE at MIT-MC>
Message-ID: <841115205904.9.MOON@EUPHRATES.SCRC.Symbolics.COM>

    Date: 14 November 1984 14:05-EST
    From: Christopher R. Eliot <CRE @ MIT-MC>

    The font change functions (e.g. C-X C-J) in Zwei put the font change indicators
    in the wrong place.  If the region is at the end of a line, the font change code
    gets put ater the CR.  This makes Zwei unusable for editing text justifier source
    files, such as R.  For example, the following example shows how zwei can
    cause severe formatting problems in R sources.  I used Zwei to change the font
    of the Word BAZ, but this changed the line after the visible region, making the
    "No fill" request illegal.
	    Chris Eliot

    ;;; -*- Fonts: CPTFONT,CPTFONTB,CPTFONTI -*-
    .fi
    Foo Bar
    1baz
    0.nf

It wasn't intended to be used this way.  It's really a coincidence that
the Lisp machine and R use the same representation in files for font
changes.  The reason the 0 is on the next line is that the font is only
changed when it has to be.

I guess it wouldn't hurt very much to make Zwei return to font 0 at the
end of every line when writing a fonted file, but I don't know whether
such a change could make it into the next release at this point.  How
many of our users use R?
16-Nov-84 03:18:32-EST,5366;000000000000
Received: from MIT-LISPM-18 by MIT-OZ via Chaosnet; 16 Nov 84 03:18-EST
Date: Friday, 16 November 1984, 03:19-EST
From: The Lisp Machine <LispM at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In Experimental System 99.9, CADR 4.0, Experimental ZMail 54.2,
MIT-Specific 23.0, microcode 320, GC@2, on Lisp Machine Eighteen:


cold-booted
(make-system 'site ':reload ':noconfirm ':describe)
---> bomb out because of sys:sys;sysdcl because of kansas screw up.
So I type the new filename (after responding super-C) oz:kansas:<l.sys>sysdcl.qfasl
and get this error

>>TRAP 1201 (THROW-TRAP)
There was no pending *CATCH for the tag #FS:TOPS20-PATHNAME "OZ:KANSAS:<L.SYS>SYSDCL.QFASL".
The value being thrown was G0754.Backtrace from the debugger:

SI:FILE-RETRY-RESUME-HANDLER (P.C. = 25)

 Arg 0 (ERROR-OBJECT): #FS:DIRECTORY-NOT-FOUND-ERROR :PROPERTY-LIST (:PATHNAME #FS:LOGICAL-PATHNAME "SYS: SYS; SYSDCL QFASL >" :OPERATION :OPEN) :CONDITION-NAMES (FS:DIRECTORY-NOT-FOUND-ERROR FS:FILE-LOOKUP-ERROR FS:FILE-OPERATION-FAILURE FS:FILE-ERROR ...) :FORMAT-STRING "~A" :FORMAT-ARGS ("No such directory name for SYS: SYS; SYSDCL QFASL >") :PATHNAME #FS:LOGICAL-PATHNAME "SYS: SYS; SYSDCL QFASL >" :OPERATION :OPEN
 Arg 1 (NEW-PATHNAME): G0754
 Arg 2 (TAG): #FS:TOPS20-PATHNAME "OZ:KANSAS:<L.SYS>SYSDCL.QFASL"


CALL (P.C. = 154)

 Arg 0 (FN): SI:FILE-RETRY-RESUME-HANDLER
 Rest arg (ALTERNATES): (NIL #FS:DIRECTORY-NOT-FOUND-ERROR :PROPERTY-LIST (:PATHNAME #FS:LOGICAL-PATHNAME "SYS: SYS; SYSDCL QFASL >" :OPERATION :OPEN) :CONDITION-NAMES (FS:DIRECTORY-NOT-FOUND-ERROR FS:FILE-LOOKUP-ERROR FS:FILE-OPERATION-FAILURE FS:FILE-ERROR ...) :FORMAT-STRING "~A" :FORMAT-ARGS ("No such directory name for SYS: SYS; SYSDCL QFASL >") :PATHNAME #FS:LOGICAL-PATHNAME "SYS: SYS; SYSDCL QFASL >" :OPERATION :OPEN :SPREAD (G0754) ...)
Local 1 (MAX-ARGS): 0
Local 2 (ARGS-INF): 131203
Local 3 (Y): NIL
Local 4 (OPTIONAL-FLAG): NIL
Local 5 (SPREAD-FLAG): NIL
Local 6: NIL
Local 7 (X): #FS:TOPS20-PATHNAME "OZ:KANSAS:<L.SYS>SYSDCL.QFASL"


EH:INVOKE-RESUME-HANDLER (P.C. = 42)

 Arg 0 (CONDITION): #FS:DIRECTORY-NOT-FOUND-ERROR :PROPERTY-LIST (:PATHNAME #FS:LOGICAL-PATHNAME "SYS: SYS; SYSDCL QFASL >" :OPERATION :OPEN) :CONDITION-NAMES (FS:DIRECTORY-NOT-FOUND-ERROR FS:FILE-LOOKUP-ERROR FS:FILE-OPERATION-FAILURE FS:FILE-ERROR ...) :FORMAT-STRING "~A" :FORMAT-ARGS ("No such directory name for SYS: SYS; SYSDCL QFASL >") :PATHNAME #FS:LOGICAL-PATHNAME "SYS: SYS; SYSDCL QFASL >" :OPERATION :OPEN
 Arg 1 (PROCEED-TYPE): :NEW-PATHNAME
 Rest arg (ARGS): (#FS:TOPS20-PATHNAME "OZ:KANSAS:<L.SYS>SYSDCL.QFASL")
Local 1 (H): ((FS:FILE-ERROR) :NEW-PATHNAME T ("Try again with a new pathname, not telling the callers.") ...)


SIGNAL-CONDITION (P.C. = 206)

 Arg 0 (CONDITION): #FS:DIRECTORY-NOT-FOUND-ERROR :PROPERTY-LIST (:PATHNAME #FS:LOGICAL-PATHNAME "SYS: SYS; SYSDCL QFASL >" :OPERATION :OPEN) :CONDITION-NAMES (FS:DIRECTORY-NOT-FOUND-ERROR FS:FILE-LOOKUP-ERROR FS:FILE-OPERATION-FAILURE FS:FILE-ERROR ...) :FORMAT-STRING "~A" :FORMAT-ARGS ("No such directory name for SYS: SYS; SYSDCL QFASL >") :PATHNAME #FS:LOGICAL-PATHNAME "SYS: SYS; SYSDCL QFASL >" :OPERATION :OPEN
 Arg 1 (CONDITION-PROCEED-TYPES): NIL
   --Defaulted args:--
 Arg 2 (USE-DEBUGGER): T
 Arg 3 (UCODE-ERROR-STATUS): NIL
 Arg 4 (INHIBIT-RESUME-HANDLERS): NIL
Local 0 (TEM1): (:NEW-PATHNAME #FS:TOPS20-PATHNAME "OZ:KANSAS:<L.SYS>SYSDCL.QFASL")
Local 1 (CONDITION-NAMES): (FS:DIRECTORY-NOT-FOUND-ERROR FS:FILE-LOOKUP-ERROR FS:FILE-OPERATION-FAILURE FS:FILE-ERROR ...)
Local 2 (DEBUGGER-CALLED): T
Local 3: NIL
Local 4 (C): NIL


SIGNAL (P.C. = 88)

 Arg 0 (SIGNAL-NAME-OR-CONDITION-OBJECT): #FS:DIRECTORY-NOT-FOUND-ERROR :PROPERTY-LIST (:PATHNAME #FS:LOGICAL-PATHNAME "SYS: SYS; SYSDCL QFASL >" :OPERATION :OPEN) :CONDITION-NAMES (FS:DIRECTORY-NOT-FOUND-ERROR FS:FILE-LOOKUP-ERROR FS:FILE-OPERATION-FAILURE FS:FILE-ERROR ...) :FORMAT-STRING "~A" :FORMAT-ARGS ("No such directory name for SYS: SYS; SYSDCL QFASL >") :PATHNAME #FS:LOGICAL-PATHNAME "SYS: SYS; SYSDCL QFASL >" :OPERATION :OPEN
 Rest arg (ARGS): (:PROCEED-TYPES NIL)
Local 1: NIL
Local 2 (PROCEED-TYPES-P): T
Local 3 (PROCEED-TYPES): NIL
Local 4 (CONDITION): #FS:DIRECTORY-NOT-FOUND-ERROR :PROPERTY-LIST (:PATHNAME #FS:LOGICAL-PATHNAME "SYS: SYS; SYSDCL QFASL >" :OPERATION :OPEN) :CONDITION-NAMES (FS:DIRECTORY-NOT-FOUND-ERROR FS:FILE-LOOKUP-ERROR FS:FILE-OPERATION-FAILURE FS:FILE-ERROR ...) :FORMAT-STRING "~A" :FORMAT-ARGS ("No such directory name for SYS: SYS; SYSDCL QFASL >") :PATHNAME #FS:LOGICAL-PATHNAME "SYS: SYS; SYSDCL QFASL >" :OPERATION :OPEN


Remainder of stack:

FS:FILE-PROCESS-ERROR (P.C. = 90)
FS:QFILE-PROCESS-ERROR-NEW (P.C. = 130)
FS:OPEN-CHAOS (P.C. = 802)
(:METHOD FS:QFILE-ACCESS :OPEN) (P.C. = 26)
(:METHOD FS:FILE-HOST-MIXIN :ACCESS-OPERATION) (P.C. = 25)
(:METHOD FS:HOST-PATHNAME :OPEN) (P.C. = 31)
FS:LOGICAL-PATHNAME-PASS-ON (P.C. = 22)
OPEN (P.C. = 155)
PROBEF (P.C. = 61)
SI:MAYBE-RELOAD-FILE (P.C. = 87)
...
COMPILER:DISASSEMBLE-INSTRUCTION (P.C. = 177)
DISASSEMBLE (P.C. = 116)
SYS:EVAL1 (P.C. = 717)
SI:EVAL-SPECIAL-OK (P.C. = 82)
SI:EVAL-ABORT-TRIVIAL-ERRORS (P.C. = 36)
SI:LISP-TOP-LEVEL1 (P.C. = 274)
SI:LISP-TOP-LEVEL2 (P.C. = 23)
SI:PROCESS-TOP-LEVEL (P.C. = 115)
SI:LISP-TOP-LEVEL (P.C. = 39)
16-Nov-84 03:24:54-EST,2204;000000000000
Received: from MIT-LISPM-18 by MIT-OZ via Chaosnet; 16 Nov 84 03:24-EST
Date: Friday, 16 November 1984, 03:25-EST
From: The Lisp Machine <LispM at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In Experimental System 99.9, CADR 4.0, Experimental ZMail 54.2,
MIT-Specific 23.0, microcode 320, GC@2, on Lisp Machine Eighteen:

In a control-breakpoint out of a term-1-f
after doing some remote disk label looking, thought I hit abort, but that
really doesn't seem to explain this weird error....

>>ERROR: Cannot convert #<ART-Q-512 10577645> into a string.
Backtrace from the debugger:

STRING (P.C. = 69)

 Arg 0 (X): #<ART-Q-512 10577645>


STRING-SEARCH-CHAR (P.C. = 79)

 Arg 0 (CHAR): #/RETURN
 Arg 1 (STRING): #<ART-Q-512 10577645>
 Arg 2 (FROM): 0
 Arg 3 (TO): 112
   --Defaulted args:--
 Arg 4 (CONSIDER-CASE): NIL
Local 0 (ALPHABETIC-CASE-AFFECTS-STRING-COMPARISON): NIL


(:METHOD TV:LINE-TRUNCATING-MIXIN :STRING-OUT) (P.C. = 58)
  (SELF is #<TV:TRUNCATING-POP-UP-TEXT-WINDOW-WITH-RESET Truncating Pop Up Text Window With Reset 1 2704711 exposed>)

 Arg 0 (.OPERATION.): :STRING-OUT
 Arg 1 (STRING): #<ART-Q-512 10577645>
   --Defaulted args:--
 Arg 2 (START): 0
 Arg 3 (END): 112
Local 0 (I): 0
Local 1 (CR-IDX): NIL


TV:RH-REPRINT-INPUT (P.C. = 78)

 Arg 0 (CHAR): 140
   --Defaulted args:--
 Arg 1 (DONT-SET-PROMPT-CURSORPOS): NIL
Local 0 (PROMPT): NIL


TV:RH-COM-REFRESH-SCREEN (P.C. = 25)

 Arg 0 (IGNORE): 1


Remainder of stack:

TV:ALTERNATE-RUBOUT-HANDLER (P.C. = 514)
(:METHOD TV:STREAM-MIXIN :ANY-TYI) (P.C. = 117)
SI:XR-XRTYI (P.C. = 64)
SI:XR-READ-THING (P.C. = 79)
SI:INTERNAL-READ (P.C. = 234)
(:INTERNAL READ-FOR-TOP-LEVEL SI:.DO.IT.) (P.C. = 25)
(:METHOD TV:STREAM-MIXIN :RUBOUT-HANDLER) (P.C. = 107)
READ-FOR-TOP-LEVEL (P.C. = 67)
(:INTERNAL BREAK SI:.DO.IT.) (P.C. = 15)
(:METHOD TV:STREAM-MIXIN :RUBOUT-HANDLER) (P.C. = 200)
...
SI:PRINT-OBJECT (P.C. = 268)
PRINC (P.C. = 49)
FORMAT:OSTRING1 (P.C. = 105)
FORMAT:OSTRING (P.C. = 27)
CHAOS:FINGER-LISPMS (P.C. = 418)
TV:KBD-FINGER (P.C. = 280)
(:INTERNAL TV:KBD-ESC 0) (P.C. = 24)
SI:PROCESS-RUN-FUNCTION-INTERNAL (P.C. = 66)
SI:PROCESS-TOP-LEVEL (P.C. = 115)
16-Nov-84 03:58:59-EST,1789;000000000000
Received: from MIT-LISPM-27 by MIT-OZ via Chaosnet; 16 Nov 84 03:58-EST
Date: Friday, 16 November 1984, 03:59-EST
From: The AI File Server <LMFile at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In System 98.76, CADR 3.10, ZMail 53.19, MIT-Specific 22.5,
Experimental Local-File 48.5, Experimental FILE-Server 8.5,
Experimental LFS 3.3, Experimental MagTape 22.6, microcode 309,
Really Kludged 98.76 but it should boot, on Lisp Machine Filecomputer:


Warm booting.   Absolutely, positively only typed control-break
while in Ask the Time

TV:IO-BUFFER-UNGET (P.C. = 51)

 Arg 0 (BUFFER): #<TV:IO-BUFFER 7703055: empty, State: NIL>
 Arg 1 (ELT): 51
Local 0 (OUTPUT-POINTER): 77
Local 1 (INPUT-RECORD): NIL


(:METHOD TV:STREAM-MIXIN :UNTYI) (P.C. = 66)
  (SELF is #<LISP-LISTENER Lisp Listener 1 2200000 exposed>)

 Arg 0 (OPERATION): :UNTYI
 Arg 1 (CH): 51


BREAK (P.C. = 504)

 Arg 0 (FORMAT-STRING): "BREAK."
 Rest arg (ARGS): NIL
Local 1 (SAVED-BUFFER): #<ART-Q-1000 15763550>
Local 2 (SAVED-BUFFER-POSITION): 25
Local 3: NIL
Local 4 (LAST-TIME-DEFAULT-COMMON-LISP): NIL
Local 5 (CHAR): 51
Local 6 (THROW-FLAG): NIL
Local 7: NIL
Local 8: NIL
Local 9 (TEM1): NIL
Local 10 (TEM): NIL
Local 11 (VALUES): NIL
Local 12: NIL
Local 13 (VALUE): NIL


TV:KBD-INTERCEPT-BREAK (P.C. = 35)

 Arg 0 (CHAR): 10000201
 Rest arg (IGNORE): (#<LISP-LISTENER Lisp Listener 1 2200000 exposed>)


EH:FOOTHOLD (P.C. = 20)



Remainder of stack:

PROCESS-WAIT (P.C. = 44)
PROCESS-WAIT-WITH-TIMEOUT (P.C. = 44)
CHAOS:HOST-TIME (P.C. = 175)
TIME:INITIALIZE-TIMEBASE (P.C. = 146)
SI:EVAL1 (P.C. = 1324)
PROGN (P.C. = 76)
SI:EVAL1 (P.C. = 1324)
EVAL (P.C. = 62)
INITIALIZATIONS (P.C. = 135)
LISP-REINITIALIZE (P.C. = 1424)
SI:LISP-TOP-LEVEL (P.C. = 36)
16-Nov-84 05:19:08-EST,2729;000000000000
Received: from MIT-LISPM-23 by MIT-OZ via Chaosnet; 16 Nov 84 05:19-EST
Date: Friday, 16 November 1984, 05:19-EST
From: The Lisp Machine <lispm at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In System 98.62, CADR 3.7, ZMail 53.17, MIT-Specific 22.1, microcode 309,
ZM MIT, on Lisp Machine Twenty-three:


Had stopped an attempt to get a file from OZ.  When I <resumed> this was the
error in chaos background.  Sure, I deserve to be blown away in my current process,
but I shouldn't expect an error like this in the chaos background process.

>>TRAP 17443 (TRANS-TRAP)
The function NIL is undefined.
Backtrace from the debugger:

FS:HOST-CHAOS-INTERRUPT-FUNCTION (P.C. = 320)

 Arg 0 (REASON): :INPUT
 Arg 1 (CONN): #<CHAOS Connection to MIT-OZ FILE 1 35350312>
 Rest arg (IGNORE): NIL
Local 1 (PKT): #<CHAOS packet. PKT-STRING "T1616 O1607 ERROR BUG F Data packet being discarded because channel not active" PKT-STATUS CHAOS:RELEASED 10516620>
Local 2 (STRING): "O1607 ERROR BUG F Data packet being discarded because channel not active"
Local 3 (TEM): NIL
Local 4 (*SELECTQ-ITEM*): 202
Local 5 (DATA-CONNS): ((#<CHAOS Connection 27275677> "I1606" "O1607" 6013044 ...))
Local 6 (HANDLE-LEN): 5
Local 7 (STREAM): NIL
Local 8 (STRING): NIL
Local 9 (FROM): NIL


CHAOS:INTERRUPT-CONN-INTERNAL (P.C. = 40)

 Arg 0 (IFUN): #<DTP-CLOSURE 36162607>
 Arg 1 (REASON): :INPUT
 Arg 2 (CONN): #<CHAOS Connection to MIT-OZ FILE 1 35350312>
 Arg 3 (ARGS): NIL


SI:EVAL1 (P.C. = 1324)

 Arg 0 (FORM): (CHAOS:INTERRUPT-CONN-INTERNAL (QUOTE #<DTP-CLOSURE 36162607>) (QUOTE :INPUT) (QUOTE #<CHAOS Connection to MIT-OZ FILE 1 35350312>) ...)
   --Defaulted args:--
 Arg 1 (NOHOOK): NIL
Local 0 (ARGNUM): 4
Local 1 (TEM): NIL
Local 2 (ENV): NIL
Local 3 (TAIL): NIL
Local 4 (FCTN): #<DTP-FEF-POINTER CHAOS:INTERRUPT-CONN-INTERNAL 2577357>
Local 5 (ARG-DESC): 404
Local 6 (NUM-ARGS): 4
Local 7 (CLOSURE-PASSED): NIL
Local 8 (LAMBDA-LIST): NIL
Local 9 (LL): NIL
Local 10 (QUOTE-STATUS): NIL
Local 11 (REST-FLAG): NIL
Local 12 (ARGL): NIL
Local 13: NIL
Local 14: NIL
Local 15 (IGNORE): NIL
Local 16 (ADL): NIL
Local 17 (ITEM): NIL
Local 18 (*SELECTQ-ITEM*): NIL


EVAL (P.C. = 62)

 Arg 0 (FORM): (CHAOS:INTERRUPT-CONN-INTERNAL (QUOTE #<DTP-CLOSURE 36162607>) (QUOTE :INPUT) (QUOTE #<CHAOS Connection to MIT-OZ FILE 1 35350312>) ...)
   --Defaulted args:--
 Arg 1 (NOHOOK): NIL
Local 0 (TEM): NIL


CHAOS:BACKGROUND (P.C. = 114)

Local 0 (LAST-WAKEUP-TIME): 6033150
Local 1 (LAST-PROBE-TIME): 6033150
Local 2 (TASKS): ((CHAOS:INTERRUPT-CONN-INTERNAL ** ** ** ...))
Local 3 (TIME): 6033150
Local 4 (I): 100
Local 5: 100


Remainder of stack:

SI:PROCESS-TOP-LEVEL (P.C. = 246)
16-Nov-84 05:20:32-EST,4977;000000000000
Received: from MIT-LISPM-23 by MIT-OZ via Chaosnet; 16 Nov 84 05:20-EST
Date: Friday, 16 November 1984, 05:21-EST
From: The Lisp Machine <lispm at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In System 98.62, CADR 3.7, ZMail 53.17, MIT-Specific 22.1, microcode 309,
ZM MIT, on Lisp Machine Twenty-three:


This bug exists in higher system numbers too:
The proceed types do not include enabling capabilities or any of the
other nice things one might want to do

>>ERROR: Directory access privileges required for SYS: SYS; SYSDCL QFASL 1
Backtrace from the debugger:

FS:OPEN-CHAOS (P.C. = 1546)

 Arg 0 (HOST): #FS:TOPS20-CHAOS-HOST "MIT-OZ"
 Arg 1 (PATHNAME): #FS:LOGICAL-PATHNAME "SYS: SYS; SYSDCL QFASL 1"
 Rest arg (OPTIONS): (:DIRECTION :OUTPUT :CHARACTERS NIL ...)
Local 1 (DIRECTION): :OUTPUT
Local 2 (CHARACTERS): NIL
Local 3 (ERROR): T
Local 4: (NIL)
Local 5: (NIL)
Local 6: :SUPERSEDE
Local 7: (NIL)
Local 8 (TEMPORARY): NIL
Local 9 (DELETED): NIL
Local 10 (RAW): NIL
Local 11 (SUPER-IMAGE): NIL
Local 12 (BYTE-SIZE): 20
Local 13 (PRESERVE-DATES): NIL
Local 14 (INHIBIT-LINKS): NIL
Local 15 (SUBMIT): NIL
Local 16 (ESTIMATED-LENGTH): NIL
Local 17 (ELEMENT-TYPE-P): NIL
Local 18 (ACCESS-ERROR): NIL
Local 19 (ELEMENT-TYPE): STRING-CHAR
Local 20 (IF-EXISTS): :SUPERSEDE
Local 21 (IF-DOES-NOT-EXIST): :CREATE
Local 22 (HOST-UNIT): #<HOST-UNIT 7731304>
Local 23 (DATA-CONN): (#<CHAOS Connection 27275677> "I1606" "O1607" 6013044 ...)
Local 24 (PKT): #<CHAOS packet. PKT-STRING "T1621 O1607 ERROR ATD F Directory access privileges required" PKT-STATUS NIL 21171757>
Local 25 (SUCCESS): NIL
Local 26 (STRING): "O1607 ERROR ATD F Directory access privileges required"
Local 27 (NOT-ABORTED): T
Local 28 (PHONY-CHARACTERS): NIL
Local 29 (SIGN-EXTEND-BYTES): NIL
Local 30 (IF-EXISTS-P): T
Local 31 (.SELECTQ.ITEM.): 1
Local 32 (ERROR-OBJECT): (#<CHAOS Connection 27275677> "I1606" "O1607" 6013044 ...)
Local 33: ((FS:FILE-NOT-FOUND CONDITION-CASE-THROW USER:G9332) (** EVAL-ABORT-TRIVIAL-ERRORS-HANDLER))
Local 34: (FS:FILE-NOT-FOUND CONDITION-CASE-THROW USER:G9332)
Local 35: (FS:FILE-ALREADY-EXISTS CONDITION-CASE-THROW USER:G9339)
Local 36: ((FS:FILE-ALREADY-EXISTS CONDITION-CASE-THROW USER:G9339) (** EVAL-ABORT-TRIVIAL-ERRORS-HANDLER))
Local 37 (*SELECTQ-ITEM*): NIL
Local 38 (PROPERTIES): NIL
Local 39 (CLOSE-SUCCESS): NIL
Local 40 (ERROR-OBJECT): NIL
Local 41 (IGNORE): NIL


(:METHOD FS:CHAOS-PATHNAME :OPEN) (P.C. = 31)
  (SELF is #FS:TOPS20-PATHNAME "OZ:PS:<L.SYS>SYSDCL.QFASL.1")

 Arg 0 (OPERATION): :OPEN
 Arg 1 (PATHNAME): #FS:LOGICAL-PATHNAME "SYS: SYS; SYSDCL QFASL 1"
 Rest arg (OPTIONS): (:DIRECTION :OUTPUT :CHARACTERS NIL ...)


FS:LOGICAL-PATHNAME-PASS-ON (P.C. = 25)

 Rest arg (REST): (:OPEN #FS:LOGICAL-PATHNAME "SYS: SYS; SYSDCL QFASL 1" :DIRECTION :OUTPUT ...)


OPEN (P.C. = 233)

 Arg 0 (FILENAME): #FS:LOGICAL-PATHNAME "SYS: SYS; SYSDCL QFASL 1"
 Rest arg (KEYWORD-ARGS): (:DIRECTION :OUTPUT :CHARACTERS NIL ...)
Local 1: ((FS:FILE-ERROR) FILE-RETRY-HANDLER #FS:LOGICAL-PATHNAME "SYS: SYS; SYSDCL QFASL 1" USER:G3834)
Local 2: ((** FILE-RETRY-HANDLER #FS:LOGICAL-PATHNAME "SYS: SYS; SYSDCL QFASL 1" USER:G3834) (** EVAL-ABORT-TRIVIAL-ERRORS-HANDLER))
Local 3 (NEW-PATHNAME): NIL
Local 4 (KEYL): NIL
Local 5 (KEY): NIL
Local 6 (CHARACTERS): NIL
Local 7 (DIRECTION): NIL
Local 8 (BYTE-SIZE): NIL
Local 9 (ERROR-P): NIL
Local 10 (ERROR-P-SPECD): NIL
Local 11 (DELETED-P): NIL
Local 12 (TEMPORARY-P): NIL
Local 13 (RAW-P): NIL
Local 14 (SUPER-IMAGE-P): NIL


QC-FILE (P.C. = 1005)

 Arg 0 (INFILE): #FS:LOGICAL-PATHNAME "SYS: SYS; SYSDCL LISP >"
 Arg 1 (OUTFILE): #FS:LOGICAL-PATHNAME "SYS: SYS; SYSDCL QFASL 1"
 Arg 2 (LOAD-FLAG): NIL
 Arg 3 (IN-CORE-FLAG): NIL
 Arg 4 (PACKAGE-SPEC): NIL
   --Defaulted args:--
 Arg 5 (FILE-LOCAL-DECLARATIONS): NIL
 Arg 6 (DONT-SET-DEFAULT-P): NIL
 Arg 7 (READ-THEN-PROCESS-FLAG): NIL
Local 0 (GENERIC-PATHNAME): #FS:LOGICAL-PATHNAME "SYS: SYS; SYSDCL  "
Local 1 (QC-FILE-PACKAGE): NIL
Local 2 (QC-FILE-MACROS-EXPANDED): NIL
Local 3: #<FILE-INPUT-CHARACTER-STREAM "SYS: SYS; SYSDCL LISP >" 35650275>
Local 4 (.FILE-ABORTED-FLAG.): :ABORT
Local 5: NIL
Local 6: NIL
Local 7 (NEW-PATHNAME): NIL
Local 8 (INPUT-STREAM): #<FILE-INPUT-CHARACTER-STREAM "SYS: SYS; SYSDCL LISP >" 35650275>
Local 9 (*SELECTQ-ITEM*): NIL
Local 10 (VALS): (NIL T 10 10 ...)
Local 11: NIL
Local 12 (TEMPS): NIL
Local 13 (.FILE-ABORTED-FLAG.): :ABORT
Local 14: NIL


Remainder of stack:

QC-FILE-1 (P.C. = 44)
DO-FILE-TRANSFORMATIONS (P.C. = 251)
PERFORM-TRANSFORMATIONS (P.C. = 122)
PERFORM-TRANSFORMATIONS (P.C. = 77)
MAKE-SYSTEM (P.C. = 236)
MAYBE-RELOAD-FILE (P.C. = 217)
MAYBE-RELOAD-SYSTEM-DECLARATION (P.C. = 107)
MAKE-SYSTEM (P.C. = 133)
EVAL1 (P.C. = 1324)
EVAL-ABORT-TRIVIAL-ERRORS (P.C. = 61)
LISP-TOP-LEVEL1 (P.C. = 426)
LISP-TOP-LEVEL2 (P.C. = 27)
PROCESS-TOP-LEVEL (P.C. = 246)
