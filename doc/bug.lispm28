 4-Dec-84 14:59:28-EST,5834;000000000001
Received: from MIT-ELVIS by MIT-OZ via Chaosnet; 4 Dec 84 14:59-EST
Date: Tuesday, 4 December 1984, 14:58-EST
From: CJL at MIT-OZ
Sender: tk at MIT-MC
Subject: Filename completion losing in ZWEI.
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 18, on Lisp Machine Elvis Presley:

I C-X C-F while editting "PIG:SYS$SYSROOT:[SYSMGR.SITE]SYLOGIN.COM" and
it says the default is this file, yet there is no way for me to get the
machine to complete to this pathname (I want to edit some fields of it).
hitting COMPLETE or ESCAPE only completes to "PIG:". just typing fields 
that are different doesn't work either. I try just typing [SYSMGR]
and it looks for PIG:SYS$DISK:[SYSMGR]SYLOGIN.COM, not 
PIG:SYS$SYSROOT:[SYSMGR]SYLOGIN.COM. Arrrgggh!

>>Break: 
While in the function PROCESS-WAIT  TV:KBD-IO-BUFFER-GET  (:METHOD TV:STREAM-MIXIN :ANY-TYI)

PROCESS-WAIT:
   Arg 0 (WHOSTATE): "Tyi"
   Arg 1 (FUNCTION): #<DTP-COMPILED-FUNCTION (:INTERNAL TV:KBD-IO-BUFFER-GET 0) 11567420>
   Rest arg (ARGUMENTS): (#<IO-BUFFER 13161567: empty, State: NIL>)

TV:KBD-IO-BUFFER-GET:  (P.C. = 135)
   Arg 0 (BUFFER): #<IO-BUFFER 13161567: empty, State: NIL>
   --Defaulted args:--
   Arg 1 (NO-HANG-P): NIL
   Arg 2 (WHOSTATE): "Tyi"

(:METHOD TV:STREAM-MIXIN :ANY-TYI):  (P.C. = 67)
   Arg 0 (SELF): #<ZMACS-WINDOW-PANE Zmacs Window Pane 1 2643416 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:STREAM-MIXIN -- 14. IV's, 0. FL's 55446660>
   Arg 2 (OPERATION): :ANY-TYI
   --Defaulted args:--
   Arg 3 (IGNORE): NIL

(:INTERNAL ZWEI:RECORDING-STREAM 0):  (P.C. = 11)
   Arg 0 (**DEFSELECT-OP**): :ANY-TYI

ZWEI:RECORDING-STREAM:  (P.C. = 12)
   Arg 0 (OPERATION): :ANY-TYI
   Rest arg (SELECT-METHOD-ARGS): NIL

SYS:CALL-FUNNY-FUNCTION:  (P.C. = 101)
   Arg 0 (FUNCTION): #<DTP-CLOSURE 65241754>
   Rest arg (ARGS): (:ANY-TYI)

Closure of ZWEI:RECORDING-STREAM:
   Arg 0: :ANY-TYI

ZWEI:MACRO-TYI:  (P.C. = 377)
   Arg 0 (OP): :ANY-TYI

ZWEI:MACRO-STREAM-IO-TYI:  (P.C. = 16)
   Arg 0 (OP): :ANY-TYI

ZWEI:MACRO-STREAM-IO:  (P.C. = 32)
   Arg 0 (OPERATION): :ANY-TYI
   Rest arg (SELECT-METHOD-ARGS): NIL

SYS:CALL-FUNNY-FUNCTION:  (P.C. = 101)
   Arg 0 (FUNCTION): #<DTP-CLOSURE 65241632>
   Rest arg (ARGS): (:ANY-TYI)

Closure of ZWEI:MACRO-STREAM-IO:
   Arg 0: :ANY-TYI

(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 153)
   Arg 0 (SELF): #<EDITOR 6426053>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:EDITOR -- 12. IV's, 0. FL's 56160564>
   Arg 2 (OPERATION): :EDIT
   Arg 3 (TOP-LEVEL-P): NIL
   Arg 4 (DESCRIPTION): "Minibuffer Command Level"

ZWEI:COMMAND-LOOP:  (P.C. = 73)
   Arg 0 (COMTAB): #<COMTAB Pathname Reading 56104777>
   Arg 1 (WINDOW): #<WINDOW 13435331>
   Arg 2 (TYPE): ZWEI:EDITOR
   Arg 3 (DESCRIPTION): "Minibuffer Command Level"

ZWEI:EDIT-IN-MINI-BUFFER:  (P.C. = 122)
   Arg 0 (COMTAB): #<COMTAB Pathname Reading 56104777>
   Arg 1 (INITIAL-CONTENTS): NIL
   Arg 2 (INITIAL-CHAR-POS): NIL
   Arg 3 (MODE-LINE-LIST): ("Find file:" " (Default is " "PIG:SYS$SYSROOT:[SYSMGR.SITE]SYLOGIN.COM" ")" (:RIGHT-FLUSH " (Completion)"))

(:METHOD ZWEI:HISTORY :FUNCALL-WITH-DEFAULT):  (P.C. = 12)
   Arg 0 (SELF): #<HISTORY Pathname 57233104>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:HISTORY -- 7. IV's, 0. FL's 67650172>
   Arg 2 (OPERATION): :FUNCALL-WITH-DEFAULT
   Arg 3 (ELEMENT): "PIG:SYS$SYSROOT:[SYSMGR.SITE]SYLOGIN.COM"
   Arg 4 (FUNCTION): #<DTP-COMPILED-FUNCTION ZWEI:EDIT-IN-MINI-BUFFER 11212423>
   Rest arg (ARGS): (#<COMTAB Pathname Reading 56104777> NIL NIL ("Find file:" " (Default is " "PIG:SYS$SYSROOT:[SYSMGR.SITE]SYLOGIN.COM" ")" (:RIGHT-FLUSH " (Completion)")))

ZWEI:READ-DEFAULTED-PATHNAME:  (P.C. = 57)
   Arg 0 (PROMPT): "Find file:"
   Arg 1 (*READING-PATHNAME-DEFAULTS*-initialization): ((#<VMS-HOST PYGMALION 11662607> . #<VMS-PATHNAME "PIG:SYS$SYSROOT:[SYSMGR.SITE]SYLOGIN.COM">) (#<TOPS20-HOST OZ 12156370> . #<TOPS20-PATHNAME "OZ:OZ:<TK>SCHIP.CKT.26">) (#<FEP-FILE-HOST FEP0> . #<FEP-PATHNAME "FEP0:>boot.boot">) (#<ITS-HOST MC 12156356> . #<ITS-PATHNAME "MC: FOO; FOO >">) (NIL . #<VMS-PATHNAME "PIG:SYS$SYSROOT:[SYSMGR.SITE]SYLOGIN.COM">))
   --Defaulted args:--
   Arg 2 (*READING-PATHNAME-SPECIAL-TYPE*-initialization): NIL
   Arg 3 (*READING-PATHNAME-SPECIAL-VERSION*-initialization): NIL
   Arg 4 (*READING-PATHNAME-DIRECTION*-initialization): :READ
   Arg 5 (MERGE-IN-SPECIAL-VERSION): T

ZWEI:COM-FIND-FILE:  (P.C. = 4)

ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
   Arg 0 (COMMAND): ZWEI:COM-FIND-FILE
   Arg 1 (CHAR): 506
   Arg 2 (PREFIX-CHAR): 530
   --Defaulted args:--
   Arg 3 (HOOK-LIST): NIL

ZWEI:MAKE-EXTENDED-COMMAND-INTERNAL:  (P.C. = 77)

SYS:CALL-FUNNY-FUNCTION:  (P.C. = 101)
   Arg 0 (FUNCTION): #<DTP-CLOSURE 65243663>
   Rest arg (ARGS): NIL

Closure of ZWEI:MAKE-EXTENDED-COMMAND-INTERNAL:

ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
   Arg 0 (COMMAND): #<DTP-CLOSURE 65243663>
   Arg 1 (CHAR): 530
   Arg 2 (PREFIX-CHAR): NIL
   Arg 3 (HOOK-LIST): NIL

ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
   Arg 0 (CH): 530

(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 214)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 56161072>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:EDITOR -- 12. IV's, 0. FL's 56160673>
   Arg 2 (OPERATION): :EDIT
   --Defaulted args:--
   Arg 3 (TOP-LEVEL-P): T
   Arg 4 (DESCRIPTION): NIL

(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 41)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 56161072>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:TOP-LEVEL-EDITOR -- 12. IV's, 1. FL's 67653650>
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)

SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
   --Defaulted args:--
   Arg 0 (IGNORE): NIL
 4-Dec-84 18:08:56-EST,1389;000000000001
Received: from MIT-MC by MIT-OZ via Chaosnet; 4 Dec 84 17:39-EST
Received: from Semillon.ms by ArpaGateway.ms ; 02 DEC 84 18:02:39 PST
Date: Sun, 2 Dec 84  18:01 PST
From: dekleer.pa@XEROX.ARPA
Subject: "@" vs. " at "
To: bug-lispm%mit-oz@MIT-MC.ARPA, murray.pa@XEROX.ARPA

Lots of mail from MIT comes out with " at " instead of "@".  Apparently
"@" is the new standard and many msgs from MIT come with illegal
headers.  I think most of these arise from people using ZMAIL. Not all
the options for *SEND-HEADER-FORMAT* and *REPLY-HEADER-FORMAT* of the
ZMAIL profile generates legal headers.

(DEFINE-ZMAIL-USER-OPTION *SEND-HEADER-FORMAT* ':INCLUDE-PERSONAL :MENU-ALIST
			  "Format of headers sent (except via COMSAT)"
			  *HEADER-FORMAT-ALIST*)
(DEFINE-ZMAIL-USER-OPTION *REPLY-HEADER-FORMAT* ':SHORT :MENU-ALIST
			  "Format of headers inserted for reply"
			  *HEADER-FORMAT-ALIST*)

(DEFVAR *HEADER-FORMAT-ALIST* '(("Short" :VALUE :SHORT :DOCUMENTATION
  "Use /"@/" to separate user and host, no personal names.")
				("Long" :VALUE :LONG :DOCUMENTATION
  "Use /" at /" to separate user and host, no personal names.")
				("Include personal" :VALUE :INCLUDE-PERSONAL :DOCUMENTATION
  "Include the user's personal name if any.")
				("Use original" :VALUE :USE-ORIGINAL :DOCUMENTATION
  "Use the exact text of the address from the original.")))

-------
 4-Dec-84 19:00:41-EST,1355;000000000001
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 4 Dec 84 19:00-EST
Received: from SCRC-YANGTZE by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 137719; Tue 4-Dec-84 18:57:54-EST
Date: Tuesday, 4 December 1984, 19:00-EST
From: Carl Hoffman <CWH at SCRC-TENEX>
Subject: Filename completion losing in ZWEI.
To: CJL at MIT-OZ, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 4 Dec 84 14:58-EST from CJL at MIT-OZ
Message-ID: <841204190018.9.CWH@YANGTZE.SCRC.Symbolics.COM>

    Date: Tuesday, 4 December 1984, 14:58-EST
    From: CJL at MIT-OZ

    In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 18, on Lisp Machine Elvis Presley:

    I C-X C-F while editting "PIG:SYS$SYSROOT:[SYSMGR.SITE]SYLOGIN.COM" and
    it says the default is this file, yet there is no way for me to get the
    machine to complete to this pathname (I want to edit some fields of it).
    hitting COMPLETE or ESCAPE only completes to "PIG:". just typing fields 
    that are different doesn't work either. I try just typing [SYSMGR]
    and it looks for PIG:SYS$DISK:[SYSMGR]SYLOGIN.COM, not 
    PIG:SYS$SYSROOT:[SYSMGR]SYLOGIN.COM. Arrrgggh!

c-m-Y is the command for yanking the displayed default.  In Release 4, c-Y
used to do this, but in Release 5 we decided that c-Y should always yank from
the kill history, regardless of the context.
 5-Dec-84 00:40:20-EST,3890;000000000001
Received: from MIT-DUANE by MIT-OZ via Chaosnet; 5 Dec 84 00:39-EST
Date: Wednesday, 5 December 1984, 00:38-EST
From: Christopher Fry <cfry at MIT-OZ>
Subject: unix 4.2 file name extensions 
To: BUG-LISPM at MIT-OZ, bsg at SCRC-STONY-BROOK,
    jek at SCRC-STONY-BROOK
Cc: preppies at MIT-OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 22, on Lisp Machine Duane Allman:

Over the past several weeks, logical to physical pathname translation for
files on prep [unix 4.2] has been inconsistent.
Sometimes logial .lisp is translated to .l [the way it has for a long time]
and sometimes .lisp is translated to .lisp .

The system-type of host PREP is currently :UNIX42 .
On  fs:*CANONICAL-TYPES-ALIST* in the 5-2-prime 3600 band,
there is an enry for :UNIX42 but it contains just 1 translation
for some obscure file type.

The :UNIX entry on this list contains the old favorites, .l, .bn, .tx  .

I suspect the oscillation between the two different translations that I mentioned above
has to do with the changing of the system-type between :UNIX and :UNIX42 .

I assume someone changed prep's system-type because they needed to distinguish
between 4.1 and 4.2 versions using just the lisp machine facilities.

Unfortunately, this causes all the old pathname types to default to something different
than they previously were.
Is this desired by someone at MIT?
What is Symbolics policy about unix 4.2 with regard to file extensions?
Does Symbolics claim to support unix 4.2 currently?

The long term solution is probably to use :UNIX as the system-type
and for their to be support for system-version
  [an instance variable in the host flavor? ]

In the short term, it could be put on the plist of the instance for prep.
Including the version number in the system-type is not a good solution
as it doesn't allow things common from 1 version to another to still work.

I would, in general, prefer unix extensions to be the same as Lisp machine extensions.
With 4.2's longer file names, this is now feasable.
The major problems are:
-How to remain compatable with 4.1
-Making sure there is CONSISTENCY throughout.
......
I have many files using the old extensions on prep.
My own personal solution, for the time being, is to eval:

(DEFINE-CANONICAL-TYPE :TEXT "TEXT"
  ((:TENEX :TOPS-20) "TEXT" "TXT")
  ((:UNIX :UNIX42) "TX" "TEXT" "TXT")
  (:VMS "TXT"))

(DEFINE-CANONICAL-TYPE :LISP "LISP"
  ((:TENEX :TOPS-20) "LISP" "LSP")
  (:ITS :UNSPECIFIC)
  ((:UNIX :UNIX42) "L" "LISP")
  (:VMS "LSP"))

(DEFINE-CANONICAL-TYPE :QBIN "QBIN"
  ((:UNIX :UNIX42) "QB" "QBIN")
  (:VMS "QBN"))

(DEFINE-CANONICAL-TYPE :BIN "BIN"
  ((:UNIX :UNIX42) "BN" "BIN")
  (:VMS "BIN"))

(DEFINE-CANONICAL-TYPE :SYSTEM "SYSTEM"
  ((:UNIX :UNIX42) "SY" "SYSTEM")
  (:VMS "SYD"))

(DEFINE-CANONICAL-TYPE :PATCH-SYSTEM-DIRECTORY "PATCH-DIRECTORY"
  ((:UNIX :UNIX42) "SD")
  (:VMS "SPD")
  (:ITS "(PDIR)"))

(DEFINE-CANONICAL-TYPE :PATCH-VERSION-DIRECTORY "PATCH-DIR"
  ((:UNIX :UNIX42) "PD")
  (:VMS "VPD")
  (:ITS "(PDIR)"))

(DEFINE-CANONICAL-TYPE :MSS "MSS"		;for Scribe files, needed by editor
  ((:UNIX :UNIX42) "MSS" "MS"))

(DEFINE-CANONICAL-TYPE :LGP "LGP"
  ((:UNIX :UNIX42) "LG" "LGP")
  (:VMS "LGP"))

This code was lifted from: pig:usrd$[s.r5.io]pathnm.lsp
and all I did was replace :UNIX with (:UNIX :UNIX42) .
It works just fine, and will continue to work
if prep's system type changes between :unix and :unix42  .

If this were to be a more perminent solution, ALL the file types
from pig:usrd$[s.r5.io]pathnm.lsp should be modified, not just the
few most important ones that I grabbed here.

The Symbolics pathname software is monsterous enough that I have probably
missed a few important criteria. 
Therefore, I recognize this message is "Here is the problem."
not "Here is THE solution." .
 5-Dec-84 11:50:28-EST,4887;000000000001
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 5 Dec 84 11:49-EST
Received: from SCRC-SQUANNACOOK by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 138144; Wed 5-Dec-84 11:11:02-EST
Date: Wednesday, 5 December 1984, 11:12-EST
From: James E. Kulp <jek at SCRC-VIXEN>
Subject: unix 4.2 file name extensions 
To: BUG-LISPM at MIT-OZ, bsg at SCRC-STONY-BROOK,
    jek at SCRC-STONY-BROOK
cc: preppies at MIT-OZ
In-Reply-To: The message of 5 Dec 84 00:38-EST from Christopher Fry <cfry at MIT-OZ>
Message-ID: <841205111245.9.JEK@SQUANNACOOK.SCRC.Symbolics.COM>

    Date: Wednesday, 5 December 1984, 00:38-EST
    From: Christopher Fry <cfry at MIT-OZ>

    In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 22, on Lisp Machine Duane Allman:

    Over the past several weeks, logical to physical pathname translation for
    files on prep [unix 4.2] has been inconsistent.
    Sometimes logial .lisp is translated to .l [the way it has for a long time]
    and sometimes .lisp is translated to .lisp .

    The system-type of host PREP is currently :UNIX42 .
    On  fs:*CANONICAL-TYPES-ALIST* in the 5-2-prime 3600 band,
    there is an enry for :UNIX42 but it contains just 1 translation
    for some obscure file type.

    The :UNIX entry on this list contains the old favorites, .l, .bn, .tx  .

    I suspect the oscillation between the two different translations that I mentioned above
    has to do with the changing of the system-type between :UNIX and :UNIX42 .

    I assume someone changed prep's system-type because they needed to distinguish
    between 4.1 and 4.2 versions using just the lisp machine facilities.

    Unfortunately, this causes all the old pathname types to default to something different
    than they previously were.
    Is this desired by someone at MIT?
    What is Symbolics policy about unix 4.2 with regard to file extensions?
    Does Symbolics claim to support unix 4.2 currently?

    The long term solution is probably to use :UNIX as the system-type
    and for their to be support for system-version
      [an instance variable in the host flavor? ]

    In the short term, it could be put on the plist of the instance for prep.
    Including the version number in the system-type is not a good solution
    as it doesn't allow things common from 1 version to another to still work.

    I would, in general, prefer unix extensions to be the same as Lisp machine extensions.
    With 4.2's longer file names, this is now feasable.
    The major problems are:
    -How to remain compatable with 4.1
    -Making sure there is CONSISTENCY throughout.
    ......
    I have many files using the old extensions on prep.
    My own personal solution, for the time being, is to eval:

    (DEFINE-CANONICAL-TYPE :TEXT "TEXT"
      ((:TENEX :TOPS-20) "TEXT" "TXT")
      ((:UNIX :UNIX42) "TX" "TEXT" "TXT")
      (:VMS "TXT"))

    (DEFINE-CANONICAL-TYPE :LISP "LISP"
      ((:TENEX :TOPS-20) "LISP" "LSP")
      (:ITS :UNSPECIFIC)
      ((:UNIX :UNIX42) "L" "LISP")
      (:VMS "LSP"))

    (DEFINE-CANONICAL-TYPE :QBIN "QBIN"
      ((:UNIX :UNIX42) "QB" "QBIN")
      (:VMS "QBN"))

    (DEFINE-CANONICAL-TYPE :BIN "BIN"
      ((:UNIX :UNIX42) "BN" "BIN")
      (:VMS "BIN"))

    (DEFINE-CANONICAL-TYPE :SYSTEM "SYSTEM"
      ((:UNIX :UNIX42) "SY" "SYSTEM")
      (:VMS "SYD"))

    (DEFINE-CANONICAL-TYPE :PATCH-SYSTEM-DIRECTORY "PATCH-DIRECTORY"
      ((:UNIX :UNIX42) "SD")
      (:VMS "SPD")
      (:ITS "(PDIR)"))

    (DEFINE-CANONICAL-TYPE :PATCH-VERSION-DIRECTORY "PATCH-DIR"
      ((:UNIX :UNIX42) "PD")
      (:VMS "VPD")
      (:ITS "(PDIR)"))

    (DEFINE-CANONICAL-TYPE :MSS "MSS"		;for Scribe files, needed by editor
      ((:UNIX :UNIX42) "MSS" "MS"))

    (DEFINE-CANONICAL-TYPE :LGP "LGP"
      ((:UNIX :UNIX42) "LG" "LGP")
      (:VMS "LGP"))

    This code was lifted from: pig:usrd$[s.r5.io]pathnm.lsp
    and all I did was replace :UNIX with (:UNIX :UNIX42) .
    It works just fine, and will continue to work
    if prep's system type changes between :unix and :unix42  .

    If this were to be a more perminent solution, ALL the file types
    from pig:usrd$[s.r5.io]pathnm.lsp should be modified, not just the
    few most important ones that I grabbed here.

    The Symbolics pathname software is monsterous enough that I have probably
    missed a few important criteria. 
    Therefore, I recognize this message is "Here is the problem."
    not "Here is THE solution." .
Doesn't this point out that the functionality which looks for files
of any of the native types that implies the canonical type isn't
used widely enough?  Basically 4.1 files copied to 4.2 retain an
acceptable, but not preferred native type.  I imagine that if
Copy File was used, the native types would have been changed?
 5-Dec-84 17:26:37-EST,675;000000000001
Received: from MIT-MC by MIT-OZ via Chaosnet; 5 Dec 84 16:00-EST
Date: Wed, 5 Dec 84 15:41 EST
From: "Kent M. Pitman" <KMP@MIT-MC.ARPA>
Subject: Mouse Documentation for [Map Over] in Rel5 ZMail
To: BUG-LISPM@MIT-MC.ARPA

In ZMail in Symbolics 3600 System 242.356, Hardcopy 20.10, on Bing Crosby:

After using [Map Over / Move] once, the mouse documentation
for [Map Over] is shown as:

 Operate on all messages: L: Move; R: menu.

rather than

 Operate on all messages: L: Move to "KMP;FOO XMAIL"; R: menu.

I just moved a bunch of things to the wrong place because I expected
(based on this doc) that it would prompt me for where to move the stuff.
-kmp
 5-Dec-84 19:08:08-EST,1431;000000000001
Received: from MIT-MC by MIT-OZ via Chaosnet; 5 Dec 84 19:08-EST
Received: from SCRC-ANNISQUAM by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 138556; Wed 5-Dec-84 18:56:12-EST
Date: Wed, 5 Dec 84 18:57 EST
From: Doug Dodds <DODDS@SCRC-QUABBIN.ARPA>
Subject: Mouse Documentation for [Map Over] in Rel5 ZMail
To: KMP@MIT-MC.ARPA
cc: BUG-LISPM@MIT-MC.ARPA
In-Reply-To: The message of 5 Dec 84 15:41-EST from Kent M. Pitman <KMP at MIT-MC>
Message-ID: <841205185747.9.DODDS@ANNISQUAM.SCRC.Symbolics.COM>

    Date: Wed, 5 Dec 84 15:41 EST
    From: "Kent M. Pitman" <KMP@MIT-MC.ARPA>

    In ZMail in Symbolics 3600 System 242.356, Hardcopy 20.10, on Bing Crosby:

    After using [Map Over / Move] once, the mouse documentation
    for [Map Over] is shown as:

     Operate on all messages: L: Move; R: menu.

    rather than

     Operate on all messages: L: Move to "KMP;FOO XMAIL"; R: menu.

    I just moved a bunch of things to the wrong place because I expected
    (based on this doc) that it would prompt me for where to move the stuff.
    -kmp

Still a problem in the development system.  When Move is installed as
the default for Map Over, it will have to notice that there is a default
move destination defined, and include that in the mouse doc.  It
probably also needs to do the same thing for Reply, Keywords and
Unkeywords, which also have settable defaults.  Thanks for the report.
 5-Dec-84 19:37:06-EST,4238;000000000001
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 5 Dec 84 19:36-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 138593; Wed 5-Dec-84 19:33:38-EST
Date: Wednesday, 5 December 1984, 19:32-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: Symbol macros suck!
To: TIM at MIT-OZ, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 4 Dec 84 10:24-EST from TIM at MIT-OZ
Message-ID: <841205193205.8.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Tuesday, 4 December 1984, 10:24-EST
    From:  <TIM at MIT-OZ>

    In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 22, on Lisp Machine Jim Morrison:

    Shouldn't symbol macros masqerading as special variables BEHAVE like special variables?

     zwei:(let ((*window* nil)
		(*window-list* nil)
		(*interval* nil)
		(*typeout-window* standard-output)
		(*typein-window* standard-output)
		(*numeric-arg-p* nil)
		(*check-unbalanced-parentheses-when-saving* nil))  ;<<<---- Hi!
	    (save-buffer buffer))

The compiler bug has been fixed for Release 6.  
zwei:(defun sma (buffer)
       (let ((*window* nil)
	     (*window-list* nil)
	     (*interval* nil)
	     (*typeout-window* standard-output)
	     (*typein-window* standard-output)
	     (*numeric-arg-p* nil)
	     (*check-unbalanced-parentheses-when-saving* nil))  ;<<<---- Hi!
	 (save-buffer buffer)))
Now gives you a compiler warning that you are trying to bind a symbol
macro.  Symbol macros don't always behave like variables, and requires
users to know the difference when it counts.  [That's the way it is
today; I'm not trying to justify it, I'm trying to explain the current
situation.]  I don't know if LETF made it into Release 5 or not, but it
is the right thing to use on symbol macros.

    >>Error: Inconsistent control level seen at an internal tag
    While in the function (:PROPERTY COMPILER:TAG COMPILER:CEMENT)  COMPILER:CONSIDER-INSTRUCTION  COMPILER:CEMENT-INTERVAL

    (:PROPERTY COMPILER:TAG COMPILER:CEMENT):  (P.C. = 21)
       Arg 0 (TAG): #<Inst Tag-619:>
       Local 1 (TYPE): COMPILER:INTERNAL

    COMPILER:CONSIDER-INSTRUCTION:  (P.C. = 27)
       Arg 0 (INST): #<Inst Tag-619:>

    COMPILER:CEMENT-INTERVAL:  (P.C. = 101)
       Arg 0 (INTERVAL): #<INTERVAL 16576657>
       --Defaulted args:--
       Arg 1 (INITIAL-LEVEL): 0
       Arg 2 (INITIAL-B-LEVEL): 0

    COMPILER:RUN-PHASE-2:  (P.C. = 21)

    COMPILER:COMPILE-DEFINITION-1:  (P.C. = 43)
       Arg 0 (TYPE): DEFUN
       Arg 1 (FUNCTION-SPEC): SAVE-ALL-MY-BUFFERS
       Arg 2 (LAMBDA-LIST): NIL
       Arg 3 (DEBUG-INFO): NIL
       Arg 4 (DEFINITION): ((SI:DISPLACED (DOLIST (BUFFER *ZMACS-BUFFER-LIST*) (WHEN ** **)) (DO (** **) (**) (SETQ BUFFER **) (WHEN ** **))))
       Arg 5 (FIXUP-P): T

    COMPILER:COMPILE-DEFINITION:  (P.C. = 43)
       Arg 0 (EXP): (DEFUN SAVE-ALL-MY-BUFFERS NIL (SI:DISPLACED (DOLIST (BUFFER *ZMACS-BUFFER-LIST*) (WHEN ** **)) (DO (** **) (**) (SETQ BUFFER **) (WHEN ** **))))
       Arg 1 (FIXUP-P): T
       Arg 2 (DEBUG-INFO): NIL

    (:INTERNAL COMPILER:COMPILE-TO-CORE 0):  (P.C. = 5)
       Arg 0 (**DEFSELECT-OP**): :DUMP-DEFINITION
       Arg 1 (EXP): (DEFUN SAVE-ALL-MY-BUFFERS NIL (SI:DISPLACED (DOLIST (BUFFER *ZMACS-BUFFER-LIST*) (WHEN ** **)) (DO (** **) (**) (SETQ BUFFER **) (WHEN ** **))))

    COMPILER:COMPILE-TO-CORE:  (P.C. = 12)
       Arg 0 (OPERATION): :DUMP-DEFINITION
       Rest arg (SELECT-METHOD-ARGS): ((DEFUN SAVE-ALL-MY-BUFFERS NIL (SI:DISPLACED (DOLIST ** **) (DO ** ** ** **))))

    Rest of stack:
    COMPILER:COMPILE-FORM-FUNCTION:  (P.C. = 41)
    COMPILER:COMPILE-FROM-STREAM-1:  (P.C. = 306)
    COMPILER:PROCESS-FORMS-FROM-STREAM:  (P.C. = 117)
    COMPILER:COMPILE-FROM-STREAM:  (P.C. = 235)
    COMPILE-INTERVAL:  (P.C. = 141)
    COMPILE-PRINT-INTERVAL:  (P.C. = 76)
    COMPILE-DEFINITION-INTERNAL:  (P.C. = 73)
    COM-COMPILE-REGION:  (P.C. = 5)
    COMMAND-EXECUTE:  (P.C. = 55)
    PROCESS-COMMAND-CHAR:  (P.C. = 14)
    (:METHOD EDITOR :EDIT):  (P.C. = 214)
    (:METHOD TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 41)
    ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)
    SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
 5-Dec-84 20:02:29-EST,1236;000000000001
Received: from MIT-MC by MIT-OZ via Chaosnet; 5 Dec 84 20:02-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 138604; Wed 5-Dec-84 19:45:12-EST
Date: Wed, 5 Dec 84 19:43 EST
From: "David C. Plummer in disguise" <DCP@SCRC-QUABBIN.ARPA>
Subject: Mouse Documentation for [Map Over] in Rel5 ZMail
To: "Kent M. Pitman" <KMP@MIT-MC.ARPA>, BUG-LISPM@MIT-MC.ARPA
In-Reply-To: The message of 5 Dec 84 15:41-EST from Kent M. Pitman <KMP at MIT-MC>
Message-ID: <841205194340.2.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Wed, 5 Dec 84 15:41 EST
    From: "Kent M. Pitman" <KMP@MIT-MC.ARPA>

    In ZMail in Symbolics 3600 System 242.356, Hardcopy 20.10, on Bing Crosby:

    After using [Map Over / Move] once, the mouse documentation
    for [Map Over] is shown as:

     Operate on all messages: L: Move; R: menu.

    rather than

     Operate on all messages: L: Move to "KMP;FOO XMAIL"; R: menu.

    I just moved a bunch of things to the wrong place because I expected
    (based on this doc) that it would prompt me for where to move the stuff.

In Release 6 (Beta II, though it was probably fixed long ago), the menu
I get is
	L: <filename>, M: by individual filters, R: menu
 5-Dec-84 21:10:07-EST,1540;000000000001
Received: from MIT-MC by MIT-OZ via Chaosnet; 5 Dec 84 21:09-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 138647; Wed 5-Dec-84 21:02:11-EST
Date: Wed, 5 Dec 84 21:00 EST
From: "David C. Plummer in disguise" <DCP@SCRC-QUABBIN.ARPA>
Subject: Mouse Documentation for [Map Over] in Rel5 ZMail
To: "Kent M. Pitman" <KMP@MIT-MC.ARPA>
cc: "David C. Plummer in disguise" <DCP@SCRC-QUABBIN.ARPA>,
    BUG-LISPM@MIT-MC.ARPA
In-Reply-To: <841205194340.2.NFEP@NEPONSET.SCRC.Symbolics.COM>
References: <841205185747.9.DODDS@ANNISQUAM.SCRC.Symbolics.COM>,
            <841205194340.2.NFEP@NEPONSET.SCRC.Symbolics.COM>
Message-ID: <841205210033.8.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Wed, 5 Dec 84 19:43 EST
    From: "David C. Plummer in disguise" <DCP@SCRC-QUABBIN.ARPA>

	Date: Wed, 5 Dec 84 15:41 EST
	From: "Kent M. Pitman" <KMP@MIT-MC.ARPA>

	In ZMail in Symbolics 3600 System 242.356, Hardcopy 20.10, on Bing Crosby:

	After using [Map Over / Move] once, the mouse documentation
	for [Map Over] is shown as:

	 Operate on all messages: L: Move; R: menu.

	rather than

	 Operate on all messages: L: Move to "KMP;FOO XMAIL"; R: menu.

	I just moved a bunch of things to the wrong place because I expected
	(based on this doc) that it would prompt me for where to move the stuff.

    In Release 6 (Beta II, though it was probably fixed long ago), the menu
    I get is
	    L: <filename>, M: by individual filters, R: menu

I obviously misread your message.  Sorry.
 6-Dec-84 00:03:35-EST,2532;000000000001
Received: from MIT-VAX by MIT-OZ via Chaosnet; 6 Dec 84 00:02-EST
Received: by mit-vax.Mit-chaos.Arpa (4.12/4.8) with CHAOS id AA05795; Wed, 5 Dec 84 23:51:37 est
Date: Wednesday, 5 December 1984, 23:51-EST
From: The Boxer System <Bug-Boxer@MIT-MC>
Reply-To: ehl at MIT-MC
Subject: a namespace problem ?
To: BUG-LISPM@MIT-OZ

In Symbolics 3600 Release 5.2, Experimental IP-TCP 15.3, FEP 18, on Lisp Machine Minnie Mouse:

This seems to be a result of getting the following namespace update

17:27 It is necessary to change the flavor of namespace object #<LISPM-HOST POINTER 35150620> from FS:LISPM-HOST to NET:HOST.
This may cause problems in dealing with this object until the next use of
 (SI:FULL-GC :SYSTEM-RELEASE T).

since NET:HOST doesn't handle this particular message.

BTW, happens in the 5-2-prime world as well

>>Error: The object #<HOST POINTER 43214035> received a :OPEN-STREAMS message, which went unclaimed.
         The rest of the message was ()
While in the function (:METHOD NET:OBJECT :UNCLAIMED-MESSAGE)  SI:FLAVOR-UNCLAIMED-MESSAGE  SI:INSTANCE-HASH-UNCLAIMED-MESSAGE

(:METHOD NET:OBJECT :UNCLAIMED-MESSAGE):  (P.C. = 31)
   Arg 0 (SELF): #<HOST POINTER 43214035>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NET:OBJECT -- 3. IV's, 1. FL's 41244764>
   Arg 2 (OPERATION): :UNCLAIMED-MESSAGE
   Arg 3 (MESSAGE): :OPEN-STREAMS
   Rest arg (ARGS): NIL

SI:FLAVOR-UNCLAIMED-MESSAGE:  (P.C. = 20)
   Arg 0 (SELF): #<HOST POINTER 43214035>
   Arg 1 (IGNORE): NIL
   Rest arg (MESSAGE): (:OPEN-STREAMS)

SI:INSTANCE-HASH-UNCLAIMED-MESSAGE:  (P.C. = 35)
   Arg 0 (SELF): #<HOST POINTER 43214035>
   Arg 1 (SELF-MAPPING-TABLE): NIL
   Rest arg (MESSAGE): NIL

FS:ALL-OPEN-FILES:  (P.C. = 27)

BOXER-INIT-FILE-WAIT-FN:  (P.C. = 2)  (from JOE-LOUIS:>Boxer>lispm-init)

PROCESS-WAIT:  (P.C. = 10)
   Arg 0 (WHOSTATE): "wait"
   Arg 1 (FUNCTION): #<DTP-COMPILED-FUNCTION BOXER-INIT-FILE-WAIT-FN 22404026>
   Rest arg (ARGUMENTS): NIL

BOXER-INIT-FILE-FN:  (P.C. = 4)  (from JOE-LOUIS:>Boxer>lispm-init)
   Arg 0 (PROCESS): #<PROCESS Initial Process 35271157>
   Arg 1 (OLD-TERMINAL-IO): #<LISP-LISTENER Lisp Listener 1 3100000 deexposed>

SI:PROCESS-RUN-FUNCTION-INTERNAL:  (P.C. = 51)
   Arg 0 (RESTART-ON-RESET): NIL
   Arg 1 (FUNCTION): #<DTP-COMPILED-FUNCTION BOXER-INIT-FILE-FN 22404011>
   Rest arg (ARGS): (#<PROCESS Initial Process 35271157> #<LISP-LISTENER Lisp Listener 1 3100000 deexposed>)

Rest of stack:
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
 6-Dec-84 13:06:06-EST,1496;000000000001
Received: from MIT-MC by MIT-OZ via Chaosnet; 6 Dec 84 13:05-EST
Received: from SCRC-ANNISQUAM by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 138961; Thu 6-Dec-84 11:07:58-EST
Date: Thu, 6 Dec 84 11:07 EST
From: Doug Dodds <DODDS@SCRC-QUABBIN.ARPA>
Subject: Mouse Documentation for [Map Over] in Rel5 ZMail
To: DCP@SCRC-QUABBIN.ARPA
cc: KMP@MIT-MC.ARPA, BUG-LISPM@MIT-MC.ARPA
In-Reply-To: <841205194340.2.NFEP@NEPONSET.SCRC.Symbolics.COM>
Message-ID: <841206110756.9.DODDS@ANNISQUAM.SCRC.Symbolics.COM>

    Date: Wed, 5 Dec 84 19:43 EST
    From: "David C. Plummer in disguise" <DCP@SCRC-QUABBIN.ARPA>

	Date: Wed, 5 Dec 84 15:41 EST
	From: "Kent M. Pitman" <KMP@MIT-MC.ARPA>

	In ZMail in Symbolics 3600 System 242.356, Hardcopy 20.10, on Bing Crosby:

	After using [Map Over / Move] once, the mouse documentation
	for [Map Over] is shown as:

	 Operate on all messages: L: Move; R: menu.

	rather than

	 Operate on all messages: L: Move to "KMP;FOO XMAIL"; R: menu.

	I just moved a bunch of things to the wrong place because I expected
	(based on this doc) that it would prompt me for where to move the stuff.

    In Release 6 (Beta II, though it was probably fixed long ago), the menu
    I get is
	    L: <filename>, M: by individual filters, R: menu

No, that's the mouse doc you get for Move.  KMP was complaining that
this info was not transported one level further to what you get for Map
Over when Move becomes the default (L) operation there.
 6-Dec-84 15:46:36-EST,4042;000000000001
Received: from MIT-HTVAX by MIT-OZ via Chaosnet; 6 Dec 84 15:45-EST
Received: from MIT-GSTAAD by MIT-HTVAX (4.12/4.7) with CHAOS 
	id AA11574; Thu, 6 Dec 84 15:38:23 est
Date: Thursday, 6 December 1984, 15:34-EST
From: Richard E. Zippel <RZ@MIT-MC>
Subject: Blinkers and evaporating storage
To: BUG-LISPM@MIT-OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10,
Experimental Schema 54.0, FEP 24, on GSTAAD:

This isn't really a LISPM bug, since the real bug was in my code, but I
think some improvements could be made to make finding similar bugs a lot
easier.  I'm including the full scenario since it might be useful to
others who might also fall into my trap.

I loaded a file and discovered that my free storage was vanishing at
about 300 words every second.  I hadn't actually run any of the
functions I had loaded so I was more than a little surprised.  Turns out
the space was being consumed by a blinker I had created by defining a
resource with one initial copy.  First lesson: loading files is not
always as benign as one might think.

After determining (or guessing) which blinker it was that was causing
the problem, I pored over my :blink method trying to find the line that
was doing the consing.  I couldn't.  (I don't need to say what a
disaster it was trying to trace various functions called by the :blink
method.  All of this stuff is run every clock interrupt, by the
scheduler.  The machine can get amazingly wedged if you are not
careful.)   

I wrote a little function to that checked the size of dynamic space, and
inserted it at various points in my blink code to find out which line
was generating the garbage.  Again no luck.  To convince myself I was
actually using the space I put the same code around the CATCH-ERROR form
that blinks the blinker in BLINKER-CLOCK-INTERNAL.  Sure enough I was
the culprit.

After a couple of Suan's I finally realized that I was causing an error
inside my :blink method, which was consing a condition object which was
being thrown away by the catch-error.  The code I inserted in my :blink
method to look out for consing was not being run because of the error,
so it looked like I wasn't doing any consing.  I suppose I should have
put that code within an UNWIND-PROTECT, but if I had realized that I
wouldn't have had these problems.

At any rate, I recommend that if a error occurs in the CATCH-ERROR form,
then a message should be sent to the user and the guilty blinker should
be placed on a guilty blinkers list whose elements aren't blinked.  This
ensures that the user finds out about the problem and that the machine
doesn't go off the deep end when you have buggy blinker code.

Just for reference, here's the relevant piece of code:

(DEFUN BLINKER-CLOCK-INTERNAL (SHEET)
  (COND ((AND (SHEET-EXPOSED-P SHEET)
	      (ZEROP (SHEET-DONT-BLINK-BLINKERS-FLAG SHEET)))
	 (DOLIST (BLINKER (SHEET-BLINKER-LIST SHEET))
	   (AND (SELECTQ (BLINKER-VISIBILITY BLINKER)
		  ((NIL :OFF)
		   (BLINKER-PHASE BLINKER))
		  ((T :ON)
		   (NULL (BLINKER-PHASE BLINKER)))
		  (:BLINK
		   (LET ((NEW-TIME (- (BLINKER-TIME-UNTIL-BLINK BLINKER) BLINKER-DELTA-TIME)))
		     (SETF (BLINKER-TIME-UNTIL-BLINK BLINKER) NEW-TIME)
		     ( NEW-TIME 0))))
		(NOT (SHEET-OUTPUT-HELD-P SHEET))
		(LET ((LV (SHEET-LOCK SHEET)))
		  (OR (NULL LV) (LISTP LV)))
		(CATCH-ERROR (BLINK BLINKER) NIL)))
The line above should do something more interesting with buggy blinkers.
	 (AND (EQ SHEET MOUSE-SHEET)
	      (= MOUSE-CURSOR-STATE 1)
	      (= MOUSE-CURSOR-CLOSED-STATE 2)
	      (NEQ WINDOW-OWNING-MOUSE 'STOP)
	      (NOT (SHEET-OUTPUT-HELD-P SHEET))
	      (LET ((LV (SHEET-LOCK SHEET)))
		(OR (NULL LV) (LISTP LV)))
	      (PROGN (INCF *MOUSE-BLINKER-OFF-TIME* BLINKER-DELTA-TIME)
		     (> *MOUSE-BLINKER-OFF-TIME* *MOUSE-BLINKER-WAIT-TIME*))
	      (SETQ MOUSE-CURSOR-STATE MOUSE-CURSOR-CLOSED-STATE
		    PREPARED-SHEET NIL))
	 (DOLIST (S (SHEET-EXPOSED-INFERIORS SHEET))
	   (BLINKER-CLOCK-INTERNAL S)))))
 6-Dec-84 21:35:51-EST,690;000000000001
Mail-From: SLC created at  6-Dec-84 21:35:32
Date: Thu 6 Dec 84 21:35:31-EST
From: Stephen L. Chiu <SLC@MIT-OZ>
Subject: bug in fill-pointer
To: bug-lispm@MIT-OZ

  There's a bug in the array-has-fill-pointer-p function for
multi-dimensional arrays.  For example,

  (setq a (make-array '(2 3) :fill-pointer 1))
  (array-has-fill-pointer-p a) => NIL
  (array-has-leader-p a) => T
  (fill-pointer a) => 1

  i.e. there's an inconsistency between the array-has-fill-
pointer-p function and the fill-pointer function.  There
is no uniform agreement on whether fill-pointers are
defined for multi-dimensional arrays.

  I was running system 99 when I found this.

-------
 8-Dec-84 19:56:50-EST,673;000000000001
Received: from MIT-MOON by MIT-OZ via Chaosnet; 8 Dec 84 19:56-EST
Date: Saturday, 8 December 1984, 15:07-EST
From:  <williams at MIT-OZ>
Subject: no artificial bugs here!!!!
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 18, on Lisp Machine Keith Moon:

I wasn't exactly sure who I should lodge a complaint to
but then suddenly this seemed to be the most natural place.
I was sitting here typing at my 3600 when a very large cockroach
walked out from under the mouse.  Now I know you guys haven't gotten
the bugs out of this hardware yet but this is ridiculous!!!!!!

PS Does your maintenance contract include extermination?
 9-Dec-84 01:19:53-EST,5941;000000000001
Received: from MIT-VAX by MIT-OZ via Chaosnet; 9 Dec 84 01:19-EST
Received: by mit-vax.Mit-chaos.Arpa (4.12/4.8) with CHAOS id AA08121; Sun, 9 Dec 84 01:06:28 est
Date: Sunday, 9 December 1984, 01:05-EST
From: Dinarte R. Morais <DRM@MIT-XX>
Subject: %draw-line doesn't like floats
To: BUG-LISPM@MIT-OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 22, Tanglewood VI, on Project Tanglewood Cherry:

Looks like a the %draw-line microcode REALLY doesn't like floating-point
numbers.  When this error happened the console turned into a random
pattern of bits and the only way to continue was to walk over to the
machine and reset.

>>Trap: The SYS:%DRAW-LINE-LOOP microcode ran into a DBG:ARRAY-WORD that was not a fixnum.
While in the function TV:%DRAW-LINE-INTERNAL  (:METHOD TV:SCREEN :%DRAW-LINE)  (:METHOD TV:GRAPHICS-MIXIN :DRAW-LINE)

TV:%DRAW-LINE-INTERNAL:  (P.C. = 267)
   Arg 0 (X1): 426
   Arg 1 (Y1): 345
   Arg 2 (X2): 454.12692
   Arg 3 (Y2): 345
   Arg 4 (ALU): 6
   Arg 5 (DRAW-END-POINT): NIL
   Arg 6 (ARRAY): #<ART-1B-1150-1312 41337603>
   Local 7 (IGNORE): NIL
   Local 8 (IGNORE): NIL
   Local 9 (BB-WIDTH): 311632550
   Local 10 (BB-S-DATA-ADDR): 176.12692
   Local 11 (BB-S-ROW-OFFSET): 0
   Local 12 (BB-S-OFFSET): 41
   Local 13 (BB-S-BITPOS): 1
   Local 14 (BB-S-ROW-LENGTH): 1
   Local 15 (BB-D-DATA-ADDR): #<DTP-LOCATIVE 41475133>
   Local 16 (BB-D-OFFSET): 62355
   Local 17 (BB-D-BITPOS): 0
   Local 18 (BB-EVENT-COUNT): 130713
   Local 19 (BB-ALU-OPERATION): 14
   Local 20 (S-ROW-BITPOS): 0
   Local 21 (S-ROW-OFFSET): 0
   Local 22 (S-ROW): 0
   Local 23 (D-ROW-BITPOS): 12
   Local 24 (D-ROW-OFFSET): 17
   Local 25 (D-ROW): 345
   Local 26 (S-BEG-ADDR): NIL
   Local 27 (S-BEG-BITPOS): 0
   Local 28 (S-ROW-LENGTH): 1000000
   Local 29 (S-ROW-SPAN): 0
   Local 30 (S-HEIGHT): 0
   Local 31 (S-BITS-PER-ELT): 1
   Local 32 (D-BEG-ADDR): #<DTP-LOCATIVE 41475133>
   Local 33 (D-BEG-BITPOS): 324
   Local 34 (D-ROW-LENGTH): 1150
   Local 35 (D-ROW-SPAN): 41
   Local 36 (D-HEIGHT): 1312
   Local 37 (D-BITS-PER-ELT): 0
   Local 38 (S-ROW-ADDR-OFFSET): NIL
   Local 39 (DRAW-X1): T
   Local 40 (DRAW-X2): NIL
   Local 41 (DX): 176.12692
   Local 42 (DY): 0
   Local 43 (DIR-Y): 1
   Local 44 (OFFSET-INC): 41
   Local 45 (DY): 0

(:METHOD TV:SCREEN :%DRAW-LINE):  (P.C. = 36)
   Arg 0 (SELF): #<MAIN-SCREEN Main Screen 2600077 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:SCREEN -- 5. IV's, 1. FL's 53137744>
   Arg 2 (OPERATION): :%DRAW-LINE
   Arg 3 (X1): 426
   Arg 4 (Y1): 345
   Arg 5 (X2): 454.12692
   Arg 6 (Y2): 345
   Arg 7 (ALU): 6
   Arg 8 (DRAW-END-POINT): NIL
   Arg 9 (SHEET): #<ILL-GRAPHICS-PANE Ill Graphics Pane 2 3312564 exposed>

(:METHOD TV:GRAPHICS-MIXIN :DRAW-LINE):  (P.C. = 60)
   Arg 0 (SELF): #<ILL-GRAPHICS-PANE Ill Graphics Pane 2 3312564 exposed>
   Arg 1 (SELF-MAPPING-TABLE): TV:GRAPHICS-MIXIN
   Arg 2 (OPERATION): :DRAW-LINE
   Arg 3 (FROM-X): 425
   Arg 4 (FROM-Y): 344
   Arg 5 (TO-X): 453.12692
   Arg 6 (TO-Y): 344
   Arg 7 (ALU): 6
   Arg 8 (DRAW-END-POINT): NIL

(:METHOD TV:GRAPHICS-MIXIN :DRAW-LINES):  (P.C. = 30)
   Arg 0 (SELF): #<ILL-GRAPHICS-PANE Ill Graphics Pane 2 3312564 exposed>
   Arg 1 (SELF-MAPPING-TABLE): TV:GRAPHICS-MIXIN
   Arg 2 (OPERATION): :DRAW-LINES
   Arg 3 (ALU): 6
   Arg 4 (X1): 425
   Arg 5 (Y1): 344
   Rest arg (END-XS-AND-YS): (453.12692 344 453.12692 362 425 362 425 344)

(:METHOD ILL:ILL-GRAPHICS-PANE :SHOW-FONT-ARRAY):  (P.C. = 145)  (from OAK:>drm>ill>graphics)
   Arg 0 (SELF): #<ILL-GRAPHICS-PANE Ill Graphics Pane 2 3312564 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ILL:ILL-GRAPHICS-PANE -- 24. IV's, 12. FL's 26243611>
   Arg 2 (OPERATION): :SHOW-FONT-ARRAY
   Arg 3 (ARRAY): #<ART-1B-100-17 45277713>
   Arg 4 (WIDTH): 74
   Arg 5 (HEIGHT): 17
   Arg 6 (X): 3785.0
   Arg 7 (Y): 18622.0
   Arg 8 (ILL-FRAME): #<ILL-FRAME Ill Frame 2 3311341 deexposed>
   Arg 9 (ALU): 7

(:METHOD ILL:ILL-TEXT-OBJECT :DRAW-SELF):  (P.C. = 122)  (from OAK:>drm>ill>objects)
   Arg 0 (SELF): #<ILL-TEXT-OBJECT 45277210>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ILL:ILL-TEXT-OBJECT -- 11. IV's, 1. FL's 16702123>
   Arg 2 (OPERATION): :DRAW-SELF
   Arg 3 (INSTANCE-XFORM): #<TRANSFORMATION 41145400>
   Arg 4 (STREAM): #<ILL-GRAPHICS-PANE Ill Graphics Pane 2 3312564 exposed>
   Arg 5 (ILL-FRAME): #<ILL-FRAME Ill Frame 2 3311341 deexposed>
   Arg 6 (ALU): 7
   --Defaulted args:--
   Arg 7 (IGNORE): NIL

(:METHOD ILL:ILL-TEXT-OBJECT :COMBINED :DRAW-SELF):  (P.C. = 14)  (from OAK:>drm>ill>me-last)
   Arg 0 (SELF): #<ILL-TEXT-OBJECT 45277210>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ILL:ILL-TEXT-OBJECT -- 11. IV's, 1. FL's 16702123>
   Rest arg (.DAEMON-CALLER-ARGS.): (:DRAW-SELF #<TRANSFORMATION 41145400> #<ILL-GRAPHICS-PANE Ill Graphics Pane 2 3312564 exposed> #<ILL-FRAME Ill Frame 2 3311341 deexposed> 7)

(:METHOD ILL:NAMED-ILL-OBJECT :DRAW-SELF):  (P.C. = 224)  (from OAK:>drm>ill>objects)
   Arg 0 (SELF): #<NAMED-ILL-OBJECT 45272061>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ILL:NAMED-ILL-OBJECT -- 10. IV's, 0. FL's 26245276>
   Arg 2 (OPERATION): :DRAW-SELF
   Arg 3 (INSTANCE-XFORM): #<TRANSFORMATION 32136001>
   Arg 4 (STREAM): #<ILL-GRAPHICS-PANE Ill Graphics Pane 2 3312564 exposed>
   Arg 5 (ILL-FRAME): #<ILL-FRAME Ill Frame 2 3311341 deexposed>
   --Defaulted args:--
   Arg 6 (ALU): 7

Rest of stack:
(:METHOD ILL:ILL-FRAME :REDRAW-ALL-OBJECTS):  (P.C. = 22)  (from OAK:>drm>ill>frame)
(:METHOD ILL:ILL-GRAPHICS-PANE :AFTER :REFRESH):  (P.C. = 6)  (from OAK:>drm>ill>frame)
(:METHOD ILL:ILL-GRAPHICS-PANE :COMBINED :REFRESH):  (P.C. = 30)  (from OAK:>drm>ill>me-last)
(:METHOD TV:BASIC-CONSTRAINT-FRAME :SEND-PANE):  (P.C. = 14)
ILL:ILL-TOP-LEVEL:  (P.C. = 7)  (from OAK:>drm>ill>toplevel)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
10-Dec-84 01:41:04-EST,3791;000000000001
Received: from SANCHO-PANZA by MIT-OZ via Chaosnet; 10 Dec 84 01:40-EST
Date: Monday, 10 December 1984, 01:39-EST
From:  <TIM at MIT-MC>
Subject: FMH!!
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 18, on Lisp Machine Sancho Panza:

Apparently I hit [Abort] at the wrong time the last time I frobbed this file, and now
it won't let me save it!!!

>>Error: File handle in use
         For OBERON:SYS$DISK:[TIM.W]VUPORT.LSP
While in the function (:METHOD FS:HOST-UNIT :COMMAND)  FS:OPEN-CHAOS  (:METHOD FS:QFILE-ACCESS-PATH :OPEN)

(:METHOD FS:HOST-UNIT :COMMAND):  (P.C. = 236)
   Arg 0 (SELF): #<HOST-UNIT 6346043>
   Arg 1 (SELF-MAPPING-TABLE): FS:HOST-UNIT
   Arg 2 (OPERATION): :COMMAND
   Arg 3 (MARK-P): NIL
   Arg 4 (STREAM-OR-HANDLE): (:CREATE "O2322")
   Arg 5 (SIMPLE-P): NIL
   Arg 6 (WHOSTATE): "Open"
   Rest arg (COMMANDS): ("OPEN " :WRITE " " :CHARACTER "" "" "" "" "" "" ...)
   Local 8 (HANDLE): "O2322"
   Local 9 (STREAM): NIL
   Local 10 (PKT): #<Chaos Packet 2746332>
   Local 11 (SUCCESS): NIL
   Local 12 (STRING): "O2322 ERROR MSC C File handle in use"
   Local 13 (TRANSACTION-ID): "T2337"
   Local 14 (CREATE-P): T
   Local 15 (CONDITION): NIL
   Local 16: T
   Local 17: #<CASE-HANDLER 12164212>
   Local 18: (#<BIND-HANDLER 13736244> #<BIND-HANDLER 55551275>)
   Local 19: (#<CASE-HANDLER 12164212> #<BIND-HANDLER 13736244> #<BIND-HANDLER 55551275>)

FS:OPEN-CHAOS:  (P.C. = 674)
   Arg 0 (ACCESS-PATH): #<NORMAL-QFILE-ACCESS-PATH OBERON using QFILE 6346032>
   Arg 1 (REAL-PATHNAME): #<VMS-PATHNAME "OBERON:SYS$DISK:[TIM.W]VUPORT.LSP">
   Arg 2 (*COMMAND-PATHNAME*-initialization): #<VMS-PATHNAME "OBERON:SYS$DISK:[TIM.W]VUPORT.LSP">
   Arg 3 (OPTIONS): (:CHARACTERS T :DIRECTION :OUTPUT)

(:METHOD FS:QFILE-ACCESS-PATH :OPEN):  (P.C. = 7)
   Arg 0 (SELF): #<NORMAL-QFILE-ACCESS-PATH OBERON using QFILE 6346032>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:QFILE-ACCESS-PATH -- 4. IV's, 0. FL's 11777630>
   Arg 2 (OPERATION): :OPEN
   Arg 3 (REAL-PATHNAME): #<VMS-PATHNAME "OBERON:SYS$DISK:[TIM.W]VUPORT.LSP">
   Arg 4 (PATHNAME): #<VMS-PATHNAME "OBERON:SYS$DISK:[TIM.W]VUPORT.LSP">
   Rest arg (OPTIONS): (:CHARACTERS T :DIRECTION :OUTPUT)

(:METHOD FS:ACTIVE-PATHNAME-MIXIN :OPEN):  (P.C. = 14)
   Arg 0 (SELF): #<VMS-PATHNAME "OBERON:SYS$DISK:[TIM.W]VUPORT.LSP">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:ACTIVE-PATHNAME-MIXIN -- 1. IV's, 0. FL's 52541724>
   Arg 2 (OPERATION): :OPEN
   Arg 3 (PATHNAME): #<VMS-PATHNAME "OBERON:SYS$DISK:[TIM.W]VUPORT.LSP">
   Rest arg (OPTIONS): (:CHARACTERS T :DIRECTION :OUTPUT)

FS:MACLISP-COMPATIBILITY-OPEN:  (P.C. = 362)
   Arg 0 (FILENAME): #<VMS-PATHNAME "OBERON:SYS$DISK:[TIM.W]VUPORT.LSP">
   Arg 1 (OPTIONS): (ZWEI:OUT)

OPEN:  (P.C. = 252)
   Arg 0 (PATHNAME): #<VMS-PATHNAME "OBERON:SYS$DISK:[TIM.W]VUPORT.LSP">
   Rest arg (KEYWORD-ARGS): ((ZWEI:OUT))

(:METHOD ZWEI:FILE-BUFFER-MIXIN :SAVE):  (P.C. = 44)
   Arg 0 (SELF): #<FILE-BUFFER "VUPORT.LSP SYS$DISK:[TIM.W] OBERON:" 6472164>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:FILE-BUFFER-MIXIN -- 9. IV's, 0. FL's 67661232>
   Arg 2 (OPERATION): :SAVE

ZWEI:SAVE-BUFFER:  (P.C. = 203)
   Arg 0 (BUFFER): #<FILE-BUFFER "VUPORT.LSP SYS$DISK:[TIM.W] OBERON:" 6472164>

Rest of stack:
ZWEI:COM-LOAD-FILE:  (P.C. = 67)
ZWEI:COM-EXTENDED-COMMAND:  (P.C. = 27)
ZWEI:RE-EXECUTE-MINI-BUFFER-COMMAND:  (P.C. = 114)
ZWEI:COM-REPEAT-LAST-MINI-BUFFER-COMMAND:  (P.C. = 27)
ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 214)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 41)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
10-Dec-84 11:25:27-EST,464;000000000001
Received: from MIT-AVATAR by MIT-OZ via Chaosnet; 10 Dec 84 11:20-EST
Date: Monday, 10 December 1984, 11:18-EST
From: Charles Rich <RICH at MIT-OZ>
Subject: Destructuring-Bind
To: BUG-lispm at MIT-OZ

It is nice that this function is now documented.  However,
it would be more useful for macro-writing-macro purposes
if it would (optionally) check for the right number of args
(as does Defmacro).  Right now it just takes nils to extend
arglist.
		-CR
10-Dec-84 11:47:24-EST,878;000000000001
Received: from MIT-MC by MIT-OZ via Chaosnet; 10 Dec 84 11:47-EST
Date: Monday, 10 December 1984, 11:44-EST
From:  <DICK at MIT-OZ>
Subject: bug is SI:WITH-INDENTATION and :string-out
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10, on Lisp Machine Bing Crosby:

SI:WITH-INDENTATION does not work right with :string-out messages.

(si:with-indentation (standard-output 4)
  (terpri)
  (send standard-output ':line-out "foo")
  (send standard-output ':string-out "foo"))

produces

    foo
foo


instead of 

    foo
    foo

Note that the following works just fine.

(si:with-indentation (standard-output 4)
  (terpri)
  (send standard-output ':string-out "foo")
  (terpri)
  (send standard-output ':string-out "foo"))

the indented stream doesn't seem to understand that :line-out does a terpri.

					Dick Waters
10-Dec-84 11:56:22-EST,503;000000000001
Received: from MIT-MC by MIT-OZ via Chaosnet; 10 Dec 84 11:53-EST
Date: Monday, 10 December 1984, 11:51-EST
From:  <DICK at MIT-OZ>
Subject: more on bug with si:with-indentation and :line-out
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10, on Lisp Machine Bing Crosby:


The following seems to fix the bug nicely.

(defmethod (si:indenting-stream :line-out) (&rest args)
  (lexpr-funcall-self ':string-out args)
  (funcall-self ':tyo #\cr))


				Dick Waters
10-Dec-84 15:18:19-EST,1327;000000000001
Received: from MIT-GSTAAD by MIT-OZ via Chaosnet; 10 Dec 84 15:13-EST
Date: Monday, 10 December 1984, 15:04-EST
From: Richard E. Zippel <RZ at MIT-MC>
Subject: pathname problems
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10,
Experimental Schema 54.0, FEP 24, on GSTAAD:

At the moment our link to Symbolics is down and thus we are not getting
Arpanet namespace updates from Riverside.  As a consequence, Reagan
thinks that MIT-VAX is a UNIX42 host in the INTERNET and MIT namespaces
but a UNIX bost in the ARPANET namespace.  For some reason, the ARPANET
namespace wins, and (net:parse-host 'vx) gives a host with SYSTEM-TYPE
:UNIX.  This makes it very difficult to read files with long names, like 
"vx:.../lispm-init.lisp".  Fortunately, "vx:.../lispm-init.bin" is just
under the length limitation and can be read.  

My init file then checks to see if vx is a 42 site, and not allows me to
change it locally, from UNIX to UNIX42.  The problem is that since I had
previously opened the file as UNIX file, the pathname-hash-table has a
UNIX pathname in it not a UNIX42 pathname, and all attempts to reference
the file file  (claims that .../lispm-init.lis is not found).  It would
be nice if when the system type of a host is changed, the pathname hash
table were cleared.
11-Dec-84 09:06:40-EST,2367;000000000001
Received: from MIT-MC by MIT-OZ via Chaosnet; 11 Dec 84 09:06-EST
Date: Tuesday, 11 December 1984, 09:05-EST
From: Gavan Duffy <GAVAN at MIT-OZ>
Subject: SUPDUP-GRAPHICS-STATE receives the null message.
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10,
Experimental RELATUS 131.140, FEP 22, on Lisp Machine Buddy Holly:

Typed `n' to DPRESS and got this.

>>Error: The object #<SUPDUP-GRAPHICS-STATE 40336777> received a NIL message, which went unclaimed.
         The rest of the message was (54.)
While in the function (:METHOD TELNET:SUPDUP-GRAPHICS-STATE :SUPDUP-GRAPHICS)  (:METHOD TELNET:SUPDUP-STATE-BLOCK :SUPDUP-GRAPHICS)  (:METHOD TELNET:SUPDUP-FILTER :FILTER)

(:METHOD TELNET:SUPDUP-GRAPHICS-STATE :SUPDUP-GRAPHICS):  (P.C. = 32)
   Arg 0 (SELF): #<SUPDUP-GRAPHICS-STATE 40336777>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TELNET:SUPDUP-GRAPHICS-STATE -- 12. IV's, 0. FL's 57124433>
   Arg 2 (OPERATION): :SUPDUP-GRAPHICS
   Arg 3 (SUPDUP-GRAPHICS-INPUT-STREAM-initialization): #<HANGUP-FILTER 40350063>
   Local 4: TELNET:SUPDUP-GRAPHICS
   Local 5: #<DTP-ODD-PC 64062520>
   Local 6: #<DTP-LOCATIVE 40241047>
   Local 7: #<DTP-LOCATIVE 45240046>
   Local 8 (CH): 54.

(:METHOD TELNET:SUPDUP-STATE-BLOCK :SUPDUP-GRAPHICS):  (P.C. = 5)
   Arg 0 (SELF): #<SUPDUP-STATE-BLOCK 40336772>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TELNET:SUPDUP-STATE-BLOCK -- 3. IV's, 0. FL's 57124420>
   Arg 2 (OPERATION): :SUPDUP-GRAPHICS
   Arg 3 (INPUT-STREAM): #<HANGUP-FILTER 40350063>

(:METHOD TELNET:SUPDUP-FILTER :FILTER):  (P.C. = 27)
   Arg 0 (SELF): #<SUPDUP-FILTER 40350067>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TELNET:SUPDUP-FILTER -- 3. IV's, 0. FL's 57122401>
   Arg 2 (OPERATION): :FILTER
   Arg 3 (CH): 153.

(:METHOD TELNET:FILTER-STREAM :TYI-NO-HANG):  (P.C. = 15)
   Arg 0 (SELF): #<SUPDUP-FILTER 40350067>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TELNET:FILTER-STREAM -- 3. IV's, 0. FL's 57122407>
   Arg 2 (OPERATION): :TYI-NO-HANG

(:METHOD TELNET:NVT-WINDOW :TYPEOUT-TOP-LEVEL):  (P.C. = 37)
   Arg 0 (SELF): #<NVT-WINDOW Terminal 1 701132 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TELNET:NVT-WINDOW -- 18. IV's, 10. FL's 56657163>
   Arg 2 (OPERATION): :TYPEOUT-TOP-LEVEL

SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
   Arg 0 (IGNORE): NIL
11-Dec-84 19:32:10-EST,859;000000000001
Received: from MIT-LISPM-9 by MIT-OZ via Chaosnet; 11 Dec 84 19:31-EST
Date: Tuesday, 11 December 1984, 19:31-EST
From: Robert L. Krawitz <ZZZ.RLK at MIT-OZ>
To: BUG-LISPM at MIT-OZ, bug-oz at MIT-OZ
CC: zzz.rlk at MIT-OZ
Message-ID: <[MIT-LISPM-9].12/11/84 19:31:56.ZZZ.RLK>

In Experimental System 99.12, CADR 4.0, Experimental ZMail 54.3,
MIT-Specific 23.0, Experimental Macsyma 5.0, microcode 320, GC@2,
on Lisp Machine Nine:

I often get an error "file not open at 10513 inside FILE server" when
trying to save files in ZWEI, or get new mail in various mail files of
mine in ZMAIL.  This, by the way, happens all the time in various system
98's, including 98.62, 98.70, 98.80, etc.  I'm also sending this to
bug-oz because I have a feeling that's where it happens.  If I get it
again I'll send a full backtrace to bug-lispm.

Robert^Z
12-Dec-84 00:43:19-EST,1576;000000000001
Received: from MIT-SID by MIT-OZ via Chaosnet; 12 Dec 84 00:42-EST
Date: Wednesday, 12 December 1984, 00:42-EST
From: David M. J. Saslav <saz at MIT-OZ>
Subject: brkpt bug
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 22, on Lisp Machine Sid Vicious:

Unsure how to recreate this.  I moused left on a buffer char while still in brkpt, hoping
to exit brkpt and move cursor to point.

>>Trap: Break on throw through (:METHOD ZWEI:EDITOR :EDIT); values being thrown: 
           #<DTP-COMPILED-FUNCTION SI:PROCESS-TOP-LEVEL 10343521>, NIL
While in the function (:METHOD ZWEI:EDITOR :EDIT)  (:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT)  ZWEI:ZMACS-WINDOW-TOP-LEVEL

(:METHOD ZWEI:EDITOR :EDIT):
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 56161072>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:EDITOR -- 12. IV's, 0. FL's 56160673>
   Arg 2 (OPERATION): :EDIT
   --Defaulted args:--
   Arg 3 (TOP-LEVEL-P): T
   Arg 4 (DESCRIPTION): NIL
   Local 5: (NIL #<DTP-COMPILED-FUNCTION SYS:MICROCODE-ERROR-HANDLER 10617751> 17064 #<DTP-LOCATIVE 22650741> NIL #<DTP-EVEN-PC 10544> #<DTP-LOCATIVE 26500070> #<DTP-LOCATIVE 26500112> #<DTP-ODD-PC 1240102> 1000006004 ...)

(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 56161072>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:TOP-LEVEL-EDITOR -- 12. IV's, 1. FL's 67653650>
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)

SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
   Arg 0 (IGNORE): NIL
13-Dec-84 03:42:32-EST,1017;000000000001
Mail-From: SAZ created at 13-Dec-84 03:41:56
Date: Thu 13 Dec 84 03:41:56-EST
From: Confusion Rains <SAZ@MIT-OZ>
Subject: Release 5.2 for LM2's
To: bug-lispm@MIT-OZ
cc: bug-music@MIT-OZ


For a long time now (like two months) there has been work over here
that has been awaiting the distribution of the Cadr-version of release
5.2...the lab now has a namespace server for the 5.2 system which to
the best of my knowledge runs ok and would serve a cadr running the
proper software.

5.1 is not that software.

I blame myself for not having sent this message off sooner -- I offer
no excuse other than that of "more pressing obligations".  However, it
has been a constant inconvenience not to be able to do any work with
our Music System; it took so long to develop.  We are eagerly awaiting
the version of Release 5 that does not lose with respect to the
namespace issue as the lab is currently set up.

When and where can we obtain the cadr-compatible version of Release 5.2?

DmjS
-------
13-Dec-84 03:57:02-EST,3177;000000000001
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 13 Dec 84 03:56-EST
Received: from SCRC-NEPONSET by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 111344; Mon 10-Dec-84 13:32:19-EST
Date: Monday, 10 December 1984, 13:34-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: %draw-line doesn't like floats
To: Dinarte R. Morais <DRM at MIT-XX>, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 9 Dec 84 01:05-EST from Dinarte R. Morais <DRM at MIT-XX>
Message-ID: <841210133403.4.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Sunday, 9 December 1984, 01:05-EST
    From: Dinarte R. Morais <DRM@MIT-XX>

    In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 22, Tanglewood VI, on Project Tanglewood Cherry:

    Looks like a the %draw-line microcode REALLY doesn't like floating-point
    numbers.  When this error happened the console turned into a random
    pattern of bits and the only way to continue was to walk over to the
    machine and reset.

The faster graphics microcode that was introduced in 5.2 has grown some
error checking for 6.0.  The current error message you will get is this
(locals in base 8, sorry).

>>Trap: Some argument to SYS:%DRAW-LINE-LOOP was not a fixnum.
While in the function TV:%DRAW-LINE-INTERNAL  (:METHOD TV:SCREEN :%DRAW-LINE)  (:METHOD TV:GRAPHICS-MIXIN :DRAW-LINE)

TV:%DRAW-LINE-INTERNAL:  (P.C. = 267)
   Arg 0 (X1): 652
   Arg 1 (Y1): 531
   Arg 2 (X2): 454.12692
   Arg 3 (Y2): 531
   Arg 4 (ALU): 7

    [DRM]
    >>Trap: The SYS:%DRAW-LINE-LOOP microcode ran into a DBG:ARRAY-WORD that was not a fixnum.
    While in the function TV:%DRAW-LINE-INTERNAL  (:METHOD TV:SCREEN :%DRAW-LINE)  (:METHOD TV:GRAPHICS-MIXIN :DRAW-LINE)

    TV:%DRAW-LINE-INTERNAL:  (P.C. = 267)
       Arg 0 (X1): 426
       Arg 1 (Y1): 345
       Arg 2 (X2): 454.12692
       Arg 3 (Y2): 345
       Arg 4 (ALU): 6

    (:METHOD TV:SCREEN :%DRAW-LINE):  (P.C. = 36)
       Arg 0 (SELF): #<MAIN-SCREEN Main Screen 2600077 exposed>
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:SCREEN -- 5. IV's, 1. FL's 53137744>
       Arg 2 (OPERATION): :%DRAW-LINE
       Arg 3 (X1): 426
       Arg 4 (Y1): 345
       Arg 5 (X2): 454.12692
       Arg 6 (Y2): 345
       Arg 7 (ALU): 6
       Arg 8 (DRAW-END-POINT): NIL
       Arg 9 (SHEET): #<ILL-GRAPHICS-PANE Ill Graphics Pane 2 3312564 exposed>

    (:METHOD TV:GRAPHICS-MIXIN :DRAW-LINE):  (P.C. = 60)
       Arg 0 (SELF): #<ILL-GRAPHICS-PANE Ill Graphics Pane 2 3312564 exposed>
       Arg 1 (SELF-MAPPING-TABLE): TV:GRAPHICS-MIXIN
       Arg 2 (OPERATION): :DRAW-LINE
       Arg 3 (FROM-X): 425
       Arg 4 (FROM-Y): 344
       Arg 5 (TO-X): 453.12692
       Arg 6 (TO-Y): 344
       Arg 7 (ALU): 6
       Arg 8 (DRAW-END-POINT): NIL

    (:METHOD TV:GRAPHICS-MIXIN :DRAW-LINES):  (P.C. = 30)
       Arg 0 (SELF): #<ILL-GRAPHICS-PANE Ill Graphics Pane 2 3312564 exposed>
       Arg 1 (SELF-MAPPING-TABLE): TV:GRAPHICS-MIXIN
       Arg 2 (OPERATION): :DRAW-LINES
       Arg 3 (ALU): 6
       Arg 4 (X1): 425
       Arg 5 (Y1): 344
       Rest arg (END-XS-AND-YS): (453.12692 344 453.12692 362 425 362 425 344)
13-Dec-84 04:02:05-EST,1068;000000000001
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 13 Dec 84 04:01-EST
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 141074; Mon 10-Dec-84 21:42:42-EST
Date: Monday, 10 December 1984, 21:41-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: Blinkers and evaporating storage
To: Richard E. Zippel <RZ at MIT-MC>
cc: BUG-LISPM at MIT-OZ
In-Reply-To: The message of 6 Dec 84 15:34-EST from Richard E. Zippel <RZ at MIT-MC>
Message-ID: <841210214119.3.MOON@EUPHRATES.SCRC.Symbolics.COM>

Thanks for the report about lack of error messages for errors signalled while
blinking blinkers.  Simply removing the offending CATCH-ERROR would enable the
existing mechanism for handling errors in the scheduler to notify you about
the error, with a backtrace.  This notification is not repeated redundantly
even though the error will keep recurring until you deexpose the window with
the selected blinker.

ACTION: Remove the offending CATCH-ERROR.
        Fix the other bug uncovered by this which I reported separately.
13-Dec-84 06:33:09-EST,3549;000000000001
Received: from MIT-MC by MIT-OZ via Chaosnet; 13 Dec 84 06:33-EST
Date: Thursday, 13 December 1984, 06:30-EST
From: Sidney Markowitz <SIDNEY at MIT-OZ>
Subject: can't get to some arpanet hosts for ftp operations
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 18, on Lisp Machine Apiary-7:

This happened in zmacs when I did a m-x dired on columbia-20:<kermit>*.*.*
The very same thing happened when I tried to get to host mitre-bedford.
A similar thing happens when I try to telnet to those hosts in select-T.
--------------------

>>Error: The host COLUMBIA-20 is not accessible in any way for file operations.
         For COLUMBIA-20:PS:<KERMIT>*.*.*
While in the function (:METHOD ACTIVE-PATHNAME-HOST :FILE-ACCESS-PATH)  (:METHOD ACTIVE-PATHNAME-MIXIN :DIRECTORY-LIST)  DIRECTORY-LIST

(:METHOD ACTIVE-PATHNAME-HOST :FILE-ACCESS-PATH):  (P.C. = 65)
   Arg 0 (SELF): #<TOPS20-HOST COLUMBIA-20 14633357>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ACTIVE-PATHNAME-HOST -- 1. IV's, 0. FL's 52553221>
   Arg 2 (OPERATION): :FILE-ACCESS-PATH
   Arg 3 (PATHNAME): #<TOPS20-PATHNAME "COLUMBIA-20:PS:<KERMIT>*.*.*">
   Arg 4 (OPERATION): :DIRECTORY-LIST

(:METHOD ACTIVE-PATHNAME-MIXIN :DIRECTORY-LIST):  (P.C. = 6)
   Arg 0 (SELF): #<TOPS20-PATHNAME "COLUMBIA-20:PS:<KERMIT>*.*.*">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ACTIVE-PATHNAME-MIXIN -- 1. IV's, 0. FL's 52530451>
   Arg 2 (OPERATION): :DIRECTORY-LIST
   Arg 3 (OPTIONS): (:SORTED :DELETED)

DIRECTORY-LIST:  (P.C. = 111)
   Arg 0 (FILENAME): #<TOPS20-PATHNAME "COLUMBIA-20:PS:<KERMIT>*.*.*">
   Rest arg (OPTIONS): (:SORTED :DELETED)

(:METHOD ZWEI:DIRED-NODE-MIXIN :REVERT):  (P.C. = 42)
   Arg 0 (SELF): #<DIRED-BUFFER "*Dired-2*" 16627544>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:DIRED-NODE-MIXIN -- 4. IV's, 0. FL's 57052450>
   Arg 2 (OPERATION): :REVERT

(:METHOD ZWEI:DIRED-BUFFER :COMBINED :REVERT):  (P.C. = 10)
   Arg 0 (SELF): #<DIRED-BUFFER "*Dired-2*" 16627544>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:DIRED-BUFFER -- 3. IV's, 4. FL's 70060021>
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

(:METHOD ZWEI:ZMACS-EDITOR :FIND-SPECIAL-BUFFER):  (P.C. = 45)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 56161072>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMACS-EDITOR -- 3. IV's, 0. FL's 67653634>
   Arg 2 (OPERATION): :FIND-SPECIAL-BUFFER
   Arg 3 (TYPE): :DIRED
   Arg 4 (NEW-P): T
   Rest arg (SETS): (:SET-PATHNAME #<TOPS20-PATHNAME "COLUMBIA-20:PS:<KERMIT>*.*.*">)

(:METHOD ZWEI:ZMACS-EDITOR :SELECT-SPECIAL-BUFFER):  (P.C. = 13)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 56161072>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMACS-EDITOR -- 3. IV's, 0. FL's 67653634>
   Arg 2 (OPERATION): :SELECT-SPECIAL-BUFFER
   Arg 3 (TYPE): :DIRED
   Arg 4 (NEW-P): T
   Rest arg (SETS): NIL

(:DEFUN-METHOD ZWEI:DIRECTORY-EDIT):  (P.C. = 10)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 56161072>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:EDITOR -- 12. IV's, 0. FL's 56160673>
   Arg 2 (PATHNAME): #<TOPS20-PATHNAME "COLUMBIA-20:PS:<KERMIT>*.*.*">

Rest of stack:
ZWEI:DIRECTORY-EDIT:  (P.C. = 12)
ZWEI:COM-DIRED:  (P.C. = 5)
ZWEI:COM-EXTENDED-COMMAND:  (P.C. = 27)
ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 214)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 41)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
13-Dec-84 06:35:52-EST,3415;000000000001
Received: from MIT-MC by MIT-OZ via Chaosnet; 13 Dec 84 06:35-EST
Date: Thursday, 13 December 1984, 06:33-EST
From: Sidney Markowitz <SIDNEY at MIT-OZ>
Subject: can't ftp to some arpanet sites
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 18, on Lisp Machine Apiary-7:

m-x dired columbia-20:<kermit>*.*.*
also happened for mitre-bedford:
also telnet to them doesn't work
-----------------------

>>Error: The host COLUMBIA-20 is not accessible in any way for file operations.
         For COLUMBIA-20:PS:<KERMIT>*.*.*
While in the function (:METHOD ACTIVE-PATHNAME-HOST :FILE-ACCESS-PATH)  (:METHOD ACTIVE-PATHNAME-MIXIN :DIRECTORY-LIST)  DIRECTORY-LIST

(:METHOD ACTIVE-PATHNAME-HOST :FILE-ACCESS-PATH):  (P.C. = 65)
   Arg 0 (SELF): #<TOPS20-HOST COLUMBIA-20 14633357>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ACTIVE-PATHNAME-HOST -- 1. IV's, 0. FL's 52553221>
   Arg 2 (OPERATION): :FILE-ACCESS-PATH
   Arg 3 (PATHNAME): #<TOPS20-PATHNAME "COLUMBIA-20:PS:<KERMIT>*.*.*">
   Arg 4 (OPERATION): :DIRECTORY-LIST

(:METHOD ACTIVE-PATHNAME-MIXIN :DIRECTORY-LIST):  (P.C. = 6)
   Arg 0 (SELF): #<TOPS20-PATHNAME "COLUMBIA-20:PS:<KERMIT>*.*.*">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ACTIVE-PATHNAME-MIXIN -- 1. IV's, 0. FL's 52530451>
   Arg 2 (OPERATION): :DIRECTORY-LIST
   Arg 3 (OPTIONS): (:SORTED :DELETED)

DIRECTORY-LIST:  (P.C. = 111)
   Arg 0 (FILENAME): #<TOPS20-PATHNAME "COLUMBIA-20:PS:<KERMIT>*.*.*">
   Rest arg (OPTIONS): (:SORTED :DELETED)

(:METHOD ZWEI:DIRED-NODE-MIXIN :REVERT):  (P.C. = 42)
   Arg 0 (SELF): #<DIRED-BUFFER "*Dired-2*" 16627544>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:DIRED-NODE-MIXIN -- 4. IV's, 0. FL's 57052450>
   Arg 2 (OPERATION): :REVERT

(:METHOD ZWEI:DIRED-BUFFER :COMBINED :REVERT):  (P.C. = 10)
   Arg 0 (SELF): #<DIRED-BUFFER "*Dired-2*" 16627544>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:DIRED-BUFFER -- 3. IV's, 4. FL's 70060021>
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

(:METHOD ZWEI:ZMACS-EDITOR :FIND-SPECIAL-BUFFER):  (P.C. = 45)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 56161072>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMACS-EDITOR -- 3. IV's, 0. FL's 67653634>
   Arg 2 (OPERATION): :FIND-SPECIAL-BUFFER
   Arg 3 (TYPE): :DIRED
   Arg 4 (NEW-P): T
   Rest arg (SETS): (:SET-PATHNAME #<TOPS20-PATHNAME "COLUMBIA-20:PS:<KERMIT>*.*.*">)

(:METHOD ZWEI:ZMACS-EDITOR :SELECT-SPECIAL-BUFFER):  (P.C. = 13)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 56161072>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMACS-EDITOR -- 3. IV's, 0. FL's 67653634>
   Arg 2 (OPERATION): :SELECT-SPECIAL-BUFFER
   Arg 3 (TYPE): :DIRED
   Arg 4 (NEW-P): T
   Rest arg (SETS): NIL

(:DEFUN-METHOD ZWEI:DIRECTORY-EDIT):  (P.C. = 10)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 56161072>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:EDITOR -- 12. IV's, 0. FL's 56160673>
   Arg 2 (PATHNAME): #<TOPS20-PATHNAME "COLUMBIA-20:PS:<KERMIT>*.*.*">

Rest of stack:
ZWEI:DIRECTORY-EDIT:  (P.C. = 12)
ZWEI:COM-DIRED:  (P.C. = 5)
ZWEI:COM-EXTENDED-COMMAND:  (P.C. = 27)
ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 214)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 41)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
13-Dec-84 07:57:57-EST,810;000000000000
Received: from SCRC-TENEX by MIT-OZ via Chaosnet; 13 Dec 84 07:57-EST
Date: 13 Dec 1984 0751-EST
From: Bernard S. Greenberg <BSG@SCRC-TENEX>
Subject: Re: more on bug with si:with-indentation and :line-out
To: DICK@MIT-OZ
cc: BUG-LISPM@MIT-OZ
In-Reply-To: The message of Monday, 10 December 1984, 11:51-EST from  <DICK at MIT-OZ>

    Date: Monday, 10 December 1984, 11:51-EST
    From:  <DICK at MIT-OZ>

    In Symbolics 3600 System 242.356, Hardcopy 20.10, on Lisp Machine Bing Crosby:


    The following seems to fix the bug nicely.

    (defmethod (si:indenting-stream :line-out) (&rest args)
      (lexpr-funcall-self ':string-out args)
      (funcall-self ':tyo #\cr))
No, the bug is in :STRING-OUT (for indenting stream) of embedded
CR's, and has been fixed in release 6.
-------
13-Dec-84 08:44:26-EST,1273;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 13 Dec 84 08:44-EST
Received: from SCRC-CONCORD by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 142460; Thu 13-Dec-84 08:45:44-EST
Date: Thursday, 13 December 1984, 08:45-EST
From: Bernard S. Greenberg <BSG at SCRC-TENEX>
Subject: Re: more on bug with si:with-indentation and :line-out
To: BSG at SCRC-TENEX, DICK at MIT-OZ
cc: BUG-LISPM at MIT-OZ
In-Reply-To: The message of 13 Dec 84 07:51-EST from Bernard S. Greenberg <BSG at SCRC-TENEX>
Message-ID: <841213084520.9.BSG@CONCORD.SCRC.Symbolics.COM>

    Date: 13 Dec 1984 0751-EST
    From: Bernard S. Greenberg <BSG@SCRC-TENEX>

	Date: Monday, 10 December 1984, 11:51-EST
	From:  <DICK at MIT-OZ>

	In Symbolics 3600 System 242.356, Hardcopy 20.10, on Lisp Machine Bing Crosby:


	The following seems to fix the bug nicely.

	(defmethod (si:indenting-stream :line-out) (&rest args)
	  (lexpr-funcall-self ':string-out args)
	  (funcall-self ':tyo #\cr))
    No, the bug is in :STRING-OUT (for indenting stream) of embedded
    CR's, and has been fixed in release 6.
    -------
Nope, sorry, serves me right for attempting to answer mail from home.  Still
broken, I'll look into it.  Anyway, embedded CR's in strings were broken.....
13-Dec-84 09:26:43-EST,1526;000000000001
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 13 Dec 84 09:26-EST
Received: from SCRC-PEACE by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 142479; Thu 13-Dec-84 09:28:02-EST
Date: Thursday, 13 December 1984, 09:26-EST
From: Charles Hornig <Hornig at SCRC-STONY-BROOK>
Subject: can't get to some arpanet hosts for ftp operations
To: Sidney Markowitz <SIDNEY at MIT-OZ>, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 13 Dec 84 06:30-EST from Sidney Markowitz <SIDNEY at MIT-OZ>
Message-ID: <841213092620.3.HORNIG@PEACE.SCRC.Symbolics.COM>

    Date: Thursday, 13 December 1984, 06:30-EST
    From: Sidney Markowitz <SIDNEY at MIT-OZ>

    In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 18, on Lisp Machine Apiary-7:

    This happened in zmacs when I did a m-x dired on columbia-20:<kermit>*.*.*
    The very same thing happened when I tried to get to host mitre-bedford.
    A similar thing happens when I try to telnet to those hosts in select-T.
    --------------------

    >>Error: The host COLUMBIA-20 is not accessible in any way for file operations.
	     For COLUMBIA-20:PS:<KERMIT>*.*.*
    While in the function (:METHOD ACTIVE-PATHNAME-HOST :FILE-ACCESS-PATH)  (:METHOD ACTIVE-PATHNAME-MIXIN :DIRECTORY-LIST)  DIRECTORY-LIST

If you want to talk to a TCP/FTP host, you have to be running with
TCP/FTP software on your LispM.  This is now available from Symbolics.
I'm not sure if MIT has ordered it yet.  There are also some beta-test
versions floating around MIT.
13-Dec-84 09:27:59-EST,1008;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 13 Dec 84 09:27-EST
Received: from SCRC-PEACE by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 142480; Thu 13-Dec-84 09:29:05-EST
Date: Thursday, 13 December 1984, 09:27-EST
From: Charles Hornig <Hornig at SCRC-STONY-BROOK>
Subject: Destructuring-Bind
To: Charles Rich <RICH at MIT-OZ>, BUG-lispm at MIT-OZ
In-Reply-To: The message of 10 Dec 84 11:18-EST from Charles Rich <RICH at MIT-OZ>
Message-ID: <841213092730.4.HORNIG@PEACE.SCRC.Symbolics.COM>

    Date: Monday, 10 December 1984, 11:18-EST
    From: Charles Rich <RICH at MIT-OZ>

    It is nice that this function is now documented.  However,
    it would be more useful for macro-writing-macro purposes
    if it would (optionally) check for the right number of args
    (as does Defmacro).  Right now it just takes nils to extend
    arglist.
		    -CR

In the next release, there will be a version of DESTRUCTURING-BIND with
the same semantics as Common Lisp DEFMACRO.
13-Dec-84 09:35:39-EST,1599;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 13 Dec 84 09:35-EST
Received: from SCRC-CONCORD by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 142489; Thu 13-Dec-84 09:36:46-EST
Date: Thursday, 13 December 1984, 09:36-EST
From: Bernard S. Greenberg <BSG at SCRC-TENEX>
Subject: bug is SI:WITH-INDENTATION and :string-out
To: DICK at MIT-OZ, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 10 Dec 84 11:44-EST from DICK at MIT-OZ,
             The message of 10 Dec 84 11:44-EST from DICK at MIT-OZ,
             The message of 10 Dec 84 11:51-EST from DICK at MIT-OZ
Message-ID: <841213093619.4.BSG@CONCORD.SCRC.Symbolics.COM>

    Date: Monday, 10 December 1984, 11:44-EST
    From:  <DICK at MIT-OZ>

    SI:WITH-INDENTATION does not work right with :string-out messages.

    (si:with-indentation (standard-output 4)
      (terpri)
      (send standard-output ':line-out "foo")
      (send standard-output ':string-out "foo"))

    produces
	foo
    foo

    Date: Monday, 10 December 1984, 11:51-EST
    From:  <DICK at MIT-OZ>

    The following seems to fix the bug nicely.

    (defmethod (si:indenting-stream :line-out) (&rest args)
      (lexpr-funcall-self ':string-out args)
      (funcall-self ':tyo #\cr))
UUUUUCCCCCH!  Lesson Uno in "Multiple Self and the Send-As Problem"
(new recording group?)!  si:indenting-stream thinks it's cool
to forward to its "inner self" anything it doesn't understand,
including :LINE-OUT.  Modulo a new message-passing theory,
your fix is correct as stands, and will be incorporated into
a future release.
13-Dec-84 09:55:23-EST,3071;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 13 Dec 84 09:55-EST
Date: Thursday, 13 December 1984, 09:53-EST
From:  <DICK at MIT-OZ>
Subject: problem with condition-case in a macro that gets used when compiling
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10, on Lisp Machine Bing Crosby:

If you start in a fresh release 5 system and do a compiler:compile-file on a file containing the following

	  
	  
	  (defmacro foo ()
	    (condition-case ()
		(funcall nil)
	      (error nil)))
	  
	  (defun bar ()
	    (foo))
	  

you get the error state shown below.  The problem seems to be that the
condition-case doesn't get set up right so that it can actually work.
Wrapping the macro foo in an "(eval-when (eval load compile) ...)" does
not help.

			Dick Waters

>>Error: The object (#:EVAL-AT-LOAD-TIME-MARKER DBG:FASD-INSTANCE DBG:CASE-HANDLER :FLAVOR-LIST (ERROR)) is not a valid function
While in the function (#:EVAL-AT-LOAD-TIME-MARKER DBG:FASD-INSTANCE DBG:CASE-HANDLER :FLAVOR-LIST (ERROR))  (:METHOD CONDITION :SIGNAL)  (:METHOD CONDITION :COMBINED :SIGNAL)
While compiling BAR

(#:EVAL-AT-LOAD-TIME-MARKER DBG:FASD-INSTANCE DBG:CASE-HANDLER :FLAVOR-LIST (ERROR)):
   Arg 0: :HANDLE-CONDITION
   Arg 1: #<INVALID-FUNCTION 5232623>
   Arg 2: #<DTP-LOCATIVE 141275>

(:METHOD CONDITION :SIGNAL):  (P.C. = 114)
   Arg 0 (SELF): #<INVALID-FUNCTION 5232623>
   Arg 1 (SELF-MAPPING-TABLE): CONDITION
   Arg 2 (OPERATION): :SIGNAL
   Arg 3 (PROCEEDABLY): T

(:METHOD CONDITION :COMBINED :SIGNAL):  (P.C. = 21)
   Arg 0 (SELF): #<INVALID-FUNCTION 5232623>
   Arg 1 (SELF-MAPPING-TABLE): CONDITION
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

SIGNAL:  (P.C. = 10)
   Arg 0 (FLAVOR): SYS:INVALID-FUNCTION
   Rest arg (INIT-OPTIONS): (:FUNCTION NIL :PROCEED-TYPES (:NEW-FUNCTION))

SYS:CALL-FUNNY-FUNCTION:  (P.C. = 110)
   Arg 0 (FUNCTION): NIL
   Rest arg (ARGS): NIL

NIL:

FUNCALL:  (P.C. = 5)
   Arg 0 (FN): NIL
   Rest arg (ARGS): NIL

SI:*EVAL:  (P.C. = 370)
   Arg 0 (FORM): (FUNCALL NIL)

Rest of stack:
RETURN-FROM:  (P.C. = 20)
SI:*EVAL:  (P.C. = 605)
*CATCH:  (P.C. = 20)
FOO:
FUNCALL:  (P.C. = 5)
MACROEXPAND-1:  (P.C. = 146)
COMPILER:TRANSFORM:  (P.C. = 437)
COMPILER:PHASE-1:  (P.C. = 15)
COMPILER:PHASE-1-PROGN:  (P.C. = 27)
COMPILER:PHASE-1-FUNCTION-DEFINITION:  (P.C. = 250)
COMPILER:PHASE-1-EXTERNAL-FUNCTION:  (P.C. = 24)
COMPILER:RUN-PHASE-1-FUNCTION:  (P.C. = 67)
COMPILER:COMPILE-DEFINITION-1:  (P.C. = 10)
COMPILER:COMPILE-DEFINITION:  (P.C. = 43)
(:INTERNAL COMPILER:COMPILE-TO-FILE 0):  (P.C. = 4)
COMPILER:COMPILE-TO-FILE:  (P.C. = 12)
COMPILER:COMPILE-FORM-FUNCTION:  (P.C. = 41)
COMPILER:COMPILE-FROM-STREAM-1:  (P.C. = 306)
COMPILER:PROCESS-FORMS-FROM-STREAM:  (P.C. = 117)
COMPILER:COMPILE-FROM-STREAM:  (P.C. = 235)
COMPILER:COMPILE-FILE:  (P.C. = 241)
SI:*EVAL:  (P.C. = 370)
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 200)
SI:LISP-COMMAND-LOOP:  (P.C. = 115)
SI:LISP-TOP-LEVEL1:  (P.C. = 22)
SI:LISP-TOP-LEVEL:  (P.C. = 7)
13-Dec-84 14:49:09-EST,1702;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 13 Dec 84 14:48-EST
Received: from SCRC-PEACE by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 142801; Thu 13-Dec-84 14:39:21-EST
Date: Thursday, 13 December 1984, 14:37-EST
From: Charles Hornig <Hornig at SCRC-STONY-BROOK>
Subject: problem with condition-case in a macro that gets used when compiling
To: DICK at MIT-OZ, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 13 Dec 84 09:53-EST from DICK at MIT-OZ
Message-ID: <841213143727.5.HORNIG@PEACE.SCRC.Symbolics.COM>

    Date: Thursday, 13 December 1984, 09:53-EST
    From:  <DICK at MIT-OZ>

    In Symbolics 3600 System 242.356, Hardcopy 20.10, on Lisp Machine Bing Crosby:

    If you start in a fresh release 5 system and do a compiler:compile-file on a file containing the following

	  
	  
	      (defmacro foo ()
		(condition-case ()
		    (funcall nil)
		  (error nil)))
	  
	      (defun bar ()
		(foo))
	  

    you get the error state shown below.  The problem seems to be that the
    condition-case doesn't get set up right so that it can actually work.
    Wrapping the macro foo in an "(eval-when (eval load compile) ...)" does
    not help.

			    Dick Waters

    >>Error: The object (#:EVAL-AT-LOAD-TIME-MARKER DBG:FASD-INSTANCE DBG:CASE-HANDLER :FLAVOR-LIST (ERROR)) is not a valid function
    While in the function (#:EVAL-AT-LOAD-TIME-MARKER DBG:FASD-INSTANCE DBG:CASE-HANDLER :FLAVOR-LIST (ERROR))  (:METHOD CONDITION :SIGNAL)  (:METHOD CONDITION :COMBINED :SIGNAL)
    While compiling BAR

The part of the system that does this has been heavily hacked in release
6.  This example compiles without error in the new system.
13-Dec-84 15:09:19-EST,2569;000000000001
Received: from MIT-SID by MIT-OZ via Chaosnet; 13 Dec 84 15:05-EST
Date: Thursday, 13 December 1984, 15:04-EST
From: David M. J. Saslav <saz at MIT-OZ>
Subject: weird bug
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 22, on Lisp Machine Sid Vicious:

Sorry I can't help you reproduce this.  I couldn't abort out of it in any way
shape or form.  All I remember trying to do was control-k and control-y some
lisp forms from a breakpoint and recreating them in a Grind S Expression minibuffer...

this occurred when I tried to abort out of breakpoint at some point...

saz

>>Trap: The first argument given to the AP-LEADER instruction, NIL, was not an array.
While in the function ZWEI:PUT-POINT-AT-PLINE  ZWEI:RECENTER-WINDOW  ZWEI:REDISPLAY

ZWEI:PUT-POINT-AT-PLINE:  (P.C. = 23)
   Arg 0 (SHEET): #<ZMACS-WINDOW-PANE Zmacs Window Pane 1 2643416 exposed>
   Arg 1 (POINT-LINE): "-1-1(zwei:save-all-files"
   Arg 2 (POINT-INDEX): 30
   Arg 3 (POINT-PLINE): 30
   Arg 4 (FIRST-BP): (";;; -*- Package: MUSIC; Base: 10.; Mode: LISP -*-" 0 :NORMAL)
   Arg 5 (LAST-BP): ("      current-guess)))	" 27 :MOVES)
   Local 6 (LH): 16
   Local 7 (P): 4
   Local 8 (STOP-LINE): ";;; -*- Package: MUSIC; Base: 10.; Mode: LISP -*-"
   Local 9 (DIAGRAM-NPLINES): NIL
   Local 10 (LINE): NIL
   Local 11 (POINT-LINE-P): NIL
   Local 12 (DIAGRAM): NIL

ZWEI:RECENTER-WINDOW:  (P.C. = 101)
   Arg 0 (WINDOW): #<WINDOW 13223341>
   Arg 1 (RECENTER-TYPE): :ABSOLUTE
   Arg 2 (RC1): NIL
   Arg 3 (RC2): NIL

ZWEI:REDISPLAY:  (P.C. = 266)
   Arg 0 (WINDOW): #<WINDOW 13223341>
   --Defaulted args:--
   Arg 1 (RECENTER-TYPE): :ABSOLUTE
   Arg 2 (RC1): NIL
   Arg 3 (RC2): NIL
   Arg 4 (FORCE-TO-COMPLETION-P): NIL

ZWEI:REDISPLAY-ALL-WINDOWS:  (P.C. = 34)
   --Defaulted args:--
   Arg 0 (FORCE-TO-COMPLETION-P): NIL
   Arg 1 (SELECT-P): T

(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 140)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 56161072>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:EDITOR -- 12. IV's, 0. FL's 56160673>
   Arg 2 (OPERATION): :EDIT
   --Defaulted args:--
   Arg 3 (TOP-LEVEL-P): T
   Arg 4 (DESCRIPTION): NIL

(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 41)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 56161072>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:TOP-LEVEL-EDITOR -- 12. IV's, 1. FL's 67653650>
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)

SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
   Arg 0 (IGNORE): NIL
13-Dec-84 15:16:17-EST,3056;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 13 Dec 84 15:16-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 142841; Thu 13-Dec-84 14:58:03-EST
Date: Thursday, 13 December 1984, 14:55-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: SUPDUP-GRAPHICS-STATE receives the null message.
To: Gavan Duffy <GAVAN at MIT-OZ>, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 11 Dec 84 09:05-EST from Gavan Duffy <GAVAN at MIT-OZ>
Message-ID: <841213145555.2.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Tuesday, 11 December 1984, 09:05-EST
    From: Gavan Duffy <GAVAN at MIT-OZ>

    In Symbolics 3600 System 242.356, Hardcopy 20.10,
    Experimental RELATUS 131.140, FEP 22, on Lisp Machine Buddy Holly:

    Typed `n' to DPRESS and got this.
Any particular operating system (ITS, TOPS-20)?  Any particular file we
can test it with?  Did you let the first page draw completely?

    >>Error: The object #<SUPDUP-GRAPHICS-STATE 40336777> received a NIL message, which went unclaimed.
	     The rest of the message was (54.)
    While in the function (:METHOD TELNET:SUPDUP-GRAPHICS-STATE :SUPDUP-GRAPHICS)  (:METHOD TELNET:SUPDUP-STATE-BLOCK :SUPDUP-GRAPHICS)  (:METHOD TELNET:SUPDUP-FILTER :FILTER)

    (:METHOD TELNET:SUPDUP-GRAPHICS-STATE :SUPDUP-GRAPHICS):  (P.C. = 32)
       Arg 0 (SELF): #<SUPDUP-GRAPHICS-STATE 40336777>
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TELNET:SUPDUP-GRAPHICS-STATE -- 12. IV's, 0. FL's 57124433>
       Arg 2 (OPERATION): :SUPDUP-GRAPHICS
       Arg 3 (SUPDUP-GRAPHICS-INPUT-STREAM-initialization): #<HANGUP-FILTER 40350063>
       Local 4: TELNET:SUPDUP-GRAPHICS
       Local 5: #<DTP-ODD-PC 64062520>
       Local 6: #<DTP-LOCATIVE 40241047>
       Local 7: #<DTP-LOCATIVE 45240046>
       Local 8 (CH): 54.

    (:METHOD TELNET:SUPDUP-STATE-BLOCK :SUPDUP-GRAPHICS):  (P.C. = 5)
       Arg 0 (SELF): #<SUPDUP-STATE-BLOCK 40336772>
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TELNET:SUPDUP-STATE-BLOCK -- 3. IV's, 0. FL's 57124420>
       Arg 2 (OPERATION): :SUPDUP-GRAPHICS
       Arg 3 (INPUT-STREAM): #<HANGUP-FILTER 40350063>

    (:METHOD TELNET:SUPDUP-FILTER :FILTER):  (P.C. = 27)
       Arg 0 (SELF): #<SUPDUP-FILTER 40350067>
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TELNET:SUPDUP-FILTER -- 3. IV's, 0. FL's 57122401>
       Arg 2 (OPERATION): :FILTER
       Arg 3 (CH): 153.

    (:METHOD TELNET:FILTER-STREAM :TYI-NO-HANG):  (P.C. = 15)
       Arg 0 (SELF): #<SUPDUP-FILTER 40350067>
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TELNET:FILTER-STREAM -- 3. IV's, 0. FL's 57122407>
       Arg 2 (OPERATION): :TYI-NO-HANG

    (:METHOD TELNET:NVT-WINDOW :TYPEOUT-TOP-LEVEL):  (P.C. = 37)
       Arg 0 (SELF): #<NVT-WINDOW Terminal 1 701132 exposed>
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TELNET:NVT-WINDOW -- 18. IV's, 10. FL's 56657163>
       Arg 2 (OPERATION): :TYPEOUT-TOP-LEVEL

    SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
       Arg 0 (IGNORE): NIL
13-Dec-84 15:17:38-EST,2293;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 13 Dec 84 15:17-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 142852; Thu 13-Dec-84 15:00:38-EST
Date: Thursday, 13 December 1984, 14:58-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: brkpt bug
To: David M. J. Saslav <saz at MIT-OZ>, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 12 Dec 84 00:42-EST from David M. J. Saslav <saz at MIT-OZ>
Message-ID: <841213145829.3.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Wednesday, 12 December 1984, 00:42-EST
    From: David M. J. Saslav <saz at MIT-OZ>

    In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 22, on Lisp Machine Sid Vicious:

    Unsure how to recreate this.  I moused left on a buffer char while still in brkpt, hoping
    to exit brkpt and move cursor to point.

If you didn't enter the debugger in the past and type c-X while at the
(:METHOD ZWEI:EDITOR :EDIT) frame, then I don't know what could have
caused this.  c-X causes the "Break on exit from frame" bit to be set.

    >>Trap: Break on throw through (:METHOD ZWEI:EDITOR :EDIT); values being thrown: 
	       #<DTP-COMPILED-FUNCTION SI:PROCESS-TOP-LEVEL 10343521>, NIL
    While in the function (:METHOD ZWEI:EDITOR :EDIT)  (:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT)  ZWEI:ZMACS-WINDOW-TOP-LEVEL

    (:METHOD ZWEI:EDITOR :EDIT):
       Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 56161072>
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:EDITOR -- 12. IV's, 0. FL's 56160673>
       Arg 2 (OPERATION): :EDIT
       --Defaulted args:--
       Arg 3 (TOP-LEVEL-P): T
       Arg 4 (DESCRIPTION): NIL
       Local 5: (NIL #<DTP-COMPILED-FUNCTION SYS:MICROCODE-ERROR-HANDLER 10617751> 17064 #<DTP-LOCATIVE 22650741> NIL #<DTP-EVEN-PC 10544> #<DTP-LOCATIVE 26500070> #<DTP-LOCATIVE 26500112> #<DTP-ODD-PC 1240102> 1000006004 ...)

    (:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):
       Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 56161072>
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:TOP-LEVEL-EDITOR -- 12. IV's, 1. FL's 67653650>
       Rest arg (.DAEMON-CALLER-ARGS.): NIL

    ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)

    SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
       Arg 0 (IGNORE): NIL
13-Dec-84 15:23:24-EST,1330;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 13 Dec 84 15:22-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 142888; Thu 13-Dec-84 15:07:32-EST
Date: Thursday, 13 December 1984, 15:05-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: Destructuring-Bind
To: Charles Hornig <Hornig at SCRC-STONY-BROOK>,
    Charles Rich <RICH at MIT-OZ>, BUG-lispm at MIT-OZ
In-Reply-To: <841213092730.4.HORNIG@PEACE.SCRC.Symbolics.COM>
Message-ID: <841213150525.5.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Thursday, 13 December 1984, 09:27-EST
    From: Charles Hornig <Hornig at SCRC-STONY-BROOK>

	Date: Monday, 10 December 1984, 11:18-EST
	From: Charles Rich <RICH at MIT-OZ>

	It is nice that this function is now documented.  However,
	it would be more useful for macro-writing-macro purposes
	if it would (optionally) check for the right number of args
	(as does Defmacro).  Right now it just takes nils to extend
	arglist.
			-CR

    In the next release, there will be a version of DESTRUCTURING-BIND with
    the same semantics as Common Lisp DEFMACRO.

The important part: it will be called SCL:DESTRUCTURING-BIND (and the
Release is numbered 6).  In yet a future release, the Zetalisp version
will exist for compatibility only, if at all.
13-Dec-84 16:44:15-EST,1533;000000000001
Received: from MIT-HTVAX by MIT-OZ via Chaosnet; 13 Dec 84 16:43-EST
Received: from HOST30300 by MIT-HTVAX (4.12/4.7) with CHAOS 
	id AA10590; Thu, 13 Dec 84 16:43:38 est
Date: Thursday, 13 December 1984, 16:37-EST
From: <DRM@MIT-LIVE-OAK>
Subject: Mysterious error message
To: BUG-LISPM@MIT-OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 22, on CHAOS|30300:

What does this mean?  I was just trying to make a frame.  I'm sure it's
my bug, but the error message doesn't give me much of a hint as to what
is wrong.

-- Dinarte R. Morais

>>Trap: The SYS:RESTART-TRAPPED-CALL microcode ran into an DBG:INSTANCE-HASH-TABLE-ENTRY that was not a fixnum.
While in the function <<Error printing error message>>
<<Error printing function name>>
   Arg 0: 1
   Arg 1: NIL
   Local 0: 1
   Local 1: NIL

TV:MAKE-WINDOW:  (P.C. = 66)
   Arg 0 (FLAVOR-NAME): ILL:ILL-FRAME
   Rest arg (OPTIONS): NIL

SI:*EVAL:  (P.C. = 370)
   Arg 0 (FORM): (TV:MAKE-WINDOW (QUOTE ILL:ILL-FRAME))

SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 200)
   Rest arg: (:NAME "Lisp Top Level in Lisp Listener 1" :ABORTED-FUNCTION NIL :BEFORE-PROMPT-FUNCTION NIL :READ-FUNCTION NIL :EVAL-FUNCTION NIL ...)

SI:LISP-COMMAND-LOOP:  (P.C. = 115)
   Arg 0 (STREAM): #<LISP-LISTENER Lisp Listener 1 2600000 exposed>
   Rest arg: (:NAME "Lisp Top Level in Lisp Listener 1")

SI:LISP-TOP-LEVEL1:  (P.C. = 22)
   Arg 0 (TERMINAL-IO-initialization): #<LISP-LISTENER Lisp Listener 1 2600000 exposed>

SI:LISP-TOP-LEVEL:  (P.C. = 7)
13-Dec-84 17:17:53-EST,2078;000000000000
Received: from SCRC-RIVERSIDE by MIT-OZ via Chaosnet; 13 Dec 84 17:17-EST
Received: from SCRC-EUPHRATES by SCRC-RIVERSIDE via CHAOS with CHAOS-MAIL id 28537; Thu 13-Dec-84 16:10:33-EST
Date: Thursday, 13 December 1984, 16:09-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: pathname problems
To: Richard E. Zippel <RZ at MIT-MC>
cc: BUG-LISPM at MIT-OZ
In-Reply-To: The message of 10 Dec 84 15:04-EST from Richard E. Zippel <RZ at MIT-MC>
Message-ID: <841213160905.0.MOON@EUPHRATES.SCRC.Symbolics.COM>

    Date: Monday, 10 December 1984, 15:04-EST
    From: Richard E. Zippel <RZ at MIT-MC>

    In Symbolics 3600 System 242.356, Hardcopy 20.10,
    Experimental Schema 54.0, FEP 24, on GSTAAD:

    At the moment our link to Symbolics is down and thus we are not getting
    Arpanet namespace updates from Riverside.  As a consequence, Reagan
    thinks that MIT-VAX is a UNIX42 host in the INTERNET and MIT namespaces
    but a UNIX bost in the ARPANET namespace.  For some reason, the ARPANET
    namespace wins, and (net:parse-host 'vx) gives a host with SYSTEM-TYPE
    :UNIX.  This makes it very difficult to read files with long names, like 
    "vx:.../lispm-init.lisp".  Fortunately, "vx:.../lispm-init.bin" is just
    under the length limitation and can be read.  

    My init file then checks to see if vx is a 42 site, and not allows me to
    change it locally, from UNIX to UNIX42.  The problem is that since I had
    previously opened the file as UNIX file, the pathname-hash-table has a
    UNIX pathname in it not a UNIX42 pathname, and all attempts to reference
    the file file  (claims that .../lispm-init.lis is not found).  It would
    be nice if when the system type of a host is changed, the pathname hash
    table were cleared.

Exactly how are you changing the system type?  When the system type of a host
is changed, the pathname hash table -is- cleared.  So either there's something
peculiar about the way you are changing the system type, or my memory of how
this worked in Release 5.2 is incorrect.
14-Dec-84 03:07:42-EST,3678;000000000001
Received: from MIT-HTVAX by MIT-OZ via Chaosnet; 14 Dec 84 03:07-EST
Received: from HOST30305 by MIT-HTVAX (4.12/4.7) with CHAOS 
	id AA12388; Fri, 14 Dec 84 03:07:19 est
Date: Friday, 14 December 1984, 03:00-EST
From: Dinarte R. Morais <DRM@MIT-XX>
Subject: Bug in PEEK
To: BUG-LISPM@MIT-OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 24, Tanglewood VI, on Project Tanglewood Jacaranda:

Went into PEEK, typed F for File-System, then this happened.  The
following notifications I received may be of some help:

2 Notifications, from 13 to 14:
00:15 SCRC-RIVERSIDE is believed to be down or unavailable.;
Obsolete host information may be used.
00:08 It is necessary to change the flavor of namespace object #<LISPM-HOST POINTER 11662675> from FS:LISPM-HOST to NET:HOST.
This may cause problems in dealing with this object until the next use of
 (SI:FULL-GC :SYSTEM-RELEASE T).

>>Error: The object #<HOST POINTER 14633000> received a :PEEK-FILE-SYSTEM-P message, which went unclaimed.
         The rest of the message was ()
While in the function (:METHOD NET:OBJECT :UNCLAIMED-MESSAGE)  SI:FLAVOR-UNCLAIMED-MESSAGE  SI:INSTANCE-HASH-UNCLAIMED-MESSAGE

(:METHOD NET:OBJECT :UNCLAIMED-MESSAGE):  (P.C. = 31)
   Arg 0 (SELF): #<HOST POINTER 14633000>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NET:OBJECT -- 3. IV's, 1. FL's 52504521>
   Arg 2 (OPERATION): :UNCLAIMED-MESSAGE
   Arg 3 (MESSAGE): :PEEK-FILE-SYSTEM-P
   Rest arg (ARGS): NIL

SI:FLAVOR-UNCLAIMED-MESSAGE:  (P.C. = 20)
   Arg 0 (SELF): #<HOST POINTER 14633000>
   Arg 1 (IGNORE): NIL
   Rest arg (MESSAGE): (:PEEK-FILE-SYSTEM-P)

SI:INSTANCE-HASH-UNCLAIMED-MESSAGE:  (P.C. = 35)
   Arg 0 (SELF): #<HOST POINTER 14633000>
   Arg 1 (SELF-MAPPING-TABLE): NIL
   Rest arg (MESSAGE): NIL

(:INTERNAL TV:PEEK-FILE-SYSTEM 0.):  (P.C. = 17)

TV:SCROLL-MAINTAIN-LIST-UPDATE-FUNCTION:  (P.C. = 12)
   Arg 0 (ITEM): ((:PRE-PROCESS-FUNCTION TV:SCROLL-MAINTAIN-LIST-UPDATE-FUNCTION :FUNCTION NIL :INIT-FUNCTION #<DTP-COMPILED-FUNCTION (:INTERNAL TV:PEEK-FILE-SYSTEM 0.) 64055676> :INIT-ARGS NIL :ITEM-FUNCTION #<DTP-COMPILED-FUNCTION (:INTERNAL TV:PEEK-FIL
E-SYSTEM 1.) 64055662> ...))

(:DEFUN-METHOD TV:SCROLL-REDISPLAY-ITEM-LOOP):  (P.C. = 50)
   Arg 0 (SELF): #<PEEK-PANE Peek Pane 1 2643736 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:BASIC-SCROLL-WINDOW -- 8. IV's, 0. FL's 53633756>
   Arg 2 (ITEM): ((:PRE-PROCESS-FUNCTION TV:SCROLL-MAINTAIN-LIST-UPDATE-FUNCTION :FUNCTION NIL :INIT-FUNCTION #<DTP-COMPILED-FUNCTION (:INTERNAL TV:PEEK-FILE-SYSTEM 0.) 64055676> :INIT-ARGS NIL :ITEM-FUNCTION #<DTP-COMPILED-FUNCTION (:INTERNAL TV:PEEK-FIL
E-SYSTEM 1.) 64055662> ...))
   Arg 3 (CURRENT-COUNT): 0.
   Arg 4 (FUNCTION): #<DTP-COMPILED-FUNCTION TV:SCROLL-REDISPLAY-DISPLAY-ITEM 11366404>
   Arg 5 (NO-RECOMP): NIL
   Rest arg (POSITION): (0.)

(:DEFUN-METHOD TV:SCROLL-REDISPLAY):  (P.C. = 71)
   Arg 0 (SELF): #<PEEK-PANE Peek Pane 1 2643736 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:BASIC-SCROLL-WINDOW -- 8. IV's, 0. FL's 53633756>
   Arg 2 (FULL-REDISPLAY): T

(:METHOD TV:BASIC-SCROLL-WINDOW :REDISPLAY):  (P.C. = 14)
   Arg 0 (SELF): #<PEEK-PANE Peek Pane 1 2643736 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:BASIC-SCROLL-WINDOW -- 8. IV's, 0. FL's 53633756>
   Arg 2 (OPERATION): :REDISPLAY
   Arg 3 (FULL-P): T
   Arg 4 (FORCE-P): :FORCE

Rest of stack:
(:METHOD TV:PEEK-PANE :COMBINED :REDISPLAY):  (P.C. = 16)
(:METHOD TV:BASIC-SCROLL-WINDOW :SET-DISPLAY-ITEM):  (P.C. = 14)
TV:PEEK-SET-MODE:  (P.C. = 103)
TV:PEEK-TOP-LEVEL:  (P.C. = 247)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
14-Dec-84 15:25:04-EST,1576;000000000000
Received: from MIT-GSTAAD by MIT-OZ via Chaosnet; 14 Dec 84 15:18-EST
Date: Friday, 14 December 1984, 15:10-EST
From: Richard E. Zippel <RZ at MIT-MC>
Subject: pathname problems
To: Moon at SCRC-TENEX
Cc: BUG-LISPM at MIT-OZ
In-reply-to: <841213160905.0.MOON@EUPHRATES.SCRC.Symbolics.COM>

    Date: Thursday, 13 December 1984, 16:09-EST
    From: David A. Moon <Moon at SCRC-TENEX>

	Date: Monday, 10 December 1984, 15:04-EST
	From: Richard E. Zippel <RZ at MIT-MC>

	In Symbolics 3600 System 242.356, Hardcopy 20.10,
	Experimental Schema 54.0, FEP 24, on GSTAAD:

	...

	My init file then checks to see if vx is a 42 site, and not allows me to
	change it locally, from UNIX to UNIX42.  The problem is that since I had
	previously opened the file as UNIX file, the pathname-hash-table has a
	UNIX pathname in it not a UNIX42 pathname, and all attempts to reference
	the file file  (claims that .../lispm-init.lis is not found).  It would
	be nice if when the system type of a host is changed, the pathname hash
	table were cleared.

    Exactly how are you changing the system type?  When the system type of a host
    is changed, the pathname hash table -is- cleared.  So either there's something
    peculiar about the way you are changing the system type, or my memory of how
    this worked in Release 5.2 is incorrect.

I change the system type by using the namespace-editor.  I couldn't find
anyplace were the changing the system type cleared the pathname hash
table in our sources, but I probably wasn't looking in the right places.
14-Dec-84 16:28:57-EST,1936;000000000001
Received: from MIT-HTVAX by MIT-OZ via Chaosnet; 14 Dec 84 16:05-EST
Received: from HOST30300 by MIT-HTVAX (4.12/4.7) with CHAOS 
	id AA16244; Fri, 14 Dec 84 16:04:19 est
Date: Friday, 14 December 1984, 15:57-EST
From: Soley@MIT-MC
Subject: Dinarte Morais' bug with flavors
To: bug-lispm@MIT-OZ
Cc: soley@MIT-MC, drm@MIT-XX


Yesterday, Dinarte Morais (DRM@MIT-XX) reported a problem with an
send blowing out, referring to some hashing problem in
SYS:RESTART-TRAPPED-CALL (copied in again below).  We have been able to
track this down (we think) to the flavor message handler array growing
as the number of methods grew past 512 (it was around 500, now 535).  We
are "fixing" this by removing some less-than-necessary methods, but

(1) Have you seen this before?
(2) Is someone working on it?
(3) Is there SUPPOSED to be a limit to the number of methods?
(4) Why is this code so crufty?

	-- Richard

----------------------------------------
>>Trap: The SYS:RESTART-TRAPPED-CALL microcode ran into an DBG:INSTANCE-HASH-TABLE-ENTRY that was not a fixnum.
While in the function <<Error printing error message>>
<<Error printing function name>>
   Arg 0: 1
   Arg 1: NIL
   Local 0: 1
   Local 1: NIL

TV:MAKE-WINDOW:  (P.C. = 66)
   Arg 0 (FLAVOR-NAME): ILL:ILL-FRAME
   Rest arg (OPTIONS): NIL

SI:*EVAL:  (P.C. = 370)
   Arg 0 (FORM): (TV:MAKE-WINDOW (QUOTE ILL:ILL-FRAME))

SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 200)
   Rest arg: (:NAME "Lisp Top Level in Lisp Listener 1" :ABORTED-FUNCTION NIL :BEFORE-PROMPT-FUNCTION NIL :READ-FUNCTION NIL :EVAL-FUNCTION NIL ...)

SI:LISP-COMMAND-LOOP:  (P.C. = 115)
   Arg 0 (STREAM): #<LISP-LISTENER Lisp Listener 1 2600000 exposed>
   Rest arg: (:NAME "Lisp Top Level in Lisp Listener 1")

SI:LISP-TOP-LEVEL1:  (P.C. = 22)
   Arg 0 (TERMINAL-IO-initialization): #<LISP-LISTENER Lisp Listener 1 2600000 exposed>

SI:LISP-TOP-LEVEL:  (P.C. = 7)
15-Dec-84 09:54:10-EST,1711;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 15 Dec 84 09:54-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 143260; Thu 13-Dec-84 22:02:44-EST
Date: Thursday, 13 December 1984, 22:00-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: Destructuring-Bind
To: David C. Plummer in disguise <DCP at SCRC-QUABBIN>,
    Charles Hornig <Hornig at SCRC-STONY-BROOK>,
    Charles Rich <RICH at MIT-OZ>, BUG-lispm at MIT-OZ
In-Reply-To: <841213150525.5.NFEP@NEPONSET.SCRC.Symbolics.COM>
Message-ID: <841213220047.3.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Thursday, 13 December 1984, 15:05-EST
    From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>

	Date: Thursday, 13 December 1984, 09:27-EST
	From: Charles Hornig <Hornig at SCRC-STONY-BROOK>

	    Date: Monday, 10 December 1984, 11:18-EST
	    From: Charles Rich <RICH at MIT-OZ>

	    It is nice that this function is now documented.  However,
	    it would be more useful for macro-writing-macro purposes
	    if it would (optionally) check for the right number of args
	    (as does Defmacro).  Right now it just takes nils to extend
	    arglist.
			    -CR

	In the next release, there will be a version of DESTRUCTURING-BIND with
	the same semantics as Common Lisp DEFMACRO.

    The important part: it will be called SCL:DESTRUCTURING-BIND (and the
    Release is numbered 6).  In yet a future release, the Zetalisp version
    will exist for compatibility only, if at all.

...which is OK, since you can avoid all the error checking by pretending
you are running Interlisp and put &OPTIONAL at the front of every list
and &REST IGNORE at the end.
15-Dec-84 09:54:37-EST,2344;000000000001
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 15 Dec 84 09:54-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 143272; Thu 13-Dec-84 22:43:45-EST
Date: Thursday, 13 December 1984, 22:41-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: Mysterious error message
To: DRM at MIT-LIVE-OAK, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 13 Dec 84 16:37-EST from DRM at MIT-LIVE-OAK
Message-ID: <841213224149.6.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Thursday, 13 December 1984, 16:37-EST
    From: <DRM@MIT-LIVE-OAK>

    In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 22, on CHAOS|30300:

    What does this mean?  I was just trying to make a frame.  I'm sure it's
    my bug, but the error message doesn't give me much of a hint as to what
    is wrong.

In Release 5 there are two limits you can come up against.  One is the
number of methods a flavor can have (including inheritence).  This is
somewhere around 504, I think.  This is probably the limit you hit.
This has been fixed for Release 6.  If there is a limit, it is much much
larger.  The other limit is the number of instance variables an instance
can have.  I don't know the value of this limit, if it does happen to be
under 16K.

    >>Trap: The SYS:RESTART-TRAPPED-CALL microcode ran into an DBG:INSTANCE-HASH-TABLE-ENTRY that was not a fixnum.
    While in the function <<Error printing error message>>
    <<Error printing function name>>
       Arg 0: 1
       Arg 1: NIL
       Local 0: 1
       Local 1: NIL

    TV:MAKE-WINDOW:  (P.C. = 66)
       Arg 0 (FLAVOR-NAME): ILL:ILL-FRAME
       Rest arg (OPTIONS): NIL

    SI:*EVAL:  (P.C. = 370)
       Arg 0 (FORM): (TV:MAKE-WINDOW (QUOTE ILL:ILL-FRAME))

    SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 200)
       Rest arg: (:NAME "Lisp Top Level in Lisp Listener 1" :ABORTED-FUNCTION NIL :BEFORE-PROMPT-FUNCTION NIL :READ-FUNCTION NIL :EVAL-FUNCTION NIL ...)

    SI:LISP-COMMAND-LOOP:  (P.C. = 115)
       Arg 0 (STREAM): #<LISP-LISTENER Lisp Listener 1 2600000 exposed>
       Rest arg: (:NAME "Lisp Top Level in Lisp Listener 1")

    SI:LISP-TOP-LEVEL1:  (P.C. = 22)
       Arg 0 (TERMINAL-IO-initialization): #<LISP-LISTENER Lisp Listener 1 2600000 exposed>

    SI:LISP-TOP-LEVEL:  (P.C. = 7)
15-Dec-84 09:54:57-EST,2172;000000000001
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 15 Dec 84 09:54-EST
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 143731; Sat 15-Dec-84 00:18:28-EST
Date: Saturday, 15 December 1984, 00:15-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: Mysterious error message
To: DRM at MIT-LIVE-OAK
cc: BUG-LISPM at MIT-OZ, HOSS at SCRC-TENEX
In-Reply-To: The message of 13 Dec 84 16:37-EST from DRM at MIT-LIVE-OAK
Message-ID: <841215001537.1.MOON@EUPHRATES.SCRC.Symbolics.COM>

    Date: Thursday, 13 December 1984, 16:37-EST
    From: <DRM@MIT-LIVE-OAK>

    In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 22, on CHAOS|30300:

    What does this mean?  I was just trying to make a frame.  I'm sure it's
    my bug, but the error message doesn't give me much of a hint as to what
    is wrong.

    >>Trap: The SYS:RESTART-TRAPPED-CALL microcode ran into an DBG:INSTANCE-HASH-TABLE-ENTRY that was not a fixnum.
    While in the function <<Error printing error message>>
    <<Error printing function name>>
       Arg 0: 1
       Arg 1: NIL
       Local 0: 1
       Local 1: NIL

    TV:MAKE-WINDOW:  (P.C. = 66)
       Arg 0 (FLAVOR-NAME): ILL:ILL-FRAME
       Rest arg (OPTIONS): NIL

It means an internal data structure is garbaged.  The data structure in question is the
one used when a message is sent to an instance to find the method to call, and the
part that is garbled is something that is supposed to be a fixnum, probably the
count of entries, or the hashing mask, at the front of the table.

The debugger doesn't bother knowing how to give a reasonable message, and just prints
what the microcode said, because this situation is never supposed to happen.

This problem could be caused by your virtual memory getting clobbered somehow.  In
this case, though, my best guess would be that this is the known bug in Release 5
(and all earlier releases for the 3600) where making a flavor that handles more than
about 500 messages generates a garbage table.  This is fixed in Release 6.  I
don't know of a workaround for Release 5, other than giving your flavor fewer
methods.
15-Dec-84 14:12:17-EST,3330;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 15 Dec 84 14:12-EST
Date: Saturday, 15 December 1984, 14:10-EST
From: Mark H. Shirley <MHS at MIT-MC>
Subject: Please update Riverside's info on MIT-HTVAX
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10, on Lisp Machine Bing Crosby:

Please, Please.  Could someone tell Riverside that MIT-HTVAX is now
running Unix 4.2.  I'm loosing due to the filename truncation.  (Bing
ended up talking to Riverside because AP6 is down.  Eventually it talked
to Reagan and got the correct information, but only after much confusion
on my part.)

I'll ask this again: does anybody make sure that all of the namespace
servers agree in their information?  Are the servers supposed to do this
and it's not working?  Or is there one person we should tell when a
system changes type (like when we went to 4.2) and who will make sure
that all namespace servers that might be used by lab machines agree
with each other?

>>Error: Error from server: You cannot do database updates from BING-CROSBY.
While in the function NET:UPDATE-OBJECT-PERMANENTLY  (:DEFUN-METHOD TV:PERFORM-COMMAND)  (:METHOD TV:NAMESPACE-EDITOR-FRAME :TOP-LEVEL)

NET:UPDATE-OBJECT-PERMANENTLY:  (P.C. = 141)
   Arg 0 (CLASS): #<CLASS HOST 12276323>
   Arg 1 (NAMESPACE): #<NAMESPACE INTERNET 5700102>
   Arg 2 (NAME): #<NAME INTERNET|MIT-HTVAX 14613644>
   Arg 3 (PROPERTY-LIST): (:SYSTEM-TYPE :UNIX42 :NICKNAME (#<NAME INTERNET|HTVAX 14613630> #<NAME INTERNET|MIT-HT 14613634> #<NAME INTERNET|HT 14613640>) :ADDRESS ((#<INTERNET-NETWORK INTERNET 5700623> "128.52.22.22")) :MACHINE-TYPE :VAX-11//780 :SERVICE ((:LOGIN :TCP :TELNET) (:MAIL-TO-USER :TCP :SMTP) (:SEND :TCP :SMTP) (:EXPAND-MAIL-RECIPIENT :TCP :SMTP) (:FILE :TCP :TCP-FTP)))
   Local 4 (.ME-P.): T
   Local 5 (.CLOSE-MODE.): :ABORT
   Local 6: #<DTP-LOCATIVE 420355>
   Local 7: SYS:UNWIND-PROTECT-TAG
   Local 8: #<DTP-ODD-PC 10705336>
   Local 9: #<DTP-LOCATIVE 420365>
   Local 10: #<DTP-LOCATIVE 43600064>
   Local 11 (.CELL.): #<DTP-LOCATIVE 50712222>
   Local 12 (.LOCK-P.): :LOCKED
   Local 13: SYS:UNWIND-PROTECT-TAG
   Local 14: #<DTP-ODD-PC 10705342>
   Local 15: #<DTP-LOCATIVE 420365>
   Local 16: #<DTP-LOCATIVE 43600133>
   Local 17 (OBJECT): #<UNIX-HOST MIT-HTVAX 12524262>
   Local 18 (STREAM): #<CHARACTER-STREAM 4741571>
   Local 19 (*NAMESPACE-SEARCH-LIST*-initialization): (#<NAMESPACE INTERNET 5700102>)
   Local 20 (RECORD): (("ERROR" "You cannot do database updates from BING-CROSBY."))
   Local 21 (*SELECTQ-ITEM*): "ERROR"

(:DEFUN-METHOD TV:PERFORM-COMMAND):  (P.C. = 446)
   Arg 0 (SELF): #<NAMESPACE-EDITOR-FRAME Namespace Editor 1 640000 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:NAMESPACE-EDITOR-FRAME -- 15. IV's, 12. FL's 56100600>
   Arg 2 (CH): 163

(:METHOD TV:NAMESPACE-EDITOR-FRAME :TOP-LEVEL):  (P.C. = 120)
   Arg 0 (SELF): #<NAMESPACE-EDITOR-FRAME Namespace Editor 1 640000 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:NAMESPACE-EDITOR-FRAME -- 15. IV's, 12. FL's 56100600>
   Arg 2 (OPERATION): :TOP-LEVEL

TV:START-NAMESPACE-EDITOR:  (P.C. = 4)
   Arg 0 (WINDOW): #<NAMESPACE-EDITOR-FRAME Namespace Editor 1 640000 exposed>

SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
   --Defaulted args:--
   Arg 0 (IGNORE): NIL
15-Dec-84 19:15:57-EST,1614;000000000001
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 15 Dec 84 19:15-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 144095; Sat 15-Dec-84 19:18:16-EST
Date: Saturday, 15 December 1984, 19:16-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: Dinarte Morais' bug with flavors
To: Soley at MIT-MC, bug-lispm at MIT-OZ
cc: drm at MIT-XX
In-Reply-To: The message of 14 Dec 84 15:57-EST from Soley at MIT-MC
References: <841213224149.6.NFEP@NEPONSET.SCRC.Symbolics.COM>,
            <841215001537.1.MOON@EUPHRATES.SCRC.Symbolics.COM>
Message-ID: <841215191601.3.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Friday, 14 December 1984, 15:57-EST
    From: Soley@MIT-MC


    Yesterday, Dinarte Morais (DRM@MIT-XX) reported a problem with an
    send blowing out, referring to some hashing problem in
    SYS:RESTART-TRAPPED-CALL (copied in again below).  We have been able to
    track this down (we think) to the flavor message handler array growing
    as the number of methods grew past 512 (it was around 500, now 535).  We
    are "fixing" this by removing some less-than-necessary methods, but

Moon and I answered the message, but the microwave delayed things.  Just
for the record.

    (1) Have you seen this before?
Yes.
    (2) Is someone working on it?
It's already fixed for Release 6.
    (3) Is there SUPPOSED to be a limit to the number of methods?
Not that I know of.
    (4) Why is this code so crufty?
Beats me, batman.  Could be oversight.  It could be that more complex
applications are tickling more bugs.

16-Dec-84 11:23:12-EST,2395;000000000001
Received: from MIT-MC by MIT-OZ via Chaosnet; 16 Dec 84 11:23-EST
Date: Sunday, 16 December 1984, 11:24-EST
From: Gavan Duffy <GAVAN at MIT-OZ>
Subject: UNLESS
To: BUG-LISPM at MIT-OZ

Here is the system definition for UNLESS:

(DEFMACRO UNLESS (TEST &BODY BODY)
  `(COND ((NOT ,TEST) (PROGN ,@BODY))))

Why is the PROGN needed?  This seems to work OK so far as I can tell.

(DEFMACRO UNLESS+ (TEST &BODY BODY)
  `(COND ((NOT ,TEST) ,@BODY)))

The compiler doesn't seem to optimize it.
Here's UNLESS disassembled:

Definition as macro
  0 ENTRY: 1. REQUIRED, 0. OPTIONAL
  1 PUSH-LOCAL FP|0             ;*MACROARG*
  2 CALL-1-STACK #'LENGTH
  3 PUSH-IMMED 2.
  4 BUILTIN INTERNAL-< STACK 
  5 BRANCH-FALSE 13
  6 PUSH-CONSTANT '/"Wrong number of args to a macro:~%~S/"
  7 PUSH-CONSTANT '(SI:TEST &BODY SI:BODY)
 10 PUSH-LOCAL FP|0             ;*MACROARG*
 11 CALL-2-STACK #'LIST
 12 CALL-2-IGNORE #'FERROR
 13 PUSH-LOCAL FP|0             ;*MACROARG*
 14 BUILTIN CDR STACK 
 15 BUILTIN CAR STACK           ;creating TEST(FP|1)
 16 PUSH-LOCAL FP|0             ;*MACROARG*
 17 BUILTIN CDR STACK 
 20 BUILTIN CDR STACK           ;creating BODY(FP|2)
 21 PUSH-CONSTANT 'COND
 22 PUSH-CONSTANT 'NOT
 23 PUSH-LOCAL FP|1             ;TEST
 24 CALL-2-STACK #'LIST
 25 PUSH-CONSTANT 'PROGN
 26 PUSH-LOCAL FP|2             ;BODY
 27 BUILTIN CONS STACK 
 30 CALL-2-STACK #'LIST
 31 CALL-2-RETURN #'LIST

And here's UNLESS+.

Definition as macro
  0 ENTRY: 1. REQUIRED, 0. OPTIONAL
  1 PUSH-LOCAL FP|0             ;*MACROARG*
  2 CALL-1-STACK #'LENGTH
  3 PUSH-IMMED 2.
  4 BUILTIN INTERNAL-< STACK 
  5 BRANCH-FALSE 13
  6 PUSH-CONSTANT '/"Wrong number of args to a macro:~%~S/"
  7 PUSH-CONSTANT '(USER:TEST &BODY USER:BODY)
 10 PUSH-LOCAL FP|0             ;*MACROARG*
 11 CALL-2-STACK #'LIST
 12 CALL-2-IGNORE #'FERROR
 13 PUSH-LOCAL FP|0             ;*MACROARG*
 14 BUILTIN CDR STACK 
 15 BUILTIN CAR STACK           ;creating TEST(FP|1)
 16 PUSH-LOCAL FP|0             ;*MACROARG*
 17 BUILTIN CDR STACK 
 20 BUILTIN CDR STACK           ;creating BODY(FP|2)
 21 PUSH-CONSTANT 'COND
 22 PUSH-CONSTANT 'NOT
 23 PUSH-LOCAL FP|1             ;TEST
 24 CALL-2-STACK #'LIST
 25 PUSH-LOCAL FP|2             ;BODY
 26 BUILTIN CONS STACK 
 27 CALL-2-RETURN #'LIST

27 instructions to 31.  UNLESS+ wins.  Am I missing something, or what?
16-Dec-84 13:08:41-EST,830;000000000001
Received: from MIT-MC by MIT-OZ via Chaosnet; 16 Dec 84 13:08-EST
Date: Sunday, 16 December 1984, 13:09-EST
From: Gavan Duffy <GAVAN at MIT-OZ>
Subject: UNLESS
To: GAVAN at MIT-OZ, BUG-LISPM at MIT-OZ
In-reply-to: The message of 16 Dec 84 11:24-EST from Gavan Duffy <GAVAN at MIT-OZ>

    Date: Sunday, 16 December 1984, 11:24-EST
    From: Gavan Duffy <GAVAN at MIT-OZ>

    Here is the system definition for UNLESS:

    (DEFMACRO UNLESS (TEST &BODY BODY)
      `(COND ((NOT ,TEST) (PROGN ,@BODY))))

    Why is the PROGN needed?  This seems to work OK so far as I can tell.

    (DEFMACRO UNLESS+ (TEST &BODY BODY)
      `(COND ((NOT ,TEST) ,@BODY)))

I see.  The compiler seems to optimize it in the procedure in which the macro
is inserted.  Never mind.

Thanks to Daniel Wiese for pointing this out.
16-Dec-84 18:02:19-EST,1816;000000000001
Received: from MIT-MC by MIT-OZ via Chaosnet; 16 Dec 84 18:02-EST
Date: 16 December 1984 18:03-EST
From: Richard Mark Soley <SOLEY @ MIT-MC>
Subject:  Dinarte Morais' bug with flavors
To: DCP @ SCRC-QUABBIN
cc: drm @ MIT-XX, bug-lispm @ MIT-OZ
In-reply-to: Msg of Sat 15 Dec 84 19:16 EST from David C. Plummer in disguise <DCP at SCRC-QUABBIN.ARPA>

    Date: Sat, 15 Dec 84 19:16 EST
    From: David C. Plummer in disguise <DCP at SCRC-QUABBIN.ARPA>
    To:   Soley at MIT-MC.ARPA, bug-lispm%MIT-OZ at MIT-MC.ARPA
    cc:   drm at MIT-XX.ARPA
    Re:   Dinarte Morais' bug with flavors
    References: <841213224149.6.NFEP@NEPONSET.SCRC.Symbolics.COM>,
                <841215001537.1.MOON@EUPHRATES.SCRC.Symbolics.COM>

        Date: Friday, 14 December 1984, 15:57-EST
        From: Soley@MIT-MC

        Yesterday, Dinarte Morais (DRM@MIT-XX) reported a problem with an
        send blowing out, referring to some hashing problem in
        SYS:RESTART-TRAPPED-CALL (copied in again below).  We have been able to
        track this down (we think) to the flavor message handler array growing
        as the number of methods grew past 512 (it was around 500, now 535).
	We are "fixing" this by removing some less-than-necessary methods, but

    Moon and I answered the message, but the microwave delayed things.  Just
    for the record.

Sorry, I didn't mean to rush you, just supply more information about the bug.

        (1) Have you seen this before?
    Yes.
        (2) Is someone working on it?
    It's already fixed for Release 6.

Relatively useless.  Can you supply a patch for 5.2, or at least point us at
the problem so we can fix it locally?  A 15 minute look through what I
considered the most likely places didn't turn it up, is it ucode?

	-- Richard
17-Dec-84 01:43:41-EST,1386;000000000001
Received: from MIT-LENNON by MIT-OZ via Chaosnet; 17 Dec 84 01:43-EST
Date: Monday, 17 December 1984, 01:42-EST
From: David A. Brown <DAVID at MIT-OZ>
Subject: Cursor position lossage caused by PCL
To: bug-oz at MIT-OZ
Cc: David at MIT-OZ, bug-lispm at MIT-OZ, bug-pcl at MIT-OZ

I've noticed a cursor-position related bug that may be somehow caused by
PCL routines, using a standard Terminal window on a 3600 (MIT-LENNON).
Sometimes the actual cursor position and the position at which Oz thinks
the cursor is become different, so I can be typing a line to the
exec, and as soon as I type rubout or an editing key like ctrl-R, the
cursor moves to some other location on the screen.

I've noticed this always happens when I use any of the PCL routines I
have defined.  No matter how much typeout occurs as the result of these
commands, the Terminal window behaves as if there was NO output.  For
example, I have a pcl routine called L which displays a directory
listing (NDIR with some extra arguments).  I can type L to the exec, and
get a few lines of output.  Then, if I type ctrl-R, the prompt gets
redisplayed on the line below the line where I typed the L command, not
the line where the new prompt was originally displayed (i.e. below the
typeout of the L command.)  This same sort of problem happens with ANY
pcl function I have.  What could cause this?
17-Dec-84 18:12:00-EST,1666;000000000001
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 17 Dec 84 17:59-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 144428; Mon 17-Dec-84 11:21:30-EST
Date: Monday, 17 December 1984, 11:20-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: UNLESS
To: Gavan Duffy <GAVAN at MIT-OZ>, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 16 Dec 84 13:09-EST from Gavan Duffy <GAVAN at MIT-OZ>
Message-ID: <841217112016.1.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Sunday, 16 December 1984, 13:09-EST
    From: Gavan Duffy <GAVAN at MIT-OZ>

	Date: Sunday, 16 December 1984, 11:24-EST
	From: Gavan Duffy <GAVAN at MIT-OZ>

	Here is the system definition for UNLESS:

	(DEFMACRO UNLESS (TEST &BODY BODY)
	  `(COND ((NOT ,TEST) (PROGN ,@BODY))))

	Why is the PROGN needed?  This seems to work OK so far as I can tell.

	(DEFMACRO UNLESS+ (TEST &BODY BODY)
	  `(COND ((NOT ,TEST) ,@BODY)))

    I see.  The compiler seems to optimize it in the procedure in which the macro
    is inserted.  Never mind.

    Thanks to Daniel Wiese for pointing this out.

There's another reason.  Consider the current expansion of
	(UNLESS <some-hairy-expression>)
in the current and in your proposal.  Current
	(COND ((NOT <some-hairy-expression>) (PROGN)))
has a value of NIL always (because there isn't anything in the progn.
Your expansion leads to
	(COND ((NOT <some-hairy-expression>)))
which will return the result of (NOT <some-hairy-expression>) always [by
definition of COND] which can be T or NIL.

Therefore, this isn't an optimization issue, but a preservation of
semantics issue.
17-Dec-84 18:42:54-EST,2441;000000000001
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 17 Dec 84 18:42-EST
Received: from SCRC-EUPHRATES by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 113824; Mon 17-Dec-84 14:11:50-EST
Date: Monday, 17 December 1984, 14:12-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: Dinarte Morais' bug with flavors
To: Richard Mark Soley <SOLEY at MIT-MC>
cc: DCP at SCRC-QUABBIN, drm at MIT-XX, bug-lispm at MIT-OZ
In-Reply-To: The message of 16 Dec 84 18:03-EST from Richard Mark Soley <SOLEY at MIT-MC>
Message-ID: <841217141208.4.MOON@EUPHRATES.SCRC.Symbolics.COM>

    Date: 16 December 1984 18:03-EST
    From: Richard Mark Soley <SOLEY @ MIT-MC>

	Date: Sat, 15 Dec 84 19:16 EST
	From: David C. Plummer in disguise <DCP at SCRC-QUABBIN.ARPA>
	To:   Soley at MIT-MC.ARPA, bug-lispm%MIT-OZ at MIT-MC.ARPA
	cc:   drm at MIT-XX.ARPA
	Re:   Dinarte Morais' bug with flavors
	References: <841213224149.6.NFEP@NEPONSET.SCRC.Symbolics.COM>,
		    <841215001537.1.MOON@EUPHRATES.SCRC.Symbolics.COM>

	    Date: Friday, 14 December 1984, 15:57-EST
	    From: Soley@MIT-MC

	    Yesterday, Dinarte Morais (DRM@MIT-XX) reported a problem with an
	    send blowing out, referring to some hashing problem in
	    SYS:RESTART-TRAPPED-CALL (copied in again below).  We have been able to
	    track this down (we think) to the flavor message handler array growing
	    as the number of methods grew past 512 (it was around 500, now 535).
	    We are "fixing" this by removing some less-than-necessary methods, but

	Moon and I answered the message, but the microwave delayed things.  Just
	for the record.

    Sorry, I didn't mean to rush you, just supply more information about the bug.

	    (1) Have you seen this before?
	Yes.
	    (2) Is someone working on it?
	It's already fixed for Release 6.

    Relatively useless.  Can you supply a patch for 5.2, or at least point us at
    the problem so we can fix it locally?  A 15 minute look through what I
    considered the most likely places didn't turn it up, is it ucode?

The problem was fixed for Release 6 by changing the format of these hash tables
to be less brain-damaged.  I don't think there is an easy way to make a compatible
patch that could be loaded into 5.2, since the format was changed.  My guess is that
this will have to stay a known bug until 6.0 comes out.  I could be wrong, perhaps
someone else can find a clever way to patch it.
17-Dec-84 18:44:17-EST,2053;000000000001
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 17 Dec 84 18:43-EST
Received: from SCRC-EUPHRATES by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 113875; Mon 17-Dec-84 16:01:21-EST
Date: Monday, 17 December 1984, 16:01-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: pathname problems
To: Richard E. Zippel <RZ at MIT-MC>
cc: BUG-LISPM at MIT-OZ
In-Reply-To: The message of 14 Dec 84 15:10-EST from Richard E. Zippel <RZ at MIT-MC>
Message-ID: <841217160141.5.MOON@EUPHRATES.SCRC.Symbolics.COM>

    Date: Friday, 14 December 1984, 15:10-EST
    From: Richard E. Zippel <RZ at MIT-MC>

	Date: Thursday, 13 December 1984, 16:09-EST
	From: David A. Moon <Moon at SCRC-TENEX>

	    Date: Monday, 10 December 1984, 15:04-EST
	    From: Richard E. Zippel <RZ at MIT-MC>

	    In Symbolics 3600 System 242.356, Hardcopy 20.10,
	    Experimental Schema 54.0, FEP 24, on GSTAAD:

	    ...

	    My init file then checks to see if vx is a 42 site, and not allows me to
	    change it locally, from UNIX to UNIX42.  The problem is that since I had
	    previously opened the file as UNIX file, the pathname-hash-table has a
	    UNIX pathname in it not a UNIX42 pathname, and all attempts to reference
	    the file file  (claims that .../lispm-init.lis is not found).  It would
	    be nice if when the system type of a host is changed, the pathname hash
	    table were cleared.

	Exactly how are you changing the system type?  When the system type of a host
	is changed, the pathname hash table -is- cleared.  So either there's something
	peculiar about the way you are changing the system type, or my memory of how
	this worked in Release 5.2 is incorrect.

    I change the system type by using the namespace-editor.  I couldn't find
    anyplace were the changing the system type cleared the pathname hash
    table in our sources, but I probably wasn't looking in the right places.

I apologize.  The feature I mentioned is not present in Release 5.2, only in the
newest system, not yet ready for release.
18-Dec-84 02:58:02-EST,680;000000000001
Received: from MIT-SID by MIT-OZ via Chaosnet; 18 Dec 84 02:57-EST
Date: Tuesday, 18 December 1984, 02:57-EST
From: David M. J. Saslav <saz at MIT-OZ>
Subject: Function-refresh from Lisp Listener
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 22, on Lisp Machine Sid Vicious:

...does a rather peculiar thing.  It leaves the cursor where it is,
and erases all text from the screen.  And unless an immediate 
REFRESH (without the function prefixing) is done, tyi is lost.

Simple Refresh does the right thing (zaps all text, moves current
line to top of screen, along with cursor to top line at same
horizontal position only).

Saz
18-Dec-84 12:21:38-EST,979;000000000001
Received: by MIT-OZ via Chaosnet; 18 Dec 84 12:21-EST
Date: Tuesday, 18 December 1984, 08:04-EST
From: Webster Dove <dove at MIT-BUGS-BUNNY>
Subject: cold load stream errors
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10, Experimental FPA 2.0,
Experimental UTIL 9.0, Experimental IP-TCP 15.3,
microcode TMC5-IO4-FPA-MIC 313, FEP 22, on Lisp Machine Daffy Duck:

We have been having a number of problems that send the machine into the
cold load stream when it has been idle for times ranging from 1 hr to 10
hrs.  The problems range from errors in wait to null instances.  We can
usually resume  the machine by selecting the "arrest offending process"
option in the debugger, and later unarresting the process with peek.

I realize that this is not a detailed description of the problem.  The
next time it happens I will try to send mail from inside the error.
However, I thought to mention it in case it sounded familiar to someone.
19-Dec-84 12:28:30-EST,1298;000000000001
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 19 Dec 84 12:28-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 146502; Wed 19-Dec-84 12:24:22-EST
Date: Wednesday, 19 December 1984, 12:18-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: Function-refresh from Lisp Listener
To: David M. J. Saslav <saz at MIT-OZ>, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 18 Dec 84 02:57-EST from David M. J. Saslav <saz at MIT-OZ>
Message-ID: <841219121839.9.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Tuesday, 18 December 1984, 02:57-EST
    From: David M. J. Saslav <saz at MIT-OZ>

    In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 22, on Lisp Machine Sid Vicious:

    ...does a rather peculiar thing.  It leaves the cursor where it is,
    and erases all text from the screen.  And unless an immediate 
    REFRESH (without the function prefixing) is done, tyi is lost.

"TYI is lost" really means "already typed in text is not redisplayed."
The data is fine.

    Simple Refresh does the right thing (zaps all text, moves current
    line to top of screen, along with cursor to top line at same
    horizontal position only).

This was brought up recently.  I don't remember if there was a
resolution.
19-Dec-84 13:00:04-EST,2705;000000000001
Received: from MIT-GSTAAD by MIT-OZ via Chaosnet; 19 Dec 84 12:59-EST
Date: Wednesday, 19 December 1984, 13:00-EST
From: Richard E. Zippel <RZ at MIT-MC>
Subject: Problem doing si:full-gc
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 24, on GSTAAD:

I did a (si:full-gc :system-release t) in preparation to dumping a band.
I assume the problem is because the type of POINTER was has HOST instead of LISPM-HOST.

Presumably SI:GC-PATHNAMES should be something like: 
(DEFUN GC-PATHNAMES ()
  (SETQ *PATHNAMES-WITH-PROPERTY-LISTS*
	(COPYLIST
	  ;; Do all the logical pathnames first, since otherwise they will
	  ;; put things back in the physical hosts' hash tables.
	  (LOOP FOR HOST IN fs:(APPEND *LOGICAL-PATHNAME-HOST-LIST* *PATHNAME-HOST-LIST*)
		AS HT = (SEND-if-handles HOST :PATHNAME-HASH-TABLE)	;added -if-handles
		when HT							;added line
		NCONC (PROG1 (LOOP FOR P BEING THE HASH-ELEMENTS OF HT
				   WHEN (SEND P :PLIST)
				     COLLECT P)
			     (SEND HT :CLEAR-HASH))))))

>>Error: The object #<HOST POINTER 14632644> received a :PATHNAME-HASH-TABLE message, which went unclaimed.
         The rest of the message was ()
While in the function (:METHOD NET:OBJECT :UNCLAIMED-MESSAGE)  SI:FLAVOR-UNCLAIMED-MESSAGE  SI:INSTANCE-HASH-UNCLAIMED-MESSAGE

(:METHOD NET:OBJECT :UNCLAIMED-MESSAGE):  (P.C. = 31)
   Arg 0 (SELF): #<HOST POINTER 14632644>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NET:OBJECT -- 3. IV's, 1. FL's 52504521>
   Arg 2 (OPERATION): :UNCLAIMED-MESSAGE
   Arg 3 (MESSAGE): :PATHNAME-HASH-TABLE
   Rest arg (ARGS): NIL

SI:FLAVOR-UNCLAIMED-MESSAGE:  (P.C. = 20)
   Arg 0 (SELF): #<HOST POINTER 14632644>
   Arg 1 (IGNORE): NIL
   Rest arg (MESSAGE): (:PATHNAME-HASH-TABLE)

SI:INSTANCE-HASH-UNCLAIMED-MESSAGE:  (P.C. = 35)
   Arg 0 (SELF): #<HOST POINTER 14632644>
   Arg 1 (SELF-MAPPING-TABLE): NIL
   Rest arg (MESSAGE): NIL

SI:GC-PATHNAMES:  (P.C. = 21)

SI:*EVAL:  (P.C. = 370)
   Arg 0 (FORM): (SI:GC-PATHNAMES)

COND:  (P.C. = 23)
   Rest arg (CLAUSES): ((SI:*FULL-GC-FOR-SYSTEM-RELEASE* (SI:GC-PATHNAMES)) (T NIL))

SI:*EVAL:  (P.C. = 421)
   Arg 0 (FORM): (SI:DISPLACED (IF SI:*FULL-GC-FOR-SYSTEM-RELEASE* (SI:GC-PATHNAMES)) (COND (SI:*FULL-GC-FOR-SYSTEM-RELEASE* (SI:GC-PATHNAMES)) (T NIL)))

INITIALIZATIONS:  (P.C. = 42)
   Arg 0 (LIST-NAME): SI:FULL-GC-INITIALIZATION-LIST
   Arg 1 (REDO-FLAG): T
   --Defaulted args:--
   Arg 2 (FLAG): T

Rest of stack:
SI:FULL-GC:  (P.C. = 42)
SI:*EVAL:  (P.C. = 370)
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 200)
SI:LISP-COMMAND-LOOP:  (P.C. = 115)
SI:LISP-TOP-LEVEL1:  (P.C. = 22)
SI:LISP-TOP-LEVEL:  (P.C. = 7)
19-Dec-84 18:55:04-EST,3070;000000000001
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 19 Dec 84 18:54-EST
Received: from SCRC-CUYAHOGA by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 146855; Wed 19-Dec-84 18:55:08-EST
Date: Wednesday, 19 December 1984, 18:54-EST
From: Robert A. Cassels <Cassels at SCRC-TENEX>
Subject: double redoubled
To: DCP at SCRC-QUABBIN, RICKL at MIT-OZ, BUG-LISPM at MIT-OZ
In-Reply-To: <841202214616.3.NFEP@NEPONSET.SCRC.Symbolics.COM>
Message-ID: <841219185449.6.CASSELS@CUYAHOGA.SCRC.Symbolics.COM>

    Date: Sunday, 2 December 1984, 21:46-EST
    From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>

	Date: Sunday, 2 December 1984, 12:57-EST
	From: Richard H. Lathrop <RICKL at MIT-OZ>

	In Symbolics 3600 System 242.356, Hardcopy 20.10, Experimental SLIDE 4.0, on Lisp Machine Robot-4:

	microcode 296

	the fep show status information for this last time:

    You should read the sections of the manual (NETIO page 14, and the FEP
    debugger we mentioned) so you can do some of this yourself.

	FEP Lbus control: Use Uncorrected Data, Ignore Double ECC Error, Task 3 Dismiss
	Sequencer error status:  B-memory-parity-error
	Sequencer miscellaneous status:  TSK-STOP (sequencer stopped), Errhalt-Sync
    That BMEM parity error doesn't look good, and is probably the culprit.

	Macro PC/ (Odd)11135277
	CPC/13371
	->OPC+0/54416  +10/46242
	+1/53703  +11/55465
	+2/42441  +12/43737
	+3/45076  +13/53366
	+4/53736  +14/44043
	+5/53371  +15/43703
	+6/54416  +16/45077
	+7/53703  +17/43736
    
    dbg:decode-micro-pc says the following:
	14416 is the microinstruction (DDIV-Q1 FALSE).
    The above instruction is the one that caused the halt.  Also note that
    is is executed below as well.  You continuing probably causes the parity
    error to be ignored, so you get to run for a little while longer.  I
    don't know why loading your environment makes this more likely to
    happen.  The first experiment Field Service should do is swap the DP
    board and see if the problem goes away.

Has this been done?  With what result?

I looked at the microcode around here and it looks okay.  The BMEM
locations being referenced are B-TEMP-2 and B-TEMP-3, so they're sure to
have some legal value.  It is suspicious that only the double-divide
tickles this.  I won't look further until I hear that another DP
exhibits the same problem.

	13703 is the microinstruction DDIV-Q1.
	2441 is the microinstruction (DDIV-SUB FALSE TRUE 1).
	5076 is the microinstruction (DDIV-SUB FALSE TRUE).
	13736 is the microinstruction (DDIV-SUB FALSE).
	13371 is the microinstruction DDIV-SUB.
	14416 is the microinstruction (DDIV-Q1 FALSE).
	13703 is the microinstruction DDIV-Q1.
	15465 is the microinstruction (DDIV-ADD TRUE FALSE).
	3737 is the microinstruction (DDIV-ADD TRUE).
	13366 is the microinstruction DDIV-ADD.
	4043 is the microinstruction (DDIV-Q0 TRUE).
	3703 is the microinstruction DDIV-Q0.
	5077 is the microinstruction (DDIV-SUB TRUE TRUE).
	3736 is the microinstruction (DDIV-SUB TRUE).
20-Dec-84 17:17:52-EST,6514;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 20 Dec 84 17:17-EST
Date: Thursday, 20 December 1984, 16:56-EST
From: Webster Dove <dove at MIT-BUGS-BUNNY>
Subject: cold load stream error
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10, Experimental FPA 2.0,
Experimental UTIL 9.0, Experimental IP-TCP 15.3,
microcode TMC5-IO4-FPA-MIC 313, FEP 22, on Lisp Machine Daffy Duck:

Here is an example of the (~1/day) scheduler errors we get on our 3670.
Does this look familiar?  I was just editing when it happened (seemingly
between keyclicks).

>>Trap: The word #<DTP-HEADER-P 746315> was read from location 12134505 (in WORKING-STORAGE-AREA).
While in the function SI:PROCESS-SCHEDULER

SI:PROCESS-SCHEDULER:  (P.C. = 270)
   Local 0 (DEBUG-IO-initialization): #<DTP-CLOSURE 17200032>
   Local 1 (*INTERACTIVE-HANDLERS*-initialization): (DBG:SCHEDULER-DEBUGGER-HANDLER)
   Local 2 (REMAINING-QUANTUM): 0.
   Local 3 (NEXT-PROCESS): NIL
   Local 4 (OLD-CURRENT-PROCESS): NIL
   Local 5 (THIS-TIME): 12969878.
   Local 6 (LAST-TIME): 12969878.
   Local 7 (DELTA-TIME): 0.
   Local 8 (NEXT-WHO-TIME): 36.
   Local 9 (SG): ((#<SIMPLE-PROCESS Chaos background 12134663> #<DTP-COMPILED-FUNCTION (:INTERNAL CHAOS:CHAOS-BACKGROUND 0.) 10733427> NIL 10. NIL NIL NIL NIL NIL) (#<SIMPLE-PROCESS 3600 Ethernet Receiver 2752245> #<DTP-COMPILED-FUNCTION (:INTERNAL (:METHOD NETI:3600-ETHERNET-INTERFACE :TOP-LEVEL) 0.) 10343453> (#<DTP-LOCATIVE 2752241>) 10. NIL NIL NIL NIL #<DTP-LOCATIVE 2752241>) (#<SIMPLE-PROCESS TCP background 23122625> #<DTP-COMPILED-FUNCTION (:INTERNAL TCP:TCP-BACKGROUND 0.) 1313334> NIL 8. NIL NIL NIL NIL NIL) (#<PROCESS Terminal 2 Typeout 33137606> #<DTP-COMPILED-FUNCTION CAR 10570343> (#<DTP-LOCATIVE 641226>) 0. NIL NIL NIL NIL #<DTP-LOCATIVE 641226>) (#<PROCESS Terminal 2 Typein 33143610> #<DTP-COMPILED-FUNCTION (:INTERNAL TV:KBD-IO-BUFFER-GET 0.) 11567420> (#<IO-BUFFER 33136671: empty, State: NIL>) 0. NIL NIL NIL NIL #<IO-BUFFER 33136671: empty, State: NIL>) (#<PROCESS Notify 12137027> #<DTP-COMPILED-FUNCTION (:INTERNAL TV:KBD-IO-BUFFER-GET 0.) 11567420> (#<IO-BUFFER 23423445: empty, State: NIL>) 0. NIL NIL NIL NIL #<IO-BUFFER 23423445: empty, State: NIL>) (#<PROCESS Fsmaint Frame 1 12134315> #<DTP-COMPILED-FUNCTION (:INTERNAL TV:KBD-IO-BUFFER-GET 0.) 11567420> (#<IO-BUFFER 12716774: empty, State: NIL>) 0. NIL NIL NIL NIL #<IO-BUFFER 12716774: empty, State: NIL>) (#<PROCESS Terminal 1 Typeout 23406027> #<DTP-COMPILED-FUNCTION CAR 10570343> (#<DTP-LOCATIVE 640613>) 0. NIL NIL NIL NIL #<DTP-LOCATIVE 640613>) (#<PROCESS Terminal 1 Typein 23412031> #<DTP-COMPILED-FUNCTION (:INTERNAL TV:KBD-IO-BUFFER-GET 0.) 11567420> (#<IO-BUFFER 23405112: empty, State: NIL>) 0. NIL NIL NIL NIL #<IO-BUFFER 23405112: empty, State: NIL>) (#<COROUTINING-PROCESS ZMACS-WINDOWS 12134371> #<DTP-COMPILED-FUNCTION (:INTERNAL TV:KBD-IO-BUFFER-GET 0.) 11567420> (#<IO-BUFFER 13161567: empty, State: NIL>) 0. NIL NIL NIL NIL #<IO-BUFFER 13161567: empty, State: NIL>) ...)
   Local 10 (START-TIME): NIL
   Local 11 (START-DISK-TIME): ((#<PROCESS Mouse 12134505> #<DTP-COMPILED-FUNCTION (:INTERNAL TV:MOUSE-INPUT 0.) 10733402> NIL 30. NIL NIL NIL NIL NIL) (#<PROCESS Keyboard 12134533> #<DTP-COMPILED-FUNCTION (:INTERNAL TV:KBD-PROCESS-MAIN-LOOP 0.) 10344102> NIL 30. NIL NIL NIL NIL NIL) (#<SIMPLE-PROCESS Chaos background 12134663> #<DTP-COMPILED-FUNCTION (:INTERNAL CHAOS:CHAOS-BACKGROUND 0.) 10733427> NIL 10. NIL NIL NIL NIL NIL) (#<SIMPLE-PROCESS 3600 Ethernet Receiver 2752245> #<DTP-COMPILED-FUNCTION (:INTERNAL (:METHOD NETI:3600-ETHERNET-INTERFACE :TOP-LEVEL) 0.) 10343453> (#<DTP-LOCATIVE 2752241>) 10. NIL NIL NIL NIL #<DTP-LOCATIVE 2752241>) (#<SIMPLE-PROCESS TCP background 23122625> #<DTP-COMPILED-FUNCTION (:INTERNAL TCP:TCP-BACKGROUND 0.) 1313334> NIL 8. NIL NIL NIL NIL NIL) (#<PROCESS Terminal 2 Typeout 33137606> #<DTP-COMPILED-FUNCTION CAR 10570343> (#<DTP-LOCATIVE 641226>) 0. NIL NIL NIL NIL #<DTP-LOCATIVE 641226>) (#<PROCESS Terminal 2 Typein 33143610> #<DTP-COMPILED-FUNCTION (:INTERNAL TV:KBD-IO-BUFFER-GET 0.) 11567420> (#<IO-BUFFER 33136671: empty, State: NIL>) 0. NIL NIL NIL NIL #<IO-BUFFER 33136671: empty, State: NIL>) (#<PROCESS Notify 12137027> #<DTP-COMPILED-FUNCTION (:INTERNAL TV:KBD-IO-BUFFER-GET 0.) 11567420> (#<IO-BUFFER 23423445: empty, State: NIL>) 0. NIL NIL NIL NIL #<IO-BUFFER 23423445: empty, State: NIL>) (#<PROCESS Fsmaint Frame 1 12134315> #<DTP-COMPILED-FUNCTION (:INTERNAL TV:KBD-IO-BUFFER-GET 0.) 11567420> (#<IO-BUFFER 12716774: empty, State: NIL>) 0. NIL NIL NIL NIL #<IO-BUFFER 12716774: empty, State: NIL>) (#<PROCESS Terminal 1 Typeout 23406027> #<DTP-COMPILED-FUNCTION CAR 10570343> (#<DTP-LOCATIVE 640613>) 0. NIL NIL NIL NIL #<DTP-LOCATIVE 640613>) ...)
   Local 12 (START-PAGE-FAULTS): 30.
   Local 13 (PS): ((#<PROCESS Mouse 12134505> #<DTP-COMPILED-FUNCTION (:INTERNAL TV:MOUSE-INPUT 0.) 10733402> NIL 30. NIL NIL NIL NIL NIL) (#<PROCESS Keyboard 12134533> #<DTP-COMPILED-FUNCTION (:INTERNAL TV:KBD-PROCESS-MAIN-LOOP 0.) 10344102> NIL 30. NIL NIL NIL NIL NIL) (#<SIMPLE-PROCESS Chaos background 12134663> #<DTP-COMPILED-FUNCTION (:INTERNAL CHAOS:CHAOS-BACKGROUND 0.) 10733427> NIL 10. NIL NIL NIL NIL NIL) (#<SIMPLE-PROCESS 3600 Ethernet Receiver 2752245> #<DTP-COMPILED-FUNCTION (:INTERNAL (:METHOD NETI:3600-ETHERNET-INTERFACE :TOP-LEVEL) 0.) 10343453> (#<DTP-LOCATIVE 2752241>) 10. NIL NIL NIL NIL #<DTP-LOCATIVE 2752241>) (#<SIMPLE-PROCESS TCP background 23122625> #<DTP-COMPILED-FUNCTION (:INTERNAL TCP:TCP-BACKGROUND 0.) 1313334> NIL 8. NIL NIL NIL NIL NIL) (#<PROCESS Terminal 2 Typeout 33137606> #<DTP-COMPILED-FUNCTION CAR 10570343> (#<DTP-LOCATIVE 641226>) 0. NIL NIL NIL NIL #<DTP-LOCATIVE 641226>) (#<PROCESS Terminal 2 Typein 33143610> #<DTP-COMPILED-FUNCTION (:INTERNAL TV:KBD-IO-BUFFER-GET 0.) 11567420> (#<IO-BUFFER 33136671: empty, State: NIL>) 0. NIL NIL NIL NIL #<IO-BUFFER 33136671: empty, State: NIL>) (#<PROCESS Notify 12137027> #<DTP-COMPILED-FUNCTION (:INTERNAL TV:KBD-IO-BUFFER-GET 0.) 11567420> (#<IO-BUFFER 23423445: empty, State: NIL>) 0. NIL NIL NIL NIL #<IO-BUFFER 23423445: empty, State: NIL>) (#<PROCESS Fsmaint Frame 1 12134315> #<DTP-COMPILED-FUNCTION (:INTERNAL TV:KBD-IO-BUFFER-GET 0.) 11567420> (#<IO-BUFFER 12716774: empty, State: NIL>) 0. NIL NIL NIL NIL #<IO-BUFFER 12716774: empty, State: NIL>) (#<PROCESS Terminal 1 Typeout 23406027> #<DTP-COMPILED-FUNCTION CAR 10570343> (#<DTP-LOCATIVE 640613>) 0. NIL NIL NIL NIL #<DTP-LOCATIVE 640613>) ...)
20-Dec-84 19:04:46-EST,1971;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 20 Dec 84 19:04-EST
Date: Thu, 20 Dec 84 19:04 EST
From: "Kent M. Pitman" <KMP@MIT-MC.ARPA>
Subject: Host colon problems in FS:ADD/SET-LOGICAL-PATHNAME-HOST
To: BUG-LISPM@MIT-MC.ARPA

In Symbolics 3600 System 242.356 ... on Lisp Machine Jimi Hendrix:

I got an error evaluating the following form:
  (fs:add-logical-pathname-host "KMP" "OZ"
     '(("SELF"   "PS:<KMP>")))
The equivalent thing happens for the analagous use of FS:SET-LOGICAL-PATHNAME-HOST,
which I guess is preferred in Rel5 (as I guess is obvious from the backtrace).
The following form, on the other hand, works fine:
  (fs:add-logical-pathname-host "KMP" "OZ"
     '(("SELF"   "OZ:PS:<KMP>")))

It should not be looking for a a host in the translations. All the examples in the
documentation show it not needing the host, and it's silly to have to redundantly
specify a host since you've already had to specify it with the PHYSICAL-HOST argument.
-kmp

>>Error: "PS" is not a known file server host.
While in the function FS:GET-PATHNAME-HOST  FS:PARSE-PATHNAME-FIND-COLON  FS:PARSE-PATHNAME

FS:GET-PATHNAME-HOST:  (P.C. = 56)
   Arg 0 (HOST-NAME): "PS"
   --Defaulted args:--
   Arg 1 (NO-ERROR-P): NIL
   Arg 2 (NO-AUTO-ADD-P): NIL
   Local 3 (HOST): NIL

FS:PARSE-PATHNAME-FIND-COLON:  (P.C. = 31)
   Arg 0 (STRING): "PS:<KMP>"

FS:PARSE-PATHNAME:  (P.C. = 245)
   Arg 0 (THING): "PS:<KMP>"
   Arg 1 (WITH-RESPECT-TO): NIL
   Arg 2 (DEFAULTS): #<TOPS20-PATHNAME "OZ:*.*.*">

FS:SET-LOGICAL-PATHNAME-HOST:  (P.C. = 356)
   Arg 0 (LOGICAL-HOST): "KMP"
   Rest arg: (:PHYSICAL-HOST "OZ" :TRANSLATIONS (("SELF" "PS:<KMP>")))

FS:ADD-LOGICAL-PATHNAME-HOST:  (P.C. = 10)
   Arg 0 (LOGICAL-HOST): "KMP"
   Arg 1 (PHYSICAL-HOST): "OZ"
   Arg 2 (TRANSLATIONS): (("SELF" "PS:<KMP>"))

SI:*EVAL:  (P.C. = 370)
   Arg 0 (FORM): (FS:ADD-LOGICAL-PATHNAME-HOST "KMP" "OZ" (QUOTE (("SELF" "PS:<KMP>"))))

...etc.
20-Dec-84 20:18:50-EST,1791;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 20 Dec 84 20:18-EST
Date: Thu, 20 Dec 84 19:31 EST
From:  <kmp@MIT-MC.ARPA>
Subject: Unclaimed :CLOSE-ALL-FILES message to #<HOST POINTER 14632625>
To: BUG-LISPM@MIT-MC.ARPA

In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 22, on Lisp Machine Jimi Hendrix:

I had a file open and went into a breakpoint, from which I did (LOGOUT).
As it happened, PACKAGE was bound to the keyword package and it told me
:LOGOUT was an undefined function. I think the debugger should watch for that.

Then I typed c-Abort and the file got closed (I assume, since it disappeared
from the wholine). Then, just to make sure everything was closed -- even though
I thought it already was, I typed (FS:CLOSE-ALL-FILES). Oddly, I got an error.
-kmp

>>Error: The object #<HOST POINTER 14632625> received a :CLOSE-ALL-FILES message, which went unclaimed.
         The rest of the message was ()
While in the function (:METHOD NET:OBJECT :UNCLAIMED-MESSAGE)  SI:FLAVOR-UNCLAIMED-MESSAGE  SI:INSTANCE-HASH-UNCLAIMED-MESSAGE

(:METHOD NET:OBJECT :UNCLAIMED-MESSAGE):  (P.C. = 31)
   Arg 0 (SELF): #<HOST POINTER 14632625>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NET:OBJECT -- 3. IV's, 1. FL's 52504521>
   Arg 2 (OPERATION): :UNCLAIMED-MESSAGE
   Arg 3 (MESSAGE): :CLOSE-ALL-FILES
   Rest arg (ARGS): NIL

SI:FLAVOR-UNCLAIMED-MESSAGE:  (P.C. = 20)
   Arg 0 (SELF): #<HOST POINTER 14632625>
   Arg 1 (IGNORE): NIL
   Rest arg (MESSAGE): (:CLOSE-ALL-FILES)

SI:INSTANCE-HASH-UNCLAIMED-MESSAGE:  (P.C. = 35)
   Arg 0 (SELF): #<HOST POINTER 14632625>
   Arg 1 (SELF-MAPPING-TABLE): NIL
   Rest arg (MESSAGE): NIL

FS:CLOSE-ALL-FILES:  (P.C. = 25)

SI:*EVAL:  (P.C. = 370)
   Arg 0 (FORM): (FS:CLOSE-ALL-FILES)

...etc.
20-Dec-84 20:26:32-EST,2195;000000000000
Received: from MIT-FRANK-SINATRA by MIT-OZ via Chaosnet; 20 Dec 84 20:26-EST
Date: Thursday, 20 December 1984, 20:26-EST
From:  <KMP at MIT-OZ>
Subject: (:COMPILE-LOAD-INIT name () ...)
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 18, on Lisp Machine Frank Sinatra:

A :COMPILE-LOAD-INIT form should be allowed to have null dependencies.
Right now, one cannot write:

    (:COMPILE-LOAD-INIT FOO ()  (:fasload ...) (:fasload ...))
 or (:COMPILE-LOAD-INIT FOO NIL (:fasload ...) (:fasload ...)) 

Instead, one must write

 (:COMPILE-LOAD FOO (:fasload ...) (:fasload ...))

The problem comes that it thinks the former case specifies dependency
on a single module named NIL. I think anyone who wants that should have
to write

 (:COMPILE-LOAD-INIT FOO (NIL) (:fasload ...) (:fasload ...))

I've included a partial backtrace in case it's useful. -kmp

>>Error: Module NIL not found in #<SYSTEM Programmer's Apprentice 5214202>
While in the function SI:FIND-MODULE-NAMED  SI:PARSE-MODULE-COMPONENTS  (:PROPERTY :COMPILE-LOAD-INIT SI:DEFSYSTEM-MACRO)

SI:FIND-MODULE-NAMED:  (P.C. = 37)
   Arg 0 (NAME): NIL
   Arg 1 (SYSTEM): #<SYSTEM Programmer's Apprentice 5214202>
   --Defaulted args:--
   Arg 2 (NO-ERROR-P): NIL

SI:PARSE-MODULE-COMPONENTS:  (P.C. = 20)
   Arg 0 (COMPONENTS): NIL
   Arg 1 (SYSTEM): #<SYSTEM Programmer's Apprentice 5214202>

(:PROPERTY :COMPILE-LOAD-INIT SI:DEFSYSTEM-MACRO):  (P.C. = 65)
   Arg 0 (*MACROARG*): (:COMPILE-LOAD-INIT MACRO NIL (:FASLOAD LETS BASE) (:FASLOAD BASE))

SI:CALL-DEFSYSTEM-MACRO:  (P.C. = 23)
   Arg 0 (FORM): (:COMPILE-LOAD-INIT MACRO NIL (:FASLOAD LETS BASE) (:FASLOAD BASE))

SI:DEFSYSTEM-1:  (P.C. = 51)
   Arg 0 (NAME): PA
   Arg 1 (OPTIONS): ((:NAME "Programmer's Apprentice") (:SHORT-NAME "PA") (:PATHNAME-DEFAULT "PA: SOURCE;") (:PATCHABLE "PA: PATCH;" "PA") (:MODULE LETS "PA: LMLIB;  LETS") (:MODULE GPRINT "PA: LMLIB;  GPRINT") (:MODULE BASE ("BASIC" "NOISE" "SETS" "CONDITIONS" "ENGLISH" "SYSTEM-MAGIC" "FLAVOR-MAGIC")) (:MODULE MACRO ("MACRO")) (:MODULE KVARS "KVARS") (:MODULE KMAC "KMAC") ...)
   --Defaulted args:--
   Arg 2 (ADD-P): T

...etc.
20-Dec-84 21:09:59-EST,1019;000000000001
Received: from MIT-MC by MIT-OZ via Chaosnet; 20 Dec 84 21:09-EST
Date: 20 Dec 1984  21:09 EST (Thu)
Message-ID: <RPK.12073065426.BABYL@MIT-OZ>
From: "Robert P. Krajewski" <RPK%MIT-OZ@MIT-MC.ARPA>
To:   "Kent M. Pitman" <KMP@MIT-MC.ARPA>
Cc:   BUG-LISPM@MIT-MC.ARPA
Subject: Host colon problems in FS:ADD/SET-LOGICAL-PATHNAME-HOST
In-reply-to: Msg of 20 Dec 1984  19:04-EST from Kent M. Pitman <KMP at MIT-MC.ARPA>

This is amusing because a recent change to the MIT system would have
precisely the opposite results: mentioning the host in such a form in the
translations argument would cause an error (device occurs twice), while the
form KMP wanted to use would work.

Isn't something like ":PS:<KMP>" actually the safest thing to use in this
situation ?  (Not a rhetorical question.)

FS:ADD-LOGICAL-PATHNAME-HOST isn't really preferred for what you seem to be
using it; SET-LOGICAL-PATHNAME host is meant for use by large applications
because it ensures that the latest translations get loaded.
20-Dec-84 21:18:41-EST,1528;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 20 Dec 84 21:18-EST
Received: from MIT-FRANK-SINATRA by MIT-OZ via Chaosnet; 20 Dec 84 20:53-EST
Date: Thu, 20 Dec 84 20:55 EST
From:  <KMP%MIT-OZ@SCRC-STONY-BROOK.ARPA>
Subject: Losing OZ logical device names
To: BUG-LISPM@MIT-MC.ARPA

In Symbolics 3600 System 242.356, ... on Lisp Machine Frank Sinatra:

I just got a pile of compiler warnings like the following:

  Warning (not associated with any definition)
    Source file truename OZ:OZ:<PA.SOURCE>CONDITIONS.LISP.17 cannot 
    be translated to logical host PA -- QFASL-SOURCE-FILE-UNIQUE-ID will be omitted.

They resulted from having translated "PA: SOURCE;" to "OZ:PS:<PA.SOURCE>" because
the truename of any file that gets opened under that name ends up being
"OZ:OZ:<PA.SOURCE>".

The problem is that what Twenex normally calls PS: is called OZ: on OZ.
Similarly, what used to be called SRC: has been renamed KANSAS: on OZ.
To satisfy people like me, PS: is an alias for OZ: and SRC: is an alias
for KANSAS: ... This means I can write OZ:PS: instead of OZ:OZ: in a lot
of places. Unfortunately, this sometimes causes problems, as with 
back-translation in logical devices.

Couldn't the LispM detect that PS: is the same as OZ: somehow? It's a
system-wide translation. If #<TOPS20-HOST OZ ...> could just maintain an
association list of (("PS" "OZ") ("SRC" "KANSAS") ...), presumably
back-translation could win. Is it possible for it to get that data from
the remote host somehow?
-kmp
20-Dec-84 22:04:48-EST,659;000000000000
Received: from MIT-FRANK-SINATRA by MIT-OZ via Chaosnet; 20 Dec 84 22:04-EST
Date: Thursday, 20 December 1984, 22:06-EST
From:  <KMP at MIT-OZ>
Subject: c-X c-S in a *Compiler-Warnings-N* buffer
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 System 242.356, ... on Lisp Machine Frank Sinatra:

Having done m-X Compiler Warnings, the file defaults offered
by c-X c-S in a *Compiler-Warnings-N* buffer are the filename
of the file I was just visiting. This seems a bit unsafe to me,
since if I didn't look, I'd have gotten something I definitely
didn't want. What's wrong with COMPILER-WARNINGS.TEXT on the
default host/device/dir as a default?
-kmp
21-Dec-84 11:22:23-EST,3514;000000000000
Received: from MIT-HTVAX by MIT-OZ via Chaosnet; 21 Dec 84 11:22-EST
Received: from MIT-CHERRY by MIT-HTVAX (4.12/4.7) with CHAOS 
	id AA14631; Fri, 21 Dec 84 11:24:03 est
Date: Friday, 21 December 1984, 11:22-EST
From: Dinarte R. Morais <DRM@MIT-XX>
Subject: Bug with Namespace Services
To: BUG-LISPM@MIT-OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 22, on CHAOS|30300:

This is VERY annoying.  I believe someone else already reported that
(fs:close-all-files) wouldn't work because this host doesn't handle
the :close-all-files message.  So, what happened to POINTER that made it
become a HOST instead of a LISPM-HOST?

The following happened after selecting PEEK and typing F for
File-System.

-- Dinarte R. Morais

>>Error: The object #<HOST POINTER 14632657> received a :PEEK-FILE-SYSTEM-P message, which went unclaimed.
         The rest of the message was ()
While in the function (:METHOD NET:OBJECT :UNCLAIMED-MESSAGE)  SI:FLAVOR-UNCLAIMED-MESSAGE  SI:INSTANCE-HASH-UNCLAIMED-MESSAGE

(:METHOD NET:OBJECT :UNCLAIMED-MESSAGE):  (P.C. = 31)
   Arg 0 (SELF): #<HOST POINTER 14632657>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NET:OBJECT -- 3. IV's, 1. FL's 52504521>
   Arg 2 (OPERATION): :UNCLAIMED-MESSAGE
   Arg 3 (MESSAGE): :PEEK-FILE-SYSTEM-P
   Rest arg (ARGS): NIL

SI:FLAVOR-UNCLAIMED-MESSAGE:  (P.C. = 20)
   Arg 0 (SELF): #<HOST POINTER 14632657>
   Arg 1 (IGNORE): NIL
   Rest arg (MESSAGE): (:PEEK-FILE-SYSTEM-P)

SI:INSTANCE-HASH-UNCLAIMED-MESSAGE:  (P.C. = 35)
   Arg 0 (SELF): #<HOST POINTER 14632657>
   Arg 1 (SELF-MAPPING-TABLE): NIL
   Rest arg (MESSAGE): NIL

(:INTERNAL TV:PEEK-FILE-SYSTEM 0):  (P.C. = 17)

TV:SCROLL-MAINTAIN-LIST-UPDATE-FUNCTION:  (P.C. = 12)
   Arg 0 (ITEM): ((:PRE-PROCESS-FUNCTION TV:SCROLL-MAINTAIN-LIST-UPDATE-FUNCTION :FUNCTION NIL :INIT-FUNCTION #<DTP-COMPILED-FUNCTION (:INTERNAL TV:PEEK-FILE-SYSTEM 0) 64055676> :INIT-ARGS NIL :ITEM-FUNCTION #<DTP-COMPILED-FUNCTION (:INTERNAL TV:PEEK-FILE
-SYSTEM 1) 64055662> ...))

(:DEFUN-METHOD TV:SCROLL-REDISPLAY-ITEM-LOOP):  (P.C. = 50)
   Arg 0 (SELF): #<PEEK-PANE Peek Pane 1 2643736 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:BASIC-SCROLL-WINDOW -- 8. IV's, 0. FL's 53633756>
   Arg 2 (ITEM): ((:PRE-PROCESS-FUNCTION TV:SCROLL-MAINTAIN-LIST-UPDATE-FUNCTION :FUNCTION NIL :INIT-FUNCTION #<DTP-COMPILED-FUNCTION (:INTERNAL TV:PEEK-FILE-SYSTEM 0) 64055676> :INIT-ARGS NIL :ITEM-FUNCTION #<DTP-COMPILED-FUNCTION (:INTERNAL TV:PEEK-FILE
-SYSTEM 1) 64055662> ...))
   Arg 3 (CURRENT-COUNT): 0
   Arg 4 (FUNCTION): #<DTP-COMPILED-FUNCTION TV:SCROLL-REDISPLAY-DISPLAY-ITEM 11366404>
   Arg 5 (NO-RECOMP): NIL
   Rest arg (POSITION): (0)

(:DEFUN-METHOD TV:SCROLL-REDISPLAY):  (P.C. = 71)
   Arg 0 (SELF): #<PEEK-PANE Peek Pane 1 2643736 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:BASIC-SCROLL-WINDOW -- 8. IV's, 0. FL's 53633756>
   Arg 2 (FULL-REDISPLAY): T

(:METHOD TV:BASIC-SCROLL-WINDOW :REDISPLAY):  (P.C. = 14)
   Arg 0 (SELF): #<PEEK-PANE Peek Pane 1 2643736 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:BASIC-SCROLL-WINDOW -- 8. IV's, 0. FL's 53633756>
   Arg 2 (OPERATION): :REDISPLAY
   Arg 3 (FULL-P): T
   Arg 4 (FORCE-P): :FORCE

Rest of stack:
(:METHOD TV:PEEK-PANE :COMBINED :REDISPLAY):  (P.C. = 16)
(:METHOD TV:BASIC-SCROLL-WINDOW :SET-DISPLAY-ITEM):  (P.C. = 14)
TV:PEEK-SET-MODE:  (P.C. = 103)
TV:PEEK-TOP-LEVEL:  (P.C. = 247)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
21-Dec-84 12:09:11-EST,1096;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 21 Dec 84 12:09-EST
Date: Fri, 21 Dec 84 12:08 EST
From: "Mark H. Shirley" <MHS@MIT-MC.ARPA>
To: BUG-LISPM@MIT-MC.ARPA

In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 24, on Lisp Machine Keith Moon:

Here's a bug in Zmacs line breaking.

(1) Create a buffer and put it in text mode and auto fill mode.

(2) Set the fill column to something relatively small (say 30) so
    you don't have to do too much typing.

(3) Type a tab (I've got zwei:*indent-with-tabs* set to NIL) and then
    COM-SET-FILL-PREFIX (setting the prefix to 8 spaces).

(4) Type ". random" (the problem seems to involve inserting text before punctuation)

(5) Move the point to just before the period (like you were inserting text at the end of
    the previous sentence.

(6) Type "Four score and seven years ago"

Here's what the buffer looks like after I do this.  Notice that "years" and "ago" are
reversed.  Line breaking leaves the point at the wrong place.

-*- Mode: Text -*-

        Four score and seven
        ago years . random
21-Dec-84 14:23:37-EST,2091;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 21 Dec 84 14:23-EST
Received: from SCRC-NEPONSET by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 115848; Fri 21-Dec-84 14:23:15-EST
Date: Fri, 21 Dec 84 14:22 EST
From: "David C. Plummer in disguise" <DCP@SCRC-QUABBIN.ARPA>
Subject: Losing OZ logical device names
To: KMP%MIT-OZ@MIT-MC.ARPA, BUG-LISPM@MIT-MC.ARPA
In-Reply-To: The message of 20 Dec 84 20:55-EST from KMP at MIT-OZ
Message-ID: <841221142229.5.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Thu, 20 Dec 84 20:55 EST
    From:  <KMP%MIT-OZ@SCRC-STONY-BROOK.ARPA>

    In Symbolics 3600 System 242.356, ... on Lisp Machine Frank Sinatra:

    I just got a pile of compiler warnings like the following:

      Warning (not associated with any definition)
	Source file truename OZ:OZ:<PA.SOURCE>CONDITIONS.LISP.17 cannot 
	be translated to logical host PA -- QFASL-SOURCE-FILE-UNIQUE-ID will be omitted.

    They resulted from having translated "PA: SOURCE;" to "OZ:PS:<PA.SOURCE>" because
    the truename of any file that gets opened under that name ends up being
    "OZ:OZ:<PA.SOURCE>".

    The problem is that what Twenex normally calls PS: is called OZ: on OZ.
    Similarly, what used to be called SRC: has been renamed KANSAS: on OZ.
    To satisfy people like me, PS: is an alias for OZ: and SRC: is an alias
    for KANSAS: ... This means I can write OZ:PS: instead of OZ:OZ: in a lot
    of places. Unfortunately, this sometimes causes problems, as with 
    back-translation in logical devices.

    Couldn't the LispM detect that PS: is the same as OZ: somehow? It's a
    system-wide translation. If #<TOPS20-HOST OZ ...> could just maintain an
    association list of (("PS" "OZ") ("SRC" "KANSAS") ...), presumably
    back-translation could win. Is it possible for it to get that data from
    the remote host somehow?

This problem is starting to strike home!  We renamed a lot of
directories for various reasons and the links are creating the same
truename/expected-name problems.  I don't know what the current state of
it is.
21-Dec-84 14:28:32-EST,2631;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 21 Dec 84 14:28-EST
Received: from SCRC-THAMES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 147691; Fri 21-Dec-84 10:52:13-EST
Date: Fri, 21 Dec 84 10:51 EST
From: Scott McKay <SWM@SCRC-QUABBIN.ARPA>
Subject: Unclaimed :CLOSE-ALL-FILES message to #<HOST POINTER 14632625>
To: kmp@MIT-MC.ARPA, BUG-LISPM@MIT-MC.ARPA
cc: Hornig@SCRC-QUABBIN.ARPA
In-Reply-To: The message of 20 Dec 84 19:31-EST from kmp at MIT-MC
Message-ID: <841221105119.4.SWM@THAMES.SCRC.Symbolics.COM>

    Date: Thu, 20 Dec 84 19:31 EST
    From:  <kmp@MIT-MC.ARPA>

    In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 22, on Lisp Machine Jimi Hendrix:

    I had a file open and went into a breakpoint, from which I did (LOGOUT).
    As it happened, PACKAGE was bound to the keyword package and it told me
    :LOGOUT was an undefined function. I think the debugger should watch for that.

This has all been fixed by a more general mechanism in Rel 6.  (For real
fun, evaluate (APROPOS "A"), wait for a **more** break, then hit Suspend
and try to type something.)

    Then I typed c-Abort and the file got closed (I assume, since it disappeared
    from the wholine). Then, just to make sure everything was closed -- even though
    I thought it already was, I typed (FS:CLOSE-ALL-FILES). Oddly, I got an error.
    -kmp

    >>Error: The object #<HOST POINTER 14632625> received a :CLOSE-ALL-FILES message, which went unclaimed.
	     The rest of the message was ()
    While in the function (:METHOD NET:OBJECT :UNCLAIMED-MESSAGE)  SI:FLAVOR-UNCLAIMED-MESSAGE  SI:INSTANCE-HASH-UNCLAIMED-MESSAGE

Somehow, when we removed Pointer from our namespace, it did not get
deleted from the MIT namespace.  Plain old HOST objects do not support
any of the filesystem-ish messages.

    (:METHOD NET:OBJECT :UNCLAIMED-MESSAGE):  (P.C. = 31)
       Arg 0 (SELF): #<HOST POINTER 14632625>
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NET:OBJECT -- 3. IV's, 1. FL's 52504521>
       Arg 2 (OPERATION): :UNCLAIMED-MESSAGE
       Arg 3 (MESSAGE): :CLOSE-ALL-FILES
       Rest arg (ARGS): NIL

    SI:FLAVOR-UNCLAIMED-MESSAGE:  (P.C. = 20)
       Arg 0 (SELF): #<HOST POINTER 14632625>
       Arg 1 (IGNORE): NIL
       Rest arg (MESSAGE): (:CLOSE-ALL-FILES)

    SI:INSTANCE-HASH-UNCLAIMED-MESSAGE:  (P.C. = 35)
       Arg 0 (SELF): #<HOST POINTER 14632625>
       Arg 1 (SELF-MAPPING-TABLE): NIL
       Rest arg (MESSAGE): NIL

    FS:CLOSE-ALL-FILES:  (P.C. = 25)

    SI:*EVAL:  (P.C. = 370)
       Arg 0 (FORM): (FS:CLOSE-ALL-FILES)

    ...etc.
21-Dec-84 14:29:02-EST,3177;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 21 Dec 84 14:28-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 147782; Fri 21-Dec-84 13:01:06-EST
Date: Fri, 21 Dec 84 12:59 EST
From: "David C. Plummer in disguise" <DCP@SCRC-QUABBIN.ARPA>
Subject: Host colon problems in FS:ADD/SET-LOGICAL-PATHNAME-HOST
To: "Kent M. Pitman" <KMP@MIT-MC.ARPA>, BUG-LISPM@MIT-MC.ARPA
In-Reply-To: The message of 20 Dec 84 19:04-EST from Kent M. Pitman <KMP at MIT-MC>
Message-ID: <841221125900.9.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Thu, 20 Dec 84 19:04 EST
    From: "Kent M. Pitman" <KMP@MIT-MC.ARPA>

    In Symbolics 3600 System 242.356 ... on Lisp Machine Jimi Hendrix:

    I got an error evaluating the following form:
      (fs:add-logical-pathname-host "KMP" "OZ"
	 '(("SELF"   "PS:<KMP>")))
    The equivalent thing happens for the analagous use of FS:SET-LOGICAL-PATHNAME-HOST,
    which I guess is preferred in Rel5 (as I guess is obvious from the backtrace).
    The following form, on the other hand, works fine:
      (fs:add-logical-pathname-host "KMP" "OZ"
	 '(("SELF"   "OZ:PS:<KMP>")))

    It should not be looking for a a host in the translations. All the examples in the
    documentation show it not needing the host, and it's silly to have to redundantly
    specify a host since you've already had to specify it with the PHYSICAL-HOST argument.

This is an error check to make sure you aren't spreading a logical host
across physical hosts (but see below).  As RPK said, ":PS:<KMP>" is
sufficient in Release 5.

However, we bit the bullet in Release 6 and removed the error check.  We
also renamed the :HOST method to :DEFAULT-HOST of logical pathname
hosts.  This should catch everybody who was misusing logical hosts by
assuming all pathnames translated to the same physical host.

Therefore, logical hosts CAN be spread across physical hosts, and
therefore the physical translation is parsed defaulting against the
>>default<< physical host instead of being parsed with-respect-to the
default physical host.

    >>Error: "PS" is not a known file server host.
    While in the function FS:GET-PATHNAME-HOST  FS:PARSE-PATHNAME-FIND-COLON  FS:PARSE-PATHNAME

    FS:GET-PATHNAME-HOST:  (P.C. = 56)
       Arg 0 (HOST-NAME): "PS"
       --Defaulted args:--
       Arg 1 (NO-ERROR-P): NIL
       Arg 2 (NO-AUTO-ADD-P): NIL
       Local 3 (HOST): NIL

    FS:PARSE-PATHNAME-FIND-COLON:  (P.C. = 31)
       Arg 0 (STRING): "PS:<KMP>"

    FS:PARSE-PATHNAME:  (P.C. = 245)
       Arg 0 (THING): "PS:<KMP>"
       Arg 1 (WITH-RESPECT-TO): NIL
       Arg 2 (DEFAULTS): #<TOPS20-PATHNAME "OZ:*.*.*">

    FS:SET-LOGICAL-PATHNAME-HOST:  (P.C. = 356)
       Arg 0 (LOGICAL-HOST): "KMP"
       Rest arg: (:PHYSICAL-HOST "OZ" :TRANSLATIONS (("SELF" "PS:<KMP>")))

    FS:ADD-LOGICAL-PATHNAME-HOST:  (P.C. = 10)
       Arg 0 (LOGICAL-HOST): "KMP"
       Arg 1 (PHYSICAL-HOST): "OZ"
       Arg 2 (TRANSLATIONS): (("SELF" "PS:<KMP>"))

    SI:*EVAL:  (P.C. = 370)
       Arg 0 (FORM): (FS:ADD-LOGICAL-PATHNAME-HOST "KMP" "OZ" (QUOTE (("SELF" "PS:<KMP>"))))

    ...etc.
21-Dec-84 21:06:44-EST,4139;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 21 Dec 84 21:06-EST
Received: from SCRC-THAMES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 147780; Fri 21-Dec-84 13:00:53-EST
Date: Friday, 21 December 1984, 13:00-EST
From: Scott McKay <SWM at SCRC-QUABBIN>
Subject: Bug with Namespace Services
To: DRM at MIT-XX, BUG-LISPM at MIT-OZ
cc: Hornig at SCRC-QUABBIN
In-Reply-To: The message of 21 Dec 84 11:22-EST from Dinarte R. Morais <DRM at MIT-XX>
Message-ID: <841221130004.7.SWM@THAMES.SCRC.Symbolics.COM>

    Date: Friday, 21 December 1984, 11:22-EST
    From: Dinarte R. Morais <DRM@MIT-XX>

    In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 22, on CHAOS|30300:

    This is VERY annoying.  I believe someone else already reported that
    (fs:close-all-files) wouldn't work because this host doesn't handle
    the :close-all-files message.  So, what happened to POINTER that made it
    become a HOST instead of a LISPM-HOST?

    The following happened after selecting PEEK and typing F for
    File-System.

There is no more Pointer here.  I guess that it has not been deleted
from the MIT namespace thoroughly, but I don't know how to fix that.

    >>Error: The object #<HOST POINTER 14632657> received a :PEEK-FILE-SYSTEM-P message, which went unclaimed.
	     The rest of the message was ()
    While in the function (:METHOD NET:OBJECT :UNCLAIMED-MESSAGE)  SI:FLAVOR-UNCLAIMED-MESSAGE  SI:INSTANCE-HASH-UNCLAIMED-MESSAGE

    (:METHOD NET:OBJECT :UNCLAIMED-MESSAGE):  (P.C. = 31)
       Arg 0 (SELF): #<HOST POINTER 14632657>
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NET:OBJECT -- 3. IV's, 1. FL's 52504521>
       Arg 2 (OPERATION): :UNCLAIMED-MESSAGE
       Arg 3 (MESSAGE): :PEEK-FILE-SYSTEM-P
       Rest arg (ARGS): NIL

    SI:FLAVOR-UNCLAIMED-MESSAGE:  (P.C. = 20)
       Arg 0 (SELF): #<HOST POINTER 14632657>
       Arg 1 (IGNORE): NIL
       Rest arg (MESSAGE): (:PEEK-FILE-SYSTEM-P)

    SI:INSTANCE-HASH-UNCLAIMED-MESSAGE:  (P.C. = 35)
       Arg 0 (SELF): #<HOST POINTER 14632657>
       Arg 1 (SELF-MAPPING-TABLE): NIL
       Rest arg (MESSAGE): NIL

    (:INTERNAL TV:PEEK-FILE-SYSTEM 0):  (P.C. = 17)

    TV:SCROLL-MAINTAIN-LIST-UPDATE-FUNCTION:  (P.C. = 12)
       Arg 0 (ITEM): ((:PRE-PROCESS-FUNCTION TV:SCROLL-MAINTAIN-LIST-UPDATE-FUNCTION :FUNCTION NIL :INIT-FUNCTION #<DTP-COMPILED-FUNCTION (:INTERNAL TV:PEEK-FILE-SYSTEM 0) 64055676> :INIT-ARGS NIL :ITEM-FUNCTION #<DTP-COMPILED-FUNCTION (:INTERNAL TV:PEEK-FILE
    -SYSTEM 1) 64055662> ...))

    (:DEFUN-METHOD TV:SCROLL-REDISPLAY-ITEM-LOOP):  (P.C. = 50)
       Arg 0 (SELF): #<PEEK-PANE Peek Pane 1 2643736 exposed>
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:BASIC-SCROLL-WINDOW -- 8. IV's, 0. FL's 53633756>
       Arg 2 (ITEM): ((:PRE-PROCESS-FUNCTION TV:SCROLL-MAINTAIN-LIST-UPDATE-FUNCTION :FUNCTION NIL :INIT-FUNCTION #<DTP-COMPILED-FUNCTION (:INTERNAL TV:PEEK-FILE-SYSTEM 0) 64055676> :INIT-ARGS NIL :ITEM-FUNCTION #<DTP-COMPILED-FUNCTION (:INTERNAL TV:PEEK-FILE
    -SYSTEM 1) 64055662> ...))
       Arg 3 (CURRENT-COUNT): 0
       Arg 4 (FUNCTION): #<DTP-COMPILED-FUNCTION TV:SCROLL-REDISPLAY-DISPLAY-ITEM 11366404>
       Arg 5 (NO-RECOMP): NIL
       Rest arg (POSITION): (0)

    (:DEFUN-METHOD TV:SCROLL-REDISPLAY):  (P.C. = 71)
       Arg 0 (SELF): #<PEEK-PANE Peek Pane 1 2643736 exposed>
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:BASIC-SCROLL-WINDOW -- 8. IV's, 0. FL's 53633756>
       Arg 2 (FULL-REDISPLAY): T

    (:METHOD TV:BASIC-SCROLL-WINDOW :REDISPLAY):  (P.C. = 14)
       Arg 0 (SELF): #<PEEK-PANE Peek Pane 1 2643736 exposed>
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:BASIC-SCROLL-WINDOW -- 8. IV's, 0. FL's 53633756>
       Arg 2 (OPERATION): :REDISPLAY
       Arg 3 (FULL-P): T
       Arg 4 (FORCE-P): :FORCE

    Rest of stack:
    (:METHOD TV:PEEK-PANE :COMBINED :REDISPLAY):  (P.C. = 16)
    (:METHOD TV:BASIC-SCROLL-WINDOW :SET-DISPLAY-ITEM):  (P.C. = 14)
    TV:PEEK-SET-MODE:  (P.C. = 103)
    TV:PEEK-TOP-LEVEL:  (P.C. = 247)
    SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
22-Dec-84 10:32:15-EST,565;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 22 Dec 84 10:32-EST
Date: 22 Dec 1984  10:36 EST (Sat)
Message-ID: <SR.JACK.12073474473.BABYL@MIT-SPEECH>
From: "John E. Unverferth" <sr.jack@MIT-SPEECH>
Subject: Booting failure on a 3600
To:   bug-lispm@oz


Goldy will not complete a boot.
I get a " sparse loading error ", it then goes to the fep command "start"
and proceeds to freeze like that.  Is there anything I can do to fix it?

Anyone around here who would know is gone for the holidays so I really 
would appreciate the help.


jack

23-Dec-84 01:03:20-EST,1107;000000000000
Received: from SCRC-TENEX by MIT-OZ via Chaosnet; 23 Dec 84 01:03-EST
Date: Saturday, 22 December 1984  19:20-EST
From: MOON at SCRC-TENEX
To:   "John E. Unverferth" <sr.jack at MIT-SPEECH>
Cc:   bug-lispm at oz
Subject: Booting failure on a 3600
In-reply-to: The message of 22 Dec 1984  10:36 EST (Sat) from "John E. Unverferth" <sr.jack@MIT-SPEECH>

    Date: 22 Dec 1984  10:36 EST (Sat)
    Message-ID: <SR.JACK.12073474473.BABYL@MIT-SPEECH>
    From: "John E. Unverferth" <sr.jack@MIT-SPEECH>

    Goldy will not complete a boot.
    I get a " sparse loading error ", it then goes to the fep command "start"
    and proceeds to freeze like that.  Is there anything I can do to fix it?

I don't think you have reported the error message with word-for-word accuracy.
If the message you actually got was "sparse load compare error", I believe
this usually indicates that the hardware is broken.

Try resetting the FEP with the Reset FEP command.  Also try loading a
different world load, in case the world load file is damaged somehow.  If
that doesn't work, call hardware service.
23-Dec-84 10:24:20-EST,1488;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 23 Dec 84 10:24-EST
Received: from SCRC-LETHE by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 148451; Sun 23-Dec-84 10:17:21-EST
Date: Sunday, 23 December 1984, 10:14-EST
From: Joanne Hukee <hukee at SCRC-VIXEN>
Subject: Booting failure on a 3600
To: MOON at SCRC-TENEX
cc: sr.jack at MIT-SPEECH, bug-lispm at MIT-OZ
In-Reply-To: The message of 22 Dec 84 19:20-EST from MOON at SCRC-TENEX
Message-ID: <841223101424.2.HUKEE@LETHE.SCRC.Symbolics.COM>

    Date: Saturday, 22 December 1984  19:20-EST
    From: MOON at SCRC-TENEX

	Date: 22 Dec 1984  10:36 EST (Sat)
	Message-ID: <SR.JACK.12073474473.BABYL@MIT-SPEECH>
	From: "John E. Unverferth" <sr.jack@MIT-SPEECH>

	Goldy will not complete a boot.
	I get a " sparse loading error ", it then goes to the fep command "start"
	and proceeds to freeze like that.  Is there anything I can do to fix it?

    I don't think you have reported the error message with word-for-word accuracy.
    If the message you actually got was "sparse load compare error", I believe
    this usually indicates that the hardware is broken.

    Try resetting the FEP with the Reset FEP command.  Also try loading a
    different world load, in case the world load file is damaged somehow.  If
    that doesn't work, call hardware service.

This error usually indicates a bad DP board. Do "Test A-Mem" from the FEP to
see if the A-memory is bad. If so , you need a new DP. 
23-Dec-84 12:51:28-EST,781;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 23 Dec 84 12:51-EST
Date: Sunday, 23 December 1984, 06:54-EST
From: Webster Dove <dove at MIT-BUGS-BUNNY>
Subject: cold-load-stream bug
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10, Experimental FPA 2.0,
Experimental UTIL 9.0, Experimental IP-TCP 15.3, FEP 22, on Lisp Machine Daffy Duck:

I found the machine in this state after being idle overnight.
Apparently the keyboard input process got ahold of a funny object.

>>Trap: The first argument given to the ARRAY-LEADER instruction, 63743., was not an array.
While in the function (:INTERNAL TV:KBD-PROCESS-MAIN-LOOP 0.)  SI:PROCESS-SCHEDULER

(:INTERNAL TV:KBD-PROCESS-MAIN-LOOP 0.):  (P.C. = 7)

SI:PROCESS-SCHEDULER:  (P.C. = 176)
23-Dec-84 15:56:01-EST,2611;000000000001
Received: from SANCHO-PANZA by MIT-OZ via Chaosnet; 23 Dec 84 15:55-EST
Date: Sunday, 23 December 1984, 15:50-EST
From: Christopher Eliot <CRE at SANCHO-PANZA>
Subject: Bug in prompt and read.
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10,
Experimental Xqsim 23.0, FEP 18, on Lisp Machine Sancho Panza:

I evaluate this form, and then press <CR> at the prompt.  

(progn (setq *td* (fs:make-pathname-defaults))
       (prompt-and-read `(:pathname :default ,*td*))) 

This should return the default pathname for the defaults, but instead it
blows up.  The problem seems to be that the function READ-PATHNAME which
is called by SI:PROMPT-AND-READ-PATHNAME returns DEFAULTS, rather than
(FS:DEFAULT-PATHNAME DEFAULTS) when it gets a CR as its first character.
SI:PROMPT-AND-READ-PATHNAME doesn't notice this and tries to send a
message to it, assuming that it really is a pathname like it should be.

>>Error: The object ((NIL)) is not a valid function
While in the function ((NIL))  SI:PROMPT-AND-READ-PATHNAME  (:PROPERTY :PATHNAME PROMPT-AND-READ)

((NIL)):
   Arg 0: :PRINT-SELF
   Arg 1: #:TERMINAL-IO-SYN-STREAM
   Arg 2: NIL
   Arg 3: NIL

SI:PROMPT-AND-READ-PATHNAME:  (P.C. = 41)
   Arg 0 (STREAM): #:TERMINAL-IO-SYN-STREAM
   Arg 1 (OPTIONS): ((:PROMPT "Enter a pathname: "))
   Arg 2 (DEFAULT): ((NIL))
   Arg 3 (DEFAULT-VERSION): NIL
   Arg 4 (OR-NIL): NIL

(:PROPERTY :PATHNAME PROMPT-AND-READ):  (P.C. = 22)
   Arg 0 (STREAM): #:TERMINAL-IO-SYN-STREAM
   Arg 1 (OPTIONS): ((:PROMPT "Enter a pathname: "))
   Rest arg: (:DEFAULT ((NIL)))

PROMPT-AND-READ:  (P.C. = 135)
   Arg 0 (TYPE): (:PATHNAME :DEFAULT ((NIL)))
   --Defaulted args:--
   Arg 1 (*PROMPT-AND-READ-STRING*-initialization): NIL
   Rest arg (*PROMPT-AND-READ-ARGS*-initialization): NIL

SI:*EVAL:  (P.C. = 370)
   Arg 0 (FORM): (PROMPT-AND-READ (SI:XR-BQ-LIST (QUOTE :PATHNAME) (QUOTE :DEFAULT) *TD*))

PROGN:  (P.C. = 22)
   Rest arg (EXPRESSIONS): ((SETQ *TD* (FS:MAKE-PATHNAME-DEFAULTS)) (PROMPT-AND-READ (SI:XR-BQ-LIST (QUOTE :PATHNAME) (QUOTE :DEFAULT) *TD*)))

SI:*EVAL:  (P.C. = 421)
   Arg 0 (FORM): (PROGN (SETQ *TD* (FS:MAKE-PATHNAME-DEFAULTS)) (PROMPT-AND-READ (SI:XR-BQ-LIST (QUOTE :PATHNAME) (QUOTE :DEFAULT) *TD*)))

SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 200)
   Rest arg: (:NAME "Lisp Top Level in Lisp Listener 1" :ABORTED-FUNCTION NIL :BEFORE-PROMPT-FUNCTION NIL :READ-FUNCTION NIL :EVAL-FUNCTION NIL ...)

Rest of stack:
SI:LISP-COMMAND-LOOP:  (P.C. = 115)
SI:LISP-TOP-LEVEL1:  (P.C. = 22)
SI:LISP-TOP-LEVEL:  (P.C. = 7)
23-Dec-84 17:02:00-EST,2308;000000000001
Received: from SANCHO-PANZA by MIT-OZ via Chaosnet; 23 Dec 84 17:01-EST
Date: Sunday, 23 December 1984, 17:00-EST
From: Christopher Eliot <CRE at SANCHO-PANZA>
Subject: tv:choose-variable-values
To: BUG-LISPM at MIT-OZ
Cc: cre at SANCHO-PANZA

In Symbolics 3600 System 242.356, Hardcopy 20.10,
Experimental Xqsim 23.0, FEP 18, on Lisp Machine Sancho Panza:

There are two problems with this function that have been around for a very long
time.  Both occur when I edit a feild (a :sexp or a :string variable for
example) with Mouse-Middle.  Suppose the current value of the feild is NIL and
I happen to click middle instead of left, but want to change it to BAR.  Then
I would type three rubouts, and type BAR, except that after the third rubout the
initial value is restored!?!  Presumably something uses the rubout handler full-rubout
option and then resets the string.  The second problem is that finishing a list with <CR>
results in the next item being cleared and not redisplayed.

To see both of these problems call this function.  The first problem is
prvoked by clicking Middle (not left) on NIL next to FOO and then typing
three rubouts.

The second problem appears by clicking Middle on the list (foo bar baz)
and immediately pressing <CR>.

My third gripe is that the right mouse button doesn't do anything here.
Is it reseverved for anything or is there some reason for this.  I get
pissed off when I press a mouse button on a highlighted item and only
cause the screen to flash because my finger wasn't on the right (i.e. left)
button.  There are other places where only the left button is defined.
If there is only one mouse action in the current location then 
all of the buttons should do it.

(defun test ()
  (let ((foo nil)
	(bar '(foo bar baz))
	(baz 42))
    (declare (special foo bar baz))
    (tv:choose-variable-values      
      '((foo :documentation "The variable Foo is generally a frotz"
	      :sexp)
	(bar :documentation "A bar can include spaces"
	     :sexp)
	(baz :documentation "The answer is" :sexp))
      :extra-width 15
      :near-mode '(:point 400 0)
      :label "Define a parameter"
      :superior tv:mouse-sheet)
    (format t "~&The variables have been set to <~a, ~a, ~a>" foo bar baz)
    (tyi)
    (test)))
23-Dec-84 18:06:17-EST,1601;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 23 Dec 84 18:06-EST
Date: Sunday, 23 December 1984, 18:04-EST
From: Kent M. Pitman <KMP at MIT-MC>
Subject: (DESTRUCTURING-BIND (FOO BAR) FOO ...)
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 System 242.356 ... on Lisp Machine Frank Sinatra:

 (MACROEXPAND '(DESTRUCTURING-BIND (FOO BAR) FOO (LIST FOO BAR)))

  ==> ((LAMBDA (FOO)
	 ((LAMBDA (BAR)
	    (LIST FOO BAR))
	  (CAR (CDR FOO))))
       (CAR FOO))

This is not a correct result. The correct result would have been:

      ((LAMBDA (#:G0001)
	 ((LAMBDA (FOO)
	    ((LAMBDA (BAR)
	       (LIST FOO BAR))
	     (CAR (CDR #:G0001))))
	  (CAR #:G0001)))
       FOO)

which is what would have been produced if (FOO), rather than FOO
was in the source data position.

The problem is that a variable may not safely be repeated in the
destructuring process unless it either doesn't occur in the pattern
or is the last variable to occur in the pattern. eg,

 (MACROEXPAND '(DESTRUCTURING-BIND (BAZ (BAR FOO NIL) NIL) FOO (LIST FOO BAR)))

 ==> ((LAMBDA (BAZ)
	((LAMBDA (BAR)
	   ((LAMBDA (FOO)
	      (LIST FOO BAR))
	    (CAR (CDR (CAR (CDR FOO))))))
	 (CAR (CAR (CDR FOO)))))
      (CAR FOO))

is correct ... just barely.

I assume this problem rarely comes up in practice since DESTRUCTURING-BIND
used to be used mostly internally to DEFMACRO and SI::*MACROARG* is probably
not a popular name for a local variable. Now that DESTRUCTURING-BIND is 
advertised for more general use, though, it's probably worth fixing it to
really work as advertised.
-kmp
23-Dec-84 18:57:40-EST,2463;000000000001
Received: from MIT-MC by MIT-OZ via Chaosnet; 23 Dec 84 18:57-EST
Received: from MIT-BING-CROSBY by MIT-OZ via Chaosnet; 23 Dec 84 18:57-EST
Date: Sun, 23 Dec 84 18:55 EST
From:  <KMP%MIT-OZ@SCRC-STONY-BROOK.ARPA>
Subject: Some comments about (MAKE-SYSTEM ... :BATCH)
To: BUG-LISPM@MIT-MC.ARPA

In Symbolics 3600 System 242.356 ... on Lisp Machine Bing Crosby:

I have never used :BATCH in MAKE-SYSTEM before, but this seems odd.
I did (MAKE-SYSTEM "PA" :COMPILE :BATCH :NOCONFIRM) and it prompted:

Write compiler warnings to file: (default OZ:PS:<KMP>G0525.CWARNS)

so I typed Return. It then immediately said:

Compiler warnings written to file OZ:PS:<KMP>G0525.CWARNS.
MAKE-SYSTEM finished successfully at 12/23/84 18:26:40.

I was a little suspicious since there are dozens of files in this system
and it hadn't even probed them. Then it prompted:

Write compiler warnings to file: (PA: SOURCE; PROGRAMMER'S APPRENTICE.CWARNS.NEWEST)

to which I again typed Return. This time it started probing files and looks like
it's "working". 

* What was this G0525 nonsense about? The file contains simply:

    -*- Text -*-
    System G0525 made by KMP
    Started  12/23/84 18:26:38
    Finished 12/23/84 18:26:40
    
* I continue to insist that the long name of the system has no business
  getting merged into filenames. The filename suggested the second time
  should have at least been PA: SOURCE; PA.CWARNS.NEWEST

* In fact, I suggest that if BATCH is used, that (for patchable systems) the system
  version be incremented -before- the compilation begins and the CWARNS go to the
  patch directory with a filename corresponding to the system's version. eg,

     PA: PATCH; PA-17.CWARNS.NEWEST

  would be used for version 17 of the system. In general, only one version would
  ever get created unless :NO-INCREMENT-PATCH was being used, in which case the
  .NEWEST would avoid collision.

* I don't like the placement of the colon in:

    Write compiler warnings to file: (default OZ:PS:<KMP>G0525.CWARNS)

  I would prefer:

    Write compiler warnings to file (default OZ:PS:<KMP>G0525.CWARNS):

  or even just:

    Write compiler warnings to file (OZ:PS:<KMP>G0525.CWARNS):

  By the way, seems like (:PROPERTY :BATCH SI:MAKE-SYSTEM-KEYWORD) should 
  be calling PROMPT-AND-READ rather than using READLINE directly. This would
  make Refresh, etc. work better among other things.

-kmp
23-Dec-84 22:35:53-EST,7723;000000000000
Received: from MIT-ARTHUR by MIT-OZ via Chaosnet; 23 Dec 84 22:35-EST
Date: Sunday, 23 December 1984, 22:36-EST
From: Howard D. Trachtman <x.hdt at MIT-OZ>
Subject: quota exceeded, fixable easily
To: BUG-LISPM at MIT-OZ

In System 98.78, CADR 3.10, ZMail 53.19, MIT-Specific 22.5,
microcode 309, ZM MIT d, on Arthur Dent:


I ran out of quota on EE.
There was a proceed type called clean directory, so I used it.
 It didn't clean anything; although I was trying to write mcstuff.txt.3, it
left files .1 and .2    I expected this since it had typed out onlydeleting 
excess verions >2.   But: I didn't get any warning that anyfiles actually got
deleted (none did) or that none didn't (which is what happened).  There wasn't
any way to delete other cruft easier, without switching to DIRED...

I'm also not convinced that for an ITS that I would necessarily want to have
other files in my DIR deleted "behind my back".  Perhaps in the case that it actually
deletes files, it queries me, but I'm not going to look at the code right now.

There also was no proceed option for EXPUNGE-DIRECTORY, assuming that files actually
got deleted, but not expunged.

backtrace as follows:

>>ERROR: Quota exceeded for EE:PS:<S.HDT>MCSTUFF.TXT
Backtrace from the debugger:

FS:FILE-PROCESS-ASYNC-MARK (P.C. = 47)

 Arg 0 (PKT): #<CHAOS packet :STRING "T1797 O1783 ERROR NMR R Quota exceeded" :STATUS CHAOS:RELEASED 15753004>
Local 0 (STRING): "O1783 ERROR NMR R Quota exceeded"


FS:FILE-PROCESS-OUTPUT-ASYNC-MARK (P.C. = 62)

Local 0 (PKT): #<CHAOS packet :STRING "T1797 O1783 ERROR NMR R Quota exceeded" :STATUS CHAOS:RELEASED 15753004>


(:METHOD FS:FILE-OUTPUT-STREAM-MIXIN :SEND-OUTPUT-BUFFER) (P.C. = 127)
  (SELF is #<FILE-OUTPUT-CHARACTER-STREAM "EE:PS:<S.HDT>MCSTUFF.TXT" 23234647>)

 Arg 0 (OPERATION): :SEND-OUTPUT-BUFFER
 Rest arg (ARGS): ("" 750)


(:METHOD FS:FILE-OUTPUT-CHARACTER-STREAM :COMBINED :SEND-OUTPUT-BUFFER) (P.C. = 52)
  (SELF is #<FILE-OUTPUT-CHARACTER-STREAM "EE:PS:<S.HDT>MCSTUFF.TXT" 23234647>)

 Rest arg (.DAEMON-CALLER-ARGS.): (:SEND-OUTPUT-BUFFER "" 750)
Local 1 (.DAEMON-MAPPING-TABLE.): #<ART-16B-4 30746646>


(:METHOD SI:BASIC-BUFFERED-OUTPUT-STREAM :SEND-CURRENT-OUTPUT-BUFFER) (P.C. = 36)
  (SELF is #<FILE-OUTPUT-CHARACTER-STREAM "EE:PS:<S.HDT>MCSTUFF.TXT" 23234647>)

 Arg 0 (OPERATION): :SEND-CURRENT-OUTPUT-BUFFER


(:METHOD SI:BUFFERED-OUTPUT-STREAM-MIXIN :STRING-OUT) (P.C. = 112)
  (SELF is #<FILE-OUTPUT-CHARACTER-STREAM "EE:PS:<S.HDT>MCSTUFF.TXT" 23234647>)

 Arg 0 (OPERATION): :STRING-OUT
 Arg 1 (STRING): "Date: 20 November 1984 03:42-EST"
 Arg 2 (START): 20
 Arg 3 (END): 40
Local 0 (AMT): 20


(:METHOD SI:LINE-OUTPUT-STREAM-MIXIN :LINE-OUT) (P.C. = 46)
  (SELF is #<FILE-OUTPUT-CHARACTER-STREAM "EE:PS:<S.HDT>MCSTUFF.TXT" 23234647>)

 Arg 0 (OPERATION): :LINE-OUT
 Arg 1 (LINE): "Date: 20 November 1984 03:42-EST"
   --Defaulted args:--
 Arg 2 (START): 0
 Arg 3 (END): NIL


ZWEI:STREAM-OUT-INTERVAL (P.C. = 220)

 Arg 0 (STREAM): #<FILE-OUTPUT-CHARACTER-STREAM "EE:PS:<S.HDT>MCSTUFF.TXT" 23234647>
 Arg 1 (FROM-BP): ("***index" 0 :NORMAL)
 Arg 2 (TO-BP): ("" 1 :MOVES)
 Arg 3 (IN-ORDER-P): T
 Arg 4 (HACK-FONTS): NIL
Local 0 (DEPTH): 0
Local 1 (IN-STRING): NIL
Local 2 (CHECK-PARENS): NIL
Local 3 (LINE): "Date: 20 November 1984 03:42-EST"
Local 4 (EOF): NIL
Local 5 (START-INDEX): 0
Local 6 (INT-LINE): "***index"
Local 7 (INT-STREAM): #<INTERVAL-STREAM 23234705>
Local 8 (SYNTAX): NIL
Local 9 (MINIMUM): NIL


ZWEI:WRITE-FILE-INTERNAL (P.C. = 263)

 Arg 0 (PATHNAME): #FS:TOPS20-PATHNAME "EE:PS:<S.HDT>MCSTUFF.TXT"
 Arg 1 (BUFFER): #<ZMACS-BUFFER "MCSTUFF.TXT PS:<S.HDT> EE:" 21421121>
Local 0 (PLIST): NIL
Local 1: #<FILE-OUTPUT-CHARACTER-STREAM "EE:PS:<S.HDT>MCSTUFF.TXT" 23234647>
Local 2 (.FILE-ABORTED-FLAG.): :ABORT
Local 3: (NIL "Date: 20 November 1984 03:42-EST" NIL 0 . "***index")
Local 4: (0 . "***index")
Local 5 (NEW-PATHNAME): NIL
Local 6 (STREAM): #<FILE-OUTPUT-CHARACTER-STREAM "EE:PS:<S.HDT>MCSTUFF.TXT" 23234647>


ZWEI:SAVE-BUFFER (P.C. = 164)

 Arg 0 (BUFFER): #<ZMACS-BUFFER "MCSTUFF.TXT PS:<S.HDT> EE:" 21421121>
Local 0 (FILE-ID): (#FS:TOPS20-PATHNAME "EE:PS:<S.HDT>MCSTUFF.TXT.2" . 23765662537)
Local 1 (PATHNAME): #FS:TOPS20-PATHNAME "EE:PS:<S.HDT>MCSTUFF.TXT"
Local 2 (FILE-FILE-ID): (#FS:TOPS20-PATHNAME "EE:PS:<S.HDT>MCSTUFF.TXT.2" . 23765662537)
Local 3: #<FILE-PROBE-STREAM "EE:PS:<S.HDT>MCSTUFF.TXT" 23234517>
Local 4 (.FILE-ABORTED-FLAG.): NIL
Local 5 (S): #<FILE-PROBE-STREAM "EE:PS:<S.HDT>MCSTUFF.TXT" 23234517>


ZWEI:COM-SAVE-FILE (P.C. = 61)



ZWEI:COMMAND-EXECUTE (P.C. = 115)

 Arg 0 (COMMAND): ZWEI:COM-SAVE-FILE
 Arg 1 (CHAR): 10000123
 Arg 2 (PREFIX-CHAR): 10000130
   --Defaulted args:--
 Arg 3 (HOOK-LIST): NIL
Local 0 (HOOK-SUCCESS): T
Local 1: NIL
Local 2 (HOOK): NIL


ZWEI:MAKE-EXTENDED-COMMAND-INTERNAL (P.C. = 72)

Local 0 (PREFIX-CHAR): 10000130
Local 1 (CHAR): 10000123


Additional information supplied with call:
 Expecting 3 values

ZWEI:COMMAND-EXECUTE (P.C. = 115)

 Arg 0 (COMMAND): #<DTP-CLOSURE 37161662>
 Arg 1 (CHAR): 10000130
 Arg 2 (PREFIX-CHAR): NIL
 Arg 3 (HOOK-LIST): NIL
Local 0 (HOOK-SUCCESS): T
Local 1: NIL
Local 2 (HOOK): NIL


ZWEI:PROCESS-COMMAND-CHAR (P.C. = 65)

 Arg 0 (CH): 10000130
Local 0 (VALUE): NIL
Local 1 (LINE): NIL
Local 2 (INDEX): NIL
Local 3: NIL
Local 4 (HOOK): NIL


(:METHOD ZWEI:WINDOW :EDIT) (P.C. = 464)
  (SELF is #<ZMACS-WINDOW-PANE Zmacs Window Pane 1 2755473 exposed>)

 Arg 0 (OPERATION): :EDIT
   --Defaulted args:--
 Arg 1 (IGNORE): NIL
 Arg 2 (*COMTAB*): #<COMTAB ZWEI:MODE-COMTAB 43507266>
 Arg 3 (*MODE-LINE-LIST*): ("ZMACS " "(" ZWEI:*MODE-NAME-LIST* ") " ...)
 Arg 4 (TOP-LEVEL-P): T
Local 0 (TEM1): ((** ** T ** ...) (CONDITION ** T ** ...))
Local 1: ("Return to top level editor command loop.")
Local 2: ((SYSTEM:ABORT ERROR) ("Return to top level editor command loop.") T ("Return to top level editor command loop.") ...)
Local 3 (CH): 10000130


(:INTERNAL (:METHOD ZWEI:ZMACS-WINDOW :COMBINED :EDIT) 0) (P.C. = 74)

 Rest arg (.DAEMON-CALLER-ARGS.): (:EDIT)
Local 1 (.DAEMON-MAPPING-TABLE.): #<ART-16B-17 23305127>


FUNCALL (P.C. = 25)

 Arg 0 (FN): #<DTP-FEF-POINTER (:INTERNAL (:METHOD ZWEI:ZMACS-WINDOW :COMBINED :EDIT) 0) 21656520>
 Rest arg (ARGS): (:EDIT)


(:METHOD ZWEI:DISPLAYER :AROUND :EDIT) (P.C. = 31)
  (SELF is #<ZMACS-WINDOW-PANE Zmacs Window Pane 1 2755473 exposed>)

 Arg 0 (OPERATION): :EDIT
 Arg 1 (CONT): #<DTP-FEF-POINTER (:INTERNAL (:METHOD ZWEI:ZMACS-WINDOW :COMBINED :EDIT) 0) 21656520>
 Arg 2 (MT): #<ART-16B-17 23305127>
 Arg 3 (ARGS): (:EDIT)
   --Defaulted args:--
 Arg 4 (EDITOR-CLOSURE-1): NIL
 Rest arg (IGNORE): NIL


(:METHOD ZWEI:ZMACS-WINDOW :COMBINED :EDIT) (P.C. = 47)
  (SELF is #<ZMACS-WINDOW-PANE Zmacs Window Pane 1 2755473 exposed>)

 Rest arg (.DAEMON-CALLER-ARGS.): (:EDIT)
Local 1 (.DAEMON-MAPPING-TABLE.): #<ART-16B-17 23305127>


ZWEI:ZMACS-WINDOW-TOP-LEVEL (P.C. = 46)

 Arg 0 (FRAME): #<ZMACS-FRAME Zmacs Frame 1 2754716 exposed>


SI:PROCESS-TOP-LEVEL (P.C. = 152)

   --Defaulted args:--
 Arg 0 (IGNORE): NIL
Local 0: ("Reset and arrest process ~A." #<COROUTINING-PROCESS Zmacs Frame 1 36052134>)
Local 1: (CONDITION ("Reset and arrest process ~A." #<COROUTINING-PROCESS Zmacs Frame 1 36052134>) T ("Reset and arrest process ~A." #<COROUTINING-PROCESS Zmacs Frame 1 36052134>) ...)
Local 2: ("Restart process ~A." "Zmacs Frame 1")
Local 3: ((SYSTEM:ABORT CONDITION) ("Restart process ~A." "Zmacs Frame 1") T ("Restart process ~A." "Zmacs Frame 1") ...)
Local 4 (IGNORE): NIL
23-Dec-84 22:47:43-EST,4051;000000000001
Received: from MIT-MC by MIT-OZ via Chaosnet; 23 Dec 84 22:47-EST
Date: 23 December 1984 22:47-EST
From: Howard D. Trachtman <HDT @ MIT-MC>
Subject:  this may seem stupid, but...I've been meaning to get rid of this...
To: BUG-LISPM @ MIT-OZ
cc: HDT @ MIT-MC


When a file host connection dies, for many common situations (ie.
normal user just writing or reading a simple file), one would be
happy starting over with the reading or writing of that same file.
Every once in a while when the following error occurs, the situation is that:
1)  One knows that the host died, or there were some network type problems....
2)  One has good reason to believe that the host is now up
    , or will come back up soon.

I don't seem to recall being able to resume in a manner that says:
  1) GO ahead and forget about my current Network situation with this host
     (ie. resetting it is OK [one may want to have the status of the current
      pending other connections to this host printed out for verification)

  2) ...and when you've done that (possible even waiting some amount of time
     for the host to come up (ala chaos open retry), just restart the major
     file operation.

The "common" symptom that triggered all of this is:

    >>ERROR: Attempt to read file command reply from #<CHAOS
Connection 35410742>,
    a connection whose foreign host died.
    Backtrace from the debugger:

    FS:FILE-WAIT-FOR-TRANSACTION (P.C. = 105)

     Arg 0 (TID): "T1662"
     Arg 1 (CONN): #<CHAOS Connection 35410742>
     Arg 2 (WHOSTATE): "Open"
    Local 0 (ID): ("T1662" NIL NIL)


    Additional information supplied with call:
     Expecting 3 values

    (:METHOD FS:HOST-UNIT :COMMAND) (P.C. = 251)
      (SELF is #<HOST-UNIT 35460757>)

     Arg 0 (OPERATION): :COMMAND
     Arg 1 (MARK-P): NIL
     Arg 2 (STREAM-OR-HANDLE): "I1572"
     Arg 3 (SIMPLE-P): NIL
     Rest arg (COMMANDS): ("OPEN " "READ" " " "CHARACTER" ...)
    Local 1 (HANDLE): "I1572"
    Local 2 (STREAM): NIL
    Local 3 (PKT): #<CHAOS packet. PKT-STRING "Connection does not
exist at this end" PKT-STATUS NIL 35477535>
    Local 4 (TRANSACTION-ID): "T1662"
    Local 5 (SUCCESS): NIL
    Local 6 (WHOSTATE): "Open"
    Local 7 (STRING): NIL
    Local 8 (STRING): "Connection does not exist at this end"
    Local 9 (FROM): 13
    Local 10 (I): 4
    Local 11 (LEN): 4


    FS:OPEN-CHAOS (P.C. = 1442)

     Arg 0 (HOST): #FS:ITS-CHAOS-HOST "MIT-MC"
     Arg 1 (PATHNAME): #FS:ITS-PATHNAME "MC: SIPB; HDT WMAIL"
     Rest arg (OPTIONS): NIL
    Local 1 (DIRECTION): :INPUT
    Local 2 (CHARACTERS): T
    Local 3 (ERROR): T
    Local 4: (NIL)
    Local 5: (NIL)
    Local 6: (NIL)
    Local 7: (NIL)
    Local 8 (TEMPORARY): NIL
    Local 9 (DELETED): NIL
    Local 10 (RAW): NIL
    Local 11 (SUPER-IMAGE): NIL
    Local 12 (BYTE-SIZE): :DEFAULT
    Local 13 (PRESERVE-DATES): NIL
    Local 14 (INHIBIT-LINKS): NIL
    Local 15 (SUBMIT): NIL
    Local 16 (ESTIMATED-LENGTH): NIL
    Local 17 (ELEMENT-TYPE-P): NIL
    Local 18 (ACCESS-ERROR): NIL
    Local 19 (ELEMENT-TYPE): STRING-CHAR
    Local 20 (IF-EXISTS): :NEW-VERSION
    Local 21 (IF-DOES-NOT-EXIST): :ERROR
    Local 22 (HOST-UNIT): #<HOST-UNIT 35460757>
    Local 23 (DATA-CONN): (#<CHAOS Connection to MIT-MC FILE 1
35410472> "I1572" "O1573" 33067752 ...)
    Local 24 (PKT): NIL
    Local 25 (SUCCESS): NIL
    Local 26 (STRING): NIL
    Local 27 (NOT-ABORTED): NIL
    Local 28 (PHONY-CHARACTERS): NIL
    Local 29 (SIGN-EXTEND-BYTES): NIL
    Local 30 (IF-EXISTS-P): NIL
    Local 31 (.SELECTQ.ITEM.): :UNSPECIFIC
    Local 32 (ERROR-OBJECT): (#<CHAOS Connection to MIT-MC FILE 1
35410472> "I1572" "O1573" 33067752 ...)
    Local 33: (NIL NIL NIL NIL ...)
    Local 34: (NIL 260 . 24000000)
    Local 35: NIL
    Local 36: NIL
    Local 37 (*SELECTQ-ITEM*): NIL
    Local 38 (PROPERTIES)f: NIL
    Local 39 (CLOSE-SUCCESS): NIL
    Local 40 (ERROR-OBJECT): NIL
    Local 41 (IGNORE): NIL
...
23-Dec-84 22:55:43-EST,4741;000000000001
Received: from MIT-MC by MIT-OZ via Chaosnet; 23 Dec 84 22:55-EST
Received: from MIT-BING-CROSBY by MIT-OZ via Chaosnet; 23 Dec 84 22:54-EST
Date: Sun, 23 Dec 84 22:53 EST
From:  <KMP%MIT-OZ@SCRC-STONY-BROOK.ARPA>
Subject: (SEND '#<SI:INDENTED-STREAM ...> :SEND-IF-HANDLES :READ-CURSORPOS ...)
To: BUG-LISPM@MIT-MC.ARPA
Cc: DICK%MIT-OZ@SCRC-STONY-BROOK.ARPA, KMP@MIT-MC.ARPA

In Symbolics 3600 System 242.356 ... on Lisp Machine Bing Crosby:

The new Waters pretty printer, PP, has some code that does

 (SEND stream :SEND-IF-HANDLES :READ-CURSORPOS :CHARACTER)

In the case of an SI:INDENTED-STREAM, this loses because the indented
stream supports the message only long enough to send it again (less
carefully) to another stream.

   >>Error: The object #<FILE-OUTPUT-CHARACTER-STREAM
	                 "PA: SOURCE; PROGRAMMER'S APPRENTICE.CWARNS.NEWEST"
		         36171260>
            received a :READ-CURSORPOS message, which went unclaimed.
            The rest of the message was (:CHARACTER)
     While in the function (:METHOD SI:INDENTING-STREAM :READ-CURSORPOS)
                          (:METHOD SI:INDENTING-STREAM :SEND-IF-HANDLES)
			  (:METHOD PP:PP-STREAM PP:INITIALIZE)

   (:METHOD SI:INDENTING-STREAM :READ-CURSORPOS):  (P.C. = 15)
      Arg 0 (SELF): #<INDENTING-STREAM 35241702>
      Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:INDENTING-STREAM -- 0. IV's, 1. FL's 52507752>
      Arg 2 (OPERATION): :READ-CURSORPOS
      Arg 3 (UNIT): :CHARACTER
   
   (:METHOD SI:INDENTING-STREAM :SEND-IF-HANDLES):  (P.C. = 16)
      Arg 0 (SELF): #<INDENTING-STREAM 35241702>
      Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:INDENTING-STREAM -- 0. IV's, 1. FL's 52507752>
      Arg 2 (OPERATION): :SEND-IF-HANDLES
      Arg 3 (OP): :READ-CURSORPOS
      Rest arg (MSG): NIL
   
   (:METHOD PP:PP-STREAM PP:INITIALIZE):  (P.C. = 55)  (from OZ:PS:<DICK.PGMS>PP)
      Arg 0 (SELF): #<PP:PRETTY-PRINT-STREAM buffer="">
      Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor PP:PP-STREAM -- 19. IV's, 0. FL's 7103067>
      Arg 2 (OPERATION): PP:INITIALIZE
      Arg 3 (STREAM): #<INDENTING-STREAM 35241702>
   
   ...etc.

The problem is that the SI:INDENTING-STREAM handles :READ-CURSORPOS in the
following way:

    (DEFMETHOD (INDENTING-STREAM :READ-CURSORPOS) (&OPTIONAL (UNIT ':CHARACTER))
      (OR (EQ UNIT ':CHARACTER) (FERROR "~S is not a known unit." UNIT))
      (MULTIPLE-VALUE-BIND (X Y) (FUNCALL STREAM ':READ-CURSORPOS UNIT)
	(VALUES (- X INDENTATION) Y)))

This confuses :SEND-IF-HANDLES into thinking the thing is handled. There are several
ways around this problem, but the best seems to be to whopperify the :WHICH-OPERATIONS,
:SEND-IF-HANDLES, and :OPERATION-HANDLED-P messages for SI:INDENTING-STREAM so that 
they claim that :READ-CURSORPOS (and whatever else) is not handled when the stream
to which they're forwarding doesn't handle it.

I could even imagine SI:INDENTING-STREAM being built on something like the following,
which could be released for other uses as well:

(DEFFLAVOR UNHANDLED-MESSAGE-MIXIN ((MESSAGE-KEYS-NOT-HANDLED '())) ()
  :SETTABLE-INSTANCE-VARIABLES)
	
(DEFWHOPPER (UNHANDLED-MESSAGE-MIXIN :WHICH-OPERATIONS) ()
  (LET ((MSG-KEYS (CONTINUE-WHOPPER)))
    (DOLIST (MSG-KEY MESSAGE-KEYS-NOT-HANDLED)
      (SETQ MSG-KEYS (REMOVE MSG-KEY MSG-KEYS)))
    MSG-KEYS))

(DEFMETHOD (UNHANDLED-MESSAGE-MIXIN :SEND-IF-HANDLES) (MSG-KEY &REST MSG-ARGS)
  ;; This method may not be needed if :SEND-IF-HANDLES really respects 
  ;; :OPERATION-HANDLED-P and not some more internal data structure.
  (IF (SEND SELF :OPERATION-HANDLED-P MSG-KEY)
      (LEXPR-SEND SELF MSG-KEY MSG-ARGS)))

(DEFMETHOD (UNHANDLED-MESSAGE-MIXIN :OPERATION-HANDLED-P) (MSG-KEY)
  (AND (CONTINUE-WHOPPER) (NOT (MEMQ MSG-KEY MESSAGE-KEYS-NOT-HANDLED))))

(DEFFLAVOR FORWARDING-MESSAGE-MIXIN ((MESSAGE-KEYS-FORWARDED '())
				     (OBJECT-BEING-FORWARDED-TO NIL))
	   (UNHANDLED-MESSAGE-MIXIN)
  :SETTABLE-INSTANCE-VARIABLES)

(DEFMETHOD (FORWARDING-MESSAGE-MIXIN :AFTER :INIT) (&REST IGNORE)
  (SEND SELF :UPDATE-FORWARDING))

(DEFMETHOD (FORWARDING-MESSAGE-MIXIN :UPDATE-FORWARDING) ()
  (SEND SELF :SET-MESSAGE-KEYS-NOT-HANDLED
	(IF FORWARDING-TO
	    (LET ((MSG-KEYS '()))
	      (DOLIST (MSG-KEY MESSAGE-KEYS-FORWARDED)
		(IF (NOT (SEND OBJECT-BEING-FORWARDED-TO :OPERATION-HANDLED-P MSG-KEY))
		    (PUSH MSG-KEY MSG-KEYS)))
	      MSG-KEYS))))

There's some question about :GET-HANDLER-FOR, but I think that should not be
modified. It might want to be documented with SI:VANILLA-FLAVOR that you should
only send a :GET-HANDLER-FOR message to an object if you're sure it handles
the message already.

-kmp
23-Dec-84 23:15:34-EST,2660;000000000001
Received: from MIT-BING-CROSBY by MIT-OZ via Chaosnet; 23 Dec 84 23:15-EST
Date: Sunday, 23 December 1984, 23:13-EST
From:  <KMP at MIT-OZ>
Subject: Window Selection
To: BUG-LISPM at MIT-OZ
Cc: USER-INTERFACE at SCRC-STONY-BROOK

In Symbolics 3600 System 242.356 ... on Lisp Machine Bing Crosby:

Summary: This message tells a story about some problems I just 
	 had with the window system (specifically with various
	 aspects of selection) which I claim would have bothered
	 and/or confused novices.

I did c-M from the debugger and sent a bug message.

I didn't get a chance to read the echo area typeout about where the
message had been sent, so I wanted to go back to the editor that had
sent the mail.

I tried Function S, but that didn't seem to "remember" that I had
just been in a Mail window.

So I did (MAIL T). This got me where I wanted to be, but unfortunately
it cleared the echo area first thing, so I still didn't get to read
what was typed there.

I guess I should have tried the system menu from the mouse and selected
the mail frame that way. Perhaps that would have worked.

In any case, I decided I wanted to be back in Lisp because this Mail
pane didn't have what I wanted. 

I didn't want to type Abort because I thought that would make it think
I wanted to be able to un-Abort later with (MAIL T), which I really
didn't ... and I certainly didn't want to type End, since I figure 
you guys get enough mail from me already without my ending messages 
twice ... so I typed Select L.

This left me in a Lisp talking to the debugger I had started from,
with a display that looked like:

 c-M
  Eval: (mail t)

But Lisp isn't listening, because it has busied itself with the Mail 
window and isn't listening. Now, unlike a similar bug that happens
when you do (INSPECT ...) and re-select the window which you called
Inspect from, you cannot in the case of MAIL type c-Abort to get Lisp's
attention back. If you've INSPECT'd an object, c-Abort does get the
Lisp's attention back.

Personally, I think these two (INSPECT and MAIL) ought to be 
consistent on this business of what is done when you type c-Abort 
on the caller's window (rather than the Inspect or Mail window).
I realize the control structure of these two is different and that
INSPECT is probably winning by a fortunate accident, but I still
think it's right that it does.

I got a system menu, selected the Mail window, and hit Abort and 
the world righted itself. I do not, however, believe that a novice
would necessarily do that. I do believe a novice could easily get
into this sort of situation. 

-kmp
23-Dec-84 23:30:35-EST,679;000000000001
Received: from MIT-MC by MIT-OZ via Chaosnet; 23 Dec 84 23:30-EST
Received: from MIT-BING-CROSBY by MIT-OZ via Chaosnet; 23 Dec 84 23:29-EST
Date: Sun, 23 Dec 84 23:28 EST
From:  <KMP%MIT-OZ@SCRC-STONY-BROOK.ARPA>
Subject: (SEND '#<SI:INDENTED-STREAM ...> :SEND-IF-HANDLES :READ-CURSORPOS ...)
To: BUG-LISPM@MIT-MC.ARPA
Cc: DICK%MIT-OZ@SCRC-STONY-BROOK.ARPA, KMP@MIT-MC.ARPA
References: Your message

Oops. I noticed a couple of bugs in the code I gave for UNHANDLED-MESSAGE-MIXIN.
I think the code is still intelligible and the fixes should be obvious anyway,
so I won't bore you with them. The point was to illustrate an idea, which I 
hope I managed anyway. -kmp
23-Dec-84 23:53:28-EST,2610;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 23 Dec 84 23:53-EST
Received: from MIT-BING-CROSBY by MIT-OZ via Chaosnet; 23 Dec 84 23:52-EST
Date: Sun, 23 Dec 84 23:51 EST
From:  <KMP%MIT-OZ@SCRC-STONY-BROOK.ARPA>
Subject: Proposed new semantics for (LOGIN name :HOST host)
To: BUG-LISPM@MIT-MC.ARPA
Cc: KMP@MIT-MC.ARPA

In Symbolics 3600 System 242.356 ... on Lisp Machine Bing Crosby:

When I do  (LOGIN "KMP" :HOST "OZ")
the namespace server should search its database of users and find the
one who logs in as "KMP" at "OZ" if there is one, and assume that I am
he. I do not expect it to assume that "KMP" at "OZ" is the same as the
namespace user object named "KMP", but I do expect it to infer that.
There is enough info present for it to do so.

The reason I want this is that I want sometimes to get my init file
from some other system than my primary machine. It seems unreasonable
that I should have to do:

  (LOGIN "KMP" :LOAD-INIT-FILE NIL)
  (LOAD "OZ:PS:<KMP>LISPM-INIT")

since that's what it seems to me  (LOGIN "KMP" :HOST "OZ")
was intended to accomplish. 

As things are now, if I later log into "MC", it has to ask me what
name to use. Also, if I send mail, it ends up having confusing
headers like:
 From:  <KMP%MIT-OZ@SCRC-STONY-BROOK.ARPA>
rather than:
 From: Kent M Pitman <KMP@MIT-MC.ARPA>

Personally, I would rather have (LOGIN "KMP" :HOST "OZ") mean
to find the name "KMP" in the user database, find out what he logs
in as on "OZ", then try to log him in as that. I think users
who are not in the database should have to either put themselves
in or say (LOGIN "KMP" :HOST "OZ" :NAME-ON-HOST "KMP") or some
such thing. I know that occassionally people who are not registered
in the namespace will want to log in, but that case is rare and I
see no reason to bother about it.

The problem is slightly complicated in FS:FORCE-USER-TO-LOGIN because
the prompt says type "username or username@host". The username@host 
could be confusing because it looks like net address format and one 
might think the username was supposed to be the one for the host rather
than the one for the namespace. I suggest that if the prompt said
"username or username/host" this confusion wouldn't arise and it would
be ok to interpret the name as the namespace name rather than the name
for the host. In fact, you could say "name, name/host, or name@host"
and let "name"      mean (LOGIN "name")
        "name/host" mean (LOGIN "name" :HOST "host") ;with my new meaning
    and "name@host" mean (LOGIN "name" :HOST "host" :NAME-ON-HOST "name")

-kmp
24-Dec-84 17:00:40-EST,1239;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 24 Dec 84 17:00-EST
Received: from SCRC-THAMES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 148585; Mon 24-Dec-84 12:34:00-EST
Date: Monday, 24 December 1984, 12:32-EST
From: Scott McKay <SWM at SCRC-QUABBIN>
Subject: (DESTRUCTURING-BIND (FOO BAR) FOO ...)
To: KMP at MIT-MC, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 23 Dec 84 18:04-EST from Kent M. Pitman <KMP at MIT-MC>
Message-ID: <841224123208.1.SWM@THAMES.SCRC.Symbolics.COM>

    Date: Sunday, 23 December 1984, 18:04-EST
    From: Kent M. Pitman <KMP at MIT-MC>

    In Symbolics 3600 System 242.356 ... on Lisp Machine Frank Sinatra:

     (MACROEXPAND '(DESTRUCTURING-BIND (FOO BAR) FOO (LIST FOO BAR)))

      ==> ((LAMBDA (FOO)
             ((LAMBDA (BAR)
                (LIST FOO BAR))
              (CAR (CDR FOO))))
           (CAR FOO))

    This is not a correct result. The correct result would have been:

This appears to work correctly in the new CL-ish DESTRUCTURING-BIND:

    (MACROEXPAND '(DESTRUCTURING-BIND (FOO BAR) FOO (LIST FOO BAR)))

     ==> (LET* ((BAR FOO)
                (FOO (CAR BAR)))
           (SETQ BAR (CAR (CDR BAR)))
           (LIST FOO BAR))
24-Dec-84 17:01:06-EST,2132;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 24 Dec 84 17:00-EST
Received: from SCRC-PEACE by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 148597; Mon 24-Dec-84 13:09:18-EST
Date: Monday, 24 December 1984, 13:07-EST
From: Charles Hornig <Hornig at SCRC-STONY-BROOK>
Subject: (DESTRUCTURING-BIND (FOO BAR) FOO ...)
To: Kent M. Pitman <KMP at MIT-MC>, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 23 Dec 84 18:04-EST from Kent M. Pitman <KMP at MIT-MC>
Message-ID: <841224130745.2.HORNIG@PEACE.SCRC.Symbolics.COM>

    Date: Sunday, 23 December 1984, 18:04-EST
    From: Kent M. Pitman <KMP at MIT-MC>

    In Symbolics 3600 System 242.356 ... on Lisp Machine Frank Sinatra:

     (MACROEXPAND '(DESTRUCTURING-BIND (FOO BAR) FOO (LIST FOO BAR)))

      ==> ((LAMBDA (FOO)
	     ((LAMBDA (BAR)
		(LIST FOO BAR))
	      (CAR (CDR FOO))))
	   (CAR FOO))

    This is not a correct result. The correct result would have been:

	  ((LAMBDA (#:G0001)
	     ((LAMBDA (FOO)
		((LAMBDA (BAR)
		   (LIST FOO BAR))
		 (CAR (CDR #:G0001))))
	      (CAR #:G0001)))
	   FOO)

    which is what would have been produced if (FOO), rather than FOO
    was in the source data position.

    The problem is that a variable may not safely be repeated in the
    destructuring process unless it either doesn't occur in the pattern
    or is the last variable to occur in the pattern. eg,

     (MACROEXPAND '(DESTRUCTURING-BIND (BAZ (BAR FOO NIL) NIL) FOO (LIST FOO BAR)))

     ==> ((LAMBDA (BAZ)
	    ((LAMBDA (BAR)
	       ((LAMBDA (FOO)
		  (LIST FOO BAR))
		(CAR (CDR (CAR (CDR FOO))))))
	     (CAR (CAR (CDR FOO)))))
	  (CAR FOO))

    is correct ... just barely.

    I assume this problem rarely comes up in practice since DESTRUCTURING-BIND
    used to be used mostly internally to DEFMACRO and SI::*MACROARG* is probably
    not a popular name for a local variable. Now that DESTRUCTURING-BIND is 
    advertised for more general use, though, it's probably worth fixing it to
    really work as advertised.
    -kmp

This is all fixed in release 6 to generate safe code.
24-Dec-84 17:02:26-EST,1630;000000000001
Received: from MIT-MC by MIT-OZ via Chaosnet; 24 Dec 84 17:02-EST
Received: from SCRC-PEACE by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 148588; Mon 24-Dec-84 13:05:07-EST
Date: Mon, 24 Dec 84 13:03 EST
From: Charles Hornig <Hornig@SCRC-STONY-BROOK.ARPA>
Subject: (SEND '#<SI:INDENTED-STREAM ...> :SEND-IF-HANDLES :READ-CURSORPOS ...)
To: KMP%MIT-OZ@MIT-MC.ARPA, BUG-LISPM@MIT-MC.ARPA
cc: DICK%MIT-OZ@MIT-MC.ARPA
In-Reply-To: The message of 23 Dec 84 22:53-EST from KMP at MIT-OZ
Message-ID: <841224130321.1.HORNIG@PEACE.SCRC.Symbolics.COM>

    Date: Sun, 23 Dec 84 22:53 EST
    From:  <KMP%MIT-OZ@SCRC-STONY-BROOK.ARPA>

    In Symbolics 3600 System 242.356 ... on Lisp Machine Bing Crosby:

    The new Waters pretty printer, PP, has some code that does

     (SEND stream :SEND-IF-HANDLES :READ-CURSORPOS :CHARACTER)

    In the case of an SI:INDENTED-STREAM, this loses because the indented
    stream supports the message only long enough to send it again (less
    carefully) to another stream.

       >>Error: The object #<FILE-OUTPUT-CHARACTER-STREAM
			     "PA: SOURCE; PROGRAMMER'S APPRENTICE.CWARNS.NEWEST"
			     36171260>
		received a :READ-CURSORPOS message, which went unclaimed.
		The rest of the message was (:CHARACTER)
	 While in the function (:METHOD SI:INDENTING-STREAM :READ-CURSORPOS)
			      (:METHOD SI:INDENTING-STREAM :SEND-IF-HANDLES)
			      (:METHOD PP:PP-STREAM PP:INITIALIZE)

This is fixed in a less general way than you suggested in release 6.  We
did it be defining special :SEND-IF-HANDLES and :WHICH-OPERATIONS
methods for SI:INDENTING-STREAM.
24-Dec-84 17:28:00-EST,3303;000000000000
Received: from MIT-FRANK-SINATRA by MIT-OZ via Chaosnet; 24 Dec 84 17:27-EST
Date: Monday, 24 December 1984, 17:29-EST
From: Kent M Pitman <KMP at MIT-MC>
Subject: Unhandled error from SI:CHECK-FOR-BOGUS-KEYWORD during Zmacs sectionization
To: BUG-LISPM at MIT-OZ

In Zmacs in Symbolics 3600 System 242.356 ... on Lisp Machine Frank Sinatra:

I got an error from SI:CHECK-FOR-BOGUS-KEYWORD while trying to do
c-X c-F (Find File) on a file containing a definition for a 
:NAMED-STRUCTURE-INVOKE property.

I don't believe that the sectionizer ought to pass this error through. It
should handle the problem quietly without worrying the user (or at worst
should type out a warning saying the sectionization info for this property
will not be accurate). 
 
It should not be in the user abstraction that reading/writing files has
to intern any symbols in that file.
-kmp

>>Error: Named structure printers are defined on the NAMED-STRUCTURE-INVOKE
         property, not :NAMED-STRUCTURE-INVOKE.
  While in the function SI:CHECK-FOR-BOGUS-KEYWORD 
		       SI:PKG-NEW-KEYWORD-SYMBOL 
		       GLOBAL:INTERN

SI:CHECK-FOR-BOGUS-KEYWORD:  (P.C. = 20)
   Arg 0 (SYMBOL): :NAMED-STRUCTURE-INVOKE

SI:PKG-NEW-KEYWORD-SYMBOL:  (P.C. = 3)
   Arg 0 (PKG): #<Package KEYWORD 22424020>
   Arg 1 (SYM): :NAMED-STRUCTURE-INVOKE
   Arg 2 (HASH): 1007427687.
   Arg 3 (IGNORE): 0.

GLOBAL:INTERN:  (P.C. = 136)
   Arg 0 (SYM): "NAMED-STRUCTURE-INVOKE"
   --Defaulted args:--
   Arg 1 (PKG): #<Package KEYWORD 22424020>

SI:XR-READ-SYMBOL:  (P.C. = 21)
   Arg 0 (STREAM): SI:READ-FROM-STRING-STREAM
   Arg 1 (STRING): "NAMED-STRUCTURE-INVOKE"

SI:XR-READ-THING:  (P.C. = 236)
   Arg 0 (STREAM): SI:READ-FROM-STRING-STREAM

(:INTERNAL SI:READ-INTERNAL 0.):  (P.C. = 15)
   Arg 0 (STREAM): SI:READ-FROM-STRING-STREAM
   Arg 1 (FUNCTION): SI:READ-RECURSIVE
   Arg 2 (EOF-OPTION): SI:NO-EOF-OPTION

SI:READ-INTERNAL:  (P.C. = 53)
   Arg 0 (FUNCTION): SI:READ-RECURSIVE
   Rest arg (READ-ARGS): (SI:READ-FROM-STRING-STREAM SI:NO-EOF-OPTION)

SI:READ-RECURSIVE:  (P.C. = 5)
   Arg 0 (STREAM): SI:READ-FROM-STRING-STREAM

Rest of stack:
SI:XR-PACKAGE-PREFIX:  (P.C. = 137)
SI:XR-READ-THING:  (P.C. = 60)
(:PROPERTY GLOBAL:LIST SI:STANDARD-READ-FUNCTION):  (P.C. = 50)
SI:XR-READ-THING:  (P.C. = 60)
(:INTERNAL SI:READ-INTERNAL 0.):  (P.C. = 15)
SI:READ-INTERNAL:  (P.C. = 53)
GLOBAL:READ:  (P.C. = 6)
GLOBAL:READ-FROM-STRING:  (P.C. = 23)
ZWEI:SYMBOL-FROM-STRING:  (P.C. = 45)
ZWEI:GET-DEFINITION-FUNCTION-SPEC:  (P.C. = 161)
(:METHOD ZWEI:LISP-SYNTAX-MIXIN :SECTION-NAME):  (P.C. = 24)
ZWEI:SECTIONIZE-BUFFER:  (P.C. = 214)
(:DEFUN-METHOD ZWEI:REVERT-FROM-STREAM):  (P.C. = 171)
(:METHOD ZWEI:FILE-BUFFER-MIXIN :REVERT):  (P.C. = 71)
ZWEI:FIND-FILE:  (P.C. = 125)
(:METHOD ZWEI:FILE-TAG-TABLE-SUBNODE :BUFFER):  (P.C. = 15)
(:METHOD ZWEI:TAG-TABLE-SPECIAL-PURPOSE-BUFFER :NEXT-FILE):  (P.C. = 30)
ZWEI:COM-FIND-FILES-IN-TAG-TABLE:  (P.C. = 12)
ZWEI:COM-EXTENDED-COMMAND:  (P.C. = 27)
ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 214)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 41)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
24-Dec-84 22:00:04-EST,1302;000000000000
Received: from MIT-FRANK-SINATRA by MIT-OZ via Chaosnet; 24 Dec 84 22:00-EST
Date: Monday, 24 December 1984, 22:02-EST
From: Kent M Pitman <KMP at MIT-MC>
Subject: Compiler -- "Unknown special instance variable ..."
To: BUG-LISPM at MIT-OZ
Cc: KBE-I-FILE at MIT-OZ

In Symbolics 3600 System 242.356 ... on Lisp Machine Frank Sinatra:

When building the PA system in Rel5, I get the following compiler
diagnostic:

  Warnings for file OZ:PS:<PA>LISPM-INIT
    
    For Flavor PA:EDITING-INPUT-PANE
      Unknown special instance variable ZWEI:*LAST-FILE-NAME-TYPED*

The LISPM-INIT file does not define anything. It just constructs the
system, so I'm not sure why it's associated with this file. Perhaps
it's only detected at the time the flavor is instantiated and 
LISPM-INIT is the only file open at the time.

In any case, the meaning of "Unknown special instance variable ..."
is not known to me. 

The variable is an instance variable of the flavor ZWEI:EDITOR
(which is defined in SYS: ZWEI; DEFS). That flavor definition
gives the variable a default initialization and uses the
:SPECIAL-INSTANCE-VARIABLES option to make it special.

I don't understand what this warning is about; the variable seems
quite "known" to me. Can someone explain this? Thanks.

-kmp
27-Dec-84 08:38:32-EST,1538;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 27 Dec 84 08:38-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 149476; Thu 27-Dec-84 08:40:00-EST
Date: Thursday, 27 December 1984, 08:37-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: cold-load-stream bug
To: Webster Dove <dove at MIT-BUGS-BUNNY>, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 23 Dec 84 06:54-EST from Webster Dove <dove at MIT-BUGS-BUNNY>
Message-ID: <841227083757.9.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Sunday, 23 December 1984, 06:54-EST
    From: Webster Dove <dove at MIT-BUGS-BUNNY>

    In Symbolics 3600 System 242.356, Hardcopy 20.10, Experimental FPA 2.0,
    Experimental UTIL 9.0, Experimental IP-TCP 15.3, FEP 22, on Lisp Machine Daffy Duck:

    I found the machine in this state after being idle overnight.
    Apparently the keyboard input process got ahold of a funny object.

Apparently.  (Why is the subject field "cold-load-stream bug" when there
is nothing here relating to the cold load stream?)  Is this at all
reproducible?  Have you had other problems (probably not related) with
this machine that would lead you to think some piece of hardware is
broken?

    >>Trap: The first argument given to the ARRAY-LEADER instruction, 63743., was not an array.
    While in the function (:INTERNAL TV:KBD-PROCESS-MAIN-LOOP 0.)  SI:PROCESS-SCHEDULER

    (:INTERNAL TV:KBD-PROCESS-MAIN-LOOP 0.):  (P.C. = 7)

    SI:PROCESS-SCHEDULER:  (P.C. = 176)
27-Dec-84 08:42:41-EST,3285;000000000001
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 27 Dec 84 08:42-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 149480; Thu 27-Dec-84 08:44:08-EST
Date: Thursday, 27 December 1984, 08:42-EST
From: David C. Plummer in disguise <DCP at SCRC-QUABBIN>
Subject: Bug in prompt and read.
To: Christopher Eliot <CRE at SANCHO-PANZA>, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 23 Dec 84 15:50-EST from Christopher Eliot <CRE at SANCHO-PANZA>
Message-ID: <841227084207.0.NFEP@NEPONSET.SCRC.Symbolics.COM>

    Date: Sunday, 23 December 1984, 15:50-EST
    From: Christopher Eliot <CRE at SANCHO-PANZA>

    In Symbolics 3600 System 242.356, Hardcopy 20.10,
    Experimental Xqsim 23.0, FEP 18, on Lisp Machine Sancho Panza:

    I evaluate this form, and then press <CR> at the prompt.  

    (progn (setq *td* (fs:make-pathname-defaults))
	   (prompt-and-read `(:pathname :default ,*td*))) 

    This should return the default pathname for the defaults, but instead it
    blows up.  The problem seems to be that the function READ-PATHNAME which
    is called by SI:PROMPT-AND-READ-PATHNAME returns DEFAULTS, rather than
    (FS:DEFAULT-PATHNAME DEFAULTS) when it gets a CR as its first character.
    SI:PROMPT-AND-READ-PATHNAME doesn't notice this and tries to send a
    message to it, assuming that it really is a pathname like it should be.

This works correctly for me in the Release 6 beta world I'm running.

    >>Error: The object ((NIL)) is not a valid function
    While in the function ((NIL))  SI:PROMPT-AND-READ-PATHNAME  (:PROPERTY :PATHNAME PROMPT-AND-READ)

    ((NIL)):
       Arg 0: :PRINT-SELF
       Arg 1: #:TERMINAL-IO-SYN-STREAM
       Arg 2: NIL
       Arg 3: NIL

    SI:PROMPT-AND-READ-PATHNAME:  (P.C. = 41)
       Arg 0 (STREAM): #:TERMINAL-IO-SYN-STREAM
       Arg 1 (OPTIONS): ((:PROMPT "Enter a pathname: "))
       Arg 2 (DEFAULT): ((NIL))
       Arg 3 (DEFAULT-VERSION): NIL
       Arg 4 (OR-NIL): NIL

    (:PROPERTY :PATHNAME PROMPT-AND-READ):  (P.C. = 22)
       Arg 0 (STREAM): #:TERMINAL-IO-SYN-STREAM
       Arg 1 (OPTIONS): ((:PROMPT "Enter a pathname: "))
       Rest arg: (:DEFAULT ((NIL)))

    PROMPT-AND-READ:  (P.C. = 135)
       Arg 0 (TYPE): (:PATHNAME :DEFAULT ((NIL)))
       --Defaulted args:--
       Arg 1 (*PROMPT-AND-READ-STRING*-initialization): NIL
       Rest arg (*PROMPT-AND-READ-ARGS*-initialization): NIL

    SI:*EVAL:  (P.C. = 370)
       Arg 0 (FORM): (PROMPT-AND-READ (SI:XR-BQ-LIST (QUOTE :PATHNAME) (QUOTE :DEFAULT) *TD*))

    PROGN:  (P.C. = 22)
       Rest arg (EXPRESSIONS): ((SETQ *TD* (FS:MAKE-PATHNAME-DEFAULTS)) (PROMPT-AND-READ (SI:XR-BQ-LIST (QUOTE :PATHNAME) (QUOTE :DEFAULT) *TD*)))

    SI:*EVAL:  (P.C. = 421)
       Arg 0 (FORM): (PROGN (SETQ *TD* (FS:MAKE-PATHNAME-DEFAULTS)) (PROMPT-AND-READ (SI:XR-BQ-LIST (QUOTE :PATHNAME) (QUOTE :DEFAULT) *TD*)))

    SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 200)
       Rest arg: (:NAME "Lisp Top Level in Lisp Listener 1" :ABORTED-FUNCTION NIL :BEFORE-PROMPT-FUNCTION NIL :READ-FUNCTION NIL :EVAL-FUNCTION NIL ...)

    Rest of stack:
    SI:LISP-COMMAND-LOOP:  (P.C. = 115)
    SI:LISP-TOP-LEVEL1:  (P.C. = 22)
    SI:LISP-TOP-LEVEL:  (P.C. = 7)
27-Dec-84 08:50:44-EST,962;000000000001
Received: from MIT-MC by MIT-OZ via Chaosnet; 27 Dec 84 08:50-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 149483; Thu 27-Dec-84 08:52:01-EST
Date: Thu, 27 Dec 84 08:50 EST
From: "David C. Plummer in disguise" <DCP@SCRC-QUABBIN.ARPA>
Subject: Some comments about (MAKE-SYSTEM ... :BATCH)
To: KMP%MIT-OZ@MIT-MC.ARPA, BUG-LISPM@MIT-MC.ARPA
In-Reply-To: The message of 23 Dec 84 18:55-EST from KMP at MIT-OZ
Message-ID: <841227085000.2.NFEP@NEPONSET.SCRC.Symbolics.COM>

Many of us have never seen :BATCH work.  When we've tried it, it just
doesn't, so we don't.  To be truthful, there aren't many people who want
to go ahead and fix this because we are gearing up to completely
redesign the DEFSYSTEM/MAKE-SYSTEM system (the 'new system system').  If
everything goes on schedule, this will appear in Release 7.

I'll keep your bug around on the off chance I have the time and enough
barf bags to look into it.
27-Dec-84 10:29:55-EST,2711;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 27 Dec 84 10:29-EST
Received: from SCRC-PEACE by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 149530; Thu 27-Dec-84 10:31:12-EST
Date: Thursday, 27 December 1984, 10:31-EST
From: Charles Hornig <Hornig at SCRC-STONY-BROOK>
Subject: a namespace problem ?
To: ehl at MIT-MC, Dinarte R. Morais <DRM at MIT-XX>,
    Richard E. Zippel <RZ at MIT-MC>, Scott McKay <SWM at SCRC-QUABBIN>,
    ckm at SCH-GODZILLA, David A. Moon <Moon at SCRC-TENEX>,
    Bernard S. Greenberg <BSG at SCRC-TENEX>,
    Michael Greenwald <Greenwald at SCRC-STONY-BROOK>,
    BUG-LISPM at MIT-OZ, BEE at SCRC-STONY-BROOK
In-Reply-To: The message of 5 Dec 84 23:51-EST from The Boxer System <Bug-Boxer at MIT-MC>,
             The message of 14 Dec 84 03:00-EST from Dinarte R. Morais <DRM at MIT-XX>,
             The message of 19 Dec 84 13:00-EST from Richard E. Zippel <RZ at MIT-MC>,
             The message of 21 Dec 84 11:22-EST from Dinarte R. Morais <DRM at MIT-XX>,
             The message of 21 Dec 84 15:44-EST from ckm at SCH-GODZILLA,
             <841221160017.5.MOON@EUPHRATES.SCRC.Symbolics.COM>,
             <841226134917.7.BSG@CONCORD.SCRC.Symbolics.COM>
Message-ID: <841227103101.3.HORNIG@PEACE.SCRC.Symbolics.COM>

    Date: Wednesday, 5 December 1984, 23:51-EST
    From: The Boxer System <Bug-Boxer@MIT-MC>

    In Symbolics 3600 Release 5.2, Experimental IP-TCP 15.3, FEP 18, on Lisp Machine Minnie Mouse:

    This seems to be a result of getting the following namespace update

    17:27 It is necessary to change the flavor of namespace object #<LISPM-HOST POINTER 35150620> from FS:LISPM-HOST to NET:HOST.
    This may cause problems in dealing with this object until the next use of
     (SI:FULL-GC :SYSTEM-RELEASE T).

    since NET:HOST doesn't handle this particular message.

    BTW, happens in the 5-2-prime world as well

    >>Error: The object #<HOST POINTER 43214035> received a :OPEN-STREAMS message, which went unclaimed.
	     The rest of the message was ()
    While in the function (:METHOD NET:OBJECT :UNCLAIMED-MESSAGE)  SI:FLAVOR-UNCLAIMED-MESSAGE  SI:INSTANCE-HASH-UNCLAIMED-MESSAGE

...and all similar problems reported recently.

The problem here is that we deleted the host pointer some time ago.  The
release 5.2 namespace system has a bug whereby deletions are sometimes
forgotten.  This means that when you boot your world, it doesn't find
out that Pointer went away.  If Pointer is on FS:*PATHNAME-HOST-LIST*,
as it usually is, this means big trouble.

The quick fix is to splice Pointer's host object out of this list.In the
next release, this should happen automatically.
27-Dec-84 13:41:53-EST,4064;000000000001
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 27 Dec 84 13:41-EST
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 149627; Thu 27-Dec-84 13:40:38-EST
Date: Thursday, 27 December 1984, 13:39-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: Window Selection
To: KMP at MIT-OZ
cc: BUG-LISPM at MIT-OZ, USER-INTERFACE at SCRC-STONY-BROOK
In-Reply-To: The message of 23 Dec 84 23:13-EST from KMP at MIT-OZ
Message-ID: <841227133959.3.MOON@EUPHRATES.SCRC.Symbolics.COM>

    Date: Sunday, 23 December 1984, 23:13-EST
    From:  <KMP at MIT-OZ>

    In Symbolics 3600 System 242.356 ... on Lisp Machine Bing Crosby:

    Summary: This message tells a story about some problems I just 
	     had with the window system (specifically with various
	     aspects of selection) which I claim would have bothered
	     and/or confused novices.

Yes, these are examples of long-standing misdesign in the window system.

    I did c-M from the debugger and sent a bug message.

    I didn't get a chance to read the echo area typeout about where the
    message had been sent, so I wanted to go back to the editor that had
    sent the mail.

    I tried Function S, but that didn't seem to "remember" that I had
    just been in a Mail window.

After you send the mail, the mail window is gone.  Forever.

    So I did (MAIL T). This got me where I wanted to be, but unfortunately
    it cleared the echo area first thing, so I still didn't get to read
    what was typed there.

This got you into a new window that contained the same text.  It didn't
get back the old window.  By coincidence creating the new window recycled
some bits from the representation of the old window, but that was just
a coincidence and it could have taken bits from some other discarded window.

    I guess I should have tried the system menu from the mouse and selected
    the mail frame that way. Perhaps that would have worked.

Nope.  It's gone.

    In any case, I decided I wanted to be back in Lisp because this Mail
    pane didn't have what I wanted. 

    I didn't want to type Abort because I thought that would make it think
    I wanted to be able to un-Abort later with (MAIL T), which I really
    didn't ... and I certainly didn't want to type End, since I figure 
    you guys get enough mail from me already without my ending messages 
    twice ... so I typed Select L.

    This left me in a Lisp talking to the debugger I had started from,
    with a display that looked like:

     c-M
      Eval: (mail t)

    But Lisp isn't listening, because it has busied itself with the Mail 
    window and isn't listening. 

That's right.  I mean, that's a correct diagnosis of the bad thing that
is happening.

				Now, unlike a similar bug that happens
    when you do (INSPECT ...) and re-select the window which you called
    Inspect from, you cannot in the case of MAIL type c-Abort to get Lisp's
    attention back. If you've INSPECT'd an object, c-Abort does get the
    Lisp's attention back.

    Personally, I think these two (INSPECT and MAIL) ought to be 
    consistent on this business of what is done when you type c-Abort 
    on the caller's window (rather than the Inspect or Mail window).
    I realize the control structure of these two is different and that
    INSPECT is probably winning by a fortunate accident, but I still
    think it's right that it does.

    I got a system menu, selected the Mail window, and hit Abort and 
    the world righted itself. I do not, however, believe that a novice
    would necessarily do that. I do believe a novice could easily get
    into this sort of situation. 

I agree.

My comments above are not intended to defend the current state of affairs,
just to help explain what is happening.

In the next release, once we finish implementing the planned set of commands,
things will be somewhat better (sending mail will start an independent window
with an independent process).
27-Dec-84 14:36:19-EST,2455;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 27 Dec 84 14:36-EST
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 149673; Thu 27-Dec-84 14:36:23-EST
Date: Thursday, 27 December 1984, 14:35-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: Compiler -- "Unknown special instance variable ..."
To: Kent M Pitman <KMP at MIT-MC>
cc: BUG-LISPM at MIT-OZ, KBE-I-FILE at MIT-OZ
In-Reply-To: The message of 24 Dec 84 22:02-EST from Kent M Pitman <KMP at MIT-MC>
Message-ID: <841227143546.4.MOON@EUPHRATES.SCRC.Symbolics.COM>

    Date: Monday, 24 December 1984, 22:02-EST
    From: Kent M Pitman <KMP at MIT-MC>

    In Symbolics 3600 System 242.356 ... on Lisp Machine Frank Sinatra:

    When building the PA system in Rel5, I get the following compiler
    diagnostic:

      Warnings for file OZ:PS:<PA>LISPM-INIT
    
	For Flavor PA:EDITING-INPUT-PANE
	  Unknown special instance variable ZWEI:*LAST-FILE-NAME-TYPED*

I believe this is an artifact of the way Release 5.2 was constructed by
patching.  When the system was originally built, there was an instance
variable in ZWEI:EDITOR by that name, but it was removed by a patch
and its storage was recycled for a different instance variable, probably
ZWEI:*CURRENT-YANK-HISTORY*, using the undocumented function
SI:RENAME-INSTANCE-VARIABLE, which evidently has some bugs in it.  It
was done in this kludgey, convoluted way because there were already
existing instances of editors and they needed to switch over to using
the new instance variable.

    The LISPM-INIT file does not define anything. It just constructs the
    system, so I'm not sure why it's associated with this file. Perhaps
    it's only detected at the time the flavor is instantiated and 
    LISPM-INIT is the only file open at the time.

This part is a mystery to me, too.

    In any case, the meaning of "Unknown special instance variable ..."
    is not known to me. 

It's some kind of internal error that you are never "supposed" to see,
I guess.

    The variable is an instance variable of the flavor ZWEI:EDITOR
    (which is defined in SYS: ZWEI; DEFS). That flavor definition
    gives the variable a default initialization and uses the
    :SPECIAL-INSTANCE-VARIABLES option to make it special.

Thanks for reporting this.  As far as I know, you can just ignore the
warning.  It's definitely fixed in the next major release.
30-Dec-84 19:54:18-EST,832;000000000001
Received: from MIT-MC by MIT-OZ via Chaosnet; 30 Dec 84 19:54-EST
Date: Sunday, 30 December 1984, 19:54-EST
From: Kent M Pitman <KMP at MIT-MC>
Subject: prompting for alternate user-id after file login password prompt
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 System 242.356, ... on Lisp Machine Bing Crosby:

I just did m-. to edit a system function. I was asked for a password for
PIG (our SYS host).  I wanted to login Anonymous, so when it asked for
my KMP password, I typed Escape.  It then prompted for a name to log in
as. Sometimes I have seen it say "or Return to login anonymous" or some
such. I wish it had said that this time.  I typed return and it didn't
have any useful default so I had to type "anonymous" myself. If there is
a reason for Anonymous not being the default here, I don't see it. 
-kmp
30-Dec-84 20:04:55-EST,2301;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 30 Dec 84 20:04-EST
Date: Sunday, 30 December 1984, 20:05-EST
From: Kent M Pitman <KMP at MIT-MC>
Subject: Namespace irritation persists
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 System 242.356 (>Release-5-2-prime.load) on Bing Crosby:

If anyone thought the namespace problem was fixed in Rel5.2', I disagree.
Both BONZO and AP6 are up and running (and have been all day, so far as
I know), but this silly machine keeps telling me about SCRC-RIVERSIDE
being down every time I do anything network-related.

It costs a notification or two just to do m-X Bug, and I expect it'll cost
at least one to send it. Ugh.

Here are the notifications I've gotten this session (minus GC notifications):

  19:55 ARPANET|SCRC-RIVERSIDE is believed to be down or unavailable.;
        Obsolete host information may be used.
  19:55 ARPANET|SCRC-RIVERSIDE (at Chaos address 24425) did not respond 
        to a NAMESPACE request.; Obsolete host information may be used.
  19:48 SCRC-RIVERSIDE is believed to be down or unavailable.;
        Obsolete host information may be used.
  17:37 Moving name SCH|FORT from #<LISPM-HOST FORTRESS 14606456> 
        to #<LISPM-HOST SIETCH-TABR 14605725>.
  17:37 Moving name SCH|FORT from #<LISPM-HOST FORTRESS 14606456> 
        to #<LISPM-HOST SIETCH-TABR 14605725>.
  17:37 It is necessary to change the flavor of namespace object
        #<LISPM-HOST POINTER 11662675> from FS:LISPM-HOST to NET:HOST.
        This may cause problems in dealing with this object until the 
        next use of (SI:FULL-GC :SYSTEM-RELEASE T).
  17:33 SCRC-RIVERSIDE is believed to be down or unavailable.;
        Obsolete host information may be used.
  17:33 SCRC-RIVERSIDE is believed to be down or unavailable.;
        Obsolete host information may be used.
  17:32 ARPANET|SCRC-RIVERSIDE (at Chaos address 24425) did not respond
        to a NAMESPACE request.; Obsolete host information may be used.

I've reformatted them, for visual ease. In fact, if it bothered to
format these notifications at least this well, I'd probably not mind
them so much. One of the things that takes them from the level of
"irritation" to "intense irritation" in my mind is that they are
arranged so uglily.
-kmp
31-Dec-84 01:07:30-EST,1469;000000000001
Received: from MIT-MC by MIT-OZ via Chaosnet; 31 Dec 84 01:07-EST
Date: Monday, 31 December 1984, 00:56-EST
From: Kent M Pitman <KMP at MIT-MC>
Subject: Need more flexibility than :BATCH in MAKE-SYSTEM
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 System 242.356, ... on Bing Crosby:

The CWARNS files written by MAKE-SYSTEM's :BATCH option are nice for
some applications but lack a lot for others.

For example, it may be helpful to know in what order MAKE-SYSTEM tried
to compile/load the system. Eg, you can't tell later whether it had
done Compile A, Compile B, Load A, Load B; or Compile A, Load A,
Compile B, Load B ... and this sort of info may be crucial to 
understanding some of the compiler warnings.

Also, if the debugger is entered and some corrective action is taken,
the CWARNS files do not reflect the fact.

Sometimes I want MAKE-SYSTEM to enter the debugger on errors (if I'm
really debugging). Sometimes, though, I'm just trying to see what 
warnings come up and in those cases I wish it would just try to blunder
on past any errors (typing out as much debugging info as possible)
and hope for the best.

I would recommend replacing :BATCH with a set of several options, like
those I've listed below:

  :SAVE-COMPILER-WARNINGS	What :BATCH is now; write a CWARNS file.
  :DRIBBLE			Take a dribble transcript while doing
				 the MAKE-SYSTEM.
  :IGNORE-ERRORS		Try to ignore errors for as long as 
				 possible.
-kmp
31-Dec-84 02:44:15-EST,1675;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 31 Dec 84 02:44-EST
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 150810; Sun 30-Dec-84 23:02:20-EST
Date: Sunday, 30 December 1984, 23:00-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: Namespace irritation persists
To: Kent M Pitman <KMP at MIT-MC>
cc: BUG-LISPM at MIT-OZ
In-Reply-To: The message of 30 Dec 84 20:05-EST from Kent M Pitman <KMP at MIT-MC>
Message-ID: <841230230000.8.MOON@EUPHRATES.SCRC.Symbolics.COM>

    Date: Sunday, 30 December 1984, 20:05-EST
    From: Kent M Pitman <KMP at MIT-MC>

    In Symbolics 3600 System 242.356 (>Release-5-2-prime.load) on Bing Crosby:

    If anyone thought the namespace problem was fixed in Rel5.2', I disagree.

Is it really true that 5.2' is no better than 5.2, or just that it isn't perfect?
(That's for sure).

    Both BONZO and AP6 are up and running (and have been all day, so far as
    I know), but this silly machine keeps telling me about SCRC-RIVERSIDE
    being down every time I do anything network-related.

This is because there is no secondary namespace server for namespace ARPANET
at MIT.  You should create one (but coordinate with a namespace expert in case
creating one is tricky for some reason).  I would suggest making Goldilocks,
Apiary-6, and Reagan secondary servers for ARPANET, since they are all secondary
servers for INTERNET.

Of course, namespace ARPANET is obsolete and ought to go away.  Probably
there is some reason why it can't go away relating to the fragility of
the Rel 5 namespace system, so we have to keep it around for now?
That's just a guess.
 1-Jan-85 04:26:24-EST,1010;000000000001
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 1 Jan 85 04:26-EST
Received: from SCRC-SUDBURY by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 117446; Mon 31-Dec-84 14:18:12-EST
Date: Monday, 31 December 1984, 14:20-EST
From: Richard L. Bryan <RLB at SCRC-TENEX>
Subject: Need more flexibility than :BATCH in MAKE-SYSTEM
To: KMP at MIT-MC, BUG-LISPM at MIT-OZ
In-Reply-To: The message of 31 Dec 84 00:56-EST from Kent M Pitman <KMP at MIT-MC>
Message-ID: <841231142024.4.RLB@SUDBURY.SCRC.Symbolics.COM>

    Date: Monday, 31 December 1984, 00:56-EST
    From: Kent M Pitman <KMP at MIT-MC>

    I would recommend replacing :BATCH with a set of several options, like
    those I've listed below:

      :SAVE-COMPILER-WARNINGS	What :BATCH is now; write a CWARNS file.
      :DRIBBLE			Take a dribble transcript while doing
				     the MAKE-SYSTEM.
      :IGNORE-ERRORS		Try to ignore errors for as long as 
				     possible.
    -kmp
Perhaps :BLUDGEON-ERRORS instead of :IGNORE-ERRORS.
 2-Jan-85 03:50:30-EST,6147;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 2 Jan 85 03:50-EST
Date: Wednesday, 2 January 1985, 03:51-EST
From: Gavan Duffy <GAVAN at MIT-OZ>
Subject: Namespace lossage.
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10,
Experimental RELATUS 131.164, FEP 22, on Lisp Machine Jim Morrison:

Namespace lossage.  Clicked on my babyl file after clicking right on get-inbox
in ZMAIL.

>>Trap: The first argument given to the SYS:INTERNAL-> instruction, NIL, was not a number.
While in the function NETI:GET-LATEST-TIMESTAMP-FROM-NETWORK  NETI:GET-INCREMENTAL-UPDATE-FROM-NETWORK  (:METHOD NETI:NAMESPACE :GET-LATEST-TIMESTAMP)

NETI:GET-LATEST-TIMESTAMP-FROM-NETWORK:  (P.C. = 136)
   Arg 0 (NAMESPACE): #<NAMESPACE ARPANET 20122366>
   Local 1: (#<SERVICE-ACCESS-PATH NAMESPACE-TIMESTAMP (NAMESPACE-TIMESTAMP) -- WAIKATO on CHAOS 62073727> #<SERVICE-ACCESS-PATH NAMESPACE-TIMESTAMP (NAMESPACE-TIMESTAMP) -- SCH|GODZILLA on CHAOS 62073712> #<SERVICE-ACCESS-PATH NAMESPACE-TIMESTAMP (NAMESPACE-TIMESTAMP) -- SCRC-STONY-BROOK on CHAOS 62074551> #<SERVICE-ACCESS-PATH NAMESPACE-TIMESTAMP (NAMESPACE-TIMESTAMP) -- GOLDILOCKS on CHAOS 62074566> #<SERVICE-ACCESS-PATH NAMESPACE-TIMESTAMP (NAMESPACE-TIMESTAMP) -- SCRC-RIVERSIDE on CHAOS 62074617>)
   Local 2 (SERVICES): (#<SERVICE-ACCESS-PATH NAMESPACE-TIMESTAMP (NAMESPACE-TIMESTAMP) -- WAIKATO on CHAOS 62073727> #<SERVICE-ACCESS-PATH NAMESPACE-TIMESTAMP (NAMESPACE-TIMESTAMP) -- SCH|GODZILLA on CHAOS 62073712> #<SERVICE-ACCESS-PATH NAMESPACE-TIMESTAMP (NAMESPACE-TIMESTAMP) -- SCRC-STONY-BROOK on CHAOS 62074551> #<SERVICE-ACCESS-PATH NAMESPACE-TIMESTAMP (NAMESPACE-TIMESTAMP) -- GOLDILOCKS on CHAOS 62074566> #<SERVICE-ACCESS-PATH NAMESPACE-TIMESTAMP (NAMESPACE-TIMESTAMP) -- SCRC-RIVERSIDE on CHAOS 62074617>)
   Local 3 (ARGS): (#<NAMESPACE ARPANET 20122366>)
   Local 4 (SERVICE): #<SERVICE-ACCESS-PATH NAMESPACE-TIMESTAMP (NAMESPACE-TIMESTAMP) -- WAIKATO on CHAOS 62073727>
   Local 5: (#<SERVICE-ACCESS-PATH NAMESPACE-TIMESTAMP (NAMESPACE-TIMESTAMP) -- SCH|GODZILLA on CHAOS 62073712> #<SERVICE-ACCESS-PATH NAMESPACE-TIMESTAMP (NAMESPACE-TIMESTAMP) -- SCRC-STONY-BROOK on CHAOS 62074551> #<SERVICE-ACCESS-PATH NAMESPACE-TIMESTAMP (NAMESPACE-TIMESTAMP) -- GOLDILOCKS on CHAOS 62074566> #<SERVICE-ACCESS-PATH NAMESPACE-TIMESTAMP (NAMESPACE-TIMESTAMP) -- SCRC-RIVERSIDE on CHAOS 62074617>)
   Local 6: #<CASE-HANDLER 20312046>
   Local 7: (#<CASE-HANDLER 20312020> #<CASE-HANDLER 20316506> #<CASE-HANDLER 103054302> #<BIND-HANDLER 20316651> #<BIND-HANDLER 20316647>)
   Local 8: #<DTP-LOCATIVE 43441372>
   Local 9: #<DTP-ODD-PC 11024312>
   Local 10: #<DTP-LOCATIVE 20517630>
   Local 11: #<DTP-LOCATIVE 43441347>
   Local 12 (TS): NIL

NETI:GET-INCREMENTAL-UPDATE-FROM-NETWORK:  (P.C. = 440)
   Arg 0 (NAMESPACE): #<NAMESPACE ARPANET 20122366>
   Arg 1 (STARTING-TIMESTAMP): 151.

(:METHOD NETI:NAMESPACE :GET-LATEST-TIMESTAMP):  (P.C. = 21)
   Arg 0 (SELF): #<NAMESPACE ARPANET 20122366>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NETI:NAMESPACE -- 8. IV's, 0. FL's 55352162>
   Arg 2 (OPERATION): :GET-LATEST-TIMESTAMP

(:METHOD NETI:NAMESPACE :VALIDATION-TIMESTAMP):  (P.C. = 20)
   Arg 0 (SELF): #<NAMESPACE ARPANET 20122366>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor NETI:NAMESPACE -- 8. IV's, 0. FL's 55352162>
   Arg 2 (OPERATION): :VALIDATION-TIMESTAMP

NETI:FIND-OBJECT-NAMED-IN-NAMESPACE:  (P.C. = 65)
   Arg 0 (CLASS): :HOST
   Arg 1 (NAME): "JPL-VLSI"
   Arg 2 (NAMESPACE): #<NAMESPACE ARPANET 20122366>
   Arg 3 (ERROR-P): NIL

ZWEI:ADDRESS-DOMAIN-HOST-INDICATOR:  (P.C. = 120)
   Arg 0 (ATSIGN): (ZWEI:ATSIGN 64. ("    From: Larry Carroll <LARRY@JPL-VLSI.ARPA>" 31.))
   Arg 1 (HOST): (("JPL-VLSI" "ARPA") ("    From: Larry Carroll <LARRY@JPL-VLSI.ARPA>" 31.) ("    From: Larry Carroll <LARRY@JPL-VLSI.ARPA>" 44.))

SI:*EVAL:  (P.C. = 370)
   Arg 0 (FORM): (ZWEI:ADDRESS-DOMAIN-HOST-INDICATOR (ZWEI:IDENTITY (QUOTE (ZWEI:ATSIGN 64. **))) (ZWEI:ADDRESS-APPEND-DOMAINS-1 (ZWEI:IDENTITY (QUOTE **)) (QUOTE (ZWEI:PERIOD 46. **)) (ZWEI:IDENTITY (QUOTE **))))

SI:*EVAL:  (P.C. = 356)
   Arg 0 (FORM): (ZWEI:ADDRESS-HOST-PHRASE (ZWEI:IDENTITY (ZWEI:IDENTITY (CDR **))) (ZWEI:ADDRESS-DOMAIN-HOST-INDICATOR (ZWEI:IDENTITY (QUOTE **)) (ZWEI:ADDRESS-APPEND-DOMAINS-1 (ZWEI:IDENTITY **) (QUOTE **) (ZWEI:IDENTITY **))))

Rest of stack:
SI:*EVAL:  (P.C. = 356)
SI:*EVAL:  (P.C. = 356)
SI:*EVAL:  (P.C. = 356)
SI:*EVAL:  (P.C. = 356)
ZWEI:PARSE-DRIVER:  (P.C. = 156)
ZWEI:PARSE:  (P.C. = 37)
ZWEI:PARSE-ADDRESSES:  (P.C. = 15)
ZWEI:GET-MSG-TEXT-REFERENCES:  (P.C. = 235)
ZWEI:GET-MSG-REFERENCES:  (P.C. = 131)
ZWEI:MSG-REFERENCES:  (P.C. = 20)
(:METHOD ZWEI:REFERENCE-HASH-TABLE-MIXIN :ADD-AND-XREF-MSG):  (P.C. = 25)
(:METHOD ZWEI:UNIVERSE-SEQUENCE-MIXIN :XREF-MSG):  (P.C. = 7)
(:METHOD ZWEI:UNIVERSE-SEQUENCE-MIXIN :AFTER :NEW-MSG):  (P.C. = 10)
(:METHOD ZWEI:BABYL-BUFFER :COMBINED :NEW-MSG):  (P.C. = 16)
ZWEI:INSERT-INBOX:  (P.C. = 432)
(:METHOD ZWEI:INBOX-BUFFER :LOADING-DONE):  (P.C. = 67)
(:INTERNAL (:METHOD ZWEI:TENEX-INBOX-BUFFER :COMBINED :LOADING-DONE) 0.):  (P.C. = 10)
(:METHOD ZWEI:MSG-BUFFER :WHOPPER :LOADING-DONE):  (P.C. = 32)
(:METHOD ZWEI:TENEX-INBOX-BUFFER :COMBINED :LOADING-DONE):  (P.C. = 12)
(:METHOD ZWEI:MSG-BUFFER :READ-NEXT-MSG):  (P.C. = 245)
(:INTERNAL (:METHOD ZWEI:TENEX-INBOX-BUFFER :COMBINED :READ-NEXT-MSG) 0.):  (P.C. = 10)
(:METHOD ZWEI:MSG-BUFFER :WHOPPER :READ-NEXT-MSG):  (P.C. = 165)
(:METHOD ZWEI:TENEX-INBOX-BUFFER :COMBINED :READ-NEXT-MSG):  (P.C. = 12)
ZWEI:GET-INBOX-FOR-BUFFER:  (P.C. = 174)
ZWEI:COM-GET-INBOX-INTERNAL:  (P.C. = 253)
ZWEI:COM-GET-NEW-MAIL-FROM-INBOX:  (P.C. = 7)
ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
ZWEI:ZMAIL-COMMAND-EXECUTE:  (P.C. = 6)
(:INTERNAL ZWEI:ZMAIL-COMMAND-LIST 0.):  (P.C. = 10)
ZWEI:ZMAIL-COMMAND-LIST:  (P.C. = 12)
(:METHOD ZWEI:ZMAIL-FRAME :PROCESS-SPECIAL-COMMAND):  (P.C. = 16)
(:METHOD ZWEI:ZMAIL-FRAME :COMMAND-LOOP):  (P.C. = 141)
(:METHOD ZWEI:ZMAIL-FRAME :COMBINED :COMMAND-LOOP):  (P.C. = 47)
ZWEI:ZMAIL-PROCESS-TOP-LEVEL:  (P.C. = 52)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
 2-Jan-85 11:24:12-EST,2124;000000000001
Received: from SCC-WAIKATO by MIT-OZ via Chaosnet; 2 Jan 85 11:24-EST
Received: from SCRC-PEACE by WAIKATO via CHAOS with CHAOS-MAIL id 73403; Wed 2-Jan-85 11:22:13-EST
Date: Wednesday, 2 January 1985, 11:25-EST
From: Charles Hornig <Hornig at SCRC-STONY-BROOK>
Subject: Namespace irritation persists
To: David A. Moon <Moon at SCRC-TENEX>, Kent M Pitman <KMP at MIT-MC>
cc: BUG-LISPM at MIT-OZ
In-Reply-To: <841230230000.8.MOON@EUPHRATES.SCRC.Symbolics.COM>
Message-ID: <850102112530.4.HORNIG@PEACE.SCRC.Symbolics.COM>

    Date: Sunday, 30 December 1984, 23:00-EST
    From: David A. Moon <Moon at SCRC-TENEX>

	Date: Sunday, 30 December 1984, 20:05-EST
	From: Kent M Pitman <KMP at MIT-MC>

	In Symbolics 3600 System 242.356 (>Release-5-2-prime.load) on Bing Crosby:

	If anyone thought the namespace problem was fixed in Rel5.2', I disagree.

    Is it really true that 5.2' is no better than 5.2, or just that it isn't perfect?
    (That's for sure).

	Both BONZO and AP6 are up and running (and have been all day, so far as
	I know), but this silly machine keeps telling me about SCRC-RIVERSIDE
	being down every time I do anything network-related.

    This is because there is no secondary namespace server for namespace ARPANET
    at MIT.  You should create one (but coordinate with a namespace expert in case
    creating one is tricky for some reason).  I would suggest making Goldilocks,
    Apiary-6, and Reagan secondary servers for ARPANET, since they are all secondary
    servers for INTERNET.

    Of course, namespace ARPANET is obsolete and ought to go away.  Probably
    there is some reason why it can't go away relating to the fragility of
    the Rel 5 namespace system, so we have to keep it around for now?
    That's just a guess.

The ARPANET namespace is obsolete and should go away.  I can't make it
go away until all of the release 5 systems are gone from the
MIT/Symbolics networks.  I made MIT systems not be secondaries for it
because, given the unreliability of secondaries in rel 5, I thought
things would be better this way.  I may be wrong.
 2-Jan-85 11:37:23-EST,1745;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 2 Jan 85 11:37-EST
Date: Wednesday, 2 January 1985, 11:37-EST
From: CJL at MIT-OZ
Sender: LISPM at MIT-MC
Subject: si:full-gc blowout: Trying to wire 1563. pages when only 1760. are available
To: BUG-LISPM at MIT-OZ

In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 24,
Namespace Server, on Lisp Machine Ronald Reagan:

I was doing a (si:full-gc :system-release t).
Reagan has only 512K words of physical memory.

>>Error: Trying to wire 1563. pages when only 1760. are available
While in the function SYS:WIRED-FERROR  SI:WIRE-WORDS  SI:WIRE-STRUCTURE

SYS:WIRED-FERROR:  (P.C. = 21)
   Arg 0 (TYPE): NIL
   Rest arg (ARGS): ("Trying to wire ~D. pages when only ~D. are available" 3033 3340)

SI:WIRE-WORDS:  (P.C. = 35)
   Arg 0 (ADDRESS): #<ART-Q-1415157 24240000>
   Arg 1 (N-WORDS): 1415162

SI:WIRE-STRUCTURE:  (P.C. = 12)
   Arg 0 (OBJ): #<ART-Q-1415157 24240000>

SI:CONDENSE-DEBUG-INFO:  (P.C. = 50)

SI:*EVAL:  (P.C. = 370)
   Arg 0 (FORM): (SI:CONDENSE-DEBUG-INFO)

COND:  (P.C. = 23)
   Rest arg (CLAUSES): ((SI:*FULL-GC-FOR-SYSTEM-RELEASE* (SI:CONDENSE-DEBUG-INFO)) (T NIL))

SI:*EVAL:  (P.C. = 421)
   Arg 0 (FORM): (SI:DISPLACED (IF SI:*FULL-GC-FOR-SYSTEM-RELEASE* (SI:CONDENSE-DEBUG-INFO)) (COND (SI:*FULL-GC-FOR-SYSTEM-RELEASE* (SI:CONDENSE-DEBUG-INFO)) (T NIL)))

INITIALIZATIONS:  (P.C. = 42)
   Arg 0 (LIST-NAME): SI:FULL-GC-INITIALIZATION-LIST
   Arg 1 (REDO-FLAG): T
   --Defaulted args:--
   Arg 2 (FLAG): T

Rest of stack:
SI:FULL-GC:  (P.C. = 42)
SI:*EVAL:  (P.C. = 370)
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 200)
SI:LISP-COMMAND-LOOP:  (P.C. = 115)
SI:LISP-TOP-LEVEL1:  (P.C. = 22)
SI:LISP-TOP-LEVEL:  (P.C. = 7)
 2-Jan-85 12:23:31-EST,2401;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 2 Jan 85 12:23-EST
Received: from SCRC-NEPONSET by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 151336; Wed 2-Jan-85 12:19:11-EST
Date: Wednesday, 2 January 1985, 12:17-EST
From: David C. Plummer <DCP at SCRC-QUABBIN>
Subject: si:full-gc blowout: Trying to wire 1563. pages when only 1760. are available
To: CJL at MIT-OZ, BUG-LISPM at MIT-OZ
cc: Bug-LMDoc at SCRC-QUABBIN
In-Reply-To: The message of 2 Jan 85 11:37-EST from CJL at MIT-OZ
Message-ID: <850102121702.6.DCP@NEPONSET.SCRC.Symbolics.COM>

    Date: Wednesday, 2 January 1985, 11:37-EST
    From: CJL at MIT-OZ

    In Symbolics 3600 System 242.356, Hardcopy 20.10, FEP 24,
    Namespace Server, on Lisp Machine Ronald Reagan:

    I was doing a (si:full-gc :system-release t).
    Reagan has only 512K words of physical memory.

It may be true that the documentation for Release 6 will tell you you
must have at least two memory boards to do a (SI:FULL-GC :SYSTEM-RELEASE T).

    >>Error: Trying to wire 1563. pages when only 1760. are available
    While in the function SYS:WIRED-FERROR  SI:WIRE-WORDS  SI:WIRE-STRUCTURE

    SYS:WIRED-FERROR:  (P.C. = 21)
       Arg 0 (TYPE): NIL
       Rest arg (ARGS): ("Trying to wire ~D. pages when only ~D. are available" 3033 3340)

    SI:WIRE-WORDS:  (P.C. = 35)
       Arg 0 (ADDRESS): #<ART-Q-1415157 24240000>
       Arg 1 (N-WORDS): 1415162

    SI:WIRE-STRUCTURE:  (P.C. = 12)
       Arg 0 (OBJ): #<ART-Q-1415157 24240000>

    SI:CONDENSE-DEBUG-INFO:  (P.C. = 50)

    SI:*EVAL:  (P.C. = 370)
       Arg 0 (FORM): (SI:CONDENSE-DEBUG-INFO)

    COND:  (P.C. = 23)
       Rest arg (CLAUSES): ((SI:*FULL-GC-FOR-SYSTEM-RELEASE* (SI:CONDENSE-DEBUG-INFO)) (T NIL))

    SI:*EVAL:  (P.C. = 421)
       Arg 0 (FORM): (SI:DISPLACED (IF SI:*FULL-GC-FOR-SYSTEM-RELEASE* (SI:CONDENSE-DEBUG-INFO)) (COND (SI:*FULL-GC-FOR-SYSTEM-RELEASE* (SI:CONDENSE-DEBUG-INFO)) (T NIL)))

    INITIALIZATIONS:  (P.C. = 42)
       Arg 0 (LIST-NAME): SI:FULL-GC-INITIALIZATION-LIST
       Arg 1 (REDO-FLAG): T
       --Defaulted args:--
       Arg 2 (FLAG): T

    Rest of stack:
    SI:FULL-GC:  (P.C. = 42)
    SI:*EVAL:  (P.C. = 370)
    SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 200)
    SI:LISP-COMMAND-LOOP:  (P.C. = 115)
    SI:LISP-TOP-LEVEL1:  (P.C. = 22)
    SI:LISP-TOP-LEVEL:  (P.C. = 7)
 2-Jan-85 15:18:23-EST,2065;000000000001
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 2 Jan 85 15:18-EST
Received: from SCRC-PEACE by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 151509; Wed 2-Jan-85 15:22:06-EST
Date: Wednesday, 2 January 1985, 15:19-EST
From: Charles Hornig <Hornig at SCRC-STONY-BROOK>
Subject: pathname problems
To: Richard E. Zippel <RZ at MIT-MC>, Moon at SCRC-TENEX
cc: BUG-LISPM at MIT-OZ
In-Reply-To: The message of 14 Dec 84 15:10-EST from Richard E. Zippel <RZ at MIT-MC>
Message-ID: <850102151916.5.HORNIG@PEACE.SCRC.Symbolics.COM>

    Date: Friday, 14 December 1984, 15:10-EST
    From: Richard E. Zippel <RZ at MIT-MC>

	Date: Thursday, 13 December 1984, 16:09-EST
	From: David A. Moon <Moon at SCRC-TENEX>

	    Date: Monday, 10 December 1984, 15:04-EST
	    From: Richard E. Zippel <RZ at MIT-MC>

	    In Symbolics 3600 System 242.356, Hardcopy 20.10,
	    Experimental Schema 54.0, FEP 24, on GSTAAD:

	    ...

	    My init file then checks to see if vx is a 42 site, and not allows me to
	    change it locally, from UNIX to UNIX42.  The problem is that since I had
	    previously opened the file as UNIX file, the pathname-hash-table has a
	    UNIX pathname in it not a UNIX42 pathname, and all attempts to reference
	    the file file  (claims that .../lispm-init.lis is not found).  It would
	    be nice if when the system type of a host is changed, the pathname hash
	    table were cleared.

	Exactly how are you changing the system type?  When the system type of a host
	is changed, the pathname hash table -is- cleared.  So either there's something
	peculiar about the way you are changing the system type, or my memory of how
	this worked in Release 5.2 is incorrect.

    I change the system type by using the namespace-editor.  I couldn't find
    anyplace were the changing the system type cleared the pathname hash
    table in our sources, but I probably wasn't looking in the right places.

The code for fixing up the pathname hash tables didn't make it into
release 5.  It will be in release 6.