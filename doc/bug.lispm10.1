Date: Thursday, 11 March 1982, 00:42-EST
From: David L. Andre <DLA at SCRC-TENEX>
To: dlw at MIT-AI
Cc: BUG-LISPM at SCRC-TENEX, DLA at SCRC-TENEX

    Date: Wednesday, 10 March 1982, 21:18-EST
    From: Daniel L. Weinreb <dlw at MIT-AI>

    Doing Meta-X List All Directories on EE does not seem to work.  The file server
    hangs; the who line shows that it is trying to access "EE:LIB:<*>", I think.

Actually, you are confused.  Due to the cretinous implementation of the
TOPS-20 file system, List All Directories takes forever.  (Note how long
it takes to do it in the command processor.)  This "forever" happens
before the directory list is sent, giving the impression that the server
is hung.  But if you wait for a few minutes...

Date: Thursday, 11 March 1982, 00:03-EST
From: Daniel Huttenlocher <dph at MIT-AI>
To: jis at ai
Cc: BUG-LISPM at SCRC-TENEX

In Experimental System 204.18, Experimental ZMail 42.1, microcode 865,
on Lisp Machine Twenty-two:

When the system load on ee is too high, file jobs are not allowed to log
in.  This seems like a loss, since a file job is necessary for doing
things like loading patches for the Symbolics lisp machine software on
mit lisp machines.  In addition, file jobs do not using up much of
system resources.

Date: Wednesday, 10 March 1982, 23:38-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: Converse slow to start up
To: dlw at SCRC-TENEX, agre at MIT-AI
Cc: bug-lispm at SCRC-TENEX

In any system earlier than 204.4 Converse creates its window the first time
you send or receive a message, which is the main reason why it is so painfully
slow.  Actually it already has a window, but gets confused and creates another
one.  I believe this includes system 79.

However from the very earliest discussions about Converse over a year
ago I always advocated having a mode in which each conversation was in a
separate, small window, so I certainly like your suggestion of a user option
to make it "behave like qsend".  It seems a shame though to base a decision
on how it should look on a broken version (the one currently installed at MIT).

Dan, you're at MIT more often than me.  Whichever of us gets to it first
should install AI:MOON;204.4 as a patch and delete the file.

Date: 10 March 1982 21:36-EST
From: Philip E. Agre <AGRE at MIT-AI>
To: BUG-LISPM at MIT-AI

In System 79.21, ZMail 40.7, Remote-File 2.0, LMFILE-Remote 5.3,
microcode 849, Eye-saving, on Lisp Machine Six:

Whatever Converse is, it takes far far too long to happen on the first :LMSEND
FOO@CADR-6 ... C.  Even apart from being highly disconcerting (what is one to
think when suddenly while editing one's program one's cadr's run light turns on
and lots of hairy-looking swapping and thrashing happens for as much as five
seconds?) this is quite a waste since in most cases only the most basic features
(i.e., those provided under the previous regime of simple pop-up windows) are
used.  Perhaps you could bring back the previous system with an option to move
to Converse if you want to do something hairy.     - phIl

Date: Wednesday, 10 March 1982, 21:26-EST
From: Daniel L. Weinreb <dlw at MIT-AI>
Subject: Converse
To: bug-lispm at MIT-AI

Several people have complained about Converse.  Some think that it is
too slow; it just takes too long to pop up.  Others complain that they
don't like the whole screen to change; they say it is too visually
shocking and gross.  Others don't WANT to see the previous history of
the conversation.

One possible change would be to put in a new Converse option, similar to
the option that says that you should only get a notification when a
message arrives.  This new option would say that when a message arrives,
a little window should pop up just as it used to in the days before
Converse.  This would work as before, except that in addition to Y and
N, you could also say "C" and have the little window go away and have
the full Converse appear just as it it always had been there.  Does
this sound like it would be useful?

Date: Wednesday, 10 March 1982, 21:18-EST
From: Daniel L. Weinreb <dlw at MIT-AI>
To: BUG-LISPM at SCRC-TENEX

In Experimental System 204.18, Experimental ZMail 42.1, microcode 865, on Lisp Machine Twenty-two:

Doing Meta-X List All Directories on EE does not seem to work.  The file server
hangs; the who line shows that it is trying to access "EE:LIB:<*>", I think.

Date: Wednesday, 10 March 1982, 18:11-EST
From: David L. Andre <DLA at SCRC-TENEX>
Subject: Compiler warnings with :INTERNAL function specs.
To: dlw at SCRC-TENEX, BUG-LISPM at SCRC-TENEX

Fixed and will be patched tonight.  It was a case of CAADAR versus
CADAAR.

Anyway, I found another bug.  Compiling the function:

(DEFUN FOO ()
  (MAPATOMS-ALL #'(LAMBDA (X) (IGNORE ME))))

produces these warnings:
  
  For Function (INTERNAL FOO 0)
    ME declared special
  
  For Function FOO
    X is bound but is never used

The reason for its confusion is that "bound but never used" warnings are
not issued until each internal function has had its chance to declare
the variable special.  Any ideas on what to do about this?

Date: Wednesday, 10 March 1982, 17:43-EST
From: David L. Andre <DLA at SCRC-TENEX>
To: dlw at SCRC-TENEX
Cc: bug-lispm at SCRC-TENEX, DLA at SCRC-TENEX

    Date: Tuesday, 9 March 1982, 21:34-EST
    From: Daniel L. Weinreb <dlw at SCRC-TENEX>
    Can anyone tell me why LOAD-INIT-FILE-P is a special variable?  If nobody
    says anything, I am going to flush it; it looks confused.
I originally made the arguments to LOGIN be special so that they were
accessible to the LOGIN init list.  I was planning on changing this for
other reasons before the release of 204, because the one LOGIN
initialization which uses it really belongs in the LOGIN function anyway.

Date: Wednesday, 10 March 1982  15:37-EST
From: HIC at SCRC-TENEX
To:   MMCM at SCRC-TENEX
Cc:   bug-lispm at SCRC-TENEX

    Date: Wednesday, 10 March 1982  13:44-EST
    From: MMCM
    To:   HIC
    cc:   bug-lispm

        Date: Tuesday, 9 March 1982  23:32-EST
        From: HIC at SCRC-TENEX
            Date: Monday, 8 March 1982, 22:23-EST
            From: Mike McMahon <LMACH at SCRC-POINTER>
            Warm booting (or it's equivalent really) with PACKAGE bound to NIL does
            not work, since the PKG-GOTO that tries to fix it up need the old value
            of PACKAGE to work.  Presumably (SETQ PACKAGE PKG-USER-PACKAGE) is what
            it is really trying to do.

        And while you're hacking that code, make warm booting set the package
        back to the last PKG-GOTO done (or similar), instead if to PKG-USER-PACKAGE.
    This has been proposed many times before and rejected.
I disagree.  It has been proposed many times, and ACCEPTED.  No one has had the
energy to do anything about it, however.

Date: Wednesday, 10 March 1982  13:44-EST
From: MMCM at SCRC-TENEX
To:   HIC at SCRC-TENEX
Cc:   bug-lispm at SCRC-TENEX

    Date: Tuesday, 9 March 1982  23:32-EST
    From: HIC at SCRC-TENEX
        Date: Monday, 8 March 1982, 22:23-EST
        From: Mike McMahon <LMACH at SCRC-POINTER>
        Warm booting (or it's equivalent really) with PACKAGE bound to NIL does
        not work, since the PKG-GOTO that tries to fix it up need the old value
        of PACKAGE to work.  Presumably (SETQ PACKAGE PKG-USER-PACKAGE) is what
        it is really trying to do.

    And while you're hacking that code, make warm booting set the package
    back to the last PKG-GOTO done (or similar), instead if to PKG-USER-PACKAGE.
This has been proposed many times before and rejected.

Date: Wednesday, 10 March 1982  10:14-EST
From: JEK at SCRC-TENEX
To:   Daniel L. Weinreb <dlw at SCRC-TENEX>
Cc:   BUG-LISPM at MIT-AI, JMTURN at MIT-AI

    Date: Tuesday, 9 March 1982, 23:37-EST
    From: Daniel L. Weinreb <dlw>
    To:   JMTURN at MIT-AI, BUG-LISPM at MIT-AI

    What do people think: should the options list variable only be bound
    during the init file reading, or should it be set to the list and reset
    by logging out?
I think it would be more useful as "session" options rather than "init-file"
options.

Date: Tuesday, 9 March 1982, 18:45-EST
From: David Chapman <Zvona at MIT-AI>
To: DLA at SCRC-TENEX, DANNY at MIT-AI
Cc: BUG-KBE at MIT-AI, BUG-LISPM at MIT-AI
In-reply-to: The message of 9 Mar 82 14:21-EST from David L. Andre <DLA at SCRC-TENEX>

    Date: Tuesday, 9 March 1982, 14:21-EST
    From: David L. Andre <DLA at SCRC-TENEX>
    To: DANNY at MIT-AI
    Cc: BUG-LISPM at MIT-AI, DLA at SCRC-TENEX

	Date: 9 March 1982 08:24-EST
	From: Danny Hillis <DANNY at MIT-AI>
	To: BUG-LISPM at MIT-AI

	In System 79.23, ZMail 40.7, Remote-File 2.0, LMFILE-Remote 5.3,
	Programmer's Apprentice 21.7, microcode 849, PA 21.7, on Lisp Machine Twenty-two:

	Reader gets mixed up on backarrowed numbers with point at end. Example:

	(setq a 1_15.) => errror: Special token Close read after dot.
    This does not happen in any 78, 79, or 204 which I've tried, so my best
    guess is that Programmer's Apprentice munged the reader or readtable
    somehow.
Yes.  This keeps screwing us too, so it will probably be fixed
soon.  Kent, my Zmacs hacks have a better solution to 5PART than
using underbar.  I don't know where else it is used.

Date: Tuesday, 9 March 1982 08:14-PST
From: Chris Ryland <Ryland at SRI-KL>
To:   BUG-LISPM at MIT-AI

    From: <HES at SCRC-POINTER>
    just imagine the look on Mr. Hewlett or Mr. Packard's face when
    they see that one.

It wasn't as interesting as the look when both of them saw the "File
system fucked" background window pop up.

Date: 10 March 1982 00:36-EST
From: James M. Turner <JMTURN at MIT-AI>
To: BUG-LISPM at MIT-AI

It's not clear that (LOGIN "me" "xx" ':my-personal-frob 'foo) should
work. The reason I wanted the (LOGIN "ME" "XX") form to work was to maintain
some downward compatibility, but I suppose there's no real reason to make
it prohibited. As to where the options list variable should be bound,
it might be slightly more general to make it a login-setq (can login have
a login-setq inside it?). 
					James

Date: Tuesday, 9 March 1982, 23:37-EST
From: Daniel L. Weinreb <dlw at SCRC-TENEX>
To: JMTURN at MIT-AI, BUG-LISPM at MIT-AI

OK, then I guess we'll wait a little longer to see if anyone claims to
understand what LOAD-INIT-FILE-P is about, since to remove it is not
upward-compatible.  If nobody speaks up, it goes away.

As for your proposed change: first, your choice of keywords is all
wrong.  First of all, what you call ":site" is not what "site" means in
the Lisp Machine software.  A "site" is something else entirely.  This
option specifies which host to log into, and probably the best name
would be ":host".  ":login-p" is also a bad name, since it does not
control whether or not you log in.  It controls whether or not the init
file is loaded, and so it should be called something having to do with
the init file, such as "init-p".  As for "message", it seems much better
to just let the rest of the options be user-defined, and have user programs
look at the list using GET to get at whatever options they want to get at.
So this keyword shouldn't exist at all.

You seem to be proposing that (login "me" "xx") continue to work; login
would see that the second arg is not a keyword symbol.  Presumably you
could give more options after the host name, as if you had started
with (login "me" ':host "xx").  I guess T as a second arg would
continue to mean that the host is defaulted and the init file
is not loaded.  This is all really kludgey and should be replace
in the Great Eventuality by a reasonable kind of command processor
some day.

What do people think: should the options list variable only be bound
during the init file reading, or should it be set to the list and reset
by logging out?

Date: Tuesday, 9 March 1982  23:32-EST
From: HIC at SCRC-TENEX
cc:   Mike McMahon <LMACH at SCRC-POINTER>
to:   bug-lispm at SCRC-TENEX


    Date: Monday, 8 March 1982, 22:23-EST
    From: Mike McMahon <LMACH at SCRC-POINTER>
    To:   bug-lispm at SCRC-POINTER

    Warm booting (or it's equivalent really) with PACKAGE bound to NIL does
    not work, since the PKG-GOTO that tries to fix it up need the old value
    of PACKAGE to work.  Presumably (SETQ PACKAGE PKG-USER-PACKAGE) is what
    it is really trying to do.

And while you're hacking that code, make warm booting set the package
back to the last PKG-GOTO done (or similar), instead if to PKG-USER-PACKAGE.

Date: Tuesday, 9 March 1982, 23:06-EST
From: Daniel L. Weinreb <dlw at SCRC-TENEX>
Subject: Flavor init keywords
To: bug-lispm at SCRC-TENEX
Cc: doc at SCRC-TENEX, doc-changes at SCRC-TENEX

I added SI:FLAVOR-ALLOWED-INIT-KEYWORDS.  This function takes a flavor
name and returns a sorted list of all allowed init keywords.  This is
especially useful for people trying to write documentation about a
particular flavor, so that they can find out all of the valid init
options and make sure to document them.

Date: Tuesday, 9 March 1982, 22:53-EST
From: Daniel L. Weinreb <dlw at SCRC-TENEX>
To: BUG-LISPM at SCRC-TENEX

In Experimental System 204.18, Experimental ZMail 42.1,
Experimental LMFS 23.15, Experimental Tape 8.0,
Experimental Symbolics 10.1, Experimental Canon 12.1, microcode 865, on Retriever:

I fixed a bug in the following function (the bug was that FLAVOR was
misspelled inside the internal function).

(DEFUN FLAVOR-ALLOWED-INIT-KEYWORDS (FLAVOR-NAME)
  (LOCAL-DECLARE ((SPECIAL INIT-KEYWORDS))
    (LET ((INIT-KEYWORDS NIL))
      (MAP-OVER-COMPONENT-FLAVORS 0 T NIL
	  #'(LAMBDA (FLAVOR IGNORE)
	      (DOLIST (K (FLAVOR-INITABLE-INSTANCE-VARIABLES FLAVOR))
		(PUSH* (CAR K) INIT-KEYWORDS))
	      (DOLIST (K (FLAVOR-INIT-KEYWORDS FLAVOR))
		(PUSH* K INIT-KEYWORDS)))
	  FLAVOR-NAME NIL)
      (SORT INIT-KEYWORDS #'ALPHALESSP))))

I tried recompiling after fixing the bug.  The function
COMPILER:RESET-FUNCTION-WARNINGS blew out trying to take caadar of w,
while w had the value:

(((INTERNAL SI:FLAVOR-ALLOWED-INIT-KEYWORDS 0)
  DEFUN
  ("~S ~A" SI:FL COMPILER:|declared special|))
 (SI:FLAVOR-ALLOWED-INIT-KEYWORDS DEFUN ("~S ~A" SI:FLAVOR "is bound but is never used")))

That is, it tried to take CAR of the symbol DEFUN.

Date: 9 March 1982 22:46-EST
From: James M. Turner <JMTURN at MIT-AI>
To: BUG-LISPM at MIT-AI

I did not put in LOAD-INIT-FILE-P, so I can't help you there.
What I am recomending is this. Presently, LOGIN looks like this:
(LOGIN user site load-init-file)

I'd like to change it to:
(LOGIN user options)
where options is one or more of the following:
':site host (where host is the site the user should be loged into)
':login-p t-or-nil (whether to load the init file)
':message whatever (A list to bind the well advertised symbol to, for LOGIN
files to access).
So sample logins would looks like this:

(login "jmturn" ':site 'ai ':message 'run-mutt)
(login "jmturn" ':login-p nil)
(login "jmturn")

Note that if the first symbol after the user is not a keyword, it would
parse the options old-style.

			James

Date: Tuesday, 9 March 1982, 22:35-EST
From: Daniel L. Weinreb <dlw at SCRC-TENEX>
Subject: Login Option
To: JMTurn at MIT-AI, BUG-LISPM at MIT-AI

I was just about to try to do this, when I found that LOAD-INIT-FILE-P
was declared special, and I was wondering what programs looked at it.  I
am told that you (JMTurn) did this, so that it could be used as a list
of options that init files could look at.  If so, calling it
LOAD-INIT-FILE-P is not the clearest possible name.  In any case, I was
just going to change LOGIN to take its third argument as a &REST
argument, bind a well-advertised variable to (a copy of) that list, and
let any init file parse it by itself (by using GET).  There's no
particular reason for LOGIN to do the parsing specially for the whole
list.  Do you mean that you have ideas for three options called :site,
:login-p, and :message, and users could add more?  If so, what would
these three options each mean?  Do you know any good reason for
LOAD-INIT-FILE-P to be special?  Note that we probably want to have a
kludge such that if the rest argument were (T), the old thing happens
for compabitility.

Date: 9 March 1982 14:22-EST
From: Alan Bawden <ALAN at MIT-MC>
To: DANNY at MIT-MC
cc: BUG-LISPM at MIT-MC

    Date: 9 March 1982 08:24-EST
    From: Danny Hillis <DANNY at MIT-AI>

    (setq a 1_15.) => errror: Special token Close read after dot.

It doesn't do this for me.  Are you sure you wern't being faked out somehow?

Date: Tuesday, 9 March 1982, 21:47-EST
From: James M. Turner <JMTurn at MIT-AI>
Subject: Login Option
To: BUG-LISPM at MIT-AI
Cc: JMTURN at MIT-AI

In System 79.24, ZMail 40.7, Remote-File 2.0, LMFILE-Remote 5.3,
microcode 849, 79.24, on Lisp Machine Seven:

Once apon a time, there was discussion of key-word-izing LOGIN so that
we could have a special variable that LOGIN files could access. If no
one has any strenous objections, I'd like to put in some code to do
so. It would take it's arguments as an &rest option, and would parse
them the old way if the first thing on the list was not a keyword. The
keywords would be ':site ':login-p and ':message. The argument to
message would be bound to GLOBAL:*LOGIN-OPTION* and the login file could
do with it as it wanted. Any suggestions or other keywords you'd like to
see?

					James

Date: Tuesday, 9 March 1982, 21:34-EST
From: Daniel L. Weinreb <dlw at SCRC-TENEX>
To: bug-lispm at SCRC-TENEX

Can anyone tell me why LOAD-INIT-FILE-P is a special variable?  If nobody
says anything, I am going to flush it; it looks confused.

Date: Tuesday, 9 March 1982, 14:21-EST
From: David L. Andre <DLA at SCRC-TENEX>
To: DANNY at MIT-AI
Cc: BUG-LISPM at MIT-AI, DLA at SCRC-TENEX

    Date: 9 March 1982 08:24-EST
    From: Danny Hillis <DANNY at MIT-AI>
    To: BUG-LISPM at MIT-AI

    In System 79.23, ZMail 40.7, Remote-File 2.0, LMFILE-Remote 5.3,
    Programmer's Apprentice 21.7, microcode 849, PA 21.7, on Lisp Machine Twenty-two:

    Reader gets mixed up on backarrowed numbers with point at end. Example:

    (setq a 1_15.) => errror: Special token Close read after dot.
This does not happen in any 78, 79, or 204 which I've tried, so my best
guess is that Programmer's Apprentice munged the reader or readtable
somehow.

Date: 9 March 1982 08:24-EST
From: Danny Hillis <DANNY at MIT-AI>
To: BUG-LISPM at MIT-AI

In System 79.23, ZMail 40.7, Remote-File 2.0, LMFILE-Remote 5.3,
Programmer's Apprentice 21.7, microcode 849, PA 21.7, on Lisp Machine Twenty-two:

Reader gets mixed up on backarrowed numbers with point at end. Example:

(setq a 1_15.) => errror: Special token Close read after dot.

Date: Monday, 8 March 1982, 22:34-EST
From: James M. Turner <JMTurn at MIT-AI>
Subject: Supdups
To: Robert H. Berman <rhb at MIT-MC>
Cc: BUG-LISPM at MIT-AI
In-reply-to: The message of 8 Mar 82 07:52-EST from Robert H. Berman <rhb at MIT-MC>

Cc: JMTURN at MIT-AI

    Date: 8 March 1982 07:52-EST
    From: Robert H. Berman <rhb at MIT-MC>
    To: BUG-LISPM at MIT-AI

    In System 79.19, ZMail 40.7, Remote-File 2.0, LMFILE-Remote 5.3,
    microcode 849, Mathlab, on Lisp Machine Fifteen:

    If the machine associated with this lispm is MC, why does
    my telnet go
	 cadr15 -> AI -> ?
    How could I force it to be
	cadr15 -> MC ->  ?

I don't know why it's going through AI, but you can force a different gateway
by saying gatewayarpa-site. This is documented in the <HELP> for supdup.

					James

Date: Monday, 8 March 1982, 22:23-EST
From: Mike McMahon <LMACH at SCRC-POINTER>
To: bug-lispm at SCRC-POINTER

Warm booting (or it's equivalent really) with PACKAGE bound to NIL does
not work, since the PKG-GOTO that tries to fix it up need the old value
of PACKAGE to work.  Presumably (SETQ PACKAGE PKG-USER-PACKAGE) is what
it is really trying to do.

kmp@MIT-MC 03/08/82 19:20:06 Re: (PDIR) filenames
To: (BUG LISPM) at MIT-AI
In System 79.23, ZMail 40.7, Remote-File 2.0, LMFILE-Remote 5.3,
Programmer's Apprentice 21.7, microcode 849, PA 21.7, on Lisp Machine Twenty-two:

It doesn't seem to me that the :NAME option to DEFSYSTEM has any
business being used as a filename. Given that I do:

  (defsystem KBE
    (:name             "Knowledge Based Editor")
    (:short-name       "KBE") ...)

I end up getting a master patch dir called KNOWLE (PDIR) and a bunch
of version-specific patch dirs called KBEnnn (PDIR). I don't know why
the master cannot be just KBE (PDIR). I think spaces look better than
dashes in the long name for the system.


Date: 8 March 1982 18:33-EST
From: Daniel L. Weinreb <dlw at MIT-AI>
To: BUG-LISPM at MIT-AI, rhb at MIT-MC

The "associated machine" is just the default machine to log into, where you
find your home dir and init files.  It need not be a valid ARPA gateway,
and so it is not used by Telnet.  If you want to control Telnet, go
into it and type Help and it will tell you how.

Date: Monday, 8 March 1982, 18:15-EST
From: David L. Andre <DLA at SCRC-TENEX>
Subject: Having sources on FC and FS.
To: JMTURN at MIT-AI, RMS at MIT-AI
Cc: DLA at SCRC-TENEX, Moon at SCRC-TENEX, BUG-LISPM at SCRC-TENEX

BTW, it works to do (SI:SET-SYS-HOST "FS") at MIT; that will make the
lispm think that all sources are on FS, which they are.  I don't know if
it works for FC; there you will probably have to worry about a different
set of directory translations.

Date: Monday, 8 March 1982, 17:42-EST
From: Dave Dyer <DDYER at SCRC-TENEX>
To: BUG-LISPM at SCRC-TENEX

In Experimental System 204.18, Experimental ZMail 42.1,
Experimental LMFS 23.15, Experimental Tape 8.0,
Experimental Symbolics 10.1, Experimental Canon 12.1, microcode 865, on Collie:

there should be a way in zmail to do the equivalent of completion on
fields with semantic content (eg. adressees, filenames) and similarly to do apropos

this came up looking for the appropriate bug-mumble to send a reprot to.

likewise, the m-x-bug command.

Date: Monday, 8 March 1982, 17:40-EST
From: Dave Dyer <DDYER at SCRC-TENEX>
To: BUG-LISPM at SCRC-TENEX

In user-interface in Experimental System 204.18, Experimental ZMail 42.1,
Experimental LMFS 23.15, Experimental Tape 8.0,
Experimental Symbolics 10.1, Experimental Canon 12.1, microcode 865, on Collie:

the window error handler doesn't have mouse help documentation


Date: Monday, 8 March 1982, 15:58-EST
From:  <HES at SCRC-POINTER>
To: BUG-LISPM at SCRC-TENEX

In Experimental System 204.16, Experimental ZMail 42.1,
Experimental LMFS 23.15, Experimental Tape 8.0,
Experimental Symbolics 10.0, Experimental Canon 12.1,
Experimental DAEDALUS 10.0, microcode 865, on Setter:

if you attempt to compile something with an enormous number of constants
the compiler will give an error message (reasonable enough) more or less like:
 for function ....
 88. you have been screwed! excessive number of ...

just imagine the look on Mr. Hewlett or Mr. Packard's face when they see that one.

message text comes from compiler:lap-header I think

Date: 8 March 1982 12:17-EST
From: Gerald R. Barber <JerryB at MIT-AI>
Subject: Picture insertion facility
To: INFO-LISPM at MIT-AI

The file AI:LMLIB;INSDIG contains a picture insertion facility for the
lisp machine.  It will insert press diagrams such as those created by
the Alto's draw program or ECC's XDIAG package for the Lisp Machine (see
LMLIB;XDIAG) into press files. 

Comments, problems to Jerryb@ai.

Date: 8 March 1982 12:06-EST
From: Gerald R. Barber <JerryB at MIT-AI>
Subject: Picture insertion facility
To: INFO-LISPM at MIT-AI

The file AI:LMLIB;INSDIG contains a picture insertion facility for the
lisp machine.  It will insert press diagrams into press files.
Comments, problems to Jerryb@ai.

Date: 8 March 1982 07:52-EST
From: Robert H. Berman <rhb at MIT-MC>
To: BUG-LISPM at MIT-AI

In System 79.19, ZMail 40.7, Remote-File 2.0, LMFILE-Remote 5.3,
microcode 849, Mathlab, on Lisp Machine Fifteen:

If the machine associated with this lispm is MC, why does
my telnet go
     cadr15 -> AI -> ?
How could I force it to be
    cadr15 -> MC ->  ?


Date: 8 March 1982 01:33-EST
From: James M. Turner <JMTURN at MIT-AI>
To: DLA at SCRC-TENEX
cc: JMTURN at MIT-AI, BUG-LISPM at MIT-AI

    Date: Sunday, 7 March 1982, 04:37-EST
    From: David L. Andre <DLA at SCRC-TENEX>

        Date: 6 March 1982 15:17-EST
        From: James M. Turner <JMTURN at MIT-AI>


        Might it be a good idea to have a place where MIT specific patches could
        live?
    They should go in their own systems, as currently AI lab specific
    programs do.
Yes, but at the moment, there is no MIT-specfic *general* place
for patches to live, that is, a system that does not have a
package tied to it that only MIT loads. I plan to change this
by creating a system "MIT-SPECIFIC" for MIT flavored patches.

    	   Agreed, CC-RUN-MTEST should not default to FC for all users,
        but this is a 100% purely temporary hack because within a week it
        won't need another machine at all. This patch was put in purely so we
        can run MTEST when AI is down.  Now if it could be agreed to move the
        LM<fill in the blank> files to a back up source, like FC:, the whole
        problem would go away. Then we COULD redefine SYS: and win. BTW, how
        is Xerox going to parse the file name "SYS:CADR1;MEMD ULOAD", which is
        ITS specific.
    No it is not.  Refer to the documentation on logical pathnames.
This was a case of me being extremely stupid and failing to
read existing documentation. I can only plead non-omniscience.

    		  Does Xerox even use CC-RUN-MTEST (can they use it?).
    No, Xerox lisp machines don't break down.  How silly of me.
This was an honest question. Seeing as how the present CC
package is rather obscure and full of magic words, and also
seeing as I don't know what kind of LISPM wizards work at
Xerox, I really didn't know if they used it. BTW, the CC
package will soon have a more pleasent, window flavored
interface which may make CADR debuging a little easier, as
well as a few new tools.


    My main point is that this is a totally random small module to patch in
    such a manner.  If you want to flush logical pathnames, that's one
    thing, but changing one pathname in the whole lispm source to FC strikes
    me as rather dumb.


Again, true. This has been repatched away. 
        Last question. Where should hacks specific to AI machines go? I am going to
        bring up an addition to the system which is Tech Square (or at least, MIT)
        dependant. I don't think it's winning to make the user load off of LMLIB
        (in fact, this hack by definition has to live on the machine before boot).
    First of all, I doubt this mysterious hack is impossible to implement in
    a general fashion which could be useful at many sights.  But,
    regardless, it should be put in its own system and that system should
    be loaded at any sites which use it.
The idea of 1E6 systems for 1E6 hacks doesn't strike me as
clean, which is why I want to bring up an MIT-SPECIFIC
system for these types of things. And it isn't so much a
case of something that other *can't* run as something they
may not want cluttering up their disks. What I want to do
is semi-frivlous, and I'm not too sure if Xerox wants to
have it hanging around it's systems, eating disks. 
			Appologizing Profusely,
			James M. Turner



Date: 8 March 1982 01:39-EST
From: James M. Turner <JMTURN at MIT-AI>
To: DLA at SCRC-TENEX
cc: EB at MIT-AI, BUG-LISPM at MIT-AI

    Date: Sunday, 7 March 1982, 04:03-EST
    From: David L. Andre <DLA at SCRC-TENEX>

        Date: 2 March 1982 02:11-EST
        From: Edward Barton <EB at MIT-AI>
        Is there some way other than Dired and Terminal Q to get a hardcopy listing of
        a file directory?
    There should be a M-X Print Buffer.  I'll install this someday.
There is. Look at LMLIB;DOVERB > (Note that this code was written
prior to some changes in WITH-OPEN-BUFFER, and may or may not
work at the moment. It will within a day.)
					James

GJC@MIT-MC 03/08/82 00:41:48
To: (BUG LISPM) at MIT-AI
In System 79.18, ZMail 40.7, Remote-File 2.0, LMFILE-Remote 5.2,
Macsyma 30.0, microcode 849, 60Hz, on Lisp Machine Sixteen:

This is about the handling of various dealings with filecomputers.

It would be featureful if I could put in my lispm init file
forms which would:
[1] suppress the query I get when logged into an EECS lispmachine
    and access an MC file, to wit "ITS UNAME (default is GJC):"
[2] tell the system beforehand what passwords to use on
    various machines.

In other words, I should be able to tell the filesystem beforehand
that on MIT-MULTICS to use "Carrette.Mathlab", on EE use "<GJC>", on
MC use "GJC;" on MIT-VAX use "/usr/gjc" on Alcator VAX use "[CARRETTE]"
including all the passwords, because I hate typing passwords over and
over again.

-gjc



Date: Sunday, 7 March 1982, 18:43-EST
From: Daniel L. Weinreb <dlw at SCRC-TENEX>
To: BUG-LISPM at SCRC-TENEX

In Experimental System 204.15, Experimental ZMail 42.1,
Experimental LMFS 23.12, Experimental Tape 8.0,
Experimental Symbolics 10.0, Experimental Canon 12.1, microcode 865, on Collie:

Whoever added SIEZE-LOCK is responsible for renaming it to SEIZE-LOCK and
appropriately changing all uses.

It would have been nice if this change had been announced.  Are PROCESS-LOCK
and PROCESS-UNLOCK now to be considered obsolete?

Date: 7 March 1982 17:12-EST
From: Philip E. Agre <AGRE at MIT-AI>
To: BUG-LISPM at MIT-AI

In System 79.19, ZMail 40.7, Remote-File 2.0, LMFILE-Remote 5.3,
microcode 849, 60.45Hz, on Lisp Machine One:

When you get a notification that a process wants to type out, it would
be good if the notification would go away once you let the process
type out.  The way it works now, you get a notification in ZWEI that
your SUPDUP wants to type out, so you do System-S, it says "Comsat
says everyone delete unnecessary files", you do System-E, edit awhile,
and notice a notification that SUPDUP wants to type out.  Of course
you don't remember the earlier episode, so you waste time System-S'ing.
Low-priority.

Date: 7 March 1982 16:21-EST
From: Patrick G. Sobalvarro <PGS at MIT-AI>
To: BUG-LISPM at MIT-AI

There is something inconvenient about the behavior of TV:BASIC-FRAME
with respect to the :SELECTABLE-WINDOWS and :NAME-FOR-SELECTION
methods.

If a frame has a selected pane, then its :NAME-FOR-SELECTION method
will return the selected pane's :NAME-FOR-SELECTION. But when
TV:BASIC-FRAME is sent a :SELECTABLE-WINDOWS message, it returns a
list of its :NAME-FOR-SELECTION and those of its inferiors.

Thus if I create a frame FOO, and I select one of its panes, call it
BAR, the system window selection menu will show BAR twice.  This is
sort of a loss for the default case. 

-pgs

Date: Sunday, 7 March 1982, 04:37-EST
From: David L. Andre <DLA at SCRC-TENEX>
To: JMTURN at MIT-AI
Cc: BUG-LISPM at MIT-AI, DLA at SCRC-TENEX

    Date: 6 March 1982 15:17-EST
    From: James M. Turner <JMTURN at MIT-AI>

    I was not aware the LMPAT directory was use outside of the Lab.
The patches in LMPAT are used by LMI and, currently, Xerox.  
								    Might
    it be a good idea to have a place where MIT specific patches could
    live?
They should go in their own systems, as currently AI lab specific
programs do.
	   Agreed, CC-RUN-MTEST should not default to FC for all users,
    but this is a 100% purely temporary hack because within a week it
    won't need another machine at all. This patch was put in purely so we
    can run MTEST when AI is down.  Now if it could be agreed to move the
    LM<fill in the blank> files to a back up source, like FC:, the whole
    problem would go away. Then we COULD redefine SYS: and win. BTW, how
    is Xerox going to parse the file name "SYS:CADR1;MEMD ULOAD", which is
    ITS specific.
No it is not.  Refer to the documentation on logical pathnames.
		  Does Xerox even use CC-RUN-MTEST (can they use it?).
No, Xerox lisp machines don't break down.  How silly of me.

My main point is that this is a totally random small module to patch in
such a manner.  If you want to flush logical pathnames, that's one
thing, but changing one pathname in the whole lispm source to FC strikes
me as rather dumb.

    Last question. Where should hacks specific to AI machines go? I am going to
    bring up an addition to the system which is Tech Square (or at least, MIT)
    dependant. I don't think it's winning to make the user load off of LMLIB
    (in fact, this hack by definition has to live on the machine before boot).
First of all, I doubt this mysterious hack is impossible to implement in
a general fashion which could be useful at many sights.  But,
regardless, it should be put in its own system and that system should
be loaded at any sites which use it.

Date: Sunday, 7 March 1982, 04:03-EST
From: David L. Andre <DLA at SCRC-TENEX>
To: EB at MIT-AI
Cc: BUG-LISPM at MIT-AI

    Date: 2 March 1982 02:11-EST
    From: Edward Barton <EB at MIT-AI>
    Is there some way other than Dired and Terminal Q to get a hardcopy listing of
    a file directory?
There should be a M-X Print Buffer.  I'll install this someday.

Date: Sunday, 7 March 1982, 03:52-EST
From: David L. Andre <DLA at SCRC-TENEX>
Subject: STATUS of a host
To: RWK at SCRC-TENEX
Cc: RICH at MIT-AI, BUG-LISPM at MIT-AI, DLA at SCRC-TENEX

    Date: Saturday, 6 March 1982, 16:48-EST
    From: Robert W. Kerns <RWK at SCRC-TENEX>
	Date: 5 March 1982 10:39-EST
	From: Charles Rich <RICH at MIT-AI>
	What is the correct function to call to test whether a host is
	up?  
			Thanks, Chuck.
    (errorp (chaos:simple <host> "STATUS"))
No.  This doesn't allocate a packet if the host is up.  See my reply to
this message.

Date: Saturday, 6 March 1982, 18:04-EST
From: Robert W. Kerns <RWK at SCRC-TENEX>
Subject: FS:ADD-LOGICAL-PATHNAME-HOST
To: kmp at MIT-MC
Cc: BUG-LISPM at MIT-MC
In-reply-to: The message of 5 Mar 82 16:17-EST from kmp at MIT-MC

    From: kmp@MIT-MC
    Date: 03/05/82 16:17:42
    Subject: FS:ADD-LOGICAL-PATHNAME-HOST
    To: BUG-LISPM at MIT-MC

    1. I think this should be on global if for general consumption.
Yes, I understand your views that "global" <==> "general consumption".
    2. I would generally like to do them in clusters. ie, if i could do
       (fs:add-logical-pathname "PA" '(("AI" ("MYDIR" "MYREALDIR;"))
				    ("ML" (...))))
       I would rather that than successive calls to ADD-LOGICAL-PATHNAME-HOST.

I don't know what this would mean.  A logical pathname has only one set
of translations at a time!  One file can't translate to two things.
Logical pathname declarations generally live in a file that lives on
each site the software is installed on, with no central knowledge of how
any other site is configured.  Or are you lobbying to allow storing some
files on one host and some files on another, all at the same site?

    3. I think I almost always don't want to eval the args to this, so a
       special form which expanded into this would be useful as in:
       (define-logical-pathname "PA"
	  ("AI" ("MYDIR" "MYREALDIR;") ...)
	  ("ML" (...)))

Try this on for size instead, from my devloping pathname proposal:

fs:
(define-logical-host "PA"
  ("PA:>MYDIR>*.*.*" "AI: MYREALDIR;")   ;Normally use MATCH-PATHNAMES
  (">HISDIR>*.*.*" "ML: HISDIR;")	 ;  and MERGE-PATHNAME-DEFAULTS
  ((FUNNY-MATCH-PATHNAMES ">FUNNYDIR>*.*.*")  ;But allow arbitrary matching
   (HAIRY-TRANSLATE-FUNNY-DIR "XX:<FOO>BAR.BAZ"))) ;and translation functions



Date: Saturday, 6 March 1982, 17:54-EST
From: David Vinayak Wallace <Gumby at MIT-AI>
Subject: error-handler attention-getter
To: BUG-LISPM at MIT-AI
Cc: Gumby at ai

In System 79.19, ZMail 40.7, Remote-File 2.0, LMFILE-Remote 5.3,
microcode 849, 60.45Hz, on Lisp Machine One:

Is there any way of having the machine beep when it enters the
error-handler? Sometimes I start a job and then pick up a book while I
am waiting for it to finish. I would like to have the machine notify me
if the function bombs for some reason.
		--david

Date: Saturday, 6 March 1982, 17:13-EST
From: Daniel L. Weinreb <dlw at SCRC-TENEX>
To: JEK at SCRC-TENEX
Cc: BUG-LISPM at SCRC-TENEX

In the (set 'x (1+ x)) case, I see no reason for issuing a warning.
After all, what did the user THINK he was trying to do by not using
SETQ, anyway?  The manual is pretty damned explicit about all this.

Date: Saturday, 6 March 1982, 17:05-EST
From: Daniel L. Weinreb <dlw at SCRC-TENEX>
Subject: Save Draft default file name
To: bug-lispm at SCRC-TENEX
Cc: JWALKER at SCRC-TENEX

I'd like to reiterate something I have said before: I do not like the
fact that so fundamental an operation as pathname defaulting depends
on hosts being up.  Even if we have a completely winning error system,
it would still be the case that the behavior of simple defaulting would
do one thing if the host were up and another if it were not.  It is not
so critically important to choose the very best guess as the default
default.  If you guess wrong, it is easy for any user to just type in
a whole filename.  However, it is grossly undesirable for the upness
or downness of random net hosts to affect system behavior at a low level
(even if it IS changed so that it doesn't blow out).

It seems like most of the advantages of the present scheme could be had
by extracting the value of the home-directory at the time that you first
log into the host, and then using that from then on rather than ever
going out over the net just to default a pathname.  If the connection to
the relevant host has never been made before, and so the first need for
the home-dir arose during parsing, then it should just make up a bogus
default or have no default at all.

My main point is that I think pathname defaulting is too low-level to
depend on the arbitrary and capricious nature of network servers.

Date: Saturday, 6 March 1982, 16:57-EST
From: Daniel L. Weinreb <dlw at SCRC-TENEX>
Subject: rational number functions
To: CARLF at MIT-AI, GJC at MIT-MC
Cc: BUG-LISPM at MIT-AI

Rationals are one of those things that will not really be supported
until we find out how Common Lisp is going to define them.  Until then,
anything we do is a kludge, so you might as well continue with the
present situation.  There is no point in introducing a new kludge when
we know that it might have to be changed yet again.

Date: Saturday, 6 March 1982, 16:53-EST
From: Daniel L. Weinreb <dlw at SCRC-TENEX>
To: Zvona at MIT-AI, BUG-LISPM at MIT-AI

    Date: Wednesday, 3 March 1982, 20:02-EST
    From: David Chapman <Zvona at MIT-AI>

    It would be nice if the wholine said 8:02 pm instead of 20:02:22.

I use the seconds field a lot as an easy way to get a stopwatch.  This
is very simple and convenient, and easier to use than any "metering
tool".  So I kind of like it, although I do not absoletely insist that
it stay in.  As for using "am/pm" time, I do like that better, but it
would take up valuable who-line space that I'd rather not give up.

Date: Saturday, 6 March 1982, 16:48-EST
From: Robert W. Kerns <RWK at SCRC-TENEX>
Subject: STATUS of a host
To: Charles Rich <RICH at MIT-AI>
Cc: BUG-LISPM at MIT-AI
In-reply-to: The message of 5 Mar 82 10:39-EST from Charles Rich <RICH at MIT-AI>

    Date: 5 March 1982 10:39-EST
    From: Charles Rich <RICH at MIT-AI>
    What is the correct function to call to test whether a host is
    up?  
		    Thanks, Chuck.
(errorp (chaos:simple <host> "STATUS"))

If the timeout is too long for your purposes, you can supply a third
argument to CHAOS:SIMPLE.

Date: 6 March 1982 16:30-EST
From: James M. Turner <JMTURN at MIT-AI>
Subject: HOST-UP-P
To: BUG-LISPM at MIT-AI

God yes, HOST-UP-P is definitively needed, especially by programs
that write/read files from host sites. It would be really winning to be able
to say :read it from AI, unless AI is down, in which case read it from MC".
Right now, all you can do is watch OPEN die horribly.

Date: 6 March 1982 16:26-EST
From: James M. Turner <JMTURN at MIT-AI>
To: BUG-LISPM at MIT-AI

Would it then be a good idea to create a "MIT-HACKS" system which
would be used to load in MIT specific systems and patches?
					James

Date: Saturday, 6 March 1982, 16:18-EST
From: Daniel L. Weinreb <dlw at SCRC-TENEX>
Subject: FS:ADD-LOGICAL-PATHNAME-HOST
To: kmp at MIT-MC
Cc: bug-lispm at SCRC-TENEX

Regarding your suggestion to move this function into GLOBAL: it is not
our philosophy that anything that is for "general consumption" must be
in the GLOBAL package.  We should minimize the amount of stuff in that
package, since it permanently pre-empts that name.

Date: Saturday, 6 March 1982, 16:14-EST
From: Daniel L. Weinreb <dlw at SCRC-TENEX>
To: DLA at SCRC-TENEX
Cc: BUG-LISPM at MIT-AI

Your HOST-UP-P function looks like it might be of general interest.  I
don't know if it belongs in GLOBAL, but maybe it should be installed in
the chaos package and documented as a general feature.  Maybe the name
is too jargony, although I can't think of a better one right offhand.

Date: Saturday, 6 March 1982  15:42-EST
From: MOON at SCRC-TENEX
To:   James M. Turner <JMTURN at MIT-AI>
Cc:   BUG-LISPM at MIT-AI, DLA at MIT-AI
Subject: MIT-specific things

... should go in an MIT-specific system, separate from the SYSTEM system
which exists at all sites.  This is the way the FC and FS file systems
work.  Refer to chapter 24 of the manual, and look at the file
SYS:SYS;SYSDCL LISP >.  By the way, logical pathnames such as this one
have nothing to do with ITS; they are a way to have site-independent
pathnames which map into different pathnames on different computers at
different sites.  Refer to page 388 of the manual.

Date: 6 March 1982 15:17-EST
From: James M. Turner <JMTURN at MIT-AI>
To: DLA at MIT-AI
cc: BUG-LISPM at MIT-AI

I was not aware the LMPAT directory was use outside of the Lab. Might
it be a good idea to have a place where MIT specific patches could
live?  Agreed, CC-RUN-MTEST should not default to FC for all users,
but this is a 100% purely temporary hack because within a week it
won't need another machine at all. This patch was put in purely so we
can run MTEST when AI is down.  Now if it could be agreed to move the
LM<fill in the blank> files to a back up source, like FC:, the whole
problem would go away. Then we COULD redefine SYS: and win. BTW, how
is Xerox going to parse the file name "SYS:CADR1;MEMD ULOAD", which is
ITS specific. Does Xerox even use CC-RUN-MTEST (can they use it?).

As a totally side issue, who *does* uses MTEST (this is an honest
question, I don't know)?

						James

Last question. Where should hacks specific to AI machines go? I am going to
bring up an addition to the system which is Tech Square (or at least, MIT)
dependant. I don't think it's winning to make the user load off of LMLIB
(in fact, this hack by definition has to live on the machine before boot).

Date: 6 March 1982 12:04-EST
From: Richard M. Stallman <RMS at MIT-AI>
To: BUG-LISPM at MIT-AI

In System 79.19, ZMail 40.7, Remote-File 2.0, LMFILE-Remote 5.3,
microcode 849, 60.45Hz, on Lisp Machine Eighteen:

A NAME server got an error "attempt to transmit on a connection which
got a LOS:connection does not exist at this end".

The server ought to handle the appropriate condition(s).
Also, the error message should be cleaned up.

Also, several effectively similar events signal different conditions
whose names are not even parallel.  For example, transmitting on a
CLS'ed connection and transmitting on a LOS'ed connection signal
different conditions.  They should probably all signal the same
condition, or at least the names should be changed to be analogous.

These things can be fixed straightforwardly in the current error system.

Date: 5 March 1982 21:31-EST
From: David Chapman <Zvona at MIT-AI>
To: BUG-LISPM at MIT-AI

In System 79.22, ZMail 40.7, Remote-File 2.0, LMFILE-Remote 5.3,
microcode 849, 60.45Hz, on Lisp Machine One:

fasd'ing a hashtable crashes with NIL unbound (in a closure value
cell).

kmp@MIT-MC 03/05/82 16:17:42 Re: FS:ADD-LOGICAL-PATHNAME-HOST
To: (BUG LISPM) at MIT-MC
1. I think this should be on global if for general consumption.
2. I would generally like to do them in clusters. ie, if i could do
   (add-logical-pathname "PA" '(("AI" ("MYDIR" "MYREALDIR;"))
	                        ("ML" (...))))
   I would rather that than successive calls to ADD-LOGICAL-PATHNAME-HOST.
3. I think I almost always don't want to eval the args to this, so a
   special form which expanded into this would be useful as in:
   (define-logical-pathname "PA"
      ("AI" ("MYDIR" "MYREALDIR;") ...)
      ("ML" (...)))


Date: Friday, 5 March 1982, 15:55-EST
From: David L. Andre <DLA at SCRC-TENEX>
To: RICH at MIT-AI
Cc: BUG-LISPM at MIT-AI, DLA at SCRC-TENEX

    Date: 5 March 1982 10:39-EST
    From: Charles Rich <RICH at MIT-AI>

    What is the correct function to call to test whether a host is
    up?  
I don't believe there is a function (although there probably should be).
This function would look as follows:

(DEFUN HOST-UP-P (HOST)
  (LET ((PKT (CHAOS:SIMPLE <host> "STATUS")))
    (PROG1 (ERRORP PKT)
	   (OR (ERRORP PKT)
	       (CHAOS:RETURN-PKT PKT)))))

Date: Friday, 5 March 1982  15:43-EST
From: MOON at SCRC-TENEX
To:   Kent M. Pitman <kmp at MIT-AI>
Cc:   BUG-LISPM at MIT-AI
Subject: EXTERN in PACKAGE-DECLARE

    Date: 5 March 1982 12:46-EST
    From: Kent M. Pitman <kmp at MIT-AI>
    To: BUG-LISPM at MIT-AI

    In System 79.18, ZMail 40.7, Remote-File 2.0, LMFILE-Remote 5.2,
    Programmer's Apprentice 21.4, microcode 849, on Lisp Machine Twenty-two:

    What happened to the EXTERN option in PACKAGE-DECLARE? Is there something
    that now provides the same functionality or can someone explain why its
    functionality was thought to be the wrong thing (and what the currently-
    considered-correct thing to do as an alternative is).
The EXTERN option was a way to turn off the warning for defining a function
in package A while loading a file into package B.  The warning was flushed
completely, since it never seemed to do anyone any good.  So you don't
need the option (it's effectively always on).

Date: Friday, 5 March 1982, 15:30-EST
From: David L. Andre <DLA at SCRC-TENEX>
Subject: CHAOS:SHOUT
To: MT at MIT-AI
Cc: BUG-LISPM at MIT-AI

    Date: 5 March 1982 03:52-EST
    From: Michael Travers <MT at MIT-AI>

    CHAOS:SHOUT tries to call CHAOS:SEND-MSG-GET-MESSAGE, which
    doesn't exist.
SHOUT should have been obsoleted with the new Converse system, but
wasn't.  Anyway, CHAOS:SEND-MSG-GET-MESSAGE has been renamed to
ZWEI:QSEND-GET-MESSAGE.  It may be patched if you feel it's important.

Date: Friday, 5 March 1982, 14:42-EST
From: David L. Andre <DLA at SCRC-TENEX>
Subject: Swap recommendations.
To: BUG-LISPM at SCRC-TENEX

In Experimental System 204.13, Experimental ZMail 42.1, microcode 865, on Lisp Machine Ten:

Probably swap recommendations could better be set up at run time as a
function of memory size.  It's sort of losing here with the 128K
machines.

Date:  5 Mar 1982 1343-EST
From: David L. Andre <DLA at MIT-EECS>
Subject: 79.21
To: JMTurn at MIT-AI
cc: BUG-LISPM at MIT-AI

Patch 79.21 is wrong; Certainly Xerox shouldn't load microcode from
FC.

The SYS pathnames exist for a reason.  If sources have been moved to
FC, then it should be set up as the SYS host.  But references to any
particular physical host should not be put randomly into the sources.
-------

Date: 5 March 1982 12:46-EST
From: Kent M. Pitman <kmp at MIT-AI>
To: BUG-LISPM at MIT-AI

In System 79.18, ZMail 40.7, Remote-File 2.0, LMFILE-Remote 5.2,
Programmer's Apprentice 21.4, microcode 849, on Lisp Machine Twenty-two:

What happened to the EXTERN option in PACKAGE-DECLARE? Is there something
that now provides the same functionality or can someone explain why its
functionality was thought to be the wrong thing (and what the currently-
considered-correct thing to do as an alternative is).
Thanks. -kmp

Date: 5 March 1982 12:33-EST
From: Rodney A. Brooks <BROOKS,TAFT at MIT-AI>
Sender: Lispm at MIT-AI
To: BUG-LISPM at MIT-AI
cc: HOPELESS-DREAM-KEEPERS-OF-INTERGALACTIC-SPACE at MIT-AI

In System 78.56, ZMail 38.5, microcode 843, 60.45Hz, on Lisp Machine Nine:

Really folks what is going on here ??

We tried just changing the load with the same microcode, and
now changing both the load and the microcode. Same result:

(* -1 -3) gives random powers of two (mostly 377, occasionally 177, and rarely 777)

Also * of positives always seems to work, and (* -1 <negative-power-of-two>) seems to work.




Date: 5 March 1982 12:19-EST
From: Rodney A. Brooks <BROOKS at MIT-AI>
Sender: lispm at MIT-AI
To: BUG-LISPM at MIT-AI

In System 79.21, ZMail 40.7, Remote-File 2.0, LMFILE-Remote 5.3,
microcode 849, 60.45Hz, on Lisp Machine Nine:

In the cold booted system above (* -1 -3) gives random answers which are all
powers of two less 1.

Date: Friday, 5 March 1982, 12:15-EST
From: HIC at SCRC-TENEX
Sender: BSG at SCRC-TENEX
To: BUG-LISPM at SCRC-TENEX

It seems 'clear' that typeout windows should have ANY-TYI-MIXIN.
Anyone have any problems with this?

Date: Friday, 5 March 1982, 11:47-EST
From: Janet H. Walker <JWALKER at SCRC-TENEX>
Subject: 
To: BUG-LISPM at SCRC-TENEX

In Experimental System 204.8, Experimental ZMail 42.1,
Experimental LMFS 23.8, Experimental Tape 8.0,
Experimental Symbolics 10.0, Experimental Canon 12.1, microcode 865, on Basset:

This is a gripe about the keyboard.  It is a wonderful keyboard in many
respects but I am having a lot of trouble with interchanging the left
control and shift keys.  I am beginning to be convinced that this is due
to having to move my left hand off the home row in order to reach the
Control key.  This is particularly true for Control X, which involves
southward movement for the two weakest fingers of the left hand.

Date: 5 March 1982 10:39-EST
From: Charles Rich <RICH at MIT-AI>
To: BUG-LISPM at MIT-AI

In System 79.21, ZMail 40.7, Remote-File 2.0, LMFILE-Remote 5.3,
Tester 20.2, Reasoning Utility Package 1.0,
Experimental Plan Calculus 1.0, microcode 849, 60.45Hz, on Lisp Machine Twenty-two:

What is the correct function to call to test whether a host is
up?  
		Thanks, Chuck.

Date: 5 March 1982 03:52-EST
From: Michael Travers <MT at MIT-AI>
To: BUG-LISPM at MIT-AI

In System 79.18, ZMail 40.7, Remote-File 2.0, LMFILE-Remote 5.2,
microcode 849, 60.45Hz, on Lisp Machine Nine:

CHAOS:SHOUT tries to call CHAOS:SEND-MSG-GET-MESSAGE, which
doesn't exist.

Date: Thursday, 4 March 1982  21:38-EST
From: HIC at SCRC-TENEX
To:   HIC at SCRC-TENEX
Cc:   bug-lispm at SCRC-TENEX
Subject: DEFUN-METHOD's

    Date: Wednesday, 3 March 1982  22:51-EST
    From: HIC
    To:   bug-lispm
    Re:   DEFUN-METHOD's

    If you load a file that references an undefined DEFUN-METHOD, and you
    try to run the code, then it tries to call NIL as a function.  I guess
    in order to fix this right I have to change the format of frobs stored
    in the DEFUN-METHOD hash table.  I'll do that before the next system is built.
Fixed and patched.

Date: Thursday, 4 March 1982, 18:03-EST
From: David Chapman <Zvona at MIT-AI>
To: BUG-LISPM at MIT-AI

In System 79.19, ZMail 40.7, Remote-File 2.0, LMFILE-Remote 5.3,
microcode 849, on Lisp Machine Six:

It is inconsistent that the :nowarn option to make-system has no
dash but :no-reload-system-declaration does.  Also,
:no-reload-system-declaration would much more logically be
:no-reload-definition since after all the object in question is a
defsystem, not a system-declare.  

I always manage to type this wrong.

Date: Thursday, 4 March 1982  15:27-EST
From: JEK at SCRC-TENEX
To:   Robert W. Kerns <RWK at SCRC-TENEX>
Cc:   Bernard S Greenberg <BSG at SCRC-TENEX>, BUG-LISPM at SCRC-TENEX,
      JWALKER at SCRC-TENEX
Subject: Telnet window size

    Date: Thursday, 4 March 1982, 14:50-EST
    From: Robert W. Kerns <RWK>
    To:   Bernard S Greenberg <BSG>
    cc:   JWALKER, BUG-LISPM, JEK
    Re:   Telnet window size

        Date: Thursday, 4 March 1982, 14:22-EST
        From: Bernard S Greenberg <BSG at SCRC-TENEX>
        Subject: Telnet window size
        To: RWK at SCRC-TENEX, JWALKER at SCRC-TENEX
        Cc: BUG-LISPM at SCRC-TENEX, JEK at SCRC-TENEX

        Wait a bloody minute.  Except for supdup-output, since when does TELNET have ANY idea
        of screen size?  If the person was so clever as to do a LENGTH, set_tty, :TCTYP or
        whatever in the first place, they are surely clever enough to do it again.

    What about every program that you started since your screen was a
    certain size?  I'll agree that it is too facist about it.  A nice
    notification would be just fine.
It used to allow this (changing size of telnet).  It is nice to warn you,
but it certainly shouldn't flat-out deny you the priveleg of changing the
window shape.

Date: Thursday, 4 March 1982, 14:50-EST
From: Robert W. Kerns <RWK at SCRC-TENEX>
Subject: Telnet window size
To: Bernard S Greenberg <BSG at SCRC-TENEX>
Cc: JWALKER at SCRC-TENEX, BUG-LISPM at SCRC-TENEX, JEK at SCRC-TENEX
In-reply-to: The message of 4 Mar 82 14:22-EST from Bernard S Greenberg <BSG at SCRC-TENEX>

    Date: Thursday, 4 March 1982, 14:22-EST
    From: Bernard S Greenberg <BSG at SCRC-TENEX>
    Subject: Telnet window size
    To: RWK at SCRC-TENEX, JWALKER at SCRC-TENEX
    Cc: BUG-LISPM at SCRC-TENEX, JEK at SCRC-TENEX

    Wait a bloody minute.  Except for supdup-output, since when does TELNET have ANY idea
    of screen size?  If the person was so clever as to do a LENGTH, set_tty, :TCTYP or
    whatever in the first place, they are surely clever enough to do it again.

What about every program that you started since your screen was a
certain size?  I'll agree that it is too facist about it.  A nice
notification would be just fine.

Date: Thursday, 4 March 1982, 14:22-EST
From: Bernard S Greenberg <BSG at SCRC-TENEX>
Subject: Telnet window size
To: RWK at SCRC-TENEX, JWALKER at SCRC-TENEX
Cc: BUG-LISPM at SCRC-TENEX, JEK at SCRC-TENEX

Wait a bloody minute.  Except for supdup-output, since when does TELNET have ANY idea
of screen size?  If the person was so clever as to do a LENGTH, set_tty, :TCTYP or
whatever in the first place, they are surely clever enough to do it again.

Date: Thursday, 4 March 1982, 14:07-EST
From: Robert W. Kerns <RWK at SCRC-TENEX>
Subject: Telnet window size
To: Jan Walker <JWALKER at SCRC-TENEX>
Cc: BUG-LISPM at SCRC-TENEX, JEK at SCRC-TENEX
In-reply-to: The message of 4 Mar 82 11:31-EST from Jan Walker <JWALKER at SCRC-TENEX>

    Date: Thursday, 4 March 1982, 11:31-EST
    From: Jan Walker <JWALKER at SCRC-TENEX>
    Subject: Telnet window size
    To: BUG-LISPM at SCRC-TENEX
    Cc: JEK at SCRC-TENEX

    In Experimental System 204.5, Experimental ZMail 42.0,
    Experimental LMFS 23.4, Experimental Tape 8.0,
    Experimental Symbolics 10.0, Experimental Canon 12.0, microcode 865, on Boxer:

    Can't use Split Screen or Edit Screen to change the size of a Telnet
    window while Telnet is connected.  Why not?
Because there is no protocol for telling the host on the other side that
the size if your terminal has changed.

Date: Thursday, 4 March 1982, 11:31-EST
From: Jan Walker <JWALKER at SCRC-TENEX>
Subject: Telnet window size
To: BUG-LISPM at SCRC-TENEX
Cc: JEK at SCRC-TENEX

In Experimental System 204.5, Experimental ZMail 42.0,
Experimental LMFS 23.4, Experimental Tape 8.0,
Experimental Symbolics 10.0, Experimental Canon 12.0, microcode 865, on Boxer:

Can't use Split Screen or Edit Screen to change the size of a Telnet
window while Telnet is connected.  Why not?

Error messages when trying to change the size of Telnet window while
connected:
1.  Using Split Screen to split between existing ZMAIL and existing
Telnet gives error from cold-load stream.

2.  Using Edit Screen / Reshape to change shape of Telnet window puts up
a notification window.  It says "type any character to flush".  Clicking
a mouse button does not count as a character; only a keyboard character
flushes.

(Witness: JEK)

Date: Thursday, 4 March 1982  01:19-EST
From: HIC at SCRC-TENEX
To:   Carl Richard Feynman <CARLF at MIT-AI>
Cc:   BUG-LISPM at MIT-AI

    Date: Sunday, 28 February 1982  14:56-EST
    From: Carl Richard Feynman <CARLF at MIT-AI>
    To:   BUG-LISPM at MIT-AI

    In Experimental System 79.8, ZMail 40.7, Experimental LMFILE Remote 4.1,
    Remote-File 2.0, LMFILE-Remote 5.0, microcode 849, 79.5 RM 4.1, on Lisp Machine Two:

    The inspector has trouble with lists one of whose elements is a string one of
    whose characters is a tab.

Yes, so does thr grinder!  I'm afraid this isn't gonna get fixed soon.

    Also, the black line at the bottom of the screen that
    says what the mouse is for does not document the fact that mousing middle on an item
    in the history window deletes it.
Fixed and patched in Symbolics 204, along with middle click in the history window.

Date: Thursday, 4 March 1982, 01:08-EST
From: David L. Andre <DLA at SCRC-TENEX>
Subject: chaos connections timing out
To: BAK at MIT-AI
Cc: DLA at MIT-AI, BUG-LISPM at MIT-AI, DLA at SCRC-TENEX

    Date: 1 March 1982 23:34-EST
    From: William A. Kornfeld <BAK at MIT-AI>

    Please explain to me why this error should not be proceedable.  It seems to me
    that there is exactly one way to proceed (namely try again).  This being the
    case, it seems wrong to me that that has to be said in n system programs rather
    than in one single place.
You're right, I thought you were talking about another case.

Anyway, n system programs already do handle of this error, because
CHAOS:CONNECT is modularized wrong.  I will fix this, but not
immediately.

Date: Wednesday, 3 March 1982  22:51-EST
From: HIC at SCRC-TENEX
To:   bug-lispm at SCRC-TENEX
Subject: DEFUN-METHOD's

If you load a file that references an undefined DEFUN-METHOD, and you
try to run the code, then it tries to call NIL as a function.  I guess
in order to fix this right I have to change the format of frobs stored
in the DEFUN-METHOD hash table.  I'll do that before the next system is built.

Date: Wednesday, 3 March 1982  22:52-EST
From: HIC at SCRC-TENEX
To:   Clark M. Baker <CMB at SCRC-TENEX>
Cc:   BUG-LISPM at SCRC-TENEX

    Date: Wednesday, 3 March 1982, 14:24-EST
    From: Clark M. Baker <CMB>
    To:   BUG-LISPM

    In Experimental System 204.6, Experimental ZMail 42.0,
    Experimental LMFS 23.6, Experimental Tape 8.0,
    Experimental Symbolics 10.0, Experimental Canon 12.1, microcode 865, on Retriever:

    (hacks:munch) doesn't work if you try to change the number or do a stop
    output.  I think that this is because of the new flavor system.
Fixed and patched.

Date: 3 March 1982 20:17-EST
From: Edward Barton <EB at MIT-AI>
To: BUG-LISPM at MIT-AI
cc: MMcM at SCRC-TENEX


I asked for an easy way to get a hardcopy directory listing other that Dired and
Terminal Q.  Someone suggested M-X Execute Command Into Buffer with C-X C-D.
Unfortuately that seems to somehow depend on having a window to type into,
because when I try it to list a directory on FC: it comes out spaced all wrong,
unreadable, and completely ugly.  Perhaps the stream that commands executing into
the buffer get needs to be taught how to keep track of its cursorpos, or something?

Date: Wednesday, 3 March 1982, 20:02-EST
From: David Chapman <Zvona at MIT-AI>
To: BUG-LISPM at MIT-AI

In System 79.19, ZMail 40.7, Remote-File 2.0, LMFILE-Remote 5.3,
microcode 849, on Lisp Machine Twenty-two:

It would be nice if the wholine said 8:02 pm instead of 20:02:22.

Date: 3 March 1982 15:02-EST
From: Edward Barton <EB at MIT-AI>
To: MMcM at SCRC-TENEX
cc: BUG-LISPM at MIT-AI


    Date: Tuesday, 2 March 1982, 12:22-EST
    From: Mike McMahon <MMcM at SCRC-TENEX>

        Date: 2 March 1982 02:11-EST
        From: Edward Barton <EB at MIT-AI>
        Is there some way other than Dired and Terminal Q to get a hardcopy listing of
        a file directory?
    I personally use M-X Execute Command Into Buffer for things like this.

What do you execute into the buffer?  When I try M-X Execute Command Into Buffer
with M-X View Directory I don't get anything inserted into the buffer.

Date: Wednesday, 3 March 1982, 14:24-EST
From: Clark M. Baker <CMB at SCRC-TENEX>
To: BUG-LISPM at SCRC-TENEX

In Experimental System 204.6, Experimental ZMail 42.0,
Experimental LMFS 23.6, Experimental Tape 8.0,
Experimental Symbolics 10.0, Experimental Canon 12.1, microcode 865, on Retriever:

(hacks:munch) doesn't work if you try to change the number or do a stop
output.  I think that this is because of the new flavor system.

Date: 3 March 1982 14:03-EST
From: David L. Andre <DLA at MIT-AI>
To: BUG-LISPM at MIT-AI

In System 79.18, ZMail 40.7, Remote-File 2.0, LMFILE-Remote 5.2,
microcode 849, on Lisp Machine Ten:

M-Q in converse bashes the message separators.

Date: Tuesday, 2 March 1982, 22:17-EST
From: Mike McMahon <MMcM at SCRC-TENEX>
To: dph at MIT-ML
Cc: BUG-LISPM at MIT-AI

    dph@MIT-ML 03/01/82 23:33:01
    fs:file-property-list returns nil when the file plist does not have
    a semicolon after its last entry.  e.g., -*-mode:lisp; package:user-*-
    returns nil, but -*-mode:lisp; package:user;-*- returns (mode lisp
    package user)
The value returned is the same for me with and without the ;.  Note that
the editor's M-X Update Mode Line command would not put in a final ;, so
that the majority of all files have the syntax you say loses.  Perhaps
you could describe the problem that you are really having?

Date: 2 March 1982 15:37-EST
From: Carl Richard Feynman <CARLF at MIT-AI>
Subject: rational number functions
To: GJC at MIT-MC
cc: BUG-LISPM at MIT-AI

    Date: 2 March 1982 10:07-EST
    From: George J. Carrette <GJC at MIT-MC>
    To: BAK at MIT-AI
    cc: BUG-LISPM at MIT-AI

    RATIONAL, DEMOMINATOR, and NUMERATOR are very common symbols to
    find in programs which deal with math, e.g. MACSYMA.
    Maybe they shouldn't be in SI, but the certainly shouldn't be globalized.

How about putting them in package MATH, where the array functions are? Putting them
in SI gives people the impression that they are off limits to naive users.
For the first year after I started lispm hacking, I didn't touch any of the 
functions in SI for fear of doing something weird. I think SI should be restricted to
functions not commomnly needed by naive users because it provides them with a line 
within which they need not worry about doing something which will break something.

			-- carl

Date: Tuesday, 2 March 1982, 12:22-EST
From: Mike McMahon <MMcM at SCRC-TENEX>
To: EB at MIT-AI
Cc: BUG-LISPM at MIT-AI

    Date: 2 March 1982 02:11-EST
    From: Edward Barton <EB at MIT-AI>
    Is there some way other than Dired and Terminal Q to get a hardcopy listing of
    a file directory?
I personally use M-X Execute Command Into Buffer for things like this.

Date: 2 March 1982 11:49-EST
From: dick@mit-ai
Sender: PLAN at MIT-AI
To: BUG-LISPM at MIT-AI

In System 79.19, ZMail 40.7, Remote-File 2.0, LMFILE-Remote 5.3,
microcode 849, on Lisp Machine Twenty-two:

  Sorry for the typo in my previous message.  The reason I am complaining is that
things worked 99% right.  The ONLY problem is the fact that the atom PROPERTY
in question ends up in the wrong package.  In particular the fn tuz:baz
works just fine.  
  I have discovered that the problem is fixed if I put PACKAGE:SI in the
first line of the file.  This is a gross cludge.  The problem clearly
stems from the atoms that are in the file's package not getting any prefix
when stored in the qfasl.  I think this is a crock (though usefull I am sure).
  Also I think that it is a very nice thing to be able to have a small utility
program in a seperate package all defined in a single file, and that there should
be some way to do this.

                    Dick Waters

;-------
;-*-mode:lisp; package:user-*-

; If you compile the following file everything works great except that
;it blows up when you try to load the qfasl file in because it has a function
;destination of (tuz:property tuz:foo tuz:bar) instead of
;(:property tuz:foo tuz:bar).  If you globalize 'property then the file
;can be loaded in.  It seems to me that this is a bug in the compiler.

(eval-when (eval load compile)
	   (eval '(package-declare tuz global 1000 ()))
	   (pkg-goto 'tuz))

(defun baz nil 4)

(defun (foo bar) nil t)
;-------

Date: 2 March 1982 10:07-EST
From: George J. Carrette <GJC at MIT-MC>
To: BAK at MIT-AI
cc: BUG-LISPM at MIT-AI

    Date: 1 March 1982 20:05-EST
    From: William A. Kornfeld <BAK at MIT-AI>
    To:   BUG-LISPM at MIT-AI

    In System 79.18, ZMail 40.7, Remote-File 2.0, LMFILE-Remote 5.2,
    microcode 849, 60.45Hz, on Lisp Machine Nine:

    Is there any reason why the rational number functions (SI:RATIONAL,
    SI:DENOMINATOR, SI:NUMERATOR, etc.) haven't been globalized?

RATIONAL, DEMOMINATOR, and NUMERATOR are very common symbols to
find in programs which deal with math, e.g. MACSYMA.
Maybe they shouldn't be in SI, but the certainly shouldn't be globalized.


Date: 2 March 1982 02:11-EST
From: Edward Barton <EB at MIT-AI>
To: BUG-LISPM at MIT-AI

Is there some way other than Dired and Terminal Q to get a hardcopy listing of
a file directory?

Date: 1 March 1982 23:34-EST
From: William A. Kornfeld <BAK at MIT-AI>
Subject: chaos connections timing out
To: DLA at MIT-AI
cc: BUG-LISPM at MIT-AI

Please explain to me why this error should not be proceedable.  It seems to me
that there is exactly one way to proceed (namely try again).  This being the
case, it seems wrong to me that that has to be said in n system programs rather
than in one single place.

dph@MIT-ML 03/01/82 23:33:01
To: (BUG LISPM) at MIT-AI
In System 79.18, ZMail 40.7, Remote-File 2.0, LMFILE-Remote 5.2,
microcode 849, 79.5 RM 4.1, on Lisp Machine Two:

fs:file-property-list returns nil when the file plist does not have
a semicolon after its last entry.  e.g., -*-mode:lisp; package:user-*-
returns nil, but -*-mode:lisp; package:user;-*- returns (mode lisp
package user)



Date: Monday, 1 March 1982, 23:00-EST
From: David L. Andre <DLA at SCRC-TENEX>
To: BAK at MIT-AI
Cc: BUG-LISPM at SCRC-TENEX

    Date: 1 March 1982 20:34-EST
    From: William A. Kornfeld <BAK at MIT-AI>

    Why is there no way to proceed from the error:
    Attempt to establish chaos connection timed out.

Well, I'm tempted to say "This will be fixed in the new error system",
but instead, I'll be a little more specific.  In general, this error
should NOT be proceedable, unless the program in which it is signalled
is prepared to handle that condition.  Come the new error system, all
system programs which can will be changed to handle that condition.
But in general, what you reported is not a bug.

BTW, to lend some credence to the "this will be fixed in the new error
system" replies, you'll be happy to know that I'm beginning work on it
this week.

Date: Monday, 1 March 1982, 22:35-EST
From: David Chapman <Zvona at MIT-AI>
To: DLA at SCRC-TENEX
Cc: BUG-LISPM at MIT-AI
In-reply-to: The message of 1 Mar 82 20:59-EST from David L. Andre <DLA at SCRC-TENEX>

    God damn it, LOAD-AND-SAVE-PATCHES shouldn't be called from an init file
    anyway!!!  If you do that, you save the init file environment in the
    world load, which causes all sorts of wierd problems when people (namely
    me) find the behavior to be different from the default.
I am not completely stupid.  load-and-save-patches is the very
first thing in my init file.  I use n different machines and like
to have an up-to-date system and noone else seems to save
patches.  So it is something I do pretty often.  I want to check
for patches every time I log in, and it seems reasonable to save
them if there are any.

Date: Monday, 1 March 1982, 20:59-EST
From: David L. Andre <DLA at SCRC-TENEX>
To: Zvona at MIT-AI
Cc: BUG-LISPM at MIT-AI, DLA at SCRC-TENEX

    Date: 1 March 1982 16:08-EST
    From: David Chapman <Zvona at MIT-AI>

    load-and-save-patches can not possibly win in an init file because it
    does (readline) when standard-input is bound to the file input stream.
    I don't know if this is a bug in load-and-save-patches or in readfile.
    It seems random to bind standard-input in readfile to me.

God damn it, LOAD-AND-SAVE-PATCHES shouldn't be called from an init file
anyway!!!  If you do that, you save the init file environment in the
world load, which causes all sorts of wierd problems when people (namely
me) find the behavior to be different from the default.
LOAD-AND-SAVE-PATCHES is intended to be used as follows:

1.  Boot the machine.
2.  (LOAD-AND-SAVE-PATCHES).

So don't save it in your init file!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

Date: 1 March 1982 20:34-EST
From: William A. Kornfeld <BAK at MIT-AI>
To: BUG-LISPM at MIT-AI

Why is there no way to proceed from the error:

Attempt to establish chaos connection timed out.    [?]

Date: 1 March 1982 20:05-EST
From: William A. Kornfeld <BAK at MIT-AI>
To: BUG-LISPM at MIT-AI

In System 79.18, ZMail 40.7, Remote-File 2.0, LMFILE-Remote 5.2,
microcode 849, 60.45Hz, on Lisp Machine Nine:

Is there any reason why the rational number functions (SI:RATIONAL,
SI:DENOMINATOR, SI:NUMERATOR, etc.) haven't been globalized?

Date: Monday, 1 March 1982, 17:24-EST
From: David Chapman <Zvona at MIT-AI>
To: BUG-LISPM at MIT-AI

In System 79.18, ZMail 40.7, Remote-File 2.0, LMFILE-Remote 5.2,
microcode 849, 60.45Hz, on Lisp Machine One:

What hacking Converse to send to more than one person in the To:
line?  it parses foo@bar, baz@quux as bar, baz@quux being the
host for foo...

Date: 1 March 1982 16:08-EST
From: David Chapman <Zvona at MIT-AI>
To: BUG-LISPM at MIT-AI

In System 79.18, ZMail 40.7, Remote-File 2.0, LMFILE-Remote 5.2,
microcode 849, 60.45Hz, on Lisp Machine One:

load-and-save-patches can not possibly win in an init file because it
does (readline) when standard-input is bound to the file input stream.
I don't know if this is a bug in load-and-save-patches or in readfile.
It seems random to bind standard-input in readfile to me.

Date: Monday, 1 March 1982  14:44-EST
From: MOON at SCRC-TENEX
To:   dick at MIT-AI
Cc:   BUG-LISPM at MIT-AI, RICH at MIT-AI
Subject: Your bug report

It can't work to load something into a package different from the package
it was compiled in.  If you change (PKG-GOTO 'TUZ) to 
(EVAL-WHEN (COMPILE LOAD EVAL) (PKG-GOTO 'TUZ)), it might stand a good
chance of working.  However, the only approved method is to declare your
package in a separate file.

Date: 1 March 1982 13:53-EST
From: dick@MIT-AI
Sender: RICH at MIT-AI
To: BUG-LISPM at MIT-AI
cc: RICH at MIT-AI

In System 79.18, ZMail 40.7, Remote-File 2.0, LMFILE-Remote 5.2,
Programmer's Apprentice 21.4, microcode 849, on Lisp Machine Twenty-two:


 IF YOU COMPILE THE FOLLOWING FILE EVERYTHING WORKS GREAT EXCEPT THAT
IT BLOWS UP WHEN YOU TRY TO LOAD THE QFASL FILE IN BECAUSE IT HAS A FUNCTION
DESTINATION OF (TUZ:PROPERTY TUZ:FOO TUZ:BAR) INSTEAD OF
(:PROPERTY TUZ:FOO TUZ:BAR).  IF YOU GLOBALIZE 'PROPERTY THEN THE FILE
CAN BE LOADED IN.  IT SEEMS TO ME THAT THIS IS A BUG IN THE COMPILER.

;-----------
;; USER SYSTEM DEFN FOR REASONING UTILITY PACKAGE (-*-MODE:LISP; PACKAGE:USER-*-)

(EVAL-WHEN (EVAL LOAD COMPILE)
	   (EVAL '(PACKAGE-DECLARE TUZ GLOBAL 2000;MUST USE EVAL
				   ())))

(PKG-GOTO 'TUZ)

(DEFUN (FOO BAR) NIL T)

;-----------

  YOU MIGHT ASK WHY I HAVE THE ABOVE CLUDGE ANYWAY.  THE ANSWER IS SO THAT YOU
CAN LOAD THE FILE IN AND HAVE THE FUNCTIONS GO INTO THERE OWN PACKAGE 
WITHOUT HAVING TO HAVE THE PACKAGE PREDEFINED.  IF THEIR IS A BETTER
WAY TO DO THAT THEN I WOULD BE DELIGHTED TO USE IT. 


				Dick Waters

Date: 1 March 1982 13:08-EST
From: Edward Barton <EB at MIT-AI>
Subject: EQUAL messages
To: HENRY at MIT-AI
cc: BUG-LISPM at MIT-AI

    Date: 1 March 1982 12:15-EST
    From: Henry Lieberman <HENRY at MIT-AI>

    I am strongly in favor of having the EQUAL
    function send messages in the case that an argument
    is an object. Not doing so makes the EQUAL function
    unusable when there's a possibility that one of the
    arguments is an object. At the very least, all 
    objects should respond to EQUAL messages even if
    the EQUAL function does not do this, so you could
    compare objects by sending EQUAL messages.

I agree.  Note, however, that unless :equal messages are
installed in EQUAL itself, you won't be able to get other
people's programs that use EQUAL for comparisons in their
internal operations to operate properly on objects that
you pass in to them.

Date: 1 March 1982 12:15-EST
From: Henry Lieberman <HENRY at MIT-AI>
Subject:  EQUAL messages
To: BUG-LISPM at MIT-AI


I am strongly in favor of having the EQUAL
function send messages in the case that an argument
is an object. Not doing so makes the EQUAL function
unusable when there's a possibility that one of the
arguments is an object. At the very least, all 
objects should respond to EQUAL messages even if
the EQUAL function does not do this, so you could
compare objects by sending EQUAL messages.


LMMAX@MIT-MC 03/01/82 09:44:21
To: (BUG LISPM) at MIT-AI
In System 79.18, ZMail 40.7, Remote-File 2.0, LMFILE-Remote 5.2,
microcode 849, 60Hz Mathlab, on Lisp Machine Sixteen:

The following function gets an arithmetic error during compilation:

(defun f () (//$ 1.0 0.0))

It really pisses me off to wake up in the morning expecting to see a
Macsyma world-recompilation complete, but instead find that it
bombed out because of some incompetently done compiler optimization
like this. People doing compiler optimizations must have more foresight
than demonstrated here! Arithemetic errors should have been caught and
warnings generated, but no bombing out. 

In any case it is most disheartening to see easy-to-do trivial optimizations
of this kind added to the lispmachine compiler so late in its life-cycle.
It is just about useless, a waste of programmer and machine time. Who
is piddling around with this stuff anyway? Can't they at least have
the decency to hack only their own personal environment.

-gjc



Date:  1 Mar 1982 0824-EST
From: David L. Andre <DLA at SCRC-TENEX>
Subject: Your Converse Bug
To: CARLF at MIT-AI, BUG-LISPM at MIT-AI
cc: DLA at SCRC-TENEX
In-Reply-To: Your message of 28-Feb-82 1404-EST

Try loading patches.
-------

Date: 28 February 1982 22:49-EST
From: Edward Barton <EB at MIT-AI>
To: BUG-LISPM at MIT-AI

In System 79.18, ZMail 40.7, Remote-File 2.0, LMFILE-Remote 5.2,
microcode 849, 60Hz Mathlab, on Lisp Machine Sixteen:

An ITS pathname with device component :UNSPECIFIC appears to give an
error, No Such Device.  Should it just use DSK in such a case?  I am
getting the :UNSPECIFIC from the :device of another pathname.

Date: Sunday, 28 February 1982  17:50-EST
From: MMCM at SCRC-TENEX
To:   Gregor J. Kiczales <Gregor at MIT-AI>
Cc:   BUG-LISPM at SCRC-TENEX

    Date: 28 February 1982 16:16-EST
    From: Gregor J. Kiczales <Gregor at MIT-AI>
    This is probably a known bug, but
    Having the deeexposed typeout-action of a pane of a constraint
    frame be :EXPOSE doen't work. Trying to draw on the pane will
    expose the pane, and allow the drawing to take place. But it
    does not expose a configuration that the pane is in. Admittedly
    this might be complicated in a frame where there are several
    configurations which include that pane, but it shouldn't be hard
    when there is only one configuration which includes that pane,
    and even in the more complex case perhaps exposing the last used
    configuration would might work. I need something like this,
    being able to set the deexposed typeout action to a function
    which would be called would be good enough though (of course).
    --Gregor--
Why don't you just set the deexposed typeout action to some other
message which does whatever complicated setup of configurations
you want?

Date: 28 February 1982 17:12-EST
From: Carl W. Hoffman <CWH at MIT-MC>
To: RMS at MIT-AI, BUG-LISPM at MIT-AI

    Date: 28 February 1982 03:29-EST
    From: Richard M. Stallman <RMS at MIT-AI>

    If the messages in Converse were separate windows, C-X O would be
    insufficient for moving between them, and new commands would need to
    be invented.  C-X O is fine for two windows, but not powerful enough
    to be convenient with many windows.  The new commands would be a pain
    to remember.

What's wrong with using the mouse?  Or C-X O?  If a Zwei frame were
split into several panes, I would prefer that C-X O cycled through them
in the same way as Terminal O cycles through windows, for consistency.
That is only one new command, and is applicable to Zwei in general, not
just Converse.  Using C-X O would be consistent with ZMail.

    Why shouldn't it be possible to delete a black line?
    A user might want to merge the text of two messages.
    He might want to kill two entire conversations, complete with
    terminating black lines, and yank them back in a different position.

This same argument could be applied to two window mode in Zwei.
I would rather be able to scroll through messages individually.

    It is true that you killed a black line and afterward lossage happened
    to you, but prohibiting the operation is not the only solution.

If you're going to allow black lines to be killed, then draw them as
dashed lines or something.  Don't fool the user into thinking they are
like the edges of windows.

Being able to delete black lines is bad for new users, also.  Suppose
I am near the end of my message and I am typing C-D repeatedly.  If I
type a couple too many, then my black line goes away and C-Y won't bring
it back.  On the other hand, a new user can easily understand using the
mouse to pick out the message to edit.


Date: 28 February 1982 16:16-EST
From: Gregor J. Kiczales <Gregor at MIT-AI>
To: BUG-LISPM at SCRC-TENEX

In System 79.16, ZMail 40.7, Remote-File 2.0, LMFILE-Remote 5.2,
microcode 849, 60.5hz, on Lisp Machine Twenty:

This is probably a known bug, but
Having the deeexposed typeout-action of a pane of a constraint
frame be :EXPOSE doen't work. Trying to draw on the pane will
expose the pane, and allow the drawing to take place. But it
does not expose a configuration that the pane is in. Admittedly
this might be complicated in a frame where there are several
configurations which include that pane, but it shouldn't be hard
when there is only one configuration which includes that pane,
and even in the more complex case perhaps exposing the last used
configuration would might work. I need something like this,
being able to set the deexposed typeout action to a function
which would be called would be good enough though (of course).
--Gregor--

Date: 28 February 1982 16:13-EST
From: Steven C. Bagley <Bagley at MIT-MC>
To: BUG-lispm at MIT-AI, BUG-lmman at MIT-AI

Is binding PACKAGE to NIL the accepted way of forcing the package prefix
to be printed by PRINT, FORMAT, and friends.  If so, this ought to be
documented in the appropriate places (FORMAT section, package chapter). 

Date: 28 February 1982 16:10-EST
From: Steven C. Bagley <Bagley at MIT-MC>
To: BUG-lispm at MIT-AI

How about separating the funtionality of Converse and what QSEND used to
do?  I find having this huge Converse frame flying around to be an
inconvenience at best when all I want to do is send someone a quick
message.  Keep QSEND for quicky messages, use Converse to talk to your
mother, etc.

Date: Sunday, 28 February 1982  15:00-EST
From: MOON at SCRC-TENEX
To:   Carl W. Hoffman <CWH at MIT-MC>
Cc:   BUG-LISPM at MIT-AI, CAL at MIT-AI
Subject: Converse being slow to pop up

I find the user-option to print messages with a notification, rather than
by popping up a window, to be extremely convenient.  Look in the Converse
HELP documentation or my init file.  The good thing about this is not that
it is faster, but that I am not instantly interrupted from what I am doing
and forced to answer the message.

Date: 28 February 1982 15:00-EST
From: Carl Richard Feynman <CARLF at MIT-AI>
Subject: another inspector bug
To: BUG-LISPM at MIT-AI

In Experimental System 79.8, ZMail 40.7, Experimental LMFILE Remote 4.1,
Remote-File 2.0, LMFILE-Remote 5.0, microcode 849, 79.5 RM 4.1, on Lisp Machine Two:

Mousing middle when the mouse is actually on top of an item in the history
window, rather than to its left, causes an error.

Date: Sunday, 28 February 1982  14:56-EST
From: MOON at SCRC-TENEX
To:   BSG at SCRC-TENEX
Cc:   BUG-LISPM at MIT-AI, CWH at MIT-AI,
      Richard M. Stallman <RMS at MIT-AI>
Subject:What exactly is converse doing the first time it pops up?

It's losing completely because of a one-character typographical error
which was fixed in the source a long time ago.  However the effect of the
fix unfortunately doesn't take effect until a new world-load is built.
No bumming, hyper or otherwise, is required.

Date: 28 February 1982 14:56-EST
From: Carl Richard Feynman <CARLF at MIT-AI>
To: BUG-LISPM at MIT-AI

In Experimental System 79.8, ZMail 40.7, Experimental LMFILE Remote 4.1,
Remote-File 2.0, LMFILE-Remote 5.0, microcode 849, 79.5 RM 4.1, on Lisp Machine Two:

The inspector has trouble with lists one of whose elements is a string one of
whose characters is a tab. Also, the black line at the bottom of the screen that
says what the mouse is for does not document the fact that mousing middle on an item
in the history window deletes it.

Date: 28 February 1982 13:52-EST
From: Carl Richard Feynman <CARLF at MIT-AI>
To: BUG-LISPM at MIT-AI

In Experimental System 79.8, ZMail 40.7, Experimental LMFILE Remote 4.1,
Remote-File 2.0, LMFILE-Remote 5.0, microcode 849, 79.5 RM 4.1, on Lisp Machine Two:

When I use Converse to send a message I get a bug about CHAOS:SITE-NAME
being an unbound variable. Linking it to SI:SITE-NAME fixes things.

Also, the documentation Converse prints out when the HELP key is pushed 
has lines to long to fit on the screen.
					-- Carl

Date: Sunday, 28 February 1982  12:18-EST
From: BSG at SCRC-TENEX
To:   Richard M. Stallman <RMS at MIT-AI>
Cc:   BUG-LISPM at MIT-AI, CWH at MIT-AI

What exactly is converse doing the first time it pops up?  Zmacs doesnt
take that long the first time you select it.  If there ever were a case
where hyper-bumming to make it fast the first time, including preparing
the entire frame, perhaps special messages to get a lot of the window
system stuff done at load time, etc, were appropriate this is it.

Date: Sunday, 28 February 1982  03:28-EST
From: HIC at SCRC-TENEX
To:   David L. Andre <DLA at SCRC-TENEX>
Cc:   BUG-LISPM at SCRC-TENEX, EB at MIT-ML

Sending :EQUAL messages also brings up the binary operator problem.

Date: 28 February 1982 03:29-EST
From: Richard M. Stallman <RMS at MIT-AI>
To: BUG-LISPM at MIT-AI, CWH at MIT-MC

If the messages in Converse were separate windows, C-X O would be
insufficient for moving between them, and new commands would need to
be invented.  C-X O is fine for two windows, but not powerful enough
to be convenient with many windows.  The new commands would be a pain
to remember.

Why shouldn't it be possible to delete a black line?
A user might want to merge the text of two messages.
He might want to kill two entire conversations, complete with
terminating black lines, and yank them back in a different position.

It is true that you killed a black line and afterward lossage happened
to you, but prohibiting the operation is not the only solution.

Date: 28 February 1982 02:29-EST
From: Pandora B. Berman <CENT at MIT-AI>
Subject: cadr8 kbd
To: BATALI at MIT-AI
cc: BUG-HARDWARE at MIT-AI, BUG-LISPM at MIT-AI

if the problems with this have not been fixed yet, take the kbd
up to fred drenhkhan in 917. he is the local kbd-meister. he is on 
bug-hardware but i'm not sure how often he reads his mail,
so if kbd problems don't get responded to within a few days
the surest way to get them fixed is to actually find fred in
person. (anything you can do to spread this info on how to get
kbds fixed would be appreciated.)

Date: 28 February 1982 02:23-EST
From: Carl W. Hoffman <CWH at MIT-MC>
To: RMS at MIT-AI, BUG-LISPM at MIT-AI

    Date: 28 February 1982 00:39-EST
    From: Richard M. Stallman <RMS at MIT-AI>

    I would find it a nuisance if C-N and C-P did not work to go between
    the different conversations in Converse.  It would fit a computer scientist's
    idea of "clean" if they did not work.  It would, however, be a pain
    to have to remember the special new "clean" commands instead of using
    all the ones I already know.

But this is inconsistent with the rest of the system.  In ZMail message
mode, one doesn't use C-N to go from the To: area to the message area.
I find it useful in ZMail that M-< takes me to the beginning of the
message, and I would also find this useful in Converse.

This isn't an issue of making C-N "not" work.  It should just work as
it works in the rest of the system.  When one sees a black line (as in
Emacs two window mode), one doesn't expect to be able to C-N across it.

I would rather that the separate portions of converse behave like
separate windows.  If there is more text than can fit on the screen,
then the first few lines of each message would appear, and one could
scroll through individual messages as with separate files in separate
windows.

Whether or not C-N can move across black lines, it should not be
possible to delete them.


Date: Sunday, 28 February 1982, 02:07-EST
From: David L. Andre <DLA at SCRC-TENEX>
To: RMS at MIT-AI
Cc: BUG-LISPM at SCRC-TENEX

    Date: 28 February 1982 01:21-EST
    From: Richard M. Stallman <RMS at MIT-AI>
    To: BUG-LISPM at MIT-AI

    Perhaps logging in should get the user's homedir and save it so that
    there is no further need to refer to the remote filecomputer to
    determine the homedir.
That is what is currently done (at least with the FILE protocol).

Date: 28 February 1982 02:07-EST
From: Carl W. Hoffman <CWH at MIT-MC>
Subject: Rational arithmetic bug
To: BUG-LISPM at MIT-AI

In System 79.17, ZMail 40.7, Remote-File 2.0, LMFILE-Remote 5.2,
microcode 849, Mathlab, on Lisp Machine Fifteen:

On a bare machine, type the following:

    (load "mc:cwh2;cf")
    (setup)
    f
    (setq a (poly-cf-root f 100))
    (setq b (cf-to-rational a))
    (setq c (poly-value f b))

After typing the last form, the machine will hang.  At other times when
I tried this, I got back a correct answer, but then after printing c a
few times or doing some other computation with it, the machine would die
or read DTP-TRAP words.


Date: 28 February 1982 01:21-EST
From: Richard M. Stallman <RMS at MIT-AI>
To: BUG-LISPM at MIT-AI

Perhaps logging in should get the user's homedir and save it so that
there is no further need to refer to the remote filecomputer to
determine the homedir.

Date: 28 February 1982 01:17-EST
From: Richard M. Stallman <RMS at MIT-AI>
To: BUG-LISPM at MIT-AI, CWH at MIT-AI

I share CWH's feeling that Converse may not be worth while because it
takes so long to pop up.

I've felt this way about many features of the Lisp machine system.
There is a real tendency to try to make each facility very complicated
so that it can be told, in hairy detail, what is the right thing to do
for each possible situation; to make every possible distinction.  The
result is a system that is so slow it is no fun to use, regardless of
how right it is.

Date: 28 February 1982 00:49-EST
From: Carl W. Hoffman <CWH at MIT-MC>
To: BUG-LISPM at MIT-AI

In System 79.17, ZMail 40.7, Remote-File 2.0, LMFILE-Remote 5.2,
microcode 849, Mathlab, on Lisp Machine Fifteen:

It seems inconsistent that (^ 0 0) yields 1, but (^ 0.0 0) is an error.  I
would prefer them to both be 1.


Date: 28 February 1982 00:39-EST
From: Richard M. Stallman <RMS at MIT-AI>
To: BUG-LISPM at MIT-AI, CWH at MIT-AI

I would find it a nuisance if C-N and C-P did not work to go between
the different conversations in Converse.  It would fit a computer scientist's
idea of "clean" if they did not work.  It would, however, be a pain
to have to remember the special new "clean" commands instead of using
all the ones I already know.

It sounds as though Regenerate Buffer and associated things are not working
in the best manner, but the solution is to fix them.

Date: 28 February 1982 00:24-EST
From: Carl W. Hoffman <CWH at MIT-MC>
To: BUG-LISPM at MIT-AI, CAL at MIT-AI

In System 79.17, ZMail 40.7, Remote-File 2.0, LMFILE-Remote 5.2,
microcode 849, Mathlab, on Lisp Machine Fifteen:

I was in Converse, had just finished typing a long reply to a message and
accidentally deleted one of the black lines.  When I hit End, I received a
message saying to type M-X Regenerate Buffer.  I did so, and my entire reply
disappeared, irritating me considerably.

I don't think it should be possible to delete the black lines or move between
messages with C-P and C-N.  Each of the messages should behave as a buffer of
its own, i.e. M-< should take you to the beginning of the message, and there
should be separate commands for moving between messages.

There's this other problem with the Converse system.  It takes a long time for
the window to pop up, and this makes conversations with frequent, short
messages more difficult than it was in the old system.  I'd like to see some
sort of option whereby the bits in that window aren't saved so that it pops up
a little more quickly.

I don't carry on long conversations from Lisp Machines.  Most of the messages
I receive are brief queries and answers, so the old qsend system served my
needs better than this one does.  I'd rather use something more like it:
smaller, faster, simpler.


Date: 27 February 1982 23:55-EST
From: Gregor J. Kiczales <Gregor at MIT-AI>
Subject: Save Draft default file name
To: RWK at SCRC-TENEX, MMCM at SCRC-TENEX
cc: GREGOR at MIT-AI, JWALKER at SCRC-TENEX, BUG-ZMAIL at SCRC-TENEX,
    bug-lispm at SCRC-TENEX

    Date: Friday, 26 February 1982, 12:49-EST
    From: Robert W. Kerns <RWK at SCRC-TENEX>
    Subject: Save Draft default file name
    To: MMCM at SCRC-TENEX
    Cc: Jan Walker <JWALKER at SCRC-TENEX>, BUG-ZMAIL at SCRC-TENEX,
	bug-lispm at SCRC-TENEX
    In-reply-to: The message of 26 Feb 82 12:35-EST from MMCM at SCRC-TENEX

	Date: Friday, 26 February 1982  12:35-EST
	From: MMCM at SCRC-TENEX
	  
	It connects to your login host to make up pathname defaults for the
	prompt for what file to use, not to open some file.
    Er, what does it need to connect to a host for to determine pathname defaults?
    In any event, I think it's better to just supply bogus defaults than to depend
    on the net for this.

This also causes a bugged where if you are  logged in with host AI and
want to use ZWEI to get a file off of MC, and AI is down, saying c-X c-f
causes an error can't connect to host AI.

Date: 27 February 1982 22:46-EST
From: Edward Barton <EB at MIT-AI>
To: BUG-LISPM at MIT-AI

In System 79.17, ZMail 40.7, Remote-File 2.0, LMFILE-Remote 5.2,
microcode 849, 60.45Hz, on Lisp Machine Nine:

M-X Copy File gets the truename of the source to use for defaults, then
prompts for a destination filename.  If the source is FC:EB;NHVFC, truename
NHVFC#43, and I just say AI:NHVFC, this time it writes AI:EB;NHVFC 42,
overwriting the highest existing version.  That seems wrong too.

Date: 27 February 1982 22:43-EST
From: Edward Barton <EB at MIT-AI>
To: BUG-LISPM at MIT-AI

In System 79.17, ZMail 40.7, Remote-File 2.0, LMFILE-Remote 5.2,
microcode 849, 60.45Hz, on Lisp Machine Nine:

M-X Copy File of FC:EB;NHVFC gets the truename to use for defaults,
then prompts for a destination filename.  If I just say AI:, it copies
to AI:EB;FOO 43 (where 43 is the truename version of the source).
It seems silly to default the version number but not the name.

Date: Saturday, 27 February 1982, 20:35-EST
From: David L. Andre <DLA at SCRC-TENEX>
To: EB at MIT-ML
Cc: DLA at SCRC-TENEX, BUG-LISPM at SCRC-TENEX

    From: EB@MIT-ML
    Date: 02/26/82 22:24:03
    As it is documented to do, EQUAL degenerates to EQ for instances.  Can someone
    explain why it was decided not to send instances :EQUAL messages instead?
Mainly because nobody has gotten around to doing it, as far as I can
tell.  It's not trivial, since EQUAL is in the microcode.  Similarly for
GET.

dph@MIT-ML 02/27/82 01:20:53
To: (BUG LISPM) at MIT-AI
In System 78.57, ZMail 38.5, Local-File 31.10, Experimental Spire 1.2,
   microcode 836, 60Hz, on Lisp Machine Twelve:

I often get screwed by a "Not logged in" error when I try to access
files from a file connection to a twenex host.  If the twenex file-job
has logged me out the lispm should (and sometimes does) prompt me again
for my loginname and password -- actually it probably should keep this
information around and provide it to twenex automatically until I log
out of the lispm.  Sometimes, however, it just gives a not logged in
error and asks me for another pathname.  It certainly shouldn't ask for
a pathname on a file-job NLI error.  Logging out and back in on the
lispm seems to cause it to prompt correctly on opening the twenex file
job.


EB@MIT-ML 02/27/82 00:01:38
To: (BUG LISPM) at MIT-AI
In System 79.16, ZMail 40.7, Remote-File 2.0, LMFILE-Remote 5.2,
microcode 849, CStacy spacial, on Lisp Machine Six:

M-X Copy File applied to fc:eb;ndbe gets the truename of the file to use for
defaults and asks me for a destination pathname.  In this case I said fc:eb\old;,
referring to a directory that exists.  I then got an error "File Not Found"
for fc:eb\old;ndbe#21 (the old truename with new directory).  Of course the
destination filename wasn't found; why should it have been?


EB@MIT-ML 02/26/82 22:24:03
To: (BUG LISPM) at MIT-ML

As it is documented to do, EQUAL degenerates to EQ for instances.  Can someone
explain why it was decided not to send instances :EQUAL messages instead?


Date: Friday, 26 February 1982, 21:46-EST
From: David L. Andre <DLA at SCRC-TENEX>
To: RICH at MIT-AI
Cc: BUG-LISPM at MIT-AI, DLA at SCRC-TENEX

    Date: 25 February 1982 14:11-EST
    From: Charles Rich <RICH at MIT-AI>

    The Rename File command on FS: does not delete the old file; it seems
    to work like copy.
This is untrue under any circumstances I can come up with.  RENAME is
different from copying and deleting at every level (Editor, Protocol,
and Code).  Are you sure you're not confused?

Date: Friday, 26 February 1982  17:45-EST
From: HIC at SCRC-TENEX
To:   George J. Carrette <GJC at MIT-MC>
Cc:   bak at SCRC-TENEX, bug-lispm at SCRC-TENEX

    Date: Friday, 26 February 1982  15:11-EST
    From: George J. Carrette <GJC at MIT-MC>
    To:   HIC
    cc:   bak, bug-lispm

    Where did NLAMBDA come from????
It's written as a lambda macro, of course.

Date: 26 February 1982 16:04-EST
From: George J. Carrette <GJC at MIT-MC>
Subject:  mini funny
To: JWALKER at SCRC-TENEX
cc: bug-lispm at SCRC-TENEX, BUG-ZMAIL at SCRC-TENEX,
    MMcM at SCRC-TENEX

    From: Janet H. Walker <JWALKER at SCRC-TENEX>
    Re:   Save Draft default file name

    Design question of the hour:  when is a default not a default?

A: When its not default of any of the implementors.

Date: 26 February 1982 15:11-EST
From: George J. Carrette <GJC at MIT-MC>
To: HIC at SCRC-TENEX
cc: bak at SCRC-TENEX, bug-lispm at SCRC-TENEX

Where did NLAMBDA come from????

Date: Friday, 26 February 1982, 14:30-EST
From: Robert W. Kerns <RWK at SCRC-TENEX>
Subject: Save Draft default file name
To: Mike McMahon <MMcM at SCRC-TENEX>
Cc: JWALKER at SCRC-TENEX, BUG-ZMAIL at SCRC-TENEX, bug-lispm at SCRC-TENEX
In-reply-to: The message of 26 Feb 82 13:29-EST from Mike McMahon <MMcM at SCRC-TENEX>



    Date: Friday, 26 February 1982, 13:29-EST
    From: Mike McMahon <MMcM at SCRC-TENEX>
    Subject: Save Draft default file name
    To: RWK at SCRC-TENEX
    Cc: JWALKER at SCRC-TENEX, BUG-ZMAIL at SCRC-TENEX, bug-lispm at SCRC-TENEX

	Date: Friday, 26 February 1982, 12:49-EST
	From: Robert W. Kerns <RWK at SCRC-TENEX>
	    bug-lispm at SCRC-TENEX
	    Date: Friday, 26 February 1982  12:35-EST
	    From: MMCM at SCRC-TENEX
		Date: Friday, 26 February 1982, 12:19-EST
		From: Jan Walker <JWALKER at SCRC-TENEX>
		I found a menu item called Save Draft so I thought I would try it.  (I
		had a draft that it might have been reasonable to save but it turned out
		that the Foonly was down at the time).  So I clicked on that menu item.
		It went off I guess and tried to open up a connection to the Foonly and
		hence crapped out with an error trap.  I discovered later while playing
		with the profile editor that the value for Save Draft file name was NIL.

		So it seems like ZMail is doing some things backwards.  Why did it go
		off to the Foonly to look for a file when the file name default was NIL?
		Why didn't it either tell me that there wasn't a file specified or else
		prompt me for a path name?
	    It connects to your login host to make up pathname defaults for the
	    prompt for what file to use, not to open some file.
	Er, what does it need to connect to a host for to determine pathname defaults?
    Because the default for that command is <homedir>draft.text.
	In any event, I think it's better to just supply bogus defaults than to depend
	on the net for this.
    No.  It's better to have an error system that keeps you from blowing out.
Actually, I'm still confused.  Doesn't it already know the <homedir> without
going to the host?

Date: Friday, 26 February 1982, 13:57-EST
From: Janet H. Walker <JWALKER at SCRC-TENEX>
Subject: Save Draft default file name
To: MMcM at SCRC-TENEX
Cc: BUG-ZMAIL at SCRC-TENEX, bug-lispm at SCRC-TENEX

      Er, what does it need to connect to a host for to determine pathname
      defaults?
    Because the default for that command is <homedir>draft.text.

Default?  Wait a sec.  According to the profile, the default for that
command is NIL.

Design question of the hour:  when is a default not a default?

Date: Friday, 26 February 1982, 13:29-EST
From: Mike McMahon <MMcM at SCRC-TENEX>
Subject: Save Draft default file name
To: RWK at SCRC-TENEX
Cc: JWALKER at SCRC-TENEX, BUG-ZMAIL at SCRC-TENEX, bug-lispm at SCRC-TENEX

    Date: Friday, 26 February 1982, 12:49-EST
    From: Robert W. Kerns <RWK at SCRC-TENEX>
	bug-lispm at SCRC-TENEX
	Date: Friday, 26 February 1982  12:35-EST
	From: MMCM at SCRC-TENEX
	    Date: Friday, 26 February 1982, 12:19-EST
	    From: Jan Walker <JWALKER at SCRC-TENEX>
	    I found a menu item called Save Draft so I thought I would try it.  (I
	    had a draft that it might have been reasonable to save but it turned out
	    that the Foonly was down at the time).  So I clicked on that menu item.
	    It went off I guess and tried to open up a connection to the Foonly and
	    hence crapped out with an error trap.  I discovered later while playing
	    with the profile editor that the value for Save Draft file name was NIL.

	    So it seems like ZMail is doing some things backwards.  Why did it go
	    off to the Foonly to look for a file when the file name default was NIL?
	    Why didn't it either tell me that there wasn't a file specified or else
	    prompt me for a path name?
	It connects to your login host to make up pathname defaults for the
	prompt for what file to use, not to open some file.
    Er, what does it need to connect to a host for to determine pathname defaults?
Because the default for that command is <homedir>draft.text.
    In any event, I think it's better to just supply bogus defaults than to depend
    on the net for this.
No.  It's better to have an error system that keeps you from blowing out.

Date: Friday, 26 February 1982, 12:55-EST
From: Jan Walker <JWALKER at SCRC-TENEX>
Subject: Save Draft default file name
To: MMCM at SCRC-TENEX, MMCM at SCRC-TENEX
Cc: BUG-ZMAIL at SCRC-TENEX, bug-lispm at SCRC-TENEX

    It connects to your login host to make up pathname defaults for the
    prompt for what file to use, not to open some file.

This is a case where it is being so helpful that it ends up losing.
These applications programs need some kind of error "analysis" that lets
them go to the user in extremes like this in case the user is in better
control of the situation than the machines are.

Date: Friday, 26 February 1982, 12:49-EST
From: Robert W. Kerns <RWK at SCRC-TENEX>
Subject: Save Draft default file name
To: MMCM at SCRC-TENEX
Cc: Jan Walker <JWALKER at SCRC-TENEX>, BUG-ZMAIL at SCRC-TENEX,
    bug-lispm at SCRC-TENEX
In-reply-to: The message of 26 Feb 82 12:35-EST from MMCM at SCRC-TENEX

    Date: Friday, 26 February 1982  12:35-EST
    From: MMCM at SCRC-TENEX
	Date: Friday, 26 February 1982, 12:19-EST
	From: Jan Walker <JWALKER at SCRC-TENEX>
	I found a menu item called Save Draft so I thought I would try it.  (I
	had a draft that it might have been reasonable to save but it turned out
	that the Foonly was down at the time).  So I clicked on that menu item.
	It went off I guess and tried to open up a connection to the Foonly and
	hence crapped out with an error trap.  I discovered later while playing
	with the profile editor that the value for Save Draft file name was NIL.

	So it seems like ZMail is doing some things backwards.  Why did it go
	off to the Foonly to look for a file when the file name default was NIL?
	Why didn't it either tell me that there wasn't a file specified or else
	prompt me for a path name?
    It connects to your login host to make up pathname defaults for the
    prompt for what file to use, not to open some file.
Er, what does it need to connect to a host for to determine pathname defaults?
In any event, I think it's better to just supply bogus defaults than to depend
on the net for this.

Date: Friday, 26 February 1982, 12:45-EST
From: Robert W. Kerns <RWK at SCRC-TENEX>
Subject: Expanding windows
To: Jan Walker <JWALKER at SCRC-TENEX>
Cc: BUG-LISPM at SCRC-TENEX
In-reply-to: The message of 26 Feb 82 12:29-EST from Jan Walker <JWALKER at SCRC-TENEX>

The way to do this (currently) is to use Reshape.  If you invert the
position of the little corners it provides (i.e. "make the size negative"
it will use the whole screen.  While this is a convenient hack, I think
there should be a "Whole Screen" option.

Date: Friday, 26 February 1982  12:35-EST
From: MMCM at SCRC-TENEX
To:   Jan Walker <JWALKER at SCRC-TENEX>
Cc:   BUG-ZMAIL at SCRC-TENEX, bug-lispm at SCRC-TENEX
Subject: Save Draft default file name

    Date: Friday, 26 February 1982, 12:19-EST
    From: Jan Walker <JWALKER at SCRC-TENEX>
    I found a menu item called Save Draft so I thought I would try it.  (I
    had a draft that it might have been reasonable to save but it turned out
    that the Foonly was down at the time).  So I clicked on that menu item.
    It went off I guess and tried to open up a connection to the Foonly and
    hence crapped out with an error trap.  I discovered later while playing
    with the profile editor that the value for Save Draft file name was NIL.

    So it seems like ZMail is doing some things backwards.  Why did it go
    off to the Foonly to look for a file when the file name default was NIL?
    Why didn't it either tell me that there wasn't a file specified or else
    prompt me for a path name?
It connects to your login host to make up pathname defaults for the
prompt for what file to use, not to open some file.

Date: Friday, 26 February 1982, 12:29-EST
From: Jan Walker <JWALKER at SCRC-TENEX>
Subject: Expanding windows
To: BUG-LISPM at SCRC-TENEX

In System 202.30, ZMail 40.8, Experimental Tape 7.0,
Experimental LMFS 22.23, Experimental Symbolics 9.3,
Experimental Canon 10.4, microcode 855, on Retriever:

I have two windows on the screen, having successfully used Split Screen.
Now I want to make the top window use the whole screen.  So I find on
the system menu an item called Edit Screen and I click L on that.  I'm
looking for an item that means "Make this window use the whole screen".
There isn't one.  Someone suggested that I use Expand Window but that is
not the right command because it is the one that means something like
"Rationalize Borders".  Using that menu item when there is no space for
the window to expand to is confusing because nothing perceptible happens
to the screen and you end up back on the menu again with no hint about
why.  The reason of course is that you asked for something that was
impossible so it ought to tell you that.  Perhaps we need some
conventions for menus or processes to use in order to notify users about
irrational requests.

Is no such expand function easily available?  I guess I am looking for
something that is like C-X 1 in EMACS, but applying to unrelated windows.

Date: 26 February 1982 09:19-EST
From: Charles Rich <RICH at MIT-AI>
Subject: LMLIB on Lispm File Computer
To: INFO-LISPM at MIT-AI

To all contributors and users of LMLIB -

   Please note that there are copies of LMLIB
on FS:LMLIB; and FC:LMLIB; (which is very useful when
AI is not available).  It would be especially appreciated 
if contributors would keep up-to-date copies on these
directories as well as AI.  

		Thanks, Chuck.

P.S. For those not familiar with FS: or FC: devices,
you simply type for example  FS:LMLIB;KMOUSE.LISP and
FS:LMLIB;KMOUSE.QFASL instead of AI:LMLIB;KMOUSE and
AI:LMLIB;KMOUSE QFASL in your load or copy command.
(Similarly for FC: instead of FS:).

Date: 26 February 1982 09:19-EST
From: Charles Rich <RICH at MIT-AI>
Subject: LMLIB on Lispm File Computer
To: INFO-LISPM at MIT-AI

To all contributors and users of LMLIB -

   Please note that there are copies of LMLIB
on FS:LMLIB; and FC:LMLIB; (which is very useful when
AI is not available).  It would be especially appreciated 
if contributors would keep up-to-date copies on these
directories as well as AI.  

		Thanks, Chuck.

P.S. For those not familiar with FS: or FC: devices,
you simply type for example  FS:LMLIB;KMOUSE.LISP and
FS:LMLIB;KMOUSE.QFASL instead of AI:LMLIB;KMOUSE and
AI:LMLIB;KMOUSE QFASL in your load or copy command.
(Similarly for FC: instead of FS:).

Date: Friday, 26 February 1982  08:16-EST
From: JEK at SCRC-TENEX
To:   David A. Moon <Moon at SCRC-TENEX>
Cc:   David L. Andre <DLA at SCRC-TENEX>, BUG-LISPM at SCRC-TENEX

    Date: Friday, 26 February 1982, 01:17-EST
    From: David A. Moon <Moon>
        Date: Friday, 26 February 1982, 00:01-EST
        From: David L. Andre <DLA at SCRC-TENEX>
    
        In Experimental System 203.6, Experimental ZMail 41.1, microcode 860,
        ZMail, on Setter:

        (defun foo (x)
          (set 'x (1+ x))
          x)

        This sets the global value of x without complaint.  It should probably
        be smart and set the local x just like value-cell-location.
    No.  No, no, no, no, no, no, no, no, no, no, no, no, no, no.
    SET is an operation on symbols, not variables.  The broken function
    is VALUE-CELL-LOCATION, which ought to be an operation on symbols,
    and LOCF of a variable ought to expand into something else.  As it is
    VALUE-CELL-LOCATION sometimes works for some kinds of variables, but doesn't
    always work consistently.
Is it right that there is no warning that the symbol X is referenced where
local X exists?  Or is quoting a symbol considered to be clear enough
indication of such intent?



Date: Friday, 26 February 1982, 02:52-EST
From: Howard I. Cannon <HIC at SCRC-TENEX>
To: bak at SCRC-TENEX
Cc: hic at SCRC-TENEX, bug-lispm at SCRC-TENEX

There's alot more braindamage there than I thought!  Boy, I'm not sure of
what to do:

(apply #'(nlambda (x y z) (list x y z)) (list a b c))

optimizes into:

((nlambda (x y z) (list x y z)) a b c)

which turns into:
((lambda (&quote &optional x y z &rest ignore) (list x y z)) a b c)

Which SHOULD turn into:
(list 'a 'b 'c)

NOTE THE QUOTES!  It is clearly a bug that that doesn't happen, and it is
clearly a bug that interlisp apply's NLAMBDAs to things.  However, I didn't
touch the code since that would screw you worse.  However, I'm not sure how
long we want to live with this bug.

Date: Friday, 26 February 1982, 01:17-EST
From: David A. Moon <Moon at SCRC-TENEX>
To: David L. Andre <DLA at SCRC-TENEX>
Cc: BUG-LISPM at SCRC-TENEX
In-reply-to: The message of 26 Feb 82 00:01-EST from David L. Andre <DLA at SCRC-TENEX>

    Date: Friday, 26 February 1982, 00:01-EST
    From: David L. Andre <DLA at SCRC-TENEX>
    To: BUG-LISPM at SCRC-TENEX

    In Experimental System 203.6, Experimental ZMail 41.1, microcode 860,
    ZMail, on Setter:

    (defun foo (x)
      (set 'x (1+ x))
      x)

    This sets the global value of x without complaint.  It should probably
    be smart and set the local x just like value-cell-location.
No.  No, no, no, no, no, no, no, no, no, no, no, no, no, no.
SET is an operation on symbols, not variables.  The broken function
is VALUE-CELL-LOCATION, which ought to be an operation on symbols,
and LOCF of a variable ought to expand into something else.  As it is
VALUE-CELL-LOCATION sometimes works for some kinds of variables, but doesn't
always work consistently.

Date: Friday, 26 February 1982, 00:01-EST
From: David L. Andre <DLA at SCRC-TENEX>
To: BUG-LISPM at SCRC-TENEX

In Experimental System 203.6, Experimental ZMail 41.1, microcode 860,
ZMail, on Setter:

(defun foo (x)
  (set 'x (1+ x))
  x)

This sets the global value of x without complaint.  It should probably
be smart and set the local x just like value-cell-location.

Date: 25 February 1982 13:53-EST
From: Gerald R. Barber <JERRYB at MIT-AI>
To: ZVONA at MIT-AI
cc: bug-lispm at SCRC-TENEX

    Date: 25 February 1982 12:14-EST
    From: David Chapman <ZVONA>
    To:   bug-lispm at SCRC-TENEX

    What about terminal-0-h prompts for a host.

Good idea.  I would also be strongly in favor of removing the "Space before
--more-- or typeout completion forces completion" behavior.  I am always
typing ahead to the more break and getting screwed because the typeout quits
before it is done.  If someone wants to quit they should use the ctrl-abort
key, thats what it is for.

Date: Thursday, 25 February 1982, 19:42-EST
From: Robert W. Kerns <RWK at SCRC-TENEX>
To: David Chapman <Zvona at MIT-AI>
Cc: BUG-LISPM at MIT-AI
In-reply-to: The message of 25 Feb 82 17:09-EST from David Chapman <Zvona at MIT-AI>

    Date: Thursday, 25 February 1982, 17:09-EST
    From: David Chapman <Zvona at MIT-AI>
    To: BUG-LISPM at MIT-AI
    in the error handler, giving c-m-A too large an arg errs.
    There ought to be a way to get the whole rest arg a la c-m-A.  It
    is annoying when the rest arg is printed abbreviated to have to
    iterate args to c-m-A until it breaks in order to see the whole
    rest arg.  I suggest m-A gets the rest arg.
Somewhere in some piece of documentation I learned that the rest argument
is always stored as LOCAL number 0.  Thus C-M-0 C-M-L will print
the &REST argument.  This is not a user-interface.

Date: Thursday, 25 February 1982  21:04-EST
From: HIC at SCRC-TENEX
To:   David Chapman <Zvona at MIT-AI>
Cc:   BUG-LISPM at MIT-AI

    Date: Thursday, 25 February 1982, 17:09-EST
    From: David Chapman <Zvona at MIT-AI>
    To:   BUG-LISPM at MIT-AI

    In System 79.16, ZMail 40.7, Remote-File 2.0, LMFILE-Remote 5.2,
    microcode 849, 79.5 RM 4.1, on Lisp Machine Two:

    in the error handler, giving c-m-A too large an arg errs.
    There ought to be a way to get the whole rest arg a la c-m-A.  It
    is annoying when the rest arg is printed abbreviated to have to
    iterate args to c-m-A until it breaks in order to see the whole
    rest arg.  I suggest m-A gets the rest arg.
Try Control-0 Control-Meta-L

Date: Thursday, 25 February 1982  21:04-EST
From: MMCM at SCRC-TENEX
To:   David Chapman <Zvona at MIT-AI>
Cc:   BUG-LISPM at MIT-AI

    Date: Thursday, 25 February 1982, 17:09-EST
    From: David Chapman <Zvona at MIT-AI>
    in the error handler, giving c-m-A too large an arg errs.
    There ought to be a way to get the whole rest arg a la c-m-A.  It
    is annoying when the rest arg is printed abbreviated to have to
    iterate args to c-m-A until it breaks in order to see the whole
    rest arg.  I suggest m-A gets the rest arg.
A rest argument is stored in the first local slot (C-M-0 C-M-L).
I realize that isn't exactly good user interface, but that's how you
can get at it.

Date: Thursday, 25 February 1982, 20:52-EST
From: David L. Andre <DLA at SCRC-TENEX>
To: Zvona at MIT-AI
Cc: BUG-LISPM at MIT-AI

    Date: Thursday, 25 February 1982, 17:09-EST
    From: David Chapman <Zvona at MIT-AI>

    in the error handler, giving c-m-A too large an arg errs.
    There ought to be a way to get the whole rest arg a la c-m-A.  It
    is annoying when the rest arg is printed abbreviated to have to
    iterate args to c-m-A until it breaks in order to see the whole
    rest arg.  I suggest m-A gets the rest arg.
The "rest arg" is really local|0, since it is not really an argument at
all.  I believe this is in the manual.

Date: Thursday, 25 February 1982, 17:09-EST
From: David Chapman <Zvona at MIT-AI>
To: BUG-LISPM at MIT-AI

In System 79.16, ZMail 40.7, Remote-File 2.0, LMFILE-Remote 5.2,
microcode 849, 79.5 RM 4.1, on Lisp Machine Two:

in the error handler, giving c-m-A too large an arg errs.
There ought to be a way to get the whole rest arg a la c-m-A.  It
is annoying when the rest arg is printed abbreviated to have to
iterate args to c-m-A until it breaks in order to see the whole
rest arg.  I suggest m-A gets the rest arg.

Date: Thursday, 25 February 1982, 17:09-EST
From: David Chapman <Zvona at MIT-AI>
To: BUG-LISPM at MIT-AI

In System 79.16, ZMail 40.7, Remote-File 2.0, LMFILE-Remote 5.2,
microcode 849, 79.5 RM 4.1, on Lisp Machine Two:

in the error handler, giving c-m-A too large an arg errs.
There ought to be a way to get the whole rest arg a la c-m-A.  It
is annoying when the rest arg is printed abbreviated to have to
iterate args to c-m-A until it breaks in order to see the whole
rest arg.  I suggest m-A gets the rest arg.

Date: Thursday, 25 February 1982, 16:53-EST
From: Carl W. Hoffman <CMB at SCRC-TENEX>
To: BUG-LISPM at SCRC-TENEX

In System 202.30, ZMail 40.7, Experimental Tape 7.0,
Experimental LMFS 22.22, Experimental Symbolics 9.3,
Experimental Canon 10.4, microcode 854, on Setter:

I sure is a pain that since CWH logged into ITS to read a file the
system now thinks that I am CWH.  I guess that this mail could be
considered to be from both of us.

					Clark Baker

Date: Thursday, 25 February 1982  15:14-EST
From: MOON at SCRC-TENEX
To:   Robert W. Kerns <RWK at SCRC-TENEX>
Cc:   ALAN at MIT-MC, BSG at SCRC-TENEX, BUG-LISPM at SCRC-TENEX,
      David L. Andre <DLA at SCRC-TENEX>, dlw at SCRC-TENEX,
      EB at MIT-ML, HENRY at MIT-AI, JEK at SCRC-TENEX, RMS at MIT-AI
Subject: Copy File

Don't rename Copy Binary File to Copy Qfasl File.  There are other Lisp
machine binary file formats that this is capable of copying.  The fact that
it doesn't succeed in copying all formats of non-Lisp-machine-accessible
binary files on some hosts (VMS and pdp10's) is regrettable but I don't
think is grounds to change the name (it would be nice if it could reliably
tell you that it wasn't going to work).

Date: Thursday, 25 February 1982, 15:03-EST
From: David Chapman <Zvona at MIT-AI>
To: bug-lispm at MIT-AI

Ignore my last message, I was being faked out by space rubout
abort not aborting.

Date: Thursday, 25 February 1982, 14:54-EST
From: David Chapman <Zvona at MIT-AI>
To: BUG-lispm at MIT-AI

In System 79.16, ZMail 40.7, Remote-File 2.0, LMFILE-Remote 5.2,
microcode 849, 79.5 RM 4.1, on Lisp Machine Two:

mexp should end if you type abort at it.  The ``reading a symbol
exists'' hack is random and unintuitive.

I was explaining the winning user interface of the lispm to a
naive user the other day and said that typeing help will almost
always get you useful help.  So of course the first thing he
does is type help at a lisp-listener.  Lisp listeners should
explain what a read-eval-print loop is at least.

Date: 25 February 1982 14:11-EST
From: Charles Rich <RICH at MIT-AI>
To: BUG-LISPM at MIT-AI

In System 79.16, ZMail 40.7, Remote-File 2.0, LMFILE-Remote 5.2,
Programmer's Apprentice 21.4, microcode 849, on Lisp Machine Twenty-two:

The Rename File command on FS: does not delete the old file; it seems
to work like copy.

Date: 25 February 1982 12:14-EST
From: David Chapman <ZVONA at MIT-AI>
To: bug-lispm at SCRC-TENEX

What about terminal-0-h prompts for a host.

Date: 25 February 1982 12:01-EST
From: Steven C. Bagley <Bagley at MIT-MC>
To: BUG-LISPM at MIT-AI

In System 79.8, ZMail 40.7, Remote-File 2.0, LMFILE-Remote 5.0,
microcode 849, 60.5hz, on Lisp Machine Twenty:

When looking at the Active Processes display in Peek, it is nice that
all the processes are mouse sensitive and that hitting a mouse button
makes a menu of useful things pop up.  However, once the menu has popped
up, you can't tell which process that menu refers to.  Of course, it is
the one the mouse was over when you hit the button, but nothing on the
display reflects this.  It is often hard to tell, if you have a mouse
which jerks around.

Date: Thursday, 25 February 1982, 09:55-EST
From: W. E. (Todd) Matson <Matson at SCRC-POINTER>
To: BUG-LISPM at SCRC-TENEX

In System 202.30, ZMail 40.7, Experimental Tape 7.0,
Experimental LMFS 22.22, Experimental Symbolics 9.3,
Experimental Canon 10.4, microcode 854, on Basset:

The method (DEFMETHOD (SCROLL-STUFF-ON-OFF-MIXIN :DECIDE-IF-SCROLLING-NECESSARY) ()
does a (FUNCALL-SELF ':SET-SCROLL-BAR NIL)  this doesn't clear the instance
variable SCROLL-BAR-IN.  The result is that the next time the window is refreshed
it dies trying to draw a NIL scroll bar.

I'm not sure what the right fix for this is.  Whether to set SCROLL-BAR-IN to nil
whenever SCROLL-BAR is cleared, or whether to make TV:SCROLL-BAR-DRAW not die
when SCROLL-BAR is NIL
,
I have a program that reproduces the problem.

Date: 25 February 1982 07:49-EST
From: Bruce J. Nemnich <BJN at MIT-AI>
To: BUG-LISPM at MIT-AI

In System 79.13, ZMail 40.7, Remote-File 2.0, LMFILE-Remote 5.0,
microcode 849, on Lisp Machine Ten:

Re FED:

I can't figure out how to change the width of a character (the box width)
in this fed. The help info says to "mouse on the lable," but I can't find
anywhere to mouse that gives the choice of changing character width. Mouse-right
on the edge of the box moves the entire box, not just that edge.

Date: Tuesday, 23 February 1982, 15:33-PST
From: Chris Ryland <Ryland at SRI-KL>
Subject: Previous bug report
To: BUG-LISPM at MIT-AI

In Fairchild System 78.59, ZMail 38.5, Tape 6.5, LMFS 21.39,
Symbolics 8.14, microcode 841, on Lisp Machine One:

Ignore my previous report ("Ryland, you poor confused soul, of
course logging in explictly on one host logs you out of other
hosts.")

Date: Tuesday, 23 February 1982, 12:01-PST
From: Chris Ryland <Ryland at SRI-KL>
To: BUG-LISPM at MIT-AI

In Fairchild System 78.59, ZMail 38.5, Tape 6.5, LMFS 21.39,
Symbolics 8.14, microcode 841, on Lisp Machine One:

Logging-in on the VAX forgets about my login on the -20, and
vice-versa.  This is rather annoying, as I'm used to being
logged-in on both machines.  (Perhaps it's not as bad as I
suspect, but FS:USER-UNAMES is losing the uname on a given
machine after logging in on the other.)

Also, is there any "approved" way of getting a user's uname
short of picking out the cdr of any entry in FS:USER-UNAMES?

Date: Thursday, 25 February 1982, 04:36-EST
From: Robert W. Kerns <RWK at SCRC-TENEX>
Subject: Copy File
To: David L. Andre <DLA at SCRC-TENEX>
Cc: JEK at SCRC-TENEX, dlw at SCRC-TENEX, BSG at SCRC-TENEX, RMS at MIT-AI,
    HENRY at MIT-AI, MOON at SCRC-TENEX, BUG-LISPM at SCRC-TENEX,
    ALAN at MIT-MC, EB at MIT-ML
In-reply-to: The message of 24 Feb 82 20:47-EST from David L. Andre <DLA at SCRC-TENEX>

I don't fault your reasoning.  You just had two faulting assumptions,
one explicit and one implicit.  The explicit one was that servers can
tell with adaquate reliability.  The second is that users wouldn't get
screwed if the first were true.

These assumptions SHOULD be true, but they're not.  Until they can be
made to be true (probably not until after next system release), I think
we should stick with Copy Text File and Copy QFASL File (!!).

It should be possible to copy an arbitrary host-system file to a LISPM
file system and back again, perhaps using some weird OPEN option.  But
this is hard, so I'll probably settle for server checking for validity
of the assumptions at least for a while.  I.e. allow copying of probable
TEXT files and QFASL files, and error elsewise.

Date: Wednesday, 24 February 1982, 21:02-EST
From: Robert W. Kerns <RWK at SCRC-TENEX>
Subject: FC
To: Eugene C. Ciccarelli <ECC at MIT-AI>
Cc: BUG-LISPM at MIT-AI
In-reply-to: The message of 23 Feb 82 10:42-EST from Eugene C. Ciccarelli <ECC at MIT-AI>

    Date: 23 February 1982 10:42-EST
    From: Eugene C. Ciccarelli <ECC at MIT-AI>
    Subject: FC
    To: BUG-LISPM at MIT-AI

    In System 79.8, ZMail 40.7, Remote-File 2.0, LMFILE-Remote 5.0,
    microcode 849, on Lisp Machine Six:

    (fs:make-pathname ':host "FC" ':directory "ECC") recurses infinitely.
It doesn't for me in system 202 (Symbolics software).  This would imply
either that the problem is in the specific flavor of pathnames used for
whatever filesystem is run on FC: (I forget which is which), or a problem
I have fixed since system 79 was made.  If the problem is preventing you
from getting work done I can dig out the relevant patches to try.  If that
doesn't work, you'll have to find somebody at MIT who can fix it.

Date: Wednesday, 24 February 1982, 20:47-EST
From: David L. Andre <DLA at SCRC-TENEX>
Subject: Copy File
To: RWK at SCRC-TENEX, JEK at SCRC-TENEX, dlw at SCRC-TENEX, BSG at SCRC-TENEX,
    RMS at MIT-AI, HENRY at MIT-AI, MOON at SCRC-TENEX
Cc: DLA at SCRC-TENEX, BUG-LISPM at SCRC-TENEX, ALAN at MIT-MC, EB at MIT-ML

Well, I seem to be getting persecuted whatever I do.  So I will simply
attempt to justify what I did, and anybody who feels more strongly than
I on this issue can do whatever the hell they please.

The only reason there are two commands for text files and binary files
in the first place is because many file computers previously had no idea
of whether their files were text or binary.  Consequently, it was always
necessary to tell them.  This has recently been fixed (at least
partially) so that those file computers at least make an intelligent
guess.  If it were the case that all file computers knew this, then
there would certainly be no need for binary or text.  Unfortunately,
sometimes servers will guess wrong, and in such cases they must still be
told whether a file is binary or not.  Since I perceived this last case
to be the rare exception, I went ahead and implemented what would
definitely be the "right" thing if all file computers were smart.

I have few opinions about creation dates, but since everyone seemed to
be so for it, I conceded.  It really makes no difference to me.

Date: Wednesday, 24 February 1982, 20:39-EST
From: Mike McMahon <MMcM at SCRC-TENEX>
To: MT at MIT-AI
Cc: BUG-LISPM at MIT-AI

    Date: 24 February 1982 17:33-EST
    From: Michael Travers <MT at MIT-AI>
    The host table (which is alleged to be automatically generated from
    SYSENG;HOSTS) fails to include most Arpanet hosts.
Why should it?  Lisp machines aren't on the arpanet.  There are host table servers
for getting information when a gateway function is needed.

Date: Wednesday, 24 February 1982, 20:25-EST
From: Robert W. Kerns <RWK at SCRC-TENEX>
Subject: Cacheing of host information
To: Michael Travers <MT at MIT-AI>
Cc: BUG-LISPM at MIT-AI
In-reply-to: The message of 24 Feb 82 17:33-EST from Michael Travers <MT at MIT-AI>

    Date: 24 February 1982 17:33-EST
    From: Michael Travers <MT at MIT-AI>
    To: BUG-LISPM at MIT-AI

    In System 79.14, ZMail 40.7, Experimental LMFILE Remote 4.1,
    Remote-File 2.0, LMFILE-Remote 5.0, microcode 849, 79.5 RM 4.1, on Lisp Machine Two:

    The host table (which is alleged to be automatically generated from
    SYSENG;HOSTS) fails to include most Arpanet hosts.

It has all the CHAOSnet hosts.  (SI:PARSE-HOST "SU-AI" NIL T) will get
you the host for SAIL and add that entry to the local host table, by
asking some host server for the information.

Date: Wednesday, 24 February 1982, 20:10-EST
From: ROBERT W. KERNS <RWK at SCRC-TENEX>
Subject: Copy File
To: Henry Lieberman <HENRY at MIT-AI>
Cc: BUG-LISPM at SCRC-TENEX
In-reply-to: The message of 24 Feb 82 16:13-EST from MOON at SCRC-TENEX

    Date: Wednesday, 24 February 1982  16:13-EST
    From: MOON at SCRC-TENEX
	Date: 24 February 1982 15:39-EST
	From: Henry Lieberman <HENRY at MIT-AI>

	What's the difference between modes, and what's the 
	mode of lossage that results from copying a binary file in 
	text mode or vice versa? 
    Text mode uses character-set translation and the host-dependent
    text file format.  Binary mode uses 16-bit bytes and no translation.
    The mode of lossage that results is of course host-dependent;
    with pdp-10's you get nothing even close to the right data if you
    transfer in the wrong mode.
On VMS, the LISPM idea of binary mode only works for QFASL files or
other LISPM binary files, and doesn't begin to deal with the entire
spectrum of file formats and organizations possible on VMS.  Relative
vs. sequential vs. indexed-sequential (ISAM).  Variable vs. fixed-length
records.  Record attributes (whether implicitly separated by a newline, or
what...).  The length of records in text files is delimited by newline
characters from the LISPM's view, but this doesn't hold in Binary mode,
so the existing file protocol can't handle it.  I've defined an OPEN
mode which includes record-length information before each record, but
the LISPM doesn't use it, and even so, it only handles a small subset
of the possibilities.

				 Can the type of a file be
	determined just by looking at it?
    On some file systems, but not on all file systems.  To complicate
    things, on ITS Emacs (Teco, actually) writes text files in what
    amounts to binary mode.
For that matter, so does the DDT :COPY command.

Date: Wednesday, 24 February 1982  17:45-EST
From: MMCM at SCRC-TENEX
To:   Michael Travers <MT at MIT-AI>
Cc:   BUG-LISPM at MIT-AI

    Date: 24 February 1982 16:41-EST
    From: Michael Travers <MT at MIT-AI>
    In System 79.14, ZMail 40.7, Experimental LMFILE Remote 4.1,
    Remote-File 2.0, LMFILE-Remote 5.0, microcode 849, 79.5 RM 4.1, on Lisp Machine Two:
    (load "moondr;draw")
    (pkg-load 'draw)

    causes MAKE-PATHNAME-INTERNAL-1 to funcall a string, thinking it is a host.
You need to recompile whatever file gets that error.  It is about a year out
of date i'd guess.  If you need to have things loaded before compiling, you
can safely return NIL from FS:MAKE-PATHNAME.
There was probably a warning to INFO-LISPM many months ago when this
all happened.

Date: 24 February 1982 17:33-EST
From: Michael Travers <MT at MIT-AI>
To: BUG-LISPM at MIT-AI

In System 79.14, ZMail 40.7, Experimental LMFILE Remote 4.1,
Remote-File 2.0, LMFILE-Remote 5.0, microcode 849, 79.5 RM 4.1, on Lisp Machine Two:

The host table (which is alleged to be automatically generated from
SYSENG;HOSTS) fails to include most Arpanet hosts.




Date: 24 February 1982 16:41-EST
From: Michael Travers <MT at MIT-AI>
To: BUG-LISPM at MIT-AI

In System 79.14, ZMail 40.7, Experimental LMFILE Remote 4.1,
Remote-File 2.0, LMFILE-Remote 5.0, microcode 849, 79.5 RM 4.1, on Lisp Machine Two:

(load "moondr;draw")
(pkg-load 'draw)

causes MAKE-PATHNAME-INTERNAL-1 to funcall a string, thinking it is a host.

Date: Wednesday, 24 February 1982  16:13-EST
From: MOON at SCRC-TENEX
To:   Henry Lieberman <HENRY at MIT-AI>
Cc:   BUG-LISPM at MIT-AI
Subject: Copy File

    Date: 24 February 1982 15:39-EST
    From: Henry Lieberman <HENRY at MIT-AI>
    Subject: Copy File
    To: BUG-LISPM at MIT-AI

    Maybe its a stupid question, but what's the difference
    between copying binary files and text files? :COPY in
    DDT, or TRAN in FTP seem equally happy with either.
Only between pdp-10's, where both those commands transfer 36-bit
words.

    What's the difference between modes, and what's the 
    mode of lossage that results from copying a binary file in 
    text mode or vice versa? 
Text mode uses character-set translation and the host-dependent
text file format.  Binary mode uses 16-bit bytes and no translation.
The mode of lossage that results is of course host-dependent;
with pdp-10's you get nothing even close to the right data if you
transfer in the wrong mode.

			     Can the type of a file be
    determined just by looking at it?
On some file systems, but not on all file systems.  To complicate
things, on ITS Emacs (Teco, actually) writes text files in what
amounts to binary mode.

Date: 24 February 1982 15:39-EST
From: Henry Lieberman <HENRY at MIT-AI>
Subject: Copy File
To: BUG-LISPM at MIT-AI


Maybe its a stupid question, but what's the difference
between copying binary files and text files? :COPY in
DDT, or TRAN in FTP seem equally happy with either.
What's the difference between modes, and what's the 
mode of lossage that results from copying a binary file in 
text mode or vice versa? Can the type of a file be
determined just by looking at it?


Date: Wednesday, 24 February 1982, 14:34-EST
From: Mike McMahon <MMcM at SCRC-TENEX>
To: Zvona at MIT-AI
Cc: bug-lispm at MIT-AI

    Date: Wednesday, 24 February 1982, 13:02-EST
    From: David Chapman <Zvona at MIT-AI>
    Zwei & probably other things tend to print out raw file error
    strings like ``FHN ERROR FNF F file not found''.  Now if the
    gibberish at the beginning of the string is really necessary for
    some reason, at least user interface should suppress it.  I don't
    know what the gibberish means, but I suspect that ``File not
    found (fatal error)'' would do as well for both people and
    programs.
Come the new error system, this and similar screws will be fixed.

Date: Wednesday, 24 February 1982, 13:02-EST
From: David Chapman <Zvona at MIT-AI>
To: bug-lispm at MIT-AI

In zwei in System 79.13, ZMail 40.7, Remote-File 2.0, LMFILE-Remote 5.0,
microcode 836, on Lisp Machine Nineteen:

Zwei & probably other things tend to print out raw file error
strings like ``FHN ERROR FNF F file not found''.  Now if the
gibberish at the beginning of the string is really necessary for
some reason, at least user interface should suppress it.  I don't
know what the gibberish means, but I suspect that ``File not
found (fatal error)'' would do as well for both people and
programs.

Date: Wednesday, 24 February 1982, 10:29-EST
From: Robert W. Kerns <RWK at SCRC-TENEX>
Subject: Copy File
To: Daniel L. Weinreb <dlw at SCRC-TENEX>
Cc: JEK at SCRC-TENEX, BUG-LISPM at SCRC-TENEX
In-reply-to: The message of 23 Feb 82 18:35-EST from Daniel L. Weinreb <dlw at SCRC-TENEX>

    Date: Tuesday, 23 February 1982, 18:35-EST
    From: Daniel L. Weinreb <dlw at SCRC-TENEX>
    Subject: Copy File
    To: RWK at SCRC-TENEX, JEK at SCRC-TENEX
    Cc: BUG-LISPM at SCRC-TENEX

    I do think that the Copy File command that heuristicates is a good thing, but
    I also think that keeping c t f and c b f for times when you want to override
    it is better than having numeric arguments.

It would be a "good thing" if it were possible to write heuristics
that did the "right thing" an acceptable fraction of the time, or
where to ask you when it didn't know the right thing.  Unfortunately,
when talking to VMS, the only heuristic which can be applied is to
look at the file type.

Actually, the situation is a little worse than that, in that Copy Binary
File can *ONLY* copy QFASL files on VMS.  It cannot in general copy
binary files.  This is because in addition to the bytes of information,
there are these record boundaries which are not included in the byte
stream.  This can be overcome in part by using another OPEN mode, but
there will always be types of files which cannot be copied by the LISPM
(such as indexed-sequential files) unless I go to more work than I think
is worth.  I do think it's worth copying the more common variable and
fixed-length record files, however.  (The way this would work is to open
the file in RECORD mode.  RECORD mode preceeds each record with a count.
This allows VMS binary files to be stored on the LISPM, and vice versa.
On machines without a RECORD mode, the files would be stored with the
count, allowing them to be copied back to a VMS at a later time.)

Date: 24 February 1982 01:56-EST
From: Richard M. Stallman <RMS at MIT-AI>
To: BUG-LISPM at MIT-AI

I agree with DLW that numeric arguments to M-X commands aren't very
clean.

Multiple command names aren't a good solution in general, either,
though in this case they may be ok.  This is because, when there are
several different options, it makes for a large number of commands.
That's why other systems use "switches" with names for these things.
In this particular case, since only one option is involved, the
mxn problem does not appear.

Date: Tuesday, 23 February 1982, 18:35-EST
From: Daniel L. Weinreb <dlw at SCRC-TENEX>
Subject: Copy File
To: RWK at SCRC-TENEX, JEK at SCRC-TENEX
Cc: BUG-LISPM at SCRC-TENEX

I do think that the Copy File command that heuristicates is a good thing, but
I also think that keeping c t f and c b f for times when you want to override
it is better than having numeric arguments.

This brings up the general point that once you are using the Meta-X
facility, maybe it is silly to distinguish variations by use of numeric
arguments; as long as you're doing things in a mnemonic way like Meta-X
you should just express things like that as part of the command name.

Date: 23 February 1982 16:57-EST
From: Edward Barton <EB at MIT-AI>
To: BUG-LISPM at MIT-AI

Is there an easy way to get a file output stream that supports
the :read-cursorpos option so that format ~T will work, or is it
better just to wrap a closure around the stream and slow it down?
Or am I confused (that is, do file output streams already support
this)?

ECC@MIT-ML 02/23/82 14:45:12 Re: LMLIB;ZVAL
To: info-lispm at MIT-AI
The library LMLIB;ZVAL has functions, primarily ZMACS commands,
to aid in evaluating from within ZMACS and for incrementally
testing code as you write it.  See the INFO file AI:LMLIB;ZVAL INFO.


Date: 23 February 1982 10:42-EST
From: Eugene C. Ciccarelli <ECC at MIT-AI>
Subject: FC
To: BUG-LISPM at MIT-AI

In System 79.8, ZMail 40.7, Remote-File 2.0, LMFILE-Remote 5.0,
microcode 849, on Lisp Machine Six:

(fs:make-pathname ':host "FC" ':directory "ECC") recurses infinitely.

Date: Tuesday, 23 February 1982, 09:34-EST
From: Bernard S Greenberg <BSG at SCRC-TENEX>
Subject: Preservation of file date in Copy Text File
To: DLA at SCRC-TENEX, ALAN at MIT-MC, RWK at SCRC-TENEX, JEK at SCRC-TENEX,
    EB at MIT-ML, BUG-LISPM at SCRC-TENEX

    Date: Monday, 22 February 1982, 21:06-EST
    From: David L. Andre <DLA at SCRC-TENEX>

    In the source, Copy Text File and Copy Binary File are flushed.
    Instead, Copy File can be given numeric arguments to control its
    behaviour w.r.t. characters/binary and creation-date.
I don't like this either.  It is conceivable that there should be a copy file
that used all kinds of heuristics (e.g., the :DEFAULT opening, etc), but in no way
should c t f and c b f be flushed, and the numeric arg business seems wrong.

Date: Tuesday, 23 February 1982, 09:35-EST
From: Robert W. Kerns <RWK at SCRC-TENEX>
Subject: Copy File
To: James E. Kulp <JEK at SCRC-TENEX>
Cc: DLA at SCRC-TENEX, ALAN at MIT-MC, EB at MIT-ML, BUG-LISPM at SCRC-TENEX
In-reply-to: The message of 23 Feb 82 09:21-EST from James E. Kulp <JEK at SCRC-TENEX>

To clarify, it is the merging of Copy Text File and Copy Binary File
that I object to.  I could live with giving a numeric argument to
control whether to copy the date/author, although I've always been
a little uncomfortable with the idea of numeric modifiers to commands,
(as opposed to numeric multipliers).

Date: Tuesday, 23 February 1982, 09:21-EST
From: James E. Kulp <JEK at SCRC-TENEX>
Subject: Preservation of file date in Copy Text File
To: RWK at SCRC-TENEX, DLA at SCRC-TENEX
Cc: ALAN at MIT-MC, JEK at SCRC-TENEX, EB at MIT-ML, BUG-LISPM at SCRC-TENEX

    Date: Tuesday, 23 February 1982, 02:54-EST
    From: Robert W. Kerns <RWK at SCRC-TENEX>
	Date: Monday, 22 February 1982, 21:06-EST
	From: David L. Andre <DLA at SCRC-TENEX>
	    BUG-LISPM at SCRC-TENEX
	In the source, Copy Text File and Copy Binary File are flushed.
	Instead, Copy File can be given numeric arguments to control its
	behaviour w.r.t. characters/binary and creation-date.

    I don't like this.  I think it's important that customers realize the
    need for actually making an informed decision as to what kind of file it
    is.  Besides, it's much more of a pain to give a numeric argument than
    to type a NICE, MNEMONIC COMMAND NAME.  This is a real step backward
    that will result in people copying binary files as text or vice versa.

    So before I get annoyed having to type numeric arguments, and before
    customers get shafted totally, please put it back.  Thank you.
Although I agree with preserving dates, I agree with RWK here.  This seems
like a slide back to bare TECO.

Date: Tuesday, 23 February 1982, 09:15-EST
From: James E. Kulp <JEK at SCRC-TENEX>
Subject: Creation and modification dates
To: BUG-LISPM at SCRC-TENEX

This discussion about preserving creation dates on writing brings up the fuzzy way
in which "creation" date is used and implemented in documentation, file servers etc.

To my mind, the date of most interest is when the contents of the file
were last modified.  On systems supporting versions, this is synonymous
with "creation date" (although if this is the time of writing the first
block, as opposed to close time, it is not strictly the right time),
since you normally do not modify the contents of a file, but only creat
a new version.  On LMFS, which supports versions, creation date and
modification date (and modifying existing versions), the "creation date"
property does not reflect the date of modification, since both dates are
kept as their names imply.

I would propose that we make servers/systems that have either one or both of
these dates, according to their canonical meaning, report both
properties, and software be changed to use modification dates.  For systems that
don't allow an existing version to be modified (and thus have no need for a
modification date), that date could be reported as both, or the lispm end could
copy the property.  For systems that allow the modification of versions, and
don't keep the modification date (lossage...) there is no way to win
completely, but again, the property could be copied at either end (seems that
copying at lispm end is better).

Date: Tuesday, 23 February 1982, 02:54-EST
From: Robert W. Kerns <RWK at SCRC-TENEX>
Subject: Preservation of file date in Copy Text File
To: David L. Andre <DLA at SCRC-TENEX>
Cc: ALAN at MIT-MC, JEK at SCRC-TENEX, EB at MIT-ML, BUG-LISPM at SCRC-TENEX
In-reply-to: The message of 22 Feb 82 21:06-EST from David L. Andre <DLA at SCRC-TENEX>

    Date: Monday, 22 February 1982, 21:06-EST
    From: David L. Andre <DLA at SCRC-TENEX>
    Subject: Preservation of file date in Copy Text File
    To: ALAN at MIT-MC, RWK at SCRC-TENEX, JEK at SCRC-TENEX, EB at MIT-ML,
	BUG-LISPM at SCRC-TENEX

    In the source, Copy Text File and Copy Binary File are flushed.
    Instead, Copy File can be given numeric arguments to control its
    behaviour w.r.t. characters/binary and creation-date.

I don't like this.  I think it's important that customers realize the
need for actually making an informed decision as to what kind of file it
is.  Besides, it's much more of a pain to give a numeric argument than
to type a NICE, MNEMONIC COMMAND NAME.  This is a real step backward
that will result in people copying binary files as text or vice versa.

So before I get annoyed having to type numeric arguments, and before
customers get shafted totally, please put it back.  Thank you.


Date: 23 February 1982 01:02-EST
From: Richard M. Stallman <RMS at MIT-AI>
Subject: Preservation of file date in Copy Text File
To: DLW at MIT-AI, BUG-LISPM at MIT-AI

I have always found it useful that copying files preserves that date.
There used to be a :COPYD command in DDT to do that,
and people wanted it to be the default.  So now :COPY preserves the
date (and the author; that is also useful) and there is :COPYN
which doesn't.

:COPY also preserves the version number, by default.  I think this
is a good idea also.  It does this by making the truename of the
original file be the defaults for the output file.

Copying or moving a file is really a distinct operation from
writing a file with contents taken from another file.

Date: Monday, 22 February 1982  23:38-EST
From: MOON at SCRC-TENEX
To:   David L. Andre <DLA at SCRC-TENEX>
Cc:   ALAN at MIT-MC, BUG-LISPM at SCRC-TENEX, EB at MIT-ML,
      JEK at SCRC-TENEX, RWK at SCRC-TENEX, bsg at scrc
Subject: Preservation of file date in Copy Text File

    Date: Monday, 22 February 1982, 20:04-EST
    From: David L. Andre <DLA at SCRC-TENEX>
    Subject: Preservation of file date in Copy Text File
    To: ALAN at MIT-MC, RWK at SCRC-TENEX, JEK at SCRC-TENEX
    Cc: EB at MIT-ML, BUG-LISPM at SCRC-TENEX, DLA at SCRC-TENEX

    C'mon guys, give me a chance.

    There are other issues involved.  For one, Multics doesn't allow setting
    of creation dates, so that scheme won't work there.  For two, why not
    copy the author?  You're trying to put more obscure meaning into those
    properties than they deserve.  In filesystems with arbitrary properties,
    maybe there should be some property which says that this file was copied
    from some other.
Hold your horses.  Tenex and TOPS-20 don't allow setting of the creation
date, which is why the date-of-last-writing is what is actually used as the
"creation-date" property.  Multics also has a date of last writing.  Or
is the user not allowed to set that either?

    But anyway, I must admit I've found it useful in the past.  So even
    though it's not "the right thing", I guess I shall change it in the
    source.

Date: Monday, 22 February 1982, 21:55-EST
From: David L. Andre <DLA at SCRC-TENEX>
To: BUG-LISPM at SCRC-TENEX
Cc: JIS at MIT-EECS, Eric at MIT-EECS

The file server on EE will give file not found errors for directory
lists such as PS:<DLA>NO-SUCH-FILE.*.*

Date: 22 February 1982 21:36-EST
From: Daniel L. Weinreb <dlw at MIT-AI>
Subject: Preservation of file date in Copy Text File
To: DLA at SCRC-TENEX
cc: BUG-LISPM at SCRC-TENEX

I think this change to Copy Text File is highly questionable.  For one
thing, Multics is not the only system that doesn't support changing of
creation date; Bernie has told me that several other systems that we
support, including VMS and maybe others, also don't.  More significantly,
it means that reading a file into an editor buffer and then writing it
out somewhere else, or doing stream-copy-until-eof in the obvious way,
now has different semantics from copying a file.  This seems like the
kind of subtle complexity that would be good to stay away from.  However,
if you still feel that it is right, I am not adamant about this.

Date: Monday, 22 February 1982, 21:06-EST
From: David L. Andre <DLA at SCRC-TENEX>
Subject: Preservation of file date in Copy Text File
To: ALAN at MIT-MC, RWK at SCRC-TENEX, JEK at SCRC-TENEX, EB at MIT-ML,
    BUG-LISPM at SCRC-TENEX

In the source, Copy Text File and Copy Binary File are flushed.
Instead, Copy File can be given numeric arguments to control its
behaviour w.r.t. characters/binary and creation-date.

Date: Monday, 22 February 1982, 20:04-EST
From: David L. Andre <DLA at SCRC-TENEX>
Subject: Preservation of file date in Copy Text File
To: ALAN at MIT-MC, RWK at SCRC-TENEX, JEK at SCRC-TENEX
Cc: EB at MIT-ML, BUG-LISPM at SCRC-TENEX, DLA at SCRC-TENEX

C'mon guys, give me a chance.

There are other issues involved.  For one, Multics doesn't allow setting
of creation dates, so that scheme won't work there.  For two, why not
copy the author?  You're trying to put more obscure meaning into those
properties than they deserve.  In filesystems with arbitrary properties,
maybe there should be some property which says that this file was copied
from some other.

But anyway, I must admit I've found it useful in the past.  So even
though it's not "the right thing", I guess I shall change it in the
source.

Date: 22 February 1982 11:29-EST
From: Jonathan Delatizky at MIT-AI
Sender: delatz at MIT-AI
To: BUG-LISPM at MIT-AI

There seems to be a hardware problem with the keyboard
(perhaps the cable) of cadr-8. It sometimes gets wedged, but
starts responding again, sometimes strangely, if you wiggle the cable.


Also, the return key transmits multiple carriage returns.

Date: 22 February 1982 09:02-EST
From: Christopher C. Stacy <CStacy at MIT-AI>
To: BUG-LISPM at MIT-AI

In INTERLUDE in System 79.12, ZMail 40.7, Remote-File 2.0, LMFILE-Remote 5.0,
Interlude 3.7, microcode 849, on Lisp Machine Six:

I am not sure that the random-access position value returned by
"Interlude #6" is physically possible.

Date: Monday, 22 February 1982, 08:37-EST
From: James E. Kulp <JEK at SCRC-TENEX>
Subject: Preservation of file date in Copy Text File
To: RWK at SCRC-TENEX, DLA at SCRC-TENEX
Cc: EB at MIT-ML, BUG-LISPM at SCRC-TENEX

    Date: Monday, 22 February 1982, 05:46-EST
    From: Robert W. Kerns <RWK at SCRC-TENEX>
    Subject: Preservation of file date in Copy Text File
    To: David L. Andre <DLA at SCRC-TENEX>
    Cc: EB at MIT-ML, BUG-LISPM at SCRC-TENEX
    In-reply-to: The message of 22 Feb 82 02:04-EST from David L. Andre <DLA at SCRC-TENEX>

	Date: Monday, 22 February 1982, 02:04-EST
	From: David L. Andre <DLA at SCRC-TENEX>
	To: EB at MIT-ML
	Cc: BUG-LISPM at SCRC-TENEX

	    From: EB@MIT-ML
	    Date: 02/19/82 17:47:46

	    Is there a reason why M-X Copy Text File doesn't preserve file
	    creation date?
	It doesn't preserve the filename, either.  I see no reason why it
	should...
    Experience with DDT shows that in copying a file you want to preserve as
    much of its identity as possible.  For example, you should be able to find
    out how old a source file is even if it has been copied.  Who actually
    created the file is usually more important than who copied it and when.
    On a file system with arbitrary properties, who copied it when could be
    kept on the file's property list.
The time a file was last edited or modified is indeed a more important piece of
information than when it was copied, as is who did the modifying.  A default
behavior which preserved these would be more useful, but there are cases where you
need an option not to (:touch).

Date: Monday, 22 February 1982, 05:46-EST
From: Robert W. Kerns <RWK at SCRC-TENEX>
Subject: Preservation of file date in Copy Text File
To: David L. Andre <DLA at SCRC-TENEX>
Cc: EB at MIT-ML, BUG-LISPM at SCRC-TENEX
In-reply-to: The message of 22 Feb 82 02:04-EST from David L. Andre <DLA at SCRC-TENEX>

    Date: Monday, 22 February 1982, 02:04-EST
    From: David L. Andre <DLA at SCRC-TENEX>
    To: EB at MIT-ML
    Cc: BUG-LISPM at SCRC-TENEX

	From: EB@MIT-ML
	Date: 02/19/82 17:47:46

	Is there a reason why M-X Copy Text File doesn't preserve file
	creation date?
    It doesn't preserve the filename, either.  I see no reason why it
    should...
Experience with DDT shows that in copying a file you want to preserve as
much of its identity as possible.  For example, you should be able to find
out how old a source file is even if it has been copied.  Who actually
created the file is usually more important than who copied it and when.
On a file system with arbitrary properties, who copied it when could be
kept on the file's property list.

Date: Monday, 22 February 1982, 02:36-EST
From: David L. Andre <DLA at SCRC-TENEX>
To: AGRE at MIT-AI
Cc: BUG-LISPM at MIT-AI, DLA at SCRC-TENEX

    Date: 20 February 1982 20:17-EST
    From: Philip E. Agre <AGRE at MIT-AI>

    How hard would it be to change the default behavior of the mouse so that
    when you bounce it off the top/bottom of the screen it comes back on at
    the bottom/top?
I agree that this should be a user option; I'll look into it.

    For that matter, it would be nice for the mouse to jump to the color
    screen when it hits the right hand edge of the b+w screen (and similarly
    for color->b+w), but that's probably much harder.
Well, This is a little far-fetched.  What if the color screen is on the
other side of the b&w screen?  Anyway, I'll try to make it so this won't
be hard...

Date: Monday, 22 February 1982, 02:22-EST
From: David L. Andre <DLA at SCRC-TENEX>
To: DEKLEER at PARC-MAXC
Cc: BUG-lispm at MIT-AI, DLA at SCRC-TENEX

    Date: 20 FEB 1982 1522-PST
    From: DEKLEER at PARC-MAXC

    If you load a recursive function, add an argument, and then recompile it
    you get a compiler warning for each recursive call.
This type of problem is fixed in the new compiler warnings code.

Date: Monday, 22 February 1982, 02:04-EST
From: David L. Andre <DLA at SCRC-TENEX>
To: EB at MIT-ML
Cc: BUG-LISPM at SCRC-TENEX

    From: EB@MIT-ML
    Date: 02/19/82 17:47:46

    Is there a reason why M-X Copy Text File doesn't preserve file
    creation date?
It doesn't preserve the filename, either.  I see no reason why it
should...

Date: 21 February 1982 22:00-EST
From: Edward Barton <EB at MIT-AI>
To: BUG-LISPM at MIT-AI

In System 79.8, ZMail 40.7, Remote-File 2.0, LMFILE-Remote 5.0,
Experimental Walt Animation System 5.0, microcode 849, 79.8, Walt,
60.45hz, on Lisp Machine One:

Consider an FC: filename that specifies device, directory, and filename
but mentions no type.  An example of a string is "fc:eb;foo".  If I
call LOAD with such a filename it loads in FOO with READFILE even if
FOO|QFASL exists.  What can I give LOAD to make it load in the QFASL,
if it exists, otherwise the source?  I thought that was what it was
supposed to do.

Date: 20 February 1982 20:17-EST
From: Philip E. Agre <AGRE at MIT-AI>
To: BUG-LISPM at MIT-AI

In System 78.58, ZMail 38.5, Local-File 32.15, Experimental DAEDALUS 29.9, microcode 843, phil's, on Lisp Machine Two:

How hard would it be to change the default behavior of the mouse so that
when you bounce it off the top/bottom of the screen it comes back on at
the bottom/top?  This would be convenient for me because I like to put
the mouse on the black bar at the bottom so it won't blink while I'm
typing but I also frequently select buffers to move to from the C-X C-B
listing at the top of the screen and it is a pain to have to move it
frequently.  I have a fair idea of how one might write an alternative
mouse handler to do it, but it would seem like one would have to
duplicate alot of code to get all the other behavior of the mouse, e.g.,
the usual menus and the ability of other programs (like Daedalus) to
grab the mouse and then know how to give it back.

For that matter, it would be nice for the mouse to jump to the color
screen when it hits the right hand edge of the b+w screen (and similarly
for color->b+w), but that's probably much harder.

     - phiL

Date: 20 February 1982 19:21-EST
From: James M. Turner <JMTURN at MIT-AI>
To: RMS at MIT-AI
cc: JMTURN at MIT-AI, JCMA at MIT-AI, BUG-LISPM at MIT-AI

Yes, WITH-OPEN-BUFFER being in package GLOBAL was probably
not a good idea, as it also means I have to spec it as
GLOBAL:WITH-OPEN-BUFFER in Mutt. 

					James

Date: 20 FEB 1982 1522-PST
From: DEKLEER at PARC-MAXC
To:   BUG-lispm at MIT-AI

In ETHER 24.11, System 78.58, microcode 841, on Xerox Lisp Machine One:

If you load a recursive function, add an argument, and then recompile it
you get a compiler warning for each recursive call.
-------

Date: 20 February 1982 15:32-EST
From: Edward Barton <EB at MIT-AI>
To: BUG-LISPM at MIT-AI

In Experimental System 79.8, ZMail 40.7, Remote-File 2.0,
LMFILE-Remote 5.0, microcode 836, on Lisp Machine Nineteen:

In M-X Edit Compiler Warnings, for an error in (INTERNAL MAKE-ADDER 0),
Zwei asks for a file to read the function `Zwei Utility Package:|(MAKE-ADDER 0)|'
from.

Date: Saturday, 20 February 1982, 11:48-EST
From: David Vinayak Wallace <GUMBY at MIT-AI>
Subject: Window error-handler
To: BUG-LISPM at MIT-AI
Cc: Gumby at ai

In System 79.12, ZMail 40.7, Remote-File 2.0, LMFILE-Remote 5.0,
microcode 849, 60.45Hz, on Lisp Machine Nine:

In the window error-handler, I moused "RETRY" and then "T", which
according to its mouse documentation, should mean "yes." It doesn't.
And NIL does not mean "no."

Date: 20 February 1982 03:28-EST
From: Richard M. Stallman <RMS at MIT-AI>
To: JMTURN at MIT-AI, JCMA at MIT-AI, BUG-LISPM at MIT-AI

I see that FC: JMTURN;BUF-IO has "Package: GLOBAL" in its mode line.

I'm not certain, but I have a suspicion that this is likely to lead to
great lossage.  For example, all the random symbols in the file get globalized.

It is probably best to put the file in USER: instead, and explicitly globalize
any symbols that you want to have globalized.

Perhaps the things that hack file property lists for packages should be
careful not to let people do this, at least not without being warned.
As it is, this idea can easily occur to an innocent user and there is
nothing to tell him he may be losing.

Date: Friday, 19 February 1982, 17:09-EST
From: James M. Turner <JMTurn at FC>
Subject: Telnet Lossage
To: BUG-LISPM at MIT-AI
Cc: JMTURN at MIT-AI

In System 79.13, ZMail 40.7, Remote-File 2.0, LMFILE-Remote 5.0,
microcode 849, 60.45Hz, on Lisp Machine Four:

In TELNET, saying mcdec-2136 connects me to U.S.A.F. sys# 2830

Has this host number been reassigned?


				James


EB@MIT-ML 02/19/82 18:37:46
To: (BUG LISPM) at MIT-AI
In Experimental System 79.8, ZMail 40.7, Remote-File 2.0,
LMFILE-Remote 5.0, microcode 849, on Lisp Machine Five:

M-X Copy File on FC:EB;QERR1 QFASL says the following:

>>ERROR: Operation TYI not handled by #<REMOTE-PROBE-STREAM "FC: eb; qerr1 qfasl" 21702237>
While in the function FS:REMOTE-PROBE-STREAM-PASS-ON-OPERATION  STREAM-COPY-UNTIL-EOF  
ZWEI:COM-COPY-FILE

FS:REMOTE-PROBE-STREAM-PASS-ON-OPERATION:
   Arg 0 (OPERATION): TYI
   Rest arg (ARGS): NIL



EB@MIT-ML 02/19/82 17:47:46
To: (BUG LISPM) at MIT-AI
In Experimental System 79.8, ZMail 40.7, Remote-File 2.0,
LMFILE-Remote 5.0, microcode 849, on Lisp Machine Five:

Is there a reason why M-X Copy Text File doesn't preserve file
creation date?


Date: Friday, 19 February 1982  19:01-EST
From: HES at SCRC-TENEX
To:   Mike McMahon <MMcM at SCRC-TENEX>
Cc:   BUG-LISPM at SCRC-TENEX

    Date: Friday, 19 February 1982, 11:57-EST
    From: Mike McMahon <MMcM>
    To:   HES
    cc:   BUG-LISPM

        Date: Friday, 19 February 1982, 10:44-EST
        From: Howie Shrobe <HES at SCRC-TENEX>
        I was loading in daedalus and got the message that the file
        daedalus.patch-dir was not found (in system-get-major-version).

        Now there is a patch directory named patch.directory.4
        which is there from the last time I compiled this
        thing.  Was the naming convention for such things changed in this system?
        (and if it doesn't find a patch directory why doesn't it create one?)
    Sounds like your system declaration is messed up.  Perhaps you are
    specifying the directory when it is in fact the same as the default
    pathname for the system?  The behaviour in that case has changed since
    system 79 to be consistent.
Indeed the sys def does give a directory for both and its the same directory.
It would be nice if the thing would create the new patch directory if its not
there.

Date: 19 February 1982 18:27-EST
From: Eugene C. Ciccarelli <ECC at MIT-AI>
Subject: new library
To: INFO-LISPM at MIT-AI

AI:LMLIB;FILCOM is a short file with a new ZMACS minor mode
called Auto Fill Lisp Comments Mode.  This is like the normal
auto fill mode except that only comments get broken across lines
-- not code.  Some documentation is at the beginning of FILCOM >.

Date: 19 February 1982 18:27-EST
From: Eugene C. Ciccarelli <ECC at MIT-AI>
Subject: new library
To: INFO-LISPM at MIT-AI

AI:LMLIB;FILCOM is a short file with a new ZMACS minor mode
called Auto Fill Lisp Comments Mode.  This is like the normal
auto fill mode except that only comments get broken across lines
-- not code.  Some documentation is at the beginning of FILCOM >.

Date: Friday, 19 February 1982, 11:57-EST
From: Mike McMahon <MMcM at SCRC-TENEX>
To: HES at SCRC-TENEX
Cc: BUG-LISPM at SCRC-TENEX

    Date: Friday, 19 February 1982, 10:44-EST
    From: Howie Shrobe <HES at SCRC-TENEX>
    I was loading in daedalus and got the message that the file
    daedalus.patch-dir was not found (in system-get-major-version).

    Now there is a patch directory named patch.directory.4
    which is there from the last time I compiled this
    thing.  Was the naming convention for such things changed in this system?
    (and if it doesn't find a patch directory why doesn't it create one?)
Sounds like your system declaration is messed up.  Perhaps you are
specifying the directory when it is in fact the same as the default
pathname for the system?  The behaviour in that case has changed since
system 79 to be consistent.

Date: Friday, 19 February 1982, 10:44-EST
From: Howie Shrobe <HES at SCRC-TENEX>
To: BUG-LISPM at SCRC-TENEX

In Experimental System 202.23, ZMail 40.7, Experimental Tape 7.0,
Experimental LMFS 22.10, Experimental Symbolics 9.3,
Experimental Canon 10.3, microcode 854, on Beagle:

I was loading in daedalus and got the message that the file
daedalus.patch-dir was not found (in system-get-major-version).

Now there is a patch directory named patch.directory.4
which is there from the last time I compiled this
thing.  Was the naming convention for such things changed in this system?
(and if it doesn't find a patch directory why doesn't it create one?)

Date: Friday, 19 February 1982, 10:44-EST
From: Howie Shrobe <HES at SCRC-TENEX>
To: BUG-LISPM at SCRC-TENEX

In Experimental System 202.23, ZMail 40.7, Experimental Tape 7.0,
Experimental LMFS 22.10, Experimental Symbolics 9.3,
Experimental Canon 10.3, microcode 854, on Beagle:

I was loading in daedalus and got the message that the file
daedalus.patch-dir was not found (in system-get-major-version).

Now there is a patch directory named patch.directory.4
which is there from the last time I compiled this
thing.  Was the naming convention for such things changed in this system?
(and if it doesn't find a patch directory why doesn't it create one?)

Date: Friday, 19 February 1982  15:10-EST
From: HIC at SCRC-TENEX
To:   Jonathan Delatizky <DELATZ at MIT-AI>
Cc:   BUG-LISPM at MIT-AI

    Date: Thursday, 18 February 1982  15:40-EST
    From: Jonathan Delatizky <DELATZ at MIT-AI>
    To:   BUG-LISPM at MIT-AI

    What's happened to the graph package in the window system?
    I've started getting messages like
    "The variable NEW-WINDOW-GRAPH-PACKAGE is unbound etc"
    and I don't know what to do about it. Which systems
    must I use to be OK??

    Thanks for any help...Jon

I have no idea what you are talking about.  Perhaps you were using someones
saved environment that had some graphics package loaded.  If so, you must
find that band or load the graphics package yourself.  Please send me the
filename where your code resides.  

Does anyone else out there recognize that variable name?

Date: Friday, 19 February 1982  15:05-EST
From: HIC at SCRC-TENEX
To:   CMB at SCRC-TENEX
cc:   BUG-LISPM at SCRC-TENEX, user-interface at SCRC-TENEX
Subject:   Initial Process


CMB:	Why, when my lisp listener gets an error, and I am in ZMacs, it says
	process initial process got an error.  Why not process Lips listener?

HIC:    The name of that process happens to be Initial Process, I
	suppose we could change it.

CMB:	I think that we should change its name.

HIC:	Does that mean we should call it "Lips listener"?  I presume you
	want to call it Lisp-Listener-1.  Does anyone have any objections?

Date: Friday, 19 February 1982, 10:11-EST
From: Daniel L. Weinreb <dlw at SCRC-TENEX>
To: CStacy at MIT-AI, BUG-LISPM at MIT-AI

    Date: 19 February 1982 04:42-EST
    From: Christopher C. Stacy <CStacy at MIT-AI>

    I would really like it if there was some way for a program in my init
    file to read &REST arguments from the LOGIN that callled it.

Yeah, this has occured to me too.  It seems like the easiest thing would
just be to have LOGIN accept an &REST argument and bind a special
variable to it.  Of course, there is the problem that LOGIN right now
takes three non-rest arguments.  The third one is read-init-file-p and
so it could be considered part of the "rest" argument, but you would
still have to specify the host explicitly.  I guess that's better than
not having the feature at all.

Date: Friday, 19 February 1982, 10:08-EST
From: Daniel L. Weinreb <dlw at SCRC-TENEX>
To: Bagley at MIT-MC, BUG-LMMAN at MIT-AI
Cc: BUG-LISPM at MIT-AI

    Date: 19 February 1982 09:14-EST
    From: Steven C. Bagley <Bagley at MIT-MC>
    Has any thought ever been given to producing Lispm manuals with "change
    bars" in the margins, indicating what has changed since the previous
    version of the manual?
Yes, we've certainly thought about it.  It isn't trivial to get that to
happen automatically, and it is a lot of work to produce them manually.
It might also be nice to publish it with loose pages so that you would
put it in a three-ring binder and be able to get incremental updates;
the present thing costs quite a lot to print.  Anyway, there won't be
any new versions any time soon anyway, so it's not an immediate issue.

Date: Friday, 19 February 1982, 09:23-EST
From: Clark M. Baker <CMB at SCRC-TENEX>
Subject: Initial Process
To: HIC at SCRC-TENEX
Cc: BUG-LISPM at SCRC-TENEX, user-interface at SCRC-TENEX

CMB:	Why, when my lisp listener gets an error, and I am in ZMacs, it says
	process initial process got an error.  Why not process Lips listener?

HIC:    The name of that process happens to be Initial Process, I
	suppose we could change it.

CMB:	I think that we should change its name.

Date: 19 February 1982 09:14-EST
From: Steven C. Bagley <Bagley at MIT-MC>
To: BUG-LMMAN at MIT-AI
cc: BUG-LISPM at MIT-AI

Has any thought ever been given to producing Lispm manuals with "change
bars" in the margins, indicating what has changed since the previous
version of the manual?

Date: Friday, 19 February 1982, 06:49-EST
From: Robert W. Kerns <RWK at SCRC-TENEX>
Subject: Questions from SYSTEM MSG
To: David L. Andre <DLA at MIT-AI>
Cc: BUG-LISPM at MIT-AI
In-reply-to: The message of 12 Feb 82 03:25-EST from David L. Andre <DLA at MIT-AI>

    What file servers are announced to be released?

ITS, TOPS-20, TENEX, VMS, UNIX, MULTICS, and Lispms Various.

I'll write an addendum which can go out to INFO-LISPM.

Date: Friday, 19 February 1982, 06:49-EST
From: Robert W. Kerns <RWK at SCRC-TENEX>
Subject: Questions from SYSTEM MSG
To: David L. Andre <DLA at MIT-AI>
Cc: BUG-LISPM at MIT-AI
In-reply-to: The message of 12 Feb 82 03:25-EST from David L. Andre <DLA at MIT-AI>

    What file servers are announced to be released?

ITS, TOPS-20, TENEX, VMS, UNIX, MULTICS, and Lispms Various.

I'll write an addendum which can go out to INFO-LISPM.

Date: 19 February 1982 04:42-EST
From: Christopher C. Stacy <CStacy at MIT-AI>
To: BUG-LISPM at MIT-AI

In System 79.12, ZMail 40.7, Remote-File 2.0, LMFILE-Remote 5.0,
microcode 849, CStacy spacial, on Lisp Machine Six:

I would really like it if there was some way for a program in my init
file to read &REST arguments from the LOGIN that callled it.

Date: 18 February 1982 23:11-EST
From: Philippe Brou <PHILIP at MIT-AI>
To: BUG-LISPM at MIT-AI

In Experimental System 79.8, ZMail 40.7, Experimental LMFILE Remote 4.1,
Remote-File 2.0, LMFILE-Remote 5.0, microcode 849, 79.5 RM 4.1, on Lisp Machine Three:

~T in format moves to n then mk instead of n+mk as indicated in manual.
Other problem with ~T in another message sent earlier.

Date: 18 February 1982 22:56-EST
From: Philippe Brou <PHILIP at MIT-AI>
To: BUG-LISPM at MIT-AI

In Experimental System 79.8, ZMail 40.7, Experimental LMFILE Remote 4.1,
Remote-File 2.0, LMFILE-Remote 5.0, microcode 849, 79.5 RM 4.1, on Lisp Machine Three:

Problem in with Tab command in Format.
If ~n,mT is used a large number of times consecutively, up to the
point where the cursor reaches the end of line, one argument will be printed
in column 0 instead of going to n.

EX: (loop for i from 1 to 20. do (format t "~12,15T~a" 'X))
    gives all the right spacing except for a few X that appear in column 0 instead of 12
    initially.

The problem is in function FORMAT-CTL-TAB which issues a Cursorpos request with a number
exceeding the line length and thus places it at 0. The function works well after this
error since it reads the position back from the screen and jumps to 12.
I guess that a simple check for NEW-X > window length => NEW-X = initial would solve
the problem

I use the feature to print out indented tables.

Thank You

Date: Thursday, 18 February 1982, 22:00-EST
From: Robert P. Krajewski <RpK at MIT-LISPM-13>
Reply-to: RpK at XX
Subject: Sending a Press file
To: BUG-LISPM at MIT-AI

In System 78.53, ZMail 38.5, Experimental Macsyma 22.0, Local-File
31.10, microcode 836, FS, on Lisp Machine Thirteen:

[In the PRESS: package:]  The function PRINT-PRESS-FILE does not
call the funcation PRESS-OPEN-EFTP-STREAM with enough arguments.  The
second (missing) argument is DOVER-ADDRESS.  Other functions might also
do this.

bob

[Suggestion: seeing as the address of the Dover doesn't change very
often, why can't the arglist to PRESS-OPEN-EFTP-STREAM be (HOST-ADDRESS
&OPTIONAL (DOVER-ADDRESS DOVER ADDRESS)) ?]

Date: 18 February 1982 20:38-EST
From: Patrick G. Sobalvarro <PGS at MIT-AI>
To: BUG-LISPM at MIT-AI

In System 79.8, ZMail 40.7, Remote-File 2.0, LMFILE-Remote 5.0,
microcode 849, on Lisp Machine Six:

Say I want to trace the function SI:FOO when I am in USER:, and I do
this by mistake:

(trace foo)

I get the following error message, which looks OK:

>>>>TRAP 15257 (TRANS-TRAP)
The function FOO is undefined.
While in the function FDEFINITION  SI:RENAME-WITHIN-RENAMINGS-SLOT  SI:RENAME-WITHIN-NEW-DEFINITION-MAYBE

FDEFINITION:
Arg 0 (FUNCTION-SPEC): FOO
Use the definition of SI:FOO? (Y, N, P, or G) Yes.
(FOO)

But then I do this:

(untrace)
>>>>TRAP 15257 (TRANS-TRAP)
The function FOO is undefined.
While in the function FDEFINITION  SI:UNTRACE-1  MAPCAR

FDEFINITION:
Arg 0 (FUNCTION-SPEC): FOO
Use the definition of SI:FOO? (Y, N, P, or G) Yes.
(FOO)

and I have to say yes again. This strikes me as weird, because UNTRACE
should just untrace any function being traced. But wait, it gets
better: now :FOO is defined, and it has the same definition as SI:FOO.

-pgs

Date: Thursday, 18 February 1982, 17:56-EST
From: David L. Andre <DLA at SCRC-TENEX>
Subject: LOGNOT
To: Moon at SCRC-TENEX
Cc: DLA at SCRC-TENEX, BUG-LISPM at SCRC-TENEX, DLA at SCRC-TENEX

    Date: Wednesday, 17 February 1982, 01:48-EST
    From: David A. Moon <Moon at SCRC-TENEX>
    Functions with constant arguments are optimized, but functions of such
    functions are not.  Thus (LOGNOT 6) optimizes into -7 but 
    (LOGNOT (LOGNOT 6)) compiles into (LOGXOR -7 -1).  This is probably
    too difficult to fix in the A-machine compiler without introducing
    an extreme slowdown by making subexpressions get optimized many times.
Actually, this optimizing subexpressions is already done in a number of
places.  It can be done "right", so that, if the subform optimizes, it
only does so once.  I'll look into it.


Date: Thursday, 18 February 1982, 17:55-EST
From: David L. Andre <DLA at SCRC-TENEX>
Subject: CHAOS:SHOUT
To: BUG-LISPM at SCRC-TENEX
Cc: ZVona at MIT-AI

I removed CHAOS:SHOUT from the source.  In its place I have a notify
protocol, with associated functions CHAOS:NOTIFY and
CHAOS:NOTIFY-ALL-LMS.


Date: Thursday, 18 February 1982, 15:24-EST
From: David L. Andre <DLA at SCRC-TENEX>
Subject: SI:SET-SYSTEM-STATUS
To: turnip at MIT-AI
Cc: BUG-LISPM at MIT-AI, DLA at SCRC-TENEX

I agree that SET-SYSTEM-STATUS should be in global, and I changed it in
the source.  The documentation should be more clearly state that this is
called from top level, and is not put in a patch.

I will also put in M-X Set System Status when I get around to it.

Note that the arglist to SET-SYSTEM-STATUS will change slightly when
status refer to minor versions of the system.

Date: Thursday, 18 February 1982  17:03-EST
From: HIC at SCRC-TENEX
To:   Clark Baker <CMB at SCRC-TENEX>
Cc:   BUG-LISPM at SCRC-TENEX

    Date: Thursday, 18 February 1982, 09:55-EST
    From: Clark Baker <CMB>
    To:   BUG-LISPM

    In Experimental System 202.25, ZMail 40.7, Experimental Tape 7.0,
    Experimental LMFS 22.14, Experimental Symbolics 9.3,
    Experimental Canon 10.3, microcode 858, on Retriever:

    Why, when my lisp listener gets an error, and I am in ZMacs, it says
    process initial process got an error.  Why not process Lips listener?
The name of that process happens to be Initial Process, I suppose we could change it.

Date: 18 February 1982 15:40-EST
From: Jonathan Delatizky <DELATZ at MIT-AI>
To: BUG-LISPM at MIT-AI

What's happened to the graph package in the window system?
I've started getting messages like
"The variable NEW-WINDOW-GRAPH-PACKAGE is unbound etc"
and I don't know what to do about it. Which systems
must I use to be OK??

Thanks for any help...Jon

Date: 18 February 1982 14:23-EST
From: Henry Lieberman <HENRY at MIT-AI>
Subject:  Error streams
To: dlw at SCRC-TENEX
cc: BUG-LISPM at MIT-AI


So what's the right way to redefine a user stream to 
handle errors? (To converse with the error handler, etc.)
If there aren't any streams I can bind to do this, I 
don't object to writing my own error handler, providing
there's a reliable way to do this (access error messages, 
resume if need be, etc.). I would like to 
make my editor top level work with the error handler, 
have a special error handler for Tinker, and other
applications. Will the new error system being contemplated
have hooks for this?

Date: Thursday, 18 February 1982, 12:20-EST
From: Clark Baker <CMB at SCRC-TENEX>
To: BUG-LISPM at SCRC-TENEX

In Experimental System 202.25, ZMail 40.7, Experimental Tape 7.0,
Experimental LMFS 22.14, Experimental Symbolics 9.3,
Experimental Canon 10.3, microcode 858, on Retriever:

I ran out of regions yesterday.  Also, I sometimes have to grow the PDL
many times.  BEE said that the current defaults for these variables were
made a while ago at MIT when machines has less disk and smaller amounts
of memory, and that since we make our own cold-loads now, there is a
chance to change the defaults upwards.  Should someone do this?

Date: Thursday, 18 February 1982, 12:18-EST
From: Clark Baker <CMB at SCRC-TENEX>
To: BUG-LISPM at SCRC-TENEX

In Experimental System 202.25, ZMail 40.7, Experimental Tape 7.0,
Experimental LMFS 22.14, Experimental Symbolics 9.3,
Experimental Canon 10.3, microcode 858, on Retriever:

I tried to use compiler:fasd-symbol-value on a symbol whose value was
the Scheme-81 chip.  Many transistors are linked together on the GND
node.  After many "growing PDL" messages to which I replied ^C, it
finially died with a FASD TABLE OVERFLOW.  Is there any way to dump this
symbols value out without all these problems.  DanG said that he had
hoped to use this function in LIL for dumping som large structures also.

Date: Thursday, 18 February 1982, 09:55-EST
From: Clark Baker <CMB at SCRC-TENEX>
To: BUG-LISPM at SCRC-TENEX

In Experimental System 202.25, ZMail 40.7, Experimental Tape 7.0,
Experimental LMFS 22.14, Experimental Symbolics 9.3,
Experimental Canon 10.3, microcode 858, on Retriever:

Why, when my lisp listener gets an error, and I am in ZMacs, it says
process initial process got an error.  Why not process Lips listener?

Date: Thursday, 18 February 1982, 09:53-EST
From: Clark Baker <CMB at SCRC-TENEX>
To: BUG-LISPM at SCRC-TENEX

In Experimental System 202.25, ZMail 40.7, Experimental Tape 7.0,
Experimental LMFS 22.14, Experimental Symbolics 9.3,
Experimental Canon 10.3, microcode 858, on Retriever:

Is there any reason global:parse-number doesn't parse "-567"?

Date: Thursday, 18 February 1982, 01:29-EST
From: David A. Moon <Moon at SCRC-TENEX>
To: BUG-LISPM at SCRC-TENEX

In Experimental System 202.22, ZMail 40.7, Experimental Tape 7.0,
Experimental LMFS 22.10, Experimental Symbolics 9.3,
Experimental Canon 10.3, microcode 855, on Terrier:

When reading control characters through a rubout-handler (i.e. with
:pass-through set to all the control characters), and using :UNTYI
(actually TYIPEEK) to peek ahead at things, control bits get stripped.
This is because the rubout handler tries to store a 16-bit character
in its 8-bit buffer.

Date: 17 Feb 1982 2037-EST
From: David L. Andre <DLA at SCRC-TENEX>
Subject: Re: Fdefine warnings
To: dlw at MIT-AI, JERRYB at MIT-AI, BUG-LISPM at MIT-AI
cc: DLA at SCRC-TENEX
In-Reply-To: Your message of 17-Feb-82 1417-EST

Yeah.  I like LET-WHEN.
-------

Date: 18 February 1982 00:35-EST
From: George J. Carrette <GJC at MIT-MC>
Subject:  Compilation errors in MAKE-SYSTEM
To: ALR at MIT-ML
cc: BUG-LISPM at SCRC-TENEX, DLA at SCRC-TENEX, RWK at SCRC-TENEX

Right, having to do :RECOMPILE is a big loser. I was doing a :RECOMPILE
because it was recommended in INFO-LISPM that things be recompiled
in system 78. (Some files hadn't been recompiled since system 72).

Question: Why didn't MAKE-SYSTEM know that files had to be recompiled
          even if the source file had not changed?

Date: Thursday, 18 February 1982, 00:33-EST
From: Daniel L. Weinreb <dlw at SCRC-TENEX>
Subject: System 79 release.
To: HENRY at MIT-AI, BUG-LISPM at MIT-AI

There isn't any ERROR-INPUT or ERROR-IO because it is assumed that
QUERY-IO can be used for this.  The semantics is just "I want
a stream that is really talking to the interactive user even
if he has diverted STANDARD-OUTPUT to a file or editor buffer
or string."

Date: 17 February 1982 20:04-EST
From: Andrew L. Ressler <ALR at MIT-ML>
Subject:  Compilation errors in MAKE-SYSTEM
To: RWK at SCRC-TENEX
cc: BUG-LISPM at SCRC-TENEX, DLA at SCRC-TENEX, GJC at MIT-MC

    Of course, if files are reasonably sized, it's not too bad to just call
    MAKE-SYSTEM again, since you won't have to recompile files already compiled
    or load files already loaded.  Of course, with a large system just doing all
    the PROBEF's can take a while.

This loses though if one is doing a complete recompile.  Maybe there can be
some state saved from a previous make-system that would help solve this
problem.  That way doing a recompile might know that some have just been
recompiled and therefore needn't be recompiled.

    Date: Tuesday, 16 February 1982, 22:20-EST
    From: Robert W. Kerns <RWK at SCRC-TENEX>
    To:   David L. Andre <DLA at SCRC-TENEX>
    cc:   GJC at MIT-MC, BUG-LISPM at SCRC-TENEX
    Re:   Compilation errors in MAKE-SYSTEM

        Date: Sunday, 14 February 1982, 21:06-EST
        From: David L. Andre <DLA at SCRC-TENEX>
        Subject: Compilation errors in MAKE-SYSTEM
        To: GJC at MIT-MC, BUG-LISPM at SCRC-TENEX
        Cc: DLA at SCRC-TENEX

    	From: GJC@MIT-MC
    	Date: 02/10/82 16:45:33
    	I am doing a (MAKE-SYSTEM'MACSYMA':BATCH':COMPILE':RELOAD)
    	in order to make sure all the QFASL's are up to date in
    	the new system. (Some files were last compiled many months ago).

    	Q: If one of the compilations bombs out, how do you restart
    	   where you left off?
        This is a problem which should probably be addressed in the new error
        system.  Basically, the Resume key should do something like ask you
        "Recompile File MUMBLE?", and cause MAKE-SYSTEM to do the right thing.

        In the meantime, what I always end up doing is stepping down in the
        debugger to the QC-FILE, and doing c-m-R to throw there and re-evaluate.

Date: 17 February 1982 17:33-EST
From: Daniel L. Weinreb <DLW at MIT-AI>
To: INFO-LISPM at MIT-AI

The file LMWIND; WINDOC PRESS is back in shape.  I hope to get
this published by the AI lab so that you won't have to run off
your own copies, someday.

Date: Wednesday, 17 February 1982, 16:31-EST
From: Clark Baker <CMB at SCRC-TENEX>
To: BUG-LISPM at SCRC-TENEX

In System 78.66, ZMail 38.7, Symbolics 8.15, Tape 6.5, LMFS 21.42, Canon 9.13, Macsyma 11.0, microcode 858, Demo Band, on Retriever:

Why can't the lisp machine keep time?  It seems to lose up to an hour
every 8 hours when it is computing.  I realise that this makes our
benchmarks look better ...

Date: 17 February 1982 12:18-EST
From: Daniel L. Weinreb <dlw at MIT-AI>
Subject: Re: Fdefine warnings
To: JERRYB at MIT-AI, BUG-LISPM at MIT-AI, DLA at SCRC-TENEX

    I never liked the (PROGN 'COMPILE ..) convention; I don't see why one
    can't just do (EVAL-WHEN (LOAD) ...) if he wants to inhibit compilation.

There are two reasons.  One is Maclisp compatibility.  The other is that
it is less bug-prone: if you had done (eval-when (load) ...), your form
would not be evaluated by the interpreter.  (eval-when (load eval) ...)
is what you meant to say.  Seriously, though, the real reason that it must
be in is for Maclisp, and the reason that it was introduced is that there
wasn't any eval-when back when it was invented.

Just because it is here to stay does not mean that we should propagate it
all over!  LET-WHEN might be a good generalization of COMPILER-LET to have.

Date: Wednesday, 17 February 1982, 01:51-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: CHAOS:SHOUT
To: David L. Andre <DLA at SCRC-TENEX>
Cc: bug-lispm at SCRC-TENEX
In-reply-to: The message of 14 Feb 82 21:24-EST from David L. Andre <DLA at SCRC-TENEX>

    Date: Sunday, 14 February 1982, 21:24-EST
    From: David L. Andre <DLA at SCRC-TENEX>
    Subject: CHAOS:SHOUT
    To: zvona at MIT-AI
    Cc: BUG-LISPM at MIT-AI, DLA at SCRC-TENEX

	Date: 11 February 1982 17:09-EST
	From: David Chapman <zvona at MIT-AI>
	Chaos:shout should be smart enough not to shout back at the
	sender.
    I don't like CHAOS:SHOUT at all.  It's the wrong thing to use an
    interactive protocol for notifying all users, it's the wrong thing
    to send to lispms without users, and it's the wrong thing to do it
    serially.  Perhaps the right thing would be a NOTIFY protocol, which
    would just be a simple transaction.  Does anybody object to this?

Note that simple transactions do not use reliable packet transmission.
Thus a shout implemented with simple transactions might come out
multiple times at a particular machine if the network was losing packets
(as it will be if n machines are all sending acknowledgements to the
shouter simultaneously.)  This could be fixed by having each machine
remember the last shout it received, and avoid reprinting it if the
text was string-equal (unique IDs could be used, but seem unnecessary
for this application.)

Date: Wednesday, 17 February 1982, 01:48-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: LOGNOT
To: David L. Andre <DLA at SCRC-TENEX>
Cc: BUG-LISPM at SCRC-TENEX
In-reply-to: The message of 14 Feb 82 21:43-EST from David L. Andre <DLA at SCRC-TENEX>

    Date: Sunday, 14 February 1982, 21:43-EST
    From: David L. Andre <DLA at SCRC-TENEX>
    Subject: LOGNOT
    To: Moon at SCRC-TENEX
    Cc: BUG-LISPM at SCRC-TENEX, DLA at SCRC-TENEX

	Date: Saturday, 13 February 1982, 23:29-EST
	From: David A. Moon <Moon at SCRC-TENEX>

	LOGAND with constant arguments is optimized but LOGNOT is not.
    It is for me.  LOGNOT macroexpands into a LOGXOR, which optimizes
    correctly.
This bug report was complete brain-damage on my part.  Here is the
correct bug report:

Functions with constant arguments are optimized, but functions of such
functions are not.  Thus (LOGNOT 6) optimizes into -7 but 
(LOGNOT (LOGNOT 6)) compiles into (LOGXOR -7 -1).  This is probably
too difficult to fix in the A-machine compiler without introducing
an extreme slowdown by making subexpressions get optimized many times.

Date: Wednesday, 17 February 1982, 00:32-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: Microcode
To: Alan Bawden <Alan at MIT-AI>
Cc: BUG-LISPM at MIT-AI
In-reply-to: The message of 16 Feb 82 15:46-EST from Alan Bawden <Alan at MIT-AI>

    Date: 16 February 1982 15:46-EST
    From: Alan Bawden <Alan at MIT-AI>
    Sender: GLR at MIT-AI
    Subject: Microcode
    To: BUG-LISPM at MIT-AI

    Can someone explain to me the current technology for writing and testing
    small pieces of microcode?  Is there any documentation?
There is no documentation that I know of.  Taft has a small file you can copy
(it was copied from another small file) to get the magic incantation.

Date: 16 February 1982 21:52-EST
From: Andrew L. Ressler <ALR at MIT-ML>
Subject:  Microcode
To: GLR at MIT-ML
cc: BUG-LISPM at MIT-AI

I can show you sometime.


Date: Tuesday, 16 February 1982, 22:20-EST
From: Robert W. Kerns <RWK at SCRC-TENEX>
Subject: Compilation errors in MAKE-SYSTEM
To: David L. Andre <DLA at SCRC-TENEX>
Cc: GJC at MIT-MC, BUG-LISPM at SCRC-TENEX
In-reply-to: The message of 14 Feb 82 21:06-EST from David L. Andre <DLA at SCRC-TENEX>

    Date: Sunday, 14 February 1982, 21:06-EST
    From: David L. Andre <DLA at SCRC-TENEX>
    Subject: Compilation errors in MAKE-SYSTEM
    To: GJC at MIT-MC, BUG-LISPM at SCRC-TENEX
    Cc: DLA at SCRC-TENEX

	From: GJC@MIT-MC
	Date: 02/10/82 16:45:33
	I am doing a (MAKE-SYSTEM'MACSYMA':BATCH':COMPILE':RELOAD)
	in order to make sure all the QFASL's are up to date in
	the new system. (Some files were last compiled many months ago).

	Q: If one of the compilations bombs out, how do you restart
	   where you left off?
    This is a problem which should probably be addressed in the new error
    system.  Basically, the Resume key should do something like ask you
    "Recompile File MUMBLE?", and cause MAKE-SYSTEM to do the right thing.

    In the meantime, what I always end up doing is stepping down in the
    debugger to the QC-FILE, and doing c-m-R to throw there and re-evaluate.
Of course, if files are reasonably sized, it's not too bad to just call
MAKE-SYSTEM again, since you won't have to recompile files already compiled
or load files already loaded.  Of course, with a large system just doing all
the PROBEF's can take a while.

Date: 16 February 1982 20:19-EST
From: Glenn S. Burke <GSB at MIT-ML>
Subject: [Re: Fdefine warnings]??
To: DLA at SCRC-TENEX
cc: BUG-LISPM at MIT-AI

no, no, no.  You don't want LET to have a 'COMPILE crock.  What you
want is (LET-WHEN (kwd1 kwd2 ...) <let-bindings> body...)  e.g.,
(LET-WHEN (EVAL COMPILE) ...) is like COMPILER-LET.  This way you can
have a COMPILER-LET-like thing that doesn't vanish upon compilation
(something i have actually wanted a couple of times).  If you really
want to get hairy, you can have the LOAD keyword, but that undoubtedly
involves great modularity changes to the way compiled code is stored
and loaded, especially if the form is not a toplevel form.


Date: 16 Feb 1982 1845-EST
From: David L. Andre <DLA at SCRC-TENEX>
Subject: Re: Fdefine warnings
To: JerryB at MIT-AI, BUG-LISPM at MIT-AI
cc: DLA at SCRC-TENEX
In-Reply-To: Your message of 16-Feb-82 1035-EST

The canonical way to do this has been
(remprop 'foo 'source-file-name), but this will not
always do the right thing now that the source-file-name property
can be a list.  I've often wished that this could be a declaration, 
but I just thought of a "better" solution:

How about allowing the first "form" in LET and LET* to be 'COMPILE, in
which case the variables are bound at load and compile time, and the
forms are processed as if they were at top level?

I never liked the (PROGN 'COMPILE ..) convention; I don't see why one
can't just do (EVAL-WHEN (LOAD) ...) if he wants to inhibit compilation.
I think the default for PROGN, LET, and LET* should be to compile the
forms in the body as if they were at top level.  But if PROGN 'COMPILE
is here to stay, then I think LET should be extended appropriately.
-------

Date: 16 February 1982 18:21-EST
From: David L. Andre <DLA at MIT-AI>
Subject: CHSAUX in system 79.
To: BUG-LISPM at MIT-AI, CSTACY at MIT-AI

The QFASL of CHSAUX in system 79 was evidently loaded incorrectly -- All
references to SI:SITE-NAME in the file turned into CHAOS:SITE-NAME.
This file had been compiled by me, but I cannot look at its unfasl
because CStacy recompiled it.  [Why did you do that?  It didn't need
it.]  This may be a bug in the compiler, the fasdumper, or the
cold-fasloader; I don't know.  The bug doesn't appear in system 202.

Date: 16 February 1982 18:13-EST
From: David L. Andre <DLA at MIT-AI>
Subject: 79.9
To: JMTURN at MIT-AI
cc: BUG-LISPM at MIT-AI

You started a patch for 79.9 and neither finished it nor wrote out a
patch file.  Since this was causing subsequent patches not to be loaded,
I removed the entry for that patch from the patch directory.

You should be more careful if you aspire to maintain the system.

Date: Tuesday, 16 February 1982  16:03-EST
From: DLW at SCRC-TENEX
To:   Richard M. Stallman <RMS at MIT-AI>
Cc:   BUG-LISPM at MIT-AI

Yes, I object to the special indentation for IF.  Also, if you look at
various init files you can find other people who, like me, remove
the special indentation.  Moon does.  Daniel Weise does, and he told
me that most of the people that he works with do too.

I don't know who changed the default; I didn't even know that it had
been changed (since my environment is customized anyway).

Date: Tuesday, 16 February 1982  15:59-EST
From: DLW at SCRC-TENEX
To:   Gerald R. Barber <JerryB at MIT-AI>
Cc:   BUG-LISPM at MIT-AI
Subject: Fdefine warnings

Well, you can put an explicit (remprop 'foo 'source-file-name) in the file
before you define foo, although it's kludgey.

Date: 16 February 1982 15:46-EST
From: Alan Bawden <Alan at MIT-AI>
Sender: GLR at MIT-AI
Subject: Microcode
To: BUG-LISPM at MIT-AI

Can someone explain to me the current technology for writing and testing
small pieces of microcode?  Is there any documentation?

Date: 16 February 1982 10:31-EST
From: Gerald R. Barber <JerryB at MIT-AI>
Subject: Fdefine warnings
To: BUG-LISPM at MIT-AI

In System 79.8, ZMail 40.7, Remote-File 2.0, LMFILE-Remote 5.0,
microcode 849, CStacy spacial, on Lisp Machine Six:

Is there a clean way to inhibit fdefine warnings for a single funtion in
a file, ie, without putting patch-file:T in the file property list?


Date: 16 February 1982 09:32-EST
From: Gerald R. Barber <JerryB at MIT-AI>
Subject: defvar
To: ALR at MIT-ML
cc: BUG-LISPM at MIT-AI, BUG-ZWEI at MIT-AI, DCB at MIT-AI,
    dlw at SCRC-TENEX

    Date: 14 February 1982 20:37-EST
    From: Andrew L. Ressler <ALR at MIT-ML>
    To:   JerryB
    cc:   dlw at SCRC-TENEX, BUG-LISPM, BUG-ZWEI, DCB
    Re:   defvar

	I can hardly consider this a feature.  It may be convenient to have this
	capability somewhere but its behavior is too unexpected for it to be
	on vanilla flavored Compile Defun or Eval Defun.  I expect you will get
	bug messages about this from confused users until it is changed.
    What would you suggest to replace this behavior.  I think it is consistent
    and easy to use.  I admit documentation would help, but I don't think its
    behavior should be changed.

I don't think it is consistent with the notion of evaluation or
compilation as it is used in most other contexts.  Until a better
solution is found Eval Defun and Compile Defun should at least print a
message in the echo area that the DEFVAR is being treated specially.

Date: 16 February 1982 09:25-EST
From: Gerald R. Barber <JerryB at MIT-AI>
To: RMS at MIT-AI
cc: BUG-LISPM at MIT-AI

    Date: 16 February 1982 01:57-EST
    From: Richard M. Stallman <RMS at MIT-AI>
    To: BUG-LISPM at MIT-AI

    Does anyone object to indenting the else-clauses in IF two spaces
    less than the then-clause?


No.  I prefer that else clauses are indented differently that the then
clause, it helps distinquish the two.

HANSON@MIT-MC 02/16/82 06:31:50
To: (BUG LISPM) at MIT-AI
In System 79.8, ZMail 40.7, Remote-File 2.0, LMFILE-Remote 5.0,
microcode 849, on Lisp Machine Eighteen:

The following bug occurred while compiling the file MC:SCHEME;USCH81 23.

>>>>TRAP 15257 (TRANS-TRAP)
The word #<DTP-TRAP 20240253> was read from location 20240253 (in FASD-TEMPORARY-AREA).
while in the function STRING  INTERN-LOCAL  SI:PKG-REHASH

			- hanson


Date: Tuesday, 16 February 1982, 06:06-EST
From: David L. Andre <DLA at SCRC-TENEX>
To: BUG-LISPM at SCRC-TENEX

In Experimental System 202.22, ZMail 40.7, Experimental Tape 7.0,
Experimental LMFS 22.10, Experimental Symbolics 9.3,
Experimental Canon 10.3, microcode 854, on Basset:

In an editor breakpoint, I got the trap that I called a select-method
with no args.  When I aborted out of this, the machine halted.  After
warm booting, I couldn't use the editor again without the machine
halting again.

RWG@MIT-MC 02/16/82 05:06:10 Re: Indenting IF
To: (BUG LISPM) at MIT-MC
I used to prefer maximally aligned parens, but given the evolution of
Lisp syntax, I now lean toward the higher information content possible
with less rigid indenting.  In the case of IF with one ELSE clause, I
initially bletched when I saw RMS's contour, then decided it was in
fact mnemonic:  the outcome consonant with the predicate indented
consonantly, and mutatis mutandis for the ELSE.

Date: 16 February 1982 05:02-EST
From: Dexter Pratt <DEXTER at MIT-AI>
Subject: hardware lossage reporting	
To: INFO-LISPM at MIT-AI


In order to keep the lisp machines better maintained, I'd like to ask everybody to
use the bug-hardware list - I generally hear of broken machines by word of mouth, or
by noticing that one has a note on it. Furthermore, once a bug is reported, there
should be a response to bug-hardware by the person who fixes it, as is done on bug-lispm.


several new people are learning how to debug cadrs, so the maintainance will  
improve in the next months.

-dexter

Date: 16 February 1982 04:47-EST
From: George J. Carrette <GJC at MIT-MC>
To: RMS at MIT-AI
cc: BUG-LISPM at MIT-AI

    From: Richard M. Stallman <RMS at MIT-AI>
    Does anyone object to indenting the else-clauses in IF two spaces
    less than the then-clause?

Yes, I object. I never use more that one else clause, so I think it
looks silly to have (IF (FOO X) (BAR X) (BAZ X))  indent as
(IF (FOO X)
    (BAR X)
  (BAZ X))

It is pretty to have parens line-up as much as possible. Certainly
with C-M-F and C-M-B it is never a readability problem.



Date: 16 February 1982 01:57-EST
From: Richard M. Stallman <RMS at MIT-AI>
To: BUG-LISPM at MIT-AI

Does anyone object to indenting the else-clauses in IF two spaces
less than the then-clause?

This was flushed, but nobody admitted to flushing it, and the only
response I got before was a favorable one.  Unless opinion is clearly
against it, I will reinstall it.

Date: 16 February 1982 01:05-EST
From: James M. Turner <JMTurn at MIT-AI>
To: BUG-LISPM at MIT-AI

In System 79.8, ZMail 40.7, Remote-File 2.0, LMFILE-Remote 5.0,
microcode 849, on Lisp Machine Eighteen:

Calling a function which is a list pointing into a temporary area and
contains dtp-trap in its car causes the error handler to bomb out
thoroughly.  It gets recursive errors in LEGITIMATE-FUNCTION-P,
ARG-NAME and elsewhere.

Date: 15 FEB 1982 1421-PST
From: DEKLEER at PARC-MAXC
To:   BUG-lispm at MIT-AI

In ETHER 24.9, System 78.54, microcode 841, on Xerox Lisp Machine One:

Files with defvars in them compiled in world 79 won't load into world
78.  
-------

Date: 15 FEB 1982 1219-PST
From: DEKLEER at PARC-MAXC
To:   BUG-lispm at MIT-AI

In Experimental ETHER 26.0, System 79.8, microcode 854, on Unknown:

This is more a gripe than a bug.

Someone hacked defvar in such a way that if you compile a file with
defvars in the latest world 79, the same file will not successfully load
into a incomplete (as in my case) or unpatched world 79 (every defvar
will get an atom unbound error message).  By fortuitous coincidence who
ever did this did not get screwed because the patch files do not
themselves have defvars in them.


-------

Date: 15 February 1982 12:44-EST
From: Dexter Pratt <DEXTER at MIT-AI>
Subject: hardware lossage reporting
To: BUG-LISPM at MIT-AI, BUG-HARDWARE at MIT-AI

In order to keep the lisp machines better maintained, I'd like to ask everybody to
use the bug-hardware list - I generally hear of broken machines by word of mouth, or
by noticing that one has a note on it. Furthermore, once a bug is reported, there
should be a response to bug-hardware by the person who fixes it, as is done on bug-lispm.


several new people are learning how to debug cadrs, so the maintainance will  
improve in the next months.

-dexter

-also, is there any other list to reach lispm users besides bug-lispm?

Date: 15 February 1982 05:28-EST
From: Christopher C. Stacy <CStacy at MIT-AI>
Subject: Chaos LOSsage
To: BUG-LISPM at MIT-AI

In System 79.8, ZMail 40.7, Remote-File 2.0, LMFILE-Remote 5.0,
microcode 849, CStacy spacial, on Lisp Machine Six:

Sometimes when I log out of XX using the KK command, my Chaosnet
connection sometimes claims to receive a packets with opcode 11.,
which it doesnt know what to do with.   It should identify it
as a LOS packet consistantly!

Date: 14 February 1982 23:32-EST
From: Henry Lieberman <HENRY at MIT-AI>
Subject: System 79 release.
To: BUG-LISPM at MIT-AI


I applaud the implementation of ERROR-OUTPUT in system 79,
and also vote strongly for an analogous ERROR-INPUT (or ERROR-IO), 
briefly alluded to as "may be a bad idea". I have applications
which need to be able to do this, and it should be done anyway
for consistency with STANDARD-INPUT, etc.

Date: 14 February 1982 22:45-EST
From: Richard Greenblatt <rg at MIT-AI>
To: BUG-LISPM at MIT-AI

In System 79.8, ZMail 40.7, Experimental LMFILE Remote 4.1,
Remote-File 2.0, LMFILE-Remote 5.0, microcode 849, 79.5 RM 4.1, on Lisp Machine Seven:

There is seems to be a bug in notification windows in this system.
A remote-band-server notification got lots of errors (trying to output
to de-exposed window) and bombed to the cold load stream on me.  Unfortunately,
a couple of tries to reproduce the lossage failed.

Date: Sunday, 14 February 1982, 21:43-EST
From: David L. Andre <DLA at SCRC-TENEX>
Subject: LOGNOT
To: Moon at SCRC-TENEX
Cc: BUG-LISPM at SCRC-TENEX, DLA at SCRC-TENEX

    Date: Saturday, 13 February 1982, 23:29-EST
    From: David A. Moon <Moon at SCRC-TENEX>

    LOGAND with constant arguments is optimized but LOGNOT is not.
It is for me.  LOGNOT macroexpands into a LOGXOR, which optimizes
correctly.

Date: Sunday, 14 February 1982, 21:24-EST
From: David L. Andre <DLA at SCRC-TENEX>
Subject: CHAOS:SHOUT
To: zvona at MIT-AI
Cc: BUG-LISPM at MIT-AI, DLA at SCRC-TENEX

    Date: 11 February 1982 17:09-EST
    From: David Chapman <zvona at MIT-AI>
    Chaos:shout should be smart enough not to shout back at the
    sender.
I don't like CHAOS:SHOUT at all.  It's the wrong thing to use an
interactive protocol for notifying all users, it's the wrong thing
to send to lispms without users, and it's the wrong thing to do it
serially.  Perhaps the right thing would be a NOTIFY protocol, which
would just be a simple transaction.  Does anybody object to this?

Date: Sunday, 14 February 1982, 21:06-EST
From: David L. Andre <DLA at SCRC-TENEX>
Subject: Compilation errors in MAKE-SYSTEM
To: GJC at MIT-MC, BUG-LISPM at SCRC-TENEX
Cc: DLA at SCRC-TENEX

    From: GJC@MIT-MC
    Date: 02/10/82 16:45:33
    I am doing a (MAKE-SYSTEM'MACSYMA':BATCH':COMPILE':RELOAD)
    in order to make sure all the QFASL's are up to date in
    the new system. (Some files were last compiled many months ago).

    Q: If one of the compilations bombs out, how do you restart
       where you left off?
This is a problem which should probably be addressed in the new error
system.  Basically, the Resume key should do something like ask you
"Recompile File MUMBLE?", and cause MAKE-SYSTEM to do the right thing.

In the meantime, what I always end up doing is stepping down in the
debugger to the QC-FILE, and doing c-m-R to throw there and re-evaluate.

Date: 14 February 1982 20:37-EST
From: Andrew L. Ressler <ALR at MIT-ML>
Subject:  defvar
To: JerryB at MIT-AI
cc: dlw at SCRC-TENEX, BUG-LISPM at MIT-AI, BUG-ZWEI at MIT-AI,
    DCB at MIT-AI

    I can hardly consider this a feature.  It may be convenient to have this
    capability somewhere but its behavior is too unexpected for it to be
    on vanilla flavored Compile Defun or Eval Defun.  I expect you will get
    bug messages about this from confused users until it is changed.
What would you suggest to replace this behavior.  I think it is consistent
and easy to use.  I admit documentation would help, but I don't think its
behavior should be changed.

Date: Sunday, 14 February 1982, 14:54-EST
From: Daniel L. Weinreb <dlw at SCRC-TENEX>
To: Gregor at MIT-AI, BUG-LISPM at MIT-AI

If a superpackage were allowed to have files of its own then it would be
possible for you to experience extremely obscure bugs depending on the
order in which various files were loaded into their packages, because
symbols might get interned on the wrong package.  At the time the
existing package system was created, a few restrictions like this were
imposed to prevent you from screwing yourself.  It is not because of a
bug in the package feature, but rather an inherent complexity in the
partially-shared-namespace paradigm.  The current belief is that the
next go-around on packages will be more lenient, at the risk of allowing
these problems.  We'll see what happens.

Date: Sunday, 14 February 1982, 12:22-EST
From: David Chapman <Zvona at MIT-AI>
To: bug-lispm at MIT-AI

---------------(Begin forwarded message)----------------
COMSAT@MIT-AI 02/14/82 03:37:08 Re: Msg of Thursday, 11 February 1982 16:34-EST
To: ZVONA at MIT-AI
FAILED: (FILE [ZWEI;BUGS BUGS]) at MIT-AI; I gave up on sending this after 201 "temporary" errors.
 Failed message follows:
-------
Date: Thursday, 11 February 1982, 16:36-EST
From: David Chapman <Zvona at MIT-AI>
To: BUG-zwei at MIT-AI

In zwei in System 78.57, ZMail 38.5, Experimental Tester 19.26, microcode 836, on Lisp Machine Twenty-two:

c-m-f does not handle #| ... |# correctly.
---------------(End of forwarded message)---------------

Date: Sunday, 14 February 1982, 12:21-EST
From: David Chapman <Zvona at MIT-AI>
To: bug-lispm at MIT-AI

Directory ZWEI; is full.

---------------(Begin forwarded message)----------------
COMSAT@MIT-AI 02/14/82 03:05:15 Re: Msg of Thursday, 11 February 1982 16:12-EST
To: ZVONA at MIT-AI
FAILED: (FILE [ZWEI;BUGS BUGS]) at MIT-AI; I gave up on sending this after 201 "temporary" errors.
 Failed message follows:
-------
Date: Thursday, 11 February 1982, 16:14-EST
From: David Chapman <Zvona at MIT-AI>
To: BUG-zwei at MIT-AI

In zwei in System 78.57, ZMail 38.5, Experimental Tester 19.26, microcode 836, on Lisp Machine Twenty-two:

c-x ^ does the wrong thing when you have more than 2 windows.
Specifically, it grows the wrong window and/or makes other
windows vanish entirely, leaving a gaping hole in the middle of
the screen.
---------------(End of forwarded message)---------------

Date: Sunday, 14 February 1982, 12:19-EST
From: David Chapman <Zvona at MIT-AI>
To: Gregor at MIT-AI, BUG-LISPM at MIT-AI
In-reply-to: The message of 14 Feb 82 02:55-EST from Gregor J. Kiczales <Gregor at MIT-AI>

In fact the discussion of the pkg-file-alist there should be
flushed.

It would be nice if MYREFNAME had the functionality that when a
package was redeclared it would still be done.  Then KMP's hack
for renaming a package would be unnecessary.  Even better, all
but the first three args to package-declare could be flushed,
along with the unneccesary, semi-documented sublanguage, and
functions package-shadow-symbols, package-extern-symbols, etc.
could be defined.

Or is all this being ignored until the Great Common Lisp
Package-System-in-the-Sky comes along.

Date: 14 February 1982 02:55-EST
From: Gregor J. Kiczales <Gregor at MIT-AI>
To: BUG-LISPM at MIT-AI

In System 79.8, ZMail 40.7, Remote-File 2.0, LMFILE-Remote 5.0,
microcode 849, on Lisp Machine Twenty:

Associated with my earlier flame about packages,
the MYREFNAME option to package declare doesn't seem to be
documented anywhere in the blue book.

Date: 14 February 1982 02:08-EST
From: Gregor J. Kiczales <Gregor at MIT-AI>
To: BUG-LISPM at MIT-AI

In System 79.8, ZMail 40.7, Remote-File 2.0, LMFILE-Remote 5.0,
microcode 849, on Lisp Machine Twenty:

In the blue book page 402 (Packages, Loading and Compilation),
section 23.10 (Subpackages):

"However, to avoid a subtle pitfall, it is necessary that the
macsyma package itself contain no files; only a set of symbols
specified at declaration time."

Does this map into
"However, to avoid a bug, it is necessary..."

Or could someone please explain why this is.

Bug-Lispm may not have been the right to send this, but then
again I am not the first person to send something to the wrong
place.
--Gregor--

Date: Saturday, 13 February 1982, 23:29-EST
From: David A. Moon <Moon at SCRC-TENEX>
To: BUG-LISPM at SCRC-TENEX

In Experimental System 202.14, Experimental ZMail 40.3,
Experimental Tape 7.0, Experimental LMFS 22.7,
Experimental Symbolics 9.0, Experimental Canon 10.0, microcode 855, on Terrier:

LOGAND with constant arguments is optimized but LOGNOT is not.

Date: Saturday, 13 February 1982  15:52-EST
From: MOON at SCRC-TENEX
To:   Ken Forbus <KDF at MIT-AI>
Cc:   BUG-LISPM at MIT-AI
Subject: file system and eftp

    Date: 13 February 1982 02:06-EST
    From: Ken Forbus <KDF at MIT-AI>
    Subject: file system
    To: BUG-LISPM at MIT-AI

    	In sending a press file to an ALTO, the following incantation
    has worked in the past from CADR-2 (but not 22 or 8, sadly.):
I know of no reason why this should work on one machine but another.
Please describe how it doesn't work.

    (chaos:eftp-binary-file-to-alto <my file> 523.)

    When someone else was logged in, this command bombed with
    File error NLI (Severity F), NOT LOGGED IN for <my file>

    and asked for a new file name.  Previously it had worked whoever
    was logged in.  Temporarily logging me in got the file sent.
Probably the person wasn't really logged in, somehow.

GJC@MIT-MC 02/13/82 12:31:23
To: (BUG LISPM) at MIT-MC
Isn't anybody going to reply to my note about MAKE-SYSTEM?
Is MAKE-SYTEM supported or not? What should I be using to
maintain macsyma, to recompile because of incompatible
changes? => I think I'm going to have to go back to using
a specialized lisp program instead of this make-system stuff.
Macsyma has a hell of a lot of files, and I hack it on
five different operating systems at the same time, so I
need all the help I can get from programs, to keep track of
what things need to be done.

The lispmachine MAKE-SYSTEM is the worst utility of its kind on any of
the systems I hack. It has infinite syntactic sugar, but
poor extensibility power because of the sorry lack of modularity
in the routines it calls to do its job. In fact, if the
routines it called had good interfaces, there wouldn't even
be a need for MAKE-SYSTEM, because one could easily write that
little utility program which DLW's fears people will write.

Lets have less *PHILSOPHY* about why "X is the right thing,"
and more *ACTION* here.

-GJC



Date: 13 February 1982 11:09-EST
From: Gerald R. Barber <JerryB at MIT-AI>
Subject: defvar
To: dlw at SCRC-TENEX
cc: DCB at MIT-AI, BUG-LISPM at MIT-AI, BUG-ZWEI at MIT-AI

    Date: Friday, 12 February 1982, 18:40-EST
    From: Daniel L. Weinreb <dlw at SCRC-TENEX>
    Re:   defvar

    DEFVAR will set even a bound variable if and only if you execute it with
    the Eval Defun or Compile Defun commands.  This is a feature, not a bug.
    The idea is that if you want to edit your program and change your mind
    about the initial value of a variable, you can do so easily.  I realize
    that there is no documentation on this editor, and I'm sorry about it.

I can hardly consider this a feature.  It may be convenient to have this
capability somewhere but its behavior is too unexpected for it to be
on vanilla flavored Compile Defun or Eval Defun.  I expect you will get
bug messages about this from confused users until it is changed.

Date: 13 February 1982 02:06-EST
From: Ken Forbus <KDF at MIT-AI>
Subject: file system
To: BUG-LISPM at MIT-AI

	In sending a press file to an ALTO, the following incantation
has worked in the past from CADR-2 (but not 22 or 8, sadly.):

(chaos:eftp-binary-file-to-alto <my file> 523.)

When someone else was logged in, this command bombed with
File error NLI (Severity F), NOT LOGGED IN for <my file>

and asked for a new file name.  Previously it had worked whoever
was logged in.  Temporarily logging me in got the file sent.
A mystery...
	Ken

Date: Friday, 12 February 1982, 19:19-EST
From: David Chapman <Zvona at MIT-AI>
To: BUG-LISPM at MIT-AI

In System 78.57, ZMail 38.5, Programmer's Apprentice 21.4, Dungeon 2.1, Detective 2.2, microcode 836, Sorcerer's Apprentice, on Lisp Machine Twenty-two:

ADVISE, a macro, has an &rest arg where it should have an
&body arg, and so does not indent right.

Date: Friday, 12 February 1982, 15:55-EST
From: Daniel L. Weinreb <dlw at SCRC-TENEX>
Subject: New arguments to old functions.
To: info-lispm at MIT-AI

The following two changes were made some time ago, but never generally
announced:

The LOAD function now takes a fifth argument named NO-MSG-P.  If the
value of this argument is T (it defaults to NIL), then LOAD will not
print out the message that it usually prints (that is, the message that
tells you that a certain file is being loaded into a certain package).

The functions SUBSET and SUBSET-NOT (also known as REM-IF-NOT and
REM-IF) now take a &rest argument, named EXTRA-LISTS, in addition to the
first two arguments.  If EXTRA-LISTS is present, each element of
EXTRA-LISTS (that is, each further argument to SUBSET) is a list of
objects to be passed to PREDICATE as PREDICATE's second argument, third
argument, and so on.  The reason for this is that PREDICATE might be a
function of many arguments; EXTRA-LISTS lets you control what values are
passed as additional arguments to PREDICATE.  However, the list returned
by SUBSET is still a "subset" of those values that were passed as the
first argument in the various calls to PREDICATE.


Date: 12 February 1982 14:51-EST
From: Daniel Brotsky <dcb at MIT-AI>
Subject: defvar
To: BUG-LISPM at MIT-AI, BUG-ZWEI at MIT-AI
cc: JERRYB at MIT-AI

In System 78.57, ZMail 38.5, Experimental Tester 20.0, Reasoning Utility Package 1.1, Experimental Plan Calculus 1.2, microcode 848, 60.45 Hz, on Lisp Machine Four:

Doing Evaluate Defun [Control-Top-E] (or Compile Defun [Control-Greek-E], same
result both times) of

(defvar foo 3)

with foo set to 0 resulted in a value of 3 and foo being set to 3.

This disagreed with doing the same thing in a breakpoint Zmacs, which returned
nil and left foo set to 0.

This error did not occur with Compile Buffer, nor when the QFASL was loaded
after a Compile File of the buffer. (The source lives in DCB;DEFTST and the
qfasl in DCB;DEFTST QFASL).


P.S. JerryB also had this problem while running System 78.57 on cadr9.

Date: Friday, 12 February 1982, 14:30-EST
From: David L. Andre <DLA at SCRC-TENEX>
Subject: System 79 release.
To: INFO-LISPM at MIT-AI
Cc: DLA at SCRC-TENEX

System 79.8 is now released to users.  It comes with ZMail 40,
LMFILE-Remote 5, Remote-File 2, and microcode 849.  Copies of system 79
bands are kept on the FileComputer (LM27), and you may get a band from
there at any time, regardless of who is logged in there.

A number of patches before 79.8 take a long time to load.  It will
probably be easier for you to get a band from the FileComputer than to
load those patches, if you already have a system 79 band.

  Table of contents:

  Things you should take note of:
 [1] New Converse subsystem for interactive messages.
 [2] Name changes to some editor commands.
 [3] PROCESS-RUN-FUNCTION and related functions have been changed slightly.
 [4] New function SI:LOAD-AND-SAVE-PATCHES.
 [5] File computers.

  Things you may safely ignore:
 [A] New user option FS:*ALWAYS-MERGE-TYPE-AND-VERSION*
 [B] A bug in %P-STORE-CONTENTS has been fixed.
 [C] Only one process at a time may run in the compiler.
 [D] New subst FILL-POINTER.
 [E] New function ERRORP.
 [F] Error handler now uses ERROR-OUTPUT for its IO.
 [G] PROCESS-RUN-FUNCTION changes.
 [H] New features in resources.
 [I] New :SELECT-METHOD function spec.
 [J] Some functions have moved to new files.
 [K] New hosts are supported as file computers.
 [L] Terminal B buries the selected window.
 [M] New PEEK S mode for information on servers.
 [N] MONITOR-VARIABLE and UNMONITOR-VARIABLE now actually work.
 [O] New functions for use in the interactive error handler (debugger).
 [P] Lambda macros are now supported.

  Things that you should take note of:

[1] This system includes the new Converse subsystem, for interactive
messages between users.  (qsend) or System-C will select the Converse
window, which should be self-documenting (type the Help key at that
window for documentation on the window, the Lisp functions, and the
user-option variables).  The qsend function with arguments works the
same as before, except that if you don't specify a host it will search
all Lisp machines on the local Chaosnet for the person to send to; in
other words, all Lisp machines whose names the qsend function would
accept.

[2] The editor command List Multiple Callers has been renamed to
Multiple List Callers for consistency (there is a whole family of these;
everything with Multiple in its name now has Multiple as the first
word.)

The editor command List Functions has been renamed to List Definitions.

[3] PROCESS-RUN-FUNCTION now does what PROCESS-RUN-TEMPORARY-FUNCTION used to
do.  This means that the writeup in the manual is now obsolete.
PROCESS-RUN-TEMPORARY-FUNCTION is still around, but is obsolete and will go
away eventually.   More about this in the second section.

[4] There is a new function SI:LOAD-AND-SAVE-PATCHES, which is the right
thing to use if you want to load patches and save out the band.  It
loads any patches, and if some were made, it prints the disk label and
queries you to find out which partition should be used for the dump.
This function may (and should, usually) be called without logging in, so
as to avoid putting the contents of your login file into the world load.
It is smart about many of the common errors people make when saving
bands, and therefore should avoid many of those problems.

A related change is that LOAD-PATCHES now returns T if any patches were
made, and NIL otherwise.

[5] Access to the file computer is now loaded by default.  This is the
reason for the LMFILE-Remote and Remote-File systems in the herald.
Interested parties are referred to LMFS;FSDOC for information on the LM
file system, and to LMFILE;DOC for information on the LMFILE file
system.

  Things that you may safely ignore:

[A] A new user option FS:*ALWAYS-MERGE-TYPE-AND-VERSION* is available
for those who prefer TENEX style pathname defaulting.  The default
algorithm for merging does NOT take the type and version from the
default pathname if a name is specified.  For example, on TWENEX, typing
"FOO" with the default "BAR.LISP" will give "FOO", NOT "FOO.LISP".
There have been some complaints from people who dislike this convention,
so with FS:*ALWAYS-MERGE-TYPE-AND-VERSION* set to T, they will get the
desired behavior.  Most people will not want to use this.

[B] A bug in %P-STORE-CONTENTS, causing it to follow invisible pointers,
has been fixed.  This is mentioned here since it is a low-level change
that might conceivably break something.  (In fact two functions in
the system depended on the buggy behavior and have been fixed; other
functions in the system did not work because of the buggy behavior.)

[C] Only one process at a time may run the compiler.  If a second
process tries to enter the compiler while it is busy, a notification
will be printed and the second process will wait with who-line state
"Compiler".  If the first process is not ever going to get out of the
compiler (perhaps it is stopped with an error), you must abort it in
order for the second process to proceed.  This was announced in system
78, but now it really works.

[D] The function FILL-POINTER, given an array, returns the fill pointer
of the array.  This is actually a SUBST, and so you can use SETF with it. 

[E] New function ERRORP.  For now equivalent to STRINGP, for the benefit
of the :NOERROR keyword to OPEN and corresponding arguments to DELETEF
and related functions.  In the new error system, these functions will
return error objects rather than strings, and ERRORP will be changed to
test whether something is an error object.  Start converting your code.

[F] The error handler now does its i/o on the stream which is the value
of ERROR-OUTPUT, or what it is indirected to if it is a syn stream.  It
used to use TERMINAL-IO.  The default value of ERROR-OUTPUT is syn to
TERMINAL-IO, hence this change only makes a difference if you change
ERROR-OUTPUT.  The error handler bugs where QUERY-IO was bound to the
wrong thing are also fixed.

This may be changed again, by introducing a new stream ERROR-IO which
the error handler uses, and making ERROR-OUTPUT be separately bindable.
That has not been done yet, and may be a bad idea.

[G] The first argument to PROCESS-RUN-FUNCTION (and the two similar
functions) may now be a list of alternating keywords and values rather
than a string.  The keywords are:

	:name - a string, default "Anonymous"
	:restart-after-reset - boolean, default nil => :reset kills process
	:restart-after-boot - boolean, default nil => warm or cold boot kills
	:warm-boot-action - same as for make-process, except :flush does
			    what :warm-boot-action nil does, and nil (default)
			    means obey the :restart-after-boot keyword
	:priority - a number, default 0 which is standard priority
	:quantum - a number of 60ths of a second, default 60.

process-run-restartable-function defaults :restart-after-boot and
:restart-after-reset to t rather than nil.

Note that the names of processes, like the names of everything else, are
strings.  It used to work, at least to some extent, to use any Lisp object
as the name of a process, and some people have been using symbols.  This
no longer works, as it happens.

A related change is that P in PEEK now shows more information about
processes.

[H] DEFRESOURCE has been changed to provide some new features and to
have better paging performance.  The :INITIALIZER is a form or function
that sees OBJECT and its parameters as arguments, when OBJECT is about
to be allocated (whether it is being reused or was just created); it may
initialize the object.  The :FREE-LIST-SIZE option allows you to set the
size of the array of objects.

[I] There is a new function spec (:SELECT-METHOD fcn-spec message).  If
fcn-spec contains a select-method, then this refers to the function to
which the select method dispatches upon receiving <message>.  It is an
error if fcn-spec doesn't contain a select method, or if the select
method doesn't support message.  This is now used by DEFSELECT rather
than making up new symbols for the functions.

This also means that if a DEFSELECT is compiled in system 79, it will
not load into an older system.

[J] Numerous system functions are in different files now, for various
reasons. This should not affect anyone.

[K] VMS and Unix file systems are now supported as file servers.

NOTE WELL: There are known problems with Unix pathnames with regard to
alphabetic case and file-types.  These reflect a low-level pathname
problem, which cannot be fixed until the next system release.  Be
forewarned. 

[L]  Terminal B buries the selected window.

[M]  In PEEK, S now displays information on the active servers.

[N] MONITOR-VARIABLE and UNMONITOR-VARIABLE actually work now (they have
been in the manual for some time).

[O] The error handler now provides functions EH-ARG, EH-LOC, EH-VAL and
EH-FUN which you can use for looking at the args, locals, values being
returned and function of the current frame.  Using SETF and LOCF, you
can also modify these things or get their locations.

EH-ARG and EH-LOC accept either the number of the arg or local (origin
0) or its name (packages do not matter), and return the value of the
arg or local.  EH-FUN takes no arg and returns the function this frame
is calling.

EH-VAL examines the values this frame is going to return, or, for a
trap on exit, the values it has already returned.  It allows only
a number to say which value, since values do not have names.
EH-VAL with no argument returns a list of all the values this frame is
returning.  EH-VAL with no argument cannot be SETF'd or LOCF'd,
however.

[P] Lambda macros are now supported.  Associated functions are
DEFFUNCTION, DEFLAMBDA-MACRO, DEFLAMBDA-MACRO-DISPLACE, and
LAMBDA-MACRO.  Interested parties are referred to LMDOC;LMACRO for more
information.

Date: Friday, 12 February 1982  13:37-EST
From: MOON at SCRC-TENEX
To:   Daniel Brotsky <dcb at MIT-AI>
Cc:   BUG-LISPM at MIT-AI
Subject: silent LOADing

If you take (ARGLIST 'LOAD) you will see an argument that suppresses
the loading message.  This must have been put in after the manual was
written since it's not in the manual.

Date: 12 February 1982 13:22-EST
From: Philip E. Agre <AGRE at MIT-AI>
To: BUG-LISPM at MIT-AI

In System 78.57, ZMail 38.5, Local-File 32.14, Experimental DAEDALUS 29.9, microcode 843, on Lisp Machine Two:

I can't convince the ':noconfirm feature of make-system to do anything.
I want to be able to do (LOAD "AGRE;ICLOAD >"), perhaps enter a couple of
Y's, and go off to dinner, but it asks for confirmations anyway and won't
read them ahead.  Here are the first few lines of said file.  The first
confirmation comes almost immediately upon beginning the first make-system
in a Daedalus band:

;;; -*- Mode:Lisp;Package:Dpl -*-

(login 'agre)
(setq *lambda-size* 2.5)
(setq *rebuild-types* nil)
(load "batali;sys >")
(load "batali;plas")
(make-system 'plas ':noconfirm ':silent)
(format t "~%Don't forget to type Y twice.")
(defsystem data-path
  (:pathname-default "ai: schip3;")
  (:package dpl)
  (:module composer ("ic;dpath"))
  (:module cells ("nregs" "nndrive"))
  (:module declarations ("nregsp"))
  (:module uargs ("nuarg"))
  (:compile-load composer)
  (:readfile cells (:fasload composer))
  (:readfile declarations (:fasload composer))
  (:compile-load uargs (:fasload composer)))
(make-system 'data-path ':noconfirm ':silent)
;;; etc.

Date: Friday, 12 February 1982, 13:11-EST
From: David Chapman <Zvona at MIT-AI>
Subject: silent LOADing
To: dcb at MIT-AI, BUG-LISPM at MIT-AI
In-reply-to: The message of 12 Feb 82 09:00-EST from Daniel Brotsky <dcb at MIT-AI>

The arglist to load is

(filename &optional pkg nonexistent-ok-flag dont-set-default-p NO-MSG-P)

Date: Friday, 12 February 1982, 12:22-EST
From: David L. Andre <DLA at SCRC-TENEX>
Subject: silent LOADing
To: dcb at MIT-AI
Cc: BUG-LISPM at MIT-AI, DLA at SCRC-TENEX

    Date: 12 February 1982 09:00-EST
    From: Daniel Brotsky <dcb at MIT-AI>
    There should be a way to tell LOAD to do its work silently; that is, without
    the "Loading ..." notification.  (I realize that READFILE and FASLOAD can be
    told this.)
That is the NO-MSG-P arg.  Are you saying that doesn't work?

Date: Friday, 12 February 1982, 12:18-EST
From: David L. Andre <DLA at SCRC-TENEX>
Subject: nulls on ITS
To: MHS at MIT-MC, BUG-LISPM at SCRC-TENEX, BUG-ITS at MIT-AI
Cc: DLA at SCRC-TENEX

    From: MHS@MIT-MC
    Date: 02/11/82 18:53:27
	    I tried to DOVER AI:LMWIND;WINDOC PRESS and the file turned out to be a bad
    press file.  Would whoever knows about such things be able to reformat it please? 
This is yet another manifestation of the fact that many if not most
files on 15 consist of nulls.  Is nobody ever going to fix this?

Date: 12 February 1982 12:05-EST
From: George J. Carrette <GJC at MIT-MC>
To: zvona at MIT-AI
cc: BUG-LISPM at MIT-AI

    Date: 11 February 1982 17:09-EST
    From: David Chapman <zvona at MIT-AI>
    Sender: JFC at MIT-AI
    To:   BUG-LISPM at MIT-AI

    Chaos:shout should be smart enough not to shout back at the
    sender.

I think that is a feature, not a bug. It lets you know exactly how
your message turned out, which is reasonable verification when doing
something like a SHOUT.


Date: 12 February 1982 09:44-EST
From: Daniel Brotsky <dcb at MIT-AI>
Subject: Readfile notification
To: BUG-LISPM at MIT-AI

In System 78.57, ZMail 38.5, Experimental Tester 19.26, Reasoning Utility Package 1.1, Experimental Plan Calculus 1.2, microcode 848, 60.45 Hz, on Lisp Machine Four:

Explitly specifying the read-package in READFILE suppresses the notification.
This seems to be due to the structure of the notification COND in
READFILE-INTERNAL (code in LISPM;QFASL 322).


Date: 12 February 1982 09:00-EST
From: Daniel Brotsky <dcb at MIT-AI>
Subject: silent LOADing
To: BUG-LISPM at MIT-AI

In System 78.57, ZMail 38.5, Experimental Tester 19.26, Reasoning Utility Package 1.1, Experimental Plan Calculus 1.2, microcode 848, 60.45 Hz, on Lisp Machine Four:

There should be a way to tell LOAD to do its work silently; that is, without
the "Loading ..." notification.  (I realize that READFILE and FASLOAD can be
told this.)
	dan

Date: 12 February 1982 03:25-EST
From: David L. Andre <DLA at MIT-AI>
Subject: Questions from SYSTEM MSG
To: BUG-LISPM at MIT-AI

Somebody who knows what DEFFUNCTION is should document it or remove it
from SYSTEM MSG.

What file servers are announced to be released?

PS.  There are various versions of SYSTEM MSG floating around in various
places.  Just modify one of them; I'll find your changes.  Sigh.

Date: Friday, 12 February 1982, 00:50-EST
From: JCMa@MIT-AI
Subject: enhanced apropos
To: zvona@MIT-AI, bug-lispm@MIT-AI

You got it. Variable and function apropos* 

MHS@MIT-MC 02/11/82 18:53:27
To: (BUG LISPM) at MIT-AI
In System 78.56, ZMail 38.5, Experimental Macsyma 22.0, microcode 841, 60Hz, on Lisp Machine Sixteen:

	I tried to DOVER AI:LMWIND;WINDOC PRESS and the file turned out to be a bad
press file.  Would whoever knows about such things be able to reformat it please? 

- MHS


Date: Thursday, 11 February 1982, 18:22-EST
From: David Chapman <Zvona at MIT-AI>
Subject: enhanced apropos
To: JCMa at MIT-AI, bug-lispm at MIT-AI
In-reply-to: The message of 11 Feb 82 16:03-EST from JCMa at MIT-AI

Another useful piece of functionality would be if you could
specify that you wanted only functions (or only bound variables).
You still get a lot of garbage as is.

Date: 11 February 1982 17:09-EST
From: David Chapman <zvona at MIT-AI>
Sender: JFC at MIT-AI
To: BUG-LISPM at MIT-AI

Chaos:shout should be smart enough not to shout back at the
sender.

Date: Thursday, 11 February 1982, 16:03-EST
From: JCMa@MIT-AI
Subject: enhanced apropos
To: bug-lispm@MIT-AI

An enhanced apropos is in ai:lmlib;apropo >

Neves@MIT-MC 02/11/82 15:56:23
To: (BUG LISPM) at MIT-AI
In Experimental System 79.5, ZMail 40.7, Experimental LMFILE Remote 4.1,
microcode 849, 79.3 FS, on Lisp Machine Twenty:

Qsend is busted in Experimental 79.

(qsend "neves@cadr-20")
Message: (terminate with End)
this is a test
>>>>TRAP 11630 (ARGTYP NUMBER PP 0 ...)
The first argument to >, NIL, was of the wrong type.
The function expected a number.
While in the function ZWEI:COMMAND-HOOK  ZWEI:EVALUATE-FORMING-UNDO-LIST  ZWEI:TURN-ON-MODE

ZWEI:COMMAND-HOOK:
Arg 0 (HOOK): ZWEI:AUTO-FILL-HOOK
Arg 1 (HOOK-SYMBOL): ZWEI:*POST-COMMAND-HOOK*



Date: 11 February 1982 15:28-EST
From: Alias for KMP <turnip at MIT-AI>
Subject: SI:SET-SYSTEM-STATUS
To: BUG-LISPM at MIT-AI

In System 78.57, ... Programmer's Apprentice 21.4, ... on Lisp Machine Twenty-two:

First and most obviously, this should not be on the SI: package if you 
want users to feel comfortable calling it -- which I think they should.

It is not documented whether this function has effects more global than
its current environment. My guess is that it modifies the patch directory
and doesn't need a patch of its own? Is that right? That would seem wrong,
since you wouldn't want it to show up as released without an appropriate 
set of minor versions loaded. eg, between two particular minor versions it
seems appropriate to have a :broken state while more recent patches might
make it :released again.

In any case, I just put (SI:SET-SYSTEM-STATUS 'PA ':RELEASED) in a patch
file (without calling it until I rebooted the machine). When I did the reboot
and typed (LOAD-PATCHES), I got a message saying the Programmer's Apprentice
was now Experimental. Why not released? (PRINT-LOADED-BAND) did indeed say
that the system was still experimental. An explicit call to 
SI:SET-SYSTEM-STATUS at toplevel at that point did not print out anything
about the system having become released, but a check with (PRINT-LOADED-BAND)
showed that it had in fact released the system.

-kmp

kmp@MIT-MC 02/11/82 12:25:54
To: (BUG LISPM) at MIT-MC
LOAD-PATCHES and MAKE-SYSTEM do not agree on what you have to say
to them to keep them from asking silly questions. It would be nice
if they did. -kmp


GJC@MIT-MC 02/10/82 16:45:33
To: (BUG LISPM) at MIT-MC
I am doing a (MAKE-SYSTEM'MACSYMA':BATCH':COMPILE':RELOAD)
in order to make sure all the QFASL's are up to date in
the new system. (Some files were last compiled many months ago).

Q: If one of the compilations bombs out, how do you restart
   where you left off?


Date: 10 February 1982 16:39-EST
From: JMTURN@MIT-AI
Sender: SHAWN at MIT-AI
To: BUG-LISPM at MIT-AI

In System 78.56, ZMail 38.5, microcode 849, on Lisp Machine Eighteen:

Failure to have a group affilitation at AI will generate an error on
login. While this is certainly not a generally legal situation anyway, it
probably shouldn't break the code...

					James

Date: 10 February 1982 1601-EST (Wednesday)
From: Guy.Steele at CMU-10A
To: bug-lispm at MIT-AI
Subject:  Query about displaced arrays

I have a question about displaced arrays (I am trying to document
them for Common LISP).  I know that ADJUST-ARRAY-SIZE will complain
if array A is displaced to array B, and you try to adjust A to be
larger than will fit in B.  My question is, what happens if you try to
adjust B?
(a) If B is made smaller, will future references to array A be checked
to make sure you don't index off the end of B?
(b) If B gets copied, will references to array A make the multiple
indirections correctly?
--Guy

Date: Wednesday, 10 February 1982, 15:35-EST
From: David A. Moon <Moon at SCRC-TENEX>
To: Jonathan Delatizky <DELATZ at MIT-AI>
Cc: BUG-LISPM at MIT-AI
In-reply-to: The message of 10 Feb 82 10:13-EST from Jonathan Delatizky <DELATZ at MIT-AI>

    Date: 10 February 1982 10:13-EST
    From: Jonathan Delatizky <DELATZ at MIT-AI>
    To: BUG-LISPM at MIT-AI

    Is there any good reason why ZWEI interprets a latest
    version incorrectly if there is a file with the same first name
    and a non-numerical second name? 
    Example: I have files called !prop 11
				 !prop table1
			    and  !prop table2
    When I ask for !prop >, I get !prop table2,
    and if I want to write !prop >, it generates !prop table3 instead
    of !prop 12. Is there a default that can be set to avoid this?

This is nothing to do with Zwei; it is a misfeature of the ITS file system.
If you had named your files prop 5.4, prop 5.5, etc., you might have actually
found this feature of > to be doing something useful for you, which may be
why it is there.

Date: Wednesday, 10 February 1982, 13:12-EST
From: Bernard S Greenberg <BSG at SCRC-TENEX>
To: BUG-LISPM at SCRC-TENEX

In Experimental System 202.16, Experimental ZMail 40.6,
Experimental Tape 7.0, Experimental LMFS 22.8,
Experimental Symbolics 9.0, Experimental Canon 10.0, microcode 855, on Retriever:

Does anyone consider it a feature that M-X Occur  does not show ALL lines in
the buffer containing the string, i.e., not just ones past the current point?

Date: 10 February 1982 10:13-EST
From: Jonathan Delatizky <DELATZ at MIT-AI>
To: BUG-LISPM at MIT-AI

Is there any good reason why ZWEI interprets a latest
version incorrectly if there is a file with the same first name
and a non-numerical second name? 
Example: I have files called !prop 11
			     !prop table1
			and  !prop table2
When I ask for !prop >, I get !prop table2,
and if I want to write !prop >, it generates !prop table3 instead
of !prop 12. Is there a default that can be set to avoid this?

Thanks for any info...Jon

Date: Wednesday, 10 February 1982, 09:45-EST
From: James E. Kulp <JEK at SCRC-TENEX>
Subject: Unix pathname types (.init)
To: neves at MIT-AI
Cc: BUG-LISPM at SCRC-TENEX

The types of unix pathnames are mapped (in both directions) to one or
two character extensions to conserve the unfortunately small 14
characters of name length.  Until some further fixes are made to the way
programs recognize "well known types" in the lisp machine software, the
full, non-mapped types (.init, .qfasl etc.) will not parse.  If they did,
a ".lisp" file would be parsed like ".l", but would come out ".l". The current
mapping for UNIX is:
	  ("LISP" . "l")
	  ("TEXT" . "tx")
	  ("MIDAS" . "md")
	  ("QFASL" . "qf")
	  ("PRESS" . "pr")
	  ("(PDIR)" . "pd")
	  ("QWABL" . "qw")
	  ("PATCH-DIRECTORY" . "pd")
	  ("BABYL" . "bb")
	  ("MAIL" . "ma")
	  ("INIT" . "in")))
E.g. .lisp => .l (which is what Franz likes too).; .init => .in
VMS also uses mapped types, but since the non-mapped types won't fit
(VMS is limited to 3 character types), there is no similar problem.

Date: Wednesday, 10 February 1982, 08:02-EST
From: David Chapman <Zvona at MIT-AI>
Subject: sublis
To: Moon at SCRC-TENEX, dcb at MIT-AI
Cc: BUG-LISPM at MIT-AI
In-reply-to: The message of 9 Feb 82 22:01-EST from David A. Moon <Moon at SCRC-TENEX>

I strongly think that SUBLIS should be changed.  It is very
confusing that it is not parallel to SUBST.  The ``right''
behavior is upward-compatible, more general, and more useful.  I
have seen SUBLIS redefined in at least two peoples UTIL files
besides mine.

Date: Tuesday, 9 February 1982, 22:01-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: sublis
To: Daniel Brotsky <dcb at MIT-AI>
Cc: BUG-LISPM at MIT-AI
In-reply-to: The message of 9 Feb 82 14:51-EST from Daniel Brotsky <dcb at MIT-AI>

    Date: 9 February 1982 14:51-EST
    From: Daniel Brotsky <dcb at MIT-AI>
    Subject: sublis documentation
    To: BUG-LISPM at MIT-AI

    In System 78.57, ZMail 38.5, Experimental Tester 19.20, Reasoning Utility Package 1.1, Experimental Plan Calculus 1.1, microcode 848, 60.45 Hz, on Lisp Machine Four:

    The documentation of SUBLIS (on p.63 of the blue manual) is inconsistent with
    itself.  The text says that SUBLIS makes substitutions for symbols in a tree,
    which is correct.  The "could have been defined by" code will substitute for
    any object of which ATOM is true, which is not what SUBLIS does.

    I suggest that the coded version is, in fact, more useful than the actual
    version.  Perhaps it should be made available.

SUBLIS probably works only for symbols because that is what it does in
Maclisp.  At this point it is probably a better idea to see what the
Common Lisp definition for SUBLIS is rather than to go off half-cocked
and change it and then maybe have to change it again in a few months.
If you feel strongly that it should be changed, say so and the Common
Lisp people will consider the ramifications of changing it.

Date:  9 Feb 1982 1613-PST
From: GOLDMAN at USC-ISIF
Subject: editor commands ignoring mode line?
To:   BUG-LISPM at MIT-AI
cc:   GOLDMAN at ISIF

It looks like the function LOAD is sensitive to any package specification
in a file's mode line, but that editor commands which
require reading of expressions from a buffer into lisp
allow the read to take place in whatever pkg is current, regardless of
wheTher one is explicitly specified in the mode line in the buffer.
Can this really be??
-------

Date: Tuesday, 9 February 1982, 18:00-EST
From: David L. Andre <DLA at SCRC-TENEX>
Subject: Notifications are forever
To: BUG-LISPM at SCRC-TENEX
Cc: DLA at SCRC-TENEX

In Experimental System 202.16, Experimental ZMail 40.4,
Experimental Tape 7.0, Experimental LMFS 22.8,
Experimental Symbolics 9.0, Experimental Canon 10.0, microcode 855, on Spaniel:

If you get a number of notifications in a window which has pop-up
notification, and type a space to get rid of it, n-1 notification
processes hang around waiting for a space.

Date: 9 February 1982 15:51-EST
From: David M. Neves <neves at MIT-AI>
To: BUG-LISPM at MIT-AI

In Experimental System 79.3, Experimental ZMail 40.2,
Experimental LMFILE Remote 4.1, microcode 849, on Lisp Machine Twenty:

I was trying to read in a file from the VAX (/usr/neves/lispm.init) and
got the following error:

Error:  Illegal UNIX pathname type: ".init", use ".in" instead. In (method
FS:unix-pathname-mixin convert-type-for-lispm).  The error also occurs when
I do a dired on that directory.

p.s.  What is the init file name on UNIX?  Is it lispm.init? I don't seem to get
any action by using that name.

Date: Tuesday, 9 February 1982, 15:08-EST
From: David L. Andre <DLA at SCRC-TENEX>
Subject: AIFS:
To: AGRE at MIT-AI
Cc: BUG-LISPM at MIT-AI

Well, since nobody else has responded to this proposal, I will.  The
right solution is to fix the hardware lossage.  All other proposals I've
heard seem to be kludges.  If sources want to be maintained between two
different sites, then periodically some program should be run to update
the sources at both sites.  This is how MIT-Symbolics and MIT-LMI works.
Although it may be trivial to write a kludgy AIFS: host, I don't think
it's right, and don't intend to do anything in that direction.

Date: Tuesday, 9 February 1982, 15:03-EST
From: David L. Andre <DLA at SCRC-TENEX>
Subject: System lossage
To: shipmn at MIT-AI
Cc: BUG-LMFS at MIT-AI, BUG-spire at MIT-ML, BUG-LISPM at SCRC-TENEX

    Date: 9 February 1982 09:15-EST
    From: David W. Shipman <shipmn at MIT-AI>

    When I did (MAKE-SYSTEM "LOCAL-FILE") I got an error message complaining of
    too many args to SI:DEFSELECT-INTERNAL while loading the file LMFS; FSDEFS QFASL.
System 33 of Local-File doesn't work yet, and had you managed to load it
you would have been notified that the system was broken.  Sorry about
the confusion; I evidently didn't notify INFO-LMFS about System 32.
In the meantime, it's best to live with 31 being obsolete, and when
system 79 is released shortly, use 33.

    A general question: How is it possible to load the latest version of the LMFS
    without getting an experimental one?
You can't.  There should be a way; it could work more easily on file
systems which have version numbers for QFASL files, but I'm not sure how
to do it.  It is a loss that I can't recompile a system without
subjecting anyone who wants to do a MAKE-SYSTEM to the new system.  Any
ideas?

Date: 9 February 1982 14:51-EST
From: Daniel Brotsky <dcb at MIT-AI>
Subject: sublis documentation
To: BUG-LISPM at MIT-AI

In System 78.57, ZMail 38.5, Experimental Tester 19.20, Reasoning Utility Package 1.1, Experimental Plan Calculus 1.1, microcode 848, 60.45 Hz, on Lisp Machine Four:

The documentation of SUBLIS (on p.63 of the blue manual) is inconsistent with
itself.  The text says that SUBLIS makes substitutions for symbols in a tree,
which is correct.  The "could have been defined by" code will substitute for
any object of which ATOM is true, which is not what SUBLIS does.

I suggest that the coded version is, in fact, more useful than the actual
version.  Perhaps it should be made available.
	dan

Date: Tuesday, 9 February 1982, 14:09-EST
From: Mike McMahon <MMcM at SCRC-TENEX>
To: BUG-LISPM at SCRC-TENEX

In Experimental System 202.15, Experimental ZMail 40.3,
Experimental Tape 7.0, Experimental LMFS 22.8,
Experimental Symbolics 9.0, Experimental Canon 10.0, microcode 854, on Basset:

Time parser does not handle the following lunacy from unix "Wed Nov 11 16:51:15 1981".

Date: 9 February 1982 07:06-EST
From: Dexter Pratt <DEXTER at MIT-AI>
To: BUG-LISPM at MIT-AI

In Experimental System 79.3, Experimental ZMail 40.2,
Experimental LMFILE Remote 4.0, microcode 849, on Lisp Machine Seven:

CC-PARITY-SWEEP was getting an error that CC-READ-STAT was unbound.  CC-READ-STAT
turned out to be a function, so I put another layer of parens around it and recompiled.
It seems to work, but someone should check me on this.  Furthermore, I don't know how to
make patches, so I just wrote out the file (lcadr;diags 123)

-dexter

Date: 9 February 1982 01:16-EST
From: Philip E. Agre <AGRE at MIT-AI>
To: BUG-LISPM at MIT-AI

In System 78.57, ZMail 38.5, Local-File 32.14, Experimental DAEDALUS 29.9, microcode 843, on Lisp Machine Two:

Here is a suggestion for whoever does file pathnames.  Suppose one could
define a device oneself.  Then one could write a device called, say,
AIFS:, which is like AI: and FS: except that it keeps copies on both
directories.  If I write out AIFS:AGRE;FNAME >, it would be like writing
to both AI:AGRE;FNAME > and FS:AGRE;FNAME >.  If I read in AI:AGRE;FNAME
>, it would check both AI: and FS:, give a warning if one of them is
down or if the versions of the file on the two devices don't seem
compatible (in which case it could offer to SRCCOM or write out the
newer version to the other device or something), and read whichever
version would be faster.  Various other interesting possibilities come
to mind.  This facility would allow one to store one's files in
duplicate when systems are being flaky.  Presently one runs into all
sorts of annoyances when trying to do this oneself, such as having to
remember or check manually while file is more up to date, having to
duplicate file operations, and always getting the device wrong when
using C-X C-F to move between files in the editor.  I don't think it
would be abused.

Perhaps something like this could even be implemented on ITS.

GJC@MIT-MC 02/09/82 00:32:38 Re: The CGOL parser.
To: INFO-LISPM at MIT-MC
There are files on "AI:LMLIB;" "CGOL QFASL" and "CGOL INFO"
It defines a readmacro # I found useful in code with math
formuli copied from papers and/or fortran programs, e.g.

(DEFUN F (X Y Z) # 3*X**2+Y*X-Y**Z )

-GJC

p.s. The main feature of the CGOL parser is its ease of programability.



Date: Monday, 8 February 1982, 19:20-EST
From: David L. Andre <DLA at SCRC-TENEX>
Subject: :FLAVOR :DIRECTORY
To: JEK at SCRC-TENEX
Cc: DLA at SCRC-TENEX, BUG-LMFS at SCRC-TENEX, BUG-LISPM at SCRC-TENEX,
    DLA at SCRC-TENEX

    Date: Monday, 8 February 1982, 17:39-EST
    From: James E. Kulp <JEK at SCRC-TENEX>
	Date: Saturday, 6 February 1982, 20:09-EST
	From: David L. Andre <DLA at SCRC-TENEX>
	I don't like the term "FLAVOR" as an open option, because it is easily
	confused with flavors, but I think it is conceptually the right thing.
	Are there any better ideas?  
    I agree. FILETYPE?
No.  FILETYPE is "LISP" in ">DLA>FOO.LISP".

Date: Monday, 8 February 1982, 17:39-EST
From: James E. Kulp <JEK at SCRC-TENEX>
Subject: :FLAVOR :DIRECTORY
To: DLA at SCRC-TENEX, BUG-LMFS at SCRC-TENEX, BUG-LISPM at SCRC-TENEX

    Date: Saturday, 6 February 1982, 20:09-EST
    From: David L. Andre <DLA at SCRC-TENEX>
    Subject: :FLAVOR :DIRECTORY
    To: BUG-LMFS at SCRC-TENEX, BUG-LISPM at SCRC-TENEX

    I don't like the term "FLAVOR" as an open option, because it is easily
    confused with flavors, but I think it is conceptually the right thing.
    Are there any better ideas?  
I agree. FILETYPE?

GJC@MIT-MC 02/08/82 18:37:02
To: (BUG LISPM) at MIT-AI
In System 78.56, ZMail 38.5, Experimental Macsyma 22.0, microcode 841, 60Hz, on Lisp Machine Sixteen:

The function READ-FILE-PROPERTY-LIST-STRING calls READ-FROM-STRING without
binding READTABLE to a known standard readtable (e.g. SI:INITIAL-READTABLE).
This causes problems when reading code with highly non-standard syntax.

A related error also happened the first time I tried to send the bug note,
I had to SETQ the readtable back by hand before the message could be sent.



Date: 8 February 1982 16:35-EST
From: Gregor J. Kiczales <Gregor at MIT-AI>
To: BUG-LISPM at MIT-AI

In Experimental System 79.0, Experimental ZMail 40.0,
Experimental LMFILE Remote 4.0, microcode 849, on Lisp Machine Twenty:

PROBEF signals an error if it can't connect to the host the file
is on. Since PROBEF returns nil if it can't find a file, perhaps
it should return nil if it can't connect to the host. Maybe this
should be yet another optional no-error-p argument?

Date: Monday, 8 February 1982  11:28-EST
From: DLW at SCRC-TENEX
To:   Tom Knight <TK at SCRC-TENEX>
Cc:   bug-lispm at SCRC-TENEX


Date: 8 February 1982 02:19-EST
From: Fileserver <FILES at MIT-AI>
To: BUG-LISPM at MIT-AI

In System 78.56, ZMail 38.5, Local-File 32.13, Experimental MagTape 1.7, microcode 843, LFS, on Lisp Machine Filecomputer:

I got a warning "CHAOS-PATHNAME-PRINTING-STREAM (a flavor) being redefined
by file SYS: FILE2; SERVER.  It was previously defined by AI: LMFILE; SERVER."
It ought to see that those are the same file and not print a warning.

Date: 8 February 1982 02:02-EST
From: Fileserver <FILES at MIT-AI>
To: BUG-LISPM at MIT-AI

In System 78.56, ZMail 38.5, Local-File 32.13, Experimental MagTape 1.7, microcode 843, LFS, on Lisp Machine Filecomputer:

Sending ':back-translated-pathname to a SYS: pathname with argument
(parse-pathname "AI: LMFS; COPY >") returns
a pathname for SYS: FILE; COPY  >.  Shouldn't it be COPY LISP >?
I am trying to MEMQ the result down (SYSTEM-SOURCE-FILES some-system)
and I had to get around this by smashing the type to "LISP",
which seems unclean.  I have no freedom to use anything other than
"AI: LMFS; COPY >" because I am taking the current zwei buffer's pathname
and that is what it will be if the user reads the file from AI:.

Date: Sunday, 7 February 1982, 20:27-EST
From: David Chapman <Zvona at MIT-AI>
To: BUG-LISPM at MIT-AI

In System 78.56, ZMail 38.5, microcode 849, on Lisp Machine Eighteen:

The inspector loses on very long strings (I was inspecting pages
of text stored as strings).  It apparently just calls PRINT on
them.  It would be nice if it only printed a screenful and you
could scroll through it.

Date: Saturday, 6 February 1982, 22:52-EST
From: Tom Knight <TK at SCRC-TENEX>
To: bug-lispm at SCRC-TENEX

Is there a good reason why we decided to make "terminal" "system" "network" and "macro"
be keystrokes rather than shift-keys?  Mode keys seem more in keeping with the
"modeless" philosophy of Tesler, and it sounds like there is no hardware
reason for not making them so.

Date: Saturday, 6 February 1982  21:47-EST
From: MOON at SCRC-TENEX
To:   Daniel L. Weinreb <dlw at SCRC-TENEX>
Cc:   BUG-LISPM at SCRC-TENEX

    Date: Friday, 5 February 1982, 19:16-EST
    From: Daniel L. Weinreb <dlw at SCRC-TENEX>

    How do I ask the system for all of the legal init-options to a given
    flavor?  (Suppose I want to write some documentation and list all of
    them, explaining what they are.)
There isn't a function to do this now (only to ask whether a specified
init option is legal).  You could mapatoms over the keyword package
calling flavor-allows-init-keyword-p, but probably someone should put
in a function to do it directly.

Date: 6 February 1982 21:00-EST
From: Richard M. Stallman <RMS at MIT-AI>
To: BUG-LISPM at MIT-AI

I didn't "vandalize" that wrapper; I merely put it in a separate
mixin so people could choose whether to use it.
If people are going to ask me not to do put in things which
others can't avoid using, people ought to do likewise themselves.

I think it would not have caught this problem, not unless you
changed it.  Remember, :valid-mumble-p is used by :new-default-pathname
to check for a valid argument to :new-pathname, and ("anydir") IS
a valid :name argument to :new-pathname on an its pathname.
Assuming that :valid-name-p works properly in that use, it will
have to return T for ("anydir"), so the wrapper would not get an error.
In general it does not work to have an :init wrapper that validates
with the same validation functions used by :new-default-pathname,
which is another good reason for making that wrapper optional.

Date: 6 February 1982 20:56-EST
From: Edward Barton <EB at MIT-AI>
To: BUG-LISPM at MIT-AI

In System 78.51, ZMail 38.5, Local-File 32.12, Experimental DAEDALUS 29.5, microcode 843, on Lisp Machine Two:

If the file computer is not responding and you try to write out a file you have
been editing on FC:, before it bombs out trying to do the write it warns you that
the file has been changed on disk since you last read or wrote it.  Why doesn't
it get an error instead of using some random value for whatever it's trying to
look at?

Date: 6 February 1982 20:53-EST
From: Edward Barton <EB at MIT-AI>
To: BUG-LISPM at MIT-AI

In System 78.51, ZMail 38.5, Local-File 32.12, Experimental DAEDALUS 29.5, microcode 843, on Lisp Machine Two:

The file computer was not responding when I tried to write out a new
version of the file I had been editing, so I typed in a new pathname (on
ML:) for the file system to use instead.  When the write was completed
the editor mode line was "updated" to indicate the old pathname, on FC:,
but a version number of 1 (presumably obtained from the file on ML:).

Date: 6 February 1982 20:34-EST
From: Richard M. Stallman <RMS at MIT-AI>
To: BUG-LISPM at MIT-AI

THe reason I chose the name :FLAVOR for LMFILE is that it really
does specify the flavor to use for the node.  The keywords are
abbreviations for flavor names which are also allowed; but the
keywords are more likely to be system independent.
This is just an explanation.  I wouldn't mind changing the name.

Date: Saturday, 6 February 1982, 20:09-EST
From: David L. Andre <DLA at SCRC-TENEX>
Subject: :FLAVOR :DIRECTORY
To: BUG-LMFS at SCRC-TENEX, BUG-LISPM at SCRC-TENEX

I don't like the term "FLAVOR" as an open option, because it is easily
confused with flavors, but I think it is conceptually the right thing.
Are there any better ideas?  

Date: Saturday, 6 February 1982, 20:05-EST
From: Robert W. Kerns <RWK at SCRC-TENEX>
To: Richard M. Stallman <rms at MIT-AI>
Cc: BUG-LISPM at MIT-AI
In-reply-to: The message of 6 Feb 82 06:06-EST from Richard M. Stallman <rms at MIT-AI>


    Date: 6 February 1982 06:06-EST
    From: Richard M. Stallman <rms at MIT-AI>
    Sender: FILES at MIT-AI
    To: BUG-LISPM at MIT-AI

    In System 78.56, ZMail 38.5, Local-File 32.13, Experimental MagTape 1.7, microcode 843, LFS, on Lisp Machine Filecomputer:

    Making an ITS pathname with MAKE-PATHNAME specifying :NAME as ("ANYDIR")
    actually puts the list into the pathname!  It behaves just like a pathname
    whose name is "ANYDIR" but is not EQ to it.  Although this is is
    "legal behavior", it would be nice if it canonicalized the list to
    a string when created, in its :PARSE-NAME-SPEC.

    Maybe this is fixed now, but it would be good to check.
This is the kind of bug the wrapper I put in that you vandalized is supposed
to catch.

Date: 6 February 1982 17:37-EST
From: "Kenneth W. Haase,Jr." <kwh at MIT-AI>
To: BUG-LISPM at MIT-AI

In System 78.52, ZMail 38.5, microcode 849, 60Hz, on Lisp Machine One:

Load and Fasload do not seem to know how to look for QFASL files on
RMS's filesystem like they do on AI.  For instance, 

	(fasload "fc: kwh\walt; matrix")

returns the error that "fc: kwh\walt; matrix" is not a qfasl file, while the
file "fc: kwh\walt; matrix|qfasl" does exist.  On ITS, fasload is smart enough
to look for the QFASL, on the file system this does not seem to be the case.


Date: 6 February 1982 14:51-EST
From: Kent M. Pitman <KMP at MIT-MC>
Subject: LSP vs LISP
To: KWC at MIT-MC
cc: BUG-LISPM at MIT-MC, BUG-LISP at MIT-MC

It is easy to make Emacs understand that .LISP files default the
major mode to LISP. Creating a macro called & LISP Mode which just
re-calls LISP Mode will do it. This can be done in an init file
in a cheatish way by:

 m.mLISP Modefo..QMM & LISP Modem.vMM & LISP Mode

Also, I have an Emacs library that will generate tags files for most
major languages, so making Emacs tags files shouldn't be a
consideration. The library is called TAGGEN and exists at least
on the ITS's if it is not distributed outward by now...

So the Emacs end of your recent note about LSP vs LISP is probably
not a real problem.

-kmp


Date:  6 Feb 1982 1359-EST
From: Kenneth W. Church <LFG.KWC at MIT-SPEECH>
Subject: lisp vs. lsp
To: bug-lisp at MIT-ML, bug-lispm at MIT-ML, kwc at MIT-ML

this is a real problem that needs to be resolved once and for all.
all lispm software assumes that lisp files are of type "lisp" and
all maclisp code (except lsb) assume "lsp".  I would like my code
to run both places.  Major screws:

tags will not run on "lisp" files
fs:copy-file will give "lisp" as the type of a file that it thinks is lisp code
complr and (qc-file ...) don't agree
symbolics and mit 20's don:t agree

can we come to some compromise and stick with it.

- ken
-------


Date: 6 February 1982 06:06-EST
From: Richard M. Stallman <rms at MIT-AI>
Sender: FILES at MIT-AI
To: BUG-LISPM at MIT-AI

In System 78.56, ZMail 38.5, Local-File 32.13, Experimental MagTape 1.7, microcode 843, LFS, on Lisp Machine Filecomputer:

Making an ITS pathname with MAKE-PATHNAME specifying :NAME as ("ANYDIR")
actually puts the list into the pathname!  It behaves just like a pathname
whose name is "ANYDIR" but is not EQ to it.  Although this is is
"legal behavior", it would be nice if it canonicalized the list to
a string when created, in its :PARSE-NAME-SPEC.

Maybe this is fixed now, but it would be good to check.

DCP@MIT-MC 02/05/82 14:05:38 Re:  Lack of file server auto kill on large idle time
To: (BUG LISPM) at MIT-MC
Maybe there are a lot of LISPM file servers on MC because AI is
down, but I've already gunned serveral servers twice today
because the connection tabel was totally bloated.  I'll probably
have to do it again (if I'm the one to notice).  Would it be
easier to fix the LM side of the connection to die after several
idle minutes, or is it easier to change the ITS file server.  I
know the code is conditionalized for twenex, but it isn't a
problem over there yet, so it is probably reasonable to special
case the ITS server to die after, say 15 minutes of idle time.


NGL@MIT-ML 02/06/82 03:29:27
To: (BUG LISPM) at MIT-AI
In System 78.39, ZMail 38.5, microcode 848, on Unknown: (machine next to CADR-7)

I loaded MC:RG;LMGREY DIAGSX into ZWEI, compiled the buffer,
and now M-. GREY-LOAD-SRAM says there is 1 more definition as well.
If I do M-9 M-., it finds the same definition.
M-9 M-. again, and it says "resectionizing the buffer in search of GREY-LOAD-SRAM"
and then goes to the same place and says "1 more definition as well" again.
Further M-9 M-.'s go thru the same cycle.

I have some other files in the editor but no other has a definition of
GREY-LOAD-SRAM in it.


Date: Friday, 5 February 1982, 19:16-EST
From: Daniel L. Weinreb <dlw at SCRC-TENEX>
To: BUG-LISPM at SCRC-TENEX

In Experimental System 202.7, Experimental ZMail 40.2,
Experimental Tape 7.0, Experimental LMFS 22.1,
Experimental Symbolics 9.0, Experimental Canon 10.0, microcode 854, on Beagle:

How do I ask the system for all of the legal init-options to a given
flavor?  (Suppose I want to write some documentation and list all of
them, explaining what they are.)

Date: Friday, 5 February 1982, 19:13-EST
From: Daniel L. Weinreb <dlw at SCRC-TENEX>
To: Gregor at MIT-AI, BUG-LISPM at MIT-AI

The reason that we don't have such an interrupt character facility is
that if you type-ahead a command that, when read, is going to change the
selected window, and then you type an interrupt character, the current
value of selected-window may not be the same as the one you think it is,
because your typed-ahead command may not have been executed yet.
Therefore, something that is interpreted as an interrupt character in
one window might get interpreted that way even if the user tried to type
it at a different window.  So the definition is not really per-io-buffer
in the way you would want it to be.

RICH@MIT-MC 02/04/82 14:02:01 Re: Aid to reporting bugs
To: (BUG LISPM) at MIT-AI
CC: (BUG KBE) at MIT-MC
In KBE in System 78.5, ZMail 38.0, Experimental Programmer's Apprentice (Aux) 10.0, Experimental Programmer's Apprentice 10.0, Experimental Dungeon 1.0, microcode 836, PA Demo with PL//1, on Lisp Machine Twenty-two:

  It is very nice that the (BUG) function and M-X Bug commmand insert
the heading material above to save the user typing in the identification
of the system in which the bug occurred.  

>>>>>  Along the same lines it would be very useful for bug messages
originating in response to system error breaks to have the text
of the error message and backtrace information also
automatically inserted at the beginning of the error message
buffer.   <<<<<<<

   I think this feature would be a boon to system maintainers
who are always complaining about the poor quality of bug
messages.  I am sure some hack could be implemented to tell if
(bug) was called inside an error handler or to have some Zwei
command insert a description of the last error encountered, or
something.

		-Chuck.


EB@MIT-ML 02/04/82 18:53:51
To: (BUG LISPM) at MIT-AI
In System 78.52, ZMail 38.5, microcode 849, 60Hz, on Lisp Machine One:

You can't type in a lambda-expression as the function when applying a function
to files using the "A" command of DIRED.


Date: Wednesday, 3 February 1982, 22:12-EST
From: David L. Andre <DLA at SCRC-TENEX>
Subject: FS version 31.
To: dph at MIT-AI
Cc: BUG-LISPM at SCRC-TENEX

    Date: 2 February 1982 20:55-EST
    From: Daniel Huttenlocher <dph at MIT-AI>
    To: DLA at MIT-AI
    cc: BUG-LISPM at MIT-AI

    A (load-patches ':noselective) worked on this system last week, but now
    it loses with an FNF error for the file lmfs;pat31 (pdir).
Why don't you losers at EE get up to date software?  Version 31 has been
obsolete for so long, I deleted its patch directory.

In the meantime, I fixed LOAD-PATCHES in the source so that, if it can't
find the patch directory, it assumes obsolescence rather than bombing.

Date: 2 February 1982 20:55-EST
From: Daniel Huttenlocher <dph at MIT-AI>
To: DLA at MIT-AI
cc: BUG-LISPM at MIT-AI

In System 78.56, ZMail 38.5, Local-File 31.10, Experimental Spire 1.1,
microcode 836, 60Hz, on Lisp Machine Twelve:

A (load-patches ':noselective) worked on this system last week, but now
it loses with an FNF error for the file lmfs;pat31 (pdir).

Date: Tuesday, 2 February 1982, 17:34-EST
From: Mike McMahon <MMcM at SCRC-TENEX>
To: RMS at MIT-AI, DeKleer at PARC-MAXC
Cc: BUG-LISPM at MIT-AI

    Date: 2 February 1982 16:04-EST
    From: Richard M. Stallman <RMS at MIT-AI>
    Does it "work" to make a subsystem of SYSTEM patchable?
    "Working" would mean that make-system of SYSTEM would load
    it too, but LOAD-PATCHES would know about them both.
If i recall correctly, ETHER is a subsystem of SYSTEM at XEROX and
itself patchable and all the bugs have been gotten out.  Right?

Date: Tuesday, 2 February 1982, 16:30-EST
From: Mike McMahon <MMcM at SCRC-TENEX>
To: Zvona at MIT-AI
Cc: BUG-LISPM at MIT-AI

    Date: Monday, 1 February 1982, 23:38-EST
    From: David Chapman <Zvona at MIT-AI>
    In System 78.56, ZMail 38.5, Experimental Tester 19.14, Experimental Programmer's Apprentice (Aux) 15.0, Experimental Programmer's Apprentice 16.6, microcode 849, on Lisp Machine Eighteen:
    It's sort of a misfeature that ``System to patch:'' in m-X Add
    Patch completes over all systems rather than just patchable ones. 
There is no evidence of this claim here.  E.g. C-? lists only patchable systems and
i cannot type zwei.

Date: Tuesday, 2 February 1982, 16:22-EST
From: Mike McMahon <MMcM at SCRC-TENEX>
Subject: Make-system bug
To: Moon at SCRC-TENEX
Cc: BUG-LISPM at SCRC-TENEX

    Date: Tuesday, 2 February 1982, 13:32-EST
    From: Mike McMahon <MMcM at SCRC-TENEX>
	Date: Friday, 29 January 1982, 22:55-EST
	From: David A. Moon <Moon at SCRC-TENEX>
	In System 78.67, ZMail 38.8, Symbolics 8.15, Tape 6.5, LMFS 21.42, Canon
	9.13, microcode 841, on Terrier:
	If you do:

		(defsystem foobar
		  (:pathname-default "SCRC:<MOON>")
		  (:module frob ("NO-SUCH-FILE"))
		  (:readfile frob))
		(make-system 'foobar)

	it comes back with no error, failing to detect that the filename was misspelled.

    In general, it has determined that the file on disk matches the file
    loaded into the machine.  I suppose that there needs to be a special
    case error in file-newer-than-loaded-p.

    Date: Tuesday, 2 February 1982, 15:14-EST
    From: Mike McMahon <MMcM at SCRC-TENEX>
	Date: Monday, 1 February 1982, 17:20-EST
	From: David A. Moon <Moon at SCRC-TENEX>
	SI:SET-SYSTEM-SOURCE-FILE should add the system to Select System as Tag Table's
	completion list.  I assume that the system definition file would then get loaded
	transparently when it called SI:SYSTEM-SOURCE-FILES.
    SI:SET-SYSTEM-SOURCE-FILE should add the symbol to *SYSTEMS-LIST*.
    FIND-SYSTEM-NAMED would recognize that case and load the system declaration and then
    call itself again.
    This would also fix the package problem with SI:SET-SYSTEM-SOURCE-FILE.
Fixed in the source.

Date: 2 February 1982 16:04-EST
From: Richard M. Stallman <RMS at MIT-AI>
To: BUG-LISPM at MIT-AI

Does it "work" to make a subsystem of SYSTEM patchable?
"Working" would mean that make-system of SYSTEM would load
it too, but LOAD-PATCHES would know about them both.

Date: 2 February 1982 14:44-EST
From: Gregor J. Kiczales <Gregor at MIT-AI>
To: BUG-LISPM at MIT-AI

In Experimental System 79.0, Experimental ZMail 40.0,
Experimental LMFILE Remote 4.0, microcode 849, on Lisp Machine Twenty:

There is no easy way for a programmer to define an asynchronous
(interrupt) sort of key. (This is a known problem.) A general hacked up
approach to this is to do something like modify
TV:KBD-ASYNCHRONOUS-INTERCEPT-CHARACTER, but the problem with doing that
is that it defines a new interrupt character on a system wide basis,
whereas what you usually want to do is define new interrupt characters
on a per process basis. I propose something like the following which
defines new interrupt characters on a per io-buffer basis.  This scheme
also has some similarity with the way *system-keys* and *escape-keys*
works (some, could be changed to have more).  A problem with this scheme
may be speed, there may also be others, this is only a suggestion.

(defun add-asynchronous-key (io-buffer key handler &aux plist)
  (and (typep io-buffer 'io-buffer)
       (fixnump key)				;try to prevent later errors
       (fsymeval handler)			;in the kbd process
       (setq plist (locf (io-buffer-plist io-buffer)))
       (putprop plist
		(cons (list key handler) (get plist ':asynchronous-keys))
		':asynchronous-keys)))

(defun remove-asynchronous-key (io-buffer key handler &aux plist)
  (setq plist (locf (io-buffer-plist io-buffer)))
  (putprop plist
	   (delete (list key handler) (get plist ':asynchronous-keys))
	   ':asynchronous-keys))

(DEFUN KBD-PROCESS-MAIN-LOOP-INTERNAL (&AUX BUFFER PLIST RAW-P async-handlers)
  (WITHOUT-INTERRUPTS
    (COND ((SETQ BUFFER (KBD-GET-IO-BUFFER))
	   (SETQ PLIST (LOCF (IO-BUFFER-PLIST BUFFER)))
	   (SETQ RAW-P (GET PLIST ':RAW))
	   (setq async-handlers (get plist ':asynchronous-keys))))
    (DO ((CHAR)
	 (SOFT-CHAR)
	 (async-handler))
	((OR KBD-ESC-HAPPENED
	     (NOT (KBD-HARDWARE-CHAR-AVAILABLE))))
      (SETQ CHAR (KBD-GET-HARDWARE-CHAR))
      (COND (RAW-P
	     (OR (IO-BUFFER-FULL-P BUFFER)
		 (IO-BUFFER-PUT BUFFER CHAR)))
	    (T
	     (SETQ SOFT-CHAR (KBD-CONVERT-TO-SOFTWARE-CHAR CHAR))
	     (COND ((NULL SOFT-CHAR))		;Unreal char
		   (T (SETQ CHAR (LDB %%KBD-CHAR SOFT-CHAR)	;No bucky bits
			    KBD-LAST-ACTIVITY-TIME (TIME)
			    SI:WHO-LINE-JUST-COLD-BOOTED-P NIL)
		      (COND ((setq async-handler (assq soft-char async-handlers))
			     (funcall (cadr async-handler) soft-char))
			    ((= SOFT-CHAR #\ESC)	;Must have no bucky bits--for supdup
			     (SETQ KBD-ESC-HAPPENED #'KBD-ESC))
			    ((= SOFT-CHAR #\SYSTEM)
			     (SETQ KBD-ESC-HAPPENED #'KBD-SYS))
			    ((AND (= CHAR #\CALL)
				  (NOT (GET PLIST ':SUPER-IMAGE)))
			     (KBD-CALL BUFFER))
			    ((AND (MEMQ SOFT-CHAR '(#\ABORT #\ABORT #\BREAK #\BREAK))
				  (NOT (GET PLIST ':SUPER-IMAGE)))
			     (KBD-ASYNCHRONOUS-INTERCEPT-CHARACTER SOFT-CHAR))
			    ((NOT (IO-BUFFER-FULL-P KBD-IO-BUFFER))
			     (IO-BUFFER-PUT KBD-IO-BUFFER SOFT-CHAR))))))))))

Date: Tuesday, 2 February 1982, 13:32-EST
From: Mike McMahon <MMcM at SCRC-TENEX>
Subject: Make-system bug
To: Moon at SCRC-TENEX
Cc: BUG-LISPM at SCRC-TENEX

    Date: Friday, 29 January 1982, 22:55-EST
    From: David A. Moon <Moon at SCRC-TENEX>
    In System 78.67, ZMail 38.8, Symbolics 8.15, Tape 6.5, LMFS 21.42, Canon
    9.13, microcode 841, on Terrier:
    If you do:

	    (defsystem foobar
	      (:pathname-default "SCRC:<MOON>")
	      (:module frob ("NO-SUCH-FILE"))
	      (:readfile frob))
	    (make-system 'foobar)

    it comes back with no error, failing to detect that the filename was misspelled.

In general, it has determined that the file on disk matches the file
loaded into the machine.  I suppose that there needs to be a special
case error in file-newer-than-loaded-p.

Date: 2 February 1982 10:42-EST
From: David L. Andre <DLA at MIT-AI>
Subject: INCLUDED-FLAVORS
To: RMS at MIT-AI
cc: BUG-LISPM at MIT-AI, DLA at MIT-AI, RWK at SCRC-TENEX

I am against renaming :INCLUDED-FLAVORS, partly because all because I
think :MAYBE-DEPEND-ON-FIRST is worse.  You're beating a dead horse.

I wouldn't mind flushing it entirely, but it's probably better just to
declare it obsolete.  In the new compiler warnings scheme, warnings can
be issued in "the right way".

Date: 2 February 1982 09:50-EST
From: David W. Shipman <SHIPMN at MIT-AI>
To: BUG-LISPM at MIT-AI

In System 78.43, ZMail 38.5, Local-File 31.10, Experimental Spire 1.1, microcode 836, 60Hz, on Lisp Machine Twelve:

Shouldn't the system provide a function TIME:MICROSECOND-TIME-DIFFERENCE 
since the microsecond timer wraps around every 32 bits?

Date: Tuesday, 2 February 1982, 01:17-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: :INCLUDED-FLAVORS
To: rms at MIT-AI
Cc: bug-lispm at SCRC-TENEX

Apparently what is really going on is that there is a bug in the case
of a flavor that has both normal components and included flavors.  As
I recall this case wasn't thought about very hard since there weren't
any flavors in the window system that did that.

The bug is that when the included flavor doesn't appear anywhere else,
it gets put at the FRONT of its includer's components, instead of at
the END.  This could easily be fixed.  Of course it makes no difference
in the case where the component list is empty.

Is it in fact true that all of your problems were due to this bug, rather
than to some other different thing wrong with included-flavors?

The documentation is also abysmal.  This can't be so easily fixed since
there are so many copies of it in people's hands.  I'm willing to
rewrite it and mail the new section to INFO-LISPM.  I don't know why the
documentation says that :included-flavors and :required-flavors are
reasonably interchangeable, since the whole point of putting in
:required-flavors was that they are not.  A brainographical error
I suppose.

For reference: the old behavior of :included-flavors, before a year ago
or whenever it was that it was changed, was as follows:  If flavor A
is built out of flavor B, and B includes C, and C does not otherwise
appear as a component of A, then C was added at the end of A's component
list.  The "new" behavior is to add C to the end of B's component list
(except for the bug that adds it to the front instead).

Date: 2 February 1982 00:03-EST
From: Glenn S. Burke <GSB at MIT-ML>
Subject: Backquote suggestion
To: ALR at MIT-ML, BUG-LISPM at MIT-ML

Probably a more useful (but uglier) variant would be just to disable
constant-substructure optimizations;  e.g.,
    #`(,'a ,'b c) -> (list* 'a 'b '(c)).
That way you eliminate the inefficiency of copying stuff that doesn't
need to be copied while being able to guarantee what the consing is.
But it's hardly less verbose than calling the consing functions
yourself if there are that many commas.  In case you don't actually
remember (or, if this stems from what you do remember) brand-x used to
have a broken backquote such that it always constructed, at all
levels.  This was entirely unacceptable, especially because brand-x
had backquote working for all kinds of other constructs, not just
lists.  The only condecension the current implementation makes is that
if the construction is side-effecting, there is no read-time
optimization;  i.e.,
  `[,'a ,'b] -> (ulist 'a 'b), and `[a b] -> <the ulist of A and B>.


Date: Monday, 1 February 1982, 22:49-EST
From: David Chapman <Zvona at MIT-AI>
To: mt at MIT-AI, acw at MIT-AI, naha at MIT-AI
Cc: bug-lispm at MIT-AI

The patch system automatically adds ``-- <uname>'' to the end of
patch descriptions.  Your recent patches have this redundantly.

Date: Monday, 1 February 1982, 23:38-EST
From: David Chapman <Zvona at MIT-AI>
To: BUG-LISPM at MIT-AI

In System 78.56, ZMail 38.5, Experimental Tester 19.14, Experimental Programmer's Apprentice (Aux) 15.0, Experimental Programmer's Apprentice 16.6, microcode 849, on Lisp Machine Eighteen:

It's sort of a misfeature that ``System to patch:'' in m-X Add
Patch completes over all systems rather than just patchable ones. 

Date: Monday, 1 February 1982, 21:03-EST
From: David Chapman <Zvona at MIT-AI>
To: RISTAD at MIT-MC, BUG-LISPM at MIT-AI
Cc: kmp at MIT-AI
In-reply-to: The message of 1 Feb 82 03:51-EST from RISTAD at MIT-MC

You were using a non-standard band.  CADR22 boots to a PA band by
default; this is intended in part to warn people that the machine
is not really for general use.  If you want to use it, you should
first disk-restore to a standard band.  You may be interested to
know, though, that KMP's Zork does know about elfmaidens.

Date: 1 February 1982 15:42-EST
From: Andrew L. Ressler <ALR at MIT-AI>
To: BUG-LISPM at MIT-AI

In System 78.56, ZMail 38.5, Experimental circom 1.0, microcode 836, on Lisp Machine Nineteen:

There is now a new feature for meta-x commands in ZWEI.  If while typing at the
meta-x completion mini-buffer you realize that you should have entered a
ctrl-meta-x completion buffer, you may just type ctrl-meta-x immediately.  This
will then quit out of the meta-x buffer and enter the ctrl-meta-x buffer
with the full completion of the command already typed.

Just one question; Since I patched this in system 78, will you people hacking with 79
include this or must I repatch it in 79 when 79 is released.

Date: 1 February 1982 12:31-EST
From: Carl Richard Feynman <CARLF at MIT-AI>
To: BUG-LISPM at MIT-AI

In System 78.44, ZMail 38.5, Local-File 32.7, microcode 849, CStacy special, on Lisp Machine Six:

	Clicking on one of the area-list produced by typing A at Peek causes
an error. I'm sorry about not including the system number on my last message
about this. I was so used to having ZMAIL fill it in that when I sent mail from
ZWEI I forgot about it.
				-- Carl

Date: Sunday, 31 January 1982, 22:22-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: Backquote suggestion
To: alr at MIT-ML, bug-lispm at SCRC-TENEX

I don't think it makes sense to introduce a new reader macro character to
start a backquote.  A long time ago GLS proposed that a question mark following
a backquote or a comma meant "guarantee to make a copy this structure"
(I assume just in the cdr direction).  This was never implemented in the
Lisp machine because it seemed like more hair in the documentation than was
worth it for the convenience.  But perhaps this is really worthwhile and
should be put in after all.  Certainly the programming of it would be easy
enough.

Date: Monday, 1 February 1982, 06:42-EST
From: ROBERT KERNS <RWK at SCRC-TENEX>
Subject: Backquote
To: Andrew L. Ressler <ALR at MIT-ML>
Cc: BUG-LISPM at MIT-AI
In-reply-to: The message of 31 Jan 82 17:54-EST from Andrew L. Ressler <ALR at MIT-ML>

    Date: 31 January 1982 17:54-EST
    From: Andrew L. Ressler <ALR at MIT-ML>
    Subject:  Backquote
    To: BUG-LISPM at MIT-AI

    While we're on the subject, am I the only one who would like a backquote
    that could use any primitives except ones that make constant list
    structure.  I propose a new backquote #` which doesn't guarantee which
    actual functions it uses as long as they don't make constant list
    structure.
    ex.
    `(a b) would turn into (list 'a 'b) instead of '(a b)

    many times have I wanted to use backquote to create list structure which I
    can safely rplacd into without modifying the code that set the orignal
    value.

    (defun f (x)
      (aset #`(x 0) array x))

    (defun modify-array (x)
      (rplaca (cdr (aref array x))
	      (1+ (cadr (aref array x)))))

    The #` would guarantee that the function f was not changed by the rplaca.
    I've already tested some code that would do that.  If people agree I shall
    install it.

What would `(a (b c)) turn into?  `(a '(b c))?  What's wrong
with just doing (COPYLIST '(a (b c))) or (COPYTREE '(a (b
c))) if you want a copy of some constant structure?  Or `((a
b) ,(copylist '(d e)))?  I really don't think we should
clutter up the language with STILL MORE SYNTAX for something
which isn't useful nearly as often as backquote, and for
which there is an alternate syntax which is even more powerful.

Date: 1 February 1982 04:56-EST
From: David W. Shipman <SHIPMN at MIT-AI>
Subject: CADR13 chaosnet
To: CSTACY at MIT-AI, MOON at SCRC-TENEX
cc: BARMAR at MIT-AI, BUG-LISPM at MIT-AI

    Date: 31 January 1982 19:45-EST
    From: Christopher C. Stacy <CStacy at MIT-AI>
    Subject: CADR13 chaosnet
    To: MOON at SCRC-TENEX
    cc: BARMAR at MIT-AI, BUG-LISPM at MIT-AI

    Is CADR-13 the machine which someone unknown person changed the hardware
    address on, such that no one knew where it was?

I don't know about CADR13, but the address of CADR12 was changed,
apparently by Rich Lawhorn, to 16250, without telling anybody, and not
even CADR12 knew who it was for awhile.  The host table file
"AI:LMSITE;HSTTBL" is now correct and must be (re)loaded to know about
CADR12.


RISTAD@MIT-MC 02/01/82 03:51:59
To: (BUG LISPM) at MIT-AI
In System 78.54, ZMail 38.5, Experimental Programmer's Apprentice 21.0, Experimental Dungeon 2.0, microcode 836, Very Experimental PA Band, on Lisp Machine Twenty-two:

this isn't really a bug, but more like a question/potential-bug.  I was look at the 
<system><help> documentation when I saw that <system>Z put you into a "ZORK" window.
Being curious as to what a ZORK window was (all the while hoping that it was the game),
I tried it out only to find that it didn't seem to do much (i.e. nothing).  Is that
supposed to happen or what?
                              ristad@MIT-MC



	

RISTAD@MIT-MC 02/01/82 03:51:08
To: (BUG LISPM) at MIT-AI
In System 78.54, ZMail 38.5, Experimental Programmer's Apprentice 21.0, Experimental Dungeon 2.0, microcode 836, Very Experimental PA Band, on Lisp Machine Twenty-two:

this isn't really a bug, but more like a question/potential-bug.  I was look at the 
<system><help> documentation when I saw that <system>Z put you into a "ZORK" window.
Being curious as to what a ZORK window was (all the while hoping that it was the game),
I tryed it out only to find that it didn't seem to do much (i.e. nothing).  Is that
supposed to happen or what?
                              ristad@MIT-MC



	

Date: 1 February 1982 01:21-EST
From: Barry Margolin <BARMAR at MIT-MC>
Subject: Network-HELP in TELNET
To: BUG-LISPM at MIT-AI

In System 78.55, ZMail 38.5, microcode 848, 60.45 Hz, on Lisp Machine Four:

Minor bug: the description for the TELNET C request (which changes the
escape character) says that it changes the "SUPDUP escape character"
whether you are in SUPDUP or in TELNET.  You and I know that SUPDUP and
TELNET are the same program, but that might be confusing to a novice,
and it is wrong, anyway?  Or is it?  Is the escape character a global
varable or per TELNET/SUPDUP instance (or per-connection, since you can
disconnect and reconnect within the same TELNET instance)?
					barmar


BIL@MIT-MC 02/01/82 01:17:37
To: (BUG LISPM) at MIT-AI
In System 78.54, ZMail 38.5, microcode 840, Mathlab, on Lisp Machine Fifteen:

Tracing EVAL leaves the lisp listener (and presumably much else) wedged.
The only way I could figure out how to get out of this was warm booting.
TRACE should at least check for screw cases like the MacLISP trace package.


Date: 1 February 1982 00:05-EST
From: Richard M. Stallman <RMS at MIT-AI>
Subject: INCLUDED-FLAVORS
To: BUG-LISPM at MIT-AI, RWK at SCRC-TENEX

I plan to rename :INCLUDED-FLAVORS to :MAYBE-DEPEND-ON-FIRST.
The old name :INCLUDED-FLAVORS will still work as it does now
but will also print a warning message
 ":INCLUDED-FLAVORS doesn't do what you think it does"
Since :INCLUDED-FLAVORS is almost always the wrong thing,
almost all occurrences of it will be genuine bugs and the number
of places that simply want to be changed to :MAYBE-DEPEND-ON-FIRST
will be few.

If people would prefer to flush it entirely, that is fine with me.

Date: 25 January 1982 22:48-EST
From: David Chapman <Zvona at MIT-AI>
To: BUG-LISPM at MIT-AI

In System 78.51, ZMail 38.5, Local-File 32.12, Experimental DAEDALUS 29.5, Experimental Tester 19.11, Experimental Programmer's Apprentice (Aux) 15.0, Experimental Programmer's Apprentice 16.0, microcode 843, on Lisp Machine Eight:

string-pluralize should string-coerce its argument.

Date: 31 January 1982 20:31-EST
From: David L. Andre <DLA at MIT-AI>
Subject: CERROR clumsiness
To: KMP at MIT-AI
cc: BUG-LISPM at MIT-AI

This will be fixed in the new error system.

Date: 31 January 1982 20:31-EST
From: David L. Andre <DLA at MIT-AI>
Subject: CERROR clumsiness
To: KMP at MIT-AI
cc: BUG-LISPM at MIT-AI

This will be fixed in the new error system.

Date: 31 January 1982 20:27-EST
From: David L. Andre <DLA at MIT-AI>
Subject: Policy on system 79.
To: RMS at MIT-AI, CSTACY at MIT-AI, BUG-LISPM at MIT-AI

First, let me point out that system 79 is still experimental, and my
previous announcement was not to imply that it works.  So don't
"expect" it to work until the system is released.

Second, there is a slight reorganization of systems in this system.  No
longer is REMOTE loaded by default.  Instead, it is a separate patchable
system which RMS will be maintaining.  So if you don't see the system
"LMFILE Remote" in the herald, then it's not there.  The same is true
(and has been true) for various other systems such as Local-File.

However, the default load DOES know about these systems, because their
source files are declared in LISPM;SYSDCL.  So all that necessary to
load them is (MAKE-SYSTEM <system-name>).

Finally, unblemished systems are being kept on the filecomputer.  It is
best to build systems from those bands, rather than to load them over
old definitions.

But you really don't want to do any of that until the system is
released.

			-- Dave

Date: 31 January 1982 19:45-EST
From: Christopher C. Stacy <CStacy at MIT-AI>
Subject: CADR13 chaosnet
To: MOON at SCRC-TENEX
cc: BARMAR at MIT-AI, BUG-LISPM at MIT-AI

Is CADR-13 the machine which someone unknown person changed the hardware
address on, such that no one knew where it was?

Date: Sunday, 31 January 1982  18:04-EST
From: HIC at SCRC-TENEX
To:   George J. Carrette <GJC at MIT-MC>
Cc:   BUG-LISPM at MIT-MC, kmp at MIT-AI, RWG at MIT-MC
Subject: SETQing t and nil

    Date: Sunday, 31 January 1982  09:28-EST
    From: George J. Carrette <GJC at MIT-MC>
    To:   RWG at MIT-MC
    cc:   BUG-LISPM at MIT-MC, kmp at MIT-AI
    Re:   SETQing t and nil

    The symbols T and NIL are globalized anyway, so :T and :NIL will
    be the same as USER:T and USER:NIL no matter what happens to the
    user and keyword packages. Looks like you are just going to have
    to create a RWG package with T and NIL shadowed.
So what that their globalized?  Why do you think that the keyword package
will inherit from global?


Date: Sunday, 31 January 1982, 17:58-EST
From: Robert W. Kerns <RWK at SCRC-TENEX>
Subject: "That is the documented behavior".
To: Richard M. Stallman <RMS at MIT-AI>
Cc: BUG-LISPM at MIT-AI
In-reply-to: The message of 31 Jan 82 06:11-EST from Richard M. Stallman <RMS at MIT-AI>

I didn't mean to imply that I thought the documentation is
clear, it certainly isn't.  That was meant to answer your
question "Is in intentional"?  The phrase "it is inserted
into the list of components immediately after the last
component to include it" has to be interpreted completely
literally.  I didn't get it the first several times I read
it either.  Examples are needed to make you believe it!

According to HIC, ":INCLUDED-FLAVORS is almost always the
wrong thing".  And yes, it is intentional.  I'm certainly not
trying to defend the current behavior, just that it's
documented to do the wrong thing, so I don't use it.

I guess you could consider :INCLUDED-FLAVORS to be a "default
place to put this flavor", rather than a flavor to supply
defaults for messages.  If you mix in a flavor which has
:INCLUDED-FLAVORS, and you wish to shadow messages in an
included flavor, you can put the included flavor wherever you
want in the flavor you are building by just explicitly
including it, at the end, or wherever.

But after being scrod a couple times myself, and helping
others get unwedged as well, I just use :REQUIRED-FLAVOR.
You get the same control over order of combination, without
the DWIM feature of putting it in the wrong place.

Putting it at the end isn't the right thing either, you
realize.  If you didn't know there was a :INCLUDED-FLAVOR,
you might try to shadow a method with the mixin, only to not
notice that the method was really defined in the included
flavor, which got stuck at the end instead of shadowing.

Can anybody show me a case where :INCLUDED-FLAVOR is the
right thing?  I really can't make any arguments for not
flushing it.

Date: 31 January 1982 17:54-EST
From: Andrew L. Ressler <ALR at MIT-ML>
Subject:  Backquote
To: BUG-LISPM at MIT-AI

While we're on the subject, am I the only one who would like a backquote
that could use any primitives except ones that make constant list
structure.  I propose a new backquote #` which doesn't guarantee which
actual functions it uses as long as they don't make constant list
structure.
ex.
`(a b) would turn into (list 'a 'b) instead of '(a b)

many times have I wanted to use backquote to create list structure which I
can safely rplacd into without modifying the code that set the orignal
value.

(defun f (x)
  (aset #`(x 0) array x))

(defun modify-array (x)
  (rplaca (cdr (aref array x))
	  (1+ (cadr (aref array x)))))

The #` would guarantee that the function f was not changed by the rplaca.
I've already tested some code that would do that.  If people agree I shall
install it.

Date: Sunday, 31 January 1982, 15:23-EST
From: Daniel L. Weinreb <dlw at SCRC-TENEX>
To: kmp at MIT-AI, BUG-LISPM at MIT-AI

The manual is extremely explicit in telling you not to depend on the
code created by backquote.  That design choice was intentional.  It is
perfectly valid for `(a b) to read as (quote (a b)).

Date: Sunday, 31 January 1982  14:13-EST
From: MOON at SCRC-TENEX
To:   Barry Margolin <BARMAR at MIT-AI>
Cc:   BUG-LISPM at MIT-AI
Subject: CADR13 chaosnet

    Date: 30 January 1982 05:22-EST
    From: Barry Margolin <BARMAR at MIT-AI>
    Subject: CADR13 chaosnet
    To: BUG-LISPM at MIT-AI

    In System 78.53, ZMail 38.5, Experimental Macsyma 22.0, Local-File 31.10, microcode 836, FS, on Lisp Machine Thirteen:

    None of the other BUG choices seemed appropriate, so I am sending this
    to you.

    CADR13 is only half on the Chaosnet.  It can make outgoing connections
    perfectly well.  It is ignoring incoming RFC's.  I had a Peek C display
    running when I did a hostat from MC, and nothing ever showed up on the
    display (MC eventually timed out).
Nothing would be expected to show up on the display, since the STATUS rfc
is answered immediately by the NCP.

Is it failing to receive any incoming packets, or is the case that if you
create a connection from CADR13 it works in both directions?  If the latter,
it must be software (probably someone set CHAOS:SERVER-ALIST to NIL or something
like that).

Date: 31 January 1982 11:33-EST
From: Richard M. Stallman <RMS at MIT-AI>
To: KMP at MIT-AI, BUG-LISPM at MIT-AI

It is written that SUBST functions take &REST args.
The &REST arg is substituted with (LIST remaining arg forms).
If the &REST arg is passed along via LEXPR-FUNCALL,
the code is optimized so the list is not consed.

I can patch this if it is urgent.
Let me know if there are any other ways the list can be used
which ought to be optimized.

Date: 31 January 1982 09:28-EST
From: George J. Carrette <GJC at MIT-MC>
Subject:  SETQing t and nil
To: RWG at MIT-MC
cc: BUG-LISPM at MIT-MC, kmp at MIT-AI

The symbols T and NIL are globalized anyway, so :T and :NIL will
be the same as USER:T and USER:NIL no matter what happens to the
user and keyword packages. Looks like you are just going to have
to create a RWG package with T and NIL shadowed.


RWG@MIT-MC 01/31/82 06:47:55 Re: SETQing t and nil
To: kmp at MIT-AI
CC: (BUG LISPM) at MIT-MC
If the USER: and KEYWORD: packages ever separate, how about a mode where
the booleans are :T and :NIL, so that, e.g., i can setq x, y, and goddam t!

Date: 31 January 1982 06:11-EST
From: Richard M. Stallman <RMS at MIT-AI>
Subject: "That is the documented behavior".
To: BUG-LISPM at MIT-AI

The documentation is unclear.  Looking at it now, I don't see
that it would enable me to predict that if A depends on B
and includes C, then C will shadow B in flavors that depend on A.
The documentation does say that C will be inserted "at a 'reasonable'
place", which to me clearly ruled out this sort of behavior.
So this behavior may be supposed to be documented, but it isn't.

More than the documentation needs to be fixed.  There is a real problem
with :included-flavors, which screws both users who learned to use it
a year ago, and programs written then.  The bugs are often subtle and
their manifestations are often not easy to relate to the cause.

There are two main questions:
1) is it in fact intended that if A depends on B and includes C,
then C hides B in flavors that depend on A?
If it s intended, then perhaps included flavors should not be
described in the manual as "defaults".  A default is usually something
that other things shadow, not vice versa.
2) If this behavior is intended, what is it useful for?

I can believe that the old meaning of :included-flavors, useful as
it was, had subtle paradoxes which made it better to flush it.
But if so, this new and quite opposite behavior should be given
a different name.  The two behaviors are so different that whenever
the old one was right, the new one is sure to be wrong.  If the old
behavior cannot continue to be available, :included-flavors should be
an error.  Then people would know that every use of :included-flavors
is a mistake (which is the case) and old uses and users would quickly be fixed.
The new feature, which is not really related to the old one,
can be provided under another name.

Date: 31 January 1982 06:06-EST
From: Kent M. Pitman <kmp at MIT-AI>
Subject: CERROR clumsiness
To: BUG-LISPM at MIT-AI

Right now, the error system doesn't really provide a whole lot of help with
continuable errors. Sometimes there is a message saying what will be done with
a returned values, other times there is not. Usually when there is one, it is
not supplied in an elegant way. Here's an example:

  (catch-error (funcall #'if 't 'nil 't))
  >>ERROR: Funcalling the macro IF - type Resume to attempt to kludge it via EVAL

  NIL
  EH:ERRSET-CATCH
  NIL
  NIL

Messages like "type Resume ..." should be provided as additional data which
error handlers can use if they need to. They should not be written into the 
error message string -- they should be individually inspectable. Perhaps if
the base-level error signalling primitive (from which CERROR was written) 
looked more like this:

  (KERROR
    ':error-description             "Tried to funcall the macro ~S."
    ':error-description-datum       macro-name
    ':return-value-is-significant-p nil
    ':resume-description            "attempt to kludge the call using EVAL")

or

  (KERROR
    ':error-description             "Tried to ~S the object ~S."
    ':error-description-data        (list FOO BAR)
    ':return-value-is-significant-p t
    ':resume-description            "retry the ~S on returned value"
    ':resume-description-datum	    FOO
    ':return-value-description      "a fixnum"
    ':return-value-predicate	    #'fixp)

then the error traps and debuggers have some idea what's in a string before
they decide to go printing it.

-kmp

Date: Sunday, 31 January 1982, 05:19-EST
From: Robert W. Kerns <RWK at SCRC-TENEX>
Subject: :INCLUDED-FLAVORS not right
To: Richard M. Stallman <RMS at MIT-AI>
Cc: BUG-LISPM at MIT-AI
In-reply-to: The message of 31 Jan 82 03:35-EST from Richard M. Stallman <RMS at MIT-AI>

    Date: 31 January 1982 03:35-EST
    From: Richard M. Stallman <RMS at MIT-AI>
    To: BUG-LISPM at MIT-AI
    (DEFFLAVOR REMOTE-LMFILE-PATHNAME ()
	       (LMFILE-PARSING-MIXIN REMOTE-DATA-PATHNAME-MIXIN))
    (DEFFLAVOR LMFILE-PARSING-MIXIN (NAME-PATHLIST) ()
      (:REQUIRED-FLAVORS PATHNAME))
    (DEFFLAVOR REMOTE-DATA-PATHNAME-MIXIN (SERVER-CHAOS-ADDRESS SERVER-LOCAL-HOST)
	       (DIRECTORY-STREAM-MIXIN)
      (:INCLUDED-FLAVORS REMOTE-PATHNAME)
      (:INITABLE-INSTANCE-VARIABLES SERVER-CHAOS-ADDRESS SERVER-LOCAL-HOST))

    The resulting REMOTE-LMFILE-PATHNAME flavor got its
    :DIRECTORY-LIST-STREAM primary method from PATHNAME.
    The method on DIRECTORY-STREAM-MIXIN was ignored even though
    it SHOULD have come before REMOTE-PATHNAME which is how PATHNAME came in.

This is the documented behavior.  I would modularize this by using
:REQUIRED-FLAVOR in the mixin, and not tried to make an instantiable
flavor out of two mixins, but two mixins and a base flavor:

(DEFFLAVOR REMOTE-DATA-PATHNAME-MIXIN (SERVER-CHAOS-ADDRESS SERVER-LOCAL-HOST)
	   (DIRECTORY-STREAM-MIXIN)
  (:REQUIRED-FLAVORS REMOTE-PATHNAME)
  (:INITABLE-INSTANCE-VARIABLES SERVER-CHAOS-ADDRESS SERVER-LOCAL-HOST))
(DEFFLAVOR REMOTE-LMFILE-PATHNAME ()
	   (LMFILE-PARSING-MIXIN REMOTE-DATA-PATHNAME-MIXIN REMOTE-PATHNAME))

Date: 31 January 1982 03:35-EST
From: Richard M. Stallman <RMS at MIT-AI>
To: BUG-LISPM at MIT-AI

In Experimental System 79.0, Experimental ZMail 40.0,
Experimental LMFILE Remote 3.0, microcode 849, on Lisp Machine Six:

Here are some flavor definitions:


(DEFFLAVOR REMOTE-LMFILE-PATHNAME ()
	   (LMFILE-PARSING-MIXIN REMOTE-DATA-PATHNAME-MIXIN))

(DEFFLAVOR LMFILE-PARSING-MIXIN (NAME-PATHLIST) ()
  (:REQUIRED-FLAVORS PATHNAME))

(DEFFLAVOR REMOTE-DATA-PATHNAME-MIXIN (SERVER-CHAOS-ADDRESS SERVER-LOCAL-HOST)
	   (DIRECTORY-STREAM-MIXIN)
  (:INCLUDED-FLAVORS REMOTE-PATHNAME)
  (:INITABLE-INSTANCE-VARIABLES SERVER-CHAOS-ADDRESS SERVER-LOCAL-HOST))


The resulting REMOTE-LMFILE-PATHNAME flavor got its
:DIRECTORY-LIST-STREAM primary method from PATHNAME.
The method on DIRECTORY-STREAM-MIXIN was ignored even though
it SHOULD have come before REMOTE-PATHNAME which is how PATHNAME came in.

Changing REMOTE-DATA-PATHNAME-MIXIN's definition to this

(DEFFLAVOR REMOTE-DATA-PATHNAME-MIXIN (SERVER-CHAOS-ADDRESS SERVER-LOCAL-HOST)
	   (DIRECTORY-STREAM-MIXIN REMOTE-PATHNAME)
  (:INITABLE-INSTANCE-VARIABLES SERVER-CHAOS-ADDRESS SERVER-LOCAL-HOST))

fixed the problem.

Date: Sunday, 31 January 1982  02:59-EST
From: HIC at SCRC-TENEX
To:   Carl Richard Feynman <CARLF at MIT-AI>
Cc:   BUG-LISPM at MIT-AI

    Date: Saturday, 30 January 1982  21:07-EST
    From: Carl Richard Feynman <CARLF at MIT-AI>
    To:   BUG-LISPM at MIT-AI

    	Clicking on one item of the list of areas produced by typing A to Peek
    causes an error. It looks like some function was bound in the wrong package.
    			-- Carl
This doesn't fail in the latest system at Symbolics.  You failed to say
what system it failed in, so I can't test it.

Date: 30 January 1982 21:49-EST
From: Alan Bawden <ALAN at MIT-MC>
To: KMP at MIT-MC
cc: BUG-LISPM at MIT-MC

    Date: 30 January 1982 05:27-EST
    From: Kent M. Pitman <kmp at MIT-AI>

    (READ)`(X Y) => (QUOTE (X Y))

    This optimization is not necessarily valid. There are cases where
    you want to know that backquote was used even if there were no
    commas.  A simple example might be:

     (SETF `(X Y) Z)

    where you really don't happen to want to assign any elements of
    the given list to any part of Z ... '(X Y) does not work with
    SETF, but `(X Y) should.

Just what is it that you think that (setf `(a b) x) should do that
(setf '(a b) x) shouldn't?  Seems to me that they are entirely
equivalent and I see no reason to avoid reading "`(a b)" as (quote (a b)).


Date: 30 January 1982 21:07-EST
From: Carl Richard Feynman <CARLF at MIT-AI>
To: BUG-LISPM at MIT-AI

	Clicking on one item of the list of areas produced by typing A to Peek
causes an error. It looks like some function was bound in the wrong package.
			-- Carl

Date: Saturday, 30 January 1982  16:25-EST
From: HIC at SCRC-TENEX
To:   BIL at MIT-MC
cc:   bug-lispm at SCRC-TENEX

    Date: Saturday, 30 January 1982  05:41-EST
    From: BIL at MIT-MC

    BIL@MIT-MC 01/30/82 05:41:25
    To: (BUG LISPM) at MIT-AI
    In System 78.54, ZMail 38.5, microcode 840, Mathlab, on Lisp Machine Fifteen:

    DEFFLAVOR should warn of any multiple occurrences of instance variables. This
    would help track down similar bugs in user-defined structure definers which
    transform into flavors.

Do you mean:
A) Same name in same flavor, or
B) Smae name in different flavors

If A, it could check, if B, it's a feature, not a bug.

Date: Saturday, 30 January 1982, 16:13-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: Your process bug
To: dpl at MIT-AI
Cc: bug-lispm at SCRC-TENEX, bug-lmman at MIT-AI

Names of processes are supposed to be strings, not symbols.  I guess
symbols used to work but only by accident.  The manual is not explicit
on this point for some reason (it neither says what the name of a process
has to be nor gives any hint as to what the name is for).

Date: 30 January 1982 15:11-EST
From: Design P. Language <DPL at MIT-AI>
To: BUG-LISPM at MIT-AI

In System 78.54, ZMail 38.5, microcode 836, on Lisp Machine Twenty-two:

Patch 78.51 seems to have broken things.  Loading a daedalus system
(which invokes process-run-restartable-function at load time) yields
the error:

>>TRAP: The argument to CAR, DAED-PROCESS, was of the wrong type.
The function expected a cons.  

While in the function si:run-process-run-function-1.

The stack frame is:

Arg 0 (NAME-OR-KEYS): DAED-PROCESS
Arg 1 (FUNCTION): #<DTP-FEF ...
Arg 2 (ARGS): NIL
Arg 3 (LOCAL-KEYS): (:RESTART-AFTER-BOOT T :RESTART-AFTER-RESET T)

With 
LOCAL 7 (KEYWORDS): DAED-PROCESS

KEYWORD-EXTRACT is attempting to take the car of KEYWORDS when
the trap happens.  Maybe it is barfing because its keylist
is (:restart-after-boot t :restart-after-reset t . daed-process)
because process-run-function-1 is appending local-keys and name-or-keys
to make the keylist?

Daniel

Date: 30 January 1982 12:38-EST
From: Christopher C. Stacy <CStacy at MIT-AI>
To: BUG-LISPM at MIT-AI

In SYSTEM in Experimental System 79.0, Experimental ZMail 40.0,
microcode 849, on Lisp Machine Six:

FS:ADD-RM-HOST is undefined in this world.

Date: 30 January 1982 07:07-EST
From: Richard M. Stallman <RMS at MIT-AI>
To: BUG-LISPM at MIT-AI, KMP at MIT-AI

It would indeed be good if SETF of constructors were cleverer about
recognizing constant args to the constructor.

If setting constructor-forms were done with some other function name
instead of SETF, these problems would still exist or would be soluble
in the same ways.  So this is not an argument that constructor-form
setting should be anywhere but in SETF.

The reason all types of assignment should be on one function is that
it makes it conceivable to support (SETF (VALUES (CAR X) (LIST Y Z)) ...)
If there were two different forms, one for setting accessors and one
for setting constructors, then (SETF (VALUES ...) ..) would have to
choose one of them to expand into, and neither one would work in
both cases.
[In fact, that example doesn't work now, because (SETF (VALUES ...)...)
isn't capable of handling anything but symbols; but at least there is
no fundamental reason why it can't work, and I'm going to fix it some day]

Date: 30 January 1982 05:41-EST
From: Kent M. Pitman <kmp at MIT-AI>
Subject: SETF of non-accessors
To: BUG-LISPM at MIT-AI

Presumably, (SETF (LIST 'X Y) Z) ignores 'X because it's constant and
non-assignable. Yet, (SETF 'X 3) would be an error. That's not nicely recursive.
Oh, and (SETF (LIST 'X 3) Z) does generate a (SETF 3 Z) which it later errs
on even though 3 is just as obviously constant as 'X would have been. 
And what about (SETF NIL ...) and (SETF T ...) -- or their counterparts 
(SETF (LIST NIL T) ...). In the LIST case it seems clear that these are constants,
so why should they get assigned to? In the non-list case, if nothing else it's
clear that you're going to lose because of the inconsistent semantics of
assigning to NIL and T in the interpreter/compiler ... So perhaps these should
be considered constants too and no code produced -- that would at least be
honest since the compiler ain't gonna produce any code for them later anyway...

Basically, I think that (SETF (LIST ...) ...) and (SETF (CONS ...) ...) and
so on are real crocks and totally inconsistent. In the case of (SETF (CAR ...))
you're assigning an accessor. In the case of (SETF (LIST ...)) you're assigning
a constructor. I don't think this is an appropriate generalization. At best,
these should be two different operators. The semantics should be (SETF loc thing)
where loc is an access-form as described in the manual... It is really inelegant
for it to do what it currently does at all.

-kmp

BIL@MIT-MC 01/30/82 05:41:25
To: (BUG LISPM) at MIT-AI
In System 78.54, ZMail 38.5, microcode 840, Mathlab, on Lisp Machine Fifteen:

DEFFLAVOR should warn of any multiple occurrences of instance variables. This
would help track down similar bugs in user-defined structure definers which
transform into flavors.


Date: 30 January 1982 05:27-EST
From: Kent M. Pitman <kmp at MIT-AI>
To: BUG-LISPM at MIT-AI

In System 78.54, ZMail 38.5, microcode 836, on Lisp Machine Twenty-two:

(READ)`(X Y) => (QUOTE (X Y))

This optimization is not necessarily valid. There are cases where
you want to know that backquote was used even if there were no commas.
A simple example might be:

 (SETF `(X Y) Z)

where you really don't happen to want to assign any elements of the given
list to any part of Z ... '(X Y) does not work with SETF, but `(X Y) should.

I know the problem may mean introducing a SI:XR-BQ-QUOTE, but maybe that's
not such a bad idea.
-kmp

Date: 30 January 1982 05:22-EST
From: Barry Margolin <BARMAR at MIT-AI>
Subject: CADR13 chaosnet
To: BUG-LISPM at MIT-AI

In System 78.53, ZMail 38.5, Experimental Macsyma 22.0, Local-File 31.10, microcode 836, FS, on Lisp Machine Thirteen:

None of the other BUG choices seemed appropriate, so I am sending this
to you.

CADR13 is only half on the Chaosnet.  It can make outgoing connections
perfectly well.  It is ignoring incoming RFC's.  I had a Peek C display
running when I did a hostat from MC, and nothing ever showed up on the
display (MC eventually timed out).

Date: 30 January 1982 04:17-EST
From: Kent M. Pitman <kmp at MIT-AI>
To: BUG-LISPM at MIT-AI

In System 78.54, ZMail 38.5, microcode 836, on Lisp Machine Twenty-two:

As a result, TEST has no associated code -- which I guess is ok. The odd
thing is the following:

 (DEFUN TEST () (SETQ T 3) T)
 (TEST) => 3
 T => 3
 (SETQ T 'T)
 (COMPILE 'TEST) ; Warns that T is being SETQ'd
 (TEST) => T
 T => T

The compiler should warn the user that T is NOT being SETQ'd, that the
assignment is being ignored. In fact,

  (DEFUN TEST () (SETQ TEST 3) (SETQ NIL 4))

which would err at runtime because NIL can't be assigned will produce
no code at all for the function TEST and an extremely confusing error message
when you try to invoke the compiled form.

Date: 30 January 1982 03:31-EST
From: Kent M. Pitman <KMP at MIT-MC>
Subject: Lossage with SETF
To: Moon at SCRC-TENEX
cc: BUG-lispm at MIT-AI

Consider: 
 (DEFMACRO MY-SETF (FOO)
   `(EVAL-WHEN (EVAL LOAD COMPILE) (DEFUN (,FOO SETF) ...)))
The problem is that I have something like
(DEFFOO X)
which creates code for X as an accessor and wants to set up SETF
properties. Nowhere is there an explicit EVAL-WHEN. I need something
I can cons up and have the right thing happen. I cannot rely on the
compiler seeing something like an EVAL-WHEN in time.
-kmp


Date: Saturday, 30 January 1982  03:23-EST
From: MOON at SCRC-TENEX
To:   Kent M. Pitman <KMP at MIT-AI>
Cc:   BUG-LISPM at SCRC-TENEX
Subject: Lossage with SETF at compile-time

Putting (EVAL-WHEN (COMPILE) ...) around something will never cause
temporary area lossage, no matter where the something is consed, unless
the something contains STRINGS in the temporary area (the reader won't
put them there, so no one has bothered to fix this).

It's true that there should be a general facility for making a temporary
compile-time environment.

Date: 30 January 1982 03:08-EST
From: Kent M. Pitman <KMP at MIT-AI>
Subject: Lossage with SETF at compile-time
To: BUG-LISPM at MIT-AI

In System 78.54, ZMail 38.5, microcode 836, on Lisp Machine Twenty-two:

There needs to be a way to create the equivalent of a SETF property for something
in a way that does not side-effect the environment external to the compiler.
eg, suppose I have some macro F defined by 
 (DEFMACRO F (X) `(CDR (ASSQ ,X *FOO*)))
and I want to have (SETF (F stuff) new-stuff) turn into
 (SETF (CDR (OR (ASSQ stuff *FOO*)
		(SETQ *FOO* (CONS (CONS stuff NIL) *FOO*))))
       new-stuff)
If I just do (DEFUN (F SETF) ...) the compiler never sees the definition and I
end up with SETF turning the (SET (F stuff) new-stuff) into 
(RPLACD (ASSQ stuff *FOO*) new-stuff) which is completely unacceptable.

Another way I can think to do this is with something like
 (EVAL-WHEN (EVAL LOAD COMPILE) (DEFUN (F SETF) ...))
But this, though slightly more functional, is also the right thing because of gross
unwanted side-effects. When the compilation is done with, I will have
an F with a SETF property living in the global environment ... Further, since the
SETF definition was constructed by a macro, it's living in the compiler temporary 
cons area and is doomed to be screwed the next time the compiler does an 
SI:RESET-TEMPORARY-AREA ... 

There needs to be an equivalent thing to (MACRO ...) which can be used to define
SETF properties such that they are immediately visible to the compiler and such
that they do not side-effect the environment external to compilation. 

-kmp

Date: Friday, 29 January 1982, 15:22-EST
From: Robert W. Kerns <RWK at SCRC-TENEX>
Subject: SYS:SITE;
To: Mike McMahon <MMcM at SCRC-TENEX>
Cc: DLA at MIT-AI, BUG-LISPM at MIT-AI
In-reply-to: The message of 29 Jan 82 13:18-EST from Mike McMahon <MMcM at SCRC-TENEX>

    Date: Friday, 29 January 1982, 13:18-EST
    From: Mike McMahon <MMcM at SCRC-TENEX>
    To: DLA at MIT-AI
    Cc: BUG-LISPM at MIT-AI

	Date: 29 January 1982 01:04-EST
	From: David L. Andre <DLA at MIT-AI>
	SI:RECOMPILE-WORLD always generates a new host table, regardless of
	whether it has to.
    Are you sure you aren't being faked out by not having sys:site; defined?
    That would cause the .lisp file to appear not to exist and therefore to be
    in need of regeneration.
Probably he was.  I have since installed on all SCRC machines except pointer
a re-configured system which includes SYS:SITE;, all dogs through COLLIE,
and all known CHAOSNET-FILE-COMPUTER hosts.

Date: 29 January 1982 12:11-EST
From: Alias for KMP <turnip at MIT-AI>
Subject: -*- ...; Ibase:10; ... -*-
To: BUG-LISPM at MIT-AI
cc: RICH at MIT-AI

In System 78.53, ZMail 38.5, microcode 836, on Lisp Machine Twenty-two:

I was horrified to discover that the name that goes in the file property list
asking that IBASE get bound is called BASE.
I have just been screwed over completely by removing a maclisp-compatibility SETQ of
IBASE 10. BASE 10. in one of my setup files and relying on file property lists (which
had `incorrectly' had IBase:10; in them) to take over; I will now have to spend
several more hours recompiling my whole system to get things corrected.
I believe this choice of names is just a screw waiting to happen both to naive users
and to sophisticated users who have a trivial lapse of memory. In some cases, they
may not even know why their code doesn't run right because it will be *very* hard to
spot the bug if they think they have written the right thing. I think it's essential
that the name IBASE be made to work there, even if it means making the occurrence of
BASE and IBASE together be redundant. If you don't do that, I'm quite sure I'll not be
the last person this happens to; and believe me, I ain't happy at all.
-kmp

Date: 30 January 1982 01:10-EST
From: David L. Andre <DLA at MIT-AI>
To: BUG-LISPM at MIT-AI

There is an Experimental System 79.0 on CADR18 and CADR27.
(Don't use CADR27, but you can snarf the band from there).

