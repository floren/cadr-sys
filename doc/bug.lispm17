23-Feb-83 21:11:00-EST,1420;000000000000
Date: Wednesday, 23 February 1983, 21:09-EST
From: Robert P. Krajewski <RpK at MIT-OZ>
Subject: A suggestion for MAKE-SYSTEM
To: BUG-LISPM at MIT-OZ

For files that give information to MAKE-SYSTEM about version numbers and
such of patchable systems, it would be nice if each entry had
information about for which hardware/software combination this patch had
been completed.  Thus MIT and Brand S systems could share patch
directories for user's programs (the problem doesn't enter with system
software).  (Of course, I'm talking about LISP text files here, since
binaries of regular source files tell you immediately which has been
compiled.)  For example, in a PATCH-DIRECTORY, the documentation string
slot could be expanded have a new format like ...

  (23 ((:CADR :MIT) (:CADR :SYMBOLICS) "Bugs and more bugs") "Spiderman")

... which would have to be agreed upon.  The nice things about this
scheme are that

  [1] any number of systems could share it (even MacLisp and ()),

  [2] it would take less file probing to force the compilation of 
  patches for a system which had ``fallen behind'' in version numbers.

Even if there are not enough user programs out there maintained on both
software systems to warrant this (Daedalus ?), it might still be a good
idea for program that runs on different hardware at the same site (which
will be true for both Symbolics and LMI).

``Bob''
23-Feb-83 21:16:03-EST,418;000000000000
Date: Wednesday, 23 February 1983, 21:14-EST
From: Cliff Lasser <CAL at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In Experimental MIT-Specific 18.0, Experimental System 93.11,
Experimental ZMail 49.4, microcode 226, Yow!  Winning away!,
on Lisp Machine Two:

I have a split screen window with 2 editors (having separate processes for each
is a real win) but cannot switch between them using the mouse like I used to.
23-Feb-83 22:21:17-EST,590;000000000000
Date: 23 Feb 1983 2215-EST
From: Robert W. Kerns <RWK at SCRC-TENEX>
Subject: Re: SCRC-AFGHAN response 
To: RpK at MIT-OZ, BUG-LISPM at MIT-OZ
cc: RWK at SCRC-TENEX
In-Reply-To: The message of Wednesday, 23 February 1983, 20:06-EST from Robert P. Krajewski <RpK at MIT-OZ>

No, Afghan is currrently being used for site-configuration
tests, and currently thinks it is called 'a'.  While
a machine is running a distribution band (i.e.
before it is configured and saved), it disables
servers.  STATUS is responded to even when servers in
general are disabled, of course.
-------
23-Feb-83 22:54:00-EST,823;000000000000
Date: 23 February 1983 22:50 EST
From: Pandora B. Berman <CENT @ MIT-ML>
Subject: LISPM-3 kbd
To: BRD @ MIT-ML
cc: BUG-LISPM @ MIT-ML

    Date: 22 February 1983  18:07-EST (Tuesday)
    From: Bruce R. Donald <BRD @ MIT-OZ>
    To:   bug-hardware @ MIT-OZ
    Subject:   L:ISMP-3

    Not only does the <resume> key not work, but now <abort> does not
    respond, and you must C-M-abort.

as has been said before (anyone keep count of how many times?), kbd and
mouse problems don't get fixed much by sending mail, because the people who
fix these items don't get, much less read, mail. for keyboards, bring the
offending object to the office of Ron Wiken (917 -- inside the machine
shop) during the day, and he will give you a working replacement.  mice are
replaced the same way by John Purbrick, 910.
23-Feb-83 23:06:51-EST,3825;000000000000
Date: Wednesday, 23 February 1983, 22:59-EST
From: Patrick Sobalvarro <pgs at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In Experimental MIT-Specific 18.0, Experimental System 93.11,
Experimental ZMail 49.4, microcode 226, gc@2,
on Lisp Machine Thirty-one:


Insert your description of the circumstances here:

Wanting to try out our sexy new 500mb fujitsu disk, I did C-X C-F
VULCAN:USRD$:[PGS]MAIL.MAI and got this error.  Looks like the tops-20
file mixin is getting involved.


>>TRAP 12747 (ARGTYP NUMBER PP 0 QIEQL)
The first argument to =, NIL, was of the wrong type.
The function expected a number.
Backtrace from the debugger:

Additional information supplied with call:
 Expecting 4 values

(METHOD FS:FILE-HOST-TOPS20-MIXIN HSNAME-INFORMATION) (P.C. = 113)

 Arg 0 (OPERATION): HSNAME-INFORMATION
 Arg 1 (UNIT): #<HOST-UNIT 33631455>
 Arg 2 (STR): " LOGIN PGS USRD$:[PGS]
PATRICK SOBALVARRO"
 Arg 3 (IDX): NIL
Local 0 (HSNAME): "USRD$:[PGS]"
Local 1 (HSNAME-PATHNAME): #FS:VMS-PATHNAME "VULCAN:USRD$:[PGS]"
Local 2 (PERSONAL-NAME): "PATRICK SOBALVARRO"
Local 3 (GROUP-AFFILIATION): NIL


FS:LOGIN-HOST-UNIT (P.C. = 612)

 Arg 0 (UNIT): #<HOST-UNIT 33631455>
 Arg 1 (LOGIN-P): T
 Arg 2 (UNAME-HOST): #<VMS-CHAOS-HOST MIT-HEPHAESTUS>
Local 0 (HOST): #<VMS-CHAOS-HOST MIT-HEPHAESTUS>
Local 1 (CONN): #<CHAOS Connection to MIT-HEPHAESTUS FILE 1 33563471>
Local 2 (SUCCESS): NIL
Local 3 (PKT): #<CHAOS Packet 33563263>
Local 4 (ID): "T0941"
Local 5 (PASSWORD): ""
Local 6 (ACCOUNT): ""
Local 7 (NEED-PASSWORD): NIL
Local 8 (NEW-USER-ID): "pgs"
Local 9 (NID): NIL
Local 10 (CONN1): NIL
Local 11 (G7043): NIL
Local 12 (G7044): NIL
Local 13 (CONN1): NIL
Local 14 (*SELECTQ-ITEM*): NIL
Local 15 (STR): " LOGIN PGS USRD$:[PGS]
PATRICK SOBALVARRO"
Local 16 (IDX): 12
Local 17 (HSNAME-PATHNAME): NIL
Local 18 (PERSONAL-NAME): NIL
Local 19 (GROUP): NIL
Local 20 (PERSONAL-NAME-1): NIL
Local 21 (ITEM): NIL
Local 22 (ALIST-ELEMENT): NIL


(METHOD FS:FILE-HOST-TOPS20-MIXIN LOGIN-UNIT) (P.C. = 54)

 Arg 0 (OPERATION): LOGIN-UNIT
 Arg 1 (UNIT): #<HOST-UNIT 33631455>
 Arg 2 (LOGIN-P): T
Local 0 (CONN): #<CHAOS Connection to MIT-HEPHAESTUS FILE 1 33563471>


(METHOD FS:HOST-UNIT VALIDATE-CONTROL-CONNECTION) (P.C. = 231)

 Arg 0 (OPERATION): VALIDATE-CONTROL-CONNECTION
 Arg 1 (NO-ERROR-P): T
Local 0 (G6800): #<DTP-LOCATIVE 33631462>
Local 1 (G6801): T
Local 2 (DATA-CONN): NIL
Local 3 (G6802): (SYS:REMOTE-NETWORK-ERROR SI:CONDITION-CASE-THROW FS:G6808)
Local 4 (G6810): ((SYS:REMOTE-NETWORK-ERROR SI:CONDITION-CASE-THROW FS:G6808) (** SI:CONDITION-CASE-THROW ZWEI:G8690))
Local 5 (*SELECTQ-ITEM*): NIL


Additional information supplied with call:
 Expecting 2 values

(METHOD FS:FILE-HOST-MIXIN GET-DATA-CONNECTION) (P.C. = 54)

 Arg 0 (OPERATION): GET-DATA-CONNECTION
 Arg 1 (DIRECTION): INPUT
   --Defaulted args:--
 Arg 2 (NOERROR-P): NIL
Local 0 (ERROR-P): NIL
Local 1 (UNITS): (#<HOST-UNIT 33631455>)
Local 2 (UNIT): #<HOST-UNIT 33631455>
Local 3 (DATA-CONN): NIL


Remainder of stack:

FS:OPEN-CHAOS (P.C. = 467)
(METHOD FS:CHAOS-PATHNAME OPEN) (P.C. = 30)
OPEN (P.C. = 223)
ZWEI:REVERT-FILE-BUFFER (P.C. = 427)
(METHOD ZWEI:ZMACS-BUFFER REVERT) (P.C. = 44)
ZWEI:REVERT-BUFFER (P.C. = 66)
ZWEI:FIND-FILE (P.C. = 146)
ZWEI:COM-FIND-FILE (P.C. = 47)
ZWEI:COMMAND-EXECUTE (P.C. = 100)
ZWEI:MAKE-EXTENDED-COMMAND-INTERNAL (P.C. = 103)
ZWEI:COMMAND-EXECUTE (P.C. = 100)
ZWEI:PROCESS-COMMAND-CHAR (P.C. = 67)
(METHOD ZWEI:WINDOW EDIT) (P.C. = 465)
(INTERNAL (METHOD ZWEI:ZMACS-WINDOW COMBINED EDIT) 0) (P.C. = 74)
FUNCALL (P.C. = 25)
(METHOD ZWEI:DISPLAYER AROUND EDIT) (P.C. = 31)
(METHOD ZWEI:ZMACS-WINDOW COMBINED EDIT) (P.C. = 47)
ZWEI:ZMACS-WINDOW-TOP-LEVEL (P.C. = 46)
SI:PROCESS-TOP-LEVEL (P.C. = 121)
24-Feb-83 00:57:12-EST,1871;000000000000
Date: Thursday, 24 February 1983, 00:13-EST
From: David A. Moon <Moon at SCRC-POINTER>
Subject: A suggestion for MAKE-SYSTEM
To: Robert P. Krajewski <RpK at MIT-OZ>
Cc: BUG-LISPM at MIT-OZ
In-reply-to: The message of 23 Feb 83 21:09-EST from Robert P. Krajewski <RpK at MIT-OZ>

    Date: Wednesday, 23 February 1983, 21:09-EST
    From: Robert P. Krajewski <RpK at MIT-OZ>
    For files that give information to MAKE-SYSTEM about version numbers and
    such of patchable systems, it would be nice if each entry had
    information about for which hardware/software combination this patch had
    been completed.  
Do you mean on what system it was written (which is in the front of a patch
source file) or for what system it has been compiled (which is determined
now by the existence of non-existence of the relevant binary file)?

		     Thus MIT and Brand S systems could share patch
    directories for user's programs (the problem doesn't enter with system
    software).  
Is there some reason why they can't share patch directories now?

		(Of course, I'm talking about LISP text files here, since
    binaries of regular source files tell you immediately which has been
    compiled.)  For example, in a PATCH-DIRECTORY, the documentation string
    slot could be expanded have a new format like ...

      (23 ((:CADR :MIT) (:CADR :SYMBOLICS) "Bugs and more bugs") "Spiderman")

    ... which would have to be agreed upon.  The nice things about this
    scheme are that

      [1] any number of systems could share it (even MacLisp and ()),

      [2] it would take less file probing to force the compilation of 
      patches for a system which had ``fallen behind'' in version numbers.
As far as I can tell, your [2] is the only advantage of your scheme
over the status quo.  Is there some other advantage I don't see?
24-Feb-83 01:36:40-EST,2386;000000000000
Date: Thursday, 24 February 1983, 01:32-EST
From: David Vinayak Wallace <Gumby at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In Experimental MIT-Specific 18.0, Experimental System 93.11,
Experimental ZMail 49.4, microcode 226, gc@2, on Lisp Machine Six:


Insert your description of the circumstances here:

I did C-X 2 and it bombed. (ps: there should be an extra newline before
the backtrace so that it is visually seperated from the description.

>>TRAP 16234 (TRANS-TRAP)
The instance variable ZWEI:START-BP is unbound in #<ZMACS-WINDOW-PANE Zmacs Window Pane 2 15426070 deactivated>.
Backtrace from the debugger:

ZWEI:SET-WINDOW-INTERVAL-1 (P.C. = 77)

 Arg 0 (WINDOW): #<ZMACS-WINDOW-PANE Zmacs Window Pane 2 15426070 deactivated>
 Arg 1 (INTERVAL): #<ZMACS-BUFFER "FORK.LSP PS:<HACTRN.SOURCE> OZ:" 33532606>
Local 0 (FIRST-BP): NIL


(METHOD ZWEI:ZMACS-WINDOW SET-INTERVAL-INTERNAL) (P.C. = 103)

 Arg 0 (OPERATION): SET-INTERVAL-INTERNAL
 Arg 1 (BUFFER): #<ZMACS-BUFFER "FORK.LSP PS:<HACTRN.SOURCE> OZ:" 33532606>


FUNCALL (P.C. = 25)

 Arg 0 (FN): #<ZMACS-WINDOW-PANE Zmacs Window Pane 2 15426070 deactivated>
 Rest arg (ARGS): (SET-INTERVAL-INTERNAL #<ZMACS-BUFFER "FORK.LSP PS:<HACTRN.SOURCE> OZ:" 33532606>)


(METHOD ZWEI:DISPLAYER AFTER INIT) (P.C. = 34)

 Arg 0 (OPERATION): INIT
 Arg 1 (IGNORE): #<DTP-LOCATIVE 22741054>


(METHOD ZWEI:ZMACS-WINDOW-PANE COMBINED INIT) (P.C. = 254)

 Rest arg (.DAEMON-CALLER-ARGS.): (INIT #<DTP-LOCATIVE 22741054>)
Local 1 (.DAEMON-MAPPING-TABLE.): #<ART-16B-6 16010341>
Local 2 (.VAL1.): #<ZMACS-WINDOW-PANE Zmacs Window Pane 2 15426070 deactivated>
Local 3 (.VAL2.): NIL
Local 4 (.VAL3.): NIL


Remainder of stack:

TV:MAKE-WINDOW (P.C. = 151)
(METHOD ZWEI:ZWEI-FRAME CREATE-WINDOW) (P.C. = 54)
(METHOD ZWEI:ZMACS-FRAME TWO-EDITOR-WINDOWS) (P.C. = 116)
ZWEI:SWITCH-WINDOWS (P.C. = 72)
ZWEI:COM-TWO-WINDOWS (P.C. = 27)
ZWEI:COMMAND-EXECUTE (P.C. = 100)
ZWEI:MAKE-EXTENDED-COMMAND-INTERNAL (P.C. = 103)
ZWEI:COMMAND-EXECUTE (P.C. = 100)
ZWEI:PROCESS-COMMAND-CHAR (P.C. = 67)
(METHOD ZWEI:WINDOW EDIT) (P.C. = 465)
(INTERNAL (METHOD ZWEI:ZMACS-WINDOW COMBINED EDIT) 0) (P.C. = 74)
FUNCALL (P.C. = 25)
(METHOD ZWEI:DISPLAYER AROUND EDIT) (P.C. = 31)
(METHOD ZWEI:ZMACS-WINDOW COMBINED EDIT) (P.C. = 47)
ZWEI:ZMACS-WINDOW-TOP-LEVEL (P.C. = 46)
SI:PROCESS-TOP-LEVEL (P.C. = 121)
24-Feb-83 01:56:20-EST,1886;000000000000
Date: Thursday, 24 February 1983, 01:50-EST
From: Gavan Duffy <GAVAN at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In Release 4.1, System 222.171, site configuration 16, on Lisp Machine Apiary-1:

I had two windows.  One was a regular zwei and the other, in ztop mode
partially covered it.  I got this error in the ztop window, but only
after trying to abort out of an error (unbound argument) of my own making.

>>Trap: The state of the stack group, #<DTP-STACK-GROUP "ZMACS-WINDOWS" 2334105>, given to #<DTP-STACK-GROUP "ZMACS-WINDOWS" 2334105>, was invalid.
While in the function "ZMACS-WINDOWS"  (:METHOD ZWEI:ZTOP-STREAM-MIXIN :STREAM-RUBOUT-HANDLER)  (:METHOD ZWEI:EDITOR-STREAM-MIXIN :ANY-TYI)


"ZMACS-WINDOWS":
 Local -1: 0.


"ZMACS-WINDOWS":

(:METHOD ZWEI:ZTOP-STREAM-MIXIN :STREAM-RUBOUT-HANDLER):  (P.C. = 103)
   (SELF = #<ZTOP-STREAM-FROM-WINDOW 20555726>)
   Arg 0 (OPERATION): :STREAM-RUBOUT-HANDLER

(:METHOD ZWEI:EDITOR-STREAM-MIXIN :ANY-TYI):  (P.C. = 142)
   (SELF = #<ZTOP-STREAM-FROM-WINDOW 20555726>)
   Arg 0 (OPERATION): :ANY-TYI
   --Defaulted args:--
   Arg 1 (IGNORE): NIL

(:METHOD TV:LIST-TYI-MIXIN TYI):  (P.C. = 24)
   (SELF = #<ZTOP-STREAM-FROM-WINDOW 20555726>)
   Arg 0 (OPERATION): TYI
   --Defaulted args:--
   Arg 1 (IGNORE): NIL

SI:XR-XRTYI-WHITE-OUT:  (P.C. = 40)
   Arg 0 (STREAM): TERMINAL-IO-SYN-STREAM

SI:XR-READ-THING:  (P.C. = 120)
   Arg 0 (STREAM): TERMINAL-IO-SYN-STREAM

READ-FOR-TOP-LEVEL:  (P.C. = 124)
   Rest arg (READ-ARGS): (TERMINAL-IO-SYN-STREAM SI:NO-EOF-OPTION)

(:METHOD ZWEI:EDITOR-STREAM-MIXIN RUBOUT-HANDLER):  (P.C. = 324)
   (SELF = #<ZTOP-STREAM-FROM-WINDOW 20555726>)
   Arg 0 (OPERATION): RUBOUT-HANDLER
   Arg 1 (RUBOUT-HANDLER-ARGS): NIL
   Arg 2 (FUNCTION): #<DTP-FEF-POINTER READ-FOR-TOP-LEVEL 10355236>
   Rest arg (ARGS): (TERMINAL-IO-SYN-STREAM SI:NO-EOF-OPTION)
24-Feb-83 03:46:24-EST,388;000000000000
Date: Thursday, 24 February 1983, 03:42-EST
From: John C. Mallery <JCMa at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In Experimental MIT-Specific 18.1, Experimental System 93.11,
Experimental ZMail 49.5, microcode 226, Yow!  Winning away!,
on Lisp Machine Two:

Pop up windows in Converse don't seem to be working properly.  They don't 
stay up.  Sometimes they come in as notification.
24-Feb-83 03:56:28-EST,2198;000000000000
Date: Thursday, 24 February 1983, 03:53-EST
From: John C. Mallery <JCMa at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In Experimental MIT-Specific 18.1, Experimental System 93.11,
Experimental ZMail 49.5, microcode 226, Yow!  Winning away!,
on Lisp Machine Two:


Insert your description of the circumstances here:

I typed C-X 2 and zwei lost.


>>TRAP 16234 (TRANS-TRAP)
The instance variable START-BP is unbound in #<ZMACS-WINDOW-PANE Zmacs Window Pane 2 15426231 deactivated>.
Backtrace from the debugger:

SET-WINDOW-INTERVAL-1 (P.C. = 77)

 Arg 0 (WINDOW): #<ZMACS-WINDOW-PANE Zmacs Window Pane 2 15426231 deactivated>
 Arg 1 (INTERVAL): #<ZMACS-BUFFER "ZWEI.LISP PS:<JCMA> OZ:" 30214061>
Local 0 (FIRST-BP): NIL


(:METHOD ZMACS-WINDOW :SET-INTERVAL-INTERNAL) (P.C. = 103)

 Arg 0 (OPERATION): :SET-INTERVAL-INTERNAL
 Arg 1 (BUFFER): #<ZMACS-BUFFER "ZWEI.LISP PS:<JCMA> OZ:" 30214061>


FUNCALL (P.C. = 25)

 Arg 0 (FN): #<ZMACS-WINDOW-PANE Zmacs Window Pane 2 15426231 deactivated>
 Rest arg (ARGS): (:SET-INTERVAL-INTERNAL #<ZMACS-BUFFER "ZWEI.LISP PS:<JCMA> OZ:" 30214061>)


(:METHOD DISPLAYER :AFTER :INIT) (P.C. = 34)

 Arg 0 (OPERATION): :INIT
 Arg 1 (IGNORE): #<DTP-LOCATIVE 22741054>


(:METHOD ZMACS-WINDOW-PANE :COMBINED :INIT) (P.C. = 254)

 Rest arg (.DAEMON-CALLER-ARGS.): (:INIT #<DTP-LOCATIVE 22741054>)
Local 1 (.DAEMON-MAPPING-TABLE.): #<ART-16B-6 16010341>
Local 2 (.VAL1.): #<ZMACS-WINDOW-PANE Zmacs Window Pane 2 15426231 deactivated>
Local 3 (.VAL2.): NIL
Local 4 (.VAL3.): NIL


Remainder of stack:

TV:MAKE-WINDOW (P.C. = 151)
(:METHOD ZWEI-FRAME :CREATE-WINDOW) (P.C. = 54)
(:METHOD ZMACS-FRAME :TWO-EDITOR-WINDOWS) (P.C. = 116)
SWITCH-WINDOWS (P.C. = 72)
COM-TWO-WINDOWS (P.C. = 27)
COMMAND-EXECUTE (P.C. = 100)
MAKE-EXTENDED-COMMAND-INTERNAL (P.C. = 103)
COMMAND-EXECUTE (P.C. = 100)
PROCESS-COMMAND-CHAR (P.C. = 67)
(:METHOD WINDOW :EDIT) (P.C. = 465)
(:INTERNAL (:METHOD ZMACS-WINDOW :COMBINED :EDIT) 0) (P.C. = 74)
FUNCALL (P.C. = 25)
(:METHOD DISPLAYER :AROUND :EDIT) (P.C. = 31)
(:METHOD ZMACS-WINDOW :COMBINED :EDIT) (P.C. = 47)
ZMACS-WINDOW-TOP-LEVEL (P.C. = 46)
SI:PROCESS-TOP-LEVEL (P.C. = 121)
24-Feb-83 05:01:28-EST,1099;000000000000
Date: 24 Feb 1983 0456-EST
From: Robert W. Kerns <RWK at SCRC-TENEX>
To: pgs at MIT-OZ, BUG-LISPM at MIT-OZ
cc: RWK at SCRC-TENEX
In-Reply-To: The message of Wednesday, 23 February 1983, 22:59-EST from Patrick Sobalvarro <pgs at MIT-OZ>

VMS is built out of some of the same stuff TOPS-20 is.
It's modularized a bit differently in Brand S, but
the effect is much the same.  In this case, however,
I don't think the problem is on the LM side.  I think
you're running obsolete Chaosnet software on VULCAN.
In fact, I'm not sure how you got this particular
version, since that bug did not exist very long.
(The bug is a lack of a trailing newline after your
personal name in the LOGIN response).

I'm not sure how to handle getting you new software
for that machine.  I've never even heard of it.  I
really don't want to send more than two or three
Chaosnet tapes per release to MIT.  Who should we
send a tape to for the Tech Square VMS vaxen?


PS.  that's VMS *PATHNAMES* I'm talking
about on the first line, not the fct that they're
both written in assembler....
-------
24-Feb-83 05:41:46-EST,1686;000000000000
Mail-From: IAN created at 24-Feb-83 05:40:21
Date: 24 February 1983  05:40-EST (Thursday)
From: Ian Macky <Ian @ MIT-OZ>
To:   Info-LISPM @ MIT-OZ
cc:   RMS @ MIT-OZ, Gumby @ MIT-OZ, HDT @ MIT-OZ, PGS @ MIT-OZ, MMcM @ SCRC
Subject: The last word on GMSGS (don't you dare reply to this message!)


OK, ok...  noone's ever happy.  Here's the final word on the Twenex GMSGS
server.

Since it's supposed to be compatible with the ITS one, it takes the same
set of arguments:  To specify the user whose messages are to be gotten,
give his username, or a filespec (the directory is the username (sigh)).

The default messages to get are the System ones.  You can specify FORUM
or /FORUM to get those (currently the only other BBD we use), or ALL or
/ALL to get all BBDs.

The stuff is put by default in PS:<username>MAIL.TXT, but if you specify
/ZMAIL, it goes in PS:<username>ZMAIL.TXT;  if you say /INTO you can then
specify an arbitrary output file.

The /MAIL switch remails all the messages through the mailer, so that
any bizarre forwarding you are doing will work.

/NOISY and /SILENT control how much output the thing sends back to you.
Normally you'll get "[There are messages]" or "[No messages]", but with
/SILENT you get nothing.  I can't remember what /NOISY does... I just
remember that it prints out more junk in cases where it wouldn't
normally.


I kludged around having to put some sort of terminator at the end of
the command line, so do whatever silly things you want... put a CR or
a NEWLINE or nothing... It don't care...  It equally and fairly mutilates
EVERYTHING you give it.


That's it.   Don't send bug reports....


Ian
24-Feb-83 09:23:30-EST,997;000000000000
Mail-From: RMS created at 24-Feb-83 09:21:53
Date: 24 Feb 1983 0921-EST
From: RMS at MIT-OZ
Subject: Functions MAIL and DIRED now use ZMACS.
To: info-lispm at MIT-OZ

Starting in 93.15, the functions MAIL and DIRED now use a ZMACS
frame to do the editing, rather than a special-purpose window.
They know how to find a ZMACS frame which is idle waiting for
commands, or to create one if necessary.

Some of the advantages include the ability to switch from
the one directory or message to other things without any more
window switching.  However, there are various reasons people
might not like this--I can't tell.  Therefore, there is a variable
ZWEI:*MAIL-AND-DIRED-USE-ZMACS*, which if set to NIL brings
back the old behavior.

I would like to know whether anyone dislikes the new way,
and, if so, why.  I would like to flush the complexity of
providing the old way if nobody can point to a reason for it.
Or make it the default again if there is a reason for it.
-------
24-Feb-83 09:35:16-EST,237;000000000000
Mail-From: RMS created at 24-Feb-83 09:23:14
Date: 24 Feb 1983 0923-EST
From: RMS at MIT-OZ
To: JCMa at MIT-OZ
cc: bug-lispm at MIT-OZ
In-Reply-To: Your message of 24-Feb-83 0356-EST

The bug in C-X 2 is fixed in 93.14.
-------
24-Feb-83 12:42:25-EST,390;000000000000
Date: Thursday, 24 February 1983, 12:24-EST
From: Webster Dove <dove at MIT-DSPG>
To: BUG-LISPM at MIT-OZ

In Experimental MIT-Specific 18.1, Experimental System 93.15,
Experimental ZMail 49.7, microcode 226, gc@2, on Arthur Dent:

In
dired,
directories
are
coming
out
in
upper
case.
I
don't
understand
why
this
buffer
is
wrapping
with
such
a
short
distance!!!
24-Feb-83 13:11:36-EST,561;000000000000
Date: Thursday, 24 February 1983, 13:09-EST
From: Patrick Sobalvarro <PGS at MIT-OZ>
To: dove at MIT-DSPG, BUG-LISPM at MIT-OZ
In-reply-to: The message of 24 Feb 83 12:24-EST from Webster Dove <dove at MIT-DSPG>

In dired, to the best of my knowledge, directories are always printed in upper
case, right?  Or do you mean Unix directories?  Maybe you should be a little
more specific?

Short wrapping never happens for me, and I use auto fill mode.  Perhaps you
should examine your fill column.  You probably typed C-U C-X F, or something
like that.
24-Feb-83 13:40:17-EST,340;000000000000
Date: Thursday, 24 February 1983, 13:33-EST
From: Cliff Lasser <CAL at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In Experimental MIT-Specific 18.1, Experimental System 93.15,
Experimental ZMail 49.7, microcode 226, gc@2, on Lisp Machine Eight:

When I try mailing a very large message (~29k chars) I get stuck in a 
"chaosnet input" state.
24-Feb-83 19:13:35-EST,207;000000000000
Date: 24 Feb 1983 19:07:56-EST
From: dove at mit-dspg
Subject: unix dirs and upper
To: PGS at mit-oz
Cc: bug-lispm at mit-oz

Unix dirs are NOT upper.
Thus I was surprised to see them upper in dired
24-Feb-83 20:31:09-EST,840;000000000000
Mail-From: SAUND created at 24-Feb-83 20:27:10
Date: 24 Feb 1983 2027-EST
From: SAUND at MIT-OZ
Subject: broken lisp machine
To: bug-lispm at MIT-OZ
cc: bug-hardware at MIT-OZ

One of the lisp machines in the 3rd floor robotics lounge is broken.
This must be either CADR-19 or CADR-31.  It cold boots and appears
normal, but halts soon after it is made to do work.  Typically it will
halt upon trying to read a file into an editor buffer.  Warm booting 
gives an error message which resembles "disk read error unit foo cyl bar
surface meef".        At the time the machine was running the band
which had system 93.11, but I see that somebody is playing with the 
machine and changing the current band even as I write this so I don't
know what state the machine will be in when you repairmen get to it.
-Eric Saund
-------
24-Feb-83 22:01:40-EST,1553;000000000000
Mail-From: JFC created at 24-Feb-83 21:57:27
Date: 24 Feb 1983 2157-EST
From: JFC at MIT-OZ
Subject: broken lispm
To: bug-lispm at MIT-OZ
cc: bug-hardware at MIT-OZ, saund at MIT-OZ

	24-Feb-83 20:30:43-EST,840;000000000001
	Mail-From: SAUND created at 24-Feb-83 20:27:10
	Date: 24 Feb 1983 2027-EST
	From: SAUND at MIT-OZ
	Subject: broken lisp machine
	To: bug-lispm at MIT-OZ
	cc: bug-hardware at MIT-OZ
	
	One of the lisp machines in the 3rd floor robotics lounge is broken.
	This must be either CADR-19 or CADR-31.  It cold boots and appears
	normal, but halts soon after it is made to do work.  Typically it will
	halt upon trying to read a file into an editor buffer.  Warm booting 
	gives an error message which resembles "disk read error unit foo cyl bar
	surface meef".        At the time the machine was running the band
	which had system 93.11, but I see that somebody is playing with the 
	machine and changing the current band even as I write this so I don't
	know what state the machine will be in when you repairmen get to it.
	-Eric Saund
	-------
I think this was caused by the garbage collector being left on by whoever used the machine
before Eric. Apparently the garbage collector doesnt work in system 93, or should I say
microcode 226. The band that didnt work on cadr31 was 93.11,gc@2 mcr226. I tried running
the 93.10,GC@3 band from cadr18 on cadr30 but that also illops shortly after the
garbage collector is turned on. The illops were to locations 5310 and 5315 in the scavenger. 
-JfC
-------
24-Feb-83 22:57:39-EST,525;000000000000
Date: Thursday, 24 February 1983, 22:41-EST
From: David C. Plummer <DCP at SCRC-TENEX>
Subject: Those mythical chaos BRD packets
To: network at scrc, bug-lispm at oz, bug-its at mc, bug-twenex at xx,
    chaos-ncp-people at mc, bug-minits at mc, unix-chaos at vx,
    mit-in-people at mc

I implemented chaos BRD packets in MINITS today.  They seem to work.

I also hacked some code for the Lisp Machine to actually test it, but it's
just as gross and ugly as the rest of the current LispM chaos
implementation. 
25-Feb-83 01:54:18-EST,845;000000000000
Date: Friday, 25 February 1983, 01:48-EST
From: Richard M. Stallman <RMS at MIT-OZ>
To: jfc at MIT-OZ
CC: bug-lispm at MIT-OZ

Look at the variable SI:LOGIN-HISTORY in the band that won't gc.
Does it have any entries for CADR-5?  If so, you had better replace
that band.  CADR-5 has a bad spot in its PAGE partition, and all bands
updated and dumped on it are likely to have garbaged data in them.

It is also possible that there is some circumstance which creates
data that the garbage collector loses on.  I know that GC normally
works, as I have done several full GCs in system 93, but there
may be some kind of data object that it loses on, or something
may create malformed data.  If this is so, I will have to be
shown how to reproduce the situation in which GC fails, or shown
a machine which has crashed in that manner.25-Feb-83 02:03:15-EST,278;000000000000
Date: Friday, 25 February 1983, 01:57-EST
From: John Canny <JfC at MIT-OZ>
To: bug-lispm at MIT-OZ

Lispm-31 is consistently dying with parity errors now. and its happening with different 
bands, one of which just loaded. CC-TEST-MACHINE and CC-RUN-MTEST were Ok.

-JfC
25-Feb-83 02:28:02-EST,190;000000000000
Date: Friday, 25 February 1983, 02:25-EST
From: Richard M. Stallman <RMS at MIT-OZ>
To: jfc at MIT-OZ
CC: bug-lispm at MIT-OZ

I believe I have found the GC bug and fixed it in 93.16.
25-Feb-83 02:37:53-EST,3945;000000000000
Date: Friday, 25 February 1983, 02:35-EST
From: David Vinayak Wallace <Gumby at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In Experimental MIT-Specific 18.1, Experimental System 93.15,
Experimental ZMail 49.7, microcode 226, gc@2, on Lisp Machine Nine:

Insert your description of the circumstances here:

I did Kill Or Save Buffers.

>>ERROR: Illegal request format
Backtrace from the debugger:

FS:LOGIN-HOST-UNIT (P.C. = 735)

 Arg 0 (UNIT): #<HOST-UNIT 23740672>
 Arg 1 (LOGIN-P): T
 Arg 2 (UNAME-HOST): #<TOPS20-CHAOS-HOST MIT-OZ>
Local 0 (HOST): #<TOPS20-CHAOS-HOST MIT-OZ>
Local 1 (CONN): #<CHAOS Connection to MIT-OZ FILE 1 30041774>
Local 2 (SUCCESS): NIL
Local 3 (PKT): #<CHAOS Packet 30042306>
Local 4 (ID): "T1105"
Local 5 (PASSWORD): "*damn"
Local 6 (ACCOUNT): ""
Local 7 (NEED-PASSWORD): NIL
Local 8 (NEW-USER-ID): "gumby"
Local 9 (NID): NIL
Local 10 (CONN1): NIL
Local 11 (G7043): ((FS:LOGIN-PROBLEMS SI:CONDITION-CASE-THROW FS:G7057) (SYS:REMOTE-NETWORK-ERROR SI:CONDITION-CASE-THROW FS:G6808) (SYS:REMOTE-NETWORK-ERROR SI:CONDITION-CASE-THROW FS:G7397))
Local 12 (G7044): (FS:LOGIN-PROBLEMS SI:CONDITION-CASE-THROW FS:G7057)
Local 13 (CONN1): NIL
Local 14 (*SELECTQ-ITEM*): NIL
Local 15 (STR): " ERROR BUG F Illegal request format"
Local 16 (IDX): NIL
Local 17 (HSNAME-PATHNAME): NIL
Local 18 (PERSONAL-NAME): NIL
Local 19 (GROUP): NIL
Local 20 (PERSONAL-NAME-1): NIL
Local 21 (ITEM): NIL
Local 22 (ALIST-ELEMENT): NIL


(METHOD FS:FILE-HOST-TOPS20-MIXIN LOGIN-UNIT) (P.C. = 54)

 Arg 0 (OPERATION): LOGIN-UNIT
 Arg 1 (UNIT): #<HOST-UNIT 23740672>
 Arg 2 (LOGIN-P): T
Local 0 (CONN): #<CHAOS Connection to MIT-OZ FILE 1 30041774>


(METHOD FS:HOST-UNIT VALIDATE-CONTROL-CONNECTION) (P.C. = 231)

 Arg 0 (OPERATION): VALIDATE-CONTROL-CONNECTION
 Arg 1 (NO-ERROR-P): T
Local 0 (G6800): #<DTP-LOCATIVE 23740677>
Local 1 (G6801): T
Local 2 (DATA-CONN): NIL
Local 3 (G6802): (SYS:REMOTE-NETWORK-ERROR SI:CONDITION-CASE-THROW FS:G6808)
Local 4 (G6810): ((SYS:REMOTE-NETWORK-ERROR SI:CONDITION-CASE-THROW FS:G6808) (SYS:REMOTE-NETWORK-ERROR SI:CONDITION-CASE-THROW FS:G7397))
Local 5 (*SELECTQ-ITEM*): NIL


(METHOD FS:FILE-HOST-MIXIN GET-HOST-UNIT) (P.C. = 46)

 Arg 0 (OPERATION): GET-HOST-UNIT
   --Defaulted args:--
 Arg 1 (NOERROR-P): NIL
Local 0 (UNIT): #<HOST-UNIT 23740672>
Local 1 (G6904): NIL


FS:OPEN-CHAOS (P.C. = 460)

 Arg 0 (HOST): #<TOPS20-CHAOS-HOST MIT-OZ>
 Arg 1 (PATHNAME): #FS:TOPS20-PATHNAME "OZ:PS:<HACTRN.SOURCE>FMACS.LSP"
 Arg 2 (OPTIONS): (CHARACTERS T DIRECTION NIL ...)
Local 0 (MODE): PROBE
Local 1 (TYPE): CHARACTER
Local 2 (ERROR-P): NIL
Local 3 (TEMPORARY-P): NIL
Local 4 (DELETED-P): NIL
Local 5 (RAW-P): NIL
Local 6 (SUPER-IMAGE-P): NIL
Local 7 (BYTE-SIZE): DEFAULT
Local 8 (PRESERVE-DATES-P): NIL
Local 9 (DISALLOW-ACCESS-ERROR): NIL
Local 10 (HOST-UNIT): NIL
Local 11 (DATA-CONN): NIL
Local 12 (PKT): NIL
Local 13 (SUCCESS): NIL
Local 14 (STRING): NIL
Local 15 (DIRECTION): NIL
Local 16 (KEY): ERROR
Local 17 (VAL): NIL
Local 18 (G7390): (SYS:REMOTE-NETWORK-ERROR SI:CONDITION-CASE-THROW FS:G7397)
Local 19 (ERROR-OBJECT): NIL
Local 20 (G7399): ((SYS:REMOTE-NETWORK-ERROR SI:CONDITION-CASE-THROW FS:G7397))
Local 21 (PROPERTIES): NIL
Local 22 (ERROR-OBJECT): NIL
Local 23 (*SELECTQ-ITEM*): NIL
Local 24 (IGNORE): NIL


Remainder of stack:

(METHOD FS:CHAOS-PATHNAME OPEN) (P.C. = 30)
OPEN (P.C. = 564)
ZWEI:SAVE-BUFFER (P.C. = 114)
ZWEI:COM-KILL-OR-SAVE-BUFFERS (P.C. = 267)
ZWEI:COM-EXTENDED-COMMAND (P.C. = 67)
ZWEI:COMMAND-EXECUTE (P.C. = 100)
ZWEI:PROCESS-COMMAND-CHAR (P.C. = 67)
(METHOD ZWEI:WINDOW EDIT) (P.C. = 465)
(INTERNAL (METHOD ZWEI:ZMACS-WINDOW COMBINED EDIT) 0) (P.C. = 74)
FUNCALL (P.C. = 25)
(METHOD ZWEI:DISPLAYER AROUND EDIT) (P.C. = 31)
(METHOD ZWEI:ZMACS-WINDOW COMBINED EDIT) (P.C. = 47)
ZWEI:ZMACS-WINDOW-TOP-LEVEL (P.C. = 46)
SI:PROCESS-TOP-LEVEL (P.C. = 121)
25-Feb-83 10:38:42-EST,324;000000000000
Date: Friday, 25 February 1983, 10:37-EST
From: Andrew L. Ressler <ALR at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In Experimental MIT-Specific 18.1, Experimental System 93.17,
Experimental ZMail 49.7, microcode 226, gc@2, on Lisp Machine Eight:

Ctrl-X 2 in ZMACS hangs in RUN.  Selecting a buffer with the mouse fixes it.25-Feb-83 17:54:35-EST,618;000000000000
Return-path: <Zvona@MIT-OZ>
Date: Friday, 25 February 1983, 17:52-EST
From: David Chapman <Zvona@MIT-OZ>
Subject: weirdness
To: BUG-lispm@MIT-OZ

In Release 4.1, System 222.171, site configuration 16, on Lisp Machine Six:

cadr 6 non-deterministically gets fasl-group-overflow and
fasl-group-nibble-without-check-bit errors. Retrying the load will
always eventually win, although it may take a few tries, losing at
different places.  <cm.sym>sym.qbin is especially a culprit.  This SEEMS
to be specific to cadr6; it is hard to imagine a hardware problem doing
this, so maybe there is a bashed band here?
25-Feb-83 18:39:52-EST,2249;000000000000
Date: Friday, 25 February 1983, 18:35-EST
From: John C. Mallery <JCMa at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In Experimental MIT-Specific 18.1, Experimental System 93.18,
Experimental ZMail 49.8, microcode 226, Up, up and away!,
on Lisp Machine One:


Insert your description of the circumstances here:

Tried to expunge  a directory on FC:

>>ERROR: Can't expunge on this host for FC: jcma; *#*
Backtrace from the debugger:

FS:DIRECTORY-OPERATION-CHAOS (P.C. = 136)

 Arg 0 (OPERATION): EXPUNGE
 Arg 1 (HOST): #<LMFILE-CHAOS-HOST FC>
 Arg 2 (PATHNAME): #FS:LMFILE-PATHNAME "FC: jcma; *#*"
 Arg 3 (ERROR-P): T
Local 0 (HOST-UNIT): #<HOST-UNIT 30305432>
Local 1 (PKT): #<CHAOS Packet 33434421>
Local 2 (SUCCESS): NIL
Local 3 (FILE-STRING): " ERROR FOO F Can't expunge on this host"
Local 4 (START): NIL
Local 5 (IGNORE): NIL


(METHOD FS:LMFILE-PATHNAME EXPUNGE) (P.C. = 62)

 Arg 0 (OPERATION): EXPUNGE
 Rest arg (G8000): NIL
Local 1 (ERROR): T


FS:EXPUNGE-DIRECTORY (P.C. = 154)

 Arg 0 (PATHNAME): #FS:LMFILE-PATHNAME "FC: jcma; *#*"
 Rest arg (OPTIONS): NIL
Local 1 (ERROR): T
Local 2 (G6422): (FS:FILE-ERROR SI:CONDITION-CASE-THROW FS:G6421)
Local 3 (G6423): ((FS:FILE-ERROR SI:CONDITION-CASE-THROW FS:G6421))
Local 4 (ERROR-OBJECT): NIL
Local 5 (*SELECTQ-ITEM*): NIL


ZWEI:DIRED-PROCESS-FILES (P.C. = 520)

Local 0 (LINE): ""
Local 1 (UNDELETEABLE): T
Local 2 (DELETE-FILES): ("D     1#1              4   3091(8)     !   02//05//82 07:21:47              JCMa")
Local 3 (UNDELETE-FILES): NIL
Local 4 (FIND-FILES): NIL
Local 5 (PRINT-FILES): NIL
Local 6 (APPLY-FILES): NIL
Local 7 (LAST-LINE): ""
Local 8 (QUERY-RESULT): EXPUNGE
Local 9 (DELETED-P): NIL
Local 10 (*SELECTQ-ITEM*): 40
Local 11 (BLOCKS-FREED): 0
Local 12 (LINE): NIL


ZWEI:COM-DIRED-EXIT (P.C. = 31)



Remainder of stack:

ZWEI:COMMAND-EXECUTE (P.C. = 100)
ZWEI:PROCESS-COMMAND-CHAR (P.C. = 67)
(METHOD ZWEI:WINDOW EDIT) (P.C. = 465)
(INTERNAL (METHOD ZWEI:ZMACS-WINDOW COMBINED EDIT) 0) (P.C. = 74)
FUNCALL (P.C. = 25)
(METHOD ZWEI:DISPLAYER AROUND EDIT) (P.C. = 31)
(METHOD ZWEI:ZMACS-WINDOW COMBINED EDIT) (P.C. = 47)
ZWEI:ZMACS-WINDOW-TOP-LEVEL (P.C. = 46)
SI:PROCESS-TOP-LEVEL (P.C. = 121)
26-Feb-83 18:47:47-EST,1072;000000000000
Date: Saturday, 26 February 1983, 16:40-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: weirdness
To: David Chapman <Zvona at MIT-OZ>
Cc: BUG-lispm at MIT-OZ
In-reply-to: The message of 25 Feb 83 17:52-EST from David Chapman <Zvona at MIT-OZ>

    Date: Friday, 25 February 1983, 17:52-EST
    From: David Chapman <Zvona@MIT-OZ>
    In Release 4.1, System 222.171, site configuration 16, on Lisp Machine Six:

    cadr 6 non-deterministically gets fasl-group-overflow and
    fasl-group-nibble-without-check-bit errors. Retrying the load will
    always eventually win, although it may take a few tries, losing at
    different places.  <cm.sym>sym.qbin is especially a culprit.  This SEEMS
    to be specific to cadr6; it is hard to imagine a hardware problem doing
    this, so maybe there is a bashed band here?
Maybe your Chaosnet interface has stopped doing CRC checking.
You could see whether that error count is non-zero (in hostat).
It's more likely to be the network than anything in the processor,
if that's the only thing that fails.
27-Feb-83 11:15:18-EST,263;000000000000
Mail-From: AGRE created at 27-Feb-83 11:14:37
Date: Sunday, 27 February 1983  11:14-EST
Sender: AGRE @ MIT-OZ
From: AGRE @ MIT-MC
To:   bug-lispm @ MIT-OZ

Last night for several hours (roughly between 1 and 6), I was routinely able
to make mail originat
27-Feb-83 11:37:39-EST,2128;000000000000
Date: Sunday, 27 February 1983, 11:31-EST
From: Philip E. Agre <Agre at MIT-OZ>
Subject: Disappearing mail [sorry about previous losing message]
To: BUG-LISPM at MIT-OZ, bug-xmailr at MIT-OZ

In Release 4.1, System 222.171, site configuration 14, on Lisp Machine Nine:

Last night between about 1 and 6 I was routinely able to make mail from
the Lisp Machine to addresses on OZ disappear without a trace.  It would
happen from either Reply or Mail in Zmail or from M-X Mail in Zwei.
When I hit the End key to send the message, "Connect OZ" would show up
at the bottom of the screen for about 3 seconds, replaced by randomness
and then "Connect MC" for about .5 second.  There would then appear an
announcement like "Message of 03:16 successfully sent through MC."
Frequently I would then receive a notification of new mail (as would
other addressees on the messages), but the message would never show up
in anyone's mail file.  I first noticed this with a page-long message to
CM-I, for which Zvona says he got an announcement but could never find
the message.  When he told me this I went looking for the message and
couldn't find it anywhere on either MC or OZ.  I then began sending
myself messages with all combinations of source and destination.  Mail
from any LispM program to either Agre@OZ or Agre@MC (which is forwarded
to Agre@OZ) would sometimes produce a "[05:10 AGRE has new mail...]"
notification but I could never see them.  Mail from OZ to Agre@OZ
worked, though it took its time about it.  I tired of the chase and went
off for a few hours, and when I came back I could no longer reproduce
the effect, since "Connect OZ" was now working and the announcements
would say things like "Message of 11:15 successfully sent through OZ."

I haven't been able to determine what program is at fault; the two main
candidates are Zmail (or at least the LispM's mail-sending subroutine)
and Xmailr.  It didn't occur to me to try sending mail from system 93;
sorry.  In any event, needless to say, disappearing mail is a very bad
scene, and I hope something can be done about it.

 - phiL
27-Feb-83 15:04:59-EST,3260;000000000000
Mail-From: JSOL created at 27-Feb-83 14:58:56
Date: Sunday, 27 February 1983  14:58-EST
Sender: JSOL @ MIT-OZ
From: Jon Solomon <JSol%MIT-OZ @ MIT-MC>
To:   Philip E. Agre <Agre @ MIT-OZ>, BUG-MAIL @ MIT-MC
Cc:   BUG-LISPM @ MIT-OZ, bug-xmailr @ MIT-OZ
Subject: Disappearing mail [sorry about previous losing message]
Phase-Of-The-Moon: FM+18H.13M.26S.
In-reply-to: Msg of 27 Feb 1983 11:31-EST from Philip E. Agre <Agre>

    Date: Sunday, 27 February 1983, 11:31-EST
    From: Philip E. Agre <Agre>
    To:   BUG-LISPM, bug-xmailr
    Re:   Disappearing mail [sorry about previous losing message]

    In Release 4.1, System 222.171, site configuration 14, on Lisp Machine Nine:

    Last night between about 1 and 6 I was routinely able to make mail from
    the Lisp Machine to addresses on OZ disappear without a trace.  It would
    happen from either Reply or Mail in Zmail or from M-X Mail in Zwei.
    When I hit the End key to send the message, "Connect OZ" would show up
    at the bottom of the screen for about 3 seconds, replaced by randomness
    and then "Connect MC" for about .5 second.  There would then appear an
    announcement like "Message of 03:16 successfully sent through MC."
    Frequently I would then receive a notification of new mail (as would
    other addressees on the messages), but the message would never show up
    in anyone's mail file.  I first noticed this with a page-long message to
    CM-I, for which Zvona says he got an announcement but could never find
    the message.  When he told me this I went looking for the message and
    couldn't find it anywhere on either MC or OZ.  I then began sending
    myself messages with all combinations of source and destination.  Mail
    from any LispM program to either Agre@OZ or Agre@MC (which is forwarded
    to Agre@OZ) would sometimes produce a "[05:10 AGRE has new mail...]"
    notification but I could never see them.  Mail from OZ to Agre@OZ
    worked, though it took its time about it.  I tired of the chase and went
    off for a few hours, and when I came back I could no longer reproduce
    the effect, since "Connect OZ" was now working and the announcements
    would say things like "Message of 11:15 successfully sent through OZ."

    I haven't been able to determine what program is at fault; the two main
    candidates are Zmail (or at least the LispM's mail-sending subroutine)
    and Xmailr.  It didn't occur to me to try sending mail from system 93;
    sorry.  In any event, needless to say, disappearing mail is a very bad
    scene, and I hope something can be done about it.

     - phiL

I don't think the mail actually disappeared. MC's COMSAT was acting
very strange that night. I couldn't get mail through MC either.
I looked at the STATS file on MC and it kept saying "ICP => MIT-OZ...
Disabled.". It was doing that for EVERY OUTGOING peice of mail during
the time you specified. I think at one point MC was reloaded and the
problem may have fixed itself but I really can't be sure (not knowing
the innards of COMSAT well). I just checked and my mail got through.
Did yours eventually come through (even if it was a couple of days
late?).

Curiouser and curiouser,
--JSol
27-Feb-83 15:28:49-EST,2258;000000000000
Date: Sunday, 27 February 1983, 15:24-EST
From: Cliff Lasser <CAL at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In Experimental MIT-Specific 18.1, Experimental System 93.18,
Experimental ZMail 49.8, microcode 226, gc@2, on Lisp Machine Six:


Insert your description of the circumstances here:

I was in zmacs, did a list fonts then moused one of the fonts.

>>TRAP 3772 (ARGTYP INSTANCE PP 0 XINSTANCE-LOC %INSTANCE-LOC)
The first argument to SYS:%INSTANCE-LOC, SI:TERMINAL-IO-SYN-STREAM, was of the wrong type.
The function expected an instance.
Backtrace from the debugger:

TV:SHEET-GET-SCREEN (P.C. = 27)

 Arg 0 (SHEET): SI:TERMINAL-IO-SYN-STREAM
   --Defaulted args:--
 Arg 1 (HIGHEST): NIL
Local 0 (SUPERIOR): SI:TERMINAL-IO-SYN-STREAM


FED:COM-DISPLAY-FONT (P.C. = 270)

 Arg 0 (FONT): #<FONT TINY 23634222>
 Arg 1 (WINDOW): SI:TERMINAL-IO-SYN-STREAM
 Arg 2 (FROM-FED): NIL
 Arg 3 (CLEAR-FIRST-P): NIL
Local 0 (NAME): FONTS:TINY
Local 1 (FD): #<FONT-DESCRIPTOR 10167120>
Local 2 (DF): NIL
Local 3 (CH): NIL
Local 4 (OCH): NIL
Local 5 (LEN): NIL
Local 6 (CH1): NIL


ZWEI:DISPLAY-FONT (P.C. = 64)

 Arg 0 (FONT-SYMBOL): FONTS:TINY
Local 0 (FONT): #<FONT TINY 23634222>


(SELECT-METHOD ZWEI:PROCESS-SPECIAL-COMMAND TYPEOUT-EXECUTE) (P.C. = 25)

 Arg 0 (IGNORE): TYPEOUT-EXECUTE
 Arg 1 (FUNCTION): ZWEI:DISPLAY-FONT
 Rest arg (ARGS): (FONTS:TINY)


(METHOD ZWEI:WINDOW EDIT) (P.C. = 443)

 Arg 0 (OPERATION): EDIT
   --Defaulted args:--
 Arg 1 (IGNORE): NIL
 Arg 2 (*COMTAB*): #<COMTAB ZWEI:MODE-COMTAB 32656410>
 Arg 3 (*MODE-LINE-LIST*): ("ZMACS " "(" ZWEI:*MODE-NAME-LIST* ") " ...)
 Arg 4 (TOP-LEVEL-P): T
Local 0 (TEM1): ((** ** T ** ...))
Local 1 (G1278): ("Return to top level editor command loop.")
Local 2 (G1278): ((SYS:ABORT ERROR) ("Return to top level editor command loop.") T ("Return to top level editor command loop.") ...)
Local 3 (CH): (TYPEOUT-EXECUTE ZWEI:DISPLAY-FONT FONTS:TINY)


Remainder of stack:

(INTERNAL (METHOD ZWEI:ZMACS-WINDOW COMBINED EDIT) 0) (P.C. = 74)
FUNCALL (P.C. = 25)
(METHOD ZWEI:DISPLAYER AROUND EDIT) (P.C. = 31)
(METHOD ZWEI:ZMACS-WINDOW COMBINED EDIT) (P.C. = 47)
ZWEI:ZMACS-WINDOW-TOP-LEVEL (P.C. = 46)
SI:PROCESS-TOP-LEVEL (P.C. = 121)
27-Feb-83 18:39:43-EST,2933;000000000000
Return-path: <CAL@MIT-OZ>
Date: Sunday, 27 February 1983, 18:36-EST
From: Cliff Lasser <CAL@MIT-OZ>
To: BUG-LISPM@MIT-OZ

In Experimental MIT-Specific 18.1, Experimental System 93.18,
Experimental ZMail 49.8, microcode 226, gc@2, on Lisp Machine Six:


Insert your description of the circumstances here:

I was in profile mode in zmail and hit the abort key.

>>TRAP 1176. (THROW-TAG-NOT-SEEN)
There was no pending *CATCH for the tag ABORT-STANDALONE-EDIT.
The value being thrown was NIL.Backtrace from the debugger:

COM-STANDALONE-ABORT (P.C. = 23)



Additional information supplied with call:
 Expecting 3 values

COMMAND-EXECUTE (P.C. = 100)

 Arg 0 (COMMAND): COM-STANDALONE-ABORT
 Arg 1 (CHAR): 145.
 Arg 2 (PREFIX-CHAR): NIL
 Arg 3 (HOOK-LIST): NIL
Local 0 (G4734): NIL
Local 1 (HOOK): NIL


PROCESS-COMMAND-CHAR (P.C. = 67)

 Arg 0 (CH): 145.
Local 0 (VALUE): NIL
Local 1 (LINE): NIL
Local 2 (INDEX): NIL
Local 3 (G5246): NIL
Local 4 (HOOK): NIL


(:METHOD WINDOW :EDIT) (P.C. = 465)

 Arg 0 (OPERATION): :EDIT
   --Defaulted args:--
 Arg 1 (IGNORE): NIL
 Arg 2 (*COMTAB*): #<COMTAB STANDALONE-COMTAB 24000603>
 Arg 3 (*MODE-LINE-LIST*): ("ZMail " (*EDITING-PROFILE* "Editing ") "Profile " *ZMAIL-INTERVAL-NAME* ...)
 Arg 4 (TOP-LEVEL-P): T
Local 0 (TEM1): ((** ** T ** ...) (** ** T ** ...) (** ** T ** ...))
Local 1 (G1278): ("Return to top level editor command loop.")
Local 2 (G1278): ((SYS:ABORT ERROR) ("Return to top level editor command loop.") T ("Return to top level editor command loop.") ...)
Local 3 (CH): 145.


Additional information supplied with call:
 SYS:ADI-FEXPR-CALL

(:INTERNAL (:INTERNAL (:METHOD ZMAIL-WINDOW :COMBINED :EDIT) 0.) 0.) (P.C. = 72)

 Rest arg (.DAEMON-CALLER-ARGS.): (:EDIT)
Local 1 (.DAEMON-MAPPING-TABLE.): #<ART-16B-14. 17573305>


Remainder of stack:

FUNCALL (P.C. = 25)
(:METHOD DISPLAYER :AROUND :EDIT) (P.C. = 31)
(:INTERNAL (:METHOD ZMAIL-WINDOW :COMBINED :EDIT) 0.) (P.C. = 47)
(:METHOD ZMAIL-WINDOW :AROUND :EDIT) (P.C. = 70)
(:METHOD ZMAIL-WINDOW :COMBINED :EDIT) (P.C. = 45)
(:SELECT-METHOD ZMAIL-PROFILE-COMMAND-LIST :MOUSE-BUTTON) (P.C. = 604)
(:SELECT-METHOD ZMAIL-PROFILE-COMMAND-LIST SELECT-WINDOW) (P.C. = 42)
(:METHOD ZMAIL-PROFILE-FRAME :PROCESS-SPECIAL-COMMAND) (P.C. = 25)
(:SELECT-METHOD ZMAIL-COMMAND-LIST-DEFAULT :MOUSE) (P.C. = 42)
(:METHOD ZMAIL-PROFILE-FRAME :PROCESS-SPECIAL-COMMAND) (P.C. = 25)
...
(:SELECT-METHOD ZMAIL-COMMAND-LIST :MENU) (P.C. = 32)
(:METHOD ZMAIL-FRAME :PROCESS-SPECIAL-COMMAND) (P.C. = 25)
(:METHOD ZMAIL-COMMAND-LOOP-MIXIN :COMMAND-LOOP) (P.C. = 266)
(:INTERNAL (:METHOD ZMAIL-FRAME :COMBINED :COMMAND-LOOP) 0.) (P.C. = 50)
FUNCALL (P.C. = 25)
(:METHOD ZMAIL-COMMAND-LOOP-MIXIN :AROUND :COMMAND-LOOP) (P.C. = 57)
(:METHOD ZMAIL-FRAME :COMBINED :COMMAND-LOOP) (P.C. = 47)
ZMAIL-PROCESS-TOP-LEVEL (P.C. = 115)
SI:PROCESS-TOP-LEVEL (P.C. = 121)
27-Feb-83 21:25:56-EST,623;000000000000
Return-path: <KLH@MIT-MC>
Date: 27 February 1983 21:13 EST
From: Ken Harrenstien <KLH @ MIT-MC>
Subject: Disappearing mail
To: JSol @ MIT-OZ
cc: BUG-MAIL @ MIT-MC, Agre @ MIT-OZ, BUG-LISPM @ MIT-OZ,
    bug-xmailr @ MIT-OZ

On Friday MC's IMP was being taken down for testing, and I disabled
outgoing network mail in COMSAT in order to speed up other things.
I had to leave before they brought the IMP back to life, and 
so COMSAT was still simply queueing net mail until someone re-enabled
it (or the system was rebooted).  Of course CHAOS mail is independent
of the IMP, but it's a pretty general switch...
27-Feb-83 21:27:07-EST,2511;000000000000
Return-path: <Henry@MIT-OZ>
Date: Sunday, 27 February 1983, 21:26-EST
From: Henry Lieberman <Henry@MIT-OZ>
Subject: "Get Inbox" in Zmail
To: BUG-LISPM@MIT-OZ

In Release 4.1, System 222.171, site configuration 16, on Lisp Machine Apiary-1:

After doing a "Get Inbox" in Zmail.
If it matters, Zmail had just finished writing my Babyl file just before this happened.

>>Error: Buffer OZ:PS:<HENRY>HENRY.BABYL is idle, but still points to the active inbox OZ:PS:<HENRY>MAIL.TXT.1.
While in the function ZWEI:COM-GET-INBOX-INTERNAL  ZWEI:COM-GET-INBOX-INTERNAL  ZWEI:COM-GET-NEW-MAIL-FROM-INBOX


ZWEI:COM-GET-INBOX-INTERNAL: (P.C. = 274)
 Arg 0 (FIRST-TIME-P): NIL
 Arg 1 (FOR-BUFFER): #<BABYL-BUFFER "OZ:PS:<HENRY>HENRY.BABYL" 22310606>
 Local 0 (OTHER-BUFFER): #<TENEX-INBOX-BUFFER "OZ:PS:<HENRY>MAIL.TXT.1" 22311237>
 Local 1 (PATHNAME): NIL
 Local 2 (OPTION): NIL
 Local 3 (.SELECTQ-ITEM.): NIL


ZWEI:COM-GET-INBOX-INTERNAL:  (P.C. = 274)
   Arg 0 (FIRST-TIME-P): NIL
   Arg 1 (FOR-BUFFER): #<BABYL-BUFFER "OZ:PS:<HENRY>HENRY.BABYL" 22310606>

ZWEI:COM-GET-INBOX-INTERNAL:  (P.C. = 306)
   Arg 0 (FIRST-TIME-P): NIL
   --Defaulted args:--
   Arg 1 (FOR-BUFFER): #<BABYL-BUFFER "OZ:PS:<HENRY>HENRY.BABYL" 22310606>

ZWEI:COM-GET-NEW-MAIL-FROM-INBOX:  (P.C. = 32)

ZWEI:COMMAND-EXECUTE:  (P.C. = 100)
   Arg 0 (COMMAND): ZWEI:COM-GET-NEW-MAIL-FROM-INBOX
   Arg 1 (CHAR): (MENU ("Get inbox" . ZWEI:COM-GET-NEW-MAIL-FROM-INBOX) 1 #<ZMAIL-MAIN-COMMAND-MENU-PANE Zmail Main Command Menu Pane 1 20524451 exposed>)
   --Defaulted args:--
   Arg 2 (PREFIX-CHAR): NIL
   Arg 3 (HOOK-LIST): NIL

ZWEI:ZMAIL-COMMAND-EXECUTE:  (P.C. = 27)
   Arg 0 (*CURRENT-COMMAND*): ZWEI:COM-GET-NEW-MAIL-FROM-INBOX

(SELECT-METHOD ZWEI:ZMAIL-COMMAND-LIST MENU):  (P.C. = 32)
   Arg 0 (**DEFSELECT-OP**): MENU
   Arg 1 (ITEM): ("Get inbox" . ZWEI:COM-GET-NEW-MAIL-FROM-INBOX)
   Arg 2 (CH): 1
   Arg 3 (WINDOW): #<ZMAIL-MAIN-COMMAND-MENU-PANE Zmail Main Command Menu Pane 1 20524451 exposed>

(METHOD ZWEI:ZMAIL-FRAME PROCESS-SPECIAL-COMMAND):  (P.C. = 23)
   (SELF = #<ZMAIL-FRAME Main Zmail Window 20514744 exposed>)
   Arg 0 (OPERATION): PROCESS-SPECIAL-COMMAND
   Rest arg (ARGS): (MENU ("Get inbox" . ZWEI:COM-GET-NEW-MAIL-FROM-INBOX) 1 #<ZMAIL-MAIN-COMMAND-MENU-PANE Zmail Main Command Menu Pane 1 20524451 exposed>)

(METHOD ZWEI:ZMAIL-FRAME COMMAND-LOOP):  (P.C. = 262)
   (SELF = #<ZMAIL-FRAME Main Zmail Window 20514744 exposed>)
   Arg 0 (OPERATION): COMMAND-LOOP
28-Feb-83 12:04:52-EST,1965;000000000000
Return-path: <kmp@MIT-MC>
Date: Monday, 28 February 1983, 11:59-EST
From: Kent M. Pitman <kmp at MIT-MC>
Subject: Suppressing "[Growing some pdl ...]" messages
To: BUG-LISPM at OZ

In band 8 (Black Magic) with microcode 979 on Lisp Machine Twenty-two,
using KBE 139.2x in Release 4.1, System 222.171 ...

I have a couple of gripes about how pdl overflows are handled...

* If I do 
    (CONDITION-BIND ((SYS:PDL-OVERFLOW #'...)) ...)
  I find that the first pdl overflow is not caught by my handler. Only
  every other time the stack runs out does the pdl get grown. 

  This is bad because I want to write something to keep obnoxious background
  windows from popping up just to say they are growing the stack and I seem
  unable to catch all the occurrences of this.

* Whether I catch it or not, it seems to be the case that messages about
  growing the pdl are something I don't have a choice about getting. If there
  is a way to suppress this, I'm not looking in the right place in the
  documentation and maybe someone should tell me. In any case, ESPECIALLY in
  the case where I have handled the condition by an explicit :GROW-PDL message,
  I don't want the user to have to be bothered by info saying the pdl is being
  grown. If he needed to know, my handler would have typed out for him.

I can see two obvious fixes for this. Maybe there are more:

* You could always signal when you need to grow the stack and let a global 
  handler do the growing. This would allow user programs to over-ride the
  growth if they know better. (I think this is the right solution.)

* You could signal when you plan to type out the obnoxiously irritating message
  saying the stack is being grown (as you do for FQUERY) and give someone a 
  chance to head it off before it makes the user see it.

Can someone comment on why the current behavior is the way it is and whether
any of these fixes seem appropriate? Thanks.
--kmp
28-Feb-83 12:14:51-EST,2010;000000000000
Return-path: <kmp@MIT-MC>
Date: Monday, 28 February 1983, 12:09-EST
From: Kent M. Pitman <kmp at MIT-MC>
Subject: Typing [Abort] after an error, revisited
To: BUG-LISPM at OZ
Cc: USER-INTERFACE at SCRC

In band 8 (Black Magic) with microcode 979 on Lisp Machine Twenty-two,
using KBE 139.2x in Release 4.1, System 222.171 ...

Upwards of twenty times each console session I get an error typing to lisp
and I type C-Abort and see "[Abort]" typed out but nothing happens. It used
to be this would just gronk my lisp completely by interrupting it during
some critical section, and I'm grateful that it doesn't do that any more,
but basically the current behavior is just completely unreasonable.

* From the standpoint of novice users, it must be confusing that the word
  "[Abort]" comes out and yet no abort occurs. This seems to me a very 
  belligerent behavior; like it hears what I said but is just refusing to
  care. At the very least, it should say "[Abort failed]" or some such.

* With respect to response time, I just don't need it to start the debugger,
  set up its stack groups, etc. All I want it to do is to return. I just end
  up twiddling my thumbs for 5 seconds waiting for it to get things back in
  order. This is the same sort of slowness that made many people hate DWIM
  in Interlisp -- the fact that it insisted on using all its overhead even
  when one didn't want it. It seems to me ESSENTIAL that something be done to
  fix this. There must be some way at that time to retrieve the state of the
  error system from before the error handling began and return to the innermost
  thing that c-Abort would have gone to then. ie, the point that I would have
  gone to had I hit c-Abort microseconds earlier just before FOO was noticed
  to be unbound, rather than just after. The current behavior is very painful
  and very embarrassing when doing interactive demos to visiting people who
  we'd like to impress with the usability of our system.

-kmp
28-Feb-83 15:47:37-EST,601;000000000000
Return-path: <Zvona@MIT-OZ>
Date: Monday, 28 February 1983, 15:44-EST
From: David Chapman <Zvona@MIT-OZ>
Subject: how to crash zmacs
To: bug-lispm@MIT-OZ

I have found repeatable conditions under which a new editor will be
consed.  I seem to recall reading that such conditions were being
sought.  

In zmacs, do break (dotimes (i 10000)) and typeahead resume, then do
terminal s to deselect the editor while it is still computing.  When it
has finished computing (as determined by the runbar) do terminal s to
reselect the editor.  It will have consed a new buffer and left you in
it.
28-Feb-83 17:11:08-EST,2533;000000000000
Return-path: <DSH@MIT-ML>
Date: Monday, 28 February 1983, 17:06-EST
From: David S. Hsu <DSH at MIT-ML>
To: BUG-LISPM at OZ

In System 222.170, Hardcopy 11.14, Zmail 74.37, Tape 13.0, LMFS 30.19,
cold load 65, microcode TMC5-MIC 181, site configuration 14, on PI Project:

the destination array I gave to bitblt did not have a first dimension which was 
a multiple of 32 bits, while trying to give me an error message it got this error.

>>Error: Flavor SYS:BITBLT-ARRAY-FRACTIONAL-WORD-WIDTH does not handle the init keyword ARRAY
While in the function INSTANTIATE-FLAVOR  MAKE-CONDITION  DBG:GET-CONDITION


INSTANTIATE-FLAVOR: (P.C. = 324)
 Arg 0 (FLAVOR-NAME): SYS:BITBLT-ARRAY-FRACTIONAL-WORD-WIDTH
 Arg 1 (INIT-PLIST): #<DTP-LOCATIVE 100202>
 Arg 2 (SEND-INIT-MESSAGE-P): T
 Arg 3 (RETURN-UNHANDLED-KEYWORDS-P): NIL
 Arg 4 (AREA-TO-CONS-INSTANCE-IN): 4
 Local 5 (FL): #<FLAVOR SYS:BITBLT-ARRAY-FRACTIONAL-WORD-WIDTH 710026>
 Local 6 (UNHANDLED-KEYWORDS): (ARRAY)
 Local 7 (INSTANCE): #<BITBLT-ARRAY-FRACTIONAL-WORD-WIDTH 36564445>
 Local 8 (VARS): (STATUS DBG:PROCEED-TYPES ARRAY)
 Local 9 (INIT-INFO): (((PROCEED-TYPES 2)) ((STATUS 1 (QUOTE JUST-CREATED))) NIL NIL)
 Local 10 (INITABLE-IVS): ((PROCEED-TYPES 2))


INSTANTIATE-FLAVOR:  (P.C. = 324)
   Arg 0 (FLAVOR-NAME): SYS:BITBLT-ARRAY-FRACTIONAL-WORD-WIDTH
   Arg 1 (INIT-PLIST): #<DTP-LOCATIVE 100202>
   Arg 2 (SEND-INIT-MESSAGE-P): T
   Arg 3 (RETURN-UNHANDLED-KEYWORDS-P): NIL
   Arg 4 (AREA-TO-CONS-INSTANCE-IN): 4

MAKE-CONDITION:  (P.C. = 23)
   Arg 0 (CONDITION-NAME): SYS:BITBLT-ARRAY-FRACTIONAL-WORD-WIDTH
   Rest arg (INIT-OPTIONS): (ARRAY #<ART-4B-8-8 36557521>)

DBG:GET-CONDITION:  (P.C. = 10)
   Arg 0 (FLAVOR): SYS:BITBLT-ARRAY-FRACTIONAL-WORD-WIDTH
   Arg 1 (INIT-OPTIONS): (ARRAY #<ART-4B-8-8 36557521>)

ERROR:  (P.C. = 33)
   Arg 0 (FLAVOR): SYS:BITBLT-ARRAY-FRACTIONAL-WORD-WIDTH
   Rest arg (INIT-OPTIONS): (ARRAY #<ART-4B-8-8 36557521>)

BITBLT:  (P.C. = 136)
   Arg 0 (ALU): 7
   Arg 1 (WIDTH): 100
   Arg 2 (HEIGHT): 100
   Arg 3 (FROM-ARRAY): #<ART-4B-8-8 36557521>
   Arg 4 (FROM-X): 0
   Arg 5 (FROM-Y): 0
   Arg 6 (TO-ARRAY): #<ART-1B-1216-749 34774362>
   Arg 7 (TO-X): 100
   Arg 8 (TO-Y): 100

SI:*EVAL:  (P.C. = 405)
   Arg 0 (FORM): (BITBLT TV:ALU-IOR 100 100 ICON 0 0 (TV:SHEET-SCREEN-ARRAY *PI-WINDOW*) 100 100)

SI:LISP-TOP-LEVEL1:  (P.C. = 130)
   Arg 0 (TERMINAL-IO-initialization): #<LISP-LISTENER Lisp Listener 1 13600240 exposed>

SYS:LISP-TOP-LEVEL:  (P.C. = 7)
28-Feb-83 17:32:58-EST,1337;000000000000
Return-path: <AGRE@MIT-OZ>
Mail-From: AGRE created at 28-Feb-83 17:30:28
Date: Monday, 28 February 1983  17:30-EST
Sender: AGRE @ MIT-OZ
From: AGRE @ MIT-MC
To:   Ken Harrenstien <KLH @ MIT-OZ>
Cc:   BUG-LISPM @ MIT-OZ, BUG-MAIL @ MIT-MC, bug-xmailr @ MIT-OZ,
      JSol @ MIT-OZ
Subject: Disappearing mail
In-reply-to: Msg of 27 Feb 1983 21:13 EST from Ken Harrenstien <KLH>

    Date: 27 February 1983 21:13 EST
    From: Ken Harrenstien <KLH>
    To:   JSol
    cc:   BUG-MAIL at MIT-MC, Agre, BUG-LISPM, bug-xmailr
    Re:   Disappearing mail
    Return-path: <KLH@MIT-MC>

    On Friday MC's IMP was being taken down for testing, and I disabled
    outgoing network mail in COMSAT in order to speed up other things.
    I had to leave before they brought the IMP back to life, and 
    so COMSAT was still simply queueing net mail until someone re-enabled
    it (or the system was rebooted).  Of course CHAOS mail is independent
    of the IMP, but it's a pretty general switch...

Too general.  Oh well, I guess there was only one net when COMSAT was
written.  It's starting to arrive now.  Why does it wait three days?  And
it's curious that it was going through MC at all, since OZ (the host in my
case and the destination address of all the messages) was up and serving
files at the time.  - phiL
28-Feb-83 20:25:31-EST,689;000000000000
Return-path: <JSOL@MIT-OZ>
Mail-From: JSOL created at 28-Feb-83 20:24:43
Date: Monday, 28 February 1983  20:24-EST
Sender: JSOL @ MIT-OZ
From: Jon Solomon <JSol%MIT-OZ @ MIT-MC>
To:   AGRE @ MIT-OZ
Cc:   BUG-LISPM @ MIT-OZ, BUG-MAIL @ MIT-MC, bug-xmailr @ MIT-OZ,
      Ken Harrenstien <KLH @ MIT-OZ>
Subject: Disappearing mail
Phase-Of-The-Moon: FM+1D.23H.43M.45S.
In-reply-to: Msg of 28 Feb 1983  17:30-EST from AGRE

Apparently the mail server got wedged. Also apparently the lisp
machine software will try to deliver to MC if it can't get to OZ?
Also apparently the mail was blocked because KLH disabled outgoing
mail for the IMP testing. 

Does this all make sense?
28-Feb-83 23:07:10-EST,973;000000000000
Return-path: <Moon@SCRC-TENEX>
Date: Monday, 28 February 1983, 23:01-EST
From: David A. Moon <Moon at SCRC-TENEX>
To: David S. Hsu <DSH at MIT-ML>
Cc: BUG-LISPM at MIT-OZ
In-reply-to: The message of 28 Feb 83 17:06-EST from David S. Hsu <DSH at MIT-ML>

    Date: Monday, 28 February 1983, 17:06-EST
    From: David S. Hsu <DSH at MIT-ML>
    In System 222.170, Hardcopy 11.14, Zmail 74.37, Tape 13.0, LMFS 30.19,
    cold load 65, microcode TMC5-MIC 181, site configuration 14, on PI Project:

    the destination array I gave to bitblt did not have a first dimension which was 
    a multiple of 32 bits, while trying to give me an error message it got this error.

    >>Error: Flavor SYS:BITBLT-ARRAY-FRACTIONAL-WORD-WIDTH does not handle the init keyword ARRAY

Thanks for the report.  This has been fixed in the source for a long time,
but evidently was never patched.  It may not be worth patching since it's
only to get the right error message.
 1-Mar-83 00:53:38-EST,1616;000000000000
Return-path: <Moon@SCRC-TENEX>
Date: Tuesday, 1 March 1983, 00:50-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: Typing [Abort] after an error, revisited
To: Kent M. Pitman <kmp at MIT-MC>
Cc: BUG-LISPM at MIT-OZ, USER-INTERFACE at SCRC-TENEX
In-reply-to: The message of 28 Feb 83 12:09-EST from Kent M. Pitman <kmp at MIT-MC>

    Date: Monday, 28 February 1983, 12:09-EST
    From: Kent M. Pitman <kmp at MIT-MC>

    Upwards of twenty times each console session I get an error typing to lisp
    and I type C-Abort and see "[Abort]" typed out but nothing happens.

In patch 222.179, I fixed the code in the trap interceptor that was
there all along trying to make this work so that it would really work.
DLA evidently thought he was writing in Common Lisp, where catch works
the way you would expect with multiple values.  This was also the source
of the machine crashing if you invoked the restart handler named "trap
interceptor".

    * From the standpoint of novice users, it must be confusing that the word
      "[Abort]" comes out and yet no abort occurs. This seems to me a very 
      belligerent behavior; like it hears what I said but is just refusing to
      care. At the very least, it should say "[Abort failed]" or some such.
This is a good point.  Fixed and patched too.

There is still inherent unrobustness here, due to the brain-damaged way that
the debugger works on the A machine.  Now at least if it ignores an Abort it
will tell you, and the most usual case works.  On the L machine of course
there is no problem and the debugger is always abortable.
 1-Mar-83 03:05:44-EST,556;000000000000
Return-path: <JfC@MIT-OZ>
Date: Sunday, 27 February 1983, 16:09-EST
From: John Canny <JfC at MIT-OZ>
To: bug-lispm at MIT-OZ

re: Getting Array Dimensions
The function ARRAY-DIMENSION-N is obsolete in system 93, and it is necessary to
use the function ARRAY-DIMENSION with a different argument ordering. But the version of
ARRAY-DIMENSION in system 91 has the same argument ordering as ARRAY-DIMENSION-N and so
it is incompatible with the ARRAY-DIMENSION in 93. The net result is that neither
of these functions will run in both systems. 
-JfC
 1-Mar-83 13:39:50-EST,429;000000000000
Return-path: <PGS@MIT-OZ>
Date: Monday, 28 February 1983, 04:48-EST
From: Patrick Sobalvarro <PGS at MIT-OZ>
Subject: Converse is broken
To: BUG-lispm at MIT-OZ

In Experimental MIT-Specific 18.1, Experimental System 93.18,
Experimental ZMail 49.8, microcode 226, gc@2, on Lisp Machine Five:

Converse isn't sending messages to people who are logged in on OZ.  It says
Message NOT sent, as if they were not logged in.
 1-Mar-83 15:09:48-EST,1803;000000000000
Return-path: <Hewitt@MIT-OZ>
Date: Tuesday, 1 March 1983, 14:48-EST
From: Carl Hewitt <Hewitt@MIT-OZ>
Subject: Zmail died in reply type in
To: BUG-LISPM@MIT-MC

In Release 4.1, System 222.171, site configuration 16, on Lisp Machine Apiary-2:

This happened to me in Zmail after I buried one of those crufty
window pieces as per directions of RWK.

>>Trap: Some argument to AP-LEADER, NIL, was of the wrong type.
The function expected an array.
While in the function AP-LEADER  ZWEI:LINE-BLANK-P  ZWEI:COM-INSERT-CRS  ZWEI:COMMAND-EXECUTE


ZWEI:LINE-BLANK-P: (P.C. = 43)
 Arg 0 (LINE): NIL
   --Defaulted args:--
 Arg 1 (DIAGRAM-IS-BLANK): NIL
 Local 0 (I): NIL
 Local 1 (LIM): NIL


ZWEI:LINE-BLANK-P:  (P.C. = 43)
   Arg 0 (LINE): NIL
   --Defaulted args:--
   Arg 1 (DIAGRAM-IS-BLANK): NIL

ZWEI:COM-INSERT-CRS:  (P.C. = 105)

ZWEI:COMMAND-EXECUTE:  (P.C. = 100)
   Arg 0 (COMMAND): ZWEI:COM-INSERT-CRS
   Arg 1 (CHAR): 141.
   Arg 2 (PREFIX-CHAR): NIL
   Arg 3 (HOOK-LIST): NIL

ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 67)
   Arg 0 (CH): 141.

(METHOD ZWEI:EDITOR EDIT):  (P.C. = 377)
   (SELF = #<ZMAIL-FRAME Main Zmail Window 20514744 exposed>)
   Arg 0 (OPERATION): EDIT
   --Defaulted args:--
   Arg 1 (TOP-LEVEL-P): T

(METHOD ZWEI:ZMAIL-FRAME COMBINED EDIT):  (P.C. = 121)
   (SELF = #<ZMAIL-FRAME Main Zmail Window 20514744 exposed>)
   Rest arg (.DAEMON-CALLER-ARGS.): (EDIT)

(DEFUN-METHOD ZWEI:ZMAIL-MAIL):  (P.C. = 271)
   (SELF = #<ZMAIL-FRAME Main Zmail Window 20514744 exposed>)
   Arg 0 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-FRAME -- 60. IV's, 20. FL's 16605451>
   Arg 1 (CONFIGURATION): REPLY
   Arg 2 (STARTING-WINDOW): #<WINDOW 466427>

ZWEI:ZMAIL-MAIL:  (P.C. = 64)
   Rest arg (ARGS): (REPLY #<WINDOW 466427>)
 1-Mar-83 15:12:33-EST,779;000000000000
Return-path: <DSH@MIT-ML>
Date: Tuesday, 1 March 1983, 15:07-EST
From: David S. Hsu <DSH at MIT-ML>
To: BUG-LISPM at OZ

In Release 4.1, System 222.158, Zmail 74.37, LMFS 30.19,
microcode TMC5-MIC 181, site configuration 12, on PI Project:

Please ignore the garbage below; however, the machine is consistently
doing what seems to be a C-LOCAL RETURN and then a C-M-R while I am in
the editor.  Thereafter, the wholine gets uncomplemented, and the time
is wrong.  I apologize if you already have been acquainted with this bug,
but it seems fairly spectacular to me.

Dave Hsu 

>>Trap: The variable FOO is unbound.
While in the function SI:*EVAL  SI:LISP-TOP-LEVEL1  SYS:LISP-TOP-LEVEL


SYS:LISP-TOP-LEVEL: (P.C. = 7)


SYS:LISP-TOP-LEVEL:  (P.C. = 7)
 2-Mar-83 04:39:47-EST,576;000000000000
Return-path: <PGS@MIT-OZ>
Date: Wednesday, 2 March 1983, 04:35-EST
From: Patrick Sobalvarro <PGS@MIT-OZ>
Subject: stepper
To: BUG-lispm@MIT-OZ

In Experimental MIT-Specific 18.1, Experimental System 93.21,
Experimental ZMail 49.8, microcode 226, gc@2, on Lisp Machine Thirty:

When using STEP:

If one types a space and then rubs it out, one is left with the Eval: prompt.
Have to abort to get out of it.

STEP doesn't know that now there are documentation windows; it thinks that it
has to retype the line every time you come back from reading documentation.
 2-Mar-83 15:24:34-EST,1433;000000000000
Return-path: <SR.CYPHER@MIT-SPEECH>
Date: Wednesday, 2 March 1983, 15:15-EST
From: D. Scott Cyphers <SR.CYPHER at MIT-SPEECH>
To: BUG-LISPM at OZ

In Release 4.1, System 222.171, Experimental Spire 7.5,
site configuration 16, on Lisp Machine Polar:

Spire runs on Lisp Machines with a variety of peripherals at two
different sites.  Most of these peripherals can be detected and their
configuration determined at boot time, with one exception.  We have one
old Versatec which must be used slightly differently than the newer
ones.  Unfortuneatley, the Versatecs provide no means of determining
whether they are of the new or old variety.  Is there an existing means
for indicating that a particular Lisp Machine is in some way different,
similar to the Defsite mechanism?  I've written a "defmachine" that gets
the job done, though not in any spectacular way.  It seems as if it
would be useful for such a system to exist.  It would also be useful in
such a system for particular LMs to be able to overide certain site
information such as default terminal-q printout locations in an explicit
manner if loaded software determines that a better way exists, for
example:

(def-site-change :hardcopy-screen-mode
   (local-versatec?)
   ':local-versatec) 

could be used to tell the system to use the local versatec if there was
one, with the appropriate initializations set up to be performed when
booting.
 2-Mar-83 16:00:02-EST,777;000000000000
Return-path: <Daniel@MIT-OZ>
Date: Wednesday, 2 March 1983, 15:55-EST
From: Daniel Weise <Daniel@MIT-OZ>
To: BUG-LISPM@MIT-OZ

In Experimental MIT-Specific 18.1, Experimental System 93.21,
Experimental ZMail 49.8, microcode 226,
This band (LM2-band6) may be bad., on Lisp Machine Two:

Two bugs:

the file sys:site;daedalus system exists and says the right thing.
However, doing (make-system 'daedalus) loses (ie, can't find system)
even after it loads sys:site;daedalus system.  Aborting out of the 
error and then doing (make-system 'daedalus) wins.

The second time I typed (make-system 'daedalus) it immediately offered
to read dpl:dpl;defsystem (the right behavior).  However, I responded
no to its query and it went ahead and read it anyway.

Daniel
 2-Mar-83 19:38:00-EST,816;000000000000
Return-path: <Dulcey@MIT-OZ>
Date: Wednesday, 2 March 1983, 19:34-EST
From: Mark J. Dulcey <Dulcey@MIT-OZ>
To: JCMa@MIT-OZ, BUG-LISPM@MIT-OZ
FCC: OZ:PS:<RMS.G.DULCEY>RMS.G.DULCEY.BABYL.1
In-reply-to: The message of 25 Feb 83 18:35-EST from John C. Mallery <JCMa at MIT-OZ>

    Date: Friday, 25 February 1983, 18:35-EST
    From: John C. Mallery <JCMa at MIT-OZ>

    In Experimental MIT-Specific 18.1, Experimental System 93.18,
    Experimental ZMail 49.8, microcode 226, Up, up and away!,
    on Lisp Machine One:

    Tried to expunge  a directory on FC:

    >>ERROR: Can't expunge on this host for FC: jcma; *#*

At the moment, no access to FC: is supposed to work in 93.  It will not
work until the new version of LMFile is installed on the Filecomputer.
Sorry about that (I sure am!).
 2-Mar-83 21:12:56-EST,3219;000000000000
Return-path: <CAL@MIT-OZ>
Date: Wednesday, 2 March 1983, 21:05-EST
From: Cliff Lasser <CAL@MIT-OZ>
To: BUG-LISPM@MIT-OZ

In Experimental MIT-Specific 18.1, Experimental System 93.22,
Experimental ZMail 49.9, microcode 226, gc@22, on Lisp Machine Six:


Insert your description of the circumstances here:

I was in zmail and had started going through my mail before the file
mail._zmail_txt had been completely read in.  Being disturbed that the file
remained at 79% read in, I decided to do a "e" (expunge) to see what would
happen.  Now, you too can see:

>>TRAP 10072 (ARGTYP ARRAY M-A NIL GAHDR) ->  ARRAY-LEADER 
Some argument to ARRAY-LEADER, NIL, was of the wrong type.
The function expected an array.
Backtrace from the debugger:

(METHOD ZWEI:WINDOW REDISPLAY) (P.C. = 1241)

 Arg 0 (OPERATION): REDISPLAY
 Arg 1 (RECENTER-TYPE): POINT
 Arg 2 (RC1): NIL
 Arg 3 (RC2): NIL
 Arg 4 (FORCE-TO-COMPLETION-P): NIL
Local 0 (LH): 16
Local 1 (NOW): 14641
Local 2 (POINT-PLINE): NIL
Local 3 (POINT-LINE): "Return-path: <ZVONA@MIT-OZ>"
Local 4 (POINT-INDEX): 0
Local 5 (TOP-LINE): "Return-path: <ZVONA@MIT-OZ>"
Local 6 (TOP-INDEX): 0
Local 7 (LAST-BP): (" 2-Mar-83 03:59:19-EST,840;000000000000" 0 MOVES)
Local 8 (INITIAL-DEGREE): 4
Local 9 (NEW-TOP-INDEX): NIL
Local 10 (Y): NIL
Local 11 (LINE): NIL
Local 12 (INDEX): NIL
Local 13 (P): NIL
Local 14 (LINE-LENGTH): NIL
Local 15 (LEN): NIL
Local 16 (DWID): NIL
Local 17 (CH): NIL
Local 18 (FONT): NIL
Local 19 (CWT): NIL
Local 20 (CWID): NIL
Local 21 (RWID): NIL
Local 22 (I): 1
Local 23 (TW): 0
Local 24 (L): NIL
Local 25 (FROM-INDEX): 0
Local 26 (TO-INDEX): 0
Local 27 (PLINE): 20
Local 28 (STOP-LINE): " 2-Mar-83 03:59:19-EST,840;000000000000"
Local 29 (FROB): NIL
Local 30 (PLINE): NIL
Local 31 (G5770): NIL
Local 32 (BL): NIL


ZWEI:REDISPLAY (P.C. = 72)

 Arg 0 (WINDOW): #<ZMAIL-WINDOW Zmail Window 1 610622 exposed>
   --Defaulted args:--
 Arg 1 (RECENTER-TYPE): POINT
 Arg 2 (RC1): NIL
 Arg 3 (RC2): NIL
 Arg 4 (FORCE-TO-COMPLETION-P): NIL


ZWEI:REDISPLAY-ALL-WINDOWS (P.C. = 75)

   --Defaulted args:--
 Arg 0 (FORCE-TO-COMPLETION-P): NIL
 Arg 1 (SELECT-P): T
Local 0 (G5616): (#<ZMAIL-WINDOW Zmail Window 1 610622 exposed>)
Local 1 (WINDOW): #<ZMAIL-WINDOW Zmail Window 1 610622 exposed>


(METHOD ZWEI:ZMAIL-COMMAND-LOOP-MIXIN-WITH-SUMMARY REDISPLAY) (P.C. = 35)

 Arg 0 (OPERATION): REDISPLAY
Local 0 (REDISPLAY-SUPPRESSED): NIL


(METHOD ZWEI:ZMAIL-COMMAND-LOOP-MIXIN COMMAND-LOOP) (P.C. = 222)

 Arg 0 (OPERATION): COMMAND-LOOP
Local 0 (G0626): ("Return to ZMAIL command loop.")
Local 1 (G0626): ((SYS:ABORT ERROR) ("Return to ZMAIL command loop.") T ("Return to ZMAIL command loop.") ...)
Local 2 (RESPONSE): (ZWEI:BACKGROUND ZWEI:MSGS-LOADED #<TENEX-INBOX-BUFFER "OZ:PS:<CAL>MAIL.TXT.1" 21021673> 2247 ...)
Local 3 (DEGREE): 0


Remainder of stack:

(INTERNAL (METHOD ZWEI:ZMAIL-FRAME COMBINED COMMAND-LOOP) 0) (P.C. = 50)
FUNCALL (P.C. = 25)
(METHOD ZWEI:ZMAIL-COMMAND-LOOP-MIXIN AROUND COMMAND-LOOP) (P.C. = 57)
(METHOD ZWEI:ZMAIL-FRAME COMBINED COMMAND-LOOP) (P.C. = 47)
ZWEI:ZMAIL-PROCESS-TOP-LEVEL (P.C. = 115)
SI:PROCESS-TOP-LEVEL (P.C. = 121)
 2-Mar-83 22:11:22-EST,1677;000000000000
Return-path: <kmp@MIT-MC>
Date: Wednesday, 2 March 1983, 21:48-EST
From: Kent M. Pitman <kmp at MIT-MC>
Subject: CHAR-DOWNCASE/CHAR-UPCASE: Bug or feature?
To: BUG-LISPM at MIT-MC

(char-upcase   #\control-N) => #\control-N
(char-downcase #\control-N) => #\control-sh-N

(char-upcase   #\control-shift-N) => #\control-N
(char-downcase #\control-shift-N) => #\control-shift-N

This strikes me as exceedingly random. My guess is that the CONTROL-SHIFT
characters try to recycle some less-used codes that might otherwise belong
to control-/n. I note that #\control-/n is the same as #\control-N even
though it is obvious that i mean the downcased version.

This actually came up in the case of a naive user's program. The person was
doing:

(let ((c (char-upcase (tyi))))
  (caseq c
    (#\control-N ...)
    ...))

In such a case, #\control-shift-N would behave like #\control-N. Since 
the editor, for example, presents a model where Control-Shift-char is in
no way related to Control-char, I don't think user primitives like this should
try to buck the model.

My feeling is that probably char-upcase and char-downcase should not 
try to hack characters that have bucky bits attached to them.

It occurs to me that the problem may be far worse than this, though. Is it
the case that CHAR-UPCASE thinks these bits are FONT information and not 
bucky bits? I have seen this sort of confusion elsewhere, too. If that's
the case, then there should be a stern warning somewhere in the manual that
explains how confusion between these two can happen. I think this may get
involved with the old question of whether (TYI) must return chars, etc.
 2-Mar-83 23:18:48-EST,503;000000000000
Return-path: <CAL@MIT-OZ>
Date: Wednesday, 2 March 1983, 23:15-EST
From: Cliff Lasser <CAL@MIT-OZ>
To: BUG-LISPM@MIT-OZ

In Experimental MIT-Specific 18.1, Experimental System 93.22,
Experimental ZMail 49.9, microcode 226, gc@22, on Lisp Machine Six:

When in edit-warnings mode, the machine wants to read in the source file for a
function that is in a buffer that has already been read in.  In fact, the
function with the warning had been compiled through the editor (meta-x compile
buffer). 3-Mar-83 05:16:49-EST,640;000000000000
Return-path: <KBE@MIT-OZ>
Date: Thursday, 3 March 1983, 05:13-EST
From: KMP@MIT-MC
Sender: KBE@MIT-OZ
Subject: c-R in Tags Query Replace
To: BUG-LISPM@MIT-OZ

In Release 4.1, Experimental Knowledge-Based-Editor 140.1,
site configuration 11, on Lisp Machine Twenty-two:

In m-X Tags Query Replace, typing c-R puts me in a recursive edit which
says "End finishes, Abort aborts". However, Abort doesn't abort. I can't
see any difference between End and Abort. I would expect Abort to exit both
the recursive edit and the Tags Query Replace. I would expect the End to
exit the recursive edit and leave me back in the query loop.
 3-Mar-83 17:08:30-EST,4226;000000000000
Return-path: <s.barmar@MIT-EECS>
Date: Thursday, 3 March 1983, 17:06-EST
From: Margolin@Multics
Sender: s.barmar at MIT-EECS
Subject: #|...|#
To: BUG-LISPM@MIT-OZ

In Experimental MIT-Specific 18.1, Experimental System 93.22,
Experimental ZMail 49.9, microcode 226, gc@2, on Arthur Dent:


Insert your description of the circumstances here:

The file that was being loaded ends with a #|...|# comment.  I think
that this error is due to the fact that there is an unbalanced
doublequote in the comment.  I am under the impression that the only
things that are parsed in #|...|# comments are other #|...|# comments
(so that they nest) and / (so that you can slashify a #| or |#).  This
file used to load (as recently as System 91, I think), and Symbolics
software also has no problem (I tried to compare this behavior with
Maclisp, but the Maclisp on EE doesn't seem to have #|).

Oh well, it probably should have been written as a ;;; comment anyway.

>>ERROR: The end of file was reached while reading a #| comment.
Backtrace from the debugger:

Additional information supplied with call:
 Expecting 3 values

SI:XR-#/|-MACRO (P.C. = 221)

 Arg 0 (LIST-SO-FAR): :TOPLEVEL
 Arg 1 (STREAM): #<FILE-INPUT-CHARACTER-STREAM "EE:PS:<S.BARMAR>ZWEI.INIT" 33607456>
Local 0 (N): 0
Local 1 (*SELECTQ-ITEM*): NIL


READ (P.C. = 154)

 Rest arg (READ-ARGS): (#<FILE-INPUT-CHARACTER-STREAM "EE:PS:<S.BARMAR>ZWEI.INIT" 33607456> (NIL))
Local 1 (W-O): (:ADVANCE-INPUT-BUFFER BREAK :CHANGE-PROPERTIES :CHARACTERS ...)
Local 2 (STREAM): #<FILE-INPUT-CHARACTER-STREAM "EE:PS:<S.BARMAR>ZWEI.INIT" 33607456>
Local 3 (EOF-OPTION): (NIL)
Local 4 (THING): SI:XR-#/|-MACRO
Local 5 (TYPE): SI:READER-MACRO
Local 6 (SPLICEP): NIL


SI:READFILE-INTERNAL (P.C. = 201)

 Arg 0 (STANDARD-INPUT): #<FILE-INPUT-CHARACTER-STREAM "EE:PS:<S.BARMAR>ZWEI.INIT" 33607456>
 Arg 1 (PKG): NIL
 Arg 2 (NO-MSG-P): NIL
Local 0 (FILE-ID): (#FS:TOPS20-PATHNAME "EE:PS:<S.BARMAR>ZWEI.INIT.22" . 23406714562)
Local 1 (PATHNAME): #FS:TOPS20-PATHNAME "EE:PS:<S.BARMAR>ZWEI.INIT"
Local 2 (GENERIC-PATHNAME): #FS:LOGICAL-PATHNAME "Barmar: home; ZWEI INIT "
Local 3 (PLIST): NIL
Local 4 (VARS): (PACKAGE BASE IBASE)
Local 5 (VALS): (#<Package ZWEI 6557256> 10 10)
Local 6 (PROGV-VARS): NIL
Local 7 (PROGV-VALS): NIL
Local 8 (EOF): (NIL)
Local 9 (FORM): (MAPC (FUNCTION COMPILE) (QUOTE **))


LOAD (P.C. = 242)

 Arg 0 (FILENAME): #FS:TOPS20-PATHNAME "EE:PS:<S.BARMAR>ZWEI.INIT"
   --Defaulted args:--
 Arg 1 (PKG): NIL
 Arg 2 (NONEXISTENT-OK-FLAG): NIL
 Arg 3 (DONT-SET-DEFAULT-P): NIL
 Arg 4 (NO-MSG-P): NIL
Local 0 (PATHNAME): #FS:TOPS20-PATHNAME "EE:PS:<S.BARMAR>ZWEI.INIT"
Local 1 (STREAM): #<FILE-INPUT-CHARACTER-STREAM "EE:PS:<S.BARMAR>ZWEI.INIT" 33607456>
Local 2 (G6631): (FS:FILE-ERROR SI:CONDITION-CASE-THROW FS:G6630)
Local 3 (G6632): ((FS:FILE-ERROR SI:CONDITION-CASE-THROW FS:G6630) (FS:FILE-NOT-FOUND SI:CONDITION-CASE-THROW FS:G6634) (FS:FILE-ERROR SI:CONDITION-CASE-THROW FS:G6630) (** SI:EVAL-ABORT-TRIVIAL-ERRORS-HANDLER))
Local 4 (G6635): (FS:FILE-NOT-FOUND SI:CONDITION-CASE-THROW FS:G6634)
Local 5 (G6636): ((FS:FILE-NOT-FOUND SI:CONDITION-CASE-THROW FS:G6634) (FS:FILE-ERROR SI:CONDITION-CASE-THROW FS:G6630) (FS:FILE-NOT-FOUND SI:CONDITION-CASE-THROW FS:G6634) (FS:FILE-ERROR SI:CONDITION-CASE-THROW FS:G6630) ...)
Local 6 (*SELECTQ-ITEM*): NIL
Local 7 (ERROR-OBJECT): NIL


SI:*EVAL (P.C. = 1145)

 Arg 0 (FORM): (LOAD (FS:INIT-FILE-PATHNAME PROG))
Local 0 (ARGNUM): 1
Local 1 (FCTN): #<DTP-FEF-POINTER LOAD 2026026>
Local 2 (ARG-DESC): 105
Local 3 (NUM-ARGS): 1
Local 4 (CLOSURE-PASSED): NIL
Local 5 (LAMBDA-LIST): NIL
Local 6 (LL): NIL
Local 7 (QUOTE-STATUS): NIL
Local 8 (REST-FLAG): NIL
Local 9 (ARGL): NIL
Local 10 (ADL): NIL
Local 11 (ITEM): NIL
Local 12 (*SELECTQ-ITEM*): NIL


Remainder of stack:

SI:APPLY-LAMBDA (P.C. = 1247)
(LAMBDA (PROG) (LOAD (FS:INIT-FILE-PATHNAME PROG)))
MAPC (P.C. = 60)
SI:*EVAL (P.C. = 1145)
SI:READFILE-INTERNAL (P.C. = 176)
LOAD (P.C. = 242)
LOGIN (P.C. = 223)
SI:*EVAL (P.C. = 1145)
SI:EVAL-ABORT-TRIVIAL-ERRORS (P.C. = 44)
SI:LISP-TOP-LEVEL1 (P.C. = 254)
SI:LISP-TOP-LEVEL (P.C. = 35)
 3-Mar-83 17:18:31-EST,467;000000000000
Return-path: <s.barmar@MIT-EECS>
Date: Thursday, 3 March 1983, 17:11-EST
From: Barry Margolin <s.barmar at MIT-EECS>
Subject: ^M in degubber
To: BUG-LISPM@MIT-OZ

In Experimental MIT-Specific 18.1, Experimental System 93.22,
Experimental ZMail 49.9, microcode 226, gc@2, on Arthur Dent:

I used ^M in the debugger to send my previous bug report (Subject:
#|...|#).  After I hit <END> it left me in an editor buffer, rather than
returning to the debugger.
 3-Mar-83 17:40:20-EST,1204;000000000000
Return-path: <Henry@MIT-OZ>
Date: Thursday, 3 March 1983, 17:39-EST
From: Henry Lieberman <Henry@MIT-OZ>
Subject: Chaos eval server
To: BUG-lispm@MIT-OZ

In Release 4.1, System 222.171, site configuration 16, Apiary [Henry], on Lisp Machine Apiary-1:

With the following function to do evaluations on other machines:

(DEFUN REMOTE-EVAL (FORM HOST)
       ;; (REMOTE-EVAL '(+ 2 3) "MIT-Apiary-1")
       (LET ((STREAM-RESULT 
	      (WITH-OPEN-STREAM (STREAM (CHAOS:OPEN-STREAM HOST "Eval"))
				(PRINT FORM STREAM)
				;; You need to give the stream a kick to get it going.
				(SEND STREAM ':FINISH)
				(READ STREAM))))
	    (COND ((NULL STREAM-RESULT)
		   ;; Advertised to return NIL when evaluation errors.
		   ;; I've observed that this doesn't always happen.
		   (FERROR "~&~S couldn't eval ~S" HOST FORM))
		  ((ATOM STREAM-RESULT) STREAM-RESULT)
		  ((APPLY 'VALUES STREAM-RESULT)))))

Doing 

(REMOTE-EVAL '(FORMAT T "~&Computing the product of numbers from ~S to ~S" 6
		      9)
	     'MIT-APIARY-1)

returns the symbol COMPUTING. Something seems like its losing the double quotes
across the Chaos net. Did you guys use PRINC flavor printing by mistake?

 3-Mar-83 18:51:02-EST,361;000000000000
Return-path: <hes@SCRC-VIXEN>
Date: Thursday, 3 March 1983, 09:48-EST
From: Howie Shrobe <hes at SCRC-VIXEN>
Subject: daedalus site file
To: Daniel at MIT-OZ, BUG-LISPM at MIT-OZ
In-reply-to: The message of 2 Mar 83 15:55-EST from Daniel Weise <Daniel at MIT-OZ>

To help disambiguate, this all works in release 4, so it's a 93 bug not
a daedalus bug.
 3-Mar-83 20:38:34-EST,734;000000000000
Return-path: <Moon@SCRC-TENEX>
Date: Thursday, 3 March 1983, 20:30-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: Chaos eval server
To: Henry Lieberman <Henry at MIT-OZ>
Cc: BUG-lispm at MIT-OZ
In-reply-to: The message of 3 Mar 83 17:39-EST from Henry Lieberman <Henry at MIT-OZ>

    Date: Thursday, 3 March 1983, 17:39-EST
    From: Henry Lieberman <Henry@MIT-OZ>

    (REMOTE-EVAL '(FORMAT T "~&Computing the product of numbers from ~S to ~S" 6
			  9)
		 'MIT-APIARY-1)

    returns the symbol COMPUTING. Something seems like its losing the double quotes
    across the Chaos net. Did you guys use PRINC flavor printing by mistake?

Did you say FORMAT T instead of FORMAT NIL by intention or by mistake?
 4-Mar-83 16:41:09-EST,888;000000000000
Return-path: <Henry@MIT-OZ>
Date: Friday, 4 March 1983, 16:34-EST
From: Henry Lieberman <Henry@MIT-OZ>
Subject: Chaos eval server
To: Moon@SCRC-TENEX, Henry@MIT-OZ
Cc: BUG-lispm@MIT-OZ
In-reply-to: The message of 3 Mar 83 20:30-EST from David A. Moon <Moon at SCRC-TENEX>

	Date: Thursday, 3 March 1983, 17:39-EST
	From: Henry Lieberman <Henry@MIT-OZ>

	(REMOTE-EVAL '(FORMAT T "~&Computing the product of numbers from ~S to ~S" 6
			      9)
		     'MIT-APIARY-1)

	returns the symbol COMPUTING. Something seems like its losing the double quotes
	across the Chaos net. Did you guys use PRINC flavor printing by mistake?

    Did you say FORMAT T instead of FORMAT NIL by intention or by mistake?

By intention. FORMAT NIL works OK. The FORMAT expression was originally part of
a larger piece of code. The behavior is very odd. Did I screw up with the Eval
server?
 4-Mar-83 17:30:34-EST,1057;000000000000
Return-path: <RPK@MIT-OZ>
Mail-From: RPK created at  4-Mar-83 17:27:34
Date: 4 March 1983  17:27-EST (Friday)
Sender: RPK @ MIT-OZ
From: Robert P. Krajewski <RPK @ MIT-MC>
To:   Henry Lieberman <Henry @ MIT-OZ>
Cc:   BUG-lispm @ MIT-OZ, Moon @ SCRC-TENEX
Subject: Chaos eval server

    From: Henry Lieberman <Henry>
    To:   Moon at SCRC-TENEX, Henry
    Re:   Chaos eval server

    	From: Henry Lieberman <Henry@MIT-OZ>

    	(REMOTE-EVAL '(FORMAT T "~&Computing the product of numbers from ~S to ~S" 6
    			      9)
    		     'MIT-APIARY-1)

    	returns the symbol COMPUTING.

    The behavior is very odd. Did I screw up with the Eval
    server?

You are getting this strange behavior because TERMINAL-IO in the EVAL server
(doesn't matter which system, the code's never been changed) is bound the
servers's stream.  Therefore, READ at your end is picking up FORMAT's output,
which is going to the right place.  If you didn't want this, you could safely
(REMOTE-EVAL '(SETQ TERMINAL-IO #'SI:NULL-STREAM)).

``Bob''
 4-Mar-83 23:32:19-EST,650;000000000000
Return-path: <MOON@SCRC-TENEX>
Date: Friday, 4 March 1983  23:26-EST
From: MOON at SCRC-TENEX
To:   Henry Lieberman <Henry at MIT-OZ>
Cc:   BUG-lispm at MIT-OZ
Subject: Chaos eval server: use of FORMAT T
In-reply-to: The message of 4 Mar 1983 16:34-EST from Henry Lieberman <Henry@MIT-OZ>

Anything you print out at the remote end in the eval server is sent
back to the user end.  I guess you must not have known this.  So
if you expect to be able to parse the read-eval-print loop output
by calling READ, but print things yourself that aren't in Lisp syntax,
you are going to get what you asked for, not what you thought you asked for.
 5-Mar-83 00:35:47-EST,996;000000000000
Return-path: <GAVAN@MIT-OZ>
Date: Saturday, 5 March 1983, 00:34-EST
From: Gavan Duffy <GAVAN@MIT-OZ>
Subject: Bombed while loading patches (4.0).
To: BUG-LISPM@MIT-OZ

In Release 4.0, System 222.144, site configuration 6, Apiary Simulator, on Lisp Machine Apiary-1:

Bombed while loading patches, 49% of the way through src:<s.patch>system-222-145 

>>Error: FASL-GROUP-OVERFLOW
While in the function SYS:FASL-OP-INDEX  SI:FASL-GROUP  SI:FASL-NEXT-VALUE


SYS:FASL-OP-INDEX: (P.C. = 71)
 Local 0 (LOW): NIL


SYS:FASL-OP-INDEX:  (P.C. = 71)

SI:FASL-GROUP:  (P.C. = 103)

SI:FASL-NEXT-VALUE:  (P.C. = 22)

SYS:FASL-OP-LIST:  (P.C. = 101)
   --Defaulted args:--
   Arg 0 (AREA): SYS:FASL-CONSTANTS-AREA
   Arg 1 (COMPONENT-FLAG): NIL

SI:FASL-GROUP:  (P.C. = 103)

SI:FASL-NEXT-VALUE:  (P.C. = 22)

SYS:FASL-OP-LIST:  (P.C. = 101)
   --Defaulted args:--
   Arg 0 (AREA): SYS:FASL-CONSTANTS-AREA
   Arg 1 (COMPONENT-FLAG): NIL

SI:FASL-GROUP:  (P.C. = 103)
 5-Mar-83 14:48:35-EST,500;000000000000
Return-path: <DANIEL@MIT-OZ>
Date: Saturday, 5 March 1983  14:40-EST
Sender: DANIEL @ MIT-OZ
From: Daniel Weise <DANIEL @ MIT-MC>
To:   Kent M. Pitman <kmp @ MIT-OZ>
Cc:   BUG-LISPM @ MIT-MC
Subject: CHAR-DOWNCASE/CHAR-UPCASE: Bug or feature?
In-reply-to: Msg of 2 Mar 1983 21:48-EST from Kent M. Pitman <kmp>

BTW, this was documented in the sys93 release notes.  I haven't
read this message, did you figure out that things operate
differently depending on whether one is in the editor?
 5-Mar-83 14:58:56-EST,390;000000000000
Return-path: <DANIEL@MIT-OZ>
Date: Saturday, 5 March 1983  14:51-EST
Sender: DANIEL @ MIT-OZ
From: Daniel Weise <DANIEL @ MIT-MC>
To:   bug-lispm @ mc
Subject: CHAR-DOWNCASE/CHAR-UPCASE: Bug or feature?
In-reply-to: Msg of 5 Mar 1983  14:40-EST from Daniel Weise <DANIEL>

I had not intended my very recent message on this subject to
go to bug-lispm, only KMP.  Sorry about that.
 5-Mar-83 17:02:33-EST,861;000000000000
Return-path: <dove@MIT-DSPG>
Date: Saturday, 5 March 1983, 17:01-EST
From: Webster Dove <dove at MIT-DSPG>
To: BUG-LISPM at MIT-OZ

In Experimental MIT-Specific 18.1, Experimental System 93.22,
Experimental ZMail 49.9, microcode 226, gc@2, on Arthur Dent:

split-screen would be more useful to me if I had the ability to
determine how it would arrange numbers of windows above 3.  I need wide
short windows for graphing sequences of numbers, so making 4 windows
come out as a quad is useless.  Generally, I must use edit-screen to do
what I want, but that precludes the specification of an enclosing frame.

Here is a suggested user interface change.  In split-screen, after one
has specified all the windows, permit mousing a final function to
rearrange the layout using something that behaves like mouse-corners,
but on a small pseudo window. 5-Mar-83 19:03:01-EST,1141;000000000000
Return-path: <sr.kwc@MIT-SPEECH>
Date: Saturday, 5 March 1983, 18:59-EST
From: Kenneth W. Church <sr.kwc at MIT-SPEECH>
Subject: alphabetic-case-affects-string-comparisons
To: BUG-LISPM at OZ, bug-lsb at MIT-SPEECH

In Release 4.1, System 222.171, Experimental Spire 7.8,
site configuration 16, on Lisp Machine Koala:

It seems that fs:parse-pathname depends on the binding
of alphabetic-case-affects-string-comparisons.  In particular,
if it is bound to t, and I say (fs:parse-pathname "speech:ss:<foo>bar.lisp"),
I get the error: two devices given to ...

I know that the manual says that you shouldn't bind
alphabetic-case-affects-string-comparisons at high levels
because of problems like this.  I'm not sure, though, that this
is the right position to take.  Perhaps fs:parse-pathname
should bind alphabetic-case-affects-string-comparisons the way that it wants.
At least, it should generate a more useful error message if it should find
two devices because I bound string comparisons the wrong way.

Alternately, perhaps load, lsb-load and so forth should bind alphabetic-affects-string-comparisons ...

- ken
 6-Mar-83 02:18:52-EST,3734;000000000000
Return-path: <CAL@MIT-OZ>
Date: Saturday, 5 March 1983, 20:48-EST
From: Cliff Lasser <CAL at MIT-OZ>
To: BUG-LISPM at OZ

In Release 4.1, System 222.158, Zmail 74.37, LMFS 30.19,
microcode TMC5-MIC 181, site configuration 12, on PI Project:

Not finding a bin file, the machine started reading in the lisp sourc file.  I
aborted it in the middle.  Then I tried to compile this file with qc-file.  When
that did not work, I tried to compile it with meta-x compile file.

>>Error: Attempt to read from #<FILE-INPUT-CHARACTER-STREAM "OZ:PS:<ALAN.LMHACK>BINDA.LISP" 35545364>, which is in a marked state
While in the function (DEFUN-METHOD FS:FILE-NEXT-READ-PKT)  (METHOD FS:FILE-INPUT-STREAM-MIXIN GET-NEXT-INPUT-PKT)  (METHOD CHAOS:CHARACTER-INPUT-STREAM-MIXIN NEXT-INPUT-BUFFER)


(DEFUN-METHOD FS:FILE-NEXT-READ-PKT): (P.C. = 171)
 Arg 0 (SELF): #<FILE-INPUT-CHARACTER-STREAM "OZ:PS:<ALAN.LMHACK>BINDA.LISP" 35545364>
 Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:FILE-INPUT-STREAM-MIXIN -- 5. IV's, 1. FL's 4047326>
 Arg 2 (NO-HANG-P): NIL
 Arg 3 (FOR-SYNC-MARK-P): NIL
 Local 4 (.SELECTQ-ITEM.): SYNC-MARKED
 Local 5 (PKT): "Attempt to read from ~S, which is in a marked state"
 Local 6 (*SELECTQ-ITEM*): #<FILE-INPUT-CHARACTER-STREAM "OZ:PS:<ALAN.LMHACK>BINDA.LISP" 35545364>


(DEFUN-METHOD FS:FILE-NEXT-READ-PKT):  (P.C. = 171)
   Arg 0 (SELF): #<FILE-INPUT-CHARACTER-STREAM "OZ:PS:<ALAN.LMHACK>BINDA.LISP" 35545364>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:FILE-INPUT-STREAM-MIXIN -- 5. IV's, 1. FL's 4047326>
   Arg 2 (NO-HANG-P): NIL
   Arg 3 (FOR-SYNC-MARK-P): NIL

(METHOD FS:FILE-INPUT-STREAM-MIXIN GET-NEXT-INPUT-PKT):  (P.C. = 17)
   Arg 0 (SELF): #<FILE-INPUT-CHARACTER-STREAM "OZ:PS:<ALAN.LMHACK>BINDA.LISP" 35545364>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:FILE-INPUT-STREAM-MIXIN -- 5. IV's, 1. FL's 4047326>
   Arg 2 (OPERATION): GET-NEXT-INPUT-PKT
   Arg 3 (NO-HANG-P): NIL

(METHOD CHAOS:CHARACTER-INPUT-STREAM-MIXIN NEXT-INPUT-BUFFER):  (P.C. = 6)
   Arg 0 (SELF): #<FILE-INPUT-CHARACTER-STREAM "OZ:PS:<ALAN.LMHACK>BINDA.LISP" 35545364>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor CHAOS:CHARACTER-INPUT-STREAM-MIXIN -- 1. IV's, 0. FL's 4047366>
   Arg 2 (OPERATION): NEXT-INPUT-BUFFER
   Arg 3 (NO-HANG-P): NIL

(METHOD SI:BASIC-BUFFERED-INPUT-STREAM SETUP-NEXT-INPUT-BUFFER):  (P.C. = 11)
   Arg 0 (SELF): #<FILE-INPUT-CHARACTER-STREAM "OZ:PS:<ALAN.LMHACK>BINDA.LISP" 35545364>
   Arg 1: #<Map to flavor SI:BASIC-BUFFERED-INPUT-STREAM -- 3. IV's, 0. FL's 4045674>
   Arg 2: SETUP-NEXT-INPUT-BUFFER
   --Defaulted args:--
   Arg 3 (NO-HANG-P): NIL

(METHOD FS:FILE-INPUT-CHARACTER-STREAM COMBINED SETUP-NEXT-INPUT-BUFFER):  (P.C. = 13)
   Arg 0 (SELF): #<FILE-INPUT-CHARACTER-STREAM "OZ:PS:<ALAN.LMHACK>BINDA.LISP" 35545364>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:FILE-INPUT-CHARACTER-STREAM -- 0. IV's, 5. FL's 4047336>
   Rest arg (.DAEMON-CALLER-ARGS.): (SETUP-NEXT-INPUT-BUFFER)

(METHOD SI:BUFFERED-INPUT-STREAM READ-INPUT-BUFFER):  (P.C. = 14)
   Arg 0 (SELF): #<FILE-INPUT-CHARACTER-STREAM "OZ:PS:<ALAN.LMHACK>BINDA.LISP" 35545364>
   Arg 1: #<Map to flavor SI:BUFFERED-INPUT-STREAM -- 3. IV's, 0. FL's 4047406>
   Arg 2: READ-INPUT-BUFFER
   --Defaulted args:--
   Arg 3 (EOF): NIL

FS:READ-ATTRIBUTE-LIST:  (P.C. = 22)
   Arg 0 (PATHNAME): #<TOPS20-PATHNAME "OZ:PS:<ALAN.LMHACK>BINDA">
   Arg 1 (STREAM): #<FILE-INPUT-CHARACTER-STREAM "OZ:PS:<ALAN.LMHACK>BINDA.LISP" 35545364>

COMPILER:COMPILE-FILE:  (P.C. = 145)
   Arg 0 (INFILE): #<TOPS20-PATHNAME "OZ:PS:<ALAN.LMHACK>BINDA.LISP">
   Arg 1 (OUTFILE): NIL
   --Defaulted args:--
   Arg 2 (IN-PACKAGE): NIL
   Arg 3 (DONT-SET-DEFAULT-P): NIL
 6-Mar-83 02:20:40-EST,976;000000000000
Return-path: <Moon@SCRC-TENEX>
Date: Saturday, 5 March 1983, 21:48-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: alphabetic-case-affects-string-comparisons
To: Kenneth W. Church <sr.kwc at MIT-SPEECH>
Cc: BUG-LISPM at MIT-OZ, bug-lsb at MIT-SPEECH
In-reply-to: The message of 5 Mar 83 18:59-EST from Kenneth W. Church <sr.kwc at MIT-SPEECH>

    Date: Saturday, 5 March 1983, 18:59-EST
    From: Kenneth W. Church <sr.kwc at MIT-SPEECH>

    It seems that fs:parse-pathname depends on the binding
    of alphabetic-case-affects-string-comparisons.

It would be wrong to change every function in the world, one by one,
to bind this variable to NIL for the benefit of people who don't
read the manual or don't pay any attention to it.

However, the variable is being flushed entirely by Common Lisp, in
favor of having two sets of comparison functions, one set which depend
on case and a second which ignore case.  This is probably the right thing.
 6-Mar-83 02:25:24-EST,2489;000000000000
Return-path: <CAL@MIT-OZ>
Date: Sunday, 6 March 1983, 01:10-EST
From: Cliff Lasser <CAL@MIT-OZ>
To: BUG-LISPM@MIT-OZ

In System 222.170, Hardcopy 11.14, Zmail 74.37, Tape 13.0, LMFS 30.19,
cold load 65, microcode TMC5-MIC 181, site configuration 14, on PI Project:

Just happened out of nowhere.  Happened a couple of times before but managed to
get out of the problem by forcing a return from (redisplay).

>>Trap: The second argument given to SYS:--INTERNAL, NIL, was not a EXTENDED-NUMBER, a fixnum or a floating-point number.
While in the function ZWEI:LISP-BACKWARD-LIST-AUX  ZWEI:FORWARD-SEXP  ZWEI:INDENT-FOR-LISP


ZWEI:LISP-BACKWARD-LIST-AUX: (P.C. = 43)
 Arg 0 (LINE): "  (DOLIST (VAR URDU-VARS)"
 Arg 1 (IN-STRING): NIL
 Arg 2 (DEPTH): 1
 Arg 3 (STOP-LINE): "(DEFUCCMACRO-INVIS TRACE-PRINT (FNAME FSTRING &REST URDU-VARS &AUX (OUT NIL))"
 Local 4 (DEFINITION-BEG): ("(DEFUCCMACRO-INVIS TRACE-PRINT (FNAME FSTRING &REST URDU-VARS &AUX (OUT NIL))" 0)
 Local 5 (LINE): "  (DOLIST (VAR URDU-VARS)"
 Local 6 (TEM): NIL
 Local 7 (PREVIOUS-DEPTH): NIL
 Local 8 (MIN-DEPTH): NIL


ZWEI:LISP-BACKWARD-LIST-AUX:  (P.C. = 43)
   Arg 0 (LINE): "  (DOLIST (VAR URDU-VARS)"
   Arg 1 (IN-STRING): NIL
   Arg 2 (DEPTH): 1
   Arg 3 (STOP-LINE): "(DEFUCCMACRO-INVIS TRACE-PRINT (FNAME FSTRING &REST URDU-VARS &AUX (OUT NIL))"

ZWEI:FORWARD-SEXP:  (P.C. = 726)
   Arg 0 (BP): ("" 0)
   Arg 1 (TIMES): -1
   Arg 2 (FIXUP-P): NIL
   Arg 3 (LEVEL): 1
   Arg 4 (STOP-BP): ("(DEFUCCMACRO-INVIS TRACE-PRINT (FNAME FSTRING &REST URDU-VARS &AUX (OUT NIL))" 0)
   Arg 5 (BACK-OVER-SINGLEQUOTES-P): NIL
   --Defaulted args:--
   Arg 6 (NO-UP-P): NIL

ZWEI:INDENT-FOR-LISP:  (P.C. = 56)
   Arg 0 (BP): ("" 0)
   Arg 1 (START-DEFINITION-BP): ("(DEFUCCMACRO-INVIS TRACE-PRINT (FNAME FSTRING &REST URDU-VARS &AUX (OUT NIL))" 0)

ZWEI:INDENT-INTERVAL-FOR-LISP:  (P.C. = 145)
   Arg 0 (BP1): ("" 0)
   Arg 1 (BP2): ("" 0)
   Arg 2 (IN-ORDER-P): NIL
   Arg 3 (START-BP): NIL
   Arg 4 (COMMENTS-P): NIL

ZWEI:COM-INDENT-FOR-LISP:  (P.C. = 27)

ZWEI:COMMAND-EXECUTE:  (P.C. = 65)
   Arg 0 (COMMAND): ZWEI:COM-INDENT-FOR-LISP
   Arg 1 (CHAR): 211
   Arg 2 (PREFIX-CHAR): NIL
   Arg 3 (HOOK-LIST): (ZWEI:SHIFT-LOCK-HOOK)

ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 20)
   Arg 0 (CH): 211

ZWEI:KEY-EXECUTE:  (P.C. = 11)
   Arg 0 (KEY): 211
   --Defaulted args:--
   Arg 1 (*NUMERIC-ARG-P*-initialization): NIL
   Arg 2 (*NUMERIC-ARG*-initialization): 1
 7-Mar-83 08:00:27-EST,347;000000000000
Return-path: <GLR@MIT-OZ>
Mail-From: GLR created at  7-Mar-83 03:15:17
Date: Monday, 7 March 1983  03:15-EST
Sender: GLR @ MIT-OZ
From: Jerry Roylance <GLR @ MIT-MC>
To:   BUG-LISPM @ MIT-OZ
CC:   GLR @ MIT-OZ
Subject: LDBE -- Bit Hacks


How about a function (LDBE PPSS X) that is similar
to (LDB PPSS X) but sign-extends the result?
 7-Mar-83 08:07:51-EST,811;000000000000
Return-path: <Daniel@MIT-OZ>
Date: Sunday, 6 March 1983, 20:27-EST
From: Daniel Weise <Daniel@MIT-OZ>
To: BUG-LISPM@MIT-OZ

In Experimental MIT-Specific 18.1, Experimental System 93.24,
Experimental ZMail 49.9, Experimental DAEDALUS 2.0,
Experimental Nodes 2.3, microcode 226, New Daedalus,
on Lisp Machine Two:


Insert your description of the circumstances here:

The bug here is that the debugger, won't let me abort.  typing abort
just leaves me the error handler.  It will let me supply a replacement
value and resume, however.

>>TRAP 5814 (ARGTYP NUMBER M-T 1 ARITH-FLO-ANY)
The second argument to =, NIL, was of the wrong type.
The function expected a number.
Backtrace from the debugger:

GET-MORE-EDGES (P.C. = 23)

 Arg 0 (NUMBER): 19.0
 Arg 1 (EDGES): NIL

...

Daniel
 7-Mar-83 08:10:10-EST,3404;000000000000
Return-path: <JfC@MIT-OZ>
Date: Sunday, 6 March 1983, 21:17-EST
From: John Canny <JfC@MIT-OZ>
To: BUG-LISPM@MIT-OZ

In Remote-File 22.0, LMFILE-Remote 23.1, MIT-Specific 16.0, System 91.45,
ZMail 48.7, microcode 204, .., on Lisp Machine Thirty:


Insert your description of the circumstances, and how often the problem occurs:

This happened while trying to cold boot cadr31. The disk pack was recently replaced,
but it hasnt improved the situation. As well as parity errors, on two occasions the
disk drive has turned itself off (i.e. run light goes off, the disk is still spinning
but it must be power cycled in order for the machine to be able to boot)

Machine being debugged is MIT-LISPM-31.
Processor error:
  Main-memory parity error
Memory parity error physical address = 0, data = 30400700000
Address is memory board #0, bank #0
Checking disk copy of this virtual memory address
Disk data identical, could be parity bit.This program doesn't understand why the machine stopped (not ILLOP).

Micro PC History (OPC's), oldest first:
   24574   PHYS-MEM-READ
   24575   (PHYS-MEM-READ 1)
   24576   (PHYS-MEM-READ 2)
   24577   (PHYS-MEM-READ 3)
   24600   (PHYS-MEM-READ 4)
   24601   (PHYS-MEM-READ 5)
   24602   (PHYS-MEM-READ 6)
   24603   (PHYS-MEM-READ 7)
Backtrace of microcode subroutine stack:
   15  024776   (COLD-AWAIT-DISK 2)
   14  025403   (DISK-COPY-PART-3 5)
   13  024735   DISK-RR-2
   12  000000   ZERO
   11  000000   ZERO
   10  000000   ZERO
    7  000000   ZERO
    6  000000   ZERO
    5  000000   ZERO
    4  000000   ZERO
    3  000000   ZERO
    2  000000   ZERO
    1  000000   ZERO
    0  000000   ZERO

DISK-CONTROL-STATUS INTERNAL-PARITY-ERROR READ-COMPARE-DIFFERENCE NXM TRANSFER-ABORTED IDLE 
ECC ERROR PATTERN BITS 447
ECC ERROR BIT POSITION 333
LAST-CC-COMMAND READ 
DISK-ADDRESS UNIT 0 CYLINDER 35 HEAD 16 SECTOR 7 
MEMORY-ADDRESS 13600400
LAST-CC-COMMAND-LIST-POINTER 12
COMMAND-LIST 
12 13600400

RETRYING 

DISK-CONTROL-STATUS INTERNAL-PARITY-ERROR READ-COMPARE-DIFFERENCE NXM TRANSFER-ABORTED IDLE 
ECC ERROR PATTERN BITS 2623
ECC ERROR BIT POSITION 334
LAST-CC-COMMAND READ 
DISK-ADDRESS UNIT 0 CYLINDER 35 HEAD 16 SECTOR 7 
MEMORY-ADDRESS 13600400
LAST-CC-COMMAND-LIST-POINTER 12
COMMAND-LIST 
12 13600400

RETRYING 

DISK-CONTROL-STATUS INTERNAL-PARITY-ERROR READ-COMPARE-DIFFERENCE NXM TRANSFER-ABORTED IDLE 
ECC ERROR PATTERN BITS 2623
ECC ERROR BIT POSITION 334
LAST-CC-COMMAND READ 
DISK-ADDRESS UNIT 0 CYLINDER 35 HEAD 16 SECTOR 7 
MEMORY-ADDRESS 13600400
LAST-CC-COMMAND-LIST-POINTER 12
COMMAND-LIST 
12 13600400

RETRYING 

DISK-CONTROL-STATUS INTERNAL-PARITY-ERROR READ-COMPARE-DIFFERENCE NXM TRANSFER-ABORTED IDLE 
ECC ERROR PATTERN BITS 1117
ECC ERROR BIT POSITION 332
LAST-CC-COMMAND READ 
DISK-ADDRESS UNIT 0 CYLINDER 35 HEAD 16 SECTOR 7 
MEMORY-ADDRESS 13600400
LAST-CC-COMMAND-LIST-POINTER 12
COMMAND-LIST 
12 13600400

RETRYING 

DISK-CONTROL-STATUS INTERNAL-PARITY-ERROR READ-COMPARE-DIFFERENCE NXM TRANSFER-ABORTED IDLE 
ECC ERROR PATTERN BITS 1117
ECC ERROR BIT POSITION 332
LAST-CC-COMMAND READ 
DISK-ADDRESS UNIT 0 CYLINDER 35 HEAD 16 SECTOR 7 
MEMORY-ADDRESS 13600400
LAST-CC-COMMAND-LIST-POINTER 12
COMMAND-LIST 
12 13600400
Error printing debugging information:
  2110100023 ARRAY HEADER NOT DTP-ARRAY-HEADER - QF-ARRAY-SETUP 7-Mar-83 15:51:11-EST,1235;000000000000
Return-path: <sr.kwc@MIT-SPEECH>
Date: Monday, 7 March 1983, 14:52-EST
From: Kenneth W. Church <sr.kwc at MIT-SPEECH>
Subject: more on alphabetic-case-affects-string-comparison
To: BUG-LISPM at MIT-OZ

In Release 4.1, System 222.171, Experimental Spire 7.5,
site configuration 16, kwc-thesis, on Lisp Machine Panda:

There is no right way to bind alphabetic-case-... in the following
program:

(with-lower-case				; bind alphabetic-... to t
	(setq x (make-equal-hash-table))
	(puthash-equal "x" 1 x)
	(puthash-equal "X" 2 x)
	(print (convert-ihash-to-alist x))	; prints (("x" . 1) ("X" . 2))
	(COMPILER:FASD-SYMBOL-VALUE "SPEECH:SS:<SR.KWC.ALIGN>FOO" 'X)
	(without-lower-case			; bind alphabetic-... to nil
	   (load "SPEECH:SS:<SR.KWC.ALIGN>FOO"))
	(print (convert-ihash-to-alist x)))	; prints (("X" . 2))

The problem is that I have to bind alphabetic-... to NIL in order to parse
the file name, but to T in order to rehash the strings to the proper place!

I think that (fs:parse-pathname ...) should bind alphabetic-... to NIL
so that I can bind it to NIL outside the LOAD.  I have found that I can
kludge around this problem by typing filenames in upper case and binding
alphabetic-... to t.

- ken
 7-Mar-83 16:17:25-EST,781;000000000000
Return-path: <MMcM@SCRC-TENEX>
Date:  7 Mar 1983 1619-EST
From: Mike McMahon <MMcM at SCRC-TENEX>
Subject: Re: more on alphabetic-case-affects-string-comparison
To: sr.kwc at MIT-SPEECH
cc: BUG-LISPM at MIT-OZ
In-Reply-To: The message of Monday, 7 March 1983, 14:52-EST from Kenneth W. Church <sr.kwc at MIT-SPEECH>

Binding alphabetic-case-affects-string-comparison when using a hash table
does not work completely anyway.  If a GC flip occurs and some process accesses
the hash table without that binding (such as via DESCRIBE), it will be rehashed
and case dependence lost.  You should be using case-sensitive-equal-hash-table's.
They may not be there in 4.1, but their definition is only a couple of lines
long and you could copy it over from hash.lisp.
-------
 7-Mar-83 16:29:20-EST,2781;000000000000
Return-path: <dove@MIT-DSPG>
Date: Monday, 7 March 1983, 16:21-EST
From: Webster Dove <dove at MIT-DSPG>
To: BUG-LISPM at MIT-OZ

In Experimental MIT-Specific 18.1, Experimental System 93.24,
Experimental ZMail 49.9, microcode 226, gc@2, on Ford Prefect:


Insert your description of the circumstances here:

died while trying to edit a particilar function definition

>>TRAP 23012 (PDL-OVERFLOW REGULAR)
The regular push-down list has overflown.
Backtrace from the debugger:

SI:PRINT-QUOTED-STRING (P.C. = 74406)

   --Missing args:--
 Arg 0 (STRING)
 Arg 1 (SLASHIFY-P)
 Arg 2 (STREAM)
 Arg 3 (FASTP)
Local 0 (TEM): #<DTP-FEF-POINTER SI:PRINT-QUOTED-STRING 1561504>
Local 1 (CHAR): "intervals.LISP lispm.ai// DSPG:"
Local 2 (I): NIL
Local 3 (CH): FORMAT:FORMAT-STRING-STREAM


SI:PRINT-OBJECT (P.C. = 334)

 Arg 0 (EXP): "intervals.LISP lispm.ai// DSPG:"
 Arg 1 (I-PRINDEPTH): 0
 Arg 2 (SLASHIFY-P): NIL
 Arg 3 (STREAM): FORMAT:FORMAT-STRING-STREAM
   --Defaulted args:--
 Arg 4 (WHICH-OPERATIONS): (TYO STRING-OUT READ-CURSORPOS INCREMENT-CURSORPOS ...)
Local 0 (NSS): NIL
Local 1 (FASTP): (STRING-OUT READ-CURSORPOS INCREMENT-CURSORPOS SET-CURSORPOS ...)
Local 2 (I): NIL
Local 3 (DIM): NIL


PRINC (P.C. = 30)

 Arg 0 (EXP): "intervals.LISP lispm.ai// DSPG:"
 Arg 1 (STREAM): FORMAT:FORMAT-STRING-STREAM


(METHOD ZWEI:NAMED-BUFFER PRINT-SELF) (P.C. = 51)

 Arg 0 (OPERATION): PRINT-SELF
 Arg 1 (STREAM): FORMAT:FORMAT-STRING-STREAM
 Arg 2 (DEPTH): 0
 Arg 3 (SLASHIFY): NIL


SI:PRINT-OBJECT (P.C. = 357)

 Arg 0 (EXP): #<ZMACS-BUFFER "intervals.LISP lispm.ai// DSPG:" 30577556>
 Arg 1 (I-PRINDEPTH): 0
 Arg 2 (SLASHIFY-P): NIL
 Arg 3 (STREAM): FORMAT:FORMAT-STRING-STREAM
   --Defaulted args:--
 Arg 4 (WHICH-OPERATIONS): (TYO STRING-OUT READ-CURSORPOS INCREMENT-CURSORPOS ...)
Local 0 (NSS): NIL
Local 1 (FASTP): (STRING-OUT READ-CURSORPOS INCREMENT-CURSORPOS SET-CURSORPOS ...)
Local 2 (I): NIL
Local 3 (DIM): NIL


Remainder of stack:

PRINC (P.C. = 30)
FORMAT:FORMAT-CTL-ASCII (P.C. = 124)
FORMAT:FORMAT-CTL-OP (P.C. = 53)
FORMAT:FORMAT-CTL-STRING (P.C. = 140)
FORMAT (P.C. = 176)
ZWEI:REPLACE-POSSIBILITY (P.C. = 143)
ZWEI:RESECTIONIZE-BUFFER-POSSIBILITY (P.C. = 117)
ZWEI:EXECUTE-POSSIBILITY (P.C. = 23)
ZWEI:INDIRECT-TO-POSSIBILITIES (P.C. = 43)
ZWEI:DEFINITIONS-IN-BUFFER-POSSIBILITY (P.C. = 30)
...
ZWEI:COMMAND-EXECUTE (P.C. = 100)
ZWEI:PROCESS-COMMAND-CHAR (P.C. = 67)
(METHOD ZWEI:WINDOW EDIT) (P.C. = 465)
(INTERNAL (METHOD ZWEI:ZMACS-WINDOW COMBINED EDIT) 0) (P.C. = 74)
FUNCALL (P.C. = 25)
(METHOD ZWEI:DISPLAYER AROUND EDIT) (P.C. = 31)
(METHOD ZWEI:ZMACS-WINDOW COMBINED EDIT) (P.C. = 47)
ZWEI:ZMACS-WINDOW-TOP-LEVEL (P.C. = 46)
SI:PROCESS-TOP-LEVEL (P.C. = 121)
 7-Mar-83 18:06:14-EST,1049;000000000000
Return-path: <Anonymous@MIT-OZ>
Date: Monday, 7 March 1983, 18:05-EST
From: Soley@MIT-MC
Sender: Anonymous@MIT-OZ
Subject: OZ:SRC:<S.PATCH>SYSTEM-222-145
To: BUG-LISPM@MIT-OZ

In Release 4.0, System 222.144, site configuration 6, on Lisp Machine Sixteen:

Attempting to do (load-and-save-patches) on CADR16, died while
attempting to load system patch 222-145 (49% of the way through).

	-- Richard

>>Error: FASL-GROUP-OVERFLOW
While in the function SYS:FASL-OP-INDEX  SI:FASL-GROUP  SI:FASL-NEXT-VALUE


SYS:FASL-OP-INDEX: (P.C. = 71)
 Local 0 (LOW): NIL


SYS:FASL-OP-INDEX:  (P.C. = 71)

SI:FASL-GROUP:  (P.C. = 103)

SI:FASL-NEXT-VALUE:  (P.C. = 22)

SYS:FASL-OP-LIST:  (P.C. = 101)
   --Defaulted args:--
   Arg 0 (AREA): SYS:FASL-CONSTANTS-AREA
   Arg 1 (COMPONENT-FLAG): NIL

SI:FASL-GROUP:  (P.C. = 103)

SI:FASL-NEXT-VALUE:  (P.C. = 22)

SYS:FASL-OP-LIST:  (P.C. = 101)
   --Defaulted args:--
   Arg 0 (AREA): SYS:FASL-CONSTANTS-AREA
   Arg 1 (COMPONENT-FLAG): NIL

SI:FASL-GROUP:  (P.C. = 103)
 7-Mar-83 21:14:18-EST,625;000000000000
Return-path: <Dulcey@MIT-OZ>
Date: Monday, 7 March 1983, 21:09-EST
From: Mark J. Dulcey <Dulcey at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In Experimental MIT-Specific 18.1, Experimental System 93.24,
Experimental ZMail 49.9, Experimental Local-File 43.0, microcode 226, LF,
on Lisp Machine One:

Trying to use the local file system under 93 loses.  You can build the
system and initialize the file partition, but when you try to boot the
file system (by booting the band or by FS:BOOT-FILE-SYSTEM) it blows up
in FS:SETUP-OLD-ROOT-DIRECTORY.

(I was doing this on a disk with no previously existing file partition.)
 7-Mar-83 21:16:14-EST,479;000000000000
Return-path: <Dulcey@MIT-OZ>
Date: Monday, 7 March 1983, 21:11-EST
From: Mark J. Dulcey <Dulcey at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In Experimental MIT-Specific 18.1, Experimental System 93.24,
Experimental ZMail 49.9, Experimental Local-File 43.0, microcode 226, LF,
on Lisp Machine One:

The MagTape software in 93 is broken.  The function FS:GET-RQB-ARRAY is
called in numerous places in the MTSTR file, but is not defined.

Who is hacking this stuff these days?
 7-Mar-83 23:29:56-EST,689;000000000000
Return-path: <Moon@SCRC-TENEX>
Date: Monday, 7 March 1983, 23:28-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: OZ:SRC:<S.PATCH>SYSTEM-222-145
To: Soley at MIT-MC
Cc: BUG-LISPM at MIT-OZ
In-reply-to: The message of 7 Mar 83 18:05-EST from Soley at MIT-MC

    Date: Monday, 7 March 1983, 18:05-EST
    From: Soley@MIT-MC

    Attempting to do (load-and-save-patches) on CADR16, died while
    attempting to load system patch 222-145 (49% of the way through).

I compared files and there was a single bit different in the file on OZ.
So I copied it over there again.  It might be a lot faster to find a machine
that has an up to date Release 4.1 band and copy that.
 8-Mar-83 01:02:17-EST,545;000000000000
Return-path: <CAL@MIT-OZ>
Date: Tuesday, 8 March 1983, 01:02-EST
From: Cliff Lasser <CAL@MIT-OZ>
To: BUG-LISPM@MIT-OZ

In System 222.170, Hardcopy 11.14, Zmail 74.37, Tape 13.0, LMFS 30.19,
cold load 65, microcode TMC5-MIC 181, site configuration 16, on PI Project:

doing a (funcall nil)  gives an error message that is not very obvious. It says
something about a call to sys:call-funny-function.  I could not even do a
control-m in the debugger to show you the error itself.  It took me a while to
figure out what the problem was.
 8-Mar-83 03:05:16-EST,1444;000000000000
Return-path: <Moon@SCRC-TENEX>
Date: Tuesday, 8 March 1983, 02:57-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: (FUNCALL NIL) on the 3600
To: Cliff Lasser <CAL at MIT-OZ>
Cc: BUG-LISPM at MIT-OZ
In-reply-to: The message of 8 Mar 83 01:02-EST from Cliff Lasser <CAL at MIT-OZ>

    Date: Tuesday, 8 March 1983, 01:02-EST
    From: Cliff Lasser <CAL@MIT-OZ>
    In System 222.170, Hardcopy 11.14, Zmail 74.37, Tape 13.0, LMFS 30.19,
    cold load 65, microcode TMC5-MIC 181, site configuration 16, on PI Project:

    doing a (funcall nil)  gives an error message that is not very obvious. It says
    something about a call to sys:call-funny-function.  I could not even do a
    control-m in the debugger to show you the error itself.  It took me a while to
    figure out what the problem was.

I fixed these bugs in CALL-FUNNY-FUNCTION and DECODE-FRAME-REST-ARG in
the source the first time they were reported, which was something like
two months ago.  CALL-FUNNY-FUNCTION wasn't doing its error checking
correctly, and DECODE-FRAME-REST-ARG only worked for frames with
legitimate functions in them.  I believe the c-M command (or, rather,
the functions it calls) has been changed in the source by someone to be
more robust, also, so that it won't blow out while trying to write
the error report.

Since there is such a timelag in software distribution, these things should
probably be patched.  Opinions?
 8-Mar-83 05:16:14-EST,582;000000000000
Return-path: <RWK@SCRC-TENEX>
Date:  8 Mar 1983 0519-EST
From: Robert W. Kerns <RWK at SCRC-TENEX>
Subject: Re: more on alphabetic-case-affects-string-comparison
To: sr.kwc at MIT-SPEECH, BUG-LISPM at MIT-OZ
cc: RWK at SCRC-TENEX
In-Reply-To: The message of Monday, 7 March 1983, 14:52-EST from Kenneth W. Church <sr.kwc at MIT-SPEECH>

I think you should use a case-sensitive hash table rather than
binding ALHABETIC-CASe-AFFECTS-STRING-COMPARISON.  I'm at home
right now or I'd check to see if the system already has a flavor
you could use.  I think it does.
-------
 8-Mar-83 11:23:09-EST,1261;000000000000
Return-path: <ALR@MIT-OZ>
Mail-From: ALR created at  8-Mar-83 11:21:30
Date: Tuesday, 8 March 1983  11:21-EST
Sender: ALR @ MIT-OZ
From: ALR @ MIT-MC
To:   BUG-LISPM @ MIT-OZ
CC:   ALR @ OZ

System Brand X.

The following are some suggestions to improve the
temporary-choose-variable-value menu.

The window could have a notion of the current item on the menu.  Then one
could edit that with just a keystroke such as ctrl-E.  Given this, one
could move around the menu to select other options with other control
chars.  Currently, one can only select items with the mouse.  If you want
to select several items to edit, it is slow to have to go back and forth
from the keyboard to the mouse.

The window ought to allow multiple variables on the same line in the menu.
This would allow a menu to show a generalized table of variables to change.
To set up the geometry it could take something like a format control string
for each line.

If one has selected an item to edit (assuming that it is the kind that
expects input from the keyboard), if there is another item already on the
screen with the same value it could let the user mouse that item and use
that as the new value for the item that the user is editing.

Enjoy,
Andrew
 8-Mar-83 11:27:22-EST,519;000000000000
Return-path: <ALR@MIT-OZ>
Mail-From: ALR created at  8-Mar-83 11:24:34
Date: Tuesday, 8 March 1983  11:24-EST
Sender: ALR @ MIT-OZ
From: ALR @ MIT-MC
To:   BUG-LISPM @ MIT-OZ
CC:   ALR @ OZ

In system X.  it would be nice if Dired buffers in ZMACS were named
something like the following:

*Dired-directoryname-2*

Then, one could use completion to select a dired without knowing what the
random number was at the end of the dired name, unless one had two direds
with the same directory name.

Andrew
 8-Mar-83 11:37:35-EST,2734;000000000000
Return-path: <dove@MIT-DSPG>
Date: Tuesday, 8 March 1983, 11:18-EST
From: Webster Dove <dove at MIT-DSPG>
To: BUG-LISPM at MIT-OZ

In Experimental MIT-Specific 18.1, Experimental System 93.24,
Experimental ZMail 49.9, microcode 226, gc@2, on Arthur Dent:


Insert your description of the circumstances here:

This problem seems to happen whenever I try to edit a defun that isn't
in a buffer already.  The editor creates the wrong file name
"intervals.LISP" instead of "intervals.l" and since it can't find it,
makes a buffer editing a (new file).  Shortly after that, before it
comes back to keyboard wait, the pdl overflows.

>>TRAP 23012 (PDL-OVERFLOW REGULAR)
The regular push-down list has overflown.
Backtrace from the debugger:

ARRAY-TYPE (P.C. = 13340)

   --Missing args:--
 Arg 0 (ARRAY)


SI:PRINT-RAW-STRING (P.C. = 34)

 Arg 0 (STRING): "intervals.LISP lispm.ai// DSPG:"
 Arg 1 (STREAM): FORMAT:FORMAT-STRING-STREAM
 Arg 2 (FASTP): (STRING-OUT READ-CURSORPOS INCREMENT-CURSORPOS SET-CURSORPOS ...)
Local 0 (TEM): NIL
Local 1 (I): NIL


SI:PRINT-QUOTED-STRING (P.C. = 54)

 Arg 0 (STRING): "intervals.LISP lispm.ai// DSPG:"
 Arg 1 (SLASHIFY-P): NIL
 Arg 2 (STREAM): FORMAT:FORMAT-STRING-STREAM
 Arg 3 (FASTP): (STRING-OUT READ-CURSORPOS INCREMENT-CURSORPOS SET-CURSORPOS ...)
Local 0 (TEM): NIL
Local 1 (CHAR): NIL
Local 2 (I): NIL
Local 3 (CH): NIL


SI:PRINT-OBJECT (P.C. = 334)

 Arg 0 (EXP): "intervals.LISP lispm.ai// DSPG:"
 Arg 1 (I-PRINDEPTH): 0
 Arg 2 (SLASHIFY-P): NIL
 Arg 3 (STREAM): FORMAT:FORMAT-STRING-STREAM
   --Defaulted args:--
 Arg 4 (WHICH-OPERATIONS): (TYO STRING-OUT READ-CURSORPOS INCREMENT-CURSORPOS ...)
Local 0 (NSS): NIL
Local 1 (FASTP): (STRING-OUT READ-CURSORPOS INCREMENT-CURSORPOS SET-CURSORPOS ...)
Local 2 (I): NIL
Local 3 (DIM): NIL


PRINC (P.C. = 30)

 Arg 0 (EXP): "intervals.LISP lispm.ai// DSPG:"
 Arg 1 (STREAM): FORMAT:FORMAT-STRING-STREAM


Remainder of stack:

(METHOD ZWEI:NAMED-BUFFER PRINT-SELF) (P.C. = 51)
SI:PRINT-OBJECT (P.C. = 357)
PRINC (P.C. = 30)
FORMAT:FORMAT-CTL-ASCII (P.C. = 124)
FORMAT:FORMAT-CTL-OP (P.C. = 53)
FORMAT:FORMAT-CTL-STRING (P.C. = 140)
FORMAT (P.C. = 176)
ZWEI:REPLACE-POSSIBILITY (P.C. = 143)
ZWEI:RESECTIONIZE-BUFFER-POSSIBILITY (P.C. = 117)
ZWEI:EXECUTE-POSSIBILITY (P.C. = 23)
...
ZWEI:COMMAND-EXECUTE (P.C. = 100)
ZWEI:PROCESS-COMMAND-CHAR (P.C. = 67)
(METHOD ZWEI:WINDOW EDIT) (P.C. = 465)
(INTERNAL (METHOD ZWEI:ZMACS-WINDOW COMBINED EDIT) 0) (P.C. = 74)
FUNCALL (P.C. = 25)
(METHOD ZWEI:DISPLAYER AROUND EDIT) (P.C. = 31)
(METHOD ZWEI:ZMACS-WINDOW COMBINED EDIT) (P.C. = 47)
ZWEI:ZMACS-WINDOW-TOP-LEVEL (P.C. = 46)
SI:PROCESS-TOP-LEVEL (P.C. = 121)
 8-Mar-83 16:09:37-EST,2042;000000000000
Return-path: <CAL@MIT-OZ>
Date: Tuesday, 8 March 1983, 16:07-EST
From: Cliff Lasser <CAL@MIT-OZ>
To: BUG-LISPM@MIT-OZ

In System 222.170, Hardcopy 11.14, Zmail 74.37, Tape 13.0, LMFS 30.19,
cold load 65, microcode TMC5-MIC 181, site configuration 14, on PI Project:

I don't know what I did to deserve this:

>>Error: Inbox buffer out of synch, get a wizard
While in the function (METHOD ZWEI:FILE-MAIL-BUFFER SAVING-DONE)  (METHOD ZWEI:BABYL-BUFFER COMBINED SAVING-DONE)  ZWEI:SAVE-BUFFER-INTERNAL


(METHOD ZWEI:FILE-MAIL-BUFFER SAVING-DONE): (P.C. = 33)
 Arg 0 (SELF): #<BABYL-BUFFER "OZ:PS:<CAL>CAL.BABYL" 36751670>
 Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:FILE-MAIL-BUFFER -- 9. IV's, 0. FL's 26723100>
 Arg 2 (OPERATION): SAVING-DONE
 Arg 3 (FORCING-OUT): NIL


(METHOD ZWEI:FILE-MAIL-BUFFER SAVING-DONE):  (P.C. = 33)
   Arg 0 (SELF): #<BABYL-BUFFER "OZ:PS:<CAL>CAL.BABYL" 36751670>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:FILE-MAIL-BUFFER -- 9. IV's, 0. FL's 26723100>
   Arg 2 (OPERATION): SAVING-DONE
   Arg 3 (FORCING-OUT): NIL

(METHOD ZWEI:BABYL-BUFFER COMBINED SAVING-DONE):  (P.C. = 23)
   Arg 0 (SELF): #<BABYL-BUFFER "OZ:PS:<CAL>CAL.BABYL" 36751670>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:BABYL-BUFFER -- 3. IV's, 6. FL's 26724521>
   Rest arg (.DAEMON-CALLER-ARGS.): (SAVING-DONE NIL)

ZWEI:SAVE-BUFFER-INTERNAL:  (P.C. = 61)
   Arg 0 (BUFFER): #<BABYL-BUFFER "OZ:PS:<CAL>CAL.BABYL" 36751670>
   Arg 1 (FOR-FINISH): NIL

ZWEI:SAVE-MAIL-BUFFER:  (P.C. = 102)
   Arg 0 (BUFFER): #<BABYL-BUFFER "OZ:PS:<CAL>CAL.BABYL" 36751670>
   --Defaulted args:--
   Arg 1 (FOR-FINISH): NIL

ZWEI:EXPUNGE-AND-SAVE-SEQUENCE:  (P.C. = 11)
   Arg 0 (SEQUENCE): #<BABYL-BUFFER "OZ:PS:<CAL>CAL.BABYL" 36751670>

ZWEI:ZMAIL-SAVE-ALL:  (P.C. = 11)

ZWEI:COM-ZMAIL-QUIT:  (P.C. = 33)

ZWEI:COMMAND-EXECUTE:  (P.C. = 65)
   Arg 0 (COMMAND): ZWEI:COM-ZMAIL-QUIT
   Arg 1 (CHAR): 161
   --Defaulted args:--
   Arg 2 (PREFIX-CHAR): NIL
   Arg 3 (HOOK-LIST): NIL
 8-Mar-83 16:45:44-EST,422;000000000000
Return-path: <Soley@MIT-MC>
Date: Tuesday, 8 March 1983, 16:41-EST
From: Richard Mark Soley <Soley at MIT-MC>
Subject: M-X Hardcopy File
To: BUG-LISPM at OZ

In Release 4.0, site configuration 6, on Lisp Machine Sixteen:

I got the following notification:

16:22 Process (FORMAT NIL Hardcopy File ~A PATHNAME) wants to type out.

Um, this looks like a difficult one to debug, but humorous.....

	-- Richard
 8-Mar-83 17:04:17-EST,4214;000000000000
Return-path: <CAL@MIT-OZ>
Date: Tuesday, 8 March 1983, 17:00-EST
From: Cliff Lasser <CAL@MIT-OZ>
To: BUG-LISPM@MIT-OZ

In System 222.170, Hardcopy 11.14, Zmail 74.37, Tape 13.0, LMFS 30.19,
cold load 65, microcode TMC5-MIC 181, site configuration 14, on PI Project:

I was trying to create a split screen window and then to frame it.  The first
time I moused FRAME, nothing happened.  This is what happened after the second
time: 

>>Trap: The instance variable SYS:STACK-GROUP is unbound in #<TEMPORARY-CHOOSE-VARIABLE-VALUES-WINDOW Split Screen Choose Values 47053566 deactivated>.
While in the function (METHOD TV:BASIC-CHOOSE-VARIABLE-VALUES ITEM-WIDTH)  (METHOD TV:BASIC-CHOOSE-VARIABLE-VALUES ADJUST-GEOMETRY-FOR-NEW-VARIABLES)  (METHOD TV:BASIC-CHOOSE-VARIABLE-VALUES SET-VARIABLES)


(METHOD TV:BASIC-CHOOSE-VARIABLE-VALUES ITEM-WIDTH): (P.C. = 34)
 Arg 0 (SELF): #<TEMPORARY-CHOOSE-VARIABLE-VALUES-WINDOW Split Screen Choose Values 47053566 deactivated>
 Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:BASIC-CHOOSE-VARIABLE-VALUES -- 7. IV's, 0. FL's 14554116>
 Arg 2 (OPERATION): ITEM-WIDTH
 Arg 3 (ITEM): (TV:*FRAME-NAME* "Name of frame" STRING)
   --Defaulted args:--
 Arg 4 (EXTRA-WIDTH): 0
 Arg 5 (STOP-X): NIL
 Local 6 (X): 170
 Local 7 (PREFIX-WIDTH): 170
 Local 8 (CHOICE-TAIL): NIL
 Local 9 (STR): "Name of frame"
 Local 10 (FONTNO): 1
 Local 11 (VAR): TV:*FRAME-NAME*
 Local 12 (PF): PRINC
 Local 13 (IGNORE): READLINE
 Local 14 (CHOICES): NIL
 Local 15 (GPVF): NIL
 Local 16 (GVVF): NIL


(METHOD TV:BASIC-CHOOSE-VARIABLE-VALUES ITEM-WIDTH):  (P.C. = 34)
   Arg 0 (SELF): #<TEMPORARY-CHOOSE-VARIABLE-VALUES-WINDOW Split Screen Choose Values 47053566 deactivated>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:BASIC-CHOOSE-VARIABLE-VALUES -- 7. IV's, 0. FL's 14554116>
   Arg 2 (OPERATION): ITEM-WIDTH
   Arg 3 (ITEM): (TV:*FRAME-NAME* "Name of frame" STRING)
   --Defaulted args:--
   Arg 4 (EXTRA-WIDTH): 0
   Arg 5 (STOP-X): NIL

(METHOD TV:BASIC-CHOOSE-VARIABLE-VALUES ADJUST-GEOMETRY-FOR-NEW-VARIABLES):  (P.C. = 24)
   Arg 0 (SELF): #<TEMPORARY-CHOOSE-VARIABLE-VALUES-WINDOW Split Screen Choose Values 47053566 deactivated>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:BASIC-CHOOSE-VARIABLE-VALUES -- 7. IV's, 0. FL's 14554116>
   Arg 2 (OPERATION): ADJUST-GEOMETRY-FOR-NEW-VARIABLES
   Arg 3 (WID): NIL

(METHOD TV:BASIC-CHOOSE-VARIABLE-VALUES SET-VARIABLES):  (P.C. = 23)
   Arg 0 (SELF): #<TEMPORARY-CHOOSE-VARIABLE-VALUES-WINDOW Split Screen Choose Values 47053566 deactivated>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:BASIC-CHOOSE-VARIABLE-VALUES -- 7. IV's, 0. FL's 14554116>
   Arg 2 (OPERATION): SET-VARIABLES
   Arg 3 (ELEMS): ((TV:*FRAME-NAME* "Name of frame" STRING) (TV:*SYSTEM-KEY* "[SYSTEM] <char> selects it" CHARACTER-OR-NIL))
   Arg 4 (NO-SET-HEIGHT): T

(METHOD TV:BASIC-CHOOSE-VARIABLE-VALUES AFTER INIT):  (P.C. = 14)
   Arg 0 (SELF): #<TEMPORARY-CHOOSE-VARIABLE-VALUES-WINDOW Split Screen Choose Values 47053566 deactivated>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:BASIC-CHOOSE-VARIABLE-VALUES -- 7. IV's, 0. FL's 14554116>
   Arg 2 (OPERATION): INIT
   Arg 3 (PLIST): #<DTP-LOCATIVE 46140302>

(METHOD TV:TEMPORARY-CHOOSE-VARIABLE-VALUES-WINDOW COMBINED INIT):  (P.C. = 136)
   Arg 0 (SELF): #<TEMPORARY-CHOOSE-VARIABLE-VALUES-WINDOW Split Screen Choose Values 47053566 deactivated>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:TEMPORARY-CHOOSE-VARIABLE-VALUES-WINDOW -- 0. IV's, 14. FL's 14562136>
   Rest arg (.DAEMON-CALLER-ARGS.): (INIT #<DTP-LOCATIVE 46140302>)

TV:MAKE-WINDOW:  (P.C. = 70)
   Arg 0 (FLAVOR-NAME): TV:TEMPORARY-CHOOSE-VARIABLE-VALUES-WINDOW
   Rest arg: (MORE-P NIL CHARACTER-HEIGHT 2 TAB-NCHARS 10 MARGIN-SCROLL-REGIONS (TOP BOTTOM) SELECTED-CHOICE-FONT #<FONT HL10B 10455215> ...)

(PROPERTY TV:SPLIT-SCREEN-CHOOSE-VALUES SI:RESOURCE-CONSTRUCTOR):  (P.C. = 32)
   Arg 0 (IGNORE): #<RESOURCE 737563>
   Arg 1 (SUPERIOR): #<MAIN-SCREEN Main Screen 13600000 exposed>

ALLOCATE-RESOURCE:  (P.C. = 212)
   Arg 0 (RESOURCE-NAME): TV:SPLIT-SCREEN-CHOOSE-VALUES
   Rest arg (PARAMETERS): (#<MAIN-SCREEN Main Screen 13600000 exposed>)
 8-Mar-83 18:19:24-EST,621;000000000000
Return-path: <Henry@MIT-OZ>
Date: Tuesday, 8 March 1983, 18:13-EST
From: Henry Lieberman <Henry@MIT-OZ>
Subject: Windows and more processing
To: BUG-LISPM@MIT-OZ

In Release 4.1, System 222.171, site configuration 14, on Lisp Machine Apiary-1:

I have a TV:WINDOW which I use to display some output.
I created the window with :MORE-P NIL, but then I tried to
turn on "More Processing" from the Attributes menu. I get a **MORE** 
when output hits the end of the page, but I have no way to type the space to 
continue output! Mousing the window doesn't help. Do I perhaps need some other
mixin or something? 
 8-Mar-83 22:53:14-EST,784;000000000000
Return-path: <Daniel@MIT-OZ>
Date: Tuesday, 8 March 1983, 22:49-EST
From: Daniel Weise <Daniel@MIT-OZ>
Subject: logging out and logging in.
To: bug-lispm@MIT-OZ

On PI. System 222.170

Someone else was logged into this machine.   I went to login but that bombed
cause the si:logout-list had garbage in it.  So I
(advise logout :around nil nil nil)'d.  This too lost.  Upon doing (login
'daniel) the machine promptly set the user-id to DANIEL but then proceeded
to act as if the user were the person last using the machine. For example, it
loaded his init file, not mine.  I realize that flushing the logout function
may not be right (I ended up setting si:logout-list to nil and unadvising logout
to win) but it still seems buggy that login got so confused.

Daniel
 9-Mar-83 02:14:32-EST,499;000000000000
Return-path: <barmar@MIT-MULTICS>
Date: Wednesday, 9 March 1983, 02:09-EST
From: Barry Margolin <barmar at MIT-MULTICS>
Subject: login-forms
To: BUG-LISPM@MIT-OZ

In Experimental MIT-Specific 18.1, Experimental System 93.24,
Experimental ZMail 49.9, microcode 226, gc@2, on Arthur Dent:

The login-forms special for should try macro-expanding the subforms that
don't seem to have undo-function properties.  That way, many "def"-type
macros would be undoable, as well as many SETF forms.
 9-Mar-83 04:10:47-EST,2864;000000000000
Return-path: <Hdt@MIT-OZ>
Date: Wednesday, 9 March 1983, 03:59-EST
From: Hdt@MIT-OZ
To: bug-lispm@MIT-MC, bug-file@MIT-MC
CC: Hdt@MIT-OZ


    In Experimental MIT-Specific 18.1, Experimental System 93.18,
    Experimental ZMail 49.8, microcode 226, gc@2,
    on Lisp Machine Eighteen:


    listf of .mail.; on mc

    >>TRAP 7521 (SUBSCRIPT-OOB M-Q M-S (NIL XAREF-RECHECK-INDEX) M-A)
    The subscript 17 for #<ART-16B-15 23737277> was out of range in AR-1.
    Backtrace from the debugger:

    TIME:ENCODE-UNIVERSAL-TIME (P.C. = 72)

     Arg 0 (SECONDS): 0
     Arg 1 (MINUTES): 0
     Arg 2 (HOURS): 0
     Arg 3 (DAY): 37
     Arg 4 (MONTH): 17
     Arg 5 (YEAR): 33
       --Defaulted args:--
     Arg 6 (TIMEZONE): 5
    Local 0 (TEM): NIL


    FS:PARSE-DIRECTORY-DATE-PROPERTY (P.C. = 234)

     Arg 0 (STRING): "REFERENCE-DATE 15//31//27 00:00:00"
     Arg 1 (START): 17
       --Defaulted args:--
     Arg 2 (END): 40
    Local 0 (FLAG): T
    Local 1 (DAY): 37
    Local 2 (MONTH): 17
    Local 3 (YEAR): 33
    Local 4 (HOURS): 0
    Local 5 (MINUTES): 0
    Local 6 (SECONDS): 0
    Local 7 (G6256): NIL
    Local 8 (G6257): NIL
    Local 9 (*SELECTQ-ITEM*): NIL


    FS:READ-DIRECTORY-STREAM-ENTRY (P.C. = 223)

     Arg 0 (STREAM): #<FILE-DIRECTORY-STREAM "MC: .MAIL.; * *" 30510505>
     Arg 1 (DEFAULTING-PATHNAME): #FS:ITS-PATHNAME "MC: .MAIL.; * *"
    Local 0 (PATH): #FS:ITS-PATHNAME "MC: .MAIL.; COMSAT LAUNCH"
    Local 1 (EOF): NIL
    Local 2 (IND): REFERENCE-DATE
    Local 3 (FUN): FS:PARSE-DIRECTORY-DATE-PROPERTY
    Local 4 (DEFAULT-FUN): #<DTP-FEF-POINTER SUBSTRING 1613651>
    Local 5 (DEV): "DSK"
    Local 6 (DIR): ".MAIL."
    Local 7 (NAM): "COMSAT"
    Local 8 (TYP): "LAUNCH"
    Local 9 (VER): UNSPECIFIC
    Local 10 (LINE): "REFERENCE-DATE 15//31//27 00:00:00"
    Local 11 (LEN): 40
    Local 12 (I): 16
    Local 13 (G6199): (23430611241)
    Local 14 (PLIST): (PHYSICAL-VOLUME-FREE-BLOCKS NIL BLOCK-SIZE 110000 ...)
    Local 15 (X): ("REFERENCE-DATE" REFERENCE-DATE FS:PARSE-DIRECTORY-DATE-PROPERTY TV:PRINT-UNIVERSAL-TIME-OR-NEVER ...)
    Local 16 (G6201): (("READER" READER SUBSTRING PRINC ...))


    (METHOD FS:DIRECTORY-STREAM-MIXIN READ-DIRECTORY-STREAM-ENTRY) (P.C. = 27)

     Arg 0 (OPERATION): READ-DIRECTORY-STREAM-ENTRY
     Arg 1 (STREAM): #<FILE-DIRECTORY-STREAM "MC: .MAIL.; * *" 30510505>


    (SELECT-METHOD FS:DIRECTORY-STREAM-DIRECTORY-LIST-STREAM ENTRY) (P.C. = 27)

     Arg 0 (IGNORE): ENTRY


    Remainder of stack:

    (SELECT-METHOD ZWEI:DIRECTORY-INPUT-STREAM-IO LINE-IN) (P.C. = 134)
    STREAM-COPY-UNTIL-EOF (P.C. = 120)
    LISTF (P.C. = 221)
    SI:*EVAL (P.C. = 1145)
    SI:EVAL-ABORT-TRIVIAL-ERRORS (P.C. = 44)
    SI:LISP-TOP-LEVEL1 (P.C. = 254)
    SI:LISP-TOP-LEVEL (P.C. = 35)
 9-Mar-83 21:04:32-EST,3229;000000000000
Return-path: <Zvona@MIT-OZ>
Date: Wednesday, 9 March 1983, 20:48-EST
From: David Chapman <Zvona@MIT-OZ>
Subject: unix file server cretinism
To: BUG-LISPM@MIT-OZ

In Release 4.1, System 222.171, Experimental Spire 7.10,
site configuration 16, on Lisp Machine Six:

What is this garbage?

>>Error: Illegal request format.
For VX: /vlsi/scheme82/cm/flag.cif
While in the function (METHOD FS:HOST-UNIT COMMAND)  (METHOD FS:FILE-DATA-STREAM-MIXIN COMMAND)  (METHOD FS:FILE-DATA-STREAM-MIXIN CHANGE-PROPERTIES)


(METHOD FS:HOST-UNIT COMMAND): (P.C. = 363)
 (SELF = #<HOST-UNIT 34303725>)
 Arg 0 (OPERATION): COMMAND
 Arg 1 (MARK-P): NIL
 Arg 2 (STREAM-OR-HANDLE): #<FILE-OUTPUT-CHARACTER-STREAM "VX: //vlsi//scheme82//cm//flag.cif" 31501427>
 Arg 3 (SIMPLE-P): NIL
 Arg 4 (WHOSTATE): "Change Properties"
 Rest arg (COMMANDS): ("CHANGE-PROPERTIES
CREATION-DATE 03//01//83 18:15:54
")
 Local 1 (HANDLE): "O1893"
 Local 2 (STREAM): #<FILE-OUTPUT-CHARACTER-STREAM "VX: //vlsi//scheme82//cm//flag.cif" 31501427>
 Local 3 (PKT): #<CHAOS Packet 34254513>
 Local 4 (SUCCESS): NIL
 Local 5 (STRING): "O1893 ERROR IRF C Illegal request format."
 Local 6 (TRANSACTION-ID): "T1896"
 Local 7 (CREATE-P): NIL
 Local 8 (FROM): 6.
 Local 9 (CONDITION): NIL
 Local 10: T
 Local 11: (#<CASE-HANDLER 2351607> #<CASE-HANDLER 2351527> #<CASE-HANDLER 2352727> #<BIND-HANDLER 2345041> #<BIND-HANDLER 2345553>)


(METHOD FS:HOST-UNIT COMMAND):  (P.C. = 363)
   (SELF = #<HOST-UNIT 34303725>)
   Arg 0 (OPERATION): COMMAND
   Arg 1 (MARK-P): NIL
   Arg 2 (STREAM-OR-HANDLE): #<FILE-OUTPUT-CHARACTER-STREAM "VX: //vlsi//scheme82//cm//flag.cif" 31501427>
   Arg 3 (SIMPLE-P): NIL
   Arg 4 (WHOSTATE): "Change Properties"
   Rest arg (COMMANDS): ("CHANGE-PROPERTIES
CREATION-DATE 03//01//83 18:15:54
")

(METHOD FS:FILE-DATA-STREAM-MIXIN COMMAND):  (P.C. = 43)
   (SELF = #<FILE-OUTPUT-CHARACTER-STREAM "VX: //vlsi//scheme82//cm//flag.cif" 31501427>)
   Arg 0 (OPERATION): COMMAND
   Arg 1 (MARK-P): NIL
   Arg 2 (WHOSTATE): "Change Properties"
   Arg 3 (COM): "CHANGE-PROPERTIES
CREATION-DATE 03//01//83 18:15:54
"
   Rest arg (STRINGS): NIL

(METHOD FS:FILE-DATA-STREAM-MIXIN CHANGE-PROPERTIES):  (P.C. = 146)
   (SELF = #<FILE-OUTPUT-CHARACTER-STREAM "VX: //vlsi//scheme82//cm//flag.cif" 31501427>)
   Arg 0 (OPERATION): CHANGE-PROPERTIES
   Arg 1 (ERROR-P): T
   Rest arg (PROPERTIES): (CREATION-DATE 2624397354.)

FS:COPY-AUTHOR-AND-CREATION-DATE:  (P.C. = 135)
   Arg 0 (STREAM): #<FILE-OUTPUT-CHARACTER-STREAM "VX: //vlsi//scheme82//cm//flag.cif" 31501427>
   Arg 1 (NEW-AUTHOR): NIL
   Arg 2 (NEW-CREATION-DATE): 2624397354.

COPYF:  (P.C. = 502)
   Arg 0 (FROM-PATHNAME): #<TOPS20-PATHNAME "OZ:PS:<CM.DPL>FLAG.CIF.2">
   Arg 1 (TO-PATHNAME): #<UNIX-PATHNAME "VX: //vlsi//scheme82//cm//flag.cif">
   Rest arg: (CHARACTERS DEFAULT COPY-CREATION-DATE T COPY-AUTHOR NIL REPORT-STREAM #<TYPEIN-WINDOW Typein Window 2 20522536 exposed>)

ZWEI:COM-COPY-FILE:  (P.C. = 410)

ZWEI:COM-EXTENDED-COMMAND:  (P.C. = 67)

ZWEI:COMMAND-EXECUTE:  (P.C. = 100)
   Arg 0 (COMMAND): ZWEI:COM-EXTENDED-COMMAND
   Arg 1 (CHAR): 600.
   Arg 2 (PREFIX-CHAR): NIL
   Arg 3 (HOOK-LIST): NIL
 9-Mar-83 21:06:00-EST,3229;000000000000
Return-path: <Zvona@MIT-OZ>
Date: Wednesday, 9 March 1983, 20:49-EST
From: David Chapman <Zvona@MIT-OZ>
Subject: unix file server cretinism
To: BUG-LISPM@MIT-OZ

In Release 4.1, System 222.171, Experimental Spire 7.10,
site configuration 16, on Lisp Machine Six:

What is this garbage?

>>Error: Illegal request format.
For VX: /vlsi/scheme82/cm/flag.cif
While in the function (METHOD FS:HOST-UNIT COMMAND)  (METHOD FS:FILE-DATA-STREAM-MIXIN COMMAND)  (METHOD FS:FILE-DATA-STREAM-MIXIN CHANGE-PROPERTIES)


(METHOD FS:HOST-UNIT COMMAND): (P.C. = 363)
 (SELF = #<HOST-UNIT 34303725>)
 Arg 0 (OPERATION): COMMAND
 Arg 1 (MARK-P): NIL
 Arg 2 (STREAM-OR-HANDLE): #<FILE-OUTPUT-CHARACTER-STREAM "VX: //vlsi//scheme82//cm//flag.cif" 31501427>
 Arg 3 (SIMPLE-P): NIL
 Arg 4 (WHOSTATE): "Change Properties"
 Rest arg (COMMANDS): ("CHANGE-PROPERTIES
CREATION-DATE 03//01//83 18:15:54
")
 Local 1 (HANDLE): "O1893"
 Local 2 (STREAM): #<FILE-OUTPUT-CHARACTER-STREAM "VX: //vlsi//scheme82//cm//flag.cif" 31501427>
 Local 3 (PKT): #<CHAOS Packet 34254513>
 Local 4 (SUCCESS): NIL
 Local 5 (STRING): "O1893 ERROR IRF C Illegal request format."
 Local 6 (TRANSACTION-ID): "T1896"
 Local 7 (CREATE-P): NIL
 Local 8 (FROM): 6.
 Local 9 (CONDITION): NIL
 Local 10: T
 Local 11: (#<CASE-HANDLER 2351607> #<CASE-HANDLER 2351527> #<CASE-HANDLER 2352727> #<BIND-HANDLER 2345041> #<BIND-HANDLER 2345553>)


(METHOD FS:HOST-UNIT COMMAND):  (P.C. = 363)
   (SELF = #<HOST-UNIT 34303725>)
   Arg 0 (OPERATION): COMMAND
   Arg 1 (MARK-P): NIL
   Arg 2 (STREAM-OR-HANDLE): #<FILE-OUTPUT-CHARACTER-STREAM "VX: //vlsi//scheme82//cm//flag.cif" 31501427>
   Arg 3 (SIMPLE-P): NIL
   Arg 4 (WHOSTATE): "Change Properties"
   Rest arg (COMMANDS): ("CHANGE-PROPERTIES
CREATION-DATE 03//01//83 18:15:54
")

(METHOD FS:FILE-DATA-STREAM-MIXIN COMMAND):  (P.C. = 43)
   (SELF = #<FILE-OUTPUT-CHARACTER-STREAM "VX: //vlsi//scheme82//cm//flag.cif" 31501427>)
   Arg 0 (OPERATION): COMMAND
   Arg 1 (MARK-P): NIL
   Arg 2 (WHOSTATE): "Change Properties"
   Arg 3 (COM): "CHANGE-PROPERTIES
CREATION-DATE 03//01//83 18:15:54
"
   Rest arg (STRINGS): NIL

(METHOD FS:FILE-DATA-STREAM-MIXIN CHANGE-PROPERTIES):  (P.C. = 146)
   (SELF = #<FILE-OUTPUT-CHARACTER-STREAM "VX: //vlsi//scheme82//cm//flag.cif" 31501427>)
   Arg 0 (OPERATION): CHANGE-PROPERTIES
   Arg 1 (ERROR-P): T
   Rest arg (PROPERTIES): (CREATION-DATE 2624397354.)

FS:COPY-AUTHOR-AND-CREATION-DATE:  (P.C. = 135)
   Arg 0 (STREAM): #<FILE-OUTPUT-CHARACTER-STREAM "VX: //vlsi//scheme82//cm//flag.cif" 31501427>
   Arg 1 (NEW-AUTHOR): NIL
   Arg 2 (NEW-CREATION-DATE): 2624397354.

COPYF:  (P.C. = 502)
   Arg 0 (FROM-PATHNAME): #<TOPS20-PATHNAME "OZ:PS:<CM.DPL>FLAG.CIF.2">
   Arg 1 (TO-PATHNAME): #<UNIX-PATHNAME "VX: //vlsi//scheme82//cm//flag.cif">
   Rest arg: (CHARACTERS DEFAULT COPY-CREATION-DATE T COPY-AUTHOR NIL REPORT-STREAM #<TYPEIN-WINDOW Typein Window 2 20522536 exposed>)

ZWEI:COM-COPY-FILE:  (P.C. = 410)

ZWEI:COM-EXTENDED-COMMAND:  (P.C. = 67)

ZWEI:COMMAND-EXECUTE:  (P.C. = 100)
   Arg 0 (COMMAND): ZWEI:COM-EXTENDED-COMMAND
   Arg 1 (CHAR): 600.
   Arg 2 (PREFIX-CHAR): NIL
   Arg 3 (HOOK-LIST): NIL
 9-Mar-83 23:11:10-EST,3456;000000000000
Return-path: <KwH@MIT-OZ>
Date: Wednesday, 9 March 1983, 22:57-EST
From: Ken Haase <KwH@MIT-OZ>
To: BUG-LISPM@MIT-OZ

In Experimental MIT-Specific 18.1, Experimental System 93.22,
Experimental ZMail 49.9, Experimental DAEDALUS 2.0,
Experimental Nodes 2.3, microcode 226, New Daedalus,
on Lisp Machine Two:


Insert your description of the circumstances here:

This happend while trying to describe the result of a call to dbg:arg,
the form was precisely "(dbg:arg 1)"


>>TRAP 7324. (TRANS-TRAP)
The variable *LEXPR-ARGLIST* is unbound.
Backtrace from the debugger:

ARG (P.C. = 33)

 Arg 0 (N): 1.
Local 0 (ARGPTR): NIL


SI:*EVAL (P.C. = 1145)

 Arg 0 (FORM): (ARG 1.)
Local 0 (ARGNUM): 1.
Local 1 (FCTN): #<DTP-FEF-POINTER ARG 1601325>
Local 2 (ARG-DESC): 65.
Local 3 (NUM-ARGS): 1.
Local 4 (CLOSURE-PASSED): NIL
Local 5 (LAMBDA-LIST): NIL
Local 6 (LL): NIL
Local 7 (QUOTE-STATUS): NIL
Local 8 (REST-FLAG): NIL
Local 9 (ARGL): NIL
Local 10 (ADL): NIL
Local 11 (ITEM): NIL
Local 12 (*SELECTQ-ITEM*): NIL


SI:*EVAL (P.C. = 1124)

 Arg 0 (FORM): (DESCRIBE (ARG 1.))
Local 0 (ARGNUM): 0.
Local 1 (FCTN): #<DTP-FEF-POINTER DESCRIBE 1630247>
Local 2 (ARG-DESC): 66.
Local 3 (NUM-ARGS): 1.
Local 4 (CLOSURE-PASSED): NIL
Local 5 (LAMBDA-LIST): NIL
Local 6 (LL): NIL
Local 7 (QUOTE-STATUS): NIL
Local 8 (REST-FLAG): NIL
Local 9 (ARGL): ((ARG 1.))
Local 10 (ADL): NIL
Local 11 (ITEM): NIL
Local 12 (*SELECTQ-ITEM*): NIL


Additional information supplied with call:
 Values to be collected for MULTIPLE-VALUE-LIST

SI:EVAL-ABORT-TRIVIAL-ERRORS (P.C. = 44)

 Arg 0 (TOP-LEVEL-FORM): (DESCRIBE (ARG 1.))
Local 0 (G0716): ((SYS:TOO-FEW-ARGUMENTS SYS:TOO-MANY-ARGUMENTS SYS:CELL-CONTENTS-ERROR SYS:WRONG-TYPE-ARGUMENT ...) SI:EVAL-ABORT-TRIVIAL-ERRORS-HANDLER)
Local 1 (G0717): ((** SI:EVAL-ABORT-TRIVIAL-ERRORS-HANDLER))


EH:FH-STREAM-BINDING-EVALER (P.C. = 214)

 Arg 0 (FORM): (DESCRIBE (ARG 1.))
 Arg 1 (+): (PRINT-HERALD)
 Arg 2 (*): NIL
 Arg 3 (++): (PRINT-HERALD)
 Arg 4 (**): {Unit KWH [@14362564]}
 Arg 5 (+++): (EXAMINE-UNIT KWH)
 Arg 6 (***): {Unit KWH [@14362564]}
 Arg 7 (EH-SG): #<DTP-STACK-GROUP "Zmacs Frame 1" 33021137>
 Arg 8 (EH-FRAME): 504.
 Arg 9 (EH-ERROR): #EH:ARG-TYPE-ERROR CONDITION-NAMES (EH:ARG-TYPE-ERROR ERROR CONDITION SYS:WRONG-TYPE-ARGUMENT) ARG-NUMBER T FUNCTION CAR ARG-POINTER UNIT ARG-DATA-TYPE 3 DESCRIPTION CONS ARG-LOCATION-IN-SG EH:M-T RESTART-TAG CAR
 Arg 10 (SG): #<DTP-STACK-GROUP "SECOND-LEVEL-ERROR-HANDLER-2" 23100070>
 Arg 11 (EH-P): T
 Arg 12 (PREV-FH): 516.
 Arg 13 (EH-TERMINAL-IO): #<EDITOR-TYPEOUT-WINDOW Editor Typeout Window 1 15412514 exposed>
Local 0 (WIN-P): NIL
Local 1 (RESULT): NIL
Local 2 (TAG): ("Return to debugger level ~S." 1.)


Remainder of stack:

EH:FOOTHOLD (P.C. = 20)
EH:INVOKE-DEBUGGER (P.C. = 22)
SIGNAL-CONDITION (P.C. = 232)
EH:FH-APPLIER-NO-RESTART (P.C. = 41)
EH:FOOTHOLD (P.C. = 20)
$PUT-VALUE (P.C. = 44)
SI:*EVAL (P.C. = 1145)
LET (P.C. = 104)
SI:*EVAL (P.C. = 1145)
SI:*EVAL (P.C. = 536)
...
ZWEI:COMMAND-EXECUTE (P.C. = 100)
ZWEI:PROCESS-COMMAND-CHAR (P.C. = 67)
(METHOD ZWEI:WINDOW EDIT) (P.C. = 465)
(INTERNAL (METHOD ZWEI:ZMACS-WINDOW COMBINED EDIT) 0.) (P.C. = 74)
FUNCALL (P.C. = 25)
(METHOD ZWEI:DISPLAYER AROUND EDIT) (P.C. = 31)
(METHOD ZWEI:ZMACS-WINDOW COMBINED EDIT) (P.C. = 47)
ZWEI:ZMACS-WINDOW-TOP-LEVEL (P.C. = 46)
SI:PROCESS-TOP-LEVEL (P.C. = 121)
 9-Mar-83 23:14:03-EST,3257;000000000000
Return-path: <KwH@MIT-OZ>
Date: Wednesday, 9 March 1983, 23:15-EST
From: Ken Haase <KwH@MIT-OZ>
To: BUG-LISPM@MIT-OZ

In Experimental MIT-Specific 18.1, Experimental System 93.24,
Experimental ZMail 49.9, Experimental DAEDALUS 2.0,
Experimental Nodes 2.5, microcode 226, New Daedalus,
on Lisp Machine Two:


Insert your description of the circumstances here:

The following function:

(defun mess-up ()
  (assq 'x 'y))

     when evaluated, dies in the manner explicated below.  
     Note that:
      a) the first argument (according to the debugger) is actually
          the second argument, and
      b) the second argument is nonsense...


>>TRAP 5630 (ARGTYP CONS M-T T CAR CAR)
The argument to CAR, Y, was of the wrong type.
The function expected a cons.
Backtrace from the debugger:

ASSQ:
   Arg 0 (X): Y
   Arg 1 (ALIST): 2405


SI:*EVAL (P.C. = 1145)

 Arg 0 (FORM): (ASSQ (QUOTE X) (QUOTE Y))
Local 0 (ARGNUM): 2
Local 1 (FCTN): #<DTP-U-ENTRY ASSQ 341>
Local 2 (ARG-DESC): 202
Local 3 (NUM-ARGS): 2
Local 4 (CLOSURE-PASSED): NIL
Local 5 (LAMBDA-LIST): NIL
Local 6 (LL): NIL
Local 7 (QUOTE-STATUS): NIL
Local 8 (REST-FLAG): NIL
Local 9 (ARGL): NIL
Local 10 (ADL): NIL
Local 11 (ITEM): NIL
Local 12 (*SELECTQ-ITEM*): NIL


SI:APPLY-LAMBDA (P.C. = 1247)

 Arg 0 (FCTN): (NAMED-LAMBDA MESS-UP NIL (ASSQ ** **))
 Arg 1 (A-VALUE-LIST): NIL
Local 0 (TEM): NIL
Local 1 (OPTIONALF): NIL
Local 2 (QUOTEFLAG): NIL
Local 3 (TEM): NIL
Local 4 (RESTF): NIL
Local 5 (INIT): NIL
Local 6 (THIS-RESTF): NIL
Local 7 (FCTN): ((ASSQ ** **))
Local 8 (LAMBDA-LIST): NIL
Local 9 (DT-STATUS): &DT-DONTCARE
Local 10 (VALUE-LIST): NIL
Local 11 (MISSING-REQ-KEYS): NIL
Local 12 (KEYNAMES): NIL
Local 13 (KEYVALUES): NIL
Local 14 (KEYINITS): NIL
Local 15 (KEYKEYS): NIL
Local 16 (KEYOPTFS): NIL
Local 17 (KEYFLAGS): NIL
Local 18 (KEY-SUPPLIED-FLAGS): NIL
Local 19 (ALLOW-OTHER-KEYS): NIL
Local 20 (KEYL): NIL
Local 21 (FLAGL): NIL
Local 22 (VL): NIL
Local 23 (KEYWORD): NIL
Local 24 (TEM): NIL
Local 25 (TEM1): NIL
Local 26 (KVS): NIL
Local 27 (KIS): NIL
Local 28 (MAP-RESULT): NIL
Local 29 (MAP-TEMP): NIL
Local 30 (G4620): NIL
Local 31 (PROGV-VARS): NIL
Local 32 (PROGV-VALS): NIL
Local 33 (L): ((ASSQ ** **))
Local 34 (ARG): NIL
Local 35 (ARGS): NIL


MESS-UP:


SI:*EVAL (P.C. = 526)

 Arg 0 (FORM): (MESS-UP)
Local 0 (ARGNUM): 0
Local 1 (FCTN): (NAMED-LAMBDA MESS-UP NIL (ASSQ ** **))
Local 2 (ARG-DESC): 1000077
Local 3 (NUM-ARGS): 0
Local 4 (CLOSURE-PASSED): NIL
Local 5 (LAMBDA-LIST): NIL
Local 6 (LL): NIL
Local 7 (QUOTE-STATUS): &EVAL
Local 8 (REST-FLAG): NIL
Local 9 (ARGL): NIL
Local 10 (ADL): NIL
Local 11 (ITEM): NIL
Local 12 (*SELECTQ-ITEM*): NIL


Remainder of stack:

SI:EVAL-ABORT-TRIVIAL-ERRORS (P.C. = 44)
BREAK (P.C. = 443)
ZWEI:COM-BREAK (P.C. = 46)
ZWEI:COMMAND-EXECUTE (P.C. = 100)
ZWEI:PROCESS-COMMAND-CHAR (P.C. = 67)
(METHOD ZWEI:WINDOW EDIT) (P.C. = 465)
(INTERNAL (METHOD ZWEI:ZMACS-WINDOW COMBINED EDIT) 0) (P.C. = 74)
FUNCALL (P.C. = 25)
(METHOD ZWEI:DISPLAYER AROUND EDIT) (P.C. = 31)
(METHOD ZWEI:ZMACS-WINDOW COMBINED EDIT) (P.C. = 47)
ZWEI:ZMACS-WINDOW-TOP-LEVEL (P.C. = 46)
SI:PROCESS-TOP-LEVEL (P.C. = 121)
10-Mar-83 13:16:05-EST,1962;000000000000
Return-path: <Mailer@MIT-OZ>
Date: Thursday, 10 March 1983, 13:11-EST
From: John Bradstreet <Bradst !@MIT-OZ>
To: BUG-LISPM@MIT-OZ

In Experimental MIT-Specific 18.1, Experimental System 93.18,
Experimental ZMail 49.8, microcode 226, gc@2, on Lisp Machine Five:


Insert your description of the circumstances here:

What happenened to {TeX} mode ?


>>TRAP 12765 (ARGTYP NUMBER PP 0 QILSP)
The first argument to SYS:M-<, NIL, was of the wrong type.
The function expected a number.
Backtrace from the debugger:

(INTERNAL ZWEI:TURN-ON-MODE 0) (P.C. = 27)

 Arg 0 (X): NIL
 Arg 1 (Y): ZWEI:{TEX}-MODE


SI:SORT-SHORT-LIST (P.C. = 35)

 Arg 0 (L): (ZWEI:{TEX}-MODE NIL)
 Arg 1 (LPRED): #<DTP-FEF-POINTER (INTERNAL ZWEI:TURN-ON-MODE 0) 17074756>
Local 0 (I): 1
Local 1 (SWITCH): T
Local 2 (LP): (ZWEI:{TEX}-MODE NIL)


SORT (P.C. = 45)

 Arg 0 (X): (ZWEI:{TEX}-MODE NIL)
 Arg 1 (SORT-LESSP-PREDICATE): #<DTP-FEF-POINTER (INTERNAL ZWEI:TURN-ON-MODE 0) 17074756>
Local 0 (TEM): NIL


ZWEI:TURN-ON-MODE (P.C. = 134)

 Arg 0 (MODE-SYMBOL): ZWEI:{TEX}-MODE
Local 0 (G0046): NIL
Local 1 (MINOR): NIL
Local 2 (HOOK): ZWEI:{TEX}-MODE-HOOK


(METHOD ZWEI:INTERVAL SET-MAJOR-MODE) (P.C. = 55)

 Arg 0 (OPERATION): SET-MAJOR-MODE
 Arg 1 (NEW-MODE): ZWEI:{TEX}-MODE
Local 0 (G5688): NIL
Local 1 (MODE): ZWEI:RETURN-INDENTS-MODE


Remainder of stack:

(METHOD ZWEI:ZMACS-BUFFER COMBINED SET-MAJOR-MODE) (P.C. = 50)
ZWEI:REPARSE-BUFFER-MODE-LINE (P.C. = 121)
ZWEI:COM-REPARSE-MODE-LINE (P.C. = 26)
ZWEI:COM-EXTENDED-COMMAND (P.C. = 67)
ZWEI:COMMAND-EXECUTE (P.C. = 100)
ZWEI:PROCESS-COMMAND-CHAR (P.C. = 67)
(METHOD ZWEI:WINDOW EDIT) (P.C. = 465)
(INTERNAL (METHOD ZWEI:ZMACS-WINDOW COMBINED EDIT) 0) (P.C. = 74)
FUNCALL (P.C. = 25)
(METHOD ZWEI:DISPLAYER AROUND EDIT) (P.C. = 31)
(METHOD ZWEI:ZMACS-WINDOW COMBINED EDIT) (P.C. = 47)
ZWEI:ZMACS-WINDOW-TOP-LEVEL (P.C. = 46)
SI:PROCESS-TOP-LEVEL (P.C. = 121)
10-Mar-83 17:16:43-EST,265;000000000000
Return-path: <KASS@MIT-OZ>
Mail-From: KASS created at 10-Mar-83 16:57:55
Date: 10 Mar 1983 1657-EST
From: KASS@MIT-OZ
Subject: Cadr 23 brain damage
To: Bug-lispm@MIT-OZ
cc: Koch@MIT-OZ, Kass@MIT-OZ

Cadr 23 spontaneously died and refuses to boot.
-------
11-Mar-83 01:16:05-EST,2366;000000000000
Return-path: <Mly@MIT-OZ>
Date: Friday, 11 March 1983, 01:13-EST
From: Richard Mlynarik <Mly@MIT-OZ>
To: BUG-LISPM@MIT-OZ

In Experimental MIT-Specific 18.1, Experimental System 93.26,
Experimental ZMail 49.9, microcode 226, gc@2, on Lisp Machine One:


Insert your description of the circumstances here:

Using split screen, two buffers. Had just selected upper window with mouse left
(buffername = coma.lisp, windowname = zmacs window pane 3) Did m-. on a function
not in a different buffer and got...

>>TRAP 16234 (TRANS-TRAP)
The instance variable BASE-TICK is unbound in #<ZMACS-WINDOW-PANE Zmacs Window Pane 3 15427422 exposed>.
Backtrace from the debugger:

(:METHOD DISPLAYER :BASE-TICK) (P.C. = 23)

 Arg 0 (IGNORE): :BASE-TICK


(:METHOD NODE :MODIFIED-P) (P.C. = 31)

 Arg 0 (OPERATION): :MODIFIED-P


BUFFER-MODIFIED-P (P.C. = 22)

 Arg 0 (BUFFER): #<NODE 24540415>


UNDO-SAVE-NEW-SMALL-CHANGE (P.C. = 527)

 Arg 0 (BP1): ("" 0 :NORMAL)
 Arg 1 (BP2): ("" 0 :MOVES)
Local 0 (UNDO-STATUS): (#<NODE 24540415> NIL ("" 0 :NORMAL) ("" 0 :MOVES) ...)
Local 1 (BP1-INSIDE): NIL
Local 2 (BP2-INSIDE): NIL
Local 3 (LINE): NIL
Local 4 (END-LINE): NIL
Local 5 (ALIST): ((** 0 0) (** 0 0) (** 0 0) (** 0 0) ...)
Local 6 (COUNT): 0
Local 7 (INDEX): 0


DELETE-INTERVAL (P.C. = 111)

 Arg 0 (FROM-BP): ("" 0 :NORMAL)
   --Defaulted args:--
 Arg 1 (TO-BP): ("" 0 :MOVES)
 Arg 2 (IN-ORDER-P): NIL
Local 0 (KEPT-LINE): NIL
Local 1 (FROM-LINE): NIL
Local 2 (FROM-INDEX): NIL
Local 3 (TO-LINE): NIL
Local 4 (TO-INDEX): NIL
Local 5 (LINE-LENGTH): NIL
Local 6 (NDEL): NIL
Local 7 (FL): NIL
Local 8 (TL): NIL
Local 9 (G8343): NIL
Local 10 (BP): NIL
Local 11 (I): NIL
Local 12 (TO-LENGTH): NIL
Local 13 (FTL): NIL
Local 14 (TFL): NIL
Local 15 (16B-P): NIL
Local 16 (CH): NIL
Local 17 (LINE): NIL
Local 18 (LINE-BEFORE): NIL
Local 19 (LINE-AFTER): NIL


Remainder of stack:

READ-FUNCTION-NAME (P.C. = 221)
COM-EDIT-DEFINITION (P.C. = 77)
COMMAND-EXECUTE (P.C. = 100)
PROCESS-COMMAND-CHAR (P.C. = 67)
(:METHOD WINDOW :EDIT) (P.C. = 465)
(:INTERNAL (:METHOD ZMACS-WINDOW :COMBINED :EDIT) 0) (P.C. = 74)
FUNCALL (P.C. = 25)
(:METHOD DISPLAYER :AROUND :EDIT) (P.C. = 31)
(:METHOD ZMACS-WINDOW :COMBINED :EDIT) (P.C. = 47)
ZMACS-WINDOW-TOP-LEVEL (P.C. = 46)
SI:PROCESS-TOP-LEVEL (P.C. = 121)
11-Mar-83 02:32:04-EST,1634;000000000000
Return-path: <Mly@MIT-OZ>
Date: Friday, 11 March 1983, 02:30-EST
From: Richard Mlynarik <Mly@MIT-OZ>
To: BUG-LISPM@MIT-OZ

In Experimental MIT-Specific 18.1, Experimental System 93.27,
Experimental ZMail 49.9, microcode 226, gc@2, on Lisp Machine One:


Insert your description of the circumstances here:

Logged out of oz, logged back in typed a file, used a few c-c's to
abort the printing, and started typing ahead (before oz had caught
my c-c's, it seems) for my next command when the dreaded background
process struck!!!!!

>>TRAP 7617 (ARGTYP ARRAY M-A 0 FALL-THROUGH AREF)
The first argument to AREF, NIL, was of the wrong type.
The function expected an array.
Backtrace from the debugger:

(METHOD SI:BASIC-BUFFERED-OUTPUT-STREAM TYO) (P.C. = 45)

 Arg 0 (OPERATION): TYO
 Arg 1 (CH): 15


SUPDUP:SUPDUP-TDORS (P.C. = 117)

 Arg 0 (SHEET): #<SUPDUP Supdup 2 15426151 deexposed>
Local 0 (VPOS): 266
Local 1 (HPOS): 160


SUPDUP:SUPDUP-BUFFERED-TYO (P.C. = 66)

 Arg 0 (IGNORE): TYO
 Arg 1 (CH): 14


(METHOD SUPDUP:BASIC-NVT TYPEOUT-TOP-LEVEL) (P.C. = 136)

 Arg 0 (OPERATION): TYPEOUT-TOP-LEVEL
Local 0 (G8956): (SYS:REMOTE-NETWORK-ERROR SUPDUP:TYPEOUT-NET-ERROR)
Local 1 (G8957): ((SYS:REMOTE-NETWORK-ERROR SUPDUP:TYPEOUT-NET-ERROR))
Local 2 (OUTPUT-FUN): SUPDUP:SUPDUP-BUFFERED-TYO
Local 3 (CH): 214


SI:PROCESS-TOP-LEVEL (P.C. = 121)

 Arg 0 (IGNORE): NIL
Local 0 (G1393): ("Restart process ~A." "Supdup 2-Typeout")
Local 1 (G1393): ((SYS:ABORT ERROR) ("Restart process ~A." "Supdup 2-Typeout") T ("Restart process ~A." "Supdup 2-Typeout") ...)
Local 2 (IGNORE): NIL
11-Mar-83 02:49:33-EST,1004;000000000000
Return-path: <Moon@SCRC-TENEX>
Date: Friday, 11 March 1983, 02:33-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: Windows and more processing
To: Henry Lieberman <Henry at MIT-OZ>
Cc: BUG-LISPM at MIT-OZ
In-reply-to: The message of 8 Mar 83 18:13-EST from Henry Lieberman <Henry at MIT-OZ>

    Date: Tuesday, 8 March 1983, 18:13-EST
    From: Henry Lieberman <Henry@MIT-OZ>
    In Release 4.1, System 222.171, site configuration 14, on Lisp Machine Apiary-1:

    I have a TV:WINDOW which I use to display some output.
    I created the window with :MORE-P NIL, but then I tried to
    turn on "More Processing" from the Attributes menu. I get a **MORE** 
    when output hits the end of the page, but I have no way to type the space to 
    continue output! Mousing the window doesn't help. Do I perhaps need some other
    mixin or something? 
Works for me.  Maybe you've got some other process reading from
the window, sucking up the characters you're trying to type at it.
11-Mar-83 02:50:42-EST,686;000000000000
Return-path: <Moon@SCRC-TENEX>
Date: Friday, 11 March 1983, 02:37-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: M-X Hardcopy File
To: Richard Mark Soley <Soley at MIT-MC>
Cc: BUG-LISPM at MIT-OZ
In-reply-to: The message of 8 Mar 83 16:41-EST from Richard Mark Soley <Soley at MIT-MC>

    Date: Tuesday, 8 March 1983, 16:41-EST
    From: Richard Mark Soley <Soley at MIT-MC>
    In Release 4.0, site configuration 6, on Lisp Machine Sixteen:

    I got the following notification:

    16:22 Process (FORMAT NIL Hardcopy File ~A PATHNAME) wants to type out.

    Um, this looks like a difficult one to debug, but humorous.....

Try loading patches (222.175).
11-Mar-83 16:58:11-EST,779;000000000000
Return-path: <HENRY@MIT-OZ>
Mail-From: HENRY created at 11-Mar-83 16:54:23
Date: Friday, 11 March 1983  16:54-EST
Sender: HENRY @ MIT-OZ
From: HENRY @ MIT-MC
To:   David A. Moon <Moon @ SCRC-TENEX>
Cc:   BUG-LISPM @ MIT-OZ
Subject: Windows and more processing
In-reply-to: Msg of 11 Mar 1983 02:33-EST from David A. Moon <Moon at SCRC-TENEX>


More specifically, I had a frame with a pane TV:WINDOW mixed
with TV:PANE-MIXIN, and a :MORE-P NIL in the DEFAULT-INIT-PLIST.
There was also a TV:LISP-LISTENER-PANE in the frame. 
The Lisp-Listener process evaluated something which caused
output on the TV:WINDOW. When I turned on more processing
with the attribute menu, I get more breaks, but can't type
the space to continue. I will mail you a test case for this.
11-Mar-83 22:44:03-EST,3324;000000000000
Return-path: <ZVONA@MIT-OZ>
Date: Friday, 11 March 1983, 22:40-EST
From: David Chapman <ZVONA@MIT-OZ>
Subject: bad move -- control abort
To: BUG-LISPM@MIT-OZ

In Release 4.1, System 222.171, site configuration 14, on Lisp Machine Six:

This probably won't reproduce, and is my fault, but here it is anyway.
I logged into OZ and c-abort-ed when it was reading my init file.  That
hung closing the file so I c-m-aborted out of that (bad move, I guess).
I went to the editor and m-.'d a function.  That read in what claimed to
be OZ:SRC:<S.IO>QFILE.LISP but in fact was the last half of my init
file.  I reverted the buffer and got the following error:

>>Error: Attempt to read from #<FILE-INPUT-CHARACTER-STREAM "OZ:SRC:<S.IO>QFILE.LISP" 22247377>, which is in a marked state
While in the function (DEFUN-METHOD FILE-NEXT-READ-PKT)  (:METHOD FILE-INPUT-STREAM-MIXIN :GET-NEXT-INPUT-PKT)  (:METHOD CHAOS:CHARACTER-INPUT-STREAM-MIXIN :NEXT-INPUT-BUFFER)


(DEFUN-METHOD FILE-NEXT-READ-PKT): (P.C. = 270)
 (SELF = #<FILE-INPUT-CHARACTER-STREAM "OZ:SRC:<S.IO>QFILE.LISP" 22247377>)
 Arg 0 (SELF-MAPPING-TABLE): #<Map to flavor FILE-INPUT-STREAM-MIXIN -- 5. IV's, 1. FL's 16535111>
 Arg 1 (NO-HANG-P): NIL
 Arg 2 (FOR-SYNC-MARK-P): NIL
 Local 0 (.SELECTQ-ITEM.): :SYNC-MARKED
 Local 1 (PKT): NIL
 Local 2 (*SELECTQ-ITEM*): NIL


(DEFUN-METHOD FILE-NEXT-READ-PKT):  (P.C. = 270)
   (SELF = #<FILE-INPUT-CHARACTER-STREAM "OZ:SRC:<S.IO>QFILE.LISP" 22247377>)
   Arg 0 (SELF-MAPPING-TABLE): #<Map to flavor FILE-INPUT-STREAM-MIXIN -- 5. IV's, 1. FL's 16535111>
   Arg 1 (NO-HANG-P): NIL
   Arg 2 (FOR-SYNC-MARK-P): NIL

(:METHOD FILE-INPUT-STREAM-MIXIN :GET-NEXT-INPUT-PKT):  (P.C. = 40)
   (SELF = #<FILE-INPUT-CHARACTER-STREAM "OZ:SRC:<S.IO>QFILE.LISP" 22247377>)
   Arg 0 (OPERATION): :GET-NEXT-INPUT-PKT
   Arg 1 (NO-HANG-P): NIL

(:METHOD CHAOS:CHARACTER-INPUT-STREAM-MIXIN :NEXT-INPUT-BUFFER):  (P.C. = 33)
   (SELF = #<FILE-INPUT-CHARACTER-STREAM "OZ:SRC:<S.IO>QFILE.LISP" 22247377>)
   Arg 0 (OPERATION): :NEXT-INPUT-BUFFER
   Arg 1 (NO-HANG-P): NIL

(:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :SETUP-NEXT-INPUT-BUFFER):  (P.C. = 43)
   (SELF = #<FILE-INPUT-CHARACTER-STREAM "OZ:SRC:<S.IO>QFILE.LISP" 22247377>)
   Arg 0 (OPERATION): :SETUP-NEXT-INPUT-BUFFER
   --Defaulted args:--
   Arg 1 (NO-HANG-P): NIL

(:METHOD FILE-INPUT-CHARACTER-STREAM :COMBINED :SETUP-NEXT-INPUT-BUFFER):  (P.C. = 44)
   (SELF = #<FILE-INPUT-CHARACTER-STREAM "OZ:SRC:<S.IO>QFILE.LISP" 22247377>)
   Rest arg (.DAEMON-CALLER-ARGS.): (:SETUP-NEXT-INPUT-BUFFER)

(:METHOD SI:BUFFERED-LINE-INPUT-STREAM :LINE-IN):  (P.C. = 50)
   (SELF = #<FILE-INPUT-CHARACTER-STREAM "OZ:SRC:<S.IO>QFILE.LISP" 22247377>)
   Arg 0 (OPERATION): :LINE-IN
   Arg 1 (LEADER): 11

ZWEI:SECTIONIZE-BUFFER:  (P.C. = 373)
   Arg 0 (BUFFER): #<FILE-BUFFER "QFILE.LISP SRC:<S.IO> OZ:" 22244655>
   Arg 1 (STREAM): #<FILE-INPUT-CHARACTER-STREAM "OZ:SRC:<S.IO>QFILE.LISP" 22247377>
   Arg 2 (HACK-FONTS): NIL

(DEFUN-METHOD ZWEI:REVERT-FROM-STREAM):  (P.C. = 310)
   (SELF = #<FILE-BUFFER "QFILE.LISP SRC:<S.IO> OZ:" 22244655>)
   Arg 0 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:FILE-BUFFER-MIXIN -- 9. IV's, 0. FL's 16562733>
   Arg 1 (STREAM): #<FILE-INPUT-CHARACTER-STREAM "OZ:SRC:<S.IO>QFILE.LISP" 22247377>
11-Mar-83 23:04:07-EST,1963;000000000000
Return-path: <ZVONA@MIT-OZ>
Date: Friday, 11 March 1983, 23:01-EST
From: David Chapman <ZVONA@MIT-OZ>
Subject: debugger lossage in c-M
To: BUG-LISPM@MIT-OZ

In Release 4.1, System 222.171, site configuration 14, on Lisp Machine Six:

I did (breakon '(:method fs:host-unit :command)) and hit the breakpoint.
It typed out <<Error printing error message>> so I c-M'd and got this.
(i.e. this is the second c-M I typed.)

>>Error: Frame not found
While in the function DBG:FRAME-SPECIAL-PDL-TOP  DBG:CELL-LOCATION-IN-STACK-GROUP  SYMEVAL-IN-STACK-GROUP


DBG:FRAME-SPECIAL-PDL-TOP: (P.C. = 154)
 Arg 0 (FRAME): #<DTP-LOCATIVE 11116703>
 Arg 1 (SG): #<DTP-STACK-GROUP "ZMACS-WINDOWS" 2334105>
 Local 0 (SP): #<ART-SPECIAL-PDL-10000 2421475>
 Local 1 (FRAME1): NIL
 Local 2 (J): -1


DBG:FRAME-SPECIAL-PDL-TOP:  (P.C. = 154)
   Arg 0 (FRAME): #<DTP-LOCATIVE 11116703>
   Arg 1 (SG): #<DTP-STACK-GROUP "ZMACS-WINDOWS" 2334105>

DBG:CELL-LOCATION-IN-STACK-GROUP:  (P.C. = 70)
   Arg 0 (CELL): #<DTP-LOCATIVE -1001717>
   Arg 1 (SG): #<DTP-STACK-GROUP "ZMACS-WINDOWS" 2334105>
   Arg 2 (FRAME): #<DTP-LOCATIVE 11116703>

SYMEVAL-IN-STACK-GROUP:  (P.C. = 31)
   Arg 0 (SYM): SELF
   Arg 1 (SG): #<DTP-STACK-GROUP "ZMACS-WINDOWS" 2334105>
   Arg 2 (FRAME): #<DTP-LOCATIVE 11116703>
   --Defaulted args:--
   Arg 3 (AS-IF-CURRENT): NIL

DBG:FRAME-SELF-VALUE:  (P.C. = 74)
   Arg 0 (FRAME): #<DTP-LOCATIVE 11116703>
   --Defaulted args:--
   Arg 1 (INSTANCE-FRAME-ONLY): NIL

DBG:PRINT-FRAME-ARGS:  (P.C. = 226)
   Arg 0 (FRAME): #<DTP-LOCATIVE 11116703>
   Arg 1 (INDENT): 1

(:METHOD CONDITION :BUG-REPORT-DESCRIPTION):  (P.C. = 115)
   (SELF = #<CALL-TRAP-TRAP 22406073>)
   Arg 0 (OPERATION): :BUG-REPORT-DESCRIPTION
   Arg 1 (STANDARD-OUTPUT): #<DTP-FEF-POINTER SI:WITH-OUTPUT-TO-STRING-INTERNAL-FUNCTION 10403050>
   Arg 2 (N-FRAMES): 10

DBG:COM-MAIL-BUG-REPORT:  (P.C. = 77)

DBG:COMMAND-LOOP:  (P.C. = 620)
12-Mar-83 09:52:13-EST,407;000000000000
Return-path: <RWK@SCRC-TENEX>
Date: 12 Mar 1983 0955-EST
From: Robert W. Kerns <RWK at SCRC-TENEX>
Subject: Re: M-X Hardcopy File
To: Soley at MIT-MC, BUG-LISPM at MIT-OZ
cc: RWK at SCRC-TENEX
In-Reply-To: The message of Tuesday, 8 March 1983, 16:41-EST from Richard Mark Soley <Soley at MIT-MC>

I already fixed the Process (FORMAT NIL Hardcopy ... bug.
I believe the fix is part of 4.2
-------
12-Mar-83 10:12:05-EST,1471;000000000000
Return-path: <RWK@SCRC-TENEX>
Date: 12 Mar 1983 1011-EST
From: Robert W. Kerns <RWK at SCRC-TENEX>
Subject: Re: Windows and more processing
To: Moon at SCRC-TENEX, Henry at MIT-OZ
cc: BUG-LISPM at MIT-OZ, RWK at SCRC-TENEX
In-Reply-To: The message of Friday, 11 March 1983, 02:33-EST from David A. Moon <Moon at SCRC-TENEX>


    Date: Friday, 11 March 1983, 02:33-EST
    From: David A. Moon <Moon at SCRC-TENEX>
    Subject: Windows and more processing
    To: Henry Lieberman <Henry at MIT-OZ>
    Cc: BUG-LISPM at MIT-OZ
    In-reply-to: The message of 8 Mar 83 18:13-EST from Henry Lieberman <Henry at MIT-OZ>

        Date: Tuesday, 8 March 1983, 18:13-EST
        From: Henry Lieberman <Henry@MIT-OZ>
        In Release 4.1, System 222.171, site configuration 14, on Lisp Machine Apiary-1:

        I have a TV:WINDOW which I use to display some output.
        I created the window with :MORE-P NIL, but then I tried to
        turn on "More Processing" from the Attributes menu. I get a **MORE** 
        when output hits the end of the page, but I have no way to type the space to 
        continue output! Mousing the window doesn't help. Do I perhaps need some other
        mixin or something? 
    Works for me.  Maybe you've got some other process reading from
    the window, sucking up the characters you're trying to type at it.
I'll bet Henry's problem is that he got the **MORE** break
in a non-selected window.
-------
12-Mar-83 15:11:43-EST,447;000000000000
Return-path: <MOON@SCRC-TENEX>
Date: Saturday, 12 March 1983  15:15-EST
From: MOON at SCRC-TENEX
To:   Robert W. Kerns <RWK at SCRC-TENEX>
Cc:   BUG-LISPM at MIT-OZ, Henry at MIT-OZ
Subject: Re: Windows and more processing
In-reply-to: The message of 12 Mar 1983 1011-EST from Robert W. Kerns <RWK at SCRC-TENEX>

If you read his message, you'll see that he tried to select the
**more**ing window with the mouse but said it didn't help.
12-Mar-83 16:20:56-EST,447;000000000000
Return-path: <MOON@SCRC-TENEX>
Date: Saturday, 12 March 1983  15:15-EST
From: MOON at SCRC-TENEX
To:   Robert W. Kerns <RWK at SCRC-TENEX>
Cc:   BUG-LISPM at MIT-OZ, Henry at MIT-OZ
Subject: Re: Windows and more processing
In-reply-to: The message of 12 Mar 1983 1011-EST from Robert W. Kerns <RWK at SCRC-TENEX>

If you read his message, you'll see that he tried to select the
**more**ing window with the mouse but said it didn't help.
12-Mar-83 18:00:51-EST,576;000000000000
Return-path: <dove@MIT-DSPG>
Date: Saturday, 12 March 1983, 17:56-EST
From: Webster Dove <dove at MIT-DSPG>
To: BUG-LISPM at MIT-OZ

In Experimental MIT-Specific 18.1, Experimental System 93.24,
Experimental ZMail 49.9, microcode 226, gc@2, on Arthur Dent:

Perhaps I don't appreciate the subtlety, but I don't understand why the
following complains that a and b are used special

(DEFUN JUNK ()
  (PROGV '(A B) '(1 2)
    (LIST A B)))

when compiled.  I seems to work ok (i.e. if a & b really are special,
this nevertheless returns the values bound inside).
12-Mar-83 18:11:20-EST,1114;000000000000
Return-path: <Henry@MIT-OZ>
Date: Saturday, 12 March 1983, 18:08-EST
From: Henry Lieberman <Henry@MIT-OZ>
Subject: Test case for more processing lossage
To: BUG-LISPM@MIT-OZ

In Release 4.1, System 222.171, site configuration 14, on Lisp Machine Apiary-2:

(DEFUN MORE-LOSS ()
       (FORMAT T "~&Use the ATTRIBUTE menu to turn on more processing in the top window.~&") 
       (Y-OR-N-P "OK? ")
       (DOTIMES (? 100.) (FORMAT PLAIN-PANE "~&Am I **MORE** yet?")))

(DEFFLAVOR MORE-FRAME ()
	   (TV:BORDERED-CONSTRAINT-FRAME)
	   (:DEFAULT-INIT-PLIST
	    :PANES '((PLAIN TV:WINDOW-PANE :MORE-P NIL)
		     (LISP TV:LISP-LISTENER-PANE))
	    :CONSTRAINTS '((STANDARD . ((PLAIN LISP)
					((PLAIN :EVEN)
					 (LISP :EVEN)))))
	    :SELECTED-PANE 'LISP
	    :MORE-P NIL))

(DEFUN MAKE-MORE-FRAME ()
       (SETQ MORE-PANE
	     (TV:MAKE-WINDOW 'MORE-FRAME ':EDGES-FROM ':MOUSE ':EXPOSE-P T))
       (SETQ LISP-PANE (SEND MORE-PANE 'GET-PANE 'LISP))
       (SETQ PLAIN-PANE (SEND MORE-PANE ':GET-PANE 'PLAIN))
       (FORMAT LISP-PANE "Type (MORE-LOSS) in the Lisp Listener pane."))

12-Mar-83 18:55:52-EST,2609;000000000000
Return-path: <Henry@MIT-OZ>
Date: Saturday, 12 March 1983, 18:54-EST
From: Henry Lieberman <Henry@MIT-OZ>
Subject: Color window menu operation
To: BUG-LISPM@MIT-OZ

In Release 4.1, System 222.171, site configuration 14, on Lisp Machine Apiary-2:

Choosing the "Color Window" operation, then choosing "Any" results in this error.

>>Trap: The first argument to SYS:%INSTANCE-LOC, NIL, was of the wrong type.
The function expected an instance.
While in the function TV:SHEET-CALCULATE-OFFSETS  TV:EXPOSE-WINDOW-NEAR  TV:GET-LINE-FROM-KEYBOARD


TV:SHEET-CALCULATE-OFFSETS: (P.C. = 35)
 Arg 0 (WINDOW): #<COLOR-SCREEN Color 20521530 exposed>
 Arg 1 (TOP): #<MAIN-SCREEN Main Screen 20521445 exposed>
 Local 0 (W): NIL
 Local 1 (X-OFFSET): 0
 Local 2 (Y-OFFSET): 0


TV:SHEET-CALCULATE-OFFSETS:  (P.C. = 35)
   Arg 0 (WINDOW): #<COLOR-SCREEN Color 20521530 exposed>
   Arg 1 (TOP): #<MAIN-SCREEN Main Screen 20521445 exposed>

TV:EXPOSE-WINDOW-NEAR:  (P.C. = 216)
   Arg 0 (WINDOW): #<POP-UP-TEXT-WINDOW Pop Up Text Window 3 20556363 deactivated>
   Arg 1 (MODE): (MOUSE)
   Arg 2 (WARP-MOUSE-P): NIL
   --Defaulted args:--
   Arg 3 (EXPOSE-P): T

TV:GET-LINE-FROM-KEYBOARD:  (P.C. = 210)
   Arg 0 (PROMPT): "Flavor of window"
   Arg 1 (SUP): #<COLOR-SCREEN Color 20521530 exposed>
   Arg 2 (FUNCTION): #<DTP-FEF-POINTER READ 10355340>
   Arg 3 (POP-UP-NEAR): (MOUSE)

TV:GET-WINDOW-TYPE-FROM-KEYBOARD:  (P.C. = 136)
   Arg 0 (SUP): #<COLOR-SCREEN Color 20521530 exposed>
   Arg 1 (REQUIRED-INIT-OPTION): EDGES-FROM
   --Defaulted args:--
   Arg 2 (POP-UP-NEAR): (MOUSE)

TV:SYSTEM-MENU-CREATE-WINDOW:  (P.C. = 133)
   Arg 0 (SUP): #<COLOR-SCREEN Color 20521530 exposed>
   --Defaulted args:--
   Arg 1 (EDGES-FROM): TV:MOUSE

SI:*EVAL:  (P.C. = 653)
   Arg 0 (FORM): (TV:SYSTEM-MENU-CREATE-WINDOW COLOR:COLOR-SCREEN)

(METHOD TV:MENU-EXECUTE-MIXIN EXECUTE):  (P.C. = 100)
   (SELF = #<DYNAMIC-MULTICOLUMN-MOMENTARY-WINDOW-HACKING-MENU Dynamic Multicolumn Momentary Window Hacking Menu 1 20515636 deactivated>)
   Arg 0 (OPERATION): EXECUTE
   Arg 1 (ITEM): ("Color Window" EVAL (TV:SYSTEM-MENU-CREATE-WINDOW COLOR:COLOR-SCREEN) DOCUMENTATION "Create a window on the color screen")

(METHOD TV:MOMENTARY-MENU COMBINED EXECUTE):  (P.C. = 47)
   (SELF = #<DYNAMIC-MULTICOLUMN-MOMENTARY-WINDOW-HACKING-MENU Dynamic Multicolumn Momentary Window Hacking Menu 1 20515636 deactivated>)
   Rest arg (.DAEMON-CALLER-ARGS.): (EXECUTE ("Color Window" EVAL (TV:SYSTEM-MENU-CREATE-WINDOW COLOR:COLOR-SCREEN) DOCUMENTATION "Create a window on the color screen"))
12-Mar-83 19:50:48-EST,1043;000000000000
Return-path: <PGS@MIT-OZ>
Mail-From: PGS created at 12-Mar-83 19:47:45
Date: Saturday, 12 March 1983  19:47-EST
Sender: PGS @ MIT-OZ
From: PGS @ MIT-MC
To:   Webster Dove <dove @ MIT-DSPG>
Cc:   BUG-LISPM @ MIT-OZ
In-reply-to: Msg of 12 Mar 1983 17:56-EST from Webster Dove <dove at MIT-DSPG>

    Date: Saturday, 12 March 1983, 17:56-EST
    From: Webster Dove <dove at MIT-DSPG>
    To:   BUG-LISPM

    ...Perhaps I don't appreciate the subtlety, but I don't understand why
    the following complains that a and b are used special

    (DEFUN JUNK ()
      (PROGV '(A B) '(1 2)
        (LIST A B)))

    when compiled.  I seems to work ok (i.e. if a & b really are special,
    this nevertheless returns the values bound inside).

Well, the manual isn't that subtle.  The documentation for PROGV (page 18 of
the blue manual, someone stole my green manual) says, "PROGV is a special
form to provide the user with extra control over binding.  It binds a list of
SPECIAL (my caps) variables to a list of values..."
12-Mar-83 22:20:48-EST,283;000000000000
Return-path: <ZVONA@MIT-OZ>
Mail-From: ZVONA created at 12-Mar-83 22:17:28
Date: Saturday, 12 March 1983  22:17-EST
Sender: ZVONA @ MIT-OZ
From: ZVONA @ MIT-MC
To:   bug-lispm @ MIT-OZ

Brand S.  Could versioning for unix files be done in the same way that
types were done?
12-Mar-83 22:30:49-EST,762;000000000000
Return-path: <barmar@MIT-MULTICS>
Date: Saturday, 12 March 1983, 22:26-EST
From: Barry Margolin <barmar at MIT-MULTICS>
Subject: FILE server contact name
To: BUG-LISPM@MIT-OZ

In Experimental MIT-Specific 18.1, Experimental System 93.27,
Experimental ZMail 49.9, microcode 226, gc@2, on Ford Prefect:

Is there a way to change the contact name to use for the FILE server on
a per-host basis?  When I am testing server software I generally bring
the server up on another contact name, and I currently set
FS:*FILE-CONTACT-NAME* so that I can use it.  However, this is the
contact name used for all sites, so while this is set I cannot access
other hosts.  The SUPDUP and TELNET software allows this kind of stuff,
so it would be nice if FILE did.
12-Mar-83 22:42:29-EST,641;000000000000
Return-path: <barmar@MIT-MULTICS>
Date: Saturday, 12 March 1983, 22:37-EST
From: Barry Margolin <barmar at MIT-MULTICS>
Subject: Terminal-<invalid>
To: BUG-LISPM@MIT-OZ

In Experimental MIT-Specific 18.1, Experimental System 93.27,
Experimental ZMail 49.9, microcode 226, gc@2, on Ford Prefect:

Typing TERMINAL followed by an invalid key should beep.  I typed
TERMINAL-L (it is the same thing as TERMINAL-<CLEAR-SCREEN> on PLASMA
TV's), and was wondering what havoc I might have wreaked; a beep would
have reassured me (of course, nothing would have helped if it was
actually bound to something weird, but that's the breaks).
12-Mar-83 22:52:31-EST,456;000000000000
Return-path: <Moon@SCRC-TENEX>
Date: Saturday, 12 March 1983, 22:43-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: >>Error: Position of POINT on window is screwed up.
To: KMP at MIT-MC
Cc: BUG-LISPM at MIT-MC, CStacy at MIT-MC
In-reply-to: The message of 9 Feb 83 22:47-EST from KMP at MIT-MC

By the way, I fixed this in the source (and tested it) a while back.
In Release 5, typing Resume after this error makes your editor
work again.
12-Mar-83 22:57:40-EST,710;000000000000
Return-path: <DCP@SCRC-TENEX>
Date: Saturday, 12 March 1983, 22:53-EST
From: David C. Plummer <DCP at SCRC-TENEX>
Subject: FILE server contact name
To: barmar at MIT-MULTICS, BUG-LISPM at MIT-OZ
In-reply-to: The message of 12 Mar 83 22:26-EST from Barry Margolin <barmar at MIT-MULTICS>

If you wanted to do it yourself, all you need to is find where the host
units make their request for connection, and do something like

(defvar fs:*file-contact-name-for-host* ())

(push '("MIT-Multics" "BARMAR-FILE") fs:*file-contact-name-for-host*)

(chaos:connect host
	       (or (second (assoc fs:*file-contact-name-for-host
				  (chaos:host-data host)))
		   fs:*file-contact-name*)
	       ...)
12-Mar-83 23:59:11-EST,461;000000000000
Return-path: <Mailer@MIT-OZ>
Return-Path: <Margolin.Multics@MIT-MULTICS.ARPA>
Date:  12 March 1983 23:41 est
From:  Barry Margolin at MIT-MULTICS
Subject:  Re: FILE server contact name
To:  David C. Plummer <DCP at SCRC-TENEX>
cc:  BUG-LISPM at MIT-OZ
In-Reply-To:  Message of 12 March 1983 23:00 est from David C. Plummer

I'll try to make this change, and send it back to BUG-LISPM so that it
can be installed and patched into the various systems.
13-Mar-83 00:42:00-EST,1047;000000000000
Return-path: <barmar@MIT-MULTICS>
Date: Sunday, 13 March 1983, 00:36-EST
From: Barry Margolin <barmar at MIT-MULTICS>
Subject: Re: FILE server contact name
To: BUG-LISPM@MIT-OZ

Could the appropriate people put the following changes into
SYS:IO;QFILE LISP >, in order to implement the per-host specification of
file server contact names.  It is a simple enough change that it could
also be patched.  This is basically the scheme DCP described
in his response to my query about this feature.  I changed the order to
the ASSOC, though, because I prefer code that gives arguments in the
proper order.

This defvar should go with the defconst that defines *FILE-CONTACT-NAME*:

(defvar *host-file-contact-name-alist* nil
  "Alist of host primary names and the contact name for the file)

In the defmethod for (HOST-UNIT :VALIDATE-CONTROL-CONNECTION), replace
*FILE-CONTACT-NAME* with the following form:

(or (second (assoc (chaos:host-data host)
		   fs:*host-file-contact-name-alist*))
    *FILE-CONTACT-NAME*)
					barmar
13-Mar-83 15:03:06-EST,396;000000000000
Return-path: <Zvona@MIT-OZ>
Date: Sunday, 13 March 1983, 14:58-EST
From: David Chapman <Zvona@MIT-OZ>
Subject: polish directory
To: bug-lispm@MIT-OZ

With this shortage of disk space we may want to make
a new command (polish-directory?) that is like clean directory
but goes to 1 version of files not two.

The usefullness is obvious.  Just an Idea for the Goodhearted.

-brewster

13-Mar-83 15:23:28-EST,582;000000000000
Return-path: <MOON@SCRC-TENEX>
Date: Sunday, 13 March 1983  15:19-EST
From: MOON at SCRC-TENEX
To:   David Chapman <Zvona at MIT-OZ>
Cc:   bug-lispm at MIT-OZ
Subject: polish directory
In-reply-to: The message of 13 Mar 1983 14:58-EST from David Chapman <Zvona@MIT-OZ>

    Date: Sunday, 13 March 1983, 14:58-EST
    From: David Chapman <Zvona@MIT-OZ>

    With this shortage of disk space we may want to make
    a new command (polish-directory?) that is like clean directory
    but goes to 1 version of files not two.

    -brewster
It takes a numeric argument.
13-Mar-83 15:27:53-EST,447;000000000000
Return-path: <kahle@MIT-OZ>
Date: Sunday, 13 March 1983, 15:24-EST
From: brewster kahle <kahle@MIT-OZ>
Subject: load option in dired
To: bug-lispm@MIT-OZ

a useful feature to put in Direds would be a "load file" option.

since there has been a flurry of dired patches made, I assume
there are people that know that system better than I. (not hard)

Are these suggestions of mine just a drag? I can take "yes" very well.

-brewster

13-Mar-83 16:06:47-EST,394;000000000000
Return-path: <Zvona@MIT-OZ>
Date: Sunday, 13 March 1983, 16:02-EST
From: David Chapman <Zvona@MIT-OZ>
Subject: restart option suggestion
To: BUG-lispm@MIT-OZ

In Release 4.1, System 222.186, Hardcopy 11.14, Zmail 74.43, LMFS 30.26,
site configuration 16, on Lisp Machine Six:

a useful restart for source file of rename not found would be to supply
a different source file pathname.
13-Mar-83 18:30:39-EST,3557;000000000000
Return-path: <PGS@MIT-OZ>
Date: Sunday, 13 March 1983, 18:27-EST
From: Patrick Sobalvarro <PGS@MIT-OZ>
To: BUG-LISPM@MIT-OZ

In MIT-Specific 18.1, System 93.29, ZMail 49.9, microcode 226, gc@2,
on Lisp Machine Twenty-five:

Oz's file server was broken in some fashion; it wasn't responding to file
requests from lisp machines.  While waiting for it to come back up, I retried
the connection several times; initially the whostate was "File Data Connectio";
but eventually it went into Chaosnet Output and stayed there.  Every time I
tried to do anything with OZ (get new mail in Zmail, read files in the editor),
it just hung in Chaosnet Output, although Oz is again responding to file 1
rfc's now.  Seems like there should be a timeout somewhere in here so that it
doesn't keep trying to send down the same dead connection (if that's what it's
doing).  It may be Oz's fault (maybe oz is saying that its window is full or
something), but I am going to have to flush this connection by hand now.

>>Keyboard break.
Backtrace from the debugger:

PROCESS-WAIT (P.C. = 52)

 Arg 0 (WHOSTATE): "Chaosnet Output"
 Arg 1 (FUNCTION): #<DTP-FEF-POINTER (INTERNAL CHAOS:SEND-PKT 0) 2033530>
 Rest arg (ARGUMENTS): (#<CHAOS Connection to MIT-OZ FILE 1 30014523>)
Local 1 (STATE): 7


CHAOS:SEND-PKT (P.C. = 141)

 Arg 0 (CONN): #<CHAOS Connection to MIT-OZ FILE 1 30014523>
 Arg 1 (PKT): #<CHAOS Packet 30220404>
   --Defaulted args:--
 Arg 2 (OPCODE): 200
Local 0 (*SELECTQ-ITEM*): CHAOS:OPEN-STATE
Local 1 (LAST): NIL


(METHOD FS:HOST-UNIT NEW-DATA-CONNECTION) (P.C. = 176)
  (SELF is #<HOST-UNIT 23740672>)

 Arg 0 (OPERATION): NEW-DATA-CONNECTION
Local 0 (INPUT-HANDLE): "I1149"
Local 1 (OUTPUT-HANDLE): "O1150"
Local 2 (CONNECTION): #<CHAOS Connection 30015243>
Local 3 (SUCCESS): NIL
Local 4 (PKT): #<CHAOS Packet 30220404>
Local 5 (ID): "T1151"
Local 6 (DATA-CONN): NIL
Local 7 (STRING): NIL


(METHOD FS:HOST-UNIT GET-DATA-CONNECTION) (P.C. = 104)
  (SELF is #<HOST-UNIT 23740672>)

 Arg 0 (OPERATION): GET-DATA-CONNECTION
 Arg 1 (DIRECTION): INPUT
Local 0 (G6942): #<DTP-LOCATIVE 23740677>
Local 1 (G6943): T
Local 2 (DATA-CONNS): NIL
Local 3 (DATA-CONN): (#<CHAOS Connection 30013705> "I1087" "O1088" 14463033 ...)


Additional information supplied with call:
 Expecting 2 values

(METHOD FS:FILE-HOST-MIXIN GET-DATA-CONNECTION) (P.C. = 60)
  (SELF is #<TOPS20-CHAOS-HOST MIT-OZ>)

 Arg 0 (OPERATION): GET-DATA-CONNECTION
 Arg 1 (DIRECTION): INPUT
   --Defaulted args:--
 Arg 2 (NOERROR-P): NIL
Local 0 (ERROR-P): NIL
Local 1 (UNITS): (#<HOST-UNIT 23740672>)
Local 2 (UNIT): #<HOST-UNIT 23740672>
Local 3 (DATA-CONN): NIL


Remainder of stack:

FS:OPEN-CHAOS (P.C. = 467)
(METHOD FS:CHAOS-PATHNAME OPEN) (P.C. = 30)
OPEN (P.C. = 223)
(METHOD ZWEI:INBOX-BUFFER START-NEXT-FILE) (P.C. = 162)
ZWEI:GET-NEW-MAIL-FOR-ZMAIL-BUFFER (P.C. = 161)
ZWEI:COM-GET-NEW-MAIL-INTERNAL (P.C. = 234)
ZWEI:COM-GET-NEW-MAIL-INTERNAL (P.C. = 170)
ZWEI:COM-GET-NEW-MAIL (P.C. = 34)
ZWEI:COMMAND-EXECUTE (P.C. = 100)
ZWEI:ZMAIL-COMMAND-EXECUTE (P.C. = 27)
(METHOD ZWEI:ZMAIL-FRAME PROCESS-COMMAND-CHAR) (P.C. = 40)
(METHOD ZWEI:ZMAIL-COMMAND-LOOP-MIXIN COMMAND-LOOP) (P.C. = 273)
(INTERNAL (METHOD ZWEI:ZMAIL-FRAME COMBINED COMMAND-LOOP) 0) (P.C. = 50)
FUNCALL (P.C. = 25)
(METHOD ZWEI:ZMAIL-COMMAND-LOOP-MIXIN AROUND COMMAND-LOOP) (P.C. = 57)
(METHOD ZWEI:ZMAIL-FRAME COMBINED COMMAND-LOOP) (P.C. = 47)
ZWEI:ZMAIL-PROCESS-TOP-LEVEL (P.C. = 115)
SI:PROCESS-TOP-LEVEL (P.C. = 121)
13-Mar-83 18:40:42-EST,442;000000000000
Return-path: <RLH@MIT-EDDIE>
Date: Sunday, 13 March 1983, 18:37-EST
From: Roger L. Hale <RLH at MIT-EDDIE>
To: BUG-LISPM at MIT-OZ

In MIT-Specific 18.1, System 93.29, ZMail 49.9, microcode 226, gc@2,
on Ford Prefect:

    when I do (login 'rlh 'eddie), where I have no password,
it demands password or loginname<space>password, and I have to use the second form!
It doesn't accept just <return>, but "rlh<space><return>" works.

13-Mar-83 19:29:32-EST,767;000000000000
Return-path: <DCP@SCRC-TENEX>
Date: Sunday, 13 March 1983  19:33-EST
From: DCP at SCRC-TENEX
To:   brewster kahle <kahle at MIT-OZ>
Cc:   bug-lispm at MIT-OZ
Subject: load option in dired
In-reply-to: The message of 13 Mar 1983 15:24-EST from brewster kahle <kahle at MIT-OZ>

    Date: Sunday, 13 March 1983, 15:24-EST
    From: brewster kahle <kahle@MIT-OZ>

    a useful feature to put in Direds would be a "load file" option.
    since there has been a flurry of dired patches made, I assume
    there are people that know that system better than I. (not hard)

You can use the A (apply function) option.  When you quit, it asks for
a function to apply to the selected files.  It defaults to
compiler:compile-file.  All you need do is say LOAD.
14-Mar-83 04:42:37-EST,298;000000000000
Return-path: <Gumby@MIT-OZ>
Date: Monday, 14 March 1983, 04:39-EST
From: David Vinayak Wallace <Gumby@MIT-OZ>
To: BUG-LISPM@MIT-OZ

In MIT-Specific 18.1, System 93.29, ZMail 49.9, microcode 226, gc@22,
on Lisp Machine Six:

(locf foo) when foo is unbound works.  Shouldn't it give an error?14-Mar-83 04:52:10-EST,546;000000000000
Return-path: <Gumby@MIT-OZ>
Date: Monday, 14 March 1983, 04:47-EST
From: David Vinayak Wallace <Gumby@MIT-OZ>
To: BUG-LISPM@MIT-OZ

In MIT-Specific 18.1, System 93.29, ZMail 49.9, microcode 226, gc@22,
on Lisp Machine Six:

It would be really great if LET took a locative (or, better yet, an
arbitrary form) in place of just a variable name.  That is, what I'd
really like to be able to write is:

(let (((ship-x-postion foo-ship) 4.0)
      (((ship-pilot-name foo-ship) "John Glenn")))
  ...)

and have the right things happen.
14-Mar-83 09:58:17-EST,969;000000000000
Return-path: <dlw@SCRC-TENEX>
Date: Monday, 14 March 1983, 09:52-EST
From: Daniel L. Weinreb <dlw at SCRC-TENEX>
Subject: Re: FILE server contact name
To: barmar at MIT-MULTICS, BUG-LISPM at MIT-OZ
In-reply-to: The message of 13 Mar 83 00:36-EST from Barry Margolin <barmar at MIT-MULTICS>

Since this feature is used solely for debugging network code, I'm not
sure it makes much sense to install it permanently in the system
sources.  You can easily just make a patch file for your own use that
makes these redefinitions, for times when you are debugging file
servers.  (After all, you might someday want to debug some other kind of
server, in which case you'd need this same alist for every program that
uses the net.) One of the good things about the Lisp Machine is that you
can patch system code when you need to (unlike most operating systems);
I think this is the sort of occassion when that ability is the
appropriate solution to your problem.
14-Mar-83 09:59:42-EST,573;000000000000
Return-path: <dlw@SCRC-TENEX>
Date: Monday, 14 March 1983, 09:57-EST
From: Daniel L. Weinreb <dlw at SCRC-TENEX>
Subject: Terminal-<invalid>
To: barmar at MIT-MULTICS, BUG-LISPM at MIT-OZ
In-reply-to: The message of 12 Mar 83 22:37-EST from Barry Margolin <barmar at MIT-MULTICS>

    Date: Saturday, 12 March 1983, 22:37-EST
    From: Barry Margolin <barmar at MIT-MULTICS>
    Typing TERMINAL followed by an invalid key should beep.

Agreed.  I found that it had already been done in the source (Brand S),
apparently in response to your suggestion.  Thanks.
14-Mar-83 10:24:18-EST,1894;000000000000
Return-path: <dlw@SCRC-TENEX>
Date: Monday, 14 March 1983, 10:16-EST
From: Daniel L. Weinreb <dlw at SCRC-TENEX>
Subject: Unix versions
To: ZVONA at MIT-MC, bug-lispm at MIT-OZ
In-reply-to: The message of 12 Mar 83 22:17-EST from ZVONA at MIT-MC

    Date: Saturday, 12 March 1983  22:17-EST
    From: ZVONA @ MIT-MC
    Brand S.  Could versioning for unix files be done in the same way that
    types were done?

The reasoning here was that if you are using a system as a file
computer, you want the Lisp Machine to try to deal with files on that
system in such a way that the regular software on that system will work
in its normal fashion with these files as well.  That is, the model is
that if you use a Unix machine as a file server, you probably also log
into Unix and use the same files in a fashion normal for Unix as well.
Therefore, the Lisp Machine's generic file system model tries to conform
to the conventions of each system.  This is most evident in the pathname
syntax (that is, the user-visible syntax of a pathname is the same as on
the native host, rather than being uniform for all hosts and dictated by
the Lisp Machine).  Since Unix software doesn't use versions at all, it
wouldn't fit into this model for the Lisp Machine to create pathnames
with version numbers.

If we thought of file computers completely as a place for a Lisp Machine
user to store files, only used as a server from Lisp Machines and never
by being logged into the time-sharing system, it could have been done
the way you suggest, but that isn't the philosophy that was taken.
Given the way people use Lisp Machines and time-sharing systems
together, I think the decision came out right.

(Not to mention that with the 14-character limit, putting in a dot and a
number would even more severely restrict the lengths of file names.  This
isn't the reason, though.)
14-Mar-83 11:34:03-EST,1480;000000000000
Return-path: <dlw@SCRC-TENEX>
Date: Monday, 14 March 1983, 11:25-EST
From: Daniel L. Weinreb <dlw at SCRC-TENEX>
Subject: Color window menu operation
To: BUG-LISPM at MIT-OZ
Cc: Henry at MIT-OZ
In-reply-to: The message of 12 Mar 83 18:54-EST from Henry Lieberman <Henry at MIT-OZ>

    Date: Saturday, 12 March 1983, 18:54-EST
    From: Henry Lieberman <Henry@MIT-OZ>
    In Release 4.1, System 222.171, site configuration 14, on Lisp Machine Apiary-2:
    Choosing the "Color Window" operation, then choosing "Any" results in this error.
    >>Trap: The first argument to SYS:%INSTANCE-LOC, NIL, was of the wrong type.

The immediate cause of this bug is that trying to :expose-near :mouse
signals an error if the window is on one sheet and the mouse is on
another sheet.  Since :expose-near :mouse is a commonly-used heuristic
and it might be the case the the mouse is on some other sheet, probably
this should not signal an error, but just pop up the window somewhere or
other.  Does this sound right?

If this is fixed, the command will still look kind of strange, since the
window with the creation options pops up on the black-and-white screen
but the window that asks for the flavor (when you click Any) would
appear on the color screen, because window-type-menu is a
non-parameterized resource, but get-line-from-keyboard uses a resource
for which the superior window is a parameter.  Is there a real theory
about how this is supposed to work?
14-Mar-83 11:59:48-EST,622;000000000000
Return-path: <REID@MIT-OZ>
Mail-From: REID created at 14-Mar-83 11:54:26
Date: Monday, 14 March 1983  11:54-EST
To:   bug-lispm-mit @ MIT-OZ
Sender: REID @ MIT-OZ
from: reid @ oz
cc:   reid @ MIT-OZ

I am in desparate need of a program to copy the Lisp Machine screen to 
a high quality output device (the Dover or the Canon, if it still exists).
Unfortunately the Versatec output is not good enough for my purposes.
I am running Symbolics release 4.0 or 4.1.  Any help, pointers, etc. will
be greatly appreciated.
Is there any easy way of converting a bit-array into a press file?

  Thanks, Reid Simmons
14-Mar-83 12:09:50-EST,695;000000000000
Return-path: <PGS@MIT-OZ>
Mail-From: PGS created at 14-Mar-83 12:06:37
Date: Monday, 14 March 1983  12:06-EST
Sender: PGS @ MIT-OZ
From: PGS @ MIT-MC
To:   reid @ oz
Cc:   bug-lispm-mit @ MIT-OZ, reid @ MIT-OZ
In-reply-to: Msg of 14 Mar 1983  11:54-EST from reid at oz

The Canon is gone.  There is a Versatec on the 7th floor that you can send
your entire screen to.  Not superb quality, but a good Xerox machine makes it
look better.

Philippe Brou (PHILIP@OZ) has code to copy sections of the Lisp Machine
screen to the Dover.  One cannot copy the entire screen because the Dover's
resolution does not allow it.  Philippe's code is written for MIT systems, as
far as I know.
14-Mar-83 14:21:57-EST,2098;000000000000
Return-path: <KWH@MIT-OZ>
Mail-From: KWH created at 14-Mar-83 14:12:42
Date: Monday, 14 March 1983  14:12-EST
Sender: KWH @ MIT-OZ
From: KWH @ MIT-MC
To:   Daniel L. Weinreb <dlw @ SCRC-TENEX>
Cc:   bug-lispm @ MIT-OZ, ZVONA @ MIT-OZ
Subject: Unix versions
In-reply-to: Msg of 14 Mar 1983 10:16-EST from Daniel L. Weinreb <dlw at SCRC-TENEX>

    Date: Monday, 14 March 1983, 10:16-EST
    From: Daniel L. Weinreb <dlw at SCRC-TENEX>
    To:   ZVONA, bug-lispm
    Re:   Unix versions
    Return-path: <dlw@SCRC-TENEX>

        Date: Saturday, 12 March 1983  22:17-EST
        From: ZVONA @ MIT-MC
        Brand S.  Could versioning for unix files be done in the same way that
        types were done?

    If we thought of file computers completely as a place for a Lisp Machine
    user to store files, only used as a server from Lisp Machines and never
    by being logged into the time-sharing system, it could have been done
    the way you suggest, but that isn't the philosophy that was taken.
    Given the way people use Lisp Machines and time-sharing systems
    together, I think the decision came out right.

    (Not to mention that with the 14-character limit, putting in a dot and a
    number would even more severely restrict the lengths of file names.  This
    isn't the reason, though.)


Why not hack version numbers this way:
   Files are written out in a format with version numbers appended to
the file names in some way (the 14 character limit may be tight, but
a) its supposed to go away with Berkley 4.2, and b) it isn't THAT
bad..  (look at ITS)).  One the vax, the non-version-numbered file-name
is LINKED to the newest of the version numbered file names.  This
gives the appearance of identical server/lispm formats while not
sacrificing the functionality of version numbers....

Since the user on the VAX will seldom have to look at old versions of
files, we can make the generated file-names as cryptic (and name collosion
avoiding) as we wish... 

Just a thot.

                Cheers,
                       Ken

14-Mar-83 14:26:12-EST,1370;000000000000
Return-path: <Cassels@SCRC-TENEX>
Date: Monday, 14 March 1983, 14:13-EST
From: Robert A. Cassels <Cassels at SCRC-TENEX>
Subject: Locatives vs. LET
To: Gumby at MIT-OZ
Cc: BUG-LISPM at MIT-OZ, Lisp-Designers at SCRC-TENEX
In-reply-to: The message of 14 Mar 83 04:47-EST from David Vinayak Wallace <Gumby at MIT-OZ>

    From: David Vinayak Wallace <Gumby@MIT-OZ>

    It would be really great if LET took a locative (or, better yet, an
    arbitrary form) in place of just a variable name.  That is, what I'd
    really like to be able to write is:

    (let (((ship-x-postion foo-ship) 4.0)
	  (((ship-pilot-name foo-ship) "John Glenn")))
      ...)

    and have the right things happen.

That would be cute.  Anyone have other opinions??
It's a little messy to do it "right" for the interpreter --
who knows about the compiler.  To try an inefficient
version of this in the interpreter, just m-. LET and/or LET*
and change the calls to (VALUE-CELL-LOCATION foo) to
(eval `(locf ,foo)) as in:
		      (%PUSH (eval `(locf ,(CAR VARS-LEFT))))


    (locf foo) when foo is unbound works.  Shouldn't it give an error?

No, that's a feature.  Especially in connection with your other suggestion.
Just as (setq foo 'foo-value) works when foo is unbound, you'd like
(let* ((loc (locf foo))
       ((car loc) 'foo-value))
   ...)
to work.
14-Mar-83 14:41:56-EST,1574;000000000000
Return-path: <rsl@SPA-NIMBUS>
Date: Monday, 14 March 1983, 11:10-PST
From: Richard Lamson <rsl at Spa-Nimbus>
Subject: PROGV and special variables
To: PGS at MIT-MC, Webster Dove <dove at MIT-DSPG>
Cc: BUG-LISPM at MIT-OZ
In-reply-to: The message of 12 Mar 83 16:47-PST from PGS at MIT-MC

    Date: Saturday, 12 March 1983  19:47-EST
    From: PGS @ MIT-MC
	Date: Saturday, 12 March 1983, 17:56-EST
	From: Webster Dove <dove at MIT-DSPG>
	...Perhaps I don't appreciate the subtlety, but I don't understand why
	the following complains that a and b are used special

	(DEFUN JUNK ()
	  (PROGV '(A B) '(1 2)
	    (LIST A B)))

	when compiled.  I seems to work ok (i.e. if a & b really are special,
	this nevertheless returns the values bound inside).

    Well, the manual isn't that subtle.  The documentation for PROGV (page 18 of
    the blue manual, someone stole my green manual) says, "PROGV is a special
    form to provide the user with extra control over binding.  It binds a list of
    SPECIAL (my caps) variables to a list of values..."

The real reason why this is so, and must be, is because PROGV takes a
list of symbols which in general are only known at run time, and binds
them to the values provided.  The compiler, which is the only arbitrator
of the special/nonspecial distinction, is not in the business of
handling the bindings established by a PROGV.  I suppose it could be
made to turn PROGV's whose first argument is a constant into normal
PROG's, but this happens so rarely that it would not be worth the
effort.
14-Mar-83 14:44:51-EST,785;000000000000
Return-path: <Mly@MIT-ML>
Date: Monday, 14 March 1983, 14:37-EST
From: Richard Mlynarik <Mly at MIT-ML>
Subject: Message undelivered after 3 days -- will try for another 12 days...
To: bug-lispm at oz

    Date: Friday, 11 March 1983  01:32-EST
    From: The Mailer Daemon <Mailer>
    To:   <CAL>
    Re:   Message of 8-Mar-83 01:01:23
    Return-path: <Mailer@MIT-OZ>

    Message undelivered after 3 days -- will try for another 12 days:
    *<daniel.g.Mly.l>bug-lispm.txt@MIT-OZ: File not found
		------------
    Date: Tuesday, 8 March 1983, 01:02-EST
    From: Cliff Lasser <CAL@MIT-OZ>
    To: BUG-LISPM@MIT-OZ
Sorry aboout this everybody. F_ck__g tw__ex!
(I deleted AND expunged this file. It doesn't seem to barf on a file just deleted)
*sigh* -- Richard
14-Mar-83 14:48:24-EST,1756;000000000000
Return-path: <SR.CYPHER@MIT-SPEECH>
Date: 14 March 1983  14:40-EST (Monday)
From: D. Scott Cyphers <SR.CYPHER at MIT-SPEECH>
To:   Robert A. Cassels <Cassels at SCRC-TENEX>
Cc:   BUG-LISPM at MIT-OZ, Gumby at MIT-OZ, Lisp-Designers at SCRC-TENEX
Subject: Locatives vs. LET

    Date: Monday, 14 March 1983, 14:13-EST
    From: Robert A. Cassels <Cassels at SCRC-TENEX>
    To:   Gumby at MIT-OZ
    cc:   BUG-LISPM at MIT-OZ, Lisp-Designers at SCRC-TENEX
    Re:   Locatives vs. LET

        From: David Vinayak Wallace <Gumby@MIT-OZ>

        It would be really great if LET took a locative (or, better yet, an
        arbitrary form) in place of just a variable name.  That is, what I'd
        really like to be able to write is:

        (let (((ship-x-postion foo-ship) 4.0)
    	  (((ship-pilot-name foo-ship) "John Glenn")))
          ...)

        and have the right things happen.

    That would be cute.  Anyone have other opinions??
    It's a little messy to do it "right" for the interpreter --
    who knows about the compiler.  To try an inefficient
    version of this in the interpreter, just m-. LET and/or LET*
    and change the calls to (VALUE-CELL-LOCATION foo) to
    (eval `(locf ,foo)) as in:
    		      (%PUSH (eval `(locf ,(CAR VARS-LEFT))))


        (locf foo) when foo is unbound works.  Shouldn't it give an error?

    No, that's a feature.  Especially in connection with your other suggestion.
    Just as (setq foo 'foo-value) works when foo is unbound, you'd like
    (let* ((loc (locf foo))
           ((car loc) 'foo-value))
       ...)
    to work.

This is not compatible for people whose programs use the destructuring
version on Let, but it seems like a usefule idea.
14-Mar-83 15:19:07-EST,1411;000000000000
Return-path: <Mailer@MIT-OZ>
Return-Path: <Margolin.Multics@MIT-MULTICS.ARPA>
Date:  14 March 1983 15:07 est
From:  Barry Margolin at MIT-MULTICS
Subject:  Re: FILE server contact name
To:  Daniel L. Weinreb <dlw at SCRC-TENEX>
cc:  BUG-LISPM at MIT-OZ
In-Reply-To:  Message of 14 March 1983 09:53 est from Daniel L. Weinreb

I could do that, and I considered just putting it in my init file rather
than mail out the change.  However, that has several disadvantages.
First of all, I use two different Lisp Machine Operating Systems,
depending on which consoles are available at my site (EECS).  Thus, I
would need to keep two versions of the code around.  Also, by keeping
code around, I do not get any of the bug fixes or interface changes.
And all I can say about your comment about other programs is "So what?";
there will just be one less place in the system that isn't
user-customizable.  Or, perhaps the right answer is to find all the
CHAOS:CONNECTs in the world, and change them to call an intermediary
that looks up the host on the proper alist (I know, the data connections
in the FILE protocol should not be changed).

In the time it took you to send me the message you could have made the
change.  It does not affect performance much (how long could an ASSOC
take when the alist is NIL?), so I see no reason to reject it because it
doesn't help the MAIL or NAME protocols.
14-Mar-83 15:51:46-EST,589;000000000000
Return-path: <dlw@SCRC-TENEX>
Date: Monday, 14 March 1983, 15:47-EST
From: Daniel L. Weinreb <dlw at SCRC-TENEX>
Subject: Re: FILE server contact name
To: Barry Margolin at MIT-MULTICS
Cc: BUG-LISPM at MIT-OZ
In-reply-to: The message of 14 Mar 83 15:07-EST from Barry Margolin at MIT-MULTICS

It's not a matter of how long it takes to patch it in or efficiency at
run-time.  It's a matter of adding yet another level of hair to the
system.  The Lisp Machine wasn't born incomprehensibly hairy; it got
that way because hardly-ever-used features are added with reckless abandon.
14-Mar-83 15:58:58-EST,1129;000000000000
Return-path: <Cassels@SCRC-TENEX>
Date: Monday, 14 March 1983, 15:17-EST
From: Robert A. Cassels <Cassels at SCRC-TENEX>
Subject: Locatives vs. LET
To: SR.CYPHER at MIT-SPEECH, Cassels at SCRC-TENEX
Cc: BUG-LISPM at MIT-OZ, Gumby at MIT-OZ, Lisp-Designers at SCRC-TENEX
In-reply-to: The message of 14 Mar 83 14:40-EST from D. Scott Cyphers <SR.CYPHER at MIT-SPEECH>

    From: D. Scott Cyphers <SR.CYPHER at MIT-SPEECH>

	From: Robert A. Cassels <Cassels at SCRC-TENEX>

	    From: David Vinayak Wallace <Gumby@MIT-OZ>

	    It would be really great if LET took a locative (or, better yet, an
	    arbitrary form) in place of just a variable name.  That is, what I'd
	    really like to be able to write is:

	    (let (((ship-x-postion foo-ship) 4.0)
	      (((ship-pilot-name foo-ship) "John Glenn")))
	      ...)

	    and have the right things happen.

	That would be cute.  Anyone have other opinions??

    This is not compatible for people whose programs use the destructuring
    version on Let, but it seems like a usefule idea.

So probably this should be LETF, LETF*, LETF-GLOBALLY, etc.
14-Mar-83 16:21:40-EST,856;000000000000
Return-path: <MOON@SCRC-TENEX>
Date: Monday, 14 March 1983  16:19-EST
From: MOON at SCRC-TENEX
To:   Robert A. Cassels <Cassels at SCRC-TENEX>, Gumby at MIT-OZ,
      SR.CYPHER at MIT-SPEECH Lisp-Designers at SCRC-TENEX,
      BUG-LISPM at MIT-OZ
Subject: Locatives vs. LET
In-reply-to: The message of 14 Mar 1983 15:17-EST from Robert A. Cassels <Cassels at SCRC-TENEX>

Use the BIND subprimitive.  And complain that something like the following
is not installed in the system yet:

(defmacro binding (bindings &body body)
  `(let ()
     ,@(loop for (location-form value-form) in bindings
	     collect `(bind ,location-form ,value-form))
     ,@body))

If you don't want to write the LOCF yourself, put it inside the macro.
The code written by this macro will only run compiled, not interpreted.
That can be fixed in the usual way.
14-Mar-83 19:40:18-EST,1040;000000000000
Return-path: <Batali@MIT-OZ>
Date: Monday, 14 March 1983, 19:27-EST
From: John Batali <Batali@MIT-OZ>
To: BUG-LISPM@MIT-OZ

In MIT-Specific 18.1, System 93.29, ZMail 49.9, microcode 226, gc@22,
on Lisp Machine Six:


Insert your description of the circumstances here:

Trying to load <batali>lmutil.qfasl


>>ERROR: FASL-GROUP-OVERFLOW
Backtrace from the debugger:

SI:FASL-NEXT-NIBBLE (P.C. = 32)



SYS:FASL-OP-MOVE (P.C. = 27)

Local 0 (FROM): NIL
Local 1 (TO): NIL


SI:FASL-GROUP (P.C. = 101)

Local 0 (FASL-GROUP-FLAG): NIL
Local 1 (FASL-GROUP-BITS): 100012
Local 2 (FASL-GROUP-TYPE): 12
Local 3 (FASL-GROUP-LENGTH): 0


SI:FASL-WHACK-SAVE-FASL-TABLE (P.C. = 67)

Local 0 (FASL-RETURN-FLAG): NIL


SI:FASL-WHACK (P.C. = 23)



Remainder of stack:

SI:FASL-TOP-LEVEL (P.C. = 32)
SI:FASLOAD-INTERNAL (P.C. = 414)
LOAD (P.C. = 242)
QC-FILE-LOAD (P.C. = 26)
SI:*EVAL (P.C. = 1145)
SI:EVAL-ABORT-TRIVIAL-ERRORS (P.C. = 44)
SI:LISP-TOP-LEVEL1 (P.C. = 254)
SI:LISP-TOP-LEVEL (P.C. = 35)
15-Mar-83 09:03:42-EST,1605;000000000000
Return-path: <RWK@SCRC-TENEX>
Date: Tuesday, 15 March 1983, 08:58-EST
From: Robert W. Kerns <RWK at SCRC-TENEX>
Subject: Unix versions
To: Daniel L. Weinreb <dlw at SCRC-TENEX>
Cc: ZVONA at MIT-MC, bug-lispm at MIT-OZ
In-reply-to: The message of 14 Mar 83 10:16-EST from Daniel L. Weinreb <dlw at SCRC-TENEX>

    Date: Monday, 14 March 1983, 10:16-EST
    From: Daniel L. Weinreb <dlw at SCRC-TENEX>
	Date: Saturday, 12 March 1983  22:17-EST
	From: ZVONA @ MIT-MC
	Brand S.  Could versioning for unix files be done in the same way that
	types were done?
    ...
    If we thought of file computers completely as a place for a Lisp Machine
    user to store files, only used as a server from Lisp Machines and never
    by being logged into the time-sharing system, it could have been done
    the way you suggest, but that isn't the philosophy that was taken.
    Given the way people use Lisp Machines and time-sharing systems
    together, I think the decision came out right.
I've been asked for this by a couple customers.  There is a
class of user who really wants a LMFS file server, but only
has a Unix.  But note that you can't implement version
numbers in the same manner as types.  Version numbers
are incremented by writing out a :NEWEST version, which
needs to look to see what versions are already there.
Similarly, on reading, the greatest version has to be
found.  For reasonable efficiency, this has to be
done on the server side.

All together, I'd say the results aren't worth it.
Better to switch to VMS, or best of all, sell your
VAX and buy a 3600.
15-Mar-83 09:29:04-EST,1817;000000000000
Return-path: <RWK@SCRC-TENEX>
Date: Tuesday, 15 March 1983, 09:20-EST
From: Robert W. Kerns <RWK at SCRC-TENEX>
Subject: PROGV and special variables
To: Richard Lamson <rsl at Spa-Nimbus>
Cc: PGS at MIT-MC, Webster Dove <dove at MIT-DSPG>, BUG-LISPM at MIT-OZ
In-reply-to: The message of 14 Mar 83 14:10-EST from Richard Lamson <rsl at Spa-Nimbus>

    Date: Monday, 14 March 1983, 11:10-PST
    From: Richard Lamson <rsl at Spa-Nimbus>
	Date: Saturday, 12 March 1983  19:47-EST
	From: PGS @ MIT-MC
	    Date: Saturday, 12 March 1983, 17:56-EST
	    From: Webster Dove <dove at MIT-DSPG>
	    ...Perhaps I don't appreciate the subtlety, but I don't understand why
	    the following complains that a and b are used special

	    (DEFUN JUNK ()
	      (PROGV '(A B) '(1 2)
		(LIST A B)))

	    when compiled.  I seems to work ok (i.e. if a & b really are special,
	    this nevertheless returns the values bound inside).

	Well, the manual isn't that subtle.  The documentation for PROGV (page 18 of
	the blue manual, someone stole my green manual) says, "PROGV is a special
	form to provide the user with extra control over binding.  It binds a list of
	SPECIAL (my caps) variables to a list of values..."

    The real reason why this is so, and must be, is because PROGV takes a
    list of symbols which in general are only known at run time, and binds
    them to the values provided.  The compiler, which is the only arbitrator
    of the special/nonspecial distinction, is not in the business of
    handling the bindings established by a PROGV.  I suppose it could be
    made to turn PROGV's whose first argument is a constant into normal
    PROG's, but this happens so rarely that it would not be worth the
    effort.
It would also turn the clear semantics into mush.
15-Mar-83 14:04:04-EST,422;000000000000
Return-path: <HENRY@MIT-OZ>
Mail-From: HENRY created at 15-Mar-83 14:00:58
Date: Tuesday, 15 March 1983  14:00 EST
From: HENRY@MIT-OZ
To:   reid@MIT-OZ
Cc:   bug-lispm-mit@MIT-OZ, reid@MIT-OZ
In-reply-to: Msg of 14 Mar 1983  11:54-EST from reid at oz



There's some code in <Henry>Press-Window.Lisp which is sort
of trying to do it, but it doesn't work, and I'm not enough
of a pressexpert to sort it out.

15-Mar-83 15:01:55-EST,615;000000000000
Return-path: <BAK@MIT-OZ>
Mail-From: BAK created at 15-Mar-83 14:58:43
Date: Tuesday, 15 March 1983  14:58 EST
From: BAK@MIT-OZ
To:   reid@MIT-OZ
Cc:   bug-lispm-mit@MIT-OZ, reid@MIT-OZ
In-reply-to: Msg of 14 Mar 1983  11:54-EST from reid at oz

There is no easy way to turn your bitmap into a press file.  However,
I have had alot of success with making slides of Lisp machine screens.
Set the exposure to 4 f-stops higher than a totally white screen would
suggest.  (I used color film.)  You will get a crisp B&W image.  Turnaround
time at Ferante Dege in Harvard Sq. is a few hours for development.
15-Mar-83 17:24:49-EST,609;000000000000
Return-path: <Henry@MIT-OZ>
Date: Tuesday, 15 March 1983, 17:21-EST
From: Henry Lieberman <Henry@MIT-OZ>
Subject: Color Windows
To: BUG-LISPM@MIT-OZ

In Release 4.1, System 222.186, Hardcopy 11.14, Zmail 74.43, LMFS 30.26,
site configuration 18, on Lisp Machine Apiary-2:

What's the theory on color windows these days? You can create a window 
with superior COLOR:COLOR-SCREEN, but TV:GRAPHICS-MIXIN only likes to 
draw in color 15.  [Is there any way to change it?] If you mixin COLOR:COLOR-MIXIN, 
it has a different idea about how :DRAW-LINE should be called than 
TV:GRAPHICS-MIXIN does. 
15-Mar-83 20:21:33-EST,1008;000000000000
Return-path: <rms@MIT-OZ>
Date: Tuesday, 15 March 1983, 20:15-EST
From: Richard M. Stallman <rms@MIT-OZ>
Subject: ZWEI Undo command (C-Shift-U)
To: info-lispm-mit@MIT-OZ

I've found that few people know about the new ZWEI unlimited Undo feature.
This feature is simply that you can undo all the changes you
have made to a buffer since you read in or saved a file,
one batch of contiguous changes at a time, by typing C-Shift-U
over and over again.

Absolutely all changes are recorded.  For example, you can
undo a Query Replace, or part of one.  Each C-Shift-U gets
one replacement.

If you undo too far, type C-Shift-R to redo the changes undone.
One C-Shift-R cancels one C-Shift-U.

If you set ZWEI:*DISCARD-UNDO-INFO-ON-SAVING* to NIL,
you can undo all the way to when you visited the file,
regardless of whether you have saved it.

I found that it required an effort at first to remember
to consider using the command, but once I had developed the
habit it was a great saver.
15-Mar-83 20:28:27-EST,748;000000000000
Return-path: <rms@MIT-OZ>
Date: Tuesday, 15 March 1983, 20:21-EST
From: Richard M. Stallman <rms@MIT-OZ>
Subject: System 93
To: info-lispm-mit@MIT-OZ

System 93 is now released, and documented in SRC:<L.DOC>SYS93.MSG.
I don't know of any serious bugs.

System 93 is now up on the file computer, so the FC file system is now
accessible from 93, using the FILE protocol.  This means you can get at
it from other machines with CFTP.  Connect to CADR27 and use a filename
that begins with "FC:", assuming that CFTP does not screw you by
thinking it knows the pathname syntax for CADR27.  See SRC:<L.FILE2>DOC.TEXT
for documentation on FC.

FC still responds to its old protocol for the sake of systems before 93
and job devices on ITS.15-Mar-83 20:46:52-EST,4096;000000000000
Return-path: <Hewitt@MIT-OZ>
Date: Tuesday, 15 March 1983, 20:14-EST
From: Carl Hewitt <Hewitt@MIT-OZ>
Subject: zmail window lossage
To: BUG-LISPM@MIT-MC

In Release 4.1, System 222.186, Hardcopy 11.14, Zmail 74.43, LMFS 30.26,
site configuration 18, on Lisp Machine Apiary-1:

I did [system E] and then [system M] while reading in the
mail file.

>>Trap: The instance variable ZWEI:*ZMAIL-SEQUENCE-NAME* is unbound in #<ZMAIL-FRAME Zmail Frame 1 20554700 exposed>.
While in the function (METHOD ZWEI:MODE-LINE-WINDOW-MIXIN REDISPLAY)  (METHOD ZWEI:ZMAIL-MOUSE-SENSITIVE-MODE-LINE-PANE COMBINED REDISPLAY)  (METHOD ZWEI:MODE-LINE-WINDOW-MIXIN REDISPLAY)


(METHOD ZWEI:MODE-LINE-WINDOW-MIXIN REDISPLAY): (P.C. = 134)
 (SELF = #<ZMAIL-MOUSE-SENSITIVE-MODE-LINE-PANE Zmail Mouse Sensitive Mode Line Pane 2 20555141 exposed>)
 Arg 0 (OPERATION): REDISPLAY
 Arg 1 (MODE-LINE-LIST): ("Zmail " ZWEI:*ZMAIL-SEQUENCE-NAME* ZWEI:*CURRENT-MSG-NAME* (ZWEI:*CURRENT-MSG-KEYWORDS-STRING* "  " ZWEI:*CURRENT-MSG-KEYWORDS-STRING*) (ZWEI:*MACRO-LEVEL* "  Macro-level: " ZWEI:*MACRO-LEVEL*) (ZWEI:*MSG-MORE-STRING* "  " ZWEI:*MSG-MORE-STRING*))
 Arg 2 (FORCE): T
 Local 0 (MODES): (ZWEI:*CURRENT-MSG-NAME* (ZWEI:*CURRENT-MSG-KEYWORDS-STRING* "  " ZWEI:*CURRENT-MSG-KEYWORDS-STRING*) (ZWEI:*MACRO-LEVEL* "  Macro-level: " ZWEI:*MACRO-LEVEL*) (ZWEI:*MSG-MORE-STRING* "  " ZWEI:*MSG-MORE-STRING*))
 Local 1 (PREV): NIL
 Local 2 (L): NIL
 Local 3 (THING): ZWEI:*ZMAIL-SEQUENCE-NAME*
 Local 4: NIL
 Local 5 (STR): NIL
 Local 6 (ELT): NIL
 Local 7 (LEN): NIL


(METHOD ZWEI:MODE-LINE-WINDOW-MIXIN REDISPLAY):  (P.C. = 134)
   (SELF = #<ZMAIL-MOUSE-SENSITIVE-MODE-LINE-PANE Zmail Mouse Sensitive Mode Line Pane 2 20555141 exposed>)
   Arg 0 (OPERATION): REDISPLAY
   Arg 1 (MODE-LINE-LIST): ("Zmail " ZWEI:*ZMAIL-SEQUENCE-NAME* ZWEI:*CURRENT-MSG-NAME* (ZWEI:*CURRENT-MSG-KEYWORDS-STRING* "  " ZWEI:*CURRENT-MSG-KEYWORDS-STRING*) (ZWEI:*MACRO-LEVEL* "  Macro-level: " ZWEI:*MACRO-LEVEL*) (ZWEI:*MSG-MORE-STRING* "  " ZWEI:*MSG-MORE-STRING*))
   Arg 2 (FORCE): T

(METHOD ZWEI:ZMAIL-MOUSE-SENSITIVE-MODE-LINE-PANE COMBINED REDISPLAY):  (P.C. = 53)
   (SELF = #<ZMAIL-MOUSE-SENSITIVE-MODE-LINE-PANE Zmail Mouse Sensitive Mode Line Pane 2 20555141 exposed>)
   Rest arg (.DAEMON-CALLER-ARGS.): (REDISPLAY ("Zmail " ZWEI:*ZMAIL-SEQUENCE-NAME* ZWEI:*CURRENT-MSG-NAME* (ZWEI:*CURRENT-MSG-KEYWORDS-STRING* "  " ZWEI:*CURRENT-MSG-KEYWORDS-STRING*) (ZWEI:*MACRO-LEVEL* "  Macro-level: " ZWEI:*MACRO-LEVEL*) (ZWEI:*MSG-MORE-STRING* "  " ZWEI:*MSG-MORE-STRING*)) T)

(METHOD ZWEI:MODE-LINE-WINDOW-MIXIN REDISPLAY):  (P.C. = 227)
   (SELF = #<ZMAIL-MOUSE-SENSITIVE-MODE-LINE-PANE Zmail Mouse Sensitive Mode Line Pane 2 20555141 exposed>)
   Arg 0 (OPERATION): REDISPLAY
   Arg 1 (MODE-LINE-LIST): ("Zmail " ZWEI:*ZMAIL-SEQUENCE-NAME* ZWEI:*CURRENT-MSG-NAME* (ZWEI:*CURRENT-MSG-KEYWORDS-STRING* "  " ZWEI:*CURRENT-MSG-KEYWORDS-STRING*) (ZWEI:*MACRO-LEVEL* "  Macro-level: " ZWEI:*MACRO-LEVEL*) (ZWEI:*MSG-MORE-STRING* "  " ZWEI:*MSG-MORE-STRING*))
   --Defaulted args:--
   Arg 2 (FORCE): NIL

(METHOD ZWEI:ZMAIL-MOUSE-SENSITIVE-MODE-LINE-PANE COMBINED REDISPLAY):  (P.C. = 53)
   (SELF = #<ZMAIL-MOUSE-SENSITIVE-MODE-LINE-PANE Zmail Mouse Sensitive Mode Line Pane 2 20555141 exposed>)
   Rest arg (.DAEMON-CALLER-ARGS.): (REDISPLAY ("Zmail " ZWEI:*ZMAIL-SEQUENCE-NAME* ZWEI:*CURRENT-MSG-NAME* (ZWEI:*CURRENT-MSG-KEYWORDS-STRING* "  " ZWEI:*CURRENT-MSG-KEYWORDS-STRING*) (ZWEI:*MACRO-LEVEL* "  Macro-level: " ZWEI:*MACRO-LEVEL*) (ZWEI:*MSG-MORE-STRING* "  " ZWEI:*MSG-MORE-STRING*)))

ZWEI:REDISPLAY-MODE-LINE:  (P.C. = 25)

ZWEI:REDISPLAY-ALL-WINDOWS:  (P.C. = 105)
   --Defaulted args:--
   Arg 0 (FORCE-TO-COMPLETION-P): NIL
   Arg 1 (SELECT-P): T

(METHOD ZWEI:ZMAIL-COMMAND-LOOP-MIXIN-WITH-SUMMARY REDISPLAY):  (P.C. = 33)
   (SELF = #<ZMAIL-FRAME Zmail Frame 1 20554700 exposed>)
   Arg 0 (OPERATION): REDISPLAY

(METHOD ZWEI:ZMAIL-FRAME COMMAND-LOOP):  (P.C. = 227)
   (SELF = #<ZMAIL-FRAME Zmail Frame 1 20554700 exposed>)
   Arg 0 (OPERATION): COMMAND-LOOP
15-Mar-83 20:48:39-EST,3391;000000000000
Return-path: <Hewitt@MIT-OZ>
Date: Tuesday, 15 March 1983, 20:15-EST
From: Carl Hewitt <Hewitt@MIT-OZ>
Subject: it's really dead
To: BUG-LISPM@MIT-MC

In Release 4.1, System 222.186, Hardcopy 11.14, Zmail 74.43, LMFS 30.26,
site configuration 18, on Lisp Machine Apiary-1:

Attempting to abort does no good.  By the way, I also killed
some mail files

>>Trap: The instance variable ZWEI:*ZMAIL-SEQUENCE-NAME* is unbound in #<ZMAIL-FRAME Zmail Frame 1 20554700 exposed>.
While in the function (METHOD ZWEI:MODE-LINE-WINDOW-MIXIN REDISPLAY)  (METHOD ZWEI:ZMAIL-MOUSE-SENSITIVE-MODE-LINE-PANE COMBINED REDISPLAY)  ZWEI:REDISPLAY-MODE-LINE


(METHOD ZWEI:MODE-LINE-WINDOW-MIXIN REDISPLAY): (P.C. = 134)
 (SELF = #<ZMAIL-MOUSE-SENSITIVE-MODE-LINE-PANE Zmail Mouse Sensitive Mode Line Pane 2 20555141 exposed>)
 Arg 0 (OPERATION): REDISPLAY
 Arg 1 (MODE-LINE-LIST): ("Zmail " ZWEI:*ZMAIL-SEQUENCE-NAME* ZWEI:*CURRENT-MSG-NAME* (ZWEI:*CURRENT-MSG-KEYWORDS-STRING* "  " ZWEI:*CURRENT-MSG-KEYWORDS-STRING*) (ZWEI:*MACRO-LEVEL* "  Macro-level: " ZWEI:*MACRO-LEVEL*) (ZWEI:*MSG-MORE-STRING* "  " ZWEI:*MSG-MORE-STRING*))
   --Defaulted args:--
 Arg 2 (FORCE): NIL
 Local 0 (MODES): (ZWEI:*CURRENT-MSG-NAME* (ZWEI:*CURRENT-MSG-KEYWORDS-STRING* "  " ZWEI:*CURRENT-MSG-KEYWORDS-STRING*) (ZWEI:*MACRO-LEVEL* "  Macro-level: " ZWEI:*MACRO-LEVEL*) (ZWEI:*MSG-MORE-STRING* "  " ZWEI:*MSG-MORE-STRING*))
 Local 1 (PREV): NIL
 Local 2 (L): NIL
 Local 3 (THING): ZWEI:*ZMAIL-SEQUENCE-NAME*
 Local 4: NIL
 Local 5 (STR): NIL
 Local 6 (ELT): NIL
 Local 7 (LEN): NIL


(METHOD ZWEI:MODE-LINE-WINDOW-MIXIN REDISPLAY):  (P.C. = 134)
   (SELF = #<ZMAIL-MOUSE-SENSITIVE-MODE-LINE-PANE Zmail Mouse Sensitive Mode Line Pane 2 20555141 exposed>)
   Arg 0 (OPERATION): REDISPLAY
   Arg 1 (MODE-LINE-LIST): ("Zmail " ZWEI:*ZMAIL-SEQUENCE-NAME* ZWEI:*CURRENT-MSG-NAME* (ZWEI:*CURRENT-MSG-KEYWORDS-STRING* "  " ZWEI:*CURRENT-MSG-KEYWORDS-STRING*) (ZWEI:*MACRO-LEVEL* "  Macro-level: " ZWEI:*MACRO-LEVEL*) (ZWEI:*MSG-MORE-STRING* "  " ZWEI:*MSG-MORE-STRING*))
   --Defaulted args:--
   Arg 2 (FORCE): NIL

(METHOD ZWEI:ZMAIL-MOUSE-SENSITIVE-MODE-LINE-PANE COMBINED REDISPLAY):  (P.C. = 53)
   (SELF = #<ZMAIL-MOUSE-SENSITIVE-MODE-LINE-PANE Zmail Mouse Sensitive Mode Line Pane 2 20555141 exposed>)
   Rest arg (.DAEMON-CALLER-ARGS.): (REDISPLAY ("Zmail " ZWEI:*ZMAIL-SEQUENCE-NAME* ZWEI:*CURRENT-MSG-NAME* (ZWEI:*CURRENT-MSG-KEYWORDS-STRING* "  " ZWEI:*CURRENT-MSG-KEYWORDS-STRING*) (ZWEI:*MACRO-LEVEL* "  Macro-level: " ZWEI:*MACRO-LEVEL*) (ZWEI:*MSG-MORE-STRING* "  " ZWEI:*MSG-MORE-STRING*)))

ZWEI:REDISPLAY-MODE-LINE:  (P.C. = 25)

ZWEI:REDISPLAY-ALL-WINDOWS:  (P.C. = 105)
   --Defaulted args:--
   Arg 0 (FORCE-TO-COMPLETION-P): NIL
   Arg 1 (SELECT-P): T

(METHOD ZWEI:ZMAIL-COMMAND-LOOP-MIXIN-WITH-SUMMARY REDISPLAY):  (P.C. = 33)
   (SELF = #<ZMAIL-FRAME Zmail Frame 1 20554700 exposed>)
   Arg 0 (OPERATION): REDISPLAY

(METHOD ZWEI:ZMAIL-FRAME COMMAND-LOOP):  (P.C. = 227)
   (SELF = #<ZMAIL-FRAME Zmail Frame 1 20554700 exposed>)
   Arg 0 (OPERATION): COMMAND-LOOP

(METHOD ZWEI:ZMAIL-FRAME COMBINED COMMAND-LOOP):  (P.C. = 106)
   (SELF = #<ZMAIL-FRAME Zmail Frame 1 20554700 exposed>)
   Rest arg (.DAEMON-CALLER-ARGS.): (COMMAND-LOOP)

ZWEI:ZMAIL-PROCESS-TOP-LEVEL:  (P.C. = 153)
   Arg 0 (WINDOW): #<ZMAIL-FRAME Zmail Frame 1 20554700 exposed>
15-Mar-83 21:52:34-EST,405;000000000000
Return-path: <Gumby@MIT-OZ>
Date: Tuesday, 15 March 1983, 21:47-EST
From: David Vinayak Wallace <Gumby@MIT-OZ>
To: BUG-LISPM@MIT-OZ

In MIT-Specific 18.1, System 93.30, ZMail 49.10, microcode 226, gc@2,
on Lisp Machine Nine:

If you bomb out trying to open a file whose logical directory name has
no translation, one of the proceed-types should be an offer to use a new
logical directory name.
15-Mar-83 22:27:12-EST,466;000000000000
Return-path: <HIC@SCRC-TENEX>
Date: 15 Mar 1983 2224-EST
From: Howard I. Cannon <HIC at SCRC-TENEX>
Subject: Re: Color Windows
To: Henry at MIT-OZ
cc: BUG-LISPM at MIT-OZ
In-Reply-To: The message of Tuesday, 15 March 1983, 17:21-EST from Henry Lieberman <Henry@MIT-OZ>

The built-in drawing primitives only work in colors 0 and 15.
This will be fixed on the 3600, but it's not yet clear
whether or not these fixes will propgate back to the LM-2.
-------
15-Mar-83 23:05:06-EST,306;000000000000
Return-path: <Gumby@MIT-OZ>
Date: Tuesday, 15 March 1983, 22:59-EST
From: David Vinayak Wallace <Gumby@MIT-OZ>
To: BUG-LISPM@MIT-OZ

In MIT-Specific 18.1, System 93.30, ZMail 49.10, microcode 226, gc@2,
on Lisp Machine Nine:

In the peek option menu, HELP and QUIT should be available as options.
15-Mar-83 23:59:46-EST,1720;000000000000
Return-path: <Moon@SCRC-TENEX>
Date: Tuesday, 15 March 1983, 23:55-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: Suppressing "[Growing some pdl ...]" messages
To: Kent M. Pitman <kmp at MIT-MC>
Cc: BUG-LISPM at MIT-OZ
In-reply-to: The message of 28 Feb 83 11:59-EST from Kent M. Pitman <kmp at MIT-MC>

Patch 222.190 flushes the idiotic messages about growing the pdl, on
the A machine.  There was an (undocumented?) special variable you
could set to turn them off, but I don't think they ever did anyone
any real good except perhaps during the initial debugging of pdl
overflowing handling.  They never existed on the L machine.

    Date: Monday, 28 February 1983, 11:59-EST
    From: Kent M. Pitman <kmp at MIT-MC>
    In band 8 (Black Magic) with microcode 979 on Lisp Machine Twenty-two,
    using KBE 139.2x in Release 4.1, System 222.171 ...

    * If I do 
	(CONDITION-BIND ((SYS:PDL-OVERFLOW #'...)) ...)
      I find that the first pdl overflow is not caught by my handler. Only
      every other time the stack runs out does the pdl get grown. 

This was probably some sort of artifact due to the messages, but if it
still happens in system 222.190 please let us know.

    I can see two obvious fixes for this. Maybe there are more:

    * You could always signal when you need to grow the stack and let a global 
      handler do the growing. This would allow user programs to over-ride the
      growth if they know better. (I think this is the right solution.)

Note that the system frequently needs to grow the stack behind your
back.  For instance, when it overflows it has to grow the stack in
order to make enough room to signal the PDL-OVERFLOW condition.
16-Mar-83 04:06:12-EST,4489;000000000000
Return-path: <PGS@MIT-OZ>
Date: Wednesday, 16 March 1983, 04:04-EST
From: Patrick Sobalvarro <PGS@MIT-OZ>
Subject: Unimplemented case in floating point code.
To: BUG-LISPM@MIT-OZ

In System 222.170, Hardcopy 11.14, Zmail 74.37, Tape 13.0, LMFS 30.19,
cold load 65, microcode TMC5-MIC 181, site configuration 14, on PI Project:

I was running the splines demo.  I generated a lot of points.  I got this.

>>Trap: Unimplemented case in floating point code.
While in the function TV:SPLINE  (METHOD TV:GRAPHICS-MIXIN DRAW-CUBIC-SPLINE)  HACKS:SPLINES


TV:SPLINE: (P.C. = 1134)
 Arg 0 (PX): #<ART-Q-200 54624425>
 Arg 1 (PY): #<ART-Q-200 54624573>
 Arg 2 (Z): 20
 Arg 3 (CX): NIL
 Arg 4 (CY): NIL
 Arg 5 (C1): CYCLIC
 Arg 6 (C2): CYCLIC
 Arg 7 (P1-PRIME-X): NIL
 Arg 8 (P1-PRIME-Y): NIL
 Arg 9 (PN-PRIME-X): NIL
 Arg 10 (PN-PRIME-Y): NIL
 Local 11 (N): 180
 Local 12 (N-1): 179
 Local 13 (N-2): 178
 Local 14 (N-3): 177
 Local 15 (BX): #<ART-Q-180 54735611>
 Local 16 (BY): #<ART-Q-180 54736076>
 Local 17 (L): #<ART-Q-180 54734001>
 Local 18 (UX): NIL
 Local 19 (UY): NIL
 Local 20 (N1): #<ART-Q-180 54734266>
 Local 21 (N2): #<ART-Q-180 54734553>
 Local 22 (N3): #<ART-Q-180 54735040>
 Local 23 (N4): #<ART-Q-179 54735325>
 Local 24 (SIGN): 1.0
 Local 25 (I): 57
 Local 26: 178
 Local 27 (N1I): 322.6701
 Local 28 (Q): 1.5107967


TV:SPLINE:  (P.C. = 1134)
   Arg 0 (PX): #<ART-Q-200 54624425>
   Arg 1 (PY): #<ART-Q-200 54624573>
   Arg 2 (Z): 20
   Arg 3 (CX): NIL
   Arg 4 (CY): NIL
   Arg 5 (C1): CYCLIC
   Arg 6 (C2): CYCLIC
   Arg 7 (P1-PRIME-X): NIL
   Arg 8 (P1-PRIME-Y): NIL
   Arg 9 (PN-PRIME-X): NIL
   Arg 10 (PN-PRIME-Y): NIL

(METHOD TV:GRAPHICS-MIXIN DRAW-CUBIC-SPLINE):  (P.C. = 44)
   Arg 0 (SELF): #<WINDOW Window 5 33322752 deexposed>
   Arg 1 (SELF-MAPPING-TABLE): TV:GRAPHICS-MIXIN
   Arg 2 (OPERATION): DRAW-CUBIC-SPLINE
   Arg 3 (PX): #<ART-Q-200 54624425>
   Arg 4 (PY): #<ART-Q-200 54624573>
   Arg 5 (Z): 20
   Arg 6 (CURVE-WIDTH): 4
   Arg 7 (ALU): 7
   Arg 8 (C1): CYCLIC
   --Defaulted args:--
   Arg 9 (C2): CYCLIC
   Arg 10 (P1-PRIME-X): NIL
   Arg 11 (P1-PRIME-Y): NIL
   Arg 12 (PN-PRIME-X): NIL
   Arg 13 (PN-PRIME-Y): NIL

HACKS:SPLINES:  (P.C. = 153)
   Arg 0 (WINDOW): #<WINDOW Window 5 33322752 deexposed>
   --Defaulted args:--
   Arg 1 (WIDTH): 4
   Arg 2 (ALU): 7
   Arg 3 (PRECISION): 20

HACKS:SPLINES-IN-WINDOW:  (P.C. = 55)

SI:*EVAL:  (P.C. = 405)
   Arg 0 (FORM): (HACKS:SPLINES-IN-WINDOW)

HACKS:DEMO:  (P.C. = 74)
   --Defaulted args:--
   Arg 0 (ALIST): (("Abacus" VALUE (HACKS:ABACUS-DEMO) DOCUMENTATION "Upward compatibilty with primitive computers.") ("Birds (xor'ing triangles)" VALUE (HACKS:BIRDS-DEMO) DOCUMENTATION "Display patters of xor'ing triangles whose endpoints act like billiard balls.") ("Crock" VALUE (HACKS:CROCK-DEMO) DOCUMENTATION "Standard wall clock") ("Digital Crock" VALUE (HACKS:DC-DEMO) DOCUMENTATION "Standard digital clock") ("Escher (xor'ing lines)" VALUE (HACKS:ESCHER-DEMO) DOCUMENTATION "Display patters of xor'ing line segments whose endpoints act like billiard balls.") ("Godel (Insides of Escher)" VALUE (HACKS:MENU "Godel" ("0 1 2 3" VALUE ** DOCUMENTATION "Run the algorithm for velocities (0,1) and (2,3).") ("0 2 1 3" VALUE ** DOCUMENTATION "Run the algorithm for velocities (0,2) and (1,3).") ("2 1 4 3" VALUE ** DOCUMENTATION "Run the algorithm for velocities (2,1) and (4,3).") ("0 1 3 2" VALUE ** DOCUMENTATION "Run the algorithm for velocities (0,1) and (3,2).") ("1 2 2 3" VALUE ** DOCUMENTATION "Run the algorithm for velocities (1,2) and (2,3).") ("0 1 1 0" VALUE ** DOCUMENTATION "Run the algorithm for velocities (0,1) and (1,0).")) DOCUMENTATION "Display the basic algorithm used in Escher for various pairs of velocities.") ("Hollerith Editor" VALUE (HACKS:CARD-EDITOR) DOCUMENTATION "Upward compatibilty with primitive computers.") ("Lexiphage" VALUE (HACKS:LEXIPHAGE) DOCUMENTATION "The word eater, based on a hack by John Doty.") ("Life" VALUE (HACKS:RUN-LIFE) DOCUMENTATION "Conway's game of /"Life/", a cellular automaton demonstration.  By CMB.") ("Multiple Hollerith Editor" VALUE (HACKS:EDIT-MULTIPLE-CARDS) DOCUMENTATION "Upward compatibilty with primitive computers.") ...)
   Arg 1 (NAME): "Demo:"

SI:*EVAL:  (P.C. = 405)
   Arg 0 (FORM): (HACKS:DEMO)

SI:LISP-TOP-LEVEL1:  (P.C. = 130)
   Arg 0 (TERMINAL-IO-initialization): #<LISP-LISTENER Lisp Listener 1 13600240 exposed>
16-Mar-83 05:21:38-EST,1106;000000000000
Return-path: <RWK@SCRC-TENEX>
Date: 16 Mar 1983 0518-EST
From: Robert W. Kerns <RWK at SCRC-TENEX>
Subject: Re: it's really dead
To: Hewitt at MIT-OZ, BUG-LISPM at MIT-MC
cc: RWK at SCRC-TENEX
In-Reply-To: The message of Tuesday, 15 March 1983, 20:15-EST from Carl Hewitt <Hewitt@MIT-OZ>


    Date: Tuesday, 15 March 1983, 20:15-EST
    From: Carl Hewitt <Hewitt@MIT-OZ>
    Subject: it's really dead
    To: BUG-LISPM@MIT-MC

    In Release 4.1, System 222.186, Hardcopy 11.14, Zmail 74.43, LMFS 30.26,
    site configuration 18, on Lisp Machine Apiary-1:

    Attempting to abort does no good.  By the way, I also killed
    some mail files

    >>Trap: The instance variable ZWEI:*ZMAIL-SEQUENCE-NAME* is unbound in #<ZMAIL-FRAME Zmail Frame 1 20554700 exposed>.
    While in the function (METHOD ZWEI:MODE-LINE-WINDOW-MIXIN REDISPLAY)  (METHOD ZWEI:ZMAIL-MOUSE-SENSITIVE-MODE-LINE-PANE COMBINED REDISPLAY)  ZWEI:REDISPLAY-MODE-LINE

I'm at home so can't easily check, but if I remember
rightly, this is the error you get when you do [System] Control-M
by mistake.
-------
16-Mar-83 09:56:01-EST,1054;000000000000
Return-path: <REID@MIT-OZ>
Date: Wednesday, 16 March 1983, 09:51-EST
From: Reid G. Simmons <REID@MIT-OZ>
To: PGS@MIT-OZ, reid@MIT-OZ
Cc: bug-lispm-mit@MIT-OZ
In-reply-to: The message of 14 Mar 83 12:06-EST from PGS

    Date: Monday, 14 March 1983  12:06-EST
    From: PGS
    Sender: PGS
    To:   reid at oz
    cc:   bug-lispm-mit, reid
    Return-path: <PGS@MIT-OZ>

    The Canon is gone.  There is a Versatec on the 7th floor that you can send
    your entire screen to.  Not superb quality, but a good Xerox machine makes it
    look better.

    Philippe Brou (PHILIP@OZ) has code to copy sections of the Lisp Machine
    screen to the Dover.  One cannot copy the entire screen because the Dover's
    resolution does not allow it.  Philippe's code is written for MIT systems, as
    far as I know.
Thanks for the information.  It seems like the Versatec is my best bet so far.
Do you know how I go about doing the transfer?  Do I just hit Terminal-q, or is
there a more complicated procedure involved?

  Thanks, Reid
16-Mar-83 10:52:31-EST,664;000000000000
Return-path: <dlw@SCRC-TENEX>
Date: Wednesday, 16 March 1983, 10:50-EST
From: Daniel L. Weinreb <dlw at SCRC-TENEX>
Subject: Unimplemented case in floating point code.
To: PGS at MIT-OZ, BUG-LISPM at MIT-OZ
In-reply-to: The message of 16 Mar 83 04:04-EST from Patrick Sobalvarro <PGS at MIT-OZ>

This actually means that there was a divide-by-zero error (because you
put two successive points at the same place).  Probably the spline hack
should do something better in that case (although I'm not sure what),
and certainly the floating-point exception handling on the 3600 has to
be fixed to work in all the cases (this is known and on the task list).
16-Mar-83 11:40:36-EST,4149;000000000000
Return-path: <kmp@MIT-MC>
Date: Wednesday, 16 March 1983, 11:29-EST
From: Kent M. Pitman <kmp at MIT-MC>
Subject: Thoughts about organizing buffers usefully
To: Moon at SCRC, JWalker at SCRC
Cc: BUG-LISPM at OZ, USER-INTERFACE at SCRC

I typically work with 75+ buffers in my ZWEI. There are about 70
source files to the KBE system. I usually just take 10 minutes
when I'm starting the day to get them all loaded into buffers.
In addition, I usually have one or two *Mail-N* buffers, a
*Tags-Search-N* buffer or two, a *Tag-Table-1* buffer, a
*Definitions-N* buffer, and some *Dired-N* buffers.  As such,
when I list my buffers, I get wraparound, even with a full
screen editor window. Any supposed solution that talks about
separating unvisited buffers from visited buffers isn't going to
help because my screen will then be divided in three regions:
buffers visited, buffers not visited, buffers visited (the part
of previous screenful which didn't get over-written).

I might be interested in considering the possibility that
buffers I hadn't explicitly requested to see (such as those
visited by Tags Search), and all the *Foo-N* buffers which are
known to be no longer "live", should not show up under c-X c-B
and I might need to do c-U c-X c-B to get that. I guess it would
still be ok for c-X B to still complete over the full namespace.
I could also imagine having a similar option to Kill Or Save
Buffers, and an option which let me move things back and forth
between my "Active" and "Inactive" areas.  Perhaps even
something that let me group edits into multiple contexts, where
buffers could optionally be shared between different contexts.
Then I could swap contexts and within each context maintain
useful defaults such as what files I was using, what my buffer
history was, maybe even differing kill rings (not sure about this), etc. 

Consider as I'm editing along on the KBE (in the default context)
and someone asks me to do something unrelated to this.
I could do m-X Push Context (or maybe it would be on a key) and it
would notice the current context has no name, so it would say:

 The context to be pushed has no name. Name it: (Default Context-1)
 KBE

Then it would give me a fresh buffer *Buffer-2* to edit in. When
I did c-X c-B I would see a list of buffers followed by a list
of other contexts (and information saying if those contexts were
"unfinished" (unwritten files, etc)).
I could mouse a buffer or context to go to. I
guess if you did this, c-X B would have to complete only over
the current context buffer names.

In any case, then I could later do m-X Pop Context (which would
perhaps offer to save buffers, ... I'm not sure what kind of
cleanup would be most aesthetic) and it would put me back where I
was, restoring whatever state is associated with the old context.
This would mark a context as "Finished".

Other commands like m-X Go To Context would switch contexts but would
not try to clean up.

The possibilities are endless, of course, but it could be worked out
incrementally, letting people see how it feels before getting too deep
into hooks. Things like subcontexts might be useful later on, but I
have no feel for how they might work.

A note about sharing buffers between contexts -- I think that it
might be a win if you try to select a file which is in use by an
"unfinished" context, you could get warned that you were trying to
use it for two different purposes and perhaps ZWEI could offer to
let you finish the other context first before proceeding. In fact,
if there were no shared files between "unfinished" contexts, then
you could have a process for each context and you could just block
the process that noticed the conflict waiting for the other process
to free the resource in question. This might be a nice compromise
between the current inability to get a separate editor process
in Symbolics software or the ability to get a separate editor process
along with the possibility of screwing your buffer state utterly
in MIT software.

I'll stop here. I hope someone finds these ideas of interest.
-kmp
16-Mar-83 12:47:08-EST,776;000000000000
Return-path: <SR.CYPHER@MIT-SPEECH>
Date: Wednesday, 16 March 1983, 12:41-EST
From: D. Scott Cyphers <SR.CYPHER at MIT-SPEECH>
Subject: get-site-option suggestion
To: BUG-LISPM at MIT-OZ

In Release 4.1, System 222.186, Hardcopy 11.14, Zmail 74.43, LMFS 30.26,
site configuration 18, on Lisp Machine Koala:

The following version of GET-SITE-OPTION allows for the LMLOCS file to override
site options in a way which I believe is compatible with the MIT system and which
should not break any existing code.  Could this be added to the system?

(DEFUN GET-SITE-OPTION (KEYWORD)
  (let ((local-option? (assq keyword (sixth (assoc local-host-name machine-location-alist)))))
    (if local-option?
	(cadr local-option?)
	(cdr (ASSQ KEYWORD SITE-OPTION-ALIST)))))
16-Mar-83 15:48:59-EST,486;000000000000
Return-path: <sr.rob@MIT-SPEECH>
Date: Wednesday, 16 March 1983, 15:34-EST
From: Robert H. Kassel <sr.rob at MIT-SPEECH>
Subject: Problem with FED
To: BUG-lispm at OZ

In Release 4.1, System 222.186, Hardcopy 11.14, Zmail 74.43, LMFS 30.26,
Experimental Spire 7.10, site configuration 18, on Lisp Machine Panda:

I can't seem to get the "STRECH" operation in FED to work for me.
Is this a bug or am I being dense? I am used to the old FED, so
a change might have eluded me.
16-Mar-83 16:32:15-EST,1061;000000000000
Return-path: <BSG@SCRC-TENEX>
Date: Wednesday, 16 March 1983, 16:28-EST
From: Bernard S. Greenberg <BSG at SCRC-TENEX>
Subject: Problem with FED
To: sr.rob at MIT-SPEECH, BUG-lispm at MIT-OZ
In-reply-to: The message of 16 Mar 83 15:34-EST from Robert H. Kassel <sr.rob at MIT-SPEECH>

    Date: Wednesday, 16 March 1983, 15:34-EST
    From: Robert H. Kassel <sr.rob at MIT-SPEECH>
    In Release 4.1, System 222.186, Hardcopy 11.14, Zmail 74.43, LMFS 30.26,
    Experimental Spire 7.10, site configuration 18, on Lisp Machine Panda:

    I can't seem to get the "STRECH" operation in FED to work for me.
    Is this a bug or am I being dense? I am used to the old FED, so
    a change might have eluded me.
It works fine.  The "old FED" had no comparable thing.  Do you have the
written document?  Are you sure you know how to use it?  You select two
points, specifying either two ordinates or two abscissas.  The character
is expanded such that the cross section cut by the first ordinate (or
abscissa) is extended to reach to the second. 
16-Mar-83 21:45:23-EST,1726;000000000000
Return-path: <Hewitt@MIT-OZ>
Date: Wednesday, 16 March 1983, 20:48-EST
From: Carl Hewitt <Hewitt@MIT-OZ>
Subject: Dired bug?
To: BUG-LISPM@MIT-MC

In Release 4.1, System 222.186, Hardcopy 11.14, Zmail 74.43, LMFS 30.26,
site configuration 18, on Lisp Machine Apiary-1:

I hit END while editing a file from within DIRED

>>Trap: The variable THIS is unbound.
While in the function SI:*EVAL  ZWEI:DO-IT-MULTIPLE-EVAL  ZWEI:DO-IT-EVAL-PRINT


SI:*EVAL: (P.C. = 214)
 Arg 0 (FORM): THIS
 Local 0 (ARGNUM): 0.
 Local 1 (FCTN): NIL
 Local 2 (CFCTN): NIL
 Local 3 (ARGL): NIL
 Local 4 (MAX-ARGS): NIL
 Local 5 (N-ARGS): NIL
 Local 6 (ARG-DESC): NIL
 Local 7 (TEM): NIL
 Local 8 (COUNT): NIL
 Local 9 (QUOTE-STATUS): NIL
 Local 10 (REST-FLAG): NIL
 Local 11 (FEXPR-FLAG): NIL
 Local 12 (LAMBDA-LIST): NIL
 Local 13: NIL
 Local 14: NIL
 Local 15 (TEM1): NIL
 Local 16 (ARG-TYPE): NIL
 Local 17 (ITEM): NIL


SI:*EVAL:  (P.C. = 214)
   Arg 0 (FORM): THIS

ZWEI:DO-IT-MULTIPLE-EVAL:  (P.C. = 43)
   Arg 0 (FORM): THIS

ZWEI:DO-IT-EVAL-PRINT:  (P.C. = 131)
   Arg 0 (FORM): THIS
   Arg 1 (FROM-BUFFER): #<FILE-BUFFER "-READ-.THIS PS:<NMETER> OZ:" 22365261>
   Arg 2 (REPRINT-FORM?): NIL

ZWEI:DO-IT-EVAL-AND-PRINT-FORMS:  (P.C. = 30)
   Arg 0 (DO-IT-FORMS): (THIS)
   Arg 1 (DO-IT-BUFFER): #<FILE-BUFFER "-READ-.THIS PS:<NMETER> OZ:" 22365261>
   Arg 2 (REPRINT-FORM?): NIL

ZWEI:DO-IT:  (P.C. = 113)
   Arg 0 (REPRINT-FORM?): NIL

ZWEI:COM-DO-IT:  (P.C. = 30)

ZWEI:COMMAND-EXECUTE:  (P.C. = 100)
   Arg 0 (COMMAND): ZWEI:COM-DO-IT
   Arg 1 (CHAR): 148.
   Arg 2 (PREFIX-CHAR): NIL
   Arg 3 (HOOK-LIST): NIL

ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 67)
   Arg 0 (CH): 148.
16-Mar-83 22:15:44-EST,958;000000000000
Return-path: <Moon@SCRC-TENEX>
Date: Wednesday, 16 March 1983, 22:10-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: Dired bug?
To: Carl Hewitt <Hewitt at MIT-OZ>
Cc: BUG-LISPM at MIT-MC
In-reply-to: The message of 16 Mar 83 20:48-EST from Carl Hewitt <Hewitt at MIT-OZ>

    Date: Wednesday, 16 March 1983, 20:48-EST
    From: Carl Hewitt <Hewitt@MIT-OZ>
    In Release 4.1, System 222.186, Hardcopy 11.14, Zmail 74.43, LMFS 30.26,
    site configuration 18, on Lisp Machine Apiary-1:

    I hit END while editing a file from within DIRED

    >>Trap: The variable THIS is unbound.
    While in the function SI:*EVAL  ZWEI:DO-IT-MULTIPLE-EVAL  ZWEI:DO-IT-EVAL-PRINT

None of the "DO-IT" functions in your backtrace are defined in the standard world.
I think your environment is polluted.  (si:print-login-history) will tell you
who's been logged in since the world was booted, and who disk-saved the world
you're running, etc.
17-Mar-83 10:04:39-EST,2706;000000000000
Return-path: <dove@MIT-DSPG>
Date: Thursday, 17 March 1983, 10:01-EST
From: Webster Dove <dove at MIT-DSPG>
To: BUG-LISPM at MIT-OZ

In MIT-Specific 18.1, System 93.29, ZMail 49.9, microcode 226, gc@2,
on Arthur Dent:


Insert your description of the circumstances here:

While trying to find completions matching "package "

>>TRAP 7324. (TRANS-TRAP)
The variable ZWEI:*MAXSTATE* is unbound.
Backtrace from the debugger:

ZWEI:BUILD-FSM-TREE-2 (P.C. = 52)

 Arg 0 (STRING): "package"
 Arg 1 (INDEX): 0.
 Arg 2 (STATE): 0.
 Arg 3 (LENGTH): 7.
 Arg 4 (CHARN): 1.
 Arg 5 (STAR-P): NIL
 Arg 6 (STAR1-P): NIL
Local 0 (NEW-STATE): 0.


ZWEI:BUILD-FSM-TREE-1 (P.C. = 247)

 Arg 0 (STRING): "package"
 Arg 1 (INDEX): 0.
 Arg 2 (STATE): 0.
 Arg 3 (LENGTH): 7.
Local 0 (CHAR): 112.
Local 1 (NOT-P): NIL
Local 2 (STAR-P): NIL
Local 3 (SET-P): NIL
Local 4 (CH): 1.
Local 5 (STAR1-P): NIL
Local 6 (SET): NIL
Local 7 (NCH): NIL
Local 8 (G2049): NIL


ZWEI:BUILD-FSM-TREE (P.C. = 105)

 Arg 0 (STRING-LIST): ("package")
 Arg 1 (*NCHARN*): 7.
Local 0 (*MAXSTATE*): 0.
Local 1 (I): 1000.
Local 2 (G1527): 1000.
Local 3 (J): 128.
Local 4 (G1532): ("package")
Local 5 (STRING): "package"


ZWEI:BUILD-FSM (P.C. = 53)

 Arg 0 (STRING-LIST): ("package")
   --Defaulted args:--
 Arg 1 (CASE-DEPENDENT-P): NIL
Local 0 (NCHARN): 7.
Local 1 (NSTATES): NIL


ZWEI:FSM-STRING-SEARCH (P.C. = 65)

 Arg 0 (KEY): (("package") NIL NIL)
 Arg 1 (STRING): "Revert Buffer"
   --Defaulted args:--
 Arg 2 (FROM): NIL
 Arg 3 (TO): NIL
Local 0 (LEN): 13.
Local 1 (STRINGS): ("package")
Local 2 (EXPR): NIL
Local 3 (CR-P): NIL
Local 4 (I): NIL
Local 5 (LIST): NIL
Local 6 (STATE): NIL
Local 7 (CH): NIL
Local 8 (STATE): NIL
Local 9 (OSTATE): NIL
Local 10 (WORD): NIL


Remainder of stack:

ZWEI:COM-COMPLETION-APROPOS (P.C. = 222)
ZWEI:COMMAND-EXECUTE (P.C. = 100)
ZWEI:PROCESS-COMMAND-CHAR (P.C. = 67)
(:METHOD ZWEI:WINDOW :EDIT) (P.C. = 465)
(:INTERNAL (:METHOD ZWEI:ZWEI-WITHOUT-TYPEOUT :COMBINED :EDIT) 0.) (P.C. = 63)
FUNCALL (P.C. = 25)
(:METHOD ZWEI:DISPLAYER :AROUND :EDIT) (P.C. = 31)
(:METHOD ZWEI:ZWEI-WITHOUT-TYPEOUT :COMBINED :EDIT) (P.C. = 47)
ZWEI:EDIT-IN-MINI-BUFFER (P.C. = 345)
ZWEI:COMPLETING-READ-FROM-MINI-BUFFER (P.C. = 101)
...
ZWEI:COMMAND-EXECUTE (P.C. = 100)
ZWEI:PROCESS-COMMAND-CHAR (P.C. = 67)
(:METHOD ZWEI:WINDOW :EDIT) (P.C. = 465)
(:INTERNAL (:METHOD ZWEI:ZMACS-WINDOW :COMBINED :EDIT) 0.) (P.C. = 74)
FUNCALL (P.C. = 25)
(:METHOD ZWEI:DISPLAYER :AROUND :EDIT) (P.C. = 31)
(:METHOD ZWEI:ZMACS-WINDOW :COMBINED :EDIT) (P.C. = 47)
ZWEI:ZMACS-WINDOW-TOP-LEVEL (P.C. = 46)
SI:PROCESS-TOP-LEVEL (P.C. = 121)
18-Mar-83 00:38:11-EST,389;000000000000
Return-path: <RMS@MIT-OZ>
Mail-From: RMS created at 18-Mar-83 00:36:43
Date: 18 Mar 1983 0036-EST
From: RMS@MIT-OZ
Subject: KMP's ideas about grouping editor buffers
To: bug-lispm-mit@MIT-OZ

Are there any users of the MIT system who would like
to have such a feature?  If so, how much would you like it?
I would like to see whether this is worthwhile to put work into.
-------
18-Mar-83 21:29:49-EST,390;000000000000
Return-path: <ALR@MIT-OZ>
Mail-From: ALR created at 18-Mar-83 21:24:40
Date: Fri, 18 Mar 1983  21:24 EST
From: ALR@MIT-OZ
To:   bug-lispm@MIT-OZ

In system 93xx, is the following a bug or a new feature (I hope it is
a bug).

#|  random text  ; |#

The |# does not close the comment because of the semicolon.  If this is a
new feature, it should warn that the user may not win.
18-Mar-83 22:28:48-EST,3061;000000000000
Return-path: <HDT@MIT-OZ>
Date: Friday, 18 March 1983, 22:24-EST
From: Howard D. Trachtman <HDT@MIT-OZ>
Subject: Some random comments
To: BUG-LISPM@MIT-OZ

In Brands both Green and Grey,

1) I consider it unfortunate that many objects print out in a manner
that they can no longer be read back in, unlike the way that filenames
are printed out.  There are probably lots of flavors for which it would
be fairly trivial to make them print out so that they could be read back
in.  One good example is host objects.  Instead of printing out like
#<TOPS20-CHAOS-HOST MIT-OZ> they could print out like
#FS:TOPS20-CHAOS-HOST "MIT-OZ"> In fact, it might even be useful to
have an option to defflavor specifying how hosts should PRINT (not
:print-self) and one that says how to reread the object once that it has
been printed out.

2) The allocation of the minor patch version number at the time a patch
is started potentially, as well as practically, leads to at least two
problems.  One, important patches are sometimes delayed in being
introduced in the system, and second with bad coordination two
individuals could counteract each other's work.  If patches in progress
were gived some name, say based on one's user-id or something, and the
minor patch version number is allocated only when a patch is completed,
then if one tests one's patches in the most current system, the above
possibilities are eliminated.

3) Anyone have any ideas on how to get around the limitation of
defstructs of fixnums to one slot; I'm displeased with my solution to
the problem below.  I would like to store a chess move into a single
fixnum.  I can in fact fit it into 12 bits by using 6 bits to represent
the square a piece is coming from and 6 bits to represet where the piece
is being moved two.  (3 of each set of 6 bits represents a row and the
other 3 bits represents a column, and there is a kludge for the special
cases of castling and pawn promotion). What I would like to do is be
able to store a set of 2 moves into a single fixnum, and access the
fields with the same sort of macros in the previous example.

4)  Any suggestions on how to make an upward compatable change in the syntax of defstruct
in order to provide a means for specifying a documentation string for the accessor macros
that are created?


5) There are a number of applications for which the speed of compiled
code is essential, and the loss in efficiency if special code for
debugging purposes existed in many functions, could not be tolerated.
How about providing a mechanism so that at make-system time one could,
by specifying certain options local to a particular system (ie. include
debugging information), cause code to end up either being included in
the system or being optimized into doing nothing.  I would prefer it
such that if a system is compiled with different options one gets
different systems, but systems that could somehow share the same sources
and patch-directories.  I didn't think this out fully, so perhaps I am wrong.
19-Mar-83 01:13:57-EST,3326;000000000000
Return-path: <CAL@MIT-OZ>
Date: Saturday, 19 March 1983, 01:09-EST
From: Cliff Lasser <CAL@MIT-OZ>
To: BUG-LISPM@MIT-OZ

In MIT-Specific 18.1, System 93.30, ZMail 49.10, microcode 226,
Yow!  Winning away!, on Lisp Machine Eight:


Insert your description of the circumstances here:

I'm getting tired of these zmail bugs.  This time, a single message seems to be
of infinite length.  That message is made up of the next 4 messages in a
circular loop.  After going around one and a half times, this happened:

PS: My mail._zmail_txt still exists in my directory.

>>TRAP 10072 (ARGTYP ARRAY M-A NIL GAHDR) ->  ARRAY-LEADER 
Some argument to ARRAY-LEADER, NIL, was of the wrong type.
The function expected an array.
Backtrace from the debugger:

(METHOD ZWEI:WINDOW REDISPLAY) (P.C. = 1246)
  (SELF is #<ZMAIL-WINDOW Zmail Window 1 15404665 exposed>)

 Arg 0 (OPERATION): REDISPLAY
 Arg 1 (RECENTER-TYPE): POINT
 Arg 2 (RC1): NIL
 Arg 3 (RC2): NIL
 Arg 4 (FORCE-TO-COMPLETION-P): NIL
Local 0 (LH): 16
Local 1 (NOW): 73750
Local 2 (POINT-PLINE): NIL
Local 3 (POINT-LINE): "From: ALR@MIT-OZ"
Local 4 (POINT-INDEX): 0
Local 5 (TOP-LINE): "From: ALR@MIT-OZ"
Local 6 (TOP-INDEX): 0
Local 7 (LAST-BP): ("" 0 MOVES)
Local 8 (INITIAL-DEGREE): 4
Local 9 (NEW-TOP-INDEX): NIL
Local 10 (Y): NIL
Local 11 (LINE): NIL
Local 12 (INDEX): NIL
Local 13 (P): NIL
Local 14 (LINE-LENGTH): NIL
Local 15 (LEN): NIL
Local 16 (DWID): NIL
Local 17 (CH): NIL
Local 18 (FONT): NIL
Local 19 (CWT): NIL
Local 20 (CWID): NIL
Local 21 (RWID): NIL
Local 22 (I): 1
Local 23 (TW): 0
Local 24 (L): NIL
Local 25 (FROM-INDEX): 0
Local 26 (TO-INDEX): 0
Local 27 (PLINE): 14
Local 28 (STOP-LINE): ""
Local 29 (FROB): NIL
Local 30 (PLINE): NIL
Local 31 (G0672): NIL
Local 32 (BL): NIL


ZWEI:REDISPLAY (P.C. = 72)

 Arg 0 (WINDOW): #<ZMAIL-WINDOW Zmail Window 1 15404665 exposed>
   --Defaulted args:--
 Arg 1 (RECENTER-TYPE): POINT
 Arg 2 (RC1): NIL
 Arg 3 (RC2): NIL
 Arg 4 (FORCE-TO-COMPLETION-P): NIL


ZWEI:REDISPLAY-ALL-WINDOWS (P.C. = 75)

   --Defaulted args:--
 Arg 0 (FORCE-TO-COMPLETION-P): NIL
 Arg 1 (SELECT-P): T
Local 0 (G5616): (#<ZMAIL-WINDOW Zmail Window 1 15404665 exposed>)
Local 1 (WINDOW): #<ZMAIL-WINDOW Zmail Window 1 15404665 exposed>


(METHOD ZWEI:ZMAIL-COMMAND-LOOP-MIXIN-WITH-SUMMARY REDISPLAY) (P.C. = 35)
  (SELF is #<ZMAIL-FRAME MAIN-ZMAIL-WINDOW 15400656 exposed>)

 Arg 0 (OPERATION): REDISPLAY
Local 0 (REDISPLAY-SUPPRESSED): NIL


(METHOD ZWEI:ZMAIL-COMMAND-LOOP-MIXIN COMMAND-LOOP) (P.C. = 222)
  (SELF is #<ZMAIL-FRAME MAIN-ZMAIL-WINDOW 15400656 exposed>)

 Arg 0 (OPERATION): COMMAND-LOOP
Local 0 (G0626): ("Return to ZMAIL command loop.")
Local 1 (G0626): ((SYS:ABORT ERROR) ("Return to ZMAIL command loop.") T ("Return to ZMAIL command loop.") ...)
Local 2 (RESPONSE): (ZWEI:BACKGROUND ZWEI:MSGS-LOADED #<BABYL-MAIL-FILE-BUFFER "CAL.BABYL PS:<CAL> OZ:" 12030157> 17 ...)
Local 3 (DEGREE): 0


Remainder of stack:

(INTERNAL (METHOD ZWEI:ZMAIL-FRAME COMBINED COMMAND-LOOP) 0) (P.C. = 50)
FUNCALL (P.C. = 25)
(METHOD ZWEI:ZMAIL-COMMAND-LOOP-MIXIN AROUND COMMAND-LOOP) (P.C. = 57)
(METHOD ZWEI:ZMAIL-FRAME COMBINED COMMAND-LOOP) (P.C. = 47)
ZWEI:ZMAIL-PROCESS-TOP-LEVEL (P.C. = 115)
SI:PROCESS-TOP-LEVEL (P.C. = 121)
19-Mar-83 03:13:40-EST,329;000000000000
Return-path: <GSB@MIT-ML>
Date: Saturday, 19 March 1983, 03:10-EST
From: Glenn S. Burke <GSB at MIT-ML>
To: BUG-LISPM at MIT-OZ

In MIT-Specific 18.1, System 93.30, ZMail 49.10, microcode 226, gc@2,
on Lisp Machine Thirty-one:

#+Multics (foo #.(1- 4))
says NIL is an undefined function.

#. should cooperate better.
19-Mar-83 14:24:00-EST,333;000000000000
Return-path: <Zvona@MIT-OZ>
Date: Saturday, 19 March 1983, 14:24-EST
From: David Chapman <Zvona@MIT-OZ>
Subject: no values declared
To: BUG-lispm@MIT-OZ

In Release 4.1, System 222.186, Hardcopy 11.14, Zmail 74.43, LMFS 30.26,
site configuration 19, on Lisp Machine Two:

No values list is declared for intern and friends.
19-Mar-83 15:43:41-EST,508;000000000000
Return-path: <Zvona@MIT-OZ>
Date: Saturday, 19 March 1983, 15:42-EST
From: David Chapman <Zvona@MIT-OZ>
Subject: abort in eh
To: BUG-LISPM@MIT-OZ

In Release 4.1, System 222.186, Hardcopy 11.14, Zmail 74.43, LMFS 30.26,
site configuration 19, on Lisp Machine Two:

Now, when you try to c-abort while the error handler is getting started,
it types [Sorry, no abort handlers in this process], which is an
improvement over ignoring it.  But, is there no way to make c-abort do
the intuitive thing?
19-Mar-83 16:51:49-EST,799;000000000000
Return-path: <barmar@MIT-MULTICS>
Date: Saturday, 19 March 1983, 16:50-EST
From: Margolin at MIT-Multics
Sender: barmar at MIT-MULTICS
Subject: host dies while reading a file
To: BUG-LISPM at OZ

In Release 4.0, System 222.186, Zmail 74.43, Experimental Macsyma 6.13,
site configuration 12, on Zarniwoop:

Unfortunately for me, my primary host has an unreliable Chaosnet NCP,
causing it to reinitialize frequently, losing any connections.  This
often happens while a file os being read or loaded, and my only option
when it recovers is to start loading from the beginning again.  Since
the FILE protocol does include a POSITION operation, it would be nice if
the Lisp Machine recorded its position while reading, and offered a
restart type that tries to continue from where it was.
19-Mar-83 17:06:22-EST,360;000000000000
Return-path: <barmar@MIT-MULTICS>
Date: Saturday, 19 March 1983, 17:02-EST
From: Margolin at MIT-Multics
Sender: barmar at MIT-MULTICS
Subject: (login-forms (deff ...))
To: BUG-LISPM at OZ

In Release 4.0, System 222.186, Zmail 74.43, Experimental Macsyma 6.13,
site configuration 12, on Zarniwoop:

Why doesn't DEFF have a :UNDO-FUNCTION property?
19-Mar-83 21:26:17-EST,695;000000000000
Return-path: <STRAZ@MIT-OZ>
Mail-From: STRAZ created at 19-Mar-83 21:22:04
Date: 19 Mar 1983 2122-EST
From: Steve Strassmann <STRAZ@MIT-OZ>
Subject: CADR-9 is broken
To: bug-lispm@MIT-OZ


CADR-9 is broken. It seems to work fine after cold-boot, but within
15-60 minutes it dies for no apparent reason. By death, I mean
one of the "running lights" (long horiz line at the bottom) is stuck
on and no response is made to anything less than a boot. Warm boot
grovels for a few seconds, but then it is stuck again. Cold boot
does work.

The lispm was always handling tyi at the time of failure; once it was
a crlf in emacs that seemed to cause catatonia.

Thanks,
Steve
-------
20-Mar-83 01:50:05-EST,606;000000000000
Return-path: <KBE@MIT-OZ>
Date: Sunday, 20 March 1983, 01:48-EST
From: Apprentice for KMP <KBE@MIT-OZ>
Subject: c-X c-D in non-file buffers
To: BUG-LISPM@MIT-OZ

In Release 4.1, System 222.186, ...

In *Buffer-1* with no other buffers ever having been built, typing c-X c-D
lists FOO.LISP on my default dir. This is likely to be worthless most of the
time. I think c-X c-D should prompt for a filename if I'm in a non-file buffer.
I realized I had wanted c-U before the c-X only after I typed the c-X and I
completed the command only to see if the default was useful; I didn't find it
to be.
20-Mar-83 13:34:01-EST,252;000000000000
Return-path: <Zvona@MIT-OZ>
Date: Sunday, 20 March 1983, 13:31-EST
From: David Chapman <Zvona@MIT-OZ>
To: bug-lispm@MIT-OZ

Is the 3600 compiler re-entrant?  Is it safe to compile and load a file
while in a debugger from a previous compilation?
20-Mar-83 13:43:52-EST,507;000000000000
Return-path: <Zvona@MIT-OZ>
Date: Sunday, 20 March 1983, 13:43-EST
From: David Chapman <Zvona@MIT-OZ>
Subject: no fixnum declaration
To: BUG-LISPM@MIT-OZ

In System 222.186, Hardcopy 11.14, Zmail 74.43, Tape 13.0, LMFS 30.26,
cold load 65, microcode TMC5-MIC 181, site configuration 19, on PI Project:

FIXNUM is not defined here.  It is on the lm-2s.  It's useful for
maclisp compatibility.  It would be reasonable not to try to maintain
that, but I haven't seen an anouncement to that effect?
20-Mar-83 14:19:09-EST,474;000000000000
Return-path: <MOON@SCRC-TENEX>
Date: Sunday, 20 March 1983  14:16-EST
From: MOON at SCRC-TENEX
To:   David Chapman <Zvona at MIT-OZ>
Cc:   bug-lispm at MIT-OZ
In-reply-to: The message of 20 Mar 1983 13:31-EST from David Chapman <Zvona@MIT-OZ>

    Date: Sunday, 20 March 1983, 13:31-EST
    From: David Chapman <Zvona@MIT-OZ>

    Is the 3600 compiler re-entrant?  Is it safe to compile and load a file
    while in a debugger from a previous compilation?
Yes.
20-Mar-83 14:33:42-EST,938;000000000000
Return-path: <MOON@SCRC-TENEX>
Date: Sunday, 20 March 1983  14:31-EST
From: MOON at SCRC-TENEX
To:   David Chapman <Zvona at MIT-OZ>
Cc:   BUG-LISPM at MIT-OZ
Subject: abort in eh
In-reply-to: The message of 19 Mar 1983 15:42-EST from David Chapman <Zvona@MIT-OZ>

    Date: Saturday, 19 March 1983, 15:42-EST
    From: David Chapman <Zvona@MIT-OZ>

    Now, when you try to c-abort while the error handler is getting started,
    it types [Sorry, no abort handlers in this process], which is an
    improvement over ignoring it.  But, is there no way to make c-abort do
    the intuitive thing?
It does in many places.  But you found one (while it's getting started in
the trap-interceptor stack group) where it doesn't have any way to get the
abort back out to the stack group that err'ed, at least currently.
Incidentally, this is the place where typing c-Abort formerly crashed
your machine.

Fixed on the 3600.
20-Mar-83 14:43:53-EST,3655;000000000000
Return-path: <Zvona@MIT-OZ>
Date: Sunday, 20 March 1983, 14:43-EST
From: David Chapman <Zvona@MIT-OZ>
Subject: help
To: BUG-LISPM@MIT-OZ

In System 222.186, Hardcopy 11.14, Zmail 74.43, Tape 13.0, LMFS 30.26,
cold load 65, microcode TMC5-MIC 181, site configuration 19, on PI Project:

What is this?

>>Error: Wrong number of arguments but arguments ok
While in the function (PROPERTY DBG:WRONG-NUMBER-OF-ARGUMENTS DBG:DECODE)  SYS:MICROCODE-ERROR-HANDLER  MESSAGE-DETECTOR


(PROPERTY DBG:WRONG-NUMBER-OF-ARGUMENTS DBG:DECODE): (P.C. = 40)
 Arg 0 (ERROR-TABLE-ENTRY): (DBG:WRONG-NUMBER-OF-ARGUMENTS)
 Arg 1 (IGNORE): #<DTP-LOCATIVE 33276772>
 Arg 2 (MACRO-PC): #<DTP-EVEN-PC 33277060>
 Arg 3 (ERROR-HANDLER-BASE-FRAME): #<DTP-LOCATIVE 17400576>
 Local 4 (FRAME): #<DTP-LOCATIVE 17400562>
 Local 5 (NARGS): 15
 Local 6 (FUNCTION): #<DTP-COMPILED-FUNCTION MESSAGE-DETECTOR 33276771>
 Local 7 (ARGS-INFO): 3855
 Local 8 (TOO-MANY): NIL


(PROPERTY DBG:WRONG-NUMBER-OF-ARGUMENTS DBG:DECODE):  (P.C. = 40)
   Arg 0 (ERROR-TABLE-ENTRY): (DBG:WRONG-NUMBER-OF-ARGUMENTS)
   Arg 1 (IGNORE): #<DTP-LOCATIVE 33276772>
   Arg 2 (MACRO-PC): #<DTP-EVEN-PC 33277060>
   Arg 3 (ERROR-HANDLER-BASE-FRAME): #<DTP-LOCATIVE 17400576>

SYS:MICROCODE-ERROR-HANDLER:  (P.C. = 61)
   Arg 0 (MICRO-PC): 4382
   Arg 1 (VMA): #<DTP-LOCATIVE 33276772>
   Arg 2 (MACRO-PC): #<DTP-EVEN-PC 33277060>

MESSAGE-DETECTOR:
   Arg 0 (MSGP-OUT-BAR): RT-MD-MSGP-BAR-0
   Arg 1 (D-OUT-BAR): +ZD-OUT-448
   Arg 2 (G-OUT): RT-OUT-GRANT-1
   Arg 3 (BUS): RT-M-OUT
   Arg 4 (REQUEST): +REQUEST-447
   Arg 5 (MSGP-I): RT-MD-DETECT-0
   Arg 6 (D-IN): RT-MSG-BUFFED-0
   Arg 7 (G-IN): VDD
   Arg 8 (T-MSGP): RT-T-MSGP
   Arg 9 (T-DATA-BAR): RT-T-DATA-BAR
   Arg 10 (T-ADDR2-PHI2): RT-T-ADDR2
   Arg 11 (T-RESET-ZD-BAR): RT-T-RESET-ZD-BAR
   Arg 12 (RESET-BAR): RT-RESET-BAR
   Arg 13 (ODDP): NIL
   Arg 14 (ZEROP): RT-MD-ZEROP-0

MESSAGE-DETECTOR-LATCH:  (P.C. = 23)
   Arg 0 (MD-MSGP-OUT-BAR): RT-MD-MSGP-BAR-0
   Arg 1 (ZD-OUT): +ZD-OUT-448
   Arg 2 (G-OUT): RT-OUT-GRANT-1
   Arg 3 (BUS): RT-M-OUT
   Arg 4 (REQUEST): +REQUEST-447
   Arg 5 (MSGP-I): RT-MD-DETECT-0
   Arg 6 (D-IN): RT-MSG-BUFFED-0
   Arg 7 (G-IN): VDD
   Arg 8 (T-MSGP): RT-T-MSGP
   Arg 9 (T-DATA-BAR): RT-T-DATA-BAR
   Arg 10 (T-ADDR2): RT-T-ADDR2
   Arg 11 (T-RESET-ZD-BAR): RT-T-RESET-ZD-BAR
   Arg 12 (RESET-BAR): RT-RESET-BAR
   Arg 13 (ODDP): NIL
   Arg 14 (ZEROP): RT-MD-ZEROP-0
   Arg 15 (LATCHED-MD-MSGP-OUT-BAR): +LATCHED-MD-MSGP-OUT-BAR-450
   Arg 16 (T-END): RT-T-LAST

MESSAGE-ROW:  (P.C. = 35)
   Arg 0 (D-OUT): RT-MSG-0-0
   Arg 1 (D-IN-BUFFERED): RT-MSG-BUFFED-0
   Arg 2 (BUS): RT-M-OUT
   Arg 3 (G-IN): VDD
   Arg 4 (G-OUT): RT-OUT-GRANT-1
   Arg 5 (MSGP-OUT): RT-MSGP-0-0
   Arg 6 (T-END): RT-T-LAST
   Arg 7 (WANT-IN): RT-M-INP
   Arg 8 (WANT-OUT): RT-WANT-1
   Arg 9 (D-EXT): RT-M-IN
   Arg 10 (T-MSGP): RT-T-MSGP
   Arg 11 (T-DATA-BAR): RT-T-DATA-BAR
   Arg 12 (T-RESET-ZD-BAR): RT-T-RESET-ZD-BAR
   Arg 13 (T-ADDR2): RT-T-ADDR2
   Arg 14 (SEL-MSGP): RT-SEL-MSGP
   Arg 15 (SEL-END): RT-SEL-END
   Arg 16 (SEL-TAP): RT-SEL-TAP
   Arg 17 (BUFFER-NAME): RT-BUFFER-0
   Arg 18 (RESET-BAR): RT-RESET-BAR
   Arg 19 (ODDP): NIL
   Arg 20 (MD-MSGP-OUT-BAR): RT-MD-MSGP-BAR-0
   Arg 21 (MSGP-I): RT-MD-DETECT-0
   Arg 22 (ZEROP): RT-MD-ZEROP-0

MXN-MESSAGE-BOX:  (P.C. = 147)
   Arg 0 (NAME): RT

ROUTER:  (P.C. = 6)
   Arg 0 (NAME): RT
   Arg 1 (COMIN): COMIN
   Arg 2 (COMOUT): COMOUT
   Arg 3 (CIU?): NIL

SI:*EVAL:  (P.C. = 405)
   Arg 0 (FORM): (ROUTER (QUOTE RT) (QUOTE COMIN) (QUOTE COMOUT) NIL)
20-Mar-83 16:58:41-EST,339;000000000000
Return-path: <BAK@MIT-OZ>
Date: Sunday, 20 March 1983, 16:56-EST
From: William A. Kornfeld <BAK@MIT-OZ>
Subject: garbage collector and forwarding pointers
To: bug-lispm@MIT-OZ

Does the garbage collector replace DTP-ONE-Q-FORWARD pointers with the
Q pointed to on copying?  I would appreciate answers for both brands
of software.
20-Mar-83 17:00:21-EST,348;000000000000
Return-path: <ZVONA@MIT-OZ>
Mail-From: ZVONA created at 20-Mar-83 16:56:44
Date: Sun, 20 Mar 1983  16:56 EST
From: ZVONA@MIT-OZ
To:   MOON@SCRC-TENEX
Subject: compiler reentrant?
Cc:   bug-lispm@MIT-OZ
In-reply-to: Msg of 20 Mar 1983  14:16-EST from MOON at SCRC-TENEX

Great.  How about running multiple compilers in separate processes?
20-Mar-83 19:29:09-EST,3453;000000000000
Return-path: <CAL@MIT-OZ>
Date: Sunday, 20 March 1983, 19:28-EST
From: Cliff Lasser <CAL@MIT-OZ>
To: BUG-LISPM@MIT-OZ

In MIT-Specific 18.1, System 93.30, ZMail 49.10, microcode 226,
Yow!  Winning away!, on Lisp Machine Eight:


Insert your description of the circumstances here:

This happened while trying to indent a very large function (INCREMENTAL-SEARCH)
so that it would be properly indented to fit inside an EVAL-WHEN.

>>ERROR: The negative array length -3 is illegal.
Backtrace from the debugger:

SI:SIMPLE-MAKE-ARRAY (P.C. = 217)

 Arg 0 (DIMENSIONS): -3
 Arg 1 (TYPE): ART-STRING
   --Defaulted args:--
 Arg 2 (AREA): NIL
 Arg 3 (LEADER-LENGTH): NIL
 Arg 4 (INITIAL-VALUE): NIL
Local 0 (INITIAL-VALUE-P): NIL
Local 1 (DATA-LENGTH): NIL
Local 2 (LONG-ARRAY-P): NIL
Local 3 (ARRAY): NIL
Local 4 (ENTRIES-PER-Q): NIL
Local 5 (HEADER-WORD): NIL


INDENT-TO (P.C. = 203)

 Arg 0 (BP): ("BLINK (FUNCALL (WINDOW-POINT-BLINKER *WINDOW*) ':BLINK)" 0)
 Arg 1 (GOAL): -33
 Arg 2 (SHEET): #<ZMACS-WINDOW-PANE Zmacs Window Pane 1 15403703 exposed>
Local 0 (SPACES): NIL
Local 1 (N): -3
Local 2 (M): 0
Local 3 (BPI): 0
Local 4 (SW): 11
Local 5 (TW): 110
Local 6 (TAB): NIL
Local 7 (SPACE): NIL
Local 8 (I): NIL
Local 9 (J): NIL


INDENT-LINE (P.C. = 222)

 Arg 0 (BP): ("BLINK (FUNCALL (WINDOW-POINT-BLINKER *WINDOW*) ':BLINK)" 0)
 Arg 1 (INDENTATION): -33
   --Defaulted args:--
 Arg 2 (SHEET): #<ZMACS-WINDOW-PANE Zmacs Window Pane 1 15403703 exposed>
 Arg 3 (BP1): ("BLINK (FUNCALL (WINDOW-POINT-BLINKER *WINDOW*) ':BLINK)" 0)
Local 0 (BP-AFTER): ("BLINK (FUNCALL (WINDOW-POINT-BLINKER *WINDOW*) ':BLINK)" 4)
Local 1 (BP-LIST): NIL
Local 2 (NONBLANK-INDEX): 4
Local 3 (G7617): NIL
Local 4 (BP2): NIL
Local 5 (US): (#<ZMACS-BUFFER "LISPM.INIT PS:<CAL> OZ:" 27666472> (** ** ** ** ...) ("BLINK (FUNCALL (WINDOW-POINT-BLINKER *WINDOW*) ':BLINK)" 0 :NORMAL) ("BLINK (FUNCALL (WINDOW-POINT-BLINKER *WINDOW*) ':BLINK)" 0 :MOVES) ...)
Local 6 (NONBLANK-INDEX): NIL
Local 7 (BP-AND-INDENTATION): NIL
Local 8 (INDEX): NIL


INDENT-INTERVAL-FOR-LISP (P.C. = 233)

 Arg 0 (BP1): ("		(ASET T *IS-STATUS* 0)	   ; Initialize the stacks." 0)
 Arg 1 (BP2): ("		      ;; Call string search, and make self-doc print the right thing there." 0)
 Arg 2 (IN-ORDER-P): NIL
 Arg 3 (START-BP): ("(EVAL-WHEN (LOAD COMPILE EVAL)" 0)
 Arg 4 (COMMENTS-P): :CONTROL-U
Local 0 (START-LINE): "		(ASET T *IS-STATUS* 0)	   ; Initialize the stacks."
Local 1 (STOP-LINE): "		      ;; Call string search, and make self-doc print the right thing there."
Local 2 (LINE): "BLINK (FUNCALL (WINDOW-POINT-BLINKER *WINDOW*) ':BLINK)"
Local 3 (BP): ("BLINK (FUNCALL (WINDOW-POINT-BLINKER *WINDOW*) ':BLINK)" 0)
Local 4 (INDENTATION): -33
Local 5 (IN-STRING): NIL
Local 6 (COMMENT): NIL


COM-INDENT-FOR-LISP (P.C. = 122)

Local 0 (PT): ("		(ASET T *IS-STATUS* 0)	   ; Initialize the stacks." 2 :NORMAL)
Local 1 (END): ("		      ;; Call string search, and make self-doc print the right thing there." 0)
Local 2 (FLAG): NIL


Remainder of stack:

COMMAND-EXECUTE (P.C. = 100)
PROCESS-COMMAND-CHAR (P.C. = 67)
(:METHOD WINDOW :EDIT) (P.C. = 465)
(:INTERNAL (:METHOD ZMACS-WINDOW :COMBINED :EDIT) 0) (P.C. = 74)
FUNCALL (P.C. = 25)
(:METHOD DISPLAYER :AROUND :EDIT) (P.C. = 31)
(:METHOD ZMACS-WINDOW :COMBINED :EDIT) (P.C. = 47)
ZMACS-WINDOW-TOP-LEVEL (P.C. = 46)
SI:PROCESS-TOP-LEVEL (P.C. = 121)
20-Mar-83 21:40:09-EST,3116;000000000000
Return-path: <kbe@MIT-OZ>
Date: Sunday, 20 March 1983, 21:36-EST
From: Apprentice for KMP <kbe@MIT-OZ>
Subject: error handling in NES
To: BUG-LISPM@MIT-OZ

In Symbolics Release 4.1, System 222.186, ...

Is there a way to globally assign default handlers for a
condition? There are cases where programs of mine may not handle
a certain condition and I would like to provide a default
handler.

One way to do this would be to let the condition specify its own
default handler if it wants to. This is what T does in some of its
message passing with neat results. For example, it could have a 
method called :DEFAULT-HANDLER which would be called to handle the 
condition if no one else wanted to (returning NIL if it didn't want
to handle it either).

For example, on page 21 of "Signalling and Handling Conditions" you 
mention DBG:DEBUGGER-CONDITION is handled by some interactive handlers
mechanism. One application of the scheme I just described might allow
you to flush the "interactive handlers" mechanism in favor of running
the :DEFAULT-HANDLER at that point. eg, for DBG:DEBUGGER-CONDITION,
you'd write:

  (DEFMETHOD (DBG:DEBUGGER-CONDITION :DEFAULT-HANDLER) ()
    ...call debugger on SELF...)

If that returned NIL, you could proceed to the RESTART-HANDLERS.

In fact, I think the way it tries Interactive, then Restart, then 
Debugger (or return) is a bit ad hoc. It is probably useful most of
the time (certainly I'm happy with it as a default), but I can imagine
someone wanting more control of ordering. If these last three things
were merged via appropriate method combinations of a :DEFAULT-HANDLER,
then the user could over-ride the order on a per-condition basis. This
sounds like the sort of thing :OR method combination must be meant for,
though I've never taken the trouble to learn about such.

In fact, if all the things (bound handlers, default handlers, etc.) were
handled by method combination, then rather than calling it :DEFAULT-HANDLER,
you'd just say :HANDLE-CONDITION or something. You could have mixins that
added methods for each handler-finding-strategy; eg,

  (DEFFLAVOR MY-CONDITION () (DEFAULT-HANDLERS-MIXIN BOUND-HANDLERS-MIXIN ...))

where SYS:ERROR would default to the default combination of these mixins as
described in the documentation, but you could change the order that the 
various handling strategies were tried (or add your own).

You would also be able to define a method which over-rode
the base strategy for a particular error flavor temporarily (or permanently).
This would be handy if you had made your system have air-tight handling and you
weren't able to easily access the debugger for a particular error any more.
eg,

  (DEFMETHOD (MY-CONDITION :BEFORE :HANDLE-CONDITION) ()
    (FORMAT T "~&A MY-CONDITION was signalled:~%~A" SELF)
    (BREAK "Debug"))

Just to see what's going on. Or 

  (DEFMETHOD (BOUND-DEFAULT-HANDLERS-MIXIN :AFTER :HANDLE-CONDITION) ()
    (FORMAT T "A condition was still not handled after BOUND-DEFAULT-HANDLERS:~%~A"
	    SELF)
    (BREAK "Debug"))

--kmp
20-Mar-83 22:04:57-EST,514;000000000000
Return-path: <Moon@SCRC-TENEX>
Date: Sunday, 20 March 1983, 21:57-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: compiler reentrant?
To: ZVONA at MIT-OZ
Cc: bug-lispm at MIT-OZ
In-reply-to: The message of 20 Mar 83 16:56-EST from ZVONA at MIT-OZ

    Date: Sun, 20 Mar 1983  16:56 EST
    From: ZVONA@MIT-OZ
    Great.  How about running multiple compilers in separate processes?
This works, too.  If you try this and find some reason that it
doesn't, please report it.  It's intended to work.
20-Mar-83 22:06:05-EST,1360;000000000000
Return-path: <Moon@SCRC-TENEX>
Date: Sunday, 20 March 1983, 22:03-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: garbage collector and forwarding pointers
To: William A. Kornfeld <BAK at MIT-OZ>
Cc: bug-lispm at MIT-OZ
In-reply-to: The message of 20 Mar 83 16:56-EST from William A. Kornfeld <BAK at MIT-OZ>

    Date: Sunday, 20 March 1983, 16:56-EST
    From: William A. Kornfeld <BAK@MIT-OZ>
    Does the garbage collector replace DTP-ONE-Q-FORWARD pointers with the
    Q pointed to on copying?  I would appreciate answers for both brands
    of software.

No, it only "snaps out" DTP-HEADER-FORWARD and DTP-BODY-FORWARD, the things
left by the STRUCTURE-FORWARD function (and its variants such as
ADJUST-ARRAY-SIZE).  This applies to all brands.

Think about it: DTP-ONE-Q-FORWARD says that a certain cell in the
middle of one structure should share with a particular cell in the
middle of another structure.  If the GC tried to remove the forwarding
pointer, either the two cells wouldn't share any more, or it would have
to make a forwarding pointer pointing in the other direction.  You might
say that if the pointed-to structure became inaccessible, the GC should
get rid of the forwarding pointer.  Unfortunately it can never become
inaccessible, because of the existence of the %FIND-STRUCTURE-HEADER
subprimitive.
20-Mar-83 22:15:24-EST,1228;000000000000
Return-path: <Moon@SCRC-TENEX>
Date: Sunday, 20 March 1983, 22:10-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: help
To: David Chapman <Zvona at MIT-OZ>
Cc: BUG-LISPM at MIT-OZ
In-reply-to: The message of 20 Mar 83 14:43-EST from David Chapman <Zvona at MIT-OZ>

    Date: Sunday, 20 March 1983, 14:43-EST
    From: David Chapman <Zvona@MIT-OZ>
    In System 222.186, Hardcopy 11.14, Zmail 74.43, Tape 13.0, LMFS 30.26,
    cold load 65, microcode TMC5-MIC 181, site configuration 19, on PI Project:

    What is this?

    >>Error: Wrong number of arguments but arguments ok
    While in the function (PROPERTY DBG:WRONG-NUMBER-OF-ARGUMENTS DBG:DECODE)  SYS:MICROCODE-ERROR-HANDLER  MESSAGE-DETECTOR

Well, MESSAGE-DETECTOR wants 15 arguments, and was called with 15 arguments (as can be seen from
the backtrace and ARGS-INFO in the stack trace I've deleted from this reply), however
the microcode signalled a wrong-number-of-arguments error.  Hence the debugger gives the
error whose message is above.  Unless this is reproducible the machine you're
using is probably broken in some subtle way that makes 15 not equal to 15 sometimes.
Did re-invoking MESSAGE-DETECTOR with c-m-R make it win?
20-Mar-83 23:52:24-EST,1616;000000000000
Return-path: <ZVONA@MIT-OZ>
Mail-From: ZVONA created at 20-Mar-83 23:51:28
Date: Sun, 20 Mar 1983  23:51 EST
From: ZVONA@MIT-OZ
To:   David A. Moon <Moon@SCRC-TENEX>
Cc:   BUG-LISPM@MIT-OZ
Subject: help
In-reply-to: Msg of 20 Mar 1983 22:10-EST from David A. Moon <Moon at SCRC-TENEX>

    Date: Sunday, 20 March 1983, 22:10-EST
    From: David A. Moon <Moon at SCRC-TENEX>
    To:   David Chapman <Zvona>
    cc:   BUG-LISPM
    Re:   help

        Date: Sunday, 20 March 1983, 14:43-EST
        From: David Chapman <Zvona@MIT-OZ>
        In System 222.186, Hardcopy 11.14, Zmail 74.43, Tape 13.0, LMFS 30.26,
        cold load 65, microcode TMC5-MIC 181, site configuration 19, on PI Project:

        What is this?

        >>Error: Wrong number of arguments but arguments ok
        While in the function (PROPERTY DBG:WRONG-NUMBER-OF-ARGUMENTS DBG:DECODE)  SYS:MICROCODE-ERROR-HANDLER  MESSAGE-DETECTOR

    Well, MESSAGE-DETECTOR wants 15 arguments, and was called with 15 arguments (as can be seen from
    the backtrace and ARGS-INFO in the stack trace I've deleted from this reply), however
    the microcode signalled a wrong-number-of-arguments error.  Hence the debugger gives the
    error whose message is above.  Unless this is reproducible the machine you're
    using is probably broken in some subtle way that makes 15 not equal to 15 sometimes.
    Did re-invoking MESSAGE-DETECTOR with c-m-R make it win?

No.  I had to recompile.  The first time it was compiled, I was
running two compilers at once, which was why I suspected that that
might be the problem.
21-Mar-83 00:25:30-EST,1448;000000000000
Return-path: <Moon@SCRC-TENEX>
Date: Monday, 21 March 1983, 00:24-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: help
To: ZVONA at MIT-OZ
Cc: BUG-LISPM at MIT-OZ
In-reply-to: The message of 20 Mar 83 23:51-EST from ZVONA at MIT-OZ

    Date: Sun, 20 Mar 1983  23:51 EST
    From: ZVONA@MIT-OZ
	Date: Sunday, 20 March 1983, 22:10-EST
	From: David A. Moon <Moon at SCRC-TENEX>
	    Date: Sunday, 20 March 1983, 14:43-EST
	    From: David Chapman <Zvona@MIT-OZ>

	    >>Error: Wrong number of arguments but arguments ok
	    While in the function (PROPERTY DBG:WRONG-NUMBER-OF-ARGUMENTS DBG:DECODE)  SYS:MICROCODE-ERROR-HANDLER  MESSAGE-DETECTOR

	Well, MESSAGE-DETECTOR wants 15 arguments, and was called with 15 arguments (as can be seen from
	the backtrace and ARGS-INFO in the stack trace I've deleted from this reply), however
	the microcode signalled a wrong-number-of-arguments error.
	Did re-invoking MESSAGE-DETECTOR with c-m-R make it win?

    No.  I had to recompile.  The first time it was compiled, I was
    running two compilers at once, which was why I suspected that that
    might be the problem.

Ah!  Maybe you just found a non-reentrancy in the compiler!  Do you
still have the bad BIN file?  If so, please rename it so it won't go away and
mail us the name.  Perhaps the instruction that actually controls the
number of arguments is not in agreement with the "ARGS-INFO" of the function.
21-Mar-83 01:36:35-EST,433;000000000000
Return-path: <kbe@MIT-OZ>
Date: Monday, 21 March 1983, 01:31-EST
From: Apprentice for KMP <kbe@MIT-OZ>
Subject: SYS:NO-ACTION-MIXIN
To: BUG-LISPM@MIT-OZ

In Release 4.1, System 222.186, ... 

It seems to me that along with SYS:NO-ACTION-MIXIN, it will be common for
people to do
 (CONDITION-BIND ((condition #'(LAMBDA (IGNORE) ':NO-ACTION)))
   ...)
It might be nice to give a name to that function. (eg, SYS:NO-ACTION)
21-Mar-83 01:37:25-EST,829;000000000000
Return-path: <ZVONA@MIT-OZ>
Mail-From: ZVONA created at 21-Mar-83 01:31:58
Date: Mon, 21 Mar 1983  01:31 EST
From: ZVONA@MIT-OZ
To:   David A. Moon <Moon@SCRC-TENEX>
Cc:   BUG-LISPM@MIT-OZ
Subject: help
In-reply-to: Msg of 21 Mar 1983 00:24-EST from David A. Moon <Moon at SCRC-TENEX>

    Ah!  Maybe you just found a non-reentrancy in the compiler!  Do you
    still have the bad BIN file?  If so, please rename it so it won't go away and
    mail us the name.  Perhaps the instruction that actually controls the
    number of arguments is not in agreement with the "ARGS-INFO" of the function.

Sorry, I was compiling out of an editor buffer.  It happened several
times, though, so it may be possible to non-deterministically reproduce it,
in which case I will send you a describe and dissassemble of the FEF.
21-Mar-83 03:00:36-EST,3425;000000000000
Return-path: <RZ@MIT-MC>
Date: Monday, 21 March 1983, 02:58-EST
From: Richard E. Zippel <RZ at MIT-MC>
Subject: possible problem with whoppers
To: BUG-LISPM at OZ

In Release 4.0, System 222.186, Hardcopy 11.14, Zmail 74.43,
site configuration 18, on Lisp Machine Sixteen:

A window containing the flavor at the end was created, and a :draw-lines
message sent.  I've removed most of the flavor, so I hope I haven't
removed too much. 

The scaling-mixin tries to reorganize the coordinate system of a window.
It places a whopper around :draw-line but not :draw-lines since
:draw-lines calls :draw-line and you don't want the scaling to be done
twice.

>>Trap: Some argument to ARRAY-LEADER, TV:GRAPHICS-MIXIN, was of the wrong type.
The function expected an array.
While in the function ARRAY-LEADER  (:METHOD SCHEMATIC-VIEW :COMBINED :DRAW-LINE)  (:METHOD TV:GRAPHICS-MIXIN :DRAW-LINES)  SEND


(:METHOD SCHEMATIC-VIEW :COMBINED :DRAW-LINE): (P.C. = 34)
 (SELF = #<SCHEMATIC-VIEW Schematic View 1 21014732 exposed>)
 Rest arg (.DAEMON-CALLER-ARGS.): (NIL 0 0 0 100 7 NIL)


(:METHOD SCHEMATIC-VIEW :COMBINED :DRAW-LINE):  (P.C. = 34)
   (SELF = #<SCHEMATIC-VIEW Schematic View 1 21014732 exposed>)
   Rest arg (.DAEMON-CALLER-ARGS.): (NIL 0 0 0 100 7 NIL)

(:METHOD TV:GRAPHICS-MIXIN :DRAW-LINES):  (P.C. = 46)
   (SELF = #<SCHEMATIC-VIEW Schematic View 1 21014732 exposed>)
   Arg 0 (OPERATION): :DRAW-LINES
   Arg 1 (ALU): 7
   Arg 2 (X1): 0
   Arg 3 (Y1): 0
   Rest arg (END-XS-AND-YS): (100 100)

SEND:  (P.C. = 22)
   Arg 0 (OBJECT): #<SCHEMATIC-VIEW Schematic View 1 21014732 exposed>
   Arg 1 (MESSAGE-NAME): :DRAW-LINES
   Rest arg (ARGUMENTS): (7 0 0 0 100 100 100)

SI:*EVAL:  (P.C. = 653)
   Arg 0 (FORM): (SEND S (QUOTE :DRAW-LINES) 7 0 0 0 100 100 100)

SI:LISP-TOP-LEVEL1:  (P.C. = 210)
   Arg 0 (TERMINAL-IO): #<SCHEMA-INTERACTION-PANE Schema Interaction Pane 1 21014371 exposed>

SI:PROCESS-TOP-LEVEL:  (P.C. = 125)
   --Defaulted args:--
   Arg 0 (IGNORE): NIL


SCALING-MIXIN:

(defmacro window-x (scaled-window-x)
  `(+ (fixr (* window-scale ,scaled-window-x 0.1s0))
      window-center-x))

(defmacro window-y (scaled-window-y)
  `(- window-center-y
      (fixr (* window-scale ,scaled-window-y 0.1s0))))

(defmacro window-scale (scalar)
  `(fixr (* window-scale ,scalar 0.1)))

(defmacro scaled-window-x (window-x)
  `(fixr (// (* 10 (- ,window-x window-center-x))
	     window-scale)))

(defmacro scaled-window-y (window-y)
  `(fixr (// (* 10 (- window-center-y ,window-y))
	     window-scale)))

(defflavor scaling-mixin (window-center-x
			  window-center-y
			  window-scale)
	   ()
  (:included-flavors tv:essential-window))

(defmethod (scaling-mixin :after :expose) (&rest ignore)
  (or (and (variable-boundp window-scale) (numberp window-scale))
      (setq window-scale 10.0s0))
  (or (and (variable-boundp window-center-x) (numberp window-center-x))
      (setq window-center-x (// tv:width 2)))
  (or (and (variable-boundp window-center-y) (numberp window-center-y))
      (setq window-center-y (// tv:height 2))))

(defwhopper (scaling-mixin :draw-point) (x y &rest rest)
  (lexpr-continue-whopper (window-x x) (window-y y) rest))

(defwhopper (scaling-mixin :draw-line) (x1 y1 x2 y2 &rest rest)
  (lexpr-continue-whopper (window-x x1) (window-y y1)
			  (window-x x2) (window-y y2) rest))

21-Mar-83 03:06:33-EST,394;000000000000
Return-path: <RZ@MIT-MC>
Date: Monday, 21 March 1983, 03:05-EST
From: Richard E. Zippel <RZ at MIT-MC>
Subject: previous whopper bug
To: BUG-LISPM at OZ

In Release 4.0, System 222.186, Hardcopy 11.14, Zmail 74.43,
site configuration 18, on Lisp Machine Sixteen:

I copied the definition of :draw-lines tv:graphics-mixin into 
(:method scaling-mixin :draw-lines) and it worked fine.
21-Mar-83 03:10:33-EST,1867;000000000000
Return-path: <JGB@MIT-OZ>
Date: Monday, 21 March 1983, 03:07-EST
From: Jonathan G. Bliss <JGB@MIT-OZ>
To: BUG-lispm@MIT-OZ

In Remote-File 22.0, LMFILE-Remote 23.1, MIT-Specific 16.0, System 91.43,
ZMail 48.7, microcode 204, Rev Video, on Lisp Machine Twenty-five:

This is less a bug report and more a question.

- I created a 64x64x8 art-half-fix array
	(setq foo-3d (make-array (list 64 64 8) ':type 'art-half-fix))

- Then, eight indirect half-fix arrays displaced to the 3d array
	(setq foo-n (make-array (list 64 64) ':type 'art-half-fix
		':displaced-to foo-3d ':displaced-index-offset (* 64 64 n) )) ;  (n = 0->7)

- Then made an indirect 8-bit array, displaced to one of the 2d-arrays
	(setq foo-7-8b (make-array (list 128 64) ':type 'art-8b
		':displaced-to foo-7))

- When I examined foo-7-8b, which I figured would contain alternating low and high
	8 bits of the half-fix array foo-7, imagine my surprise when I found myself
	looking at data from foo-3 and foo-4 !

- I more-or-less understand that the :displaced-index-offset is in units of
	the element type of the indirect array, rather than the element type of the
	array being indirected  to (indirectee ?); thus this gives the same (wrong)
	result as above :
	(setq foo-7-8b (make-array (list 64 64) ':type 'art-8b
		':displaced-to foo-3d ':displaced-index-offset (* 64 64 7)

	whereas this gives the desired result :
	(setq foo-7-8b (make-array (list 64 64) ':type 'art-8b
		':displaced-to foo-3d ':displaced-index-offset (* 128 64 7) ))


- My question is, is this the way it was intended ? Will you lose any sleep knowing that
	one can ask for ':displaced-to foo-7   and get ':displaced-to foo-3 ??
	Or is this what I get for making indirect arrays of different types, even
	though the manual says I shouldn't ?...



					Thanks in advance - Jon Bliss21-Mar-83 04:05:55-EST,841;000000000000
Return-path: <kbe@MIT-OZ>
Date: Monday, 21 March 1983, 04:03-EST
From: Apprentice for KMP <kbe@MIT-OZ>
Subject: Extended Search Characters: It's all Greek to me
To: BUG-LISPM@MIT-OZ

In Release 4.1, System 222.186, Hardcopy 11.14, Zmail 74.43, LMFS 30.26,
Knowledge-Based-Editor 154.0, site configuration 19, Vanilla, on Lisp Machine Twenty-two:

When I do c-X c-B and it shows me info about a *Tags-Search-N* buffer
which had something like FOO<OR>BAR in the search string, this comes out
as FOOBAR in the buffer listing (presumably because that listing ignores
font info).

Also, when I select the *Tags-Search-N* buffer, it comes out as  also.
It seems to me like in at least the case of the Tags Search buffer, it
could come out as <OR> since Font 1 in that buffer could be the peculiar
extended search chars font.

21-Mar-83 04:10:42-EST,717;000000000000
Return-path: <MOON@SCRC-TENEX>
Date: Monday, 21 March 1983  04:12-EST
From: MOON at SCRC-TENEX
To:   Jonathan G. Bliss <JGB at MIT-OZ>
Cc:   BUG-lispm at MIT-OZ
Subject: Indirect arrays of mixed types with index offsets
In-reply-to: The message of 21 Mar 1983 03:07-EST from Jonathan G. Bliss <JGB@MIT-OZ>

    Date: Monday, 21 March 1983, 03:07-EST
    From: Jonathan G. Bliss <JGB@MIT-OZ>

    Or is this what I get for making indirect arrays of different types, even
    though the manual says I shouldn't ?...

Yes.  It ought to work in the "obviously right" way, but it doesn't
currently and it is complicated to fix.  Your message indicates that you
managed to figure out how to get around it.
21-Mar-83 09:41:52-EST,3225;000000000000
Return-path: <MOON@SCRC-TENEX>
Date: Monday, 21 March 1983  04:39-EST
From: MOON at SCRC-TENEX
To:   Kent M. Pitman <kmp at MIT-MC>
Cc:   BUG-LISPM at OZ, USER-INTERFACE at SCRC
Subject: More comments on NES
In-reply-to: The message of 18 Mar 1983 16:20-EST from Kent M. Pitman <kmp at MIT-MC>

I'm including the whole of your message since I think it probably never
got to BUG-LISPM.  Mailing things through OZ seems to be a good way to lose
them lately.  My apologies to people on User-Interface for the verbosity.

    Date: Friday, 18 March 1983, 16:20-EST
    From: Kent M. Pitman <kmp at MIT-MC>
    Subject: More comments on NES
    To: BUG-LISPM at OZ
    Cc: USER-INTERFACE at SCRC

    In Symbolics Release 4.1, System 222.171, ...

    My model as a user has always been that typing c-Abort from a point in 
    a program which is epsilon before an error is the same as typing Abort
    from an error handler that comes from that error. As I try to write code,
    however, I note it is possible to violate that model in some pretty 
    strange ways which I am uncomfortable with. Things like the following
    seem to occur a lot...

      (list 'foo
    	(catch-error-restart (sys:abort "Foo")
    	  (list 'bar
    		(condition-case () (eval (read))
    		  (sys:abort "Bar")))))

    I note that typing c-Abort while in the (EVAL (READ)) will return to the "Bar"
    point, but typing Abort to the debugger will (as interactively documented by
    handler, and the result will be (FOO (BAR "Bar")). On the other hand, if I
    enter the debugger, typing Abort will return to "Foo" giving (FOO NIL) as
    a result.

    I would like it if the error handler would make "Bar" be visible as a
    return point if the (EVAL (READ)) errs.
Unfortunately it can't since it has no associated documentation.

    I also think I would like to be able to see all SYS:ABORT tags
    on the stack when inside an error handler as just about any of
    them might be useful. There may be a reason why this is a bad
    idea.
This may be a good idea, or it may simply clutter up the debugger's menu of
restart commands unnecessarily.  (Currently the debugger shows only the
innermost abort-handling restart, in addition to all restarts that are
interesting for the current condition.)  This applies to restart handlers
only, since they are the only kind with documentation.

    I haven't looked in detail at the MIT software for handling this. I know
    they differ in how they deal with proceed types, etc. Maybe they differ
    in what restart points mean.

    In any case, I wish someone would give more thought and try to come up with
    a more coherent model of what SYS:ABORT means.
Not a bad idea, although I think the answer is that you shouldn't set up any
kind of handler other than a restart handler for ABORT or you will break the
user interface.  Too bad the documentation equivocates and doesn't come right
out and say this.  Incidentally, ABORT is not a DEBUGGER-CONDITION, so the
c-Abort key goes straight to the restarts without first running the debugger;
thus there is little advantage to using CONDITION-CASE rather than ERROR-RESTART.
21-Mar-83 09:45:08-EST,2801;000000000000
Return-path: <CAL@MIT-OZ>
Date: Monday, 21 March 1983, 06:18-EST
From: Cliff Lasser <CAL@MIT-OZ>
To: BUG-LISPM@MIT-OZ

In MIT-Specific 18.1, System 93.30, ZMail 49.10, microcode 226,
Yow!  Winning away!, on Lisp Machine Eight:


Insert your description of the circumstances here:

I'm not sure what I did, I was typing ahead at the minibuffer.
>>TRAP 10072 (ARGTYP ARRAY M-A NIL GAHDR)
Some argument to SYS:%DRAW-RECTANGLE, NIL, was of the wrong type.
The function expected an array.
Backtrace from the debugger:

TV:%DRAW-RECTANGLE-CLIPPED (P.C. = 77)

 Arg 0 (WIDTH): 11
 Arg 1 (HEIGHT): 14
 Arg 2 (X-BITPOS): 454
 Arg 3 (Y-BITPOS): 2
 Arg 4 (ALU-FUNCTION): 6
 Arg 5 (SHEET): #<ZWEI-MINI-BUFFER Zwei Mini Buffer 1 15415131 deexposed>


Additional information supplied with call:
 Expecting 3 values

(METHOD TV:RECTANGULAR-BLINKER BLINK) (P.C. = 103)
  (SELF is #<RECTANGULAR-BLINKER 15441261>)

 Arg 0 (OPERATION): BLINK


(METHOD TV:RECTANGULAR-BLINKER COMBINED BLINK) (P.C. = 100)
  (SELF is #<RECTANGULAR-BLINKER 15441261>)

 Rest arg (.DAEMON-CALLER-ARGS.): (BLINK)
Local 1 (.DAEMON-MAPPING-TABLE.): #<ART-16B-15 4501103>
Local 2 (.VAL1.): NIL
Local 3 (.VAL2.): NIL
Local 4 (.VAL3.): NIL


ZWEI:INCREMENTAL-SEARCH (P.C. = 463)

 Arg 0 (REVERSE-P): NIL
Local 0 (ORIG-PT): ("MAC" 0)
Local 1 (OLD-SELECTED-WINDOW): #<ZMACS-FRAME Zmacs Frame 1 15400510 exposed>
Local 2 (OLD-SUBSTITUTE): #<TYPEIN-WINDOW Typein Window 1 15415053 exposed>
Local 3 (CHAR): NIL
Local 4 (REAL-CHAR): NIL
Local 5 (XCHAR): NIL
Local 6 (MUST-REDIS): T
Local 7 (P): 0
Local 8 (P1): 0
Local 9 (SUPPRESSED-REDISPLAY): T
Local 10 (BP1): NIL
Local 11 (NEW-BP): NIL
Local 12 (TIME-OUT): NIL
Local 13 (INPUT-DONE): NIL
Local 14 (NEW-REVERSE-P): NIL
Local 15 (STRING): NIL
Local 16 (NEW-CH): NIL
Local 17 (P): NIL
Local 18 (IDX): NIL
Local 19 (P0): NIL


ZWEI:COM-INCREMENTAL-SEARCH (P.C. = 31)



Remainder of stack:

ZWEI:COMMAND-EXECUTE (P.C. = 100)
ZWEI:PROCESS-COMMAND-CHAR (P.C. = 67)
(METHOD ZWEI:WINDOW EDIT) (P.C. = 465)
(INTERNAL (METHOD ZWEI:ZWEI-WITHOUT-TYPEOUT COMBINED EDIT) 0) (P.C. = 63)
FUNCALL (P.C. = 25)
(METHOD ZWEI:DISPLAYER AROUND EDIT) (P.C. = 31)
(METHOD ZWEI:ZWEI-WITHOUT-TYPEOUT COMBINED EDIT) (P.C. = 47)
ZWEI:EDIT-IN-MINI-BUFFER (P.C. = 345)
ZWEI:COMPLETING-READ-FROM-MINI-BUFFER (P.C. = 101)
ZWEI:READ-BUFFER-NAME (P.C. = 134)
...
ZWEI:COMMAND-EXECUTE (P.C. = 100)
ZWEI:PROCESS-COMMAND-CHAR (P.C. = 67)
(METHOD ZWEI:WINDOW EDIT) (P.C. = 465)
(INTERNAL (METHOD ZWEI:ZMACS-WINDOW COMBINED EDIT) 0) (P.C. = 74)
FUNCALL (P.C. = 25)
(METHOD ZWEI:DISPLAYER AROUND EDIT) (P.C. = 31)
(METHOD ZWEI:ZMACS-WINDOW COMBINED EDIT) (P.C. = 47)
ZWEI:ZMACS-WINDOW-TOP-LEVEL (P.C. = 46)
SI:PROCESS-TOP-LEVEL (P.C. = 121)
21-Mar-83 09:45:41-EST,186;000000000000
Return-path: <CAL@MIT-OZ>
Date: Monday, 21 March 1983, 06:20-EST
From: Cliff Lasser <CAL@MIT-OZ>
To: bug-lispm@MIT-OZ

Please disregard that last message, it is completely my fault.21-Mar-83 12:38:38-EST,1114;000000000000
Return-path: <dove@MIT-DSPG>
Date: Monday, 21 March 1983, 12:27-EST
From: Webster Dove <dove at MIT-DSPG>
To: BUG-LISPM at MIT-OZ

In MIT-Specific 18.1, System 93.29, ZMail 49.9, microcode 226, gc@2,
on Ford Prefect:

In this system, there is an unfortunate subtlety regarding the naming of
generic unix files.

If I attempt to (load "arith") where arith.qf exists, (load) never tries
for it because the type of the file "arith" is :unspecified rather than
nil.  On the other hand, (load "arith.'") does load the qf file because
the type of "arith.'" is nil so (load) defaults properly.

This behavior is a combination of the fact that load only defaults if
the file type is nil and the fact that a unix file of the form "foo" is
:unspecific rather than nil type.  It appears that the symbolics system
loops through several file types in (load) irrespective of the presence
or absence of a type in the requested file.

I would prefer if the mit system would allow me to type (load "arith")
and get the qf file or l file loaded.  I don't think having to type
(load "arith.'") is good design.21-Mar-83 12:56:39-EST,1000;000000000000
Return-path: <dlw@SCRC-TENEX>
Date: Monday, 21 March 1983, 12:51-EST
From: Daniel L. Weinreb <dlw at SCRC-TENEX>
Subject: get-site-option suggestion
To: SR.CYPHER at MIT-SPEECH, BUG-LISPM at MIT-OZ
In-reply-to: The message of 18 Mar 83 15:50-EST from D. Scott Cyphers <SR.CYPHER at MIT-SPEECH>

The point is that si:get-site-option is intended to return
"site-specific information".  So it gets called at site-configuration
time.  Since a band gets site-configured once, then copied around, site
configuration cannot depend on which machine the band is running on.
Indeed, some information is even more specific than site-specific;
it MUST be determined at run-time, not site-configuration time.  So
si:get-site-option is not the appropriate way to get at machine-specific
information.  It's only for site options, not individual machine options.
si:get-site-option should support this philosophical distinction in
order to prevent bugs in which bands end up being machine-specific.
21-Mar-83 13:11:26-EST,1171;000000000000
Return-path: <dlw@SCRC-TENEX>
Date: Monday, 21 March 1983, 12:56-EST
From: Daniel L. Weinreb <dlw at SCRC-TENEX>
Subject: More comments on NES
To: kmp at MIT-MC, BUG-LISPM at MIT-OZ
Cc: USER-INTERFACE at SCRC-TENEX
In-reply-to: The message of 18 Mar 83 16:20-EST from Kent M. Pitman <kmp at MIT-MC>

    Date: Friday, 18 March 1983, 16:20-EST
    From: Kent M. Pitman <kmp at MIT-MC>

    I note that typing c-Abort while in the (EVAL (READ)) will return to the "Bar"
    point, but typing Abort to the debugger will (as interactively documented by
    handler, and the result will be (FOO (BAR "Bar")). On the other hand, if I
    enter the debugger, typing Abort will return to "Foo" giving (FOO NIL) as
    a result.

This is not a bug.  As the documentation says, the Abort key typed at the
debugger goes to the innermost restart handler that handles sys:abort.  It
does not signal sys:abort.

    I would like it if the error handler would make "Bar" be visible as a
    return point if the (EVAL (READ)) errs.

That's not what condition-bind handlers are for.  They're for programs
to handle errors.  They're not meant to be user options.
21-Mar-83 13:51:23-EST,1308;000000000000
Return-path: <rsl@SPA-NIMBUS>
Date: Monday, 21 March 1983, 10:44-PST
From: Richard Lamson <rsl at SPA-Nimbus>
Subject: host dies while reading a file
To: Margolin at MIT-Multics, BUG-LISPM at OZ
In-reply-to: The message of 19 Mar 83 13:50-PST from Margolin at MIT-Multics

    Date: Saturday, 19 March 1983, 16:50-EST
    From: Margolin at MIT-Multics
    In Release 4.0, System 222.186, Zmail 74.43, Experimental Macsyma 6.13,
    site configuration 12, on Zarniwoop:

    Unfortunately for me, my primary host has an unreliable Chaosnet NCP,
    causing it to reinitialize frequently, losing any connections.  This
    often happens while a file os being read or loaded, and my only option
    when it recovers is to start loading from the beginning again.  Since
    the FILE protocol does include a POSITION operation, it would be nice if
    the Lisp Machine recorded its position while reading, and offered a
    restart type that tries to continue from where it was.
One problem with this might be that POSITION is not entirely reliable.
Consider the case where you're reading files from an ITS.  The reason
file character counts on ITS are not exact is because ITS uses two
characters (<CR><LF>) to stand for a single LispM (and therefore FILE
protocol) character (<Return>).
21-Mar-83 14:33:55-EST,1791;000000000000
Return-path: <BSG@SCRC-TENEX>
Date: Monday, 21 March 1983, 14:26-EST
From: Bernard S. Greenberg <BSG at SCRC-TENEX>
Subject: host dies while reading a file
To: rsl at SPA-Nimbus, Margolin at MIT-Multics, BUG-LISPM at MIT-OZ
In-reply-to: The message of 21 Mar 83 13:44-EST from Richard Lamson <rsl at SPA-Nimbus>

    Date: Monday, 21 March 1983, 10:44-PST
    From: Richard Lamson <rsl at SPA-Nimbus>
	Date: Saturday, 19 March 1983, 16:50-EST
	From: Margolin at MIT-Multics
	In Release 4.0, System 222.186, Zmail 74.43, Experimental Macsyma 6.13,
	site configuration 12, on Zarniwoop:

	Unfortunately for me, my primary host has an unreliable Chaosnet NCP,
	causing it to reinitialize frequently, losing any connections.  This
	often happens while a file os being read or loaded, and my only option
	when it recovers is to start loading from the beginning again.  Since
	the FILE protocol does include a POSITION operation, it would be nice if
	the Lisp Machine recorded its position while reading, and offered a
	restart type that tries to continue from where it was.
    One problem with this might be that POSITION is not entirely reliable.
    Consider the case where you're reading files from an ITS.  The reason
    file character counts on ITS are not exact is because ITS uses two
    characters (<CR><LF>) to stand for a single LispM (and therefore FILE
    protocol) character (<Return>).
POSITION is reliable for binary files, however.  POSITION could also be useful
if some data read from the host contains numeric pointers to file positions
on that host.  There is not, however, as you point out, sufficient mechanism
in the current file protocol to assign meaning to reading the current position
on the Lisp machine side, and re-establishing it.
21-Mar-83 17:36:56-EST,559;000000000000
Return-path: <MMcM@SCRC-TENEX>
Date: Monday, 21 March 1983, 17:26-EST
From: Mike McMahon <MMcM at SCRC-TENEX>
Subject: (login-forms (deff ...))
To: Margolin at MIT-Multics
Cc: BUG-LISPM at MIT-OZ
In-reply-to: The message of 19 Mar 83 17:02-EST from Margolin at MIT-Multics

    Date: Saturday, 19 March 1983, 17:02-EST
    From: Margolin at MIT-Multics
    Why doesn't DEFF have a :UNDO-FUNCTION property?
FDEFINE does.  Probably for the same reason DEFCONST doesn't but SETQ does.
I'm not sure what the style one uses is supposed to be, though.
21-Mar-83 17:51:36-EST,1976;000000000000
Return-path: <SR.CYPHER@MIT-SPEECH>
Date: Monday, 21 March 1983, 17:50-EST
From: D. Scott Cyphers <SR.CYPHER at MIT-SPEECH>
Subject: get-site-option suggestion
To: dlw at SCRC-TENEX, SR.CYPHER at MIT-SPEECH, BUG-LISPM at MIT-OZ
In-reply-to: The message of 21 Mar 83 12:51-EST from Daniel L. Weinreb <dlw at SCRC-TENEX>

    Date: Monday, 21 March 1983, 12:51-EST
    From: Daniel L. Weinreb <dlw at SCRC-TENEX>
    Subject: get-site-option suggestion
    To: SR.CYPHER at MIT-SPEECH, BUG-LISPM at MIT-OZ
    In-reply-to: The message of 18 Mar 83 15:50-EST from D. Scott Cyphers <SR.CYPHER at MIT-SPEECH>

    The point is that si:get-site-option is intended to return
    "site-specific information".  So it gets called at site-configuration
    time.  Since a band gets site-configured once, then copied around, site
    configuration cannot depend on which machine the band is running on.
    Indeed, some information is even more specific than site-specific;
    it MUST be determined at run-time, not site-configuration time.  So
    si:get-site-option is not the appropriate way to get at machine-specific
    information.  It's only for site options, not individual machine options.
    si:get-site-option should support this philosophical distinction in
    order to prevent bugs in which bands end up being machine-specific.

Okay.  It is good that the distinction exists in philosophy.  But then
how about an si:get-machine-option for things that are not intended to
be set in stone to give si:get-site-option something to be
philosophically distinct from.  As it is, many of the site options are
more of the nature of defaults that could quite probably want to be
overridden, and should be seperated from the ones that aren't ever
allowed to change once a band has been made.  LMLOCS seems like a
reasonable place for the overrides, and perhaps another file could be
made or an addition added to the site files for machine defaults.
21-Mar-83 21:52:05-EST,1301;000000000000
Return-path: <MOON@SCRC-TENEX>
Date: Monday, 21 March 1983  21:52-EST
From: MOON at SCRC-TENEX
To:   Apprentice for KMP <kbe at MIT-OZ>
Cc:   BUG-LISPM at MIT-OZ
Subject: error handling in NES
In-reply-to: The message of 20 Mar 1983 21:36-EST from Apprentice for KMP <kbe@MIT-OZ>

The reason the debugger comes from a handler list, rather than from
a method on CONDITION, is so that one can replace the debugger wholesale.
Similarly, the searching of handler lists is done so that the user
can control how conditions are handled without changing the condition
flavors themselves.  The point is that the condition flavors belong
to one module (the one that signals the condition) while the handlers
belong to a different module (presumably a caller of the first).  In this
case I think this is not just lip-service to modularity, and it makes
a real difference to ease of use.  Does this make sense or should I try to explain
this philosophy at greater length?

There is probably some merit to your suggestion of a :DEFAULT-HANDLER method.
I think what the designers of the NES had in mind was that the default
handling of a condition is entirely up to the program that called SIGNAL,
and does not involve any flavor methods.  I can see reasons why it might
not be this simple.
21-Mar-83 21:53:31-EST,3153;000000000000
Return-path: <Hdt@MIT-OZ>
Date: Monday, 21 March 1983, 21:52-EST
From: Hdt@MIT-OZ
To: BUG-LISPM@MIT-OZ

In MIT-Specific 18.1, System 93.30, ZMail 49.10, microcode 226, So,
what do you want for $130K, on Lisp Machine Eighteen:

I had loaded the same init file I always had loaded, and it died
at 42% of may mail._zmail_txt, which I copied to
ps:<hdt>losing.zmail

All I had done was type (zmail) , click on profile, and move the
mouse a bit.

>>TRAP 1270 (SELECTED-METHOD-NOT-FOUND M-A M-C)
No method for message READ-BACKGROUND-RESPONSE-QUEUE was found in a call to #<DTP-SELECT-METHOD 25226362>.
Backtrace from the debugger:

(:METHOD ZMAIL-PROFILE-FRAME :PROCESS-SPECIAL-COMMAND) (P.C. = 25)
  (SELF is #<ZMAIL-PROFILE-FRAME Zmail Profile Frame 1 15405210 exposed>)

 Arg 0 (OPERATION): :PROCESS-SPECIAL-COMMAND
 Rest arg (ARGS): (READ-BACKGROUND-RESPONSE-QUEUE)


(:METHOD ZMAIL-COMMAND-LOOP-MIXIN :COMMAND-LOOP) (P.C. = 266)
  (SELF is #<ZMAIL-PROFILE-FRAME Zmail Profile Frame 1 15405210 exposed>)

 Arg 0 (OPERATION): :COMMAND-LOOP
Local 0 (G0626): ("Return to ZMAIL command loop.")
Local 1 (G0626): ((SYS:ABORT ERROR) ("Return to ZMAIL command loop.") T ("Return to ZMAIL command loop.") ...)
Local 2 (RESPONSE): (BACKGROUND MSGS-LOADED #<TENEX-INBOX-BUFFER "OZ:PS:<HDT>MAIL.TXT.1" 30612401> 1 ...)
Local 3 (DEGREE): NIL


Additional information supplied with call:
 SYS:ADI-FEXPR-CALL

(:INTERNAL (:METHOD ZMAIL-UTILITY-FRAME :COMBINED :COMMAND-LOOP) 0) (P.C. = 50)

 Rest arg (.DAEMON-CALLER-ARGS.): (:COMMAND-LOOP)
Local 1 (.DAEMON-MAPPING-TABLE.): #<ART-16B-6 17575103>


FUNCALL (P.C. = 25)

 Arg 0 (FN): #<DTP-FEF-POINTER (:INTERNAL (:METHOD ZMAIL-UTILITY-FRAME :COMBINED :COMMAND-LOOP) 0) 23503310>
 Rest arg (ARGS): (:COMMAND-LOOP)


(:METHOD ZMAIL-COMMAND-LOOP-MIXIN :AROUND :COMMAND-LOOP) (P.C. = 57)
  (SELF is #<ZMAIL-PROFILE-FRAME Zmail Profile Frame 1 15405210 exposed>)

 Arg 0 (OPERATION): :COMMAND-LOOP
 Arg 1 (CONT): #<DTP-FEF-POINTER (:INTERNAL (:METHOD ZMAIL-UTILITY-FRAME :COMBINED :COMMAND-LOOP) 0) 23503310>
 Arg 2 (MT): #<ART-16B-6 17575103>
 Arg 3 (ARGS): (:COMMAND-LOOP)
   --Defaulted args:--
 Arg 4 (EDITOR-CLOSURE-1): NIL
 Rest arg (IGNORE): NIL
Local 1 (G0609): (UNKNOWN-SPECIAL-COMMAND ZMAIL-COMMAND-LOOP-UNKNOWN-SPECIAL-COMMAND)
Local 2 (G0610): ((UNKNOWN-SPECIAL-COMMAND ZMAIL-COMMAND-LOOP-UNKNOWN-SPECIAL-COMMAND) (UNKNOWN-SPECIAL-COMMAND ZMAIL-COMMAND-LOOP-UNKNOWN-SPECIAL-COMMAND))


Remainder of stack:

(:METHOD ZMAIL-UTILITY-FRAME :COMBINED :COMMAND-LOOP) (P.C. = 47)
COM-ZMAIL-PROFILE (P.C. = 243)
COMMAND-EXECUTE (P.C. = 100)
ZMAIL-COMMAND-EXECUTE (P.C. = 27)
(:SELECT-METHOD ZMAIL-COMMAND-LIST :MENU) (P.C. = 32)
(:METHOD ZMAIL-FRAME :PROCESS-SPECIAL-COMMAND) (P.C. = 25)
(:METHOD ZMAIL-COMMAND-LOOP-MIXIN :COMMAND-LOOP) (P.C. = 266)
(:INTERNAL (:METHOD ZMAIL-FRAME :COMBINED :COMMAND-LOOP) 0) (P.C. = 50)
FUNCALL (P.C. = 25)
(:METHOD ZMAIL-COMMAND-LOOP-MIXIN :AROUND :COMMAND-LOOP) (P.C. = 57)
(:METHOD ZMAIL-FRAME :COMBINED :COMMAND-LOOP) (P.C. = 47)
ZMAIL-PROCESS-TOP-LEVEL (P.C. = 115)
SI:PROCESS-TOP-LEVEL (P.C. = 121)
21-Mar-83 22:05:29-EST,160;000000000000
Return-path: <Hdt@MIT-OZ>
Date: Monday, 21 March 1983, 22:04-EST
From: Hdt@MIT-OZ
To: Bug-LispM@MIT-OZ

Sorry, I meant bug-zmail on the previous message...21-Mar-83 22:49:49-EST,3642;000000000000
Return-path: <Hdt@MIT-OZ>
Date: Monday, 21 March 1983, 22:43-EST
From: Hdt@MIT-OZ
To: BUG-LISPM@MIT-OZ

In MIT-Specific 18.1, System 93.30, ZMail 49.10, microcode 226, So,
what do you want for $130K, on Lisp Machine Eighteen:

Spline demo.  I fogot if this was the same thing that pgs
reported.

>>TRAP 5468. (ARGTYP NUMBER PP 0. QIMUL)
The first argument to *, NIL, was of the wrong type.
The function expected a number.
Backtrace from the debugger:

Additional information supplied with call:
 Expecting 3 values

TV:SPLINE (P.C. = 245)

 Arg 0 (PX): #<ART-Q-100. 30614252>
 Arg 1 (PY): #<ART-Q-100. 30614422>
 Arg 2 (Z): 20.
 Arg 3 (CX): NIL
 Arg 4 (CY): NIL
 Arg 5 (C1): CYCLIC
 Arg 6 (C2): CYCLIC
 Arg 7 (P1-PRIME-X): NIL
 Arg 8 (P1-PRIME-Y): NIL
 Arg 9 (PN-PRIME-X): NIL
 Arg 10 (PN-PRIME-Y): NIL
Local 0 (N): NIL
Local 1 (N-1): NIL
Local 2 (N-2): NIL
Local 3 (N-3): NIL
Local 4 (BX): NIL
Local 5 (BY): NIL
Local 6 (L): NIL
Local 7 (UX): NIL
Local 8 (UY): NIL
Local 9 (N1): NIL
Local 10 (N2): NIL
Local 11 (N3): NIL
Local 12 (N4): NIL
Local 13 (SIGN): NIL
Local 14 (ZUNDERFLOW): T
Local 15 (CLEN): NIL
Local 16 (J): NIL
Local 17 (G9124): NIL
Local 18 (TEM): NIL
Local 19 (S3): NIL
Local 20 (L0): NIL
Local 21 (L1): NIL
Local 22 (PX0): NIL
Local 23 (PX1): NIL
Local 24 (PX2): NIL
Local 25 (PY0): NIL
Local 26 (PY1): NIL
Local 27 (PY2): NIL
Local 28 (Q): NIL
Local 29 (I): NIL
Local 30 (N1I): NIL
Local 31 (D): NIL
Local 32 (N3J): NIL
Local 33 (UXN-2): NIL
Local 34 (UYN-2): NIL
Local 35 (N4J): NIL


(METHOD TV:GRAPHICS-MIXIN DRAW-CUBIC-SPLINE) (P.C. = 122)
  (SELF is #<WINDOW Window 4 15427354 deexposed>)

 Arg 0 (OPERATION): DRAW-CUBIC-SPLINE
 Arg 1 (PX): #<ART-Q-100. 30614252>
 Arg 2 (PY): #<ART-Q-100. 30614422>
 Arg 3 (Z): 20.
 Arg 4 (CURVE-WIDTH): 4.
 Arg 5 (ALU): 7.
 Arg 6 (C1): CYCLIC
   --Defaulted args:--
 Arg 7 (C2): CYCLIC
 Arg 8 (P1-PRIME-X): NIL
 Arg 9 (P1-PRIME-Y): NIL
 Arg 10 (PN-PRIME-X): NIL
 Arg 11 (PN-PRIME-Y): NIL
Local 0 (CX): NIL
Local 1 (CY): NIL
Local 2 (I): NIL


HACKS:SPLINES (P.C. = 260)

 Arg 0 (WINDOW): #<WINDOW Window 4 15427354 deexposed>
   --Defaulted args:--
 Arg 1 (WIDTH): 4.
 Arg 2 (ALU): 7.
 Arg 3 (PRECISION): 20.
Local 0 (BUTTONS): 4.
Local 1 (LEN): 9.
Local 2 (N): 9.
Local 3 (G4292): 9.


HACKS:SPLINES-IN-WINDOW (P.C. = 145)

Local 0 (OLD-MOUSE-SHEET): #<STANDARD-SCREEN Main Screen 15400145 exposed>
Local 1 (LEFT): 0.
Local 2 (TOP): 0.
Local 3 (RIGHT): 768.
Local 4 (BOTTOM): 939.
Local 5 (FACTOR): 10.


SI:*EVAL (P.C. = 1145)

 Arg 0 (FORM): (HACKS:SPLINES-IN-WINDOW)
Local 0 (ARGNUM): 0.
Local 1 (FCTN): #<DTP-FEF-POINTER HACKS:SPLINES-IN-WINDOW 23315763>
Local 2 (ARG-DESC): 0.
Local 3 (NUM-ARGS): 0.
Local 4 (CLOSURE-PASSED): NIL
Local 5 (LAMBDA-LIST): NIL
Local 6 (LL): NIL
Local 7 (QUOTE-STATUS): NIL
Local 8 (REST-FLAG): NIL
Local 9 (ARGL): NIL
Local 10 (ADL): NIL
Local 11 (ITEM): NIL
Local 12 (*SELECTQ-ITEM*): NIL


Remainder of stack:

HACKS:DEMO (P.C. = 141)
SI:*EVAL (P.C. = 1145)
SI:EVAL-ABORT-TRIVIAL-ERRORS (P.C. = 44)
BREAK (P.C. = 443)
TV:KBD-INTERCEPT-BREAK (P.C. = 27)
TV:KBD-DEFAULT-OUTPUT-FUNCTION (P.C. = 42)
TV:IO-BUFFER-GET (P.C. = 174)
TV:KBD-IO-BUFFER-GET (P.C. = 112)
(METHOD TV:STREAM-MIXIN ANY-TYI-NO-HANG) (P.C. = 37)
(METHOD TV:STREAM-MIXIN TYI-NO-HANG) (P.C. = 31)
HACKS:MUNCHING-TUNES (P.C. = 131)
SI:*EVAL (P.C. = 1145)
HACKS:DEMO (P.C. = 141)
HACKS:DEMO (P.C. = 112)
SI:*EVAL (P.C. = 1145)
SI:EVAL-ABORT-TRIVIAL-ERRORS (P.C. = 44)
SI:LISP-TOP-LEVEL1 (P.C. = 254)
SI:LISP-TOP-LEVEL (P.C. = 35)
21-Mar-83 23:04:49-EST,2516;000000000000
Return-path: <Hdt@MIT-OZ>
Date: Monday, 21 March 1983, 23:03-EST
From: Hdt@MIT-OZ
To: BUG-LISPM@MIT-OZ

In MIT-Specific 18.1, System 93.30, ZMail 49.10, microcode 226, So,
what do you want for $130K, on Lisp Machine Eighteen:


Insert your description of the circumstances here:

Tried to send mail from a lisp listener.
>>TRAP 7324 (TRANS-TRAP)
The variable ZWEI:*MAJOR-MODE* is unbound.
Backtrace from the debugger:

(METHOD ZWEI:INTERVAL MAJOR-MODE) (P.C. = 23)
  (SELF is #<NODE 14655473>)

 Arg 0 (OPERATION): MAJOR-MODE


ZWEI:STREAM-OUT-INTERVAL (P.C. = 111)

 Arg 0 (STREAM): #<CHARACTER-STREAM 14655544>
 Arg 1 (FROM-BP): ("sheep -> sheep" 0 NORMAL)
   --Defaulted args:--
 Arg 2 (TO-BP): ("sheep -> sheep" 14 MOVES)
 Arg 3 (IN-ORDER-P): NIL
 Arg 4 (HACK-FONTS): NIL
Local 0 (DEPTH): NIL
Local 1 (IN-STRING): NIL
Local 2 (CHECK-PARENS): NIL
Local 3 (LINE): NIL
Local 4 (EOF): NIL
Local 5 (START-INDEX): NIL
Local 6 (INT-LINE): NIL
Local 7 (INT-STREAM): NIL
Local 8 (SYNTAX): NIL
Local 9 (MINIMUM): NIL


ZWEI:OUTPUT-HEADER-AND-MSG (P.C. = 41)

 Arg 0 (STREAM): #<CHARACTER-STREAM 14655544>
 Arg 1 (PLIST): #<DTP-LOCATIVE 177532>
 Arg 2 (INTERVAL): #<NODE 14655473>
 Arg 3 (TEMPLATE): (DATE FROM SENDER REPLY-TO ...)


ZWEI:CHAOS-SEND-IT-1 (P.C. = 166)

 Arg 0 (HOST): #<TOPS20-CHAOS-HOST MIT-OZ>
 Arg 1 (RECIPIENTS): ((NAME "hdt" HOST **))
 Arg 2 (PLIST): #<DTP-LOCATIVE 177532>
 Arg 3 (INTERVAL): #<NODE 14655473>
 Arg 4 (TEMPLATE): (DATE FROM SENDER REPLY-TO ...)
Local 0 (G9703): #<CHARACTER-STREAM 14655544>
Local 1 (.FILE-ABORTED-FLAG.): ABORT
Local 2 (STREAM): #<CHARACTER-STREAM 14655544>
Local 3 (G9704): NIL
Local 4 (RCPT): "hdt@MIT-OZ"


ZWEI:CHAOS-SEND-IT (P.C. = 113)

 Arg 0 (PLIST): #<DTP-LOCATIVE 177532>
 Arg 1 (INTERVAL): #<NODE 14655473>
 Arg 2 (TEMPLATE): (DATE FROM SENDER REPLY-TO ...)
Local 0 (HOSTS): (#<TOPS20-CHAOS-HOST MIT-OZ> #<ITS-CHAOS-HOST MIT-MC> #<TOPS20-CHAOS-HOST MIT-XX> #<TOPS20-CHAOS-HOST MIT-OZ> ...)
Local 1 (RECIPIENTS): ((NAME "hdt" HOST **))
Local 2 (HOST): #<TOPS20-CHAOS-HOST MIT-OZ>
Local 3 (G0417): (#<ITS-CHAOS-HOST MIT-MC> #<TOPS20-CHAOS-HOST MIT-XX> #<TOPS20-CHAOS-HOST MIT-OZ> #<ITS-CHAOS-HOST MIT-ML> ...)
Local 4 (BLIND-RECIPIENTS): NIL
Local 5 (BLIND-TEMPLATE): NIL


Remainder of stack:

ZWEI:SEND-MESSAGE-STRING (P.C. = 61)
MAIL (P.C. = 51)
SI:*EVAL (P.C. = 1145)
SI:EVAL-ABORT-TRIVIAL-ERRORS (P.C. = 44)
SI:LISP-TOP-LEVEL1 (P.C. = 254)
SI:LISP-TOP-LEVEL (P.C. = 35)
22-Mar-83 01:08:53-EST,1935;000000000000
Return-path: <CAL@MIT-OZ>
Date: Tuesday, 22 March 1983, 01:08-EST
From: Cliff Lasser <CAL@MIT-OZ>
To: BUG-LISPM@MIT-OZ

In System 222.170, Hardcopy 11.14, Zmail 74.37, Tape 13.0, LMFS 30.19,
cold load 65, microcode TMC5-MIC 181, site configuration 14, on PI Project:

I was doing a control-meta-l in zmacs

>>Error: SELF is supposed to be an object of flavor ZWEI:ZMACS-EDITOR, however it is
actually of flavor ZWEI:EDITOR, which does not have ZWEI:ZMACS-EDITOR as a component
While in the function SI:GET-COMPONENT-FLAVOR-INFO  SI:GET-FLAVOR-MAPPING-TABLE  SI:GET-FLAVOR-MAPPING-TABLE-AND-SELF


SI:GET-COMPONENT-FLAVOR-INFO: (P.C. = 51)
 Arg 0 (FL): #<FLAVOR ZWEI:EDITOR 14045177>
 Arg 1 (COMPONENT-FLAVOR): ZWEI:ZMACS-EDITOR
 Arg 2 (DONT-CREATE): NIL
 Arg 3 (FOR-SELF): T
 Local 4 (PLIST): #<DTP-LOCATIVE 14045222>
 Local 5 (CFI): ((ZWEI:EDITOR #<Map to flavor ZWEI:EDITOR -- 11. IV's, 0. FL's 15034606>) (SI:VANILLA-FLAVOR SI:VANILLA-FLAVOR))
 Local 6 (FLAVOR-INFO): NIL


SI:GET-COMPONENT-FLAVOR-INFO:  (P.C. = 51)
   Arg 0 (FL): #<FLAVOR ZWEI:EDITOR 14045177>
   Arg 1 (COMPONENT-FLAVOR): ZWEI:ZMACS-EDITOR
   Arg 2 (DONT-CREATE): NIL
   Arg 3 (FOR-SELF): T

SI:GET-FLAVOR-MAPPING-TABLE:  (P.C. = 16)
   Arg 0 (FL): #<FLAVOR ZWEI:EDITOR 14045177>
   Arg 1 (METHOD-FLAVOR): ZWEI:ZMACS-EDITOR
   Arg 2 (FOR-SELF): T

SI:GET-FLAVOR-MAPPING-TABLE-AND-SELF:  (P.C. = 12)
   Arg 0 (FLAVOR-NAME): ZWEI:ZMACS-EDITOR

ZWEI:MAKE-BUFFER-CURRENT:  (P.C. = 4)
   Rest arg (ARGS): (#<FILE-BUFFER "UCCSYM.LISP PS:<CM.UCC> OZ:" 34664200>)

ZWEI:ROTATE-BUFFER-HISTORY:  (P.C. = 15)
   Arg 0 (N): 2

ZWEI:COM-SELECT-PREVIOUS-BUFFER:  (P.C. = 13)

ZWEI:COMMAND-EXECUTE:  (P.C. = 65)
   Arg 0 (COMMAND): ZWEI:COM-SELECT-PREVIOUS-BUFFER
   Arg 1 (CHAR): 1514
   Arg 2 (PREFIX-CHAR): NIL
   Arg 3 (HOOK-LIST): (ZWEI:SHIFT-LOCK-HOOK)

ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 20)
   Arg 0 (CH): 1514
22-Mar-83 03:01:08-EST,1045;000000000000
Return-path: <MOON@SCRC-TENEX>
Date: Tuesday, 22 March 1983  03:03-EST
From: MOON at SCRC-TENEX
To:   Cliff Lasser <CAL at MIT-OZ>
Cc:   BUG-LISPM at MIT-OZ
Subject: c-m-L blew out in Zmacs
In-reply-to: The message of 22 Mar 1983 01:08-EST from Cliff Lasser <CAL@MIT-OZ>

    Date: Tuesday, 22 March 1983, 01:08-EST
    From: Cliff Lasser <CAL@MIT-OZ>
    To: BUG-LISPM@MIT-OZ

    In System 222.170, Hardcopy 11.14, Zmail 74.37, Tape 13.0, LMFS 30.19,
    cold load 65, microcode TMC5-MIC 181, site configuration 14, on PI Project:

    I was doing a control-meta-l in zmacs

    >>Error: SELF is supposed to be an object of flavor ZWEI:ZMACS-EDITOR, however it is
    actually of flavor ZWEI:EDITOR, which does not have ZWEI:ZMACS-EDITOR as a component

In what context did you do a c-m-L?  Your backtrace isn't long enough to tell
(fixed by some patch that you hadn't loaded and may not have been copied to
Oz yet).  Were you perhaps in a recursive-edit reached by typing c-R at
Query Replace or Source Compare Merge?
22-Mar-83 03:16:07-EST,1175;000000000000
Return-path: <kmp@MIT-MC>
Date: Tuesday, 22 March 1983, 03:13-EST
From: Kent M. Pitman <kmp at MIT-MC>
Subject: :BUG-REPORTS, etc. in Release 4.0 notes
To: BUG-LISPM at OZ

In item 6.2.9 on page 99 of the Release 4.0 notes,...

Does (:BUG-REPORTS ...) really take the format 
(:BUG-REPORTS system-name doc)?  The implication of the example 
is that system-name is redundant with respect to the earlier
(:NAME ...) option. If I had to guess, I would say that probably
the syntax is (:BUG-REPORTS mailing-list-name doc).

Is ZWEI:ADD-BUG-RECIPIENT redundant with this? I couldn't tell
from the description. I don't use ZMail so I don't know how to
test this, but I figured since others who use our system might
use ZMail, it'd be nice to hook into ZWEI correctly.

Also, shouldn't ZWEI:ADD-BUG-RECIPIENT allow you to specify not
only what the name of the system you're bugging but also the mailing
list name? eg, I might have a system which wasn't named the same
as its bug report address. What shows up in whatever menu it's
talking about shouldn't necessarily be the same thing as is stuffed
after "BUG-" in the header field of the message.

--kmp
22-Mar-83 04:26:33-EST,655;000000000000
Return-path: <barmar@MIT-MULTICS>
Date: Tuesday, 22 March 1983, 04:22-EST
From: Barry Margolin <barmar at MIT-MULTICS>
Subject: Notification windows
To: BUG-LISPM@MIT-OZ

In MIT-Specific 18.1, System 93.30, ZMail 49.10, microcode 226, gc@2,
on Arthur Dent:

Notification windows don't seem to be removing themselves from the
window system and process lists properly.  I went into Peek/Active
Processes, and saw many "Notify" process listed.  I then went into
Select from the System Menu, and found many "Notification: Type any
character to flush." entries listed.  Selecting them actually ends up
selecting the process that did the notify.
22-Mar-83 15:50:22-EST,1404;000000000000
Return-path: <CAL@MIT-OZ>
Mail-From: CAL created at 22-Mar-83 15:47:54
Date: Tue, 22 Mar 1983  15:47 EST
From: Cliff Lasser <CAL@MIT-OZ>
To:   MOON@SCRC-TENEX
Cc:   BUG-LISPM@MIT-OZ
Subject: c-m-L blew out in Zmacs
In-reply-to: Msg of 22 Mar 1983  03:03-EST from MOON at SCRC-TENEX

    Date: Tuesday, 22 March 1983  03:03-EST
    From: MOON at SCRC-TENEX
    To:   Cliff Lasser <CAL>
    cc:   BUG-LISPM
    Re:   c-m-L blew out in Zmacs

        Date: Tuesday, 22 March 1983, 01:08-EST
        From: Cliff Lasser <CAL@MIT-OZ>
        To: BUG-LISPM@MIT-OZ

        In System 222.170, Hardcopy 11.14, Zmail 74.37, Tape 13.0, LMFS 30.19,
        cold load 65, microcode TMC5-MIC 181, site configuration 14, on PI Project:

        I was doing a control-meta-l in zmacs

        >>Error: SELF is supposed to be an object of flavor ZWEI:ZMACS-EDITOR, however it is
        actually of flavor ZWEI:EDITOR, which does not have ZWEI:ZMACS-EDITOR as a component

    In what context did you do a c-m-L?  Your backtrace isn't long enough to tell
    (fixed by some patch that you hadn't loaded and may not have been copied to
    Oz yet).  Were you perhaps in a recursive-edit reached by typing c-R at
    Query Replace or Source Compare Merge?

I can't remember, although I think I had been doing that (query-replace)
earlier.  I might have forgotten to exit a recursive edit.
23-Mar-83 03:37:38-EST,2091;000000000000
Return-path: <Gumby@MIT-OZ>
Date: Wednesday, 23 March 1983, 03:36-EST
From: David Vinayak Wallace <Gumby@MIT-OZ>
To: BUG-LISPM@MIT-OZ

In MIT-Specific 18.1, System 93.32, ZMail 49.11, microcode 226, gc@2,
on Lisp Machine Six:


Insert your description of the circumstances here:

I wanted to compare a buffer to the version of the file on disk.
I did M-X source compare F <return> B <return> to use the defaults
offered.

>>ERROR: Cannot coerce #FS:TOPS20-PATHNAME "OZ:PS:<HACTRN.SOURCE>COMDEF.LSP.34" into a string.
Backtrace from the debugger:

STRING-LENGTH (P.C. = 45)

 Arg 0 (STRING): #FS:TOPS20-PATHNAME "OZ:PS:<HACTRN.SOURCE>COMDEF.LSP.34"


STRING-APPEND (P.C. = 77)

 Rest arg (STRINGS): ("File" " " #FS:TOPS20-PATHNAME "OZ:PS:<HACTRN.SOURCE>COMDEF.LSP.34")
Local 1 (LENGTH): 5
Local 2 (STRING): NIL
Local 3 (COERCED): NIL
Local 4 (I): 0
Local 5 (G9357): (#FS:TOPS20-PATHNAME "OZ:PS:<HACTRN.SOURCE>COMDEF.LSP.34")
Local 6 (S): #FS:TOPS20-PATHNAME "OZ:PS:<HACTRN.SOURCE>COMDEF.LSP.34"


SRCCOM:FILE-IDENTIFIER (P.C. = 32)

 Arg 0 (FILE): #<ART-Q-144 30230176>


SRCCOM:DESCRIBE-SRCCOM-SOURCES (P.C. = 43)

 Arg 0 (FILE-1): #<ART-Q-144 30230176>
 Arg 1 (FILE-2): #<ART-Q-144 30230463>
 Arg 2 (STREAM): #<DTP-CLOSURE 26756233>


ZWEI:COM-SOURCE-COMPARE (P.C. = 122)

Local 0 (FILE-1): #<ART-Q-144 30230176>
Local 1 (FILE-2): #<ART-Q-144 30230463>
Local 2 (NAME-1): #FS:TOPS20-PATHNAME "OZ:PS:<HACTRN.SOURCE>COMDEF.LSP"
Local 3 (NAME-2): "COMDEF.LSP PS:<HACTRN.SOURCE> OZ:"
Local 4 (TYPE): "File"
Local 5 (DEFAULT): #FS:TOPS20-PATHNAME "OZ:PS:<HACTRN.SOURCE>COMDEF.LSP"


Remainder of stack:

ZWEI:COM-EXTENDED-COMMAND (P.C. = 67)
ZWEI:COMMAND-EXECUTE (P.C. = 100)
ZWEI:PROCESS-COMMAND-CHAR (P.C. = 67)
(METHOD ZWEI:WINDOW EDIT) (P.C. = 465)
(INTERNAL (METHOD ZWEI:ZMACS-WINDOW COMBINED EDIT) 0) (P.C. = 74)
FUNCALL (P.C. = 25)
(METHOD ZWEI:DISPLAYER AROUND EDIT) (P.C. = 31)
(METHOD ZWEI:ZMACS-WINDOW COMBINED EDIT) (P.C. = 47)
ZWEI:ZMACS-WINDOW-TOP-LEVEL (P.C. = 46)
SI:PROCESS-TOP-LEVEL (P.C. = 121)
23-Mar-83 08:21:11-EST,1064;000000000000
Return-path: <Zvona@MIT-OZ>
Date: Wednesday, 23 March 1983, 08:18-EST
From: David Chapman <Zvona@MIT-OZ>
Subject: defsystem question
To: BUG-lispm@MIT-OZ

In Release 4.1, System 222.186, Hardcopy 11.14, Zmail 74.43, LMFS 30.26,
site configuration 19, on Lisp Machine Six:

I'd expected the semantics of the defsystem :package :module option to
be ``force this module to load into package FOO: regardless of what it
wants to be loaded into and regardless of any top-level :package
option''.  Instead, it only does the second of the two conjuncts.  That
is, if BLETCH was compiled in FOO, then 

(DEFSYSTEM GLEEB
  (:module bletch "bletch" (:package BAR))
  (:compile-load bletch))

will end up loading BLETCH into FOO, not BAR.  Is there a way to get the
functionality of the first conjunct?  A top-level :package option is not
good enough: I might want to let some files load into the package of
their choice.  [As a second order kludge, I guess you could let
(:package nil) mean load into the package of your choice.  But that is
gross.]
23-Mar-83 12:52:30-EST,629;000000000000
Return-path: <MMcM@SCRC-TENEX>
Date: Wednesday, 23 March 1983, 12:45-EST
From: Mike McMahon <MMcM at SCRC-TENEX>
Subject: defsystem question
To: Zvona at MIT-OZ
Cc: BUG-lispm at MIT-OZ
In-reply-to: The message of 23 Mar 83 08:18-EST from David Chapman <Zvona at MIT-OZ>

    Date: Wednesday, 23 March 1983, 08:18-EST
    From: David Chapman <Zvona@MIT-OZ>
    (DEFSYSTEM GLEEB
      (:module bletch "bletch" (:package BAR))
      (:compile-load bletch))
The manual is as usual vague enough that you wouldn't guess that you want
(DEFSYSTEM GLEEB
  (:module bletch "bletch" :package BAR)
  (:compile-load bletch))
23-Mar-83 13:03:05-EST,862;000000000000
Return-path: <dsh@MIT-ML>
Date: Wednesday, 23 March 1983, 12:55-EST
From: David S. Hsu <dsh at MIT-ML>
Subject: Gnats
To: BUG-LISPM at OZ

In System 222.170, Hardcopy 11.14, Zmail 74.37, Tape 13.0, LMFS 30.19,
cold load 65, microcode TMC5-MIC 181, site configuration 14, on PI Project:

Two minor but very annoying bugs:
     
    1.  When I cold booted the machine, an extra cursor mysteriously appeared when "C" memory was being
        loaded.  It didn't go away when I warm booted, or when I cold booted again. I tried to clear the
        the screen and rubbing it out.  It is still here.  (I didn't know how distracting two blinkers 
        could be...)
 
    2.  The perimeter of our screen is very much out of focus (the center is still sharp); no adjust-
        ments of the two wheels on the bottom of the console help.

Dave Hsu
23-Mar-83 17:54:55-EST,273;000000000000
Return-path: <Zvona@MIT-OZ>
Date: Wednesday, 23 March 1983, 17:19-EST
From: David Chapman <Zvona at MIT-OZ>
To: bug-send at MIT-OZ, bug-lispm at MIT-OZ

Brand S.

I get annonymous sends from oz from time to time.  Null message, it just says ``message
from @OZ:''.
23-Mar-83 17:55:56-EST,621;000000000000
Return-path: <dlw@SCRC-TENEX>
Date: Wednesday, 23 March 1983, 17:42-EST
From: Daniel L. Weinreb <dlw at SCRC-TENEX>
Subject: no values declared
To: Zvona at MIT-OZ, BUG-lispm at MIT-OZ
In-reply-to: The message of 19 Mar 83 14:24-EST from David Chapman <Zvona at MIT-OZ>

    Date: Saturday, 19 March 1983, 14:24-EST
    From: David Chapman <Zvona@MIT-OZ>
    In Release 4.1, System 222.186, Hardcopy 11.14, Zmail 74.43, LMFS 30.26,
    site configuration 19, on Lisp Machine Two:

    No values list is declared for intern and friends.
This appears to have already been fixed in the source.  Thanks anyway.
23-Mar-83 20:26:02-EST,3068;000000000000
Return-path: <Batali@MIT-OZ>
Date: Wednesday, 23 March 1983, 20:14-EST
From: John Batali <Batali@MIT-OZ>
To: BUG-LISPM@MIT-OZ

In MIT-Specific 18.1, System 93.32, ZMail 49.11, microcode 226,
Yow!  Winning away!, on Lisp Machine Eight:


Insert your description of the circumstances here:
I typed 15.. to a lisp listener.
At least the error message could be better.

>>TRAP 7521 (SUBSCRIPT-OOB M-Q M-S (NIL XAREF-RECHECK-INDEX) M-A)
The subscript 4 for "15.." was out of range in AR-1.
Backtrace from the debugger:

SI:XR-READ-FIXNUM-INTERNAL (P.C. = 107)

 Arg 0 (STRING): "15.."
 Arg 1 (II): 4
 Arg 2 (LEN): 4
   --Defaulted args:--
 Arg 3 (IBS): 10
Local 0 (SIGN): 1
Local 1 (NUM): 0
Local 2 (CH): NIL
Local 3 (SECONDVAL): 4
Local 4 (I): NIL


Additional information supplied with call:
 Expecting 2 values

SI:XR-READ-FIXNUM (P.C. = 101)

 Arg 0 (STREAM): SI:TERMINAL-IO-SYN-STREAM
 Arg 1 (STRING): "15.."
Local 0 (NUM): 17
Local 1 (LEN): 4
Local 2 (I): 3
Local 3 (NUM2): NIL


Additional information supplied with call:
 Expecting 2 values

SI:XR-READ-THING (P.C. = 326)

 Arg 0 (STREAM): SI:TERMINAL-IO-SYN-STREAM
Local 0 (CH): 40
Local 1 (NUM): 2
Local 2 (A): NIL
Local 3 (B): NIL
Local 4 (STRING): "15.."
Local 5 (INDEX): 4
Local 6 (STLEN): 100
Local 7 (REAL-CH): 40
Local 8 (READTABLE-FSM): #<ART-Q-75-26 1201125>
Local 9 (FNPROP): SI:STANDARD-READ-FUNCTION
Local 10 (STATE): (SI:UNTYI-FUNCTION . FIXNUM)
Local 11 (FLAG): SI:UNTYI-FUNCTION
Local 12 (TODO): FIXNUM


Additional information supplied with call:
 SYS:ADI-FEXPR-CALL

READ-FOR-TOP-LEVEL (P.C. = 150)

 Rest arg (READ-ARGS): NIL
Local 1 (W-O): (ACTIVATE ACTIVE-P ADD-ASYNCHRONOUS-CHARACTER ALIAS-FOR-INFERIORS ...)
Local 2 (READ-CHECK-INDENTATION): NIL
Local 3 (STREAM): SI:TERMINAL-IO-SYN-STREAM
Local 4 (EOF-OPTION): SI:NO-EOF-OPTION
Local 5 (THING): NIL
Local 6 (TYPE): NIL
Local 7 (SPLICEP): NIL


(METHOD TV:STREAM-MIXIN RUBOUT-HANDLER) (P.C. = 365)
  (SELF is #<EDITOR-TYPEOUT-WINDOW Editor Typeout Window 7 15427135 exposed>)

 Arg 0 (OPERATION): RUBOUT-HANDLER
 Arg 1 (RUBOUT-HANDLER-OPTIONS): ((FULL-RUBOUT FULL-RUBOUT))
 Arg 2 (FUNCTION): #<DTP-FEF-POINTER READ-FOR-TOP-LEVEL 1551607>
 Rest arg (ARGS): NIL
Local 1 (II): NIL
Local 2 (PROMPT-OPTION): NIL
Local 3 (G8603): (SYS:READ-ERROR SI:CONDITION-CASE-THROW TV:G8602)
Local 4 (G8604): ((SYS:READ-ERROR SI:CONDITION-CASE-THROW TV:G8602))
Local 5 (ERROR): NIL
Local 6 (*SELECTQ-ITEM*): NIL
Local 7 (FULL-RUBOUT-OPTION): NIL


Remainder of stack:

(METHOD TV:TYPEOUT-WINDOW COMBINED RUBOUT-HANDLER) (P.C. = 52)
BREAK (P.C. = 404)
ZWEI:COM-BREAK (P.C. = 46)
ZWEI:COMMAND-EXECUTE (P.C. = 100)
ZWEI:PROCESS-COMMAND-CHAR (P.C. = 67)
(METHOD ZWEI:WINDOW EDIT) (P.C. = 465)
(INTERNAL (METHOD ZWEI:ZMACS-WINDOW COMBINED EDIT) 0) (P.C. = 74)
FUNCALL (P.C. = 25)
(METHOD ZWEI:DISPLAYER AROUND EDIT) (P.C. = 31)
(METHOD ZWEI:ZMACS-WINDOW COMBINED EDIT) (P.C. = 47)
ZWEI:ZMACS-WINDOW-TOP-LEVEL (P.C. = 46)
SI:PROCESS-TOP-LEVEL (P.C. = 121)
23-Mar-83 20:49:09-EST,305;000000000000
Return-path: <Batali@MIT-OZ>
Date: Wednesday, 23 March 1983, 20:44-EST
From: John Batali <Batali at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In MIT-Specific 18.1, System 93.32, ZMail 49.11, microcode 226,
Yow!  Winning away!, on Lisp Machine Eight:

Why don't zwei breakpoints keep the base set correctly?24-Mar-83 00:11:35-EST,3453;000000000000
Return-path: <CAL@MIT-OZ>
Date: Thursday, 24 March 1983, 00:07-EST
From: Cliff Lasser <CAL@MIT-OZ>
To: BUG-LISPM@MIT-OZ

In MIT-Specific 18.1, System 93.32, ZMail 49.11, microcode 226,
Yow!  Winning away!, on Lisp Machine Eight:


Insert your description of the circumstances here: The first time this
happened I was moving a piece of mail.  Just wanting to save away my
files, I conned zmail into forgetting about it.  I then tried selecting
the mail file (oz:src:<cal.mail>gen.txt) and it happended again.

>>ERROR: The argument CONS was "Bad token (ATOM /"As/" (/"	As far as I have seen, there are no bugs in the DSS BIOS./" 1) (/"	As far as I have seen, there are no bugs in the DSS BIOS./" 3))", which is not a CONS.
Backtrace from the debugger:

CAR-LOCATION (P.C. = 50)

 Arg 0 (CONS): "Bad token (ATOM /"As/" (/"	As far as I have seen, there are no bugs in the DSS BIOS./" 1) (/"	As far as I have seen, there are no bugs in the DSS BIOS./" 3))"


ZWEI:SUMMARIZE-RECIPIENTS (P.C. = 72)

 Arg 0 (LIST): "Bad token (ATOM /"As/" (/"	As far as I have seen, there are no bugs in the DSS BIOS./" 1) (/"	As far as I have seen, there are no bugs in the DSS BIOS./" 3))"
 Arg 1 (MAXL): 26
Local 0 (STR): ""
Local 1 (LIST): "Bad token (ATOM /"As/" (/"	As far as I have seen, there are no bugs in the DSS BIOS./" 1) (/"	As far as I have seen, there are no bugs in the DSS BIOS./" 3))"
Local 2 (PLIST): NIL
Local 3 (COMMA): NIL
Local 4 (NAME): NIL
Local 5 (I): NIL
Local 6 (LEN): NIL
Local 7 (G2930): NIL
Local 8 (HOST): NIL
Local 9 (KNOWN): NIL
Local 10 (G2934): NIL
Local 11 (G2935): NIL


(PROPERTY RECIPIENTS ZWEI:SUMMARY-PRINTER) (P.C. = 61)

 Arg 0 (LINE): "   20        "
 Arg 1 (SIZE): 27
 Arg 2 (IGNORE): #<MSG 540644>
 Arg 3 (STATUS): #<DTP-LOCATIVE 540654>
Local 0 (STR1): ""
Local 1 (STR2): NIL
Local 2 (LEN1): NIL
Local 3 (LEN2): NIL


ZWEI:SET-MSG-SUMMARY-LINE (P.C. = 131)

 Arg 0 (MSG): #<MSG 540644>
 Arg 1 (STATUS): #<DTP-LOCATIVE 540654>
   --Defaulted args:--
 Arg 2 (LINE): "   20        "
Local 0 (TEMPLATE): (SIZE 5 DATE DATE ...)
Local 1 (G2829): (RECIPIENTS 27 KEYWORDS T ...)
Local 2 (KEY): RECIPIENTS
Local 3 (VAL): 27
Local 4 (G2832): ((DATE DATE 15))
Local 5 (TEMP): ((SIZE 5 6) (DATE DATE 15))


ZWEI:SET-PARSED-MSG-HEADERS (P.C. = 153)

 Arg 0 (MSG): #<MSG 540644>
 Arg 1 (STATUS): #<DTP-LOCATIVE 540654>
Local 0 (NEWSTAT): (ZWEI:HEADERS-END-BP ("			Jon" 0) |JWP@MIT-MC 02//28//82 02| "38:09 Re: DSS" ...)
Local 1 (HEADERS-END-BP): ("			Jon" 0)


Remainder of stack:

(METHOD ZWEI:ZMAIL-DISK-BUFFER PARSE-MSG) (P.C. = 25)
(METHOD ZWEI:TENEX-MAIL-FILE-BUFFER COMBINED PARSE-MSG) (P.C. = 52)
ZWEI:ASSURE-MSG-PARSED (P.C. = 110)
ZWEI:COMPUTE-CURRENT-MSG-NAME (P.C. = 134)
ZWEI:ZMAIL-SELECT-MSG (P.C. = 303)
ZWEI:SELECT-ZMAIL-BUFFER (P.C. = 203)
ZWEI:COM-ZMAIL-SELECT (P.C. = 62)
ZWEI:COMMAND-EXECUTE (P.C. = 100)
ZWEI:ZMAIL-COMMAND-EXECUTE (P.C. = 27)
(SELECT-METHOD ZWEI:ZMAIL-COMMAND-LIST MENU) (P.C. = 32)
(METHOD ZWEI:ZMAIL-FRAME PROCESS-SPECIAL-COMMAND) (P.C. = 25)
(METHOD ZWEI:ZMAIL-COMMAND-LOOP-MIXIN COMMAND-LOOP) (P.C. = 266)
(INTERNAL (METHOD ZWEI:ZMAIL-FRAME COMBINED COMMAND-LOOP) 0) (P.C. = 50)
FUNCALL (P.C. = 25)
(METHOD ZWEI:ZMAIL-COMMAND-LOOP-MIXIN AROUND COMMAND-LOOP) (P.C. = 57)
(METHOD ZWEI:ZMAIL-FRAME COMBINED COMMAND-LOOP) (P.C. = 47)
ZWEI:ZMAIL-PROCESS-TOP-LEVEL (P.C. = 115)
SI:PROCESS-TOP-LEVEL (P.C. = 121)
24-Mar-83 01:12:06-EST,545;000000000000
Return-path: <CAL@MIT-OZ>
Date: Thursday, 24 March 1983, 01:11-EST
From: Cliff Lasser <CAL@MIT-OZ>
To: BUG-LISPM@MIT-OZ

In MIT-Specific 18.1, System 93.32, ZMail 49.11, microcode 226,
Yow!  Winning away!, on Lisp Machine Eight:

Control-meta-R does not work like it used to: If the function
definition has a long comment before it and the function
itself is long and the the point it at the beginning of the
function definition, then c-m-r should move the beginning of
the definition up to the top of th screen.  Instead, it
beeps.24-Mar-83 01:19:30-EST,2693;000000000000
Return-path: <CStacy@MIT-MC>
Date: Thursday, 24 March 1983, 01:13-EST
From: Christopher C. Stacy <CStacy at MIT-MC>
Subject: HOSTS3 Flag Day
To: BUG-LISPM at MIT-MC

The Lisp Machine needs to know about HOSTS3; the HOSTS2 tables are
obsolete.  It would be good if the next release knew about these,
since the HOSTS2 table is not likely to be current anymore.

The source for the host tables lives in two files:  
  SYSENG;HSTNIC  - the NIC host table for the ARPAnet
  SYSENG;HSTMIT  - the MIT local network host table

The HSTMIT file has entries of a familiar form, and contains the
definitions for all the Chaosnet hosts:

NET CHAOS,	  7	; Supported by HOSTS2
HOST MIT-AI,		2/6,SERVER,ITS,PDP10,[MIT-AI-10,MIT-AI-KA,AI,AI10,MITAI]
HOST MIT-AJAX,		LCS 12/100,SERVER,UNIX,VAX,[AJAX]
HOST MIT-ALCATOR,	CHAOS 3570,SERVER,VMS,VAX,[ALCVAX,ALCATOR]
HOST MIT-APIARY-1,	CHAOS 3101,USER,LISPM,LISPM,[APIARY-1,APIARY1,AP-1,AP1]
HOST MIT-APIARY-2,	CHAOS 3103,USER,LISPM,LISPM,[APIARY-2,APIARY2,AP-2,AP2]
HOST MIT-BORAX,		LCS 12/101,SERVER,UNIX,VAX,[BORAX]
HOST MIT-BYPASS,	[CHAOS 530,CHAOS 3430,CHAOS 7430,CHAOS 16130,CHAOS 11100],USER,MINITS,PDP11,[BYPASS]
HOST MIT-CCC,		CHAOS 16310,SERVER,UNIX,PDP11,[MITCCC,CCC]
HOST MIT-COG-SCI,	CHAOS 16340,SERVER,UNIX,PDP11,[MIT-COGS,COGS]
HOST MIT-CORWIN,	CHAOS 3035,SERVER,VMS,VAX,[CORWIN]


The HSTNIC table has entries of the forms:

NET : NET-ADDR : NETNAME :
GATEWAY : ADDR, ADDR : NAME : CPUTYPE : OPSYS : PROTOCOLS :
HOST : ADDR, ALTERNATE-ADDR (if any): HOSTNAME,NICKNAME : CPUTYPE :
   OPSYS : PROTOCOLS :
Where:
ADDR = internet address in decimal, e.g., 10.0.0.73
CPUTYPE = machine type (PDP-11/70, VAX-11/780, FOONLY-F3, C/30, etc.)
OPSYS = operating system (UNIX, TOPS-20, TENEX, ITS, etc.)
PROTOCOLS = transport/service (NCP/FTP,TCP/TELNET,TCP/FTP, etc.)
: (colon) = field delimiter
:: (2 colons) = null field

Here is an example...

NET : 10.0.0.0 : ARPANET :
NET : 18.0.0.0 : MIT :
NET : 23.0.0.0 : MITRE :
NET : 26.0.0.0 : MILNET :
NET : 192.5.3.0 : HP-DESIGN-AIDS :
NET : 192.5.5.0 : BRLNET :

GATEWAY : 10.3.0.80, 47.0.0.11 : SAC-GATEWAY,SAC-GWY1,SAC-GW : PDP-11/23 : MOS : IP/GW,GW/PRIME :
GATEWAY : 10.5.0.10 : LL-GW : PDP-11/44 : EPOS : IP/GW :
GATEWAY : 10.5.0.82 : BBN-GATEWAY : PDP-11/40 : MOS : IP/GW :
GATEWAY : 21.0.0.3, 28.10.0.0 : DCEC-PSAT-IG ::: IP/GW,GW/DUMB :

HOST : 10.3.0.44 : MIT-MC,MC : DEC-1080 : ITS : TCP/TELNET,TCP/FTP,TCP/SMTP,TCP/NAME,TCP/TIME,TCP/SUPDUP,TCP/MLDEV,TCP/FINGER :
HOST : 10.2.0.6 : MIT-AI,AI : DEC-10 : ITS : TCP/TELNET,TCP/FTP,TCP/SMTP,TCP/FINGER :
HOST : 10.2.0.60 : CORADCOM2-TAC : C/30 : TAC : TCP,NCP :;Reclama 1-Apr


Cheers,
Chris
24-Mar-83 01:24:37-EST,1326;000000000000
Return-path: <UC.SHARK@MIT-EECS>
Date: 24 Mar 1983 0119-EST
From: Michael Davon <UC.SHARK at MIT-EECS>
Subject: Default-file-generation-retention
To: bug-lispm at MIT-EECS


When saving files from Zmacs, the LISPM disregards the
default file generation retention number that has been
set, and saves an infinite (large) number of versions.
This has become a nusance as small directories may
easily fill up with old versions while the user is on
the LISPM causing the SAVES to bomb out due to insuf-
ficient disk storage quotas.

It would be very helpful if the LISPM heeded the
default file generation retention count as set in the
host directory and saved the user the trouble of
having to log in and delete old versions before quota
was exceeded.  

Perhaps there is a purpose in having the LISPM keep a
large number of file generations, however, this should
not be the default condition as it conflicts with what
the user may have already specified and reasonably
expects the default conditions to be.  

Please note that this letter comes from a person
with a home directory on a Twenty, so that this may
not be a problem on other machines.  Also please get
back to me so that I will know what happened in
response to this note.

			Thank you,

			michael davon
			uc.shark@ee
-------
24-Mar-83 03:21:12-EST,1513;000000000000
Return-path: <RMS.G.DULCEY@MIT-OZ>
Mail-From: RMS.G.DULCEY created at 24-Mar-83 03:15:26
Date: Thu, 24 Mar 1983  03:15 EST
From: RMS.G.DULCEY@MIT-OZ
To:   Michael Davon <UC.SHARK@MIT-EECS>
Cc:   bug-lispm@MIT-OZ
Subject: Default-file-generation-retention
In-reply-to: Msg of 24 Mar 1983  01:19-EST from Michael Davon <UC.SHARK at MIT-EECS>

Well, it might help if the Lisp Machine could find out what the
default file generation retention count is!  There is no way to get
this information using the FILE protocol.

It is not clear that the Lisp Machine should pay any attention to this
variable, anyway.  Since other hosts do not have any such "feature"
for their directories, it would confuse users who primarily use other
computers to have a Lisp Machine delete files when they didn't ask it
to.

You don't have to log in to delete files.  You can use DIRED, Meta-X
Clean Directory, or whatever you like.  If you are using System 93, if
you lose in the middle of a save, you can get a new editor window
with System Control-E and do the directory hacking there, then type
System E to take you back to the first one, which you can now resume.

If you're stuck with Brand S (or older MIT systems), you'll have to
abort the save.  Then you can clean up the directory and retry the
save.

Don't forget to expunge the directory as well as deleting the files.
You can do this easily by typing E instead of Y to confirm when
leaving DIRED, or with the Meta-X Expunge Directory command.
24-Mar-83 03:50:25-EST,312;000000000000
Return-path: <PGS@MIT-OZ>
Date: Thursday, 24 March 1983, 03:47-EST
From: Patrick Sobalvarro <PGS@MIT-OZ>
To: info-hosts@MIT-MC
Cc: bug-oz@MIT-OZ, bug-lispm@MIT-OZ

I added CADR-32 to both HOSTS > and HSTMIT, because neither OZ nor the Lisp
Machine seem to know about HSTMIT yet.  This needs to be fixed.
24-Mar-83 04:10:23-EST,801;000000000000
Return-path: <GUMBY@MIT-OZ>
Mail-From: GUMBY created at 24-Mar-83 04:06:37
Date: 24 Mar 1983  04:06 EST (Thu)
From: David Vinayak Wallace <GUMBY@MIT-OZ>
To:   Michael Davon <UC.SHARK@MIT-EECS>
Cc:   bug-lispm@MIT-OZ
Subject: Default-file-generation-retention
In-reply-to: Msg of 24 Mar 1983  01:19-EST from Michael Davon <UC.SHARK at MIT-EECS>

Were you writing in someone else's directory?  Yours appears to be OK,
but not to have any lisp programs in it.  Perhaps the other directory
has its default set to 0. The file server (a twenex program; it has
nothing to do with the lispm itself) has to write files like any other
twenex program.  It works for everybody else, as far as I know.

You may use the Zwei commands DIRED or Clean Directory wiothout
logging in directly.

david
24-Mar-83 15:07:12-EST,427;000000000000
Return-path: <SR.CYPHER@MIT-SPEECH>
Date: Thursday, 24 March 1983, 14:57-EST
From: D. Scott Cyphers <SR.CYPHER at MIT-SPEECH>
Subject: Doublespeak in Lisp?
To: BUG-LISPM at OZ

In Release 4.1, System 222.186, Hardcopy 11.14, Zmail 74.43, LMFS 30.26,
Spire 7.14, site configuration 19, on Lisp Machine Polar:

Is nothing sacred anymore?

(setq t nil)

works and sets it without even a warning, let alone an error.
24-Mar-83 15:31:55-EST,183;000000000000
Return-path: <poggio@MIT-OZ>
Date: Thursday, 24 March 1983, 15:26-EST
From: Tommy Poggio <poggio@MIT-OZ>
To: bug-lispm@MIT-OZ

Cadr 23 is suffering from severe display lossage.  24-Mar-83 16:17:31-EST,510;000000000000
Return-path: <PGS@MIT-OZ>
Mail-From: PGS created at 24-Mar-83 16:12:18
Date: Thu, 24 Mar 1983  16:12 EST
From: PGS@MIT-OZ
To:   info-lispm@MIT-OZ

We are missing a number of keyboards.  If anyone has a broken or spare
keyboard sitting next to a machine or someplace, please take it to Ron
Wicken's office.  If the door is closed, just leave it outside the door and
it will be collected in the morning.  We have a new Lisp Machine that cannot
be used because there is no keyboard for it (goddammit).
24-Mar-83 17:49:11-EST,569;000000000000
Return-path: <MOON@SCRC-TENEX>
Date: Thursday, 24 March 1983  16:51-EST
From: MOON at SCRC-TENEX
To:   Michael Davon <UC.SHARK at MIT-EECS>
Cc:   bug-lispm at MIT-EECS
Subject: Default-file-generation-retention
In-reply-to: The message of 24 Mar 1983 0119-EST from Michael Davon <UC.SHARK at MIT-EECS>

Please provide a specific bug report (which 20, what directory there,
what file name being written, from what Lisp machine system).  It always
respects the generation retention count in my experience, so there must
be something unusual happening to you.
24-Mar-83 20:40:40-EST,2371;000000000000
Return-path: <Daniel@MIT-OZ>
Date: Thursday, 24 March 1983, 20:38-EST
From: Daniel Weise <Daniel@MIT-OZ>
To: BUG-LISPM@MIT-OZ

In System 222.170, Hardcopy 11.14, Zmail 74.37, Tape 13.0, LMFS 30.19,
cold load 65, microcode TMC5-MIC 181, site configuration 14, on PI Project:

The space to refresh the screen after a C-X B caused this.  haven't tried
to reproduce it.

>>Trap: The second argument given to SYS:INTERNAL-<, ZWEI:DELETED, was not a :EXTENDED-NUMBER, a fixnum or a floating-point number.
While in the function ZWEI:REDISPLAY-BLT  ZWEI:REDISPLAY  ZWEI:REDISPLAY-ALL-WINDOWS


ZWEI:REDISPLAY-BLT: (P.C. = 114)
 Arg 0 (WINDOW): #<WINDOW 16330660>
 Local 1 (START-BP): ("  (setf (circuit-unproven-devices circuit) nil)" 0 :NORMAL)
 Local 2 (N-PLINES): 48
 Local 3 (NEW-FIRST-LINE): "  (setf (circuit-unproven-devices circuit) nil)"
 Local 4 (FIRST-CHANGED-LINE): "  (setf (circuit-unproven-devices circuit) nil)"
 Local 5 (FIRST-CHANGED-PLINE): 0
 Local 6 (SHEET): #<ZMACS-WINDOW-PANE Zmacs Window Pane 1 13604774 exposed>
 Local 7 (LAST-OCCUPIED-PLINE): NIL
 Local 8 (FIRST-UNCHANGED-PLINE): NIL
 Local 9 (FIRST-UNCHANGED-LINE): NIL
 Local 10 (FIRST-UNCHANGED-LINE-NEW-PLINE): NIL
 Local 11 (PLINE): 0
 Local 12 (LINE): "  (setf (circuit-unproven-devices circuit) nil)"


ZWEI:REDISPLAY-BLT:  (P.C. = 114)
   Arg 0 (WINDOW): #<WINDOW 16330660>

ZWEI:REDISPLAY:  (P.C. = 1017)
   Arg 0 (WINDOW): #<WINDOW 16330660>
   --Defaulted args:--
   Arg 1 (RECENTER-TYPE): :POINT
   Arg 2 (RC1): NIL
   Arg 3 (RC2): NIL
   Arg 4 (FORCE-TO-COMPLETION-P): NIL

ZWEI:REDISPLAY-ALL-WINDOWS:  (P.C. = 36)
   --Defaulted args:--
   Arg 0 (FORCE-TO-COMPLETION-P): NIL
   Arg 1 (SELECT-P): T

(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 122)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 16336214>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:EDITOR -- 11. IV's, 0. FL's 15036053>
   Arg 2 (OPERATION): :EDIT
   --Defaulted args:--
   Arg 3 (TOP-LEVEL-P): T

(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 42)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 16336214>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:TOP-LEVEL-EDITOR -- 13. IV's, 1. FL's 15036037>
   Rest arg (.DAEMON-CALLER-ARGS.): (:EDIT)

ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)

SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
   Arg 0 (IGNORE): NIL
25-Mar-83 01:22:58-EST,465;000000000000
Return-path: <Henry@MIT-OZ>
Date: Friday, 25 March 1983, 01:19-EST
From: Henry Lieberman <Henry@MIT-OZ>
Subject: Color line drawing
To: BUG-LISPM@MIT-OZ

In Release 4.1, System 222.186, Hardcopy 11.14, Zmail 74.43, LMFS 30.26,
site configuration 18, on Lisp Machine Apiary-1:

The color line drawing function (COLOR:COLOR-MIXIN :DRAW-LINE)
doesn't draw the end point of the line, while (TV:GRAPHICS-MIXIN :DRAW-LINE)
does in the black-and-white system.
25-Mar-83 11:20:42-EST,3556;000000000000
Return-path: <Batali@MIT-SPEECH>
Date: Friday, 25 March 1983, 11:16-EST
From: John Batali <Batali at MIT-SPEECH>
To: BUG-LISPM at MIT-OZ

In MIT-Specific 18.1, System 93.32, ZMail 49.11, microcode 226,
Yow!  Winning away!, on Lisp Machine Eight:


Insert your description of the circumstances here:

In zwei: Loading new mail.  I'll copy the offending mail file to
<batali>badmail.txt

>>ERROR: The argument CONS was "Bad token (ZWEI:AT-ATOM /"at/" (/"From: decvax!duke!ucf-cs!fau!root (root) at Ucb-Vax/" 51) (/"From: decvax!duke!ucf-cs!fau!root (root) at Ucb-Vax/" 53))", which is not a CONS.
Backtrace from the debugger:

CAR-LOCATION (P.C. = 50)

 Arg 0 (CONS): "Bad token (ZWEI:AT-ATOM /"at/" (/"From: decvax!duke!ucf-cs!fau!root (root) at Ucb-Vax/" 51) (/"From: decvax!duke!ucf-cs!fau!root (root) at Ucb-Vax/" 53))"


ZWEI:SUMMARIZE-RECIPIENTS (P.C. = 72)

 Arg 0 (LIST): "Bad token (ZWEI:AT-ATOM /"at/" (/"From: decvax!duke!ucf-cs!fau!root (root) at Ucb-Vax/" 51) (/"From: decvax!duke!ucf-cs!fau!root (root) at Ucb-Vax/" 53))"
 Arg 1 (MAXL): 26
Local 0 (STR): ""
Local 1 (LIST): "Bad token (ZWEI:AT-ATOM /"at/" (/"From: decvax!duke!ucf-cs!fau!root (root) at Ucb-Vax/" 51) (/"From: decvax!duke!ucf-cs!fau!root (root) at Ucb-Vax/" 53))"
Local 2 (PLIST): NIL
Local 3 (COMMA): NIL
Local 4 (NAME): NIL
Local 5 (I): NIL
Local 6 (LEN): NIL
Local 7 (G2930): NIL
Local 8 (HOST): NIL
Local 9 (KNOWN): NIL
Local 10 (G2934): NIL
Local 11 (G2935): NIL


(PROPERTY RECIPIENTS ZWEI:SUMMARY-PRINTER) (P.C. = 52)

 Arg 0 (LINE): "   21 24-Mar "
 Arg 1 (SIZE): 27
 Arg 2 (IGNORE): #<MSG 600024>
 Arg 3 (STATUS): #<DTP-LOCATIVE 600034>
Local 0 (STR1): NIL
Local 1 (STR2): NIL
Local 2 (LEN1): NIL
Local 3 (LEN2): NIL


ZWEI:SET-MSG-SUMMARY-LINE (P.C. = 131)

 Arg 0 (MSG): #<MSG 600024>
 Arg 1 (STATUS): #<DTP-LOCATIVE 600034>
   --Defaulted args:--
 Arg 2 (LINE): "   21 24-Mar "
Local 0 (TEMPLATE): (SIZE 5 DATE DATE ...)
Local 1 (G2829): (RECIPIENTS 27 KEYWORDS T ...)
Local 2 (KEY): RECIPIENTS
Local 3 (VAL): 27
Local 4 (G2832): ((DATE DATE 15))
Local 5 (TEMP): ((SIZE 5 6) (DATE DATE 15))


ZWEI:SET-PARSED-MSG-HEADERS (P.C. = 153)

 Arg 0 (MSG): #<MSG 600024>
 Arg 1 (STATUS): #<DTP-LOCATIVE 600034>
Local 0 (NEWSTAT): (ZWEI:HEADERS-END-BP ("Does anybody know whether this experiment was ever run," 0) RETURN-PATH (**) ...)
Local 1 (HEADERS-END-BP): ("Does anybody know whether this experiment was ever run," 0)


Remainder of stack:

(METHOD ZWEI:ZMAIL-DISK-BUFFER PARSE-MSG) (P.C. = 25)
(METHOD ZWEI:TENEX-INBOX-BUFFER COMBINED PARSE-MSG) (P.C. = 52)
ZWEI:ASSURE-MSG-PARSED (P.C. = 110)
ZWEI:SUMMARY-DISPLAY-UPDATE (P.C. = 44)
(SELECT-METHOD TV:SCROLL-ENTRY-CALL-FUNCTION-FUNCTION RECOMPUTE) (P.C. = 30)
(SELECT-METHOD TV:SCROLL-ENTRY-SYMBOL-VALUE-FUNCTION CHANGED-P) (P.C. = 32)
TV:SCROLL-REDISPLAY-DISPLAY-ITEM (P.C. = 354)
TV:SCROLL-REDISPLAY-ITEM-LOOP (P.C. = 137)
TV:SCROLL-REDISPLAY-ITEM-LOOP (P.C. = 113)
TV:SCROLL-REDISPLAY (P.C. = 234)
...
(METHOD ZWEI:ZMAIL-SUMMARY-SCROLL-WINDOW REDISPLAY-AS-NECESSARY) (P.C. = 63)
(METHOD ZWEI:ZMAIL-COMMAND-LOOP-MIXIN-WITH-SUMMARY REDISPLAY) (P.C. = 52)
(METHOD ZWEI:ZMAIL-COMMAND-LOOP-MIXIN COMMAND-LOOP) (P.C. = 222)
(INTERNAL (METHOD ZWEI:ZMAIL-FRAME COMBINED COMMAND-LOOP) 0) (P.C. = 50)
FUNCALL (P.C. = 25)
(METHOD ZWEI:ZMAIL-COMMAND-LOOP-MIXIN AROUND COMMAND-LOOP) (P.C. = 57)
(METHOD ZWEI:ZMAIL-FRAME COMBINED COMMAND-LOOP) (P.C. = 47)
ZWEI:ZMAIL-PROCESS-TOP-LEVEL (P.C. = 115)
SI:PROCESS-TOP-LEVEL (P.C. = 121)
25-Mar-83 12:00:28-EST,420;000000000000
Return-path: <ZVONA@MIT-OZ>
Mail-From: ZVONA created at 25-Mar-83 11:59:20
Date: Fri, 25 Mar 1983  11:59 EST
From: ZVONA@MIT-OZ
To:   bug-lispm@MIT-OZ

Rel 4.1.  If I fasload a file that was compiled in a package that is
not defined in the current enviornment into a package that is in the
current environement, it still asks me if I want to to create the
non-existent package (in fs:file-attribute-bindings).
25-Mar-83 14:41:31-EST,3803;000000000000
Return-path: <Mly@MIT-OZ>
Date: Friday, 25 March 1983, 14:37-EST
From: Richard Mlynarik <Mly@MIT-OZ>
To: BUG-LISPM-mit@MIT-OZ

System 93.32, microcode 226, gc@2,


Insert your description of the circumstances here:

Whilst reading mail from a non-default babyl file (done by clicking right on get new mail)
Started reading, and then...
[BTW get new mail(r: specify file) insists on trying to read a default babyl file
(<daniel.g.mly>daniel.g.mly.babyl in my case) when the buffer is empty.
*Perhaps* it should try to read the babyl file which goes with the new mail file
(eg  <daniel.g.mly.l>bug-lispm.txt & <daniel.g.mly.l>bug-lispm.babyl)???????]

>>TRAP 16234 (TRANS-TRAP)
The function ZWEI:LOSER is undefined.
Backtrace from the debugger:

Additional information supplied with call:
 Expecting 3 values

ZWEI:EDIT-IN-MINI-BUFFER (P.C. = 311)

 Arg 0 (COMTAB): #<COMTAB ZWEI:PATHNAME-READING-COMTAB 24000556>
 Arg 1 (INITIAL-CONTENTS): NIL
 Arg 2 (INITIAL-CHAR-POS): NIL
 Arg 3 (MODE-LINE-LIST): ("Get new mail from file (Default is OZ:PS:<DANIEL.G.MLY>MLY.XMAIL)" (RIGHT-FLUSH " (Completion)"))
Local 0 (BP): ("" 0 NORMAL)
Local 1 (VAL): NIL
Local 2 (SUCCESSFUL): NIL
Local 3 (TOP-W): NIL
Local 4 (OSUBST): NIL
Local 5 (INTERVAL): NIL
Local 6 (G3378): NIL
Local 7 (CHAR): NIL


ZWEI:READ-UNDEFAULTED-PATHNAME-STRING (P.C. = 210)

 Arg 0 (PROMPT): "Get new mail from file"
 Arg 1 (*READING-PATHNAME-DEFAULTS*): #FS:TOPS20-PATHNAME "OZ:PS:<DANIEL.G.MLY>MLY.XMAIL"
 Arg 2 (*READING-PATHNAME-SPECIAL-TYPE*): NIL
 Arg 3 (*READING-PATHNAME-SPECIAL-VERSION*): NIL
 Arg 4 (*READING-PATHNAME-DIRECTION*): READ
 Arg 5 (MERGE-IN-SPECIAL-VERSION): T
 Arg 6 (MINI-BUFFER-INITIAL-CONTENTS): NIL
 Arg 7 (MINI-BUFFER-INITIAL-CHAR-POS): NIL
Local 0 (*READING-PATHNAME-LAST-NAME-TYPED*): "OZ:PS:<DANIEL.G.MLY.l>bug-lispm.BABYL"
Local 1 (OLD-LIST): (ZWEI:TEXT-MODE)
Local 2 (INTERVAL): NIL
Local 3 (G8636): NIL
Local 4 (ELT): NIL


ZWEI:READ-DEFAULTED-PATHNAME (P.C. = 64)

 Arg 0 (PROMPT): "Get new mail from file"
 Arg 1 (DEFAULTS): #FS:TOPS20-PATHNAME "OZ:PS:<DANIEL.G.MLY>MLY.XMAIL"
   --Defaulted args:--
 Arg 2 (SPECIAL-TYPE): NIL
 Arg 3 (SPECIAL-VERSION): NIL
 Arg 4 (DIRECTION): READ
 Arg 5 (MERGE-IN-SPECIAL-VERSION): T
 Arg 6 (MERGE-TYPE): T
 Arg 7 (MINI-BUFFER-INITIAL-CONTENTS): NIL
 Arg 8 (MINI-BUFFER-INITIAL-CHAR-POS): NIL


ZWEI:COM-GET-NEW-MAIL-INTERNAL (P.C. = 200)

 Arg 0 (FIRST-TIME-P): T
   --Defaulted args:--
 Arg 1 (FOR-BUFFER): #<BABYL-MAIL-FILE-BUFFER "BUG-LISPM.BABYL PS:<DANIEL.G.MLY.L> OZ:" 30017445>
Local 0 (FROM-FILE): NIL


ZWEI:STARTUP-ZMAIL-BUFFER (P.C. = 264)

   --Defaulted args:--
 Arg 0 (NEW-PATHNAME): NIL
Local 0 (STREAM): #<FILE-INPUT-CHARACTER-STREAM "OZ:PS:<DANIEL.G.MLY.L>BUG-LISPM.BABYL" 30017404>
Local 1 (PATHNAME): #FS:TOPS20-PATHNAME "OZ:PS:<DANIEL.G.MLY.L>BUG-LISPM.BABYL"
Local 2 (ZMAIL-BUFFER): #<BABYL-MAIL-FILE-BUFFER "BUG-LISPM.BABYL PS:<DANIEL.G.MLY.L> OZ:" 30017445>
Local 3 (.LOCKED-P.): T
Local 4 (LIST): NIL
Local 5 (TEM): #FS:TOPS20-PATHNAME "OZ:PS:<DANIEL.G.MLY.L>BUG-LISPM.BABYL"


Remainder of stack:

ZWEI:COM-GET-NEW-MAIL-INTERNAL (P.C. = 141)
ZWEI:COM-GET-NEW-MAIL (P.C. = 34)
ZWEI:COMMAND-EXECUTE (P.C. = 100)
ZWEI:ZMAIL-COMMAND-EXECUTE (P.C. = 27)
(SELECT-METHOD ZWEI:ZMAIL-COMMAND-LIST MENU) (P.C. = 32)
(METHOD ZWEI:ZMAIL-FRAME PROCESS-SPECIAL-COMMAND) (P.C. = 25)
(METHOD ZWEI:ZMAIL-COMMAND-LOOP-MIXIN COMMAND-LOOP) (P.C. = 266)
(INTERNAL (METHOD ZWEI:ZMAIL-FRAME COMBINED COMMAND-LOOP) 0) (P.C. = 50)
FUNCALL (P.C. = 25)
(METHOD ZWEI:ZMAIL-COMMAND-LOOP-MIXIN AROUND COMMAND-LOOP) (P.C. = 57)
(METHOD ZWEI:ZMAIL-FRAME COMBINED COMMAND-LOOP) (P.C. = 47)
ZWEI:ZMAIL-PROCESS-TOP-LEVEL (P.C. = 115)
SI:PROCESS-TOP-LEVEL (P.C. = 121)
25-Mar-83 16:38:28-EST,1961;000000000000
Return-path: <Mly@MIT-OZ>
Date: Friday, 25 March 1983, 16:35-EST
From: Richard Mlynarik <Mly@MIT-OZ>
Subject: zmacs com-self-document lossage
To: BUG-LISPM@MIT-OZ

System 93.32

Insert your description of the circumstances here:

help c <mouse-right> causes the following lossage

>>ERROR: Cannot convert (:MOUSE #<ZMACS-WINDOW-PANE Zmacs Window Pane 1 15403703 exposed> 100002 1212 ...) into a character
Backtrace from the debugger:

CHARACTER (P.C. = 47)

 Arg 0 (X): (:MOUSE #<ZMACS-WINDOW-PANE Zmacs Window Pane 1 15403703 exposed> 100002 1212 ...)


FORMAT:FORMAT-CTL-CHARACTER (P.C. = 162)

 Arg 0 (ARG): (:MOUSE #<ZMACS-WINDOW-PANE Zmacs Window Pane 1 15403703 exposed> 100002 1212 ...)
 Arg 1 (IGNORE): NIL
Local 0 (CHNAME): NIL
Local 1 (BITS): NIL
Local 2 (STR): NIL


FORMAT:FORMAT-CTL-OP (P.C. = 53)

 Arg 0 (OP): FORMAT:C
 Arg 1 (ARGS): ((:MOUSE #<ZMACS-WINDOW-PANE Zmacs Window Pane 1 15403703 exposed> 100002 1212 ...))
 Arg 2 (PARAMS): NIL
Local 0 (TEM): FORMAT:FORMAT-CTL-CHARACTER


FORMAT:FORMAT-CTL-STRING (P.C. = 140)

 Arg 0 (ARGS): ((:MOUSE #<ZMACS-WINDOW-PANE Zmacs Window Pane 1 15403703 exposed> 100002 1212 ...))
 Arg 1 (CTL-STRING): "~:@C"
Local 0 (FORMAT-PARAMS): #<ART-Q-LIST-12 23740164>
Local 1 (TEM): FORMAT:C


FORMAT (P.C. = 176)

 Arg 0 (STREAM): *TYPEIN-WINDOW*-SYN-STREAM
 Arg 1 (CTL-STRING): "~:@C"
 Rest arg (ARGS): ((:MOUSE #<ZMACS-WINDOW-PANE Zmacs Window Pane 1 15403703 exposed> 100002 1212 ...))
Local 1 (ARRAY): NIL


Remainder of stack:

COM-SELF-DOCUMENT (P.C. = 201)
COM-DOCUMENTATION (P.C. = 314)
COMMAND-EXECUTE (P.C. = 100)
PROCESS-COMMAND-CHAR (P.C. = 67)
(:METHOD WINDOW :EDIT) (P.C. = 465)
(:INTERNAL (:METHOD ZMACS-WINDOW :COMBINED :EDIT) 0) (P.C. = 74)
FUNCALL (P.C. = 25)
(:METHOD DISPLAYER :AROUND :EDIT) (P.C. = 31)
(:METHOD ZMACS-WINDOW :COMBINED :EDIT) (P.C. = 47)
ZMACS-WINDOW-TOP-LEVEL (P.C. = 46)
SI:PROCESS-TOP-LEVEL (P.C. = 121)
25-Mar-83 17:08:16-EST,3290;000000000000
Return-path: <daniel.g.mly@MIT-OZ>
Date: Friday, 25 March 1983, 17:07-EST
From: Richard Mlynarik <daniel.g.mly@MIT-OZ>
Subject: finger lispms lossage
To: BUG-LISPM@MIT-OZ

System 93.32

Insert your description of the circumstances here:

I had just changed my user-id (probably incidental) and did a terminal-1-f

>>TRAP 7617 (ARGTYP ARRAY M-A 0 FALL-THROUGH AREF)
The first argument to AREF, NIL, was of the wrong type.
The function expected an array.
Backtrace from the debugger:

CHAOS:FINGER-LISPMS (P.C. = 272)

 Arg 0 (STREAM): #<TRUNCATING-POP-UP-TEXT-WINDOW-WITH-RESET Truncating Pop Up Text Window With Reset 2 15426171 exposed>
   --Defaulted args:--
 Arg 1 (HOSTS): ("MIT-LISPM-1" "MIT-LISPM-2" "MIT-LISPM-3" "MIT-LISPM-4" ...)
 Arg 2 (PRINT-FREE): T
 Arg 3 (RETURN-FREE): NIL
 Arg 4 (PRINT-INUSE): T
 Arg 5 (PRINT-DOWN): T
Local 0 (FREE): (("CADR-16" "833 Avalon x5887 (256K)") ("CADR-15" "800F Amber x6026 (256K)") ("CADR-14" "38-350 Derelict Spaceport x4650") ("CADR-3" "901 Vision x3482, 902 Vision x6769"))
Local 1 (DOWN): NIL
Local 2 (ELEMS): ((#FS:LISPM-CHAOS-HOST "MIT-LISPM-4" **) (#FS:LISPM-CHAOS-HOST "MIT-LISPM-8" **) (#FS:LISPM-CHAOS-HOST "MIT-ZAPHOD" **) (#FS:LISPM-CHAOS-HOST "MIT-MARVIN" **) ...)
Local 3 (HOST): NIL
Local 4 (OLD-TIME): 26400477
Local 5 (G6264): ((#FS:LISPM-CHAOS-HOST "MIT-ZARNIWOOP" **) (#FS:LISPM-CHAOS-HOST "MIT-LISPM-18" **) (#FS:LISPM-CHAOS-HOST "MIT-LISPM-19" **) (#FS:LISPM-CHAOS-HOST "MIT-LISPM-20" **) ...)
Local 6 (ELEM): (#FS:LISPM-CHAOS-HOST "MIT-ZARNIWOOP" (16152))
Local 7 (CONN): NIL
Local 8 (STATE): CHAOS:ANSWERED-STATE
Local 9 (PKT): #<CHAOS Packet 30010275>
Local 10 (STR): "
833 Avalon x5887 (256K)
1:22

-
"
Local 11 (HOST-NAME): "CADR-16"
Local 12 (IDX): NIL
Local 13 (ENTRY): NIL


TV:KBD-FINGER (P.C. = 473)

 Arg 0 (ARG): 1
Local 0 (MODE): :LISP-MACHINES
Local 1 (HOSTS): :LISP-MACHINES
Local 2 (LISPMS-P): T
Local 3 (ALL-LISPMS-P): NIL
Local 4 (ORIGINAL-HOSTS): NIL
Local 5 (WINDOW): #<TRUNCATING-POP-UP-TEXT-WINDOW-WITH-RESET Truncating Pop Up Text Window With Reset 2 15426171 exposed>
Local 6 (MAP-RESULT): NIL
Local 7 (MAP-TEMP): NIL
Local 8 (G1126): NIL
Local 9 (X): NIL
Local 10 (STREAM): #<DTP-CLOSURE 11112454>
Local 11 (HOST): NIL
Local 12 (AND-P): NIL
Local 13 (.CURRENT-WINDOW.): #<ZMAIL-WINDOW Zmail Window 1 15404665 exposed>
Local 14 (.QUEUE-LEFT.): NIL
Local 15 (.FLAG.): NIL
Local 16 (E): NIL


(:INTERNAL TV:KBD-ESC 0) (P.C. = 46)

 Arg 0 (FCN): TV:KBD-FINGER
 Arg 1 (ARG): 1
Local 0 (G0926): 26362255


Additional information supplied with call:
 SYS:ADI-FEXPR-CALL

SI:PROCESS-RUN-FUNCTION-INTERNAL (P.C. = 102)

 Arg 0 (RESTART-ON-RESET): NIL
 Arg 1 (FUNCTION): #<DTP-FEF-POINTER (:INTERNAL TV:KBD-ESC 0) 3530616>
 Rest arg (ARGS): (TV:KBD-FINGER 1)
Local 1 (G1700): ("Terminate and free process ~A." "KBD ESC")
Local 2 (G1700): ((SYS:ABORT ERROR) ("Terminate and free process ~A." "KBD ESC") T ("Terminate and free process ~A." "KBD ESC") ...)


SI:PROCESS-TOP-LEVEL (P.C. = 121)

 Arg 0 (IGNORE): NIL
Local 0 (G1393): ("Restart process ~A." "KBD ESC")
Local 1 (G1393): ((SYS:ABORT ERROR) ("Restart process ~A." "KBD ESC") T ("Restart process ~A." "KBD ESC") ...)
Local 2 (IGNORE): NIL
25-Mar-83 20:34:12-EST,776;000000000000
Return-path: <RWK@SCRC-TENEX>
Date: 25 Mar 1983 2028-EST
From: Robert W. Kerns <RWK at SCRC-TENEX>
Subject: Re: Default-file-generation-retention
To: RMS.G.DULCEY at MIT-OZ, UC.SHARK at MIT-EECS
cc: bug-lispm at MIT-OZ, RWK at SCRC-TENEX
In-Reply-To: The message of Thu, 24 Mar 1983  03:15 EST from RMS.G.DULCEY@MIT-OZ

Please do not spread misinformation about brand S software.
ThIn Brand S software there is a debugger command
to DIRED or reap excess versions of the files, and then
you can resume the save.

It is also possible to find out the default file generation
retention count via the FILE protocol.  This has absolutely
nothing to do with the issue, since it is the host file
system that implements the feature, not the LISPM user
side.
-------
26-Mar-83 14:18:38-EST,831;000000000000
Return-path: <RWK@SCRC-TENEX>
Date: 25 Mar 1983 2026-EST
From: Robert W. Kerns <RWK at SCRC-TENEX>
Subject: Re: Default-file-generation-retention
To: UC.SHARK at MIT-EECS, bug-lispm at MIT-EECS
cc: RWK at SCRC-TENEX
In-Reply-To: The message of 24 Mar 1983 0119-EST from Michael Davon <UC.SHARK at MIT-EECS>

The Lisp Machine is not responsible for deleting
excess versions of your files.  TOPS-20 is supposed
to take care of that.  You should verify that
the generation retention count of your directory
is really set, and that the file doesn't have
a generation-retention-count set differently.
It could be that the FILE server is doing something
strange.  I use generation-retention-counts all
the time on an LMFS file system (pointer), and it
works just fine...and the file system does all
the work.
-------
26-Mar-83 15:17:07-EST,1197;000000000000
Return-path: <PGA@MIT-OZ>
Mail-From: PGA created at 26-Mar-83 15:13:23
Date: 26 Mar 1983 1513-EST
From: PGA@MIT-OZ
Subject: [David Chapman <Zvona@MIT-OZ>: 3600 console problems]
To: bug-lispm@MIT-OZ, bug-hardware@MIT-OZ
cc: levitt@MIT-OZ, laura@MIT-OZ, minsky@MIT-OZ

	Return-path: <Zvona@MIT-OZ>
	Date: Saturday, 26 March 1983, 13:50-EST
	From: David Chapman <Zvona@MIT-OZ>
	Subject: 3600 console problems
	
	I don't quite know where to send this, but ... the PI 3600
	console CRT has the problem that the plastic frame frob (is
	that what is called a ``bezell'', I somehow remember?) covers
	the top line of the screen so you can't read it.  Also, it is
	out of focus around the edges -- is there a way to adjust
	this?

It's spelled with one 'l'.  Just to be sure, I checked.  I found the
closest part of the definition to Zvona's use, in American Heritage, interesting:

    3. A groove or flange designed to hold the beveled edge of a watch
    crystal or a gem.

Did you ever think of a CRT tube as being like a gem?  I suppose it's
more like a watch crystal.  There is probably an intermediate gap in
the Entymology, but it's an interesting thought.

-------
26-Mar-83 15:28:30-EST,460;000000000000
Return-path: <PGA@MIT-OZ>
Mail-From: PGA created at 26-Mar-83 15:26:09
Date: 26 Mar 1983 1526-EST
From: PGA@MIT-OZ
Subject: Re: [David Chapman <Zvona@MIT-OZ>: 3600 console problems]
To: bug-lispm@MIT-OZ, bug-hardware@MIT-OZ, levitt@MIT-OZ, laura@MIT-OZ,
    minsky@MIT-OZ, PGA@MIT-OZ
In-Reply-To: Your message of 26-Mar-83 1513-EST

Whoops, that's etymology, not entomology; unless we think transformation
of language is a 'bug' (insect?).
-------
26-Mar-83 21:09:24-EST,827;000000000000
Return-path: <RpK@MIT-OZ>
Date: Saturday, 26 March 1983, 21:06-EST
From: Robert P. Krajewski <RpK@MIT-OZ>
Subject: Default-file-generation-retention
To: RMS.G.DULCEY@MIT-OZ
CC: UC.SHARK@MIT-EECS, bug-lispm@MIT-OZ
FCC: OZ:PS:<RPK.MAIL>CC.XMAIL

    Date: Thu, 24 Mar 1983  03:15 EST
    From: RMS.G.DULCEY@MIT-OZ
    To:   Michael Davon <UC.SHARK@MIT-EECS>
    Cc:   bug-lispm@MIT-OZ
    Subject: Default-file-generation-retention

    Well, it might help if the Lisp Machine could find out what the
    default file generation retention count is!  There is no way to get
    this information using the FILE protocol.

Hold on a minute here.  Isn't the file-retention count supposed
to work AUTOMATICALLY, through the Twenex Jsi themselves ?  The
file server shouldn't have to do anything special.

``Bob''26-Mar-83 22:09:36-EST,1204;000000000000
Return-path: <Zvona@MIT-OZ>
Date: Saturday, 26 March 1983, 22:04-EST
From: David Chapman <Zvona@MIT-OZ>
Subject: redundant warnings in L-compiler
To: BUG-LISPM@MIT-OZ

In System 222.186, Hardcopy 11.14, Zmail 74.43, Tape 13.0, LMFS 30.26,
cold load 65, microcode TMC5-MIC 181, site configuration 19, on PI Project:

  For Function MONOTONIC-APPLICATION?
    While compiling DOMAIN-THEORY:
    The variable DOMAIN-THEORY is unknown and has been declared SPECIAL
    While compiling RELATED-OBJECT:
    The variable RELATED-OBJECT is unknown and has been declared SPECIAL
*   While compiling (NOT (FALSE? (TRY-TO-SHOW (SI:XR-BQ-LIST (QUOTE (REFERENT RELATION)) RANGE-OBJ DOMAIN-RELATED-OBJECT)))):
*   Too few arguments in (TRY-TO-SHOW (SI:XR-BQ-LIST (QUOTE (REFERENT RELATION)) RANGE-OBJ DOMAIN-RELATED-OBJECT))
*   While compiling (NOT (FALSE? (TRY-TO-SHOW (SI:XR-BQ-LIST (QUOTE (REFERENT RELATION)) RANGE-OBJ DOMAIN-RELATED-OBJECT)))):
*   Too few arguments in (TRY-TO-SHOW (SI:XR-BQ-LIST (QUOTE (REFERENT RELATION)) RANGE-OBJ DOMAIN-RELATED-OBJECT))
    The variable TARGET was never used.
    The variable RANGE-ORDER was never used.
    The variable DOMAIN-ORDER was never used.
27-Mar-83 15:27:14-EST,4366;000000000000
Return-path: <JMB.JZ@MIT-OZ>
Date: Sunday, 27 March 1983, 15:22-EST
From: James C. Zamiska <JMB.JZ@MIT-OZ>
To: BUG-LISPM@MIT-OZ

In MIT-Specific 18.1, System 93.32, ZMail 49.13, microcode 226,
Syntactic sugar highs..., on Lisp Machine Five:


Insert your description of the circumstances here:

I was writing a program called input-rle. I compiled this program then ran it, passing it
a valid argument. :

; this program acts by side effect 
; using this program you interactively modify the given object's RLE
(defun input-rle (obj &aux y)
  (do ((quit-loop ()
		  (y-or-n-p "Are you finished hacking the Run Length Encoding of this obj?")))
      (quit-loop)
    (format t "Input y coordinate of the rle-scan that you want to hack: ")
    (setq y (read))
    (format t "y = ~d :     ~a" y (aref  (o-RLE (eval obj)) y))
    (format t
     "Input the list of dotted pairs that you want to be stuck into this object's rle at y=~d"
     y)
    (aset (o-RLE (eval obj)) (read) y)))


It ran perfectly up to the last line: i inputed the following as a list of dotted pairs
   '((3. . 4.) ('gap 2.3))
When i hit the carriage return it barfed about some wierd array reference error. Then i went
back to the editor and inserted some carriage returns in the format strings (i.e. "~%)
and when i tried to evaluate the above slightly modified form i got some wierd error about
array references.
Then i warm booted for the hell of it and tried evaluating again and got the below error
which says i should make a detailed report...
Good luck.
-jmb.jz

>>ERROR: Last-bp of #<SECTION-NODE INPUT-RLE 30120531> is deleted.  This bug is on the most-wanted list.
Please make a detailed report.
Backtrace from the debugger:

ZWEI:CHECK-INTERVAL-SECTIONS (P.C. = 145)

 Arg 0 (START-BP): ("(defun test-touchingp()" 0)
 Arg 1 (END-BP): ("" 0)
 Arg 2 (IN-ORDER-P): T
Local 0 (FOO): (#<SECTION-NODE TEST-TOUCHINGP 30120050> #<SECTION-NODE PRINT-RLE 30120320> #<SECTION-NODE INPUT-RLE 30120531>)
Local 1 (INT): #<ZMACS-BUFFER "TEST-CODE.LISP PS:<JMB.JZ> OZ:" 30115454>
Local 2 (G0836): (#<SECTION-NODE INPUT-RLE 30120531>)
Local 3 (N): #<SECTION-NODE INPUT-RLE 30120531>
Local 4 (START-NODE): NIL
Local 5 (ENDNODE1): NIL
Local 6 (END-NODE): NIL
Local 7 (NODE): NIL


ZWEI:COMPILE-INTERVAL (P.C. = 205)

 Arg 0 (COMPILE-P): NIL
 Arg 1 (USE-TYPEOUT): NIL
 Arg 2 (DEFVAR-HACK): T
 Arg 3 (BP1): ("(defun test-touchingp()" 0)
 Arg 4 (BP2): ("" 0)
 Arg 5 (IN-ORDER-P): T
 Arg 6 (COMPILE-PROCESSING-MODE): COMPILER:MACRO-COMPILE
 Arg 7 (READ-THEN-PROCESS-FLAG): NIL
 Arg 8 (ENTIRE-FILE-FLAG): NIL
 Arg 9 (ALREADY-RESECTIONIZED-FLAG): NIL
Local 0 (GENERIC-PATHNAME): #FS:TOPS20-PATHNAME "OZ:PS:<JMB.JZ>TEST-CODE.."
Local 1 (STREAM): NIL
Local 2 (WHOLE-FILE): NIL
Local 3 (FDEFINE-FILE-DEFINITIONS): NIL
Local 4 (VARS): NIL
Local 5 (VALS): NIL
Local 6 (PROGV-VARS): NIL
Local 7 (PROGV-VALS): NIL


ZWEI:COMPILE-PRINT-INTERVAL (P.C. = 152)

 Arg 0 (BP1): ("(defun test-touchingp()" 0)
 Arg 1 (BP2): ("" 0)
 Arg 2 (IN-ORDER-P): T
 Arg 3 (COMPILE-P): NIL
 Arg 4 (DEFUN-NAME): "test-touchingp"
 Arg 5 (MODE-NAME): "Evaluating"
 Arg 6 (ECHO-NAME): "evaluated."
 Arg 7 (USE-TYPEOUT): PROMPT
 Arg 8 (DEFVAR-HACK): T
 Arg 9 (COMPILER-PROCESSING-MODE): COMPILER:MACRO-COMPILE
 Arg 10 (ENTIRE-FILE-FLAG): NIL
   --Defaulted args:--
 Arg 11 (ALREADY-RESECTIONIZED-FLAG): NIL
Local 0 (FORMAT-FUNCTION): #<DTP-FEF-POINTER ZWEI:PROMPT-LINE 16740115>
Local 1 (SUCCESS): NIL


ZWEI:COMPILE-DEFUN-INTERNAL (P.C. = 214)

 Arg 0 (COMPILE-P): NIL
 Arg 1 (MODE-NAME): "Evaluating"
 Arg 2 (ECHO-NAME): "evaluated."
 Arg 3 (USE-TYPEOUT): PROMPT
   --Defaulted args:--
 Arg 4 (DEFVAR-HACK): T
 Arg 5 (COMPILER-PROCESSING-MODE): COMPILER:MACRO-COMPILE
Local 0 (BP1): ("(defun test-touchingp()" 0)
Local 1 (BP2): ("" 0)
Local 2 (DEFUN-NAME): "test-touchingp"


ZWEI:COM-EVALUATE-REGION (P.C. = 42)



Remainder of stack:

ZWEI:COMMAND-EXECUTE (P.C. = 100)
ZWEI:PROCESS-COMMAND-CHAR (P.C. = 67)
(METHOD ZWEI:WINDOW EDIT) (P.C. = 465)
(INTERNAL (METHOD ZWEI:ZMACS-WINDOW COMBINED EDIT) 0) (P.C. = 74)
FUNCALL (P.C. = 25)
(METHOD ZWEI:DISPLAYER AROUND EDIT) (P.C. = 31)
(METHOD ZWEI:ZMACS-WINDOW COMBINED EDIT) (P.C. = 47)
ZWEI:ZMACS-WINDOW-TOP-LEVEL (P.C. = 46)
SI:PROCESS-TOP-LEVEL (P.C. = 121)
27-Mar-83 19:36:34-EST,660;000000000000
Return-path: <MOON@SCRC-TENEX>
Date: Sunday, 27 March 1983  19:33-EST
From: MOON at SCRC-TENEX
To:   ZVONA at MIT-OZ
Cc:   bug-lispm at MIT-OZ
Subject: package creation question in fasload
In-reply-to: The message of Fri 25 Mar 1983  11:59 EST from ZVONA@MIT-OZ

    Date: Fri, 25 Mar 1983  11:59 EST
    From: ZVONA@MIT-OZ

    Rel 4.1.  If I fasload a file that was compiled in a package that is
    not defined in the current enviornment into a package that is in the
    current environement, it still asks me if I want to to create the
    non-existent package (in fs:file-attribute-bindings).
This really does not sound like a bug to me.
27-Mar-83 20:27:00-EST,3638;000000000000
Return-path: <Batali@MIT-OZ>
Date: Sunday, 27 March 1983, 20:24-EST
From: John Batali <Batali@MIT-OZ>
To: BUG-LISPM@MIT-OZ

In MIT-Specific 18.1, System 93.34, ZMail 49.14, microcode 226,
Yow!  Winning away!, on Lisp Machine Eight:


Insert your description of the circumstances here:

Compiling a buffer. The particular function whose last-bp claims to be
deleted is the last function of the buffer. Here is a copy of the last
few lines of the buffer.  Note the return at the end.
					FREE-RBORD1 SCAN-RBORD FREE-RBORD2)
	  (CONNECT-3CELLS-WITH-CONTENTS EXIT-BORDER ENTRY-NEXT
					OFREE-RBORD2 OSCAN-RBORD OFREE-RBORD1)
	  (GIVE-REGION-RIGHT-BORDER NREG ENTRY-NEXT))))))

>>ERROR: Last-bp of #<SECTION-NODE SCAN-STARTS-AND-ENDS-ACTION 10626276> is deleted.  This bug is on the most-wanted list.
Please make a detailed report.
Backtrace from the debugger:

ZWEI:CHECK-INTERVAL-SECTIONS (P.C. = 145)

 Arg 0 (START-BP): (";;; -*- package: USER; mode: LISP; base: 10. -*-" 0. NORMAL)
 Arg 1 (END-BP): ("" 0. MOVES)
 Arg 2 (IN-ORDER-P): T
Local 0 (FOO): (#<SECTION-NODE SCAN 10611653> #<SECTION-NODE RBORD 10612060> #<SECTION-NODE LOAD-RBORD 10612363> #<SECTION-NODE *REGIONS* 10612451> ...)
Local 1 (INT): #<ZMACS-BUFFER "REGIONS.LISP PS:<BATALI.MAP> OZ:" 10610524>
Local 2 (G0836): (#<SECTION-NODE SCAN-STARTS-AND-ENDS-ACTION 10626276>)
Local 3 (N): #<SECTION-NODE SCAN-STARTS-AND-ENDS-ACTION 10626276>
Local 4 (START-NODE): NIL
Local 5 (ENDNODE1): NIL
Local 6 (END-NODE): NIL
Local 7 (NODE): NIL


ZWEI:COMPILE-INTERVAL (P.C. = 205)

 Arg 0 (COMPILE-P): T
 Arg 1 (USE-TYPEOUT): NIL
 Arg 2 (DEFVAR-HACK): NIL
 Arg 3 (BP1): (";;; -*- package: USER; mode: LISP; base: 10. -*-" 0. NORMAL)
 Arg 4 (BP2): ("" 0. MOVES)
 Arg 5 (IN-ORDER-P): T
 Arg 6 (COMPILE-PROCESSING-MODE): COMPILER:MACRO-COMPILE
 Arg 7 (READ-THEN-PROCESS-FLAG): NIL
 Arg 8 (ENTIRE-FILE-FLAG): T
 Arg 9 (ALREADY-RESECTIONIZED-FLAG): NIL
Local 0 (GENERIC-PATHNAME): #FS:TOPS20-PATHNAME "OZ:PS:<BATALI.MAP>REGIONS.."
Local 1 (STREAM): NIL
Local 2 (WHOLE-FILE): NIL
Local 3 (FDEFINE-FILE-DEFINITIONS): NIL
Local 4 (VARS): NIL
Local 5 (VALS): NIL
Local 6 (PROGV-VARS): NIL
Local 7 (PROGV-VALS): NIL


ZWEI:COMPILE-PRINT-INTERVAL (P.C. = 152)

 Arg 0 (BP1): (";;; -*- package: USER; mode: LISP; base: 10. -*-" 0. NORMAL)
 Arg 1 (BP2): ("" 0. MOVES)
 Arg 2 (IN-ORDER-P): T
 Arg 3 (COMPILE-P): T
 Arg 4 (DEFUN-NAME): "Buffer"
 Arg 5 (MODE-NAME): "Compiling"
 Arg 6 (ECHO-NAME): "compiled."
 Arg 7 (USE-TYPEOUT): NIL
 Arg 8 (DEFVAR-HACK): NIL
 Arg 9 (COMPILER-PROCESSING-MODE): COMPILER:MACRO-COMPILE
 Arg 10 (ENTIRE-FILE-FLAG): T
   --Defaulted args:--
 Arg 11 (ALREADY-RESECTIONIZED-FLAG): NIL
Local 0 (FORMAT-FUNCTION): #<DTP-FEF-POINTER (INTERNAL ZWEI:COMPILE-PRINT-INTERVAL 1.) 17017057>
Local 1 (SUCCESS): NIL


ZWEI:COMPILE-BUFFER (P.C. = 113)

 Arg 0 (COMPILE-P): T
 Arg 1 (MODE-NAME): "Compiling"
 Arg 2 (ECHO-NAME): "compiled."
   --Defaulted args:--
 Arg 3 (COMPILER-PROCESSING-MODE): COMPILER:MACRO-COMPILE
Local 0 (BP1): #<ZMACS-BUFFER "REGIONS.LISP PS:<BATALI.MAP> OZ:" 10610524>
Local 1 (BP2): NIL
Local 2 (NAME): "Buffer"


ZWEI:COM-COMPILE-BUFFER (P.C. = 30)



Remainder of stack:

ZWEI:COMMAND-EXECUTE (P.C. = 100)
ZWEI:PROCESS-COMMAND-CHAR (P.C. = 67)
(METHOD ZWEI:WINDOW EDIT) (P.C. = 465)
(INTERNAL (METHOD ZWEI:ZMACS-WINDOW COMBINED EDIT) 0.) (P.C. = 74)
FUNCALL (P.C. = 25)
(METHOD ZWEI:DISPLAYER AROUND EDIT) (P.C. = 31)
(METHOD ZWEI:ZMACS-WINDOW COMBINED EDIT) (P.C. = 47)
ZWEI:ZMACS-WINDOW-TOP-LEVEL (P.C. = 46)
SI:PROCESS-TOP-LEVEL (P.C. = 121)
27-Mar-83 20:28:27-EST,2306;000000000000
Return-path: <Batali@MIT-OZ>
Date: Sunday, 27 March 1983, 20:25-EST
From: John Batali <Batali@MIT-OZ>
To: BUG-LISPM@MIT-OZ

In MIT-Specific 18.1, System 93.34, ZMail 49.14, microcode 226,
Yow!  Winning away!, on Lisp Machine Eight:


Insert your description of the circumstances here:

After I got the last bug, I went to the buffer and started typing things
at the end to see what would happen.  I typed FOO (of course).  Here is
what happened.

>>ERROR: The index 26 is greater than the length of the line ""
Backtrace from the debugger:

ZWEI:MOVE-BP (P.C. = 52)

 Arg 0 (BP): ("FOO" 25. MOVES)
 Arg 1 (LINE): ""
 Arg 2 (INDEX): 22.
Local 0 (OLINE): "FOO"


ZWEI:INSERT (P.C. = 1032)

 Arg 0 (BP): ("FOO" 3. NORMAL)
 Arg 1 (STRING): 141.
   --Defaulted args:--
 Arg 2 (START): 0.
 Arg 3 (END): NIL
Local 0 (LINE): "FOO"
Local 1 (INDEX): 3.
Local 2 (LINE-LENGTH): 3.
Local 3 (FIRST-NEWLINE): NIL
Local 4 (FIRST-LINE): NIL
Local 5 (LAST-LINE): ""
Local 6 (LAST-NEWLINE): NIL
Local 7 (ARRAY-TYPE): NIL
Local 8 (LCHARS): NIL
Local 9 (G2579): (("FOO" 25. MOVES) ("FOO" 3. MOVES))
Local 10 (BP): ("FOO" 25. MOVES)
Local 11 (I): 25.
Local 12 (PREV-LINE): NIL
Local 13 (THIS-LINE): NIL
Local 14 (PREV-NEWLINE): NIL
Local 15 (NEWLINE): NIL
Local 16 (THE-LINE-BEYOND): NIL
Local 17 (LENGTH): NIL
Local 18 (LF): NIL
Local 19 (LT): NIL


ZWEI:INSERT-MOVING (P.C. = 25)

 Arg 0 (BP): ("FOO" 3. NORMAL)
 Arg 1 (STRING): 141.
Local 0 (NBP): NIL


ZWEI:COM-INSERT-CRS (P.C. = 147)

Local 0 (POINT): ("FOO" 3. NORMAL)
Local 1 (NEXT-LINE): NIL
Local 2 (I): 0.
Local 3 (G2698): 1.


Additional information supplied with call:
 Expecting 3 values

ZWEI:COMMAND-EXECUTE (P.C. = 100)

 Arg 0 (COMMAND): ZWEI:COM-INSERT-CRS
 Arg 1 (CHAR): 141.
 Arg 2 (PREFIX-CHAR): NIL
 Arg 3 (HOOK-LIST): (ZWEI:SHIFT-LOCK-HOOK)
Local 0 (G4734): NIL
Local 1 (HOOK): ZWEI:SHIFT-LOCK-HOOK


Remainder of stack:

ZWEI:PROCESS-COMMAND-CHAR (P.C. = 67)
(METHOD ZWEI:WINDOW EDIT) (P.C. = 465)
(INTERNAL (METHOD ZWEI:ZMACS-WINDOW COMBINED EDIT) 0.) (P.C. = 74)
FUNCALL (P.C. = 25)
(METHOD ZWEI:DISPLAYER AROUND EDIT) (P.C. = 31)
(METHOD ZWEI:ZMACS-WINDOW COMBINED EDIT) (P.C. = 47)
ZWEI:ZMACS-WINDOW-TOP-LEVEL (P.C. = 46)
SI:PROCESS-TOP-LEVEL (P.C. = 121)
28-Mar-83 00:15:59-EST,279;000000000000
Return-path: <Batali@MIT-OZ>
Date: Monday, 28 March 1983, 00:11-EST
From: John Batali <Batali@MIT-OZ>
To: BUG-LISPM@MIT-OZ

In MIT-Specific 18.1, System 93.34, ZMail 49.14, microcode 226,
Yow!  Winning away!, on Lisp Machine Eight:

(EQL (SI:MAKE-RATIONAL 0 4) 0) ==> NIL28-Mar-83 02:38:21-EST,363;000000000000
Return-path: <RMS@MIT-OZ>
Mail-From: RMS created at 28-Mar-83 02:31:21
Date: 28 Mar 1983 0231-EST
From: RMS@MIT-OZ
Subject: ZMail error taking car of a string in summarize-recipients
To: bug-lispm-mit@MIT-OZ

This bug was fixed in Zmail patch 49.13, but I see people
are still running into it periodically.   I advise everyone
to load patches.
-------
28-Mar-83 04:05:39-EST,482;000000000000
Return-path: <RMS@MIT-OZ>
Date: Monday, 28 March 1983, 04:00-EST
From: Richard M. Stallman <RMS@MIT-OZ>
Subject: "most wanted" bug in sectionization possibly fixed
To: JMB.JZ@MIT-OZ, Batali@MIT-OZ
CC: bug-lispm-mit@MIT-OZ

Thanks to your reports, I found and fixed something
that could certainly cause lossage of the type you 
experienced.  I am not sure it is the only cause,
so I still want all possible detail in reports of any
such problems.

The fix is in 93.36.
28-Mar-83 17:16:53-EST,498;000000000000
Return-path: <Zvona@MIT-OZ>
Date: Monday, 28 March 1983, 17:13-EST
From: David Chapman <Zvona@MIT-OZ>
Subject: inscrutable compiler warning for method combination
To: BUG-LISPM@MIT-OZ

In Release 4.1, System 222.186, Hardcopy 11.14, Zmail 74.43, LMFS 30.26,
site configuration 19, on Lisp Machine Two:

It doesn't seem like this should show through.

  For Function (:METHOD CYCLIC-OPERATOR-WORLD :COMBINED :DO-BINARY-EXPERIMENT)
    SI:.DAEMON-CALLER-ARGS. is bound but is never used
28-Mar-83 21:59:36-EST,2470;000000000000
Return-path: <Gumby@MIT-OZ>
Date: Monday, 28 March 1983, 21:59-EST
From: David Vinayak Wallace <Gumby@MIT-OZ>
To: BUG-LISPM@MIT-OZ

In MIT-Specific 18.1, System 93.36, ZMail 49.15, microcode 226, gc@2,
on Lisp Machine Six:


Insert your description of the circumstances here:

I was in the window error-handler and moused SET-ARGH. I moused the
argument to modify and....

>>TRAP 3174 (FUNCTION-ENTRY)
Function PROMPT-AND-READ called with only 1 argument.
Backtrace from the debugger:

PROMPT-AND-READ (P.C. = 42)

 Arg 0 (OPTION): "Value to substitute for X:"
   --Missing args:--
 Arg 1 (FORMAT-STRING)
 Rest arg (FORMAT-ARGS): NIL
Local 1 (OPTION-TYPE): NIL
Local 2 (FUNCTION): NIL


Additional information supplied with call:
 ADI-FEXPR-CALL

EH:WINDOW-READ-OBJECT (P.C. = 273)

 Arg 0 (KEYWORD): "Value to substitute for X:"
 Rest arg (FORMAT-STRING-AND-ARGS): NIL
Local 1 (SPECIAL): NIL
Local 2 (SEXP): NIL
Local 3 (ASK-P): NIL
Local 4 (OLD-SI-TYPES): NIL
Local 5 (TYPE): NIL
Local 6 (OTOC): NIL


EH:READ-OBJECT (P.C. = 53)

 Rest arg (PROMPT-AND-READ-ARGS): ("Value to substitute for X:")
Local 1 (OTOC): NIL


EH:COMW-SET-ARG (P.C. = 143)

 Arg 0 (SG): #<DTP-STACK-GROUP "Zmacs Frame 1" 33021137>
 Arg 1 (IGNORE): #FERROR CONDITION-NAMES (FERROR ERROR CONDITION) FORMAT-STRING "Cannot convert ~S into a string" FORMAT-ARGS ((2 -16 -2 -2 ...))
Local 0 (CHAR): (ARG (SI:X 0) #<GRAY-ERROR-HANDLER-TEXT-SCROLL-PANE Gray Error Handler Text Scroll Pane 1 15412117 exposed> 100000)
Local 1 (OLD-SI-TYPES): (:VALUE FUNCTION EH:STACK-FRAME)
Local 2 (IDX): 0
Local 3 (NEW-OBJ): NIL
Local 4 (RP): NIL


EH:PROCESS-SPECIAL-COMMAND (P.C. = 233)

 Arg 0 (LIST): (:MENU ("Set arg" :VALUE EH:COMW-SET-ARG DOCUMENTATION ...) 4 #<COMMAND-MENU-PANE Command Menu Pane 2 15412413 exposed>)
 Arg 1 (SG): #<DTP-STACK-GROUP "Zmacs Frame 1" 33021137>
 Arg 2 (ERROR-OBJECT): #FERROR CONDITION-NAMES (FERROR ERROR CONDITION) FORMAT-STRING "Cannot convert ~S into a string" FORMAT-ARGS ((2 -16 -2 -2 ...))
Local 0 (OPERATION): :MENU
Local 1 (VALUE): EH:COMW-SET-ARG
Local 2 (WINDOW): #<COMMAND-MENU-PANE Command Menu Pane 2 15412413 exposed>
Local 3 (IDX): NIL
Local 4 (RP): NIL


Remainder of stack:

EH:WINDOW-COMMAND-LOOP (P.C. = 346)
EH:COM-WINDOW-ERROR-HANDLER (P.C. = 70)
EH:COMMAND-LOOP (P.C. = 572)
(:METHOD CONDITION :DEBUGGER-COMMAND-LOOP) (P.C. = 27)
EH:SECOND-LEVEL-ERROR-HANDLER (P.C. = 1312)
29-Mar-83 03:28:39-EST,383;000000000000
Return-path: <PGS@MIT-OZ>
Date: Tuesday, 29 March 1983, 03:21-EST
From: Patrick Sobalvarro <PGS@MIT-OZ>
To: BUG-LISPM@MIT-OZ

In MIT-Specific 18.1, System 93.36, ZMail 49.15, microcode 226,
on Lisp Machine Thirty-one:

Converse continually tells me that I have gagged incoming messages, even though
I haven't, and I have to do (qsends-on) every time I want to receive one.
29-Mar-83 06:44:31-EST,538;000000000000
Return-path: <PGS@MIT-OZ>
Date: Tuesday, 29 March 1983, 06:44-EST
From: Patrick Sobalvarro <PGS@MIT-OZ>
To: bug-lispm@MIT-OZ

Until we get a piece of hardware we need, I am forced to use the Lisp Machine
keyboard as a crude button box for real-time control of the Puma.  Someone once
told me that the hardware allows one to verify whether a key is currently being
held down.  If this is true, I'd love to know how to get at it.  I'm currently
forced to have modes and use the mouse (only buttons-held-down thing I can get
at).
29-Mar-83 11:55:08-EST,288;000000000000
Return-path: <Zvona@MIT-OZ>
Date: Tuesday, 29 March 1983, 11:50-EST
From: David Chapman <Zvona@MIT-OZ>
Subject: english number reader?
To: bug-lispm@MIT-OZ

Is there an advertised english number reader?  time:number-value is
much, but not all of the functionality one would want.
29-Mar-83 14:21:52-EST,952;000000000000
Return-path: <MMcM@SCRC-TENEX>
Received: from SCRC-BASSET by SCRC-TENEX with CHAOS; Tue 29-Mar-83 13:33:16-EST
Date: Tuesday, 29 March 1983, 13:28-EST
From: Mike McMahon <MMcM@SCRC-TENEX>
To: PGS@MIT-OZ
Cc: bug-lispm@MIT-OZ
In-reply-to: The message of 29 Mar 83 06:44-EST from Patrick Sobalvarro <PGS at MIT-OZ>

    Date: Tuesday, 29 March 1983, 06:44-EST
    From: Patrick Sobalvarro <PGS@MIT-OZ>
    Until we get a piece of hardware we need, I am forced to use the Lisp Machine
    keyboard as a crude button box for real-time control of the Puma.  Someone once
    told me that the hardware allows one to verify whether a key is currently being
    held down.  If this is true, I'd love to know how to get at it.  I'm currently
    forced to have modes and use the mouse (only buttons-held-down thing I can get
    at).
The function you want is TV:KEY-STATE, which takes #\ characters or keywords for
shift keys (e.g. ':CONTROL).
29-Mar-83 14:40:20-EST,373;000000000000
Return-path: <Batali@MIT-OZ>
Date: Tuesday, 29 March 1983, 14:35-EST
From: John Batali <Batali@MIT-OZ>
Subject: Rational number bugs
To: BUG-LISPM@MIT-OZ

In MIT-Specific 18.1, System 93.37, ZMail 49.16, microcode 226, gc@2,
on Lisp Machine Six:

1.  The reader doesn't accept rationals with negative denominators.

2.  (EQL (SI:MAKE-RATIONAL -2 -3) 2 3) ==> NIL29-Mar-83 17:30:04-EST,2964;000000000000
Return-path: <kahle@MIT-OZ>
Date: Tuesday, 29 March 1983, 17:25-EST
From: brewster kahle <kahle@MIT-OZ>
To: BUG-LISPM@MIT-OZ

In MIT-Specific 18.1, System 93.32, ZMail 49.11,
Experimental DAEDALUS 2.4, microcode 226, dpl, on Lisp Machine Six:


Insert your description of the circumstances here:

Yet another wild-card bug


>>ERROR: No such file type for OZ:PS:<KAHL*>*.*.*
Backtrace from the debugger:

FS:DIRECTORY-OPERATION-CHAOS (P.C. = 136)

 Arg 0 (OPERATION): :EXPUNGE
 Arg 1 (HOST): #FS:TOPS20-CHAOS-HOST "MIT-OZ"
 Arg 2 (PATHNAME): #FS:TOPS20-PATHNAME "OZ:PS:<KAHL*>*.*.*"
 Arg 3 (ERROR-P): T
Local 0 (HOST-UNIT): #<HOST-UNIT 23740672>
Local 1 (PKT): #<CHAOS Packet 33431141>
Local 2 (SUCCESS): NIL
Local 3 (FILE-STRING): " ERROR FNF F No such file type"
Local 4 (START): NIL
Local 5 (IGNORE): NIL


(:METHOD FS:TOPS20-PATHNAME :EXPUNGE) (P.C. = 62)
  (SELF is #FS:TOPS20-PATHNAME "OZ:PS:<KAHL*>*.*.*")

 Arg 0 (OPERATION): :EXPUNGE
 Rest arg (G7978): NIL
Local 1 (ERROR): T


FS:EXPUNGE-DIRECTORY (P.C. = 154)

 Arg 0 (PATHNAME): #FS:TOPS20-PATHNAME "OZ:PS:<KAHL*>*.*.*"
 Rest arg (OPTIONS): NIL
Local 1 (ERROR): T
Local 2 (G6422): (FS:FILE-ERROR SI:CONDITION-CASE-THROW FS:G6421)
Local 3 (G6423): ((FS:FILE-ERROR SI:CONDITION-CASE-THROW FS:G6421))
Local 4 (ERROR-OBJECT): NIL
Local 5 (*SELECTQ-ITEM*): NIL


ZWEI:REAP-DIRECTORY (P.C. = 163)

 Arg 0 (PATHNAME): #FS:TOPS20-PATHNAME "OZ:PS:<KAHL*>*.*.*"
 Arg 1 (N-TO-KEEP): 2
 Arg 2 (STREAM): SI:TERMINAL-IO-SYN-STREAM
Local 0 (DIRECTORY-LIST): ((#FS:TOPS20-PATHNAME "OZ:PS:<KAHLE>-READ-.-THIS-.1" :PROTECTION "777752" :GENERATION-RETENTION-COUNT ...) (#FS:TOPS20-PATHNAME "OZ:PS:<KAHLE>AAA.CONFIGURATION.3" :PROTECTION "777752" :GENERATION-RETENTION-COUNT ...) (#FS:TOPS20-PATHNAME "OZ:PS:<KAHLE>ALU.CIF.1" :PROTECTION "777752" :GENERATION-RETENTION-COUNT ...) (#FS:TOPS20-PATHNAME "OZ:PS:<KAHLE>ALU.PLA.2" :OFFLINE T :PROTECTION ...) ...)
Local 1 (SOMETHING-DELETED): T
Local 2 (LIST): NIL
Local 3 (HEAD): NIL
Local 4 (PREV-NAME): "VANILLA-FLAG"
Local 5 (NAME): "VANILLA-FLAG"
Local 6 (PREV-TYPE): "LISP"
Local 7 (TYPE): "LISP"
Local 8 (PATHNAME): #FS:TOPS20-PATHNAME "OZ:PS:<KAHLE.CM.BACKUP>VANILLA-FLAG.LISP.2"


ZWEI:CLEAN-DIRECTORY (P.C. = 110)

 Arg 0 (PATHNAME): #FS:TOPS20-PATHNAME "OZ:PS:<KAHL*>*.*.*"
 Arg 1 (N-TO-KEEP): 2
 Arg 2 (PROMPT-STREAM): #<MODE-LINE-WINDOW Mode Line Window 6 15431110 exposed>


Remainder of stack:

ZWEI:COM-CLEAN-DIRECTORY (P.C. = 66)
ZWEI:COM-EXTENDED-COMMAND (P.C. = 67)
ZWEI:COMMAND-EXECUTE (P.C. = 100)
ZWEI:PROCESS-COMMAND-CHAR (P.C. = 67)
(:METHOD ZWEI:WINDOW :EDIT) (P.C. = 465)
(:INTERNAL (:METHOD ZWEI:ZMACS-WINDOW :COMBINED :EDIT) 0) (P.C. = 74)
FUNCALL (P.C. = 25)
(:METHOD ZWEI:DISPLAYER :AROUND :EDIT) (P.C. = 31)
(:METHOD ZWEI:ZMACS-WINDOW :COMBINED :EDIT) (P.C. = 47)
ZWEI:ZMACS-WINDOW-TOP-LEVEL (P.C. = 46)
SI:PROCESS-TOP-LEVEL (P.C. = 121)
29-Mar-83 17:32:43-EST,2936;000000000000
Return-path: <kahle@MIT-OZ>
Date: Tuesday, 29 March 1983, 17:31-EST
From: brewster kahle <kahle@MIT-OZ>
To: BUG-LISPM@MIT-OZ

In MIT-Specific 18.1, System 93.32, ZMail 49.11,
Experimental DAEDALUS 2.4, microcode 226, dpl, on Lisp Machine Six:


Insert your description of the circumstances here:

In the window debugger:
this occured when mousing "set arg" and then an argument

>>TRAP 3174 (FUNCTION-ENTRY)
Function PROMPT-AND-READ called with only 1 argument.
Backtrace from the debugger:

PROMPT-AND-READ (P.C. = 42)

 Arg 0 (OPTION): "Value to substitute for PATHNAME:"
   --Missing args:--
 Arg 1 (FORMAT-STRING)
 Rest arg (FORMAT-ARGS): NIL
Local 1 (OPTION-TYPE): NIL
Local 2 (FUNCTION): NIL


Additional information supplied with call:
 SYS:ADI-FEXPR-CALL

EH:WINDOW-READ-OBJECT (P.C. = 273)

 Arg 0 (KEYWORD): "Value to substitute for PATHNAME:"
 Rest arg (FORMAT-STRING-AND-ARGS): NIL
Local 1 (SPECIAL): NIL
Local 2 (SEXP): NIL
Local 3 (ASK-P): NIL
Local 4 (OLD-SI-TYPES): NIL
Local 5 (TYPE): NIL
Local 6 (OTOC): NIL


EH:READ-OBJECT (P.C. = 53)

 Rest arg (PROMPT-AND-READ-ARGS): ("Value to substitute for PATHNAME:")
Local 1 (OTOC): NIL


EH:COMW-SET-ARG (P.C. = 143)

 Arg 0 (SG): #<DTP-STACK-GROUP "Zmacs Frame 3" 14371760>
 Arg 1 (IGNORE): #FS:FILE-LOOKUP-ERROR PROPERTY-LIST (PATHNAME #FS:TOPS20-PATHNAME "OZ:PS:<KAHL*>*.*.*" OPERATION EXPUNGE) CONDITION-NAMES (FS:FILE-LOOKUP-ERROR FS:FILE-OPERATION-FAILURE FS:FILE-ERROR ERROR ...) FORMAT-STRING "~A" FORMAT-ARGS ("No such file type for OZ:PS:<KAHL*>*.*.*") PATHNAME #FS:TOPS20-PATHNAME "OZ:PS:<KAHL*>*.*.*" OPERATION EXPUNGE
Local 0 (CHAR): (ARG (FS:PATHNAME 0) #<GRAY-ERROR-HANDLER-TEXT-SCROLL-PANE Gray Error Handler Text Scroll Pane 1 15412117 exposed> 100000)
Local 1 (OLD-SI-TYPES): (:VALUE FUNCTION EH:STACK-FRAME)
Local 2 (IDX): 0
Local 3 (NEW-OBJ): NIL
Local 4 (RP): NIL


EH:PROCESS-SPECIAL-COMMAND (P.C. = 233)

 Arg 0 (LIST): (:MENU ("Set arg" :VALUE EH:COMW-SET-ARG DOCUMENTATION ...) 1 #<COMMAND-MENU-PANE Command Menu Pane 2 15412413 exposed>)
 Arg 1 (SG): #<DTP-STACK-GROUP "Zmacs Frame 3" 14371760>
 Arg 2 (ERROR-OBJECT): #FS:FILE-LOOKUP-ERROR PROPERTY-LIST (PATHNAME #FS:TOPS20-PATHNAME "OZ:PS:<KAHL*>*.*.*" OPERATION EXPUNGE) CONDITION-NAMES (FS:FILE-LOOKUP-ERROR FS:FILE-OPERATION-FAILURE FS:FILE-ERROR ERROR ...) FORMAT-STRING "~A" FORMAT-ARGS ("No such file type for OZ:PS:<KAHL*>*.*.*") PATHNAME #FS:TOPS20-PATHNAME "OZ:PS:<KAHL*>*.*.*" OPERATION EXPUNGE
Local 0 (OPERATION): :MENU
Local 1 (VALUE): EH:COMW-SET-ARG
Local 2 (WINDOW): #<COMMAND-MENU-PANE Command Menu Pane 2 15412413 exposed>
Local 3 (IDX): NIL
Local 4 (RP): NIL


Remainder of stack:

EH:WINDOW-COMMAND-LOOP (P.C. = 346)
EH:COM-WINDOW-ERROR-HANDLER (P.C. = 70)
EH:COMMAND-LOOP (P.C. = 572)
(:METHOD CONDITION :DEBUGGER-COMMAND-LOOP) (P.C. = 27)
EH:SECOND-LEVEL-ERROR-HANDLER (P.C. = 1312)
29-Mar-83 20:10:35-EST,2886;000000000000
Return-path: <Mailer@MIT-OZ>
Date: Tuesday, 29 March 1983, 20:05-EST
From: John Bradstreet <Bradst ! at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In MIT-Specific 18.1, System 93.30, ZMail 49.10, microcode 226, gc@2,
on Lisp Machine Nine:



  I somehow got a disk error while doing a simple System-E while trying to
switch edit buffers.  What a royal pain.
  Note that this is the second time I have gotten this sort of error on this
particular Lisp Machine.  Did anyone take care of the problem the first time ?

  >J.Bradstreet<


>>ERROR: Disk read error unit 0, cyl 81., surf 15., sec 9.,
  status ECC-Hard  Transfer-Aborted
 Type control-C to retry.
Backtrace from the debugger:

SI:DISK-RUN (P.C. = 325)

 Arg 0 (RQB): #<ART-16B-510. 7201000>
 Arg 1 (UNIT): 0.
 Arg 2 (ADDRESS): 26411.
 Arg 3 (SECTORS-PER-TRACK): 17.
 Arg 4 (HEADS-PER-CYLINDER): 19.
 Arg 5 (CMD): 2048.
 Arg 6 (CMD-NAME): "read"
   --Defaulted args:--
 Arg 7 (NO-ERROR-CHECKING): NIL
Local 0 (ADR): 1553.
Local 1 (CYLINDER): 81.
Local 2 (SURFACE): 14.
Local 3 (SECTOR): 10.
Local 4 (ERROR-COUNT): 4.
Local 5 (ER-H): 3649.
Local 6 (ER-L): 8201.
Local 7 (FINAL-ADDRESS): 26495.
Local 8 (FINAL-CYLINDER): 82.
Local 9 (FINAL-SURFACE): 0.
Local 10 (FINAL-SECTOR): 9.
Local 11 (MICROCODE-ERROR-RECOVERY): T


SI:DISK-READ-WIRED (P.C. = 100)

 Arg 0 (RQB): #<ART-16B-510. 7201000>
 Arg 1 (UNIT): 0.
 Arg 2 (ADDRESS): 26411.
   --Defaulted args:--
 Arg 3 (MICROCODE-ERROR-RECOVERY): T
Local 0 (SECTORS-PER-TRACK): 17.
Local 1 (HEADS-PER-CYLINDER): 19.


SYS:PAGE-IN-WORDS (P.C. = 173)

 Arg 0 (ADDRESS): 6429753.
 Arg 1 (NWDS): 22536.
Local 0 (CCWX): 85.
Local 1 (CCWP): 186.
Local 2 (BASE-ADDR): 6430464.
Local 3 (ADDR): 6452224.
Local 4 (N): 65.
Local 5 (PFN): 177.
Local 6 (I): NIL
Local 7 (CCWP): NIL
Local 8 (VPN): NIL


SYS:PAGE-IN-ARRAY (P.C. = 45)

 Arg 0 (ARRAY): #<ART-1B-768.-939. 30416066>
 Arg 1 (FROM): 6429753.
 Arg 2 (TO): (768. 939.)
Local 0 (SIZE): 22536.


SYS:PAGE-IN-PIXEL-ARRAY (P.C. = 40)

 Arg 0 (ARRAY): #<ART-1B-768.-939. 30416066>
 Arg 1 (FROM): NIL
 Arg 2 (TO): (768. 939.)


Remainder of stack:

(METHOD TV:SHEET DEEXPOSE) (P.C. = 460)
(INTERNAL (METHOD TV:BASIC-FRAME COMBINED DEEXPOSE) 0.) (P.C. = 47)
TV:SHEET-DEEXPOSE (P.C. = 202)
(METHOD TV:BASIC-FRAME COMBINED DEEXPOSE) (P.C. = 63)
TV:SHEET-PREPARE-FOR-EXPOSE (P.C. = 513)
TV:SHEET-EXPOSE (P.C. = 153)
(METHOD ZWEI:ZMACS-FRAME COMBINED EXPOSE) (P.C. = 63)
(METHOD TV:SELECT-MIXIN BEFORE SELECT) (P.C. = 102)
(METHOD ZWEI:ZMACS-WINDOW COMBINED SELECT) (P.C. = 216)
(METHOD ZWEI:ZMACS-FRAME COMBINED SELECT) (P.C. = 126)
(METHOD TV:ESSENTIAL-WINDOW MOUSE-SELECT) (P.C. = 33)
(METHOD TV:BASIC-FRAME COMBINED MOUSE-SELECT) (P.C. = 50)
TV:KBD-SYS-1 (P.C. = 470)
SI:PROCESS-RUN-FUNCTION-INTERNAL (P.C. = 102)
SI:PROCESS-TOP-LEVEL (P.C. = 121)
30-Mar-83 01:11:56-EST,892;000000000000
Return-path: <Mly@MIT-OZ>
Date: Wednesday, 30 March 1983, 01:10-EST
From: Richard Mlynarik <Mly@MIT-OZ>
To: PGS@MIT-OZ, bug-lispm@MIT-OZ

    Return-path: <PGS@MIT-OZ>
    Date: Tuesday, 29 March 1983, 06:44-EST
    From: Patrick Sobalvarro <PGS@MIT-OZ>
    To: bug-lispm@MIT-OZ

    Until we get a piece of hardware we need, I am forced to use the Lisp Machine
    keyboard as a crude button box for real-time control of the Puma.  Someone once
    told me that the hardware allows one to verify whether a key is currently being
    held down.  If this is true, I'd love to know how to get at it.  I'm currently
    forced to have modes and use the mouse (only buttons-held-down thing I can get
    at).
(tv:key-state ':left-shift) (tv:key-state #/.) (tv:key-stat ':mode-lock) etc...
See window system memo
The c-sh-d doc on the mit system seems adequate doc for using it
30-Mar-83 02:37:26-EST,321;000000000000
Return-path: <Agre@MIT-OZ>
Date: Wednesday, 30 March 1983, 02:33-EST
From: Philip E. Agre <Agre@MIT-OZ>
To: BUG-LISPM-mit@MIT-OZ

In MIT-Specific 18.1, System 93.30, ZMail 49.10, microcode 226,
Mr. Roboto, on Lisp Machine Twenty-five:

#\control-line works, but #\control-line-feed doesn't.  Both should.   - pHil30-Mar-83 08:28:00-EST,401;000000000000
Return-path: <BATALI@MIT-OZ>
Date: Wednesday, 30 March 1983, 08:24-EST
From: John Batali <BATALI@MIT-OZ>
Subject: Rationals
To: BUG-LISPM@MIT-OZ

In Release 4.1, System 222.186, Hardcopy 11.14, Zmail 74.43, LMFS 30.26,
site configuration 19, on Lisp Machine Eight:

In both brands of software, rationals with negative denominators are
wrong.  Eg: 

(> (si:make-rational 1 -1) -3) ==> nil
30-Mar-83 09:22:59-EST,311;000000000000
Return-path: <RMS@MIT-OZ>
Mail-From: RMS created at 30-Mar-83 09:20:27
Date: 30 Mar 1983 0920-EST
From: RMS@MIT-OZ
Subject: Set Arg in window error handler
To: kahle@MIT-OZ, bug-lispm-mit@MIT-OZ

This bug was fixed in a recent patch; people concerned about it
are recommended to LOAD-PATCHES.
-------
30-Mar-83 13:25:32-EST,308;000000000000
Return-path: <Batali@MIT-OZ>
Date: Wednesday, 30 March 1983, 13:25-EST
From: John Batali <Batali@MIT-OZ>
Subject: Irrationals
To: BUG-LISPM@MIT-OZ

In MIT-Specific 18.1, System 93.37, ZMail 49.16, microcode 226, gc@2,
on Lisp Machine Six:

(EQL 4\2 2) ==> T

(EQL (SI:MAKE-RATIONAL 4 2) 2) ==> NIL30-Mar-83 13:57:03-EST,1166;000000000000
Return-path: <Moon@SCRC-TENEX>
Received: from SCRC-BULLDOG by SCRC-TENEX with CHAOS; Wed 30-Mar-83 13:52:42-EST
Date: Wednesday, 30 March 1983, 13:50-EST
From: David A. Moon <Moon@SCRC-TENEX>
Subject: Rationals
To: John Batali <BATALI@MIT-OZ>
Cc: BUG-LISPM@MIT-OZ
In-reply-to: The message of 30 Mar 83 08:24-EST from John Batali <BATALI at MIT-OZ>

    Date: Wednesday, 30 March 1983, 08:24-EST
    From: John Batali <BATALI@MIT-OZ>
    In Release 4.1, System 222.186, Hardcopy 11.14, Zmail 74.43, LMFS 30.26,
    site configuration 19, on Lisp Machine Eight:

    In both brands of software, rationals with negative denominators are
    wrong.  Eg: 

    (> (si:make-rational 1 -1) -3) ==> nil

si:make-rational is an internal subprimitive.  It is not the function
that you call with a numerator and a denominator to make a rational.
That function is called "division"; unfortunately it only exists with
its correct name in Common Lisp.  You could try calling
si:normalized-rational in the meantime.  I agree that the choice of
function name by whoever wrote this code was unfortunate, and I'll
change it in our sources to %MAKE-RATIONAL.
30-Mar-83 14:30:38-EST,1013;000000000000
Return-path: <Cassels@SCRC-TENEX>
Received: from SCRC-DALMATIAN by SCRC-TENEX with CHAOS; Wed 30-Mar-83 14:28:35-EST
Date: Wednesday, 30 March 1983, 14:26-EST
From: Robert A. Cassels <Cassels@SCRC-TENEX>
Subject: Rationals
To: BATALI@MIT-OZ, BUG-LISPM@MIT-OZ
In-reply-to: The message of 30 Mar 83 08:24-EST from John Batali <BATALI at MIT-OZ>

    Date: Wednesday, 30 March 1983, 08:24-EST
    From: John Batali <BATALI@MIT-OZ>
    In Release 4.1, System 222.186, Hardcopy 11.14, Zmail 74.43, LMFS 30.26,
    site configuration 19, on Lisp Machine Eight:

    In both brands of software, rationals with negative denominators are
    wrong.  Eg: 

    (> (si:make-rational 1 -1) -3) ==> nil

In Brand S, you should be calling si:normalized-rational,
rather than make-rational.  (Which has been renamed
%make-rational, at least in the source.)  All operators
assume that rationals are always normalized, and
obviously don't when they aren't.

I presume the same is true of the other brand.
30-Mar-83 14:36:51-EST,785;000000000000
Return-path: <Moon@SCRC-TENEX>
Received: from SCRC-BULLDOG by SCRC-TENEX with CHAOS; Wed 30-Mar-83 14:33:44-EST
Date: Wednesday, 30 March 1983, 14:31-EST
From: David A. Moon <Moon@SCRC-TENEX>
Subject: Rational number bugs
To: John Batali <Batali@MIT-OZ>
Cc: BUG-LISPM@MIT-OZ
In-reply-to: The message of 29 Mar 83 14:35-EST from John Batali <Batali at MIT-OZ>

    Date: Tuesday, 29 March 1983, 14:35-EST
    From: John Batali <Batali@MIT-OZ>

    1.  The reader doesn't accept rationals with negative denominators.

There ain't no such thing as a "rational with negative denominator".  Ratios
have signs; their denominators don't.  Check a Common Lisp manual (presumably
it would be useless to have a Lisp with rational numbers that were not
Common-Lisp compatible).
31-Mar-83 11:03:12-EST,1249;000000000000
Return-path: <jim@SCRC-VIXEN>
Date: Thursday, 31 March 1983, 10:50-EST
From: Jim O'Dell <jim at SCRC-VIXEN>
Subject: Rational number bugs
To: Moon at SCRC-TENEX
Cc: Batali at MIT-OZ, BUG-LISPM at MIT-OZ
In-reply-to: The message of 30 Mar 83 14:31-EST from David A. Moon <Moon at SCRC-TENEX>

    Date: Wednesday, 30 March 1983, 14:31-EST
    From: David A. Moon <Moon@SCRC-TENEX>
	Date: Tuesday, 29 March 1983, 14:35-EST
	From: John Batali <Batali@MIT-OZ>
	1.  The reader doesn't accept rationals with negative denominators.

    There ain't no such thing as a "rational with negative denominator".  Ratios
    have signs; their denominators don't.  Check a Common Lisp manual (presumably
    it would be useless to have a Lisp with rational numbers that were not
    Common-Lisp compatible).

Hmmmm.....thats strange. I thought a rational number was the ratio of 2
integers. Thats quite apart from the fact that it may not be in
"simplest" terms. Surely 2/4 is a rational, but any reasonable system
will simplify it to 1/2. Likewise -1/-3 is a rational, but any
reasonable system will "simplify" it to 1/3. 

In any event it sure would be nice if Common Lisp and Arithmetic agreed
on the definition of a Rational Number.
31-Mar-83 12:13:47-EST,2960;000000000000
Return-path: <Cassels@SCRC-TENEX>
Received: from SCRC-NEPONSET by SCRC-TENEX with CHAOS; Thu 31-Mar-83 12:13:30-EST
Date: Thursday, 31 March 1983, 12:11-EST
From: Robert A. Cassels <Cassels@SCRC-TENEX>
Subject: Rational number bugs
To: jim@SCRC-VIXEN, Moon@SCRC-TENEX
Cc: Batali@MIT-OZ, BUG-LISPM@MIT-OZ
In-reply-to: The message of 31 Mar 83 10:50-EST from Jim O'Dell <jim at SCRC-VIXEN>

    Date: Thursday, 31 March 1983, 10:50-EST
    From: Jim O'Dell <jim at SCRC-VIXEN>
	Date: Wednesday, 30 March 1983, 14:31-EST
	From: David A. Moon <Moon@SCRC-TENEX>
	    Date: Tuesday, 29 March 1983, 14:35-EST
	    From: John Batali <Batali@MIT-OZ>
	    1.  The reader doesn't accept rationals with negative denominators.

	There ain't no such thing as a "rational with negative denominator".  Ratios
	have signs; their denominators don't.  Check a Common Lisp manual (presumably
	it would be useless to have a Lisp with rational numbers that were not
	Common-Lisp compatible).

    Hmmmm.....thats strange. I thought a rational number was the ratio of 2
    integers. Thats quite apart from the fact that it may not be in
    "simplest" terms. Surely 2/4 is a rational, but any reasonable system
    will simplify it to 1/2. Likewise -1/-3 is a rational, but any
    reasonable system will "simplify" it to 1/3. 

    In any event it sure would be nice if Common Lisp and Arithmetic agreed
    on the definition of a Rational Number.

Everyone agrees on what a rational number is.  The reader knows a particular
syntax, and the system uses a particular internal representation, but you
can do everything you could Arithmetically want to.  Rationals are both
more and less than "just an ordered pair of integers".

In particular, a rational is a *number*, which has a numerator, a denominator,
and a sign.  The fact that the numerator and denominator might or might not
have their own signs as integers is not arithmetically interesting.
You may think of changing -2/-6 to 1/3 as a simplification of representation,
but arithmetically, they are the same number.  In fact, 4/2 is the same number
as 2, and in Common Lisp, (integerp 4/2).

Of course both Common Lisp and ZetaLisp have ways to turn a pair of integers
into a representation of a rational number (which might be either a "ratio"
or an "integer").

Reader syntax: <optional "+" or "-"> unsigned-integer "\" unsigned-integer
(Common Lisp uses the same syntax, but with "/".)

Internal representation: (typep r) => :rational,
  I don't know what rules ZetaLisp uses for internal representation.
  Common Lisp specifies that:
    (gcd (numerator r) (denominator r)) = 1,  (denominator r) > 1

To make a rational number from two arbitrary integers, use:
  Common Lisp: (/ num den)
  ZetaLisp: (si:normalized-rational num den)

-----
Now, if you'd like to flame about reader syntax, go right ahead.  But
don't pretend to be talking about arithmetic.
31-Mar-83 13:41:35-EST,1452;000000000000
Return-path: <DCP@SCRC-TENEX>
Date: Thursday, 31 March 1983  12:46-EST
From: DCP at SCRC-TENEX
To:   Jim O'Dell <jim at SCRC-VIXEN>
Cc:   Batali at MIT-OZ, BUG-LISPM at MIT-OZ, Moon at SCRC-TENEX
Subject: Rational number (non) bugs
In-reply-to: The message of 31 Mar 1983 10:50-EST from Jim O'Dell <jim at SCRC-VIXEN>

    Date: Thursday, 31 March 1983, 10:50-EST
    From: Jim O'Dell <jim at SCRC-VIXEN>

    Hmmmm.....thats strange. I thought a rational number was the ratio of 2
    integers. Thats quite apart from the fact that it may not be in
    "simplest" terms. Surely 2/4 is a rational, but any reasonable system
    will simplify it to 1/2. Likewise -1/-3 is a rational, but any
    reasonable system will "simplify" it to 1/3. 

    In any event it sure would be nice if Common Lisp and Arithmetic agreed
    on the definition of a Rational Number.

You missed the point.  si:make-rational is basically CONS: you give it
two numbers, it makes a thing that looks like a rational and puts the
first in the numerator and the second in the denominator.  This does
not necessarily make a true rational.  2/4 and -1/-3 are NOT valid
internal representations of rational numbers, but you can make these
ILLEGAL numbers by calling si:make-rational.

Common Lisp and Arithmetic DO agree on the definition of a rational
number.  Until Common Lisp is released, use normalize-rational to take
the ratio of two integers. 
31-Mar-83 16:21:55-EST,2363;000000000000
Return-path: <jim@SCRC-VIXEN>
Date: Thursday, 31 March 1983, 16:06-EST
From: Jim O'Dell <jim at SCRC-VIXEN>
Subject: Rational number bugs
To: Cassels at SCRC-TENEX
Cc: jim at SCRC-VIXEN, Moon at SCRC-TENEX, Batali at MIT-OZ,
    BUG-LISPM at MIT-OZ
In-reply-to: The message of 31 Mar 83 12:11-EST from Robert A. Cassels <Cassels at SCRC-TENEX>

    Date: Thursday, 31 March 1983, 12:11-EST
    From: Robert A. Cassels <Cassels@SCRC-TENEX>
	Date: Thursday, 31 March 1983, 10:50-EST
	From: Jim O'Dell <jim at SCRC-VIXEN>
	    Date: Wednesday, 30 March 1983, 14:31-EST
	    From: David A. Moon <Moon@SCRC-TENEX>
		Date: Tuesday, 29 March 1983, 14:35-EST
		From: John Batali <Batali@MIT-OZ>
		1.  The reader doesn't accept rationals with negative denominators.

	    There ain't no such thing as a "rational with negative denominator".  Ratios
	    have signs; their denominators don't.  Check a Common Lisp manual (presumably
	    it would be useless to have a Lisp with rational numbers that were not
	    Common-Lisp compatible).

	Hmmmm.....thats strange. I thought a rational number was the ratio of 2
	integers. Thats quite apart from the fact that it may not be in
	"simplest" terms. Surely 2/4 is a rational, but any reasonable system
	will simplify it to 1/2. Likewise -1/-3 is a rational, but any
	reasonable system will "simplify" it to 1/3. 

	In any event it sure would be nice if Common Lisp and Arithmetic agreed
	on the definition of a Rational Number.

    Everyone agrees on what a rational number is.  The reader knows a particular
    syntax, and the system uses a particular internal representation, but you
    can do everything you could Arithmetically want to.  Rationals are both
    more and less than "just an ordered pair of integers".

    In particular, a rational is a *number*, which has a numerator, a denominator,
    and a sign.
Why do you need the extra sign?
   The fact that the numerator and denominator might or might not
    have their own signs as integers is not arithmetically interesting.
    You may think of changing -2/-6 to 1/3 as a simplification of representation,
    but arithmetically, they are the same number. 
I agree with you  here. -2/-3  is exactly the same number as 2/3 as -2/3
is equivalent to 2/-3. I thought moon was saying that 2/-3 wasn't a
rational. 
31-Mar-83 16:24:47-EST,847;000000000000
Return-path: <jim@SCRC-VIXEN>
Date: Thursday, 31 March 1983, 16:15-EST
From: Jim O'Dell <jim at SCRC-VIXEN>
Subject: Rational number (non) bugs
To: DCP at SCRC-TENEX
Cc: jim at SCRC-VIXEN, Batali at MIT-OZ, BUG-LISPM at MIT-OZ,
    Moon at SCRC-TENEX
In-reply-to: The message of 31 Mar 83 12:46-EST from DCP at SCRC-TENEX

    Common Lisp and Arithmetic DO agree on the definition of a rational
    number.  Until Common Lisp is released, use normalize-rational to take
    the ratio of two integers. 
What exactly is the definition then of the common lisp variant and what
is your source for the arithmetical definition. I don't mean to be pig
headed but I don't think anyone has provided a "PRECISE" definition of
the term. I'm sure an expert in arithmetic or number theory would have a
very precise definition of rationalness.
31-Mar-83 16:46:37-EST,754;000000000000
Return-path: <RWK@SCRC-TENEX>
Date: 31 Mar 1983 1648-EST
From: Robert W. Kerns <RWK@SCRC-TENEX>
Subject: Re: Rational number bugs
To: jim@SCRC-VIXEN, Moon@SCRC-TENEX
cc: Batali@MIT-OZ, BUG-LISPM@MIT-OZ, RWK@SCRC-TENEX
In-Reply-To: The message of Thursday, 31 March 1983, 10:50-EST from Jim O'Dell <jim at SCRC-VIXEN>

Hmm, I always thought 1/3 and -1/-3 were the SAME rational number,
not two different numbers.


There is no disagreement bewtween Common Lisp and Arithmetic.
They both say -1 divided by -3 gives 1/3.  Neither says anything

about what the internal function SI:MAKE-RATIONAL.  Common Lisp
should have an opinion about the syntax -1/-3, however, and
should use the division function, to avoid confusing people.
-------
31-Mar-83 17:31:12-EST,594;000000000000
Return-path: <MOON@SCRC-TENEX>
Date: Thursday, 31 March 1983  17:27-EST
From: MOON at SCRC-TENEX
To:   Jim O'Dell <jim at SCRC-VIXEN>, DCP at SCRC-TENEX, rwk at SCRC-TENEX,
      Cassels at SCRC-TENEX
Cc:   Batali at MIT-OZ, BUG-LISPM at MIT-OZ
Subject: Rational number (non) bugs

Is it really necessary to have an enormous flood of mail about this?
If you want to know what Common Lisp defines something to be, come
read my copy of the draft Common Lisp manual.  And if you don't
know what you're talking about, please don't flood the bug-lispm
mailing list with redundant mail.
31-Mar-83 17:41:03-EST,1332;000000000000
Return-path: <DCP@SCRC-TENEX>
Received: from SCRC-MYSTIC by SCRC-TENEX with CHAOS; Thu 31-Mar-83 17:37:31-EST
Date: Thursday, 31 March 1983, 17:35-EST
From: David C. Plummer <DCP@SCRC-TENEX>
Subject: Re: Rational number bugs
To: RWK@SCRC-TENEX, jim@SCRC-VIXEN
Cc: Batali@MIT-OZ, BUG-LISPM@MIT-OZ, Moon@SCRC-TENEX
In-reply-to: The message of 31 Mar 83 16:48-EST from Robert W. Kerns <RWK at SCRC-TENEX>

    Date: 31 Mar 1983 1648-EST
    From: Robert W. Kerns <RWK@SCRC-TENEX>
    Hmm, I always thought 1/3 and -1/-3 were the SAME rational number,
    not two different numbers.

This is getting rediculous.  (si:make-rational 1 3) is not the same as
(si:make-rational -1 -3) because internal functions are being called that
shouldn't be.  In Zetalisp, the folloing are =:
	(si:normalized-rational -1  3)
	(si:normalized-rational  1 -3)
	(si:normalized-rational -2  6)
	(si:normalized-rational  2 -6)

It doesn't matter where the sign is kept internally, as long as it is
kept, answering Jim's question about why the extra sign?  I could ask
why the sign of a floating point number isn't kept in the mantissa
instead of in the top bit (where it usually is found) in all the
possible floating point formats, and you would give me a reasonable
answer.  The same goes for where the sign of bignums is kept.
31-Mar-83 17:42:50-EST,2896;000000000000
Return-path: <CAL@MIT-OZ>
Date: Thursday, 31 March 1983, 17:39-EST
From: Cliff Lasser <CAL@MIT-OZ>
To: BUG-LISPM@MIT-OZ

In MIT-Specific 18.1, System 93.37, ZMail 49.16, microcode 226, gc@2,
on Lisp Machine Nine:


Insert your description of the circumstances here:

I was doing a reverse string search and did the control-y command.  I had
something large in the kill ring.

>>TRAP 10072 (ARGTYP ARRAY M-A NIL GAHDR) ->  ARRAY-ACTIVE-LENGTH 
Some argument to ARRAY-ACTIVE-LENGTH, NIL, was of the wrong type.
The function expected an array.
Backtrace from the debugger:

APPEND-TO-ARRAY (P.C. = 42)

 Arg 0 (TO-ARRAY): ""
 Arg 1 (FROM-ARRAY): NIL
   --Defaulted args:--
 Arg 2 (FROM-START): 0
 Arg 3 (FROM-END): NIL
Local 0 (OLD-LENGTH): NIL
Local 1 (NEW-LENGTH): NIL


ZWEI:COM-STRING-SEARCH-INTERNAL (P.C. = 1202)

 Arg 0 (REVERSEP): T
 Arg 1 (BJP): NIL
 Arg 2 (ZJP): NIL
 Arg 3 (TOP-P): NIL
Local 0 (TEM): NIL
Local 1 (STRING): ""
Local 2 (ORIG-PT): ("" 0)
Local 3 (FCN): ZWEI:SEARCH
Local 4 (XCHAR): NIL
Local 5 (CHAR): 131
Local 6 (HACK1): NIL
Local 7 (HACK2): NIL
Local 8 (ECHOED-P): T
Local 9 (FAILED-P): NIL
Local 10 (REPEATING-STRING-NOT-ECHOED-FLAG): NIL
Local 11 (OLD-SELECTED-WINDOW): #<ZMACS-FRAME Zmacs Frame 1 15400510 exposed>
Local 12 (OLD-SUBSTITUTE): #<TYPEIN-WINDOW Typein Window 1 15415053 exposed>
Local 13 (BP1): NIL
Local 14 (BP2): NIL
Local 15 (TEM): NIL
Local 16 (ARG): NIL
Local 17 (KEY): NIL
Local 18 (BP): NIL


ZWEI:INCREMENTAL-SEARCH (P.C. = 1025)

 Arg 0 (REVERSE-P): T
Local 0 (ORIG-PT): ("" 0)
Local 1 (OLD-SELECTED-WINDOW): #<ZMACS-FRAME Zmacs Frame 1 15400510 exposed>
Local 2 (OLD-SUBSTITUTE): #<ZMACS-WINDOW-PANE Zmacs Window Pane 1 15403703 exposed>
Local 3 (CHAR): 33
Local 4 (REAL-CHAR): 33
Local 5 (XCHAR): 33
Local 6 (MUST-REDIS): NIL
Local 7 (P): 0
Local 8 (P1): 0
Local 9 (SUPPRESSED-REDISPLAY): NIL
Local 10 (BP1): ("" 0)
Local 11 (NEW-BP): NIL
Local 12 (TIME-OUT): NIL
Local 13 (INPUT-DONE): NIL
Local 14 (NEW-REVERSE-P): NIL
Local 15 (STRING): NIL
Local 16 (NEW-CH): NIL
Local 17 (P): NIL
Local 18 (IDX): NIL
Local 19 (P0): 0


ZWEI:COM-REVERSE-INCREMENTAL-SEARCH (P.C. = 31)



Additional information supplied with call:
 Expecting 3 values

ZWEI:COMMAND-EXECUTE (P.C. = 100)

 Arg 0 (COMMAND): ZWEI:COM-REVERSE-INCREMENTAL-SEARCH
 Arg 1 (CHAR): 522
 Arg 2 (PREFIX-CHAR): NIL
 Arg 3 (HOOK-LIST): (ZWEI:SHIFT-LOCK-HOOK)
Local 0 (G4734): NIL
Local 1 (HOOK): ZWEI:SHIFT-LOCK-HOOK


Remainder of stack:

ZWEI:PROCESS-COMMAND-CHAR (P.C. = 67)
(METHOD ZWEI:WINDOW EDIT) (P.C. = 465)
(INTERNAL (METHOD ZWEI:ZMACS-WINDOW COMBINED EDIT) 0) (P.C. = 74)
FUNCALL (P.C. = 25)
(METHOD ZWEI:DISPLAYER AROUND EDIT) (P.C. = 31)
(METHOD ZWEI:ZMACS-WINDOW COMBINED EDIT) (P.C. = 47)
ZWEI:ZMACS-WINDOW-TOP-LEVEL (P.C. = 46)
SI:PROCESS-TOP-LEVEL (P.C. = 121)
31-Mar-83 22:04:53-EST,1919;000000000000
Return-path: <LISPM@MIT-OZ>
Date: Thursday, 31 March 1983, 22:01-EST
From: The Lisp Machine <LISPM@MIT-OZ>
To: BUG-LISPM@MIT-OZ

In MIT-Specific 18.1, System 93.37, ZMail 49.16, microcode 226,
Closed Mondays, on Lisp Machine Eighteen:


EGad! I was simply typing in supdup to oz command level.
I might have hit a control-z, but so what?

>>TRAP 7617 (ARGTYP ARRAY M-A 0 FALL-THROUGH AREF)
The first argument to AREF, NIL, was of the wrong type.
The function expected an array.
Backtrace from the debugger:

CHAOS:SEND-CHARACTER-PKT (P.C. = 35)

 Arg 0 (IGNORE): SEND-OUTPUT-BUFFER
 Arg 1 (IGNORE): ""
 Arg 2 (LENGTH): 1


(METHOD SI:BASIC-BUFFERED-OUTPUT-STREAM SEND-CURRENT-OUTPUT-BUFFER) (P.C. = 36)
  (SELF is #<CHARACTER-STREAM 30047466>)

 Arg 0 (OPERATION): SEND-CURRENT-OUTPUT-BUFFER


(METHOD SI:BASIC-BUFFERED-OUTPUT-STREAM FORCE-OUTPUT) (P.C. = 25)
  (SELF is #<CHARACTER-STREAM 30047466>)

 Arg 0 (OPERATION): FORCE-OUTPUT


(METHOD SUPDUP:BASIC-NVT TYPEIN-TOP-LEVEL) (P.C. = 412)
  (SELF is #<SUPDUP Supdup 1 15400400 exposed>)

 Arg 0 (OPERATION): TYPEIN-TOP-LEVEL
   --Defaulted args:--
 Arg 1 (TOP-LEVEL-P): T
Local 0 (TERMINAL-IO): #<SUPDUP Supdup 1 15400400 exposed>
Local 1 (STR): ABORT
Local 2 (G1484): ("Return to command level; optionally disconnect.")
Local 3 (G1484): ((SYS:ABORT ERROR) ("Return to command level; optionally disconnect.") T ("Return to command level; optionally disconnect.") ...)
Local 4 (G1484): ((** ** T ** ...) (** ** T ** ...))
Local 5 (G1485): (SYS:REMOTE-NETWORK-ERROR SUPDUP:NET-ERROR)
Local 6 (G1486): ((SYS:REMOTE-NETWORK-ERROR SUPDUP:NET-ERROR))
Local 7 (CH): 154
Local 8 (*SELECTQ-ITEM*): CHAOS:OPEN-STATE
Local 9 (ERROR): NIL
Local 10 (HOST-NAME): "oz"


SUPDUP:TYPEIN-TOP-LEVEL (P.C. = 24)

 Arg 0 (WINDOW): #<SUPDUP Supdup 1 15400400 exposed>


Remainder of stack:

SI:PROCESS-TOP-LEVEL (P.C. = 121)
 1-Apr-83 01:22:22-EST,3850;000000000000
Return-path: <Hdt@MIT-OZ>
Date: Friday, 1 April 1983, 01:21-EST
From: Hdt@MIT-OZ
To: BUG-LISPM@mit-oz

In MIT-Specific 18.1, System 93.37, ZMail 49.16, microcode 226,
Closed Mondays, on Lisp Machine Eighteen:

Ok.  I had typed either break or control-break (sorry I forgot which,
probably the latter) while in the middle of an apropos. 
Specifically (apropos 'host 'si)  I then tried to find out the value of
a variable I spotted and typed si:*mit- ... but I was interupted but 
exactly this Package "SI" does not exist

I then typed break again, and tried do type  (mail "
But as I typed the " the following happened.


>>TRAP 10072 (ARGTYP ARRAY M-A NIL GAHDR) ->  ARRAY-LEADER 
Some argument to ARRAY-LEADER, NIL, was of the wrong type.
The function expected an array.
Backtrace from the debugger:

Additional information supplied with call:
 Expecting 2 values

SI:XR-READ-SYMBOL (P.C. = 66)

 Arg 0 (STREAM): SI:TERMINAL-IO-SYN-STREAM
 Arg 1 (STRING): "MAIL"
Local 0 (R): NIL
Local 1 (OLD-FLAG): NIL
Local 2 (PKG-FOUND-IN): NIL


Additional information supplied with call:
 Expecting 2 values

SI:XR-READ-THING (P.C. = 326)

 Arg 0 (STREAM): SI:TERMINAL-IO-SYN-STREAM
Local 0 (CH): 40
Local 1 (NUM): 2
Local 2 (A): NIL
Local 3 (B): NIL
Local 4 (STRING): "MAIL"
Local 5 (INDEX): 4
Local 6 (STLEN): 100
Local 7 (REAL-CH): 40
Local 8 (READTABLE-FSM): #<ART-Q-75-26 1201125>
Local 9 (FNPROP): SI:STANDARD-READ-FUNCTION
Local 10 (STATE): (SI:UNTYI-FUNCTION . SYMBOL)
Local 11 (FLAG): SI:UNTYI-FUNCTION
Local 12 (TODO): SYMBOL


Additional information supplied with call:
 Expecting 2 values

(PROPERTY LIST SI:STANDARD-READ-FUNCTION) (P.C. = 255)

 Arg 0 (STREAM): SI:TERMINAL-IO-SYN-STREAM
 Arg 1 (SHOULD-BE-NIL): NIL
 Arg 2 (FIFTY): 50
Local 0 (LIST): NIL
Local 1 (THING): NIL
Local 2 (TYPE): NIL
Local 3 (SPLICEP): NIL
Local 4 (END-OF-LIST): #<DTP-LOCATIVE 22724123>
Local 5 (BP): NIL
Local 6 (CORRESPONDENCE-ENTRY): NIL
Local 7 (THIS-IS-COLUMN-0-LIST): NIL
Local 8 (G3137): NIL


Additional information supplied with call:
 Expecting 2 values

SI:XR-READ-THING (P.C. = 165)

 Arg 0 (STREAM): SI:TERMINAL-IO-SYN-STREAM
Local 0 (CH): 50
Local 1 (NUM): 5
Local 2 (A): NIL
Local 3 (B): NIL
Local 4 (STRING): NIL
Local 5 (INDEX): 0
Local 6 (STLEN): 100
Local 7 (REAL-CH): 50
Local 8 (READTABLE-FSM): #<ART-Q-75-26 1201125>
Local 9 (FNPROP): SI:STANDARD-READ-FUNCTION
Local 10 (STATE): (SI:LAST-CHAR . LIST)
Local 11 (FLAG): SI:LAST-CHAR
Local 12 (TODO): LIST


Additional information supplied with call:
 SYS:ADI-FEXPR-CALL

READ-FOR-TOP-LEVEL (P.C. = 150)

 Rest arg (READ-ARGS): NIL
Local 1 (W-O): (ACTIVATE ACTIVE-P ADD-ASYNCHRONOUS-CHARACTER ALIAS-FOR-INFERIORS ...)
Local 2 (READ-CHECK-INDENTATION): NIL
Local 3 (STREAM): SI:TERMINAL-IO-SYN-STREAM
Local 4 (EOF-OPTION): SI:NO-EOF-OPTION
Local 5 (THING): NIL
Local 6 (TYPE): NIL
Local 7 (SPLICEP): NIL


Remainder of stack:

(METHOD TV:STREAM-MIXIN RUBOUT-HANDLER) (P.C. = 365)
(METHOD TV:TYPEOUT-WINDOW COMBINED RUBOUT-HANDLER) (P.C. = 52)
BREAK (P.C. = 404)
TV:KBD-INTERCEPT-BREAK (P.C. = 27)
EH:FOOTHOLD (P.C. = 20)
PROCESS-WAIT (P.C. = 52)
TV:KBD-IO-BUFFER-GET (P.C. = 222)
(METHOD TV:STREAM-MIXIN ANY-TYI) (P.C. = 104)
(METHOD ZWEI:ZMAIL-TYPEOUT-WINDOW MORE-TYI) (P.C. = 27)
TV:SHEET-MORE-LOCK-KLUDGE (P.C. = 133)
...
ZWEI:MACRO-STREAM-IO-TYI (P.C. = 46)
ZWEI:INPUT-WITH-PROMPTS (P.C. = 136)
(METHOD ZWEI:ZMAIL-COMMAND-LOOP-MIXIN COMMAND-LOOP) (P.C. = 247)
(INTERNAL (METHOD ZWEI:ZMAIL-FRAME COMBINED COMMAND-LOOP) 0) (P.C. = 50)
FUNCALL (P.C. = 25)
(METHOD ZWEI:ZMAIL-COMMAND-LOOP-MIXIN AROUND COMMAND-LOOP) (P.C. = 57)
(METHOD ZWEI:ZMAIL-FRAME COMBINED COMMAND-LOOP) (P.C. = 47)
ZWEI:ZMAIL-PROCESS-TOP-LEVEL (P.C. = 115)
SI:PROCESS-TOP-LEVEL (P.C. = 121)

 1-Apr-83 02:02:09-EST,2285;000000000000
Return-path: <RPK@MIT-OZ>
Date: Friday, 1 April 1983, 01:58-EST
From: RPK@MIT-OZ
Subject: Logging in (Brand S)
To: BUG-LISPM@MIT-OZ, BUG-FILE@MIT-OZ

In Release 4.1, System 222.186, Hardcopy 11.14, Zmail 74.43, LMFS 30.26,
site configuration 19, Vanilla, on Lisp Machine Apiary-1:

I just tried to login to OZ (clean environment).  My password appeared where
<<password>> now is in the backtrace.

>>Error: Attempt to complete a FILE transaction on broken CHAOS Connection for FILE 1 to OZ.
Reason given by MIT-OZ was "End of file reached"
While in the function FS:FILE-WAIT-FOR-TRANSACTION  (METHOD FS:HOST-UNIT COMMAND)  FS:LOGIN-HOST-UNIT


FS:FILE-WAIT-FOR-TRANSACTION: (P.C. = 107)
 Arg 0 (TID): "T1580"
 Arg 1 (CONN): #<CHAOS Connection for FILE 1 to OZ 2100372>
 Arg 2 (WHOSTATE): "Login"
 Local 0 (ID): ("T1580" NIL NIL)


FS:FILE-WAIT-FOR-TRANSACTION:  (P.C. = 107)
   Arg 0 (TID): "T1580"
   Arg 1 (CONN): #<CHAOS Connection for FILE 1 to OZ 2100372>
   Arg 2 (WHOSTATE): "Login"

(METHOD FS:HOST-UNIT COMMAND):  (P.C. = 236)
   (SELF = #<HOST-UNIT 2732006>)
   Arg 0 (OPERATION): COMMAND
   Arg 1 (MARK-P): NIL
   Arg 2 (STREAM-OR-HANDLE): NIL
   Arg 3 (SIMPLE-P): NIL
   Arg 4 (WHOSTATE): "Login"
   Rest arg (COMMANDS): ("LOGIN " "RPK" " " "<<password>>" " ")

FS:LOGIN-HOST-UNIT:  (P.C. = 277)
   Arg 0 (UNIT): #<HOST-UNIT 2732006>
   Arg 1 (LOGIN-P): T
   Arg 2 (CONDITION): #<QINVALID-PASSWORD 22311034>

(METHOD FS:FILE-HOST-MIXIN LOGIN-UNIT):  (P.C. = 24)
   (SELF = #<TOPS20-CHAOS-HOST MIT-OZ>)
   Arg 0 (OPERATION): LOGIN-UNIT
   Arg 1 (UNIT): #<HOST-UNIT 2732006>
   Arg 2 (LOGIN-P): T
   --Defaulted args:--
   Arg 3 (CONDITION): NIL

(METHOD FS:TOPS20-CHAOS-HOST COMBINED LOGIN-UNIT):  (P.C. = 42)
   (SELF = #<TOPS20-CHAOS-HOST MIT-OZ>)
   Rest arg (.DAEMON-CALLER-ARGS.): (LOGIN-UNIT #<HOST-UNIT 2732006> T)

(METHOD FS:HOST-UNIT VALIDATE-CONTROL-CONNECTION):  (P.C. = 233)
   (SELF = #<HOST-UNIT 2732006>)
   Arg 0 (OPERATION): VALIDATE-CONTROL-CONNECTION
   Arg 1 (NO-ERROR-P): T

(METHOD FS:FILE-HOST-MIXIN GET-HOST-UNIT):  (P.C. = 44)
   (SELF = #<TOPS20-CHAOS-HOST MIT-OZ>)
   Arg 0 (OPERATION): GET-HOST-UNIT

FS:HOMEDIR-CHAOS:  (P.C. = 31)
   Arg 0 (HOST): #<TOPS20-CHAOS-HOST MIT-OZ>
 1-Apr-83 10:37:09-EST,3285;000000000000
Return-path: <Hdt@MIT-OZ>
Date: Friday, 1 April 1983, 06:15-EST
From: Hdt@MIT-OZ
To: BUG-LISPM@mit-oz

In MIT-Specific 18.1, System 93.37, ZMail 49.16, microcode 226,
Closed Mondays, on Lisp Machine Eighteen:


In peek, I was looking at my processes, and I tried to click the mouse
near one of the two notify processes that was idle for 14 minutes...

>>TRAP 3772 (ARGTYP INSTANCE PP 0 XINSTANCE-LOC %INSTANCE-LOC)
The first argument to SYS:%INSTANCE-LOC, NIL, was of the wrong type.
The function expected an instance.
Backtrace from the debugger:

(INTERNAL TV:PEEK-PROCESSES 1) (P.C. = 105)

 Arg 0 (PROCESS): NIL


TV:SCROLL-MAINTAIN-LIST-UPDATE-FUNCTION (P.C. = 160)

 Arg 0 (ITEM): ((PRE-PROCESS-FUNCTION TV:SCROLL-MAINTAIN-LIST-UPDATE-FUNCTION FUNCTION NIL ...) #<ART-Q-7 20724772> #<ART-Q-7 20725141> #<ART-Q-7 20725310> ...)
Local 0 (FLAGS-PLIST): #<DTP-LOCATIVE 14733772>
Local 1 (STEP-STATE): (#<PROCESS Converse Frame 1 23607627> #<COROUTINING-PROCESS Zmacs Frame 1 23614253> #<PROCESS Supdup 1-Typein 23614304> #<PROCESS Supdup 1-Typeout 23614334> ...)
Local 2 (OLD-STATE): (NIL #<PROCESS Converse Frame 1 23607627> #<COROUTINING-PROCESS Zmacs Frame 1 23614253> #<PROCESS Supdup 1-Typein 23614304> ...)
Local 3 (ITEM-FUN): #<DTP-FEF-POINTER (INTERNAL TV:PEEK-PROCESSES 1) 16652773>
Local 4 (STEPPER): #<DTP-FEF-POINTER (INTERNAL TV:PEEK-PROCESSES 2) 16653053>
Local 5 (COMPACT-P): NIL
Local 6 (ITEMS): (#<ART-Q-7 20726144> #<ART-Q-7 20726313> #<ART-Q-7 20726462> #<ART-Q-7 20726631> ...)
Local 7 (CURRENT): NIL
Local 8 (NEEDS-COMPACTION): T
Local 9 (LAST): NIL
Local 10 (PREV-ITEM): (#<ART-Q-7 20725775> #<ART-Q-7 20726144> #<ART-Q-7 20726313> #<ART-Q-7 20726462> ...)
Local 11 (PREV-STATE): (#<PROCESS MAIN-ZMAIL-WINDOW 23614167> NIL #<PROCESS Converse Frame 1 23607627> #<COROUTINING-PROCESS Zmacs Frame 1 23614253> ...)


TV:SCROLL-REDISPLAY-ITEM-LOOP (P.C. = 65)

 Arg 0 (ITEM): ((PRE-PROCESS-FUNCTION TV:SCROLL-MAINTAIN-LIST-UPDATE-FUNCTION FUNCTION NIL ...) #<ART-Q-7 20724772> #<ART-Q-7 20725141> #<ART-Q-7 20725310> ...)
 Arg 1 (CURRENT-COUNT): 2
 Arg 2 (FUNCTION): #<DTP-FEF-POINTER TV:SCROLL-REDISPLAY-DISPLAY-ITEM 12726760>
 Arg 3 (NO-RECOMP): NIL
 Rest arg (POSITION): (0 2)
Local 1 (FUN): NIL
Local 2 (F): (PRE-PROCESS-FUNCTION TV:SCROLL-MAINTAIN-LIST-UPDATE-FUNCTION FUNCTION NIL ...)
Local 3 (ITEMS): NIL


TV:SCROLL-REDISPLAY-ITEM-LOOP (P.C. = 113)

 Arg 0 (ITEM): (NIL #<ART-Q-1 20724656> #<ART-Q-1 20724701> (** #<ART-Q-7 20724772> #<ART-Q-7 20725141> #<ART-Q-7 20725310> ...) ...)
 Arg 1 (CURRENT-COUNT): 2
 Arg 2 (FUNCTION): #<DTP-FEF-POINTER TV:SCROLL-REDISPLAY-DISPLAY-ITEM 12726760>
 Arg 3 (NO-RECOMP): NIL
 Rest arg (POSITION): (2)
Local 1 (FUN): NIL
Local 2 (F): NIL
Local 3 (ITEMS): ((** #<ART-Q-7 20724772> #<ART-Q-7 20725141> #<ART-Q-7 20725310> ...) #<ART-Q-1 20724724> #<ART-Q-1 20724747> (** #<ART-Q-1 20731013>))


TV:SCROLL-REDISPLAY (P.C. = 234)

 Arg 0 (FULL-REDISPLAY): NIL
Local 0 (.OLD.OUTPUT.HOLD.): 0
Local 1 (I): NIL


Remainder of stack:

(METHOD TV:BASIC-SCROLL-WINDOW REDISPLAY) (P.C. = 76)
(METHOD TV:PEEK-PANE COMBINED REDISPLAY) (P.C. = 66)
TV:PEEK-TOP-LEVEL (P.C. = 571)
TV:PEEK-STANDALONE-TOP-LEVEL (P.C. = 33)
SI:PROCESS-TOP-LEVEL (P.C. = 121)

 1-Apr-83 10:38:05-EST,1811;000000000000
Return-path: <Hdt@MIT-OZ>
Date: Friday, 1 April 1983, 07:01-EST
From: Hdt@MIT-OZ
To: BUG-LISPM@mit-oz

In MIT-Specific 18.1, System 93.37, ZMail 49.16, microcode 226,
Closed Mondays, on Lisp Machine Eighteen:


I did a (cc:salvage-zmail)  Note that the machine was cadr-1 with
a 93.30 band, so there shouldn't have been any problem.

>>ERROR: SYS:AREA-REGION-BITS area not found
Backtrace from the debugger:

CC:QF-INITIAL-AREA-ORIGIN (P.C. = 177)

 Arg 0 (NAME): SYS:AREA-REGION-BITS
Local 0 (MY-VERSION): 135
Local 1 (HIS-VERSION): 117
Local 2 (AREA-NUMBER): NIL
Local 3 (L): NIL
Local 4 (RES): (SYS:RESIDENT-SYMBOL-AREA SYS:SYSTEM-COMMUNICATION-AREA SYS:SCRATCH-PAD-INIT-AREA SYS:MICRO-CODE-SYMBOL-AREA ...)
Local 5 (ORIGIN): NIL


CC:QF-REGION-NUMBER-OF-POINTER (P.C. = 115)

 Arg 0 (PNTR): 1310632
Local 0 (QUANTUM): 26
Local 1 (BYTES-PER-WORD): 4
Local 2 (WORD): 0
Local 3 (L): (SYS:AREA-REGION-LIST SYS:AREA-REGION-BITS SYS:AREA-REGION-SIZE SYS:AREA-MAXIMUM-SIZE ...)
Local 4 (I): 16


CC:QF-SWAP-IN (P.C. = 173)

 Arg 0 (ADR): 1310632
Local 0 (PHYS-PAGE): NIL
Local 1 (REGION-NUMBER): NIL
Local 2 (ACCESS-STATUS-AND-META-BITS): NIL
Local 3 (PHT-SIZE): NIL
Local 4 (HASH): NIL
Local 5 (PHT1): NIL
Local 6 (COUNT): NIL


CC:QF-MEM-READ (P.C. = 37)

 Arg 0 (ADR): 1501310632
Local 0 (DATA): -1


CC:QF-CAR (P.C. = 100)

 Arg 0 (LMOB): 1501310632
Local 0 (TYPE): 15
Local 1 (X): NIL
Local 2 (ADR): NIL
Local 3 (*SELECTN-ITEM*): NIL
Local 4 (OFFSET): NIL


Remainder of stack:

CC:QF-VALUE-CELL-CONTENTS (P.C. = 60)
CC:QF-SYMBOL-INTERNAL (P.C. = 45)
CC:QF-SYMBOL (P.C. = 107)
CC:SALVAGE-ZMAIL (P.C. = 165)
SI:*EVAL (P.C. = 1145)
SI:EVAL-ABORT-TRIVIAL-ERRORS (P.C. = 44)
SI:LISP-TOP-LEVEL1 (P.C. = 254)
SI:LISP-TOP-LEVEL (P.C. = 35)

 1-Apr-83 10:38:42-EST,1832;000000000000
Return-path: <Hdt@MIT-OZ>
Date: Friday, 1 April 1983, 10:32-EST
From: Hdt@MIT-OZ
To: BUG-LISPM@mit-oz

In MIT-Specific 18.1, System 93.37, ZMail 49.16, microcode 226,
Closed Mondays, on Lisp Machine Eighteen:

Don't ask me how this happened?


>>ERROR: The object #<PROCESS Undraw Scroll Bar 20703141> received a FRESH-LINE message, which went unclaimed.
The rest of the message was NIL.
Backtrace from the debugger:

#<PROCESS Undraw Scroll Bar 20703141>:
   Arg 0: FRESH-LINE


SI:INSTANCE-HASH-FAILURE (P.C. = 126)

 Arg 0 (OP): FRESH-LINE
 Rest arg (ARGS): NIL
Local 1 (HT): #<EQ-HASH-ARRAY (Funcallable) 4507503>
Local 2 (FN-LOCATION): NIL
Local 3 (FUNC): NIL


FORMAT:FORMAT-CTL-FRESH-LINE (P.C. = 34)

 Arg 0 (PARAMS): NIL
Local 0 (COUNT): 1
Local 1 (I): NIL


FORMAT:FORMAT-CTL-OP (P.C. = 63)

 Arg 0 (OP): FORMAT:&
 Arg 1 (ARGS): ("keep ~A?")
 Arg 2 (PARAMS): NIL
Local 0 (TEM): FORMAT:FORMAT-CTL-FRESH-LINE


FORMAT:FORMAT-CTL-STRING (P.C. = 140)

 Arg 0 (ARGS): ("keep ~A?")
 Arg 1 (CTL-STRING): "~&~A"
Local 0 (FORMAT-PARAMS): #<ART-Q-LIST-12 10614776>
Local 1 (TEM): FORMAT:&


Remainder of stack:

FORMAT (P.C. = 176)
FORMAT:FQUERY-PROMPT (P.C. = 67)
(SELECT-METHOD FORMAT:TYI-FQUERY-FUNCTION READ) (P.C. = 36)
FQUERY (P.C. = 313)
Y-OR-N-P (P.C. = 51)
SI:*EVAL (P.C. = 1145)
AND (P.C. = 30)
SI:*EVAL (P.C. = 1145)
SI:PROG-BODY (P.C. = 66)
SI:DO-INTERNAL (P.C. = 347)
...
SI:XR-XRTYI-WHITE-OUT (P.C. = 72)
SI:XR-READ-THING (P.C. = 124)
READ-FOR-TOP-LEVEL (P.C. = 150)
(METHOD TV:STREAM-MIXIN RUBOUT-HANDLER) (P.C. = 365)
(METHOD TV:TYPEOUT-WINDOW COMBINED RUBOUT-HANDLER) (P.C. = 52)
EH:COMMAND-LOOP-READ (P.C. = 215)
EH:COMMAND-LOOP (P.C. = 537)
(METHOD CONDITION DEBUGGER-COMMAND-LOOP) (P.C. = 27)
EH:SECOND-LEVEL-ERROR-HANDLER (P.C. = 1312)

 1-Apr-83 15:58:57-EST,2136;000000000000
Return-path: <RWK@SCRC-TENEX>
Date:  1 Apr 1983 1548-EST
From: Robert W. Kerns <RWK@SCRC-TENEX>
Subject: Re: Rational number bugs
To: DCP@SCRC-TENEX, jim@SCRC-VIXEN
cc: Batali@MIT-OZ, BUG-LISPM@MIT-OZ, Moon@SCRC-TENEX, RWK@SCRC-TENEX
In-Reply-To: The message of Thursday, 31 March 1983, 17:35-EST from David C. Plummer <DCP@SCRC-TENEX>


    Return-path: <DCP@SCRC-TENEX>
    Received: from SCRC-MYSTIC by SCRC-TENEX with CHAOS; Thu 31-Mar-83 17:37:31-EST
    Date: Thursday, 31 March 1983, 17:35-EST
    From: David C. Plummer <DCP@SCRC-TENEX>
    Subject: Re: Rational number bugs
    To: RWK@SCRC-TENEX, jim@SCRC-VIXEN
    Cc: Batali@MIT-OZ, BUG-LISPM@MIT-OZ, Moon@SCRC-TENEX
    In-reply-to: The message of 31 Mar 83 16:48-EST from Robert W. Kerns <RWK at SCRC-TENEX>

        Date: 31 Mar 1983 1648-EST
        From: Robert W. Kerns <RWK@SCRC-TENEX>
        Hmm, I always thought 1/3 and -1/-3 were the SAME rational number,
        not two different numbers.

    This is getting rediculous.  
Damned straight.
				 (si:make-rational 1 3) is not the same as
    (si:make-rational -1 -3) because internal functions are being called that
    shouldn't be.  In Zetalisp, the folloing are =:
    	(si:normalized-rational -1  3)
    	(si:normalized-rational  1 -3)
    	(si:normalized-rational -2  6)
    	(si:normalized-rational  2 -6)
That's what I said in a later sentence.  Perhaps before flaming
you should look at what I was replying to, which said that 1/3
and -1/-3 were different numbers.  Numbers have meaning independent
of syntax or Lisp representation, and sometimes people are being
careless of the distinction.  Even I didn't make the distinction
clear enough when I complained about the lack of it, since you
seem to think I'm somehow talking about Lisp objects rather than
numbers.

I am amazed at the amount of flaming generated by this.
Moon, you, and I have all said that Common Lisp implements
Arithmetic, and that SI:MAKE-RATIONAL is an internal function
part of neither Common Lisp nor Arithmetic.  Since we agree,
do we need to debate among ourselves too?
-------
 1-Apr-83 16:37:49-EST,2136;000000000000
Return-path: <RWK@SCRC-TENEX>
Date:  1 Apr 1983 1548-EST
From: Robert W. Kerns <RWK@SCRC-TENEX>
Subject: Re: Rational number bugs
To: DCP@SCRC-TENEX, jim@SCRC-VIXEN
cc: Batali@MIT-OZ, BUG-LISPM@MIT-OZ, Moon@SCRC-TENEX, RWK@SCRC-TENEX
In-Reply-To: The message of Thursday, 31 March 1983, 17:35-EST from David C. Plummer <DCP@SCRC-TENEX>


    Return-path: <DCP@SCRC-TENEX>
    Received: from SCRC-MYSTIC by SCRC-TENEX with CHAOS; Thu 31-Mar-83 17:37:31-EST
    Date: Thursday, 31 March 1983, 17:35-EST
    From: David C. Plummer <DCP@SCRC-TENEX>
    Subject: Re: Rational number bugs
    To: RWK@SCRC-TENEX, jim@SCRC-VIXEN
    Cc: Batali@MIT-OZ, BUG-LISPM@MIT-OZ, Moon@SCRC-TENEX
    In-reply-to: The message of 31 Mar 83 16:48-EST from Robert W. Kerns <RWK at SCRC-TENEX>

        Date: 31 Mar 1983 1648-EST
        From: Robert W. Kerns <RWK@SCRC-TENEX>
        Hmm, I always thought 1/3 and -1/-3 were the SAME rational number,
        not two different numbers.

    This is getting rediculous.  
Damned straight.
				 (si:make-rational 1 3) is not the same as
    (si:make-rational -1 -3) because internal functions are being called that
    shouldn't be.  In Zetalisp, the folloing are =:
    	(si:normalized-rational -1  3)
    	(si:normalized-rational  1 -3)
    	(si:normalized-rational -2  6)
    	(si:normalized-rational  2 -6)
That's what I said in a later sentence.  Perhaps before flaming
you should look at what I was replying to, which said that 1/3
and -1/-3 were different numbers.  Numbers have meaning independent
of syntax or Lisp representation, and sometimes people are being
careless of the distinction.  Even I didn't make the distinction
clear enough when I complained about the lack of it, since you
seem to think I'm somehow talking about Lisp objects rather than
numbers.

I am amazed at the amount of flaming generated by this.
Moon, you, and I have all said that Common Lisp implements
Arithmetic, and that SI:MAKE-RATIONAL is an internal function
part of neither Common Lisp nor Arithmetic.  Since we agree,
do we need to debate among ourselves too?
-------
 1-Apr-83 18:17:28-EST,583;000000000000
Return-path: <Straz@MIT-OZ>
Date: Friday, 1 April 1983, 18:12-EST
From: Steve Strassmann <Straz@MIT-OZ>
To: BUG-HARDWARE@MIT-OZ, bug-lispm@MIT-OZ

In MIT-Specific 18.1, System 93.37, ZMail 49.16, microcode 226, gc@2,
on Lisp Machine Six:


Loading qfasl files on cadr-6 is very flaky. I tried a (load "..") once and
I got an error that said some gubbish like "LDB-NIBBLE-FILE...  "

I just ^Z'ed out of the error and did a (load "..") again and it won.
I would guess this cadr is intermittently losing chaos bits while loading.

-Steve  6:12pm 1 April (it's not funny) 1-Apr-83 22:47:37-EST,2768;000000000000
Return-path: <kmp@MIT-MC>
Date: Friday, 1 April 1983, 13:26-EST
From: Kent M. Pitman <kmp at MIT-MC>
Subject: Add Patch Changed Definitions
To: BUG-LISPM at MC

In Symbolics System 222.186,...

Symptoms

  Having already created one patch for the KBE, I just did 
  m-X Add Patch Changed Definitions and was surprised by the results.
  Some of the added definitions were from my previous patch's buffer.
  The result of this is that since the patch buffer was in the USER
  package, when the patch was compiled, it complained about functions
  not being defined that I knew should be defined. Because my default
  package had been KBE, I was sort of expecting to see package prefixes
  on USER:symbols, but unfortunately since it was compiling in USER:,
  the symbols came out with no package prefixes (making me think they
  were in KBE:, where they belonged) and I couldn't figure out for a
  while why they were claiming to be undefined.

  I have been screwed on many occasions by the fact that the interaction
  between things like c-sh-C, the bounding COMPILER-LET, and the buffer
  package makes patched functions get compiled in the wrong package.

  Even sectionization does not work correctly on these buffers. If you have
  a patch

    #10R KBE:(COMPILER-LET ((PACKAGE (PKG-FIND-PACKAGE "KBE")))
    (defun f (x) x)
    )

  and you add (DEFUN G (X) X) by hand after it as in

    #10R KBE:(COMPILER-LET ((PACKAGE (PKG-FIND-PACKAGE "KBE")))
    (defun f (x) x)
    (defun g (x) x)
    )

  (ZWEI:CHECK-INTERVAL-SECTIONS (ZWEI:BP-NODE (POINT))) while on the line holding
  G's definition, you find that USER:G and not KBE:G gets the section info.

Commentary

  The problem above is that when I did the m-X Add Patch Changed Definitions,
  it did NOT add the #10R KBE:(COMPILER-LET ...) stuff. It added only the most
  local information, which was not correct. The second patch ended up with
  #10R KBE:(COMPILER-LET ...), which is wrong.

  Many (most?) patchable systems have a single package which pervades
  the system. The exception to this may be the System system itself.
  I claim that the right thing is for the patch file for a system to
  have "Package:<something>" in it based on the "Package:" spec in the
  attribute list of the first buffer from which patches come. The hack
  of saying #10R KBE:(COMPILER-LET ((PACKAGE (PKG-FIND-PACKAGE "KBE"))) ...)
  should be resorted to IFF there is a change from the default package
  for some subsequent patch (and if someone can't think of some better way
  to do this, which I assume is the case.

  Independently of this, the system should at least query before adding
  changed definitions from one patch buffer into another.

--kmp
 2-Apr-83 21:06:48-EST,1788;000000000000
Return-path: <LEVITT@MIT-OZ>
Mail-From: LEVITT created at  2-Apr-83 20:59:51
Date: Sat, 2 Apr 1983  20:59 EST
From: LEVITT@MIT-OZ
To:   info-lispm@MIT-OZ
Subject: CADR-4 move

CADR-4 has moved to the seventh floor.  This is partially because the
console moved out of the lounge when the lounge became an office, and
a number of people felt that it would be under-utilized in RG's
office.  It was hoped that because the seventh floor is warmer and
quieter than the ninth floor, CADR-4 would get more use there.  It was
also done because the Music Group wanted to put some special-purpose
hardware on one of the general-use AI Lab machines, for use as a
backup for their own machine.

Despite the fact that CADR-4 has moved to the seventh floor and a
piece of special hardware (a synthesizer) will be attached to it, it
remains a general AI lab resource.  The console will be in the alcove
near 797, where CADR6 is now, and CADR6's console will be moved to the
hammock station.  Just as before, any AI Lab member has as much right
to its use as any other AI Lab member, including members of the Music
Group.  No AI Lab member should attempt to punt any other AI Lab
member from it.  In this respect it is like CADR-6, which, despite the
fact that it is a general AI lab machine, also has special hardware on
it (an FPS array processor).  While the music group will possibly
attach synthesizer hardware to other 7th floor machines in the future
(e.g. CADR6 or CADR33), these too would remain general AI lab machines
like CADR4.

CADR-7's T-300 disk will be swapped for CADR-4's T-80 so that a music
band can fit on CADR-4 in addition to fresh bands.  We hope that its
having moved to a more comfortable location will encourage increased
use of the machine.
 3-Apr-83 00:07:54-EST,597;000000000000
Return-path: <kmp@MIT-MC>
Date: Saturday, 2 April 1983, 23:56-EST
From: Kent M. Pitman <kmp at MIT-MC>
Subject: (TV:MENU-CHOOSE NIL)
To: BUG-LISPM at OZ

In Symbolics System 222.186,...

(TV:MENU-CHOOSE NIL) pops up a cute little window about 5 pixels by 3 pixels.
You can hardly notice it if you don't expect it. The only thing you can do is
wave your mouse off of it. It might as well return NIL before it bothers trying
to hack windows.
--kmp

ps This happened several days ago and I don't remember reporting it.
   Apologies if I am duplicating something I've forgotten about.
 3-Apr-83 00:12:40-EST,346;000000000000
Return-path: <kmp@MIT-MC>
Date: Saturday, 2 April 1983, 23:58-EST
From: Kent M. Pitman <kmp at MIT-MC>
Subject: Network Break in Supdup
To: BUG-LISPM at OZ

In Symbolics System 222.186,...

I am forever hitting Network Break when I want Network B in a Supdup window.
Couldn't Network Break be defined to also mean give me a breakpoint?
 3-Apr-83 01:40:27-EST,564;000000000000
Return-path: <barmar@MIT-MULTICS>
Date: Sunday, 3 April 1983, 01:38-EST
From: Barry Margolin <Margolin at MIT-Multics>
Sender: barmar at MIT-MULTICS
Subject: GC vs. Chaos NCP
To: BUG-LISPM at OZ

In Release 4.0, System 222.186, Zmail 74.43, Experimental Macsyma 6.13,
site configuration 12, on Zarniwoop:

I am just guessing, but it looked to me like I lost all my Chaos
connections a little while ago because the GC was monopolizing the
processor for too long.  I think that it should prefer passing the GC
point-of-no-return to losing connections.
 3-Apr-83 03:02:49-EST,947;000000000000
Return-path: <barmar@MIT-MULTICS>
Date: Sunday, 3 April 1983, 02:59-EST
From: Barry Margolin <Margolin at MIT-Multics>
Sender: barmar at MIT-MULTICS
Subject: ZWEI:*CONVERSE-MODE*
To: BUG-LISPM at OZ

In Release 4.0, System 222.186, Zmail 74.43, Experimental Macsyma 6.13,
site configuration 12, on Zarniwoop:

I can't seem to get the variable ZWEI:*CONVERSE-MODE* to stay set to
:POP-UP.  I set it, but as soon as I get a message it sets it to
:NOTIFY, and just notifies me.

OK, I just looked at the source, and there is this kludge that is
screwing me.  My init file sets both ZWEI:*CONVERSE-MODE*
and ZWEI:*CONVERSE-AUTO-EXPOSE-P*, and since I set the former to the
default value, it is deciding that I am using the obsolete one and
assuming that I want :NOTIFY.  Well, I fixed my init file, but there has
to be a better way for this heuristic to work (maybe SETQ should warn
the user if it is given an obsolete variable).
 3-Apr-83 06:52:04-EST,2876;000000000000
Return-path: <lispm@MIT-OZ>
Date: Sunday, 3 April 1983, 06:51-EST
From: The Lisp Machine <lispm@MIT-OZ>
To: BUG-LISPM@MIT-OZ

In MIT-Specific 18.1, System 93.39, ZMail 49.17, Local-File 43.2,
MagTape 14.2, FILE-Server 6.4, microcode 226, FileComputer,
on Lisp Machine One:



I aborted out of the error that I got when there was an attempt to 
send on a connection that had been closed by the foreign host.

>>TRAP 7617 (ARGTYP ARRAY M-A 0 FALL-THROUGH AREF)
The first argument to AREF, NIL, was of the wrong type.
The function expected an array.
Backtrace from the debugger:

Additional information supplied with call:
 Expecting 3 values

(:METHOD FILE-DATA-STREAM-MIXIN CLOSE) (P.C. = 45)
  (SELF is #<FILE-OUTPUT-CHARACTER-STREAM "OZ:SRC:<L.FILE2>SERVER.LISP" 30063516>)

 Arg 0 (OPERATION): CLOSE
 Arg 1 (ABORTP): :ABORT


(:METHOD FILE-OUTPUT-CHARACTER-STREAM :COMBINED CLOSE) (P.C. = 70)
  (SELF is #<FILE-OUTPUT-CHARACTER-STREAM "OZ:SRC:<L.FILE2>SERVER.LISP" 30063516>)

 Rest arg (.DAEMON-CALLER-ARGS.): (CLOSE :ABORT)
Local 1 (.DAEMON-MAPPING-TABLE.): #<ART-16B-4 4706121>
Local 2 (.VAL1.): NIL
Local 3 (.VAL2.): NIL
Local 4 (.VAL3.): NIL


ZWEI:WRITE-FILE-INTERNAL (P.C. = 361)

 Arg 0 (PATHNAME): #FS:TOPS20-PATHNAME "OZ:SRC:<L.FILE2>SERVER.LISP"
 Arg 1 (BUFFER): #<ZMACS-BUFFER "SERVER.LISP SRC:<L.FILE2> OZ:" 27765167>
Local 0 (PLIST): (:MODE :LISP PACKAGE :FILE-SYSTEM ...)
Local 1 (G8609): #<FILE-OUTPUT-CHARACTER-STREAM "OZ:SRC:<L.FILE2>SERVER.LISP" 30063516>
Local 2 (.FILE-ABORTED-FLAG.): :ABORT
Local 3 (G8612): (CLOSE :ABORT)
Local 4 (G8613): (20 . 0)
Local 5 (ERROR-OBJECT): NIL
Local 6 (*SELECTQ-ITEM*): NIL
Local 7 (STREAM): #<FILE-OUTPUT-CHARACTER-STREAM "OZ:SRC:<L.FILE2>SERVER.LISP" 30063516>


ZWEI:SAVE-BUFFER (P.C. = 166)

 Arg 0 (BUFFER): #<ZMACS-BUFFER "SERVER.LISP SRC:<L.FILE2> OZ:" 27765167>
Local 0 (FILE-ID): (#FS:TOPS20-PATHNAME "OZ:SRC:<L.FILE2>SERVER.LISP.35" . 23445773505)
Local 1 (PATHNAME): #FS:TOPS20-PATHNAME "OZ:SRC:<L.FILE2>SERVER.LISP"
Local 2 (FILE-FILE-ID): (#FS:TOPS20-PATHNAME "OZ:SRC:<L.FILE2>SERVER.LISP.35" . 23445773505)
Local 3 (G8593): #<FILE-PROBE-STREAM "OZ:SRC:<L.FILE2>SERVER.LISP" 30063347>
Local 4 (.FILE-ABORTED-FLAG.): NIL
Local 5 (S): #<FILE-PROBE-STREAM "OZ:SRC:<L.FILE2>SERVER.LISP" 30063347>


ZWEI:COM-SAVE-FILE (P.C. = 61)



Remainder of stack:

ZWEI:COMMAND-EXECUTE (P.C. = 100)
ZWEI:MAKE-EXTENDED-COMMAND-INTERNAL (P.C. = 103)
ZWEI:COMMAND-EXECUTE (P.C. = 100)
ZWEI:PROCESS-COMMAND-CHAR (P.C. = 67)
(:METHOD ZWEI:WINDOW :EDIT) (P.C. = 465)
(:INTERNAL (:METHOD ZWEI:ZMACS-WINDOW :COMBINED :EDIT) 0) (P.C. = 74)
FUNCALL (P.C. = 25)
(:METHOD ZWEI:DISPLAYER :AROUND :EDIT) (P.C. = 31)
(:METHOD ZWEI:ZMACS-WINDOW :COMBINED :EDIT) (P.C. = 47)
ZWEI:ZMACS-WINDOW-TOP-LEVEL (P.C. = 46)
SI:PROCESS-TOP-LEVEL (P.C. = 121)
 3-Apr-83 15:55:21-EST,339;000000000000
Return-path: <SJOBRG.ANDY@MIT-OZ>
Mail-From: SJOBRG.ANDY created at  3-Apr-83 10:31:07
Date:  3 Apr 1983 1031-EST
From: Andrew Scott Beals <SJOBRG.ANDY@MIT-OZ>
Subject: cadr-20's mouse is broken.
To: bug-lispm@MIT-OZ

. . . it will trach horizontally just fine, but it gives no vertical motion whatsoever.
*sigh*			-andy
-------
 3-Apr-83 16:02:12-EST,275;000000000000
Return-path: <SJOBRG.ANDY@MIT-OZ>
Mail-From: SJOBRG.ANDY created at  3-Apr-83 13:33:48
Date:  3 Apr 1983 1333-EST
From: Andrew Scott Beals <SJOBRG.ANDY@MIT-OZ>
Subject: cadr-20's mouse seems to be working again. it's flakey tho.
To: bug-lispm@MIT-OZ

*sigh*
-------
 3-Apr-83 16:05:10-EST,454;000000000000
Return-path: <Straz@MIT-OZ>
Date: Sunday, 3 April 1983, 14:40-EST
From: Steve Strassmann <Straz@MIT-OZ>
To: BUG-LISPM@MIT-OZ

In MIT-Specific 18.1, System 93.37, ZMail 49.16, microcode 226, gc@2,37,
on Lisp Machine Nine:

In the window-oriented error handler:

The SET ARG feature which lets you mouse and change an arg or local in the current frame is
a nice feature, but it seems to only make the locals mouse sensitive. The args aren't.

 3-Apr-83 16:08:03-EST,367;000000000000
Return-path: <Straz@MIT-OZ>
Date: Sunday, 3 April 1983, 15:08-EST
From: Steve Strassmann <Straz@MIT-OZ>
Subject: Suggestion
To: bug-lispm@MIT-OZ


Right now, package-declare takes an arglist of 
 &quote package-name superior-name size nil &rest body

Why not make it

 &quote package-name &optional (superior-name 'global) (size 1000) (nil nil) &rest body 3-Apr-83 22:50:25-EST,1150;000000000000
Return-path: <kmp@MIT-MC>
Date: Sunday, 3 April 1983, 22:24-EST
From: Kent M. Pitman <kmp at MIT-MC>
Subject: UNWIND-PROTECT
To: BUG-LISPM at MC
Cc: KBE-I-FILE at OZ

It really bothers me that UNWIND-PROTECT doesn't indent reasonably. Couldn't
it treat the unwind forms as a body? eg,

(defmethod (queue :modify-queue-contents) (fn)
  (with-lock lock-cell
    (unwind-protect (setq storage (funcall fn (copylist storage)))
      (setq tail-pointer
	    (cond (storage (last storage)) ;inefficient, but necessary
		  (t (locf storage)))))))
rather than

(defmethod (queue :modify-queue-contents) (fn)
  (with-lock lock-cell
    (unwind-protect (setq storage (funcall fn (copylist storage)))
		    (setq tail-pointer
			  (cond (storage
				 (last storage)) ;inefficient, but necessary
				(t (locf storage)))))))

In addition to saving on vertical space, it's a useful debugging aid
since it tells you if you are in the body part yet. When debugging
UNWIND-PROTECT, most things get evaluated sequentially regardless of
which part they're in, so the indentation helps you notice a case that
would run fine in many tests.
 4-Apr-83 02:21:43-EST,1818;000000000000
Return-path: <IAN@MIT-OZ>
Mail-From: IAN created at  4-Apr-83 02:20:39
Date: 4 Apr 1983  02:20 EST (Mon)
From: Ian Macky <Ian@MIT-OZ>
To:   Bug-MAIL@MIT-OZ
Cc:   Bug-LISPM@MIT-OZ, HDT@MIT-OZ
Subject: Mail to LISPMs

I found XMAILR once again hung, working on this queue file:
-------
=RETRANSMIT: 3-Apr-83 22:02
=NOTIFY: 6-Apr-83 07:29
=DEQUEUE: 18-Apr-83 07:29
_MIT-OZ
HDT
MIT-LISPM-27
hdt

Date:  3 Apr 1983 0729-EST
From: Howard Daniel Trachtman <Hdt%at MIT-OZ>
Subject: more
To: hdt%at MIT-LISPM-27


test of mail.
-------

Running some experiments on various LMs showed that they do not all
follow protocol.  LM27 (running 93.39), the one in question, would
accept "HDT" for a recipient and refuse random other ones, but would
never give any sort of acknowledgment after sucking in the message
text - this is presumably where XMAILR is hanging: waiting for that
response.  I went over and found LM27 with about 6 or 7 dead
MAIL-server processes', all of which died of the same thing, which
went like

#<FC-LISPM-CHARACTER-OUTPUT-STREAM "FC: PS: hdt; hdt|MAIL#"> received
a :NEXT-INPUT-BUFFER message, which went unclaimed (arg2 was NIL),
while in
#<FC-LISPM-...> <--
 :SI-INSTANCE-HASH-FAILURE <--
 (:METHOD FC-OUTPUT-STREAM :GET-OLD-DATA)

LM22 (222.186) would open the connection but never answer anything at
all; AP1 (also 222.186) would do it all correctly.  Various others
like LM1 would do the usual "-Lisp Machines do not accept mail, etc
etc".

Howie, inevitably when XMAILR is found wedged it's because of one of
your "tests" (either that or mail to some Multics).  There are other
ways to "test" any mailing stuff you're working on that running them
through XMAILR (try the @RFC program, for instance).  Please be more
careful from now on.
 4-Apr-83 04:50:33-EST,1160;000000000000
Return-path: <MOON@SCRC-TENEX>
Date: Sunday, 3 April 1983  21:23-EST
From: MOON at SCRC-TENEX
To:   Barry Margolin <Margolin at MIT-Multics>
Cc:   BUG-LISPM at OZ
Subject: GC vs. Chaos NCP
In-reply-to: The message of 3 Apr 1983 01:38-EST from Barry Margolin <Margolin at MIT-Multics>

    Date: Sunday, 3 April 1983, 01:38-EST
    From: Barry Margolin <Margolin at MIT-Multics>

    I am just guessing, but it looked to me like I lost all my Chaos
    connections a little while ago because the GC was monopolizing the
    processor for too long.  I think that it should prefer passing the GC
    point-of-no-return to losing connections.
It has no choice.  The GC works as hard as it can to use a minimal amount
of the processor.  But when there are large objects that have to be copied
before execution can proceed, it takes a certain amount of time to copy
them.  Sometimes right after a flip a large amount of data structure needed
just to run the scheduler, network, and so on is in oldspace and has to
be evacuated before anything at all can run.  From the information available
I would guess that this is what is happening to you.
 4-Apr-83 04:51:07-EST,411;000000000000
Return-path: <MOON@SCRC-TENEX>
Date: Sunday, 3 April 1983  21:25-EST
From: MOON at SCRC-TENEX
To:   Kent M. Pitman <kmp at MIT-MC>
Cc:   BUG-LISPM at OZ
Subject: (TV:MENU-CHOOSE NIL)
In-reply-to: The message of 2 Apr 1983 23:56-EST from Kent M. Pitman <kmp at MIT-MC>

This has been reported before (probably by you, although I don't remember).
It will get fixed eventually if it hasn't been already.
 4-Apr-83 04:51:55-EST,568;000000000000
Return-path: <MOON@SCRC-TENEX>
Date: Sunday, 3 April 1983  21:27-EST
From: MOON at SCRC-TENEX
To:   Kent M. Pitman <kmp at MIT-MC>
Cc:   BUG-LISPM at OZ
Subject: (TV:MENU-CHOOSE NIL)
In-reply-to: The message of 2 Apr 1983 23:56-EST from Kent M. Pitman <kmp at MIT-MC>

Please ignore my previous message on this subject.  I was confused
thinking you had said (TV:MENU-CHOOSE '(... NIL ...)) and didn't
manage to intercept the outgoing bogosity in time.

What would have (TV:MENU-CHOOSE NIL) do?  Error?  Return NIL?  Pop
up a menu that says "no choices"?
 4-Apr-83 09:42:10-EST,3027;000000000000
Return-path: <HDT@MIT-OZ>
Date: Monday, 4 April 1983, 09:38-EST
From: Howard D. Trachtman <HDT at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In MIT-Specific 18.1, System 93.39, ZMail 49.17, microcode 226, gc@2,
on Ford Prefect:

This is a very inelegant way for (chaos:connect 1 "status") to bomb out.
I'm getting screwed in a number of places by this.

>>TRAP 16234 (TRANS-TRAP)
The function NIL is undefined.
Backtrace from the debugger:

CHAOS:CONNECT (P.C. = 265)

 Arg 0 (ADDRESS): 1
 Arg 1 (CONTACT-NAME): "status"
   --Defaulted args:--
 Arg 2 (WINDOW-SIZE): 15
 Arg 3 (TIMEOUT): 1130
Local 0 (CONN): #<CHAOS Connection to NIL status 30546340>
Local 1 (REAL-ADDRESS): 1
Local 2 (HOST-NAME): NIL
Local 3 (G5419): ("Try the connection again.")
Local 4 (G5419): (SYS:REMOTE-NETWORK-ERROR RETRY-CONNECTION T ("Try the connection again.") ...)
Local 5 (G5419): ((SYS:REMOTE-NETWORK-ERROR RETRY-CONNECTION T ** ...) (** ** T ** ...) T (** ** T ** ...) ...)
Local 6 (*SELECTQ-ITEM*): NIL
Local 7 (PKT): NIL
Local 8 (STRING): NIL


SI:*EVAL (P.C. = 1145)

 Arg 0 (FORM): (CHAOS:CONNECT 1 "status")
Local 0 (ARGNUM): 2
Local 1 (FCTN): #<DTP-FEF-POINTER CHAOS:CONNECT 2040170>
Local 2 (ARG-DESC): 400204
Local 3 (NUM-ARGS): 2
Local 4 (CLOSURE-PASSED): NIL
Local 5 (LAMBDA-LIST): NIL
Local 6 (LL): NIL
Local 7 (QUOTE-STATUS): NIL
Local 8 (REST-FLAG): NIL
Local 9 (ARGL): NIL
Local 10 (ADL): NIL
Local 11 (ITEM): NIL
Local 12 (*SELECTQ-ITEM*): NIL


Additional information supplied with call:
 Values to be collected for MULTIPLE-VALUE-LIST

SI:EVAL-ABORT-TRIVIAL-ERRORS (P.C. = 44)

 Arg 0 (TOP-LEVEL-FORM): (CHAOS:CONNECT 1 "status")
Local 0 (G0716): ((SYS:TOO-FEW-ARGUMENTS SYS:TOO-MANY-ARGUMENTS SYS:CELL-CONTENTS-ERROR SYS:WRONG-TYPE-ARGUMENT ...) SI:EVAL-ABORT-TRIVIAL-ERRORS-HANDLER)
Local 1 (G0717): ((** SI:EVAL-ABORT-TRIVIAL-ERRORS-HANDLER))


BREAK (P.C. = 443)

 Arg 0 (TAG): BREAK
   --Defaulted args:--
 Arg 1 (CONDITIONAL): T
Local 0 (TEM): LIST
Local 1 (SAVED-BUFFER): NIL
Local 2 (SAVED-BUFFER-POSITION): NIL
Local 3 (PROGW-VARS-AND-VALS): NIL
Local 4 (G8013): ("Return to BREAK ~A." BREAK)
Local 5 (G8013): ((SYS:ABORT ERROR) ("Return to BREAK ~A." BREAK) T ("Return to BREAK ~A." BREAK) ...)
Local 6 (G8014): NIL
Local 7 (VALUE): NIL


TV:KBD-INTERCEPT-BREAK (P.C. = 27)

 Arg 0 (CHAR): 601
 Rest arg (IGNORE): (#<ZMACS-WINDOW-PANE Zmacs Window Pane 1 15403703 exposed>)


Remainder of stack:

EH:FOOTHOLD (P.C. = 20)
PROCESS-WAIT (P.C. = 52)
TV:KBD-IO-BUFFER-GET (P.C. = 222)
(METHOD TV:STREAM-MIXIN ANY-TYI) (P.C. = 104)
ZWEI:MACRO-TYI (P.C. = 567)
ZWEI:MACRO-STREAM-IO-TYI (P.C. = 46)
ZWEI:INPUT-WITH-PROMPTS (P.C. = 136)
(METHOD ZWEI:WINDOW EDIT) (P.C. = 426)
(INTERNAL (METHOD ZWEI:ZMACS-WINDOW COMBINED EDIT) 0) (P.C. = 74)
FUNCALL (P.C. = 25)
(METHOD ZWEI:DISPLAYER AROUND EDIT) (P.C. = 31)
(METHOD ZWEI:ZMACS-WINDOW COMBINED EDIT) (P.C. = 47)
ZWEI:ZMACS-WINDOW-TOP-LEVEL (P.C. = 46)
SI:PROCESS-TOP-LEVEL (P.C. = 121)
 4-Apr-83 19:52:13-EST,2435;000000000000
Return-path: <kmp@MIT-MC>
Date: Monday, 4 April 1983, 19:45-EST
From: Kent M. Pitman <kmp at MIT-MC>
Subject: Adding idiot-proofing to the patch facility
To: BUG-LISPM at MIT-MC

In Release 4.1, System 222.186, ...

The patch facility could be a lot smarter, especially if you could make
sectionization work right in patch buffers as I've complained about 
before. Here are some things I would like to see the patch system be 
able to do:

 * Multiple patches of the same definition should offer to replace one another. 
   Redundant cruft should try not to occur. For example, if I do Add Patch
   on a large region of code and then find one of the things was buggy before
   finishing the patch, I'll frequently do Add Patch on just the new definition
   and there will be two definitions in the patch file. This is pretty wasteful.

 * Finish Patch should also warn me if the definition in my source file 
   buffer isn't the same as the version in my patch buffer (probably by 
   calling READ and using Lisp EQUAL for comparison, so that adding comments
   doesn't become a burden). For example, I got a compiler warning in my 
   patch buffer just now and I aborted the Finish Patch. I then fixed the
   bug in my source file buffer and did Finish Patch again. It hit the same
   error of course, because Finish Patch hadn't said anything about my 
   needing to modify the patch buffer and it had slipped my mind to do so.
   At the very least, Finish Patch should remind one that both source and
   patch have to be edited if they decide to abort the Finish Patch due to
   compiler warnings.

 * Patches for functions which are changed since their last compilation could
   be warned about at Add Patch time. For example, this problem I just had in
   Add Patch was caused by my having tested a version of the function and then
   making another change which I forgot about. I remember in the early days
   of the Lisp Machine, Add Patch used to sometimes (always?) type out
   "I assume you've tested this." ... That was a bit much, but I understand
   the sentiment of the guy who put it in.

Adding patches to a system used by more than one person is a big responsibility,
especially due to the fact that if there's one buggy patch, the rest of the
patches can't trivially be loaded. Any extra help the patch system can provide
in making this easier would be a good thing.
--kmp
 5-Apr-83 05:54:23-EST,8713;000000000000
Return-path: <PGS@MIT-OZ>
Date: Tuesday, 5 April 1983, 05:54-EST
From: Patrick Sobalvarro <PGS@MIT-OZ>
To: BUG-LISPM@MIT-OZ

In MIT-Specific 18.1, System 93.40, ZMail 49.17, microcode 226,
on Lisp Machine Twenty-five:


Insert your description of the circumstances here:

I was doing M-. and trying to get at a flavor definition (I don't know if
that's possible), and had typed (flavor<space> when I got this.

>>TRAP 7617 (ARGTYP ARRAY M-A 0 FALL-THROUGH AREF)
The first argument to AREF, NIL, was of the wrong type.
The function expected an array.
Backtrace from the debugger:

ZWEI:COMPLETE-CHUNK-COMPARE (P.C. = 155)

 Arg 0 (STR): NIL
 Arg 1 (DELIMS): (40 55)
 Arg 2 (NCHUNKS): 1
 Arg 3 (CHUNKS): #<ART-Q-24 10506227>
 Arg 4 (CHUNK-DELIMS): #<ART-32B-24 10506257>
 Arg 5 (TEMS): #<ART-Q-1 10506312>
 Arg 6 (RCHUNKS): #<ART-Q-1 10506314>
   --Defaulted args:--
 Arg 7 (NCHUNKS-FOR-ORDERING): 1
Local 0 (LEN2): 3
Local 1 (I): 0
Local 2 (J): 0
Local 3 (K): NIL
Local 4 (LEN1): 7
Local 5 (CHUNK): "(flavor"
Local 6 (EXACT-SO-FAR): T
Local 7 (DELIM): NIL
Local 8 (J1): 0
Local 9 (K1): 0
Local 10 (CH1): 50
Local 11 (CH2): NIL


Additional information supplied with call:
 Expecting 5 values

ZWEI:COMPLETE-STRING (P.C. = 312)

 Arg 0 (STRING): "(flavor"
 Arg 1 (ALIST): (NIL NIL NIL NIL ...)
 Arg 2 (DELIMS): (40 55)
 Arg 3 (DONT-NEED-LIST): T
 Arg 4 (CHAR-POS): 7
 Arg 5 (TRUNC): T
 Arg 6 (IGNORE-TRAILING-SPACE): NIL
Local 0 (NCHUNKS): 1
Local 1 (CHUNKS): #<ART-Q-24 10506227>
Local 2 (CHUNK-DELIMS): #<ART-32B-24 10506257>
Local 3 (FILLS): #<ART-Q-1 10506310>
Local 4 (CHAMB): #<ART-1B-1 10506316>
Local 5 (TEMS): #<ART-Q-1 10506312>
Local 6 (RETS): NIL
Local 7 (RCHUNKS): #<ART-Q-1 10506314>
Local 8 (TEM): -1
Local 9 (LEN): 7
Local 10 (COMPLETED-P): NIL
Local 11 (CHAR-CHUNK): 0
Local 12 (CHAR-OFFSET): 7
Local 13 (MAGIC-POS): NIL
Local 14 (TAIL): (NIL NIL NIL NIL ...)
Local 15 (ONE-BEFORE-TAIL): (NIL NIL NIL NIL ...)
Local 16 (I): 10
Local 17 (J): 7
Local 18 (L): (NIL NIL NIL NIL ...)
Local 19 (ALL-AMBIG): NIL
Local 20 (FILL): NIL
Local 21 (LEN1): NIL


ZWEI:COMPLETE-LINE (P.C. = 107)

 Arg 0 (FORWARD-OK): NIL
 Arg 1 (MUST-COMPLETE): NIL
 Arg 2 (INSERT): 40
   --Defaulted args:--
 Arg 3 (IGNORE-TRAILING-SPACE): NIL
Local 0 (NSTR): NIL
Local 1 (POSS): NIL
Local 2 (WINP): NIL
Local 3 (LINE): "(flavor"
Local 4 (POINT): ("(flavor" 7 NORMAL)
Local 5 (CHAR-POS): 7
Local 6 (EOLP): T
Local 7 (MAGIC-POS): NIL


ZWEI:COM-SELF-INSERT-AND-COMPLETE (P.C. = 60)



Additional information supplied with call:
 Expecting 3 values

ZWEI:COMMAND-EXECUTE (P.C. = 100)

 Arg 0 (COMMAND): ZWEI:COM-SELF-INSERT-AND-COMPLETE
 Arg 1 (CHAR): 40
 Arg 2 (PREFIX-CHAR): NIL
 Arg 3 (HOOK-LIST): (ZWEI:SHIFT-LOCK-HOOK)
Local 0 (G4734): NIL
Local 1 (HOOK): ZWEI:SHIFT-LOCK-HOOK


ZWEI:PROCESS-COMMAND-CHAR (P.C. = 67)

 Arg 0 (CH): 40
Local 0 (VALUE): NIL
Local 1 (LINE): NIL
Local 2 (INDEX): NIL
Local 3 (G5246): NIL
Local 4 (HOOK): NIL


(METHOD ZWEI:WINDOW EDIT) (P.C. = 465)
  (SELF is #<ZWEI-MINI-BUFFER Zwei Mini Buffer 1 15415131 exposed>)

 Arg 0 (OPERATION): EDIT
   --Defaulted args:--
 Arg 1 (IGNORE): NIL
 Arg 2 (*COMTAB*): #<COMTAB ZWEI:COMPLETING-READER-COMTAB 24000547>
 Arg 3 (*MODE-LINE-LIST*): ("Edit definition:" (RIGHT-FLUSH " (Completion)"))
 Arg 4 (TOP-LEVEL-P): NIL
Local 0 (TEM1): ((** ** T ** ...) (** ** T ** ...))
Local 1 (G1278): ("Return to editor command loop.")
Local 2 (G1278): ((SYS:ABORT ERROR) ("Return to editor command loop.") T ("Return to editor command loop.") ...)
Local 3 (CH): 40


Additional information supplied with call:
 SYS:ADI-FEXPR-CALL

(INTERNAL (METHOD ZWEI:ZWEI-WITHOUT-TYPEOUT COMBINED EDIT) 0) (P.C. = 63)

 Rest arg (.DAEMON-CALLER-ARGS.): (EDIT)
Local 1 (.DAEMON-MAPPING-TABLE.): #<ART-16B-7 16004667>


FUNCALL (P.C. = 25)

 Arg 0 (FN): #<DTP-FEF-POINTER (INTERNAL (METHOD ZWEI:ZWEI-WITHOUT-TYPEOUT COMBINED EDIT) 0) 17145571>
 Rest arg (ARGS): (EDIT)


(METHOD ZWEI:DISPLAYER AROUND EDIT) (P.C. = 31)
  (SELF is #<ZWEI-MINI-BUFFER Zwei Mini Buffer 1 15415131 exposed>)

 Arg 0 (OPERATION): EDIT
 Arg 1 (CONT): #<DTP-FEF-POINTER (INTERNAL (METHOD ZWEI:ZWEI-WITHOUT-TYPEOUT COMBINED EDIT) 0) 17145571>
 Arg 2 (MT): #<ART-16B-7 16004667>
 Arg 3 (ARGS): (EDIT)
   --Defaulted args:--
 Arg 4 (EDITOR-CLOSURE-1): NIL
 Rest arg (IGNORE): NIL


(METHOD ZWEI:ZWEI-WITHOUT-TYPEOUT COMBINED EDIT) (P.C. = 47)
  (SELF is #<ZWEI-MINI-BUFFER Zwei Mini Buffer 1 15415131 exposed>)

 Rest arg (.DAEMON-CALLER-ARGS.): (EDIT)
Local 1 (.DAEMON-MAPPING-TABLE.): #<ART-16B-7 16004667>


ZWEI:EDIT-IN-MINI-BUFFER (P.C. = 345)

 Arg 0 (COMTAB): #<COMTAB ZWEI:COMPLETING-READER-COMTAB 24000547>
 Arg 1 (INITIAL-CONTENTS): NIL
 Arg 2 (INITIAL-CHAR-POS): NIL
 Arg 3 (MODE-LINE-LIST): ("Edit definition:" (RIGHT-FLUSH " (Completion)"))
Local 0 (BP): ("(flavor" 7 NORMAL)
Local 1 (VAL): NIL
Local 2 (SUCCESSFUL): NIL
Local 3 (TOP-W): #<ZMACS-FRAME Zmacs Frame 1 15400510 exposed>
Local 4 (OSUBST): #<ZMACS-WINDOW-PANE Zmacs Window Pane 1 15403703 exposed>
Local 5 (INTERVAL): #<NODE 24540415>
Local 6 (G3378): NIL
Local 7 (CHAR): NIL


ZWEI:COMPLETING-READ-FROM-MINI-BUFFER (P.C. = 101)

 Arg 0 (PROMPT): "Edit definition:"
 Arg 1 (*COMPLETING-ALIST*): #<ART-Q-LIST-100 24000676>
 Arg 2 (*COMPLETING-IMPOSSIBLE-IS-OK-P*): T
   --Defaulted args:--
 Arg 3 (INITIAL-COMPLETE): NIL
 Arg 4 (*COMPLETING-HELP-MESSAGE*): NIL
 Arg 5 (*COMPLETING-DOCUMENTER*): NIL
Local 0 (CONTENTS): NIL
Local 1 (CHAR-POS): NIL


Additional information supplied with call:
 Expecting 3 values

ZWEI:READ-FUNCTION-NAME (P.C. = 246)

 Arg 0 (PROMPT): "Edit definition:"
 Arg 1 (DEFAULT): NIL
 Arg 2 (MUST-BE-DEFINED): ZWEI:AARRAY-OK
 Arg 3 (STRINGP): ZWEI:MULTIPLE-OK
Local 0 (EXPLICIT-PACKAGE-P): NIL
Local 1 (NAME): NIL
Local 2 (SYM): NIL
Local 3 (ERROR-P): NIL
Local 4 (NON-LETTER-INDEX): NIL
Local 5 (G1156): NIL
Local 6 (SPEC): NIL


ZWEI:COM-EDIT-DEFINITION (P.C. = 77)

Local 0 (SPEC): NIL
Local 1 (STRING): NIL
Local 2 (EXPLICIT-PACKAGE-P): NIL
Local 3 (THIS-PKG-SYMBOL): NIL
Local 4 (FOUNDP): NIL


Additional information supplied with call:
 Expecting 3 values

ZWEI:COMMAND-EXECUTE (P.C. = 100)

 Arg 0 (COMMAND): ZWEI:COM-EDIT-DEFINITION
 Arg 1 (CHAR): 1056
 Arg 2 (PREFIX-CHAR): NIL
 Arg 3 (HOOK-LIST): (ZWEI:SHIFT-LOCK-HOOK)
Local 0 (G4734): NIL
Local 1 (HOOK): ZWEI:SHIFT-LOCK-HOOK


ZWEI:PROCESS-COMMAND-CHAR (P.C. = 67)

 Arg 0 (CH): 1056
Local 0 (VALUE): NIL
Local 1 (LINE): NIL
Local 2 (INDEX): NIL
Local 3 (G5246): NIL
Local 4 (HOOK): NIL


(METHOD ZWEI:WINDOW EDIT) (P.C. = 465)
  (SELF is #<ZMACS-WINDOW-PANE Zmacs Window Pane 1 15403703 exposed>)

 Arg 0 (OPERATION): EDIT
   --Defaulted args:--
 Arg 1 (IGNORE): NIL
 Arg 2 (*COMTAB*): #<COMTAB ZWEI:MODE-COMTAB 32656410>
 Arg 3 (*MODE-LINE-LIST*): ("ZMACS " "(" ZWEI:*MODE-NAME-LIST* ") " ...)
 Arg 4 (TOP-LEVEL-P): T
Local 0 (TEM1): ((** ** T ** ...))
Local 1 (G1278): ("Return to top level editor command loop.")
Local 2 (G1278): ((SYS:ABORT ERROR) ("Return to top level editor command loop.") T ("Return to top level editor command loop.") ...)
Local 3 (CH): 1056


Additional information supplied with call:
 SYS:ADI-FEXPR-CALL

(INTERNAL (METHOD ZWEI:ZMACS-WINDOW COMBINED EDIT) 0) (P.C. = 74)

 Rest arg (.DAEMON-CALLER-ARGS.): (EDIT)
Local 1 (.DAEMON-MAPPING-TABLE.): #<ART-16B-17 16007777>


FUNCALL (P.C. = 25)

 Arg 0 (FN): #<DTP-FEF-POINTER (INTERNAL (METHOD ZWEI:ZMACS-WINDOW COMBINED EDIT) 0) 17150006>
 Rest arg (ARGS): (EDIT)


(METHOD ZWEI:DISPLAYER AROUND EDIT) (P.C. = 31)
  (SELF is #<ZMACS-WINDOW-PANE Zmacs Window Pane 1 15403703 exposed>)

 Arg 0 (OPERATION): EDIT
 Arg 1 (CONT): #<DTP-FEF-POINTER (INTERNAL (METHOD ZWEI:ZMACS-WINDOW COMBINED EDIT) 0) 17150006>
 Arg 2 (MT): #<ART-16B-17 16007777>
 Arg 3 (ARGS): (EDIT)
   --Defaulted args:--
 Arg 4 (EDITOR-CLOSURE-1): NIL
 Rest arg (IGNORE): NIL


(METHOD ZWEI:ZMACS-WINDOW COMBINED EDIT) (P.C. = 47)
  (SELF is #<ZMACS-WINDOW-PANE Zmacs Window Pane 1 15403703 exposed>)

 Rest arg (.DAEMON-CALLER-ARGS.): (EDIT)
Local 1 (.DAEMON-MAPPING-TABLE.): #<ART-16B-17 16007777>


ZWEI:ZMACS-WINDOW-TOP-LEVEL (P.C. = 46)

 Arg 0 (FRAME): #<ZMACS-FRAME Zmacs Frame 1 15400510 exposed>


SI:PROCESS-TOP-LEVEL (P.C. = 121)

   --Defaulted args:--
 Arg 0 (IGNORE): NIL
Local 0 (G1393): ("Restart process ~A." "Zmacs Frame 1")
Local 1 (G1393): ((SYS:ABORT ERROR) ("Restart process ~A." "Zmacs Frame 1") T ("Restart process ~A." "Zmacs Frame 1") ...)
Local 2 (IGNORE): NIL
 5-Apr-83 06:04:18-EST,591;000000000000
Return-path: <PGS@MIT-OZ>
Date: Tuesday, 5 April 1983, 06:04-EST
From: Patrick Sobalvarro <PGS@MIT-OZ>
To: BUG-LISPM@MIT-OZ

In MIT-Specific 18.1, System 93.40, ZMail 49.17, microcode 226,
on Lisp Machine Twenty-five:

In the middle of typing at a Zmacs breakpoint, I got a notification that my
supdup window wanted to type out.  I had typed

(if (boundp '

and after the notification, this was redisplayed as

(if (boundpp '

^L showed that the second p was not really there.  

I've had other bugs like this when typing at a lips listener when a
notification arrived.
 5-Apr-83 09:33:19-EST,2621;000000000000
Return-path: <PGS@MIT-OZ>
Date: Tuesday, 5 April 1983, 09:31-EST
From: Patrick Sobalvarro <PGS@MIT-OZ>
To: BUG-LISPM@MIT-OZ

In MIT-Specific 18.1, System 93.40, ZMail 49.17, microcode 226,
on Lisp Machine Twenty-five:

I got this with (prompt-and-read ':number "~%Let's have a number: ").  The
manual says that prompt-and-read with will "insist on getting a number, forcing
the user to rub out anything else."  That sounds not terribly useful, but
getting an error which doesn't even have a proceed type for specifying a value
to try again is worse.

>>ERROR: FOO is not a number.
Backtrace from the debugger:

(PROPERTY NUMBER SI:PROMPT-AND-READ-FUNCTION) (P.C. = 36)

 Arg 0 (IGNORE): NUMBER
 Arg 1 (STREAM): SI:TERMINAL-IO-SYN-STREAM
Local 0 (NUMBER): FOO


(METHOD TV:STREAM-MIXIN RUBOUT-HANDLER) (P.C. = 365)
  (SELF is #<EDITOR-TYPEOUT-WINDOW Editor Typeout Window 1 15412514 exposed>)

 Arg 0 (OPERATION): RUBOUT-HANDLER
 Arg 1 (RUBOUT-HANDLER-OPTIONS): ((PROMPT SI:PROMPT-AND-READ-PROMPT-FUNCTION))
 Arg 2 (FUNCTION): #<DTP-FEF-POINTER (PROPERTY NUMBER SI:PROMPT-AND-READ-FUNCTION) 1550521>
 Rest arg (ARGS): (NUMBER SI:TERMINAL-IO-SYN-STREAM)
Local 1 (II): NIL
Local 2 (PROMPT-OPTION): (PROMPT SI:PROMPT-AND-READ-PROMPT-FUNCTION)
Local 3 (G8603): (SYS:READ-ERROR SI:CONDITION-CASE-THROW TV:G8602)
Local 4 (G8604): ((SYS:READ-ERROR SI:CONDITION-CASE-THROW TV:G8602) (** SI:EVAL-ABORT-TRIVIAL-ERRORS-HANDLER))
Local 5 (ERROR): NIL
Local 6 (*SELECTQ-ITEM*): NIL
Local 7 (FULL-RUBOUT-OPTION): NIL


(METHOD TV:TYPEOUT-WINDOW COMBINED RUBOUT-HANDLER) (P.C. = 52)
  (SELF is #<EDITOR-TYPEOUT-WINDOW Editor Typeout Window 1 15412514 exposed>)

 Rest arg (.DAEMON-CALLER-ARGS.): (RUBOUT-HANDLER (**) #<DTP-FEF-POINTER (PROPERTY NUMBER SI:PROMPT-AND-READ-FUNCTION) 1550521> NUMBER ...)
Local 1 (.DAEMON-MAPPING-TABLE.): #<ART-16B-7 16002360>


PROMPT-AND-READ (P.C. = 113)

 Arg 0 (OPTION): NUMBER
 Arg 1 (FORMAT-STRING): "~%Let's have a number: "
 Rest arg (FORMAT-ARGS): NIL
Local 1 (OPTION-TYPE): NUMBER
Local 2 (FUNCTION): #<DTP-FEF-POINTER (PROPERTY NUMBER SI:PROMPT-AND-READ-FUNCTION) 1550521>


SI:*EVAL (P.C. = 1145)

 Arg 0 (FORM): (PROMPT-AND-READ (QUOTE NUMBER) "~%Let's have a number: ")
Local 0 (ARGNUM): 2
Local 1 (FCTN): #<DTP-FEF-POINTER PROMPT-AND-READ 3525307>
Local 2 (ARG-DESC): 4000202
Local 3 (NUM-ARGS): 2
Local 4 (CLOSURE-PASSED): NIL
Local 5 (LAMBDA-LIST): NIL
Local 6 (LL): NIL
Local 7 (QUOTE-STATUS): NIL
Local 8 (REST-FLAG): NIL
Local 9 (ARGL): NIL
Local 10 (ADL): NIL
Local 11 (ITEM): NIL
Local 12 (*SELECTQ-ITEM*): NIL
 5-Apr-83 12:35:29-EST,1624;000000000000
Return-path: <Gumby@MIT-OZ>
Date: Tuesday, 5 April 1983, 12:36-EST
From: David Vinayak Wallace <Gumby@MIT-OZ>
To: BUG-LISPM@MIT-OZ

In MIT-Specific 18.1, System 93.41, ZMail 49.18, microcode 226, gc@2,b&w,
on Lisp Machine Four:

Insert your description of the circumstances here:

I did (hostat'oz). It started printing the hostat for the world, then
bombed.

This is definately strange. This has worked ok since system 50.

>>TRAP 16234 (TRANS-TRAP)
The function OZ is undefined.
Backtrace from the debugger:

SI:PRINT-FIXNUM-1 (P.C. = 46)

 Arg 0 (NUM): -4
 Arg 1 (RADIX): 10
 Arg 2 (STREAM): OZ
Local 0 (TEM): 0


SI:PRINT-FIXNUM-1 (P.C. = 36)

 Arg 0 (NUM): -42
 Arg 1 (RADIX): 10
 Arg 2 (STREAM): OZ
Local 0 (TEM): -4


SI:PRINT-FIXNUM-1 (P.C. = 36)

 Arg 0 (NUM): -420
 Arg 1 (RADIX): 10
 Arg 2 (STREAM): OZ
Local 0 (TEM): -42


SI:PRINT-FIXNUM (P.C. = 72)

 Arg 0 (X): -420
 Arg 1 (STREAM): OZ
Local 0 (TEM): NIL


FORMAT:FORMAT-CTL-DECIMAL (P.C. = 363)

 Arg 0 (ARG): 420
 Arg 1 (PARAMS): NIL
 Arg 2 (BASE): 10
Local 0 (*NOPOINT): T
Local 1 (WIDTH): NIL
Local 2 (PADCHAR): 40
Local 3 (COMMACHAR): 54
Local 4 (PLUS-P): NIL
Local 5 (X): NIL
Local 6 (G1247): NIL
Local 7 (L): NIL
Local 8 (I): NIL
Local 9 (CH): NIL


Remainder of stack:

FORMAT:FORMAT-CTL-OCTAL (P.C. = 26)
FORMAT:FORMAT-CTL-OP (P.C. = 53)
FORMAT:FORMAT-CTL-STRING (P.C. = 140)
FORMAT (P.C. = 176)
CHAOS:POLL-HOSTS (P.C. = 440)
HOSTAT (P.C. = 44)
SI:*EVAL (P.C. = 1145)
SI:EVAL-ABORT-TRIVIAL-ERRORS (P.C. = 44)
SI:LISP-TOP-LEVEL1 (P.C. = 254)
SI:LISP-TOP-LEVEL (P.C. = 35)
 5-Apr-83 13:24:33-EST,682;000000000000
Return-path: <RMS.G.DULCEY@MIT-OZ>
Mail-From: RMS.G.DULCEY created at  5-Apr-83 13:19:38
Date: Tue, 5 Apr 1983  13:19 EST
From: RMS.G.DULCEY@MIT-OZ
To:   Patrick Sobalvarro <PGS@MIT-OZ>
Cc:   BUG-LISPM@MIT-OZ
Subject: Getting at flavor definition
In-reply-to: Msg of 5 Apr 1983 05:54-EST from Patrick Sobalvarro <PGS>

Well, it is possible to get at a flavor definition.  If you want the defflavor,
just type the flavor name (no parens) and you will get what you want.

If you want to look at a method, you can type
(:method foo-flavor [method-type] operation)
and you will get the right thing.

Of course, typing the wrong thing shouldn't put you in the debugger!
 5-Apr-83 15:11:00-EST,540;000000000000
Return-path: <ZVONA@MIT-OZ>
Mail-From: ZVONA created at  5-Apr-83 15:04:13
Date: Tue, 5 Apr 1983  15:04 EST
From: ZVONA@MIT-OZ
To:   bug-lispm@MIT-OZ
Subject: flavor question
In-reply-to: Msg of 5 Apr 1983 14:38-EST from David Chapman <Zvona>

Is it reasonable that continue-whopper, if there is no method
for that message, just returns NIL without complaining?  It
seems to me that it should barf.

(defflavor foo () ())

(defwhopper (foo :mumble) () (continue-whopper 'asdf))

(send (make-instance 'foo) ':mumble) => NIL
 5-Apr-83 18:04:25-EST,958;000000000000
Return-path: <MLB@SPA-NIMBUS>
Date: Tuesday, 5 April 1983, 15:01-PST
From: MLB at SPA-NIMBUS
Subject: flavor question
To: ZVONA at MIT-OZ
Cc: bug-lispm at MIT-OZ
In-reply-to: The message of 5 Apr 83 12:04-PST from ZVONA at MIT-OZ

    Date: Tue, 5 Apr 1983  15:04 EST
    From: ZVONA@MIT-OZ
    Is it reasonable that continue-whopper, if there is no method
    for that message, just returns NIL without complaining?  It
    seems to me that it should barf.

    (defflavor foo () ())

    (defwhopper (foo :mumble) () (continue-whopper 'asdf))

    (send (make-instance 'foo) ':mumble) => NIL

It should call the tail pointer (default-handler).  The default handler
should be defined as the last resort on failure to find a primary method,
as opposed to a miss in the method table.  The default handler
could check if the key was in the table for itself, if it wants to
distinguish the cases (as si:flavor-unclaimed-message might).
 5-Apr-83 21:32:38-EST,830;000000000000
Return-path: <kmp@MIT-MC>
Date: Tuesday, 5 April 1983, 21:30-EST
From: Kent M. Pitman <kmp at MIT-MC>
Subject: (LAST locative)
To: BUG-LISPM at MIT-MC

In Symbolics System 222.186,...

If LAST is called on a locative, my feeling is that it should recurse
into it. I just had a program bug because I'd written:

  (when (cdr tail-pointer)
    (setq tail-pointer (last tail-pointer)))

The locative in question is usually a cons, but in the case that the
storage list is empty, tail-pointer has a locative instead. In that case,
LAST does the completely wrong thing.

I know how to make my program work. I'm only suggesting that this bug was
caused by the fact that locatives are non-uniformly treated as CDRable
and that some of the cases where they are not treated as such, they could
be thought of as such.
 5-Apr-83 23:16:34-EST,3309;000000000000
Return-path: <CAL@MIT-OZ>
Date: Tuesday, 5 April 1983, 23:15-EST
From: Cliff Lasser <CAL@MIT-OZ>
To: BUG-LISPM@MIT-OZ

In MIT-Specific 18.1, System 93.41, ZMail 49.18, microcode 226, gc@2,
on Lisp Machine Two:


Insert your description of the circumstances here:
amazing.  I had just switched from my converse window back into my zmacs and
aborted an inc-search.  Part of the converse window then displayed on the top of
the screen and then this crash message overwrote that!

>>TRAP 10072 (ARGTYP ARRAY M-A NIL GAHDR) ->  ARRAY-LEADER 
Some argument to ARRAY-LEADER, NIL, was of the wrong type.
The function expected an array.
Backtrace from the debugger:

(METHOD ZWEI:WINDOW REDISPLAY) (P.C. = 1246)
  (SELF is #<ZMACS-WINDOW-PANE Zmacs Window Pane 1 15403703 exposed>)

 Arg 0 (OPERATION): REDISPLAY
 Arg 1 (RECENTER-TYPE): ABSOLUTE
 Arg 2 (RC1): NIL
 Arg 3 (RC2): NIL
 Arg 4 (FORCE-TO-COMPLETION-P): NIL
Local 0 (LH): 16
Local 1 (NOW): 3710
Local 2 (POINT-PLINE): NIL
Local 3 (POINT-LINE): "aref and aset?"
Local 4 (POINT-INDEX): 16
Local 5 (TOP-LINE): "To: "
Local 6 (TOP-INDEX): 0
Local 7 (LAST-BP): ("" 3 MOVES)
Local 8 (INITIAL-DEGREE): 2
Local 9 (NEW-TOP-INDEX): NIL
Local 10 (Y): NIL
Local 11 (LINE): NIL
Local 12 (INDEX): NIL
Local 13 (P): NIL
Local 14 (LINE-LENGTH): NIL
Local 15 (LEN): NIL
Local 16 (DWID): NIL
Local 17 (CH): NIL
Local 18 (FONT): NIL
Local 19 (CWT): NIL
Local 20 (CWID): NIL
Local 21 (RWID): NIL
Local 22 (I): 1
Local 23 (TW): 0
Local 24 (L): NIL
Local 25 (FROM-INDEX): 0
Local 26 (TO-INDEX): 0
Local 27 (PLINE): 17
Local 28 (STOP-LINE): ""
Local 29 (FROB): NIL
Local 30 (PLINE): NIL
Local 31 (G0672): NIL
Local 32 (BL): NIL


ZWEI:REDISPLAY (P.C. = 72)

 Arg 0 (WINDOW): #<ZMACS-WINDOW-PANE Zmacs Window Pane 1 15403703 exposed>
   --Defaulted args:--
 Arg 1 (RECENTER-TYPE): POINT
 Arg 2 (RC1): NIL
 Arg 3 (RC2): NIL
 Arg 4 (FORCE-TO-COMPLETION-P): NIL


ZWEI:REDISPLAY-ALL-WINDOWS (P.C. = 75)

   --Defaulted args:--
 Arg 0 (FORCE-TO-COMPLETION-P): NIL
 Arg 1 (SELECT-P): T
Local 0 (G5616): (#<ZMACS-WINDOW-PANE Zmacs Window Pane 1 15403703 exposed>)
Local 1 (WINDOW): #<ZMACS-WINDOW-PANE Zmacs Window Pane 1 15403703 exposed>


(METHOD ZWEI:WINDOW EDIT) (P.C. = 407)
  (SELF is #<ZMACS-WINDOW-PANE Zmacs Window Pane 1 15403703 exposed>)

 Arg 0 (OPERATION): EDIT
   --Defaulted args:--
 Arg 1 (IGNORE): NIL
 Arg 2 (*COMTAB*): #<COMTAB ZWEI:MODE-COMTAB 32656410>
 Arg 3 (*MODE-LINE-LIST*): ("ZMACS " "(" ZWEI:*MODE-NAME-LIST* ") " ...)
 Arg 4 (TOP-LEVEL-P): T
Local 0 (TEM1): ((** ** T ** ...))
Local 1 (G1278): ("Return to top level editor command loop.")
Local 2 (G1278): ((SYS:ABORT ERROR) ("Return to top level editor command loop.") T ("Return to top level editor command loop.") ...)
Local 3 (CH): NIL


Additional information supplied with call:
 SYS:ADI-FEXPR-CALL

(INTERNAL (METHOD ZWEI:ZMACS-WINDOW COMBINED EDIT) 0) (P.C. = 74)

 Rest arg (.DAEMON-CALLER-ARGS.): (EDIT)
Local 1 (.DAEMON-MAPPING-TABLE.): #<ART-16B-17 16007777>


Remainder of stack:

FUNCALL (P.C. = 25)
(METHOD ZWEI:DISPLAYER AROUND EDIT) (P.C. = 31)
(METHOD ZWEI:ZMACS-WINDOW COMBINED EDIT) (P.C. = 47)
ZWEI:ZMACS-WINDOW-TOP-LEVEL (P.C. = 46)
SI:PROCESS-TOP-LEVEL (P.C. = 121)
 5-Apr-83 23:40:28-EST,1335;000000000000
Return-path: <ZVONA@MIT-OZ>
Mail-From: ZVONA created at  5-Apr-83 23:39:26
Date: Tue, 5 Apr 1983  23:39 EST
From: ZVONA@MIT-OZ
To:   MLB@SPA-NIMBUS
Cc:   bug-lispm@MIT-OZ
Subject: flavor question
In-reply-to: Msg of 5 Apr 1983 15:01-PST from MLB at SPA-NIMBUS

    Date: Tuesday, 5 April 1983, 15:01-PST
    From: MLB at SPA-NIMBUS
    To:   ZVONA
    cc:   bug-lispm
    Re:   flavor question

        Date: Tue, 5 Apr 1983  15:04 EST
        From: ZVONA@MIT-OZ
        Is it reasonable that continue-whopper, if there is no method
        for that message, just returns NIL without complaining?  It
        seems to me that it should barf.

        (defflavor foo () ())

        (defwhopper (foo :mumble) () (continue-whopper 'asdf))

        (send (make-instance 'foo) ':mumble) => NIL

    It should call the tail pointer (default-handler).  The default handler
    should be defined as the last resort on failure to find a primary method,
    as opposed to a miss in the method table.  The default handler
    could check if the key was in the table for itself, if it wants to
    distinguish the cases (as si:flavor-unclaimed-message might).

Can someone translate this for me?  In the given example, no default
handler was supplied (unless a default default handler is included by
default).
 6-Apr-83 00:21:16-EST,740;000000000000
Return-path: <kmp@MIT-MC>
Date: Wednesday, 6 April 1983, 00:19-EST
From: Kent M. Pitman <kmp at MIT-MC>
Subject: Debugging Tool
To: BUG-LISPM at MIT-MC

It would be nice if there were a way to interactively edit the methods for a
flavor using some sort of menu arrangement. This would be very nice especially 
when there seem to be left-over pieces of flavor data and you're not sure where.
UNDEFMETHOD, UNDEFUN-METHOD, etc. are a bit clumsy to use for such things and
it's easy to make a mistake since the things you're playing with aren't explicit.
The presentation used by the inspector for this does not provide a clear enough
user-interface for one to feel happy modifying it. A more abstract display would
be necessary.
 6-Apr-83 01:54:29-EST,3134;000000000000
Return-path: <CAL@MIT-OZ>
Date: Wednesday, 6 April 1983, 01:54-EST
From: Cliff Lasser <CAL@MIT-OZ>
To: BUG-LISPM@MIT-OZ

In MIT-Specific 18.1, System 93.41, ZMail 49.18, microcode 226, gc@2,
on Lisp Machine Two:


Insert your description of the circumstances here:

was indenting a region

>>ERROR: Recenter type POINT left point outside the window
Backtrace from the debugger:

(METHOD ZWEI:WINDOW REDISPLAY) (P.C. = 1607)
  (SELF is #<ZMACS-WINDOW-PANE Zmacs Window Pane 3 15427063 exposed>)

 Arg 0 (OPERATION): REDISPLAY
 Arg 1 (RECENTER-TYPE): POINT
 Arg 2 (RC1): NIL
 Arg 3 (RC2): NIL
 Arg 4 (FORCE-TO-COMPLETION-P): NIL
Local 0 (LH): 14.
Local 1 (NOW): 22387.
Local 2 (POINT-PLINE): NIL
Local 3 (POINT-LINE): "	(return name)))))"
Local 4 (POINT-INDEX): 25.
Local 5 (TOP-LINE): ";;; Define a new basic flag."
Local 6 (TOP-INDEX): 0.
Local 7 (LAST-BP): ("" 0. MOVES)
Local 8 (INITIAL-DEGREE): 4.
Local 9 (NEW-TOP-INDEX): NIL
Local 10 (Y): NIL
Local 11 (LINE): ";;; Get the bit or set of bits that are ON for a given flag or marker."
Local 12 (INDEX): NIL
Local 13 (P): NIL
Local 14 (LINE-LENGTH): NIL
Local 15 (LEN): NIL
Local 16 (DWID): NIL
Local 17 (CH): NIL
Local 18 (FONT): NIL
Local 19 (CWT): NIL
Local 20 (CWID): NIL
Local 21 (RWID): NIL
Local 22 (I): 19.
Local 23 (TW): 225.
Local 24 (L): NIL
Local 25 (FROM-INDEX): 0.
Local 26 (TO-INDEX): 70.
Local 27 (PLINE): 62.
Local 28 (STOP-LINE): ""
Local 29 (FROB): NIL
Local 30 (PLINE): NIL
Local 31 (G0672): NIL
Local 32 (BL): NIL


ZWEI:REDISPLAY (P.C. = 72)

 Arg 0 (WINDOW): #<ZMACS-WINDOW-PANE Zmacs Window Pane 3 15427063 exposed>
   --Defaulted args:--
 Arg 1 (RECENTER-TYPE): POINT
 Arg 2 (RC1): NIL
 Arg 3 (RC2): NIL
 Arg 4 (FORCE-TO-COMPLETION-P): NIL


ZWEI:REDISPLAY-ALL-WINDOWS (P.C. = 75)

   --Defaulted args:--
 Arg 0 (FORCE-TO-COMPLETION-P): NIL
 Arg 1 (SELECT-P): T
Local 0 (G5616): (#<ZMACS-WINDOW-PANE Zmacs Window Pane 3 15427063 exposed>)
Local 1 (WINDOW): #<ZMACS-WINDOW-PANE Zmacs Window Pane 3 15427063 exposed>


(METHOD ZWEI:WINDOW EDIT) (P.C. = 407)
  (SELF is #<ZMACS-WINDOW-PANE Zmacs Window Pane 2 15426547 deexposed>)

 Arg 0 (OPERATION): EDIT
   --Defaulted args:--
 Arg 1 (IGNORE): NIL
 Arg 2 (*COMTAB*): #<COMTAB ZWEI:MODE-COMTAB 5176727>
 Arg 3 (*MODE-LINE-LIST*): ("ZMACS " "(" ZWEI:*MODE-NAME-LIST* ") " ...)
 Arg 4 (TOP-LEVEL-P): T
Local 0 (TEM1): ((** ** T ** ...))
Local 1 (G1278): ("Return to top level editor command loop.")
Local 2 (G1278): ((SYS:ABORT ERROR) ("Return to top level editor command loop.") T ("Return to top level editor command loop.") ...)
Local 3 (CH): NIL


Additional information supplied with call:
 SYS:ADI-FEXPR-CALL

(INTERNAL (METHOD ZWEI:ZMACS-WINDOW COMBINED EDIT) 0.) (P.C. = 74)

 Rest arg (.DAEMON-CALLER-ARGS.): (EDIT)
Local 1 (.DAEMON-MAPPING-TABLE.): #<ART-16B-15. 16007777>


Remainder of stack:

FUNCALL (P.C. = 25)
(METHOD ZWEI:DISPLAYER AROUND EDIT) (P.C. = 31)
(METHOD ZWEI:ZMACS-WINDOW COMBINED EDIT) (P.C. = 47)
ZWEI:ZMACS-WINDOW-TOP-LEVEL (P.C. = 46)
SI:PROCESS-TOP-LEVEL (P.C. = 121)
 6-Apr-83 02:12:03-EST,605;000000000000
Return-path: <kmp@MIT-MC>
Date: Wednesday, 6 April 1983, 02:03-EST
From: Kent M. Pitman <kmp at MIT-MC>
Subject: c-sh-A and PROCESS-SLEEP
To: BUG-LISPM at MIT-MC

In Symbolics System 222.186,...

Since there is a well-formed concept of what an interval is (ie, the
difference between two universal times), then functions like PROCESS-SLEEP
should not call their arguments INTERVAL lest people do c-sh-A and think
the argument wants to be a number of seconds. A term should be invented
for a sixtieth of a second and functions that take that unit of time should
use that term instead.
--kmp
 6-Apr-83 02:46:44-EST,523;000000000000
Return-path: <rwg@SPA-NIMBUS>
Date: Tuesday, 5 April 1983, 23:43-PST
From: Bill Gosper <rwg at SPA-Nimbus>
Subject: LAST, NCONC, etc of locatives
To: kmp at MIT-MC
Cc: BUG-LISPM at MIT-MC
In-reply-to: The message of 5 Apr 83 18:30-PST from Kent M. Pitman <kmp at MIT-MC>

I believe I made this same complaint a couple of years ago and was rebuffed.
I agree with GLS's counterrebuff that all this should be carefully thought out
and cleaned up.  But I see no mention of locatives in Colander Edition Common Lisp.
 6-Apr-83 03:51:40-EST,380;000000000000
Return-path: <RMS@MIT-OZ>
Mail-From: RMS created at  6-Apr-83 03:48:27
Date:  6 Apr 1983 0348-EST
From: RMS@MIT-OZ
Subject: C-SHift-A and PROCESS-SLEEP
To: bug-lispm@MIT-OZ

Users of the MIT system probably have a little less of a problem
since they can refer to the documentation strings of such system functions,
which explain that the argument is in 60'ths.
-------
 6-Apr-83 10:09:10-EST,3166;000000000000
Return-path: <Gumby@MIT-OZ>
Date: Wednesday, 6 April 1983, 10:09-EST
From: David Vinayak Wallace <Gumby@MIT-OZ>
To: BUG-LISPM@MIT-OZ

In MIT-Specific 18.1, System 93.42, ZMail 49.18, microcode 226, gc@2,b&w,
on Lisp Machine Four:


Insert your description of the circumstances here:

I'd defined a filter with the filter definition option in profile. When
it returned:

>>TRAP 20532 (TV-ERASE-OFF-SCREEN)
An attempt was made to do graphics past the end of the screen.
Backtrace from the debugger:

(:METHOD TV:MENU-HIGHLIGHTING-MIXIN :HIGHLIGHT-ITEM) (P.C. = 155)
  (SELF is #<POP-UP-ZMAIL-MULTIPLE-MENU Pop Up Zmail Multiple Menu 3 15426443 exposed>)

 Arg 0 (OPERATION): :HIGHLIGHT-ITEM
 Arg 1 (ITEM): (|New lispm| :VALUE |New lispm|)
Local 0 (LEFT): 471
Local 1 (TOP): 21
Local 2 (RIGHT): 455
Local 3 (BOTTOM): 37


(:METHOD TV:MENU-HIGHLIGHTING-MIXIN :AFTER :MENU-DRAW) (P.C. = 35)
  (SELF is #<POP-UP-ZMAIL-MULTIPLE-MENU Pop Up Zmail Multiple Menu 3 15426443 exposed>)

 Arg 0 (OPERATION): :MENU-DRAW
Local 0 (G6983): ((|New lispm| :VALUE |New lispm|) (|Any lispm| :VALUE |Any lispm|) (MICROS :VALUE MICROS) (ACCOUNTS :VALUE ACCOUNTS))
Local 1 (X): (|New lispm| :VALUE |New lispm|)


(:METHOD POP-UP-ZMAIL-MULTIPLE-MENU :COMBINED :MENU-DRAW) (P.C. = 67)
  (SELF is #<POP-UP-ZMAIL-MULTIPLE-MENU Pop Up Zmail Multiple Menu 3 15426443 exposed>)

 Rest arg (.DAEMON-CALLER-ARGS.): (:MENU-DRAW)
Local 1 (.DAEMON-MAPPING-TABLE.): #<ART-16B-16 17601301>
Local 2 (.VAL1.): NIL
Local 3 (.VAL2.): NIL
Local 4 (.VAL3.): NIL


(:METHOD TV:BASIC-MENU :AFTER :REFRESH) (P.C. = 40)
  (SELF is #<POP-UP-ZMAIL-MULTIPLE-MENU Pop Up Zmail Multiple Menu 3 15426443 exposed>)

 Arg 0 (OPERATION): :REFRESH
 Arg 1 (TYPE): :COMPLETE-REDISPLAY


(:METHOD POP-UP-ZMAIL-MULTIPLE-MENU :COMBINED :REFRESH) (P.C. = 76)
  (SELF is #<POP-UP-ZMAIL-MULTIPLE-MENU Pop Up Zmail Multiple Menu 3 15426443 exposed>)

 Rest arg (.DAEMON-CALLER-ARGS.): (:REFRESH :COMPLETE-REDISPLAY)
Local 1 (.DAEMON-MAPPING-TABLE.): #<ART-16B-16 17601301>
Local 2 (.VAL1.): NIL
Local 3 (.VAL2.): NIL
Local 4 (.VAL3.): NIL


Remainder of stack:

(:METHOD TV:SHEET :EXPOSE) (P.C. = 646)
(:INTERNAL (:METHOD POP-UP-ZMAIL-MULTIPLE-MENU :COMBINED :EXPOSE) 0) (P.C. = 60)
TV:SHEET-EXPOSE (P.C. = 170)
(:METHOD POP-UP-ZMAIL-MULTIPLE-MENU :COMBINED :EXPOSE) (P.C. = 37)
(:METHOD TV:BASIC-MENU :CHOOSE) (P.C. = 44)
(:METHOD ZMAIL-MULTIPLE-MENU-MIXIN :MULTIPLE-CHOOSE) (P.C. = 132)
ZMAIL-MULTIPLE-MENU-CHOOSE (P.C. = 101)
PROFILE-FILTERS-OR-UNIVERSES (P.C. = 117)
PROFILE-FILTERS-BUTTON (P.C. = 107)
(:SELECT-METHOD ZMAIL-PROFILE-COMMAND-LIST :MOUSE-BUTTON) (P.C. = 332)
...
(:SELECT-METHOD ZMAIL-COMMAND-LIST :MENU) (P.C. = 32)
(:METHOD ZMAIL-FRAME :PROCESS-SPECIAL-COMMAND) (P.C. = 25)
(:METHOD ZMAIL-COMMAND-LOOP-MIXIN :COMMAND-LOOP) (P.C. = 266)
(:INTERNAL (:METHOD ZMAIL-FRAME :COMBINED :COMMAND-LOOP) 0) (P.C. = 50)
FUNCALL (P.C. = 25)
(:METHOD ZMAIL-COMMAND-LOOP-MIXIN :AROUND :COMMAND-LOOP) (P.C. = 57)
(:METHOD ZMAIL-FRAME :COMBINED :COMMAND-LOOP) (P.C. = 47)
ZMAIL-PROCESS-TOP-LEVEL (P.C. = 115)
SI:PROCESS-TOP-LEVEL (P.C. = 121)
 6-Apr-83 13:03:24-EST,549;000000000000
Return-path: <Brd@MIT-OZ>
Date: Wednesday, 6 April 1983, 13:04-EST
From: Bruce R. Donald <Brd@MIT-OZ>
Subject: 93.39 GC bug 
To: bug-lispm@MIT-OZ

When you (GC-ON) and SI:RECLAIM-IMMEDIATELY <-- T, everything slows down
 by a factor of 10 (it's not batch garbace colllecting, either). Then
 if you turn (GC-OFF) and (GC-ON) a couple of times, it says,
 "argument to GC-OFF <process .... GARBACE COLLECTOR> was of the wrong type"
  and you are stuck with the GC on forever, until it eventually
  crashes everything (this happened twice).
 6-Apr-83 20:24:35-EST,610;000000000000
Return-path: <MLB@SPA-NIMBUS>
Date: Wednesday, 6 April 1983, 17:20-PST
From: MLB at SPA-NIMBUS
Subject: c-sh-A and PROCESS-SLEEP
To: kmp at MIT-MC
Cc: BUG-LISPM at MIT-MC
In-reply-to: The message of 5 Apr 83 23:03-PST from Kent M. Pitman <kmp at MIT-MC>

    Date: Wednesday, 6 April 1983, 02:03-EST
    From: Kent M. Pitman <kmp at MIT-MC>
    A term should be invented for a sixtieth of a second and functions that take
    that unit of time should use that term instead.

I've heard that unit called a "tick" and a "jiffy", but "sixtieths" would be a
nice, short, mnemonic argument name too.
 6-Apr-83 20:35:58-EST,1909;000000000000
Return-path: <MLB@SPA-NIMBUS>
Date: Wednesday, 6 April 1983, 17:31-PST
From: MLB at SPA-NIMBUS
Subject: flavor question
To: ZVONA at MIT-OZ
Cc: bug-lispm at MIT-OZ
In-reply-to: The message of 5 Apr 83 20:39-PST from ZVONA at MIT-OZ

    Date: Tue, 5 Apr 1983  23:39 EST
    From: ZVONA@MIT-OZ
	Date: Tuesday, 5 April 1983, 15:01-PST
	From: MLB at SPA-NIMBUS
	    Date: Tue, 5 Apr 1983  15:04 EST
	    From: ZVONA@MIT-OZ
	    Is it reasonable that continue-whopper, if there is no method
	    for that message, just returns NIL without complaining?  It
	    seems to me that it should barf.

	    (defflavor foo () ())

	    (defwhopper (foo :mumble) () (continue-whopper 'asdf))

	    (send (make-instance 'foo) ':mumble) => NIL

	It should call the tail pointer (default-handler).  The default handler
	should be defined as the last resort on failure to find a primary method,
	as opposed to a miss in the method table.  The default handler
	could check if the key was in the table for itself, if it wants to
	distinguish the cases (as si:flavor-unclaimed-message might).

    Can someone translate this for me?  In the given example, no default
    handler was supplied (unless a default default handler is included by
    default).

Sorry to be obscure.  I was proposing what I think the flavor system should do
in this case.  The default default handler is si:flavor-unclaimed-message.  If
the proposal was implemented then you would get the usual unclaimed message
error.  In addition, default handlers could be written that could tell whether
they were getting called because the keyword was completely unknown, or if they
were getting called because the primary method was missing.  The default default
handler could give a more precise error message, there could be a handler to
give you the current behavior (which could be provided by a system mixin), etc.
 6-Apr-83 23:56:05-EST,934;000000000000
Return-path: <RMS@MIT-OZ>
Mail-From: RMS created at  6-Apr-83 23:55:08
Date:  6 Apr 1983 2355-EST
From: RMS@MIT-OZ
Subject: (ED) making a new editor window
To: PGS@MIT-OZ
cc: bug-lispm-mit@MIT-OZ
In-Reply-To: Your message of 6-Apr-83 1503-EST

(ED) will always select an "idle" editor, which is to say,
one which is waiting for input at top level.
It is possible that this test has a bug in it, and an editor
window which was "at top level" according to your intuition
did not seem to be so.  To identify such situations,
if this problem ever happens to you again, immediately type
System E to go to the other editor window, and then type
C-M-Break and see where it is.  If the situation looks as
though the editor ought to be considered idle, mail me a
backtrace as a bug report.

Meanwhile, if you want to get an existing editor window
regardless of whether it is idle, use System E rather than (ED).
-------
 7-Apr-83 01:45:49-EST,181;000000000000
Return-path: <GJC@MIT-MC>
Date: 7 April 1983 01:44 EST
From: George J. Carrette <GJC @ MIT-MC>
To: BUG-LISPM @ MIT-MC

Any prospects for the revival of the lispm SUPDUP server? 7-Apr-83 02:02:08-EST,1319;000000000000
Return-path: <MOON@SCRC-TENEX>
Date: Thursday, 7 April 1983  01:51-EST
From: MOON at SCRC-TENEX
To:   Kent M. Pitman <kmp at MIT-MC>, RWG at spa-nimbus
Cc:   BUG-LISPM at MIT-MC
Subject: (LAST locative)
In-reply-to: The message of 5 Apr 1983 21:30-EST from Kent M. Pitman <kmp at MIT-MC>
	     The message of 5 Apr 1983 23:43-PST from Bill Gosper <rwg at SPA-Nimbus>

There are no locatives in Common Lisp.  Locatives will continue to exist in
the Symbolics extension of Common Lisp, since they are fundamental to the
underpinnings of the Lisp machine.

I think on the whole it would hurt more often than it would help for LAST
to pretend that locatives are lists.  This is an esthetic judgement, not
a scientifically demonstrable fact.

I believe that LAST of anything that isn't a list or NIL (()) should
signal an error, rather than returning its argument.  Neither the Lisp
Machine manual nor the Common Lisp manual is specific enough about this
case to either require or forbid it to be an error.  I believe, although
I'm not sure, that the Common Lisp philosophy is that non-null atoms where
lists are expected should be an error.  Certainly it would help detect
bugs with trying to LAST through a locative if it would signal an error
instead of just blithely returning the wrong answer.
 7-Apr-83 02:10:59-EST,318;000000000000
Return-path: <KMP@MIT-MC>
Date: 7 April 1983 02:09 EST
From: Kent M. Pitman <KMP @ MIT-MC>
To: BUG-LISPM @ MIT-MC, RWG @ MIT-MC, Moon @ SCRC-TENEX
cc: Guy.Steele @ CMU-CS-A

I would be happy if LAST erred when it saw a locative. I just don't want it to
happily stop. It makes it too hard to debug the program.
 7-Apr-83 11:05:15-EST,463;000000000000
Return-path: <PGS@MIT-OZ>
Date: Thursday, 7 April 1983, 11:04-EST
From: Patrick Sobalvarro <PGS@MIT-OZ>
Subject: 
To: BUG-lispm@MIT-OZ

In ZWEI in MIT-Specific 18.1, System 93.43, ZMail 49.18, microcode 226,
on Lisp Machine Twenty-five:

When I do (load-and-save-patches), if the site configuration has changed and
there haven't been any patches, the disk-save doesn't happen.
load-and-save-patches just says "No patches have been made." and returns.
 7-Apr-83 16:34:44-EST,1202;000000000000
Return-path: <DanG@SCRC-POINTER>
Received: from SCRC-MERRIMACK by SCRC-TENEX with CHAOS; Thu 7-Apr-83 10:33:30-EST
Date: Thursday, 7 April 1983, 10:35-EST
From: Dan Gerson <DanG@SCRC-POINTER>
Subject: c-sh-A and PROCESS-SLEEP
To: MLB@SPA-NIMBUS, kmp@MIT-MC
Cc: BUG-LISPM@MIT-MC
In-reply-to: The message of 6 Apr 83 20:20-EST from MLB at SPA-NIMBUS

    Date: Wednesday, 6 April 1983, 17:20-PST
    From: MLB at SPA-NIMBUS
	Date: Wednesday, 6 April 1983, 02:03-EST
	From: Kent M. Pitman <kmp at MIT-MC>
	A term should be invented for a sixtieth of a second and functions that take
	that unit of time should use that term instead.

    I've heard that unit called a "tick" and a "jiffy", but "sixtieths" would be a
    nice, short, mnemonic argument name too.
A more etymologically correct term would be a "third".  I believe a
"second" is so called as a short version of "second minute", where a
minute was just that: a minute (as in tiny) fraction of an hour.  A
second is a second order degree of smallness.  A 1/60 of a second is a
third order degree of smallness, so it could properly be called a "third
minute", or more briefly, a "third".

Bet that would confuse people.
 7-Apr-83 18:05:09-EST,2886;000000000000
Return-path: <RWG@SPA-NIMBUS>
Date: Thursday, 7 April 1983, 03:39-PST
From: Bill Gosper <RWG at SPA-NIMBUS>
Subject: (LAST locative)
To: MOON at SCRC-TENEX
Cc: kmp at MIT-MC, BUG-LISPM at MIT-MC, rwg at SPA-NIMBUS
In-reply-to: The message of 6 Apr 83 22:51-PST from MOON at SCRC-TENEX

    There are no locatives in Common Lisp.
Amazing.
    ... I think on the whole it would hurt more often than it would help for
    LAST to pretend that locatives are lists.  This is an esthetic judgement,
    not a scientifically demonstrable fact.
I don't see why it isn't demonstrable, at least in theory.  You could make it
act like a list on one population of machines, and err on another, and tabulate
who felt screwed more often.  (As I have said before, my mania is not confined to
LAST, but desires just about *everything* treat locatives as lists.)
    I believe that LAST of anything that isn't a list or NIL (()) should
    signal an error, rather than returning its argument.  ... I believe, although
    I'm not sure, that the Common Lisp philosophy is that non-null atoms where
    lists are expected should be an error.
I am amazed that locatives are considered atoms.  A-Tom:  something that cannot be
cut, i.e. CAR'd or CDR'd.  Do you feel that CDR should never have been an inverse
of LOCF--there should have been UNLOCF or something instead?  (Likewise for RPLACD.)
That's consistent, I guess.
					    Certainly it would help detect
    bugs with trying to LAST through a locative if it would signal an error
    instead of just blithely returning the wrong answer.
I think there is a better case for (LAST '()) being an error than for (LAST (LOCF ...)).
After all, the user might be planning to RPLAC the result.  Has anyone ever been screwed
by not being warned for *accidently* LASTing a locative, as opposed to expecting too
much from it?

There is always the tradeoff between detecting (or fiating) errors, and allowing
people to discover useful constructs unanticipated by the system designers.

Perhaps the right thing in this case is to invent a new type (or cdr-code!) that is
really just the MOVSI AR1,AR1 kind of locative that KMP and I were hoping LOCF produced,
if even for the sole but time-honored purpose of saving the CONS of a dummy element on
the front of frontwards-built lists.  (Actually, it would be MOVEI AR2,AR1 were MACLISP
not bumming ACs).  Just give us some CONSless way of delaying CDRs by one step, but which
is otherwise listlike.  E.g. (UNCDR '(A B C)) would print and act as
'(<NOTHING> A B C) or maybe even '(A A B C).  (The latter embarrasses (UNCDR '()),
the former embarrasses (CAR (UNCDR ...)).  But not fatally.  These could even be errors!
And '(NIL A B C) embarrasses neither, but, like the rest, embarrasses (RPLACA (UNCDR ...))
unless RPLACA is permitted to CONS for breach of contract.)
 7-Apr-83 22:10:55-EST,2920;000000000000
Return-path: <Gumby@MIT-OZ>
Date: Thursday, 7 April 1983, 22:09-EST
From: David Vinayak Wallace <Gumby@MIT-OZ>
To: BUG-LISPM@MIT-OZ

In MIT-Specific 18.1, System 93.43, ZMail 49.18, microcode 226, gc@2,b&w,
on Lisp Machine Four:


Insert your description of the circumstances here:

it was trying to do (with-open-file (foo "ed:*output*" ':write)...).
This worked ok this afternoon.

>>ERROR: The object #ZWEI:ZWEI-HOST "ED" received a SYSTEM-TYPE message, which went unclaimed.
The rest of the message was NIL.
Backtrace from the debugger:

#ZWEI:ZWEI-HOST "ED":
   Arg 0: SYSTEM-TYPE


SI:INSTANCE-HASH-FAILURE (P.C. = 126)

 Arg 0 (OP): SYSTEM-TYPE
 Rest arg (ARGS): NIL
Local 1 (HT): #<EQ-HASH-ARRAY (Funcallable) 15672372>
Local 2 (FN-LOCATION): NIL
Local 3 (FUNC): NIL


FS:MAKE-PATHNAME-1 (P.C. = 466)

 Rest arg (OPTIONS): (STARTING-PATHNAME #ZWEI:ED-PATHNAME "ED: NIL" PARSING-PATHNAME #ZWEI:ED-PATHNAME "ED: NIL" ...)
Local 1 (STARTING-PATHNAME): #ZWEI:ED-PATHNAME "ED: NIL"
Local 2 (PARSING-PATHNAME): #ZWEI:ED-PATHNAME "ED: NIL"
Local 3 (HOST): #ZWEI:ZWEI-HOST "ED"
Local 4 (VERSION): NEWEST
Local 5 (ORIGINAL-TYPE): NIL
Local 6 (HOST-P): NIL
Local 7 (VERSION-P): T
Local 8 (ORIGINAL-TYPE-P): NIL
Local 9 (DEVICE-P): NIL
Local 10 (DIRECTORY-P): NIL
Local 11 (NAME-P): T
Local 12 (TYPE-P): CANONICAL
Local 13 (DEVICE): NIL
Local 14 (DIRECTORY): NIL
Local 15 (NAME): "FOO"
Local 16 (TYPE): NIL
Local 17 (CANONICAL-TYPE): LISP
Local 18 (KEYWORD): VERSION
Local 19 (VALUE): NEWEST
Local 20: NIL
Local 21 (PREFERRED): NIL
Local 22 (ALL): NIL


(METHOD FS:PATHNAME NEW-PATHNAME) (P.C. = 62)
  (SELF is #ZWEI:ED-PATHNAME "ED: NIL")

 Arg 0 (OPERATION): NEW-PATHNAME
 Rest arg (OPTIONS): (NAME "FOO" TYPE LISP ...)
Local 1 (STARTING-PATHNAME): NIL


(METHOD ZWEI:ED-PATHNAME COMBINED NEW-PATHNAME) (P.C. = 123)
  (SELF is #ZWEI:ED-PATHNAME "ED: NIL")

 Rest arg (.DAEMON-CALLER-ARGS.): (NEW-PATHNAME NAME "FOO" TYPE ...)
Local 1 (.DAEMON-MAPPING-TABLE.): #<ART-16B-7 16013703>
Local 2 (OPTIONS): (NAME "FOO" TYPE LISP ...)
Local 3 (NEW-HOST): NIL
Local 4 (NEW-PATHNAME-HOST): NIL


Remainder of stack:

FS:DEFAULT-PATHNAME (P.C. = 210)
FS:MERGE-PATHNAME-DEFAULTS (P.C. = 175)
OPEN (P.C. = 161)
GENERATE-TABLE (P.C. = 221)
SI:*EVAL (P.C. = 1145)
ZWEI:EVALUATE-MINI-BUFFER (P.C. = 131)
ZWEI:COM-EVALUATE-MINI-BUFFER (P.C. = 25)
ZWEI:RE-EXECUTE-MINI-BUFFER-COMMAND (P.C. = 77)
ZWEI:TYPEOUT-RE-EXECUTE-MINI-BUFFER-COMMAND (P.C. = 27)
(SELECT-METHOD ZWEI:PROCESS-SPECIAL-COMMAND TYPEOUT-EXECUTE) (P.C. = 25)
(METHOD ZWEI:WINDOW EDIT) (P.C. = 443)
(INTERNAL (METHOD ZWEI:ZMACS-WINDOW COMBINED EDIT) 0) (P.C. = 74)
FUNCALL (P.C. = 25)
(METHOD ZWEI:DISPLAYER AROUND EDIT) (P.C. = 31)
(METHOD ZWEI:ZMACS-WINDOW COMBINED EDIT) (P.C. = 47)
ZWEI:ZMACS-WINDOW-TOP-LEVEL (P.C. = 46)
SI:PROCESS-TOP-LEVEL (P.C. = 121)
 7-Apr-83 22:13:16-EST,461;000000000000
Return-path: <CSTACY@MIT-MC>
Date: 7 April 1983 22:13 EST
From: Christopher C. Stacy <CSTACY @ MIT-MC>
Subject:  c-sh-A and PROCESS-SLEEP
To: KMP @ MIT-MC
cc: BUG-LISPM @ MIT-MC
In-reply-to: Msg of 6 Apr 1983 02:03-EST from Kent M. Pitman <kmp>


    Date: Wednesday, 6 April 1983, 02:03-EST
    A term should be invented for a sixtieth of a second and functions
    that take that unit of time should use that term instead.
    --kmp

"Jiffy(s)"? 8-Apr-83 00:11:01-EST,543;000000000000
Return-path: <acw@SCRC-VIXEN>
Date: Thursday, 7 April 1983, 15:05-EST
From: Allan C. Wechsler <acw at SCRC-VIXEN>
Subject: How to use Lisp Machine as button box.
To: PGS at MIT-OZ, bug-lispm at MIT-OZ
In-reply-to: The message of 29 Mar 83 06:44-EST from Patrick Sobalvarro <PGS at MIT-OZ>

I don't remember if anybody answered this query, but the right answer is
to use the function TV:KEY-STATE.  It takes one argument which may be
the "ASCII" code of an unshifted key, or a "key-word" (pardon) like
:LEFT-CONTROL.

   --- Allan
 8-Apr-83 18:03:15-EST,488;000000000000
Return-path: <mly@MIT-ML>
Date: Friday, 8 April 1983, 18:05-EST
From: Richard Mlynarik <mly at MIT-ML>
Subject: edit-disk-label bug
To: BUG-LISPM at MIT-OZ

In MIT-Specific 18.1, System 93.44, ZMail 49.18, microcode 226,
on Lisp Machine Eighteen:

(si:edit-disk-label) thinks this machine's disk is a T80 when it initially displays the label
 -- it says T80 & only displays a few bands
c-r [read band from disk] fixes it up (after that it knows about all bands and says T300)
 8-Apr-83 20:37:03-EST,712;000000000000
Return-path: <Gumby@MIT-OZ>
Date: Friday, 8 April 1983, 20:38-EST
From: David Vinayak Wallace <Gumby@MIT-OZ>
Subject: edit-disk-label bug
To: Richard Mlynarik <mly@MIT-ML>
CC: BUG-LISPM@MIT-OZ, gumby@MIT-OZ

    Date: Friday, 8 April 1983, 18:05-EST
    From: Richard Mlynarik <mly at MIT-ML>

    (si:edit-disk-label) thinks this machine's disk is a T80 when it
    initially displays the label -- it says T80 & only displays a few
    bands c-r [read band from disk] fixes it up (after that it knows
    about all bands and says T300)

You're broken. It just displays a dummy label. Why on earth would you
want to edit the label without reading it first? You'd have nothing
relevent to edit.
 8-Apr-83 22:06:48-EST,3140;000000000000
Return-path: <CAL@MIT-OZ>
Date: Friday, 8 April 1983, 22:06-EST
From: Cliff Lasser <CAL@MIT-OZ>
To: BUG-LISPM@MIT-OZ

In MIT-Specific 18.1, System 93.44, ZMail 49.18, microcode 226, gc@2,37,
on Lisp Machine Nine:


Insert your description of the circumstances here:

I was trying to read my mail in zmail.  A second bug: After doing control-m, an
editor window was popped up.  However, since there was typout on the screen
(from a m-x-save-all-files) I had to hit a space to make the typout go await and
make this message be displayed.

>>ERROR: Source file is not closed for OZ:PS:<CAL>MAIL.TXT.1
Backtrace from the debugger:

FS:RENAME-CHAOS (P.C. = 126)

 Arg 0 (HOST): #FS:TOPS20-CHAOS-HOST "MIT-OZ"
 Arg 1 (OLD-PATHNAME): #FS:TOPS20-PATHNAME "OZ:PS:<CAL>MAIL.TXT.1"
 Arg 2 (NEW-PATHNAME): #FS:TOPS20-PATHNAME "OZ:PS:<CAL>MAIL._ZMAIL_TXT.1"
 Arg 3 (ERROR-P): T
Local 0 (HOST-UNIT): #<HOST-UNIT 10116772>
Local 1 (PKT): #<CHAOS Packet 36143737>
Local 2 (SUCCESS): NIL
Local 3 (STRING): " ERROR LCK F Source file is not closed"
Local 4 (IGNORE): NIL


(METHOD FS:CHAOS-PATHNAME RENAME) (P.C. = 43)
  (SELF is #FS:TOPS20-PATHNAME "OZ:PS:<CAL>MAIL.TXT.1")

 Arg 0 (OPERATION): RENAME
 Arg 1 (NEW-PATHNAME): #FS:TOPS20-PATHNAME "OZ:PS:<CAL>MAIL._ZMAIL_TXT.1"
   --Defaulted args:--
 Arg 2 (ERROR-P): T


(METHOD ZWEI:INBOX-BUFFER START-NEXT-FILE) (P.C. = 220)
  (SELF is #<TENEX-INBOX-BUFFER "New mail for CAL.BABYL PS:<CAL> OZ:" 25172201>)

 Arg 0 (OPERATION): START-NEXT-FILE
Local 0 (TEM): (#FS:TOPS20-PATHNAME "OZ:PS:<CAL>MAIL.TXT.1" #FS:TOPS20-PATHNAME "OZ:PS:<CAL>MAIL._ZMAIL_TXT.1" T)
Local 1 (FILE): #FS:TOPS20-PATHNAME "OZ:PS:<CAL>MAIL.TXT.1"
Local 2 (RENAME): #FS:TOPS20-PATHNAME "OZ:PS:<CAL>MAIL._ZMAIL_TXT.1"
Local 3 (DELETE-P): T
Local 4 (LOADING-NAME): #FS:TOPS20-PATHNAME "OZ:PS:<CAL>MAIL.TXT.1"
Local 5 (LOADING-TRUENAME): #FS:TOPS20-PATHNAME "OZ:PS:<CAL>MAIL.TXT.1"


ZWEI:GET-NEW-MAIL-FOR-ZMAIL-BUFFER (P.C. = 161)

 Arg 0 (ZMAIL-BUFFER): #<BABYL-MAIL-FILE-BUFFER "CAL.BABYL PS:<CAL> OZ:" 36141325>
 Arg 1 (FROM-FILE): NIL
 Arg 2 (DELETE-P): NIL
 Arg 3 (TELL-BACKGROUND-P): NIL
Local 0 (MOVE-P): NIL
Local 1 (INBOX-BUFFER): #<TENEX-INBOX-BUFFER "New mail for CAL.BABYL PS:<CAL> OZ:" 25172201>
Local 2 (APPEND-P): T
Local 3 (G1499): NIL
Local 4 (G1500): NIL


ZWEI:COM-GET-NEW-MAIL-INTERNAL (P.C. = 234)

 Arg 0 (FIRST-TIME-P): NIL
   --Defaulted args:--
 Arg 1 (FOR-BUFFER): #<BABYL-MAIL-FILE-BUFFER "CAL.BABYL PS:<CAL> OZ:" 36141325>
Local 0 (FROM-FILE): NIL


Remainder of stack:

ZWEI:COM-GET-NEW-MAIL (P.C. = 34)
ZWEI:COMMAND-EXECUTE (P.C. = 100)
ZWEI:ZMAIL-COMMAND-EXECUTE (P.C. = 27)
(METHOD ZWEI:ZMAIL-FRAME PROCESS-COMMAND-CHAR) (P.C. = 40)
(METHOD ZWEI:ZMAIL-COMMAND-LOOP-MIXIN COMMAND-LOOP) (P.C. = 273)
(INTERNAL (METHOD ZWEI:ZMAIL-FRAME COMBINED COMMAND-LOOP) 0) (P.C. = 50)
FUNCALL (P.C. = 25)
(METHOD ZWEI:ZMAIL-COMMAND-LOOP-MIXIN AROUND COMMAND-LOOP) (P.C. = 57)
(METHOD ZWEI:ZMAIL-FRAME COMBINED COMMAND-LOOP) (P.C. = 47)
ZWEI:ZMAIL-PROCESS-TOP-LEVEL (P.C. = 115)
SI:PROCESS-TOP-LEVEL (P.C. = 121)
 9-Apr-83 15:40:12-EST,2883;000000000000
Return-path: <CAL@MIT-OZ>
Date: Saturday, 9 April 1983, 15:39-EST
From: Cliff Lasser <CAL@MIT-OZ>
To: BUG-LISPM@MIT-OZ

In MIT-Specific 18.1, System 93.44, ZMail 49.18, microcode 226, gc@2,
on Lisp Machine Two:


Insert your description of the circumstances here:

Indenting a region.  The following piece of code was at the end of the buffer.
I had set the region around (+ ...).

(DEFUN GET-FLAGS (NODE)
  (+ (CELL-GET-SLOT HL-FLAGS NODE)
     (^ 2 24 (CELL-GET-SLOT HL-MARKERS NODE))))

>>TRAP 10072 (ARGTYP ARRAY M-A NIL GAHDR) ->  ARRAY-LEADER 
Some argument to ARRAY-LEADER, NIL, was of the wrong type.
The function expected an array.
Backtrace from the debugger:

ZWEI:MOVE-BP (P.C. = 75)

 Arg 0 (BP): ("     (^ 2 24 (CELL-GET-SLOT HL-MARKERS NODE))))" 5 NORMAL)
 Arg 1 (LINE): NIL
   --Defaulted args:--
 Arg 2 (INDEX): NIL
Local 0 (OLINE): "     (^ 2 24 (CELL-GET-SLOT HL-MARKERS NODE))))"


ZWEI:COM-INDENT-REGION (P.C. = 246)

Local 0 (COMMAND): ZWEI:COM-INDENT-FOR-LISP-COMMENTS-SPECIAL
Local 1 (BP1): NIL
Local 2 (BP2): NIL
Local 3 (REGION-LINES-BP1): ("     (^ 2 24 (CELL-GET-SLOT HL-MARKERS NODE))))" 5 NORMAL)
Local 4 (REGION-LINES-BP2): ("     (^ 2 24 (CELL-GET-SLOT HL-MARKERS NODE))))" 56 NORMAL)
Local 5 (START-LINE): "     (^ 2 24 (CELL-GET-SLOT HL-MARKERS NODE))))"
Local 6 (STOP-LINE): NIL
Local 7 (WIDTH): 11
Local 8 (POINT): ("     (^ 2 24 (CELL-GET-SLOT HL-MARKERS NODE))))" 5 NORMAL)
Local 9 (OLD-POINT): ("  (+ (CELL-GET-SLOT HL-FLAGS NODE)" 2)


Additional information supplied with call:
 Expecting 3 values

ZWEI:COMMAND-EXECUTE (P.C. = 100)

 Arg 0 (COMMAND): ZWEI:COM-INDENT-REGION
 Arg 1 (CHAR): 1534
 Arg 2 (PREFIX-CHAR): NIL
 Arg 3 (HOOK-LIST): (ZWEI:SHIFT-LOCK-HOOK)
Local 0 (G4734): NIL
Local 1 (HOOK): ZWEI:SHIFT-LOCK-HOOK


ZWEI:PROCESS-COMMAND-CHAR (P.C. = 67)

 Arg 0 (CH): 1534
Local 0 (VALUE): NIL
Local 1 (LINE): NIL
Local 2 (INDEX): NIL
Local 3 (G5246): NIL
Local 4 (HOOK): NIL


(METHOD ZWEI:WINDOW EDIT) (P.C. = 465)
  (SELF is #<ZMACS-WINDOW-PANE Zmacs Window Pane 1 15403703 exposed>)

 Arg 0 (OPERATION): EDIT
   --Defaulted args:--
 Arg 1 (IGNORE): NIL
 Arg 2 (*COMTAB*): #<COMTAB ZWEI:MODE-COMTAB 32656410>
 Arg 3 (*MODE-LINE-LIST*): ("ZMACS " "(" ZWEI:*MODE-NAME-LIST* ") " ...)
 Arg 4 (TOP-LEVEL-P): T
Local 0 (TEM1): ((** ** T ** ...))
Local 1 (G1278): ("Return to top level editor command loop.")
Local 2 (G1278): ((SYS:ABORT ERROR) ("Return to top level editor command loop.") T ("Return to top level editor command loop.") ...)
Local 3 (CH): 1534


Remainder of stack:

(INTERNAL (METHOD ZWEI:ZMACS-WINDOW COMBINED EDIT) 0) (P.C. = 74)
FUNCALL (P.C. = 25)
(METHOD ZWEI:DISPLAYER AROUND EDIT) (P.C. = 31)
(METHOD ZWEI:ZMACS-WINDOW COMBINED EDIT) (P.C. = 47)
ZWEI:ZMACS-WINDOW-TOP-LEVEL (P.C. = 46)
SI:PROCESS-TOP-LEVEL (P.C. = 121)
 9-Apr-83 15:57:41-EST,3924;000000000000
Return-path: <CAL@MIT-OZ>
Date: Saturday, 9 April 1983, 15:56-EST
From: Cliff Lasser <CAL@MIT-OZ>
To: BUG-LISPM@MIT-OZ

In MIT-Specific 18.1, System 93.44, ZMail 49.18, microcode 226, gc@2,
on Lisp Machine Two:


Insert your description of the circumstances here:

(describe zwei:n)
#<SECTION-NODE CONNECT 10214276>, an object of flavor ZWEI:SECTION-NODE,
 has instance variable values:
	ZWEI:FIRST-BP:      ("" 0 NORMAL)
	ZWEI:LAST-BP:       ("     (^ 2 24 (CELL-GET-SLOT HL-MARKERS NODE)))" 56 MOVES)
	ZWEI:TICK:          51217
	ZWEI:NEXT:          NIL
	ZWEI:PREVIOUS:      #<SECTION-NODE MAKNODE 10213471>
	ZWEI:SUPERIOR:      #<ZMACS-BUFFER "ULORIS.LISP PS:<CM.NETL> OZ:" 10204574>
	ZWEI:INFERIORS:     NIL
	ZWEI:UNDO-STATUS:   NIL
	ZWEI:READ-ONLY-P:   NIL
	SI:PROPERTY-LIST:   NIL
	ZWEI:NAME:          CONNECT
	ZWEI:DEFUN-LINE:    "(DEFUN CONNECT (WIRE NODE TARGET &AUX NODE-LIST TEMP TEMP1)"
	ZWEI:COMPILE-TICK:  7017
	ZWEI:SECTIONIZE-TICK:  7015

#<SECTION-NODE CONNECT 10214276>

I was playing around with reindenting that same piece of code and then this
happened:

>>TRAP 3772 (ARGTYP INSTANCE PP 0 XINSTANCE-LOC %INSTANCE-LOC)
The first argument to SYS:%INSTANCE-LOC, NIL, was of the wrong type.
The function expected an instance.
Backtrace from the debugger:

BP-NODE (P.C. = 47)

 Arg 0 (BP): ("     (^ 2 24 (CELL-GET-SLOT HL-MARKERS NODE)))" 57 :NORMAL)
Local 0 (LINE): "     (^ 2 24 (CELL-GET-SLOT HL-MARKERS NODE)))"
Local 1 (NODE): NIL
Local 2 (INDEX): 57
Local 3 (LAST-BP): ("     (^ 2 24 (CELL-GET-SLOT HL-MARKERS NODE)))" 56 :MOVES)


BP-TOP-LEVEL-NODE (P.C. = 24)

 Arg 0 (BP): ("     (^ 2 24 (CELL-GET-SLOT HL-MARKERS NODE)))" 57 :NORMAL)
Local 0 (NODE): NIL
Local 1 (SUPERIOR): NIL


(:METHOD WINDOW :REDISPLAY) (P.C. = 1533)
  (SELF is #<ZMACS-WINDOW-PANE Zmacs Window Pane 2 15426630 exposed>)

 Arg 0 (OPERATION): :REDISPLAY
 Arg 1 (RECENTER-TYPE): :POINT
 Arg 2 (RC1): NIL
 Arg 3 (RC2): NIL
 Arg 4 (FORCE-TO-COMPLETION-P): NIL
Local 0 (LH): 16
Local 1 (NOW): 51240
Local 2 (POINT-PLINE): NIL
Local 3 (POINT-LINE): "     (^ 2 24 (CELL-GET-SLOT HL-MARKERS NODE)))"
Local 4 (POINT-INDEX): 57
Local 5 (TOP-LINE): "	 (BARF /"node ///"~a///" already exists/"))"
Local 6 (TOP-INDEX): 0
Local 7 (LAST-BP): ("     (^ 2 24 (CELL-GET-SLOT HL-MARKERS NODE)))" 56 :MOVES)
Local 8 (INITIAL-DEGREE): 4
Local 9 (POINT-NODE): NIL
Local 10 (START-BP-NODE): NIL
Local 11 (BUF): NIL
Local 12 (NEW-TOP-INDEX): NIL
Local 13 (Y): NIL
Local 14 (LINE): "     (^ 2 24 (CELL-GET-SLOT HL-MARKERS NODE)))"
Local 15 (INDEX): NIL
Local 16 (P): NIL
Local 17 (LINE-LENGTH): NIL
Local 18 (LEN): NIL
Local 19 (DWID): NIL
Local 20 (CH): NIL
Local 21 (FONT): NIL
Local 22 (CWT): NIL
Local 23 (CWID): NIL
Local 24 (RWID): NIL
Local 25 (I): 117
Local 26 (TW): 1276
Local 27 (L): NIL
Local 28 (FROM-INDEX): 57
Local 29 (TO-INDEX): 56
Local 30 (PLINE): 41
Local 31 (STOP-LINE): "     (^ 2 24 (CELL-GET-SLOT HL-MARKERS NODE)))"
Local 32 (FROB): NIL
Local 33 (PLINE): NIL
Local 34: NIL
Local 35 (BL): NIL


REDISPLAY (P.C. = 72)

 Arg 0 (WINDOW): #<ZMACS-WINDOW-PANE Zmacs Window Pane 2 15426630 exposed>
   --Defaulted args:--
 Arg 1 (RECENTER-TYPE): :POINT
 Arg 2 (RC1): NIL
 Arg 3 (RC2): NIL
 Arg 4 (FORCE-TO-COMPLETION-P): NIL


REDISPLAY-ALL-WINDOWS (P.C. = 75)

   --Defaulted args:--
 Arg 0 (FORCE-TO-COMPLETION-P): NIL
 Arg 1 (SELECT-P): T
Local 0 (G5616): (#<ZMACS-WINDOW-PANE Zmacs Window Pane 2 15426630 exposed>)
Local 1 (WINDOW): #<ZMACS-WINDOW-PANE Zmacs Window Pane 2 15426630 exposed>


Remainder of stack:

(:METHOD WINDOW :EDIT) (P.C. = 407)
(:INTERNAL (:METHOD ZMACS-WINDOW :COMBINED :EDIT) 0) (P.C. = 74)
FUNCALL (P.C. = 25)
(:METHOD DISPLAYER :AROUND :EDIT) (P.C. = 31)
(:METHOD ZMACS-WINDOW :COMBINED :EDIT) (P.C. = 47)
ZMACS-WINDOW-TOP-LEVEL (P.C. = 46)
SI:PROCESS-TOP-LEVEL (P.C. = 121)
 9-Apr-83 16:16:35-EST,1172;000000000000
Return-path: <MLB@SPA-NIMBUS>
Date: Saturday, 9 April 1983, 12:46-PST
From: MLB at SPA-Nimbus
Subject: edit-disk-label bug
To: Gumby at MIT-OZ
Cc: mly at MIT-ML, BUG-LISPM at MIT-OZ
In-reply-to: The message of 8 Apr 83 17:38-PST from David Vinayak Wallace <Gumby at MIT-OZ>

    Date: Friday, 8 April 1983, 20:38-EST
    From: David Vinayak Wallace <Gumby@MIT-OZ>
	Date: Friday, 8 April 1983, 18:05-EST
	From: Richard Mlynarik <mly at MIT-ML>
	(si:edit-disk-label) thinks this machine's disk is a T80 when it
	initially displays the label -- it says T80 & only displays a few
	bands c-r [read band from disk] fixes it up (after that it knows
	about all bands and says T300)

    You're broken. It just displays a dummy label. Why on earth would you
    want to edit the label without reading it first? You'd have nothing
    relevent to edit.

YOU'RE broken.  It is sometimes more useful to start with a tabula rasa
if you are massively rearranging a disk, or if what's on it is very
bogus.  The default to a T80 is not particularly featureful though.  It
is also useful not to be gratuitously rude to well-meaning users who
send in bug reports.
 9-Apr-83 16:21:25-EST,1828;000000000000
Return-path: <dcp@SCRC-POINTER>
Received: from SCRC-BOXER by SCRC-TENEX with CHAOS; Sat 9-Apr-83 16:15:46-EST
Date: Saturday, 9 April 1983, 16:17-EST
From: dcp@SCRC-POINTER
Subject: Recent MINITS changes
To: bug-minits@MIT-MC, bug-twenex@MIT-XX, info-lispm@MIT-OZ,
    network@SCRC-POINTER

It used to be the case that MINITS would read packets out of the chaos
board at process level instead of interrupt level.  It did this so it
would not spend excessive time at priority 5 frobbing the chaos board
and not being able to service 9600 baud interrupts (whether they be
DL-type or DUP-11).  Unfortunately, waiting for a process to schedule
would often cause many packets to get lost.  Much of this is no longer
true.

It now drops the priority to that before the interrupt happened and
services the interface immediately (with appropriate checks and locks).
This allows 9600 baud interrupts to still happen, but does not have the
scheduling latency.  For a LispM blasting packets to a MINITS as fast as
it can (e.g., using the MINITS SINK contact name), about 34% of the
packets used to get lost.  Now this number is about 2%.  This also
improves output traffic because the output interrupt will also get
serviced nearly immediately (providing the receiving end does not
delay).

When the new software propigates (I'll make an attempt to do the 4
PDP-20s tomorrow [Sunday]) the effect users will see include the
following:
 * Faster writing of files to TWENEX (e.g., writing a LispM editor
     buffer or a CFTP transfer)
 * Better bridging between subnets (especially from a chaos subnet to an
     ethernet subnet).
 * Perhaps better terminal response on concentrators due to less lost
     packets on both the concentrator and other MINITS bridges on the
     route to/from the mainframe.
10-Apr-83 01:07:27-EST,2008;000000000000
Return-path: <CAL@MIT-OZ>
Date: Sunday, 10 April 1983, 01:07-EST
From: Cliff Lasser <CAL@MIT-OZ>
To: BUG-LISPM@MIT-OZ

In MIT-Specific 18.1, System 93.43, ZMail 49.18, microcode 226,
Yow! Won already!!, on Lisp Machine Eight:


Insert your description of the circumstances here:

Was doing a hacks:demo.  Crashed after trying munching tunes from the beginning
>>ERROR: Cannot convert 1001 into a string
Backtrace from the debugger:

STRING (P.C. = 105)

 Arg 0 (X): 1001


STRING-EQUAL (P.C. = 45)

 Arg 0 (STRING1): 1001
 Arg 1 (STRING2): "Color"
   --Defaulted args:--
 Arg 2 (IDX1): 0
 Arg 3 (IDX2): 0
 Arg 4 (LIM1): NIL
 Arg 5 (LIM2): NIL


HACKS:DEMO (P.C. = 127)

 Arg 0 (ALIST): (("From the beginning" VALUE ** DOCUMENTATION ...) ("Interesting" VALUE ** DOCUMENTATION ...))
 Arg 1 (NAME): "Munching Tunes"
Local 0 (CHOICE): (HACKS:MUNCHING-TUNES 1001 0)
Local 1 (G0850): NIL
Local 2 (G0850): NIL


HACKS:DEMO (P.C. = 144)

   --Defaulted args:--
 Arg 0 (ALIST): (("Abacus" VALUE ** DOCUMENTATION ...) ("Birds (xor'ing triangles)" VALUE ** DOCUMENTATION ...) ("Color TV Hacks" VALUE ** DOCUMENTATION ...) ("Crock" VALUE ** DOCUMENTATION ...) ...)
 Arg 1 (NAME): "Click the mouse to select the boxed demo."
Local 0 (CHOICE): (HACKS:MENU "Munching Tunes" ("Interesting" VALUE ** DOCUMENTATION ...) ("From the beginning" VALUE ** DOCUMENTATION ...))
Local 1 (G0850): (4411 . 127)
Local 2 (G0850): (45 . 1007)


SI:*EVAL (P.C. = 1145)

 Arg 0 (FORM): (HACKS:DEMO)
Local 0 (ARGNUM): 0
Local 1 (FCTN): #<DTP-FEF-POINTER HACKS:DEMO 3544321>
Local 2 (ARG-DESC): 400002
Local 3 (NUM-ARGS): 0
Local 4 (CLOSURE-PASSED): NIL
Local 5 (LAMBDA-LIST): NIL
Local 6 (LL): NIL
Local 7 (QUOTE-STATUS): NIL
Local 8 (REST-FLAG): NIL
Local 9 (ARGL): NIL
Local 10 (ADL): NIL
Local 11 (ITEM): NIL
Local 12 (*SELECTQ-ITEM*): NIL


Remainder of stack:

SI:EVAL-ABORT-TRIVIAL-ERRORS (P.C. = 44)
SI:LISP-TOP-LEVEL1 (P.C. = 254)
SI:LISP-TOP-LEVEL (P.C. = 35)
10-Apr-83 13:14:18-EST,1783;000000000000
Return-path: <RAG@MIT-ML>
Date: Sunday, 10 April 1983, 13:13-EST
From: RAG at MIT-ML
To: BUG-LISPM at MIT-OZ

In Remote-File 22.0, LMFILE-Remote 23.1, MIT-Specific 16.0, System 91.45,
ZMail 48.7, microcode 204, .., on Lisp Machine Thirty-one:

HELP! I'm trying to compile a function, and the compiler keeps blowing
up for reasons beyond me. The error I keep getting is this:

>>TRAP 5503. (ARGTYP NUMBER M-T 1. QIEQL0)
The second argument to =, NIL, was of the wrong type.
The function expected a number.
While in the function COMPILER:PEEP-ONE-SPOT  COMPILER:PEEP-WHOLE-FUNCTION  COMPILER:PEEP
Error occured while compiling RIGHT-PROC
COMPILER:PEEP-ONE-SPOT: (P.C. = 1120)
   Arg 0 (INDEX): 25.
Warning: the default cons area is COMPILER:FASD-TEMPORARY-AREA



The offending line of code is this:

(AND RIGHT (GO HOP))


The entire function is this:

(DEFUN RIGHT-PROC NIL
   (PROG (RESULT)
	 (SETQ RESULT NIL)  ;initialize local variable
     HOP (POP RIGHT SEG-TYPE)  ;the first token in RIGHT is the SEGment TYPE
                               ;SEG-TYPE is an NLP global variable
         (COND ((EQUAL (CAR RIGHT) '|(|)  ;are there creation specifications?
        	(POP RIGHT)  ;throw away |(|
	        (SETQ RESULT
		      (APPEND1 RESULT
			       (LIST SEG-TYPE (CREATION))))
     ;CREATION will generate the LISP code for the creation specifications
	        (POP RIGHT))  ;throw away |)|
	       (T (SETQ RESULT  ;otherwise just process the SEG-TYPE
			(APPEND1 RESULT
				 (LIST SEG-TYPE)))))
         (AND RIGHT (GO HOP))  ;is there more to process? then do it
         (RETURN (SETQ RIGHT RESULT))))  ;save the answer in RIGHT


Can anyone tell me what's going on, and/or what I should do to get this
compiled? Thanks.10-Apr-83 13:34:11-EST,1300;000000000000
Return-path: <HDT@MIT-OZ>
Mail-From: HDT created at 10-Apr-83 13:33:02
Date: 10 Apr 1983  13:33 EST (Sun)
From: Howard D. Trachtman <HDT@MIT-OZ>
To:   RAG@MIT-ML
Cc:   BUG-LISPM@MIT-OZ
In-reply-to: Msg of 10 Apr 1983 13:13-EST from RAG at MIT-ML

    Date: Sunday, 10 April 1983, 13:13-EST
    From: RAG at MIT-ML
    To:   BUG-LISPM at MIT-OZ

    In Remote-File 22.0, LMFILE-Remote 23.1, MIT-Specific 16.0, System 91.45,
    ZMail 48.7, microcode 204, .., on Lisp Machine Thirty-one:

    HELP! I'm trying to compile a function, and the compiler keeps blowing
    up for reasons beyond me. The error I keep getting is this:

    >>TRAP 5503. (ARGTYP NUMBER M-T 1. QIEQL0)
    The second argument to =, NIL, was of the wrong type.
    The function expected a number.
    While in the function COMPILER:PEEP-ONE-SPOT  COMPILER:PEEP-WHOLE-FUNCTION  COMPILER:PEEP
    Error occured while compiling RIGHT-PROC
    COMPILER:PEEP-ONE-SPOT: (P.C. = 1120)

This looks like a bug in the peephole optimizer.
Try SETQing compiler:peek-enable to NIL and see if it works.
If it does, then I'll know for sure.

This may be fixed in system 93, which you should try to convert to by
now.  It has many bugs fixed which are not fixed in 91, and there
are very few incompatabilities.
10-Apr-83 22:19:54-EST,1229;000000000000
Return-path: <Batali@MIT-OZ>
Date: Sunday, 10 April 1983, 22:12-EST
From: John Batali <Batali@MIT-OZ>
Subject: Subtracting Rationals
To: BUG-LISPM@MIT-OZ

In System 222.186, Hardcopy 11.14, Zmail 74.43, Tape 13.0, LMFS 30.26,
cold load 65, microcode TMC5-MIC 181, site configuration 20, on PI Project:

Just subtracting these two everyday rationals.....

>>Trap: Fixed point overflow.
While in the function SI:RATIONAL-SUB  SI:ARITHMETIC-FUNCTION-DIFFERENCE-RATIONAL-RATIONAL  -


SI:RATIONAL-SUB: (P.C. = 27)
 Arg 0 (NUMBER1): 37381\341
 Arg 1 (NUMBER2): -5415420\12617
 Local 2 (NUM1): 111005
 Local 3 (DEN1): 525
 Local 4 (NUM2): -24520774
 Local 5 (DEN2): 30511


SI:RATIONAL-SUB:  (P.C. = 27)
   Arg 0 (NUMBER1): 37381\341
   Arg 1 (NUMBER2): -5415420\12617

SI:ARITHMETIC-FUNCTION-DIFFERENCE-RATIONAL-RATIONAL:  (P.C. = 32)
   Arg 0 (X): 37381\341
   Arg 1 (Y): -5415420\12617

-:
   Arg 0 (NUMBER): 37381\341
   Rest arg (NUMBERS): (-5415420\12617)

SI:*EVAL:  (P.C. = 405)
   Arg 0 (FORM): (- 37381\341 -5415420\12617)

SI:LISP-TOP-LEVEL1:  (P.C. = 130)
   Arg 0 (TERMINAL-IO-initialization): #<LISP-LISTENER Lisp Listener 1 13600240 exposed>

SYS:LISP-TOP-LEVEL:  (P.C. = 7)
10-Apr-83 22:21:38-EST,343;000000000000
Return-path: <Batali@MIT-OZ>
Date: Sunday, 10 April 1983, 22:17-EST
From: John Batali <Batali@MIT-OZ>
Subject: Subtracting Rationals bug
To: BUG-LISPM@MIT-OZ

In System 222.186, Hardcopy 11.14, Zmail 74.43, Tape 13.0, LMFS 30.26,
cold load 65, microcode TMC5-MIC 181, site configuration 20, on PI Project:

Happens only on the 3600.
10-Apr-83 22:43:47-EST,615;000000000000
Return-path: <GUMBY@MIT-OZ>
Mail-From: GUMBY created at 10-Apr-83 22:39:49
Date: 10 Apr 1983  22:39 EST (Sun)
From: David Vinayak Wallace <GUMBY@MIT-OZ>
To:   John Batali <Batali@MIT-OZ>
Cc:   BUG-LISPM@MIT-OZ
Subject: Subtracting Rationals bug
In-reply-to: Msg of 10 Apr 1983 22:17-EST from John Batali <Batali>

    Date: Sunday, 10 April 1983, 22:17-EST
    From: John Batali <Batali>

    cold load 65, microcode TMC5-MIC 181, site configuration 20, on PI Project:

    Happens only on the 3600.

If you worked on something called the PI project, what use would YOU
have for rational numbers?
11-Apr-83 00:34:32-EST,4136;000000000000
Return-path: <MOON@SCRC-TENEX>
Received: from SCRC-BORZOI by SCRC-TENEX with CHAOS; Mon 11-Apr-83 00:28:27-EST
Date: Monday, 11 April 1983, 00:31-EST
From: David A. Moon <MOON@SCRC-TENEX>
Subject: (TV:MENU-CHOOSE NIL), (TV:MENU-CHOOSE '(NIL))
To: Kent M. Pitman <KMP@MIT-MC>
Cc: BUG-LISPM@MIT-OZ, doc@SCRC-TENEX, doc-changes@SCRC-TENEX

Pursuant to the enclosed mail, I changed menus with no choices to
come out a finite size (rather than invisibly small).  Such menus
are still blank since there wasn't anything obviously non-confusing
to display there, whereas blank is pretty clearly a menu without
any choices (one might well be confused as to why there are no
choices, of course).

I changed menus to remove NILs from the item list they are given; NIL
is not a valid menu item.

These changes may not need to be documented.

    Date: Sunday, 3 April 1983  21:27-EST
    From: MOON at SCRC-TENEX

    What would have (TV:MENU-CHOOSE NIL) do?  Error?  Return NIL?  Pop
    up a menu that says "no choices"?

    Date: 4 April 1983 04:57 EST
    From: Kent M. Pitman <KMP @ MIT-MC>

    Since anyone who calls TV:MENU-CHOOSE must handle the problem of it returning
    NIL anyway, it seems perfectly harmless to have it just return NIL. I see
    no reason to err. Since the only action that the user can take is to wave the
    mouse off the menu, I see no reason to bother him at all with such a menu.
    Certainly returning NIL will be functionally equivalent to what is done now,
    so won't break any programs that aren't already broken.

    Date: Monday, 4 April 1983, 09:11-EST
    From: Bruce E. Edwards <BEE@SCRC-TENEX>

    I do not like the idea that the menu should never appear, and just
    return, in the case where you gave it nil as a list of choices. Imagine
    someone with a bug in his program which causes it to pass nil as the
    choices. He cant understand why his code is not popping up a menu and
    spends his time looking for that problem instead of the real one. In the
    current situation, he gets a small menu which is certainly more
    indicative of the problem. Much better is to either give an error
    message, or pop up a menu with no sensitive items, saying "You have no
    choices".

    Date: 21 February 1983 16:33 EST
    From: Kent M. Pitman <KMP @ MIT-MC>
	Date: Monday, 21 February 1983  01:38-EST
	From: MOON at SCRC-TENEX
	    Date: Saturday, 15 January 1983, 13:42-EST
	    From: Kent M. Pitman <kmp at MIT-MC>
	    (TV:MENU-CHOOSE '(T NIL)) presents T and NIL as menu options, but is only willing
	    to draw a box around the T. NIL seems to be there just for decoration. If this
	    is not a valid menu item, it should complain rather than presenting it and having
	    it not work in the intuitive way.

	    Date: 15 Jan 1983 1605-EST
	    From: Daniel L. Weinreb <DLW at SCRC-TENEX>

	    NIL is not invalid as a menu item.  You're allowed to use it, and it's
	    supposed to do that.  See the documentation.

	Dan's reply is misinformation.  The documentation says nothing about NIL.
	The bug is that internally there are variables that are either the menu
	item the mouse is pointing at, or NIL if it isn't pointing at anything.  So
	NIL as a menu item isn't allowed.  The code could be fixed to complain if
	you use NIL as a menu item, but that seems fairly pointless.

	The documentation should be fixed.  The new documentation could point out
	that rather than (TV:MENU-CHOOSE '(T NIL)) you probably wanted
	(TV:MENU-CHOOSE '(("Yes" . T) ("No" . NIL))).

	Document name: Lisp Machine Choice Facilities

    I would prefer if (TV:MENU-CHOOSE '(FOO NIL BAR NIL)) offered only FOO and BAR
    as choices. This would mean, among other things, that one could do
    (TV:MENU-CHOOSE (LIST (IF condition some-menu-item)
			  some-other-menu-item
			  ...))
    and have only the non-NIL items actually appear. Such behavior could be useful
    enough to even call it a feature ... certainly it would be better to not show
    the NIL than to show it as something not mouse-sensitive.
11-Apr-83 01:19:25-EST,1428;000000000000
Return-path: <MOON@SCRC-TENEX>
Received: from SCRC-BORZOI by SCRC-TENEX with CHAOS; Mon 11-Apr-83 01:13:42-EST
Date: Monday, 11 April 1983, 01:16-EST
From: David A. Moon <MOON@SCRC-TENEX>
Subject: Subtracting Rationals
To: John Batali <Batali@MIT-OZ>
Cc: BUG-LISPM@MIT-OZ, bug-pi-3600@MIT-ML
In-reply-to: The message of 10 Apr 83 22:12-EST from John Batali <Batali at MIT-OZ>

    Date: Sunday, 10 April 1983, 22:12-EST
    From: John Batali <Batali@MIT-OZ>
    In System 222.186, Hardcopy 11.14, Zmail 74.43, Tape 13.0, LMFS 30.26,
    cold load 65, microcode TMC5-MIC 181, site configuration 20, on PI Project:

    Just subtracting these two everyday rationals.....

    >>Trap: Fixed point overflow.

    SI:RATIONAL-SUB: (P.C. = 27)
     Arg 0 (NUMBER1): 37381\341
     Arg 1 (NUMBER2): -5415420\12617
     Local 2 (NUM1): 111005
     Local 3 (DEN1): 525
     Local 4 (NUM2): -24520774
     Local 5 (DEN2): 30511

Indeed that function applied to those arguments should overflow into a bignum
at the subtract instruction at that PC.  It shouldn't signal an error.

I verified that it works in the current software and fails with microcode 181.
The software you have there is far out of date, and must be some sort of
bootleg since it doesn't even have a release number.  I assume the PI
machine will be getting Release 4.2 in a few days, like everyone else;
that should remove the problem.
11-Apr-83 14:14:29-EST,545;000000000000
Return-path: <BEE@SCRC-TENEX>
Received: from SCRC-MUDDY by SCRC-TENEX with CHAOS; Mon 11-Apr-83 08:07:52-EST
Date: Monday, 11 April 1983, 08:09-EST
From: Bruce E. Edwards <BEE@SCRC-TENEX>
Subject: Subtracting Rationals
To: Batali@MIT-OZ, BUG-LISPM@MIT-OZ
Cc: Software-reports@SCRC-TENEX
In-reply-to: The message of 10 Apr 83 22:12-EST from John Batali <Batali at MIT-OZ>

This problem is fixed in newer microcode, but I dont want to distribute
it without consultation with the customer service people, as it has
several differences.
11-Apr-83 14:48:47-EST,700;000000000000
Return-path: <BEE@SCRC-TENEX>
Received: from SCRC-MUDDY by SCRC-TENEX with CHAOS; Mon 11-Apr-83 08:25:15-EST
Date: Monday, 11 April 1983, 08:26-EST
From: Bruce E. Edwards <BEE@SCRC-TENEX>
Subject: Rel 4.2 misinformation
To: MOON@SCRC-TENEX
Cc: Batali@MIT-OZ, BUG-LISPM@MIT-OZ, bug-pi-3600@MIT-ML
In-reply-to: The message of 11 Apr 83 01:16-EST from David A. Moon <MOON at SCRC-TENEX>

The bug in subtraction has existed in the microcode since September, and
was not fixed until 3/29. Which means any microcode < 194. will not have
the correct version. Kerns will have to decide which ucodes to
distribute. I have been using the new ucodes exclusively and have not
noticed any problems.
11-Apr-83 17:01:24-EST,668;000000000000
Return-path: <JOHANN@MIT-OZ>
Mail-From: JOHANN created at 11-Apr-83 16:59:49
Date: 11 Apr 1983 1659-EST
From: JOHANN@MIT-OZ
Subject: CADR-2, a.k.a. CADR-8
To: bug-lispm@MIT-OZ, cherry@MIT-OZ, taft@MIT-OZ

CADR-2 has died (i.e., won't boot), and in
its final hour of death claimed to be CADR-8,
in disguise.  The latter turned out to be
annoying to several people, especially after
I inadvertently power-cycled CADR-8, which
someone else was trying to use.  CADR-2's
software presently announces that CADR-2's
console is attached to CADR-8.  This creates
a problem whenever someone needs to service
a device attached to a mis-labeled machine.
-------
11-Apr-83 17:19:00-EST,673;000000000000
Return-path: <MOON@SCRC-TENEX>
Date: Monday, 11 April 1983  17:11-EST
From: MOON at SCRC-TENEX
To:   JOHANN at MIT-OZ
Cc:   bug-lispm at MIT-OZ, cherry at MIT-OZ, taft at MIT-OZ
Subject: CADR-2, a.k.a. CADR-8
In-reply-to: The message of 11 Apr 1983 1659-EST from JOHANN@MIT-OZ

The machine's identity comes from its Chaosnet address switches, on
the IO board.  CADR-2 is 3140 and CADR-8 is 3142.  I suggest checking
the switches, which could have been inadvertently flipped, and checking
whether that bit on the unibus is stuck at 1.  Nonexistent Unibus locations
read as 0, so (cc:dbg-read 0) should return 0 (if I have spelled the
function name correctly.)
11-Apr-83 19:22:24-EST,544;000000000000
Return-path: <DANIEL@MIT-OZ>
Mail-From: DANIEL created at 11-Apr-83 19:19:49
Date: Mon, 11 Apr 1983  19:19 EST
From: Daniel Weise <DANIEL@MIT-OZ>
To:   JOHANN@MIT-OZ
Cc:   bug-lispm@MIT-OZ
Subject: CADR-2, a.k.a. CADR-8
In-reply-to: Msg of 11 Apr 1983  16:59-EST from JOHANN

Cadr2's IOB was swapped with cadr8's IOB so Taft could have
a serial line on a local cadr.  (cadr8 is on the 7th floor.)
Maybe someone who knows where the switches are can fix
things so the IOB's stay where they are and the identity
problem gets solved.
11-Apr-83 20:47:34-EST,1984;000000000000
Return-path: <CAL@MIT-OZ>
Date: Monday, 11 April 1983, 20:45-EST
From: Cliff Lasser <CAL@MIT-OZ>
To: BUG-LISPM@MIT-OZ

In MIT-Specific 18.1, System 93.45, ZMail 49.19, microcode 226, gc@2,
on Lisp Machine Eight:


Insert your description of the circumstances here:

This use to work
>>TRAP 6564 (ARGTYP FIXNUM (PP -2) 0 XDPB)
The first argument to DPB, NIL, was of the wrong type.
The function expected a fixnum.
Backtrace from the debugger:

COMPILER:MCLAP-LOAD (P.C. = 144)

 Arg 0 (LOAD-P): T
 Arg 1 (MCLAP): NIL
Local 0 (PARAM-LIST): NIL
Local 1 (MCLAP-CODE): NIL
Local 2 (FUNCTION-NAME): NIL
Local 3 (NEW-C-LOC): 26414
Local 4 (RTN-ACT): NIL
Local 5 (RTN-EVT): NIL
Local 6 (RTN-MM-LINKAGE-LIST): NIL
Local 7 (G1779): NIL
Local 8 (C): NIL
Local 9 (Q): NIL


COMPILER:MA-LOAD (P.C. = 64)

 Rest arg (FUNCTIONS): (CM-EXECUTE-1)
Local 1 (G1749): (CM-EXECUTE-1)
Local 2 (FUNCTION-NAME): CM-EXECUTE-1


SI:*EVAL (P.C. = 1145)

 Arg 0 (FORM): (COMPILER:MA-LOAD (QUOTE CM-EXECUTE-1))
Local 0 (ARGNUM): 1
Local 1 (FCTN): #<DTP-FEF-POINTER COMPILER:MA-LOAD 12476234>
Local 2 (ARG-DESC): 4000000
Local 3 (NUM-ARGS): 1
Local 4 (CLOSURE-PASSED): NIL
Local 5 (LAMBDA-LIST): NIL
Local 6 (LL): NIL
Local 7 (QUOTE-STATUS): NIL
Local 8 (REST-FLAG): NIL
Local 9 (ARGL): NIL
Local 10 (ADL): NIL
Local 11 (ITEM): NIL
Local 12 (*SELECTQ-ITEM*): NIL


SYS:FASL-OP-EVAL1 (P.C. = 115)

Local 0 (FORM): (COMPILER:MA-LOAD (QUOTE CM-EXECUTE-1))


SI:FASL-GROUP (P.C. = 101)

Local 0 (FASL-GROUP-FLAG): NIL
Local 1 (FASL-GROUP-BITS): 100061
Local 2 (FASL-GROUP-TYPE): 61
Local 3 (FASL-GROUP-LENGTH): 0


Remainder of stack:

SI:FASL-WHACK-SAVE-FASL-TABLE (P.C. = 67)
SI:FASL-WHACK (P.C. = 23)
SI:FASL-TOP-LEVEL (P.C. = 32)
SI:FASLOAD-INTERNAL (P.C. = 414)
LOAD (P.C. = 300)
QC-FILE-LOAD (P.C. = 26)
SI:*EVAL (P.C. = 1145)
SI:EVAL-ABORT-TRIVIAL-ERRORS (P.C. = 44)
SI:LISP-TOP-LEVEL1 (P.C. = 254)
SI:LISP-TOP-LEVEL (P.C. = 35)
11-Apr-83 20:57:33-EST,3891;000000000000
Return-path: <gak@MIT-OZ>
Date: Monday, 11 April 1983, 20:55-EST
From: Gumby@MIT-OZ
Sender: gak@MIT-OZ
To: BUG-LISPM@MIT-OZ

In MIT-Specific 18.1, System 93.42, ZMail 49.18, microcode 226, gc@2,b&w,
on Lisp Machine Four:


Insert your description of the circumstances here:

I was using DIRED COPY FILE. it prompted for a filename and I just typed
SRC:. It started to read the file and bombed.


>>ERROR: Version must be numeric in This is just off the top of my head; I know nothing of its logistics or
Backtrace from the debugger:

Additional information supplied with call:
 Expecting 5 values

(METHOD FS:TENEX-FAMILY-PATHNAME-MIXIN PARSE-NAMESTRING) (P.C. = 440)
  (SELF is #FS:TOPS20-PATHNAME "OZ:PS:<GUMBY>CPM3.BABYL.1")

 Arg 0 (OPERATION): PARSE-NAMESTRING
 Arg 1 (HOST-SPECIFIED): NIL
 Arg 2 (NAMESTRING): "This is just off the top of my head; I know nothing of its logistics or"
   --Defaulted args:--
 Arg 3 (START): 0
 Arg 4 (END): 107
Local 0 (DIR-DELIM-ALIST): ((74 . 76))
Local 1 (ALL-DELIMS): (74 72 56 73 ...)
Local 2 (IDX): 15
Local 3 (TEM): "JUST"
Local 4 (TEM1): NIL
Local 5 (DELIM): 40
Local 6 (DIR-DELIM): NIL
Local 7 (DEV): NIL
Local 8 (DIR): NIL
Local 9 (NAM): "THIS"
Local 10 (TYP): "IS"
Local 11 (VERS): NIL


FS:READ-DIRECTORY-STREAM-ENTRY (P.C. = 106)

 Arg 0 (STREAM): #<FILE-DIRECTORY-STREAM "OZ:PS:<GUMBY>CPM3.BABYL.1" 30470160>
 Arg 1 (DEFAULTING-PATHNAME): #FS:TOPS20-PATHNAME "OZ:PS:<GUMBY>CPM3.BABYL.1"
Local 0 (PATH): "This is just off the top of my head; I know nothing of its logistics or"
Local 1 (EOF): NIL
Local 2 (IND): NIL
Local 3 (FUN): NIL
Local 4 (DEFAULT-FUN): #<DTP-FEF-POINTER SUBSTRING 1613651>
Local 5 (DEV): NIL
Local 6 (DIR): NIL
Local 7 (NAM): NIL
Local 8 (TYP): NIL
Local 9 (VER): NIL
Local 10 (LINE): NIL
Local 11 (LEN): NIL
Local 12 (I): NIL
Local 13: NIL
Local 14 (PLIST): NIL
Local 15 (X): NIL
Local 16: NIL


(METHOD FS:DIRECTORY-STREAM-MIXIN READ-DIRECTORY-STREAM-ENTRY) (P.C. = 27)
  (SELF is #FS:TOPS20-PATHNAME "OZ:PS:<GUMBY>CPM3.BABYL.1")

 Arg 0 (OPERATION): READ-DIRECTORY-STREAM-ENTRY
 Arg 1 (STREAM): #<FILE-DIRECTORY-STREAM "OZ:PS:<GUMBY>CPM3.BABYL.1" 30470160>


(METHOD FS:DIRECTORY-STREAM-MIXIN DIRECTORY-LIST) (P.C. = 105)
  (SELF is #FS:TOPS20-PATHNAME "OZ:PS:<GUMBY>CPM3.BABYL.1")

 Arg 0 (OPERATION): DIRECTORY-LIST
 Arg 1 (OPTIONS): (DELETED)
Local 0 (DIR-LIST): NIL
Local 1 (G6145): #<FILE-DIRECTORY-STREAM "OZ:PS:<GUMBY>CPM3.BABYL.1" 30470160>
Local 2 (.FILE-ABORTED-FLAG.): ABORT
Local 3 (STREAM): #<FILE-DIRECTORY-STREAM "OZ:PS:<GUMBY>CPM3.BABYL.1" 30470160>
Local 4 (PATHNAME): #FS:TOPS20-PATHNAME "OZ:PS:<GUMBY>CPM3.BABYL.1"
Local 5 (ENTRY): (#FS:TOPS20-PATHNAME "OZ:OPTIONS:<GUMBY>BABYL." |Version:5| T |Append:1| ...)
Local 6 (G6149): ((#FS:TOPS20-PATHNAME "OZ:OPTIONS:<GUMBY>BABYL." |Version:5| T |Append:1| ...))
Local 7 (G6148): ((#FS:TOPS20-PATHNAME "OZ:OPTIONS:<GUMBY>BABYL." |Version:5| T |Append:1| ...))
Local 8 (NULL-ELEM): NIL


Additional information supplied with call:
 Expecting 2 values

(METHOD FS:PATHNAME PROPERTIES) (P.C. = 102)
  (SELF is #FS:TOPS20-PATHNAME "OZ:PS:<GUMBY>CPM3.BABYL.1")

 Arg 0 (OPERATION): PROPERTIES
 Arg 1 (ERROR-P): T
Local 0 (DIR): NIL
Local 1 (IGNORE): NIL


Remainder of stack:

FS:FILE-PROPERTIES (P.C. = 161)
FS:PRIMITIVE-COPY-FILE (P.C. = 235)
(METHOD FS:PATHNAME WILDCARD-MAP) (P.C. = 152)
COPY-FILE (P.C. = 172)
ZWEI:COM-DIRED-COPY (P.C. = 132)
ZWEI:COMMAND-EXECUTE (P.C. = 100)
ZWEI:PROCESS-COMMAND-CHAR (P.C. = 67)
(METHOD ZWEI:WINDOW EDIT) (P.C. = 465)
(INTERNAL (METHOD ZWEI:ZMACS-WINDOW COMBINED EDIT) 0) (P.C. = 74)
FUNCALL (P.C. = 25)
(METHOD ZWEI:DISPLAYER AROUND EDIT) (P.C. = 31)
(METHOD ZWEI:ZMACS-WINDOW COMBINED EDIT) (P.C. = 47)
ZWEI:ZMACS-WINDOW-TOP-LEVEL (P.C. = 46)
SI:PROCESS-TOP-LEVEL (P.C. = 121)
12-Apr-83 00:48:27-EST,726;000000000000
Return-path: <RWK@SCRC-TENEX>
Date: 12 Apr 1983 0037-EST
From: Robert W. Kerns <RWK@SCRC-TENEX>
Subject: Re: Rel 4.2 misinformation
To: BEE@SCRC-TENEX, MOON@SCRC-TENEX
cc: Batali@MIT-OZ, BUG-LISPM@MIT-OZ, bug-pi-3600@MIT-ML, RWK@SCRC-TENEX
In-Reply-To: The message of Monday, 11 April 1983, 08:26-EST from Bruce E. Edwards <BEE@SCRC-TENEX>

4.2 is already in distribution without the subtraction fixes.
However, Beta-test of 4.3 will begin in about a week.  Assuming
noone reports lossage, microcode 195 or a successor will be
part of that.  In the meantime, if someone wants to take something
more modern over to MIT, they have my blessing.  If not, I'll
try to take a GC'd world over later this week.
-------
12-Apr-83 02:23:24-EST,1076;000000000000
Return-path: <CENT@MIT-ML>
Date: 12 April 1983 02:23 EST
From: Pandora B. Berman <CENT @ MIT-ML>
Subject: files migrated
To: BUG-LISPM @ MIT-ML

dumper was trying to send this, but didn't know who to send it to.  to
tell it, create a file called DIRECTORY.OWNER. which contains the name
of someone responsible for the dir; then dumper will send to that
person.
----------
Date: 11 Apr 1983 0538-EST
From: The Mailer Daemon <Mailer@MIT-OZ>
To: <TU77-MAN@MIT-OZ>
Subject: Message of 11-Apr-83 05:35:37

Message failed for the following:
LMFONT@MIT-OZ: No such mailbox
            ------------
Date: 11-Apr-83 05:35:37
From: DUMPER
To: LMFONT
Subject: Migrated files
 The following files have been migrated:

PS:<LMFONT>HL12.QFASL.2
PS:<LMFONT>HL12I.QFASL.2
PS:<LMFONT>TR12.QFASL.2
PS:<LMFONT>TR12B.QFASL.2
PS:<LMFONT>TR12I.QFASL.2
-------
also

PS:<LMLIB>ALTO.QBIN.2
PS:<LMLIB>GPRINT.MQFASL.801
PS:<LMLIB>ZVAL.QFASL.47
PS:<LMLIB>ZVAL-89-210.LISP.1
PS:<LMLIB>ZVAL-89-210.QFASL.1
PS:<LMLIB>ZVAL-91.LISP.1
PS:<LMLIB>ZVAL-91.QFASL.1
-------
12-Apr-83 07:16:11-EST,1123;000000000000
Return-path: <PGS@MIT-OZ>
Date: Tuesday, 12 April 1983, 07:15-EST
From: Patrick Sobalvarro <PGS@MIT-OZ>
Subject: Flush file connections
To: BUG-lispm@MIT-OZ

In MIT-Specific 18.1, System 93.45, ZMail 49.19, microcode 226,
on Lisp Machine Twenty-five:

This has happened to me twice recently.  I logged in and tried to load a file.
The wholine said "Lock", and the load hung forever.  It was in a process-wait,
waiting for someone to unlock a file-system lock.  Peek P showed 17 "Flush file
connections" processes, each of which had eaten about 7 or 8 seconds of cpu
time, but none of which seemed to be doing anything.  I was unable to kill them
in Peek, because they bred faster than I could play with the mouse, but I
finally killed them all, and then tried again to load my file.  This time it
hung in Open, and I saw that my file job on OZ was in a RUN state, but seemed
to be doing nothing but thrashing, so I killed it.

Then I was able to load my file, but all this violence has left me feeling
shaken.  Bits on my hands, those little "Flush file connections" processes
running around, screaming12-Apr-83 10:12:53-EST,998;000000000000
Return-path: <dove@MIT-DSPG>
Date: Tuesday, 12 April 1983, 10:10-EST
From: Webster Dove <dove at MIT-DSPG>
To: BUG-LISPM at MIT-OZ

In MIT-Specific 18.1, System 93.41, ZMail 49.18, microcode 226, gc@2,
on Ford Prefect:

I was wrong about logging in when different fonts were used to
initialize a window.  I had used the form

  (:DEFAULT-INIT-PLIST
    :PANES
    `((H-AXIS-PANE KBPD-PANE
		   :LABEL NIL :BLINKER-P NIL :BORDERS NIL)
      (REAL-PANE KBPD-PANE
		 :LABEL NIL :BLINKER-P T :FONT-MAP (FONTS:CPTFONT FONTS:HL10B))
      (IMAG-PANE KBPD-PANE
		 :LABEL NIL :BLINKER-P T))

instead of

  (:DEFAULT-INIT-PLIST
    :PANES
    `((H-AXIS-PANE KBPD-PANE
		   :LABEL NIL :BLINKER-P NIL :BORDERS NIL)
      (REAL-PANE KBPD-PANE
		 :LABEL NIL :BLINKER-P T :FONT-MAP ,(LIST FONTS:CPTFONT FONTS:HL10B))
      (IMAG-PANE KBPD-PANE
		 :LABEL NIL :BLINKER-P T))

in the definining frame.

Apparently, the evaluation of the fonts eliminates the need to log into oz.

12-Apr-83 18:37:19-EST,1753;000000000000
Return-path: <RWK@SCRC-TENEX>
Date: 12 Apr 1983 1833-EST
From: Robert W. Kerns <RWK@SCRC-TENEX>
Subject: RWK spazz:  4.3 misinformation
To: pmiller@SCRC-VIXEN
cc: BEE@SCRC-VIXEN, MOON@SCRC-VIXEN, RWK@SCRC-TENEX, bug-lispm@MIT-OZ,
    batali@MIT-OZ
In-Reply-To: The message of 12 Apr 1983 09:54:19-EST from pmiller@scrc-vixen

    Date: 12 Apr 1983 09:54:19-EST
    From: pmiller@scrc-vixen
    	Date: 12 Apr 1983 0037-EST
    	From: Robert W. Kerns <RWK@SCRC-TENEX>
    	Subject: Re: Rel 4.2 misinformation
    	To: BEE@SCRC-TENEX, MOON@SCRC-TENEX
    	cc: Batali@MIT-OZ, BUG-LISPM@MIT-OZ, bug-pi-3600@MIT-ML, RWK@SCRC-TENEX
    	
    	4.2 is already in distribution without the subtraction fixes.
    	However, Beta-test of 4.3 will begin in about a week.  Assuming
    	noone reports lossage, microcode 195 or a successor will be
    	part of that.  In the meantime, if someone wants to take something
    	more modern over to MIT, they have my blessing.  If not, I'll
    	try to take a GC'd world over later this week.
    	-------
    	
    Egad!  Bob, there's no way 4.3 Beta test can begin in about a week.
Egad, did I say that?  I guess I did.  Obviously I did not
look at the recipients I was replying to very well either.
Foo.  But as you know we've always given MIT software in
advance of other customers (usually soon after we produce
the patches internally).

So what I really meant to say is I'd try to get new software
over to MIT.  It isn't quite the 4.3 Beta test.  Any Atari
people, etc. should disregard my spazz; you'll get 4.2 soon
and 4.3 beta test will happen after that.

I think what I meant by "begin in about a week" is that we'd
begin working on it then.  My face is very red.
-------
13-Apr-83 00:58:18-EST,1262;000000000000
Return-path: <Henry@MIT-OZ>
Date: Wednesday, 13 April 1983, 00:57-EST
From: Henry Lieberman <Henry@MIT-OZ>
Subject: Choose Variable Values
To: Bug-Lispm@MIT-OZ


I like using Choose Variable Values for setting up an interactive
program with edittable state, but I would often also like to have
a menu of operations for the program visible at the same time, and
let the user choose "modelessly" between altering the state and 
invoking one of the menu operations.  CVV almost works for this, 
using the "Margin Choices" feature, which can implement the menu
of operations. It would be nice if the margin choice feature could
be upgraded to a full fledged menu. Right now

- You can only have one line of margin choices. Too many choices
overprint on a single line.

- Margin choices don't highlight when the mouse gets close to them
like menu operations do. It would give the user more visible feedback
if they did. It would be nice to choose between having the "check the box"
format and an ordinary mouse-sensitive-string menu item format.

- It would be nice if the format of the item list for margin choices was the 
same as the format for menu item lists. 

Maybe the right thing here is a frame containing both a CVV and a menu.
13-Apr-83 03:05:50-EST,971;000000000000
Return-path: <Moon@SCRC-TENEX>
Received: from SCRC-NEPONSET by SCRC-TENEX with CHAOS; Wed 13-Apr-83 03:01:11-EST
Date: Wednesday, 13 April 1983, 03:02-EST
From: David A. Moon <Moon@SCRC-TENEX>
Subject: Choose Variable Values
To: Henry Lieberman <Henry@MIT-OZ>
Cc: Bug-Lispm@MIT-OZ
In-reply-to: The message of 13 Apr 83 00:57-EST from Henry Lieberman <Henry at MIT-OZ>

    Date: Wednesday, 13 April 1983, 00:57-EST
    From: Henry Lieberman <Henry@MIT-OZ>
    I like using Choose Variable Values for setting up an interactive
    program with edittable state, but I would often also like to have
    a menu of operations for the program visible at the same time....
    Maybe the right thing here is a frame containing both a CVV and a menu.
Precisely.  Would you like to have a "packaged" form of this that was
as easy to call as TV:MENU-CHOOSE, or are there too many parameters you
would want to customize, so that the packaged form would be useless?
13-Apr-83 15:07:23-EST,579;000000000000
Return-path: <HENRY@MIT-OZ>
Mail-From: HENRY created at 13-Apr-83 15:05:18
Date: Wed, 13 Apr 1983  15:05 EST
From: HENRY@MIT-OZ
To:   David A. Moon <Moon@SCRC-TENEX>
Cc:   Bug-Lispm@MIT-OZ
Subject: Choose Variable Values
In-reply-to: Msg of 13 Apr 1983 03:02-EST from David A. Moon <Moon at SCRC-TENEX>

    Precisely.  Would you like to have a "packaged" form of this that was
    as easy to call as TV:MENU-CHOOSE, or are there too many parameters you
    would want to customize, so that the packaged form would be useless?
The "packaged" form would be terrific!
13-Apr-83 22:38:40-EST,2759;000000000000
Return-path: <GAVAN@MIT-OZ>
Date: Wednesday, 13 April 1983, 22:31-EST
From: Gavan Duffy <GAVAN at MIT-OZ>
Subject: longer timeout on losing file connections?
To: BUG-LISPM at OZ

In Release 4.1, System 222.186, Hardcopy 11.14, Zmail 74.43, LMFS 30.26,
site configuration 20, on Lisp Machine Apiary-2:

One of the proceed options for this error is to retry the file connection
with a longer timeout.  When selected, it doesn't make the timeout longer
at all.  It apparently remains set at 600.

>>Error: MIT-OZ did not respond to a FILE 1 request.
While in the function CHAOS:CONNECT  (:METHOD FS:HOST-UNIT :VALIDATE-CONTROL-CONNECTION)  (:METHOD FS:FILE-HOST-MIXIN :GET-DATA-CONNECTION)


CHAOS:CONNECT: (P.C. = 266)
 Arg 0 (ADDRESS): #<TOPS20-CHAOS-HOST MIT-OZ>
 Arg 1 (CONTACT-NAME): "FILE 1"
 Arg 2 (WINDOW-SIZE): 5.
   --Defaulted args:--
 Arg 3 (TIMEOUT): 600.
 Local 0 (CONN): #<CHAOS Connection for FILE 1 to OZ 2102077>
 Local 1 (REAL-ADDRESS): 4870.
 Local 2 (TRY): 3.
 Local 3: ("Retry connection to ~A at ~S with longer timeout" #<TOPS20-CHAOS-HOST MIT-OZ> "FILE 1")
 Local 4: (#<ERROR-RESTART-HANDLER 2333106> #<DTP-LOCATIVE 6011054> #<DTP-LOCATIVE 213777>)
 Local 5 (.SELECTQ-ITEM.): CHAOS:RFC-SENT-STATE
 Local 6 (PKT): NIL
 Local 7 (STR): NIL


CHAOS:CONNECT:  (P.C. = 266)
   Arg 0 (ADDRESS): #<TOPS20-CHAOS-HOST MIT-OZ>
   Arg 1 (CONTACT-NAME): "FILE 1"
   Arg 2 (WINDOW-SIZE): 5.
   --Defaulted args:--
   Arg 3 (TIMEOUT): 600.

(:METHOD FS:HOST-UNIT :VALIDATE-CONTROL-CONNECTION):  (P.C. = 177)
   (SELF = #<HOST-UNIT 2732006>)
   Arg 0 (OPERATION): :VALIDATE-CONTROL-CONNECTION
   Arg 1 (NO-ERROR-P): NIL

(:METHOD FS:FILE-HOST-MIXIN :GET-DATA-CONNECTION):  (P.C. = 47)
   (SELF = #<TOPS20-CHAOS-HOST MIT-OZ>)
   Arg 0 (OPERATION): :GET-DATA-CONNECTION
   Arg 1 (DIRECTION): :INPUT

FS:OPEN-CHAOS:  (P.C. = 450)
   Arg 0 (HOST): #<TOPS20-CHAOS-HOST MIT-OZ>
   Arg 1 (*COMMAND-PATHNAME*): #<TOPS20-PATHNAME "OZ:TINMAN:<GAVAN.A>DICTIONARY.QBIN">
   Arg 2 (OPTIONS): (ERROR :REPROMPT :CHARACTERS NIL)

(:METHOD FS:CHAOS-PATHNAME OPEN):  (P.C. = 26)
   (SELF = #<TOPS20-PATHNAME "OZ:TINMAN:<GAVAN.A>DICTIONARY.QBIN">)
   Arg 0 (OPERATION): OPEN
   Arg 1 (PATHNAME): #<TOPS20-PATHNAME "OZ:TINMAN:<GAVAN.A>DICTIONARY.QBIN">
   Rest arg (OPTIONS): (ERROR :REPROMPT :CHARACTERS NIL)

OPEN:  (P.C. = 375)
   Arg 0 (PATHNAME): #<TOPS20-PATHNAME "OZ:TINMAN:<GAVAN.A>DICTIONARY.QBIN">
   Rest arg (KEYWORD-ARGS): (ERROR :REPROMPT :CHARACTERS NIL)

FASLOAD:  (P.C. = 76)
   Arg 0 (FILE-NAME): "oz:tinman:<gavan.a>dictionary"
   --Defaulted args:--
   Arg 1 (PKG): NIL
   Arg 2 (NO-MSG-P): NIL

SI:*EVAL:  (P.C. = 653)
   Arg 0 (FORM): (FASLOAD "oz:tinman:<gavan.a>dictionary")
13-Apr-83 23:23:58-EST,680;000000000000
Return-path: <RWK@SCRC-TENEX>
Date: 13 Apr 1983 2316-EST
From: Robert W. Kerns <RWK@SCRC-TENEX>
Subject: Re: longer timeout on losing file connections?
To: GAVAN@MIT-OZ, BUG-LISPM@MIT-OZ
cc: RWK@SCRC-TENEX
In-Reply-To: The message of Wednesday, 13 April 1983, 22:31-EST from Gavan Duffy <GAVAN at MIT-OZ>

The TIMEOUT argument to the CHAOS:CONNECT function is multiplied by
the TRY local variable, which counts how many attempts you have
made.  It is easy to be faked out into thinking it doesn't try longer
since it says it will use a longer timeout, but the TIMEOUT variable
stays the same.

However, I think it would be better to use EXP rather than *.
-------
14-Apr-83 10:19:03-EST,378;000000000000
Return-path: <dove@MIT-DSPG>
Date: Thursday, 14 April 1983, 10:08-EST
From: Webster Dove <dove at MIT-DSPG>
Subject: Does LOOP have a CONTINUE clause?
To: info-LISPM at MIT-OZ


Is there a way in (loop ...) to say

"go directly to the next iteration.  Do not execute the remaining
clauses of the body"

Such statements typically are called "continue" or "next"


14-Apr-83 10:24:16-EST,2034;000000000000
Return-path: <dove@MIT-DSPG>
Date: Thursday, 14 April 1983, 10:11-EST
From: Webster Dove <dove at MIT-DSPG>
To: BUG-LISPM at MIT-OZ

In MIT-Specific 18.1, System 93.41, ZMail 49.18, microcode 226, gc@2,
on Ford Prefect:


Insert your description of the circumstances here:

obscure bug.  I was in converse and wanted to send a "bug report"
(actually an information request) using the text from a converse
message.  I tried meta-x bug and it beeped.  I tried meta-control-x bug
and it worked.  When I finished the message, I hit end and this
happened.

>>ERROR: The object #<ZWEI-WINDOW-PANE Converse 15410133 exposed> received a EXIT-SPECIAL-BUFFER message, which went unclaimed.
The rest of the message was (T).
Backtrace from the debugger:

#<ZWEI-WINDOW-PANE Converse 15410133 exposed>:
   Arg 0: EXIT-SPECIAL-BUFFER
   Arg 1: T


SI:INSTANCE-HASH-FAILURE (P.C. = 126)

 Arg 0 (OP): EXIT-SPECIAL-BUFFER
 Rest arg (ARGS): (T)
Local 1 (HT): #<EQ-HASH-ARRAY (Funcallable) 15643563>
Local 2 (FN-LOCATION): NIL
Local 3 (FUNC): NIL


ZWEI:COM-EXIT-COM-MAIL (P.C. = 111)

Local 0 (BP1): ("To: info-LISPM@MIT-OZ" 0. NORMAL)
Local 1 (BP2): ("" 0.)
Local 2 (EXIT-FLAG): NIL


Additional information supplied with call:
 Expecting 3 values

ZWEI:COMMAND-EXECUTE (P.C. = 100)

 Arg 0 (COMMAND): ZWEI:COM-EXIT-COM-MAIL
 Arg 1 (CHAR): 148.
 Arg 2 (PREFIX-CHAR): NIL
 Arg 3 (HOOK-LIST): NIL
Local 0 (G4734): NIL
Local 1 (HOOK): NIL


ZWEI:PROCESS-COMMAND-CHAR (P.C. = 67)

 Arg 0 (CH): 148.
Local 0 (VALUE): NIL
Local 1 (LINE): NIL
Local 2 (INDEX): NIL
Local 3 (G5246): NIL
Local 4 (HOOK): NIL


Remainder of stack:

(METHOD ZWEI:WINDOW EDIT) (P.C. = 465)
(INTERNAL (METHOD ZWEI:ZWEI-WINDOW-PANE COMBINED EDIT) 0.) (P.C. = 74)
FUNCALL (P.C. = 25)
(METHOD ZWEI:DISPLAYER AROUND EDIT) (P.C. = 31)
(METHOD ZWEI:ZWEI-WINDOW-PANE COMBINED EDIT) (P.C. = 47)
(METHOD ZWEI:ZWEI-FRAME EDIT) (P.C. = 34)
ZWEI:CONVERSE-WINDOW-TOP-LEVEL (P.C. = 34)
SI:PROCESS-TOP-LEVEL (P.C. = 121)
14-Apr-83 10:28:27-EST,334;000000000000
Return-path: <dove@MIT-DSPG>
Date: Thursday, 14 April 1983, 10:14-EST
From: Webster Dove <dove at MIT-DSPG>
To: info-LISPM at MIT-OZ


Is there a way in (loop ...) to say

"go directly to the next iteration.  Do not execute the remaining
clauses of the body"

Such statements typically are called "continue" or "next"


14-Apr-83 10:40:14-EST,445;000000000000
Return-path: <BRD@MIT-OZ>
Mail-From: BRD created at 14-Apr-83 10:38:40
Date: 14 Apr 1983  10:38 EST (Thu)
From: Bruce R. Donald <BRD@MIT-OZ>
To:   bug-lispm@MIT-OZ
Subject:  ':defaulted-batch in MAKE-SYSTEM


Does not seem to turn off MORE processing all the time. (could this be
because I also did a terminal-5-t on the window?) The actual thing
I say is (make-system 'foo ':compile ':defaulted-batch ':no-reload-system-declaration)
15-Apr-83 00:13:12-EST,296;000000000000
Return-path: <Henry@MIT-OZ>
Date: Friday, 15 April 1983, 00:10-EST
From: Henry Lieberman <Henry@MIT-OZ>
Subject: Kill or Save Buffers menu
To: Bug-Lispm@MIT-OZ


How 'bout another column of boxes marked "Compile"
[for .LISP files], defaultly off, which would do a QC-FILE 
of the file.
15-Apr-83 00:52:46-EST,644;000000000000
Return-path: <kahle@MIT-OZ>
Date: Friday, 15 April 1983, 00:49-EST
From: CAL@MIT-OZ
Sender: kahle@MIT-OZ
To: BUG-LISPM@MIT-OZ

In MIT-Specific 18.1, System 93.45, ZMail 49.19,
Experimental DAEDALUS 2.4, Experimental Nodes 2.7, microcode 226,
Exp Daed, on Lisp Machine Eight:

the undo command in zmacs does not do the obvious thing for m-t.
For example, if I were to transpose the following:

(>> center gate-poly pulldown inverter)

to:

(>> center gate-poly inverter pulldown)

then do a single c-s-u, I get a:

(>> center gate-poly pulldown pulldown)

only after a second c-s-u do I finally get back the original text.15-Apr-83 04:52:13-EST,3415;000000000000
Return-path: <Mly@MIT-ML>
Date: Friday, 15 April 1983, 04:49-EST
From: Richard Mlynarik <Mly at MIT-ML>
To: BUG-LISPM at MIT-OZ

In MIT-Specific 18.1, System 93.46, ZMail 49.19, microcode 226,
on Lisp Machine Three:


Insert your description of the circumstances here:

I don't know if I could dupplicate this one...
Having used zmail's configure for some time, and already having had it display a previous
version of the init file it generated, I clicked right on "save" to get the menu, and then
on "save changes" [or somthing similarly named] when...

>>TRAP 7445 (INSTANCE-LACKS-INSTANCE-VARIABLE M-C M-A)
There is no instance variable EDITOR-VARIABLE-TICK in #<BABYL-MAIL-FILE-BUFFER "BUG-LISPM.BABYL PS:<DANIEL.G.MLY.L> OZ:" 11622762>.
Backtrace from the debugger:

INSERT-CHANGED-VARIABLES (P.C. = 246)

 Arg 0 (WHEN): T
Local 0 (BP): ("(LOGIN-SETQ *INHIBIT-BACKGROUND-SAVES* T)" 0)
Local 1 (START-BP): ("(LOGIN-SETQ *INHIBIT-BACKGROUND-SAVES* T)" 0)
Local 2 (LAST-END-BP): ("(LOGIN-SETQ *INHIBIT-BACKGROUND-SAVES* T)" 0)
Local 3 (STREAM): #<INTERVAL-STREAM 11643724>


PROFILE-SAVE-BUTTON (P.C. = 143)

 Arg 0 (NEAR-MODE): (:WINDOW #<BUTTON-PANE Save 15423433 exposed>)
Local 0 (MODE): :INSERT-CHANGED


(:SELECT-METHOD ZMAIL-PROFILE-COMMAND-LIST :MOUSE-BUTTON) (P.C. = 555)

 Arg 0 (IGNORE): :MOUSE-BUTTON
 Arg 1 (CH): 100002
 Arg 2 (WINDOW): #<BUTTON-PANE Save 15423433 exposed>
 Arg 3 (IGNORE): 32
 Arg 4 (IGNORE): 11
Local 0 (WINDOW-NAME): SAVE-BUTTON
Local 1 (*ZMAIL-COMMAND-BUTTON*): :RIGHT
Local 2 (NEAR-MODE): (:WINDOW #<BUTTON-PANE Save 15423433 exposed>)
Local 3 (ALIST): NIL
Local 4 (ZMAIL-BUFFER): NIL
Local 5 (G1337): NIL
Local 6 (.FILE-ABORTED-FLAG.): NIL
Local 7 (SRC-FILE): NIL
Local 8 (.WINDOW.): NIL
Local 9 (.FOR-WINDOW.): NIL
Local 10 (.OSTATUS.): NIL
Local 11 (.OSUBST.): NIL
Local 12 (.QUEUE-LEFT.): NIL
Local 13 (E): NIL


(:METHOD ZMAIL-PROFILE-FRAME :PROCESS-SPECIAL-COMMAND) (P.C. = 25)
  (SELF is #<ZMAIL-PROFILE-FRAME Zmail Profile Frame 1 15405210 exposed>)

 Arg 0 (OPERATION): :PROCESS-SPECIAL-COMMAND
 Rest arg (ARGS): (:MOUSE-BUTTON 100002 #<BUTTON-PANE Save 15423433 exposed> 32 ...)


(:METHOD ZMAIL-COMMAND-LOOP-MIXIN :COMMAND-LOOP) (P.C. = 266)
  (SELF is #<ZMAIL-PROFILE-FRAME Zmail Profile Frame 1 15405210 exposed>)

 Arg 0 (OPERATION): :COMMAND-LOOP
Local 0 (G0626): ("Return to ZMAIL command loop.")
Local 1 (G0626): ((SYS:ABORT ERROR) ("Return to ZMAIL command loop.") T ("Return to ZMAIL command loop.") ...)
Local 2 (RESPONSE): NIL
Local 3 (DEGREE): 0


Remainder of stack:

(:INTERNAL (:METHOD ZMAIL-UTILITY-FRAME :COMBINED :COMMAND-LOOP) 0) (P.C. = 50)
FUNCALL (P.C. = 25)
(:METHOD ZMAIL-COMMAND-LOOP-MIXIN :AROUND :COMMAND-LOOP) (P.C. = 57)
(:METHOD ZMAIL-UTILITY-FRAME :COMBINED :COMMAND-LOOP) (P.C. = 47)
COM-ZMAIL-PROFILE (P.C. = 243)
COMMAND-EXECUTE (P.C. = 100)
ZMAIL-COMMAND-EXECUTE (P.C. = 27)
(:SELECT-METHOD ZMAIL-COMMAND-LIST :MENU) (P.C. = 32)
(:METHOD ZMAIL-FRAME :PROCESS-SPECIAL-COMMAND) (P.C. = 25)
(:METHOD ZMAIL-COMMAND-LOOP-MIXIN :COMMAND-LOOP) (P.C. = 266)
(:INTERNAL (:METHOD ZMAIL-FRAME :COMBINED :COMMAND-LOOP) 0) (P.C. = 50)
FUNCALL (P.C. = 25)
(:METHOD ZMAIL-COMMAND-LOOP-MIXIN :AROUND :COMMAND-LOOP) (P.C. = 57)
(:METHOD ZMAIL-FRAME :COMBINED :COMMAND-LOOP) (P.C. = 47)
ZMAIL-PROCESS-TOP-LEVEL (P.C. = 115)
SI:PROCESS-TOP-LEVEL (P.C. = 121)
15-Apr-83 22:04:32-EST,4402;000000000000
Return-path: <SR.CYPHER@MIT-SPEECH>
Date: Friday, 15 April 1983, 21:54-EST
From: D. Scott Cyphers <SR.CYPHER at MIT-SPEECH>
Subject: Bad CDR code in file scavenger
To: BUG-LISPM at MIT-OZ

In Release 4.1, System 222.186, Hardcopy 11.14, Zmail 74.43, LMFS 30.26,
site configuration 19, on Lisp Machine Koala:

I was doing this make-system and had forgotten to load the destructuring
let.  This caused an error to occur in the compilation of the file
ATTRIBUTE.  I looked at ATTRIBUTE with the editor, realized I needed
Let, loaded it from Lisp inside the error handler, and typed
super-whatever to restart compilation.  A little later this popped up
and had me in the cold load stream (or something that looked like it).
I tried doing a control-m and other things to try to get some
information for a bug report, and couldn't really get anywhere.  The
problem was in LENGTH being called by something like FS:SCAVENGE-FILES
(sorry about forgetting to get a better name) which the backtrace seemed
to show was not called by anything else.  I finally got out of the
cold-load stream by returning from Length (the caller was not interested in
any values).  Suspecting I might have fixed things, I started the make-system
compiling again.  It opened the connection, had to log back in (you almost never have
to relog in on speech) and then proceeded to give this error again, although, I
believe, at a different address (sorry again).  As far as I know and can remember,
there was no strangeness going on before this happened.

>>Trap: A bad cdr-code was found in memory (at address 31020041)
While in the function FS:DEFAULT-PATHNAME  FASLOAD  SI:FASLOAD-1


FS:DEFAULT-PATHNAME: (P.C. = 127)
 Arg 0 (DEFAULTS): ((COMPILER:MOVE COMPILER:D-RETURN (COMPILER:LPDL 77)) (#<TOPS20-CHAOS-HOST MIT-SPEECH> . #<TOPS20-PATHNAME "SPEECH:SS:<SPIRE>SPIRE.LISP">) (#<TOPS20-CHAOS-HOST MIT-OZ> . #<TOPS20-PATHNAME "OZ:PS:<ANONYMOUS>FOO.LISP">) ((COMPILER:LPDL 77))<<Error printing value>>
   --Defaulted args:--
 Arg 1 (HOST): NIL
 Arg 2 (DEFAULT-TYPE): NIL
 Arg 3 (DEFAULT-VERSION): NIL
 Arg 4 (SAMPLE-P): NIL
 Local 0 (PATHNAME): NIL
 Local 1 (DEFAULT-HOST): NIL
 Local 2: NIL
 Local 3 (DEFAULT): NIL
 Local 4 (ELEM): NIL
 Local 5 (ACTOR): NIL
 Local 6 (CANONICAL-TYPE): NIL
 Local 7 (ORIGINAL-TYPE): NIL


FS:DEFAULT-PATHNAME:  (P.C. = 127)
   Arg 0 (DEFAULTS): ((COMPILER:MOVE COMPILER:D-RETURN (COMPILER:LPDL 77)) (#<TOPS20-CHAOS-HOST MIT-SPEECH> . #<TOPS20-PATHNAME "SPEECH:SS:<SPIRE>SPIRE.LISP">) (#<TOPS20-CHAOS-HOST MIT-OZ> . #<TOPS20-PATHNAME "OZ:PS:<ANONYMOUS>FOO.LISP">) ((COMPILER:LPDL 77))<<Error printing value>>
   --Defaulted args:--
   Arg 1 (HOST): NIL
   Arg 2 (DEFAULT-TYPE): NIL
   Arg 3 (DEFAULT-VERSION): NIL
   Arg 4 (SAMPLE-P): NIL

FASLOAD:  (P.C. = 67)
   Arg 0 (FILE-NAME): #<LOGICAL-PATHNAME "SPIRE: NEW-SPIRE; ATTRIBUTE QBIN >">
   Arg 1 (PKG): SPIRE
   Arg 2 (NO-MSG-P): T

SI:FASLOAD-1:  (P.C. = 26)
   Arg 0 (INFILE): #<LOGICAL-PATHNAME "SPIRE: NEW-SPIRE; ATTRIBUTE QBIN >">

SI:DO-FILE-TRANSFORMATIONS:  (P.C. = 317)

SI:PERFORM-TRANSFORMATIONS:  (P.C. = 176)
   Arg 0 (TRANSFORMATION-LIST): ((#<TRANSFORMATION COMPILE 22355243> SPIRE NIL) (#<TRANSFORMATION COMPILE 22355261> SPIRE NIL) (#<TRANSFORMATION COMPILE 22355277> SPIRE NIL) (#<TRANSFORMATION COMPILE 22355315> SPIRE NIL) (#<TRANSFORMATION COMPILE 22355333> SPIRE NIL) (#<TRANSFORMATION COMPILE 22355351> SPIRE NIL) (#<TRANSFORMATION COMPILE 22355367> SPIRE NIL) (#<TRANSFORMATION COMPILE 22355405> SPIRE NIL) (#<TRANSFORMATION COMPILE 22355423> SPIRE NIL) (#<TRANSFORMATION COMPILE 22355441> SPIRE NIL) ...)

SI:PERFORM-TRANSFORMATIONS:  (P.C. = 123)
   Arg 0 (TRANSFORMATION-LIST): ((#<TRANSFORMATION FASLOAD 22354767> SPIRE NIL) (#<TRANSFORMATION FASLOAD 22355252> SPIRE NIL) (#<TRANSFORMATION FASLOAD 22355270> SPIRE NIL) (#<TRANSFORMATION FASLOAD 22355306> SPIRE NIL) (#<TRANSFORMATION FASLOAD 22355324> SPIRE NIL) (#<TRANSFORMATION FASLOAD 22355342> SPIRE NIL) (#<TRANSFORMATION FASLOAD 22355360> SPIRE NIL) (#<TRANSFORMATION FASLOAD 22355376> SPIRE NIL) (#<TRANSFORMATION FASLOAD 22355414> SPIRE NIL) (#<TRANSFORMATION FASLOAD 22355432> SPIRE NIL) ...)

MAKE-SYSTEM:  (P.C. = 276)
   Arg 0 (SYSTEM): SPIRE-ITSELF
   Rest arg (KEYWORDS): (COMPILE)

SI:*EVAL:  (P.C. = 653)
   Arg 0 (FORM): (MAKE-SYSTEM (QUOTE SPIRE-ITSELF) (QUOTE COMPILE))
16-Apr-83 03:33:42-EST,1283;000000000000
Return-path: <Moon@SCRC-TENEX>
Received: from SCRC-NEPONSET by SCRC-TENEX with CHAOS; Sat 16-Apr-83 03:26:59-EST
Date: Saturday, 16 April 1983, 03:28-EST
From: David A. Moon <Moon@SCRC-TENEX>
Subject: Bad CDR code in file scavenger
To: D. Scott Cyphers <SR.CYPHER@MIT-SPEECH>
Cc: BUG-LISPM@MIT-OZ
In-reply-to: The message of 15 Apr 83 21:54-EST from D. Scott Cyphers <SR.CYPHER at MIT-SPEECH>

    Date: Friday, 15 April 1983, 21:54-EST
    From: D. Scott Cyphers <SR.CYPHER at MIT-SPEECH>
    ...loaded it from Lisp inside the error handler, and typed
    super-whatever to restart compilation.  A little later this popped up
    and had me in the cold load stream (or something that looked like it).

    >>Trap: A bad cdr-code was found in memory (at address 31020041)
    While in the function FS:DEFAULT-PATHNAME  FASLOAD  SI:FASLOAD-1

You were shafted by the compiler blowing out to the debugger with the default cons area
set to the temporary area.  You loaded in DLET, consing various things in that area,
then restarted the compiler, which threw it all on the floor.  Fixed on the L machine.

The debugger printed a message warning you of this, which you didn't notice or
didn't understand.  Probably that message needs to be made more forceful??
16-Apr-83 15:27:32-EST,365;000000000000
Return-path: <ZVONA@MIT-OZ>
Mail-From: ZVONA created at 16-Apr-83 15:26:34
Date: Sat, 16 Apr 1983  15:26 EST
From: ZVONA@MIT-OZ
To:   bug-lispm@MIT-OZ

Could there be a defsubst-method analogous to defun-method?  It would
generate the usual subst-type macro thingy and also a defun-method
type compiled fef.  This is useful in bumming out message passing.
16-Apr-83 20:04:07-EST,1265;000000000000
Return-path: <Straz@MIT-OZ>
Date: Saturday, 16 April 1983, 20:02-EST
From: Steve Strassmann <Straz@MIT-OZ>
To: BUG-LISPM@MIT-OZ, BUG-LMMAN@MIT-OZ

In MIT-Specific 18.1, System 93.32, ZMail 49.13, microcode 226, gc@2,
on Lisp Machine Nine:


The mouse blip for mouse-twice seems to be the same as the blip for
ctrl-mouse-once. This may be useful for some folks, but I think it's a bug.
Is there any plan to correct this?

How do I convert the encoded click (e.g. the (cadr mouse-blip)) into asking it explicitly
about state like l,m,r and once, twice, thrice? 


Manual stuff:
The window system manual (section 12.2.1) documentation of tv:mouse-button-encode
refers to a bit mask of "old-buttons" and "new-buttons" but it's unclear what
form they ought to take, or what they represent.

The title of section 12.6 (my copy as of 27-feb-83) is spelled "parmaters".
Section 3.2.3: Descendants is spelled descentents
Section 3.3: "...this is usually arrange by using tv:alias-for-inferiors-mixin..."
             arrange ought to be arranged.
Section 2.4: in tv:sheet-force-access, the "dont-prepare-flag" variable is undocumented.
Section 9.6: "operatiosn"
Section 15.3.1: the function "define-user-option" is referred to but not documented.16-Apr-83 21:49:16-EST,1406;000000000000
Return-path: <LCM@MIT-XX>
Date: Saturday, 16 April 1983, 21:40-EST
From: Larry C Miller <LCM at MIT-XX>
Subject: Window Debugger Problem?
To: BUG-LISPM at MIT-OZ

In Release 4.0, Experimental Macsyma 6.13, site configuration 12, on Zarniwoop:

I don't really know if this is a bug or just an oddity that cropped up.  I also
don't know where to send this message, so it goes to the most general place.

Currently logged-in as pf@xx, but with user-id set to lcm (a long story).
Entered window debugger, selected edit, mouse-pointed to a definition.
The window switched to the editor, ground for a while, then asked me to log in
as lcm@oz, at which point I broke off.

This is not a problem with the login sequence.  When I have to re-login (frequently;
the net is flaky), it prompts (correctly) me to login as pf@xx.

Is the machine perhaps seeking some additional system program at oz, a program which
it needs to complete the function of the debugger?  If so, there is no bug, but it
is a mite inconvenient to switch machines.  If it is seeking the file containing the
form I asked to edit, then there is a twofold problem:  it is looking at the wrong
variable for the login name (wrong relative to file-save logins), and it is looking
at the wrong machine (oz?  How come?  Zarniwoop's associated machine is ee.).

Thanks for your time.

                              pf (@xx)
17-Apr-83 00:27:37-EST,1115;000000000000
Return-path: <DCP@SCRC-TENEX>
Received: from SCRC-MYSTIC by SCRC-TENEX with CHAOS; Sun 17-Apr-83 00:19:43-EST
Date: Sunday, 17 April 1983, 00:21-EST
From: David C. Plummer <DCP@SCRC-TENEX>
To: Straz@MIT-OZ, BUG-LISPM@MIT-OZ
In-reply-to: The message of 16 Apr 83 20:02-EST from Steve Strassmann <Straz at MIT-OZ>

    Date: Saturday, 16 April 1983, 20:02-EST
    From: Steve Strassmann <Straz@MIT-OZ>
    In MIT-Specific 18.1, System 93.32, ZMail 49.13, microcode 226, gc@2,
    on Lisp Machine Nine:


    The mouse blip for mouse-twice seems to be the same as the blip for
    ctrl-mouse-once. This may be useful for some folks, but I think it's a bug.
    Is there any plan to correct this?

This was discussed long ago, and is /available/ as a /feature/.  The
reasoning is that it is sometimes unreliable to double click, either
because the fingers spazz, the mouse buttons stick, or a process is
running imposing a delay.  It is controlled (in Brand S) by
TV:*MOUSE-INCREMENTING-KEYSTATES*, and has the default value (:SHIFT
:CONTROL :HYPER).  Set it to NIL if you want the old behavior.
17-Apr-83 09:11:48-EST,292;000000000000
Return-path: <HDT@MIT-OZ>
Mail-From: HDT created at 17-Apr-83 09:07:49
Date: 17 Apr 1983  09:07 EST (Sun)
From: Howard D. Trachtman <HDT@MIT-OZ>
To:   bug-lispm@MIT-OZ

How about a system state of UNSUPPORTED for programs that aren't
exactly OBSOLETE and may only be a little BROKEN.
17-Apr-83 17:18:15-EST,2278;000000000000
Return-path: <Moon@SCRC-TENEX>
Received: from SCRC-NEPONSET by SCRC-TENEX with CHAOS; Sun 17-Apr-83 17:12:44-EST
Date: Sunday, 17 April 1983, 17:14-EST
From: David A. Moon <Moon@SCRC-TENEX>
Subject: Window Debugger Problem?
To: Larry C Miller <LCM%MIT-XX@MIT-MC>, PF%MIT-XX@MIT-MC
Cc: BUG-LISPM@MIT-OZ
In-reply-to: The message of 16 Apr 83 21:40-EST from Larry C Miller <LCM at MIT-XX>

    Date: Saturday, 16 April 1983, 21:40-EST
    From: Larry C Miller <LCM at MIT-XX>
    In Release 4.0, Experimental Macsyma 6.13, site configuration 12, on Zarniwoop:

    Currently logged-in as pf@xx, but with user-id set to lcm (a long story).
    Entered window debugger, selected edit, mouse-pointed to a definition.
    The window switched to the editor, ground for a while, then asked me to log in
    as lcm@oz, at which point I broke off.

    Is the machine perhaps seeking some additional system program at oz, a program which
    it needs to complete the function of the debugger?  If so, there is no bug, but it
    is a mite inconvenient to switch machines.  If it is seeking the file containing the
    form I asked to edit, then there is a twofold problem:  it is looking at the wrong
    variable for the login name (wrong relative to file-save logins), and it is looking
    at the wrong machine (oz?  How come?  Zarniwoop's associated machine is ee.).

It was going to OZ to read in the source code for the definition that
you told it to read in the source code of.  The reason the default login
name was LCM rather than PF was of course because you set it to that.
For a host that you have logged into before, it uses the same name as
you used before.  For a host that you haven't logged into before, it
defaults to the value of USER-ID.  I assume that when it offered that
default login name it also told you in the prompt that you could type
Altmode to set the login name to something else.

The reason the file access went to OZ rather than EE is that you were
looking (I assume) at the source for a system program, stored on the SYS
host.  The SYS host is the machine where system files are stored.  The
ASSOCIATED machine is the one that LOGIN logs into by default, and is
not necessarily related in any way to the SYS host.
17-Apr-83 17:47:22-EST,528;000000000000
Return-path: <kmp@MIT-OZ>
Date: Sunday, 17 April 1983, 17:46-EST
From: kmp@MIT-OZ
Subject: extraneous Peek typeout
To: BUG-LISPM@MIT-OZ

In Symbolics System 222.186,...

Typing System P P very fast when entering Peek still makes you wait for all the silly
help info to type out. Peek should do a LISTEN before spitting out that stuff.

Slightly harder but useful would be if (like on ITS) typing a character or clicking on
an option would interrupt the current typeout rather than having to wait for it to
finish.
17-Apr-83 21:00:13-EST,1833;000000000000
Return-path: <dph@MIT-SPEECH>
Date: Sunday, 17 April 1983, 18:46-EST
From: Daniel Huttenlocher <dph at MIT-SPEECH>
Subject: Page-Wiring bug
To: BUG-LISPM at MIT-OZ

In Release 4.1, System 222.186, Hardcopy 11.14, Zmail 74.43, LMFS 30.26,
Spire 7.14, site configuration 19, New Versatec Interface, on Lisp Machine Polar:

(DEFUN WIRE-PAGE (ADDRESS &OPTIONAL (WIRE-P T) SET-MODIFIED DONT-BOTHER-PAGING-IN)
  (IF WIRE-P
      (DO ()
	  ((%CHANGE-PAGE-STATUS ADDRESS %PHT-SWAP-STATUS-WIRED NIL)
	   (IF SET-MODIFIED			;Set modified bit without changing anything
	       (IF DONT-BOTHER-PAGING-IN	;and without touching uninitialized memory
		   (%P-STORE-TAG-AND-POINTER ADDRESS DTP-TRAP ADDRESS)
		   (%P-STORE-DATA-TYPE ADDRESS (%P-DATA-TYPE ADDRESS)))))
	(COND ((NOT DONT-BOTHER-PAGING-IN)
	       (%P-LDB 1 (%POINTER ADDRESS)))	;Haul it in
	      ((NULL (%PAGE-STATUS ADDRESS))
	       (WITHOUT-INTERRUPTS		;Try not to get aborted
		 (LET ((PFN (%FINDCORE)))
		   (OR (%PAGE-IN PFN (LSH ADDRESS -8))
		       ;Page already got in somehow, free up the PFN
		       (%CREATE-PHYSICAL-PAGE (LSH PFN 8))))))))
      (UNWIRE-PAGE ADDRESS)))

Consider the case where the page is already paged in and you say
DONT-BOTHER-PAGING-IN and you say SET-MODIFIED.  Then you bash the first
word of your page.

Is there, perhaps, some information someplace other than the code and
the microcode and beyond the CADR book as to the general idea behind
these types of things?  I have this program which does DMAs over the
unibus via interrupts and occasionally it seems that certain pages are
made to be unmodified after being made modified, or else they never get
to be modified, and DPH and me can not seem to find any corresponding
fencepost error that would correspond to our understanding of paging.

Thanks
17-Apr-83 21:04:13-EST,3397;000000000000
Return-path: <KwH@MIT-OZ>
Date: Sunday, 17 April 1983, 20:30-EST
From: Ken Haase <KwH@MIT-OZ>
To: BUG-LISPM@MIT-OZ

In MIT-Specific 18.1, System 93.46, ZMail 49.19,
Experimental Representation Language Language 6.1, microcode 226,
on Lisp Machine Six:


I simply tried to bring up a window with a centered label.
In the function TV:SHEET-STRING-OUT-CENTERED-EXPLICIT, there
is a call to <=, one of whose arguments comes from a call to
=;  I think it is dying there...


>>TRAP 5621. (ARGTYP NUMBER PP 0. QILSP)
The first argument to <, NIL, was of the wrong type.
The function expected a number.
Backtrace from the debugger:

TV:SHEET-STRING-OUT-CENTERED-EXPLICIT (P.C. = 275)

 Arg 0 (SHEET): #<QUERY-WINDOW Query Window 1 15426151 exposed>
 Arg 1 (STRING): "RLL Query Window"
 Arg 2 (LEFT): 4.
 Arg 3 (Y-POS): 2.
 Arg 4 (RIGHT): 496.
 Arg 5 (YLIM): 18.
 Arg 6 (FONT): #<FONT HL12BI 23676631>
 Arg 7 (ALU): 7.
 Arg 8 (START): 0.
 Arg 9 (END): 16.
 Arg 10 (MULTI-LINE-LINE-HEIGHT): 16.
Local 0 (WID): 492.
Local 1 (SWID): 148.
Local 2 (BEG): 0.
Local 3 (STOP): 16.


(:METHOD TV:SHEET :STRING-OUT-CENTERED-EXPLICIT) (P.C. = 132)
  (SELF is #<QUERY-WINDOW Query Window 1 15426151 exposed>)

 Arg 0 (OPERATION): :STRING-OUT-CENTERED-EXPLICIT
 Arg 1 (STRING): "RLL Query Window"
 Arg 2 (LEFT): 4.
 Arg 3 (Y-POS): 2.
 Arg 4 (RIGHT): 496.
 Arg 5 (Y-LIMIT): 18.
 Arg 6 (FONT): #<FONT HL12BI 23676631>
 Arg 7 (ALU): 7.
 Arg 8 (START): 0.
 Arg 9 (END): NIL
 Arg 10 (MULTI-LINE-LINE-HEIGHT): 16.


Additional information supplied with call:
 Expecting 3 values

(:METHOD TV:LABEL-MIXIN :DRAW-LABEL) (P.C. = 107)
  (SELF is #<QUERY-WINDOW Query Window 1 15426151 exposed>)

 Arg 0 (OPERATION): :DRAW-LABEL
 Arg 1 (SPEC): (4. 2. -4. 18. ...)
 Arg 2 (LEFT): 4.
 Arg 3 (TOP): 2.
 Arg 4 (RIGHT): 496.
 Arg 5 (BOTTOM): 18.
Local 0 (FONT): #<FONT HL12BI 23676631>


(:METHOD QUERY-WINDOW :COMBINED :DRAW-LABEL) (P.C. = 70)
  (SELF is #<QUERY-WINDOW Query Window 1 15426151 exposed>)

 Rest arg (.DAEMON-CALLER-ARGS.): (:DRAW-LABEL (4. 2. -4. 18. ...) 4. 2. ...)
Local 1 (.DAEMON-MAPPING-TABLE.): #<ART-16B-5. 17652701>
Local 2 (.VAL1.): NIL
Local 3 (.VAL2.): NIL
Local 4 (.VAL3.): NIL


TV:DRAW-LABEL (P.C. = 163)

 Rest arg (IGNORE): NIL
Local 1 (.OLD.OUTPUT.HOLD.): 0.
Local 2 (LEFT): 4.
Local 3 (TOP): 2.
Local 4 (RIGHT): 496.
Local 5 (BOTTOM): 18.


Remainder of stack:

(:METHOD TV:ESSENTIAL-LABEL-MIXIN :AFTER :REFRESH-MARGINS) (P.C. = 23)
(:METHOD TV:WINDOW :COMBINED :REFRESH-MARGINS) (P.C. = 73)
(:METHOD TV:SHEET :REFRESH) (P.C. = 304)
(:METHOD QUERY-WINDOW :COMBINED :REFRESH) (P.C. = 66)
(:METHOD TV:SHEET :EXPOSE) (P.C. = 646)
(:INTERNAL (:METHOD TV:WINDOW :COMBINED :EXPOSE) 0.) (P.C. = 60)
TV:SHEET-EXPOSE (P.C. = 170)
(:METHOD TV:WINDOW :COMBINED :EXPOSE) (P.C. = 37)
TV:EXPOSE-WINDOW-NEAR (P.C. = 500)
(:METHOD TV:ESSENTIAL-SET-EDGES :EXPOSE-NEAR) (P.C. = 40)
TYPEOUT-SET-SLOT-VALUE (P.C. = 150)
(:SELECT-METHOD ZWEI:PROCESS-SPECIAL-COMMAND :TYPEOUT-EXECUTE) (P.C. = 25)
(:METHOD ZWEI:WINDOW :EDIT) (P.C. = 453)
(:INTERNAL (:METHOD ZWEI:ZMACS-WINDOW :COMBINED :EDIT) 0.) (P.C. = 74)
FUNCALL (P.C. = 25)
(:METHOD ZWEI:DISPLAYER :AROUND :EDIT) (P.C. = 31)
(:METHOD ZWEI:ZMACS-WINDOW :COMBINED :EDIT) (P.C. = 47)
ZWEI:ZMACS-WINDOW-TOP-LEVEL (P.C. = 46)
SI:PROCESS-TOP-LEVEL (P.C. = 121)
17-Apr-83 21:05:16-EST,979;000000000000
Return-path: <kmp@MIT-OZ>
Date: Sunday, 17 April 1983, 21:03-EST
From: kmp@MIT-OZ
Subject: Converse -- End vs Control-End
To: BUG-LISPM@MIT-OZ

I would like End and Control-End in Converse to be swapped.

Rationale:

 * If the window doesn't go away, it takes only one keystroke (Abort) to 
   make it go away; even System E or System L isn't that bad if I don't
   notice Abort will bury the window.

 * If the window does go away and I don't want it to, it costs me two window switches
   to get it back. This is a very draggy operation.

 * If I have bothered to select Converse at all (I get pop-up send notification), it
   is usually because I'm in ``conversation mode'' and I would like the window to have
   the feel of a com link (a la ITS). If typing End makes the window go away, it doesn't
   have this sort of feel.

In the worst case, this should be a settable mode, but it looks to me like even
in that case the defaults should be swapped.
17-Apr-83 21:32:35-EST,687;000000000000
Return-path: <Gumby@MIT-OZ>
Date: Sunday, 17 April 1983, 21:30-EST
From: David Vinayak Wallace <Gumby@MIT-OZ>
To: BUG-LISPM@MIT-OZ

In Release 4.1, System 222.186, Hardcopy 11.14, Zmail 74.43, LMFS 30.26,
site configuration 20, on Lisp Machine Two:

I completed src:<gumby>index with END; it completed to indexr.directory.
Either ZWEI should catch this attempt or the system should recover more
gracefully.  This isn't a file-system bug.

>>Error: File system bug on host MIT-OZ:
Invalid access requested (at 5464 inside FILE server)
For OZ:SRC:<GUMBY>INDEXR.DIRECTORY
While in the function (METHOD FS:HOST-UNIT COMMAND)  FS:OPEN-CHAOS  (METHOD FS:CHAOS-PATHNAME OPEN)
17-Apr-83 23:06:23-EST,1127;000000000000
Return-path: <PF@MIT-XX>
Date: 17 Apr 1983  23:01 EST (Sun)
From: Paul Fuqua <PF@MIT-XX>
To:   David A. Moon <Moon%SCRC-TENEX@MIT-ML>
Cc:   BUG-LISPM%MIT-OZ@MIT-ML, pf@MIT-XX
Subject: Window Debugger Problem?
In-reply-to: Msg of 17 Apr 1983 17:14-EST from David A. Moon <Moon%SCRC-TENEX at MIT-ML>


    Date: Sunday, 17 April 1983, 17:14-EST
    From: David A. Moon <Moon%SCRC-TENEX at MIT-ML>
    To:   Larry C Miller <LCM>, PF

    It was going to OZ to read in the source code for the definition that you
    told it to read in the source code of. ....  The reason the file access
    went to OZ rather than EE is that you were looking (I assume) at the
    source for a system program, stored on the SYS host.

     Thanks.  I guess it went looking for a system program because I had
pointed to a form *inside* my (uncompiled) code, so it went off and tried to
edit "cond" or somesuch instead of the enclosing function.  I'm still
unfamiliar with the window debugger and didn't realise that behavior.  This
is learning by trial-and-error.  Sorry for the trouble.

                              pf
18-Apr-83 00:53:19-EST,707;000000000000
Return-path: <RpK@MIT-OZ>
Date: Monday, 18 April 1983, 00:33-EST
From: Robert P. Krajewski <RpK@MIT-OZ>
To: BUG-LISPM@MIT-OZ

In MIT-Specific 18.1, System 93.46, ZMail 49.19, microcode 226,
on Lisp Machine Twenty-five:


I can't this machine to get into ZMacs.  If I type System-E, I get a
whostate of "No Selected Window".  If I type (ED) to a lisp listener, I get a lot
of paging and "No Selected Window".  If I type c-<Abort> at that point, I get a
whostate of "Set *DEFAULT-BASE*" -- another c-<Abort> will get me back to Lisp.
I did call ZWEI:LOAD-FILE-INTO-ZMACS beforehand, but it was in another process.
Also, I would like it if there was a SILENT-P optional argument to it.

``Bob''