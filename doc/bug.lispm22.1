13-Nov-83 17:44:17-EST,5067;000000000000
Date: Sunday, 13 November 1983, 17:44-EST
From: Henry Lieberman <Henry at MIT-OZ>
Subject: FED crash
To: BUG-LISPM at MIT-OZ

In Release 5.0 [GC'd Beta Test rev 3], dusty plum, on Lisp Machine Apriary-3 (3600):

Just tried to start up FED...

>>Trap: The first argument given to the FOLLOW-CELL-FORWARDING instruction, NIL, was not a locative.
While in the function DBG:CELL-LOCATION-IN-STACK-GROUP  SYMEVAL-IN-STACK-GROUP  (:METHOD TV:BASIC-CHOOSE-VARIABLE-VALUES :ITEM-WIDTH)

DBG:CELL-LOCATION-IN-STACK-GROUP:  (P.C. = 60)
   Arg 0 (CELL): #<DTP-LOCATIVE 31221735>
   Arg 1 (SG): #<STACK-GROUP Fed-1 404027>
   Arg 2 (FRAME): NIL
   Local 3 (STACK-POINTER): NIL
   Local 4 (STACK-BOUNDARY): NIL
   Local 5 (STACK-LOW): #<DTP-LOCATIVE 404055>
   Local 6 (INSIDE-BOUNDARY): #<DTP-LOCATIVE 31221735>
   Local 7 (OUTSIDE-BOUNDARY): NIL

SYMEVAL-IN-STACK-GROUP:  (P.C. = 12)
   Arg 0 (SYM): FED:*CURFONT-BLINKER-HEIGHT*
   Arg 1 (SG): #<STACK-GROUP Fed-1 404027>
   --Defaulted args:--
   Arg 2 (FRAME): NIL
   Arg 3 (AS-IF-CURRENT): NIL

(:METHOD TV:BASIC-CHOOSE-VARIABLE-VALUES :ITEM-WIDTH):  (P.C. = 37)
   Arg 0 (SELF): #<UNSELECTABLE-CHVV-PANE Unselectable Chvv Pane 1 2240673 deactivated>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:BASIC-CHOOSE-VARIABLE-VALUES -- 7. IV's, 0. FL's 16217535>
   Arg 2 (OPERATION): :ITEM-WIDTH
   Arg 3 (ITEM): (FED:*CURFONT-BLINKER-HEIGHT* "Blinker Height" FED:FED-DECNUM)
   --Defaulted args:--
   Arg 4 (EXTRA-WIDTH): 0
   Arg 5 (STOP-X): NIL

(:METHOD TV:BASIC-CHOOSE-VARIABLE-VALUES :ADJUST-GEOMETRY-FOR-NEW-VARIABLES):  (P.C. = 24)
   Arg 0 (SELF): #<UNSELECTABLE-CHVV-PANE Unselectable Chvv Pane 1 2240673 deactivated>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:BASIC-CHOOSE-VARIABLE-VALUES -- 7. IV's, 0. FL's 16217535>
   Arg 2 (OPERATION): :ADJUST-GEOMETRY-FOR-NEW-VARIABLES
   Arg 3 (WID): NIL

(:METHOD TV:BASIC-CHOOSE-VARIABLE-VALUES :SET-VARIABLES):  (P.C. = 23)
   Arg 0 (SELF): #<UNSELECTABLE-CHVV-PANE Unselectable Chvv Pane 1 2240673 deactivated>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:BASIC-CHOOSE-VARIABLE-VALUES -- 7. IV's, 0. FL's 16217535>
   Arg 2 (OPERATION): :SET-VARIABLES
   Arg 3 (ELEMS): ((FED:*CURFONT-BLINKER-HEIGHT* "Blinker Height" FED:FED-DECNUM) (FED:*CURFONT-BLINKER-WIDTH* "Blinker Width" FED:FED-DECNUM) (FED:*CURFONT-BASELINE* "Base Line" FED:FED-DECNUM) (FED:*CURFONT-CHAR-HEIGHT* "Character Height" FED:FED-DECNUM))
   Arg 4 (NO-SET-HEIGHT): T

(:METHOD TV:BASIC-CHOOSE-VARIABLE-VALUES :AFTER :INIT):  (P.C. = 14)
   Arg 0 (SELF): #<UNSELECTABLE-CHVV-PANE Unselectable Chvv Pane 1 2240673 deactivated>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:BASIC-CHOOSE-VARIABLE-VALUES -- 7. IV's, 0. FL's 16217535>
   Arg 2 (OPERATION): :INIT
   Arg 3 (PLIST): #<DTP-LOCATIVE 26500637>

(:METHOD TV:CHOOSE-VARIABLE-VALUES-WINDOW :COMBINED :INIT):  (P.C. = 131)
   Arg 0 (SELF): #<UNSELECTABLE-CHVV-PANE Unselectable Chvv Pane 1 2240673 deactivated>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:CHOOSE-VARIABLE-VALUES-WINDOW -- 2. IV's, 21. FL's 16217545>
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

TV:MAKE-WINDOW:  (P.C. = 66)
   Arg 0 (FLAVOR-NAME): FED:UNSELECTABLE-CHVV-PANE
   Rest arg (OPTIONS): (:SUPERIOR #<FED Fed 1 2240376 deactivated> :IO-BUFFER #<IO-BUFFER 402324: empty, State: NIL> :VARIABLES ((FED:*CURFONT-BLINKER-HEIGHT* "Blinker Height" FED:FED-DECNUM) (FED:*CURFONT-BLINKER-WIDTH* "Blinker Width" FED:FED-DECNUM) (FED:*CURFONT-BASELINE* "Base Line" FED:FED-DECNUM) (FED:*CURFONT-CHAR-HEIGHT* "Character Height" FED:FED-DECNUM)) :STACK-GROUP #<STACK-GROUP Fed-1 404027> :LABEL (:STRING "Font parameters (decimal)" :FONT FONTS:TR12I))

Rest of stack:
(:METHOD TV:CONSTRAINT-FRAME-WITH-SHARED-IO-BUFFER :CREATE-PANE):  (P.C. = 12)
(:DEFUN-METHOD TV:CONSTRAINT-FRAME-WINDOWS):  (P.C. = 11)
(:DEFUN-METHOD TV:CONSTRAINT-FRAME-PROCESS-CONSTRAINTS):  (P.C. = 20)
(:METHOD TV:BASIC-CONSTRAINT-FRAME :AFTER :INIT):  (P.C. = 5)
(:METHOD FED :COMBINED :INIT):  (P.C. = 100)
TV:MAKE-WINDOW:  (P.C. = 66)
(:METHOD TV:CONSTRAINT-FRAME-WITH-SHARED-IO-BUFFER :CREATE-PANE):  (P.C. = 12)
(:DEFUN-METHOD TV:CONSTRAINT-FRAME-WINDOWS):  (P.C. = 11)
(:DEFUN-METHOD TV:CONSTRAINT-FRAME-PROCESS-CONSTRAINTS):  (P.C. = 20)
(:METHOD TV:BASIC-CONSTRAINT-FRAME :AFTER :INIT):  (P.C. = 5)
(:METHOD FED:FED-GREAT-FRAME :COMBINED :INIT):  (P.C. = 106)
TV:MAKE-WINDOW:  (P.C. = 66)
FED:  (P.C. = 15)
SI:*EVAL:  (P.C. = 370)
ZWEI:DO-IT-MULTIPLE-EVAL:  (P.C. = 14)  (from OZ:PS:<HENRY>ZTOP)
ZWEI:DO-IT-EVAL-PRINT:  (P.C. = 22)  (from OZ:PS:<HENRY>ZTOP)
ZWEI:DO-IT-EVAL-AND-PRINT-FORMS:  (P.C. = 11)  (from OZ:PS:<HENRY>ZTOP)
ZWEI:DO-IT:  (P.C. = 44)  (from OZ:PS:<HENRY>ZTOP)
ZWEI:COM-DO-IT:  (P.C. = 7)  (from OZ:PS:<HENRY>ZTOP)
ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 200)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 41)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
13-Nov-83 18:18:22-EST,256;000000000000
Date: Sunday, 13 November 1983, 18:17-EST
From: David Chapman <Zvona at MIT-OZ>
To: bug-lispm at MIT-OZ

How do I make it so that MC's default name is ``MC'' and not ``MITMC''?
There doesn't seem to be a way to do this from tv:edit-namespace-object.
13-Nov-83 18:22:49-EST,188;000000000000
Date: Sunday, 13 November 1983, 18:21-EST
From: David Chapman <Zvona at MIT-OZ>
To: bug-lispm at MIT-OZ

Rel 5 m-X Clean Directory still asks if you want to expunge a VMS
directory.
13-Nov-83 18:34:08-EST,451;000000000000
Date: Sunday, 13 November 1983, 18:34-EST
From: Carl Hewitt <HEWITT at MIT-OZ>
Subject: trying to edit namespace object halts machine
To: BUG-rel-5 at MIT-OZ
Cc: Hewitt at MIT-OZ

In Release 5.0 [GC'd Beta Test rev 3], dusty plum, on Lisp Machine Apiary-4 (3600):

I tried to do (TV:EDIT-NAMESPACE-OBJECT) which resulting in this machine halting with
reason Disk hardware or micro task hung with disk micro state 1000(8) 216110463(8) 2(8)

13-Nov-83 21:09:18-EST,386;000000000000
Mail-From: HEWITT created at 13-Nov-83 21:08:42
Date: Sun, 13 Nov 1983  21:08 EST
Message-ID: <HEWITT.11967421314.BABYL@MIT-OZ>
From: HEWITT@MIT-OZ
To:   bug-symbolics-software@MIT-OZ
cc:   Hewitt@MIT-XX
Reply-to:  Hewitt at MIT-XX
Subject:  bugs in Release 5

Please send your reports to 

BUG-REL-5@OZ

It will be redistributed here and to Symbolics.

Thanks,

Carl
13-Nov-83 22:45:30-EST,1015;000000000000
Received: from SCRC-HUDSON by SCRC-TENEX with CHAOS; Sun 13-Nov-83 22:44:37-EST
Date: Sun, 13 Nov 83 22:48 EST
From: Neal Feinberg <Feinberg%SCRC-YUKON@MIT-MC.ARPA>
Subject: bugs in Release 5
To: Hewitt@MIT-XX.ARPA, Henry@MIT-OZ.ARPA,
    bug-symbolics-software@MIT-OZ.ARPA
Cc: Apiary-Users@MIT-OZ.ARPA
In-reply-to: <HEWITT.11967421314.BABYL@MIT-OZ>


    Date: Sun, 13 Nov 1983  21:08 EST
    From: HEWITT@MIT-OZ

    Please send your reports to 

    BUG-REL-5@OZ

    It will be redistributed here and to Symbolics.

    Thanks,

    Carl

Please send your bug reports to Bug-Beta-Test@OZ.  This is the official
list for beta test bug reports.  People who want to add their name to
Bug-Beta-Test at OZ are welcome to do so.  

On a different front, I suspect the Apiary hardware is not up to ECO for
running release 5.  Please check with John Magnuson before transfering
release 5 bands to your machines.  As far as I know, only some machines
on the seventh floor are up to ECO.  
14-Nov-83 00:20:06-EST,1482;000000000000
Mail-From: HENRY created at 14-Nov-83 00:19:35
Date: Mon, 14 Nov 1983  00:19 EST
Message-ID: <HENRY.11967456060.BABYL@MIT-OZ>
From: HENRY@MIT-OZ
To:   Bug-Lispm@MIT-OZ
Subject:   Ztop fixed in Release 5


To those of you who use Ztop, my Zwei/Lisp top level interface:
Sorry about the inconvenience of Ztop not working in Release 5, 
but I believe I've fixed it now. Try it out and report bugs.
One consequence is that it will no longer work in Release 4, so
I've saved the old version in <Henry>Old-Ztop.

I've created mailing lists BUG-ZTOP for reporting bugs and INFO-ZTOP
for general information and announcements. You should put yourself on 
INFO-ZTOP if you are a Ztop user or thinking about using it.

For those of you who don't know, Ztop allows you to use Lisp from within
the editor, having available all Zwei's editing commands. 
[This is a very different implementation from the "Ztop mode" which used to 
be in Zwei but later was abandoned. This implementation is well debugged and
has been in everyday use for years.]
In place of a "Lisp Listener", you get a Zmacs buffer called "History", in which you 
type forms to be evaluated, and in which the returned values are placed,
keeping a record of your interaction with Lisp. It has a nifty two-window
mode for editing files of code in one window, and testing them in another, 
and lots of other features. It is documented in a long comment at the front
of the file Oz:Ps:<Henry>Ztop.Lisp.
14-Nov-83 00:37:48-EST,1791;000000000000
Date: Mon, 14 Nov 83 00:41 EST
From: "Robert W. Kerns" <RWK%SCRC-YUKON@MIT-MC.ARPA>
Subject: Alternate mail address for Beta Test stuff
To: KMP@MIT-OZ.ARPA
Cc: feinberg%SCRC-TENEX@MIT-MC.ARPA, bug-lispm@MIT-OZ.ARPA
In-reply-to: The message of 12 Nov 83 15:23-EST from KMP at MIT-OZ
Message-ID: <831114004102.0.RWK@YUKON.SCRC.Symbolics>

    Date: Sat 12 Nov 83 15:23:28-EST
    From: KMP@MIT-OZ
    I am not sure I agree that sending mail to BUG-BETA-TEST@SCRC. It may be
    hard for users to distinguish Beta Test bugs from other bugs that may have
    existed for a while. 
That doesn't matter, really.  If they're complaining about a bug in the
beta-test world, we want to track it.

			 In such case, the bug reports may be relevant to 
    maintainers of the MIT system and sending them to BUG-BETA-TEST@SCRC will
    mean that those people do not see them. 

The odds of this are extremely remote.  I haven't seen a bug-report for
the MIT system that was relevant in many months.

					    Are you really sure that it would
    not be adequate to have a filter on BUG-LISPM which seeks messages for
    which line 1 contains the word "Beta Test" or some such? 
Yes.
							     If you really
    want us to send to a separate list, I guess I will cons up a list locally
    called BUG-LISPM-BETA or something which goes to BUG-BETA-TEST@SCRC and 
    which people can also attach themselves to locally so they are in on
    locally generated commentary. 
No, just put yourself on BUG-BETA-TEST@OZ.  You could even put on an
archive file if you wanted.  We're going to send a note to INFO-LISPM@OZ
shortly redirecting people there, since a number of people have expressed
an interest in seeing the mail.  (We should have thought of that, actually).
14-Nov-83 01:47:02-EST,780;000000000000
Date: Mon, 14 Nov 83 01:49 EST
From: "Robert W. Kerns" <RWK%SCRC-YUKON@MIT-MC.ARPA>
Subject: Beta Test mailing lists
To: info-lispm@MIT-OZ.ARPA
Message-ID: <831114014936.0.RWK@YUKON.SCRC.Symbolics>

A number of people at MIT have requested that MIT people
direct their beta-test mail to BUG-BETA-TEST at MIT-OZ,
so they can see your messages as well.  (This mailing list has
always been there).

Thanks also to the many people who have suggested we make
the software direct it there for itself.  It's a good idea;
we already planned on doing it.  Stay tuned.

Some people have raised questions about what to do when you
don't know if a bug is specific to the beta-test or not.
Just send it to BUG-BETA-TEST; if it's in the beta-test world,
we want to track it.
14-Nov-83 10:32:58-EST,891;000000000000
Received: from SCRC-YAMASKA by SCRC-QUABBIN with CHAOS; Mon 14-Nov-83 10:34:34-EST
Date: Mon, 14 Nov 83 10:29 EST
From: Charles Hornig <Hornig%SCRC-QUABBIN@MIT-MC.ARPA>
Subject: namespacer server wedged
To: BUG-LISPM@MIT-OZ.ARPA, beta-test%SCRC-TENEX@MIT-MC.ARPA
In-reply-to: The message of 12 Nov 83 01:21-EST from File Server at MIT-LISPM-15
Message-ID: <831114102923.7.Hornig@QUABBIN.SCRC.Symbolics>

    Date: Saturday, 12 November 1983, 01:21-EST
    From: File Server at CADR-15
    In Release 5.0 [GC'd Beta Test rev 2], on Lisp Machine Fifteen (LM-2):

    LM15 servers were all hung in lock because this namespace server was
    hung in output hold trying to output to to a deexposed screen.

    >>Break: 
    While in the function PROCESS-WAIT  (:METHOD TV:SHEET :OUTPUT-HOLD-EXCEPTION)  TV:SHEET-PREPARE-SHEET-INTERNAL

Fixed in the source to use TV:NOTIFY.
14-Nov-83 13:14:12-EST,2082;000000000000
Date: Monday, 14 November 1983, 11:11-EST
From: Ken Forbus <KDF at MIT-PYGMALION>
Subject: SXHASH broken
To: BUG-LISPM at MIT-AI

In Release 5.0 [GC'd Beta Test rev 3], dusty plum, on Lisp Machine John Lennon (3600):

This code worked fine in Release 4.5....I tried SXHASH of several other lists, and got similar
errors

>>Trap: The argument given to the MINUSP instruction, NIL, was not a number.
While in the function SXHASH  SXHASH  SXHASH

SXHASH:  (P.C. = 126)
   Arg 0 (X): (SET ORDERINGS HAS-ORDERING)
   Local 1 (ROT): 31
   Local 2 (HASH): -13451567706
   Local 3 (Y): HAS-ORDERING

SXHASH:  (P.C. = 104)
   Arg 0 (X): ((SET ORDERINGS HAS-ORDERING) (SET ELEMENTS HAS-ELEMENT))

SXHASH:  (P.C. = 104)
   Arg 0 (X): (QUANTITY-SPACE NEEDS ((SET ORDERINGS HAS-ORDERING) (SET ELEMENTS HAS-ELEMENT)))

HASH-GET:  (from PYGMALION:USRD$:[KDF]DB)
   Arg 0 (FORM): (QUANTITY-SPACE NEEDS ((SET ORDERINGS HAS-ORDERING) (SET ELEMENTS HAS-ELEMENT)))
   Arg 1 (TABLE): #<ART-Q-7777 3570000>
   Arg 2 (SIZE): 7777

REFERENT:  (from PYGMALION:USRD$:[KDF]DB)
   Arg 0 (FORM): (QUANTITY-SPACE NEEDS ((SET ORDERINGS HAS-ORDERING) (SET ELEMENTS HAS-ELEMENT)))
   Arg 1 ((VIRTUAL? NIL)): T

TERMIFY-LIST:  (from PYGMALION:USRD$:[KDF]NDBUTL)
   Arg 0 (THING): (QUANTITY-SPACE NEEDS ((SET ORDERINGS HAS-ORDERING) (SET ELEMENTS HAS-ELEMENT)))

RULE-ASSERT:  (from PYGMALION:USRD$:[KDF]DB)
   Arg 0 (FORM): (QUANTITY-SPACE NEEDS ((SET ORDERINGS HAS-ORDERING) (SET ELEMENTS HAS-ELEMENT)))
   --Defaulted args:--
   Arg 1 ((KIND-OF-ASSUMPTION NIL))

SI:*EVAL:  (P.C. = 644)
   Arg 0 (FORM): (ASSERT-FACTQ (QUANTITY-SPACE NEEDS ((SET ORDERINGS HAS-ORDERING) (SET ELEMENTS HAS-ELEMENT))))

Rest of stack:
PROGN:  (P.C. = 13)
SI:*EVAL:  (P.C. = 421)
SI:READFILE-INTERNAL:  (P.C. = 77)
LOAD:  (P.C. = 266)
SI:*EVAL:  (P.C. = 370)
SI:DO-INTERNAL:  (P.C. = 447)
DO:  (P.C. = 5)
SI:*EVAL:  (P.C. = 421)
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 200)
SI:LISP-COMMAND-LOOP:  (P.C. = 115)
SI:LISP-TOP-LEVEL1:  (P.C. = 22)
SI:LISP-TOP-LEVEL:  (P.C. = 7)
14-Nov-83 15:35:41-EST,453;000000000000
Date: Monday, 14 November 1983, 15:34-EST
From: Carl Hewitt <HEWITT at MIT-AI>
Subject: bugs in Release 5
To: Neal Feinberg <Feinberg%SCRC-YUKON at MIT-MC>
Cc: Hewitt at MIT-XX, Henry at MIT-AI, bug-symbolics-software at MIT-AI,
    Apiary-Users at MIT-AI, Hewitt at MIT-AI
In-reply-to: The message of 13 Nov 83 22:48-EST from Neal Feinberg <Feinberg%SCRC-YUKON at MIT-MC>

Bug-beta-test@OZ is now equivalent to BUG-REL-5@OZ

Cheers,

Carl
14-Nov-83 16:47:09-EST,749;000000000000
Date: 14 November 1983 16:02 EST
From: Alan Bawden <ALAN @ MIT-MC>
Subject:  poor Bawdens
cc: bug-beta-test @ MIT-OZ
In-reply-to: Msg of 14 Nov 1983 15:11-EST from %MIT-OZ at MIT-MC.ARPA

    Date: Monday, 14 November 1983, 15:11-EST
    From: %MIT-OZ at MIT-MC.ARPA
    To:   bug-beta-test%MIT-OZ at MIT-MC.ARPA
    cc:   alan%MIT-OZ at MIT-MC.ARPA
    Re:   poor Bawdens

    On cold booting (or doing pretty much anything else), Jimi now complains

    Warning: Error from server:  Host OZ requires login for user ALAN;
    Obsolete host information may be used.

    Is Alan's user object so broken that everyone has to hear about it?

I don't know who sent this; it wasn't me.  I was logged into Elvis at the
time however.
14-Nov-83 17:22:24-EST,375;000000000000
Date: Monday, 14 November 1983, 17:19-EST
From: Carl Hewitt <HEWITT at MIT-OZ>
Subject: (TV:EDIT-NAMESPACE-OBJECT) seems to win now
To: Carl Hewitt <HEWITT at MIT-OZ>
Cc: BUG-rel-5 at MIT-OZ, Hewitt at MIT-OZ
In-reply-to: The message of 14 Nov 83 16:01-EST from Carl Hewitt <HEWITT at MIT-AI>

Folks,

I tried it again and it worked.  Good luck!

Cheers,

Carl
14-Nov-83 17:37:03-EST,996;000000000000
Received: from SCRC-CUYAHOGA by SCRC-TENEX with CHAOS; Mon 14-Nov-83 17:33:19-EST
Date: Mon, 14 Nov 83 17:31 EST
From: "Robert A. Cassels" <Cassels%SCRC-TENEX@MIT-MC.ARPA>
Subject: SXHASH broken
To: KDF%MIT-PYGMALION@MIT-MC.ARPA, BUG-LISPM@MIT-OZ.ARPA,
    Release%SCRC-TENEX@MIT-MC.ARPA
In-reply-to: The message of 14 Nov 83 11:11-EST from Ken Forbus <KDF at MIT-PYGMALION>

    Date: Monday, 14 November 1983, 11:11-EST
    From: Ken Forbus <KDF at MIT-PYGMALION>
    In Release 5.0 [GC'd Beta Test rev 3], dusty plum, on Lisp Machine John Lennon (3600):

    This code worked fine in Release 4.5....I tried SXHASH of several other lists, and got similar
    errors

    >>Trap: The argument given to the MINUSP instruction, NIL, was not a number.
    While in the function SXHASH  SXHASH  SXHASH

    SXHASH:  (P.C. = 126)
       Arg 0 (X): (SET ORDERINGS HAS-ORDERING)

MMcM fixed this as 243.312.  I guess it needs to go into Rel 5.0.  If
you need it now, just ask.
14-Nov-83 18:47:31-EST,476;000000000000
Date: Monday, 14 November 1983, 18:44-EST
From: Kent M. Pitman <kmp at MIT-MC>
Subject: (ED <pathname>)
To: BUG-LISPM at OZ

In Release 4.5, Knowledge-Based-Editor 221.1, site configuration 65,
Black Magic, on PA Lisp Machine Merlin:

Where P was bound to #<LMFS-PATHNAME "F:>sys>patch>System-222-129">,
and my Zmacs buffer defaults were PREP:/usr/kmp/kmp.l, I did
 (ed P)
and ended up in a buffer PREP:/usr/kmp/F:>sys>patch>S, which it
claimed was a "new file".
14-Nov-83 18:58:14-EST,2221;000000000000
Date: Monday, 14 November 1983, 18:58-EST
From: Kent M. Pitman <kmp at MIT-MC>
Subject: LOAD won't fasload Unix .bn files in Rel 4.5
To: BUG-LISPM at OZ
Cc: Bates at OZ, KBE-I-FILE at OZ

In Release 4.5, Knowledge-Based-Editor 221.1, site configuration 65,
Black Magic, on PA Lisp Machine Merlin:

Using Unix (specifically PREP) as a file server I made a simple file
/usr/kmp/kmp.l which just has one print statement in it.
Then I did m-X Compile File to create a compiled file. 
It created /usr/kmp/kmp.bn. Unfortunately, trying either
    (load "PREP://usr//kmp//kmp")
 or (load "PREP://usr//kmp//kmp.bn")
dies because it tries to use READFILE instead of FASLOAD. Also, on
a 3600, you can't even explicitly say (fasload "...") to override
this.

The code using this file server belongs to Bates@OZ. It's unlikely he
wants to convert to Rel 5 for now, so even if this is fixed there, we
still need a patch that works in Rel 4.5. Work on his project is blocked
waiting for an answer. Thanks.

(LOAD "prep://usr//kmp//kmp")
>>Trap: The variable  0  is unbound.
While in the function SI:*EVAL  SI:READFILE-INTERNAL  LOAD

SI:*EVAL:  (P.C. = 30)
   Arg 0 (FORM):  0 
   Local 1: NIL
   Local 2 (ARGNUM): 0
   Local 3 (FCTN): NIL
   Local 4 (CFCTN): NIL
   Local 5 (ARGL): NIL
   Local 6 (MAX-ARGS): NIL
   Local 7 (N-ARGS): NIL
   Local 8 (ARG-DESC): NIL
   Local 9 (TEM): NIL
   Local 10 (COUNT): NIL
   Local 11 (QUOTE-STATUS): NIL
   Local 12 (REST-FLAG): NIL
   Local 13 (FEXPR-FLAG): NIL
   Local 14 (LAMBDA-LIST): NIL

SI:READFILE-INTERNAL:  (P.C. = 106)
   Arg 0 (STANDARD-INPUT-initialization): #<FILE-INPUT-CHARACTER-STREAM "PREP: //usr//kmp//kmp.bn" 12734252>
   Arg 1 (PKG): NIL
   Arg 2 (NO-MSG-P): NIL

LOAD:  (P.C. = 237)
   Arg 0 (PATHNAME): "prep://usr//kmp//kmp"
   --Defaulted args:--
   Arg 1 (PKG): NIL
   Arg 2 (NONEXISTENT-OK-FLAG): NIL
   Arg 3 (DONT-SET-DEFAULT-P): NIL
   Arg 4 (NO-MSG-P): NIL

SI:*EVAL:  (P.C. = 405)
   Arg 0 (FORM): (LOAD "prep://usr//kmp//kmp")

SI:LISP-TOP-LEVEL1:  (P.C. = 130)
   Arg 0 (TERMINAL-IO-initialization): #<LISP-LISTENER Lisp Listener 1 3000000 exposed>

SYS:LISP-TOP-LEVEL:  (P.C. = 7)
14-Nov-83 20:41:13-EST,747;000000000000
Date: Monday, 14 November 1983, 20:42-EST
From: Carl Richard Feynman <CARLF at MIT-OZ>
Subject: random crash
To: BUG-LISPM at MIT-OZ

In Release 5.0 [GC'd Beta Test rev 3], dusty plum, on Lisp Machine Elvis Presley (3600):

At about 8:30, after I had been using this machine for about 20 minutes,
while I was compiling a short file, lisp stopped itself, and the fep took
over, printing "Lisp stopped itself". I looked at the various fep
commands that were available, and chose "return-keyboard-to-lisp",
hoping that I would then be able to continue my work.  Alas, I was
instantly bounced back to the fep, with the message "Execution stopped
by remote console", or something like that.  I thereupon booted the
machine.

			--carl
14-Nov-83 22:44:35-EST,820;000000000000
Received: from SCRC-EUPHRATES by SCRC-TENEX with CHAOS; Mon 14-Nov-83 22:40:42-EST
Date: Mon, 14 Nov 83 22:43 EST
From: "David A. Moon" <Moon%SCRC-TENEX@MIT-MC.ARPA>
Subject: LOAD won't fasload Unix .bn files in Rel 4.5
To: "Kent M. Pitman" <kmp@MC.ARPA>
Cc: BUG-LISPM@MIT-OZ.ARPA, Bates@MIT-OZ.ARPA, KBE-I-FILE@MIT-OZ.ARPA
In-reply-to: The message of 14 Nov 83 18:58-EST from Kent M. Pitman <kmp at MIT-MC>

When was the FILE server on that Unix last updated?  Before there were 3600s, perhaps?
It sounds like the Lisp machine asks the Unix "is this .bn file a binary file"
and it says "no".  In the case of Unix, it tells whether it's a binary file by
looking for magic bits at the front of the file, since Unix itself doesn't
provide a way to distinguish.  Or so I'm told; this is all second-hand to me.
14-Nov-83 23:23:32-EST,4719;000000000000
Date: Wednesday, 16 November 1983, 12:57-EST
From: Scott Cyphers <sr.cypher at MIT-SPEECH>
Subject: Error while cold-booting
To: BUG-beta-test at MIT-OZ

In Release 5.0 [GC'd Beta Test rev 2], on Lisp Machine Fifteen (LM-2):

This is NOT Lisp Machine Fifteen.  It is Yogi.  This world came from
LM15 via Avatar, but I don't see why that should make it think it is LM15.

I cold-booted and got this error.  Having not yet logged in, control-m
made me log in, but it required a terminal-0s to expose the window wanting
me to log in.  My mouse does not yet work -- maybe it should be made to
work before the network stuff starts going.

>>Error: Duplicate objects found.
         The names SCRC|DM and ARPANET|MIT-MC, which are both names on SCRC|DM,
         refer to the objects DM and MC respectively.
While in the function NETI:ADD-OR-CHANGE-OBJECT  NETI:QUERY-NAMESPACE-SERVER  NETI:FIND-OBJECTS-FROM-PROPERTY-LIST-IN-NAMESPACE

NETI:ADD-OR-CHANGE-OBJECT:  (P.C. = 264)
   Arg 0 (CLASS-NAME): :HOST
   Arg 1 (NAME): #<NAME SCRC|DM 34165547>
   Arg 2 (PROPERTY-LIST): (:SYSTEM-TYPE :ITS :FILE-CONTROL-LIFETIME "108000" :SERVICE ((:TCP-GATEWAY :CHAOS :TCP-GATEWAY) (:SOURCE :CHAOS :BABEL) (:ECHO :CHAOS :ECHO) (:FILE :CHAOS :QFILE) (:GENSYM :CHAOS-SIMPLE :GENSYM) (:GMSGS :CHAOS :GMSGS) (:MAIL-TO-USER :CHAOS :CHAOS-MAIL) (:STORE-AND-FORWARD-MAIL :CHAOS :CHAOS-MAIL) (:SHOW-USERS :CHAOS :NAME) (:SEND :CHAOS :SEND) ...) :SITE #<OBJECT SITE MIT 1341463> :NICKNAME (#<NAME SCRC|DM 34165547> #<NAME ARPANET|MIT-MC 1324117> #<NAME ARPANET|MC 1324113> #<NAME ARPANET|MITMC 34176061> #<NAME ARPANET|DM 34176074> #<NAME ARPANET|MITDM 34200647> #<NAME MIT|MITMC 1332466> #<NAME MIT|MIT-MC 1331746> #<NAME ARPANET|MIT-DMS 34200676> #<NAME ARPANET|DMS 34200711> ...) ...)
   --Defaulted args:--
   Arg 3 (REPLACE): NIL
   Local 0 (INDICATOR): :SHORT-NAME
   Local 1: NIL
   Local 2: (#<NAME MIT|MC 1334712>)
   Local 3: (#<NAME ARPANET|MC 1324113> #<NAME ARPANET|MITMC 34176061> #<NAME ARPANET|DM 34176074> #<NAME ARPANET|MITDM 34200647> #<NAME MIT|MITMC 1332466> #<NAME MIT|MIT-MC 1331746> #<NAME ARPANET|MIT-DMS 34200676> #<NAME ARPANET|DMS 34200711> #<NAME SCRC|MC 653434> #<NAME SCRC|MIT-MC 656700> ...)
   Local 4 (NAMES): (#<NAME SCRC|DM 34165547> #<NAME SCRC|DM 34165547> #<NAME ARPANET|MIT-MC 1324117> #<NAME ARPANET|MC 1324113> #<NAME ARPANET|MITMC 34176061> #<NAME ARPANET|DM 34176074> #<NAME ARPANET|MITDM 34200647> #<NAME MIT|MITMC 1332466> #<NAME MIT|MIT-MC 1331746> #<NAME ARPANET|MIT-DMS 34200676> ...)
   Local 5 (FUNCTION): #<DTP-FEF-POINTER (:PROPERTY :HOST NET:OBJECT-FLAVOR-FUNCTION) 12452703>
   Local 6 (FLAVOR): FS:ITS-HOST
   Local 7 (NAME): #<NAME ARPANET|MIT-MC 1324117>
   Local 8 (FOUND): #<HOST DM 34165701>
   Local 9 (FOUND-NAME): #<NAME SCRC|DM 34165547>
   Local 10 (FIND): #<ITS-HOST MC 1454671>
   Local 11 (OBJECT): NIL
   Local 12 (NEW-P): NIL
   Local 13 (PRESENT-NAMES): NIL
   Local 14 (OTHER-NAME): NIL
   Local 15 (OTHER-NAMES): NIL
   Local 16 (NEW-OBJECT): NIL
   Local 17 (NAMING-PROPERTIES): NIL
   Local 18 (ORPHANS): NIL
   Local 19 (PROP): NIL
   Local 20: NIL

NETI:QUERY-NAMESPACE-SERVER:  (P.C. = 450)
   Arg 0 (CLASS): :HOST
   Arg 1 (NAMESPACE): #<NAMESPACE MIT 2134400>
   Rest arg (PROPERTY-LIST): (:TIMESTAMP 51 :SPOOLED-PRINTER ((#<PRINTER 7TH-FLOOR-VERSATEC 1454413> :*)))

NETI:FIND-OBJECTS-FROM-PROPERTY-LIST-IN-NAMESPACE:  (P.C. = 231)
   Arg 0 (CLASS): #<CLASS HOST 737153>
   Arg 1 (NAMESPACE): #<NAMESPACE MIT 2134400>
   Rest arg (PROPERTY-LIST): (:SPOOLED-PRINTER ((#<PRINTER 7TH-FLOOR-VERSATEC 1454413> :*)))

NETI:FINDING-OBJECTS:  (P.C. = 135)
   Arg 0 (CLASS): :HOST
   Arg 1 (PROPERTY-LIST): (:SPOOLED-PRINTER ((#<PRINTER 7TH-FLOOR-VERSATEC 1454413> :*)))
   Arg 2 (FUNCTION): #<DTP-FEF-POINTER (:INTERNAL NET:FIND-OBJECTS-FROM-PROPERTY-LIST 0) 12433330>

NET:FIND-OBJECTS-FROM-PROPERTY-LIST:  (P.C. = 33)
   Arg 0 (CLASS): :HOST
   Rest arg (PROPERTY-LIST): (:SPOOLED-PRINTER ((#<PRINTER 7TH-FLOOR-VERSATEC 1454413> :*)))

SI:PRINTER-SPOOLER-HOSTS:  (P.C. = 42)
   Arg 0 (PRINTER): #<PRINTER 7TH-FLOOR-VERSATEC 1454413>

SI:GET-HARDCOPY-DEVICE-ALIST:  (P.C. = 103)

SI:SITE-HARDCOPY-INITIALIZE:  (P.C. = 51)

Rest of stack:
SI:*EVAL:  (P.C. = 676)
INITIALIZATIONS:  (P.C. = 72)
(:METHOD NET:OBJECT :DEFAULT :CHANGE-OF-ATTRIBUTES):  (P.C. = 47)
NETI:DO-UNKNOWN-OBJECT-FIXUPS:  (P.C. = 154)
NETI:QUERY-NAMESPACE-SERVER:  (P.C. = 555)
NETI:GET-INCREMENTAL-UPDATE-FROM-NETWORK:  (P.C. = 532)
(:METHOD NETI:NAMESPACE :GET-LATEST-TIMESTAMP):  (P.C. = 50)
NETI:INITIALIZE-NAMESPACES-AND-NETWORK:  (P.C. = 235)
LISP-REINITIALIZE:  (P.C. = 1171)
SI:LISP-TOP-LEVEL:  (P.C. = 30)
15-Nov-83 00:21:47-EST,944;000000000000
Received: from SCRC-EUPHRATES by SCRC-YUKON with CHAOS; Tue 15-Nov-83 00:25:04-EST
Date: Tue, 15 Nov 83 00:25 EST
From: "David A. Moon" <Moon%SCRC-TENEX@MIT-MC.ARPA>
Subject: Error while cold-booting
To: Scott Cyphers <sr.cypher%MIT-SPEECH@MIT-MC.ARPA>
Cc: BUG-beta-test@MIT-OZ.ARPA
In-reply-to: The message of 16 Nov 83 12:57-EST from Scott Cyphers <sr.cypher at MIT-SPEECH>

    Date: Wednesday, 16 November 1983, 12:57-EST
    From: Scott Cyphers <sr.cypher at MIT-SPEECH>
    In Release 5.0 [GC'd Beta Test rev 2], on Lisp Machine Fifteen (LM-2):

    This is NOT Lisp Machine Fifteen.  It is Yogi.  This world came from
    LM15 via Avatar, but I don't see why that should make it think it is LM15.

The error occurred while it was figuring out who it was.  I'll let someone
else (since I don't know) explain why the nonsense with SCRC|DM is still
happening, since I had heard that was fixed moments after it was broken.
15-Nov-83 00:56:44-EST,247;000000000000
Date: Tue, 15 Nov 83 00:54 EST
From: "Robert W. Kerns" <RWK%SCRC-YUKON@MIT-MC.ARPA>
Subject: Testing
To: bug-beta-test@MIT-OZ.ARPA
Message-ID: <831115005400.8.RWK@YUKON.SCRC.Symbolics>

If this goes to BUG-RANDOM-PROGRAM, COMSAT is broken.
15-Nov-83 00:57:38-EST,302;000000000000
Date: Tue, 15 Nov 83 00:54 EST
From: "Robert W. Kerns" <RWK%SCRC-YUKON@MIT-MC.ARPA>
Subject: Testing
To: bug-beta-test@MIT-OZ.ARPA
Supersedes: <831115005400.8.RWK@YUKON.SCRC.Symbolics>
Message-ID: <831115005430.9.RWK@YUKON.SCRC.Symbolics>

If this goes to BUG-RANDOM-PROGRAM, COMSAT is broken.
15-Nov-83 02:09:02-EST,407;000000000000
Date: Tuesday, 15 November 1983, 03:06-EST
From: David Vinayak Wallace <Gumby at MIT-MC>
Subject: system versions and patches
To: bug-beta-test at MIT-AI
Fonts: CPTFONTB

We now have sources (thanks!), but no patches.  And the patches
being generated (according to bug replies) seem to be generated
for system versions we don't have.

Is this going to be fixed for the beta-test system?

david
15-Nov-83 03:06:06-EST,1464;000000000000
Date: Tuesday, 15 November 1983, 03:06-EST
From: David Vinayak Wallace <Gumby at MIT-MC>
Subject: delete duplicate messages in zmail
To: BUG-beta-test at MIT-AI

In ZMAIL in Release 5.0 [GC'd Beta Test rev 3], dusty plum, on Lisp Machine Robot-3 (3600):

Delete duplicate messages decides that the following two
messages are the same; a quick perusal of the subject field
would correct this:

Date: 15 November 1983 01:03 EST
From: Newswires Redistribution <APNYT @ MIT-ML>
Subject:  Redistributed AP news from SAIL
To:  News addicts <APNYT @ MIT-ML>
Reply-to: APNYT @ MIT-ML

Date: 14 Nov 83  2200 PDT
From: Mark Crispin <MRC@SU-AI>

a002  2111  14 Nov 83
PM-News Digest, 2 takes,
    
PMs AP News Digest
Tuesday, November 15, 1983
    
    Here are the top stories for PMs. The General Desk supervisor is
Rich Herzfelder (212) 621-1604. The Laserphoto Desk supervisor is Ed
...


Date: 15 November 1983 01:03 EST
From: Newswires Redistribution <APNYT @ MIT-ML>
Subject:  Redistributed NYT news from SAIL
To:  News addicts <APNYT @ MIT-ML>
Reply-to: APNYT @ MIT-ML

Date: 14 Nov 83  2200 PDT
From: Mark Crispin <MRC@SU-AI>

n098  1955  14 Nov 83
BC-NEWSSUMMARY Undated
c.1983 N.Y. Times News Service
    The N.Y. Times News Summary for Tuesday, Nov. 15, 1983
International
    London-American cruise missiles arrived at an air base in England,
the British government announced. They are the first of NATO's new
...
15-Nov-83 12:23:04-EST,3969;000000000000
Date: Tuesday, 15 November 1983, 12:23-EST
From: Carl Hewitt <Hewitt at MIT-OZ>
Subject: unbalanced parentheses?
To: BUG-REL-5 at MIT-OZ

In Release 5.0 [GC'd Beta Test rev 3], dusty plum, on Lisp Machine Apiary-4 (3600):

Would it be possible for the pathesis checker to say WHERE it
came to the conclusion that there are unbalanced partheses?

Also would it be possible for CONTROL-M to work in a SUSPEND break so that I
would not have to time "foo" to get an umbound variable and thus get an error
handler.

Thanks,

Carl


>>Trap: The variable FOO is unbound.
While in the function SI:*EVAL  SI:LISP-COMMAND-LOOP-INTERNAL  BREAK

SI:*EVAL:  (P.C. = 25)
   Arg 0 (FORM): FOO
   Local 1: NIL
   Local 2 (ARGNUM): 0.
   Local 3 (FCTN): NIL
   Local 4 (CFCTN): NIL
   Local 5 (ARGL): NIL
   Local 6 (MAX-ARGS): NIL
   Local 7 (N-ARGS): NIL
   Local 8 (ARG-DESC): NIL
   Local 9 (TEM): NIL
   Local 10 (COUNT): NIL
   Local 11 (QUOTE-STATUS): NIL
   Local 12 (REST-FLAG): NIL
   Local 13 (FEXPR-FLAG): NIL
   Local 14 (LAMBDA-LIST): NIL
   Local 15 (MACRO): NIL

SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 200)
   Rest arg: (:NAME "Breakpoint BREAK" :ABORTED-FUNCTION SI:BREAK-ABORTED-FUNCTION :READ-FUNCTION SI:BREAK-READ-FUNCTION)

BREAK:  (P.C. = 173)
   Arg 0 (TAG): BREAK
   --Defaulted args:--
   Arg 1 (CONDITIONAL): T

TV:KBD-INTERCEPT-CHARACTER:  (P.C. = 52)
   Arg 0 (CHAR): 129.
   --Defaulted args:--
   Arg 1 (STREAM): #<EDITOR-TYPEOUT-WINDOW Editor Typeout Window 5 2323440 exposed>

TV:KBD-DEFAULT-OUTPUT-FUNCTION:  (P.C. = 17)
   Arg 0 (IGNORE): #<IO-BUFFER 11775011: empty, State: NIL>
   Arg 1 (CHAR): 129.

TV:IO-BUFFER-GET:  (P.C. = 54)
   Arg 0 (BUFFER): #<IO-BUFFER 11775011: empty, State: NIL>
   Arg 1 (NO-HANG-P): T
   --Defaulted args:--
   Arg 2 (WHOSTATE): "Buffer Empty"

TV:KBD-IO-BUFFER-GET:  (P.C. = 17)
   Arg 0 (BUFFER): #<IO-BUFFER 11775011: empty, State: NIL>
   --Defaulted args:--
   Arg 1 (NO-HANG-P): NIL
   Arg 2 (WHOSTATE): "Tyi"

(:METHOD TV:STREAM-MIXIN :ANY-TYI):  (P.C. = 67)
   Arg 0 (SELF): #<TYPEIN-WINDOW Typein Window 2 2301302 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:STREAM-MIXIN -- 14. IV's, 0. FL's 26760301>
   Arg 2 (OPERATION): :ANY-TYI
   --Defaulted args:--
   Arg 3 (IGNORE): NIL

Rest of stack:
(:DEFUN-METHOD TV:RH-TYI):  (P.C. = 12)
(:DEFUN-METHOD TV:ALTERNATE-RUBOUT-HANDLER-TYI):  (P.C. = 45)
TV:ALTERNATE-RUBOUT-HANDLER-TYI:  (P.C. = 12)
TV:RUBOUT-HANDLER-INVOKE:  (P.C. = 11)
(:METHOD TV:STREAM-MIXIN :ANY-TYI):  (P.C. = 43)
(:METHOD SI:VANILLA-FLAVOR :SEND-IF-HANDLES):  (P.C. = 41)
SI:READ-DELIMITED-STRING-INTERNAL:  (P.C. = 14)
(:DEFUN-METHOD TV:RUBOUT-HANDLER-READ):  (P.C. = 61)
(:METHOD TV:STREAM-MIXIN :RUBOUT-HANDLER):  (P.C. = 72)
(:METHOD ZWEI:TYPEIN-WINDOW :COMBINED :RUBOUT-HANDLER):  (P.C. = 31)
READ-DELIMITED-STRING:  (P.C. = 111)
READLINE:  (P.C. = 20)
READLINE-TRIM:  (P.C. = 5)
(:INTERNAL FORMAT:READLINE-FQUERY-FUNCTION 0.):  (P.C. = 15)
FORMAT:READLINE-FQUERY-FUNCTION:  (P.C. = 12)
FQUERY:  (P.C. = 367)  (from OZ:PS:<HEWITT>LISPM-INIT)
FQUERY:  (from OZ:PS:<HEWITT>LISPM-INIT)
ZWEI:WARN-ABOUT-UNBALANCED-PARENTHESES:  (P.C. = 7)
ZWEI:STREAM-COPY-UNTIL-EOF-CHECKING-PARENTHESES:  (P.C. = 120)
ZWEI:STREAM-OUT-INTERVAL:  (P.C. = 45)
(:METHOD ZWEI:FILE-BUFFER-MIXIN :SAVE):  (P.C. = 100)
ZWEI:SAVE-BUFFER:  (P.C. = 203)
ZWEI:COM-SAVE-FILE:  (P.C. = 14)  (from AP6:>actor>zwsave)
ZWEI:COM-SAVE-FILE:  (from AP6:>actor>zwsave)
ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
ZWEI:MAKE-EXTENDED-COMMAND-INTERNAL:  (P.C. = 77)
SYS:CALL-FUNNY-FUNCTION:  (P.C. = 101)
Closure of ZWEI:MAKE-EXTENDED-COMMAND-INTERNAL:
ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 200)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 41)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
15-Nov-83 13:25:08-EST,270;000000000000
Mail-From: WELG created at 15-Nov-83 13:22:43
Date: Tue 15 Nov 83 13:22-EST
From: W. Eric L. Grimson <WELG@MIT-OZ>
Subject: cadr-30
To: bug-lispm@MIT-OZ, bug-hardware@MIT-OZ

Cadr-30 is wedged is such a state that it no longer responds to
a cold boot command.

15-Nov-83 13:57:15-EST,1027;000000000000
Date: Tuesday, 15 November 1983, 13:52-EST
From: Philippe Brou <PHILIP at MIT-OZ>
Subject: Fonts..
To: BUG-BETA-TEST at MIT-OZ
Cc: TLP at MIT-OZ, WELG at MIT-OZ, PHW at MIT-OZ, JMB at MIT-OZ, RMS at MIT-OZ

In ZWEI in Release 5.0 [GC'd Beta Test rev 3], dusty plum, on Lisp Machine Apriary-3 (3600):

I was told that fonts were supposed to work
on Rel 5. They still don't work at all.
None of the previous problems seem to have been
fixed:

 1) The compiler can't handle files with fonts 
    (only works in ZMACS)
 2) Meta-. doesn't get the right default
 3) The mouse doesn't see the functions names in Meta-.
 4) Completion doesn't work in Meta-.
 5) List definitions doesn't work

Why does the system fail in getting "VISION:<..."
when the default clearly indicates "OZ:VISION:<..."

From a default of "OZ:PS:" it should figure out
that "VISION:" is acceptable.

(Was told that ":VISION:" works but completion
doesn't)


Switching back to 97 for a few weeks... couldn't find any
bugs in it.
15-Nov-83 14:10:50-EST,709;000000000000
Date: Tuesday, 15 November 1983, 14:09-EST
From: Philippe Brou <PHILIP at MIT-OZ>
Subject: Array types
To: BUG-BETA-TEST at MIT-OZ
Cc: TLP at MIT-OZ, JMB at MIT-OZ, PHW at MIT-OZ, RMS at MIT-OZ

In Release 5.0 [GC'd Beta Test rev 3], dusty plum, on Lisp Machine Apriary-3 (3600):

You can't be serious when asking for array
types to be GLOBAL. I can't understand
why they couldn't be in KEYWORD [as in 97].
Its the only logical decision.

This difference between both systems will
    1) For us to change all make-array calls
    2) Require #3600 and #CADR switches in
       each of them.

If you really want to stick to array types
in GLOBAL at least allow them to be in KEYWORD also.

15-Nov-83 14:35:45-EST,2002;000000000000
Received: from SCRC-HARLEM by SCRC-TENEX with CHAOS; Tue 15-Nov-83 12:41:41-EST
Date: Tuesday, 15 November 1983, 12:39-EST
From: Joseph R Goldstone <joseph@SCRC-QUABBIN>
Subject: Copying bands.
To: Alan Bawden <ALAN@MIT-MC>
Cc: bug-beta-test@MIT-OZ
In-reply-to: The message of 9 Nov 83 15:15-EST from Alan Bawden <ALAN at MIT-DMS>

    Date: 9 November 1983 15:15 EST
    From: Alan Bawden <ALAN @ MIT-MC>
    I tried to copy the latest 5.0 band from Moon to Buddy.  I used
    si:receive-band on Buddy running 4.5.  Partway through the transfer Buddy
    stopped with the who-line saying: "FEP Disk Wait" (or something similar).
    I believe that the cursor was still blinking at this point (not sure).  I
    tried C-M-Suspend to see what was going on (if possible).  Typing that
    really did cause my machine to stop cold.  C-Local did not get me the FEP,
    I had to go and hit the boot button.

    Gumby claims that the same thing happened to him and that the explanation
    is that some of our machines haven't been brought up to the right ECO level
    for 5.0.  True?  Can you provide me with some concrete information about
    this so that I don't trash more bands trying to copy 5.0 around?  Like if
    there is a non-destructive way to tell if a machine is a candidate for this
    screw?

well, there's a very good chance you will lose if the MC board in the machine
receiving the band isn't up to Rev J [assuming it's a PC board].  if i read the
stuff from field service right, wirewrap boards should be at Rev B3.  the MC
board is sufficiently far from the right edge of the cabinet so that you can
just see the rev level without having to pull out the board.  if you [as a
customer] pull out the board, of course, the machine explodes taking half of
Cambridge with it.

of course, just having these boards up to spec doesn't mean you will win, but
if they're not up to spec there's a good chance you will lose.

hope this helps.

-- joseph
15-Nov-83 14:41:20-EST,2605;000000000000
Date: Tuesday, 15 November 1983, 14:40-EST
From: KMP at MIT-OZ
Sender: JEREMY at MIT-OZ
Subject: :AC invalid canonical type for FS:TOPS20-PATHNAME in FED in Rel 4.5
To: BUG-LISPM at MIT-OZ

In Release 4.5, Knowledge-Based-Editor 221.1, site configuration 65,
Black Magic, on PA Lisp Machine Avatar:

Clicking Right on [Write File] in FED and clicking again on AC format file
yielded the following result. -kmp

>>Error: AC is an invalid canonical type for FS:TOPS20-PATHNAME
While in the function (METHOD FS:PATHNAME TYPE-FOR-NEW-CANONICAL-TYPE)  FS:MAKE-PATHNAME-1  (METHOD FS:PATHNAME NEW-PATHNAME)

(METHOD FS:PATHNAME TYPE-FOR-NEW-CANONICAL-TYPE):  (P.C. = 163)
   (SELF = #<TOPS20-PATHNAME "OZ:">)
   Arg 0 (OPERATION): TYPE-FOR-NEW-CANONICAL-TYPE
   Arg 1 (CANONICAL-TYPE): AC
   Arg 2 (ORIGINAL-TYPE): NIL
   Arg 3 (ORIGINAL-TYPE-P): NIL
   Local 0 (TYPES): NIL
   Local 1 (NEW-VALUE): NIL

FS:MAKE-PATHNAME-1:  (P.C. = 575)
   Rest arg (OPTIONS): (DEFAULT-HOST #<TOPS20-CHAOS-HOST MIT-OZ> DEFAULT-DEVICE NIL DEFAULT-DIRECTORY NIL DEFAULT-NAME NIL DEFAULT-TYPE NIL ...)

(METHOD FS:PATHNAME NEW-PATHNAME):  (P.C. = 111)
   (SELF = #<TOPS20-PATHNAME "OZ:">)
   Arg 0 (OPERATION): NEW-PATHNAME
   Rest arg (OPTIONS): NIL

(METHOD FS:TOPS20-MAILBOX-PATHNAME-MIXIN COMBINED NEW-PATHNAME):  (P.C. = 202)
   (SELF = #<TOPS20-PATHNAME "OZ:">)
   Rest arg (.DAEMON-CALLER-ARGS.): (NEW-PATHNAME DEFAULTS ((#<TOPS20-CHAOS-HOST MIT-OZ> . #<TOPS20-PATHNAME "OZ:PS:<JEREMY>FONTS.KST">) (NIL . #<TOPS20-PATHNAME "OZ:PS:<JEREMY>FONTS.KST">)) NAME "TR10" CANONICAL-TYPE AC)

FS:MAKE-PATHNAME:  (P.C. = 111)
   Rest arg (OPTIONS): (DEFAULTS ((#<TOPS20-CHAOS-HOST MIT-OZ> . #<TOPS20-PATHNAME "OZ:PS:<JEREMY>FONTS.KST">) (NIL . #<TOPS20-PATHNAME "OZ:PS:<JEREMY>FONTS.KST">)) NAME "TR10" CANONICAL-TYPE AC)

FED:READ-DEFAULTED-FILENAME:  (P.C. = 71)
   Arg 0 (FONT): FONTS:TR10
   Arg 1 (OPERATION): "Write"
   Arg 2 (TYPE): AC

(DEFUN-METHOD FED:FED-WRITE-FILE):  (P.C. = 64)
   (SELF = #<BASIC-FED-PANE Basic Fed Pane 1 20560366 exposed>)
   Arg 0 (SELF-MAPPING-TABLE): #<Map to flavor FED:BASIC-FED -- 23. IV's, 10. FL's 2350717>
   Arg 1 (TYPE): AC

(METHOD FED:BASIC-FED COM-WRITE-ANY-FILE):  (P.C. = 70)
   (SELF = #<BASIC-FED-PANE Basic Fed Pane 1 20560366 exposed>)
   Arg 0 (OPERATION): COM-WRITE-ANY-FILE
   Arg 1 (IGNORE): (MENU (NIL VALUE COM-WRITE-ANY-FILE) 4 #<COMMAND-MENU-PANE Command Menu Pane 8 20561632 exposed>)

Rest of stack:
(METHOD FED COMMAND-LOOP):  (P.C. = 562)
FED:FED-TOP-LEVEL:  (P.C. = 140)
SI:PROCESS-TOP-LEVEL:  (P.C. = 125)
15-Nov-83 14:44:06-EST,473;000000000000
Date: Tuesday, 15 November 1983, 14:41-EST
From: Philippe Brou <PHILIP at MIT-OZ>
Subject: #+REL-5
To: BUG-BETA-TEST at MIT-OZ
Cc: PHW at MIT-OZ, JMB at MIT-OZ, TLP at MIT-OZ, WELG at MIT-OZ, RMS at MIT-OZ

In Release 5.0 [GC'd Beta Test rev 3], dusty plum, on Lisp Machine Apriary-3 (3600):

Are there any # macros to that run
on 97, rel-4 and rel-5 of the type #+3600
that would allow differentiation between these
three systems? (#+CADR is the one for 97)

15-Nov-83 14:47:04-EST,3023;000000000000
Date: Tuesday, 15 November 1983, 14:44-EST
From: KMP at MIT-OZ
Sender: JEREMY at MIT-OZ
Subject: (FIX NIL) in FED:WRITE-FONT-DESCRIPTOR-INTO-AC
To: BUG-LISPM at MIT-OZ

In Release 4.5, Knowledge-Based-Editor 221.1, site configuration 65,
Black Magic, on PA Lisp Machine Avatar:

Proceeding the last error (:AC invalid canonical type) a few times from the
debugger got us to a place where it would read a filename and try to write
the file, but then it died with the following error.

>>Trap: The argument to the FIX instruction, NIL, was of the wrong type.
The instruction expected a number.
While in the function FED:WRITE-FONT-DESCRIPTOR-INTO-AC  FED:WRITE-FONT-INTO-AC  (DEFUN-METHOD FED:FED-WRITE-FILE)

FED:WRITE-FONT-DESCRIPTOR-INTO-AC:  (P.C. = 610)
   Arg 0 (FD): #<FONT-DESCRIPTOR 34123257>
   Arg 1 (FILENAME): #<TOPS20-PATHNAME "OZ:PS:<JEREMY>TR10.TEXT">
   Local 0 (FAMILY-NAME): "TR"
   Local 1 (FACE-CODE): ""
   Local 2 (POINT-SIZE): 10
   Local 3 (BC): 0
   Local 4 (EC): 127
   Local 5: #<FILE-OUTPUT-BINARY-STREAM "OZ:PS:<JEREMY>TR10.TEXT" 34431300>
   Local 6 (.FILE-ABORTED-FLAG.): ABORT
   Local 7 (OUTPUT-FILE): #<FILE-OUTPUT-BINARY-STREAM "OZ:PS:<JEREMY>TR10.TEXT" 34431300>
   Local 8 (FONT-LENGTH): 128
   Local 9 (UNUSED-TOP-RASTERS): #<ART-Q-128 34431316>
   Local 10 (UNUSED-BOTTOM-RASTERS): #<ART-Q-128 34431517>
   Local 11 (CHAR-DATA-SIZE-TABLE): #<ART-Q-128 34431720>
   Local 12 (TOTAL-DATA-SIZE): 1962
   Local 13 (I): 19
   Local 14: 128
   Local 15 (CHAR-CODE): 0
   Local 16 (CD): #<CHAR-DESCRIPTOR 34123470>
   Local 17 (DATA-SIZE): 1
   Local 18 (TEM1): 12
   Local 19 (TEM2): 0
   Local 20 (LEN): 2
   Local 21 (HIGH-BYTE): NIL
   Local 22 (CH): 0
   Local 23 (CURRENT-POS): NIL
   Local 24 (EXPECTED-DATA-START): NIL
   Local 25 (OFFSET): NIL
   Local 26 (WD): NIL
   Local 27 (RASTER-WIDTH): NIL
   Local 28 (RASTER-BOTTOM-SKIP): NIL
   Local 29 (REAL-RASTER-HEIGHT): NIL
   Local 30 (RASTER-HEIGHT): NIL
   Local 31 (HPOS): NIL
   Local 32 (VPOS): NIL
   Local 33: NIL

FED:WRITE-FONT-INTO-AC:  (P.C. = 44)
   Arg 0 (FONTNAME): FONTS:TR10
   Arg 1 (FILENAME): #<TOPS20-PATHNAME "OZ:PS:<JEREMY>TR10.TEXT">

(DEFUN-METHOD FED:FED-WRITE-FILE):  (P.C. = 130)
   (SELF = #<BASIC-FED-PANE Basic Fed Pane 1 20560366 exposed>)
   Arg 0 (SELF-MAPPING-TABLE): #<Map to flavor FED:BASIC-FED -- 23. IV's, 10. FL's 2350717>
   Arg 1 (TYPE): AC

(METHOD FED:BASIC-FED COM-WRITE-ANY-FILE):  (P.C. = 70)
   (SELF = #<BASIC-FED-PANE Basic Fed Pane 1 20560366 exposed>)
   Arg 0 (OPERATION): COM-WRITE-ANY-FILE
   Arg 1 (IGNORE): (MENU (NIL VALUE COM-WRITE-ANY-FILE) 4 #<COMMAND-MENU-PANE Command Menu Pane 8 20561632 exposed>)

(METHOD FED COMMAND-LOOP):  (P.C. = 562)
   (SELF = #<FED Fed 1 20560260 deexposed>)
   Arg 0 (OPERATION): COMMAND-LOOP

FED:FED-TOP-LEVEL:  (P.C. = 140)
   Arg 0 (WINDOW): #<FED Fed 1 20560260 deexposed>

SI:PROCESS-TOP-LEVEL:  (P.C. = 125)
   --Defaulted args:--
   Arg 0 (IGNORE): NIL
15-Nov-83 15:02:20-EST,1382;000000000000
Received: from SCRC-AMAZON by SCRC-QUABBIN with CHAOS; Tue 15-Nov-83 15:05:42-EST
Date: Tuesday, 15 November 1983, 15:05-EST
From: Neal Feinberg <Feinberg at SCRC-YUKON>
Subject: FS:ADD-LOGICAL-PATHNAME-HOST
To: sr.cypher at MIT-SPEECH, BUG-beta-test at MIT-AI
In-reply-to: The message of 14 Nov 83 12:35-EST from sr.cypher at MIT-SPEECH
Supersedes: The message of 15 Nov 83 15:04-EST from Neal Feinberg <Feinberg at SCRC-YUKON>


    Date: Monday, 14 November 1983, 12:35-EST
    From: sr.cypher at speech
    Sender: SR.JRG at MIT-SPEECH
    To: BUG-beta-test at OZ

    In beta-test in Release 4.5, site configuration 65, on Lisp Machine Grizzly:

    (FS:ADD-LOGICAL-PATHNAME-HOST
      "LEXIS"
      "SPEECH"
      '(("FONTS" "SS:<SPIRE.FONTS>")
	("LEXICON" "SS:<LEXICON>")
	("LEXIS" "SS:<LEXIS>")
	("PATCH" "SS:<LEXIS.PATCH>")))

    The above works fine in 4.5 but in 5.0 it seems to need to be

    (FS:ADD-LOGICAL-PATHNAME-HOST
      "LEXIS"
      "SPEECH"
      '(("FONTS" "SPEECH:SS:<SPIRE.FONTS>")
	("LEXICON" "SPEECH:SS:<LEXICON>")
	("LEXIS" "SPEECH:SS:<LEXIS>")
	("PATCH" "SPEECH:SS:<LEXIS.PATCH>")))

    which does not work in 4.5

    Is there a variation that works on both?

Try ":SS:<SPIRE.FONTS>".  If that doesn't work, I'm afraid you'll have
to keep a separate Rel5 copy until all your machines are running release
5.
15-Nov-83 15:05:44-EST,822;000000000000
Received: from SCRC-AMAZON by SCRC-YUKON with CHAOS; Tue 15-Nov-83 15:09:19-EST
Date: Tuesday, 15 November 1983, 15:09-EST
From: Neal Feinberg <Feinberg at SCRC-YUKON>
Subject: File handle in use
To: ZVONA at MIT-AI, BUG-beta-test at MIT-AI
In-reply-to: The message of 14 Nov 83 13:32-EST from David Chapman <ZVONA at MIT-AI>


    Date: Monday, 14 November 1983, 13:32-EST
    From: David Chapman <ZVONA at MIT-OZ>
    To: BUG-beta-test at MIT-OZ

    In beta-test in Release 5.0 [GC'd Beta Test rev 2], on Lisp Machine Jimi Hendrix (3600):

    What do I do with ``File handle in use'' errors?  They come up a lot
    from PIG and retrying doesn't help; I end up doing neti:(progn (reset)
    (enable)) a lot.

Please put the Dusty Plum band on Jimi and let us know if you still have
these problems.
15-Nov-83 15:14:37-EST,748;000000000000
Date: Tuesday, 15 November 1983, 15:13-EST
From: Philippe Brou <PHILIP at MIT-OZ>
Subject: (format nil <art-fat-string>)
To: BUG-BETA-TEST at MIT-OZ
Cc: phw at MIT-OZ, JMB at MIT-OZ, TLP at MIT-OZ, RMS at MIT-OZ

In ZWEI in Release 5.0 [GC'd Beta Test rev 3], dusty plum, on Lisp Machine Apriary-3 (3600):

I used to be able to solve most incompatibilities
with fonts with (format nil <string>) to convert
the string from an ART-FAT-STRING to ART-STRING.

Now this doesn't work anymore. Until we have a simple
way of stripping font data out of fat-strings (hopefully
something better than a loop), it will be impossible to
do any progress on the font incompatibilities problem
(which I had managed to solve by myself in REL 4.5)

15-Nov-83 15:16:46-EST,1059;000000000000
Received: from SCRC-AMAZON by SCRC-YUKON with CHAOS; Tue 15-Nov-83 15:20:16-EST
Date: Tuesday, 15 November 1983, 15:20-EST
From: Neal Feinberg <Feinberg at SCRC-YUKON>
Subject: Process file system fucked got an error
To: ZVONA at MIT-AI, bug-beta-test at MIT-AI
In-reply-to: The message of 14 Nov 83 13:43-EST from David Chapman <ZVONA at MIT-AI>


    Date: Monday, 14 November 1983, 13:43-EST
    From: David Chapman <ZVONA at MIT-AI>

    In Release 5.0 [GC'd Beta Test rev 2], on Lisp Machine Jimi Hendrix (3600):

    I don't know if this is any use to you.  It happened when I did a G in
    Zmail.  (My mail is on OZ, not PYG.)

    >>Error: FILE protocol violation at interrupt level, asynchronous mark for non-open output channel.
	     Host: PYGMALION  Packet: "T1921 I1875 ERROR MSC F I//O operation canceled"
    While in the function (:INTERNAL FS:HOST-CHAOS-INTERRUPT-FUNCTION 0)  SI:PROCESS-RUN-FUNCTION-INTERNAL  SI:PROCESS-TOP-LEVEL

Sounds like you should send this to the maintainers of PYG, if you
haven't already.
15-Nov-83 17:19:09-EST,1211;000000000000
Received: from SCRC-EUPHRATES by SCRC-YUKON with CHAOS; Tue 15-Nov-83 17:21:17-EST
Date: Tue, 15 Nov 83 17:20 EST
From: "David A. Moon" <Moon%SCRC-TENEX@MIT-MC.ARPA>
Subject: unbalanced parentheses?
To: Carl Hewitt <Hewitt@MIT-OZ.ARPA>
Cc: BUG-REL-5@MIT-OZ.ARPA
In-reply-to: The message of 15 Nov 83 12:23-EST from Carl Hewitt <Hewitt at MIT-OZ>

    Date: Tuesday, 15 November 1983, 12:23-EST
    From: Carl Hewitt <Hewitt at MIT-OZ>
    In Release 5.0 [GC'd Beta Test rev 3], dusty plum, on Lisp Machine Apiary-4 (3600):

    Would it be possible for the pathesis checker to say WHERE it
    came to the conclusion that there are unbalanced partheses?

Use the command m-X Find Unbalanced Parentheses.

    Also would it be possible for CONTROL-M to work in a SUSPEND break so that I
    would not have to time "foo" to get an umbound variable and thus get an error
    handler.

Since there doesn't seem to be any information in the stack trace inserted into
your message by the c-M command, I think you wanted to use the BUG command (m-X
Bug in the editor, or (bug) if you are typed at a Lisp read-eval-print loop, e.g.
after typing Suspend) rather than the debugger's c-M command.
15-Nov-83 17:20:12-EST,1014;000000000000
Received: from SCRC-THAMES by SCRC-QUABBIN with CHAOS; Tue 15-Nov-83 17:23:39-EST
Date: Tue, 15 Nov 83 17:24 EST
From: Scott W McKay <SWM%SCRC-VIXEN@MIT-MC.ARPA>
Subject: Fonts..
To: PHILIP@MIT-OZ.ARPA, BUG-BETA-TEST@MIT-OZ.ARPA
Cc: TLP@MIT-OZ.ARPA, WELG@MIT-OZ.ARPA, PHW@MIT-OZ.ARPA, JMB@MIT-OZ.ARPA,
    RMS@MIT-OZ.ARPA
In-reply-to: The message of 15 Nov 83 13:52-EST from Philippe Brou <PHILIP at MIT-OZ>

    Date: Tuesday, 15 November 1983, 13:52-EST
    From: Philippe Brou <PHILIP at MIT-OZ>
    In ZWEI in Release 5.0 [GC'd Beta Test rev 3], dusty plum, on Lisp Machine Apriary-3 (3600):

    Why does the system fail in getting "VISION:<..."
    when the default clearly indicates "OZ:VISION:<..."

    >From a default of "OZ:PS:" it should figure out
    that "VISION:" is acceptable.

The first colon in a pathname now /always/ delimits the host name.
If you want it to default correctly, use ":VISION:".  If the
default indicated "OZ:VISION:<...", why didn't you just use "<..."?
15-Nov-83 17:42:41-EST,592;000000000000
Received: from SCRC-THAMES by SCRC-QUABBIN with CHAOS; Tue 15-Nov-83 17:46:23-EST
Date: Tue, 15 Nov 83 17:46 EST
From: Scott W McKay <SWM%SCRC-VIXEN@MIT-MC.ARPA>
To: Zvona@MIT-OZ.ARPA, bug-lispm@MIT-OZ.ARPA
In-reply-to: The message of 13 Nov 83 18:21-EST from David Chapman <Zvona at MIT-OZ>

    Date: Sunday, 13 November 1983, 18:21-EST
    From: David Chapman <Zvona at MIT-OZ>
    Rel 5 m-X Clean Directory still asks if you want to expunge a VMS
    directory.
This is true.  VMS expunge is a noop, so it's benign.  I bet it asks the
same question for Unix directories, too.
15-Nov-83 20:14:56-EST,487;000000000000
Date: Tuesday, 15 November 1983, 20:15-EST
From: Jerry Roylance <GLR at MIT-OZ>
Subject: Supdup Graphics
To: BUG-LISPM at MIT-OZ

In Release 5.0 [GC'd Beta Test rev 3], dusty plum, on Lisp Machine Robot-4 (3600):

Talking to OZ through a SUPDUP window.

Doing supdup graphics.  TELNET:GRAPHICS-RIGHT and several other
instance variables are uninitialized.  Cannot clear screen or
draw lines until they have been initialized.  (Running DPRESS
will initialize them.)

Jerry
15-Nov-83 21:10:31-EST,1923;000000000000
Received: from SCRC-AMAZON by SCRC-QUABBIN with CHAOS; Tue 15-Nov-83 21:14:04-EST
Date: Tuesday, 15 November 1983, 21:14-EST
From: Neal Feinberg <Feinberg at SCRC-YUKON>
Subject: Fonts..
To: PHILIP at MIT-AI, BUG-BETA-TEST at MIT-AI
Cc: TLP at MIT-AI, WELG at MIT-AI, PHW at MIT-AI, JMB at MIT-AI,
    RMS at MIT-AI
In-reply-to: The message of 15 Nov 83 13:52-EST from Philippe Brou <PHILIP at MIT-AI>

    Received: from SCRC-TENEX by SCRC-YUKON with CHAOS; Tue 15-Nov-83 14:39:11-EST
    Received: from MIT-OZ by SCRC-TENEX with CHAOS; Tue 15-Nov-83 13:58:58-EST
    Date: Tuesday, 15 November 1983, 13:52-EST
    From: Philippe Brou <PHILIP at MIT-OZ>
    Subject: Fonts..
    To: BUG-BETA-TEST at MIT-OZ
    Cc: TLP at MIT-OZ, WELG at MIT-OZ, PHW at MIT-OZ, JMB at MIT-OZ, RMS at MIT-OZ

    In ZWEI in Release 5.0 [GC'd Beta Test rev 3], dusty plum, on Lisp Machine Apriary-3 (3600):

    I was told that fonts were supposed to work
    on Rel 5.

Can you tell me who claimed "fonts were supposed to work"?

    They still don't work at all.
    None of the previous problems seem to have been
    fixed:

     1) The compiler can't handle files with fonts 
	(only works in ZMACS)
     2) Meta-. doesn't get the right default
     3) The mouse doesn't see the functions names in Meta-.
     4) Completion doesn't work in Meta-.
     5) List definitions doesn't work

Thanks for the report.  

    Why does the system fail in getting "VISION:<..."
    when the default clearly indicates "OZ:VISION:<..."

    From a default of "OZ:PS:" it should figure out
    that "VISION:" is acceptable.

    (Was told that ":VISION:" works but completion
    doesn't)

You should check out the beta test documents.  Basically the first item
in a pathname followed by a colon is considered a host.

    Switching back to 97 for a few weeks... couldn't find any
    bugs in it.


15-Nov-83 21:11:27-EST,1943;000000000000
Received: from SCRC-AMAZON by SCRC-YUKON with CHAOS; Tue 15-Nov-83 21:14:45-EST
Date: Tuesday, 15 November 1983, 21:15-EST
From: Neal Feinberg <Feinberg at SCRC-YUKON>
Subject: random crash
To: CARLF at MIT-AI, BUG-LISPM at MIT-AI
In-reply-to: The message of 14 Nov 83 20:42-EST from Carl Richard Feynman <CARLF at MIT-AI>
Supersedes: The message of 15 Nov 83 20:13-EST from Neal Feinberg <Feinberg at SCRC-YUKON>,
            The message of 15 Nov 83 20:13-EST from Neal Feinberg <Feinberg at SCRC-YUKON>,
            The message of 15 Nov 83 20:13-EST from Neal Feinberg <Feinberg at SCRC-YUKON>,
            The message of 15 Nov 83 20:13-EST from Neal Feinberg <Feinberg at SCRC-YUKON>

    Date: Monday, 14 November 1983, 20:42-EST
    From: Carl Richard Feynman <CARLF at MIT-OZ>

    In Release 5.0 [GC'd Beta Test rev 3], dusty plum, on Lisp Machine Elvis Presley (3600):

    At about 8:30, after I had been using this machine for about 20 minutes,
    while I was compiling a short file, lisp stopped itself, and the fep took
    over, printing "Lisp stopped itself". I looked at the various fep
    commands that were available, and chose "return-keyboard-to-lisp",
    hoping that I would then be able to continue my work.  Alas, I was
    instantly bounced back to the fep, with the message "Execution stopped
    by remote console", or something like that.  I thereupon booted the
    machine.

			    --carl

The best thing to do is to type "show status" to the FEP, and write down
all the information.  Then send off a bug report at some point
containing the status information and anything else relevent to the
crash.  Sometimes you can recover by warm booting the machine, at least
long enough to save your files.  To warm boot you type "start" to the
FEP.  If you find that the machine is unusable because it crashes
frequently, you should probably send mail to Bug-Symbolics-Hardware@OZ. 
15-Nov-83 21:15:27-EST,733;000000000000
Date: 15 November 1983 21:17 EST
From: Christopher C. Stacy <CSTACY @ MIT-MC>
To: SWM @ SCRC-VIXEN
cc: bug-lispm @ MIT-OZ, Zvona @ MIT-OZ
In-reply-to: Msg of Tue 15 Nov 83 17:46 EST from Scott W McKay <SWM%SCRC-VIXEN at MIT-MC.ARPA>

    Date: Tue, 15 Nov 83 17:46 EST
    From: Scott W McKay <SWM%SCRC-VIXEN at MIT-MC.ARPA>
    To:   Zvona at MIT-OZ.ARPA, bug-lispm at MIT-OZ.ARPA

        Date: Sunday, 13 November 1983, 18:21-EST
        From: David Chapman <Zvona at MIT-OZ>
        Rel 5 m-X Clean Directory still asks if you want to expunge a VMS
        directory.
    This is true.  VMS expunge is a noop, so it's benign.  I bet it asks the
    same question for Unix directories, too.

And for ITS, etc...
15-Nov-83 21:59:10-EST,1740;000000000000
Received: from SCRC-EUPHRATES by SCRC-TENEX with CHAOS; Tue 15-Nov-83 16:09:25-EST
Date: Tue, 15 Nov 83 16:12 EST
From: "David A. Moon" <Moon%SCRC-TENEX@MIT-MC.ARPA>
Subject: Array types
To: Philippe Brou <PHILIP@MIT-OZ.ARPA>
Cc: BUG-BETA-TEST@MIT-OZ.ARPA, TLP@MIT-OZ.ARPA, JMB@MIT-OZ.ARPA,
    PHW@MIT-OZ.ARPA, RMS@MIT-OZ.ARPA
In-reply-to: The message of 15 Nov 83 14:09-EST from Philippe Brou <PHILIP at MIT-OZ>

    Date: Tuesday, 15 November 1983, 14:09-EST
    From: Philippe Brou <PHILIP at MIT-OZ>
    In Release 5.0 [GC'd Beta Test rev 3], dusty plum, on Lisp Machine Apriary-3 (3600):

    You can't be serious when asking for array
    types to be GLOBAL. I can't understand
    why they couldn't be in KEYWORD [as in 97].

There are two reasons why array types are not keywords.
(1) They are not documented with colons in the Lisp machine manual, therefore
existing code that was written according to the documentation would fail to work
if they were changed to be keywords.
(2) All keywords evaluate to themselves, but array type symbols evaluate
to numerical values that are internal codes.

One way for you to achieve compatibility with system 97 would be to make
your own variables whose values are array types and use those variables.
E.g.
	(defconstant string-array-type #+symbolics art-string #+lmit :art-string)
	(make-array 100 :type string-array-type)
Or, in system 97 you could do
	#+lmit (defconstant art-string :art-string)
and then you could write your code using art-string, according to the
documentation.  If you already have a lot of code that says :art-string
you should be able to use the m-X Tags Multiple Query Replace command to
quickly change the array type names back.
15-Nov-83 22:03:51-EST,3010;000000000000
Date: Tuesday, 15 November 1983, 22:05-EST
From: jeremy at MIT-OZ
Subject: mouse on apiary-3 kept losing while I was in the window debugger
To: BUG-LISPM at MIT-OZ

In Release 5.0 [GC'd Beta Test rev 3], dusty plum, on Lisp Machine Apriary-3 (3600):


>>Trap: The MEMQ microcode, tried to take CAR of #<DTP-EVEN-PC 20704732>, which was a tail of the second argument.
While in the function FUNCTIONP  (:DEFUN-METHOD TV:ITEM-MOUSE-SENSITIVE-P)  (:DEFUN-METHOD TV:MOUSE-SENSITIVE-ITEM)

FUNCTIONP:  (P.C. = 70)
   Arg 0 (X): (:VALUE :FUNCTION SYS:STACK-FRAME)
   --Defaulted args:--
   Arg 1 (ALLOW-SPECIAL-FORMS): NIL
   Local 2 (*SELECTQ-ITEM*): 4

(:DEFUN-METHOD TV:ITEM-MOUSE-SENSITIVE-P):  (P.C. = 7)
   Arg 0 (SELF): #<STACK-SCROLL-PANE Stack Scroll Pane 1 3320454 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:MOUSE-SENSITIVE-TEXT-SCROLL-WINDOW-WITHOUT-CLICK -- 3. IV's, 0. FL's 16254051>
   Arg 2 (ITEM): (ENV :VALUE 2033 2063)

(:DEFUN-METHOD TV:MOUSE-SENSITIVE-ITEM):  (P.C. = 51)
   Arg 0 (SELF): #<STACK-SCROLL-PANE Stack Scroll Pane 1 3320454 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:MOUSE-SENSITIVE-TEXT-SCROLL-WINDOW-WITHOUT-CLICK -- 3. IV's, 0. FL's 16254051>
   Arg 2 (X): 563
   Arg 3 (Y): 22

(:METHOD TV:MOUSE-SENSITIVE-TEXT-SCROLL-WINDOW-WITHOUT-CLICK :MOUSE-SENSITIVE-ITEM):  (P.C. = 10)
   Arg 0 (SELF): #<STACK-SCROLL-PANE Stack Scroll Pane 1 3320454 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:MOUSE-SENSITIVE-TEXT-SCROLL-WINDOW-WITHOUT-CLICK -- 3. IV's, 0. FL's 16254051>
   Arg 2 (OPERATION): :MOUSE-SENSITIVE-ITEM
   Arg 3 (X): 563
   Arg 4 (Y): 22

(:DEFUN-METHOD TV:TEST-FOR-MOUSE-SENSITIVE-ITEMS):  (P.C. = 10)
   Arg 0 (SELF): #<STACK-SCROLL-PANE Stack Scroll Pane 1 3320454 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:MOUSE-SENSITIVE-TEXT-SCROLL-WINDOW-WITHOUT-CLICK -- 3. IV's, 0. FL's 16254051>
   Arg 2 (X): 563
   Arg 3 (Y): 22

(:METHOD TV:MOUSE-SENSITIVE-TEXT-SCROLL-WINDOW-WITHOUT-CLICK :MOUSE-MOVES):  (P.C. = 10)
   Arg 0 (SELF): #<STACK-SCROLL-PANE Stack Scroll Pane 1 3320454 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:MOUSE-SENSITIVE-TEXT-SCROLL-WINDOW-WITHOUT-CLICK -- 3. IV's, 0. FL's 16254051>
   Arg 2 (OPERATION): :MOUSE-MOVES
   Arg 3 (X): 563
   Arg 4 (Y): 22

(:METHOD DBG:STACK-SCROLL-PANE :COMBINED :MOUSE-MOVES):  (P.C. = 30)
   Arg 0 (SELF): #<STACK-SCROLL-PANE Stack Scroll Pane 1 3320454 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor DBG:STACK-SCROLL-PANE -- 1. IV's, 21. FL's 16253634>
   Rest arg (.DAEMON-CALLER-ARGS.): (:MOUSE-MOVES 563 22)

TV:MOUSE-DEFAULT-HANDLER:  (P.C. = 200)
   Arg 0 (WINDOW): #<STACK-SCROLL-PANE Stack Scroll Pane 1 3320454 exposed>
   Arg 1 (SCROLL-BAR-FLAG): T

Rest of stack:
(:METHOD TV:ESSENTIAL-MOUSE :HANDLE-MOUSE):  (P.C. = 10)
(:METHOD DBG:STACK-SCROLL-PANE :COMBINED :HANDLE-MOUSE):  (P.C. = 11)
TV:MOUSE-OVERSEER:  (P.C. = 101)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
15-Nov-83 22:10:25-EST,1012;000000000000
Received: from SCRC-AMAZON by SCRC-YUKON with CHAOS; Tue 15-Nov-83 22:13:58-EST
Date: Tuesday, 15 November 1983, 22:14-EST
From: Neal Feinberg <Feinberg at SCRC-YUKON>
Subject: unbalanced parentheses?
To: Hewitt at MIT-AI, BUG-REL-5 at MIT-AI
In-reply-to: The message of 15 Nov 83 12:23-EST from Carl Hewitt <Hewitt at MIT-AI>


    Date: Tuesday, 15 November 1983, 12:23-EST
    From: Carl Hewitt <Hewitt at MIT-OZ>

    In Release 5.0 [GC'd Beta Test rev 3], dusty plum, on Lisp Machine Apiary-4 (3600):

    Would it be possible for the pathesis checker to say WHERE it
    came to the conclusion that there are unbalanced partheses?

    Also would it be possible for CONTROL-M to work in a SUSPEND break so that I
    would not have to time "foo" to get an umbound variable and thus get an error
    handler.

    Thanks,

    Carl

We should have better Beta Test documentation by Monday which will
explain that you can type M-Suspend when in a break loop to enter the
debugger.
15-Nov-83 22:44:10-EST,1062;000000000000
Received: from SCRC-AMAZON by SCRC-TENEX with CHAOS; Tue 15-Nov-83 22:01:25-EST
Date: Tuesday, 15 November 1983, 22:05-EST
From: Neal Feinberg <Feinberg@SCRC-YUKON>
Subject: system versions and patches
To: Gumby@MIT-MC, bug-beta-test@MIT-OZ
In-reply-to: The message of 15 Nov 83 03:06-EST from David Vinayak Wallace <Gumby at MIT-MC>
Fonts: CPTFONT


    Date: Tuesday, 15 November 1983, 03:06-EST
    From: David Vinayak Wallace <Gumby at MIT-MC>

    We now have sources (thanks!), but no patches.  And the patches
    being generated (according to bug replies) seem to be generated
    for system versions we don't have.

    Is this going to be fixed for the beta-test system?

    david

If you mean why don't you have patches for the 243 system, well, system
243 is the development system.  We want to keep that system separate
from what we give our customers.  We will be incorporating 243 patches
into the final release 5 world, and we may even have a patch release of
some critical fixes simply to beta test patch distribution.
15-Nov-83 23:01:45-EST,830;000000000000
Received: from SCRC-NEPONSET by SCRC-TENEX with CHAOS; Tue 15-Nov-83 22:25:46-EST
Date: Tue, 15 Nov 83 22:29 EST
From: Mike McMahon <MMcM%SCRC-TENEX@MIT-MC.ARPA>
Subject: Supdup Graphics
To: Jerry Roylance <GLR@MIT-OZ.ARPA>
Cc: BUG-LISPM@MIT-OZ.ARPA
In-reply-to: The message of 15 Nov 83 20:15-EST from Jerry Roylance <GLR at MIT-OZ>
Message-ID: <831115222936.3.MMcM@SCRC.SCRC.Symbolics>

    Date: Tuesday, 15 November 1983, 20:15-EST
    From: Jerry Roylance <GLR at MIT-OZ>

    Doing supdup graphics.  TELNET:GRAPHICS-RIGHT and several other
    instance variables are uninitialized.  Cannot clear screen or
    draw lines until they have been initialized.  (Running DPRESS
    will initialize them.)

What program did you run on OZ that did supdup graphics without
initializing first, the way DPRESS does?
15-Nov-83 23:05:32-EST,1562;000000000000
Received: from SCRC-AMAZON by SCRC-TENEX with CHAOS; Tue 15-Nov-83 22:35:28-EST
Date: Tuesday, 15 November 1983, 22:39-EST
From: Neal Feinberg <Feinberg@SCRC-YUKON>
Subject: #+REL-5
To: PHILIP@MIT-OZ, BUG-BETA-TEST@MIT-OZ
Cc: PHW@MIT-OZ, JMB@MIT-OZ, TLP@MIT-OZ, WELG@MIT-OZ, RMS@MIT-OZ
In-reply-to: The message of 15 Nov 83 14:41-EST from Philippe Brou <PHILIP at MIT-AI>

    Date: Tuesday, 15 November 1983, 14:41-EST
    From: Philippe Brou <PHILIP at MIT-OZ>

    In Release 5.0 [GC'd Beta Test rev 3], dusty plum, on Lisp Machine Apriary-3 (3600):

    Are there any # macros to that run
    on 97, rel-4 and rel-5 of the type #+3600
    that would allow differentiation between these
    three systems? (#+CADR is the one for 97)

If you need to distinguish between Symbolics and non-Symbolics systems,
you can use #+Symbolics or #-Symbolics.  You generally don't need to
distinguish between release 4 and release 5 with # macros for several
reasons.  Perhaps the most obvious is that release 4 and release 5
binary files are incompatible, so you will need to at least keep
separate copies of the binaries.  The easiest way to keep the binaries
separate is to keep separate copies of the source files.

It is easy to define #+rel-4 and #+rel-5 yourself.  For example:

(let ((current-system-major-version (si:get-system-version)))
  (cond ((=  current-system-major-version 222.)
	 (sstatus :feature 'rel-4))
	((>= current-system-major-version 242.)
	 (sstatus :feature 'rel-5))))

Of course this will lose for release 6.
15-Nov-83 23:06:43-EST,1651;000000000000
Received: from SCRC-AMAZON by SCRC-TENEX with CHAOS; Tue 15-Nov-83 22:39:08-EST
Date: Tuesday, 15 November 1983, 22:42-EST
From: Neal Feinberg <Feinberg@SCRC-YUKON>
Subject: #+REL-5
To: PHILIP@MIT-OZ, BUG-BETA-TEST@MIT-OZ
Cc: PHW@MIT-OZ, JMB@MIT-OZ, TLP@MIT-OZ, WELG@MIT-OZ, RMS@MIT-OZ
In-reply-to: The message of 15 Nov 83 14:41-EST from Philippe Brou <PHILIP at MIT-AI>
Supersedes: The message of 15 Nov 83 22:39-EST from Neal Feinberg <Feinberg@SCRC-YUKON>

    Date: Tuesday, 15 November 1983, 14:41-EST
    From: Philippe Brou <PHILIP at MIT-OZ>

    In Release 5.0 [GC'd Beta Test rev 3], dusty plum, on Lisp Machine Apriary-3 (3600):

    Are there any # macros to that run
    on 97, rel-4 and rel-5 of the type #+3600
    that would allow differentiation between these
    three systems? (#+CADR is the one for 97)

If you need to distinguish between Symbolics and non-Symbolics systems,
you can use #+Symbolics or #-Symbolics.  You generally don't need to
distinguish between release 4 and release 5 with # macros for several
reasons.  Perhaps the most obvious is that release 4 and release 5
binary files are incompatible, so you will need to at least keep
separate copies of the binaries.  The easiest way to keep the binaries
separate is to keep separate copies of the source files.

It is easy to define #+rel-4 and #+rel-5 yourself.  For example:

(let ((current-system-major-version (si:get-system-version)))
  (cond ((=  current-system-major-version 222.)
	 (sstatus :feature :rel-4))
	((>= current-system-major-version 242.)
	 (sstatus :feature :rel-5))))

Of course this will lose for release 6.
16-Nov-83 01:13:08-EST,607;000000000000
Mail-From: HENRY created at 16-Nov-83 01:12:36
Date: Wed, 16 Nov 1983  01:12 EST
Message-ID: <HENRY.11967990002.BABYL@MIT-OZ>
From: HENRY@MIT-OZ
To:   Neal Feinberg <Feinberg@SCRC-YUKON>
Cc:   BUG-BETA-TEST@MIT-OZ, JMB@MIT-OZ, PHILIP@MIT-OZ, PHW@MIT-OZ, RMS@MIT-OZ,
      TLP@MIT-OZ, WELG@MIT-OZ
Subject: #+REL-5
In-reply-to: Msg of 15 Nov 1983 22:39-EST from Neal Feinberg <Feinberg at SCRC-YUKON>



Why not just have a variable that has the release number. 
It's silly to make users have to know the correspondence 
between the "release numbers" [5.0] and "system version numbers"
[242].
16-Nov-83 02:01:14-EST,1636;000000000000
Date: Wed, 16 Nov 1983  01:59 EST
Message-ID: <GLR.11967998598.BABYL@MIT-OZ>
From: Jerry Roylance <GLR%MIT-OZ@MIT-MC.ARPA>
To:   Mike McMahon <MMcM%SCRC-TENEX@MIT-MC.ARPA>
Cc:   BUG-LISPM@MIT-OZ.ARPA
Subject: Supdup Graphics
In-reply-to: Msg of 15 Nov 1983  22:29-EST from Mike McMahon <MMcM%SCRC-TENEX at MIT-MC.ARPA>


    Date: Tuesday, 15 November 1983  22:29-EST
    From: Mike McMahon <MMcM%SCRC-TENEX at MIT-MC.ARPA>
    To:   Jerry Roylance <GLR at MIT-OZ.ARPA>
    cc:   BUG-LISPM at MIT-OZ.ARPA
    Re:   Supdup Graphics

        Date: Tuesday, 15 November 1983, 20:15-EST
        From: Jerry Roylance <GLR at MIT-OZ>

        Doing supdup graphics.  TELNET:GRAPHICS-RIGHT and several other
        instance variables are uninitialized.  Cannot clear screen or
        draw lines until they have been initialized.  (Running DPRESS
        will initialize them.)

    What program did you run on OZ that did supdup graphics without
    initializing first, the way DPRESS does?

The program was some SPICE plotting stuff that has "worked" for a long time.
I put in a %TDRST to make it work in REL 5.  The program was:

	@LISP
	(LOAD "PS:<GLR.DESIGN>LSPICE")
	(SPICE-PLOT-FILE "SS:<GLR.DESIGN.SPICE>PROBE.PLT")

(but this code works now)

The %TDRST is in PS:<GLR.PSTRM>SUPGRF.LSP.
(The result is bizzare because OZ gets confused about the terminal width.)

I'm happy now, but you may want to initialize the variables when
the connection is made.  I'll give you some broken code if you want.

				Jerry

ps -- setting the terminal width on OZ also initializes the
instance variables.
16-Nov-83 03:09:51-EST,2491;000000000000
Date: Wednesday, 16 November 1983, 03:06-EST
From: Scott Cyphers <sr.cypher at MIT-SPEECH>
To: BUG-beta-test at MIT-OZ

In Release 5.0 [GC'd Beta Test rev 2], on Lisp Machine Yogi (LM-2):

I was trying to read this file in to ZMACS and keept getting these errors.
The file is SPEECH:SS:<SPIRE>DUMP.LISP.58

>>Error: Array types are not keywords.  :ART-STRING should be GLOBAL:ART-STRING
While in the function SI:CHECK-FOR-BOGUS-KEYWORD  SI:PKG-NEW-KEYWORD-SYMBOL  GLOBAL:INTERN

SI:CHECK-FOR-BOGUS-KEYWORD:  (P.C. = 45)
   Arg 0 (SYMBOL): :ART-STRING

SI:PKG-NEW-KEYWORD-SYMBOL:  (P.C. = 26)
   Arg 0 (PKG): #<Package KEYWORD 16716106>
   Arg 1 (SYM): :ART-STRING
   Arg 2 (HASH): 5051242
   Arg 3 (IGNORE): 0

GLOBAL:INTERN:  (P.C. = 214)
   Arg 0 (SYM): :ART-STRING
   --Defaulted args:--
   Arg 1 (PKG): #<Package KEYWORD 16716106>

SI:XR-READ-SYMBOL:  (P.C. = 120)
   Arg 0 (STREAM): SI:READ-FROM-STRING-STREAM
   Arg 1 (STRING): "ART-STRING"

SI:XR-READ-THING:  (P.C. = 332)
   Arg 0 (STREAM): SI:READ-FROM-STRING-STREAM

(:INTERNAL SI:READ-INTERNAL 0):  (P.C. = 75)
   Arg 0 (STREAM): SI:READ-FROM-STRING-STREAM
   Arg 1 (FUNCTION): SI:READ-RECURSIVE
   Arg 2 (EOF-OPTION): SI:NO-EOF-OPTION

SI:READ-INTERNAL:  (P.C. = 105)
   Arg 0 (FUNCTION): SI:READ-RECURSIVE
   Rest arg (READ-ARGS): (SI:READ-FROM-STRING-STREAM SI:NO-EOF-OPTION)

SI:READ-RECURSIVE:  (P.C. = 30)
   Arg 0 (STREAM): SI:READ-FROM-STRING-STREAM

Rest of stack:
SI:XR-PACKAGE-PREFIX:  (P.C. = 156)
(:PROPERTY SI:PACKAGE-PREFIX SI:STANDARD-READ-FUNCTION):  (P.C. = 24)
SI:XR-READ-THING:  (P.C. = 156)
(:INTERNAL SI:READ-INTERNAL 0):  (P.C. = 75)
SI:READ-INTERNAL:  (P.C. = 105)
GLOBAL:READ:  (P.C. = 26)
GLOBAL:READ-FROM-STRING:  (P.C. = 66)
ZWEI:SYMBOL-FROM-STRING:  (P.C. = 156)
ZWEI:GET-DEFINITION-FUNCTION-SPEC:  (P.C. = 234)
(:METHOD ZWEI:LISP-SYNTAX-MIXIN :SECTION-NAME):  (P.C. = 51)
ZWEI:SECTIONIZE-BUFFER:  (P.C. = 407)
(:DEFUN-METHOD ZWEI:REVERT-FROM-STREAM):  (P.C. = 334)
(:METHOD ZWEI:FILE-BUFFER-MIXIN :REVERT):  (P.C. = 231)
ZWEI:FIND-FILE:  (P.C. = 310)
ZWEI:COM-FIND-FILE:  (P.C. = 61)
ZWEI:COMMAND-EXECUTE:  (P.C. = 77)
ZWEI:MAKE-EXTENDED-COMMAND-INTERNAL:  (P.C. = 214)
ZWEI:COMMAND-EXECUTE:  (P.C. = 77)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 65)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 424)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 102)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 52)
SI:PROCESS-TOP-LEVEL:  (P.C. = 123)
16-Nov-83 03:39:51-EST,731;000000000000
Date: Thursday, 17 November 1983, 19:01-EST
From: Scott Cyphers <sr.cypher at MIT-SPEECH>
Subject: Defsubst incorrect warnings
To: BUG-beta-test at MIT-OZ

In beta-test in Release 5.0 [GC'd Beta Test rev 2],
Experimental Spire Macros 3.0, on Lisp Machine Yogi (LM-2):

I have the subst

(defsubst make-float-array (dimensions &rest options)
  (lexpr-funcall 'make-array dimensions ':type 'art-fps-float options))

If I macroexpand or compile something using the &rest args, for example:

(make-float-array 5 ':leader-length 4)

I get the warning:

    Too many args for MAKE-FLOAT-ARRAY, completely ignoring (QUOTE :LEADER-LENGTH) 4

However, it macroexpands properly and the disassembled code looks correct.
16-Nov-83 03:40:18-EST,366;000000000000
Date: Thursday, 17 November 1983, 19:02-EST
From: Scott Cyphers <sr.cypher at MIT-SPEECH>
Subject: Time warp?
To: BUG-beta-test at MIT-OZ

In beta-test in Release 5.0 [GC'd Beta Test rev 2],
Experimental Spire Macros 3.0, on Lisp Machine Yogi (LM-2):

Somehow this machine thinks it's 11/17/83 at 19:02:26, but, as far as I know, it
is 11/16/83 at 3:40:26
16-Nov-83 04:14:09-EST,566;000000000000
Mail-From: CSTACY created at 16-Nov-83 04:13:45
Date: Wed 16 Nov 83 04:13-EST
From: Christopher Stacy <CSTACY@MIT-OZ>
Subject: #+REL-5
To: Henry@MIT-OZ
CC: Feinberg@SCRC-YUKON, BUG-BETA-TEST@MIT-OZ, JMB@MIT-OZ, PHILIP@MIT-OZ,
    PHW@MIT-OZ, RMS@MIT-OZ, TLP@MIT-OZ, WELG@MIT-OZ


Henry,


There are functions to do what you want.  #+RELi and #-RELi will all
be automatically defined for you if you just say (this is a little yucky):

  (SSTATUS FEATURE #.(MAKE-SYMBOL
                         (FORMAT NIL"REL~D" (SI:GET-RELEASE-VERSION))))

Chris
16-Nov-83 10:55:49-EST,712;000000000000
Date: Wednesday, 16 November 1983, 10:56-EST
From: RZ at SCRC|DM
Sender: File-Server at MIT-LISPM-15
Subject: Problems remote dumping LMFS on name server
To: BUG-Beta-test at MIT-OZ

In Release 5.0 [GC'd Beta Test rev 2], on Lisp Machine Fifteen (LM-2):


We have been having trouble dumping the Lispm file system.  It seems to be able to dump
about 80-90% just fine and then hangs in Net out.  I thought there might be some problem
with doing the dumping while the name server was enabled so I (si:disabled-services) but 
that didn't help any.  

We are dumping the file system using RTAPE on MIT-VAX.  Perhaps the chaosnet software on
MIT-VAX is at fault?  I know it is somewhat out of date.
16-Nov-83 17:11:42-EST,3240;000000000000
Date: Wednesday, 16 November 1983, 14:38-EST
From: Philippe Brou <PHILIP at MIT-OZ>
Subject: Clipping
To: BUG-LISPM at OZ

In Release 4.5, Experimental Touch_system 15.0, site configuration 75, on Lisp Machine John Lennon:

The clipping algorith on the :draw-line method does not
work properly on the top of the window for a given
range of orientations. Points are drawn in the top
margin (and can only be removed with a refresh).

Problem only seems to arise with lines in the North to NE direction.


The problem may be related with get the right
height from panes.

To reproduce the error, evaluate the following expression:

(progn
(defconst *TOUCH-SYSTEM-FRAME*
	  (tv:make-window
	    'tv:constraint-frame-with-shared-io-buffer
	    ':SAVE-BITS t
	    ':PANES
	    `((original-drawing tv:window
				  :BLINKER-P nil
				  :LABEL
				  (3. -15. -3. -3. fonts:tr8 "Real orientation"))
	      (computed-drawing
		tv:window)
	      (interpretation-number-window
		tv:window)
	      (paths-number-window
		tv:window)
	      (tree-display tv:window
			     :BLINKER-P nil
			     :FONT-MAP ,(list fonts:hl12b)
			     :LABEL (3. -15. -3. -3. fonts:tr8 "Tree"))
	      (cvv-menu
		tv:choose-variable-values-pane
		:LABEL (3. -15. -3. -3. fonts:tr8 "System parameters")
		:STACK-GROUP ,sys:%current-stack-group
		:MARGIN-CHOICES nil
		:FUNCTION change-system-parameters
		:VARIABLES nil)
	      (command-menu
		tv:command-menu-pane
		:LABEL nil
		:item-list (("NIL" :no-select)))
	      (data-window tv:window)
	      (lisp-interactor tv:lisp-interactor))
	    ':CONSTRAINTS
	    '((MAIN-CONFIGURATION
		. ((graphic-section blank-1 control-section)
		   ((graphic-section
		      :HORIZONTAL (.5)
		      (original-drawing blank-5 computed-side)
		      ((original-drawing .5))
		      ((blank-5 :BLANK :WHITE 1.))
		      ((computed-side
			 :VERTICAL (:EVEN)
			 (indicators blank-7 computed-drawing)
			 ((indicators
			    :HORIZONTAL (40.)
			    (interpretation-number-window blank-8 paths-number-window)
			    ((interpretation-number-window .5))
			    ((blank-8 :BLANK :WHITE 1.))
			    ((paths-number-window :EVEN))))
			 ((blank-7 :BLANK :WHITE 1.))
			 ((computed-drawing :EVEN))))))
		   ((blank-1 :BLANK :WHITE 1.))
		   ((control-section
		      :HORIZONTAL (:EVEN)
		      (tree-display blank-2 rest)
		      ((tree-display 100.))
		      ((blank-2 :BLANK :WHITE 1.))
		      ((rest
			 :VERTICAL (:EVEN)
			 (command-menu blank-3 lisp-and-cvv blank-4 data-window)
			 ((data-window 40.))
			 ((blank-3 :BLANK :WHITE 1.))
			 ((command-menu .14))
			 ((blank-4 :BLANK :WHITE 1.))
			 ((lisp-and-cvv
			    :HORIZONTAL (:EVEN)
			    (lisp-interactor blank-6 cvv-menu)
					((cvv-menu 250.))
					((blank-6 :BLANK :WHITE 1.))
					((lisp-interactor
					   :EVEN))))))))))))) 

(defconst lisp (send *touch-system-frame* ':get-pane 'lisp-interactor))
(defconst w (send *touch-system-frame* ':get-pane 'original-drawing))

(send w ':draw-line 200. -50. 150. 50. tv:alu-ior)
(send lisp ':select)
(format lisp "~%Type space to clear window")
(tyi lisp)
(send w ':clear-screen)
(format lisp "~%Notice point left in margin")

)
16-Nov-83 18:32:42-EST,958;000000000000
Received: from SCRC-AMAZON by SCRC-QUABBIN with CHAOS; Wed 16-Nov-83 15:22:45-EST
Date: Wednesday, 16 November 1983, 15:23-EST
From: Neal Feinberg <Feinberg at SCRC-YUKON>
Subject: mouse on apiary-3 kept losing while I was in the window debugger
To: jeremy at MIT-AI, BUG-LISPM at MIT-AI
In-reply-to: The message of 15 Nov 83 22:05-EST from jeremy at MIT-AI

    Date: Tuesday, 15 November 1983, 22:05-EST
    From: jeremy at MIT-OZ

    In Release 5.0 [GC'd Beta Test rev 3], dusty plum, on Lisp Machine Apriary-3 (3600):


    >>Trap: The MEMQ microcode, tried to take CAR of #<DTP-EVEN-PC 20704732>, which was a tail of the second argument.
    While in the function FUNCTIONP  (:DEFUN-METHOD TV:ITEM-MOUSE-SENSITIVE-P)  (:DEFUN-METHOD TV:MOUSE-SENSITIVE-ITEM)

The window debugger works fine for me.  I suspect that the Apiary
Machines are not up to Release 5 ECO.  I would suggest using release 4.5
until the machines are upgraded.
16-Nov-83 18:33:11-EST,835;000000000000
Received: from SCRC-CHARLES by SCRC-QUABBIN with CHAOS; Wed 16-Nov-83 15:42:49-EST
Date: Wednesday, 16 November 1983, 15:42-EST
From: David C. Plummer <DCP at SCRC-QUABBIN>
Subject: Supdup Graphics
To: GLR%MIT-OZ at MIT-MC.ARPA, MMcM%SCRC-TENEX at MIT-MC.ARPA
Cc: BUG-LISPM at MIT-OZ.ARPA
In-reply-to: <GLR.11967998598.BABYL@MIT-OZ>

    Date: Wed, 16 Nov 1983  01:59 EST
    From: Jerry Roylance <GLR%MIT-OZ@MIT-MC.ARPA>

    I'm happy now, but you may want to initialize the variables when
    the connection is made.  I'll give you some broken code if you want.

I think it should be initialized when a connection is made.  In theory,
programs should send a %TDRST, but not all do.  E.g., when I log out
from MC I sometimes get lossages because my logout file prints some
graphics and probably neglects to %TDRST.
16-Nov-83 21:30:06-EST,1090;000000000000
Date: Wednesday, 16 November 1983, 21:28-EST
From: Tim McNerney <TIM at MIT-OZ>
Subject: The pathname parser is getting dumber?
To: BUG-LISPM at MIT-OZ

In Release 5.0 [GC'd Beta Test rev 3], dusty plum, on Lisp Machine Apiary-5 (3600):

I know I was supposed to type ":src:<tim.tt>load-files", but what ever happened
to upward compatibility?  The Lisp Machine Manual EXPLICITLY says that the
pathname system is SMART about such things.  I.e. not mistaking the device SRC:
for a host.

>>Error: "src" is not a known file server host.
While in the function FS:GET-PATHNAME-HOST  FS:PARSE-PATHNAME-FIND-COLON  FS:PARSE-PATHNAME

FS:GET-PATHNAME-HOST:  (P.C. = 45)
   Arg 0 (HOST-NAME): "src"
   --Defaulted args:--
   Arg 1 (NO-ERROR-P): NIL
   Arg 2 (NO-AUTO-ADD-P): NIL
   Local 3 (HOST): NIL

FS:PARSE-PATHNAME-FIND-COLON:  (P.C. = 31)
   Arg 0 (STRING): "src:<tim.tt>load-files"

FS:PARSE-PATHNAME:  (P.C. = 245)
   Arg 0 (THING): "src:<tim.tt>load-files"
   Arg 1 (WITH-RESPECT-TO): NIL
   Arg 2 (DEFAULTS): #<TOPS20-PATHNAME "OZ:PS:<TIM>LOAD-FILES.LISP">
16-Nov-83 21:42:28-EST,1811;000000000000
Date: Wednesday, 16 November 1983, 21:40-EST
From: Tim McNerney <TIM at MIT-OZ>
Subject: Load lossage?
To: BUG-LISPM at MIT-OZ

In Release 5.0 [GC'd Beta Test rev 3], dusty plum, on Lisp Machine Apiary-5 (3600):

To the machine: What do you mean it's not a BIN file?... YOU just compiled it!

>>Error: OZ:SRC:<TIM.TT>MACROS.BIN.8 is not a BIN file
While in the function SI:BIN-LOAD-START  SI:BIN-LOAD-FILE-INTERNAL  LOAD

SI:BIN-LOAD-START:  (P.C. = 15)
   Arg 0 (STREAM): #<FILE-INPUT-BINARY-STREAM "OZ:SRC:<TIM.TT>MACROS.BIN" 20266616>
   Arg 1 (SKIP-READING-PROPERTY-LIST): NIL
   Local 2 (WORD): 35473

SI:BIN-LOAD-FILE-INTERNAL:  (P.C. = 26)
   Arg 0 (STREAM): #<FILE-INPUT-BINARY-STREAM "OZ:SRC:<TIM.TT>MACROS.BIN" 20266616>
   Arg 1 (INTO-PACKAGE): NIL
   Arg 2 (NO-MSG-P): NIL

LOAD:  (P.C. = 266)
   Arg 0 (PATHNAME): #<TOPS20-PATHNAME "OZ:SRC:<TIM.TT>MACROS.BIN">
   --Defaulted args:--
   Arg 1 (PKG): NIL
   Arg 2 (NONEXISTENT-OK-FLAG): NIL
   Arg 3 (DONT-SET-DEFAULT-P): NIL
   Arg 4 (NO-MSG-P): NIL

ZWEI:COM-LOAD-FILE:  (P.C. = 150)

ZWEI:COM-EXTENDED-COMMAND:  (P.C. = 27)

ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
   Arg 0 (COMMAND): ZWEI:COM-EXTENDED-COMMAND
   Arg 1 (CHAR): 1130
   Arg 2 (PREFIX-CHAR): NIL
   Arg 3 (HOOK-LIST): NIL

ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
   Arg 0 (CH): 1130

(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 200)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 27170206>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:EDITOR -- 11. IV's, 0. FL's 15632514>
   Arg 2 (OPERATION): :EDIT
   --Defaulted args:--
   Arg 3 (TOP-LEVEL-P): T
   Arg 4 (DESCRIPTION): NIL

Rest of stack:
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 41)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
16-Nov-83 22:10:21-EST,1098;000000000000
Received: from SCRC-CHARLES by SCRC-QUABBIN with CHAOS; Wed 16-Nov-83 22:11:33-EST
Date: Wednesday, 16 November 1983, 22:11-EST
From: David C. Plummer <DCP at SCRC-QUABBIN>
Subject: The pathname parser is getting dumber?
To: TIM at MIT-OZ, BUG-LISPM at MIT-OZ
In-reply-to: The message of 16 Nov 83 21:28-EST from Tim McNerney <TIM at MIT-OZ>

    Date: Wednesday, 16 November 1983, 21:28-EST
    From: Tim McNerney <TIM at MIT-OZ>
    In Release 5.0 [GC'd Beta Test rev 3], dusty plum, on Lisp Machine Apiary-5 (3600):

    I know I was supposed to type ":src:<tim.tt>load-files", but what ever happened
    to upward compatibility?  The Lisp Machine Manual EXPLICITLY says that the
    pathname system is SMART about such things.  I.e. not mistaking the device SRC:
    for a host.

If you know what you are supposed to do, then presumably you've been
reading the mail on the subject and maybe even the pre-release notes.
We said it was done on purpose, for reasons, and that it is an
incompatible change.  Therefore, in the name of progress, the change
obsoletes the manual.
17-Nov-83 00:48:13-EST,423;000000000000
Date: Thursday, 17 November 1983, 00:47-EST
From: Kent M. Pitman <KMP at MC>
Subject: No init file: ... MC: KMP; LISPM >, MC: KMP; LISPM >
To: BUG-LISPM at MC

In Release 5.0 [GC'd Beta Test rev 2], Vanilla, on PA Lisp Machine Avatar (CADR):

  (LOGIN "KMP")
  No init file: Unable to find any of the files MC: KMP; LISPM >, MC: KMP; LISPM >

Why does it try twice (or say it tried twice) to find the same file?
17-Nov-83 01:35:49-EST,504;000000000000
Date: Thursday, 17 November 1983, 01:27-EST
From: Kent M. Pitman <KMP at MC>
Subject: Notes on m-X Grind Definition, m-X Grind S Expression
To: BUG-LISPM at OZ

In Release 5.0 [GC'd Beta Test rev 2], Vanilla, on PA Lisp Machine Avatar (CADR):

In the editor, m-X Grind Definition no longer grinds variables. 
It used to. Is this a feature? 

This caused me to learn about m-X Grind S Expression. I find the S
to be very ugly. Why is it there? Wouldn't m-X Grind Expression
be a better name?
17-Nov-83 02:40:35-EST,4816;000000000000
Date: Thursday, 17 November 1983, 02:39-EST
From: Tim McNerney <TIM at MIT-OZ>
Subject: Terminal lossage
To: BUG-LISPM at MIT-OZ

In Release 5.0 [GC'd Beta Test rev 3], dusty plum, on Lisp Machine Apiary-5 (3600):

Hung waiting on "Net Out".  
Hit Network-L repeatedly (didn't seem to respond) then...

>>Error: Attempt to write to #<CHARACTER-STREAM 17400313>, which is closed.
While in the function (:DEFUN-METHOD CHAOS:SEND-CHARACTER-PKT)  (:METHOD CHAOS:CHARACTER-OUTPUT-STREAM-MIXIN :SEND-OUTPUT-BUFFER)  (:METHOD SI:BASIC-BUFFERED-OUTPUT-STREAM :SEND-CURRENT-OUTPUT-BUFFER)

(:DEFUN-METHOD CHAOS:SEND-CHARACTER-PKT):  (P.C. = 16)
   Arg 0 (SELF): #<CHARACTER-STREAM 17400313>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor CHAOS:CHARACTER-OUTPUT-STREAM-MIXIN -- 2. IV's, 0. FL's 25265065>
   Arg 2 (IGNORE): :SEND-OUTPUT-BUFFER
   Arg 3 (IGNORE): "9f
 yYrJ T JAr=  ZI
^KE-SYN-SYN.  A  !  . / /  =  +  0  .  =  `   . ! U /" o # b $ d % { & y ( ? ) < + y 0 ! 1 W 2 g 3 e !e !}twoK0x!pm!pe!pk!pi!pg R     o@ ` $ [  ! Bx	`/ 4@ P ^ B8     ny  p0[0(p~/00_////0 ekig0//mg/"p0gx#%p  &0(p0!@ @k  0@0C 0a 0q@  t@ w@ K0}twoK0x!pk!p R     n@ ` $@[ p0[0(p00////0k0//gp0p% COMPILE-FLC//FLC//                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        "
   Arg 4 (LIMIT): 3

(:METHOD CHAOS:CHARACTER-OUTPUT-STREAM-MIXIN :SEND-OUTPUT-BUFFER):  (P.C. = 10)
   Arg 0 (SELF): #<CHARACTER-STREAM 17400313>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor CHAOS:CHARACTER-OUTPUT-STREAM-MIXIN -- 2. IV's, 0. FL's 25265065>
   Arg 2 (OPERATION): :SEND-OUTPUT-BUFFER
   Rest arg (.ARGS.): NIL

(:METHOD SI:BASIC-BUFFERED-OUTPUT-STREAM :SEND-CURRENT-OUTPUT-BUFFER):  (P.C. = 12)
   Arg 0 (SELF): #<CHARACTER-STREAM 17400313>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:BASIC-BUFFERED-OUTPUT-STREAM -- 3. IV's, 0. FL's 25264706>
   Arg 2 (OPERATION): :SEND-CURRENT-OUTPUT-BUFFER

(:METHOD SI:BASIC-BUFFERED-OUTPUT-STREAM :FORCE-OUTPUT):  (P.C. = 4)
   Arg 0 (SELF): #<CHARACTER-STREAM 17400313>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:BASIC-BUFFERED-OUTPUT-STREAM -- 3. IV's, 0. FL's 25264706>
   Arg 2 (OPERATION): :FORCE-OUTPUT

(:METHOD TELNET:FILTER-STREAM :FORCE-OUTPUT):  (P.C. = 4)
   Arg 0 (SELF): #<ECHO-TYPEIN-FILTER 17400367>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TELNET:FILTER-STREAM -- 3. IV's, 0. FL's 25150675>
   Arg 2 (OPERATION): :FORCE-OUTPUT

(:METHOD TELNET:FILTER-STREAM :FORCE-OUTPUT):  (P.C. = 4)
   Arg 0 (SELF): #<NVT-ASCII-TYPEIN-FILTER 17400363>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TELNET:FILTER-STREAM -- 3. IV's, 0. FL's 15622004>
   Arg 2 (OPERATION): :FORCE-OUTPUT

(:METHOD TELNET:FILTER-STREAM :FORCE-OUTPUT):  (P.C. = 4)
   Arg 0 (SELF): #<TELNET-FILTER 17400357>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TELNET:FILTER-STREAM -- 3. IV's, 0. FL's 15621466>
   Arg 2 (OPERATION): :FORCE-OUTPUT

(:METHOD TELNET:FILTER-STREAM :FORCE-OUTPUT):  (P.C. = 4)
   Arg 0 (SELF): #<MORE-ESCAPE-FILTER 17400352>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TELNET:FILTER-STREAM -- 3. IV's, 0. FL's 15620625>
   Arg 2 (OPERATION): :FORCE-OUTPUT

Rest of stack:
(:METHOD TELNET:NVT-WINDOW :TYPEIN-TOP-LEVEL):  (P.C. = 152)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
17-Nov-83 14:41:52-EST,895;000000000000
Received: from SCRC-EUPHRATES by SCRC-QUABBIN with CHAOS; Thu 17-Nov-83 14:32:38-EST
Date: Thu, 17 Nov 83 14:27 EST
From: "David A. Moon" <Moon%SCRC-TENEX@MIT-MC.ARPA>
Subject: No init file: ... MC: KMP; LISPM >, MC: KMP; LISPM >
To: "Kent M. Pitman" <KMP@MIT-MC.ARPA>
Cc: BUG-LISPM@MIT-MC.ARPA
In-reply-to: The message of 17 Nov 83 00:47-EST from Kent M. Pitman <KMP at MIT-MC>

    Date: Thursday, 17 November 1983, 00:47-EST
    From: Kent M. Pitman <KMP at MC>
    In Release 5.0 [GC'd Beta Test rev 2], Vanilla, on PA Lisp Machine Avatar (CADR):

      (LOGIN "KMP")
      No init file: Unable to find any of the files MC: KMP; LISPM >, MC: KMP; LISPM >

    Why does it try twice (or say it tried twice) to find the same file?

Because Symbolics doesn't have any ITS'es and because patch 243.271 isn't in the
beta test version of release 5.0, having been made too late.
17-Nov-83 15:23:04-EST,1497;000000000000
Received: from SCRC-EUPHRATES by SCRC-TENEX with CHAOS; Thu 17-Nov-83 15:21:45-EST
Date: Thu, 17 Nov 83 15:19 EST
From: "David A. Moon" <Moon%SCRC-TENEX@MIT-MC.ARPA>
Subject: Notes on m-X Grind Definition, m-X Grind S Expression
To: "Kent M. Pitman" <KMP@MIT-MC.ARPA>
Cc: BUG-LISPM@MIT-OZ.ARPA, Doc-Changes%SCRC-TENEX@MIT-MC.ARPA,
    Software-Maintenance%SCRC-TENEX@MIT-MC.ARPA
In-reply-to: The message of 17 Nov 83 01:27-EST from Kent M. Pitman <KMP at MIT-MC>

    Date: Thursday, 17 November 1983, 01:27-EST
    From: Kent M. Pitman <KMP at MC>
    In Release 5.0 [GC'd Beta Test rev 2], Vanilla, on PA Lisp Machine Avatar (CADR):

    In the editor, m-X Grind Definition no longer grinds variables. 
    It used to. Is this a feature? 

Looks to me like an error introduced into ZWEI:COM-GRIND-DEFINITION while standardizing
its argument reading.  I fixed this in the source.  But now if you type a name
that is neither a function nor a variable, the command just does nothing, for
the same reason that (GRINDEF FOO) just does nothing.  Perhaps we ought to find
a way to make it beep?

    This caused me to learn about m-X Grind S Expression. I find the S
    to be very ugly. Why is it there? Wouldn't m-X Grind Expression
    be a better name?

You are absolutely right.  It's the only m-X command with "S expression"
in its name.  In the source (only), I changed the name of the command
to Grind Expression.

If anyone feels these should be patched, do so.
17-Nov-83 18:00:33-EST,601;000000000000
Received: from MIT-LISPM-25 by MIT-OZ via Chaosnet; 17 Nov 83 17:59-EST
Date: Thursday, 17 November 1983, 18:06-EST
From: John Canny <JfC at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In System 97.23, CADR 1.0, ZMail 51.9, MIT-Specific 21.0, microcode 257,
ZM MIT, on Lisp Machine Twenty-five:

The function %div returns "integer" rationals when computing
quotients of some bignums.

e.g.

(setq b -1436196826776883757056.)
-1436196826776883757056.

(%div (* b 3) b)
3\1

The rational 3\1 is not incorrect, but %div is supposed 
to return an integer if the quotient is integral.

 - John
17-Nov-83 22:02:56-EST,4182;000000000000
Received: from MIT-MOON by MIT-OZ via Chaosnet; 17 Nov 83 22:02-EST
Date: Thursday, 17 November 1983, 22:05-EST
From: Carl Richard Feynman <CARLF at MIT-OZ>
Subject: mailer broken (as usual)
To: BUG-LISPM at MIT-OZ

In Release 5.0 [GC'd Beta Test rev 3], dusty plum, on Lisp Machine Keith Moon (3600):

This occured when trying to get new mail in ZMAIL.  My mail file is in
no way unusual.  So why doesn't it work?
	
				--carlf

>>Error: Device occurs twice in OZ:PS:<CARLF>MAIL.TXT.1
While in the function (:METHOD FS:TENEX-FAMILY-PATHNAME-MIXIN :PARSE-NAMESTRING)  FS:PARSE-PATHNAME  (:METHOD FS:PATHNAME :PARSE-TRUENAME)

(:METHOD FS:TENEX-FAMILY-PATHNAME-MIXIN :PARSE-NAMESTRING):  (P.C. = 211)
   Arg 0 (SELF): #<TOPS20-PATHNAME "OZ:">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:TENEX-FAMILY-PATHNAME-MIXIN -- 6. IV's, 1. FL's 25263674>
   Arg 2 (OPERATION): :PARSE-NAMESTRING
   Arg 3 (HOST-SPECIFIED): NIL
   Arg 4 (NAMESTRING): "OZ:PS:<CARLF>MAIL.TXT.1"
   Arg 5 (START): 0.
   Arg 6 (END): 23.
   Local 7 (QUOTE-CHAR): 22.
   Local 8 (DIR-DELIM-ALIST): ((60. . 62.))
   Local 9 (SUBDIR-DELIM): 46.
   Local 10 (ALL-DELIMS): (46. 60. 58. 46. 59. 32.)
   Local 11 (IDX): 6.
   Local 12 (TEM): "PS"
   Local 13 (TEM1): NIL
   Local 14 (DELIM): 58.
   Local 15 (DIR-DELIM): NIL
   Local 16 (DEV): "OZ"
   Local 17 (DIR): NIL
   Local 18 (NAM): NIL
   Local 19 (TYP): NIL
   Local 20 (VERS): NIL
   Local 21 (TYPE-BEGUN): NIL
   Local 22 (NAME-SUPPLIED-P): NIL
   Local 23 (TYPE-SUPPLIED-P): NIL

FS:PARSE-PATHNAME:  (P.C. = 300)
   Arg 0 (THING): "OZ:PS:<CARLF>MAIL.TXT.1"
   Arg 1 (WITH-RESPECT-TO): #<TOPS20-HOST OZ 12536514>
   --Defaulted args:--
   Arg 2 (DEFAULTS): ((#<TOPS20-HOST OZ 12536514> . #<TOPS20-PATHNAME "OZ:PS:<CARLF>FOO.LISP">) (#<LISPM-HOST ELVIS 12545172> . #<LMFS-PATHNAME "ELVIS:>Lisp Machine>foo.lisp">) (NIL . #<TOPS20-PATHNAME "OZ:PS:<CARLF>FOO.LISP">))

(:METHOD FS:PATHNAME :PARSE-TRUENAME):  (P.C. = 4)
   Arg 0 (SELF): #<TOPS20-PATHNAME "OZ:">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:PATHNAME -- 0. IV's, 1. FL's 27616147>
   Arg 2 (OPERATION): :PARSE-TRUENAME
   Arg 3 (STRING): "OZ:PS:<CARLF>MAIL.TXT.1"

(:METHOD FS:PATHNAME :HEURISTIC-PARSE-MAYBE-HOSTED-PATHNAME):  (P.C. = 5)
   Arg 0 (SELF): #<TOPS20-PATHNAME "OZ:">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:PATHNAME -- 0. IV's, 1. FL's 27616147>
   Arg 2 (OPERATION): :HEURISTIC-PARSE-MAYBE-HOSTED-PATHNAME
   Arg 3 (STRING): "OZ:PS:<CARLF>MAIL.TXT.1"

FS:HEURISTIC-PARSE-MAYBE-HOSTED-PATHNAME:  (P.C. = 12)
   Arg 0 (STRING): "OZ:PS:<CARLF>MAIL.TXT.1"
   Arg 1 (DEFAULTS): ((#<TOPS20-HOST OZ 12536514> . #<TOPS20-PATHNAME "OZ:PS:<CARLF>CARLF.BABYL">) (NIL . #<TOPS20-PATHNAME "OZ:PS:<CARLF>CARLF.BABYL">))

ZWEI:PATHNAME-LIST-OPTION-PARSER:  (P.C. = 27)
   Arg 0 (TYPE): :MAIL
   Arg 1 (STRING): "Mail: OZ:PS:<CARLF>MAIL.TXT.1"
   Arg 2 (START): 6.

ZWEI:OPTION-FROM-STRING:  (P.C. = 42)
   Arg 0 (STRING): "Mail: OZ:PS:<CARLF>MAIL.TXT.1"

ZWEI:PARSE-BABYL-OPTIONS:  (P.C. = 33)
   Arg 0 (STREAM): #<FILE-INPUT-CHARACTER-STREAM "OZ:PS:<CARLF>CARLF.BABYL" 3015647>
   Arg 1 (INTERVAL): #<NODE 3016017>

Rest of stack:
(:METHOD ZWEI:BABYL-BUFFER :AFTER :INIT):  (P.C. = 15)
(:METHOD ZWEI:BABYL-BUFFER :COMBINED :INIT):  (P.C. = 31)
INSTANTIATE-FLAVOR:  (P.C. = 372)
MAKE-INSTANCE:  (P.C. = 6)
ZWEI:MAKE-SEQUENCE:  (P.C. = 6)
ZWEI:GET-ZMAIL-FILE:  (P.C. = 233)
ZWEI:STARTUP-MAIL-FILE:  (P.C. = 73)
ZWEI:COM-GET-INBOX-INTERNAL:  (P.C. = 36)
ZWEI:COM-GET-NEW-MAIL-FROM-INBOX:  (P.C. = 7)
ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
ZWEI:ZMAIL-COMMAND-EXECUTE:  (P.C. = 6)
(:METHOD ZWEI:ZMAIL-FRAME :PROCESS-COMMAND-CHAR):  (P.C. = 7)
(:INTERNAL (:METHOD ZWEI:ZMAIL-FRAME :COMBINED :PROCESS-COMMAND-CHAR) 0.):  (P.C. = 7)
(:METHOD ZWEI:ZMAIL-COMMAND-LOOP-MIXIN :WHOPPER :PROCESS-COMMAND-CHAR):  (P.C. = 21)
(:METHOD ZWEI:ZMAIL-FRAME :COMBINED :PROCESS-COMMAND-CHAR):  (P.C. = 12)
(:METHOD ZWEI:ZMAIL-FRAME :COMMAND-LOOP):  (P.C. = 135)
(:METHOD ZWEI:ZMAIL-FRAME :COMBINED :COMMAND-LOOP):  (P.C. = 43)
ZWEI:ZMAIL-PROCESS-TOP-LEVEL:  (P.C. = 52)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
18-Nov-83 01:42:45-EST,1908;000000000000
Received: from SCRC-TENEX by MIT-OZ via Chaosnet; 18 Nov 83 01:42-EST
Received: from SCRC-EUPHRATES by SCRC-TENEX with CHAOS; Fri 18-Nov-83 01:45:04-EST
Date: Fri, 18 Nov 83 01:33 EST
From: "David A. Moon" <Moon%SCRC-TENEX@MIT-MC.ARPA>
Subject: mailer not broken (as usual); Release 5 incompatible (as usual)
To: Carl Richard Feynman <CARLF@MIT-OZ.ARPA>
Cc: BUG-LISPM@MIT-OZ.ARPA
In-reply-to: The message of 17 Nov 83 22:05-EST from Carl Richard Feynman <CARLF at MIT-OZ>

    Date: Thursday, 17 November 1983, 22:05-EST
    From: Carl Richard Feynman <CARLF at MIT-OZ>
    In Release 5.0 [GC'd Beta Test rev 3], dusty plum, on Lisp Machine Keith Moon (3600):

    This occured when trying to get new mail in ZMAIL.  My mail file is in
    no way unusual.
False, see below.

    >>Error: Device occurs twice in OZ:PS:<CARLF>MAIL.TXT.1
    (:METHOD FS:PATHNAME :HEURISTIC-PARSE-MAYBE-HOSTED-PATHNAME):  (P.C. = 5)
       Arg 3 (STRING): "OZ:PS:<CARLF>MAIL.TXT.1"

    ZWEI:OPTION-FROM-STRING:  (P.C. = 42)
       Arg 0 (STRING): "Mail: OZ:PS:<CARLF>MAIL.TXT.1"

    ZWEI:PARSE-BABYL-OPTIONS:  (P.C. = 33)
       Arg 0 (STREAM): #<FILE-INPUT-CHARACTER-STREAM "OZ:PS:<CARLF>CARLF.BABYL" 3015647>

The Lisp machine thinks, perhaps correctly, that only the ITS version of Babyl
allows host names in the mailbox file name at the front of a Babyl file.  If you
run Babyl on OZ, does it blow out?

Anyway, you can fix this by removing the "OZ:" there.  I don't know why the Lisp
machine doesn't do this for you automatically when it determines that the pathname
is patently illegal as a Tops-20 pathname.

In Release 4 this Babyl file worked because it was less strict about where a host
name could appear in a pathname.  The price it paid for that freedom was occasional
confusion between host names and device names; it was decided to get rid of that
confusion in Release 5.
18-Nov-83 01:45:34-EST,3662;000000000000
Received: from MIT-APIARY-3 by MIT-OZ via Chaosnet; 18 Nov 83 01:45-EST
Date: Friday, 18 November 1983, 01:48-EST
From: Steve Kossar <apiary.kossar at MIT-OZ>
Subject: More pathname lossage
To: BUG-LISPM at MIT-OZ

In Release 5.0 [GC'd Beta Test rev 3], dusty plum, on Lisp Machine Apiary-3 (3600):

It loses here too!!!

>>Error: Directory names may not have versions or types: >APIARY.KOSSAR>
While in the function (:METHOD FS:LMFS-PATHNAME-MIXIN :PARSE-NAMESTRING)  FS:PARSE-PATHNAME  (:METHOD FS:LMFS-QFILE-ACCESS-PATH :HSNAME-INFORMATION)

(:METHOD FS:LMFS-PATHNAME-MIXIN :PARSE-NAMESTRING):  (P.C. = 107)
   Arg 0 (SELF): #<LMFS-PATHNAME "AP6:">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:LMFS-PATHNAME-MIXIN -- 5. IV's, 0. FL's 15141753>
   Arg 2 (OPERATION): :PARSE-NAMESTRING
   Arg 3 (IGNORE): NIL
   Arg 4 (NAMESTRING): ">APIARY.KOSSAR>"
   Arg 5 (START): 0
   Arg 6 (END): 17
   Local 7 (VDINDEX): 7
   Local 8 (TDINDEX): 7
   Local 9 (PDINDEX): 16
   Local 10 (APDINDEX): 16

FS:PARSE-PATHNAME:  (P.C. = 300)
   Arg 0 (THING): ">APIARY.KOSSAR>"
   Arg 1 (WITH-RESPECT-TO): #<LISPM-HOST APIARY-6 12553676>
   --Defaulted args:--
   Arg 2 (DEFAULTS): ((#<TOPS20-HOST OZ 12536514> . #<TOPS20-PATHNAME "OZ:PS:<APIARY.KOSSAR>FOO.LISP">) (#<LISPM-HOST ELVIS 12545172> . #<LMFS-PATHNAME "ELVIS:>Lisp Machine>foo.lisp">) (NIL . #<TOPS20-PATHNAME "OZ:PS:<APIARY.KOSSAR>FOO.LISP">))

(:METHOD FS:LMFS-QFILE-ACCESS-PATH :HSNAME-INFORMATION):  (P.C. = 43)
   Arg 0 (SELF): #<LMFS-QFILE-ACCESS-PATH AP6 using QFILE 422477>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:LMFS-QFILE-ACCESS-PATH -- 1. IV's, 0. FL's 15142127>
   Arg 2 (OPERATION): :HSNAME-INFORMATION
   Arg 3 (IGNORE): #<HOST-UNIT 14326345>
   Arg 4 (STR): " LOGIN apiary.kossar 
>APIARY.KOSSAR>
"
   Arg 5 (IDX): 24

FS:LOGIN-HOST-UNIT:  (P.C. = 243)
   Arg 0 (UNIT): #<HOST-UNIT 14326345>
   Arg 1 (LOGIN-P): T
   Arg 2 (CONDITION): NIL

(:METHOD FS:QFILE-ACCESS-PATH :LOGIN-UNIT):  (P.C. = 10)
   Arg 0 (SELF): #<LMFS-QFILE-ACCESS-PATH AP6 using QFILE 422477>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:QFILE-ACCESS-PATH -- 3. IV's, 0. FL's 15142151>
   Arg 2 (OPERATION): :LOGIN-UNIT
   Arg 3 (UNIT): #<HOST-UNIT 14326345>
   Arg 4 (LOGIN-P): T
   --Defaulted args:--
   Arg 5 (CONDITION): NIL

(:METHOD FS:NORMAL-QFILE-ACCESS-PATH :COMBINED :LOGIN-UNIT):  (P.C. = 10)
   Arg 0 (SELF): #<LMFS-QFILE-ACCESS-PATH AP6 using QFILE 422477>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:NORMAL-QFILE-ACCESS-PATH -- 1. IV's, 3. FL's 15142141>
   Rest arg (.DAEMON-CALLER-ARGS.): (:LOGIN-UNIT #<HOST-UNIT 14326345> T)

(:METHOD FS:HOST-UNIT :VALIDATE-CONTROL-CONNECTION):  (P.C. = 121)
   Arg 0 (SELF): #<HOST-UNIT 14326345>
   Arg 1 (SELF-MAPPING-TABLE): FS:HOST-UNIT
   Arg 2 (OPERATION): :VALIDATE-CONTROL-CONNECTION
   --Defaulted args:--
   Arg 3 (NO-ERROR-P): NIL

(:METHOD FS:QFILE-ACCESS-PATH :NEW-HOST-UNIT):  (P.C. = 14)
   Arg 0 (SELF): #<LMFS-QFILE-ACCESS-PATH AP6 using QFILE 422477>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:QFILE-ACCESS-PATH -- 3. IV's, 0. FL's 15142151>
   Arg 2 (OPERATION): :NEW-HOST-UNIT

Rest of stack:
(:METHOD FS:QFILE-ACCESS-PATH :GET-DATA-CONNECTION):  (P.C. = 35)
FS:OPEN-CHAOS:  (P.C. = 435)
(:METHOD FS:QFILE-ACCESS-PATH :OPEN):  (P.C. = 7)
(:METHOD FS:ACTIVE-PATHNAME-MIXIN :OPEN):  (P.C. = 14)
FS:COMMON-LISP-OPEN:  (P.C. = 445)
OPEN:  (P.C. = 255)
LOAD:  (P.C. = 210)
SI:*EVAL:  (P.C. = 370)
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 200)
SI:LISP-COMMAND-LOOP:  (P.C. = 115)
SI:LISP-TOP-LEVEL1:  (P.C. = 22)
SI:LISP-TOP-LEVEL:  (P.C. = 7)
18-Nov-83 03:20:01-EST,1080;000000000000
Received: from MIT-APIARY-5 by MIT-OZ via Chaosnet; 18 Nov 83 03:19-EST
Date: Friday, 18 November 1983, 03:21-EST
From: Tim McNerney <TIM at MIT-OZ>
Subject: Incremental Search (c-S) lossage in two window mode
To: Feinberg at SCRC-YUKON
Cc: BUG-LISPM at MIT-OZ
In-reply-to: The message of 17 Nov 83 23:06-EST from Neal Feinberg <Feinberg at SCRC-YUKON>

Hmm, I can't reproduce it either.  Not sure what happened.  However, while trying to
reproduce this, I noticed something funny:

With ZWEI:*MOUSE-CLICK-ALWAYS-SELECTS* set to T (I set in in my init file), get into two
window mode (presumably with c-X 2) and try this:

  c-S foo					; [no ]
  Mouse-L-1 (on the window that was selected)	; This works correctly.  
						; The cursor moves to where you clicked.
Now try:

  c-S foo					; [no ]
  Mouse-L-1 (on the other window)		; Notice that the cursor moves, 
						; but the original window stays selected!

This is seems to be inconsistent and counterintuitive.  Possibly this is the phenomenon
that I noticed, and I simply mis-diagnosed the bug.
18-Nov-83 03:29:10-EST,1534;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 18 Nov 83 03:28-EST
Date: 18 November 1983 03:29 EST
From: Christopher C. Stacy <CSTACY @ MIT-MC>
To: INFO-HOSTS @ MIT-MC
cc: BUG-LISPM @ MIT-MC


HSTMIT 132 and HOSTS 678 on MC add MIT-FRANK-SINATRA, a 3600 on the 8th floor playroom
at Chaosnet address 13057.  I also created a namespace server object for the host.

While recompiling the site files on OZ, I manually edited HSTTBL.LISP to position
the MIT-DM nicknames for MC in the middle of MC's host name list, because I was
tired of seeing "DM:" instead of "MC:" in Release 4 software.

I removed the Symbolics Internet hosts from the HOSTS MASTER file on MC, since
it would not compile with that input; there is something screwed up about the
entries in the file. I suspect that unknown machine types were used in the entries.

I flusged MIT-AI-RESERVED from the HOSTS file.  Now, mind you that entry has been
there for a year and not caused any trouble, so whoever's parser cannot handle
it is broken.  However, this host is defined in the HSTNIC file, and needn't
be defined ho HSTMIT or HOSTS or anything anyway.

Until I get a demon to hack the NIC host table server, please keep the version
numbers on HSTNIC the same as the version which was FTPd from the NIC, even
if you make local modifications to it. (Be sure to install it properly though.
I know this is sort of a screw, but it will get fixed eventually.)

Compiled and installed new host table on MC and ML, and new 3600 site files on OZ.
18-Nov-83 06:17:37-EST,423;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 18 Nov 83 06:17-EST
Date: Friday, 18 November 1983, 06:20-EST
From: Christopher C. Stacy <CStacy at MIT-MC>
To: BUG-LISPM at OZ

In Release 4.5, site configuration 71, on Lisp Machine Frank Sinatra:

I wonder how come my LispM thought it has been idle for over
nine thousand, nine hundred and ninty some hours and 57 minutes,
instead of just one hour and 57 minutes?
18-Nov-83 10:38:24-EST,2822;000000000000
Received: from MIT-APIARY-4 by MIT-OZ via Chaosnet; 18 Nov 83 10:38-EST
Date: Friday, 18 November 1983, 10:39-EST
From: JCMA@MIT-OZ
Subject: Problems figuring out adverb also
To: BUG-LISPM@MIT-OZ

In Release 5.0 [GC'd Beta Test rev 3], Experimental RELATUS 33.0,
dusty plum, on Lisp Machine Apiary-4 (3600):

see next message

>>Error: Can't decide what the adverb ALSO modifies.
While in the function (:METHOD TRANSFORM-KERN-SENTENCE-MIXIN :MAKE-ADVERBIAL)  (:METHOD TRANSFORM-KERN-SENTENCE-MIXIN :DEPLOY-TEMPLATES)  PROCESS

(:METHOD TRANSFORM-KERN-SENTENCE-MIXIN :MAKE-ADVERBIAL):  (P.C. = 310)  (from RL: LEXIS; KERNS)
   Arg 0 (SELF): #<SENTENCE 42445016>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TRANSFORM-KERN-SENTENCE-MIXIN -- 3. IV's, 0. FL's 17616251>
   Arg 2 (OPERATION): :MAKE-ADVERBIAL
   Arg 3 (TEMPLATE-LIST): (#<NOMINAL 42445157> #<ADVERBIAL 42445167>)
   Arg 4 (WORDS): (ALSO TO ARREST THE ASSOCIATES *OF* IMRE-NAGY #<KERN 42445127>)
   Arg 5 (PARTS): (AV IF VB DA N PP PROP-N AV)
   Local 6 (TEMPLATE): #<ADVERBIAL 42445175>
   Local 7 (PREVIOUS-TEMPLATE): #<ADVERBIAL 42445167>

(:METHOD TRANSFORM-KERN-SENTENCE-MIXIN :DEPLOY-TEMPLATES):  (P.C. = 75)  (from RL: LEXIS; KERNS)
   Arg 0 (SELF): #<SENTENCE 42445016>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TRANSFORM-KERN-SENTENCE-MIXIN -- 3. IV's, 0. FL's 17616251>
   Arg 2 (OPERATION): :DEPLOY-TEMPLATES

PROCESS:  (P.C. = 160)  (from RL: LEXIS; LEXIS)
   Arg 0 (SENTENCE): (*DECLARATIVE* MATYAS-RAKOSI ALSO ATTEMPTED TO ARREST (IMRE-NAGY POSS) ASSOCIATES BECAUSE THE ...)
   Arg 1 (SOURCE): ARPA
   Arg 2 (REPARSE): NIL
   Arg 3 (STRING-FOR-PARSING): "MATYAS-RAKOSI ALSO ATTEMPTED TO ARREST IMRE-NAGY'S ASSOCIATES BECAUSE THE POZAN-RIOTS AND THE HUNGARIAN UNREST CAUSED MATYAS-RAKOSI TO FEAR THAT MATYAS-RAKOSI WOULD FALL FROM POWER."

(:METHOD BELIEF-SYSTEM :PARSE):  (P.C. = 103)  (from RL: GNOSCERE; IO-BELIEF-SYSTEM)
   Arg 0 (SELF): #<BELIEF-SYSTEM 23740000>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor BELIEF-SYSTEM -- 20. IV's, 1. FL's 17603133>
   Arg 2 (OPERATION): :PARSE
   Arg 3 (SENTENCE): ((*DECLARATIVE* MATYAS-RAKOSI ALSO ATTEMPTED TO ARREST (IMRE-NAGY POSS) ASSOCIATES BECAUSE THE ...))

ZWEI:READ-AND-PARSE-SENTENCES-IN-REGION:  (P.C. = 45)  (from RL: UTILS; RELATUS-ZWEI)

ZWEI:COM-PARSE-REGION:  (P.C. = 175)  (from RL: UTILS; RELATUS-ZWEI)

ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
   Arg 0 (COMMAND): ZWEI:COM-PARSE-REGION
   Arg 1 (CHAR): 6120
   Arg 2 (PREFIX-CHAR): NIL
   Arg 3 (HOOK-LIST): NIL

ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
   Arg 0 (CH): 6120

Rest of stack:
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 200)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 41)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
18-Nov-83 10:44:42-EST,2918;000000000000
Received: from MIT-APIARY-4 by MIT-OZ via Chaosnet; 18 Nov 83 10:44-EST
Date: Friday, 18 November 1983, 10:46-EST
From: JCMA@MIT-OZ
Subject: >>Error: #<SENTENCE 42455421> seems to have more than one subject.
To: BUG-LISPM@MIT-OZ

In Release 5.0 [GC'd Beta Test rev 3], Experimental RELATUS 33.0,
dusty plum, on Lisp Machine Apiary-4 (3600):

see next message

>>Error: #<SENTENCE 42455421> seems to have more than one subject.
While in the function (:METHOD TRANSFORM-KERN-SENTENCE-MIXIN :POSIT-PARSE-INTERNAL)  (:METHOD TRANSFORM-KERN-SENTENCE-MIXIN :POSIT-PARSE)  (:METHOD SENTENCE :POSIT)

(:METHOD TRANSFORM-KERN-SENTENCE-MIXIN :POSIT-PARSE-INTERNAL):  (P.C. = 105)  (from RL: LEXIS; ASSERT-PARSE)
   Arg 0 (SELF): #<SENTENCE 42455421>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TRANSFORM-KERN-SENTENCE-MIXIN -- 3. IV's, 0. FL's 17616251>
   Arg 2 (OPERATION): :POSIT-PARSE-INTERNAL
   Arg 3 (BSYS): #<BELIEF-SYSTEM 23740000>
   Local 4 (CONJ): NIL
   Local 5 (SUBJ): #<NOMINAL 42455447>
   Local 6 (VERB): NIL
   Local 7 (ADVERBS): (#<ADVERBIAL 42455475> #<ADVERBIAL 42455467>)
   Local 8 (OBJ): NIL
   Local 9 (LAST-NOMINAL): #<NOMINAL 42455447>
   Local 10 (VERB-MODS): NIL
   Local 11 (SUBJ-MODS): NIL
   Local 12 (OBJ-MODS): NIL
   Local 13 (ITEM): #<NOMINAL 42455501>
   Local 14: NIL

(:METHOD TRANSFORM-KERN-SENTENCE-MIXIN :POSIT-PARSE):  (P.C. = 31)  (from RL: LEXIS; ASSERT-PARSE)
   Arg 0 (SELF): #<SENTENCE 42455421>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TRANSFORM-KERN-SENTENCE-MIXIN -- 3. IV's, 0. FL's 17616251>
   Arg 2 (OPERATION): :POSIT-PARSE
   Arg 3 (BSYS): #<BELIEF-SYSTEM 23740000>

(:METHOD SENTENCE :POSIT):  (P.C. = 53)  (from OZ:SRC:<RELATUS.LEXIS>ASSERT-PARSE)
   Arg 0 (SELF): #<SENTENCE 42455421>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SENTENCE -- 12. IV's, 0. FL's 17616232>
   Arg 2 (OPERATION): :POSIT
   Arg 3 (BNAME): #<BELIEF-SYSTEM 23740000>

(:METHOD BELIEF-SYSTEM :PARSE):  (P.C. = 116)  (from RL: GNOSCERE; IO-BELIEF-SYSTEM)
   Arg 0 (SELF): #<BELIEF-SYSTEM 23740000>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor BELIEF-SYSTEM -- 20. IV's, 1. FL's 17603133>
   Arg 2 (OPERATION): :PARSE
   Arg 3 (SENTENCE): ((*DECLARATIVE* (HUNGARY POSS) CENTRAL-COMMITTEE STRONGLY RESISTED (MATYAS-RAKOSI POSS) DRASTIC PLANS))

ZWEI:READ-AND-PARSE-SENTENCES-IN-REGION:  (P.C. = 45)  (from RL: UTILS; RELATUS-ZWEI)

ZWEI:COM-PARSE-REGION:  (P.C. = 175)  (from RL: UTILS; RELATUS-ZWEI)

ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
   Arg 0 (COMMAND): ZWEI:COM-PARSE-REGION
   Arg 1 (CHAR): 6120
   Arg 2 (PREFIX-CHAR): NIL
   Arg 3 (HOOK-LIST): NIL

ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
   Arg 0 (CH): 6120

Rest of stack:
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 200)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 41)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
18-Nov-83 10:46:39-EST,4448;000000000000
Received: from MIT-APIARY-4 by MIT-OZ via Chaosnet; 18 Nov 83 10:46-EST
Date: Friday, 18 November 1983, 10:47-EST
From: JCMA@MIT-OZ
Subject: >>Error: #<KERN 42465756> seems to have more than one subject.
To: BUG-LISPM@MIT-OZ

In Release 5.0 [GC'd Beta Test rev 3], Experimental RELATUS 33.0,
dusty plum, on Lisp Machine Apiary-4 (3600):



>>Error: #<KERN 42465756> seems to have more than one subject.
While in the function (:METHOD TRANSFORM-KERN-SENTENCE-MIXIN :POSIT-PARSE-INTERNAL)  (:METHOD TRANSFORM-KERN-SENTENCE-MIXIN :POSIT-PARSE)  (:METHOD ADVERBIAL :POSIT-PARSE)

(:METHOD TRANSFORM-KERN-SENTENCE-MIXIN :POSIT-PARSE-INTERNAL):  (P.C. = 105)  (from RL: LEXIS; ASSERT-PARSE)
   Arg 0 (SELF): #<KERN 42465756>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TRANSFORM-KERN-SENTENCE-MIXIN -- 3. IV's, 0. FL's 17611564>
   Arg 2 (OPERATION): :POSIT-PARSE-INTERNAL
   Arg 3 (BSYS): #<BELIEF-SYSTEM 23740000>
   Local 4 (CONJ): NIL
   Local 5 (SUBJ): #<NOMINAL 42466104>
   Local 6 (VERB): NIL
   Local 7 (ADVERBS): (#<ADVERBIAL 42466132> #<ADVERBIAL 42466124>)
   Local 8 (OBJ): NIL
   Local 9 (LAST-NOMINAL): #<NOMINAL 42466104>
   Local 10 (VERB-MODS): NIL
   Local 11 (SUBJ-MODS): NIL
   Local 12 (OBJ-MODS): NIL
   Local 13 (ITEM): #<NOMINAL 42466136>
   Local 14: NIL

(:METHOD TRANSFORM-KERN-SENTENCE-MIXIN :POSIT-PARSE):  (P.C. = 31)  (from RL: LEXIS; ASSERT-PARSE)
   Arg 0 (SELF): #<KERN 42465756>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TRANSFORM-KERN-SENTENCE-MIXIN -- 3. IV's, 0. FL's 17611564>
   Arg 2 (OPERATION): :POSIT-PARSE
   Arg 3 (BSYS): #<BELIEF-SYSTEM 23740000>

(:METHOD ADVERBIAL :POSIT-PARSE):  (P.C. = 55)  (from RL: LEXIS; ASSERT-PARSE)
   Arg 0 (SELF): #<ADVERBIAL 42466100>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ADVERBIAL -- 2. IV's, 0. FL's 17621353>
   Arg 2 (OPERATION): :POSIT-PARSE
   Arg 3 (BSYS): #<BELIEF-SYSTEM 23740000>
   Arg 4 (VERB-TOKEN): RESIGN-2

ASSERT-ALL-RELATIONS:  (P.C. = 747)  (from RL: LEXIS; ASSERT-PARSE)
   Arg 0 (BNAME): #<BELIEF-SYSTEM 23740000>
   Arg 1 (SUBJ): #<NOMINAL 42466055>
   Arg 2 (VERB): #<VERBAL 42466065>
   Arg 3 (OBJ): NIL
   Arg 4 (ADVERBS): (#<ADVERBIAL 42466100>)
   Arg 5 (SUBJ-MODS): NIL
   Arg 6 (VERB-MODS): NIL
   Arg 7 (OBJ-MODS): NIL
   Arg 8 (KERN): #<INFINITIVAL 42466035>

(:METHOD TRANSFORM-KERN-SENTENCE-MIXIN :POSIT-PARSE-INTERNAL):  (P.C. = 302)  (from RL: LEXIS; ASSERT-PARSE)
   Arg 0 (SELF): #<INFINITIVAL 42466035>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TRANSFORM-KERN-SENTENCE-MIXIN -- 3. IV's, 0. FL's 17613214>
   Arg 2 (OPERATION): :POSIT-PARSE-INTERNAL
   Arg 3 (BSYS): #<BELIEF-SYSTEM 23740000>

(:METHOD TRANSFORM-KERN-SENTENCE-MIXIN :POSIT-PARSE):  (P.C. = 31)  (from RL: LEXIS; ASSERT-PARSE)
   Arg 0 (SELF): #<INFINITIVAL 42466035>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TRANSFORM-KERN-SENTENCE-MIXIN -- 3. IV's, 0. FL's 17613214>
   Arg 2 (OPERATION): :POSIT-PARSE
   Arg 3 (BSYS): #<BELIEF-SYSTEM 23740000>

ASSERT-ALL-RELATIONS:  (P.C. = 255)  (from RL: LEXIS; ASSERT-PARSE)
   Arg 0 (BNAME): #<BELIEF-SYSTEM 23740000>
   Arg 1 (SUBJ): #<NOMINAL 42465772>
   Arg 2 (VERB): #<VERBAL 42466012>
   Arg 3 (OBJ): #<NOMINAL 42466045>
   Arg 4 (ADVERBS): NIL
   Arg 5 (SUBJ-MODS): NIL
   Arg 6 (VERB-MODS): NIL
   Arg 7 (OBJ-MODS): NIL
   Arg 8 (KERN): #<SENTENCE 42465730>

(:METHOD TRANSFORM-KERN-SENTENCE-MIXIN :POSIT-PARSE-INTERNAL):  (P.C. = 302)  (from RL: LEXIS; ASSERT-PARSE)
   Arg 0 (SELF): #<SENTENCE 42465730>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TRANSFORM-KERN-SENTENCE-MIXIN -- 3. IV's, 0. FL's 17616251>
   Arg 2 (OPERATION): :POSIT-PARSE-INTERNAL
   Arg 3 (BSYS): #<BELIEF-SYSTEM 23740000>

Rest of stack:
(:METHOD TRANSFORM-KERN-SENTENCE-MIXIN :POSIT-PARSE):  (P.C. = 31)  (from RL: LEXIS; ASSERT-PARSE)
(:METHOD SENTENCE :POSIT):  (P.C. = 53)  (from OZ:SRC:<RELATUS.LEXIS>ASSERT-PARSE)
(:METHOD BELIEF-SYSTEM :PARSE):  (P.C. = 116)  (from RL: GNOSCERE; IO-BELIEF-SYSTEM)
ZWEI:READ-AND-PARSE-SENTENCES-IN-REGION:  (P.C. = 45)  (from RL: UTILS; RELATUS-ZWEI)
ZWEI:COM-PARSE-REGION:  (P.C. = 175)  (from RL: UTILS; RELATUS-ZWEI)
ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 200)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 41)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
18-Nov-83 11:05:41-EST,280;000000000000
Received: from MIT-APIARY-4 by MIT-OZ via Chaosnet; 18 Nov 83 11:04-EST
Date: Friday, 18 November 1983, 11:06-EST
From: JCMA@MIT-OZ
Subject: Ignore my previous bug reports
To: bug-lispm@MIT-OZ

Those bugs aren't the lispM's.  They are ours.
Sorry about the inconvenience.
18-Nov-83 16:11:29-EST,504;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 18 Nov 83 16:08-EST
Date: Friday, 18 November 1983, 16:12-EST
From: KMP at MIT-MC
Sender: DICK at MIT-MC
Subject: c-0 c-X Alt
To: BUG-LISPM at OZ

In Release 4.5, Knowledge-Based-Editor 221.1, site configuration 65,
Black Magic, on PA Lisp Machine Avatar:

If you type c-0 c-X Altmode and some of the things it shows 
wrap around because they are too long, they are also not mouse
sensitive.

Also, it would be nice if they came out numbered.
19-Nov-83 01:40:05-EST,2864;000000000000
Received: from MIT-APIARY-5 by MIT-OZ via Chaosnet; 19 Nov 83 01:39-EST
Date: Saturday, 19 November 1983, 01:41-EST
From: Tim McNerney <TIM at MIT-OZ>
Subject: Zmail "phantom" bug?
To: BUG-LISPM at MIT-OZ

In Release 5.0 [GC'd Beta Test rev 3], dusty plum, on Lisp Machine Apiary-5 (3600):

From cold-booted machine:
  Logged in
  Typed (ZMAIL)
  Typed G
  Walked away
  Came back to find lossage

>>Error: #<TYPEIN-WINDOW Typein Window 8 2303045 exposed> is not a known window
While in the function ZWEI:COMMAND-WITH-UNIVERSE-OR-FILTER  (:INTERNAL ZWEI:ZMAIL-COMMAND-LIST 1)  ZWEI:ZMAIL-COMMAND-LIST

ZWEI:COMMAND-WITH-UNIVERSE-OR-FILTER:  (P.C. = 242)
   Local 0 (BUTTON-FRAME): #<BUTTONS-FRAME Buttons Frame 1 2315007 deactivated>
   Local 1 (UNIVERSE-BUTTON): #<MEDIUM-BUTTON-PANE Just current message 2315176 deexposed>
   Local 2 (FILTER-BUTTON): #<MEDIUM-BUTTON-PANE All 2315077 deexposed>
   Local 3 (UNIVERSE): #<SINGLE-MSG-UNIVERSE NIL 3735171>
   Local 4: SYS:UNWIND-PROTECT-TAG
   Local 5: #<DTP-ODD-PC 46221112>
   Local 6: #<DTP-LOCATIVE 11627022>
   Local 7: #<DTP-LOCATIVE 43300124>
   Local 8 (FILTER-FUNCTION): ZWEI:MSG-TRUE-FILTER
   Local 9 (FILTER-ARG): NIL
   Local 10 (CHAR): (:MOUSE-BUTTON 100002 #<TYPEIN-WINDOW Typein Window 8 2303045 exposed> 2065 37)
   Local 11 (WINDOW): #<TYPEIN-WINDOW Typein Window 8 2303045 exposed>

(:INTERNAL ZWEI:ZMAIL-COMMAND-LIST 1):  (P.C. = 7)
   Arg 0 (**DEFSELECT-OP**): :MOUSE-BUTTON
   Rest arg (IGNORE): (100002 #<TYPEIN-WINDOW Typein Window 8 2303045 exposed> 2065 37)

ZWEI:ZMAIL-COMMAND-LIST:  (P.C. = 22)
   Arg 0 (OPERATION): :MOUSE-BUTTON
   Rest arg (SELECT-METHOD-ARGS): (100002 #<TYPEIN-WINDOW Typein Window 8 2303045 exposed> 2065 37)

(:METHOD ZWEI:ZMAIL-FRAME :PROCESS-SPECIAL-COMMAND):  (P.C. = 5)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 2300161 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-FRAME -- 60. IV's, 20. FL's 16477605>
   Arg 2 (OPERATION): :PROCESS-SPECIAL-COMMAND
   Rest arg (ARGS): (:MOUSE-BUTTON 100002 #<TYPEIN-WINDOW Typein Window 8 2303045 exposed> 2065 37)

(:METHOD ZWEI:ZMAIL-FRAME :COMMAND-LOOP):  (P.C. = 130)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 2300161 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-FRAME -- 60. IV's, 20. FL's 16477605>
   Arg 2 (OPERATION): :COMMAND-LOOP

(:METHOD ZWEI:ZMAIL-FRAME :COMBINED :COMMAND-LOOP):  (P.C. = 43)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 2300161 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-FRAME -- 60. IV's, 20. FL's 16477605>
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

ZWEI:ZMAIL-PROCESS-TOP-LEVEL:  (P.C. = 52)
   Arg 0 (WINDOW): #<ZMAIL-FRAME Main Zmail Window 2300161 exposed>

SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
   --Defaulted args:--
   Arg 0 (IGNORE): NIL
19-Nov-83 01:41:20-EST,2892;000000000000
Received: from MIT-APIARY-5 by MIT-OZ via Chaosnet; 19 Nov 83 01:40-EST
Date: Saturday, 19 November 1983, 01:42-EST
From: Tim McNerney <TIM at MIT-OZ>
Subject: Aftermath of "phantom" Zmail bug
To: BUG-LISPM at MIT-OZ

In Release 5.0 [GC'd Beta Test rev 3], dusty plum, on Lisp Machine Apiary-5 (3600):

Tried to abort out of previous error with <Abort>.

>>Error: The object #<TYPEIN-WINDOW Typein Window 8 2303045 exposed> received a :SET-ACCENT message, which went unclaimed.
         The rest of the message was (NIL)
While in the function ZWEI:COMMAND-WITH-UNIVERSE-OR-FILTER  (:INTERNAL ZWEI:ZMAIL-COMMAND-LIST 1)  ZWEI:ZMAIL-COMMAND-LIST

ZWEI:COMMAND-WITH-UNIVERSE-OR-FILTER:  (P.C. = 273)
   Local 0 (BUTTON-FRAME): #<BUTTONS-FRAME Buttons Frame 1 2315007 deactivated>
   Local 1 (UNIVERSE-BUTTON): #<MEDIUM-BUTTON-PANE Just current message 2315176 deexposed>
   Local 2 (FILTER-BUTTON): #<MEDIUM-BUTTON-PANE All 2315077 deexposed>
   Local 3 (UNIVERSE): #<SINGLE-MSG-UNIVERSE NIL 3735171>
   Local 4: SYS:UNWIND-PROTECT-TAG
   Local 5: #<DTP-ODD-PC 46221112>
   Local 6: #<DTP-LOCATIVE 11627022>
   Local 7: #<DTP-LOCATIVE 43300124>
   Local 8 (FILTER-FUNCTION): ZWEI:MSG-TRUE-FILTER
   Local 9 (FILTER-ARG): NIL
   Local 10 (CHAR): (:MOUSE-BUTTON 100002 #<TYPEIN-WINDOW Typein Window 8 2303045 exposed> 2065 37)
   Local 11 (COMMAND): #<TYPEIN-WINDOW Typein Window 8 2303045 exposed>

(:INTERNAL ZWEI:ZMAIL-COMMAND-LIST 1):
   Arg 0 (**DEFSELECT-OP**): :MOUSE-BUTTON
   Rest arg (IGNORE): (100002 #<TYPEIN-WINDOW Typein Window 8 2303045 exposed> 2065 37)

ZWEI:ZMAIL-COMMAND-LIST:  (P.C. = 22)
   Arg 0 (OPERATION): :MOUSE-BUTTON
   Rest arg (SELECT-METHOD-ARGS): (100002 #<TYPEIN-WINDOW Typein Window 8 2303045 exposed> 2065 37)

(:METHOD ZWEI:ZMAIL-FRAME :PROCESS-SPECIAL-COMMAND):  (P.C. = 5)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 2300161 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-FRAME -- 60. IV's, 20. FL's 16477605>
   Arg 2 (OPERATION): :PROCESS-SPECIAL-COMMAND
   Rest arg (ARGS): (:MOUSE-BUTTON 100002 #<TYPEIN-WINDOW Typein Window 8 2303045 exposed> 2065 37)

(:METHOD ZWEI:ZMAIL-FRAME :COMMAND-LOOP):  (P.C. = 130)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 2300161 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-FRAME -- 60. IV's, 20. FL's 16477605>
   Arg 2 (OPERATION): :COMMAND-LOOP

(:METHOD ZWEI:ZMAIL-FRAME :COMBINED :COMMAND-LOOP):  (P.C. = 43)
   Arg 0 (SELF): #<ZMAIL-FRAME Main Zmail Window 2300161 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMAIL-FRAME -- 60. IV's, 20. FL's 16477605>
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

ZWEI:ZMAIL-PROCESS-TOP-LEVEL:  (P.C. = 52)
   Arg 0 (WINDOW): #<ZMAIL-FRAME Main Zmail Window 2300161 exposed>

SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
   --Defaulted args:--
   Arg 0 (IGNORE): NIL
19-Nov-83 15:50:57-EST,451;000000000000
Received: from MIT-LISPM-5 by MIT-OZ via Chaosnet; 19 Nov 83 15:50-EST
Date: Saturday, 19 November 1983, 15:57-EST
From: saund at MIT-OZ
Subject: mouse complaint
To: bug-lispm at MIT-OZ

Some of the mice around here are difficult to use because you have to move
them very far in the vertical direction in order to get the mouse cursor
to go from the bottom of the screen to the top.  Is there any way for a user
to change the vertical gain?
20-Nov-83 11:11:08-EST,828;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 20 Nov 83 11:10-EST
Date: 20 November 1983 11:12 EST
From: David C. Plummer <DCP @ MIT-MC>
To: CSTACY @ MIT-MC, Hornig @ SCRC-TENEX
cc: BUG-LISPM @ MIT-MC, INFO-HOSTS @ MIT-MC, Bug-Twenex @ MIT-XX

    Date: 18 November 1983 03:29 EST
    From: Christopher C. Stacy <CSTACY @ MIT-MC>

    I removed the Symbolics Internet hosts from the HOSTS MASTER file on MC, since
    it would not compile with that input; there is something screwed up about the
    entries in the file. I suspect that unknown machine types were used in the entries.

On what machine did it not work and which field made it not
work.  Hornig claims it successfully compiled on MC.  The only
thing we can guess is that Twenex doesn't like a machine type of
3600 (all digits).  What's the story?
20-Nov-83 13:53:59-EST,1525;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 20 Nov 83 13:53-EST
Date: 20 November 1983 13:45 EST
From: Christopher C. Stacy <CSTACY @ MIT-MC>
Subject:  HSTSYI
To: DCP @ MIT-MC
cc: BUG-LISPM @ MIT-MC, INFO-HOSTS @ MIT-MC, Bug-Twenex @ MIT-XX,
    Hornig @ SCRC-TENEX
In-reply-to: Msg of 20 Nov 1983 11:12 EST from David C. Plummer <DCP>

    Date: 20 November 1983 11:12 EST
    From: David C. Plummer <DCP>
    To:   CSTACY, Hornig at SCRC-TENEX
    cc:   BUG-LISPM, INFO-HOSTS, Bug-Twenex at MIT-XX

        Date: 18 November 1983 03:29 EST
        From: Christopher C. Stacy <CSTACY @ MIT-MC>

        I removed the Symbolics Internet hosts from the HOSTS MASTER file 
        on MC, since it would not compile with that input; there is
        something screwed up about the entries in the file. I suspect that 
        unknown machine types were used in the entries.

    On what machine did it not work and which field made it not
    work.  Hornig claims it successfully compiled on MC.  The only
    thing we can guess is that Twenex doesn't like a machine type of
    3600 (all digits).  What's the story?

The HOSTS3 program (which happenned to be running on MC) barfed on the
HSTSYI file with some kind of syntax error, I forget the exact text of
the message.  I just now tried it by itself, and it complained that
network 18.0.0.0 was undefined and about some host address collisions
within HSTSYI.  The current state is that HOSTS3 won't write a binary
file from just HSTSYI.

20-Nov-83 16:06:17-EST,1003;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 20 Nov 83 16:05-EST
Received: from SCRC-CHICOPEE by SCRC-QUABBIN with CHAOS; Sun 20-Nov-83 16:01:47-EST
Date: Sun, 20 Nov 83 16:06 EST
From: "Daniel L. Weinreb" <DLW%SCRC-TENEX@MIT-MC.ARPA>
Subject: Notes on m-X Grind Definition, m-X Grind S Expression
To: Moon%SCRC-TENEX@MIT-MC.ARPA, KMP@MIT-MC.ARPA
Cc: BUG-LISPM@MIT-OZ.ARPA, Doc-Changes%SCRC-TENEX@MIT-MC.ARPA,
    Software-Maintenance%SCRC-TENEX@MIT-MC.ARPA
In-reply-to: The message of 17 Nov 83 15:19-EST from David A. Moon <Moon at SCRC-TENEX>

    Date: Thu, 17 Nov 83 15:19 EST
    From: "David A. Moon" <Moon%SCRC-TENEX@MIT-MC.ARPA>
    You are absolutely right.  It's the only m-X command with "S expression"
    in its name.  In the source (only), I changed the name of the command
    to Grind Expression.

    If anyone feels these should be patched, do so.

Of course, it should not be patched into 242, since the Rel 5.0 feature
freeze deadline is long since past.
21-Nov-83 11:13:46-EST,1039;000000000000
Received: from SCRC-TENEX by MIT-OZ via Chaosnet; 21 Nov 83 11:13-EST
Received: from SCRC-BIG by SCRC-TENEX with CHAOS; Mon 21-Nov-83 11:14:27-EST
Date: Mon, 21 Nov 83 11:12 EST
From: "Gregor J. Kiczales" <Gregor%SCRC-TENEX@MIT-MC.ARPA>
Subject: (ED <pathname>)
To: kmp@MIT-MC.ARPA, BUG-LISPM@MIT-OZ.ARPA
In-reply-to: The message of 14 Nov 83 18:44-EST from Kent M. Pitman <kmp at MIT-MC>

    Date: Monday, 14 November 1983, 18:44-EST
    From: Kent M. Pitman <kmp at MIT-MC>
    In Release 4.5, Knowledge-Based-Editor 221.1, site configuration 65,
    Black Magic, on PA Lisp Machine Merlin:

    Where P was bound to #<LMFS-PATHNAME "F:>sys>patch>System-222-129">,
    and my Zmacs buffer defaults were PREP:/usr/kmp/kmp.l, I did
     (ed P)
    and ended up in a buffer PREP:/usr/kmp/F:>sys>patch>S, which it
    claimed was a "new file".

In release 5 (Specifically 243.335, but it looks like from the beginning
of Rel-5) your example works correctly. 

Sorry if someone else already answered this, my zmail...
21-Nov-83 14:15:57-EST,1168;000000000000
Mail-From: CGA created at 21-Nov-83 13:39:57
Date: Mon 21 Nov 83 13:39-EST
From: Christopher G Atkeson <CGA@MIT-OZ>
Subject: conversion from cadr to 3600 problems
To: bug-lispm@MIT-OZ

I have three questions: (1 hard, 2 simple.)

1. We currently have a database which is made up of list structure.
We store this database in between uses in a QFASL file on a file server.
(written with compiler:fasd-symbol-value from a CADR.) We would like
to use this database on both CADRs and 3600s. As there is no compiled
code in the QFASL file there is no reason for the 3600 not to be able
to read it. How can I read in the database on a 3600? If I can't use
QFASL files, what should I use?. (The printed representation of all this
takes too long to read in and write out.)

2. Is there a way to set the version numbers on the .BIN files to correspond
to the .LISP files? I understand that this is not always a good idea or
possible but I find it very convenient to be able to tell on OZ whether
I am up to date.

3. How can I see the contents of the input ring on a 3600? I use the STATUS
key on a cadr for this purpose a lot.

Thanks,
chris atkeson
21-Nov-83 17:14:41-EST,3154;000000000000
Received: from SCRC-RIVERSIDE by MIT-OZ via Chaosnet; 21 Nov 83 17:13-EST
Received: from SCRC-YANGTZE by SCRC-RIVERSIDE with CHAOS; Mon 21-Nov-83 17:08:45-EST
Date: Mon, 21 Nov 83 17:08 EST
From: Carl Hoffman <CWH%SCRC-TENEX@MIT-MC.ARPA>
Subject: conversion from cadr to 3600 problems
To: CGA@MIT-OZ.ARPA, bug-lispm@MIT-OZ.ARPA,
    Doc-Changes%SCRC-TENEX@MIT-MC.ARPA
In-reply-to: The message of 21 Nov 83 13:39-EST from Christopher G Atkeson <CGA at MIT-OZ>

    Date: Mon 21 Nov 83 13:39-EST
    From: Christopher G Atkeson <CGA@MIT-OZ>
    I have three questions: (1 hard, 2 simple.)

    1. We currently have a database which is made up of list structure.
    We store this database in between uses in a QFASL file on a file server.
    (written with compiler:fasd-symbol-value from a CADR.) We would like
    to use this database on both CADRs and 3600s. As there is no compiled
    code in the QFASL file there is no reason for the 3600 not to be able
    to read it. How can I read in the database on a 3600? If I can't use
    QFASL files, what should I use?. (The printed representation of all this
    takes too long to read in and write out.)

There may be an easy a way of reading and writing .BIN files on a CADR, or
.QBIN files on a 3600, but I don't know about it.  I recommend designing your
own file format which is customized for your particular type of data.  If
coded efficiently, this would probably be faster than using either READ or
LOAD.  For example, the following set of functions will read or write nested
lists of symbols.

[Doc-Changes:  Please save this code for the documentation of :LINE-IN
to windows, and as an example of a simple form of file I/O.]

(DEFUN READ-LIST (&OPTIONAL (STREAM STANDARD-INPUT))
  (WITH-INPUT-EDITING (STREAM)
    (LET ((CHAR (SEND STREAM :TYI T))
	  (CLOSE '(NIL)))
      (SELECT CHAR
	(#/-
	 (INTERN (SEND STREAM :LINE-IN)))
	(#/(
	 (SEND STREAM :TYI T)
	 (LOOP FOR LIST = (READ-LIST STREAM)
	       UNTIL (EQ LIST CLOSE)
	       COLLECT LIST))
	(#/)
	 (SEND STREAM :TYI T)
	 CLOSE)
	(OTHERWISE
	 (FERROR "~C is an unrecognized character" CHAR))))))

(DEFUN WRITE-LIST (LIST &OPTIONAL (STREAM STANDARD-OUTPUT))
  (COND ((SYMBOLP LIST)
	 (SEND STREAM :TYO #\-)
	 (SEND STREAM :LINE-OUT (GET-PNAME LIST)))
	((LISTP LIST)
	 (SEND STREAM :LINE-OUT "(")
	 (LOOP FOR L IN LIST DO (WRITE-LIST L STREAM))
	 (SEND STREAM :LINE-OUT ")"))
	(T (FERROR "Can't write ~S" LIST))))

(DEFUN READ-LIST-FROM-FILE (FILE)
  (WITH-OPEN-FILE (STREAM FILE :DIRECTION :INPUT)
    (READ-LIST STREAM)))

(DEFUN WRITE-LIST-TO-FILE (LIST FILE)
  (WITH-OPEN-FILE (STREAM FILE :DIRECTION :OUTPUT)
    (WRITE-LIST LIST STREAM)))

    3. How can I see the contents of the input ring on a 3600? I use the STATUS
    key on a cadr for this purpose a lot.

In Release 5, you can type c-m-0 c-m-Y to either the input editor or to Zmacs
to see the input history.  The input history was called the input ring in
Release 4, but is now an unbounded list rather than a ring.  In the input
editor, the Escape key may be used as an accelerator for c-m-0 c-m-Y.
21-Nov-83 19:31:23-EST,1095;000000000000
Received: from SCRC-TENEX by MIT-OZ via Chaosnet; 21 Nov 83 19:30-EST
Received: from SCRC-EUPHRATES by SCRC-TENEX with CHAOS; Mon 21-Nov-83 19:33:59-EST
Date: Mon, 21 Nov 83 19:31 EST
From: "David A. Moon" <Moon%SCRC-TENEX@MIT-MC.ARPA>
Subject: conversion from cadr to 3600 problems
To: Christopher G Atkeson <CGA@MIT-OZ.ARPA>
Cc: bug-lispm@MIT-OZ.ARPA
In-reply-to: The message of 21 Nov 83 13:39-EST from Christopher G Atkeson <CGA at MIT-OZ>

    Date: Mon 21 Nov 83 13:39-EST
    From: Christopher G Atkeson <CGA@MIT-OZ>

    2. Is there a way to set the version numbers on the .BIN files to correspond
    to the .LISP files? I understand that this is not always a good idea or
    possible but I find it very convenient to be able to tell on OZ whether
    I am up to date.

You can compare file write dates to determine this.  But making the version
numbers equal is not an unreasonable thing to want to do.  There isn't a builtin
switch to enable this, as far as I know, but you can call compiler:compile-file
with two arguments and specify the name of the BIN file.
21-Nov-83 19:41:11-EST,1251;000000000000
Received: from SCRC-TENEX by MIT-OZ via Chaosnet; 21 Nov 83 19:40-EST
Received: from SCRC-EUPHRATES by SCRC-TENEX with CHAOS; Mon 21-Nov-83 19:36:37-EST
Date: Mon, 21 Nov 83 19:34 EST
From: "David A. Moon" <Moon%SCRC-TENEX@MIT-MC.ARPA>
Subject: conversion from cadr to 3600 problems
To: Christopher G Atkeson <CGA@MIT-OZ.ARPA>
Cc: bug-lispm@MIT-OZ.ARPA
In-reply-to: The message of 21 Nov 83 13:39-EST from Christopher G Atkeson <CGA at MIT-OZ>

    Date: Mon 21 Nov 83 13:39-EST
    From: Christopher G Atkeson <CGA@MIT-OZ>

    1. We currently have a database which is made up of list structure.
    We store this database in between uses in a QFASL file on a file server.
    (written with compiler:fasd-symbol-value from a CADR.) We would like
    to use this database on both CADRs and 3600s.

As Carl said, if you plan to continue using the data base on both kinds of
machine, your best bet is to make your own specialized loading and dumping
program, which isn't so hard.  If you plan on switching permanently to the
3600 you could do a once-only conversion by writing out a printed representation
to a character file.

sys:dump-forms-to-file is the approved function for writing binary (QBIN
or BIN) files, by the way.
22-Nov-83 04:12:01-EST,684;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 22 Nov 83 04:11-EST
Date: Tuesday, 22 November 1983, 04:16-EST
From: Kent M Pitman <kmp at MIT-MC>
Subject: Letting m-X Dired make use of ZMacs two-window mode
To: BUG-LISPM at OZ

In Release 4.5, Knowledge-Based-Editor 221.16, site configuration 65,
Black Magic, on PA Lisp Machine Avatar:

It would be nice if when running m-X Dired in two-window mode, typing E
would take advantage of the window arrangement and edit the file in
the other window, telling you to type c-X O (rather than c-m-L) to
return. Babyl does this sort of thing, eg when you type T to a survey
in two-window mode, and it has a very nice feel to it.
22-Nov-83 10:17:31-EST,1211;000000000000
Received: from SCRC-TENEX by MIT-OZ via Chaosnet; 22 Nov 83 10:17-EST
Received: from SCRC-CONCORD by SCRC-TENEX with CHAOS; Tue 22-Nov-83 10:17:32-EST
Date: Tue, 22 Nov 83 10:14 EST
From: "Bernard S. Greenberg" <BSG%SCRC-TENEX@MIT-MC.ARPA>
Subject: RTAPE lossage :after :close
To: x.jrd@MIT-OZ.ARPA, BUG-LISPM@MIT-OZ.ARPA
In-reply-to: The message of 9 Nov 83 22:18-EST from Jim Davis <x.jrd at MIT-OZ>

    Date: Wednesday, 9 November 1983, 22:18-EST
    From: Jim Davis <x.jrd at MIT-OZ>
    In Release 4.5, site configuration 65, on Lisp Machine Four:

    I mounted a distribution tape on CADR27, which was runnning an MIT System.
    It errored, saying that CADR-27 did not respond to an RTAPE request.
    So I aborted, and got this error.

    >>Trap: The function NIL is undefined.
    While in the function (METHOD TAPE:REMOTE-TAPE-INPUT-MIXIN AFTER CLOSE)  (METHOD TAPE:REMOTE-TAPE-INPUT-STREAM COMBINED CLOSE)  (METHOD TAPE:REMOTE-TAPE-MIXIN WHOPPER INIT)

    (METHOD TAPE:REMOTE-TAPE-INPUT-MIXIN AFTER CLOSE):  (P.C. = 47)
       (SELF = #<REMOTE-TAPE-INPUT-STREAM 27071373>)
       Arg 0 (OPERATION): CLOSE
       Arg 1 (ABORT): ABORT
Almost certainly fixed in Release 5.
22-Nov-83 13:03:53-EST,930;000000000000
Received: from SCRC-TENEX by MIT-OZ via Chaosnet; 22 Nov 83 12:56-EST
Received: from SCRC-CONCORD by SCRC-TENEX with CHAOS; Tue 22-Nov-83 11:04:25-EST
Date: Tue, 22 Nov 83 11:01 EST
From: "Bernard S. Greenberg" <BSG%SCRC-TENEX@MIT-MC.ARPA>
Subject: (ED <pathname>)
To: kmp@MIT-MC.ARPA, BUG-LISPM@MIT-OZ.ARPA
In-reply-to: The message of 14 Nov 83 18:44-EST from Kent M. Pitman <kmp at MIT-DM>

    Date: Monday, 14 November 1983, 18:44-EST
    From: Kent M. Pitman <kmp at MIT-MC>
    In Release 4.5, Knowledge-Based-Editor 221.1, site configuration 65,
    Black Magic, on PA Lisp Machine Merlin:

    Where P was bound to #<LMFS-PATHNAME "F:>sys>patch>System-222-129">,
    and my Zmacs buffer defaults were PREP:/usr/kmp/kmp.l, I did
     (ed P)
    and ended up in a buffer PREP:/usr/kmp/F:>sys>patch>S, which it
    claimed was a "new file"
This is certainly the "host colon" phenomenon fixed in Release 5.
22-Nov-83 16:58:51-EST,1249;000000000000
Received: from SCRC-TENEX by MIT-OZ via Chaosnet; 22 Nov 83 16:58-EST
Received: from SCRC-EUPHRATES by SCRC-TENEX with CHAOS; Tue 22-Nov-83 16:55:06-EST
Date: Tue, 22 Nov 83 16:58 EST
From: "David A. Moon" <Moon%SCRC-TENEX@MIT-MC.ARPA>
Subject: Letting m-X Dired make use of ZMacs two-window mode
To: Kent M Pitman <kmp@MIT-MC.ARPA>
Cc: BUG-LISPM@MIT-OZ.ARPA
In-reply-to: The message of 22 Nov 83 04:16-EST from Kent M Pitman <kmp at MIT-MC>

    Date: Tuesday, 22 November 1983, 04:16-EST
    From: Kent M Pitman <kmp at MIT-MC>

    It would be nice if when running m-X Dired in two-window mode, typing E
    would take advantage of the window arrangement and edit the file in
    the other window, telling you to type c-X O (rather than c-m-L) to
    return. Babyl does this sort of thing, eg when you type T to a survey
    in two-window mode, and it has a very nice feel to it.

Last time this suggestion was raised, as I recall between one and two years
ago, the conclusion of the discussion was that approximately equal numbers
of people thought it was a good idea and thought it was a bad idea, wanting
to retain in the other window the thing they had carefully put there.  Might
make sense as a user option variable.
22-Nov-83 19:47:25-EST,1353;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 22 Nov 83 19:47-EST
Received: from SCRC-CHICOPEE by SCRC-QUABBIN with CHAOS; Tue 22-Nov-83 19:48:12-EST
Date: Tue, 22 Nov 83 19:51 EST
From: "Daniel L. Weinreb" <DLW%SCRC-TENEX@MIT-MC.ARPA>
Subject: undeletion-p
To: SWM%SCRC-VIXEN@MIT-MC.ARPA, Zvona@MIT-OZ.ARPA, bug-lispm@MIT-OZ.ARPA
In-reply-to: The message of 15 Nov 83 17:46-EST from Scott W McKay <SWM at SCRC-VIXEN>

    Date: Tue, 15 Nov 83 17:46 EST
    From: Scott W McKay <SWM%SCRC-VIXEN@MIT-MC.ARPA>
	Date: Sunday, 13 November 1983, 18:21-EST
	From: David Chapman <Zvona at MIT-OZ>
	Rel 5 m-X Clean Directory still asks if you want to expunge a VMS
	directory.
    This is true.  VMS expunge is a noop, so it's benign.  I bet it asks the
    same question for Unix directories, too.

Mumble.  We have known N ways to fix this, for a long time.  Can we just
add a :undeletion-p message to some per-operating-system object, like
hosts, or maybe an :attributes message that returns a list of keywords a
la :which-operations?  It doesn't really matter which of these we do;
let's just do one of them.  (Other solutions have been proposed which
involved changing the FILE protocol, but that's a lot of work and
doesn't seem justified in this case since we really do know it
per-operating-system, without having to ask.)
22-Nov-83 19:59:43-EST,1754;000000000000
Received: from SCRC-TENEX by MIT-OZ via Chaosnet; 22 Nov 83 19:59-EST
Received: from SCRC-EUPHRATES by SCRC-TENEX with CHAOS; Tue 22-Nov-83 19:52:20-EST
Date: Tue, 22 Nov 83 19:54 EST
From: "David A. Moon" <Moon%SCRC-TENEX@MIT-MC.ARPA>
Subject: SCRC|DM problem
To: Info-Lispm@MIT-OZ.ARPA
Cc: lispm-networks%SCRC-TENEX@MIT-MC.ARPA,
    software-maintenance%SCRC-TENEX@MIT-MC.ARPA

Certain Release 5.0 beta-test worlds at MIT have been contaminated in such
a way that the host MIT-MC thinks it has the name SCRC|DM.  This was caused
by a mistaken patch to the namespace server that has since been fixed.  But
since this bogus name never actually existed, as far as the namespace system
knew, the incremental update mechanism does not remove it.  The problem
has long since been fixed in the namespace server, LM15, but some worlds
exist that contain this incorrect information.

To correct this, load the file OZ:<MOON>FIX-MC.  You can load this in
your init file if you habitually use a world load with this problem.
The file is harmless if loaded into a machine that does not have the
problem.

If the file types out that it removed the bogus name, you can eliminate
the problem entirely by re-disk-saving any contaminated world: cold boot
it, (si:login-to-sys-host), load this file into it, and disk-save.  I
recommend that you DO NOT do this without checking with the person
primarily responsible for the machine in question, since some machines
seem to have their disks set up in particular ways that are halfway between
release 4 and release 5, and this should not be disturbed.

Sorry about the inconvenience to everyone's mail through MC.  This is the
sort of nasty lurking bug that beta-test is designed to expose.
23-Nov-83 08:59:01-EST,767;000000000000
Received: from MIT-LISPM-3 by MIT-OZ via Chaosnet; 23 Nov 83 08:58-EST
Date: Wednesday, 23 November 1983, 09:05-EST
From: Kim A. Barrett <kab at MIT-OZ>
To: BUG-LISPM at MIT-OZ, kab at MIT-OZ

In System 97.26, CADR 1.0, ZMail 51.9, MIT-Specific 21.0, microcode 257,
ZM MIT, on Lisp Machine Three:

With a file opened using WITH-OPEN-FILE, on doing an abort, asks if you want the file to be
deleted.  If you answer "yes" you get an error because the file is still open.  If you answer
"no" the expected occurs.

Also, will it ever again be possible to expunge a directory on FS: from a remote connection.
There was a brief period, after the new structured file system was installed, when it worked
properly, but it hasn't done so for quite a while now.
23-Nov-83 09:16:37-EST,1390;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 23 Nov 83 09:16-EST
Received: from SCRC-CONCORD by SCRC-QUABBIN with CHAOS; Wed 23-Nov-83 09:17:44-EST
Date: Wed, 23 Nov 83 09:16 EST
From: "Bernard S. Greenberg" <BSG%SCRC-TENEX@MIT-MC.ARPA>
Subject: Letting m-X Dired make use of ZMacs two-window mode
To: Moon%SCRC-TENEX@MIT-MC.ARPA, kmp@MIT-MC.ARPA
Cc: BUG-LISPM@MIT-OZ.ARPA
In-reply-to: The message of 22 Nov 83 16:58-EST from David A. Moon <Moon at SCRC-TENEX>

    Date: Tue, 22 Nov 83 16:58 EST
    From: "David A. Moon" <Moon%SCRC-TENEX@MIT-MC.ARPA>
	Date: Tuesday, 22 November 1983, 04:16-EST
	From: Kent M Pitman <kmp at MIT-MC>
	It would be nice if when running m-X Dired in two-window mode, typing E
	would take advantage of the window arrangement and edit the file in
	the other window, telling you to type c-X O (rather than c-m-L) to
	return. Babyl does this sort of thing, eg when you type T to a survey
	in two-window mode, and it has a very nice feel to it.

    Last time this suggestion was raised, as I recall between one and two years
    ago, the conclusion of the discussion was that approximately equal numbers
    of people thought it was a good idea and thought it was a bad idea, wanting
    to retain in the other window the thing they had carefully put there.  Might
    make sense as a user option variable.
Maybe an argument to E?
23-Nov-83 10:06:29-EST,1273;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 23 Nov 83 10:06-EST
Date: 23 November 1983 10:12 EST
From: Kent M Pitman <KMP @ MIT-MC>
Subject:  Letting m-X Dired make use of ZMacs two-window mode
To: BSG @ SCRC-TENEX
cc: BUG-LISPM @ MIT-OZ, Moon @ SCRC-TENEX
In-reply-to: Msg of Wed 23 Nov 83 09:16 EST from Bernard S. Greenberg <BSG%SCRC-TENEX at MIT-MC.ARPA>

    Date: Wed, 23 Nov 83 09:16 EST
    From: Bernard S. Greenberg <BSG%SCRC-TENEX at MIT-MC.ARPA>

        Date: Tue, 22 Nov 83 16:58 EST
        From: "David A. Moon" <Moon%SCRC-TENEX@MIT-MC.ARPA>

	    Date: Tuesday, 22 November 1983, 04:16-EST
	    From: Kent M Pitman <kmp at MIT-MC>

	    It would be nice if when running m-X Dired in two-window mode, typing E
	    would take advantage of the window arrangement and edit the file in
	    the other window, ...

        ... approximately equal numbers of people thought it was a good idea
        and thought it was a bad idea, wanting to retain in the other window 
	the thing they had carefully put there.  Might make sense as a user
        option variable.

    Maybe an argument to E?

This sounds like a very nice solution. The arg could be a window number.
A similar argument to V would probably also be handy. Thanks.
23-Nov-83 12:25:27-EST,2019;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 23 Nov 83 12:24-EST
Received: from SCRC-THAMES by SCRC-QUABBIN with CHAOS; Wed 23-Nov-83 12:25:58-EST
Date: Wed, 23 Nov 83 12:15 EST
From: Scott W McKay <SWM%SCRC-VIXEN@MIT-MC.ARPA>
Subject: undeletion-p
To: DLW%SCRC-TENEX@MIT-MC.ARPA, SWM%SCRC-VIXEN@MIT-MC.ARPA,
    Zvona@MIT-OZ.ARPA, bug-lispm@MIT-OZ.ARPA
In-reply-to: The message of 22 Nov 83 19:51-EST from Daniel L. Weinreb <DLW at SCRC-TENEX>

    Date: Tuesday, 22 November 1983, 19:51-EST
    From: Daniel L. Weinreb <DLW at SCRC-TENEX>
	Date: Tue, 15 Nov 83 17:46 EST
	From: Scott W McKay <SWM%SCRC-VIXEN@MIT-MC.ARPA>
	    Date: Sunday, 13 November 1983, 18:21-EST
	    From: David Chapman <Zvona at MIT-OZ>
	    Rel 5 m-X Clean Directory still asks if you want to expunge a VMS
	    directory.
	This is true.  VMS expunge is a noop, so it's benign.  I bet it asks the
	same question for Unix directories, too.

    Mumble.  We have known N ways to fix this, for a long time.  Can we just
    add a :undeletion-p message to some per-operating-system object, like
    hosts, or maybe an :attributes message that returns a list of keywords a
    la :which-operations?  It doesn't really matter which of these we do;
    let's just do one of them.  (Other solutions have been proposed which
    involved changing the FILE protocol, but that's a lot of work and
    doesn't seem justified in this case since we really do know it
    per-operating-system, without having to ask.)
If the LispM has to ask the host what it supports, I prefer :attributes.
If the LispM generic file system is endowed with knowledge about each
host's file system, then I prefer :undeletion-p.  If :attributes is the
method (pun intended) of choice, should the attribute list include each
operation the host supports, or just the "unusual" ones.  Personally, I
don't care that VMS and Unix ask whether you want to expunge - it's a
noop anyway... who knows, maybe someday they'll support undeletion?
23-Nov-83 16:04:00-EST,756;000000000000
Received: from MIT-APIARY-4 by MIT-OZ via Chaosnet; 23 Nov 83 16:02-EST
Date: Wednesday, 23 November 1983, 16:06-EST
From: Henry Lieberman <Henry at MIT-OZ>
Subject: In case of emergency, break glass
To: Weld at MIT-OZ
Cc: MPSG at MIT-OZ, Bug-Lispm at MIT-OZ


I wrote a new version of the old (SALVAGE-EDITOR) function, for
use when your machine is hopelessly fouled up and you have editor
buffers that you need to save. It works on the 3600 by saving your 
editor buffers to a temporary file on the FEP file system, which 
you can recover after cold booting. I suggest it be loaded in init files
(or better yet, installed in the system), since by the time you need
it it may well be too late to load it. 

It's in <Henry>Salvage.Lisp.

23-Nov-83 17:27:34-EST,3644;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 23 Nov 83 17:26-EST
Date: Wednesday, 23 November 1983, 17:15-EST
From: Philippe Brou <PHILIP at OZ>
Subject: STORE-ARRAY-LEADER undefined?
To: BUG-LISPM at OZ

In Release 4.5, site configuration 71, on Lisp Machine Frank Sinatra:

Why is this reporting that STORE-ARRAY-LEADER is undefined?
Just created an array with a one element leader and accidently tried
to place something in the non-existant second slot.

[If this is fixed in a patch, please tell me how to load patches
on 4.5 ... (load-patches) did not load anything]


>>Error: Unknown function STORE-ARRAY-LEADER
While in the function (METHOD DBG:SUBSCRIPT-OUT-OF-BOUNDS-TRAP VALID-SUBSCRIPTS)  (METHOD DBG:SUBSCRIPT-OUT-OF-BOUNDS-TRAP AFTER INIT)  (METHOD DBG:SUBSCRIPT-OUT-OF-BOUNDS-TRAP COMBINED INIT)

(METHOD DBG:SUBSCRIPT-OUT-OF-BOUNDS-TRAP VALID-SUBSCRIPTS):  (P.C. = 60)
   Arg 0 (SELF): #<SUBSCRIPT-OUT-OF-BOUNDS-TRAP 5511160>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor DBG:SUBSCRIPT-OUT-OF-BOUNDS-TRAP -- 9. IV's, 4. FL's 60510411>
   Arg 2 (OPERATION): VALID-SUBSCRIPTS
   Local 3 (FUN): STORE-ARRAY-LEADER

(METHOD DBG:SUBSCRIPT-OUT-OF-BOUNDS-TRAP AFTER INIT):  (P.C. = 11)
   Arg 0 (SELF): #<SUBSCRIPT-OUT-OF-BOUNDS-TRAP 5511160>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor DBG:SUBSCRIPT-OUT-OF-BOUNDS-TRAP -- 9. IV's, 4. FL's 60510411>
   Arg 2 (OPERATION): INIT
   Arg 3 (IGNORE): #<DTP-LOCATIVE 100254>

(METHOD DBG:SUBSCRIPT-OUT-OF-BOUNDS-TRAP COMBINED INIT):  (P.C. = 55)
   Arg 0 (SELF): #<SUBSCRIPT-OUT-OF-BOUNDS-TRAP 5511160>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor DBG:SUBSCRIPT-OUT-OF-BOUNDS-TRAP -- 9. IV's, 4. FL's 60510411>
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

INSTANTIATE-FLAVOR:  (P.C. = 345)
   Arg 0 (FLAVOR-NAME): DBG:SUBSCRIPT-OUT-OF-BOUNDS-TRAP
   Arg 1 (INIT-PLIST): #<DTP-LOCATIVE 100254>
   Arg 2 (SEND-INIT-MESSAGE-P): T
   Arg 3 (RETURN-UNHANDLED-KEYWORDS-P): NIL
   Arg 4 (AREA-TO-CONS-INSTANCE-IN): 4

MAKE-CONDITION:  (P.C. = 23)
   Arg 0 (CONDITION-NAME): DBG:SUBSCRIPT-OUT-OF-BOUNDS-TRAP
   Rest arg (INIT-OPTIONS): (ERROR-TABLE-ENTRY (DBG:ILLEGAL-SUBSCRIPT) MACRO-PC #<DTP-ODD-PC 1203662> ERROR-HANDLER-BASE-FRAME #<DTP-LOCATIVE 100116> ARGS-LIST ((STACK -2) (STACK -1) (STACK 0)) ARG-DESC DBG:SUBSCRIPT ...)

DBG:MAKE-TRAP:  (P.C. = 14)
   Arg 0 (TYPE): DBG:SUBSCRIPT-OUT-OF-BOUNDS-TRAP
   Arg 1 (ERROR-TABLE-ENTRY): (DBG:ILLEGAL-SUBSCRIPT)
   Arg 2 (MACRO-PC): #<DTP-ODD-PC 1203662>
   Arg 3 (ERROR-HANDLER-BASE-FRAME): #<DTP-LOCATIVE 100116>
   Rest arg (ARGS): (ARGS-LIST ((STACK -2) (STACK -1) (STACK 0)) ARG-DESC DBG:SUBSCRIPT BAD-ARGS-START ((STACK 0)) BAD-ARGS-END NIL OBJECT #<ART-Q-2 5511154>)

DBG:MAKE-ARG-TYPE-TRAP:  (P.C. = 21)
   Arg 0 (TYPE): DBG:SUBSCRIPT-OUT-OF-BOUNDS-TRAP
   Arg 1 (ARGS-LIST): ((STACK -2) (STACK -1) (STACK 0))
   Arg 2 (ARG-DESC): DBG:SUBSCRIPT
   Arg 3 (BAD-ARGS-START): ((STACK 0))
   Arg 4 (BAD-ARGS-END): NIL
   Arg 5 (ERROR-TABLE-ENTRY): (DBG:ILLEGAL-SUBSCRIPT)
   Arg 6 (MACRO-PC): #<DTP-ODD-PC 1203662>
   Arg 7 (ERROR-HANDLER-BASE-FRAME): #<DTP-LOCATIVE 100116>
   Rest arg (REST): (OBJECT #<ART-Q-2 5511154>)

(PROPERTY DBG:ILLEGAL-SUBSCRIPT DBG:DECODE):  (P.C. = 111)
   Arg 0 (ERROR-TABLE-ENTRY): (DBG:ILLEGAL-SUBSCRIPT)
   Arg 1 (IGNORE): #<DTP-LOCATIVE 5511156>
   Arg 2 (MACRO-PC): #<DTP-ODD-PC 1203662>
   Arg 3 (ERROR-HANDLER-BASE-FRAME): #<DTP-LOCATIVE 100116>

Rest of stack:
SYS:MICROCODE-ERROR-HANDLER:  (P.C. = 61)
STORE-ARRAY-LEADER:  (P.C. = 7)
SI:*EVAL:  (P.C. = 405)
SI:LISP-TOP-LEVEL1:  (P.C. = 130)
SYS:LISP-TOP-LEVEL:  (P.C. = 7)
23-Nov-83 18:48:45-EST,1698;000000000000
Received: from SCRC-TENEX by MIT-OZ via Chaosnet; 23 Nov 83 18:48-EST
Received: from SCRC-EUPHRATES by SCRC-TENEX with CHAOS; Wed 23-Nov-83 17:48:38-EST
Date: Wed, 23 Nov 83 17:48 EST
From: "David A. Moon" <Moon%SCRC-TENEX@MIT-MC.ARPA>
Subject: STORE-ARRAY-LEADER undefined?
To: Philippe Brou <PHILIP@MIT-OZ.ARPA>
Cc: BUG-LISPM@MIT-OZ.ARPA
In-reply-to: The message of 23 Nov 83 17:15-EST from Philippe Brou <PHILIP at MIT-OZ>

    Date: Wednesday, 23 November 1983, 17:15-EST
    From: Philippe Brou <PHILIP at OZ>

    In Release 4.5, site configuration 71, on Lisp Machine Frank Sinatra:

    Why is this reporting that STORE-ARRAY-LEADER is undefined?
It isn't.  It's reporting that it's unknown, i.e. the debugger is broken
and doesn't know that STORE-ARRAY-LEADER can get a subscript out of bounds
error.  This is undoubtedly fixed in Release 5.0 (even the beta test version).

    Just created an array with a one element leader and accidently tried
    to place something in the non-existant second slot.

    >>Error: Unknown function STORE-ARRAY-LEADER
    While in the function (METHOD DBG:SUBSCRIPT-OUT-OF-BOUNDS-TRAP VALID-SUBSCRIPTS)  (METHOD DBG:SUBSCRIPT-OUT-OF-BOUNDS-TRAP AFTER INIT)  (METHOD DBG:SUBSCRIPT-OUT-OF-BOUNDS-TRAP COMBINED INIT)

    MAKE-CONDITION:  (P.C. = 23)
       Arg 0 (CONDITION-NAME): DBG:SUBSCRIPT-OUT-OF-BOUNDS-TRAP
       Rest arg (INIT-OPTIONS): (ERROR-TABLE-ENTRY (DBG:ILLEGAL-SUBSCRIPT) MACRO-PC #<DTP-ODD-PC 1203662> ERROR-HANDLER-BASE-FRAME #<DTP-LOCATIVE 100116> ARGS-LIST ((STACK -2) (STACK -1) (STACK 0)) ARG-DESC DBG:SUBSCRIPT ...)

    SYS:MICROCODE-ERROR-HANDLER:  (P.C. = 61)
    STORE-ARRAY-LEADER:  (P.C. = 7)
25-Nov-83 14:18:47-EST,586;000000000000
Received: from MIT-LISPM-3 by MIT-OZ via Chaosnet; 25 Nov 83 14:18-EST
Date: Friday, 25 November 1983, 14:25-EST
From: Kim A. Barrett <kab at MIT-OZ>
To: Bug-Lispm at MIT-OZ, kab at MIT-OZ

Oops... boy do I feel stupid.

The recent bug report regarding WITH-OPEN-FILE is completely bogus.  I seem to have forgotten
that a couple months ago I changed the function involved to use a simple unwind-protect
instead.  Since it had been using with-open-file for so long I guess I just sort of assumed
that it was causing the error, without really looking at it.  Sorry about that.
26-Nov-83 14:05:17-EST,953;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 26 Nov 83 14:04-EST
Received: from SCRC-CHICOPEE by SCRC-QUABBIN with CHAOS; Sat 26-Nov-83 14:07:52-EST
Date: Sat, 26 Nov 83 14:05 EST
From: "Daniel L. Weinreb" <DLW%SCRC-TENEX@MIT-MC.ARPA>
Subject: STORE-ARRAY-LEADER undefined?
To: Moon%SCRC-TENEX@MIT-MC.ARPA, PHILIP@MIT-OZ.ARPA
Cc: BUG-LISPM@MIT-OZ.ARPA
In-reply-to: The message of 23 Nov 83 17:48-EST from David A. Moon <Moon at SCRC-TENEX>

    Date: Wed, 23 Nov 83 17:48 EST
    From: "David A. Moon" <Moon%SCRC-TENEX@MIT-MC.ARPA>
	Date: Wednesday, 23 November 1983, 17:15-EST
	From: Philippe Brou <PHILIP at OZ>
	Why is this reporting that STORE-ARRAY-LEADER is undefined?
    It isn't.  It's reporting that it's unknown, i.e. the debugger is broken
    and doesn't know that STORE-ARRAY-LEADER can get a subscript out of bounds
    error.
I rewrote the error message to make this more clear.  (In the source, of ltrap.lisp.)
27-Nov-83 23:31:38-EST,3968;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 27 Nov 83 23:31-EST
Date: Sunday, 27 November 3883, 19:31-EST
From:  <daniel.g.mly at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In Experimental System 98.0, CADR 3.0, Experimental ZMail 53.0,
MIT-Specific 22.0, microcode 301, ZM MIT, on Lisp Machine Eighteen:


tried to login to oz, which was down.
terminal-3-f to finger mc
Got connection error with lisp listener locked by finger window.

>>ERROR: The object #SYSTEM:CONNECTION-ERROR :PROPERTY-LIST (:CONNECTION #<CHAOS Connection to MIT-OZ FILE 1 14147036>) :CONDITION-NAMES (SYSTEM:CONNECTION-ERROR SYSTEM:REMOTE-NETWORK-ERROR SYSTEM:NETWORK-ERROR ERROR ...) :FORMAT-STRING "Host ~1G~A not responding." :FORMAT-ARGS (#<CHAOS Connection to MIT-OZ FILE 1 14147036> #FS#:TOPS20-CHAOS-HOST "MIT-OZ") :CONNECTION #<CHAOS Connection to MIT-OZ FILE 1 14147036> :FOREIGN-HOST #FS#:TOPS20-CHAOS-HOST "MIT-OZ" received a :CHARACTERS message, which went unclaimed.
The rest of the message was NIL.
Backtrace from the debugger:

#SYSTEM:CONNECTION-ERROR :PROPERTY-LIST (:CONNECTION #<CHAOS Connection to MIT-OZ FILE 1 14147036>) :CONDITION-NAMES (SYSTEM:CONNECTION-ERROR SYSTEM:REMOTE-NETWORK-ERROR SYSTEM:NETWORK-ERROR ERROR CONDITION ...) :FORMAT-STRING "Host ~1G~A not responding." :FORMAT-ARGS (#<CHAOS Connection to MIT-OZ FILE 1 14147036> #FS#:TOPS20-CHAOS-HOST "MIT-OZ") :CONNECTION #<CHAOS Connection to MIT-OZ FILE 1 14147036> :FOREIGN-HOST #FS#:TOPS20-CHAOS-HOST "MIT-OZ":
   Arg 0: :CHARACTERS


EH#:CONDITION-DATA-PLIST-LOOKUP (P.C. = 41)

 Arg 0 (OPERATION): :CHARACTERS
 Rest arg (ARGS): NIL


SI#:INSTANCE-HASH-FAILURE (P.C. = 145)

 Arg 0 (OP): :CHARACTERS
 Rest arg (ARGS): NIL
Local 1 (HT): #<EQ-HASH-ARRAY (Funcallable) 1257102>
Local 2 (FN-LOCATION): NIL
Local 3 (FUNC): EH#:CONDITION-DATA-PLIST-LOOKUP
Local 4 (NEWHT): NIL
Local 5: NIL
Local 6: NIL


FS#:LOAD-1 (P.C. = 404)

 Arg 0 (FILE): #FS#:TOPS20-PATHNAME "OZ:PS:<DANIEL/.G/.MLY>LISPM.INIT"
 Arg 1 (PKG): "USER"
 Arg 2 (NONEXISTENT-OK-FLAG): T
 Arg 3 (DONT-SET-DEFAULT-P): T
   --Defaulted args:--
 Arg 4 (NO-MSG-P): NIL
Local 0 (PATHNAME): #FS#:TOPS20-PATHNAME "OZ:PS:<DANIEL/.G/.MLY>LISPM.INIT"
Local 1 (STREAM): #SYSTEM:CONNECTION-ERROR :PROPERTY-LIST (:CONNECTION #<CHAOS Connection to MIT-OZ FILE 1 14147036>) :CONDITION-NAMES (SYSTEM:CONNECTION-ERROR SYSTEM:REMOTE-NETWORK-ERROR SYSTEM:NETWORK-ERROR ERROR ...) :FORMAT-STRING "Host ~1G~A not responding." :FORMAT-ARGS (#<CHAOS Connection to MIT-OZ FILE 1 14147036> #FS#:TOPS20-CHAOS-HOST "MIT-OZ") :CONNECTION #<CHAOS Connection to MIT-OZ FILE 1 14147036> :FOREIGN-HOST #FS#:TOPS20-CHAOS-HOST "MIT-OZ"
Local 2 (TYPE): "INIT"
Local 3 (TYPE-MAY-DEFAULT): NIL
Local 4: (ERROR ("Give up on loading ~A." #FS#:TOPS20-PATHNAME "OZ:PS:<DANIEL/.G/.MLY>LISPM.INIT") T ("Give up on loading ~A." #FS#:TOPS20-PATHNAME "OZ:PS:<DANIEL/.G/.MLY>LISPM.INIT") ...)
Local 5: ("Give up on loading ~A." #FS#:TOPS20-PATHNAME "OZ:PS:<DANIEL/.G/.MLY>LISPM.INIT")
Local 6: ((FS:FILE-ERROR) SI#:FILE-RETRY-HANDLER #FS#:TOPS20-PATHNAME "OZ:PS:<DANIEL/.G/.MLY>LISPM.INIT")
Local 7: ((** SI#:FILE-RETRY-HANDLER #FS#:TOPS20-PATHNAME "OZ:PS:<DANIEL/.G/.MLY>LISPM.INIT") (** SI#:EVAL-ABORT-TRIVIAL-ERRORS-HANDLER))
Local 8: (FS:FILE-NOT-FOUND SI#:CONDITION-CASE-THROW FS#:G9477)
Local 9: ((FS:FILE-NOT-FOUND SI#:CONDITION-CASE-THROW FS#:G9477) (** SI#:FILE-RETRY-HANDLER #FS#:TOPS20-PATHNAME "OZ:PS:<DANIEL/.G/.MLY>LISPM.INIT") (** SI#:EVAL-ABORT-TRIVIAL-ERRORS-HANDLER))
Local 10 (*SELECTQ-ITEM*): NIL
Local 11 (NEW-PATHNAME): NIL


LOAD (P.C. = 104)

 Arg 0 (FILE): #FS#:TOPS20-PATHNAME "OZ:PS:<DANIEL/.G/.MLY>LISPM.INIT"
 Rest arg (KEY-OR-POSITIONAL-ARGS): ("USER" T T)


Remainder of stack:

LOGIN (P.C. = 221)
SI#:EVAL1 (P.C. = 1320)
EVAL (P.C. = 57)
SI:EVAL-ABORT-TRIVIAL-ERRORS (P.C. = 44)
SI:LISP-TOP-LEVEL1 (P.C. = 262)
SI:LISP-TOP-LEVEL (P.C. = 35)
28-Nov-83 07:49:58-EST,3786;000000000000
Received: from MIT-ML by MIT-OZ via Chaosnet; 28 Nov 83 07:49-EST
Date: Monday, 28 November 1983, 07:49-EST
From: TIM at MIT-APIARY-6
Subject: Compile file lossage?
To: BUG-LISPM at MIT-AI

In Release 5.0 [GC'd Beta Test rev 3], dusty plum, on Lisp Machine Apiary-8 (3600):

Wha?

>>Error: Attempt to read from #<FILE-INPUT-CHARACTER-STREAM "AP6:>TIM>new-baldir.lisp" 17757732>, which is in a marked state
While in the function (:DEFUN-METHOD FILE-NEXT-READ-PKT)  (:METHOD FILE-INPUT-STREAM-MIXIN :GET-NEXT-INPUT-PKT)  (:METHOD CHAOS:CHARACTER-INPUT-STREAM-MIXIN :NEXT-INPUT-BUFFER)

(:DEFUN-METHOD FILE-NEXT-READ-PKT):  (P.C. = 170)
   Arg 0 (SELF): #<FILE-INPUT-CHARACTER-STREAM "AP6:>TIM>new-baldir.lisp" 17757732>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FILE-INPUT-STREAM-MIXIN -- 5. IV's, 1. FL's 15141100>
   Arg 2 (NO-HANG-P): NIL
   Arg 3 (FOR-SYNC-MARK-P): NIL
   Local 4 (.SELECTQ-ITEM.): :SYNC-MARKED
   Local 5 (PKT): "Attempt to read from ~S, which is in a marked state"
   Local 6 (*SELECTQ-ITEM*): #<FILE-INPUT-CHARACTER-STREAM "AP6:>TIM>new-baldir.lisp" 17757732>

(:METHOD FILE-INPUT-STREAM-MIXIN :GET-NEXT-INPUT-PKT):  (P.C. = 17)
   Arg 0 (SELF): #<FILE-INPUT-CHARACTER-STREAM "AP6:>TIM>new-baldir.lisp" 17757732>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FILE-INPUT-STREAM-MIXIN -- 5. IV's, 1. FL's 15141100>
   Arg 2 (OPERATION): :GET-NEXT-INPUT-PKT
   Arg 3 (NO-HANG-P): NIL

(:METHOD CHAOS:CHARACTER-INPUT-STREAM-MIXIN :NEXT-INPUT-BUFFER):  (P.C. = 6)
   Arg 0 (SELF): #<FILE-INPUT-CHARACTER-STREAM "AP6:>TIM>new-baldir.lisp" 17757732>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor CHAOS:CHARACTER-INPUT-STREAM-MIXIN -- 1. IV's, 0. FL's 15141141>
   Arg 2 (OPERATION): :NEXT-INPUT-BUFFER
   Arg 3 (NO-HANG-P): NIL

(:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :SETUP-NEXT-INPUT-BUFFER):  (P.C. = 11)
   Arg 0 (SELF): #<FILE-INPUT-CHARACTER-STREAM "AP6:>TIM>new-baldir.lisp" 17757732>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:BASIC-BUFFERED-INPUT-STREAM -- 3. IV's, 0. FL's 15140711>
   Arg 2 (OPERATION): :SETUP-NEXT-INPUT-BUFFER
   --Defaulted args:--
   Arg 3 (NO-HANG-P): NIL

(:METHOD FILE-INPUT-CHARACTER-STREAM :COMBINED :SETUP-NEXT-INPUT-BUFFER):  (P.C. = 10)
   Arg 0 (SELF): #<FILE-INPUT-CHARACTER-STREAM "AP6:>TIM>new-baldir.lisp" 17757732>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FILE-INPUT-CHARACTER-STREAM -- 1. IV's, 5. FL's 15141110>
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

(:METHOD SI:BASIC-BUFFERED-INPUT-STREAM :TYI):  (P.C. = 13)
   Arg 0 (SELF): #<FILE-INPUT-CHARACTER-STREAM "AP6:>TIM>new-baldir.lisp" 17757732>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:BASIC-BUFFERED-INPUT-STREAM -- 3. IV's, 0. FL's 15140711>
   Arg 2 (OPERATION): :TYI
   --Defaulted args:--
   Arg 3 (EOF): NIL

SI:XR-XRTYI:  (P.C. = 5)
   Arg 0 (STREAM): #<FILE-INPUT-CHARACTER-STREAM "AP6:>TIM>new-baldir.lisp" 17757732>

SI:XR-READ-THING:  (P.C. = 163)
   Arg 0 (STREAM): #<FILE-INPUT-CHARACTER-STREAM "AP6:>TIM>new-baldir.lisp" 17757732>

Rest of stack:
(:INTERNAL SI:READ-INTERNAL 0):  (P.C. = 15)
SI:READ-INTERNAL:  (P.C. = 53)
READ:  (P.C. = 6)
(:INTERNAL COMPILER:COMPILE-PROCESS-DEFAULT 4):  (P.C. = 4)
COMPILER:COMPILE-PROCESS-DEFAULT:  (P.C. = 56)
COMPILER:COMPILE-TO-FILE:  (P.C. = 77)
COMPILER:PROCESS-FORMS-FROM-STREAM:  (P.C. = 102)
COMPILER:COMPILE-FROM-STREAM:  (P.C. = 235)
COMPILER:COMPILE-FILE:  (P.C. = 223)
ZWEI:COM-LOAD-FILE:  (P.C. = 77)
ZWEI:COM-EXTENDED-COMMAND:  (P.C. = 27)
ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 200)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 41)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
28-Nov-83 14:25:36-EST,1193;000000000000
Received: from MIT-LISPM-32 by MIT-OZ via Chaosnet; 28 Nov 83 14:24-EST
Date: Monday, 28 November 1983, 14:30-EST
From: Bruce R. Donald <Brd at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In System 97.26, CADR 1.0, ZMail 51.9, MIT-Specific 21.0, microcode 257,
ZM MIT, on Lisp Machine Thirty-two:


Insert your description of the circumstances here:

TypeCase doesn't seem to take a list of types as a type specifier for a clause.
For example, here VERTEX LINE-eq 2-PLANE-INTERSECTION FACE HOLE and SOLID
are all structured types but when calling DIMENSION the following error results:

(defun Dimension (cell)
  "Return the dimension of a cell (eg, 0 for vertex, 1 for edge, etc.)"
  (TypeCase Cell
    (Vertex 0)
    ((line-eq edge 2-plane-intersection) 1)
    ((face hole) 2)
    (solid 3)))

>>ERROR: (LINE-EQ EDGE 2-PLANE-INTERSECTION) is not a type known to TYPEP
Backtrace from the debugger:

TYPEP (P.C. = 453)

 Arg 0 (X): #<EDGE 35775550>
 Arg 1 (TYPE): (LINE-EQ EDGE 2-PLANE-INTERSECTION)
Local 0 (PRED): NIL
Local 1 (D): NIL
Local 2 (DTP): 17
Local 3 (SYMBOL): NIL
Local 4 (*SELECTQ-ITEM*): NIL


DIMENSION (P.C. = 44)

 Arg 0 (CELL): #<EDGE 35775550>
28-Nov-83 17:15:59-EST,1345;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 28 Nov 83 17:14-EST
Received: from SCRC-CHICOPEE by SCRC-QUABBIN with CHAOS; Mon 28-Nov-83 17:16:38-EST
Date: Mon, 28 Nov 83 17:13 EST
From: "Daniel L. Weinreb" <DLW%SCRC-TENEX@MIT-MC.ARPA>
Subject: Compile file lossage?
To: TIM%MIT-APIARY-6@MIT-MC.ARPA, BUG-LISPM@MIT-OZ.ARPA
In-reply-to: The message of 28 Nov 83 07:49-EST from TIM at MIT-APIARY-6

    Date: Monday, 28 November 1983, 07:49-EST
    From: TIM at MIT-APIARY-6
    Wha?

    >>Error: Attempt to read from #<FILE-INPUT-CHARACTER-STREAM "AP6:>TIM>new-baldir.lisp" 17757732>, which is in a marked state

"Wha?" is right.  This is another one of those "we detected a bug but
can't think of anything good to do about it" errors, usually meaning
something went wrong in the Chaosnet FILE protocol.  I'd like to fix
this message to be more useful; particularly, to make it clear that it
indicates a bug (that it's our fault, not anything you did), but also
I'd like to have it tell you what to do about it.  I usually use Peek to
kill the file server, and then try all over again; do BUG-LISPM people
think it's reasonable to put this into the error message?  Those who
don't should tell me what they consider a better thing to do (even if
we fix whatever bug TIM ran into, this error check will still exist).
29-Nov-83 05:41:28-EST,1542;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 29 Nov 83 05:41-EST
Date: Tuesday, 29 November 1983, 05:43-EST
From: Kent M Pitman <kmp at MIT-MC>
Subject: Merlin stopped itself.
To: BUG-LISPM at MC
Cc: joseph at VIXEN, smurf at VIXEN, KBE-I at OZ

In Symbolics Release 4.5, Knowledge-Based-Editor 221.1, 
site configuration 65, Black Magic, on PA Lisp Machine Merlin (3600):

My machine just died again without warning. There's a note on it
from Mark Robbins saying he's swapped the I/O board and wants to
know if it's still losing. I'm told by my people that it's been
continuing to die (I don't know if they've been sending bug reports,
though), so I guess it is.

I can't tell if it is hardware or software that's losing, which is
why I'm sending this to BUG-LISPM. Hewitt told me something about
Release 4.something having some bad chaosnet code bug in software
that is supposedly fixed in Release 5. Could this be it? It was
trying to pipe a mail file from MC into my ZMail at the time it
died. I neglected to warm boot and see for sure which process it 
was that had actually lost; sorry.

In case it helps, here's some minimal debugging info...

  Lisp Stopped Itself.
  Fep>show status
  FEP Lbug control: Use Uncorrected Data, Ignore Double ECC Error
  Sequencer status: MC-error (map, ifu, or main mem), TSK-STOP (sequencer stopped), Errhalt-sync
  MC status: ADDR-IN-AMEM 0, VMA-MD-OFFSET 1, VMA-FOR-MD-0 1, IFU-EMPTY 0
  MC Error status: Double bit error
  ECC syndrome 70, address 7xxxxx3

-kmp
30-Nov-83 00:25:31-EST,3210;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 30 Nov 83 00:24-EST
Date: Wednesday, 30 November 1983, 00:25-EST
From: Scott Cyphers <SR.CYPHER at MIT-SPEECH>
Subject: dis:write-distribution-tape lack of feature
To: BUG-LISPM at OZ

In Release 4.5, Experimental Spire Macros 2.0, Experimental Compute 2.0,
Experimental Attribute 2.2, Experimental Audio 3.1,
Experimental Speech Attributes 2.0, Experimental Display 3.5,
Experimental Speech Layouts 2.1, site configuration 72, on Lisp Machine Yogi:

Can't this do something a little more useful, or at least give me better
proceed options, like continuing on a new tape?

>>Error: End of reel spire encountered.
While in the function (METHOD TAPE:REMOTE-TAPE-OUTPUT-MIXIN WRITE-ERROR-STATUS)  (DEFUN-METHOD TAPE:REMOTE-TAPE-OUTPUT-MIXIN-WRITE-RECORD)  (METHOD TAPE:REMOTE-TAPE-OUTPUT-MIXIN SEND-OUTPUT-BUFFER)

(METHOD TAPE:REMOTE-TAPE-OUTPUT-MIXIN WRITE-ERROR-STATUS):  (P.C. = 154)
   (SELF = #<REMOTE-TAPE-OUTPUT-STREAM 35351765>)
   Arg 0 (OPERATION): WRITE-ERROR-STATUS
   Arg 1 (ERROR-P): T
   Local 0 (ERR): NIL
   Local 1: NIL
   Local 2: (#<CASE-HANDLER 2352625>)

(DEFUN-METHOD TAPE:REMOTE-TAPE-OUTPUT-MIXIN-WRITE-RECORD):  (P.C. = 73)
   (SELF = #<REMOTE-TAPE-OUTPUT-STREAM 35351765>)
   Arg 0 (SELF-MAPPING-TABLE): #<Map to flavor TAPE:REMOTE-TAPE-OUTPUT-MIXIN -- 12. IV's, 1. FL's 27112643>
   Arg 1 (STRING): #<ART-8B-4096. 35354370>
   Arg 2 (START): 0.
   Arg 3 (END): 4096.

(METHOD TAPE:REMOTE-TAPE-OUTPUT-MIXIN SEND-OUTPUT-BUFFER):  (P.C. = 50)
   (SELF = #<REMOTE-TAPE-OUTPUT-STREAM 35351765>)
   Arg 0 (OPERATION): SEND-OUTPUT-BUFFER
   Arg 1 (ARG-BUF): #<ART-8B-4096. 35354370>
   Arg 2 (ARG-END): 4096.

(METHOD SI:BASIC-BUFFERED-OUTPUT-STREAM SEND-CURRENT-OUTPUT-BUFFER):  (P.C. = 35)
   (SELF = #<REMOTE-TAPE-OUTPUT-STREAM 35351765>)
   Arg 0 (OPERATION): SEND-CURRENT-OUTPUT-BUFFER

(METHOD SI:BUFFERED-FAST-STRING-OUT-MIXIN STRING-OUT):  (P.C. = 110)
   (SELF = #<REMOTE-TAPE-OUTPUT-STREAM 35351765>)
   Arg 0 (OPERATION): STRING-OUT
   Arg 1 (STRING): #<ART-8B-4096. 35356424>
   Arg 2 (START): 2829.
   Arg 3 (END): 4096.

(METHOD SI:EMBEDDED-LENGTH-OUTPUT-MIXIN SEND-REAL-OUTPUT-BUFFER):  (P.C. = 46)
   (SELF = #<EMBEDDED-LENGTH-CHARACTER-OUTPUT-STREAM 35356413>)
   Arg 0 (OPERATION): SEND-REAL-OUTPUT-BUFFER

(METHOD SI:EMBEDDED-LENGTH-OUTPUT-MIXIN NEW-OUTPUT-BUFFER):  (P.C. = 35)
   (SELF = #<EMBEDDED-LENGTH-CHARACTER-OUTPUT-STREAM 35356413>)
   Arg 0 (OPERATION): NEW-OUTPUT-BUFFER

(METHOD SI:BASIC-BUFFERED-OUTPUT-STREAM SETUP-NEW-OUTPUT-BUFFER):  (P.C. = 42)
   (SELF = #<EMBEDDED-LENGTH-CHARACTER-OUTPUT-STREAM 35356413>)
   Arg 0 (OPERATION): SETUP-NEW-OUTPUT-BUFFER

Rest of stack:
(METHOD SI:BUFFERED-FAST-STRING-OUT-MIXIN STRING-OUT):  (P.C. = 62)
STREAM-COPY-UNTIL-EOF:  (P.C. = 76)
DIS:DISTRIBUTION-FILE-WRITER:  (P.C. = 250)
DIS:WRITE-DISTRIBUTION-SOURCE-FILE:  (P.C. = 567)
DIS:WRITE-SYSTEM-SOURCE-AND-OBJECT:  (P.C. = 147)
DIS:WRITE-DISTRIBUTION-SYSTEM:  (P.C. = 153)
DIS:WRITE-DISTRIBUTION-TAPE:  (P.C. = 512)
SI:*EVAL:  (P.C. = 653)
SI:LISP-TOP-LEVEL1:  (P.C. = 210)
SI:LISP-TOP-LEVEL2:  (P.C. = 27)
SI:PROCESS-TOP-LEVEL:  (P.C. = 125)
30-Nov-83 00:35:27-EST,1721;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 30 Nov 83 00:34-EST
Date: Wednesday, 30 November 1983, 00:37-EST
From: Scott Cyphers <SR.CYPHER at MIT-SPEECH>
Subject: dis:write-distribution-tape patch 222.256 bug
To: BUG-LISPM at OZ

In Release 4.5, Experimental Spire Macros 2.0, Experimental Compute 2.0,
Experimental Attribute 2.2, Experimental Audio 3.1,
Experimental Speech Attributes 2.0, Experimental Display 3.5,
Experimental Speech Layouts 2.1, site configuration 72, on Lisp Machine Yogi:

Patch SYSTEM-222-256 incorrectly binds NAME in the following function
(corrected here).  The patch directories use SYSTEM-NAME instead of
SYSTEM-SYMBOLIC-NAME, and so a (DEFSYSTEM SPIRE-MACROS ...) with a name
of "Spire Macros" could not be put on a distribution tape without this
change.

(defun get-dump-system-patch-info (dsys system &optional given-version)
  (let* ((pdir (si:system-patch-directory system))
	(name (string (si:system-name system)))
	(pn (si:patch-directory-pathname pdir))
	(version (or given-version (read-system-directory pdir pn name))))
    (setf (dump-system-patch-version dsys) version)
    (when version
      (let ((version-directory (read-version-directory pdir pn name version)))
	(setf (dump-system-status dsys) (first version-directory))	;pkg not important
	(loop with min and max
	      for (minor reason) in (second version-directory)
	      when (and reason ( minor 0))
	      do   (unless min (setq max minor min minor))
		   (setq min (min min minor) max (max max minor))
	      finally (setf (dump-system-lowest-patch dsys) min)
		      (setf (dump-system-highest-patch dsys) max)
		      (setf (dump-system-highest-possible-patch dsys) max))))))
30-Nov-83 06:13:50-EST,1018;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 30 Nov 83 06:13-EST
Date: Wednesday, 30 November 1983, 06:16-EST
From: Kent M Pitman <kmp at MIT-MC>
Subject: m-. and variables defined by DEFINE-USER-OPTION
To: BUG-LISPM at MC
Cc: KMP at MC

In Release 4.5, Knowledge-Based-Editor 221.24, site configuration 65,
Black Magic, on PA Lisp Machine Avatar:

m-. cannot find definitions of variables created by DEFINE-USER-OPTION
since ZWEI has sectionized such definitions wrong.

As an interim solution, allowing an alternate syntax for this macro
which is (DEFINE-USER-OPTION option alist default ...) would help.

Since I've seen no overt effort toward fixing the real problem (the
whole way function specs are currently organized/manipulated), I'm 
working on a coherent proposal which you'll see eventually. If, in
the meantime, anyone goes to implement something that proposes to be
a real solution along these lines, I'd appreciate it if they'd talk 
to me first so we don't work across purposes.
30-Nov-83 12:24:05-EST,244;000000000000
Received: from MIT-LENNON by MIT-OZ via Chaosnet; 30 Nov 83 12:22-EST
Date: Wednesday, 30 November 1983, 12:25-EST
From: Jerry Roylance <GLR at MIT-OZ>
Subject: No APPEND
To: BUG-LISPM at MIT-OZ


(OPEN FOO '(:APPEND)) does not exist

30-Nov-83 14:29:16-EST,566;000000000000
Received: from SCRC-YUKON by MIT-OZ via Chaosnet; 30 Nov 83 14:23-EST
Received: from SCRC-THAMES by SCRC-YUKON with CHAOS; Wed 30-Nov-83 14:13:48-EST
Date: Wed, 30 Nov 83 14:10 EST
From: Scott W McKay <SWM%SCRC-VIXEN@MIT-MC.ARPA>
Subject: No APPEND
To: GLR@MIT-OZ.ARPA, BUG-LISPM@MIT-OZ.ARPA
In-reply-to: The message of 30 Nov 83 12:25-EST from Jerry Roylance <GLR at MIT-OZ>

    Date: Wednesday, 30 November 1983, 12:25-EST
    From: Jerry Roylance <GLR at MIT-OZ>
    (OPEN FOO '(:APPEND)) does not exist
(open foo :direction :out :if-exists :append)
30-Nov-83 14:31:39-EST,1516;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 30 Nov 83 14:31-EST
Received: from SCRC-HARLEM by SCRC-QUABBIN with CHAOS; Wed 30-Nov-83 14:33:56-EST
Date: Wednesday, 30 November 1983, 14:30-EST
From: Joseph R Goldstone <joseph at SCRC-QUABBIN>
Subject: No APPEND
To: Jerry Roylance <GLR at MIT-AI>
Cc: BUG-LISPM at MIT-AI
In-reply-to: The message of 30 Nov 83 12:25-EST from Jerry Roylance <GLR at MIT-AI>

    Date: Wednesday, 30 November 1983, 12:25-EST
    From: Jerry Roylance <GLR at MIT-OZ>
    (OPEN FOO '(:APPEND)) does not exist

(open foo :if-exists :append).

see sec 2.1.16.3, "New open options: :if-exists and :if-does-not-exist",
documented in the Release 5.0 Release notes.  Be sure to look at either
the copy that Gumby shepherds for the 7th floor or one of the copies he
[should have by now] obtained / made.

Yes, I know it's ridiculous to refer you to documentation this way.  There
should be one copy of the Release 5.0 documentation on every desk at MIT,
right?  There are three copies for Tech Square; I gave two to Gumby, and
one to Steve Berlin.  Gumby was going to give one to someone at publications.
Now Alan tells me that's like throwing it away.  Fine.  Great.  Any better
ideas?  Four copies, one for each elevator?

-- joseph

[p.s. p.22 of the User Disk document (in the same binder) has examples of the
new-style options being used with WITH-OPEN-FILE.  there are probably more
examples in the same document; i just opened it to that one first.]
30-Nov-83 14:48:27-EST,867;000000000000
Received: from SCRC-YUKON by MIT-OZ via Chaosnet; 30 Nov 83 14:47-EST
Received: from SCRC-CHARLES by SCRC-YUKON with CHAOS; Wed 30-Nov-83 14:52:23-EST
Date: Wed, 30 Nov 83 14:49 EST
From: "David C. Plummer" <DCP%SCRC-TENEX@MIT-MC.ARPA>
Subject: (Not about) No APPEND
To: SWM%SCRC-VIXEN@MIT-MC.ARPA, GLR@MIT-OZ.ARPA, BUG-LISPM@MIT-OZ.ARPA
In-reply-to: The message of 30 Nov 83 14:10-EST from Scott W McKay <SWM at SCRC-VIXEN>

    Date: Wed, 30 Nov 83 14:10 EST
    From: Scott W McKay <SWM%SCRC-VIXEN@MIT-MC.ARPA>
	Date: Wednesday, 30 November 1983, 12:25-EST
	From: Jerry Roylance <GLR at MIT-OZ>
	(OPEN FOO '(:APPEND)) does not exist
    (open foo :direction :out :if-exists :append)
:direction :output.  :out is not Common Lispy and will hopefully go away
when we get our act together and drop some more compatibilities, often
for MacLisp's sake.
30-Nov-83 15:10:46-EST,1031;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 30 Nov 83 15:09-EST
Received: from SCRC-COLLIE by SCRC-QUABBIN with CHAOS; Wed 30-Nov-83 15:12:33-EST
Date: Wed, 30 Nov 83 15:09 EST
From: Mike McMahon <MMcM%SCRC-TENEX@MIT-MC.ARPA>
Subject: m-. and variables defined by DEFINE-USER-OPTION
To: Kent M Pitman <kmp@MIT-MC.ARPA>
Cc: BUG-LISPM@MIT-MC.ARPA
In-reply-to: The message of 30 Nov 83 06:16-EST from Kent M Pitman <kmp at MIT-MC>
Message-ID: <831130150913.4.MMcM@SCRC.SCRC.Symbolics>

    Date: Wednesday, 30 November 1983, 06:16-EST
    From: Kent M Pitman <kmp at MIT-MC>

    m-. cannot find definitions of variables created by DEFINE-USER-OPTION
    since ZWEI has sectionized such definitions wrong.

There is enough control in release 5 for this to work.

    Since I've seen no overt effort toward fixing the real problem (the
    whole way function specs are currently organized/manipulated), I'm 
    working on a coherent proposal which you'll see eventually.

This would be welcomed nevertheless.
30-Nov-83 20:05:58-EST,3153;000000000000
Received: from MIT-MORRISON by MIT-OZ via Chaosnet; 30 Nov 83 20:05-EST
Date: Wednesday, 30 November 1983, 20:05-EST
From: Daniel Weise <daniel at SCRC|DM>
Subject: SCRC|DM problems
To: BUG-LISPM at MIT-OZ

In Release 5.0 [GC'd Beta Test rev 3], dusty plum, on Lisp Machine Jim Morrison (3600):

I wanted to change my home and mail host to from OZ to MC.  So I logged in,
did (load ":ps:<moon>fix-mc"), (tv:edit-namespace-object), changed those
two fields, moused SAVE, then this happened.

Also, I can't mail this report via END (it just goes into LOCK).  Right
now I am trying aborting from error then typing END.

>>Error: Error from server: No object named SCRC|DM of class HOST was found.
While in the function NET:UPDATE-OBJECT-PERMANENTLY  (:DEFUN-METHOD TV:PERFORM-COMMAND)  (:METHOD TV:NAMESPACE-EDITOR-FRAME :TOP-LEVEL)

NET:UPDATE-OBJECT-PERMANENTLY:  (P.C. = 172)
   Arg 0 (CLASS): #<CLASS USER 12415256>
   Arg 1 (NAMESPACE): #<NAMESPACE MIT 12334060>
   Arg 2 (NAME): #<NAME MIT|DANIEL 3006357>
   Arg 3 (PROPERTY-LIST): (:PERSONAL-NAME "Daniel Weise" :LISPM-NAME "DANIEL" :HOME-HOST #<ITS-HOST SCRC|DM 12541035> :MAIL-ADDRESS ("daniel" #<ITS-HOST SCRC|DM 12541035>) :LOGIN-NAME (("DANIEL" #<TOPS20-HOST OZ 12536514>) ("DANIEL" #<TOPS20-HOST EECS 12551540>) ("dpl.daniel" #<TOPS20-HOST SPEECH 12553374>) ("daniel" #<ITS-HOST SCRC|DM 12541035>) ("daniel" #<TOPS20-HOST MITXX 12553454>) ("daniel" #<UNIX-HOST PREP 12545223>) ("daniel" #<ITS-HOST MITML 12543723>) ("daniel" #<VMS-HOST PYGMALION 12551524>)) ...)
   Local 4 (.ME-P.): T
   Local 5 (.CLOSE-MODE.): :ABORT
   Local 6: #<DTP-LOCATIVE 3023437>
   Local 7: SYS:UNWIND-PROTECT-TAG
   Local 8: #<DTP-EVEN-PC 46310316>
   Local 9: #<DTP-LOCATIVE 3023445>
   Local 10: #<DTP-LOCATIVE 43440064>
   Local 11 (.CELL.): #<DTP-LOCATIVE 12334061>
   Local 12 (.LOCK-P.): :LOCKED
   Local 13: SYS:UNWIND-PROTECT-TAG
   Local 14: #<DTP-EVEN-PC 46310322>
   Local 15: #<DTP-LOCATIVE 3023445>
   Local 16: #<DTP-LOCATIVE 43440133>
   Local 17 (OBJECT): #<USER DANIEL 3007330>
   Local 18 (STREAM): #<CHARACTER-STREAM 3606044>
   Local 19 (*NAMESPACE*-initialization): #<NAMESPACE MIT 12334060>
   Local 20 (*NAMESPACE-SEARCH-LIST*-initialization): (#<NAMESPACE MIT 12334060>)
   Local 21 (RECORD): (("ERROR" "No object named SCRC|DM of class HOST was found."))
   Local 22 (*SELECTQ-ITEM*): "ERROR"

(:DEFUN-METHOD TV:PERFORM-COMMAND):  (P.C. = 444)
   Arg 0 (SELF): #<NAMESPACE-EDITOR-FRAME Namespace Editor 1 2240000 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:NAMESPACE-EDITOR-FRAME -- 15. IV's, 12. FL's 27615632>
   Arg 2 (CH): 115

(:METHOD TV:NAMESPACE-EDITOR-FRAME :TOP-LEVEL):  (P.C. = 120)
   Arg 0 (SELF): #<NAMESPACE-EDITOR-FRAME Namespace Editor 1 2240000 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:NAMESPACE-EDITOR-FRAME -- 15. IV's, 12. FL's 27615632>
   Arg 2 (OPERATION): :TOP-LEVEL

TV:START-NAMESPACE-EDITOR:  (P.C. = 4)
   Arg 0 (WINDOW): #<NAMESPACE-EDITOR-FRAME Namespace Editor 1 2240000 exposed>

SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
   --Defaulted args:--
   Arg 0 (IGNORE): NIL
30-Nov-83 20:19:25-EST,740;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 30 Nov 83 20:18-EST
Date: Wednesday, 30 November 1983, 19:51-EST
From: KMP at MIT-MC
Sender: CStacy at MIT-MC
Subject: Hackish demos
To: BUG-LISPM at OZ

In HACKS:DEMO in Symbolics Release 4.5, site configuration 75, 
on Lisp Machine Robot-3 (3600):

The Munching Squares demo claims that Network through \ will control
the console switches. This should say something different for the 3600
keyboard. As it happens, the keys out from Network (eg, digits) do 
have an effect but the effect feels random if you expect it to be
complementing individual switches... Once I figured out what was going
on, it was ok, but it doesn't make an impressive demonstration of your
system...
30-Nov-83 22:23:27-EST,1399;000000000000
Received: from SCRC-TENEX by MIT-OZ via Chaosnet; 30 Nov 83 22:23-EST
Received: from SCRC-EUPHRATES by SCRC-TENEX with CHAOS; Wed 30-Nov-83 22:22:04-EST
Date: Wednesday, 30 November 1983, 22:24-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: SCRC|DM problems
To: Daniel Weise <daniel at MIT-MC>
Cc: BUG-LISPM at MIT-OZ
In-reply-to: The message of 30 Nov 83 20:05-EST from Daniel Weise <daniel at SCRC|DM>

    Date: Wednesday, 30 November 1983, 20:05-EST
    From: Daniel Weise <daniel@SCRC|DM>

    In Release 5.0 [GC'd Beta Test rev 3], dusty plum, on Lisp Machine Jim Morrison (3600):

    I wanted to change my home and mail host to from OZ to MC.  So I logged in,
    did (load ":ps:<moon>fix-mc"), (tv:edit-namespace-object), changed those
    two fields, moused SAVE, then this happened.

    Also, I can't mail this report via END (it just goes into LOCK).  Right
    now I am trying aborting from error then typing END.

    >>Error: Error from server: No object named SCRC|DM of class HOST was found.
    While in the function NET:UPDATE-OBJECT-PERMANENTLY

Yeah, I guess I didn't do a good enough job on that patch file.  It only worked
on the machine I tested it on.  Okay, I fixed it up and tested it on Jimi Hendrix,
which seemed (like Jim Morrison) to be one of the ones that was more screwed up.
Try it again.

The real solution will arrive soon.
 1-Dec-83 00:02:55-EST,1004;000000000000
Received: from MIT-APIARY-7 by MIT-OZ via Chaosnet; 1 Dec 83 00:01-EST
Date: Thursday, 1 December 1983, 00:04-EST
From: Henry Lieberman <Henry at MIT-OZ>
Subject: In case of emergency, break glass
To: Gregor J Kiczales <Gregor%SCRC-TENEX at MIT-MC>
Cc: Bug-Lispm at MIT-OZ, Weld at MIT-OZ
In-reply-to: The message of 30 Nov 83 22:11-EST from Gregor J Kiczales <Gregor%SCRC-TENEX at MIT-MC>


        From: Henry Lieberman <Henry at MIT-OZ>
        I wrote a new version of the old (SALVAGE-EDITOR) function, 

    Why is this better than (zwei:save-all-files)? It certainly is not as
    useful as real salvage-editor since that works when the machine is
    crashed.

I wrote it originally to help Dan Weld, whose machine had wedged so
badly that (ZWEI:SAVE-ALL-FILES) couldn't use the Chaosnet. I thought that this
might be useful to others. You're right, though, we could use a real 
(SALVAGE-EDITOR) that worked from another machine over the net. What are 
the chances of it? 

 1-Dec-83 00:46:34-EST,550;000000000000
Received: from MIT-APIARY-7 by MIT-OZ via Chaosnet; 1 Dec 83 00:46-EST
Date: Thursday, 1 December 1983, 00:49-EST
From: Henry Lieberman <Henry at MIT-OZ>
Subject: Proceed types for undefined function
To: BUG-LISPM at MIT-OZ

In Release 5.0 [GC'd Beta Test rev 3], dusty plum, on Lisp Machine Apiary-7 (3600):

In the case that package-dwim finds a single alternative, I find it almost always 
is the right thing. Since it is so common, I'd prefer that the Resume key choose
that proceed option, rather than the inconvenient Super-D.



 1-Dec-83 01:23:12-EST,1528;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 1 Dec 83 01:22-EST
Received: from SCRC-EUPHRATES by SCRC-YUKON with CHAOS; Thu 1-Dec-83 01:27:27-EST
Date: Thu, 1 Dec 83 01:27 EST
From: "David A. Moon" <Moon%SCRC-TENEX@MIT-MC.ARPA>
Subject: Merlin stopped itself.
To: Kent M Pitman <kmp@MIT-MC.ARPA>
Cc: BUG-LISPM@MIT-MC.ARPA, joseph%SCRC-VIXEN@MIT-MC.ARPA,
    smurf%SCRC-VIXEN@MIT-MC.ARPA, KBE-I%MIT-OZ@MIT-MC.ARPA
In-reply-to: The message of 29 Nov 83 05:43-EST from Kent M Pitman <kmp at MIT-MC>

    Date: Tuesday, 29 November 1983, 05:43-EST
    From: Kent M Pitman <kmp at MIT-MC>

    In Symbolics Release 4.5, Knowledge-Based-Editor 221.1, 
    site configuration 65, Black Magic, on PA Lisp Machine Merlin (3600):

    My machine just died again without warning....
      Fep>show status
      FEP Lbug control: Use Uncorrected Data, Ignore Double ECC Error
      Sequencer status: MC-error (map, ifu, or main mem), TSK-STOP (sequencer stopped), Errhalt-sync
      MC status: ADDR-IN-AMEM 0, VMA-MD-OFFSET 1, VMA-FOR-MD-0 1, IFU-EMPTY 0
      MC Error status: Double bit error
      ECC syndrome 70, address 7xxxxx3

That's a non-existent memory reference to Lbus slot 3 (7 divided by 2).
Is there a board in that slot?  [Syndrome 70 means nonexistent memory
reference, see Appendix B of Front End Processor, which documents the
Show Status command.]

Yeah, I dunno, maybe there was a release 4 bug like this.  Anyway it's
unlikely to be the I/O board, although it could be other hardware.
 1-Dec-83 01:49:17-EST,1394;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 1 Dec 83 01:48-EST
Received: from SCRC-AMSTEL by SCRC-QUABBIN with CHAOS; Thu 1-Dec-83 01:51:21-EST
Date: Thu, 1 Dec 83 01:50 EST
From: "Wayne E. Matson" <Matson@SCRC-TENEX>
Subject: In case of emergency, break glass
To: Henry@MIT-OZ.ARPA, Gregor%SCRC-TENEX@MIT-MC.ARPA
Cc: Bug-Lispm@MIT-OZ.ARPA, Weld@MIT-OZ.ARPA
In-reply-to: The message of 1 Dec 83 00:04-EST from Henry Lieberman <Henry at MIT-OZ>

    Date: Thursday, 1 December 1983, 00:04-EST
    From: Henry Lieberman <Henry at MIT-OZ>
	    From: Henry Lieberman <Henry at MIT-OZ>
	    I wrote a new version of the old (SALVAGE-EDITOR) function, 

	Why is this better than (zwei:save-all-files)? It certainly is not as
	useful as real salvage-editor since that works when the machine is
	crashed.

    I wrote it originally to help Dan Weld, whose machine had wedged so
    badly that (ZWEI:SAVE-ALL-FILES) couldn't use the Chaosnet. I thought that this
    might be useful to others. You're right, though, we could use a real 
    (SALVAGE-EDITOR) that worked from another machine over the net. What are 
    the chances of it? 

It's hard, but I expect that either Moon or I will write the FEP code for it sometime
around early March.  (By then, if all goes according to plan, FEP programs will be
loadable.)

You won't need another machine or a network.
 1-Dec-83 02:18:35-EST,1017;000000000000
Received: from SCRC-TENEX by MIT-OZ via Chaosnet; 1 Dec 83 02:18-EST
Received: from SCRC-EUPHRATES by SCRC-TENEX with CHAOS; Thu 1-Dec-83 01:38:19-EST
Date: Thursday, 1 December 1983, 01:40-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: Proceed types for undefined function
To: Henry Lieberman <Henry at MIT-OZ>
Cc: BUG-LISPM at MIT-OZ
In-reply-to: The message of 1 Dec 83 00:49-EST from Henry Lieberman <Henry at MIT-OZ>

    Date: Thursday, 1 December 1983, 00:49-EST
    From: Henry Lieberman <Henry at MIT-OZ>

    In Release 5.0 [GC'd Beta Test rev 3], dusty plum, on Lisp Machine Apiary-7 (3600):

    In the case that package-dwim finds a single alternative, I find it almost always 
    is the right thing. Since it is so common, I'd prefer that the Resume key choose
    that proceed option, rather than the inconvenient Super-D.

I think this is a good idea, although I would want to run with it for a while
before agreeing that it was so good as to be worth the incompatibility.
 1-Dec-83 08:42:51-EST,1348;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 1 Dec 83 08:42-EST
Received: from SCRC-CONCORD by SCRC-QUABBIN with CHAOS; Thu 1-Dec-83 08:45:20-EST
Date: Thursday, 1 December 1983, 08:42-EST
From: Bernard S. Greenberg <BSG at SCRC-TENEX>
Subject: Proceed types for undefined function
To: Moon at SCRC-TENEX, Henry at MIT-OZ
Cc: BUG-LISPM at MIT-OZ
In-reply-to: The message of 1 Dec 83 01:40-EST from David A. Moon <Moon at SCRC-TENEX>

    Date: Thursday, 1 December 1983, 01:40-EST
    From: David A. Moon <Moon at SCRC-TENEX>
	Date: Thursday, 1 December 1983, 00:49-EST
	From: Henry Lieberman <Henry at MIT-OZ>
	In Release 5.0 [GC'd Beta Test rev 3], dusty plum, on Lisp Machine Apiary-7 (3600):

	In the case that package-dwim finds a single alternative, I find it almost always 
	is the right thing. Since it is so common, I'd prefer that the Resume key choose
	that proceed option, rather than the inconvenient Super-D.

    I think this is a good idea, although I would want to run with it for a while
    before agreeing that it was so good as to be worth the incompatibility.
No.  Given the reason we have packages, often I get FOO undefined because I forgot to
define, or misnamed FOO, not because there is an SI:FOO.   Thus, defining FOO
somewhere and typing <resume> is about as common for me as c-sh-P/s-D.
 1-Dec-83 11:15:41-EST,1339;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 1 Dec 83 11:13-EST
Received: from SCRC-CHARLES by SCRC-QUABBIN with CHAOS; Thu 1-Dec-83 10:51:30-EST
Date: Thu, 1 Dec 83 10:50 EST
From: "David C. Plummer" <DCP%SCRC-TENEX@MIT-MC.ARPA>
Subject: In case of emergency, break glass
To: Henry@MIT-OZ.ARPA
Cc: Gregor%SCRC-TENEX@MIT-MC.ARPA, Matson%SCRC-TENEX@MIT-MC.ARPA,
    Bug-Lispm@MIT-OZ.ARPA, Weld@MIT-OZ.ARPA
In-reply-to: The message of 1 Dec 83 00:04-EST from Henry Lieberman <Henry at MIT-OZ>,
             The message of 1 Dec 83 01:50-EST from Wayne E. Matson <Matson at SCRC-TENEX>


	I wrote it originally to help Dan Weld, whose machine had wedged so
	badly that (ZWEI:SAVE-ALL-FILES) couldn't use the Chaosnet. I thought that this
	might be useful to others. You're right, though, we could use a real 
	(SALVAGE-EDITOR) that worked from another machine over the net. What are 
	the chances of it? 

    It's hard, but I expect that either Moon or I will write the FEP code for it sometime
    around early March.  (By then, if all goes according to plan, FEP programs will be
    loadable.)

    You won't need another machine or a network.

Not only that, but what Gregor meant was "dead, kaput, non-functional,
won't warm boot."  Under these conditions the machine can't talk to the
network anyway.
 1-Dec-83 16:37:28-EST,1373;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 1 Dec 83 16:35-EST
Received: from SCRC-EUPHRATES by SCRC-QUABBIN with CHAOS; Thu 1-Dec-83 15:35:57-EST
Date: Thursday, 1 December 1983, 15:34-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: Proceed types for undefined function
To: David A. Moon <Moon at SCRC-TENEX>
Cc: Henry Lieberman <Henry at MIT-OZ>, BUG-LISPM at MIT-OZ
In-reply-to: The message of 1 Dec 83 01:40-EST from David A. Moon <Moon at SCRC-TENEX>

    Date: Thursday, 1 December 1983, 01:40-EST
    From: David A. Moon <Moon at SCRC-TENEX>

	Date: Thursday, 1 December 1983, 00:49-EST
	From: Henry Lieberman <Henry at MIT-OZ>

	In the case that package-dwim finds a single alternative, I find it almost always 
	is the right thing. Since it is so common, I'd prefer that the Resume key choose
	that proceed option, rather than the inconvenient Super-D.

    I think this is a good idea, although I would want to run with it for a while
    before agreeing that it was so good as to be worth the incompatibility.

But, then again, I -always- invoke package-dwim with c-sh-P rather than super-D
(or whichever super key it happens to show up on).  The reason is that it is
always safe to type c-sh-P ahead, since if package dwim turns out not to be
offered nothing bad will happen.  It would be less safe to type Resume ahead.
 1-Dec-83 17:26:06-EST,765;000000000000
Received: from SCRC-YUKON by MIT-OZ via Chaosnet; 1 Dec 83 17:25-EST
Received: from SCRC-EUPHRATES by SCRC-YUKON with CHAOS; Thu 1-Dec-83 15:41:07-EST
Date: Thursday, 1 December 1983, 15:37-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: In case of emergency, break glass
To: Bug-Lispm at MIT-OZ.ARPA, Weld at MIT-OZ.ARPA
References: The message of 1 Dec 83 01:50-EST from Wayne E. Matson <Matson at SCRC-TENEX>

By the way, the enclosed is not a promise of a product nor a commitment
to any specific schedule.  Hopefully you already knew that.

    Date: Thu, 1 Dec 83 01:50 EST
    From: "Wayne E. Matson" <Matson@SCRC-TENEX>

    It's hard, but I expect that either Moon or I will write the FEP code for it sometime
    around early March.
 1-Dec-83 23:32:22-EST,332;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 1 Dec 83 23:31-EST
Date: Thursday, 1 December 1983, 23:35-EST
From: David Vinayak Wallace <Gumby at MIT-MC>
Subject: copying instances
To: BUG-LISPM at MIT-AI

In Release 5.0 [GC'd Beta Test rev 3], dusty plum, on Lisp Machine Jimi Hendrix (3600):

How can I copy an instance?
 2-Dec-83 00:43:22-EST,1126;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 2 Dec 83 00:42-EST
Received: from SCRC-BLACKSTONE by SCRC-QUABBIN with CHAOS; Thu 1-Dec-83 22:55:32-EST
Date: Thu, 1 Dec 83 22:51 EST
From: Philip Greenspun <philg%SCRC-VIXEN@MIT-MC.ARPA>
Subject: Hackish demos
To: KMP@MIT-MC.ARPA
Cc: BUG-LISPM@MIT-OZ.ARPA, philg%SCRC-VIXEN@MIT-MC.ARPA
In-reply-to: The message of 30 Nov 83 19:51-EST from KMP at MIT-MC

    Date: Wednesday, 30 November 1983, 19:51-EST
    From: KMP at MIT-MC
    In HACKS:DEMO in Symbolics Release 4.5, site configuration 75, 
    on Lisp Machine Robot-3 (3600):

    The Munching Squares demo claims that Network through \ will control
    the console switches. This should say something different for the 3600
    keyboard. As it happens, the keys out from Network (eg, digits) do 
    have an effect but the effect feels random if you expect it to be
    complementing individual switches... Once I figured out what was going
    on, it was ok, but it doesn't make an impressive demonstration of your
    system...

Fixed in source (Release 6, alas).  Thanks for the bug report.
 2-Dec-83 07:12:04-EST,1020;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 2 Dec 83 07:11-EST
Date: Friday, 2 December 1983, 07:16-EST
From: Christopher C. Stacy <CStacy at MIT-MC>
To: BUG-LISPM at MIT-AI

In Release 5.0 [GC'd Beta Test rev 3], Dusty plum, on Lisp Machine John Lennon (3600):

I tried to make TREMONT-VIA-MC the default printer for the MIT site.
When I clicked on Save, my machine contacted LM15, then OZ (where it
made me log in), then MC (where it loaded the FONTS WIDTH file), and
then went back to LM15 and complained at me that "Login required for
host OZ".  Does this have something to do with only being allowed to
munge the site object from a primary namespace server at the site?

Unfortunately, in a series of complicated flitting between windows, my
machine became very wedged and I could not send the message.  My ZMAIL
even got trashed somehow, and eventually I had to cold boot.

Yow! I am DEEPLY concerned and want something GOOD for BREAKFAST!
Are the STEWED PRUNES still in the HAIR DRYER !?!

 2-Dec-83 08:37:11-EST,969;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 2 Dec 83 08:36-EST
Received: from SCRC-CHICOPEE by SCRC-QUABBIN with CHAOS; Fri 2-Dec-83 08:41:41-EST
Date: Fri, 2 Dec 83 08:40 EST
From: "Daniel L. Weinreb" <DLW%SCRC-TENEX@MIT-MC.ARPA>
Subject: Proceed types for undefined function
To: BSG%SCRC-TENEX@MIT-MC.ARPA, Moon%SCRC-TENEX@MIT-MC.ARPA,
    Henry@MIT-OZ.ARPA
Cc: BUG-LISPM@MIT-OZ.ARPA
In-reply-to: The message of 1 Dec 83 08:42-EST from Bernard S. Greenberg <BSG at SCRC-TENEX>

    Date: Thursday, 1 December 1983, 08:42-EST
    From: Bernard S. Greenberg <BSG at SCRC-TENEX>
    No.  Given the reason we have packages, often I get FOO undefined because I forgot to
    define, or misnamed FOO, not because there is an SI:FOO.   Thus, defining FOO
    somewhere and typing <resume> is about as common for me as c-sh-P/s-D.
I agree with this; it would make <resume> highly unpredictable, which is undesirable
from a user interface standpoint.
 2-Dec-83 11:08:32-EST,4370;000000000000
Received: from MIT-MOON by MIT-OZ via Chaosnet; 2 Dec 83 11:08-EST
Date: Friday, 2 December 1983, 11:12-EST
From: JCMA@MIT-OZ
Subject: bombed out sentence
To: BUG-LISPM@MIT-OZ

In Release 5.0 [GC'd Beta Test rev 3], Experimental RELATUS 48.0,
dusty plum, on Lisp Machine Keith Moon (3600):

Losing sentence follows

>>Error: Don't understand the usage of BARKING.
While in the function (:METHOD VERBAL :FILL-VERB-AND-TENSE-INTERNAL)  (:METHOD VERBAL :FILL-VERB-AND-TENSE)  (:METHOD TRANSFORM-KERN-SENTENCE-MIXIN :MAKE-VERBAL)

(:METHOD VERBAL :FILL-VERB-AND-TENSE-INTERNAL):  (P.C. = 133)  (from RL: LEXIS; TEMPLATES)
   Arg 0 (SELF): #<VERBAL 60333221>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor VERBAL -- 10. IV's, 0. FL's 20074572>
   Arg 2 (OPERATION): :FILL-VERB-AND-TENSE-INTERNAL
   Arg 3 (VERB-TOKEN): BARKING
   Arg 4 (PARTS): (VB DA)
   Local 5 (SYNTAX-LIST): (BARKED BARKING BARKED BARKS T TO UNERG NIL)
   Local 6 (ROOT): BARK
   Local 7 (LISTING): ((VB-SYNTAX BARKED BARKING BARKED BARKS T TO UNERG NIL) (N-FORM BARKING) (N-MEANING "THE SOUND MADE BY A BARKING DOG." "THE TOUGH CORKY OUTER COVERING OF A WOODY STEM OR ROOT." "A 3-MASTED SHIP WITH FOREMAST AND MAINMAST SQUARE-RIGGED.") (N-PLURAL BARKS) (VB-MEANING "TO MAKE THE CHARACTERISTIC SHORT SHARP CRY OF A DOG." "TO SPEAK OR UTTER IN A CURT LOUD TONE." "TO STRIP THE BARK FROM." "TO RUB THE SKIN FROM.") (PART-OF-SPEECH VB N) (VB-SYNONYM SNAP ABRADE))
   Local 8 (INDIRECTION): (BARK)
   Local 9 (AUXES): NIL

(:METHOD VERBAL :FILL-VERB-AND-TENSE):  (P.C. = 32)  (from RL: LEXIS; TEMPLATES)
   Arg 0 (SELF): #<VERBAL 60333221>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor VERBAL -- 10. IV's, 0. FL's 20074572>
   Arg 2 (OPERATION): :FILL-VERB-AND-TENSE
   Arg 3 (VERB-TOKEN): BARKING
   Arg 4 (PARTS): (VB DA)

(:METHOD TRANSFORM-KERN-SENTENCE-MIXIN :MAKE-VERBAL):  (P.C. = 212)  (from RL: LEXIS; KERNS)
   Arg 0 (SELF): #<KERN 60333112>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TRANSFORM-KERN-SENTENCE-MIXIN -- 3. IV's, 0. FL's 20065631>
   Arg 2 (OPERATION): :MAKE-VERBAL
   Arg 3 (TEMPLATE-LIST): (#<NOMINAL 60333166>)
   Arg 4 (WORDS): (BARKING THE)
   Arg 5 (PARTS): (VB DA)

(:METHOD TRANSFORM-KERN-SENTENCE-MIXIN :DEPLOY-TEMPLATES):  (P.C. = 61)  (from RL: LEXIS; KERNS)
   Arg 0 (SELF): #<KERN 60333112>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TRANSFORM-KERN-SENTENCE-MIXIN -- 3. IV's, 0. FL's 20065631>
   Arg 2 (OPERATION): :DEPLOY-TEMPLATES

MAKE-ADJECTIVE-IN-NOMINAL:  (P.C. = 33)  (from RL: LEXIS; KERNS)
   Arg 0 (TEMPLATE-LIST): NIL
   Arg 1 (WORDS): (#<KERN 60333112> DOG *OF* THE GREEDY MAN BIT THE UNFORTUNATE POSTMAN)
   Arg 2 (PARTS): (AJ N PP DA AJ N VB DA AJ N)
   Arg 3 (TEMPLATE): #<NOMINAL 60333156>
   Arg 4 (NOUN-FLAG): NIL

(:METHOD TRANSFORM-KERN-SENTENCE-MIXIN :MAKE-NOMINAL):  (P.C. = 150)  (from RL: LEXIS; KERNS)
   Arg 0 (SELF): #<SENTENCE 60327450>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TRANSFORM-KERN-SENTENCE-MIXIN -- 3. IV's, 0. FL's 20072316>
   Arg 2 (OPERATION): :MAKE-NOMINAL
   Arg 3 (TEMPLATE-LIST): NIL
   Arg 4 (WORDS): (THE #<KERN 60333112> DOG *OF* THE GREEDY MAN BIT THE UNFORTUNATE ...)
   Arg 5 (PARTS): (DA AJ N PP DA AJ N VB DA AJ ...)

(:METHOD TRANSFORM-KERN-SENTENCE-MIXIN :DEPLOY-TEMPLATES):  (P.C. = 121)  (from RL: LEXIS; KERNS)
   Arg 0 (SELF): #<SENTENCE 60327450>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TRANSFORM-KERN-SENTENCE-MIXIN -- 3. IV's, 0. FL's 20072316>
   Arg 2 (OPERATION): :DEPLOY-TEMPLATES

PROCESS:  (P.C. = 160)  (from RL: LEXIS; LEXIS)
   Arg 0 (SENTENCE): (*DECLARATIVE* THE GREEDY (MAN POSS) DOG *COMMA* WHICH WAS BARKING *COMMA* ...)
   Arg 1 (SOURCE): DPH
   Arg 2 (REPARSE): NIL
   Arg 3 (STRING-FOR-PARSING): "THE GREEDY MAN'S DOG, WHICH WAS BARKING, BIT THE UNFORTUNATE POSTMAN."

Rest of stack:
(:METHOD BELIEF-SYSTEM-IO-MIXIN :PARSE):  (P.C. = 105)  (from RL: GNOSCERE; IO-MIXIN)
ZWEI:READ-AND-PARSE-SENTENCES-IN-REGION:  (P.C. = 45)  (from RL: UTILS; RELATUS-ZWEI)
ZWEI:COM-PARSE-REGION:  (P.C. = 175)  (from RL: UTILS; RELATUS-ZWEI)
ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 200)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 41)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
 2-Dec-83 12:30:24-EST,2326;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 2 Dec 83 12:27-EST
Received: from SCRC-HARLEM by SCRC-QUABBIN with CHAOS; Fri 2-Dec-83 12:32:28-EST
Date: Friday, 2 December 1983, 12:31-EST
From: Joseph R Goldstone <joseph at SCRC-QUABBIN>
Subject: bombed out sentence
To: JCMA at MIT-AI
Cc: BUG-LISPM at MIT-AI
In-reply-to: The message of 2 Dec 83 11:12-EST from JCMA at MIT-AI

    Date: Friday, 2 December 1983, 11:12-EST
    From: JCMA@MIT-OZ
    In Release 5.0 [GC'd Beta Test rev 3], Experimental RELATUS 48.0,
    dusty plum, on Lisp Machine Keith Moon (3600):

    Losing sentence follows

    >>Error: Don't understand the usage of BARKING.
    While in the function (:METHOD VERBAL :FILL-VERB-AND-TENSE-INTERNAL)  (:METHOD VERBAL :FILL-VERB-AND-TENSE)  (:METHOD TRANSFORM-KERN-SENTENCE-MIXIN :MAKE-VERBAL)

    (:METHOD VERBAL :FILL-VERB-AND-TENSE-INTERNAL):  (P.C. = 133)  (from RL: LEXIS; TEMPLATES)
       Arg 0 (SELF): #<VERBAL 60333221>
       Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor VERBAL -- 10. IV's, 0. FL's 20074572>
       Arg 2 (OPERATION): :FILL-VERB-AND-TENSE-INTERNAL
       Arg 3 (VERB-TOKEN): BARKING
       Arg 4 (PARTS): (VB DA)
       Local 5 (SYNTAX-LIST): (BARKED BARKING BARKED BARKS T TO UNERG NIL)
       Local 6 (ROOT): BARK
       Local 7 (LISTING): ((VB-SYNTAX BARKED BARKING BARKED BARKS T TO UNERG NIL) (N-FORM BARKING) (N-MEANING "THE SOUND MADE BY A BARKING DOG." "THE TOUGH CORKY OUTER COVERING OF A WOODY STEM OR ROOT." "A 3-MASTED SHIP WITH FOREMAST AND MAINMAST SQUARE-RIGGED.") (N-PLURAL BARKS) (VB-MEANING "TO MAKE THE CHARACTERISTIC SHORT SHARP CRY OF A DOG." "TO SPEAK OR UTTER IN A CURT LOUD TONE." "TO STRIP THE BARK FROM." "TO RUB THE SKIN FROM.") (PART-OF-SPEECH VB N) (VB-SYNONYM SNAP ABRADE))
       Local 8 (INDIRECTION): (BARK)
       Local 9 (AUXES): NIL

At present, LM-2's can be used to debug 3600's [at least at Symbolics] but not vice-versa.
Thus, there was no way that your machine could understand the LM-2's BRD request for help,
i.e. "...THE CHARACTERISTIC SHORT SHARP CRY OF A DOG."  3600's will understand BARKING
when the new FEP overlay scheme allows us to write the appropriate parallel interface code.
[this should not be construed as a commitment or a disclosure of a schedule for a feature.]

-- joseph
 2-Dec-83 12:37:56-EST,999;000000000000
Mail-From: GAVAN created at  2-Dec-83 12:37:02
Date: Fri, 2 Dec 1983  12:37 EST
Message-ID: <GAVAN.11972308903.BABYL@MIT-OZ>
From: GAVAN@MIT-OZ
To:   JCMA@MIT-OZ
Cc:   BUG-LISPM@MIT-OZ
Subject: bombed out sentence
In-reply-to: Msg of 2 Dec 1983 11:12-EST from JCMA

    Date: Friday, 2 December 1983, 11:12-EST
    From: JCMA
    To:   BUG-LISPM
    Re:   bombed out sentence

    In Release 5.0 [GC'd Beta Test rev 3], Experimental RELATUS 48.0,
    dusty plum, on Lisp Machine Keith Moon (3600):

    Losing sentence follows

    >>Error: Don't understand the usage of BARKING.
    While in the function (:METHOD VERBAL :FILL-VERB-AND-TENSE-INTERNAL)  (:METHOD VERBAL :FILL-VERB-AND-TENSE)  (:METHOD TRANSFORM-KERN-SENTENCE-MIXIN :MAKE-VERBAL)

The sentence was:
 "THE GREEDY MAN'S DOG, WHICH WAS BARKING, BIT THE UNFORTUNATE POSTMAN."

Commas aren't yet hacked for relative clauses.  Remove the commas and it should
work (assuming the vb-syntax for bark is correct).
 2-Dec-83 14:09:50-EST,766;000000000000
Received: from SCRC-TENEX by MIT-OZ via Chaosnet; 2 Dec 83 14:09-EST
Date:  2 Dec 1983 1256-EST
From: Mike McMahon <MMcM@SCRC-TENEX>
To: CStacy@MIT-MC
cc: BUG-LISPM@MIT-OZ, bug-beta-test@SCRC-YUKON
In-Reply-To: The message of Friday, 2 December 1983, 07:16-EST from Christopher C. Stacy <CStacy at MIT-MC>

If you want to edit the site object, you need to do so on LM15 itself
because it will try to login to OZ.  A bug makes logging in from a namespace
server not work.  It was fixed, but isn't in the beta test world.

I'm pretty sure that you won't get the right fonts.widths even after the
site object is fixed because of patches to the hardcopy system that aren't
in the beta test world.  Did si:set-default-hardcopy-device work with it?
-------
 2-Dec-83 15:07:06-EST,441;000000000000
Mail-From: GAVAN created at  2-Dec-83 15:06:23
Date: Fri, 2 Dec 1983  15:06 EST
Message-ID: <GAVAN.11972336093.BABYL@MIT-OZ>
From: GAVAN@MIT-OZ
To:   BUG-LISPM@MIT-OZ
Subject: Asleep at the wheel

1000 apologies for the recent BUG-LISPM mail which should not have
been sent to BUG-LISPM.  Steps are being taken to rectify the problem
so that bug-reports will go to the right place no matter how drowsy
the operator happens to be.
 2-Dec-83 18:10:12-EST,501;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 2 Dec 83 18:09-EST
Date: Friday, 2 December 1983, 16:49-EST
From: Robert H. Kassel <sr.rob at MIT-SPEECH>
Subject: bug in SUPDUP
To: BUG-LISPM at mc

In Release 4.5, site configuration 65, on Lisp Machine Grizzly: (3600)

Supdup graphics don't always work on 3600's.  It seems that making the
supdup window LM2-size resolves the problem.  I would send you a bug
report with the debugger information, but the debugger seems to lock.

					ROB
 2-Dec-83 18:10:52-EST,1040;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 2 Dec 83 18:09-EST
Received: from SCRC-CHARLES by SCRC-QUABBIN with CHAOS; Fri 2-Dec-83 17:04:39-EST
Date: Fri, 2 Dec 83 17:03 EST
From: "David C. Plummer" <DCP%SCRC-TENEX@MIT-MC.ARPA>
Subject: bug in SUPDUP
To: sr.rob%MIT-SPEECH@MIT-MC.ARPA, BUG-LISPM@MIT-MC.ARPA
In-reply-to: The message of 2 Dec 83 16:49-EST from Robert H. Kassel <sr.rob at MIT-SPEECH>

    Date: Friday, 2 December 1983, 16:49-EST
    From: Robert H. Kassel <sr.rob at MIT-SPEECH>
    In Release 4.5, site configuration 65, on Lisp Machine Grizzly: (3600)

    Supdup graphics don't always work on 3600's.  It seems that making the
    supdup window LM2-size resolves the problem.  I would send you a bug
    report with the debugger information, but the debugger seems to lock.

In what way(s) doesn't it always work?  Is it reproducible?  

I've had a couple cases where it tries to send a message name of NIL,
but I can't reprocude it easily.  Are you CERTAIN making it LM2 size
fixes the problem?
 2-Dec-83 18:11:08-EST,1403;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 2 Dec 83 18:09-EST
Date: Fri, 2 Dec 1983  17:08 EST
Message-ID: <SR.ROB.11972358325.BABYL@MIT-SPEECH>
From: SR.ROB%MIT-SPEECH@MIT-MC.ARPA
To:   "David C. Plummer" <DCP%SCRC-TENEX@MIT-MC.ARPA>
Cc:   BUG-LISPM@MIT-MC
Subject: bug in SUPDUP
In-reply-to: Msg of 2 Dec 1983 17:03-EST from David C. Plummer <DCP at SCRC-TENEX>

    Date: Friday, 2 December 1983, 17:03-EST
    From: David C. Plummer <DCP at SCRC-TENEX>
    To:   sr.rob, BUG-LISPM at MIT-MC
    Re:   bug in SUPDUP

        Date: Friday, 2 December 1983, 16:49-EST
        From: Robert H. Kassel <sr.rob at MIT-SPEECH>
        In Release 4.5, site configuration 65, on Lisp Machine Grizzly: (3600)

        Supdup graphics don't always work on 3600's.  It seems that making the
        supdup window LM2-size resolves the problem.  I would send you a bug
        report with the debugger information, but the debugger seems to lock.

    In what way(s) doesn't it always work?  Is it reproducible?  

    I've had a couple cases where it tries to send a message name of NIL,
    but I can't reprocude it easily.  Are you CERTAIN making it LM2 size
    fixes the problem?

Well, before I had the problem 4 times and now I haven't had it in
about an hour.

The problem is NOT a nil message.  Rather, the coordinates for the graphics
are out of range.

					ROB

 3-Dec-83 17:06:51-EST,5687;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 3 Dec 83 17:05-EST
Date: 2 December 1983 20:09 EST
From: Kent M Pitman <KMP @ MIT-MC>
Subject:  Problems with proceed options in the NES
To: BUG-LISPM @ MIT-MC
cc: KBE-I @ MIT-OZ

In LISPM in NEX 338, Emacs 162, Teco 1171, ITS 1356 on MIT-MC:

Is there a way (in Release 4 or 5) in the error system to designate that
a condition you are CATCH-ERROR-RESTART/ERROR-RESTART/ERROR-RESTART-LOOPing
for should be invisible to the selection of "Resume" in the error handler?
I'm guessing there is not and it seems to me that this is a misfeature.
Analysis of why follows.

It happens in some places that the code for the KBE has the shape:

  (CATCH-ERROR-RESTART (... "Abort ~A, restoring prior DB state." REQUEST)
    (LET ((OLD-DB-STATE (READ-DB-STATE)))
      (WHEN-ABNORMAL-RETURN
	  (CATCH-ERROR-RESTART (... "Abort ~A, leaving DB as is." REQUEST)
			       (HANDLE-REQUEST REQUEST))
	(SET-DB-STATE OLD-DB-STATE))))

The problem occurs that when an error happens in HANDLE-REQUEST, I get
presented with:

   s-A, Resume: Abort ..., leaving DB as is.
   s-B:         Abort ..., restoring prior DB state.
   s-C, Abort:  Return to Lisp Toplevel.

It is never the case that I want the "leaving DB as is" option to be
possible to reach via Resume. If for some reason it were the only
visible option, I would rather either:

   s-A:         Abort ..., leaving DB as is.
   s-B, Abort:  Return to Lisp Toplevel.

or even (slightly less preferred):

   s-A:                 Abort ..., leaving DB as is.
   s-B, Resume, Abort:  Return to Lisp Toplevel.

I guess I think that if you get to an option which can be gotten with Resume,
you should stop considering to offer a Resume. But in any case, the problem
stands that I know of no way to case-mark the "leaving DB as is" case to say
it should never be a Resume option.

The only "solution" I see is to rewrite the code as something like:

  (LET ((OLD-DB-STATE (READ-DB-STATE)))
    (PROG RESTORE ()
      (WHEN-ABNORMAL-RETURN
	  (PROG DONT-RESTORE ()
	    (CATCH-ERROR-RESTART (... "Abort ~A, leaving DB as is." REQUEST)
	      (RETURN-FROM RESTORE
		(CATCH-ERROR-RESTART (... "Abort ~A, restoring prior DB state."
					  REQUEST)
		  (RETURN-FROM DONT-RESTORE
		    (HANDLE-REQUEST REQUEST))))))
	(SET-DB-STATE OLD-DB-STATE))))

Even this only works because
 * I have another restart handler available in the same form which I can
   use to shadow the one I don't want
 * The control and data flow in this case is sufficiently simple that I
   could see an easy rewrite. And even this "simple" rewrite is painful to 
   read.
It is pretty easy to construct cases where these conditions are violated.

In fact, I don't even believe I can win even with SIGNAL-PROCEED-CASE 
since there is nothing like DBG:*PROCEED-TYPES-SPECIAL-KEYS* which says 
what keys not to assign to what proceed types and since even if there
were, I would have to make a new proceed type specifically for this case
and would have to define it as part of the ERROR flavor since any kind of
error would have to inherit info about how to use it.

By the way, it seems to me to be a loss that keywords and not packaged 
symbols are used as proceed types since this is an extensible namespace
and one could expect that collisions will eventually begin to occur if
people ever really start making their own proceed types much.

Oh, the reason this all came up is that Dick Waters was complaining that
he types c-C a lot by accident in the debugger (thinking he's going to
yank the last input line), which behaves like Resume and selects the
undesirable proceed option, leaving the DB trashed in random ways. I 
suppose the new Yank stuff in Rel 5 will help alleviate at least the 
particular problem Dick was having (once we change over) since he'll 
maybe be less prone to select this option at random. In general, though,
I think people prefer the proceed option marked Resume as somehow more
safe than the ones not so marked.

One perhaps far-fetched thing to consider might be to flavorize the kind 
of proceed options and somehow have a list of flavors of proceed options 
which the user is sophisticated about. That would mean that with every
proceed case, you'd have an implicit notion of who you should present it
to. So things like "The argument to the *THROW instruction was of the
wrong type..." would not present the "Return a value from the *THROW 
instruction" proceed option to people like me who haven't the slightest
idea what that would mean. The way it would know I didn't know is that
that the proceed option would be built on the flavor 
SYS:PRIMITIVE-INSTRUCTION-SET-PROCEED-OPTIONS, which I would not have given
in my profile. On the other hand, you could build proceed options mixed from
SYS:PRIMITIVE-INSTRUCTION-SET-PROCEED-OPTIONS and SYS:SAFE-PROCEED-OPTIONS 
and if my profile said I liked to see the latter type, then I would get
offered that. In the case in point, Dick would have still seen the
unsafe options since I'd have used proceed types which had some sort
of KBE:KBE-INTERNAL-PROCEED-OPTIONS mixed in, but the debugger could have 
noticed which options also had SYS:SAFE-PROCEED-OPTIONS built in and only
marked a proceed option with Resume if it had that mixin. In such a world,
SIGNAL-PROCEED-CASE might look more like a typecase than a case... 
Anyway, the stuff in this paragraph is all very vague and hand-wavy;
I don't know that it would really work. But I think some of the things 
I've mentioned are things that need addressing somehow at some point in
the future.
 3-Dec-83 17:16:29-EST,920;000000000000
Received: from SCRC-TENEX by MIT-OZ via Chaosnet; 3 Dec 83 17:13-EST
Received: from SCRC-EUPHRATES by SCRC-TENEX with CHAOS; Fri 2-Dec-83 20:56:15-EST
Date: Friday, 2 December 1983, 20:53-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: copying instances
To: David Vinayak Wallace <Gumby at MIT-MC>
Cc: BUG-LISPM at MIT-OZ
In-reply-to: The message of 1 Dec 83 23:35-EST from David Vinayak Wallace <Gumby at MIT-MC>

    Date: Thursday, 1 December 1983, 23:35-EST
    From: David Vinayak Wallace <Gumby at MIT-MC>

    How can I copy an instance?

Send it a message!


Seriously, though, I'm glad you asked that question because it reminded
me to write some documentation.  Copying an instance is not as simple a
thing as it might at first appear.  It brings up a number of deep
issues.  Check out the file OZ:<MOON>COPY-INSTANCE.TEXT, which will be
incorporated into the flavor documentation.
 3-Dec-83 17:23:24-EST,3106;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 3 Dec 83 17:21-EST
Received: from SCRC-EUPHRATES by SCRC-TENEX with CHAOS; Fri 2-Dec-83 21:18:08-EST
Date: Fri, 2 Dec 83 21:15 EST
From: "David A. Moon" <Moon%SCRC-TENEX@MIT-MC.ARPA>
Subject: Problems with proceed options in the NES
To: Kent M Pitman <KMP@MIT-MC.ARPA>
Cc: BUG-LISPM@MIT-MC.ARPA, KBE-I%MIT-OZ@MIT-MC.ARPA
In-reply-to: The message of 2 Dec 83 20:09-EST from Kent M Pitman <KMP at MIT-MC>

    Date: Friday, 2 December 1983, 20:09-EST
    From: Kent M Pitman <KMP at MIT-MC>
    
    Is there a way (in Release 4 or 5) in the error system to designate that
    a condition you are CATCH-ERROR-RESTART/ERROR-RESTART/ERROR-RESTART-LOOPing
    for should be invisible to the selection of "Resume" in the error handler?

So how come you put ellipses in all your examples in just the one place that
actually matters, namely the condition flavor(s) handled by the CATCH-ERROR-RESTARTS?
This prevented me from knowing how much you already know.

Here are the debugger's current rules for assignment of the Resume key.  These are
of course more simple-minded than your suggestion of finding a way to compare the
proceed type against of a model of the user.  But here's what it does currently:

 - If any proceed, restart, special-command, or special reason for entering the
   debugger specifically asks for the Resume key, it gets it.
 - If the Resume key is not otherwise used, the first proceed-type gets it.
   This refers to proceed types -only-, not restarts and not special commands.
 - If the Resume key is still not used (there were no proceed types), then if
   there are any restarts, and the first restart does not handle the condition
   SYS:ABORT, then the first restart gets the Resume key.
 - Otherwise the Resume key is not used at all.

The effect of the heuristic with SYS:ABORT is to distinguish between error restarts
of the "return to command level type" from error restarts that represent error
recovery modularized as a THROW rather than as a proceed-type.  SYS:ABORT is the
condition signalled by the Abort and c-Abort keys.

This heuristic was installed as a user-interface improvement, incidentally, to
alleviate the situation which most people did not like where the Resume key
would do nothing.  You seem to be saying that you want the Resume key to do
nothing, in a certain specific case, however.

What I don't know is whether you want the Abort key to go to your "DB" restart
handlers.

What we might consider for the future is to make a message to a condition asking
whether it is legal to associate the Resume key with it.  This would then prevent
the Resume key from being used if the first thing in the debugger's menu is an
error-restart and that error-restart is for a specific condition that says "no"
to such a message.  ERROR would say "yes" and SYS:ABORT would say "no".  For an
error-restart that handles multiple conditions, each condition would be consulted
and if any condition said "no" the Resume key would not be used.  Would this
address your needs?
 3-Dec-83 19:23:16-EST,1189;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 3 Dec 83 19:22-EST
Date: Saturday, 3 December 1983, 15:09-EST
From: Kim A. Barrett <kab at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In System 97.28, CADR 1.0, ZMail 51.9, MIT-Specific 21.0, microcode 257,
ZM MIT, on Lisp Machine Twenty-four:

Attempting to undelete files on FS: fails:

(undeletef "fs:kab;kab-test.new-data#1")
>>ERROR: Internal error:
 Lock #<DTP-LOCATIVE -31131107> already locked by this process for FS: KAB; KAB-TEST.NEW-DATA#1
While in the function FS#:CHANGE-PROPERTIES-CHAOS
  (METHOD FS#:CHAOS-PATHNAME CHANGE-PROPERTIES)  FS:CHANGE-FILE-PROPERTIES

FS#:CHANGE-PROPERTIES-CHAOS: (P.C. = 117)
   Arg 0 (HOST): #FS#:LISPM-CHAOS-HOST "MIT-LISPM-27"
   Arg 1 (PATHNAME): #FS#:REMOTE-LM-PATHNAME "FS: KAB; KAB-TEST.NEW-DATA#1"
   Arg 2 (ERROR-P): T
   Arg 3 (PROPERTIES): (DELETED NIL)

Commands available for this particular error:

s-A, :  Proceeds, trying the file operation again.
s-B:	     Try again with a new pathname, not telling the callers.
s-C, :  Return to top level in Editor Top Level 1.
s-D:	     Restart process Editor Top Level 1.
 
Back to top level in Editor Top Level 1.
 3-Dec-83 20:09:15-EST,697;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 3 Dec 83 20:08-EST
Date: Saturday, 3 December 1983, 20:13-EST
From: Jeffrey N Eisen <JNE at MIT-LISPM-15>
Subject: Lisp stopped itself bug
To: BUG-LISPM at OZ

In Release 4.5, Experimental Schema 5.8, site configuration 60, on Lisp Machine Joe Louis:

Repeated occurrence of Lisp stopped itself, where continue to the Fep does not help
(that is, a warm boot is necessary).  
First, it was happening for a while whenever I typed 
   (abc)
to the Schema Interaction Pane (more or less a Lisp Listener in schema package)
where "abc" is any undefined function.

Now, it happened when I typed garbage while in the inspector.

      -JNE-
 4-Dec-83 00:37:55-EST,1240;000000000000
Received: from SCRC-TENEX by MIT-OZ via Chaosnet; 4 Dec 83 00:36-EST
Received: from SCRC-EUPHRATES by SCRC-TENEX with CHAOS; Sun 4-Dec-83 00:39:47-EST
Date: Sunday, 4 December 1983, 00:36-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: Lisp stopped itself bug
To: Jeffrey N Eisen <JNE at MIT-LISPM-15>
Cc: BUG-LISPM at MIT-OZ
In-reply-to: The message of 3 Dec 83 20:13-EST from Jeffrey N Eisen <JNE at MIT-LISPM-15>

    Date: Saturday, 3 December 1983, 20:13-EST
    From: Jeffrey N Eisen <JNE at MIT-LISPM-15>

    In Release 4.5, Experimental Schema 5.8, site configuration 60, on Lisp Machine Joe Louis:

    Repeated occurrence of Lisp stopped itself, where continue to the Fep does not help
    (that is, a warm boot is necessary).  
    First, it was happening for a while whenever I typed 
       (abc)
    to the Schema Interaction Pane (more or less a Lisp Listener in schema package)
    where "abc" is any undefined function.

    Now, it happened when I typed garbage while in the inspector.

I remember fixing a bug where if you warm booted at just the wrong time something
would not be reinitialized and from then on errors signalled by microcode
would halt your machine.  Fixed in Release 5.
 4-Dec-83 00:45:50-EST,695;000000000000
Received: from MIT-JIMI by MIT-OZ via Chaosnet; 4 Dec 83 00:44-EST
Date: Sunday, 4 December 1983, 00:46-EST
From: Daniel Huttenlocher <dph at MIT-OZ>
Subject: silly people do silly things
To: info-lispm at MIT-OZ

Somebody, somehow in the last couple of days set ROBOT-3's chaos address
to be MOON's chaos address.  Who knows what they thought they were doing
or why.  Somebody also deleted the configuration.fep file which the
machine uses when it boots.

Needless to say, neither MOON nor ROBOT-3 worked very well when they
were both responding to the same network address.

Please refrain from exercising itchy fingers on things like network
addresses and boot command files.
 4-Dec-83 02:37:55-EST,1401;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 4 Dec 83 02:37-EST
Date: Sunday, 4 December 1983, 02:39-EST
From: KMP at MIT-MC
Sender: CStacy at MIT-MC
To: BUG-LISPM at MIT-AI

In Release 5.0 [GC'd Beta Test rev 3], Dusty plum, 
on Lisp Machine Frank Sinatra (3600):

  (signal-proceed-case ((x) 'some-condition)
    ((:foo) x))
   ==> (multiple-value-bind (nil x)
	   (signal 'some-condition ':proceed-types '(:foo))
	 (progn x))
  
  (signal-proceed-case ((x) 'some-condition)
    ((:foo) x)
    ((:bar) y))
   ==> (multiple-value-bind (#:g0261 x)
	   (signal 'some-condition ':proceed-types '(:foo :bar))
	 (selectq #:g0261 ((:foo) x) ((:bar) y)))

The latter is correct, but the former (degenerate) case still seems 
buggy to me. For these two cases to be analagous, I would think you'd 
need a minimum of 

  (signal-proceed-case ((x) 'some-condition)
    ((:foo) x))
   ==> (multiple-value-bind (nil x)
	   (signal 'some-condition ':proceed-types '(:foo))
	 (selectq #:g0017 ((:foo) x)))

It turns out that if SOME-CONDITION is not an error condition, you can
fall through into the proceed options. It also seems to me that even if
this wasn't something the user was intended to do, it should be changed
to be something he's allowed to do since it basically makes sense. 

I actually thought this was "fixed in the source" back in Release 4.
Am I confused?
 4-Dec-83 17:01:40-EST,882;000000000000
Received: from SCRC-TENEX by MIT-OZ via Chaosnet; 4 Dec 83 17:01-EST
Received: from SCRC-AMAZON by SCRC-TENEX with CHAOS; Sun 4-Dec-83 15:41:45-EST
Date: Sunday, 4 December 1983, 16:02-EST
From: Neal Feinberg <Feinberg@SCRC-YUKON>
Subject: FED crash
To: Henry@MIT-OZ, BUG-LISPM@MIT-OZ
In-reply-to: The message of 13 Nov 83 17:44-EST from Henry Lieberman <Henry at MIT-AI>

    Date: Sunday, 13 November 1983, 17:44-EST
    From: Henry Lieberman <Henry at MIT-OZ>

    In Release 5.0 [GC'd Beta Test rev 3], dusty plum, on Lisp Machine Apriary-3 (3600):

    Just tried to start up FED...

    >>Trap: The first argument given to the FOLLOW-CELL-FORWARDING instruction, NIL, was not a locative.
    While in the function DBG:CELL-LOCATION-IN-STACK-GROUP  SYMEVAL-IN-STACK-GROUP  (:METHOD TV:BASIC-CHOOSE-VARIABLE-VALUES :ITEM-WIDTH)

Is FED working for you now?
 4-Dec-83 20:33:59-EST,3843;000000000000
Received: from MIT-MORRISON by MIT-OZ via Chaosnet; 4 Dec 83 20:33-EST
Date: Sunday, 4 December 1983, 20:37-EST
From: Laura Bagnall <LAURA at MIT-OZ>
Subject: zmail bug
To: BUG-LISPM at MIT-OZ

In Release 5.0 [GC'd Beta Test rev 3], dusty plum, on Lisp Machine Jim Morrison (3600):

All I did was <system>M and moused left on "Get Inbox", honest!

>>Trap: The argument given to the SYS:%JUMP instruction, 1, was not a SYS:DTP-EVEN-PC or a SYS:DTP-ODD-PC.
While in the function (:METHOD FS:HOST-UNIT :COMMAND)  FS:OPEN-CHAOS  (:METHOD FS:QFILE-ACCESS-PATH :OPEN)

(:METHOD FS:HOST-UNIT :COMMAND):  (P.C. = 231)
   Arg 0 (SELF): #<HOST-UNIT 3643544>
   Arg 1 (SELF-MAPPING-TABLE): FS:HOST-UNIT
   Arg 2 (OPERATION): :COMMAND
   Arg 3 (MARK-P): NIL
   Arg 4 (STREAM-OR-HANDLE): (:CREATE "I1659")
   Arg 5 (SIMPLE-P): NIL
   Arg 6 (WHOSTATE): "Open"
   Rest arg (COMMANDS): ("OPEN " :READ " " :CHARACTER "" "" "" "" "" "" ...)
   Local 8 (HANDLE): "I1659"
   Local 9 (STREAM): NIL
   Local 10 (PKT): #<Chaos Packet 3402150>
   Local 11 (SUCCESS): NIL
   Local 12 (STRING): "I1659 ERROR FNF F No such filename"
   Local 13 (TRANSACTION-ID): "T1702"
   Local 14 (CREATE-P): T
   Local 15 (CONDITION): NIL

FS:OPEN-CHAOS:  (P.C. = 643)
   Arg 0 (ACCESS-PATH): #<TOPS20-QFILE-ACCESS-PATH OZ using QFILE 3643533>
   Arg 1 (REAL-PATHNAME): #<TOPS20-PATHNAME "OZ:PS:<LAURA>MAIL._ZMAIL_TXT.1">
   Arg 2 (*COMMAND-PATHNAME*-initialization): #<TOPS20-PATHNAME "OZ:PS:<LAURA>MAIL._ZMAIL_TXT.1">
   Arg 3 (OPTIONS): (:CHARACTERS T :DIRECTION :INPUT)

(:METHOD FS:QFILE-ACCESS-PATH :OPEN):  (P.C. = 7)
   Arg 0 (SELF): #<TOPS20-QFILE-ACCESS-PATH OZ using QFILE 3643533>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:QFILE-ACCESS-PATH -- 3. IV's, 0. FL's 15141672>
   Arg 2 (OPERATION): :OPEN
   Arg 3 (REAL-PATHNAME): #<TOPS20-PATHNAME "OZ:PS:<LAURA>MAIL._ZMAIL_TXT.1">
   Arg 4 (PATHNAME): #<TOPS20-PATHNAME "OZ:PS:<LAURA>MAIL._ZMAIL_TXT.1">
   Rest arg (OPTIONS): (:CHARACTERS T :DIRECTION :INPUT)

(:METHOD FS:ACTIVE-PATHNAME-MIXIN :OPEN):  (P.C. = 14)
   Arg 0 (SELF): #<TOPS20-PATHNAME "OZ:PS:<LAURA>MAIL._ZMAIL_TXT.1">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:ACTIVE-PATHNAME-MIXIN -- 1. IV's, 0. FL's 25264072>
   Arg 2 (OPERATION): :OPEN
   Arg 3 (PATHNAME): #<TOPS20-PATHNAME "OZ:PS:<LAURA>MAIL._ZMAIL_TXT.1">
   Rest arg (OPTIONS): (:CHARACTERS T :DIRECTION :INPUT)

FS:MACLISP-COMPATIBILITY-OPEN:  (P.C. = 362)
   Arg 0 (FILENAME): #<TOPS20-PATHNAME "OZ:PS:<LAURA>MAIL._ZMAIL_TXT.1">
   Arg 1 (OPTIONS): (:IN :NOERROR)

OPEN:  (P.C. = 252)
   Arg 0 (PATHNAME): #<TOPS20-PATHNAME "OZ:PS:<LAURA>MAIL._ZMAIL_TXT.1">
   Rest arg (KEYWORD-ARGS): ((:IN :NOERROR))

(:METHOD ZWEI:INBOX-BUFFER :START-NEXT-INBOX):  (P.C. = 107)
   Arg 0 (SELF): #<TENEX-INBOX-BUFFER "for OZ:PS:<LAURA>LAURA.BABYL" 20134161>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:INBOX-BUFFER -- 12. IV's, 0. FL's 24437607>
   Arg 2 (OPERATION): :START-NEXT-INBOX

ZWEI:GET-INBOX-FOR-BUFFER:  (P.C. = 105)
   Arg 0 (BUFFER): #<BABYL-BUFFER "OZ:PS:<LAURA>LAURA.BABYL" 20133443>
   Arg 1 (FROM-PATHNAME): NIL
   Arg 2 (DELETE-P): NIL
   Arg 3 (TELL-BACKGROUND-P): T

Rest of stack:
ZWEI:COM-GET-INBOX-INTERNAL:  (P.C. = 245)
ZWEI:STARTUP-MAIL-FILE:  (P.C. = 172)
ZWEI:COM-GET-INBOX-INTERNAL:  (P.C. = 36)
ZWEI:COM-GET-NEW-MAIL-FROM-INBOX:  (P.C. = 7)
ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
ZWEI:ZMAIL-COMMAND-EXECUTE:  (P.C. = 6)
(:INTERNAL ZWEI:ZMAIL-COMMAND-LIST 0):  (P.C. = 10)
ZWEI:ZMAIL-COMMAND-LIST:  (P.C. = 12)
(:METHOD ZWEI:ZMAIL-FRAME :PROCESS-SPECIAL-COMMAND):  (P.C. = 5)
(:METHOD ZWEI:ZMAIL-FRAME :COMMAND-LOOP):  (P.C. = 130)
(:METHOD ZWEI:ZMAIL-FRAME :COMBINED :COMMAND-LOOP):  (P.C. = 43)
ZWEI:ZMAIL-PROCESS-TOP-LEVEL:  (P.C. = 52)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
 4-Dec-83 20:42:17-EST,825;000000000000
Received: from MIT-MORRISON by MIT-OZ via Chaosnet; 4 Dec 83 20:41-EST
Date: Sunday, 4 December 1983, 20:45-EST
From: Laura Bagnall <LAURA at MIT-OZ>
Subject: addendum to last zmail bug message
To: bug-lispm at MIT-OZ

After I finished sending the bug message, I was back in the debugger
and I typed abort.  I expected it to return to Zmail top level
without reading my file, but instead it continued to read in
my babyl file, more or less successfully.  However, there was no
message in the bottom half of the screen and in the bottommost
pane (under "Zmail OZ:PS:<LAURA>LAURA.BABYL etc.)
it said "Empty Mail File".  I then selected a message by mousing
it in the upper window (the one that has lists of messages).
The message was successfully selected, and from then on things
seemed to be normal.

Laura
 4-Dec-83 21:12:39-EST,1981;000000000000
Received: from MIT-APIARY-8 by MIT-OZ via Chaosnet; 4 Dec 83 21:12-EST
Date: Sunday, 4 December 1983, 21:14-EST
From: Kent M. Pitman <KMP at MIT-OZ>
Subject: Truncated .BIN files from booting in the middle of a compilation
To: BUG-LISPM at MIT-OZ
Cc: Dick at MIT-OZ,
    KMP at SCRC|DM, KBE-I-FILE at MIT-OZ

In Symbolics Release 4.5 on Avatar (CADR),
   Symbolics Release 4.5 on Merlin (3600),
   Symbolics Release 5.0 [GC'd Beta Test rev 3] on Apiary-8 (3600):

If the machine is booted while compiling a file, the file server
does a normal close rather than an abort close on the file. I don't
see any good reason why it can't do the right thing.

On ITS, this leaves a reasonably harmless _LSPM_ OUTPUT file laying
around, but on Twenex this leaves a truncated .BIN file which 
confuses later MAKE-SYSTEM's, which see the file's creation date
and think it doesn't need to be re-compiled.

An easy test case is OZ:PS:<KMP.LISPM.BUGS>ABORT-COMPILATION.LISP.
Start compiling it, then boot your machine when it tells you to.
It contains:

    ;;; -*- Mode:LISP; -*-
    ;;; Compile this file and when it says to, boot your machine. 
    ;;; Why does a .BIN file get created?
    
    #.(unwind-protect (progn (format t "~&Please boot your machine now.~%")
			     (process-wait "Await Boot Sequence" #'(lambda () nil)))
		      (format t "~&Hey! That's not what I asked you to do!~%"))
    
This particular test case has the truncated .BIN file will actually
load without FASLOAD complaining it has been truncated, at least
in Release 5.0 (I didn't try it in Release 4.5). That is probably a
bug in itself. The last thing that the compiler should do is mark
the .BIN file with a password saying that compilation succeeded.

Anyway, I can assure you that for other (real) cases, the .BIN file
generated won't even be in .BIN file format (as if that matters, since
half a .BIN file is not clearly better than no .BIN file at all).

-kmp
 4-Dec-83 21:34:25-EST,1043;000000000000
Received: from MIT-ML by MIT-OZ via Chaosnet; 4 Dec 83 21:33-EST
Date: Sunday, 4 December 1983, 21:34-EST
From: barmar at MIT-MULTICS-11
Sender: RDZ at MIT-MC
Subject: TERMINAL
To: BUG-LISPM at MIT-AI

In Release 5.0 [GC'd Beta Test rev 3], dusty plum, on Lisp Machine Joe Louis (3600):

Is there any way to tell the the TERMINAL program to use a non-standard
port for TCP SUPDUP?  MIT Multics doesn't yet run my Supdup server by
default, so I generally Telnet to Multics and start it up in my process,
then Supdup in.  However, I would prefer to use a non-standard port for
this, as some other unwary user might try to Supdup in and might prefer
that his password not pass through a random user's process.  In the old
Supdup program I could say "multics/140" to get a different port, but
this no longer works.  There is probably something I can put in the
namespace object to cause this to happen, but I want it to only happen
for me.  Is the functionality of the old SUPDUP function still around
under some strange name?
 4-Dec-83 22:14:57-EST,936;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 4 Dec 83 22:13-EST
Received: from SCRC-CHARLES by SCRC-QUABBIN with CHAOS; Sun 4-Dec-83 22:19:18-EST
Date: Sunday, 4 December 1983, 22:15-EST
From: David C. Plummer <DCP at SCRC-TENEX>
Subject: TERMINAL
To: barmar at MIT-MULTICS, BUG-LISPM at MIT-OZ
In-reply-to: The message of 4 Dec 83 21:34-EST from barmar at MIT-MULTICS

    Date: Sunday, 4 December 1983, 21:34-EST
    From: barmar at MIT-MULTICS-11

    Is there any way to tell the the TERMINAL program to use a non-standard
    port for TCP SUPDUP? 

    In Release 5.0 [GC'd Beta Test rev 3], dusty plum, on Lisp Machine Joe Louis (3600):

No.  This is because the Terminal user interface was assuming there
would be a CP.  "Fixed by the CP."

You could start up your server using the normal port.  You would then do
(tv:edit-namespace-object :host "Multics" :locally t) and give it the
SUPDUP service.
 4-Dec-83 22:20:45-EST,3683;000000000000
Received: from MIT-ML by MIT-OZ via Chaosnet; 4 Dec 83 22:19-EST
Date: Sunday, 4 December 1983, 22:21-EST
From: barmar at MIT-MULTICS-11
Sender: RDZ at MIT-MC
Subject: TCP FTP
To: BUG-LISPM at MIT-AI

In Release 5.0 [GC'd Beta Test rev 3], dusty plum, on Lisp Machine Joe Louis (3600):

I tried (viewf "multics:>udd>m>barmar>su.ec").  In case the
special characters don't make it through to the Multics
recipients, the unknown response translates to IAC WILL
SUPPRESS-GO-AHEAD IAC WILL ECHO IAC 371(octal) (I don't know what
the last one translates to in IAC language).  It seems that the
LispM doesn't like FTP servers that send IACs, although I
haven't heard that this is a problem for other systems.

>>Error: Unknown response from host: {{y120 Unattended Service (expecting 220).
While in the function (:DEFUN-METHOD FS:TCP-FTP-CHECK-COMMAND-RESPONSE)  (:DEFUN-METHOD FS:TCP-FTP-VALIDATE-CONN)  (:METHOD FS:TCP-FTP-CONN :ALLOCATE)

(:DEFUN-METHOD FS:TCP-FTP-CHECK-COMMAND-RESPONSE):  (P.C. = 221)
   Arg 0 (SELF): #<TCP-FTP-CONN 17375015>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:TCP-FTP-CONN -- 8. IV's, 0. FL's 25153774>
   Arg 2 (EXPECTED-VALUE): 334
   --Defaulted args:--
   Arg 3 (CTL-STRING): NIL
   Rest arg (ARGS): NIL
   Local 5 (OLD-STATE): :FREE
   Local 6 (NUM): 170
   Local 7 (LINE): "{{y120 Unattended Service"
   Local 8 (ELEM): NIL

(:DEFUN-METHOD FS:TCP-FTP-VALIDATE-CONN):  (P.C. = 50)
   Arg 0 (SELF): #<TCP-FTP-CONN 17375015>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:TCP-FTP-CONN -- 8. IV's, 0. FL's 25153774>

(:METHOD FS:TCP-FTP-CONN :ALLOCATE):  (P.C. = 11)
   Arg 0 (SELF): #<TCP-FTP-CONN 17375015>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:TCP-FTP-CONN -- 8. IV's, 0. FL's 25153774>
   Arg 2 (OPERATION): :ALLOCATE

(:METHOD FS:TCP-FTP-CONN :INIT):  (P.C. = 4)
   Arg 0 (SELF): #<TCP-FTP-CONN 17375015>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:TCP-FTP-CONN -- 8. IV's, 0. FL's 25153774>
   Arg 2 (OPERATION): :INIT
   Arg 3 (IGNORE): #<DTP-LOCATIVE 140374>

INSTANTIATE-FLAVOR:  (P.C. = 372)
   Arg 0 (FLAVOR-NAME): FS:TCP-FTP-CONN
   Arg 1 (INIT-PLIST): #<DTP-LOCATIVE 140374>
   Arg 2 (SEND-INIT-MESSAGE-P): :MAYBE
   --Defaulted args:--
   Arg 3 (RETURN-UNHANDLED-KEYWORDS-P): NIL
   Arg 4 (AREA-TO-CONS-INSTANCE-IN): NIL

MAKE-INSTANCE:  (P.C. = 6)
   Arg 0 (FLAVOR-NAME): FS:TCP-FTP-CONN
   Rest arg (INIT-OPTIONS): (:FILE-ACCESS-PATH #<MULTICS-TCP-FTP-FILE-ACCESS-PATH MULTICS using TCP-FTP 16776111> :SERVICE-ACCESS-PATH #<SERVICE-ACCESS-PATH FILE (TCP-FTP) -- CMULTICS (via MITML on CHAOS or via SCRC|DM on CHAOS) 16776100>)

(:DEFUN-METHOD FS:TCP-FTP-FIND-CONN):  (P.C. = 25)
   Arg 0 (SELF): #<MULTICS-TCP-FTP-FILE-ACCESS-PATH MULTICS using TCP-FTP 16776111>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:TCP-FTP-FILE-ACCESS-PATH -- 4. IV's, 2. FL's 25257656>

(:METHOD FS:TCP-FTP-FILE-ACCESS-PATH :OPEN):  (P.C. = 6)
   Arg 0 (SELF): #<MULTICS-TCP-FTP-FILE-ACCESS-PATH MULTICS using TCP-FTP 16776111>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:TCP-FTP-FILE-ACCESS-PATH -- 4. IV's, 2. FL's 25257656>
   Arg 2 (OPERATION): :OPEN
   Rest arg (ARGS): (#<MULTICS-PATHNAME "CMULTICS: >udd>m>barmar>su.ec"> #<MULTICS-PATHNAME "CMULTICS: >udd>m>barmar>su.ec"> :DIRECTION :INPUT :PRESERVE-DATES T)

Rest of stack:
(:METHOD FS:ACTIVE-PATHNAME-MIXIN :OPEN):  (P.C. = 14)
FS:COMMON-LISP-OPEN:  (P.C. = 445)
OPEN:  (P.C. = 255)
VIEWF:  (P.C. = 25)
SI:*EVAL:  (P.C. = 370)
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 200)
SI:LISP-COMMAND-LOOP:  (P.C. = 115)
SI:LISP-TOP-LEVEL1:  (P.C. = 22)
SI:LISP-TOP-LEVEL:  (P.C. = 7)
 4-Dec-83 22:30:09-EST,1330;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 4 Dec 83 22:29-EST
Acknowledge-To:  Barry Margolin <Margolin@MIT-MULTICS.ARPA>
Date:  Sunday, 4 December 1983 22:30 est
From:  "Barry Margolin"@MIT-MULTICS.ARPA
Subject:  Re: TERMINAL
To:  David C. Plummer <DCP%SCRC-TENEX@MIT-MC.ARPA>
cc:  BUG-LISPM%MIT-OZ@MIT-MC.ARPA
In-Reply-To:  Message of 4 December 1983 22:15 est from "David C. Plummer"
Message-ID:  <831205033052.616480@MIT-MULTICS.ARPA>

    Date:  4 December 1983 22:15 est
    From:  David C. Plummer <DCP%SCRC-TENEX at MIT-MC>
    Subject:  TERMINAL

        Date: Sunday, 4 December 1983, 21:34-EST
        From: barmar at MIT-MULTICS-11

        Is there any way to tell the the TERMINAL program to use a non-standard
        port for TCP SUPDUP?

        In Release 5.0 [GC'd Beta Test rev 3], dusty plum, on Lisp Machine Joe Louis (3600):

    No.  This is because the Terminal user interface was assuming there
    would be a CP.  "Fixed by the CP."

    You could start up your server using the normal port.  You would then do
    (tv:edit-namespace-object :host "Multics" :locally t) and give it the
    SUPDUP service.


Is there a way in the namespace editor to tell it to use a specific TCP
port for the Supdup service?  I would prefer NOT to run my server on the
standard port.
 4-Dec-83 23:10:41-EST,799;000000000000
Received: from SCRC-TENEX by MIT-OZ via Chaosnet; 4 Dec 83 23:10-EST
Received: from SCRC-CHARLES by SCRC-TENEX with CHAOS; Sun 4-Dec-83 22:54:56-EST
Date: Sunday, 4 December 1983, 23:10-EST
From: David C. Plummer <DCP at SCRC-TENEX>
Subject: Re: TERMINAL
To: Barry Margolin at MIT-MULTICS, DCP at SCRC-TENEX
Cc: BUG-LISPM at MIT-OZ
In-reply-to: <831205033052.616480@MIT-MULTICS.ARPA>

    Date:  Sunday, 4 December 1983 22:30 est
    From:  "Barry Margolin"@MIT-MULTICS.ARPA

    Is there a way in the namespace editor to tell it to use a specific TCP
    port for the Supdup service?  I would prefer NOT to run my server on the
    standard port.
You could try bashing tcp:*tcp-protocol-alist*, on the assumption Multics
is the only host on the Internet you will try to SUPDUP to.
 4-Dec-83 23:16:23-EST,1784;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 4 Dec 83 23:15-EST
Date: Sunday, 4 December 1983, 23:17-EST
From: Kent M Pitman <kmp at MIT-MC>
Subject: Keyword menu
To: BUG-LISPM at MC

In ZMAIL in Symbolics Release 4.5 on Sinatra (3600)...

My keyword menu is now big enough that I don't see all my keywords all
at once. That's a real drag because with that many keywords it's hard
enough finding the one you want even if it is visible without having to
worry it might not be there.

I wonder if an option variable to make ZMail sort keywords by most
recently used (a la c-X c-B) would be useful... That way, the most
recently used keys would be at the top. 

I also dislike that -- in the keywords menu -- if a marked keyword is
on another page, I can't see it and might not even know it's there. 
If the aforementioned sorting variable caused all marked keywords to
act as if touched (ie, sort to the top of the list when you entered
the menu), then you'd be assured that all marked keywords would be
visible (or, in some pathological situations, at least that all visible
keywords would be marked).

A more conservative approach would be to say that Left Click 
complements a keyword's state but that Right Click gets to a menu
of options about that keyword. I have suggested something like this
before for things like renaming/removing keywords. The point is that
another command you could want from this point would be to move this
keyword to the head of the list (or to some other position in the
menu, perhaps specified by mouse click).

By the way, I wouldn't mind an option called "Find" in italics which
was like "New" but which never created a new keyword so that in case
of a typo, I wouldn't be stuck with a new keyword I didn't want.
 5-Dec-83 01:33:19-EST,1743;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 5 Dec 83 01:31-EST
Date: 5 December 1983 01:30 EST
From: Kent M Pitman <KMP @ MIT-MC>
Subject:  Mark Survey
To: BUG-LISPM @ MIT-MC
cc: ECC @ MIT-MC, KMP @ MIT-MC

In ZMail in Symbolics Release 4.5 on Sinatra (3600):

I used Mark Survey tonight for the first time and must confess I found
it incredibly clumsy. The main problem with the current interface is
that you can't view and otherwise manipulate messages while you are
creating the mark survey.

It seems to me that it should be possible at any time, using the menu
gotten by Right Click on a summary line, annotate a message with a 
special flag saying that it is "marked". Such a flag would be maintained
only in ZMail and not written to disk. Then rather than the Mark Survey
option for filters, you could just request that the messages which were
marked in the current survey be used to compose a new survey.

Probably these marks, once used in some way, could be made to disappear
(analagously to the region in Zwei). If the user wanted them back 
immediately afterward, he could do something to cause them to come back
up until the time when he explicitly made some new mark. If by then he
had not revived the flushed marks, they would really go away.

This would make it painless to read several messages, marking them as
you read them (rather than after) as something you want to reply to.
The reply command could, for example, prefer replying to marked messages 
over replying to the current message.

I'm experimenting with using the @ command (for marking) in ZBabyl (my
hairy extensions to Babyl) to experiment with something along these
lines and the results have been pretty promising.
-kmp
 5-Dec-83 07:36:51-EST,3638;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 5 Dec 83 07:36-EST
Date: Monday, 5 December 1983, 07:41-EST
From: Christopher C. Stacy <CStacy at MIT-MC>
To: BUG-LISPM at MIT-AI

In Release 5.0 [GC'd Beta Test rev 3], Dusty plum, on Lisp Machine Frank Sinatra (3600):

I typed M-X Revert. It doesn't always do this, but there is no special
state that the user can see. Maybe it saw "KMP" in the file plist and
decided that there was supposed to be a bug report now.

>>Trap: The first argument given to the SYS:+-INTERNAL instruction, NIL, was not a number.
While in the function MAKE-ARRAY  SUBSTRING  FS:READ-FILE-PROPERTY-LIST-STRING

MAKE-ARRAY:  (P.C. = 765)
   Arg 0 (DIMENSIONS): 24.
   Rest arg (OPTIONS): (:TYPE SYS:%ARRAY-TYPE-12 :AREA NIL)
   Local 2 (AREA): NIL
   Local 3 (TYPE): 10.
   Local 4 (LEADER-LIST): NIL
   Local 5 (LEADER-LENGTH): NIL
   Local 6 (DISPLACED-TO): NIL
   Local 7 (DISPLACED-INDEX-OFFSET): NIL
   Local 8 (NAMED-STRUCTURE-SYMBOL): NIL
   Local 9 (DISPLACED-CONFORMALLY): NIL
   Local 10 (DISPATCH): 5.
   Local 11 (N-HEADER-WORDS): 1.
   Local 12 (N-ELEMS): 24.
   Local 13 (ARRAY): NIL
   Local 14 (INDEX-P): NIL
   Local 15 (Q-P): T
   Local 16 (N-WORDS): NIL
   Local 17 (N-DIMS): 1.
   Local 18 (TOTAL-SIZE): NIL
   Local 19 (INITIAL-VALUE): NIL
   Local 20 (FILL-POINTER): NIL
   Local 21 (ELEMS-PER-Q): NIL

SUBSTRING:  (P.C. = 54)
   Arg 0 (STRING): "I1942 OPEN 12//05//83 07:31:30 7926 NIL T /"KMP/"
PS:<KBE>DEMO-INIT.LISP.3
"
   Arg 1 (FROM): 46.
   Arg 2 (TO): 70.
   --Defaulted args:--
   Arg 3 (AREA): NIL

FS:READ-FILE-PROPERTY-LIST-STRING:  (P.C. = 151)
   Arg 0 (STRING): "I1942 OPEN 12//05//83 07:31:30 7926 NIL T /"KMP/"
PS:<KBE>DEMO-INIT.LISP.3
"
   Arg 1 (OPERATION): "OPEN"
   Arg 2 (PATHNAME): #<TOPS20-PATHNAME "OZ:PS:<KBE>DEMO-INIT.LISP">

FS:OPEN-CHAOS:  (P.C. = 656)
   Arg 0 (ACCESS-PATH): #<TOPS20-QFILE-ACCESS-PATH OZ using QFILE 21704616>
   Arg 1 (REAL-PATHNAME): #<TOPS20-PATHNAME "OZ:PS:<KBE>DEMO-INIT.LISP">
   Arg 2 (*COMMAND-PATHNAME*-initialization): #<TOPS20-PATHNAME "OZ:PS:<KBE>DEMO-INIT.LISP">
   Arg 3 (OPTIONS): (:DIRECTION :INPUT)

(:METHOD FS:QFILE-ACCESS-PATH :OPEN):  (P.C. = 7)
   Arg 0 (SELF): #<TOPS20-QFILE-ACCESS-PATH OZ using QFILE 21704616>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:QFILE-ACCESS-PATH -- 3. IV's, 0. FL's 15141672>
   Arg 2 (OPERATION): :OPEN
   Arg 3 (REAL-PATHNAME): #<TOPS20-PATHNAME "OZ:PS:<KBE>DEMO-INIT.LISP">
   Arg 4 (PATHNAME): #<TOPS20-PATHNAME "OZ:PS:<KBE>DEMO-INIT.LISP">
   Rest arg (OPTIONS): (:DIRECTION :INPUT)

(:METHOD FS:ACTIVE-PATHNAME-MIXIN :OPEN):  (P.C. = 14)
   Arg 0 (SELF): #<TOPS20-PATHNAME "OZ:PS:<KBE>DEMO-INIT.LISP">
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:ACTIVE-PATHNAME-MIXIN -- 1. IV's, 0. FL's 25264072>
   Arg 2 (OPERATION): :OPEN
   Arg 3 (PATHNAME): #<TOPS20-PATHNAME "OZ:PS:<KBE>DEMO-INIT.LISP">
   Rest arg (OPTIONS): NIL

FS:COMMON-LISP-OPEN:  (P.C. = 445)
   Arg 0 (PATHNAME): #<TOPS20-PATHNAME "OZ:PS:<KBE>DEMO-INIT.LISP">
   Arg 1 (KEYWORD-ARGS): NIL

OPEN:  (P.C. = 255)
   Arg 0 (PATHNAME): #<TOPS20-PATHNAME "OZ:PS:<KBE>DEMO-INIT.LISP">
   Rest arg (KEYWORD-ARGS): NIL

Rest of stack:
(:METHOD ZWEI:FILE-BUFFER-MIXIN :REVERT):  (P.C. = 57)
ZWEI:COM-REVERT-BUFFER:  (P.C. = 7)
ZWEI:COM-EXTENDED-COMMAND:  (P.C. = 27)
ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 200)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 41)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
 5-Dec-83 07:39:10-EST,1140;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 5 Dec 83 07:38-EST
Received: from SCRC-NEPONSET by SCRC-QUABBIN with CHAOS; Mon 5-Dec-83 07:44:24-EST
Date: Monday, 5 December 1983, 07:40-EST
From: Charles Hornig <Hornig at SCRC-QUABBIN>
Subject: Re: TERMINAL
To: David C. Plummer <DCP at SCRC-TENEX>, Barry Margolin at MIT-MULTICS
Cc: BUG-LISPM at MIT-OZ
In-reply-to: The message of 4 Dec 83 23:10-EST from David C. Plummer <DCP at SCRC-TENEX>
Message-ID: <831205074056.1.Hornig@QUABBIN.SCRC.Symbolics>

    Date: Sunday, 4 December 1983, 23:10-EST
    From: David C. Plummer <DCP at SCRC-TENEX>
	Date:  Sunday, 4 December 1983 22:30 est
	From:  "Barry Margolin"@MIT-MULTICS.ARPA
	Is there a way in the namespace editor to tell it to use a specific TCP
	port for the Supdup service?  I would prefer NOT to run my server on the
	standard port.
    You could try bashing tcp:*tcp-protocol-alist*, on the assumption Multics
    is the only host on the Internet you will try to SUPDUP to.
Except that it isn't called that in Rel 5.  Look at the beginning of
SYS:NETWORK;GATEWAY-TCP.LISP to see what it was called then.
 5-Dec-83 08:22:37-EST,1532;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 5 Dec 83 08:22-EST
Received: from SCRC-NEPONSET by SCRC-QUABBIN with CHAOS; Mon 5-Dec-83 08:18:29-EST
Date: Monday, 5 December 1983, 08:15-EST
From: Charles Hornig <Hornig at SCRC-QUABBIN>
Subject: TCP FTP
To: barmar at MIT-MULTICS, BUG-LISPM at MIT-OZ
In-reply-to: The message of 4 Dec 83 22:21-EST from barmar at MIT-MULTICS
Message-ID: <831205081503.6.Hornig@QUABBIN.SCRC.Symbolics>

    Date: Sunday, 4 December 1983, 22:21-EST
    From: barmar at MIT-MULTICS-11
    In Release 5.0 [GC'd Beta Test rev 3], dusty plum, on Lisp Machine Joe Louis (3600):

    I tried (viewf "multics:>udd>m>barmar>su.ec").  In case the
    special characters don't make it through to the Multics
    recipients, the unknown response translates to IAC WILL
    SUPPRESS-GO-AHEAD IAC WILL ECHO IAC 371(octal) (I don't know what
    the last one translates to in IAC language).  It seems that the
    LispM doesn't like FTP servers that send IACs, although I
    haven't heard that this is a problem for other systems.

    >>Error: Unknown response from host: <177>{<177>{<177>y120 Unattended Service (expecting 220).
    While in the function (:DEFUN-METHOD FS:TCP-FTP-CHECK-COMMAND-RESPONSE)  (:DEFUN-METHOD FS:TCP-FTP-VALIDATE-CONN)  (:METHOD FS:TCP-FTP-CONN :ALLOCATE)

Despite appearances, it understands IAC's.  It is complaining about
receiving a 120 response instead of a 220.  I don't have my RFC 765
handy, but I don't think that that is a legal response.
 5-Dec-83 08:32:09-EST,459;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 5 Dec 83 08:31-EST
Date: Monday, 5 December 1983, 08:36-EST
From: Christopher C. Stacy <CStacy at MIT-MC>
To: BUG-LISPM at MIT-AI


In LISPM in Release 5.0, Dusty plum, on Lisp Machine Frank Sinatra (3600):

I change my default font to MEDFNT, but the echo area does not grok
this and the top of some typeout (like "Reading file.....") gets
chopped off, I guess cuz the baseline is wrong or something.
 5-Dec-83 13:38:29-EST,864;000000000000
Received: from SCRC-TENEX by MIT-OZ via Chaosnet; 5 Dec 83 13:36-EST
Received: from SCRC-CHARLES by SCRC-TENEX with CHAOS; Mon 5-Dec-83 13:21:02-EST
Date: Monday, 5 December 1983, 13:36-EST
From: David C. Plummer <DCP at SCRC-TENEX>
Subject: Re: TERMINAL
To: Hornig at SCRC-QUABBIN, DCP at SCRC-TENEX,
    Barry Margolin at MIT-MULTICS
Cc: BUG-LISPM at MIT-OZ
In-reply-to: <831205074056.1.Hornig@QUABBIN.SCRC.Symbolics>

    Date: Monday, 5 December 1983, 07:40-EST
    From: Charles Hornig <Hornig at SCRC-QUABBIN>

    Except that it isn't called that in Rel 5.  Look at the beginning of
    SYS:NETWORK;GATEWAY-TCP.LISP to see what it was called then.
The 243 sources point that file to ip-tcp:ip-tcp;gateway-tcp.lisp.  It's
probably right in the Release 5 sources.  Barry and I had a CONVERSation
last night and found tcp:*tcp-port-numbers*.
 5-Dec-83 14:42:18-EST,2425;000000000000
Received: from MIT-LISPM-3 by MIT-OZ via Chaosnet; 5 Dec 83 14:40-EST
Date: Monday, 5 December 1983, 14:40-EST
From: Bruce R. Donald <brd at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In System 97.20, CADR 1.0, ZMail 51.7, MIT-Specific 21.0, microcode 257,
ZM MIT, on Lisp Machine Three:


Insert your description of the circumstances here:
    
    I Booted CADR-3, hit SYSTEM-M. It made me log in, which I did with BRD T. Then
    I clicked left on MAIL and got this error. I Do have a ZMAIL.INIT file in PS:<BRD>.
    Hitting ABORT results in an error  ">>ERROR: attempt to unlock process
     #<DTP-LOCATIVE 32456407> which you don't have locked, while in the process
    GLOBAL:PROCESS-UNLOCK..."

>>ERROR: Lock #<DTP-LOCATIVE 32456407> already locked by this process
Backtrace from the debugger:

GLOBAL:PROCESS-LOCK (P.C. = 74)

 Arg 0 (LOCATIVE-POINTER): #<DTP-LOCATIVE 32456407>
   --Defaulted args:--
 Arg 1 (LOCK-VALUE): #<PROCESS Main ZMail window 7010217>
 Arg 2 (WHOSTATE): "Lock"
 Arg 3 (TIMEOUT): NIL
Local 0 (LOCKER): #<PROCESS Main ZMail window 7010217>


ZWEI#:LOAD-ZMAIL-INIT-FILE (P.C. = 114)

 Arg 0 (SILENT): NIL
Local 0 (LOCK): #<DTP-LOCATIVE 32456407>
Local 1: NIL
Local 2 (.FILE-ABORTED-FLAG.): NIL
Local 3 (STREAM): NIL


ZWEI#:SET-ZMAIL-USER (P.C. = 123)

   --Defaulted args:--
 Arg 0 (SILENT): NIL
Local 0 (OLD-FRACT): 0.45s0
Local 1 (LOCK): #<DTP-LOCATIVE 32456407>


ZWEI#:COM-ZMAIL-MAIL (P.C. = 47)

Local 0 (TYPE): NIL


ZWEI#:COMMAND-EXECUTE (P.C. = 120)

 Arg 0 (COMMAND): ZWEI#:COM-ZMAIL-MAIL
 Arg 1 (CHAR): (MENU ("Mail" . ZWEI#:COM-ZMAIL-MAIL) 1 #<ZMAIL-MAIN-COMMAND-MENU-PANE Zmail Main Command Menu Pane 1 1003550 exposed>)
   --Defaulted args:--
 Arg 2 (PREFIX-CHAR): NIL
 Arg 3 (HOOK-LIST): NIL
Local 0 (HOOK-SUCCESS): T
Local 1: NIL
Local 2 (HOOK): NIL


Remainder of stack:

ZWEI#:ZMAIL-COMMAND-EXECUTE (P.C. = 27)
(SELECT-METHOD ZWEI#:ZMAIL-COMMAND-LIST MENU) (P.C. = 32)
(METHOD ZWEI#:ZMAIL-FRAME PROCESS-SPECIAL-COMMAND) (P.C. = 25)
(METHOD ZWEI#:ZMAIL-COMMAND-LOOP-MIXIN COMMAND-LOOP) (P.C. = 256)
(INTERNAL (METHOD ZWEI#:ZMAIL-FRAME COMBINED COMMAND-LOOP) 0) (P.C. = 50)
GLOBAL:FUNCALL (P.C. = 25)
(METHOD ZWEI#:ZMAIL-COMMAND-LOOP-MIXIN AROUND COMMAND-LOOP) (P.C. = 57)
(METHOD ZWEI#:ZMAIL-FRAME COMBINED COMMAND-LOOP) (P.C. = 47)
ZWEI#:ZMAIL-PROCESS-TOP-LEVEL (P.C. = 115)
SI#:PROCESS-TOP-LEVEL (P.C. = 115)
 5-Dec-83 16:03:09-EST,1847;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 5 Dec 83 15:45-EST
Received: from SCRC-COLLIE by SCRC-TENEX with CHAOS; Mon 5-Dec-83 15:30:30-EST
Date: Mon, 5 Dec 83 15:46 EST
From: Mike McMahon <MMcM%SCRC-TENEX@MIT-MC.ARPA>
Subject: Mark Survey
To: Kent M Pitman <KMP@MIT-MC.ARPA>
Cc: BUG-LISPM@MIT-MC.ARPA, ECC@MIT-MC.ARPA
In-reply-to: The message of 5 Dec 83 01:30-EST from Kent M Pitman <KMP at MIT-MC>
Message-ID: <831205154637.0.MMcM@SCRC.SCRC.Symbolics>

    Date: 5 December 1983 01:30 EST
    From: Kent M Pitman <KMP @ MIT-MC>

    I used Mark Survey tonight for the first time and must confess I found
    it incredibly clumsy. The main problem with the current interface is
    that you can't view and otherwise manipulate messages while you are
    creating the mark survey.

    It seems to me that it should be possible at any time, using the menu
    gotten by Right Click on a summary line, annotate a message with a 
    special flag saying that it is "marked". Such a flag would be maintained
    only in ZMail and not written to disk. Then rather than the Mark Survey
    option for filters, you could just request that the messages which were
    marked in the current survey be used to compose a new survey.

That means having to click twice and wait for a menu for each message
you want to add.  That's more inconvenient if they are all right there.

    This would make it painless to read several messages, marking them as
    you read them (rather than after) as something you want to reply to.

You could use keywords for this too, giving you the added ability to
maintain two sets.

    The reply command could, for example, prefer replying to marked messages 
    over replying to the current message.

That's getting into Experimental Mode.  It might be worth experimenting
with.
 5-Dec-83 18:14:48-EST,2329;000000000000
Received: from MIT-LENNON by MIT-OZ via Chaosnet; 5 Dec 83 18:14-EST
Date: Monday, 5 December 1983, 18:17-EST
From: Henry Lieberman <Henry at MIT-OZ>
Subject: Dpress lossage
To: BUG-LISPM at MIT-OZ

In Release 5.0 [GC'd Beta Test rev 3], Dusty plum, on Lisp Machine John Lennon (3600):

While trying to Dpress the file oz:ps:<Tinker>Abe.Press

>>Error: The object #<SUPDUP-GRAPHICS-STATE 17416156> received a NIL message, which went unclaimed.
         The rest of the message was (155)
While in the function (:METHOD TELNET:SUPDUP-GRAPHICS-STATE :SUPDUP-GRAPHICS)  (:METHOD TELNET:SUPDUP-STATE-BLOCK :SUPDUP-GRAPHICS)  (:METHOD TELNET:SUPDUP-FILTER :FILTER)

(:METHOD TELNET:SUPDUP-GRAPHICS-STATE :SUPDUP-GRAPHICS):  (P.C. = 32)
   Arg 0 (SELF): #<SUPDUP-GRAPHICS-STATE 17416156>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TELNET:SUPDUP-GRAPHICS-STATE -- 12. IV's, 0. FL's 15626712>
   Arg 2 (OPERATION): :SUPDUP-GRAPHICS
   Arg 3 (SUPDUP-GRAPHICS-INPUT-STREAM-initialization): #<HANGUP-FILTER 17414736>
   Local 4: TELNET:SUPDUP-GRAPHICS
   Local 5: #<DTP-ODD-PC 45735211>
   Local 6: #<DTP-LOCATIVE 17374707>
   Local 7: #<DTP-LOCATIVE 43540046>
   Local 8 (CH): 155

(:METHOD TELNET:SUPDUP-STATE-BLOCK :SUPDUP-GRAPHICS):  (P.C. = 5)
   Arg 0 (SELF): #<SUPDUP-STATE-BLOCK 17414747>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TELNET:SUPDUP-STATE-BLOCK -- 3. IV's, 0. FL's 15626036>
   Arg 2 (OPERATION): :SUPDUP-GRAPHICS
   Arg 3 (INPUT-STREAM): #<HANGUP-FILTER 17414736>

(:METHOD TELNET:SUPDUP-FILTER :FILTER):  (P.C. = 27)
   Arg 0 (SELF): #<SUPDUP-FILTER 17414742>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TELNET:SUPDUP-FILTER -- 3. IV's, 0. FL's 15625212>
   Arg 2 (OPERATION): :FILTER
   Arg 3 (CH): 231

(:METHOD TELNET:FILTER-STREAM :TYI-NO-HANG):  (P.C. = 15)
   Arg 0 (SELF): #<SUPDUP-FILTER 17414742>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TELNET:FILTER-STREAM -- 3. IV's, 0. FL's 15625220>
   Arg 2 (OPERATION): :TYI-NO-HANG

(:METHOD TELNET:NVT-WINDOW :TYPEOUT-TOP-LEVEL):  (P.C. = 37)
   Arg 0 (SELF): #<NVT-WINDOW Terminal 2 2240117 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TELNET:NVT-WINDOW -- 18. IV's, 10. FL's 24573464>
   Arg 2 (OPERATION): :TYPEOUT-TOP-LEVEL

SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
   Arg 0 (IGNORE): NIL
 5-Dec-83 21:24:55-EST,4004;000000000000
Received: from MIT-LISPM-30 by MIT-OZ via Chaosnet; 5 Dec 83 21:22-EST
Date: Monday, 5 December 3883, 21:21-EST
From: Patrick G. Sobalvarro <PGS at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In Experimental System 98.2, CADR 3.1, Experimental ZMail 53.0,
MIT-Specific 22.0, microcode 305, ZM MIT, on Lisp Machine Thirty:

PROBEF is broken: I did (PROBEF "mc:dsk:pgs;pgs mail"):

>>ERROR: Unknown OPEN option for MC: PGS; PGS MAIL
Backtrace from the debugger:

FS#:OPEN-CHAOS (P.C. = 1242)

 Arg 0 (HOST): #FS#:ITS-CHAOS-HOST "MIT-MC"
 Arg 1 (PATHNAME): #FS#:ITS-PATHNAME "MC: PGS; PGS MAIL"
 Rest arg: (:DIRECTION NIL)
Local 1 (DIRECTION): NIL
Local 2 (CHARACTERS): T
Local 3 (ERROR): T
Local 4 (ACCESS-ERROR): NIL
Local 5 (ELEMENT-TYPE): STRING-CHAR
Local 6 (IF-EXISTS): :NEW-VERSION
Local 7 (IF-DOES-NOT-EXIST): :ERROR
Local 8 (TEMPORARY): NIL
Local 9 (DELETED): NIL
Local 10 (RAW): NIL
Local 11 (SUPER-IMAGE): NIL
Local 12 (BYTE-SIZE): :DEFAULT
Local 13 (PRESERVE-DATES): NIL
Local 14 (IGNORE): NIL
Local 15 (ELEMENT-TYPE-P): NIL
Local 16 (IF-EXISTS-P): NIL
Local 17 (HOST-UNIT): #<HOST-UNIT 12165205>
Local 18 (DATA-CONN): NIL
Local 19 (PKT): #<PKT 16244471>
Local 20 (SUCCESS): NIL
Local 21 (STRING): " ERROR UUO F Unknown OPEN option"
Local 22 (NOT-ABORTED): T
Local 23 (PHONY-CHARACTERS): NIL
Local 24 (SIGN-EXTEND-BYTES): NIL
Local 25 (ERROR-OBJECT): #<HOST-UNIT 12165205>
Local 26: ((FS:FILE-NOT-FOUND SI#:CONDITION-CASE-THROW G1319) (FS:FILE-NOT-FOUND SI#:CONDITION-CASE-THROW FS#:G8688) (** SI#:EVAL-ABORT-TRIVIAL-ERRORS-HANDLER))
Local 27: (FS:FILE-NOT-FOUND SI#:CONDITION-CASE-THROW G1319)
Local 28: (FS:FILE-ALREADY-EXISTS SI#:CONDITION-CASE-THROW G1326)
Local 29: ((FS:FILE-ALREADY-EXISTS SI#:CONDITION-CASE-THROW G1326) (FS:FILE-NOT-FOUND SI#:CONDITION-CASE-THROW FS#:G8688) (** SI#:EVAL-ABORT-TRIVIAL-ERRORS-HANDLER))
Local 30 (*SELECTQ-ITEM*): NIL
Local 31 (PROPERTIES): NIL
Local 32 (CLOSE-SUCCESS): NIL
Local 33 (ERROR-OBJECT): NIL
Local 34 (IGNORE): NIL


(:METHOD FS#:CHAOS-PATHNAME :OPEN) (P.C. = 31)
  (SELF is #FS#:ITS-PATHNAME "MC: PGS; PGS MAIL")

 Arg 0 (OPERATION): :OPEN
 Arg 1 (PATHNAME): #FS#:ITS-PATHNAME "MC: PGS; PGS MAIL"
 Rest arg (OPTIONS): (:DIRECTION NIL)


OPEN (P.C. = 212)

 Arg 0 (FILENAME): #FS#:ITS-PATHNAME "MC: PGS; PGS MAIL"
 Rest arg (KEYWORD-ARGS): (:DIRECTION NIL)
Local 1: ((FS:FILE-ERROR) SI#:FILE-RETRY-HANDLER #FS#:ITS-PATHNAME "MC: PGS; PGS MAIL")
Local 2: ((** SI#:FILE-RETRY-HANDLER #FS#:ITS-PATHNAME "MC: PGS; PGS MAIL") (FS:FILE-NOT-FOUND SI#:CONDITION-CASE-THROW FS#:G8688) (** SI#:EVAL-ABORT-TRIVIAL-ERRORS-HANDLER))
Local 3 (NEW-PATHNAME): NIL
Local 4 (KEYL): NIL
Local 5 (KEY): NIL
Local 6 (CHARACTERS): NIL
Local 7 (DIRECTION): NIL
Local 8 (BYTE-SIZE): NIL
Local 9 (ERROR-P): NIL
Local 10 (ERROR-P-SPECD): NIL
Local 11 (DELETED-P): NIL
Local 12 (TEMPORARY-P): NIL
Local 13 (RAW-P): NIL
Local 14 (SUPER-IMAGE-P): NIL


PROBEF (P.C. = 64)

 Arg 0 (FILE): "mc:dsk:pgs;pgs mail"
Local 0 (STREAM): NIL
Local 1: (FS:FILE-NOT-FOUND SI#:CONDITION-CASE-THROW FS#:G8688)
Local 2: ((FS:FILE-NOT-FOUND SI#:CONDITION-CASE-THROW FS#:G8688) (** SI#:EVAL-ABORT-TRIVIAL-ERRORS-HANDLER))
Local 3 (STREAM): NIL
Local 4 (*SELECTQ-ITEM*): NIL


SI#:EVAL1 (P.C. = 1320)

 Arg 0 (FORM): (PROBEF "mc:dsk:pgs;pgs mail")
   --Defaulted args:--
 Arg 1 (NOHOOK): NIL
Local 0 (ARGNUM): 1
Local 1 (TEM): NIL
Local 2: NIL
Local 3 (FRAME): NIL
Local 4 (FCTN): #<DTP-FEF-POINTER PROBEF 2565437>
Local 5 (ARG-DESC): 101
Local 6 (NUM-ARGS): 1
Local 7 (CLOSURE-PASSED): NIL
Local 8 (LAMBDA-LIST): NIL
Local 9 (LL): NIL
Local 10 (QUOTE-STATUS): NIL
Local 11 (REST-FLAG): NIL
Local 12 (ARGL): NIL
Local 13: NIL
Local 14 (IGNORE): NIL
Local 15 (ADL): NIL
Local 16 (ITEM): NIL
Local 17 (*SELECTQ-ITEM*): NIL


Remainder of stack:

EVAL (P.C. = 57)
SI:EVAL-ABORT-TRIVIAL-ERRORS (P.C. = 44)
SI:LISP-TOP-LEVEL1 (P.C. = 262)
SI:LISP-TOP-LEVEL (P.C. = 35)
 5-Dec-83 21:54:50-EST,1636;000000000000
Received: from SCRC-TENEX by MIT-OZ via Chaosnet; 5 Dec 83 21:53-EST
Received: from SCRC-EUPHRATES by SCRC-TENEX with CHAOS; Mon 5-Dec-83 21:54:19-EST
Date: Monday, 5 December 1983, 22:11-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: Frank Sinatra Croaks
To: Christopher C. Stacy <CStacy at MIT-MC>
Cc: BUG-LISPM at MIT-OZ
In-reply-to: The message of 5 Dec 83 07:41-EST from Christopher C. Stacy <CStacy at MIT-MC>

    Date: Monday, 5 December 1983, 07:41-EST
    From: Christopher C. Stacy <CStacy at MIT-MC>

    In Release 5.0 [GC'd Beta Test rev 3], Dusty plum, on Lisp Machine Frank Sinatra (3600):

    I typed M-X Revert. It doesn't always do this, but there is no special
    state that the user can see. Maybe it saw "KMP" in the file plist and
    decided that there was supposed to be a bug report now.

    >>Trap: The first argument given to the SYS:+-INTERNAL instruction, NIL, was not a number.
    While in the function MAKE-ARRAY  SUBSTRING  FS:READ-FILE-PROPERTY-LIST-STRING

    MAKE-ARRAY:  (P.C. = 765)
       Arg 0 (DIMENSIONS): 24.
       Rest arg (OPTIONS): (:TYPE SYS:%ARRAY-TYPE-12 :AREA NIL)

    SUBSTRING:  (P.C. = 54)
       Arg 0 (STRING): "I1942 OPEN 12//05//83 07:31:30 7926 NIL T /"KMP/"
    PS:<KBE>DEMO-INIT.LISP.3
    "
       Arg 1 (FROM): 46.
       Arg 2 (TO): 70.
       --Defaulted args:--
       Arg 3 (AREA): NIL

I guess your machine is broken.  That array is probably of type 13, one
bit different, which is the type that most strings have.  You should
arrange to have your machine repaired.  I would start by looking at
the datapath board.
 5-Dec-83 22:37:27-EST,1976;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 5 Dec 83 22:36-EST
Received: from SCRC-EUPHRATES by SCRC-TENEX with CHAOS; Mon 5-Dec-83 22:36:49-EST
Date: Mon, 5 Dec 83 22:54 EST
From: "David A. Moon" <Moon%SCRC-TENEX@MIT-MC.ARPA>
Subject: signal-proceed-case
To: KMP@MIT-MC.ARPA
Cc: BUG-LISPM@MIT-MC.ARPA
In-reply-to: The message of 4 Dec 83 02:39-EST from KMP at MIT-MC

    Date: Sunday, 4 December 1983, 02:39-EST
    From: KMP at MIT-MC

    In Release 5.0 [GC'd Beta Test rev 3], Dusty plum, 
    on Lisp Machine Frank Sinatra (3600):

      (signal-proceed-case ((x) 'some-condition)
	((:foo) x))
       ==> (multiple-value-bind (nil x)
	       (signal 'some-condition ':proceed-types '(:foo))
	     (progn x))
  
      (signal-proceed-case ((x) 'some-condition)
	((:foo) x)
	((:bar) y))
       ==> (multiple-value-bind (#:g0261 x)
	       (signal 'some-condition ':proceed-types '(:foo :bar))
	     (selectq #:g0261 ((:foo) x) ((:bar) y)))

    The latter is correct, but the former (degenerate) case still seems 
    buggy to me. For these two cases to be analagous, I would think you'd 
    need a minimum of 

      (signal-proceed-case ((x) 'some-condition)
	((:foo) x))
       ==> (multiple-value-bind (nil x)
	       (signal 'some-condition ':proceed-types '(:foo))
	     (selectq #:g0017 ((:foo) x)))

    It turns out that if SOME-CONDITION is not an error condition, you can
    fall through into the proceed options. It also seems to me that even if
    this wasn't something the user was intended to do, it should be changed
    to be something he's allowed to do since it basically makes sense. 

    I actually thought this was "fixed in the source" back in Release 4.
    Am I confused?

I hadn't heard of this being fixed in the source.  If I had written this
code, I would not have put in the misguided "optimization" of not
checking the returned proceed type in some cases.  I removed it in the
source.
 5-Dec-83 23:03:37-EST,4633;000000000000
Received: from MIT-ML by MIT-OZ via Chaosnet; 5 Dec 83 23:01-EST
Date:  Monday, 5 December 1983 21:26 est
From:  Network_Server.Daemon@MIT-MULTICS.ARPA (PGS%MIT-OZ@MIT-MC@MIT-MC)
Message-ID:  <831206022650.443382@MIT-MULTICS.ARPA>
Resent-Date:  5 December 1983 23:01 est
Resent-From:  Barry Margolin <Margolin@MIT-MULTICS.ARPA>
Resent-To:  bug-lispm@MIT-OZ.ARPA
Resent-Comment:
          Note the year in the lower Date field.
Resent-Message-ID:  <831206040120.647474@MIT-MULTICS.ARPA>

Return-Path: <@MIT-MULTICS.ARPA:PGS%MIT-OZ@MIT-MC>
Received: from MIT-MC by MIT-MULTICS.ARPA TCP; 05-Dec-1983 21:26:42-est
Received: from MIT-LISPM-30 by MIT-OZ via Chaosnet; 5 Dec 83 21:22-EST
Date: Monday, 5 December 3883, 21:21-EST
From: Patrick G. Sobalvarro <PGS%MIT-OZ@MIT-MC.ARPA>
To: BUG-LISPM%MIT-OZ@MIT-MC.ARPA

In Experimental System 98.2, CADR 3.1, Experimental ZMail 53.0,
MIT-Specific 22.0, microcode 305, ZM MIT, on Lisp Machine Thirty:

PROBEF is broken: I did (PROBEF "mc:dsk:pgs;pgs mail"):

>>ERROR: Unknown OPEN option for MC: PGS; PGS MAIL
Backtrace from the debugger:

FS#:OPEN-CHAOS (P.C. = 1242)

 Arg 0 (HOST): #FS#:ITS-CHAOS-HOST "MIT-MC"
 Arg 1 (PATHNAME): #FS#:ITS-PATHNAME "MC: PGS; PGS MAIL"
 Rest arg: (:DIRECTION NIL)
Local 1 (DIRECTION): NIL
Local 2 (CHARACTERS): T
Local 3 (ERROR): T
Local 4 (ACCESS-ERROR): NIL
Local 5 (ELEMENT-TYPE): STRING-CHAR
Local 6 (IF-EXISTS): :NEW-VERSION
Local 7 (IF-DOES-NOT-EXIST): :ERROR
Local 8 (TEMPORARY): NIL
Local 9 (DELETED): NIL
Local 10 (RAW): NIL
Local 11 (SUPER-IMAGE): NIL
Local 12 (BYTE-SIZE): :DEFAULT
Local 13 (PRESERVE-DATES): NIL
Local 14 (IGNORE): NIL
Local 15 (ELEMENT-TYPE-P): NIL
Local 16 (IF-EXISTS-P): NIL
Local 17 (HOST-UNIT): #<HOST-UNIT 12165205>
Local 18 (DATA-CONN): NIL
Local 19 (PKT): #<PKT 16244471>
Local 20 (SUCCESS): NIL
Local 21 (STRING): " ERROR UUO F Unknown OPEN option"
Local 22 (NOT-ABORTED): T
Local 23 (PHONY-CHARACTERS): NIL
Local 24 (SIGN-EXTEND-BYTES): NIL
Local 25 (ERROR-OBJECT): #<HOST-UNIT 12165205>
Local 26: ((FS:FILE-NOT-FOUND SI#:CONDITION-CASE-THROW G1319) (FS:FILE-NOT-FOUND SI#:CONDITION-CASE-THROW FS#:G8688) (** SI#:EVAL-ABORT-TRIVIAL-ERRORS-HANDLER))
Local 27: (FS:FILE-NOT-FOUND SI#:CONDITION-CASE-THROW G1319)
Local 28: (FS:FILE-ALREADY-EXISTS SI#:CONDITION-CASE-THROW G1326)
Local 29: ((FS:FILE-ALREADY-EXISTS SI#:CONDITION-CASE-THROW G1326) (FS:FILE-NOT-FOUND SI#:CONDITION-CASE-THROW FS#:G8688) (** SI#:EVAL-ABORT-TRIVIAL-ERRORS-HANDLER))
Local 30 (*SELECTQ-ITEM*): NIL
Local 31 (PROPERTIES): NIL
Local 32 (CLOSE-SUCCESS): NIL
Local 33 (ERROR-OBJECT): NIL
Local 34 (IGNORE): NIL


(:METHOD FS#:CHAOS-PATHNAME :OPEN) (P.C. = 31)
  (SELF is #FS#:ITS-PATHNAME "MC: PGS; PGS MAIL")

 Arg 0 (OPERATION): :OPEN
 Arg 1 (PATHNAME): #FS#:ITS-PATHNAME "MC: PGS; PGS MAIL"
 Rest arg (OPTIONS): (:DIRECTION NIL)


OPEN (P.C. = 212)

 Arg 0 (FILENAME): #FS#:ITS-PATHNAME "MC: PGS; PGS MAIL"
 Rest arg (KEYWORD-ARGS): (:DIRECTION NIL)
Local 1: ((FS:FILE-ERROR) SI#:FILE-RETRY-HANDLER #FS#:ITS-PATHNAME "MC: PGS; PGS MAIL")
Local 2: ((** SI#:FILE-RETRY-HANDLER #FS#:ITS-PATHNAME "MC: PGS; PGS MAIL") (FS:FILE-NOT-FOUND SI#:CONDITION-CASE-THROW FS#:G8688) (** SI#:EVAL-ABORT-TRIVIAL-ERRORS-HANDLER))
Local 3 (NEW-PATHNAME): NIL
Local 4 (KEYL): NIL
Local 5 (KEY): NIL
Local 6 (CHARACTERS): NIL
Local 7 (DIRECTION): NIL
Local 8 (BYTE-SIZE): NIL
Local 9 (ERROR-P): NIL
Local 10 (ERROR-P-SPECD): NIL
Local 11 (DELETED-P): NIL
Local 12 (TEMPORARY-P): NIL
Local 13 (RAW-P): NIL
Local 14 (SUPER-IMAGE-P): NIL


PROBEF (P.C. = 64)

 Arg 0 (FILE): "mc:dsk:pgs;pgs mail"
Local 0 (STREAM): NIL
Local 1: (FS:FILE-NOT-FOUND SI#:CONDITION-CASE-THROW FS#:G8688)
Local 2: ((FS:FILE-NOT-FOUND SI#:CONDITION-CASE-THROW FS#:G8688) (** SI#:EVAL-ABORT-TRIVIAL-ERRORS-HANDLER))
Local 3 (STREAM): NIL
Local 4 (*SELECTQ-ITEM*): NIL


SI#:EVAL1 (P.C. = 1320)

 Arg 0 (FORM): (PROBEF "mc:dsk:pgs;pgs mail")
   --Defaulted args:--
 Arg 1 (NOHOOK): NIL
Local 0 (ARGNUM): 1
Local 1 (TEM): NIL
Local 2: NIL
Local 3 (FRAME): NIL
Local 4 (FCTN): #<DTP-FEF-POINTER PROBEF 2565437>
Local 5 (ARG-DESC): 101
Local 6 (NUM-ARGS): 1
Local 7 (CLOSURE-PASSED): NIL
Local 8 (LAMBDA-LIST): NIL
Local 9 (LL): NIL
Local 10 (QUOTE-STATUS): NIL
Local 11 (REST-FLAG): NIL
Local 12 (ARGL): NIL
Local 13: NIL
Local 14 (IGNORE): NIL
Local 15 (ADL): NIL
Local 16 (ITEM): NIL
Local 17 (*SELECTQ-ITEM*): NIL


Remainder of stack:

EVAL (P.C. = 57)
SI:EVAL-ABORT-TRIVIAL-ERRORS (P.C. = 44)
SI:LISP-TOP-LEVEL1 (P.C. = 262)
SI:LISP-TOP-LEVEL (P.C. = 35)

 5-Dec-83 23:11:17-EST,2448;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 5 Dec 83 23:10-EST
Received: from SCRC-EUPHRATES by SCRC-QUABBIN with CHAOS; Mon 5-Dec-83 23:14:43-EST
Date: Monday, 5 December 1983, 23:11-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: Truncated .BIN files from booting in the middle of a compilation
To: Kent M. Pitman <KMP at MIT-OZ>
Cc: BUG-LISPM at MIT-OZ, Dick at MIT-OZ, KBE-I-FILE at MIT-OZ
In-reply-to: The message of 4 Dec 83 21:14-EST from Kent M. Pitman <KMP at MIT-OZ>

    Date: Sunday, 4 December 1983, 21:14-EST
    From: Kent M. Pitman <KMP at MIT-OZ>

    If the machine is booted while compiling a file, the file server
    does a normal close rather than an abort close on the file. I don't
    see any good reason why it can't do the right thing.

    On ITS, this leaves a reasonably harmless _LSPM_ OUTPUT file laying
    around, but on Twenex this leaves a truncated .BIN file which 
    confuses later MAKE-SYSTEM's, which see the file's creation date
    and think it doesn't need to be re-compiled.

When I get a chance to test it I will change the file server so the code
that is there to get around this bug in the LGOUT JSYS is assembled in
for both Tenex and Tops-20 instead of just Tenex.  Maybe I'll first check
the Tops-20 sources to convince myself that LGOUT is really doing this.

    An easy test case is OZ:PS:<KMP.LISPM.BUGS>ABORT-COMPILATION.LISP.
    Start compiling it, then boot your machine when it tells you to.
    It contains:

	;;; -*- Mode:LISP; -*-
	;;; Compile this file and when it says to, boot your machine. 
	;;; Why does a .BIN file get created?
    
	#.(unwind-protect (progn (format t "~&Please boot your machine now.~%")
				 (process-wait "Await Boot Sequence" #'(lambda () nil)))
			  (format t "~&Hey! That's not what I asked you to do!~%"))
    
    This particular test case has the truncated .BIN file will actually
    load without FASLOAD complaining it has been truncated, at least
    in Release 5.0 (I didn't try it in Release 4.5). That is probably a
    bug in itself. The last thing that the compiler should do is mark
    the .BIN file with a password saying that compilation succeeded.

    Anyway, I can assure you that for other (real) cases, the .BIN file
    generated won't even be in .BIN file format (as if that matters, since
    half a .BIN file is not clearly better than no .BIN file at all).

    -kmp
 6-Dec-83 08:15:32-EST,437;000000000000
Mail-From: HEWITT created at  6-Dec-83 08:15:15
Date: Tue, 6 Dec 1983  08:15 EST
Message-ID: <HEWITT.11973309823.BABYL@MIT-OZ>
From: HEWITT@MIT-OZ
To:   bug-lispm@MIT-OZ
cc:   Hewitt@MIT-OZ
Subject: re-implement Zmail?
Reply-to:  Hewitt at MIT-XX

It seems to me that Zmail has achieved the dubious distinction of
being the most unreliable system on the Lisp Machine.  Is anyone seriously
considering rewriting it?

--Carl
 6-Dec-83 11:07:54-EST,2136;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 6 Dec 83 11:06-EST
Received: from MIT-APIARY-7 by MIT-OZ via Chaosnet; 6 Dec 83 11:06-EST
Date: Tuesday, 6 December 1983, 11:06-EST
From: Carl Hewitt <Hewitt%MIT-OZ@MIT-MC.ARPA>
Subject: does anyone know how to fix Zmail?
To: BUG-LISPM at MIT-MC

In Release 5.0 [GC'd Beta Test rev 3], dusty plum, on Lisp Machine Apiary-7 (3600):

Does anyone know what causes this?

>>Trap: The first argument given to the AR-1 instruction, NIL, was not an array.
While in the function ZWEI:ZMAIL-BACKGROUND-PARSE-MSGS  ZWEI:ZMAIL-BACKGROUND-PERFORM  ZWEI:ZMAIL-BACKGROUND-LOOP-BODY

ZWEI:ZMAIL-BACKGROUND-PARSE-MSGS:  (P.C. = 70)
   Arg 0 (REQUEST): (ZWEI:ZMAIL-BACKGROUND-PARSE-MSGS #<BABYL-BUFFER "XX:PS:<HEWITT>HEWITT.BABYL" 33604057> 200.)
   Local 1 (BUFFER): #<BABYL-BUFFER "XX:PS:<HEWITT>HEWITT.BABYL" 33604057>
   Local 2 (START): 200.
   Local 3 (ARRAY): #<ART-Q-512. 33604101>
   Local 4 (.ME-P.): T
   Local 5 (.CLOSE-MODE.): :ABORT
   Local 6: #<DTP-LOCATIVE 12072655>
   Local 7: SYS:UNWIND-PROTECT-TAG
   Local 8: #<DTP-ODD-PC 31607524>
   Local 9: #<DTP-LOCATIVE 12072663>
   Local 10: #<DTP-LOCATIVE 43340064>
   Local 11: #<DTP-LOCATIVE 33604060>
   Local 12: T
   Local 13: SYS:UNWIND-PROTECT-TAG
   Local 14: #<DTP-ODD-PC 31607530>
   Local 15: #<DTP-LOCATIVE 12072663>
   Local 16: #<DTP-LOCATIVE 43340122>
   Local 17 (INDEX): 432.
   Local 18 (MAX): 437.
   Local 19 (COUNT): 0.
   Local 20 (MSG): NIL

ZWEI:ZMAIL-BACKGROUND-PERFORM:  (P.C. = 20)
   Arg 0 (CURRENT-REQUEST): (ZWEI:ZMAIL-BACKGROUND-PARSE-MSGS #<BABYL-BUFFER "XX:PS:<HEWITT>HEWITT.BABYL" 33604057> 200.)

ZWEI:ZMAIL-BACKGROUND-LOOP-BODY:  (P.C. = 37)
   Arg 0 (LOCK): #<DTP-LOCATIVE 12072574>
   Arg 1 (COMMAND-BUFFER-POINTER): #<DTP-LOCATIVE 12072573>
   Arg 2 (PRELOAD-QUEUE-POINTER): #<DTP-LOCATIVE 12072575>
   Arg 3 (PRELOAD-FILE-POINTER): #<DTP-LOCATIVE 12072576>

ZWEI:ZMAIL-BACKGROUND:  (P.C. = 32)
   Arg 0 (*FOREGROUND-WINDOW*-initialization): #<ZMAIL-FRAME Main Zmail Window 2300161 deexposed>

SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
   Arg 0 (IGNORE): NIL
 6-Dec-83 14:11:21-EST,398;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 6 Dec 83 14:09-EST
Date: Tuesday, 6 December 1983, 13:57-EST
From: Alan Bawden <Alan at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In System 97.28, CADR 1.0, ZMail 51.9, MIT-Specific 21.0, microcode 257,
ZM MIT, on Lisp Machine Four:

In the debugger the documentation for the c-m-V command explains that it
is "just like the c-m-V command except...".
 6-Dec-83 15:41:04-EST,2327;000000000000
Received: from MIT-LISPM-9 by MIT-OZ via Chaosnet; 6 Dec 83 15:38-EST
Date: Tuesday, 6 December 1983, 15:42-EST
From: Laura Bagnall <Laura at MIT-OZ>
Subject: Hitting <Network>-B in Telnet bombs out
To: BUG-LISPM at MIT-OZ

In Release 4.5, site configuration 65, on Lisp Machine Nine:

I was in Telnet, connected to OZ and I typed Network-B.  The documentation
claims that this should produce a breakpoint; the following error occurred
instead:

>>Error: The object #<TELNET Telnet 1 20554302 exposed> received a SET-SUPER-IMAGE-MODE message, which went unclaimed.
The rest of the message was (NIL)
While in the function (METHOD SUPDUP:BASIC-NVT HANDLE-ESCAPE)  (INTERNAL (METHOD TELNET COMBINED HANDLE-ESCAPE) 0)  (METHOD SUPDUP:SUPDUP-OUTPUT-MIXIN WHOPPER HANDLE-ESCAPE)

(METHOD SUPDUP:BASIC-NVT HANDLE-ESCAPE):  (P.C. = 274)
   (SELF = #<TELNET Telnet 1 20554302 exposed>)
   Arg 0 (OPERATION): HANDLE-ESCAPE
   Local 0 (CH): 102
   Local 1 (XPOS): 10
   Local 2 (YPOS): 356
   Local 3 (.OLD.OUTPUT.HOLD.): NIL

(INTERNAL (METHOD TELNET COMBINED HANDLE-ESCAPE) 0):  (P.C. = 44)
   (SELF = #<TELNET Telnet 1 20554302 exposed>)
   Arg 0 (SELF-MAPPING-TABLE): #<Map to flavor SUPDUP:BASIC-NVT -- 14. IV's, 0. FL's 25462647>
   Rest arg (.DAEMON-CALLER-ARGS.): (HANDLE-ESCAPE)

(METHOD SUPDUP:SUPDUP-OUTPUT-MIXIN WHOPPER HANDLE-ESCAPE):  (P.C. = 40)
   (SELF = #<TELNET Telnet 1 20554302 exposed>)
   Arg 0 (.WHOPPER-CONTINUATION.): #<DTP-FEF-POINTER (INTERNAL (METHOD TELNET COMBINED HANDLE-ESCAPE) 0) 10055424>
   Arg 1 (.OLD-SELF-MAPPING-TABLE.): #<Map to flavor TELNET -- 2. IV's, 15. FL's 25462762>
   Arg 2 (SELF-MAPPING-TABLE): #<Map to flavor SUPDUP:SUPDUP-OUTPUT-MIXIN -- 20. IV's, 0. FL's 25462627>
   Arg 3 (.OPERATION.): HANDLE-ESCAPE

(METHOD TELNET COMBINED HANDLE-ESCAPE):  (P.C. = 36)
   (SELF = #<TELNET Telnet 1 20554302 exposed>)
   Rest arg (.DAEMON-CALLER-ARGS.): (HANDLE-ESCAPE)

(METHOD SUPDUP:BASIC-NVT TYPEIN-TOP-LEVEL):  (P.C. = 443)
   (SELF = #<TELNET Telnet 1 20554302 exposed>)
   Arg 0 (OPERATION): TYPEIN-TOP-LEVEL
   --Defaulted args:--
   Arg 1 (TOP-LEVEL-P): T

SUPDUP:TYPEIN-TOP-LEVEL:  (P.C. = 24)
   Arg 0 (WINDOW): #<TELNET Telnet 1 20554302 exposed>

SI:PROCESS-TOP-LEVEL:  (P.C. = 125)
   --Defaulted args:--
   Arg 0 (IGNORE): NIL
 6-Dec-83 18:45:11-EST,2885;000000000000
Received: from MIT-APIARY-8 by MIT-OZ via Chaosnet; 6 Dec 83 18:44-EST
Date: Tuesday, 6 December 1983, 18:47-EST
From: Mark H. Shirley <MHS at MIT-OZ>
Subject: Bogus CHECK-FOR-BOGUS-KEYWORD function?
To: BUG-LISPM at MIT-OZ

In Release 5.0 [GC'd Beta Test rev 3], dusty plum, on Lisp Machine Apiary-8 (3600):

To: BUG-beta-test@OZ
--Text follows this line--

It seems like SI:CHECK-FOR-BOGUS-KEYWORD should check not give
an error message if SI:XR-READ-FOR-EFFECT is set.

    i.e. If I do:

#+rel-4 ':art-8b			  ;rel-4 could be any nonexistent feature.

    in Rel 5 (where status feature rel-4 doesn't exist), I get
an error.

>>Error: Array types are not keywords.  :ART-8B should be GLOBAL:ART-8B
While in the function SI:CHECK-FOR-BOGUS-KEYWORD  SI:PKG-NEW-KEYWORD-SYMBOL  GLOBAL:INTERN

SI:CHECK-FOR-BOGUS-KEYWORD:  (P.C. = 12)
   Arg 0 (SYMBOL): :ART-8B

SI:PKG-NEW-KEYWORD-SYMBOL:  (P.C. = 3)
   Arg 0 (PKG): #<Package KEYWORD 6676050>
   Arg 1 (SYM): :ART-8B
   Arg 2 (HASH): 10151623625
   Arg 3 (IGNORE): 0

GLOBAL:INTERN:  (P.C. = 136)
   Arg 0 (SYM): "ART-8B"
   --Defaulted args:--
   Arg 1 (PKG): #<Package KEYWORD 6676050>

SI:XR-READ-SYMBOL:  (P.C. = 21)
   Arg 0 (STREAM): #:TERMINAL-IO-SYN-STREAM
   Arg 1 (STRING): "ART-8B"

SI:XR-READ-THING:  (P.C. = 236)
   Arg 0 (STREAM): #:TERMINAL-IO-SYN-STREAM

(:INTERNAL SI:READ-INTERNAL 0):  (P.C. = 15)
   Arg 0 (STREAM): #:TERMINAL-IO-SYN-STREAM
   Arg 1 (FUNCTION): SI:READ-RECURSIVE
   Arg 2 (EOF-OPTION): SI:NO-EOF-OPTION

SI:READ-INTERNAL:  (P.C. = 53)
   Arg 0 (FUNCTION): SI:READ-RECURSIVE
   Rest arg (READ-ARGS): (#:TERMINAL-IO-SYN-STREAM SI:NO-EOF-OPTION)

SI:READ-RECURSIVE:  (P.C. = 5)
   Arg 0 (STREAM): #:TERMINAL-IO-SYN-STREAM

Rest of stack:
SI:XR-PACKAGE-PREFIX:  (P.C. = 66)
(:PROPERTY SI:PACKAGE-PREFIX SI:STANDARD-READ-FUNCTION):  (P.C. = 5)
SI:XR-READ-THING:  (P.C. = 60)
(:INTERNAL SI:READ-INTERNAL 0):  (P.C. = 15)
SI:READ-INTERNAL:  (P.C. = 53)
SI:READ-RECURSIVE:  (P.C. = 5)
SI:XR-QUOTE-MACRO:  (P.C. = 5)
(:INTERNAL SI:READ-INTERNAL 0):  (P.C. = 30)
SI:READ-INTERNAL:  (P.C. = 53)
SI:READ-RECURSIVE:  (P.C. = 5)
SI:XR-#+-MACRO:  (P.C. = 10)
(:INTERNAL SI:READ-INTERNAL 0):  (P.C. = 30)
(:DEFUN-METHOD TV:RUBOUT-HANDLER-READ):  (P.C. = 61)
(:METHOD TV:STREAM-MIXIN :RUBOUT-HANDLER):  (P.C. = 72)
SI:READ-INTERNAL:  (P.C. = 46)
GLOBAL:READ-FOR-TOP-LEVEL:  (P.C. = 6)
SI:BREAK-READ-FUNCTION:  (P.C. = 124)
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 142)
GLOBAL:BREAK:  (P.C. = 173)
(:DEFUN-METHOD ZWEI:COM-BREAK):  (P.C. = 112)
ZWEI:COM-BREAK:  (P.C. = 12)
ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 200)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 41)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
 6-Dec-83 21:57:42-EST,801;000000000000
Received: from MIT-LISPM-1 by MIT-OZ via Chaosnet; 6 Dec 83 21:56-EST
Date: Tuesday, 6 December 1983, 21:54-EST
From: Robert P. Krajewski <RpK at MIT-OZ>
Subject: Advising SI:PRINT-OBJECT causes NIL-printing lossage
To: BUG-LISPM-MIT at MIT-OZ

In Bad Inconsistently updated System 98.4, CADR 3.1,
Inconsistently updated ZMail 53.2, MIT-Specific 22.0, microcode 305,
ZM MIT, on Lisp Machine One:

If I advise SI:PRINT-OBJECT like this:

	[from OZ:PS:<RPK>LISPM.INIT]

(ADVISE SI:PRINT-OBJECT :AROUND NIL-CHECK ()
  (IF (FIRST ARGLIST) :DO-IT (FORMAT (FOURTH ARGLIST) "()")))

to get NIL to print out as "()", NIL will actually print out as nothing,
that is to say (STRING-LENGTH (FORMAT () "~A" NIL)) = 0.  This did not
happen in any MIT system before and including 97.

``Bob''
 6-Dec-83 22:00:51-EST,1328;000000000000
Received: from SCRC-TENEX by MIT-OZ via Chaosnet; 6 Dec 83 22:00-EST
Received: from SCRC-THAMES by SCRC-TENEX with CHAOS; Tue 6-Dec-83 20:07:20-EST
Date: Tuesday, 6 December 1983, 20:08-EST
From: Scott W McKay <SWM at SCRC-VIXEN>
Subject: Bogus CHECK-FOR-BOGUS-KEYWORD function?
To: MHS at MIT-OZ, BUG-LISPM at MIT-OZ
In-reply-to: The message of 6 Dec 83 18:47-EST from Mark H. Shirley <MHS at MIT-OZ>

    Date: Tuesday, 6 December 1983, 18:47-EST
    From: Mark H. Shirley <MHS at MIT-OZ>
    In Release 5.0 [GC'd Beta Test rev 3], dusty plum, on Lisp Machine Apiary-8 (3600):

    To: BUG-beta-test@OZ
    --Text follows this line--

    It seems like SI:CHECK-FOR-BOGUS-KEYWORD should check not give
    an error message if SI:XR-READ-FOR-EFFECT is set.

	i.e. If I do:

    #+rel-4 ':art-8b			  ;rel-4 could be any nonexistent feature.

	in Rel 5 (where status feature rel-4 doesn't exist), I get
    an error.

    >>Error: Array types are not keywords.  :ART-8B should be GLOBAL:ART-8B
    While in the function SI:CHECK-FOR-BOGUS-KEYWORD  SI:PKG-NEW-KEYWORD-SYMBOL  GLOBAL:INTERN

Array types were never really keywords - ':art-8b used to work only
because the KEYWORD and USER packages were the same thing.  Now, since
keywords live in their own package, it doesn't work.  Use 'art-8b.
 6-Dec-83 22:45:29-EST,4478;000000000000
Received: from MIT-LISPM-1 by MIT-OZ via Chaosnet; 6 Dec 83 22:31-EST
Date: Tuesday, 6 December 1983, 22:29-EST
From: Robert P. Krajewski <RpK at MIT-OZ>
Subject: ITS probes do not work
To: BUG-LISPM-MIT at MIT-OZ
CC: BUG-FILE-Server at MIT-OZ

In Bad Inconsistently updated System 98.4, CADR 3.1,
Inconsistently updated ZMail 53.2, MIT-Specific 22.0, microcode 305,
ZM MIT, on Lisp Machine One:

Tried a PROBEF.  It failed on MC and ML.

>>ERROR: Unknown OPEN option for ML: SYSENG; HSTMIT >
Backtrace from the debugger:

FS#:OPEN-CHAOS (P.C. = 1242)

 Arg 0 (HOST): #FS#:ITS-CHAOS-HOST "MIT-ML"
 Arg 1 (PATHNAME): #FS#:ITS-PATHNAME "ML: SYSENG; HSTMIT >"
 Rest arg: (:DIRECTION NIL)
Local 1 (DIRECTION): NIL
Local 2 (CHARACTERS): T
Local 3 (ERROR): T
Local 4 (ACCESS-ERROR): NIL
Local 5 (ELEMENT-TYPE): STRING-CHAR
Local 6 (IF-EXISTS): :NEW-VERSION
Local 7 (IF-DOES-NOT-EXIST): :ERROR
Local 8 (TEMPORARY): NIL
Local 9 (DELETED): NIL
Local 10 (RAW): NIL
Local 11 (SUPER-IMAGE): NIL
Local 12 (BYTE-SIZE): :DEFAULT
Local 13 (PRESERVE-DATES): NIL
Local 14 (IGNORE): NIL
Local 15 (ELEMENT-TYPE-P): NIL
Local 16 (IF-EXISTS-P): NIL
Local 17 (HOST-UNIT): #<HOST-UNIT 31464767>
Local 18 (DATA-CONN): NIL
Local 19 (PKT): #S(CHAOS#:PKT :PKT-OPCODE-LEFT-JUSTIFIED 256. :PKT-OPCODE ...)
Local 20 (SUCCESS): NIL
Local 21 (STRING): " ERROR UUO F Unknown OPEN option"
Local 22 (NOT-ABORTED): T
Local 23 (PHONY-CHARACTERS): NIL
Local 24 (SIGN-EXTEND-BYTES): NIL
Local 25 (ERROR-OBJECT): #<HOST-UNIT 31464767>
Local 26: ((FS:FILE-NOT-FOUND CONDITION-CASE-THROW USER#:G1319) (FS:FILE-NOT-FOUND CONDITION-CASE-THROW FS#:G8688) (** EVAL-ABORT-TRIVIAL-ERRORS-HANDLER))
Local 27: (FS:FILE-NOT-FOUND CONDITION-CASE-THROW USER#:G1319)
Local 28: (FS:FILE-ALREADY-EXISTS CONDITION-CASE-THROW USER#:G1326)
Local 29: ((FS:FILE-ALREADY-EXISTS CONDITION-CASE-THROW USER#:G1326) (FS:FILE-NOT-FOUND CONDITION-CASE-THROW FS#:G8688) (** EVAL-ABORT-TRIVIAL-ERRORS-HANDLER))
Local 30 (*SELECTQ-ITEM*): NIL
Local 31 (PROPERTIES): NIL
Local 32 (CLOSE-SUCCESS): NIL
Local 33 (ERROR-OBJECT): NIL
Local 34 (IGNORE): NIL


(:METHOD FS#:CHAOS-PATHNAME :OPEN) (P.C. = 31)
  (SELF is #FS#:ITS-PATHNAME "ML: SYSENG; HSTMIT >")

 Arg 0 (OPERATION): :OPEN
 Arg 1 (PATHNAME): #FS#:ITS-PATHNAME "ML: SYSENG; HSTMIT >"
 Rest arg (OPTIONS): (:DIRECTION NIL)


OPEN (P.C. = 212)

 Arg 0 (FILENAME): #FS#:ITS-PATHNAME "ML: SYSENG; HSTMIT >"
 Rest arg (KEYWORD-ARGS): (:DIRECTION NIL)
Local 1: ((FS:FILE-ERROR) FILE-RETRY-HANDLER #FS#:ITS-PATHNAME "ML: SYSENG; HSTMIT >")
Local 2: ((** FILE-RETRY-HANDLER #FS#:ITS-PATHNAME "ML: SYSENG; HSTMIT >") (FS:FILE-NOT-FOUND CONDITION-CASE-THROW FS#:G8688) (** EVAL-ABORT-TRIVIAL-ERRORS-HANDLER))
Local 3 (NEW-PATHNAME): NIL
Local 4 (KEYL): NIL
Local 5 (KEY): NIL
Local 6 (CHARACTERS): NIL
Local 7 (DIRECTION): NIL
Local 8 (BYTE-SIZE): NIL
Local 9 (ERROR-P): NIL
Local 10 (ERROR-P-SPECD): NIL
Local 11 (DELETED-P): NIL
Local 12 (TEMPORARY-P): NIL
Local 13 (RAW-P): NIL
Local 14 (SUPER-IMAGE-P): NIL


PROBEF (P.C. = 64)

 Arg 0 (FILE): "ml:syseng;hstmit"
Local 0 (STREAM): NIL
Local 1: (FS:FILE-NOT-FOUND CONDITION-CASE-THROW FS#:G8688)
Local 2: ((FS:FILE-NOT-FOUND CONDITION-CASE-THROW FS#:G8688) (** EVAL-ABORT-TRIVIAL-ERRORS-HANDLER))
Local 3 (STREAM): NIL
Local 4 (*SELECTQ-ITEM*): NIL


EVAL1 (P.C. = 1320)

 Arg 0 (FORM): (PROBEF "ml:syseng;hstmit")
   --Defaulted args:--
 Arg 1 (NOHOOK): NIL
Local 0 (ARGNUM): 1.
Local 1 (TEM): NIL
Local 2: NIL
Local 3 (FRAME): NIL
Local 4 (FCTN): #<DTP-FEF-POINTER PROBEF 2565437>
Local 5 (ARG-DESC): 65.
Local 6 (NUM-ARGS): 1.
Local 7 (CLOSURE-PASSED): NIL
Local 8 (LAMBDA-LIST): NIL
Local 9 (LL): NIL
Local 10 (QUOTE-STATUS): NIL
Local 11 (REST-FLAG): NIL
Local 12 (ARGL): NIL
Local 13: NIL
Local 14 (IGNORE): NIL
Local 15 (ADL): NIL
Local 16 (ITEM): NIL
Local 17 (*SELECTQ-ITEM*): NIL


Remainder of stack:

EVAL (P.C. = 61)
EVAL-ABORT-TRIVIAL-ERRORS (P.C. = 44)
BREAK (P.C. = 524)
ZWEI#:COM-BREAK (P.C. = 44)
ZWEI#:COMMAND-EXECUTE (P.C. = 115)
ZWEI#:PROCESS-COMMAND-CHAR (P.C. = 65)
(:METHOD ZWEI:WINDOW :EDIT) (P.C. = 464)
(:INTERNAL (:METHOD ZWEI:ZMACS-WINDOW :COMBINED :EDIT) 0.) (P.C. = 74)
FUNCALL (P.C. = 25)
(:METHOD ZWEI#:DISPLAYER :AROUND :EDIT) (P.C. = 31)
(:METHOD ZWEI:ZMACS-WINDOW :COMBINED :EDIT) (P.C. = 47)
ZWEI#:ZMACS-WINDOW-TOP-LEVEL (P.C. = 46)
PROCESS-TOP-LEVEL (P.C. = 152)
 6-Dec-83 22:48:55-EST,1212;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 6 Dec 83 22:33-EST
Received: from SCRC-EUPHRATES by SCRC-QUABBIN with CHAOS; Tue 6-Dec-83 22:38:01-EST
Date: Tuesday, 6 December 1983, 22:34-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: Bogus CHECK-FOR-BOGUS-KEYWORD function?
To: Mark H. Shirley <MHS at MIT-OZ>
Cc: BUG-LISPM at MIT-OZ
In-reply-to: The message of 6 Dec 83 18:47-EST from Mark H. Shirley <MHS at MIT-OZ>

    Date: Tuesday, 6 December 1983, 18:47-EST
    From: Mark H. Shirley <MHS at MIT-OZ>

    In Release 5.0 [GC'd Beta Test rev 3], dusty plum, on Lisp Machine Apiary-8 (3600):

    To: BUG-beta-test@OZ
    --Text follows this line--

    It seems like SI:CHECK-FOR-BOGUS-KEYWORD should check not give
    an error message if SI:XR-READ-FOR-EFFECT is set.

	i.e. If I do:

    #+rel-4 ':art-8b			  ;rel-4 could be any nonexistent feature.

	in Rel 5 (where status feature rel-4 doesn't exist), I get
    an error.

You're right, although there are no keywords that existed in Rel-4 but don't
in Rel-5, so there may be no practical applications for this.
check-for-bogus-keyword will go away in the next release; it's just there
as a conversion aid.
 6-Dec-83 22:51:42-EST,1011;000000000000
Received: from MIT-ELVIS by MIT-OZ via Chaosnet; 6 Dec 83 22:39-EST
Date: Tuesday, 6 December 1983, 22:39-EST
From: Henry Lieberman <Henry at MIT-OZ>
Subject: [SILVERBERG at SRI-CSL: multi-speed mouse]
To: Bug-Lispm at MIT-OZ

Received: from MIT-MC by MIT-OZ via Chaosnet; 6 Dec 83 12:50-EST
Date:  6 Dec 1983 0949-PST
From: Brad A. Silverberg <SILVERBERG at SRI-CSL>
Subject: multi-speed mouse
To: henry%mit-oz at MIT-MC

The Apple Lisa has a two-speed mouse, fast and slow.
If dx+dy exceeds a certain threshold, they are scaled by a speedup factor.
The transition is very smooth, so that you can move al the way across the
screen in one swift, compact motion but still have single-pixel resolution
when moving slowly in a local area.  It works so well in fact, that when
scaling is turned off, people always think something is wrong
and the mouse is misbehaving.  Few people are even aware
that scaling is going on: it just feels "right".

-- Brad Silverberg, formerly of Apple
-------
 6-Dec-83 23:28:50-EST,1022;000000000000
Received: from SCRC-TENEX by MIT-OZ via Chaosnet; 6 Dec 83 23:27-EST
Received: from SCRC-EUPHRATES by SCRC-TENEX with CHAOS; Tue 6-Dec-83 23:26:39-EST
Date: Tuesday, 6 December 1983, 23:27-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: [SILVERBERG at SRI-CSL: multi-speed mouse]
To: Henry Lieberman <Henry at MIT-OZ>
Cc: Bug-Lispm at MIT-OZ
In-reply-to: The message of 6 Dec 83 22:39-EST from Henry Lieberman <Henry at MIT-OZ>

    Date: Tuesday, 6 December 1983, 22:39-EST
    From: Henry Lieberman <Henry at MIT-OZ>

    Date:  6 Dec 1983 0949-PST
    From: Brad A. Silverberg <SILVERBERG at SRI-CSL>

    The Apple Lisa has a two-speed mouse, fast and slow.

The Lisp machine has had a generalized form of this for many years, and
it is quite useful.  Unfortunately it is not turned on by default and
more unfortunately it doesn't work yet on the 3600.  Documentation is in
the Release 5.0 Notes I believe (just because that is the time at which
it was noticed that it was not documented).
 7-Dec-83 01:31:40-EST,671;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 7 Dec 83 01:31-EST
Date: Wednesday, 7 December 1983, 01:16-EST
From: Christopher C. Stacy <CStacy at MIT-DM>
Subject: damnit!!
To: BUG-LISPM at MIT-AI

In Release 5.0 Dusty Plum GC'd rev 3. BETA TEST, on JIMI HENDRIX (3600):

This god damned fucking piece of shit operating system is still
fucking telling me that MIT-MC is named MIT-DM, even after I loaded
Moon's patch and everything.  Actually, now it is going out only for
mail; the FILE name in the wholinem the other short namesm and the
primary name are OK.  This is very irritating, in case you can't
figure that out from the tone of this bug report.

 7-Dec-83 04:59:29-EST,1072;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 7 Dec 83 04:59-EST
Date: 7 December 1983 04:57 EST
From: Pandora B. Berman <CENT @ MIT-MC>
Subject: more damn it
To: CSTACY @ MIT-MC
cc: BUG-LISPM @ MIT-MC

    Received: from MIT-MC by MIT-OZ via Chaosnet; 7 Dec 83 01:31-EST
    Date: Wednesday, 7 December 1983, 01:16-EST
    From: Christopher C. Stacy <CStacy at MIT-DM>
    Subject: damnit!!
    To: BUG-LISPM at MIT-AI
    In Release 5.0 Dusty Plum GC'd rev 3. BETA TEST, on JIMI HENDRIX (3600):
    This god damned fucking piece of shit operating system is still fucking
    telling me that MIT-MC is named MIT-DM, even after I loaded Moon's
    patch and everything.  Actually, now it is going out only for mail; the
    FILE name in the wholinem the other short namesm and the primary name
    are OK.  This is very irritating, in case you can't figure that out
    from the tone of this bug report.

as bad, or possibly worse, is that it also still thinks the ai lab's 20 is
called AI. i agree that it is maddening; i've been getting upset too.
 8-Dec-83 01:46:41-EST,3073;000000000000
Received: from MIT-XX by MIT-OZ via Chaosnet; 8 Dec 83 01:45-EST
Date: Thursday, 8 December 1983, 01:41-EST
From: Mark A. Peot <MARK at MIT-XX>
To: BUG-LISPM at MIT-OZ

In MIT-Specific 19.5, System 94.38, ZMail 50.17,
Experimental Local-File 44.3, microcode 239, gc@34, on Ford Prefect:

	I found an obvious bug in the function color:color-draw-line.  The function
only looks at the ALU argument when it is drawing a vertical or horizontal lines.
Here is the function:

(DEFUN COLOR-DRAW-LINE (X1 Y1 X2 Y2
			&OPTIONAL (COLOR 17) (ALU TV:ALU-SETA) (SCREEN COLOR-SCREEN))
  "Draw a line from X1, Y1 to X2, Y2 in color COLOR."
    (AND (> X1 X2) (SWAPF X1 X2) (SWAPF Y1 Y2))
    (TV:PREPARE-SHEET (SCREEN)
      (LET ((DX (- X2 X1))
	    (DY (- Y2 Y1))
	    (PIXEL-ARRAY (TV:SHEET-SCREEN-ARRAY COLOR-SCREEN)))
	(LET ((DIR-Y (IF (MINUSP DY) -1 1))
	      (DY (ABS DY)))
	  (COND ((ZEROP DY) (COLOR-BITBLT X1 Y1 X2 (1+ Y1) COLOR ALU))
		((ZEROP DX) (COLOR-BITBLT X1 (MIN Y1 Y2) (1+ X2) (MAX Y1 Y2) COLOR ALU))
		((> DX DY)			;X IS LARGER STEP
		 (DO ((X1 X1 (1+ X1))
		      (REM (TRUNCATE DY 2) (+ REM DY)))
		     ((> X1 X2))
		   (IF ( REM DX) (SETQ Y1 (+ Y1 DIR-Y) REM (- REM DX)))
		   (ASET COLOR PIXEL-ARRAY X1 Y1)))
		(T				;Y IS LARGER STEP
		 (DO ((I 0 (1+ I))
		      (Y Y1 (+ Y DIR-Y))
		      (REM (TRUNCATE DX 2) (+ REM DX)))
		     ((> I DY))
		   (IF ( REM DY) (SETQ X1 (1+ X1) REM (- REM DY)))
		   (ASET COLOR PIXEL-ARRAY X1 Y))))))))

	I hacked up a quick fix for this.  There are probably quicker ways of drawing the
pixels which don't use bitblt, but I don't know how to implement them.  Like the original,
this still doesn't clip at the edges.  It dies if you try to write off the screen.
Quick Fix:

(defun color-draw-line (x1 y1 x2 y2
			&optional (color 17) (alu tv:alu-seta) (screen color-screen))
    (and (> x1 x2) (swapf x1 x2) (swapf y1 y2))
    (color-fillarray color)
    (tv:prepare-sheet (screen)
      (let ((dx (- x2 x1))
	    (dy (- y2 y1)))
	(let ((dir-y (if (minusp dy) -1 1))
	      (dy (abs dy))
	      (array (tv:sheet-screen-array screen)))
	    (cond ((zerop dy) 
		   (bitblt alu (- x2 x1) 1 bitblt-array 0 0 
			   array
			   x1 y1))
		  ((zerop dx) 
		   (bitblt alu 1 (abs (- y1 y2)) bitblt-array 0 0
			   array
			   x1 (min y1 y2)))
		((> dx dy)			;X IS LARGER STEP
		 (do ((x1 x1 (1+ x1))
		      (rem (truncate dy 2) (+ rem dy)))
		     ((> x1 x2))
		   (if ( rem dx) (setq y1 (+ y1 dir-y) rem (- rem dx)))
		   (bitblt alu 1 1 bitblt-array 0 0
			   array x1 y1)))
		(t				;Y IS LARGER STEP
		 (do ((i 0 (1+ i))
		      (y y1 (+ y dir-y))
		      (rem (truncate dx 2) (+ rem dx)))
		     ((> i dy))
		   (if ( rem dy) (setq x1 (1+ x1) rem (- rem dy)))
		   (bitblt alu 1 1 bitblt-array 0 0
			   array x1 y))))))))


How 'bout writing a real version of this.  I noticed while I was doing this that
most of the graphics functions (draw-wide-curve, draw-filled-in-sector, etc.) do not
do the alu stuff properly.

				Mark Peot (MARK@XX)
 8-Dec-83 04:32:28-EST,1291;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 8 Dec 83 04:32-EST
Date: Thursday, 8 December 1983, 04:35-EST
From: Christopher C. Stacy <CStacy at MIT-MC>
Subject: Tired of bogus host mailing-names
To: BUG-LISPM at MIT-OZ, BUG-BETA-TEST at MIT-OZ
Cc: CSTACY at MIT-MC, CENT at MIT-ML


In Release 5.0 [GC'd Beta Test rev 3], Dusty plum, 
   on Lisp Machine Frank Sinatra (3600):

This is now in my LispM init file.
Fixes the "AI" and "DM" problems.

NETI:
(defmethod (host :chaos-mail-name) ()
  (let* ((primary-name-string (send (send self :primary-name) :string))
	 (site-name-string (send (send self :site) :name)))
    (do* ((name names (cdr name))
	  (name-string (send (car name) :string) (send (car name) :string))
	  (idx (string-search #/- name-string) (string-search #/- name-string)))
	 ((null name)
	  (let ((loser (send (car names) :string)))
	    (catch-error-restart (error "Settle for ~S as a Chaos Mail name for ~S"
					loser self)
	      (ferror "Could not find Chaos Mail name for ~S" self))))
      (if (and idx
	       (string-search site-name-string name-string 0 nil 0 idx)
	       (string-search primary-name-string name-string))
	;; Maybe should also constrain to name objects in the correct namespace?
	  (return name-string)))))


 8-Dec-83 11:22:54-EST,2020;000000000000
Received: from MIT-LISPM-2 by MIT-OZ via Chaosnet; 8 Dec 83 11:22-EST
Date: Thursday, 8 December 3883, 11:20-EST
From: Daniel Weise <Daniel at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In Experimental System 98.1, CADR 3.0, Experimental ZMail 53.0,
MIT-Specific 22.0, microcode 305, ZM MIT, on Lisp Machine Two:


Insert your description of the circumstances here:

I Q'd out of dired wanting it to delete and expunge one
file.  When I E'd the confirmation this happened.

>>TRAP 3028 (ARGTYP CONS M-T T CAR CAR)
The argument to CAR, #<HISTORY 4034122>, was of the wrong type.
The function expected a cons.
Backtrace from the debugger:

MEM (P.C. = 24)

 Arg 0 (PRED): NEQ
 Arg 1 (ITEM): #<ZMACS-BUFFER "*Dired-PS:<DPL.MIT>-1*" 12457606>
 Arg 2 (LIST): #<HISTORY 4034122>
Local 0 (L): #<HISTORY 4034122>


(:METHOD ZWEI:ZMACS-WINDOW :EXIT-SPECIAL-BUFFER) (P.C. = 74)
  (SELF is #<ZMACS-WINDOW-PANE Zmacs Window Pane 1 2202552 exposed>)

 Arg 0 (OPERATION): :EXIT-SPECIAL-BUFFER
 Arg 1 (MARK-CLEAN): NIL
 Arg 2 (BUFFER-BEING-EXITED): #<ZMACS-BUFFER "*Dired-PS:<DPL.MIT>-1*" 12457606>
Local 0 (SPECIAL-BUFFER): #<ZMACS-BUFFER "*Dired-PS:<DPL.MIT>-1*" 12457606>


ZWEI#:COM-DIRED-EXIT (P.C. = 36)



Additional information supplied with call:
 Expecting 3 values

ZWEI#:COMMAND-EXECUTE (P.C. = 115)

 Arg 0 (COMMAND): ZWEI#:COM-DIRED-EXIT
 Arg 1 (CHAR): 113
 Arg 2 (PREFIX-CHAR): NIL
 Arg 3 (HOOK-LIST): NIL
Local 0 (HOOK-SUCCESS): T
Local 1: NIL
Local 2 (HOOK): NIL


ZWEI#:PROCESS-COMMAND-CHAR (P.C. = 65)

 Arg 0 (CH): 113
Local 0 (VALUE): NIL
Local 1 (LINE): NIL
Local 2 (INDEX): NIL
Local 3: NIL
Local 4 (HOOK): NIL


Remainder of stack:

(:METHOD ZWEI:WINDOW :EDIT) (P.C. = 464)
(:INTERNAL (:METHOD ZWEI:ZMACS-WINDOW :COMBINED :EDIT) 0) (P.C. = 74)
FUNCALL (P.C. = 25)
(:METHOD ZWEI#:DISPLAYER :AROUND :EDIT) (P.C. = 31)
(:METHOD ZWEI:ZMACS-WINDOW :COMBINED :EDIT) (P.C. = 47)
ZWEI#:ZMACS-WINDOW-TOP-LEVEL (P.C. = 46)
SI#:PROCESS-TOP-LEVEL (P.C. = 152)
 8-Dec-83 11:26:19-EST,2087;000000000000
Received: from MIT-LISPM-2 by MIT-OZ via Chaosnet; 8 Dec 83 11:25-EST
Date: Thursday, 8 December 3883, 11:23-EST
From: Daniel Weise <Daniel at MIT-OZ>
Subject: The bug occured again while mailing so I'm trying again.
To: bug-lispm at MIT-OZ

In Experimental System 98.1, CADR 3.0, Experimental ZMail 53.0,
MIT-Specific 22.0, microcode 305, ZM MIT, on Lisp Machine Two:


Insert your description of the circumstances here:

I Q'd out of dired wanting it to delete and expunge one
file.  When I E'd the confirmation this happened.

>>TRAP 3028 (ARGTYP CONS M-T T CAR CAR)
The argument to CAR, #<HISTORY 4034122>, was of the wrong type.
The function expected a cons.
Backtrace from the debugger:

MEM (P.C. = 24)

 Arg 0 (PRED): NEQ
 Arg 1 (ITEM): #<ZMACS-BUFFER "*Dired-PS:<DPL.MIT>-1*" 12457606>
 Arg 2 (LIST): #<HISTORY 4034122>
Local 0 (L): #<HISTORY 4034122>


(:METHOD ZWEI:ZMACS-WINDOW :EXIT-SPECIAL-BUFFER) (P.C. = 74)
  (SELF is #<ZMACS-WINDOW-PANE Zmacs Window Pane 1 2202552 exposed>)

 Arg 0 (OPERATION): :EXIT-SPECIAL-BUFFER
 Arg 1 (MARK-CLEAN): NIL
 Arg 2 (BUFFER-BEING-EXITED): #<ZMACS-BUFFER "*Dired-PS:<DPL.MIT>-1*" 12457606>
Local 0 (SPECIAL-BUFFER): #<ZMACS-BUFFER "*Dired-PS:<DPL.MIT>-1*" 12457606>


ZWEI#:COM-DIRED-EXIT (P.C. = 36)



Additional information supplied with call:
 Expecting 3 values

ZWEI#:COMMAND-EXECUTE (P.C. = 115)

 Arg 0 (COMMAND): ZWEI#:COM-DIRED-EXIT
 Arg 1 (CHAR): 113
 Arg 2 (PREFIX-CHAR): NIL
 Arg 3 (HOOK-LIST): NIL
Local 0 (HOOK-SUCCESS): T
Local 1: NIL
Local 2 (HOOK): NIL


ZWEI#:PROCESS-COMMAND-CHAR (P.C. = 65)

 Arg 0 (CH): 113
Local 0 (VALUE): NIL
Local 1 (LINE): NIL
Local 2 (INDEX): NIL
Local 3: NIL
Local 4 (HOOK): NIL


Remainder of stack:

(:METHOD ZWEI:WINDOW :EDIT) (P.C. = 464)
(:INTERNAL (:METHOD ZWEI:ZMACS-WINDOW :COMBINED :EDIT) 0) (P.C. = 74)
FUNCALL (P.C. = 25)
(:METHOD ZWEI#:DISPLAYER :AROUND :EDIT) (P.C. = 31)
(:METHOD ZWEI:ZMACS-WINDOW :COMBINED :EDIT) (P.C. = 47)
ZWEI#:ZMACS-WINDOW-TOP-LEVEL (P.C. = 46)
SI#:PROCESS-TOP-LEVEL (P.C. = 152)
 8-Dec-83 21:57:21-EST,448;000000000000
Received: from MIT-XX by MIT-OZ via Chaosnet; 8 Dec 83 21:57-EST
Date: Thursday, 8 December 3883, 21:53-EST
From: Mark A. Peot <MARK at MIT-XX>
To: BUG-LISPM at MIT-OZ

In Experimental System 98.1, CADR 3.0, Experimental ZMail 53.0,
MIT-Specific 22.0, Experimental 3d 1.0, microcode 305, ZM MIT,
on Lisp Machine Two:

	The function SWAPF doesn't work in this version.  It puts the second
value into the first and sets the second to nil.
 9-Dec-83 12:42:09-EST,2207;000000000000
Mail-From: AKR created at  9-Dec-83 12:17:38
Date: Fri, 9 Dec 1983  12:17 EST
Message-ID: <AKR.11974140381.BABYL@MIT-OZ>
To:   BUG-LISPM@MIT-OZ
Sender: AKR@MIT-OZ
From: AKR@MIT-OZ

In Experimental System 98.2, CADR 3.0, microcode 305,
on Lisp Machine Seven:


Insert your description of the circumstances here:


While doing a  si:load-and-save-patches.
Also while entering Zmacs for a bug report, zwei#:*mail-header-delimiter* was unbound.
Then when trying to mail the bug report, zwei#:send-message is undefined.

>>ERROR: Loading a method for flavor ZWEI#:ZMAIL-SUMMARY-SCROLL-WINDOW which is not defined
Backtrace from the debugger:

SI:FLAVOR-VAR-SELF-REF-INDEX (P.C. = 51)

 Arg 0 (FLAVOR-AND-VARNAME): (ZWEI#:ZMAIL-SUMMARY-SCROLL-WINDOW TV:TOP-MARGIN-SIZE)
Local 0 (FLAVOR): NIL
Local 1 (VARNAME): NIL
Local 2 (POS): NIL
Local 3 (OPOS): NIL


SI#:EVAL1 (P.C. = 1320)

 Arg 0 (FORM): (SI:FLAVOR-VAR-SELF-REF-INDEX (QUOTE **))
   --Defaulted args:--
 Arg 1 (NOHOOK): NIL
Local 0 (ARGNUM): 1
Local 1 (TEM): NIL
Local 2: NIL
Local 3 (FRAME): NIL
Local 4 (FCTN): #<DTP-FEF-POINTER SI:FLAVOR-VAR-SELF-REF-INDEX 2417234>
Local 5 (ARG-DESC): 101
Local 6 (NUM-ARGS): 1
Local 7 (CLOSURE-PASSED): NIL
Local 8 (LAMBDA-LIST): NIL
Local 9 (LL): NIL
Local 10 (QUOTE-STATUS): NIL
Local 11 (REST-FLAG): NIL
Local 12 (ARGL): NIL
Local 13: NIL
Local 14 (IGNORE): NIL
Local 15 (ADL): NIL
Local 16 (ITEM): NIL
Local 17 (*SELECTQ-ITEM*): NIL


SYSTEM:FASL-OP-EVAL1 (P.C. = 115)

Local 0 (FORM): (SI:FLAVOR-VAR-SELF-REF-INDEX (QUOTE **))


SI#:FASL-GROUP (P.C. = 132)

Local 0 (FASL-GROUP-BITS): 100061
Local 1 (FASL-GROUP-TYPE): 61


SI#:FASL-NEXT-VALUE (P.C. = 22)



Remainder of stack:

SYSTEM:FASL-OP-FRAME (P.C. = 337)
SI#:FASL-GROUP (P.C. = 132)
SI#:FASL-WHACK-SAVE-FASL-TABLE (P.C. = 67)
SI#:FASL-WHACK (P.C. = 23)
SI#:FASL-TOP-LEVEL (P.C. = 32)
SI#:FASLOAD-INTERNAL (P.C. = 506)
FS#:LOAD-1 (P.C. = 414)
LOAD (P.C. = 104)
LOAD-PATCHES (P.C. = 1233)
LOAD-AND-SAVE-PATCHES (P.C. = 252)
SI#:EVAL1 (P.C. = 1320)
EVAL (P.C. = 57)
SI:EVAL-ABORT-TRIVIAL-ERRORS (P.C. = 44)
SI:LISP-TOP-LEVEL1 (P.C. = 262)
SI:LISP-TOP-LEVEL (P.C. = 35)
 9-Dec-83 17:03:43-EST,2863;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 9 Dec 83 17:02-EST
Date: Sunday, 11 December 1983, 02:21-EST
From: Robert Kassel <sr.rob at MIT-SPEECH>
Subject: Bug in FED
To: BUG-LISPM at MIT-OZ

In Release 5.0 [GC'd Beta Test rev 2], on Lisp Machine Yogi (LM-2):

It would be nice if FED could read and write AC format files
as promised.

It would also be nice if the temporary menu that lists the available
formats had mouse documentation for each format!


>>Error: :AC is an invalid canonical type for FS:TOPS20-PATHNAME
While in the function (:METHOD FS:PATHNAME :TYPE-FOR-NEW-CANONICAL-TYPE)  FS:MAKE-PATHNAME-1  (:METHOD FS:PATHNAME :NEW-PATHNAME)

(:METHOD FS:PATHNAME :TYPE-FOR-NEW-CANONICAL-TYPE):  (P.C. = 163)
   (SELF = #<TOPS20-PATHNAME "OZ:">)
   Arg 0 (OPERATION): :TYPE-FOR-NEW-CANONICAL-TYPE
   Arg 1 (CANONICAL-TYPE): :AC
   Arg 2 (ORIGINAL-TYPE): NIL
   Arg 3 (ORIGINAL-TYPE-P): NIL
   Local 0 (TYPES): NIL
   Local 1 (NEW-VALUE): NIL

FS:MAKE-PATHNAME-1:  (P.C. = 575)
   Rest arg (OPTIONS): (:DEFAULT-HOST #<TOPS20-HOST OZ 1454620> :DEFAULT-DEVICE NIL :DEFAULT-DIRECTORY NIL :DEFAULT-NAME NIL :DEFAULT-TYPE NIL ...)

(:METHOD FS:PATHNAME :NEW-PATHNAME):  (P.C. = 67)
   (SELF = #<TOPS20-PATHNAME "OZ:">)
   Arg 0 (OPERATION): :NEW-PATHNAME
   Rest arg (OPTIONS): (:DEFAULTS ((#<TOPS20-HOST OZ 1454620> . #<TOPS20-PATHNAME "OZ:SRC:<S.FONTS>FOO.BFD">) (NIL . #<TOPS20-PATHNAME "OZ:SRC:<S.FONTS>FOO.BFD">)) :NAME "METS" :CANONICAL-TYPE :AC)

(:METHOD FS:TOPS20-MAILBOX-PATHNAME-MIXIN :COMBINED :NEW-PATHNAME):  (P.C. = 75)
   (SELF = #<TOPS20-PATHNAME "OZ:">)
   Rest arg (.DAEMON-CALLER-ARGS.): (:NEW-PATHNAME :DEFAULTS ((#<TOPS20-HOST OZ 1454620> . #<TOPS20-PATHNAME "OZ:SRC:<S.FONTS>FOO.BFD">) (NIL . #<TOPS20-PATHNAME "OZ:SRC:<S.FONTS>FOO.BFD">)) :NAME "METS" :CANONICAL-TYPE :AC)

FS:MAKE-PATHNAME:  (P.C. = 111)
   Rest arg (OPTIONS): (:DEFAULTS ((#<TOPS20-HOST OZ 1454620> . #<TOPS20-PATHNAME "OZ:SRC:<S.FONTS>FOO.BFD">) (NIL . #<TOPS20-PATHNAME "OZ:SRC:<S.FONTS>FOO.BFD">)) :NAME "METS" :CANONICAL-TYPE :AC)

FED:READ-DEFAULTED-PATHNAME:  (P.C. = 123)
   Arg 0 (FONT): FONTS:METS
   Arg 1 (OPERATION): "Write"
   Arg 2 (TYPE): :AC

(:DEFUN-METHOD FED:FED-WRITE-FILE):  (P.C. = 72)
   (SELF = #<BASIC-FED-PANE Basic Fed Pane 1 36540443 exposed>)
   Arg 0 (SELF-MAPPING-TABLE): #<Map to flavor FED:BASIC-FED -- 23. IV's, 9. FL's 2530071>
   Arg 1 (TYPE): :AC

(:METHOD FED:BASIC-FED :COM-WRITE-ANY-FILE):  (P.C. = 73)
   (SELF = #<BASIC-FED-PANE Basic Fed Pane 1 36540443 exposed>)
   Arg 0 (OPERATION): :COM-WRITE-ANY-FILE
   Arg 1 (IGNORE): (:MENU (NIL :VALUE :COM-WRITE-ANY-FILE) 4 #<COMMAND-MENU-PANE Command Menu Pane 8 36542033 exposed>)

Rest of stack:
(:METHOD FED :COMMAND-LOOP):  (P.C. = 575)
FED:FED-TOP-LEVEL:  (P.C. = 136)
SI:PROCESS-TOP-LEVEL:  (P.C. = 123)
10-Dec-83 12:01:33-EST,372;000000000000
Received: from MIT-LENNON by MIT-OZ via Chaosnet; 10 Dec 83 12:00-EST
Date: Saturday, 10 December 1983, 11:58-EST
From: Jerry Roylance <GLR at MIT-OZ>
Subject: MACLISP *ARRAY (groan...)
To: BUG-LISPM at MIT-OZ

In Release 5.0 [GC'd Beta Test rev 3], Dusty plum, on Lisp Machine John Lennon (3600):

(*array nil 'fixnum n) builds art-q instead of art-32b arrays

10-Dec-83 13:14:59-EST,968;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 10 Dec 83 13:14-EST
Received: from SCRC-CHARLES by SCRC-QUABBIN with CHAOS; Sat 10-Dec-83 13:17:53-EST
Date: Saturday, 10 December 1983, 13:14-EST
From: David C. Plummer <DCP at SCRC-TENEX>
Subject: MACLISP *ARRAY (groan...)
To: GLR at MIT-OZ, BUG-LISPM at MIT-OZ
In-reply-to: The message of 10 Dec 83 11:58-EST from Jerry Roylance <GLR at MIT-OZ>

    Date: Saturday, 10 December 1983, 11:58-EST
    From: Jerry Roylance <GLR at MIT-OZ>
    In Release 5.0 [GC'd Beta Test rev 3], Dusty plum, on Lisp Machine John Lennon (3600):

    (*array nil 'fixnum n) builds art-q instead of art-32b arrays

And who said there were art-32b arrays on the 3600?  (They barely work
on the LM-2.)  Why are you using MacLisp style anyway instead of
#+LispM?  If you want to initialize the array to a fixnum (so you can
offset smaller arrays into it, for example) give an :initial-value
argument to make-array. 

10-Dec-83 20:38:50-EST,989;000000000000
Received: from SCRC-TENEX by MIT-OZ via Chaosnet; 10 Dec 83 20:38-EST
Received: from SCRC-EUPHRATES by SCRC-TENEX with CHAOS; Sat 10-Dec-83 20:34:57-EST
Date: Saturday, 10 December 1983, 20:29-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: MACLISP *ARRAY (groan...)
To: Jerry Roylance <GLR at MIT-OZ>
Cc: BUG-LISPM at MIT-OZ
In-reply-to: The message of 10 Dec 83 11:58-EST from Jerry Roylance <GLR at MIT-OZ>

    Date: Saturday, 10 December 1983, 11:58-EST
    From: Jerry Roylance <GLR at MIT-OZ>

    In Release 5.0 [GC'd Beta Test rev 3], Dusty plum, on Lisp Machine John Lennon (3600):

    (*array nil 'fixnum n) builds art-q instead of art-32b arrays

Why should that be a problem?  An art-q array is capable of holding fixnums,
and when I do (listarray (*array nil 'fixnum n)) I see that the array is
initialized full of zeros, as you would expect.  As DCP pointed out there
are no art-32b arrays on the 3600, since art-q arrays subsume that function.

10-Dec-83 21:29:27-EST,469;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 10 Dec 83 21:29-EST
Date: Saturday, 10 December 1983, 21:30-EST
From: Scott Cyphers <sr.cypher at MIT-SPEECH>
To: BUG-LISPM at MIT-OZ

In Release 5.0 [GC'd Beta Test rev 2], Experimental MIT 1.0,
Experimental Spire Macros 5.0, microcode 998, on Lisp Machine Yogi (LM-2):

The most common thing I do when I get an error while compiling a file is
to edit that file.  Shouldn't doing this be one of the options?
10-Dec-83 22:31:24-EST,739;000000000000
Received: from SCRC-TENEX by MIT-OZ via Chaosnet; 10 Dec 83 22:30-EST
Received: from SCRC-EUPHRATES by SCRC-TENEX with CHAOS; Sat 10-Dec-83 22:28:50-EST
Date: Saturday, 10 December 1983, 22:23-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: Bug in FED
To: Robert Kassel <sr.rob at MIT-SPEECH>
Cc: BUG-LISPM at MIT-OZ
In-reply-to: The message of 11 Dec 83 02:21-EST from Robert Kassel <sr.rob at MIT-SPEECH>

    Date: Sunday, 11 December 1983, 02:21-EST
    From: Robert Kassel <sr.rob at MIT-SPEECH>

    It would be nice if FED could read and write AC format files
    as promised.

    >>Error: :AC is an invalid canonical type for FS:TOPS20-PATHNAME

This was fixed in the source.  Included in patch 243.390.

12-Dec-83 11:29:08-EST,2969;000000000000
Received: from MIT-MORRISON by MIT-OZ via Chaosnet; 12 Dec 83 11:27-EST
Date: Monday, 12 December 1983, 11:28-EST
From: Daniel Weise <DANIEL at SCRC|DM>
To: BUG-LISPM at MIT-OZ

In Release 5.0 [GC'd Beta Test rev 3], dusty plum, on Lisp Machine Jim Morrison (3600):

This just happened.  Haven't tried to see if it is reproducible.

>>Error: About to allocate packet #<SOFTWARE-EPACKET 3271000> which has a non-zero ref-count
While in the function NETI:ALLOCATE-PACKET-BUFFER  CHAOS:GET-PKT  (:METHOD CHAOS:BINARY-OUTPUT-STREAM-MIXIN :NEW-OUTPUT-BUFFER)

NETI:ALLOCATE-PACKET-BUFFER:  (P.C. = 60)
   Arg 0 (WAIT-P): T
   Local 1 (LIST-LOC): #<DTP-LOCATIVE 1777772027>
   Local 2 (ETHER-PACKET): #<DTP-LOCATIVE 1701532002>
   Local 3 (EPACKET): #<SOFTWARE-EPACKET 3271000>

CHAOS:GET-PKT:  (P.C. = 5)
   --Defaulted args:--
   Arg 0 (WAIT-P): T

(:METHOD CHAOS:BINARY-OUTPUT-STREAM-MIXIN :NEW-OUTPUT-BUFFER):  (P.C. = 2)
   Arg 0 (SELF): #<FILE-OUTPUT-BINARY-STREAM "PYGMALION:SYS$DISK:[DANIEL.SP]PROVE.BIN" 44005143>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor CHAOS:BINARY-OUTPUT-STREAM-MIXIN -- 2. IV's, 0. FL's 15141346>
   Arg 2 (OPERATION): :NEW-OUTPUT-BUFFER

(:METHOD SI:BASIC-BUFFERED-OUTPUT-STREAM :SETUP-NEW-OUTPUT-BUFFER):  (P.C. = 7)
   Arg 0 (SELF): #<FILE-OUTPUT-BINARY-STREAM "PYGMALION:SYS$DISK:[DANIEL.SP]PROVE.BIN" 44005143>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:BASIC-BUFFERED-OUTPUT-STREAM -- 3. IV's, 0. FL's 15141072>
   Arg 2 (OPERATION): :SETUP-NEW-OUTPUT-BUFFER

(:METHOD FS:FILE-OUTPUT-BINARY-STREAM :COMBINED :SETUP-NEW-OUTPUT-BUFFER):  (P.C. = 10)
   Arg 0 (SELF): #<FILE-OUTPUT-BINARY-STREAM "PYGMALION:SYS$DISK:[DANIEL.SP]PROVE.BIN" 44005143>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor FS:FILE-OUTPUT-BINARY-STREAM -- 1. IV's, 6. FL's 15141353>
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

(:METHOD SI:BASIC-BUFFERED-OUTPUT-STREAM :TYO):  (P.C. = 12)
   Arg 0 (SELF): #<FILE-OUTPUT-BINARY-STREAM "PYGMALION:SYS$DISK:[DANIEL.SP]PROVE.BIN" 44005143>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:BASIC-BUFFERED-OUTPUT-STREAM -- 3. IV's, 0. FL's 15141072>
   Arg 2 (OPERATION): :TYO
   Arg 3 (CH): 61459

SI:START-BIN-FILE:  (P.C. = 10)
   Arg 0 (STREAM): #<FILE-OUTPUT-BINARY-STREAM "PYGMALION:SYS$DISK:[DANIEL.SP]PROVE.BIN" 44005143>

COMPILER:COMPILE-FILE:  (P.C. = 204)
   Arg 0 (INFILE): #<VMS-PATHNAME "PYGMALION:SYS$DISK:[DANIEL.SP]PROVE.LSP">
   Arg 1 (OUTFILE): #<VMS-PATHNAME "PYGMALION:SYS$DISK:[DANIEL.SP]PROVE.BIN">
   Arg 2 (IN-PACKAGE): SP
   Arg 3 (DONT-SET-DEFAULT-P): T

Rest of stack:
SI:COMPILE-FILE-1:  (P.C. = 6)
SI:DO-FILE-TRANSFORMATIONS:  (P.C. = 242)
SI:PERFORM-TRANSFORMATIONS:  (P.C. = 166)
SI:PERFORM-TRANSFORMATIONS:  (P.C. = 64)
MAKE-SYSTEM:  (P.C. = 222)
SI:*EVAL:  (P.C. = 370)
SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 200)
SI:LISP-COMMAND-LOOP:  (P.C. = 115)
SI:LISP-TOP-LEVEL1:  (P.C. = 22)
SI:LISP-TOP-LEVEL:  (P.C. = 7)
12-Dec-83 11:40:28-EST,733;000000000000
Received: from MIT-MORRISON by MIT-OZ via Chaosnet; 12 Dec 83 11:39-EST
Date: Monday, 12 December 1983, 11:40-EST
From: Daniel Weise <DANIEL at SCRC|DM>
Subject: ZMAIL won't let me send mail when init host is down.
To: BUG-LISPM at MIT-OZ

In Release 5.0 [GC'd Beta Test rev 3], dusty plum, on Lisp Machine Jim Morrison (3600):

I manually went into zmail (for the first time this session) to give more bits
about my last bug report.  When I clicked middle on mail it went to read
my zmail init.  When it noticed MC was down it should have either continued
telling me my init was not loaded or given me a proceed option for not loading
the init.  As it was I had to C-N to SET-ZMAIL-USER and C-R from there.

Daniel
12-Dec-83 11:49:53-EST,870;000000000000
Received: from MIT-MORRISON by MIT-OZ via Chaosnet; 12 Dec 83 11:48-EST
Date: Monday, 12 December 1983, 11:49-EST
From: Daniel Weise <DANIEL at SCRC|DM>
Subject: Of more breaks, error handlers, cabbages, and kings.
To: BUG-LISPM at MIT-OZ

In Release 5.0 [GC'd Beta Test rev 3], dusty plum, on Lisp Machine Jim Morrison (3600):

Once again I had to send bug mail so I clicked middle on mail and got into the
error handler cause MC was down.  Since I knew I wanted to C-N to set-zmail-user
I kept hitting C-N to get there.  Then a strange, and very reproducible thing,
occured.  C-N'ing a more break caused an abortion form the error handler back
to ZMAIL top level.  Surely the only character not to cause a more break to
proceed normally should be <abort>.  If it makes any difference, I was doing
no typeahead when I went to reproduce this.

Daniel
12-Dec-83 12:03:21-EST,1194;000000000000
Received: from MIT-MORRISON by MIT-OZ via Chaosnet; 12 Dec 83 12:02-EST
Date: Monday, 12 December 1983, 12:03-EST
From: Daniel Weise <DANIEL at SCRC|DM>
Subject: results of badly allocated packet bug.  (VMS people take note.)
To: BUG-LISPM at MIT-OZ
Cc: swm at SCRC-TENEX,
    cstacy at SCRC|DM, glr at MIT-OZ,
    gumby at SCRC|DM

In Release 5.0 [GC'd Beta Test rev 3], dusty plum, on Lisp Machine Jim Morrison (3600):

After sending the bug about the packet allocation problem I S-B'd to recompile the file.
I then got hit with the standard VMS problem of the connection getting hopelessly
confused when file transactions abort.  The BIN file that was in progress got closed
instead of aborted so that when I did a neti:(progn (reset) (enable)) (which is forced
once the connection gets confused) and a (make-system .. :compile) the file did
not get recompiled as it should have since an apparently up to date (but bogus) bin
file was there.  Since the bugs here all seem to be at the VMS end of things and 
they've been around for a while I'd like to know what is going on to fix this.
Did someone here not install the lastest software or have we not received it?
12-Dec-83 12:39:53-EST,2049;000000000000
Mail-From: KMP created at 12-Dec-83 12:39:21
Date: Mon, 12 Dec 1983  12:39 EST
Message-ID: <KMP.11974930769.BABYL@MIT-OZ>
From: KMP@MIT-OZ
To:   BUG-LISPM@MIT-OZ
cc:   KMP@MIT-MC
Reply-To:KMP@MC
Subject: Comments/questions based on Release 5.0 Release Notes

Here are some notes I made while reading the Release 5.0 Release Notes ...

p53: It seems to me that rather than SI:*PRINT-OBJECT-ERROR-MESSAGE* 
 holding a string, it should hold a function. It would be infinitely more
 useful for my debugging to be able to set this up to 
   #'(LAMBDA (OBJ &OPTIONAL (STREAM STANDARD-OUTPUT))
       (FORMAT STREAM "#<DTP-~O ~S ~O>" 
	       (%DATA-TYPE OBJ) (TYPEP OBJ) (%POINTER OBJ)))
 since something like "<<Error printing error message>>" is worthless when
 debugging. The time when this happens is frequently the time when you need
 this info more than anything. I do, however, agree that making this a hook
 is the right thing since it's obviously application dependent what you see.

p63: It would be nice if PROMPT-AND-READ took a :STRING-LIST keyword as
 does TV:CHOOSE-VARIABLE-VALUES. The keywords used by these two functions
 (and others of similar ilk) should be regularized. It's very frustrating
 when they each have different conventions.

p90: It seems like Uppercase Code in Region and Lowercase Code in Region
should be accessible from c-X c-U and c-X c-L when given a c-U argument.

p101: Why not have RECORD-SOURCE-FILE-NAME with NIL (rather than T)
 mask SOURCE-FILE-NAME info? This would have a better feel to it 
 since a T argument feels like "Pretend there is information ..." and I
 feel like I want to be saying "Let it be as if there were no information..."

p101: I continue to maintain that there should be a primitive for accessing
 the contents of locatives; this doesn't have to imply that CDR could not
 also work. But I would really prefer not to use CDR as I feel it's a 
 primitive from the wrong abstraction level. The MIT system has such a 
 primitive, called CONTENTS.

12-Dec-83 13:03:56-EST,1310;000000000000
Received: from SCRC-TENEX by MIT-OZ via Chaosnet; 12 Dec 83 13:03-EST
Received: from SCRC-CHARLES by SCRC-TENEX with CHAOS; Mon 12-Dec-83 13:02:08-EST
Date: Monday, 12 December 1983, 13:00-EST
From: David C. Plummer <DCP at SCRC-TENEX>
Subject: results of badly allocated packet bug.  (VMS people take note.)
To: DANIEL at MIT-MC, BUG-LISPM at MIT-OZ
Cc: swm at SCRC-TENEX, cstacy at MIT-MC, glr at MIT-OZ, gumby at MIT-MC
In-reply-to: The message of 12 Dec 83 11:28-EST from Daniel Weise <DANIEL at MC>,
             The message of 12 Dec 83 12:03-EST from Daniel Weise <DANIEL at MC>

    
    >>Error: About to allocate packet #<SOFTWARE-EPACKET 3271000> which has a non-zero ref-count
    While in the function NETI:ALLOCATE-PACKET-BUFFER  CHAOS:GET-PKT  (:METHOD CHAOS:BINARY-OUTPUT-STREAM-MIXIN :NEW-OUTPUT-BUFFER)

It looks like this error is going to haunt us forever.  There were
numerous ECOs and microcode changes that affected this, yet it still
seems to happen once in a while (it seems to be reported about once
every 3 weeks internally (and I can't remember how many machines we
have).

Make sure your machine is up to ECO.  We just released a newer
microcode.  I don't know what version went out with 5.0beta3, but maybe
a couple of the microcode fixes aren't in it.

12-Dec-83 13:24:59-EST,1424;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 12 Dec 83 13:14-EST
Received: from SCRC-CHARLES by SCRC-QUABBIN with CHAOS; Mon 12-Dec-83 13:12:15-EST
Date: Monday, 12 December 1983, 13:07-EST
From: David C. Plummer <DCP at SCRC-TENEX>
Subject: results of badly allocated packet bug.  (VMS people take note.)
To: DANIEL at MIT-MC, BUG-LISPM at MIT-OZ
Cc: swm at SCRC-TENEX, cstacy at MIT-MC, glr at MIT-OZ, gumby at MIT-MC
In-reply-to: The message of 12 Dec 83 11:28-EST from Daniel Weise <DANIEL at MC>,
             The message of 12 Dec 83 12:03-EST from Daniel Weise <DANIEL at MC>
Supersedes: Your message of 12 Dec 83 13:00-EST

    
    >>Error: About to allocate packet #<SOFTWARE-EPACKET 3271000> which has a non-zero ref-count
    While in the function NETI:ALLOCATE-PACKET-BUFFER  CHAOS:GET-PKT  (:METHOD CHAOS:BINARY-OUTPUT-STREAM-MIXIN :NEW-OUTPUT-BUFFER)

It looks like this error is going to haunt us forever.  There were
numerous ECOs and microcode changes that affected this, yet it still
seems to happen once in a while (it seems to be reported about once
every 3 weeks internally (and I can't remember how many machines we
have).

Make sure your machine is up to ECO.  We just released a newer
microcode.  I don't know what version went out with 5.0beta3, but maybe
a couple of the microcode fixes aren't in it.

p.s. I doubt you can reproduce this with any reliability.

12-Dec-83 14:01:20-EST,1193;000000000000
Received: from SCRC-TENEX by MIT-OZ via Chaosnet; 12 Dec 83 14:00-EST
Received: from SCRC-EUPHRATES by SCRC-TENEX with CHAOS; Mon 12-Dec-83 14:00:26-EST
Date: Monday, 12 December 1983, 14:02-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: ZMAIL won't let me send mail when init host is down.
To: bug-zmail at SCRC-TENEX
Cc: Daniel Weise <DANIEL at DM>, BUG-LISPM at MIT-OZ
In-reply-to: The message of 12 Dec 83 11:40-EST from Daniel Weise <DANIEL at DM>

    Date: Monday, 12 December 1983, 11:40-EST
    From: Daniel Weise <DANIEL@SCRC|DM>

    In Release 5.0 [GC'd Beta Test rev 3], dusty plum, on Lisp Machine Jim Morrison (3600):

    I manually went into zmail (for the first time this session) to give more bits
    about my last bug report.  When I clicked middle on mail it went to read
    my zmail init.  When it noticed MC was down it should have either continued
    telling me my init was not loaded or given me a proceed option for not loading
    the init.  As it was I had to C-N to SET-ZMAIL-USER and C-R from there.

In the source I fixed SET-ZMAIL-USER to work more like the way LOAD works now,
fixing this and other problems.  Not tested yet.

12-Dec-83 14:53:47-EST,3430;000000000000
Received: from SCRC-TENEX by MIT-OZ via Chaosnet; 12 Dec 83 14:36-EST
Received: from SCRC-EUPHRATES by SCRC-TENEX with CHAOS; Mon 12-Dec-83 14:31:38-EST
Date: Monday, 12 December 1983, 14:33-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: Comments/questions based on Release 5.0 Release Notes
To: KMP at MIT-MC, ROM at SCRC-TENEX
Cc: BUG-LISPM at MIT-OZ
In-reply-to: <KMP.11974930769.BABYL@MIT-OZ>

    Date: Mon, 12 Dec 1983  12:39 EST
    From: KMP@MIT-OZ

    Here are some notes I made while reading the Release 5.0 Release Notes ...

    p53: It seems to me that rather than SI:*PRINT-OBJECT-ERROR-MESSAGE* 
     holding a string, it should hold a function. It would be infinitely more
     useful for my debugging to be able to set this up to 
       #'(LAMBDA (OBJ &OPTIONAL (STREAM STANDARD-OUTPUT))
	   (FORMAT STREAM "#<DTP-~O ~S ~O>" 
		   (%DATA-TYPE OBJ) (TYPEP OBJ) (%POINTER OBJ)))
     since something like "<<Error printing error message>>" is worthless when
     debugging. The time when this happens is frequently the time when you need
     this info more than anything. I do, however, agree that making this a hook
     is the right thing since it's obviously application dependent what you see.

Actually I don't think this variable should have been documented at all, since
it's not global and documenting it inhibits us somewhat from changing it in the
future.  But anyway, you are right that a more general hook would be useful,
and since making it be either a string or a function is an upward-compatible
change we should consider doing so after 5.0.

Note however that your hook function might well get a recursive error
of the same type as the original error while doing the TYPEP.

    p63: It would be nice if PROMPT-AND-READ took a :STRING-LIST keyword as
     does TV:CHOOSE-VARIABLE-VALUES. The keywords used by these two functions
     (and others of similar ilk) should be regularized. It's very frustrating
     when they each have different conventions.

It does.

Perhaps this regularization was done (by CWH) after the beta test system was made.
Anyway the "real 5.0" release notes will need to keep up with this.

    p90: It seems like Uppercase Code in Region and Lowercase Code in Region
    should be accessible from c-X c-U and c-X c-L when given a c-U argument.

Not a bad idea, although I would never use it myself.  We should consider
putting this in in the future if other people like it.

    p101: Why not have RECORD-SOURCE-FILE-NAME with NIL (rather than T)
     mask SOURCE-FILE-NAME info? This would have a better feel to it 
     since a T argument feels like "Pretend there is information ..." and I
     feel like I want to be saying "Let it be as if there were no information..."

The argument has nothing to do with pretending anything.  Its name is NO-QUERY.
Perhaps a clarifying sentence should be added to the documentation.

    p101: I continue to maintain that there should be a primitive for accessing
     the contents of locatives; this doesn't have to imply that CDR could not
     also work. But I would really prefer not to use CDR as I feel it's a 
     primitive from the wrong abstraction level. The MIT system has such a 
     primitive, called CONTENTS.

You're probably right.  It's really too late to put this in 5.0, but I added
it to one of my lists of things to do someday.

12-Dec-83 16:33:31-EST,522;000000000000
Mail-From: RMS created at 12-Dec-83 16:27:50
Date: Mon 12 Dec 83 16:27:50-EST
From: RMS@MIT-OZ
Subject: SET-CURRENT-BAND to system 98 from brand S.
To: bug-lispm@MIT-OZ

If you are running a brand S band, and you try to do
SET-CURRENT-BAND to select MIT system 98, it will
apparently fail to figure out what microcode version
to use with it.  It will tell you that the 98 band is bad.

There is in fact no reason to believe that the 98 band is bad.
But you must select microcode version 305 by hand.
-------
12-Dec-83 17:36:26-EST,387;000000000000
Received: from MIT-ML by MIT-OZ via Chaosnet; 12 Dec 83 17:35-EST
Date: Monday, 12 December 1983, 17:35-EST
From: Henry Minsky <HQM at MIT-OZ>
Subject: why can't I supdup??
To: BUG-LISPM at MIT-OZ

In Release 5.0 [GC'd Beta Test rev 3], dusty plum, on Lisp Machine Jim Morrison (3600):

When I do Select-T and try to connect to OZ, it connects me in
Telnet, not supdup. why?

12-Dec-83 19:51:15-EST,1305;000000000000
Received: from SCRC-TENEX by MIT-OZ via Chaosnet; 12 Dec 83 19:50-EST
Received: from SCRC-EUPHRATES by SCRC-TENEX with CHAOS; Mon 12-Dec-83 19:43:02-EST
Date: Monday, 12 December 1983, 19:44-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: Of more breaks, error handlers, cabbages, and kings.
To: Daniel Weise <DANIEL at DM>
Cc: BUG-LISPM at MIT-OZ
In-reply-to: The message of 12 Dec 83 11:49-EST from Daniel Weise <DANIEL at DM>

    Date: Monday, 12 December 1983, 11:49-EST
    From: Daniel Weise <DANIEL@SCRC|DM>

    In Release 5.0 [GC'd Beta Test rev 3], dusty plum, on Lisp Machine Jim Morrison (3600):

    Once again I had to send bug mail so I clicked middle on mail and got into the
    error handler cause MC was down.  Since I knew I wanted to C-N to set-zmail-user
    I kept hitting C-N to get there.  Then a strange, and very reproducible thing,
    occured.  C-N'ing a more break caused an abortion form the error handler back
    to ZMAIL top level.

This has always happened, when you get into the debugger in Zmail, Zmacs, or any other
editor-type window.  It think that it is flushing ordinary command typeout when you
type a new editor command without bothering to read all the typeout.  We ought to
fix this to understand about being in the debugger.

12-Dec-83 20:15:37-EST,3309;000000000000
Received: from MIT-LISPM-1 by MIT-OZ via Chaosnet; 12 Dec 83 20:14-EST
Date: Monday, 12 December 1983, 20:10-EST
From: Richard Mlynarik <Mly at MIT-OZ>
To: BUG-LISPM-mit at MIT-OZ

In Bad Inconsistently updated System 98.7, CADR 3.1,
Inconsistently updated ZMail 53.2, MIT-Specific 22.0, microcode 305,
ZM MIT, on Lisp Machine One:


Insert your description of the circumstances here:

trying to save zmail buffer. Oz barfed about no disk room
I s-c'ed to clean directory (for >2 versions)
Went through the dir, deleting merrily away.
Finally asked "Expunge the dir?" I said y.
=> lossage

>>ERROR: Illegal request format for OZ:PS:<DANIEL.G.MLY.L>*.*.*
Backtrace from the debugger:

FS#:DIRECTORY-OPERATION-CHAOS (P.C. = 132)

 Arg 0 (OPERATION): :EXPUNGE
 Arg 1 (HOST): #FS#:TOPS20-CHAOS-HOST "MIT-OZ"
 Arg 2 (PATHNAME): #FS#:TOPS20-PATHNAME "OZ:PS:<DANIEL.G.MLY.L>*.*.*"
 Arg 3 (ERROR-P): T
Local 0 (HOST-UNIT): #<HOST-UNIT 3165353>
Local 1 (PKT): #S(CHAOS#:PKT :PKT-OPCODE-LEFT-JUSTIFIED 100000 :PKT-OPCODE ...)
Local 2 (SUCCESS): NIL
Local 3 (FILE-STRING): " ERROR BUG F Illegal request format"
Local 4 (START): NIL
Local 5 (IGNORE): NIL


(:METHOD FS#:TOPS20-PATHNAME :EXPUNGE) (P.C. = 64)
  (SELF is #FS#:TOPS20-PATHNAME "OZ:PS:<DANIEL.G.MLY.L>*.*.*")

 Arg 0 (OPERATION): :EXPUNGE
 Rest arg: NIL
Local 1 (ERROR): T


FS:EXPUNGE-DIRECTORY (P.C. = 153)

 Arg 0 (PATHNAME): #FS#:TOPS20-PATHNAME "OZ:PS:<DANIEL.G.MLY.L>*.*.*"
 Rest arg (OPTIONS): NIL
Local 1 (ERROR): T
Local 2: ((FS:FILE-ERROR) SI#:FILE-RETRY-HANDLER #FS#:TOPS20-PATHNAME "OZ:PS:<DANIEL.G.MLY.L>*.*.*")
Local 3: ((** SI#:FILE-RETRY-HANDLER #FS#:TOPS20-PATHNAME "OZ:PS:<DANIEL.G.MLY.L>*.*.*"))
Local 4 (NEW-PATHNAME): NIL


ZWEI#:REAP-DIRECTORY (P.C. = 170)

 Arg 0 (PATHNAME): #FS#:TOPS20-PATHNAME "OZ:PS:<DANIEL.G.MLY.L>*.*.*"
 Arg 1 (N-TO-KEEP): 2
 Arg 2 (STREAM): #:TERMINAL-IO-SYN-STREAM
Local 0 (DIRECTORY-LIST): ((#FS#:TOPS20-PATHNAME "OZ:PS:<DANIEL.G.MLY.L>ALU.LISP.1" :PROTECTION "777777" :GENERATION-RETENTION-COUNT ...) (#FS#:TOPS20-PATHNAME "OZ:PS:<DANIEL.G.MLY.L>BUG-LISPM.BABYL.106" :PROTECTION "777777" :GENERATION-RETENTION-COUNT ...) (#FS#:TOPS20-PATHNAME "OZ:PS:<DANIEL.G.MLY.L>BUG-LISPM.BABYL.107" :PROTECTION "777777" :GENERATION-RETENTION-COUNT ...) (#FS#:TOPS20-PATHNAME "OZ:PS:<DANIEL.G.MLY.L>CD.TEXT.3" :PROTECTION "777777" :GENERATION-RETENTION-COUNT ...) ...)
Local 1 (SOMETHING-DELETED): T
Local 2 (LIST): NIL
Local 3 (HEAD): NIL
Local 4 (PREV-NAME): "ZWEI-INIT"
Local 5 (NAME): "ZWEI-INIT"
Local 6 (PREV-TYPE): "QFASL"
Local 7 (TYPE): "QFASL"
Local 8 (PATHNAME): #FS#:TOPS20-PATHNAME "OZ:PS:<DANIEL.G.MLY.L>ZWEI-INIT.QFASL.105"


ZWEI#:CLEAN-DIRECTORY (P.C. = 110)

 Arg 0 (PATHNAME): #FS#:TOPS20-PATHNAME "OZ:PS:<DANIEL.G.MLY.L>*.*.*"
   --Defaulted args:--
 Arg 1 (N-TO-KEEP): 2
 Arg 2 (PROMPT-STREAM): #:TERMINAL-IO-SYN-STREAM


Remainder of stack:

(:METHOD FS:FILE-OPERATION-FAILURE :CASE :PROCEED-ASKING-USER :CLEAN-DIRECTORY) (P.C. = 52)
(:METHOD FS:FILE-OPERATION-FAILURE :COMBINED :PROCEED-ASKING-USER) (P.C. = 112)
EH#:COM-PROCEED-SPECIFIED-TYPE (P.C. = 161)
EH#:COMMAND-LOOP (P.C. = 614)
(:METHOD CONDITION :DEBUGGER-COMMAND-LOOP) (P.C. = 27)
EH#:SECOND-LEVEL-ERROR-HANDLER (P.C. = 1371)
12-Dec-83 20:22:52-EST,1536;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 12 Dec 83 20:19-EST
Received: from SCRC-YANGTZE by SCRC-QUABBIN with CHAOS; Mon 12-Dec-83 20:23:01-EST
Date: Monday, 12 December 1983, 20:21-EST
From: Carl Hoffman <CWH at SCRC-TENEX>
Subject: Comments/questions based on Release 5.0 Release Notes
To: Moon at SCRC-TENEX, KMP at MIT-MC, ROM at SCRC-TENEX
Cc: BUG-LISPM at MIT-OZ
In-reply-to: The message of 12 Dec 83 14:33-EST from David A. Moon <Moon at SCRC-TENEX>

    Date: Monday, 12 December 1983, 14:33-EST
    From: David A. Moon <Moon at SCRC-TENEX>
	p63: It would be nice if PROMPT-AND-READ took a :STRING-LIST keyword as
	 does TV:CHOOSE-VARIABLE-VALUES. The keywords used by these two functions
	 (and others of similar ilk) should be regularized. It's very frustrating
	 when they each have different conventions.

    It does.

    Perhaps this regularization was done (by CWH) after the beta test system was made.
    Anyway the "real 5.0" release notes will need to keep up with this.

In system 243, PROMPT-AND-READ and CVV now follow almost nearly identical
conventions.  The major exceptions are: (1) The mouse oriented CVV options
(such as :BOOLEAN and :CHOOSE) are not implemented for PROMPT-AND-READ.  (2)
The :PATHNAME option to CVV returns a string; PROMPT-AND-READ returns a
pathname.  (1) will be fixed when all windows support mouse sensitivity.  (2)
will be fixed when I make my next pass over CVV, and unify the CVV and
PROMPT-AND-READ databases, unless someone beats me to it.
12-Dec-83 20:24:45-EST,721;000000000000
Received: from MIT-LISPM-1 by MIT-OZ via Chaosnet; 12 Dec 83 20:21-EST
Date: Monday, 12 December 1983, 20:16-EST
From: Richard Mlynarik <Mly at MIT-OZ>
To: BUG-LISPM-mit at MIT-OZ

In Bad Inconsistently updated System 98.7, CADR 3.1,
Inconsistently updated ZMail 53.2, MIT-Specific 22.0, microcode 305,
ZM MIT, on Lisp Machine One:


Insert your description of the circumstances here:


>>ERROR: Disk structure completely full for OZ:PS:<DANIEL.G.MLY.L>BUG-LISPM.BABYL
Backtrace from the debugger:

FS#:OPEN-CHAOS (P.C. = 1261)

...


There should be a proceed option of vanilla "expunge directory"
Currently there is clean dir, which can expunge at the end, but
involves a lot of hair in between
12-Dec-83 21:54:37-EST,3317;000000000000
Received: from MIT-LISPM-1 by MIT-OZ via Chaosnet; 12 Dec 83 21:49-EST
Date: Monday, 12 December 1983, 21:45-EST
From: Richard Mlynarik <Mly at MIT-OZ>
To: BUG-LISPM-mit at MIT-OZ

In Bad Inconsistently updated System 98.7, CADR 3.1,
Inconsistently updated ZMail 53.2, MIT-Specific 22.0, microcode 305,
ZM MIT, on Lisp Machine One:


Trying to mail to oz.
Earlier, both oz and mc had not responded, and my last mail had been sent through xx
This seems to have caused *mail-chaos-hosts* to become bashed.
The joys of *print-circle*!

*chaos-mail-hosts* =>
#1=(#FS#:TOPS20-CHAOS-HOST "MIT-XX" #FS#:ITS-CHAOS-HOST "MIT-ML" #FS#:TOPS20-CHAOS-HOST "MIT-EECS" #FS#:UNIX-CHAOS-HOST "MIT-VAX" #2=(#FS#:ITS-CHAOS-HOST "MIT-MC" . #1#) #2#)

>>ERROR: Cannot convert #1=(#FS#:ITS-CHAOS-HOST "MIT-MC" #FS#:TOPS20-CHAOS-HOST "MIT-XX" #FS#:ITS-CHAOS-HOST "MIT-ML" #FS#:TOPS20-CHAOS-HOST "MIT-EECS" ...) into a string.
Backtrace from the debugger:

STRING (P.C. = 102)

 Arg 0 (X): #1=(#FS#:ITS-CHAOS-HOST "MIT-MC" #FS#:TOPS20-CHAOS-HOST "MIT-XX" #FS#:ITS-CHAOS-HOST "MIT-ML" #FS#:TOPS20-CHAOS-HOST "MIT-EECS" ...)


STRING-SEARCH-CHAR (P.C. = 107)

 Arg 0 (CHAR): 56
 Arg 1 (STRING): #1=(#FS#:ITS-CHAOS-HOST "MIT-MC" #FS#:TOPS20-CHAOS-HOST "MIT-XX" #FS#:ITS-CHAOS-HOST "MIT-ML" #FS#:TOPS20-CHAOS-HOST "MIT-EECS" ...)
   --Defaulted args:--
 Arg 2 (FROM): 0
 Arg 3 (TO): NIL
 Arg 4 (CONSIDER-CASE): NIL
Local 0 (ALPHABETIC-CASE-AFFECTS-STRING-COMPARISON): NIL


SI:PARSE-HOST (P.C. = 100)

 Arg 0 (HOST): #1=(#FS#:ITS-CHAOS-HOST "MIT-MC" #FS#:TOPS20-CHAOS-HOST "MIT-XX" #FS#:ITS-CHAOS-HOST "MIT-ML" #FS#:TOPS20-CHAOS-HOST "MIT-EECS" ...)
   --Defaulted args:--
 Arg 1 (NO-ERROR-P): NIL
 Arg 2 (UNKNOWN-OK): NIL
Local 0 (ELEMENT): NIL
Local 1 (IDX): NIL
Local 2 (ELEMENT): NIL
Local 3: NIL
Local 4 (ADDRESS): NIL


MAPCAR (P.C. = 60)

 Arg 0 (FCN): #<DTP-FEF-POINTER SI:PARSE-HOST 2525746>
 Rest arg (LISTS): (#1=(#2=**))
Local 1 (V): (#FS#:TOPS20-CHAOS-HOST "MIT-XX" #FS#:ITS-CHAOS-HOST "MIT-ML" #FS#:TOPS20-CHAOS-HOST "MIT-EECS" #FS#:UNIX-CHAOS-HOST "MIT-VAX")
Local 2 (P): (#FS#:UNIX-CHAOS-HOST "MIT-VAX")
Local 3 (LP): NIL


CHAOS:UP-HOSTS (P.C. = 161)

 Arg 0 (LIST-OF-HOSTS): #1=(#FS#:TOPS20-CHAOS-HOST "MIT-XX" #FS#:ITS-CHAOS-HOST "MIT-ML" #FS#:TOPS20-CHAOS-HOST "MIT-EECS" #FS#:UNIX-CHAOS-HOST "MIT-VAX" ...)
 Arg 1 (NUMBER-OF-HOSTS): 1
   --Defaulted args:--
 Arg 2 (TIMEOUT): 360
Local 0 (CONNECTIONS): NIL
Local 1 (TIME-BEGAN): NIL
Local 2 (WINNERS): NIL
Local 3: NIL
Local 4 (HOST-AND-CONNECTIONS): NIL
Local 5 (HOST): NIL
Local 6: NIL
Local 7 (CONNECTION): NIL
Local 8 (ADDRESS): NIL
Local 9 (CONN): NIL
Local 10: NIL
Local 11: NIL
Local 12 (*SELECTQ-ITEM*): NIL
Local 13 (STATE): NIL
Local 14 (H-AND-C): NIL


Remainder of stack:

CHAOS-SEND-IT (P.C. = 74)
SEND-MESSAGE (P.C. = 126)
COM-EXIT-COM-MAIL (P.C. = 100)
COMMAND-EXECUTE (P.C. = 115)
PROCESS-COMMAND-CHAR (P.C. = 65)
(:METHOD WINDOW :EDIT) (P.C. = 464)
(:INTERNAL (:METHOD ZMACS-WINDOW :COMBINED :EDIT) 0) (P.C. = 74)
FUNCALL (P.C. = 25)
(:METHOD DISPLAYER :AROUND :EDIT) (P.C. = 31)
(:METHOD ZMACS-WINDOW :COMBINED :EDIT) (P.C. = 47)
ZMACS-WINDOW-TOP-LEVEL (P.C. = 46)
SI#:PROCESS-TOP-LEVEL (P.C. = 152)
12-Dec-83 22:01:50-EST,3005;000000000000
Received: from MIT-LISPM-1 by MIT-OZ via Chaosnet; 12 Dec 83 21:51-EST
Date: Monday, 12 December 1983, 21:47-EST
From: Richard Mlynarik <Mly at MIT-OZ>
To: BUG-LISPM-mit at MIT-OZ

In Bad Inconsistently updated System 98.7, CADR 3.1,
Inconsistently updated ZMail 53.2, MIT-Specific 22.0, microcode 305,
ZM MIT, on Lisp Machine One:


Insert your description of the circumstances here:

In the inspector -- I can't really give more information than that.
No idea what caused this. This is the second time it's happened to me.

I have just got that weird selection bug I had problems with in zmail
a while back.
I typed c-m from the eh loop in the inspector to send this report.
Now when I try to do system i or terminal s I nothing happens.
When I type space I get "not selected" in the who line.
"inspect" still appears on the mouse select menu. Clicking there
elicits (surprise, surprise) the same non-response.

>>TRAP 17440 (TRANS-TRAP)
The variable NIL is unbound (in a closure value-cell).
Backtrace from the debugger:

SI#:PRINT-RECORD-OCCURRENCES (P.C. = 126)

 Arg 0 (OBJECT): 
Local 0 (TAIL): NIL
Local 1 (FIRST): NIL
Local 2 (I): 0
Local 3: 3000


PRIN1 (P.C. = 120)

 Arg 0 (OBJECT): 
 Arg 1 (STREAM): #<INSPECT-WINDOW Inspect Window 4 5433510 exposed>
Local 0 (OLD): #<HASH-TABLE 25374645>


TV#:PRINT-ITEM-CONCISELY (P.C. = 324)

 Arg 0 (ITEM): 
 Arg 1 (STREAM): #<INSPECT-WINDOW Inspect Window 4 5433510 exposed>
   --Defaulted args:--
 Arg 2 (LEVEL): 0
Local 0 (TYPE): DTP-ARRAY-POINTER
Local 1 (L): NIL
Local 2 (FLAG): NIL
Local 3 (I): NIL


(:INTERNAL TV#:INSPECT-PRINTER 0) (P.C. = 31)

 Arg 0 (ELT): 
 Rest arg (ARGS): (#<INSPECT-WINDOW Inspect Window 4 5433510 exposed>)


(:METHOD TV:MOUSE-SENSITIVE-TEXT-SCROLL-WINDOW-WITHOUT-CLICK :ITEM1) (P.C. = 123)
  (SELF is #<INSPECT-WINDOW Inspect Window 4 5433510 exposed>)

 Arg 0 (OPERATION): :ITEM1
 Arg 1 (ITEM): 
 Arg 2 (TYPE): TV#:FLAVOR-FUNCTION
 Arg 3 (FUNCTION): #<DTP-FEF-POINTER (:INTERNAL TV#:INSPECT-PRINTER 0) 16772440>
 Rest arg (PRINT-ARGS): NIL
Local 1 (DISITEM): <<Error printing local>>
Local 2: <<Error printing local>>
Local 3: <<Error printing local>>
Local 4: 0


Remainder of stack:

TV#:INSPECT-PRINTER (P.C. = 143)
(:METHOD TV:FUNCTION-TEXT-SCROLL-WINDOW :PRINT-ITEM) (P.C. = 33)
(:METHOD TV#:INSPECT-WINDOW :COMBINED :PRINT-ITEM) (P.C. = 54)
(:METHOD TV:TEXT-SCROLL-WINDOW :REDISPLAY) (P.C. = 71)
(:METHOD TV#:INSPECT-WINDOW :COMBINED :REDISPLAY) (P.C. = 52)
(:METHOD TV:TEXT-SCROLL-WINDOW :SET-ITEMS) (P.C. = 177)
(:METHOD TV#:INSPECT-WINDOW :COMBINED :SET-ITEMS) (P.C. = 63)
(:METHOD TV:FUNCTION-TEXT-SCROLL-WINDOW :SETUP) (P.C. = 143)
(:METHOD TV#:INSPECT-WINDOW :COMBINED :SETUP) (P.C. = 64)
(:METHOD TV#:BASIC-INSPECT :SETUP-OBJECT) (P.C. = 30)
(:METHOD TV#:INSPECT-HISTORY-WINDOW :INSPECT-OBJECT) (P.C. = 137)
TV#:INSPECT-COMMAND-LOOP (P.C. = 603)
TV#:INSPECT-TOP-LEVEL (P.C. = 62)
SI#:PROCESS-TOP-LEVEL (P.C. = 152)
13-Dec-83 00:49:43-EST,1964;000000000000
Received: from MIT-LISPM-1 by MIT-OZ via Chaosnet; 13 Dec 83 00:48-EST
Date: Tuesday, 13 December 1983, 00:44-EST
From: Richard Mlynarik <Mly at MIT-OZ>
To: BUG-LISPM-mit at MIT-OZ

In Bad Inconsistently updated System 98.7, CADR 3.1,
Inconsistently updated ZMail 53.3, MIT-Specific 22.0, microcode 305,
ZM MIT, on Lisp Machine One:


	WHEN (EQ (NOT (NULL BLIND))
		 (NOT (NULL (EQ FIELD ':BCC))))
	NCONC (LOOP FOR RECIPIENT IN (GET PLIST FIELD)
		    COLLECT RECIPIENT)))

(DEFUN CHAOS-SEND-IT-1 (HOST RECIPIENTS PLIST INTERVAL TEMPLATE)
  (WITH-OPEN-STREAM (STREAM (CHAOS:OPEN-STREAM HOST "MAIL" ':ERROR NIL))
    (IF (ERRORP STREAM)
	(PROGN
	  ;; When a host can't be reached, move it to end of list.
	  (SETQ *MAIL-CHAOS-HOSTS*
		(NCONC (DELQ HOST *MAIL-CHAOS-HOSTS*)
		       (LIST HOST)))
	  STREAM)
	;; Output the recipients
	(DOLIST (RCPT RECIPIENTS)
	  (SETQ RCPT (STRING-FROM-HEADER RCPT ':HOST))
	  (FUNCALL STREAM ':STRING-OUT RCPT)
	  (FUNCALL STREAM ':TYO #\CR)
	  (CHECK-CHAOS-MAIL-RESPONSE STREAM RCPT))
	(FUNCALL STREAM ':TYO #\CR)		;Mark end of recipients
	(LET ((*QUOTE-HOSTS-FOR-XMAILR* (MEMQ (FUNCALL HOST ':SYSTEM-TYPE)
					      '(:TOPS-20 :TENEX))))
	  (OUTPUT-HEADER-AND-MSG STREAM PLIST INTERVAL TEMPLATE))
	(CHECK-CHAOS-MAIL-RESPONSE STREAM "the body of the message" T)
	(SEND STREAM ':CLOSE ':ABORT)	;Non-abort would send another EOF and wait for it.
	NIL)))

(DEFUN CHECK-CHAOS-MAIL-RESPONSE (STREAM ERRMES &OPTIONAL EOF-P)
  (FUNCALL STREAM ':FORCE-OUTPUT)



<< While compiling the end of the data >>
 Error expanding macro DEFUN at top level
 The argument to CDR, T, was of the wrong type.
The function expected a cons.
 The problems described above were encountered processing the end of the data.

The above is from zmail;mail
With point positioned inside chaos-send-it-1, I typed c-sh-c, and got the above
warning. I have had this bug crop up twice before. What does it mean?
13-Dec-83 12:35:04-EST,568;000000000000
Received: from MIT-MORRISON by MIT-OZ via Chaosnet; 13 Dec 83 12:31-EST
Date: Tuesday, 13 December 1983, 12:32-EST
From: John Batali <BATALI at MIT-OZ>
Subject: si:basic-host
To: BUG-LISPM at MIT-OZ

In Release 5.0 [GC'd Beta Test rev 3], dusty plum, on Lisp Machine Jim Morrison (3600):

The basic-host flavor has been moved from package SI to package NET.
This is okay, I guess, except that I didn't see any announcement to that
effect.  Also, the comments at the beginning of the file HOST.LISP still
say that the flavors are SI:HOST and SI:BASIC-HOST.
13-Dec-83 14:59:38-EST,1204;000000000000
Received: from SCRC-TENEX by MIT-OZ via Chaosnet; 13 Dec 83 14:58-EST
Received: from SCRC-CHARLES by SCRC-TENEX with CHAOS; Tue 13-Dec-83 14:28:29-EST
Date: Tuesday, 13 December 1983, 14:27-EST
From: David C. Plummer <DCP at SCRC-TENEX>
Subject: si:basic-host
To: BATALI at MIT-OZ, BUG-LISPM at MIT-OZ
In-reply-to: The message of 13 Dec 83 12:32-EST from John Batali <BATALI at MIT-OZ>

    Date: Tuesday, 13 December 1983, 12:32-EST
    From: John Batali <BATALI at MIT-OZ>
    In Release 5.0 [GC'd Beta Test rev 3], dusty plum, on Lisp Machine Jim Morrison (3600):

    The basic-host flavor has been moved from package SI to package NET.
    This is okay, I guess, except that I didn't see any announcement to that
    effect.
It is possible, but highly impractical, to document/announce all the
package reorganizations that happened for the new network system.  A
general rule of thumb: if it used to be in SI and it was network
related, try NETI:.
    Also, the comments at the beginning of the file HOST.LISP still
    say that the flavors are SI:HOST and SI:BASIC-HOST.
This was fixed in the source (.144) back in October, but since the
system build sources are so old...

13-Dec-83 19:25:13-EST,3102;000000000000
Received: from MIT-LISPM-18 by MIT-OZ via Chaosnet; 13 Dec 83 19:22-EST
Date: Tuesday, 13 December 3883, 19:25-EST
From: Henry Minsky <HQM at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In Experimental System 98.5, CADR 3.1, Experimental ZMail 53.0,
MIT-Specific 22.0, microcode 305, ZM MIT, on Lisp Machine Eighteen:


Insert your description of the circumstances here:

Every time I do a dired, delete some files, and tell it to expunge,
it deletes all the files, then bombs at the end.

>>ERROR: Illegal request format for OZ:PS:<HQM.EE>*.*.*
Backtrace from the debugger:

FS#:DIRECTORY-OPERATION-CHAOS (P.C. = 132)

 Arg 0 (OPERATION): :EXPUNGE
 Arg 1 (HOST): #FS#:TOPS20-CHAOS-HOST "MIT-OZ"
 Arg 2 (PATHNAME): #FS#:TOPS20-PATHNAME "OZ:PS:<HQM.EE>*.*.*"
 Arg 3 (ERROR-P): T
Local 0 (HOST-UNIT): #<HOST-UNIT 3165353>
Local 1 (PKT): #S(CHAOS#:PKT :PKT-OPCODE-LEFT-JUSTIFIED 100000 :PKT-OPCODE ...)
Local 2 (SUCCESS): NIL
Local 3 (FILE-STRING): " ERROR BUG F Illegal request format"
Local 4 (START): NIL
Local 5 (IGNORE): NIL


(:METHOD FS#:TOPS20-PATHNAME :EXPUNGE) (P.C. = 64)
  (SELF is #FS#:TOPS20-PATHNAME "OZ:PS:<HQM.EE>*.*.*")

 Arg 0 (OPERATION): :EXPUNGE
 Rest arg: NIL
Local 1 (ERROR): T


FS:EXPUNGE-DIRECTORY (P.C. = 153)

 Arg 0 (PATHNAME): #FS#:TOPS20-PATHNAME "OZ:PS:<HQM.EE>*.*.*"
 Rest arg (OPTIONS): NIL
Local 1 (ERROR): T
Local 2: ((FS:FILE-ERROR) SI#:FILE-RETRY-HANDLER #FS#:TOPS20-PATHNAME "OZ:PS:<HQM.EE>*.*.*")
Local 3: ((** SI#:FILE-RETRY-HANDLER #FS#:TOPS20-PATHNAME "OZ:PS:<HQM.EE>*.*.*"))
Local 4 (NEW-PATHNAME): NIL


ZWEI#:REAP-DIRECTORY (P.C. = 170)

 Arg 0 (PATHNAME): #FS#:TOPS20-PATHNAME "OZ:PS:<HQM.EE>*.*.*"
 Arg 1 (N-TO-KEEP): 2
 Arg 2 (STREAM): #:TERMINAL-IO-SYN-STREAM
Local 0 (DIRECTORY-LIST): ((#FS#:TOPS20-PATHNAME "OZ:PS:<HQM.EE>JAK.BIB.4" :PROTECTION "77777" :GENERATION-RETENTION-COUNT ...) (#FS#:TOPS20-PATHNAME "OZ:PS:<HQM.EE>JAK.MSS.99" :OFFLINE T :PROTECTION ...) (#FS#:TOPS20-PATHNAME "OZ:PS:<HQM.EE>LAST.MSS.8" :OFFLINE T :PROTECTION ...) (#FS#:TOPS20-PATHNAME "OZ:PS:<HQM.EE>LISA.MSS.8" :OFFLINE T :PROTECTION ...) ...)
Local 1 (SOMETHING-DELETED): T
Local 2 (LIST): NIL
Local 3 (HEAD): NIL
Local 4 (PREV-NAME): "ROOT"
Local 5 (NAME): "ROOT"
Local 6 (PREV-TYPE): "MSS"
Local 7 (TYPE): "MSS"
Local 8 (PATHNAME): #FS#:TOPS20-PATHNAME "OZ:PS:<HQM.EE>ROOT.MSS.44"


ZWEI#:CLEAN-DIRECTORY (P.C. = 110)

 Arg 0 (PATHNAME): #FS#:TOPS20-PATHNAME "OZ:PS:<HQM.EE>*.*.*"
 Arg 1 (N-TO-KEEP): 2
 Arg 2 (PROMPT-STREAM): #<MODE-LINE-WINDOW Mode Line Window 1 2202677 exposed>


Remainder of stack:

ZWEI#:COM-CLEAN-DIRECTORY (P.C. = 66)
ZWEI#:COM-EXTENDED-COMMAND (P.C. = 67)
ZWEI#:COMMAND-EXECUTE (P.C. = 115)
ZWEI#:PROCESS-COMMAND-CHAR (P.C. = 65)
(:METHOD ZWEI:WINDOW :EDIT) (P.C. = 464)
(:INTERNAL (:METHOD ZWEI:ZMACS-WINDOW :COMBINED :EDIT) 0) (P.C. = 74)
FUNCALL (P.C. = 25)
(:METHOD ZWEI#:DISPLAYER :AROUND :EDIT) (P.C. = 31)
(:METHOD ZWEI:ZMACS-WINDOW :COMBINED :EDIT) (P.C. = 47)
ZWEI#:ZMACS-WINDOW-TOP-LEVEL (P.C. = 46)
SI#:PROCESS-TOP-LEVEL (P.C. = 152)
13-Dec-83 19:47:04-EST,865;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 13 Dec 83 19:46-EST
Received: from SCRC-EUPHRATES by SCRC-QUABBIN with CHAOS; Tue 13-Dec-83 19:52:06-EST
Date: Tuesday, 13 December 1983, 19:16-EST
From: David A. Moon <Moon at SCRC-TENEX>
To: Henry Minsky <HQM at MIT-OZ>
Cc: BUG-LISPM at MIT-OZ
In-reply-to: The message of 12 Dec 1983 19:25-EST from Henry Minsky <HQM at MIT-OZ>

    Date: Tuesday, 13 December 3883, 19:25-EST
    From: Henry Minsky <HQM at MIT-OZ>

    In Experimental System 98.5, CADR 3.1, Experimental ZMail 53.0,
    MIT-Specific 22.0, microcode 305, ZM MIT, on Lisp Machine Eighteen:

    Every time I do a dired, delete some files, and tell it to expunge,
    it deletes all the files, then bombs at the end.

    >>ERROR: Illegal request format for OZ:PS:<HQM.EE>*.*.*

The file server on OZ was broken.  I fixed it.
14-Dec-83 00:28:13-EST,2964;000000000000
Received: from MIT-AVATAR by MIT-OZ via Chaosnet; 14 Dec 83 00:27-EST
Date: Wednesday, 14 December 1983, 00:30-EST
From: Kent M Pitman <kmp at MIT-OZ>
Subject: Bogus Invalid Simultaneous Access 
To: BUG-LISPM at MIT-OZ

In Release 4.5, Knowledge-Based-Editor 223.0, site configuration 72,
Hacked Magic, on PA Lisp Machine Avatar:

This happened trying to c-X c-S to a file I had only moments ago c-Aborted
out of a c-X c-S to. When this happens, the file server and the LispM should
negotiate about what files they think are open and verify that the error
is for a file which the LispM intends to still be open.

>>Error: Invalid simultaneous access
For OZ:PS:<KMP>FLUSHABLE.LISP
While in the function (:METHOD FS:HOST-UNIT :COMMAND)  FS:OPEN-CHAOS  (:METHOD FS:CHAOS-PATHNAME OPEN)

(:METHOD FS:HOST-UNIT :COMMAND):  (P.C. = 363)
   (SELF = #<HOST-UNIT 2732006>)
   Arg 0 (OPERATION): :COMMAND
   Arg 1 (MARK-P): NIL
   Arg 2 (STREAM-OR-HANDLE): "O2271"
   Arg 3 (SIMPLE-P): NIL
   Arg 4 (WHOSTATE): "Open"
   Rest arg (COMMANDS): ("OPEN " :WRITE " " CHARACTER "" "" "" "" "" "" ...)
   Local 1 (HANDLE): "O2271"
   Local 2 (STREAM): NIL
   Local 3 (PKT): #<CHAOS Packet -33511750>
   Local 4 (SUCCESS): NIL
   Local 5 (STRING): "O2271 ERROR LCK F Invalid simultaneous access"
   Local 6 (TRANSACTION-ID): "T2275"
   Local 7 (CREATE-P): T
   Local 8 (FROM): 6.
   Local 9 (CONDITION): NIL
   Local 10: T
   Local 11: (#<CASE-HANDLER 2351607> #<BIND-HANDLER 2345041> #<BIND-HANDLER 2345553>)

FS:OPEN-CHAOS:  (P.C. = 577)
   Arg 0 (HOST): #<TOPS20-CHAOS-HOST MIT-OZ>
   Arg 1 (*COMMAND-PATHNAME*): #<TOPS20-PATHNAME "OZ:PS:<KMP>FLUSHABLE.LISP">
   Arg 2 (OPTIONS): (:CHARACTERS T :DIRECTION :OUTPUT)

(:METHOD FS:CHAOS-PATHNAME OPEN):  (P.C. = 26)
   (SELF = #<TOPS20-PATHNAME "OZ:PS:<KMP>FLUSHABLE.LISP">)
   Arg 0 (OPERATION): OPEN
   Arg 1 (PATHNAME): #<TOPS20-PATHNAME "OZ:PS:<KMP>FLUSHABLE.LISP">
   Rest arg (OPTIONS): (:CHARACTERS T :DIRECTION :OUTPUT)

FS:MACLISP-COMPATIBILITY-OPEN:  (P.C. = 476)
   Arg 0 (FILENAME): #<TOPS20-PATHNAME "OZ:PS:<KMP>FLUSHABLE.LISP">
   Arg 1 (OPTIONS): (ZWEI:OUT)

OPEN:  (P.C. = 370)
   Arg 0 (PATHNAME): #<TOPS20-PATHNAME "OZ:PS:<KMP>FLUSHABLE.LISP">
   Rest arg (KEYWORD-ARGS): ((ZWEI:OUT))

(:METHOD ZWEI:FILE-BUFFER-MIXIN :SAVE):  (P.C. = 171)
   (SELF = #<FILE-BUFFER "FLUSHABLE.LISP PS:<KMP> OZ:" 26431211>)
   Arg 0 (OPERATION): :SAVE

ZWEI:SAVE-BUFFER:  (P.C. = 323)
   Arg 0 (BUFFER): #<FILE-BUFFER "FLUSHABLE.LISP PS:<KMP> OZ:" 26431211>

ZWEI:COM-SAVE-FILE:  (P.C. = 47)

Rest of stack:
ZWEI:COMMAND-EXECUTE:  (P.C. = 100)
ZWEI:MAKE-EXTENDED-COMMAND-INTERNAL:  (P.C. = 217)
ZWEI:COMMAND-EXECUTE:  (P.C. = 100)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 67)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 377)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 102)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 52)
SI:PROCESS-TOP-LEVEL:  (P.C. = 125)
14-Dec-83 15:04:37-EST,2346;000000000000
Received: from MIT-JANIS by MIT-OZ via Chaosnet; 14 Dec 83 15:02-EST
Date: Wednesday, 14 December 1983, 15:05-EST
From: Eric Sven Ristad <RISTAD at MIT-OZ>
Subject: telnet busted
To: BUG-LISPM at MIT-OZ

In Release 5.0 [GC'd Beta Test rev 3], Dusty plum, on Lisp Machine Janis Joplin (3600):

I was editing <ristad.clu>tl.tlinkvx while supduping to oz, and it
fucked up when I typed carriage return. hmm.

>>Error: Illegal line-count 1 for #<NVT-WINDOW Terminal 1 2240000 exposed>
While in the function (:METHOD TV:SHEET :DELETE-LINE)  (:METHOD TELNET:SUPDUP-STATE-BLOCK :SUPDUP-DELETE-LINE)  (:METHOD TELNET:SUPDUP-FILTER :FILTER)

(:METHOD TV:SHEET :DELETE-LINE):  (P.C. = 103)
   Arg 0 (SELF): #<NVT-WINDOW Terminal 1 2240000 exposed>
   Arg 1 (SELF-MAPPING-TABLE): TV:SHEET
   Arg 2 (OPERATION): :DELETE-LINE
   Arg 3 (LINE-COUNT): 1
   --Defaulted args:--
   Arg 4 (UNIT): :CHARACTER
   Local 5 (WID): 2074
   Local 6 (HGT): 16
   Local 7 (DELTA-HEIGHT): 23

(:METHOD TELNET:SUPDUP-STATE-BLOCK :SUPDUP-DELETE-LINE):  (P.C. = 7)
   Arg 0 (SELF): #<SUPDUP-STATE-BLOCK 3735131>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TELNET:SUPDUP-STATE-BLOCK -- 3. IV's, 0. FL's 15626036>
   Arg 2 (OPERATION): :SUPDUP-DELETE-LINE
   Arg 3 (INPUT-STREAM): #<HANGUP-FILTER 17340142>

(:METHOD TELNET:SUPDUP-FILTER :FILTER):  (P.C. = 27)
   Arg 0 (SELF): #<SUPDUP-FILTER 17340146>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TELNET:SUPDUP-FILTER -- 3. IV's, 0. FL's 15625212>
   Arg 2 (OPERATION): :FILTER
   Arg 3 (CH): 224

(:METHOD TELNET:FILTER-STREAM :TYI-NO-HANG):  (P.C. = 15)
   Arg 0 (SELF): #<SUPDUP-FILTER 17340146>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TELNET:FILTER-STREAM -- 3. IV's, 0. FL's 15625220>
   Arg 2 (OPERATION): :TYI-NO-HANG

(:METHOD TELNET:FILTER-STREAM :TYI):  (P.C. = 5)
   Arg 0 (SELF): #<SUPDUP-FILTER 17340146>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TELNET:FILTER-STREAM -- 3. IV's, 0. FL's 15625220>
   Arg 2 (OPERATION): :TYI

(:METHOD TELNET:NVT-WINDOW :TYPEOUT-TOP-LEVEL):  (P.C. = 26)
   Arg 0 (SELF): #<NVT-WINDOW Terminal 1 2240000 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TELNET:NVT-WINDOW -- 18. IV's, 10. FL's 24573464>
   Arg 2 (OPERATION): :TYPEOUT-TOP-LEVEL

SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
   Arg 0 (IGNORE): NIL
14-Dec-83 18:48:13-EST,4281;000000000000
Received: from MIT-LISPM-1 by MIT-OZ via Chaosnet; 14 Dec 83 18:47-EST
Date: Wednesday, 14 December 1983, 18:50-EST
From: Richard Mlynarik <Mly at MIT-OZ>
To: BUG-LISPM-mit at MIT-OZ

In Bad Inconsistently updated System 98.7, CADR 3.1,
Experimental ZMail 53.5, MIT-Specific 22.0, microcode 305, ZM MIT,
on Lisp Machine One:

did c-x c-f on a file in a logical host "z" which was not defined.
got an error.
loaded an init file to define the host. ("<daniel.g.mly.l>lispm-init")
typed  at eh and gave it a pathname in z.


>>TRAP 14114 (ARGTYP NUMBER M-T 1 XMIN0)
The second argument to SYSTEM:*MIN, #FS#:LOGICAL-PATHNAME "Z: PAPER; 24900-3 TEXT >", was of the wrong type.
The function expected a number.
Backtrace from the debugger:

FS:PARSE-PATHNAME (P.C. = 521)

 Arg 0 (THING): "z:paper;249001 text >"
 Arg 1 (WITH-RESPECT-TO): NIL
 Arg 2 (DEFAULTS): ((#FS#:TOPS20-CHAOS-HOST "MIT-OZ" . #FS#:TOPS20-PATHNAME "OZ:SRC:<L.ZWEI>PATED.LISP") (#FS#:LOGICAL-HOST "SYS" . #FS#:LOGICAL-PATHNAME "SYS: ZWEI; PATED LISP >") (NIL . #FS#:TOPS20-PATHNAME "OZ:SRC:<L.ZWEI>PATED.LISP"))
   --Defaulted args:--
 Arg 3 (BREAK-CHARS): NIL
 Arg 4 (START): 0
 Arg 5 (END): NIL
 Arg 6 (ERRORP): T
Local 0 (DEVICE): NIL
Local 1 (DIRECTORY): NIL
Local 2 (NAME): NIL
Local 3 (TYPE): NIL
Local 4 (VERSION): NIL
Local 5 (HOST): #FS#:TOPS20-CHAOS-HOST "MIT-OZ"
Local 6: NIL
Local 7 (HOST-SPECIFIED): NIL
Local 8 (START): 0
Local 9 (END): NIL
Local 10 (PARSE-END): NIL
Local 11 (INDEX): #FS#:LOGICAL-PATHNAME "Z: PAPER; 24900-3 TEXT >"


FS:MERGE-PATHNAME-DEFAULTS (P.C. = 144)

 Arg 0 (PATHNAME): "z:paper;249001 text >"
 Arg 1 (DEFAULTS): ((#FS#:TOPS20-CHAOS-HOST "MIT-OZ" . #FS#:TOPS20-PATHNAME "OZ:SRC:<L.ZWEI>PATED.LISP") (#FS#:LOGICAL-HOST "SYS" . #FS#:LOGICAL-PATHNAME "SYS: ZWEI; PATED LISP >") (NIL . #FS#:TOPS20-PATHNAME "OZ:SRC:<L.ZWEI>PATED.LISP"))
 Arg 2 (DEFAULT-TYPE): :LISP
 Arg 3 (DEFAULT-VERSION): :NEWEST
   --Defaulted args:--
 Arg 4 (ALWAYS-MERGE-TYPE): NIL
Local 0 (HOST): NIL
Local 1 (DEFAULT): NIL
Local 2 (SECONDARY-DEFAULT): NIL
Local 3 (NEW-DEVICE): NIL
Local 4 (NEW-DIRECTORY): NIL
Local 5 (NEW-NAME): NIL
Local 6 (NEW-TYPE): NIL
Local 7 (NEW-VERSION): NIL
Local 8 (NEW-OTYPE): NIL
Local 9 (WDIR): NIL
Local 10 (PDIR): NIL
Local 11 (DDIR): NIL


FS:MERGE-AND-SET-PATHNAME-DEFAULTS (P.C. = 51)

 Arg 0 (PATHNAME): "z:paper;249001 text >"
 Arg 1 (DEFAULTS): ((#FS#:TOPS20-CHAOS-HOST "MIT-OZ" . #FS#:TOPS20-PATHNAME "OZ:SRC:<L.ZWEI>PATED.LISP") (#FS#:LOGICAL-HOST "SYS" . #FS#:LOGICAL-PATHNAME "SYS: ZWEI; PATED LISP >") (NIL . #FS#:TOPS20-PATHNAME "OZ:SRC:<L.ZWEI>PATED.LISP"))
 Arg 2 (DEFAULT-TYPE): :LISP
 Arg 3 (DEFAULT-VERSION): :NEWEST


MAKE-DEFAULTED-PATHNAME (P.C. = 102)

 Arg 0 (STRING): "z:paper;249001 text >"
 Arg 1 (DEFAULTS): ((#FS#:TOPS20-CHAOS-HOST "MIT-OZ" . #FS#:TOPS20-PATHNAME "OZ:SRC:<L.ZWEI>PATED.LISP") (#FS#:LOGICAL-HOST "SYS" . #FS#:LOGICAL-PATHNAME "SYS: ZWEI; PATED LISP >") (NIL . #FS#:TOPS20-PATHNAME "OZ:SRC:<L.ZWEI>PATED.LISP"))
 Arg 2 (SPECIAL-TYPE): NIL
 Arg 3 (SPECIAL-VERSION): NIL
 Arg 4 (MERGE-IN-SPECIAL-VERSION): T
 Arg 5 (MERGE-TYPE): T


READ-DEFAULTED-PATHNAME (P.C. = 71)

 Arg 0 (PROMPT): "Find file:"
 Arg 1 (DEFAULTS): ((#FS#:TOPS20-CHAOS-HOST "MIT-OZ" . #FS#:TOPS20-PATHNAME "OZ:SRC:<L.ZWEI>PATED.LISP") (#FS#:LOGICAL-HOST "SYS" . #FS#:LOGICAL-PATHNAME "SYS: ZWEI; PATED LISP >") (NIL . #FS#:TOPS20-PATHNAME "OZ:SRC:<L.ZWEI>PATED.LISP"))
 Arg 2 (SPECIAL-TYPE): NIL
 Arg 3 (SPECIAL-VERSION): NIL
 Arg 4 (DIRECTION): :NEW-OK
   --Defaulted args:--
 Arg 5 (MERGE-IN-SPECIAL-VERSION): T
 Arg 6 (MERGE-TYPE): T
 Arg 7 (MINI-BUFFER-INITIAL-CONTENTS): NIL
 Arg 8 (MINI-BUFFER-INITIAL-CHAR-POS): NIL


Remainder of stack:

COM-FIND-FILE (P.C. = 44)
COMMAND-EXECUTE (P.C. = 115)
MAKE-EXTENDED-COMMAND-INTERNAL (P.C. = 72)
COMMAND-EXECUTE (P.C. = 115)
PROCESS-COMMAND-CHAR (P.C. = 65)
(:METHOD WINDOW :EDIT) (P.C. = 464)
(:INTERNAL (:METHOD ZMACS-WINDOW :COMBINED :EDIT) 0) (P.C. = 74)
FUNCALL (P.C. = 25)
(:METHOD DISPLAYER :AROUND :EDIT) (P.C. = 31)
(:METHOD ZMACS-WINDOW :COMBINED :EDIT) (P.C. = 47)
ZMACS-WINDOW-TOP-LEVEL (P.C. = 46)
SI#:PROCESS-TOP-LEVEL (P.C. = 152)
15-Dec-83 20:33:40-EST,2794;000000000000
Received: from MIT-AVATAR by MIT-OZ via Chaosnet; 15 Dec 83 20:30-EST
Date: Thursday, 15 December 1983, 20:33-EST
From: Kent M Pitman <kmp at MIT-OZ>
Subject: Some thoughts about region marking in ZWEI
To: BUG-LISPM at MIT-OZ
Cc: KBE-I at MIT-OZ

In Symbolics Release 4.5, on MIT-Avatar (CADR):

In the KBE, there are times when we want to be able to "highlight"
a piece of code after we have done an operation on it. Using the
region has the disadvantage that if you subsequently move the
cursor, you drag the mark with you, which is almost never the 
desired behavior.

The worst part is that to make the region go away, you have to
type c-G. This feels like the right thing if the region was
created by accident, but it feels very wrong if the region was
not created by accident.  Also, in demos, typing c-G and hearing
the bell as often as I'd have to with the KBE always
highlighting things is embarrassing.

Several things occur to me.

* Abort might should clear the region (if there is any) and if there
  is none, should do its normal thing. When a region is visible, I
  find myself typing Abort and being frustrated that it just tells
  me I'm already at toplevel. I do not -feel- like I am at toplevel
  when I have a region. My sense of context has been contracted and I
  feel like Abort should get me out of this state. 

  Certainly at toplevel this would be reasonable since Abort doesn't
  do anything useful there anyway. And when in Mail, etc. where Abort
  has a purpose, I might argue that if I had made a region in mail,
  the chances were high that I didn't mean to abort the mail, but rather
  was typing the Abort to flush the region. Two aborts would flush the
  mail.

* c-G might should not beep when it has something useful to do.
  ie, it should only beep if there is no region or if given an
  argument (since that doesn't flush the region).

* CStacy suggested that perhaps there should be another kind of region
  which is more inclined to go away than the normal one. I can see how
  this might be a little tricky to work out the details of, especially
  retaining compatibility with the existing marking strategy, but I don't
  think it's impossible. Basically, you could have an attribute of the
  window that said that the region was ephemeral and would be flushed
  after the next command. Commands which established a mark would then
  reset the attribute so that the region became normal. Perhaps even
  such a region would be marked by the kind of region marker you weren't
  using normally (eg, "solid region" rather than "underline" or vice
  versa).  Obviously, such regions would not heed the "KM" flag in DEFCOM.

I think all of these are independently interesting and should be looked into.
15-Dec-83 20:53:25-EST,1071;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 15 Dec 83 20:49-EST
Date: 15 December 1983 20:50 EST
From: Christopher C. Stacy <CSTACY @ MIT-MC>
Subject:  why can't I supdup??
To: HQM @ MIT-OZ
cc: BUG-LISPM @ MIT-OZ
In-reply-to: Msg of 12 Dec 1983 17:35-EST from Henry Minsky <HQM at MIT-OZ>

    Date: Monday, 12 December 1983, 17:35-EST
    From: Henry Minsky <HQM at MIT-OZ>
    To:   BUG-LISPM at MIT-OZ
    Re:   why can't I supdup??

    In Release 5.0 [GC'd Beta Test rev 3], dusty plum, on Lisp Machine Jim Morrison (3600):

    When I do Select-T and try to connect to OZ, it connects me in
    Telnet, not supdup. why?


Probably OZ did not respond to SUPDUP fast enough (its usual favorite
lossage mode when its CHASUP frob dies), and so the LispM decided to
try TELNET, which worked.  I have complained about not having enough
control over where I was going and how I was getting there, and have
been told that it is fixed in the command processor.  I hope when
we get a real Rel 5 that we have some kind of command processor in it.

15-Dec-83 22:13:13-EST,927;000000000000
Received: from MIT-LISPM-4 by MIT-OZ via Chaosnet; 15 Dec 83 22:10-EST
Date: Thursday, 15 December 1983, 22:11-EST
From: Richard Mlynarik <Mly at MIT-OZ>
Subject: logical pathname on non-DSK device completion lossage
To: BUG-LISPM-mit at MIT-OZ
Message-ID: <[MIT-LISPM-4].15-Dec-83 22:11:12.Mly>

In Bad Inconsistently updated System 98.7, CADR 3.1,
Experimental ZMail 53.5, MIT-Specific 22.0, microcode 305, ZM MIT,
on Lisp Machine Four:

(FS:ADD-LOGICAL-PATHNAME-HOST "Z" "OZ"
  '(("M" "PS:<DANIEL.G.MLY>")
    ("L" "PS:<DANIEL.G.MLY.L>")
    ("F" "PS:<DANIEL.G.MLY.F>")
    ("RMS" "PS:<RMS>")
    ("T" "T:<MLY>")
    ("PAPER" "T:<MLY.PAPERS>")))

there are files faust.tex and faust.dict in oz:t:<mly.papers>

If I type "z:paper;fau" to a file read minibuffer, it completes to

"Z: TINMAN: MLY; FAUST LISP"
[The losing "lisp" is the usual annoying completion lossage,
coming from default merging]
16-Dec-83 00:12:52-EST,2861;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 16 Dec 83 00:11-EST
Date: Friday, 16 December 1983, 00:07-EST
From: Richard Mlynarik <Mly at MIT-OZ>
To: BUG-LISPM-mit at MIT-OZ

In Bad Inconsistently updated System 98.7, CADR 3.1,
Experimental ZMail 53.5, MIT-Specific 22.0, microcode 305, ZM MIT,
on Lisp Machine Four:


Trying to send converse message to non-chaos host...

>>ERROR: The object #SI#:UNIX-HOST "MIT-BORAX" received a :CHAOS-ADDRESS message, which went unclaimed.
The rest of the message was NIL.
Backtrace from the debugger:

#SI#:UNIX-HOST "MIT-BORAX":
   Arg 0: :CHAOS-ADDRESS


SI#:INSTANCE-HASH-FAILURE (P.C. = 170)

 Arg 0 (OP): :CHAOS-ADDRESS
 Rest arg (ARGS): NIL
Local 1 (HT): #<EQ-HASH-ARRAY (Funcallable) 10737031>
Local 2 (FN-LOCATION): NIL
Local 3 (FUNC): NIL
Local 4 (NEWHT): NIL
Local 5: NIL
Local 6: NIL


CHAOS:ADDRESS-PARSE (P.C. = 52)

 Arg 0 (ADDRESS): #SI#:UNIX-HOST "MIT-BORAX"
Local 0 (HOST): #SI#:UNIX-HOST "MIT-BORAX"


CHAOS:CONNECT (P.C. = 225)

 Arg 0 (ADDRESS): #SI#:UNIX-HOST "MIT-BORAX"
 Arg 1 (CONTACT-NAME): "SEND DAB"
 Arg 2 (WINDOW-SIZE): 15
 Arg 3 (TIMEOUT): 1130
Local 0 (CONN): NIL
Local 1 (REAL-ADDRESS): NIL
Local 2 (HOST-NAME): NIL
Local 3: ("Try the connection again.")
Local 4: (SYSTEM:REMOTE-NETWORK-ERROR :RETRY-CONNECTION T ("Try the connection again.") ...)
Local 5: ((SYSTEM:REMOTE-NETWORK-ERROR :RETRY-CONNECTION T ** ...) (** ** T ** ...) (** ** T ** ...) (CONDITION ** T ** ...))
Local 6 (*SELECTQ-ITEM*): NIL
Local 7 (PKT): NIL
Local 8 (STRING): NIL


CHAOS:OPEN-STREAM (P.C. = 206)

 Arg 0 (HOST): #SI#:UNIX-HOST "MIT-BORAX"
 Arg 1 (CONTACT-NAME): "SEND DAB"
 Rest arg: (:ERROR NIL :DIRECTION :OUTPUT)
Local 1 (WINDOW-SIZE): 15
Local 2 (TIMEOUT): 1130
Local 3 (DIRECTION): :OUTPUT
Local 4 (ERROR): NIL
Local 5 (CHARACTERS): T
Local 6 (ASCII-TRANSLATION): NIL
Local 7 (CONN): NIL
Local 8 (ERROR-OBJECT): NIL
Local 9: (SYSTEM:REMOTE-NETWORK-ERROR SI#:CONDITION-CASE-THROW CHAOS#:G9211)
Local 10: ((SYSTEM:REMOTE-NETWORK-ERROR SI#:CONDITION-CASE-THROW CHAOS#:G9211))
Local 11 (ERROR-OBJECT): NIL
Local 12 (*SELECTQ-ITEM*): NIL


Remainder of stack:

ZWEI#:SEND-MSG (P.C. = 204)
ZWEI#:CONVERSE-SEND-MSG-INTERNAL (P.C. = 113)
ZWEI#:CONVERSE-SEND-MSG (P.C. = 32)
ZWEI#:CONVERSE-SEND-WITHOUT-EXIT (P.C. = 23)
ZWEI#:COM-CONVERSE-HANDLE-END (P.C. = 33)
ZWEI#:COMMAND-EXECUTE (P.C. = 115)
ZWEI#:PROCESS-COMMAND-CHAR (P.C. = 65)
(:METHOD ZWEI:WINDOW :EDIT) (P.C. = 464)
(:INTERNAL (:METHOD ZWEI#:ZWEI-WINDOW-PANE :COMBINED :EDIT) 0) (P.C. = 74)
FUNCALL (P.C. = 25)
(:METHOD ZWEI#:DISPLAYER :AROUND :EDIT) (P.C. = 31)
(:METHOD ZWEI#:ZWEI-WINDOW-PANE :COMBINED :EDIT) (P.C. = 47)
(:METHOD ZWEI#:ZWEI-FRAME :EDIT) (P.C. = 33)
ZWEI#:CONVERSE-WINDOW-TOP-LEVEL (P.C. = 24)
SI#:PROCESS-TOP-LEVEL (P.C. = 152)
16-Dec-83 07:12:47-EST,4140;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 16 Dec 83 07:12-EST
Date: Friday, 16 December 1983, 06:46-EST
From: Robert P. Krajewski <RpK at MIT-OZ>
Subject: Using FC
To: BUG-LISPM-MIT at MIT-OZ

In Inconsistently updated System 98.8, CADR 3.1,
Experimental ZMail 53.5, MIT-Specific 22.0, microcode 305, ZM MIT,
on Lisp Machine Twenty-five:


I tried to write a file to FC.  Out of several attempts before to read
files, only one succeeded.

>>ERROR: Attempt to read file command reply from #<CHAOS Connection to MIT-LISPM-27 FILE 1 12443305>,
a connection which has been closed by foreign host.
Backtrace from the debugger:

FS:FILE-WAIT-FOR-TRANSACTION (P.C. = 105)

 Arg 0 (TID): "T1067"
 Arg 1 (CONN): #<CHAOS Connection to MIT-LISPM-27 FILE 1 12443305>
 Arg 2 (WHOSTATE): "Open-for-lispm"
Local 0 (ID): ("T1067" NIL NIL)


Additional information supplied with call:
 Expecting 3 values

(:METHOD FS:HOST-UNIT :COMMAND) (P.C. = 251)
  (SELF is #<HOST-UNIT 12502136>)

 Arg 0 (OPERATION): :COMMAND
 Arg 1 (MARK-P): NIL
 Arg 2 (STREAM-OR-HANDLE): NIL
 Arg 3 (SIMPLE-P): NIL
 Rest arg (COMMANDS): ("OPEN-FOR-LISPM " 141. "FC: rpk; rev2#>" 141. ...)
Local 1 (HANDLE): NIL
Local 2 (STREAM): NIL
Local 3 (PKT): #S(CHAOS:PKT :PKT-OPCODE-LEFT-JUSTIFIED 768. :PKT-OPCODE ...)
Local 4 (TRANSACTION-ID): "T1067"
Local 5 (SUCCESS): NIL
Local 6 (WHOSTATE): "Open-for-lispm"
Local 7 (STRING): NIL
Local 8 (STRING): "Server error"
Local 9 (FROM): 6.
Local 10 (I): 14.
Local 11 (LEN): 14.


FS:OPEN-CHAOS (P.C. = 1000)

 Arg 0 (HOST): #FS:LMFILE-CHAOS-HOST "FC"
 Arg 1 (PATHNAME): #FS:LMFILE-PATHNAME "FC: rpk; rev2#>"
 Rest arg (OPTIONS): (:CHARACTERS T :DIRECTION NIL ...)
Local 1 (DIRECTION): NIL
Local 2 (CHARACTERS): T
Local 3 (ERROR): NIL
Local 4 (ACCESS-ERROR): T
Local 5 (ELEMENT-TYPE): STRING-CHAR
Local 6 (IF-EXISTS): :NEW-VERSION
Local 7 (IF-DOES-NOT-EXIST): :ERROR
Local 8 (TEMPORARY): NIL
Local 9 (DELETED): NIL
Local 10 (RAW): NIL
Local 11 (SUPER-IMAGE): NIL
Local 12 (BYTE-SIZE): :DEFAULT
Local 13 (PRESERVE-DATES): NIL
Local 14 (IGNORE): NIL
Local 15 (ELEMENT-TYPE-P): NIL
Local 16 (IF-EXISTS-P): NIL
Local 17 (HOST-UNIT): #<HOST-UNIT 12502136>
Local 18 (DATA-CONN): NIL
Local 19 (PKT): NIL
Local 20 (SUCCESS): NIL
Local 21 (STRING): NIL
Local 22 (NOT-ABORTED): NIL
Local 23 (PHONY-CHARACTERS): NIL
Local 24 (SIGN-EXTEND-BYTES): NIL
Local 25 (ERROR-OBJECT): #<HOST-UNIT 12502136>
Local 26: (NIL NIL NIL NIL ...)
Local 27: (NIL 162. . 5242880.)
Local 28: NIL
Local 29: NIL
Local 30 (*SELECTQ-ITEM*): NIL
Local 31 (PROPERTIES): NIL
Local 32 (CLOSE-SUCCESS): NIL
Local 33 (ERROR-OBJECT): NIL
Local 34 (IGNORE): NIL


(:METHOD FS:CHAOS-PATHNAME :OPEN) (P.C. = 31)
  (SELF is #FS:LMFILE-PATHNAME "FC: rpk; rev2#>")

 Arg 0 (OPERATION): :OPEN
 Arg 1 (PATHNAME): #FS:LMFILE-PATHNAME "FC: rpk; rev2#>"
 Rest arg (OPTIONS): (:CHARACTERS T :DIRECTION NIL ...)


OPEN (P.C. = 542)

 Arg 0 (FILENAME): #FS:LMFILE-PATHNAME "FC: rpk; rev2#>"
 Rest arg (KEYWORD-ARGS): ((:PROBE :ASCII))
Local 1: ((** SI:FILE-RETRY-HANDLER #FS:LMFILE-PATHNAME "FC: rpk; rev2#>"))
Local 2: ((FS:FILE-ERROR) SI:FILE-RETRY-HANDLER #FS:LMFILE-PATHNAME "FC: rpk; rev2#>")
Local 3 (NEW-PATHNAME): NIL
Local 4 (KEYL): NIL
Local 5 (KEY): :ASCII
Local 6 (CHARACTERS): T
Local 7 (DIRECTION): NIL
Local 8 (BYTE-SIZE): NIL
Local 9 (ERROR-P): NIL
Local 10 (ERROR-P-SPECD): T
Local 11 (DELETED-P): NIL
Local 12 (TEMPORARY-P): NIL
Local 13 (RAW-P): NIL
Local 14 (SUPER-IMAGE-P): NIL


Remainder of stack:

ZWEI:SAVE-BUFFER (P.C. = 112)
ZWEI:COM-SAVE-FILE (P.C. = 61)
ZWEI:COMMAND-EXECUTE (P.C. = 115)
ZWEI:MAKE-EXTENDED-COMMAND-INTERNAL (P.C. = 72)
ZWEI:COMMAND-EXECUTE (P.C. = 115)
ZWEI:PROCESS-COMMAND-CHAR (P.C. = 65)
(:METHOD ZWEI:WINDOW :EDIT) (P.C. = 464)
(:INTERNAL (:METHOD ZWEI:ZMACS-WINDOW :COMBINED :EDIT) 0.) (P.C. = 74)
FUNCALL (P.C. = 25)
(:METHOD ZWEI:DISPLAYER :AROUND :EDIT) (P.C. = 31)
(:METHOD ZWEI:ZMACS-WINDOW :COMBINED :EDIT) (P.C. = 47)
ZWEI:ZMACS-WINDOW-TOP-LEVEL (P.C. = 46)
SI:PROCESS-TOP-LEVEL (P.C. = 152)
17-Dec-83 07:56:15-EST,2586;000000000000
Received: from MIT-XX by MIT-OZ via Chaosnet; 17 Dec 83 07:56-EST
Date: Saturday, 17 December 1983, 06:24-EST
From: Gavan Duffy <GAVAN at MIT-OZ>
Subject: Error printing value of flavor object.
To: BUG-LISPM at MIT-OZ

In Release 5.0 [GC'd Beta Test rev 3], Experimental RELATUS 60.1,
dusty plum, on Lisp Machine Robot-4 (3600):

I did (defflavor foo () ()) and (make-instance 'foo) and this is what I got.
Objects were printing fine a few minutes ago.  All I did after the last time
an object printed successfully is called undefmethod on a flavor having
nothing to do with this.  What could I have bashed?

>>Error: The symbol NIL has an invalid function definition
While in the function NIL  SI:PRINT-OBJECT  PRIN1

NIL:
   Arg 0: <<Error printing value>>
   Arg 1: SI:VANILLA-FLAVOR
   Arg 2: :PRINT-SELF
   Arg 3: #<DTP-COMPILED-FUNCTION SI:GRIND-PRINT-IO 7215641>
   Arg 4: 0.
   Arg 5: T
   Local 0: <<Error printing value>>
   Local 1: SI:VANILLA-FLAVOR

SI:PRINT-OBJECT:  (P.C. = 342)
   Arg 0 (EXP): <<Error printing value>>
   Arg 1 (I-PRINDEPTH): 0.
   Arg 2 (SLASHIFY-P): T
   Arg 3 (STREAM): #<DTP-COMPILED-FUNCTION SI:GRIND-PRINT-IO 7215641>
   --Defaulted args:--
   Arg 4 (WHICH-OPERATIONS): (:TYO)

PRIN1:  (P.C. = 10)
   Arg 0 (EXP): <<Error printing value>>
   Arg 1 (STREAM): #<DTP-COMPILED-FUNCTION SI:GRIND-PRINT-IO 7215641>

SI:GRIND-ATOM:  (P.C. = 41)
   Arg 0 (ATOM): <<Error printing value>>
   Arg 1 (STREAM): #<DTP-COMPILED-FUNCTION SI:GRIND-PRINT-IO 7215641>
   Arg 2 (LOC): (<<Error printing value>>

GRIND-TOP-LEVEL:  (P.C. = 64)
   Arg 0 (EXP): <<Error printing value>>
   --Defaulted args:--
   Arg 1 (GRIND-WIDTH-initialization): NIL
   Arg 2 (GRIND-REAL-IO-initialization): #:TERMINAL-IO-SYN-STREAM
   Arg 3 (GRIND-UNTYO-P-initialization): NIL
   Arg 4 (GRIND-DISPLACED-initialization): SI:DISPLACED
   Arg 5 (TERPRI-P): T
   Arg 6 (GRIND-NOTIFY-FUN-initialization): NIL
   Arg 7 (LOC): (<<Error printing value>>

SI:LISP-COMMAND-LOOP-PRINT-FUNCTION:  (P.C. = 6)
   Arg 0 (VALUE): <<Error printing value>>

SI:LISP-COMMAND-LOOP-INTERNAL:  (P.C. = 237)
   Rest arg: (:NAME "Lisp Top Level in Lisp Listener 1" :ABORTED-FUNCTION NIL :BEFORE-PROMPT-FUNCTION NIL :READ-FUNCTION NIL :EVAL-FUNCTION NIL ...)

SI:LISP-COMMAND-LOOP:  (P.C. = 115)
   Arg 0 (STREAM): #<LISP-LISTENER Lisp Listener 1 2300000 exposed>
   Rest arg: (:NAME "Lisp Top Level in Lisp Listener 1")

Rest of stack:
SI:LISP-TOP-LEVEL1:  (P.C. = 22)
SI:LISP-TOP-LEVEL2:  (P.C. = 5)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
17-Dec-83 18:34:54-EST,4040;000000000000
Received: from MIT-XX by MIT-OZ via Chaosnet; 17 Dec 83 18:34-EST
Date: Saturday, 17 December 1983, 18:35-EST
From: Kent M Pitman <kmp at MIT-MC>
Subject: Implementation details for Temporary Marks in ZWEI
To: BUG-LISPM at MIT-OZ
Cc: KBE-I at MIT-MC
References: Your message,
            The message of 15 Dec 83 21:08-EST from sr.ehpyc at MIT-SPEECH,
            The message of 16 Dec 83 14:50-EST from SWM at SCRC-VIXEN

In Release 4.5 and Release 5.0,...

I looked in more detail at the idea of "temporary regions" in ZWEI.
It turns out to be pretty easy to do the marking upward compatibly.

I made some patches (explained in detail below) and tried it and it seems to
have a very pleasant effect for the application I mentioned in my previous note.

I was unable to determine from the time I spent reading the code
whether inverting the style of the region's display style (inverse-video
vs underline) was also easy. It looked like it might be trickier to
get right, so I punted on that point for now.

The following is a description of how to patch ZWEI to implement the change...

Background:

    Allow the WINDOW-MARK-P flag on a window to take on other values
    than T or NIL. Only ZWEI:PROCESS-COMMAND-CHAR should ever read these
    for anything other than boolean value, so these new states should
    be treated the same as T by other functions. This is what makes it
    an upward-compatible change. 
    
    The new values possible for WINDOW-MARK-P are:
     :TEMPORARY  The mark in this window should be flushed after the next command
		 unless some other command says otherwise in the meantime.
     :FLUSH      The mark in this window will be flushed after this command
		 that is now executing unless code later in this same command
		 says otherwise.

Essential:

    The following change to ZWEI:PROCESS-COMMAND-CHAR implements the entire
    essential functionality:

(DEFUN PROCESS-COMMAND-CHAR (CH &AUX VALUE LINE INDEX)
  (SETQ *LAST-COMMAND-CHAR* CH)
  ;; Look up the command in the table.
  (LET ((*CURRENT-COMMAND* (COMMAND-LOOKUP *LAST-COMMAND-CHAR* *COMTAB*)))
    ;; Execute the command.
    (MULTIPLE-VALUE (VALUE LINE INDEX)
      (COMMAND-EXECUTE *CURRENT-COMMAND* *LAST-COMMAND-CHAR* NIL *COMMAND-HOOK*))
    ;; This command is creating the argument to a subsequent command.
    (COND ((EQ VALUE ':ARGUMENT)
	   VALUE)
	  (T
	   ;; If the mark is not being preserved, make it go away.
	   (COND ((OR (AND (NOT *MARK-STAYS*) (WINDOW-MARK-P *WINDOW*))
	              ;; Ignore *MARK-STAYS* if this was a temporary mark.
		      (EQ (WINDOW-MARK-P *WINDOW*) ':FLUSH))
		  (SETF (WINDOW-MARK-P *WINDOW*) NIL)
		  (MUST-REDISPLAY *WINDOW* DIS-MARK-GOES))
		 ((EQ (WINDOW-MARK-P *WINDOW*) ':TEMPORARY) ;state-machine effect
	          ;; Set up to have this temporary mark flushed next time.
		  (SETF (WINDOW-MARK-P *WINDOW*) ':FLUSH)))
	   ;; Report the returned value of the command to the window.
	   (MUST-REDISPLAY *WINDOW* VALUE LINE INDEX)
	   ;; Call the post-command hooks
	   (DOLIST (HOOK *POST-COMMAND-HOOK*) (FUNCALL HOOK *LAST-COMMAND-CHAR*))))))

Optional extras:

    Probably ZWEI:PROCESS-COMMAND-OPTIONS should be changed to add 

      (STM (SETF (WINDOW-MARK-P *WINDOW*) ':TEMPORARY) (SETQ *MARK-STAYS* T))

    to the alist of command options, so that STM can be used like SM in DEFCOM
    to say the command sets a temporary mark. Such a change makes everything fit
    together more gracefully but is not an essential component of the functionality.

Example (assumes the STM feature is implemented):

(defcom com-show-next-sexp "Temporarily puts a region around the expression after the cursor.
The region established by this command will available for the next command only, 
although that command may opt to make the region more permanent. (For example, the
command Swap Point And Mark will make a temporary region permanent.)" (stm)
   (move-bp (mark) (forward-sexp (point)))
   dis-bps)

17-Dec-83 19:40:19-EST,683;000000000000
Received: from SCRC-TENEX by MIT-OZ via Chaosnet; 17 Dec 83 19:39-EST
Received: from SCRC-EUPHRATES by SCRC-TENEX with CHAOS; Sat 17-Dec-83 19:40:45-EST
Date: Saturday, 17 December 1983, 19:44-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: Implementation details for Temporary Marks in ZWEI
To: Kent M Pitman <kmp at MIT-MC>
Cc: BUG-LISPM at MIT-OZ, KBE-I at MIT-MC
In-reply-to: The message of 17 Dec 83 18:35-EST from Kent M Pitman <kmp at MIT-MC>

I'd prefer to see this done in connection with a generalization so that Point
need not be at one end of the Region.  There are several things that are
clumsy now because of that restriction (left over from Emacs).
18-Dec-83 15:29:06-EST,3215;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 18 Dec 83 15:28-EST
Date: 18 December 1983 14:12 EST
From: Kent M Pitman <KMP @ MIT-MC>
Subject: Local Modes, Narrow Buffer Bounds, ...
To: BUG-LISPM @ MIT-MC

From time to time, people come to me asking for help with their Emacs
environment and it's usually not very hard because Emacs has a wealth of
really great hooks in it, but then they ask if they can get the same
functionality in ZWEI and I usually have to reply sadly "Not that I know
of".

Specifically, it occurs to me at the moment to mention that ZWEI
does not address the following to important issues that Emacs gets
great mileage out of:

 * Local Modes

   Customizing indentation is an example. The ability in Emacs to say
   ;;; Local Modes:
   ;;; Lisp FOO Indent:2;
   ;;; End:
   to say that FOO forms are to be treated locally in one file as if 
   you had done
    (DEFMACRO FOO (FORM1 FORM2 &BODY MORE-FORMS) ...)
   is unmatched on the LispM even today.

   Local key bindings is another important case.

   However, even if there were a similarly convenient way of doing
   this couple of cases, the fact that certain bindings would be in effect
   for DEFCOMs operating when the current buffer was a given buffer is
   something that is a great tool for user customization all on its own.

 * Narrow buffer boundaries

   The ability to narrow buffer bounds and run certain buffer commands
   only on that local scope is very handy interactively.

   Further, I think that major subsystems could make interesting use of 
   this. RMail/Babyl, for example, work by narrowing the buffer bounds on
   messages but keeping the messages stored as a contiguous structure. This
   makes it easy for the user to edit one or many messages in a 
   straightforward way. In fact, the only problem RMail/Babyl have with
   this formalism is that all buffer pointers are simple character counts
   and you lose track of which messages start where very rapidly if you 
   modify the buffer. In a ZWEI-style environment, where buffer pointers can
   move dynamically, you could imagine going forward/back messages by just
   traversing nodes (as do possibilities buffers). I think ZMail would be
   better off living as this sort of integrated part of normal ZWEI rather
   than using its own complicated and non-user-inspectable data structures
   for message connectivitiy. Another example is converse. One could imagine
   wanting to narrow the buffer bounds to a conversation or message for some
   applications. 

   I agree this could be hard to do, but I think it would be worth 
   thinking out. The obvious problem is for buffer motion commands (especially
   things like meta-. which do absolute gotos) to know if they are inside
   the bounds or not. If you constrained the narrow bounds to follow the 
   shape of the pre-existing node structure, then you could just check a line's
   node's superior(s) to see if in a given buffer, you were inside an active node.

Well, anyway, these are just ideas that have been in the air here for a while
that I thought I should record. I hope they may sometime be useful to someone.
-kmp
18-Dec-83 15:37:14-EST,1378;000000000000
Mail-From: KMP created at 18-Dec-83 15:36:33
Date: Sun 18 Dec 83 15:36:33-EST
From: KMP@MIT-OZ
Subject: Re: Implementation details for Temporary Marks in ZWEI
To: Moon@SCRC-TENEX
cc: BUG-LISPM@MIT-OZ, KBE-I@MIT-OZ
In-Reply-To: Message from ""David A. Moon" <Moon%SCRC-TENEX@MIT-MC.ARPA>" of Sun 18 Dec 83 14:08:33-EST

I agree that detaching the point from the region would address many of the
same issues since I could then set a region around the marked item and leave
the point near the region without worrying the point as going to drag the
region when moved. There are a lot of odd implications of such a region-marking
strategy that I suspect will take time to tune.

However, since temporary marks will allow people to experiment with a subset
of the same issues immediately, I think it's worth adding the feature even if
you say it is an interim measure which may go away upon more thought. 

In either case, I'm going to make this a private patch to the KBE. If the
system maintainers took on maintenance of that feature until they had something
better to offer, that would be my preference, however.

By the way, with respect to patching things, ZWEI:PROCESS-COMMAND-OPTIONS
should have that alist in a variable even if you don't document the fact.
It would make patching it to experiment with new options a lot easier to
do safely.
-------
18-Dec-83 16:39:57-EST,1516;000000000000
Received: from MIT-APIARY-4 by MIT-OZ via Chaosnet; 18 Dec 83 16:39-EST
Date: Sunday, 18 December 1983, 16:42-EST
From: Kent M Pitman <KMP at MIT-OZ>
Reply-to: KMP at MIT-MC
Subject: Space and Backspace
To: BUG-LISPM at MIT-OZ
Cc: KMP at MIT-MC

In Release 4.5 (CADR) and Release 5.0-3 (3600) ...

A bunch of little things...

* m-X Set VariableBlanks  in Zmacs tells me that the initial
  setting for this variable is BLANK, TAB, and BACKSPACE. 

  BLANK has never been a valid name for Space, so far as I know.
  This seems kind of random. Probably you should use ~:C to
  display the character names so that they keep up to date
  with changing naming conventions for keys.

* Why does (FORMAT T "~@:C" #\BS) tell me (Symbol-|) afterward?
  My intuitive model of ~@:C is that it should be used when you
  think the char might be hard to type and the user might need
  help. However, Backspace is easy to type because it has its 
  very own key, and the additional remark only serves to confuse.
  This might violate the contract for ~@:C if it is claimed 
  in current doc to output help info if a char with bucky bits
  "can be" typed to get this, but if so the contract should be
  that such info will be output only if such a char "must be"
  typed as a bucky-shifted char.

* By the way, I greatly dislike seeing Back-Space as a name
  for a character. I would rather it be called Backspace. 
  Is anything really gained from this seemingly gratuitous 
  change?

-kmp
19-Dec-83 16:44:24-EST,485;000000000000
Received: from MIT-APIARY-4 by MIT-OZ via Chaosnet; 19 Dec 83 16:43-EST
Date: Monday, 19 December 1983, 16:44-EST
From: Kent M Pitman <KMP at MIT-OZ>
Subject: Casification in FORMAT's ~@C
To: BUG-LISPM at MIT-OZ

In Release 5.0 [GC'd Beta Test rev 3], corrected dusty plum, 
on Lisp Machine Apiary-4 (3600):

I find it very ugly that (FORMAT T "~@C" #\RETURN) types out #\Return 
and not #\RETURN. Especially now that SI:*PRINCASE* exists, it should
defer to that setting.
19-Dec-83 16:54:17-EST,1816;000000000000
Received: from MIT-APIARY-4 by MIT-OZ via Chaosnet; 19 Dec 83 16:53-EST
Date: Monday, 19 December 1983, 16:55-EST
From: Kent M Pitman <KMP at MIT-OZ>
Subject: Issues arising from having done (SETQ SI:*PRINCASE* ':LOWERCASE)
To: BUG-LISPM at MIT-OZ

In Release 5.0 [GC'd Beta Test rev 3], corrected dusty plum, 
on Lisp Machine Apiary-4 (3600):

For a good laugh, go to a Lisp Listener and do 
   (SETQ SI:*PRINCASE* ':LOWERCASE)
See how many recursive error handlers get consed before you
get a chance to pull your foot out of your mouse and do
   (SETQ SI:*PRINCASE* ':DOWNCASE)
like you probably "meant" to do the first time. 

Don't be afraid -- it will eventually give you an error handler
that lets you correct the fault ... and you can even type Abort
all the error handlers it conses along the way and get back into
the Lisp Listener.

On the other hand, since
   (SETQ BASE 'THREE SOMETHING 7)
prints a nice error message saying that a BASE of THREE is 
meaningless, it certainly seems reasonable to think that the
thing looking at the value of SI:*PRINCASE* should do likewise...

Actually, how come there aren't properties on switch variables like this
saying what kinds of values they are suppposed to take on?  ie,
shouldn't there be the equivalent of Zmail profile mode for the main
Lisp environment so that I could change the value of variables like this
in a "safe" way instead of guessing at the possible set of values? Not
having release notes nearby, I finally had to m-. the source to see that
I had to use :DOWNCASE instead of :LOWERCASE. Agreed that online doc 
(a la Sage) will help, but even then you can have typos (and in this 
case that's severe), so something like a CHOOSE-VARIABLE-VALUES interface
still seems an important thing to be arranging for.
19-Dec-83 17:01:51-EST,816;000000000000
Received: from SCRC-TENEX by MIT-OZ via Chaosnet; 19 Dec 83 17:01-EST
Received: from SCRC-EUPHRATES by SCRC-TENEX with CHAOS; Mon 19-Dec-83 17:01:43-EST
Date: Monday, 19 December 1983, 17:06-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: Casification in FORMAT's ~@C
To: Kent M Pitman <KMP at MIT-OZ>
Cc: BUG-LISPM at MIT-OZ
In-reply-to: The message of 19 Dec 83 16:44-EST from Kent M Pitman <KMP at MIT-OZ>

    Date: Monday, 19 December 1983, 16:44-EST
    From: Kent M Pitman <KMP at MIT-OZ>

    In Release 5.0 [GC'd Beta Test rev 3], corrected dusty plum, 
    on Lisp Machine Apiary-4 (3600):

    I find it very ugly that (FORMAT T "~@C" #\RETURN) types out #\Return 
    and not #\RETURN. Especially now that SI:*PRINCASE* exists, it should
    defer to that setting.

I disagree.
19-Dec-83 17:05:55-EST,920;000000000000
Received: from MIT-APIARY-4 by MIT-OZ via Chaosnet; 19 Dec 83 17:04-EST
Date: Monday, 19 December 1983, 17:05-EST
From: Kent M Pitman <KMP at MIT-OZ>
Subject: Naming of variables in m-X Set Variable
To: BUG-LISPM at MIT-OZ

In Release 5.0 [GC'd Beta Test rev 3], corrected dusty plum, on Lisp Machine Apiary-4 (3600):

I do not like the name of the ZWEI option variable *CASE-REPLACE-P*. 
It shows up in m-X Set Variable as just Case Replace P, which looks
very wierd. It would look slightly less wierd if it came out as 
Case Replace-P (which is probably hard), but I think in that since it
will probably be seen by non Lisp programmers, it should probably be
just Case Replace Option or something that will not look like the 
name was somehow prematurely truncated.

Also, is there a reason that the variable *PL1-INDING-STYLE* is 
not called *PL1-INDENTING-STYLE* or *PL1-INDENTATION-STYLE* ?
-kmp
19-Dec-83 19:12:08-EST,2487;000000000000
Received: from SCRC-TENEX by MIT-OZ via Chaosnet; 19 Dec 83 19:11-EST
Received: from SCRC-EUPHRATES by SCRC-TENEX with CHAOS; Mon 19-Dec-83 19:11:41-EST
Date: Monday, 19 December 1983, 19:16-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: Issues arising from having done (SETQ SI:*PRINCASE* ':LOWERCASE)
To: Kent M Pitman <KMP at MIT-OZ>
Cc: BUG-LISPM at MIT-OZ
In-reply-to: The message of 19 Dec 83 16:55-EST from Kent M Pitman <KMP at MIT-OZ>

    Date: Monday, 19 December 1983, 16:55-EST
    From: Kent M Pitman <KMP at MIT-OZ>

    In Release 5.0 [GC'd Beta Test rev 3], corrected dusty plum, 
    on Lisp Machine Apiary-4 (3600):

    For a good laugh, go to a Lisp Listener and do 
       (SETQ SI:*PRINCASE* ':LOWERCASE)
    See how many recursive error handlers get consed before you
    get a chance to pull your foot out of your mouse and do
       (SETQ SI:*PRINCASE* ':DOWNCASE)
    like you probably "meant" to do the first time. 

    Don't be afraid -- it will eventually give you an error handler
    that lets you correct the fault ... and you can even type Abort
    all the error handlers it conses along the way and get back into
    the Lisp Listener.

SI:*PRINCASE* should not have been documented.  Too late now, I guess.

    On the other hand, since
       (SETQ BASE 'THREE SOMETHING 7)
    prints a nice error message saying that a BASE of THREE is 
    meaningless, it certainly seems reasonable to think that the
    thing looking at the value of SI:*PRINCASE* should do likewise...

Basically what you're reporting is that the princase feature is only half implemented
(only the easy half).

    Actually, how come there aren't properties on switch variables like this
    saying what kinds of values they are suppposed to take on?  ie,
    shouldn't there be the equivalent of Zmail profile mode for the main
    Lisp environment so that I could change the value of variables like this
    in a "safe" way instead of guessing at the possible set of values? Not
    having release notes nearby, I finally had to m-. the source to see that
    I had to use :DOWNCASE instead of :LOWERCASE. Agreed that online doc 
    (a la Sage) will help, but even then you can have typos (and in this 
    case that's severe), so something like a CHOOSE-VARIABLE-VALUES interface
    still seems an important thing to be arranging for.

This is the right thing.  Maybe someday we'll be able to do things like this.
19-Dec-83 19:48:08-EST,1498;000000000000
Received: from SCRC-TENEX by MIT-OZ via Chaosnet; 19 Dec 83 19:47-EST
Received: from SCRC-CUYAHOGA by SCRC-TENEX with CHAOS; Mon 19-Dec-83 19:46:41-EST
Date: Monday, 19 December 1983, 19:51-EST
From: Robert A. Cassels <Cassels at SCRC-TENEX>
Subject: Issues arising from having done (SETQ SI:*PRINCASE* ':LOWERCASE)
To: ROM at SCRC-TENEX, Doc at SCRC-TENEX, Moon at SCRC-TENEX,
    KMP at MIT-OZ
Cc: BUG-LISPM at MIT-OZ
In-reply-to: The message of 19 Dec 83 19:16-EST from David A. Moon <Moon at SCRC-TENEX>

    Date: Monday, 19 December 1983, 19:16-EST
    From: David A. Moon <Moon at SCRC-TENEX>

	Date: Monday, 19 December 1983, 16:55-EST
	From: Kent M Pitman <KMP at MIT-OZ>

	In Release 5.0 [GC'd Beta Test rev 3], corrected dusty plum, 
	on Lisp Machine Apiary-4 (3600):

	For a good laugh, go to a Lisp Listener and do 
	   (SETQ SI:*PRINCASE* ':LOWERCASE)
	See how many recursive error handlers get consed before you
	get a chance to pull your foot out of your mouse and do
	   (SETQ SI:*PRINCASE* ':DOWNCASE)
	like you probably "meant" to do the first time. 

	Don't be afraid -- it will eventually give you an error handler
	that lets you correct the fault ... and you can even type Abort
	all the error handlers it conses along the way and get back into
	the Lisp Listener.

    SI:*PRINCASE* should not have been documented.  Too late now, I guess.

As far as I know, it's only in the Release 5 Beta-test documentation.
Is it too late to remove it?
19-Dec-83 21:21:06-EST,1346;000000000000
Received: from SCRC-TENEX by MIT-OZ via Chaosnet; 19 Dec 83 21:20-EST
Date: 19 Dec 1983 21:16-EST
Sender: JWALKER@SCRC-TENEX
Subject: Re: Issues arising from having done (SETQ SI:*PRINCASE* ':LO...
From: Jan Walker <JWALKER@SCRC-TENEX>
To: Moon@SCRC-TENEX
Cc: writers@SCRC-TENEX, KMP@MIT-OZ, BUG-LISPM@MIT-OZ
Message-ID: <[SCRC-TENEX]19-Dec-83 21:16:29.JWALKER>
In-Reply-To: The message of Monday, 19 December 1983, 19:16-EST from David A. Moon <Moon at SCRC-TENEX>

    Date: Monday, 19 December 1983, 19:16-EST
    From: David A. Moon <Moon at SCRC-TENEX>
        Date: Monday, 19 December 1983, 16:55-EST
        From: Kent M Pitman <KMP at MIT-OZ>
    
        In Release 5.0 [GC'd Beta Test rev 3], corrected dusty plum, 
        on Lisp Machine Apiary-4 (3600):
    
        For a good laugh, go to a Lisp Listener and do 
           (SETQ SI:*PRINCASE* ':LOWERCASE)
    
    SI:*PRINCASE* should not have been documented.  Too late now, I guess.

I don't see why it is too late.  Isn't this what beta-test is
for?  Finding errors of omission AND commission!  Unhooking it
from the active documentation is pretty simple.  Except for a few
people who noticed it at beta-test sites, no one will be the
wiser.  It is always true that customers can find our half-baked
ideas in the source anyhow if they go poking.
19-Dec-83 22:53:21-EST,635;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 19 Dec 83 22:52-EST
Date: Monday, 19 December 1983, 22:52-EST
From: Edward H Lay <EHL at OZ>
Subject: %draw-line side effects
To: BUG-LISPM at OZ

In Release 4.5, site configuration 60, on Lisp Machine Joe Louis:

sys:%draw-line doesn't seem to work right on arrays

at least in the following example...

(SETQ SOME-ARRAY (TV:MAKE-SHEET-BIT-ARRAY *SOME-SHEET* 320 200
					  ':LEADER-LIST '(320)))

(ARRAY-LEADER SOME-ARRAY 0) returns 320

however, after doing...

(SYS:%DRAW-LINE 317 0 314 8 TV:ALU-XOR NIL SOME-ARRAY)

(ARRAY-LEADER SOME-ARRAY 0) returns 536871232
20-Dec-83 10:52:44-EST,1140;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 20 Dec 83 10:52-EST
Received: from SCRC-CHICOPEE by SCRC-QUABBIN with CHAOS; Tue 20-Dec-83 10:58:59-EST
Date: Tuesday, 20 December 1983, 10:56-EST
From: Daniel L. Weinreb <DLW at SCRC-TENEX>
Subject: Issues arising from having done (SETQ SI:*PRINCASE* ':LOWERCASE)
To: KMP at MIT-OZ, BUG-LISPM at MIT-OZ
In-reply-to: The message of 19 Dec 83 16:55-EST from Kent M Pitman <KMP at MIT-OZ>

I changed the source of the printer so that when it detects an invalid
*PRINCASE* value, it will set back *PRINCASE* to :UPCASE and tell you
what the old value was and what was done about it.  This seems to me the
best user interface, to prevent infinite recursive errors when you set
*PRINCASE* to something wrong.  I don't see what any of this has to do
with not documenting *PRINCASE*, since it is certainly documented in the
Common Lisp manual (under its Common Lisp name) and is intended to be a
user-visible feature in Common Lisp, and the same problem comes up
equally in the context of Common Lisp.  If soft-maint wants to patch this,
the function is si:print-cased-string.
20-Dec-83 13:58:28-EST,856;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 20 Dec 83 13:57-EST
Date:  Monday, 19 December 1983 23:02 est
From:  "Barry Margolin"@MIT-MULTICS.ARPA
Subject:  Re: Naming of variables in m-X Set Variable
To:  Kent M Pitman <KMP%MIT-OZ@MIT-MC.ARPA>
cc:  BUG-LISPM%MIT-OZ@MIT-MC.ARPA
In-Reply-To:  Message of 19 December 1983 17:05 est from "Kent M Pitman"
Message-ID:  <831220040250.844998@MIT-MULTICS.ARPA>

    Date:  19 December 1983 17:05 est
    From:  Kent M Pitman <KMP%MIT-OZ at MIT-MC>
    Subject:  Naming of variables in m-X Set Variable

    Also, is there a reason that the variable *PL1-INDING-STYLE* is
    not called *PL1-INDENTING-STYLE* or *PL1-INDENTATION-STYLE* ?
    -kmp

Because this code was ripped off from Multics Emacs, and that is what
Bernie called the Emacs option.  Be happy you don't have
rdis-wosclr-opt!
20-Dec-83 14:20:14-EST,1001;000000000000
Received: from SCRC-YUKON by MIT-OZ via Chaosnet; 20 Dec 83 14:19-EST
Received: from SCRC-CONCORD by SCRC-YUKON with CHAOS; Tue 20-Dec-83 14:23:42-EST
Date: Tuesday, 20 December 1983, 14:23-EST
From: Bernard S. Greenberg <BSG at SCRC-TENEX>
Subject: Re: Naming of variables in m-X Set Variable
To: Barry Margolin at MIT-MULTICS, KMP at MIT-OZ
Cc: BUG-LISPM at MIT-OZ
In-reply-to: <831220040250.844998@MIT-MULTICS.ARPA>

    Date:  Monday, 19 December 1983 23:02 est
    From:  "Barry Margolin"@MIT-MULTICS.ARPA

	Date:  19 December 1983 17:05 est
	From:  Kent M Pitman <KMP%MIT-OZ at MIT-MC>
	Subject:  Naming of variables in m-X Set Variable

	Also, is there a reason that the variable *PL1-INDING-STYLE* is
	not called *PL1-INDENTING-STYLE* or *PL1-INDENTATION-STYLE* ?
	-kmp

    Because this code was ripped off from Multics Emacs, and that is what
    Bernie called the Emacs option.  Be happy you don't have
    rdis-wosclr-opt!
The Multics PL/I grinder was named "ind".
20-Dec-83 16:18:29-EST,1314;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 20 Dec 83 16:16-EST
Received: from SCRC-AMAZON by SCRC-QUABBIN with CHAOS; Tue 20-Dec-83 16:15:34-EST
Date: Tuesday, 20 December 1983, 16:15-EST
From: Philip Greenspun <philg at SCRC-QUABBIN>
Subject: %draw-line side effects
To: Edward H Lay <EHL at MIT-OZ>
Cc: BUG-LISPM at MIT-OZ, philg at SCRC-QUABBIN
In-reply-to: The message of 19 Dec 83 22:52-EST from Edward H Lay <EHL at MIT-OZ>

    Date: Monday, 19 December 1983, 22:52-EST
    From: Edward H Lay <EHL at OZ>

    In Release 4.5, site configuration 60, on Lisp Machine Joe Louis:

    sys:%draw-line doesn't seem to work right on arrays

    at least in the following example...

    (SETQ SOME-ARRAY (TV:MAKE-SHEET-BIT-ARRAY *SOME-SHEET* 320 200
					      ':LEADER-LIST '(320)))

    (ARRAY-LEADER SOME-ARRAY 0) returns 320

    however, after doing...

    (SYS:%DRAW-LINE 317 0 314 8 TV:ALU-XOR NIL SOME-ARRAY)

    (ARRAY-LEADER SOME-ARRAY 0) returns 536871232

Thanks for the detailed bug report.  This works in the latest software,
so you should see this fixed in Release 5.  It probably works in the
beta-test world (which should be on just about every 3600 at MIT), so if
this is causing you grief, why not be part of the beta test?

Thanks again,

Philip
21-Dec-83 08:04:30-EST,1093;000000000000
Received: from MIT-LISPM-1 by MIT-OZ via Chaosnet; 21 Dec 83 08:04-EST
Date: Wednesday, 21 December 1983, 08:04-EST
From: Kim A. Barrett <kab at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In Bad Inconsistently updated System 98.10, CADR 3.2,
Experimental ZMail 53.5, MIT-Specific 22.0, microcode 305, ZM MIT,
on Lisp Machine One:

when trying to compile files on FS:, keep losing the connection.  for example:

  (qc-file "fs:kab;math.lisp")
  >>ERROR: Attempt to read file command reply from #<CHAOS Connection to MIT-LISPM-27 FILE 1
    23174275>, a connection which has been closed by foreign host.
  While in the function FS:FILE-WAIT-FOR-TRANSACTION  (:METHOD FS:HOST-UNIT :COMMAND)
    FS:OPEN-CHAOS

  FS:FILE-WAIT-FOR-TRANSACTION: (P.C. = 105)
     Arg 0 (TID): "T1053"
     Arg 1 (CONN): #<CHAOS Connection to MIT-LISPM-27 FILE 1 23174275>
     Arg 2 (WHOSTATE): "Open-for-lispm"


this hasn't been a problem on system 97, and doesn't occur with all operations on system 98,
as I was able to read a file into zmacs, and write them back out.  also able to load files.
21-Dec-83 22:24:11-EST,1728;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 21 Dec 83 22:23-EST
Date: Wednesday, 21 December 1983, 22:29-EST
From: Kent M Pitman <KMP at OZ>
Subject: LOGOUT lossage
To: BUG-LISPM at OZ

In Release 4.5, ..., on Lisp Machine Frank Sinatra:

I got an error trying to do (LOGOUT).

I'm not sure what a DEFAULT-CHAOS-HOST is, but I'm a little suspicious
that this machine thinks its default chaos host is MIT-BING-CROSBY,
since Bing Crosby is the machine next to it and has never to my knowledge
been installed (in the sense of, for example, being able to talk to the 
network at all)...

>>Error: The object #<DEFAULT-CHAOS-HOST MIT-BING-CROSBY> received a HOST-UNITS 
         message, which went unclaimed.
The rest of the message was ()
While in the function FS:FILE-LOGIN  SI:*EVAL  INITIALIZATIONS

FS:FILE-LOGIN:  (P.C. = 12)
   Arg 0 (LOGIN-P): NIL
   Local 1: (#<DEFAULT-CHAOS-HOST MIT-BING-CROSBY>   ; presumably FS:*CHAOS-FILE-HOSTS*
             #<LISPM-CHAOS-HOST MIT-FRANK-SINATRA>
             #<LISPM-CHAOS-HOST MIT-ROCKY-GRAZIANO>
             #<LISPM-CHAOS-HOST MIT-JOE-LOUIS>
             #<LISPM-CHAOS-HOST MIT-GRIZZLY>
             #<LISPM-CHAOS-HOST MIT-TWEETY-PIE>
             #<LISPM-CHAOS-HOST MIT-MINNIE-MOUSE> 
             #<LISPM-CHAOS-HOST MIT-MICKEY-MOUSE>
             #<LISPM-CHAOS-HOST MIT-MERLIN>
             #<LISPM-CHAOS-HOST MIT-AVATAR> ...)
   Local 2 (HOST): #<DEFAULT-CHAOS-HOST MIT-BING-CROSBY>

SI:*EVAL:  (P.C. = 405)
   Arg 0 (FORM): (FS:FILE-LOGIN NIL)

INITIALIZATIONS:  (P.C. = 42)
   Arg 0 (LIST-NAME): SI:LOGOUT-INITIALIZATION-LIST
   --Defaulted args:--
   Arg 1 (REDO-FLAG): NIL
   Arg 2 (FLAG): T

LOGOUT:  (P.C. = 6)

...etc.
21-Dec-83 23:15:32-EST,2954;000000000000
Received: from MIT-MOON by MIT-OZ via Chaosnet; 21 Dec 83 23:15-EST
Date: Wednesday, 21 December 1983, 23:15-EST
From: Ken Haase <KWH at MIT-OZ>
Subject: Bug in printing from ZMail
To: BUG-LISPM at MIT-OZ

In Release 5.0 [GC'd Beta Test rev 3], dusty plum, on Lisp Machine Keith Moon (3600):

This happened while printing a set of messages out from ZMail.

>>Error: Cannot coerce 2649902962. into a string
While in the function STRING  (:DEFUN-METHOD PRESS:ENTITY-BCPL-STRING)  PRESS:ENTITY-BCPL-STRING

STRING:  (P.C. = 114)
   Arg 0 (X): 2649902962.
   Local 1 (STR): "Cannot coerce ~S into a string"

(:DEFUN-METHOD PRESS:ENTITY-BCPL-STRING):  (P.C. = 4)
   Arg 0 (SELF): #<PRESS-STREAM 33754377>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor PRESS:PRESS-STREAM -- 32. IV's, 4. FL's 21007704>
   Arg 2 (STRING): 2649902962.
   Arg 3 (NBYTES): 40.

PRESS:ENTITY-BCPL-STRING:  (P.C. = 12)
   Rest arg (ARGS): (2649902962. 40.)

(:METHOD PRESS:PRESS-STREAM :BEFORE :CLOSE):  (P.C. = 571)
   Arg 0 (SELF): #<PRESS-STREAM 33754377>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor PRESS:PRESS-STREAM -- 32. IV's, 4. FL's 21007704>
   Arg 2 (OPERATION): :CLOSE
   Arg 3 (ABORT-P): NIL

(:INTERNAL (:METHOD PRESS:PRESS-STREAM :COMBINED :CLOSE) 0.):  (P.C. = 7)
   Arg 0 (SELF): #<PRESS-STREAM 33754377>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor PRESS:PRESS-STREAM -- 32. IV's, 4. FL's 21007704>
   Rest arg (.DAEMON-CALLER-ARGS.): (:CLOSE NIL)

(:METHOD SI:BASIC-HARDCOPY-STREAM :WHOPPER :CLOSE):  (P.C. = 26)
   Arg 0 (SELF): #<PRESS-STREAM 33754377>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor SI:BASIC-HARDCOPY-STREAM -- 27. IV's, 0. FL's 21006243>
   Arg 2 (.WHOPPER-CONTINUATION.): #<DTP-COMPILED-FUNCTION (:INTERNAL (:METHOD PRESS:PRESS-STREAM :COMBINED :CLOSE) 0.) 46370260>
   Arg 3 (.OLD-SELF-MAPPING-TABLE.): #<Map to flavor PRESS:PRESS-STREAM -- 32. IV's, 4. FL's 21007704>
   Arg 4 (.OPERATION.): :CLOSE
   Arg 5 (ABORT-P): NIL

(:METHOD PRESS:PRESS-STREAM :COMBINED :CLOSE):  (P.C. = 12)
   Arg 0 (SELF): #<PRESS-STREAM 33754377>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor PRESS:PRESS-STREAM -- 32. IV's, 4. FL's 21007704>
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

SI:CLOSE-OPEN-STREAM:  (P.C. = 14)
   Arg 0 (STREAM): #<PRESS-STREAM 33754377>
   Arg 1 (ABORT): NIL

Rest of stack:
(:METHOD ZWEI:HARDCOPY-MAIL-COLLECTION :ADD-SEQUENCE):  (P.C. = 255)
ZWEI:COM-ZMAIL-MOVE-ALL-TO-FILE:  (P.C. = 173)
ZWEI:COM-ZMAIL-MAP-OVER:  (P.C. = 52)
ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
ZWEI:ZMAIL-COMMAND-EXECUTE:  (P.C. = 6)
(:INTERNAL ZWEI:ZMAIL-COMMAND-LIST 0.):  (P.C. = 10)
ZWEI:ZMAIL-COMMAND-LIST:  (P.C. = 12)
(:METHOD ZWEI:ZMAIL-FRAME :PROCESS-SPECIAL-COMMAND):  (P.C. = 5)
(:METHOD ZWEI:ZMAIL-FRAME :COMMAND-LOOP):  (P.C. = 130)
(:METHOD ZWEI:ZMAIL-FRAME :COMBINED :COMMAND-LOOP):  (P.C. = 43)
ZWEI:ZMAIL-PROCESS-TOP-LEVEL:  (P.C. = 52)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
22-Dec-83 02:01:18-EST,2019;000000000000
Received: from MIT-LISPM-1 by MIT-OZ via Chaosnet; 22 Dec 83 02:00-EST
Date: Thursday, 22 December 1983, 02:01-EST
From: Richard Mlynarik <Mly at MIT-OZ>
To: BUG-LISPM-mit at MIT-OZ

In Bad Inconsistently updated System 98.11, CADR 3.2,
Experimental ZMail 53.5, MIT-Specific 22.0, microcode 305, ZM MIT,
on Lisp Machine One:


Insert your description of the circumstances here:

using huge font in fed -- overran edge of label window

>>TRAP 2264 (THROW-TRAP)
There was no pending *CATCH for the tag TV:LINE-OVERFLOW.
The value being thrown was T.Backtrace from the debugger:

(:METHOD TV:LINE-TRUNCATING-MIXIN :BEFORE :END-OF-LINE-EXCEPTION) (P.C. = 34)
  (SELF is #<FED-LABEL-WINDOW Fed Label Window 1 2226545 exposed>)

 Arg 0 (OPERATION): :END-OF-LINE-EXCEPTION


(:METHOD FED:FED-LABEL-WINDOW :COMBINED :END-OF-LINE-EXCEPTION) (P.C. = 45)
  (SELF is #<FED-LABEL-WINDOW Fed Label Window 1 2226545 exposed>)

 Rest arg (.DAEMON-CALLER-ARGS.): (:END-OF-LINE-EXCEPTION)
Local 1 (.DAEMON-MAPPING-TABLE.): #<ART-16B-5 23417550>


TV:SHEET-TYO (P.C. = 370)

 Arg 0 (SHEET): #<FED-LABEL-WINDOW Fed Label Window 1 2226545 exposed>
 Arg 1 (CHAR): 40
   --Defaulted args:--
 Arg 2 (FONT): #<FONT HL20 37114200>
Local 0 (BASE-ADJ): 0
Local 1 (CHAR-WIDTHS): #<ART-Q-200 37133172>
Local 2 (FIT): #<ART-16B-201 37114053>
Local 3 (WIDTH): 30
Local 4 (KERN): 0
Local 5 (KERN-TABLE): NIL
Local 6 (XPOS): 760
Local 7 (RIGHT-LIM): 774


FED:FED-TYO (P.C. = 51)

 Arg 0 (SHEET): #<FED-LABEL-WINDOW Fed Label Window 1 2226545 exposed>
 Arg 1 (CH): 40
 Arg 2 (FONTNAME): FONTS:HL20
Local 0 (ELTS): NIL
Local 1 (ELT): NIL


FED:DISPLAY-LABEL (P.C. = 536)

Local 0 (SECOND-LINE-HEIGHT): 70
Local 1 (FD): #S(FED:FONT-DESCRIPTOR :FD-FILL-POINTER 177 :FD-NAME ...)
Local 2 (OLD-X): 42
Local 3 (I): 21
Local 4: 26


Remainder of stack:

FED:SELECT-FONT (P.C. = 136)
FED:COM-READ-FILE (P.C. = 227)
(:METHOD FED :COMMAND-LOOP) (P.C. = 204)
SI:PROCESS-TOP-LEVEL (P.C. = 153)
22-Dec-83 02:06:38-EST,1747;000000000000
Received: from MIT-LISPM-1 by MIT-OZ via Chaosnet; 22 Dec 83 02:06-EST
Date: Thursday, 22 December 1983, 02:06-EST
From: Richard Mlynarik <Mly at MIT-OZ>
To: BUG-LISPM-mit at MIT-OZ

In Bad Inconsistently updated System 98.11, CADR 3.2,
Experimental ZMail 53.5, MIT-Specific 22.0, microcode 305, ZM MIT,
on Lisp Machine One:

in fed. using huge font hl20b. selected "y"

>>TRAP 22310 (TV-ERASE-OFF-SCREEN)
An attempt was made to do graphics past the end of the screen.
Backtrace from the debugger:

(:METHOD FED:BASIC-FED :TYO-EDITED-CHAR) (P.C. = 200)
  (SELF is #<FED Fed 3 2233642 exposed>)

 Arg 0 (OPERATION): :TYO-EDITED-CHAR
 Arg 1 (SHEET): #<FED-LABEL-WINDOW Fed Label Window 3 2234167 exposed>
Local 0 (LEFT): 62
Local 1 (TOP): 2
Local 2 (PLANE-WIDTH): 41
Local 3 (PLANE-TOP): 0
Local 4 (PLANE-BOTTOM): 70
Local 5 (HPOS): 7
Local 6: 41
Local 7 (VPOS): 57


FED:FED-TYO (P.C. = 44)

 Arg 0 (SHEET): #<FED-LABEL-WINDOW Fed Label Window 3 2234167 exposed>
 Arg 1 (CH): 171
 Arg 2 (FONTNAME): FONTS:HL20
Local 0 (ELTS): ((FONTS:HL20 171 #<FED Fed 3 2233642 exposed>))
Local 1 (ELT): (FONTS:HL20 171 #<FED Fed 3 2233642 exposed>)


FED:DISPLAY-LABEL (P.C. = 411)

Local 0 (SECOND-LINE-HEIGHT): 70
Local 1 (FD): #S(FED:FONT-DESCRIPTOR :FD-FILL-POINTER 177 :FD-NAME ...)
Local 2 (OLD-X): 42
Local 3 (I): NIL
Local 4: NIL


FED:REDISPLAY-LABELS (P.C. = 33)

Local 0: NIL
Local 1 (ELT): NIL


(:METHOD FED :BEFORE :REDISPLAY) (P.C. = 100)
  (SELF is #<FED Fed 3 2233642 exposed>)

 Arg 0 (OPERATION): :REDISPLAY
 Rest arg (IGNORE): NIL


Remainder of stack:

(:METHOD FED :COMBINED :REDISPLAY) (P.C. = 61)
(:METHOD FED :COMMAND-LOOP) (P.C. = 155)
SI:PROCESS-TOP-LEVEL (P.C. = 153)
22-Dec-83 04:37:24-EST,2950;000000000000
Received: from MIT-LISPM-1 by MIT-OZ via Chaosnet; 22 Dec 83 04:37-EST
Date: Thursday, 22 December 1983, 04:37-EST
From: Richard Mlynarik <Mly at MIT-OZ>
To: BUG-LISPM-mit at MIT-OZ

In Bad Inconsistently updated System 98.11, CADR 3.2,
Experimental ZMail 53.5, MIT-Specific 22.0, microcode 305, ZM MIT,
on Lisp Machine One:

Had a package named "FOO"
Loaded a file with "Package: foo-package" in its mode line.
Trapped to eh.
I added the nickname "FOO-PACKAGE" to "FOO" by hand, and
then typed to s-b to get the proceed option which is supposed
to search for the package again.

>>ERROR: Invalid proceed-type :NO-ACTION returned by handler for #SYSTEM:PACKAGE-NOT-FOUND :PROPERTY-LIST (:NAME :FOO-PACKAGE :RELATIVE-TO NIL) :CONDITION-NAMES (SYSTEM:PACKAGE-NOT-FOUND FERROR ERROR CONDITION ...) :FORMAT-STRING "Package ~A does not exist." :FORMAT-ARGS (:FOO-PACKAGE NIL).
Backtrace from the debugger:

PKG-FIND-PACKAGE (P.C. = 137)

 Arg 0 (THING): :FOO-PACKAGE
 Arg 1 (CREATE-P): :ERROR
   --Defaulted args:--
 Arg 2 (USE-LOCAL-NAMES-PACKAGE): NIL
Local 0: NIL
Local 1 (NEW-NAME): NIL
Local 2 (STRING1): NIL


Additional information supplied with call:
 Expecting 2 values

(:PROPERTY :PACKAGE FS:FILE-ATTRIBUTE-BINDINGS) (P.C. = 31)

 Arg 0 (IGNORE): #<ZMACS-BUFFER "TEST1.LISP PS:<DANIEL.G.MLY.L> OZ:" 43742267>
 Arg 1 (IGNORE): :PACKAGE
 Arg 2 (PKG): :FOO-PACKAGE


FS:ATTRIBUTE-BINDINGS-FROM-LIST (P.C. = 46)

 Arg 0 (ATTLIST): (:BASE 10 :PACKAGE :FOO-PACKAGE ...)
 Arg 1 (PATHNAME): #<ZMACS-BUFFER "TEST1.LISP PS:<DANIEL.G.MLY.L> OZ:" 43742267>
Local 0 (ATTLIST): (:PACKAGE :FOO-PACKAGE :MODE :LISP ...)
Local 1 (VARS): (BASE IBASE)
Local 2 (VALS): (10 10)
Local 3 (BINDING-FUNCTION): #<DTP-FEF-POINTER (:PROPERTY :PACKAGE FS:FILE-ATTRIBUTE-BINDINGS) 30375126>
Local 4 (VARS1): (BASE IBASE)
Local 5 (VALS1): (10 10)


FS:FILE-ATTRIBUTE-BINDINGS (P.C. = 35)

 Arg 0 (PATHNAME): #<ZMACS-BUFFER "TEST1.LISP PS:<DANIEL.G.MLY.L> OZ:" 43742267>


Additional information supplied with call:
 Expecting 2 values

(:METHOD NODE :ATTRIBUTE-BINDINGS) (P.C. = 26)
  (SELF is #<ZMACS-BUFFER "TEST1.LISP PS:<DANIEL.G.MLY.L> OZ:" 43742267>)

 Arg 0 (OPERATION): :ATTRIBUTE-BINDINGS


Remainder of stack:

INITIALIZE-BUFFER-PACKAGE (P.C. = 56)
REVERT-FILE-BUFFER (P.C. = 546)
(:METHOD ZMACS-BUFFER :REVERT) (P.C. = 44)
REVERT-BUFFER (P.C. = 66)
FIND-FILE (P.C. = 244)
LOAD-FILE-INTO-ZMACS (P.C. = 47)
DIRED-FIND-FILE (P.C. = 121)
DIRED-DO-FILE-LIST (P.C. = 141)
DIRED-PROCESS-FILES (P.C. = 546)
COM-DIRED-EXIT (P.C. = 31)
COMMAND-EXECUTE (P.C. = 115)
PROCESS-COMMAND-CHAR (P.C. = 65)
(:METHOD WINDOW :EDIT) (P.C. = 464)
(:INTERNAL (:METHOD ZMACS-WINDOW :COMBINED :EDIT) 0) (P.C. = 74)
FUNCALL (P.C. = 25)
(:METHOD DISPLAYER :AROUND :EDIT) (P.C. = 31)
(:METHOD ZMACS-WINDOW :COMBINED :EDIT) (P.C. = 47)
ZMACS-WINDOW-TOP-LEVEL (P.C. = 46)
SI:PROCESS-TOP-LEVEL (P.C. = 152)
22-Dec-83 17:55:31-EST,950;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 22 Dec 83 17:55-EST
Received: from SCRC-EUPHRATES by SCRC-QUABBIN with CHAOS; Thu 22-Dec-83 17:56:47-EST
Date: Thursday, 22 December 1983, 18:00-EST
From: Mike McMahon <MMcM at SCRC-TENEX>
Subject: Bug in printing from ZMail
To: Ken Haase <KWH at MIT-OZ>
Cc: BUG-LISPM at MIT-OZ
In-reply-to: The message of 21 Dec 83 23:15-EST from Ken Haase <KWH at MIT-OZ>
Message-ID: <831222180014.5.MMcM@SCRC.SCRC.Symbolics>

    Date: Wednesday, 21 December 1983, 23:15-EST
    From: Ken Haase <KWH at MIT-OZ>

    In Release 5.0 [GC'd Beta Test rev 3], dusty plum, on Lisp Machine Keith Moon (3600):

    This happened while printing a set of messages out from ZMail.

    >>Error: Cannot coerce 2649902962. into a string
    While in the function STRING  (:DEFUN-METHOD PRESS:ENTITY-BCPL-STRING)  PRESS:ENTITY-BCPL-STRING

That one was Hardcopy 21.16.  With luck, you'll have it soon.
23-Dec-83 09:52:54-EST,2908;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 23 Dec 83 09:52-EST
Date: Friday, 23 December 1983, 09:58-EST
From: Apprentice for KMP <KBE at OZ>
Subject: More on (SEND '#<DEFAULT-CHAOS-HOST MIT-BING-CROSBY> ':HOST-UNITS)
To: BUG-LISPM at OZ
Cc: joseph at vixen, heeter at vixen, smurf at vixen

In Release 4.5, ... on Lisp Machine Frank Sinatra:

I got more of these errors:

 >>Error: The object #<DEFAULT-CHAOS-HOST MIT-BING-CROSBY> received a HOST-UNITS 
          message, which went unclaimed. The rest of the message was ()

This time, however, the errors happened on other machines besides Sinatra,
and prevented me from doing a DISK-SAVE, so I was forced to spend the last
several hours tracking down the problem.

The problem was that HOSTS.TEXT.681 (written by HEETER) contains the following
bogus entry:

  HOST MIT-BING-CROSBY	CHAOS 13071,USER,USER,LISPM,[BING]

This caused the host object for that machine to be a DEFAULT-CHAOS-HOST instead
of a LISPM-CHAOS-HOST.

It is *very* important that people doing installation/service over here check
their work. They can't just make a change and walk away and assume everything 
will be fine, because it seems like it never is.

It is equally important that reasonable diagnostics be built in to the software
to make such testing possible. It is my understanding that the host table format
is something that is easy to get wrong, and it seems to me that the software that
manipulates it should reflect that fact. I am very surprised that the host
table compiler didn't offer a warning saying that "USER" was an odd kind of
system. It seems like a well-placed
 (IF (NOT (GET HOST-SYSTEM-TYPE 'SI:SYSTEM-TYPE-FLAVOR))
     (FORMAT ERROR-OUTPUT "~&Warning: The host table specifies that host ~S is of type ~S,~
 			   ~%         which is not a known host type."
	     HOST-NAME HOST-SYSTEM-TYPE))
would have saved a lot of grief.

Also, I don't know what the :HOST-UNITS message is, but it occurs to me that
it may just be a simple bug that DEFAULT-CHAOS-HOST doesn't handle it anyway.
Someone who knows more about this might want to check on that.

--kmp

ps. Here's the backtrace in case any of it matters...

>>Error: The object #<DEFAULT-CHAOS-HOST MIT-BING-CROSBY> received a HOST-UNITS
         message, which went unclaimed. The rest of the message was ()
While in the function FS:FILE-LOGIN  SI:*EVAL  INITIALIZATIONS

FS:FILE-LOGIN:  (P.C. = 12)
   Arg 0 (LOGIN-P): NIL
   Local 1: (#<DEFAULT-CHAOS-HOST MIT-BING-CROSBY> 
	     #<LISPM-CHAOS-HOST MIT-FRANK-SINATRA> ...)
   Local 2 (HOST): #<DEFAULT-CHAOS-HOST MIT-BING-CROSBY>

SI:*EVAL:  (P.C. = 405)
   Arg 0 (FORM): (FS:FILE-LOGIN NIL)

INITIALIZATIONS:  (P.C. = 42)
   Arg 0 (LIST-NAME): SI:LOGOUT-INITIALIZATION-LIST
   --Defaulted args:--
   Arg 1 (REDO-FLAG): NIL
   Arg 2 (FLAG): T

LOGOUT:  (P.C. = 6)

...etc.
26-Dec-83 18:33:11-EST,1606;000000000000
Mail-From: TIM created at 26-Dec-83 01:05:37
Received: from MIT-OZ by MIT-OZ via Chaosnet; 26 Dec 83 01:05-EST
Received: from MIT-MC by MIT-OZ via Chaosnet; 25 Dec 83 21:15-EST
Date: Sunday, 25 December 1983, 20:48-EST
From: Kent M Pitman <KMP at MIT-MC>
Subject: Debugger's query: "Do you want to specify a different value to use this time?" 
To: BUG-LISPM at MIT-OZ

In Release 5.0 [GC'd Beta Test rev 3], corrected dusty plum, on Lisp Machine Apiary-4 (3600):

    (FOO 3)
    >>Trap: The function FOO is undefined.
    ...
    (DEFUN FOO (X) (+ X 1))
    FOO
    
    FOO is now defined.
    Do you want to specify a different value to use this time? (Y or N) No.
    
I wish this would ask me

    Go ahead and use this value? (Y or N)

The most probable answer to a question like this by a huge margin is probably
going to be "Yes".  I am forever hitting space bar prematurely and finding (much
to my dismay) that I wind up with it wanting me to specify a value to use instead,
which I didn't mean to do. Obviously, if I read the question more carefully, I'd
know better, but when in the debugger, I'm usually interested in getting back out
as quickly as possible and the aggravation nature of little things like this can
seem greatly magnified.

This is a long standing problem that I have complained about in past releases,
but which has not been fixed. Does someone really think that inverting the truth
value of the query is a bad idea, or has my gripe just gotten lost in the rubble?

A similar problem occurs when recovering from unbound variables.
-kmp
26-Dec-83 18:36:33-EST,3559;000000000000
Mail-From: TIM created at 26-Dec-83 01:13:18
Received: from MIT-OZ by MIT-OZ via Chaosnet; 26 Dec 83 01:13-EST
Received: from MIT-OZ by MIT-OZ via Chaosnet; 26 Dec 83 00:56-EST
Received: from MIT-LISPM-18 by MIT-OZ via Chaosnet; 25 Dec 83 15:59-EST
Date: Sunday, 25 December 1983, 16:04-EST
From: Richard Mlynarik <Mly at MIT-OZ>
To: BUG-LISPM-mit at MIT-OZ

In Experimental System 98.9, CADR 3.2, Experimental ZMail 53.5,
MIT-Specific 22.0, microcode 305, ZM MIT, on Lisp Machine Eighteen:


Trying to load 98.10 in an editor typeout window (ie from break loop)
98.9 loaded ok.

>>TRAP 10010 (ARGTYP INSTANCE PP 1 XLOCATE-IN-INSTANCE-2)
The second argument to LOCATE-IN-INSTANCE, NIL, was of the wrong type.
The function expected an instance.
Backtrace from the debugger:

ZWEI:WINDOW-EDITOR-CLOSURE (P.C. = 23)

 Arg 0 (DISPLAYER): NIL


SI:EVAL1 (P.C. = 1324)

 Arg 0 (FORM): (ZWEI:WINDOW-EDITOR-CLOSURE (TV:FIND-WINDOW-OF-FLAVOR **))
   --Defaulted args:--
 Arg 1 (NOHOOK): NIL
Local 0 (ARGNUM): 1
Local 1 (TEM): NIL
Local 2 (ENV): NIL
Local 3: NIL
Local 4 (FRAME): NIL
Local 5 (FCTN): #<DTP-FEF-POINTER ZWEI:WINDOW-EDITOR-CLOSURE 17045467>
Local 6 (ARG-DESC): 101
Local 7 (NUM-ARGS): 1
Local 8 (CLOSURE-PASSED): NIL
Local 9 (LAMBDA-LIST): NIL
Local 10 (LL): NIL
Local 11 (QUOTE-STATUS): NIL
Local 12 (REST-FLAG): NIL
Local 13 (ARGL): NIL
Local 14: NIL
Local 15 (IGNORE): NIL
Local 16 (ADL): NIL
Local 17 (ITEM): NIL
Local 18 (*SELECTQ-ITEM*): NIL


SI:EVAL1 (P.C. = 1303)

 Arg 0 (FORM): (FUNCALL (ZWEI:WINDOW-EDITOR-CLOSURE **) (QUOTE EVAL) (QUOTE ZWEI:*WINDOW*))
   --Defaulted args:--
 Arg 1 (NOHOOK): NIL
Local 0 (ARGNUM): 0
Local 1 (TEM): NIL
Local 2 (ENV): NIL
Local 3: NIL
Local 4 (FRAME): NIL
Local 5 (FCTN): #<DTP-FEF-POINTER FUNCALL 2244656>
Local 6 (ARG-DESC): 4000101
Local 7 (NUM-ARGS): 3
Local 8 (CLOSURE-PASSED): NIL
Local 9 (LAMBDA-LIST): NIL
Local 10 (LL): NIL
Local 11 (QUOTE-STATUS): NIL
Local 12 (REST-FLAG): NIL
Local 13 (ARGL): ((ZWEI:WINDOW-EDITOR-CLOSURE **) (QUOTE EVAL) (QUOTE ZWEI:*WINDOW*))
Local 14: NIL
Local 15 (IGNORE): NIL
Local 16 (ADL): NIL
Local 17 (ITEM): NIL
Local 18 (*SELECTQ-ITEM*): NIL


EVAL (P.C. = 62)

 Arg 0 (FORM): (FUNCALL (ZWEI:WINDOW-EDITOR-CLOSURE **) (QUOTE EVAL) (QUOTE ZWEI:*WINDOW*))
   --Defaulted args:--
 Arg 1 (NOHOOK): NIL
Local 0 (TEM): NIL


Additional information supplied with call:
 SYSTEM:ADI-FEXPR-CALL

LET (P.C. = 155)

 Arg 0 (VARLIST): ((ZWEI:WINDOW **))
 Rest arg (BODY): ((ZWEI:PUSH-ON-HISTORY ** **))
Local 1 (VARS-LEFT): ((ZWEI:WINDOW **))
Local 2 (L): NIL
Local 3 (NEWENV): NIL
Local 4 (BINDFRAME): NIL
Local 5 (VALS-LEFT): NIL
Local 6 (THISVARLOC): NIL
Local 7: NIL
Local 8: NIL
Local 9: NIL
Local 10 (VAR): NIL
Local 11 (TEM): NIL
Local 12 (FRAME): NIL


Remainder of stack:

SI:EVAL1 (P.C. = 1324)
SYSTEM:FASL-OP-EVAL1 (P.C. = 115)
SI:FASL-GROUP (P.C. = 132)
SI:FASL-WHACK-SAVE-FASL-TABLE (P.C. = 67)
SI:FASL-WHACK (P.C. = 23)
SI:FASL-TOP-LEVEL (P.C. = 32)
SI:FASLOAD-INTERNAL (P.C. = 506)
FS:LOAD-1 (P.C. = 426)
LOAD (P.C. = 104)
LOAD-PATCHES (P.C. = 1233)
...
ZWEI:COMMAND-EXECUTE (P.C. = 115)
ZWEI:PROCESS-COMMAND-CHAR (P.C. = 65)
(:METHOD ZWEI:WINDOW :EDIT) (P.C. = 464)
(:INTERNAL (:METHOD ZWEI:ZMACS-WINDOW :COMBINED :EDIT) 0) (P.C. = 74)
FUNCALL (P.C. = 25)
(:METHOD ZWEI:DISPLAYER :AROUND :EDIT) (P.C. = 31)
(:METHOD ZWEI:ZMACS-WINDOW :COMBINED :EDIT) (P.C. = 47)
ZWEI:ZMACS-WINDOW-TOP-LEVEL (P.C. = 46)
SI:PROCESS-TOP-LEVEL (P.C. = 152)
26-Dec-83 18:38:51-EST,631;000000000000
Mail-From: TIM created at 26-Dec-83 10:01:32
Received: from SCRC-VIXEN by MIT-OZ via Chaosnet; 26 Dec 83 10:01-EST
Received: from scrc-allagash by scrc-vixen with CHAOS; 26 Dec 1983 09:56:58-EST
Date: Monday, 26 December 1983, 09:57-EST
From: Leslie Heeter <heeter at SCRC-VIXEN>
Subject: More on (SEND '#<DEFAULT-CHAOS-HOST MIT-BING-CROSBY> ':HOST-UNITS)
To: KBE at OZ, BUG-LISPM at OZ
Cc: joseph at vixen, heeter at vixen, smurf at vixen,
    heeter at SCRC-VIXEN
In-reply-to: The message of 23 Dec 83 09:58-EST from Apprentice for KMP <KBE at OZ>

	Apologies. I was confused. It won't happen again.

Leslie Heeter
27-Dec-83 09:16:56-EST,760;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 27 Dec 83 09:16-EST
Received: from SCRC-CONCORD by SCRC-QUABBIN with CHAOS; Tue 27-Dec-83 09:16:35-EST
Date: Tuesday, 27 December 1983, 09:17-EST
From: Bernard S. Greenberg <BSG at SCRC-TENEX>
Subject: Debugger's query: "Do you want to specify a different value to use this time?" 
To: KMP at MIT-MC, BUG-LISPM at MIT-OZ
In-reply-to: The message of 25 Dec 83 20:48-EST from Kent M Pitman <KMP at MIT-MC>

    Date: Sunday, 25 December 1983, 20:48-EST
    From: Kent M Pitman <KMP at MIT-MC>
    I wish this would ask me

	Go ahead and use this value? (Y or N)

    The most probable answer to a question like this by a huge margin is probably
    going to be "Yes".
I agree with this 1000%.
27-Dec-83 09:48:13-EST,536;000000000000
Received: from MIT-LISPM-30 by MIT-OZ via Chaosnet; 27 Dec 83 09:47-EST
Date: Tuesday, 27 December 1983, 09:50-EST
From: Patrick G. Sobalvarro <pgs at MIT-OZ>
To: BUG-LISPM-mit at MIT-OZ

In Experimental System 98.16, CADR 3.3, Experimental ZMail 53.5, MIT-Specific
22.0, microcode 305, ZM MIT, on Lisp Machine Thirty:

Left-click on the mouse in Zwei seems not to work.  It worked before I loaded
patches, that is, in 98.7.  The mouse is not broken; left-click works in other
contexts.  I do have unreleased patches loaded.
27-Dec-83 09:49:14-EST,618;000000000000
Mail-From: KDF created at 27-Dec-83 09:48:48
Date: Tue, 27 Dec 1983  09:48 EST
Message-ID: <KDF.11978831879.BABYL@MIT-OZ>
From: KDF@MIT-OZ
To:   "Bernard S. Greenberg" <BSG@SCRC-TENEX>
Cc:   BUG-LISPM@MIT-OZ, KMP@MIT-MC
Subject: Debugger's query: "Do you want to specify a different value to use this time?" 
In-reply-to: Msg of 27 Dec 1983 09:17-EST from Bernard S. Greenberg <BSG at SCRC-TENEX>

	Add my vote in strong favor of this change.  It might better
be phrased as "Go ahead and use its value?", though, since I often don't
want to see what it is set to (such as a list > 100 elements long, etc).
27-Dec-83 10:06:00-EST,1984;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 27 Dec 83 10:05-EST
Received: from SCRC-HILLSBOROUGH by SCRC-QUABBIN with CHAOS; Tue 27-Dec-83 10:05:56-EST
Date: Tuesday, 27 December 1983, 10:05-EST
From: Dennis L. Doughty <doughty at SCRC-QUABBIN>
Subject: Debugger's query: "Do you want to specify a different value to use this time?" 
To: BSG at SCRC-TENEX
Cc: KMP at MIT-MC, BUG-LISPM at MIT-OZ, user-interface at SCRC-QUABBIN
In-reply-to: The message of 27 Dec 83 09:17-EST from Bernard S. Greenberg <BSG at SCRC-TENEX>
Message-ID: <831227100552.2.doughty@QUABBIN.SCRC.Symbolics>

    Date: Tuesday, 27 December 1983, 09:17-EST
    From: Bernard S. Greenberg <BSG at SCRC-TENEX>

	Date: Sunday, 25 December 1983, 20:48-EST
	From: Kent M Pitman <KMP at MIT-MC>
	I wish this would ask me

	    Go ahead and use this value? (Y or N)

	The most probable answer to a question like this by a huge margin is probably
	going to be "Yes".
    I agree with this 1000%.

There are many many places in the system where questions are phrased in
the negative ("Do not automatically save after reading inbox?"), or
similar sounding questions expect different answers in order to get a
uniform effect.  There've been a reasonable number of comments about
this over the last few months, but there's been no indication that
anyone (except the frustrated user) has been thinking about this very
seriously.  It really seems to me that we should simply decide what our
standard form of questioning will be (should we make "Y" or "N" be the
recommended answer to destructive questions? -- when restarting in the
debugger, should "Y" or "N" be the way to repeat using the same
arguments as last time? -- etc).  And then, after we've decided what our
standard is, at least all our new software should conform to this.
(It's not clear to me whether or not we want to change around the
questions that are presented in ZMacs, which has been around for a
while...)
27-Dec-83 10:15:48-EST,807;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 27 Dec 83 10:15-EST
Received: from SCRC-CONCORD by SCRC-QUABBIN with CHAOS; Tue 27-Dec-83 10:15:40-EST
Date: Tuesday, 27 December 1983, 10:16-EST
From: Bernard S. Greenberg <BSG at SCRC-TENEX>
Subject: Debugger's query: "Do you want to specify a different value to use this time?" 
To: KDF at MIT-OZ
Cc: BUG-LISPM at MIT-OZ, KMP at MIT-MC
In-reply-to: <KDF.11978831879.BABYL@MIT-OZ>

    Date: Tue, 27 Dec 1983  09:48 EST
    From: KDF@MIT-OZ

	    Add my vote in strong favor of this change.  It might better
    be phrased as "Go ahead and use its value?", though, since I often don't
    want to see what it is set to (such as a list > 100 elements long, etc).
We have fine ways of limited-gubbish printing.   It should be printed out.
27-Dec-83 16:41:54-EST,1085;000000000000
Mail-From: DANIEL created at 27-Dec-83 16:41:30
Date: Tue, 27 Dec 1983  16:41 EST
Message-ID: <DANIEL.11978907011.BABYL@MIT-OZ>
From: Daniel Weise <DANIEL@MIT-OZ>
To:   Kent M Pitman <KMP@MIT-MC>, BUG-LISPM@MIT-OZ
Subject: Debugger's query: "Do you want to specify a different value to use this time?" 
In-reply-to: Msg of 25 Dec 1983 20:48-EST from Kent M Pitman <KMP at MIT-MC>

    Date: Sunday, 25 December 1983, 20:48-EST
    From: Kent M Pitman <KMP at MIT-MC>
    To:   BUG-LISPM
    Re:   Debugger's query: "Do you want to specify a different value to use this time?" 

    In Release 5.0 [GC'd Beta Test rev 3], corrected dusty plum, on Lisp Machine Apiary-4 (3600):

        (FOO 3)
        >>Trap: The function FOO is undefined.
        ...
        (DEFUN FOO (X) (+ X 1))
        FOO
        
        FOO is now defined.
        Do you want to specify a different value to use this time? (Y or N) No.
        
    I wish this would ask me

        Go ahead and use this value? (Y or N)

    ...

I couldn't agree with this more.

Daniel
27-Dec-83 17:37:24-EST,1308;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 27 Dec 83 17:37-EST
Received: from SCRC-YANGTZE by SCRC-QUABBIN with CHAOS; Tue 27-Dec-83 17:37:21-EST
Date: Tuesday, 27 December 1983, 17:38-EST
From: Carl Hoffman <CWH at SCRC-TENEX>
Subject: Debugger's query: "Do you want to specify a different value to use this time?" 
To: BSG at SCRC-TENEX, KDF at MIT-OZ
Cc: BUG-LISPM at MIT-OZ, KMP at MIT-MC
In-reply-to: The message of 27 Dec 83 10:16-EST from Bernard S. Greenberg <BSG at SCRC-TENEX>

    Date: Tuesday, 27 December 1983, 10:16-EST
    From: Bernard S. Greenberg <BSG at SCRC-TENEX>

	Date: Tue, 27 Dec 1983  09:48 EST
	From: KDF@MIT-OZ

		Add my vote in strong favor of this change.  It might better
	be phrased as "Go ahead and use its value?", though, since I often don't
	want to see what it is set to (such as a list > 100 elements long, etc).
    We have fine ways of limited-gubbish printing.   It should be printed out.

Huh?  All the debugger prints now is:

   X is now defined.
   Do you want to specify a different value to use this time?

or

   X is now bound.
   Do you want to specify a different value to use this time?

It doesn't print the value of X, and doesn't need to since the user just
defined X.  KDF was complaining about a non-problem.
27-Dec-83 18:43:23-EST,1410;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 27 Dec 83 18:43-EST
Received: from SCRC-CONCORD by SCRC-QUABBIN with CHAOS; Tue 27-Dec-83 18:38:55-EST
Date: Tuesday, 27 December 1983, 18:39-EST
From: Bernard S. Greenberg <BSG at SCRC-TENEX>
Subject: Debugger's query: "Do you want to specify a different value to use this time?" 
To: CWH at SCRC-TENEX, KDF at MIT-OZ
Cc: BUG-LISPM at MIT-OZ, KMP at MIT-MC
In-reply-to: The message of 27 Dec 83 17:38-EST from Carl Hoffman <CWH at SCRC-TENEX>

    Date: Tuesday, 27 December 1983, 17:38-EST
    From: Carl Hoffman <CWH at SCRC-TENEX>
	Date: Tuesday, 27 December 1983, 10:16-EST
	From: Bernard S. Greenberg <BSG at SCRC-TENEX>
	    Date: Tue, 27 Dec 1983  09:48 EST
	    From: KDF@MIT-OZ
		    Add my vote in strong favor of this change.  It might better
	    be phrased as "Go ahead and use its value?", though, since I often don't
	    want to see what it is set to (such as a list > 100 elements long, etc).
	We have fine ways of limited-gubbish printing.   It should be printed out.

    Huh?  All the debugger prints now is:
       X is now defined.
       Do you want to specify a different value to use this time?
    It doesn't print the value of X, and doesn't need to since the user just
    defined X.  KDF was complaining about a non-problem.
Foo! Trick question!  Even so, there is an argument in favor of printing it.
27-Dec-83 19:31:21-EST,985;000000000000
Received: from MIT-AVATAR by MIT-OZ via Chaosnet; 27 Dec 83 19:31-EST
Date: Tuesday, 27 December 1983, 19:32-EST
From: Apprentice for KMP <KBE at MIT-OZ>
Subject: Idea: An argument to c-X c-X (Swap Point And Mark)
To: BUG-LISPM at MIT-OZ

In Release 4.5, Knowledge-Based-Editor 230.0, site configuration 61,
Hacked Magic, on PA Lisp Machine Avatar:

Something I have long wanted in ZWEI (which was unnecessary in Emacs
due to the impoverished way it handled regions) is a way to establish
the region without moving the cursor.

I suggest c-X c-X (Swap Point And Mark) should not swap the point and
mark when it gets an explict argument. Rather, it should just set the
window mark bit and leave the cursor where it was so that c-U c-X c-X
could be used to make a region which has vanished visible again.

I usually type c-X c-X c-X c-X but it's more keystrokes and can cause
needless redisplay and/or window recentering if the region extends off 
the screen.
-kmp
27-Dec-83 21:57:37-EST,3302;000000000000
Received: from SCRC-TENEX by MIT-OZ via Chaosnet; 27 Dec 83 21:57-EST
Date: Tuesday, 27 December 1983  21:59-EST
From: DCP at SCRC-TENEX
To:   Dennis L. Doughty <doughty at SCRC-QUABBIN>
Cc:   BSG at SCRC-TENEX, BUG-LISPM at MIT-OZ, KMP at MIT-MC,
      user-interface at SCRC-QUABBIN
Subject: Debugger's query: "Do you want to specify a different value to use this time?" 
In-reply-to: The message of 27 Dec 1983 10:05-EST from Dennis L. Doughty <doughty at SCRC-QUABBIN>

    Date: Tuesday, 27 December 1983, 10:05-EST
    From: Dennis L. Doughty <doughty at SCRC-QUABBIN>
    Message-ID: <831227100552.2.doughty@QUABBIN.SCRC.Symbolics>

        Date: Tuesday, 27 December 1983, 09:17-EST
        From: Bernard S. Greenberg <BSG at SCRC-TENEX>

    	Date: Sunday, 25 December 1983, 20:48-EST
    	From: Kent M Pitman <KMP at MIT-MC>
    	I wish this would ask me

    	    Go ahead and use this value? (Y or N)

    	The most probable answer to a question like this by a huge margin is probably
    	going to be "Yes".
        I agree with this 1000%.

    There are many many places in the system where questions are phrased in
    the negative ("Do not automatically save after reading inbox?"), or
    similar sounding questions expect different answers in order to get a
    uniform effect.  There've been a reasonable number of comments about
    this over the last few months, but there's been no indication that
    anyone (except the frustrated user) has been thinking about this very
    seriously.  It really seems to me that we should simply decide what our
    standard form of questioning will be (should we make "Y" or "N" be the
    recommended answer to destructive questions? -- when restarting in the
    debugger, should "Y" or "N" be the way to repeat using the same
    arguments as last time? -- etc).  And then, after we've decided what our
    standard is, at least all our new software should conform to this.
    (It's not clear to me whether or not we want to change around the
    questions that are presented in ZMacs, which has been around for a
    while...)

Your suggestions are fine, but your argument carries little weight.
To cite a specific, disk-save has been around for a long time too, yet
its y-or-n-p phrasings were recently reversed.  A complete counter
argument says that "Y" should always be the normal response.

I don't agree with you that this particular case is destructive.
Nearly all the time, the only reason a variable is 'now' bound or
function 'now' defined is because the user went to the trouble to
bind/define it.  After going through that trouble, why should the
query be in the negative as if it is now a mistake that it is bound?
I remember KMP complaining about this many moons ago, and I think what
I just said was part of his argument.  

If mail constitutes voting, there is currently an overwealming vote to
change it (though very few districts have reported in).  Can we come
to a consensus this time?  KMP is a reasonable enough character that
if we reach a solid consensus he'll stop complaining, even if it goes
against him.  I think he is complaining now because we didn't reach a
consensus last time and somebody didn't decide to fix it before the
new system build.
28-Dec-83 08:57:52-EST,1049;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 28 Dec 83 08:57-EST
Received: from SCRC-CONCORD by SCRC-QUABBIN with CHAOS; Wed 28-Dec-83 08:58:41-EST
Date: Wednesday, 28 December 1983, 08:58-EST
From: Bernard S. Greenberg <BSG at SCRC-TENEX>
Subject: Debugger's query: "Do you want to specify a different value to use this time?" 
To: doughty at SCRC-QUABBIN, KMP at MIT-MC
Cc: BUG-LISPM at MIT-OZ, user-interface at SCRC-QUABBIN
In-reply-to: <831227100552.2.doughty@QUABBIN.SCRC.Symbolics>

    Date: Tuesday, 27 December 1983, 10:05-EST
    From: Dennis L. Doughty <doughty at SCRC-QUABBIN>
	Date: Tuesday, 27 December 1983, 09:17-EST
	From: Bernard S. Greenberg <BSG at SCRC-TENEX>
	    Date: Sunday, 25 December 1983, 20:48-EST
	    From: Kent M Pitman <KMP at MIT-MC>
	    I wish this would ask me

		Go ahead and use this value? (Y or N)

	    The most probable answer to a question like this by a huge margin is probably
	    going to be "Yes".
	I agree with this 1000%.
I didn't hear any objections, so
243.441.
28-Dec-83 16:45:30-EST,1247;000000000000
Received: from SCRC-TENEX by MIT-OZ via Chaosnet; 28 Dec 83 16:44-EST
Date: Wednesday, 28 December 1983  16:44-EST
From: MOON at SCRC-TENEX
To:   MOON at SCRC-TENEX
Cc:   BUG-LISPM at MIT-OZ, Kent M. Pitman <kmp at MIT-OZ>
Subject: SETF of #'(:PROPERTY ...)
In-reply-to: The message of 8 Nov 1983  17:23-EST from MOON at SCRC-TENEX

    Date: Tuesday, 8 November 1983  17:23-EST
    From: MOON at SCRC-TENEX
    To:   Kent M. Pitman <kmp at MIT-OZ>
    Cc:   BUG-LISPM at MIT-OZ
    Subject: SETF of #'(:PROPERTY ...)
    In-reply-to: The message of 8 Nov 1983 14:56-EST from Kent M. Pitman <kmp at MIT-OZ>

    Use the FDEFINITION function rather than the FUNCTION special form
    and it will work.  Having SETF know about FUNCTION is not really
    inherently brain-damaged; maybe I'll get enthusiastic and put it
    in the source, at least of the Common Lisp version.  By the way if
    you really need this it shouldn't be at all hard for you to figure
    out what to put in the SETF property of FUNCTION to make it work.

I was somewhat confused here.  SETF always did know about FUNCTION,
it's just that it was thoroughly misimplemented.  It works correctly
in the Common Lisp version of SETF (not yet released).
28-Dec-83 22:09:25-EST,3315;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 28 Dec 83 22:09-EST
Date: Wednesday, 28 December 1983, 22:09-EST
From: Christopher C. Stacy <CStacy at MIT-MC>
To: BUG-LISPM at MIT-OZ

In Release 5.0 [GC'd Beta Test rev 3], Dusty plum, on Lisp Machine Janis Joplin (3600):

I was under the impression this had been fixed a long time ago.

>>Trap: The GET microcode, tried to take CAR of #<DTP-LOCATIVE 43300421>, which was a tail of the first argument.
While in the function ZWEI:GET-MSG-REFERENCES  ZWEI:MSG-REFERENCES  (:METHOD ZWEI:REFERENCE-HASH-TABLE-MIXIN :GET-REFERENCED-MSGS)

ZWEI:GET-MSG-REFERENCES:  (P.C. = 47)
   Arg 0 (MSG): #<MSG 4601166>
   Arg 1 (STATUS): #<DTP-LOCATIVE 4601176>
   Local 2: NIL
   Local 3 (REF): "<831227152333.1.MMcM@SCRC.SCRC.Symbolics>"
   Local 4: ((:DATE 2650393380. :FROM (:NAME "MMcM" :HOST (:OBJECT #<TENEX-HOST SCRC 12276063>))))
   Local 5 (TYPE): :FORWARD-REFERENCES
   Local 6 (HEADER): ((:DATE 2650393380. :FROM (:NAME "MMcM" :HOST (:OBJECT #<TENEX-HOST SCRC 12276063>))) "<831227152333.1.MMcM@SCRC.SCRC.Symbolics>")

ZWEI:MSG-REFERENCES:  (P.C. = 20)
   Arg 0 (MSG): #<MSG 4601166>

(:METHOD ZWEI:REFERENCE-HASH-TABLE-MIXIN :GET-REFERENCED-MSGS):  (P.C. = 4)
   Arg 0 (SELF): #<REFERENCE-HASH-TABLE MC: CSTACY; CSTACY BABYL>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:REFERENCE-HASH-TABLE-MIXIN -- 2. IV's, 0. FL's 24443634>
   Arg 2 (OPERATION): :GET-REFERENCED-MSGS
   Arg 3 (MSG): #<MSG 4601166>

(:METHOD ZWEI:UNIVERSE-SEQUENCE-MIXIN :GET-REFERENCED-MSGS):  (P.C. = 10)
   Arg 0 (SELF): #<BABYL-BUFFER "MC: CSTACY; CSTACY BABYL" 33660404>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:UNIVERSE-SEQUENCE-MIXIN -- 2. IV's, 0. FL's 24434351>
   Arg 2 (OPERATION): :GET-REFERENCED-MSGS
   Arg 3 (REFERENCING-MSG): #<MSG 4601166>

(:METHOD ZWEI:ITS-BUFFER-MIXIN :COMBINED :GET-REFERENCED-MSGS):  (P.C. = 16)
   Arg 0 (SELF): #<BABYL-BUFFER "MC: CSTACY; CSTACY BABYL" 33660404>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ITS-BUFFER-MIXIN -- 0. IV's, 3. FL's 24434433>
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

ZWEI:CROSS-LINK-MSG-REFERENCES:  (P.C. = 62)
   Arg 0 (MSG): #<MSG 4601166>

(:METHOD ZWEI:SEQUENCE :EXPUNGE):  (P.C. = 100)
   Arg 0 (SELF): #<BABYL-BUFFER "MC: CSTACY; CSTACY BABYL" 33660404>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:SEQUENCE -- 5. IV's, 0. FL's 24434417>
   Arg 2 (OPERATION): :EXPUNGE
   Arg 3 (DELETED-MSGS): T

(:METHOD ZWEI:ITS-BUFFER-MIXIN :COMBINED :EXPUNGE):  (P.C. = 24)
   Arg 0 (SELF): #<BABYL-BUFFER "MC: CSTACY; CSTACY BABYL" 33660404>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ITS-BUFFER-MIXIN -- 0. IV's, 3. FL's 24434433>
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

Rest of stack:
ZWEI:EXPUNGE-SEQUENCE:  (P.C. = 6)
ZWEI:ZMAIL-SAVE-MENU:  (P.C. = 107)
ZWEI:COM-ZMAIL-SAVE:  (P.C. = 33)
ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
ZWEI:ZMAIL-COMMAND-EXECUTE:  (P.C. = 6)
(:INTERNAL ZWEI:ZMAIL-COMMAND-LIST 0.):  (P.C. = 10)
ZWEI:ZMAIL-COMMAND-LIST:  (P.C. = 12)
(:METHOD ZWEI:ZMAIL-FRAME :PROCESS-SPECIAL-COMMAND):  (P.C. = 5)
(:METHOD ZWEI:ZMAIL-FRAME :COMMAND-LOOP):  (P.C. = 130)
(:METHOD ZWEI:ZMAIL-FRAME :COMBINED :COMMAND-LOOP):  (P.C. = 43)
ZWEI:ZMAIL-PROCESS-TOP-LEVEL:  (P.C. = 52)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
30-Dec-83 09:21:28-EST,4094;000000000000
Received: from MIT-ROBOT-4 by MIT-OZ via Chaosnet; 30 Dec 83 09:21-EST
Date: Friday, 8 September -2941623, -23:-10-EDT
From: Gavan Duffy <gavan at MIT-OZ>
Subject: hard to send mail if namespace server chokes.
To: BUG-LISPM at MIT-OZ

In Release 5.0 [GC'd Beta Test rev 3], dusty plum, on Lisp Machine Robot-4 (3600):

Trying to send a bug repoort about the namespace server.  Hope this one makes it.

>>Error: The argument N to NTH, -4, was of the wrong type.
         The function expected a non-negative integer.
While in the function NTH  TIME:DAY-OF-THE-WEEK-STRING  ZWEI:PRINT-DATE-HEADER

NTH:  (P.C. = 26)
   Arg 0 (N): -4
   Arg 1 (OBJECT): (("Mon" "Monday" NIL "Lundi" "Montag" "Lunedi") ("Tue" "Tuesday" "Tues" "Mardi" "Dienstag" "Martedi") ("Wed" "Wednesday" NIL "Mercredi" "Mittwoch" "Mercoledi") ("Thu" "Thursday" "Thurs" "Jeudi" "Donnerstag" "Giovedi") ("Fri" "Friday" NIL "Vendredi" "Freitag" "Venerdi") ("Sat" "Saturday" NIL "Samedi" "Samstag" "Sabato") ("Sun" "Sunday" NIL "Dimanche" "Sonntag" "Domenica"))
   Local 2 (N): SI:N
   Local 3 (OBJECT): -4

TIME:DAY-OF-THE-WEEK-STRING:  (P.C. = 6)
   Arg 0 (DAY-OF-THE-WEEK): -4
   Arg 1 (MODE): :LONG

ZWEI:PRINT-DATE-HEADER:  (P.C. = 22)
   Arg 0 (STREAM): #<CHARACTER-STREAM 3666167>
   Arg 1 (DATE): -636566634250
   Arg 2 (NAME): "Date"
   Arg 3 (EXPANSION): (:TEXT #<NODE 3617674> :HEADERS (:DATE -636566634250 :FROM ((:HOST ** :PERSONAL-NAME "Gavan Duffy" :NAME "gavan")) :SUBJECT "namespace disserver" :TO ((:NAME "BUG-BETA-TEST" :HOST ** :INTERVAL **))) :HEADER-FORMAT :INCLUDE-PERSONAL :TRANSMIT-TIME -636566634250 :DRAFT-MSG #<ZMACS-DRAFT-MSG 3617707>)
   Arg 4 (IGNORE): 110

ZWEI:PRINT-HEADER:  (P.C. = 37)
   Arg 0 (STREAM): #<CHARACTER-STREAM 3666167>
   Arg 1 (HEADER): -636566634250
   Arg 2 (TYPE): :DATE
   Arg 3 (EXPANSION): (:TEXT #<NODE 3617674> :HEADERS (:DATE -636566634250 :FROM ((:HOST ** :PERSONAL-NAME "Gavan Duffy" :NAME "gavan")) :SUBJECT "namespace disserver" :TO ((:NAME "BUG-BETA-TEST" :HOST ** :INTERVAL **))) :HEADER-FORMAT :INCLUDE-PERSONAL :TRANSMIT-TIME -636566634250 :DRAFT-MSG #<ZMACS-DRAFT-MSG 3617707>)
   --Defaulted args:--
   Arg 4 (MAX-COL): 110

ZWEI:OUTPUT-HEADERS:  (P.C. = 40)
   Arg 0 (STREAM): #<CHARACTER-STREAM 3666167>
   Arg 1 (TEMPLATE-EXPANSION): (:TEXT #<NODE 3617674> :HEADERS (:DATE -636566634250 :FROM ((:HOST ** :PERSONAL-NAME "Gavan Duffy" :NAME "gavan")) :SUBJECT "namespace disserver" :TO ((:NAME "BUG-BETA-TEST" :HOST ** :INTERVAL **))) :HEADER-FORMAT :INCLUDE-PERSONAL :TRANSMIT-TIME -636566634250 :DRAFT-MSG #<ZMACS-DRAFT-MSG 3617707>)
   Arg 2 (CR-AT-END): T

ZWEI:OUTPUT-HEADERS-AND-TEXT:  (P.C. = 5)
   Arg 0 (STREAM): #<CHARACTER-STREAM 3666167>
   Arg 1 (TEMPLATE-EXPANSION): (:TEXT #<NODE 3617674> :HEADERS (:DATE -636566634250 :FROM ((:HOST ** :PERSONAL-NAME "Gavan Duffy" :NAME "gavan")) :SUBJECT "namespace disserver" :TO ((:NAME "BUG-BETA-TEST" :HOST ** :INTERVAL **))) :HEADER-FORMAT :INCLUDE-PERSONAL :TRANSMIT-TIME -636566634250 :DRAFT-MSG #<ZMACS-DRAFT-MSG 3617707>)

ZWEI:CHAOS-MAIL-INTERNAL:  (P.C. = 124)
   Arg 0 (SERVICE): #<SERVICE-ACCESS-PATH STORE-AND-FORWARD-MAIL (CHAOS-MAIL) -- OZ on CHAOS 3664611>

ZWEI:INVOKE-SERVICE-STORE-AND-FORWARD-MAIL-WITH-CHAOS-MAIL:  (P.C. = 3)
   Arg 0 (SERVICE): #<SERVICE-ACCESS-PATH STORE-AND-FORWARD-MAIL (CHAOS-MAIL) -- OZ on CHAOS 3664611>

Rest of stack:
NET:INVOKE-SERVICE-ACCESS-PATH:  (P.C. = 21)
ZWEI:NETWORK-SEND-IT:  (P.C. = 264)
ZWEI:FUNCALL-TEMPLATE-EXPANSION:  (P.C. = 47)
(:METHOD ZWEI:BASIC-DRAFT-MSG :TRANSMIT):  (P.C. = 314)
(:METHOD ZWEI:ZMACS-DRAFT-MSG :COMBINED :TRANSMIT):  (P.C. = 20)
ZWEI:SEND-MESSAGE:  (P.C. = 24)
ZWEI:COM-EXIT-COM-MAIL:  (P.C. = 26)
ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 200)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 41)
(:METHOD ZWEI:MAIL-TOP-LEVEL-EDITOR :MAIL):  (P.C. = 57)
MAIL:  (P.C. = 20)
BUG:  (P.C. = 27)
SI:PROCESS-RUN-FUNCTION-INTERNAL:  (P.C. = 51)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
30-Dec-83 15:13:58-EST,1724;000000000000
Received: from SCRC-TENEX by MIT-OZ via Chaosnet; 30 Dec 83 15:13-EST
Received: from SCRC-NEPONSET by SCRC-TENEX with CHAOS; Fri 30-Dec-83 15:10:38-EST
Date: Friday, 30 December 1983, 15:08-EST
From: Mike McMahon <MMcM at SCRC-TENEX>
Subject: hard to send mail if namespace server chokes.
To: Gavan Duffy <gavan at MIT-OZ>
Cc: BUG-LISPM at MIT-OZ
In-reply-to: The message from Gavan Duffy <gavan at MIT-OZ>
Message-ID: <831230150812.2.MMcM@SCRC.SCRC.Symbolics>

    From: Gavan Duffy <gavan at MIT-OZ>

    In Release 5.0 [GC'd Beta Test rev 3], dusty plum, on Lisp Machine Robot-4 (3600):

    Trying to send a bug repoort about the namespace server.  Hope this one makes it.

Well, this bug report doesn't say anything about the namespace server.
I don't know what the failed one was.

    >>Error: The argument N to NTH, -4, was of the wrong type.
	     The function expected a non-negative integer.
    While in the function NTH  TIME:DAY-OF-THE-WEEK-STRING  ZWEI:PRINT-DATE-HEADER

    NTH:  (P.C. = 26)
       Arg 0 (N): -4
       Arg 1 (OBJECT): (("Mon" "Monday" NIL "Lundi" "Montag" "Lunedi") ("Tue" "Tuesday" "Tues" "Mardi" "Dienstag" "Martedi") ("Wed" "Wednesday" NIL "Mercredi" "Mittwoch" "Mercoledi") ("Thu" "Thursday" "Thurs" "Jeudi" "Donnerstag" "Giovedi") ("Fri" "Friday" NIL "Vendredi" "Freitag" "Venerdi") ("Sat" "Saturday" NIL "Samedi" "Samstag" "Sabato") ("Sun" "Sunday" NIL "Dimanche" "Sonntag" "Domenica"))
       Local 2 (N): SI:N
       Local 3 (OBJECT): -4

    TIME:DAY-OF-THE-WEEK-STRING:  (P.C. = 6)

    ZWEI:PRINT-DATE-HEADER:  (P.C. = 22)
       Arg 1 (DATE): -636566634250

This date (which is probably your machine's idea of the current date) is garbage.
31-Dec-83 12:41:12-EST,3278;000000000000
Received: from MIT-LISPM-30 by MIT-OZ via Chaosnet; 31 Dec 83 12:40-EST
Date: Saturday, 31 December 1983, 12:41-EST
From: Patrick G. Sobalvarro <pgs at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In Don't-dump-a-band! Inconsistent (unreleased patches loaded) System 98.18,
CADR 3.4, Inconsistent (unreleased patches loaded) ZMail 53.8,
MIT-Specific 22.0, microcode 305, ZM MIT, on Lisp Machine Thirty:


I loaded all the unreleased patches.  98.19 blew out, zwei:*comtab* unbound.  I aborted
out of that and entered Zmail.

>>TRAP 10535 (ARRAY-NUMBER-DIMENSIONS M-D 3 M-A ARRAY-DECODE-3-NEW-ARRAY-RESTART)
The 2-dimensional array #<ART-Q-2-3 16237221> was given 3 subscripts: (0 0 0).
Backtrace from the debugger:

ZWEI:COMMAND-LOOKUP (P.C. = 67)

 Arg 0 (CHAR): 4000000
 Arg 1 (COMTAB): #<COMTAB ZWEI:MODE-COMTAB 16055123>
   --Defaulted args:--
 Arg 2 (NO-INDIRECTION-P): NIL
Local 0 (CTB): #<COMTAB ZWEI:STANDARD-COMTAB 16215576>
Local 1 (CH): 4000000
Local 2 (KEYBOARD-ARRAY): #<ART-Q-240-20 16232216>
Local 3 (COMMAND): NIL


ZWEI:COMTAB-MOUSE-PROMPT (P.C. = 76)

 Arg 0 (COMTAB): #<COMTAB ZWEI:MODE-COMTAB 16055123>
 Arg 1 (STRING): ""
Local 0 (BUTTON): 0
Local 1 (NAMES): (114 115 122)
Local 2 (FIRST-P): T
Local 3 (CLICKS): 0
Local 4 (COMMAND): NIL
Local 5 (PROMPT): NIL


(:METHOD ZWEI:ZWEI :AFTER :EXPOSE) (P.C. = 55)
  (SELF is #<ZMAIL-WINDOW Zmail Window 1 2207217 exposed>)

 Arg 0 (OPERATION): :EXPOSE
 Rest arg (IGNORE): (NIL :CLEAN)


Additional information supplied with call:
 Expecting 3 values

(:INTERNAL (:METHOD ZWEI:ZWEI-WITHOUT-TYPEOUT :COMBINED :EXPOSE) 0) (P.C. = 77)

 Arg 0 (.DAEMON-CALLER-ARGS.): (:EXPOSE NIL :CLEAN)
Local 0 (FOO): NIL
Local 1 (.DAEMON-MAPPING-TABLE.): #<ART-16B-5 30647152>
Local 2 (.VAL1.): T
Local 3 (.VAL2.): NIL
Local 4 (.VAL3.): NIL


TV:SHEET-EXPOSE (P.C. = 160)

 Arg 0 (DAEMON-ARGS): (:EXPOSE NIL :CLEAN)
 Arg 1 (INTERNALS): #<DTP-FEF-POINTER (:INTERNAL (:METHOD ZWEI:ZWEI-WITHOUT-TYPEOUT :COMBINED :EXPOSE) 0) 21654270>
Local 0 (*SHEETS-MADE-INVISIBLE-TO-MOUSE*): NIL
Local 1 (VAL1): NIL
Local 2 (VAL2): NIL
Local 3 (VAL3): NIL
Local 4 (.QUEUE-LEFT.): T
Local 5 (DONE): NIL
Local 6 (ERROR): NIL
Local 7: NIL
Local 8 (SHEET): NIL
Local 9 (E): NIL


Remainder of stack:

(:METHOD ZWEI:ZWEI-WITHOUT-TYPEOUT :COMBINED :EXPOSE) (P.C. = 74)
TV:CONSTRAINT-FRAME-RECOMPUTE-CONFIGURATION (P.C. = 260)
(:METHOD TV:BASIC-CONSTRAINT-FRAME :SET-CONFIGURATION) (P.C. = 61)
(:METHOD ZWEI:ZMAIL-FRAME :SET-WINDOW-CONFIGURATION) (P.C. = 207)
ZWEI:SET-MAIN-WINDOW-CONFIGURATION (P.C. = 40)
ZWEI:SET-ZMAIL-USER (P.C. = 144)
ZWEI:STARTUP-ZMAIL-BUFFER (P.C. = 111)
ZWEI:COM-GET-NEW-MAIL-INTERNAL (P.C. = 133)
ZWEI:COM-GET-NEW-MAIL (P.C. = 34)
ZWEI:COMMAND-EXECUTE (P.C. = 115)
ZWEI:ZMAIL-COMMAND-EXECUTE (P.C. = 27)
(:METHOD ZWEI:ZMAIL-FRAME :PROCESS-COMMAND-CHAR) (P.C. = 40)
(:METHOD ZWEI:ZMAIL-COMMAND-LOOP-MIXIN :COMMAND-LOOP) (P.C. = 257)
(:INTERNAL (:METHOD ZWEI:ZMAIL-FRAME :COMBINED :COMMAND-LOOP) 0) (P.C. = 44)
FUNCALL (P.C. = 25)
(:METHOD ZWEI:ZMAIL-COMMAND-LOOP-MIXIN :AROUND :COMMAND-LOOP) (P.C. = 57)
(:METHOD ZWEI:ZMAIL-FRAME :COMBINED :COMMAND-LOOP) (P.C. = 43)
ZWEI:ZMAIL-PROCESS-TOP-LEVEL (P.C. = 115)
SI:PROCESS-TOP-LEVEL (P.C. = 152)
31-Dec-83 13:10:05-EST,1028;000000000000
Received: from MIT-LISPM-30 by MIT-OZ via Chaosnet; 31 Dec 83 13:09-EST
Date: Saturday, 31 December 1983, 13:10-EST
From: Patrick G. Sobalvarro <PGS at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In Experimental System 98.16, CADR 3.4, Experimental ZMail 53.5,
MIT-Specific 22.0, microcode 305, ZM MIT, on Lisp Machine Thirty:

Most of the time, I'm aware of what kind of listener-loop I'm in and don't need
the comments that I get when returning from breaks and the like.  I find it
obtrusive:

;Now using traditional syntax and semantics and base 8 in package USER.

(setq *default-common-lisp* t)
T
;Now using Common Lisp syntax and semantics and base 10 in package USER.

Could this information be put in the mouse documentation line when it's not
busy, or maybe next to the label in Lisp listeners, or maybe even in another
status line?  I guess in the cold-load stream or the Telnet server one would
want it printed in line, but anytime the window system is working I would
prefer that it went somewhere else.
 1-Jan-84 00:08:37-EST,3026;000000000000
Date:  1-Jan-84 00:07:04
From: The Wizard of OZ <Birthday-Wizard@MIT-OZ>
To: CADR <LISPM@MIT-OZ>

                                               YY
                                              YYYY            YY
HHHHH         HHHHH                             YYY          YYYY
HHHHH         HHHHH                  PP PPPPPP   YYY         YYY
  HHH         HHH                     PPP    PP   YYY       YYY
  HHH         HHH    AAAAA  PP PPPPPP  PP    PP    YYY     YYY
  HHH         HHH   AAAAAAA  PPP    PP PP    PP     YYY   YYY
  HHH         HHH  AA     AA  PP    PP PP    PP      YYY YYY
  HHH         HHH  AA     AA  PP    PP PPPPPPP        YYYYY
  HHHHHHHHHHHHHHH  AA     AA  PP    PP PP             YYYY
  HHHHHHHHHHHHHHH  AA     AA  PPPPPPP  PP            YYYY   -------
  HHHHHHHHHHHHHHH  AAAAAAAAA  PP       PP           YYYY    -------
  HHH         HHH  AAAAAAAAA  PP       PP          YYYY     -------
  HHH         HHH  AA     AA  PP       PP         YYYY
  HHH         HHH  AA     AA  PP       PP        YYYY
  HHH         HHH  AA     AA  PP       PP      YYYYYY
  HHH         HHH  AA     AA  PP       PP     YYYYYYY
  HHH         HHH             PP       PP    YYYYYYY
HHHHH         HHHHH           PP       PP   YYYYYYY
HHHHH         HHHHH           PP       PP  YYYYYYY
                                            YYYYY
BBBBBBBBBBBBB                                YYY
BBBBBBBBBBBBBB                                Y
 BBBB       BBB    II                                   YYY             YYY
  BB         BB    II               DDDDDDDDDDDDD       YYYY           YYYY
  BB         BB                     DDDDDDDDDDDDDD        YY            YY
  BB         BB   III  RRR RRRR        DDD      DDD      A YY          YY
  BB         BB    II   RRRR  RR       DDD      DDD     AAA YY        YY
  BB        BBB    II    RRR           DDD      DDD    AAAAA YY      YY
  BBB     BBBB     II    RR            DDD      DDD   AAAAAAA YY    YY
  BBBBBBBBBBB      II    RR            DDD      DDD  AA     AA YY  YY
  BBBBBBBBB        II    RR            DDD      DDD  AA     AA  YYYY
  BBBBBBBBBBB      II    RR            DDD      DDD  AAAAAAAAA   YYY
  BBB     BBBB    IIII  RRRR           DDD      DDD  AAAAAAAAA   YYY
  BB        BBB             HHH        DDD      DDD  AA     AA   YYY
  BB         BBB    TT     HHHH        DDD      DDD  AA     AA   YYY
  BB         BBB    TT     HH          DDD      DDD  AA     AA   YYY
  BB          BBB TTTTTT   HH          DDD      DDD  AA     AA   YYY
  BB          BBB   TT     HH          DDD      DDD              YYY
  BB          BBB   TT     HHHHHHHH  DDDDDDDDDDDDD               YYY
  BB         BBB    TT     HH     HH DDDDDDDDDDDD               YYYY
 BBBB       BBBB    TT     HH     HH                           YYYY
BBBBBBBBBBBBBBB     TT  TT HH     HH    YYYYYYYYYYYYYYYYYYYYYYYYYY
BBBBBBBBBBBBBB       TTTT  HH     HH    YYYYYYYYYYYYYYYYYYYYYYYY
                          HHHH   HHHH   YYYYYYYYYYYYYYYYYYYYYY
 1-Jan-84 19:02:41-EST,1482;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 1 Jan 84 19:02-EST
Date: Sunday, 1 January 1984, 19:04-EST
From: Kent M Pitman <kmp at MIT-MC>
Subject: New ZMail command idea: m-X Check For New Mail
To: BUG-LISPM at OZ

In ZMail in Symbolics Release 4.5 on MIT-Merlin (3600):

Is there a way to tell ZMail that I have noticed the new mail in
my inbox without reading it into ZMail? I like being notified of
new mail, and I don't even mind being notified more than once,
but I don't always want to gobble the new mail file, and if I
have already done (VIEWF inbox) or some such to see the mail by
another means, I find it very confusing to then be told I have
new mail. I would like to know only when the last update time of my
inbox changes again, in case I want to either read it into
ZMail or VIEWF it again or whatever. 

If there is no mechanism, I propose the following:

 m-X Check For New Mail

 Checks the last update time on the inbox against the last time
 the inbox was read or the last time this command was invoked 
 (whichever is most recent). If the inbox has not been modified in
 the interim, types out something like:
     "No new mail during this session."
  or "No new mail since <time>, when you last checked."
 If the inbox has been modified, types out something like:
     "New mail at <time>."

It should be possible to call this no matter what the current message
sequence since it does not modify any message sequence.
-kmp
 1-Jan-84 22:01:32-EST,2991;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 1 Jan 84 22:01-EST
Date: Sunday, 1 January 1984, 22:02-EST
From: Christopher C. Stacy <CStacy at MIT-MC>
Subject: TV:SET-DEFAULT-WINDOW-SIZE blows out in 4.5
To: BUG-LISPM at OZ

In Release 4.5, site configuration 78, Vanilla, on Lisp Machine Frank Sinatra:

In my login init file, I did:

#+3600 (tv:set-default-window-size 'zwei:zmacs-frame 
			           tv:main-screen
				   t
                                   ':width 1400.)

(Note: I used 1400 at someones suggestion that it was in the manual
that way.  When I used a width from (SEND TV:MAIN-SCREEN ':WIDTH) 
I got blown away by an "Attempt to change height" error; this problem
is not documented in this bug report.) 

although my window seems to have been changed to the requested full
screen size, here is what happenned with the args as shown:

>>Error: The argument CONDITION-NAME to MAKE-CONDITION, TV:BITBLT-COLUMN-OUT-OF-BOUNDS, was of the wrong type.
The function expected the name of a condition.
While in the function MAKE-CONDITION  DBG:GET-CONDITION  ERROR

MAKE-CONDITION:  (P.C. = 7)
   Arg 0 (CONDITION-NAME): TV:BITBLT-COLUMN-OUT-OF-BOUNDS
   Rest arg (INIT-OPTIONS): (COLUMN 2567 WIDTH 2300)

DBG:GET-CONDITION:  (P.C. = 10)
   Arg 0 (FLAVOR): TV:BITBLT-COLUMN-OUT-OF-BOUNDS
   Arg 1 (INIT-OPTIONS): (COLUMN 2567 WIDTH 2300)

ERROR:  (P.C. = 33)
   Arg 0 (FLAVOR): TV:BITBLT-COLUMN-OUT-OF-BOUNDS
   Rest arg (INIT-OPTIONS): (COLUMN 2567 WIDTH 2300)

SYS:%DRAW-RECTANGLE:  (P.C. = 221)
   Arg 0 (WIDTH): 1
   Arg 1 (HEIGHT): 1355
   Arg 2 (X): 2567
   Arg 3 (Y): 0
   Arg 4 (ALU): 2
   Arg 5 (SHEET): #<ZMACS-FRAME Zmacs Frame 1 3001105 deexposed>

(DEFUN-METHOD TV:ERASE-MARGINS):  (P.C. = 52)
   Arg 0 (SELF): #<ZMACS-FRAME Zmacs Frame 1 3001105 deexposed>
   Arg 1 (SELF-MAPPING-TABLE): TV:SHEET

(METHOD TV:SHEET CHANGE-OF-SIZE-OR-MARGINS):  (P.C. = 1133)
   Arg 0 (SELF): #<ZMACS-FRAME Zmacs Frame 1 3001105 deexposed>
   Arg 1 (SELF-MAPPING-TABLE): TV:SHEET
   Arg 2 (OPERATION): CHANGE-OF-SIZE-OR-MARGINS
   Rest arg (OPTIONS): (LEFT 0 TOP 0 WIDTH 2570 HEIGHT 1355)

(METHOD ZWEI:ZWEI-FRAME COMBINED CHANGE-OF-SIZE-OR-MARGINS):  (P.C. = 33)
   Arg 0 (SELF): #<ZMACS-FRAME Zmacs Frame 1 3001105 deexposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZWEI-FRAME -- 3. IV's, 8. FL's 61452517>
   Rest arg (.DAEMON-CALLER-ARGS.): (CHANGE-OF-SIZE-OR-MARGINS LEFT 0 TOP 0 WIDTH 2570 HEIGHT 1355)

(DEFUN-METHOD TV:SYSTEM-SET-EDGES):  (P.C. = 403)
   Arg 0 (SELF): #<ZMACS-FRAME Zmacs Frame 1 3001105 deexposed>
   Arg 1: #<Map to flavor TV:ESSENTIAL-SET-EDGES -- 0. IV's, 1. FL's 61452535>
   Arg 2 (OPERATION): SET-EDGES
   Arg 3 (NEW-LEFT): 0
   Arg 4 (NEW-TOP): 0
   Arg 5 (NEW-RIGHT): 2570
   Arg 6 (NEW-BOTTOM): 1355
   --Defaulted args:--
   Arg 7 (OPTION): NIL

Rest of stack:
(METHOD TV:ESSENTIAL-SET-EDGES SET-EDGES):  (P.C. = 10)
TV:SET-DEFAULT-WINDOW-SIZE:  (P.C. = 222)
 1-Jan-84 22:08:57-EST,4225;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 1 Jan 84 22:08-EST
Date: Sunday, 1 January 1984, 22:10-EST
From: Christopher C. Stacy <CStacy at MIT-MC>
Subject: follup to TV:SET-DEFAULT-WINDOW-SIZE bug.
To: BUG-LISPM at OZ

In Release 4.5, site configuration 78, Vanilla, on Lisp Machine Frank Sinatra:

Here is the other lossage mode.

>>Error: Attempt to change height
While in the function (DEFUN-METHOD TV:SYSTEM-SET-EDGES)  (METHOD TV:ESSENTIAL-SET-EDGES SET-EDGES)  (METHOD ZWEI:MODE-LINE-SUPERIOR-MIXIN AFTER CHANGE-OF-SIZE-OR-MARGINS)

(DEFUN-METHOD TV:SYSTEM-SET-EDGES):  (P.C. = 70)
   Arg 0 (SELF): #<TYPEIN-WINDOW Typein Window 2 3001347 deexposed>
   Arg 1: #<Map to flavor TV:ESSENTIAL-SET-EDGES -- 0. IV's, 1. FL's 61367736>
   Arg 2 (OPERATION): SET-EDGES
   Arg 3 (NEW-LEFT): 2
   Arg 4 (NEW-TOP): 21
   Arg 5 (NEW-RIGHT): 2074
   Arg 6 (NEW-BOTTOM): 76
   --Defaulted args:--
   Arg 7 (OPTION): NIL
   Local 8 (NEW-WIDTH): 2072
   Local 9 (NEW-HEIGHT): 55
   Local 10 (ERROR): "Attempt to change height"
   Local 11 (WINDOW-TO-BE-DEEXPOSED): NIL
   Local 12 (.QUEUE-LEFT.): T
   Local 13: T
   Local 14: #<DTP-ODD-PC 13302671>
   Local 15: #<DTP-LOCATIVE 700126>
   Local 16: #<DTP-LOCATIVE 101170>
   Local 17: #<DTP-LOCATIVE 700126>
   Local 18: T
   Local 19: #<DTP-ODD-PC 13302710>
   Local 20: #<DTP-LOCATIVE 700126>
   Local 21: #<DTP-LOCATIVE 101314>
   Local 22 (INHIBIT-SCREEN-MANAGEMENT-initialization): T
   Local 23 (SCREEN-MANAGER-TOP-LEVEL-initialization): NIL
   Local 24 (DONE): NIL
   Local 25 (RESULT): NIL

(METHOD TV:ESSENTIAL-SET-EDGES SET-EDGES):  (P.C. = 10)
   Arg 0 (SELF): #<TYPEIN-WINDOW Typein Window 2 3001347 deexposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:ESSENTIAL-SET-EDGES -- 0. IV's, 1. FL's 61367736>
   Arg 2 (OPERATION): SET-EDGES
   Rest arg (.ARGS.): (2 21 2074 76)

(METHOD ZWEI:MODE-LINE-SUPERIOR-MIXIN AFTER CHANGE-OF-SIZE-OR-MARGINS):  (P.C. = 23)
   Arg 0 (SELF): #<ZMACS-MODE-LINE-WINDOW Zmacs Mode Line Window 2 3001165 deexposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:MODE-LINE-SUPERIOR-MIXIN -- 4. IV's, 0. FL's 61376151>
   Arg 2 (OPERATION): CHANGE-OF-SIZE-OR-MARGINS
   Rest arg (IGNORE): (LEFT 1 TOP 1254 WIDTH 2076 HEIGHT 100)

(METHOD ZWEI:ZMACS-MODE-LINE-WINDOW COMBINED CHANGE-OF-SIZE-OR-MARGINS):  (P.C. = 41)
   Arg 0 (SELF): #<ZMACS-MODE-LINE-WINDOW Zmacs Mode Line Window 2 3001165 deexposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMACS-MODE-LINE-WINDOW -- 0. IV's, 11. FL's 61376114>
   Rest arg (.DAEMON-CALLER-ARGS.): (CHANGE-OF-SIZE-OR-MARGINS LEFT 1 TOP 1254 WIDTH 2076 HEIGHT 100)

(DEFUN-METHOD TV:SYSTEM-SET-EDGES):  (P.C. = 403)
   Arg 0 (SELF): #<ZMACS-MODE-LINE-WINDOW Zmacs Mode Line Window 2 3001165 deexposed>
   Arg 1: #<Map to flavor TV:ESSENTIAL-SET-EDGES -- 0. IV's, 1. FL's 61376164>
   Arg 2 (OPERATION): SET-EDGES
   Arg 3 (NEW-LEFT): 1
   Arg 4 (NEW-TOP): 1254
   Arg 5 (NEW-RIGHT): 2077
   Arg 6 (NEW-BOTTOM): 1354
   --Defaulted args:--
   Arg 7 (OPTION): NIL

(METHOD TV:ESSENTIAL-SET-EDGES SET-EDGES):  (P.C. = 10)
   Arg 0 (SELF): #<ZMACS-MODE-LINE-WINDOW Zmacs Mode Line Window 2 3001165 deexposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:ESSENTIAL-SET-EDGES -- 0. IV's, 1. FL's 61376164>
   Arg 2 (OPERATION): SET-EDGES
   Rest arg (.ARGS.): (1 1254 2077 1354)

(METHOD ZWEI:ZWEI-FRAME AFTER CHANGE-OF-SIZE-OR-MARGINS):  (P.C. = 230)
   Arg 0 (SELF): #<ZMACS-FRAME Zmacs Frame 1 3001105 deexposed>
   Arg 1: #<Map to flavor ZWEI:ZWEI-FRAME -- 3. IV's, 8. FL's 61452517>
   Arg 2 (OPERATION): CHANGE-OF-SIZE-OR-MARGINS
   Rest arg (IGNORE): (LEFT 0 TOP 0 WIDTH 2100 HEIGHT 1355)

(METHOD ZWEI:ZWEI-FRAME COMBINED CHANGE-OF-SIZE-OR-MARGINS):  (P.C. = 44)
   Arg 0 (SELF): #<ZMACS-FRAME Zmacs Frame 1 3001105 deexposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZWEI-FRAME -- 3. IV's, 8. FL's 61452517>
   Rest arg (.DAEMON-CALLER-ARGS.): (CHANGE-OF-SIZE-OR-MARGINS LEFT 0 TOP 0 WIDTH 2100 HEIGHT 1355)

Rest of stack:
(DEFUN-METHOD TV:SYSTEM-SET-EDGES):  (P.C. = 403)
(METHOD TV:ESSENTIAL-SET-EDGES SET-EDGES):  (P.C. = 10)
TV:SET-DEFAULT-WINDOW-SIZE:  (P.C. = 222)
 2-Jan-84 02:57:18-EST,339;000000000000
Mail-From: RMS created at  2-Jan-84 02:57:06
Date: Mon 2 Jan 84 02:57:06-EST
From: RMS@MIT-OZ
Subject: Bug reports
To: bug-lispm-mit@MIT-OZ

Please don't send any more Lisp machine bug reports to me;
send them to BUG-LISPM-MIT.  I no longer work for MIT and I
will only be helping to fix serious bugs that MLY can't fix.
-------
 2-Jan-84 12:47:25-EST,1701;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 2 Jan 84 12:47-EST
Received: from SCRC-HARLEM by SCRC-QUABBIN with CHAOS; Mon 2-Jan-84 12:49:06-EST
Date: Mon, 2 Jan 84 12:48 EST
From: Joseph R Goldstone <joseph%SCRC-QUABBIN@MIT-MC.ARPA>
Subject: TV:SET-DEFAULT-WINDOW-SIZE blows out in 4.5
To: "/"Christopher C. Stacy/"" <CStacy@MIT-MC.ARPA>
Cc: BUG-LISPM@MIT-OZ.ARPA
In-reply-to: The message of 1 Jan 84 22:02-EST from "Christopher C. Stacy" <CStacy at MIT-MC>

    Date: Sunday, 1 January 1984, 22:02-EST
    From: Christopher C. Stacy <CStacy at MIT-MC>
    In Release 4.5, site configuration 78, Vanilla, on Lisp Machine Frank Sinatra:

    In my login init file, I did:

    #+3600 (tv:set-default-window-size 'zwei:zmacs-frame 
				       tv:main-screen
				       t
				       ':width 1400.)

    Note: I used 1400 at someones suggestion that it was in the manual that way.
The someone was me.  The suggestion text, from my converse buffer: 
"the 4.3 patch notes example says "':width 1400" where i said 
 "':width (send tv:main-screen ':width)".".

I should have come out of "deep background" mode and told you 1400 octal.  Just
for the record the example i cited as being on p.8 of the 4.3 notes shows it in octal.

    although my window seems to have been changed to the requested full
    screen size, here is what happenned with the args as shown:

    >>Error: The argument CONDITION-NAME to MAKE-CONDITION, TV:BITBLT-COLUMN-OUT-OF-BOUNDS, was of the wrong type.
    The function expected the name of a condition.
    While in the function MAKE-CONDITION  DBG:GET-CONDITION  ERROR
In release 5 you would get a reasonable error message i believe.
 2-Jan-84 12:49:56-EST,1724;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 2 Jan 84 12:49-EST
Date: Monday, 2 January 1984, 12:51-EST
From: Kent M Pitman <kmp at MIT-MC>
Subject: (TIME:PARSE "Christmas 1985") >>Error: Hour specified twice.
To: BUG-LISPM at OZ

In Symbolics Release 4.5 on PA Lisp Machine Avatar (CADR):

(TIME:PARSE "Christmas 1985")

>>Error: Hour specified twice.
While in the function TIME:BARF  TIME:SET-HHMM  G4426

TIME:BARF:  (P.C. = 45)
   Arg 0 (FORMAT-STRING): "Hour specified twice."
   Rest arg (FORMAT-ARGS): NIL

TIME:SET-HHMM:  (P.C. = 40)
   Arg 0 (TIME): (1985. 4.)

G4426:  (P.C. = 22)
   Arg 0 (HHMM): (1985. 4.)

TIME:PATTERN-INVOKE:  (P.C. = 63)
   Arg 0 (PATTERN): NIL
   Arg 1 (TOKEN-LIST): NIL
   Arg 2 (FUNCTION): G4426
   Arg 3 (PASS-ARGUMENTS): T

TIME:PARSE-1:  (P.C. = 66)
   Arg 0 (TOKEN-LIST): (TIME:CHRISTMAS (1985. 4.))
   Arg 1 (INITIAL-STATE): TIME:MAIN

TIME:PARSE-UNIVERSAL-TIME:  (P.C. = 520)
   Arg 0 (*TIME-BEING-PARSED*): "Christmas 1985"
   Arg 1 (START): 0.
   Arg 2 (END): 14.
   Arg 3 (FUTUREP): T
   Arg 4 (BASE-TIME): NIL
   Arg 5 (MUST-HAVE-TIME): NIL
   Arg 6 (DATE-MUST-HAVE-YEAR): NIL
   Arg 7 (TIME-MUST-HAVE-SECOND): NIL
   Arg 8 (DAY-MUST-BE-VALID): T

TIME:PARSE:  (P.C. = 116)
   Arg 0 (STRING): "Christmas 1985"
   --Defaulted args:--
   Arg 1 (START): 0.
   Arg 2 (END): NIL
   Arg 3 (FUTUREP): T
   Arg 4 (BASE-TIME): NIL
   Arg 5 (MUST-HAVE-TIME): NIL
   Arg 6 (DATE-MUST-HAVE-YEAR): NIL
   Arg 7 (TIME-MUST-HAVE-SECOND): NIL
   Arg 8 (DAY-MUST-BE-VALID): T

SI:*EVAL:  (P.C. = 653)
   Arg 0 (FORM): (TIME:PARSE "Christmas 1985")

Rest of stack:
SI:LISP-TOP-LEVEL1:  (P.C. = 210)
SI:LISP-TOP-LEVEL:  (P.C. = 35)
 2-Jan-84 18:15:49-EST,691;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 2 Jan 84 18:15-EST
Date: Monday, 2 January 1984, 18:17-EST
From: Christopher C. Stacy <CStacy at MIT-MC>
Subject: latest TV;SET-DEFAULT-WINDOW-SIZE experiment
To: BUG-LISPM at MIT-MC


I tried TV:SET-DEFAULT-WINDOW-SIZE on a different machine in a different
band (same release version though) and with 1400 octal, although I don't
see why I should use this random constant.  Apparently the window system
didn't see why either, since the machine crashed into the FEP.

If this just doesn't work in Release 4.5, it would be good if someone
would tell me so I can conditionalize it out of my init file and
finish logging in someday.
 2-Jan-84 21:58:35-EST,1201;000000000000
Received: from MIT-LISPM-1 by MIT-OZ via Chaosnet; 2 Jan 84 21:58-EST
Date: Monday, 2 January 1984, 21:58-EST
From: Robert P. Krajewski <RpK at MIT-OZ>
Subject: Compiler (optimsisation) bug
To: BUG-LispM-MIT at MIT-OZ
FCC: OZ:PS:<RPK.MAIL>CC.XMAIL
Message-ID: <[MIT-LISPM-1].1/02/84 21:58:43.RpK>

In LispM-MIT in Don't-dump-a-band! Inconsistent (unreleased patches loaded) System 98.20,
CADR 3.4, Inconsistent (unreleased patches loaded) ZMail 53.9,
MIT-Specific 22.0, microcode 305, ZM MIT, on Lisp Machine One:

(DEFUN SARTRE (X) (SETQ X X))

(SARTE 4) => 4

(COMPILE 'SARTRE)

SARTRE disassembles as:

16 MOVE D-RETURN 'NIL

(SARTRE 4) => NIL

Yuck !  SETQing COMPILER:PEEP-ENABLE to NIL doesn't seem to help any.

Shouldn't the (source-level) optimiser for SETQ do the following (or something
like it) ?

(DEFUN OPTIMIZE-SETQ (FORM)
  "Works only in the simple case of one variable and one value."
  (IF (EQ (SECOND FORM) (THIRD FORM))	; assuming (SECOND FORM) is a symbol
      (IF COMPILER:COMPILING-FOR-VALUE	; or whatever it is...
	  (SECOND FORM) 		; must return value
	:THERE-USED-TO-BE-A-SETQ-HERE)	; should get compiled out later
    FORM))

``Bob''
 2-Jan-84 23:24:10-EST,927;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 2 Jan 84 23:23-EST
Date: Monday, 2 January 1984, 23:23-EST
From: Kent M Pitman <KMP at MIT-MC>
Subject: CAR of a locative?
To: BUG-LISPM at MIT-OZ

In Experimental System 98.8, CADR 3.2, Experimental ZMail 53.5,
MIT-Specific 22.0, microcode 305, ZM MIT, on Lisp Machine Nine:

(MACROEXPAND '(WITH-LOCK (FOO) (SOME-FUNCTION-CALL)))
   (LET* ((SI:POINTER (LOCF FOO))
	   (SI:ALREADY-MINE (EQ (CAR SI:POINTER) CURRENT-PROCESS)))
      (UNWIND-PROTECT (PROGN (IF SI:ALREADY-MINE
				 NIL
			       (OR (%STORE-CONDITIONAL SI:POINTER NIL CURRENT-PROCESS)
				   (PROCESS-LOCK SI:POINTER)))
			     (SOME-FUNCTION-CALL))
	(UNLESS SI:ALREADY-MINE
	  (%STORE-CONDITIONAL SI:POINTER CURRENT-PROCESS NIL))))

SI:ALREADY-MINE should be getting set to (EQ (CDR SI:POINTER) CURRENT-PROCESS),
not (EQ (CAR ...) ...). The case where CAR loses is when SI:POINTER is a list.
 2-Jan-84 23:24:38-EST,937;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 2 Jan 84 23:23-EST
Date: Monday, 2 January 1984, 23:24-EST
From: Kent M Pitman <KMP at MIT-MC>
Subject: CAR of a locative?
To: BUG-LISPM at MIT-OZ

In Experimental MIT System 98.8, CADR 3.2, Experimental ZMail 53.5,
MIT-Specific 22.0, microcode 305, ZM MIT, on Lisp Machine Nine:

(MACROEXPAND '(WITH-LOCK (FOO) (SOME-FUNCTION-CALL)))
   (LET* ((SI:POINTER (LOCF FOO))
	   (SI:ALREADY-MINE (EQ (CAR SI:POINTER) CURRENT-PROCESS)))
      (UNWIND-PROTECT (PROGN (IF SI:ALREADY-MINE
				 NIL
			       (OR (%STORE-CONDITIONAL SI:POINTER NIL CURRENT-PROCESS)
				   (PROCESS-LOCK SI:POINTER)))
			     (SOME-FUNCTION-CALL))
	(UNLESS SI:ALREADY-MINE
	  (%STORE-CONDITIONAL SI:POINTER CURRENT-PROCESS NIL))))

SI:ALREADY-MINE should be getting set to (EQ (CDR SI:POINTER) CURRENT-PROCESS),
not (EQ (CAR ...) ...). The case where CAR loses is when SI:POINTER is a list.
-kmp
 2-Jan-84 23:27:37-EST,770;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 2 Jan 84 23:26-EST
Date: Monday, 2 January 1984, 23:27-EST
From: Kent M Pitman <KMP at MIT-MC>
To: BUG-LISPM at MIT-OZ

In Experimental MIT System 98.8, CADR 3.2, Experimental ZMail 53.5,
MIT-Specific 22.0, microcode 305, ZM MIT, on Lisp Machine Nine:

I did (BUG) to send a bug report, typed my report, and then hit End.
It sent the message, but then left me in the editor in the *Mail-1*
buffer. In fact, I thought it hadn't sent the message, so I hit end
again causing a redundant bug report. At the very least, it should
have selected *Buffer-1* when it was done and/or told me that it had
mailed the message, but I'd prefer it remembered that I somehow got
returned to the context where I invoked (BUG).
 2-Jan-84 23:30:11-EST,814;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 2 Jan 84 23:29-EST
Date: Monday, 2 January 1984, 23:30-EST
From: Kent M Pitman <KMP at MIT-MC>
To: BUG-LISPM at MIT-OZ

In Experimental MIT System 98.8, CADR 3.2, Experimental ZMail 53.5,
MIT-Specific 22.0, microcode 305, ZM MIT, on Lisp Machine Nine:

Typing m-X Lisp {return} doesn't work because m-X Lisp Lowercase Region
and m-X Lisp Uppercase Region are ambiguous with m-X Lisp Mode, which
is what I wanted. I suggest that m-X Lisp Lower/Uppercase Region be
renamed to m-X Lower/Uppercase Lisp Region to avoid this problem. I
also suggest, as I did in a Brand S bug report a couple weeks ago, that
c-X c-L and c-X c-U do m-X Lisp Lower/Uppercase Region when given a 
numeric arg so that you don't ever have to type their names explicitly 
anyway.
 2-Jan-84 23:34:17-EST,1019;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 2 Jan 84 23:33-EST
Date: Monday, 2 January 1984, 23:34-EST
From: Kent M Pitman <KMP at MIT-MC>
To: BUG-LISPM at MIT-OZ

In Experimental MIT System 98.8, CADR 3.2, Experimental ZMail 53.5,
MIT-Specific 22.0, microcode 305, ZM MIT, on Lisp Machine Nine:

Here I am still stuck in *Mail-1* because when I type End at the end
of these bug reports, this buffer doesn't go away. Even if I hit
Abort, it says it is killing the current buffer and wants to know what
other buffer to use. And even though there is only one other buffer
(*Buffer-1*), it cannot seem to offer an intelligent default. If I
type Return without having typed any buffer name, it just beeps.

Not only that, but if I type Abort now that I have started this message,
it just tells me I can continue by typing a numeric arg to Control-X M,
then leaves me in *Mail-1*. It might as well have just typed out
"To continue, just keep typing since I'm not going to let you out of 
this buffer."
 3-Jan-84 02:06:56-EST,615;000000000000
Received: from MIT-BUDDY by MIT-OZ via Chaosnet; 3 Jan 84 02:05-EST
Date: Tuesday, 3 January 1984, 02:07-EST
From: Ken Haase <KWH at MIT-OZ>
Subject: File names from DEFSYSTEM
To: BUG-LISPM at MIT-OZ

In Release 5.0 [GC'd Beta Test rev 3], Experimental ARLO 9.0, dusty plum, on Lisp Machine Buddy Holly (3600):

Why doesn't DEFSYSTEM use the :SHORT-NAME of a system for
generating file names?  I like having a long system name
-- with spaces and other random punctuation -- but don't
like to type long file names, or to hear VMS complaining
when I try to write these punctuated files out to it.

Ken
 3-Jan-84 02:14:47-EST,7240;000000000000
Received: from MIT-LISPM-1 by MIT-OZ via Chaosnet; 3 Jan 84 02:13-EST
Date: Tuesday, 3 January 1984, 02:14-EST
From: Robert P. Krajewski <RpK at MIT-OZ>
Subject: Can't copy a file from OZ: to FC:
To: BUG-LispM-MIT at MIT-OZ

In Don't-dump-a-band! Inconsistent (unreleased patches loaded) System 98.20,
CADR 3.4, Inconsistent (unreleased patches loaded) ZMail 53.9,
MIT-Specific 22.0, Experimental Local-File 48.0,
Experimental MagTape 20.0, microcode 305, ZM MIT, on Lisp Machine One:

Maybe the byte size should not be forced from the old file if it is a
character file ?  But would not all character files as seen from a Lisp
Machine have :BYTE-SIZE of 8 and not 7 ??

>>ERROR: The byte size 7 is impossible for FC: L\SYS; CADRLP#147
Backtrace from the debugger:

OPEN-CHAOS (P.C. = 1506)

 Arg 0 (HOST): #LMFILE-CHAOS-HOST "FC"
 Arg 1 (PATHNAME): #FS:LMFILE-PATHNAME "FC: L\SYS; CADRLP#147"
 Rest arg (OPTIONS): (:DIRECTION :OUTPUT :CHARACTERS T ...)
Local 1 (DIRECTION): :OUTPUT
Local 2 (CHARACTERS): T
Local 3 (ERROR): T
Local 4 (ACCESS-ERROR): NIL
Local 5 (ELEMENT-TYPE): STRING-CHAR
Local 6 (IF-EXISTS): :ERROR
Local 7 (IF-DOES-NOT-EXIST): :CREATE
Local 8 (TEMPORARY): NIL
Local 9 (DELETED): NIL
Local 10 (RAW): NIL
Local 11 (SUPER-IMAGE): NIL
Local 12 (BYTE-SIZE): 7
Local 13 (PRESERVE-DATES): NIL
Local 14 (INHIBIT-LINKS): NIL
Local 15 (ELEMENT-TYPE-P): NIL
Local 16 (HOST-UNIT): #<HOST-UNIT 34240776>
Local 17 (DATA-CONN): (#<CHAOS Connection 3230626> "I1439" "O1440" 14535030 ...)
Local 18 (PKT): #<CHAOS packet. PKT-STRING "T1442 O1440 ERROR UOO F The byte size 7 is impossible" PKT-STATUS NIL 37305717>
Local 19 (SUCCESS): NIL
Local 20 (STRING): "O1440 ERROR UOO F The byte size 7 is impossible"
Local 21 (NOT-ABORTED): T
Local 22 (PHONY-CHARACTERS): NIL
Local 23 (SIGN-EXTEND-BYTES): NIL
Local 24 (IF-EXISTS-P): T
Local 25 (ERROR-OBJECT): (#<CHAOS Connection 3230626> "I1439" "O1440" 14535030 ...)
Local 26: ((FILE-NOT-FOUND SI:CONDITION-CASE-THROW USER:G2794) (DIRECTORY-NOT-FOUND #<DTP-STACK-CLOSURE 4327323>) (** SI:EVAL-ABORT-TRIVIAL-ERRORS-HANDLER))
Local 27: (FILE-NOT-FOUND SI:CONDITION-CASE-THROW USER:G2794)
Local 28: (FILE-ALREADY-EXISTS SI:CONDITION-CASE-THROW USER:G2801)
Local 29: ((FILE-ALREADY-EXISTS SI:CONDITION-CASE-THROW USER:G2801) (DIRECTORY-NOT-FOUND #<DTP-STACK-CLOSURE 4327323>) (** SI:EVAL-ABORT-TRIVIAL-ERRORS-HANDLER))
Local 30 (*SELECTQ-ITEM*): NIL
Local 31 (PROPERTIES): NIL
Local 32 (CLOSE-SUCCESS): NIL
Local 33 (ERROR-OBJECT): NIL
Local 34 (IGNORE): NIL


(:METHOD CHAOS-PATHNAME :OPEN) (P.C. = 31)
  (SELF is #FS:LMFILE-PATHNAME "FC: L\SYS; CADRLP#147")

 Arg 0 (OPERATION): :OPEN
 Arg 1 (PATHNAME): #FS:LMFILE-PATHNAME "FC: L\SYS; CADRLP#147"
 Rest arg (OPTIONS): (:DIRECTION :OUTPUT :CHARACTERS T ...)


OPEN (P.C. = 212)

 Arg 0 (FILENAME): #FS:LMFILE-PATHNAME "FC: L\SYS; CADRLP#147"
 Rest arg (KEYWORD-ARGS): (:DIRECTION :OUTPUT :CHARACTERS T ...)
Local 1: ((FILE-ERROR) SI:FILE-RETRY-HANDLER #FS:LMFILE-PATHNAME "FC: L\SYS; CADRLP#147")
Local 2: ((** SI:FILE-RETRY-HANDLER #FS:LMFILE-PATHNAME "FC: L\SYS; CADRLP#147") (DIRECTORY-NOT-FOUND #<DTP-STACK-CLOSURE 4327323>) (** SI:EVAL-ABORT-TRIVIAL-ERRORS-HANDLER))
Local 3 (NEW-PATHNAME): NIL
Local 4 (KEYL): NIL
Local 5 (KEY): NIL
Local 6 (CHARACTERS): NIL
Local 7 (DIRECTION): NIL
Local 8 (BYTE-SIZE): NIL
Local 9 (ERROR-P): NIL
Local 10 (ERROR-P-SPECD): NIL
Local 11 (DELETED-P): NIL
Local 12 (TEMPORARY-P): NIL
Local 13 (RAW-P): NIL
Local 14 (SUPER-IMAGE-P): NIL


PRIMITIVE-COPY-FILE (P.C. = 643)

 Arg 0 (INPUT-PLIST-OR-PATHNAME): (#FS:TOPS20-PATHNAME "OZ:SRC:<L.SYS>CADRLP.LISP.147" :PROTECTION "777777" :GENERATION-RETENTION-COUNT ...)
 Arg 1 (MAPPED-PATHNAME): #FS:TOPS20-PATHNAME "OZ:SRC:<L.SYS>*.LISP"
 Arg 2 (OUTPUT-SPEC): #FS:LMFILE-PATHNAME "FC: l\sys;"
 Rest arg: NIL
Local 1 (ERROR): T
Local 2 (COPY-CREATION-DATE): T
Local 3 (COPY-AUTHOR): T
Local 4 (REPORT-STREAM): NIL
Local 5 (CREATE-DIRECTORIES): :QUERY
Local 6 (CHARACTERS): :DEFAULT
Local 7 (BYTE-SIZE): 7
Local 8 (INTYPE): NIL
Local 9 (INPUT-PLIST): (#FS:TOPS20-PATHNAME "OZ:SRC:<L.SYS>CADRLP.LISP.147" :PROTECTION "777777" :GENERATION-RETENTION-COUNT ...)
Local 10 (INPUT-PATHNAME): #FS:TOPS20-PATHNAME "OZ:SRC:<L.SYS>CADRLP.LISP.147"
Local 11 (INPUT-TRUENAME): #FS:TOPS20-PATHNAME "OZ:SRC:<L.SYS>CADRLP.LISP.147"
Local 12 (BYTE-SIZE): 7
Local 13 (CHARACTERS?): T
Local 14: ((FILE-ERROR REMOTE-NETWORK-ERROR) SI:CONDITION-CASE-THROW USER:G1455)
Local 15: ((** SI:CONDITION-CASE-THROW USER:G1455) (** SI:EVAL-ABORT-TRIVIAL-ERRORS-HANDLER))
Local 16: #<FILE-INPUT-CHARACTER-STREAM "OZ:SRC:<L.SYS>CADRLP.LISP.147" 37316106>
Local 17 (.FILE-ABORTED-FLAG.): :ABORT
Local 18 (INSTREAM): #<FILE-INPUT-CHARACTER-STREAM "OZ:SRC:<L.SYS>CADRLP.LISP.147" 37316106>
Local 19 (DEFAULTED-NEW-NAME): #FS:LMFILE-PATHNAME "FC: L\SYS; CADRLP#147"
Local 20: (DIRECTORY-NOT-FOUND #<DTP-STACK-CLOSURE 4327323>)
Local 21: ((DIRECTORY-NOT-FOUND #<DTP-STACK-CLOSURE 4327323>) (** SI:EVAL-ABORT-TRIVIAL-ERRORS-HANDLER))
Local 22: NIL
Local 23 (.FILE-ABORTED-FLAG.): :ABORT
Local 24 (OUTSTREAM): NIL
Local 25 (ERROR): NIL
Local 26 (*SELECTQ-ITEM*): NIL


(:METHOD PATHNAME :WILDCARD-MAP) (P.C. = 101)
  (SELF is #FS:TOPS20-PATHNAME "OZ:SRC:<L.SYS>*.LISP")

 Arg 0 (OPERATION): :WILDCARD-MAP
 Arg 1 (OPERATION): #<DTP-FEF-POINTER PRIMITIVE-COPY-FILE 30466010>
 Arg 2 (PLISTP): :MAYBE
 Arg 3 (DIR-LIST-OPTIONS): NIL
 Rest arg (ARGS): (#FS:TOPS20-PATHNAME "OZ:SRC:<L.SYS>*.LISP" #FS:LMFILE-PATHNAME "FC: l\sys;")
Local 1 (DLIST): ((NIL :PATHNAME #FS:TOPS20-PATHNAME "OZ:SRC:<L.SYS>*.LISP" :SETTABLE-PROPERTIES ...) (#FS:TOPS20-PATHNAME "OZ:SRC:<L.SYS>CADRLP.LISP.147" :PROTECTION "777777" :GENERATION-RETENTION-COUNT ...) (#FS:TOPS20-PATHNAME "OZ:SRC:<L.SYS>CADSYM.LISP.24" :PROTECTION "777777" :GENERATION-RETENTION-COUNT ...) (#FS:TOPS20-PATHNAME "OZ:SRC:<L.SYS>CDMP.LISP.49" :PROTECTION "777777" :GENERATION-RETENTION-COUNT ...) ...)
Local 2 (RESULTS): NIL
Local 3: ((#FS:TOPS20-PATHNAME "OZ:SRC:<L.SYS>CADRLP.LISP.147" :PROTECTION "777777" :GENERATION-RETENTION-COUNT ...) (#FS:TOPS20-PATHNAME "OZ:SRC:<L.SYS>CADSYM.LISP.24" :PROTECTION "777777" :GENERATION-RETENTION-COUNT ...) (#FS:TOPS20-PATHNAME "OZ:SRC:<L.SYS>CDMP.LISP.49" :PROTECTION "777777" :GENERATION-RETENTION-COUNT ...) (#FS:TOPS20-PATHNAME "OZ:SRC:<L.SYS>CLPACK.LISP.111" :PROTECTION "777777" :GENERATION-RETENTION-COUNT ...) ...)
Local 4 (DLIST-ENTRY): (#FS:TOPS20-PATHNAME "OZ:SRC:<L.SYS>CADRLP.LISP.147" :PROTECTION "777777" :GENERATION-RETENTION-COUNT ...)
Local 5 (RESULT): NIL


Remainder of stack:

COPY-FILE (P.C. = 230)
SI:EVAL1 (P.C. = 1324)
SI:EVAL-ABORT-TRIVIAL-ERRORS (P.C. = 61)
BREAK (P.C. = 623)
ZWEI:COM-BREAK (P.C. = 44)
ZWEI:COMMAND-EXECUTE (P.C. = 115)
ZWEI:PROCESS-COMMAND-CHAR (P.C. = 65)
(:METHOD ZWEI:WINDOW :EDIT) (P.C. = 464)
(:INTERNAL (:METHOD ZWEI:ZMACS-WINDOW :COMBINED :EDIT) 0) (P.C. = 74)
FUNCALL (P.C. = 25)
(:METHOD ZWEI:DISPLAYER :AROUND :EDIT) (P.C. = 31)
(:METHOD ZWEI:ZMACS-WINDOW :COMBINED :EDIT) (P.C. = 47)
ZWEI:ZMACS-WINDOW-TOP-LEVEL (P.C. = 46)
SI:PROCESS-TOP-LEVEL (P.C. = 246)
 3-Jan-84 15:29:22-EST,1401;000000000000
Received: from SCRC-YUKON by MIT-OZ via Chaosnet; 3 Jan 84 15:28-EST
Received: from SCRC-NEPONSET by SCRC-YUKON with CHAOS; Tue 3-Jan-84 15:29:21-EST
Date: Tuesday, 3 January 1984, 15:29-EST
From:  <mmcm at SCRC-TENEX>
Subject: New ZMail command idea: m-X Check For New Mail
To: Kent M Pitman <kmp at MIT-MC>
Cc: BUG-LISPM at MIT-OZ
In-reply-to: The message of 1 Jan 84 19:04-EST from Kent M Pitman <kmp at MIT-MC>
Message-ID: <840103152951.4.mmcm@SCRC.SCRC.Symbolics>

    Date: Sunday, 1 January 1984, 19:04-EST
    From: Kent M Pitman <kmp at MIT-MC>

    In ZMail in Symbolics Release 4.5 on MIT-Merlin (3600):

    Is there a way to tell ZMail that I have noticed the new mail in
    my inbox without reading it into ZMail? I like being notified of
    new mail, and I don't even mind being notified more than once,
    but I don't always want to gobble the new mail file, and if I
    have already done (VIEWF inbox) or some such to see the mail by
    another means, I find it very confusing to then be told I have
    new mail. I would like to know only when the last update time of my
    inbox changes again, in case I want to either read it into
    ZMail or VIEWF it again or whatever. 

Are you saying that you receive more than one notification for the same
new mail?  Or only that you don't like the one notification for the mail
you saw in another process?
 4-Jan-84 07:51:26-EST,1299;000000000000
Received: from MIT-LISPM-2 by MIT-OZ via Chaosnet; 4 Jan 84 07:51-EST
Date: Wednesday, 4 January 1984, 07:51-EST
From: Kim A. Barrett <kab at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In Don't-dump-a-band! Inconsistent (unreleased patches loaded) System 98.25,
CADR 3.4, ZMail 53.9, MIT-Specific 22.0, microcode 306, ZM MIT,
on Lisp Machine Two:

problems writing files to FS: (cadr-27 running system 98 and new file server):

  attempting to save an editor buffer (ctrl-s, etc.), starts writing file but unable to
continue (no error, just sits there) after writing 6832 characters (this number was constant
on every attempt).  ctrl-abort to get out of it and file doesn't get closed & deleted as it
normally used to (on old version of fs:). fs:close-all-files unable to close (again, no error,
just sits there).  after some long period of time (> an hour) file finally went away of its
own accord.

  all the above occured in an identical fashion on both this machine and on cadr-24, which was
running system 97.


  qc-file of a small file appeared to be working fine until it reached the point of closing
the new qfasl file, where it stopped (again, no error, just sits there).  in this case, after
aborting, fs:close-all-files worked.  i only tried this while running system 98.
 4-Jan-84 08:28:25-EST,541;000000000000
Received: from MIT-LISPM-2 by MIT-OZ via Chaosnet; 4 Jan 84 08:28-EST
Date: Wednesday, 4 January 1984, 08:28-EST
From: Kim A. Barrett <kab at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In Don't-dump-a-band! Inconsistent (unreleased patches loaded) System 98.25,
CADR 3.4, ZMail 53.9, MIT-Specific 22.0, microcode 306, ZM MIT,
on Lisp Machine Two:

the format directive ~D does not convert its arg to an integer before printing, though the
manual describes it as doing so.
  (format nil "~D" 3.5) => "3.5"
  (format nil "~D" 3\2) => "3\2"
 4-Jan-84 17:55:15-EST,3902;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 4 Jan 84 17:44-EST
Date: 4 January 1984 17:46 EST
From: Kent M Pitman <KMP @ MIT-MC>
Subject:  Bad problems with G, Q, etc and clarifications about m-X Check For New Mail
To: MMcM @ SCRC-TENEX
cc: BUG-LISPM @ MIT-MC, KMP @ MIT-MC
References: Msg of Sun, 1 Jan 84, 19:04-EST from Kent M Pitman <kmp at MIT-MC>,
	    <840103152951.4.mmcm@SCRC.SCRC.Symbolics>

    Date: Tue, 3 Jan 84 15:29 EST
    From: <mmcm%SCRC-TENEX at MIT-MC.ARPA>
    Message-ID: <840103152951.4.mmcm@SCRC.SCRC.Symbolics>

        Date: Sunday, 1 January 1984, 19:04-EST
        From: Kent M Pitman <kmp at MIT-MC>

        In ZMail in Symbolics Release 4.5 on MIT-Merlin (3600):

        Is there a way to tell ZMail that I have noticed the new mail in
        my inbox without reading it into ZMail? I like being notified of
        new mail, and I don't even mind being notified more than once,
        but I don't always want to gobble the new mail file, and if I
        have already done (VIEWF inbox) or some such to see the mail by
        another means, I find it very confusing to then be told I have
        new mail. I would like to know only when the last update time of my
        inbox changes again, in case I want to either read it into
        ZMail or VIEWF it again or whatever. 

    Are you saying that you receive more than one notification for the same
    new mail?  Or only that you don't like the one notification for the mail
    you saw in another process?

The former. I get many notifications for the same piece of mail. They come
several minutes apart. I go and VIEWF the new mail and then come back and
a few minutes later it tells me again a while later that there is new mail 
and I go and VIEWF it only to find there is not any new mail.

In case you are curious, the reason I have to VIEWF the mail (instead of
just G'ing it) has to do with the following heavy potential for horrible
timing error which I have reported before and which, to my knowledge, is 
not fixed in any current system:

	* Read MC:KMP;KMP BABYL.
	* Read MC:KMP;KMP XMAIL.
	* Move half the messages from KMP;KMP BABYL to KMP;KMP XMAIL.
	  Note that this is done only virtually (in core, not on disk).
	* New mail arrives, but I cannot G it, because:

If I do, then it will try to write back MC:KMP;KMP BABYL. If my machine
then crashes, I lose all the mail that was virtually moved to 
MC:KMP;KMP XMAIL because it has been transfered. I don't know if it 
is actually expunged upon the G; perhaps it is just written and marked
Deleted in the file. But that's nearly as bad because if I forget and run
Babyl or ZMail later and Q without seeing what of the things that were read
in were deleted, it'll get expunged quietly the next time I do a normal
exit.

This same timing error is true of Q in general because if I have five mail
files where mail has moved freely between them, if I do Q (or mouse on 
Save, which does an expunge also), it will write files sequentially rather
than writing them all to gensymed names and then renaming to the real names 
only when all files are safely on disk. It has happened to me more than 
once that the machine has crashed in the middle of such a write, and if 
not for the fact that the machine could be warm booted on those occasions, 
I'd have lost a pile of mail.

We're talking Release 4 here, although no one has made the claim to me that
such problems are fixed in Release 5 and I haven't gotten brave enough to 
test any of this yet without such reassurance.

I have reported this problem before (sorry, I've lost the reference), but I
have never seen a note from anyone on Bug-LispM either acknowledging that
they recognized the severity of this screw or explaining to me why I am
confused in believing that such a horrible situation can so easily happen.
 4-Jan-84 20:04:42-EST,1720;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 4 Jan 84 20:04-EST
Received: from SCRC-NEPONSET by SCRC-TENEX with CHAOS; Wed 4-Jan-84 19:17:31-EST
Date: Wed, 4 Jan 84 19:17 EST
From: Mike McMahon <MMcM%SCRC-TENEX@MIT-MC.ARPA>
Subject: Bad problems with G, Q, etc and clarifications about m-X Check For New Mail
To: Kent M Pitman <KMP@MIT-MC.ARPA>
Cc: BUG-LISPM@MIT-MC.ARPA
In-reply-to: The message of 4 Jan 84 17:46-EST from Kent M Pitman <KMP at MIT-MC>
Message-ID: <840104191705.0.MMcM@SCRC.SCRC.Symbolics>

    Date: 4 January 1984 17:46 EST
    From: Kent M Pitman <KMP @ MIT-MC>

		I get many notifications for the same piece of mail. They come
    several minutes apart. I go and VIEWF the new mail and then come back and
    a few minutes later it tells me again a while later that there is new mail 
    and I go and VIEWF it only to find there is not any new mail.

Well, the code definitely tries to only give new notifications when the
file write date has changed.  I'm pretty sure this has always been the
case, but I'm looking at the release 5 sources.

    If I do, then it will try to write back MC:KMP;KMP BABYL. If my machine
    then crashes, I lose all the mail that was virtually moved to 
    MC:KMP;KMP XMAIL because it has been transfered. I don't know if it 
    is actually expunged upon the G; perhaps it is just written and marked
    Deleted in the file. But that's nearly as bad because if I forget and run
    Babyl or ZMail later and Q without seeing what of the things that were read
    in were deleted, it'll get expunged quietly the next time I do a normal
    exit.

Didn't I forward you the old discussion of this when you first reported
the problem?
 4-Jan-84 23:34:13-EST,555;000000000000
Received: from MIT-ML by MIT-OZ via Chaosnet; 4 Jan 84 23:33-EST
Date: Wednesday, 4 January 1984, 23:35-EST
From: Tim McNerney <TIM at MIT-ML>
Subject: Parsing VMS pathnames with wildcards
To: BUG-LISPM at MIT-OZ

In System 98.22, CADR 3.4, ZMail 53.5, MIT-Specific 22.0, microcode 306,
on Lisp Machine Thirty:

Currently the version number incorrectly defaults to *

  calf:sys$mumble:[foo]bar.baz    --> version = *

  calf:sys$mumble:[foo]bar.baz;   --> version = :newest  <<<<<<<<<

  calf:sys$mumble:[foo]bar.baz;3  --> version = 3

 5-Jan-84 05:04:53-EST,1351;000000000000
Received: from MIT-LISPM-27 by MIT-OZ via Chaosnet; 5 Jan 84 05:04-EST
Date: Thursday, 5 January 1984, 05:05-EST
From: Lisp Machine File Server <LMFile at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In System 98.22, CADR 3.4, ZMail 53.9, MIT-Specific 22.0,
Experimental Local-File 48.1, Experimental FILE-Server 8.2,
Experimental LFS 3.1, Experimental MagTape 22.0, microcode 306, Xmntl FS,
on Lisp Machine Filecomputer:

more problems with FS: -- this time with expunging files

Trying to expunge any of the following list of files produces the error below:
  FS: KAB; 3D-MODEL-MIXINS.LISP#30       FS: KAB; 3D-MODEL-MIXINS.DOC#30
  FS: KAB; 3D-MODEL-AUXILLARY.LISP#25    FS: KAB; 3D-MODEL.LISP#70
  FS: KAB; 3D-MODEL.DOC#70

  >>ERROR: File being expunged is still open.
  While in the function LMFS-EXPUNGE-FILE  LMFS-EXPUNGE-DIRECTORY
    (:METHOD LOCAL-FILE-MIXIN :EXPUNGE)

  LMFS-EXPUNGE-FILE: (P.C. = 146)
     Arg 0 (FILE): #<LMFS-File "KAB; 3D-MODEL-MIXINS.LISP#30">

These files have all been around for several days, and were deleted by me shortly before I 
tried expunging them.  Two other files (FS:KAB;TEST.LISP#1,2, created by rms) were already
deleted when I deleted the others, and were expungable (though doing so caused a different 
error: "unexpected disk status" in CHANGE-MAP-DISK-SPACE).

  Kim A. Barrett
 5-Jan-84 11:06:50-EST,1946;000000000000
Received: from MIT-APIARY-4 by MIT-OZ via Chaosnet; 5 Jan 84 11:05-EST
Date: Thursday, 5 January 1984, 11:05-EST
From: Carl Hewitt <HEWITT at MIT-OZ>
Subject: badly broken namespace server
To: Christopher C. Stacy <CSTACY at MIT-MC>
Cc: RZ at MIT-MC, bug-rel-5 at MIT-OZ, DANIEL at MIT-OZ, bug-lispm at MIT-OZ,
    Hewitt at MIT-OZ
In-reply-to: The message of 5 Jan 84 07:25-EST from Christopher C. Stacy <CSTACY at MIT-MC>

    Return-path: <CSTACY@MIT-MC>
    Received: from MIT-MC by MIT-OZ via Chaosnet; 5 Jan 84 07:24-EST
    Date: 5 January 1984 07:25 EST
    From: Christopher C. Stacy <CSTACY @ MIT-MC>
    Subject:  badly broken namespace server
    To: HEWITT @ MIT-OZ
    cc: CSTACY @ MIT-MC, RZ @ MIT-MC, bug-rel-5 @ MIT-OZ, DANIEL @ MIT-OZ
    In-reply-to: Msg of Thu 5 Jan 1984  06:45 EST from HEWITT%MIT-OZ at MIT-MC.ARPA


        Date: Thu, 5 Jan 1984  06:45 EST
        From: HEWITT%MIT-OZ at MIT-MC.ARPA
        To:   cstacy%MIT-OZ at MIT-MC.ARPA
        cc:   Hewitt%MIT-OZ at MIT-MC.ARPA, bug-rel-5%MIT-OZ at MIT-MC.ARPA
        Re:   badly broken namespace server
        Message-ID: <HEWITT.11981157754.BABYL@MIT-OZ>

        Chris,

        What would it take to move the LM15 disk to another CADR and
        change its chaos net address to be the same as LM15 temporarily
        to relieve some of the namespace lossage?

        Thanks,

        Carl


    It's trivial: you just pick it up and plop it in and set the address
    switches on the chaos board and boot it.  I heard a rumor that someone
    already did this though. If you are sure the pack is not crashed and
    it needs doing and we have a spare CADR and we want to do this, I'll
    do it (anyone could...)

    Chris

Chris,

It seems to me that we had better do it.  The official release 5 is going to be here soon
which will require a namespace server.  Would you like to do it?

Cheers,

Carl
 5-Jan-84 12:09:52-EST,2010;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 5 Jan 84 12:08-EST
Received: from SCRC-HARLEM by SCRC-QUABBIN with CHAOS; Thu 5-Jan-84 12:05:51-EST
Date: Thu, 5 Jan 84 12:09 EST
From: Joseph R Goldstone <joseph%SCRC-QUABBIN@MIT-MC.ARPA>
Subject: badly broken namespace server
To: Carl Hewitt <HEWITT@MIT-OZ.ARPA>
Cc: "Christopher C. Stacy" <CSTACY@MIT-MC.ARPA>, RZ@MIT-MC.ARPA,
    bug-rel-5@MIT-OZ.ARPA, DANIEL@MIT-OZ.ARPA, bug-lispm@MIT-OZ.ARPA
In-reply-to: The message of 5 Jan 84 11:05-EST from Carl Hewitt <HEWITT at MIT-OZ>

    Date: Thursday, 5 January 1984, 11:05-EST
    From: Carl Hewitt <HEWITT at MIT-OZ>
	Date: 5 January 1984 07:25 EST
	From: Christopher C. Stacy <CSTACY @ MIT-MC>
	    Date: Thu, 5 Jan 1984  06:45 EST
	    From: HEWITT%MIT-OZ at MIT-MC.ARPA
	    What would it take to move the LM15 disk to another CADR and
	    change its chaos net address to be the same as LM15 temporarily
	    to relieve some of the namespace lossage?
	It's trivial: you just pick it up and plop it in and set the address
	switches on the chaos board and boot it.  I heard a rumor that someone
	already did this though. If you are sure the pack is not crashed and
	it needs doing and we have a spare CADR and we want to do this, I'll
	do it (anyone could...)
    It seems to me that we had better do it.  The official release 5 is going to be here soon
    which will require a namespace server.  Would you like to do it?

fait accompli.  Bawden and friends did this last night with cadrs 15 and 9.  proof:

(hostat 'cadr15)
Chaosnet host status report.  Type Control-Abort to quit.
Site   Name/Status              Subnet     #-in    #-out   abort    lost     crc ram bitc other
3066   Lisp Machine Fifteen          6    27427  5814590   45383     513     218   0  545    20
   
(uptime 'cadr15)
Host Name                Time up                  
CADR-15                  16 hours 40 minutes 41 seconds
    
the old hardware could never have stayed up that long.
 5-Jan-84 14:28:36-EST,2165;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 5 Jan 84 14:24-EST
Date: Thu, 5 Jan 1984  14:11 EST
Message-ID: <DANIEL.11981238983.BABYL@MIT-OZ>
From: Daniel Weise <DANIEL%MIT-OZ@MIT-MC.ARPA>
To:   Joseph R Goldstone <joseph%SCRC-QUABBIN@MIT-MC.ARPA>
Cc:   bug-lispm@MIT-OZ.ARPA, bug-rel-5@MIT-OZ.ARPA,
      "Christopher C. Stacy" <CSTACY@MIT-MC.ARPA>,
      Carl Hewitt <HEWITT@MIT-OZ.ARPA>, RZ@MIT-MC.ARPA
Subject: badly broken namespace server
In-reply-to: Msg of 5 Jan 1984  12:09-EST from Joseph R Goldstone <joseph%SCRC-QUABBIN at MIT-MC.ARPA>

    Date: Thursday, 5 January 1984  12:09-EST
    From: Joseph R Goldstone <joseph%SCRC-QUABBIN at MIT-MC.ARPA>
    Re:   badly broken namespace server

    fait accompli.  Bawden and friends did this last night with cadrs 15 and 9.  proof:

    (hostat 'cadr15)
    Chaosnet host status report.  Type Control-Abort to quit.
    Site   Name/Status              Subnet     #-in    #-out   abort    lost     crc ram bitc other
    3066   Lisp Machine Fifteen          6    27427  5814590   45383     513     218   0  545    20
       
    (uptime 'cadr15)
    Host Name                Time up                  
    CADR-15                  16 hours 40 minutes 41 seconds
        
    the old hardware could never have stayed up that long.

Unfortunately, even though the hardware stayed up it wasn't
quite working.  When I came in at 11:50 Janis couldn't connect 
to it.  Judging by the times of carls notes other machines
couldn't connect to it either.  
I typed a 9 <space> on cadr9's (the cadr which is now
masquerading as cadr15) keyboard. After half a minute or so
it finally echoed the 9.  After this Janis was able to connect
to it (and you, too, since your message (the one I am responding
to) 10 minutes after that).  

What sort of magic is going on?  In particular, if it stops
connecting to other hosts again what should I look at to
help diagnose the problem?  When Bawden and I brought up
the namespace server yesterday we didn't load patches.
(about 98 of them were waiting to get loaded.)
It this lossage fixed by a patch that didn't get loaded?

Daniel
 6-Jan-84 21:01:09-EST,593;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 6 Jan 84 20:57-EST
Date: Friday, 6 January 1984, 20:58-EST
From: Kent M Pitman <kmp at MIT-MC>
Subject: Ephemeral nature of m-X Electric Shift Lock Mode
To: BUG-LISPM at OZ

In Release 4.5, Vanilla, on Lisp Machine Frank Sinatra (3600):

If I do
		m-X Electric Shift Lock mode

I go into electric shift lock mode correctly. If I then do

		m-X Update Attribute List

not only is Electric Shift Lock mode not recorded in any way in the 
file attribute list, but I find that I am no longer even in 
Electric Shift Lock mode!
-kmp
 6-Jan-84 22:20:17-EST,1498;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 6 Jan 84 22:16-EST
Date: Friday, 6 January 1984, 19:59-EST
From: Kent M Pitman <kmp at MIT-MC>
Subject: (PROCESS-LOCK (LOCF ...)) >>Trap: The first argument ... was not a locative
To: BUG-LISPM at OZ

In Symbolics Release 4.5 (Sinatra, 3600) and Release 5.0 (Apiary-9, 3600):

STORE-CONDITIONAL does not seem to like to store into cons cells.
This is a little irritating since (LOCF (CDR ...)) cannot return
a locative of DTP-LOCATIVE like other LOCF forms can. Is this
a necessary restriction or was someone just being too cautious. If it's
simply a matter of trying to trap wild references, I'm willing to 
sacrifice error checking for the sake of handling what should be a 
reasonable case.

Here's a sample of the lossage:

(SETQ SAMPLE-CONS (NCONS NIL))
  (NIL)

(PROCESS-LOCK (LOCF (CDR SAMPLE-CONS)))
 >>Trap: The first argument given to STORE-CONDITIONAL, (NIL), was not a locative.
 While in the function PROCESS-LOCK  SI:*EVAL  SI:LISP-TOP-LEVEL1
 
 PROCESS-LOCK:  (P.C. = 34)
    Arg 0 (LOCATIVE-POINTER): (NIL)
    --Defaulted args:--
    Arg 1 (LOCK-VALUE): #<PROCESS Initial Process 51740000>
    Arg 2 (WHOSTATE): "Lock"
    Local 3 (LOCKER): NIL
 
 SI:*EVAL:  (P.C. = 405)
    Arg 0 (FORM): (PROCESS-LOCK (LOCF (CDR SAMPLE-CONS)))
 
 SI:LISP-TOP-LEVEL1:  (P.C. = 130)
    Arg 0 (TERMINAL-IO-initialization): #<LISP-LISTENER Lisp Listener 1 3000000 exposed>
 
 SYS:LISP-TOP-LEVEL:  (P.C. = 7)

 6-Jan-84 23:20:50-EST,1548;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 6 Jan 84 23:20-EST
Received: from SCRC-CHARLES by SCRC-QUABBIN with CHAOS; Fri 6-Jan-84 23:09:58-EST
Date: Friday, 6 January 1984, 23:13-EST
From: David C. Plummer <DCP at SCRC-TENEX>
Subject: (PROCESS-LOCK (LOCF ...)) >>Trap: The first argument ... was not a locative
To: kmp at MIT-MC, BUG-LISPM at MIT-OZ
In-reply-to: The message of 6 Jan 84 19:59-EST from Kent M Pitman <kmp at MIT-MC>

    Date: Friday, 6 January 1984, 19:59-EST
    From: Kent M Pitman <kmp at MIT-MC>

    In Symbolics Release 4.5 (Sinatra, 3600) and Release 5.0 (Apiary-9, 3600):

STORE-CONDITIONAL microcode really wants an object of DTP-LOCATIVE.  It
cannot do CDR because that would take 4(?) extra cycles with tasking
turned off to read the CAR and dispatch on the cdr-code.

    Here's a sample of the lossage:

    (SETQ SAMPLE-CONS (NCONS NIL))
      (NIL)

    (PROCESS-LOCK (LOCF (CDR SAMPLE-CONS)))
     >>Trap: The first argument given to STORE-CONDITIONAL, (NIL), was not a locative.
     While in the function PROCESS-LOCK  SI:*EVAL  SI:LISP-TOP-LEVEL1

Your example even makes matter worse.  NCONS returns a list with
CDR-NORMAL.  Suppose somebody accidentally sent in a list which was
either CDR-NIL or CDR-NEXT.  (Worse, what if the list were NIL?)  If
STORE-CONDITIONAL decided to change the value of the CDR, it would have
to trap to make it a real CONS, which might make the STORE-CONDITIONAL
completely useless.

Why not use the CAR of the cons for the lock cell?
 7-Jan-84 10:51:14-EST,3019;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 7 Jan 84 10:50-EST
Date: 7 January 1984 10:50 EST
From: Kent M Pitman <KMP @ MIT-MC>
Subject:  (PROCESS-LOCK (LOCF ...)) >>Trap: The first argument ... was not a locative
To: DCP @ SCRC-TENEX
cc: BUG-LISPM @ MIT-MC, KMP @ MIT-MC
References: The message of 6 Jan 84 19:59-EST from Kent M Pitman <kmp at MIT-MC>
In-reply-to: Msg of Fri 6 Jan 84 23:13 EST from David C. Plummer <DCP%SCRC-TENEX at MIT-MC.ARPA>

    Date: Fri, 6 Jan 84 23:13 EST
    From: David C. Plummer <DCP%SCRC-TENEX at MIT-MC.ARPA>

        Date: Friday, 6 January 1984, 19:59-EST
        From: Kent M Pitman <kmp at MIT-MC>

        In Symbolics Release 4.5 (Sinatra, 3600) 
		 and Release 5.0 (Apiary-9, 3600):

    ... STORE-CONDITIONAL microcode really wants an object of DTP-LOCATIVE.  It
    cannot do CDR because that would take 4(?) extra cycles with tasking
    turned off to read the CAR and dispatch on the cdr-code.

        Here's a sample of the lossage:

        (SETQ SAMPLE-CONS (NCONS NIL))
          (NIL)

        (PROCESS-LOCK (LOCF (CDR SAMPLE-CONS)))
         >>Trap: The first argument given to STORE-CONDITIONAL, (NIL), 
		 was not a locative.
         While in the function PROCESS-LOCK  SI:*EVAL  SI:LISP-TOP-LEVEL1

    Your example even makes matter worse.  NCONS returns a list with
    CDR-NORMAL.  Suppose somebody accidentally sent in a list which was
    either CDR-NIL or CDR-NEXT.  (Worse, what if the list were NIL?)  If
    STORE-CONDITIONAL decided to change the value of the CDR, it would have
    to trap to make it a real CONS, which might make the STORE-CONDITIONAL
    completely useless.

    Why not use the CAR of the cons for the lock cell?

Well, I am in fact doing that in this case, but...

In the general case of a utility which does something like:

	(DEFMACRO FOO (LOCFABLE-FORM ...)
	  `(... (PROCESS-LOCK (LOCF ,LOCFABLE-FORM) ...) ...))

it is not possible to win. Especially if LOCFABLE-FORM turns out to be
something like

	(MY-ACCESSOR X)

where some other macro has decided it will be implemented as 

	(DEFMACRO MY-ACCESSOR (X) `(CDR ,X))

My point is that this is a very nasty bug because everyone along the way
thinks they are doing something completely kosher and only when you put it
all together do you find out it doesn't work.

I recognize that it is a pain to do this, especially in the case of cdr-coded
lists, but I really don't believe it is impossible and I believe that code
reliability will be greatly enhanced by making this work. It's just not fair
to users to make them have to worry about this.

If this is going to not work, it needs to be carefully documented so that
users will not be mislead, but the problem is that it's hard to say who 
should "own" the documentation. This is a bug which does not strike simple
users LOCF or simple users of PROCESS-LOCK, but rather users who have the
misfortune to join the two in a certain obscure way....

 7-Jan-84 13:11:31-EST,473;000000000000
Received: from MIT-LISPM-18 by MIT-OZ via Chaosnet; 7 Jan 84 13:10-EST
Date: Saturday, 7 January 1984, 13:11-EST
From: Kim A. Barrett <kab at MIT-OZ>
To: BUG-LISPM at MIT-OZ

In System 98.26, CADR 3.4, ZMail 53.9, MIT-Specific 22.0, microcode 306,
ZM MIT, on Lisp Machine Eighteen:

READLINE calls READ-DELIMITED-STRING with eof arg inverted, causing readline with no eof arg
to return on encountering eof, while readline with an eof arg signals an error on eof.
 7-Jan-84 13:51:06-EST,1489;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 7 Jan 84 13:50-EST
Date: Saturday, 7 January 1984  13:47-EST
From: David C. Plummer <DCP at SCRC-TENEX>
To:   Kent M Pitman <KMP at MIT-MC>
Cc:   BUG-LISPM at MIT-MC, dcp at SCRC-TENEX
Subject: (PROCESS-LOCK (LOCF ...)) >>Trap: The first argument ... was not a locative
In-reply-to: The message of 7 Jan 1984 10:50 EST from Kent M Pitman <KMP at MIT-MC>


    If this is going to not work, it needs to be carefully
    documented so that users will not be mislead, but the problem
    is that it's hard to say who should "own" the documentation.
    This is a bug which does not strike simple users LOCF or
    simple users of PROCESS-LOCK, but rather users who have the
    misfortune to join the two in a certain obscure way....

One could also argue that process-lock is to lock against other
process but not necessarily against the microcode.
	(without-interrupts
	 (when (eq (cdr loc) old-val)
	       (setf (cdr loc) new-val)
	       t))
would work for that and is what you want process-lock to do, but
it is coded with store-conditional to save (let's guess at) 10 or
11 microseconds (think of hash tables!) and maybe in the off case
it does need to lock against the microcode.  More unfortunately
for you, process-lock won't take a cons as a degenerate
locative.

I agree that this problem with store-conditional should be
clarified in the documentation, as well as functions in the
system that use it.
 7-Jan-84 14:27:51-EST,935;000000000000
Received: from MIT-AVATAR by MIT-OZ via Chaosnet; 7 Jan 84 14:27-EST
Date: Saturday, 7 January 1984, 14:26-EST
From: Apprentice for KMP <kbe at MIT-OZ>
Subject: Suboptimal buffer renaming by m-X Rename File when wildcards present
To: BUG-LISPM at MIT-OZ

In Release 4.5, Experimental Knowledge-Based-Editor 244.0,
site configuration 61, Vanilla, on PA Lisp Machine Avatar:

From buffer NOPTIONS.LISP PS:<KBE> OZ:, I tried doing

   m-X Rename FileNOPTIONS.*.*OPTIONS.*.*

It succeeded, but did not offer to rename my buffer.

I wondered if maybe the fix which made it offer that was not
in Release 4.5 so I renamed OPTIONS.LISP.0 back to NOPTIONS.LISP.0
and tried

   m-X Rename FileNOPTIONS.LISPOPTIONS.LISP.*

and it queried me about renaming my buffer. Sadly, however, the
name it chose for the buffer was:

   OPTIONS.LISP.* :<NIL> OZ:

I suppose you can see how this is something less than helpful.
