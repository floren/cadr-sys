27-Jan-83 17:42:34-EST,345;000000000000
Mail-From: RPK created at 27-Jan-83 17:39:01
Date: 27 January 1983  17:38-EST (Thursday)
Sender: RPK @ MIT-OZ
From: Robert P. Krajewski <RPK @ MIT-MC>
To:   BUG-Zwei @ MIT-OZ
Subject: ZWEI and Attribute List Variables

Can my mode hook functions for ZWEI access the values of attribute list
variables in the current buffer ?

``Bob''
28-Jan-83 11:02:04-EST,714;000000000000
Date: Friday, 28 January 1983, 09:26-EST
From: Daniel L. Weinreb <dlw at SCRC-TENEX>
Subject: ZWEI and Attribute List Variables
To: RPK at MIT-MC, BUG-Zwei at MIT-OZ
In-reply-to: The message of 27 Jan 83 17:38-EST from Robert P. Krajewski <RPK at MIT-MC>

    Date: 27 January 1983  17:38-EST (Thursday)
    From: Robert P. Krajewski <RPK @ MIT-MC>
    Can my mode hook functions for ZWEI access the values of attribute list
    variables in the current buffer ?
Well, in Zmacs they can.  Do (SEND ZWEI:*INTERVAL* ':GET ':PACKAGE), for example.
For some attributes, the value NIL means "use the default", and so you might
have to know what the default is, depending on what your application is doing.
30-Jan-83 01:13:15-EST,554;000000000000
Date: Sunday, 30 January 1983, 01:07-EST
From: Barry Margolin <barmar at MIT-MULTICS>
To: BUG-ZWEI@MIT-OZ

In ZWEI in Remote-File 22.0, LMFILE-Remote 23.1, MIT-Specific 16.0,
System 91.35, ZMail 48.6, microcode 204, on Arthur Dent:

While at a **MORE** break in ZWEI output I hit BREAK.  When I wanted to
resume the output I was getting I hit RESUME, but this put me all the
way back into Editor Top Level.  If I had wanted that I probably would
have hit ABORT.  Is there a way to do what I want, and if not, could
RESUME be made to do this?
 2-Feb-83 22:05:16-EST,262;000000000000
Date: Wednesday, 2 February 1983, 22:03-EST
From: Richard Mlynarik <Mly at MIT-OZ>
To: BUG-ZWEI at MIT-OZ

In ZWEI System 91.31, microcode 204 on Lisp Machine Three:
Zwei gets an error when one tries to c-m-w and there is not yet anything in the kill ring
 5-Feb-83 06:10:32-EST,284;000000000000
Date: Saturday, 5 February 1983, 04:18-EST
From: Richard M. Stallman <RMS at MIT-OZ>
Subject: The function COMPILER:MICRO-COMPILE is undefined.
To: bug-zmacs at MIT-OZ

Of course it is.  The L machine has a different microcode
and the micro compiler hasn't been converted yet.
 5-Feb-83 23:52:55-EST,463;000000000000
Date: Saturday, 5 February 1983, 23:50-EST
From: Margolin at MIT-Multics
Sender: barmar at MIT-MULTICS
Subject: Dired of Twenex
To: BUG-ZWEI at OZ

In ZWEI in System 222.140, Hardcopy 11.12, Zmail 74.28, LMFS 30.13,
Tape 13.0, microcode 977, site configuration 2, on Zarniwoop:

How can I do a Dired of a Twenex directory and get only the latest
version of the files listed?  How about other file systems (I remember
that "*.*.NEWEST" works on LMFS).
 6-Feb-83 01:18:58-EST,673;000000000000
Date: Sunday, 6 February 1983, 01:12-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: Dired of Twenex
To: Margolin at MIT-Multics
Cc: BUG-ZWEI at MIT-OZ
In-reply-to: The message of 5 Feb 83 23:50-EST from Margolin at MIT-Multics

    Date: Saturday, 5 February 1983, 23:50-EST
    From: Margolin at MIT-Multics
    In ZWEI in System 222.140, Hardcopy 11.12, Zmail 74.28, LMFS 30.13,
    Tape 13.0, microcode 977, site configuration 2, on Zarniwoop:

    How can I do a Dired of a Twenex directory and get only the latest
    version of the files listed?

*.*.0 (see any Twenex manual).
* > on ITS
*.*.newest on LMFS
I don't know the answer for VMS.
 6-Feb-83 04:01:35-EST,878;000000000000
Date: Sunday, 6 February 1983, 03:57-EST
From: Robert W. Kerns <RWK at SCRC-TENEX>
Subject: Dired of Twenex
To: David A. Moon <Moon at SCRC-TENEX>
Cc: Margolin at MIT-Multics, BUG-ZWEI at MIT-OZ
In-reply-to: The message of 6 Feb 83 01:12-EST from David A. Moon <Moon at SCRC-TENEX>

    Date: Sunday, 6 February 1983, 01:12-EST
    From: David A. Moon <Moon at SCRC-TENEX>
	Date: Saturday, 5 February 1983, 23:50-EST
	From: Margolin at MIT-Multics
	In ZWEI in System 222.140, Hardcopy 11.12, Zmail 74.28, LMFS 30.13,
	Tape 13.0, microcode 977, site configuration 2, on Zarniwoop:

	How can I do a Dired of a Twenex directory and get only the latest
	version of the files listed?

    *.*.0 (see any Twenex manual).
    * > on ITS
    *.*.newest on LMFS
    I don't know the answer for VMS.
*.*; on VMS.
Perhaps *.*;0 would work too, I don't know offhand.
 6-Feb-83 23:08:58-EST,410;000000000000
Date: Sunday, 6 February 1983, 23:08-EST
From: David Vinayak Wallace <Gumby at MIT-OZ>
To: BUG-zwei at MIT-OZ

In zw in Remote-File 22.0, LMFILE-Remote 23.1, MIT-Specific 16.0,
System 91.39, ZMail 48.7, microcode 204, new, on Lisp Machine Six:

If I'm in a minibuffer which is prompting for a filename and I type C-R,
the machine hangs in Output hold, presumably trying to display the
search prompt.
 8-Feb-83 09:08:11-EST,4665;000000000000
Date: Tuesday, 8 February 1983, 09:04-EST
From: Patrick Sobalvarro <PGS at MIT-OZ>
To: BUG-zwei at MIT-OZ

In Remote-File 22.0, LMFILE-Remote 23.1, MIT-Specific 16.0, System 91.40,
ZMail 48.7, microcode 204, Rev Video, on Lisp Machine Twenty-five:

I did a DIRED, using C-U C-X D, giving an argument of <PGS.*>, meaning I wanted
to dired all of my subdirectories.  It told me that <PGS.> had an invalid
character in it, and that's fine by me, but it ain't what I typed.

Insert your description of the circumstances here:


>>Keyboard break.
Backtrace from the debugger:

;;; I won't include all of READLINE here

PROMPT-AND-READ (P.C. = 113)

 Arg 0 (OPTION): (PATHNAME DEFAULTS #FS:TOPS20-PATHNAME "OZ:PS:<PGS.>*.*.*")
 Arg 1 (FORMAT-STRING): "~&Pathname to use instead: (default ~A) "
 Rest arg (FORMAT-ARGS): (#FS:TOPS20-PATHNAME "OZ:PS:<PGS.>*.*.*")
Local 1 (OPTION-TYPE): PATHNAME
Local 2 (FUNCTION): #<DTP-FEF-POINTER (PROPERTY PATHNAME SI:PROMPT-AND-READ-FUNCTION) 1550260>


SI:FILE-RETRY-READ-PATHNAME (P.C. = 50)

 Arg 0 (PATHNAME): #FS:TOPS20-PATHNAME "OZ:PS:<PGS.>*.*.*"


ZWEI:DIRECTORY-EDIT-REVERT (P.C. = 402)

 Arg 0 (BUFFER): #<BUFFER "*Dired-1*" 6003401>
 Arg 1 (PATHNAME): #FS:TOPS20-PATHNAME "OZ:PS:<PGS.>*.*.*"
   --Defaulted args:--
 Arg 2 (IGNORE): NIL
 Arg 3 (SELECT-FLAG): NIL
Local 0 (DIRECTORY): NIL
Local 1 (.SAVED-TICK.): READ-ONLY
Local 2 (.FILE-ID.): (SPECIAL-BUFFER DIRED 105416)
Local 3 (.SPECIAL-P.): T
Local 4 (.OLD-TICK.): 105416
Local 5 (OLD-POSITION-PATHNAME): #FS:TOPS20-PATHNAME "OZ:PS:<PGS>ZWEI.LISP.3"
Local 6 (OLD-POSITION-INDEX): 0
Local 7 (SELECTED-P): T
Local 8 (OPEN-SUBDIRS): NIL
Local 9 (G1359): ((PATHNAME DEFAULTS #FS:TOPS20-PATHNAME "OZ:PS:<PGS.>*.*.*") "~&Pathname to use instead: (default ~A) " #FS:TOPS20-PATHNAME "OZ:PS:<PGS.>*.*.*")
Local 10 (G1360): ((#FS:TOPS20-PATHNAME "OZ:PS:<PGS.>*.*.*") . PATHNAME)
Local 11 (ERROR-OBJECT): #FS:INVALID-PATHNAME-SYNTAX PROPERTY-LIST (PATHNAME #FS:TOPS20-PATHNAME "OZ:PS:<PGS.>*.*.*" OPERATION DIRECTORY-STREAM) CONDITION-NAMES (FS:INVALID-PATHNAME-SYNTAX FS:FILE-OPERATION-FAILURE FS:FILE-ERROR ERROR ...) FORMAT-STRING "~A" FORMAT-ARGS ("Invalid character in filename for OZ:PS:<PGS.>*.*.*") PATHNAME #FS:TOPS20-PATHNAME "OZ:PS:<PGS.>*.*.*" OPERATION DIRECTORY-STREAM
Local 12 (*SELECTQ-ITEM*): (FS:INVALID-PATHNAME-SYNTAX FS:FILE-OPERATION-FAILURE FS:FILE-ERROR ERROR ...)
Local 13 (STREAM): NIL
Local 14 (BP): NIL


ZWEI:DIRECTORY-EDIT (P.C. = 104)

 Arg 0 (PATHNAME): #FS:TOPS20-PATHNAME "OZ:PS:<PGS.>*.*.*"
   --Defaulted args:--
 Arg 1 (SELECT-P): T


ZWEI:COM-DIRED (P.C. = 52)

Local 0 (.WINS.): NIL
Local 1 (.BUFFER.): #<BUFFER "CALBRT.PALX PS:<PGS.PUMA> OZ:" 26364167>
Local 2 (OBUFFER): NIL


ZWEI:COM-R-DIRED (P.C. = 110)

Local 0 (PATHNAME): #FS:TOPS20-PATHNAME "OZ:PS:<PGS.PUMA>CALBRT.*.*"
Local 1 (.WINS.): NIL
Local 2 (.BUFFER.): #<BUFFER "CALBRT.PALX PS:<PGS.PUMA> OZ:" 26364167>
Local 3 (OBUFFER): NIL


ZWEI:COMMAND-EXECUTE (P.C. = 100)

 Arg 0 (COMMAND): ZWEI:COM-R-DIRED
 Arg 1 (CHAR): 144
 Arg 2 (PREFIX-CHAR): 530
   --Defaulted args:--
 Arg 3 (HOOK-LIST): NIL
Local 0 (G6771): NIL
Local 1 (HOOK): NIL


ZWEI:MAKE-EXTENDED-COMMAND-INTERNAL (P.C. = 103)

Local 0 (PREFIX-CHAR): 530
Local 1 (CHAR): 144


Additional information supplied with call:
 Expecting 3 values

ZWEI:COMMAND-EXECUTE (P.C. = 100)

 Arg 0 (COMMAND): #<DTP-CLOSURE 27353315>
 Arg 1 (CHAR): 530
 Arg 2 (PREFIX-CHAR): NIL
 Arg 3 (HOOK-LIST): (ZWEI:SHIFT-LOCK-HOOK)
Local 0 (G6771): NIL
Local 1 (HOOK): ZWEI:SHIFT-LOCK-HOOK


ZWEI:PROCESS-COMMAND-CHAR (P.C. = 67)

 Arg 0 (CH): 530
Local 0 (VALUE): NIL
Local 1 (LINE): NIL
Local 2 (INDEX): NIL
Local 3 (G7269): NIL
Local 4 (HOOK): NIL


(METHOD ZWEI:EDITOR EDIT) (P.C. = 462)

 Arg 0 (OPERATION): EDIT
   --Defaulted args:--
 Arg 1 (TOP-LEVEL-P): T
Local 0 (LEVEL): 1
Local 1 (G2471): ("Return to top level editor command loop.")
Local 2 (G2471): ((SYS:ABORT ERROR) ("Return to top level editor command loop.") T ("Return to top level editor command loop.") ...)
Local 3 (CH): 530


(METHOD ZWEI:TOP-LEVEL-EDITOR COMBINED EDIT) (P.C. = 111)

 Rest arg (.DAEMON-CALLER-ARGS.): (EDIT)
Local 1 (.DAEMON-MAPPING-TABLE.): #<ART-16B-5 17074744>


ZWEI:ZMACS-WINDOW-TOP-LEVEL (P.C. = 50)



SI:PROCESS-TOP-LEVEL (P.C. = 121)

 Arg 0 (IGNORE): NIL
Local 0 (G3581): ("Restart process ~A." "ZMACS-WINDOWS")
Local 1 (G3581): ((SYS:ABORT ERROR) ("Restart process ~A." "ZMACS-WINDOWS") T ("Restart process ~A." "ZMACS-WINDOWS") ...)
Local 2 (IGNORE): NIL
10-Feb-83 18:56:54-EST,395;000000000000
Date: Thursday, 10 February 1983, 18:53-EST
From: Daniel Weise <Daniel at MIT-OZ>
To: BUG-ZWEI at MIT-OZ

In ZWEI in Remote-File 22.0, LMFILE-Remote 23.1, MIT-Specific 16.0,
System 91.37, ZMail 48.6, DAEDALUS 1.14, Nodes 1.2, microcode 204,
gc @18, on Lisp Machine Two:

Can C-M-R be augmented so that on a negative arg it trys to place the
top level form at the bottom of the window?
11-Feb-83 14:17:24-EST,1030;000000000000
Date: Friday, 11 February 1983, 14:14-EST
From: David Chapman <Zvona at MIT-OZ>
Subject: back in black...
To: BUG-LISPM at MIT-OZ, bug-zwei at MIT-OZ

In Release 4.0, Spire 6.9, site configuration 12, on Lisp Machine Six:

(load "<zvona.coder>macros" 'luser) when MACROS was compiled in package
SURFACE prompts about whether I want to create package SURFACE.  Giving
a package argument to LOAD should disable this.

It would be useful if all file errors had a procede type to bash the
file server and try again.

It would be useful if :load and related defsystem frobs would take a
package argument.  Sometimes a system wants to go in more than one
package, so you can't just use :package, and the -*- lines are wrong.

m-X Delete File with a wildcarded expression displays the files to be
deleted on the top typeout window and asks if you want to delete them in
the echo area.  Due to query-io being bound to the echo area in the
editor, presumably.  This seems to cause lossage a lot; it isn't
intuitive.
11-Feb-83 15:08:01-EST,637;000000000000
Date: Friday, 11 February 1983  14:57-EST
From: MOON at SCRC-TENEX
To:   David Chapman <Zvona at MIT-OZ>
Cc:   BUG-LISPM at MIT-OZ, bug-zwei at MIT-OZ
Subject: packages / defsystem
In-reply-to: The message of 11 Feb 1983 14:14-EST from David Chapman <Zvona at MIT-OZ>

    Date: Friday, 11 February 1983, 14:14-EST
    From: David Chapman <Zvona at MIT-OZ>

    It would be useful if :load and related defsystem frobs would take a
    package argument.  Sometimes a system wants to go in more than one
    package, so you can't just use :package, and the -*- lines are wrong.

See the bottom of page 408 in the Chine Nual
11-Feb-83 15:51:53-EST,666;000000000000
Date: Friday, 11 February 1983, 15:45-EST
From: Mike McMahon <MMcM at SCRC-TENEX>
Subject: back in black...
To: Zvona at MIT-OZ
Cc: BUG-LISPM at MIT-OZ, bug-zwei at MIT-OZ
In-reply-to: The message of 11 Feb 83 14:14-EST from David Chapman <Zvona at MIT-OZ>

    Date: Friday, 11 February 1983, 14:14-EST
    From: David Chapman <Zvona at MIT-OZ>
    It would be useful if :load and related defsystem frobs would take a
    package argument.  Sometimes a system wants to go in more than one
    package, so you can't just use :package, and the -*- lines are wrong.
The same file can appear in more than one module, each of which has a different package.
17-Feb-83 13:35:27-EST,8252;000000000000
Date: Thursday, 17 February 1983, 13:31-EST
From: Patrick Sobalvarro <PGS at MIT-OZ>
To: BUG-Zwei at MIT-OZ

In Experimental MIT-Specific 18.0, Experimental System 93.5,
Experimental ZMail 49.1, microcode 226, gc@2,
on Lisp Machine Twenty-five:


Insert your description of the circumstances here:

I typed C-X C-F SYS: DOC; SYS93, and  to complete.

>>ERROR: No translation for directory PGS on host SYS.
Backtrace from the debugger:

(METHOD FS:LOGICAL-PATHNAME TRANSLATED-PATHNAME) (P.C. = 135)

 Arg 0 (OPERATION): TRANSLATED-PATHNAME
Local 0 (TRANS): NIL
Local 1 (NEW-HOST): #<TOPS20-CHAOS-HOST MIT-OZ>
Local 2 (DEV): NIL
Local 3 (DIR): NIL
Local 4 (PATH): NIL
Local 5 (G1672): NIL
Local 6 (NEWDIR): NIL
Local 7 (PN): NIL


(METHOD FS:LOGICAL-PATHNAME COMPLETE-STRING) (P.C. = 70)

 Arg 0 (OPERATION): COMPLETE-STRING
 Arg 1 (STRING): "doc;sys93"
 Arg 2 (OPTIONS): (NEW-OK)
Local 0 (STRING1): "SRC:<L.DOC>SYS93"


Additional information supplied with call:
 Expecting 2 values

FS:COMPLETE-PATHNAME (P.C. = 76)

 Arg 0 (DEFAULTS): ((#<TOPS20-CHAOS-HOST MIT-OZ> . #FS:TOPS20-PATHNAME "OZ:PS:<PGS.PUMA>PMUSER.LISP") (#<ZWEI-FILE-HOST ED-FILE>) (#<ZWEI-BUFFER-HOST ED-BUFFER>) (#<ZWEI-HOST ED>) ...)
 Arg 1 (STRING): "doc;sys93"
 Arg 2 (TYPE): NIL
 Arg 3 (VERSION): NIL
 Rest arg (OPTIONS): (NEW-OK)
Local 1 (PATHNAME): #FS:LOGICAL-PATHNAME "SYS: PS: PGS; PMUSER LISP >"
Local 2 (HOST): #<LOGICAL-HOST SYS>
Local 3 (START): 4
Local 4 (END): 15


ZWEI:PATHNAME-COMPLETE (P.C. = 62)

Local 0 (STRING): "sys:doc;sys93"
Local 1 (VALUE): NIL


ZWEI:COM-PATHNAME-COMPLETE (P.C. = 25)

Local 0 (TEM): NIL


Additional information supplied with call:
 Expecting 3 values

ZWEI:COMMAND-EXECUTE (P.C. = 100)

 Arg 0 (COMMAND): ZWEI:COM-PATHNAME-COMPLETE
 Arg 1 (CHAR): 33
 Arg 2 (PREFIX-CHAR): NIL
 Arg 3 (HOOK-LIST): (ZWEI:SHIFT-LOCK-HOOK)
Local 0 (G4734): NIL
Local 1 (HOOK): ZWEI:SHIFT-LOCK-HOOK


ZWEI:PROCESS-COMMAND-CHAR (P.C. = 67)

 Arg 0 (CH): 33
Local 0 (VALUE): NIL
Local 1 (LINE): NIL
Local 2 (INDEX): NIL
Local 3 (G5246): NIL
Local 4 (HOOK): NIL


(METHOD ZWEI:WINDOW EDIT) (P.C. = 465)

 Arg 0 (OPERATION): EDIT
   --Defaulted args:--
 Arg 1 (IGNORE): NIL
 Arg 2 (*COMTAB*): #<COMTAB ZWEI:PATHNAME-READING-COMTAB 24000556>
 Arg 3 (*MODE-LINE-LIST*): ("Find file: (Default is OZ:PS:<PGS.PUMA>PMUSER.LISP)" (RIGHT-FLUSH " (Completion)"))
 Arg 4 (TOP-LEVEL-P): NIL
Local 0 (TEM1): ((** ** T ** ...) (** ** T ** ...))
Local 1 (G1278): ("Return to editor command loop.")
Local 2 (G1278): ((SYS:ABORT ERROR) ("Return to editor command loop.") T ("Return to editor command loop.") ...)
Local 3 (CH): 33


Additional information supplied with call:
 SYS:ADI-FEXPR-CALL

(INTERNAL (METHOD ZWEI:ZWEI-WITHOUT-TYPEOUT COMBINED EDIT) 0) (P.C. = 63)

 Rest arg (.DAEMON-CALLER-ARGS.): (EDIT)
Local 1 (.DAEMON-MAPPING-TABLE.): #<ART-16B-7 16004667>


FUNCALL (P.C. = 25)

 Arg 0 (FN): #<DTP-FEF-POINTER (INTERNAL (METHOD ZWEI:ZWEI-WITHOUT-TYPEOUT COMBINED EDIT) 0) 17145571>
 Rest arg (ARGS): (EDIT)


(METHOD ZWEI:DISPLAYER AROUND EDIT) (P.C. = 31)

 Arg 0 (OPERATION): EDIT
 Arg 1 (CONT): #<DTP-FEF-POINTER (INTERNAL (METHOD ZWEI:ZWEI-WITHOUT-TYPEOUT COMBINED EDIT) 0) 17145571>
 Arg 2 (MT): #<ART-16B-7 16004667>
 Arg 3 (ARGS): (EDIT)
   --Defaulted args:--
 Arg 4 (EDITOR-CLOSURE-1): NIL
 Rest arg (IGNORE): NIL


(METHOD ZWEI:ZWEI-WITHOUT-TYPEOUT COMBINED EDIT) (P.C. = 47)

 Rest arg (.DAEMON-CALLER-ARGS.): (EDIT)
Local 1 (.DAEMON-MAPPING-TABLE.): #<ART-16B-7 16004667>


Additional information supplied with call:
 Expecting 3 values

ZWEI:EDIT-IN-MINI-BUFFER (P.C. = 345)

 Arg 0 (COMTAB): #<COMTAB ZWEI:PATHNAME-READING-COMTAB 24000556>
 Arg 1 (INITIAL-CONTENTS): NIL
 Arg 2 (INITIAL-CHAR-POS): NIL
 Arg 3 (MODE-LINE-LIST): ("Find file: (Default is OZ:PS:<PGS.PUMA>PMUSER.LISP)" (RIGHT-FLUSH " (Completion)"))
Local 0 (BP): ("sys:doc;sys93" 15 NORMAL)
Local 1 (VAL): NIL
Local 2 (SUCCESSFUL): NIL
Local 3 (TOP-W): #<ZMACS-FRAME Zmacs Frame 1 15400510 exposed>
Local 4 (OSUBST): #<ZMACS-WINDOW-PANE Zmacs Window Pane 1 15403703 exposed>
Local 5 (INTERVAL): #<NODE 24540415>
Local 6 (G3378): NIL
Local 7 (CHAR): NIL


ZWEI:READ-UNDEFAULTED-PATHNAME-STRING (P.C. = 210)

 Arg 0 (PROMPT): "Find file:"
 Arg 1 (*READING-PATHNAME-DEFAULTS*): ((#<TOPS20-CHAOS-HOST MIT-OZ> . #FS:TOPS20-PATHNAME "OZ:PS:<PGS.PUMA>PMUSER.LISP") (#<ZWEI-FILE-HOST ED-FILE>) (#<ZWEI-BUFFER-HOST ED-BUFFER>) (#<ZWEI-HOST ED>) ...)
 Arg 2 (*READING-PATHNAME-SPECIAL-TYPE*): NIL
 Arg 3 (*READING-PATHNAME-SPECIAL-VERSION*): NIL
 Arg 4 (*READING-PATHNAME-DIRECTION*): NEW-OK
 Arg 5 (MERGE-IN-SPECIAL-VERSION): T
 Arg 6 (MINI-BUFFER-INITIAL-CONTENTS): NIL
 Arg 7 (MINI-BUFFER-INITIAL-CHAR-POS): NIL
Local 0 (*READING-PATHNAME-LAST-NAME-TYPED*): "OZ: PS:<PGS.PUMA>PMUSER.LISP"
Local 1 (OLD-LIST): (ZWEI:LISP-MODE ZWEI:AUTO-FILL-MODE ZWEI:ELECTRIC-SHIFT-LOCK-MODE)
Local 2 (INTERVAL): NIL
Local 3 (G8636): NIL
Local 4 (ELT): NIL


ZWEI:READ-DEFAULTED-PATHNAME (P.C. = 64)

 Arg 0 (PROMPT): "Find file:"
 Arg 1 (DEFAULTS): ((#<TOPS20-CHAOS-HOST MIT-OZ> . #FS:TOPS20-PATHNAME "OZ:PS:<PGS.PUMA>PMUSER.LISP") (#<ZWEI-FILE-HOST ED-FILE>) (#<ZWEI-BUFFER-HOST ED-BUFFER>) (#<ZWEI-HOST ED>) ...)
 Arg 2 (SPECIAL-TYPE): NIL
 Arg 3 (SPECIAL-VERSION): NIL
 Arg 4 (DIRECTION): NEW-OK
   --Defaulted args:--
 Arg 5 (MERGE-IN-SPECIAL-VERSION): T
 Arg 6 (MERGE-TYPE): T
 Arg 7 (MINI-BUFFER-INITIAL-CONTENTS): NIL
 Arg 8 (MINI-BUFFER-INITIAL-CHAR-POS): NIL


ZWEI:COM-FIND-FILE (P.C. = 44)

Local 0 (PATHNAME): NIL


ZWEI:COMMAND-EXECUTE (P.C. = 100)

 Arg 0 (COMMAND): ZWEI:COM-FIND-FILE
 Arg 1 (CHAR): 506
 Arg 2 (PREFIX-CHAR): 530
   --Defaulted args:--
 Arg 3 (HOOK-LIST): NIL
Local 0 (G4734): NIL
Local 1 (HOOK): NIL


ZWEI:MAKE-EXTENDED-COMMAND-INTERNAL (P.C. = 103)

Local 0 (PREFIX-CHAR): 530
Local 1 (CHAR): 506


Additional information supplied with call:
 Expecting 3 values

ZWEI:COMMAND-EXECUTE (P.C. = 100)

 Arg 0 (COMMAND): #<DTP-CLOSURE 31256212>
 Arg 1 (CHAR): 530
 Arg 2 (PREFIX-CHAR): NIL
 Arg 3 (HOOK-LIST): (ZWEI:SHIFT-LOCK-HOOK)
Local 0 (G4734): NIL
Local 1 (HOOK): ZWEI:SHIFT-LOCK-HOOK


ZWEI:PROCESS-COMMAND-CHAR (P.C. = 67)

 Arg 0 (CH): 530
Local 0 (VALUE): NIL
Local 1 (LINE): NIL
Local 2 (INDEX): NIL
Local 3 (G5246): NIL
Local 4 (HOOK): NIL


(METHOD ZWEI:WINDOW EDIT) (P.C. = 465)

 Arg 0 (OPERATION): EDIT
   --Defaulted args:--
 Arg 1 (IGNORE): NIL
 Arg 2 (*COMTAB*): #<COMTAB ZWEI:MODE-COMTAB 32656410>
 Arg 3 (*MODE-LINE-LIST*): ("ZMACS " "(" ZWEI:*MODE-NAME-LIST* ") " ...)
 Arg 4 (TOP-LEVEL-P): T
Local 0 (TEM1): ((** ** T ** ...))
Local 1 (G1278): ("Return to top level editor command loop.")
Local 2 (G1278): ((SYS:ABORT ERROR) ("Return to top level editor command loop.") T ("Return to top level editor command loop.") ...)
Local 3 (CH): 530


Additional information supplied with call:
 SYS:ADI-FEXPR-CALL

(INTERNAL (METHOD ZWEI:ZMACS-WINDOW COMBINED EDIT) 0) (P.C. = 74)

 Rest arg (.DAEMON-CALLER-ARGS.): (EDIT)
Local 1 (.DAEMON-MAPPING-TABLE.): #<ART-16B-17 16007777>


FUNCALL (P.C. = 25)

 Arg 0 (FN): #<DTP-FEF-POINTER (INTERNAL (METHOD ZWEI:ZMACS-WINDOW COMBINED EDIT) 0) 17150006>
 Rest arg (ARGS): (EDIT)


(METHOD ZWEI:DISPLAYER AROUND EDIT) (P.C. = 31)

 Arg 0 (OPERATION): EDIT
 Arg 1 (CONT): #<DTP-FEF-POINTER (INTERNAL (METHOD ZWEI:ZMACS-WINDOW COMBINED EDIT) 0) 17150006>
 Arg 2 (MT): #<ART-16B-17 16007777>
 Arg 3 (ARGS): (EDIT)
   --Defaulted args:--
 Arg 4 (EDITOR-CLOSURE-1): NIL
 Rest arg (IGNORE): NIL


(METHOD ZWEI:ZMACS-WINDOW COMBINED EDIT) (P.C. = 47)

 Rest arg (.DAEMON-CALLER-ARGS.): (EDIT)
Local 1 (.DAEMON-MAPPING-TABLE.): #<ART-16B-17 16007777>


ZWEI:ZMACS-WINDOW-TOP-LEVEL (P.C. = 46)

 Arg 0 (FRAME): #<ZMACS-FRAME Zmacs Frame 1 15400510 exposed>


SI:PROCESS-TOP-LEVEL (P.C. = 121)

   --Defaulted args:--
 Arg 0 (IGNORE): NIL
Local 0 (G1393): ("Restart process ~A." "Zmacs Frame 1")
Local 1 (G1393): ((SYS:ABORT ERROR) ("Restart process ~A." "Zmacs Frame 1") T ("Restart process ~A." "Zmacs Frame 1") ...)
Local 2 (IGNORE): NIL
18-Feb-83 16:48:24-EST,429;000000000000
Date: Friday, 18 February 1983, 16:46-EST
From: Patrick Sobalvarro <PGS at MIT-OZ>
To: BUG-Zwei at MIT-OZ

In Zwei in Experimental MIT-Specific 18.0, Experimental System 93.5,
Experimental ZMail 49.1, microcode 226, gc@2, on Lisp Machine Five:

When I do M-X Midas and then M-X Update Mode Line in an empty buffer (maybe
even in a full one) I get -*- Mode: LISP -*-, even though the mode was
successfully set to Midas.
21-Feb-83 16:28:47-EST,674;000000000000
Date: Monday, 21 February 1983, 16:22-EST
From: Leigh L. Klotz <KLOTZ at MIT-OZ>
Subject: Behavior of RETURN in Auto Fill Mode
To: BUG-zwei at MIT-OZ

In zwei in System 222.131, Hardcopy 11.11, Zmail 74.26, LMFS 30.14,
Tape 13.0, microcode 977, site configuration 6, on Lisp Machine Twenty:

The self-documentation for RETURN (Insert Crs) doesn't say that if you
give it a numeric arg of 1 and you are in Auto Fill Mode it will inhibit
autofilling for that insertion.  I figured it might do that because
^R CRLF in EMACS does that.  I actually prefer that behavior, and would
like to know if there's a variable I can set to make it default that
way.

Leigh.
21-Feb-83 18:59:03-EST,550;000000000000
Date: Monday, 21 February 1983, 18:54-EST
From: Mark J. Dulcey <Dulcey at MIT-OZ>
To: BUG-ZWEI at MIT-OZ

In ZWEI in Experimental MIT-Specific 18.0, Experimental System 93.5,
Experimental ZMail 49.1, microcode 226, gc@2, on Lisp Machine One:

A startling effect in ZMacs:

While in two-window mode, if one window is already looking at a buffer,
and you select the same buffer in the other window, both windows are
redisplayed, not just the one you just acted on.  Selecting any other
buffer does not cause redisplay of the other window.
21-Feb-83 19:27:53-EST,607;000000000000
Date: Monday, 21 February 1983, 19:25-EST
From: Mark J. Dulcey <Dulcey at MIT-OZ>
Subject: Suggestion for new DIRED feature
To: bug-zwei at MIT-OZ

How about a DIRED operation which does a Find File In Other Window
operation?  The idea is that you could edit files in a directory, while
still keeping the DIRED on the screen so you knew what else was there,
could move to other files easily, etc.

This would be useful when you have to edit a number of files, but don't
have to do much to each one -- perhaps you are correcting some sort of
usage for compatibility with a new software release.
21-Feb-83 19:32:44-EST,277;000000000000
Date: Monday, 21 February 1983, 19:28-EST
From: Mark J. Dulcey <Dulcey at MIT-OZ>
Subject: Help in Edit Buffers
To: bug-zwei at MIT-OZ

Perhaps Help in Edit Buffers should act like it now does in other
subsystems; i.e., give the usual Help system with the M item added.
21-Feb-83 20:23:10-EST,460;000000000000
Date: Monday, 21 February 1983, 20:20-EST
From: Mark J. Dulcey <Dulcey at MIT-OZ>
To: BUG-ZWEI at MIT-OZ

In ZWEI in Experimental MIT-Specific 18.0, Experimental System 93.8,
Experimental ZMail 49.1, microcode 226, gc@2, on Lisp Machine One:

While using two-window mode, clicking the mouse on the other pane to
select it no longer works properly (it did in 91).  The blinker in the
new window starts flashing, but commands still act on the old one!
21-Feb-83 22:33:08-EST,3670;000000000000
Date: Monday, 21 February 1983, 22:31-EST
From: Hdt@MIT-OZ
To: BUG-Zwei@MIT-OZ

In Experimental MIT-Specific 18.0, Experimental System 93.8,
Experimental ZMail 49.1, microcode 226, Love it or leave it,
on Lisp Machine Apiary-1:


I know we can't compelete function names so far, but I thought I'd try
anyway.  I typed meta-. si:set-all-s <altmode>

>>TRAP 7617 (ARGTYP ARRAY M-A 0 FALL-THROUGH AREF)
The first argument to AREF, NIL, was of the wrong type.
The function expected an array.
Backtrace from the debugger:

ZWEI:COMPLETE-CHUNK-COMPARE (P.C. = 155)

 Arg 0 (STR): NIL
 Arg 1 (DELIMS): (40 55)
 Arg 2 (NCHUNKS): 3
 Arg 3 (CHUNKS): #<ART-Q-24 30312751>
 Arg 4 (CHUNK-DELIMS): #<ART-32B-24 30313001>
 Arg 5 (TEMS): #<ART-Q-3 30313046>
 Arg 6 (RCHUNKS): #<ART-Q-3 30313052>
   --Defaulted args:--
 Arg 7 (NCHUNKS-FOR-ORDERING): 1
Local 0 (LEN2): 3
Local 1 (I): 0
Local 2 (J): 0
Local 3 (K): NIL
Local 4 (LEN1): 6
Local 5 (CHUNK): "si:set"
Local 6 (EXACT-SO-FAR): T
Local 7 (DELIM): NIL
Local 8 (J1): 0
Local 9 (K1): 0
Local 10 (CH1): 123
Local 11 (CH2): NIL


Additional information supplied with call:
 Expecting 5 values

ZWEI:COMPLETE-STRING (P.C. = 312)

 Arg 0 (STRING): "si:set-all-swap"
 Arg 1 (ALIST): (NIL NIL NIL NIL ...)
 Arg 2 (DELIMS): (40 55)
 Arg 3 (DONT-NEED-LIST): T
 Arg 4 (CHAR-POS): 17
 Arg 5 (TRUNC): NIL
 Arg 6 (IGNORE-TRAILING-SPACE): NIL
Local 0 (NCHUNKS): 3
Local 1 (CHUNKS): #<ART-Q-24 30312751>
Local 2 (CHUNK-DELIMS): #<ART-32B-24 30313001>
Local 3 (FILLS): #<ART-Q-3 30313042>
Local 4 (CHAMB): #<ART-1B-3 30313056>
Local 5 (TEMS): #<ART-Q-3 30313046>
Local 6 (RETS): NIL
Local 7 (RCHUNKS): #<ART-Q-3 30313052>
Local 8 (TEM): -1
Local 9 (LEN): 17
Local 10 (COMPLETED-P): NIL
Local 11 (CHAR-CHUNK): 2
Local 12 (CHAR-OFFSET): 5
Local 13 (MAGIC-POS): NIL
Local 14 (TAIL): (NIL NIL NIL NIL ...)
Local 15 (ONE-BEFORE-TAIL): (NIL NIL NIL NIL ...)
Local 16 (I): 20
Local 17 (J): 17
Local 18 (L): (NIL NIL NIL NIL ...)
Local 19 (ALL-AMBIG): NIL
Local 20 (FILL): NIL
Local 21 (LEN1): NIL


ZWEI:COMPLETE-LINE (P.C. = 107)

 Arg 0 (FORWARD-OK): T
 Arg 1 (MUST-COMPLETE): T
   --Defaulted args:--
 Arg 2 (INSERT): NIL
 Arg 3 (IGNORE-TRAILING-SPACE): NIL
Local 0 (NSTR): NIL
Local 1 (POSS): NIL
Local 2 (WINP): NIL
Local 3 (LINE): "si:set-all-swap"
Local 4 (POINT): ("si:set-all-swap" 17 NORMAL)
Local 5 (CHAR-POS): 17
Local 6 (EOLP): T
Local 7 (MAGIC-POS): NIL


ZWEI:COM-COMPLETE (P.C. = 27)



Additional information supplied with call:
 Expecting 3 values

ZWEI:COMMAND-EXECUTE (P.C. = 100)

 Arg 0 (COMMAND): ZWEI:COM-COMPLETE
 Arg 1 (CHAR): 33
 Arg 2 (PREFIX-CHAR): NIL
 Arg 3 (HOOK-LIST): (ZWEI:SHIFT-LOCK-HOOK)
Local 0 (G4734): NIL
Local 1 (HOOK): ZWEI:SHIFT-LOCK-HOOK


Remainder of stack:

ZWEI:PROCESS-COMMAND-CHAR (P.C. = 67)
(METHOD ZWEI:WINDOW EDIT) (P.C. = 465)
(INTERNAL (METHOD ZWEI:ZWEI-WITHOUT-TYPEOUT COMBINED EDIT) 0) (P.C. = 63)
FUNCALL (P.C. = 25)
(METHOD ZWEI:DISPLAYER AROUND EDIT) (P.C. = 31)
(METHOD ZWEI:ZWEI-WITHOUT-TYPEOUT COMBINED EDIT) (P.C. = 47)
ZWEI:EDIT-IN-MINI-BUFFER (P.C. = 345)
ZWEI:COMPLETING-READ-FROM-MINI-BUFFER (P.C. = 101)
ZWEI:READ-FUNCTION-NAME (P.C. = 702)
ZWEI:COM-EDIT-DEFINITION (P.C. = 77)
ZWEI:COMMAND-EXECUTE (P.C. = 100)
ZWEI:PROCESS-COMMAND-CHAR (P.C. = 67)
(METHOD ZWEI:WINDOW EDIT) (P.C. = 465)
(INTERNAL (METHOD ZWEI:ZMACS-WINDOW COMBINED EDIT) 0) (P.C. = 74)
FUNCALL (P.C. = 25)
(METHOD ZWEI:DISPLAYER AROUND EDIT) (P.C. = 31)
(METHOD ZWEI:ZMACS-WINDOW COMBINED EDIT) (P.C. = 47)
ZWEI:ZMACS-WINDOW-TOP-LEVEL (P.C. = 46)
SI:PROCESS-TOP-LEVEL (P.C. = 121)
21-Feb-83 23:18:15-EST,717;000000000000
Date: Monday, 21 February 1983, 23:16-EST
From: Robert P. Krajewski <RpK at MIT-OZ>
Subject: Indentation Bug
To: BUG-ZWEI at MIT-OZ

In ZWEI in Experimental MIT-Specific 18.0, Experimental System 93.8,
Experimental ZMail 49.1, microcode 226, gc@2, on Lisp Machine Three:

Notice how ZMacs indents this (in Lisp Mode, of course)

(DEFUN EXAMPLE-#-22 ()
       (FORMAT T "~&Sounds of paranormal spirits on tape."))

; as compared to

(DEFUN EXAMPLE-NUMBER-22 ()
  (FORMAT T "~&Sounds of paranormal spirits on tape."))

Can't ZWEI be smart enough to figure out that a # character in the
middle of a symbol can't be reader macro (maybe I'm wrong, but I guess
that's part of the problem) ?

``Bob''
21-Feb-83 23:30:32-EST,509;000000000000
Date: Monday, 21 February 1983, 23:29-EST
From: Robert P. Krajewski <RpK at MIT-OZ>
Subject: C-X ( not acknowledged in the mode line
To: BUG-ZWEI at MIT-OZ

In ZWEI in Experimental MIT-Specific 18.0, Experimental System 93.8,
Experimental ZMail 49.1, microcode 226, gc@2, on Lisp Machine Three:

When one defines a keyboard macro with C-X (, the mode line does not
reflect a macro definition is in progress.  Perhaps the old notification
was too verbose, but it was better than nothing.

``Bob''
21-Feb-83 23:43:17-EST,871;000000000000
Date: Monday, 21 February 1983, 23:39-EST
From: Robert P. Krajewski <RpK at MIT-OZ>
Subject: Fussy indentation bug
To: BUG-Zwei at MIT-OZ

In Experimental MIT-Specific 18.0, Experimental System 93.8,
Experimental ZMail 49.1, microcode 226, gc@2, on Lisp Machine Three:

Executing Evaluate Buffer with the following text caused complaints of
an open paren in column 0, and then an error (the function A is
undefined).

(SETQ FROB-THINGS '(

(A
  (B C))

(U 2)

(X T C)))

I realise that it's often a great error check to see where parentheses
are (relative to identation) when READing from a ZMacs buffer, but
sometimes it looks better to have elements of a list line up in column
0, if the enclosing list is not ``too far'' from top level.  Couldn't
there be some variable to ignore the indentation style when reading from
buffers ?

``Bob''
22-Feb-83 23:27:13-EST,2152;000000000000
Date: Tuesday, 22 February 1983, 23:21-EST
From: David Vinayak Wallace <Gumby at MIT-OZ>
To: BUG-ZWEI at MIT-OZ

In Experimental MIT-Specific 18.0, Experimental System 93.10,
Experimental ZMail 49.2, microcode 226, gc@2, on Lisp Machine Eight:


Insert your description of the circumstances here:

I did a C-X C-F to read a file, then changed my mind. I forgot to type
abort and instead typed C-M-L

>>TRAP 7445 (INSTANCE-LACKS-INSTANCE-VARIABLE
M-C M-A)
There is no instance variable ZWEI:SAVED-MODE-LIST in #<NODE 24540415>.
Backtrace from the debugger:

ZWEI:MAKE-BUFFER-CURRENT (P.C. = 114)

 Arg 0 (BUFFER): #<ZMACS-BUFFER "*Dired-2*" 33626766>


ZWEI:ROTATE-BUFFER-HISTORY (P.C. = 54)

 Arg 0 (N): 2
Local 0 (MAP-RESULT): NIL
Local 1 (MAP-TEMP): NIL
Local 2 (MAP-LOCAL-0): NIL
Local 3 (ELT): NIL


ZWEI:COM-SELECT-PREVIOUS-BUFFER (P.C. = 36)



Additional information supplied with call:
 Expecting 3 values

ZWEI:COMMAND-EXECUTE (P.C. = 100)

 Arg 0 (COMMAND): ZWEI:COM-SELECT-PREVIOUS-BUFFER
 Arg 1 (CHAR): 233
 Arg 2 (PREFIX-CHAR): NIL
 Arg 3 (HOOK-LIST): NIL
Local 0 (G4734): NIL
Local 1 (HOOK): NIL


ZWEI:PROCESS-COMMAND-CHAR (P.C. = 67)

 Arg 0 (CH): 233
Local 0 (VALUE): NIL
Local 1 (LINE): NIL
Local 2 (INDEX): NIL
Local 3 (G5246): NIL
Local 4 (HOOK): NIL


Remainder of stack:

(METHOD ZWEI:WINDOW EDIT) (P.C. = 465)
(INTERNAL (METHOD ZWEI:ZWEI-WITHOUT-TYPEOUT COMBINED EDIT) 0) (P.C. = 63)
FUNCALL (P.C. = 25)
(METHOD ZWEI:DISPLAYER AROUND EDIT) (P.C. = 31)
(METHOD ZWEI:ZWEI-WITHOUT-TYPEOUT COMBINED EDIT) (P.C. = 47)
ZWEI:EDIT-IN-MINI-BUFFER (P.C. = 345)
ZWEI:READ-UNDEFAULTED-PATHNAME-STRING (P.C. = 210)
ZWEI:READ-DEFAULTED-PATHNAME (P.C. = 64)
APPLY
SI:*EVAL (P.C. = 1145)
...
ZWEI:COMMAND-EXECUTE (P.C. = 100)
ZWEI:PROCESS-COMMAND-CHAR (P.C. = 67)
(METHOD ZWEI:WINDOW EDIT) (P.C. = 465)
(INTERNAL (METHOD ZWEI:ZMACS-WINDOW COMBINED EDIT) 0) (P.C. = 74)
FUNCALL (P.C. = 25)
(METHOD ZWEI:DISPLAYER AROUND EDIT) (P.C. = 31)
(METHOD ZWEI:ZMACS-WINDOW COMBINED EDIT) (P.C. = 47)
ZWEI:ZMACS-WINDOW-TOP-LEVEL (P.C. = 46)
SI:PROCESS-TOP-LEVEL (P.C. = 121)
22-Feb-83 23:32:34-EST,439;000000000000
Date: Tuesday, 22 February 1983, 23:31-EST
From: David Vinayak Wallace <Gumby at MIT-OZ>
To: BUG-ZWEI at MIT-OZ

In ZWEI in Experimental MIT-Specific 18.0, Experimental System 93.10,
Experimental ZMail 49.2, microcode 226, gc@2, on Lisp Machine Eight:

Zwei should warn me before I read a binary file. Normally I'd rather not
load a qfasl or other binary (they tend to be long and useless). It
should ask for confirmation first.
23-Feb-83 11:08:21-EST,1454;000000000000
Date: Wednesday, 23 February 1983, 11:05-EST
From: Webster Dove <dove at MIT-DSPG>
To: BUG-ZWEI at MIT-OZ

In ZWEI in Remote-File 22.0, LMFILE-Remote 23.1, MIT-Specific 16.0,
System 91.43, ZMail 48.7, microcode 216, "91.44", on Ford Prefect:

It appears that starting a defun documentation line with '(' causes
electric-shift-lock mode to go into upper case (as if a close quote had
been typed.  It also fouls up the enclosing parenthesis count (note that
the first paren of the upper defun won't blink when you put the cursor
just after the last paren.

(DEFUN INTERVAL (START END)
  "create an interval from start to end
Generally, integer intervals contain all reals from n.0 to n.9999...
(0 4) CONTAINS  0.0 <= X < 5.0
REAL INTERVALS ONLY CONTAING WHAT THEY SAY.
(0.0 4.0) CONTAINS 0.0 <= X <= 4.0"
  (CHECK-ARG-TYPE START NUMBER)
  (CHECK-ARG-TYPE END NUMBER)
  (COND ((> START END)
	 (FERROR NIL "start ~A after end ~A" START END)))
  (MAKE-INTERVAL START START
		 END END))

(DEFUN INTERVAL (START END)
  "create an interval from start to end
 Generally, integer intervals contain all reals from n.0 to n.9999...
 (0 4) contains  0.0 <= x < 5.0
 real intervals only containg what they say.
 (0.0 4.0) contains 0.0 <= x <= 4.0"
  (CHECK-ARG-TYPE START NUMBER)
  (CHECK-ARG-TYPE END NUMBER)
  (COND ((> START END)
	 (FERROR NIL "start ~A after end ~A" START END)))
  (MAKE-INTERVAL START START
		 END END))


23-Feb-83 13:55:19-EST,806;000000000000
Date: Wednesday, 23 February 1983, 13:47-EST
From: Mike McMahon <MMcM at SCRC-TENEX>
To: dove at MIT-DSPG
Cc: BUG-ZWEI at MIT-OZ
In-reply-to: The message of 23 Feb 83 11:05-EST from Webster Dove <dove at MIT-DSPG>

    Date: Wednesday, 23 February 1983, 11:05-EST
    From: Webster Dove <dove at MIT-DSPG>
    It appears that starting a defun documentation line with '(' causes
    electric-shift-lock mode to go into upper case (as if a close quote had
    been typed.  It also fouls up the enclosing parenthesis count (note that
    the first paren of the upper defun won't blink when you put the cursor
    just after the last paren.
You must slashify open parens in column zero within a string.  Doing so will
not affect lisp and makes the editor not consider them the start of a defun.
23-Feb-83 15:06:29-EST,806;000000000000
Date: Wednesday, 23 February 1983, 13:47-EST
From: Mike McMahon <MMcM at SCRC-TENEX>
To: dove at MIT-DSPG
Cc: BUG-ZWEI at MIT-OZ
In-reply-to: The message of 23 Feb 83 11:05-EST from Webster Dove <dove at MIT-DSPG>

    Date: Wednesday, 23 February 1983, 11:05-EST
    From: Webster Dove <dove at MIT-DSPG>
    It appears that starting a defun documentation line with '(' causes
    electric-shift-lock mode to go into upper case (as if a close quote had
    been typed.  It also fouls up the enclosing parenthesis count (note that
    the first paren of the upper defun won't blink when you put the cursor
    just after the last paren.
You must slashify open parens in column zero within a string.  Doing so will
not affect lisp and makes the editor not consider them the start of a defun.
23-Feb-83 20:40:49-EST,808;000000000000
Date: Wednesday, 23 February 1983, 20:35-EST
From: John Bradstreet <Bradst ! at MIT-OZ>
Subject: Auto Fill in {TeX} mode
To: BUG-ZWEI at MIT-OZ

In ZWEI in Remote-File 22.0, LMFILE-Remote 23.1, MIT-Specific 16.0,
System 91.43, ZMail 48.7, microcode 204, "?gc@43",
on Lisp Machine Four:

Hi there !.  I have something I like to add to your wish list.

   Although Zwie's Auto Fill mode while in {TeX} mode tends to work very
well while typing in text, it tends to mess up when typeing in long
mathmatical equations.  What would be nice is automatically turn off the
Auto fill Mode while in TeX's Display Math mode {i.e. inside a \math{}
or a $${}$$ region, and then turn it back on when this is done.  Would
it be possible to do this ?
                                  >>> J.Bradstreet <<<
23-Feb-83 20:41:25-EST,367;000000000000
Date: Wednesday, 23 February 1983, 20:36-EST
From: Robert P. Krajewski <RpK at MIT-OZ>
Subject: Typeout from M-X Apropos....
To: BUG-ZWEI at MIT-OZ

In ZWEI in Experimental MIT-Specific 18.0, Experimental System 93.11,
Experimental ZMail 49.4, microcode 226, gc@2, on Lisp Machine One:

should have any found commands mouse sensitive to select.


``Bob''
23-Feb-83 20:45:47-EST,599;000000000000
Date: Wednesday, 23 February 1983, 20:44-EST
From: Robert P. Krajewski <RpK at MIT-OZ>
Subject: M-X Resume Patch ...
To: BUG-ZWEI at MIT-OZ

In ZWEI in Experimental MIT-Specific 18.0, Experimental System 93.11,
Experimental ZMail 49.4, microcode 226, gc@2, on Lisp Machine One:

should make it clear that it wants to know the which MINOR version of
the loaded major version of the system in question to continue doing.
I gave a 93.13 in response to the version query, and it did a Find File
of OZ:SRC:<L.PATCH>SYSTEM-93-93.13.LISP for me.  Stupid computer, do
what I mean !

``Bob''
23-Feb-83 22:29:25-EST,2474;000000000000
Date: Wednesday, 23 February 1983, 22:22-EST
From: Robert P. Krajewski <RpK at MIT-OZ>
Subject: C-X 4 F ...
To: BUG-Zwei at MIT-OZ

In Experimental MIT-Specific 18.0, Experimental System 93.11,
Experimental ZMail 49.4, microcode 226, gc@2, on Lisp Machine One:

gave me the following error, twice, in two invocations.  The first time,
it did it before it queried me for a file.  The second time, shown it
gory detail here, it happened after the query.

Insert your description of the circumstances here:


>>TRAP 16234 (TRANS-TRAP)
The instance variable ZWEI:START-BP is unbound in #<ZMACS-WINDOW-PANE Zmacs Window Pane 3 15426274 deactivated>.
Backtrace from the debugger:

ZWEI:SET-WINDOW-INTERVAL-1 (P.C. = 77)

 Arg 0 (WINDOW): #<ZMACS-WINDOW-PANE Zmacs Window Pane 3 15426274 deactivated>
 Arg 1 (INTERVAL): #<ZMACS-BUFFER "CHSAUX.LISP SRC:<L.IO> OZ:" 33603104>
Local 0 (FIRST-BP): NIL


(:METHOD ZWEI:ZMACS-WINDOW :SET-INTERVAL-INTERNAL) (P.C. = 103)

 Arg 0 (OPERATION): :SET-INTERVAL-INTERNAL
 Arg 1 (BUFFER): #<ZMACS-BUFFER "CHSAUX.LISP SRC:<L.IO> OZ:" 33603104>


FUNCALL (P.C. = 25)

 Arg 0 (FN): #<ZMACS-WINDOW-PANE Zmacs Window Pane 3 15426274 deactivated>
 Rest arg (ARGS): (:SET-INTERVAL-INTERNAL #<ZMACS-BUFFER "CHSAUX.LISP SRC:<L.IO> OZ:" 33603104>)


(:METHOD ZWEI:DISPLAYER :AFTER :INIT) (P.C. = 34)

 Arg 0 (OPERATION): :INIT
 Arg 1 (IGNORE): #<DTP-LOCATIVE 22741060>


(:METHOD ZWEI:ZMACS-WINDOW-PANE :COMBINED :INIT) (P.C. = 254)

 Rest arg (.DAEMON-CALLER-ARGS.): (:INIT #<DTP-LOCATIVE 22741060>)
Local 1 (.DAEMON-MAPPING-TABLE.): #<ART-16B-6 16010341>
Local 2 (.VAL1.): #<ZMACS-WINDOW-PANE Zmacs Window Pane 3 15426274 deactivated>
Local 3 (.VAL2.): NIL
Local 4 (.VAL3.): NIL


Remainder of stack:

TV:MAKE-WINDOW (P.C. = 151)
(:METHOD ZWEI:ZWEI-FRAME :CREATE-WINDOW) (P.C. = 54)
(:METHOD ZWEI:ZMACS-FRAME :TWO-EDITOR-WINDOWS) (P.C. = 116)
ZWEI:SWITCH-WINDOWS (P.C. = 72)
ZWEI:COM-MODIFIED-TWO-WINDOWS (P.C. = 161)
ZWEI:COMMAND-EXECUTE (P.C. = 100)
ZWEI:MAKE-EXTENDED-COMMAND-INTERNAL (P.C. = 103)
ZWEI:COMMAND-EXECUTE (P.C. = 100)
ZWEI:PROCESS-COMMAND-CHAR (P.C. = 67)
(:METHOD ZWEI:WINDOW :EDIT) (P.C. = 465)
(:INTERNAL (:METHOD ZWEI:ZMACS-WINDOW :COMBINED :EDIT) 0) (P.C. = 74)
FUNCALL (P.C. = 25)
(:METHOD ZWEI:DISPLAYER :AROUND :EDIT) (P.C. = 31)
(:METHOD ZWEI:ZMACS-WINDOW :COMBINED :EDIT) (P.C. = 47)
ZWEI:ZMACS-WINDOW-TOP-LEVEL (P.C. = 46)
PROCESS-TOP-LEVEL (P.C. = 121)
24-Feb-83 01:39:15-EST,2421;000000000000
Date: Thursday, 24 February 1983, 01:35-EST
From: David Vinayak Wallace <Gumby at MIT-OZ>
Subject: C-X 2 broken
To: BUG-ZWEI at MIT-OZ

In Experimental MIT-Specific 18.0, Experimental System 93.11,
Experimental ZMail 49.4, microcode 226, gc@2, on Lisp Machine Six:


Insert your description of the circumstances here:

I typed C-X 2 and it bombed. Ps: there should be an extra newline
before the backtrace so that the backtrace and the description are
visually seperated.

>>TRAP 16234 (TRANS-TRAP)
The instance variable ZWEI:START-BP is unbound in #<ZMACS-WINDOW-PANE Zmacs Window Pane 3 15426213 deactivated>.
Backtrace from the debugger:

ZWEI:SET-WINDOW-INTERVAL-1 (P.C. = 77)

 Arg 0 (WINDOW): #<ZMACS-WINDOW-PANE Zmacs Window Pane 3 15426213 deactivated>
 Arg 1 (INTERVAL): #<ZMACS-BUFFER "FORK.LSP PS:<HACTRN.SOURCE> OZ:" 33532606>
Local 0 (FIRST-BP): NIL


(METHOD ZWEI:ZMACS-WINDOW SET-INTERVAL-INTERNAL) (P.C. = 103)

 Arg 0 (OPERATION): SET-INTERVAL-INTERNAL
 Arg 1 (BUFFER): #<ZMACS-BUFFER "FORK.LSP PS:<HACTRN.SOURCE> OZ:" 33532606>


FUNCALL (P.C. = 25)

 Arg 0 (FN): #<ZMACS-WINDOW-PANE Zmacs Window Pane 3 15426213 deactivated>
 Rest arg (ARGS): (SET-INTERVAL-INTERNAL #<ZMACS-BUFFER "FORK.LSP PS:<HACTRN.SOURCE> OZ:" 33532606>)


(METHOD ZWEI:DISPLAYER AFTER INIT) (P.C. = 34)

 Arg 0 (OPERATION): INIT
 Arg 1 (IGNORE): #<DTP-LOCATIVE 22741054>


(METHOD ZWEI:ZMACS-WINDOW-PANE COMBINED INIT) (P.C. = 254)

 Rest arg (.DAEMON-CALLER-ARGS.): (INIT #<DTP-LOCATIVE 22741054>)
Local 1 (.DAEMON-MAPPING-TABLE.): #<ART-16B-6 16010341>
Local 2 (.VAL1.): #<ZMACS-WINDOW-PANE Zmacs Window Pane 3 15426213 deactivated>
Local 3 (.VAL2.): NIL
Local 4 (.VAL3.): NIL


Remainder of stack:

TV:MAKE-WINDOW (P.C. = 151)
(METHOD ZWEI:ZWEI-FRAME CREATE-WINDOW) (P.C. = 54)
(METHOD ZWEI:ZMACS-FRAME TWO-EDITOR-WINDOWS) (P.C. = 116)
ZWEI:SWITCH-WINDOWS (P.C. = 72)
ZWEI:COM-TWO-WINDOWS (P.C. = 27)
ZWEI:COMMAND-EXECUTE (P.C. = 100)
ZWEI:MAKE-EXTENDED-COMMAND-INTERNAL (P.C. = 103)
ZWEI:COMMAND-EXECUTE (P.C. = 100)
ZWEI:PROCESS-COMMAND-CHAR (P.C. = 67)
(METHOD ZWEI:WINDOW EDIT) (P.C. = 465)
(INTERNAL (METHOD ZWEI:ZMACS-WINDOW COMBINED EDIT) 0) (P.C. = 74)
FUNCALL (P.C. = 25)
(METHOD ZWEI:DISPLAYER AROUND EDIT) (P.C. = 31)
(METHOD ZWEI:ZMACS-WINDOW COMBINED EDIT) (P.C. = 47)
ZWEI:ZMACS-WINDOW-TOP-LEVEL (P.C. = 46)
SI:PROCESS-TOP-LEVEL (P.C. = 121)
24-Feb-83 01:40:18-EST,3340;000000000000
Date: Thursday, 24 February 1983, 01:37-EST
From: David Vinayak Wallace <Gumby at MIT-OZ>
To: BUG-ZWEI at MIT-OZ

In Experimental MIT-Specific 18.0, Experimental System 93.11,
Experimental ZMail 49.4, microcode 226, gc@2, on Lisp Machine Six:


Insert your description of the circumstances here:

M-X Revert buffer doesn't work

>>TRAP 3772 (ARGTYP INSTANCE PP 0 XINSTANCE-LOC %INSTANCE-LOC)
The first argument to SYS:%INSTANCE-LOC, (";;; -*-Lisp-*-" 0 NORMAL), was of the wrong type.
The function expected an instance.
Backtrace from the debugger:

ZWEI:COUNT-LINES (P.C. = 25)

 Arg 0 (FROM-BP): (";;; -*-Lisp-*-" 0 NORMAL)
 Arg 1 (TO-BP): NIL
 Arg 2 (IN-ORDER-P): T
Local 0 (LINE): NIL
Local 1 (LAST-LINE): NIL
Local 2 (I): NIL


ZWEI:REVERT-FILE-BUFFER (P.C. = 622)

 Arg 0 (BUFFER): #<ZMACS-BUFFER "FORK.LSP PS:<HACTRN.SOURCE> OZ:" 33532606>
 Arg 1 (PATHNAME): #FS:TOPS20-PATHNAME "OZ:PS:<HACTRN.SOURCE>FORK.LSP"
 Arg 2 (CONNECT-FLAG): (#FS:TOPS20-PATHNAME "OZ:PS:<HACTRN.SOURCE>FORK.LSP.27" . 23431057462)
 Arg 3 (SELECT-FLAG): NIL
 Arg 4 (QUIETLY-FLAG): NIL
Local 0 (GENERIC-PATHNAME): #FS:TOPS20-PATHNAME "OZ:PS:<HACTRN.SOURCE>FORK.."
Local 1 (PATHNAME-STRING): "FORK.LSP PS:<HACTRN.SOURCE> OZ:"
Local 2 (TRUENAME): #FS:TOPS20-PATHNAME "OZ:PS:<HACTRN.SOURCE>FORK.LSP.27"
Local 3 (NEW-MODE): ZWEI:LISP-MODE
Local 4 (G8689): #<FILE-INPUT-CHARACTER-STREAM "OZ:PS:<HACTRN.SOURCE>FORK.LSP" 27664110>
Local 5 (.FILE-ABORTED-FLAG.): ABORT
Local 6 (STREAM): #<FILE-INPUT-CHARACTER-STREAM "OZ:PS:<HACTRN.SOURCE>FORK.LSP" 27664110>
Local 7 (G8691): (202471 . 400025)
Local 8 (G8692): (#<DTP-FEF-POINTER ZWEI:COUNT-LINES 16762515> ";;; -*-Lisp-*-" 0 NORMAL)
Local 9 (THIS-VERSION): 33
Local 10 (INSTALLED-TRUENAME): NIL
Local 11 (INSTALLED-VERSION): NIL
Local 12 (SAVED-POINT): NIL
Local 13 (NLINES): NIL
Local 14 (NCHARS): NIL
Local 15 (FONTS): NIL
Local 16 (FONTS-P): NIL
Local 17 (I): NIL
Local 18 (LINE): NIL
Local 19 (EOFFLG): NIL
Local 20 (WINDOW): NIL
Local 21 (STREAM): NIL
Local 22 (*SELECTQ-ITEM*): NIL
Local 23 (MODE): NIL


(METHOD ZWEI:ZMACS-BUFFER REVERT) (P.C. = 44)

 Arg 0 (OPERATION): REVERT
 Arg 1 (NEW-PATHNAME): #FS:TOPS20-PATHNAME "OZ:PS:<HACTRN.SOURCE>FORK.LSP"
 Arg 2 (CONNECT-FLAG): (#FS:TOPS20-PATHNAME "OZ:PS:<HACTRN.SOURCE>FORK.LSP.27" . 23431057462)
 Arg 3 (SELECT-FLAG): NIL
 Arg 4 (QUIETLY-FLAG): NIL


ZWEI:REVERT-BUFFER (P.C. = 66)

 Arg 0 (BUFFER): #<ZMACS-BUFFER "FORK.LSP PS:<HACTRN.SOURCE> OZ:" 33532606>
   --Defaulted args:--
 Arg 1 (PATHNAME): #FS:TOPS20-PATHNAME "OZ:PS:<HACTRN.SOURCE>FORK.LSP"
 Arg 2 (CONNECT-FLAG): (#FS:TOPS20-PATHNAME "OZ:PS:<HACTRN.SOURCE>FORK.LSP.27" . 23431057462)
 Arg 3 (SELECT-FLAG): NIL
 Arg 4 (QUIETLY-FLAG): NIL


ZWEI:COM-REVERT-BUFFER (P.C. = 42)

Local 0 (BUFFER): #<ZMACS-BUFFER "FORK.LSP PS:<HACTRN.SOURCE> OZ:" 33532606>


Remainder of stack:

ZWEI:COM-EXTENDED-COMMAND (P.C. = 67)
ZWEI:COMMAND-EXECUTE (P.C. = 100)
ZWEI:PROCESS-COMMAND-CHAR (P.C. = 67)
(METHOD ZWEI:WINDOW EDIT) (P.C. = 465)
(INTERNAL (METHOD ZWEI:ZMACS-WINDOW COMBINED EDIT) 0) (P.C. = 74)
FUNCALL (P.C. = 25)
(METHOD ZWEI:DISPLAYER AROUND EDIT) (P.C. = 31)
(METHOD ZWEI:ZMACS-WINDOW COMBINED EDIT) (P.C. = 47)
ZWEI:ZMACS-WINDOW-TOP-LEVEL (P.C. = 46)
SI:PROCESS-TOP-LEVEL (P.C. = 121)
25-Feb-83 23:47:08-EST,2322;000000000000
Date: Friday, 25 February 1983, 23:44-EST
From: David Chapman <Zvona at MIT-OZ>
Subject: zwei loss
To: BUG-zwei at MIT-OZ

In Release 4.1, System 222.171, site configuration 16, on Lisp Machine Six:

I got this when resuming from a zwei breakpoint with typeahead that did
a Clean directory on <cm.chip>.

>>Trap: There was no pending *CATCH for the tag ZWEI:MODE-LINE-OVERFLOW.
The values being thrown were T, ZWEI:MODE-LINE-OVERFLOW
While in the function (METHOD ZWEI:MODE-LINE-WINDOW-MIXIN BEFORE END-OF-LINE-EXCEPTION)  (METHOD ZWEI:ZMACS-MODE-LINE-WINDOW COMBINED END-OF-LINE-EXCEPTION)  (DEFUN-METHOD TV:SHEET-DISPLAY-LOSENGED-STRING)


(METHOD ZWEI:MODE-LINE-WINDOW-MIXIN BEFORE END-OF-LINE-EXCEPTION): (P.C. = 34)
 (SELF = #<ZMACS-MODE-LINE-WINDOW Zmacs Mode Line Window 4 20557362 exposed>)
 Arg 0 (OPERATION): END-OF-LINE-EXCEPTION


(METHOD ZWEI:MODE-LINE-WINDOW-MIXIN BEFORE END-OF-LINE-EXCEPTION):  (P.C. = 34)
   (SELF = #<ZMACS-MODE-LINE-WINDOW Zmacs Mode Line Window 4 20557362 exposed>)
   Arg 0 (OPERATION): END-OF-LINE-EXCEPTION

(METHOD ZWEI:ZMACS-MODE-LINE-WINDOW COMBINED END-OF-LINE-EXCEPTION):  (P.C. = 40)
   (SELF = #<ZMACS-MODE-LINE-WINDOW Zmacs Mode Line Window 4 20557362 exposed>)
   Rest arg (.DAEMON-CALLER-ARGS.): (END-OF-LINE-EXCEPTION)

(DEFUN-METHOD TV:SHEET-DISPLAY-LOSENGED-STRING):  (P.C. = 103)
   (SELF = #<ZMACS-MODE-LINE-WINDOW Zmacs Mode Line Window 4 20557362 exposed>)
   Arg 0 (SELF-MAPPING-TABLE): TV:SHEET
   Arg 1 (STRING): "Return"

(DEFUN-METHOD TV:SHEET-TYO-FUNNY-CHAR):  (P.C. = 320)
   (SELF = #<ZMACS-MODE-LINE-WINDOW Zmacs Mode Line Window 4 20557362 exposed>)
   Arg 0 (SELF-MAPPING-TABLE): TV:SHEET
   Arg 1 (CHAR): 215

(METHOD TV:SHEET TYO):  (P.C. = 213)
   (SELF = #<ZMACS-MODE-LINE-WINDOW Zmacs Mode Line Window 4 20557362 exposed>)
   Arg 0 (OPERATION): TYO
   Arg 1 (CHAR): 215
   --Defaulted args:--
   Arg 2 (FONT): NIL

(METHOD TV:STREAM-MIXIN FRESH-LINE):  (P.C. = 42)
   (SELF = #<ZMACS-MODE-LINE-WINDOW Zmacs Mode Line Window 4 20557362 exposed>)
   Arg 0 (OPERATION): FRESH-LINE

FORMAT:FORMAT-CTL-FRESH-LINE:  (P.C. = 34)
   Arg 0 (PARAMS): NIL

FORMAT:FORMAT-CTL-OP:  (P.C. = 63)
   Arg 0 (OP): FORMAT:&
   Arg 1 (ARGS): (#<TOPS20-PATHNAME "OZ:PS:<CM.CHIP>*.*.*"> 2)
   Arg 2 (PARAMS): NIL
27-Feb-83 21:24:50-EST,440;000000000000
Return-path: <Gumby@MIT-OZ>
Date: Sunday, 27 February 1983, 21:22-EST
From: David Vinayak Wallace <Gumby@MIT-OZ>
To: BUG-ZWEI@MIT-OZ

In ZWEI in Experimental MIT-Specific 18.1, Experimental System 93.18,
Experimental ZMail 49.8, microcode 226, gc@2, on Lisp Machine Nine:

C-X 2 makes two windows, but doesn't select one. That is, no cursors
blink, and any keystrokes I type go un-noticed until I select one window
with the mouse. 1-Mar-83 14:53:42-EST,378;000000000000
Return-path: <HDT@MIT-OZ>
Date: Monday, 28 February 1983, 07:15-EST
From: HDT@MIT-OZ
To: BUG-ZWEI@MIT-OZ

In ZWEI in Experimental MIT-Specific 18.1, Experimental System 93.20,
Experimental ZMail 49.8, microcode 226, gc@2,
on Lisp Machine Apiary-1:

Lots of things don't seem mousable, like buffer names generated by
control-x control-b.  Or maybe its just too early.
 4-Mar-83 12:28:57-EST,663;000000000000
Return-path: <dove@MIT-DSPG>
Date: Friday, 4 March 1983, 12:25-EST
From: Webster Dove <dove at MIT-DSPG>
To: BUG-ZWEI at MIT-OZ

In ZWEI in Experimental MIT-Specific 18.1, Experimental System 93.22,
Experimental ZMail 49.9, microcode 226, gc@2, on Ford Prefect:

This is a comment to implementors.

I frequently find myself typing text in comments in and around lisp
code.  It might be nice if the tab conventions within comments behaved
as though comments were text and the tab conventions within code behaved
as for code.  This could adversely affect those trying to put code in
comments, but I personally find myself using text more frequently.
 4-Mar-83 14:23:03-EST,715;000000000000
Return-path: <MMcM@SCRC-TENEX>
Date: Friday, 4 March 1983, 14:08-EST
From: Mike McMahon <MMcM at SCRC-TENEX>
To: dove at MIT-DSPG
Cc: BUG-ZWEI at MIT-OZ
In-reply-to: The message of 4 Mar 83 12:25-EST from Webster Dove <dove at MIT-DSPG>

    Date: Friday, 4 March 1983, 12:25-EST
    From: Webster Dove <dove at MIT-DSPG>
	   It might be nice if the tab conventions within comments behaved
    as though comments were text and the tab conventions within code behaved
    as for code.
There is a command to which you can bind TAB to get this behaviour.
In brand S systems it is called COM-INDENT-FOR-LISP-COMMENTS-SPECIAL,
it's been around for years, so I'm sure it's in LMIT systems under some name.
 4-Mar-83 15:43:14-EST,505;000000000000
Return-path: <MOON@SCRC-TENEX>
Date: Friday, 4 March 1983  15:35-EST
From: MOON at SCRC-TENEX
To:   Mike McMahon <MMcM at SCRC-TENEX>
Cc:   BUG-ZWEI at MIT-OZ, dove at MIT-DSPG
Subject: COM-INDENT-FOR-LISP-COMMENTS-SPECIAL
In-reply-to: The message of 4 Mar 1983 14:08-EST from Mike McMahon <MMcM at SCRC-TENEX>

It doesn't work.  To be more specific, it only affects comments
that start at the beginning of the line.  Its self documentation
admits this, but I can't really see it as a feature.
 7-Mar-83 08:19:53-EST,441;000000000000
Return-path: <Klotz@MIT-OZ>
Date: Monday, 7 March 1983, 01:49-EST
From: Leigh L. Klotz <Klotz@MIT-OZ>
To: BUG-zwei@MIT-OZ

In zwei in Release 4.1, System 222.171, site configuration 14, on Lisp Machine Eight:

I did M-. of DEFMACRO, and it complained it couldn't find the definition, although
it positioned the cursor in the right place.  Presumably it doesn't look for
the form that is used: (defun (defmacro macro)...)

Leigh.
 7-Mar-83 17:20:57-EST,574;000000000000
Return-path: <dove@MIT-DSPG>
Date: Monday, 7 March 1983, 17:19-EST
From: Webster Dove <dove at MIT-DSPG>
To: BUG-ZWEI at MIT-OZ

In ZWEI in Experimental MIT-Specific 18.1, Experimental System 93.24,
Experimental ZMail 49.9, microcode 226, gc@2, on Ford Prefect:

It appears that the bug I just reported (a backtrace of a pdl overflow
while attempting to print a string) has another symptom.  I now note a
zwei buffer was created with the name "interval.LISP"  this is almost
the correct name, it should be "interval.l" because I was using unix. 
Hope this helps. 7-Mar-83 21:47:34-EST,686;000000000000
Return-path: <Moon@SCRC-TENEX>
Date: Monday, 7 March 1983, 21:45-EST
From: David A. Moon <Moon at SCRC-TENEX>
To: Leigh L. Klotz <Klotz at MIT-OZ>
Cc: BUG-zwei at MIT-OZ
In-reply-to: The message of 7 Mar 83 01:49-EST from Leigh L. Klotz <Klotz at MIT-OZ>

    Date: Monday, 7 March 1983, 01:49-EST
    From: Leigh L. Klotz <Klotz@MIT-OZ>

    I did M-. of DEFMACRO, and it complained it couldn't find the definition, although
    it positioned the cursor in the right place.  Presumably it doesn't look for
    the form that is used: (defun (defmacro macro)...)

I think it uses that absurd syntax because it had to be able to work in
both the Lisp machine and Maclisp.
 9-Mar-83 23:28:10-EST,2785;000000000000
Return-path: <Gumby@MIT-OZ>
Date: Wednesday, 9 March 1983, 23:27-EST
From: David Vinayak Wallace <Gumby@MIT-OZ>
To: BUG-ZWEI@MIT-OZ

In Experimental MIT-Specific 18.1, Experimental System 93.24,
Experimental ZMail 49.9, microcode 226, gc@22, on Lisp Machine Six:


Insert your description of the circumstances here:

I did M-X set buffer savC-?

>>ERROR: The argument ARRAY was 0, which is not an array.
Backtrace from the debugger:

ARRAY-DIMENSION (P.C. = 64)

 Arg 0 (ARRAY): 0
 Arg 1 (DIMENSION-NUMBER): #<ART-16B-1750-200 21607373>
Local 0 (RANK): NIL
Local 1 (INDEX-LENGTH): NIL
Local 2 (LONG-ARRAY-P): NIL
Local 3 (I): NIL


ZWEI:BUILD-FSM-TREE (P.C. = 44)

 Arg 0 (STRING-LIST): ("Set" "buffer" "sav")
 Arg 1 (*NCHARN*): 12
Local 0 (I): NIL
Local 1 (G2024): NIL
Local 2 (J): NIL
Local 3 (G2029): NIL
Local 4 (STRING): NIL


ZWEI:BUILD-FSM (P.C. = 53)

 Arg 0 (STRING-LIST): ("Set" "buffer" "sav")
   --Defaulted args:--
 Arg 1 (CASE-DEPENDENT-P): NIL
Local 0 (NCHARN): 12
Local 1 (NSTATES): NIL


ZWEI:FSM-STRING-SEARCH (P.C. = 65)

 Arg 0 (KEY): (("Set" "buffer" "sav") NIL NIL)
 Arg 1 (STRING): "Revert Buffer"
   --Defaulted args:--
 Arg 2 (FROM): NIL
 Arg 3 (TO): NIL
Local 0 (LEN): 15
Local 1 (STRINGS): ("Set" "buffer" "sav")
Local 2 (EXPR): NIL
Local 3 (CR-P): NIL
Local 4 (I): NIL
Local 5 (LIST): NIL
Local 6 (STATE): NIL
Local 7 (CH): NIL
Local 8 (STATE): NIL
Local 9 (OSTATE): NIL
Local 10 (WORD): NIL


ZWEI:COM-COMPLETION-APROPOS (P.C. = 222)

Local 0 (LINE): (("Set" "buffer" "sav") NIL NIL)
Local 1 (FUNCTION): ZWEI:FSM-STRING-SEARCH
Local 2 (IDX): 3
Local 3 (I): 13
Local 4 (J): NIL
Local 5 (LIST): ("sav")
Local 6 (ALIST): (("Revert Buffer" . ZWEI:COM-REVERT-BUFFER) ("Not Modified" . ZWEI:COM-NOT-MODIFIED) ("Visit Tag Table" . ZWEI:COM-VISIT-TAG-TABLE) ("List Buffers" . ZWEI:COM-LIST-BUFFERS) ...)
Local 7 (POSS): NIL


Remainder of stack:

ZWEI:COMMAND-EXECUTE (P.C. = 100)
ZWEI:PROCESS-COMMAND-CHAR (P.C. = 67)
(METHOD ZWEI:WINDOW EDIT) (P.C. = 465)
(INTERNAL (METHOD ZWEI:ZWEI-WITHOUT-TYPEOUT COMBINED EDIT) 0) (P.C. = 63)
FUNCALL (P.C. = 25)
(METHOD ZWEI:DISPLAYER AROUND EDIT) (P.C. = 31)
(METHOD ZWEI:ZWEI-WITHOUT-TYPEOUT COMBINED EDIT) (P.C. = 47)
ZWEI:EDIT-IN-MINI-BUFFER (P.C. = 345)
ZWEI:COMPLETING-READ-FROM-MINI-BUFFER (P.C. = 101)
ZWEI:GET-EXTENDED-COMMAND (P.C. = 36)
...
ZWEI:COMMAND-EXECUTE (P.C. = 100)
ZWEI:PROCESS-COMMAND-CHAR (P.C. = 67)
(METHOD ZWEI:WINDOW EDIT) (P.C. = 465)
(INTERNAL (METHOD ZWEI:ZMACS-WINDOW COMBINED EDIT) 0) (P.C. = 74)
FUNCALL (P.C. = 25)
(METHOD ZWEI:DISPLAYER AROUND EDIT) (P.C. = 31)
(METHOD ZWEI:ZMACS-WINDOW COMBINED EDIT) (P.C. = 47)
ZWEI:ZMACS-WINDOW-TOP-LEVEL (P.C. = 46)
SI:PROCESS-TOP-LEVEL (P.C. = 121)
10-Mar-83 04:27:29-EST,460;000000000000
Return-path: <Gumby@MIT-OZ>
Date: Thursday, 10 March 1983, 04:22-EST
From: David Vinayak Wallace <Gumby@MIT-OZ>
To: BUG-ZWEI@MIT-OZ

In Experimental MIT-Specific 18.1, Experimental System 93.24,
Experimental ZMail 49.9, microcode 226, gc@22, on Lisp Machine Six:

(defun foo () <linefeed>
  (some-forms))

#|

(here is some commented-out stuff)

|#

(defun foo () <linefeed>
       (some-forms))

The indentation after the comment is wrong.13-Mar-83 21:29:11-EST,664;000000000000
Return-path: <RLH@MIT-EDDIE>
Date: Sunday, 13 March 1983, 21:25-EST
From: Roger L. Hale <RLH at MIT-EDDIE>
To: BUG-ZWEI at MIT-OZ

In ZWEI in MIT-Specific 18.1, System 93.29, ZMail 49.9, microcode 226,
gc@2, on Ford Prefect:

The sequence of events:
   Meta-X Edit Word Abbrevs  gives me a "Zwei-overlying-window"
in which to edit them.
   <help> a  then invokes (zwei:get-extended-search-string "Apropos.  (Substring:)"),
	     which invokes (zwei:edit-in-mini-buffer)
	     which in (prog* kludge ...)
		   sends *window* [the overlying-window] ':top-of-window-hierarchy,
which goes unclaimed.
Zwei-overlying-windows should know this message...
13-Mar-83 22:01:59-EST,918;000000000000
Return-path: <RLH@MIT-EDDIE>
Date: Sunday, 13 March 1983, 21:58-EST
From: Roger L. Hale <RLH at MIT-EDDIE>
To: BUG-ZWEI at MIT-OZ

In ZWEI in MIT-Specific 18.1, System 93.29, ZMail 49.9, microcode 226,
gc@2, on Ford Prefect:

The sequence of events (more complicated this time):
   Again I try Meta-X Edit Word Abbrevs, this time I already have some to edit.
(zwei:com-edit-word-abbrevs):
    calls (zwei:create-interval nil nil t) => zwei:*INTERVAL* (a zwei:node in this case);
then calls
(zwei:com-insert-word-abbrevs):
    calls (zwei:interval-stream z:*interval*) => z:stream;
then calls ...
([z:stream] ':string-out ...)
(z:insert ...) calls
(z:undo-save-small-new-change ...) because z:*undo-save-small-changes* is set;
(z:buffer-modified-p z:*interval*)
([z:*INTERVAL*] ':modified-p) does
(> z:tick ([z:*window*] ':base-tick)),
  where z:tick (an instance-variable of *interval*) is NIL.
16-Mar-83 00:29:24-EST,2534;000000000000
Return-path: <Hdt@MIT-OZ>
Date: Wednesday, 16 March 1983, 00:23-EST
From: Howard Daniel Trachtman <Hdt@MIT-OZ>
To: BUG-zwei@MIT-OZ

In MIT-Specific 18.1, System 93.30, ZMail 49.10, microcode 226, gc@2,
on Lisp Machine Three:

I did meta-x Edit Word Abbrevs


>>TRAP 12756 (ARGTYP NUMBER PP 0 QIGRP)
The first argument to SYS:M->, NIL, was of the wrong type.
The function expected a number.
Backtrace from the debugger:

(:METHOD NODE :MODIFIED-P) (P.C. = 32)
  (SELF is #<NODE 10441743>)

 Arg 0 (OPERATION): :MODIFIED-P


BUFFER-MODIFIED-P (P.C. = 22)

 Arg 0 (BUFFER): #<NODE 10441743>


UNDO-SAVE-NEW-SMALL-CHANGE (P.C. = 527)

 Arg 0 (BP1): ("" 0)
 Arg 1 (BP2): ("" 0)
Local 0 (UNDO-STATUS): (#<NODE 10441743> NIL ("" 0 :NORMAL) ("" 0 :MOVES) ...)
Local 1 (BP1-INSIDE): NIL
Local 2 (BP2-INSIDE): NIL
Local 3 (LINE): NIL
Local 4 (END-LINE): NIL
Local 5 (ALIST): ((** 0 0) (** 0 0))
Local 6 (COUNT): 0
Local 7 (INDEX): 0


INSERT (P.C. = 201)

 Arg 0 (BP): ("" 0)
 Arg 1 (STRING): "MON:      (LISP)               1       /"monitor/"
"
 Arg 2 (START): 0
 Arg 3 (END): NIL
Local 0 (LINE): NIL
Local 1 (INDEX): NIL
Local 2 (LINE-LENGTH): NIL
Local 3 (FIRST-NEWLINE): NIL
Local 4 (FIRST-LINE): NIL
Local 5 (LAST-LINE): NIL
Local 6 (LAST-NEWLINE): NIL
Local 7 (ARRAY-TYPE): NIL
Local 8 (LCHARS): NIL
Local 9 (G8127): NIL
Local 10 (BP): NIL
Local 11 (I): NIL
Local 12 (PREV-LINE): NIL
Local 13 (THIS-LINE): NIL
Local 14 (PREV-NEWLINE): NIL
Local 15 (NEWLINE): NIL
Local 16 (THE-LINE-BEYOND): NIL
Local 17 (LENGTH): NIL
Local 18 (LF): NIL
Local 19 (LT): NIL


(:METHOD INTERVAL-STREAM :STRING-OUT) (P.C. = 53)
  (SELF is #<INTERVAL-STREAM 10442004>)

 Arg 0 (OPERATION): :STRING-OUT
 Arg 1 (STRING): "MON:      (LISP)               1       /"monitor/"
"
 Arg 2 (START): 0
 Arg 3 (END): NIL
Local 0 (BP): NIL


Remainder of stack:

FORMAT:FORMAT-CTL-STRING (P.C. = 105)
FORMAT (P.C. = 176)
(:INTERNAL LIST-WORD-ABBREV-1 0) (P.C. = 150)
MAPATOMS (P.C. = 70)
LIST-WORD-ABBREV-1 (P.C. = 31)
COM-INSERT-WORD-ABBREVS (P.C. = 31)
COM-EDIT-WORD-ABBREVS (P.C. = 45)
COM-EXTENDED-COMMAND (P.C. = 67)
COMMAND-EXECUTE (P.C. = 100)
PROCESS-COMMAND-CHAR (P.C. = 67)
(:METHOD WINDOW :EDIT) (P.C. = 465)
(:INTERNAL (:METHOD ZMACS-WINDOW :COMBINED :EDIT) 0) (P.C. = 74)
FUNCALL (P.C. = 25)
(:METHOD DISPLAYER :AROUND :EDIT) (P.C. = 31)
(:METHOD ZMACS-WINDOW :COMBINED :EDIT) (P.C. = 47)
ZMACS-WINDOW-TOP-LEVEL (P.C. = 46)
SI:PROCESS-TOP-LEVEL (P.C. = 121)
17-Mar-83 00:30:15-EST,457;000000000000
Return-path: <Gumby@MIT-OZ>
Date: Thursday, 17 March 1983, 00:27-EST
From: David Vinayak Wallace <Gumby@MIT-OZ>
To: BUG-ZWEI@MIT-OZ

In ZWEI in MIT-Specific 18.1, System 93.30, ZMail 49.10, microcode 226,
gc@2, on Lisp Machine Nine:

I did C-X C-F and it prompted with OZ:PS:<HACTRN.SOURCE>FMACS.LSP. I
typed SS:FORK, expecting it to complete to
OZ:SS:<HACTRN.SOURCE>FORK.LSP, but instead it completed to .LISP. That's
not the behaviour I want.
17-Mar-83 01:37:00-EST,439;000000000000
Return-path: <Mly@MIT-OZ>
Date: Thursday, 17 March 1983, 01:32-EST
From: Richard Mlynarik <Mly@MIT-OZ>
To: BUG-ZWEI@MIT-OZ

In ZWEI in System 93.30

With only one buffer (*buffer-1*)
c-x k <return>			; kill current buffer
c-sh-f foo.lisp			; specify file for new buffer
=>
 ... whirr, grind, grovel...
 ... 37K Read
=>
"ZMACS (LISP) *Buffer-1*" with nothing in it.

The text disappears, and buffer-1 rises from the dead!!
19-Mar-83 16:10:27-EST,491;000000000000
Return-path: <Devon@MIT-MC>
Date: Saturday, 19 March 1983, 16:07-EST
From: Devon S. McCullough <Devon at MIT-MC>
To: BUG-zmacs at MIT-OZ

In zmacs in MIT-Specific 18.1, System 93.30, ZMail 49.10, microcode 226,
So, what do you want for $130K, on Lisp Machine Eighteen:

I think Control-% (Replace String) should default to the last Replace
String's arguments when you give it a null first argument.  Of course it
should show the user what it's about to do and request confirmation.19-Mar-83 23:50:09-EST,684;000000000000
Return-path: <zvona@MIT-OZ>
Date: Saturday, 19 March 1983, 23:47-EST
From: David Chapman <zvona@MIT-OZ>
Subject: zmacs split screen; c-x o loses
To: BUG-zwei@MIT-OZ

In zwei in Release 4.1, System 222.186, Hardcopy 11.14, Zmail 74.43,
LMFS 30.26, site configuration 19, on Lisp Machine Two:

This is about the split screen item in the zmacs menu.  

* with three windows, if you do c-3 c-x o, you end up with one window.
c-2 c-x o doesn't.  I thought that a numeric argument of n was supposed
to move you to the nth window.

* if you ask for three windows, the bottom border interacts weirdly with
the bottom of the zwei frame to produce a double line.







21-Mar-83 17:16:32-EST,1078;000000000000
Return-path: <MMcM@SCRC-TENEX>
Date: Monday, 21 March 1983, 17:11-EST
From: Mike McMahon <MMcM at SCRC-TENEX>
Subject: zmacs split screen; c-x o loses
To: zvona at MIT-OZ
Cc: BUG-zwei at MIT-OZ
In-reply-to: The message of 19 Mar 83 23:47-EST from David Chapman <zvona at MIT-OZ>

    Date: Saturday, 19 March 1983, 23:47-EST
    From: David Chapman <zvona@MIT-OZ>
    This is about the split screen item in the zmacs menu.  

    * with three windows, if you do c-3 c-x o, you end up with one window.
    c-2 c-x o doesn't.  I thought that a numeric argument of n was supposed
    to move you to the nth window.
n is zero-based.  Right now it selects the fourth window that you cannot see,
which ends up the whole size of the screen.  Alternatively, it could be a no-op,
or max'ed and select the furthest away, or be changed to 1-based.  I don't care.

    * if you ask for three windows, the bottom border interacts weirdly with
    the bottom of the zwei frame to produce a double line.
Fixed in the source, along with a bunch of other problems with it.
21-Mar-83 17:57:19-EST,1177;000000000000
Return-path: <ZVONA@MIT-OZ>
Mail-From: ZVONA created at 21-Mar-83 17:52:21
Date: Mon, 21 Mar 1983  17:52 EST
From: ZVONA@MIT-OZ
To:   Mike McMahon <MMcM@SCRC-TENEX>
Cc:   BUG-zwei@MIT-OZ
Subject: zmacs split screen; c-x o loses
In-reply-to: Msg of 21 Mar 1983 17:11-EST from Mike McMahon <MMcM at SCRC-TENEX>

        * with three windows, if you do c-3 c-x o, you end up with one window.
        c-2 c-x o doesn't.  I thought that a numeric argument of n was supposed
        to move you to the nth window.

    n is zero-based.  Right now it selects the fourth window that you
    cannot see, which ends up the whole size of the screen.
    Alternatively, it could be a no-op, or max'ed and select the
    furthest away, or be changed to 1-based.  I don't care.

It seems that the most consistent thing would be to barf on
out-of-range arguments, where an argument is out of range if it is
equal to or greater than the number of visible windows.  Note that if
this were extended consistently to the one-window-visible case, it
would barf if you did c-x o with no argument when there is only one
window visible.  I've argued for that before, actually.
22-Mar-83 02:16:04-EST,2471;000000000000
Return-path: <Hdt@MIT-OZ>
Date: Tuesday, 22 March 1983, 02:10-EST
From: Hdt@MIT-OZ
To: BUG-zwei@MIT-OZ

In MIT-Specific 18.1, System 93.30, ZMail 49.10, microcode 226, So,
what do you want for $130K, on Lisp Machine Eighteen:

meta-x evaluate into buffer
(+ 1 1 ;;type return here and it gets the following error:
   ;;it told me to end my lisp form with end not return.

>>ERROR: End of file on #<INTERVAL-STREAM 20725256> in the middle of the list (+ 1 2).
Backtrace from the debugger:

Additional information supplied with call:
 Expecting 2 values

(:PROPERTY LIST SI:STANDARD-READ-FUNCTION) (P.C. = 446)

 Arg 0 (STREAM): #<INTERVAL-STREAM 20725256>
 Arg 1 (SHOULD-BE-NIL): NIL
 Arg 2 (FIFTY): 40
Local 0 (LIST): (+ 1 2)
Local 1 (THING): SI:EOF
Local 2 (TYPE): SI:SPECIAL-TOKEN
Local 3 (SPLICEP): NIL
Local 4 (END-OF-LIST): (2)
Local 5 (BP): NIL
Local 6 (CORRESPONDENCE-ENTRY): NIL
Local 7 (THIS-IS-COLUMN-0-LIST): NIL
Local 8 (G3137): NIL


Additional information supplied with call:
 Expecting 2 values

SI:XR-READ-THING (P.C. = 165)

 Arg 0 (STREAM): #<INTERVAL-STREAM 20725256>
Local 0 (CH): 40
Local 1 (NUM): 5
Local 2 (A): NIL
Local 3 (B): NIL
Local 4 (STRING): NIL
Local 5 (INDEX): 0
Local 6 (STLEN): 64
Local 7 (REAL-CH): 40
Local 8 (READTABLE-FSM): #<ART-Q-61-22 1201125>
Local 9 (FNPROP): SI:STANDARD-READ-FUNCTION
Local 10 (STATE): (SI:LAST-CHAR . LIST)
Local 11 (FLAG): SI:LAST-CHAR
Local 12 (TODO): LIST


READ (P.C. = 142)

 Rest arg (READ-ARGS): (#<INTERVAL-STREAM 20725256> *EOF*)
Local 1 (W-O): (BREAK :CHARACTERS :CLEAR-INPUT :CLEAR-OUTPUT ...)
Local 2 (STREAM): #<INTERVAL-STREAM 20725256>
Local 3 (EOF-OPTION): *EOF*
Local 4 (THING): NIL
Local 5 (TYPE): NIL
Local 6 (SPLICEP): NIL


TYPEIN-LINE-READ (P.C. = 66)

 Arg 0 (CTL-STRING): "Lisp form: (end with END)"
 Rest arg (ARGS): NIL
Local 1 (INTERVAL): #<NODE 14401733>
Local 2 (PROMPT): "Lisp form: (end with END)"


COM-EVALUATE-INTO-BUFFER (P.C. = 56)

Local 0 (FORM): NIL
Local 1 (STREAM): NIL


Remainder of stack:

COM-EXTENDED-COMMAND (P.C. = 67)
COMMAND-EXECUTE (P.C. = 100)
PROCESS-COMMAND-CHAR (P.C. = 67)
(:METHOD WINDOW :EDIT) (P.C. = 465)
(:INTERNAL (:METHOD ZMACS-WINDOW :COMBINED :EDIT) 0) (P.C. = 74)
FUNCALL (P.C. = 25)
(:METHOD DISPLAYER :AROUND :EDIT) (P.C. = 31)
(:METHOD ZMACS-WINDOW :COMBINED :EDIT) (P.C. = 47)
ZMACS-WINDOW-TOP-LEVEL (P.C. = 46)
SI:PROCESS-TOP-LEVEL (P.C. = 121)
22-Mar-83 04:09:20-EST,558;000000000000
Return-path: <barmar@MIT-MULTICS>
Date: Tuesday, 22 March 1983, 04:07-EST
From: Barry Margolin <barmar at MIT-MULTICS>
Subject: Meta-$
To: BUG-ZWEI@MIT-OZ

In ZWEI in MIT-Specific 18.1, System 93.30, ZMail 49.10, microcode 226,
gc@2, on Arthur Dent:

When Meta-$ displays its list of choices for corrections, it would be
nice if you could mouse a choice, rather than having to type its letter.
Also, is there a good reason why it has to clear and redisplay the
window, even if you type Space, meaning that it shouldn't replace the
word at all?
22-Mar-83 04:15:57-EST,484;000000000000
Return-path: <barmar@MIT-MULTICS>
Date: Tuesday, 22 March 1983, 04:10-EST
From: Barry Margolin <barmar at MIT-MULTICS>
Subject: More Text-mode-hook trouble
To: BUG-ZWEI@MIT-OZ

In ZWEI in MIT-Specific 18.1, System 93.30, ZMail 49.10, microcode 226,
gc@2, on Arthur Dent:

Converse doesn't run my text-mode-hook automatically.  This is probably
related to the similar problem I reported, in which ZMail doesn't run my
text mode hook until I explicitly type Meta-X Text Mode.23-Mar-83 02:23:07-EST,427;000000000000
Return-path: <HDT@MIT-OZ>
Mail-From: HDT created at 23-Mar-83 02:18:31
Date: 23 Mar 1983 0218-EST
From: Howard Daniel Trachtman <Hdt@MIT-OZ>
Subject: init files
To: bug-zwei@MIT-OZ


How about a mode line option Init-file which specifies that when the file
is compiled a .init rather than a .qfasl file will be created.

This would have to be in both systems, or I'll just end up with
obnoxious messages.
-------
23-Mar-83 15:44:36-EST,414;000000000000
Return-path: <MOON@SCRC-TENEX>
Date: Wednesday, 23 March 1983  15:43-EST
From: MOON at SCRC-TENEX
To:   Howard Daniel Trachtman <Hdt at MIT-OZ>
Cc:   bug-zwei at MIT-OZ
Subject: init files
In-reply-to: The message of 23 Mar 1983 0218-EST from Howard Daniel Trachtman <Hdt@MIT-OZ>

In Release 5.0 init files will have a type of .lisp (or .bin if compiled),
rather than .init, superseding your suggestion.
24-Mar-83 00:52:11-EST,2634;000000000000
Return-path: <Gumby@MIT-OZ>
Date: Thursday, 24 March 1983, 00:48-EST
From: David Vinayak Wallace <Gumby@MIT-OZ>
To: BUG-ZWEI@MIT-OZ

In MIT-Specific 18.1, System 93.30, ZMail 49.10, microcode 226, gc@2,
on Lisp Machine Nine:


Insert your description of the circumstances here:

I did M-X Edit F C-?

>>TRAP 16234 (TRANS-TRAP)
The variable ZWEI:*MAXSTATE* is unbound.
Backtrace from the debugger:

ZWEI:BUILD-FSM-TREE-2 (P.C. = 52)

 Arg 0 (STRING): "Edit"
 Arg 1 (INDEX): 0
 Arg 2 (STATE): 0
 Arg 3 (LENGTH): 4
 Arg 4 (CHARN): 1
 Arg 5 (STAR-P): NIL
 Arg 6 (STAR1-P): NIL
Local 0 (NEW-STATE): 0


ZWEI:BUILD-FSM-TREE-1 (P.C. = 247)

 Arg 0 (STRING): "Edit"
 Arg 1 (INDEX): 0
 Arg 2 (STATE): 0
 Arg 3 (LENGTH): 4
Local 0 (CHAR): 105
Local 1 (NOT-P): NIL
Local 2 (STAR-P): NIL
Local 3 (SET-P): NIL
Local 4 (CH): 1
Local 5 (STAR1-P): NIL
Local 6 (SET): NIL
Local 7 (NCH): NIL
Local 8 (G2049): NIL


ZWEI:BUILD-FSM-TREE (P.C. = 105)

 Arg 0 (STRING-LIST): ("Edit" "F")
 Arg 1 (*NCHARN*): 6
Local 0 (*MAXSTATE*): 0
Local 1 (I): 1750
Local 2 (G1527): 1750
Local 3 (J): 200
Local 4 (G1532): ("Edit" "F")
Local 5 (STRING): "Edit"


ZWEI:BUILD-FSM (P.C. = 53)

 Arg 0 (STRING-LIST): ("Edit" "F")
   --Defaulted args:--
 Arg 1 (CASE-DEPENDENT-P): NIL
Local 0 (NCHARN): 6
Local 1 (NSTATES): NIL


ZWEI:FSM-STRING-SEARCH (P.C. = 65)

 Arg 0 (KEY): (("Edit" "F") NIL NIL)
 Arg 1 (STRING): "Revert Buffer"
   --Defaulted args:--
 Arg 2 (FROM): NIL
 Arg 3 (TO): NIL
Local 0 (LEN): 15
Local 1 (STRINGS): ("Edit" "F")
Local 2 (EXPR): NIL
Local 3 (CR-P): NIL
Local 4 (I): NIL
Local 5 (LIST): NIL
Local 6 (STATE): NIL
Local 7 (CH): NIL
Local 8 (STATE): NIL
Local 9 (OSTATE): NIL
Local 10 (WORD): NIL


Remainder of stack:

ZWEI:COM-COMPLETION-APROPOS (P.C. = 222)
ZWEI:COMMAND-EXECUTE (P.C. = 100)
ZWEI:PROCESS-COMMAND-CHAR (P.C. = 67)
(METHOD ZWEI:WINDOW EDIT) (P.C. = 465)
(INTERNAL (METHOD ZWEI:ZWEI-WITHOUT-TYPEOUT COMBINED EDIT) 0) (P.C. = 63)
FUNCALL (P.C. = 25)
(METHOD ZWEI:DISPLAYER AROUND EDIT) (P.C. = 31)
(METHOD ZWEI:ZWEI-WITHOUT-TYPEOUT COMBINED EDIT) (P.C. = 47)
ZWEI:EDIT-IN-MINI-BUFFER (P.C. = 345)
ZWEI:COMPLETING-READ-FROM-MINI-BUFFER (P.C. = 101)
...
ZWEI:COMMAND-EXECUTE (P.C. = 100)
ZWEI:PROCESS-COMMAND-CHAR (P.C. = 67)
(METHOD ZWEI:WINDOW EDIT) (P.C. = 465)
(INTERNAL (METHOD ZWEI:ZMACS-WINDOW COMBINED EDIT) 0) (P.C. = 74)
FUNCALL (P.C. = 25)
(METHOD ZWEI:DISPLAYER AROUND EDIT) (P.C. = 31)
(METHOD ZWEI:ZMACS-WINDOW COMBINED EDIT) (P.C. = 47)
ZWEI:ZMACS-WINDOW-TOP-LEVEL (P.C. = 46)
SI:PROCESS-TOP-LEVEL (P.C. = 121)
24-Mar-83 00:59:49-EST,289;000000000000
Return-path: <Gumby@MIT-OZ>
Date: Thursday, 24 March 1983, 00:58-EST
From: David Vinayak Wallace <Gumby@MIT-OZ>
To: BUG-ZWEI@MIT-OZ

In ZWEI in MIT-Specific 18.1, System 93.32, ZMail 49.11, microcode 226,
gc@2, on Lisp Machine Nine:

Sorry; I hadn't loaded patches.
Thanks, RMS.
24-Mar-83 01:56:25-EST,733;000000000000
Return-path: <Gumby@MIT-OZ>
Date: Thursday, 24 March 1983, 01:50-EST
From: David Vinayak Wallace <Gumby@MIT-OZ>
To: BUG-ZWEI@MIT-OZ

In ZWEI in MIT-Specific 18.1, System 93.32, ZMail 49.11, microcode 226,
gc@2, on Lisp Machine Nine:

I was editing a file and got an error. I C-M'ed the backtrace and sent a
bug report. Then I went back to editing my code.

While in the editor, I typed <system>-E, which gave me the old editor
(the one in which I had gotten the error), whose existence I had
completely forgotten. It showed the buffer I had been editing as it was
when I got the error. A <clear-screen> fixed it.

I guess the question is, would it be too expensive to have a redisplay
after the editor is selected?
25-Mar-83 17:55:01-EST,388;000000000000
Return-path: <Mly@MIT-OZ>
Date: Friday, 25 March 1983, 17:52-EST
From: Richard Mlynarik <Mly@MIT-OZ>
Subject: zmacs redisplay on select
To: BUG-ZWEI@MIT-OZ

System 93.32
  Another reason to have zmacs redisplay when selected (as suggested by gumby -- if this isn't
too time-expensive) is that tv:set-default-font does not win with the zmacs window until you
manually redisplay.
28-Mar-83 22:14:08-EST,410;000000000000
Return-path: <Gumby@MIT-OZ>
Date: Monday, 28 March 1983, 22:13-EST
From: David Vinayak Wallace <Gumby@MIT-OZ>
To: BUG-ZWEI@MIT-OZ

In ZWEI in MIT-Specific 18.1, System 93.36, ZMail 49.15, microcode 226,
gc@2, on Lisp Machine Six:

I was editing a file in the TV package.  I did m-x describe flavor of
WINDOW.  It described ZWEI:WINDOW.  It should have given me tv:window,
or at least have asked me.
28-Mar-83 22:47:31-EST,355;000000000000
Return-path: <Gumby@MIT-OZ>
Date: Monday, 28 March 1983, 22:44-EST
From: David Vinayak Wallace <Gumby@MIT-OZ>
To: BUG-ZWEI@MIT-OZ

In ZWEI in MIT-Specific 18.1, System 93.36, ZMail 49.15, microcode 226,
gc@2, on Lisp Machine Six:

I would be nice if ZWEI could grind SEND llike this:

(send foo bar bar-key1 bar-arg1
	      ber-key2 bar-arg2)
 1-Apr-83 01:30:23-EST,4168;000000000000
Return-path: <Hdt@MIT-OZ>
Date: Friday, 1 April 1983, 01:29-EST
From: Hdt@MIT-OZ
To: BUG-zwei@mit-oz

In MIT-Specific 18.1, System 93.37, ZMail 49.16, microcode 226,
Closed Mondays, on Lisp Machine Eighteen:


While sending mail from within zmail (rms the full text of this will
be one of your messages)  I typed hyper-meta-e to evaluate a form.

>>TRAP 4005 (SUBSCRIPT-OOB M-1 M-2 XINSTANCE-LOC-RESTART M-T)
The subscript 16 for #<ZMAIL-SENDING-INTERVAL "Mail" 11240154> was out of range in SYS:%INSTANCE-REF.
Backtrace from the debugger:

ZWEI:CHECK-INTERVAL-SECTIONS (P.C. = 223)

 Arg 0 (START-BP): ("(let ((this-host (si:parse-host si:local-host-name)))" 0)
 Arg 1 (END-BP): ("      (push this-host fs:*pathname-host-list*)))" 60)
 Arg 2 (IN-ORDER-P): T
Local 0 (FOO): (#<ZMAIL-SENDING-INTERVAL "Headers" 11240140> #<ZMAIL-SENDING-INTERVAL "Mail" 11240154>)
Local 1 (INT): #<DRAFT-MSG 11240051>
Local 2 (G0836): NIL
Local 3 (N): #<ZMAIL-SENDING-INTERVAL "Mail" 11240154>
Local 4 (START-NODE): #<ZMAIL-SENDING-INTERVAL "Mail" 11240154>
Local 5 (ENDNODE1): #<ZMAIL-SENDING-INTERVAL "Mail" 11240154>
Local 6 (END-NODE): #<ZMAIL-SENDING-INTERVAL "Mail" 11240154>
Local 7 (NODE): #<ZMAIL-SENDING-INTERVAL "Mail" 11240154>


ZWEI:COMPILE-INTERVAL (P.C. = 205)

 Arg 0 (COMPILE-P): NIL
 Arg 1 (USE-TYPEOUT): NIL
 Arg 2 (DEFVAR-HACK): T
 Arg 3 (BP1): ("(let ((this-host (si:parse-host si:local-host-name)))" 0)
 Arg 4 (BP2): ("      (push this-host fs:*pathname-host-list*)))" 60)
 Arg 5 (IN-ORDER-P): T
 Arg 6 (COMPILE-PROCESSING-MODE): COMPILER:MACRO-COMPILE
 Arg 7 (READ-THEN-PROCESS-FLAG): NIL
 Arg 8 (ENTIRE-FILE-FLAG): NIL
 Arg 9 (ALREADY-RESECTIONIZED-FLAG): NIL
Local 0 (GENERIC-PATHNAME): #FS:DUMMY-PATHNAME "Dummy"
Local 1 (STREAM): NIL
Local 2 (WHOLE-FILE): NIL
Local 3 (FDEFINE-FILE-DEFINITIONS): NIL
Local 4 (VARS): NIL
Local 5 (VALS): NIL
Local 6 (PROGV-VARS): NIL
Local 7 (PROGV-VALS): NIL


ZWEI:COMPILE-PRINT-INTERVAL (P.C. = 152)

 Arg 0 (BP1): ("(let ((this-host (si:parse-host si:local-host-name)))" 0)
 Arg 1 (BP2): ("      (push this-host fs:*pathname-host-list*)))" 60)
 Arg 2 (IN-ORDER-P): T
 Arg 3 (COMPILE-P): NIL
 Arg 4 (DEFUN-NAME): "((this-host (si:parse-host si:local-host-name)))"
 Arg 5 (MODE-NAME): "Evaluating"
 Arg 6 (ECHO-NAME): "evaluated."
 Arg 7 (USE-TYPEOUT): PROMPT
 Arg 8 (DEFVAR-HACK): T
 Arg 9 (COMPILER-PROCESSING-MODE): COMPILER:MACRO-COMPILE
 Arg 10 (ENTIRE-FILE-FLAG): NIL
   --Defaulted args:--
 Arg 11 (ALREADY-RESECTIONIZED-FLAG): NIL
Local 0 (FORMAT-FUNCTION): #<DTP-FEF-POINTER ZWEI:PROMPT-LINE 16740115>
Local 1 (SUCCESS): NIL


ZWEI:COMPILE-DEFUN-INTERNAL (P.C. = 214)

 Arg 0 (COMPILE-P): NIL
 Arg 1 (MODE-NAME): "Evaluating"
 Arg 2 (ECHO-NAME): "evaluated."
 Arg 3 (USE-TYPEOUT): PROMPT
   --Defaulted args:--
 Arg 4 (DEFVAR-HACK): T
 Arg 5 (COMPILER-PROCESSING-MODE): COMPILER:MACRO-COMPILE
Local 0 (BP1): ("(let ((this-host (si:parse-host si:local-host-name)))" 0)
Local 1 (BP2): ("      (push this-host fs:*pathname-host-list*)))" 60)
Local 2 (DEFUN-NAME): "((this-host (si:parse-host si:local-host-name)))"


ZWEI:COM-EVALUATE-REGION (P.C. = 42)



Remainder of stack:

ZWEI:COMMAND-EXECUTE (P.C. = 100)
ZWEI:PROCESS-COMMAND-CHAR (P.C. = 67)
(METHOD ZWEI:WINDOW EDIT) (P.C. = 465)
(INTERNAL (INTERNAL (METHOD ZWEI:ZMAIL-WINDOW COMBINED EDIT) 0) 0) (P.C. = 72)
FUNCALL (P.C. = 25)
(METHOD ZWEI:DISPLAYER AROUND EDIT) (P.C. = 31)
(INTERNAL (METHOD ZWEI:ZMAIL-WINDOW COMBINED EDIT) 0) (P.C. = 47)
(METHOD ZWEI:ZMAIL-WINDOW AROUND EDIT) (P.C. = 70)
(METHOD ZWEI:ZMAIL-WINDOW COMBINED EDIT) (P.C. = 45)
ZWEI:ZMAIL-MAIL (P.C. = 365)
...
ZWEI:ZMAIL-COMMAND-EXECUTE (P.C. = 27)
(METHOD ZWEI:ZMAIL-FRAME PROCESS-COMMAND-CHAR) (P.C. = 40)
(METHOD ZWEI:ZMAIL-COMMAND-LOOP-MIXIN COMMAND-LOOP) (P.C. = 273)
(INTERNAL (METHOD ZWEI:ZMAIL-FRAME COMBINED COMMAND-LOOP) 0) (P.C. = 50)
FUNCALL (P.C. = 25)
(METHOD ZWEI:ZMAIL-COMMAND-LOOP-MIXIN AROUND COMMAND-LOOP) (P.C. = 57)
(METHOD ZWEI:ZMAIL-FRAME COMBINED COMMAND-LOOP) (P.C. = 47)
ZWEI:ZMAIL-PROCESS-TOP-LEVEL (P.C. = 115)
SI:PROCESS-TOP-LEVEL (P.C. = 121)

 3-Apr-83 03:12:28-EST,663;000000000000
Return-path: <barmar@MIT-MULTICS>
Date: Sunday, 3 April 1983, 03:07-EST
From: Barry Margolin <Margolin at MIT-Multics>
Sender: barmar at MIT-MULTICS
Subject: Meta-^
To: BUG-ZWEI at OZ

In ZWEI in Release 4.0, System 222.186, Zmail 74.43,
Experimental Macsyma 6.13, site configuration 12, on Zarniwoop:

Given the following two lines in a Text Mode buffer:

The first line,
the second line.

If point is on the second line and I use Meta-^ (Delete Indentation),
then I get:

The first line,the second line.

This behavior would be fine in a Lisp Mode buffer, but it should do the
right thing in Text Mode, i.e. leave a space after the comma.
 3-Apr-83 16:04:17-EST,636;000000000000
Return-path: <Devon@MIT-MC>
Date: Sunday, 3 April 1983, 14:31-EST
From: Devon S. McCullough <Devon at MIT-MC>
To: BUG-zmacs at MIT-OZ, bug-emacs at MIT-MC

In zmacs in MIT-Specific 18.1, System 93.32, ZMail 49.12, microcode 226,
gc@2, on Lisp Machine Twenty:

COM-MOVE-OVER-/) does something meaningless and useless when given an
argument, maybe because it ought to clear *NUMERIC-ARG* before calling
some internal routine?  I think it should do something like:
FORWARD-UP-LIST BACKWARD CANONICALIZE-WHITESPACE FORWARD INDENT-NEW-LINE.

(the EMACS version just moves forward n close-parens instead of doing forward-up-list) 4-Apr-83 05:31:01-EST,732;000000000000
Return-path: <barmar@MIT-MULTICS>
Date: Monday, 4 April 1983, 05:28-EST
From: Barry Margolin <Margolin at MIT-Multics>
Sender: barmar at MIT-MULTICS
Subject: Go To Line
To: BUG-ZWEI at OZ

In ZWEI in Release 4.0, System 222.186, Zmail 74.43,
Experimental Macsyma 6.13, site configuration 12, on Zarniwoop:

A very useful standard command in Multics Emacs is esc-G, go-to-line.
It takes its numeric argument as a line number, and positions point to
the beginning of that line of the buffer.  It is useful when the program
processing a file gives line numbers in its error messages.  I would
like to suggest that it be added to ZMacs (I realize that the key is
already in use, so maybe you could use Control-Shift-G).
 4-Apr-83 10:42:35-EST,605;000000000000
Return-path: <barmar@MIT-MULTICS>
Date: Monday, 4 April 1983, 10:39-EST
From: Barry Margolin <Margolin at MIT-Multics>
Sender: barmar at MIT-MULTICS
Subject: Cleaning Up
To: BUG-ZWEI at OZ

In ZWEI in Release 4.0, System 222.186, Zmail 74.43,
Experimental Macsyma 6.13, site configuration 12, on Zarniwoop:

Is there something I can push onto logout-list that will clean up all my
ZMacs and Converse buffers when I logout?  I would like to leave a
pretty vanilla state when I logout, and I would prefer not to  cold-boot
(EE Lisp Machines are generally about a half-hour of patches behind).
 4-Apr-83 19:37:24-EST,620;000000000000
Return-path: <GUMBY@MIT-OZ>
Mail-From: GUMBY created at  4-Apr-83 19:37:02
Date: 4 Apr 1983  19:37 EST (Mon)
From: David Vinayak Wallace <GUMBY@MIT-OZ>
To:   Barry Margolin <Margolin@MIT-Multics>
Cc:   BUG-ZWEI@MIT-OZ
Subject: Cleaning Up
In-reply-to: Msg of 4 Apr 1983 10:39-EST from Barry Margolin <Margolin at MIT-Multics>

EE lispms would not be many patches behind if we had t-300s. It took
me 8 (count 'em, 8!) hours to generate an almost-up-to-date 4.0 band
which would fit on a T-80. When I have the time, I'll put it on
CADR-17.

Or you could use the MIT bands which don't need to be compressed.
 4-Apr-83 21:24:01-EST,747;000000000000
Return-path: <RWK@SCRC-TENEX>
Date:  4 Apr 1983 2119-EST
From: Robert W. Kerns <RWK@SCRC-TENEX>
Subject: Re: Cleaning Up
To: GUMBY@MIT-OZ, Margolin%MIT-Multics@MIT-MC
cc: BUG-ZWEI@MIT-OZ, RWK@SCRC-TENEX
In-Reply-To: The message of 4 Apr 1983  19:37 EST (Mon) from David Vinayak Wallace <GUMBY@MIT-OZ>

Hmm.  eight hours to prepare bands for EE's T-300's?  I guess
I'll put someone on the tsk of making and compressing a 4.2 band
for those machines.  It should only take about 4 hours including
transport.

I made and announced a 4.1 that had been compressed and configured
for MIT, and installed on a couple MIT machines.  I haven't
checked what you've done to the disk labels on the T-80's, but
I think that should fit.
-------
 5-Apr-83 07:13:27-EST,8151;000000000000
Return-path: <PGS@MIT-OZ>
Date: Tuesday, 5 April 1983, 07:12-EST
From: Patrick Sobalvarro <PGS@MIT-OZ>
Subject: M-K bug
To: BUG-zwei@MIT-OZ

In MIT-Specific 18.1, System 93.40, ZMail 49.17, microcode 226,
on Lisp Machine Twenty-five:

This is a line ending in a period and two spaces.  

The line above this one must be blank.  Go to the beginning of the buffer,
search for "spaces. ", and type M-K.

SI:SIMPLE-MAKE-ARRAY (P.C. = 217)

 Arg 0 (DIMENSIONS): -2
 Arg 1 (TYPE): ART-STRING
 Arg 2 (AREA): 36
 Arg 3 (LEADER-LENGTH): 10
   --Defaulted args:--
 Arg 4 (INITIAL-VALUE): NIL
Local 0 (INITIAL-VALUE-P): NIL
Local 1 (DATA-LENGTH): NIL
Local 2 (LONG-ARRAY-P): NIL
Local 3 (ARRAY): NIL
Local 4 (ENTRIES-PER-Q): NIL
Local 5 (HEADER-WORD): NIL


ZWEI:CREATE-LINE (P.C. = 37)

 Arg 0 (ARRAY-TYPE): ART-STRING
 Arg 1 (SIZE): -2
 Arg 2 (NODE): #<NODE 10325711>
Local 0 (G9319): NIL


ZWEI:COPY-INTERVAL (P.C. = 113)

 Arg 0 (FROM-BP): ("possibly on joint 2.   " 26 NORMAL)
 Arg 1 (TO-BP): ("possibly on joint 2.   " 24)
 Arg 2 (IN-ORDER-P): T
   --Defaulted args:--
 Arg 3 (INTO-INTERVAL): #<NODE 10325711>
Local 0 (FROM-LINE): "possibly on joint 2.   "
Local 1 (FROM-INDEX): 26
Local 2 (TO-LINE): "possibly on joint 2.   "
Local 3 (TO-INDEX): 24
Local 4 (LEN): -2
Local 5 (LINE): NIL
Local 6 (FLF): NIL
Local 7 (LT): NIL
Local 8 (FROM-LINE-LENGTH): NIL
Local 9 (FIRST-LINE): NIL
Local 10 (LAST-LINE): NIL
Local 11 (FRF): NIL
Local 12 (FIT): NIL
Local 13 (I): NIL
Local 14 (PREV-LINE): NIL
Local 15 (THIS-LINE): NIL
Local 16 (ORIGINAL-LINE): NIL


ZWEI:KILL-RING-SAVE-INTERVAL (P.C. = 122)

 Arg 0 (BP1): ("possibly on joint 2.   " 26 NORMAL)
 Arg 1 (BP2): ("possibly on joint 2.   " 24)
 Arg 2 (IN-ORDER-P): T
 Arg 3 (FORWARDP): T
Local 0 (INT): #<NODE 10325631>


ZWEI:KILL-INTERVAL (P.C. = 146)

 Arg 0 (BP1): ("possibly on joint 2.   " 26 NORMAL)
 Arg 1 (BP2): ("possibly on joint 2.   " 24)
 Arg 2 (IN-ORDER-P): T
 Arg 3 (FORWARDP): T
   --Defaulted args:--
 Arg 4 (EXPLICIT-P): NIL


ZWEI:KILL-INTERVAL-ARG (P.C. = 30)

 Arg 0 (BP1): ("possibly on joint 2.   " 26 NORMAL)
 Arg 1 (BP2): ("possibly on joint 2.   " 24)
 Arg 2 (ARG): 1


ZWEI:COM-KILL-SENTENCE (P.C. = 53)



Additional information supplied with call:
 Expecting 3 values

ZWEI:COMMAND-EXECUTE (P.C. = 100)

 Arg 0 (COMMAND): ZWEI:COM-KILL-SENTENCE
 Arg 1 (CHAR): 1113
 Arg 2 (PREFIX-CHAR): NIL
 Arg 3 (HOOK-LIST): NIL
Local 0 (G4734): NIL
Local 1 (HOOK): NIL


ZWEI:PROCESS-COMMAND-CHAR (P.C. = 67)

 Arg 0 (CH): 1113
Local 0 (VALUE): NIL
Local 1 (LINE): NIL
Local 2 (INDEX): NIL
Local 3 (G5246): NIL
Local 4 (HOOK): NIL


(METHOD ZWEI:WINDOW EDIT) (P.C. = 465)
  (SELF is #<ZMAIL-WINDOW Zmail Window 1 15404665 exposed>)

 Arg 0 (OPERATION): EDIT
   --Defaulted args:--
 Arg 1 (IGNORE): NIL
 Arg 2 (*COMTAB*): #<COMTAB ZWEI:*REPLY-COMTAB* 24363716>
 Arg 3 (*MODE-LINE-LIST*): ("ZMail " "Mail " "(" ZWEI:*MODE-NAME-LIST* ...)
 Arg 4 (TOP-LEVEL-P): T
Local 0 (TEM1): ((** ** T ** ...) (** ** T ** ...))
Local 1 (G1278): ("Return to top level editor command loop.")
Local 2 (G1278): ((SYS:ABORT ERROR) ("Return to top level editor command loop.") T ("Return to top level editor command loop.") ...)
Local 3 (CH): 1113


Additional information supplied with call:
 SYS:ADI-FEXPR-CALL

(INTERNAL (INTERNAL (METHOD ZWEI:ZMAIL-WINDOW COMBINED EDIT) 0) 0) (P.C. = 72)

 Rest arg (.DAEMON-CALLER-ARGS.): (EDIT)
Local 1 (.DAEMON-MAPPING-TABLE.): #<ART-16B-16 17573305>


FUNCALL (P.C. = 25)

 Arg 0 (FN): #<DTP-FEF-POINTER (INTERNAL (INTERNAL ** 0) 0) 23513366>
 Rest arg (ARGS): (EDIT)


(METHOD ZWEI:DISPLAYER AROUND EDIT) (P.C. = 31)
  (SELF is #<ZMAIL-WINDOW Zmail Window 1 15404665 exposed>)

 Arg 0 (OPERATION): EDIT
 Arg 1 (CONT): #<DTP-FEF-POINTER (INTERNAL (INTERNAL ** 0) 0) 23513366>
 Arg 2 (MT): #<ART-16B-16 17573305>
 Arg 3 (ARGS): (EDIT)
   --Defaulted args:--
 Arg 4 (EDITOR-CLOSURE-1): NIL
 Rest arg (IGNORE): NIL


(INTERNAL (METHOD ZWEI:ZMAIL-WINDOW COMBINED EDIT) 0) (P.C. = 47)

 Rest arg (.DAEMON-CALLER-ARGS.): (EDIT)
Local 1 (.DAEMON-MAPPING-TABLE.): #<ART-16B-16 17573305>


(METHOD ZWEI:ZMAIL-WINDOW AROUND EDIT) (P.C. = 70)
  (SELF is #<ZMAIL-WINDOW Zmail Window 1 15404665 exposed>)

 Arg 0 (OPERATION): EDIT
 Arg 1 (CONT): #<DTP-FEF-POINTER (INTERNAL (METHOD ZWEI:ZMAIL-WINDOW COMBINED EDIT) 0) 23513342>
 Arg 2 (MT): #<ART-16B-16 17573305>
 Arg 3 (ARGS): (EDIT)
 Rest arg (IGNORE): NIL
Local 1 (G2792): "L: edit this message."


(METHOD ZWEI:ZMAIL-WINDOW COMBINED EDIT) (P.C. = 45)
  (SELF is #<ZMAIL-WINDOW Zmail Window 1 15404665 exposed>)

 Rest arg (.DAEMON-CALLER-ARGS.): (EDIT)
Local 1 (.DAEMON-MAPPING-TABLE.): #<ART-16B-16 17573305>


ZWEI:ZMAIL-MAIL (P.C. = 365)

 Arg 0 (CONFIGURATION): MAIL
 Arg 1 (STARTING-WINDOW): HEADER
Local 0 (OLD-CONFIGURATION): BOTH
Local 1 (.WINDOW.): NIL
Local 2 (.FOR-WINDOW.): #<ZMAIL-FRAME MAIN-ZMAIL-WINDOW 15400656 exposed>
Local 3 (.OSTATUS.): NIL
Local 4 (.OSUBST.): NIL
Local 5 (W): #<ZMAIL-WINDOW Zmail Window 1 15404665 exposed>
Local 6 (.QUEUE-LEFT.): NIL
Local 7 (G1142): NIL
Local 8 (E): NIL


ZWEI:COM-ZMAIL-MAIL-INTERNAL (P.C. = 371)

 Arg 0 (MODE): NIL
Local 0 (POINT): ("To: hand-eye" 4 NORMAL)
Local 1 (WHO): NIL
Local 2 (WHAT): NIL
Local 3 (STARTING-WINDOW): HEADER
Local 4 (STREAM): NIL
Local 5 (STATUS): NIL
Local 6 (FROM): NIL
Local 7 (SUBJECT): NIL
Local 8 (BP): NIL


ZWEI:COM-ZMAIL-MAIL (P.C. = 62)

Local 0 (TYPE): NIL


ZWEI:COMMAND-EXECUTE (P.C. = 100)

 Arg 0 (COMMAND): ZWEI:COM-ZMAIL-MAIL
 Arg 1 (CHAR): 155
   --Defaulted args:--
 Arg 2 (PREFIX-CHAR): NIL
 Arg 3 (HOOK-LIST): NIL
Local 0 (G4734): NIL
Local 1 (HOOK): NIL


ZWEI:ZMAIL-COMMAND-EXECUTE (P.C. = 27)

 Arg 0 (*CURRENT-COMMAND*): ZWEI:COM-ZMAIL-MAIL


(METHOD ZWEI:ZMAIL-FRAME PROCESS-COMMAND-CHAR) (P.C. = 40)
  (SELF is #<ZMAIL-FRAME MAIN-ZMAIL-WINDOW 15400656 exposed>)

 Arg 0 (OPERATION): PROCESS-COMMAND-CHAR
 Arg 1 (CH): 155


(METHOD ZWEI:ZMAIL-COMMAND-LOOP-MIXIN COMMAND-LOOP) (P.C. = 273)
  (SELF is #<ZMAIL-FRAME MAIN-ZMAIL-WINDOW 15400656 exposed>)

 Arg 0 (OPERATION): COMMAND-LOOP
Local 0 (G0626): ("Return to ZMAIL command loop.")
Local 1 (G0626): ((SYS:ABORT ERROR) ("Return to ZMAIL command loop.") T ("Return to ZMAIL command loop.") ...)
Local 2 (RESPONSE): NIL
Local 3 (DEGREE): NIL


Additional information supplied with call:
 SYS:ADI-FEXPR-CALL

(INTERNAL (METHOD ZWEI:ZMAIL-FRAME COMBINED COMMAND-LOOP) 0) (P.C. = 50)

 Rest arg (.DAEMON-CALLER-ARGS.): (COMMAND-LOOP)
Local 1 (.DAEMON-MAPPING-TABLE.): #<ART-16B-24 17563136>


FUNCALL (P.C. = 25)

 Arg 0 (FN): #<DTP-FEF-POINTER (INTERNAL (METHOD ZWEI:ZMAIL-FRAME COMBINED COMMAND-LOOP) 0) 23506141>
 Rest arg (ARGS): (COMMAND-LOOP)


(METHOD ZWEI:ZMAIL-COMMAND-LOOP-MIXIN AROUND COMMAND-LOOP) (P.C. = 57)
  (SELF is #<ZMAIL-FRAME MAIN-ZMAIL-WINDOW 15400656 exposed>)

 Arg 0 (OPERATION): COMMAND-LOOP
 Arg 1 (CONT): #<DTP-FEF-POINTER (INTERNAL (METHOD ZWEI:ZMAIL-FRAME COMBINED COMMAND-LOOP) 0) 23506141>
 Arg 2 (MT): #<ART-16B-24 17563136>
 Arg 3 (ARGS): (COMMAND-LOOP)
   --Defaulted args:--
 Arg 4 (EDITOR-CLOSURE-1): NIL
 Rest arg (IGNORE): NIL
Local 1 (G0609): (ZWEI:UNKNOWN-SPECIAL-COMMAND ZWEI:ZMAIL-COMMAND-LOOP-UNKNOWN-SPECIAL-COMMAND)
Local 2 (G0610): ((ZWEI:UNKNOWN-SPECIAL-COMMAND ZWEI:ZMAIL-COMMAND-LOOP-UNKNOWN-SPECIAL-COMMAND))


(METHOD ZWEI:ZMAIL-FRAME COMBINED COMMAND-LOOP) (P.C. = 47)
  (SELF is #<ZMAIL-FRAME MAIN-ZMAIL-WINDOW 15400656 exposed>)

 Rest arg (.DAEMON-CALLER-ARGS.): (COMMAND-LOOP)
Local 1 (.DAEMON-MAPPING-TABLE.): #<ART-16B-24 17563136>


ZWEI:ZMAIL-PROCESS-TOP-LEVEL (P.C. = 115)

 Arg 0 (WINDOW): #<ZMAIL-FRAME MAIN-ZMAIL-WINDOW 15400656 exposed>


SI:PROCESS-TOP-LEVEL (P.C. = 121)

 Arg 0 (IGNORE): NIL
Local 0 (G1393): ("Restart process ~A." "MAIN-ZMAIL-WINDOW")
Local 1 (G1393): ((SYS:ABORT ERROR) ("Restart process ~A." "MAIN-ZMAIL-WINDOW") T ("Restart process ~A." "MAIN-ZMAIL-WINDOW") ...)
Local 2 (IGNORE): NIL
 5-Apr-83 10:34:37-EST,700;000000000000
Return-path: <Zvona@MIT-OZ>
Date: Tuesday, 5 April 1983, 10:32-EST
From: David Chapman <Zvona@MIT-OZ>
Subject: indentation of backquoted forms
To: BUG-zwei@MIT-OZ

In zwei in Release 4.1, System 222.186, Hardcopy 11.14, Zmail 74.43,
LMFS 30.26, Knowledge-Based-Editor 164.19, site configuration 19,
Black Magic, on Lisp Machine Twenty-two:

Tab gives you the following indentation:

(,predicate-name (,(if lower? 'second 'third) (elist examples))
 diachronic-theory
 synchronic-theory
 relation
 examples)

I would have expected

(,predicate-name (,(if lower? 'second 'third) (elist examples))
                 diachronic-theory
		 synchronic-theory
		 relation
		 examples)
 5-Apr-83 13:30:37-EST,547;000000000000
Return-path: <MMcM@SCRC-TENEX>
Received: from SCRC-COLLIE by SCRC-TENEX with CHAOS; Tue 5-Apr-83 13:29:33-EST
Date: Tuesday, 5 April 1983, 13:25-EST
From: Mike McMahon <MMcM@SCRC-TENEX>
Subject: indentation of backquoted forms
To: Zvona@MIT-OZ
Cc: BUG-zwei@MIT-OZ
In-reply-to: The message of 5 Apr 83 10:32-EST from David Chapman <Zvona at MIT-OZ>

It's indenting backquoted lists (as opposed to forms) for you.  I don't
know how it could tell heuristically which to do.  I can make a user
option for which is the default if you wish.
 6-Apr-83 15:03:08-EST,685;000000000000
Return-path: <PGS@MIT-OZ>
Date: Wednesday, 6 April 1983, 15:04-EST
From: Patrick Sobalvarro <PGS@MIT-OZ>
To: BUG-ZWEI@MIT-OZ

In ZWEI in MIT-Specific 18.1, System 93.43, ZMail 49.18, microcode 226,
on Lisp Machine Twenty-five:

I compiled a file in my zmacs buffer, and when I was finished, remembered
something I had to change.  Since thjere were no errors in compilation, I was
put back in my lisp listener, and I did (ed) to get back to my buffer, rather
than system-e.  The thing crunched for a long time, and put me in a newly
created *buffer-2*.  This seems like the wrong thing to me.  i really wanted to
go back to the buffer I'd been editing, and I expected to.
 7-Apr-83 07:25:56-EST,2201;000000000000
Return-path: <HDT@MIT-OZ>
Date: Thursday, 7 April 1983, 07:26-EST
From: Howard D. Trachtman <HDT@MIT-OZ>
To: BUG-zwei@MIT-OZ

In MIT-Specific 18.1, System 93.43, ZMail 49.18, microcode 226,
Yow! Won already!!, on Lisp Machine Eight:

I had done a dired of fc:l;  and then had done an F on all of the subdirs.
I selected a buffer foo, then in did control-x b fc:l;cc <space> which completely
properly and then typed return.  This was the error I got.

>>TRAP 7445 (INSTANCE-LACKS-INSTANCE-VARIABLE M-C M-A)
There is no instance variable ZWEI:SAVED-MODE-LIST in #<NODE 32256032>.
Backtrace from the debugger:

ZWEI:MAKE-BUFFER-CURRENT (P.C. = 114)

 Arg 0 (BUFFER): #<ZMACS-BUFFER "*Dired-l\cc#>;-1*" 33300527>


(METHOD ZWEI:ZMACS-BUFFER SELECT) (P.C. = 26)
  (SELF is #<ZMACS-BUFFER "*Dired-l\cc#>;-1*" 33300527>)

 Arg 0 (OPERATION): SELECT


ZWEI:SET-INTERVAL-1 (P.C. = 44)

 Arg 0 (WINDOW): #<ZWEI-OVERLYING-WINDOW Zwei Overlying Window 1 12104064 deactivated>
 Arg 1 (NEW-INTERVAL): #<ZMACS-BUFFER "*Dired-l\cc#>;-1*" 33300527>
 Arg 2 (REAL-*WINDOW*): #<ZMACS-WINDOW-PANE Zmacs Window Pane 1 12103616 exposed>


FUNCALL (P.C. = 25)

 Arg 0 (FN): ZWEI:SET-INTERVAL-1
 Rest arg (ARGS): (#<ZWEI-OVERLYING-WINDOW Zwei Overlying Window 1 12104064 deactivated> #<ZMACS-BUFFER "*Dired-l\cc#>;-1*" 33300527> #<ZMACS-WINDOW-PANE Zmacs Window Pane 1 12103616 exposed>)


(METHOD ZWEI:DISPLAYER SET-INTERVAL) (P.C. = 35)
  (SELF is #<ZWEI-OVERLYING-WINDOW Zwei Overlying Window 1 12104064 deactivated>)

 Arg 0 (OPERATION): SET-INTERVAL
 Arg 1 (NEW-INTERVAL): #<ZMACS-BUFFER "*Dired-l\cc#>;-1*" 33300527>


Remainder of stack:

ZWEI:VIEW-BUFFER (P.C. = 213)
ZWEI:COM-VIEW-BUFFER (P.C. = 74)
ZWEI:COMMAND-EXECUTE (P.C. = 100)
ZWEI:MAKE-EXTENDED-COMMAND-INTERNAL (P.C. = 103)
ZWEI:COMMAND-EXECUTE (P.C. = 100)
ZWEI:PROCESS-COMMAND-CHAR (P.C. = 67)
(METHOD ZWEI:WINDOW EDIT) (P.C. = 465)
(INTERNAL (METHOD ZWEI:ZMACS-WINDOW COMBINED EDIT) 0) (P.C. = 74)
FUNCALL (P.C. = 25)
(METHOD ZWEI:DISPLAYER AROUND EDIT) (P.C. = 31)
(METHOD ZWEI:ZMACS-WINDOW COMBINED EDIT) (P.C. = 47)
ZWEI:ZMACS-WINDOW-TOP-LEVEL (P.C. = 46)
SI:PROCESS-TOP-LEVEL (P.C. = 121)
 7-Apr-83 20:09:39-EST,1075;000000000000
Return-path: <RMS.G.DULCEY@MIT-OZ>
Mail-From: RMS.G.DULCEY created at  7-Apr-83 20:05:42
Date: Thu, 7 Apr 1983  20:05 EST
From: RMS.G.DULCEY@MIT-OZ
To:   Patrick Sobalvarro <PGS@MIT-OZ>
Cc:   BUG-ZWEI@MIT-OZ
In-reply-to: Msg of 6 Apr 1983 15:04-EST from Patrick Sobalvarro <PGS>

    I compiled a file in my zmacs buffer...

What command did you give that put you back in a Lisp Listener after a
compilation?  Compile File, Compile Buffer, etc. don't have that
behavior -- they just puts you back at editor top level.  I suppose
you mean that you compiled your buffer using Compile and Exit
(Meta-Z).

In System 93, the Compile File command now types out "done" when it
finishes, so if the editor is not exposed when the compilation
finishes, your editor won't return to top level (since the typeout
will be deferred until the editor is exposed again).  So if you used
Compile File and then left ZMacs in some random way, you would run
into this in 93 (but not in 91 or earlier, since the confirmation of
the finish of compilation was recently added).
 8-Apr-83 10:41:47-EST,975;000000000000
Return-path: <PGS@MIT-OZ>
Date: Friday, 8 April 1983, 10:41-EST
From: Patrick Sobalvarro <PGS@MIT-OZ>
Subject: tag tables, revisited
To: BUG-ZWEI@MIT-OZ

In ZWEI in MIT-Specific 18.1, System 93.44, ZMail 49.18, microcode 226,
on Lisp Machine Twenty-five:

When I visit a tags table that was updated with Tags Rescan under Emacs, if I
do a tags search, the files that are Find File'd are ps:<foo>foobar.del.0, not
just foobar.del.  So if I already have the latest version of the file in a
buffer, that file is not searched; I get a duplicate buffer.  This takes longer
and is a pain.

If one edits non-lisp code (I find myself editing 11 code a lot, because
sometimes it's not clear if the bug is on the 11 or on the lisp machine) in
Zwei, it doesn't help much to use a tags table, because there's no Find Tag.
It would be nice if there were, seeing as one can do a Visit Tag Table anyway.

There's also no Tags Rescan, although that's asking a bit much.
 8-Apr-83 12:50:47-EST,543;000000000000
Return-path: <PGS@MIT-OZ>
Date: Friday, 8 April 1983, 12:49-EST
From: Patrick Sobalvarro <PGS@MIT-OZ>
Subject: *
To: BUG-ZWEI@MIT-OZ

In ZWEI in MIT-Specific 18.1, System 93.44, ZMail 49.18, microcode 226,
on Lisp Machine Twenty-five:

I use medfnt as my default font, because I want to be able to see in a few
years.  Lately I have been editing files with long names.  The modified marker
(*) gets pushed off the edge of the screen by these long names, and I can't
tell whether I've modified the file or not unless I do C-X C-B.
11-Apr-83 17:58:06-EST,392;000000000000
Return-path: <dove@MIT-DSPG>
Date: Monday, 11 April 1983, 17:56-EST
From: Webster Dove <dove at MIT-DSPG>
To: BUG-ZWEI at MIT-OZ

In ZWEI in MIT-Specific 18.1, System 93.41, ZMail 49.18, microcode 226,
gc@2, on Ford Prefect:

zwei is unable to determine the correct file to edit the definition of
any function that has been wrapped with a
(declare-flavor-instance-variables) form.
12-Apr-83 13:53:34-EST,671;000000000000
Return-path: <Hdt@MIT-OZ>
Date: Tuesday, 12 April 1983, 13:49-EST
From: Howard Daniel Trachtman <Hdt@MIT-OZ>
To: BUG-zwei@MIT-OZ

In MIT-Specific 18.1, System 93.45, ZMail 49.19, microcode 226,
Yow! Won already!!, on Lisp Machine Two:

While trying to write out a file I got directory access privileges
required, and prompted for a new file.  I hit return a couple of times,
then selected supdup to fix things up.  I returned to ZWEI, and hit
return twice more, and saw that it still was failing.  The process
wait message however became "no selected window" with the zwei window still
on the screen, and to send the message a new editor had to be created.
12-Apr-83 13:53:55-EST,389;000000000000
Return-path: <Hdt@MIT-OZ>
Date: Tuesday, 12 April 1983, 13:52-EST
From: Howard Daniel Trachtman <Hdt@MIT-OZ>
To: Bug-zwei@MIT-OZ

Um, maybe I lied in the last message.  However, this will definately 
duplicate the previous behavior.  Try to write a file to which it says
directory access privileges required, and instead of typing a new filename or
return, type control-x control-s17-Apr-83 22:51:22-EST,401;000000000000
Return-path: <Gumby@MIT-OZ>
Date: Sunday, 17 April 1983, 22:50-EST
From: David Vinayak Wallace <Gumby@MIT-OZ>
To: BUG-zwei@MIT-OZ

In zwei in Release 4.1, System 222.186, Hardcopy 11.14, Zmail 74.43,
LMFS 30.26, site configuration 20, on Lisp Machine Two:

I used V to view a file in DIRED.  After typing a rubout to the more
prompt, the screen blanked, but did not redisplay the directory.
18-Apr-83 20:29:23-EST,353;000000000000
Return-path: <Gumby@MIT-OZ>
Date: Monday, 18 April 1983, 20:29-EST
From: David Vinayak Wallace <Gumby@MIT-OZ>
To: BUG-zwei@MIT-OZ

In zwei in Release 4.1, System 222.186, Hardcopy 11.14, Zmail 74.43,
LMFS 30.26, site configuration 20, on Lisp Machine Four:

M-X HARDCOPY BUFFER doesn't either refresh the screen or print "Done"
when finished.
19-Apr-83 00:47:03-EST,658;000000000000
Return-path: <Moon@SCRC-TENEX>
Received: from SCRC-NEPONSET by SCRC-TENEX with CHAOS; Tue 19-Apr-83 00:41:30-EST
Date: Tuesday, 19 April 1983, 00:42-EST
From: David A. Moon <Moon@SCRC-TENEX>
To: David Vinayak Wallace <Gumby@MIT-OZ>
Cc: BUG-zwei@MIT-OZ
In-reply-to: The message of 18 Apr 83 20:29-EST from David Vinayak Wallace <Gumby at MIT-OZ>

    Date: Monday, 18 April 1983, 20:29-EST
    From: David Vinayak Wallace <Gumby@MIT-OZ>

    M-X HARDCOPY BUFFER doesn't either refresh the screen or print "Done"
    when finished.
It does in the source.  You're quite right that consistency of the user
interface requires that it print "done".
19-Apr-83 04:10:57-EST,516;000000000000
Return-path: <barmar@MIT-MULTICS>
Date: Tuesday, 19 April 1983, 04:04-EST
From: Barry Margolin <Margolin at MIT-Multics>
Sender: barmar at MIT-MULTICS
Subject: Find File and wildcards
To: BUG-ZWEI at OZ

In ZWEI in Release 4.0, System 222.186, Zmail 74.43,
Experimental Macsyma 6.15, site configuration 12, on Zarniwoop:

It would be nice if the editor processed wildcard pathnames in the
response to C-X C-F, reading each of the files that match into its own
buffer (which is what Multics Emacs does).
19-Apr-83 04:55:33-EST,413;000000000000
Return-path: <barmar@MIT-MULTICS>
Date: Tuesday, 19 April 1983, 04:54-EST
From: Barry Margolin <Margolin at MIT-Multics>
Sender: barmar at MIT-MULTICS
Subject: M-X Set C-?
To: BUG-ZWEI at OZ

In ZWEI in Release 4.0, System 222.186, Zmail 74.43,
Experimental Macsyma 6.15, site configuration 12, on Zarniwoop:

After typing M-X Set, I typed C-? to get a list of completions.
"Set Vsp" is listed twice.
19-Apr-83 05:10:21-EST,1040;000000000000
Return-path: <barmar@MIT-MULTICS>
Date: Tuesday, 19 April 1983, 05:09-EST
From: Barry Margolin <Margolin at MIT-Multics>
Sender: barmar at MIT-MULTICS
Subject: Attribute list format
To: BUG-ZWEI at OZ

In ZWEI in Release 4.0, System 222.186, Zmail 74.43,
Experimental Macsyma 6.15, site configuration 12, on Zarniwoop:

It would be nice if the Update Attribute List and Set Backspace commands
could agree on the "proper" way to specify a binary mode's value in the
attribute list.  Update Attribute List likes to say "Backspace: T" while
Set Backspace likes to say "Backspace: Yes".  I realize that both will
work, but that is for the benefit of those humans who prefer to edit the
attribute list line themselves; the automatic mechanisms should pick
something they like and stick with it.  If it matters, I prefer the
Yes/No version.

On a related subject, it would be nice if the mode setting commands
(Lisp Mode, Text Mode, etc.) would offer to set the mode in the
attribute list, like the option setting commands.
19-Apr-83 06:55:21-EST,710;000000000000
Return-path: <barmar@MIT-MULTICS>
Date: Tuesday, 19 April 1983, 06:51-EST
From: Barry Margolin <Margolin at MIT-Multics>
Sender: barmar at MIT-MULTICS
Subject: Recent minibuffer commands
To: BUG-ZWEI at OZ

In ZWEI in Release 4.0, System 222.186, Zmail 74.43,
Experimental Macsyma 6.15, site configuration 12, on Zarniwoop:

Could the code that saves minibuffer commands so that they can be
re-executed with C-X Altmode filter out duplicates, at least duplicates
that immediately follow one another.  If I do Meta-X A, then do Meta-X B
a whole bunch of times in a row, it would be convenient if I could
re-execute the A using C-X Altmode, rather than being given a whole
bunch of choices of B.
19-Apr-83 10:37:56-EST,1791;000000000000
Return-path: <dlw@SCRC-TENEX>
Received: from SCRC-BORZOI by SCRC-TENEX with CHAOS; Tue 19-Apr-83 10:33:39-EST
Date: Tuesday, 19 April 1983, 10:34-EST
From: Daniel L. Weinreb <dlw@SCRC-TENEX>
Subject: Attribute list format
To: Margolin@MIT-Multics, BUG-ZWEI@MIT-OZ
In-reply-to: The message of 19 Apr 83 05:09-EST from Barry Margolin <Margolin at MIT-Multics>

    Date: Tuesday, 19 April 1983, 05:09-EST
    From: Barry Margolin <Margolin at MIT-Multics>
    In ZWEI in Release 4.0, System 222.186, Zmail 74.43,
    Experimental Macsyma 6.15, site configuration 12, on Zarniwoop:

    It would be nice if the Update Attribute List and Set Backspace commands
    could agree on the "proper" way to specify a binary mode's value in the
    attribute list.  Update Attribute List likes to say "Backspace: T" while
    Set Backspace likes to say "Backspace: Yes".  I realize that both will
    work, but that is for the benefit of those humans who prefer to edit the
    attribute list line themselves; the automatic mechanisms should pick
    something they like and stick with it.  If it matters, I prefer the
    Yes/No version.

There isn't any Yes/No version.  No isn't NIL, so it means the same
thing as Yes.  Yeah, I know, this is stupid.  Either attribute lists
should be changed such that No will mean NIL, or the editor commands
should stop using "Yes".  The former has the following problem: it means
that there would have to be a database of which property names are of
the Yes/No variety (you wouldn't want to convert "Mode: No", for
example), and so if you created your own keywords, their definition
would have to be loaded before any files using those keywords were seen.
That might be acceptable.  However, the latter solution is probably
easier.
19-Apr-83 13:02:40-EST,568;000000000000
Return-path: <KwH@MIT-OZ>
Date: Tuesday, 19 April 1983, 13:01-EST
From: Ken Haase <KwH@MIT-OZ>
To: BUG-ZWEI@MIT-OZ

In ZWEI in Experimental MIT-Specific 19.0, Experimental System 94.4,
Experimental ZMail 50.1, microcode 238, ZM GC@0, on Lisp Machine Four:

I've been having a lot of problems with Edit Warnings--  Sometimes
(I haven't been able to classify the precise failure mode) it puts up
the compiler warnings window (I don't know if this is a real window or
just a ZWEI multi-window) and then hangs with no selected window
as its run state.

Ken
19-Apr-83 14:09:19-EST,489;000000000000
Return-path: <KwH@MIT-OZ>
Date: Tuesday, 19 April 1983, 14:07-EST
From: Ken Haase <KwH@MIT-OZ>
To: BUG-ZWEI@MIT-OZ

In ZWEI in Experimental MIT-Specific 19.0, Experimental System 94.4,
Experimental ZMail 50.1, microcode 238, ZM GC@0, on Lisp Machine Four:

If you are doing a TRACE/STEP, and the trace is triggered while you're in
the editor, the typeout for the stepper appears in the typein window
at the bottom of the screen, rather than typing out over the screen...

Ken
20-Apr-83 00:10:59-EST,3314;000000000000
Return-path: <Hdt@MIT-OZ>
Date: Wednesday, 20 April 1983, 00:09-EST
From: Hdt@MIT-OZ
To: BUG-zwei@MIT-OZ

In Experimental MIT-Specific 19.0, Experimental System 94.4,
Experimental ZMail 50.1, microcode 238, ZM GC@0, on Lisp Machine One:

I was reinstalling meta-$
The last thing I had the com-correct-spelling-word do was do a
typein-line of "It's not my fault", and the function then returned
zwei:dis-line    

I consistantly get this error.

>>TRAP 4220. (ARGTYP ARRAY M-A NIL GAHDR)
Some argument to ARRAY-LEADER, NIL, was of the wrong type.
The function expected an array.
Backtrace from the debugger:

(:METHOD WINDOW :REDISPLAY) (P.C. = 606)
  (SELF is #<ZMACS-WINDOW-PANE Zmacs Window Pane 2 1466021 exposed>)

 Arg 0 (OPERATION): :REDISPLAY
 Arg 1 (RECENTER-TYPE): :POINT
 Arg 2 (RC1): NIL
 Arg 3 (RC2): NIL
 Arg 4 (FORCE-TO-COMPLETION-P): NIL
Local 0 (LH): 14.
Local 1 (NOW): 10351.
Local 2 (POINT-PLINE): 53.
Local 3 (POINT-LINE): "  DIS-LINE) ;;temp rock"
Local 4 (POINT-INDEX): 23.
Local 5 (TOP-LINE): "		 (SEND STREAM ':LINE-OUT  "
Local 6 (TOP-INDEX): 0.
Local 7 (LAST-BP): ("" 0. :MOVES)
Local 8 (INITIAL-DEGREE): 3.
Local 9 (POINT-NODE): NIL
Local 10 (START-BP-NODE): NIL
Local 11 (BUF): NIL
Local 12 (NEW-TOP-INDEX): NIL
Local 13 (Y): NIL
Local 14 (LINE): NIL
Local 15 (INDEX): NIL
Local 16 (P): NIL
Local 17 (LINE-LENGTH): NIL
Local 18 (LEN): NIL
Local 19 (DWID): NIL
Local 20 (CH): NIL
Local 21 (FONT): NIL
Local 22 (CWT): NIL
Local 23 (CWID): NIL
Local 24 (RWID): NIL
Local 25 (I): NIL
Local 26 (TW): NIL
Local 27 (L): NIL
Local 28 (FROM-INDEX): NIL
Local 29 (TO-INDEX): NIL
Local 30 (PLINE): NIL
Local 31 (STOP-LINE): NIL
Local 32 (FROB): NIL
Local 33 (PLINE): NIL
Local 34: NIL
Local 35 (BL): NIL


REDISPLAY (P.C. = 72)

 Arg 0 (WINDOW): #<ZMACS-WINDOW-PANE Zmacs Window Pane 2 1466021 exposed>
   --Defaulted args:--
 Arg 1 (RECENTER-TYPE): :POINT
 Arg 2 (RC1): NIL
 Arg 3 (RC2): NIL
 Arg 4 (FORCE-TO-COMPLETION-P): NIL


REDISPLAY-ALL-WINDOWS (P.C. = 75)

   --Defaulted args:--
 Arg 0 (FORCE-TO-COMPLETION-P): NIL
 Arg 1 (SELECT-P): T
Local 0: (#<ZMACS-WINDOW-PANE Zmacs Window Pane 2 1466021 exposed>)
Local 1 (WINDOW): #<ZMACS-WINDOW-PANE Zmacs Window Pane 2 1466021 exposed>


(:METHOD WINDOW :EDIT) (P.C. = 417)
  (SELF is #<ZMACS-WINDOW-PANE Zmacs Window Pane 2 1466021 exposed>)

 Arg 0 (OPERATION): :EDIT
   --Defaulted args:--
 Arg 1 (IGNORE): NIL
 Arg 2 (*COMTAB*): #<COMTAB MODE-COMTAB 7036567>
 Arg 3 (*MODE-LINE-LIST*): ("ZMACS " "(" *MODE-NAME-LIST* ") " ...)
 Arg 4 (TOP-LEVEL-P): T
Local 0 (TEM1): ((** ** T ** ...))
Local 1: ("Return to top level editor command loop.")
Local 2: ((SYS:ABORT ERROR) ("Return to top level editor command loop.") T ("Return to top level editor command loop.") ...)
Local 3 (CH): NIL


Additional information supplied with call:
 SYS:ADI-FEXPR-CALL

(:INTERNAL (:METHOD ZMACS-WINDOW :COMBINED :EDIT) 0.) (P.C. = 74)

 Rest arg (.DAEMON-CALLER-ARGS.): (:EDIT)
Local 1 (.DAEMON-MAPPING-TABLE.): #<ART-16B-13. 22044471>


Remainder of stack:

FUNCALL (P.C. = 25)
(:METHOD DISPLAYER :AROUND :EDIT) (P.C. = 31)
(:METHOD ZMACS-WINDOW :COMBINED :EDIT) (P.C. = 47)
ZMACS-WINDOW-TOP-LEVEL (P.C. = 46)
SI:PROCESS-TOP-LEVEL (P.C. = 115)
20-Apr-83 00:51:15-EST,500;000000000000
Return-path: <Gumby@MIT-OZ>
Date: Wednesday, 20 April 1983, 00:50-EST
From: David Vinayak Wallace <Gumby@MIT-OZ>
To: BUG-zwei@MIT-OZ

In either system...

Is there any way to type a logical pathname and say "I mean it; don't
complete?" I like to have files with no file type.  If I type it as a
logical pathname (e.g. "foo:bar;baz") the default filetype is inserted.

Perhaps altmode (which does nothing with a logical pathname) could mean
"convert this."  I could then edit it by hand.
20-Apr-83 22:37:18-EST,691;000000000000
Return-path: <barmar@MIT-MULTICS>
Date: Wednesday, 20 April 1983, 22:33-EST
From: Barry Margolin <barmar at MIT-MULTICS>
To: BUG-ZWEI@MIT-OZ

In ZWEI in MIT-Specific 18.1, System 93.47, ZMail 49.19, microcode 226,
gc@2, on Ford Prefect:

When I am in ZMacs two-window mode, why can't I reshape the individual
panes using Edit Screen from the System Menu?  That would be much nicer
than having to use C-X ^.

BTW, why am I only allowed two windows, when both Multics and ITS Emacs
(the latter with the WINDOW package loaded) allow an arbitrary number?
I realize that I could use the mouse to create them, but it is
convenient being able to switch between them with ^X commands.20-Apr-83 23:09:06-EST,1090;000000000000
Return-path: <DEG@SCRC-TENEX>
Received: from SCRC-EUPHRATES by SCRC-TENEX with CHAOS; Wed 20-Apr-83 22:59:21-EST
Date: Wednesday, 20 April 1983, 23:00-EST
From: David E. Goldfarb <DEG@SCRC-TENEX>
To: barmar@MIT-MULTICS, BUG-ZWEI@MIT-OZ
Cc: DEG@SCRC-TENEX
In-reply-to: The message of 20 Apr 83 22:33-EST from Barry Margolin <barmar at MIT-MULTICS>

    Date: Wednesday, 20 April 1983, 22:33-EST
    From: Barry Margolin <barmar at MIT-MULTICS>
    BTW, why am I only allowed two windows, when both Multics and ITS Emacs
    (the latter with the WINDOW package loaded) allow an arbitrary number?
    I realize that I could use the mouse to create them, but it is
    convenient being able to switch between them with ^X commands.

Try M-X (or C-M-X, I don't remember) Split Screen.  It is a menu driven
screen partitioner.  Actually, I don't like the way it behave too much
since, when told to make more than two windows, it divides the screen
horizontally.  I suppose it would not be hard to change this, but I've
never had enough interest to bother looking at the code.
21-Apr-83 08:16:06-EST,7044;000000000000
Return-path: <PGS@MIT-OZ>
Date: Thursday, 21 April 1983, 08:10-EST
From: Patrick Sobalvarro <PGS@MIT-OZ>
To: BUG-zwei@MIT-OZ

In Experimental MIT-Specific 19.0, Experimental System 94.6,
Experimental ZMail 50.2, microcode 238, ZM GC@0,
on Lisp Machine Twenty-five:

I did meta-a with point on "M" in "Make" in the following:

    The "Technical Magic" board in this concentrator seems fried.
    Shimon is without a terminal because there are no spare ports.
    Could we get another card for the 3rd floor machine?
    I moved Demetri and Philip to another line temporarily.

    Thanks.

/\Make sure it actually is fried; try swapping it into a place (say, another
concentrator that works) where you know it should work (being careful to swap


>>TRAP 7563 (SUBSCRIPT-OOB M-Q M-S (NIL XAREF-RECHECK-INDEX) M-A)
The subscript -1 for "" was out of range in AR-1.
Backtrace from the debugger:

ZWEI:FORWARD-SENTENCE (P.C. = 566)

 Arg 0 (BP): ("    Thanks." 13)
 Arg 1 (TIMES): -1
 Arg 2 (FIXUP-P): T
Local 0 (PARA-BP): ("" 0)
Local 1 (TIME): 0
Local 2 (STATE): ZWEI:SPSP
Local 3 (FIRST-P): NIL
Local 4 (CH): 40
Local 5 (TEM): NIL
Local 6 (*FROM-BP*): ("    Thanks." 13)
Local 7 (*TO-BP*): ("" 0)
Local 8 (LINE): ""
Local 9 (*FIRST-INDEX*): NIL
Local 10 (*LAST-LINE*): ""
Local 11 (*THIS-IS-THE-LAST-LINE*): T
Local 12 (INDEX): -1
Local 13 (*LAST-INDEX*): 0
Local 14 (NFROBS): 1
Local 15 (*FIRST-LINE-P*): NIL


ZWEI:COM-BACKWARD-SENTENCE (P.C. = 53)



Additional information supplied with call:
 Expecting 3 values

ZWEI:COMMAND-EXECUTE (P.C. = 100)

 Arg 0 (COMMAND): ZWEI:COM-BACKWARD-SENTENCE
 Arg 1 (CHAR): 1101
 Arg 2 (PREFIX-CHAR): NIL
 Arg 3 (HOOK-LIST): NIL
Local 0: NIL
Local 1 (HOOK): NIL


ZWEI:PROCESS-COMMAND-CHAR (P.C. = 67)

 Arg 0 (CH): 1101
Local 0 (VALUE): NIL
Local 1 (LINE): NIL
Local 2 (INDEX): NIL
Local 3: NIL
Local 4 (HOOK): NIL


(METHOD ZWEI:WINDOW EDIT) (P.C. = 470)
  (SELF is #<ZMAIL-WINDOW Zmail Window 1 1447637 exposed>)

 Arg 0 (OPERATION): EDIT
   --Defaulted args:--
 Arg 1 (IGNORE): NIL
 Arg 2 (*COMTAB*): #<COMTAB ZWEI:*REPLY-COMTAB* 10704565>
 Arg 3 (*MODE-LINE-LIST*): ("ZMail " "Mail " "(" ZWEI:*MODE-NAME-LIST* ...)
 Arg 4 (TOP-LEVEL-P): T
Local 0 (TEM1): ((** ** T ** ...) (** ** T ** ...))
Local 1: ("Return to top level editor command loop.")
Local 2: ((SYS:ABORT ERROR) ("Return to top level editor command loop.") T ("Return to top level editor command loop.") ...)
Local 3 (CH): 1101


Additional information supplied with call:
 SYS:ADI-FEXPR-CALL

(INTERNAL (INTERNAL (METHOD ZWEI:ZMAIL-WINDOW COMBINED EDIT) 0) 0) (P.C. = 72)

 Rest arg (.DAEMON-CALLER-ARGS.): (EDIT)
Local 1 (.DAEMON-MAPPING-TABLE.): #<ART-16B-12 22435210>


FUNCALL (P.C. = 25)

 Arg 0 (FN): #<DTP-FEF-POINTER (INTERNAL (INTERNAL ** 0) 0) 24022036>
 Rest arg (ARGS): (EDIT)


(METHOD ZWEI:DISPLAYER AROUND EDIT) (P.C. = 31)
  (SELF is #<ZMAIL-WINDOW Zmail Window 1 1447637 exposed>)

 Arg 0 (OPERATION): EDIT
 Arg 1 (CONT): #<DTP-FEF-POINTER (INTERNAL (INTERNAL ** 0) 0) 24022036>
 Arg 2 (MT): #<ART-16B-12 22435210>
 Arg 3 (ARGS): (EDIT)
   --Defaulted args:--
 Arg 4 (EDITOR-CLOSURE-1): NIL
 Rest arg (IGNORE): NIL


(INTERNAL (METHOD ZWEI:ZMAIL-WINDOW COMBINED EDIT) 0) (P.C. = 47)

 Rest arg (.DAEMON-CALLER-ARGS.): (EDIT)
Local 1 (.DAEMON-MAPPING-TABLE.): #<ART-16B-12 22435210>


(METHOD ZWEI:ZMAIL-WINDOW AROUND EDIT) (P.C. = 70)
  (SELF is #<ZMAIL-WINDOW Zmail Window 1 1447637 exposed>)

 Arg 0 (OPERATION): EDIT
 Arg 1 (CONT): #<DTP-FEF-POINTER (INTERNAL (METHOD ZWEI:ZMAIL-WINDOW COMBINED EDIT) 0) 24022012>
 Arg 2 (MT): #<ART-16B-12 22435210>
 Arg 3 (ARGS): (EDIT)
 Rest arg (IGNORE): NIL
Local 1: "L: edit this message."


(METHOD ZWEI:ZMAIL-WINDOW COMBINED EDIT) (P.C. = 45)
  (SELF is #<ZMAIL-WINDOW Zmail Window 1 1447637 exposed>)

 Rest arg (.DAEMON-CALLER-ARGS.): (EDIT)
Local 1 (.DAEMON-MAPPING-TABLE.): #<ART-16B-12 22435210>


ZWEI:ZMAIL-MAIL (P.C. = 362)

 Arg 0 (CONFIGURATION): MAIL
 Arg 1 (STARTING-WINDOW): TEXT
Local 0 (OLD-CONFIGURATION): BOTH
Local 1 (.WINDOW.): NIL
Local 2 (.FOR-WINDOW.): #<ZMAIL-FRAME MAIN-ZMAIL-WINDOW 1440232 exposed>
Local 3 (.OSTATUS.): NIL
Local 4 (.OSUBST.): NIL
Local 5 (W): #<ZMAIL-WINDOW Zmail Window 1 1447637 exposed>
Local 6 (.QUEUE-LEFT.): NIL
Local 7: NIL
Local 8 (E): NIL


ZWEI:COM-ZMAIL-REPLY (P.C. = 125)

Local 0 (L): (ZWEI:NORMAL-REPLY)
Local 1 (MODE): MAIL
Local 2 (STARTING-WINDOW): TEXT


ZWEI:COMMAND-EXECUTE (P.C. = 100)

 Arg 0 (COMMAND): ZWEI:COM-ZMAIL-REPLY
 Arg 1 (CHAR): 162
   --Defaulted args:--
 Arg 2 (PREFIX-CHAR): NIL
 Arg 3 (HOOK-LIST): NIL
Local 0: NIL
Local 1 (HOOK): NIL


ZWEI:ZMAIL-COMMAND-EXECUTE (P.C. = 27)

 Arg 0 (*CURRENT-COMMAND*): ZWEI:COM-ZMAIL-REPLY


(METHOD ZWEI:ZMAIL-FRAME PROCESS-COMMAND-CHAR) (P.C. = 40)
  (SELF is #<ZMAIL-FRAME MAIN-ZMAIL-WINDOW 1440232 exposed>)

 Arg 0 (OPERATION): PROCESS-COMMAND-CHAR
 Arg 1 (CH): 162


(METHOD ZWEI:ZMAIL-COMMAND-LOOP-MIXIN COMMAND-LOOP) (P.C. = 266)
  (SELF is #<ZMAIL-FRAME MAIN-ZMAIL-WINDOW 1440232 exposed>)

 Arg 0 (OPERATION): COMMAND-LOOP
Local 0: ("Return to ZMAIL command loop.")
Local 1: ((SYS:ABORT ERROR) ("Return to ZMAIL command loop.") T ("Return to ZMAIL command loop.") ...)
Local 2 (RESPONSE): NIL
Local 3 (DEGREE): 5


Additional information supplied with call:
 SYS:ADI-FEXPR-CALL

(INTERNAL (METHOD ZWEI:ZMAIL-FRAME COMBINED COMMAND-LOOP) 0) (P.C. = 50)

 Rest arg (.DAEMON-CALLER-ARGS.): (COMMAND-LOOP)
Local 1 (.DAEMON-MAPPING-TABLE.): #<ART-16B-16 22365317>


FUNCALL (P.C. = 25)

 Arg 0 (FN): #<DTP-FEF-POINTER (INTERNAL (METHOD ZWEI:ZMAIL-FRAME COMBINED COMMAND-LOOP) 0) 24014611>
 Rest arg (ARGS): (COMMAND-LOOP)


(METHOD ZWEI:ZMAIL-COMMAND-LOOP-MIXIN AROUND COMMAND-LOOP) (P.C. = 57)
  (SELF is #<ZMAIL-FRAME MAIN-ZMAIL-WINDOW 1440232 exposed>)

 Arg 0 (OPERATION): COMMAND-LOOP
 Arg 1 (CONT): #<DTP-FEF-POINTER (INTERNAL (METHOD ZWEI:ZMAIL-FRAME COMBINED COMMAND-LOOP) 0) 24014611>
 Arg 2 (MT): #<ART-16B-16 22365317>
 Arg 3 (ARGS): (COMMAND-LOOP)
   --Defaulted args:--
 Arg 4 (EDITOR-CLOSURE-1): NIL
 Rest arg (IGNORE): NIL
Local 1: (ZWEI:UNKNOWN-SPECIAL-COMMAND ZWEI:ZMAIL-COMMAND-LOOP-UNKNOWN-SPECIAL-COMMAND)
Local 2: ((ZWEI:UNKNOWN-SPECIAL-COMMAND ZWEI:ZMAIL-COMMAND-LOOP-UNKNOWN-SPECIAL-COMMAND))


(METHOD ZWEI:ZMAIL-FRAME COMBINED COMMAND-LOOP) (P.C. = 47)
  (SELF is #<ZMAIL-FRAME MAIN-ZMAIL-WINDOW 1440232 exposed>)

 Rest arg (.DAEMON-CALLER-ARGS.): (COMMAND-LOOP)
Local 1 (.DAEMON-MAPPING-TABLE.): #<ART-16B-16 22365317>


ZWEI:ZMAIL-PROCESS-TOP-LEVEL (P.C. = 115)

 Arg 0 (WINDOW): #<ZMAIL-FRAME MAIN-ZMAIL-WINDOW 1440232 exposed>


SI:PROCESS-TOP-LEVEL (P.C. = 115)

 Arg 0 (IGNORE): NIL
Local 0: ("Restart process ~A." "MAIN-ZMAIL-WINDOW")
Local 1: ((SYS:ABORT ERROR) ("Restart process ~A." "MAIN-ZMAIL-WINDOW") T ("Restart process ~A." "MAIN-ZMAIL-WINDOW") ...)
Local 2 (IGNORE): NIL
21-Apr-83 08:47:26-EST,583;000000000000
Return-path: <PGS@MIT-OZ>
Date: Thursday, 21 April 1983, 08:43-EST
From: Patrick Sobalvarro <PGS@MIT-OZ>
To: BUG-ZWEI@MIT-OZ

In ZWEI in Experimental MIT-Specific 19.0, Experimental System 94.6,
Experimental ZMail 50.2, microcode 238, ZM GC@0,
on Lisp Machine Twenty-five:

When I first enter Zwei, before loading any files, the echo-area window has
single-width lines around it.  If I send mail, it remains the same.  After I
load a file into it, then I get double-width lines.  This isn't terribly
important, but it did make me wonder if I was going nuts for a while.
21-Apr-83 18:11:18-EST,358;000000000000
Return-path: <Zvona@MIT-OZ>
Date: Thursday, 21 April 1983, 18:08-EST
From: David Chapman <Zvona@MIT-OZ>
Subject: dired feature suggestion
To: BUG-zwei@MIT-OZ

In zwei in Release 4.1, System 222.186, Hardcopy 11.14, Zmail 74.43,
LMFS 30.26, site configuration 21, on Lisp Machine Apiary-2:

A in dired doesn't allow you to give a lambda expression.
21-Apr-83 21:40:20-EST,961;000000000000
Return-path: <Moon@SCRC-TENEX>
Received: from SCRC-BORZOI by SCRC-TENEX with CHAOS; Thu 21-Apr-83 20:39:39-EST
Date: Thursday, 21 April 1983, 20:41-EST
From: David A. Moon <Moon@SCRC-TENEX>
To: David E. Goldfarb <DEG@SCRC-TENEX>
Cc: barmar@MIT-MULTICS, BUG-ZWEI@MIT-OZ
In-reply-to: The message of 20 Apr 83 23:00-EST from David E. Goldfarb <DEG at SCRC-TENEX>

    Date: Wednesday, 20 April 1983, 23:00-EST
    From: David E. Goldfarb <DEG@SCRC-TENEX>

    Try M-X (or C-M-X, I don't remember) Split Screen.
Please do not tell people to use c-m-X.  It is never under any circumstances
the right command to use, except for one single case: a certain kind of
editor-extension debugging.  Probably the command should not be there by
default.  Using the c-m-X command is a good way to invoke things in environments
where they aren't intended to work, whereupon they will blow out if you're
lucky, or somehow trash your buffers if you're not luck.
21-Apr-83 21:41:37-EST,1151;000000000000
Return-path: <Moon@SCRC-TENEX>
Received: from SCRC-BORZOI by SCRC-TENEX with CHAOS; Thu 21-Apr-83 20:44:12-EST
Date: Thursday, 21 April 1983, 20:45-EST
From: David A. Moon <Moon@SCRC-TENEX>
Subject: Editing shape/size of editor panes
To: Barry Margolin <barmar@MIT-MULTICS>
Cc: BUG-ZWEI@MIT-OZ
In-reply-to: The message of 20 Apr 83 22:33-EST from Barry Margolin <barmar at MIT-MULTICS>

    Date: Wednesday, 20 April 1983, 22:33-EST
    From: Barry Margolin <barmar at MIT-MULTICS>
    In ZWEI in MIT-Specific 18.1, System 93.47, ZMail 49.19, microcode 226,
    gc@2, on Ford Prefect:

    When I am in ZMacs two-window mode, why can't I reshape the individual
    panes using Edit Screen from the System Menu?  That would be much nicer
    than having to use C-X ^.

You can.  You have to click Right on Edit Screen to get the menu of
"screenoids" to edit, and then select the editor rather than Main Screen.
Otherwise you would be reshaping the editor itself rather than what
is inside it.

If you already knew this and were just reporting that it was broken in
system 93, I apologize for telling you what you already know.
21-Apr-83 22:04:49-EST,2711;000000000000
Return-path: <Zvona@MIT-OZ>
Date: Thursday, 21 April 1983, 22:04-EST
From: David Chapman <Zvona@MIT-OZ>
To: BUG-zwei@MIT-OZ

In Release 4.1, System 222.186, Hardcopy 11.14, Zmail 74.43, LMFS 30.26,
site configuration 21, on Lisp Machine Apiary-2:

This shouldn't enter the error handler, it should just zwei:barf.

>>Error: Unknown OPEN option.
While in the function (METHOD FS:HOST-UNIT COMMAND)  FS:COMPLETE-CHAOS  (METHOD FS:CHAOS-PATHNAME COMPLETE-STRING)


(METHOD FS:HOST-UNIT COMMAND): (P.C. = 363)
 (SELF = #<HOST-UNIT 25415603>)
 Arg 0 (OPERATION): COMMAND
 Arg 1 (MARK-P): NIL
 Arg 2 (STREAM-OR-HANDLE): NIL
 Arg 3 (SIMPLE-P): NIL
 Arg 4 (WHOSTATE): "Complete"
 Rest arg (COMMANDS): ("COMPLETE" "" "" " NEW-OK" 215 "//vlsi//cm//.login" 215 "<cm.sym>message-32" 215)
 Local 1 (HANDLE): NIL
 Local 2 (STREAM): NIL
 Local 3 (PKT): #<CHAOS Packet 27624564>
 Local 4 (SUCCESS): NIL
 Local 5 (STRING): " ERROR UOO C Unknown OPEN option."
 Local 6 (TRANSACTION-ID): "T1781"
 Local 7 (CREATE-P): NIL
 Local 8 (FROM): 1
 Local 9 (CONDITION): NIL
 Local 10: T
 Local 11: (#<CASE-HANDLER 2351607> #<CASE-HANDLER 2333146> #<BIND-HANDLER 2345041> #<BIND-HANDLER 2345041> #<BIND-HANDLER 2345553>)


(METHOD FS:HOST-UNIT COMMAND):  (P.C. = 363)
   (SELF = #<HOST-UNIT 25415603>)
   Arg 0 (OPERATION): COMMAND
   Arg 1 (MARK-P): NIL
   Arg 2 (STREAM-OR-HANDLE): NIL
   Arg 3 (SIMPLE-P): NIL
   Arg 4 (WHOSTATE): "Complete"
   Rest arg (COMMANDS): ("COMPLETE" "" "" " NEW-OK" 215 "//vlsi//cm//.login" 215 "<cm.sym>message-32" 215)

FS:COMPLETE-CHAOS:  (P.C. = 237)
   Arg 0 (HOST): #<UNIX-CHAOS-HOST MIT-VAX>
   Arg 1 (PATHNAME): #<UNIX-PATHNAME "VX: //vlsi//cm//.login">
   Arg 2 (STRING): "<cm.sym>message-32"
   Arg 3 (OPTIONS): (NEW-OK)

(METHOD FS:CHAOS-PATHNAME COMPLETE-STRING):  (P.C. = 41)
   (SELF = #<UNIX-PATHNAME "VX: //vlsi//cm//.login">)
   Arg 0 (OPERATION): COMPLETE-STRING
   Arg 1 (STRING): "<cm.sym>message-32"
   Arg 2 (OPTIONS): (NEW-OK)

FS:COMPLETE-PATHNAME:  (P.C. = 144)
   Arg 0 (DEFAULTS): ((#<UNIX-CHAOS-HOST MIT-VAX> . #<UNIX-PATHNAME "VX: //vlsi//cm//.login">) (#<TOPS20-CHAOS-HOST MIT-OZ> . #<TOPS20-PATHNAME "OZ:PS:<CM.PROCESSOR>TESTS.LISP">) (NIL . #<UNIX-PATHNAME "VX: //vlsi//cm//.login">))
   Arg 1 (STRING): "<cm.sym>message-32"
   Arg 2 (TYPE): NIL
   Arg 3 (VERSION): NIL
   Rest arg (OPTIONS): (NEW-OK)

ZWEI:PATHNAME-COMPLETE:  (P.C. = 62)

ZWEI:COM-PATHNAME-COMPLETE:  (P.C. = 25)

ZWEI:COMMAND-EXECUTE:  (P.C. = 100)
   Arg 0 (COMMAND): ZWEI:COM-PATHNAME-COMPLETE
   Arg 1 (CHAR): 33
   Arg 2 (PREFIX-CHAR): NIL
   Arg 3 (HOOK-LIST): NIL

ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 67)
   Arg 0 (CH): 33
21-Apr-83 23:00:03-EST,1289;000000000000
Return-path: <Moon@SCRC-TENEX>
Received: from SCRC-BORZOI by SCRC-TENEX with CHAOS; Thu 21-Apr-83 22:52:19-EST
Date: Thursday, 21 April 1983, 22:53-EST
From: David A. Moon <Moon@SCRC-TENEX>
To: David Chapman <Zvona@MIT-OZ>
Cc: BUG-zwei@MIT-OZ
In-reply-to: The message of 21 Apr 83 22:04-EST from David Chapman <Zvona at MIT-OZ>

    Date: Thursday, 21 April 1983, 22:04-EST
    From: David Chapman <Zvona@MIT-OZ>

    This shouldn't enter the error handler, it should just zwei:barf.
I disagree.  Unknown OPEN option sounds like a pretty buggy response
to a Complete (not Open) command!  Is MIT-VAX running any sort of
reasonable up to date file server?

    >>Error: Unknown OPEN option.
    While in the function (METHOD FS:HOST-UNIT COMMAND)  FS:COMPLETE-CHAOS  (METHOD FS:CHAOS-PATHNAME COMPLETE-STRING)


    (METHOD FS:HOST-UNIT COMMAND): (P.C. = 363)
     Rest arg (COMMANDS): ("COMPLETE" "" "" " NEW-OK" 215 "//vlsi//cm//.login" 215 "<cm.sym>message-32" 215)
     Local 5 (STRING): " ERROR UOO C Unknown OPEN option."

    FS:COMPLETE-CHAOS:  (P.C. = 237)
       Arg 0 (HOST): #<UNIX-CHAOS-HOST MIT-VAX>
       Arg 1 (PATHNAME): #<UNIX-PATHNAME "VX: //vlsi//cm//.login">
       Arg 2 (STRING): "<cm.sym>message-32"
       Arg 3 (OPTIONS): (NEW-OK)

22-Apr-83 11:02:47-EST,1251;000000000000
Return-path: <RWK@SCRC-TENEX>
Received: from SCRC-BLACKSTONE by SCRC-TENEX with CHAOS; Fri 22-Apr-83 11:03:14-EST
Date: Friday, 22 April 1983, 10:59-EST
From: Robert W. Kerns <RWK@SCRC-TENEX>
To: David Vinayak Wallace <Gumby@MIT-OZ>
Cc: BUG-zwei@MIT-OZ
In-reply-to: The message of 20 Apr 83 00:50-EST from David Vinayak Wallace <Gumby at MIT-OZ>

    Date: Wednesday, 20 April 1983, 00:50-EST
    From: David Vinayak Wallace <Gumby@MIT-OZ>
    In either system...

    Is there any way to type a logical pathname and say "I mean it; don't
    complete?" I like to have files with no file type.  If I type it as a
    logical pathname (e.g. "foo:bar;baz") the default filetype is inserted.

    Perhaps altmode (which does nothing with a logical pathname) could mean
    "convert this."  I could then edit it by hand.

Well, you can define a canonical type of ZZ (or whatever), with the
meaning of "" (or :UNSPECIFIC, for example on Unix where you don't even
want the "." to appear in the translated name), on whatever system you
have that allows null file types.  In fact, this is the only way to do
this correctly, as it is the only way which will allow you to move the
files to systems which do not let you have null types!
23-Apr-83 08:52:37-EST,471;000000000000
Return-path: <GAVAN@MIT-OZ>
Date: Saturday, 23 April 1983, 08:49-EST
From: Gavan Duffy <GAVAN@MIT-OZ>
To: BUG-ZWEI@MIT-OZ

In Experimental MIT-Specific 19.0, Experimental System 94.6,
Experimental ZMail 50.2, microcode 238, ZM GC@0,
on Lisp Machine Apiary-2:

In LISP Electric-Shift-Lock mode, the consequent clause of the IF macro
is not indented correctly after using the LINE or TAB key.  The line
begins about 2 characters to the left of where it should.
25-Apr-83 00:05:58-EDT,550;000000000000
Return-path: <Zvona@MIT-OZ>
Date: Monday, 25 April 1983, 00:03-EDT
From: David Chapman <Zvona@MIT-OZ>
Subject: weird c-x 4 b, c-x b interaction
To: BUG-zwei@MIT-OZ

In zwei in Release 4.1, System 222.186, Hardcopy 11.14, Zmail 74.43,
LMFS 30.26, site configuration 21, on Lisp Machine Apiary-2:

c-x 4 b allows you to create new buffers with just cr rather than c-cr.
After you have done this, c-x b is bashed so that it seems to do the
same thing, but actually seems not to be creating buffers, but renaming
them (?)  Anyway, very odd.
25-Apr-83 22:11:30-EDT,616;000000000000
Return-path: <wdh@MIT-MC>
Date: Monday, 25 April 1983, 21:46-EDT
From: Bill Hofmann <wdh at MIT-MC>
To: BUG-ZWEI at MIT-OZ
CC: wdh at mc

In ZWEI in MIT-Specific 18.1, System 93.43, ZMail 49.18, microcode 226,
on Arthur Dent:

More a gripe than a bug, specifically:

When I do a DIRED on a Unix filesystem, * (as in "cipg: /u/wdh/*") 
doesn't default to include files starting with . (eg, .login, .cshrc, 
etc.)

This is a real annoyance.  Is there either:
	a) some subtlety I've missed about specifying pathnames
	b) a fix (either in DIRED or (god forbid) in the server)

Thanks!
-Bill Hofmann
26-Apr-83 00:36:52-EDT,681;000000000000
Return-path: <Moon@SCRC-TENEX>
Received: from SCRC-EUPHRATES by SCRC-TENEX with CHAOS; Tue 26-Apr-83 00:05:59-EDT
Date: Tuesday, 26 April 1983, 00:04-EDT
From: David A. Moon <Moon@SCRC-TENEX>
To: Bill Hofmann <wdh@MIT-MC>
Cc: BUG-ZWEI@MIT-OZ
In-reply-to: The message of 25 Apr 83 21:46-EDT from Bill Hofmann <wdh at MIT-MC>

    Date: Monday, 25 April 1983, 21:46-EDT
    From: Bill Hofmann <wdh at MIT-MC>
    In ZWEI in MIT-Specific 18.1, System 93.43, ZMail 49.18, microcode 226,

    When I do a DIRED on a Unix filesystem, * (as in "cipg: /u/wdh/*") 
    doesn't default to include files starting with . (eg, .login, .cshrc, 
    etc.)
Try Symbolics software.
26-Apr-83 23:26:32-EDT,668;000000000000
Return-path: <Straz@MIT-OZ>
Date: Tuesday, 26 April 1983, 23:03-EDT
From: Steve Strassmann <Straz@MIT-OZ>
To: BUG-ZMACS@MIT-OZ

In zmacs in Experimental MIT-Specific 19.0, Experimental System 94.4,
Experimental ZMail 50.1, microcode 238, ZM GC@0, on Lisp Machine Nine:

Kill Or Save Buffers has two bugs:

--The Compile box, when moused, causes the check in the Save box to turn off.
  This is bad, since you usually want to save and compile the latest version.

--Even when you explicitly check both the save & compile boxes, it compiles BEFORE
  saving the current buffer. Shouldn't you first save out the buffer.. THEN compile
  the latest version?
27-Apr-83 00:05:41-EDT,2677;000000000000
Return-path: <Hdt@MIT-OZ>
Date: Wednesday, 27 April 1983, 00:02-EDT
From: Hdt@MIT-OZ
To: BUG-zwei@MIT-OZ

In MIT-Specific 19.0, Experimental System 94.10, Experimental ZMail 50.2,
microcode 238, ZM GC@0, on Lisp Machine Twenty-five:

I was undoing a bunch of small changes (mostly kills and yanks.)
Sorry I can't provide more info.

>>ERROR: The index 117 is greater than the length of the line " (time:parse /"04//12//83 03:23:32/")  ;;slashes get lost??"
Backtrace from the debugger:

ZWEI:MOVE-BP (P.C. = 47)

 Arg 0 (BP): ("Tue, 12 Apr 83 10:34 PST" 24. MOVES)
 Arg 1 (LINE): " (time:parse /"04//12//83 03:23:32/")  ;;slashes get lost??"
 Arg 2 (INDEX): 79.
Local 0 (OLINE): "Tue, 12 Apr 83 10:34 PST"


ZWEI:RESTORE-BP-VALUES (P.C. = 62)

 Arg 0 (SAVED-BP-VALUES): ((** 0. 24.) (** 0. 79.) (** 0. 79.) (** 0. 79.) ...)
 Arg 1 (STARTING-BP): (" (time:parse /"04//12//83 03:23:32/")  ;;slashes get lost??" 0. NORMAL)
Local 0 (LINE-NUMBER): 0.
Local 1 (LINE): " (time:parse /"04//12//83 03:23:32/")  ;;slashes get lost??"
Local 2: ((** 0. 79.) (** 0. 79.) (** 0. 79.) (** 0. 58.) ...)
Local 3 (ELT): (("Tue, 12 Apr 83 10:34 PST" 24. MOVES) 0. 79.)


ZWEI:UNDO-SAVED-CHANGE (P.C. = 155)

 Arg 0 (UNDO-ITEM): ("Small changes" (" (time:parse /"04//12//83 03:23:32/")  ;;slashes get lost??" 0. MOVES) (" (time:parse /"04//12//83 03:23:32/")  ;;slashes get lost??" 0. NORMAL) #<NODE 16666542> ...)
 Arg 1 (UNDO-STATUS): (#<ZMACS-BUFFER "*Buffer-1*" 17744210> (** ** ** ** ...) NIL NIL ...)
Local 0 (BP): (" (time:parse /"04//12//83 03:23:32/")  ;;slashes get lost??" 0. NORMAL)


ZWEI:COM-QUICK-UNDO (P.C. = 140)

Local 0 (UNDO-STATUS): (#<ZMACS-BUFFER "*Buffer-1*" 17744210> (** ** ** ** ...) NIL NIL ...)
Local 1 (UNDO-ITEM): ("Small changes" (" (time:parse /"04//12//83 03:23:32/")  ;;slashes get lost??" 0. MOVES) (" (time:parse /"04//12//83 03:23:32/")  ;;slashes get lost??" 0. NORMAL) #<NODE 16666542> ...)
Local 2 (NAME): "Small changes"


Additional information supplied with call:
 Expecting 3 values

ZWEI:COMMAND-EXECUTE (P.C. = 100)

 Arg 0 (COMMAND): ZWEI:COM-QUICK-UNDO
 Arg 1 (CHAR): 2389.
 Arg 2 (PREFIX-CHAR): NIL
 Arg 3 (HOOK-LIST): (ZWEI:EXPAND-ABBREV-HOOK ZWEI:SHIFT-LOCK-HOOK)
Local 0: NIL
Local 1 (HOOK): ZWEI:SHIFT-LOCK-HOOK


Remainder of stack:

ZWEI:PROCESS-COMMAND-CHAR (P.C. = 67)
(METHOD ZWEI:WINDOW EDIT) (P.C. = 470)
(INTERNAL (METHOD ZWEI:ZMACS-WINDOW COMBINED EDIT) 0.) (P.C. = 74)
FUNCALL (P.C. = 25)
(METHOD ZWEI:DISPLAYER AROUND EDIT) (P.C. = 31)
(METHOD ZWEI:ZMACS-WINDOW COMBINED EDIT) (P.C. = 47)
ZWEI:ZMACS-WINDOW-TOP-LEVEL (P.C. = 46)
SI:PROCESS-TOP-LEVEL (P.C. = 115)
27-Apr-83 05:08:33-EDT,492;000000000000
Return-path: <MOON@MIT-OZ>
Mail-From: MOON created at 27-Apr-83 03:49:37
Date: Wednesday, 27 April 1983, 03:47-EDT
From: David K. Allred <DKA at MIT-OZ>
Subject: Zwei suggestion
To: BUG-ZWEI at MIT-OZ

In ZWEI in Experimental MIT-Specific 19.0, Experimental System 94.4,
Experimental ZMail 50.1, microcode 238, ZM GC@0, on Lisp Machine Four:

It would be very conveient if typing control-Y when in meta X would
yank in the most recently typed command so that I could do it again.
 5-May-83 05:59:20-EDT,6597;000000000000
Return-path: <Hdt@MIT-OZ>
Date: Thursday, 5 May 1983, 05:54-EDT
From: Hdt@MIT-OZ
To: BUG-zwei@MIT-OZ
CC: Bug-zmail@MIT-OZ

In MIT-Specific 19.1, Experimental System 94.14, Experimental ZMail 50.2,
microcode 238, ZM GC@0, on Lisp Machine One:

This happened in zmail, but is really a zwei bug.

I really don't know what I typed, but here's what help-l said in zmail.
r (for reply) control-meta-y meta-< control-n control-y control-s control-h

>>TRAP 7507 (INSTANCE-LACKS-INSTANCE-VARIABLE M-C M-A)
There is no instance variable ZWEI:SAVED-MODE-LIST in #<DRAFT-MSG 33132215>.
Backtrace from the debugger:

ZWEI:MAKE-BUFFER-CURRENT (P.C. = 114)

 Arg 0 (BUFFER): #<ZMACS-BUFFER "EH.LISP SRC:<L.WINDOW> OZ:" 17077736>
   --Defaulted args:--
 Arg 1 (PRESERVE-BUFFER-HISTORY): NIL


ZWEI:ROTATE-BUFFER-HISTORY (P.C. = 54)

 Arg 0 (N): 2
Local 0 (MAP-RESULT): NIL
Local 1 (MAP-TEMP): NIL
Local 2 (MAP-LOCAL-0): NIL
Local 3 (ELT): NIL


ZWEI:COM-SELECT-PREVIOUS-BUFFER (P.C. = 36)



Additional information supplied with call:
 Expecting 3 values

ZWEI:COMMAND-EXECUTE (P.C. = 100)

 Arg 0 (COMMAND): ZWEI:COM-SELECT-PREVIOUS-BUFFER
 Arg 1 (CHAR): 510
 Arg 2 (PREFIX-CHAR): NIL
 Arg 3 (HOOK-LIST): (ZWEI:EXPAND-ABBREV-HOOK)
Local 0: NIL
Local 1 (HOOK): ZWEI:EXPAND-ABBREV-HOOK


ZWEI:PROCESS-COMMAND-CHAR (P.C. = 67)

 Arg 0 (CH): 510
Local 0 (VALUE): NIL
Local 1 (LINE): NIL
Local 2 (INDEX): NIL
Local 3: NIL
Local 4 (HOOK): NIL


(METHOD ZWEI:WINDOW EDIT) (P.C. = 470)
  (SELF is #<ZMAIL-WINDOW Zmail Window 1 1447637 exposed>)

 Arg 0 (OPERATION): EDIT
   --Defaulted args:--
 Arg 1 (IGNORE): NIL
 Arg 2 (*COMTAB*): #<COMTAB ZWEI:*REPLY-COMTAB* 10704565>
 Arg 3 (*MODE-LINE-LIST*): ("ZMail " "Mail " "(" ZWEI:*MODE-NAME-LIST* ...)
 Arg 4 (TOP-LEVEL-P): T
Local 0 (TEM1): ((** ** T ** ...) (** ** T ** ...))
Local 1: ("Return to top level editor command loop.")
Local 2: ((SYS:ABORT ERROR) ("Return to top level editor command loop.") T ("Return to top level editor command loop.") ...)
Local 3 (CH): 510


Additional information supplied with call:
 SYS:ADI-FEXPR-CALL

(INTERNAL (INTERNAL (METHOD ZWEI:ZMAIL-WINDOW COMBINED EDIT) 0) 0) (P.C. = 72)

 Rest arg (.DAEMON-CALLER-ARGS.): (EDIT)
Local 1 (.DAEMON-MAPPING-TABLE.): #<ART-16B-12 22435210>


FUNCALL (P.C. = 25)

 Arg 0 (FN): #<DTP-FEF-POINTER (INTERNAL (INTERNAL ** 0) 0) 24022036>
 Rest arg (ARGS): (EDIT)


(METHOD ZWEI:DISPLAYER AROUND EDIT) (P.C. = 31)
  (SELF is #<ZMAIL-WINDOW Zmail Window 1 1447637 exposed>)

 Arg 0 (OPERATION): EDIT
 Arg 1 (CONT): #<DTP-FEF-POINTER (INTERNAL (INTERNAL ** 0) 0) 24022036>
 Arg 2 (MT): #<ART-16B-12 22435210>
 Arg 3 (ARGS): (EDIT)
   --Defaulted args:--
 Arg 4 (EDITOR-CLOSURE-1): NIL
 Rest arg (IGNORE): NIL


(INTERNAL (METHOD ZWEI:ZMAIL-WINDOW COMBINED EDIT) 0) (P.C. = 47)

 Rest arg (.DAEMON-CALLER-ARGS.): (EDIT)
Local 1 (.DAEMON-MAPPING-TABLE.): #<ART-16B-12 22435210>


(METHOD ZWEI:ZMAIL-WINDOW AROUND EDIT) (P.C. = 70)
  (SELF is #<ZMAIL-WINDOW Zmail Window 1 1447637 exposed>)

 Arg 0 (OPERATION): EDIT
 Arg 1 (CONT): #<DTP-FEF-POINTER (INTERNAL (METHOD ZWEI:ZMAIL-WINDOW COMBINED EDIT) 0) 24022012>
 Arg 2 (MT): #<ART-16B-12 22435210>
 Arg 3 (ARGS): (EDIT)
 Rest arg (IGNORE): NIL
Local 1: "L: edit this message."


(METHOD ZWEI:ZMAIL-WINDOW COMBINED EDIT) (P.C. = 45)
  (SELF is #<ZMAIL-WINDOW Zmail Window 1 1447637 exposed>)

 Rest arg (.DAEMON-CALLER-ARGS.): (EDIT)
Local 1 (.DAEMON-MAPPING-TABLE.): #<ART-16B-12 22435210>


ZWEI:ZMAIL-MAIL (P.C. = 362)

 Arg 0 (CONFIGURATION): MAIL
 Arg 1 (STARTING-WINDOW): TEXT
Local 0 (OLD-CONFIGURATION): BOTH
Local 1 (.WINDOW.): NIL
Local 2 (.FOR-WINDOW.): #<ZMAIL-FRAME MAIN-ZMAIL-WINDOW 1440232 exposed>
Local 3 (.OSTATUS.): NIL
Local 4 (.OSUBST.): NIL
Local 5 (W): #<ZMAIL-WINDOW Zmail Window 1 1447637 exposed>
Local 6 (.QUEUE-LEFT.): NIL
Local 7: NIL
Local 8 (E): NIL


ZWEI:COM-ZMAIL-REPLY (P.C. = 125)

Local 0 (L): (ZWEI:NORMAL-REPLY)
Local 1 (MODE): MAIL
Local 2 (STARTING-WINDOW): TEXT


ZWEI:COMMAND-EXECUTE (P.C. = 100)

 Arg 0 (COMMAND): ZWEI:COM-ZMAIL-REPLY
 Arg 1 (CHAR): 162
   --Defaulted args:--
 Arg 2 (PREFIX-CHAR): NIL
 Arg 3 (HOOK-LIST): NIL
Local 0: NIL
Local 1 (HOOK): NIL


ZWEI:ZMAIL-COMMAND-EXECUTE (P.C. = 27)

 Arg 0 (*CURRENT-COMMAND*): ZWEI:COM-ZMAIL-REPLY


(METHOD ZWEI:ZMAIL-FRAME PROCESS-COMMAND-CHAR) (P.C. = 40)
  (SELF is #<ZMAIL-FRAME MAIN-ZMAIL-WINDOW 1440232 exposed>)

 Arg 0 (OPERATION): PROCESS-COMMAND-CHAR
 Arg 1 (CH): 162


(METHOD ZWEI:ZMAIL-COMMAND-LOOP-MIXIN COMMAND-LOOP) (P.C. = 266)
  (SELF is #<ZMAIL-FRAME MAIN-ZMAIL-WINDOW 1440232 exposed>)

 Arg 0 (OPERATION): COMMAND-LOOP
Local 0: ("Return to ZMAIL command loop.")
Local 1: ((SYS:ABORT ERROR) ("Return to ZMAIL command loop.") T ("Return to ZMAIL command loop.") ...)
Local 2 (RESPONSE): NIL
Local 3 (DEGREE): 5


Additional information supplied with call:
 SYS:ADI-FEXPR-CALL

(INTERNAL (METHOD ZWEI:ZMAIL-FRAME COMBINED COMMAND-LOOP) 0) (P.C. = 50)

 Rest arg (.DAEMON-CALLER-ARGS.): (COMMAND-LOOP)
Local 1 (.DAEMON-MAPPING-TABLE.): #<ART-16B-16 22365317>


FUNCALL (P.C. = 25)

 Arg 0 (FN): #<DTP-FEF-POINTER (INTERNAL (METHOD ZWEI:ZMAIL-FRAME COMBINED COMMAND-LOOP) 0) 24014611>
 Rest arg (ARGS): (COMMAND-LOOP)


(METHOD ZWEI:ZMAIL-COMMAND-LOOP-MIXIN AROUND COMMAND-LOOP) (P.C. = 57)
  (SELF is #<ZMAIL-FRAME MAIN-ZMAIL-WINDOW 1440232 exposed>)

 Arg 0 (OPERATION): COMMAND-LOOP
 Arg 1 (CONT): #<DTP-FEF-POINTER (INTERNAL (METHOD ZWEI:ZMAIL-FRAME COMBINED COMMAND-LOOP) 0) 24014611>
 Arg 2 (MT): #<ART-16B-16 22365317>
 Arg 3 (ARGS): (COMMAND-LOOP)
   --Defaulted args:--
 Arg 4 (EDITOR-CLOSURE-1): NIL
 Rest arg (IGNORE): NIL
Local 1: (ZWEI:UNKNOWN-SPECIAL-COMMAND ZWEI:ZMAIL-COMMAND-LOOP-UNKNOWN-SPECIAL-COMMAND)
Local 2: ((ZWEI:UNKNOWN-SPECIAL-COMMAND ZWEI:ZMAIL-COMMAND-LOOP-UNKNOWN-SPECIAL-COMMAND))


(METHOD ZWEI:ZMAIL-FRAME COMBINED COMMAND-LOOP) (P.C. = 47)
  (SELF is #<ZMAIL-FRAME MAIN-ZMAIL-WINDOW 1440232 exposed>)

 Rest arg (.DAEMON-CALLER-ARGS.): (COMMAND-LOOP)
Local 1 (.DAEMON-MAPPING-TABLE.): #<ART-16B-16 22365317>


ZWEI:ZMAIL-PROCESS-TOP-LEVEL (P.C. = 115)

 Arg 0 (WINDOW): #<ZMAIL-FRAME MAIN-ZMAIL-WINDOW 1440232 exposed>


SI:PROCESS-TOP-LEVEL (P.C. = 115)

 Arg 0 (IGNORE): NIL
Local 0: ("Restart process ~A." "MAIN-ZMAIL-WINDOW")
Local 1: ((SYS:ABORT ERROR) ("Restart process ~A." "MAIN-ZMAIL-WINDOW") T ("Restart process ~A." "MAIN-ZMAIL-WINDOW") ...)
Local 2 (IGNORE): NIL
 8-May-83 06:16:25-EDT,2510;000000000000
Return-path: <Hdt@MIT-OZ>
Date: Sunday, 8 May 1983, 06:16-EDT
From: Hdt@MIT-OZ
To: BUG-zwei@MIT-OZ

In MIT-Specific 19.1, Experimental System 94.14, Experimental ZMail 50.2,
microcode 238, ZM GC@0, on Lisp Machine Eighteen:

Just typing control-p's and control-n's and doing some control-k's.
The text in question had been heavily edited with canonical zwei
commands earlier.

>>TRAP 10174 (ARGTYP ARRAY M-A NIL GAHDR) ->  ARRAY-ACTIVE-LENGTH 
Some argument to ARRAY-ACTIVE-LENGTH, NIL, was of the wrong type.
The function expected an array.
Backtrace from the debugger:

Additional information supplied with call:
 Expecting 3 values

TV:SHEET-COMPUTE-MOTION (P.C. = 363)

 Arg 0 (SHEET): #<ZMACS-WINDOW-PANE Zmacs Window Pane 5 1470404 exposed>
 Arg 1 (X): 0
 Arg 2 (Y): 0
 Arg 3 (STRING): NIL
 Arg 4 (START): 0
 Arg 5 (END): NIL
 Arg 6 (CR-AT-END-P): NIL
 Arg 7 (STOP-X): 40
 Arg 8 (STOP-Y): 0
   --Defaulted args:--
 Arg 9 (BOTTOM-LIMIT): 1523
 Arg 10 (RIGHT-LIMIT): 1361
 Arg 11 (FONT): #<FONT CPTFONT 1200323>
 Arg 12 (LINE-HT): 16
Local 0 (CWA): NIL
Local 1 (CW): NIL
Local 2 (CH): NIL
Local 3 (FONTX): NIL
Local 4 (TEM): NIL
Local 5 (I): 0
Local 6 (N): NIL
Local 7 (NN): NIL
Local 8 (II): NIL
Local 9 (MARGIN-FLAG): T
Local 10 (MAXIMUM-X): 0
Local 11 (WIDTH-INCR): NIL
Local 12 (REQUIRED-STOP): NIL
Local 13 (STOP-IDX): NIL
Local 14 (FONT-MAP): NIL


INDENTATION-INDEX (P.C. = 112)

 Arg 0 (LINE): NIL
 Arg 1 (XPOS): 40
   --Defaulted args:--
 Arg 2 (SHEET): #<ZMACS-WINDOW-PANE Zmacs Window Pane 5 1470404 exposed>
 Arg 3 (LENGTH): NIL
 Arg 4 (ROUND-DOWN-P): NIL
Local 0 (X): NIL
Local 1 (INDEX): NIL


DOWN-REAL-LINE (P.C. = 155)

 Arg 0 (N-LINES): -1
Local 0 (POINT): ("To: " 4 :NORMAL)
Local 1 (RET): 2
Local 2 (DEST): NIL
Local 3 (INDEX): NIL


COM-UP-REAL-LINE (P.C. = 46)



Additional information supplied with call:
 Expecting 3 values

COMMAND-EXECUTE (P.C. = 100)

 Arg 0 (COMMAND): COM-UP-REAL-LINE
 Arg 1 (CHAR): 520
 Arg 2 (PREFIX-CHAR): NIL
 Arg 3 (HOOK-LIST): (EXPAND-ABBREV-HOOK SHIFT-LOCK-HOOK)
Local 0: NIL
Local 1 (HOOK): SHIFT-LOCK-HOOK


Remainder of stack:

PROCESS-COMMAND-CHAR (P.C. = 67)
(:METHOD WINDOW :EDIT) (P.C. = 470)
(:INTERNAL (:METHOD ZMACS-WINDOW :COMBINED :EDIT) 0) (P.C. = 74)
FUNCALL (P.C. = 25)
(:METHOD DISPLAYER :AROUND :EDIT) (P.C. = 31)
(:METHOD ZMACS-WINDOW :COMBINED :EDIT) (P.C. = 47)
ZMACS-WINDOW-TOP-LEVEL (P.C. = 46)
SI:PROCESS-TOP-LEVEL (P.C. = 115)
 8-May-83 06:21:24-EDT,371;000000000000
Return-path: <Hdt@MIT-OZ>
Date: Sunday, 8 May 1983, 06:18-EDT
From: Hdt@MIT-OZ
To: Bug-zwei@MIT-OZ

The interesting thing about the error I just mentioned was that I was
editing converse code (so I'm suspect) and was quitting converse to enter zwei.
the Converse window was actually getting redisplayed, but the function claims
to be redisplaying the emacs window11-May-83 00:02:42-EDT,430;000000000000
Return-path: <Mly@MIT-OZ>
Date: Tuesday, 10 May 1983, 23:58-EDT
From: Richard Mlynarik <Mly@MIT-OZ>
Re: 
To: BUG-ZWEI-MIT@MIT-OZ

In ZWEI in MIT-Specific 19.1, Experimental System 94.17,
Experimental ZMail 50.4, microcode 238, ZM GC@0, on Lisp Machine Nine:

dired should indicate if a file is offline in the directory listing.
  [currently one doen't find out until one tries to do some operation
to an offline file]
12-May-83 16:28:14-EDT,518;000000000000
Return-path: <HDT@MIT-OZ>
Mail-From: HDT created at 12-May-83 16:26:05
Date: 12 May 1983  16:26 EDT (Thu)
From: Howard D. Trachtman <HDT@MIT-OZ>
To:   Bug-Zwei-MIT@MIT-OZ
Subject: Request for new command

  I'd like to see a command that is a combination between revert file
and undo.   What I would like it to do is revert the buffer the state
it was in at the last reading or writing of the buffer via the undo commands,
and if it is not able to do so, then to tell me and offer to do meta-x Revert File.
13-May-83 14:16:35-EDT,3065;000000000000
Return-path: <dph@MIT-OZ>
Date: Friday, 13 May 1983, 09:00-EDT
From: Daniel Huttenlocher <dph at MIT-OZ>
Subject: redisplay
To: BUG-ZWEI at OZ

In Release 4.1, System 222.186, Hardcopy 11.14, Zmail 74.43, LMFS 30.26,
Spire 7.22, site configuration 18, on Lisp Machine Six:

A c-. from a List Callers trying to find the definition of a function
whose source had been deleted from its buffer.

>>Trap: Some argument to ARRAY-ACTIVE-LENGTH, NIL, was of the wrong type.
The function expected an array.
While in the function ARRAY-ACTIVE-LENGTH  (METHOD TV:SHEET COMPUTE-MOTION)  ZWEI:PUT-POINT-AT-PLINE  ZWEI:PLINE-OF-POINT


(METHOD TV:SHEET COMPUTE-MOTION): (P.C. = 244)
 (SELF = #<ZMACS-WINDOW-PANE Zmacs Window Pane 1 20523175 exposed>)
 Arg 0 (OPERATION): COMPUTE-MOTION
 Arg 1 (STRING): NIL
 Arg 2 (START): 0.
 Arg 3 (END): NIL
 Arg 4 (X): 0.
 Arg 5 (Y): 0.
 Arg 6 (CR-AT-END-P): T
 Arg 7 (STOP-X): 0.
 Arg 8 (STOP-Y): 4194303.
 Arg 9 (BOTTOM-LIMIT): 4194303.
 Arg 10 (RIGHT-LIMIT): 753.
 Arg 11 (ACCOUNT-FOR-CONTINUATION-AFTER): NIL
 Local 0 (CWA): NIL
 Local 1 (CW): NIL
 Local 2 (CH): NIL
 Local 3 (FONT): NIL
 Local 4 (FONTX): NIL
 Local 5 (TEM): NIL
 Local 6 (I): 0.
 Local 7 (N): NIL
 Local 8 (NN): NIL
 Local 9 (II): NIL
 Local 10 (MARGIN-FLAG): T


(METHOD TV:SHEET COMPUTE-MOTION):  (P.C. = 244)
   (SELF = #<ZMACS-WINDOW-PANE Zmacs Window Pane 1 20523175 exposed>)
   Arg 0 (OPERATION): COMPUTE-MOTION
   Arg 1 (STRING): NIL
   Arg 2 (START): 0.
   Arg 3 (END): NIL
   Arg 4 (X): 0.
   Arg 5 (Y): 0.
   Arg 6 (CR-AT-END-P): T
   Arg 7 (STOP-X): 0.
   Arg 8 (STOP-Y): 4194303.
   Arg 9 (BOTTOM-LIMIT): 4194303.
   Arg 10 (RIGHT-LIMIT): 753.
   Arg 11 (ACCOUNT-FOR-CONTINUATION-AFTER): NIL

ZWEI:PUT-POINT-AT-PLINE:  (P.C. = 74)
   Arg 0 (SHEET): #<ZMACS-WINDOW-PANE Zmacs Window Pane 1 20523175 exposed>
   Arg 1 (POINT-LINE): "(DEFUN LOAD-UTTERANCES (SPEAKER-ID &OPTIONAL PATHNAME-DEFAULT)"
   Arg 2 (POINT-INDEX): 0.
   Arg 3 (POINT-PLINE): 58.
   Arg 4 (FIRST-BP): ("; create the parameter flavor instances for the disk-saved paramaters" 0. NORMAL)
   Arg 5 (LAST-BP): NIL

ZWEI:PLINE-OF-POINT:  (P.C. = 176)
   Arg 0 (IN-BOUNDS-P): T
   Arg 1 (WINDOW): #<WINDOW 2015711>
   Arg 2 (POINT): ("(DEFUN LOAD-UTTERANCES (SPEAKER-ID &OPTIONAL PATHNAME-DEFAULT)" 0. NORMAL)

ZWEI:REDISPLAY:  (P.C. = 624)
   Arg 0 (WINDOW): #<WINDOW 2015711>
   --Defaulted args:--
   Arg 1 (RECENTER-TYPE): POINT
   Arg 2 (RC1): NIL
   Arg 3 (RC2): NIL
   Arg 4 (FORCE-TO-COMPLETION-P): NIL

ZWEI:REDISPLAY-ALL-WINDOWS:  (P.C. = 102)
   --Defaulted args:--
   Arg 0 (FORCE-TO-COMPLETION-P): NIL
   Arg 1 (SELECT-P): T

(METHOD ZWEI:EDITOR EDIT):  (P.C. = 337)
   (SELF = #<ZMACS-TOP-LEVEL-EDITOR 2635601>)
   Arg 0 (OPERATION): EDIT
   --Defaulted args:--
   Arg 1 (TOP-LEVEL-P): T

(METHOD ZWEI:TOP-LEVEL-EDITOR COMBINED EDIT):  (P.C. = 102)
   (SELF = #<ZMACS-TOP-LEVEL-EDITOR 2635601>)
   Rest arg (.DAEMON-CALLER-ARGS.): (EDIT)

ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 52)
13-May-83 17:21:33-EDT,617;000000000000
Return-path: <Henry@MIT-OZ>
Date: Friday, 13 May 1983, 17:18-EDT
From: Henry Lieberman <Henry@MIT-OZ>
Subject: Zwei attributes
To: DLW@MIT-OZ
Cc: Bug-Zwei@MIT-OZ


I tried <DLW>ATTR.LISP for changing attributes of buffers.  Two problems are that it
won't change the FONTS attribute since it doesn't have an ATTRIBUTE-PRINTER for it
and ATTRIBUTE-PUTPROP doesn't take effect immediately on a buffer which is being
displayed.  Shouldn't it change any existing displayed buffers immediately, or have an
optional DO-IT-NOW? flag, or should the user follow calls to ATTRIBUTE-PUTPROP by
a Reparse Mode Line?
16-May-83 16:14:53-EDT,5066;000000000000
Return-path: <SR.ROB@MIT-SPEECH>
Date: 16 May 1983 15:27 EDT
From: Communications Satellite <COMSAT @ MIT-MC>
Subject: Msg of Monday, 16 May 1983 13:25 EDT
To: sr.rob @ MIT-SPEECH
Remailed-date: 16 May 1983 1607-EDT
Remailed-from: Robert Kassel <SR.ROB at MIT-SPEECH>
Remailed-to: bug-zwei at MIT-OZ

FAILED: Schiffman at SRI-KL; Recipient name apparently rejected.
	Last reply was: {500 Argument given when none expected}
 Failed message follows:
-------
Date: Monday, 16 May 1983, 13:18-EDT
From: Robert H. Kassel <sr.rob at MIT-SPEECH>
Subject: bug?
To: BUG-LISPM at OZ

In Release 4.1, System 222.186, Hardcopy 11.14, Zmail 74.43, LMFS 30.26,
Spire 9.9, Experimental lexis 1.4, site configuration 28, on Lisp Machine Koala:

I was compiling a buffer in ZWEI

>>Trap: The word #<DTP-FREE 26> was read from location 26 (in RESIDENT-SYMBOL-AREA).
While in the function 9.  COMPILER:LAP-WORD-EVAL  COMPILER:QLP2-U
While compiling LEXIS-ALPHA-SEARCH-UNIVERSE


9.:
 Arg 0: 1028.
 Local -1: 1028.


9.:
   Arg 0: 1028.

COMPILER:LAP-WORD-EVAL:  (P.C. = 123)
   Arg 0 (WD): ((COMPILER:QUOTE-VECTOR (FUNCTION STRING-TRIM)))

COMPILER:QLP2-U:  (P.C. = 136)
   Arg 0 (WD): (CALL COMPILER:D-PDL (COMPILER:QUOTE-VECTOR (FUNCTION STRING-TRIM)))

COMPILER:QLAP-PASS2:  (P.C. = 47)
   Arg 0 (PNTR): (COMPILER:PROGSA (CALL COMPILER:D-IGNORE (COMPILER:QUOTE-VECTOR (FUNCTION LEXIS-PRINT-MESSAGE))) (COMPILER:MOVE COMPILER:D-LAST (COMPILER:QUOTE-VECTOR (QUOTE "Word to search for:"))) (CALL COMPILER:D-PDL (SPECIAL *DEFAULT-MESSAGE-STREAM*)) (COMPILER:MOVE COMPILER:D-LAST (COMPILER:QUOTE-VECTOR (QUOTE CURRENT-FONT))) (POP 0. (COMPILER:LOCBLOCK 1.)) (COMPILER:ADI-CALL CALL COMPILER:D-IGNORE (COMPILER:QUOTE-VECTOR (FUNCTION *CATCH)) (COMPILER:RESTART-PC (COMPILER:QUOTE-VECTOR **) COMPILER:BIND-STACK-LEVEL NIL MULTIPLE-VALUE (COMPILER:QUOTE-VECTOR **))) (COMPILER:MOVE COMPILER:D-PDL (COMPILER:QUOTE-VECTOR (QUOTE T))) (CALL COMPILER:D-IGNORE (SPECIAL *DEFAULT-MESSAGE-STREAM*)) (COMPILER:MOVE COMPILER:D-PDL (COMPILER:QUOTE-VECTOR (QUOTE SET-CURRENT-FONT))) ...)

COMPILER:QLAPP:  (P.C. = 460)
   Arg 0 (FCTN): ((COMPILER:MFEF LEXIS-ALPHA-SEARCH-UNIVERSE T ((CALLER-WINDOW SYS:FEF-ARG-REQ SYS:FEF-LOCAL 2. ** ** SYS:FEF-QT-DONTCARE NIL NIL NIL) (THE-WORD SYS:FEF-ARG-AUX SYS:FEF-LOCAL 3. ** ** SYS:FEF-QT-DONTCARE NIL NIL NIL) (OLD-FONT SYS:FEF-ARG-INTERNAL-AUX SYS:FEF-LOCAL 1. ** ** SYS:FEF-QT-DONTCARE NIL NIL NIL) (STANDARD-INPUT SYS:FEF-ARG-INTERNAL-AUX SYS:FEF-SPECIAL 0. ** ** SYS:FEF-QT-DONTCARE NIL NIL NIL) (STANDARD-OUTPUT SYS:FEF-ARG-INTERNAL-AUX SYS:FEF-SPECIAL 0. ** ** SYS:FEF-QT-DONTCARE NIL NIL NIL) (QUERY-IO SYS:FEF-ARG-INTERNAL-AUX SYS:FEF-SPECIAL 0. ** ** SYS:FEF-QT-DONTCARE NIL NIL NIL) (OLD-FONT SYS:FEF-ARG-INTERNAL-AUX SYS:FEF-LOCAL 1. ** ** SYS:FEF-QT-DONTCARE NIL NIL NIL) (STANDARD-INPUT SYS:FEF-ARG-INTERNAL-AUX SYS:FEF-SPECIAL 0. ** ** SYS:FEF-QT-DONTCARE NIL NIL NIL) (STANDARD-OUTPUT SYS:FEF-ARG-INTERNAL-AUX SYS:FEF-SPECIAL 0. ** ** SYS:FEF-QT-DONTCARE NIL NIL NIL) (QUERY-IO SYS:FEF-ARG-INTERNAL-AUX SYS:FEF-SPECIAL 0. ** ** SYS:FEF-QT-DONTCARE NIL NIL NIL) ...) (*DEFAULT-MESSAGE-STREAM*)) (COMPILER:QTAG COMPILER:S-V-BASE) (COMPILER:S-V-BLOCK) (COMPILER:QTAG COMPILER:DESC-LIST-ORG) (COMPILER:A-D-L) (COMPILER:PARAM COMPILER:LLOCBLOCK 6.) (COMPILER:QTAG COMPILER:QUOTE-BASE) (COMPILER:ENDLIST) (COMPILER:DEBUG-INFO (COMPILER:ARG-MAP (**)) (COMPILER:LOCAL-MAP (** ** ** ** ** **)) (INTERPRETED-DEFINITION (LAMBDA ** ** ** **)) (MACROS-EXPANDED (IF LET* WITH-INPUT-FROM-MESSAGE-STREAM))) COMPILER:PROGSA ...)
   Arg 1 (LAP-MODE): COMPILER:COMPILE-TO-CORE

COMPILER:QC-TRANSLATE-FUNCTION:  (P.C. = 276)
   Arg 0 (FUNCTION): LEXIS-ALPHA-SEARCH-UNIVERSE
   Arg 1 (EXP): (LAMBDA (CALLER-WINDOW &AUX THE-WORD) (LEXIS-PRINT-MESSAGE "Word to search for:") (WITH-INPUT-FROM-MESSAGE-STREAM (SETQ THE-WORD (STRING-TRIM ** **))) (SI:DISPLACED (IF (STRING-EQUAL THE-WORD "") (LEXIS-PRINT-NOTICE "Ignoring null request.") (PROGN **)) (COND (** **) (T **))))
   Arg 2 (QC-TF-PROCESSING-MODE): COMPILER:MACRO-COMPILE
   Arg 3 (QC-TF-OUTPUT-MODE): COMPILER:COMPILE-TO-CORE

COMPILER:COMPILE-1:  (P.C. = 74)
   Arg 0 (NAME): LEXIS-ALPHA-SEARCH-UNIVERSE
   Arg 1 (LAMBDA-EXP): (LAMBDA (CALLER-WINDOW &AUX THE-WORD) (LEXIS-PRINT-MESSAGE "Word to search for:") (WITH-INPUT-FROM-MESSAGE-STREAM (SETQ THE-WORD (STRING-TRIM ** **))) (SI:DISPLACED (IF (STRING-EQUAL THE-WORD "") (LEXIS-PRINT-NOTICE "Ignoring null request.") (PROGN **)) (COND (** **) (T **))))
   Arg 2 (PROCESSING-MODE): COMPILER:MACRO-COMPILE

COMPILER:QC-FILE-DUMP-LAMBDA-EXP:  (P.C. = 70)
   Arg 0 (FSPEC): LEXIS-ALPHA-SEARCH-UNIVERSE
   Arg 1 (LAMBDA-EXP): (LAMBDA (CALLER-WINDOW &AUX THE-WORD) (LEXIS-PRINT-MESSAGE "Word to search for:") (WITH-INPUT-FROM-MESSAGE-STREAM (SETQ THE-WORD (STRING-TRIM ** **))) (SI:DISPLACED (IF (STRING-EQUAL THE-WORD "") (LEXIS-PRINT-NOTICE "Ignoring null request.") (PROGN **)) (COND (** **) (T **))))
   Arg 2 (MODE): COMPILER:MACRO-COMPILE
   Arg 3 (TO-CORE-P): T
   Arg 4 (TO-FILE-P): NIL
18-May-83 00:34:23-EDT,454;000000000000
Return-path: <Henry@MIT-OZ>
Date: Wednesday, 18 May 1983, 00:30-EDT
From: Henry Lieberman <Henry@MIT-OZ>
Subject: Delete file
To: BUG-Zwei@MIT-OZ

In Release 4.1, System 222.186, Hardcopy 11.14, Zmail 74.43, LMFS 30.26,
site configuration 19, Vanilla, on Lisp Machine Twenty-two:

I had a file which migrated offline. I wanted to delete it so a program
wouldn't try to load it. I did Meta-X Delete File and it complained
"File is off line". 
18-May-83 04:22:19-EDT,1105;000000000000
Return-path: <Moon@SCRC-TENEX>
Received: from SCRC-EUPHRATES by SCRC-TENEX with CHAOS; Wed 18-May-83 02:48:48-EDT
Date: Wednesday, 18 May 1983, 02:46-EDT
From: David A. Moon <Moon@SCRC-TENEX>
Subject: Delete file of an offline file
To: Henry Lieberman <Henry@MIT-OZ>
Cc: BUG-Zwei@MIT-OZ
In-reply-to: The message of 18 May 83 00:30-EDT from Henry Lieberman <Henry at MIT-OZ>

    Date: Wednesday, 18 May 1983, 00:30-EDT
    From: Henry Lieberman <Henry@MIT-OZ>
    In Release 4.1, System 222.186, Hardcopy 11.14, Zmail 74.43, LMFS 30.26,
    site configuration 19, Vanilla, on Lisp Machine Twenty-two:

    I had a file which migrated offline. I wanted to delete it so a program
    wouldn't try to load it. I did Meta-X Delete File and it complained
    "File is off line". 

The error occurs when the Delete File command probes the file to find out its
truename to include in the prompt it gives for whether to delete it.  I fixed
this bug in the Twenex file server in the copy of the source on SCRC.  Will
merge with OZ and XX sources, test, and install some day when I have time.
18-May-83 18:49:05-EDT,354;000000000000
Return-path: <Hdt@MIT-OZ>
Date: Wednesday, 18 May 1983, 17:33-EDT
From:  <Hdt at MIT-OZ>
To: bug-zwei at MIT-OZ

This is silly.
 I couldn't log  into oz, and I just typed in some code from scratch to zwei.
I type control-x control-w to zwei and it tries to connect to oz to get some kind
of information before even prompting me for a file name.
22-May-83 21:21:55-EDT,454;000000000000
Return-path: <Zvona@MIT-OZ>
Date: Sunday, 22 May 1983, 21:21-EDT
From: David Chapman <Zvona@MIT-OZ>
Subject: View File feature suggestion
To: BUG-zwei@MIT-OZ

In zwei in Release 4.1, System 222.186, Hardcopy 11.14, Zmail 74.43,
LMFS 30.26, site configuration 20, on Lisp Machine Eight:

Since View File has backspacing, it would be winning if to end it you
had to type <END>.  Space at the end would just feep.  This might affect
viewf also.
23-May-83 13:01:58-EDT,977;000000000000
Return-path: <CWH@SCRC-TENEX>
Received: from SCRC-BULLDOG by SCRC-SPANIEL with CHAOS; Mon 23-May-83 12:58:48-EDT
Date: Monday, 23 May 1983, 12:58-EDT
From: Carl W. Hoffman <CWH at SCRC-TENEX>
Subject: View File feature suggestion
To: Zvona at MIT-OZ, BUG-zwei at MIT-OZ
In-reply-to: The message of 22 May 83 21:21-EDT from David Chapman <Zvona at MIT-OZ>

    Date: Sunday, 22 May 1983, 21:21-EDT
    From: David Chapman <Zvona@MIT-OZ>
    In zwei in Release 4.1, System 222.186, Hardcopy 11.14, Zmail 74.43,
    LMFS 30.26, site configuration 20, on Lisp Machine Eight:

    Since View File has backspacing, it would be winning if to end it you
    had to type <END>.  Space at the end would just feep.  This might affect
    viewf also.

I would like this also.  I often find myself typing Space on the last page of
a file being viewed thinking that more followed, and then having to view the
file again from the beginning to look at the last page again.
23-May-83 13:41:57-EDT,474;000000000000
Return-path: <Zvona@MIT-OZ>
Date: Monday, 23 May 1983, 13:41-EDT
From: David Chapman <Zvona@MIT-OZ>
Subject: Save All Files feature suggestion
To: BUG-zwei@MIT-OZ

In zwei in Release 4.1, System 222.186, Hardcopy 11.14, Zmail 74.43,
LMFS 30.26, site configuration 40, on Lisp Machine Four:

It would be featureful if when you gave Save All Files an argument it
would echoe ``Done.'' in the echo area at the bottom of the screen
instead of on the typeout window.
31-May-83 23:25:33-EDT,1927;000000000000
Return-path: <Henry@MIT-OZ>
Date: Tuesday, 31 May 1983, 23:25-EDT
From: Henry Lieberman <Henry@MIT-OZ>
Subject: Standalone editor panes
To: BUG-Zwei@MIT-OZ

In Release 4.1, System 222.186, Hardcopy 11.14, Zmail 74.43, LMFS 30.26,
site configuration 34, on Lisp Machine Apiary-1:

The 4.0 release notes claim [p. 109] that you can use a 
ZWEI:STANDALONE-EDITOR-FRAME for prompting the user for editable input. 

(SETQ SEF (TV:MAKE-WINDOW 'ZWEI:STANDALONE-EDITOR-FRAME
			  ':EDGES-FROM 'MOUSE
			  ':EXPOSE-P T))

Then make a Lisp listener and run in it (SEND SEF ':EDIT)

>>Error: The object #<NODE 31043332> received a PUTPROP message, which went unclaimed.
The rest of the message was (ZWEI:LISP-MODE MAJOR-MODE)
While in the function ZWEI:TURN-ON-MODE  ZWEI:TURN-ON-USER-MODES  (METHOD ZWEI:TOP-LEVEL-EDITOR BEFORE EDIT)


ZWEI:TURN-ON-MODE: (P.C. = 70)
 Arg 0 (MODE-SYMBOL): ZWEI:LISP-MODE
 Local 0: NIL
 Local 1 (MINOR): NIL
 Local 2 (HOOK): NIL


ZWEI:TURN-ON-MODE:  (P.C. = 70)
   Arg 0 (MODE-SYMBOL): ZWEI:LISP-MODE

ZWEI:TURN-ON-USER-MODES:  (P.C. = 26)

(METHOD ZWEI:TOP-LEVEL-EDITOR BEFORE EDIT):  (P.C. = 32)
   (SELF = #<STANDALONE-EDITOR-FRAME Standalone Editor Frame 4 20564143 exposed>)
   Arg 0 (OPERATION): EDIT
   Rest arg (IGNORE): NIL

(METHOD ZWEI:TOP-LEVEL-EDITOR COMBINED EDIT):  (P.C. = 73)
   (SELF = #<STANDALONE-EDITOR-FRAME Standalone Editor Frame 4 20564143 exposed>)
   Rest arg (.DAEMON-CALLER-ARGS.): (EDIT)

SEND:  (P.C. = 22)
   Arg 0 (OBJECT): #<STANDALONE-EDITOR-FRAME Standalone Editor Frame 4 20564143 exposed>
   Arg 1 (MESSAGE-NAME): EDIT
   Rest arg (ARGUMENTS): NIL

SI:*EVAL:  (P.C. = 653)
   Arg 0 (FORM): (SEND SEF (QUOTE EDIT))

SI:LISP-TOP-LEVEL1:  (P.C. = 210)
   Arg 0 (TERMINAL-IO): #<LISP-LISTENER Lisp Listener 3 20565473 exposed>

SI:PROCESS-TOP-LEVEL:  (P.C. = 125)
   --Defaulted args:--
   Arg 0 (IGNORE): NIL
 1-Jun-83 14:07:11-EDT,922;000000000000
Return-path: <klotz@MIT-MC>
Date: Wednesday, 1 June 1983, 14:02-EDT
From: Leigh L. Klotz <klotz at MIT-MC>
Subject: Fill Long Comment
To: BUG-zwei at OZ

In zwei in Release 4.1, System 222.186, Hardcopy 11.14, Zmail 74.43,
LMFS 30.26, site configuration 16, on Lisp Machine Twenty:

;;;This is a long comment, which I have typed in for the purposes of testing
;;;the Fill Long Comment command.
;;
;;;This command loses if you happen to have a line with just two semicolons in it in
;;;the middle of a long
;;;sequence of comments lines with three semicolons.
;;;This happens in LISP mode.
()
;;;This is a long comment, which I have typed in for the purposes of testing
;;;the Fill Long Comment command.
;;
;;;This command loses if you happen to have a line with just two semicolons in it in ;the
;;middle of a long ;sequence of comments lines with three semicolons.  ;This happens in
;;LISP mode.

 6-Jun-83 13:56:58-EDT,3367;000000000000
Return-path: <Henry@MIT-OZ>
Date: Monday, 6 June 1983, 13:55-EDT
From: Henry Lieberman <Henry@MIT-OZ>
Subject: NUMBER-OF-MINI-BUFFER-LINES in ZMACS-FRAME
To: BUG-Zwei@MIT-OZ

In Release 4.3, site configuration 43, on Lisp Machine Apiary-1:

This bug still exists in 4.3. It used to work a long time ago.
I created a ZMACS-FRAME specifying :NUMBER-OF-MINI-BUFFER-LINES 1.

>>Error: Zero line editor windows do not work
While in the function (METHOD TV:ESSENTIAL-SET-EDGES AFTER INIT)  (METHOD ZWEI:ZWEI-WITH-TYPEOUT COMBINED INIT)  TV:MAKE-WINDOW

(METHOD TV:ESSENTIAL-SET-EDGES AFTER INIT):  (P.C. = 46)
   (SELF = #<ZWEI-MINI-BUFFER Zwei Mini Buffer 15 20556545 deactivated>)
   Arg 0 (OPERATION): INIT
   Arg 1 (IGNORE): #<DTP-LOCATIVE 11116534>
   Local 0 (ERROR-MESSAGE): "Zero line editor windows do not work"

(METHOD ZWEI:ZWEI-WITH-TYPEOUT COMBINED INIT):  (P.C. = 203)
   (SELF = #<ZWEI-MINI-BUFFER Zwei Mini Buffer 15 20556545 deactivated>)
   Rest arg (.DAEMON-CALLER-ARGS.): (INIT #<DTP-LOCATIVE 11116534>)

TV:MAKE-WINDOW:  (P.C. = 212)
   Arg 0 (FLAVOR-NAME): ZWEI:ZWEI-MINI-BUFFER
   Rest arg (OPTIONS): (TAB-NCHARS 8 MINIMUM-HEIGHT 32 MINIMUM-WIDTH 32 BACKSPACE-NOT-OVERPRINTING-FLAG 1 RIGHT-MARGIN-CHARACTER-FLAG 1 ...)

(METHOD ZWEI:MODE-LINE-SUPERIOR-MIXIN AFTER INIT):  (P.C. = 155)
   (SELF = #<ZMACS-MODE-LINE-WINDOW Zmacs Mode Line Window 4 20556401 deactivated>)
   Arg 0 (OPERATION): INIT
   Arg 1 (IGNORE): #<DTP-LOCATIVE 11116401>

(METHOD ZWEI:ZMACS-MODE-LINE-WINDOW COMBINED INIT):  (P.C. = 176)
   (SELF = #<ZMACS-MODE-LINE-WINDOW Zmacs Mode Line Window 4 20556401 deactivated>)
   Rest arg (.DAEMON-CALLER-ARGS.): (INIT #<DTP-LOCATIVE 11116401>)

TV:MAKE-WINDOW:  (P.C. = 212)
   Arg 0 (FLAVOR-NAME): ZWEI:ZMACS-MODE-LINE-WINDOW
   Rest arg (OPTIONS): (TAB-NCHARS 8 MORE-P NIL CR-NOT-NEWLINE-FLAG 1 TRUNCATE-LINE-OUT-FLAG 1 BLINKER-DESELECTED-VISIBILITY OFF ...)

ZWEI:INITIALIZE-MINI-BUFFER-WINDOW:  (P.C. = 64)
   Arg 0 (NLINES): 1
   Arg 1 (SUPERIOR): #<ZMACS-FRAME Zmacs Frame 2 20556321 deactivated>
   Arg 2 (MODE-LINE-FLAVOR): ZWEI:ZMACS-MODE-LINE-WINDOW
   Arg 3 (IO-BUFFER): #<IO-BUFFER 2015544: empty, State: NIL>
   Rest arg (OPTIONS): (BOTTOM 597 EXPOSE-P T)

(METHOD ZWEI:ZWEI-FRAME AFTER INIT):  (P.C. = 70)
   (SELF = #<ZMACS-FRAME Zmacs Frame 2 20556321 deactivated>)
   Arg 0 (OPERATION): INIT
   Arg 1 (INIT-PLIST): #<DTP-LOCATIVE 11116235>

Rest of stack:
(METHOD ZWEI:ZMACS-FRAME COMBINED INIT):  (P.C. = 141)
TV:MAKE-WINDOW:  (P.C. = 212)
(METHOD TV:BASIC-CONSTRAINT-FRAME CREATE-PANE):  (P.C. = 32)
(DEFUN-METHOD TV:CONSTRAINT-FRAME-WINDOWS):  (P.C. = 50)
(DEFUN-METHOD TV:CONSTRAINT-FRAME-PROCESS-CONSTRAINTS):  (P.C. = 104)
(METHOD TV:BASIC-CONSTRAINT-FRAME AFTER INIT):  (P.C. = 46)
(METHOD TV:BORDERED-CONSTRAINT-FRAME COMBINED INIT):  (P.C. = 137)
TV:MAKE-WINDOW:  (P.C. = 212)
SI:*EVAL:  (P.C. = 653)
ZWEI:DO-IT-MULTIPLE-EVAL:  (P.C. = 43)
ZWEI:DO-IT-EVAL-PRINT:  (P.C. = 141)
ZWEI:DO-IT-EVAL-AND-PRINT-FORMS:  (P.C. = 30)
ZWEI:DO-IT:  (P.C. = 140)
ZWEI:COM-DO-IT:  (P.C. = 30)
ZWEI:COMMAND-EXECUTE:  (P.C. = 100)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 67)
(METHOD ZWEI:EDITOR EDIT):  (P.C. = 377)
(METHOD ZWEI:TOP-LEVEL-EDITOR COMBINED EDIT):  (P.C. = 102)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 52)
SI:PROCESS-TOP-LEVEL:  (P.C. = 125)
 6-Jun-83 17:16:45-EDT,406;000000000000
Return-path: <Zvona@MIT-OZ>
Date: Monday, 6 June 1983, 17:06-EDT
From: David Chapman <Zvona@MIT-OZ>
Subject: self documentation
To: BUG-zwei@MIT-OZ

In zwei in System 222.211, Hardcopy 11.15, Zmail 74.45, Tape 13.0,
LMFS 30.27, cold load 65, microcode TMC5-MIC 195, site configuration 43,
MIT configured, on Lisp Machine Apiary-3:

c-X 4 <help> ought to do something better than feep and abort.
 6-Jun-83 22:49:44-EDT,652;000000000000
Return-path: <MMcM@SCRC-TENEX>
Received: from SCRC-COLLIE by SCRC-TENEX with CHAOS; Mon 6-Jun-83 22:19:50-EDT
Date: Mon, 6 Jun 83 22:18 EDT
From: Mike McMahon <MMcM@SCRC-TENEX>
Subject: self documentation
To: Zvona@MIT-OZ
Cc: BUG-zwei@MIT-OZ
In-reply-to: The message of 6 Jun 83 17:06-EDT from David Chapman <Zvona at MIT-OZ>
Message-ID: <830606221848.1.MMcM@SCRC-TENEX>

    Date: Monday, 6 June 1983, 17:06-EDT
    From: David Chapman <Zvona@MIT-OZ>
    c-X 4 <help> ought to do something better than feep and abort.
In the source I made it use FQUERY.  That doesn't improve the user interface
immensely, but it does make it standard.
 9-Jun-83 12:45:35-EDT,390;000000000000
Return-path: <Henry@MIT-OZ>
Date: Thursday, 9 June 1983, 12:46-EDT
From: Henry Lieberman <Henry@MIT-OZ>
Subject: Text overflowing line in font TR12B
To: BUG-zwei@MIT-OZ

In zwei in Release 4.3, site configuration 44, on Lisp Machine Apiary-3:

Create a file with text in font TR12B and a line which extends past the right margin.
The 3600 dies on reading in the file. OK on LM-2.
12-Jun-83 21:04:39-EDT,743;000000000000
Return-path: <Gregor@SCRC-TENEX>
Received: from SCRC-MERRIMACK by SCRC-TENEX with CHAOS; Sun 12-Jun-83 19:43:13-EDT
Date: Sunday, 12 June 1983, 19:43-EDT
From: Gregor J. Kiczales <Gregor@SCRC-TENEX>
Subject: Text overflowing line in font TR12B
To: Henry@MIT-OZ, BUG-zwei@MIT-OZ
In-reply-to: The message of 9 Jun 83 12:46-EDT from Henry Lieberman <Henry at MIT-OZ>

    From: Henry Lieberman <Henry@MIT-OZ>
    Subject: Text overflowing line in font TR12B
    To: BUG-zwei@MIT-OZ

    In zwei in Release 4.3, site configuration 44, on Lisp Machine Apiary-3:

    Create a file with text in font TR12B and a line which extends past the right margin.
    The 3600 dies on reading in the file. OK on LM-2.

This is fixed in 232.
14-Jun-83 22:21:02-EDT,534;000000000000
Return-path: <KLOTZ@MIT-OZ>
Date: Tuesday, 14 June 1983, 22:19-EDT
From: Leigh L. Klotz <KLOTZ@MIT-OZ>
Subject: Set Key and lower case ^X commands
To: BUG-zwei@MIT-OZ

In zwei in Release 4.3, site configuration 43, on Lisp Machine Twenty:

I did M-X Set Key/Insert File/CTRL-X i

and it reported assigning the function to "CTRL-X i".  I did M-? on both
CTRL-X I and CTRL-X i and found both to be undefined.  When I typed
CTRL-X I as the key to set it to, it assigned Insert File to both the
upper- and lowercase keys.

15-Jun-83 11:11:13-EDT,646;000000000000
Return-path: <DLW@SCRC-TENEX>
Received: from SCRC-COLLIE by SCRC-SPANIEL with CHAOS; Wed 15-Jun-83 11:06:01-EDT
Date: Wednesday, 15 June 1983, 11:06-EDT
From: Daniel L. Weinreb <DLW at SCRC>
Subject: Set Key and lower case ^X commands
To: KLOTZ at MIT-OZ, BUG-zwei at MIT-OZ
In-reply-to: The message of 14 Jun 83 22:19-EDT from Leigh L. Klotz <KLOTZ at MIT-OZ>

    Date: Tuesday, 14 June 1983, 22:19-EDT
    From: Leigh L. Klotz <KLOTZ@MIT-OZ>
    In zwei in Release 4.3, site configuration 43, on Lisp Machine Twenty:

    I did M-X Set Key/Insert File/CTRL-X i

Thank you; this is fixed in the source (and works in system 232).
15-Jun-83 12:48:32-EDT,265;000000000000
Return-path: <JBA@MIT-OZ>
Date: Wednesday, 15 June 1983, 12:45-EDT
From: Jon Amsterdam <JBA@MIT-OZ>
Subject: lisp-indent-offset-alist
To: info-zwei@MIT-OZ

Where can I find out what the numbers on
zwei:*lisp-indent-offset-alist* mean?

Jonathan Amsterdam
21-Jun-83 01:27:07-EDT,1029;000000000000
Return-path: <KLOTZ@MIT-OZ>
Date: Tuesday, 21 June 1983, 01:25-EDT
From: Leigh L. Klotz <KLOTZ@MIT-OZ>
Subject: Suggested fix for M-X Copy File with author/creation date setting on Twenex systems.
To: BUG-zwei@MIT-OZ

In zwei in Release 4.3, site configuration 28,
Educational Computing Group, on Lisp Machine Twenty:

When I do M-8 M-X Copy File to a Twenex site, I get the notification at the
top of the screen that it couldn't alter the creation date or file author
without wheel or operator capability.  I understand this is a limitation of
the operating system, and might be fixable at that level; however, the only I
could make it work was to do a M-X Enable Capabilities before doing the copy.

That is not what I want really, since that means I can use up every last disk
block on the machine or copy to the wrong directory or something.  It would be
nice if the command (or its condition handler or whatever) could offer to
enable and try to set the file attributes again, and then disable.

Leigh.
22-Jun-83 23:25:59-EDT,605;000000000000
Return-path: <JBA@MIT-OZ>
Date: Wednesday, 22 June 1983, 23:18-EDT
From: JBA@MIT-OZ
Subject: M-X Fill Long Comment
To: BUG-ZWEI@MIT-MC

In ZWEI in Release 4.3, site configuration 28, on Lisp Machine Apiary-3:

This function screws up every once in a while, leaving a line in a weird
state which makes it impossible to move point onto.  I'm not sure of the
conditions under which it doesn't work.  I can get more info (i.e. I can
send a bug report from the debugger when it happens again) but I was
just wondering if anyone else had encountered the problem and if it's
scheduled to be fixed.
 1-Jul-83 11:16:23-EDT,820;000000000000
Return-path: <Henry@MIT-OZ>
Date: Friday, 1 July 1983, 11:13-EDT
From: Henry Lieberman <Henry@MIT-OZ>
Subject: Advice on how to save/restore editor buffers
To: Bug-Zwei@MIT-OZ


I would like to do the following for a Zwei application:

I would like to "save the state of the buffer" at some point, 
then allow some editing operations, then later optionally
restore the saved state [edited text, point and mark]. What's 
the best way to do this with the minimal amount of fuss
and overhead?

- Save the buffer by COPY-INTERVAL, POINT and MARK by
COPY-BP. 
- As above, but make strings instead and use indices into strings.
- In the case I don't change buffers, but some buffer text
has been edited, can I avoid save/restore on the buffer interval?
- When do I need MOVES type bp's vs. NIL type bp's?
 3-Jul-83 01:29:34-EDT,406;000000000000
Return-path: <Gumby@MIT-OZ>
Date: Sunday, 3 July 1983, 01:29-EDT
From: David Vinayak Wallace <Gumby@MIT-OZ>
Subject: EMACS TAGS and ABBREV files.
To: BUG-zwei@MIT-OZ

In zwei in Release 4.3, LMFS 30.39, site configuration 29, on Lisp Machine Robot-1:

Is there any way to get ZWEI to use EMACS tags and ABBREV files?  I
would like the machine to write as well as read EMACS format abbrev
files.
 3-Jul-83 02:51:02-EDT,806;000000000000
Return-path: <DLW@SCRC-TENEX>
Date: Sunday, 3 July 1983  02:10-EDT
From: DLW at SCRC-TENEX
To:   David Vinayak Wallace <Gumby at MIT-OZ>
Cc:   BUG-zwei at MIT-OZ
Subject: EMACS TAGS and ABBREV files.
In-reply-to: The message of 3 Jul 1983 01:29-EDT from David Vinayak Wallace <Gumby at MIT-OZ>

I'm not at a machine now, but I would have sworn that the commands to
access word abbrev files are exactly the same in Emacs and Zmacs.
They were at one time, anyway.  This is the QWABL format, right?

The tags formats are the same too.  Do you actually use :TAGS and
the tags feature itself, or are you only using it to implement sets
of files?  I'd like to know because we're thinking of dropping
support for tags themselves since they're so useless in the Lisp
Machine environment.  Thanks.
 3-Jul-83 12:39:45-EDT,399;000000000000
Return-path: <KLOTZ@MIT-OZ>
Mail-From: KLOTZ created at  3-Jul-83 12:38:51
Date: Sun, 3 Jul 1983  12:38 EDT
From: Leigh L. Klotz <KLOTZ@MIT-OZ>
To:   bug-zwei@MIT-OZ, bug-lispm@MIT-OZ
Subject:TAGS

I will howl if tags support is dropped from ZWEI.  I like tags.
If you drop them because "they're useless in the lisp environment
anyway" you might as well drop everything but LISP mode too.
 3-Jul-83 13:44:27-EDT,459;000000000000
Return-path: <DLW@SCRC-TENEX>
Date:  3 Jul 1983 1305-EDT
From: Daniel L. Weinreb <DLW@SCRC-TENEX>
To: KLOTZ@MIT-OZ
cc: bug-zwei@MIT-OZ, bug-lispm@MIT-OZ
In-Reply-To: The message of Sun, 3 Jul 1983  12:38 EDT from Leigh L. Klotz <KLOTZ@MIT-OZ>

Thank you for your polite and carefully worded answer.  Would
you please explain to me how you use TAGS on the Lisp Machine, so
that I might understand why they might possibly be useful?  Thanks.
-------
 4-Jul-83 10:22:25-EDT,2289;000000000000
Return-path: <DLW%SCRC-TENEX@MIT-MC>
Received: from SCRC-BORZOI by SCRC-TENEX with CHAOS; Mon 4-Jul-83 10:15:57-EDT
Date: Monday, 4 July 1983, 10:15-EDT
From: Daniel L. Weinreb <DLW%SCRC-TENEX@MIT-MC>
Subject: Advice on how to save/restore editor buffers
To: Henry%MIT-OZ@MIT-MC, Bug-Zwei%MIT-OZ@MIT-MC
In-reply-to: The message of 1 Jul 83 11:13-EDT from Henry Lieberman <Henry at MIT-AI>

    Date: Friday, 1 July 1983, 11:13-EDT
    From: Henry Lieberman <Henry@MIT-OZ>
    I would like to "save the state of the buffer" at some point, 
    then allow some editing operations, then later optionally
    restore the saved state [edited text, point and mark].
A more extensive explanation of what it is you're trying to do
would be helpful, but I'll do my best without this information.

    - Save the buffer by COPY-INTERVAL, POINT and MARK by
    COPY-BP. 

Well, depends on exactly what you're trying to do.  But copy-bp will
create a second bp pointing into the same original buffer, not into
the copy produced by copy-interval.  There really ought to be a way
to copy an interval and create analogous copied BPs with it, now that
you mention it; this never came up in Zwei's implementation so I never
did it.

    - As above, but make strings instead and use indices into strings.

Well, given the lack of the facility I mentioned, yeah, this might
be the best way.  There is a way to convert a BP into a numerical
index somewhere (I think m-X Revert uses this), and to go the other
way you can just use forward-char.

    - In the case I don't change buffers, but some buffer text
    has been edited, can I avoid save/restore on the buffer interval?

I don't understand this.

    - When do I need MOVES type bp's vs. NIL type bp's?

There are three kinds: normal, moves, and nil.  The nil kind do not
relocate when text is inserted or deleted; they are invalid after
an insert or delete has happened and should not be used, since they
might point into a deleted line, or off the end of a line.  Normal
and moves relocate properly and are almost identical, the only
difference being what happens if text is inserted at exactly the
place that the BP points: normal ones end up before the inserted
text and moves ones end up after it.
 4-Jul-83 11:52:27-EDT,440;000000000000
Return-path: <Zvona@MIT-OZ>
Date: Monday, 4 July 1983, 11:48-EDT
From: David Chapman <Zvona@MIT-OZ>
Subject: trace into buffer
To: BUG-zwei@MIT-OZ

In zwei in Release 4.3, LMFS 30.39, site configuration 29, on Lisp Machine Apiary-3:

It would be featureful if m-X Execute Command Into Buffer bound
trace-output to whatever it binds standard-output to.  I use E C I B m-
to get trace information into an editable form sometimes.
 4-Jul-83 15:19:57-EDT,1703;000000000000
Return-path: <KLOTZ@MIT-OZ>
Mail-From: KLOTZ created at  4-Jul-83 15:15:47
Date: Mon, 4 Jul 1983  15:15 EDT
From: Leigh L. Klotz <KLOTZ@MIT-OZ>
To:   Daniel L. Weinreb <DLW@SCRC-TENEX>
cc:   bug-zwei@MIT-OZ, bug-lispm@MIT-OZ
In-reply-to: Msg of 3 Jul 1983  13:05-EDT from Daniel L. Weinreb <DLW at SCRC-TENEX>

I suppose I was a little off the handle in my response, but at the time
it seemed absurd to me that useful features should be flushed.  Now I
see that someone doesn't consider TAGS useful, so at least it's internally
consistent now...

I use TAGS in Zwei for two reasons:  To get functionality in editing
Lisp code not otherwise present in Zwei, and also for editing code
other than Lisp.  Presumably the DEFSYSTEM mechanism could subsume the
tags functions.  However, people still use Zwei for editing text that
isn't Lisp.

For instance, I used to use Zwei to edit the Logo source code, since
only in Zwei (or Multics EMACS) could I have two copies of the source.
PGS uses Zwei for editing the MINITS when he's working with the
LISPM/PUMA interface.  For these and similar applications, a common
TAGS database accessible by Zwei and EMACS is necessary.

Recently I wanted to search for all references to a certain variable and
alter them.  I could find no way to do this without Tags.  Looking for
all functions which send a certain message is a similar case.  The Zwei
Edit Callers function is not general enough for these occasions.

The Tags mechanism is well tested and understood.  Don't remove it, even
if you provide similar functionality for editing Lisp systems.  (Although
I would hail DEFSYSTEM versions of the various Tags functions.)

Leigh.
 4-Jul-83 16:54:47-EDT,588;000000000000
Return-path: <Millgram@MIT-OZ>
Date: Monday, 4 July 1983, 16:46-EDT
From: Elijah Millgram <Millgram@MIT-OZ>
Subject: TIDBIT (Tags' Imminent Destruction Brings Ire and Trembling)
To: KLOTZ@MIT-OZ, DLW@SCRC-TENEX
Cc: bug-zwei@MIT-OZ, bug-lispm@MIT-OZ
In-reply-to: The message of 4 Jul 83 15:15-EDT from Leigh L. Klotz <KLOTZ>

There are others of us out here who use Tags, and want to keep them.
They're the best way I know to go rooting around lots of code.

                                           --REACT
             (Reactionary Element Against the Clobbering of Tags)
 4-Jul-83 17:10:01-EDT,786;000000000000
Return-path: <DLW%SCRC-TENEX@MIT-MC>
Received: from SCRC-BORZOI by SCRC-TENEX with CHAOS; Mon 4-Jul-83 17:04:10-EDT
Date: Monday, 4 July 1983, 17:03-EDT
From: Daniel L. Weinreb <DLW%SCRC-TENEX@MIT-MC>
To: KLOTZ%MIT-OZ@MIT-MC
Cc: bug-zwei%MIT-OZ@MIT-MC, bug-lispm%MIT-OZ@MIT-MC
In-reply-to: The message of 4 Jul 83 15:15-EDT from Leigh L. Klotz <KLOTZ at MIT-AI>

OK, now I understand.  Well, there isn't really any need to remove the
tags stuff; all that we need to do, in order to satisfy the goals I'd
like to aim for, is to rename Tags Search and friends such that they
refer to a more general concept of a set of files (Set Search, maybe),
and then just say that loading a tags table is one of many ways of
setting up a Set.  So we'll probably do that, at some point.
10-Jul-83 06:15:34-EDT,729;000000000000
Return-path: <KLOTZ@MIT-OZ>
Date: Sunday, 10 July 1983, 06:12-EDT
From: Leigh L. Klotz <KLOTZ@MIT-OZ>
Subject: ^X-A bug, no doubt fixed in some patch which hasn't managed to fly through the air down up vassar street yet
To: BUG-zwei@MIT-OZ

In zwei in Release 4.3, site configuration 28,
Educational Computing Group, on Lisp Machine Twenty:

I did ^X-A (Append to Buffer), and gave a new buffer name.  A few
moments later, I did ^X-B FOO, where the buffer FOO didn't exist,
either.  It left me in the buffer with the appended text in it.

Furthermore, any subsequent ^X-B requests for new buffers return to that
same buffer, and give it a new name.  The lossage goes away if you kill
the wedged buffer.

Leigh.
11-Jul-83 16:05:19-EDT,560;000000000000
Return-path: <MMcM@SCRC-TENEX>
Date: 11 Jul 1983 1542-EDT
From: Mike McMahon <MMcM@SCRC-TENEX>
Subject: Re: ^X-A bug, no doubt fixed in some patch which hasn't managed to fly through the air down up vassar street yet
To: KLOTZ@MIT-OZ
cc: BUG-zwei@MIT-OZ
In-Reply-To: The message of Sunday, 10 July 1983, 06:12-EDT from Leigh L. Klotz <KLOTZ@MIT-OZ>

This sounds like the bug where you get a buffer name shared with the mini-buffer
text.  It has indeed been fixed.  I could not say whether it will appear in
a later release 4 minor release.
-------
25-Jul-83 02:24:25-EDT,673;000000000000
Return-path: <CStacy@MIT-MC>
Date: Monday, 25 July 1983, 02:18-EDT
From: Christopher C. Stacy <CStacy at MIT-MC>
Subject: Dired
To: BUG-ZWEI at OZ
Cc: CStacy at MIT-MC

In ZWEI in Release 4.3, LMFS 30.42, site configuration 33, 
on Lisp Machine Apiary-2:

I just tried to use M-X Flush Lines on a Dired buffer and found out
that Dired buffers are "Read-Only".

This means I am unable to use editor commands to, for example, prune
the display down to the files I want to work with.  Being able to edit
both the presentation and object(s) being presented is one of the most
powerful ideas in EMACS.

How do I get this functionality back when using ZWEI?

 1-Aug-83 01:37:38-EDT,2815;000000000000
Return-path: <Gumby@MIT-EDDIE>
Date: Monday, 1 August 1983, 01:35-EDT
From: David Vinayak Wallace <Gumby at MIT-EDDIE>
Reply-to: Gumby at oz
To: BUG-ZWEI at OZ

In ZWEI, Release 4.0, Experimental Macsyma 6.13, site configuration 12, on Zarniwoop:
(patches are way behind on this machine, so if this has been fixed, sorry).

I typed C-X C-F .new<end> and it bombed.

Also, the cursor in the minibuffer continued to blink, and the one in the
typeout window didn't.  However, typein went to the debugger.

>>Error: Unknown OPEN option.
While in the function (METHOD FS:HOST-UNIT COMMAND)  FS:COMPLETE-CHAOS  (METHOD FS:CHAOS-PATHNAME COMPLETE-STRING)


(METHOD FS:HOST-UNIT COMMAND): (P.C. = 363)
 (SELF = #<HOST-UNIT 26474402>)
 Arg 0 (OPERATION): COMMAND
 Arg 1 (MARK-P): NIL
 Arg 2 (STREAM-OR-HANDLE): NIL
 Arg 3 (SIMPLE-P): NIL
 Arg 4 (WHOSTATE): "Complete"
 Rest arg (COMMANDS): ("COMPLETE" "" "" " NEW-OK" 215 "//usr//gumby//foo.l" 215 ".news" 215)
 Local 1 (HANDLE): NIL
 Local 2 (STREAM): NIL
 Local 3 (PKT): #<CHAOS Packet 3040452>
 Local 4 (SUCCESS): NIL
 Local 5 (STRING): " ERROR UOO C Unknown OPEN option."
 Local 6 (TRANSACTION-ID): "T1803"
 Local 7 (CREATE-P): NIL
 Local 8 (FROM): 1
 Local 9 (CONDITION): NIL
 Local 10: T
 Local 11: (#<CASE-HANDLER 2445450> #<CASE-HANDLER 2427101> #<BIND-HANDLER 2441024> #<BIND-HANDLER 2441024> #<BIND-HANDLER 2441524>)


(METHOD FS:HOST-UNIT COMMAND):  (P.C. = 363)
   (SELF = #<HOST-UNIT 26474402>)
   Arg 0 (OPERATION): COMMAND
   Arg 1 (MARK-P): NIL
   Arg 2 (STREAM-OR-HANDLE): NIL
   Arg 3 (SIMPLE-P): NIL
   Arg 4 (WHOSTATE): "Complete"
   Rest arg (COMMANDS): ("COMPLETE" "" "" " NEW-OK" 215 "//usr//gumby//foo.l" 215 ".news" 215)

FS:COMPLETE-CHAOS:  (P.C. = 237)
   Arg 0 (HOST): #<UNIX-CHAOS-HOST MIT-EDDIE>
   Arg 1 (PATHNAME): #<UNIX-PATHNAME "EDDIE: //usr//gumby//foo.l">
   Arg 2 (STRING): ".news"
   Arg 3 (OPTIONS): (NEW-OK)

(METHOD FS:CHAOS-PATHNAME COMPLETE-STRING):  (P.C. = 41)
   (SELF = #<UNIX-PATHNAME "EDDIE: //usr//gumby//foo.l">)
   Arg 0 (OPERATION): COMPLETE-STRING
   Arg 1 (STRING): ".news"
   Arg 2 (OPTIONS): (NEW-OK)

FS:COMPLETE-PATHNAME:  (P.C. = 144)
   Arg 0 (DEFAULTS): ((#<UNIX-CHAOS-HOST MIT-EDDIE> . #<UNIX-PATHNAME "EDDIE: //usr//gumby//foo.l">) (NIL . #<UNIX-PATHNAME "EDDIE: //usr//gumby//foo.l">))
   Arg 1 (STRING): ".news"
   Arg 2 (TYPE): NIL
   Arg 3 (VERSION): NIL
   Rest arg (OPTIONS): (NEW-OK)

ZWEI:PATHNAME-COMPLETE:  (P.C. = 62)

ZWEI:COM-PATHNAME-COMPLETE-AND-EXIT-IF-UNIQUE:  (P.C. = 43)

ZWEI:COMMAND-EXECUTE:  (P.C. = 100)
   Arg 0 (COMMAND): ZWEI:COM-PATHNAME-COMPLETE-AND-EXIT-IF-UNIQUE
   Arg 1 (CHAR): 224
   Arg 2 (PREFIX-CHAR): NIL
   Arg 3 (HOOK-LIST): NIL

ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 67)
   Arg 0 (CH): 224
 1-Aug-83 02:17:27-EDT,1806;000000000000
Return-path: <Moon@SCRC-TENEX>
Received: from SCRC-BEAGLE by SCRC-TENEX with CHAOS; Mon 1-Aug-83 02:13:49-EDT
Date: Monday, 1 August 1983, 02:12-EDT
From: David A. Moon <Moon@SCRC-TENEX>
Subject: Yes, the file server on EDDIE is broken
To: Gumby@MIT-OZ
Cc: BUG-ZWEI@MIT-OZ
In-reply-to: The message of 1 Aug 83 01:35-EDT from David Vinayak Wallace <Gumby at MIT-EDDIE>

    Date: Monday, 1 August 1983, 01:35-EDT
    From: David Vinayak Wallace <Gumby at MIT-EDDIE>
    In ZWEI, Release 4.0, Experimental Macsyma 6.13, site configuration 12, on Zarniwoop:
    (patches are way behind on this machine, so if this has been fixed, sorry).

    I typed C-X C-F .new<end> and it bombed.

    >>Error: Unknown OPEN option.
    (METHOD FS:HOST-UNIT COMMAND): (P.C. = 363)
     (SELF = #<HOST-UNIT 26474402>)
     Arg 0 (OPERATION): COMMAND
     Arg 1 (MARK-P): NIL
     Arg 2 (STREAM-OR-HANDLE): NIL
     Arg 3 (SIMPLE-P): NIL
     Arg 4 (WHOSTATE): "Complete"
     Rest arg (COMMANDS): ("COMPLETE" "" "" " NEW-OK" 215 "//usr//gumby//foo.l" 215 ".news" 215)
     Local 5 (STRING): " ERROR UOO C Unknown OPEN option."

    FS:COMPLETE-CHAOS:  (P.C. = 237)
       Arg 0 (HOST): #<UNIX-CHAOS-HOST MIT-EDDIE>
       Arg 1 (PATHNAME): #<UNIX-PATHNAME "EDDIE: //usr//gumby//foo.l">
       Arg 2 (STRING): ".news"
       Arg 3 (OPTIONS): (NEW-OK)

This is an illegal reply from the file server to a perfectly legitimate
command.  Note that the "unknown OPEN option" message is somewhat bogus
since the command was COMPLETE, not OPEN.

You really should talk to whoever is in charge of software on that VAX
and get them to install a file server that works.  Probably EDDIE is
running some ancient file server that dates back to the days when
completion wasn't implemented on Unix.
 2-Aug-83 20:11:05-EDT,339;000000000000
Return-path: <JBA@MIT-OZ>
Date: Tuesday, 2 August 1983, 20:02-EDT
From: Jon Amsterdam <JBA@MIT-OZ>
Subject: incorrect documentation for c-X c-F
To: bug-zwei@MIT-OZ
Cc: jba@MIT-OZ

c-X c-F's documentation says its default is based on "the previous filename
read."  In fact, it appears to be based on the currently selected buffer.
 3-Aug-83 18:50:22-EDT,415;000000000000
Return-path: <Zvona@MIT-OZ>
Date: Wednesday, 3 August 1983, 18:47-EDT
From: David Chapman <Zvona@MIT-OZ>
To: BUG-zwei@MIT-OZ

In zwei in System 222.249, Zmail 74.46, site configuration 54, on Lisp Machine Six:

I did m-. on ``meter:analyze'' and it got it and said that there was 1
more definition as well.  m-1 m-. went to shadow:analyze, one of my
functions.  m-1 m-. again said that was all there was.
 3-Aug-83 20:00:34-EDT,400;000000000000
Return-path: <Zvona@MIT-OZ>
Date: Wednesday, 3 August 1983, 19:55-EDT
From: David Chapman <Zvona@MIT-OZ>
To: BUG-zwei@MIT-OZ

In zwei in System 222.249, Zmail 74.46, site configuration 54, on Lisp Machine Six:

here is an instance in which the new doctrine that m-X Compile Changed
Definitions <sp> is not completed to Of Buffer does not work.

m-x c o <sp> d <sp> [feeps] m-b c <sp> <cr>
 4-Aug-83 14:39:46-EDT,685;000000000000
Return-path: <Moon@SCRC-TENEX>
Received: from SCRC-HUSKY by SCRC-TENEX with CHAOS; Thu 4-Aug-83 14:37:09-EDT
Date: Thursday, 4 August 1983, 14:34-EDT
From: David A. Moon <Moon@SCRC-TENEX>
To: David Chapman <Zvona@MIT-OZ>
Cc: BUG-zwei@MIT-OZ
In-reply-to: The message of 3 Aug 83 18:47-EDT from David Chapman <Zvona at MIT-AI>

    Date: Wednesday, 3 August 1983, 18:47-EDT
    From: David Chapman <Zvona@MIT-OZ>
    I did m-. on ``meter:analyze'' and it got it and said that there was 1
    more definition as well.  m-1 m-. went to shadow:analyze, one of my
    functions.  m-1 m-. again said that was all there was.
The m-. command does "package dwim".  It's a feature.
19-Aug-83 13:30:25-EDT,264;000000000000
Return-path: <Zvona@MIT-OZ>
Date: Friday, 19 August 1983, 13:23-EDT
From: David Chapman <Zvona@MIT-OZ>
To: BUG-zwei@MIT-OZ

In zwei in Release 4.4, FEP 12, site configuration 68, on Lisp Machine Elvis Presley:

<help> should not barf in com-documentation.
20-Aug-83 13:55:21-EDT,698;000000000000
Return-path: <JWALKER@SCRC-TENEX>
Date: 20 Aug 1983 13:47-EDT
Sender: JWALKER@SCRC-TENEX
From: Jan Walker <JWALKER@SCRC-TENEX>
To: Zvona@MIT-OZ
Cc: BUG-zwei@MIT-OZ
Message-ID: <[SCRC-TENEX]20-Aug-83 13:47:26.JWALKER>
In-Reply-To: The message of Friday, 19 August 1983, 13:23-EDT from David Chapman <Zvona@MIT-OZ>

	
    Date: Friday, 19 August 1983, 13:23-EDT
    From: David Chapman <Zvona@MIT-OZ>
    In zwei in Release 4.4, FEP 12, site configuration 68, on Lisp Machine Elvis Presley:
    
    <help> should not barf in com-documentation.
              --------------------
		
Fixed in the source and patched into 242.  It didn't barf
by the way, it beeped.  Not synonymous.
20-Aug-83 18:20:26-EDT,1015;000000000000
Return-path: <CSTACY@MIT-MC>
Date: 20 August 1983 18:15 EDT
From: Christopher C. Stacy <CSTACY @ MIT-MC>
To: JWALKER @ SCRC-TENEX
cc: Zvona @ MIT-OZ, BUG-Zwei @ MIT-OZ
In-reply-to: Msg of 20 Aug 1983 13:47-EDT from Jan Walker <JWALKER at SCRC-TENEX>

    Date: 20 Aug 1983 13:47-EDT
    From: Jan Walker <JWALKER at SCRC-TENEX>
    Sender: JWALKER at SCRC-TENEX
    To:   Zvona at MIT-OZ
    cc:   BUG-zwei at MIT-OZ

    	
        Date: Friday, 19 August 1983, 13:23-EDT
        From: David Chapman <Zvona@MIT-OZ>
        In zwei in Release 4.4, FEP 12, site configuration 68, 
        on Lisp Machine Elvis Presley:
        
        <help> should not barf in com-documentation.
                  --------------------
    		
    Fixed in the source and patched into 242.  It didn't barf
    by the way, it beeped.  Not synonymous.


"Barf" ==> "complained".  I think they are synonyms.
Also, the function which makes it beep (and sometimes print an error
message) is called ZWEI:BARF.
21-Aug-83 14:42:31-EDT,643;000000000000
Return-path: <Fleck@MIT-OZ>
Date: Sunday, 21 August 1983, 14:38-EDT
From: zvona@MIT-OZ
Sender: Fleck@MIT-OZ
Subject: c-x c-v doesn't hack major mode from extension
To: BUG-zwei@MIT-OZ

In zwei in Release 4.3, LMFS 30.42, Experimental TimeKit 7.0,
Experimental Music 2.0, Experimental Pitch 4.0,
Experimental Enharm-Pitch 2.0, Experimental Harmony 2.0,
Experimental Staffs 2.0, Experimental Chroma 2.0, Experimental Play 26.0,
Experimental Compose 13.0, site configuration 33, Music 2.0, on Lisp Machine Four:

do c-x b gruddle c-cr c-x x-v probbix.lisp.  The buffer stays in 
fundamental mode, rather than going into lisp mode.
22-Aug-83 15:14:13-EDT,708;000000000000
Return-path: <MMcM@SCRC-TENEX>
Received: from SCRC-COLLIE by SCRC-TENEX with CHAOS; Mon 22-Aug-83 14:36:24-EDT
Date: Mon, 22 Aug 83 14:41 EDT
From: Mike McMahon <MMcM@SCRC-TENEX>
Subject: c-x c-v doesn't hack major mode from extension
To: zvona@MIT-OZ
Cc: BUG-zwei@MIT-OZ
In-reply-to: The message of 21 Aug 83 14:38-EDT from zvona at OZ
Message-ID: <830822144134.2.MMcM@SCRC.SCRC>

    Date: Sunday, 21 August 1983, 14:38-EDT
    From: zvona@MIT-OZ
    In zwei in Release 4.3, ...
    do c-x b gruddle c-cr c-x x-v probbix.lisp.  The buffer stays in 
    fundamental mode, rather than going into lisp mode.
That's a (mis)feature in rel 4.  The c-X c-V command is overloaded.  Fixed in rel 5.
23-Aug-83 14:05:46-EDT,365;000000000000
Return-path: <PGS@MIT-OZ>
Date: Tuesday, 23 August 1983, 13:30-EDT
From: Patrick Sobalvarro <PGS@MIT-OZ>
To: BUG-ZWEI@MIT-OZ

In ZWEI in MIT-Specific 19.5, System 94.41, ZMail 50.17, microcode 239,
uC239, on Lisp Machine Five:

C-Q h gives "invalid quantity operation."  I wanted to do C-Q h to insert the
char without causing filling while in fill mode.
28-Aug-83 19:43:39-EDT,1304;000000000000
Return-path: <Gumby@MIT-OZ>
Date: Sunday, 28 August 1983, 19:37-EDT
From: David Vinayak Wallace <Gumby@MIT-OZ>
Subject: DIRED bugs
To: BUG-zwei@MIT-OZ

In zwei in Release 4.4, FEP 12, site configuration 74, on Lisp Machine Jimi Hendrix:

1> If you "R"ename a file to a new directory, it does not get removed from
the display.

2> If you rename the first part of a filename to something new, the new
name is not in the right place.  I.e. if the directory list is:

      FOO.BAR.1   10  25096(7)         08/11/83 02:32:30           
>     FOP.BAR.1   1    414(36)        08/02/82 06:41:38 (07/30/83)
      FOQ.BAR.1   47 120292(7)    !   08/28/83 19:07:25           

And you R FOP.BAR to be FOM.BAR the display becomes 

      FOO.BAR.1   10  25096(7)         08/11/83 02:32:30           
>     FOM.BAR.1   1    414(36)        08/02/82 06:41:38 (07/30/83)
      FOQ.BAR.1   47 120292(7)    !   08/28/83 19:07:25           

Instead of

>     FOM.BAR.1   1    414(36)        08/02/82 06:41:38 (07/30/83)
      FOO.BAR.1   10  25096(7)         08/11/83 02:32:30           
      FOQ.BAR.1   47 120292(7)    !   08/28/83 19:07:25           


3> There should be a M (move) like the ITS :MOVE command so you can
copy&delete a file across structures or filesystems. 

david
16-Sep-83 11:41:05-EDT,1276;000000000000
Return-path: <PHILIP@MIT-OZ>
Date: Friday, 16 September 1983, 11:38-EDT
From: Philippe Brou <PHILIP@MIT-OZ>
Subject: Fonts
To: BUG-ZWEI@MIT-OZ, TLP@MIT-OZ, WELG@MIT-OZ, TERZOP@MIT-OZ

In ZWEI in System 222.252, site configuration 75, on Lisp Machine Robot-3:

Many people in the vision group use files with Multiple fonts.
Over the last year, RMS has modified many CADR functions to make 
fonts transparent to ZWEI. Since there are now a few 3600's
available on the 3rd floor, we have started converting our code
but, as expected, we encountering fonts bug that were present
in both systems 9 months ago.

The problems are:

a) The mouse does not recognize functions names
   when in a different font (Meta-.)
b) ZWEI can't find the function definition when
   the function name is not in the standard font 
   (again in M-.). It keeps asking for a file name.
c) [I haven't checked this myself but was told about
   it] Files with multiple fonts don't compile
   properly (the font data is used as part of the
   variables).


Other related problems may also arise but i 
can't remember them.

A large amount of time has been spent in the
creation of multiple font files and we would
like to keep using them if possible.

Thanks,
Philippe
19-Sep-83 22:55:52-EDT,516;000000000000
Return-path: <Zvona@MIT-OZ>
Date: Monday, 19 September 1983, 22:55-EDT
From: David Chapman <Zvona@MIT-OZ>
Subject: performance suggestion
To: BUG-zwei@MIT-OZ

In zwei in Release 4.5, site configuration 62, on Lisp Machine John Lennon:

m-X Compile Changed Definitions when I have 30 buffers is really slow.
It pages like crazy; presumably it is mapping across every node of every
buffer.  What about caching per buffer information about whether there
is any node in that buffer that needs recompilation?
20-Sep-83 11:28:59-EDT,637;000000000000
Return-path: <ALR@MIT-OZ>
Date: Tuesday, 20 September 1983, 11:37-EDT
From: Andrew L. Ressler <ALR@MIT-OZ>
To: BUG-ZWEI@MIT-OZ

In ZWEI in Experimental System 97.4, CADR 1.0, Experimental ZMail 51.2,
MIT-Specific 21.0, microcode 257, ZM MIT, on Lisp Machine Two:

If the current file in the buffer is a text file and I ask for another file
with ctrl-x ctrl-f the default is something like
file-name.text

However it doesn't really default to text which is a loss!  If I then type in just the first
file-name for another text file it only trys to read a lisp file and gives me
an new file in the buffer of file-name.lisp

20-Sep-83 13:03:10-EDT,862;000000000000
Return-path: <ALR@MIT-OZ>
Date: Tuesday, 20 September 1983, 13:12-EDT
From: Andrew L. Ressler <ALR@MIT-OZ>
Subject: Cursor Position after checking spelling.
To: BUG-ZWEI@MIT-OZ

In ZWEI in System 97.6, CADR 1.0, ZMail 51.2, MIT-Specific 21.0,
microcode 257, ZM MIT, on Lisp Machine Two:

While editing text I had my cursor on a word.  I then typed meta-$ to check the spelling.
It was wrong so I choose the correct option.  It then asked me if I wanted to do
a query replace on the rest of the buffer.  I answered yes.  It did not find any other
occurrences.  Unfortunately, it left the cursor at the top of the buffer now.
I think in this case it should leave the cursor where it originally was when
I called the command.  In fact, even if it had found other occurences it would be nice
for the cursor to end up back where it started.

Andrew
22-Sep-83 12:09:08-EDT,760;000000000000
Return-path: <Bagley@MIT-OZ>
Date: Thursday, 22 September 1983, 11:51-EDT
From: Steven C. Bagley <Bagley@MIT-OZ>
Subject: function not getting recompiled.
To: BUG-zwei@MIT-OZ

In zwei in Release 4.5, site configuration 62, on Lisp Machine Robot-3:

With a function in a buffer, compile it with C-Sh-C.  Then edit one of
the lines of the function, put just that line in the region, and compile
the region.  (This is a reasonable thing to want to do, if that line
sets a global variable and you don't want to have to execute the entire
function again).  Then type M-X Compile Changed Definitions of Buffer.
It won't recompile the function.  This is a wrong, since the function as
a whole has not been recompiled.  Or is this some kind of feature?
23-Sep-83 12:26:25-EDT,378;000000000000
Return-path: <pgs@MIT-OZ>
Date: Friday, 23 September 1983, 11:55-EDT
From: Patrick Sobalvarro <pgs@MIT-OZ>
To: BUG-ZWEI@MIT-OZ

In ZWEI in System 97.6, CADR 1.0, ZMail 51.2, MIT-Specific 21.0,
microcode 257, ZM MIT, on Lisp Machine Thirty-one:

C-Q Shift-e (and lots of other chars) cause a feep and "Invalid quantity error"
to be printed at the bottom of the screen.
24-Sep-83 21:47:22-EDT,447;000000000000
Date: Saturday, 24 September 1983, 21:48-EDT
From: David Vinayak Wallace <Gumby at MIT-OZ>
To: BUG-ZWEI at MIT-OZ

In ZWEI in Release 4.5, site configuration 62, on Lisp Machine Jim
Morrison: 

Is there some way to have the lispm ask for confirmation when
overwriting and existing file on a filesystem with version numbers?
That is, if I ^X^W FOO.BAR.1 and there is already a FOO.BAR.1 it should
prompt and say "Overwrite?  (Y or N)." 
26-Sep-83 12:24:18-EDT,691;000000000000
Date: Monday, 26 September 1983, 12:24-EDT
From: Andrew L. Ressler <ALR at MIT-OZ>
To: BUG-ZWEI at MIT-OZ

In ZWEI in Bad Inconsistently updated System 97.8, CADR 1.0, ZMail 51.2,
MIT-Specific 21.0, microcode 257, ZM MIT, on Lisp Machine Two:

When using ctrl-x ctrl-f to find a file:
In my directory I had the following.
src:<alr>failure-rules.lisp
src:<alr>failure-rules.fasl

I typed 
src:<alr>fa

to the mini buffer and the asked for completion.  It completed the name correctly, but
then seems to add the default type to the filename.

If the current buffer has the file ps:<alr>foo.bar

the filename would have completed to

src:<alr>failure-rules.bar

Andrew
27-Sep-83 11:37:58-EDT,243;000000000000
Date: Tuesday, 27 September 1983, 11:38-EDT
From: David Chapman <Zvona at MIT-OZ>
To: BUG-Zwei at MIT-OZ

In Release 4.5, site configuration 62, on Lisp Machine Janis Joplin:

Iwbni m-X Evaluate Into Buffer and friends looked at PRIN1.
 6-Oct-83 12:08:10-EDT,1464;000000000000
Date: Thursday, 6 October 1983, 12:09-EDT
From: Andrew L. Ressler <ALR at MIT-OZ>
Subject: Suggestions for Fill Mode.
To: BUG-ZWEI at MIT-OZ

In ZWEI in System 97.12, CADR 1.0, ZMail 51.2, MIT-Specific 21.0,
microcode 257, ZM MIT, on Lisp Machine Two:

The following are some behaviors that don't seem obvious.

When using auto-fill mode for text;  Assume you are typing at the end of a line that
is in the middle of a paragraph.
For instance, let's say the cursor was at the end of the previous line.
When you type past the fill mark and it brings the cursor to the next line, the line
that the cursor is now on still contains what was previously there.  This is annoying,
since you are now typing with the cursor right in front of the lines text.
It would be more appropriate to insert a carraige return after the cursor so that it
was starting on a line that only contained the text that was moved from the end of the
line you were orignally typing on.  If this is not clear, I will be glad to show someone
what I mean.

When typing in a small paragraph at the top of the screen, I typed a meta-Q.  Part of the
paragraph was above what was showing.  After justifying the paragraph it recentered the text
so that I was now in the middle of the screen.  I can understand that it wants to show the
whole paragraph that is justified, but the gross screen movement was not necessary since only
a couple lines were off the screen.

Andrew
 8-Oct-83 04:27:45-EDT,2279;000000000000
Date: Saturday, 8 October 1983, 04:26-EDT
From: Tim McNerney <TIM at MIT-OZ>
Subject: Wanted:  Documentation about Interfacing to Zwei AND A Winning Structure Editor
To: MMcM at SCRC-TENEX
Cc: Bug-Zwei at MIT-OZ, Tim at MIT-OZ
Fonts: CPTFONTB

There is a lack of documentation:

Zwei is just what the world needs:  a "language" for writing editors in (substitute "system" for
"language" if you prefer).  The problem is, as you probably already know, is that there is no
nationally advertised set of conventions for simply extending Zmacs or for building some new
special-purpose display-oriented frobboz.  I am particularly interested in revolutionary new
display frobs, specifically in the area of debugging tools.  

So I pose the question:

How long will it be before the deep dark inner secrets of Zwei become "official"?  We really
can't keep on guessing about the "right" way to interface to Zwei.  Some of MIT's best wizards
have failed in their valiant attempts to use Zwei for relatively straightforward applications.
Looking at the sources (while constantly fearing that things will change in the next release) is
not the right thing.  Besides, if (God forbid!) you should ever decide that your customers don't
really need to have the sources at their site, then they would be completely screwed.  They
would have a customizable, extensible... undocumented... er... un-customizable, un-extensible,
display editor!  And the world doesn't need just another display editor.


The world could really use a Zwei-based structure editor.

It seems so close, yet so far away.  The current concept of a structure editor (a la Interlisp,
for example) could be vastly improved upon by keeping text (in upper and/or lower case,
different fonts, comments, etc.) IN PARALLEL with the Lisp object being edited.  Updating of the
Lisp object could be delayed if the text were to specify some impossible state, but conversely,
if the Lisp object were changed, the text would be updated immediately.  In a sense, the Lisp
object would be "wired" to the screen.

What do you think?  C'est reasonable?  C'est in ze works?  C'est no, I'll write one, if you tell
me how to really win with Zwei.


P.S.  Are people safe investing in British Petroleum?
14-Oct-83 10:25:19-EDT,483;000000000000
Date: Friday, 14 October 1983, 06:18-EDT
From: Richard Mlynarik <Mly at MIT-OZ>
Subject: mail 7-bit lossage
To: BUG-zwei at MIT-mc

System 97.18, ZMail 51.6.

I typed: 
  (system help) in a zmail edit buffer
The text received:
 (greater-or-equal epsilon)

The Wonderful World of Mail is lopping off 12% of the
information in my buffer without telling me!!
Zmail should warn "This text has some non-7-bit-ascii
characters. You will lose!" before sending such text
18-Oct-83 16:02:15-EDT,567;000000000000
Date: Tuesday, 18 October 1983, 16:02-EDT
From: Henry Lieberman <Henry at MIT-OZ>
Subject: How beginners interpret error messages
To: Bug-Emacs at MIT-OZ, Bug-Zwei at MIT-OZ


I thought you might be amused by this:

I recently introduced a beginner to Emacs. She accidentally
typed two escapes before trying to find a file with C-F C-X
and got the error message "Not top level -- can't hack files".
She thought that the computer was insulting her, telling her
that she wasn't a top notch hacker, and therefore wasn't 
good enough to be hacking files.

18-Oct-83 16:33:22-EDT,592;000000000000
Date:  Tuesday, 18 October 1983 16:24 edt
From:  "Barry Margolin"@MIT-MULTICS.ARPA
Subject:  Re: How beginners interpret error messages
To:  Henry Lieberman <Henry%MIT-OZ@MIT-MC.ARPA>
cc:  Bug-Emacs%MIT-OZ@MIT-MC.ARPA, Bug-Zwei%MIT-OZ@MIT-MC.ARPA
In-Reply-To:  Message of 18 October 1983 16:02 edt from "Henry Lieberman"
Message-ID:  <831018202442.970098@MIT-MULTICS.ARPA>

I don't think that this was necessarily her fault.  It just goes to show
the value of talking to the user in complete sentences.  Of course,
short error messages are better than numeric or coded ones (NIB).
19-Oct-83 20:50:31-EDT,1303;000000000000
Date: Wednesday, 19 October 1983, 20:50-EDT
From: Tim McNerney <TIM at MIT-OZ>
Subject: ZWEI's scroll bar is driving me nuts!
To: BUG-ZWEI at MIT-OZ
Cc: BUG-3600-SOFTWARE at MIT-OZ

In ZWEI in Release 4.5, site configuration 57, on Lisp Machine Apiary-8:

My absolutely greatest annoyance with ZWEI stems from having the scroll bar on
the left side of the screen--right next to column one!  This is one of the most
frequently pointed-at columns on the entire screen (expecially in Dired), and I
am constanly running into it unintentionally.  Could you please implement one
of the following as soon as you possibly can:

  1) Provide a command for turning the scroll bar off entirely, thus making it
     impossible to "enter."

  2) Provide an option for having the scroll bar on the right.

  3) Keep the scroll bar on the left, but make it explicit (a la Brand X) with
     some width> and as little hysteresis as possible, then move column one
     a short distance away, providing for small "margin of safety."

If you all don't have time to implement 2 or 3, please implement number 1 as an
interim solution.  Now that you have all this added screen width, perhaps you
can improve the ergonomics of the 3600 and make better use of it.

				Thanks, 

				Tim McNerney
20-Oct-83 02:49:27-EDT,516;000000000000
Date: Thursday, 20 October 1983, 02:49-EDT
From: David Vinayak Wallace <Gumby at MIT-OZ>
Subject: Fill Long Comment.
To: BUG-zwei at MIT-OZ

In zwei in Release 4.5, site configuration 62, on Lisp Machine Jimi Hendrix:

Could M-X Fill Long Comment be fixed to act more like M-Q?
Specifically, if I have a set of comments delineated by whilespace, it
should treat the whitespace like a paragraph break, and only
comment-fill the "paragraph" I'm editing.  I could get the old behaviour
by marking a region.
20-Oct-83 07:50:45-EDT,465;000000000000
Date: Thursday, 20 October 1983, 07:50-EDT
From: David Vinayak Wallace <Gumby at MIT-OZ>
Subject: fundamental mode
To: BUG-zwei at MIT-OZ

In Release 4.5, site configuration 62, on Lisp Machine Jimi Hendrix:

Is there any way to have *Buffer-1* come up in lisp mode?  I often
select it to leave myself notes or pieces of code, and am screwed (well,
confused) by fundamental mode.  It seems like a silly thing to have by
default on a Lisp machine anyway.
30-Oct-83 00:53:24-EDT,776;000000000000
Date: Sunday, 30 October 1983, 00:13-EDT
From: Christopher C. Stacy <CStacy at MIT-MC>
Subject: Set fill column in Buffer (Bug), Mode (Text), or Globally?
To: BUG-ZWEI at MIT-AI

In ZWEI in Release 5.0 [GC'd Beta Test rev 2], on Lisp Machine Keith Moon (3600):

When I use C-X F in ZMACS to set the fill column, I get asked this
silly question about WHERE I want it set.  If I understand what it is
asking, I like the functionality.  But now you have changed the
well-known command into something whose behaviour is different and
just a little too intrusive.  It takes a third keystroke which I have
not been conditioned to provide.  This is an incompatible change to
the EMACS command set which all the users are used to.
I am not all sure how you fix this.

30-Oct-83 12:48:13-EST,802;000000000000
Date:  Sunday, 30 October 1983 12:43 est
From:  "Barry Margolin"@MIT-MULTICS.ARPA
Subject:  Re: Set fill column in Buffer (Bug), Mode (Text), or Globally?
To:  Christopher C. Stacy <CStacy@MIT-MC.ARPA>
cc:  BUG-ZWEI@MIT-OZ.ARPA
In-Reply-To:  Message of 29 October 1983 23:13 est from "Christopher C. Stacy"
Message-ID:  <831030174329.635476@MIT-MULTICS.ARPA>

I would suggest that there be an option variable which the user can set
to specify the default action, and that the default be :ASK (the new
behavior) for the benefit of new ZMACS users.  Unfortunately, I can't
then think of a way for the user to override the default, since ^XF
already uses its numeric argument (maybe a negative numarg means set it
to the absolute value and ask the question - that is pretty gross,
though).
 4-Nov-83 17:30:39-EST,403;000000000000
Date: Friday, 4 November 1983, 17:32-EST
From: Jonathan Taft <TAFT at MIT-MC>
Subject: Edit Tab Stops & Two Window Mode
To: BUG-ZWEI at MIT-AI

In ZWEI in Release 5.0 [GC'd Beta Test rev 2], FEP 16, on Lisp Machine Keith Moon (3600):

(This is an old bug true in previous software versions as well.)

For a good time try:

  C-X 2			; Get two window mode
  M-X Edit Tab Stops	; Bye, bye.

 5-Nov-83 19:24:39-EST,342;000000000000
Date: Saturday, 5 November 1983, 19:26-EST
From: David Vinayak Wallace <GUMBY at MIT-OZ>
Subject: not modified?
To: BUG-zwei at MIT-OZ

In zwei in Release 5.0 [GC'd Beta Test rev 2], on Lisp Machine Jimi Hendrix (3600):

If I do M-X Not Modified to a buffer, it types back "not modified," but
the buffer is still marked as modified.
 6-Nov-83 17:30:10-EST,433;000000000000
Date: Sunday, 6 November 1983, 17:33-EST
From: David Vinayak Wallace <GUMBY at MIT-OZ>
Subject: grinding of "@"?
To: BUG-zwei at MIT-OZ

In zwei in Release 5.0 [GC'd Beta Test rev 2], on Lisp Machine Janis Joplin (3600):

Why does having an embedded @ in the name make defun grind differently?

(defun foo ()
  bar)

(defun @ ()
       bar)

(defun -@ ()
  bar)

(defun @- ()
  bar)

(defun -@- ()
       bar)
 6-Nov-83 18:24:55-EST,501;000000000000
Date: 6 November 1983 18:25 EST
From: Kent M. Pitman <KMP @ MIT-MC>
Sender: KMP0 @ MIT-MC
Subject:  ,@
To: gumby @ MIT-OZ
cc: BUG-ZWEI @ MIT-MC

Ran across your @-syntax query to bug-zwei in someone else's
mailbox. As I understand it,...
Due to deficiencies in ZWEI's Lisp syntax understanding,
(in order to support ,@) the @ char has '-like list syntax,
making it a break character. So m-. will never find 
functions named foo@bar and (defun foo@bar () ...)
will never grind correctly.
 7-Nov-83 11:29:07-EST,422;000000000000
Date: Monday, 7 November 1983, 11:31-EST
From: David Vinayak Wallace <GUMBY at MIT-OZ>
Subject: Set package in 5.0
To: BUG-zwei at MIT-OZ

In zwei in Release 5.0 [GC'd Beta Test rev 2], on Lisp Machine Janis Joplin (3600):

I did M-X set package and typed "foo" to the prompt What Package?.  It
accepted the name as a lowercase string and created the package "foo".
It should have created a package named "FOO".
 9-Nov-83 10:01:55-EST,2732;000000000000
Date: Wednesday, 9 November 1983, 10:04-EST
From: Elijah Millgram <Millgram at MIT-OZ>
Subject: editor mail bug
To: BUG-ZMACS at MIT-OZ

In Release 4.5, site configuration 57, on Lisp Machine Apiary-5:

Did C-X M to send mail in the editor.
Minibuffer requested a subject, but I wanted to go back
and edit the text.  Selected the Mail window, got
the cursor in the right place; but this happened:

Abort doesn't seem to get out of this one.

>>Error: The argument ARRAY to ARRAY-ACTIVE-LENGTH, NIL, was of the wrong type.
The function expected an array.
While in the function ARRAY-ACTIVE-LENGTH  (METHOD TV:SHEET COMPUTE-MOTION)  ZWEI:PUT-POINT-AT-PLINE

ARRAY-ACTIVE-LENGTH:  (P.C. = 7)
   Arg 0 (ARRAY): NIL
   Local 1 (TEM): NIL

(METHOD TV:SHEET COMPUTE-MOTION):  (P.C. = 107)
   Arg 0 (SELF): #<ZMACS-WINDOW-PANE Zmacs Window Pane 1 3001252 exposed>
   Arg 1 (SELF-MAPPING-TABLE): TV:SHEET
   Arg 2 (OPERATION): COMPUTE-MOTION
   Arg 3 (STRING): NIL
   Arg 4 (START): 0
   Arg 5 (END): NIL
   Arg 6 (X): 0
   Arg 7 (Y): 0
   Arg 8 (CR-AT-END-P): T
   Arg 9 (STOP-X): 0
   Arg 10 (STOP-Y): 4194303
   Arg 11 (BOTTOM-LIMIT): 4194303
   Arg 12 (RIGHT-LIMIT): NIL
   Arg 13 (ACCOUNT-FOR-CONTINUATION-AFTER): NIL

ZWEI:PUT-POINT-AT-PLINE:  (P.C. = 51)
   Arg 0 (SHEET): #<ZMACS-WINDOW-PANE Zmacs Window Pane 1 3001252 exposed>
   Arg 1 (POINT-LINE): "Lije"
   Arg 2 (POINT-INDEX): 4
   Arg 3 (POINT-PLINE): 24
   Arg 4 (FIRST-BP): ("@comment(-*- MODE:SCRIBE -*-)" 0 NORMAL)
   Arg 5 (LAST-BP): ("     (OTHERWISE (COMPLAIN (AN UNRECOGNIZED-MESSAGE)))))" 55 MOVES)

ZWEI:RECENTER-WINDOW:  (P.C. = 303)
   Arg 0 (WINDOW): #<WINDOW 52456655>
   Arg 1 (RECENTER-TYPE): ABSOLUTE
   Arg 2 (RC1): NIL
   Arg 3 (RC2): NIL

ZWEI:REDISPLAY:  (P.C. = 254)
   Arg 0 (WINDOW): #<WINDOW 52456655>
   --Defaulted args:--
   Arg 1 (RECENTER-TYPE): ABSOLUTE
   Arg 2 (RC1): NIL
   Arg 3 (RC2): NIL
   Arg 4 (FORCE-TO-COMPLETION-P): NIL

ZWEI:REDISPLAY-ALL-WINDOWS:  (P.C. = 36)
   --Defaulted args:--
   Arg 0 (FORCE-TO-COMPLETION-P): NIL
   Arg 1 (SELECT-P): T

(METHOD ZWEI:EDITOR EDIT):  (P.C. = 122)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 53421127>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:EDITOR -- 11. IV's, 0. FL's 61300021>
   Arg 2 (OPERATION): EDIT
   --Defaulted args:--
   Arg 3 (TOP-LEVEL-P): T

(METHOD ZWEI:TOP-LEVEL-EDITOR COMBINED EDIT):  (P.C. = 42)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 53421127>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:TOP-LEVEL-EDITOR -- 13. IV's, 1. FL's 61300005>
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

Rest of stack:
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)
SI:PROCESS-TOP-LEVEL:  (P.C. = 54)
 9-Nov-83 10:15:37-EST,654;000000000000
Date: Wednesday, 9 November 1983, 10:18-EST
From: Elijah Millgram <Millgram at MIT-OZ>
Subject: mail fragility screws all
To: bug-zmacs at MIT-OZ
Cc: bug-zmail at MIT-OZ

I did control-X M to send mail in the editor,
got prompted for a subject when I tried to send,
tried to go back and edit the text, and got wedged.
REALLY wedged.  I couldn't get the ZMAIL main window,
couldn't get menus in PEEK, couldn't get into any of my
ZMACS buffers... 

1)  The system should allow you to go back and modify your
text.

2)  It shouldn't break when you try to do it.

3)  Breakage should be repairable -- i.e., it shouldn't break
EVERYTHING.
10-Nov-83 22:10:07-EST,361;000000000000
Date: Thursday, 10 November 1983, 23:16-EST
From: Carl Hewitt <HEWITT at MIT-OZ>
Subject: bug in M-X copy file in Release 5.0
To: BUG-ZWEI at MIT-OZ

In ZWEI in Release 5.0 [GC'd Beta Test rev 3], dusty plum, on Lisp Machine Apiary-7 (3600):

Meta-X copy file failed to copy a file from OZ to a LMFS because ESTIMATED-LENGTH is not a
kown OPEN option.
11-Nov-83 16:07:51-EST,888;000000000000
Received: from SCRC-ASSABET by SCRC-QUABBIN with CHAOS; Fri 11-Nov-83 16:07:06-EST
Date: Fri, 11 Nov 83 16:05 EST
From: "David A. Moon" <Moon%SCRC-TENEX@MIT-MC.ARPA>
Subject: Set package in 5.0
To: David Vinayak Wallace <GUMBY@MIT-OZ.ARPA>
Cc: BUG-zwei@MIT-OZ.ARPA, software-maintenance%SCRC-TENEX@MIT-MC.ARPA
In-reply-to: The message of 7 Nov 83 11:31-EST from David Vinayak Wallace <GUMBY at MIT-OZ>

    Date: Monday, 7 November 1983, 11:31-EST
    From: David Vinayak Wallace <GUMBY at MIT-OZ>
    In zwei in Release 5.0 [GC'd Beta Test rev 2], on Lisp Machine Janis Joplin (3600):

    I did M-X set package and typed "foo" to the prompt What Package?.  It
    accepted the name as a lowercase string and created the package "foo".
    It should have created a package named "FOO".

Fixed in the source (ZWEI:READ-PACKAGE-FROM-MINI-BUFFER).  Should this be patched?
11-Nov-83 18:44:34-EST,1092;000000000000
Received: from SCRC-HARLEM by SCRC-QUABBIN with CHAOS; Fri 11-Nov-83 18:43:52-EST
Date: Fri, 11 Nov 83 18:41 EST
From: Philip Greenspun <philg%SCRC-VIXEN@MIT-MC.ARPA>
Subject: Set package in 5.0
To: "David A. Moon" <Moon%SCRC-TENEX@MIT-MC.ARPA>
Cc: David Vinayak Wallace <GUMBY@MIT-OZ.ARPA>, BUG-zwei@MIT-OZ.ARPA,
    software-maintenance%SCRC-TENEX@MIT-MC.ARPA,
    philg%SCRC-VIXEN@MIT-MC.ARPA
In-reply-to: The message of 11 Nov 83 16:05-EST from David A. Moon <Moon at SCRC-TENEX>

    Date: Friday, 11 November 1983, 16:05-EST
    From: David A. Moon <Moon at SCRC-TENEX>
	Date: Monday, 7 November 1983, 11:31-EST
	From: David Vinayak Wallace <GUMBY at MIT-OZ>
	In zwei in Release 5.0 [GC'd Beta Test rev 2], on Lisp Machine Janis Joplin (3600):

	I did M-X set package and typed "foo" to the prompt What Package?.  It
	accepted the name as a lowercase string and created the package "foo".
	It should have created a package named "FOO".

    Fixed in the source (ZWEI:READ-PACKAGE-FROM-MINI-BUFFER).  Should this be patched?

I think so.  Consistency is a virtue.
12-Nov-83 01:20:21-EST,708;000000000000
Date: Sat, 12 Nov 83 01:07 EST
From: "Robert W. Kerns" <RWK%SCRC-YUKON@MIT-MC.ARPA>
Subject: bug in M-X copy file in Release 5.0
To: Carl Hewitt <HEWITT@MIT-OZ.ARPA>
Cc: BUG-ZWEI@MIT-OZ.ARPA
In-reply-to: The message of 10 Nov 83 23:16-EST from Carl Hewitt <HEWITT at MIT-OZ>
Message-ID: <831112010721.1.RWK@YUKON.SCRC.Symbolics>

    Date: Thursday, 10 November 1983, 23:16-EST
    From: Carl Hewitt <HEWITT at MIT-OZ>
    In ZWEI in Release 5.0 [GC'd Beta Test rev 3], dusty plum, on Lisp Machine Apiary-7 (3600):

    Meta-X copy file failed to copy a file from OZ to a LMFS because ESTIMATED-LENGTH is not a
    kown OPEN option.
The LMFS must have been running on a Rel 4.5 system, right?
16-Nov-83 23:07:29-EST,470;000000000000
Date: Wednesday, 16 November 1983, 23:02-EST
From: Tim McNerney <TIM at MIT-OZ>
Subject: One can STILL "select" minibuffer with mouse!!! (broken in Rel 4.5 too)
To: BUG-BETA-TEST at MIT-OZ, BUG-ZWEI at MIT-OZ

In ZWEI in Release 5.0 [GC'd Beta Test rev 3], dusty plum, on Lisp Machine Apiary-5 (3600):

If one clicks Left in the minibuffer, a flashing cursor appears, and the buffer cursor
becomes solid.  Cannot be reversed by clicking on the buffer's window.
18-Nov-83 01:56:45-EST,688;000000000000
Received: from MIT-APIARY-5 by MIT-OZ via Chaosnet; 18 Nov 83 01:56-EST
Date: Friday, 18 November 1983, 01:58-EST
From: Tim McNerney <TIM at MIT-OZ>
Subject: Flashy scrolling flushes typeout when it shouldn't
To: BUG-ZWEI at MIT-OZ

In ZWEI in Release 5.0 [GC'd Beta Test rev 3], dusty plum, on Lisp Machine Apiary-5 (3600):

It is entirely reasonable to flush typeout when one scrolls the window with the mouse in
one window mode (default).  However, in two window mode when one scrolls the window that
the typeout window is NOT obscuring (intentionally, or by accidentally bumping the mouse
into the flashy scrolling region), the typeout window really shouldn't be flushed.
21-Nov-83 14:41:17-EST,485;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 21 Nov 83 14:38-EST
Received: from MIT-APIARY-5 by MIT-OZ via Chaosnet; 21 Nov 83 14:14-EST
Date: Monday, 21 November 1983, 14:15-EST
From: Elijah Millgram <MILLGRAM%MIT-OZ@MIT-MC.ARPA>
Subject: hardcopy
To: BUG-ZWEI at SCRC|DM

In ZWEI in Release 5.0 [GC'd Beta Test rev 3], dusty plum, on Lisp Machine Apiary-5 (3600):

clicking on HARDCOPY got me an error complaint, a very
uninformative one (in fact, that's all it said).
22-Nov-83 16:05:12-EST,630;000000000000
Received: from MIT-APIARY-8 by MIT-OZ via Chaosnet; 22 Nov 83 16:03-EST
Date: Tuesday, 22 November 1983, 16:04-EST
From: Henry Lieberman <Henry at MIT-OZ>
Subject: aa bug
To: BUG-Zwei at MIT-OZ

In Zwei in Release 5.0 [GC'd Beta Test rev 3], dusty plum, on Lisp Machine Apiary-8 (3600):

I noticed the following code in Zmacs.Lisp:

(DEFUN INITIALIZE-ZMACS-IF-NECESSARY (&AUX INTERVAL WINDOW)
       ...
       (SETQ *ZMACS-COMPLETION-AARRAY* (MAKE-ARRAY 100 ':TYPE 'ART-Q-LIST
                                                   ':LEADER-LIST '(0 T)))
       ...
       )

Presumably the double A's are a bug.

22-Nov-83 17:40:50-EST,983;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 22 Nov 83 17:40-EST
Date: 22 November 1983 17:45 EST
From: David Vinayak Wallace <GUMBY @ MIT-MC>
Subject:  aa bug
To: Henry @ MIT-OZ
cc: BUG-Zwei @ MIT-OZ
In-reply-to: Msg of 22 Nov 1983 16:04-EST from Henry Lieberman <Henry%MIT-OZ at MIT-MC.ARPA>

    Date: Tuesday, 22 November 1983, 16:04-EST
    From: Henry Lieberman <Henry%MIT-OZ at MIT-MC.ARPA>

    In Zwei in Release 5.0 [GC'd Beta Test rev 3], dusty plum, on Lisp Machine Apiary-8 (3600):

    I noticed the following code in Zmacs.Lisp:

    (DEFUN INITIALIZE-ZMACS-IF-NECESSARY (&AUX INTERVAL WINDOW)
           ...
           (SETQ *ZMACS-COMPLETION-AARRAY* (MAKE-ARRAY 100 ':TYPE 'ART-Q-LIST
                                                       ':LEADER-LIST '(0 T)))
           ...
           )

    Presumably the double A's are a bug.

I always thought it stood for "Association Array" a la ALIST.  It's
been there for an awfully long time.
22-Nov-83 18:21:54-EST,1074;000000000000
Received: from SCRC-TENEX by MIT-OZ via Chaosnet; 22 Nov 83 18:20-EST
Date: 22 Nov 1983 18:22-EST
Sender: JWALKER@SCRC-TENEX
Subject: Re: aa bug
From: Jan Walker <JWALKER@SCRC-TENEX>
To: Henry@MIT-OZ
Cc: BUG-Zwei@MIT-OZ
Message-ID: <[SCRC-TENEX]22-Nov-83 18:22:00.JWALKER>
In-Reply-To: The message of Tuesday, 22 November 1983, 16:04-EST from Henry Lieberman <Henry at MIT-OZ>

	
    Date: Tuesday, 22 November 1983, 16:04-EST
    From: Henry Lieberman <Henry at MIT-OZ>
    In Zwei in Release 5.0 [GC'd Beta Test rev 3], dusty plum, on Lisp Machine Apiary-8 (3600):
    
    I noticed the following code in Zmacs.Lisp:
    
    (DEFUN INITIALIZE-ZMACS-IF-NECESSARY (&AUX INTERVAL WINDOW)
           ...
           (SETQ *ZMACS-COMPLETION-AARRAY* (MAKE-ARRAY 100 ':TYPE 'ART-Q-LIST
                                                       ':LEADER-LIST '(0 T)))
           ...
           )
    
    Presumably the double A's are a bug.
    
              --------------------
		
No, the name of the facility is "aarray", on analogy with
"alist".
22-Nov-83 22:42:29-EST,888;000000000000
Received: from SCRC-YUKON by MIT-OZ via Chaosnet; 22 Nov 83 22:42-EST
Date: Tue, 22 Nov 83 22:48 EST
From: RWK%SCRC-YUKON@MIT-MC.ARPA
Subject: aa bug
To: Henry Lieberman <Henry@MIT-OZ.ARPA>
Cc: BUG-Zwei@MIT-OZ.ARPA
In-reply-to: The message of 22 Nov 83 16:04-EST from Henry Lieberman <Henry at MIT-OZ>
Message-ID: <831122224831.5.RWK@YUKON.SCRC.Symbolics>

    Date: Tuesday, 22 November 1983, 16:04-EST
    From: Henry Lieberman <Henry at MIT-OZ>
    In Zwei in Release 5.0 [GC'd Beta Test rev 3], dusty plum, on Lisp Machine Apiary-8 (3600):

    I noticed the following code in Zmacs.Lisp:

    (DEFUN INITIALIZE-ZMACS-IF-NECESSARY (&AUX INTERVAL WINDOW)
	   ...
	   (SETQ *ZMACS-COMPLETION-AARRAY* (MAKE-ARRAY 100 ':TYPE 'ART-Q-LIST
						       ':LEADER-LIST '(0 T)))
	   ...
	   )

    Presumably the double A's are a bug.

No.  An AARRAY is like an ALIST.
 5-Dec-83 13:39:04-EST,2302;000000000000
Received: from MIT-APIARY-8 by MIT-OZ via Chaosnet; 5 Dec 83 13:36-EST
Date: Monday, 5 December 1983, 13:38-EST
From: Henry Lieberman <Henry at MIT-OZ>
Subject: Query Replace during Edit Word Abbrevs
To: BUG-Zwei at MIT-OZ

In Release 5.0 [GC'd Beta Test rev 3], dusty plum, on Lisp Machine Apiary-8 (3600):

Trying a Query Replace editing an  Edit Word Abbrevs buffer causes:

>>Error: The object #<NODE 35571227> received a :VARIABLE-VALUE message, which went unclaimed.
         The rest of the message was (ZWEI:*CASE-REPLACE-P*)
While in the function ZWEI:QUERY-REPLACE  ZWEI:COM-QUERY-REPLACE  ZWEI:COMMAND-EXECUTE

ZWEI:QUERY-REPLACE:  (P.C. = 16)
   Arg 0 (BP): ("DSC:                           1       /"description/"" 0 :NORMAL)
   Arg 1 (*QUERY-FROM*-initialization): "Ronald"
   Arg 2 (*QUERY-TO*-initialization): "Ronnie"
   Arg 3 (BREAKS): NIL
   --Defaulted args:--
   Arg 4 (BUFFER): NIL
   Arg 5 (START-BP): ("DSC:                           1       /"description/"" 0 :NORMAL)

ZWEI:COM-QUERY-REPLACE:  (P.C. = 20)

ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
   Arg 0 (COMMAND): ZWEI:COM-QUERY-REPLACE
   Arg 1 (CHAR): 549
   Arg 2 (PREFIX-CHAR): NIL
   Arg 3 (HOOK-LIST): (ZWEI:EXPAND-ABBREV-HOOK)

ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
   Arg 0 (CH): 549

(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 200)
   Arg 0 (SELF): #<EDITOR 35633202>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:EDITOR -- 11. IV's, 0. FL's 15631305>
   Arg 2 (OPERATION): :EDIT
   Arg 3 (TOP-LEVEL-P): NIL
   Arg 4 (DESCRIPTION): NIL

ZWEI:COMMAND-LOOP:  (P.C. = 73)
   Arg 0 (COMTAB): #<COMTAB Recursive Edit 27144361>
   Arg 1 (WINDOW): #<WINDOW 27220203>
   --Defaulted args:--
   Arg 2 (TYPE): ZWEI:EDITOR
   Arg 3 (DESCRIPTION): NIL

ZWEI:RECURSIVE-EDIT:  (P.C. = 37)
   Arg 0 (INTERVAL): #<NODE 35664733>
   Arg 1 (MODE): "Edit Word Abbrevs"
   --Defaulted args:--
   Arg 2 (POINT): NIL

ZWEI:COM-EDIT-WORD-ABBREVS:  (P.C. = 13)

Rest of stack:
ZWEI:COM-EXTENDED-COMMAND:  (P.C. = 27)
ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 200)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 41)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
 9-Dec-83 20:53:57-EST,562;000000000000
Received: from MIT-LENNON by MIT-OZ via Chaosnet; 9 Dec 83 20:53-EST
Date: Friday, 9 December 1983, 20:50-EST
From: Jerry Roylance <GLR at MIT-OZ>
Subject: ^X^B Display: KBD and Mouse Interaction
To: BUG-ZMACS at MIT-OZ

In ZMACS in Release 5.0 [GC'd Beta Test rev 3], Dusty plum, on Lisp Machine John Lennon (3600):

Do ^X^B to show buffers.  Click mouse right and kill one of the buffers.
Type space to flush buffer directory.  Space is also inserted into the
buffer.

Also, mouse move at least one pixel before a buffer is outlined.

				Jerry
10-Dec-83 16:37:18-EST,465;000000000000
Received: from MIT-BUDDY by MIT-OZ via Chaosnet; 10 Dec 83 16:37-EST
Date: Saturday, 10 December 1983, 16:38-EST
From: Glenn A. Kramer <GAK at MIT-OZ>
Subject: Broken Dired
To: BUG-ZWEI at MIT-OZ

In ZWEI in Release 5.0 [GC'd Beta Test rev 3], dusty plum, on Lisp Machine Buddy Holly (3600):

I read files from directory oz:ps:<gak.bal>; everything went OK.

When I did Dired <gak.bal>*.*.*, I got 0 files. I tried (NETI:RESET) but it
was still broken.
10-Dec-83 19:41:44-EST,1260;000000000000
Received: from SCRC-TENEX by MIT-OZ via Chaosnet; 10 Dec 83 19:41-EST
Received: from SCRC-HARLEM by SCRC-TENEX with CHAOS; Sat 10-Dec-83 19:36:49-EST
Date: Saturday, 10 December 1983, 19:31-EST
From: Joseph R Goldstone <joseph@SCRC-QUABBIN>
Subject: Broken Dired
To: Glenn A. Kramer <GAK@MIT-OZ>
Cc: BUG-ZWEI@MIT-OZ
In-reply-to: The message of 10 Dec 83 16:38-EST from Glenn A. Kramer <GAK at MIT-OZ>

    Date: Saturday, 10 December 1983, 16:38-EST
    From: Glenn A. Kramer <GAK at MIT-OZ>
    In ZWEI in Release 5.0 [GC'd Beta Test rev 3], dusty plum, on Lisp Machine Buddy Holly (3600):

    I read files from directory oz:ps:<gak.bal>; everything went OK.

    When I did Dired <gak.bal>*.*.*, I got 0 files. I tried (NETI:RESET) but it
    was still broken.

[running the SCRC copy of the Beta Test world] i could not reproduce this bug.

(neti:reset) is probably not the right hammer here.  even if it was, in release 5 every
time you punch the network system in the nose with (neti:reset) you should follow it up
with a (neti:enable).  [this is in contrast with release 4 systems in which you could
often get away with only a (chaos:reset), omitting a (chaos:enable).]

but, it was probably not the right hammer.

-- joseph
12-Dec-83 23:09:15-EST,1796;000000000000
Received: from SCRC-TENEX by MIT-OZ via Chaosnet; 12 Dec 83 23:08-EST
Received: from SCRC-BLACKSTONE by SCRC-TENEX with CHAOS; Mon 12-Dec-83 22:52:47-EST
Date: Monday, 12 December 1983, 22:47-EST
From: Neal Feinberg <Feinberg@SCRC-YUKON>
Subject: Broken Dired
To: joseph@SCRC-QUABBIN, GAK@MIT-OZ
Cc: BUG-ZWEI@MIT-OZ
In-reply-to: The message of 10 Dec 83 19:31-EST from Joseph R Goldstone <joseph at SCRC-QUABBIN>

    Date: Saturday, 10 December 1983, 19:31-EST
    From: Joseph R Goldstone <joseph@SCRC-QUABBIN>

	Date: Saturday, 10 December 1983, 16:38-EST
	From: Glenn A. Kramer <GAK at MIT-OZ>
	In ZWEI in Release 5.0 [GC'd Beta Test rev 3], dusty plum, on Lisp Machine Buddy Holly (3600):

	I read files from directory oz:ps:<gak.bal>; everything went OK.

	When I did Dired <gak.bal>*.*.*, I got 0 files. I tried (NETI:RESET) but it
	was still broken.

    [running the SCRC copy of the Beta Test world] i could not reproduce this bug.

    (neti:reset) is probably not the right hammer here.  even if it was, in release 5 every
    time you punch the network system in the nose with (neti:reset) you should follow it up
    with a (neti:enable).  [this is in contrast with release 4 systems in which you could
    often get away with only a (chaos:reset), omitting a (chaos:enable).]

    but, it was probably not the right hammer.

    -- joseph

This is not a zwei bug at all.  All the files in the subdirectory
OZ:PS:<GAK.BAL> have their protection set to 775240, which does not
permit the world to list his BAL directory.  Unless the subdirectory
protection is set up right (this involves making a personal user group
usually), or wheel privilages are enabled, even someone logged in as GAK
only has world access to the subdirectories of <GAK>.  
13-Dec-83 01:10:48-EST,3157;000000000000
Received: from MIT-LISPM-1 by MIT-OZ via Chaosnet; 13 Dec 83 01:10-EST
Date: Tuesday, 13 December 1983, 01:06-EST
From: Richard Mlynarik <Mly at MIT-OZ>
Subject: ed-buffer received a :homedir message
To: BUG-zwei-mit at MIT-OZ

In Bad Inconsistently updated System 98.7, CADR 3.1,
Inconsistently updated ZMail 53.3, MIT-Specific 22.0, microcode 305,
ZM MIT, on Lisp Machine One:


Insert your description of the circumstances here:

minibuffer prompting for file name.
I typed "ed-buffer:random"
Is is reasonable to support this method?

>>ERROR: The object #ZWEI#:ED-BUFFER-PATHNAME "ED-BUFFER: NIL" received a :HOMEDIR message, which went unclaimed.
The rest of the message was ("Mly").
Backtrace from the debugger:

#ZWEI#:ED-BUFFER-PATHNAME "ED-BUFFER: NIL":
   Arg 0: :HOMEDIR
   Arg 1: "Mly"


SI#:INSTANCE-HASH-FAILURE (P.C. = 170)

 Arg 0 (OP): :HOMEDIR
 Rest arg (ARGS): ("Mly")
Local 1 (HT): <<Error printing local>>
Local 2 (FN-LOCATION): NIL
Local 3 (FUNC): NIL
Local 4 (NEWHT): NIL
Local 5: NIL
Local 6: NIL


FS:USER-HOMEDIR (P.C. = 140)

 Arg 0 (HOST): #ZWEI-BUFFER-HOST "ED-BUFFER"
   --Defaulted args:--
 Arg 1 (RESET-P): NIL
 Arg 2 (USER): "Mly"
 Arg 3 (FORCE-P): NIL
Local 0: (FS:FILE-ERROR SI#:CONDITION-CASE-THROW FS#:G8766)
Local 1: ((FS:FILE-ERROR SI#:CONDITION-CASE-THROW FS#:G8766))
Local 2 (*SELECTQ-ITEM*): NIL


FS:DEFAULT-PATHNAME (P.C. = 200)

 Arg 0 (DEFAULTS): ((#ZWEI-FILE-HOST "ED-FILE") (#ZWEI-BUFFER-HOST "ED-BUFFER") (#ZWEI-HOST "ED") (#FS#:LOGICAL-HOST "SYS") ...)
 Arg 1 (HOST): #ZWEI-BUFFER-HOST "ED-BUFFER"
 Arg 2 (DEFAULT-TYPE): :LISP
 Arg 3 (DEFAULT-VERSION): NIL
   --Defaulted args:--
 Arg 4 (INTERNAL-P): NIL
Local 0 (ELEM): (#FS#:TOPS20-CHAOS-HOST "MIT-OZ")
Local 1 (PATHNAME): NIL
Local 2 (HOST-TO-USE): #ZWEI-BUFFER-HOST "ED-BUFFER"
Local 3: NIL
Local 4 (DEFAULT): NIL


Additional information supplied with call:
 Expecting 2 values

FS:COMPLETE-PATHNAME (P.C. = 65)

 Arg 0 (DEFAULTS): ((#ZWEI-FILE-HOST "ED-FILE") (#ZWEI-BUFFER-HOST "ED-BUFFER") (#ZWEI-HOST "ED") (#FS#:LOGICAL-HOST "SYS") ...)
 Arg 1 (STRING): "random"
 Arg 2 (TYPE): :LISP
 Arg 3 (VERSION): NIL
 Rest arg (OPTIONS): (:READ)
Local 1 (PATHNAME): NIL
Local 2 (HOST): #ZWEI-BUFFER-HOST "ED-BUFFER"
Local 3 (START): 12
Local 4 (END): 20


Remainder of stack:

PATHNAME-COMPLETE (P.C. = 62)
COM-PATHNAME-COMPLETE (P.C. = 25)
COMMAND-EXECUTE (P.C. = 115)
PROCESS-COMMAND-CHAR (P.C. = 65)
(:METHOD WINDOW :EDIT) (P.C. = 464)
(:INTERNAL (:METHOD ZWEI-WITHOUT-TYPEOUT :COMBINED :EDIT) 0) (P.C. = 63)
FUNCALL (P.C. = 25)
(:METHOD DISPLAYER :AROUND :EDIT) (P.C. = 31)
(:METHOD ZWEI-WITHOUT-TYPEOUT :COMBINED :EDIT) (P.C. = 47)
EDIT-IN-MINI-BUFFER (P.C. = 326)
...
COMMAND-EXECUTE (P.C. = 115)
PROCESS-COMMAND-CHAR (P.C. = 65)
(:METHOD WINDOW :EDIT) (P.C. = 464)
(:INTERNAL (:METHOD ZMACS-WINDOW :COMBINED :EDIT) 0) (P.C. = 74)
FUNCALL (P.C. = 25)
(:METHOD DISPLAYER :AROUND :EDIT) (P.C. = 31)
(:METHOD ZMACS-WINDOW :COMBINED :EDIT) (P.C. = 47)
ZMACS-WINDOW-TOP-LEVEL (P.C. = 46)
SI#:PROCESS-TOP-LEVEL (P.C. = 152)
14-Dec-83 20:31:59-EST,3709;000000000000
Received: from MIT-LISPM-1 by MIT-OZ via Chaosnet; 14 Dec 83 20:31-EST
Date: Wednesday, 14 December 1983, 20:34-EST
From: Richard Mlynarik <Mly at MIT-OZ>
To: BUG-zwei-mit at MIT-OZ

In Bad Inconsistently updated System 98.7, CADR 3.1,
Experimental ZMail 53.5, MIT-Specific 22.0, microcode 305, ZM MIT,
on Lisp Machine One:


testing profile edit.
clicked right on universes [there were none defined]
click on abort
clicked right on filters =>lossage

ALSO: click right on files has the duplicate file/buffer problem that
the main select menu used to have.
eg I get options of "bug-lispm.babyl oz:ps:<daniel.g.mly.l>" AND "oz:ps:<daniel.g.mly.l>bug-lispm.init"
ALSO: These menus should display their items one per line (I'm not sure what flavor they are)
since there are not usually very many of them, and the existing scheme results in unacceptable
truncation. For instances of this, login as me and frob my init by getting into the profile
editor, clicking right on files, and looking at the menu.


>>TRAP 3213 (FUNCTION-ENTRY)
Function (:METHOD ZMAIL-PROFILE-BUFFER :RESECTIONIZE) called with too many arguments (3).
Backtrace from the debugger:

(:METHOD ZMAIL-PROFILE-BUFFER :RESECTIONIZE) (P.C. = 26)
  (SELF is #<ZMAIL-PROFILE-BUFFER "ZMAIL.INIT PS:<DANIEL.G.MLY> OZ:" 16453432>)

 Arg 0 (OPERATION): :RESECTIONIZE


RESECTIONIZE-BUFFER (P.C. = 24)

 Arg 0 (BUFFER): #<ZMAIL-PROFILE-BUFFER "ZMAIL.INIT PS:<DANIEL.G.MLY> OZ:" 16453432>
   --Defaulted args:--
 Arg 1 (START-NODE): NIL
 Arg 2 (END-NODE): NIL


PROFILE-FILTERS-OR-UNIVERSES (P.C. = 231)

 Arg 0 (SYMBOL-LIST): NIL
 Arg 1 (NEAR-MODE): (:WINDOW #<BUTTON-PANE Universes 2217620 exposed>)
 Arg 2 (LABEL): "Universes to be remembered in init file"
 Arg 3 (NEW-FUNCTION): PROFILE-NEW-UNIVERSE
 Arg 4 (DEFINITION-FUNCTION): GET-UNIVERSE-DEFINITION
Local 0 (ACTIVE-LIST): NIL
Local 1 (TEM): NIL
Local 2: NIL
Local 3 (SYM): NIL
Local 4 (BP): NIL


PROFILE-UNIVERSES-BUTTON (P.C. = 107)

 Arg 0 (NEAR-MODE): (:WINDOW #<BUTTON-PANE Universes 2217620 exposed>)
Local 0 (MODE): :EDIT-UNIVERSES


(:SELECT-METHOD ZMAIL-PROFILE-COMMAND-LIST :MOUSE-BUTTON) (P.C. = 334)

 Arg 0 (IGNORE): :MOUSE-BUTTON
 Arg 1 (CH): 4000002
 Arg 2 (WINDOW): #<BUTTON-PANE Universes 2217620 exposed>
 Arg 3 (IGNORE): 41
 Arg 4 (IGNORE): 10
Local 0 (WINDOW-NAME): UNIVERSES-BUTTON
Local 1 (NEAR-MODE): (:WINDOW #<BUTTON-PANE Universes 2217620 exposed>)
Local 2 (ALIST): NIL
Local 3 (ZMAIL-BUFFER): NIL
Local 4: NIL
Local 5 (.FILE-ABORTED-FLAG.): NIL
Local 6 (SRC-FILE): NIL
Local 7 (.WINDOW.): NIL
Local 8 (.FOR-WINDOW.): NIL
Local 9 (.OSTATUS.): NIL
Local 10 (.OSUBST.): NIL
Local 11 (.QUEUE-LEFT.): NIL
Local 12 (E): NIL


Remainder of stack:

(:METHOD ZMAIL-PROFILE-FRAME :PROCESS-SPECIAL-COMMAND) (P.C. = 25)
(:METHOD ZMAIL-COMMAND-LOOP-MIXIN :COMMAND-LOOP) (P.C. = 252)
(:INTERNAL (:METHOD ZMAIL-UTILITY-FRAME :COMBINED :COMMAND-LOOP) 0) (P.C. = 44)
FUNCALL (P.C. = 25)
(:METHOD ZMAIL-COMMAND-LOOP-MIXIN :AROUND :COMMAND-LOOP) (P.C. = 57)
(:METHOD ZMAIL-UTILITY-FRAME :COMBINED :COMMAND-LOOP) (P.C. = 43)
COM-ZMAIL-PROFILE (P.C. = 241)
COMMAND-EXECUTE (P.C. = 115)
ZMAIL-COMMAND-EXECUTE (P.C. = 27)
(:SELECT-METHOD ZMAIL-COMMAND-LIST :MENU) (P.C. = 32)
(:METHOD ZMAIL-FRAME :PROCESS-SPECIAL-COMMAND) (P.C. = 25)
(:METHOD ZMAIL-COMMAND-LOOP-MIXIN :COMMAND-LOOP) (P.C. = 252)
(:INTERNAL (:METHOD ZMAIL-FRAME :COMBINED :COMMAND-LOOP) 0) (P.C. = 44)
FUNCALL (P.C. = 25)
(:METHOD ZMAIL-COMMAND-LOOP-MIXIN :AROUND :COMMAND-LOOP) (P.C. = 57)
(:METHOD ZMAIL-FRAME :COMBINED :COMMAND-LOOP) (P.C. = 43)
ZMAIL-PROCESS-TOP-LEVEL (P.C. = 115)
SI#:PROCESS-TOP-LEVEL (P.C. = 152)
15-Dec-83 17:19:10-EST,664;000000000000
Received: from MIT-MOON by MIT-OZ via Chaosnet; 15 Dec 83 17:18-EST
Date: Thursday, 15 December 1983, 17:11-EST
From: Andrew L. Ressler <ALR at MIT-OZ>
Subject: Completion
To: BUG-ZWEI at MIT-OZ

In ZWEI in Release 5.0 [GC'd Beta Test rev 3], dusty plum, on Lisp Machine Keith Moon (3600):

I think the following is a bug in completion.  Will it ever be fixed??

On oz I have the following files:

talk-outline.press
talk-outline.text

While in ZMACS I type ctrl-x ctrl-f which shows the default of FOO.LISP

After typing  TALK-<COMPLETE>  it completes to

TALK-OUTLINE.LISP

If anything it should only complete to

TALK-OUTLINE.

Andrew
15-Dec-83 20:28:31-EST,461;000000000000
Received: from SCRC-TENEX by MIT-OZ via Chaosnet; 15 Dec 83 20:27-EST
Date: 15 Dec 1983 1922-EST
From: David A. Moon <MOON@SCRC-TENEX>
Subject: Re: Completion
To: ALR@MIT-OZ
cc: BUG-ZWEI@MIT-OZ
In-Reply-To: The message of Thursday, 15 December 1983, 17:11-EST from Andrew L. Ressler <ALR at MIT-OZ>

This was fixed in Release 5.0 (but didn't make it into the beta test version).
It's not a bug fix, but a change of user-interface philosophy.
-------
15-Dec-83 21:12:59-EST,345;000000000000
Mail-From: ALR created at 15-Dec-83 21:12:34
Date: Thu, 15 Dec 1983  21:12 EST
Message-ID: <ALR.11975810627.BABYL@MIT-OZ>
From: ALR@MIT-OZ
To:   "David A. Moon" <MOON@SCRC-TENEX>
Cc:   BUG-ZWEI@MIT-OZ
Subject: Completion
In-reply-to: Msg of 15 Dec 1983  19:22-EST from David A. Moon <MOON at SCRC-TENEX>

Thanks for the reply.
Andrew
15-Dec-83 21:53:45-EST,1794;000000000000
Received: from SCRC-TENEX by MIT-OZ via Chaosnet; 15 Dec 83 21:52-EST
Date: 15 Dec 1983 21:50-EST
Sender: JWALKER@SCRC-TENEX
Subject: Re: Completion
From: Jan Walker <JWALKER@SCRC-TENEX>
To: ALR@MIT-OZ
Cc: bug-zwei@OZ
Message-ID: <[SCRC-TENEX]15-Dec-83 21:50:26.JWALKER>
In-Reply-To: The message of Thursday, 15 December 1983, 17:11-EST from Andrew L. Ressler <ALR at MIT-OZ>

	
    Date: Thursday, 15 December 1983, 17:11-EST
    From: Andrew L. Ressler <ALR at MIT-OZ>
    In ZWEI in Release 5.0 [GC'd Beta Test rev 3], dusty plum, on Lisp Machine Keith Moon (3600):
    
    I think the following is a bug in completion.  Will it ever be fixed??
    
    On oz I have the following files:
    
    talk-outline.press
    talk-outline.text
    
    While in ZMACS I type ctrl-x ctrl-f which shows the default of FOO.LISP
    
    After typing  TALK-<COMPLETE>  it completes to
    
    TALK-OUTLINE.LISP
    
    If anything it should only complete to
    
    TALK-OUTLINE.
    
    Andrew
              --------------------
		
The bug consists of a mismatch between your model of what
completion is (based on the TOPS-20 facility) and the Lisp
Machine model of what completion is (based on God knows
what).

"Completion" guarantees to complete to a valid file spec,
getting unspecified parts of it from the stored, usually
displayed, defaults.  It has nothing at all whatsoever to
do with whether the file spec thus formed corresponds to 
a file on the physical file system.

Arguments for both sides are plausible.  The fact is that
what you are seeing is not a bug, but is rather how the
facility works.  The fact that it is called "completion" is
unfortunate, as that misleads users who are expecting the
other model, of the same name.
22-Dec-83 22:16:37-EST,1726;000000000000
Received: from SCRC-TENEX by MIT-OZ via Chaosnet; 22 Dec 83 22:16-EST
Received: from SCRC-NEPONSET by SCRC-TENEX with CHAOS; Thu 22-Dec-83 22:02:44-EST
Date: Thursday, 22 December 1983, 22:01-EST
From: Mike McMahon <MMcM at SCRC-TENEX>
Subject: Fill Long Comment.
To: David Vinayak Wallace <Gumby at MIT-OZ>,
    David L. Andre <DLA at SCRC-TENEX>, CMB at SCRC-VIXEN
Cc: BUG-zwei at MIT-OZ, doc-changes at SCRC-TENEX
In-reply-to: The message of 20 Oct 83 02:49-EDT from David Vinayak Wallace <Gumby at MIT-OZ>,
             The message of 21 Dec 83 11:27-EST from David L. Andre <DLA at SCRC-TENEX>,
             The message of 22 Dec 83 15:39-EST from CMB at SCRC-VIXEN
Message-ID: <831222220156.5.MMcM@SCRC.SCRC.Symbolics>

    Date: Thursday, 20 October 1983, 02:49-EDT
    From: David Vinayak Wallace <Gumby at MIT-OZ>

    Could M-X Fill Long Comment be fixed to act more like M-Q?
    Specifically, if I have a set of comments delineated by whilespace, it
    should treat the whitespace like a paragraph break, and only
    comment-fill the "paragraph" I'm editing.  I could get the old behaviour
    by marking a region.

    Date: 21 Dec 1983 1127-EST
    From: David L. Andre <DLA@SCRC-TENEX>

    3.  M-X Fill Long Comment should only fill one paragraph, as with m-Q.
    (my only argumet is consistency...)

In the source.  Paragraphs are delimited by blank lines (or blank comment
lines), but not changes in indentation.

    Date: Thursday, 22 December 1983, 15:39-EST
    From: CMB at SCRC-VIXEN

    When it computes the minimum comment width, it should ignore lines that
    contain only the comment character.  Does this make sense?

This is a side effect of the above.
23-Dec-83 09:19:26-EST,1960;000000000000
Received: from MIT-LISPM-1 by MIT-OZ via Chaosnet; 23 Dec 83 09:19-EST
Date: Friday, 23 December 1983, 09:19-EST
From: Richard Mlynarik <Mly at MIT-OZ>
To: BUG-zwei-mit at MIT-OZ

In Bad Inconsistently updated System 98.11, CADR 3.2,
Experimental ZMail 53.5, MIT-Specific 22.0, microcode 305, ZM MIT,
on Lisp Machine One:

Accidentally set the Mode: in the mode line to a non-existant mode and
then did m-x reparse mode line.
result was "ZMACS () foo-buffer *"
Then typed m-x fundamental mode


>>TRAP 14074 (ARGTYP NUMBER PP 0 QILSP)
The first argument to M-<, NIL, was of the wrong type.
The function expected a number.
Backtrace from the debugger:

(:INTERNAL ZWEI:TURN-ON-MODE 0) (P.C. = 27)

 Arg 0 (X): NIL
 Arg 1 (Y): ZWEI:FUNDAMENTAL-MODE


SORT-SHORT-LIST (P.C. = 56)

 Arg 0 (L): (ZWEI:FUNDAMENTAL-MODE NIL)
 Arg 1 (LPRED): #<DTP-FEF-POINTER (:INTERNAL ZWEI:TURN-ON-MODE 0) 17242307>
 Arg 2 (KEYFUN): NIL
Local 0 (I): 1
Local 1 (SWITCH): T
Local 2 (LP): (ZWEI:FUNDAMENTAL-MODE NIL)


SORT (P.C. = 105)

 Arg 0 (X): (ZWEI:FUNDAMENTAL-MODE NIL)
 Arg 1 (SORT-LESSP-PREDICATE): #<DTP-FEF-POINTER (:INTERNAL ZWEI:TURN-ON-MODE 0) 17242307>
 Rest arg: NIL
Local 1 (KEY): NIL
Local 2 (TEM): NIL


ZWEI:TURN-ON-MODE (P.C. = 134)

 Arg 0 (MODE-SYMBOL): ZWEI:FUNDAMENTAL-MODE
Local 0: NIL
Local 1 (MINOR): NIL
Local 2 (HOOK): ZWEI:FUNDAMENTAL-MODE-HOOK


ZWEI:COM-FUNDAMENTAL-MODE (P.C. = 47)

Local 0: NIL
Local 1 (MODE): ZWEI:RETURN-INDENTS-MODE


Remainder of stack:

ZWEI:COM-EXTENDED-COMMAND (P.C. = 67)
ZWEI:COMMAND-EXECUTE (P.C. = 115)
ZWEI:PROCESS-COMMAND-CHAR (P.C. = 65)
(:METHOD ZWEI:WINDOW :EDIT) (P.C. = 464)
(:INTERNAL (:METHOD ZWEI:ZMACS-WINDOW :COMBINED :EDIT) 0) (P.C. = 74)
FUNCALL (P.C. = 25)
(:METHOD ZWEI:DISPLAYER :AROUND :EDIT) (P.C. = 31)
(:METHOD ZWEI:ZMACS-WINDOW :COMBINED :EDIT) (P.C. = 47)
ZWEI:ZMACS-WINDOW-TOP-LEVEL (P.C. = 46)
PROCESS-TOP-LEVEL (P.C. = 152)
 2-Jan-84 21:39:43-EST,3282;000000000000
Received: from MIT-LISPM-1 by MIT-OZ via Chaosnet; 2 Jan 84 21:39-EST
Date: Monday, 2 January 1984, 21:40-EST
From: Robert P. Krajewski <RpK at MIT-OZ>
Subject: Evaluate Region bug
To: BUG-ZWEI-MIT at MIT-OZ, BUG-ZMAIL-MIT at MIT-OZ

In Don't-dump-a-band! Inconsistent (unreleased patches loaded) System 98.20,
CADR 3.4, Inconsistent (unreleased patches loaded) ZMail 53.9,
MIT-Specific 22.0, microcode 305, ZM MIT, on Lisp Machine One:

I did a m-X Evaluate Region, and the DEFUN evaluated fine.  (The region
was part of a message I was composing with ZMail's m-X Bug command.)
Then this happened:

>>TRAP 2119. (SUBSCRIPT-OOB M-1 M-2 XINSTANCE-LOC-RESTART M-T)
The subscript 12. for #<ZMAIL-SENDING-INTERVAL "Mail" 34165253> was out of range in ARRAY-LEADER.
Backtrace from the debugger:

ZWEI:UPDATE-INTERVAL-COMPILE-TICK (P.C. = 65)

 Arg 0 (BP1): ("(DEFUN SARTRE (X) (SETQ X X))" 0. :NORMAL)
 Arg 1 (BP2): ("(DEFUN SARTRE (X) (SETQ X X))" 29. :NORMAL)
 Arg 2 (IN-ORDER-P): T
Local 0 (NODE): #<ZMAIL-SENDING-INTERVAL "Mail" 34165253>
Local 1 (FIRST): T


ZWEI:COMPILE-PRINT-INTERVAL (P.C. = 211)

 Arg 0 (BP1): ("(DEFUN SARTRE (X) (SETQ X X))" 0. :NORMAL)
 Arg 1 (BP2): ("(DEFUN SARTRE (X) (SETQ X X))" 29. :NORMAL)
 Arg 2 (IN-ORDER-P): T
 Arg 3 (COMPILE-P): NIL
 Arg 4 (REGION-NAME): "Region"
 Arg 5 (MODE-NAME): "Evaluating"
 Arg 6 (ECHO-NAME): "evaluated."
 Arg 7 (USE-TYPEOUT): :PROMPT
 Arg 8 (DEFVAR-HACK): NIL
 Arg 9 (COMPILER-PROCESSING-MODE): COMPILER:MACRO-COMPILE
   --Defaulted args:--
 Arg 10 (ALREADY-RESECTIONIZED-FLAG): NIL
Local 0 (FORMAT-FUNCTION): #<DTP-FEF-POINTER ZWEI:PROMPT-LINE-MORE 17101704>
Local 1 (SUCCESS): T


ZWEI:COMPILE-DEFUN-INTERNAL (P.C. = 163)

 Arg 0 (COMPILE-P): NIL
 Arg 1 (MODE-NAME): "Evaluating"
 Arg 2 (ECHO-NAME): "evaluated."
 Arg 3 (USE-TYPEOUT): :PROMPT
   --Defaulted args:--
 Arg 4 (DEFVAR-HACK): NIL
 Arg 5 (COMPILER-PROCESSING-MODE): COMPILER:MACRO-COMPILE
Local 0 (BP1): ("(DEFUN SARTRE (X) (SETQ X X))" 0. :NORMAL)
Local 1 (BP2): ("(DEFUN SARTRE (X) (SETQ X X))" 29. :NORMAL)
Local 2 (DEFUN-NAME): "Region"


ZWEI:COM-EVALUATE-REGION (P.C. = 42)



ZWEI:COM-EXTENDED-COMMAND (P.C. = 67)

Local 0 (ANS): ("Evaluate Region" . ZWEI:COM-EVALUATE-REGION)


Remainder of stack:

ZWEI:COMMAND-EXECUTE (P.C. = 115)
ZWEI:PROCESS-COMMAND-CHAR (P.C. = 65)
(:METHOD ZWEI:WINDOW :EDIT) (P.C. = 464)
(:INTERNAL (:INTERNAL (:METHOD ZWEI:ZMAIL-WINDOW :COMBINED :EDIT) 0.) 0.) (P.C. = 66)
FUNCALL (P.C. = 25)
(:METHOD ZWEI:DISPLAYER :AROUND :EDIT) (P.C. = 31)
(:INTERNAL (:METHOD ZWEI:ZMAIL-WINDOW :COMBINED :EDIT) 0.) (P.C. = 43)
(:METHOD ZWEI:ZMAIL-WINDOW :AROUND :EDIT) (P.C. = 63)
(:METHOD ZWEI:ZMAIL-WINDOW :COMBINED :EDIT) (P.C. = 41)
ZWEI:ZMAIL-MAIL (P.C. = 354)
...
ZWEI:ZMAIL-COMMAND-EXECUTE (P.C. = 27)
(:METHOD ZWEI:ZMAIL-FRAME :PROCESS-COMMAND-CHAR) (P.C. = 40)
(:METHOD ZWEI:ZMAIL-COMMAND-LOOP-MIXIN :COMMAND-LOOP) (P.C. = 257)
(:INTERNAL (:METHOD ZWEI:ZMAIL-FRAME :COMBINED :COMMAND-LOOP) 0.) (P.C. = 44)
FUNCALL (P.C. = 25)
(:METHOD ZWEI:ZMAIL-COMMAND-LOOP-MIXIN :AROUND :COMMAND-LOOP) (P.C. = 57)
(:METHOD ZWEI:ZMAIL-FRAME :COMBINED :COMMAND-LOOP) (P.C. = 43)
ZWEI:ZMAIL-PROCESS-TOP-LEVEL (P.C. = 115)
SI:PROCESS-TOP-LEVEL (P.C. = 152)
 3-Jan-84 15:34:44-EST,536;000000000000
Received: from MIT-LISPM-30 by MIT-OZ via Chaosnet; 3 Jan 84 15:33-EST
Date: Tuesday, 3 January 1984, 15:34-EST
From: Patrick G. Sobalvarro <PGS at MIT-OZ>
To: BUG-ZWEI at MIT-OZ

In ZWEI in System 98.22, CADR 3.4, ZMail 53.5, MIT-Specific 22.0,
microcode 306, on Lisp Machine Thirty:

Copy Text File used to work just fine.  It didn't ask me stupid questions about
whether the file I was copying was a text file.  Now it does.  If it weren't a
text file, I would have used Copy File or Copy Binary File, not Copy Text File.
 3-Jan-84 15:36:11-EST,447;000000000000
Received: from MIT-LISPM-30 by MIT-OZ via Chaosnet; 3 Jan 84 15:35-EST
Date: Tuesday, 3 January 1984, 15:36-EST
From: Patrick G. Sobalvarro <PGS at MIT-OZ>
To: BUG-ZWEI at MIT-OZ

In ZWEI in System 98.22, CADR 3.4, ZMail 53.5, MIT-Specific 22.0,
microcode 306, on Lisp Machine Thirty:

The buffer history ring lossage still exists.  If you enter a fresh Zwei and do
C-X M, when you send the message, you will be left in the mail buffer.
 3-Jan-84 15:53:30-EST,627;000000000000
Received: from MIT-LISPM-30 by MIT-OZ via Chaosnet; 3 Jan 84 15:53-EST
Date: Tuesday, 3 January 1984, 15:53-EST
From: Patrick G. Sobalvarro <PGS at MIT-OZ>
To: BUG-ZWEI at MIT-OZ

In ZWEI in System 98.22, CADR 3.4, ZMail 53.5, MIT-Specific 22.0,
microcode 306, on Lisp Machine Thirty:

In a fresh Zwei, do C-X 2.  Then do C-X 1.  Then system-L, system-E, C-X C-B,
clearscreen.  The screen will do a refresh dance, putting two windows up for a
few seconds, will run, and the whostate will change to "No selected window".

I'm not sure that this is the minimal sequence of commands, but it does work
(or not work).
 3-Jan-84 18:20:31-EST,257;000000000000
Mail-From: DANIEL.G.MLY created at  3-Jan-84 18:17:33
Date: Tue 3 Jan 84 18:17-EST
From: Richard Mlynarik <DANIEL.G.MLY@MIT-OZ>
Subject: Zwei histor lossage (eg c-m-l not working in new window)
To: pgs@MIT-OZ
CC: bug-zwei-mit@MIT-OZ

Fixed in 98.23
 4-Jan-84 22:45:09-EST,709;000000000000
Received: from MIT-LISPM-30 by MIT-OZ via Chaosnet; 4 Jan 84 22:44-EST
Date: Wednesday, 4 January 1984, 22:45-EST
From: Tim McNerney <tim at MIT-OZ>
Subject: Two bugs
To: bug-zwei at MIT-OZ

In a fresh Zmacs:

I typed: (loop for i = 0 below 10 do (twiddle)) ;Note missing FROM

then: m-X Macro Expand Expression <Return>

** Bug 1 ** Presumably it meant to say "No region", but it just feeped.

I marked the region and typed:  m-X Macro Expand c-?

It listed my choices

I hit: <Return>

** Bug 2 ** Just before I got thrown into the debugger (because of my typo),
two blinkers (a flashing block and a flashing paren) appeared on the screen
as though the typeout window had gone away. 
 4-Jan-84 23:26:22-EST,333;000000000000
Received: from MIT-ML by MIT-OZ via Chaosnet; 4 Jan 84 23:26-EST
Date: Wednesday, 4 January 1984, 23:27-EST
From: Tim McNerney <TIM at MIT-ML>
Subject: Two bugs... (oops, forgot following info)
To: BUG-ZWEI at MIT-OZ

In ZWEI in System 98.22, CADR 3.4, ZMail 53.5, MIT-Specific 22.0,
microcode 306, on Lisp Machine Thirty:

 7-Jan-84 02:56:10-EST,2458;000000000000
Received: from MIT-ELVIS by MIT-OZ via Chaosnet; 7 Jan 84 02:55-EST
Date: Saturday, 7 January 1984, 02:57-EST
From: Laura Bagnall <LAURA at MIT-OZ>
Subject: Lossage typing c-m-L after Source Compare Merge
To: BUG-ZWEI at MIT-OZ

In Release 5.0 [GC'd Beta Test rev 3], FEP 17, dusty plum, on Lisp Machine Elvis Presley (3600):

I had done m-X Source Compare Merge between 2 buffers and then typed c-R.  After poking around
the buffer for a little while, I typed c-m-L and got the following error.

>>Error: SELF is supposed to be an object of flavor ZWEI:ZMACS-EDITOR, however it is
         actually of flavor ZWEI:EDITOR, which does not have ZWEI:ZMACS-EDITOR as a component
While in the function SI:GET-COMPONENT-FLAVOR-INFO  SI:GET-FLAVOR-MAPPING-TABLE  SI:GET-FLAVOR-MAPPING-TABLE-AND-SELF

SI:GET-COMPONENT-FLAVOR-INFO:  (P.C. = 47)
   Arg 0 (FL): #<FLAVOR ZWEI:EDITOR 21416065>
   Arg 1 (COMPONENT-FLAVOR): ZWEI:ZMACS-EDITOR
   Arg 2 (DONT-CREATE): NIL
   Arg 3 (FOR-SELF): T
   Local 4 (PLIST): #<DTP-LOCATIVE 21416110>
   Local 5 (CFI): ((ZWEI:EDITOR #<Map to flavor ZWEI:EDITOR -- 11. IV's, 0. FL's 15631305>) (SI:VANILLA-FLAVOR SI:VANILLA-FLAVOR))
   Local 6 (FLAVOR-INFO): NIL

SI:GET-FLAVOR-MAPPING-TABLE:  (P.C. = 16)
   Arg 0 (FL): #<FLAVOR ZWEI:EDITOR 21416065>
   Arg 1 (METHOD-FLAVOR): ZWEI:ZMACS-EDITOR
   Arg 2 (FOR-SELF): T

SI:GET-FLAVOR-MAPPING-TABLE-AND-SELF:  (P.C. = 16)
   Arg 0 (FLAVOR-NAME): ZWEI:ZMACS-EDITOR

ZWEI:MAKE-BUFFER-CURRENT:  (P.C. = 4)
   Rest arg (ARGS): (#<FILE-BUFFER "VAX-ANGLES.LISP PS:<LAURA> OZ:" 20030723>)

ZWEI:ROTATE-BUFFER-HISTORY:  (P.C. = 26)
   Arg 0 (N): 2

ZWEI:COM-SELECT-PREVIOUS-BUFFER:  (P.C. = 30)

ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
   Arg 0 (COMMAND): ZWEI:COM-SELECT-PREVIOUS-BUFFER
   Arg 1 (CHAR): 1514
   Arg 2 (PREFIX-CHAR): NIL
   Arg 3 (HOOK-LIST): NIL

ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
   Arg 0 (CH): 1514

Rest of stack:
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 200)
ZWEI:COMMAND-LOOP:  (P.C. = 73)
ZWEI:CONTROL-R:  (P.C. = 24)
ZWEI:SOURCE-COMPARE-MERGE-QUERY:  (P.C. = 454)
ZWEI:COM-SOURCE-COMPARE-MERGE:  (P.C. = 55)
ZWEI:COM-EXTENDED-COMMAND:  (P.C. = 27)
ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 200)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 41)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
 7-Jan-84 17:54:42-EST,1264;000000000000
Received: from SCRC-TENEX by MIT-OZ via Chaosnet; 7 Jan 84 17:54-EST
Received: from SCRC-EUPHRATES by SCRC-TENEX with CHAOS; Sat 7-Jan-84 17:52:04-EST
Date: Saturday, 7 January 1984, 17:51-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: Lossage typing c-m-L after Source Compare Merge
To: Laura Bagnall <LAURA at MIT-OZ>
Cc: BUG-ZWEI at MIT-OZ
In-reply-to: The message of 7 Jan 84 02:57-EST from Laura Bagnall <LAURA at MIT-OZ>

    Date: Saturday, 7 January 1984, 02:57-EST
    From: Laura Bagnall <LAURA at MIT-OZ>

    In Release 5.0 [GC'd Beta Test rev 3], FEP 17, dusty plum, on Lisp Machine Elvis Presley (3600):

    I had done m-X Source Compare Merge between 2 buffers and then typed c-R.  After poking around
    the buffer for a little while, I typed c-m-L and got the following error.

    >>Error: SELF is supposed to be an object of flavor ZWEI:ZMACS-EDITOR, however it is
	     actually of flavor ZWEI:EDITOR, which does not have ZWEI:ZMACS-EDITOR as a component
    While in the function SI:GET-COMPONENT-FLAVOR-INFO  SI:GET-FLAVOR-MAPPING-TABLE  SI:GET-FLAVOR-MAPPING-TABLE-AND-SELF

Thanks for the reminder.  This has been fixed in the source for a while;
I will include the fix in a patch so it will get released.
 9-Jan-84 15:02:38-EST,420;000000000000
Mail-From: SAZ created at  9-Jan-84 15:02:18
Date: Mon 9 Jan 84 15:02-EST
From: David M. J. Saslav <SAZ@MIT-OZ>
Subject: Auto Save
To: bug-zmacs@MIT-OZ

Wouldn't Auto Save Mode be a nice thing to incorporate
into ZMACS?  A couple of us were griping about losing
files due to system crashes, and I got "volunteered" to
mail the request to see if anything could be done.

let me know what you think!

---Saz
 9-Jan-84 23:22:57-EST,1674;000000000000
Received: from SCRC-TENEX by MIT-OZ via Chaosnet; 9 Jan 84 23:22-EST
Received: from SCRC-EUPHRATES by SCRC-TENEX with CHAOS; Mon 9-Jan-84 23:21:52-EST
Date: Monday, 9 January 1984, 23:21-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: Auto Save
To: David M. J. Saslav <SAZ at MIT-OZ>
Cc: bug-zmacs at MIT-OZ
In-reply-to: The message of 9 Jan 84 15:02-EST from David M. J. Saslav <SAZ at MIT-OZ>

    Date: Mon 9 Jan 84 15:02-EST
    From: David M. J. Saslav <SAZ@MIT-OZ>

    Wouldn't Auto Save Mode be a nice thing to incorporate
    into ZMACS?  A couple of us were griping about losing
    files due to system crashes, and I got "volunteered" to
    mail the request to see if anything could be done.

Auto Save mode in Emacs forces you to wait while the file is written out.
You don't notice this too much since you aren't writing over the network
and so the operation is reasonably fast, and also in a timesharing system
you tend to get used to occasionally pauses where the machine stops responding
for no obvious reason.

If the Lisp machine had an Auto Save mode that worked this way, which would
be easy enough to do, I'm not so sure you would like it.  It could perhaps do
saving "in the background", but that would be more difficult and also presents
the possibility of getting an inconsistent snapshot of the file if you are
editing while it's saving.

Most people around here just type m-X Save every half hour or so, or whenever
they come to a logical point to save, where they feel they have finished a major
conceptual task that they wouldn't like to do over again, and the state of the
files is reasonably consistent.
10-Jan-84 02:21:11-EST,835;000000000000
Received: from MIT-ML by MIT-OZ via Chaosnet; 10 Jan 84 02:20-EST
Date:  Tuesday, 10 January 1984 02:16 est
From:  "Barry Margolin"@MIT-MULTICS.ARPA
Subject:  Re: Auto Save
To:  David A. Moon <Moon@SCRC-TENEX.ARPA>
cc:  David M. J. Saslav <SAZ@MIT-OZ.ARPA>, bug-zmacs@MIT-OZ.ARPA
In-Reply-To:  Message of 9 January 1984 23:21 est from "David A. Moon"
Message-ID:  <840110071618.153256@MIT-MULTICS.ARPA>

    Date:  9 January 1984 23:21 est
    From:  David A. Moon <Moon at SCRC-TENEX>

    It could perhaps do
    saving "in the background", but that would be more difficult and also presents
    the possibility of getting an inconsistent snapshot of the file if you are
    editing while it's saving.

How about making a temporary copy of the buffer, and then writing this
out to the autosave file in background?
14-Jan-84 04:48:11-EST,1017;000000000000
Received: from MIT-ROBOT-4 by MIT-OZ via Chaosnet; 14 Jan 84 04:48-EST
Date: Saturday, 14 January 1984, 04:51-EST
From: JCMA@MIT-OZ
Subject: Holding Down Mouse-Middle In Text Mode
To: BUG-zmacs@MIT-OZ

In zmacs in Release 5.0 [GC'd Beta Test rev 3],
Experimental RELATUS 84.1, microcode TMC5-MIC 262, dusty plum, on Lisp Machine Robot-4 (3600):

Holding down mouse-middle only puts a words and lines in a region.
It does lines only when the mouse is at the end of the line.

* It would nice if holding down mouse middle in text mode would establish a
  region containing the current sentence the mouse is over.

* It would be even nice if it knew about paragraphs and marked them when
  the mouse is at the beginning or end of the paragraph.

It looks as if this sort of behavior maybe a job for "Bucky Bits" as I'm not
sure marking the sentence can be differentiated from marking the paragraph.

Anyway, this behavior would improve our interface for parsing sentences
and paragraphs in ZMACS.
15-Jan-84 01:31:29-EST,3515;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 15 Jan 84 01:31-EST
Date: Sunday, 15 January 1984, 01:33-EST
From: Tim Mcnerney <TIM at MIT-CORWIN>
To: BUG-ZWEI-MIT at MIT-OZ
CC: MLY at OZ

In System 97.28, CADR 1.0, ZMail 51.9, MIT-Specific 21.0, microcode 257,
ZM MIT, on Lisp Machine Thirty-one:


Insert your description of the circumstances here:

In Dired typed V to view the file ".HEY;1"

>>ERROR: file not found for CORWIN:NIL$DISK:[NIL.VASL].HEY;5
Backtrace from the debugger:

FS#:OPEN-CHAOS (P.C. = 637)

 Arg 0 (HOST): #FS#:VMS-CHAOS-HOST "MIT-CORWIN"
 Arg 1 (PATHNAME): #FS#:VMS-PATHNAME "CORWIN:NIL$DISK:[NIL.VASL].HEY;5"
 Arg 2 (OPTIONS): (ERROR RETRY PRESERVE-DATES T ...)
Local 0 (MODE): READ
Local 1 (TYPE): CHARACTER
Local 2 (ERROR-P): RETRY
Local 3 (TEMPORARY-P): NIL
Local 4 (DELETED-P): NIL
Local 5 (RAW-P): NIL
Local 6 (SUPER-IMAGE-P): NIL
Local 7 (BYTE-SIZE): DEFAULT
Local 8 (PRESERVE-DATES-P): T
Local 9 (ACCESS-ERROR-SPECIFIED): NIL
Local 10 (ACCESS-ERROR): RETRY
Local 11 (HOST-UNIT): #<HOST-UNIT 15437063>
Local 12 (DATA-CONN): (#<CHAOS Connection 20725127> "I1181" "O1182" 30154273 ...)
Local 13 (PKT): #<PKT 26401650>
Local 14 (SUCCESS): NIL
Local 15 (STRING): "I1181 ERROR FNF C file not found"
Local 16 (DIRECTION): INPUT
Local 17 (NOT-ABORTED): T
Local 18 (KEY): DELETED
Local 19 (VAL): NIL
Local 20: (NIL NIL NIL NIL ...)
Local 21 (ERROR-OBJECT): (#<CHAOS Connection 20725127> "I1181" "O1182" 30154273 ...)
Local 22: (NIL 242 . 24000000)
Local 23 (PROPERTIES): NIL
Local 24 (CLOSE-SUCCESS): NIL
Local 25 (*SELECTQ-ITEM*): NIL
Local 26 (ERROR-OBJECT): NIL
Local 27 (IGNORE): NIL


(METHOD FS#:CHAOS-PATHNAME OPEN) (P.C. = 30)
  (SELF is #FS#:VMS-PATHNAME "CORWIN:NIL$DISK:[NIL.VASL].HEY;5")

 Arg 0 (OPERATION): OPEN
 Arg 1 (PATHNAME): #FS#:VMS-PATHNAME "CORWIN:NIL$DISK:[NIL.VASL].HEY;5"
 Rest arg (OPTIONS): (ERROR RETRY PRESERVE-DATES T ...)


GLOBAL:OPEN (P.C. = 220)

 Arg 0 (FILENAME): #FS#:VMS-PATHNAME "CORWIN:NIL$DISK:[NIL.VASL].HEY;5"
 Rest arg (KEYWORD-ARGS): (ERROR RETRY PRESERVE-DATES T ...)
Local 1: ((FS:FILE-ERROR) SI#:FILE-RETRY-HANDLER #FS#:VMS-PATHNAME "CORWIN:NIL$DISK:[NIL.VASL].HEY;5")
Local 2: ((** SI#:FILE-RETRY-HANDLER #FS#:VMS-PATHNAME "CORWIN:NIL$DISK:[NIL.VASL].HEY;5"))
Local 3 (NEW-PATHNAME): NIL
Local 4 (KEYL): NIL
Local 5 (KEY): NIL
Local 6 (CHARACTERS): NIL
Local 7 (DIRECTION): NIL
Local 8 (BYTE-SIZE): NIL
Local 9 (ERROR-P): NIL
Local 10 (ERROR-P-SPECD): NIL
Local 11 (DELETED-P): NIL
Local 12 (TEMPORARY-P): NIL
Local 13 (RAW-P): NIL
Local 14 (SUPER-IMAGE-P): NIL


ZWEI#:VIEW-FILE (P.C. = 70)

 Arg 0 (PATHNAME): #FS#:VMS-PATHNAME "CORWIN:NIL$DISK:[NIL.VASL].HEY;5"
 Arg 1 (DELETED-P): NIL
Local 0: NIL
Local 1 (.FILE-ABORTED-FLAG.): ABORT
Local 2 (STREAM): NIL


ZWEI#:COM-DIRED-VIEW-FILE (P.C. = 116)

Local 0 (LINE): "      .HEY;5              3                09//05//79 06:09:45              [200,10]"
Local 1 (DIR-P): NIL
Local 2 (PATHNAME): #FS#:VMS-PATHNAME "CORWIN:NIL$DISK:[NIL.VASL].HEY;5"


Remainder of stack:

ZWEI#:COMMAND-EXECUTE (P.C. = 120)
ZWEI#:PROCESS-COMMAND-CHAR (P.C. = 67)
(METHOD ZWEI:WINDOW EDIT) (P.C. = 470)
(INTERNAL (METHOD ZWEI:ZMACS-WINDOW COMBINED EDIT) 0) (P.C. = 74)
GLOBAL:FUNCALL (P.C. = 25)
(METHOD ZWEI#:DISPLAYER AROUND EDIT) (P.C. = 31)
(METHOD ZWEI:ZMACS-WINDOW COMBINED EDIT) (P.C. = 47)
ZWEI#:ZMACS-WINDOW-TOP-LEVEL (P.C. = 46)
SI#:PROCESS-TOP-LEVEL (P.C. = 115)
16-Jan-84 15:20:02-EST,770;000000000000
Mail-From: SAZ created at 16-Jan-84 15:18:49
Date: Mon 16 Jan 84 15:18:49-EST
From: SAZ@MIT-OZ
Subject: Re: Auto Save
To: Moon@SCRC-TENEX
cc: info-zwei@MIT-OZ, saz@MIT-OZ
In-Reply-To: Message from "David A. Moon <Moon at SCRC-TENEX>" of Sun 15 Jan 84 23:51:24-EST

Mr. Moon --
				
In response to your suggestion about a reminder to save my files,
you're quite right, I was looking for something more "automatic"...
Bob Krajewski wrote me a self-timed procedure that executes a
(hacks:zowie) every hour on the hour... The code for this resides
in the file <SAZ>lispm.init...  Couldn't something like that be used
to execute a save-all-files command every n minutes?  THat is all I really
was thinking of when I made the inquiry...


---Dave
-------
16-Jan-84 16:05:07-EST,1097;000000000000
Received: from SCRC-YUKON by MIT-OZ via Chaosnet; 16 Jan 84 16:04-EST
Received: from SCRC-NEPONSET by SCRC-YUKON with CHAOS; Mon 16-Jan-84 16:01:17-EST
Date: Monday, 16 January 1984, 16:11-EST
From: Mike McMahon <MMcM at SCRC-TENEX>
Subject: Holding Down Mouse-Middle In Text Mode
To: JCMA at MIT-OZ
Cc: BUG-zmacs at MIT-OZ
In-reply-to: The message of 14 Jan 84 04:51-EST from JCMA at MIT-OZ
Message-ID: <840116161124.0.MMcM@SCRC.SCRC.Symbolics>

    Date: Saturday, 14 January 1984, 04:51-EST
    From: JCMA@MIT-OZ

    Holding down mouse-middle only puts a words and lines in a region.
    It does lines only when the mouse is at the end of the line.

    * It would nice if holding down mouse middle in text mode would establish a
      region containing the current sentence the mouse is over.
You can point at the period to get this.

    * It would be even nice if it knew about paragraphs and marked them when
      the mouse is at the beginning or end of the paragraph.

It's supposed to.  But it got broken by the conversion to mode flavors.
Fixed in the source.
16-Jan-84 18:07:57-EST,1297;000000000000
Received: from MIT-ROBOT-4 by MIT-OZ via Chaosnet; 16 Jan 84 18:06-EST
Date: Monday, 16 January 1984, 18:06-EST
From: JCMA@MIT-OZ
Subject: Holding Down Mouse-Middle In Text Mode
To: MMcM@SCRC-TENEX
Cc: BUG-zmacs@MIT-OZ
In-reply-to: <840116161124.0.MMcM@SCRC.SCRC.Symbolics>

    Date: Monday, 16 January 1984, 16:11-EST
    From: Mike McMahon <MMcM at SCRC-TENEX>
    Subject: Holding Down Mouse-Middle In Text Mode
    To: JCMA at MIT-OZ
    Cc: BUG-zmacs at MIT-OZ
    In-reply-to: The message of 14 Jan 84 04:51-EST from JCMA at MIT-OZ
    Message-ID: <840116161124.0.MMcM@SCRC.SCRC.Symbolics>

	Date: Saturday, 14 January 1984, 04:51-EST
	From: JCMA@MIT-OZ

	Holding down mouse-middle only puts a words and lines in a region.
	It does lines only when the mouse is at the end of the line.

	* It would nice if holding down mouse middle in text mode would establish a
	  region containing the current sentence the mouse is over.
    You can point at the period to get this.
I can't get that behavior out of our rel 5.0

	* It would be even nice if it knew about paragraphs and marked them when
	  the mouse is at the beginning or end of the paragraph.

    It's supposed to.  But it got broken by the conversion to mode flavors.
    Fixed in the source.
Goodie.
17-Jan-84 16:33:22-EST,451;000000000000
Received: from MIT-LISPM-32 by MIT-OZ via Chaosnet; 17 Jan 84 16:31-EST
Date: Tuesday, 17 January 1984, 16:32-EST
From: Philippe Brou <PHILIP at MIT-OZ>
To: BUG-ZWEI at MIT-OZ

In ZWEI in System 98.26, CADR 3.4, ZMail 53.9, MIT-Specific 22.0,
Experimental 3D_Vision_system 49.0, Slide_system 8.0, microcode 306,
on Lisp Machine Thirty-two:

Print Region doesn't print code with fonts properly.
It outputs the whole region in a single font.
18-Jan-84 12:11:02-EST,812;000000000000
Received: from MIT-LISPM-18 by MIT-OZ via Chaosnet; 18 Jan 84 12:10-EST
Date: Wednesday, 18 January 1984, 12:11-EST
From: Richard Mlynarik <Mly at MIT-OZ>
Subject: Fonts in m-x Print Region
To: PHILIP at MIT-OZ
CC: BUG-ZWEI-MIT at MIT-OZ
In-reply-to: The message of 17 Jan 1984 16:32-EST from Philippe Brou <PHILIP at MIT-OZ>
Message-ID: <[MIT-LISPM-18].18-Jan-84 12:11:26.Mly>

    Date: Tuesday, 17 January 1984, 16:32-EST
    From: Philippe Brou <PHILIP at MIT-OZ>
    To: BUG-ZWEI at MIT-OZ

    In ZWEI in System 98.26, CADR 3.4, ZMail 53.9, MIT-Specific 22.0,
    Experimental 3D_Vision_system 49.0, Slide_system 8.0, microcode 306,
    on Lisp Machine Thirty-two:

    Print Region doesn't print code with fonts properly.
    It outputs the whole region in a single font.
Fixed 98.30.
18-Jan-84 15:48:04-EST,727;000000000000
Received: from MIT-LENNON by MIT-OZ via Chaosnet; 18 Jan 84 15:47-EST
Date: Wednesday, 18 January 1984, 15:47-EST
From: HQM@OZ <Henry Minsky at MIT-OZ>
Sender: GLR at MIT-OZ
Subject: Two suggestions
To: BUG-ZWEI at MIT-OZ

In ZWEI in Release 5.0 [GC'd Beta Test rev 3], FEP 17, Dusty plum, on Lisp Machine John Lennon (3600):

  Has anyone thought of implementing the hyper-UNDO command that RMS has
in MIT LISPM systems? I find it much more useful than the restricted UNDO
command currently in use.

Also, this is not ZWEI related, but I think the ABORT-TRIVIAL-ERRORS feature in MIT sytems is good,
because it bothers me to wait 3 seconds when I mistype an open paren and have the error system
swap in.



19-Jan-84 05:38:52-EST,1200;000000000000
Received: from MIT-LISPM-18 by MIT-OZ via Chaosnet; 19 Jan 84 05:38-EST
Date: Thursday, 19 January 1984, 05:38-EST
From: Richard Mlynarik <Mly at MIT-OZ>
Subject: Two suggestions
To: Henry Minsky at MIT-OZ
CC: BUG-ZWEI at MIT-OZ
In-reply-to: The message of 18 Jan 1984 15:47-EST from HQM <Henry Minsky at MIT-OZ>
Message-ID: <[MIT-LISPM-18].19-Jan-84 05:38:31.Mly>

    Received: from MIT-LENNON by MIT-OZ via Chaosnet; 18 Jan 84 15:47-EST
    Date: Wednesday, 18 January 1984, 15:47-EST
    From: HQM@OZ <Henry Minsky at MIT-OZ>
    Sender: GLR at MIT-OZ
    Subject: Two suggestions
    To: BUG-ZWEI at MIT-OZ

    In ZWEI in Release 5.0 [GC'd Beta Test rev 3], FEP 17, Dusty plum, on Lisp Machine
	John Lennon (3600):

      Has anyone thought of implementing the hyper-UNDO command that RMS has
    in MIT LISPM systems? I find it much more useful than the restricted UNDO
    command currently in use.

    Also, this is not ZWEI related, but I think the ABORT-TRIVIAL-ERRORS feature in MIT
	sytems is good,
    because it bothers me to wait 3 seconds when I mistype an open paren and have the error
	system
    swap in.


Fixed in the source in systems 89 and 91
21-Jan-84 01:33:56-EST,1597;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 21 Jan 84 01:33-EST
Date: Saturday, 21 January 1984, 01:33-EST
From: David Vinayak Wallace <Gumby at MIT-MC>
Subject: Auto Save exists
To: David A. Moon <Moon at SCRC-TENEX>
Cc: David M. J. Saslav <SAZ at MIT-OZ>, bug-zmacs at MIT-OZ
In-reply-to: The message of 9 Jan 84 23:21-EST from David A. Moon <Moon at SCRC-TENEX>

    Date: Monday, 9 January 1984, 23:21-EST
    From: David A. Moon <Moon at SCRC-TENEX>
	Date: Mon 9 Jan 84 15:02-EST
	From: David M. J. Saslav <SAZ@MIT-OZ>
	Wouldn't Auto Save Mode be a nice thing to incorporate
	into ZMACS?  A couple of us were griping about losing
	files due to system crashes, and I got "volunteered" to
	mail the request to see if anything could be done.

    Auto Save mode in Emacs forces you to wait while the file is written
    out.  You don't notice this too much since you aren't writing over the
    network and so the operation is reasonably fast, and also in a
    timesharing system you tend to get used to occasionally pauses where the
    machine stops responding for no obvious reason.

    If the Lisp machine had an Auto Save mode that worked this way, which
    would be easy enough to do, I'm not so sure you would like it.  It could
    perhaps do saving "in the background", but that would be more difficult
    and also presents the possibility of getting an inconsistent snapshot of
    the file if you are editing while it's saving.

Phil Agre wrote a background autosave which snapshots your buffer and
saves it away while you continue uninterrupted.
22-Jan-84 02:53:23-EST,439;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 22 Jan 84 02:53-EST
Date: Saturday, 21 January 1984, 20:39-EST
From: David Chapman <Zvona at MIT-OZ>
Subject: F U P should push the point
To: BUG-zwei at MIT-OZ

In zwei in Release 5.0 [GC'd Beta Test rev 3], microcode TMC5-MIC 262,
FEP 17, dusty plum, on Lisp Machine Jim Morrison (3600):

m-X Find Unbalanced Parens, being a "drastic motion" command,
should maybe push the point?
23-Jan-84 20:30:14-EST,795;000000000000
Mail-From: SAZ created at 23-Jan-84 20:29:50
Date: Mon 23 Jan 84 20:29:50-EST
From: SAZ@MIT-OZ
Subject: semi-colon parsing
To: bug-zmacs@MIT-OZ
cc: bug-emacs@MIT-OZ


Does it strike anybody as annoying that control-E takes you to
the end of a commented line (ie to the end of the comment) rather
than just the end of the final s-expr on the line?  I know I sure
do. 
How about a control-E that takes you to the end of the final bit
of CODE on the line, then, if another control-E is done, you can
access the end of the comment text?  IE, if I already am at the
following place: (cursorpos <== *)

hsdofh ihofdh)))*	;This function just dies every time

and I do a control-E, the cursor will move to the end of the word
"time"...


How about it, guys?


---Dave
-------
24-Jan-84 13:50:17-EST,2239;000000000000
Received: from SCRC-YUKON by MIT-OZ via Chaosnet; 24 Jan 84 13:49-EST
Received: from SCRC-ANNISQUAM by SCRC-YUKON with CHAOS; Tue 24-Jan-84 13:38:56-EST
Date: Tuesday, 24 January 1984, 13:48-EST
From: Doug Dodds <DODDS at SCRC-TENEX>
Subject: semi-colon parsing
To: SAZ at MIT-OZ
Cc: bug-zmacs at MIT-OZ, bug-emacs at MIT-OZ
In-reply-to: The message of 23 Jan 84 20:29-EST from SAZ at MIT-OZ
Message-ID: <840124134856.2.DODDS@SCRC.SCRC.Symbolics>

    Date: Mon 23 Jan 84 20:29:50-EST
    From: SAZ@MIT-OZ

    Does it strike anybody as annoying that control-E takes you to
    the end of a commented line (ie to the end of the comment) rather
    than just the end of the final s-expr on the line?  I know I sure
    do. 

Personally, I couldn't do without this functionality.  My Lispm-Init
loads the following nifty function, by JWalker:
    
    zwei:
    (defcom COM-END-OF-CODE-LINE
	    "Goes to the end of the last /"real/" character on the line.
    This provides a way to get positioned on a line so you can add to or modify
    the code, not the comment.  A numeric argument specifies how many lines to move.  
    I don't see how people live without this.  Maybe if you never comment your code
    you don't notice that this is missing.  " ()
      (let* ((the-line (bp-line (forward-line (point)	;find the line wanted
					      (if *numeric-arg-p* *numeric-arg* 0))))
	     (index (find-comment-start the-line t)))	;index for comment
	(cond ((null index)				;no comment on line
	       (move-to-bp (end-line (create-bp the-line 0))))	;so just go to end
	      (t
	       (move-to-bp (backward-over *blanks* (create-bp the-line index))))))
      dis-bps)

My init file does a login binding of this function to s-E, which isn't
quite kosher, but has mnemonic value.

    How about a control-E that takes you to the end of the final bit
    of CODE on the line, then, if another control-E is done, you can
    access the end of the comment text?

c-E is very strongly entrenched in all modes as meaning end-of-line.  I
am against changing the meaning of c-E for this purpose.  Better to let
c-E still always mean end-of-LINE, and some other key binding like s-E
mean end-of-CODE.
24-Jan-84 14:39:55-EST,2330;000000000000
Received: from SCRC-YUKON by MIT-OZ via Chaosnet; 24 Jan 84 14:38-EST
Date: Tuesday, 24 January 1984, 14:27-EST
From: Robert W. Kerns <RWK at SCRC-YUKON>
Subject: semi-colon parsing
To: SAZ at MIT-OZ
Cc: bug-zmacs at MIT-OZ, bug-emacs at MIT-OZ
In-reply-to: The message of 23 Jan 84 20:29-EST from SAZ at MIT-OZ
Message-ID: <840124142759.7.RWK@YUKON.SCRC.Symbolics>

    Date: Mon 23 Jan 84 20:29:50-EST
    From: SAZ@MIT-OZ
    Does it strike anybody as annoying that control-E takes you to
    the end of a commented line (ie to the end of the comment) rather
    than just the end of the final s-expr on the line?  I know I sure
    do. 
    How about a control-E that takes you to the end of the final bit
    of CODE on the line, then, if another control-E is done, you can
    access the end of the comment text?  IE, if I already am at the
    following place: (cursorpos <== *)

    hsdofh ihofdh)))*	;This function just dies every time

    and I do a control-E, the cursor will move to the end of the word
    "time"...

Well, it's a half-good idea, at least.  I just put the following
into my LISPM-INIT.  I wouldn't want to change what c-E does, since
it's so fundamental (and symetric with c-A).  I made the analogy be
with m-;, m-N, and m-P, for s-;, s-N, and s-P.

You could easily change this to check your current position, and move to
the end of the line if you're already at the position determined here.

zwei:
(defcom com-end-of-expression-line
	"Go to the end of a line, or the last expression before the comments."
  (km)
  (let* ((line (bp-line (point)))
	 (comment (find-comment-start line))
	 (end (1+ (if comment
		      (string-reverse-search-not-set *blanks* line comment)
		    (1- (line-length line))))))
    (move-bp (point) line end))
  dis-bps)

zwei:
(defcom com-down-expression-line
	"Go to the end of the next line, before the comments."
  (km r)
  (com-down-real-line)
  (com-end-of-expression-line))

zwei:
(defcom com-up-expression-line
	"Go to the end of the previous line, before the comments."
  (km -r)
  (com-up-real-line)
  (com-end-of-expression-line))

(zwei:set-comtab zwei:*standard-comtab* '(#\s-/; zwei:com-end-of-expression-line
					  #\s-N zwei:com-down-expression-line
					  #\s-P zwei:com-up-expression-line))
26-Jan-84 16:36:28-EST,569;000000000000
Received: from MIT-ML by MIT-OZ via Chaosnet; 26 Jan 84 16:35-EST
Date: Thursday, 26 January 1984, 16:36-EST
From: David Chapman <Zvona at MIT-OZ>
To: BUG-zwei at MIT-OZ

In zwei in Release 5.0 [Beta Test rev 4], FEP 13, imperial purple, on Lisp Machine Janis Joplin (3600):

m-X View Mail reads my mail twice.  This seems to be because

(SEND (FS:USER-HOMEDIR) ':POSSIBLE-MAIL-FILE-PATHNAMES) => 
(#<TOPS20-PATHNAME "OZ:PS:<ZVONA>OLDMAIL.TXT"> #<TOPS20-PATHNAME "OZ:PS:<ZVONA>ZVONA.BABYL">)

and each of these has an inbox pathname of oz:<zvona>mail.txt.
29-Jan-84 03:14:58-EST,422;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 29 Jan 84 03:14-EST
Date: Sunday, 29 January 1984, 03:15-EST
From: David Vinayak Wallace <Gumby at MIT-MC>
Subject: bug with #/;
To: BUG-zwei at MIT-OZ

In zwei in Release 5.0 [Beta Test rev 4], FEP 13, imperial purple, on Lisp Machine Janis Joplin (3600):


The editor is a little confused about what starts a comment:

#/;						;
followed by c-m-; produces
#/
30-Jan-84 16:55:15-EST,896;000000000000
Received: from SCRC-RIVERSIDE by MIT-OZ via Chaosnet; 30 Jan 84 16:51-EST
Received: from SCRC-NEPONSET by SCRC-RIVERSIDE with CHAOS; Mon 30-Jan-84 16:49:55-EST
Date: Monday, 30 January 1984, 16:49-EST
From: Mike McMahon <MMcM at SCRC-TENEX>
Subject: bug with #/;
To: David Vinayak Wallace <Gumby at MIT-MC>
cc: BUG-zwei at MIT-OZ
In-Reply-To: The message of 29 Jan 84 03:15-EST from David Vinayak Wallace <Gumby at MIT-MC>
Message-ID: <840130164900.0.MMcM@SCRC.SCRC.Symbolics>

    Date: Sunday, 29 January 1984, 03:15-EST
    From: David Vinayak Wallace <Gumby at MIT-MC>

    In zwei in Release 5.0 [Beta Test rev 4], FEP 13, imperial purple, on Lisp Machine Janis Joplin (3600):


    The editor is a little confused about what starts a comment:

    #/;						;
    followed by c-m-; produces
    #/

Were you in Text or Fundamental mode?  Only Lisp mode understands /.
30-Jan-84 23:05:46-EST,1951;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 30 Jan 84 23:05-EST
Date: Monday, 30 January 1984, 23:05-EST
From: David Vinayak Wallace <Gumby at MIT-MC>
Subject: Find-file broken?
To: BUG-ZWEI at MIT-OZ

In Release 5.0 [Beta Test rev 4], FEP 13, imperial purple, on Lisp Machine Robot-4 (3600):

I tried ^X^F while my current buffer was *Buffer-1*.  My home machine is MC.

>>Error: Attempt to make both type and version :UNSPECIFIC in ITS pathname MC: GUMBY; GUMBY.
While in the function (:METHOD FS:ITS-PATHNAME-MIXIN :AFTER :VALIDATE)  (:METHOD FS:ITS-PATHNAME :COMBINED :VALIDATE)  (:METHOD FS:PATHNAME-HASH-TABLE-MIXIN :GET-PATHNAME)

ZWEI:COM-FIND-FILE:  (P.C. = 3)

ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
   Arg 0 (COMMAND): ZWEI:COM-FIND-FILE
   Arg 1 (CHAR): 326.
   Arg 2 (PREFIX-CHAR): 344.
   --Defaulted args:--
   Arg 3 (HOOK-LIST): NIL

ZWEI:MAKE-EXTENDED-COMMAND-INTERNAL:  (P.C. = 77)

SYS:CALL-FUNNY-FUNCTION:  (P.C. = 101)
   Arg 0 (FUNCTION): #<DTP-CLOSURE 67327467>
   Rest arg (ARGS): NIL

Closure of ZWEI:MAKE-EXTENDED-COMMAND-INTERNAL:

ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
   Arg 0 (COMMAND): #<DTP-CLOSURE 67327467>
   Arg 1 (CHAR): 344.
   Arg 2 (PREFIX-CHAR): NIL
   Arg 3 (HOOK-LIST): NIL

ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
   Arg 0 (CH): 344.

(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 200)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 75712030>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:EDITOR -- 11. IV's, 0. FL's 102171603>
   Arg 2 (OPERATION): :EDIT
   --Defaulted args:--
   Arg 3 (TOP-LEVEL-P): T
   Arg 4 (DESCRIPTION): NIL

Rest of stack:
(:INTERNAL (:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT) 0.):  (P.C. = 15)
(:METHOD ZWEI:EDITOR :WHOPPER :EDIT):  (P.C. = 12)  (from MC: GUMBY; ZLIB)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 36)  (from MC: GUMBY; ZLIB)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
 1-Feb-84 02:12:11-EST,517;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 1 Feb 84 02:11-EST
Date: Wednesday, 1 February 1984, 01:07-EST
From: Tim Mcnerney <TIM at MIT-OBERON>
To: BUG-ZWEI at MIT-OZ

In ZWEI in Don't-dump-a-band! Inconsistent (unreleased patches loaded) System 98.32,
CADR 3.6, ZMail 53.9, MIT-Specific 22.0, microcode 306,
on Lisp Machine Thirty-two:

(this is a bug in system 98.30)

from cold boot:

(login 'tim 'obi)
...
<system>-E
m-X Dired

...and it tells me that the default is "OZ:PS:<>*.*.*"  !!!!!
 1-Feb-84 02:55:14-EST,586;000000000000
Received: from MIT-XX by MIT-OZ via Chaosnet; 1 Feb 84 02:55-EST
Date: Wednesday, 1 February 1984, 02:53-EST
From: Tim Mcnerney <TIM at MIT-OBERON>
To: BUG-ZWEI at MIT-OZ

In ZWEI in Don't-dump-a-band! Inconsistent (unreleased patches loaded) System 98.32,
CADR 3.6, ZMail 53.9, MIT-Specific 22.0, microcode 306,
on Lisp Machine Thirty-two:

m-X Select All Buffers As Tag Table
m-X Tags Search ...

...it searched through a few buffers, and then started to read in
files that were already in buffers!  It read them using explicit
version numbers, if that means anything.
 3-Feb-84 02:51:33-EST,594;000000000000
Received: from MIT-ROBOT-4 by MIT-OZ via Chaosnet; 3 Feb 84 02:51-EST
Date: Friday, 3 February 1984, 02:50-EST
From: Henry Minsky <HQM at MIT-OZ>
Subject: meta-. bug
To: BUG-zwei at MIT-OZ

In zwei in Release 5.0 [Beta Test rev 4], Experimental Schema 10.4,
FEP 13, imperial purple, on Lisp Machine Robot-4 (3600):

WHen I do a Meta-. on a symbol who is defined as both a flavor
and a function, I get sent to one of them, and ZWEI says

1 more definition as well.

But when I try a control-. , it says no more possibilities.
It is thus impossible to see the other definition.

 3-Feb-84 11:52:25-EST,904;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 3 Feb 84 11:49-EST
Received: from SCRC-THAMES by SCRC-QUABBIN with CHAOS; Fri 3-Feb-84 11:46:44-EST
Date: Friday, 3 February 1984, 11:48-EST
From: Scott McKay <SWM at SCRC-QUABBIN>
Subject: meta-. bug
To: HQM at MIT-OZ, BUG-zwei at MIT-OZ
In-reply-to: The message of 3 Feb 84 02:50-EST from Henry Minsky <HQM at MIT-OZ>

    Date: Friday, 3 February 1984, 02:50-EST
    From: Henry Minsky <HQM at MIT-OZ>

    In zwei in Release 5.0 [Beta Test rev 4], Experimental Schema 10.4,
    FEP 13, imperial purple, on Lisp Machine Robot-4 (3600):

    WHen I do a Meta-. on a symbol who is defined as both a flavor
    and a function, I get sent to one of them, and ZWEI says

    1 more definition as well.

    But when I try a control-. , it says no more possibilities.
    It is thus impossible to see the other definition.

c-U m-.
 3-Feb-84 12:09:03-EST,1255;000000000000
Received: from SCRC-YUKON by MIT-OZ via Chaosnet; 3 Feb 84 12:08-EST
Date: Friday, 3 February 1984, 12:06-EST
From: Robert W. Kerns <RWK at SCRC-YUKON>
Subject: meta-. bug
To: Henry Minsky <HQM at MIT-OZ>
Cc: BUG-zwei at MIT-OZ
In-reply-to: The message of 3 Feb 84 02:50-EST from Henry Minsky <HQM at MIT-OZ>
Message-ID: <840203120610.5.RWK@YUKON.SCRC.Symbolics>

    Date: Friday, 3 February 1984, 02:50-EST
    From: Henry Minsky <HQM at MIT-OZ>

    In zwei in Release 5.0 [Beta Test rev 4], Experimental Schema 10.4,
    FEP 13, imperial purple, on Lisp Machine Robot-4 (3600):

    WHen I do a Meta-. on a symbol who is defined as both a flavor
    and a function, I get sent to one of them, and ZWEI says

    1 more definition as well.

    But when I try a control-. , it says no more possibilities.
    It is thus impossible to see the other definition.


You should type c-U m-.  See page 13 of the "Program Development
Help Facilities" document.

The reason c-U m-. is used rather than c-. is to make it
independent of going through a list of possibilities,
such as in Edit Callers.  You don't want to be forced
to go to each definition of each caller, just look at
each caller.  Or at least, that's the theory.
 3-Feb-84 20:11:53-EST,1553;000000000000
Mail-From: SAZ created at  3-Feb-84 20:11:37
Date: Fri 3 Feb 84 20:11:37-EST
From: SAZ@MIT-OZ
Subject: Arg to meta-;
To: bug-zwei@MIT-OZ


How about instead of an optional numerical arg to m-; which "re-aligns
existing comments for n lines," take away the optional arg and make
m-; automatically either move the cursor to the column *COMMENT-COLUMN*
and type out a ; if none exists already, OR if there is a comment on 
the current line, m-; sets the comment string to the right place on
the present line AS WELL AS ALL SUBSEQUENT LINES WITH COMMENTS?

I'm sure nobody who ever passes m-; an argument (except possibly
those who pass it the arg n where n = # of lines in the file)
doesn't want all of the comment to be justified for the rest
of the definition (or the comment).   Those who do pass in 750 to
meta-;  , well, yes, you would be inconvenienced, having to do
a m-; followed by some c-N's then another m-; etc., so why not
keep the arg to meta-; the way it is, and just modify the NON-ARGed
implementation of the macro to what I suggest above?  I think this
wins -- I can't for the life of me come up with an instance where
I'm at the beginning of a long commented line and want a m-; but
don't want the whole columns of semi-colons to line up in the
*COMMENT-COLUMN* column.

Come to think of it, an even BETTER way to improve it might be
to have it work like m-Q, in that it looks both forward and
backwards til it comes to a line without a semicolon in it...


Tell me what you think...

---Dave
-------
 3-Feb-84 20:50:05-EST,687;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 3 Feb 84 20:49-EST
Date: 3 February 1984 20:49 EST
From: David Vinayak Wallace <GUMBY @ MIT-MC>
Subject:  Arg to meta-;
To: SAZ @ MIT-OZ
cc: bug-zwei @ MIT-OZ
In-reply-to: Msg of Fri 3 Feb 84 20:11:37-EST from SAZ%MIT-OZ at MIT-MC.ARPA


    Date: Fri 3 Feb 84 20:11:37-EST
    From: SAZ%MIT-OZ at MIT-MC.ARPA
    Tell me what you think...


I think you should write your own and see if you like the behavior.
But anyway, I implemented precomma-arguments a la TECO so that you can
supply BOTH arguments (your new one and the old) to the function.
Then you can extend it without changing the existing fuctionality.

david
 4-Feb-84 02:40:38-EST,727;000000000000
Received: from MIT-EECS by MIT-OZ via Chaosnet; 4 Feb 84 02:40-EST
Date: Saturday, 4 February 1984, 02:36-EST
From: Barry Margolin <Margolin at MIT-MULTICS>
Sender: Margolin at MIT-MULTICS
Subject: 
         Copy File warnings
To: BUG-ZWEI at MIT-OZ

In ZWEI in System 242.269, FEP 18, imperial purple, on Lisp Machine Keith Moon (3600):

Warnings printed by Meta-X Copy File should start with "~&".  They way
they currently come out is difficult to read, as they start immediately
after the pathname, without even an intervening space, and they
generally end up wrapping.  It might also be useful to separate the
messages that have to do with each different file by a blank line when a
wildcard name was used.
 6-Feb-84 20:48:31-EST,524;000000000000
Mail-From: ZVONA created at  6-Feb-84 20:48:13
Date: Mon, 6 Feb 1984  20:48 EST
Message-ID: <ZVONA.11989699826.BABYL@MIT-OZ>
From: ZVONA@MIT-OZ
To:   bug-zwei@MIT-OZ, bug-emacs@MIT-OZ
Subject: feature suggestion: c-X G

c-X G puts point at the beginning of the text it snarfs into the
buffer.  I often wish it would put it at the end.  Suppose that c-X X
saved an extra bit of state that said which end of the region point
was at when you save to the q-register.  Then c-X G would put you back
at that same end.
 6-Feb-84 22:34:37-EST,791;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 6 Feb 84 22:32-EST
Received: from SCRC-EUPHRATES by SCRC-QUABBIN with CHAOS; Mon 6-Feb-84 22:35:13-EST
Date: Monday, 6 February 1984, 22:31-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: feature suggestion: c-X G
To: ZVONA at MIT-OZ
Cc: bug-zwei at MIT-OZ, bug-emacs at MIT-OZ
In-reply-to: <ZVONA.11989699826.BABYL@MIT-OZ>

    Date: Mon, 6 Feb 1984  20:48 EST
    From: ZVONA@MIT-OZ

    c-X G puts point at the beginning of the text it snarfs into the
    buffer.  I often wish it would put it at the end.

When I try it, c-X G behaves consistently with c-Y.  It puts point at
the end of the text, while c-U c-X G puts point at the beginning.
Maybe it was different in an older system, or is different in Emacs?
 6-Feb-84 22:39:49-EST,413;000000000000
Mail-From: ZVONA created at  6-Feb-84 22:37:51
Date: Mon, 6 Feb 1984  22:37 EST
Message-ID: <ZVONA.11989719781.BABYL@MIT-OZ>
From: ZVONA@MIT-OZ
To:   "David A. Moon" <Moon@SCRC-TENEX>
Cc:   bug-emacs@MIT-OZ, bug-zwei@MIT-OZ
Subject: feature suggestion: c-X G
In-reply-to: Msg of 6 Feb 1984 22:31-EST from David A. Moon <Moon at SCRC-TENEX>

Oh.  I was being faked out by Zwei and Emacs being different.
 7-Feb-84 03:20:38-EST,543;000000000000
Received: from MIT-LISPM-1 by MIT-OZ via Chaosnet; 7 Feb 84 03:20-EST
Date: Tuesday, 7 February 1984, 03:21-EST
From: Kim A. Barrett <kab at MIT-OZ>
To: BUG-ZWEI at MIT-OZ

In ZWEI in Don't-dump-a-band! Inconsistent (unreleased patches loaded) System 98.34,
CADR 3.6, ZMail 53.10, MIT-Specific 22.0, microcode 306,
on Lisp Machine One:

In Text Mode, parens on the same line with a ";" between them don't get matched, ie. they
don't get flashed when the cursor is on the "matching" paren, and c-( won't match them
properly either.
11-Feb-84 16:48:02-EST,1941;000000000000
Received: from MIT-APIARY-7 by MIT-OZ via Chaosnet; 11 Feb 84 16:47-EST
Date: Saturday, 11 February 1984, 16:44-EST
From: J. Blair Amsterdam <JBA at MIT-OZ>
Subject: saving word abbrev file
To: BUG-ZMACS at MIT-OZ

In Release 5.0 [GC'd Beta Test rev 3], microcode TMC5-MIC 262, FEP 18,
corrected dusty plum, on Lisp Machine Apiary-7 (3600):

I tried to save my word-abbrev file from ZMACS (using M-X Save All
Files, but the same thing happens with M-X Write Word Abbrev File).  

>>Trap: The subscript given to the AR-1 instruction, -2 (from local variable SI:INDEX2), was not a non-negative fixnum.
While in the function %STRING-EQUAL  STRING-EQUAL  ZWEI:WRITE-QWABL

%STRING-EQUAL:  (P.C. = 37)
   Arg 0 (STRING1): "-ABBREV"
   Arg 1 (INDEX1): 0
   Arg 2 (STRING2): "POINT"
   Arg 3 (INDEX2): -2
   Arg 4 (COUNT): NIL

STRING-EQUAL:  (P.C. = 75)
   Arg 0 (STRING1): "-ABBREV"
   Arg 1 (STRING2): ZWEI:POINT
   Arg 2 (IDX1): 0
   Arg 3 (IDX2): -2
   --Defaulted args:--
   Arg 4 (LIM1): NIL
   Arg 5 (LIM2): NIL

ZWEI:WRITE-QWABL:  (P.C. = 45)
   Arg 0 (STREAM): #<FILE-OUTPUT-CHARACTER-STREAM "OZ:PS:<JBA>FOO.QWABL" 34651656>

ZWEI:COM-WRITE-WORD-ABBREV-FILE-INTERNAL:  (P.C. = 10)
   Arg 0 (FN): #<TOPS20-PATHNAME "OZ:PS:<JBA>FOO.QWABL">

ZWEI:COM-SAVE-WORD-ABBREV-FILE-INTERNAL:  (P.C. = 40)
   Arg 0 (WHEN): :ASK

ZWEI:COM-SAVE-ALL-FILES:  (P.C. = 71)

ZWEI:COM-EXTENDED-COMMAND:  (P.C. = 27)

ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
   Arg 0 (COMMAND): ZWEI:COM-EXTENDED-COMMAND
   Arg 1 (CHAR): 1130
   Arg 2 (PREFIX-CHAR): NIL
   Arg 3 (HOOK-LIST): (ZWEI:RETURN-TO-PREVIOUS-CONTEXT-HOOK-FUNCTION ZWEI:EXPAND-ABBREV-HOOK ZWEI:SHIFT-LOCK-HOOK)

Rest of stack:
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 200)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 41)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
12-Feb-84 17:55:56-EST,1298;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 12 Feb 84 17:55-EST
Received: from SCRC-YANGTZE by SCRC-QUABBIN with CHAOS; Sun 12-Feb-84 17:52:37-EST
Return-path: <CWH%SCRC-YANGTZE@MIT-MC.ARPA>
Date: Sunday, 12 February 1984, 17:56-EST
From: Carl Hoffman <CWH at SCRC-TENEX>
Subject: Two suggestions
To: HQM at MIT-OZ
cc: BUG-ZWEI at MIT-OZ
In-Reply-To: Your message of 18 Jan 84 15:47-EST

    Date: Wednesday, 18 January 1984, 15:47-EST
    From: HQM@OZ <Henry Minsky at MIT-OZ>
    Subject: Two suggestions
    To: BUG-ZWEI at MIT-OZ

    In ZWEI in Release 5.0 [GC'd Beta Test rev 3], FEP 17, Dusty plum, on Lisp Machine John Lennon (3600):

    Also, this is not ZWEI related, but I think the ABORT-TRIVIAL-ERRORS feature in MIT sytems is good,
    because it bothers me to wait 3 seconds when I mistype an open paren and have the error system
    swap in.

System 247 now has such a feature.  It will be available in Release 6, or
whenever the SCRC development system becomes available at MIT.

The feature is intended to be an alternative user interface, and as a side
effect reduces the amount of time the machine spends paging before it will
listen to typein again.  The paging issue needs to be studied separately,
independently of either user interface.
14-Feb-84 00:27:02-EST,520;000000000000
Received: from MIT-ROBOT-4 by MIT-OZ via Chaosnet; 14 Feb 84 00:26-EST
Date: Tuesday, 14 February 1984, 00:31-EST
From: JCMA@MIT-OZ
Subject: META-X Fill Long Comment
To: BUG-beta-test@MIT-OZ
Cc: bug-zmacs@MIT-OZ

In beta-test in System 242.269, Experimental RELATUS 96.2, FEP 18,
imperial purple, on Lisp Machine Robot-4 (3600):

It assumes:

1) the long comment is not inside an s-expression;  

2) blank lines do not delimit the comment which the user wants filled.

Both these assumptions are false.
14-Feb-84 22:19:25-EST,1342;000000000000
Mail-From: ALAN created at 14-Feb-84 22:19:14
Date: Tue, 14 Feb 1984  22:19 EST
Message-ID: <ALAN.11991813547.BABYL@MIT-OZ>
From: Alan Bawden <ALAN@MIT-OZ>
To:   bug-zwei@MIT-OZ
Subject: [SAZ: m-X List Fonts]

Date: Tuesday, 14 February 1984  14:35-EST
From: David M. J. Saslav <SAZ>
To:   BUG-bug-zwei
Re:   m-X List Fonts

The extended command "LIST FONTS" is fine unless you
want to sample over three different fonts.  When the
screen scrolls, it wraps around and OVER THE MENU!
Naturally, once this happens, there is no longer any
way to click on a font to sample it!  Couldn't some 
window hack be devised such that the screen scrollBs
at the point on the window where the menu ends?
That way I wouldn't have to retype m-X LIST FONTS
every three fonts I sample...Equally valid (though
slightly less optimal would be a change in the tyi
such that "typing space" clears not the entire
minibuffer, but rather just the display of the font(s)
sampling currently on the screen.  Then ANOTHER space
bar hit could put you back in ZMACS buffer-1 or
wherever.

I guess that's it, but it would be nice if we could
get some more of the R20 fonts "loaded" and therefore
available for files.  I'd be interested in discovering
how to make my favorite font a "loaded font."


Thank you for your time.

---Dave Saslav
14-Feb-84 23:06:03-EST,1367;000000000000
Mail-From: GZ created at 14-Feb-84 23:05:44
Date: Tuesday, 14 February 1984  14:35-EST
Message-ID: <GZ.11991822013.BABYL@MIT-OZ>
Sender: "David M. J. Saslav" <SAZ@MIT-OZ>
From: "David M. J. Saslav" <SAZ@MIT-OZ>
To: BUG-bug-zwei@MIT-OZ
Subject:   m-X List Fonts
ReSent-From: GZ@MIT-OZ
ReSent-To: bug-zwei@MIT-OZ
ReSent-Date: Tue 14 Feb 1984 23:05-EST

The extended command "LIST FONTS" is fine unless you
want to sample over three different fonts.  When the
screen scrolls, it wraps around and OVER THE MENU!
Naturally, once this happens, there is no longer any
way to click on a font to sample it!  Couldn't some 
window hack be devised such that the screen scrollBs
at the point on the window where the menu ends?
That way I wouldn't have to retype m-X LIST FONTS
every three fonts I sample...Equally valid (though
slightly less optimal would be a change in the tyi
such that "typing space" clears not the entire
minibuffer, but rather just the display of the font(s)
sampling currently on the screen.  Then ANOTHER space
bar hit could put you back in ZMACS buffer-1 or
wherever.

I guess that's it, but it would be nice if we could
get some more of the R20 fonts "loaded" and therefore
available for files.  I'd be interested in discovering
how to make my favorite font a "loaded font."


Thank you for your time.

---Dave Saslav
17-Feb-84 02:46:46-EST,399;000000000000
Received: from MIT-APIARY-5 by MIT-OZ via Chaosnet; 17 Feb 84 02:46-EST
Date: Friday, 17 February 1984, 02:45-EST
From: JCMA@MIT-OZ
Subject: Meta-x Fill Long Comment
To: BUG-beta-test@MIT-OZ
Cc: bug-zmacs@MIT-OZ

In beta-test in System 242.269, Experimental RELATUS 97.21, FEP 18,
imperial purple, on Lisp Machine Apiary-5 (3600):

It loses when the comment line begins with a font spec.
18-Feb-84 00:16:47-EST,585;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 18 Feb 84 00:16-EST
Date: Saturday, 18 February 1984, 00:14-EST
From: Tim McNerney <TIM at MIT-MC>
Subject: Set Visited File Name
To: BUG-ZWEI at MIT-OZ

In ZWEI in System 98.32, CADR 3.6, ZMail 53.10, MIT-Specific 22.0,
microcode 306, on Lisp Machine Thirty-one:

ZWEI does not merge the current buffer name with the pathname default.

If the name of the buffer is "markbug.lsp" and the pathname default
is "OBI:USRD$:[TIM]STEVEBUGS.LSP", then the default should be
"OBI:USRD$:[TIM]MARKBUG.LSP" not "OBI:USRD$:[TIM]FOO.LSP"
20-Feb-84 04:01:11-EST,965;000000000000
Received: from MIT-XX by MIT-OZ via Chaosnet; 20 Feb 84 04:00-EST
Date: Sunday, 19 February 1984, 18:42-EST
From: scott a douglass <SAD at MIT-XX>
Subject: zmacs multics lossage
To: BUG-zmacs at MIT-OZ

In zmacs in Release 5.0 [GC'd Beta Test rev 3], microcode TMC5-MIC 262,
FEP 18, corrected dusty plum, on Lisp Machine Robot-1 (3600):

while logged in as namespace user object "sad" I tryied to save a file to
multics (i.e. c-X c-W multics:test).  This didn't work and it broke  all of
the save commands I could find.  The error message was:  (copied by hand)

>>Trap: The argument given to the car instruction, "sad", was not a list, locative or nil.

(:defun-method fs:multics-directory-string):
   Arg 0 (self): #<MULTICS-PATHNAME <<Error printing value>>
   Arg 1 (self-mapping-table): #<Map to flavor fs:multics-pathname-mixin -- 4. IV's, 1. FL's 25263747>

note that the first argument really did have unmatched <>'s. Thanks.
			-scott
21-Feb-84 20:50:44-EST,729;000000000000
Received: from MIT-ROBOT-4 by MIT-OZ via Chaosnet; 21 Feb 84 20:50-EST
Date: Tuesday, 21 February 1984, 20:49-EST
From: Steven Bagley <bagley at MIT-OZ>
Subject: View Mail views the mail.txt file twice
To: BUG-zwei at MIT-OZ

In zwei in Release 5.0 [Beta Test rev 4], FEP 18, imperial purple, on Lisp Machine Robot-4 (3600):

M-X View Mail views my mail twice.  this appears to be because in the
code for view mail
(SEND (FS:USER-HOMEDIR) ':POSSIBLE-MAIL-FILE-PATHNAMES) 
evaluates to 
(#<TOPS20-PATHNAME "OZ:PS:<BAGLEY>OLDMAIL.TXT"> #<TOPS20-PATHNAME "OZ:PS:<BAGLEY>BAGLEY.BABYL">)
both of which have an :inbox-pathname of 
#<TOPS20-PATHNAME "OZ:PS:<BAGLEY>MAIL.TXT.1">

So it looks at the same file twice.  

21-Feb-84 23:09:31-EST,835;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 21 Feb 84 23:09-EST
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK with CHAOS; Tue 21-Feb-84 23:12:33-EST
Date: Tuesday, 21 February 1984, 23:14-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: View Mail views the mail.txt file twice
To: Steven Bagley <bagley at MIT-OZ>, bug-beta-test at SCRC-TENEX
Cc: BUG-zwei at MIT-OZ
In-reply-to: The message of 21 Feb 84 20:49-EST from Steven Bagley <bagley at MIT-OZ>

    Date: Tuesday, 21 February 1984, 20:49-EST
    From: Steven Bagley <bagley at MIT-OZ>

    In zwei in Release 5.0 [Beta Test rev 4], FEP 18, imperial purple, on Lisp Machine Robot-4 (3600):

    M-X View Mail views my mail twice.

This was fixed by 243.532.  Someone on bug-beta-test can tell you when that patch
will appear in a release.
23-Feb-84 11:54:37-EST,467;000000000000
Received: from MIT-APIARY-9 by MIT-OZ via Chaosnet; 23 Feb 84 11:54-EST
Date: Thursday, 23 February 1984, 11:53-EST
From: Henry Lieberman <Henry at MIT-OZ>
Subject: Execute Into Buffer Meta-X View Directory
To: BUG-Zwei at MIT-OZ

In Zwei in Release 5.0 [Beta Test rev 4], FEP 18, imperial purple, on APIARY-9 (3600):

Execute Into Buffer Meta-X View Directory
doesn't put the result into the buffer, whereas something like 
Meta-X List Definitions works.
10-Mar-84 13:57:18-EST,540;000000000000
Received: from MIT-JOE-LOUIS by MIT-OZ via Chaosnet; 10 Mar 84 13:56-EST
Date: Saturday, 10 March 1984, 13:57-EST
From: Jeffrey N Eisen <JNE at MIT-OZ>
Subject: Good Zwei idea.
To: BUG-ZWEI at MIT-OZ

In ZWEI in System 242.269, Experimental Schema 18.2, imperial purple, on Lisp Machine Joe Louis (3600):

How come there isn't any facility (at least that I know of)
in Zwei similar to the "set \" in the inspector.  It would be
nice if a region could be evaluated "into a variable" such as \
or something similar.

Jeff Eisen
11-Mar-84 17:51:51-EST,1424;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 11 Mar 84 17:51-EST
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK with CHAOS; Sun 11-Mar-84 17:52:18-EST
Date: Sunday, 11 March 1984, 17:50-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: Good Zwei idea.
To: Jeffrey N Eisen <JNE at MIT-OZ>
Cc: BUG-ZWEI at MIT-OZ
In-reply-to: The message of 10 Mar 84 13:57-EST from Jeffrey N Eisen <JNE at MIT-OZ>

    Date: Saturday, 10 March 1984, 13:57-EST
    From: Jeffrey N Eisen <JNE at MIT-OZ>

    In ZWEI in System 242.269, Experimental Schema 18.2, imperial purple, on Lisp Machine Joe Louis (3600):

    How come there isn't any facility (at least that I know of)
    in Zwei similar to the "set \" in the inspector.  It would be
    nice if a region could be evaluated "into a variable" such as \
    or something similar.

I usually use m-W, Suspend, c-Y to copy the region into the input editor,
where I can easily enclose it in a SETQ or a function call.  Of course you can
do the same thing directly in the editor, but then you've modified your
buffer. This seems like a bit of a kludge, but it works fairly smoothly.

You couldn't do something like this in the Inspector, since you are pointing
at objects, not evaluating expressions (text).

A good question is whether the c-sh-E command in the editor should set
the variables + and *.  I guess there are arguments both ways.
12-Mar-84 17:38:58-EST,1200;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 12 Mar 84 17:30-EST
Received: from SCRC-AMAZON by SCRC-STONY-BROOK with CHAOS; Mon 12-Mar-84 17:21:32-EST
Date: Monday, 12 March 1984, 17:21-EST
From: Philip Greenspun <philg at SCRC-QUABBIN>
Subject: Good Zwei idea.
To: David A. Moon <Moon at SCRC-TENEX>
Cc: Jeffrey N Eisen <JNE at MIT-OZ>, BUG-ZWEI at MIT-OZ
In-reply-to: The message of 11 Mar 84 17:50-EST from David A. Moon <Moon at SCRC-TENEX>

    Date: Sunday, 11 March 1984, 17:50-EST
    From: David A. Moon <Moon at SCRC-TENEX>

    A good question is whether the c-sh-E command in the editor should set
    the variables + and *.  I guess there are arguments both ways.

Here's one vote in favor of setting + and *.  Setting + isn't going to
make anyone scream because of our winning new input history.  People
seem to use * most immediately after typing something at a lisp listener
and therefore I don't think most people would complain if * weren't the
same after coming back to the break window.  If anyone really cares,
they can use System-L instead of "Suspend".  If we do this, I think it
should be made apparent in the online documentation for c-sh-E.
13-Mar-84 23:24:59-EST,534;000000000000
Received: from MIT-LISPM-25 by MIT-OZ via Chaosnet; 13 Mar 84 23:24-EST
Date: Tuesday, 13 March 1984, 23:24-EST
From: Robert P. Krajewski <RpK at MIT-OZ>
Subject: Suggestion
To: BUG-ZWEI at MIT-OZ
Message-ID: <[MIT-LISPM-25].3/13/84 23:24:44.RpK>

In ZWEI in Don't-dump-a-band! Inconsistent (unreleased patches loaded) System 98.39,
CADR 3.6, ZMail 53.13, MIT-Specific 22.0, microcode 306,
on Lisp Machine Twenty-five:

.DOC file type should be considered for Text mode.  (It currenly uses
Lisp, the default.)

``Bob''
15-Mar-84 16:18:53-EST,541;000000000000
Received: from MIT-LISPM-30 by MIT-OZ via Chaosnet; 15 Mar 84 16:17-EST
Date: Thursday, 15 March 1984, 16:19-EST
From: Patrick G. Sobalvarro <PGS at MIT-OZ>
Subject: #\; in lists
To: BUG-ZWEI at MIT-OZ

In ZWEI in System 98.37, CADR 3.6, ZMail 53.13, MIT-Specific 22.0,
microcode 309, ZM MIT, on Lisp Machine Thirty:

#\; confuses Zwei with respect to lists.

(DEFPARAMETER *LMB-DELIMITERS*
	(LIST #\SPACE #\+ #\- #\* #\/ *LEFT-BRACKET* *RIGHT-BRACKET*
	      #\( #\) #\;))

C-M-B after the previous defparameter won't work.
16-Mar-84 03:34:21-EST,321;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 16 Mar 84 03:34-EST
Date: Friday, 16 March 1984, 03:36-EST
From: Tim McNerney <TIM at MIT-MC>
Subject: set visited filename lossage
To: bug-zwei at MIT-MC

gratuitously sets the buffer modified bit and
doesn't let m-~ restore the modified bit to its
original state.
16-Mar-84 11:50:14-EST,521;000000000000
Mail-From: RMS created at 16-Mar-84 11:49:47
Date: Fri 16 Mar 84 11:49:47-EST
From: RMS@MIT-OZ
To: bug-zwei@MIT-OZ, tim@MIT-OZ

The buffer is modified after Set Visited Filename so tht it will be
saved in its new location.  That M-~ does not work
is probably a consequence of te way th data is stored.
There is no "modified bit".  The buffer is modified
becuase it has never been read or saved, and there is no
way to change that fact.  I don't know if thre is any natural
way to enable M-~ to work.
-------
18-Mar-84 20:04:58-EST,890;000000000000
Received: from MIT-LISPM-31 by MIT-OZ via Chaosnet; 18 Mar 84 20:04-EST
Date: Sunday, 18 March 1984, 20:05-EST
From: Patrick G. Sobalvarro <pgs at MIT-OZ>
Subject: broken parenthesis blinking
To: BUG-ZWEI at MIT-OZ

In ZWEI in Don't-dump-a-band! Inconsistent (unreleased patches loaded) System
98.39, CADR 3.6, ZMail 53.13, MIT-Specific 22.0, microcode 309, ZM MIT, on Lisp
Machine Thirty-one:

I have a very long function (several pages long) in a file of Lisp code.  The
function is as long as it is because the code is a model for a machine-language
program that includes branches, and the body of the function is a big prog.
The problem is that inside the body of this prog, parenthesis-blinking has
ceased to function.  Matching parens aren't blinked, although C-M-B and C-M-F
still work.  The function is called LMB-EVAL, and it is in the file
OZ:<PGS.LOGO>LMB.LISP.
27-Mar-84 10:08:57-EST,984;000000000000
Received: from MIT-TWEETY-PIE by MIT-OZ via Chaosnet; 27 Mar 84 10:06-EST
Date: Tuesday, 27 March 1984, 10:06-EST
From:  <dove at MIT-TWEETY-PIE>
Subject: auto fill comments
To: BUG-zwei at MIT-OZ

In zwei in Release 5.0 [Beta Test rev 7], on Lisp Machine Tweety Pie (3600):

It turns out, that due to the workings of fill long comment, if ALL
lines in the comment containing ";;" have at least one space after the
semi's (i.e. even "blank" lines have a space after the semi's) then fill
long comment will leave space between the semi's and the text.  One can
either leave "blank" lines totally blank (i.e. no semi's) or put a space
after them.

This is because fill long comment looks for the shortest comment prefix
in the long comment, and uses that as the fill prefix.

It would be nice it would (perhaps optionally) insert a space after the
semi's when the fill prefix turns out to be just semi's, so it would be
compatible with auto fill lisp comment mode.
27-Mar-84 15:44:22-EST,1733;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 27 Mar 84 15:21-EST
Received: from SCRC-MERRIMACK by SCRC-STONY-BROOK with CHAOS; Tue 27-Mar-84 15:07:03-EST
Date: Tuesday, 27 March 1984, 15:03-EST
From: Mike McMahon <MMcM at SCRC-TENEX>
Subject: auto fill comments
To: dove at MIT-TWEETY-PIE
cc: BUG-zwei at MIT-OZ, bug-beta-test at SCRC-YUKON
In-Reply-To: The message of 27 Mar 84 10:06-EST from dove at MIT-TWEETY-PIE
Message-ID: <840327150305.6.MMcM@TENEX.SCRC.Symbolics>

    Date: Tuesday, 27 March 1984, 10:06-EST
    From:  <dove at MIT-TWEETY-PIE>

    In zwei in Release 5.0 [Beta Test rev 7], on Lisp Machine Tweety Pie (3600):

    It turns out, that due to the workings of fill long comment, if ALL
    lines in the comment containing ";;" have at least one space after the
    semi's (i.e. even "blank" lines have a space after the semi's) then fill
    long comment will leave space between the semi's and the text.  One can
    either leave "blank" lines totally blank (i.e. no semi's) or put a space
    after them.

    This is because fill long comment looks for the shortest comment prefix
    in the long comment, and uses that as the fill prefix.

    It would be nice it would (perhaps optionally) insert a space after the
    semi's when the fill prefix turns out to be just semi's, so it would be
    compatible with auto fill lisp comment mode.

m-X Fill Long Comment was fixed a while ago to act more like m-Q.  A
line with just semi's acts as a paragraph break.  Only lines within the
paragraph itself are used to determine the length of the fill prefix.
And unless there is a region, only one paragraph is filled.

This will appear fixed in some future release.
28-Mar-84 03:19:07-EST,451;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 28 Mar 84 03:18-EST
Date: Wednesday, 28 March 1984, 03:20-EST
From: Devon S. McCullough <Devon at MIT-MC>
To: BUG-zmacs at MIT-OZ

In zmacs in System 98.37, CADR 3.6, ZMail 53.13, MIT-Specific 22.0,
microcode 309, ZM MIT, on Lisp Machine Thirty:

c-X c-B fails to show the file version number for the file oz:<emacs>teco.0
which I got by doing m-X tag search, using the oz:<emacs>teco.tag file.
31-Mar-84 14:00:46-EST,990;000000000000
Received: from MIT-APIARY-8 by MIT-OZ via Chaosnet; 31 Mar 84 14:00-EST
Date: Saturday, 31 March 1984, 13:59-EST
From: David Chapman <Zvona at MIT-OZ>
Subject: split screen c-x o errs on negative arg
To: BUG-zwei at MIT-OZ

In Release 5.0 [Beta Test rev 7], FEP 18, on Lisp Machine Apiary-8 (3600):

This is with three buffer windows.  c- - c-x o.  I expected that to go
in the opposite direction around the set of windows from c-x o.

Say, the documentation for c-x o talks about ``the'' other window.  I
use three moderately often.

>>Error: The argument N to NTH, -1, was of the wrong type.
         The function expected a non-negative integer.
While in the function NTH  ZWEI:OTHER-WINDOW  ZWEI:COM-OTHER-WINDOW

NTH:  (P.C. = 26)
   Arg 0 (N): -1
   Arg 1 (OBJECT): (#<WINDOW 4013414> #<WINDOW 75425377> #<WINDOW 5552537>)
   Local 2 (N): SI:N
   Local 3 (OBJECT): -1

ZWEI:OTHER-WINDOW:  (P.C. = 37)
   Arg 0 (N): -1

ZWEI:COM-OTHER-WINDOW:  (P.C. = 5)
 1-Apr-84 11:23:14-EST,642;000000000000
Received: from MIT-BUDDY by MIT-OZ via Chaosnet; 1 Apr 84 11:23-EST
Date: Sunday, 1 April 1984, 11:24-EST
From: Steven C. Bagley <bagley at MIT-OZ>
Subject: zwei creates new buffers when switching selected windows.
To: BUG-LISPM at MIT-OZ, bug-zwei at MIT-OZ

In Release 5.0 [Beta Test rev 7], on Lisp Machine Buddy Holly (3600):

in zwei, save out the current buffer using c-x c-s.  IMMEDIATELY (before
it finishes saving the file), type select-T.  Type some stuff to the
foreign system, waiting for the file write to finish.  Switch back to
zwei using select-E.  Zwei will create a new buffer (*BUFFER-n* style)
and select it.
 2-Apr-84 14:56:46-EST,307;000000000000
Received: from MIT-MORRISON by MIT-OZ via Chaosnet; 2 Apr 84 14:54-EST
Date: Monday, 2 April 1984, 14:50-EST
From: David Chapman <Zvona at MIT-OZ>
To: bug-zwei at MIT-OZ

macro-stream-io handles :which-operations, but not :operation-handled-p
or :get-handler-for, which makes the three inconsistent.
 2-Apr-84 15:46:31-EST,805;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 2 Apr 84 15:46-EST
Received: from SCRC-MERRIMACK by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 12717; Mon 2-Apr-84 15:46:18-EST
Date: Monday, 2 April 1984, 15:46-EST
From: Mike McMahon <MMcM at SCRC-TENEX>
To: David Chapman <Zvona at MIT-OZ>
cc: bug-zwei at MIT-OZ
In-Reply-To: The message of 2 Apr 84 14:50-EST from David Chapman <Zvona at MIT-OZ>
Message-ID: <840402154653.2.MMcM@TENEX.SCRC.Symbolics>

    Date: Monday, 2 April 1984, 14:50-EST
    From: David Chapman <Zvona at MIT-OZ>

    macro-stream-io handles :which-operations, but not :operation-handled-p
    or :get-handler-for, which makes the three inconsistent.

Doesn't it end up calling stream-default-handler?  Did you actually have
an application that failed?
 2-Apr-84 16:19:51-EST,435;000000000000
Mail-From: ZVONA created at  2-Apr-84 16:19:32
Date: Mon, 2 Apr 1984  16:19 EST
Message-ID: <ZVONA.12004330978.BABYL@MIT-OZ>
From: ZVONA@MIT-OZ
To:   Mike McMahon <MMcM@SCRC-TENEX>
Cc:   bug-zwei@MIT-OZ
In-reply-to: Msg of 2 Apr 1984 15:46-EST from Mike McMahon <MMcM at SCRC-TENEX>

Yes, but that doesn't get the :macro-foo messages.  No failing
application, just confusion in trying to grok the behavior.  Not
important. 
 6-Apr-84 23:45:19-EST,329;000000000000
Mail-From: ECC created at  6-Apr-84 23:45:08
Date: Fri, 6 Apr 1984  23:45 EST
Message-ID: <ECC.12005460668.BABYL@MIT-OZ>
From: Eugene Ciccarelli <ECC@MIT-OZ>
To:   bug-zwei-mit@MIT-OZ
Subject: Zmacs Question

A point of minor information:  Is the scroll bar in Zmacs the
only display of information that is non-textual?
 9-Apr-84 22:20:18-EST,571;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 9 Apr 84 22:19-EST
Date: 9 April 1984 22:15-EST
From: David Vinayak Wallace <GUMBY @ MIT-MC>
Subject:  Zmacs Question
To: ECC @ MIT-OZ
cc: bug-zwei-mit @ MIT-OZ
In-reply-to: Msg of Fri 6 Apr 1984  23:45 EST from Eugene Ciccarelli <ECC%MIT-OZ at MIT-MC.ARPA>

    Date: Fri, 6 Apr 1984  23:45 EST
    From: Eugene Ciccarelli <ECC%MIT-OZ at MIT-MC.ARPA>

    A point of minor information:  Is the scroll bar in Zmacs the
    only display of information that is non-textual?
What about the black bars in Converse?
12-Apr-84 17:53:54-EST,580;000000000000
Received: from MIT-LISPM-18 by MIT-OZ via Chaosnet; 12 Apr 84 17:40-EST
Date: Thursday, 12 April 1984, 17:39-EST
From: Eugene Ciccarelli <ECC at MIT-OZ>
To: BUG-ZWEI at MIT-OZ

In ZWEI in System 98.43, CADR 3.6, ZMail 53.14, MIT-Specific 22.0,
microcode 309, ZM MIT, on Lisp Machine Eighteen:

String Search, though its documentation still mentions the
various control characters, ignores them.  E.g. you type C-D to
pop the search ring, but all it does is insert a D into the
search string. Similarly typing C-B inserts a B instead of making
the search a BJ search.
12-Apr-84 18:08:22-EST,507;000000000000
Received: from MIT-LISPM-18 by MIT-OZ via Chaosnet; 12 Apr 84 18:06-EST
Date: Thursday, 12 April 1984, 18:05-EST
From: Eugene Ciccarelli <ECC at MIT-OZ>
To: BUG-ZWEI at MIT-OZ

In ZWEI in System 98.43, CADR 3.6, ZMail 53.14, MIT-Specific 22.0,
microcode 309, ZM MIT, on Lisp Machine Eighteen:

M-X List Sections may show at the top "Buffer Header" or "Things
Deleted".  If you put the mouse on them, the who-doc line
suggests you can click left and edit them -- but if you try you
get an error.
15-Apr-84 21:09:16-EST,1234;000000000000
Received: from MIT-JIMI by MIT-OZ via Chaosnet; 15 Apr 84 21:09-EST
Date: Sunday, 15 April 1984, 21:09-EST
From: David Rogers <DROGERS at MIT-OZ>
Subject: small bug in the DIRED copy command
To: BUG-ZWEI at MIT-OZ

In ZWEI in Release 5.0 [Beta Test rev 7], on Lisp Machine Jimi Hendrix (3600):

I don't know how to give you a photo of the bug, but here's a
description. I get a new editor fork, do M-X DIRED, then
<DRogers>*.LISP, whereupon I get the list of my LISP files. 
Then I try to copy one of my files into a new name, by using
C-N to position the cursor and then giving the "C" command.
I give it a new file name, it makes the copy but then prints
the message:

Can't copy author because WHEEL or OPERATOR capability required
for OZ:PS:<DROGERS>NEWFILE.LISP

Very annoying. The first time I saw this I thought the file copying
had not been completed (it had). The program should not try to set
fields that cannot be set with OWNER access. Bug messages such as
these are not reassuring, so please don't tell me this is a 
"design feature" or that I shouldn't worry because it did the right
thing. I have heard of other new users freaking out when this
happens, too.

Thanks for your time,

David
16-Apr-84 15:20:08-EST,1130;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 16 Apr 84 15:19-EST
Received: from SCRC-EUPHRATES by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 46439; Mon 16-Apr-84 15:20:11-EST
Date: Monday, 16 April 1984, 15:23-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: small bug in the DIRED copy command
To: David Rogers <DROGERS at MIT-OZ>
Cc: BUG-ZWEI at MIT-OZ, bug-system at MIT-OZ, bug-file at MIT-OZ
In-reply-to: The message of 15 Apr 84 21:09-EST from David Rogers <DROGERS at MIT-OZ>

    Date: Sunday, 15 April 1984, 21:09-EST
    From: David Rogers <DROGERS at MIT-OZ>

    Can't copy author because WHEEL or OPERATOR capability required
    for OZ:PS:<DROGERS>NEWFILE.LISP

This is a bug in the TOPS-20 operating system, I believe.  The SFUST system
call doesn't let you set the file writer's name even if you can write the
file.  It does let you set the file author's name, but no program seems to
pay any attention to the file author.

I suupose the only thing we can do about this is put a kludge into the Tops-20
file server to not report this error.  But that doesn't seem very reasonable.
16-Apr-84 18:40:06-EST,1713;000000000000
Mail-From: DROGERS created at 16-Apr-84 18:38:30
Date: Mon, 16 Apr 1984  18:38 EST
Message-ID: <DROGERS.12008026291.BABYL@MIT-OZ>
From: DROGERS@MIT-OZ
To:   "David A. Moon" <Moon@SCRC-TENEX>
Cc:   bug-file@MIT-OZ, bug-system@MIT-OZ, BUG-ZWEI@MIT-OZ
Subject: small bug in the DIRED copy command
In-reply-to: Msg of 16 Apr 1984 15:23-EST from David A. Moon <Moon at SCRC-TENEX>

    Date: Monday, 16 April 1984, 15:23-EST
    From: David A. Moon <Moon at SCRC-TENEX>

        Date: Sunday, 15 April 1984, 21:09-EST
        From: David Rogers <DROGERS at MIT-OZ>

        Can't copy author because WHEEL or OPERATOR capability required
        for OZ:PS:<DROGERS>NEWFILE.LISP

    This is a bug in the TOPS-20 operating system, I believe.  The SFUST system
    call doesn't let you set the file writer's name even if you can write the
    file.  It does let you set the file author's name, but no program seems to
    pay any attention to the file author.

    I suppose the only thing we can do about this is put a kludge into the Tops-20
    file server to not report this error.  But that doesn't seem very reasonable.

There are clearly fields of the FDB that are not copied with the copy command;
the COPY request from ZWEI should request the fields that are to be copied, with 
errors if any of these fields fail. I cannot see this as a TOPS-20 bug, in
that operation requests to the file server host should not request functions
unavailable on that host.

You are correct in saying that simply not reporting the error would be a kludge,
and is not a reasonable solution. The real solution is to have the ZWEI copy
command not request functions that the host cannot perform.
16-Apr-84 18:57:56-EST,956;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 16 Apr 84 18:57-EST
Date: 16 Apr 1984  15:53 PST (Mon)
Message-ID: <[SRI-NIC].IAN.16-Apr-84 15:53:28>
From: Ian Macky <Ian@SRI-NIC>
To:   DROGERS%MIT-OZ@MIT-MC.ARPA
Cc:   bug-file%MIT-OZ@MIT-MC.ARPA, bug-system%MIT-OZ@MIT-MC.ARPA,
      BUG-ZWEI%MIT-OZ@MIT-MC.ARPA,
      "David A. Moon" <Moon%SCRC-TENEX@MIT-MC.ARPA>
Subject: small bug in the DIRED copy command
In-reply-to: Msg of 16 Apr 1984  15:38-PST from DROGERS%MIT-OZ at MIT-MC.ARPA

						 The real solution is to
    have the ZWEI copy command not request functions that the host cannot
    perform.

TWENEX can do it, someone (DEC) just decided you shouldn't.  I looked
at the monitor code and it just checks to make sure you're an enabled
whopr before letting you.  Patch out one instruction and it will work.
Apparently they don't want people to hack stuff like that unless
they're a whopr, and so implicitly responsible (ha).
16-Apr-84 19:05:41-EST,1261;000000000000
Received: by MIT-OZ via Chaosnet; 16 Apr 84 19:05-EST
Received: from SCH-PECOS by SCH-GODZILLA with CHAOS; Mon 16-Apr-84 16:08:52-PST
Date: Monday, 16 April 1984, 16:08-PST
From: Robert W. Kerns <RWK at SCH-GODZILLA>
Subject: small bug in the DIRED copy command
To: DROGERS at MIT-OZ
Cc: David A. Moon <Moon at SCRC-TENEX>, bug-file at MIT-OZ,
    bug-system at MIT-OZ, BUG-ZWEI at MIT-OZ
In-reply-to: <DROGERS.12008026291.BABYL@MIT-OZ>
Message-ID: <840416160806.5.RWK@GODZILLA.SCH.Symbolics>

    Date: Mon, 16 Apr 1984  18:38 EST
    From: DROGERS@MIT-OZ
    You are correct in saying that simply not reporting the error would be a kludge,
    and is not a reasonable solution. The real solution is to have the ZWEI copy
    command not request functions that the host cannot perform.
That would be an incredible kludge.  Since it copies the author
when going between OTHER operating systems, just having it
not copy it because TOPS-20 refuses to let it, and not
telling the user that anything unusual happened, is a kludge.

And the alternative of not copying the author ever is even
worse.  Why should the lisp machine environment be reduced
to the least common denominator of the set (ITS/TOPS-20/TENEX/
VMS/UNIX/MULTICS/IBM/...)?
16-Apr-84 19:38:56-EST,1131;000000000000
Mail-From: DROGERS created at 16-Apr-84 19:38:10
Date: Mon 16 Apr 84 19:38:10-EST
From: David Rogers <DRogers@MIT-OZ>
To: RWK@SCRC-TENEX
cc: bug-file@MIT-OZ, bug-system@MIT-OZ, BUG-ZWEI@MIT-OZ, Moon@SCRC-TENEX
Date: Mon, 16 Apr 1984  19:33 EST
Message-ID: <DROGERS.12008036285.BABYL@MIT-OZ>
From: DROGERS@MIT-OZ

Sounds like all alternatives are bad. For reference, they are:

1. Have a list of fields that it has to copy on every machine.
   Then, some machines will always spit out errors (ie TOPS-20)

2. Have a list of fields to copy for each machine type. This has
   been called an incredible kludge; better to have the user
   get unneeded error messages.

3. Have a special "copy all fields you can" command, that each
   host interprets correctly. This transfers the kludge out of
   the lisp machine and into the host FILE program.

I vote for whatever kludge protects the user from brain damaged
unneeded error messages. And I don't buy the argument that
it is not the responsibility of the lisp machine to protect
the user from brain damage, either its own or that of damaged
hosts.
-------
16-Apr-84 21:33:43-EST,702;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 16 Apr 84 21:33-EST
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 17406; Mon 16-Apr-84 21:31:05-EST
Date: Monday, 16 April 1984, 21:37-EST
From: David A. Moon <Moon at SCRC-TENEX>
Subject: Tops-20 is incapable of implementing Lisp machine file copying
To: David Rogers <DRogers at MIT-OZ>, DROGERS at MIT-OZ
Cc: RWK at SCRC-TENEX, bug-file at MIT-OZ, bug-system at MIT-OZ,
    BUG-ZWEI at MIT-OZ
In-reply-to: <DROGERS.12008036285.BABYL@MIT-OZ>

In the source (COPYF and FS:COPY-AUTHOR-AND-CREATION-DATE) this warning
comes out in the editor's echo area, like all other warnings from editor
commands.
16-Apr-84 21:37:30-EST,1775;000000000000
Received: by MIT-OZ via Chaosnet; 16 Apr 84 21:36-EST
Received: from SCH-PECOS by SCH-GODZILLA with CHAOS; Mon 16-Apr-84 18:40:18-PST
Date: Monday, 16 April 1984, 18:39-PST
From: Robert W. Kerns <RWK at SCH-GODZILLA>
To: David Rogers <DRogers at MIT-OZ>, DROGERS at MIT-OZ
Cc: RWK at SCRC-TENEX, bug-file at MIT-OZ, bug-system at MIT-OZ,
    BUG-ZWEI at MIT-OZ, Moon at SCRC-TENEX
In-reply-to: <DROGERS.12008036285.BABYL@MIT-OZ>
Message-ID: <840416183930.6.RWK@GODZILLA.SCH.Symbolics>

    Date: Mon 16 Apr 84 19:38:10-EST
    From: David Rogers <DRogers@MIT-OZ>
    Date: Mon, 16 Apr 1984  19:33 EST
    From: DROGERS@MIT-OZ
    Sounds like all alternatives are bad. For reference, they are:

    1. Have a list of fields that it has to copy on every machine.
       Then, some machines will always spit out errors (ie TOPS-20)

    2. Have a list of fields to copy for each machine type. This has
       been called an incredible kludge; better to have the user
       get unneeded error messages.

    3. Have a special "copy all fields you can" command, that each
       host interprets correctly. This transfers the kludge out of
       the lisp machine and into the host FILE program.
This is what m-X Copy File is, without giving it an argument.
It has the additional feature of telling you what fields it
cannot copy out of the usual set.

    I vote for whatever kludge protects the user from brain damaged
    unneeded error messages. And I don't buy the argument that
    it is not the responsibility of the lisp machine to protect
    the user from brain damage, either its own or that of damaged
    hosts.

I don't think anything needs to be changed, except to make the
message indicate that the file WAS copied correctly.
28-Apr-84 23:32:32-EST,347;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 28 Apr 84 23:32-EST
Date: Saturday, 28 April 1984, 23:31-EST
From: David Vinayak Wallace <Gumby at MIT-MC>
Subject: Aborting from setcomment column
To: BUG-zwei at MIT-OZ

In zwei in Release 5.0 [Beta Test rev 7], FEP 18, on Lisp Machine Keith Moon (3600):

C-X ; C-G sets the comment column
30-Apr-84 16:13:09-EDT,868;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 30 Apr 84 16:12-EDT
Received: from SCRC-MERRIMACK by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 49196; Mon 30-Apr-84 16:07:32-EDT
Date: Monday, 30 April 1984, 16:09-EDT
From: Mike McMahon <MMcM at SCRC-TENEX>
Subject: Aborting from setcomment column
To: David Vinayak Wallace <Gumby at MIT-MC>
cc: BUG-zwei at MIT-OZ
In-Reply-To: The message of 28 Apr 84 23:31-EST from David Vinayak Wallace <Gumby at MIT-MC>
Message-ID: <840430160933.5.MMcM@TENEX.SCRC.Symbolics>

    Date: Saturday, 28 April 1984, 23:31-EST
    From: David Vinayak Wallace <Gumby at MIT-MC>

    In zwei in Release 5.0 [Beta Test rev 7], FEP 18, on Lisp Machine Keith Moon (3600):

    C-X ; C-G sets the comment column

Character comparison confusion in FQUERY.  Fixed and while ago and
available fixed in some future release.
13-May-84 03:03:53-EDT,330;000000000000
Received: from MIT-MOON by MIT-OZ via Chaosnet; 13 May 84 03:03-EDT
Date: Sunday, 13 May 1984, 03:01-EDT
From: Henry Minsky <HQM at MIT-MC>
Subject: auto save?
To: BUG-ZMACS at MIT-OZ

In ZMACS in Release 5.0 [Beta Test rev 7], FEP 18, on Lisp Machine Keith Moon (3600):

Why don't you guys have an Auto Save feature??

13-May-84 16:18:40-EDT,698;000000000000
Received: from MIT-APIARY-8 by MIT-OZ via Chaosnet; 13 May 84 16:17-EDT
Date: Sunday, 13 May 1984, 16:16-EDT
From: Henry Lieberman <Henry at MIT-OZ>
Subject: auto save?
To: Henry Minsky <HQM at MIT-MC>
Cc: BUG-ZMACS at MIT-OZ
In-reply-to: The message of 13 May 84 03:01-EDT from Henry Minsky <HQM at MIT-MC>

    Received: from MIT-MOON by MIT-OZ via Chaosnet; 13 May 84 03:03-EDT
    Date: Sunday, 13 May 1984, 03:01-EDT
    From: Henry Minsky <HQM at MIT-MC>
    Subject: auto save?
    To: BUG-ZMACS at MIT-OZ

    In ZMACS in Release 5.0 [Beta Test rev 7], FEP 18, on Lisp Machine Keith Moon (3600):

    Why don't you guys have an Auto Save feature??

See <Ecc.Lisp>ZwSave.
23-May-84 18:28:16-EDT,377;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 23 May 84 18:27-EDT
Date: Wednesday, 23 May 1984, 18:02-EDT
From: David Chapman <Zvona at MIT-OZ>
To: BUG-Zwei at MIT-OZ

In Release 5.0 [Beta Test rev 7], FEP 18, on Lisp Machine Jimi Hendrix (3600):

In my user object, my mail address is OZ, but my login host is PIG.  So
why does m-X View Mail look for my mail on PIG?
23-May-84 19:37:27-EDT,997;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 23 May 84 19:37-EDT
Received: from SCRC-EUPHRATES by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 55487; Wed 23-May-84 19:36:21-EDT
Date: Wednesday, 23 May 1984, 19:35-EDT
From: David A. Moon <Moon at SCRC-TENEX>
To: David Chapman <Zvona at MIT-OZ>
Cc: BUG-Zwei at MIT-OZ, Software-Maintenance at SCRC-STONY-BROOK
In-reply-to: The message of 23 May 84 18:02-EDT from David Chapman <Zvona at MIT-OZ>

    Date: Wednesday, 23 May 1984, 18:02-EDT
    From: David Chapman <Zvona at MIT-OZ>

    In Release 5.0 [Beta Test rev 7], FEP 18, on Lisp Machine Jimi Hendrix (3600):

    In my user object, my mail address is OZ, but my login host is PIG.  So
    why does m-X View Mail look for my mail on PIG?

Because m-X View Mail is still the release 4 version, in 5.0 beta 7.  This was fixed
to use the same mechanism as Zmail in patch 243.532, but I don't think that patch
made it into the release 5.0.  Expect it in a future release.
25-May-84 01:55:26-EDT,1930;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 25 May 84 01:55-EDT
Date: Friday, 25 May 1984, 01:53-EDT
From:  <TIM at MIT-MC>
Subject: Mouse selection problems with mutiple editors
To: BUG-ZWEI at MIT-OZ
Cc: TIM at MIT-MC

In ZWEI in Release 5.0 [Beta Test rev 7], FEP 18, on Lisp Machine Keith Moon (3600):

When there are several editor frames around and one tries to select an
editor frame by (accidentally) clicking in its minibuffer/echo area,
the new frame does not get selected properly and bizarre behavior
ensues.  Is this a known bug?  (RMS fixed this problem in the MIT system
months ago by introducing "selection substitutes").  The "enclosed"
scenario should illustrate this lossage.

	Tim McNerney
	<TIM at MIT-MC>

To set up the losing scenario:

1. Select the editor with Select E and read in some random file.

2. Create a second editor frame with Select Control-E.

3. Move this new frame over to partially expose the first editor frame,
   (presumably through the system menu -> Edit Screen -> Move window...)

4. Single-click-Left on the minibuffer/echo area of the first editor frame
   (the partially obscured one)

Once you are in the losing state, indicated by a flashing cursor in
the minibuffer area, do any of the following:

A. Type Control-X

   Notice that the other editor frame gets temporarily selected and 
   the "Control-X" is echoed in the wrong minibuffer/echo area.
   Typing the letter F, returns us the braindamaged editor frame,
   but the other editor frame is waiting for input.  Typing the
   letter B will satiate the query.

B. Single-click-left somewhere in the associated "main" editor window

   Notice that the point moves but the cursor does not flash.

C. Type something

   Notice that it does not get inserted in the buffer.  Selecting the
   other editor frame reveals that your typing got inserted in the
   wrong buffer.
25-May-84 01:59:45-EDT,1930;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 25 May 84 01:57-EDT
Date: Friday, 25 May 1984, 01:53-EDT
From:  <TIM at MIT-MC>
Subject: Mouse selection problems with mutiple editors
To: BUG-ZWEI at MIT-OZ
Cc: TIM at MIT-MC

In ZWEI in Release 5.0 [Beta Test rev 7], FEP 18, on Lisp Machine Keith Moon (3600):

When there are several editor frames around and one tries to select an
editor frame by (accidentally) clicking in its minibuffer/echo area,
the new frame does not get selected properly and bizarre behavior
ensues.  Is this a known bug?  (RMS fixed this problem in the MIT system
months ago by introducing "selection substitutes").  The "enclosed"
scenario should illustrate this lossage.

	Tim McNerney
	<TIM at MIT-MC>

To set up the losing scenario:

1. Select the editor with Select E and read in some random file.

2. Create a second editor frame with Select Control-E.

3. Move this new frame over to partially expose the first editor frame,
   (presumably through the system menu -> Edit Screen -> Move window...)

4. Single-click-Left on the minibuffer/echo area of the first editor frame
   (the partially obscured one)

Once you are in the losing state, indicated by a flashing cursor in
the minibuffer area, do any of the following:

A. Type Control-X

   Notice that the other editor frame gets temporarily selected and 
   the "Control-X" is echoed in the wrong minibuffer/echo area.
   Typing the letter F, returns us the braindamaged editor frame,
   but the other editor frame is waiting for input.  Typing the
   letter B will satiate the query.

B. Single-click-left somewhere in the associated "main" editor window

   Notice that the point moves but the cursor does not flash.

C. Type something

   Notice that it does not get inserted in the buffer.  Selecting the
   other editor frame reveals that your typing got inserted in the
   wrong buffer.
26-May-84 15:12:23-EDT,669;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 26 May 84 15:12-EDT
Date: Saturday, 26 May 1984, 15:06-EDT
From:  <DROGERS at MIT-PREP>
Subject: "Terminal wants to type out"
To: BUG-ZWEI at MIT-OZ

In ZWEI in Release 5.0 [Beta Test rev 7], FEP 18, on Lisp Machine Keith Moon (3600):

When one is in the Editor and a terminal wants to type out, a message [hh:mm Terminal n wants to type out]
is displayed in the bottom window. Once the terminal has been selected, this message should
be removed. Otherwise, the message needs complex time parsing to tell whether it is a new one
that should be paid attention to, or an old one that can be ignored.

David
26-May-84 22:25:36-EDT,1083;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 26 May 84 22:25-EDT
Date: Saturday, 26 May 1984, 22:11-EDT
From:  <SAZ at MIT-OZ>
Subject: Uncomment Region bug
To: BUG-zwei at MIT-OZ

In zwei in Release 5.0 [Beta Test rev 7], Experimental Useful 10.0,
Experimental TimeKit 12.0, Experimental Music 11.0,
Experimental Pitch 11.0, Experimental Enharm-Pitch 11.0,
Experimental Harmony 11.0, Experimental Staff 11.0,
Experimental Chroma 11.0, Experimental Play 9.0,
Experimental Linedit 7.0, Experimental Frets 8.0, Music 14 Apr - JRD, on Lisp Machine Four (LM-2):

I just did a Meta-X Uncomment Region and had the whole region simply
disappear!  And not as an entire region, either, no sir!  It disappeared
as though a long string of control-k control-n control-a 's had been
performed.  They were on the kill ring (as n separate entries) but
when I finally got them all off the kill ring I noticed that they
weren't even Uncommented! THe semi-colons were all still there!

I think you might say that Uncomment Region is not quite working right
there...


---saz
28-May-84 15:33:41-EDT,2471;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 28 May 84 15:33-EDT
Received: from SCRC-MERRIMACK by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 40634; Mon 28-May-84 15:29:24-EDT
Date: Monday, 28 May 1984, 15:30-EDT
From: Carl Hoffman <CWH at SCRC-TENEX>
Subject: "Terminal wants to type out"
To: DROGERS at MIT-PREP, BUG-ZWEI at MIT-OZ
In-Reply-To: The message of 26 May 84 15:06-EDT from DROGERS at MIT-PREP

    Date: Saturday, 26 May 1984, 15:06-EDT
    From:  <DROGERS at MIT-PREP>

    In ZWEI in Release 5.0 [Beta Test rev 7], FEP 18, on Lisp Machine Keith Moon (3600):

    When one is in the Editor and a terminal wants to type out, a message [hh:mm Terminal n wants to type out]
    is displayed in the bottom window. Once the terminal has been selected, this message should
    be removed. Otherwise, the message needs complex time parsing to tell whether it is a new one
    that should be paid attention to, or an old one that can be ignored.

This is a reasonable request.

The way I would like to deal with this, and with some other related problems,
is by introducing new blips which are sent when some event occurs relevant to
a process/window which the process might be interested in.  For instance,
blips should be sent for :EXPOSE, :DEEXPOSE, :SELECT, :DESELECT, :REFRESH,
etc.  Zwei does this itself for some of these messages.  Also, a blip (or some
other special values) should be returned from :ANY-TYI when returning from
Suspend or m-Suspend.  There are some programs which remove Suspend and
m-Suspend from the intercepted characters list but which interpret them in the
usual fashion just because they want to know when they are typed.  You can't
just insert a blip into the IO-BUFFER in the intra-process case since
something else might have been inserted in the meantime.

The [hh:mm <Window> wants to type out] notification would have to be replaced
with a more structured message.  Then, if:

1. A (:SELECT <Window-1>) blip is received (meaning that the editor window is
   being selected, and <Window> was the previously selected window;

2. A [hh:mm <Window-2> wants to type out] notification is displayed and has
   not yet been erased, and no other typein-window typeout has taken place;

3. <Window-1> and <Window-2> are EQ;

then the notification would be erased.  All these conditions must be met in
order to avoid erasing notifications which the user might not have read yet.
31-May-84 08:25:24-EDT,791;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 31 May 84 08:25-EDT
Date: Thursday, 31 May 1984, 08:24-EDT
From:  <TIM at MIT-MC>
Subject: More multiple editor lossage: the "boomerang effect"
To: BUG-ZWEI at MIT-OZ

In ZWEI in Release 5.0 [Beta Test rev 7], FEP 18, on [LM] Jimi Hendrix (3600):

When there are several editors on the screen and one is in the middle of doing
an Incremental Search (c-S), it is impossible to select another editor with
the mouse.  The characters that should be going to the just-selected editor
are actually still being snarfed by the other editor.  While you type printing
characters, the search continues, but when you type a control character, the
other window automatically selects itself!  I dub this the "boomerang effect."

	Tim McNerney
 4-Jun-84 02:06:16-EDT,844;000000000000
Received: from MIT-EECS by MIT-OZ via Chaosnet; 4 Jun 84 02:05-EDT
Date: Monday, 4 June 1984, 02:01-EDT
From: David M. J. Saslav <saz at MIT-OZ>
Subject: notifications in zmacs
To: BUG-zwei at MIT-OZ


Could someone hack ZMACS so that upon return from responding to
a notification
or visiting some other program (after having been notified
of the need to visit by a notification at the bottom of the screen
beneath the ZMACS line), that notification would be cleared?

It is very confusing to have to recheck, say, my telnet connection
because my bottom minibuffer still reads "Process Terminal-1 
wants to type out", etc.

I realize this would be difficult to do, since there are so many
different types of notifications, but I would like to know what
the tradeoffs involved in its implementation would actually be.

saz
 4-Jun-84 11:40:31-EDT,2295;000000000000
Received: from SCRC-YUKON by MIT-OZ via Chaosnet; 4 Jun 84 11:40-EDT
Received: from SCRC-ANNISQUAM by SCRC-YUKON via CHAOS with CHAOS-MAIL id 44701; Mon 4-Jun-84 11:31:24-EDT
Date: Monday, 4 June 1984, 11:31-EDT
From: Doug Dodds <DODDS at SCRC-TENEX>
Subject: notifications in zmacs
To: saz at MIT-OZ
Cc: BUG-zwei at MIT-OZ
In-reply-to: The message of 4 Jun 84 02:01-EDT from David M. J. Saslav <saz at MIT-OZ>
Message-ID: <840604113139.2.DODDS@ANNISQUAM.SCRC.Symbolics>

    Date: Monday, 4 June 1984, 02:01-EDT
    From: David M. J. Saslav <saz at MIT-OZ>


    Could someone hack ZMACS so that upon return from responding to
    a notification
    or visiting some other program (after having been notified
    of the need to visit by a notification at the bottom of the screen
    beneath the ZMACS line), that notification would be cleared?

    It is very confusing to have to recheck, say, my telnet connection
    because my bottom minibuffer still reads "Process Terminal-1 
    wants to type out", etc.

    I realize this would be difficult to do, since there are so many
    different types of notifications, but I would like to know what
    the tradeoffs involved in its implementation would actually be.

I understand your complaint, I have frequently been bothered by stale
notifications littering several windows, including the typeout windows
of my Zmail and Zmacs.

On the other hand, every notification contains a time; in the 247
development system, the time is even to the second.  This makes it
pretty easy to sort out what is new.  Also, if confused, you can review,
say, the latest 6 notifications: (print-notifications 0 5).
[Unfortunately, they are numbered backwards, starting with 0 for the
latest.]  Finally, if you want to get rid of them, you can form a habit
of flushing the typein-window notifications, as I have, by typing Abort
to Zmail and Zmacs.

I don't know all the issues involved, but I am pretty sure that doing
what you ask automatically would be more trouble than it is worth.  I
suspect that it would even be difficult to define what was to be done,
in such a way that there was no danger of losing notifications that the
user should see.  Better to stay in conscious control of what is to be
flushed.
14-Jun-84 21:38:34-EDT,495;000000000000
Received: from MIT-LISPM-2 by MIT-OZ via Chaosnet; 14 Jun 84 21:38-EDT
Date: Thursday, 14 June 1984, 21:39-EDT
From: Eugene Ciccarelli <ECC at MIT-OZ>
Subject: Split Screen
To: BUG-ZWEI at MIT-OZ

In ZWEI in System 98.60, CADR 3.7, ZMail 53.17, MIT-Specific 22.1,
microcode 309, gc@36, on Lisp Machine Two:

Bring up the ZMACS command menu (right click), select Split
Screen, and then choose some buffer.  You get an error
complaining of insufficient room to show the layout window.
24-Jun-84 15:54:56-EDT,1143;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 24 Jun 84 15:54-EDT
Date: Saturday, 16 June 1984, 01:16-EDT
From:  <PHILIP at MIT-OZ>
Subject: OZ:OZ:
To: BUG-ZWEI at MIT-OZ
Cc: philip at MIT-OZ

In ZWEI in Release 5.0, Experimental MIT 1.4, on Lisp Machine Bing Crosby (3600):

For reasons which I haven't been able to determine,
ZMACS often ends up with buffer names of the form
                      OZ:OZ:<...>

I just got one by doing M-X dired OZ:PS:<PHILIP> and used
E to edit a file. The name given to it was OZ:OZ:<PHILIP>...

Even Lisp is getting confused since C-E in the debugger
makes the system load file again even though it has
it already in ZMACS (but as OZ:OZ:<...> instead of 
OZ:PS:<...>)


[I've been running into different problems on all
the REL-5-+ systems we have here. Some don't find
error messages, others have broken flavors
commands and now this, which I haven't seen 
elsewhere. How can we know if a machine is running
the most recent system? Can't we load patches?]


Also could it be possible to make
C-X C-F <directory>*.LISP work on the 3600 to edit
all files in a directory.

25-Jun-84 01:36:12-EDT,1753;000000000000
Received: from MIT-SPEECH by MIT-OZ via Chaosnet; 25 Jun 84 01:35-EDT
Date: Mon 25 Jun 84 01:36:56-EDT
From: John Wroclawski <JTW@MIT-SPEECH>
Subject: Re: [PHILIP at MIT-OZ: OZ:OZ:]
To: RpK@MIT-OZ, Bug-OZ@MIT-OZ, bug-zwei@MIT-OZ
In-Reply-To: Message from "Robert P. Krajewski <RpK at MIT-OZ>" of Sun 24 Jun 84 22:26:33-EDT

    From: Robert P. Krajewski <RpK at MIT-OZ>
    Subject: [PHILIP at MIT-OZ: OZ:OZ:]
    
    I think that we all are very grateful that OZ's filesystem has come
    through the ordeal with only a few minor scratches, but it seems that
    when the moby filesystem hackers renamed (?) PS: to OZ:, they made
    some Brand S software cough a little.  The L/MIT software has somehow
    taken it in stride, though.
    
    Is there any good reason to keep it named OZ: ?  Here is one reason
    *against* it.
    
    [Begin forwarded messages.]
    
    Date: Saturday, 16 June 1984, 01:16-EDT
    From:  <PHILIP at MIT-OZ>
    Subject: OZ:OZ:
    To: BUG-ZWEI at MIT-OZ
    
    .....


DEC TOPS-20 is moving towards a world of multiple login structures
and transparent file access across machines. Thus you could for
example be logged in on XX and find that OZ:<FOO>BAR.TXT is a legal
file name, even though the pack named OZ: is on OZ. Obviously this
won't work so well if PS: is built in everywhere.

Some of you may have seen this idea before.

I changed PS: to OZ: as part of fixing it, and decided to leave it
that way because it needs to happen eventually and i'd never seen it
break anything (the main packs on speech have been SPEECH: for a while
now). Easy enough to change back for a while if we have to, but 
somebody better worry about fixing the real problem.

-------
25-Jun-84 01:56:31-EDT,941;000000000000
Mail-From: GAVAN created at 25-Jun-84 01:55:33
Date: Mon, 25 Jun 1984  01:55 EDT
Message-ID: <GAVAN.12026182867.BABYL@MIT-OZ>
From: GAVAN@MIT-OZ
To:   John Wroclawski <JTW@MIT-SPEECH>
Cc:   Bug-OZ@MIT-OZ, bug-zwei@MIT-OZ, RpK@MIT-OZ
Subject: [PHILIP at MIT-OZ: OZ:OZ:]
In-reply-to: Msg of 25 Jun 1984  01:36-EDT from John Wroclawski <JTW at MIT-SPEECH>

    Date: Monday, 25 June 1984  01:36-EDT
    From: John Wroclawski <JTW at MIT-SPEECH>

    I changed PS: to OZ: as part of fixing it, and decided to leave it
    that way because it needs to happen eventually and i'd never seen it
    break anything (the main packs on speech have been SPEECH: for a while
    now). Easy enough to change back for a while if we have to, 

Please leave it as OZ:.  The change isn't debilitating for users of
brand S software, and some of us have already fixed our code.  I, for
one, would hate to have to change things back again.

25-Jun-84 19:05:21-EDT,923;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 25 Jun 84 19:05-EDT
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 54640; Mon 25-Jun-84 16:33:44-EDT
Date: Monday, 25 June 1984, 16:32-EDT
From: David A. Moon <Moon at SCRC-TENEX>
Subject: c-X c-F with wildcards
To: PHILIP at MIT-OZ
Cc: BUG-ZWEI at MIT-OZ, Software-Maintenance at SCRC-YUKON
In-reply-to: The message of 16 Jun 84 01:16-EDT from PHILIP at MIT-OZ
Message-ID: <840625163219.6.MOON@EUPHRATES.SCRC.Symbolics>

    Date: Saturday, 16 June 1984, 01:16-EDT
    From:  <PHILIP at MIT-OZ>

    In ZWEI in Release 5.0, Experimental MIT 1.4, on Lisp Machine Bing Crosby (3600):

    ...Also could it be possible to make
    C-X C-F <directory>*.LISP work on the 3600 to edit
    all files in a directory.

This works in the development system (243.714).  I don't know whether this is planned
for Release 5.2.
28-Jun-84 23:53:37-EDT,418;000000000000
Received: from MIT-LISPM-24 by MIT-OZ via Chaosnet; 28 Jun 84 23:53-EDT
Date: Thursday, 28 June 1984, 23:55-EDT
From: Eugene Ciccarelli <ECC at MIT-OZ>
Subject: M-%
To: BUG-ZWEI at MIT-OZ

In ZWEI in System 98.64, CADR 3.6, ZMail 53.17, MIT-Specific 22.0,
microcode 309, ZM MIT, on Lisp Machine Twenty-four:

Now that you have M-% able to be restricted to the region, its
documentation should mention that.
29-Jun-84 05:38:44-EDT,607;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 29 Jun 84 05:38-EDT
Date: Friday, 29 June 1984, 05:30-EDT
From:  <TIM at MIT-MC>
Subject: Typeout window:  More multiple editor frame lossage
To: BUG-ZWEI at MIT-OZ

In ZWEI in Release 5.0, Experimental MIT 1.4, FEP 18, on Lisp Machine Jimi Hendrix (3600):

When there are two exposed editor frames, and the selected frame has the
typeout window exposed, the typeout window should not get flushed when the
other frame is selected with the mouse.  Presumably it should behave the
same way that it does when the other frame is selected with Select-E.
29-Jun-84 15:36:58-EDT,1144;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 29 Jun 84 15:34-EDT
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 57499; Fri 29-Jun-84 15:35:19-EDT
Date: Friday, 29 June 1984, 15:34-EDT
From: David A. Moon <Moon at SCRC-TENEX>
Subject: Typeout window:  More multiple editor frame lossage
To: TIM at MIT-MC
cc: BUG-ZWEI at MIT-OZ
In-Reply-To: The message of 29 Jun 84 05:30-EDT from TIM at MIT-MC
Message-ID: <840629153415.1.MOON@EUPHRATES.SCRC.Symbolics>

    Date: Friday, 29 June 1984, 05:30-EDT
    From:  <TIM at MIT-MC>

    In ZWEI in Release 5.0, Experimental MIT 1.4, FEP 18, on Lisp Machine Jimi Hendrix (3600):

    When there are two exposed editor frames, and the selected frame has the
    typeout window exposed, the typeout window should not get flushed when the
    other frame is selected with the mouse.  Presumably it should behave the
    same way that it does when the other frame is selected with Select-E.

Thanks for the report.  I'm fairly sure this is fixed in the development system
by 243.463 and related patches.  Anyway I can't reproduce the problem.
29-Jun-84 16:22:33-EDT,392;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 29 Jun 84 16:22-EDT
Date: Friday, 29 June 1984, 16:21-EDT
From: David Chapman <Zvona at MIT-OZ>
To: BUG-zwei at MIT-OZ

In zwei in Release 5.0, Experimental MIT 1.4, FEP 18, on Lisp Machine Jim Morrison (3600):

m-. can't find the (:INTERNAL (:PROPERTY foo NAMED-STRUCTURE-INVOKE) 0)
that is generated by the :PRINT option to DEFSTRUCT.
29-Jun-84 19:28:08-EDT,908;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 29 Jun 84 19:27-EDT
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 57645; Fri 29-Jun-84 19:28:12-EDT
Date: Friday, 29 June 1984, 19:27-EDT
From: David A. Moon <Moon at SCRC-TENEX>
Subject: defstruct :print vs. source file name recording
To: David Chapman <Zvona at MIT-OZ>
cc: BUG-zwei at MIT-OZ
In-Reply-To: The message of 29 Jun 84 16:21-EDT from David Chapman <Zvona at MIT-OZ>
Message-ID: <840629192705.3.MOON@EUPHRATES.SCRC.Symbolics>

    Date: Friday, 29 June 1984, 16:21-EDT
    From: David Chapman <Zvona at MIT-OZ>

    In zwei in Release 5.0, Experimental MIT 1.4, FEP 18, on Lisp Machine Jim Morrison (3600):

    m-. can't find the (:INTERNAL (:PROPERTY foo NAMED-STRUCTURE-INVOKE) 0)
    that is generated by the :PRINT option to DEFSTRUCT.

Thanks for the report.  Fixed in the source.
29-Jun-84 20:00:22-EDT,758;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 29 Jun 84 20:00-EDT
Date: Friday, 29 June 1984, 19:59-EDT
From: David Chapman <Zvona at MIT-OZ>
To: BUG-zwei at MIT-OZ

In zwei in Release 5.0, Experimental MIT 1.4, FEP 18, on Lisp Machine Jim Morrison (3600):

There is this problem with autofill-lisp-comments-mode, which is
that if you insert into the middle of the line, each time a word falls
off the end, it gets its own line, so you end up with a comment that
looks like this:

;;; Here is a random deduction engine that is good enough for the blocks world.  It is not
;;; part
;;; of 
;;; the
;;; planner
;;; proper. 

This bug existed in ECC's LMLIB version before it became ``official'',
but if there is an easy fix, it'd be nice.
29-Jun-84 20:46:00-EDT,333;000000000000
Received: from MIT-ML by MIT-OZ via Chaosnet; 29 Jun 84 20:45-EDT
Date: Friday, 29 June 1984, 20:45-EDT
From: David Chapman <Zvona at MIT-OZ>
Subject: c-x 4 <?> -- feature suggestion.
To: bug-zwei at MIT-OZ

I often do c-x 4 and the realize I want a dired in the other window.
c-x 4 d would be the obvious, but that's taken.
 3-Jul-84 16:02:43-EDT,522;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 3 Jul 84 16:01-EDT
Date: Tuesday, 3 July 1984, 15:50-EDT
From: David Chapman <Zvona at MIT-OZ>
Subject: *require-subjects* values of :bug and :init don't seem to work 
To: BUG-zwei at MIT-OZ

in zwei in Release 5.0, Experimental MIT 1.4, FEP 18, on Lisp Machine
Elvis Presley (3600).

c-M and m-X Bug both seem not to notice a :bug value.  However, the code
is such a rat's nest of flavors that I couldn't figure out why not.  If
you can't reproduce, let me know.
 3-Jul-84 16:31:38-EDT,332;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 3 Jul 84 16:30-EDT
Date: Tuesday, 3 July 1984, 16:29-EDT
From: David Chapman <Zvona at MIT-OZ>
Subject: feature suggestion
To: BUG-zwei at MIT-OZ

In zwei in Release 5.0, Experimental MIT 1.4, FEP 18, on Lisp Machine Elvis Presley (3600):

m-X Edit Compiler Warnings Of Buffer
 3-Jul-84 19:36:31-EDT,1319;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 3 Jul 84 19:36-EDT
Received: from SCRC-ANNISQUAM by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 59121; Tue 3-Jul-84 18:53:29-EDT
Date: Tuesday, 3 July 1984, 18:52-EDT
From: Doug Dodds <DODDS at SCRC-TENEX>
Subject: There is this problem with autofill-lisp-comments-mode
To: Zvona at MIT-OZ
Cc: BUG-zwei at MIT-OZ
In-reply-to: The message of 29 Jun 84 19:59-EDT from David Chapman <Zvona at MIT-OZ>
Message-ID: <840703185204.5.DODDS@ANNISQUAM.SCRC.Symbolics>

    Date: Friday, 29 June 1984, 19:59-EDT
    From: David Chapman <Zvona at MIT-OZ>

    In zwei in Release 5.0, Experimental MIT 1.4, FEP 18, on Lisp Machine Jim Morrison (3600):

    There is this problem with autofill-lisp-comments-mode, which is
    that if you insert into the middle of the line, each time a word falls
    off the end, it gets its own line, so you end up with a comment that
    looks like this:

    ;;; Here is a random deduction engine that is good enough for the blocks world.  It is not
    ;;; part
    ;;; of 
    ;;; the
    ;;; planner
    ;;; proper. 

This seems still to be a bug in the latest 243 development system.  I'll
have to check if it is in the newer (249) development system.  If so
I'll have a look at it after the "holiday".
 5-Jul-84 22:42:18-EDT,564;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 5 Jul 84 22:42-EDT
Date: Wednesday, 4 July 1984, 13:53-EDT
From:  <TIM at MIT-MC>
Subject: c-X O for more than two windows
To: BUG-ZWEI at MIT-OZ

In ZWEI in Release 5.0, Experimental MIT 1.4, FEP 18, on Lisp Machine Elvis Presley (3600):

A suggestion:

    Perhaps c-X O (Oh) should rotate among the exposed Zmacs panes when there 
    are more than two of them.  Right now it seems to toggle between the last
    two panes that were visited, although occasionally it does rotate through
    them all.
 7-Jul-84 23:37:53-EDT,719;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 7 Jul 84 23:37-EDT
Date: Saturday, 7 July 1984, 23:22-EDT
From:  <TIM at MIT-MC>
Subject: More multiple editor bogosity!
To: BUG-ZWEI at MIT-OZ

In ZWEI in Release 5.0, Experimental MIT 1.4, FEP 18, 
on Lisp Machine Keith Moon (3600):

When there are two editor frames, and one of them has its typeout window
exposed, the other one is COMPLETELY USELESS!!!  After "selecting" the
other editor, all of the typein still goes to the "deselected one."  Why
is there really only one editor with several panes even though it looks
like there are several of them.  If this is a real pain to fix, I'll
settle for a brief explanation of why it loses the way it does.
 8-Jul-84 14:53:13-EDT,548;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 8 Jul 84 14:52-EDT
Date: Sunday, 8 July 1984, 14:41-EDT
From: Steven C. Bagley <bagley at MIT-OZ>
Subject: function name completion is broken
To: BUG-zwei at MIT-OZ

In zwei in Release 5.0, Experimental MIT 1.4, FEP 18, on Lisp Machine Robot-3 (3600):

I have two functions, called EDGE-IN-REGION-BOUNDARY-P and
EDGE-INTERSECTS-REGION-BOUNDARY.  I type meta-. and then
edge-in-region-boundary then ctrl-shift-?.  Zwei thinks both functions
can complete the input, which is bogus reasoning.
10-Jul-84 02:20:18-EDT,659;000000000000
Received: from MIT-LISPM-3 by MIT-OZ via Chaosnet; 10 Jul 84 02:20-EDT
Date: Tuesday, 10 July 1984, 02:19-EDT
From: Eugene Ciccarelli <ECC at MIT-OZ>
Subject: zwei:*default-major-mode*
To: BUG-ZWEI at MIT-OZ

In ZWEI in System 98.60, CADR 3.7, ZMail 53.17, MIT-Specific 22.1,
microcode 309, ZM MIT, on Lisp Machine Three:

Zwei is too touchy about this variable's value.  I had (I guess
from long ago) had it set to ZWEI:LISP-MODE or something, rather
than the correct :LISP.  This led to creating buffers with NIL as
a major mode.  And when some global modes were turned on, Word
Abbrev Mode at least, it would get errors in sorting the modes.
10-Jul-84 08:32:19-EDT,565;000000000000
Received: from MIT-ML by MIT-OZ via Chaosnet; 10 Jul 84 08:32-EDT
Date: Tuesday, 10 July 1984, 08:30-EDT
From: Steven C. Bagley <bagley at MIT-OZ>
Subject: C-X K lossage
To: BUG-zwei at MIT-OZ

In zwei in Release 5.0, Experimental MIT 1.4, on Lisp Machine Bing Crosby (3600):

I have two buffers, one named lispm-init.lisp oz:<bagley> oz: (1) and
the other the same thing but version (2).  The version (2) one is the
current buffer.  I try to kill it with C-X K.  When it asks what buffer
to select, I hit return, but it won't select that other buffer.
11-Jul-84 21:31:06-EDT,1113;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 11 Jul 84 21:30-EDT
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 60085; Wed 11-Jul-84 21:31:38-EDT
Date: Wednesday, 11 July 1984, 21:28-EDT
From: David A. Moon <Moon at SCRC-TENEX>
Subject: function name completion is broken
To: Steven C. Bagley <bagley at MIT-OZ>
cc: BUG-zwei at MIT-OZ
In-Reply-To: The message of 8 Jul 84 14:41-EDT from Steven C. Bagley <bagley at MIT-OZ>
Message-ID: <840711212818.5.MOON@EUPHRATES.SCRC.Symbolics>

    Date: Sunday, 8 July 1984, 14:41-EDT
    From: Steven C. Bagley <bagley at MIT-OZ>

    In zwei in Release 5.0, Experimental MIT 1.4, FEP 18, on Lisp Machine Robot-3 (3600):

    I have two functions, called EDGE-IN-REGION-BOUNDARY-P and
    EDGE-INTERSECTS-REGION-BOUNDARY.  I type meta-. and then
    edge-in-region-boundary then ctrl-shift-?.  Zwei thinks both functions
    can complete the input, which is bogus reasoning.

Not so.  Zwei completion completes each word separately; it doesn't just
complete at the end of the string like Tops-20 completion.
11-Jul-84 21:33:55-EDT,1518;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 11 Jul 84 21:33-EDT
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 60090; Wed 11-Jul-84 21:34:40-EDT
Date: Wednesday, 11 July 1984, 21:31-EDT
From: David A. Moon <Moon at SCRC-TENEX>
Subject: More multiple editor bogosity!
To: TIM at MIT-MC
cc: BUG-ZWEI at MIT-OZ
In-Reply-To: The message of 7 Jul 84 23:22-EDT from TIM at MIT-MC
Message-ID: <840711213121.6.MOON@EUPHRATES.SCRC.Symbolics>

    Date: Saturday, 7 July 1984, 23:22-EDT
    From:  <TIM at MIT-MC>

    In ZWEI in Release 5.0, Experimental MIT 1.4, FEP 18, 
    on Lisp Machine Keith Moon (3600):

    When there are two editor frames, and one of them has its typeout window
    exposed, the other one is COMPLETELY USELESS!!!  After "selecting" the
    other editor, all of the typein still goes to the "deselected one."  Why
    is there really only one editor with several panes even though it looks
    like there are several of them.  If this is a real pain to fix, I'll
    settle for a brief explanation of why it loses the way it does.

There is only one editor process serving all the editor windows.  Fixing this
requires introducing locking to the primitives for accessing the editor
data structures, or else multiple editor processes trying to manipulate the
same data structures could seriously damage each other.  It's hard to do the
locking without wrecking things, so we haven't done it yet.  That's the brief
explanation.
15-Jul-84 15:33:10-EDT,1212;000000000000
Received: from MIT-LISPM-2 by MIT-OZ via Chaosnet; 15 Jul 84 15:33-EDT
Date: Sunday, 15 July 1984, 15:33-EDT
From: Eugene Ciccarelli <ECC at MIT-OZ>
Subject: Reshape
To: BUG-ZWEI at MIT-OZ

In ZWEI in System 98.67, CADR 3.8, ZMail 53.18, MIT-Specific 22.2,
microcode 309, gc@36, on Lisp Machine Two:

There is some sort of near-infinite-loop bug after reshaping when two
Zwei windows are present:

Have two buffers, say *Buffer-1* and FOO.  Split the screen, e.g., by
C-X 4 B FOO.  Select the top window (*Buffer-1*).  (That may not have
anything to do with it.  I'm not sure.)

Now go into the system menu, then to Edit Screen, and reshape the Zwei
frame to be 3/4 the size of the screen.  (Again, the fraction may not
have anything to do with it, but that's the size I tend to use.)

You will notice that while the bottom window redisplays, the top one
does not, and the run bar indicates that something is running for a very
long time.  Selecting some other window doesn't take effect -- at least
not for a very long time.  I once waited some minutes, and it did seem
to finally take effect, but I'm not sure.

This does not seem to happen if there was only one Zwei buffer-window.
20-Jul-84 03:41:56-EDT,965;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 20 Jul 84 03:41-EDT
Date: Friday, 20 July 1984, 03:40-EDT
From:  <TIM at MIT-MC>
Subject: Slightly obscure "framer" lossage
To: BUG-ZWEI at MIT-OZ

In ZWEI in Release 5.1, Experimental MIT 1.4, FEP 18, on Lisp Machine 
Jimi Hendrix (3600):

When an editor line occupies more than one physical line on the screen
(i.e. wraps around) and the cursor is anywhere other than on the first
physical line of that editor line, the redisplayer's framer loses in the
following manner:

For example:  In a buffer that doesn't fit in one window, go to the
middle of the buffer somewhere and type in a very, very long line, then
make sure that the cursor is not on the first physical line of that
editor line and type c-0 x-L.  Where would you expect the cursor to be
now?  On the first line of the screen?  No, the framer lost, and forced
the current editor line to be displayed around the center of the window!
20-Jul-84 14:59:49-EDT,1124;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 20 Jul 84 14:50-EDT
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 63471; Fri 20-Jul-84 14:49:30-EDT
Date: Friday, 20 July 1984, 14:49-EDT
From: David A. Moon <Moon at SCRC-TENEX>
Subject: Slightly obscure "framer" lossage
To: TIM at MIT-MC
cc: BUG-ZWEI at MIT-OZ
In-Reply-To: The message of 20 Jul 84 03:40-EDT from TIM at MIT-MC
Message-ID: <840720144901.5.MOON@EUPHRATES.SCRC.Symbolics>

    Date: Friday, 20 July 1984, 03:40-EDT
    From:  <TIM at MIT-MC>

    In ZWEI in Release 5.1, Experimental MIT 1.4, FEP 18, on Lisp Machine 
    Jimi Hendrix (3600):

    When an editor line occupies more than one physical line on the screen
    (i.e. wraps around) and the cursor is anywhere other than on the first
    physical line of that editor line, the redisplayer's framer loses...

Thanks for the report.  I fixed this in the development system when it
was first reported.  I believe the fix is included in Release 5.2,
currently in QA, although I did not actually go and verify the truth of
that statement.
20-Jul-84 16:43:19-EDT,1761;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 20 Jul 84 16:40-EDT
Date: Friday, 20 July 1984, 16:39-EDT
From: Patrick A. O'Donnell <PAO at MIT-EECS>
Subject: Odd window behavior
To: BUG-LISPM at MIT-OZ
Cc: BUG-ZMACS at MIT-OZ

In Release 5.0, Experimental MIT 1.4, FEP 18, on Lisp Machine Marilyn Monroe (3600):

I asked the editor to find a file, to which request it responded by
asking me for a password to log into OZ.  Fine.  While it was looking
for the file, I selected my terminal window (using SELECT T), logged out
of OZ, logged into EE, and while that was chugging away, I re-selected
the editor (using SELECT E).

Now, much to my surprise, I found myself looking at an empty buffer,
*Buffer-2*.  The machine had created a new editor window for me.  (I did
NOT hit SELECT C-E by mistake.)  PEEK showed both editor windows, the
new one,

Edit: *Buffer-2*
    Zmacs Mode Line Window 3
	Typein Window 15
	Zwei With Typeout Unselectable 15
	Zwei Minibuffer 15
    Edit: *Buffer-2*

and the one I wanted,

Edit: PUMA.PALX PS:<PUMA.11> OZ:
    Edit: PUMA.PALX PS:<PUMA.11> OZ:
    Zmacs Mode Line Window 2
	Typein Window 2

SELECT E would not select the latter window at all, but would
consistently select the former.  After selecting the old editor window
from the PEEK display, SELECT E would select both windows fine.

(As a side note, after selecting PEEK and the editors to check my info
while composing this message, when I came back to the ZMAIL window, the
blinker failed to blink.  Selecting the Headers buffer and back to the
Text buffer, or clicking Mouse-Left would start it blinking again.)

There is undoubtedly much irrelevant info in this message, but better
too much than too little...
		- Pat
21-Jul-84 12:25:39-EDT,1064;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 21 Jul 84 12:24-EDT
Date: Saturday, 21 July 1984, 12:21-EDT
From:  <TIM at MIT-MC>
Subject: Recording Stream/Keyboard Macro bug
To: BUG-ZWEI at MIT-OZ

In ZWEI in Release 5.1, Experimental MIT 1.4, FEP 18

One would hope that it would be possible to define a keyboard macro that,
for instance, did the following (contrived example) "without a hitch:"

  m-X Lisp Mode
  Tab
  m-X Text Mode

Unfortunately, mode switching commands insist on asking the user if the
buffer's attribute list should be updated, so he or she has to answer two
questions each time the macro is executed.  Although in some cases, it may
be desirable to have the macro query the user, there are others where the
macro should "answer the question(s)" in the same way that the user did
when the macro was being defined.  Currently, ZWEI does not record
keystrokes typed at QUERY-IO.  Whether this keyboard macro behavior is a
bug or a feature, the recording mechanism probably shouldn't be
"overlooking" these keystrokes.
21-Jul-84 14:50:41-EDT,2340;000000000000
Received: from SCRC-YUKON by MIT-OZ via Chaosnet; 21 Jul 84 14:50-EDT
Received: from SCRC-ANNISQUAM by SCRC-YUKON via CHAOS with CHAOS-MAIL id 51340; Sat 21-Jul-84 14:49:24-EDT
Date: Saturday, 21 July 1984, 14:48-EDT
From: Doug Dodds <DODDS at SCRC-TENEX>
Subject: Slightly obscure "framer" lossage
To: Moon at SCRC-TENEX
cc: TIM at MIT-MC, BUG-ZWEI at MIT-OZ
In-Reply-To: <840720144901.5.MOON@EUPHRATES.SCRC.Symbolics>
Message-ID: <840721144832.6.DODDS@ANNISQUAM.SCRC.Symbolics>

    Date: Friday, 20 July 1984, 14:49-EDT
    From: David A. Moon <Moon at SCRC-TENEX>

	Date: Friday, 20 July 1984, 03:40-EDT
	From:  <TIM at MIT-MC>

	In ZWEI in Release 5.1, Experimental MIT 1.4, FEP 18, on Lisp Machine 
	Jimi Hendrix (3600):

	When an editor line occupies more than one physical line on the screen
	(i.e. wraps around) and the cursor is anywhere other than on the first
	physical line of that editor line, the redisplayer's framer loses...

    Thanks for the report.  I fixed this in the development system when it
    was first reported.  I believe the fix is included in Release 5.2,
    currently in QA, although I did not actually go and verify the truth of
    that statement.

Oops, not quite fixed, it appears.  I am running 249.77 right now; I
think the following observations probably apply to 5.2 also.  It is true
that this situation (an editor buffer of more than one frame, the
present frame contains a line that wraps) now doesn't always lose.  For
instance, position the cursor to some point in the second physical line
of the very long line, and type c-0 c-L.  The frame will then be
positioned with the -physical- line in which the cursor sits at the top.
(Side question: is this right, or should all of the buffer line that
contains the cursor be in the frame, if possible?)

However, position the cursor the same as above, but insert some
characters.  Now do c-0 c-L, and the frame will be adjusted as if you
typed c-L.  Do it again, and now the cursor line will go to the top, but
only if the frame moved (somehow) on the previous framing command.  So
if you center the line of interest (c-L) and then insert some
characters, any number of c-0 c-L commands will not move it!  It will
only reframe if you do c-L and then c-0 c-L.  So not everything is quite
straight yet.
21-Jul-84 20:45:06-EDT,1432;000000000000
Mail-From: X.GYRO created at 21-Jul-84 20:44:48
Date: 21 Jul 1984  20:44 EDT (Sat)
Message-ID: <X.GYRO.12033204184.BABYL@MIT-OZ>
From: Scott Layson <X.GYRO@MIT-OZ>
To:   bug-zwei@MIT-OZ
Subject: New command suggestion

This is a really handy command I invented for the FinalWord editor.
FW users are so fond of it that I thought someone might want to add it
to Zmacs.  I bind it to c-C, which (as far as I know) has never been
bound in the default system.

Is there some more appropriate mailing list for messages of this kind?

(defcom com-rotate-case
	"Change case of current/previous word.  Try it, it undoes itself.
If the cursor is on a word, this command rotates the case of the word (starting
at the current cursor position) from lowercase to capitalized to uppercase and
back to lowercase.  If the cursor is not on a word, the command works on the 
beginning of the previous word." ()
  (let ((point (point))
	(save-point (copy-bp (point))))
    (if (not (= (word-syntax (bp-ch-char point)) word-alphabetic))
	(move-bp point (or (forward-word point -1) (barf))))
    (setq *numeric-arg* 1)
    (let ((this-ch (bp-ch-char point))
	  (next-ch (bp-ch-char (forward-char point))))
      (if (is-lowercase this-ch)
	  (com-uppercase-initial)
	  (if (is-lowercase next-ch)
	      (com-uppercase-word)
	      (com-lowercase-word)))
      (move-bp (point) save-point)
      dis-text)))

-- Scott
22-Jul-84 09:57:49-EDT,1087;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 22 Jul 84 09:57-EDT
Date: Sunday, 22 July 1984, 09:57-EDT
From:  <TIM at MIT-MC>
Subject: Buffer can forget fill column
To: BUG-ZWEI at MIT-OZ

In ZWEI in Release 5.1, Experimental MIT 1.4, FEP 18, on Lisp Machine Janis Joplin (3600):

When a buffer that is not associated with a file becomes associated with
a file, it forgets its fill column if this attribute is associated only
with the buffer (does it forget other attributes too?).  For instance:

I am in *Buffer-1* and start typing away.  Then I want to fill a
paragraph, so I set the fill column and specify that it is only for
this buffer (rather than for the Mode or Globally).  Then I write
the file out using c-X c-W.  The next time I do a fill paragraph,
the fill column has been set to the default!

By the way, it might be useful to be able to associate a fill column
with a particular editor window.  This way if you have a window that is
some funny size, all the buffers that you edit in this window will be
filled according to the size of the window.
23-Jul-84 07:52:23-EDT,556;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 23 Jul 84 07:52-EDT
Date: Monday, 23 July 1984, 07:49-EDT
From:  <TIM at MIT-MC>
Subject: Dired "E" screw
To: BUG-ZWEI at MIT-OZ

In ZWEI in Release 5.1, Experimental MIT 1.4, FEP 18, on Lisp Machine Jim Morrison (3600):

When you "E"dit a file from Dired, the filename associated with the
newly consed buffer contains an explicit version number, even if the
file you want to edit is the most recent version.  This screws a lot of
things up, including c-X c-F, (save, compile, and) Load File, etc.
23-Jul-84 14:26:07-EDT,1829;000000000000
Received: from SCRC-RIVERSIDE by MIT-OZ via Chaosnet; 23 Jul 84 14:19-EDT
Received: from SCRC-ANNISQUAM by SCRC-RIVERSIDE via CHAOS with CHAOS-MAIL id 18475; Mon 23-Jul-84 14:19:50-EDT
Date: Monday, 23 July 1984, 14:19-EDT
From: Doug Dodds <DODDS at SCRC-TENEX>
Subject: Dired "E" screw
To: TIM at MIT-MC
cc: BUG-ZWEI at MIT-OZ
In-Reply-To: The message of 23 Jul 84 07:49-EDT from TIM at MIT-MC
Message-ID: <840723141941.5.DODDS@ANNISQUAM.SCRC.Symbolics>

    Date: Monday, 23 July 1984, 07:49-EDT
    From:  <TIM at MIT-MC>

    In ZWEI in Release 5.1, Experimental MIT 1.4, FEP 18, on Lisp Machine Jim Morrison (3600):

    When you "E"dit a file from Dired, the filename associated with the
    newly consed buffer contains an explicit version number, even if the
    file you want to edit is the most recent version.  This screws a lot of
    things up, including c-X c-F, (save, compile, and) Load File, etc.

Are you sure that when you E a file that is the latest version for that
name, it is in fact locked to that version?  I just tried to duplicate
this in 5.2 (I couldn't quickly find a machine running 5.1, but I think
this hasn't changed in eons), and it did the right thing.  That is, if
Dired showed Q:>Zippy>Foo.Lisp.1, .2, and .3, then if you E on version
2, the file is read, and the mode line on the buffer says "Foo.Lisp.2
>Zippy Q:" for the file name.  But if you E on version 3, the mode line
says "Foo.Lisp >Zippy Q: (3)".

This subtly different latter case is what you get if the version in the
buffer is the Newest.  If you c-X c-S, for example, it will create and
write version 4, and change the number in parens to 4.  If you c-X c-S
on the former buffer, it will rewrite version 2 of the file.

Is the behavior you are reporting different from what I have described?
24-Jul-84 16:14:31-EDT,1655;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 24 Jul 84 16:01-EDT
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 64521; Mon 23-Jul-84 23:31:12-EDT
Date: Monday, 23 July 1984, 23:30-EDT
From: David A. Moon <Moon at SCRC-TENEX>
Subject: Slightly obscure "framer" lossage
To: Doug Dodds <DODDS at SCRC-TENEX>, TIM at MIT-MC
cc: BUG-ZWEI at MIT-OZ
In-Reply-To: <840721144832.6.DODDS@ANNISQUAM.SCRC.Symbolics>
Message-ID: <840723233010.5.MOON@EUPHRATES.SCRC.Symbolics>

    Date: Saturday, 21 July 1984, 14:48-EDT
    From: Doug Dodds <DODDS at SCRC-TENEX>

	Date: Friday, 20 July 1984, 14:49-EDT
	From: David A. Moon <Moon at SCRC-TENEX>

	    Date: Friday, 20 July 1984, 03:40-EDT
	    From:  <TIM at MIT-MC>
	    When an editor line occupies more than one physical line on the screen
	    (i.e. wraps around) and the cursor is anywhere other than on the first
	    physical line of that editor line, the redisplayer's framer loses...

	Thanks for the report.  I fixed this in the development system when it
	was first reported.  I believe the fix is included in Release 5.2,
	currently in QA, although I did not actually go and verify the truth of
	that statement.

    Oops, not quite fixed, it appears....

Thanks for pushing on this.  I -really- fixed it, in the source, now by removing
some confused code from editor redisplay.  The amazingly random behavior of
c-0 c-L was a function of whether the line that was trying to be at the top
of the window had been modified more or less recently than the line currently
at the top of the window.

So it's only semi-fixed in 5.2.
24-Jul-84 16:31:36-EDT,361;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 24 Jul 84 16:30-EDT
Date: 23 July 1984 20:34-EDT
From: David Vinayak Wallace <GUMBY @ MIT-MC>
Subject:  Dired "E" screw
To: TIM @ MIT-MC
cc: BUG-ZWEI @ MIT-OZ
In-reply-to: Msg of 23 Jul 1984 07:49-EDT from <TIM>

Fix this in your own environment only.  That behaviour is consistent, and
to me preferable.
24-Jul-84 21:12:42-EDT,5858;000000000000
Mail-From: X.GYRO created at 24-Jul-84 21:12:06
Date: 24 Jul 1984  21:12 EDT (Tue)
Message-ID: <X.GYRO.12033995588.BABYL@MIT-OZ>
From: Scott Layson <X.GYRO@MIT-OZ>
To:   bug-zwei-mit@MIT-OZ
Subject: Nodes without superiors

In System 98.39, CADR 3.4, ZMail 53.5, Experimental Local-File 48.1,
Experimental FILE-Server 8.0, microcode 306, Zeta, on Astarte:

I have buffers full of strange list structure (the parse trees produced by my
C compiler).  Whenever I try to resectionize them I get this lossage.  The
problem appears to be that the NODE in question, which appears to be the
LINE-NODE of all the lines in the buffer (?? what's a NODE for anyway?),
was created without a superior.  If I do

(setf (node-superior (dbg:loc 10))
      (line-node (bp-line (interval-first-bp (dbg:loc 10)))))

and then c-m-R, things appear to work properly.  (The code in
(:property :lisp zwei:get-section-name) is trying to find the line's
buffer by finding its node's top level superior.)

>>TRAP 4115. (INSTANCE-LACKS-INSTANCE-VARIABLE M-C M-A)
There is no instance variable GLOBAL:PATHNAME in #<NODE 40277055>.
Backtrace from the debugger:

Additional information supplied with call:
 Expecting 3 values

(:PROPERTY :LISP ZWEI:GET-SECTION-NAME) (P.C. = 312)

 Arg 0 (LINE): "(decl+ (char) (fcn+ toupper) (fcn+ tolower))"
 Arg 1 (BP): ("(decl+ (char) (fcn+ isupper) (fcn+ islower) (fcn+ isalpha) (fcn+ isdigit) (fcn+ istoken))" 0.)
Local 0 (STR): GLOBAL:NIL
Local 1 (SYM): GLOBAL:NIL
Local 2 (ERROR-P): GLOBAL:T
Local 3 (IDX): GLOBAL:NIL
Local 4 (END-IDX): GLOBAL:NIL
Local 5 (EOF): ""
Local 6 (NON-FONT-LINE): GLOBAL:NIL
Local 7: GLOBAL:NIL
Local 8: GLOBAL:NIL
Local 9 (*SELECTQ-ITEM*): GLOBAL:NIL
Local 10 (BUFFER): #<NODE 40277055>
Local 11 (NAME): GLOBAL:NIL
Local 12: GLOBAL:NIL
Local 13 (NAME-ELT): GLOBAL:NIL
Local 14 (START-INDEX): GLOBAL:NIL


ZWEI:SECTIONIZE-FILE-BUFFER (P.C. = 524)

 Arg 0 (BUFFER): #<ZMACS-BUFFER "CPARSE.LISP#> GYRO.ZETAC; ASTARTE:" 31305365>
 Arg 1 (AARRAY): #<ART-Q-LIST-560. 3664315>
 Arg 2 (PROPERTY): ZWEI:ZMACS-BUFFERS
   --Defaulted args:--
 Arg 3 (START-NODE): GLOBAL:NIL
 Arg 4 (END-NODE): GLOBAL:NIL
 Arg 5 (STREAM): GLOBAL:NIL
 Arg 6 (HACK-FONTS): GLOBAL:NIL
Local 0 (NODE-LIST): (#<SECTION-NODE "Buffer header" 40415565>)
Local 1 (MODE): ZWEI:LISP-MODE
Local 2 (INT-STREAM): GLOBAL:NIL
Local 3 (FIRST-BP): ("; -*- Mode: Lisp; Base: 10; Tab-width: 5; Package: CParse -*-" 0. :NORMAL)
Local 4 (LAST-BP): ("" 0. :MOVES)
Local 5 (ADDED-COMPLETIONS): #<ART-Q-LIST-64. 40415464>
Local 6 (BUFFER-TICK): 6462.
r) (fcn+ isdigit c))| 31341262>) ...)
Local 8 (NODES-TO-REUSE): GLOBAL:NIL
Local 9 (ACTUAL-NEW-NODES): (#<SECTION-NODE "Buffer header" 40415565>)
Local 10 (START-PREDECESSOR): GLOBAL:NIL
Local 11 (END-FOLLOWER): GLOBAL:NIL
Local 12 (N): GLOBAL:NIL
Local 13: GLOBAL:NIL
Local 14 (NODE): #<SECTION-NODE |ZWEI Utility Package|:|(() (fcn+ movmem src dst len))| 31341557>
Local 15 (LINE): "(decl+ (char) (fcn+ isupper) (fcn+ islower) (fcn+ isalpha) (fcn+ isdigit) (fcn+ istoken))"
Local 16 (LIMIT): ""
Local 17 (EOFFLG): GLOBAL:NIL
Local 18 (BP): ("(decl+ (char) (fcn+ isupper) (fcn+ islower) (fcn+ isalpha) (fcn+ isdigit) (fcn+ istoken))" 0.)
Local 19 (PREV-NODE-START-BP): ("(decl+ (char) (fcn+ isupper) (fcn+ islower) (fcn+ isalpha) (fcn+ isdigit) (fcn+ istoken))" 0.)
Local 20 (PREV-NODE-DEFUN-LINE): "(decl+ (char) (fcn+ toupper) (fcn+ tolower))"
Local 21 (FIRST-NODE-NAME): "Buffer header"
Local 22 (PREVIOUS-NODE): #<SECTION-NODE "Buffer header" 40415565>
Local 23 (ADD-SECTIONS): :LISP
Local 24 (SECTION-P): #<DTP-FEF-POINTER (:PROPERTY :LISP ZWEI:SECTION-P) 30411661>
Local 25 (SECTION-NAME-FUNCTION): #<DTP-FEF-POINTER (:PROPERTY :LISP ZWEI:GET-SECTION-NAME) 30515017>
Local 26 (START): ("(decl+ (char) (fcn+ toupper) (fcn+ tolower))" 0.)
Local 27 (END): ("(decl+ (char) (fcn+ isupper) (fcn+ islower) (fcn+ isalpha) (fcn+ isdigit) (fcn+ istoken))" 0.)
Local 28 (OLD-NODE): GLOBAL:NIL
Local 29 (SYM): "Buffer header"
Local 30 (STR): GLOBAL:NIL
Local 31 (ERR): GLOBAL:NIL
Local 32 (FIRST-NEW-NODE): GLOBAL:NIL
Local 33 (FLUSHED-NODES): GLOBAL:NIL
Local 34 (ALL-NODES): GLOBAL:NIL
Local 35 (THE-BUFFER): GLOBAL:NIL
Local 36: GLOBAL:NIL
Local 37: GLOBAL:NIL
Local 38 (*SELECTQ-ITEM*): GLOBAL:NIL
Local 39 (I): GLOBAL:NIL
Local 40 (J): GLOBAL:NIL


(:METHOD ZWEI:ZMACS-BUFFER :SECTIONIZE) (P.C. = 45)
  (SELF is #<ZMACS-BUFFER "CPARSE.LISP#> GYRO.ZETAC; ASTARTE:" 31305365>)

 Arg 0 (OPERATION): :SECTIONIZE


ZWEI:SECTIONIZE-BUFFER (P.C. = 22)

 Arg 0 (BUFFER): #<ZMACS-BUFFER "CPARSE.LISP#> GYRO.ZETAC; ASTARTE:" 31305365>


ZWEI:COM-SOURCE-COMPARE-MERGE (P.C. = 204)

Local 0 (FILE-1): #<ART-Q-400. 40276075>
Local 1 (FILE-2): #<ART-Q-200. 40276642>
Local 2 (NAME-1): "CPARSE.LISP#> GYRO.ZETAC; ASTARTE:"
Local 3 (NAME-2): #FS:LM-PATHNAME "ASTARTE: GYRO.ZETAC; CPARSE.Z#>"
Local 4 (TYPE-1): "Buffer"
Local 5 (TYPE-2): "File"
Local 6 (BUF-1): #<ZMACS-BUFFER "CPARSE.LISP#> GYRO.ZETAC; ASTARTE:" 31305365>
Local 7 (BUF-2): GLOBAL:NIL
Local 8 (DEFAULT): #FS:LM-PATHNAME "ASTARTE: GYRO.ZETAC; CPARSE.LISP#>"
Local 9 (OUTPUT-BUFFER): #<ZMACS-BUFFER "CPARSE.LISP#> GYRO.ZETAC; ASTARTE:" 31305365>
Local 10 (INTERVAL): #<NODE 40277055>
Local 11 (MARKS): ((** ** ** ** ...) (** ** ** ** ...) (** ** ** ** ...) (** ** ** ** ...))


Remainder of stack:

ZWEI:COM-EXTENDED-COMMAND (P.C. = 67)
ZWEI:COMMAND-EXECUTE (P.C. = 115)
ZWEI:PROCESS-COMMAND-CHAR (P.C. = 65)
(:METHOD ZWEI:WINDOW :EDIT) (P.C. = 464)
(:INTERNAL (:METHOD ZWEI:ZMACS-WINDOW :COMBINED :EDIT) 0.) (P.C. = 74)
GLOBAL:FUNCALL (P.C. = 25)
(:METHOD ZWEI:DISPLAYER :AROUND :EDIT) (P.C. = 31)
(:METHOD ZWEI:ZMACS-WINDOW :COMBINED :EDIT) (P.C. = 47)
ZWEI:ZMACS-WINDOW-TOP-LEVEL (P.C. = 46)
SI:PROCESS-TOP-LEVEL (P.C. = 152)

25-Jul-84 19:12:39-EDT,471;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 25 Jul 84 19:12-EDT
Date: Wednesday, 25 July 1984, 19:12-EDT
From: Daniel Weise <DANIEL at MIT-MC>
Subject: C-q doesn't quote during a C-s search
To: BUG-ZWEI at MIT-OZ

In ZWEI in Release 5.1, Experimental MIT 1.4, COLOR 5.1, FEP 18, on Lisp Machine Buddy Holly (3600):

The sequence C-s c-Q c-G ends up searching for G rather than c-G, contrary
to the documentation given by <help> during a C-s search.

Daniel
25-Jul-84 22:26:48-EDT,1157;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 25 Jul 84 22:26-EDT
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 65246; Wed 25-Jul-84 22:28:08-EDT
Date: Wednesday, 25 July 1984, 22:26-EDT
From: David A. Moon <Moon at SCRC-TENEX>
Subject: C-q doesn't quote during a C-s search
To: Daniel Weise <DANIEL at MIT-MC>
cc: BUG-ZWEI at MIT-OZ
In-Reply-To: The message of 25 Jul 84 19:12-EDT from Daniel Weise <DANIEL at MIT-MC>
Message-ID: <840725222605.4.MOON@EUPHRATES.SCRC.Symbolics>

    Date: Wednesday, 25 July 1984, 19:12-EDT
    From: Daniel Weise <DANIEL at MIT-MC>

    In ZWEI in Release 5.1, Experimental MIT 1.4, COLOR 5.1, FEP 18, on Lisp Machine Buddy Holly (3600):

    The sequence C-s c-Q c-G ends up searching for G rather than c-G, contrary
    to the documentation given by <help> during a C-s search.

There is no such character as c-G in the character set that can be placed in files.
The control, meta, hyper, super modifiers can only be entered from the keyboard;
they cannot be stored in files.  But maybe there is also a bug: what character were
you actually searching for?
26-Jul-84 10:55:21-EDT,1463;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 26 Jul 84 10:54-EDT
Date: 26 July 1984 10:55-EDT
From: Daniel Weise <DANIEL @ MIT-MC>
Subject:  C-q doesn't quote during a C-s search
To: Moon @ SCRC-RIVERSIDE
cc: BUG-ZWEI @ MIT-OZ
In-reply-to: Msg of Wed 25 Jul 84 22:26 EDT from David A. Moon <Moon at SCRC-RIVERSIDE.ARPA>

    Date: Wed, 25 Jul 84 22:26 EDT
    From: David A. Moon <Moon at SCRC-RIVERSIDE.ARPA>
    To:   Daniel Weise <DANIEL at MIT-MC.ARPA>
    cc:   BUG-ZWEI%MIT-OZ at SCRC-RIVERSIDE.ARPA
    Re:   C-q doesn't quote during a C-s search

        Date: Wednesday, 25 July 1984, 19:12-EDT
        From: Daniel Weise <DANIEL at MIT-MC>

        In ZWEI in Release 5.1, Experimental MIT 1.4, COLOR 5.1, FEP 18,
        on Lisp Machine Buddy Holly (3600):

        The sequence C-s c-Q c-G ends up searching for G rather than c-G,
        contrary to the documentation given by <help> during a C-s search.

    There is no such character as c-G in the character set that can be
    placed in files.  The control, meta, hyper, super modifiers can only
    be entered from the keyboard; they cannot be stored in files.  But
    maybe there is also a bug: what character were you actually searching
    for?

No bug, my spazz.  I forgot that it is a special feature that Tags
Search quotes control characters into greek characters when specifying
a search and that incremental search does not have that special
feature.
30-Jul-84 17:32:11-EDT,2894;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 30 Jul 84 17:31-EDT
Received: from SCRC-MERRIMACK by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 67142; Mon 30-Jul-84 17:32:56-EDT
Date: Monday, 30 July 1984, 17:32-EDT
From: Mike McMahon <MMcM at SCRC-TENEX>
Subject: New command suggestion
To: Scott Layson <X.GYRO at MIT-OZ>
cc: bug-zwei at MIT-OZ
In-Reply-To: <X.GYRO.12033204184.BABYL@MIT-OZ>
Message-ID: <840730173247.6.MMCM@MERRIMACK.SCRC.Symbolics>

    Date: 21 Jul 1984  20:44 EDT (Sat)
    From: Scott Layson <X.GYRO@MIT-OZ>

    This is a really handy command I invented for the FinalWord editor.
    FW users are so fond of it that I thought someone might want to add it
    to Zmacs.  I bind it to c-C, which (as far as I know) has never been
    bound in the default system.

I'm curious why people find this command useful (don't misunderstand --
I'm not denying that they do).  Is it because it works on the previous
word so easily, saving one the trouble of typing c--?  Or are
uppercasing and lowercasing and capitalizing similar enough that it's
easier to try this command until you get the look you wanted than
remember the correct command?

    Is there some more appropriate mailing list for messages of this kind?

Nope, this is the right one.

    (defcom com-rotate-case
	    "Change case of current/previous word.  Try it, it undoes itself.
    If the cursor is on a word, this command rotates the case of the word (starting
    at the current cursor position) from lowercase to capitalized to uppercase and
    back to lowercase.  If the cursor is not on a word, the command works on the 
    beginning of the previous word." ()
      (let ((point (point))
	    (save-point (copy-bp (point))))
	(if (not (= (word-syntax (bp-ch-char point)) word-alphabetic))
	    (move-bp point (or (forward-word point -1) (barf))))
	(setq *numeric-arg* 1)
	(let ((this-ch (bp-ch-char point))
	      (next-ch (bp-ch-char (forward-char point))))
	  (if (is-lowercase this-ch)
	      (com-uppercase-initial)
	      (if (is-lowercase next-ch)
		  (com-uppercase-word)
		  (com-lowercase-word)))
	  (move-bp (point) save-point)
	  dis-text)))

This command really doesn't undo itself, for example if applied to
FinalWord.  Not that it should, but the documentation claims that it
does.

The lowercase determination isn't hairy enough.  Some word-alphabetic
characters aren't letters.  For example, this command is a no-op on the
word "105foobar".  m-C would capitalize the "f".

A command that doesn't move point as part of its user interface
shouldn't move it internally.  Instead, you should compute BP's for the
range you want to operate in and call subroutines rather than the actual
commands.  What you did is unfortunately often easier without any
extension writers tools.

Why should an argument be ignored?
31-Jul-84 10:42:53-EDT,3442;000000000000
Mail-From: X.GYRO created at 31-Jul-84 10:42:33
Date: 31 Jul 1984  10:42 EDT (Tue)
Message-ID: <X.GYRO.12035715988.BABYL@MIT-OZ>
From: Scott Layson <X.GYRO@MIT-OZ>
To:   Mike McMahon <MMcM@SCRC-TENEX>
Cc:   bug-zwei@MIT-OZ
Subject: New command suggestion
In-reply-to: Msg of 30 Jul 1984 17:32-EDT from Mike McMahon <MMcM at SCRC-TENEX>

    Date: Monday, 30 July 1984, 17:32-EDT
    From: Mike McMahon <MMcM at SCRC-TENEX>

        Date: 21 Jul 1984  20:44 EDT (Sat)
        From: Scott Layson <X.GYRO@MIT-OZ>

        This is a really handy command I invented for the FinalWord editor.
        FW users are so fond of it that I thought someone might want to add it
        to Zmacs.  I bind it to c-C, which (as far as I know) has never been
        bound in the default system.

    I'm curious why people find this command useful (don't misunderstand --
    I'm not denying that they do).  Is it because it works on the previous
    word so easily, saving one the trouble of typing c--?  Or are
    uppercasing and lowercasing and capitalizing similar enough that it's
    easier to try this command until you get the look you wanted than
    remember the correct command?

The former, I believe.  Its usefulness seems directly connected with
its being on a single easily available keystroke.  It's very much in
the same spirit as c-T.  And I feel like it's not so much a problem to
@i<remember> the correct one of m-L, m-C, m-U as it is to build it
into one's fingers, if you will -- particularly the complex dance
required to type m-- m-C.  In fact, I find I usually know in advance
(having by now had a lot of practice) whether I will need to type one
or two c-C's.

    This command really doesn't undo itself, for example if applied to
    FinalWord.  Not that it should, but the documentation claims that it
    does.

Quite right.  I'm musing on the possibility that it should do
something more intelligent in such cases -- this might be handy for
writing code in languages that encourage mixed-case names -- but I
don't have a coherent proposal.

    The lowercase determination isn't hairy enough.  Some word-alphabetic
    characters aren't letters.  For example, this command is a no-op on the
    word "105foobar".  m-C would capitalize the "f".

Right again.  This is so rarely annoying that I've never bothered to
fix it.

    A command that doesn't move point as part of its user interface
    shouldn't move it internally.  Instead, you should compute BP's for the
    range you want to operate in and call subroutines rather than the actual
    commands.  What you did is unfortunately often easier without any
    extension writers tools.

Yeah, I've never taken the time to familiarize myself with Zwei
internals or proper command-writing style.  I understand what you
mean, though, and would have preferred to do it that way, but was
lazy.

    Why should an argument be ignored?

Well, what should it do?  Executing the command 4 times is (with the
noted exceptions) just like executing it once, so c-U is pretty
useless; the only interesting number of times to do it is 2, or if you
prefer -1, but it's easier to hit the key twice.  Actually, I just
thought of something I would like: a single c-U should make it act as
if Atom Word Mode were on.  I would like to be able to use it to
uppercase symbols in text (as opposed to code).

-- Scott
31-Jul-84 15:47:05-EDT,760;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 31 Jul 84 15:40-EDT
Received: from SCRC-OTTAWA by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 67481; Tue 31-Jul-84 15:14:30-EDT
Date: Tuesday, 31 July 1984, 15:12-EDT
From: Jan Walker <JWalker at SCRC-TENEX>
Subject: New command suggestion
To: X.GYRO at MIT-OZ
cc: bug-zwei at MIT-OZ
In-Reply-To: <X.GYRO.12035715988.BABYL@MIT-OZ>
Message-ID: <840731151242.7.JWALKER@OTTAWA.SCRC.Symbolics>

    Date: 31 Jul 1984  10:42 EDT (Tue)
    From: Scott Layson <X.GYRO@MIT-OZ>

	Why should an argument be ignored?

    Well, what should it do?

It is clear to me anyhow that the argument should refer to the number of
words to operate on.  3 = the last three words, -2 = the next two words.
 1-Aug-84 10:01:06-EDT,1073;000000000000
Mail-From: X.GYRO created at  1-Aug-84 10:00:52
Date: 1 Aug 1984  10:00 EDT (Wed)
Message-ID: <X.GYRO.12035970546.BABYL@MIT-OZ>
From: Scott Layson <X.GYRO@MIT-OZ>
To:   bug-zwei@MIT-OZ
Subject: Rotate Case command suggestion
In-reply-to: Msg of 31 Jul 1984 15:12-EDT from Jan Walker <JWalker at SCRC-TENEX>

Everyone points out that the argument should be the number of words to
operate on.  Well, that's logical and philosophically consistent with
the rest of the editor, but I suspect it isn't very useful.  I liked
my suggestion of having arguments modify the definition of a "word",
e.g., as if Atom Word Mode were on.  However, the chances of anyone
but me ever using that may be slim -- after all, a user will bother to
learn only so many special-case hacks.  (Do @i<you> ever use c-U c-U
c-Space?)  So perhaps consistency should take precedence.

Another suggestion: if there's a region, the command should operate on
the whole region, and leave it turned on.  I, for one, much prefer
marking things with the mouse to counting words.

-- Scott
 2-Aug-84 13:04:50-EDT,440;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 2 Aug 84 13:04-EDT
Date: Thursday, 2 August 1984, 13:02-EDT
From: Steven C. Bagley <bagley at MIT-OZ>
Subject: sort menu listing buffers
To: BUG-zwei at MIT-OZ

In zwei in Release 5.1, Experimental MIT 1.4, FEP 18, on Lisp Machine Jim Morrison (3600):

It would be nice if the pop-up menu listing buffers (mouse-right after
M-X insert buffer, for example) were sorted alphabetically.
 4-Aug-84 21:04:58-EDT,343;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 4 Aug 84 21:04-EDT
Date: Friday, 3 August 1984, 20:54-EDT
From:  <TIM at MIT-MC>
Subject:  (Backspace)
To: BUG-ZWEI at MIT-OZ

In ZWEI in Release 5.1, Experimental MIT 1.4, FEP 18, on Lisp Machine Sancho Panza (3600):

Any reason why  (Backspace) is a self-inserting character in ZWEI?
 6-Aug-84 14:54:07-EDT,950;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 6 Aug 84 14:53-EDT
Received: from SCRC-MERRIMACK by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 69433; Mon 6-Aug-84 01:08:42-EDT
Date: Monday, 6 August 1984, 14:51-EDT
From: Mike McMahon <MMcM at SCRC-TENEX>
Subject:  (Backspace)
To: TIM at MIT-MC
cc: BUG-ZWEI at MIT-OZ
In-Reply-To: The message of 3 Aug 84 20:54-EDT from TIM at MIT-MC
Message-ID: <840806145151.3.MMCM@MERRIMACK.SCRC.Symbolics>

    Date: Friday, 3 August 1984, 20:54-EDT
    From:  <TIM at MIT-MC>

    In ZWEI in Release 5.1, Experimental MIT 1.4, FEP 18, on Lisp Machine Sancho Panza (3600):

    Any reason why  (Backspace) is a self-inserting character in ZWEI?

Since the lisp machine can overstrike, backspace self-inserts.  Since
the effect of accidental overstriking can be confusing (imagine getting
undefined function errors for DEFUUN), it is made visible until
you do m-X Set Backspace.
 9-Aug-84 09:27:43-EDT,578;000000000000
Received: from SCC-OLYMPIC by MIT-OZ via Chaosnet; 9 Aug 84 09:27-EDT
Date: Thursday, 9 August 1984, 09:26-EDT
From: Philip E. Agre <Agre at MIT-OZ>
Subject: unbalanced parentheses
To: bug-zwei at MIT-OZ

When you try to write out a Lisp file from the editor and the
file has unbalanced parentheses, you get a warning and a
write-the-file-out-anyway-yes-or-no.  It would be polite of
this query to also offer the option of doing a Find Unbalanced 
Parentheses by typing, say, F.  I don't say yes to the question, 
my next move is M-X F U P 98% of the time.

/phil
13-Aug-84 16:30:55-EDT,431;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 13 Aug 84 16:25-EDT
Date: Monday, 13 August 1984, 16:08-EDT
From: Ramin D. Zabih <RDZ at MIT-MC>
Subject: Inferior directories
To: BUG-ZWEI at MIT-OZ
Cc: BUG-OZ at MIT-OZ

In ZWEI in Release 5.1, Experimental MIT 1.4, FEP 18, on Lisp Machine Keith Moon (3600):

When you use M-X Copy File and create subdirectories of your home dir,
they are made non-files only by default.
15-Aug-84 11:16:39-EDT,487;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 15 Aug 84 11:16-EDT
Date: Wednesday, 15 August 1984, 11:07-EDT
From: Steven C. Bagley <bagley at MIT-OZ>
Subject: incremental search could list previous search string
To: BUG-zwei at MIT-OZ

In zwei in Release 5.1, Experimental MIT 1.5, FEP 18, on Lisp Machine Janis Joplin (3600):

It would be nice if Incremental Search (C-S) listed the previous search
string, just as completions and defaults are displayed by other
functions.
15-Aug-84 16:21:16-EDT,666;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 15 Aug 84 15:53-EDT
Date: Wednesday, 15 August 1984, 15:51-EDT
From: Steven C. Bagley <bagley at MIT-OZ>
Subject: Make list buffers know about support buffers
To: BUG-zwei at MIT-OZ

In zwei in Release 5.1, Experimental MIT 1.5, FEP 18, on Lisp Machine Janis Joplin (3600):

It would be nice if there was some way to get M-X List Buffers not to
list the support buffers.  Right now, you can sort of get that by giving
it a numeric argument and then a string not contained in any support
buffer name (e.g. ":"), but this is kludgy, and not really the right
thing, since it will miss buffers like *buffer-1*.
15-Aug-84 17:06:00-EDT,509;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 15 Aug 84 17:05-EDT
Date: Wednesday, 15 August 1984, 16:50-EDT
From: Steven C. Bagley <bagley at MIT-OZ>
Subject: automatically generating new buffer
To: BUG-zwei at MIT-OZ

In zwei in Release 5.1, Experimental MIT 1.5, FEP 18, on Lisp Machine Janis Joplin (3600):

Why is there no way to get the same behavior as (ed t) from inside of
zwei?  Or is ther?  I want an automatically generated buffer name (I
know about giving arguments to Select Buffer).
15-Aug-84 17:12:31-EDT,1415;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 15 Aug 84 17:12-EDT
Received: from SCRC-THAMES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 72590; Wed 15-Aug-84 17:13:12-EDT
Date: Wednesday, 15 August 1984, 17:14-EDT
From: Scott McKay <SWM at SCRC-QUABBIN>
Subject: Make list buffers know about support buffers
To: bagley at MIT-OZ, BUG-zwei at MIT-OZ
In-Reply-To: The message of 15 Aug 84 15:51-EDT from Steven C. Bagley <bagley at MIT-OZ>
Message-ID: <840815171402.2.SWM@THAMES.SCRC.Symbolics>

    Date: Wednesday, 15 August 1984, 15:51-EDT
    From: Steven C. Bagley <bagley at MIT-OZ>

    In zwei in Release 5.1, Experimental MIT 1.5, FEP 18, on Lisp Machine Janis Joplin (3600):

    It would be nice if there was some way to get M-X List Buffers not to
    list the support buffers.  Right now, you can sort of get that by giving
    it a numeric argument and then a string not contained in any support
    buffer name (e.g. ":"), but this is kludgy, and not really the right
    thing, since it will miss buffers like *buffer-1*.

I have often thought this would be useful.  Maybe c-- c-X c-B (where c--
means ``everything except...'').  More Teco madness.  BTW, maybe it's
time to write a macro which loops over the buffers, searching/not-searching
as it goes.  So far List Buffers, Select Some Buffers As Tag Table, Kill
Some Buffers all duplicate this looping code.
15-Aug-84 18:10:41-EDT,1665;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 15 Aug 84 18:08-EDT
Received: from SCRC-THAMES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 72595; Wed 15-Aug-84 17:19:23-EDT
Date: Wednesday, 15 August 1984, 17:20-EDT
From: Scott McKay <SWM at SCRC-QUABBIN>
Subject: Make list buffers know about support buffers
To: bagley at MIT-OZ, BUG-zwei at MIT-OZ
In-Reply-To: The message of 15 Aug 84 15:51-EDT from Steven C. Bagley <bagley at MIT-OZ>
Supersedes: <840815171402.2.SWM@THAMES.SCRC.Symbolics>
Message-ID: <840815172020.3.SWM@THAMES.SCRC.Symbolics>

    Date: Wednesday, 15 August 1984, 15:51-EDT
    From: Steven C. Bagley <bagley at MIT-OZ>

    In zwei in Release 5.1, Experimental MIT 1.5, FEP 18, on Lisp Machine Janis Joplin (3600):

    It would be nice if there was some way to get M-X List Buffers not to
    list the support buffers.  Right now, you can sort of get that by giving
    it a numeric argument and then a string not contained in any support
    buffer name (e.g. ":"), but this is kludgy, and not really the right
    thing, since it will miss buffers like *buffer-1*.

I have often thought this would be useful.  Maybe c-- c-X c-B (where c--
means ``everything except...'').  More Teco madness.  BTW, maybe it's
time to write a macro which loops over the buffers, searching/not-searching
as it goes.  So far List Buffers, Select Some Buffers As Tag Table, Kill
Some Buffers all duplicate this looping code.

OK, I take it back.  What I had guessed would be duplication is
sufficiently tangled code that I don't want to touch it with the
proverbial 10 meter cattle prod, unless I have good reason.
16-Aug-84 19:01:01-EDT,1317;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 16 Aug 84 18:59-EDT
Date: Thursday, 16 August 1984, 18:57-EDT
From:  <SAZ at MIT-OZ>
Subject: font list lossage
To: BUG-ZWEI at MIT-OZ

In ZWEI in Release 5.0 [Beta Test rev 7], Experimental Useful 10.0,
Experimental TimeKit 12.0, Experimental Music 11.0,
Experimental Pitch 11.0, Experimental Enharm-Pitch 11.0,
Experimental Harmony 11.0, Experimental Staff 11.0,
Experimental Chroma 11.0, Experimental Play 9.0,
Experimental Linedit 7.0, Experimental Frets 8.0, Music: GC'ed 8 Jul, on Lisp Machine Four (LM-2):

I was experimenting with fonts the other day, defined a few
in a font list in a mode line, and saved the file.  However
I did it improperly, and somehow, control chars got saved
out in the font list (in fact, the control chars which signify
a switch to the fonts they preceded!).  Now I come back the
next day and try to read in the file and can't do it because
a font is undefined (ie, it's medfnb1 rather than medfnb),
I get an error, and not one of the options allows me to 
enter the file anyway, ignoring the broken font list and using
some default font.

THIS MEANS NO WAY TO ENTER THE FILE TO CHANGE THE IMPROPER FONT
LIST, GUYS!

If it weren't for Emacs, I still wouldn't be able to enter
that file to this day!

saz
16-Aug-84 20:49:41-EDT,2146;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 16 Aug 84 20:48-EDT
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 73352; Thu 16-Aug-84 20:29:44-EDT
Date: Thursday, 16 August 1984, 20:29-EDT
From: David A. Moon <Moon at SCRC-TENEX>
Subject: font list lossage
To: SAZ at MIT-OZ
cc: BUG-ZWEI at MIT-OZ
In-Reply-To: The message of 16 Aug 84 18:57-EDT from SAZ at MIT-OZ
Message-ID: <840816202912.8.MOON@EUPHRATES.SCRC.Symbolics>

    Date: Thursday, 16 August 1984, 18:57-EDT
    From:  <SAZ at MIT-OZ>

    In ZWEI in Release 5.0 [Beta Test rev 7], Experimental Useful 10.0,
    Experimental TimeKit 12.0, Experimental Music 11.0,
    Experimental Pitch 11.0, Experimental Enharm-Pitch 11.0,
    Experimental Harmony 11.0, Experimental Staff 11.0,
    Experimental Chroma 11.0, Experimental Play 9.0,
    Experimental Linedit 7.0, Experimental Frets 8.0, Music: GC'ed 8 Jul, on Lisp Machine Four (LM-2):

    I was experimenting with fonts the other day, defined a few
    in a font list in a mode line, and saved the file.  However
    I did it improperly, and somehow, control chars got saved
    out in the font list (in fact, the control chars which signify
    a switch to the fonts they preceded!).  Now I come back the
    next day and try to read in the file and can't do it because
    a font is undefined (ie, it's medfnb1 rather than medfnb),
    I get an error, and not one of the options allows me to 
    enter the file anyway, ignoring the broken font list and using
    some default font.

    THIS MEANS NO WAY TO ENTER THE FILE TO CHANGE THE IMPROPER FONT
    LIST, GUYS!

    If it weren't for Emacs, I still wouldn't be able to enter
    that file to this day!

m-X Find File in Fundamental Mode.

But I agree that this should be offered automatically when you get an error
trying to parse the attribute line of a file.  Actually the development system
seems to be even better; in all cases I tested it recovered automatically
without going into the debugger at all.  So in the next release your problem
should be gone; thanks for the report.
19-Aug-84 00:06:13-EDT,342;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 19 Aug 84 00:06-EDT
Date: Saturday, 18 August 1984, 23:58-EDT
From: David Chapman <Zvona at MIT-OZ>
Subject: dired feature
To: bug-zmacs at MIT-OZ

A command that would do the ``execute queued deletions, etc.'' part of
the Q command, without deselecting the dired buffer, would be handy.
19-Aug-84 22:02:44-EDT,650;000000000000
Mail-From: X.GYRO created at 19-Aug-84 22:02:24
Date: 19 Aug 1984  22:02 EDT (Sun)
Message-ID: <X.GYRO.12040820490.BABYL@MIT-OZ>
From: Scott Layson <X.GYRO@MIT-OZ>
To:   David Chapman <Zvona@MIT-OZ>
Cc:   bug-zmacs@MIT-OZ
Subject: dired feature
In-reply-to: Msg of 18 Aug 1984 23:58-EDT from David Chapman <Zvona>

    Date: Saturday, 18 August 1984, 23:58-EDT
    From: David Chapman <Zvona>

    A command that would do the ``execute queued deletions, etc.'' part of
    the Q command, without deselecting the dired buffer, would be handy.

X does this in the MIT system -- doesn't it work in the Symbolics
system too?

-- Scott
21-Aug-84 09:53:09-EDT,5720;000000000000
Mail-From: X.GYRO created at 21-Aug-84 09:52:59
Date: 21 Aug 1984  09:52 EDT (Tue)
Message-ID: <X.GYRO.12041211991.BABYL@MIT-OZ>
From: Scott Layson <X.GYRO@MIT-OZ>
To:   bug-zwei@MIT-OZ
Subject: resectionizing problem

In System 98.39, CADR 3.4, ZMail 53.5, Experimental Local-File 48.1,
Experimental FILE-Server 8.0, microcode 306, Zeta, on Astarte:

I have buffers full of strange list structure (the parse trees produced by my
C compiler).  Whenever I try to resectionize them I get this lossage.  The
problem appears to be that the NODE in question, which appears to be the
LINE-NODE of all the lines in the buffer (?? what's a NODE for anyway?),
was created without a superior.  If I do

(setf (node-superior (dbg:loc 10))
      (line-node (bp-line (interval-first-bp (dbg:loc 10)))))

and then c-m-R, things appear to work properly.


>>TRAP 4115. (INSTANCE-LACKS-INSTANCE-VARIABLE M-C M-A)
There is no instance variable GLOBAL:PATHNAME in #<NODE 40277055>.
Backtrace from the debugger:

Additional information supplied with call:
 Expecting 3 values

(:PROPERTY :LISP ZWEI:GET-SECTION-NAME) (P.C. = 312)

 Arg 0 (LINE): "(decl+ (char) (fcn+ toupper) (fcn+ tolower))"
 Arg 1 (BP): ("(decl+ (char) (fcn+ isupper) (fcn+ islower) (fcn+ isalpha) (fcn+ isdigit) (fcn+ istoken))" 0.)
Local 0 (STR): GLOBAL:NIL
Local 1 (SYM): GLOBAL:NIL
Local 2 (ERROR-P): GLOBAL:T
Local 3 (IDX): GLOBAL:NIL
Local 4 (END-IDX): GLOBAL:NIL
Local 5 (EOF): ""
Local 6 (NON-FONT-LINE): GLOBAL:NIL
Local 7: GLOBAL:NIL
Local 8: GLOBAL:NIL
Local 9 (*SELECTQ-ITEM*): GLOBAL:NIL
Local 10 (BUFFER): #<NODE 40277055>
Local 11 (NAME): GLOBAL:NIL
Local 12: GLOBAL:NIL
Local 13 (NAME-ELT): GLOBAL:NIL
Local 14 (START-INDEX): GLOBAL:NIL


ZWEI:SECTIONIZE-FILE-BUFFER (P.C. = 524)

 Arg 0 (BUFFER): #<ZMACS-BUFFER "CPARSE.LISP#> GYRO.ZETAC; ASTARTE:" 31305365>
 Arg 1 (AARRAY): #<ART-Q-LIST-560. 3664315>
 Arg 2 (PROPERTY): ZWEI:ZMACS-BUFFERS
   --Defaulted args:--
 Arg 3 (START-NODE): GLOBAL:NIL
 Arg 4 (END-NODE): GLOBAL:NIL
 Arg 5 (STREAM): GLOBAL:NIL
 Arg 6 (HACK-FONTS): GLOBAL:NIL
Local 0 (NODE-LIST): (#<SECTION-NODE "Buffer header" 40415565>)
Local 1 (MODE): ZWEI:LISP-MODE
Local 2 (INT-STREAM): GLOBAL:NIL
Local 3 (FIRST-BP): ("; -*- Mode: Lisp; Base: 10; Tab-width: 5; Package: CParse -*-" 0. :NORMAL)
Local 4 (LAST-BP): ("" 0. :MOVES)
Local 5 (ADDED-COMPLETIONS): #<ART-Q-LIST-64. 40415464>
Local 6 (BUFFER-TICK): 6462.
r) (fcn+ isdigit c))| 31341262>) ...)
Local 8 (NODES-TO-REUSE): GLOBAL:NIL
Local 9 (ACTUAL-NEW-NODES): (#<SECTION-NODE "Buffer header" 40415565>)
Local 10 (START-PREDECESSOR): GLOBAL:NIL
Local 11 (END-FOLLOWER): GLOBAL:NIL
Local 12 (N): GLOBAL:NIL
Local 13: GLOBAL:NIL
Local 14 (NODE): #<SECTION-NODE |ZWEI Utility Package|:|(() (fcn+ movmem src dst len))| 31341557>
Local 15 (LINE): "(decl+ (char) (fcn+ isupper) (fcn+ islower) (fcn+ isalpha) (fcn+ isdigit) (fcn+ istoken))"
Local 16 (LIMIT): ""
Local 17 (EOFFLG): GLOBAL:NIL
Local 18 (BP): ("(decl+ (char) (fcn+ isupper) (fcn+ islower) (fcn+ isalpha) (fcn+ isdigit) (fcn+ istoken))" 0.)
Local 19 (PREV-NODE-START-BP): ("(decl+ (char) (fcn+ isupper) (fcn+ islower) (fcn+ isalpha) (fcn+ isdigit) (fcn+ istoken))" 0.)
Local 20 (PREV-NODE-DEFUN-LINE): "(decl+ (char) (fcn+ toupper) (fcn+ tolower))"
Local 21 (FIRST-NODE-NAME): "Buffer header"
Local 22 (PREVIOUS-NODE): #<SECTION-NODE "Buffer header" 40415565>
Local 23 (ADD-SECTIONS): :LISP
Local 24 (SECTION-P): #<DTP-FEF-POINTER (:PROPERTY :LISP ZWEI:SECTION-P) 30411661>
Local 25 (SECTION-NAME-FUNCTION): #<DTP-FEF-POINTER (:PROPERTY :LISP ZWEI:GET-SECTION-NAME) 30515017>
Local 26 (START): ("(decl+ (char) (fcn+ toupper) (fcn+ tolower))" 0.)
Local 27 (END): ("(decl+ (char) (fcn+ isupper) (fcn+ islower) (fcn+ isalpha) (fcn+ isdigit) (fcn+ istoken))" 0.)
Local 28 (OLD-NODE): GLOBAL:NIL
Local 29 (SYM): "Buffer header"
Local 30 (STR): GLOBAL:NIL
Local 31 (ERR): GLOBAL:NIL
Local 32 (FIRST-NEW-NODE): GLOBAL:NIL
Local 33 (FLUSHED-NODES): GLOBAL:NIL
Local 34 (ALL-NODES): GLOBAL:NIL
Local 35 (THE-BUFFER): GLOBAL:NIL
Local 36: GLOBAL:NIL
Local 37: GLOBAL:NIL
Local 38 (*SELECTQ-ITEM*): GLOBAL:NIL
Local 39 (I): GLOBAL:NIL
Local 40 (J): GLOBAL:NIL


(:METHOD ZWEI:ZMACS-BUFFER :SECTIONIZE) (P.C. = 45)
  (SELF is #<ZMACS-BUFFER "CPARSE.LISP#> GYRO.ZETAC; ASTARTE:" 31305365>)

 Arg 0 (OPERATION): :SECTIONIZE


ZWEI:SECTIONIZE-BUFFER (P.C. = 22)

 Arg 0 (BUFFER): #<ZMACS-BUFFER "CPARSE.LISP#> GYRO.ZETAC; ASTARTE:" 31305365>


ZWEI:COM-SOURCE-COMPARE-MERGE (P.C. = 204)

Local 0 (FILE-1): #<ART-Q-400. 40276075>
Local 1 (FILE-2): #<ART-Q-200. 40276642>
Local 2 (NAME-1): "CPARSE.LISP#> GYRO.ZETAC; ASTARTE:"
Local 3 (NAME-2): #FS:LM-PATHNAME "ASTARTE: GYRO.ZETAC; CPARSE.Z#>"
Local 4 (TYPE-1): "Buffer"
Local 5 (TYPE-2): "File"
Local 6 (BUF-1): #<ZMACS-BUFFER "CPARSE.LISP#> GYRO.ZETAC; ASTARTE:" 31305365>
Local 7 (BUF-2): GLOBAL:NIL
Local 8 (DEFAULT): #FS:LM-PATHNAME "ASTARTE: GYRO.ZETAC; CPARSE.LISP#>"
Local 9 (OUTPUT-BUFFER): #<ZMACS-BUFFER "CPARSE.LISP#> GYRO.ZETAC; ASTARTE:" 31305365>
Local 10 (INTERVAL): #<NODE 40277055>
Local 11 (MARKS): ((** ** ** ** ...) (** ** ** ** ...) (** ** ** ** ...) (** ** ** ** ...))


Remainder of stack:

ZWEI:COM-EXTENDED-COMMAND (P.C. = 67)
ZWEI:COMMAND-EXECUTE (P.C. = 115)
ZWEI:PROCESS-COMMAND-CHAR (P.C. = 65)
(:METHOD ZWEI:WINDOW :EDIT) (P.C. = 464)
(:INTERNAL (:METHOD ZWEI:ZMACS-WINDOW :COMBINED :EDIT) 0.) (P.C. = 74)
GLOBAL:FUNCALL (P.C. = 25)
(:METHOD ZWEI:DISPLAYER :AROUND :EDIT) (P.C. = 31)
(:METHOD ZWEI:ZMACS-WINDOW :COMBINED :EDIT) (P.C. = 47)
ZWEI:ZMACS-WINDOW-TOP-LEVEL (P.C. = 46)
SI:PROCESS-TOP-LEVEL (P.C. = 152)

25-Aug-84 11:22:52-EDT,560;000000000000
Mail-From: X.GYRO created at 25-Aug-84 11:22:44
Date: 25 Aug 1984  11:22 EDT (Sat)
Message-ID: <X.GYRO.12042276904.BABYL@MIT-OZ>
From: Scott Layson <X.GYRO@MIT-OZ>
To:   bug-zwei@MIT-OZ
Subject: Forward S-EXP and #| ... |#

In Release 5.1:

When Point is anywhere before a #| ... |# comment and one types c-m-F,
Point is left between the | and the # that terminate the comment.  It
should be one character farther forward.  Similarly for going
backward.  I probably would never have noticed except that this works
right in System 98.

-- Scott
28-Aug-84 21:27:05-EDT,1066;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 28 Aug 84 21:26-EDT
Received: from SCRC-MERRIMACK by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 76599; Tue 28-Aug-84 21:24:26-EDT
Date: Tuesday, 28 August 1984, 21:27-EDT
From: Mike McMahon <MMcM at SCRC-TENEX>
Subject: automatically generating new buffer
To: Steven C. Bagley <bagley at MIT-OZ>
cc: BUG-zwei at MIT-OZ
In-Reply-To: The message of 15 Aug 84 16:50-EDT from Steven C. Bagley <bagley at MIT-OZ>
Message-ID: <840828212701.0.MMCM@MERRIMACK.SCRC.Symbolics>

    Date: Wednesday, 15 August 1984, 16:50-EDT
    From: Steven C. Bagley <bagley at MIT-OZ>

    In zwei in Release 5.1, Experimental MIT 1.5, FEP 18, on Lisp Machine Janis Joplin (3600):

    Why is there no way to get the same behavior as (ed t) from inside of
    zwei?  Or is ther?  I want an automatically generated buffer name (I
    know about giving arguments to Select Buffer).

I cannot tell whether your last phrase means that you know that
c-U C-X B [Return] does this and find that unacceptable or didn't
know.
 4-Sep-84 17:13:02-EDT,727;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 4 Sep 84 17:01-EDT
Date: Tuesday, 4 September 1984, 17:01-EDT
From: Ronald I. Greenberg <RIG at MIT-MC>
Subject: Devastating results of m-X Edit Word Abbbreviations when not in word abbreviation mode
To: BUG-ZWEI at MIT-OZ

In ZWEI in Release 5.1, Experimental MIT 1.4, FEP 18, on TELLURIDE (3600):

     I have found that trying to edit word abbreviations when not in
word abbreviation mode (on TELLURIDE or on PI) leads to results which
are excessively devastating.  I get a message that the window system is
locked and the cold load stream is being used, and then I get thrown
into the debugger and have lots of trouble straightening things out.

					rig@mit-mc
 4-Sep-84 17:23:56-EDT,573;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 4 Sep 84 17:22-EDT
Date: Tuesday, 4 September 1984, 17:21-EDT
From: Ronald I. Greenberg <RIG at MIT-MC>
Subject: More problems with editing word abbreviations
To: BUG-ZWEI at MIT-OZ

In ZWEI in Release 5.1, Experimental MIT 1.4, FEP 18, on TELLURIDE (3600):

     I have now found that even when in the correct mode, hitting a
carriage return while editing word abbreviations yields the message
PROCESS ZMACS-WINDOW GOT AN ERROR and puts SELECTED instead of Tyi in
the information line at the bottom of the screen.
 5-Sep-84 15:30:20-EDT,468;000000000000
Received: from MIT-LISPM-2 by MIT-OZ via Chaosnet; 5 Sep 84 15:29-EDT
Date: Wednesday, 5 September 1984, 15:31-EDT
From: Patrick G. Sobalvarro <PGS at MIT-OZ>
Subject: bug in zmail
To: BUG-ZWEI at MIT-OZ

In ZWEI in System 98.67, CADR 3.8, ZMail 53.18, MIT-Specific 22.2,
microcode 309, gc@36, on Lisp Machine Two:

Find file, in the select menu in Zmail, no longer finds files; it claims that
already existing files do not exist and does not read them in.
 5-Sep-84 15:33:13-EDT,616;000000000000
Received: from MIT-LISPM-2 by MIT-OZ via Chaosnet; 5 Sep 84 15:33-EDT
Date: Wednesday, 5 September 1984, 15:34-EDT
From: Patrick G. Sobalvarro <PGS at MIT-OZ>
Subject: find file broken
To: BUG-ZWEI at MIT-OZ

In ZWEI in System 98.67, CADR 3.8, ZMail 53.18, MIT-Specific 22.2,
microcode 309, gc@36, on Lisp Machine Two:

Correction to that last message: find file in Zwei seems to be broken, period.
While trying to find the file OZ: PS:<PGS.STUFF>RAUL.XMAIL, I could not get it
to complete to the full file name (and the file does exist), and it wouldn't
find the file, either.  Crufty, crufty, crufty.
 5-Sep-84 15:35:43-EDT,401;000000000000
Received: from MIT-LISPM-2 by MIT-OZ via Chaosnet; 5 Sep 84 15:35-EDT
Date: Wednesday, 5 September 1984, 15:36-EDT
From: Patrick G. Sobalvarro <PGS at MIT-OZ>
Subject: bug in pgs
To: BUG-ZWEI at MIT-OZ

In ZWEI in System 98.67, CADR 3.8, ZMail 53.18, MIT-Specific 22.2,
microcode 309, gc@36, on Lisp Machine Two:

Correction: my brain is losing.  I had specified the wrong filename.
Sorry.
 6-Sep-84 00:54:41-EDT,617;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 6 Sep 84 00:54-EDT
Date: Thursday, 6 September 1984, 00:47-EDT
From:  <GUMBY at MIT-DM>
Subject: Yet another activity bug (cursor)
To: BUG-zwei at MIT-OZ

In zwei in Release 5.1, Experimental MIT 1.4, COLOR 5.1, FEP 18, on Lisp Machine Buddy Holly (3600):

I was evaluating (load "foo") in my zwei (with c-sh-e).  Since the file
did not exist it asked me for an alternate pathname.  I hit break so I
could look around.  The break window was opened, but the cursor in the
interaction pane continues to blink.  Characters, however, went into the
break window.
 6-Sep-84 00:57:21-EDT,467;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 6 Sep 84 00:57-EDT
Date: Thursday, 6 September 1984, 00:51-EDT
From:  <GUMBY at MIT-DM>
Subject: mail suggestion
To: BUG-zwei at MIT-OZ

In zwei in Release 5.1, Experimental MIT 1.4, COLOR 5.1, FEP 18, on Lisp Machine Buddy Holly (3600):

How about if c-end grabbed the text of the messaged and spawned a
process to send it?  Then if the namspace server were busy or whatever
you could still continue editing.
 6-Sep-84 02:56:43-EDT,759;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 6 Sep 84 02:56-EDT
Date: Thursday, 6 September 1984, 02:50-EDT
From:  <GUMBY at MIT-DM>
Subject: zwei:electric-font-lock-if-appropriate still broken!
To: BUG-zwei at MIT-OZ

In zwei in Release 5.1, Experimental MIT 1.5, COLOR 5.1, FEP 18, on Lisp Machine Buddy Holly (3600):

Your definition of zwei:electric-font-lock-if-appropriate is still
broken.  It switches on electric-font-lock-mode if the file as an
attribute list and but one font specified therein.


(defun electric-font-lock-if-appropriate ()
  (if (cdr (send *interval* ':get ':font-alist))        ;don't do it if only one font specified.
      (turn-on-mode 'electric-font-lock-mode)
    (turn-off-mode 'electric-font-lock-mode)))
13-Sep-84 16:52:49-EDT,392;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 13 Sep 84 16:52-EDT
Date: Thursday, 13 September 1984, 16:46-EDT
From: Henry Lieberman <Henry at MIT-OZ>
Subject: ZWEI:*CURRENT-COMMAND-LOOP*
To: BUG-Zwei at MIT-OZ

In Zwei in Release 5.1, Experimental MIT 1.4, FEP 18, on APIARY-9 (3600):

This variable is bound in 5.1, but not in 5.2. Operations like
MAKE-BUFFER-CURRENT need it. 

14-Sep-84 12:29:56-EDT,1004;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 14 Sep 84 12:27-EDT
Received: from SCRC-EUPHRATES by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 81400; Fri 14-Sep-84 12:27:55-EDT
Date: Friday, 14 September 1984, 12:30-EDT
From: David A. Moon <Moon at SCRC-TENEX>
Subject: zwei:electric-font-lock-if-appropriate still broken!
To: GUMBY at MIT-MC
cc: BUG-zwei at MIT-OZ
In-Reply-To: The message of 6 Sep 84 02:50-EDT from GUMBY at MIT-DM
Message-ID: <840914123030.2.MOON@EUPHRATES.SCRC.Symbolics>

    Date: Thursday, 6 September 1984, 02:50-EDT
    From:  <GUMBY at MIT-MC>

    In zwei in Release 5.1, Experimental MIT 1.5, COLOR 5.1, FEP 18, on Lisp Machine Buddy Holly (3600):

    Your definition of zwei:electric-font-lock-if-appropriate is still
    broken.  It switches on electric-font-lock-mode if the file as an
    attribute list and but one font specified therein.

Thank you for pointing this out.  Patched in 258.10, which will be included in the
next system release.
15-Sep-84 16:08:22-EDT,915;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 15 Sep 84 16:08-EDT
Received: from SCRC-EUPHRATES by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 81668; Sat 15-Sep-84 13:21:55-EDT
Date: Saturday, 15 September 1984, 13:24-EDT
From: David A. Moon <Moon at SCRC-TENEX>
Subject: ZWEI:*CURRENT-COMMAND-LOOP*
To: Henry Lieberman <Henry at MIT-OZ>
cc: BUG-Zwei at MIT-OZ
In-Reply-To: The message of 13 Sep 84 16:46-EDT from Henry Lieberman <Henry at MIT-OZ>
Message-ID: <840915132453.3.MOON@EUPHRATES.SCRC.Symbolics>

    Date: Thursday, 13 September 1984, 16:46-EDT
    From: Henry Lieberman <Henry at MIT-OZ>

    In Zwei in Release 5.1, Experimental MIT 1.4, FEP 18, on APIARY-9 (3600):

    This variable is bound in 5.1, but not in 5.2. Operations like
    MAKE-BUFFER-CURRENT need it. 

It's bound in Zmacs by the 5.2 that I have.  If this bug report is real, send
it again to BUG-LISPM please.
16-Sep-84 13:42:14-EDT,644;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 16 Sep 84 13:42-EDT
Date: Sunday, 16 September 1984, 13:46-EDT
From: Steven C. Bagley <bagley at MIT-OZ>
Subject: C-M-L has trouble
To: BUG-zwei at MIT-OZ

In zwei in Release 5.1, Experimental MIT 1.5, on Lisp Machine Robot-4 (3600):

With a fresh machine, run (dribble-start "foo" t) to put some cruft into
a buffer, do (dribble-end), select-e.  You're now looking at *BUFFER-1*.
Type C-M-L to select the foo buffer.  Zwei beeps at you.  You can select
the foo buffer with C-X b, or C-X C-B mouse on buffer name, but not
C-M-L.  After foo has been select once, then C-M-L works fine.
17-Sep-84 16:23:58-EDT,448;000000000000
Received: from MIT-MOON by MIT-OZ via Chaosnet; 17 Sep 84 16:23-EDT
Date: Monday, 17 September 1984, 16:27-EDT
From: Ken Haase <KWH at MIT-OZ>
Subject: Control-Meta-X commands
To: BUG-ZWEI at MIT-OZ

In Symbolics 3600 ZWEI in Release 5.2, ARLO 25.14, ARLOX 5.7, FEP 18, on Lisp Machine Keith Moon:

When a user uses a Control-Meta-X command, it would be
nice if the command migrated to the Meta-X command list
(for some contour).

Ken
17-Sep-84 22:13:46-EDT,790;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 17 Sep 84 22:13-EDT
Date: Monday, 17 September 1984, 22:16-EDT
From:  <PHILIP at SCC-VAIL>
Subject: Cursor bug.
To: BUG-ZWEI at MIT-OZ
Cc: philip at MIT-OZ

In Symbolics 3600 ZMAIL in Release 5.2, on Lisp Machine Robot-4:

There are problems with cursors that do not go away when
a break window is entered in ZMACS.

To recreate the problem, place your ZMACS cursor on 
the top line of the screen. Hit Control-S (to get 
an active cursor in the bottom of the screen). 
Now hit [Break] while the I-search is active. 
The cursor that's on the top line of the page
will remain visible over the TYPEOUT-WINDOW
eventhough the main buffer isn't exposed anymore.
The TYPEOUT-WINDOW blinker is also visible and
working properly.

22-Sep-84 16:23:43-EDT,1309;000000000000
Received: from SCRC-QUABBIN by MIT-OZ via Chaosnet; 22 Sep 84 16:23-EDT
Received: from SCRC-EUPHRATES by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 83894; Sat 22-Sep-84 16:27:21-EDT
Date: Saturday, 22 September 1984, 16:26-EDT
From: David A. Moon <Moon at SCRC-TENEX>
Subject: Cursor bug.
To: PHILIP at SCC-VAIL
cc: BUG-ZWEI at MIT-OZ
In-Reply-To: The message of 17 Sep 84 22:16-EDT from PHILIP at SCC-VAIL
Message-ID: <840922162618.5.MOON@EUPHRATES.SCRC.Symbolics>

    Date: Monday, 17 September 1984, 22:16-EDT
    From:  <PHILIP at SCC-VAIL>

    In Symbolics 3600 in Release 5.2, on Lisp Machine Robot-4:

    There are problems with cursors that do not go away when
    a break window is entered in ZMACS.

    To recreate the problem, place your ZMACS cursor on 
    the top line of the screen. Hit Control-S (to get 
    an active cursor in the bottom of the screen). 
    Now hit [Break] while the I-search is active. 
    The cursor that's on the top line of the page
    will remain visible over the TYPEOUT-WINDOW
    eventhough the main buffer isn't exposed anymore.
    The TYPEOUT-WINDOW blinker is also visible and
    working properly.

Thanks for the report.  This is fixed in a future version of the
system, which will probably be included in the next release.
27-Sep-84 14:55:14-EDT,335;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 27 Sep 84 14:54-EDT
Date: Thursday, 27 September 1984, 14:51-EDT
From: TAFT at MIT-MC
Sender: tk at MIT-MC
Subject: M-$, that day is today...
To: Bug-Zwei at MIT-OZ

In Symbolics 3600 Zwei in Release 5.2, NS 19.70, FEP 18, on Lisp Machine Elvis Presley:

M-$ seems to be broken.
29-Sep-84 20:36:04-EDT,1365;000000000000
Received: from SCRC-YUKON by MIT-OZ via Chaosnet; 29 Sep 84 20:35-EDT
Received: from SCRC-HUDSON by SCRC-YUKON via CHAOS with CHAOS-MAIL id 63938; Fri 28-Sep-84 02:20:43-EDT
Date: Friday, 28 September 1984, 02:21-EDT
From: Robert W. Kerns <RWK at SCRC-YUKON>
Subject: C-M-L has trouble
To: Steven C. Bagley <bagley at MIT-OZ>
cc: BUG-zwei at MIT-OZ
In-Reply-To: The message of 16 Sep 84 13:46-EDT from Steven C. Bagley <bagley at MIT-OZ>
Message-ID: <840928022102.7.RWK@HUDSON.SCRC.Symbolics>

    Date: Sunday, 16 September 1984, 13:46-EDT
    From: Steven C. Bagley <bagley at MIT-OZ>

    In zwei in Release 5.1, Experimental MIT 1.5, on Lisp Machine Robot-4 (3600):

    With a fresh machine, run (dribble-start "foo" t) to put some cruft into
    a buffer, do (dribble-end), select-e.  You're now looking at *BUFFER-1*.
    Type C-M-L to select the foo buffer.  Zwei beeps at you.  You can select
    the foo buffer with C-X b, or C-X C-B mouse on buffer name, but not
    C-M-L.  After foo has been select once, then C-M-L works fine.

The first line of the documentation for c-m-L is
"Selects the previously selected buffer".  It doesn't
mean "select some other buffer".  It's used for getting
back to places you've already been.  You don't want it
selecting various special-purpose buffers that get created
by various operations.
30-Sep-84 19:34:51-EDT,967;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 30 Sep 84 19:34-EDT
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 100294; Sun 30-Sep-84 16:59:21-EDT
Date: Sunday, 30 September 1984, 16:58-EDT
From: David A. Moon <Moon at SCRC-TENEX>
Subject: M-$, that day is today...
To: TAFT at MIT-MC
cc: Bug-Zwei at MIT-OZ
In-Reply-To: The message of 27 Sep 84 14:51-EDT from TAFT at MIT-MC
Message-ID: <840930165826.3.MOON@EUPHRATES.SCRC.Symbolics>

    Date: Thursday, 27 September 1984, 14:51-EDT
    From: TAFT at MIT-MC

    In Symbolics 3600 Zwei in Release 5.2, NS 19.70, FEP 18, on Lisp Machine Elvis Presley:

    M-$ seems to be broken.

There is no m-$ command in Zwei, so this must be something you load in your init file
so BUG-ZWEI is the wrong place to report its brokenness to.  I know of several people
who have private m-$ commands, but I couldn't guess which one of them to forward
your message to.
30-Sep-84 19:45:20-EDT,769;000000000000
Received: from SCRC-YUKON by MIT-OZ via Chaosnet; 30 Sep 84 19:45-EDT
Received: from SCRC-HUDSON by SCRC-YUKON via CHAOS with CHAOS-MAIL id 64350; Sun 30-Sep-84 01:48:22-EDT
Date: Sunday, 30 September 1984, 01:46-EDT
From: Robert W. Kerns <RWK at SCRC-YUKON>
Subject: M-$, that day is today...
To: TAFT at MIT-MC
cc: Bug-Zwei at MIT-OZ
In-Reply-To: The message of 27 Sep 84 14:51-EDT from TAFT at MIT-MC
Message-ID: <840930014648.6.RWK@HUDSON.SCRC.Symbolics>

    Date: Thursday, 27 September 1984, 14:51-EDT
    From: TAFT at MIT-MC

    In Symbolics 3600 Zwei in Release 5.2, NS 19.70, FEP 18, on Lisp Machine Elvis Presley:

    M-$ seems to be broken.
There *IS* no m-$ in our software, that I know of.
Presumably you load it from somewhere else?
 2-Oct-84 12:13:09-EDT,351;000000000000
Mail-From: RPK created at  2-Oct-84 12:12:46
Date: 2 Oct 1984  12:12 EDT (Tue)
Message-ID: <RPK.12052247485.BABYL@MIT-OZ>
From: "Robert P. Krajewski" <RPK@MIT-OZ>
To:   Bug-Zwei@MIT-OZ, TAFT@MIT-MC
Subject: M-$, that day is today...
In-reply-to: Msg of 30 Sep 1984 16:58-EDT from David A. Moon <Moon at SCRC-TENEX>

M-$ works the MIT System.
 4-Oct-84 16:38:23-EDT,3771;000000000000
Received: from MIT-APIARY-7 by MIT-OZ via Chaosnet; 4 Oct 84 16:26-EDT
Date: Thursday, 4 October 1984, 16:25-EDT
From: Henry Lieberman <Henry at MIT-OZ>
Subject: Edit Word Abbrevs
To: BUG-Zwei at MIT-OZ

In Symbolics 3600 Release 5.2, FEP 18, on Lisp Machine Apiary-7:

I was in two-window mode when this happened.


>>Error: The object #<NODE 6566035> received a :NAME message, which went unclaimed.
         The rest of the message was ()
While in the function (:METHOD ZWEI:ZMACS-FRAME :UPDATE-LABELS)  (:METHOD ZWEI:ZMACS-WINDOW-PANE :AFTER :EXPOSE)  (:INTERNAL (:METHOD ZWEI:ZMACS-WINDOW-PANE :COMBINED :EXPOSE) 0)

(:METHOD ZWEI:ZMACS-FRAME :UPDATE-LABELS):  (P.C. = 27)
   Arg 0 (SELF): #<ZMACS-FRAME Zmacs Frame 1 3100257 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMACS-FRAME -- 3. IV's, 5. FL's 42176233>
   Arg 2 (OPERATION): :UPDATE-LABELS
   Local 3: (#<ZMACS-WINDOW-PANE Zmacs Window Pane 5 1000516 exposed> #<ZMACS-WINDOW-PANE Zmacs Window Pane 1 3100337 exposed> #<ZMACS-MODE-LINE-WINDOW Zmacs Mode Line Window 2 3107613 exposed>)
   Local 4 (W): #<ZMACS-WINDOW-PANE Zmacs Window Pane 5 1000516 exposed>

(:METHOD ZWEI:ZMACS-WINDOW-PANE :AFTER :EXPOSE):  (P.C. = 5)
   Arg 0 (SELF): #<ZMACS-WINDOW-PANE Zmacs Window Pane 5 1000516 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMACS-WINDOW-PANE -- 1. IV's, 17. FL's 45411314>
   Arg 2 (OPERATION): :EXPOSE
   Rest arg (IGNORE): (T :CLEAN 1 340)

(:INTERNAL (:METHOD ZWEI:ZMACS-WINDOW-PANE :COMBINED :EXPOSE) 0):  (P.C. = 61)
   Arg 0 (SELF): #<ZMACS-WINDOW-PANE Zmacs Window Pane 5 1000516 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMACS-WINDOW-PANE -- 1. IV's, 17. FL's 45411314>
   Rest arg (.DAEMON-CALLER-ARGS.): (:EXPOSE T :CLEAN 1 340)

(:METHOD TV:SHEET :WHOPPER :EXPOSE):  (P.C. = 63)
   Arg 0 (SELF): #<ZMACS-WINDOW-PANE Zmacs Window Pane 5 1000516 exposed>
   Arg 1 (SELF-MAPPING-TABLE): TV:SHEET
   Arg 2 (.WHOPPER-CONTINUATION.): #<DTP-COMPILED-FUNCTION (:INTERNAL (:METHOD ZWEI:ZMACS-WINDOW-PANE :COMBINED :EXPOSE) 0) 44635773>
   Arg 3 (.OLD-SELF-MAPPING-TABLE.): #<Map to flavor ZWEI:ZMACS-WINDOW-PANE -- 1. IV's, 17. FL's 45411314>
   Arg 4 (.OPERATION.): :EXPOSE
   Arg 5 (TURN-ON-BLINKERS): T
   Arg 6 (BITS-ACTION): :CLEAN
   --Defaulted args:--
   Arg 7 (X): 1
   Arg 8 (Y): 340

(:METHOD ZWEI:ZMACS-WINDOW-PANE :COMBINED :EXPOSE):  (P.C. = 55)
   Arg 0 (SELF): #<ZMACS-WINDOW-PANE Zmacs Window Pane 5 1000516 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMACS-WINDOW-PANE -- 1. IV's, 17. FL's 45411314>
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

(:METHOD TV:SELECT-MIXIN :BEFORE :SELECT):  (P.C. = 13)
   Arg 0 (SELF): #<ZMACS-WINDOW-PANE Zmacs Window Pane 5 1000516 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor TV:SELECT-MIXIN -- 1. IV's, 0. FL's 45411224>
   Arg 2 (OPERATION): :SELECT
   --Defaulted args:--
   Arg 3 (SAVE-SELECTED): T

(:METHOD ZWEI:ZMACS-WINDOW-PANE :COMBINED :SELECT):  (P.C. = 52)
   Arg 0 (SELF): #<ZMACS-WINDOW-PANE Zmacs Window Pane 5 1000516 exposed>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMACS-WINDOW-PANE -- 1. IV's, 17. FL's 45411314>
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

ZWEI:RECURSIVE-EDIT:  (P.C. = 27)
   Arg 0 (INTERVAL): #<NODE 6566035>
   Arg 1 (MODE): "Edit Word Abbrevs"
   --Defaulted args:--
   Arg 2 (POINT): NIL

Rest of stack:
ZWEI:COM-EDIT-WORD-ABBREVS:  (P.C. = 13)
ZWEI:COM-EXTENDED-COMMAND:  (P.C. = 27)
ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 214)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 41)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
 7-Oct-84 17:11:41-EDT,450;000000000000
Received: from MIT-LISPM-2 by MIT-OZ via Chaosnet; 7 Oct 84 17:05-EDT
Date: Sunday, 7 October 1984, 17:04-EDT
From: Steve Gander <GANDER at MIT-OZ>
To: BUG-ZWEI at MIT-OZ

In ZWEI in System 98.30, CADR 3.6, ZMail 53.10, MIT-Specific 22.0,
DAEDALUS 5.2, microcode 306, ZM MIT, on Lisp Machine Two:

control-meta-x uncomment out region 
returns nil and causes an error , the comments are removed from 
the right places in the buffer though.
10-Oct-84 15:04:50-EDT,683;000000000000
Received: from MIT-LISPM-4 by MIT-OZ via Chaosnet; 10 Oct 84 15:03-EDT
Date: Wednesday, 10 October 1984, 15:01-EDT
From: David M. J. Saslav <saz at MIT-OZ>
To: BUG-ZWEI at MIT-OZ

In ZWEI in System 98.70, CADR 3.8, ZMail 53.18, MIT-Specific 22.4,
microcode 309, ZM MIT, on Lisp Machine Four:

I realize that mouse sensitivity is a very complicated concept,
but it's kind of annoying when you click left to move to a point
in a buffer, then depress the meta key, and an error message
flashes saying meta-mouse-left is not a defined key...

I suppose a mouse click should be an atomic event, one which is
not reading bucky bits from the keyboard as it executes.

DmjS
11-Oct-84 00:54:04-EDT,497;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 11 Oct 84 00:53-EDT
Date: Thursday, 11 October 1984, 00:53-EDT
From:  <STRAZ at MIT-OZ>
Subject: suggestion
To: BUG-EMACS at MIT-OZ, BUG-ZMACS at MIT-OZ

Forgive me if this already exists, but how about new commands:
DASHIFY-WORD
UNDASHIFY-WORD
probably mounted on one of the bucky-hyphens.

When-placed-on-a-word-the-command-DASHIFY-WORD-would-put-a-
dash-between-it-and-the-next-word. Undashify would be the obvious
inverse operation.
11-Oct-84 03:24:11-EDT,1230;000000000000
Mail-From: MLY created at 11-Oct-84 03:24:01
Date: Thu 11 Oct 84 03:24:01-EDT
From: Richard Mlynarik <MLY@MIT-MC>
Sender: MLY@MIT-OZ
To: saz@MIT-OZ
cc: BUG-ZWEI@MIT-OZ
Reply-To: MLY@MIT-OZ
In-Reply-To: Message from "David M. J. Saslav <saz at MIT-OZ>" of Wed 10 Oct 84 15:04:03-EDT

    Date: Wednesday, 10 October 1984, 15:01-EDT
    From: David M. J. Saslav <saz at MIT-OZ>

    In ZWEI in System 98.70, CADR 3.8, ZMail 53.18, MIT-Specific 22.4,
    microcode 309, ZM MIT, on Lisp Machine Four:

    I realize that mouse sensitivity is a very complicated concept,
    but it's kind of annoying when you click left to move to a point
    in a buffer, then depress the meta key, and an error message
    flashes saying meta-mouse-left is not a defined key...

    I suppose a mouse click should be an atomic event, one which is
    not reading bucky bits from the keyboard as it executes.

Yes, many caring and sensitive human beings have deeply-felt feelings about the
behaviour of their mice, and it would be callous in the extreme to deny the
complication of that situation, and the sorts of emotions involved.
However, in the interests of annoying you less, this is fixed in 98.73 and 99.8
-------
21-Oct-84 14:22:41-EDT,3655;000000000000
Received: from MIT-ROBOT-1 by MIT-OZ via Chaosnet; 21 Oct 84 14:21-EDT
Date: Sunday, 21 October 1984, 14:21-EDT
From: Steven C. Bagley <bagley at MIT-OZ>
Subject: list callers dies on :method
To: BUG-zwei at MIT-OZ

In Symbolics 3600 Release 5.2, FEP 18, on Lisp Machine Robot-1:

I did M-X list callers, then clicked on the box around
(interp-generator :next-interp) in the following line:
(defmethod (interp-generator :next-interp) ()
...
and it blew out thusly:

>>Error: The argument SYMBOLS to SI:FIND-CALLERS-OF-SYMBOLS, ((:METHOD INTERP-GENERATOR :NEXT-INTERP)), was of the wrong type.
         The function expected a symbol or a list of symbols.
While in the function SI:FIND-CALLERS-OF-SYMBOLS  (:METHOD ZWEI:CALLERS-OF-FUNCTIONS-EDITING-BUFFER :REVERT)  (:METHOD ZWEI:CALLERS-OF-FUNCTIONS-EDITING-BUFFER :COMBINED :REVERT)

SI:FIND-CALLERS-OF-SYMBOLS:  (P.C. = 103)
   Arg 0 (SYMBOLS-initialization): ((:METHOD INTERP-GENERATOR :NEXT-INTERP))
   Arg 1 (PKG): #<Package SHAPE 5145601>
   Arg 2 (FUNCTION-initialization): #<DTP-COMPILED-FUNCTION (:INTERNAL (:METHOD ZWEI:CALLERS-OF-FUNCTIONS-EDITING-BUFFER :REVERT) 0.) 44644315>
   --Defaulted args:--
   Arg 3 (DO-INFERIORS): T
   Arg 4 (DO-SUPERIORS): T

(:METHOD ZWEI:CALLERS-OF-FUNCTIONS-EDITING-BUFFER :REVERT):  (P.C. = 15)
   Arg 0 (SELF): #<CALLERS-OF-FUNCTIONS-EDITING-BUFFER "*Callers-2*" 53276307>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:CALLERS-OF-FUNCTIONS-EDITING-BUFFER -- 3. IV's, 4. FL's 45650374>
   Arg 2 (OPERATION): :REVERT

(:METHOD ZWEI:CALLERS-OF-FUNCTIONS-EDITING-BUFFER :COMBINED :REVERT):  (P.C. = 15)
   Arg 0 (SELF): #<CALLERS-OF-FUNCTIONS-EDITING-BUFFER "*Callers-2*" 53276307>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:CALLERS-OF-FUNCTIONS-EDITING-BUFFER -- 3. IV's, 4. FL's 45650374>
   Rest arg (.DAEMON-CALLER-ARGS.): NIL

(:METHOD ZWEI:ZMACS-EDITOR :FIND-SPECIAL-BUFFER):  (P.C. = 45)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 35672207>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMACS-EDITOR -- 3. IV's, 0. FL's 42623345>
   Arg 2 (OPERATION): :FIND-SPECIAL-BUFFER
   Arg 3 (TYPE): :CALLERS-OF-FUNCTIONS
   Arg 4 (NEW-P): T
   Rest arg (SETS): (:SET-FUNCTION-SPECS ((:METHOD INTERP-GENERATOR :NEXT-INTERP)) :SET-PACKAGE-TO-SEARCH #<Package SHAPE 5145601> :SET-NAME-OF-PACKAGE-TO-SEARCH "package SHAPE")

(:DEFUN-METHOD ZWEI:PUSH-POSSIBILITIES-BUFFER):  (P.C. = 10)
   Arg 0 (SELF): #<ZMACS-TOP-LEVEL-EDITOR 35672207>
   Arg 1 (SELF-MAPPING-TABLE): #<Map to flavor ZWEI:ZMACS-EDITOR -- 3. IV's, 0. FL's 42623345>
   Arg 2 (ACTION): :LIST-POSSIBILITIES
   Arg 3 (TYPE): :CALLERS-OF-FUNCTIONS
   Rest arg (SET-OPTIONS): (:SET-FUNCTION-SPECS ((:METHOD INTERP-GENERATOR :NEXT-INTERP)) :SET-PACKAGE-TO-SEARCH #<Package SHAPE 5145601> :SET-NAME-OF-PACKAGE-TO-SEARCH "package SHAPE")

ZWEI:PUSH-POSSIBILITIES-BUFFER:  (P.C. = 12)
   Rest arg (ARGS): (:LIST-POSSIBILITIES :CALLERS-OF-FUNCTIONS :SET-FUNCTION-SPECS ((:METHOD INTERP-GENERATOR :NEXT-INTERP)) :SET-PACKAGE-TO-SEARCH #<Package SHAPE 5145601> :SET-NAME-OF-PACKAGE-TO-SEARCH "package SHAPE")

ZWEI:WHO-CALLS-INTERNAL:  (P.C. = 62)
   Arg 0 (PROMPT): "List"
   Arg 1 (ACTION): :LIST-POSSIBILITIES
   --Defaulted args:--
   Arg 2 (MUST-BE-DEFINED-FLAG): NIL

ZWEI:COM-LIST-CALLERS:  (P.C. = 4)

Rest of stack:
ZWEI:COM-EXTENDED-COMMAND:  (P.C. = 27)
ZWEI:COMMAND-EXECUTE:  (P.C. = 55)
ZWEI:PROCESS-COMMAND-CHAR:  (P.C. = 14)
(:METHOD ZWEI:EDITOR :EDIT):  (P.C. = 214)
(:METHOD ZWEI:TOP-LEVEL-EDITOR :COMBINED :EDIT):  (P.C. = 41)
ZWEI:ZMACS-WINDOW-TOP-LEVEL:  (P.C. = 16)
SI:PROCESS-TOP-LEVEL:  (P.C. = 53)
27-Oct-84 02:29:16-EDT,306;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 27 Oct 84 02:29-EDT
Date: 27 October 1984 02:31-EDT
From: Tim McNerney <TIM @ MIT-MC>
Subject:  m-X Set Vsp doesn't redisplay correctly
To: BUG-ZWEI @ MIT-MC

In Release 5.2 on MIT Lisp Machine Duane Allman

Should force a full redisplay but doesn't.
30-Oct-84 04:10:55-EST,692;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 30 Oct 84 04:10-EST
Received: from SCRC-THAMES by SCRC-QUABBIN via CHAOS with CHAOS-MAIL id 96738; Mon 29-Oct-84 11:06:49-EST
Date: Mon, 29 Oct 84 11:09 EST
From: Scott McKay <SWM@SCRC-QUABBIN.ARPA>
Subject: m-X Set Vsp doesn't redisplay correctly
To: TIM@MIT-MC.ARPA, BUG-ZWEI@MIT-MC.ARPA
In-Reply-To: The message of 27 Oct 84 02:31-EDT from Tim McNerney <TIM at MIT-MC>
Message-ID: <841029110907.8.SWM@THAMES.SCRC.Symbolics>

    Date: 27 October 1984 02:31-EDT
    From: Tim McNerney <TIM @ MIT-MC>

    In Release 5.2 on MIT Lisp Machine Duane Allman

    Should force a full redisplay but doesn't.

Thanks.  Fixed in Rel 6.
31-Oct-84 23:16:42-EST,1176;000000000000
Received: from MIT-APIARY-3 by MIT-OZ via Chaosnet; 31 Oct 84 23:16-EST
Date: Wednesday, 31 October 1984, 23:10-EST
From:  <Henry at MIT-OZ>
Subject: Per-file word abbrevs
To: Bug-Zwei at MIT-OZ, Bug-Emacs at MIT-OZ


Rather than having per-mode word abbrevs or global word abbrevs, 
usually what I really want is per-file word abbrevs. I use word
abbrevs extensively for names of functions and variables in Lisp 
code, or commonly typed words in papers. Per-mode word abbrevs aren't
right, because if you're editing two programs their word abbrevs will
clash, or if you're editing two papers. You also need the ability
to import abbrevs from one file to another. Sometimes with Lisp code
what you really mean is that the abbrevs are per-system, but per-file
would be good enough if you could import the abbrevs from the defsystem 
file, say, or perhaps defsystem ought to have a mechanism for this.
Also, using Meta-X Read/Write Word Abbrev File explicitly is a pain, it should
happen automatically with C-X C-F and C-X C-S [which I tried hacking but the
lack of per-file abbrevs didn't make it win].

What do you think? How easy would this be to do?

 1-Nov-84 20:35:28-EST,319;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 1 Nov 84 20:35-EST
Date: Thursday, 1 November 1984, 20:30-EST
From: David Chapman <Zvona at MIT-OZ>
To: BUG-zwei at MIT-OZ

In zwei in Release 5.1, Experimental MIT 1.4, FEP 22, on Lisp Machine Jim Morrison (3600):

com-macroexpand-expression should respect prin1.
 2-Nov-84 01:23:51-EST,448;000000000000
Received: from MIT-APIARY-5 by MIT-OZ via Chaosnet; 2 Nov 84 01:23-EST
Date: Friday, 2 November 1984, 01:26-EST
From:  <Henry at MIT-OZ>
Subject: Help on Extended command completion
To: Bug-Zwei at MIT-OZ

In Symbolics 3600 Zwei in Release 5.2, FEP 18, on Lisp Machine Apiary-5:

When you do Meta-X <something> Help and it prints out the list of completions, 
it would be helpful if a mouse button ran Describe Command on that command.

 2-Nov-84 21:34:58-EST,789;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 2 Nov 84 21:34-EST
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 120505; Fri 2-Nov-84 21:35:03-EST
Date: Friday, 2 November 1984, 21:34-EST
From: David A. Moon <Moon at SCRC-TENEX>
To: David Chapman <Zvona at MIT-OZ>
cc: BUG-zwei at MIT-OZ
In-Reply-To: The message of 1 Nov 84 20:30-EST from David Chapman <Zvona at MIT-OZ>
Message-ID: <841102213447.2.MOON@EUPHRATES.SCRC.Symbolics.COM>

    Date: Thursday, 1 November 1984, 20:30-EST
    From: David Chapman <Zvona at MIT-OZ>

    In zwei in Release 5.1, Experimental MIT 1.4, FEP 22, on Lisp Machine Jim Morrison (3600):

    com-macroexpand-expression should respect prin1.

Why?  It doesn't call PRINT, it calls GRIND-TOP-LEVEL.
 2-Nov-84 21:50:07-EST,865;000000000000
Mail-From: ZVONA created at  2-Nov-84 21:49:56
Date: Fri, 2 Nov 1984  21:49 EST
Message-ID: <ZVONA.12060489942.BABYL@MIT-OZ>
From: ZVONA@MIT-OZ
To:   "David A. Moon" <Moon@SCRC-TENEX>
Cc:   BUG-zwei@MIT-OZ
In-reply-to: Msg of 2 Nov 1984 21:34-EST from David A. Moon <Moon at SCRC-TENEX>

    Date: Friday, 2 November 1984, 21:34-EST
    From: David A. Moon <Moon at SCRC-TENEX>
    To:   David Chapman <Zvona>
    cc:   BUG-zwei

        Date: Thursday, 1 November 1984, 20:30-EST
        From: David Chapman <Zvona at MIT-OZ>

        In zwei in Release 5.1, Experimental MIT 1.4, FEP 22, on Lisp Machine Jim Morrison (3600):

        com-macroexpand-expression should respect prin1.

    Why?  It doesn't call PRINT, it calls GRIND-TOP-LEVEL.

Right, and I'd rather it called GPRINT; PRIN1 is the mechanism for
letting me make it do that.
 2-Nov-84 22:31:11-EST,1293;000000000000
Received: from SCRC-STONY-BROOK by MIT-OZ via Chaosnet; 2 Nov 84 22:30-EST
Received: from SCRC-EUPHRATES by SCRC-STONY-BROOK via CHAOS with CHAOS-MAIL id 120531; Fri 2-Nov-84 22:30:21-EST
Date: Friday, 2 November 1984, 22:30-EST
From: David A. Moon <Moon at SCRC-TENEX>
To: ZVONA at MIT-OZ
cc: BUG-zwei at MIT-OZ
In-Reply-To: <ZVONA.12060489942.BABYL@MIT-OZ>
Message-ID: <841102223002.9.MOON@EUPHRATES.SCRC.Symbolics.COM>

    Date: Fri, 2 Nov 1984  21:49 EST
    From: ZVONA@MIT-OZ

	Date: Friday, 2 November 1984, 21:34-EST
	From: David A. Moon <Moon at SCRC-TENEX>
	To:   David Chapman <Zvona>
	cc:   BUG-zwei

	    Date: Thursday, 1 November 1984, 20:30-EST
	    From: David Chapman <Zvona at MIT-OZ>

	    In zwei in Release 5.1, Experimental MIT 1.4, FEP 22, on Lisp Machine Jim Morrison (3600):

	    com-macroexpand-expression should respect prin1.

	Why?  It doesn't call PRINT, it calls GRIND-TOP-LEVEL.

    Right, and I'd rather it called GPRINT; PRIN1 is the mechanism for
    letting me make it do that.

I don't agree.  The variable PRIN1 is the mechanism for changing how the
read-eval-print loop prints things.

If you want to redefine the grinder (certainly a reasonable thing to
want to do, the present one is old and crufty), redefine it.
 6-Nov-84 01:23:46-EST,563;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 6 Nov 84 01:23-EST
Date: Tuesday, 6 November 1984, 01:26-EST
From:  <CFRY at MIT-OZ>
Subject: pop-up-edstring
To: BUG-ZWEI at MIT-OZ

In ZWEI in Release 5.1, Experimental MIT 1.4, Experimental FB 200.0,
FEP 18, on Lisp Machine Janis Joplin (3600):

Is there a function like pop-up-edstring which takes an arbitrary lisp expression,
grinds it into the window which is popped up, 
and allows you to edit with blinking matching parens?

If not, how do I hack pop-upedstring to make it have this behaviour?
 9-Nov-84 19:41:13-EST,309;000000000000
Received: from MIT-MC by MIT-OZ via Chaosnet; 9 Nov 84 19:41-EST
Date: Friday, 9 November 1984, 19:41-EST
From: David Chapman <Zvona at MIT-OZ>
To: Bug-Zwei at MIT-OZ

In Symbolics 3600 Zwei in System 242.356, Hardcopy 20.10, FEP 22, on Lisp Machine Sid Vicious:

defpackage does not indent sensibly.
